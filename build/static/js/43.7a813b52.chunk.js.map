{"version":3,"sources":["components/Modal/Modal.tsx","containers/QuestionBank/QuestionSettings/Courses/Courses.tsx","containers/QuestionBank/QuestionSettings/SettingsComponents/SchoolLevelSelect.tsx","containers/QuestionBank/QuestionSettings/Courses/AddCourse.tsx","containers/QuestionBank/QuestionSettings/EducationCategories/EducationCategories.tsx","containers/QuestionBank/QuestionSettings/EducationCategories/AddEducationCategory.tsx","containers/QuestionBank/QuestionSettings/QuestionTypes/QuestionTypes.tsx","containers/QuestionBank/QuestionSettings/QuestionTypes/AddQuestionType.tsx","containers/QuestionBank/QuestionSettings/SchoolLevels/SchoolLevels.tsx","containers/QuestionBank/QuestionSettings/SettingsComponents/EducationCategorySelect.tsx","containers/QuestionBank/QuestionSettings/SchoolLevels/AddSchoolLevel.tsx","containers/QuestionBank/QuestionSettings/QuestionSettings.tsx"],"names":["Themes","ModalMarginTop","ModalSize","Modal","props","themeColor","title","backDrop","theme","close","backDropClose","widthSizeClass","displayClose","padding","body","footer","primary","secondary","danger","success","warning","onClick","className","undefined","marginTop","none","style","width","maxHeight","height","maxWidth","overflowY","margin","zIndex","default","children","CoursesAction","SchoolLevelSelect","schoolLevels","school_levels","map","item","i","loading","setSchool_levels","find","itm","school_level_id","filter","x","school_level_name","description","AddCourse","useState","course_id","setCourse_id","course_name","setCourse_name","course_code","setCourse_code","setDescription","chapters","setChapters","formError","setFormError","setLoading","openAdd","chapter","addChapter","setAddChapter","submitCourse","e","a","preventDefault","selectedCourse","action","Update","element","msg","obj","axios","patch","API","APPLICATION","res","PushPopupAlert","PopupAlertTheme","info","setSelectedCourse","closeModal","console","log","post","response","data","errors","length","message","useEffect","onSubmit","disabled","onChange","target","value","type","minHeight","placeholder","name","status","id","uuidv4","addNewChapter","View","deleteSelected","Delete","EducationCategoryTypeAction","Courses","connect","auth","periods","system","course","loadApplicationPeriods","setSelectedPeriod","loadSchoolLevels","setSelectedEducationCategory","loadCourses","addNew","setAddNew","deleteCourseFn","delete","courses","Loading","extraLarge","state","medium","AddEducationCategory","education_institute_id","setEducation_institute_id","education_category_title","setEducation_category_title","submitEducationCategory","selectedEducationCategory","QT_QuestionTypeAction","EducationCategories","loadEducationCategories","deleteEducationCategoryFn","education_category","education_categories","AddQuestionType","setTitle","setElement","submitQuestionType","selectedQuestionType","put","QBank","questionTypeElements","key","questionTypes","selected","SchoolLevelsAction","QuestionTypes","loadQuestionTypes","setSelectedQuestionType","deleteQuestionTypeFn","questionType","EducationCategorySelect","setEducationCategories","AddSchoolLevel","setSchool_level_id","school_level_title","setSchool_level_title","setEducation_category","submitSchoolLevel","selectedSchoolLevel","education_institute","SettingsType","SchoolLevels","setSelectedSchoolLevel","school_level","QuestionSettings","settings","settingType","caption","educationCategory","selectedSetting","this","setState","Component"],"mappings":"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","file":"static/js/43.7a813b52.chunk.js","sourcesContent":["/**\n * @description Modal design\n * @done_by Niyongabo\n */\nimport { MdClose } from \"react-icons/md\";\n\nexport enum Themes {\n  default = \"default\",\n  primary = \"primary\",\n  secondary = \"secondary\",\n  danger = \"danger\",\n  success = \"success\",\n  warning = \"warning\",\n}\n\nexport enum ModalMarginTop {\n  none = \"top-0\",\n  small = \"top-28\",\n  medium = \"top-1/3\",\n  large = \"top-1/2\",\n  extra = \"top-2/3\",\n}\n\nexport enum ModalSize {\n  small = \"max-w-sm\",\n  medium = \"max-w-screen-sm\",\n  large = \"max-w-screen-md\",\n  extraLarge = \"max-w-screen-lg\",\n  maxWidth = \"max-w-screen h-full\",\n}\n\ninterface ModalInterface {\n  title?: any;\n  backDrop: boolean;\n  theme: Themes;\n  close: Function;\n  backDropClose: boolean;\n  footer?: any;\n  children: any;\n  widthSizeClass: ModalSize;\n  displayClose: boolean;\n  padding: { title?: boolean; body?: boolean; footer?: boolean };\n  marginTop?: ModalMarginTop;\n}\n\nconst Modal = (props: ModalInterface): JSX.Element => {\n  const {\n    title,\n    backDrop,\n    theme,\n    close,\n    backDropClose,\n    widthSizeClass,\n    displayClose,\n    padding = { title: true, body: true, footer: true },\n  }: ModalInterface = props;\n\n  let themeColor: string;\n\n  switch (theme) {\n    case Themes.primary:\n      themeColor = \"blue-500\";\n      break;\n    case Themes.secondary:\n      themeColor = \"gray-300\";\n      break;\n    case Themes.danger:\n      themeColor = \"red-500\";\n      break;\n    case Themes.success:\n      themeColor = \"green-500\";\n      break;\n    case Themes.warning:\n      themeColor = \"yellow-500\";\n      break;\n    default:\n      themeColor = \"white\";\n      break;\n  }\n  return (\n    <>\n      <div onClick={(): void => backDropClose && close()} className={`animate__animated animate__fadeIn animate__faster modal fixed bg-black bg-opacity-${backDrop === true ? '60' : '0'}`}></div>\n      <div className={`fixed items-center justify-items-center ${props.marginTop === undefined ? ModalMarginTop.none : props.marginTop} left-0 right-0 bottom-0 bg-white rounded shadow-xl self-center ${widthSizeClass} animate__animated ${props.marginTop !== undefined && props.marginTop !== ModalMarginTop.none ? \"animate__fadeInUp\" : \"animate__zoomIn\"} animate__faster`} style={{width: '100%', maxHeight: '99vh', height: `${widthSizeClass === ModalSize.maxWidth ? props.marginTop === undefined ? \"100%\" : \"unset\" : \"fit-content\"}`, overflowY: 'auto', margin: 'auto', zIndex: 99999999}}>\n        <div className={`flex justify-between bg-${themeColor} ${padding.title === true ? \"py-4 px-4\" : \"\" } rounded-t text-${theme === Themes.default || theme === Themes.secondary ? \"black\" : \"white\"}`}>\n          {!title || title === \"\" ? <div></div> : (<h4 className={`text-lg font-bold `}>{title}</h4>)}\n          {displayClose === false ? \"\" : <div className=\"hover:text-red-600 hover:bg-red-100 rounded-full p-1 h-8 w-8\"><MdClose className=\"cursor-pointer font-extrabold text-2xl\" onClick={():void => close()} /></div>}\n        </div>\n        <div\n          className={`space-x-3 ${padding.body === true ? \"py-4 px-4\" : \"\"}`}\n        >\n          <div>{props.children !== \"\" ? props.children : \"\"}</div>\n        </div>\n        {props.footer !== undefined && props.footer !== \"\" ? (\n          <div\n            className={`flex float-right ${\n              padding.footer === true ? \"py-4 px-4\" : \"\"\n            }`}\n          >\n            {props.footer}\n          </div>\n        ) : ( \n          \"\"\n        )}\n      </div>\n    </>\n  );\n};\n\nexport default Modal;\n","import React, { Fragment, useEffect, useState } from 'react'\nimport { MdEdit } from 'react-icons/md'\nimport { CgDetailsMore } from 'react-icons/cg'\nimport { HiOutlineDocumentSearch } from 'react-icons/hi'\nimport { connect } from \"react-redux\";\nimport {\n  Auth,\n  loadApplicationPeriods,\n  setSelectedPeriod,\n  applicationPeriodsStoreInterface,\n  schoolLevelsStoreInterface,\n  loadSchoolLevels,\n  setSelectedEducationCategory,\n  System,\n  PushPopupAlert,\n  courseStoreInterface,\n  loadCourses,\n} from \"../../../../actions\";\nimport Loading from '../../../../components/Loading/Loading';\nimport { StoreState } from \"../../../../reducers\";\nimport Modal, { ModalSize, Themes } from '../../../../components/Modal/Modal';\nimport { PopupAlertData } from '../../../../components/Alert/Popup';\nimport { IoMdTrash } from 'react-icons/io';\nimport axios from 'axios';\nimport { API } from '../../../../utils/api';\nimport { PopupAlertTheme } from '../../../../interfaces/popupAlert';\nimport { course } from '../../../../interfaces';\nimport AddCourse from './AddCourse';\n\ninterface CoursePropsInterface {\n  system: System;\n  course: courseStoreInterface;\n  schoolLevels: schoolLevelsStoreInterface;\n  PushPopupAlert: (alert: PopupAlertData) => void;\n  loadSchoolLevels: (callback: (loading: boolean) => void) => void;\n  loadCourses: (callback: (loading: boolean) => void) => void;\n}\n\nexport enum CoursesAction {\n  Create = \"Create\",\n  View = \"View\",\n  Delete = \"Delete\",\n  Update = \"Update\",\n}\n\nexport interface S_CourseDetails {\n  action: CoursesAction;\n  selectedCourse: course;\n}\n\nconst _Courses = (props: CoursePropsInterface) => {\n  const [loading, setLoading] = useState<boolean>(false);\n  const [addNew, setAddNew] = useState<boolean>(false);\n  const [selectedCourse, setSelectedCourse] = useState<S_CourseDetails | null>(null);\n\n  const closeAddNewModal = (state: boolean) => {\n    props.loadCourses(setLoading);\n    setAddNew(state);\n  }\n\n  const deleteCourseFn = async (course: course) => {\n    if (course.course_id !== undefined) {\n      setLoading(true);\n      try {\n        const res = await axios.delete(`${API.APPLICATION}/course/${course.course_id}`);\n        props.loadCourses(setLoading);\n        props.PushPopupAlert({\n          title: `Course removed successfully`,\n          theme: PopupAlertTheme.success,\n        });\n        setSelectedCourse(null);\n        console.log(\"Deleted: \", res);\n      } catch (error) {\n        props.PushPopupAlert({\n          title: `Acton failed, Try again later!`,\n          theme: PopupAlertTheme.warning,\n        });\n        setLoading(false);\n        setSelectedCourse(null);\n        console.log(\"err: \", error);\n      }\n      // setLoading(false);\n    }\n  }\n\n  useEffect(() => {\n    if (props.schoolLevels.school_levels === null || props.schoolLevels.school_levels.length === 0) {\n      props.loadSchoolLevels(setLoading);\n    }\n    if (props.course.courses === null || props.course.courses.length === 0) {\n      props.loadCourses(setLoading);\n    }\n  }, [props, setLoading]);\n  return (\n    <Fragment>\n      <div className=\"mt-1\">\n        <div className=\"flex flex-row justify-between items-center bg-gray-100 py-1\">\n          <div className=\"text-blue-600 font-extrabold text-xl px-2\">List of courses</div>\n          {loading === false &&<div onClick={() => setAddNew(true)} className=\"btn bg-blue-600 text-white cursor-pointer hover:bg-blue-800\">Add new</div>}\n        </div>\n        <div className=\"flex flex-col\">\n          {props.course.courses === null || loading === true ? <Loading /> :\n          props.course.courses.length === 0 ?\n          <div className=\"text-gray-400 px-6 py-4 rounded border mt-4 text-xl font-extrabold flex flex-col items-center justify-center bg-gray-100\">\n            <HiOutlineDocumentSearch className=\"text-7xl text-gray-400 animate__animated animate__shakeX\" />\n            <span>No courses available</span>\n          </div> : \n          props.course.courses.map((item, i) => (\n            <div className={`border flex flex-row px-3 py-2 rounded items-center my-1 justify-between`}>\n              <div className=\"flex flex-col\">\n                <span className=\"text-gray-600 font-extrabold\">{item.course_name}</span>\n                <span className={`text-xs pr-5 text-gray-500`}>{item.description}</span>\n              </div>\n              <div className=\"flex flex-row items-center gap-2\">\n                <div \n                onClick={() => setSelectedCourse({ \n                  action: CoursesAction.View,\n                  selectedCourse: item\n                })} \n                className=\"bg-gray-50 hover:bg-gray-200 rounded-full px-1 py-1 cursor-pointer\">\n                  <CgDetailsMore className=\"text-3xl text-gray-700\"/>\n                </div>\n                <div \n                onClick={() => setSelectedCourse({ \n                  action: CoursesAction.Update,\n                  selectedCourse: item\n                })} \n                className=\"bg-gray-50 hover:bg-blue-100 rounded-full px-1 py-1 cursor-pointer\">\n                  <MdEdit className=\"text-3xl text-blue-700\"/>\n                </div>\n                <div \n                onClick={() => setSelectedCourse({ \n                  action: CoursesAction.Delete,\n                  selectedCourse: item\n                })} \n                className=\"bg-gray-100 hover:bg-red-100 rounded-full px-1 py-1 cursor-pointer\">\n                  <IoMdTrash className=\"text-3xl text-yellow-700\"/>\n                </div>\n              </div>\n              \n            </div>\n          ))}\n        </div>\n      </div>\n      {(addNew === true ||\n      (selectedCourse !== null && \n      (selectedCourse.action === CoursesAction.Update || selectedCourse.action === CoursesAction.View)\n      )) &&\n      <Modal\n        title={<div className=\"flex flex-row gap-4 items-center\">\n          <div className=\"flex flex-col\">\n            <span className=\"font-extrabold text-2xl text-gray-500\">\n              {selectedCourse !== null && selectedCourse.action === CoursesAction.Update ? selectedCourse.selectedCourse.course_name : selectedCourse !== null && selectedCourse.action === CoursesAction.View ? selectedCourse.selectedCourse.course_name : \"Add new course\"}\n            </span>\n            <span className=\"text-sm text-gray-500 font-normal\">\n              {selectedCourse !== null && selectedCourse.action === CoursesAction.Update ? \"Update the selected course\" : selectedCourse !== null && selectedCourse.action === CoursesAction.View ? \"View more details for the selected course\" : \"Course will be used in different components in the system, make sure what you're creating\"}\n            </span>\n          </div>\n        </div>}\n        backDrop={true}\n        theme={Themes.default}\n        close={() => {\n          setAddNew(false);\n          setSelectedCourse(null);\n        }}\n        widthSizeClass={ModalSize.extraLarge}\n        displayClose={true}\n        backDropClose={true}\n        padding={{title: true, body: true }} >\n          <AddCourse \n            closeModal={closeAddNewModal}\n            courses={props.course}\n            PushPopupAlert={props.PushPopupAlert}\n            selectedCourse={selectedCourse}\n            deleteSelected={setSelectedCourse}\n            schoolLevels={props.schoolLevels}\n            setSelectedCourse={setSelectedCourse}\n          />\n      </Modal>}\n      {selectedCourse !== null && selectedCourse.action === CoursesAction.Delete &&\n      <Modal\n        title={<div className=\"flex flex-row gap-4 items-center\">\n          <div className=\"flex flex-col\">\n            <span className=\"font-extrabold text-2xl text-gray-500\">{selectedCourse.selectedCourse.course_name}</span>\n          </div>\n        </div>}\n        backDrop={true}\n        theme={Themes.default}\n        close={() => setSelectedCourse(null)}\n        widthSizeClass={ModalSize.medium}\n        displayClose={true}\n        backDropClose={true}\n        padding={{title: true, body: true }} >\n          <div className=\"-mt-6\">\n            <span className=\"text-red-600 font-bold\">\n              Are you sure do you want to delete this course?\n            </span>\n            <div className=\"flex flex-row items-center justify-between mt-2\">\n              <div onClick={() => setSelectedCourse(null)} className=\"btn bg-gray-100 text-gray-700 cursor-pointer hover:bg-gray-200\">Cancel</div>\n              <div onClick={() => deleteCourseFn(selectedCourse.selectedCourse)} className=\"btn bg-red-600 text-white cursor-pointer hover:bg-red-800\">Yes, Delete</div>\n            </div>\n          </div>\n      </Modal>\n      }\n    </Fragment>\n  )\n}\n\n\nconst mapStateToProps = ({\n  auth,\n  periods,\n  schoolLevels,\n  system,\n  course\n}: StoreState): { auth: Auth; periods: applicationPeriodsStoreInterface, schoolLevels: schoolLevelsStoreInterface; system: System; course: courseStoreInterface } => {\n  return { auth: auth, periods: periods, schoolLevels: schoolLevels, system: system, course: course };\n};\n\nconst Courses = connect(mapStateToProps, {\n  loadApplicationPeriods,\n  setSelectedPeriod,\n  loadSchoolLevels,\n  setSelectedEducationCategory,\n  PushPopupAlert,\n  loadCourses,\n})(_Courses);\n\nexport default Courses;","import React from 'react'\nimport { ImCheckboxChecked, ImCheckboxUnchecked } from 'react-icons/im'\nimport { schoolLevelsStoreInterface } from '../../../../actions/school_levels'\n\ninterface SchoolLevelSelectProps {\n  schoolLevels: schoolLevelsStoreInterface;\n  school_levels: string[];\n  setSchool_levels: (item: string[]) => void;\n  loading: boolean;\n}\n\nconst SchoolLevelSelect = (props: SchoolLevelSelectProps) => {\n  return (\n    <div className=\"rounded flex flex-col gap-2 overflow-y-auto border pb-3 px-3\" style={{height: '80vh'}}>\n      <div className=\"flex flex-row items-center gap-2\">\n        <span className=\"text-sm text-gray-600 font-bold mt-2 mb-1\">Choose school level</span><span className=\"text-xs text-gray-500 italic mt-2 mb-1\">(Optional)</span>\n      </div>\n      {props.schoolLevels.school_levels?.map((item, i) => (\n        <div onClick={() => props.loading === false && props.setSchool_levels(props.school_levels.find(itm => itm === item.school_level_id) ? props.school_levels.filter(x => x !== item.school_level_id) :[...props.school_levels, item.school_level_id])} key={i + 1}className={`flex flex-row items-center gap-3 p-3 rounded cursor-pointer ${props.school_levels.find(itm => itm === item.school_level_id) ? \"bg-blue-50 text-blue-600\" : props.loading === true ? \"bg-gray-100 text-gray-400\" : \"bg-gray-100 text-gray-600\"} ${props.loading === true ? \"hover:bg-gray-100 hover:text-gray-400\" : \"hover:bg-blue-100 hover:text-blue-600\"}`}>\n          {props.school_levels.find(itm => itm === item.school_level_id) ?\n          <ImCheckboxChecked className=\"text-3xl\" /> :\n          <ImCheckboxUnchecked className=\"text-3xl\" />}\n          <div className=\"flex flex-col gap-0\">\n            <span className=\"font-extrabold text-lg\">{item.school_level_name}</span>\n            <span className=\"text-xs -mt-1\">{item.description}</span>\n          </div>\n        </div>\n      ))}\n    </div>\n  )\n}\n\nexport default SchoolLevelSelect\n","import axios from 'axios';\nimport React, { useEffect, useState } from 'react'\nimport { IoMdAddCircle } from 'react-icons/io';\nimport { courseStoreInterface } from '../../../../actions/course';\nimport { schoolLevelsStoreInterface } from '../../../../actions/school_levels';\nimport { PopupAlertData } from '../../../../components/Alert/Popup';\nimport { course, CourseChapter } from '../../../../interfaces/course';\nimport { formErrorInterface } from '../../../../interfaces/form';\nimport { PopupAlertTheme } from '../../../../interfaces/popupAlert';\nimport { API } from '../../../../utils/api';\nimport SchoolLevelSelect from '../SettingsComponents/SchoolLevelSelect';\nimport { CoursesAction, S_CourseDetails } from './Courses';\nimport { v4 as uuidv4 } from 'uuid';\n\ninterface AddCourseProps {\n  closeModal: (state: boolean) => void;\n  courses: courseStoreInterface;\n  PushPopupAlert: (alert: PopupAlertData) => void;\n  selectedCourse: S_CourseDetails | null;\n  deleteSelected: (selectedDetail: S_CourseDetails) => void;\n  schoolLevels: schoolLevelsStoreInterface;\n  setSelectedCourse: (courseDetail: S_CourseDetails | null) => void;\n}\n\nconst AddCourse = (props: AddCourseProps) => {\n  // States\n  const [course_id, setCourse_id] = useState<string>(\"\");\n  const [course_name, setCourse_name] = useState<string>(\"\");\n  const [course_code, setCourse_code] = useState<string>(\"\");\n  const [description, setDescription] = useState<string>(\"\");\n  const [chapters, setChapters] = useState<CourseChapter[]>([]);\n  const [school_levels, setSchool_levels] = useState<string[]>([])\n  const [formError, setFormError] = useState<formErrorInterface | null>(null);\n  const [loading, setLoading] = useState<boolean>(false);\n  const [addChapter, setAddChapter] = useState<{ openAdd: boolean; chapter: string; }>({ openAdd: false, chapter: \"\" });\n  const submitCourse = async (e: React.FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n    // validation\n    if (props.selectedCourse?.action === CoursesAction.Update && course_id === \"\") {\n      return setFormError({\n        element: \"course_id\",\n        msg: \"Please choose Course\"\n      });\n    }\n    else if (course_name === \"\") {\n      return setFormError({\n        element: \"course_name\",\n        msg: \"Please fill the course name\"\n      });\n    }\n    else if (course_code === \"\") {\n      return setFormError({\n        element: \"course_code\",\n        msg: \"Please fill the course code\"\n      });\n    }\n    else if (description === \"\") {\n      return setFormError({\n        element: \"description\",\n        msg: \"Please fill the description\"\n      });\n    } else {\n      setLoading(true);\n      try {\n        // Update current\n        if (props.selectedCourse !== null && props.selectedCourse.selectedCourse.course_id !== undefined) {\n          let obj: course = {\n            course_id: course_id,\n            course_name: course_name,\n            course_code: course_code,\n            description: description,\n            school_levels: school_levels,\n            chapters: chapters,\n          }\n          const res = await axios.patch(`${API.APPLICATION}/course`, obj);\n          props.PushPopupAlert({\n            title: `Course updated successfully`,\n            description: `After updating the course, you have access to delete and update it!`,\n            theme: PopupAlertTheme.info,\n          });\n          props.setSelectedCourse({\n            action: props.selectedCourse.action,\n            selectedCourse: obj\n          })\n          props.closeModal(false);\n          console.log(\"Result: \", res);\n        } else {\n          // Add new\n          const res = await axios.post(`${API.APPLICATION}/course`, {\n            course_name: course_name,\n            course_code: course_code,\n            description: description,\n            school_levels: school_levels,\n            chapters: chapters,\n          });\n          props.PushPopupAlert({\n            title: `Course added successfully`,\n            description: `After adding the Course, you have access to delete and update it!`,\n            theme: PopupAlertTheme.success,\n          });\n          props.closeModal(false);\n          console.log(\"Result: \", res);\n        }\n      } catch (error: any) {\n        if (error.response) {\n          if (error.response.data) {\n            if (error.response.data.errors !== undefined) {\n              if (error.response.data.errors.length > 0) {\n                props.PushPopupAlert({\n                  title: error.response.data.errors[0].message,\n                  theme: PopupAlertTheme.danger,\n                });\n              } else {\n                props.PushPopupAlert({\n                  title: `Failed to add course! Try again`,\n                  theme: PopupAlertTheme.danger,\n                });\n              }\n            } else {\n              props.PushPopupAlert({\n                title: `Failed to add course! Try again`,\n                theme: PopupAlertTheme.danger,\n              });\n            }\n          } else {\n            props.PushPopupAlert({\n              title: `Failed to add course! Try again`,\n              theme: PopupAlertTheme.danger,\n            });\n          }\n        }\n        console.log(\"Err: \", {...error});\n      }\n      setLoading(false);\n    }\n  }\n\n  const addNewChapter = () => {\n    if (addChapter.chapter === \"\") {\n      return setAddChapter({ openAdd: false, chapter: \"\" });\n    }\n    if (addChapter.openAdd === true) {\n      setAddChapter({ openAdd: true, chapter: \"\" });\n      setChapters([{\n        name: addChapter.chapter,\n        status: 1,\n        id: uuidv4(), \n      }, ...chapters]);\n    }\n  }\n\n  const removeChapter = (chapter: CourseChapter) => {\n    setChapters(chapters.filter(itm => itm.id !== chapter.id))\n  }\n\n  useEffect(() => {\n    if (props.selectedCourse !== null) {\n      console.log(\"Sle: \", props.selectedCourse);\n      if (course_id === \"\") {\n        setCourse_id(props.selectedCourse.selectedCourse.course_id);\n      }\n      if (course_name === \"\") {\n        setCourse_name(props.selectedCourse.selectedCourse.course_name);\n      }\n      if (course_code === \"\") {\n        setCourse_code(props.selectedCourse.selectedCourse.course_code);\n      }\n      if (description === \"\") {\n        setDescription(props.selectedCourse.selectedCourse.description);\n      }\n      if (school_levels.length === 0) {\n        setSchool_levels(props.selectedCourse.selectedCourse.school_levels);\n      }\n      if (chapters.length === 0) {\n        if (props.selectedCourse.selectedCourse.chapters !== undefined) {\n          setChapters(props.selectedCourse.selectedCourse.chapters);\n        }\n      }\n    }\n  }, [props, course_id, course_name, course_code, description, school_levels, chapters])\n  return (\n    <form onSubmit={submitCourse} className=\"-mt-2\">\n      <div className=\"grid md:grid-cols-12 gap-5\">\n        <div className=\"col-span-6\">\n          <SchoolLevelSelect\n            schoolLevels={props.schoolLevels}\n            school_levels={school_levels}\n            setSchool_levels={setSchool_levels}\n            loading={loading}\n          />\n        </div>\n        <div className=\"col-span-6\">\n          <div className=\"flex flex-col mb-2\">\n            <span className=\"text-sm text-gray-600 font-bold mb-1\">Course name</span>\n            <input \n              disabled={loading}\n              onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                setCourse_name(e.target.value);\n                setFormError(null);\n              }}\n            type=\"text\" value={course_name} \n            className={`input-white border-2 ${formError !== null && formError.element === \"course_name\" ? \"border-red-500\" : \"border-gray-500\"}`} />\n            {formError !== null && formError.element === \"course_name\" &&\n            <span className=\"text-red-600 font-bold text-xs\">{formError.msg}</span>}\n          </div>\n          <div className=\"flex flex-col mb-2\">\n            <span className=\"text-sm text-gray-600 font-bold mb-1\">Course code</span>\n            <input \n              disabled={loading}\n              onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                setCourse_code(e.target.value);\n                setFormError(null);\n              }}\n            type=\"text\" value={course_code} \n            className={`input-white border-2 ${formError !== null && formError.element === \"course_code\" ? \"border-red-500\" : \"border-gray-500\"}`} />\n            {formError !== null && formError.element === \"course_code\" &&\n            <span className=\"text-red-600 font-bold text-xs\">{formError.msg}</span>}\n          </div>\n          <div className=\"flex flex-col mb-2\">\n            <span className=\"text-sm text-gray-600 font-bold mt-2 mb-1\">Description</span>\n            <textarea \n              disabled={loading}\n              onChange={(e: React.ChangeEvent<HTMLTextAreaElement>) => {\n                setDescription(e.target.value);\n                setFormError(null);\n              }}\n              value={description}\n              className={`input-white border-2 ${formError !== null && formError.element === \"description\" ? \"border-red-500\" : \"border-gray-500\"}`}\n              style={{minHeight: '100px'}}>\n              {description}\n            </textarea>\n            {formError !== null && formError.element === \"description\" &&\n            <span className=\"text-red-600 font-bold text-xs\">{formError.msg}</span>}\n          </div>\n          <div className=\"flex flex-col mb-2\">\n            <div className=\"flex items-center justify-between\">\n              <span className=\"text-gray-600 font-bold\">Course chapters</span>\n              {addChapter.openAdd === false &&\n              <div onClick={() => setAddChapter({ openAdd: true, chapter: \"\" })} className=\"cursor-pointer btn bg-blue-50 text-blue-600 text-sm flex flex-row gap-1 items-center\">\n                <IoMdAddCircle className=\"text-2xl\" />\n                <span>Add chapter</span>\n              </div>}\n            </div>\n            {/* Add chapter */}\n            <div>\n              {addChapter.openAdd === true &&\n                <div className=\"flex flex-row items-center justify-between gap-2 mt-2\">\n                  <input \n                  onChange={(e) => {\n                    setAddChapter({ openAdd: true, chapter: e.target.value})\n                  }}\n                  value={addChapter.chapter}\n                  type=\"text\" placeholder=\"Chapter name\" className=\"input-white border-2 rounded border-gray-500\" />\n                  <div onClick={() => loading === false && addNewChapter()} className={`${loading === false ? \"cursor-pointer\" : \"cursor-not-allowed\"} btn ${addChapter.chapter === \"\" ? loading === true ? \"bg-gray-200\" : \"bg-red-600\" : \"bg-blue-600\"} text-white text-sm flex flex-row gap-1 items-center`}>\n                    <span>{addChapter.chapter === \"\" ? \"Close\" : \"Add\"}</span>\n                  </div>\n                </div>\n              }\n            </div>\n            {chapters.length === 0 ?\n            <div className=\"rounded bg-gray-50 px-2 py-6 mt-2 flex flex-col text-sm text-gray-400 font-extrabold text-center\">\n              No chapters added\n            </div> : \n            <div>\n              {chapters.map((item, i) => (\n                <div key={i + 1} className={`flex flex-row items-center justify-between border ${props.selectedCourse !== null && props.selectedCourse.selectedCourse.chapters && props.selectedCourse.selectedCourse.chapters.filter(itm => itm.id === item.id).length === 0 ? \"bg-gray-50 border-gray-200 text-gray-500\" : \"bg-white border-blue-200 text-blue-600\"} my-1 pl-2 pr-1 py-1 rounded text-sm font-bold`}>\n                  <span>{item.name}</span>\n                  <div onClick={() => loading === false && removeChapter(item)} className={`btn ${loading === false ? \"cursor-pointer\" : \"cursor-not-allowed\"} bg-red-100 text-red-700 text-xs`}>Remove</div>\n                </div>\n              ))}\n            </div>}\n          </div>\n          {addChapter.chapter === \"\" &&\n          <div className=\"flex flex-row justify-between items-center\">\n            {props.selectedCourse?.action === CoursesAction.View ? \n            <button onClick={() => \n            props.selectedCourse && \n            props.deleteSelected({ \n              action: CoursesAction.Delete,\n              selectedCourse: props.selectedCourse.selectedCourse\n            })} type=\"button\" className=\"btn border border-red-600 text-red-700\">Delete</button> : <div></div>}\n            <button \n            disabled={loading}\n            type=\"submit\" className={`btn bg-blue-600 text-white ${loading === true ? \"animate__animated animate__flash animate__infinite\" : \"\"}`}>\n              {loading === true ? \"Please wait...\" : props.selectedCourse !== null ? \"Update course\" : \"Add course\"}\n            </button>\n          </div>}\n        </div>\n      </div>\n    </form>\n  )\n}\n\nexport default AddCourse\n","import React, { Fragment, useEffect, useState } from 'react'\nimport { MdEdit } from 'react-icons/md'\nimport { CgDetailsMore } from 'react-icons/cg'\nimport { HiOutlineDocumentSearch } from 'react-icons/hi'\nimport { connect } from \"react-redux\";\nimport {\n  Auth,\n  loadApplicationPeriods,\n  setSelectedPeriod,\n  applicationPeriodsStoreInterface,\n  schoolLevelsStoreInterface,\n  loadEducationCategories,\n  setSelectedEducationCategory,\n  loadSchoolLevels,\n  System,\n  PushPopupAlert,\n} from \"../../../../actions\";\nimport Loading from '../../../../components/Loading/Loading';\nimport { StoreState } from \"../../../../reducers\";\nimport Modal, { ModalSize, Themes } from '../../../../components/Modal/Modal';\nimport { PopupAlertData } from '../../../../components/Alert/Popup';\nimport { IoMdTrash } from 'react-icons/io';\nimport axios from 'axios';\nimport { API } from '../../../../utils/api';\nimport { PopupAlertTheme } from '../../../../interfaces/popupAlert';\nimport { education_category } from '../../../../interfaces/education_category';\nimport AddEducationCategory from './AddEducationCategory';\n\ninterface EducationCategoryPropsInterface {\n  system: System;\n  schoolLevels: schoolLevelsStoreInterface;\n  PushPopupAlert: (alert: PopupAlertData) => void;\n  loadEducationCategories: (callback: (loading: boolean) => void) => void;\n  loadSchoolLevels: (callback: (loading: boolean) => void) => void;\n}\n\nexport enum EducationCategoryTypeAction {\n  Create = \"Create\",\n  View = \"View\",\n  Delete = \"Delete\",\n  Update = \"Update\",\n}\n\nexport interface E_EducationCategoryDetails {\n  action: EducationCategoryTypeAction;\n  selectedEducationCategory: education_category;\n}\n\nconst _EducationCategories = (props: EducationCategoryPropsInterface) => {\n  const [loading, setLoading] = useState<boolean>(false);\n  const [addNew, setAddNew] = useState<boolean>(false);\n  const [selectedEducationCategory, setSelectedEducationCategory] = useState<E_EducationCategoryDetails | null>(null);\n\n  const closeAddNewModal = (state: boolean) => {\n    setAddNew(state);\n    props.loadEducationCategories(setLoading);\n  }\n\n  const deleteEducationCategoryFn = async (education_category: education_category) => {\n    if (education_category.education_institute_id !== undefined) {\n      setLoading(true);\n      try {\n        const res = await axios.delete(`${API.APPLICATION}/educationinstitute/${education_category.education_institute_id}`);\n        props.loadEducationCategories(setLoading);\n        props.PushPopupAlert({\n          title: `Education category removed successfully`,\n          theme: PopupAlertTheme.success,\n        });\n        setSelectedEducationCategory(null);\n        console.log(\"Deleted: \", res);\n      } catch (error) {\n        console.log(\"err: \", error);\n      }\n      // setLoading(false);\n    }\n  }\n\n  useEffect(() => {\n    if (props.schoolLevels.education_categories === null || props.schoolLevels.education_categories.length === 0) {\n      props.loadEducationCategories(setLoading);\n    }\n    if (props.schoolLevels.school_levels === null || props.schoolLevels.school_levels.length === 0) {\n      props.loadSchoolLevels(setLoading);\n    }\n  }, [props, setLoading]);\n  return (\n    <Fragment>\n      <div className=\"mt-1\">\n        <div className=\"flex flex-row justify-between items-center bg-gray-100 py-1\">\n          <div className=\"text-blue-600 font-extrabold text-xl px-2\">Lists of education categories</div>\n          {loading === false &&<div onClick={() => setAddNew(true)} className=\"btn bg-blue-600 text-white cursor-pointer hover:bg-blue-800\">Add new</div>}\n        </div>\n        <div className=\"flex flex-col\">\n          {props.schoolLevels.education_categories === null || loading === true ? <Loading /> :\n          props.schoolLevels.education_categories.length === 0 ?\n          <div className=\"text-gray-400 px-6 py-4 rounded border mt-4 text-xl font-extrabold flex flex-col items-center justify-center bg-gray-100\">\n            <HiOutlineDocumentSearch className=\"text-7xl text-gray-400 animate__animated animate__shakeX\" />\n            <span>No education categories available</span>\n          </div> : \n          props.schoolLevels.education_categories.map((item, i) => (\n            <div className={`border flex flex-row px-3 py-2 rounded items-center my-1 justify-between`}>\n              <div className=\"flex flex-col\">\n                <span className=\"text-gray-600 font-extrabold\">{item.education_category_title}</span>\n                <span className={`text-xs pr-5 text-gray-500`}>{item.description}</span>\n              </div>\n              <div className=\"flex flex-row items-center gap-2\">\n                <div \n                onClick={() => setSelectedEducationCategory({ \n                  action: EducationCategoryTypeAction.View,\n                  selectedEducationCategory: item\n                })} \n                className=\"bg-gray-50 hover:bg-gray-200 rounded-full px-1 py-1 cursor-pointer\">\n                  <CgDetailsMore className=\"text-3xl text-gray-700\"/>\n                </div>\n                <div \n                onClick={() => setSelectedEducationCategory({ \n                  action: EducationCategoryTypeAction.Update,\n                  selectedEducationCategory: item\n                })} \n                className=\"bg-gray-50 hover:bg-blue-100 rounded-full px-1 py-1 cursor-pointer\">\n                  <MdEdit className=\"text-3xl text-blue-700\"/>\n                </div>\n                <div \n                onClick={() => setSelectedEducationCategory({ \n                  action: EducationCategoryTypeAction.Delete,\n                  selectedEducationCategory: item\n                })} \n                className=\"bg-gray-100 hover:bg-red-100 rounded-full px-1 py-1 cursor-pointer\">\n                  <IoMdTrash className=\"text-3xl text-yellow-700\"/>\n                </div>\n              </div>\n              \n            </div>\n          ))}\n        </div>\n      </div>\n      {(addNew === true ||\n      (selectedEducationCategory !== null && \n      (selectedEducationCategory.action === EducationCategoryTypeAction.Update || selectedEducationCategory.action === EducationCategoryTypeAction.View)\n      )) &&\n      <Modal\n        title={<div className=\"flex flex-row gap-4 items-center\">\n          <div className=\"flex flex-col\">\n            <span className=\"font-extrabold text-2xl text-gray-500\">\n              {selectedEducationCategory !== null && selectedEducationCategory.action === EducationCategoryTypeAction.Update ? selectedEducationCategory.selectedEducationCategory.education_category_title : selectedEducationCategory !== null && selectedEducationCategory.action === EducationCategoryTypeAction.View ? selectedEducationCategory.selectedEducationCategory.education_category_title : \"Add new education category\"}\n            </span>\n            <span className=\"text-sm text-gray-500 font-normal\">\n              {selectedEducationCategory !== null && selectedEducationCategory.action === EducationCategoryTypeAction.Update ? \"Update the selected education category\" : selectedEducationCategory !== null && selectedEducationCategory.action === EducationCategoryTypeAction.View ? \"View more details for the selected education category\" : \"An education category will be used in different components in the system, make sure what you're creating\"}\n            </span>\n          </div>\n        </div>}\n        backDrop={true}\n        theme={Themes.default}\n        close={() => {\n          setAddNew(false);\n          setSelectedEducationCategory(null);\n        }}\n        widthSizeClass={ModalSize.extraLarge}\n        displayClose={true}\n        backDropClose={true}\n        padding={{title: true, body: true }} >\n          <AddEducationCategory \n            closeModal={closeAddNewModal}\n            education_categories={props.schoolLevels}\n            PushPopupAlert={props.PushPopupAlert}\n            selectedEducationCategory={selectedEducationCategory}\n            deleteSelected={setSelectedEducationCategory}\n            schoolLevels={props.schoolLevels}\n          />\n      </Modal>}\n      {selectedEducationCategory !== null && selectedEducationCategory.action === EducationCategoryTypeAction.Delete &&\n      <Modal\n        title={<div className=\"flex flex-row gap-4 items-center\">\n          <div className=\"flex flex-col\">\n            <span className=\"font-extrabold text-2xl text-gray-500\">{selectedEducationCategory.selectedEducationCategory.education_category_title}</span>\n          </div>\n        </div>}\n        backDrop={true}\n        theme={Themes.default}\n        close={() => setSelectedEducationCategory(null)}\n        widthSizeClass={ModalSize.medium}\n        displayClose={true}\n        backDropClose={true}\n        padding={{title: true, body: true }} >\n          <div className=\"-mt-6\">\n            <span className=\"text-red-600 font-bold\">\n              Are you sure do you want to delete this education category?\n            </span>\n            <div className=\"flex flex-row items-center justify-between mt-2\">\n              <div onClick={() => setSelectedEducationCategory(null)} className=\"btn bg-gray-100 text-gray-700 cursor-pointer hover:bg-gray-200\">Cancel</div>\n              <div onClick={() => deleteEducationCategoryFn(selectedEducationCategory.selectedEducationCategory)} className=\"btn bg-red-600 text-white cursor-pointer hover:bg-red-800\">Yes, Delete</div>\n            </div>\n          </div>\n      </Modal>\n      }\n    </Fragment>\n  )\n}\n\n\nconst mapStateToProps = ({\n  auth,\n  periods,\n  schoolLevels,\n  system,\n}: StoreState): { auth: Auth; periods: applicationPeriodsStoreInterface, schoolLevels: schoolLevelsStoreInterface; system: System; } => {\n  return { auth: auth, periods: periods, schoolLevels: schoolLevels, system: system };\n};\n\nconst EducationCategories = connect(mapStateToProps, {\n  loadApplicationPeriods,\n  setSelectedPeriod,\n  loadEducationCategories,\n  setSelectedEducationCategory,\n  PushPopupAlert,\n  loadSchoolLevels,\n})(_EducationCategories);\n\nexport default EducationCategories;","import axios from 'axios';\nimport React, { useEffect, useState } from 'react'\nimport { schoolLevelsStoreInterface } from '../../../../actions/school_levels';\nimport { PopupAlertData } from '../../../../components/Alert/Popup';\nimport { formErrorInterface } from '../../../../interfaces/form';\nimport { PopupAlertTheme } from '../../../../interfaces/popupAlert';\nimport { API } from '../../../../utils/api';\nimport SchoolLevelSelect from '../SettingsComponents/SchoolLevelSelect';\nimport { EducationCategoryTypeAction, E_EducationCategoryDetails } from './EducationCategories';\n\ninterface AddEducationCategoryProps {\n  closeModal: (state: boolean) => void;\n  education_categories: schoolLevelsStoreInterface;\n  PushPopupAlert: (alert: PopupAlertData) => void;\n  selectedEducationCategory: E_EducationCategoryDetails | null;\n  deleteSelected: (selectedDetail: E_EducationCategoryDetails) => void;\n  schoolLevels: schoolLevelsStoreInterface;\n}\n\nconst AddEducationCategory = (props: AddEducationCategoryProps) => {\n  // States\n  const [education_institute_id, setEducation_institute_id] = useState<string>(\"\");\n  const [education_category_title, setEducation_category_title] = useState<string>(\"\");\n  const [description, setDescription] = useState<string>(\"\");\n  const [school_levels, setSchool_levels] = useState<string[]>([]);\n  const [formError, setFormError] = useState<formErrorInterface | null>(null);\n  const [loading, setLoading] = useState<boolean>(false);\n  const submitEducationCategory = async (e: React.FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n    // validation\n    if (props.selectedEducationCategory?.action === EducationCategoryTypeAction.Update && education_institute_id === \"\") {\n      return setFormError({\n        element: \"education_institute_id\",\n        msg: \"Please choose education category\"\n      });\n    }\n    else if (education_category_title === \"\") {\n      return setFormError({\n        element: \"education_category_title\",\n        msg: \"Please fill the education category title\"\n      });\n    }\n    else if (description === \"\") {\n      return setFormError({\n        element: \"description\",\n        msg: \"Please fill the description\"\n      });\n    } else {\n      setLoading(true);\n      try {\n        // Update current\n        console.log(\"Sel schoo le: \", school_levels);\n        if (props.selectedEducationCategory !== null && props.selectedEducationCategory.selectedEducationCategory.education_institute_id !== undefined) {\n          const res = await axios.patch(`${API.APPLICATION}/educationinstitute`, {\n            education_institute_id: education_institute_id,\n            education_category_title: education_category_title,\n            description: description,\n            school_levels: school_levels,\n          });\n          props.PushPopupAlert({\n            title: `Education category updated successfully`,\n            description: `After updating the education category, you have access to delete and update it!`,\n            theme: PopupAlertTheme.info,\n          });\n          props.closeModal(false);\n          console.log(\"Result: \", res);\n        } else {\n          // Add new\n          const res = await axios.post(`${API.APPLICATION}/educationinstitute`, {\n            education_category_title: education_category_title,\n            description: description,\n            school_levels: school_levels,\n          });\n          props.PushPopupAlert({\n            title: `Education category added successfully`,\n            description: `After adding the Education category, you have access to delete and update it!`,\n            theme: PopupAlertTheme.success,\n          });\n          props.closeModal(false);\n          console.log(\"Result: \", res);\n        }\n      } catch (error) {\n        props.PushPopupAlert({\n          title: `Failed to add Education category! Try again`,\n          theme: PopupAlertTheme.danger,\n        });\n        console.log(\"Err: \", error);\n      }\n      setLoading(false);\n    }\n  }\n\n  useEffect(() => {\n    if (props.selectedEducationCategory !== null) {\n      if (education_institute_id === \"\") {\n        setEducation_institute_id(props.selectedEducationCategory.selectedEducationCategory.education_institute_id);\n      }\n      if (education_category_title === \"\") {\n        setEducation_category_title(props.selectedEducationCategory.selectedEducationCategory.education_category_title);\n      }\n      if (description === \"\") {\n        setDescription(props.selectedEducationCategory.selectedEducationCategory.description);\n      }\n      if (school_levels.length === 0) {\n        setSchool_levels(props.selectedEducationCategory.selectedEducationCategory.school_levels);\n      }\n    }\n  }, [props, education_institute_id, education_category_title, description, school_levels])\n  return (\n    <form onSubmit={submitEducationCategory} className=\"-mt-2\">\n      <div className=\"grid md:grid-cols-12 gap-5\">\n        <div className=\"col-span-6\">\n          <SchoolLevelSelect\n            schoolLevels={props.schoolLevels}\n            school_levels={school_levels}\n            setSchool_levels={setSchool_levels}\n            loading={loading}\n          />\n        </div>\n        <div className=\"col-span-6\">\n          <div className=\"flex flex-col mb-2\">\n            <span className=\"text-sm text-gray-600 font-bold mb-1\">Title</span>\n            <input \n              disabled={loading}\n              onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                setEducation_category_title(e.target.value);\n                setFormError(null);\n              }}\n            type=\"text\" value={education_category_title} \n            className={`input-white border-2 ${formError !== null && formError.element === \"title\" ? \"border-red-500\" : \"border-gray-500\"}`} />\n            {formError !== null && formError.element === \"title\" &&\n            <span className=\"text-red-600 font-bold text-xs\">{formError.msg}</span>}\n          </div>\n          <div className=\"flex flex-col mb-2\">\n            <span className=\"text-sm text-gray-600 font-bold mt-2 mb-1\">Description</span>\n            <textarea \n              disabled={loading}\n              onChange={(e: React.ChangeEvent<HTMLTextAreaElement>) => {\n                setDescription(e.target.value);\n                setFormError(null);\n              }}\n              value={description}\n              className={`input-white border-2 ${formError !== null && formError.element === \"description\" ? \"border-red-500\" : \"border-gray-500\"}`}\n              style={{minHeight: '100px'}}>\n              {description}\n            </textarea>\n            {formError !== null && formError.element === \"description\" &&\n            <span className=\"text-red-600 font-bold text-xs\">{formError.msg}</span>}\n          </div>\n          <div className=\"flex flex-row justify-between items-center\">\n            {props.selectedEducationCategory?.action === EducationCategoryTypeAction.View ? \n            <button onClick={() => \n            props.selectedEducationCategory && \n            props.deleteSelected({ \n              action: EducationCategoryTypeAction.Delete,\n              selectedEducationCategory: props.selectedEducationCategory.selectedEducationCategory\n            })} type=\"button\" className=\"btn border border-red-600 text-red-700\">Delete</button> : <div></div>}\n            <button \n            disabled={loading}\n            type=\"submit\" className={`btn bg-blue-600 text-white ${loading === true ? \"animate__animated animate__flash animate__infinite\" : \"\"}`}>\n              {loading === true ? \"Please wait...\" : props.selectedEducationCategory !== null ? \"Update\" : \"Add\"}\n            </button>\n          </div>\n        </div>\n      </div>\n    </form>\n  )\n}\n\nexport default AddEducationCategory\n","import React, { Fragment, useEffect, useState } from 'react'\nimport { MdEdit } from 'react-icons/md'\nimport { CgDetailsMore } from 'react-icons/cg'\nimport { HiOutlineDocumentSearch } from 'react-icons/hi'\nimport { connect } from \"react-redux\";\nimport {\n  Auth,\n  loadApplicationPeriods,\n  setSelectedPeriod,\n  applicationPeriodsStoreInterface,\n  schoolLevelsStoreInterface,\n  loadEducationCategories,\n  setSelectedEducationCategory,\n  questionTypesStoreInterface,\n  loadQuestionTypes,\n  System,\n  PushPopupAlert,\n} from \"../../../../actions\";\nimport Loading from '../../../../components/Loading/Loading';\nimport { StoreState } from \"../../../../reducers\";\nimport Modal, { ModalSize, Themes } from '../../../../components/Modal/Modal';\nimport AddQuestionType from './AddQuestionType';\nimport { PopupAlertData } from '../../../../components/Alert/Popup';\nimport { IoMdTrash } from 'react-icons/io';\nimport { questionType } from '../../../../interfaces/question';\nimport axios from 'axios';\nimport { API } from '../../../../utils/api';\nimport { PopupAlertTheme } from '../../../../interfaces/popupAlert';\n\ninterface QuestionTypesPropsInterface {\n  system: System;\n  questionTypes: questionTypesStoreInterface;\n  loadQuestionTypes: (callback: (loading: boolean) => void) => void;\n  PushPopupAlert: (alert: PopupAlertData) => void;\n}\n\nexport enum QT_QuestionTypeAction {\n  Create = \"Create\",\n  View = \"View\",\n  Delete = \"Delete\",\n  Update = \"Update\",\n}\n\nexport interface QT_QuestionTypeDetails {\n  action: QT_QuestionTypeAction;\n  selectedQuestionType: questionType;\n}\n\nconst _QuestionTypes = (props: QuestionTypesPropsInterface) => {\n  const [loading, setLoading] = useState<boolean>(false);\n  const [addNew, setAddNew] = useState<boolean>(false);\n  const [selectedQuestionType, setSelectedQuestionType] = useState<QT_QuestionTypeDetails | null>(null);\n\n  const closeAddNewModal = (state: boolean) => {\n    setAddNew(state);\n    props.loadQuestionTypes(setLoading);\n  }\n\n  const deleteQuestionTypeFn = async (questionType: questionType) => {\n    if (questionType.id !== undefined) {\n      setLoading(true);\n      try {\n        const res = await axios.delete(`${API.QBank}/question-type/${questionType.id}`);\n        props.loadQuestionTypes(setLoading);\n        props.PushPopupAlert({\n          title: `Question type removed successfully`,\n          theme: PopupAlertTheme.success,\n        });\n        setSelectedQuestionType(null);\n        console.log(\"Deleted: \", res);\n      } catch (error: any) {\n        console.log(\"err: \", {...error});\n      }\n      // setLoading(false);\n    }\n  }\n\n  useEffect(() => {\n    if (props.questionTypes.questionTypes === null || props.questionTypes.questionTypes.length === 0) {\n      props.loadQuestionTypes(setLoading);\n    }\n  }, [props, setLoading]);\n  return (\n    <Fragment>\n      <div className=\"mt-1\">\n        <div className=\"flex flex-row justify-between items-center bg-gray-100 py-1\">\n          <div className=\"text-blue-600 font-extrabold text-xl px-2\">Lists of question types</div>\n          {loading === false &&<div onClick={() => setAddNew(true)} className=\"btn bg-blue-600 text-white cursor-pointer hover:bg-blue-800\">Add new</div>}\n        </div>\n        <div className=\"flex flex-col\">\n          {props.questionTypes.questionTypes === null || loading === true ? <Loading /> :\n          props.questionTypes.questionTypes.length === 0 ?\n          <div className=\"text-gray-400 px-6 py-4 rounded border mt-4 text-xl font-extrabold flex flex-col items-center justify-center bg-gray-100\">\n            <HiOutlineDocumentSearch className=\"text-7xl text-gray-400 animate__animated animate__shakeX\" />\n            <span>No question types available</span>\n          </div> : \n          props.questionTypes.questionTypes.map((item, i) => (\n            <div className={`border flex flex-row px-3 py-2 rounded items-center my-1 justify-between`}>\n              <div className=\"flex flex-col\">\n                <span className=\"text-gray-600 font-extrabold\">{item.title}</span>\n                <span className={`text-xs pr-5 text-gray-500`}>{item.description}</span>\n              </div>\n              <div className=\"flex flex-row items-center gap-2\">\n                <div \n                onClick={() => setSelectedQuestionType({ \n                  action: QT_QuestionTypeAction.View,\n                  selectedQuestionType: item\n                })} \n                className=\"bg-gray-50 hover:bg-gray-200 rounded-full px-1 py-1 cursor-pointer\">\n                  <CgDetailsMore className=\"text-3xl text-gray-700\"/>\n                </div>\n                <div \n                onClick={() => setSelectedQuestionType({ \n                  action: QT_QuestionTypeAction.Update,\n                  selectedQuestionType: item\n                })} \n                className=\"bg-gray-50 hover:bg-blue-100 rounded-full px-1 py-1 cursor-pointer\">\n                  <MdEdit className=\"text-3xl text-blue-700\"/>\n                </div>\n                <div \n                onClick={() => setSelectedQuestionType({ \n                  action: QT_QuestionTypeAction.Delete,\n                  selectedQuestionType: item\n                })} \n                className=\"bg-gray-100 hover:bg-red-100 rounded-full px-1 py-1 cursor-pointer\">\n                  <IoMdTrash className=\"text-3xl text-yellow-700\"/>\n                </div>\n              </div>\n              \n            </div>\n          ))}\n        </div>\n      </div>\n      {(addNew === true ||\n      (selectedQuestionType !== null && \n      (selectedQuestionType.action === QT_QuestionTypeAction.Update || selectedQuestionType.action === QT_QuestionTypeAction.View)\n      )) &&\n      <Modal\n        title={<div className=\"flex flex-row gap-4 items-center\">\n          <div className=\"flex flex-col\">\n            <span className=\"font-extrabold text-2xl text-gray-500\">\n              {selectedQuestionType !== null && selectedQuestionType.action === QT_QuestionTypeAction.Update ? selectedQuestionType.selectedQuestionType.title : selectedQuestionType !== null && selectedQuestionType.action === QT_QuestionTypeAction.View ? selectedQuestionType.selectedQuestionType.title : \"Add new question type\"}\n            </span>\n            <span className=\"text-sm text-gray-500 font-normal\">\n              {selectedQuestionType !== null && selectedQuestionType.action === QT_QuestionTypeAction.Update ? \"Update the selected question type\" : selectedQuestionType !== null && selectedQuestionType.action === QT_QuestionTypeAction.View ? \"View more details for the selected question type\" : \"New question type will be visible at the time of question preparation\"}\n            </span>\n          </div>\n        </div>}\n        backDrop={true}\n        theme={Themes.default}\n        close={() => {\n          setAddNew(false);\n          setSelectedQuestionType(null);\n        }}\n        widthSizeClass={ModalSize.medium}\n        displayClose={true}\n        backDropClose={true}\n        padding={{title: true, body: true }} >\n          <AddQuestionType \n            closeModal={closeAddNewModal}\n            questionTypes={props.questionTypes}\n            PushPopupAlert={props.PushPopupAlert}\n            selectedQuestionType={selectedQuestionType}\n            deleteSelected={setSelectedQuestionType}\n          />\n      </Modal>}\n      {selectedQuestionType !== null && selectedQuestionType.action === QT_QuestionTypeAction.Delete &&\n      <Modal\n        title={<div className=\"flex flex-row gap-4 items-center\">\n          <div className=\"flex flex-col\">\n            <span className=\"font-extrabold text-2xl text-gray-500\">{selectedQuestionType.selectedQuestionType.title}</span>\n          </div>\n        </div>}\n        backDrop={true}\n        theme={Themes.default}\n        close={() => setSelectedQuestionType(null)}\n        widthSizeClass={ModalSize.medium}\n        displayClose={true}\n        backDropClose={true}\n        padding={{title: true, body: true }} >\n          <div className=\"-mt-6\">\n            <span className=\"text-red-600 font-bold\">\n              Are you sure do you want to delete this question type?\n            </span>\n            <div className=\"flex flex-row items-center justify-between mt-2\">\n              <div onClick={() => setSelectedQuestionType(null)} className=\"btn bg-gray-100 text-gray-700 cursor-pointer hover:bg-gray-200\">Cancel</div>\n              <div onClick={() => deleteQuestionTypeFn(selectedQuestionType.selectedQuestionType)} className=\"btn bg-red-600 text-white cursor-pointer hover:bg-red-800\">Yes, Delete</div>\n            </div>\n          </div>\n      </Modal>\n      }\n    </Fragment>\n  )\n}\n\n\nconst mapStateToProps = ({\n  auth,\n  periods,\n  schoolLevels,\n  questionTypes,\n  system,\n}: StoreState): { auth: Auth; periods: applicationPeriodsStoreInterface, schoolLevels: schoolLevelsStoreInterface; questionTypes: questionTypesStoreInterface; system: System; } => {\n  return { auth: auth, periods: periods, schoolLevels: schoolLevels, questionTypes: questionTypes, system: system };\n};\n\nconst QuestionTypes = connect(mapStateToProps, {\n  loadApplicationPeriods,\n  setSelectedPeriod,\n  loadEducationCategories,\n  setSelectedEducationCategory,\n  loadQuestionTypes,\n  PushPopupAlert,\n})(_QuestionTypes);\n\nexport default QuestionTypes;","import axios from 'axios';\nimport React, { useEffect, useState } from 'react'\nimport { questionTypesStoreInterface } from '../../../../actions/questionTypes';\nimport { PopupAlertData } from '../../../../components/Alert/Popup';\nimport { formErrorInterface } from '../../../../interfaces/form';\nimport { PopupAlertTheme } from '../../../../interfaces/popupAlert';\nimport { questionTypeElements } from '../../../../interfaces/question'\nimport { API } from '../../../../utils/api';\nimport { QT_QuestionTypeAction, QT_QuestionTypeDetails } from './QuestionTypes';\n\ninterface AddQuestionTypeProps {\n  closeModal: (state: boolean) => void;\n  questionTypes: questionTypesStoreInterface;\n  PushPopupAlert: (alert: PopupAlertData) => void;\n  selectedQuestionType: QT_QuestionTypeDetails | null;\n  deleteSelected: (selectedDetail: QT_QuestionTypeDetails) => void;\n}\n\nconst AddQuestionType = (props: AddQuestionTypeProps) => {\n  // States\n  const [title, setTitle] = useState<string>(\"\");\n  const [element, setElement] = useState<string>(\"\");\n  const [description, setDescription] = useState<string>(\"\");\n  const [formError, setFormError] = useState<formErrorInterface | null>(null);\n  const [loading, setLoading] = useState<boolean>(false);\n  const submitQuestionType = async (e: React.FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n    // validation\n    if (title === \"\") {\n      return setFormError({\n        element: \"title\",\n        msg: \"Please fill the title\"\n      });\n    }\n    else if (element === \"\" || element.length === 0) {\n      return setFormError({\n        element: \"element\",\n        msg: \"Please fill the element\"\n      });\n    }\n    else if (description === \"\") {\n      return setFormError({\n        element: \"description\",\n        msg: \"Please fill the description\"\n      });\n    } else {\n      setLoading(true);\n      try {\n        // Update current\n        if (props.selectedQuestionType !== null && props.selectedQuestionType.selectedQuestionType.id !== undefined) {\n          const res = await axios.put(`${API.QBank}/question-type/${props.selectedQuestionType.selectedQuestionType.id}`, {\n            status: 1,\n            title: title,\n            element: element,\n            description: description,\n          });\n          props.PushPopupAlert({\n            title: `Question type updated successfully`,\n            description: `After updating the question type, you have access to delete and update it!`,\n            theme: PopupAlertTheme.info,\n          });\n          props.closeModal(false);\n          console.log(\"Result: \", res);\n        } else {\n          // Add new\n          const res = await axios.post(`${API.QBank}/question-type`, {\n            status: 1,\n            title: title,\n            element: element,\n            description: description,\n          });\n          props.PushPopupAlert({\n            title: `Question type added successfully`,\n            description: `After adding the question type, you have access to delete and update it!`,\n            theme: PopupAlertTheme.success,\n          });\n          props.closeModal(false);\n          console.log(\"Result: \", res);\n        }\n      } catch (error: any) {\n        props.PushPopupAlert({\n          title: `Failed to add question type! Try again`,\n          theme: PopupAlertTheme.danger,\n        });\n        console.log(\"Err: \", {...error});\n      }\n      setLoading(false);\n    }\n  }\n\n  useEffect(() => {\n    if (props.selectedQuestionType !== null) {\n      if (title === \"\") {\n        setTitle(props.selectedQuestionType.selectedQuestionType.title);\n      }\n      if (element === \"\") {\n        setElement(props.selectedQuestionType.selectedQuestionType.element);\n      }\n      if (description === \"\") {\n        setDescription(props.selectedQuestionType.selectedQuestionType.description);\n      }\n    }\n  }, [props, title, element, description])\n  return (\n    <form onSubmit={submitQuestionType} className=\"-mt-2\">\n      <div className=\"flex flex-col mb-2\">\n        <span className=\"text-sm text-gray-600 font-bold mt-2 mb-1\">Element</span>\n        {props.selectedQuestionType !== null ? \n        <div className=\"bg-blue-100 text-blue-600 font-bold px-3 py-2 rounded\">\n          {questionTypeElements.find(itm => props.selectedQuestionType && itm.key === props.selectedQuestionType.selectedQuestionType.element)?.value}\n        </div>\n        :\n        <select \n          disabled={loading}\n          onChange={(e: React.ChangeEvent<HTMLSelectElement>) => {\n            setElement(e.target.value);\n            setFormError(null);\n          }}\n        className={`input-white border-2 ${formError !== null && formError.element === \"element\" ? \"border-red-500\" : \"border-gray-500\"}`}>\n          <option value=\"\">Choose element</option>\n          {questionTypeElements.map((item, i) => (\n            <>\n            {props.questionTypes.questionTypes && props.questionTypes.questionTypes.find(itm => itm.element === item.key) === undefined &&\n            <option selected={element === item.key ? true : false} key={i + 1} value={item.key}>{item.value}</option>}</>\n          ))}\n        </select>\n        }\n        {formError !== null && formError.element === \"element\" &&\n        <span className=\"text-red-600 font-bold text-xs\">{formError.msg}</span>}\n      </div>\n      <div className=\"flex flex-col mb-2\">\n        <span className=\"text-sm text-gray-600 font-bold mb-1\">Title</span>\n        <input \n          disabled={loading}\n          onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n            setTitle(e.target.value);\n            setFormError(null);\n          }}\n        type=\"text\" value={title} \n        className={`input-white border-2 ${formError !== null && formError.element === \"title\" ? \"border-red-500\" : \"border-gray-500\"}`} />\n        {formError !== null && formError.element === \"title\" &&\n        <span className=\"text-red-600 font-bold text-xs\">{formError.msg}</span>}\n      </div>\n      <div className=\"flex flex-col mb-2\">\n        <span className=\"text-sm text-gray-600 font-bold mt-2 mb-1\">Description</span>\n        <textarea \n          disabled={loading}\n          onChange={(e: React.ChangeEvent<HTMLTextAreaElement>) => {\n            setDescription(e.target.value);\n            setFormError(null);\n          }}\n          value={description}\n          className={`input-white border-2 ${formError !== null && formError.element === \"description\" ? \"border-red-500\" : \"border-gray-500\"}`}\n          style={{minHeight: '100px'}}>\n          {description}\n        </textarea>\n        {formError !== null && formError.element === \"description\" &&\n        <span className=\"text-red-600 font-bold text-xs\">{formError.msg}</span>}\n      </div>\n      <div className=\"flex flex-row justify-between items-center\">\n        {props.selectedQuestionType?.action === QT_QuestionTypeAction.View ? \n        <button onClick={() => \n        props.selectedQuestionType && \n        props.deleteSelected({ \n          action: QT_QuestionTypeAction.Delete,\n          selectedQuestionType: props.selectedQuestionType.selectedQuestionType\n        })} type=\"button\" className=\"btn border border-red-600 text-red-700\">Delete</button> : <div></div>}\n        <button \n        disabled={loading}\n        type=\"submit\" className={`btn bg-blue-600 text-white ${loading === true ? \"animate__animated animate__flash animate__infinite\" : \"\"}`}>\n          {loading === true ? \"Please wait...\" : props.selectedQuestionType !== null ? \"Update question type\" : \"Add question type\"}\n        </button>\n      </div>\n    </form>\n  )\n}\n\nexport default AddQuestionType\n","import React, { Fragment, useEffect, useState } from 'react'\nimport { MdEdit } from 'react-icons/md'\nimport { CgDetailsMore } from 'react-icons/cg'\nimport { HiOutlineDocumentSearch } from 'react-icons/hi'\nimport { connect } from \"react-redux\";\nimport {\n  Auth,\n  loadApplicationPeriods,\n  setSelectedPeriod,\n  applicationPeriodsStoreInterface,\n  schoolLevelsStoreInterface,\n  loadSchoolLevels,\n  setSelectedEducationCategory,\n  System,\n  PushPopupAlert,\n} from \"../../../../actions\";\nimport Loading from '../../../../components/Loading/Loading';\nimport { StoreState } from \"../../../../reducers\";\nimport Modal, { ModalSize, Themes } from '../../../../components/Modal/Modal';\nimport AddQuestionType from './AddSchoolLevel';\nimport { PopupAlertData } from '../../../../components/Alert/Popup';\nimport { IoMdTrash } from 'react-icons/io';\nimport axios from 'axios';\nimport { API } from '../../../../utils/api';\nimport { PopupAlertTheme } from '../../../../interfaces/popupAlert';\nimport { school_level } from '../../../../interfaces/school_level';\n\ninterface SchoolLevelsPropsInterface {\n  system: System;\n  schoolLevels: schoolLevelsStoreInterface;\n  PushPopupAlert: (alert: PopupAlertData) => void;\n  loadSchoolLevels: (callback: (loading: boolean) => void) => void;\n}\n\nexport enum SchoolLevelsAction {\n  Create = \"Create\",\n  View = \"View\",\n  Delete = \"Delete\",\n  Update = \"Update\",\n}\n\nexport interface S_SchoolLevelDetails {\n  action: SchoolLevelsAction;\n  selectedSchoolLevel: school_level;\n}\n\nconst _SchoolLevels = (props: SchoolLevelsPropsInterface) => {\n  const [loading, setLoading] = useState<boolean>(false);\n  const [addNew, setAddNew] = useState<boolean>(false);\n  const [selectedSchoolLevel, setSelectedSchoolLevel] = useState<S_SchoolLevelDetails | null>(null);\n\n  const closeAddNewModal = (state: boolean) => {\n    setAddNew(state);\n    props.loadSchoolLevels(setLoading);\n  }\n\n  const deleteEducationCategoryFn = async (school_level: school_level) => {\n    if (school_level.school_level_id !== undefined) {\n      setLoading(true);\n      try {\n        const res = await axios.delete(`${API.APPLICATION}/schoollevel/${school_level.school_level_id}`);\n        props.loadSchoolLevels(setLoading);\n        props.PushPopupAlert({\n          title: `School level removed successfully`,\n          theme: PopupAlertTheme.success,\n        });\n        setSelectedSchoolLevel(null);\n        console.log(\"Deleted: \", res);\n      } catch (error: any) {\n        props.PushPopupAlert({\n          title: `Acton failed, Try again later!`,\n          theme: PopupAlertTheme.warning,\n        });\n        setLoading(false);\n        setSelectedSchoolLevel(null);\n        console.log(\"err: \", {...error});\n      }\n      // setLoading(false);\n    }\n  }\n\n  useEffect(() => {\n    if (props.schoolLevels.school_levels === null || props.schoolLevels.school_levels.length === 0) {\n      props.loadSchoolLevels(setLoading);\n    }\n  }, [props, setLoading]);\n  return (\n    <Fragment>\n      <div className=\"mt-1\">\n        <div className=\"flex flex-row justify-between items-center bg-gray-100 py-1\">\n          <div className=\"text-blue-600 font-extrabold text-xl px-2\">Lists of school levels</div>\n          {loading === false &&<div onClick={() => setAddNew(true)} className=\"btn bg-blue-600 text-white cursor-pointer hover:bg-blue-800\">Add new</div>}\n        </div>\n        <div className=\"flex flex-col\">\n          {props.schoolLevels.school_levels === null || loading === true ? <Loading /> :\n          props.schoolLevels.school_levels.length === 0 ?\n          <div className=\"text-gray-400 px-6 py-4 rounded border mt-4 text-xl font-extrabold flex flex-col items-center justify-center bg-gray-100\">\n            <HiOutlineDocumentSearch className=\"text-7xl text-gray-400 animate__animated animate__shakeX\" />\n            <span>No question types available</span>\n          </div> : \n          props.schoolLevels.school_levels.map((item, i) => (\n            <div className={`border flex flex-row px-3 py-2 rounded items-center my-1 justify-between`}>\n              <div className=\"flex flex-col\">\n                <span className=\"text-gray-600 font-extrabold\">{item.school_level_name}</span>\n                <span className={`text-xs pr-5 text-gray-500`}>{item.description}</span>\n              </div>\n              <div className=\"flex flex-row items-center gap-2\">\n                <div \n                onClick={() => setSelectedSchoolLevel({ \n                  action: SchoolLevelsAction.View,\n                  selectedSchoolLevel: item\n                })} \n                className=\"bg-gray-50 hover:bg-gray-200 rounded-full px-1 py-1 cursor-pointer\">\n                  <CgDetailsMore className=\"text-3xl text-gray-700\"/>\n                </div>\n                <div \n                onClick={() => setSelectedSchoolLevel({ \n                  action: SchoolLevelsAction.Update,\n                  selectedSchoolLevel: item\n                })} \n                className=\"bg-gray-50 hover:bg-blue-100 rounded-full px-1 py-1 cursor-pointer\">\n                  <MdEdit className=\"text-3xl text-blue-700\"/>\n                </div>\n                <div \n                onClick={() => setSelectedSchoolLevel({ \n                  action: SchoolLevelsAction.Delete,\n                  selectedSchoolLevel: item\n                })} \n                className=\"bg-gray-100 hover:bg-red-100 rounded-full px-1 py-1 cursor-pointer\">\n                  <IoMdTrash className=\"text-3xl text-yellow-700\"/>\n                </div>\n              </div>\n              \n            </div>\n          ))}\n        </div>\n      </div>\n      {(addNew === true ||\n      (selectedSchoolLevel !== null && \n      (selectedSchoolLevel.action === SchoolLevelsAction.Update || selectedSchoolLevel.action === SchoolLevelsAction.View)\n      )) &&\n      <Modal\n        title={<div className=\"flex flex-row gap-4 items-center\">\n          <div className=\"flex flex-col\">\n            <span className=\"font-extrabold text-2xl text-gray-500\">\n              {selectedSchoolLevel !== null && selectedSchoolLevel.action === SchoolLevelsAction.Update ? selectedSchoolLevel.selectedSchoolLevel.school_level_name : selectedSchoolLevel !== null && selectedSchoolLevel.action === SchoolLevelsAction.View ? selectedSchoolLevel.selectedSchoolLevel.school_level_name : \"Add new school level\"}\n            </span>\n            <span className=\"text-sm text-gray-500 font-normal\">\n              {selectedSchoolLevel !== null && selectedSchoolLevel.action === SchoolLevelsAction.Update ? \"Update the selected school level\" : selectedSchoolLevel !== null && selectedSchoolLevel.action === SchoolLevelsAction.View ? \"View more details for the selected school level\" : \"School level will be used in different components in the system, make sure what you're creating\"}\n            </span>\n          </div>\n        </div>}\n        backDrop={true}\n        theme={Themes.default}\n        close={() => {\n          setAddNew(false);\n          setSelectedSchoolLevel(null);\n        }}\n        widthSizeClass={ModalSize.extraLarge}\n        displayClose={true}\n        backDropClose={true}\n        padding={{title: true, body: true }} >\n          <AddQuestionType \n            closeModal={closeAddNewModal}\n            school_levels={props.schoolLevels}\n            PushPopupAlert={props.PushPopupAlert}\n            selectedSchoolLevel={selectedSchoolLevel}\n            deleteSelected={setSelectedSchoolLevel}\n          />\n      </Modal>}\n      {selectedSchoolLevel !== null && selectedSchoolLevel.action === SchoolLevelsAction.Delete &&\n      <Modal\n        title={<div className=\"flex flex-row gap-4 items-center\">\n          <div className=\"flex flex-col\">\n            <span className=\"font-extrabold text-2xl text-gray-500\">{selectedSchoolLevel.selectedSchoolLevel.school_level_name}</span>\n          </div>\n        </div>}\n        backDrop={true}\n        theme={Themes.default}\n        close={() => setSelectedSchoolLevel(null)}\n        widthSizeClass={ModalSize.medium}\n        displayClose={true}\n        backDropClose={true}\n        padding={{title: true, body: true }} >\n          <div className=\"-mt-6\">\n            <span className=\"text-red-600 font-bold\">\n              Are you sure do you want to delete this school level?\n            </span>\n            <div className=\"flex flex-row items-center justify-between mt-2\">\n              <div onClick={() => setSelectedSchoolLevel(null)} className=\"btn bg-gray-100 text-gray-700 cursor-pointer hover:bg-gray-200\">Cancel</div>\n              <div onClick={() => deleteEducationCategoryFn(selectedSchoolLevel.selectedSchoolLevel)} className=\"btn bg-red-600 text-white cursor-pointer hover:bg-red-800\">Yes, Delete</div>\n            </div>\n          </div>\n      </Modal>\n      }\n    </Fragment>\n  )\n}\n\n\nconst mapStateToProps = ({\n  auth,\n  periods,\n  schoolLevels,\n  questionTypes,\n  system,\n}: StoreState): { auth: Auth; periods: applicationPeriodsStoreInterface, schoolLevels: schoolLevelsStoreInterface; system: System; } => {\n  return { auth: auth, periods: periods, schoolLevels: schoolLevels, system: system };\n};\n\nconst SchoolLevels = connect(mapStateToProps, {\n  loadApplicationPeriods,\n  setSelectedPeriod,\n  loadSchoolLevels,\n  setSelectedEducationCategory,\n  PushPopupAlert,\n})(_SchoolLevels);\n\nexport default SchoolLevels;","import React from 'react'\nimport { ImCheckboxChecked, ImCheckboxUnchecked } from 'react-icons/im'\nimport { schoolLevelsStoreInterface } from '../../../../actions/school_levels'\n\ninterface EducationCategorySelectProps {\n  schoolLevels: schoolLevelsStoreInterface;\n  education_categories: string[];\n  setEducationCategories: (item: string[]) => void;\n  loading: boolean;\n}\n\nconst EducationCategorySelect = (props: EducationCategorySelectProps) => {\n  return (\n    <div className=\"rounded flex flex-col gap-2 overflow-y-auto border pb-3 px-3\" style={{height: '80vh'}}>\n      <div className=\"flex flex-row items-center gap-2\">\n        <span className=\"text-sm text-gray-600 font-bold mt-2 mb-1\">Choose school level</span><span className=\"text-xs text-gray-500 italic mt-2 mb-1\">(Optional)</span>\n      </div>\n      {props.schoolLevels.education_categories?.map((item, i) => (\n        <div onClick={() => props.loading === false && props.setEducationCategories(props.education_categories.find(itm => itm === item.education_institute_id) ? props.education_categories.filter(x => x !== item.education_institute_id) :[...props.education_categories, item.education_institute_id])} key={i + 1}className={`flex flex-row items-center gap-3 p-3 rounded cursor-pointer ${props.education_categories.find(itm => itm === item.education_institute_id) ? \"bg-blue-50 text-blue-600\" : props.loading === true ? \"bg-gray-100 text-gray-400\" : \"bg-gray-100 text-gray-600\"} ${props.loading === true ? \"hover:bg-gray-100 hover:text-gray-400\" : \"hover:bg-blue-100 hover:text-blue-600\"}`}>\n          {props.education_categories.find(itm => itm === item.education_institute_id) ?\n          <ImCheckboxChecked className=\"text-3xl\" /> :\n          <ImCheckboxUnchecked className=\"text-3xl\" />}\n          <div className=\"flex flex-col gap-0\">\n            <span className=\"font-extrabold text-lg\">{item.education_category_title}</span>\n            <span className=\"text-xs -mt-1\">{item.description}</span>\n          </div>\n        </div>\n      ))}\n    </div>\n  )\n}\n\nexport default EducationCategorySelect\n","import axios from 'axios';\nimport React, { useEffect, useState } from 'react'\nimport { schoolLevelsStoreInterface } from '../../../../actions/school_levels';\nimport { PopupAlertData } from '../../../../components/Alert/Popup';\nimport { formErrorInterface } from '../../../../interfaces/form';\nimport { PopupAlertTheme } from '../../../../interfaces/popupAlert';\nimport { API } from '../../../../utils/api';\nimport EducationCategorySelect from '../SettingsComponents/EducationCategorySelect';\nimport { SchoolLevelsAction, S_SchoolLevelDetails } from './SchoolLevels';\n\ninterface AddSchoolLevelProps {\n  closeModal: (state: boolean) => void;\n  school_levels: schoolLevelsStoreInterface;\n  PushPopupAlert: (alert: PopupAlertData) => void;\n  selectedSchoolLevel: S_SchoolLevelDetails | null;\n  deleteSelected: (selectedDetail: S_SchoolLevelDetails) => void;\n}\n\nconst AddSchoolLevel = (props: AddSchoolLevelProps) => {\n  // States\n  const [school_level_id, setSchool_level_id] = useState<string>(\"\");\n  const [school_level_title, setSchool_level_title] = useState<string>(\"\");\n  const [description, setDescription] = useState<string>(\"\");\n  const [education_category, setEducation_category] = useState<string[]>([]);\n  const [courses, setCourse] = useState<string[]>([]);\n  const [formError, setFormError] = useState<formErrorInterface | null>(null);\n  const [loading, setLoading] = useState<boolean>(false);\n  const submitSchoolLevel = async (e: React.FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n    // validation\n    if (props.selectedSchoolLevel?.action === SchoolLevelsAction.Update && school_level_id === \"\") {\n      return setFormError({\n        element: \"school_level_id\",\n        msg: \"Please choose School level\"\n      });\n    }\n    else if (school_level_title === \"\") {\n      return setFormError({\n        element: \"school_level_title\",\n        msg: \"Please fill the school level name\"\n      });\n    }\n    else if (description === \"\") {\n      return setFormError({\n        element: \"description\",\n        msg: \"Please fill the description\"\n      });\n    } else {\n      setLoading(true);\n      try {\n        // Update current\n        if (props.selectedSchoolLevel !== null && props.selectedSchoolLevel.selectedSchoolLevel.school_level_id !== undefined) {\n          const res = await axios.patch(`${API.APPLICATION}/schoollevel`, {\n            school_level_id: school_level_id,\n            school_level_name: school_level_title,\n            description: description,\n            education_institute: education_category,\n            courses: courses,\n          });\n          props.PushPopupAlert({\n            title: `School level updated successfully`,\n            description: `After updating the School level, you have access to delete and update it!`,\n            theme: PopupAlertTheme.info,\n          });\n          props.closeModal(false);\n          console.log(\"Result: \", res);\n        } else {\n          // Add new\n          const res = await axios.post(`${API.APPLICATION}/schoollevel`, {\n            school_level_name: school_level_title,\n            description: description,\n            education_institute: education_category,\n            courses: courses,\n          });\n          props.PushPopupAlert({\n            title: `School level added successfully`,\n            description: `After adding the School level, you have access to delete and update it!`,\n            theme: PopupAlertTheme.success,\n          });\n          props.closeModal(false);\n          console.log(\"Result: \", res);\n        }\n      } catch (error: any) {\n        props.PushPopupAlert({\n          title: `Failed to add School level! Try again`,\n          theme: PopupAlertTheme.danger,\n        });\n        console.log(\"Err: \", {...error});\n      }\n      setLoading(false);\n    }\n  }\n\n  useEffect(() => {\n    if (props.selectedSchoolLevel !== null) {\n      if (school_level_id === \"\") {\n        setSchool_level_id(props.selectedSchoolLevel.selectedSchoolLevel.school_level_id);\n      }\n      if (school_level_title === \"\") {\n        setSchool_level_title(props.selectedSchoolLevel.selectedSchoolLevel.school_level_name);\n      }\n      if (description === \"\") {\n        setDescription(props.selectedSchoolLevel.selectedSchoolLevel.description);\n      }\n      if (education_category.length === 0) {\n        setEducation_category(props.selectedSchoolLevel.selectedSchoolLevel.education_institute);\n      }\n    }\n  }, [props, school_level_id, school_level_title, description, education_category])\n  return (\n    <form onSubmit={submitSchoolLevel} className=\"-mt-2\">\n      <div className=\"grid md:grid-cols-12 gap-5\">\n        <div className=\"col-span-6\">\n          <EducationCategorySelect\n            schoolLevels={props.school_levels}\n            education_categories={education_category}\n            setEducationCategories={setEducation_category}\n            loading={loading}\n          />\n        </div>\n        <div className=\"col-span-6\">\n          <div className=\"flex flex-col mb-2\">\n            <span className=\"text-sm text-gray-600 font-bold mb-1\">Title</span>\n            <input \n              disabled={loading}\n              onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                setSchool_level_title(e.target.value);\n                setFormError(null);\n              }}\n            type=\"text\" value={school_level_title} \n            className={`input-white border-2 ${formError !== null && formError.element === \"school_level_title\" ? \"border-red-500\" : \"border-gray-500\"}`} />\n            {formError !== null && formError.element === \"school_level_title\" &&\n            <span className=\"text-red-600 font-bold text-xs\">{formError.msg}</span>}\n          </div>\n          <div className=\"flex flex-col mb-2\">\n            <span className=\"text-sm text-gray-600 font-bold mt-2 mb-1\">Description</span>\n            <textarea \n              disabled={loading}\n              onChange={(e: React.ChangeEvent<HTMLTextAreaElement>) => {\n                setDescription(e.target.value);\n                setFormError(null);\n              }}\n              value={description}\n              className={`input-white border-2 ${formError !== null && formError.element === \"description\" ? \"border-red-500\" : \"border-gray-500\"}`}\n              style={{minHeight: '100px'}}>\n              {description}\n            </textarea>\n            {formError !== null && formError.element === \"description\" &&\n            <span className=\"text-red-600 font-bold text-xs\">{formError.msg}</span>}\n          </div>\n          <div className=\"flex flex-row justify-between items-center\">\n            {props.selectedSchoolLevel?.action === SchoolLevelsAction.View ? \n            <button onClick={() => \n            props.selectedSchoolLevel && \n            props.deleteSelected({ \n              action: SchoolLevelsAction.Delete,\n              selectedSchoolLevel: props.selectedSchoolLevel.selectedSchoolLevel\n            })} type=\"button\" className=\"btn border border-red-600 text-red-700\">Delete</button> : <div></div>}\n            <button \n            disabled={loading}\n            type=\"submit\" className={`btn bg-blue-600 text-white ${loading === true ? \"animate__animated animate__flash animate__infinite\" : \"\"}`}>\n              {loading === true ? \"Please wait...\" : props.selectedSchoolLevel !== null ? \"Update\" : \"Add\"}\n            </button>\n          </div>\n        </div>\n      </div>\n    </form>\n  )\n}\n\nexport default AddSchoolLevel\n","import React, { Component } from 'react'\nimport { RiFolderSettingsFill } from 'react-icons/ri';\nimport Courses from './Courses/Courses';\nimport EducationCategories from './EducationCategories/EducationCategories';\nimport QuestionTypes from './QuestionTypes/QuestionTypes';\nimport SchoolLevels from './SchoolLevels/SchoolLevels';\n\nenum SettingsType {\n  questionTypes = \"questionTypes\",\n  courses = \"courses\",\n  educationCategory = \"educationCategory\",\n  schoolLevels = \"schoolLevels\",\n  chapters = \"chapters\",\n}\n\ninterface QuestionSettingsState {\n  loading: boolean;\n  settings: {\n    settingType: SettingsType;\n    caption: string;\n  }[],\n  selectedSetting: SettingsType | null;\n}\ninterface QuestionSettingsProps {}\n\nexport class QuestionSettings extends Component<QuestionSettingsProps, QuestionSettingsState> {\n  constructor(props: QuestionSettingsProps) {\n    super(props);\n\n    this.state = {\n      loading: true,\n      settings: [\n        {\n          settingType: SettingsType.questionTypes,\n          caption: \"Question Types\"\n        },\n        {\n          settingType: SettingsType.courses,\n          caption: \"Courses\"\n        },\n        {\n          settingType: SettingsType.educationCategory,\n          caption: \"Education categories\"\n        },\n        {\n          settingType: SettingsType.schoolLevels,\n          caption: \"School levels\"\n        },\n      ],\n      selectedSetting: SettingsType.educationCategory,\n    };\n  }\n  render() {\n    return (\n      <div className=\"\">\n        <div className=\"mt-3 rounded flex flex-row justify-between items-center\">\n          <div className=\"flex flex-row items-center gap-3\">\n            <RiFolderSettingsFill className=\"text-6xl text-blue-600\" />\n            <div className=\"flex flex-col\">\n              <span className=\"text-blue-600 text-2xl font-bold\">Question Bank settings</span>\n              <span className=\"text-gray-600 text-sm\">Customization of question bank predefined settings including courses, chapters, question types, etc</span>\n            </div>\n          </div>\n          <div className=\"flex flex-row\">\n            {/* <Link to=\"/method-add-question\" className={`btn bg-blue-100 hover:bg-white text-blue-700 border-2 border-white`}>Add questions</Link> */}\n            {/* <div className=\"btn bg-black bg-opacity-30 text-white border-2 border-white\">Change course</div> */}\n          </div>\n        </div>\n        <div className=\"mt-3 flex-col\">\n          <div className=\"flex flex-col\">\n            <div className=\"bg-white flex rounded mb-20\">\n              <div className=\"bg-white w-full border border-white rounded\">\n                <div className=\"flex flex-row items-center\">\n                  {this.state.settings.map((item, i) => (\n                    <div onClick={() => this.setState({ selectedSetting: item.settingType })} className={`animate__animated ${this.state.selectedSetting === item.settingType ? \"bg-blue-100 border-blue-600 text-blue-600 animate__zoomIn\" : \"bg-white border-white text-gray-600\"} hover:bg-blue-100 px-4 py-2 cursor-pointer font-bold border-b-4 hover:border-blue-600 hover:text-blue-600 rounded-t mt-1 mx-1`}>\n                      {item.caption}\n                    </div>\n                  ))}\n                </div>\n                <div className=\"=rounded mx-1 mb-1\">\n                  {this.state.selectedSetting === SettingsType.questionTypes && <QuestionTypes />}\n                  {this.state.selectedSetting === SettingsType.educationCategory && <EducationCategories />}\n                  {this.state.selectedSetting === SettingsType.schoolLevels && <SchoolLevels />}\n                  {this.state.selectedSetting === SettingsType.courses && <Courses />}\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n"],"sourceRoot":""}
{"version":3,"sources":["containers/Claimings/Admin/AdminClaimExamView.tsx","containers/Positions/ViewDocRequirements.tsx","containers/Claimings/Admin/AdminClaimAppView.tsx","containers/Claimings/Admin/AdminClaimDocView.tsx","containers/Claimings/Admin/index.tsx","containers/SessionSettings/NoSession.tsx","actions/settings.ts","components/Loading/TableLoading.tsx","shared/interfaces.tsx","components/ViewPDF/ViewPDF.tsx"],"names":["viewTabs","ViewDocRequirements","props","useState","viewDoc","setViewDoc","loadingImage","setLoadingImage","isFullscreen","setSetFullscreen","failedToLoadFile","setFailedToLoadFile","isDocumentExist","category_id","sub_category_id","field_id","isEmptyOrSpaces","userDocs","filter","item","validation_status","find","category_subcategory_data","Table","columns","columnTitle","alignText","padding","rows","data","requirements","length","className","colSpan","map","index","subcategory_id","subcategory_title","field_title","onClick","pagination","search","thColor","Modal","backDrop","theme","Themes","default","close","backDropClose","widthSizeClass","ModalSize","extraLarge","displayClose","title","body","footer","NoSession","description","isFileImage","getFileType","files","Loading","src","API","AUTH_FILES","alt","id","onLoad","onDoubleClick","fullScreen","ViewPDF","file_url","class_name","frame_title","setLoadingFile","setLoadingError","React","memo","FC_AdminApplicationPositionDistinctCategory","thisPosition","documentCategories","PositionsTemp","DistinctCategoriesTemp","DistinctCategoriesIds","DistinctSubCategoriesTemp","DistinctSubCategoriesIds","req","thisRequirements","thisCategory","documentCategory","user_detail_category_id","category","thisSubCategory","documentSubCategory","user_detail_subcategory_id","subcategory","field","thisField","documentFields","_id","position_requirement","required","push","category_title","subcategory_required","includes","connect","auth","evaluateClaim","reAssessApplication","PushPopupAlert","loadingRequest","setLoadingRequest","actionTaken","setActionTaken","formError","setFormError","responseMsg","setResponseMsg","handleVerify","a","element","msg","subClaim","thisClaim","claims","level","claim_level","api_body","sub_claim_id","evaluation_comment","evaluated_by","user","user_id","decision_taken_status","evaluator_name","fname","lname","evaluator_email","email","console","log","axios","put","CLAIMING","res","evaluate_claim_res","ClaimDecisionStatus","ACCEPTED","overrideDecision","PopupAlertTheme","success","error","errorToText","danger","getReasonById","reason_id","claimReasons","patch","APPLICATION","claiming_on_id","phone_number","comment","application_status","ApplicationStates","Shortlisted","application_id","code_error","getPositionById","position_id","systemPositions","user_info","thisApplication","position","position_title","school_level_id","school_level_name","education_institute_id","education_category_title","courses","course_name","course_code","course_id","NoResult","NoResultThemes","Dark","value","details","previous","status","Rejected","capitalizeFirstLetter","evaluater","name","DATE","createdAt","dangerouslySetInnerHTML","__html","reason","override_by","claim","default_claim_resaons","showDate","isClaimEvaluated","REJECTED","toLocaleLowerCase","last_claim_status","ClaimStatus","PENDING","DELETED","placeholder","cols","style","resize","onChange","e","target","disabled","window","confirm","verifyDocument","FC_DocValidation","doc_id","DocValidationStatusInterface","APPROVED","validated_by","in_education","disability","expiration_date","api_redux","date","post","USER","FC_shortListing","candidate_id","type","setViewImage","viewImage","adminDisplayClaimTitle","thisDoc","commet","questionTypes","loadQuestionTypes","loading","setLoading","marks","setMarks","profile","selectedTab","setSelectedTab","useEffect","handleMarksAddition","DO_EXAM","answer_sheet_id","Object","values","i","exam","AnswersDetails","showAnswers","exam_id","claimShowAnswer","thisExamSheet","thisExam","allAnswers","exam_location","questions","user_answers","period","course","exam_paper","user_status","used_duration","total_marks","number_of_question_answered","exam_total_marks","exam_start_time","exam_end_time","exam_date","updatedAt","gender","sex","Number","candidateDocuments","result","type_key","PlansTypeKeys","DOCUMENT_VALIDATION","AdminClaimGetDocTitle","main","doc","DocCategory","DocSubCategory","DocField","DocTitle","c","sub_category","getApplicationById","allApplications","application","Index","setState","setLoadingData","loadingData","setPeriodChanged","periodChanged","setThisPeriod","thisPeriod","setViewClaim","viewClaim","setClaimId","claimId","setClaimType","claimType","setCandidateId","candidateId","setDefaultSession","sessions","state","thisSession","is_active","loadsAllClaims","setSearchClaim","searchClaim","claiming","allClaims","getAllClaims","loadsApplications","getAllApplications","loadsController","file_id","EXAMINATION","loadsAlAnswers","answersheet_id","allAnswer","getAllAnswers","componentDidMount","application_sessions","GetAllSessionPlans","documentReducer","getDocumentCategory","getDocumentSubCategory","getDocumentFields","getPositions","getClaimReasons","loadCourses","displayClaimTitle","thisDocs","thisAnswer","getCourseIdBySheetId","getCourseById","onPeriodChange","period_id","getLastClaimDate","claimsLength","this","claimTypes","SideNavigation","AdminFilterByType","loadingClaims","ClaimHeaderTitle","headerTitle","selectedClaimType","MARKS_PUBLICATION","PLACEMENT_TRANSFER","loadingSession","setLoadingSession","filterClaimsByClaimType","Light","Math","random","whichClaimType","whichClaimStatus","classes","TableLoading","getClaimById","ClaimTypesInterface","DOCUMENT","Component","AdminClaim","system_settings","sessionPlan","document","allSessionPlans","url","AUTH","getSystemSettings","callback","dispatch","setAxiosToken","get","ActionTypes","GET_SYSTEM_SETTINGS","payload","disableSystemSetting","DISABLE_SYSTEM_SETTINGS","GetTaskAccess","response","task","key","permitted","GET_TASK_ACCESS","GET_POSTIONS","deletePosition","DELETE_POSITION","publishPosition","PUBLISH_POSITION","FC_GetPositionsByInstitution","institution_id","displayCols","colsArray","RoomType","PostRequestStatusInterface","DocumentAttributesInterface","SESSION_PLAN_KEYS","setError","onError"],"mappings":"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","file":"static/js/13.da17e64d.chunk.js","sourcesContent":["import axios from \"axios\";\nimport React, { useEffect, useState } from \"react\";\nimport { FaRegCheckCircle } from \"react-icons/fa\";\nimport { MdCancel, MdInfoOutline } from \"react-icons/md\";\nimport { RiArrowGoBackFill } from \"react-icons/ri\";\nimport { connect } from \"react-redux\";\nimport {\n  Auth,\n  loadQuestionTypes,\n  PushPopupAlert,\n  questionTypesStoreInterface,\n} from \"../../../actions\";\nimport { evaluateClaim } from \"../../../actions/claiming\";\nimport { AnswersDetails } from \"../../../components/AnswersDetails/AnswersDetails\";\nimport Loading from \"../../../components/Loading/Loading\";\nimport {\n  CandidateClaimInterface,\n  ClaimDecisionStatus,\n  ClaimExamResultsDetails,\n  claimReasonInterface,\n  ClaimStatus,\n  ClaimTypesInterfaceAPI,\n  course,\n} from \"../../../interfaces\";\nimport { ExamAnswerSheetDone } from \"../../../interfaces/exam\";\nimport { PopupAlertTheme } from \"../../../interfaces/popupAlert\";\nimport { StoreState } from \"../../../reducers\";\nimport {\n  capitalizeFirstLetter,\n  isEmptyOrSpaces,\n} from \"../../../shared/dataTest\";\nimport { API } from \"../../../utils/api\";\nimport { errorToText } from \"../../../utils/errors\";\nimport { showDate } from \"../../../utils/functions\";\nimport { claimShowAnswer } from \"../Candidate/ExaminationFormView\";\nimport { isClaimEvaluated } from \"../ClaimDocView\";\nimport { claimResponseBody } from \"./AdminClaimDocView\";\n\nenum viewTabs {\n  profile = \"Applicant Profile\",\n  exam = \"Exam Details\",\n}\n\ntype AdminClaimExamViewProps = {\n  thisExamSheet: ClaimExamResultsDetails;\n  thisExam: course;\n  thisClaim: CandidateClaimInterface;\n  claimTypes: ClaimTypesInterfaceAPI[];\n  claimReasons: claimReasonInterface[] | null;\n\n  // REDUX ==================\n  auth: Auth;\n  questionTypes: questionTypesStoreInterface;\n  evaluateClaim: Function;\n  loadQuestionTypes: (callback: (loading: boolean) => void) => void;\n  PushPopupAlert: Function;\n};\n\nconst AdminClaimExamView: React.FC<AdminClaimExamViewProps> = (props) => {\n  const [loadingRequest, setLoadingRequest] = useState<boolean>(false);\n  const [loading, setLoading] = useState(true);\n  const [actionTaken, setActionTaken] = useState<ClaimDecisionStatus | null>(\n    null\n  );\n  const [formError, setFormError] = useState<{\n    element: string;\n    msg: string;\n  } | null>(null);\n  const [responseMsg, setResponseMsg] = useState<string>(\"\");\n  const [marks, setMarks] = useState<number>(0);\n  const [selectedTab, setSelectedTab] = useState<viewTabs>(viewTabs.profile);\n\n  useEffect(() => {\n    if (\n      props.questionTypes.questionTypes === null ||\n      (props.questionTypes.questionTypes.length === 0 && loading)\n    ) {\n      props.loadQuestionTypes(setLoading);\n    } else if (loading) {\n      setLoading(false);\n    }\n  }, [loading, props]);\n\n  if (loading || props.questionTypes.questionTypes === null) {\n    return <Loading />;\n  }\n\n  const handleVerify = async () => {\n    if (!actionTaken) {\n      setFormError({\n        element: \"action\",\n        msg: \"Action is required!\",\n      });\n      return setLoadingRequest(false);\n    }\n\n    if (\n      actionTaken === ClaimDecisionStatus.ACCEPTED &&\n      (marks <= 0 || marks > 100)\n    ) {\n      setFormError({\n        element: \"marks\",\n        msg: \"Invalid marks, marks must be between 1 and 10\",\n      });\n\n      return setLoadingRequest(false);\n    }\n\n    if (isEmptyOrSpaces(responseMsg)) {\n      setFormError({\n        element: \"comment\",\n        msg: \"Reason of rejection is required\",\n      });\n      return setLoadingRequest(false);\n    }\n\n    let subClaim = props.thisClaim.claims.find(\n      (item) => item.level === props.thisClaim.claim_level\n    );\n\n    if (subClaim) {\n      setLoadingRequest(true);\n      const api_body: claimResponseBody = {\n        sub_claim_id: subClaim._id,\n        evaluation_comment: responseMsg,\n        evaluated_by: props.auth.user.user_id,\n        decision_taken_status: actionTaken,\n        evaluator_name: props.auth.user.fname + \" \" + props.auth.user.lname,\n        evaluator_email: props.auth.user.email,\n      };\n\n      try {\n        const res = await axios.put<CandidateClaimInterface>(\n          `${API.CLAIMING}/user/evaluate/${props.thisClaim._id}`,\n          api_body\n        );\n        if (res) {\n          console.log({ evaluate_claim_res: res });\n          props.evaluateClaim(res.data);\n          // REVALIDATED DOCUMENT IF IT IS APPROVED =========================\n          if (actionTaken === ClaimDecisionStatus.ACCEPTED) {\n            await handleMarksAddition();\n          }\n          props.PushPopupAlert({\n            title: `Claim responded successfully!`,\n            theme: PopupAlertTheme.success,\n          });\n          // setDocumentId(\"null\");\n          setResponseMsg(\"\");\n          setActionTaken(null);\n        }\n      } catch (error) {\n        console.error(error);\n        props.PushPopupAlert({\n          title: errorToText(error),\n          theme: PopupAlertTheme.danger,\n        });\n      }\n      setLoadingRequest(false);\n    }\n  };\n\n  const handleMarksAddition = async () => {\n    try {\n      await axios.put(`${API.DO_EXAM}/answersheet/user/marks/update`, {\n        answer_sheet_id: props.thisClaim.claiming_on_id,\n        marks: marks,\n      });\n    } catch (error) {\n      console.error(error);\n      props.PushPopupAlert({\n        title: errorToText(error),\n        theme: PopupAlertTheme.danger,\n      });\n    }\n  };\n\n  const getReasonById = (\n    reason_id: string\n  ): claimReasonInterface | undefined => {\n    if (props.claimReasons) {\n      return props.claimReasons.find((item) => item.id === reason_id);\n    }\n    return undefined;\n  };\n\n  // const getAnswersByQuestion = (question_id: string): ClaimGetUserAnswers[] => {\n  //   return props.thisExamSheet.user_answers.filter(\n  //     (item) => item.question === question_id\n  //   );\n  // };\n\n  const claimCandidateAnswers = (): ExamAnswerSheetDone[] => {\n    let result: ExamAnswerSheetDone[] = [\n      {\n        exam_location: props.thisExamSheet.exam_location,\n        questions: props.thisExamSheet.questions,\n        user_answers: props.thisExamSheet.user_answers,\n        user: props.thisExamSheet.user,\n        period: props.thisExamSheet.period,\n        course: props.thisExamSheet.course,\n        exam_paper: props.thisExamSheet.exam_paper,\n        user_status: props.thisExamSheet.user_status,\n        used_duration: props.thisExamSheet.used_duration,\n        total_marks: props.thisExamSheet.total_marks,\n        number_of_question_answered:\n          props.thisExamSheet.number_of_question_answered,\n        // start_time: string,\n        // end_time: string,\n        exam_total_marks: props.thisExamSheet.exam_total_marks,\n        exam_start_time: props.thisExamSheet.exam_start_time,\n        exam_end_time: props.thisExamSheet.exam_end_time,\n        exam_date: props.thisExamSheet.exam_date,\n        status: props.thisExamSheet.status,\n        createdAt: props.thisExamSheet.createdAt,\n        updatedAt: props.thisExamSheet.updatedAt,\n        disability: false,\n        gender: \"\",\n        in_education: false,\n        position: \"\",\n        answer_sheet_id: props.thisExamSheet.answer_sheet_id,\n      },\n    ];\n    // props.thisExamSheet\n\n    return result;\n  };\n\n  return (\n    <section className=\"\">\n      {/* #################### VIEW TABS ################################## */}\n      <div className=\"flex flex-row items-center mx-4\">\n        {Object.values(viewTabs).map((item, i) => (\n          <div\n            key={i}\n            onClick={() => setSelectedTab(item)}\n            className={`animate__animated ${\n              selectedTab === item\n                ? \"bg-blue-100 border-blue-600 text-blue-600 animate__zoomIn\"\n                : \"bg-white border-white text-gray-600\"\n            } hover:bg-blue-100 px-4 py-2 cursor-pointer font-bold border-b-4 hover:border-blue-600 hover:text-blue-600 rounded-t mt-1 mr-1`}\n          >\n            {item}\n          </div>\n        ))}\n      </div>\n      {/* #################### END VIEW TABS ################################## */}\n      <div className=\"w-full bg-white px-4 py-1 divide-y-2 space-y-2\">\n        {/* DOCUMENT DETAILS ==================================================== */}\n        <section className=\"flex flex-col\">\n          {/* DISPLAY POSITION ==================================================== */}\n          {selectedTab === viewTabs.exam && (\n            <section className=\"w-full my-1 animate__animated animate__fadeIn rounded\">\n              <div className=\"bg-white w-full rounded p-2 mb-2\">\n                <AnswersDetails\n                  showAnswers={true}\n                  exam_id={claimShowAnswer(\n                    props.thisExamSheet,\n                    props.thisExam.course_name\n                  )}\n                  allAnswers={claimCandidateAnswers()}\n                  user_id={props.thisExamSheet.user}\n                />\n              </div>\n            </section>\n          )}\n          {/* END DISPLAY POSITION ==================================================== */}\n          {/* -------------------------------------------------------------------------------- */}\n          {/* DISPLAY PROFILE ==================================================== */}\n          {selectedTab === viewTabs.profile && (\n            <section className=\"w-full my-2 animate__animated animate__fadeIn rounded\">\n              <div className=\"flex items-center justify-between\">\n                <div className=\"flex items-center gap-2\">\n                  <span className={`italic text-gray-600`}>Names:</span>\n                  <span className=\"text-gray-800 font-bold text-xl\">\n                    {props.thisClaim.user.user_info.fname +\n                      \" \" +\n                      props.thisClaim.user.user_info.lname}\n                  </span>\n                </div>\n              </div>\n            </section>\n          )}\n          {/* END DISPLAY PROFILE ==================================================== */}\n          {selectedTab === viewTabs.profile && (\n            <div className=\"\">\n              <div className=\"flex items-center gap-2\">\n                <span className={`italic text-gray-600`}>Email:</span>\n                <span className=\"text-gray-800 font-bold text-lg\">\n                  {props.thisClaim.user.email}\n                </span>\n              </div>\n              <div className=\"flex items-center gap-2\">\n                <span className={`italic text-gray-600`}>Phone:</span>\n                <span className=\"text-gray-800 font-bold text-lg\">\n                  {props.thisClaim.user.phone_number}\n                </span>\n              </div>\n              <div className=\"flex items-center gap-2\">\n                <span className={`italic text-gray-600`}>Gender:</span>\n                <span className=\"text-gray-800 font-bold text-lg\">\n                  {props.thisClaim.user.user_info.sex === \"M\"\n                    ? \"Male\"\n                    : \"Female\"}\n                </span>\n              </div>\n            </div>\n          )}\n        </section>\n        {/* END DOCUMENT DETAILS ==================================================== */}\n\n        {/* ################################################################################ */}\n\n        {/* CLAIM LEVEL 1 DETAILS ==================================================== */}\n        {props.thisClaim.claims.length > 0 &&\n          props.thisClaim.claims.map((claim, index) => (\n            <section\n              className=\"flex flex-col px-2 pt-3\"\n              key={index + claim._id}\n            >\n              <div className=\"text-gray-700 italic font-bold\">\n                Claim Comment (level {index + 1})\n              </div>\n              {/* CLAIM COMMENT ==>> LEVEL 1 ==================================================== */}\n              <div className=\"flex flex-col items-start gap-2 mt-1 border rounded px-2 py-1 bg-gray-50\">\n                <div className=\"flex items-center gap-2 bg-blue-100 rounded py-1 px-2\">\n                  <MdInfoOutline />\n                  {getReasonById(props.thisClaim.default_claim_resaons)\n                    ? getReasonById(props.thisClaim.default_claim_resaons)!\n                        .reason\n                    : \"\"}\n                </div>\n                <p>{claim.reason}</p>\n                <span className=\"text-gray-600 text-xs\">\n                  {showDate(claim.createdAt)}\n                  {/* {showDate(claim.createdAt) +\n                    \" at \" +\n                    moment.unix(claim.date_created).format(\"MM/DD/YYYY\")} */}\n                </span>\n              </div>\n              {/* CLAIM COMMENT ==>> LEVEL 1 ==================================================== */}\n\n              {isClaimEvaluated(props.thisClaim, claim.level) && (\n                <section className=\"mt-4\">\n                  <span className=\"text-gray-700 italic font-semibold\">\n                    Response (level {index + 1})\n                  </span>\n                  <div className=\"border-t-2\">\n                    <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n                      <span className={`italic`}>Status:</span>\n                      <span\n                        className={`font-bold ${\n                          claim.decision_taken_status ===\n                          ClaimDecisionStatus.REJECTED\n                            ? \"text-yellow-900\"\n                            : \"text-blue-600\"\n                        } rounded px-3 py-1`}\n                      >\n                        {capitalizeFirstLetter(\n                          claim.decision_taken_status.toLocaleLowerCase()\n                        )}\n                      </span>\n                    </div>\n                    <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n                      <span className={`italic`}>Evaluated by:</span>\n                      <span className=\"font-semibold\">\n                        {claim.evaluater.name}\n                      </span>\n                    </div>\n                    <div className=\"flex items-start gap-2 text-sm text-gray-600\">\n                      <span className={`italic`}>Reason:</span>\n                      <span className=\"font-normal\">\n                        {claim.evaluation_comment}\n                      </span>\n                    </div>\n                  </div>\n                </section>\n              )}\n            </section>\n          ))}\n        {/* END CLAIM LEVEL 1 DETAILS ==================================================== */}\n      </div>\n\n      {/* FOOTER INITIAL ========================================== */}\n      {!actionTaken && (\n        <section className=\"flex items-center justify-between bg-gray-50 rounded mt-3\">\n          {/* SHOWING STATUS ===================================== */}\n          <div className=\"mx-4 my-4\">\n            <span\n              className={`${\n                props.thisClaim.last_claim_status === ClaimStatus.PENDING\n                  ? \"text-yellow-700\"\n                  : props.thisClaim.last_claim_status === ClaimStatus.DELETED\n                  ? \"text-red-700\"\n                  : \"text-green-700\"\n              } italic font-semibold`}\n            >\n              {capitalizeFirstLetter(\n                props.thisClaim.last_claim_status.toLocaleLowerCase()\n              )}\n            </span>\n          </div>\n\n          {props.thisClaim.last_claim_status === ClaimStatus.PENDING && (\n            <div className=\"flex items-center gap-2 px-2\">\n              <button\n                className={`px-4 py-2 font-semibold text-red-50 rounded inline-flex items-center space-x-2 focus:outline-none bg-red-700 hover:bg-red-800`}\n                onClick={() => {\n                  setActionTaken(ClaimDecisionStatus.REJECTED);\n                }}\n              >\n                <MdCancel className=\"w-5 h-5\" />\n                <span>Reject</span>\n              </button>\n              <button\n                className={`px-4 py-2 font-semibold text-blue-50 rounded inline-flex items-center space-x-2 focus:outline-none bg-blue-700 hover:bg-blue-800`}\n                onClick={() => {\n                  setActionTaken(ClaimDecisionStatus.ACCEPTED);\n                }}\n              >\n                <FaRegCheckCircle className=\"w-5 h-5\" />\n                <span>Accept</span>\n              </button>\n            </div>\n          )}\n        </section>\n      )}\n      {/* END FOOTER INITIAL ========================================== */}\n\n      {/* ======================================================== */}\n      {/* FOOTER RESPONSE ========================================== */}\n      {actionTaken && (\n        <section className=\"my-5 overflow-x-auto\">\n          <div className=\"italic text-gray-700 text-base my-1 mx-2\">\n            Selected decision:{\" \"}\n            <span\n              className={`font-semibold text-lg ${\n                actionTaken === ClaimDecisionStatus.ACCEPTED\n                  ? \"text-blue-700\"\n                  : \"text-yellow-800\"\n              }`}\n            >\n              {actionTaken === ClaimDecisionStatus.ACCEPTED\n                ? \"Approved\"\n                : \"Rejected\"}\n            </span>\n          </div>\n          {/* right part */}\n          <div className=\"flex flex-col md:flex-row items-end md:items-start gap-1 w-full\">\n            <div className=\"w-full space-y-1\">\n              {actionTaken === ClaimDecisionStatus.ACCEPTED && (\n                <div className=\"flex items-center justify-end w-full gap-2\">\n                  <span className=\"font-semibold\">Addition marks</span>\n                  <div className=\"px-2\">\n                    <input\n                      placeholder={`Addition marks`}\n                      className={`border border-${\n                        formError && formError.element === \"marks\"\n                          ? \"red\"\n                          : \"gray\"\n                      }-400 rounded px-3 py-1 w-auto focus:outline-none`}\n                      value={marks}\n                      onChange={(e) => {\n                        setMarks(Number(e.target.value));\n                        setFormError(null);\n                      }}\n                      disabled={loadingRequest}\n                    />\n                    {formError && formError.element === \"marks\" && (\n                      <p className=\"text-red-800\">{formError.msg}</p>\n                    )}\n                  </div>\n                </div>\n              )}\n              <div className=\"w-full px-2\">\n                <textarea\n                  placeholder={`Reason of your decision...`}\n                  cols={50}\n                  rows={actionTaken === ClaimDecisionStatus.ACCEPTED ? 2 : 3}\n                  className={`border border-${\n                    formError && formError.element === \"comment\"\n                      ? \"red\"\n                      : \"gray\"\n                  }-400 rounded px-3 py-1 w-full focus:outline-none`}\n                  style={{ resize: \"none\" }}\n                  value={responseMsg}\n                  onChange={(e) => {\n                    setResponseMsg(e.target.value);\n                    setFormError(null);\n                  }}\n                  disabled={loadingRequest}\n                ></textarea>\n                {formError && formError.element === \"comment\" && (\n                  <p className=\"text-red-800\">{formError.msg}</p>\n                )}\n              </div>\n            </div>\n            <div className=\"flex flex-row md:flex-col gap-1 max-w-full px-2\">\n              <button\n                className=\"bg-gray-700 hover:bg-gray-800 px-4 py-2 font-semibold rounded text-white inline-flex items-center space-x-2 focus:outline-none\"\n                onClick={() => {\n                  setResponseMsg(\"\");\n                  setActionTaken(null);\n                  setFormError(null);\n                }}\n                disabled={loadingRequest}\n              >\n                <RiArrowGoBackFill className=\"w-5 h-5\" />\n                <span>Back</span>\n              </button>\n              <button\n                className=\"bg-blue-700 hover:bg-blue-800 px-4 py-2 font-semibold rounded text-white inline-flex items-center space-x-2 focus:outline-none\"\n                disabled={loadingRequest}\n                onClick={() =>\n                  window.confirm(\n                    `Are you sure you want to ${\n                      actionTaken === ClaimDecisionStatus.ACCEPTED\n                        ? \"approve\"\n                        : \"rejected\"\n                    } this document?`\n                  ) && handleVerify()\n                }\n              >\n                {loadingRequest ? (\n                  <div className=\"\">Loading...</div>\n                ) : (\n                  <div className=\"inline-flex items-center space-x-2 gap-1\">\n                    <FaRegCheckCircle className=\"w-5 h-5\" />\n                    <span>Confirm</span>\n                  </div>\n                )}\n              </button>\n            </div>\n          </div>\n          {/* end right part */}\n        </section>\n      )}\n      {/* END FOOTER RESPONSE ========================================== */}\n    </section>\n  );\n};\n\nconst mapStateToProps = ({\n  auth,\n  questionTypes,\n}: StoreState): {\n  auth: Auth;\n  questionTypes: questionTypesStoreInterface;\n} => {\n  return {\n    auth,\n    questionTypes,\n  };\n};\n\nexport default React.memo(\n  connect(mapStateToProps, {\n    loadQuestionTypes,\n    evaluateClaim,\n    PushPopupAlert,\n  })(AdminClaimExamView)\n);\n","import React, { useState } from \"react\";\nimport { CgImage } from \"react-icons/cg\";\nimport Loading from \"../../components/Loading/Loading\";\nimport Modal, { ModalSize, Themes } from \"../../components/Modal/Modal\";\nimport Table from \"../../components/Table/Table\";\nimport ViewPDF from \"../../components/ViewPDF/ViewPDF\";\nimport { isEmptyOrSpaces } from \"../../shared/dataTest\";\nimport { UserDocumentsInterface } from \"../../shared/interfaces\";\nimport { API } from \"../../utils/api\";\nimport { fullScreen, getFileType, isFileImage } from \"../../utils/functions\";\nimport NoSession from \"../SessionSettings/NoSession\";\nimport { PositionRequirementTableInterface } from \"./ViewPosition\";\n\ninterface RequirementProps {\n  requirements: PositionRequirementTableInterface[];\n  userDocs: UserDocumentsInterface[];\n}\n\nconst ViewDocRequirements: React.FC<RequirementProps> = (props) => {\n  const [viewDoc, setViewDoc] = useState<UserDocumentsInterface | null>(null);\n  const [loadingImage, setLoadingImage] = useState<boolean>(false);\n  const [isFullscreen, setSetFullscreen] = useState<boolean>(false);\n  const [failedToLoadFile, setFailedToLoadFile] = useState<boolean>(false);\n\n  const isDocumentExist = (\n    category_id: string,\n    sub_category_id: string,\n    field_id: string\n  ): UserDocumentsInterface | undefined => {\n    if (!isEmptyOrSpaces(category_id)) {\n      let userDocs: UserDocumentsInterface[] = props.userDocs.filter(\n        (item) => item.category_id === category_id\n      );\n\n      if (!isEmptyOrSpaces(sub_category_id)) {\n        userDocs = userDocs.filter(\n          (item) =>\n            item.validation_status === \"approved\" &&\n            item.category_id === category_id &&\n            item.sub_category_id === sub_category_id\n        );\n      }\n\n      if (!isEmptyOrSpaces(field_id)) {\n        return userDocs.find(\n          (item) =>\n            item.validation_status === \"approved\" &&\n            item.category_id === category_id &&\n            item.category_subcategory_data === field_id\n        );\n      }\n    }\n    return undefined;\n  };\n  const tableData = (): JSX.Element[] => {\n    let data: PositionRequirementTableInterface[] = props.requirements;\n    if (data.length === 0) {\n      return [\n        <tr key={153} className=\"border-b border-gray-200 hover:bg-gray-100\">\n          <td className=\"p-3 text-center\" colSpan={3}>\n            No Data Found\n          </td>\n        </tr>,\n      ];\n    }\n\n    return data.map((item, index) => (\n      <tr\n        key={index + item.field_id}\n        className={`border-b border-gray-200 hover:bg-gray-100 ${\n          !isDocumentExist(\n            item.category_id,\n            item.subcategory_id,\n            item.field_id\n          ) && \"text-yellow-800\"\n        }`}\n      >\n        <td className=\"p-3 text-left whitespace-nowrap\">{index + 1})</td>\n        <td className=\"p-3 text-left\">\n          <span>\n            {isEmptyOrSpaces(item.field_id)\n              ? \"Any \" + item.subcategory_title\n              : item.subcategory_title + \" in \" + item.field_title}\n          </span>\n        </td>\n        <td className={`p-3 text-left text-lg italic`}>\n          {isDocumentExist(item.category_id, item.subcategory_id, item.field_id)\n            ? \"Found\"\n            : \"Not found\"}\n        </td>\n        <td className={`p-3 text-right text-lg italic`}>\n          {isDocumentExist(\n            item.category_id,\n            item.subcategory_id,\n            item.field_id\n          ) && (\n            <button\n              className=\"bg-gray-200 hover:bg-gray-300 rounded font-medium px-2 py-1 focus:outline-none\"\n              onClick={() => {\n                setViewDoc(\n                  isDocumentExist(\n                    item.category_id,\n                    item.subcategory_id,\n                    item.field_id\n                  )!\n                );\n                setLoadingImage(true);\n              }}\n            >\n              View Doc\n            </button>\n          )}\n        </td>\n      </tr>\n    ));\n  };\n  const handleFullScreen = () => {\n    if (isFullscreen) {\n      fullScreen(\"doc-img\", \"CLOSE\");\n      setSetFullscreen(false);\n    } else {\n      setSetFullscreen(true);\n      fullScreen(\"doc-img\", \"OPEN\");\n    }\n  };\n\n  return (\n    <div>\n      <Table\n        columns={[\n          { columnTitle: \"#\", alignText: \"left\", padding: \"p-3\" },\n          { columnTitle: \"Qualification\", alignText: \"left\", padding: \"p-3\" },\n          { columnTitle: \"Status\", alignText: \"left\", padding: \"p-3\" },\n          { columnTitle: \"\", alignText: \"left\", padding: \"p-3\" },\n        ]}\n        rows={tableData}\n        pagination={false}\n        search={false}\n        thColor=\"gray\"\n      />\n\n      {viewDoc && (\n        <Modal\n          backDrop={true}\n          theme={Themes.default}\n          close={() => {\n            setViewDoc(null);\n            setLoadingImage(false);\n          }}\n          backDropClose={false}\n          widthSizeClass={ModalSize.extraLarge}\n          displayClose={true}\n          padding={{\n            title: true,\n            body: false,\n            footer: false,\n          }}\n          title=\"Doc view\"\n        >\n          {failedToLoadFile && (\n            <NoSession\n              title=\"Error\"\n              description={\n                isFileImage(getFileType(viewDoc.files))\n                  ? \"Failed to load image\"\n                  : \"Failed to load pdf\"\n              }\n            />\n          )}\n          {loadingImage && !failedToLoadFile && <Loading />}\n          {viewDoc.files && viewDoc.files.length > 0 ? (\n            isFileImage(getFileType(viewDoc.files)) ? (\n              <div className=\"relative\">\n                <img\n                  src={API.AUTH_FILES + viewDoc.files}\n                  alt=\"\"\n                  className={`w-full md:w-auto h-auto md:max-h-screen mx-auto ${\n                    loadingImage && \"hidden\"\n                  }`}\n                  id=\"doc-img\"\n                  onLoad={() => setLoadingImage(false)}\n                  onDoubleClick={() => handleFullScreen()}\n                />\n              </div>\n            ) : (\n              <ViewPDF\n                file_url={API.AUTH_FILES + viewDoc.files}\n                class_name={`w-full h-screen md:max-h-screen mx-auto ${\n                  loadingImage && \"hidden\"\n                }`}\n                frame_title={\"application PDF file view\"}\n                setLoadingFile={setLoadingImage}\n                setLoadingError={setFailedToLoadFile}\n              />\n            )\n          ) : (\n            <div className=\"text-center text-red-400 py-8 animate__animated animate__fadeIn\">\n              <CgImage className=\"mx-auto w-40 h-40\" />\n              <span className=\"font-semibold text-4xl\">No Files Provided</span>\n            </div>\n          )}\n        </Modal>\n      )}\n    </div>\n  );\n};\n\nexport default React.memo(ViewDocRequirements);\n","import axios from \"axios\";\nimport React, { useState } from \"react\";\nimport { FaRegCheckCircle } from \"react-icons/fa\";\nimport { MdCancel, MdInfoOutline, MdTurnedIn } from \"react-icons/md\";\nimport { RiArrowGoBackFill } from \"react-icons/ri\";\nimport { connect } from \"react-redux\";\nimport { Auth, PushPopupAlert, reAssessApplication } from \"../../../actions\";\nimport { evaluateClaim } from \"../../../actions/claiming\";\nimport NoResult, {\n  NoResultThemes,\n} from \"../../../components/NoResult/NoResult\";\nimport {\n  allClaimApplicationInterface,\n  CandidateClaimInterface,\n  ClaimDecisionStatus,\n  claimReasonInterface,\n  ClaimStatus,\n  ClaimTypesInterfaceAPI,\n  PositionAPI,\n} from \"../../../interfaces\";\nimport { ApplicationStates } from \"../../../interfaces/application\";\nimport { PopupAlertTheme } from \"../../../interfaces/popupAlert\";\nimport { StoreState } from \"../../../reducers\";\nimport { DocumentReducerInterface } from \"../../../reducers/document\";\nimport {\n  capitalizeFirstLetter,\n  isEmptyOrSpaces,\n} from \"../../../shared/dataTest\";\nimport { API } from \"../../../utils/api\";\nimport { errorToText } from \"../../../utils/errors\";\nimport { DATE, showDate } from \"../../../utils/functions\";\nimport { PositionRequirementTableInterface } from \"../../Positions/ViewPosition\";\nimport ViewDocRequirements from \"../../Positions/ViewDocRequirements\";\nimport { isClaimEvaluated } from \"../ClaimDocView\";\nimport { claimResponseBody } from \"./AdminClaimDocView\";\n\nexport const FC_AdminApplicationPositionDistinctCategory = (\n  thisPosition: PositionAPI,\n  documentCategories: DocumentReducerInterface\n): {\n  PositionsTemp: PositionRequirementTableInterface[];\n  DistinctCategoriesTemp: PositionRequirementTableInterface[];\n  DistinctSubCategoriesTemp: PositionRequirementTableInterface[];\n} => {\n  let PositionsTemp: PositionRequirementTableInterface[] = [];\n  let DistinctCategoriesTemp: PositionRequirementTableInterface[] = [],\n    DistinctCategoriesIds: string[] = [];\n  let DistinctSubCategoriesTemp: PositionRequirementTableInterface[] = [],\n    DistinctSubCategoriesIds: string[] = [];\n  // GET REQUIREMENTS OF THE CURRENT POSITION ====================\n  let requirements = thisPosition.requirements;\n  // LOOP THROUGH CURRENT POSITION REQUIREMENTS ==========================\n  for (let req in requirements) {\n    let thisRequirements = requirements[req];\n    // GET DOC CATEGORY OF THE CURRENT POSITION REQUIREMENTS ====================\n    let thisCategory = documentCategories.documentCategory\n      ? documentCategories.documentCategory.find(\n          (item) =>\n            item.user_detail_category_id ===\n            thisRequirements.category.user_detail_category_id\n        ) && {\n          title: documentCategories.documentCategory.find(\n            (item) =>\n              item.user_detail_category_id ===\n              thisRequirements.category.user_detail_category_id\n          )!.title,\n          user_detail_category_id: documentCategories.documentCategory.find(\n            (item) =>\n              item.user_detail_category_id ===\n              thisRequirements.category.user_detail_category_id\n          )!.user_detail_category_id,\n        }\n      : {\n          title: \"\",\n          user_detail_category_id:\n            thisRequirements.category.user_detail_category_id,\n        };\n    // GET DOC SUB CATEGORY OF THE CURRENT POSITION REQUIREMENTS ====================\n    let thisSubCategory = documentCategories.documentSubCategory\n      ? documentCategories.documentSubCategory.find(\n          (item) =>\n            item.user_detail_subcategory_id ===\n            thisRequirements.subcategory.user_detail_subcategory_id\n        )\n        ? {\n            title: documentCategories.documentSubCategory.find(\n              (item) =>\n                item.user_detail_subcategory_id ===\n                thisRequirements.subcategory.user_detail_subcategory_id\n            )!.title,\n            user_detail_subcategory_id:\n              documentCategories.documentSubCategory.find(\n                (item) =>\n                  item.user_detail_subcategory_id ===\n                  thisRequirements.subcategory.user_detail_subcategory_id\n              )!.user_detail_subcategory_id,\n            category_id: documentCategories.documentSubCategory.find(\n              (item) =>\n                item.user_detail_subcategory_id ===\n                thisRequirements.subcategory.user_detail_subcategory_id\n            )!.category_id,\n          }\n        : {\n            title: \"\",\n            user_detail_subcategory_id:\n              thisRequirements.subcategory.user_detail_subcategory_id,\n            category_id: \"\",\n          }\n      : {\n          title: \"\",\n          user_detail_subcategory_id:\n            thisRequirements.subcategory.user_detail_subcategory_id,\n          category_id: \"\",\n        };\n    // LOOP THROUGH FIELDS OF THE CURRENT POSITION REQUIREMENTS ==========================\n    if (thisCategory) {\n      for (let field in thisRequirements.position_requirement) {\n        // GET FIELDS OF THE CURRENT POSITION REQUIREMENTS ====================\n        let thisField = documentCategories.documentFields\n          ? documentCategories.documentFields.find(\n              (item) =>\n                item._id === thisRequirements.position_requirement[field]._id\n            )\n            ? {\n                title: documentCategories.documentFields.find(\n                  (item) =>\n                    item._id ===\n                    thisRequirements.position_requirement[field]._id\n                )!.title,\n                _id: documentCategories.documentFields.find(\n                  (item) =>\n                    item._id ===\n                    thisRequirements.position_requirement[field]._id\n                )!._id,\n                required: thisRequirements.position_requirement[field].required,\n              }\n            : {\n                title: \"\",\n                _id: thisRequirements.position_requirement[field]._id,\n                required: thisRequirements.position_requirement[field].required,\n              }\n          : {\n              title: \"\",\n              _id: thisRequirements.position_requirement[field]._id,\n              required: thisRequirements.position_requirement[field].required,\n            };\n        // ADD CURRENT CATEGORY, SUB CATEGORY & FIELDS OF THE CURRENT POSITION REQUIREMENTS IN POSITIONS TEMP ====================\n        PositionsTemp.push({\n          category_id: thisCategory.user_detail_category_id,\n          category_title: thisCategory.title,\n          subcategory_id: thisSubCategory.user_detail_subcategory_id,\n          subcategory_title: thisSubCategory.title,\n          subcategory_required: thisRequirements.required,\n          field_title: thisField.title,\n          field_id: thisField._id,\n          required: thisField.required,\n        });\n      }\n\n      // ADD CATEOGRY OF THE CURRENT POSITION REQUIREMENTS TO ARRAY ====================\n      if (\n        !DistinctCategoriesIds.includes(thisCategory.user_detail_category_id)\n      ) {\n        DistinctCategoriesIds.push(thisCategory.user_detail_category_id);\n        DistinctCategoriesTemp.push({\n          category_id: thisCategory.user_detail_category_id,\n          category_title: thisCategory.title,\n          subcategory_id: \"\",\n          subcategory_title: \"\",\n          subcategory_required: thisRequirements.required,\n          field_title: \"\",\n          field_id: \"\",\n          required: false,\n        });\n      }\n\n      // ADD SUB CATEOGRY OF THE CURRENT POSITION REQUIREMENTS TO ARRAY ====================\n      if (\n        !DistinctSubCategoriesIds.includes(\n          thisSubCategory.user_detail_subcategory_id\n        )\n      ) {\n        DistinctSubCategoriesIds.push(\n          thisSubCategory.user_detail_subcategory_id\n        );\n        DistinctSubCategoriesTemp.push({\n          category_id: thisSubCategory.category_id,\n          category_title: \"\",\n          subcategory_id: thisSubCategory.user_detail_subcategory_id,\n          subcategory_title: thisSubCategory.title,\n          subcategory_required: thisRequirements.required,\n          field_title: \"\",\n          field_id: \"\",\n          required: false,\n        });\n      }\n    }\n  }\n  // DistinctCategoriesIds.;\n\n  return { PositionsTemp, DistinctCategoriesTemp, DistinctSubCategoriesTemp };\n};\n\ntype AdminClaimAppViewProps = {\n  thisApplication: allClaimApplicationInterface;\n  thisPosition: PositionAPI;\n  documentCategories: DocumentReducerInterface;\n  thisClaim: CandidateClaimInterface;\n  claimTypes: ClaimTypesInterfaceAPI[];\n  systemPositions: PositionAPI[];\n  claimReasons: claimReasonInterface[] | null;\n\n  // REDUX ==================\n  auth: Auth;\n  reAssessApplication: Function;\n  evaluateClaim: Function;\n  PushPopupAlert: Function;\n};\n\nconst AdminClaimAppView: React.FC<AdminClaimAppViewProps> = (props) => {\n  const [viewPosition, setViewPosition] = useState<boolean>(true);\n  const [loadingRequest, setLoadingRequest] = useState<boolean>(false);\n  const [actionTaken, setActionTaken] = useState<ClaimDecisionStatus | null>(\n    null\n  );\n  const [formError, setFormError] = useState<{\n    element: string;\n    msg: string;\n  } | null>(null);\n  const [responseMsg, setResponseMsg] = useState<string>(\"\");\n\n  const handleVerify = async () => {\n    if (!actionTaken) {\n      setFormError({\n        element: \"action\",\n        msg: \"Action is required!\",\n      });\n      return setLoadingRequest(false);\n    }\n\n    if (isEmptyOrSpaces(responseMsg)) {\n      setFormError({\n        element: \"comment\",\n        msg: \"Reason of rejection is required\",\n      });\n      return setLoadingRequest(false);\n    }\n\n    let subClaim = props.thisClaim.claims.find(\n      (item) => item.level === props.thisClaim.claim_level\n    );\n\n    if (subClaim) {\n      setLoadingRequest(true);\n      const api_body: claimResponseBody = {\n        sub_claim_id: subClaim._id,\n        evaluation_comment: responseMsg,\n        evaluated_by: props.auth.user.user_id,\n        decision_taken_status: actionTaken,\n        evaluator_name: props.auth.user.fname + \" \" + props.auth.user.lname,\n        evaluator_email: props.auth.user.email,\n      };\n\n      console.log(\"=================claimResponseBody===================\");\n      console.log({ subClaim, api_body });\n      console.log(\"=================claimResponseBody===================\");\n\n      try {\n        const res = await axios.put<CandidateClaimInterface>(\n          `${API.CLAIMING}/user/evaluate/${props.thisClaim._id}`,\n          api_body\n        );\n        if (res) {\n          console.log(\"====================================\");\n          console.log({ evaluate_claim_res: res });\n          console.log(\"====================================\");\n          props.evaluateClaim(res.data);\n          // REVALIDATED DOCUMENT IF IT IS APPROVED =========================\n          if (actionTaken === ClaimDecisionStatus.ACCEPTED) {\n            await overrideDecision();\n          }\n          props.PushPopupAlert({\n            title: `Claim responded successfully!`,\n            theme: PopupAlertTheme.success,\n          });\n          // setDocumentId(\"null\");\n          setResponseMsg(\"\");\n          setActionTaken(null);\n        }\n      } catch (error) {\n        console.error(error);\n        props.PushPopupAlert({\n          title: errorToText(error),\n          theme: PopupAlertTheme.danger,\n        });\n      }\n      setLoadingRequest(false);\n    }\n  };\n\n  const getReasonById = (\n    reason_id: string\n  ): claimReasonInterface | undefined => {\n    if (props.claimReasons) {\n      return props.claimReasons.find((item) => item.id === reason_id);\n    }\n    return undefined;\n  };\n\n  const overrideDecision = async () => {\n    try {\n      const res = await axios.patch(\n        `${API.APPLICATION}/tolerateappl/${props.thisClaim.claiming_on_id}`,\n        {\n          user_id: props.auth.user.user_id,\n          email: props.thisClaim.user.email,\n          phone_number: props.thisClaim.user.phone_number,\n          comment: responseMsg,\n          application_status: ApplicationStates.Shortlisted,\n        }\n      );\n\n      res.data &&\n        props.reAssessApplication({\n          application_id: props.thisClaim.claiming_on_id,\n          application_status: ApplicationStates.Shortlisted,\n        });\n    } catch (error) {\n      console.error({ code_error: error });\n      PushPopupAlert({\n        title: errorToText(error),\n        theme: PopupAlertTheme.danger,\n      });\n      // errorToText(error);\n    }\n    setLoadingRequest(false);\n  };\n\n  const getPositionById = (position_id: string): PositionAPI | undefined => {\n    let result = props.systemPositions.find(\n      (item) => item.position_id === position_id\n    );\n\n    return result;\n  };\n\n  return (\n    <section>\n      <div className=\"w-full py-1 divide-y-2 space-y-4\">\n        {/* DOCUMENT DETAILS ==================================================== */}\n        <section className=\"flex flex-col\">\n          {/* DISPLAY PROFILE ==================================================== */}\n          <section className=\"w-full mb-4 -mt-2 pb-3 px-4 bg-white\">\n            <div className=\"flex items-center justify-between\">\n              <div className=\"flex items-center gap-2 px-12\">\n                <span className={`italic text-blue-600`}>Applicant:</span>\n                <span className=\"text-blue-800 font-bold text-xl\">\n                  {props.thisClaim.user.user_info.fname +\n                    \" \" +\n                    props.thisClaim.user.user_info.lname}\n                </span>\n              </div>\n              {false && (\n                <button\n                  type=\"button\"\n                  className=\"bg-blue-200 hover:bg-blue-300 text-blue-700 group-hover:text-blue-800 py-1 px-2 mr-1 rounded text-sm\"\n                  onClick={() => setViewPosition(!viewPosition)}\n                >\n                  {viewPosition ? \"Hide\" : \"More\"}\n                </button>\n              )}\n            </div>\n          </section>\n          {/* DISPLAY POSITION ==================================================== */}\n          <section className=\"w-full mb-4 bg-white px-4 py-2 rounded\">\n            <div className=\"bg-white w-full\">\n              <div className=\"text-gray-800 text-2xl font-bold\">\n                Position Details\n              </div>\n              <div className=\"flex items-center\">\n                <div className=\"flex items-center gap-2\">\n                  <span className={`italic text-gray-600`}>Name:</span>\n                  <span className=\"text-gray-800 font-bold text-2xl\">\n                    {getPositionById(props.thisApplication.position)\n                      ? getPositionById(props.thisApplication.position)!\n                          .position_title\n                      : \"Position not found\"}\n                  </span>\n                </div>\n              </div>\n              <div className=\"flex items-center gap-2 text-base text-gray-600\">\n                <span className={`italic`}>Desc:</span>\n                <span className=\"font-semibold\">\n                  {getPositionById(props.thisApplication.position)\n                    ? getPositionById(props.thisApplication.position)!\n                        .description\n                    : \"\"}\n                </span>\n              </div>\n              <div className=\"flex items-center gap-2 text-base text-gray-600\">\n                <span className={`italic`}>School level:</span>\n                <span className=\"font-semibold\">\n                  {getPositionById(props.thisApplication.position)\n                    ? getPositionById(props.thisApplication.position)!\n                        .school_level_id.school_level_name\n                    : \"\"}\n                </span>\n              </div>\n              <div className=\"flex items-center gap-2 text-base text-gray-600\">\n                <span className={`italic`}>Institute:</span>\n                <span className=\"font-semibold\">\n                  {getPositionById(props.thisApplication.position)\n                    ? getPositionById(props.thisApplication.position)!\n                        .education_institute_id.education_category_title\n                    : \"\"}\n                </span>\n              </div>\n              <div className=\"flex items-center gap-2 text-base text-gray-600\">\n                <span className={`italic`}>Exams:</span>\n                <span className=\"flex items-center gap-2\">\n                  {getPositionById(props.thisApplication.position) ? (\n                    getPositionById(\n                      props.thisApplication.position\n                    )!.courses.map((item, index) => (\n                      <div\n                        key={index + item.course_id}\n                        className=\"flex items-center gap-1\"\n                      >\n                        <span className=\"font-semibold\">\n                          {item.course_name}\n                        </span>\n                        <span className=\"text-gray-600\">\n                          ({item.course_code})\n                        </span>\n                        {index !==\n                          getPositionById(props.thisApplication.position)!\n                            .courses.length -\n                            1 && \",\"}\n                      </div>\n                    ))\n                  ) : (\n                    <NoResult\n                      theme={NoResultThemes.Dark}\n                      value={\"No courses found\"}\n                    />\n                  )}\n                </span>\n              </div>\n\n              <div className=\"text-gray-800 text-2xl font-bold my-2\">\n                Position Requirements\n              </div>\n              {getPositionById(props.thisApplication.position) ? (\n                getPositionById(props.thisApplication.position)!.requirements\n                  .length > 0 ? (\n                  FC_AdminApplicationPositionDistinctCategory(\n                    getPositionById(props.thisApplication.position)!,\n                    props.documentCategories\n                  ).DistinctCategoriesTemp.map((item, index) => (\n                    <div\n                      className=\"bg-gray-100props.thisApplication.position rounded p-2\"\n                      key={index + item.category_id}\n                    >\n                      <div className=\"flex items-center gap-2 text-2xl text-gray-500 font-bold\">\n                        <MdTurnedIn />\n                        <span>{item.category_title}</span>\n                      </div>\n                      <div className=\"border bg-white mt-1\">\n                        <ViewDocRequirements\n                          requirements={FC_AdminApplicationPositionDistinctCategory(\n                            getPositionById(props.thisApplication.position)!,\n                            props.documentCategories\n                          ).PositionsTemp.filter(\n                            (req) => req.category_id === item.category_id\n                          )}\n                          userDocs={props.thisClaim.user.details}\n                        />\n                      </div>\n                    </div>\n                  ))\n                ) : (\n                  <NoResult\n                    theme={NoResultThemes.Dark}\n                    value={\"No requirements\"}\n                  ></NoResult>\n                )\n              ) : (\n                <NoResult\n                  theme={NoResultThemes.Dark}\n                  value={\"No requirements\"}\n                ></NoResult>\n              )}\n            </div>\n          </section>\n          {/* END DISPLAY POSITION ==================================================== */}\n          {/* -------------------------------------------------------------------------------- */}\n          {/* END DISPLAY PROFILE ==================================================== */}\n          {/* {selectedTab === viewTabs.profile && (\n            <div className=\"flex items-center\">\n              <div className=\"flex items-center gap-2\">\n                <span className={`italic text-gray-600`}>Position name:</span>\n                <span className=\"text-gray-800 font-bold text-2xl\">\n                  {getPositionById(props.thisApplication.position)\n                    ? getPositionById(props.thisApplication.position)!\n                        .position_title\n                    : \"Position not found\"}\n                </span>\n              </div>\n            </div>\n          )} */}\n          <section className=\"px-4 py-2 bg-white rounded\">\n            <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n              <span className={`italic`}>Status:</span>\n              <span\n                className={`font-bold ${\n                  props.thisClaim.previous\n                    ? props.thisClaim.previous.status ===\n                      ApplicationStates.Rejected\n                    : props.thisApplication.application_status ===\n                      ApplicationStates.Rejected\n                    ? \"text-yellow-900\"\n                    : \"text-blue-600\"\n                } rounded px-3 py-1`}\n              >\n                {props.thisClaim.previous\n                  ? capitalizeFirstLetter(props.thisClaim.previous.status)\n                  : capitalizeFirstLetter(\n                      props.thisApplication.application_status\n                    )}\n              </span>\n            </div>\n            <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n              <span className={`italic`}>Evaluated by:</span>\n              <span className=\"font-semibold\">\n                {props.thisClaim.previous.evaluater.name}\n              </span>\n            </div>\n            {false && (\n              <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n                <span className={`italic`}>Session:</span>\n                <span className=\"font-bold text-gray-900 py-1\">\n                  {props.thisApplication.application_session}\n                </span>\n              </div>\n            )}\n            <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n              <span className={`italic`}>Date:</span>\n              <span className=\"font-bold text-gray-900 py-1\">\n                {DATE(props.thisApplication.createdAt)}\n              </span>\n            </div>\n            <div className=\"flex items-start gap-2 text-sm text-gray-600\">\n              <span className={`italic`}>Reason:</span>\n              <span\n                className=\"font-normal\"\n                dangerouslySetInnerHTML={{\n                  __html: props.thisClaim.previous\n                    ? props.thisClaim.previous.reason\n                    : props.thisApplication.override_by.comment,\n                }}\n              ></span>\n            </div>\n          </section>\n        </section>\n        {/* END DOCUMENT DETAILS ==================================================== */}\n\n        {/* ################################################################################ */}\n\n        {/* CLAIM LEVEL 1 DETAILS ==================================================== */}\n        {props.thisClaim.claims.length > 0 &&\n          props.thisClaim.claims.map((claim, index) => (\n            <section\n              className=\"flex flex-col px-4 pt-2 pb-3 rounded bg-white\"\n              key={index + claim._id}\n            >\n              <div className=\"text-gray-700 italic font-bold\">\n                Claim Comment (level {index + 1})\n              </div>\n              {/* CLAIM COMMENT ==>> LEVEL 1 ==================================================== */}\n              <div className=\"flex flex-col items-start gap-2 mt-1 border rounded px-4 py-1 bg-gray-50\">\n                <div className=\"flex items-center gap-2 bg-blue-100 rounded py-1 px-2\">\n                  <MdInfoOutline />\n                  {getReasonById(props.thisClaim.default_claim_resaons)\n                    ? getReasonById(props.thisClaim.default_claim_resaons)!\n                        .reason\n                    : \"\"}\n                </div>\n                <p>{claim.reason}</p>\n                <span className=\"text-gray-600 text-xs\">\n                  {showDate(claim.createdAt)}\n                  {/* {showDate(claim.createdAt) +\n                    \" at \" +\n                    moment.unix(claim.date_created).format(\"MM/DD/YYYY\")} */}\n                </span>\n              </div>\n              {/* CLAIM COMMENT ==>> LEVEL 1 ==================================================== */}\n\n              {isClaimEvaluated(props.thisClaim, claim.level) && (\n                <section className=\"mt-4\">\n                  <span className=\"text-gray-700 italic font-semibold\">\n                    Response (level {index + 1})\n                  </span>\n                  <div className=\"border-t-2\">\n                    <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n                      <span className={`italic`}>Status:</span>\n                      <span\n                        className={`font-bold ${\n                          claim.decision_taken_status ===\n                          ClaimDecisionStatus.REJECTED\n                            ? \"text-yellow-900\"\n                            : \"text-blue-600\"\n                        } rounded px-3 py-1`}\n                      >\n                        {capitalizeFirstLetter(\n                          claim.decision_taken_status.toLocaleLowerCase()\n                        )}\n                      </span>\n                    </div>\n                    <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n                      <span className={`italic`}>Evaluated by:</span>\n                      <span className=\"font-semibold\">\n                        {claim.evaluater.name}\n                      </span>\n                    </div>\n                    <div className=\"flex items-start gap-2 text-sm text-gray-600\">\n                      <span className={`italic`}>Reason:</span>\n                      <span\n                        className=\"font-normal\"\n                        dangerouslySetInnerHTML={{\n                          __html: claim.evaluation_comment,\n                        }}\n                      ></span>\n                    </div>\n                  </div>\n                </section>\n              )}\n            </section>\n          ))}\n        {/* END CLAIM LEVEL 1 DETAILS ==================================================== */}\n      </div>\n\n      {/* FOOTER INITIAL ========================================== */}\n      {!actionTaken && (\n        <section className=\"flex items-center justify-between bg-gray-50 rounded mt-3\">\n          {/* SHOWING STATUS ===================================== */}\n          <div className=\"mx-4 my-4\">\n            <span\n              className={`${\n                props.thisClaim.last_claim_status === ClaimStatus.PENDING\n                  ? \"text-yellow-700\"\n                  : props.thisClaim.last_claim_status === ClaimStatus.DELETED\n                  ? \"text-red-700\"\n                  : \"text-green-700\"\n              } italic font-semibold`}\n            >\n              {capitalizeFirstLetter(\n                props.thisClaim.last_claim_status.toLocaleLowerCase()\n              )}\n            </span>\n          </div>\n\n          {props.thisClaim.last_claim_status === ClaimStatus.PENDING && (\n            <div className=\"flex items-center gap-2 px-2\">\n              <button\n                className={`px-4 py-2 font-semibold text-red-50 rounded inline-flex items-center space-x-2 focus:outline-none bg-red-700 hover:bg-red-800`}\n                onClick={() => {\n                  setActionTaken(ClaimDecisionStatus.REJECTED);\n                }}\n              >\n                <MdCancel className=\"w-5 h-5\" />\n                <span>Reject</span>\n              </button>\n              <button\n                className={`px-4 py-2 font-semibold text-blue-50 rounded inline-flex items-center space-x-2 focus:outline-none bg-blue-700 hover:bg-blue-800`}\n                onClick={() => {\n                  setActionTaken(ClaimDecisionStatus.ACCEPTED);\n                }}\n              >\n                <FaRegCheckCircle className=\"w-5 h-5\" />\n                <span>Accept</span>\n              </button>\n            </div>\n          )}\n        </section>\n      )}\n      {/* END FOOTER INITIAL ========================================== */}\n\n      {/* ======================================================== */}\n      {/* FOOTER RESPONSE ========================================== */}\n      {actionTaken && (\n        <section className=\"my-5 overflow-x-auto\">\n          <div className=\"italic text-gray-700 text-base my-1 mx-2\">\n            Selected decision:{\" \"}\n            <span\n              className={`font-semibold text-lg ${\n                actionTaken === ClaimDecisionStatus.ACCEPTED\n                  ? \"text-blue-700\"\n                  : \"text-yellow-800\"\n              }`}\n            >\n              {actionTaken === ClaimDecisionStatus.ACCEPTED\n                ? \"Approved\"\n                : \"Rejected\"}\n            </span>\n          </div>\n          {/* right part */}\n          <div className=\"flex flex-col md:flex-row items-end md:items-start gap-1 w-full\">\n            <div className=\"w-full px-2\">\n              <textarea\n                placeholder={`Reason of your decision...`}\n                cols={50}\n                rows={3}\n                className={`border border-${\n                  formError && formError.element === \"comment\" ? \"red\" : \"gray\"\n                }-400 rounded px-3 py-1 w-full focus:outline-none`}\n                style={{ resize: \"none\" }}\n                value={responseMsg}\n                onChange={(e) => {\n                  setResponseMsg(e.target.value);\n                  setFormError(null);\n                }}\n                disabled={loadingRequest}\n              ></textarea>\n              {formError && formError.element === \"comment\" && (\n                <p className=\"text-red-800\">{formError.msg}</p>\n              )}\n            </div>\n            <div className=\"flex flex-row md:flex-col gap-1 max-w-full px-2\">\n              <button\n                className=\"bg-gray-700 hover:bg-gray-800 px-4 py-2 font-semibold rounded text-white inline-flex items-center space-x-2 focus:outline-none\"\n                onClick={() => {\n                  setResponseMsg(\"\");\n                  setActionTaken(null);\n                  setFormError(null);\n                }}\n                disabled={loadingRequest}\n              >\n                <RiArrowGoBackFill className=\"w-5 h-5\" />\n                <span>Back</span>\n              </button>\n              <button\n                className=\"bg-blue-700 hover:bg-blue-800 px-4 py-2 font-semibold rounded text-white inline-flex items-center space-x-2 focus:outline-none\"\n                disabled={loadingRequest}\n                onClick={() =>\n                  window.confirm(\n                    `Are you sure you want to ${\n                      actionTaken === ClaimDecisionStatus.ACCEPTED\n                        ? \"approve\"\n                        : \"rejected\"\n                    } this document?`\n                  ) && handleVerify()\n                }\n              >\n                {loadingRequest ? (\n                  <div className=\"\">Loading...</div>\n                ) : (\n                  <div className=\"inline-flex items-center space-x-2 gap-1\">\n                    <FaRegCheckCircle className=\"w-5 h-5\" />\n                    <span>Confirm</span>\n                  </div>\n                )}\n              </button>\n            </div>\n          </div>\n          {/* end right part */}\n        </section>\n      )}\n      {/* END FOOTER RESPONSE ========================================== */}\n    </section>\n  );\n};\n\nconst mapStateToProps = ({\n  auth,\n}: StoreState): {\n  auth: Auth;\n} => {\n  return {\n    auth: auth,\n  };\n};\n\nexport default React.memo(\n  connect(mapStateToProps, {\n    evaluateClaim,\n    reAssessApplication,\n    PushPopupAlert,\n  })(AdminClaimAppView)\n);\n","import React from \"react\";\nimport axios from \"axios\";\nimport { FaRegCheckCircle } from \"react-icons/fa\";\nimport { MdCancel, MdInfoOutline } from \"react-icons/md\";\nimport { RiArrowGoBackFill } from \"react-icons/ri\";\nimport { connect } from \"react-redux\";\nimport { adminDisplayClaimTitle } from \".\";\nimport { Auth, PushPopupAlert } from \"../../../actions\";\nimport { evaluateClaim } from \"../../../actions/claiming\";\nimport { verifyDocument } from \"../../../actions/document\";\nimport { VerifyDocumentInterface } from \"../../../actions/users\";\nimport {\n  CandidateClaimInterface,\n  ClaimDecisionStatus,\n  claimReasonInterface,\n  ClaimStatus,\n  ClaimTypesInterfaceAPI,\n} from \"../../../interfaces\";\nimport { PopupAlertTheme } from \"../../../interfaces/popupAlert\";\nimport { StoreState } from \"../../../reducers\";\nimport { DocumentReducerInterface } from \"../../../reducers/document\";\nimport {\n  capitalizeFirstLetter,\n  isEmptyOrSpaces,\n} from \"../../../shared/dataTest\";\nimport {\n  DocValidationStatusInterface,\n  UserDocumentsInterface,\n} from \"../../../shared/interfaces\";\nimport { API } from \"../../../utils/api\";\nimport { errorToText } from \"../../../utils/errors\";\nimport { showDate } from \"../../../utils/functions\";\nimport { isClaimEvaluated } from \"../ClaimDocView\";\n\nexport type claimResponseBody = {\n  sub_claim_id: string;\n  evaluation_comment: string;\n  evaluated_by: string;\n  evaluator_name: string;\n  evaluator_email: string;\n  decision_taken_status: ClaimDecisionStatus;\n};\n\ntype AdminClaimDocViewProps = {\n  thisDoc: UserDocumentsInterface;\n  documentCategories: DocumentReducerInterface;\n  thisClaim: CandidateClaimInterface;\n  claimReasons: claimReasonInterface[] | null;\n  candidateId: string;\n  claimTypes: ClaimTypesInterfaceAPI[];\n  viewImage: boolean;\n  setViewImage: (value: boolean) => void;\n  loadingRequest: boolean;\n  setLoadingRequest: (value: boolean) => void;\n  actionTaken: ClaimDecisionStatus | null;\n  setActionTaken: (value: ClaimDecisionStatus | null) => void;\n  responseMsg: string;\n  setResponseMsg: (value: string) => void;\n  formError: {\n    element: string;\n    msg: string;\n  } | null;\n  setFormError: (\n    value: {\n      element: string;\n      msg: string;\n    } | null\n  ) => void;\n\n  // REDUX ==================\n  auth: Auth;\n  verifyDocument: Function;\n  evaluateClaim: Function;\n  PushPopupAlert: Function;\n};\n\nconst AdminClaimDocView: React.FC<AdminClaimDocViewProps> = (props) => {\n  const handleVerify = async () => {\n    if (!props.actionTaken) {\n      props.setFormError({\n        element: \"action\",\n        msg: \"Action is required!\",\n      });\n      return props.setLoadingRequest(false);\n    }\n\n    if (isEmptyOrSpaces(props.responseMsg)) {\n      props.setFormError({\n        element: \"comment\",\n        msg: \"Reason of rejection is required\",\n      });\n      return props.setLoadingRequest(false);\n    }\n\n    let subClaim = props.thisClaim.claims.find(\n      (item) => item.level === props.thisClaim.claim_level\n    );\n\n    if (subClaim) {\n      props.setLoadingRequest(true);\n      const api_body: claimResponseBody = {\n        sub_claim_id: subClaim._id,\n        evaluation_comment: props.responseMsg,\n        evaluated_by: props.auth.user.user_id,\n        decision_taken_status: props.actionTaken,\n        evaluator_name: props.auth.user.fname + \" \" + props.auth.user.lname,\n        evaluator_email: props.auth.user.email,\n      };\n\n      try {\n        const res = await axios.put<CandidateClaimInterface>(\n          `${API.CLAIMING}/user/evaluate/${props.thisClaim._id}`,\n          api_body\n        );\n        if (res) {\n          console.log({ evaluate_claim_res: res });\n          props.evaluateClaim(res.data);\n          // REVALIDATED DOCUMENT IF IT IS APPROVED =========================\n          if (props.actionTaken === ClaimDecisionStatus.ACCEPTED) {\n            await FC_DocValidation();\n          }\n          props.PushPopupAlert({\n            title: `Claim responded successfully!`,\n            theme: PopupAlertTheme.success,\n          });\n          // setDocumentId(\"null\");\n          props.setResponseMsg(\"\");\n          props.setActionTaken(null);\n        }\n      } catch (error) {\n        console.error(error);\n        props.PushPopupAlert({\n          title: errorToText(error),\n          theme: PopupAlertTheme.danger,\n        });\n      }\n      props.setLoadingRequest(false);\n    }\n  };\n\n  const FC_DocValidation = async () => {\n    const api_body: VerifyDocumentInterface = {\n      user_id: props.thisClaim.user.user_id,\n      doc_id: props.thisClaim.claiming_on_id,\n      validation_status:\n        props.actionTaken === ClaimDecisionStatus.ACCEPTED\n          ? DocValidationStatusInterface.APPROVED\n          : DocValidationStatusInterface.REJECTED,\n      validated_by: {\n        user_id: props.auth.user.user_id,\n        comment: props.responseMsg,\n        validation_status:\n          props.actionTaken === ClaimDecisionStatus.ACCEPTED\n            ? DocValidationStatusInterface.APPROVED\n            : DocValidationStatusInterface.REJECTED,\n      },\n      in_education: false,\n      disability: false,\n      expiration_date: \"this.state.expiration_date\",\n    };\n    const api_redux: VerifyDocumentInterface = {\n      user_id: props.thisClaim.user.user_id,\n      doc_id: props.thisClaim.claiming_on_id,\n      validation_status:\n        props.actionTaken === ClaimDecisionStatus.ACCEPTED\n          ? DocValidationStatusInterface.APPROVED\n          : DocValidationStatusInterface.REJECTED,\n      validated_by: {\n        user_id: props.auth.user.user_id,\n        comment: props.responseMsg,\n        validation_status:\n          props.actionTaken === ClaimDecisionStatus.ACCEPTED\n            ? DocValidationStatusInterface.APPROVED\n            : DocValidationStatusInterface.REJECTED,\n        date: \"\",\n      },\n      in_education: false,\n      disability: false,\n      expiration_date: \"this.state.expiration_date\",\n    };\n\n    try {\n      const res = await axios.post<VerifyDocumentInterface>(\n        `${API.USER}/docs/validateuserdoc`,\n        api_body\n      );\n      if (res) {\n        props.verifyDocument(api_redux);\n        await FC_shortListing(props.thisClaim.user.user_id);\n        // setDocumentId(\"null\");\n      }\n    } catch (error) {\n      console.error(error);\n      props.PushPopupAlert({\n        title: errorToText(error),\n        theme: PopupAlertTheme.danger,\n      });\n    }\n  };\n\n  const FC_shortListing = async (candidate_id: string) => {\n    try {\n      const res = await axios.patch(\n        `${API.APPLICATION}/apply/doccheckshortlist/${candidate_id}`\n      );\n      console.log({ res });\n    } catch (error) {\n      console.error({ error });\n      props.PushPopupAlert({\n        title: errorToText(error),\n        theme: PopupAlertTheme.danger,\n      });\n    }\n  };\n\n  const getReasonById = (\n    reason_id: string\n  ): claimReasonInterface | undefined => {\n    if (props.claimReasons) {\n      return props.claimReasons.find((item) => item.id === reason_id);\n    }\n    return undefined;\n  };\n\n  return (\n    <section className=\"\">\n      <div className=\"w-full bg-white px-4 py-1 divide-y-2 space-y-2\">\n        {/* DOCUMENT DETAILS ==================================================== */}\n        <section className=\"flex flex-col\">\n          <div className=\"flex items-center justify-between\">\n            <div className=\"flex items-center gap-2\">\n              <span className={`italic text-gray-600`}>Names:</span>\n              <span className=\"text-gray-800 font-bold text-xl\">\n                {props.thisClaim.user.user_info.fname +\n                  \" \" +\n                  props.thisClaim.user.user_info.lname}\n              </span>\n            </div>\n            <button\n              type=\"button\"\n              className=\"bg-blue-200 hover:bg-blue-300 text-blue-700 group-hover:text-blue-800 py-1 px-2 mr-1 rounded text-sm\"\n              onClick={() => props.setViewImage(!props.viewImage)}\n            >\n              {props.viewImage ? \"Hide\" : \"View\"}\n            </button>\n          </div>\n          <div className=\"flex items-center gap-2\">\n            <span className={`italic text-gray-600`}>Title:</span>\n            <span className=\"text-gray-800 font-bold text-2xl\">\n              {/* {ClaimGetDocTitle(props.documentCategories, props.thisDoc).main} */}\n              {props.thisClaim.user.details.filter(\n                (item) => item.validation_status !== \"waiting\"\n              ).length > 0\n                ? adminDisplayClaimTitle(\n                    props.documentCategories,\n                    props.thisClaim.user.details.filter(\n                      (item) => item.validation_status !== \"waiting\"\n                    ),\n                    props.thisClaim\n                  )\n                : \"-\"}\n            </span>\n          </div>\n          <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n            <span className={`italic`}>Status:</span>\n            <span className=\"font-bold text-yellow-900 rounded px-3 py-1\">\n              {props.thisClaim.previous\n                ? capitalizeFirstLetter(props.thisClaim.previous.status)\n                : capitalizeFirstLetter(props.thisDoc.validation_status)}\n            </span>\n          </div>\n          <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n            <span className={`italic`}>Evaluated by:</span>\n            <span className=\"font-semibold\">\n              {props.thisClaim.previous.evaluater.name}\n            </span>\n          </div>\n          <div className=\"flex items-start gap-2 text-sm text-gray-600\">\n            <span className={`italic`}>Reason:</span>\n            <span className=\"font-normal\">\n              {props.thisClaim.previous\n                ? props.thisClaim.previous.reason\n                : props.thisDoc.validated_by.commet}\n            </span>\n          </div>\n\n          {/* DISPLAY IMAGE ==================================================== */}\n          {props.viewImage && (\n            <div className=\"w-full my-1 animate__animated animate__fadeIn\">\n              <img\n                src={`${API.AUTH_FILES}/${props.thisDoc.files}`}\n                alt=\"doc file\"\n                className={`w-full animate__animated animate__fadeIn`}\n              />\n            </div>\n          )}\n          {/* END DISPLAY IMAGE ==================================================== */}\n        </section>\n        {/* END DOCUMENT DETAILS ==================================================== */}\n\n        {/* ################################################################################ */}\n\n        {/* CLAIM LEVEL 1 DETAILS ==================================================== */}\n        {props.thisClaim.claims.length > 0 &&\n          props.thisClaim.claims.map((claim, index) => (\n            <section\n              className=\"flex flex-col px-2 pt-3\"\n              key={index + claim._id}\n            >\n              <div className=\"text-gray-700 italic font-bold\">\n                Claim Comment (level {index + 1})\n              </div>\n              {/* CLAIM COMMENT ==>> LEVEL 1 ==================================================== */}\n              <div className=\"flex flex-col items-start gap-2 mt-1 border rounded px-4 py-1 bg-gray-50\">\n                <div className=\"flex items-center gap-2 bg-blue-100 rounded py-1 px-2\">\n                  <MdInfoOutline />\n                  {getReasonById(props.thisClaim.default_claim_resaons)\n                    ? getReasonById(props.thisClaim.default_claim_resaons)!\n                        .reason\n                    : \"\"}\n                </div>\n                <p>{claim.reason}</p>\n                <span className=\"text-gray-500 text-xs\">\n                  {showDate(claim.createdAt)}\n                </span>\n              </div>\n              {/* CLAIM COMMENT ==>> LEVEL 1 ==================================================== */}\n\n              {isClaimEvaluated(props.thisClaim, claim.level) && (\n                <section className=\"mt-4\">\n                  <span className=\"text-gray-700 italic font-semibold\">\n                    Response (level {index + 1})\n                  </span>\n                  <div className=\"border-t-2\">\n                    <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n                      <span className={`italic`}>Status:</span>\n                      <span\n                        className={`font-bold ${\n                          claim.decision_taken_status ===\n                          ClaimDecisionStatus.REJECTED\n                            ? \"text-yellow-900\"\n                            : \"text-blue-600\"\n                        } rounded px-3 py-1`}\n                      >\n                        {capitalizeFirstLetter(\n                          claim.decision_taken_status.toLocaleLowerCase()\n                        )}\n                      </span>\n                    </div>\n                    <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n                      <span className={`italic`}>Evaluated by:</span>\n                      <span className=\"font-semibold\">\n                        {claim.evaluater.name}\n                      </span>\n                    </div>\n                    <div className=\"flex items-start gap-2 text-sm text-gray-600\">\n                      <span className={`italic`}>Reason:</span>\n                      <span className=\"font-normal\">\n                        {claim.evaluation_comment}\n                      </span>\n                    </div>\n                  </div>\n                </section>\n              )}\n            </section>\n          ))}\n        {/* END CLAIM LEVEL 1 DETAILS ==================================================== */}\n      </div>\n\n      {/* FOOTER INITIAL ========================================== */}\n      {!props.actionTaken && (\n        <section className=\"flex items-center justify-between bg-gray-50 rounded mt-3\">\n          {/* SHOWING STATUS ===================================== */}\n          <div className=\"mx-4\">\n            <span\n              className={`${\n                props.thisClaim.last_claim_status === ClaimStatus.PENDING\n                  ? \"text-yellow-700\"\n                  : props.thisClaim.last_claim_status === ClaimStatus.DELETED\n                  ? \"text-red-700\"\n                  : \"text-green-700\"\n              } italic font-semibold`}\n            >\n              {capitalizeFirstLetter(\n                props.thisClaim.last_claim_status.toLocaleLowerCase()\n              )}\n            </span>\n          </div>\n\n          {props.thisClaim.last_claim_status === ClaimStatus.PENDING && (\n            <div className=\"flex items-center gap-2 px-2\">\n              <button\n                className={`px-4 py-2 font-semibold text-red-50 rounded inline-flex items-center space-x-2 focus:outline-none bg-red-700 hover:bg-red-800`}\n                onClick={() => {\n                  props.setActionTaken(ClaimDecisionStatus.REJECTED);\n                }}\n              >\n                <MdCancel className=\"w-5 h-5\" />\n                <span>Reject</span>\n              </button>\n              <button\n                className={`px-4 py-2 font-semibold text-blue-50 rounded inline-flex items-center space-x-2 focus:outline-none bg-blue-700 hover:bg-blue-800`}\n                onClick={() => {\n                  props.setActionTaken(ClaimDecisionStatus.ACCEPTED);\n                }}\n              >\n                <FaRegCheckCircle className=\"w-5 h-5\" />\n                <span>Accept</span>\n              </button>\n            </div>\n          )}\n        </section>\n      )}\n      {/* END FOOTER INITIAL ========================================== */}\n\n      {/* ======================================================== */}\n      {/* FOOTER RESPONSE ========================================== */}\n      {props.actionTaken && (\n        <section className=\"my-5 overflow-x-auto\">\n          <div className=\"italic text-gray-700 text-base my-1 mx-2\">\n            Selected decision:{\" \"}\n            <span\n              className={`font-semibold text-lg ${\n                props.actionTaken === ClaimDecisionStatus.ACCEPTED\n                  ? \"text-blue-700\"\n                  : \"text-yellow-800\"\n              }`}\n            >\n              {props.actionTaken === ClaimDecisionStatus.ACCEPTED\n                ? \"Approved\"\n                : \"Rejected\"}\n            </span>\n          </div>\n          {/* right part */}\n          <div className=\"flex flex-col md:flex-row items-end md:items-start gap-1 w-full\">\n            <div className=\"w-full px-2\">\n              <textarea\n                placeholder={`Reason of your decision...`}\n                cols={50}\n                rows={3}\n                className={`border border-${\n                  props.formError && props.formError.element === \"comment\"\n                    ? \"red\"\n                    : \"gray\"\n                }-400 rounded px-3 py-1 w-full focus:outline-none`}\n                style={{ resize: \"none\" }}\n                value={props.responseMsg}\n                onChange={(e) => {\n                  props.setResponseMsg(e.target.value);\n                  props.setFormError(null);\n                }}\n                disabled={props.loadingRequest}\n              ></textarea>\n              {props.formError && props.formError.element === \"comment\" && (\n                <p className=\"text-red-800\">{props.formError.msg}</p>\n              )}\n            </div>\n            <div className=\"flex flex-row md:flex-col gap-1 max-w-full px-2\">\n              <button\n                className=\"bg-gray-700 hover:bg-gray-800 px-4 py-2 font-semibold rounded text-white inline-flex items-center space-x-2 focus:outline-none\"\n                onClick={() => {\n                  props.setResponseMsg(\"\");\n                  props.setActionTaken(null);\n                  props.setFormError(null);\n                }}\n                disabled={props.loadingRequest}\n              >\n                <RiArrowGoBackFill className=\"w-5 h-5\" />\n                <span>Back</span>\n              </button>\n              <button\n                className=\"bg-blue-700 hover:bg-blue-800 px-4 py-2 font-semibold rounded text-white inline-flex items-center space-x-2 focus:outline-none\"\n                disabled={props.loadingRequest}\n                onClick={() =>\n                  window.confirm(\n                    `Are you sure you want to ${\n                      props.actionTaken === ClaimDecisionStatus.ACCEPTED\n                        ? \"approve\"\n                        : \"rejected\"\n                    } this document?`\n                  ) && handleVerify()\n                }\n              >\n                {props.loadingRequest ? (\n                  <div className=\"\">Loading...</div>\n                ) : (\n                  <div className=\"inline-flex items-center space-x-2 gap-1\">\n                    <FaRegCheckCircle className=\"w-5 h-5\" />\n                    <span>Confirm</span>\n                  </div>\n                )}\n              </button>\n            </div>\n          </div>\n          {/* end right part */}\n        </section>\n      )}\n      {/* END FOOTER RESPONSE ========================================== */}\n    </section>\n  );\n};\n\nconst mapStateToProps = ({\n  auth,\n}: StoreState): {\n  auth: Auth;\n} => {\n  return {\n    auth: auth,\n  };\n};\n\nexport default React.memo(\n  connect(mapStateToProps, {\n    evaluateClaim,\n    verifyDocument,\n    PushPopupAlert,\n  })(AdminClaimDocView)\n);\n","import React, { Component } from \"react\";\nimport { MdArrowBack, MdInfoOutline } from \"react-icons/md\";\nimport { connect } from \"react-redux\";\nimport { Auth, loadCourses, PushPopupAlert } from \"../../../actions\";\nimport {\n  getAllClaims,\n  getAllApplications,\n  getClaimReasons,\n  getAllAnswers,\n} from \"../../../actions/claiming\";\nimport {\n  getDocumentCategory,\n  getDocumentSubCategory,\n  getDocumentFields,\n} from \"../../../actions/document\";\nimport { GetAllSessionPlans } from \"../../../actions/session\";\nimport { getPositions } from \"../../../actions/settings\";\nimport { PopupAlertData } from \"../../../components/Alert/Popup\";\nimport Loading from \"../../../components/Loading/Loading\";\nimport TableLoading from \"../../../components/Loading/TableLoading\";\nimport { SideNavigation } from \"../../../components/Navigation/SideNavigation\";\nimport NoResult, {\n  NoResultThemes,\n} from \"../../../components/NoResult/NoResult\";\nimport {\n  SessionPlanInterface,\n  PositionAPI,\n  allClaimApplicationInterface,\n  CandidateClaimInterface,\n  PlansTypeKeys,\n  ClaimDecisionStatus,\n  ClaimTypesInterface,\n  course,\n} from \"../../../interfaces\";\nimport { PopupAlertTheme } from \"../../../interfaces/popupAlert\";\nimport { StoreState } from \"../../../reducers\";\nimport { ClaimingReducerType } from \"../../../reducers/claiming\";\nimport { DocumentReducerInterface } from \"../../../reducers/document\";\nimport { capitalizeFirstLetter } from \"../../../shared/dataTest\";\nimport { UserDocumentsInterface } from \"../../../shared/interfaces\";\nimport { DATE } from \"../../../utils/functions\";\nimport search from \"../../../utils/search\";\nimport { getClaimById, whichClaimStatus, whichClaimType } from \"../Candidate\";\nimport { getCourseById, getCourseIdBySheetId } from \"../Candidate/FormExamList\";\nimport ClaimHeaderTitle from \"../ClaimHeaderTitle\";\nimport AdminClaimAppView from \"./AdminClaimAppView\";\nimport AdminClaimDocView from \"./AdminClaimDocView\";\nimport AdminClaimExamView from \"./AdminClaimExamView\";\nimport AdminFilterByType, {\n  filterClaimsByClaimType,\n} from \"./AdminFilterByType\";\n\n// export const getUserDocuments = (\n//   userList: UserInterface[],\n//   user_id: String\n// ): { user: UserInterface; document: UserDocumentsInterface[] } | null => {\n//   const thisUser = userList.find((item) => item.user_id === user_id);\n//   if (thisUser) {\n//     const thisDoc = thisUser.details.filter(\n//       (item) => item.validation_status !== \"waiting\"\n//     );\n//     return { user: thisUser, document: thisDoc };\n//   }\n//   return null;\n// };\n\nexport const adminDisplayClaimTitle = (\n  documentCategories: DocumentReducerInterface,\n  candidateDocuments: UserDocumentsInterface[],\n  thisClaim: CandidateClaimInterface\n): string => {\n  let result: string = \"\";\n\n  // CHECK IF CLAIM IS FOR DOCUMENTS ===============================================\n  if (thisClaim.type_key === PlansTypeKeys.DOCUMENT_VALIDATION) {\n    let thisDoc = candidateDocuments.find(\n      (item) => item.doc_id === thisClaim.claiming_on_id\n    );\n    result = thisDoc\n      ? AdminClaimGetDocTitle(documentCategories, thisDoc).main\n      : \"Document not found\";\n  }\n  // END CHECK IF CLAIM IS FOR DOCUMENTS ===============================================\n\n  return result;\n};\n\nexport const AdminClaimGetDocTitle = (\n  documentCategories: DocumentReducerInterface,\n  doc: UserDocumentsInterface\n): { category: string; sub_category: string; field: string; main: string } => {\n  let DocCategory: string = \"\",\n    DocSubCategory: string = \"\",\n    DocField: string = \"\",\n    DocTitle: string = \"\";\n  if (\n    doc.sub_category_id &&\n    doc.sub_category_id.length > 0 &&\n    documentCategories.documentSubCategory\n  ) {\n    DocTitle = documentCategories.documentSubCategory.filter(\n      (c) => c.user_detail_subcategory_id === doc.sub_category_id\n    )[0].title;\n    DocSubCategory = DocTitle;\n  } else if (\n    doc.category_id.length > 0 &&\n    documentCategories.documentCategory\n  ) {\n    DocTitle = documentCategories.documentCategory.filter(\n      (c) => c.user_detail_category_id === doc.category_id\n    )[0].title;\n    DocCategory = DocTitle;\n  }\n  if (\n    doc.category_subcategory_data.length > 0 &&\n    documentCategories.documentFields\n  ) {\n    DocField = documentCategories.documentFields.filter(\n      (c) => c._id === doc.category_subcategory_data\n    )[0].title;\n    DocTitle += \" in \" + DocField;\n  }\n\n  return {\n    category: DocCategory,\n    sub_category: DocSubCategory,\n    field: DocField,\n    main: DocTitle,\n  };\n};\n\nexport const getApplicationById = (\n  allApplications: allClaimApplicationInterface[] | null,\n  systemPositions: PositionAPI[] | null,\n  application_id: String\n): {\n  application: allClaimApplicationInterface;\n  position: PositionAPI;\n} | null => {\n  if (allApplications) {\n    let thisApplication = allApplications.find(\n      (item) => item._id === application_id\n    );\n    if (thisApplication && systemPositions) {\n      let thisPosition = systemPositions.find(\n        (item) => item.position_id === thisApplication!.position\n      );\n      if (thisPosition) {\n        return { application: thisApplication, position: thisPosition };\n      }\n    }\n  }\n  return null;\n};\n\ntype AppProps = {\n  auth: Auth;\n  application_sessions: SessionPlanInterface[] | null;\n  claiming: ClaimingReducerType;\n  documentReducer: DocumentReducerInterface;\n  systemPositions: PositionAPI[] | null;\n  courses: course[] | null;\n  loadCourses: Function;\n  getPositions: Function;\n  getClaimReasons: Function;\n  getAllApplications: Function;\n  getAllClaims: Function;\n  getAllAnswers: Function;\n  GetAllSessionPlans: Function;\n  getDocumentCategory: Function;\n  getDocumentSubCategory: Function;\n  getDocumentFields: Function;\n  verifyAllDocument: Function;\n  PushPopupAlert: (alert: PopupAlertData) => void;\n};\n\ntype AppState = {\n  loading: boolean;\n  loadingData: boolean;\n  thisPeriod: SessionPlanInterface | null;\n  viewClaim: boolean;\n  periodChanged: boolean;\n  claimId: string | null;\n  claimType: string | null;\n  candidateId: string | null;\n  searchClaim: string;\n\n  // FOR FORM ================\n  viewImage: boolean;\n  loadingRequest: boolean;\n  actionTaken: ClaimDecisionStatus | null;\n  responseMsg: string;\n  formError: {\n    element: string;\n    msg: string;\n  } | null;\n};\n\nclass Index extends Component<AppProps, AppState> {\n  constructor(props: AppProps) {\n    super(props);\n\n    this.state = {\n      loading: true,\n      loadingData: false,\n      thisPeriod: null,\n      viewClaim: false,\n      periodChanged: false,\n      claimId: null,\n      claimType: null,\n      candidateId: null,\n      searchClaim: \"\",\n\n      // FOR FORM ================\n      viewImage: false,\n      loadingRequest: false,\n      actionTaken: null,\n      responseMsg: \"\",\n      formError: null,\n    };\n  }\n\n  setLoading = (value: boolean) => {\n    this.setState({ loading: value });\n  };\n\n  setLoadingData = (value: boolean) => {\n    this.setState({ loadingData: value });\n  };\n\n  setPeriodChanged = (value: boolean) => {\n    this.setState({ periodChanged: value });\n  };\n\n  setThisPeriod = (value: SessionPlanInterface | null) => {\n    this.setState({ thisPeriod: value });\n  };\n\n  setViewClaim = (value: boolean) => {\n    this.setState({ viewClaim: value });\n  };\n\n  // ------------------------------\n  setClaimId = (value: string | null) => {\n    this.setState({ claimId: value });\n  };\n  setClaimType = (value: string | null) => {\n    this.setState({ claimType: value });\n  };\n  setCandidateId = (value: string | null) => {\n    this.setState({ candidateId: value });\n  };\n  setViewImage = (value: boolean) => {\n    this.setState({ viewImage: value });\n  };\n  setLoadingRequest = (value: boolean) => {\n    this.setState({ loadingRequest: value });\n  };\n\n  setActionTaken = (value: ClaimDecisionStatus | null) => {\n    this.setState({ actionTaken: value });\n  };\n\n  setResponseMsg = (value: string) => {\n    this.setState({ responseMsg: value });\n  };\n\n  setFormError = (\n    value: {\n      element: string;\n      msg: string;\n    } | null\n  ) => {\n    this.setState({ formError: value });\n  };\n\n  setDefaultSession = (sessions: SessionPlanInterface[]) => {\n    // SETTING ACTIVE SESSION ==========================\n    if (this.state.thisPeriod === null) {\n      let thisSession = sessions.find((item) => item.is_active === true);\n      this.setThisPeriod(thisSession ? thisSession : sessions[0]);\n      this.loadsAllClaims(thisSession ? thisSession : sessions[0]);\n    }\n  };\n\n  setSearchClaim = (value: string) => {\n    this.setState({ searchClaim: value });\n  };\n\n  loadsAllClaims = (thisSession: SessionPlanInterface) => {\n    // LOADING CLAIMING OF CURRENT CANDIDATES ================================\n    if (this.props.claiming.allClaims === null) {\n      this.props.getAllClaims(\n        2,\n        thisSession._id,\n        (status: boolean, msg: string) => {\n          this.setLoading(status);\n          if (!status && msg.length) {\n            this.props.PushPopupAlert({\n              title: msg,\n              theme: PopupAlertTheme.danger,\n            });\n          }\n        }\n      );\n    }\n  };\n\n  loadsApplications = (application_id: string) => {\n    // LOADING CLAIMING OF CURRENT CANDIDATES ================================\n    if (\n      !this.props.claiming.allApplications.find(\n        (item) => item._id === application_id\n      )\n    ) {\n      this.props.getAllApplications(\n        application_id,\n        (status: boolean, msg: string) => {\n          this.setLoading(status);\n          if (!status && msg.length) {\n            this.props.PushPopupAlert({\n              title: msg,\n              theme: PopupAlertTheme.danger,\n            });\n          }\n        }\n      );\n    }\n  };\n\n  loadsController = (file_id: string, claimType: PlansTypeKeys) => {\n    if (claimType === PlansTypeKeys.APPLICATION)\n      this.loadsApplications(file_id);\n    if (claimType === PlansTypeKeys.EXAMINATION) this.loadsAlAnswers(file_id);\n  };\n\n  loadsAlAnswers = (answersheet_id: string) => {\n    // LOADING CLAIMING OF CURRENT CANDIDATES ================================\n    if (\n      !this.props.claiming.allAnswer.find(\n        (item) => item.answer_sheet_id === answersheet_id\n      )\n    ) {\n      this.props.getAllAnswers(\n        answersheet_id,\n        (status: boolean, msg: string) => {\n          this.setLoading(status);\n          if (!status && msg.length) {\n            this.props.PushPopupAlert({\n              title: msg,\n              theme: PopupAlertTheme.danger,\n            });\n          }\n        }\n      );\n    }\n  };\n\n  componentDidMount = () => {\n    // LOADING APPLICATION SESSION ====================================\n    if (this.props.application_sessions === null) {\n      this.props.GetAllSessionPlans(\n        (status: boolean, msg: string, data?: SessionPlanInterface[]) => {\n          this.setLoading(status);\n          if (!status) {\n            if (msg.length) {\n              this.props.PushPopupAlert({\n                title: msg,\n                theme: PopupAlertTheme.danger,\n              });\n            }\n            if (data && data.length > 0) {\n              this.setDefaultSession(data);\n            }\n          }\n        }\n      );\n    } else if (this.props.application_sessions.length > 0) {\n      this.setDefaultSession(this.props.application_sessions);\n    }\n\n    // LOADING DOCUMENT CATEGORIES ==========================\n    if (!this.props.documentReducer.documentCategory) {\n      this.props.getDocumentCategory();\n      this.setLoading(false);\n    }\n\n    // LOADING DOCUMENT CLARIFICATIONS ==========================\n    if (!this.props.documentReducer.documentSubCategory) {\n      this.props.getDocumentSubCategory();\n      this.setLoading(false);\n    }\n\n    // LOADING DOCUMENT FIELDS ==========================\n    if (!this.props.documentReducer.documentFields) {\n      this.props.getDocumentFields();\n      this.setLoading(false);\n    }\n\n    if (this.props.systemPositions === null) {\n      this.props.getPositions((status: boolean, msg: string) => {\n        this.setLoading(status);\n        console.log({ status: status, msg: msg });\n        if (msg.length) {\n          this.props.PushPopupAlert({\n            title: msg,\n            theme: PopupAlertTheme.danger,\n          });\n        }\n      });\n    } else if (this.state.loading) {\n      this.setLoading(false);\n    }\n\n    if (this.props.claiming.claimReasons === null) {\n      this.props.getClaimReasons((status: boolean, msg: string) => {\n        this.setLoading(status);\n        if (!status) {\n          if (msg.length > 0) {\n            this.props.PushPopupAlert({\n              title: msg,\n              theme: PopupAlertTheme.danger,\n            });\n          }\n        }\n      });\n    }\n\n    if (\n      this.props.courses === null ||\n      (this.props.courses.length === 0 && this.state.loading)\n    ) {\n      this.props.loadCourses(this.setLoading);\n      this.setLoading(false);\n    } else {\n      this.setLoading(false);\n    }\n  };\n\n  displayClaimTitle = (\n    thisClaim: CandidateClaimInterface\n  ): string | JSX.Element => {\n    let result: string = thisClaim.claiming_on_id;\n    if (thisClaim.type_key === PlansTypeKeys.DOCUMENT_VALIDATION) {\n      let thisDocs = thisClaim.user.details.filter(\n        (item) => item.validation_status !== \"waiting\"\n      );\n      result =\n        thisDocs.length > 0\n          ? adminDisplayClaimTitle(\n              this.props.documentReducer,\n              thisDocs,\n              thisClaim\n            )\n          : \"Document not found\";\n    }\n    if (thisClaim.type_key === PlansTypeKeys.APPLICATION) {\n      if (this.props.claiming.allApplications) {\n        let thisApplication = this.props.claiming.allApplications.find(\n          (item) => item._id === thisClaim.claiming_on_id\n        );\n        if (\n          thisApplication &&\n          this.props.claiming.allApplications &&\n          this.props.systemPositions\n        ) {\n          let thisPosition = this.props.systemPositions.find(\n            (item) => item.position_id === thisApplication!.position\n          );\n          if (thisPosition) {\n            result = thisPosition.position_title;\n          } else {\n            result = \"Application not found\";\n          }\n        }\n      }\n    }\n\n    if (\n      thisClaim.type_key === PlansTypeKeys.EXAMINATION &&\n      this.props.courses &&\n      this.props.claiming.allAnswer\n    ) {\n      let thisAnswer = getCourseIdBySheetId(\n        this.props.claiming.allAnswer,\n        thisClaim.claiming_on_id\n      );\n      if (thisAnswer && getCourseById(this.props.courses, thisAnswer.course)) {\n        result =\n          \"Exam of \" +\n          getCourseById(this.props.courses, thisAnswer.course)!.course_name;\n      } else {\n        result = \"Unknown exam\";\n      }\n    }\n\n    return result;\n  };\n\n  onPeriodChange = (period_id: string) => {\n    this.setPeriodChanged(true);\n    this.props.getAllClaims(2, period_id, (status: boolean, msg: string) => {\n      !status && this.setPeriodChanged(false);\n      this.setLoadingData(status);\n      if (status === false && msg.length) {\n        this.props.PushPopupAlert({\n          title: msg,\n          theme: PopupAlertTheme.danger,\n        });\n      }\n    });\n  };\n\n  getLastClaimDate = (claim: CandidateClaimInterface): string => {\n    let result: string = DATE(claim.createdAt);\n    const claimsLength: number = claim.claims.length;\n    result = DATE(claim.claims[claimsLength - 1].createdAt);\n    return result;\n  };\n\n  render() {\n    if (this.props.application_sessions === null) {\n      return (\n        <div className=\"text-center mt-7 font-bold text-4xl text-gray-400 animate-pulse\">\n          Loading Data...\n        </div>\n      );\n    }\n\n    if (this.props.application_sessions.length === 0) {\n      return (\n        <div className=\"bg-yellow-100 rounded flex flex-col items-center justify-center p-6 my-8 text-yellow-900 border border-yellow-900\">\n          <MdInfoOutline className=\"text-6xl md:text-9xl\" />\n          <div className=\"text-center flex flex-col\">\n            <span className=\"text-2xl md:text-4xl font-extrabold\">\n              No active session\n            </span>\n            <span className=\"text-lg\">\n              Please Wait for the system to publish the sessions or contact the\n              administrator\n            </span>\n          </div>\n        </div>\n      );\n    }\n\n    if (this.props.claiming.allClaims === null) {\n      return (\n        <div className=\"text-center mt-7 font-bold text-4xl text-gray-400 animate-pulse\">\n          Loading Data...\n        </div>\n      );\n    }\n\n    console.log(\"=================viewClaim===================\");\n    console.log({\n      allClaims: this.props.claiming.allClaims,\n      viewClaim: this.state.viewClaim,\n      candidateId: this.state.candidateId,\n      claimId: this.state.claimId,\n      // getClaimById: getClaimById(\n      //   this.props.claiming.allClaims,\n      //   this.state.claimId\n      // ),\n      claimTypes: this.props.claiming.claimTypes,\n    });\n    console.log(\"==================viewClaim==================\");\n\n    return (\n      <div>\n        {/* SIDE NAVIGATION */}\n        {!this.state.viewClaim && (\n          <SideNavigation>\n            {/* FILTER SECTION */}\n            <AdminFilterByType loadingClaims={this.state.loadingData} />\n            {/* END FILTER SECTION */}\n          </SideNavigation>\n        )}\n        {/* END SIDE NAVIGATION */}\n\n        {/* 00000000000000000000000000000000000 */}\n\n        {/* CLAIM TITLE ===================================== */}\n        {!this.state.viewClaim && (\n          <ClaimHeaderTitle\n            headerTitle={`${\n              this.props.claiming.selectedClaimType === \"all\"\n                ? \"All\"\n                : this.props.claiming.selectedClaimType ===\n                  PlansTypeKeys.DOCUMENT_VALIDATION\n                ? \"Documents\"\n                : this.props.claiming.selectedClaimType ===\n                  PlansTypeKeys.APPLICATION\n                ? \"Applications\"\n                : this.props.claiming.selectedClaimType ===\n                  PlansTypeKeys.EXAMINATION\n                ? \"Exam\"\n                : this.props.claiming.selectedClaimType ===\n                  PlansTypeKeys.MARKS_PUBLICATION\n                ? \"Marks publication\"\n                : this.props.claiming.selectedClaimType ===\n                  PlansTypeKeys.PLACEMENT_TRANSFER\n                ? \"Placements\"\n                : \"\"\n            } Claiming`}\n            loading={this.state.loadingData}\n            loadingSession={this.state.loading}\n            thisPeriod={this.state.thisPeriod}\n            setThisPeriod={this.setThisPeriod}\n            setLoadingSession={this.setLoadingData}\n            application_sessions={this.props.application_sessions}\n            onPeriodChange={this.onPeriodChange}\n            periodChanged={this.state.periodChanged}\n          />\n        )}\n        {/* END CLAIM TITLE ===================================== */}\n\n        {/* 00000000000000000000000000000000000 */}\n\n        {/* CLAIM CONTENT LIST ===================================== */}\n        {!this.state.viewClaim && (\n          <section className=\"bg-white w-full p-1\">\n            {/* FILTER FORM =================================== */}\n            <section className=\"flex flex-col-reverse sm:flex-row items-center gap-2 w-full my-2\">\n              <div className=\"w-full\">\n                <input\n                  onChange={(e: React.ChangeEvent<HTMLInputElement>) =>\n                    this.setSearchClaim(e.target.value)\n                  }\n                  type=\"text\"\n                  className=\"input-white h-10 text-sm border-2 border-gray-400 focus:border-gray-500 w-full\"\n                  placeholder={`Search claim by title or type`}\n                  value={this.state.searchClaim}\n                  disabled={\n                    filterClaimsByClaimType(\n                      this.props.claiming.allClaims,\n                      this.props.claiming.selectedClaimType\n                    ).length > 0\n                      ? false\n                      : true\n                  }\n                />\n              </div>\n            </section>\n            {/* END FILTER FORM =================================== */}\n            <div className=\"w-full overflow-x-auto\">\n              <table className=\"w-full shadow\" id=\"report_content\">\n                <thead className=\"bg-white border-b-2 border-gray-300 text-gray-600 font-bold text-sm\">\n                  <tr>\n                    <td className=\"px-2 py-2\">#</td>\n                    <td className=\"px-2 py-2\">Applicant names</td>\n                    <td className=\"px-2 py-2\">Claim title</td>\n                    <td className=\"px-2 py-2\">Claim date</td>\n                    {this.props.claiming.selectedClaimType === \"all\" && (\n                      <td className=\"px-2 py-2\">Claim type</td>\n                    )}\n                    <td className=\"px-2 py-2\">Claim level</td>\n                    <td className=\"px-2 py-2\">Claim status</td>\n                    <td className=\"px-2 py-2\"></td>\n                  </tr>\n                </thead>\n                <tbody>\n                  {!this.props.claiming.allClaims ||\n                  !this.props.claiming.claimTypes ||\n                  !this.props.systemPositions ||\n                  this.state.loadingData ? (\n                    <TableLoading\n                      cols={\n                        this.props.claiming.selectedClaimType === \"all\" ? 8 : 7\n                      }\n                    />\n                  ) : search(\n                      filterClaimsByClaimType(\n                        this.props.claiming.allClaims,\n                        this.props.claiming.selectedClaimType\n                      ),\n                      this.state.searchClaim\n                    ).length <= 0 ? (\n                    <tr\n                      className=\"border-b border-gray-200 group hover:bg-gray-50 cursor-pointer\"\n                      key={Math.random()}\n                    >\n                      <td className=\"px-3 py-1\" colSpan={8}>\n                        <NoResult\n                          theme={NoResultThemes.Light}\n                          value={\"No claim found!\"}\n                        />\n                      </td>\n                    </tr>\n                  ) : (\n                    search(\n                      filterClaimsByClaimType(\n                        this.props.claiming.allClaims,\n                        this.props.claiming.selectedClaimType\n                      ),\n                      this.state.searchClaim\n                    ).map((claim: CandidateClaimInterface, index) => (\n                      <tr\n                        className=\"border-b border-gray-200 group hover:bg-gray-50 cursor-pointer\"\n                        key={index + claim._id}\n                        onClick={() => {\n                          this.setViewClaim(true);\n                          this.setClaimId(claim._id);\n                          this.setCandidateId(claim.user.user_id);\n                          this.setClaimType(\n                            whichClaimType(claim)\n                              ? whichClaimType(claim)!\n                              : null\n                          );\n                          this.loadsController(\n                            claim.claiming_on_id,\n                            claim.type_key\n                          );\n                        }}\n                      >\n                        <td className=\"px-3 py-1\">{index + 1}</td>\n                        <td className=\"px-3 py-1 whitespace-nowrap\">\n                          {claim.user.user_info.fname +\n                            \" \" +\n                            claim.user.user_info.lname}\n                        </td>\n                        <td className=\"px-3 py-1 whitespace-nowrap\">\n                          {claim.title}\n                        </td>\n                        <td className=\"px-3 py-1 whitespace-nowrap\">\n                          {this.getLastClaimDate(claim)}\n                        </td>\n                        {this.props.claiming.selectedClaimType === \"all\" && (\n                          <td className=\"px-3 py-1 whitespace-nowrap\">\n                            {whichClaimType(claim)\n                              ? capitalizeFirstLetter(whichClaimType(claim)!)\n                              : \"-\"}\n                          </td>\n                        )}\n                        <td className=\"px-3 py-1 whitespace-nowrap italic\">\n                          Level {claim.claim_level}\n                        </td>\n                        <td className=\"px-3 py-1 whitespace-nowrap\">\n                          <span\n                            className={`inline-block rounded-full duration-300 text-xs font-semibold px-3 py-1 ${\n                              whichClaimStatus(claim).classes\n                            }`}\n                          >\n                            {whichClaimStatus(claim).status}\n                          </span>\n                        </td>\n                        <td className=\"px-3 py-1 text-center whitespace-nowrap\">\n                          <button className=\"btn bg-blue-500 text-white group-hover:bg-blue-600\">\n                            View\n                          </button>\n                        </td>\n                      </tr>\n                    ))\n                  )}\n                </tbody>\n              </table>\n            </div>\n          </section>\n        )}\n        {/* END CLAIM CONTENT LIST ===================================== */}\n\n        {/* 00000000000000000000000000000000000 */}\n\n        {/* view claim */}\n        {this.state.viewClaim &&\n          this.state.candidateId &&\n          this.props.claiming.allClaims &&\n          this.state.claimId &&\n          getClaimById(this.props.claiming.allClaims, this.state.claimId) &&\n          this.props.claiming.claimTypes && (\n            <section className=\"bg-white w-full my-4\">\n              {/* VIEW CLAIM HEADER =============================== */}\n              <section className=\"flex items-center gap-2 py-2 border-b\">\n                <button\n                  className={`ml-3 bg-gray-50 hover:bg-blue-100 rounded-full px-1 py-1 focus:outline-none ${\n                    this.state.loadingRequest\n                      ? \"cursor-not-allowed\"\n                      : \"cursor-pointer\"\n                  } animate__animated animate__fadeIn`}\n                  disabled={this.state.loadingRequest}\n                  onClick={() => {\n                    this.setViewClaim(false);\n                    this.setViewImage(true);\n                    this.setLoadingRequest(false);\n                    this.setActionTaken(null);\n                    this.setResponseMsg(\"\");\n                    this.setFormError(null);\n                  }}\n                >\n                  <MdArrowBack className=\"w-7 h-7\" />\n                </button>\n                <div className={`text-gray-600 font-extrabold text-2xl px-2`}>\n                  Viewing claim\n                </div>\n              </section>\n              {/* END VIEW CLAIM HEADER =============================== */}\n\n              {this.state.loading && (\n                <div className=\"my-4\">\n                  <Loading />\n                </div>\n              )}\n\n              {!this.state.loading && (\n                <section className=\"bg-gray-200\">\n                  {/* FOR DOCUMENT ========================== */}\n                  {this.state.claimType &&\n                    this.state.claimType.toLocaleLowerCase() ===\n                      ClaimTypesInterface.DOCUMENT.toLocaleLowerCase() && (\n                      <div>\n                        {getClaimById(\n                          this.props.claiming.allClaims!,\n                          this.state.claimId!\n                        )!.user.details.find(\n                          (item) =>\n                            item.doc_id ===\n                            getClaimById(\n                              this.props.claiming.allClaims!,\n                              this.state.claimId!\n                            )!.claiming_on_id\n                        ) ? (\n                          <AdminClaimDocView\n                            thisDoc={\n                              getClaimById(\n                                this.props.claiming.allClaims!,\n                                this.state.claimId!\n                              )!.user.details.find(\n                                (item) =>\n                                  item.doc_id ===\n                                  getClaimById(\n                                    this.props.claiming.allClaims!,\n                                    this.state.claimId!\n                                  )!.claiming_on_id\n                              )!\n                            }\n                            documentCategories={this.props.documentReducer}\n                            thisClaim={\n                              getClaimById(\n                                this.props.claiming.allClaims,\n                                this.state.claimId\n                              )!\n                            }\n                            claimTypes={this.props.claiming.claimTypes}\n                            viewImage={this.state.viewImage}\n                            setViewImage={this.setViewImage}\n                            loadingRequest={this.state.loadingRequest}\n                            setLoadingRequest={this.setLoadingRequest}\n                            actionTaken={this.state.actionTaken}\n                            setActionTaken={this.setActionTaken}\n                            responseMsg={this.state.responseMsg}\n                            setResponseMsg={this.setResponseMsg}\n                            formError={this.state.formError}\n                            setFormError={this.setFormError}\n                            candidateId={this.state.candidateId}\n                            claimReasons={this.props.claiming.claimReasons}\n                          />\n                        ) : (\n                          <NoResult\n                            theme={NoResultThemes.Dark}\n                            value={\"Document not found\"}\n                          />\n                        )}\n                      </div>\n                    )}\n\n                  {/* FOR APPLICATION ========================== */}\n                  {this.state.claimType &&\n                    this.state.claimType.toLocaleLowerCase() ===\n                      ClaimTypesInterface.APPLICATION.toLocaleLowerCase() && (\n                      <div>\n                        {getApplicationById(\n                          this.props.claiming.allApplications,\n                          this.props.systemPositions,\n                          getClaimById(\n                            this.props.claiming.allClaims,\n                            this.state.claimId\n                          )!.claiming_on_id\n                        ) ? (\n                          this.props.systemPositions && (\n                            <AdminClaimAppView\n                              thisApplication={\n                                getApplicationById(\n                                  this.props.claiming.allApplications,\n                                  this.props.systemPositions,\n                                  getClaimById(\n                                    this.props.claiming.allClaims,\n                                    this.state.claimId\n                                  )!.claiming_on_id\n                                )!.application\n                              }\n                              thisPosition={\n                                getApplicationById(\n                                  this.props.claiming.allApplications,\n                                  this.props.systemPositions,\n                                  getClaimById(\n                                    this.props.claiming.allClaims,\n                                    this.state.claimId\n                                  )!.claiming_on_id\n                                )!.position\n                              }\n                              documentCategories={this.props.documentReducer}\n                              thisClaim={\n                                getClaimById(\n                                  this.props.claiming.allClaims,\n                                  this.state.claimId\n                                )!\n                              }\n                              claimTypes={this.props.claiming.claimTypes}\n                              systemPositions={this.props.systemPositions}\n                              claimReasons={this.props.claiming.claimReasons}\n                            />\n                          )\n                        ) : (\n                          <NoResult\n                            theme={NoResultThemes.Dark}\n                            value={\"Application not found\"}\n                          />\n                        )}\n                      </div>\n                    )}\n\n                  {/* FOR EXAMINATION ========================== */}\n                  {this.state.claimType &&\n                    this.state.claimType.toLocaleLowerCase() ===\n                      ClaimTypesInterface.EXAMINATION.toLocaleLowerCase() && (\n                      <div>\n                        {this.props.claiming.allAnswer &&\n                        this.props.courses &&\n                        getCourseIdBySheetId(\n                          this.props.claiming.allAnswer,\n                          getClaimById(\n                            this.props.claiming.allClaims,\n                            this.state.claimId\n                          )!.claiming_on_id\n                        ) &&\n                        getCourseById(\n                          this.props.courses,\n                          getCourseIdBySheetId(\n                            this.props.claiming.allAnswer,\n                            getClaimById(\n                              this.props.claiming.allClaims,\n                              this.state.claimId\n                            )!.claiming_on_id\n                          )!.course\n                        ) ? (\n                          <AdminClaimExamView\n                            thisExamSheet={\n                              getCourseIdBySheetId(\n                                this.props.claiming.allAnswer,\n                                getClaimById(\n                                  this.props.claiming.allClaims,\n                                  this.state.claimId\n                                )!.claiming_on_id\n                              )!\n                            }\n                            thisExam={\n                              getCourseById(\n                                this.props.courses,\n                                getCourseIdBySheetId(\n                                  this.props.claiming.allAnswer,\n                                  getClaimById(\n                                    this.props.claiming.allClaims,\n                                    this.state.claimId\n                                  )!.claiming_on_id\n                                )!.course\n                              )!\n                            }\n                            thisClaim={\n                              getClaimById(\n                                this.props.claiming.allClaims,\n                                this.state.claimId\n                              )!\n                            }\n                            claimTypes={this.props.claiming.claimTypes}\n                            claimReasons={this.props.claiming.claimReasons}\n                          />\n                        ) : (\n                          <NoResult\n                            theme={NoResultThemes.Dark}\n                            value={\"Exam not found\"}\n                          />\n                        )}\n                      </div>\n                    )}\n                </section>\n              )}\n            </section>\n          )}\n        {/* end view claim */}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = ({\n  auth,\n  system_settings,\n  sessionPlan,\n  claiming,\n  document,\n  course,\n}: StoreState): {\n  auth: Auth;\n  application_sessions: SessionPlanInterface[] | null;\n  systemPositions: PositionAPI[] | null;\n  claiming: ClaimingReducerType;\n  documentReducer: DocumentReducerInterface;\n  courses: course[] | null;\n} => {\n  return {\n    auth: auth,\n    application_sessions: sessionPlan.allSessionPlans,\n    systemPositions: system_settings.systemPositions,\n    claiming,\n    documentReducer: document,\n    courses: course.courses,\n  };\n};\n\nexport const AdminClaim = connect(mapStateToProps, {\n  getAllClaims,\n  loadCourses,\n  getAllAnswers,\n  getClaimReasons,\n  getAllApplications,\n  GetAllSessionPlans,\n  getDocumentCategory,\n  getDocumentSubCategory,\n  getDocumentFields,\n  getPositions,\n  PushPopupAlert,\n})(Index);\n","import React from \"react\";\nimport { MdInfoOutline } from \"react-icons/md\";\n\ntype NoSessionProps = {\n  title?: string;\n  description?: string;\n};\n\nconst NoSession: React.FC<NoSessionProps> = ({\n  title = \"No session available\",\n  description = \"Please Wait for the system to publish the sessions or contact the administrator\",\n}) => {\n  return (\n    <div className=\"my-5\">\n      <div className=\"bg-yellow-100 rounded flex flex-col items-center justify-center p-6 my-8 text-yellow-900 border border-yellow-900\">\n        <MdInfoOutline className=\"text-6xl md:text-9xl\" />\n        <div className=\"text-center flex flex-col\">\n          <span className=\"text-2xl md:text-4xl font-extrabold\">{title}</span>\n          <span className=\"text-lg\">{description}</span>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default React.memo(NoSession);\n","import axios from \"axios\";\nimport { Dispatch } from \"redux\";\nimport { ActionTypes } from \"./types\";\nimport {\n  AccessTaskInterface,\n  PermissionInterface,\n  SystemSettingsInterface,\n} from \"../shared/interfaces\";\nimport { API } from \"../utils/api\";\nimport { setAxiosToken } from \"../utils/AxiosToken\";\nimport { errorToText } from \"../utils/errors\";\nimport { PositionAPI } from \"../interfaces/position\";\n\nconst url = `${API.AUTH}/auth/user/access`;\n\n/**\n * * ****************************** INTERFACES *****************************\n */\n\n// SYSTEM SETTINGS  ==============\nexport interface GetSystemSettingsAction {\n  type: ActionTypes.GET_SYSTEM_SETTINGS;\n  payload: SystemSettingsInterface[];\n}\n\nexport interface DisableSystemSettingsAction {\n  type: ActionTypes.DISABLE_SYSTEM_SETTINGS;\n  payload: {\n    system_setting_id: string;\n    status: \"enabled\" | \"disabled\";\n  };\n}\n\n// ROLE TASKS ACCESS SETTINGS ===================================\nexport interface GetTaskAccessAction {\n  type: ActionTypes.GET_TASK_ACCESS;\n  payload: AccessTaskInterface[];\n}\n\n// POSITIONS SETTINGS ===================================\nexport interface PositionCreateInterface {\n  position_id?: string;\n  position_title: string;\n  position_code: string;\n  description: string;\n  school_level_id: string;\n  subcategory_id: string;\n  education_institute_id: string;\n  courses: string[];\n  requirements: {\n    user_detail_category_id: string;\n    user_detail_subcategory_id: string;\n    position_requirement: {\n      category_subcategory_data_id: string;\n      required: boolean;\n    }[];\n    required: boolean;\n  }[];\n}\nexport interface GetPositionsAction {\n  type: ActionTypes.GET_POSTIONS;\n  payload: PositionAPI[];\n}\n\nexport interface CreatePositionsAction {\n  type: ActionTypes.CREATE_POSITION;\n  payload: PositionCreateInterface;\n}\n\nexport interface UpdatePositionsAction {\n  type: ActionTypes.UPDATE_POSITION;\n  payload: PositionCreateInterface;\n}\n\nexport interface DeletePositionSettingAction {\n  type: ActionTypes.DELETE_POSITION;\n  payload: string;\n}\n\nexport interface PublishPositionAction {\n  type: ActionTypes.PUBLISH_POSITION;\n  payload: {\n    position_id: string;\n    status: boolean;\n  };\n}\n\nexport type SystemActionType =\n  | GetSystemSettingsAction\n  | DisableSystemSettingsAction\n  | GetTaskAccessAction\n  | GetPositionsAction\n  | CreatePositionsAction\n  | UpdatePositionsAction\n  | DeletePositionSettingAction\n  | PublishPositionAction;\n\n/**\n * * ****************************** ACTIONS *****************************\n */\n\nexport const getSystemSettings = (callback: Function) => {\n  return async (dispatch: Dispatch) => {\n    callback(true, \"\");\n    try {\n      setAxiosToken();\n      const res = await axios.get<SystemSettingsInterface[]>(\n        `${API.AUTH}/system/setting`\n      );\n      console.log(\"=================getSystemSettings===================\");\n      console.log(res);\n      console.log(\"=================getSystemSettings===================\");\n      dispatch<GetSystemSettingsAction>({\n        type: ActionTypes.GET_SYSTEM_SETTINGS,\n        payload: res.data,\n      });\n      callback(false, \"\");\n    } catch (error) {\n      console.log({ code_error: error });\n      callback(false, errorToText(error));\n    }\n  };\n};\n\nexport const disableSystemSetting = (data: {\n  system_setting_id: string;\n  status: \"enabled\" | \"disabled\";\n}) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<DisableSystemSettingsAction>({\n      type: ActionTypes.DISABLE_SYSTEM_SETTINGS,\n      payload: data,\n    });\n  };\n};\n\n// ============================ tasks access =======================\n\nexport const GetTaskAccess = (callback: Function) => {\n  return async (dispatch: Dispatch) => {\n    callback(true, \"\");\n    try {\n      setAxiosToken();\n      const res = await axios.get<\n        {\n          id: string;\n          title: string;\n          key: string;\n          permitted: PermissionInterface;\n        }[]\n      >(`${url}/roleaccess`);\n      let response: AccessTaskInterface[] = res.data.map((data) => ({\n        id: data.id,\n        task: data.title,\n        key: data.key,\n        permitted: data.permitted,\n      }));\n      dispatch<GetTaskAccessAction>({\n        type: ActionTypes.GET_TASK_ACCESS,\n        payload: response,\n      });\n      callback(false, \"\", response);\n    } catch (error) {\n      console.log({ code_error: error });\n      callback(false, errorToText(error));\n    }\n  };\n};\n\n// ============================ positions =======================\n\nexport const getPositions = (callback: Function) => {\n  return async (dispatch: Dispatch) => {\n    callback(true, \"\");\n    try {\n      setAxiosToken();\n      const res = await axios.get<PositionAPI[]>(`${API.APPLICATION}/position`);\n      dispatch<GetPositionsAction>({\n        type: ActionTypes.GET_POSTIONS,\n        payload: res.data,\n      });\n      callback(false, \"\");\n    } catch (error) {\n      console.log({ code_error: error });\n      callback(false, errorToText(error));\n    }\n  };\n};\n\nexport const createPosition = (data: PositionCreateInterface) => {\n  console.log({ createPosition: data });\n  return async (dispatch: Dispatch) => {\n    dispatch<CreatePositionsAction>({\n      type: ActionTypes.CREATE_POSITION,\n      payload: data,\n    });\n  };\n};\n\nexport const updatePosition = (data: PositionCreateInterface) => {\n  console.log({ updatePosition: data });\n  return async (dispatch: Dispatch) => {\n    dispatch<UpdatePositionsAction>({\n      type: ActionTypes.UPDATE_POSITION,\n      payload: data,\n    });\n  };\n};\n\nexport const deletePosition = (data: string) => {\n  console.log({ deletePosition: data });\n  return async (dispatch: Dispatch) => {\n    dispatch<DeletePositionSettingAction>({\n      type: ActionTypes.DELETE_POSITION,\n      payload: data,\n    });\n  };\n};\n\nexport const publishPosition = (data: {\n  position_id: string;\n  status: boolean;\n}) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<PublishPositionAction>({\n      type: ActionTypes.PUBLISH_POSITION,\n      payload: data,\n    });\n  };\n};\n\nexport const FC_GetPositionsByInstitution = (\n  institution_id: string,\n  callback: (status: boolean, msg: string, data?: PositionAPI[]) => void\n) => {\n  return async (dispatch: Dispatch) => {\n    callback(true, \"\");\n    try {\n      setAxiosToken();\n      const res = await axios.get<PositionAPI[]>(\n        `${API.APPLICATION}/position/instituteposition/${institution_id}`\n      );\n      dispatch<GetPositionsAction>({\n        type: ActionTypes.GET_POSTIONS,\n        payload: res.data,\n      });\n      callback(false, \"\", res.data);\n    } catch (error) {\n      console.log({ code_error: error });\n      callback(false, errorToText(error));\n    }\n  };\n};\n","import React from \"react\";\n\ntype TableLoadingProps = {\n  cols: number;\n};\nconst TableLoading: React.FC<TableLoadingProps> = (props) => {\n  const displayCols = (): JSX.Element[] => {\n    let colsArray: number[] = [];\n    for (let index = 0; index < props.cols; index++) {\n      colsArray.push(index);\n    }\n    let result = colsArray.map((element) => {\n      return (\n        <td className=\"p-3 text-center whitespace-nowrap\" key={element}>\n          <div className=\"w-full h-4 rounded bg-gray-200 animate__animated animate__pulse animate__delay-5s animate__infinite\"></div>\n        </td>\n      );\n    });\n\n    return result;\n  };\n  return (\n    <>\n      <tr className=\"border-b border-gray-200\" key={228}>\n        {displayCols()}\n      </tr>\n      <tr className=\"border-b border-gray-200\" key={22648}>\n        {displayCols()}\n      </tr>\n      <tr className=\"border-b border-gray-200\" key={229768}>\n        {displayCols()}\n      </tr>\n    </>\n  );\n};\n\nexport default TableLoading;\n","import {\n  ApplicationStates,\n  SESSION_PLAN_KEYS,\n} from \"../interfaces/application\";\n\nexport interface SystemSettingsInterface {\n  system_setting_id: string;\n  name: string;\n  key: string;\n  status: \"enabled\" | \"disabled\";\n}\n\nexport interface ApplicationSessionInterface {\n  is_active: boolean;\n  application_session_name: string;\n  period: string;\n  application_start_date: string;\n  application_end_date: string;\n  createdAt: string;\n  updatedAt: string;\n  application_session_id: string;\n}\n\nexport interface UserInfoInterface {\n  document_type?: string;\n  issue_number?: string;\n  date_of_issue?: string;\n  date_of_expiry?: string;\n  place_of_issue?: string;\n  application_number?: string;\n  fname: string;\n  lname: string;\n  sex: \"M\" | \"F\";\n  father_names: string;\n  mother_names: string;\n  date_of_birth: string;\n  place_of_birth?: string;\n  country_of_birth: string;\n  village_id: string;\n  village: string;\n  cell: string;\n  sector: string;\n  district: string;\n  province: string;\n  photo?: string;\n  civil_status?: string;\n  spouse?: any;\n  status?: string;\n}\n\nexport interface MySchoolInterface {\n  _id: string;\n  school_name: string;\n  school_code: string;\n  province_id: string;\n  province_code: string;\n  district_id: {\n    _id: string;\n    district_name: string;\n  };\n  district_code: string;\n  sector_code: string;\n  sector_id: string;\n  school_status: string;\n  status: number;\n  createdAt: string;\n  updatedAt: string;\n}\n\nexport interface UserInterface {\n  user_id: string;\n  _id?: string;\n  n_id?: string;\n  phone_number: string;\n  email: string;\n  password?: string;\n  user_info: UserInfoInterface;\n  details: UserDocumentsInterface[];\n  user_photo?: string;\n  default_access: RoleToUserInterface | null;\n  custome_access: CustomeAccessInterface | null;\n  is_active: boolean;\n  disability: boolean;\n  in_education: boolean;\n}\n\nexport interface CandidateDetailsInterface_old {\n  category_id: string;\n  sub_category_id: string;\n  category_subcategory_data: string;\n  title: string;\n  description: string;\n  files: string;\n  start_year: string;\n  end_year: string;\n  school: string;\n  email: string;\n  names: string;\n  phone_number: string;\n  company: string;\n  year: string;\n  doc_id: string;\n  validation_status: \"waiting\" | \"approved\" | \"rejected\";\n  validated_by: {\n    user_id: string;\n    comment: string;\n    validation_status: \"waiting\" | \"approved\" | \"rejected\";\n    date: string;\n  } | null;\n  doc_history_status: string;\n  get_in_date: string;\n  approved?: string;\n}\n\nexport interface CandidateDetailsInterface {\n  category_id: string;\n  sub_category_id: string;\n  category_subcategory_data: string;\n  title: string;\n  description: string;\n  files: string;\n  start_year: string;\n  end_year: string;\n  school: string;\n  email: string;\n  names: string;\n  phone_number: string;\n  company: string;\n  year: string;\n  doc_id: string;\n  validation_status: \"waiting\" | \"approved\" | \"rejected\";\n  validated_by: {\n    user_id: string;\n    comment: string;\n    validation_status: \"waiting\" | \"approved\" | \"rejected\";\n    date: string;\n  } | null;\n  doc_history_status: string;\n  get_in_date: string;\n  approved?: string;\n}\n\nexport interface DocInterface {\n  category_subcategory_data: string;\n  school: string;\n  category_id: string;\n  company: string;\n  description: string;\n  email: string;\n  end_year: string;\n  files: string;\n  names: string;\n  phone_number: string;\n  start_year: string;\n  sub_category_id: string;\n  title: string;\n  year: string;\n  approved: string;\n  doc_id: string;\n  validated_by: null;\n  validation_status: string;\n  doc_history_status: string;\n  get_in_date: string;\n  date_modefied: string;\n}\n\nexport interface CandidateRoleToUserInterface {\n  key: string;\n  status: number;\n  access: boolean;\n  assigned_date: string;\n}\n\nexport interface CandidatesInterface_old {\n  user_id: string;\n  n_id: string;\n  fname: string;\n  lname: string;\n  phone_number: string;\n  district: string;\n  email: string;\n  details: CandidateDetailsInterface[];\n}\n\nexport interface ApplicationExamsInterface {\n  course_id: string;\n  proctoring_type: string;\n  center_id: string;\n  room_id: string;\n}\n\nexport interface CandidatesInterface {\n  _id: string;\n  n_id: string;\n  email: string;\n  phone_number: string;\n  in_education: boolean;\n  disability: boolean;\n  residence: {\n    province_id: string;\n    province_name: string;\n    district_id: string;\n    district_name: string;\n    sector_id: string;\n    sector_name: string;\n  };\n  details: CandidateDetailsInterface[];\n  exams: ApplicationExamsInterface[];\n  user_info: {\n    document_type: string;\n    issue_number: string;\n    date_of_issue: string;\n    date_of_expiry: string;\n    place_of_issue: string;\n    application_number: string;\n    fname: string;\n    lname: string;\n    father_names: string;\n    mother_names: string;\n    sex: string;\n    date_of_birth: string;\n    place_of_birth: string;\n    country_of_birth: string;\n    village_id: string;\n    village: string;\n    cell: string;\n    sector: string;\n    district: string;\n    province: string;\n    civil_status: string;\n    spouse: null;\n    status: string;\n    photo: string;\n  };\n}\n\nexport interface CustomeAccessInterface {\n  access: AccessTaskInterface[];\n  user_id: string;\n  custome_user_access_id: string;\n}\n\nexport interface UserDocumentsInterface {\n  category_id: string;\n  sub_category_id: string;\n  category_subcategory_data: string;\n  title: string;\n  description: string;\n  files: string;\n  start_year: string;\n  end_year: string;\n  school: { title: string; school_id: string | null };\n  email: string;\n  names: string;\n  phone_number: string;\n  company: string;\n  year: string;\n  approved: \"waiting\" | \"approved\" | \"rejected\";\n  doc_id: string;\n  validation_status: \"waiting\" | \"approved\" | \"rejected\";\n  validated_by: {\n    user_id: string;\n    commet: string;\n    validation_status: \"waiting\" | \"approved\" | \"rejected\";\n    date: string;\n  };\n}\n\nexport interface SystemUserRoleInterface {\n  system_user_role_id: string;\n  role: string;\n  status: boolean;\n  access: AccessTaskInterface[];\n  district_required?: boolean;\n  school_required?: boolean;\n  room_required?: boolean;\n  education_institution_required?: boolean;\n  school_id: string;\n  district_id: string;\n}\n\nexport interface CustomeUserAccessInterface {\n  user_id: string;\n  access?: [\n    {\n      id: string;\n      task: string;\n      key: string;\n      permitted: {\n        create: boolean;\n        delete: boolean;\n        update: boolean;\n        view: boolean;\n      };\n    }\n  ];\n}\n\nexport interface PermissionInterface {\n  create: boolean;\n  view: boolean;\n  update: boolean;\n  delete: boolean;\n}\n\nexport interface AccessTaskInterface {\n  id: string;\n  task: string;\n  key: string;\n  permitted: PermissionInterface;\n}\n\nexport interface RoleToUserInterface {\n  system_user_role_id: string;\n  role: string;\n  access: AccessTaskInterface[];\n  status?: number;\n  school_id: string;\n  district_id: string;\n  room_id: string;\n  education_institution_id: string;\n}\n\nexport enum RoomType {\n  Physical = \"Physical\",\n  Virtual = \"Virtual\",\n  Default = \"Default\",\n}\n\nexport interface RoomsInterface {\n  occupied: number;\n  isUsed: boolean;\n  room_type: RoomType;\n  room_number: number;\n  capacity: number;\n  _id: string;\n}\n\nexport interface CentersInterface {\n  rooms: RoomsInterface[];\n  isUsed: boolean;\n  _id: string;\n  center_name: string;\n  center_code: number;\n  district_id: string;\n  education_institute_id: string;\n}\n\nexport interface SectorInterface {\n  district_code: number;\n  district_id: string;\n  sector_name: string;\n  sector_code: number;\n  sector_id: string;\n}\n\nexport interface AllDistrictInterface {\n  sectors: string[];\n  centers: string[];\n  district_name: string;\n  district_code: string;\n  province_code: string;\n  province_id: string;\n  status: number;\n  createdAt: string;\n  updatedAt: string;\n  district_id: string;\n}\nexport interface DistrictInterface {\n  centers: CentersInterface[];\n  sectors: SectorInterface[];\n  province_code: number;\n  province_id: string;\n  district_name: string;\n  district_code: number;\n  _id: string;\n}\n\nexport interface RoomLocationInterface {\n  districts: DistrictInterface[];\n  province_name: string;\n  province_code: number;\n  _id: string;\n}\n\nexport interface AssignRoleToUserActionInterface {\n  user_id: string;\n  data: RoleToUserInterface;\n}\n\nexport interface AssignRoleToUserActionInterface {\n  user_id: string;\n  data: RoleToUserInterface;\n}\n\nexport enum PostRequestStatusInterface {\n  INITIATED = \"initiated\",\n  CONFIRMED = \"confirmed\",\n  RECEIVED = \"received\",\n}\n\nexport interface PostSchoolInterface_old {\n  post_at_school_id: string;\n  school_id: string;\n  position_id: string;\n  district_id: string;\n  needed_posts: number;\n  confirmed_posts?: number;\n  occupied_posts?: number;\n  requested_by: string;\n  confirmed_by?: string;\n  received_posts?: number;\n  request_date: Date;\n  approval_date?: Date;\n  post_at_school_status: PostRequestStatusInterface;\n}\n\nexport interface PostSchoolInterface {\n  _id: string;\n  school_id: string;\n  position_id: string;\n  district_id: string;\n  needed_posts: number;\n  male_number: number;\n  female_number: number;\n  description: string;\n  confirmed_posts?: number;\n  occupied_posts?: number;\n  requested_by: string;\n  confirmed_by?: string;\n  received_posts?: number;\n  request_date: Date;\n  approval_date?: Date;\n  requested_post_status: PostRequestStatusInterface;\n  school: {\n    _id: string;\n    school_name: string;\n    school_code: string;\n    province_id: string;\n    province_code: string;\n    district_id: {\n      _id: string;\n      district_name: string;\n    };\n    district_code: string;\n    sector_code: string;\n    sector_id: string;\n    school_status: string;\n    status: number;\n    createdAt: string;\n    updatedAt: string;\n  };\n  post_request_session_id: string;\n}\n\nexport interface SchoolInfoInterface {\n  school_id: string;\n  school_title: string;\n  district_id: string;\n  number_of_females?: number;\n  number_of_males?: number;\n}\n\nexport interface SchoolsInterface {\n  _id: string;\n  status: boolean;\n  school_name: string;\n  school_code: number;\n  province_id: string;\n  province_code: number;\n  district_id: string;\n  district_code: number;\n  sector_id: string;\n  sector_code: number;\n  education_category_id: string;\n}\n\nexport interface MySchoolInterface {\n  _id: string;\n  school_name: string;\n  school_code: string;\n  province_id: string;\n  province_code: string;\n  district_id: {\n    _id: string;\n    district_name: string;\n  };\n  district_code: string;\n  sector_code: string;\n  sector_id: string;\n  school_status: string;\n  status: number;\n  createdAt: string;\n  updatedAt: string;\n}\n\nexport interface SchoolLevelInterface {\n  school_level_id: string;\n  school_level_name: string;\n  description: string;\n  education_institute: string[];\n  courses: [];\n}\n\nexport interface CourseInterface {\n  course_name: string;\n  course_code: string;\n  description: string;\n  school_levels: string[];\n  course_id: string;\n}\n\nexport interface EducationInstituteInterface {\n  education_category_title: string;\n  school_levels: [];\n  description: string;\n  education_institute_id: string;\n}\n\nexport interface PositionRequirementInterface {\n  user_detail_category_id: string;\n  title: string;\n  user_required_docs: {\n    user_detail_subcategory_id: string;\n    title: string;\n  }[];\n}\n\nexport interface PositionInterface {\n  courses: CourseInterface[];\n  position_title: string;\n  description: string;\n  school_level_id: SchoolLevelInterface;\n  education_institute_id: EducationInstituteInterface;\n  requirements: PositionRequirementInterface[];\n  position_id: string;\n}\n\nexport enum DocumentAttributesInterface {\n  \"Title\" = \"title\",\n  \"Description\" = \"description\",\n  \"Files\" = \"files\",\n  \"email\" = \"email\",\n  \"names\" = \"names\",\n  \"phone_number\" = \"phone_number\",\n  \"position\" = \"position\",\n  \"relation\" = \"relation\",\n  \"src\" = \"src\",\n  \"year\" = \"year\",\n  \"company\" = \"company\",\n  \"category_subcategory_data\" = \"category_subcategory_data\",\n  \"others\" = \"others\",\n  \"start_year\" = \"start_year\",\n  \"end_year\" = \"end_year\",\n  \"School\" = \"School\",\n  \"expiration_date\" = \"expiration_date\",\n}\n\nexport enum DocValidationStatusInterface {\n  APPROVED = \"approved\",\n  REJECTED = \"rejected\",\n}\n\nexport interface DocumentCategoryInterface {\n  user_detail_category_id: string;\n  title: string;\n  description: string;\n  fields: DocumentAttributesInterface[];\n}\n\nexport interface DocumentSubCategoryInterface {\n  category_id: string;\n  title: string;\n  description: string;\n  user_detail_subcategory_id: string;\n}\n\nexport interface DocumentFieldsInterface {\n  _id: string;\n  category_id: string;\n  subcategory_id: string | null;\n  title: string;\n  description: string;\n  others: [];\n}\n\nexport interface ApplicationAssessmentInterface {\n  application_id: string;\n  user_id: string;\n  application_session: string;\n  application_status: string;\n  n_id: string;\n  phone_number: string;\n  email: string;\n  fname: string;\n  lname: string;\n  sex: \"M\" | \"F\";\n  district: string;\n  position: PositionApplicationInterface;\n  details: CandidateDetailsInterface[];\n  createdAt: string;\n  updatedAt: string;\n}\n\nexport interface AdminApplicationsToPrintInterface {\n  application_id: number;\n  names: string;\n  gender?: string;\n  national_id?: string;\n  phone?: string;\n  email?: string;\n  position: string;\n  education_category?: string;\n  application_session?: string;\n  district?: string;\n  date?: string;\n  decision?: ApplicationStates;\n}\n\nexport interface PositionApplicationInterface {\n  courses: string[];\n  position_title: string;\n  description: string;\n  school_level_id: string;\n  education_institute_id: string;\n  requirements: PositionRequirementInterface[];\n  position_id: string;\n}\n\nexport interface PositionRequirementInterface {\n  user_detail_category_id: string;\n  title: string;\n  user_required_docs: {\n    user_detail_subcategory_id: string;\n    title: string;\n  }[];\n}\n\nexport interface ApplicationRequirementInterface {\n  user_detail_category_id: string;\n  title: string;\n  user_required_docs: {\n    user_detail_subcategory_id: string;\n    title: string;\n  }[];\n}\n\nexport interface PeriodInterface {\n  is_active: string;\n  application_session_name: string;\n  period: string;\n  application_start_date: string;\n  application_end_date: string;\n  createdAt: string;\n  updatedAt: string;\n  application_session_id: string;\n}\n\nexport interface LocationRoomTableInterface {\n  province_id: string;\n  province_name: string;\n  district_id: string;\n  district_name: string;\n  center_id: string;\n  center_name: string;\n  room_id: string;\n  room_name: string;\n  capacity: number;\n  occupied: number;\n}\n\nexport interface LocationSectorTableInterface {\n  province_id: string;\n  province_name: string;\n  province_code: number;\n  district_id: string;\n  district_name: string;\n  district_code: number;\n  sector_id: string;\n  sector_name: string;\n  sector_code: number;\n}\n\nexport interface PositionRequirementsFieldInterface {\n  category_id: string;\n  category_name: string;\n  sub_category_id: string;\n  sub_category_name: string;\n  field_id: string;\n  field_name: string;\n  sub_category_required: boolean;\n  required: boolean;\n  isAnyField: boolean;\n}\n\nexport interface PositionRequirementsQualificationInterface {\n  category_id: string;\n  category_name: string;\n  sub_category_id: string;\n  sub_category_name: string;\n  fields: DocumentFieldsInterface[];\n  required: boolean;\n}\n\nexport interface ApplicationPeriodInterface {\n  _id: string;\n  application_status: ApplicationStates;\n  userInfo: {\n    n_id: string;\n    phone_number: string;\n    email: string;\n    user_info: {\n      document_type: string;\n      issue_number: string;\n      date_of_issue: string;\n      date_of_expiry: string;\n      place_of_issue: string;\n      application_number: string;\n      fname: string;\n      lname: string;\n      father_names: string;\n      mother_names: string;\n      sex: string;\n      date_of_birth: string;\n      place_of_birth: string;\n      country_of_birth: string;\n      village_id: string;\n      village: string;\n      cell: string;\n      sector: string;\n      district: string;\n      province: string;\n      civil_status: string;\n      spouse: null;\n      status: string;\n      photo: string;\n    };\n  };\n  user_id: string;\n  position: string;\n  application_session: string;\n  exams: ApplicationExamsInterface[];\n}\n\nexport const getDocCategoryById = (\n  subDocs: DocumentCategoryInterface[],\n  docId: string\n): DocumentCategoryInterface => {\n  return subDocs.filter((doc) => doc.user_detail_category_id === docId)[0];\n};\n\nexport const getSubDocCategoryById = (\n  subDocs: DocumentSubCategoryInterface[],\n  docId: string\n): DocumentSubCategoryInterface => {\n  return subDocs.filter((doc) => doc.user_detail_subcategory_id === docId)[0];\n};\n\nexport const SESSION_PLAN_TYPES: {\n  type_id: number;\n  type_title: string;\n  type_key: SESSION_PLAN_KEYS;\n}[] = [\n  {\n    type_id: 1,\n    type_title: \"Application\",\n    type_key: SESSION_PLAN_KEYS.APPLICATION,\n  },\n  {\n    type_id: 2,\n    type_title: \"Document Validation\",\n    type_key: SESSION_PLAN_KEYS.DOCUMENT_VALIDATION,\n  },\n  {\n    type_id: 3,\n    type_title: \"Examination\",\n    type_key: SESSION_PLAN_KEYS.EXAMINATION,\n  },\n  {\n    type_id: 4,\n    type_title: \"Marks Publication\",\n    type_key: SESSION_PLAN_KEYS.MARKS_PUBLICATION,\n  },\n  {\n    type_id: 5,\n    type_title: \"Placement and Transfer\",\n    type_key: SESSION_PLAN_KEYS.PLACEMENT_TRANSFER,\n  },\n];\n","import React, { useEffect, useState } from \"react\";\nimport { isEmptyOrSpaces } from \"../../shared/dataTest\";\n\ntype ViewPDFProps = {\n  file_url: string;\n  class_name: string;\n  frame_title: string;\n  setLoadingFile: (state: boolean) => void;\n  setLoadingError: (state: boolean) => void;\n};\n\nconst ViewPDF: React.FC<ViewPDFProps> = (props) => {\n  const [loading, setLoading] = useState<boolean>(true);\n  const [error, setError] = useState<{ element: string; msg: string } | null>(\n    null\n  );\n  useEffect(() => {\n    if (loading) {\n      if (isEmptyOrSpaces(props.file_url)) {\n        setError({ element: \"PDF_FILE\", msg: \"File url is required\" });\n      } else if (error !== null) {\n        setError(null);\n      }\n      setLoading(false);\n    }\n  }, [error, loading, props.file_url]);\n\n  return (\n    <div className=\"w-full\">\n      {error ? (\n        <div className=\"alert-warning mt-2 mx-14\">{error.msg}</div>\n      ) : (\n        <object\n          data={props.file_url}\n          type=\"application/pdf\"\n          className={props.class_name}\n          onLoad={() => props.setLoadingFile(false)}\n          onError={() => props.setLoadingFile(true)}\n        >\n          <iframe\n            src={props.file_url}\n            className={props.class_name}\n            title={props.frame_title}\n            onLoad={() => props.setLoadingFile(false)}\n          >\n            <p>This browser does not support PDF!</p>\n          </iframe>\n        </object>\n      )}\n    </div>\n  );\n};\n\nexport default ViewPDF;\n"],"sourceRoot":""}
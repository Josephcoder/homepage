{"version":3,"sources":["actions/users.ts","components/Table/Table.tsx","components/Navigation/SideNavigation.tsx","actions/claiming.ts","actions/session.ts","actions/document.ts","actions/settings.ts","containers/Claimings/Admin/AdminClaimAppView.tsx","containers/Claimings/Admin/AdminClaimDocView.tsx","containers/Claimings/Admin/index.tsx","shared/interfaces.tsx","containers/Claimings/ClaimDocView.tsx","containers/Positions/ViewRequirements.tsx","containers/Claimings/Candidate/ApplicationFormView.tsx","containers/Claimings/Candidate/DocFormView.tsx","containers/Claimings/Candidate/FormApplicationList.tsx","containers/Claimings/Candidate/FormDocumentList.tsx","containers/Claimings/Candidate/ClaimForm.tsx","containers/Claimings/ClaimHeaderTitle.tsx","containers/Claimings/Admin/AdminFilterByType.tsx","containers/SessionSettings/SessionDetails.tsx","containers/Claimings/Candidate/index.tsx","containers/Claimings/Candidate/FilterByType.tsx","containers/Claimings/ClaimApplView.tsx"],"names":["documentValidationStatus","fetchUserAccess","dispatch","a","setAxiosToken","axios","get","API","AUTH","res","console","log","users_response","type","ActionTypes","FETCH_USERS_ACCESS","payload","data","users","error","user_error","blockUserToSystem","BLOCK_USER_TO_SYSTEM","unBlockUserToSystem","UNBLOCK_USER_TO_SYSTEM","assignRoleToUserAccess","ASSIGN_ROLE_TO_USER","customizeUserAccess","CUSTOMIZE_USER_ACCESS","resetUserAccess","RESET_USER_ACCESS","verifyAllDocument","VERIFY_ALL_DOCUMENT","Table","table","tr","rows","columns","hideColumns","pagination","search","tableSize","tableClass","tableId","rounded","searchBG","thColor","loading","length","result","characters","charactersLength","i","charAt","Math","floor","random","FC_makeID","useState","totalItems","setTotalItems","totalPages","setTotalPages","currentPage","setCurrentPage","pages","setPages","pageSize","setPageSize","startIndex","setStartIndex","endIndex","setEndIndex","useEffect","tablePagination","document","getElementById","getElementsByTagName","ceil","min","_pages","Array","from","keys","map","style","display","className","placeholder","onChange","e","filterType","filter","td","cols","toLowerCase","textContent","innerText","indexOf","filterTable","target","value","disabled","Number","id","column","index","padding","alignText","isSortAllowed","onClick","switching","x","y","shouldSwitch","colIndex","dir","switchcount","innerHTML","parentNode","insertBefore","sortThisColumn","columnTitle","aria-label","page","pageIndex","_SideNavigation","props","componentDidMount","PageHasSubNav","componentWillUnmount","state","this","auth","isAuthenticated","navActive","system","navigation","children","React","Component","SideNavigation","connect","NavToogle","MainItem","title","icon","MdBrightness1","active","count","IconDefined","SubItemContainer","SubItem","GetClaimingTypes","callback","CLAIMING","claimtYPES","claim_types","status","GET_CLAIMING_TYPES","errorToText","setSelectedClaimType","thisType","SELECT_CLAIM_TYPE","createClaim","CREATE_CLAIM","createReClaim","RE_CLAIM","evaluateClaim","EVALUATE_CLAIM","getMyClaims","user_id","period_id","order","sortBy","post","user","api_claim","GET_MY_CLAIMS","getMyRejectedApplications","APPLICATION","claimPersonalApplication","application","GET_CANDIDATES_APPLICATIONS","getMyRejectedDocuments","claimPersonalDocuments","details","key","dataRejected","validation_status","push","claimPersonalDocumentDetails","GET_CANDIDATES_DOCUMENTS","getAllClaims","claim_level","GET_ALL_CLAIMS","getAllApplications","GET_ALL_APPLICATION","GetPlansTypes","GET_PLANS_TYPES","plan_types","setSelectedPlanType","SELECT_PLAN_TYPE","getActiveSessionPlan","GET_ACTIVE_SESSION_PLANS","session_plan","undefined","is_active","GetAllSessionPlans","GET_ALL_SESSION_PLANS","session_data","createSessionPlan","CREATE_SESSION_PLAN","updateSessionPlan","UPDATE_SESSION_PLAN","sessionActivation","SESSION_ACTIVATION","deleteSessionPlan","DELETE_SESSION_PLAN","getDocumentCategory","docCategory","GET_DOCUMENT_CATEGORY","createDocumentCategory","CREATE_DOCUMENT_CATEGORY","updateDocumentCategory","UPDATE_DOCUMENT_CATEGORY","deleteDocumentCategory","DELETE_DOCUMENT_CATEGORY","getDocumentSubCategory","docSubCategory","GET_DOCUMENT_SUB_CATEGORY","doc_SUB_category_error","createDocumentSubCategory","CREATE_DOCUMENT_SUB_CATEGORY","updateDocumentSubCategory","UPDATE_DOCUMENT_SUB_CATEGORY","deleteDocumentSubCategory","DELETE_DOCUMENT_SUB_CATEGORY","getDocumentFields","docFields","GET_DOCUMENT_FIELDS","createDocumentFields","CREATE_DOCUMENT_FIELDS","updateDocumentFields","reducer","UPDATE_DOCUMENT_FIELDS","deleteDocumentFields","DELETE_DOCUMENT_FIELDS","getCandidatesInInstitute","educatin_type_id","url","newArray","element","GET_CANDIDATE_IN_INSTITUTE","verifyDocument","action_verify","VERIFY_DOCUMENT","getSystemSettings","GET_SYSTEM_SETTINGS","code_error","disableSystemSetting","DISABLE_SYSTEM_SETTINGS","getApplicationSessions","GET_APPLICATION_SESSIONS","createAplicationSession","CREATE_APPLICATION_SESSIONS","updateAplicationSession","check","UPDATE_APPLICATION_SESSIONS","disableApplicationSession","DISABLE_APPLICATION_SESSION","getPositions","GET_POSTIONS","deletePosition","DELETE_POSITION","publishPosition","PUBLISH_POSITION","viewTabs","FC_AdminApplicationPositionDistinctCategory","thisPosition","documentCategories","PositionsTemp","DistinctCategoriesTemp","DistinctCategoriesIds","DistinctSubCategoriesTemp","DistinctSubCategoriesIds","requirements","req","thisRequirements","thisCategory","documentCategory","find","item","user_detail_category_id","category","thisSubCategory","documentSubCategory","user_detail_subcategory_id","subcategory","category_id","field","thisField","documentFields","_id","position_requirement","required","category_title","subcategory_id","subcategory_title","field_title","field_id","includes","reAssessApplication","PushPopupAlert","loadingRequest","setLoadingRequest","actionTaken","setActionTaken","formError","setFormError","responseMsg","setResponseMsg","profile","selectedTab","setSelectedTab","handleVerify","msg","isEmptyOrSpaces","subClaim","thisClaim","claims","level","api_body","sub_claim_id","evaluation_comment","evaluated_by","decision_taken_status","put","evaluate_claim_res","ClaimDecisionStatus","ACCEPTED","overrideDecision","theme","PopupAlertTheme","success","danger","patch","claiming_on_id","comment","application_status","ApplicationStates","Shortlisted","application_id","getPositionById","position_id","systemPositions","Object","values","thisApplication","position","description","school_level_id","school_level_name","education_institute_id","education_category_title","courses","course_name","course_code","course_id","NoResult","NoResultThemes","Dark","ViewRequirements","showEvaluator","userList","position_title","previous","Rejected","capitalizeFirstLetter","override_by","DATE","createdAt","reason","claim","showDate","timestampToDate","date_created","timeFR","isClaimEvaluated","REJECTED","toLocaleLowerCase","getUserDocuments","user_info","fname","lname","last_claim_status","ClaimStatus","PENDING","resize","window","confirm","FC_DocValidation","doc_id","DocValidationStatusInterface","APPROVED","validated_by","api_redux","date","FC_shortListing","candidate_id","candidateId","setViewImage","viewImage","adminDisplayClaimTitle","thisDoc","commet","src","AUTH_FILES","files","alt","DELETED","thisUser","candidateDocuments","type_key","PlansTypeKeys","DOCUMENT_VALIDATION","AdminClaimGetDocTitle","main","doc","DocCategory","DocSubCategory","DocField","DocTitle","sub_category_id","c","category_subcategory_data","sub_category","getApplicationById","allApplications","AdminClaim","system_settings","sessionPlan","claiming","application_sessions","allSessionPlans","documentReducer","thisPeriod","setThisPeriod","setLoading","loadingSession","setLoadingSession","periodChanged","setPeriodChanged","loadingPosition","setLoadingPosition","loadingApplications","setLoadingApplications","loadingClaims","setLoadingClaims","loadingDocuments","setLoadingDocuments","loadingClarifications","setLoadingClarifications","loadingUsers","setLoadingUsers","loadingFields","setLoadingFields","viewClaim","setViewClaim","claimId","setClaimId","claimType","setClaimType","setCandidateId","thisSession","allClaims","session_plan_id","displayClaimName","displayClaimTitle","AdminFilterByType","ClaimHeaderTitle","headerTitle","selectedClaimType","EXAMINATION","MARKS_PUBLICATION","PLACEMENT_TRANSFER","onPeriodChange","claimTypes","filterClaimsByClaimType","Light","whichClaimType","whichClaimStatus","classes","getClaimById","ClaimTypesInterface","DOCUMENT","PostRequestStatusInterface","DocumentAttributesInterface","SESSION_PLAN_KEYS","isReclaimAllowed","_thisClaim","claim_status","EVALUATED","handleSubmit","reClaimingMsg","warning","setReClaimingMsg","setReClaiming","ClaimGetDocTitle","reClaiming","colSpan","FC_ApplicationPositionDistinctCategory","category_subcategory_data_id","setChooseClaimFile","setClaimFileId","setViewThisFile","getRejectedApplicants","applicationData","FormApplicationList","objList","text","searchInput","setSearchInput","candidateApplications","isClaimAllowed","myClaims","activeSession","product","flag","prop","toString","DocumentTitleData","documentData","documentTemp","company","email","end_year","names","phone_number","school","school_id","start_year","year","doc_title","getRejectedDocuments","rejected","FormDocumentList","viewThisFile","category_subcategory_Data_id","allClaim","claimOnId","ClaimForm","isDocumentIdValid","alert","info","isApplicationIdValid","app_id","app","setState","setLoadingForm","loadingForm","setAlertError","alertError","claimFileId","chooseClaimFile","setClaimComment","claimComment","isClaimTypeOpen","plans","isPlanActive","isClaimBtnValid","file_id","claim_type","setFormState","thisClaimType","thisClaimTypeId","formType","activeSessionPlan","_isDocumentIdValid","_isApplicationIdValid","getDocumentById","documents","applications","getValidation","thisId","old_reason","old_status","old_evaluated_by","cleanToClose","preventDefault","selectClaimType","generateChooseFileTitle","formState","Modal","backDrop","Themes","default","close","displayClose","backDropClose","widthSizeClass","ModalSize","extraLarge","medium","body","footer","onSubmit","replace","ApplicationFormView","isLoading","sessions","selectPeriod","session","session_plan_name","claimList","loadingClaimTypes","setLoadingClaimTypes","countClaims","Fragment","isActivationAllowed","thisPlans","today","Date","end_date","getTime","getPlanTypeByKey","allPlanTypes","viewThisSession","thisPlan","planEndDate","planStartDate","start_date","type_status","SessionPlanTypeStatus","CLOSED","SessionDetails","handlePlanActivation","newState","newData","period","updatedAt","prototype","hasOwnProperty","call","OPEN","type_id","type_title","allowed_claim_level","history","setViewThisSession","ClaimTypesEnum","loadingRejectedApplications","setLoadingRejectedApplications","loadingRejectedDocuments","setLoadingRejectedDocuments","COMPLETED","setViewPosition","viewPosition","document_id","claim_id","exam","marks_publication","placement","displayDocClaimTitle","CandidateClaim","claimForm","setClaimForm","thisCLaim","handleDelete","ClaimApplView"],"mappings":"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","file":"static/js/10.9597d81a.chunk.js","sourcesContent":["import axios from \"axios\";\nimport { Dispatch } from \"redux\";\nimport { ActionTypes } from \"./types\";\nimport {\n  AssignRoleToUserActionInterface,\n  CustomeAccessInterface,\n  UserInterface,\n} from \"../shared/interfaces\";\nimport { API } from \"../utils/api\";\nimport { setAxiosToken } from \"../utils/AxiosToken\";\n\n/**\n * * ****************************** INTERFACES *****************************\n */\n\ninterface FetchUsersAction {\n  type: ActionTypes.FETCH_USERS_ACCESS;\n  payload: UserInterface[];\n}\n\ninterface BlockUserToSystem {\n  type: ActionTypes.BLOCK_USER_TO_SYSTEM | ActionTypes.UNBLOCK_USER_TO_SYSTEM;\n  payload: string;\n}\n\ninterface AssignRoleToUserAction {\n  type: ActionTypes.ASSIGN_ROLE_TO_USER;\n  payload: AssignRoleToUserActionInterface;\n}\n\ninterface CustomizeUserAccessAction {\n  type: ActionTypes.CUSTOMIZE_USER_ACCESS;\n  payload: CustomeAccessInterface;\n}\n\ninterface ResetUserAccessAction {\n  type: ActionTypes.RESET_USER_ACCESS;\n  payload: string;\n}\n\ntype fetchUserAccessInterface = {\n  users: UserInterface[];\n  next: {\n    page: number;\n    limit: number;\n  } | null;\n  previous: {\n    page: number;\n    limit: number;\n  } | null;\n  total_users: number;\n};\n\nexport enum documentValidationStatus {\n  waiting = \"waiting\",\n  approved = \"approved\",\n  rejected = \"rejected\",\n}\n\nexport interface VerifyDocumentInterface {\n  user_id: string;\n  doc_id: string;\n  validation_status: \"waiting\" | \"approved\" | \"rejected\";\n  validated_by: {\n    user_id: string;\n    comment: string;\n    validation_status: \"waiting\" | \"approved\" | \"rejected\";\n    date?: string;\n  };\n}\n\ninterface VerifyAllDocumentAction {\n  type: ActionTypes.VERIFY_ALL_DOCUMENT;\n  payload: VerifyDocumentInterface;\n}\n\nexport type AccessUserActionType =\n  | FetchUsersAction\n  | BlockUserToSystem\n  | AssignRoleToUserAction\n  | CustomizeUserAccessAction\n  | ResetUserAccessAction\n  | VerifyAllDocumentAction;\n\n/**\n * * ****************************** ACTIONS *****************************\n */\n\nexport const fetchUserAccess = () => {\n  return async (dispatch: Dispatch) => {\n    try {\n      setAxiosToken();\n      const res = await axios.get<fetchUserAccessInterface>(\n        `${API.AUTH}/users?page=1&limit=500`\n      );\n      console.log({ users_response: res });\n      dispatch<FetchUsersAction>({\n        type: ActionTypes.FETCH_USERS_ACCESS,\n        payload: res.data.users,\n      });\n    } catch (error) {\n      console.error({ user_error: error });\n    }\n  };\n};\n\nexport const blockUserToSystem = (data: string) => {\n  console.log({ data });\n  return async (dispatch: Dispatch) => {\n    dispatch<BlockUserToSystem>({\n      type: ActionTypes.BLOCK_USER_TO_SYSTEM,\n      payload: data,\n    });\n  };\n};\n\nexport const unBlockUserToSystem = (data: string) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<BlockUserToSystem>({\n      type: ActionTypes.UNBLOCK_USER_TO_SYSTEM,\n      payload: data,\n    });\n  };\n};\n\nexport const assignRoleToUserAccess = (\n  data: AssignRoleToUserActionInterface\n) => {\n  console.log({ data });\n  return async (dispatch: Dispatch) => {\n    dispatch<AssignRoleToUserAction>({\n      type: ActionTypes.ASSIGN_ROLE_TO_USER,\n      payload: data,\n      // payload: response.data,\n    });\n  };\n};\n\nexport const customizeUserAccess = (data: CustomeAccessInterface) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<CustomizeUserAccessAction>({\n      type: ActionTypes.CUSTOMIZE_USER_ACCESS,\n      payload: data,\n    });\n  };\n};\n\nexport const resetUserAccess = (data: string) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<ResetUserAccessAction>({\n      type: ActionTypes.RESET_USER_ACCESS,\n      payload: data,\n    });\n  };\n};\n\nexport const verifyAllDocument = (data: VerifyDocumentInterface) => {\n  console.log({ data });\n  return async (dispatch: Dispatch) => {\n    dispatch<VerifyAllDocumentAction>({\n      type: ActionTypes.VERIFY_ALL_DOCUMENT,\n      payload: data,\n    });\n  };\n};\n","import React, { useEffect, useState } from \"react\";\nimport { BiSort } from \"react-icons/bi\";\nimport { MdNavigateBefore, MdNavigateNext, MdSearch } from \"react-icons/md\";\n\nconst FC_makeID = (length: number = 5): string => {\n  let result: string = \"\";\n  let characters: string =\n    \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\n  let charactersLength = characters.length;\n  for (let i: number = 0; i < length; i++) {\n    result += characters.charAt(Math.floor(Math.random() * charactersLength));\n  }\n  return result;\n};\n\nexport const sortThisColumn = (\n  tableId: string,\n  colIndex: number = 0,\n  dir: \"asc\" | \"desc\" = \"asc\"\n) => {\n  var table,\n    rows,\n    switching,\n    i,\n    x,\n    y,\n    shouldSwitch,\n    switchcount = 0;\n  table = document.getElementById(tableId) as HTMLTableElement;\n  switching = true;\n  /* Make a loop that will continue until\n  no switching has been done: */\n  if (table) {\n    while (switching) {\n      //start by saying: no switching is done:\n      switching = false;\n      rows = table.rows;\n      /*Loop through all table rows (except the\n    first, which contains table headers):*/\n      for (i = 1; i < rows.length - 1; i++) {\n        //start by saying there should be no switching:\n        shouldSwitch = false;\n        /*Get the two elements you want to compare,\n      one from current row and one from the next:*/\n        x = rows[i].getElementsByTagName(\"TD\")[colIndex];\n        y = rows[i + 1].getElementsByTagName(\"TD\")[colIndex];\n        /*check if the two rows should switch place,\n      based on the direction, asc or desc:*/\n        if (dir === \"asc\" && x && y) {\n          if (x.innerHTML.toLowerCase() > y.innerHTML.toLowerCase()) {\n            //if so, mark as a switch and break the loop:\n            shouldSwitch = true;\n            break;\n          }\n        } else if (dir === \"desc\" && x && y) {\n          if (x.innerHTML.toLowerCase() < y.innerHTML.toLowerCase()) {\n            //if so, mark as a switch and break the loop:\n            shouldSwitch = true;\n            break;\n          }\n        }\n      }\n      if (shouldSwitch && rows[i].parentNode) {\n        /*If a switch has been marked, make the switch\n      and mark that a switch has been done:*/\n        rows[i].parentNode!.insertBefore(rows[i + 1], rows[i]);\n        switching = true;\n        //Each time a switch is done, increase this count by 1:\n        switchcount++;\n      } else {\n        /*If no switching has been done AND the direction is \"asc\",\n      set the direction to \"desc\" and run the while loop again.*/\n        if (switchcount === 0 && dir === \"asc\") {\n          dir = \"desc\";\n          switching = true;\n        }\n      }\n      // if (i === 0) continue;\n      // rows.cells[i].style.backgroundColor = \"blue\";\n    }\n  }\n};\n\nexport interface TableColumnsInterface {\n  columnTitle: JSX.Element | string;\n  alignText: string;\n  padding?: string;\n  isSortAllowed?: boolean;\n}\n\ninterface TableProps {\n  columns: TableColumnsInterface[];\n  rows: Function;\n  hideColumns?: boolean;\n  pagination?: boolean;\n  search?: boolean;\n  tableSize?: string;\n  tableClass?: string;\n  tableId?: string;\n  rounded?: boolean;\n  searchBG?: string;\n  thColor?: string;\n  loading?: boolean;\n}\n\nconst Table: React.FC<TableProps> = ({\n  rows,\n  columns,\n  hideColumns = false,\n  pagination = false,\n  search = false,\n  tableSize = \"w-full\",\n  tableClass,\n  tableId = \"myTable\",\n  rounded = false,\n  searchBG = \"bg-gray-200\",\n  thColor = \"blue\",\n  loading = false,\n}) => {\n  const startPage = 1;\n  tableId = tableId === \"myTable\" ? FC_makeID() : tableId;\n  let table: HTMLElement, tr: HTMLCollectionOf<HTMLTableRowElement>;\n  const [totalItems, setTotalItems] = useState<number>(0);\n  const [totalPages, setTotalPages] = useState<number>(1);\n  const [currentPage, setCurrentPage] = useState<number>(1);\n  const [pages, setPages] = useState<number[]>();\n  const [pageSize, setPageSize] = useState<number>(10);\n  const [startIndex, setStartIndex] = useState<number>(0);\n  const [endIndex, setEndIndex] = useState<number>(0);\n\n  useEffect(() => {\n    pagination && tablePagination();\n  });\n\n  const filterTable = (\n    data: string,\n    filterType?: \"default\" | \"field\"\n  ): void => {\n    var filter, tr, td, rows: number, cols: number, txtValue;\n    if (filterType === \"field\" && data === \"all\") data = \"\";\n    filter = data.toLowerCase();\n    table = document.getElementById(tableId)!;\n    tr = table.getElementsByTagName(\"tr\");\n    for (rows = 0; rows < tr.length; rows++) {\n      for (cols = 0; cols < columns.length; cols++) {\n        td = tr[rows].getElementsByTagName(\"td\")[cols];\n        if (td) {\n          txtValue = td.textContent || td.innerText;\n          if (txtValue.toLowerCase().indexOf(filter) > -1) {\n            tr[rows].style.display = \"\";\n            break;\n          } else {\n            tr[rows].style.display = \"none\";\n          }\n        }\n      }\n    }\n  };\n\n  const tablePagination = (): void => {\n    table = document.getElementById(tableId)!;\n    tr = table.getElementsByTagName(\"tr\");\n    setTotalItems(tr.length);\n    setTotalPages(Math.ceil(totalItems / pageSize));\n\n    // calculate start and end item indexes on the current page\n    setStartIndex((currentPage - 1) * pageSize);\n    setEndIndex(Math.min(startIndex + pageSize - 1, totalItems - 1));\n\n    /**\n     * TODO!\n     * There is a problem with this condition\n     */\n    let _pages = Array.from(Array(totalPages + 1 - startPage).keys()).map(\n      (i) => startPage + i\n    );\n    if (!pages || _pages.length !== pages.length) {\n      setPages(_pages);\n    }\n\n    for (let i: number = 0; i < tr.length; i++) {\n      if (i >= startIndex && i <= endIndex) {\n        tr[i].style.display = \"\";\n      } else {\n        tr[i].style.display = \"none\";\n      }\n    }\n  };\n\n  return (\n    <div className={`${tableSize}`}>\n      {/* search box  */}\n      {search && (\n        <div className={`${searchBG} w-full mb-2`}>\n          {search && (\n            <div className=\"bg-white rounded flex items-center w-full p-2 border-2 border-gray-500\">\n              <MdSearch className=\"h-5 w-5 fill-current text-gray-400\" />\n              <input\n                type=\"search\"\n                placeholder=\"search\"\n                onChange={(e) => filterTable(e.target.value)}\n                className=\"w-full h-6 pl-4 text-sm outline-none focus:outline-none bg-white\"\n                disabled={loading}\n              />\n\n              {pagination && (\n                <div className=\"select\">\n                  <select\n                    className=\"text-base outline-none focus:outline-none bg-white\"\n                    onChange={(e) => setPageSize(Number(e.target.value))}\n                    disabled={loading}\n                  >\n                    <option value=\"10\">10</option>\n                    <option value=\"25\">25</option>\n                    <option value=\"50\">50</option>\n                    <option value=\"100\">100</option>\n                  </select>\n                </div>\n              )}\n            </div>\n          )}\n        </div>\n      )}\n      <table\n        className={\n          tableClass\n            ? tableClass\n            : `w-full shadow ${\n                rounded && \"sm:rounded-lg\"\n              } table-auto order-table`\n        }\n        id={tableId}\n      >\n        {!hideColumns && (\n          <thead className=\"bg-white border-b-2 border-gray-300 text-gray-600 font-bold text-base\">\n            <tr\n              className={`text-left tracking-wide bg-${thColor}-100 border-b-2 border-${thColor}-500 text-${thColor}-600`}\n            >\n              {columns.map((column, index) => (\n                <th\n                  key={index}\n                  className={`${column.padding} text-${\n                    column.alignText\n                  } px-3 py-2 ${column.isSortAllowed && \"cursor-pointer\"}`}\n                  onClick={() =>\n                    column.isSortAllowed && sortThisColumn(tableId, index)\n                  }\n                >\n                  <div className=\"flex items-center gap-1\">\n                    {column.columnTitle}\n                    {column.isSortAllowed && <BiSort />}\n                  </div>\n                </th>\n              ))}\n            </tr>\n          </thead>\n        )}\n        <tbody id=\"table-data\" className=\"bg-white text-black text-base\">\n          {rows()}\n        </tbody>\n      </table>\n      {pagination && (\n        <div className=\"sm:flex-1 sm:flex sm:items-center sm:justify-between mt-4 work-sans\">\n          <div>\n            <span className=\"text-xs xs:text-sm text-gray-900\">\n              Showing 1 to {pageSize} of {totalItems - 1} Entries\n            </span>\n          </div>\n          <div>\n            <nav className=\"inline-flex shadow-sm\">\n              <div>\n                <button\n                  type=\"button\"\n                  className={`inline-flex items-center px-2 py-2 rounded-l-md border border-gray-300 text-sm font-medium text-gray-500 ${\n                    currentPage !== 1 && \"bg-white\"\n                  }`}\n                  aria-label=\"Previous\"\n                  disabled={currentPage === 1 || loading}\n                  onClick={() => setCurrentPage(currentPage - 1)}\n                >\n                  <MdNavigateBefore className=\"h-5 w-5\" />\n                </button>\n              </div>\n              <div>\n                {pages &&\n                  pages.map((page, pageIndex) => (\n                    <button\n                      key={pageIndex}\n                      className={`-ml-px inline-flex items-center px-4 py-2 border border-gray-300 text-sm font-medium text-gray-700 ${\n                        page !== currentPage\n                          ? \"bg-white\"\n                          : \"bg-gray-100 cursor-default\"\n                      }`}\n                      disabled={page === currentPage || loading}\n                      onClick={() => setCurrentPage(page)}\n                    >\n                      {page}\n                    </button>\n                  ))}\n              </div>\n              <div>\n                <button\n                  type=\"button\"\n                  className={`inline-flex items-center px-2 py-2 rounded-r-md border border-gray-300 text-sm leading-5 font-medium text-gray-500 ${\n                    currentPage !== totalPages && \"bg-white\"\n                  }`}\n                  aria-label=\"Next\"\n                  disabled={currentPage === totalPages || loading}\n                  onClick={() => setCurrentPage(currentPage + 1)}\n                >\n                  <MdNavigateNext className=\"h-5 w-5\" />\n                </button>\n              </div>\n            </nav>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default Table;\n","import React, { FC, ReactElement, ReactNode } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Auth, System } from \"../../actions\";\nimport { StoreState } from \"../../reducers\";\nimport { NavToogle, PageHasSubNav } from \"../../actions\";\nimport { MdBrightness1, MdSearch } from \"react-icons/md\";\n\n// props for the component\ninterface AppProps {\n  auth: Auth;\n  system: System;\n  PageHasSubNav: Function;\n  NavToogle: Function;\n  children: ReactNode;\n}\n//\ninterface AppState {\n  loading: boolean;\n}\n\nclass _SideNavigation extends React.Component<AppProps, AppState> {\n  constructor(props: AppProps) {\n    super(props);\n\n    this.state = {\n      loading: false,\n    };\n  }\n\n  componentDidMount = () => this.props.PageHasSubNav(true);\n  componentWillUnmount = () => this.props.PageHasSubNav(false);\n\n  render() {\n    const isAuthenticated = this.props.auth.isAuthenticated;\n\n    if (isAuthenticated === false) {\n      return null;\n    }\n\n    const navActive = this.props.system.navigation;\n    return (\n      <div\n        className={`fixed w-48 p-1 pr-2 pl-6 text-gray-700 bg-white ${\n          navActive === true ? \"lg:left-16  left-16\" : \" -left-72 lg:left-16\"\n        }  top-0 bottom-0 pt-20 z-30 shadow-lg  transition-all duration-500 ease-in-out overflow-y-auto`}\n      >\n        {this.props.children}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = ({\n  auth,\n  system,\n}: StoreState): { auth: Auth; system: System } => {\n  return { auth: auth, system: system };\n};\n\nexport const SideNavigation = connect(mapStateToProps, {\n  NavToogle,\n  PageHasSubNav,\n})(_SideNavigation);\n\n//************************************ FORM SEARCH **************************************** */\n\ntype SearchComponentInterface = {\n  data: any[];\n};\n\nexport const Search: FC<SearchComponentInterface> = ({\n  data,\n}): ReactElement => {\n  return (\n    <div className=\"m-1 rounded-md shadow-md border border-blue-400 bg-white p-1 flex \">\n      <label htmlFor=\"search-text\" className=\"inline-block text-2xl\">\n        <MdSearch className=\"inline-block text-blue-400\" />\n      </label>\n      <input\n        type=\"search\"\n        className=\"outline-none bg-transparent flex-1 pl-1\"\n        placeholder=\"Search\"\n        id=\"search-text\"\n      />\n    </div>\n  );\n};\n\n//************************************ FORM SEARCH **************************************** */\n\ntype MainItemComponentInterface = {\n  title: string;\n  icon?: any;\n  active?: boolean;\n  count?: number;\n};\n\n/**\n *\n * @param param0\n * @returns\n */\nexport const MainItem: FC<MainItemComponentInterface> = ({\n  title = \"\",\n  icon = MdBrightness1,\n  active = false,\n  count = 0,\n}): ReactElement => {\n  const IconDefined = icon;\n  return (\n    <section\n      className={`${\n        active === true\n          ? \"bg-blue-500 text-white font-bold\"\n          : \"bg-blue-100 text-blue-800\"\n      } mb-1 hover:font-bold py-1 hover:bg-blue-400 hover:text-white --font-bold  px-2 rounded-md flex cursor-pointer items-center`}\n    >\n      <section className=\"flex-1\">\n        <IconDefined className=\"inline-block mr-1 text-xs\" />\n        <span>{title}</span>\n      </section>\n\n      {count > 0 ? (\n        <span className=\"px-0.5 my-1 text-xs bg-blue-600 text-white rounded-full\">\n          {count}\n        </span>\n      ) : null}\n    </section>\n  );\n};\n\n//************************************ FORM SEARCH **************************************** */\n\ntype SubItemContainerComponentInterface = {\n  children: ReactNode;\n};\n\n/**\n *\n * @param param0\n * @returns\n */\nexport const SubItemContainer: FC<SubItemContainerComponentInterface> = ({\n  children,\n}): ReactElement => {\n  return (\n    <div className=\"ml-3 overflow-y-auto border-l-2 border-blue-200 -mt-1 pt-2 mb-2 pl-1 cursor-pointer\">\n      {children}\n    </div>\n  );\n};\n\n//************************************ FORM SEARCH **************************************** */\n\ntype SubItemComponentInterface = {\n  title: string;\n  icon?: any;\n  active?: boolean;\n  count?: number;\n};\n\n/**\n *\n * @param param0\n * @returns\n * @important Remenber to use these components inside the <SubItemContainer>...</SubItemContainer>\n */\nexport const SubItem: FC<SubItemComponentInterface> = ({\n  title = \"\",\n  icon = MdBrightness1,\n  active = false,\n  count = 0,\n}): ReactElement => {\n  const IconDefined = icon;\n\n  return (\n    <div\n      className={`animate__animated animate__zoomIn animate__faster ${\n        active === true ? \"bg-blue-500 text-white font-bold\" : \" text-blue-800\"\n      } text-blue-800 bg-blue-200 rounded-md px-1 mb-1 flex items-center py-1 font-bold`}\n    >\n      <IconDefined\n        className={`inline-block mr-0.1 text-xs ${\n          active === true ? \"text-white\" : \"\"\n        }`}\n      />\n      <span\n        className={`inline-block pl-1 ${active === true ? \"text-white\" : \"\"}`}\n      >\n        {title}\n      </span>\n      {count >= 1 ? (\n        <span\n          className={`text-sm fint-bold ${active === true ? \"text-white\" : \"\"}`}\n        >\n          {count}\n        </span>\n      ) : null}\n    </div>\n  );\n};\n","import axios from \"axios\";\nimport { Dispatch } from \"redux\";\nimport { ActionTypes } from \"./types\";\nimport { API } from \"../utils/api\";\nimport { setAxiosToken } from \"../utils/AxiosToken\";\nimport { errorToText } from \"../utils/errors\";\nimport { CategorySubcategoryData } from \"../interfaces/candidatesInterfaces\";\nimport {\n  allClaimApplicationInterface,\n  CandidateClaimInterface,\n  claimApplicationsInterface,\n  ClaimTypesInterfaceAPI,\n  PlansTypeKeys,\n} from \"../interfaces\";\n\nexport interface DocumentClaimUser {\n  category_id: string;\n  company: string;\n  description: string;\n  email: string;\n  end_year: string;\n  files: string;\n  names: string;\n  phone_number: string;\n  school: {\n    school_name: string;\n    _id: string;\n    status: boolean;\n    education_category_id?: {\n      education_category_title: string;\n      _id: string;\n    };\n    district_id?: {\n      district_name: string;\n      _id: string;\n    };\n  } | null;\n  school_id: string;\n  start_year: string;\n  sub_category_id: string;\n  title: string;\n  year: string;\n  validation_status: string;\n  validated_by: {\n    user_id: string;\n    comment: string;\n    validation_status: string;\n    date: string;\n  };\n  doc_id: string;\n  category_subcategory_data: CategorySubcategoryData | null;\n}\n\n/**\n * * ****************************** INTERFACES *****************************\n */\n\n// CANDIDATE_APPLICATIONS\nexport interface GetCandidateApplicationsAction {\n  type: ActionTypes.GET_CANDIDATES_APPLICATIONS;\n  payload: claimApplicationsInterface[];\n}\n\n// CREATE PERSONAL CLAIM\nexport interface CreateClaimAction {\n  type: ActionTypes.CREATE_CLAIM;\n  payload: CandidateClaimInterface;\n}\n\n// EVALUATE CANDIDATE CLAIM\nexport interface EvaluateClaimAction {\n  type: ActionTypes.EVALUATE_CLAIM;\n  payload: CandidateClaimInterface;\n}\n\n// CREATE PERSONAL CLAIM\nexport interface CreateReClaimAction {\n  type: ActionTypes.RE_CLAIM;\n  payload: CandidateClaimInterface;\n}\n\n// CANDIDATE_DOCUMENTS\nexport interface GetCandidateDocumentsAction {\n  type: ActionTypes.GET_CANDIDATES_DOCUMENTS;\n  payload: DocumentClaimUser[];\n}\n\n// CLAIM TYPES =====================================\nexport interface GetClaimingTypesAction {\n  type: ActionTypes.GET_CLAIMING_TYPES;\n  payload: ClaimTypesInterfaceAPI[];\n}\n\n// SET CLAIM TYPE =====================================\nexport interface setSelectedClaimTypeActions {\n  type: ActionTypes.SELECT_CLAIM_TYPE;\n  payload: PlansTypeKeys | \"all\";\n}\n\n// MY PERSONAL CLAIMS\nexport interface GetMyClaimsAction {\n  type: ActionTypes.GET_MY_CLAIMS;\n  payload: CandidateClaimInterface[];\n}\n\n// ALL CANDIDATES CLAIMS\nexport interface GetAllClaimsAction {\n  type: ActionTypes.GET_ALL_CLAIMS;\n  payload: CandidateClaimInterface[];\n}\n\n// GET ALL APPLICATIONS BY PERIOD\nexport interface GetAllApplicationsAction {\n  type: ActionTypes.GET_ALL_APPLICATION;\n  payload: allClaimApplicationInterface[];\n}\n\nexport type ClaimingActionType =\n  | GetCandidateApplicationsAction\n  | GetCandidateDocumentsAction\n  | GetClaimingTypesAction\n  | setSelectedClaimTypeActions\n  | CreateClaimAction\n  | GetMyClaimsAction\n  | GetAllClaimsAction\n  | EvaluateClaimAction\n  | CreateReClaimAction\n  | GetAllApplicationsAction;\n\n/**\n * * ****************************** ACTIONS *****************************\n */\n\n// CLAIM TYPES ==========================\nexport const GetClaimingTypes = (callback: Function) => {\n  callback(true, \"\");\n  return async (dispatch: Dispatch) => {\n    try {\n      setAxiosToken();\n      const res = await axios.get<ClaimTypesInterfaceAPI[]>(\n        `${API.CLAIMING}/claim-type`\n      );\n      console.log({ claimtYPES: res.data });\n      let claim_types: ClaimTypesInterfaceAPI[] = [];\n      if (res.status === 200) {\n        // setApplications(res.data);\n        if (res.data !== null && res.data.length > 0) {\n          claim_types = res.data;\n        }\n      }\n      dispatch<GetClaimingTypesAction>({\n        type: ActionTypes.GET_CLAIMING_TYPES,\n        payload: claim_types,\n      });\n      callback(false, \"\");\n    } catch (error) {\n      console.error({ error: errorToText(error) });\n      callback(false, errorToText(error));\n    }\n  };\n};\n\n// SELECT CLAIM TYPES ==========================\nexport const setSelectedClaimType = (\n  thisType: PlansTypeKeys | \"all\"\n): setSelectedClaimTypeActions => {\n  console.log({ thisType });\n  return {\n    type: ActionTypes.SELECT_CLAIM_TYPE,\n    payload: thisType,\n  };\n};\n\n// CREATE PERSONAL CLAIM\nexport const createClaim = (data: CandidateClaimInterface) => {\n  return {\n    type: ActionTypes.CREATE_CLAIM,\n    payload: data,\n  };\n};\n\n// CREATE PERSONAL RECLAIM\nexport const createReClaim = (data: CandidateClaimInterface) => {\n  return {\n    type: ActionTypes.RE_CLAIM,\n    payload: data,\n  };\n};\n\n// EVALUATE CANDIDATE CLAIM\nexport const evaluateClaim = (data: CandidateClaimInterface) => {\n  return {\n    type: ActionTypes.EVALUATE_CLAIM,\n    payload: data,\n  };\n};\n\n// MY PERSONAL CLAIMS\nexport const getMyClaims = (\n  user_id: string,\n  period_id: string,\n  callback: Function,\n  order: \"desc\" | \"asc\" = \"desc\",\n  sortBy: \"createdAt\" | \"last_claim_status\" = \"createdAt\"\n) => {\n  console.log({ user_id, period_id });\n  return async (dispatch: Dispatch) => {\n    callback(true, \"\");\n    try {\n      setAxiosToken();\n      const res = await axios.post<CandidateClaimInterface[]>(\n        `${API.CLAIMING}/user`,\n        {\n          order,\n          sortBy,\n          filter: {\n            user: user_id,\n            period_id,\n          },\n        }\n      );\n      console.log({ api_claim: res.data });\n\n      dispatch<GetMyClaimsAction>({\n        type: ActionTypes.GET_MY_CLAIMS,\n        payload: res.data,\n      });\n      callback(false, \"\");\n    } catch (error) {\n      console.error(error);\n      callback(false, errorToText(error));\n    }\n  };\n};\n\n// PERSONAL APPLICATION\nexport const getMyRejectedApplications = (\n  user_id: string,\n  callback: Function\n) => {\n  callback(true, \"\");\n  return async (dispatch: Dispatch) => {\n    try {\n      setAxiosToken();\n      const res = await axios.get<claimApplicationsInterface[]>(\n        `${API.APPLICATION}/application/${user_id}`\n      );\n      console.log({ claimPersonalApplication: res.data });\n      let application: claimApplicationsInterface[] = res.data;\n      // if (res.status === 200) {\n      //   // setApplications(res.data);\n      //   if (res.data !== null && res.data.length > 0) {\n      //     let dataRejected: claimApplicationsInterface[] = [];\n      //     for (const key in res.data) {\n      //       if (res.data[key].application_status === \"rejected\") {\n      //         dataRejected.push(res.data[key]);\n      //       }\n      //     }\n      //     application = dataRejected;\n      //   }\n      // }\n      dispatch<GetCandidateApplicationsAction>({\n        type: ActionTypes.GET_CANDIDATES_APPLICATIONS,\n        payload: application,\n      });\n      callback(false, \"\");\n    } catch (error) {\n      console.error(error);\n      callback(false, errorToText(error));\n    }\n  };\n};\n\n// PERSONAL APPLICATION\nexport const getMyRejectedDocuments = (callback: Function) => {\n  callback(true, \"\");\n  return async (dispatch: Dispatch) => {\n    try {\n      setAxiosToken();\n      const res = await axios.get<{\n        n_id: string;\n        fname: string;\n        lname: string;\n        district: string;\n        phone_number: string;\n        email: string;\n        details: DocumentClaimUser[];\n      }>(`${API.AUTH}/currentdet`);\n      console.log({ claimPersonalDocuments: res.data });\n      let details: DocumentClaimUser[] = [];\n      if (res.status === 200) {\n        // setApplications(res.data);\n        if (res.data !== null && res.data.details.length > 0) {\n          let dataRejected: DocumentClaimUser[] = [];\n          for (const key in res.data.details) {\n            if (res.data.details[key].validation_status !== \"waiting\") {\n              dataRejected.push(res.data.details[key]);\n            }\n          }\n          details = dataRejected;\n        }\n      }\n      console.log({ claimPersonalDocumentDetails: details });\n\n      dispatch<GetCandidateDocumentsAction>({\n        type: ActionTypes.GET_CANDIDATES_DOCUMENTS,\n        payload: details,\n      });\n      callback(false, \"\");\n    } catch (error) {\n      console.error(error);\n      callback(false, errorToText(error));\n    }\n  };\n};\n\n// GET ALL CLAIM\nexport const getAllClaims = (\n  claim_level: number,\n  period_id: string,\n  callback: Function,\n  order: \"desc\" | \"asc\" = \"desc\",\n  sortBy: \"createdAt\" | \"last_claim_status\" = \"createdAt\"\n) => {\n  return async (dispatch: Dispatch) => {\n    callback(true, \"\");\n    try {\n      setAxiosToken();\n      const res = await axios.post<CandidateClaimInterface[]>(\n        `${API.CLAIMING}/user`,\n        {\n          order,\n          sortBy,\n          filter: {\n            claim_level: 2,\n            period_id,\n          },\n        }\n      );\n      console.log({ api_claim: res.data });\n\n      dispatch<GetAllClaimsAction>({\n        type: ActionTypes.GET_ALL_CLAIMS,\n        payload: res.data,\n      });\n      callback(false, \"\");\n    } catch (error) {\n      console.error(error);\n      callback(false, errorToText(error));\n    }\n  };\n};\n\nexport const getAllApplications = (period_id: string, callback: Function) => {\n  return async (dispatch: Dispatch) => {\n    callback(true, \"\");\n    try {\n      setAxiosToken();\n      const res = await axios.get<allClaimApplicationInterface[]>(\n        `${API.APPLICATION}/applicationbyperiod/${period_id}`\n      );\n      console.log({ api_claim: res.data });\n\n      dispatch<GetAllApplicationsAction>({\n        type: ActionTypes.GET_ALL_APPLICATION,\n        payload: res.data,\n      });\n      callback(false, \"\");\n    } catch (error) {\n      console.error(error);\n      callback(false, errorToText(error));\n    }\n  };\n};\n","import axios from \"axios\";\nimport { Dispatch } from \"redux\";\nimport { ActionTypes } from \"./types\";\nimport { API } from \"../utils/api\";\nimport { setAxiosToken } from \"../utils/AxiosToken\";\nimport { errorToText } from \"../utils/errors\";\nimport { PlansTypeInterface, SessionPlanInterface } from \"../interfaces\";\n\n/**\n * * ****************************** INTERFACES *****************************\n */\n\n// GET ACTIVE PLAN TYPES\nexport interface GetPlansTypesAction {\n  type: ActionTypes.GET_PLANS_TYPES;\n  payload: PlansTypeInterface[];\n}\n\n// GET INACTIVE PLAN TYPES\nexport interface GetDeletedPlansTypesAction {\n  type: ActionTypes.GET_DELETED_PLANS_TYPES;\n  payload: PlansTypeInterface[];\n}\n\n// CREATE PLAN TYPE\nexport interface CreatePlansTypeAction {\n  type: ActionTypes.CREATE_PLAN_TYPE;\n  payload: PlansTypeInterface;\n}\n\n// UPDATE PLAN TYPE\nexport interface UpdatePlansTypeAction {\n  type: ActionTypes.UPDATE_PLAN_TYPE;\n  payload: PlansTypeInterface;\n}\n\n// DELETE PLAN TYPE\nexport interface DeletePlansTypeAction {\n  type: ActionTypes.DELETE_PLAN_TYPE;\n  payload: PlansTypeInterface;\n}\n\n// SET PLAN TYPE =====================================\nexport interface setSelectedPlanTypeActions {\n  type: ActionTypes.SELECT_PLAN_TYPE;\n  payload: PlansTypeInterface | \"all\";\n}\n\n// GET ALL SESSION PLAN\nexport interface GetAllSessionPlansAction {\n  type: ActionTypes.GET_ALL_SESSION_PLANS;\n  payload: SessionPlanInterface[];\n}\n\n// GET ACTIVE SESSION PLAN\nexport interface GetActiveSessionPlanAction {\n  type: ActionTypes.GET_ACTIVE_SESSION_PLANS;\n  payload: SessionPlanInterface | \"none\";\n}\n\n// CREATE SESSION PLAN\nexport interface CreateSessionPlansAction {\n  type: ActionTypes.CREATE_SESSION_PLAN;\n  payload: SessionPlanInterface;\n}\n\n// UPDATE SESSION PLAN\nexport interface UpdateSessionPlansAction {\n  type: ActionTypes.UPDATE_SESSION_PLAN;\n  payload: SessionPlanInterface;\n}\n\n// ACTIVATE SESSION PLAN\nexport interface ActivateSessionPlansAction {\n  type: ActionTypes.SESSION_ACTIVATION;\n  payload: SessionPlanInterface;\n}\n\n// DELETE SESSION PLAN\nexport interface DeleteSessionPlanAction {\n  type: ActionTypes.DELETE_SESSION_PLAN;\n  payload: string;\n}\n\nexport type SessionActionType =\n  | GetPlansTypesAction\n  | GetDeletedPlansTypesAction\n  | CreatePlansTypeAction\n  | UpdatePlansTypeAction\n  | DeletePlansTypeAction\n  | GetAllSessionPlansAction\n  | GetActiveSessionPlanAction\n  | CreateSessionPlansAction\n  | UpdateSessionPlansAction\n  | ActivateSessionPlansAction\n  | DeleteSessionPlanAction\n  | setSelectedPlanTypeActions;\n\n/**\n * * ****************************** ACTIONS *****************************\n */\n\n// GET ACTIVE PLAN TYPES ==========================\nexport const GetPlansTypes = (callback: Function) => {\n  callback(true, \"\");\n  return async (dispatch: Dispatch) => {\n    try {\n      setAxiosToken();\n      const res = await axios.get<PlansTypeInterface[]>(\n        `${API.CLAIMING}/session-type`\n      );\n      console.log({ GET_PLANS_TYPES: res.data });\n      let plan_types: PlansTypeInterface[] = [];\n      if (res.status === 200) {\n        // setApplications(res.data);\n        if (res.data !== null && res.data.length > 0) {\n          plan_types = res.data;\n        }\n      }\n      dispatch<GetPlansTypesAction>({\n        type: ActionTypes.GET_PLANS_TYPES,\n        payload: plan_types,\n      });\n      callback(false, \"\");\n    } catch (error) {\n      console.error({ error: errorToText(error) });\n      callback(false, errorToText(error));\n    }\n  };\n};\n\n// GET ACTIVE PLAN TYPES ==========================\nexport const GetDeletedPlansTypes = (callback: Function) => {\n  callback(true, \"\");\n  return async (dispatch: Dispatch) => {\n    try {\n      setAxiosToken();\n      const res = await axios.get<PlansTypeInterface[]>(\n        `${API.CLAIMING}/session-type/deleted`\n      );\n      console.log({ GET_DELETED_PLANS_TYPES: res.data });\n      let plan_types: PlansTypeInterface[] = [];\n      if (res.status === 200) {\n        // setApplications(res.data);\n        if (res.data !== null && res.data.length > 0) {\n          plan_types = res.data;\n        }\n      }\n      dispatch<GetDeletedPlansTypesAction>({\n        type: ActionTypes.GET_DELETED_PLANS_TYPES,\n        payload: plan_types,\n      });\n      callback(false, \"\");\n    } catch (error) {\n      console.error({ error: errorToText(error) });\n      callback(false, errorToText(error));\n    }\n  };\n};\n\n// CREATE PLAN TYPE\nexport const createPlanType = (\n  data: PlansTypeInterface\n): CreatePlansTypeAction => {\n  return {\n    type: ActionTypes.CREATE_PLAN_TYPE,\n    payload: data,\n  };\n};\n\n// UPDATE PLAN TYPE\nexport const updatePlanType = (\n  data: PlansTypeInterface\n): UpdatePlansTypeAction => {\n  return {\n    type: ActionTypes.UPDATE_PLAN_TYPE,\n    payload: data,\n  };\n};\n\n// DELETE PLAN TYPE\nexport const deletePlanType = (\n  data: PlansTypeInterface\n): DeletePlansTypeAction => {\n  return {\n    type: ActionTypes.DELETE_PLAN_TYPE,\n    payload: data,\n  };\n};\n\n// SELECT PLAN TYPES ==========================\nexport const setSelectedPlanType = (\n  thisType: PlansTypeInterface | \"all\"\n): setSelectedPlanTypeActions => {\n  console.log({ thisType });\n  return {\n    type: ActionTypes.SELECT_PLAN_TYPE,\n    payload: thisType,\n  };\n};\n\n// GET ACTIVE PLAN TYPES ==========================\nexport const getActiveSessionPlan = (callback: Function) => {\n  callback(true, \"\");\n  return async (dispatch: Dispatch) => {\n    try {\n      setAxiosToken();\n      const res = await axios.get<SessionPlanInterface>(\n        `${API.CLAIMING}/session/active/`\n      );\n      console.log({ GET_ACTIVE_SESSION_PLANS: res.data });\n      let session_plan: SessionPlanInterface | undefined = undefined;\n      // if (res.status === 200) {\n      //   // setApplications(res.data);\n      // }\n      if (res.data && res.data.is_active !== undefined) {\n        session_plan = res.data;\n      }\n      console.log({ session_plan: res.data });\n\n      dispatch<GetActiveSessionPlanAction>({\n        type: ActionTypes.GET_ACTIVE_SESSION_PLANS,\n        payload: session_plan ? session_plan : \"none\",\n      });\n      callback(false, \"\", session_plan ? session_plan : \"none\");\n    } catch (error) {\n      console.error({ error: errorToText(error) });\n      callback(false, errorToText(error));\n    }\n  };\n};\n\n// GET ALL PLAN TYPES ==========================\nexport const GetAllSessionPlans = (callback: Function) => {\n  callback(true, \"\");\n  return async (dispatch: Dispatch) => {\n    try {\n      setAxiosToken();\n      const res = await axios.get<SessionPlanInterface[]>(\n        `${API.CLAIMING}/session/`\n      );\n      console.log({ GET_ALL_SESSION_PLANS: res.data });\n      let session_data: SessionPlanInterface[] = [];\n      if (res.status === 200) {\n        // setApplications(res.data);\n        if (res.data !== null && res.data.length > 0) {\n          session_data = res.data;\n        }\n      }\n      dispatch<GetAllSessionPlansAction>({\n        type: ActionTypes.GET_ALL_SESSION_PLANS,\n        payload: session_data,\n      });\n      callback(false, \"\", session_data);\n    } catch (error) {\n      console.error({ error: errorToText(error) });\n      callback(false, errorToText(error));\n    }\n  };\n};\n\n// CREATE SESSION PLAN\nexport const createSessionPlan = (\n  data: SessionPlanInterface\n): CreateSessionPlansAction => {\n  return {\n    type: ActionTypes.CREATE_SESSION_PLAN,\n    payload: data,\n  };\n};\n\n// UPDATE SESSION PLAN\nexport const updateSessionPlan = (\n  data: SessionPlanInterface\n): UpdateSessionPlansAction => {\n  return {\n    type: ActionTypes.UPDATE_SESSION_PLAN,\n    payload: data,\n  };\n};\n\n// ACTIVATE SESSION PLAN\nexport const sessionActivation = (\n  data: SessionPlanInterface\n): ActivateSessionPlansAction => {\n  return {\n    type: ActionTypes.SESSION_ACTIVATION,\n    payload: data,\n  };\n};\n\n// DELETE SESSION PLAN\nexport const deleteSessionPlan = (data: string): DeleteSessionPlanAction => {\n  return {\n    type: ActionTypes.DELETE_SESSION_PLAN,\n    payload: data,\n  };\n};\n","import axios from \"axios\";\nimport { Dispatch } from \"redux\";\nimport { ActionTypes } from \"./types\";\nimport {\n  CandidatesInterface,\n  DocumentCategoryInterface,\n  DocumentFieldsInterface,\n  DocumentSubCategoryInterface,\n} from \"../shared/interfaces\";\nimport { API } from \"../utils/api\";\nimport { setAxiosToken } from \"../utils/AxiosToken\";\nimport { errorToText } from \"../utils/errors\";\nimport { VerifyDocumentInterface } from \"./users\";\n\n/**\n * * ****************************** INTERFACES *****************************\n */\n\n// CATEGORY\nexport interface GetDocumentCategoryAction {\n  type: ActionTypes.GET_DOCUMENT_CATEGORY;\n  payload: DocumentCategoryInterface[];\n}\n\nexport interface CreateDocumentCategoryAction {\n  type: ActionTypes.CREATE_DOCUMENT_CATEGORY;\n  payload: DocumentCategoryInterface;\n}\n\nexport interface UpdateDocumentCategoryAction {\n  type: ActionTypes.UPDATE_DOCUMENT_CATEGORY;\n  payload: DocumentCategoryInterface;\n}\n\nexport interface DeleteDocumentCategoryAction {\n  type: ActionTypes.DELETE_DOCUMENT_CATEGORY;\n  payload: string;\n}\n\n// SUB CATEGORY\nexport interface GetDocumentSubCategoryAction {\n  type: ActionTypes.GET_DOCUMENT_SUB_CATEGORY;\n  payload: DocumentSubCategoryInterface[];\n}\n\nexport interface CreateDocumentSubCategoryAction {\n  type: ActionTypes.CREATE_DOCUMENT_SUB_CATEGORY;\n  payload: DocumentSubCategoryInterface;\n}\n\nexport interface UpdateDocumentSubCategoryAction {\n  type: ActionTypes.UPDATE_DOCUMENT_SUB_CATEGORY;\n  payload: DocumentSubCategoryInterface;\n}\n\nexport interface DeleteDocumentSubCategoryAction {\n  type: ActionTypes.DELETE_DOCUMENT_SUB_CATEGORY;\n  payload: string;\n}\n\n// FIELDS\nexport interface GetDocumentFieldsAction {\n  type: ActionTypes.GET_DOCUMENT_FIELDS;\n  payload: DocumentFieldsInterface[];\n}\n\nexport interface CreateDocumentFieldsAction {\n  type: ActionTypes.CREATE_DOCUMENT_FIELDS;\n  payload: DocumentFieldsInterface;\n}\n\nexport interface UpdateDocumentFieldsAction {\n  type: ActionTypes.UPDATE_DOCUMENT_FIELDS;\n  payload: DocumentFieldsInterface;\n}\n\nexport interface DeleteDocumentFieldsAction {\n  type: ActionTypes.DELETE_DOCUMENT_FIELDS;\n  payload: string;\n}\n\n// DOCUMENT CHECKING\nexport interface GetCandidatesInInstituteAtion {\n  type: ActionTypes.GET_CANDIDATE_IN_INSTITUTE;\n  payload: CandidatesInterface[];\n}\n\ninterface VerifyDocumentAction {\n  type: ActionTypes.VERIFY_DOCUMENT;\n  payload: VerifyDocumentInterface;\n}\n\nexport type DocumentCategoryActionType =\n  | GetDocumentCategoryAction\n  | CreateDocumentCategoryAction\n  | UpdateDocumentCategoryAction\n  | DeleteDocumentCategoryAction\n  | GetDocumentSubCategoryAction\n  | CreateDocumentSubCategoryAction\n  | UpdateDocumentSubCategoryAction\n  | DeleteDocumentSubCategoryAction\n  | GetDocumentFieldsAction\n  | CreateDocumentFieldsAction\n  | UpdateDocumentFieldsAction\n  | DeleteDocumentFieldsAction\n  | GetCandidatesInInstituteAtion\n  | VerifyDocumentAction;\n\n/**\n * * ****************************** ACTIONS *****************************\n */\n\n// CATEGORY\n\nexport const getDocumentCategory = () => {\n  return async (dispatch: Dispatch) => {\n    try {\n      setAxiosToken();\n      const res = await axios.get(`${API.AUTH}/detailcategory`);\n      console.log({ docCategory: res });\n      dispatch<GetDocumentCategoryAction>({\n        type: ActionTypes.GET_DOCUMENT_CATEGORY,\n        payload: res.data,\n      });\n    } catch (error) {\n      console.error({ error: errorToText(error) });\n    }\n  };\n};\n\nexport const createDocumentCategory = (data: DocumentCategoryInterface) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<CreateDocumentCategoryAction>({\n      type: ActionTypes.CREATE_DOCUMENT_CATEGORY,\n      payload: data,\n    });\n  };\n};\n\nexport const updateDocumentCategory = (data: DocumentCategoryInterface) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<UpdateDocumentCategoryAction>({\n      type: ActionTypes.UPDATE_DOCUMENT_CATEGORY,\n      payload: data,\n    });\n  };\n};\n\nexport const deleteDocumentCategory = (data: string) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<DeleteDocumentCategoryAction>({\n      type: ActionTypes.DELETE_DOCUMENT_CATEGORY,\n      payload: data,\n    });\n  };\n};\n\n// SUB CATEGORY\nexport const getDocumentSubCategory = () => {\n  return async (dispatch: Dispatch) => {\n    try {\n      setAxiosToken();\n      const res = await axios.get<DocumentSubCategoryInterface[]>(\n        `${API.AUTH}/detailsubcategory`\n      );\n      console.log({ docSubCategory: res });\n      dispatch<GetDocumentSubCategoryAction>({\n        type: ActionTypes.GET_DOCUMENT_SUB_CATEGORY,\n        payload: res.data,\n        // payload: response.data,\n      });\n    } catch (error) {\n      console.log({ doc_SUB_category_error: error });\n    }\n  };\n};\n\nexport const createDocumentSubCategory = (\n  data: DocumentSubCategoryInterface\n) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<CreateDocumentSubCategoryAction>({\n      type: ActionTypes.CREATE_DOCUMENT_SUB_CATEGORY,\n      payload: data,\n    });\n  };\n};\n\nexport const updateDocumentSubCategory = (\n  data: DocumentSubCategoryInterface\n) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<UpdateDocumentSubCategoryAction>({\n      type: ActionTypes.UPDATE_DOCUMENT_SUB_CATEGORY,\n      payload: data,\n    });\n  };\n};\n\nexport const deleteDocumentSubCategory = (data: string) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<DeleteDocumentSubCategoryAction>({\n      type: ActionTypes.DELETE_DOCUMENT_SUB_CATEGORY,\n      payload: data,\n    });\n  };\n};\n\n// FIELDS\nexport const getDocumentFields = () => {\n  return async (dispatch: Dispatch) => {\n    try {\n      setAxiosToken();\n      const res = await axios.get<DocumentFieldsInterface[]>(\n        `${API.AUTH}/categorysubcatedata`\n      );\n      console.log({ docFields: res });\n      dispatch<GetDocumentFieldsAction>({\n        type: ActionTypes.GET_DOCUMENT_FIELDS,\n        payload: res.data,\n        // payload: response.data,\n      });\n    } catch (error) {\n      console.log({ doc_SUB_category_error: error });\n    }\n  };\n};\n\nexport const createDocumentFields = (data: DocumentFieldsInterface) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<CreateDocumentFieldsAction>({\n      type: ActionTypes.CREATE_DOCUMENT_FIELDS,\n      payload: data,\n    });\n  };\n};\n\nexport const updateDocumentFields = (data: DocumentFieldsInterface) => {\n  console.log({ reducer: data });\n  return async (dispatch: Dispatch) => {\n    dispatch<UpdateDocumentFieldsAction>({\n      type: ActionTypes.UPDATE_DOCUMENT_FIELDS,\n      payload: data,\n    });\n  };\n};\n\nexport const deleteDocumentFields = (data: string) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<DeleteDocumentFieldsAction>({\n      type: ActionTypes.DELETE_DOCUMENT_FIELDS,\n      payload: data,\n    });\n  };\n};\n\n// CANDIDATE IN EDUCATION CATEGORY\nexport const getCandidatesInInstitute = (\n  educatin_type_id: string,\n  callback: Function\n) => {\n  console.log({\n    url: `${API.APPLICATION}/educationtypeuserdocs/${educatin_type_id}`,\n  });\n  return async (dispatch: Dispatch) => {\n    callback(true, \"\", null);\n    try {\n      setAxiosToken();\n      const res = await axios.get<CandidatesInterface[]>(\n        `${API.APPLICATION}/educationtypeuserdocs/${educatin_type_id}`\n      );\n      const newArray: CandidatesInterface[] = res.data.filter((element) => {\n        return element !== null && element !== undefined;\n      });\n      console.log({ getCandidatesInInstitute: res, newArray });\n      dispatch<GetCandidatesInInstituteAtion>({\n        type: ActionTypes.GET_CANDIDATE_IN_INSTITUTE,\n        payload: newArray,\n        // payload: response.data,\n      });\n      callback(false, \"\", newArray);\n    } catch (error) {\n      console.log({ getCandidatesInInstitute: error });\n      callback(false, errorToText(error), null);\n    }\n  };\n};\n\nexport const verifyDocument = (data: VerifyDocumentInterface) => {\n  console.log({ action_verify: data });\n  return async (dispatch: Dispatch) => {\n    dispatch<VerifyDocumentAction>({\n      type: ActionTypes.VERIFY_DOCUMENT,\n      payload: data,\n    });\n  };\n};\n","import axios from \"axios\";\nimport { Dispatch } from \"redux\";\nimport { ActionTypes } from \"./types\";\nimport {\n  ApplicationSessionInterface,\n  SystemSettingsInterface,\n} from \"../shared/interfaces\";\nimport { API } from \"../utils/api\";\nimport { setAxiosToken } from \"../utils/AxiosToken\";\nimport { errorToText } from \"../utils/errors\";\nimport { PositionAPI } from \"../interfaces/position\";\n\n/**\n * * ****************************** INTERFACES *****************************\n */\n\n// SYSTEM SETTINGS  ==============\nexport interface GetSystemSettingsAction {\n  type: ActionTypes.GET_SYSTEM_SETTINGS;\n  payload: SystemSettingsInterface[];\n}\n\nexport interface DisableSystemSettingsAction {\n  type: ActionTypes.DISABLE_SYSTEM_SETTINGS;\n  payload: {\n    system_setting_id: string;\n    status: \"enabled\" | \"disabled\";\n  };\n}\n\n// APPLICATION SETTINGS ===================================\nexport interface GetApplicationSessionAction {\n  type: ActionTypes.GET_APPLICATION_SESSIONS;\n  payload: ApplicationSessionInterface[];\n}\n\nexport interface CreateApplicationSessionAction {\n  type: ActionTypes.CREATE_APPLICATION_SESSIONS;\n  payload: ApplicationSessionInterface;\n}\n\nexport interface UpdateApplicationSessionAction {\n  type: ActionTypes.UPDATE_APPLICATION_SESSIONS;\n  payload: ApplicationSessionInterface;\n}\n\nexport interface DisableApplicationSessionAction {\n  type: ActionTypes.DISABLE_APPLICATION_SESSION;\n  payload: {\n    application_session_id: string;\n    status: boolean;\n  };\n}\n\n// POSITIONS SETTINGS ===================================\nexport interface PositionCreateInterface {\n  position_id?: string;\n  position_title: string;\n  description: string;\n  school_level_id: string;\n  education_institute_id: string;\n  courses: string[];\n  requirements: {\n    user_detail_category_id: string;\n    user_detail_subcategory_id: string;\n    position_requirement: {\n      category_subcategory_data_id: string;\n      required: boolean;\n    }[];\n    required: boolean;\n  }[];\n}\nexport interface GetPositionsAction {\n  type: ActionTypes.GET_POSTIONS;\n  payload: PositionAPI[];\n}\n\nexport interface CreatePositionsAction {\n  type: ActionTypes.CREATE_POSITION;\n  payload: PositionCreateInterface;\n}\n\nexport interface UpdatePositionsAction {\n  type: ActionTypes.UPDATE_POSITION;\n  payload: PositionCreateInterface;\n}\n\nexport interface DeletePositionAction {\n  type: ActionTypes.DELETE_POSITION;\n  payload: string;\n}\n\nexport interface PublishPositionAction {\n  type: ActionTypes.PUBLISH_POSITION;\n  payload: {\n    position_id: string;\n    status: boolean;\n  };\n}\n\nexport type SystemActionType =\n  | GetSystemSettingsAction\n  | DisableSystemSettingsAction\n  | GetApplicationSessionAction\n  | CreateApplicationSessionAction\n  | UpdateApplicationSessionAction\n  | DisableApplicationSessionAction\n  | GetPositionsAction\n  | CreatePositionsAction\n  | UpdatePositionsAction\n  | DeletePositionAction\n  | PublishPositionAction;\n\n/**\n * * ****************************** ACTIONS *****************************\n */\n\nexport const getSystemSettings = (callback: Function) => {\n  return async (dispatch: Dispatch) => {\n    callback(true, \"\");\n    try {\n      setAxiosToken();\n      const res = await axios.get<SystemSettingsInterface[]>(\n        `${API.AUTH}/settings`\n      );\n      dispatch<GetSystemSettingsAction>({\n        type: ActionTypes.GET_SYSTEM_SETTINGS,\n        payload: res.data,\n      });\n      callback(false, \"\");\n    } catch (error) {\n      console.log({ code_error: error });\n      callback(false, errorToText(error));\n    }\n  };\n};\n\nexport const disableSystemSetting = (data: {\n  system_setting_id: string;\n  status: \"enabled\" | \"disabled\";\n}) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<DisableSystemSettingsAction>({\n      type: ActionTypes.DISABLE_SYSTEM_SETTINGS,\n      payload: data,\n    });\n  };\n};\n\n// ============================ PERIODS =======================\n\nexport const getApplicationSessions = (callback: Function) => {\n  return async (dispatch: Dispatch) => {\n    callback(true, \"\");\n    try {\n      setAxiosToken();\n      const res = await axios.get<ApplicationSessionInterface[]>(\n        `${API.APPLICATION}/applicationsesion`\n      );\n      dispatch<GetApplicationSessionAction>({\n        type: ActionTypes.GET_APPLICATION_SESSIONS,\n        payload: res.data,\n      });\n      callback(false, \"\");\n    } catch (error) {\n      console.log({ code_error: error });\n      callback(false, errorToText(error));\n    }\n  };\n};\n\nexport const createAplicationSession = (data: ApplicationSessionInterface) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<CreateApplicationSessionAction>({\n      type: ActionTypes.CREATE_APPLICATION_SESSIONS,\n      payload: data,\n    });\n  };\n};\n\nexport const updateAplicationSession = (data: ApplicationSessionInterface) => {\n  console.log({ check: data });\n  return async (dispatch: Dispatch) => {\n    dispatch<UpdateApplicationSessionAction>({\n      type: ActionTypes.UPDATE_APPLICATION_SESSIONS,\n      payload: data,\n    });\n  };\n};\n\nexport const disableApplicationSession = (data: {\n  application_session_id: string;\n  status: boolean;\n}) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<DisableApplicationSessionAction>({\n      type: ActionTypes.DISABLE_APPLICATION_SESSION,\n      payload: data,\n    });\n  };\n};\n\nexport const getPositions = (callback: Function) => {\n  return async (dispatch: Dispatch) => {\n    callback(true, \"\");\n    try {\n      setAxiosToken();\n      const res = await axios.get<PositionAPI[]>(`${API.APPLICATION}/position`);\n      dispatch<GetPositionsAction>({\n        type: ActionTypes.GET_POSTIONS,\n        payload: res.data,\n      });\n      callback(false, \"\");\n    } catch (error) {\n      console.log({ code_error: error });\n      callback(false, errorToText(error));\n    }\n  };\n};\n\nexport const createPosition = (data: PositionCreateInterface) => {\n  console.log({ createPosition: data });\n  return async (dispatch: Dispatch) => {\n    dispatch<CreatePositionsAction>({\n      type: ActionTypes.CREATE_POSITION,\n      payload: data,\n    });\n  };\n};\n\nexport const updatePosition = (data: PositionCreateInterface) => {\n  console.log({ updatePosition: data });\n  return async (dispatch: Dispatch) => {\n    dispatch<UpdatePositionsAction>({\n      type: ActionTypes.UPDATE_POSITION,\n      payload: data,\n    });\n  };\n};\n\nexport const deletePosition = (data: string) => {\n  console.log({ deletePosition: data });\n  return async (dispatch: Dispatch) => {\n    dispatch<DeletePositionAction>({\n      type: ActionTypes.DELETE_POSITION,\n      payload: data,\n    });\n  };\n};\n\nexport const publishPosition = (data: {\n  position_id: string;\n  status: boolean;\n}) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<PublishPositionAction>({\n      type: ActionTypes.PUBLISH_POSITION,\n      payload: data,\n    });\n  };\n};\n","import axios from \"axios\";\nimport React, { useState } from \"react\";\nimport { FaRegCheckCircle } from \"react-icons/fa\";\nimport { MdCancel, MdTurnedIn } from \"react-icons/md\";\nimport { RiArrowGoBackFill } from \"react-icons/ri\";\nimport { connect } from \"react-redux\";\nimport { getUserDocuments } from \".\";\nimport { Auth, PushPopupAlert, reAssessApplication } from \"../../../actions\";\nimport { evaluateClaim } from \"../../../actions/claiming\";\nimport NoResult, {\n  NoResultThemes,\n} from \"../../../components/NoResult/NoResult\";\nimport {\n  allClaimApplicationInterface,\n  CandidateClaimInterface,\n  ClaimDecisionStatus,\n  ClaimStatus,\n  ClaimTypesInterfaceAPI,\n  PositionAPI,\n} from \"../../../interfaces\";\nimport { ApplicationStates } from \"../../../interfaces/application\";\nimport { PopupAlertTheme } from \"../../../interfaces/popupAlert\";\nimport { StoreState } from \"../../../reducers\";\nimport { DocumentReducerInterface } from \"../../../reducers/document\";\nimport {\n  capitalizeFirstLetter,\n  isEmptyOrSpaces,\n} from \"../../../shared/dataTest\";\nimport { UserInterface } from \"../../../shared/interfaces\";\nimport { API } from \"../../../utils/api\";\nimport { errorToText } from \"../../../utils/errors\";\nimport { DATE, showDate, timestampToDate } from \"../../../utils/functions\";\nimport { PositionRequirementTableInterface } from \"../../Positions/ViewPosition\";\nimport ViewRequirements from \"../../Positions/ViewRequirements\";\nimport { showEvaluator } from \"../Candidate/ApplicationFormView\";\nimport { isClaimEvaluated } from \"../ClaimDocView\";\n\nexport const FC_AdminApplicationPositionDistinctCategory = (\n  thisPosition: PositionAPI,\n  documentCategories: DocumentReducerInterface\n): {\n  PositionsTemp: PositionRequirementTableInterface[];\n  DistinctCategoriesTemp: PositionRequirementTableInterface[];\n  DistinctSubCategoriesTemp: PositionRequirementTableInterface[];\n} => {\n  let PositionsTemp: PositionRequirementTableInterface[] = [];\n  let DistinctCategoriesTemp: PositionRequirementTableInterface[] = [],\n    DistinctCategoriesIds: string[] = [];\n  let DistinctSubCategoriesTemp: PositionRequirementTableInterface[] = [],\n    DistinctSubCategoriesIds: string[] = [];\n  // GET REQUIREMENTS OF THE CURRENT POSITION ====================\n  let requirements = thisPosition.requirements;\n  // LOOP THROUGH CURRENT POSITION REQUIREMENTS ==========================\n  for (let req in requirements) {\n    let thisRequirements = requirements[req];\n    // GET DOC CATEGORY OF THE CURRENT POSITION REQUIREMENTS ====================\n    let thisCategory = documentCategories.documentCategory\n      ? documentCategories.documentCategory.find(\n          (item) =>\n            item.user_detail_category_id ===\n            thisRequirements.category.user_detail_category_id\n        ) && {\n          title: documentCategories.documentCategory.find(\n            (item) =>\n              item.user_detail_category_id ===\n              thisRequirements.category.user_detail_category_id\n          )!.title,\n          user_detail_category_id: documentCategories.documentCategory.find(\n            (item) =>\n              item.user_detail_category_id ===\n              thisRequirements.category.user_detail_category_id\n          )!.user_detail_category_id,\n        }\n      : {\n          title: \"\",\n          user_detail_category_id:\n            thisRequirements.category.user_detail_category_id,\n        };\n    // GET DOC SUB CATEGORY OF THE CURRENT POSITION REQUIREMENTS ====================\n    let thisSubCategory = documentCategories.documentSubCategory\n      ? documentCategories.documentSubCategory.find(\n          (item) =>\n            item.user_detail_subcategory_id ===\n            thisRequirements.subcategory.user_detail_subcategory_id\n        )\n        ? {\n            title: documentCategories.documentSubCategory.find(\n              (item) =>\n                item.user_detail_subcategory_id ===\n                thisRequirements.subcategory.user_detail_subcategory_id\n            )!.title,\n            user_detail_subcategory_id:\n              documentCategories.documentSubCategory.find(\n                (item) =>\n                  item.user_detail_subcategory_id ===\n                  thisRequirements.subcategory.user_detail_subcategory_id\n              )!.user_detail_subcategory_id,\n            category_id: documentCategories.documentSubCategory.find(\n              (item) =>\n                item.user_detail_subcategory_id ===\n                thisRequirements.subcategory.user_detail_subcategory_id\n            )!.category_id,\n          }\n        : {\n            title: \"\",\n            user_detail_subcategory_id:\n              thisRequirements.subcategory.user_detail_subcategory_id,\n            category_id: \"\",\n          }\n      : {\n          title: \"\",\n          user_detail_subcategory_id:\n            thisRequirements.subcategory.user_detail_subcategory_id,\n          category_id: \"\",\n        };\n    // LOOP THROUGH FIELDS OF THE CURRENT POSITION REQUIREMENTS ==========================\n    if (thisCategory) {\n      for (let field in thisRequirements.position_requirement) {\n        // GET FIELDS OF THE CURRENT POSITION REQUIREMENTS ====================\n        let thisField = documentCategories.documentFields\n          ? documentCategories.documentFields.find(\n              (item) =>\n                item._id === thisRequirements.position_requirement[field]._id\n            )\n            ? {\n                title: documentCategories.documentFields.find(\n                  (item) =>\n                    item._id ===\n                    thisRequirements.position_requirement[field]._id\n                )!.title,\n                _id: documentCategories.documentFields.find(\n                  (item) =>\n                    item._id ===\n                    thisRequirements.position_requirement[field]._id\n                )!._id,\n                required: thisRequirements.position_requirement[field].required,\n              }\n            : {\n                title: \"\",\n                _id: thisRequirements.position_requirement[field]._id,\n                required: thisRequirements.position_requirement[field].required,\n              }\n          : {\n              title: \"\",\n              _id: thisRequirements.position_requirement[field]._id,\n              required: thisRequirements.position_requirement[field].required,\n            };\n        // ADD CURRENT CATEGORY, SUB CATEGORY & FIELDS OF THE CURRENT POSITION REQUIREMENTS IN POSITIONS TEMP ====================\n        PositionsTemp.push({\n          category_id: thisCategory.user_detail_category_id,\n          category_title: thisCategory.title,\n          subcategory_id: thisSubCategory.user_detail_subcategory_id,\n          subcategory_title: thisSubCategory.title,\n          field_title: thisField.title,\n          field_id: thisField._id,\n          required: thisField.required,\n        });\n      }\n\n      // ADD CATEOGRY OF THE CURRENT POSITION REQUIREMENTS TO ARRAY ====================\n      if (\n        !DistinctCategoriesIds.includes(thisCategory.user_detail_category_id)\n      ) {\n        DistinctCategoriesIds.push(thisCategory.user_detail_category_id);\n        DistinctCategoriesTemp.push({\n          category_id: thisCategory.user_detail_category_id,\n          category_title: thisCategory.title,\n          subcategory_id: \"\",\n          subcategory_title: \"\",\n          field_title: \"\",\n          field_id: \"\",\n          required: false,\n        });\n      }\n\n      // ADD SUB CATEOGRY OF THE CURRENT POSITION REQUIREMENTS TO ARRAY ====================\n      if (\n        !DistinctSubCategoriesIds.includes(\n          thisSubCategory.user_detail_subcategory_id\n        )\n      ) {\n        DistinctSubCategoriesIds.push(\n          thisSubCategory.user_detail_subcategory_id\n        );\n        DistinctSubCategoriesTemp.push({\n          category_id: thisSubCategory.category_id,\n          category_title: \"\",\n          subcategory_id: thisSubCategory.user_detail_subcategory_id,\n          subcategory_title: thisSubCategory.title,\n          field_title: \"\",\n          field_id: \"\",\n          required: false,\n        });\n      }\n    }\n  }\n  // DistinctCategoriesIds.;\n\n  return { PositionsTemp, DistinctCategoriesTemp, DistinctSubCategoriesTemp };\n};\n\nenum viewTabs {\n  profile = \"User Profile\",\n  application = \"User Application\",\n}\n\ntype AdminClaimAppViewProps = {\n  thisApplication: allClaimApplicationInterface;\n  thisPosition: PositionAPI;\n  documentCategories: DocumentReducerInterface;\n  thisClaim: CandidateClaimInterface;\n  userList: UserInterface[];\n  claimTypes: ClaimTypesInterfaceAPI[];\n  systemPositions: PositionAPI[];\n\n  // REDUX ==================\n  auth: Auth;\n  reAssessApplication: Function;\n  evaluateClaim: Function;\n  PushPopupAlert: Function;\n};\n\nconst AdminClaimAppView: React.FC<AdminClaimAppViewProps> = (props) => {\n  const [viewPosition, setViewPosition] = useState<boolean>(true);\n  const [loadingRequest, setLoadingRequest] = useState<boolean>(false);\n  const [actionTaken, setActionTaken] = useState<ClaimDecisionStatus | null>(\n    null\n  );\n  const [formError, setFormError] = useState<{\n    element: string;\n    msg: string;\n  } | null>(null);\n  const [responseMsg, setResponseMsg] = useState<string>(\"\");\n  const [selectedTab, setSelectedTab] = useState<viewTabs>(viewTabs.profile);\n\n  const handleVerify = async () => {\n    if (!actionTaken) {\n      setFormError({\n        element: \"action\",\n        msg: \"Action is required!\",\n      });\n      return setLoadingRequest(false);\n    }\n\n    if (isEmptyOrSpaces(responseMsg)) {\n      setFormError({\n        element: \"comment\",\n        msg: \"Reason of rejection is required\",\n      });\n      return setLoadingRequest(false);\n    }\n\n    let subClaim = props.thisClaim.claims.find(\n      (item) => item.level === props.thisClaim.claim_level\n    );\n\n    if (subClaim) {\n      setLoadingRequest(true);\n      const api_body: {\n        sub_claim_id: string;\n        evaluation_comment: string;\n        evaluated_by: string;\n        decision_taken_status: ClaimDecisionStatus;\n      } = {\n        sub_claim_id: subClaim.id,\n        evaluation_comment: responseMsg,\n        evaluated_by: props.auth.user.user_id,\n        decision_taken_status: actionTaken,\n      };\n\n      try {\n        const res = await axios.put<CandidateClaimInterface>(\n          `${API.CLAIMING}/user/evaluate/${props.thisClaim.id}`,\n          api_body\n        );\n        if (res) {\n          console.log({ evaluate_claim_res: res });\n          props.evaluateClaim(res.data);\n          // REVALIDATED DOCUMENT IF IT IS APPROVED =========================\n          if (actionTaken === ClaimDecisionStatus.ACCEPTED) {\n            await overrideDecision();\n          }\n          props.PushPopupAlert({\n            title: `Claim responded successfully!`,\n            theme: PopupAlertTheme.success,\n          });\n          // setDocumentId(\"null\");\n          setResponseMsg(\"\");\n          setActionTaken(null);\n        }\n      } catch (error) {\n        console.error(error);\n        props.PushPopupAlert({\n          title: errorToText(error),\n          theme: PopupAlertTheme.danger,\n        });\n      }\n      setLoadingRequest(false);\n    }\n  };\n\n  const overrideDecision = async () => {\n    try {\n      const res = await axios.patch(\n        `${API.APPLICATION}/tolerateappl/${props.thisClaim.claiming_on_id}`,\n        {\n          user_id: props.auth.user.user_id,\n          comment: responseMsg,\n          application_status: ApplicationStates.Shortlisted,\n        }\n      );\n\n      res.data &&\n        props.reAssessApplication({\n          application_id: props.thisClaim.claiming_on_id,\n          application_status: ApplicationStates.Shortlisted,\n        });\n    } catch (error) {\n      console.error({ code_error: error });\n      PushPopupAlert({\n        title: errorToText(error),\n        theme: PopupAlertTheme.danger,\n      });\n      // errorToText(error);\n    }\n    setLoadingRequest(false);\n  };\n\n  const getPositionById = (position_id: string): PositionAPI | undefined => {\n    let result = props.systemPositions.find(\n      (item) => item.position_id === position_id\n    );\n\n    return result;\n  };\n\n  return (\n    <section className=\"\">\n      {/* #################### VIEW TABS ################################## */}\n      <div className=\"flex flex-row items-center mx-4\">\n        {Object.values(viewTabs).map((item, i) => (\n          <div\n            key={i}\n            onClick={() => setSelectedTab(item)}\n            className={`animate__animated ${\n              selectedTab === item\n                ? \"bg-blue-100 border-blue-600 text-blue-600 animate__zoomIn\"\n                : \"bg-white border-white text-gray-600\"\n            } hover:bg-blue-100 px-4 py-2 cursor-pointer font-bold border-b-4 hover:border-blue-600 hover:text-blue-600 rounded-t mt-1 mr-1`}\n          >\n            {item}\n          </div>\n        ))}\n      </div>\n      {/* #################### END VIEW TABS ################################## */}\n      <div className=\"w-full bg-white px-4 py-1 divide-y-2 space-y-2\">\n        {/* DOCUMENT DETAILS ==================================================== */}\n        <section className=\"flex flex-col\">\n          {/* DISPLAY POSITION ==================================================== */}\n          {selectedTab === viewTabs.application && (\n            <section className=\"w-full my-1 animate__animated animate__fadeIn rounded\">\n              <div className=\"bg-white w-full\">\n                <div className=\"text-gray-800 text-2xl font-bold my-2\">\n                  Position Details\n                </div>\n                <div className=\"flex items-center gap-2 text-base text-gray-600\">\n                  <span className={`italic`}>Desc:</span>\n                  <span className=\"font-semibold\">\n                    {getPositionById(props.thisApplication.position)\n                      ? getPositionById(props.thisApplication.position)!\n                          .description\n                      : \"\"}\n                  </span>\n                </div>\n                <div className=\"flex items-center gap-2 text-base text-gray-600\">\n                  <span className={`italic`}>School level:</span>\n                  <span className=\"font-semibold\">\n                    {getPositionById(props.thisApplication.position)\n                      ? getPositionById(props.thisApplication.position)!\n                          .school_level_id.school_level_name\n                      : \"\"}\n                  </span>\n                </div>\n                <div className=\"flex items-center gap-2 text-base text-gray-600\">\n                  <span className={`italic`}>Institute:</span>\n                  <span className=\"font-semibold\">\n                    {getPositionById(props.thisApplication.position)\n                      ? getPositionById(props.thisApplication.position)!\n                          .education_institute_id.education_category_title\n                      : \"\"}\n                  </span>\n                </div>\n                <div className=\"flex items-center gap-2 text-base text-gray-600\">\n                  <span className={`italic`}>Courses:</span>\n                  <span className=\"flex items-center gap-2\">\n                    {getPositionById(props.thisApplication.position) ? (\n                      getPositionById(\n                        props.thisApplication.position\n                      )!.courses.map((item, index) => (\n                        <div\n                          key={index + item.course_id}\n                          className=\"flex items-center gap-1\"\n                        >\n                          <span className=\"font-semibold\">\n                            {item.course_name}\n                          </span>\n                          <span className=\"text-gray-600\">\n                            ({item.course_code})\n                          </span>\n                          {index !==\n                            getPositionById(props.thisApplication.position)!\n                              .courses.length -\n                              1 && \",\"}\n                        </div>\n                      ))\n                    ) : (\n                      <NoResult\n                        theme={NoResultThemes.Dark}\n                        value={\"No courses found\"}\n                      />\n                    )}\n                  </span>\n                </div>\n\n                <div className=\"text-gray-800 text-2xl font-bold my-2\">\n                  Position Requirements\n                </div>\n                {getPositionById(props.thisApplication.position) ? (\n                  getPositionById(props.thisApplication.position)!.requirements\n                    .length > 0 ? (\n                    FC_AdminApplicationPositionDistinctCategory(\n                      getPositionById(props.thisApplication.position)!,\n                      props.documentCategories\n                    ).DistinctCategoriesTemp.map((item, index) => (\n                      <div\n                        className=\"bg-gray-100props.thisApplication.position rounded p-2\"\n                        key={index + item.category_id}\n                      >\n                        <div className=\"flex items-center gap-2 text-2xl text-gray-500 font-bold\">\n                          <MdTurnedIn />\n                          <span>{item.category_title}</span>\n                        </div>\n                        <div className=\"border bg-white mt-1\">\n                          <ViewRequirements\n                            requirements={FC_AdminApplicationPositionDistinctCategory(\n                              getPositionById(props.thisApplication.position)!,\n                              props.documentCategories\n                            ).PositionsTemp.filter(\n                              (req) => req.category_id === item.category_id\n                            )}\n                          />\n                        </div>\n                      </div>\n                    ))\n                  ) : (\n                    <NoResult\n                      theme={NoResultThemes.Dark}\n                      value={\"No requirements\"}\n                    ></NoResult>\n                  )\n                ) : (\n                  <NoResult\n                    theme={NoResultThemes.Dark}\n                    value={\"No requirements\"}\n                  ></NoResult>\n                )}\n              </div>\n            </section>\n          )}\n          {/* END DISPLAY POSITION ==================================================== */}\n          {/* -------------------------------------------------------------------------------- */}\n          {/* DISPLAY PROFILE ==================================================== */}\n          {selectedTab === viewTabs.profile && (\n            <section className=\"w-full my-2 animate__animated animate__fadeIn rounded\">\n              <div className=\"flex items-center justify-between\">\n                <div className=\"flex items-center gap-2\">\n                  <span className={`italic text-gray-600`}>Names:</span>\n                  <span className=\"text-gray-800 font-bold text-xl\">\n                    {showEvaluator(\n                      props.userList,\n                      props.thisApplication.user_id\n                    )}\n                  </span>\n                </div>\n                {false && (\n                  <button\n                    type=\"button\"\n                    className=\"bg-blue-200 hover:bg-blue-300 text-blue-700 group-hover:text-blue-800 py-1 px-2 mr-1 rounded text-sm\"\n                    onClick={() => setViewPosition(!viewPosition)}\n                  >\n                    {viewPosition ? \"Hide\" : \"More\"}\n                  </button>\n                )}\n              </div>\n            </section>\n          )}\n          {/* END DISPLAY PROFILE ==================================================== */}\n          <div className=\"flex items-center\">\n            <div className=\"flex items-center gap-2\">\n              <span className={`italic text-gray-600`}>Title:</span>\n              <span className=\"text-gray-800 font-bold text-2xl\">\n                {getPositionById(props.thisApplication.position)\n                  ? getPositionById(props.thisApplication.position)!\n                      .position_title\n                  : \"Position not found\"}\n              </span>\n            </div>\n          </div>\n          <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n            <span className={`italic`}>Status:</span>\n            <span\n              className={`font-bold ${\n                props.thisClaim.previous\n                  ? props.thisClaim.previous.status ===\n                    ApplicationStates.Rejected\n                  : props.thisApplication.application_status ===\n                    ApplicationStates.Rejected\n                  ? \"text-yellow-900\"\n                  : \"text-blue-600\"\n              } rounded px-3 py-1`}\n            >\n              {props.thisClaim.previous\n                ? capitalizeFirstLetter(props.thisClaim.previous.status)\n                : capitalizeFirstLetter(\n                    props.thisApplication.application_status\n                  )}\n            </span>\n          </div>\n          <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n            <span className={`italic`}>Evaluated by:</span>\n            <span className=\"font-semibold\">\n              {props.thisClaim.previous\n                ? showEvaluator(\n                    props.userList,\n                    props.thisClaim.previous.evaluated_by\n                  )\n                : showEvaluator(\n                    props.userList,\n                    props.thisApplication.override_by.user_id\n                  )}\n            </span>\n          </div>\n          {false && (\n            <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n              <span className={`italic`}>Session:</span>\n              <span className=\"font-bold text-gray-900 py-1\">\n                {props.thisApplication.application_session}\n              </span>\n            </div>\n          )}\n          <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n            <span className={`italic`}>Date:</span>\n            <span className=\"font-bold text-gray-900 py-1\">\n              {DATE(props.thisApplication.createdAt)}\n            </span>\n          </div>\n          <div className=\"flex items-start gap-2 text-sm text-gray-600\">\n            <span className={`italic`}>Reason:</span>\n            <span className=\"font-normal\">\n              {props.thisClaim.previous\n                ? props.thisClaim.previous.reason\n                : props.thisApplication.override_by.comment}\n            </span>\n          </div>\n        </section>\n        {/* END DOCUMENT DETAILS ==================================================== */}\n\n        {/* ################################################################################ */}\n\n        {/* CLAIM LEVEL 1 DETAILS ==================================================== */}\n        {props.thisClaim.claims.length > 0 &&\n          props.thisClaim.claims.map((claim, index) => (\n            <section className=\"flex flex-col px-2 pt-3\" key={index + claim.id}>\n              {/* CLAIM COMMENT ==>> LEVEL 1 ==================================================== */}\n              <div className=\"flex flex-col items-start gap-2\">\n                <p>{claim.reason}</p>\n                <span className=\"text-gray-500 text-xs\">\n                  {showDate(claim.createdAt) +\n                    \" at \" +\n                    timestampToDate(claim.date_created).timeFR}\n                </span>\n              </div>\n              {/* CLAIM COMMENT ==>> LEVEL 1 ==================================================== */}\n\n              {isClaimEvaluated(props.thisClaim, claim.level) && (\n                <section className=\"mt-4\">\n                  <span className=\"text-gray-500 italic font-semibold\">\n                    Response (level {index + 1})\n                  </span>\n                  <div className=\"border-t-2\">\n                    <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n                      <span className={`italic`}>Status:</span>\n                      <span\n                        className={`font-bold ${\n                          claim.decision_taken_status ===\n                          ClaimDecisionStatus.REJECTED\n                            ? \"text-yellow-900\"\n                            : \"text-blue-600\"\n                        } rounded px-3 py-1`}\n                      >\n                        {capitalizeFirstLetter(\n                          claim.decision_taken_status.toLocaleLowerCase()\n                        )}\n                      </span>\n                    </div>\n                    <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n                      <span className={`italic`}>Evaluated by:</span>\n                      <span className=\"font-semibold\">\n                        {getUserDocuments(props.userList, claim.evaluated_by)\n                          ? getUserDocuments(\n                              props.userList,\n                              claim.evaluated_by\n                            )!.user.user_info.fname +\n                            \" \" +\n                            getUserDocuments(\n                              props.userList,\n                              claim.evaluated_by\n                            )!.user.user_info.lname\n                          : \"-\"}\n                      </span>\n                    </div>\n                    <div className=\"flex items-start gap-2 text-sm text-gray-600\">\n                      <span className={`italic`}>Reason:</span>\n                      <span className=\"font-normal\">\n                        {claim.evaluation_comment}\n                      </span>\n                    </div>\n                  </div>\n                </section>\n              )}\n            </section>\n          ))}\n        {/* END CLAIM LEVEL 1 DETAILS ==================================================== */}\n      </div>\n\n      {/* FOOTER INITIAL ========================================== */}\n      {!actionTaken && (\n        <section className=\"flex items-center justify-between\">\n          {/* SHOWING STATUS ===================================== */}\n          <div className=\"mx-4 mb-5 mt-3\">\n            <span className=\"text-yellow-700 italic font-semibold\">\n              {capitalizeFirstLetter(\n                props.thisClaim.last_claim_status.toLocaleLowerCase()\n              )}\n            </span>\n          </div>\n\n          {props.thisClaim.last_claim_status === ClaimStatus.PENDING && (\n            <div className=\"flex items-center gap-2 px-2\">\n              <button\n                className={`px-4 py-2 font-semibold text-red-50 rounded inline-flex items-center space-x-2 focus:outline-none bg-red-700 hover:bg-red-800`}\n                onClick={() => {\n                  setActionTaken(ClaimDecisionStatus.REJECTED);\n                }}\n              >\n                <MdCancel className=\"w-5 h-5\" />\n                <span>Reject</span>\n              </button>\n              <button\n                className={`px-4 py-2 font-semibold text-blue-50 rounded inline-flex items-center space-x-2 focus:outline-none bg-blue-700 hover:bg-blue-800`}\n                onClick={() => {\n                  setActionTaken(ClaimDecisionStatus.ACCEPTED);\n                }}\n              >\n                <FaRegCheckCircle className=\"w-5 h-5\" />\n                <span>Accept</span>\n              </button>\n            </div>\n          )}\n        </section>\n      )}\n      {/* END FOOTER INITIAL ========================================== */}\n\n      {/* ======================================================== */}\n      {/* FOOTER RESPONSE ========================================== */}\n      {actionTaken && (\n        <section className=\"my-5 overflow-x-auto\">\n          <div className=\"italic text-gray-700 text-base my-1 mx-2\">\n            Selected decision:{\" \"}\n            <span\n              className={`font-semibold text-lg ${\n                actionTaken === ClaimDecisionStatus.ACCEPTED\n                  ? \"text-blue-700\"\n                  : \"text-yellow-800\"\n              }`}\n            >\n              {actionTaken === ClaimDecisionStatus.ACCEPTED\n                ? \"Approved\"\n                : \"Rejected\"}\n            </span>\n          </div>\n          {/* right part */}\n          <div className=\"flex flex-col md:flex-row items-end md:items-start gap-1 w-full\">\n            <div className=\"w-full px-2\">\n              <textarea\n                placeholder={`Reason of your decision...`}\n                cols={50}\n                rows={3}\n                className={`border border-${\n                  formError && formError.element === \"comment\" ? \"red\" : \"gray\"\n                }-400 rounded px-3 py-1 w-full focus:outline-none`}\n                style={{ resize: \"none\" }}\n                value={responseMsg}\n                onChange={(e) => {\n                  setResponseMsg(e.target.value);\n                  setFormError(null);\n                }}\n                disabled={loadingRequest}\n              ></textarea>\n              {formError && formError.element === \"comment\" && (\n                <p className=\"text-red-800\">{formError.msg}</p>\n              )}\n            </div>\n            <div className=\"flex flex-row md:flex-col gap-1 max-w-full px-2\">\n              <button\n                className=\"bg-gray-700 hover:bg-gray-800 px-4 py-2 font-semibold rounded text-white inline-flex items-center space-x-2 focus:outline-none\"\n                onClick={() => {\n                  setResponseMsg(\"\");\n                  setActionTaken(null);\n                  setFormError(null);\n                }}\n                disabled={loadingRequest}\n              >\n                <RiArrowGoBackFill className=\"w-5 h-5\" />\n                <span>Back</span>\n              </button>\n              <button\n                className=\"bg-blue-700 hover:bg-blue-800 px-4 py-2 font-semibold rounded text-white inline-flex items-center space-x-2 focus:outline-none\"\n                disabled={loadingRequest}\n                onClick={() =>\n                  window.confirm(\n                    `Are you sure you want to ${\n                      actionTaken === ClaimDecisionStatus.ACCEPTED\n                        ? \"approve\"\n                        : \"rejected\"\n                    } this document?`\n                  ) && handleVerify()\n                }\n              >\n                {loadingRequest ? (\n                  <div className=\"\">Loading...</div>\n                ) : (\n                  <div className=\"inline-flex items-center space-x-2 gap-1\">\n                    <FaRegCheckCircle className=\"w-5 h-5\" />\n                    <span>Confirm</span>\n                  </div>\n                )}\n              </button>\n            </div>\n          </div>\n          {/* end right part */}\n        </section>\n      )}\n      {/* END FOOTER RESPONSE ========================================== */}\n    </section>\n  );\n};\n\nconst mapStateToProps = ({\n  auth,\n}: StoreState): {\n  auth: Auth;\n} => {\n  return {\n    auth: auth,\n  };\n};\n\nexport default connect(mapStateToProps, {\n  evaluateClaim,\n  reAssessApplication,\n  PushPopupAlert,\n})(AdminClaimAppView);\n","import axios from \"axios\";\nimport React from \"react\";\nimport { FaRegCheckCircle } from \"react-icons/fa\";\nimport { MdCancel } from \"react-icons/md\";\nimport { RiArrowGoBackFill } from \"react-icons/ri\";\nimport { connect } from \"react-redux\";\nimport { adminDisplayClaimTitle, getUserDocuments } from \".\";\nimport { Auth, PushPopupAlert } from \"../../../actions\";\nimport { evaluateClaim } from \"../../../actions/claiming\";\nimport { verifyDocument } from \"../../../actions/document\";\nimport { VerifyDocumentInterface } from \"../../../actions/users\";\nimport {\n  CandidateClaimInterface,\n  ClaimDecisionStatus,\n  ClaimStatus,\n  ClaimTypesInterfaceAPI,\n} from \"../../../interfaces\";\nimport { PopupAlertTheme } from \"../../../interfaces/popupAlert\";\nimport { StoreState } from \"../../../reducers\";\nimport { DocumentReducerInterface } from \"../../../reducers/document\";\nimport {\n  capitalizeFirstLetter,\n  isEmptyOrSpaces,\n} from \"../../../shared/dataTest\";\nimport {\n  DocValidationStatusInterface,\n  UserDocumentsInterface,\n  UserInterface,\n} from \"../../../shared/interfaces\";\nimport { API } from \"../../../utils/api\";\nimport { errorToText } from \"../../../utils/errors\";\nimport { showDate, timestampToDate } from \"../../../utils/functions\";\nimport { isClaimEvaluated } from \"../ClaimDocView\";\n\ntype AdminClaimDocViewProps = {\n  thisDoc: UserDocumentsInterface;\n  documentCategories: DocumentReducerInterface;\n  thisClaim: CandidateClaimInterface;\n  userList: UserInterface[];\n  candidateId: string;\n  claimTypes: ClaimTypesInterfaceAPI[];\n  viewImage: boolean;\n  setViewImage: React.Dispatch<React.SetStateAction<boolean>>;\n  loadingRequest: boolean;\n  setLoadingRequest: React.Dispatch<React.SetStateAction<boolean>>;\n  actionTaken: ClaimDecisionStatus | null;\n  setActionTaken: React.Dispatch<\n    React.SetStateAction<ClaimDecisionStatus | null>\n  >;\n  responseMsg: string;\n  setResponseMsg: React.Dispatch<React.SetStateAction<string>>;\n  formError: {\n    element: string;\n    msg: string;\n  } | null;\n  setFormError: React.Dispatch<\n    React.SetStateAction<{\n      element: string;\n      msg: string;\n    } | null>\n  >;\n\n  // REDUX ==================\n  auth: Auth;\n  verifyDocument: Function;\n  evaluateClaim: Function;\n  PushPopupAlert: Function;\n};\n\nconst AdminClaimDocView: React.FC<AdminClaimDocViewProps> = (props) => {\n  const handleVerify = async () => {\n    if (!props.actionTaken) {\n      props.setFormError({\n        element: \"action\",\n        msg: \"Action is required!\",\n      });\n      return props.setLoadingRequest(false);\n    }\n\n    if (isEmptyOrSpaces(props.responseMsg)) {\n      props.setFormError({\n        element: \"comment\",\n        msg: \"Reason of rejection is required\",\n      });\n      return props.setLoadingRequest(false);\n    }\n\n    let subClaim = props.thisClaim.claims.find(\n      (item) => item.level === props.thisClaim.claim_level\n    );\n\n    if (subClaim) {\n      props.setLoadingRequest(true);\n      const api_body: {\n        sub_claim_id: string;\n        evaluation_comment: string;\n        evaluated_by: string;\n        decision_taken_status: ClaimDecisionStatus;\n      } = {\n        sub_claim_id: subClaim.id,\n        evaluation_comment: props.responseMsg,\n        evaluated_by: props.auth.user.user_id,\n        decision_taken_status: props.actionTaken,\n      };\n\n      try {\n        const res = await axios.put<CandidateClaimInterface>(\n          `${API.CLAIMING}/user/evaluate/${props.thisClaim.id}`,\n          api_body\n        );\n        if (res) {\n          console.log({ evaluate_claim_res: res });\n          props.evaluateClaim(res.data);\n          // REVALIDATED DOCUMENT IF IT IS APPROVED =========================\n          if (props.actionTaken === ClaimDecisionStatus.ACCEPTED) {\n            await FC_DocValidation();\n          }\n          props.PushPopupAlert({\n            title: `Claim responded successfully!`,\n            theme: PopupAlertTheme.success,\n          });\n          // setDocumentId(\"null\");\n          props.setResponseMsg(\"\");\n          props.setActionTaken(null);\n        }\n      } catch (error) {\n        console.error(error);\n        props.PushPopupAlert({\n          title: errorToText(error),\n          theme: PopupAlertTheme.danger,\n        });\n      }\n      props.setLoadingRequest(false);\n    }\n  };\n\n  const FC_DocValidation = async () => {\n    const api_body: VerifyDocumentInterface = {\n      user_id: props.thisClaim.user,\n      doc_id: props.thisClaim.claiming_on_id,\n      validation_status:\n        props.actionTaken === ClaimDecisionStatus.ACCEPTED\n          ? DocValidationStatusInterface.APPROVED\n          : DocValidationStatusInterface.REJECTED,\n      validated_by: {\n        user_id: props.auth.user.user_id,\n        comment: props.responseMsg,\n        validation_status:\n          props.actionTaken === ClaimDecisionStatus.ACCEPTED\n            ? DocValidationStatusInterface.APPROVED\n            : DocValidationStatusInterface.REJECTED,\n      },\n    };\n    const api_redux: VerifyDocumentInterface = {\n      user_id: props.thisClaim.user,\n      doc_id: props.thisClaim.claiming_on_id,\n      validation_status:\n        props.actionTaken === ClaimDecisionStatus.ACCEPTED\n          ? DocValidationStatusInterface.APPROVED\n          : DocValidationStatusInterface.REJECTED,\n      validated_by: {\n        user_id: props.auth.user.user_id,\n        comment: props.responseMsg,\n        validation_status:\n          props.actionTaken === ClaimDecisionStatus.ACCEPTED\n            ? DocValidationStatusInterface.APPROVED\n            : DocValidationStatusInterface.REJECTED,\n        date: \"\",\n      },\n    };\n\n    try {\n      const res = await axios.post<VerifyDocumentInterface>(\n        `${API.AUTH}/validateuserdoc`,\n        api_body\n      );\n      if (res) {\n        props.verifyDocument(api_redux);\n        await FC_shortListing(props.thisClaim.user);\n        // setDocumentId(\"null\");\n      }\n    } catch (error) {\n      console.error(error);\n      props.PushPopupAlert({\n        title: errorToText(error),\n        theme: PopupAlertTheme.danger,\n      });\n    }\n  };\n\n  const FC_shortListing = async (candidate_id: string) => {\n    try {\n      const res = await axios.patch(\n        `${API.APPLICATION}/doccheckshortlist/${candidate_id}`\n      );\n      console.log({ res });\n    } catch (error) {\n      console.error({ error });\n      props.PushPopupAlert({\n        title: errorToText(error),\n        theme: PopupAlertTheme.danger,\n      });\n    }\n  };\n\n  return (\n    <section className=\"\">\n      <div className=\"w-full bg-white px-4 py-1 divide-y-2 space-y-2\">\n        {/* DOCUMENT DETAILS ==================================================== */}\n        <section className=\"flex flex-col\">\n          <div className=\"flex items-center justify-between\">\n            <div className=\"flex items-center gap-2\">\n              <span className={`italic text-gray-600`}>Names:</span>\n              <span className=\"text-gray-800 font-bold text-xl\">\n                {getUserDocuments(props.userList, props.candidateId)\n                  ? getUserDocuments(props.userList, props.candidateId)!.user\n                      .user_info.fname +\n                    \" \" +\n                    getUserDocuments(props.userList, props.candidateId)!.user\n                      .user_info.lname\n                  : \"-\"}\n              </span>\n            </div>\n            <button\n              type=\"button\"\n              className=\"bg-blue-200 hover:bg-blue-300 text-blue-700 group-hover:text-blue-800 py-1 px-2 mr-1 rounded text-sm\"\n              onClick={() => props.setViewImage(!props.viewImage)}\n            >\n              {props.viewImage ? \"Hide\" : \"View\"}\n            </button>\n          </div>\n          <div className=\"flex items-center gap-2\">\n            <span className={`italic text-gray-600`}>Title:</span>\n            <span className=\"text-gray-800 font-bold text-2xl\">\n              {/* {ClaimGetDocTitle(props.documentCategories, props.thisDoc).main} */}\n              {getUserDocuments(props.userList, props.thisClaim.user)\n                ? adminDisplayClaimTitle(\n                    props.documentCategories,\n                    getUserDocuments(props.userList, props.thisClaim.user)!\n                      .document,\n                    props.thisClaim\n                  )\n                : \"-\"}\n            </span>\n          </div>\n          <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n            <span className={`italic`}>Status:</span>\n            <span className=\"font-bold text-yellow-900 rounded px-3 py-1\">\n              {props.thisClaim.previous\n                ? capitalizeFirstLetter(props.thisClaim.previous.status)\n                : capitalizeFirstLetter(props.thisDoc.validation_status)}\n            </span>\n          </div>\n          <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n            <span className={`italic`}>Evaluated by:</span>\n            <span className=\"font-semibold\">\n              {props.thisClaim.previous\n                ? getUserDocuments(\n                    props.userList,\n                    props.thisClaim.previous.evaluated_by\n                  )\n                  ? getUserDocuments(\n                      props.userList,\n                      props.thisClaim.previous.evaluated_by\n                    )!.user.user_info.fname +\n                    \" \" +\n                    getUserDocuments(\n                      props.userList,\n                      props.thisClaim.previous.evaluated_by\n                    )!.user.user_info.lname\n                  : \"-\"\n                : getUserDocuments(\n                    props.userList,\n                    props.thisDoc.validated_by.user_id\n                  )\n                ? getUserDocuments(\n                    props.userList,\n                    props.thisDoc.validated_by.user_id\n                  )!.user.user_info.fname +\n                  \" \" +\n                  getUserDocuments(\n                    props.userList,\n                    props.thisDoc.validated_by.user_id\n                  )!.user.user_info.lname\n                : \"-\"}\n            </span>\n          </div>\n          <div className=\"flex items-start gap-2 text-sm text-gray-600\">\n            <span className={`italic`}>Reason:</span>\n            <span className=\"font-normal\">\n              {props.thisClaim.previous\n                ? props.thisClaim.previous.reason\n                : props.thisDoc.validated_by.commet}\n            </span>\n          </div>\n\n          {/* DISPLAY IMAGE ==================================================== */}\n          {props.viewImage && (\n            <div className=\"w-full my-1 animate__animated animate__fadeIn\">\n              <img\n                src={`${API.AUTH_FILES}/${props.thisDoc.files}`}\n                alt=\"doc file\"\n                className={`w-full animate__animated animate__fadeIn`}\n              />\n            </div>\n          )}\n          {/* END DISPLAY IMAGE ==================================================== */}\n        </section>\n        {/* END DOCUMENT DETAILS ==================================================== */}\n\n        {/* ################################################################################ */}\n\n        {/* CLAIM LEVEL 1 DETAILS ==================================================== */}\n        {props.thisClaim.claims.length > 0 &&\n          props.thisClaim.claims.map((claim, index) => (\n            <section className=\"flex flex-col px-2 pt-3\" key={index + claim.id}>\n              {/* CLAIM COMMENT ==>> LEVEL 1 ==================================================== */}\n              <div className=\"flex flex-col items-start gap-2\">\n                <p>{claim.reason}</p>\n                <span className=\"text-gray-500 text-xs\">\n                  {showDate(claim.createdAt) +\n                    \" at \" +\n                    timestampToDate(claim.date_created).timeFR}\n                </span>\n              </div>\n              {/* CLAIM COMMENT ==>> LEVEL 1 ==================================================== */}\n\n              {isClaimEvaluated(props.thisClaim, claim.level) && (\n                <section className=\"mt-4\">\n                  <span className=\"text-gray-500 italic font-semibold\">\n                    Response (level {index + 1})\n                  </span>\n                  <div className=\"border-t-2\">\n                    <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n                      <span className={`italic`}>Status:</span>\n                      <span\n                        className={`font-bold ${\n                          claim.decision_taken_status ===\n                          ClaimDecisionStatus.REJECTED\n                            ? \"text-yellow-900\"\n                            : \"text-blue-600\"\n                        } rounded px-3 py-1`}\n                      >\n                        {capitalizeFirstLetter(\n                          claim.decision_taken_status.toLocaleLowerCase()\n                        )}\n                      </span>\n                    </div>\n                    <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n                      <span className={`italic`}>Evaluated by:</span>\n                      <span className=\"font-semibold\">\n                        {getUserDocuments(props.userList, claim.evaluated_by)\n                          ? getUserDocuments(\n                              props.userList,\n                              claim.evaluated_by\n                            )!.user.user_info.fname +\n                            \" \" +\n                            getUserDocuments(\n                              props.userList,\n                              claim.evaluated_by\n                            )!.user.user_info.lname\n                          : \"-\"}\n                      </span>\n                    </div>\n                    <div className=\"flex items-start gap-2 text-sm text-gray-600\">\n                      <span className={`italic`}>Reason:</span>\n                      <span className=\"font-normal\">\n                        {claim.evaluation_comment}\n                      </span>\n                    </div>\n                  </div>\n                </section>\n              )}\n            </section>\n          ))}\n        {/* END CLAIM LEVEL 1 DETAILS ==================================================== */}\n      </div>\n\n      {/* FOOTER INITIAL ========================================== */}\n      {!props.actionTaken && (\n        <section className=\"flex items-center justify-between\">\n          {/* SHOWING STATUS ===================================== */}\n          <div className=\"mx-4 mb-5 mt-3\">\n            <span\n              className={`${\n                props.thisClaim.last_claim_status === ClaimStatus.PENDING\n                  ? \"text-yellow-700\"\n                  : props.thisClaim.last_claim_status === ClaimStatus.DELETED\n                  ? \"text-red-700\"\n                  : \"text-green-700\"\n              } italic font-semibold`}\n            >\n              {capitalizeFirstLetter(\n                props.thisClaim.last_claim_status.toLocaleLowerCase()\n              )}\n            </span>\n          </div>\n\n          {props.thisClaim.last_claim_status === ClaimStatus.PENDING && (\n            <div className=\"flex items-center gap-2 px-2\">\n              <button\n                className={`px-4 py-2 font-semibold text-red-50 rounded inline-flex items-center space-x-2 focus:outline-none bg-red-700 hover:bg-red-800`}\n                onClick={() => {\n                  props.setActionTaken(ClaimDecisionStatus.REJECTED);\n                }}\n              >\n                <MdCancel className=\"w-5 h-5\" />\n                <span>Reject</span>\n              </button>\n              <button\n                className={`px-4 py-2 font-semibold text-blue-50 rounded inline-flex items-center space-x-2 focus:outline-none bg-blue-700 hover:bg-blue-800`}\n                onClick={() => {\n                  props.setActionTaken(ClaimDecisionStatus.ACCEPTED);\n                }}\n              >\n                <FaRegCheckCircle className=\"w-5 h-5\" />\n                <span>Accept</span>\n              </button>\n            </div>\n          )}\n        </section>\n      )}\n      {/* END FOOTER INITIAL ========================================== */}\n\n      {/* ======================================================== */}\n      {/* FOOTER RESPONSE ========================================== */}\n      {props.actionTaken && (\n        <section className=\"my-5 overflow-x-auto\">\n          <div className=\"italic text-gray-700 text-base my-1 mx-2\">\n            Selected decision:{\" \"}\n            <span\n              className={`font-semibold text-lg ${\n                props.actionTaken === ClaimDecisionStatus.ACCEPTED\n                  ? \"text-blue-700\"\n                  : \"text-yellow-800\"\n              }`}\n            >\n              {props.actionTaken === ClaimDecisionStatus.ACCEPTED\n                ? \"Approved\"\n                : \"Rejected\"}\n            </span>\n          </div>\n          {/* right part */}\n          <div className=\"flex flex-col md:flex-row items-end md:items-start gap-1 w-full\">\n            <div className=\"w-full px-2\">\n              <textarea\n                placeholder={`Reason of your decision...`}\n                cols={50}\n                rows={3}\n                className={`border border-${\n                  props.formError && props.formError.element === \"comment\"\n                    ? \"red\"\n                    : \"gray\"\n                }-400 rounded px-3 py-1 w-full focus:outline-none`}\n                style={{ resize: \"none\" }}\n                value={props.responseMsg}\n                onChange={(e) => {\n                  props.setResponseMsg(e.target.value);\n                  props.setFormError(null);\n                }}\n                disabled={props.loadingRequest}\n              ></textarea>\n              {props.formError && props.formError.element === \"comment\" && (\n                <p className=\"text-red-800\">{props.formError.msg}</p>\n              )}\n            </div>\n            <div className=\"flex flex-row md:flex-col gap-1 max-w-full px-2\">\n              <button\n                className=\"bg-gray-700 hover:bg-gray-800 px-4 py-2 font-semibold rounded text-white inline-flex items-center space-x-2 focus:outline-none\"\n                onClick={() => {\n                  props.setResponseMsg(\"\");\n                  props.setActionTaken(null);\n                  props.setFormError(null);\n                }}\n                disabled={props.loadingRequest}\n              >\n                <RiArrowGoBackFill className=\"w-5 h-5\" />\n                <span>Back</span>\n              </button>\n              <button\n                className=\"bg-blue-700 hover:bg-blue-800 px-4 py-2 font-semibold rounded text-white inline-flex items-center space-x-2 focus:outline-none\"\n                disabled={props.loadingRequest}\n                onClick={() =>\n                  window.confirm(\n                    `Are you sure you want to ${\n                      props.actionTaken === ClaimDecisionStatus.ACCEPTED\n                        ? \"approve\"\n                        : \"rejected\"\n                    } this document?`\n                  ) && handleVerify()\n                }\n              >\n                {props.loadingRequest ? (\n                  <div className=\"\">Loading...</div>\n                ) : (\n                  <div className=\"inline-flex items-center space-x-2 gap-1\">\n                    <FaRegCheckCircle className=\"w-5 h-5\" />\n                    <span>Confirm</span>\n                  </div>\n                )}\n              </button>\n            </div>\n          </div>\n          {/* end right part */}\n        </section>\n      )}\n      {/* END FOOTER RESPONSE ========================================== */}\n    </section>\n  );\n};\n\nconst mapStateToProps = ({\n  auth,\n}: StoreState): {\n  auth: Auth;\n} => {\n  return {\n    auth: auth,\n  };\n};\n\nexport default connect(mapStateToProps, {\n  evaluateClaim,\n  verifyDocument,\n  PushPopupAlert,\n})(AdminClaimDocView);\n","import React, { Fragment, useEffect, useState } from \"react\";\nimport { MdArrowBack } from \"react-icons/md\";\nimport { connect } from \"react-redux\";\nimport { PushPopupAlert } from \"../../../actions\";\nimport { Auth } from \"../../../actions/auth\";\nimport { getAllApplications, getAllClaims } from \"../../../actions/claiming\";\nimport {\n  getDocumentCategory,\n  getDocumentSubCategory,\n  getDocumentFields,\n} from \"../../../actions/document\";\nimport { GetAllSessionPlans } from \"../../../actions/session\";\nimport { getPositions } from \"../../../actions/settings\";\nimport { verifyAllDocument, fetchUserAccess } from \"../../../actions/users\";\nimport { PopupAlertData } from \"../../../components/Alert/Popup\";\nimport { SideNavigation } from \"../../../components/Navigation/SideNavigation\";\nimport NoResult, {\n  NoResultThemes,\n} from \"../../../components/NoResult/NoResult\";\nimport Table from \"../../../components/Table/Table\";\nimport {\n  allClaimApplicationInterface,\n  CandidateClaimInterface,\n  ClaimDecisionStatus,\n  ClaimTypesInterface,\n  PlansTypeKeys,\n  PositionAPI,\n  SessionPlanInterface,\n} from \"../../../interfaces\";\nimport { PopupAlertTheme } from \"../../../interfaces/popupAlert\";\nimport { StoreState } from \"../../../reducers\";\nimport { ClaimingReducerType } from \"../../../reducers/claiming\";\nimport { DocumentReducerInterface } from \"../../../reducers/document\";\nimport {\n  UserDocumentsInterface,\n  UserInterface,\n} from \"../../../shared/interfaces\";\nimport { getClaimById, whichClaimStatus, whichClaimType } from \"../Candidate\";\nimport ClaimHeaderTitle from \"../ClaimHeaderTitle\";\nimport AdminClaimAppView from \"./AdminClaimAppView\";\nimport AdminClaimDocView from \"./AdminClaimDocView\";\nimport AdminFilterByType, {\n  filterClaimsByClaimType,\n} from \"./AdminFilterByType\";\n\nexport const getUserDocuments = (\n  userList: UserInterface[],\n  user_id: String\n): { user: UserInterface; document: UserDocumentsInterface[] } | null => {\n  const thisUser = userList.find((item) => item.user_id === user_id);\n  if (thisUser) {\n    const thisDoc = thisUser.details.filter(\n      (item) => item.validation_status !== \"waiting\"\n    );\n    return { user: thisUser, document: thisDoc };\n  }\n  return null;\n};\n\nexport const adminDisplayClaimTitle = (\n  documentCategories: DocumentReducerInterface,\n  candidateDocuments: UserDocumentsInterface[],\n  thisClaim: CandidateClaimInterface\n): string => {\n  let result: string = \"\";\n\n  // CHECK IF CLAIM IS FOR DOCUMENTS ===============================================\n  if (thisClaim.type_key === PlansTypeKeys.DOCUMENT_VALIDATION) {\n    let thisDoc = candidateDocuments.find(\n      (item) => item.doc_id === thisClaim.claiming_on_id\n    );\n    result = thisDoc\n      ? AdminClaimGetDocTitle(documentCategories, thisDoc).main\n      : \"Document not found\";\n  }\n  // END CHECK IF CLAIM IS FOR DOCUMENTS ===============================================\n\n  return result;\n};\n\nexport const AdminClaimGetDocTitle = (\n  documentCategories: DocumentReducerInterface,\n  doc: UserDocumentsInterface\n): { category: string; sub_category: string; field: string; main: string } => {\n  let DocCategory: string = \"\",\n    DocSubCategory: string = \"\",\n    DocField: string = \"\",\n    DocTitle: string = \"\";\n  if (\n    doc.sub_category_id &&\n    doc.sub_category_id.length > 0 &&\n    documentCategories.documentSubCategory\n  ) {\n    DocTitle = documentCategories.documentSubCategory.filter(\n      (c) => c.user_detail_subcategory_id === doc.sub_category_id\n    )[0].title;\n    DocSubCategory = DocTitle;\n  } else if (\n    doc.category_id.length > 0 &&\n    documentCategories.documentCategory\n  ) {\n    DocTitle = documentCategories.documentCategory.filter(\n      (c) => c.user_detail_category_id === doc.category_id\n    )[0].title;\n    DocCategory = DocTitle;\n  }\n  if (\n    doc.category_subcategory_data.length > 0 &&\n    documentCategories.documentFields\n  ) {\n    DocField = documentCategories.documentFields.filter(\n      (c) => c._id === doc.category_subcategory_data\n    )[0].title;\n    DocTitle += \" in \" + DocField;\n  }\n\n  return {\n    category: DocCategory,\n    sub_category: DocSubCategory,\n    field: DocField,\n    main: DocTitle,\n  };\n};\n\nexport const getApplicationById = (\n  allApplications: allClaimApplicationInterface[] | null,\n  systemPositions: PositionAPI[] | null,\n  application_id: String\n): {\n  application: allClaimApplicationInterface;\n  position: PositionAPI;\n} | null => {\n  if (allApplications) {\n    let thisApplication = allApplications.find(\n      (item) => item._id === application_id\n    );\n    if (thisApplication && systemPositions) {\n      let thisPosition = systemPositions.find(\n        (item) => item.position_id === thisApplication!.position\n      );\n      if (thisPosition) {\n        return { application: thisApplication, position: thisPosition };\n      }\n    }\n  }\n  return null;\n};\n\ntype AppProps = {\n  auth: Auth;\n  application_sessions: SessionPlanInterface[] | null;\n  claiming: ClaimingReducerType;\n  documentReducer: DocumentReducerInterface;\n  userList: UserInterface[];\n  systemPositions: PositionAPI[] | null;\n  getPositions: Function;\n  getAllApplications: Function;\n  getAllClaims: Function;\n  GetAllSessionPlans: Function;\n  getDocumentCategory: Function;\n  getDocumentSubCategory: Function;\n  getDocumentFields: Function;\n  verifyAllDocument: Function;\n  fetchUserAccess: Function;\n  PushPopupAlert: (alert: PopupAlertData) => void;\n};\n\nconst Index: React.FC<AppProps> = (props) => {\n  const [thisPeriod, setThisPeriod] = useState<SessionPlanInterface | null>(\n    null\n  );\n  const [loading, setLoading] = useState<boolean>(true);\n  const [loadingSession, setLoadingSession] = useState<boolean>(true);\n  const [periodChanged, setPeriodChanged] = useState<boolean>(false);\n  const [loadingPosition, setLoadingPosition] = useState<boolean>(true);\n  const [loadingApplications, setLoadingApplications] = useState<boolean>(true);\n  const [loadingClaims, setLoadingClaims] = useState<boolean>(true);\n  const [loadingDocuments, setLoadingDocuments] = useState<boolean>(true);\n  const [loadingClarifications, setLoadingClarifications] =\n    useState<boolean>(true);\n  const [loadingUsers, setLoadingUsers] = useState(true);\n  const [loadingFields, setLoadingFields] = useState<boolean>(true);\n  const [viewClaim, setViewClaim] = useState<boolean>(false);\n  const [claimId, setClaimId] = useState<string | null>(null);\n  const [claimType, setClaimType] = useState<string | null>(null);\n  const [candidateId, setCandidateId] = useState<string | null>(null);\n\n  // FOR FORM ================\n  const [viewImage, setViewImage] = useState<boolean>(true);\n  const [loadingRequest, setLoadingRequest] = useState<boolean>(false);\n  const [actionTaken, setActionTaken] = useState<ClaimDecisionStatus | null>(\n    null\n  );\n  const [responseMsg, setResponseMsg] = useState<string>(\"\");\n  const [formError, setFormError] = useState<{\n    element: string;\n    msg: string;\n  } | null>(null);\n\n  useEffect(() => {\n    // LOADING APPLICATION SESSION ====================================\n    if (props.application_sessions === null) {\n      props.GetAllSessionPlans((status: boolean, msg: string) => {\n        if (!status) {\n          setLoadingSession(false);\n          setLoading(false);\n          if (msg.length) {\n            props.PushPopupAlert({\n              title: msg,\n              theme: PopupAlertTheme.danger,\n            });\n          }\n        }\n      });\n    } else if (loadingSession) {\n      setLoading(false);\n      setLoadingSession(false);\n    }\n\n    // SETTING ACTIVE SESSION ==========================\n    if (thisPeriod === null && !loadingSession && props.application_sessions) {\n      let thisSession = props.application_sessions.find(\n        (item) => item.is_active === true\n      );\n      setThisPeriod(\n        thisSession\n          ? thisSession\n          : props.application_sessions[props.application_sessions.length - 1]\n      );\n    }\n\n    // LOADING DOCUMENT CATEGORIES ==========================\n    if (!props.documentReducer.documentCategory && loadingDocuments) {\n      props.getDocumentCategory();\n      setLoadingDocuments(false);\n    } else if (loadingDocuments) {\n      setLoadingDocuments(false);\n    }\n    // LOADING DOCUMENT CLARIFICATIONS ==========================\n    if (!props.documentReducer.documentSubCategory && loadingClarifications) {\n      props.getDocumentSubCategory();\n      setLoadingClarifications(false);\n    } else if (loadingClarifications) {\n      setLoadingClarifications(false);\n    }\n    // LOADING DOCUMENT FIELDS ==========================\n    if (!props.documentReducer.documentFields && loadingFields) {\n      props.getDocumentFields();\n      setLoadingFields(false);\n    } else if (loadingFields) {\n      setLoadingFields(false);\n    }\n\n    // LOADING CLAIMING OF CURRENT CANDIDATES ================================\n    if (props.claiming.allClaims === null && thisPeriod !== null) {\n      props.getAllClaims(\n        2,\n        thisPeriod.session_plan_id,\n        (status: boolean, msg: string) => {\n          !status && setLoadingClaims(status);\n          if (status === false && msg.length) {\n            props.PushPopupAlert({\n              title: msg,\n              theme: PopupAlertTheme.danger,\n            });\n          }\n        }\n      );\n    } else if (thisPeriod && loadingClaims) {\n      setLoadingClaims(false);\n    }\n\n    // LOADING CLAIMING OF CURRENT CANDIDATES ================================\n    if (props.claiming.allApplications === null && thisPeriod !== null) {\n      props.getAllApplications(\n        thisPeriod.session_plan_id,\n        (status: boolean, msg: string) => {\n          !status && setLoadingApplications(status);\n          if (status === false && msg.length) {\n            props.PushPopupAlert({\n              title: msg,\n              theme: PopupAlertTheme.danger,\n            });\n          }\n        }\n      );\n    } else if (thisPeriod && loadingApplications) {\n      setLoadingApplications(false);\n    }\n\n    if (!props.userList.length && loadingUsers) {\n      setLoadingUsers(false);\n      props.fetchUserAccess();\n    } else if (loadingUsers) {\n      setLoadingUsers(false);\n    }\n\n    if (props.systemPositions === null) {\n      props.getPositions((status: boolean, msg: string) => {\n        setLoadingPosition(status);\n        console.log({ status: status, msg: msg });\n        if (msg.length) {\n          props.PushPopupAlert({\n            title: msg,\n            theme: PopupAlertTheme.danger,\n          });\n        }\n      });\n    } else if (loadingPosition) {\n      setLoadingPosition(false);\n    }\n  }, [\n    loadingApplications,\n    loadingClaims,\n    loadingClarifications,\n    loadingDocuments,\n    loadingFields,\n    loadingPosition,\n    loadingSession,\n    loadingUsers,\n    props,\n    thisPeriod,\n  ]);\n\n  if (loading || props.application_sessions === null) {\n    return (\n      <div className=\"text-center mt-7 font-bold text-4xl text-gray-400 animate-pulse\">\n        Loading Data...\n      </div>\n    );\n  }\n\n  const displayClaimName = (\n    thisClaim: CandidateClaimInterface\n  ): string | JSX.Element => {\n    let result: string = thisClaim.claiming_on_id;\n    if (thisClaim.type_key === PlansTypeKeys.DOCUMENT_VALIDATION) {\n      if (loadingUsers)\n        return <div className={`h-6 bg-gray-300 rounded w-2/3`}></div>;\n      result = getUserDocuments(props.userList, thisClaim.user)\n        ? getUserDocuments(props.userList, thisClaim.user)!.user.user_info\n            .fname +\n          \" \" +\n          getUserDocuments(props.userList, thisClaim.user)!.user.user_info.lname\n        : \"-\";\n    }\n    if (thisClaim.type_key === PlansTypeKeys.APPLICATION) {\n      if (\n        loadingApplications ||\n        loadingPosition ||\n        props.systemPositions === null ||\n        props.claiming.allApplications === null\n      ) {\n        return <div className={`h-6 bg-gray-300 rounded w-2/3`}></div>;\n      } else if (props.claiming.allApplications) {\n        result = getUserDocuments(props.userList, thisClaim.user)\n          ? getUserDocuments(props.userList, thisClaim.user)!.user.user_info\n              .fname +\n            \" \" +\n            getUserDocuments(props.userList, thisClaim.user)!.user.user_info\n              .lname\n          : \"-\";\n      }\n    }\n\n    return result;\n  };\n\n  const displayClaimTitle = (\n    thisClaim: CandidateClaimInterface\n  ): string | JSX.Element => {\n    let result: string = thisClaim.claiming_on_id;\n    if (thisClaim.type_key === PlansTypeKeys.DOCUMENT_VALIDATION) {\n      if (loadingUsers)\n        return <div className={`h-6 bg-gray-300 rounded w-2/3`}></div>;\n      result = getUserDocuments(props.userList, thisClaim.user)\n        ? adminDisplayClaimTitle(\n            props.documentReducer,\n            getUserDocuments(props.userList, thisClaim.user)!.document,\n            thisClaim\n          )\n        : \"Document not found\";\n    }\n    if (thisClaim.type_key === PlansTypeKeys.APPLICATION) {\n      if (loadingApplications || loadingPosition) {\n        return <div className={`h-6 bg-gray-300 rounded w-2/3`}></div>;\n      } else if (props.claiming.allApplications) {\n        let thisApplication = props.claiming.allApplications.find(\n          (item) => item._id === thisClaim.claiming_on_id\n        );\n        if (\n          thisApplication &&\n          props.claiming.allApplications &&\n          props.systemPositions\n        ) {\n          let thisPosition = props.systemPositions.find(\n            (item) => item.position_id === thisApplication!.position\n          );\n          if (thisPosition) {\n            result = thisPosition.position_title;\n          } else {\n            result = \"Application not found\";\n          }\n        }\n      }\n    }\n\n    return result;\n  };\n\n  const tableData = (): JSX.Element[] => {\n    if (\n      props.claiming.allClaims &&\n      props.claiming.claimTypes &&\n      !loadingDocuments &&\n      !loadingSession &&\n      !loadingUsers &&\n      !loadingClaims\n    ) {\n      // CHECK IF THERE IS NO CLAIM ========================================\n      if (\n        filterClaimsByClaimType(\n          props.claiming.allClaims,\n          props.claiming.selectedClaimType\n        ).length <= 0\n      ) {\n        return [\n          <tr\n            className=\"border-b border-gray-200 group hover:bg-gray-50 cursor-pointer\"\n            key=\"key3201\"\n          >\n            <td className=\"px-3 py-1\">\n              <NoResult\n                theme={NoResultThemes.Light}\n                value={\"No claim found!\"}\n              />\n            </td>\n          </tr>,\n        ];\n      }\n      // END CHECK IF THERE IS NO CLAIM ========================================\n\n      return filterClaimsByClaimType(\n        props.claiming.allClaims,\n        props.claiming.selectedClaimType\n      ).map((claim, index) => (\n        <tr\n          className=\"border-b border-gray-200 group hover:bg-gray-50 cursor-pointer\"\n          key={index + claim.id}\n          onClick={() => {\n            setViewClaim(true);\n            setClaimId(claim.id);\n            setCandidateId(claim.user);\n            setClaimType(whichClaimType(claim) ? whichClaimType(claim)! : null);\n          }}\n        >\n          <td className=\"px-3 py-1\">{index + 1}</td>\n          <td className=\"px-3 py-1 whitespace-nowrap\">\n            {displayClaimName(claim)}\n          </td>\n          <td className=\"px-3 py-1 whitespace-nowrap\">\n            {displayClaimTitle(claim)}\n          </td>\n          <td className=\"px-3 py-1 text-center whitespace-nowrap\">\n            {whichClaimType(claim) ? whichClaimType(claim)! : \"-\"}\n          </td>\n          <td className=\"px-3 py-1 text-center whitespace-nowrap\">\n            <span\n              className={`inline-block rounded-full duration-300 text-xs font-semibold px-3 py-1 ${\n                whichClaimStatus(claim).classes\n              }`}\n            >\n              {whichClaimStatus(claim).status}\n            </span>\n          </td>\n          <td className=\"px-3 py-1 text-center whitespace-nowrap\">\n            <button className=\"btn bg-blue-500 text-white group-hover:bg-blue-600\">\n              View\n            </button>\n          </td>\n        </tr>\n      ));\n    }\n\n    return [\n      <tr key={43243} className=\"border-b border-gray-200\">\n        <td className=\"p-3 text-center whitespace-nowrap\">\n          <div className=\"w-full h-4 rounded bg-gray-200 animate__animated animate__pulse animate__delay-5s animate__infinite\"></div>\n        </td>\n        <td className=\"p-3 text-center whitespace-nowrap\">\n          <div className=\"w-full h-4 rounded bg-gray-200 animate__animated animate__pulse animate__delay-5s animate__infinite\"></div>\n        </td>\n        <td className=\"p-3 text-center whitespace-nowrap\">\n          <div className=\"w-full h-4 rounded bg-gray-200 animate__animated animate__pulse animate__delay-5s animate__infinite\"></div>\n        </td>\n        <td className=\"p-3 text-center whitespace-nowrap\">\n          <div className=\"w-full h-4 rounded bg-gray-200 animate__animated animate__pulse animate__delay-5s animate__infinite\"></div>\n        </td>\n      </tr>,\n      <tr key={43243343} className=\"border-b border-gray-200\">\n        <td className=\"p-3 text-center whitespace-nowrap\">\n          <div className=\"w-full h-4 rounded bg-gray-200 animate__animated animate__pulse animate__delay-5s animate__infinite\"></div>\n        </td>\n        <td className=\"p-3 text-center whitespace-nowrap\">\n          <div className=\"w-full h-4 rounded bg-gray-200 animate__animated animate__pulse animate__delay-5s animate__infinite\"></div>\n        </td>\n        <td className=\"p-3 text-center whitespace-nowrap\">\n          <div className=\"w-full h-4 rounded bg-gray-200 animate__animated animate__pulse animate__delay-5s animate__infinite\"></div>\n        </td>\n        <td className=\"p-3 text-center whitespace-nowrap\">\n          <div className=\"w-full h-4 rounded bg-gray-200 animate__animated animate__pulse animate__delay-5s animate__infinite\"></div>\n        </td>\n      </tr>,\n      <tr key={4327543} className=\"border-b border-gray-200\">\n        <td className=\"p-3 text-center whitespace-nowrap\">\n          <div className=\"w-full h-4 rounded bg-gray-200 animate__animated animate__pulse animate__delay-5s animate__infinite\"></div>\n        </td>\n        <td className=\"p-3 text-center whitespace-nowrap\">\n          <div className=\"w-full h-4 rounded bg-gray-200 animate__animated animate__pulse animate__delay-5s animate__infinite\"></div>\n        </td>\n        <td className=\"p-3 text-center whitespace-nowrap\">\n          <div className=\"w-full h-4 rounded bg-gray-200 animate__animated animate__pulse animate__delay-5s animate__infinite\"></div>\n        </td>\n        <td className=\"p-3 text-center whitespace-nowrap\">\n          <div className=\"w-full h-4 rounded bg-gray-200 animate__animated animate__pulse animate__delay-5s animate__infinite\"></div>\n        </td>\n      </tr>,\n    ];\n  };\n\n  const onPeriodChange = (period_id: string) => {\n    setPeriodChanged(true);\n    props.getAllClaims(2, period_id, (status: boolean, msg: string) => {\n      !status && setPeriodChanged(false);\n      if (status === false && msg.length) {\n        props.PushPopupAlert({\n          title: msg,\n          theme: PopupAlertTheme.danger,\n        });\n      }\n    });\n  };\n\n  return (\n    <Fragment>\n      {/* {props.claiming.myClaims} */}\n      {/* SIDE NAVIGATION */}\n      {!viewClaim && (\n        <SideNavigation>\n          {/* FILTER SECTION */}\n          <AdminFilterByType loadingClaims={loadingClaims} />\n          {/* END FILTER SECTION */}\n        </SideNavigation>\n      )}\n      {/* END SIDE NAVIGATION */}\n\n      {/* CLAIM TITLE ===================================== */}\n      {!viewClaim && (\n        <ClaimHeaderTitle\n          headerTitle={`${\n            props.claiming.selectedClaimType === \"all\"\n              ? \"All\"\n              : props.claiming.selectedClaimType ===\n                PlansTypeKeys.DOCUMENT_VALIDATION\n              ? \"Documents\"\n              : props.claiming.selectedClaimType === PlansTypeKeys.APPLICATION\n              ? \"Applications\"\n              : props.claiming.selectedClaimType === PlansTypeKeys.EXAMINATION\n              ? \"Exam\"\n              : props.claiming.selectedClaimType ===\n                PlansTypeKeys.MARKS_PUBLICATION\n              ? \"Marks publication\"\n              : props.claiming.selectedClaimType ===\n                PlansTypeKeys.PLACEMENT_TRANSFER\n              ? \"Placements\"\n              : \"\"\n          } Claiming`}\n          loading={loading}\n          loadingSession={loadingSession}\n          thisPeriod={thisPeriod}\n          setThisPeriod={setThisPeriod}\n          setLoadingSession={setLoadingSession}\n          application_sessions={props.application_sessions}\n          onPeriodChange={onPeriodChange}\n          periodChanged={periodChanged}\n        />\n      )}\n      {/* END CLAIM TITLE ===================================== */}\n\n      {!viewClaim && (\n        <section className=\"bg-white w-full p-1\">\n          <Table\n            columns={[\n              { columnTitle: \"\", alignText: \"left\", padding: \"p-3\" },\n              { columnTitle: \"\", alignText: \"left\", padding: \"p-3\" },\n              {\n                columnTitle: \"\",\n                alignText: \"left\",\n                padding: \"p-3\",\n              },\n              {\n                columnTitle: \"\",\n                alignText: \"left\",\n                padding: \"p-3\",\n              },\n              { columnTitle: \"\", alignText: \"left\", padding: \"p-3\" },\n            ]}\n            hideColumns={true}\n            rows={tableData}\n            pagination={true}\n            search={true}\n            thColor=\"gray\"\n            loading={loadingClaims}\n          />\n        </section>\n      )}\n\n      {/* view claim */}\n      {viewClaim &&\n        candidateId &&\n        getUserDocuments(props.userList, candidateId) &&\n        props.claiming.allClaims &&\n        claimId &&\n        getClaimById(props.claiming.allClaims, claimId) &&\n        props.claiming.claimTypes && (\n          <section className=\"bg-white w-full p-1 my-4\">\n            {/* VIEW CLAIM HEADER =============================== */}\n            <section className=\"flex items-center gap-2 py-2 border-b\">\n              <button\n                className={`ml-3 bg-gray-50 hover:bg-blue-100 rounded-full px-1 py-1 focus:outline-none ${\n                  loadingRequest ? \"cursor-not-allowed\" : \"cursor-pointer\"\n                } animate__animated animate__fadeIn`}\n                disabled={loadingRequest}\n                onClick={() => {\n                  setViewClaim(false);\n                  setViewImage(true);\n                  setLoadingRequest(false);\n                  setActionTaken(null);\n                  setResponseMsg(\"\");\n                  setFormError(null);\n                }}\n              >\n                <MdArrowBack className=\"w-7 h-7\" />\n              </button>\n              {/* <div className={`text-blue-600 font-extrabold text-2xl px-2`}>\n                Positions\n              </div> */}\n            </section>\n            {/* END VIEW CLAIM HEADER =============================== */}\n\n            <section className=\"my-2\">\n              {/* FOR DOCUMENT ========================== */}\n              {claimType &&\n                claimType.toLocaleLowerCase() ===\n                  ClaimTypesInterface.DOCUMENT.toLocaleLowerCase() && (\n                  <div>\n                    {getUserDocuments(\n                      props.userList,\n                      candidateId\n                    )!.document.find(\n                      (item) =>\n                        item.doc_id ===\n                        getClaimById(props.claiming.allClaims!, claimId)!\n                          .claiming_on_id\n                    ) ? (\n                      <AdminClaimDocView\n                        thisDoc={\n                          getUserDocuments(\n                            props.userList,\n                            candidateId\n                          )!.document.find(\n                            (item) =>\n                              item.doc_id ===\n                              getClaimById(props.claiming.allClaims!, claimId)!\n                                .claiming_on_id\n                          )!\n                        }\n                        documentCategories={props.documentReducer}\n                        thisClaim={\n                          getClaimById(props.claiming.allClaims, claimId)!\n                        }\n                        userList={props.userList}\n                        claimTypes={props.claiming.claimTypes}\n                        viewImage={viewImage}\n                        setViewImage={setViewImage}\n                        loadingRequest={loadingRequest}\n                        setLoadingRequest={setLoadingRequest}\n                        actionTaken={actionTaken}\n                        setActionTaken={setActionTaken}\n                        responseMsg={responseMsg}\n                        setResponseMsg={setResponseMsg}\n                        formError={formError}\n                        setFormError={setFormError}\n                        candidateId={candidateId}\n                      />\n                    ) : (\n                      <NoResult\n                        theme={NoResultThemes.Dark}\n                        value={\"Document not found\"}\n                      />\n                    )}\n                  </div>\n                )}\n\n              {/* FOR APPLICATION ========================== */}\n              {claimType &&\n                claimType.toLocaleLowerCase() ===\n                  ClaimTypesInterface.APPLICATION.toLocaleLowerCase() && (\n                  <div>\n                    {getApplicationById(\n                      props.claiming.allApplications,\n                      props.systemPositions,\n                      getClaimById(props.claiming.allClaims, claimId)!\n                        .claiming_on_id\n                    ) ? (\n                      props.systemPositions && (\n                        <AdminClaimAppView\n                          thisApplication={\n                            getApplicationById(\n                              props.claiming.allApplications,\n                              props.systemPositions,\n                              getClaimById(props.claiming.allClaims, claimId)!\n                                .claiming_on_id\n                            )!.application\n                          }\n                          thisPosition={\n                            getApplicationById(\n                              props.claiming.allApplications,\n                              props.systemPositions,\n                              getClaimById(props.claiming.allClaims, claimId)!\n                                .claiming_on_id\n                            )!.position\n                          }\n                          documentCategories={props.documentReducer}\n                          thisClaim={\n                            getClaimById(props.claiming.allClaims, claimId)!\n                          }\n                          userList={props.userList}\n                          claimTypes={props.claiming.claimTypes}\n                          systemPositions={props.systemPositions}\n                        />\n                      )\n                    ) : (\n                      <NoResult\n                        theme={NoResultThemes.Dark}\n                        value={\"Application not found\"}\n                      />\n                    )}\n                  </div>\n                )}\n            </section>\n          </section>\n        )}\n      {/* end view claim */}\n    </Fragment>\n  );\n};\n\nconst mapStateToProps = ({\n  auth,\n  system_settings,\n  sessionPlan,\n  claiming,\n  document,\n  users,\n}: StoreState): {\n  auth: Auth;\n  application_sessions: SessionPlanInterface[] | null;\n  systemPositions: PositionAPI[] | null;\n  claiming: ClaimingReducerType;\n  documentReducer: DocumentReducerInterface;\n  userList: UserInterface[];\n} => {\n  return {\n    auth: auth,\n    application_sessions: sessionPlan.allSessionPlans,\n    systemPositions: system_settings.systemPositions,\n    claiming,\n    documentReducer: document,\n    userList: users,\n  };\n};\n\nexport const AdminClaim = connect(mapStateToProps, {\n  getAllClaims,\n  getAllApplications,\n  GetAllSessionPlans,\n  getDocumentCategory,\n  getDocumentSubCategory,\n  getDocumentFields,\n  verifyAllDocument,\n  fetchUserAccess,\n  getPositions,\n  PushPopupAlert,\n})(Index);\n","import {\n  ApplicationStates,\n  SESSION_PLAN_KEYS,\n} from \"../interfaces/application\";\n\nexport interface SystemSettingsInterface {\n  system_setting_id: string;\n  name: string;\n  key: string;\n  status: \"enabled\" | \"disabled\";\n}\n\nexport interface ApplicationSessionInterface {\n  is_active: boolean;\n  application_session_name: string;\n  period: string;\n  application_start_date: string;\n  application_end_date: string;\n  createdAt: string;\n  updatedAt: string;\n  application_session_id: string;\n}\n\nexport interface UserInfoInterface {\n  document_type?: string;\n  issue_number?: string;\n  date_of_issue?: string;\n  date_of_expiry?: string;\n  place_of_issue?: string;\n  application_number?: string;\n  fname: string;\n  lname: string;\n  sex: \"M\" | \"F\";\n  father_names: string;\n  mother_names: string;\n  date_of_birth: string;\n  place_of_birth?: string;\n  country_of_birth: string;\n  village_id: string;\n  village: string;\n  cell: string;\n  sector: string;\n  district: string;\n  province: string;\n  photo?: string;\n  civil_status?: string;\n  spouse?: any;\n  status?: string;\n}\n\nexport interface UserInterface {\n  user_id: string;\n  n_id?: string;\n  phone_number: string;\n  email: string;\n  password?: string;\n  user_info: UserInfoInterface;\n  details: UserDocumentsInterface[];\n  user_photo?: string;\n  default_access: RoleToUserInterface | null;\n  custome_access: CustomeAccessInterface | null;\n  is_active?: boolean;\n}\n\nexport interface CandidateDetailsInterface_old {\n  category_id: string;\n  sub_category_id: string;\n  category_subcategory_data: string;\n  title: string;\n  description: string;\n  files: string;\n  start_year: string;\n  end_year: string;\n  school: string;\n  email: string;\n  names: string;\n  phone_number: string;\n  company: string;\n  year: string;\n  doc_id: string;\n  validation_status: \"waiting\" | \"approved\" | \"rejected\";\n  validated_by: {\n    user_id: string;\n    comment: string;\n    validation_status: \"waiting\" | \"approved\" | \"rejected\";\n    date: string;\n  } | null;\n  doc_history_status: string;\n  get_in_date: string;\n  approved?: string;\n}\n\nexport interface CandidateDetailsInterface {\n  category_id: string;\n  sub_category_id: string;\n  category_subcategory_data: string;\n  title: string;\n  description: string;\n  files: string;\n  start_year: string;\n  end_year: string;\n  school: string;\n  email: string;\n  names: string;\n  phone_number: string;\n  company: string;\n  year: string;\n  doc_id: string;\n  validation_status: \"waiting\" | \"approved\" | \"rejected\";\n  validated_by: {\n    user_id: string;\n    comment: string;\n    validation_status: \"waiting\" | \"approved\" | \"rejected\";\n    date: string;\n  } | null;\n  doc_history_status: string;\n  get_in_date: string;\n  approved?: string;\n}\n\nexport interface DocInterface {\n  category_subcategory_data: string;\n  school: string;\n  category_id: string;\n  company: string;\n  description: string;\n  email: string;\n  end_year: string;\n  files: string;\n  names: string;\n  phone_number: string;\n  start_year: string;\n  sub_category_id: string;\n  title: string;\n  year: string;\n  approved: string;\n  doc_id: string;\n  validated_by: null;\n  validation_status: string;\n  doc_history_status: string;\n  get_in_date: string;\n  date_modefied: string;\n}\n\nexport interface CandidateRoleToUserInterface {\n  key: string;\n  status: number;\n  access: boolean;\n  assigned_date: string;\n}\n\nexport interface CandidatesInterface_old {\n  user_id: string;\n  n_id: string;\n  fname: string;\n  lname: string;\n  phone_number: string;\n  district: string;\n  email: string;\n  details: CandidateDetailsInterface[];\n}\n\nexport interface ApplicationExamsInterface {\n  course_id: string;\n  proctoring_type: string;\n  center_id: string;\n  room_id: string;\n}\n\nexport interface CandidatesInterface {\n  user_id: string;\n  n_id: string;\n  fname: string;\n  lname: string;\n  phone_number: string;\n  district: string;\n  email: string;\n  details: CandidateDetailsInterface[];\n  exams: ApplicationExamsInterface[];\n}\n\nexport interface CustomeAccessInterface {\n  access: AccessTaskInterface[];\n  user_id: string;\n  custome_user_access_id: string;\n}\n\nexport interface UserDocumentsInterface {\n  category_id: string;\n  sub_category_id: string;\n  category_subcategory_data: string;\n  title: string;\n  description: string;\n  files: string;\n  start_year: string;\n  end_year: string;\n  school: { title: string; school_id: string | null };\n  email: string;\n  names: string;\n  phone_number: string;\n  company: string;\n  year: string;\n  approved: \"waiting\" | \"approved\" | \"rejected\";\n  doc_id: string;\n  validation_status: \"waiting\" | \"approved\" | \"rejected\";\n  validated_by: {\n    user_id: string;\n    commet: string;\n    validation_status: \"waiting\" | \"approved\" | \"rejected\";\n    date: string;\n  };\n}\n\nexport interface SystemUserRoleInterface {\n  system_user_role_id: string;\n  role: string;\n  status: boolean;\n  access: AccessTaskInterface[];\n  district_required?: boolean;\n  school_required?: boolean;\n  room_required?: boolean;\n  education_institution_required?: boolean;\n  school_id: string;\n  district_id: string;\n}\n\nexport interface CustomeUserAccessInterface {\n  user_id: string;\n  access?: [\n    {\n      id: string;\n      task: string;\n      key: string;\n      permitted: {\n        create: boolean;\n        delete: boolean;\n        update: boolean;\n        view: boolean;\n      };\n    }\n  ];\n}\n\nexport interface PermissionInterface {\n  create: boolean;\n  view: boolean;\n  update: boolean;\n  delete: boolean;\n}\n\nexport interface AccessTaskInterface {\n  id: string;\n  task: string;\n  key: string;\n  permitted: PermissionInterface;\n}\n\nexport interface RoleToUserInterface {\n  system_user_role_id: string;\n  role: string;\n  access: AccessTaskInterface[];\n  status?: number;\n  school_id: string;\n  district_id: string;\n  room_id: string;\n  education_institution_id: string;\n}\n\nexport interface RoomsInterface {\n  occupied: number;\n  isUsed: string;\n  room_type: string;\n  room_number: number;\n  capacity: number;\n  examination_center_room_id: string;\n}\n\nexport interface CentersInterface {\n  rooms: RoomsInterface[];\n  isUsed: boolean;\n  examination_center_id: string;\n  center_name: string;\n}\n\nexport interface DistrictInterface {\n  centers: CentersInterface[];\n  district_name: string;\n  district_id: string;\n}\n\nexport interface RoomLocationInterface {\n  districts: DistrictInterface[];\n  province_name: string;\n  province_id: string;\n}\n\nexport interface AssignRoleToUserActionInterface {\n  user_id: string;\n  data: RoleToUserInterface;\n}\n\nexport interface AssignRoleToUserActionInterface {\n  user_id: string;\n  data: RoleToUserInterface;\n}\n\nexport enum PostRequestStatusInterface {\n  INITIATED = \"initiated\",\n  CONFIRMED = \"confirmed\",\n  RECEIVED = \"received\",\n}\n\nexport interface PostSchoolInterface_old {\n  post_at_school_id: string;\n  school_id: string;\n  position_id: string;\n  district_id: string;\n  needed_posts: number;\n  confirmed_posts?: number;\n  occupied_posts?: number;\n  requested_by: string;\n  confirmed_by?: string;\n  received_posts?: number;\n  request_date: Date;\n  approval_date?: Date;\n  post_at_school_status: PostRequestStatusInterface;\n}\n\nexport interface PostSchoolInterface {\n  requested_post_id: string;\n  school_id: string;\n  position_id: string;\n  district_id: string;\n  needed_posts: number;\n  male_number: number;\n  female_number: number;\n  description: string;\n  confirmed_posts?: number;\n  occupied_posts?: number;\n  requested_by: string;\n  confirmed_by?: string;\n  received_posts?: number;\n  request_date: Date;\n  approval_date?: Date;\n  requested_post_status: PostRequestStatusInterface;\n}\n\nexport interface SchoolInfoInterface {\n  school_id: string;\n  school_title: string;\n  district_id: string;\n  number_of_females?: number;\n  number_of_males?: number;\n}\n\nexport interface SchoolsInterface {\n  _id: string;\n  status: boolean;\n  school_name: string;\n  district_id: string;\n  education_category_id: string;\n}\n\nexport interface SchoolLevelInterface {\n  school_level_id: string;\n  school_level_name: string;\n  description: string;\n  education_institute: string[];\n  courses: [];\n}\n\nexport interface CourseInterface {\n  course_name: string;\n  course_code: string;\n  description: string;\n  school_levels: string[];\n  course_id: string;\n}\n\nexport interface EducationInstituteInterface {\n  education_category_title: string;\n  school_levels: [];\n  description: string;\n  education_institute_id: string;\n}\n\nexport interface PositionRequirementInterface {\n  user_detail_category_id: string;\n  title: string;\n  user_required_docs: {\n    user_detail_subcategory_id: string;\n    title: string;\n  }[];\n}\n\nexport interface PositionInterface {\n  courses: CourseInterface[];\n  position_title: string;\n  description: string;\n  school_level_id: SchoolLevelInterface;\n  education_institute_id: EducationInstituteInterface;\n  requirements: PositionRequirementInterface[];\n  position_id: string;\n}\n\nexport enum DocumentAttributesInterface {\n  \"Title\" = \"title\",\n  \"Description\" = \"description\",\n  \"Files\" = \"files\",\n  \"email\" = \"email\",\n  \"names\" = \"names\",\n  \"phone_number\" = \"phone_number\",\n  \"position\" = \"position\",\n  \"relation\" = \"relation\",\n  \"src\" = \"src\",\n  \"year\" = \"year\",\n  \"company\" = \"company\",\n  \"category_subcategory_data\" = \"category_subcategory_data\",\n  \"others\" = \"others\",\n  \"start_year\" = \"start_year\",\n  \"end_year\" = \"end_year\",\n  \"School\" = \"School\",\n}\n\nexport enum DocValidationStatusInterface {\n  APPROVED = \"approved\",\n  REJECTED = \"rejected\",\n}\n\nexport interface DocumentCategoryInterface {\n  user_detail_category_id: string;\n  title: string;\n  description: string;\n  fields: DocumentAttributesInterface[];\n}\n\nexport interface DocumentSubCategoryInterface {\n  category_id: string;\n  title: string;\n  description: string;\n  user_detail_subcategory_id: string;\n}\n\nexport interface DocumentFieldsInterface {\n  _id: string;\n  category_id: string;\n  subcategory_id: string | null;\n  title: string;\n  description: string;\n  others: [];\n}\n\n// export interface DistrictInterface {\n//   centers: string[];\n//   district_name: string;\n//   district_id: string;\n// }\n\nexport interface ApplicationAssessmentInterface {\n  application_id: string;\n  user_id: string;\n  application_session: string;\n  application_status: string;\n  n_id: string;\n  phone_number: string;\n  email: string;\n  fname: string;\n  lname: string;\n  sex: \"M\" | \"F\";\n  district: string;\n  position: PositionApplicationInterface;\n  details: CandidateDetailsInterface[];\n  createdAt: string;\n  updatedAt: string;\n}\n\nexport interface AdminApplicationsToPrintInterface {\n  application_id: number;\n  names: string;\n  gender?: string;\n  national_id?: string;\n  phone?: string;\n  email?: string;\n  position: string;\n  education_category?: string;\n  application_session?: string;\n  district?: string;\n  date?: string;\n  decision?: ApplicationStates;\n}\n\nexport interface PositionApplicationInterface {\n  courses: string[];\n  position_title: string;\n  description: string;\n  school_level_id: string;\n  education_institute_id: string;\n  requirements: PositionRequirementInterface[];\n  position_id: string;\n}\n\nexport interface PositionRequirementInterface {\n  user_detail_category_id: string;\n  title: string;\n  user_required_docs: {\n    user_detail_subcategory_id: string;\n    title: string;\n  }[];\n}\n\nexport interface ApplicationRequirementInterface {\n  user_detail_category_id: string;\n  title: string;\n  user_required_docs: {\n    user_detail_subcategory_id: string;\n    title: string;\n  }[];\n}\n\n// [\n//   {\n//     user_detail_category_id: \"60fc4868f485d8dd91ed321e\",\n//     user_detail_subcategory_id: \"60fc48e8f485d8dd91ed3220\",\n//     position_requirement: [\n//       {\n//         category_subcategory_data_id: \"61277ec70ea9aba1b3661643\",\n//         required: true,\n//       },\n//     ],\n//     required: true,\n//   },\n// ];\n\nexport interface PeriodInterface {\n  is_active: string;\n  application_session_name: string;\n  period: string;\n  application_start_date: string;\n  application_end_date: string;\n  createdAt: string;\n  updatedAt: string;\n  application_session_id: string;\n}\n\nexport interface LocationRoomTableInterface {\n  province_id: string;\n  province_name: string;\n  district_id: string;\n  district_name: string;\n  center_id: string;\n  center_name: string;\n  room_id: string;\n  room_name: string;\n  capacity: number;\n  occupied: number;\n}\n\nexport interface PositionRequirementsFieldInterface {\n  category_id: string;\n  category_name: string;\n  sub_category_id: string;\n  sub_category_name: string;\n  field_id: string;\n  field_name: string;\n  required: boolean;\n}\n\nexport interface ApplicationPeriodInterface {\n  _id: string;\n  application_status: ApplicationStates;\n  user_id: string;\n  position: string;\n  application_session: string;\n  exams: ApplicationExamsInterface[];\n}\n\nexport const getDocCategoryById = (\n  subDocs: DocumentCategoryInterface[],\n  docId: string\n): DocumentCategoryInterface => {\n  return subDocs.filter((doc) => doc.user_detail_category_id === docId)[0];\n};\n\nexport const getSubDocCategoryById = (\n  subDocs: DocumentSubCategoryInterface[],\n  docId: string\n): DocumentSubCategoryInterface => {\n  return subDocs.filter((doc) => doc.user_detail_subcategory_id === docId)[0];\n};\n\nexport const SESSION_PLAN_TYPES: {\n  type_id: number;\n  type_title: string;\n  type_key: SESSION_PLAN_KEYS;\n}[] = [\n  {\n    type_id: 1,\n    type_title: \"Application\",\n    type_key: SESSION_PLAN_KEYS.APPLICATION,\n  },\n  {\n    type_id: 2,\n    type_title: \"Document Validation\",\n    type_key: SESSION_PLAN_KEYS.DOCUMENT_VALIDATION,\n  },\n  {\n    type_id: 3,\n    type_title: \"Examination\",\n    type_key: SESSION_PLAN_KEYS.EXAMINATION,\n  },\n  {\n    type_id: 4,\n    type_title: \"Marks Publication\",\n    type_key: SESSION_PLAN_KEYS.MARKS_PUBLICATION,\n  },\n  {\n    type_id: 5,\n    type_title: \"Placement and Transfer\",\n    type_key: SESSION_PLAN_KEYS.PLACEMENT_TRANSFER,\n  },\n];\n","import axios from \"axios\";\nimport React, { useEffect, useState } from \"react\";\nimport { FaRegCheckCircle } from \"react-icons/fa\";\nimport { RiArrowGoBackFill } from \"react-icons/ri\";\nimport { connect } from \"react-redux\";\nimport { PushPopupAlert } from \"../../actions\";\nimport { createReClaim, DocumentClaimUser } from \"../../actions/claiming\";\nimport { fetchUserAccess } from \"../../actions/users\";\nimport {\n  CandidateClaimInterface,\n  ClaimDecisionStatus,\n  ClaimStatus,\n} from \"../../interfaces\";\nimport { PopupAlertTheme } from \"../../interfaces/popupAlert\";\nimport { StoreState } from \"../../reducers\";\nimport { DocumentReducerInterface } from \"../../reducers/document\";\nimport { capitalizeFirstLetter, isEmptyOrSpaces } from \"../../shared/dataTest\";\nimport { UserInterface } from \"../../shared/interfaces\";\nimport { API } from \"../../utils/api\";\nimport { setAxiosToken } from \"../../utils/AxiosToken\";\nimport { errorToText, showDate, timestampToDate } from \"../../utils/functions\";\nimport { getUserDocuments } from \"./Admin\";\nimport { ClaimGetDocTitle } from \"./Candidate/ClaimForm\";\n\nconst isReclaimAllowed = (thisClaim: CandidateClaimInterface): boolean => {\n  if (thisClaim.claim_level === 1) {\n    const _thisClaim = thisClaim.claims.find((item) => item.level === 1);\n    if (_thisClaim) {\n      if (_thisClaim.decision_taken_status === ClaimDecisionStatus.REJECTED) {\n        return true;\n      }\n    }\n  }\n  return false;\n};\n\nexport const isClaimEvaluated = (\n  thisClaim: CandidateClaimInterface,\n  level: number\n): boolean => {\n  const _thisClaim = thisClaim.claims.find(\n    (item) =>\n      item.level === level && item.claim_status === ClaimStatus.EVALUATED\n  );\n  if (_thisClaim) {\n    return true;\n  }\n  return false;\n};\n\ntype ClaimDocViewProps = {\n  thisDoc: DocumentClaimUser;\n  // setViewThisFile: React.Dispatch<React.SetStateAction<string>>;\n  documentCategories: DocumentReducerInterface;\n  thisClaim: CandidateClaimInterface;\n  viewImage: boolean;\n  setViewImage: React.Dispatch<React.SetStateAction<boolean>>;\n  loadingRequest: boolean;\n  setLoadingRequest: React.Dispatch<React.SetStateAction<boolean>>;\n  reClaiming: boolean;\n  setReClaiming: React.Dispatch<React.SetStateAction<boolean>>;\n  reClaimingMsg: string;\n  setReClaimingMsg: React.Dispatch<React.SetStateAction<string>>;\n  formError: {\n    element: string;\n    msg: string;\n  } | null;\n  setFormError: React.Dispatch<\n    React.SetStateAction<{\n      element: string;\n      msg: string;\n    } | null>\n  >;\n\n  // REDUX DATA =====================\n  userList: UserInterface[];\n  fetchUserAccess: Function;\n  createReClaim: Function;\n  PushPopupAlert: Function;\n};\n\nconst ClaimDocView: React.FC<ClaimDocViewProps> = (props) => {\n  const [loadingUsers, setLoadingUsers] = useState(true);\n\n  useEffect(() => {\n    if (!props.userList.length && loadingUsers) {\n      setLoadingUsers(false);\n      props.fetchUserAccess();\n    } else if (loadingUsers) {\n      setLoadingUsers(false);\n    }\n  }, [loadingUsers, props]);\n\n  const handleSubmit = async () => {\n    if (isEmptyOrSpaces(props.reClaimingMsg)) {\n      return props.setFormError({\n        element: \"comment\",\n        msg: \"Claim comment is required!\",\n      });\n    }\n    if (!props.thisClaim) {\n      return props.PushPopupAlert({\n        title: \"Claim sent successful\",\n        theme: PopupAlertTheme.warning,\n      });\n    }\n\n    props.setLoadingRequest(true);\n    try {\n      setAxiosToken();\n      const res = await axios.put<CandidateClaimInterface>(\n        `${API.CLAIMING}/user/reclaim/${props.thisClaim.id}`,\n        {\n          reason: props.reClaimingMsg,\n        }\n      );\n      console.log({ res: res.data });\n      if (res.status === 201 || res.status === 200) {\n        props.createReClaim(res.data);\n        props.PushPopupAlert({\n          title: \"Claim sent successful\",\n          theme: PopupAlertTheme.success,\n        });\n        props.setReClaimingMsg(\"\");\n        props.setReClaiming(false);\n      }\n    } catch (error) {\n      console.error({ error });\n      props.PushPopupAlert({\n        title: errorToText(error),\n        theme: PopupAlertTheme.danger,\n      });\n    }\n    props.setLoadingRequest(false);\n  };\n\n  return (\n    <section className=\"\">\n      <div className=\"w-full bg-white px-4 py-1 divide-y-2 space-y-2\">\n        {/* DOCUMENT DETAILS ==================================================== */}\n        <section className=\"flex flex-col\">\n          <div className=\"flex items-center justify-between\">\n            <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n              <span className={`italic`}>Title:</span>\n              <span className=\"text-gray-800 font-bold text-xl\">\n                {ClaimGetDocTitle(props.documentCategories, props.thisDoc).main}\n              </span>\n            </div>\n            <button\n              type=\"button\"\n              className=\"bg-blue-200 hover:bg-blue-300 text-blue-700 group-hover:text-blue-800 py-1 px-2 mr-1 rounded text-sm\"\n              onClick={() => props.setViewImage(!props.viewImage)}\n            >\n              {props.viewImage ? \"Hide\" : \"View\"}\n            </button>\n          </div>\n          <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n            <span className={`italic`}>Status:</span>\n            <span\n              className={`font-bold ${\n                props.thisClaim.previous\n                  ? props.thisClaim.previous.status === \"rejected\"\n                  : props.thisDoc.validation_status === \"rejected\"\n                  ? \"text-yellow-900\"\n                  : \"text-blue-600\"\n              } rounded px-3 py-1`}\n            >\n              {props.thisClaim.previous\n                ? capitalizeFirstLetter(props.thisClaim.previous.status)\n                : capitalizeFirstLetter(props.thisDoc.validation_status)}\n            </span>\n          </div>\n          <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n            <span className={`italic`}>Evaluated by:</span>\n            <span className=\"font-semibold\">\n              {loadingUsers ? (\n                <div className=\"w-24 h-3 rounded bg-gray-200 animate__animated animate__pulse animate__delay-5s animate__infinite\"></div>\n              ) : props.thisClaim.previous ? (\n                getUserDocuments(\n                  props.userList,\n                  props.thisClaim.previous.evaluated_by\n                ) ? (\n                  getUserDocuments(\n                    props.userList,\n                    props.thisClaim.previous.evaluated_by\n                  )!.user.user_info.fname +\n                  \" \" +\n                  getUserDocuments(\n                    props.userList,\n                    props.thisClaim.previous.evaluated_by\n                  )!.user.user_info.lname\n                ) : (\n                  \"-\"\n                )\n              ) : getUserDocuments(\n                  props.userList,\n                  props.thisDoc.validated_by.user_id\n                ) ? (\n                getUserDocuments(\n                  props.userList,\n                  props.thisDoc.validated_by.user_id\n                )!.user.user_info.fname +\n                \" \" +\n                getUserDocuments(\n                  props.userList,\n                  props.thisDoc.validated_by.user_id\n                )!.user.user_info.lname\n              ) : (\n                \"-\"\n              )}\n            </span>\n          </div>\n          <div className=\"flex items-start gap-2 text-sm text-gray-600\">\n            <span className={`italic`}>Reason:</span>\n            <span className=\"font-normal\">\n              {props.thisClaim.previous\n                ? props.thisClaim.previous.reason\n                : props.thisDoc.validated_by.comment}\n            </span>\n          </div>\n\n          {/* DISPLAY IMAGE ==================================================== */}\n          {props.viewImage && (\n            <div className=\"w-full my-1 animate__animated animate__fadeIn\">\n              <img\n                src={`${API.AUTH_FILES}/${props.thisDoc.files}`}\n                alt=\"doc file\"\n                className={`w-full animate__animated animate__fadeIn`}\n              />\n            </div>\n          )}\n          {/* END DISPLAY IMAGE ==================================================== */}\n        </section>\n        {/* END DOCUMENT DETAILS ==================================================== */}\n\n        {/* ################################################################################ */}\n\n        {/* CLAIM LEVELS DETAILS ==================================================== */}\n        {props.thisClaim.claims.length > 0 &&\n          props.thisClaim.claims.map((claim, index) => (\n            <section className=\"flex flex-col px-2 pt-3\" key={index + claim.id}>\n              {/* CLAIM COMMENT ==>> LEVEL 1 ==================================================== */}\n              <div className=\"flex flex-col items-start gap-2\">\n                <p>{claim.reason}</p>\n                <span className=\"text-gray-500 text-xs\">\n                  {showDate(claim.createdAt) +\n                    \" at \" +\n                    timestampToDate(claim.date_created).timeFR}\n                </span>\n              </div>\n\n              {/* RESPONSE OF LEVELS ======================================= */}\n              {isClaimEvaluated(props.thisClaim, claim.level) && (\n                <section className=\"mt-4\">\n                  <span className=\"text-gray-500 italic font-semibold\">\n                    Response (level {index + 1})\n                  </span>\n                  <div className=\"border-t-2\">\n                    <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n                      <span className={`italic`}>Status:</span>\n                      <span\n                        className={`font-bold ${\n                          claim.decision_taken_status ===\n                          ClaimDecisionStatus.REJECTED\n                            ? \"text-yellow-900\"\n                            : \"text-blue-600\"\n                        } rounded px-3 py-1`}\n                      >\n                        {capitalizeFirstLetter(\n                          claim.decision_taken_status.toLocaleLowerCase()\n                        )}\n                      </span>\n                    </div>\n                    <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n                      <span className={`italic`}>Evaluated by:</span>\n                      <span className=\"font-semibold\">\n                        {loadingUsers ? (\n                          <div className=\"w-24 h-3 rounded bg-gray-200 animate__animated animate__pulse animate__delay-5s animate__infinite\"></div>\n                        ) : getUserDocuments(\n                            props.userList,\n                            claim.evaluated_by\n                          ) ? (\n                          getUserDocuments(props.userList, claim.evaluated_by)!\n                            .user.user_info.fname +\n                          \" \" +\n                          getUserDocuments(props.userList, claim.evaluated_by)!\n                            .user.user_info.lname\n                        ) : (\n                          \"-\"\n                        )}\n                      </span>\n                    </div>\n                    <div className=\"flex items-start gap-2 text-sm text-gray-600\">\n                      <span className={`italic`}>Reason:</span>\n                      <span className=\"font-normal\">\n                        {claim.evaluation_comment}\n                      </span>\n                    </div>\n                  </div>\n                </section>\n              )}\n              {/* CLAIM COMMENT ==>> LEVELS ==================================================== */}\n            </section>\n          ))}\n        {/* END CLAIM LEVELS DETAILS ==================================================== */}\n      </div>\n      <section>\n        {!props.reClaiming && (\n          <div className=\"mx-4 mb-5 mt-3 flex items-center justify-between\">\n            <span\n              className={`${\n                props.thisClaim.last_claim_status === ClaimStatus.PENDING\n                  ? \"text-yellow-700\"\n                  : props.thisClaim.last_claim_status === ClaimStatus.DELETED\n                  ? \"text-red-700\"\n                  : \"text-green-700\"\n              } italic font-semibold`}\n            >\n              {capitalizeFirstLetter(\n                props.thisClaim.last_claim_status.toLocaleLowerCase()\n              )}\n            </span>\n\n            {isReclaimAllowed(props.thisClaim) && (\n              <button\n                className=\"btn btn-blue\"\n                onClick={() => props.setReClaiming(true)}\n                disabled={props.loadingRequest}\n              >\n                Reclaim\n              </button>\n            )}\n          </div>\n        )}\n        {/* right part */}\n        {props.reClaiming && (\n          <div className=\"flex flex-col md:flex-row items-end md:items-start gap-1 w-full\">\n            <div className=\"w-full px-2\">\n              <textarea\n                placeholder={`Reason of your reclaim...`}\n                cols={50}\n                rows={3}\n                className={`border border-${\n                  props.formError && props.formError.element === \"comment\"\n                    ? \"red\"\n                    : \"gray\"\n                }-400 rounded px-3 py-1 w-full focus:outline-none`}\n                style={{ resize: \"none\" }}\n                value={props.reClaimingMsg}\n                onChange={(e) => {\n                  props.setReClaimingMsg(e.target.value);\n                  props.setFormError(null);\n                }}\n                disabled={props.loadingRequest}\n              ></textarea>\n              {props.formError && props.formError.element === \"comment\" && (\n                <p className=\"text-red-800\">{props.formError.msg}</p>\n              )}\n            </div>\n            <div className=\"flex flex-row md:flex-col gap-1 max-w-full px-2\">\n              <button\n                className=\"bg-gray-700 hover:bg-gray-800 px-4 py-2 font-semibold rounded text-white inline-flex items-center space-x-2 focus:outline-none\"\n                onClick={() => {\n                  props.setReClaimingMsg(\"\");\n                  props.setReClaiming(false);\n                  props.setFormError(null);\n                }}\n                disabled={props.loadingRequest}\n              >\n                <RiArrowGoBackFill className=\"w-5 h-5\" />\n                <span>Back</span>\n              </button>\n              <button\n                className=\"bg-blue-700 hover:bg-blue-800 px-4 py-2 font-semibold rounded text-white inline-flex items-center space-x-2 focus:outline-none\"\n                disabled={props.loadingRequest}\n                onClick={() => handleSubmit()}\n              >\n                {props.loadingRequest ? (\n                  <div className=\"\">Loading...</div>\n                ) : (\n                  <div className=\"inline-flex items-center space-x-2 gap-1\">\n                    <FaRegCheckCircle className=\"w-5 h-5\" />\n                    <span>Confirm</span>\n                  </div>\n                )}\n              </button>\n            </div>\n          </div>\n        )}\n        {/* end right part */}\n      </section>\n    </section>\n  );\n};\n\nconst mapStateToProps = ({\n  users,\n}: StoreState): {\n  userList: UserInterface[];\n} => {\n  return { userList: users };\n};\n\nexport default connect(mapStateToProps, {\n  fetchUserAccess,\n  createReClaim,\n  PushPopupAlert,\n})(ClaimDocView);\n","import React from \"react\";\nimport Table from \"../../components/Table/Table\";\nimport { PositionRequirementTableInterface } from \"./ViewPosition\";\n\ninterface RequirementProps {\n  requirements: PositionRequirementTableInterface[];\n}\n\nconst ViewRequirements: React.FC<RequirementProps> = (props) => {\n  const tableData = (): JSX.Element[] => {\n    let data: PositionRequirementTableInterface[] = props.requirements;\n    // let data: PositionSubcategoryData[] =\n    //   props.position_requirement.position_requirement;\n    if (data.length === 0) {\n      return [\n        <tr key={153} className=\"border-b border-gray-200 hover:bg-gray-100\">\n          <td className=\"p-3 text-center\" colSpan={3}>\n            No Data Found\n          </td>\n        </tr>,\n      ];\n    }\n\n    return data.map((item, index) => (\n      <tr\n        key={index + item.field_id}\n        className=\"border-b border-gray-200 hover:bg-gray-100\"\n      >\n        <td className=\"p-3 text-left whitespace-nowrap\">{index + 1}</td>\n        <td className=\"p-3 text-left\">\n          <span>{item.subcategory_title + \" in \" + item.field_title}</span>\n        </td>\n        <td className=\"p-3 text-left text-lg italic\">\n          {item.required ? (\n            <span className=\"text-yellow-800\">Required</span>\n          ) : (\n            \"Optional\"\n          )}\n        </td>\n      </tr>\n    ));\n  };\n\n  return (\n    <div>\n      <Table\n        columns={[\n          { columnTitle: \"#\", alignText: \"left\", padding: \"p-3\" },\n          { columnTitle: \"Document\", alignText: \"left\", padding: \"p-3\" },\n          { columnTitle: \"Status\", alignText: \"left\", padding: \"p-3\" },\n          // { columnTitle: \"\", alignText: \"left\", padding: \"p-3\" },\n        ]}\n        rows={tableData}\n        pagination={false}\n        search={false}\n        thColor=\"gray\"\n      />\n    </div>\n  );\n};\n\nexport default ViewRequirements;\n","import React, { useEffect, useState } from \"react\";\nimport { MdTurnedIn } from \"react-icons/md\";\nimport { connect } from \"react-redux\";\nimport { PushPopupAlert } from \"../../../actions\";\nimport { fetchUserAccess } from \"../../../actions/users\";\nimport NoResult, {\n  NoResultThemes,\n} from \"../../../components/NoResult/NoResult\";\nimport {\n  claimApplicationsInterface,\n  claimApplicationsPositionInterface,\n} from \"../../../interfaces\";\nimport { ApplicationStates } from \"../../../interfaces/application\";\nimport { StoreState } from \"../../../reducers\";\nimport { DocumentReducerInterface } from \"../../../reducers/document\";\nimport { capitalizeFirstLetter } from \"../../../shared/dataTest\";\nimport { UserInterface } from \"../../../shared/interfaces\";\nimport { DATE } from \"../../../utils/functions\";\nimport { PositionRequirementTableInterface } from \"../../Positions/ViewPosition\";\nimport ViewRequirements from \"../../Positions/ViewRequirements\";\nimport { getUserDocuments } from \"../Admin\";\n\nexport const FC_ApplicationPositionDistinctCategory = (\n  thisPosition: claimApplicationsPositionInterface,\n  documentCategories: DocumentReducerInterface\n): {\n  PositionsTemp: PositionRequirementTableInterface[];\n  DistinctCategoriesTemp: PositionRequirementTableInterface[];\n  DistinctSubCategoriesTemp: PositionRequirementTableInterface[];\n} => {\n  let PositionsTemp: PositionRequirementTableInterface[] = [];\n  let DistinctCategoriesTemp: PositionRequirementTableInterface[] = [],\n    DistinctCategoriesIds: string[] = [];\n  let DistinctSubCategoriesTemp: PositionRequirementTableInterface[] = [],\n    DistinctSubCategoriesIds: string[] = [];\n  // GET REQUIREMENTS OF THE CURRENT POSITION ====================\n  let requirements = thisPosition.requirements;\n  // LOOP THROUGH CURRENT POSITION REQUIREMENTS ==========================\n  for (let req in requirements) {\n    let thisRequirements = requirements[req];\n    // GET DOC CATEGORY OF THE CURRENT POSITION REQUIREMENTS ====================\n    let thisCategory = documentCategories.documentCategory\n      ? documentCategories.documentCategory.find(\n          (item) =>\n            item.user_detail_category_id ===\n            thisRequirements.user_detail_category_id\n        ) && {\n          title: documentCategories.documentCategory.find(\n            (item) =>\n              item.user_detail_category_id ===\n              thisRequirements.user_detail_category_id\n          )!.title,\n          user_detail_category_id: documentCategories.documentCategory.find(\n            (item) =>\n              item.user_detail_category_id ===\n              thisRequirements.user_detail_category_id\n          )!.user_detail_category_id,\n        }\n      : {\n          title: \"\",\n          user_detail_category_id: thisRequirements.user_detail_category_id,\n        };\n    // GET DOC SUB CATEGORY OF THE CURRENT POSITION REQUIREMENTS ====================\n    let thisSubCategory = documentCategories.documentSubCategory\n      ? documentCategories.documentSubCategory.find(\n          (item) =>\n            item.user_detail_subcategory_id ===\n            thisRequirements.user_detail_subcategory_id\n        )\n        ? {\n            title: documentCategories.documentSubCategory.find(\n              (item) =>\n                item.user_detail_subcategory_id ===\n                thisRequirements.user_detail_subcategory_id\n            )!.title,\n            user_detail_subcategory_id:\n              documentCategories.documentSubCategory.find(\n                (item) =>\n                  item.user_detail_subcategory_id ===\n                  thisRequirements.user_detail_subcategory_id\n              )!.user_detail_subcategory_id,\n            category_id: documentCategories.documentSubCategory.find(\n              (item) =>\n                item.user_detail_subcategory_id ===\n                thisRequirements.user_detail_subcategory_id\n            )!.category_id,\n          }\n        : {\n            title: \"\",\n            user_detail_subcategory_id:\n              thisRequirements.user_detail_subcategory_id,\n            category_id: \"\",\n          }\n      : {\n          title: \"\",\n          user_detail_subcategory_id:\n            thisRequirements.user_detail_subcategory_id,\n          category_id: \"\",\n        };\n    // LOOP THROUGH FIELDS OF THE CURRENT POSITION REQUIREMENTS ==========================\n    if (thisCategory) {\n      for (let field in thisRequirements.position_requirement) {\n        // GET FIELDS OF THE CURRENT POSITION REQUIREMENTS ====================\n        let thisField = documentCategories.documentFields\n          ? documentCategories.documentFields.find(\n              (item) =>\n                item._id ===\n                thisRequirements.position_requirement[field]\n                  .category_subcategory_data_id\n            )\n            ? {\n                title: documentCategories.documentFields.find(\n                  (item) =>\n                    item._id ===\n                    thisRequirements.position_requirement[field]\n                      .category_subcategory_data_id\n                )!.title,\n                _id: documentCategories.documentFields.find(\n                  (item) =>\n                    item._id ===\n                    thisRequirements.position_requirement[field]\n                      .category_subcategory_data_id\n                )!._id,\n                required: thisRequirements.position_requirement[field].required,\n              }\n            : {\n                title: \"\",\n                _id: thisRequirements.user_detail_subcategory_id,\n                required: thisRequirements.position_requirement[field].required,\n              }\n          : {\n              title: \"\",\n              _id: thisRequirements.user_detail_subcategory_id,\n              required: thisRequirements.position_requirement[field].required,\n            };\n        // ADD CURRENT CATEGORY, SUB CATEGORY & FIELDS OF THE CURRENT POSITION REQUIREMENTS IN POSITIONS TEMP ====================\n        PositionsTemp.push({\n          category_id: thisCategory.user_detail_category_id,\n          category_title: thisCategory.title,\n          subcategory_id: thisSubCategory.user_detail_subcategory_id,\n          subcategory_title: thisSubCategory.title,\n          field_title: thisField.title,\n          field_id: thisField._id,\n          required: thisField.required,\n        });\n      }\n\n      // ADD CATEOGRY OF THE CURRENT POSITION REQUIREMENTS TO ARRAY ====================\n      if (\n        !DistinctCategoriesIds.includes(thisCategory.user_detail_category_id)\n      ) {\n        DistinctCategoriesIds.push(thisCategory.user_detail_category_id);\n        DistinctCategoriesTemp.push({\n          category_id: thisCategory.user_detail_category_id,\n          category_title: thisCategory.title,\n          subcategory_id: \"\",\n          subcategory_title: \"\",\n          field_title: \"\",\n          field_id: \"\",\n          required: false,\n        });\n      }\n\n      // ADD SUB CATEOGRY OF THE CURRENT POSITION REQUIREMENTS TO ARRAY ====================\n      if (\n        !DistinctSubCategoriesIds.includes(\n          thisSubCategory.user_detail_subcategory_id\n        )\n      ) {\n        DistinctSubCategoriesIds.push(\n          thisSubCategory.user_detail_subcategory_id\n        );\n        DistinctSubCategoriesTemp.push({\n          category_id: thisSubCategory.category_id,\n          category_title: \"\",\n          subcategory_id: thisSubCategory.user_detail_subcategory_id,\n          subcategory_title: thisSubCategory.title,\n          field_title: \"\",\n          field_id: \"\",\n          required: false,\n        });\n      }\n    }\n  }\n  // DistinctCategoriesIds.;\n\n  return { PositionsTemp, DistinctCategoriesTemp, DistinctSubCategoriesTemp };\n};\n\nexport const showEvaluator = (\n  userList: UserInterface[],\n  user_id: string\n): string => {\n  let result: string = \"\";\n  if (user_id === \"system\") {\n    result = \"System\";\n  } else {\n    let user = getUserDocuments(userList, user_id);\n    if (user) {\n      result = user.user.user_info.fname + \" \" + user.user.user_info.lname;\n    }\n  }\n  return result;\n};\n\ntype ApplicationFormViewProps = {\n  thisApplication: claimApplicationsInterface;\n  setViewThisFile: (value: string) => void;\n  setChooseClaimFile: (value: boolean) => void;\n  setClaimFileId: (value: string) => void;\n  documentCategories: DocumentReducerInterface;\n  userList: UserInterface[];\n  fetchUserAccess: Function;\n  PushPopupAlert: Function;\n};\n\nconst ApplicationFormView: React.FC<ApplicationFormViewProps> = (props) => {\n  const [loadingUsers, setLoadingUsers] = useState(true);\n\n  useEffect(() => {\n    if (!props.userList.length && loadingUsers) {\n      setLoadingUsers(false);\n      props.fetchUserAccess();\n    } else if (loadingUsers) {\n      setLoadingUsers(false);\n    }\n  }, [loadingUsers, props]);\n\n  return (\n    <section className=\"\">\n      <div className=\"w-full bg-gray-100 px-4 py-1 animate__animated animate__fadeIn\">\n        <div className=\"flex flex-col mb-2\">\n          {/* APPLICATION TITLE ========== */}\n          <section className=\"flex items-center justify-between\">\n            <span className=\"text-blue-600 font-bold text-2xl\">\n              {props.thisApplication.position.position_title}\n            </span>\n            <button\n              type=\"button\"\n              className=\"btn btn-blue\"\n              onClick={() => {\n                props.setChooseClaimFile(false);\n                props.setClaimFileId(props.thisApplication.application_id);\n                props.setViewThisFile(\"\");\n              }}\n            >\n              Choose\n            </button>\n          </section>\n          <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n            <span className={`italic`}>Date:</span>\n            <span className=\"font-bold text-gray-900 py-1\">\n              {DATE(props.thisApplication.createdAt)}\n            </span>\n          </div>\n          {false && (\n            <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n              <span className={`italic`}>Session:</span>\n              <span className=\"font-bold text-gray-900 py-1\">\n                {\n                  props.thisApplication.application_session\n                    .application_session_name\n                }\n              </span>\n            </div>\n          )}\n          <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n            <span className={`italic`}>Status:</span>\n            <span\n              className={`font-bold ${\n                props.thisApplication.application_status ===\n                ApplicationStates.Rejected\n                  ? \"text-yellow-900\"\n                  : \"text-blue-600\"\n              } py-1`}\n            >\n              {capitalizeFirstLetter(props.thisApplication.application_status)}\n            </span>\n          </div>\n          <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n            <span className={`italic`}>Evaluated by:</span>\n            <span className=\"font-bold text-gray-900 py-1\">\n              {loadingUsers ? (\n                <div className=\"w-24 h-3 rounded bg-gray-200 animate__animated animate__pulse animate__delay-5s animate__infinite\"></div>\n              ) : (\n                showEvaluator(\n                  props.userList,\n                  props.thisApplication.override_by.user_id\n                )\n              )}\n            </span>\n          </div>\n          <div className=\"flex items-start gap-2 text-sm text-gray-600\">\n            <span className={`italic`}>Reason:</span>\n            <span className=\"font-semibold text-gray-900\">\n              {props.thisApplication.override_by.comment}\n            </span>\n          </div>\n        </div>\n        <div className=\"bg-white w-full rounded p-2 mb-2\">\n          <div className=\"text-gray-800 text-2xl font-bold my-2\">\n            Position Details\n          </div>\n          <div className=\"flex items-center gap-2 text-base text-gray-600\">\n            <span className={`italic`}>Desc:</span>\n            <span className=\"font-semibold\">\n              {props.thisApplication.position.description}\n            </span>\n          </div>\n          <div className=\"flex items-center gap-2 text-base text-gray-600\">\n            <span className={`italic`}>School level:</span>\n            <span className=\"font-semibold\">\n              {props.thisApplication.position.school_level_id.school_level_name}\n            </span>\n          </div>\n          <div className=\"flex items-center gap-2 text-base text-gray-600\">\n            <span className={`italic`}>Institute:</span>\n            <span className=\"font-semibold\">\n              {\n                props.thisApplication.position.education_institute_id\n                  .education_category_title\n              }\n            </span>\n          </div>\n          <div className=\"flex items-center gap-2 text-base text-gray-600\">\n            <span className={`italic`}>Courses:</span>\n            <span className=\"flex items-center gap-2\">\n              {props.thisApplication.position.courses.map((item, index) => (\n                <div\n                  key={index + item.course_id}\n                  className=\"flex items-center gap-1\"\n                >\n                  <span className=\"font-semibold\">{item.course_name}</span>\n                  <span className=\"text-gray-600\">({item.course_code})</span>\n                  {index !==\n                    props.thisApplication.position.courses.length - 1 && \",\"}\n                </div>\n              ))}\n            </span>\n          </div>\n\n          <div className=\"text-gray-800 text-2xl font-bold my-2\">\n            Position Requirements\n          </div>\n          {props.thisApplication.position.requirements.length > 0 ? (\n            FC_ApplicationPositionDistinctCategory(\n              props.thisApplication.position,\n              props.documentCategories\n            ).DistinctCategoriesTemp.map((item, index) => (\n              <div\n                className=\"bg-gray-100props.thisApplication.position rounded p-2\"\n                key={index + item.category_id}\n              >\n                <div className=\"flex items-center gap-2 text-2xl text-gray-500 font-bold\">\n                  <MdTurnedIn />\n                  <span>{item.category_title}</span>\n                </div>\n                <div className=\"border bg-white mt-1\">\n                  <ViewRequirements\n                    requirements={FC_ApplicationPositionDistinctCategory(\n                      props.thisApplication.position,\n                      props.documentCategories\n                    ).PositionsTemp.filter(\n                      (req) => req.category_id === item.category_id\n                    )}\n                  />\n                </div>\n              </div>\n            ))\n          ) : (\n            <NoResult\n              theme={NoResultThemes.Dark}\n              value={\"No requirements\"}\n            ></NoResult>\n          )}\n        </div>\n      </div>\n    </section>\n  );\n};\n\nconst mapStateToProps = ({\n  users,\n}: StoreState): {\n  userList: UserInterface[];\n} => {\n  return {\n    userList: users,\n  };\n};\n\nexport default connect(mapStateToProps, { PushPopupAlert, fetchUserAccess })(\n  ApplicationFormView\n);\n","import React, { useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { PushPopupAlert } from \"../../../actions\";\nimport { DocumentClaimUser } from \"../../../actions/claiming\";\nimport { fetchUserAccess } from \"../../../actions/users\";\nimport { StoreState } from \"../../../reducers\";\nimport { DocumentReducerInterface } from \"../../../reducers/document\";\nimport { capitalizeFirstLetter } from \"../../../shared/dataTest\";\nimport { UserInterface } from \"../../../shared/interfaces\";\nimport { API } from \"../../../utils/api\";\nimport { getUserDocuments } from \"../Admin\";\nimport { ClaimGetDocTitle } from \"./ClaimForm\";\n\ntype DocFormViewProps = {\n  thisDoc: DocumentClaimUser;\n  setChooseClaimFile: (value: boolean) => void;\n  setClaimFileId: (value: string) => void;\n  setViewThisFile: (value: string) => void;\n  documentCategories: DocumentReducerInterface;\n  userList: UserInterface[];\n  fetchUserAccess: Function;\n  PushPopupAlert: Function;\n};\n\nconst DocFormView: React.FC<DocFormViewProps> = (props) => {\n  const [loadingUsers, setLoadingUsers] = useState(true);\n\n  useEffect(() => {\n    if (!props.userList.length && loadingUsers) {\n      setLoadingUsers(false);\n      props.fetchUserAccess();\n    } else if (loadingUsers) {\n      setLoadingUsers(false);\n    }\n  }, [loadingUsers, props]);\n\n  return (\n    <section className=\"\">\n      <div className=\"w-full bg-gray-100 px-4 py-1 animate__animated animate__fadeIn\">\n        <div className=\"flex flex-col mb-2\">\n          <div className=\"flex items-center justify-between\">\n            <span className=\"text-blue-600 font-bold text-xl\">\n              {ClaimGetDocTitle(props.documentCategories, props.thisDoc).main}\n            </span>\n            <button\n              type=\"button\"\n              className=\"btn btn-blue\"\n              onClick={() => {\n                props.setChooseClaimFile(false);\n                props.setClaimFileId(props.thisDoc.doc_id);\n                props.setViewThisFile(\"\");\n              }}\n            >\n              Choose\n            </button>\n          </div>\n          <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n            <span className={`italic`}>Status:</span>\n            <span className=\"font-bold text-yellow-900 rounded px-3 py-1\">\n              {capitalizeFirstLetter(props.thisDoc.validation_status)}\n            </span>\n          </div>\n          <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n            <span className={`italic`}>Evaluated by:</span>\n            <span className=\"font-semibold\">\n              {loadingUsers ? (\n                <div className=\"w-24 h-3 rounded bg-gray-200 animate__animated animate__pulse animate__delay-5s animate__infinite\"></div>\n              ) : getUserDocuments(\n                  props.userList,\n                  props.thisDoc.validated_by.user_id\n                ) ? (\n                getUserDocuments(\n                  props.userList,\n                  props.thisDoc.validated_by.user_id\n                )!.user.user_info.fname +\n                \" \" +\n                getUserDocuments(\n                  props.userList,\n                  props.thisDoc.validated_by.user_id\n                )!.user.user_info.lname\n              ) : (\n                \"-\"\n              )}\n            </span>\n          </div>\n          <div className=\"flex items-start gap-2 text-sm text-gray-600\">\n            <span className={`italic`}>Reason:</span>\n            <span className=\"font-normal\">\n              {props.thisDoc.validated_by.comment}\n            </span>\n          </div>\n          <div className=\"w-full my-1\">\n            <img\n              src={`${API.AUTH_FILES}/${props.thisDoc.files}`}\n              alt=\"doc file\"\n              className={`w-full`}\n            />\n          </div>\n        </div>\n      </div>\n    </section>\n  );\n};\n\nconst mapStateToProps = ({\n  users,\n}: StoreState): {\n  userList: UserInterface[];\n} => {\n  return {\n    userList: users,\n  };\n};\n\nexport default connect(mapStateToProps, { PushPopupAlert, fetchUserAccess })(\n  DocFormView\n);\n","import React, { useState } from \"react\";\nimport { MdSearch } from \"react-icons/md\";\nimport {\n  CandidateClaimInterface,\n  claimApplicationsInterface,\n  SessionPlanInterface,\n} from \"../../../interfaces\";\nimport { ApplicationStates } from \"../../../interfaces/application\";\nimport { isClaimAllowed } from \"./ClaimForm\";\n\nconst getRejectedApplicants = (\n  applicationData: claimApplicationsInterface[]\n): claimApplicationsInterface[] => {\n  return applicationData.filter(\n    (item) => item.application_status === ApplicationStates.Rejected\n  );\n};\n\nexport const searchApplication = (\n  objList: claimApplicationsInterface[],\n  text: any\n): claimApplicationsInterface[] => {\n  if (undefined === text || text === \"\") return objList;\n  return objList.filter((product) => {\n    let flag;\n    // let dataKeys = product;\n\n    for (let prop in product) {\n      flag = false;\n      if (prop === \"position\") {\n        flag =\n          product.position.position_title\n            .toString()\n            .toLowerCase()\n            .indexOf(text.toLowerCase()) > -1;\n      }\n      if (flag) break;\n    }\n    return flag;\n  });\n  // return objList.filter((product) =>\n  //   product.position.position_title.includes(text)\n  // );\n};\n\ntype FormApplicationListProps = {\n  setChooseClaimFile: (value: boolean) => void;\n  setClaimFileId: (value: string) => void;\n  setViewThisFile: (value: string) => void;\n  viewThisFile: string;\n  candidateApplications: claimApplicationsInterface[];\n  myClaims: CandidateClaimInterface[];\n  activeSession: SessionPlanInterface;\n};\n\nconst FormApplicationList: React.FC<FormApplicationListProps> = (props) => {\n  const [searchInput, setSearchInput] = useState<string>(\"\");\n  return (\n    <section>\n      {/* SEARCH PART */}\n      <div className=\"flex items-center w-full my-1\">\n        <MdSearch className=\"w-6 h-6 absolute ml-2\" />\n        <input\n          type=\"text\"\n          placeholder=\"Search\"\n          className=\"focus:border-2 h-7 ml-1 pl-9 mr-2 bg-gray-100 focus:border-gray-700 w-full rounded\"\n          onChange={(e) => setSearchInput(e.target.value)}\n          value={searchInput}\n          disabled={\n            getRejectedApplicants(props.candidateApplications).filter((item) =>\n              isClaimAllowed(\n                props.myClaims,\n                props.activeSession.session_plan_id,\n                item.application_id\n              )\n            ).length > 0\n              ? false\n              : true\n          }\n        />\n        <button\n          className=\"bg-red-200 text-red-700 py-1 px-2 mr-1 rounded text-sm focus:outline-none\"\n          type=\"button\"\n          onClick={() => {\n            props.setChooseClaimFile(false);\n            props.setViewThisFile(\"\");\n          }}\n        >\n          Cancel\n        </button>\n      </div>\n      {/* END SEARCH PART ///////////////// */}{\" \"}\n      {/* searchData(props.candidateApplications, searchInput) */}\n      <div className=\"w-full h-52 mt-2 overflow-y-auto divide-y divide-gray-300\">\n        {getRejectedApplicants(props.candidateApplications).filter((item) =>\n          isClaimAllowed(\n            props.myClaims,\n            props.activeSession.session_plan_id,\n            item.application_id\n          )\n        ).length > 0 ? (\n          searchApplication(\n            getRejectedApplicants(props.candidateApplications).filter((item) =>\n              isClaimAllowed(\n                props.myClaims,\n                props.activeSession.session_plan_id,\n                item.application_id\n              )\n            ),\n            searchInput\n          ).map((item, index) => (\n            <div\n              className=\"group flex items-center justify-between my-1 hover:bg-gray-100\"\n              key={index + item.application_id}\n            >\n              <div\n                className=\"p-1 w-full mr-2 cursor-pointer\"\n                onClick={() => {\n                  props.setChooseClaimFile(false);\n                  props.setClaimFileId(item.application_id);\n                }}\n              >\n                <p className=\"text-base font-medium text-black\">\n                  {item.position.position_title}\n                </p>\n              </div>\n              <button\n                type=\"button\"\n                className=\"bg-blue-200 hover:bg-blue-300 text-blue-700 group-hover:text-blue-800 py-1 px-2 mr-1 rounded text-sm\"\n                onClick={() => {\n                  props.setViewThisFile(item.application_id);\n                }}\n              >\n                View\n              </button>\n            </div>\n          ))\n        ) : (\n          <div className=\"text-center p-3\">\n            <p className=\"text-base font-medium text-black\">\n              No Rejected document available\n            </p>\n          </div>\n        )}\n      </div>\n    </section>\n  );\n};\n\nexport default FormApplicationList;\n","import React, { useState } from \"react\";\nimport { MdSearch } from \"react-icons/md\";\nimport { DocumentReducerInterface } from \"../../../reducers/document\";\nimport { ClaimGetDocTitle, isClaimAllowed } from \"./ClaimForm\";\nimport { DocumentClaimUser } from \"../../../actions/claiming\";\nimport { CategorySubcategoryData } from \"../../../interfaces/candidatesInterfaces\";\nimport {\n  CandidateClaimInterface,\n  SessionPlanInterface,\n} from \"../../../interfaces\";\n\nexport interface DocumentTitleInterface {\n  category_id: string;\n  company: string;\n  description: string;\n  email: string;\n  end_year: string;\n  files: string;\n  names: string;\n  phone_number: string;\n  school: {\n    school_name: string;\n    _id: string;\n    status: boolean;\n    education_category_id?: {\n      education_category_title: string;\n      _id: string;\n    };\n    district_id?: {\n      district_name: string;\n      _id: string;\n    };\n  } | null;\n  school_id: string;\n  start_year: string;\n  sub_category_id: string;\n  title: string;\n  year: string;\n  validation_status: string;\n  validated_by: {\n    user_id: string;\n    comment: string;\n    validation_status: string;\n    date: string;\n  };\n  doc_id: string;\n  doc_title: string;\n  category_subcategory_data: CategorySubcategoryData | null;\n}\n\nexport const DocumentTitleData = (\n  documentData: DocumentClaimUser[],\n  documentCategories: DocumentReducerInterface\n): DocumentTitleInterface[] | [] => {\n  let documentTemp: DocumentTitleInterface[] = [];\n  for (let i in documentData) {\n    documentTemp.push({\n      category_id: documentData[i].category_id,\n      company: documentData[i].company,\n      description: documentData[i].description,\n      email: documentData[i].email,\n      end_year: documentData[i].end_year,\n      files: documentData[i].files,\n      names: documentData[i].names,\n      phone_number: documentData[i].phone_number,\n      school: documentData[i].school,\n      school_id: documentData[i].school_id,\n      start_year: documentData[i].start_year,\n      sub_category_id: documentData[i].sub_category_id,\n      title: documentData[i].title,\n      year: documentData[i].year,\n      validation_status: documentData[i].validation_status,\n      validated_by: documentData[i].validated_by,\n      doc_id: documentData[i].doc_id,\n      doc_title: ClaimGetDocTitle(documentCategories, documentData[i]).main,\n      category_subcategory_data: documentData[i].category_subcategory_data,\n    });\n  }\n  return documentTemp;\n};\n\nconst getRejectedDocuments = (\n  documentData: DocumentClaimUser[]\n): DocumentClaimUser[] => {\n  console.log({\n    rejected: documentData.filter(\n      (item) => item.validation_status === \"rejected\"\n    ),\n  });\n  return documentData.filter((item) => item.validation_status === \"rejected\");\n};\n\nexport const searchDocuments = (\n  objList: DocumentTitleInterface[],\n  text: any\n): DocumentTitleInterface[] => {\n  if (undefined === text || text === \"\") return objList;\n  return objList.filter(\n    (product) =>\n      product.doc_title.toString().toLowerCase().indexOf(text.toLowerCase()) >\n      -1\n  );\n};\n\ntype FormDocumentListProps = {\n  setChooseClaimFile: (value: boolean) => void;\n  setClaimFileId: (value: string) => void;\n  setViewThisFile: (value: string) => void;\n  viewThisFile: string;\n  candidateDocuments: DocumentClaimUser[];\n  documentCategories: DocumentReducerInterface;\n  myClaims: CandidateClaimInterface[];\n  activeSession: SessionPlanInterface;\n};\n\nconst FormDocumentList: React.FC<FormDocumentListProps> = (props) => {\n  const [searchInput, setSearchInput] = useState<string>(\"\");\n  return (\n    <section>\n      {/* SEARCH PART */}\n      <div className=\"flex items-center w-full my-1\">\n        <MdSearch className=\"w-6 h-6 absolute ml-2\" />\n        <input\n          type=\"text\"\n          placeholder=\"Search\"\n          className=\"focus:border-2 h-7 ml-1 pl-9 mr-2 bg-gray-100 focus:border-gray-700 w-full rounded\"\n          onChange={(e) => setSearchInput(e.target.value)}\n          value={searchInput}\n          disabled={\n            DocumentTitleData(\n              getRejectedDocuments(props.candidateDocuments),\n              props.documentCategories\n            ).filter((item) =>\n              isClaimAllowed(\n                props.myClaims,\n                props.activeSession.session_plan_id,\n                item.doc_id\n              )\n            ).length > 0\n              ? false\n              : true\n          }\n        />\n        <button\n          className=\"bg-red-200 text-red-700 py-1 px-2 mr-1 rounded text-sm focus:outline-none\"\n          type=\"button\"\n          onClick={() => {\n            props.setChooseClaimFile(false);\n            props.setViewThisFile(\"\");\n          }}\n        >\n          Cancel\n        </button>\n      </div>\n      {/* END SEARCH PART ///////////////// */}\n      <div className=\"w-full h-52 mt-2 overflow-y-auto divide-y divide-gray-300\">\n        {props.candidateDocuments.filter((item) =>\n          isClaimAllowed(\n            props.myClaims,\n            props.activeSession.session_plan_id,\n            item.doc_id\n          )\n        ).length > 0 ? (\n          searchDocuments(\n            DocumentTitleData(\n              getRejectedDocuments(props.candidateDocuments),\n              props.documentCategories\n            ).filter((item) =>\n              isClaimAllowed(\n                props.myClaims,\n                props.activeSession.session_plan_id,\n                item.doc_id\n              )\n            ),\n            searchInput\n          ).map((doc, index) => (\n            <section key={index + doc.doc_id}>\n              <div className=\"group flex items-center justify-between my-1 hover:bg-gray-100\">\n                <div\n                  className=\"p-1 w-full mr-2 cursor-pointer\"\n                  onClick={() => {\n                    props.setChooseClaimFile(false);\n                    props.setClaimFileId(doc.doc_id);\n                  }}\n                >\n                  <p className=\"text-base font-medium text-black\">\n                    {ClaimGetDocTitle(props.documentCategories, doc).main}\n                  </p>\n                </div>\n                <button\n                  type=\"button\"\n                  className=\"bg-blue-200 hover:bg-blue-300 text-blue-700 group-hover:text-blue-800 py-1 px-2 mr-1 rounded text-sm\"\n                  onClick={() => {\n                    props.viewThisFile === doc.doc_id\n                      ? props.setViewThisFile(\"\")\n                      : props.setViewThisFile(doc.doc_id);\n                  }}\n                >\n                  {props.viewThisFile === doc.doc_id ? \"Close\" : \"View\"}\n                </button>\n              </div>\n            </section>\n          ))\n        ) : (\n          <div className=\"text-center p-3\">\n            <p className=\"text-base font-medium text-black\">\n              No Rejected document available\n            </p>\n          </div>\n        )}\n      </div>\n    </section>\n  );\n};\n\nexport default FormDocumentList;\n","import axios from \"axios\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Auth, PushPopupAlert } from \"../../../actions\";\nimport {\n  createClaim,\n  DocumentClaimUser,\n  GetClaimingTypes,\n  getMyRejectedApplications,\n  getMyRejectedDocuments,\n} from \"../../../actions/claiming\";\nimport {\n  getDocumentCategory,\n  getDocumentSubCategory,\n  getDocumentFields,\n} from \"../../../actions/document\";\nimport { getActiveSessionPlan } from \"../../../actions/session\";\nimport { getApplicationSessions } from \"../../../actions/settings\";\nimport { PopupAlertData } from \"../../../components/Alert/Popup\";\nimport Modal, { ModalSize, Themes } from \"../../../components/Modal/Modal\";\nimport {\n  CandidateClaimInterface,\n  claimApplicationsInterface,\n  PlansInterface,\n  PlansTypeKeys,\n  SessionPlanInterface,\n} from \"../../../interfaces\";\nimport { ApplicationStates } from \"../../../interfaces/application\";\nimport { PopupAlertTheme } from \"../../../interfaces/popupAlert\";\nimport { StoreState } from \"../../../reducers\";\nimport { ClaimingReducerType } from \"../../../reducers/claiming\";\nimport { DocumentReducerInterface } from \"../../../reducers/document\";\nimport { SessionPlanReducerInterface } from \"../../../reducers/session\";\nimport {\n  capitalizeFirstLetter,\n  isEmptyOrSpaces,\n} from \"../../../shared/dataTest\";\nimport { API } from \"../../../utils/api\";\nimport { setAxiosToken } from \"../../../utils/AxiosToken\";\nimport { errorToText } from \"../../../utils/errors\";\nimport { isPlanActive } from \"../../SessionSettings/SessionDetails\";\nimport ApplicationFormView from \"./ApplicationFormView\";\nimport DocFormView from \"./DocFormView\";\nimport FormApplicationList from \"./FormApplicationList\";\nimport FormDocumentList from \"./FormDocumentList\";\n\nexport const ClaimGetDocTitle = (\n  documentCategories: DocumentReducerInterface,\n  doc: DocumentClaimUser\n): { category: string; sub_category: string; field: string; main: string } => {\n  let DocCategory: string = \"\",\n    DocSubCategory: string = \"\",\n    DocField: string = \"\",\n    DocTitle: string = \"\";\n  if (\n    doc.sub_category_id.length > 0 &&\n    documentCategories.documentSubCategory\n  ) {\n    DocTitle = documentCategories.documentSubCategory.filter(\n      (c) => c.user_detail_subcategory_id === doc.sub_category_id\n    )[0].title;\n    DocSubCategory = DocTitle;\n  } else if (\n    doc.category_id.length > 0 &&\n    documentCategories.documentCategory\n  ) {\n    DocTitle = documentCategories.documentCategory.filter(\n      (c) => c.user_detail_category_id === doc.category_id\n    )[0].title;\n    DocCategory = DocTitle;\n  }\n  if (\n    doc.category_subcategory_data &&\n    doc.category_subcategory_data.category_subcategory_Data_id.length > 0 &&\n    documentCategories.documentFields\n  ) {\n    console.log({ doc });\n    DocField = documentCategories.documentFields.filter(\n      (c) =>\n        c._id === doc.category_subcategory_data?.category_subcategory_Data_id\n    )[0].title;\n    DocTitle += \" in \" + DocField;\n  }\n\n  return {\n    category: DocCategory,\n    sub_category: DocSubCategory,\n    field: DocField,\n    main: DocTitle,\n  };\n};\n\nexport const isClaimAllowed = (\n  allClaim: CandidateClaimInterface[],\n  period_id: string,\n  claimOnId: string\n): boolean => {\n  if (\n    allClaim.find(\n      (item) =>\n        item.period_id === period_id && item.claiming_on_id === claimOnId\n    )\n  ) {\n    return false;\n  }\n  return true;\n};\n\ntype ClaimFormProps = {\n  // FOR SHORTCUT BUTTONS CALL\n  claim_type?: PlansTypeKeys;\n  file_id?: string;\n  // REQUIRED PROPS\n  formState: boolean;\n  setFormState: (value: boolean) => void;\n  auth: Auth;\n  sessionPlan: SessionPlanReducerInterface;\n  claiming: ClaimingReducerType;\n  documentReducer: DocumentReducerInterface;\n  getActiveSessionPlan: Function;\n  createClaim: Function;\n  GetClaimingTypes: Function;\n  getDocumentCategory: Function;\n  getDocumentSubCategory: Function;\n  getDocumentFields: Function;\n  getMyRejectedApplications: Function;\n  getMyRejectedDocuments: Function;\n  PushPopupAlert: (alert: PopupAlertData) => void;\n};\n\ntype ClaimFormState = {\n  loading: boolean;\n  loadingForm: boolean;\n  formError: {\n    element: string;\n    msg: string;\n  } | null;\n  thisClaimType: PlansTypeKeys | null;\n  thisClaimTypeId: string;\n  claimComment: string;\n  claimFileId: string;\n  chooseClaimFile: boolean;\n  viewThisFile: string;\n  formType: \"DEFAULT\" | \"PROPS\";\n  alertError: string | null;\n  activeSession: SessionPlanInterface | null;\n};\n\nclass ClaimForm extends Component<ClaimFormProps, ClaimFormState> {\n  constructor(props: ClaimFormProps) {\n    super(props);\n\n    this.state = {\n      loading: true,\n      loadingForm: false,\n      formError: null,\n      thisClaimType: null,\n      thisClaimTypeId: \"\",\n      claimComment: \"\",\n      claimFileId: \"\",\n      chooseClaimFile: false,\n      viewThisFile: \"\",\n      formType: \"DEFAULT\",\n      alertError: null,\n      activeSession: null,\n    };\n  }\n\n  isDocumentIdValid = (\n    doc_id: string\n  ): {\n    status: boolean;\n    msg: string;\n    alert: PopupAlertTheme;\n  } => {\n    if (this.props.claiming.candidateDocuments) {\n      let doc = this.props.claiming.candidateDocuments.find(\n        (item) => item.doc_id === doc_id\n      );\n      if (doc) {\n        // CHECK IF DOCUMENT HAS REJECTED STATUS\n        if (doc.validated_by.validation_status !== \"rejected\") {\n          return {\n            status: false,\n            msg: \"Only rejected document are allowed for claim\",\n            alert: PopupAlertTheme.info,\n          };\n        }\n        // CHECK IF DOCUMENT HAS ALREADY CLAIMED ON\n        if (\n          this.props.claiming.myClaims &&\n          this.state.activeSession &&\n          isClaimAllowed(\n            this.props.claiming.myClaims,\n            this.state.activeSession.session_plan_id,\n            doc_id\n          )\n        ) {\n          return {\n            status: false,\n            msg: \"This document already in claiming list!\",\n            alert: PopupAlertTheme.info,\n          };\n        }\n        return { status: true, msg: \"\", alert: PopupAlertTheme.success };\n      } else {\n        return {\n          status: false,\n          msg: \"Invalid document id\",\n          alert: PopupAlertTheme.warning,\n        };\n      }\n    }\n    return {\n      status: false,\n      msg: \"No Documents, please try again\",\n      alert: PopupAlertTheme.info,\n    };\n  };\n\n  isApplicationIdValid = (\n    app_id: string\n  ): {\n    status: boolean;\n    msg: string;\n    alert: PopupAlertTheme;\n  } => {\n    if (this.props.claiming.candidateApplications) {\n      let app = this.props.claiming.candidateApplications.find(\n        (item) => item.application_id === app_id\n      );\n      if (app) {\n        // CHECK IF DOCUMENT HAS REJECTED STATUS\n        if (app.application_status !== ApplicationStates.Rejected) {\n          return {\n            status: false,\n            msg: \"Only rejected application are allowed for claim\",\n            alert: PopupAlertTheme.info,\n          };\n        }\n        // CHECK IF DOCUMENT HAS ALREADY CLAIMED ON\n        if (\n          this.props.claiming.myClaims &&\n          this.state.activeSession &&\n          isClaimAllowed(\n            this.props.claiming.myClaims,\n            this.state.activeSession.session_plan_id,\n            app.application_id\n          )\n        ) {\n          return {\n            status: false,\n            msg: \"This application already in claiming list!\",\n            alert: PopupAlertTheme.info,\n          };\n        }\n        return { status: true, msg: \"\", alert: PopupAlertTheme.info };\n      } else {\n        return {\n          status: false,\n          msg: \"Invalid application id\",\n          alert: PopupAlertTheme.warning,\n        };\n      }\n    }\n    return {\n      status: false,\n      msg: \"No Application, please try again!\",\n      alert: PopupAlertTheme.info,\n    };\n  };\n\n  setLoading = (state: boolean) => {\n    this.setState({ loading: state });\n  };\n\n  setLoadingForm = (state: boolean) => {\n    this.setState({ loadingForm: state });\n  };\n\n  setFormError = (\n    data: {\n      element: string;\n      msg: string;\n    } | null\n  ) => {\n    this.setState({ formError: data });\n  };\n\n  setAlertError = (data: string | null) => {\n    this.setState({ alertError: data });\n  };\n\n  setClaimFileId = (data: string) => {\n    this.setState({ claimFileId: data });\n  };\n\n  setViewThisFile = (data: string) => {\n    this.setState({ viewThisFile: data });\n  };\n\n  setChooseClaimFile = (data: boolean) => {\n    this.setState({ chooseClaimFile: data });\n  };\n\n  setClaimComment = (data: string) => {\n    this.setState({ claimComment: data });\n  };\n\n  isClaimTypeOpen = (\n    thisSession: SessionPlanInterface,\n    thisType: PlansTypeKeys\n  ): boolean => {\n    let data: PlansInterface | undefined;\n    if (thisType === PlansTypeKeys.APPLICATION) {\n      data = thisSession.plans.find(\n        (item) => item.type_key === PlansTypeKeys.APPLICATION\n      );\n      if (data && isPlanActive(thisSession, data) === \"OPEN\") {\n        return true;\n      }\n    } else if (thisType === PlansTypeKeys.DOCUMENT_VALIDATION) {\n      data = thisSession.plans.find(\n        (item) => item.type_key === PlansTypeKeys.DOCUMENT_VALIDATION\n      );\n      if (data && isPlanActive(thisSession, data) === \"OPEN\") {\n        return true;\n      }\n    } else if (thisType === PlansTypeKeys.PLACEMENT_TRANSFER) {\n      data = thisSession.plans.find(\n        (item) => item.type_key === PlansTypeKeys.PLACEMENT_TRANSFER\n      );\n      if (data && isPlanActive(thisSession, data) === \"OPEN\") {\n        return true;\n      }\n    }\n    return false;\n  };\n\n  isClaimBtnValid = (thisSession: SessionPlanInterface) => {\n    if (this.props.file_id || this.props.claim_type) {\n      // CHECK IF CLAIM TYPE && CLAIM FILE PROPS ARE PASSED PROPS\n      if (!this.props.claim_type) {\n        this.props.PushPopupAlert({\n          title: \"Claim type is required!\",\n          theme: PopupAlertTheme.warning,\n        });\n        this.props.setFormState(false);\n        this.setState({\n          claimFileId: \"\",\n          thisClaimType: null,\n          thisClaimTypeId: \"\",\n          claimComment: \"\",\n          chooseClaimFile: false,\n          formType: \"DEFAULT\",\n          viewThisFile: \"\",\n          formError: null,\n        });\n      } else if (!this.props.file_id) {\n        this.props.PushPopupAlert({\n          title: \"Claim file is required!\",\n          theme: PopupAlertTheme.warning,\n        });\n        this.props.setFormState(false);\n        this.setState({\n          claimFileId: \"\",\n          thisClaimType: null,\n          thisClaimTypeId: \"\",\n          claimComment: \"\",\n          chooseClaimFile: false,\n          formType: \"DEFAULT\",\n          viewThisFile: \"\",\n          formError: null,\n        });\n      } else if (!this.isClaimTypeOpen(thisSession, this.props.claim_type)) {\n        // IF CLAIM TYPE && CLAIM FILE PROPS ARE PASSED PROPS\n        // CHECK IF CLAIM TYPE IS OPEN ================\n        this.props.PushPopupAlert({\n          title: \"Claim type is closed!\",\n          theme: PopupAlertTheme.warning,\n        });\n        this.props.setFormState(false);\n        this.setState({\n          claimFileId: \"\",\n          thisClaimType: null,\n          thisClaimTypeId: \"\",\n          claimComment: \"\",\n          chooseClaimFile: false,\n          formType: \"DEFAULT\",\n          viewThisFile: \"\",\n          formError: null,\n        });\n      }\n    }\n  };\n\n  componentDidMount = () => {\n    if (\n      this.props.sessionPlan.activeSessionPlan === null ||\n      this.props.sessionPlan.activeSessionPlan === \"none\"\n    ) {\n      this.props.getActiveSessionPlan(\n        (status: boolean, msg: string, data: SessionPlanInterface | \"none\") => {\n          this.setLoading(status);\n          if (!status && msg.length) {\n            this.props.PushPopupAlert({\n              title: msg,\n              theme: PopupAlertTheme.danger,\n            });\n          }\n          if (data && data === \"none\") {\n            this.props.PushPopupAlert({\n              title: \"No session active session\",\n              theme: PopupAlertTheme.danger,\n            });\n            this.props.setFormState(false);\n            this.setState({\n              claimFileId: \"\",\n              thisClaimType: null,\n              thisClaimTypeId: \"\",\n              claimComment: \"\",\n              chooseClaimFile: false,\n              formType: \"DEFAULT\",\n              viewThisFile: \"\",\n              formError: null,\n            });\n          } else {\n            this.setState({ activeSession: data });\n            this.isClaimBtnValid(data);\n          }\n        }\n      );\n    } else {\n      this.setState({\n        activeSession: this.props.sessionPlan.activeSessionPlan,\n      });\n      this.isClaimBtnValid(this.props.sessionPlan.activeSessionPlan);\n      this.setLoading(false);\n    }\n\n    if (this.props.documentReducer.documentCategory === null) {\n      this.props.getDocumentCategory();\n    }\n    if (this.props.documentReducer.documentSubCategory === null) {\n      this.props.getDocumentSubCategory();\n    }\n    if (this.props.documentReducer.documentFields === null) {\n      this.props.getDocumentFields();\n    }\n\n    if (this.props.claiming.candidateApplications === null) {\n      this.props.getMyRejectedApplications(\n        this.props.auth.user.user_id,\n        (status: boolean, msg: string) => {\n          this.setLoading(status);\n          if (status === false) {\n            if (msg.length > 0) {\n              this.props.PushPopupAlert({\n                title: msg,\n                theme: PopupAlertTheme.danger,\n              });\n            }\n          }\n        }\n      );\n    }\n\n    if (this.props.claiming.candidateDocuments === null) {\n      this.props.getMyRejectedDocuments((status: boolean, msg: string) => {\n        this.setLoading(status);\n        if (status === false) {\n          if (msg.length > 0) {\n            this.props.PushPopupAlert({\n              title: msg,\n              theme: PopupAlertTheme.danger,\n            });\n          }\n        }\n      });\n    }\n\n    if (\n      this.props.claiming.claimTypes === null ||\n      this.props.claiming.claimTypes.length <= 0\n    ) {\n      this.props.GetClaimingTypes((status: boolean, msg: string) => {\n        this.setLoading(status);\n        if (status === false) {\n          if (msg.length > 0) {\n            this.props.PushPopupAlert({\n              title: msg,\n              theme: PopupAlertTheme.danger,\n            });\n          }\n        }\n      });\n    }\n\n    // PROPS VALIDATION PROCESS ###############\n    if (\n      this.props.claim_type &&\n      this.props.file_id &&\n      this.state.formType === \"DEFAULT\"\n    ) {\n      if (this.props.claim_type === PlansTypeKeys.DOCUMENT_VALIDATION) {\n        let _isDocumentIdValid = this.isDocumentIdValid(this.props.file_id);\n        if (!_isDocumentIdValid.status) {\n          this.props.PushPopupAlert({\n            title: _isDocumentIdValid.msg,\n            theme: _isDocumentIdValid.alert,\n          });\n          // setAlertError(_isDocumentIdValid.msg);\n          this.props.setFormState(false);\n        } else {\n          this.setState({\n            thisClaimType: this.props.claim_type,\n            claimFileId: this.props.file_id,\n            formType: \"PROPS\",\n          });\n        }\n      }\n      if (this.props.claim_type === PlansTypeKeys.APPLICATION) {\n        let _isApplicationIdValid = this.isApplicationIdValid(\n          this.props.file_id\n        );\n        if (!_isApplicationIdValid.status) {\n          this.props.PushPopupAlert({\n            title: _isApplicationIdValid.msg,\n            theme: _isApplicationIdValid.alert,\n          });\n          this.props.setFormState(false);\n        } else {\n          this.setState({\n            thisClaimType: this.props.claim_type,\n            claimFileId: this.props.file_id,\n            formType: \"PROPS\",\n          });\n        }\n      }\n    }\n  };\n\n  getDocumentById = (\n    documents: DocumentClaimUser[],\n    doc_id: string\n  ): DocumentClaimUser => {\n    return documents.filter((item) => item.doc_id === doc_id)[0];\n  };\n\n  getApplicationById = (\n    applications: claimApplicationsInterface[],\n    application_id: string\n  ): claimApplicationsInterface => {\n    return applications.filter(\n      (item) => item.application_id === application_id\n    )[0];\n  };\n\n  getValidation = (\n    thisId: string\n  ): {\n    old_reason: string;\n    old_status: string;\n    old_evaluated_by: string;\n  } => {\n    let result: {\n      old_reason: string;\n      old_status: string;\n      old_evaluated_by: string;\n    } = { old_reason: \"\", old_status: \"\", old_evaluated_by: \"\" };\n\n    if (\n      this.state.thisClaimType === PlansTypeKeys.DOCUMENT_VALIDATION &&\n      this.props.claiming.candidateDocuments\n    ) {\n      result = {\n        old_reason: this.getDocumentById(\n          this.props.claiming.candidateDocuments,\n          thisId\n        ).validated_by.comment,\n        old_status: this.getDocumentById(\n          this.props.claiming.candidateDocuments,\n          thisId\n        ).validated_by.validation_status,\n        old_evaluated_by: this.getDocumentById(\n          this.props.claiming.candidateDocuments,\n          thisId\n        ).validated_by.user_id,\n      };\n    } else if (\n      this.state.thisClaimType === PlansTypeKeys.APPLICATION &&\n      this.props.claiming.candidateApplications\n    ) {\n      result = {\n        old_reason: this.getApplicationById(\n          this.props.claiming.candidateApplications,\n          thisId\n        ).override_by.comment,\n        old_status: this.getApplicationById(\n          this.props.claiming.candidateApplications,\n          thisId\n        ).override_by.application_status,\n        old_evaluated_by: this.getApplicationById(\n          this.props.claiming.candidateApplications,\n          thisId\n        ).override_by.user_id,\n      };\n    }\n\n    return result;\n  };\n\n  cleanToClose = () => {\n    this.props.setFormState(false);\n    this.setState({\n      claimFileId: \"\",\n      thisClaimType: null,\n      thisClaimTypeId: \"\",\n      claimComment: \"\",\n      chooseClaimFile: false,\n      formType: \"DEFAULT\",\n      viewThisFile: \"\",\n      formError: null,\n    });\n  };\n\n  handleSubmit = async (e: React.FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n    if (!this.state.thisClaimType) {\n      return this.setFormError({\n        element: \"claim_type\",\n        msg: \"Claim type is required!\",\n      });\n    }\n    if (isEmptyOrSpaces(this.state.claimFileId)) {\n      return this.setFormError({\n        element: \"claim_file\",\n        msg: `Please select ${this.state.thisClaimType.toLocaleLowerCase()} you are claiming on!`,\n      });\n    }\n    if (isEmptyOrSpaces(this.state.claimComment)) {\n      return this.setFormError({\n        element: \"claim_comment\",\n        msg: `Claim comment is required!`,\n      });\n    }\n\n    if (!this.state.activeSession) {\n      return this.setAlertError(`No active claiming session is available!`);\n    }\n\n    this.setLoadingForm(true);\n    try {\n      setAxiosToken();\n      const res = await axios.post<CandidateClaimInterface>(\n        `${API.CLAIMING}/user/create`,\n        {\n          claiming_on_id: this.state.claimFileId,\n          type_key: this.state.thisClaimType,\n          user: this.props.auth.user.user_id,\n          period_id: this.state.activeSession.session_plan_id,\n          reason: this.state.claimComment,\n          old_reason: this.getValidation(this.state.claimFileId).old_reason,\n          old_status: this.getValidation(this.state.claimFileId).old_status,\n          old_evaluated_by: this.getValidation(this.state.claimFileId)\n            .old_evaluated_by,\n        }\n      );\n      console.log({ createClaim: res.data });\n      if (res.status === 201 || res.status === 200) {\n        this.props.createClaim(res.data);\n        this.props.PushPopupAlert({\n          title: \"Claim sent successful\",\n          theme: PopupAlertTheme.success,\n        });\n        this.cleanToClose();\n      }\n    } catch (error) {\n      console.error({ error });\n      this.props.PushPopupAlert({\n        title: errorToText(error),\n        theme: PopupAlertTheme.danger,\n      });\n    }\n    this.setLoadingForm(false);\n  };\n\n  selectClaimType = (thisClaim: string) => {\n    this.setState({\n      thisClaimType: isEmptyOrSpaces(thisClaim)\n        ? null\n        : (thisClaim as PlansTypeKeys),\n    });\n  };\n\n  generateChooseFileTitle = (thisClaimType: PlansTypeKeys | null): string => {\n    let result: string = \"\";\n\n    switch (thisClaimType) {\n      case PlansTypeKeys.APPLICATION:\n        result = `Select application you are claiming on?`;\n        break;\n      case PlansTypeKeys.DOCUMENT_VALIDATION:\n        result = `Select document you are claiming on?`;\n        break;\n      case PlansTypeKeys.EXAMINATION:\n        result = `Select exam you are claiming on?`;\n        break;\n      case PlansTypeKeys.MARKS_PUBLICATION:\n        result = `Select marks publication you are claiming on?`;\n        break;\n      case PlansTypeKeys.PLACEMENT_TRANSFER:\n        result = `Select placement you are claiming on?`;\n        break;\n      default:\n        result = \"Select file you are claiming on?\";\n        break;\n    }\n\n    return result;\n  };\n\n  render() {\n    if (this.state.loading) {\n      return null;\n    }\n    return (\n      <div className=\"pb-3\">\n        {this.props.formState && (\n          <Modal\n            backDrop={true}\n            theme={Themes.default}\n            close={(): void => {\n              !this.state.loadingForm &&\n                this.state.viewThisFile.length <= 0 &&\n                this.cleanToClose();\n              !this.state.loadingForm &&\n                this.state.viewThisFile.length > 0 &&\n                this.setViewThisFile(\"\");\n            }}\n            displayClose={true}\n            backDropClose={false}\n            title={\n              <div className=\"text-gray-900 font-bold text-xl md:ml-1\">\n                {this.state.viewThisFile.length <= 0 && \"Claiming form\"}\n                {this.state.viewThisFile.length > 0 &&\n                  this.state.thisClaimType ===\n                    PlansTypeKeys.DOCUMENT_VALIDATION &&\n                  \"Viewing document\"}\n                {this.state.viewThisFile.length > 0 &&\n                  this.state.thisClaimType === PlansTypeKeys.APPLICATION &&\n                  \"Viewing application\"}\n              </div>\n            }\n            widthSizeClass={\n              this.state.viewThisFile.length > 0\n                ? ModalSize.extraLarge\n                : ModalSize.medium\n            }\n            padding={{ title: true, body: false, footer: false }}\n          >\n            {/* CLAIM FORM ============================================== */}\n            {this.state.viewThisFile.length <= 0 && (\n              <form onSubmit={(e) => this.handleSubmit(e)}>\n                <div className=\"px-6 pb-3\">\n                  {this.state.alertError && (\n                    <div\n                      className=\"alert-warning cursor-pointer\"\n                      onClick={() => this.setAlertError(null)}\n                    >\n                      {this.state.alertError}\n                    </div>\n                  )}\n                  <div className=\"text-base text-gray-700 sm:text-lg\">\n                    {/* SELECT CLAIM TYPE ============================================== */}\n                    <div className=\"flex flex-col mb-2\">\n                      <label>Claim type</label>\n                      <select\n                        className={`rounded px-2 py-2 w-full bg-white focus:outline-none ${\n                          this.state.formError &&\n                          this.state.formError.element === \"claim_type\"\n                            ? \"border-red-500\"\n                            : \"border-gray-500\"\n                        } border-2`}\n                        onChange={(e: React.ChangeEvent<HTMLSelectElement>) => {\n                          this.selectClaimType(e.target.value);\n                          this.setClaimFileId(\"\");\n                          this.state.formError &&\n                            this.state.formError.element === \"claim_type\" &&\n                            this.setFormError(null);\n                        }}\n                        value={this.state.thisClaimTypeId}\n                        disabled={\n                          this.state.loadingForm ||\n                          this.state.formType === \"PROPS\"\n                        }\n                      >\n                        <option value=\"\">Choose claim type</option>\n                        {Object.values(PlansTypeKeys).map((item, index) => (\n                          <option value={item} key={index + item}>\n                            {capitalizeFirstLetter(\n                              item.toLocaleLowerCase().replace(/_/g, \" \")\n                            )}\n                          </option>\n                        ))}\n                      </select>\n                      {this.state.formError &&\n                        this.state.formError.element === \"claim_type\" && (\n                          <span className=\"text-red-500\">\n                            {this.state.formError.msg}\n                          </span>\n                        )}\n                    </div>\n                    {/* END SELECT CLAIM TYPE ============================================== */}\n\n                    {/* SELECT FILE TO CLAIM ON ============================================== */}\n                    <div className=\"flex flex-col mb-2\">\n                      <label>\n                        {this.generateChooseFileTitle(this.state.thisClaimType)}\n                      </label>\n                      <div\n                        className={`text-left bg-white border-2 border-gray-700 rounded w-full ${\n                          this.state.chooseClaimFile ? \"h-64\" : \"h-10\"\n                        } ${\n                          this.state.formError &&\n                          this.state.formError.element === \"claim_file\"\n                            ? \"border-red-500\"\n                            : \"border-gray-500\"\n                        } border-2 ${\n                          this.state.thisClaimType &&\n                          !this.state.chooseClaimFile\n                            ? \"cursor-pointer\"\n                            : !this.state.chooseClaimFile &&\n                              \"cursor-not-allowed\"\n                        }`}\n                        title={\n                          !this.state.thisClaimType\n                            ? \"Choose claim type first!\"\n                            : \"\"\n                        }\n                        onClick={() => {\n                          this.state.formType === \"DEFAULT\" &&\n                            this.state.thisClaimType &&\n                            !this.state.chooseClaimFile &&\n                            this.setChooseClaimFile(true);\n                          this.state.formError &&\n                            this.state.formError.element === \"claim_file\" &&\n                            this.setFormError(null);\n                        }}\n                      >\n                        {/* DISPLAYING FILTERED SELECTING FILE ============================ */}\n                        {this.state.claimFileId.length > 0 &&\n                        !this.state.chooseClaimFile ? (\n                          <p className=\"my-1 mx-2\">\n                            {this.state.thisClaimType ===\n                              PlansTypeKeys.DOCUMENT_VALIDATION &&\n                              this.props.claiming.candidateDocuments &&\n                              ClaimGetDocTitle(\n                                this.props.documentReducer,\n                                this.getDocumentById(\n                                  this.props.claiming.candidateDocuments,\n                                  this.state.claimFileId\n                                )\n                              ).main}\n                            {this.state.thisClaimType ===\n                              PlansTypeKeys.APPLICATION &&\n                              this.props.claiming.candidateApplications &&\n                              this.getApplicationById(\n                                this.props.claiming.candidateApplications,\n                                this.state.claimFileId\n                              ).position.position_title}\n                          </p>\n                        ) : (\n                          !this.state.chooseClaimFile && (\n                            <p className=\"my-1 mx-2\">\n                              Select Claim{\" \"}\n                              {this.state.thisClaimType &&\n                                this.state.thisClaimType\n                                  .toLocaleLowerCase()\n                                  .replace(/_/g, \" \")}\n                            </p>\n                          )\n                        )}\n                        {/* END DISPLAYING FILTERED SELECTING FILE ============================ */}\n\n                        {/* LISTING OF REJECTED DOCUMENTS ============================ */}\n                        {this.state.chooseClaimFile &&\n                          this.state.thisClaimType ===\n                            PlansTypeKeys.DOCUMENT_VALIDATION &&\n                          this.props.claiming.candidateDocuments &&\n                          this.props.claiming.myClaims &&\n                          this.props.sessionPlan.activeSessionPlan &&\n                          this.props.sessionPlan.activeSessionPlan !==\n                            \"none\" && (\n                            <FormDocumentList\n                              setChooseClaimFile={this.setChooseClaimFile}\n                              setClaimFileId={this.setClaimFileId}\n                              setViewThisFile={this.setViewThisFile}\n                              viewThisFile={this.state.viewThisFile}\n                              candidateDocuments={\n                                this.props.claiming.candidateDocuments\n                              }\n                              documentCategories={this.props.documentReducer}\n                              myClaims={this.props.claiming.myClaims}\n                              activeSession={\n                                this.props.sessionPlan.activeSessionPlan\n                              }\n                            />\n                          )}\n                        {/* END LISTING OF REJECTED DOCUMENTS ============================ */}\n                        {/* LISTING OF REJECTED APPLICATION ============================ */}\n                        {this.state.chooseClaimFile &&\n                          this.state.thisClaimType ===\n                            PlansTypeKeys.APPLICATION &&\n                          this.props.claiming.candidateApplications &&\n                          this.props.claiming.myClaims &&\n                          this.props.sessionPlan.activeSessionPlan &&\n                          this.props.sessionPlan.activeSessionPlan !==\n                            \"none\" && (\n                            <FormApplicationList\n                              setChooseClaimFile={this.setChooseClaimFile}\n                              setClaimFileId={this.setClaimFileId}\n                              setViewThisFile={this.setViewThisFile}\n                              viewThisFile={this.state.viewThisFile}\n                              candidateApplications={\n                                this.props.claiming.candidateApplications\n                              }\n                              myClaims={this.props.claiming.myClaims}\n                              activeSession={\n                                this.props.sessionPlan.activeSessionPlan\n                              }\n                            />\n                          )}\n                        {/* END LISTING OF REJECTED APPLICATION ============================ */}\n                      </div>\n                      {this.state.formError &&\n                        this.state.formError.element === \"claim_file\" && (\n                          <span className=\"text-red-500\">\n                            {this.state.formError.msg}\n                          </span>\n                        )}\n                    </div>\n                    {/* END SELECT FILE TO CLAIM ON ============================================== */}\n\n                    {/* CLAIM COMMENT ============================================== */}\n                    <div className=\"flex flex-col\">\n                      <label>Comment</label>\n                      <textarea\n                        className={`text-left input-white w-20 inline-block ${\n                          this.state.formError &&\n                          this.state.formError.element === \"claim_comment\"\n                            ? \"border-red-500\"\n                            : \"border-gray-500\"\n                        } border-2`}\n                        placeholder={`Claim comment`}\n                        style={{ resize: \"none\" }}\n                        value={this.state.claimComment}\n                        onChange={(e) => {\n                          this.setClaimComment(e.target.value);\n                          this.state.formError &&\n                            this.state.formError.element === \"claim_comment\" &&\n                            this.setFormError(null);\n                        }}\n                        rows={3}\n                        disabled={this.state.loadingForm}\n                      ></textarea>\n                      {this.state.formError &&\n                        this.state.formError.element === \"claim_comment\" && (\n                          <span className=\"text-red-500\">\n                            {this.state.formError.msg}\n                          </span>\n                        )}\n                    </div>\n                    {/* END CLAIM COMMENT ============================================== */}\n                  </div>\n                  <div className=\"pt-3 flex justify-between\">\n                    <button\n                      onClick={() => this.cleanToClose()}\n                      className={`btn bg-gray-400 text-white hover:bg-gray-600 focus:outline-none ${\n                        this.state.loadingForm && \"cursor-not-allowed\"\n                      }`}\n                      type=\"button\"\n                      disabled={this.state.loadingForm}\n                    >\n                      Exit\n                    </button>\n                    <button\n                      className={`btn bg-primary text-white hover:bg-blue-600 focus:outline-none ${\n                        this.state.loadingForm && \"cursor-wait\"\n                      }`}\n                      type=\"submit\"\n                      disabled={this.state.loadingForm}\n                    >\n                      {this.state.loadingForm ? \"Loading...\" : \"Claim\"}\n                    </button>\n                  </div>\n                </div>\n              </form>\n            )}\n            {/* END CLAIM FORM ============================================== */}\n\n            {/* CLAIM DOCUMENT VIEW ============================================== */}\n            {this.state.viewThisFile.length > 0 &&\n              this.props.claiming.candidateDocuments &&\n              this.state.thisClaimType ===\n                PlansTypeKeys.DOCUMENT_VALIDATION && (\n                <DocFormView\n                  thisDoc={this.getDocumentById(\n                    this.props.claiming.candidateDocuments,\n                    this.state.viewThisFile\n                  )}\n                  setViewThisFile={this.setViewThisFile}\n                  documentCategories={this.props.documentReducer}\n                  setChooseClaimFile={this.setChooseClaimFile}\n                  setClaimFileId={this.setClaimFileId}\n                />\n              )}\n            {/* END CLAIM DOCUMENT VIEW ============================================== */}\n            {/* CLAIM APPLICATION VIEW ============================================== */}\n            {this.state.viewThisFile.length > 0 &&\n              this.props.claiming.candidateApplications &&\n              this.state.thisClaimType === PlansTypeKeys.APPLICATION && (\n                <ApplicationFormView\n                  thisApplication={this.getApplicationById(\n                    this.props.claiming.candidateApplications,\n                    this.state.viewThisFile\n                  )}\n                  documentCategories={this.props.documentReducer}\n                  setChooseClaimFile={this.setChooseClaimFile}\n                  setClaimFileId={this.setClaimFileId}\n                  setViewThisFile={this.setViewThisFile}\n                />\n              )}\n            {/* END CLAIM APPLICATION VIEW ============================================== */}\n          </Modal>\n        )}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = ({\n  auth,\n  document,\n  claiming,\n  sessionPlan,\n}: StoreState): {\n  auth: Auth;\n  sessionPlan: SessionPlanReducerInterface;\n  documentReducer: DocumentReducerInterface;\n  claiming: ClaimingReducerType;\n} => {\n  return {\n    auth: auth,\n    sessionPlan,\n    documentReducer: document,\n    claiming,\n  };\n};\n\nexport default connect(mapStateToProps, {\n  getActiveSessionPlan,\n  createClaim,\n  GetClaimingTypes,\n  getMyRejectedApplications,\n  getMyRejectedDocuments,\n  getDocumentCategory,\n  getDocumentSubCategory,\n  getDocumentFields,\n  getApplicationSessions,\n  PushPopupAlert,\n})(ClaimForm);\n","import React from \"react\";\nimport { AiFillDashboard } from \"react-icons/ai\";\nimport { SessionPlanInterface } from \"../../interfaces\";\n\ntype ClaimHeaderTitleProps = {\n  headerTitle: string;\n  loading: boolean;\n  loadingSession: boolean;\n  periodChanged: boolean;\n  thisPeriod: SessionPlanInterface | null;\n  setThisPeriod: (state: SessionPlanInterface | null) => void;\n  setLoadingSession: (state: boolean) => void;\n  application_sessions: SessionPlanInterface[];\n  onPeriodChange: (period_id: string) => void;\n};\n\nconst selectPeriod = (\n  sessions: SessionPlanInterface[],\n  period_id: string,\n  setThisPeriod: (state: SessionPlanInterface | null) => void\n) => {\n  setThisPeriod(\n    sessions.filter((item) => item.session_plan_id === period_id)[0]\n  );\n};\n\nconst ClaimHeaderTitle: React.FC<ClaimHeaderTitleProps> = (props) => {\n  const isLoading = (): boolean => {\n    if (props.loading || props.loadingSession || props.periodChanged) {\n      return true;\n    }\n    return false;\n  };\n\n  return (\n    <div className=\"mt-3 rounded flex flex-col md:flex-row md:justify-between items-start\">\n      <div className=\"flex flex-row items-center gap-3 mb-2\">\n        <AiFillDashboard className=\"text-6xl text-blue-600 hidden md:block\" />\n        <div className=\"flex flex-col\">\n          <span className=\"text-blue-600 text-3xl font-bold\">\n            {props.headerTitle}\n          </span>\n        </div>\n      </div>\n\n      {/* FILTER SECTION PERIOD && EDUCATION */}\n      <section className=\"w-full md:w-auto my-2 md:my-0\">\n        <div>\n          <select\n            className={`bg-white text-gray-600 border border-gray-400 rounded p-2 focus:outline-none ${\n              isLoading() ? \"cursor-wait\" : \"cursor-default\"\n            }`}\n            value={props.thisPeriod ? props.thisPeriod.session_plan_id : \"\"}\n            disabled={isLoading()}\n            onChange={(e) => {\n              selectPeriod(\n                props.application_sessions,\n                e.target.value,\n                props.setThisPeriod\n              );\n              props.setLoadingSession(true);\n              props.onPeriodChange(e.target.value);\n            }}\n          >\n            {props.application_sessions.map((session, item) => (\n              <option\n                key={session.session_plan_id + item}\n                value={session.session_plan_id}\n              >\n                {session.session_plan_name}\n              </option>\n            ))}\n          </select>\n        </div>\n      </section>\n      {/* END FILTER SECTION PERIOD && EDUCATION */}\n    </div>\n  );\n};\n\nexport default ClaimHeaderTitle;\n","import React, { useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Auth, PushPopupAlert } from \"../../../actions\";\nimport {\n  getAllClaims,\n  GetClaimingTypes,\n  setSelectedClaimType,\n} from \"../../../actions/claiming\";\nimport { PopupAlertData } from \"../../../components/Alert/Popup\";\nimport { MainItem } from \"../../../components/Navigation/SideNavigation\";\nimport {\n  CandidateClaimInterface,\n  ClaimStatus,\n  PlansTypeKeys,\n} from \"../../../interfaces\";\nimport { PopupAlertTheme } from \"../../../interfaces/popupAlert\";\nimport { StoreState } from \"../../../reducers\";\nimport { ClaimingReducerType } from \"../../../reducers/claiming\";\n\nexport const filterClaimsByClaimType = (\n  claimList: CandidateClaimInterface[],\n  claimType: PlansTypeKeys | \"all\"\n): CandidateClaimInterface[] => {\n  if (claimType === \"all\") {\n    return claimList;\n  }\n\n  return claimList.filter((item) => item.type_key === claimType);\n};\n\ntype AdminFilterByTypeProps = {\n  loadingClaims: boolean;\n  FC_CountByType?: Function;\n\n  // REDUX PROPS =======================================\n  auth: Auth;\n  claiming: ClaimingReducerType;\n  GetClaimingTypes: Function;\n  setSelectedClaimType: Function;\n  getAllClaims: Function;\n  PushPopupAlert: (alert: PopupAlertData) => void;\n};\n\nconst AdminFilterByType: React.FC<AdminFilterByTypeProps> = (props) => {\n  const [loading, setLoading] = useState<boolean>(true);\n  const [loadingClaimTypes, setLoadingClaimTypes] = useState<boolean>(true);\n\n  useEffect(() => {\n    if (props.claiming.claimTypes === null) {\n      props.GetClaimingTypes((status: boolean, msg: string) => {\n        if (status === false) {\n          if (msg.length > 0) {\n            props.PushPopupAlert({\n              title: msg,\n              theme: PopupAlertTheme.danger,\n            });\n          }\n          setLoadingClaimTypes(false);\n          setLoading(false);\n        }\n      });\n    } else if (loadingClaimTypes) {\n      setLoadingClaimTypes(false);\n      setLoading(false);\n    }\n  }, [loadingClaimTypes, props]);\n\n  const countClaims = (\n    claiming: ClaimingReducerType,\n    thisType: PlansTypeKeys | \"all\"\n  ): number => {\n    let result: number = 0;\n\n    if (claiming.allClaims && thisType === \"all\") {\n      result = claiming.allClaims.filter(\n        (item) => item.last_claim_status === ClaimStatus.PENDING\n      ).length;\n    }\n    if (claiming.allClaims && thisType !== \"all\") {\n      result = claiming.allClaims.filter(\n        (item) =>\n          item.type_key === thisType &&\n          item.last_claim_status === ClaimStatus.PENDING\n      ).length;\n    }\n\n    return result;\n  };\n\n  return (\n    <React.Fragment>\n      <span className=\"mt-2 text-sm\">Filter by claim type</span>\n      {/* WHILE LOADING DATA ================================== */}\n      {(loading || props.loadingClaims) && (\n        <section className=\"space-y-2\">\n          <div className=\"w-full h-7 rounded bg-gray-200 animate__animated animate__pulse animate__delay-5s animate__infinite\"></div>\n          <div className=\"w-full h-7 rounded bg-gray-200 animate__animated animate__pulse animate__delay-5s animate__infinite\"></div>\n          <div className=\"w-full h-7 rounded bg-gray-200 animate__animated animate__pulse animate__delay-5s animate__infinite\"></div>\n          <div className=\"w-full h-7 rounded bg-gray-200 animate__animated animate__pulse animate__delay-5s animate__infinite\"></div>\n        </section>\n      )}\n      {/* END WHILE LOADING DATA ================================== */}\n\n      {/* AFTER LOADING DATA ================================== */}\n      {!loading && !props.loadingClaims && props.claiming.claimTypes && (\n        <section>\n          {/* ALL ================================= */}\n          <div\n            className=\"mt-2\"\n            onClick={() => {\n              // props.setThisClaimType(\"ALL\");\n              props.setSelectedClaimType(\"all\");\n            }}\n          >\n            <MainItem\n              title=\"All\"\n              active={props.claiming.selectedClaimType === \"all\"}\n              count={countClaims(props.claiming, \"all\")}\n            />\n          </div>\n          {/* APPLICATION ================================= */}\n          <div\n            className=\"mt-2\"\n            onClick={() => {\n              // props.setThisClaimType(ClaimTypesInterface.DOCUMENT);\n              props.setSelectedClaimType(PlansTypeKeys.APPLICATION);\n            }}\n          >\n            <MainItem\n              title={\"Application\"}\n              active={\n                props.claiming.selectedClaimType !== \"all\" &&\n                props.claiming.selectedClaimType === PlansTypeKeys.APPLICATION\n              }\n              count={countClaims(props.claiming, PlansTypeKeys.APPLICATION)}\n            />\n          </div>\n          {/* DOCUMENT ================================= */}\n          <div\n            className=\"mt-2\"\n            onClick={() => {\n              props.setSelectedClaimType(PlansTypeKeys.DOCUMENT_VALIDATION);\n            }}\n          >\n            <MainItem\n              title={\"Document\"}\n              active={\n                props.claiming.selectedClaimType !== \"all\" &&\n                props.claiming.selectedClaimType ===\n                  PlansTypeKeys.DOCUMENT_VALIDATION\n              }\n              count={countClaims(\n                props.claiming,\n                PlansTypeKeys.DOCUMENT_VALIDATION\n              )}\n            />\n          </div>\n          {/* EXAMINATION ================================= */}\n          <div\n            className=\"mt-2\"\n            onClick={() => {\n              props.setSelectedClaimType(PlansTypeKeys.EXAMINATION);\n            }}\n          >\n            <MainItem\n              title={\"Exam\"}\n              active={\n                props.claiming.selectedClaimType !== \"all\" &&\n                props.claiming.selectedClaimType === PlansTypeKeys.EXAMINATION\n              }\n              count={countClaims(props.claiming, PlansTypeKeys.EXAMINATION)}\n            />\n          </div>\n          {/* MARKS PUBLICATION ================================= */}\n          <div\n            className=\"mt-2\"\n            onClick={() => {\n              props.setSelectedClaimType(PlansTypeKeys.MARKS_PUBLICATION);\n            }}\n          >\n            <MainItem\n              title={\"Marks publication\"}\n              active={\n                props.claiming.selectedClaimType !== \"all\" &&\n                props.claiming.selectedClaimType ===\n                  PlansTypeKeys.MARKS_PUBLICATION\n              }\n              count={countClaims(\n                props.claiming,\n                PlansTypeKeys.MARKS_PUBLICATION\n              )}\n            />\n          </div>\n          {/* PLACEMENT TRANSFER ================================= */}\n          <div\n            className=\"mt-2\"\n            onClick={() => {\n              props.setSelectedClaimType(PlansTypeKeys.PLACEMENT_TRANSFER);\n            }}\n          >\n            <MainItem\n              title={\"Placement\"}\n              active={\n                props.claiming.selectedClaimType !== \"all\" &&\n                props.claiming.selectedClaimType ===\n                  PlansTypeKeys.PLACEMENT_TRANSFER\n              }\n              count={countClaims(\n                props.claiming,\n                PlansTypeKeys.PLACEMENT_TRANSFER\n              )}\n            />\n          </div>\n        </section>\n      )}\n      {/* END AFTER LOADING DATA ================================== */}\n    </React.Fragment>\n  );\n};\n\nconst mapStateToProps = ({\n  auth,\n  claiming,\n}: StoreState): { auth: Auth; claiming: ClaimingReducerType } => {\n  return { auth, claiming };\n};\n\nexport default connect(mapStateToProps, {\n  GetClaimingTypes,\n  setSelectedClaimType,\n  getAllClaims,\n  PushPopupAlert,\n})(AdminFilterByType);\n","import axios from \"axios\";\nimport React, { Component } from \"react\";\nimport { VscLoading } from \"react-icons/vsc\";\nimport { connect } from \"react-redux\";\nimport { PushPopupAlert } from \"../../actions\";\nimport { updateSessionPlan } from \"../../actions/session\";\nimport { PopupAlertData } from \"../../components/Alert/Popup\";\nimport {\n  allPlanTypes,\n  PlansInterface,\n  PlansTypeInterface,\n  PlansTypeKeys,\n  SessionPlanInterface,\n  SessionPlanTypeStatus,\n} from \"../../interfaces\";\nimport { PopupAlertTheme } from \"../../interfaces/popupAlert\";\nimport { capitalizeFirstLetter } from \"../../shared/dataTest\";\nimport { API } from \"../../utils/api\";\nimport { DATE, errorToText } from \"../../utils/functions\";\n\nexport const isActivationAllowed = (thisPlans: PlansInterface): boolean => {\n  let today: Date = new Date(),\n    end_date = new Date(thisPlans.end_date);\n  if (end_date.getTime() >= today.getTime()) {\n    return true;\n  }\n  return false;\n};\n\nexport const getPlanTypeByKey = (\n  type_key: PlansTypeKeys\n): PlansTypeInterface | undefined => {\n  return allPlanTypes.find((item) => item.type_key === type_key);\n};\n\nexport const isPlanActive = (\n  viewThisSession: SessionPlanInterface,\n  thisPlan: PlansInterface\n): \"OPEN\" | \"CLOSED\" | \"WAITING\" => {\n  if (viewThisSession.is_active) {\n    let today = new Date(),\n      planEndDate = new Date(thisPlan.end_date),\n      planStartDate = new Date(thisPlan.start_date);\n    if (\n      planEndDate.getTime() >= today.getTime() &&\n      planStartDate.getTime() <= today.getTime() &&\n      thisPlan.type_status !== SessionPlanTypeStatus.CLOSED\n    ) {\n      return \"OPEN\";\n    } else if (\n      planStartDate.getTime() > today.getTime() &&\n      thisPlan.type_status !== SessionPlanTypeStatus.CLOSED\n    ) {\n      return \"WAITING\";\n    }\n  }\n  return \"CLOSED\";\n};\n\ntype SessionDetailsProps = {\n  viewThisSession: SessionPlanInterface;\n  setViewThisSession: (data: SessionPlanInterface) => void;\n\n  // REDUX ----------------\n  updateSessionPlan: Function;\n  PushPopupAlert: (alert: PopupAlertData) => void;\n};\n\ntype SessionDetailsState = {\n  loadingRequest: string;\n};\n\nexport class SessionDetails extends Component<\n  SessionDetailsProps,\n  SessionDetailsState\n> {\n  constructor(props: SessionDetailsProps) {\n    super(props);\n\n    this.state = {\n      loadingRequest: \"\",\n    };\n  }\n\n  handlePlanActivation = async (\n    session: SessionPlanInterface,\n    thisPlan: PlansInterface\n  ) => {\n    const newState: \"open\" | \"close\" = session.is_active ? \"close\" : \"open\";\n\n    if (!window.confirm(`Are you sure you want to ${newState} this plan?`)) {\n      return true;\n    }\n\n    if (!isActivationAllowed(thisPlan)) {\n      this.props.PushPopupAlert({\n        title: `Opening/Closing plan which has been expired is not allowed!`,\n        theme: PopupAlertTheme.warning,\n      });\n    }\n\n    let newData: SessionPlanInterface = {\n      session_plan_name: session.session_plan_name,\n      period: session.period,\n      is_active: session.is_active,\n      plans: [],\n      createdAt: session.createdAt,\n      updatedAt: session.updatedAt,\n      session_plan_id: session.session_plan_id,\n    };\n    for (const key in session.plans) {\n      if (Object.prototype.hasOwnProperty.call(session.plans, key)) {\n        const element = session.plans[key];\n        if (thisPlan.type_key === element.type_key) {\n          if (thisPlan.type_status === SessionPlanTypeStatus.OPEN) {\n            newData.plans.push({\n              type_id: thisPlan.type_id,\n              type_title: thisPlan.type_title,\n              type_key: thisPlan.type_key,\n              type_status: SessionPlanTypeStatus.CLOSED,\n              start_date: thisPlan.start_date,\n              end_date: thisPlan.end_date,\n              allowed_claim_level: thisPlan.allowed_claim_level,\n              _id: thisPlan._id,\n              history: thisPlan.history,\n            });\n          } else {\n            newData.plans.push({\n              type_id: thisPlan.type_id,\n              type_title: thisPlan.type_title,\n              type_key: thisPlan.type_key,\n              type_status: SessionPlanTypeStatus.OPEN,\n              start_date: thisPlan.start_date,\n              end_date: thisPlan.end_date,\n              allowed_claim_level: thisPlan.allowed_claim_level,\n              _id: thisPlan._id,\n              history: thisPlan.history,\n            });\n          }\n        } else {\n          newData.plans.push(element);\n        }\n      }\n    }\n\n    console.log(\"====================================\");\n    console.log({ newData });\n    console.log(\"====================================\");\n\n    this.setState({ loadingRequest: thisPlan.type_key });\n    try {\n      const res = await axios.put<SessionPlanInterface>(\n        `${API.CLAIMING}/session/${session.session_plan_id}`,\n        newData\n      );\n      this.props.updateSessionPlan(res.data);\n      this.props.setViewThisSession(res.data);\n      this.props.PushPopupAlert({\n        title: `Session ${newState}d successfully`,\n        theme: PopupAlertTheme.info,\n      });\n      this.setState({ loadingRequest: \"\" });\n      console.log(\"updateSessionPlan: \", res);\n    } catch (error) {\n      console.error({ error: errorToText(error) });\n      this.props.PushPopupAlert({\n        title: errorToText(error),\n        theme: PopupAlertTheme.warning,\n      });\n    }\n  };\n\n  render() {\n    return (\n      <table className=\"w-full bg-white shadow p-5\" id=\"session_content\">\n        <thead className=\"bg-white border-b-2 border-gray-300 text-gray-600 font-bold text-sm\">\n          <tr>\n            <td className=\"p-2\">#</td>\n            <td className=\"p-2\">Plan Type</td>\n            <td className=\"p-2\">Start Date</td>\n            <td className=\"p-2\">End date</td>\n            {this.props.viewThisSession.is_active && (\n              <td className=\"p-2\" colSpan={2}>\n                Status\n              </td>\n            )}\n          </tr>\n        </thead>\n        <tbody>\n          {/* WHILE DATA FOUND ====================== */}\n          {this.props.viewThisSession.plans.map((item, index) => (\n            <tr\n              key={index + item._id}\n              className={`border-b border-gray-200 hover:bg-gray-100`}\n            >\n              <td className=\"p-2 text-left whitespace-nowrap\">{index + 1}</td>\n              <td className=\"p-2 text-left\">\n                <span className=\"text-lg\">\n                  {getPlanTypeByKey(item.type_key) &&\n                    capitalizeFirstLetter(\n                      getPlanTypeByKey(item.type_key)!.type_title\n                    )}\n                </span>\n              </td>\n              <td className=\"p-2 text-left\">{DATE(item.start_date)}</td>\n              <td className=\"p-2 text-left\">{DATE(item.end_date)}</td>\n              {this.props.viewThisSession.is_active && (\n                <td>\n                  {isPlanActive(this.props.viewThisSession, item) === \"OPEN\" ? (\n                    <span className={`px-2 py-1 font-semibold text-green-700`}>\n                      Open\n                    </span>\n                  ) : isPlanActive(this.props.viewThisSession, item) ===\n                    \"WAITING\" ? (\n                    <span className={`px-2 py-1 font-semibold text-gray-700`}>\n                      Waiting\n                    </span>\n                  ) : (\n                    <span className={`px-2 py-1 font-semibold text-red-700`}>\n                      Closed\n                    </span>\n                  )}\n                </td>\n              )}\n              {this.props.viewThisSession.is_active && (\n                <td>\n                  {isActivationAllowed(item) && (\n                    <div className=\"flex items-center justify-center gap-1\">\n                      <div\n                        className={`relative ${\n                          this.state.loadingRequest.length > 0\n                            ? \"cursor-not-allowed\"\n                            : \"cursor-pointer\"\n                        }`}\n                        title={\n                          item.type_status === SessionPlanTypeStatus.OPEN\n                            ? \"Deactivating session\"\n                            : \"Activating session\"\n                        }\n                        onClick={() =>\n                          this.state.loadingRequest.length <= 0 &&\n                          this.handlePlanActivation(\n                            this.props.viewThisSession,\n                            item\n                          )\n                        }\n                      >\n                        <span className=\"block w-14 h-8 bg-gray-100 rounded-full shadow-inner\"></span>\n                        <span\n                          className={`absolute block w-6 h-6 mt-1 ml-1 rounded-full shadow inset-y-0 left-0 focus-within:shadow-outline transition-transform duration-500 ease-in-out ${\n                            item.type_status === SessionPlanTypeStatus.CLOSED\n                              ? \"bg-red-500\"\n                              : \"bg-green-500 transform translate-x-full\"\n                          }`}\n                        ></span>\n                      </div>\n                      {this.state.loadingRequest === item.type_key && (\n                        <VscLoading className=\"animate__animated animate__rotateIn animate__infinite\" />\n                      )}\n                    </div>\n                  )}\n                </td>\n              )}\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    );\n  }\n}\n\nexport default connect(null, {\n  updateSessionPlan,\n  PushPopupAlert,\n})(SessionDetails);\n","import React, { Fragment, useEffect, useState } from \"react\";\nimport { MdAdd, MdArrowBack, MdDelete } from \"react-icons/md\";\nimport { connect } from \"react-redux\";\nimport { PushPopupAlert } from \"../../../actions\";\nimport { Auth } from \"../../../actions/auth\";\nimport { DocumentClaimUser, getMyClaims } from \"../../../actions/claiming\";\nimport {\n  getDocumentCategory,\n  getDocumentSubCategory,\n  getDocumentFields,\n} from \"../../../actions/document\";\nimport { PopupAlertData } from \"../../../components/Alert/Popup\";\nimport { SideNavigation } from \"../../../components/Navigation/SideNavigation\";\nimport Table from \"../../../components/Table/Table\";\nimport {\n  CandidateClaimInterface,\n  claimApplicationsInterface,\n  ClaimStatus,\n  PlansTypeKeys,\n  SessionPlanInterface,\n} from \"../../../interfaces\";\nimport { PopupAlertTheme } from \"../../../interfaces/popupAlert\";\nimport { StoreState } from \"../../../reducers\";\nimport { ClaimingReducerType } from \"../../../reducers/claiming\";\nimport { DocumentReducerInterface } from \"../../../reducers/document\";\nimport { capitalizeFirstLetter } from \"../../../shared/dataTest\";\nimport ClaimHeaderTitle from \"../ClaimHeaderTitle\";\nimport ClaimDocView, { isClaimEvaluated } from \"../ClaimDocView\";\nimport FilterByType from \"./FilterByType\";\nimport ClaimForm, { ClaimGetDocTitle } from \"./ClaimForm\";\nimport NoResult, {\n  NoResultThemes,\n} from \"../../../components/NoResult/NoResult\";\nimport { filterClaimsByClaimType } from \"../Admin/AdminFilterByType\";\nimport ClaimApplView from \"../ClaimApplView\";\nimport { GetAllSessionPlans } from \"../../../actions/session\";\n\nexport const getDocumentById = (\n  candidateDocuments: DocumentClaimUser[],\n  document_id: string\n): DocumentClaimUser | null => {\n  let result: DocumentClaimUser | undefined = candidateDocuments.find(\n    (item) => item.doc_id === document_id\n  );\n  return result ? result : null;\n};\n\nexport const getApplicationById = (\n  candidateApplications: claimApplicationsInterface[],\n  application_id: string\n): claimApplicationsInterface | null => {\n  let result: claimApplicationsInterface | undefined =\n    candidateApplications.find(\n      (item) => item.application_id === application_id\n    );\n  return result ? result : null;\n};\n\nexport const getClaimById = (\n  claimList: CandidateClaimInterface[],\n  claim_id: string\n): CandidateClaimInterface | null => {\n  let result: CandidateClaimInterface | undefined = claimList.find(\n    (item) => item.id === claim_id\n  );\n  return result ? result : null;\n};\n\nexport enum ClaimTypesEnum {\n  application = \"application\",\n  document = \"document\",\n  exam = \"exam\",\n  marks_publication = \"marks publication\",\n  placement = \"placement\",\n}\nexport const whichClaimType = (\n  thisClaim: CandidateClaimInterface\n): ClaimTypesEnum | undefined => {\n  if (thisClaim.type_key === PlansTypeKeys.APPLICATION) {\n    return ClaimTypesEnum.application;\n  }\n  if (thisClaim.type_key === PlansTypeKeys.DOCUMENT_VALIDATION) {\n    return ClaimTypesEnum.document;\n  }\n  if (thisClaim.type_key === PlansTypeKeys.EXAMINATION) {\n    return ClaimTypesEnum.exam;\n  }\n  if (thisClaim.type_key === PlansTypeKeys.MARKS_PUBLICATION) {\n    return ClaimTypesEnum.marks_publication;\n  }\n  if (thisClaim.type_key === PlansTypeKeys.PLACEMENT_TRANSFER) {\n    return ClaimTypesEnum.placement;\n  }\n};\n\nexport const whichClaimStatus = (\n  thisClaim: CandidateClaimInterface\n): {\n  classes: string;\n  status: string;\n} => {\n  let classes: string, status: string;\n  switch (thisClaim.last_claim_status) {\n    case ClaimStatus.COMPLETED:\n      classes = \"text-blue-700 italic font-semiblod\";\n      status = capitalizeFirstLetter(ClaimStatus.COMPLETED.toLocaleLowerCase());\n      break;\n    case ClaimStatus.EVALUATED:\n      classes = \"text-green-700 italic font-semiblod\";\n      status = capitalizeFirstLetter(ClaimStatus.EVALUATED.toLocaleLowerCase());\n      break;\n\n    case ClaimStatus.DELETED:\n      classes = \"text-red-700 italic font-semiblod\";\n      status = capitalizeFirstLetter(ClaimStatus.DELETED.toLocaleLowerCase());\n      break;\n\n    default:\n      classes = \"text-yellow-700 italic font-semiblod\";\n      status = capitalizeFirstLetter(ClaimStatus.PENDING.toLocaleLowerCase());\n      break;\n  }\n\n  return { classes, status };\n};\n\nexport const displayDocClaimTitle = (\n  documentCategories: DocumentReducerInterface,\n  candidateDocuments: DocumentClaimUser[],\n  thisClaim: CandidateClaimInterface\n): string => {\n  let result: string = \"\";\n\n  // CHECK IF CLAIM IS FOR DOCUMENTS ===============================================\n  if (thisClaim.type_key === PlansTypeKeys.DOCUMENT_VALIDATION) {\n    let thisDoc = getDocumentById(candidateDocuments, thisClaim.claiming_on_id);\n    result = thisDoc\n      ? ClaimGetDocTitle(documentCategories, thisDoc).main\n      : \"Document not found\";\n  }\n  // END CHECK IF CLAIM IS FOR DOCUMENTS ===============================================\n  return result;\n};\n\nexport const displayClaimTitle = (\n  claiming: ClaimingReducerType,\n  documentReducer: DocumentReducerInterface,\n  thisClaim: CandidateClaimInterface\n): string => {\n  let result: string = thisClaim.claiming_on_id;\n\n  if (thisClaim.type_key === PlansTypeKeys.DOCUMENT_VALIDATION) {\n    result = displayDocClaimTitle(\n      documentReducer,\n      claiming.candidateDocuments!,\n      thisClaim\n    );\n  }\n  if (\n    thisClaim.type_key === PlansTypeKeys.APPLICATION &&\n    claiming.candidateApplications\n  ) {\n    let thisApplication = getApplicationById(\n      claiming.candidateApplications,\n      thisClaim.claiming_on_id\n    );\n    if (thisApplication) {\n      result = thisApplication.position.position_title;\n    } else {\n      result = \"Application not found\";\n    }\n  }\n\n  return result;\n};\n\ntype AppProps = {\n  auth: Auth;\n  claiming: ClaimingReducerType;\n  application_sessions: SessionPlanInterface[] | null;\n  documentReducer: DocumentReducerInterface;\n  getMyClaims: Function;\n  GetAllSessionPlans: Function;\n  getDocumentCategory: Function;\n  getDocumentSubCategory: Function;\n  getDocumentFields: Function;\n  PushPopupAlert: (alert: PopupAlertData) => void;\n};\n\nconst Index: React.FC<AppProps> = (props) => {\n  const [thisPeriod, setThisPeriod] = useState<SessionPlanInterface | null>(\n    null\n  );\n  const [loading, setLoading] = useState<boolean>(true);\n  const [loadingSession, setLoadingSession] = useState<boolean>(true);\n  const [loadingClaims, setLoadingClaims] = useState<boolean>(true);\n  const [periodChanged, setPeriodChanged] = useState<boolean>(false);\n  const [loadingDocuments, setLoadingDocuments] = useState<boolean>(true);\n  const [loadingClarifications, setLoadingClarifications] =\n    useState<boolean>(true);\n  const [loadingFields, setLoadingFields] = useState<boolean>(true);\n  const [viewClaim, setViewClaim] = useState<boolean>(false);\n  const [claimId, setClaimId] = useState<string | null>(null);\n  const [claimForm, setClaimForm] = useState<boolean>(false);\n\n  // FOR FORM ================\n  const [viewImage, setViewImage] = useState<boolean>(false);\n  const [loadingRequest, setLoadingRequest] = useState<boolean>(false);\n  const [reClaiming, setReClaiming] = useState<boolean>(false);\n  const [reClaimingMsg, setReClaimingMsg] = useState<string>(\"\");\n  const [formError, setFormError] = useState<{\n    element: string;\n    msg: string;\n  } | null>(null);\n\n  useEffect(() => {\n    // LOADING APPLICATION SESSION ====================================\n    if (props.application_sessions === null) {\n      props.GetAllSessionPlans((status: boolean, msg: string) => {\n        if (!status) {\n          setLoadingSession(false);\n          setLoading(false);\n          if (msg.length) {\n            props.PushPopupAlert({\n              title: msg,\n              theme: PopupAlertTheme.danger,\n            });\n          }\n        }\n      });\n    } else if (loadingSession) {\n      setLoading(false);\n      setLoadingSession(false);\n    }\n\n    // SETTING ACTIVE SESSION ==========================\n    if (thisPeriod === null && !loadingSession && props.application_sessions) {\n      let thisSession = props.application_sessions.find(\n        (item) => item.is_active === true\n      );\n      setThisPeriod(\n        thisSession\n          ? thisSession\n          : props.application_sessions[props.application_sessions.length - 1]\n      );\n    }\n\n    if (!props.documentReducer.documentCategory && loadingDocuments) {\n      props.getDocumentCategory();\n      setLoadingDocuments(false);\n    } else if (loadingDocuments) {\n      setLoadingDocuments(false);\n    }\n    if (!props.documentReducer.documentSubCategory && loadingClarifications) {\n      props.getDocumentSubCategory();\n      setLoadingClarifications(false);\n    } else if (loadingClarifications) {\n      setLoadingClarifications(false);\n    }\n    if (!props.documentReducer.documentFields && loadingFields) {\n      props.getDocumentFields();\n      setLoadingFields(false);\n    } else if (loadingFields) {\n      setLoadingFields(false);\n    }\n\n    // LOADING CLAIMING OF CURRENT CANDIDATES ================================\n    if (props.claiming.myClaims === null && thisPeriod !== null) {\n      props.getMyClaims(\n        props.auth.user.user_id,\n        thisPeriod.session_plan_id,\n        (status: boolean, msg: string) => {\n          !status && setLoadingClaims(status);\n          if (status === false && msg.length) {\n            props.PushPopupAlert({\n              title: msg,\n              theme: PopupAlertTheme.danger,\n            });\n          }\n        }\n      );\n    } else if (thisPeriod && loadingClaims) {\n      setLoadingClaims(false);\n    }\n  }, [\n    loadingClaims,\n    loadingClarifications,\n    loadingDocuments,\n    loadingFields,\n    loadingSession,\n    props,\n    thisPeriod,\n  ]);\n\n  if (loading === true || props.application_sessions === null) {\n    return (\n      <div className=\"text-center mt-7 font-bold text-4xl text-gray-400 animate-pulse\">\n        Loading Data...\n      </div>\n    );\n  }\n\n  const tableData = (): JSX.Element[] => {\n    if (\n      props.claiming.myClaims &&\n      props.claiming.candidateDocuments &&\n      props.claiming.claimTypes &&\n      !loadingDocuments &&\n      !loadingSession &&\n      !loadingClaims &&\n      !periodChanged\n    ) {\n      if (\n        filterClaimsByClaimType(\n          props.claiming.myClaims,\n          props.claiming.selectedClaimType\n        ).length <= 0\n      ) {\n        return [\n          <tr\n            className=\"border-b border-gray-200 group hover:bg-gray-50 cursor-pointer\"\n            key=\"key3201\"\n          >\n            <td className=\"px-3 py-1\">\n              <NoResult\n                theme={NoResultThemes.Light}\n                value={\"No claim found!\"}\n              />\n            </td>\n          </tr>,\n        ];\n      }\n      return filterClaimsByClaimType(\n        props.claiming.myClaims,\n        props.claiming.selectedClaimType\n      ).map((claim, index) => (\n        <tr\n          className=\"border-b border-gray-200 group hover:bg-gray-50 cursor-pointer\"\n          key={index + claim.id}\n          onClick={() => {\n            setViewClaim(true);\n            setClaimId(claim.id);\n          }}\n        >\n          <td className=\"px-3 py-1 whitespace-nowrap\">\n            {displayClaimTitle(props.claiming, props.documentReducer, claim)}\n          </td>\n          <td className=\"px-3 py-1 text-center whitespace-nowrap\">\n            {whichClaimType(claim) ? whichClaimType(claim) : \"-\"}\n          </td>\n          <td className=\"px-3 py-1 text-center whitespace-nowrap\">\n            <span\n              className={`inline-block rounded-full duration-300 text-xs font-semibold px-3 py-1 ${\n                whichClaimStatus(claim).classes\n              }`}\n            >\n              {whichClaimStatus(claim).status}\n            </span>\n          </td>\n          <td className=\"px-3 py-1 text-center whitespace-nowrap\">\n            <button className=\"btn bg-blue-500 text-white group-hover:bg-blue-600\">\n              View\n            </button>\n          </td>\n        </tr>\n      ));\n    }\n\n    return [\n      <tr key={43243} className=\"border-b border-gray-200\">\n        <td className=\"p-3 text-center whitespace-nowrap\">\n          <div className=\"w-full h-4 rounded bg-gray-200 animate__animated animate__pulse animate__delay-5s animate__infinite\"></div>\n        </td>\n        <td className=\"p-3 text-center whitespace-nowrap\">\n          <div className=\"w-full h-4 rounded bg-gray-200 animate__animated animate__pulse animate__delay-5s animate__infinite\"></div>\n        </td>\n        <td className=\"p-3 text-center whitespace-nowrap\">\n          <div className=\"w-full h-4 rounded bg-gray-200 animate__animated animate__pulse animate__delay-5s animate__infinite\"></div>\n        </td>\n        <td className=\"p-3 text-center whitespace-nowrap\">\n          <div className=\"w-full h-4 rounded bg-gray-200 animate__animated animate__pulse animate__delay-5s animate__infinite\"></div>\n        </td>\n      </tr>,\n      <tr key={43243343} className=\"border-b border-gray-200\">\n        <td className=\"p-3 text-center whitespace-nowrap\">\n          <div className=\"w-full h-4 rounded bg-gray-200 animate__animated animate__pulse animate__delay-5s animate__infinite\"></div>\n        </td>\n        <td className=\"p-3 text-center whitespace-nowrap\">\n          <div className=\"w-full h-4 rounded bg-gray-200 animate__animated animate__pulse animate__delay-5s animate__infinite\"></div>\n        </td>\n        <td className=\"p-3 text-center whitespace-nowrap\">\n          <div className=\"w-full h-4 rounded bg-gray-200 animate__animated animate__pulse animate__delay-5s animate__infinite\"></div>\n        </td>\n        <td className=\"p-3 text-center whitespace-nowrap\">\n          <div className=\"w-full h-4 rounded bg-gray-200 animate__animated animate__pulse animate__delay-5s animate__infinite\"></div>\n        </td>\n      </tr>,\n      <tr key={4327543} className=\"border-b border-gray-200\">\n        <td className=\"p-3 text-center whitespace-nowrap\">\n          <div className=\"w-full h-4 rounded bg-gray-200 animate__animated animate__pulse animate__delay-5s animate__infinite\"></div>\n        </td>\n        <td className=\"p-3 text-center whitespace-nowrap\">\n          <div className=\"w-full h-4 rounded bg-gray-200 animate__animated animate__pulse animate__delay-5s animate__infinite\"></div>\n        </td>\n        <td className=\"p-3 text-center whitespace-nowrap\">\n          <div className=\"w-full h-4 rounded bg-gray-200 animate__animated animate__pulse animate__delay-5s animate__infinite\"></div>\n        </td>\n        <td className=\"p-3 text-center whitespace-nowrap\">\n          <div className=\"w-full h-4 rounded bg-gray-200 animate__animated animate__pulse animate__delay-5s animate__infinite\"></div>\n        </td>\n      </tr>,\n    ];\n  };\n\n  const isDeleteAllowed = (thisCLaim: CandidateClaimInterface): boolean => {\n    if (!isClaimEvaluated(thisCLaim, 1)) {\n      return true;\n    }\n    return false;\n  };\n\n  const onPeriodChange = (period_id: string) => {\n    setPeriodChanged(true);\n    props.getMyClaims(\n      props.auth.user.user_id,\n      period_id,\n      (status: boolean, msg: string) => {\n        !status && setPeriodChanged(false);\n        if (status === false && msg.length) {\n          props.PushPopupAlert({\n            title: msg,\n            theme: PopupAlertTheme.danger,\n          });\n        }\n      }\n    );\n  };\n\n  const handleDelete = async () => {};\n\n  return (\n    <Fragment>\n      {/* {props.claiming.myClaims} */}\n      {/* SIDE NAVIGATION */}\n      {!viewClaim && (\n        <SideNavigation>\n          <button\n            className=\"btn mb-3 border-2 border-blue-500 hover:bg-blue-500 hover:text-white flex items-center flex-1 font-bold w-full focus:outline-none\"\n            onClick={() => setClaimForm(true)}\n            disabled={viewClaim || loading}\n          >\n            <MdAdd className=\"inline-block mr-1 text-xl font-bold\" />\n            <span>Claiming</span>\n          </button>\n\n          {/* FILTER SECTION */}\n          <FilterByType loadingClaims={loadingClaims} />\n          {/* END FILTER SECTION */}\n        </SideNavigation>\n      )}\n      {/* END SIDE NAVIGATION */}\n\n      {/* CLAIM TITLE ===================================== */}\n      {!viewClaim && (\n        <ClaimHeaderTitle\n          headerTitle={`${\n            props.claiming.selectedClaimType === \"all\"\n              ? \"All\"\n              : props.claiming.selectedClaimType ===\n                PlansTypeKeys.DOCUMENT_VALIDATION\n              ? \"Documents\"\n              : props.claiming.selectedClaimType === PlansTypeKeys.APPLICATION\n              ? \"Applications\"\n              : props.claiming.selectedClaimType === PlansTypeKeys.EXAMINATION\n              ? \"Exam\"\n              : props.claiming.selectedClaimType ===\n                PlansTypeKeys.MARKS_PUBLICATION\n              ? \"Marks publication\"\n              : props.claiming.selectedClaimType ===\n                PlansTypeKeys.PLACEMENT_TRANSFER\n              ? \"Placements\"\n              : \"\"\n          } Claiming`}\n          loading={loading}\n          loadingSession={loadingSession}\n          thisPeriod={thisPeriod}\n          setThisPeriod={setThisPeriod}\n          setLoadingSession={setLoadingSession}\n          application_sessions={props.application_sessions}\n          onPeriodChange={onPeriodChange}\n          periodChanged={periodChanged}\n        />\n      )}\n      {/* END CLAIM TITLE ===================================== */}\n\n      {!viewClaim && (\n        <section className=\"bg-white w-full p-1\">\n          {\n            <Table\n              columns={[\n                { columnTitle: \"\", alignText: \"left\", padding: \"p-3\" },\n                { columnTitle: \"\", alignText: \"left\", padding: \"p-3\" },\n                {\n                  columnTitle: \"\",\n                  alignText: \"left\",\n                  padding: \"p-3\",\n                },\n                {\n                  columnTitle: \"\",\n                  alignText: \"left\",\n                  padding: \"p-3\",\n                },\n                { columnTitle: \"\", alignText: \"left\", padding: \"p-3\" },\n              ]}\n              hideColumns={true}\n              rows={tableData}\n              pagination={true}\n              search={true}\n              thColor=\"gray\"\n              loading={loadingClaims}\n            />\n          }\n        </section>\n      )}\n\n      {/* view claim */}\n      {viewClaim &&\n        props.claiming.myClaims &&\n        claimId &&\n        getClaimById(props.claiming.myClaims, claimId) && (\n          <section className=\"bg-white w-full p-1 my-4\">\n            {/* VIEW CLAIM HEADER =============================== */}\n            <section className=\"flex items-center gap-2 py-2 border-b\">\n              <button\n                className={`ml-3 bg-gray-50 hover:bg-blue-100 rounded-full px-1 py-1 focus:outline-none ${\n                  loadingRequest ? \"cursor-not-allowed\" : \"cursor-pointer\"\n                } animate__animated animate__fadeIn`}\n                disabled={loadingRequest}\n                onClick={() => {\n                  setViewClaim(false);\n                  setViewImage(false);\n                  setLoadingRequest(false);\n                  setFormError(null);\n                  setReClaiming(false);\n                  setReClaimingMsg(\"\");\n                }}\n              >\n                <MdArrowBack className=\"w-7 h-7\" />\n              </button>\n              {isDeleteAllowed(\n                getClaimById(props.claiming.myClaims, claimId)!\n              ) && (\n                <button\n                  className={`bg-gray-50 hover:bg-blue-100 rounded-full px-1 py-1 focus:outline-none ${\n                    loadingRequest ? \"cursor-not-allowed\" : \"cursor-pointer\"\n                  } animate__animated animate__fadeIn`}\n                  disabled={loadingRequest}\n                  onClick={() => {\n                    handleDelete();\n                  }}\n                >\n                  <MdDelete className=\"w-7 h-7\" />\n                </button>\n              )}\n              {/* <div\n            className={`text-blue-600 font-extrabold ${\n              modalAction ? \"text-2xl\" : \"text-xl\"\n            } px-2`}\n          >\n            {modalAction === \"CREATE_POSITION\"\n              ? \"Creating new position\"\n              : modalAction === \"UPDATE_POSITION\"\n              ? \"Updating \" + positionTitle\n              : \"Positions\"}\n          </div> */}\n            </section>\n            {/* END VIEW CLAIM HEADER =============================== */}\n\n            <section className=\"my-2\">\n              {/* VIEWING CLAIM OF A DOCUMENT ===================== */}\n              {getClaimById(props.claiming.myClaims, claimId)!.type_key ===\n                PlansTypeKeys.DOCUMENT_VALIDATION &&\n              props.claiming.candidateDocuments &&\n              getDocumentById(\n                props.claiming.candidateDocuments,\n                getClaimById(props.claiming.myClaims, claimId)!.claiming_on_id\n              ) ? (\n                <ClaimDocView\n                  thisDoc={\n                    getDocumentById(\n                      props.claiming.candidateDocuments,\n                      getClaimById(props.claiming.myClaims, claimId)!\n                        .claiming_on_id\n                    )!\n                  }\n                  documentCategories={props.documentReducer}\n                  thisClaim={getClaimById(props.claiming.myClaims, claimId)!}\n                  viewImage={viewImage}\n                  setViewImage={setViewImage}\n                  loadingRequest={loadingRequest}\n                  setLoadingRequest={setLoadingRequest}\n                  reClaiming={reClaiming}\n                  setReClaiming={setReClaiming}\n                  reClaimingMsg={reClaimingMsg}\n                  setReClaimingMsg={setReClaimingMsg}\n                  formError={formError}\n                  setFormError={setFormError}\n                />\n              ) : (\n                getClaimById(props.claiming.myClaims, claimId)!.type_key ===\n                  PlansTypeKeys.DOCUMENT_VALIDATION && (\n                  <NoResult\n                    theme={NoResultThemes.Dark}\n                    value={\"Document not found\"}\n                  />\n                )\n              )}\n              {/* END VIEWING CLAIM OF A DOCUMENT ===================== */}\n\n              {/* ############################################################### */}\n\n              {/* VIEWING CLAIM OF AN APPLICATION ===================== */}\n              {getClaimById(props.claiming.myClaims, claimId)!.type_key ===\n                PlansTypeKeys.APPLICATION &&\n              props.claiming.candidateApplications &&\n              getApplicationById(\n                props.claiming.candidateApplications,\n                getClaimById(props.claiming.myClaims, claimId)!.claiming_on_id\n              ) ? (\n                <ClaimApplView\n                  thisApplication={\n                    getApplicationById(\n                      props.claiming.candidateApplications,\n                      getClaimById(props.claiming.myClaims, claimId)!\n                        .claiming_on_id\n                    )!\n                  }\n                  documentCategories={props.documentReducer}\n                  thisClaim={getClaimById(props.claiming.myClaims, claimId)!}\n                  viewPosition={viewImage}\n                  setViewPosition={setViewImage}\n                  loadingRequest={loadingRequest}\n                  setLoadingRequest={setLoadingRequest}\n                  reClaiming={reClaiming}\n                  setReClaiming={setReClaiming}\n                  reClaimingMsg={reClaimingMsg}\n                  setReClaimingMsg={setReClaimingMsg}\n                  formError={formError}\n                  setFormError={setFormError}\n                />\n              ) : (\n                getClaimById(props.claiming.myClaims, claimId)!.type_key ===\n                  PlansTypeKeys.APPLICATION && (\n                  <NoResult\n                    theme={NoResultThemes.Dark}\n                    value={\"Application not found\"}\n                  />\n                )\n              )}\n            </section>\n          </section>\n        )}\n      {/* end view claim */}\n\n      {/* CLAIM FORM  ################ */}\n      {claimForm && (\n        <ClaimForm formState={claimForm} setFormState={setClaimForm} />\n      )}\n    </Fragment>\n  );\n};\n\nconst mapStateToProps = ({\n  auth,\n  sessionPlan,\n  claiming,\n  document,\n}: StoreState): {\n  auth: Auth;\n  claiming: ClaimingReducerType;\n  application_sessions: SessionPlanInterface[] | null;\n  documentReducer: DocumentReducerInterface;\n} => {\n  return {\n    auth: auth,\n    claiming,\n    application_sessions: sessionPlan.allSessionPlans,\n    documentReducer: document,\n  };\n};\n\nexport const CandidateClaim = connect(mapStateToProps, {\n  getMyClaims,\n  GetAllSessionPlans,\n  getDocumentCategory,\n  getDocumentSubCategory,\n  getDocumentFields,\n  PushPopupAlert,\n})(Index);\n","import React, { useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Auth, PushPopupAlert } from \"../../../actions\";\nimport {\n  GetClaimingTypes,\n  getMyRejectedApplications,\n  getMyRejectedDocuments,\n  setSelectedClaimType,\n} from \"../../../actions/claiming\";\nimport { PopupAlertData } from \"../../../components/Alert/Popup\";\nimport { MainItem } from \"../../../components/Navigation/SideNavigation\";\nimport { ClaimStatus, PlansTypeKeys } from \"../../../interfaces\";\nimport { PopupAlertTheme } from \"../../../interfaces/popupAlert\";\nimport { StoreState } from \"../../../reducers\";\nimport { ClaimingReducerType } from \"../../../reducers/claiming\";\n\ntype FilterByTypeProps = {\n  // thisClaimType: ClaimTypesInterface | \"ALL\";\n  // setThisClaimType: React.Dispatch<\n  //   React.SetStateAction<ClaimTypesInterface | \"ALL\">\n  // >;\n  loadingClaims: boolean;\n  FC_CountByType?: Function;\n\n  // REDUX PROPS =======================================\n  auth: Auth;\n  claiming: ClaimingReducerType;\n  GetClaimingTypes: Function;\n  setSelectedClaimType: Function;\n  getMyRejectedApplications: Function;\n  getMyRejectedDocuments: Function;\n  PushPopupAlert: (alert: PopupAlertData) => void;\n};\n\nconst FilterByType: React.FC<FilterByTypeProps> = (props) => {\n  const [loading, setLoading] = useState<boolean>(true);\n  const [loadingRejectedApplications, setLoadingRejectedApplications] =\n    useState<boolean>(true);\n  const [loadingRejectedDocuments, setLoadingRejectedDocuments] =\n    useState<boolean>(true);\n  const [loadingClaimTypes, setLoadingClaimTypes] = useState<boolean>(true);\n\n  useEffect(() => {\n    if (props.claiming.candidateApplications === null) {\n      props.getMyRejectedApplications(\n        props.auth.user.user_id,\n        (status: boolean, msg: string) => {\n          if (status === false) {\n            if (msg.length > 0) {\n              props.PushPopupAlert({\n                title: msg,\n                theme: PopupAlertTheme.danger,\n              });\n            }\n            setLoadingRejectedApplications(false);\n          }\n        }\n      );\n    } else if (loadingRejectedApplications) {\n      setLoadingRejectedApplications(false);\n    }\n\n    if (props.claiming.candidateDocuments === null) {\n      console.log(\"filterrrrrrrrrrrrrrrrrrrr loadingRejectedDocuments\");\n      props.getMyRejectedDocuments((status: boolean, msg: string) => {\n        if (status === false) {\n          if (msg.length > 0) {\n            props.PushPopupAlert({\n              title: msg,\n              theme: PopupAlertTheme.danger,\n            });\n          }\n          setLoadingRejectedDocuments(false);\n        }\n      });\n    } else if (loadingRejectedDocuments) {\n      setLoadingRejectedDocuments(false);\n    }\n\n    if (props.claiming.claimTypes === null) {\n      props.GetClaimingTypes((status: boolean, msg: string) => {\n        if (status === false) {\n          if (msg.length > 0) {\n            props.PushPopupAlert({\n              title: msg,\n              theme: PopupAlertTheme.danger,\n            });\n          }\n          setLoadingClaimTypes(false);\n        }\n      });\n    } else if (loadingClaimTypes) {\n      setLoadingClaimTypes(false);\n    }\n\n    if (\n      !loadingRejectedApplications &&\n      !loadingRejectedDocuments &&\n      !loadingClaimTypes &&\n      loading\n    ) {\n      setLoading(false);\n    }\n  }, [\n    loading,\n    loadingClaimTypes,\n    loadingRejectedApplications,\n    loadingRejectedDocuments,\n    props,\n  ]);\n\n  const countClaims = (\n    claiming: ClaimingReducerType,\n    thisType: PlansTypeKeys | \"all\"\n  ): number => {\n    let result: number = 0;\n\n    if (claiming.myClaims && thisType === \"all\") {\n      result = claiming.myClaims.filter(\n        (item) =>\n          item.last_claim_status !== ClaimStatus.DELETED &&\n          item.last_claim_status !== ClaimStatus.COMPLETED\n      ).length;\n    }\n    if (claiming.myClaims && thisType !== \"all\") {\n      result = claiming.myClaims.filter(\n        (item) =>\n          item.type_key === thisType &&\n          item.last_claim_status !== ClaimStatus.DELETED &&\n          item.last_claim_status !== ClaimStatus.COMPLETED\n      ).length;\n    }\n\n    return result;\n  };\n\n  return (\n    <React.Fragment>\n      <span className=\"mt-2 text-sm\">Filter by claim type</span>\n      {/* WHILE LOADING DATA ================================== */}\n      {(loading || props.loadingClaims) && (\n        <section className=\"space-y-2\">\n          <div className=\"w-full h-7 rounded bg-gray-200 animate__animated animate__pulse animate__delay-5s animate__infinite\"></div>\n          <div className=\"w-full h-7 rounded bg-gray-200 animate__animated animate__pulse animate__delay-5s animate__infinite\"></div>\n          <div className=\"w-full h-7 rounded bg-gray-200 animate__animated animate__pulse animate__delay-5s animate__infinite\"></div>\n          <div className=\"w-full h-7 rounded bg-gray-200 animate__animated animate__pulse animate__delay-5s animate__infinite\"></div>\n        </section>\n      )}\n      {/* END WHILE LOADING DATA ================================== */}\n\n      {/* AFTER LOADING DATA ================================== */}\n      {!loading && !props.loadingClaims && (\n        <section>\n          {/* ALL ================================= */}\n          <div\n            className=\"mt-2\"\n            onClick={() => {\n              // props.setThisClaimType(\"ALL\");\n              props.setSelectedClaimType(\"all\");\n            }}\n          >\n            <MainItem\n              title=\"All\"\n              active={props.claiming.selectedClaimType === \"all\"}\n              count={countClaims(props.claiming, \"all\")}\n            />\n          </div>\n          {/* APPLICATION ================================= */}\n          <div\n            className=\"mt-2\"\n            onClick={() => {\n              // props.setThisClaimType(ClaimTypesInterface.DOCUMENT);\n              props.setSelectedClaimType(PlansTypeKeys.APPLICATION);\n            }}\n          >\n            <MainItem\n              title={\"Application\"}\n              active={\n                props.claiming.selectedClaimType !== \"all\" &&\n                props.claiming.selectedClaimType === PlansTypeKeys.APPLICATION\n              }\n              count={countClaims(props.claiming, PlansTypeKeys.APPLICATION)}\n            />\n          </div>\n          {/* DOCUMENT ================================= */}\n          <div\n            className=\"mt-2\"\n            onClick={() => {\n              props.setSelectedClaimType(PlansTypeKeys.DOCUMENT_VALIDATION);\n            }}\n          >\n            <MainItem\n              title={\"Document\"}\n              active={\n                props.claiming.selectedClaimType !== \"all\" &&\n                props.claiming.selectedClaimType ===\n                  PlansTypeKeys.DOCUMENT_VALIDATION\n              }\n              count={countClaims(\n                props.claiming,\n                PlansTypeKeys.DOCUMENT_VALIDATION\n              )}\n            />\n          </div>\n          {/* EXAMINATION ================================= */}\n          <div\n            className=\"mt-2\"\n            onClick={() => {\n              props.setSelectedClaimType(PlansTypeKeys.EXAMINATION);\n            }}\n          >\n            <MainItem\n              title={\"Exam\"}\n              active={\n                props.claiming.selectedClaimType !== \"all\" &&\n                props.claiming.selectedClaimType === PlansTypeKeys.EXAMINATION\n              }\n              count={countClaims(props.claiming, PlansTypeKeys.EXAMINATION)}\n            />\n          </div>\n          {/* MARKS PUBLICATION ================================= */}\n          <div\n            className=\"mt-2\"\n            onClick={() => {\n              props.setSelectedClaimType(PlansTypeKeys.MARKS_PUBLICATION);\n            }}\n          >\n            <MainItem\n              title={\"Marks publication\"}\n              active={\n                props.claiming.selectedClaimType !== \"all\" &&\n                props.claiming.selectedClaimType ===\n                  PlansTypeKeys.MARKS_PUBLICATION\n              }\n              count={countClaims(\n                props.claiming,\n                PlansTypeKeys.MARKS_PUBLICATION\n              )}\n            />\n          </div>\n          {/* PLACEMENT TRANSFER ================================= */}\n          <div\n            className=\"mt-2\"\n            onClick={() => {\n              props.setSelectedClaimType(PlansTypeKeys.PLACEMENT_TRANSFER);\n            }}\n          >\n            <MainItem\n              title={\"Placement\"}\n              active={\n                props.claiming.selectedClaimType !== \"all\" &&\n                props.claiming.selectedClaimType ===\n                  PlansTypeKeys.PLACEMENT_TRANSFER\n              }\n              count={countClaims(\n                props.claiming,\n                PlansTypeKeys.PLACEMENT_TRANSFER\n              )}\n            />\n          </div>\n          {/* <div\n            className=\"mt-2\"\n            onClick={() => {\n              props.setThisClaimType(ClaimTypesInterface.APPLICATION);\n            }}\n          >\n            <MainItem\n              title={capitalizeFirstLetter(ClaimTypesInterface.APPLICATION)}\n              active={props.thisClaimType === ClaimTypesInterface.APPLICATION}\n              count={countClaims(props.claiming).applications}\n            />\n          </div>\n          <div\n            className=\"mt-2\"\n            onClick={() => {\n              props.setThisClaimType(ClaimTypesInterface.PLACEMENT);\n            }}\n          >\n            <MainItem\n              title={capitalizeFirstLetter(ClaimTypesInterface.PLACEMENT)}\n              active={props.thisClaimType === ClaimTypesInterface.PLACEMENT}\n              count={countClaims(props.claiming).placement}\n            />\n          </div> */}\n        </section>\n      )}\n      {/* END AFTER LOADING DATA ================================== */}\n    </React.Fragment>\n  );\n};\n\nconst mapStateToProps = ({\n  auth,\n  claiming,\n}: StoreState): { auth: Auth; claiming: ClaimingReducerType } => {\n  return { auth, claiming };\n};\n\nexport default connect(mapStateToProps, {\n  GetClaimingTypes,\n  setSelectedClaimType,\n  getMyRejectedApplications,\n  getMyRejectedDocuments,\n  PushPopupAlert,\n})(FilterByType);\n","import axios from \"axios\";\nimport React, { useEffect, useState } from \"react\";\nimport { FaRegCheckCircle } from \"react-icons/fa\";\nimport { MdTurnedIn } from \"react-icons/md\";\nimport { RiArrowGoBackFill } from \"react-icons/ri\";\nimport { connect } from \"react-redux\";\nimport { PushPopupAlert } from \"../../actions\";\nimport { createReClaim } from \"../../actions/claiming\";\nimport { fetchUserAccess } from \"../../actions/users\";\nimport NoResult, { NoResultThemes } from \"../../components/NoResult/NoResult\";\nimport {\n  CandidateClaimInterface,\n  claimApplicationsInterface,\n  ClaimDecisionStatus,\n  ClaimStatus,\n} from \"../../interfaces\";\nimport { ApplicationStates } from \"../../interfaces/application\";\nimport { PopupAlertTheme } from \"../../interfaces/popupAlert\";\nimport { StoreState } from \"../../reducers\";\nimport { DocumentReducerInterface } from \"../../reducers/document\";\nimport { capitalizeFirstLetter, isEmptyOrSpaces } from \"../../shared/dataTest\";\nimport { UserInterface } from \"../../shared/interfaces\";\nimport { API } from \"../../utils/api\";\nimport { setAxiosToken } from \"../../utils/AxiosToken\";\nimport {\n  DATE,\n  errorToText,\n  showDate,\n  timestampToDate,\n} from \"../../utils/functions\";\nimport ViewRequirements from \"../Positions/ViewRequirements\";\nimport { getUserDocuments } from \"./Admin\";\nimport {\n  FC_ApplicationPositionDistinctCategory,\n  showEvaluator,\n} from \"./Candidate/ApplicationFormView\";\nimport { isClaimEvaluated } from \"./ClaimDocView\";\n\nconst isReclaimAllowed = (thisClaim: CandidateClaimInterface): boolean => {\n  if (thisClaim.claim_level === 1) {\n    const _thisClaim = thisClaim.claims.find((item) => item.level === 1);\n    if (_thisClaim) {\n      if (_thisClaim.decision_taken_status === ClaimDecisionStatus.REJECTED) {\n        return true;\n      }\n    }\n  }\n  return false;\n};\n\ntype ClaimDocViewProps = {\n  thisApplication: claimApplicationsInterface;\n  documentCategories: DocumentReducerInterface;\n  thisClaim: CandidateClaimInterface;\n  viewPosition: boolean;\n  setViewPosition: React.Dispatch<React.SetStateAction<boolean>>;\n  loadingRequest: boolean;\n  setLoadingRequest: React.Dispatch<React.SetStateAction<boolean>>;\n  reClaiming: boolean;\n  setReClaiming: React.Dispatch<React.SetStateAction<boolean>>;\n  reClaimingMsg: string;\n  setReClaimingMsg: React.Dispatch<React.SetStateAction<string>>;\n  formError: {\n    element: string;\n    msg: string;\n  } | null;\n  setFormError: React.Dispatch<\n    React.SetStateAction<{\n      element: string;\n      msg: string;\n    } | null>\n  >;\n\n  // REDUX DATA =====================\n  userList: UserInterface[];\n  fetchUserAccess: Function;\n  createReClaim: Function;\n  PushPopupAlert: Function;\n};\n\nconst ClaimDocView: React.FC<ClaimDocViewProps> = (props) => {\n  const [loadingUsers, setLoadingUsers] = useState(true);\n\n  useEffect(() => {\n    if (!props.userList.length && loadingUsers) {\n      setLoadingUsers(false);\n      props.fetchUserAccess();\n    } else if (loadingUsers) {\n      setLoadingUsers(false);\n    }\n  }, [loadingUsers, props]);\n\n  const handleSubmit = async () => {\n    if (isEmptyOrSpaces(props.reClaimingMsg)) {\n      return props.setFormError({\n        element: \"comment\",\n        msg: \"Claim comment is required!\",\n      });\n    }\n    if (!props.thisClaim) {\n      return props.PushPopupAlert({\n        title: \"Claim is required\",\n        theme: PopupAlertTheme.warning,\n      });\n    }\n\n    props.setLoadingRequest(true);\n    try {\n      setAxiosToken();\n      const res = await axios.put<CandidateClaimInterface>(\n        `${API.CLAIMING}/user/reclaim/${props.thisClaim.id}`,\n        {\n          reason: props.reClaimingMsg,\n        }\n      );\n      console.log({ res: res.data });\n      if (res.status === 201 || res.status === 200) {\n        props.createReClaim(res.data);\n        props.PushPopupAlert({\n          title: \"Claim sent successful\",\n          theme: PopupAlertTheme.success,\n        });\n        props.setReClaimingMsg(\"\");\n        props.setReClaiming(false);\n      }\n    } catch (error) {\n      console.error({ error });\n      props.PushPopupAlert({\n        title: errorToText(error),\n        theme: PopupAlertTheme.danger,\n      });\n    }\n    props.setLoadingRequest(false);\n  };\n\n  return (\n    <section className=\"\">\n      <div className=\"w-full bg-white px-4 py-1 divide-y-2 space-y-2\">\n        {/* DOCUMENT DETAILS ==================================================== */}\n        <section className=\"flex flex-col\">\n          <div className=\"flex items-center justify-between\">\n            <span className=\"text-blue-600 font-bold text-2xl\">\n              {props.thisApplication.position.position_title}\n            </span>\n            <button\n              type=\"button\"\n              className=\"bg-blue-200 hover:bg-blue-300 text-blue-700 group-hover:text-blue-800 py-1 px-2 mr-1 rounded text-sm\"\n              onClick={() => props.setViewPosition(!props.viewPosition)}\n            >\n              {props.viewPosition ? \"Hide\" : \"More\"}\n            </button>\n          </div>\n          <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n            <span className={`italic`}>Status:</span>\n            <span\n              className={`font-bold ${\n                props.thisClaim.previous\n                  ? props.thisClaim.previous.status ===\n                    ApplicationStates.Rejected\n                  : props.thisApplication.application_status ===\n                    ApplicationStates.Rejected\n                  ? \"text-yellow-900\"\n                  : \"text-blue-600\"\n              } rounded px-3 py-1`}\n            >\n              {props.thisClaim.previous\n                ? capitalizeFirstLetter(props.thisClaim.previous.status)\n                : capitalizeFirstLetter(\n                    props.thisApplication.application_status\n                  )}\n            </span>\n          </div>\n          <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n            <span className={`italic`}>Evaluated by:</span>\n            <span className=\"font-semibold\">\n              {loadingUsers ? (\n                <div className=\"w-24 h-3 rounded bg-gray-200 animate__animated animate__pulse animate__delay-5s animate__infinite\"></div>\n              ) : props.thisClaim.previous ? (\n                showEvaluator(\n                  props.userList,\n                  props.thisClaim.previous.evaluated_by\n                )\n              ) : (\n                showEvaluator(\n                  props.userList,\n                  props.thisApplication.override_by.user_id\n                )\n              )}\n            </span>\n          </div>\n          {false && (\n            <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n              <span className={`italic`}>Session:</span>\n              <span className=\"font-bold text-gray-900 py-1\">\n                {\n                  props.thisApplication.application_session\n                    .application_session_name\n                }\n              </span>\n            </div>\n          )}\n          <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n            <span className={`italic`}>Date:</span>\n            <span className=\"font-bold text-gray-900 py-1\">\n              {DATE(props.thisApplication.createdAt)}\n            </span>\n          </div>\n          <div className=\"flex items-start gap-2 text-sm text-gray-600\">\n            <span className={`italic`}>Reason:</span>\n            <span className=\"font-normal\">\n              {props.thisClaim.previous\n                ? props.thisClaim.previous.reason\n                : props.thisApplication.override_by.comment}\n            </span>\n          </div>\n\n          {/* DISPLAY POSITION ==================================================== */}\n          {props.viewPosition && (\n            <div className=\"w-full my-1 animate__animated animate__fadeIn rounded\">\n              <div className=\"bg-white w-full\">\n                <div className=\"text-gray-800 text-2xl font-bold my-2\">\n                  Position Details\n                </div>\n                <div className=\"flex items-center gap-2 text-base text-gray-600\">\n                  <span className={`italic`}>Desc:</span>\n                  <span className=\"font-semibold\">\n                    {props.thisApplication.position.description}\n                  </span>\n                </div>\n                <div className=\"flex items-center gap-2 text-base text-gray-600\">\n                  <span className={`italic`}>School level:</span>\n                  <span className=\"font-semibold\">\n                    {\n                      props.thisApplication.position.school_level_id\n                        .school_level_name\n                    }\n                  </span>\n                </div>\n                <div className=\"flex items-center gap-2 text-base text-gray-600\">\n                  <span className={`italic`}>Institute:</span>\n                  <span className=\"font-semibold\">\n                    {\n                      props.thisApplication.position.education_institute_id\n                        .education_category_title\n                    }\n                  </span>\n                </div>\n                <div className=\"flex items-center gap-2 text-base text-gray-600\">\n                  <span className={`italic`}>Courses:</span>\n                  <span className=\"flex items-center gap-2\">\n                    {props.thisApplication.position.courses.map(\n                      (item, index) => (\n                        <div\n                          key={index + item.course_id}\n                          className=\"flex items-center gap-1\"\n                        >\n                          <span className=\"font-semibold\">\n                            {item.course_name}\n                          </span>\n                          <span className=\"text-gray-600\">\n                            ({item.course_code})\n                          </span>\n                          {index !==\n                            props.thisApplication.position.courses.length - 1 &&\n                            \",\"}\n                        </div>\n                      )\n                    )}\n                  </span>\n                </div>\n\n                <div className=\"text-gray-800 text-2xl font-bold my-2\">\n                  Position Requirements\n                </div>\n                {props.thisApplication.position.requirements.length > 0 ? (\n                  FC_ApplicationPositionDistinctCategory(\n                    props.thisApplication.position,\n                    props.documentCategories\n                  ).DistinctCategoriesTemp.map((item, index) => (\n                    <div\n                      className=\"bg-gray-100props.thisApplication.position rounded p-2\"\n                      key={index + item.category_id}\n                    >\n                      <div className=\"flex items-center gap-2 text-2xl text-gray-500 font-bold\">\n                        <MdTurnedIn />\n                        <span>{item.category_title}</span>\n                      </div>\n                      <div className=\"border bg-white mt-1\">\n                        <ViewRequirements\n                          requirements={FC_ApplicationPositionDistinctCategory(\n                            props.thisApplication.position,\n                            props.documentCategories\n                          ).PositionsTemp.filter(\n                            (req) => req.category_id === item.category_id\n                          )}\n                        />\n                      </div>\n                    </div>\n                  ))\n                ) : (\n                  <NoResult\n                    theme={NoResultThemes.Dark}\n                    value={\"No requirements\"}\n                  ></NoResult>\n                )}\n              </div>\n            </div>\n          )}\n          {/* END DISPLAY POSITION ==================================================== */}\n        </section>\n        {/* END DOCUMENT DETAILS ==================================================== */}\n\n        {/* ################################################################################ */}\n\n        {/* CLAIM LEVELS DETAILS ==================================================== */}\n        {props.thisClaim.claims.length > 0 &&\n          props.thisClaim.claims.map((claim, index) => (\n            <section className=\"flex flex-col px-2 pt-3\" key={index + claim.id}>\n              {/* CLAIM COMMENT ==>> LEVEL 1 ==================================================== */}\n              <div className=\"flex flex-col items-start gap-2\">\n                <p>{claim.reason}</p>\n                <span className=\"text-gray-500 text-xs\">\n                  {showDate(claim.createdAt) +\n                    \" at \" +\n                    timestampToDate(claim.date_created).timeFR}\n                </span>\n              </div>\n\n              {/* RESPONSE OF LEVELS ======================================= */}\n              {isClaimEvaluated(props.thisClaim, claim.level) && (\n                <section className=\"mt-4\">\n                  <span className=\"text-gray-500 italic font-semibold\">\n                    Response (level {index + 1})\n                  </span>\n                  <div className=\"border-t-2\">\n                    <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n                      <span className={`italic`}>Status:</span>\n                      <span\n                        className={`font-bold ${\n                          claim.decision_taken_status ===\n                          ClaimDecisionStatus.REJECTED\n                            ? \"text-yellow-900\"\n                            : \"text-blue-600\"\n                        } rounded px-3 py-1`}\n                      >\n                        {capitalizeFirstLetter(\n                          claim.decision_taken_status.toLocaleLowerCase()\n                        )}\n                      </span>\n                    </div>\n                    <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n                      <span className={`italic`}>Evaluated by:</span>\n                      <span className=\"font-semibold\">\n                        {loadingUsers ? (\n                          <div className=\"w-24 h-3 rounded bg-gray-200 animate__animated animate__pulse animate__delay-5s animate__infinite\"></div>\n                        ) : getUserDocuments(\n                            props.userList,\n                            claim.evaluated_by\n                          ) ? (\n                          getUserDocuments(props.userList, claim.evaluated_by)!\n                            .user.user_info.fname +\n                          \" \" +\n                          getUserDocuments(props.userList, claim.evaluated_by)!\n                            .user.user_info.lname\n                        ) : (\n                          \"-\"\n                        )}\n                      </span>\n                    </div>\n                    <div className=\"flex items-start gap-2 text-sm text-gray-600\">\n                      <span className={`italic`}>Reason:</span>\n                      <span className=\"font-normal\">\n                        {claim.evaluation_comment}\n                      </span>\n                    </div>\n                  </div>\n                </section>\n              )}\n              {/* CLAIM COMMENT ==>> LEVELS ==================================================== */}\n            </section>\n          ))}\n        {/* END CLAIM LEVELS DETAILS ==================================================== */}\n      </div>\n      <section>\n        {!props.reClaiming && (\n          <div className=\"mx-4 mb-5 mt-3 flex items-center justify-between\">\n            <span\n              className={`${\n                props.thisClaim.last_claim_status === ClaimStatus.PENDING\n                  ? \"text-yellow-700\"\n                  : props.thisClaim.last_claim_status === ClaimStatus.DELETED\n                  ? \"text-red-700\"\n                  : \"text-green-700\"\n              } italic font-semibold`}\n            >\n              {capitalizeFirstLetter(\n                props.thisClaim.last_claim_status.toLocaleLowerCase()\n              )}\n            </span>\n\n            {isReclaimAllowed(props.thisClaim) && (\n              <button\n                className=\"btn btn-blue\"\n                onClick={() => props.setReClaiming(true)}\n                disabled={props.loadingRequest}\n              >\n                Reclaim\n              </button>\n            )}\n          </div>\n        )}\n        {/* right part */}\n        {props.reClaiming && (\n          <div className=\"flex flex-col md:flex-row items-end md:items-start gap-1 w-full\">\n            <div className=\"w-full px-2\">\n              <textarea\n                placeholder={`Reason of your reclaim...`}\n                cols={50}\n                rows={3}\n                className={`border border-${\n                  props.formError && props.formError.element === \"comment\"\n                    ? \"red\"\n                    : \"gray\"\n                }-400 rounded px-3 py-1 w-full focus:outline-none`}\n                style={{ resize: \"none\" }}\n                value={props.reClaimingMsg}\n                onChange={(e) => {\n                  props.setReClaimingMsg(e.target.value);\n                  props.setFormError(null);\n                }}\n                disabled={props.loadingRequest}\n              ></textarea>\n              {props.formError && props.formError.element === \"comment\" && (\n                <p className=\"text-red-800\">{props.formError.msg}</p>\n              )}\n            </div>\n            <div className=\"flex flex-row md:flex-col gap-1 max-w-full px-2\">\n              <button\n                className=\"bg-gray-700 hover:bg-gray-800 px-4 py-2 font-semibold rounded text-white inline-flex items-center space-x-2 focus:outline-none\"\n                onClick={() => {\n                  props.setReClaimingMsg(\"\");\n                  props.setReClaiming(false);\n                  props.setFormError(null);\n                }}\n                disabled={props.loadingRequest}\n              >\n                <RiArrowGoBackFill className=\"w-5 h-5\" />\n                <span>Back</span>\n              </button>\n              <button\n                className=\"bg-blue-700 hover:bg-blue-800 px-4 py-2 font-semibold rounded text-white inline-flex items-center space-x-2 focus:outline-none\"\n                disabled={props.loadingRequest}\n                onClick={() => handleSubmit()}\n              >\n                {props.loadingRequest ? (\n                  <div className=\"\">Loading...</div>\n                ) : (\n                  <div className=\"inline-flex items-center space-x-2 gap-1\">\n                    <FaRegCheckCircle className=\"w-5 h-5\" />\n                    <span>Confirm</span>\n                  </div>\n                )}\n              </button>\n            </div>\n          </div>\n        )}\n        {/* end right part */}\n      </section>\n    </section>\n  );\n};\n\nconst mapStateToProps = ({\n  users,\n}: StoreState): {\n  userList: UserInterface[];\n} => {\n  return { userList: users };\n};\n\nexport default connect(mapStateToProps, {\n  fetchUserAccess,\n  createReClaim,\n  PushPopupAlert,\n})(ClaimDocView);\n"],"sourceRoot":""}
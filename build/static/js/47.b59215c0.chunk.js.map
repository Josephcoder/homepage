{"version":3,"sources":["containers/UserManagement/index.tsx","components/Table/Table.tsx","actions/location.ts","actions/users.ts","actions/schools.ts","containers/UserManagement/UserList.tsx","containers/UserManagement/RoleList.tsx","containers/UserManagement/UserRole.tsx","shared/blank_profile.png","containers/UserManagement/UserAccess.tsx","containers/Locations/ViewDistricts.tsx","containers/Locations/ViewProvince.tsx","containers/Locations/ViewSectors.tsx","containers/Locations/Locations.tsx"],"names":["TabTypes","_UserManagement","props","setUserData","value","setState","userData","setLoadingUsers","loadingUsers","setUserTabs","userTabs","setFilerByRoleLevel","filterByRoleLevel","setOpenFilterByRole","openFilterByRole","setLoading","loading","setCurrentPage","currentPage","setLastLoadedPage","lastLoadedPage","setManageUser","manageUser","setChangeRole","changeRole","componentDidMount","accessRoles","length","fetchAccessRoles","schoolLevels","education_categories","loadEducationCategories","status","userList","users","data","fetchUserAccess","msg","isEmptyOrSpaces","PushPopupAlert","title","theme","PopupAlertTheme","danger","console","log","reloadUsers","page","state","includes","newUserList","concat","labelCounts","allUser","activeUser","filter","user","is_active","blockedUser","filterByRole","allData","default_access","system_user_role_id","getRoleById","roleList","roleId","find","item","generatePages","total_users","totalPages","Math","ceil","userPageLimit","_pages","Array","from","keys","map","i","slice","jumpToFirst","jumpToLast","moveBack","moveNext","className","onClick","index","disabled","random","dataResult","tabType","indexData","findIndex","Active_Users","Blocked_Users","All_Users","this","onChange","e","target","role","Object","values","user_info","fname","lname","email","userTypes","loadingUser","setLoadingUser","Component","UserManagment","connect","access","Table","table","tr","tableId","result","characters","charactersLength","charAt","floor","FC_makeID","useState","totalItems","setTotalItems","setTotalPages","pages","setPages","pageSize","setPageSize","startIndex","setStartIndex","endIndex","setEndIndex","useEffect","pagination","tablePagination","document","getElementById","getElementsByTagName","min","style","display","tableSize","search","searchBG","type","placeholder","filterType","td","rows","cols","toLowerCase","columns","textContent","innerText","indexOf","filterTable","Number","tableClass","rounded","id","hideColumns","thColor","column","padding","alignText","isSortAllowed","switching","x","y","shouldSwitch","colIndex","dir","switchcount","innerHTML","parentNode","insertBefore","sortThisColumn","columnTitle","aria-label","pageIndex","getAllRoom","callback","dispatch","a","axios","get","API","APPLICATION","res","ActionTypes","GET_ALL_ROOM","payload","error","errorToText","FC_CreateProvince","CREATE_PROVINCE","FC_UpdateProvince","UPDATE_PROVINCE","FC_DeleteProvince","DELETE_PROVINCE","FC_CreateDistrict","CREATE_DISTRICT","FC_UpdateDistrict","UPDATE_DISTRICT","FC_DeleteDistrict","DELETE_DISTRICT","FC_CreateSector","CREATE_SECTOR","FC_UpdateSector","UPDATE_SECTOR","FC_DeleteSector","DELETE_SECTOR","FC_CreateCenter","CREATE_CENTER","FC_UpdateCenter","UPDATE_CENTER","FC_DeleteCenter","DELETE_CENTER","FC_CreateRoom","CREATE_ROOM","FC_UpdateRoom","UPDATE_ROOM","FC_DeleteRoom","delete_room","DELETE_ROOM","documentValidationStatus","setAxiosToken","AUTH","users_response","FETCH_USERS_ACCESS","next","previous","user_error","blockUserToSystem","user_id","BLOCK_USER_TO_SYSTEM","unBlockUserToSystem","UNBLOCK_USER_TO_SYSTEM","assignRoleToUserAccess","ASSIGN_ROLE_TO_USER","customizeUserAccess","CUSTOMIZE_USER_ACCESS","resetUserAccess","RESET_USER_ACCESS","getSchools","GET_SCHOOLS","getSchoolById","schoolId","GET_SCHOOLS_BY_ID","createSchool","schools","CREATE_SCHOOL","updateSchool","UPDATE_SCHOOL","deleteSchool","DELETE_SCHOOL","fetchSchoolPosts","school_id","PLACEMENT","schoolPosts","FETCH_SCHOOL_POSTS","getSchoolPlacement","GET_SCHOOL_PLACEMENT","createSchoolPost","CREATE_SCHOOL_POST","updateSchoolPost","TYPE","UPDATE_SCHOOL_POST","fetchDistrictPosts","district_id","FETCH_DISTRICT_POSTS","getDistrictPlacement","GET_DISTRICT_PLACEMENT","getInstitutePlacementLimit","institute_id","session_id","GET_INSTITUTE_PLACEMENT_LIMIT","getDistrictPlacementLimit","GET_DISTRICT_PLACEMENT_LIMIT","updateInstitutePlacementLimit","UPDATE_INSTITUTE_PLACEMENT_LIMIT","ModalState","RoleList","searchInput","setSearchInput","setChooseRole","loadindRequest","handleSelectRole","capitalizeFirstLetter","UserRole","setRoleId","setSelectedRole","selectedRole","setProvinceId","provinceId","setDistrictId","districtId","setCenterId","centerId","setRoomId","roomId","setLoadingForm","loadingForm","setSchoolId","setChooseSchool","chooseSchool","setInstituteId","instituteId","setFormError","formError","setLoadingRequest","loadingRequest","chooseRole","setDefaultState","LOAD_province","LOAD_district","district_required","roomList","distinctDistrict","_id","province_id","room_required","LocationsInArray","room_id","center_id","school_required","schoolList","LOAD_school","userInfo","vvvvv","role_id","element","tableData","task","permitted","create","view","update","delete","colSpan","assignRoleToUser","preventDefault","window","confirm","education_institution_required","formData","education_institution_id","post","success","role_error","location","ids","districts","key","prototype","hasOwnProperty","call","keyDistrict","push","distinctCenter","rooms","forEach","distinctRoom","Loading","onSubmit","institute","education_institute_id","education_category_title","province","province_name","undefined","district","district_name","school","school_name","center","center_name","room","room_name","getUserById","userId","LocationData","locationTemp","p","d","centers","c","r","room_number","toString","capacity","occupied","UserList","setManageUserId","manageUserId","setLoadingSchool","loadingSchool","setLoadingRequestType","loadingRequestType","setRoomList","setRoomTables","roomTable","setCurrentAccess","currentAccess","setSchoolList","setUserAccess","userAccess","allRoom","sex","blockUser","actionType","patch","info","blockUser_ERROR","restUserAccess","warning","resetedAccess","reseting_user_access","src","photo","profile","alt","getInstituteById","NoResult","NoResultThemes","Dark","n_id","phone_number","custome_access","UserAccess","locations","roomLocation","_UserAccess","setViewPermission","viewPermission","setLoadindRequest","setCreatePermission","createPermission","setUpdatePermission","updatePermission","setDeletePermission","deletePermission","setLoadind","overrideUserAccess","overideAccess","findCustom","custom","handleCustomization","custome_user_access_id","customize_access","to","checked","districtName","setDistrictName","districtCode","setDistrictCode","setError","handleSubmit","actionTypes","thisProvince","province_code","district_code","sectors","setActionTypes","thisDistrict","setThisDistrict","doc_category_error","component","Modal","backDrop","Themes","default","close","displayClose","backDropClose","widthSizeClass","ModalSize","medium","body","footer","provinceTitle","setProvinceTitle","provinceCode","setProvinceCode","updated","setThisProvince","province_error","sectorName","setSectorName","sectorCode","setSectorCode","sector_name","sector_code","sector_id","thisSector","setThisSector","sector_error","handleDelete","sectorId","district_error","sector","Locations","ViewDistricts"],"mappings":"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","file":"static/js/47.b59215c0.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport { FaFilter } from \"react-icons/fa\";\nimport {\n  HiChevronDoubleLeft,\n  HiChevronDoubleRight,\n  HiChevronLeft,\n  HiChevronRight,\n} from \"react-icons/hi\";\nimport { IoMdArrowRoundBack } from \"react-icons/io\";\nimport { MdSupervisorAccount } from \"react-icons/md\";\nimport { connect } from \"react-redux\";\nimport {\n  schoolLevelsStoreInterface,\n  fetchAccessRoles,\n  loadEducationCategories,\n  PushPopupAlert,\n} from \"../../actions\";\nimport {\n  fetchUserAccess,\n  UserAccessInterface,\n  userPageLimit,\n} from \"../../actions/users\";\nimport { PopupAlertData } from \"../../components/Alert/Popup\";\nimport { PopupAlertTheme } from \"../../interfaces/popupAlert\";\nimport { StoreState } from \"../../reducers\";\nimport { isEmptyOrSpaces } from \"../../shared/dataTest\";\nimport {\n  UserInterface,\n  SystemUserRoleInterface,\n} from \"../../shared/interfaces\";\nimport UserList from \"./UserList\";\n\nenum TabTypes {\n  All_Users = \"All Users\",\n  Active_Users = \"Active Users\",\n  Blocked_Users = \"Blocked Users\",\n}\n\ninterface AppProps {\n  userList: UserAccessInterface;\n  accessRoles: SystemUserRoleInterface[];\n  schoolLevels: schoolLevelsStoreInterface;\n  loadEducationCategories: (callback: (loading: boolean) => void) => void;\n  fetchUserAccess: Function;\n  fetchAccessRoles: Function;\n  PushPopupAlert: (alert: PopupAlertData) => void;\n}\n\ninterface AppStates {\n  userTabs: TabTypes;\n  userData: UserInterface[];\n  loadingUsers: boolean;\n  filterByRoleLevel: \"all\" | string;\n  openFilterByRole: boolean;\n  loading: boolean;\n  manageUser: UserInterface | null;\n  changeRole: boolean;\n  currentPage: number;\n  lastLoadedPage: number[];\n}\n\nclass _UserManagement extends Component<AppProps, AppStates> {\n  constructor(props: AppProps) {\n    super(props);\n\n    this.state = {\n      userTabs: TabTypes.All_Users,\n      userData: [],\n      loadingUsers: true,\n      filterByRoleLevel: \"all\",\n      openFilterByRole: false,\n      loading: true,\n      manageUser: null,\n      changeRole: false,\n      currentPage: 1,\n      lastLoadedPage: [1],\n    };\n  }\n\n  setUserData = (value: UserInterface[]) => {\n    this.setState({ userData: value });\n  };\n\n  setLoadingUsers = (value: boolean) => {\n    this.setState({ loadingUsers: value });\n  };\n\n  setUserTabs = (value: TabTypes) => {\n    this.setState({ userTabs: value });\n  };\n\n  setFilerByRoleLevel = (value: \"all\" | string) => {\n    this.setState({ filterByRoleLevel: value });\n  };\n\n  setOpenFilterByRole = (value: boolean) => {\n    this.setState({ openFilterByRole: value });\n  };\n\n  setLoading = (value: boolean) => {\n    this.setState({ loading: value });\n  };\n\n  setCurrentPage = (value: number) => {\n    this.setState({ currentPage: value });\n  };\n\n  setLastLoadedPage = (value: number[]) => {\n    this.setState({ lastLoadedPage: value });\n  };\n\n  setManageUser = (value: UserInterface | null) => {\n    this.setState({ manageUser: value });\n  };\n\n  setChangeRole = (value: boolean) => {\n    this.setState({ changeRole: value });\n  };\n\n  componentDidMount = () => {\n    if (!this.props.accessRoles.length) {\n      this.props.fetchAccessRoles();\n    }\n\n    // LOADING EDUCATION CATEGORY =================================\n    if (\n      this.props.schoolLevels.education_categories === null ||\n      this.props.schoolLevels.education_categories.length === 0\n    ) {\n      this.props.loadEducationCategories((status: boolean) => {\n        this.setLoading(status);\n      });\n    } else {\n      this.setLoading(false);\n    }\n    // END LOADING EDUCATION CATEGORY =================================\n    if (!this.props.userList.users) {\n      this.props.fetchUserAccess(\n        1,\n        (status: boolean, msg: string, users?: UserInterface[]) => {\n          this.setLoadingUsers(status);\n          if (!status) {\n            if (!isEmptyOrSpaces(msg)) {\n              this.props.PushPopupAlert({\n                title: msg,\n                theme: PopupAlertTheme.danger,\n              });\n            }\n\n            if (users) {\n              this.setUserData(users);\n              this.setLoadingUsers(false);\n              console.log(\"====================================\");\n              console.log({ setLoadingUsers: status });\n              console.log(\"====================================\");\n            }\n          }\n        }\n      );\n    } else {\n      this.setUserData(this.props.userList.users[0].data);\n      this.setLoadingUsers(false);\n    }\n    // if (this.props.userList.length) {\n    //   console.log({ userList: this.props.userList });\n    //   // REAL CODES TO BE USED ======================\n    //   // setLabelCounts({\n    //   //   allUser: userList.length,\n    //   //   activeUser: userList.filter((user) => user.is_active).length,\n    //   //   blockedUser: userList.filter((user) => !user.is_active).length,\n    //   // });\n    // }\n  };\n\n  reloadUsers = (page: number) => {\n    if (!this.state.lastLoadedPage.includes(page)) {\n      this.props.fetchUserAccess(\n        page,\n        (status: boolean, msg: string, users?: UserInterface[]) => {\n          this.setLoadingUsers(status);\n          if (!status) {\n            if (!isEmptyOrSpaces(msg)) {\n              this.props.PushPopupAlert({\n                title: msg,\n                theme: PopupAlertTheme.danger,\n              });\n            }\n\n            if (users) {\n              let newUserList = [...this.state.userData];\n              newUserList = newUserList.concat(users);\n              this.setUserData(newUserList);\n              this.setLastLoadedPage([...this.state.lastLoadedPage, page]);\n              this.setLoadingUsers(false);\n              console.log(\"====================================\");\n              console.log({ setLoadingUsers: status });\n              console.log(\"====================================\");\n            }\n          }\n        }\n      );\n    }\n  };\n\n  labelCounts = (\n    data: UserInterface[]\n  ): {\n    allUser: number;\n    activeUser: number;\n    blockedUser: number;\n  } => {\n    return {\n      allUser: data.length,\n      activeUser: data.filter((user) => !user.is_active).length,\n      blockedUser: data.filter((user) => user.is_active).length,\n    };\n  };\n\n  filterByRole = (\n    allData: UserInterface[],\n    value: string = \"all\"\n  ): UserInterface[] => {\n    if (value !== \"all\") {\n      return allData.filter(\n        (user) =>\n          user.default_access &&\n          user.default_access.system_user_role_id === value\n      );\n    }\n    return allData;\n  };\n\n  getRoleById = (\n    roleList: SystemUserRoleInterface[],\n    roleId: string\n  ): SystemUserRoleInterface | undefined => {\n    return roleList.find((item) => item.system_user_role_id === roleId);\n  };\n  // countByRole = (value: string): number => {\n  //   if (this.props.userList.users) {\n  //     if (value === \"all\") {\n  //       return this.props.userList.users.length;\n  //     }\n  //     return this.props.userList.users.filter(\n  //       (user) =>\n  //         user.default_access &&\n  //         user.default_access.system_user_role_id === value\n  //     ).length;\n  //   }\n\n  //   return 0;\n  // };\n\n  generatePages = (total_users: number): JSX.Element => {\n    const totalPages = Math.ceil(total_users / userPageLimit);\n    const startPage: number = 1;\n    let _pages = Array.from(Array(totalPages + 1 - startPage).keys())\n      .map((i) => startPage + i)\n      .slice(0, 5);\n\n    if (totalPages > 4 && this.state.currentPage > 2) {\n      if (totalPages - this.state.currentPage > 1) {\n        _pages = [\n          this.state.currentPage - 2,\n          this.state.currentPage - 1,\n          this.state.currentPage,\n          this.state.currentPage + 1,\n          this.state.currentPage + 2,\n        ];\n      } else if (totalPages - this.state.currentPage === 1) {\n        _pages = [\n          this.state.currentPage - 3,\n          this.state.currentPage - 2,\n          this.state.currentPage - 1,\n          this.state.currentPage,\n          this.state.currentPage + 1,\n        ];\n      } else {\n        _pages = [\n          this.state.currentPage - 4,\n          this.state.currentPage - 3,\n          this.state.currentPage - 2,\n          this.state.currentPage - 1,\n          this.state.currentPage,\n        ];\n      }\n    }\n\n    let jumpToFirst: boolean = false,\n      jumpToLast: boolean = false,\n      moveBack: boolean = false,\n      moveNext: boolean = false;\n\n    if (totalPages > 1 && this.state.currentPage !== 1) {\n      moveBack = true;\n    }\n\n    if (totalPages > 1 && this.state.currentPage !== totalPages) {\n      moveNext = true;\n    }\n\n    if (totalPages > 3 && this.state.currentPage > 3) {\n      jumpToFirst = true;\n    }\n\n    if (\n      totalPages > 3 &&\n      this.state.currentPage !== totalPages &&\n      totalPages - this.state.currentPage > 2\n    ) {\n      jumpToLast = true;\n    }\n\n    return (\n      <div className=\"flex text-gray-700\">\n        {jumpToFirst && (\n          <button\n            className=\"h-12 w-12 ml-1 flex justify-center items-center rounded-full bg-gray-100 hover:bg-gray-200 cursor-pointer\"\n            onClick={() => this.setCurrentPage(1)}\n          >\n            <HiChevronDoubleLeft className=\"w-6 h-6\" />\n          </button>\n        )}\n        {moveBack && (\n          <button\n            className=\"h-12 w-12 ml-1 flex justify-center items-center rounded-full bg-gray-100 hover:bg-gray-200\"\n            onClick={() => this.setCurrentPage(this.state.currentPage - 1)}\n          >\n            <HiChevronLeft className=\"w-6 h-6\" />\n          </button>\n        )}\n        <div className=\"flex h-12 font-medium rounded-full mx-1 bg-gray-100\">\n          {_pages.map((item, index) => (\n            <button\n              className={`w-12 md:flex justify-center items-center gap-2 rounded-full ${\n                this.state.currentPage === item\n                  ? \"bg-gray-600 hover:bg-gray-500 text-white cursor-auto\"\n                  : \"hover:bg-gray-200\"\n              }`}\n              key={Math.random()}\n              disabled={this.state.currentPage === item}\n              onClick={() => {\n                this.setCurrentPage(item);\n                this.reloadUsers(item);\n              }}\n            >\n              {item}\n            </button>\n          ))}\n        </div>\n        {moveNext && (\n          <button\n            className=\"h-12 w-12 mr-1 flex justify-center items-center rounded-full bg-gray-100 hover:bg-gray-200 cursor-pointer\"\n            onClick={() => {\n              this.setCurrentPage(this.state.currentPage + 1);\n              this.reloadUsers(this.state.currentPage + 1);\n            }}\n          >\n            <HiChevronRight className=\"w-6 h-6\" />\n          </button>\n        )}\n        {jumpToLast && (\n          <button\n            className=\"h-12 w-12 mr-1 flex justify-center items-center rounded-full bg-gray-100 hover:bg-gray-200 cursor-pointer\"\n            onClick={() => {\n              this.setCurrentPage(totalPages);\n              this.reloadUsers(totalPages);\n            }}\n          >\n            <HiChevronDoubleRight className=\"w-6 h-6\" />\n          </button>\n        )}\n      </div>\n    );\n  };\n\n  dataResult = (tabType: TabTypes) => {\n    if (this.props.userList.users) {\n      const indexData = this.props.userList.users.findIndex(\n        (item) => item.page === this.state.currentPage\n      );\n      if (indexData >= 0) {\n        if (tabType === TabTypes.Active_Users) {\n          return this.props.userList.users[indexData].data.filter(\n            (user) => user.is_active\n          );\n        }\n\n        if (tabType === TabTypes.Blocked_Users) {\n          return this.props.userList.users[indexData].data.filter(\n            (user) => !user.is_active\n          );\n        }\n\n        return this.props.userList.users[indexData].data;\n      }\n    }\n    if (tabType === TabTypes.Active_Users) {\n      return this.state.userData.filter((user) => user.is_active);\n    }\n\n    if (tabType === TabTypes.Blocked_Users) {\n      return this.state.userData.filter((user) => !user.is_active);\n    }\n\n    return this.state.userData;\n  };\n\n  // userTabs: TabTypes = TabTypes.All_Users;\n\n  render() {\n    if (this.state.loading === true || this.props.userList.users === null) {\n      return (\n        <div className=\"text-center mt-7 font-bold text-4xl text-gray-400 animate-pulse\">\n          Loading users...\n        </div>\n      );\n    }\n\n    return (\n      <div>\n        {/* Title */}\n        {!this.state.manageUser && (\n          <div className=\"mt-3 rounded flex flex-row justify-between items-center\">\n            <div className=\"flex flex-row items-center gap-3\">\n              <MdSupervisorAccount className=\"text-6xl text-blue-600\" />\n              <div className=\"flex flex-col\">\n                <span className=\"text-blue-600 text-2xl font-bold\">\n                  System Users Management\n                </span>\n              </div>\n            </div>\n          </div>\n        )}\n\n        {/* --------------------------------------------------------- */}\n        <div\n          className={`bg-white shadow rounded border border-gray-2 p-2 w-full overflow-x-auto ${\n            this.state.manageUser ? \"mt-3\" : \"\"\n          }`}\n        >\n          {/* FILTER SECTION ================================ */}\n          {!this.state.manageUser && (\n            <section className=\"flex items-start gap-3\">\n              {/* FILTER BY ROLE ========================= */}\n              <div>\n                <div className=\"my-2 font-medium text-xl flex items-center gap-2\">\n                  <FaFilter />\n                  Filter by roles\n                </div>\n                <div className=\"flex flex-col mb-3 w-full\">\n                  <select\n                    className={`w-full bg-white text-grey-darker border-2 border-gray-500 rounded h-10 px-2 focus:outline-none focus:bg-gray-100 animate__animated animate__fadeIn ${\n                      this.state.loadingUsers && \"cursor-wait\"\n                    }`}\n                    onChange={(e: React.ChangeEvent<HTMLSelectElement>) =>\n                      this.setFilerByRoleLevel(e.target.value)\n                    }\n                    disabled={this.state.loadingUsers}\n                    value={this.state.filterByRoleLevel}\n                  >\n                    <option value=\"all\">All roles</option>\n                    {this.props.accessRoles.length > 0 ? (\n                      this.props.accessRoles.map((item, i) => (\n                        <option\n                          key={Math.random()}\n                          value={item.system_user_role_id}\n                        >\n                          {item.role}\n                        </option>\n                      ))\n                    ) : (\n                      <option value=\"\" disabled>\n                        No Role\n                      </option>\n                    )}\n                  </select>\n                </div>\n              </div>\n              {/* END FILTER BY ROLE ========================= */}\n              {/* ----------------------------------------------------- */}\n              {/* FILTER BY STATUS ========================= */}\n              <div>\n                <div className=\"my-2 font-medium text-xl flex items-center gap-2\">\n                  <FaFilter />\n                  Filter by status\n                </div>\n                <div className=\"flex items-start md:items-center justify-start md:justify-end gap-2\">\n                  <select\n                    className={`w-full bg-white text-grey-darker border-2 border-gray-500 rounded h-10 px-2 focus:outline-none focus:bg-gray-100 animate__animated animate__fadeIn ${\n                      this.state.loadingUsers && \"cursor-wait\"\n                    }`}\n                    onChange={(e: React.ChangeEvent<HTMLSelectElement>) =>\n                      this.setUserTabs(e.target.value as TabTypes)\n                    }\n                    disabled={this.state.loadingUsers}\n                  >\n                    {Object.values(TabTypes).map((item, index) => (\n                      <option key={Math.random()} value={item}>\n                        {item}\n                      </option>\n                    ))}\n                  </select>\n                </div>\n              </div>\n              {/* END FILTER BY STATUS ========================= */}\n            </section>\n          )}\n          {this.state.manageUser && (\n            <div className=\"flex items-center gap-3 mb-2 text-gray-600\">\n              <button\n                className=\"inline-block p-3 transition rounded-full bg-gray-400 ripple hover:bg-gray-600 focus:outline-none\"\n                onClick={() => {\n                  this.setManageUser(null);\n                  this.setChangeRole(false);\n                }}\n              >\n                <IoMdArrowRoundBack className=\"w-6 h-6 text-gray-50\" />\n              </button>\n\n              <div className=\"flex flex-col hidden\">\n                <span className=\"text-gray-800 font-semibold text-2xl\">\n                  {this.state.manageUser.user_info.fname +\n                    \" \" +\n                    this.state.manageUser.user_info.lname}\n                </span>\n                <span className=\"text-gray-600 font-normal text-sm\">\n                  {this.state.manageUser.email}\n                </span>\n              </div>\n            </div>\n          )}\n          {/* END FILTER SECTION ================================ */}\n          {this.state.userData && (\n            <section>\n              <UserList\n                users={this.filterByRole(\n                  this.dataResult(this.state.userTabs),\n                  this.state.filterByRoleLevel\n                )}\n                roleList={this.props.accessRoles}\n                userTypes={\n                  this.state.userTabs === TabTypes.Active_Users\n                    ? \"blocked\"\n                    : this.state.userTabs === TabTypes.Blocked_Users\n                    ? \"active\"\n                    : \"all\"\n                }\n                loadingUser={this.state.loadingUsers}\n                setLoadingUser={this.setLoadingUsers}\n                manageUser={this.state.manageUser}\n                setManageUser={this.setManageUser}\n                changeRole={this.state.changeRole}\n                setChangeRole={this.setChangeRole}\n                currentPage={this.state.currentPage}\n              />\n\n              {!this.state.loadingUsers && (\n                <div className=\"flex flex-col items-center mb-3\">\n                  {this.props.userList.total_users &&\n                    this.generatePages(this.props.userList.total_users)}\n                </div>\n              )}\n            </section>\n          )}\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = ({\n  users,\n  access,\n  schoolLevels,\n}: StoreState): {\n  userList: UserAccessInterface;\n  accessRoles: SystemUserRoleInterface[];\n  schoolLevels: schoolLevelsStoreInterface;\n} => {\n  return { userList: users, accessRoles: access.accessRoles, schoolLevels };\n};\n\nexport const UserManagment = connect(mapStateToProps, {\n  fetchUserAccess,\n  fetchAccessRoles,\n  loadEducationCategories,\n  PushPopupAlert,\n})(_UserManagement);\n","import React, { useEffect, useState } from \"react\";\nimport { BiSort } from \"react-icons/bi\";\nimport { MdNavigateBefore, MdNavigateNext, MdSearch } from \"react-icons/md\";\n\nconst FC_makeID = (length: number = 5): string => {\n  let result: string = \"\";\n  let characters: string =\n    \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\n  let charactersLength = characters.length;\n  for (let i: number = 0; i < length; i++) {\n    result += characters.charAt(Math.floor(Math.random() * charactersLength));\n  }\n  return result;\n};\n\nexport const sortThisColumn = (\n  tableId: string,\n  colIndex: number = 0,\n  dir: \"asc\" | \"desc\" = \"asc\"\n) => {\n  var table,\n    rows,\n    switching,\n    i,\n    x,\n    y,\n    shouldSwitch,\n    switchcount = 0;\n  table = document.getElementById(tableId) as HTMLTableElement;\n  switching = true;\n  /* Make a loop that will continue until\n  no switching has been done: */\n  if (table) {\n    while (switching) {\n      //start by saying: no switching is done:\n      switching = false;\n      rows = table.rows;\n      /*Loop through all table rows (except the\n    first, which contains table headers):*/\n      for (i = 1; i < rows.length - 1; i++) {\n        //start by saying there should be no switching:\n        shouldSwitch = false;\n        /*Get the two elements you want to compare,\n      one from current row and one from the next:*/\n        x = rows[i].getElementsByTagName(\"TD\")[colIndex];\n        y = rows[i + 1].getElementsByTagName(\"TD\")[colIndex];\n        /*check if the two rows should switch place,\n      based on the direction, asc or desc:*/\n        if (dir === \"asc\" && x && y) {\n          if (x.innerHTML.toLowerCase() > y.innerHTML.toLowerCase()) {\n            //if so, mark as a switch and break the loop:\n            shouldSwitch = true;\n            break;\n          }\n        } else if (dir === \"desc\" && x && y) {\n          if (x.innerHTML.toLowerCase() < y.innerHTML.toLowerCase()) {\n            //if so, mark as a switch and break the loop:\n            shouldSwitch = true;\n            break;\n          }\n        }\n      }\n      if (shouldSwitch && rows[i].parentNode) {\n        /*If a switch has been marked, make the switch\n      and mark that a switch has been done:*/\n        rows[i].parentNode!.insertBefore(rows[i + 1], rows[i]);\n        switching = true;\n        //Each time a switch is done, increase this count by 1:\n        switchcount++;\n      } else {\n        /*If no switching has been done AND the direction is \"asc\",\n      set the direction to \"desc\" and run the while loop again.*/\n        if (switchcount === 0 && dir === \"asc\") {\n          dir = \"desc\";\n          switching = true;\n        }\n      }\n      // if (i === 0) continue;\n      // rows.cells[i].style.backgroundColor = \"blue\";\n    }\n  }\n};\n\nexport interface TableColumnsInterface {\n  columnTitle: JSX.Element | string;\n  alignText: string;\n  padding?: string;\n  isSortAllowed?: boolean;\n}\n\ninterface TableProps {\n  columns: TableColumnsInterface[];\n  rows: Function;\n  hideColumns?: boolean;\n  pagination?: boolean;\n  search?: boolean;\n  tableSize?: string;\n  tableClass?: string;\n  tableId?: string;\n  rounded?: boolean;\n  searchBG?: string;\n  thColor?: string;\n  loading?: boolean;\n}\n\nconst Table: React.FC<TableProps> = (props) => {\n  const startPage = 1;\n  const tableId =\n    !props.tableId || props.tableId === \"myTable\" ? FC_makeID() : props.tableId;\n  let table: HTMLElement, tr: HTMLCollectionOf<HTMLTableRowElement>;\n  const [totalItems, setTotalItems] = useState<number>(0);\n  const [totalPages, setTotalPages] = useState<number>(1);\n  const [currentPage, setCurrentPage] = useState<number>(1);\n  const [pages, setPages] = useState<number[]>();\n  const [pageSize, setPageSize] = useState<number>(10);\n  const [startIndex, setStartIndex] = useState<number>(0);\n  const [endIndex, setEndIndex] = useState<number>(0);\n\n  useEffect(() => {\n    props.pagination && tablePagination();\n  });\n\n  const filterTable = (\n    data: string,\n    filterType?: \"default\" | \"field\"\n  ): void => {\n    var filter, tr, td, rows: number, cols: number, txtValue;\n    if (filterType === \"field\" && data === \"all\") data = \"\";\n    filter = data.toLowerCase();\n    table = document.getElementById(tableId!)!;\n    tr = table.getElementsByTagName(\"tr\");\n    for (rows = 0; rows < tr.length; rows++) {\n      for (cols = 0; cols < props.columns.length; cols++) {\n        td = tr[rows].getElementsByTagName(\"td\")[cols];\n        if (td) {\n          txtValue = td.textContent || td.innerText;\n          if (txtValue.toLowerCase().indexOf(filter) > -1) {\n            tr[rows].style.display = \"\";\n            break;\n          } else {\n            tr[rows].style.display = \"none\";\n          }\n        }\n      }\n    }\n  };\n\n  const tablePagination = (): void => {\n    table = document.getElementById(tableId)!;\n    tr = table.getElementsByTagName(\"tr\");\n    setTotalItems(tr.length);\n    setTotalPages(Math.ceil(totalItems / pageSize));\n\n    // calculate start and end item indexes on the current page\n    setStartIndex((currentPage - 1) * pageSize);\n    setEndIndex(Math.min(startIndex + pageSize - 1, totalItems - 1));\n\n    /**\n     * TODO!\n     * There is a problem with this condition\n     */\n    let _pages = Array.from(Array(totalPages + 1 - startPage).keys()).map(\n      (i) => startPage + i\n    );\n    if (!pages || _pages.length !== pages.length) {\n      setPages(_pages);\n    }\n\n    for (let i: number = 0; i < tr.length; i++) {\n      if (i >= startIndex && i <= endIndex) {\n        tr[i].style.display = \"\";\n      } else {\n        tr[i].style.display = \"none\";\n      }\n    }\n  };\n\n  return (\n    <div className={`${props.tableSize} overflow-x-auto`}>\n      {/* search box  */}\n      {props.search && (\n        <div className={`${props.searchBG} w-full mb-2`}>\n          {props.search && (\n            <div className=\"bg-white rounded flex items-center w-full p-2 border-2 border-gray-500\">\n              <MdSearch className=\"h-5 w-5 fill-current text-gray-400\" />\n              <input\n                type=\"search\"\n                placeholder=\"search\"\n                onChange={(e) => filterTable(e.target.value)}\n                className=\"w-full h-6 pl-4 text-sm outline-none focus:outline-none bg-white\"\n                disabled={props.loading}\n              />\n\n              {props.pagination && (\n                <div className=\"select\">\n                  <select\n                    className=\"text-base outline-none focus:outline-none bg-white\"\n                    onChange={(e) => setPageSize(Number(e.target.value))}\n                    disabled={props.loading}\n                  >\n                    <option value=\"10\">10</option>\n                    <option value=\"25\">25</option>\n                    <option value=\"50\">50</option>\n                    <option value=\"100\">100</option>\n                  </select>\n                </div>\n              )}\n            </div>\n          )}\n        </div>\n      )}\n      <div className=\"overflow-x-auto w-full\">\n        <table\n          className={\n            props.tableClass\n              ? props.tableClass\n              : `w-full shadow ${\n                  props.rounded && \"sm:rounded-lg\"\n                } table-auto order-table`\n          }\n          id={tableId}\n        >\n          {!props.hideColumns && (\n            <thead className=\"bg-white border-b-2 border-gray-300 text-gray-600 font-bold text-base\">\n              <tr\n                className={`text-left tracking-wide bg-${props.thColor}-100 border-b-2 border-${props.thColor}-500 text-${props.thColor}-600`}\n              >\n                {props.columns.map((column, index) => (\n                  <th\n                    key={index}\n                    className={`${column.padding} text-${\n                      column.alignText\n                    } px-3 py-2 ${column.isSortAllowed && \"cursor-pointer\"}`}\n                    onClick={() =>\n                      column.isSortAllowed && sortThisColumn(tableId, index)\n                    }\n                  >\n                    <div className=\"flex items-center gap-1\">\n                      {column.columnTitle}\n                      {column.isSortAllowed && <BiSort />}\n                    </div>\n                  </th>\n                ))}\n              </tr>\n            </thead>\n          )}\n          <tbody id=\"table-data\" className=\"bg-white text-black text-base\">\n            {props.rows()}\n          </tbody>\n        </table>\n        {props.pagination && (\n          <div className=\"sm:flex-1 sm:flex sm:items-center sm:justify-between mt-4 work-sans\">\n            <div>\n              <span className=\"text-xs xs:text-sm text-gray-900\">\n                Showing 1 to {pageSize} of {totalItems - 1} Entries\n              </span>\n            </div>\n            <div>\n              <nav className=\"inline-flex shadow-sm\">\n                <div>\n                  <button\n                    type=\"button\"\n                    className={`inline-flex items-center px-2 py-2 rounded-l-md border border-gray-300 text-sm font-medium text-gray-500 ${\n                      currentPage !== 1 && \"bg-white\"\n                    }`}\n                    aria-label=\"Previous\"\n                    disabled={currentPage === 1 || props.loading}\n                    onClick={() => setCurrentPage(currentPage - 1)}\n                  >\n                    <MdNavigateBefore className=\"h-5 w-5\" />\n                  </button>\n                </div>\n                <div>\n                  {pages &&\n                    pages.map((page, pageIndex) => (\n                      <button\n                        key={pageIndex}\n                        className={`-ml-px inline-flex items-center px-4 py-2 border border-gray-300 text-sm font-medium text-gray-700 ${\n                          page !== currentPage\n                            ? \"bg-white\"\n                            : \"bg-gray-100 cursor-default\"\n                        }`}\n                        disabled={page === currentPage || props.loading}\n                        onClick={() => setCurrentPage(page)}\n                      >\n                        {page}\n                      </button>\n                    ))}\n                </div>\n                <div>\n                  <button\n                    type=\"button\"\n                    className={`inline-flex items-center px-2 py-2 rounded-r-md border border-gray-300 text-sm leading-5 font-medium text-gray-500 ${\n                      currentPage !== totalPages && \"bg-white\"\n                    }`}\n                    aria-label=\"Next\"\n                    disabled={currentPage === totalPages || props.loading}\n                    onClick={() => setCurrentPage(currentPage + 1)}\n                  >\n                    <MdNavigateNext className=\"h-5 w-5\" />\n                  </button>\n                </div>\n              </nav>\n            </div>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default Table;\n","import axios from \"axios\";\nimport { Dispatch } from \"redux\";\nimport { ActionTypes } from \"./types\";\nimport { API } from \"../utils/api\";\nimport {\n  CentersInterface,\n  DistrictInterface,\n  RoomLocationInterface,\n  RoomsInterface,\n  SectorInterface,\n} from \"../shared/interfaces\";\nimport { errorToText } from \"../utils/errors\";\n\n/**\n * * ****************************** INTERFACES *****************************\n */\n\nexport interface getAllRoomActions {\n  type: ActionTypes.GET_ALL_ROOM;\n  payload: RoomLocationInterface[];\n}\n\nexport interface createProvinceActions {\n  type: ActionTypes.CREATE_PROVINCE;\n  payload: RoomLocationInterface;\n}\n\nexport interface updateProvinceActions {\n  type: ActionTypes.UPDATE_PROVINCE;\n  payload: {\n    province_id: string;\n    province_name: string;\n    provice_code: number;\n  };\n}\n\nexport interface deleteProvinceActions {\n  type: ActionTypes.DELETE_PROVINCE;\n  payload: string;\n}\n\n// ============ DISTRICT =================\nexport interface createDistrictActions {\n  type: ActionTypes.CREATE_DISTRICT;\n  payload: { province_id: string; data: DistrictInterface };\n}\n\nexport interface updateDistrictActions {\n  type: ActionTypes.UPDATE_DISTRICT;\n  payload: {\n    province_id: string;\n    district_id: string;\n    district_name: string;\n    district_code: number;\n  };\n}\n\nexport interface deleteDistrictActions {\n  type: ActionTypes.DELETE_DISTRICT;\n  payload: { province_id: string; district_id: string };\n}\n\n// ============ SECTOR =================\nexport interface createSectorActions {\n  type: ActionTypes.CREATE_SECTOR;\n  payload: {\n    province_id: string;\n    district_id: string;\n    data: SectorInterface;\n  };\n}\n\nexport interface updateSectorActions {\n  type: ActionTypes.UPDATE_SECTOR;\n  payload: {\n    province_id: string;\n    district_id: string;\n    sector_id: string;\n    sector_name: string;\n    sector_code: number;\n  };\n}\n\nexport interface deleteSectorActions {\n  type: ActionTypes.DELETE_SECTOR;\n  payload: { province_id: string; district_id: string; sector_id: string };\n}\n\n// ============ CENTERS =================\nexport interface createCenterActions {\n  type: ActionTypes.CREATE_CENTER;\n  payload: {\n    province_id: string;\n    district_id: string;\n    data: CentersInterface;\n  };\n}\n\nexport interface updateCenterActions {\n  type: ActionTypes.UPDATE_CENTER;\n  payload: {\n    province_id: string;\n    district_id: string;\n    examination_center_id: string;\n    center_name: string;\n  };\n}\n\nexport interface deleteCenterActions {\n  type: ActionTypes.DELETE_CENTER;\n  payload: { province_id: string; district_id: string; center_id: string };\n}\n\n// ============ ROOMS =================\nexport interface createRoomActions {\n  type: ActionTypes.CREATE_ROOM;\n  payload: {\n    province_id: string;\n    district_id: string;\n    center_id: string;\n    data: RoomsInterface;\n  };\n}\n\nexport interface updateRoomActions {\n  type: ActionTypes.UPDATE_ROOM;\n  payload: {\n    province_id: string;\n    district_id: string;\n    center_id: string;\n    room_id: string;\n    room_number: number;\n    capacity: number;\n  };\n}\n\nexport interface deleteRoomActions {\n  type: ActionTypes.DELETE_ROOM;\n  payload: {\n    province_id: string;\n    district_id: string;\n    center_id: string;\n    room_id: string;\n  };\n}\n\nexport type RoomActionType =\n  | getAllRoomActions\n  | createProvinceActions\n  | updateProvinceActions\n  | deleteProvinceActions\n  | createDistrictActions\n  | updateDistrictActions\n  | deleteDistrictActions\n  | createSectorActions\n  | updateSectorActions\n  | deleteSectorActions\n  | createCenterActions\n  | updateCenterActions\n  | deleteCenterActions\n  | createRoomActions\n  | updateRoomActions\n  | deleteRoomActions;\n\n/**\n * * ****************************** ACTIONS *****************************\n */\n\nexport const getAllRoom = (callback: Function) => {\n  return async (dispatch: Dispatch) => {\n    callback(true, \"\");\n    try {\n      const res = await axios.get<RoomLocationInterface[]>(\n        `${API.APPLICATION}/roomlocation`\n      );\n      dispatch<getAllRoomActions>({\n        type: ActionTypes.GET_ALL_ROOM,\n        payload: res.data,\n      });\n      console.log(\"====================================\");\n      console.log({ res: res.data });\n      console.log(\"====================================\");\n      callback(false, \"\", res.data);\n    } catch (error) {\n      console.error(\"Err: \", error);\n      callback(false, errorToText(error));\n    }\n  };\n};\n\nexport const FC_CreateProvince = (data: RoomLocationInterface) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<createProvinceActions>({\n      type: ActionTypes.CREATE_PROVINCE,\n      payload: data,\n    });\n  };\n};\n\nexport const FC_UpdateProvince = (data: {\n  province_id: string;\n  province_name: string;\n  provice_code: number;\n}) => {\n  console.log({ data });\n  return async (dispatch: Dispatch) => {\n    dispatch<updateProvinceActions>({\n      type: ActionTypes.UPDATE_PROVINCE,\n      payload: data,\n    });\n  };\n};\n\nexport const FC_DeleteProvince = (data: string) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<deleteProvinceActions>({\n      type: ActionTypes.DELETE_PROVINCE,\n      payload: data,\n    });\n  };\n};\n\n// DISTRICT =================\nexport const FC_CreateDistrict = (data: {\n  province_id: string;\n  data: DistrictInterface;\n}) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<createDistrictActions>({\n      type: ActionTypes.CREATE_DISTRICT,\n      payload: data,\n    });\n  };\n};\n\nexport const FC_UpdateDistrict = (data: {\n  province_id: string;\n  district_id: string;\n  district_name: string;\n  district_code: number;\n}) => {\n  console.log({ data });\n  return async (dispatch: Dispatch) => {\n    dispatch<updateDistrictActions>({\n      type: ActionTypes.UPDATE_DISTRICT,\n      payload: data,\n    });\n  };\n};\n\nexport const FC_DeleteDistrict = (data: {\n  province_id: string;\n  district_id: string;\n}) => {\n  console.log({ data });\n  return async (dispatch: Dispatch) => {\n    dispatch<deleteDistrictActions>({\n      type: ActionTypes.DELETE_DISTRICT,\n      payload: data,\n    });\n  };\n};\n\n// SECTOR =================\nexport const FC_CreateSector = (data: {\n  province_id: string;\n  district_id: string;\n  data: SectorInterface;\n}) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<createSectorActions>({\n      type: ActionTypes.CREATE_SECTOR,\n      payload: data,\n    });\n  };\n};\n\nexport const FC_UpdateSector = (data: {\n  province_id: string;\n  district_id: string;\n  sector_id: string;\n  sector_name: string;\n  sector_code: number;\n}) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<updateSectorActions>({\n      type: ActionTypes.UPDATE_SECTOR,\n      payload: data,\n    });\n  };\n};\n\nexport const FC_DeleteSector = (data: {\n  province_id: string;\n  district_id: string;\n  sector_id: string;\n}) => {\n  console.log({ data });\n  return async (dispatch: Dispatch) => {\n    dispatch<deleteSectorActions>({\n      type: ActionTypes.DELETE_SECTOR,\n      payload: data,\n    });\n  };\n};\n\n// CENTERS =================\nexport const FC_CreateCenter = (data: {\n  province_id: string;\n  district_id: string;\n  data: CentersInterface;\n}) => {\n  console.log({ data });\n  return async (dispatch: Dispatch) => {\n    dispatch<createCenterActions>({\n      type: ActionTypes.CREATE_CENTER,\n      payload: data,\n    });\n  };\n};\n\nexport const FC_UpdateCenter = (data: {\n  province_id: string;\n  district_id: string;\n  examination_center_id: string;\n  center_name: string;\n}) => {\n  console.log({ data });\n  return async (dispatch: Dispatch) => {\n    dispatch<updateCenterActions>({\n      type: ActionTypes.UPDATE_CENTER,\n      payload: data,\n    });\n  };\n};\n\nexport const FC_DeleteCenter = (data: {\n  province_id: string;\n  district_id: string;\n  center_id: string;\n}) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<deleteCenterActions>({\n      type: ActionTypes.DELETE_CENTER,\n      payload: data,\n    });\n  };\n};\n\n// ROOM =================\nexport const FC_CreateRoom = (data: {\n  province_id: string;\n  district_id: string;\n  center_id: string;\n  data: RoomsInterface;\n}) => {\n  console.log({ data });\n  return async (dispatch: Dispatch) => {\n    dispatch<createRoomActions>({\n      type: ActionTypes.CREATE_ROOM,\n      payload: data,\n    });\n  };\n};\n\nexport const FC_UpdateRoom = (data: {\n  province_id: string;\n  district_id: string;\n  center_id: string;\n  room_id: string;\n  room_number: number;\n  capacity: number;\n}) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<updateRoomActions>({\n      type: ActionTypes.UPDATE_ROOM,\n      payload: data,\n    });\n  };\n};\n\nexport const FC_DeleteRoom = (data: {\n  province_id: string;\n  district_id: string;\n  center_id: string;\n  room_id: string;\n}) => {\n  console.log({ delete_room: data });\n  return async (dispatch: Dispatch) => {\n    dispatch<deleteRoomActions>({\n      type: ActionTypes.DELETE_ROOM,\n      payload: data,\n    });\n  };\n};\n","import axios from \"axios\";\nimport { Dispatch } from \"redux\";\nimport { ActionTypes } from \"./types\";\nimport {\n  AssignRoleToUserActionInterface,\n  CustomeAccessInterface,\n  UserInterface,\n} from \"../shared/interfaces\";\nimport { API } from \"../utils/api\";\nimport { setAxiosToken } from \"../utils/AxiosToken\";\nimport { errorToText } from \"../utils/errors\";\n\nexport const userPageLimit: number = 30;\n\n/**\n * * ****************************** INTERFACES *****************************\n */\n\nexport interface FetchUsersAction {\n  type: ActionTypes.FETCH_USERS_ACCESS;\n  payload: UserAccessInterface;\n}\n\nexport interface BlockUserToSystem {\n  type: ActionTypes.BLOCK_USER_TO_SYSTEM | ActionTypes.UNBLOCK_USER_TO_SYSTEM;\n  payload: { id: string; page: number };\n}\n\nexport interface AssignRoleToUserAction {\n  type: ActionTypes.ASSIGN_ROLE_TO_USER;\n  payload: { data: AssignRoleToUserActionInterface; page: number };\n}\n\nexport interface CustomizeUserAccessAction {\n  type: ActionTypes.CUSTOMIZE_USER_ACCESS;\n  payload: { data: CustomeAccessInterface; page: number };\n}\n\nexport interface ResetUserAccessAction {\n  type: ActionTypes.RESET_USER_ACCESS;\n  payload: { user_id: string; page: number };\n}\n\nexport type fetchUserAccessInterface = {\n  users: UserInterface[] | null;\n  next: {\n    page: number;\n    limit: number;\n  } | null;\n  previous: {\n    page: number;\n    limit: number;\n  } | null;\n  total_users: number;\n};\n\nexport type UserAccessInterface = {\n  users: { data: UserInterface[]; page: number }[] | null;\n  next: {\n    page: number;\n    limit: number;\n  } | null;\n  previous: {\n    page: number;\n    limit: number;\n  } | null;\n  total_users: number;\n};\n\nexport enum documentValidationStatus {\n  waiting = \"waiting\",\n  approved = \"approved\",\n  rejected = \"rejected\",\n}\n\nexport interface VerifyDocumentInterface {\n  user_id: string;\n  doc_id: string;\n  validation_status: \"waiting\" | \"approved\" | \"rejected\";\n  validated_by: {\n    user_id: string;\n    comment: string;\n    validation_status: \"waiting\" | \"approved\" | \"rejected\";\n    date?: string;\n  };\n  in_education: boolean;\n  disability: boolean;\n}\n\nexport type AccessUserActionType =\n  | FetchUsersAction\n  | BlockUserToSystem\n  | AssignRoleToUserAction\n  | CustomizeUserAccessAction\n  | ResetUserAccessAction;\n\n/**\n * * ****************************** ACTIONS *****************************\n */\n\nexport const fetchUserAccess = (page: number, callback?: Function) => {\n  callback && callback(true, \"\");\n  return async (dispatch: Dispatch) => {\n    try {\n      setAxiosToken();\n      const res = await axios.get<fetchUserAccessInterface>(\n        `${API.AUTH}/users?page=${page}&limit=${userPageLimit}`\n      );\n      console.log({ users_response: res });\n      dispatch<FetchUsersAction>({\n        type: ActionTypes.FETCH_USERS_ACCESS,\n        payload: {\n          users: [{ data: res.data.users!, page: page }],\n          next: res.data.next,\n          previous: res.data.previous,\n          total_users: res.data.total_users,\n        },\n      });\n      callback && callback(false, \"\", res.data.users);\n    } catch (error) {\n      console.error({ user_error: error });\n      callback && callback(false, errorToText(error));\n    }\n  };\n};\n\nexport const blockUserToSystem = (user_id: string, page: number) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<BlockUserToSystem>({\n      type: ActionTypes.BLOCK_USER_TO_SYSTEM,\n      payload: { id: user_id, page },\n    });\n  };\n};\n\nexport const unBlockUserToSystem = (user_id: string, page: number) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<BlockUserToSystem>({\n      type: ActionTypes.UNBLOCK_USER_TO_SYSTEM,\n      payload: { id: user_id, page },\n    });\n  };\n};\n\nexport const assignRoleToUserAccess = (\n  data: AssignRoleToUserActionInterface,\n  page: number\n) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<AssignRoleToUserAction>({\n      type: ActionTypes.ASSIGN_ROLE_TO_USER,\n      payload: { data, page },\n    });\n  };\n};\n\nexport const customizeUserAccess = (\n  data: CustomeAccessInterface,\n  page: number\n) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<CustomizeUserAccessAction>({\n      type: ActionTypes.CUSTOMIZE_USER_ACCESS,\n      payload: { data, page },\n    });\n  };\n};\n\nexport const resetUserAccess = (data: string, page: number) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<ResetUserAccessAction>({\n      type: ActionTypes.RESET_USER_ACCESS,\n      payload: { user_id: data, page },\n    });\n  };\n};\n","import { Dispatch } from \"redux\";\nimport { ActionTypes } from \"./types\";\nimport { data_school } from \"../shared/dataTest\";\nimport {\n  MySchoolInterface,\n  PostSchoolInterface,\n  SchoolInfoInterface,\n  SchoolsInterface,\n} from \"../shared/interfaces\";\nimport { setAxiosToken } from \"../utils/AxiosToken\";\nimport axios from \"axios\";\nimport { API } from \"../utils/api\";\nimport { errorToText } from \"../utils/errors\";\nimport { placedCandidateInterface } from \"../interfaces/marks_publication\";\nimport { PlacementListInterface } from \"../containers/PlacementLimit/PlacementLimit\";\n\n/**\n * * ****************************** INTERFACES *****************************\n */\n\nexport interface GetSchoolsAction {\n  type: ActionTypes.GET_SCHOOLS;\n  payload: SchoolsInterface[];\n}\n\nexport interface GetSchoolByIdAction {\n  type: ActionTypes.GET_SCHOOLS_BY_ID;\n  payload: MySchoolInterface;\n}\n\nexport interface GetSchoolsInfoAction {\n  type: ActionTypes.GET_SCHOOLS_INFO;\n  payload: SchoolInfoInterface[];\n}\n\nexport interface CreateSchoolAction {\n  type: ActionTypes.CREATE_SCHOOL;\n  payload: SchoolsInterface;\n}\n\nexport interface UpdateSchoolAction {\n  type: ActionTypes.UPDATE_SCHOOL;\n  payload: SchoolsInterface;\n}\n\nexport interface DeleteSchoolAction {\n  type: ActionTypes.DELETE_SCHOOL;\n  payload: string;\n}\n\n// School Posts interfaces\nexport interface FetchSchoolPostsAction {\n  type: ActionTypes.FETCH_SCHOOL_POSTS;\n  payload: PostSchoolInterface[];\n}\n\n// School Placements interfaces\nexport interface GetSchoolPlacementAction {\n  type: ActionTypes.GET_SCHOOL_PLACEMENT;\n  payload: placedCandidateInterface[];\n}\n\n// District School Placements interfaces\nexport interface GetDistrictPlacementAction {\n  type: ActionTypes.GET_DISTRICT_PLACEMENT;\n  payload: placedCandidateInterface[];\n}\n\n// District School Placements interfaces\nexport interface GetSessionPlacementAction {\n  type: ActionTypes.GET_SESSION_PLACEMENT;\n  payload: placedCandidateInterface[];\n}\n\nexport interface FetchDistrictPostsAction {\n  type: ActionTypes.FETCH_DISTRICT_POSTS;\n  payload: PostSchoolInterface[];\n}\n\nexport interface CreateSchoolPostAction {\n  type: ActionTypes.CREATE_SCHOOL_POST;\n  payload: PostSchoolInterface;\n}\n\nexport interface UpdateSchoolPostAction {\n  type: ActionTypes.UPDATE_SCHOOL_POST;\n  payload: {\n    TYPE: \"DISTRICT\" | \"SCHOOL\" | \"RECEIVED\";\n    data: PostSchoolInterface;\n  };\n}\n\nexport interface DeleteSchoolPostAction {\n  type: ActionTypes.DELETE_SCHOOL_POST;\n  payload: PostSchoolInterface[];\n}\n\n// Get Institute Limit Posts Action interfaces\nexport interface GetInstitutePlacementLimitAction {\n  type: ActionTypes.GET_INSTITUTE_PLACEMENT_LIMIT;\n  payload: PlacementListInterface[];\n}\n\nexport interface GetDistrictPlacementLimitAction {\n  type: ActionTypes.GET_DISTRICT_PLACEMENT_LIMIT;\n  payload: PlacementListInterface[];\n}\n\nexport interface UpdateInstitutePlacementLimitAction {\n  type: ActionTypes.UPDATE_INSTITUTE_PLACEMENT_LIMIT;\n  payload: { limit_id: string; confirmed_post: number };\n}\n\nexport type SchoolActionType =\n  | GetSchoolsAction\n  | GetSchoolByIdAction\n  | GetSchoolsInfoAction\n  | CreateSchoolAction\n  | UpdateSchoolAction\n  | DeleteSchoolAction\n  | FetchSchoolPostsAction\n  | GetSchoolPlacementAction\n  | FetchDistrictPostsAction\n  | CreateSchoolPostAction\n  | UpdateSchoolPostAction\n  | DeleteSchoolPostAction\n  | GetDistrictPlacementAction\n  | GetSessionPlacementAction\n  | GetInstitutePlacementLimitAction\n  | GetDistrictPlacementLimitAction\n  | UpdateInstitutePlacementLimitAction;\n\n/**\n * * ****************************** ACTIONS *****************************\n */\n\nexport const getSchools = (callback: Function) => {\n  callback(true, \"\");\n  return async (dispatch: Dispatch) => {\n    try {\n      const res = await axios.get<SchoolsInterface[]>(\n        `${API.APPLICATION}/schools`\n      );\n      dispatch<GetSchoolsAction>({\n        type: ActionTypes.GET_SCHOOLS,\n        payload: res.data,\n      });\n      callback(false, \"\", res.data);\n    } catch (error) {\n      console.log(\"Err: \", error);\n      callback(false, errorToText(error));\n    }\n  };\n};\n\nexport const getSchoolById = (schoolId: string, callback: Function) => {\n  return async (dispatch: Dispatch) => {\n    callback(true, \"\");\n    try {\n      const res = await axios.get<MySchoolInterface>(\n        `${API.APPLICATION}/schools/${schoolId}`\n      );\n      dispatch<GetSchoolByIdAction>({\n        type: ActionTypes.GET_SCHOOLS_BY_ID,\n        payload: res.data,\n      });\n      callback(false, \"\", res.data);\n    } catch (error) {\n      console.log(\"Err: \", error);\n      callback(false, errorToText(error));\n    }\n  };\n};\n\nexport const getSchoolsInfo = () => {\n  return async (dispatch: Dispatch) => {\n    setAxiosToken();\n    // const response = await axios.get<AccessRoleType[]>(url);\n\n    dispatch<GetSchoolsInfoAction>({\n      type: ActionTypes.GET_SCHOOLS_INFO,\n      payload: data_school,\n      // payload: response.data,\n    });\n  };\n};\n\nexport const createSchool = (data: SchoolsInterface) => {\n  console.log({ schools: data });\n  return async (dispatch: Dispatch) => {\n    dispatch<CreateSchoolAction>({\n      type: ActionTypes.CREATE_SCHOOL,\n      payload: data,\n    });\n  };\n};\n\nexport const updateSchool = (data: SchoolsInterface) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<UpdateSchoolAction>({\n      type: ActionTypes.UPDATE_SCHOOL,\n      payload: data,\n    });\n  };\n};\n\nexport const deleteSchool = (data: string) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<DeleteSchoolAction>({\n      type: ActionTypes.DELETE_SCHOOL,\n      payload: data,\n    });\n  };\n};\n\nexport const fetchSchoolPosts = (school_id: string, callback: Function) => {\n  return async (dispatch: Dispatch) => {\n    callback(true, \"\");\n    try {\n      const res = await axios.get<PostSchoolInterface[]>(\n        `${API.PLACEMENT}/requestpost/school/${school_id}`\n      );\n\n      console.log(\"====================================\");\n      console.log({ schoolPosts: res });\n      console.log(\"====================================\");\n\n      dispatch<FetchSchoolPostsAction>({\n        type: ActionTypes.FETCH_SCHOOL_POSTS,\n        payload: res.data,\n      });\n      callback(false, \"\");\n    } catch (error) {\n      console.log(\"Err: \", error);\n      callback(false, errorToText(error));\n    }\n  };\n};\n\nexport const getSchoolPlacement = (school_id: string, callback: Function) => {\n  return async (dispatch: Dispatch) => {\n    callback(true, \"\");\n    try {\n      const res = await axios.get<placedCandidateInterface[]>(\n        `${API.PLACEMENT}/placedcandidate/school/${school_id}`\n      );\n\n      console.log({ getSchoolPlacement: res.data });\n\n      dispatch<GetSchoolPlacementAction>({\n        type: ActionTypes.GET_SCHOOL_PLACEMENT,\n        payload: res.data,\n      });\n      callback(false, \"\", res.data);\n    } catch (error) {\n      console.log(\"Err: \", error);\n      callback(false, errorToText(error));\n    }\n  };\n};\n\nexport const createSchoolPost = (data: PostSchoolInterface) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<CreateSchoolPostAction>({\n      type: ActionTypes.CREATE_SCHOOL_POST,\n      payload: data,\n    });\n  };\n};\n\nexport const updateSchoolPost = (\n  TYPE: \"DISTRICT\" | \"SCHOOL\" | \"RECEIVED\",\n  data: PostSchoolInterface\n) => {\n  console.log({ TYPE, data });\n  return async (dispatch: Dispatch) => {\n    dispatch<UpdateSchoolPostAction>({\n      type: ActionTypes.UPDATE_SCHOOL_POST,\n      payload: { TYPE, data },\n    });\n  };\n};\n\nexport const deleteSchoolPost = (data: PostSchoolInterface[]) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<DeleteSchoolPostAction>({\n      type: ActionTypes.DELETE_SCHOOL_POST,\n      payload: data,\n    });\n  };\n};\n\nexport const fetchDistrictPosts = (district_id: string, callback: Function) => {\n  return async (dispatch: Dispatch) => {\n    callback(true, \"\");\n    try {\n      const res = await axios.get<PostSchoolInterface[]>(\n        `${API.PLACEMENT}/requestpost/district/${district_id}`\n      );\n\n      console.log(\"====================================\");\n      console.log({ fetchDistrictPosts: res });\n      console.log(\"====================================\");\n\n      dispatch<FetchDistrictPostsAction>({\n        type: ActionTypes.FETCH_DISTRICT_POSTS,\n        payload: res.data,\n      });\n      callback(false, \"\");\n    } catch (error) {\n      console.log(\"Err: \", error);\n      callback(false, errorToText(error));\n    }\n  };\n};\n\nexport const getDistrictPlacement = (\n  district_id: string,\n  callback: Function\n) => {\n  return async (dispatch: Dispatch) => {\n    callback(true, \"\");\n    try {\n      const res = await axios.get<placedCandidateInterface[]>(\n        `${API.PLACEMENT}/placedcandidate/district/${district_id}`\n      );\n\n      console.log(\"====================================\");\n      console.log({ getDistrictPlacement: res.data });\n      console.log(\"====================================\");\n\n      dispatch<GetDistrictPlacementAction>({\n        type: ActionTypes.GET_DISTRICT_PLACEMENT,\n        payload: res.data,\n      });\n      callback(false, \"\", res.data);\n    } catch (error) {\n      console.log(\"Err: \", error);\n      callback(false, errorToText(error));\n    }\n  };\n};\n\nexport const getSessionPlacement = (session_id: string, callback: Function) => {\n  return async (dispatch: Dispatch) => {\n    callback(true, \"\");\n    try {\n      const res = await axios.get<placedCandidateInterface[]>(\n        `${API.PLACEMENT}/placedcandidate/session/${session_id}`\n      );\n\n      console.log(\"====================================\");\n      console.log({ getSessionPlacement: res.data });\n      console.log(\"====================================\");\n\n      dispatch<GetSessionPlacementAction>({\n        type: ActionTypes.GET_SESSION_PLACEMENT,\n        payload: res.data,\n      });\n      callback(false, \"\", res.data);\n    } catch (error) {\n      console.log(\"Err: \", error);\n      callback(false, errorToText(error));\n    }\n  };\n};\n\nexport const getInstitutePlacementLimit = (\n  institute_id: string,\n  session_id: string,\n  callback: Function\n) => {\n  return async (dispatch: Dispatch) => {\n    callback(true, \"\");\n    try {\n      const res = await axios.get<PlacementListInterface[]>(\n        `${API.PLACEMENT}/confirmedpostrequest/institute/${institute_id}/${session_id}`\n      );\n\n      console.log(\"====================================\");\n      console.log({ getInstitutePlacementLimit: res.data });\n      console.log(\"====================================\");\n\n      dispatch<GetInstitutePlacementLimitAction>({\n        type: ActionTypes.GET_INSTITUTE_PLACEMENT_LIMIT,\n        payload: res.data,\n      });\n      callback(false, \"\", res.data);\n    } catch (error) {\n      console.log(\"Err: \", error);\n      callback(false, errorToText(error));\n    }\n  };\n};\n\nexport const getDistrictPlacementLimit = (\n  district_id: string,\n  session_id: string,\n  callback: Function\n) => {\n  return async (dispatch: Dispatch) => {\n    callback(true, \"\");\n    try {\n      const res = await axios.get<PlacementListInterface[]>(\n        `${API.PLACEMENT}/confirmedpostrequest/district/${district_id}/${session_id}`\n      );\n\n      console.log(\"====================================\");\n      console.log({ getDistrictPlacementLimit: res.data });\n      console.log(\"====================================\");\n\n      dispatch<GetDistrictPlacementLimitAction>({\n        type: ActionTypes.GET_DISTRICT_PLACEMENT_LIMIT,\n        payload: res.data,\n      });\n      callback(false, \"\", res.data);\n    } catch (error) {\n      console.log(\"Err: \", error);\n      callback(false, errorToText(error));\n    }\n  };\n};\n\nexport const updateInstitutePlacementLimit = (data: {\n  limit_id: string;\n  confirmed_post: number;\n}) => {\n  console.log(\"====================================\");\n  console.log({ updateInstitutePlacementLimit: data });\n  console.log(\"====================================\");\n  return async (dispatch: Dispatch) => {\n    dispatch<UpdateInstitutePlacementLimitAction>({\n      type: ActionTypes.UPDATE_INSTITUTE_PLACEMENT_LIMIT,\n      payload: data,\n    });\n  };\n};\n","import axios from \"axios\";\nimport React, { Component } from \"react\";\nimport { MdLock, MdLocationOn } from \"react-icons/md\";\nimport { connect } from \"react-redux\";\nimport { PushPopupAlert, schoolLevelsStoreInterface } from \"../../actions\";\nimport { getAllRoom } from \"../../actions/location\";\nimport { getSchools } from \"../../actions/schools\";\nimport {\n  blockUserToSystem,\n  unBlockUserToSystem,\n  resetUserAccess,\n} from \"../../actions/users\";\nimport { PopupAlertData } from \"../../components/Alert/Popup\";\nimport Loading from \"../../components/Loading/Loading\";\nimport NoResult, { NoResultThemes } from \"../../components/NoResult/NoResult\";\nimport Table from \"../../components/Table/Table\";\nimport { PopupAlertTheme } from \"../../interfaces/popupAlert\";\nimport { StoreState } from \"../../reducers\";\nimport {\n  getRoleById,\n  capitalizeFirstLetter,\n  getInstituteById,\n} from \"../../shared/dataTest\";\nimport {\n  RoomLocationInterface,\n  LocationRoomTableInterface,\n  DistrictInterface,\n  SystemUserRoleInterface,\n  UserInterface,\n  AccessTaskInterface,\n  SchoolsInterface,\n} from \"../../shared/interfaces\";\nimport { API } from \"../../utils/api\";\nimport { errorToText } from \"../../utils/errors\";\nimport { distinctDistrict } from \"../Locations/Locations\";\nimport { UserAccess } from \"./UserAccess\";\nimport UserRole from \"./UserRole\";\nimport profile from \"../../shared/blank_profile.png\"; // with im\n\nexport const getUserById = (users: UserInterface[], userId: string) => {\n  return users.find((item) => item.user_id === userId);\n};\n\nexport enum ModalState {\n  View_User = \"View User Info\",\n  Add_Access = \"Add Access To User\",\n  Update_Access = \"Update User Access\",\n  Close_Modal = \"Close Modal\",\n}\n\n// Tobe replaced with Emmy's function\nexport const LocationsInArray = (\n  LocationData: RoomLocationInterface[]\n): LocationRoomTableInterface[] | [] => {\n  let locationTemp: LocationRoomTableInterface[] = [];\n  for (let p in LocationData) {\n    let districts = LocationData[p].districts;\n    for (let d in districts) {\n      let centers = districts[d].centers;\n      for (let c in centers) {\n        let rooms = centers[c].rooms;\n        for (let r in rooms) {\n          locationTemp.push({\n            province_id: LocationData[p]._id,\n            province_name: LocationData[p].province_name,\n            district_id: districts[d]._id,\n            district_name: districts[d].district_name,\n            center_id: centers[c]._id,\n            center_name: centers[c].center_name,\n            room_id: rooms[r]._id,\n            room_name: rooms[r].room_number.toString(),\n            capacity: rooms[r].capacity,\n            occupied: rooms[r].occupied,\n          });\n        }\n      }\n    }\n  }\n  return locationTemp;\n};\n\ninterface AppProps {\n  users: UserInterface[];\n  roleList: SystemUserRoleInterface[];\n  userTypes: \"all\" | \"active\" | \"blocked\";\n  loadingUser: boolean;\n  schoolLevels: schoolLevelsStoreInterface;\n  setLoadingUser: (value: boolean) => void;\n  manageUser: UserInterface | null;\n  setManageUser: (value: UserInterface | null) => void;\n  changeRole: boolean;\n  setChangeRole: (value: boolean) => void;\n  currentPage: number;\n\n  // REDUX =================\n  allRoom: RoomLocationInterface[];\n  getAllRoom: Function;\n  schools: SchoolsInterface[];\n  getSchools: Function;\n  blockUserToSystem: Function;\n  unBlockUserToSystem: Function;\n  resetUserAccess: Function;\n  PushPopupAlert: (alert: PopupAlertData) => void;\n}\n\ninterface AppStates {\n  manageUserId: string;\n  loadingRequest: boolean;\n  loading: boolean;\n  loadingSchool: boolean;\n  loadingRequestType: \"RESET\" | \"STATUS\" | \"CHANGE_ROLE\" | null;\n  schoolList: SchoolsInterface[] | null;\n  roomList: RoomLocationInterface[] | null;\n  roomTable: LocationRoomTableInterface[] | null;\n  userAccess: AccessTaskInterface[] | null;\n  currentAccess: AccessTaskInterface | null;\n}\n\nclass UserList extends Component<AppProps, AppStates> {\n  constructor(props: AppProps) {\n    super(props);\n\n    this.state = {\n      manageUserId: \"\",\n      loadingRequest: false,\n      loading: true,\n      loadingSchool: true,\n      loadingRequestType: null,\n      schoolList: null,\n      roomList: null,\n      roomTable: null,\n      userAccess: null,\n      currentAccess: null,\n    };\n  }\n\n  setManageUserId = (value: string) => {\n    this.setState({ manageUserId: value });\n  };\n\n  setLoadingRequest = (value: boolean) => {\n    this.setState({ loadingRequest: value });\n  };\n\n  setLoadingSchool = (value: boolean) => {\n    this.setState({ loadingSchool: value });\n  };\n\n  setLoading = (value: boolean) => {\n    this.setState({ loading: value });\n  };\n\n  setLoadingRequestType = (\n    value: \"RESET\" | \"STATUS\" | \"CHANGE_ROLE\" | null\n  ) => {\n    this.setState({ loadingRequestType: value });\n  };\n\n  setRoomList = (value: RoomLocationInterface[] | null) => {\n    this.setState({ roomList: value });\n  };\n\n  setRoomTables = (value: LocationRoomTableInterface[] | null) => {\n    this.setState({ roomTable: value });\n  };\n\n  setCurrentAccess = (value: AccessTaskInterface | null) => {\n    this.setState({ currentAccess: value });\n  };\n\n  setSchoolList = (value: SchoolsInterface[] | null) => {\n    this.setState({ schoolList: value });\n  };\n\n  setUserAccess = (value: AccessTaskInterface[] | null) => {\n    this.setState({ userAccess: value });\n  };\n\n  componentDidMount = () => {\n    if (this.props.schools.length === 0) {\n      this.props.getSchools(\n        (status: boolean, msg: string, data?: SchoolsInterface[]) => {\n          this.setLoadingSchool(status);\n          if (!status) {\n            if (msg.length > 0) {\n              this.props.PushPopupAlert({\n                title: msg,\n                theme: PopupAlertTheme.danger,\n              });\n            }\n            if (data) {\n              this.setLoadingSchool(false);\n              this.setSchoolList(data);\n            }\n          }\n        }\n      );\n    } else {\n      this.setSchoolList(this.props.schools);\n      this.setLoadingSchool(false);\n    }\n\n    if (this.props.allRoom.length === 0) {\n      this.props.getAllRoom(\n        (status: boolean, msg: string, data?: RoomLocationInterface[]) => {\n          this.setLoading(status);\n          if (!status && msg.length > 0) {\n            this.props.PushPopupAlert({\n              title: msg,\n              theme: PopupAlertTheme.danger,\n            });\n          }\n          if (data && data.length > 0) {\n            this.setRoomList(data);\n            this.setRoomTables(LocationsInArray(data));\n          }\n        }\n      );\n    } else if (this.state.loading) {\n      this.setRoomList(this.props.allRoom);\n      this.setRoomTables(LocationsInArray(this.props.allRoom));\n      this.setLoading(false);\n    }\n  };\n\n  tableData = (): JSX.Element[] => {\n    if (\n      this.props.loadingUser ||\n      this.state.loading ||\n      this.state.loadingSchool\n    ) {\n      return [\n        <tr\n          key={Math.random()}\n          className=\"border-b border-gray-200 hover:bg-gray-100\"\n        >\n          <td className=\"p-3 text-center\" colSpan={8}>\n            <Loading />\n          </td>\n        </tr>,\n      ];\n    }\n\n    let data: UserInterface[] = this.props.users;\n    if (data.length <= 0) {\n      return [\n        <tr\n          key={Math.random()}\n          className=\"border-b border-gray-200 hover:bg-gray-100\"\n        >\n          <td className=\"p-3 text-center\" colSpan={8}>\n            No Data Found\n          </td>\n        </tr>,\n      ];\n    }\n\n    return data.map((user: UserInterface, index: number) => (\n      <tr\n        key={index + Math.random()}\n        className=\"border-b border-gray-200 hover:bg-gray-100 group cursor-pointer\"\n        onClick={() => {\n          this.props.setManageUser(user);\n          this.setManageUserId(user.user_id);\n        }}\n      >\n        <td className=\"p-3 text-left whitespace-nowrap\">{index + 1}</td>\n        <td className=\"p-3 text-left\">\n          <span>\n            {user.user_info &&\n              user.user_info.fname + \" \" + user.user_info.lname}\n          </span>\n        </td>\n        <td className=\"p-3 text-left\">{user.email}</td>\n        {/* <td className=\"p-3 text-left\">{user.phone_number}</td> */}\n        <td className=\"p-3 text-left\">\n          {user.user_info && user.user_info.sex === \"M\" ? \"Male\" : \"Female\"}\n        </td>\n        <td className=\"p-3 text-left text-blue-700 text-base font-medium\">\n          {user.default_access &&\n            user.default_access.system_user_role_id &&\n            user.default_access.system_user_role_id && (\n              <span\n                className={`px-2 py-1 font-semibold rounded text-blue-700 bg-blue-100 dark:bg-blue-700 dark:text-blue-100`}\n              >\n                {getRoleById(\n                  this.props.roleList,\n                  user.default_access.system_user_role_id\n                )?.role &&\n                  capitalizeFirstLetter(\n                    getRoleById(\n                      this.props.roleList,\n                      user.default_access.system_user_role_id\n                    )?.role\n                  )}\n              </span>\n            )}\n        </td>\n        {/* {userTypes === \"all\" && (\n          <td>\n            {user.is_active ? (\n              <span className={`px-2 py-1 font-semibold text-green-700`}>\n                Active\n              </span>\n            ) : (\n              <span className={`px-2 py-1 font-semibold text-red-700`}>\n                Blocked\n              </span>\n            )}\n          </td>\n        )} */}\n        <td className=\"px-3 text-center\">\n          <button\n            className=\"btn bg-gray-200 group-hover:bg-blue-700 group-hover:text-white focus:outline-none\"\n            title=\"Manage User Access\"\n            onClick={() => {\n              this.props.setManageUser(user);\n              this.setManageUserId(user.user_id);\n            }}\n          >\n            Manage\n          </button>\n        </td>\n      </tr>\n    ));\n  };\n\n  blockUser = async (user_id: string, actionType: boolean) => {\n    if (!user_id) {\n      this.props.PushPopupAlert({\n        title: \"User Access is required doesn't exist\",\n        theme: PopupAlertTheme.danger,\n      });\n    }\n\n    this.setLoadingRequest(true);\n\n    if (\n      !window.confirm(\n        `Are sure you want to ${actionType ? \"block\" : \"activate\"} this user?`\n      )\n    ) {\n      return this.setLoadingRequest(false);\n    }\n\n    try {\n      const res = await axios.patch(`${API.AUTH}/users/disactive/${user_id}`, {\n        is_active: !actionType,\n      });\n      if (res) {\n        console.log(\"====================================\");\n        console.log({ blockUserToSystem: res });\n        console.log(\"====================================\");\n        actionType\n          ? this.props.blockUserToSystem(user_id, this.props.currentPage)\n          : this.props.unBlockUserToSystem(user_id, this.props.currentPage);\n\n        this.props.PushPopupAlert({\n          title: `User has been ${actionType ? \"blocked\" : \"activated\"}!`,\n          theme: PopupAlertTheme.info,\n        });\n      }\n    } catch (error) {\n      console.error({ blockUser_ERROR: error });\n      this.props.PushPopupAlert({\n        title: errorToText(error),\n        theme: PopupAlertTheme.danger,\n      });\n    }\n\n    this.setLoadingRequest(false);\n    user_id = \"\";\n  };\n\n  restUserAccess = async (user_id: string) => {\n    if (!user_id) {\n      this.props.PushPopupAlert({\n        title: \"User Access is required doesn't exist\",\n        theme: PopupAlertTheme.warning,\n      });\n    }\n\n    if (!window.confirm(`Are sure you want to reset to default access?`)) {\n      return this.setLoadingRequest(false);\n    }\n\n    this.setLoadingRequest(true);\n    this.setLoadingRequestType(\"RESET\");\n\n    try {\n      const res = await axios.delete(`${API.AUTH}/custaccess/user/${user_id}`);\n      res && this.props.resetUserAccess(user_id, this.props.currentPage);\n      let resetedAccess: UserInterface | undefined = this.props.users.find(\n        (user) => user.user_id === user_id\n      );\n      if (resetedAccess) {\n        resetedAccess.default_access &&\n          this.setUserAccess(resetedAccess.default_access.access);\n        this.props.PushPopupAlert({\n          title: `Resetting User Access complete successfully`,\n          theme: PopupAlertTheme.info,\n        });\n        this.setCurrentAccess(null);\n      }\n    } catch (error) {\n      console.error({ reseting_user_access: error });\n      this.props.PushPopupAlert({\n        title: errorToText(error),\n        theme: PopupAlertTheme.danger,\n      });\n    }\n\n    this.setLoadingRequest(false);\n    this.setLoadingRequestType(null);\n    user_id = \"\";\n  };\n\n  distinctDistrict = (\n    location: RoomLocationInterface[],\n    province_id?: string\n  ): DistrictInterface[] => {\n    let ids: string[] = [],\n      result: DistrictInterface[] = [];\n\n    if (province_id) {\n      result = location.find((item) => item._id === province_id)\n        ? location.find((item) => item._id === province_id)!.districts\n          ? location.find((item) => item._id === province_id)!.districts\n          : []\n        : [];\n    } else {\n      for (const key in location) {\n        if (Object.prototype.hasOwnProperty.call(location, key)) {\n          for (const keyDistrict in location[key].districts) {\n            if (\n              Object.prototype.hasOwnProperty.call(\n                location[key].districts,\n                keyDistrict\n              )\n            ) {\n              if (!ids.includes(location[key].districts[keyDistrict]._id)) {\n                ids.push(location[key].districts[keyDistrict]._id);\n                result.push(location[key].districts[keyDistrict]);\n              }\n            }\n          }\n        }\n      }\n    }\n\n    return result;\n  };\n\n  render() {\n    return (\n      <div>\n        {!this.props.manageUser && (\n          <div className=\"grid md:grid-cols-5 gap-2 mb-5\">\n            <div className={`md:col-span-5 rounded`}>\n              <div className=\"my-2 flex sm:flex-row flex-col justify-between\">\n                <div className=\"flex flex-col md:flex-row gap-1 items-center mx-1.5\">\n                  {/* <span className=\"text-lg\">All User</span>\n                  <MdChevronRight className=\"w-7 h-7\" />\n                  <span className=\"text-lg underline\">All User</span> */}\n                </div>\n              </div>\n              {this.props.users && (\n                <Table\n                  columns={[\n                    { columnTitle: \"#\", alignText: \"left\", padding: \"p-3\" },\n                    { columnTitle: \"Names\", alignText: \"left\", padding: \"p-3\" },\n                    { columnTitle: \"Email\", alignText: \"left\", padding: \"p-3\" },\n                    {\n                      columnTitle: \"Gender\",\n                      alignText: \"left\",\n                      padding: \"p-3\",\n                    },\n                    { columnTitle: \"Role\", alignText: \"left\", padding: \"p-3\" },\n                    // { columnTitle: \"Status\", alignText: \"left\", padding: \"p-3\" },\n                    { columnTitle: \"\", alignText: \"left\", padding: \"p-3\" },\n                  ]}\n                  rows={this.tableData}\n                  pagination={false}\n                  search={true}\n                  thColor=\"gray\"\n                  loading={\n                    this.props.loadingUser ||\n                    this.state.loading ||\n                    this.state.loadingSchool\n                  }\n                />\n              )}\n            </div>\n          </div>\n        )}\n\n        {/* -------------------------------------------------------- */}\n\n        {this.props.manageUser && (\n          <div className=\"bg-gray-100 h-100\">\n            {/* header */}\n            <div className=\"bg-white border-b border-t px-4 py-2 flex flex-col md:flex-row items-center gap-x-14\">\n              {this.props.users.find(\n                (user) => user.user_id === this.state.manageUserId\n              ) ? (\n                <div\n                  key={\n                    this.props.users.find(\n                      (user) => user.user_id === this.state.manageUserId\n                    )!.user_id + Math.random()\n                  }\n                  className=\"flex flex-col md:flex-row md:items-start items-center w-full gap-3\"\n                >\n                  <img\n                    src={\n                      this.props.users.find(\n                        (user) => user.user_id === this.state.manageUserId\n                      )!.user_info.photo !== \"pic\"\n                        ? this.props.users.find(\n                            (user) => user.user_id === this.state.manageUserId\n                          )!.user_info.photo\n                        : profile\n                    }\n                    alt=\"\"\n                    className=\"rounded-full w-32 h-32\"\n                  />\n                  <div className=\"flex flex-col gap-1 items-start w-full\">\n                    <span className=\"text-2xl font-semibold\">\n                      {this.props.users.find(\n                        (user) => user.user_id === this.state.manageUserId\n                      )!.user_info.fname +\n                        \" \" +\n                        this.props.users.find(\n                          (user) => user.user_id === this.state.manageUserId\n                        )!.user_info.lname}\n                    </span>\n                    <div className=\"flex items-center\">\n                      <MdLock className=\"w-5 h-5\" />\n                      <span className=\"text-lg font-medium\">\n                        {this.props.users.find(\n                          (user) => user.user_id === this.state.manageUserId\n                        )!.default_access &&\n                          getRoleById(\n                            this.props.roleList,\n                            this.props.users.find(\n                              (user) => user.user_id === this.state.manageUserId\n                            )!.default_access!.system_user_role_id\n                          ).role}\n                      </span>\n                    </div>\n                    <div className=\"flex items-center gap-1\">\n                      <span className=\"text-gray-500\">Level:</span>\n                      <span className=\"text-base font-medium\">\n                        {this.props.users.find(\n                          (user) => user.user_id === this.state.manageUserId\n                        )!.default_access &&\n                        getRoleById(\n                          this.props.roleList,\n                          this.props.users.find(\n                            (user) => user.user_id === this.state.manageUserId\n                          )!.default_access!.system_user_role_id\n                        ).district_required\n                          ? \"District\"\n                          : this.props.users.find(\n                              (user) => user.user_id === this.state.manageUserId\n                            )!.default_access &&\n                            getRoleById(\n                              this.props.roleList,\n                              this.props.users.find(\n                                (user) =>\n                                  user.user_id === this.state.manageUserId\n                              )!.default_access!.system_user_role_id\n                            ).school_required\n                          ? \"School\"\n                          : this.props.users.find(\n                              (user) => user.user_id === this.state.manageUserId\n                            )!.default_access &&\n                            getRoleById(\n                              this.props.roleList,\n                              this.props.users.find(\n                                (user) =>\n                                  user.user_id === this.state.manageUserId\n                              )!.default_access!.system_user_role_id\n                            ).room_required\n                          ? \"Room\"\n                          : this.props.users.find(\n                              (user) => user.user_id === this.state.manageUserId\n                            )!.default_access &&\n                            getRoleById(\n                              this.props.roleList,\n                              this.props.users.find(\n                                (user) =>\n                                  user.user_id === this.state.manageUserId\n                              )!.default_access!.system_user_role_id\n                            ).education_institution_required\n                          ? \"Institute\"\n                          : \"-\"}\n                      </span>\n                    </div>\n                    {this.props.users.find(\n                      (user) => user.user_id === this.state.manageUserId\n                    )!.default_access &&\n                    getRoleById(\n                      this.props.roleList,\n                      this.props.users.find(\n                        (user) => user.user_id === this.state.manageUserId\n                      )!.default_access!.system_user_role_id\n                    ).education_institution_required ? (\n                      <div className=\"flex items-center gap-1\">\n                        <span className=\"text-gray-500\">Institute:</span>\n                        <span className=\"text-base font-medium\">\n                          {this.props.users.find(\n                            (user) => user.user_id === this.state.manageUserId\n                          )!.default_access &&\n                          this.props.schoolLevels.education_categories &&\n                          getInstituteById(\n                            this.props.schoolLevels.education_categories,\n                            this.props.users.find(\n                              (user) => user.user_id === this.state.manageUserId\n                            )!.default_access!.education_institution_id\n                          )\n                            ? getInstituteById(\n                                this.props.schoolLevels.education_categories,\n                                this.props.users.find(\n                                  (user) =>\n                                    user.user_id === this.state.manageUserId\n                                )!.default_access!.education_institution_id\n                              )!.education_category_title\n                            : \"Unknown Institute\"}\n                        </span>\n                      </div>\n                    ) : this.props.users.find(\n                        (user) => user.user_id === this.state.manageUserId\n                      )!.default_access &&\n                      getRoleById(\n                        this.props.roleList,\n                        this.props.users.find(\n                          (user) => user.user_id === this.state.manageUserId\n                        )!.default_access!.system_user_role_id\n                      ).district_required ? (\n                      <div className=\"flex items-center gap-1\">\n                        <span className=\"text-gray-500\">District:</span>\n                        <span className=\"text-base font-medium\">\n                          {this.props.users.find(\n                            (user) => user.user_id === this.state.manageUserId\n                          )!.default_access &&\n                            this.state.roomList &&\n                            distinctDistrict(this.state.roomList).find(\n                              (item) =>\n                                item.district_id ===\n                                this.props.users.find(\n                                  (user) =>\n                                    user.user_id === this.state.manageUserId\n                                )!.default_access!.district_id\n                            ) &&\n                            distinctDistrict(this.state.roomList).find(\n                              (item) =>\n                                item.district_id ===\n                                this.props.users.find(\n                                  (user) =>\n                                    user.user_id === this.state.manageUserId\n                                )!.default_access!.district_id\n                            )!.district_name}\n                        </span>\n                      </div>\n                    ) : this.props.users.find(\n                        (user) => user.user_id === this.state.manageUserId\n                      )!.default_access &&\n                      getRoleById(\n                        this.props.roleList,\n                        this.props.users.find(\n                          (user) => user.user_id === this.state.manageUserId\n                        )!.default_access!.system_user_role_id\n                      ).school_required ? (\n                      <div className=\"flex items-center gap-1\">\n                        <span className=\"text-gray-500\">School:</span>\n                        <span className=\"text-base font-medium\">\n                          {this.state.schoolList &&\n                          this.state.schoolList.find(\n                            (school) =>\n                              school._id ===\n                              this.props.users.find(\n                                (user) =>\n                                  user.user_id === this.state.manageUserId\n                              )!.default_access?.school_id\n                          )\n                            ? this.state.schoolList.find(\n                                (school) =>\n                                  school._id ===\n                                  this.props.users.find(\n                                    (user) =>\n                                      user.user_id === this.state.manageUserId\n                                  )!.default_access?.school_id\n                              )!.school_name\n                            : \"Unknown school\"}\n                        </span>\n                      </div>\n                    ) : (\n                      this.props.users.find(\n                        (user) => user.user_id === this.state.manageUserId\n                      )!.default_access &&\n                      getRoleById(\n                        this.props.roleList,\n                        this.props.users.find(\n                          (user) => user.user_id === this.state.manageUserId\n                        )!.default_access!.system_user_role_id\n                      ).room_required && (\n                        <div className=\"flex items-center gap-1\">\n                          {/* <span className=\"text-gray-500\">Room:</span> */}\n                          <MdLocationOn className=\"text-gray-500\" />\n                          {this.state.roomTable && (\n                            <span className=\"text-base font-medium\">\n                              {this.state.roomTable.find(\n                                (room) =>\n                                  room.room_id ===\n                                  this.props.users.find(\n                                    (user) =>\n                                      user.user_id === this.state.manageUserId\n                                  )!.default_access?.room_id\n                              )?.district_name +\n                                \" - \" +\n                                this.state.roomTable.find(\n                                  (room) =>\n                                    room.room_id ===\n                                    this.props.users.find(\n                                      (user) =>\n                                        user.user_id === this.state.manageUserId\n                                    )!.default_access?.room_id\n                                )?.center_name +\n                                \" - Room \" +\n                                this.state.roomTable.find(\n                                  (room) =>\n                                    room.room_id ===\n                                    this.props.users.find(\n                                      (user) =>\n                                        user.user_id === this.state.manageUserId\n                                    )!.default_access?.room_id\n                                )?.room_name}\n                            </span>\n                          )}\n                        </div>\n                      )\n                    )}\n                  </div>\n                </div>\n              ) : (\n                <NoResult\n                  theme={NoResultThemes.Dark}\n                  value={\"User info not found\"}\n                />\n              )}\n              {this.props.users.find(\n                (user) => user.user_id === this.state.manageUserId\n              ) && (\n                <div\n                  key={\n                    this.props.users.find(\n                      (user) => user.user_id === this.state.manageUserId\n                    )!.user_id + Math.random()\n                  }\n                  className=\"flex flex-col w-full\"\n                >\n                  <div className=\"flex items-center gap-1\">\n                    <span className=\"text-gray-500\">NID:</span>\n                    <span className=\"text-base font-medium\">\n                      {\n                        this.props.users.find(\n                          (user) => user.user_id === this.state.manageUserId\n                        )!.n_id\n                      }\n                    </span>\n                  </div>\n                  <div className=\"flex items-center gap-1\">\n                    <span className=\"text-gray-500\">Email:</span>\n                    <span className=\"text-base font-medium\">\n                      {\n                        this.props.users.find(\n                          (user) => user.user_id === this.state.manageUserId\n                        )!.email\n                      }\n                    </span>\n                  </div>\n                  <div className=\"flex items-center gap-1\">\n                    <span className=\"text-gray-500\">Phone:</span>\n                    <span className=\"text-base font-medium\">\n                      {\n                        this.props.users.find(\n                          (user) => user.user_id === this.state.manageUserId\n                        )!.phone_number\n                      }\n                    </span>\n                  </div>\n                  <div className=\"flex items-center gap-1\">\n                    <span className=\"text-gray-500\">Status:</span>\n                    <span className=\"text-base font-medium\">\n                      {this.props.users.find(\n                        (user) => user.user_id === this.state.manageUserId\n                      )!.is_active === false\n                        ? \"Blocked\"\n                        : \"Active\"}\n                    </span>\n                  </div>\n                  <div className=\"flex items-center gap-1\">\n                    {this.props.users.find(\n                      (user) => user.user_id === this.state.manageUserId\n                    )!.custome_access && (\n                      <button\n                        className={`px-2 py-1 font-semibold text-gray-50 inline-flex items-center rounded ${\n                          this.state.loadingRequestType &&\n                          this.state.loadingRequestType === \"RESET\"\n                            ? \"cursor-wait bg-gray-400\"\n                            : \"bg-gray-600\"\n                        }`}\n                        onClick={() =>\n                          this.restUserAccess(\n                            this.props.users.find(\n                              (user) => user.user_id === this.state.manageUserId\n                            )!.user_id\n                          )\n                        }\n                        disabled={this.state.loadingRequest}\n                      >\n                        <MdLock className=\"w-4 h-4 fill-current\" />\n                        <span>\n                          {this.state.loadingRequestType &&\n                          this.state.loadingRequestType === \"RESET\"\n                            ? \"Reseting...\"\n                            : \"Reset Access\"}\n                        </span>\n                      </button>\n                    )}\n                    {!this.props.changeRole && (\n                      <button\n                        className=\"bg-yellow-300 hover:bg-yellow-400 px-2 py-1 font-semibold text-black inline-flex items-center rounded\"\n                        onClick={() => this.props.setChangeRole(true)}\n                      >\n                        <MdLock className=\"w-4 h-4 fill-current\" />\n                        <span>Change Role</span>\n                      </button>\n                    )}\n                    {this.props.users.find(\n                      (user) => user.user_id === this.state.manageUserId\n                    )!.is_active ? (\n                      <button\n                        className={`px-2 py-1 font-semibold text-gray-100 inline-flex items-center rounded ${\n                          this.state.loadingRequestType &&\n                          this.state.loadingRequestType === \"STATUS\"\n                            ? \"cursor-wait bg-red-500\"\n                            : \"bg-red-700\"\n                        }`}\n                        onClick={() =>\n                          !this.state.loadingRequest &&\n                          this.props.manageUser &&\n                          this.blockUser(\n                            this.props.users.find(\n                              (user) => user.user_id === this.state.manageUserId\n                            )!.user_id,\n                            this.props.users.find(\n                              (user) => user.user_id === this.state.manageUserId\n                            )!.is_active\n                          )\n                        }\n                        disabled={this.state.loadingRequest}\n                      >\n                        <MdLock className=\"w-4 h-4 fill-current\" />\n                        <span>\n                          {this.state.loadingRequestType &&\n                          this.state.loadingRequestType === \"RESET\"\n                            ? \"Loading...\"\n                            : \"Activate\"}\n                        </span>\n                      </button>\n                    ) : (\n                      <button\n                        className={`px-2 py-1 font-semibold text-gray-100 inline-flex items-center rounded ${\n                          this.state.loadingRequestType &&\n                          this.state.loadingRequestType === \"STATUS\"\n                            ? \"cursor-wait bg-yellow-500\"\n                            : \"bg-yellow-700\"\n                        }`}\n                        onClick={() =>\n                          !this.state.loadingRequest &&\n                          this.props.manageUser &&\n                          this.blockUser(\n                            this.props.users.find(\n                              (user) => user.user_id === this.state.manageUserId\n                            )!.user_id,\n                            this.props.users.find(\n                              (user) => user.user_id === this.state.manageUserId\n                            )!.is_active\n                          )\n                        }\n                        disabled={this.state.loadingRequest}\n                      >\n                        <MdLock className=\"w-4 h-4 fill-current\" />\n                        <span>\n                          {this.state.loadingRequestType &&\n                          this.state.loadingRequestType === \"RESET\"\n                            ? \"Loading...\"\n                            : \"Re-Activate\"}\n                        </span>\n                      </button>\n                    )}\n                  </div>\n                </div>\n              )}\n            </div>\n            {/* end header */}\n\n            {/* content */}\n            {this.props.manageUser &&\n            this.state.roomList &&\n            this.props.changeRole ? (\n              <UserRole\n                userInfo={this.props.manageUser}\n                roleList={this.props.roleList}\n                district={this.distinctDistrict(this.state.roomList)}\n                schoolList={this.state.schoolList}\n                roomList={this.state.roomList}\n                setChangeRole={this.props.setChangeRole}\n                currentPage={this.props.currentPage}\n              />\n            ) : (\n              <UserAccess\n                userInfo={getUserById(\n                  this.props.users,\n                  this.state.manageUserId\n                )}\n                manageUserId={this.state.manageUserId}\n                setUserAccess={this.setUserAccess}\n                userAccess={this.state.userAccess}\n                setCurrentAccess={this.setCurrentAccess}\n                currentAccess={this.state.currentAccess}\n                currentPage={this.props.currentPage}\n              />\n            )}\n            {/* end content */}\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = ({\n  schoolLevels,\n  schools,\n  locations,\n}: StoreState): {\n  schoolLevels: schoolLevelsStoreInterface;\n  schools: SchoolsInterface[];\n  allRoom: RoomLocationInterface[];\n} => {\n  return {\n    schoolLevels,\n    schools: schools.schools,\n    allRoom: locations.roomLocation,\n  };\n};\n\nexport default connect(mapStateToProps, {\n  blockUserToSystem,\n  unBlockUserToSystem,\n  resetUserAccess,\n  getSchools,\n  getAllRoom,\n  PushPopupAlert,\n})(UserList);\n","import React, { useState } from \"react\";\nimport { MdSearch } from \"react-icons/md\";\nimport { capitalizeFirstLetter } from \"../../shared/dataTest\";\nimport { SystemUserRoleInterface } from \"../../shared/interfaces\";\nimport search from \"../../utils/search\";\n\n// const searchRole = (\n//   objList: SystemUserRoleInterface[],\n//   text: string\n// ): SystemUserRoleInterface[] => {\n//   return objList.filter(\n//     (product) => product.role.toLocaleLowerCase() === text.toLocaleLowerCase()\n//   );\n// };\n\ntype RoleListProps = {\n  setChooseRole: (value: boolean) => void;\n  roleList: SystemUserRoleInterface[];\n  handleSelectRole: (role_id: string, TYPE?: \"SELECT\" | \"DEFAULT\") => void;\n  loadindRequest: boolean;\n};\n\nconst RoleList: React.FC<RoleListProps> = (props) => {\n  const [searchInput, setSearchInput] = useState<string>(\"\");\n  return (\n    <section className=\"border-2 rounded border-gray-400\">\n      {/* SEARCH PART */}\n      <div className=\"flex items-center w-full my-1\">\n        <MdSearch className=\"w-6 h-6 absolute ml-2\" />\n        <input\n          type=\"text\"\n          placeholder=\"Search\"\n          className=\"focus:border-2 h-7 ml-1 pl-9 mr-2 bg-gray-100 focus:border-gray-700 w-full rounded\"\n          onChange={(e) => setSearchInput(e.target.value)}\n          value={searchInput}\n          disabled={props.roleList.length > 0 ? false : true}\n        />\n        <button\n          className=\"bg-red-200 text-red-700 py-1 px-2 mr-1 rounded text-sm focus:outline-none\"\n          type=\"button\"\n          onClick={() => {\n            props.setChooseRole(false);\n          }}\n        >\n          Close\n        </button>\n      </div>\n      {/* END SEARCH PART ///////////////// */}\n\n      <div className=\"w-full h-52 mt-2 overflow-y-auto divide-y divide-gray-300\">\n        {search(props.roleList, searchInput).length > 0 ? (\n          search(props.roleList, searchInput).map((role, index) => (\n            <section key={index + role.role}>\n              <div className=\"group flex items-center justify-between my-1 hover:bg-gray-100\">\n                <div\n                  className=\"p-1 w-full mr-2 cursor-pointer\"\n                  onClick={() => {\n                    props.setChooseRole(false);\n                    !props.loadindRequest &&\n                      props.handleSelectRole(role.system_user_role_id);\n                  }}\n                >\n                  <p className=\"text-sm font-medium text-black\">\n                    {capitalizeFirstLetter(role.role)}\n                  </p>\n                </div>\n                <button\n                  type=\"button\"\n                  className=\"bg-blue-200 group-hover:bg-blue-300 text-blue-700 group-hover:text-blue-800 py-1 px-2 mr-1 rounded text-sm\"\n                >\n                  Choose\n                </button>\n              </div>\n            </section>\n          ))\n        ) : (\n          <div className=\"text-center p-3\">\n            <p className=\"text-base font-medium text-black\">\n              No role available\n            </p>\n          </div>\n        )}\n      </div>\n    </section>\n  );\n};\n\nexport default RoleList;\n","import axios from \"axios\";\nimport React, { Component } from \"react\";\nimport { MdHighlightOff } from \"react-icons/md\";\nimport { TiInputChecked } from \"react-icons/ti\";\nimport { connect } from \"react-redux\";\nimport { schoolLevelsStoreInterface, PushPopupAlert } from \"../../actions\";\nimport { assignRoleToUserAccess } from \"../../actions/users\";\nimport { PopupAlertData } from \"../../components/Alert/Popup\";\nimport Loading from \"../../components/Loading/Loading\";\nimport Table from \"../../components/Table/Table\";\nimport { PopupAlertTheme } from \"../../interfaces/popupAlert\";\nimport { StoreState } from \"../../reducers\";\nimport { isEmptyOrSpaces } from \"../../shared/dataTest\";\nimport {\n  UserInterface,\n  SystemUserRoleInterface,\n  DistrictInterface,\n  SchoolsInterface,\n  RoomLocationInterface,\n  AssignRoleToUserActionInterface,\n  LocationRoomTableInterface,\n  RoleToUserInterface,\n} from \"../../shared/interfaces\";\nimport { API } from \"../../utils/api\";\nimport { errorToText } from \"../../utils/errors\";\nimport RoleList from \"./RoleList\";\nimport { LocationsInArray } from \"./UserList\";\n\ninterface AppProps {\n  currentPage: number;\n  userInfo: UserInterface;\n  roleList: SystemUserRoleInterface[];\n  district: DistrictInterface[];\n  assignRoleToUserAccess: Function;\n  schoolList: SchoolsInterface[] | null;\n  roomList: RoomLocationInterface[] | null;\n  schoolLevels: schoolLevelsStoreInterface;\n  setChangeRole: (value: boolean) => void;\n  PushPopupAlert: (alert: PopupAlertData) => void;\n}\n\ninterface AppState {\n  loading: boolean;\n  loadingForm: boolean;\n  loadingRequest: boolean;\n  roleId: string;\n  provinceId: string;\n  districtId: string;\n  schoolId: string;\n  roomId: string;\n  instituteId: string;\n  centerId: string;\n  selectedRole: SystemUserRoleInterface | null;\n  formError: {\n    element: string;\n    msg: string;\n  } | null;\n  chooseRole: boolean;\n  chooseSchool: boolean;\n}\n\nclass UserRole extends Component<AppProps, AppState> {\n  constructor(props: AppProps) {\n    super(props);\n\n    this.state = {\n      loading: true,\n      loadingForm: true,\n      loadingRequest: false,\n      roleId: \"\",\n      provinceId: \"\",\n      districtId: \"\",\n      schoolId: \"\",\n      roomId: \"\",\n      instituteId: \"\",\n      centerId: \"\",\n      selectedRole: null,\n      formError: null,\n      chooseRole: false,\n      chooseSchool: false,\n    };\n  }\n\n  setRoleId = (value: string) => {\n    this.setState({ roleId: value });\n  };\n\n  setSelectedRole = (value: SystemUserRoleInterface | null) => {\n    this.setState({ selectedRole: value });\n  };\n\n  setProvinceId = (value: string) => {\n    this.setState({ provinceId: value });\n  };\n\n  setDistrictId = (value: string) => {\n    this.setState({ districtId: value });\n  };\n\n  setCenterId = (value: string) => {\n    this.setState({ centerId: value });\n  };\n\n  setRoomId = (value: string) => {\n    this.setState({ roomId: value });\n  };\n\n  setLoadingForm = (value: boolean) => {\n    this.setState({ loadingForm: value });\n  };\n\n  setSchoolId = (value: string) => {\n    this.setState({ schoolId: value });\n  };\n\n  setChooseSchool = (value: boolean) => {\n    this.setState({ chooseSchool: value });\n  };\n\n  setLoading = (value: boolean) => {\n    this.setState({ loading: value });\n  };\n\n  setInstituteId = (value: string) => {\n    this.setState({ instituteId: value });\n  };\n\n  setFormError = (\n    value: {\n      element: string;\n      msg: string;\n    } | null\n  ) => {\n    this.setState({ formError: value });\n  };\n  setLoadingRequest = (value: boolean) => {\n    this.setState({ loadingRequest: value });\n  };\n  setChooseRole = (value: boolean) => {\n    this.setState({ chooseRole: value });\n  };\n\n  setDefaultState = (\n    default_access: RoleToUserInterface,\n    role: SystemUserRoleInterface\n  ) => {\n    // SET DEFAULT PROVINCE && DISTRICT ID =======================\n    let LOAD_province: LocationRoomTableInterface | undefined;\n    let LOAD_district: DistrictInterface | undefined;\n    if (role.district_required && this.props.roomList) {\n      LOAD_district = this.distinctDistrict(this.props.roomList).find(\n        (item) => item._id === default_access!.district_id\n      );\n      LOAD_district && this.setProvinceId(LOAD_district.province_id);\n      LOAD_district && this.setDistrictId(default_access!.district_id);\n      this.setLoadingForm(false);\n    } else if (role.room_required && this.props.roomList) {\n      // SET DEFAULT PROVINCE && DISTRICT && ROOM ID =======================\n\n      LOAD_province = LocationsInArray(this.props.roomList).find(\n        (item) => item.room_id === default_access!.room_id\n      );\n      LOAD_province && this.setProvinceId(LOAD_province.province_id);\n      LOAD_province && this.setDistrictId(LOAD_province.district_id);\n      LOAD_province && this.setCenterId(LOAD_province.center_id);\n      this.setRoomId(default_access.room_id);\n      this.setLoadingForm(false);\n    } else if (\n      role.school_required &&\n      this.props.roomList &&\n      this.props.schoolList\n    ) {\n      // SET DEFAULT PROVINCE && DISTRICT && SCHOOL ID =======================\n      let LOAD_school: SchoolsInterface | undefined =\n        this.props.schoolList.find(\n          (item) => item._id === default_access!.school_id\n        );\n      if (LOAD_school) {\n        LOAD_province = LocationsInArray(this.props.roomList).find(\n          (item) => item.district_id === LOAD_school?.district_id\n        );\n        LOAD_province && this.setProvinceId(LOAD_province.province_id);\n        LOAD_province && this.setDistrictId(LOAD_province.district_id);\n        this.setSchoolId(default_access.school_id);\n        this.setLoadingForm(false);\n      } else {\n        this.setLoadingForm(false);\n      }\n    } else {\n      this.setLoadingForm(false);\n    }\n  };\n\n  componentDidMount = () => {\n    if (this.props.roleList.length) {\n      if (this.props.userInfo.default_access && this.state.loadingForm) {\n        // SET DEFAULT ROLE ID =======================\n        if (!this.state.roleId.length) {\n          let result = this.props.roleList.find(\n            (role) =>\n              role.system_user_role_id ===\n              this.props.userInfo.default_access!.system_user_role_id\n          );\n          if (result) {\n            this.setRoleId(\n              this.props.userInfo.default_access.system_user_role_id\n            );\n            this.setSelectedRole(result);\n            this.setDefaultState(this.props.userInfo.default_access, result);\n          }\n        }\n\n        console.log(\"====================================\");\n        console.log({ vvvvv: this.props.userInfo.default_access });\n        console.log(\"====================================\");\n      }\n\n      if (this.state.selectedRole && this.props.userInfo.default_access) {\n        this.setDefaultState(\n          this.props.userInfo.default_access,\n          this.state.selectedRole\n        );\n      }\n\n      this.setLoading(false);\n    }\n  };\n\n  handleSelectRole = (\n    role_id: string,\n    TYPE: \"SELECT\" | \"DEFAULT\" = \"SELECT\"\n  ) => {\n    if (this.props.roleList) {\n      let result = this.props.roleList.find(\n        (role) => role.system_user_role_id === role_id\n      );\n      if (result) {\n        this.setRoleId(role_id);\n        this.setSelectedRole(result);\n        this.state.formError &&\n          this.state.formError.element === \"role_id\" &&\n          this.setFormError(null);\n\n        if (TYPE === \"SELECT\") {\n          this.setProvinceId(\"\");\n          this.setDistrictId(\"\");\n          this.setSchoolId(\"\");\n          this.setCenterId(\"\");\n          this.setRoomId(\"\");\n          this.setInstituteId(\"\");\n        }\n      }\n    }\n  };\n\n  tableData = (): JSX.Element[] => {\n    if (\n      this.state.roleId.length > 0 &&\n      this.state.selectedRole === null &&\n      this.props.roleList\n    ) {\n      this.handleSelectRole(this.state.roleId, \"DEFAULT\");\n    }\n    if (this.state.selectedRole) {\n      return this.state.selectedRole.access.map((access, i) => (\n        <tr\n          key={i + access.id + Math.random()}\n          className={`text-left border-b border-gray-200 hover:bg-gray-100`}\n        >\n          <td className=\"px-2 py-1\">\n            <label className=\"inline-flex items-center\">\n              <span className=\"text-gray-900 capitalize text-xl font-normal cursor-pointer\">\n                {access.task}\n              </span>\n            </label>\n          </td>\n          <td>\n            <div\n              className={`inline-flex items-center text-xl ${\n                access.permitted.create ? \"text-green-700\" : \"text-red-700\"\n              }`}\n            >\n              {access.permitted.create ? (\n                <TiInputChecked />\n              ) : (\n                <MdHighlightOff />\n              )}\n              {access.permitted.create ? \" Yes\" : \"No\"}\n            </div>\n          </td>\n          <td>\n            <div\n              className={`inline-flex items-center text-xl ${\n                access.permitted.view ? \"text-green-700\" : \"text-red-700\"\n              }`}\n            >\n              {access.permitted.view ? <TiInputChecked /> : <MdHighlightOff />}\n              {access.permitted.view ? \" Yes\" : \"No\"}\n            </div>\n          </td>\n          <td>\n            <div\n              className={`inline-flex items-center text-xl ${\n                access.permitted.update ? \"text-green-700\" : \"text-red-700\"\n              }`}\n            >\n              {access.permitted.update ? (\n                <TiInputChecked />\n              ) : (\n                <MdHighlightOff />\n              )}\n              {access.permitted.update ? \" Yes\" : \"No\"}\n            </div>\n          </td>\n          <td>\n            <div\n              className={`inline-flex items-center text-xl ${\n                access.permitted.delete ? \"text-green-700\" : \"text-red-700\"\n              }`}\n            >\n              {access.permitted.delete ? (\n                <TiInputChecked />\n              ) : (\n                <MdHighlightOff />\n              )}\n              {access.permitted.delete ? \" Yes\" : \"No\"}\n            </div>\n          </td>\n        </tr>\n      ));\n    }\n    const optionB = [\n      <tr key=\"55re\">\n        <td colSpan={5} className=\"text-center px-2 py-2\">\n          No Default Access Available on this Role.\n        </td>\n      </tr>,\n    ];\n    return optionB;\n  };\n\n  assignRoleToUser = async (e: React.FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n    if (!window.confirm(`Are sure you want to change user role?`)) {\n      return false;\n    }\n\n    if (!this.state.selectedRole) {\n      return this.setFormError({\n        element: \"role_id\",\n        msg: \"User role is required!\",\n      });\n    }\n\n    if (\n      this.state.selectedRole.room_required === true &&\n      isEmptyOrSpaces(this.state.provinceId)\n    ) {\n      return this.setFormError({\n        element: \"province_id\",\n        msg: \"Province is required!\",\n      });\n    }\n\n    if (\n      this.state.selectedRole.education_institution_required === true &&\n      isEmptyOrSpaces(this.state.instituteId)\n    ) {\n      return this.setFormError({\n        element: \"institute_id\",\n        msg: \"Institute is required on this role!\",\n      });\n    }\n\n    if (\n      (this.state.selectedRole.room_required === true ||\n        this.state.selectedRole.district_required === true) &&\n      isEmptyOrSpaces(this.state.districtId)\n    ) {\n      return this.setFormError({\n        element: \"district_id\",\n        msg: \"District is required!\",\n      });\n    }\n\n    if (\n      this.state.selectedRole.school_required === true &&\n      isEmptyOrSpaces(this.state.schoolId)\n    ) {\n      return this.setFormError({\n        element: \"school_id\",\n        msg: \"School is required!\",\n      });\n    }\n\n    if (\n      this.state.selectedRole.room_required === true &&\n      isEmptyOrSpaces(this.state.centerId)\n    ) {\n      return this.setFormError({\n        element: \"center_id\",\n        msg: \"Center is required!\",\n      });\n    }\n\n    if (\n      this.state.selectedRole.room_required === true &&\n      isEmptyOrSpaces(this.state.roomId)\n    ) {\n      return this.setFormError({\n        element: \"room_id\",\n        msg: \"Room is required!\",\n      });\n    }\n    this.setLoadingRequest(true);\n    let formData: AssignRoleToUserActionInterface = {\n      user_id: this.props.userInfo.user_id,\n      data: {\n        system_user_role_id: this.state.roleId,\n        status: 1,\n        role: this.state.selectedRole.role,\n        access: this.state.selectedRole.access,\n        school_id: this.state.selectedRole.school_required\n          ? this.state.schoolId\n          : \"\",\n        district_id: this.state.selectedRole.district_required\n          ? this.state.districtId\n          : \"\",\n        room_id: this.state.selectedRole.room_required ? this.state.roomId : \"\",\n        education_institution_id: this.state.selectedRole\n          .education_institution_required\n          ? this.state.instituteId\n          : \"\",\n      },\n    };\n\n    try {\n      const res = await axios.post(`${API.AUTH}/addroletouser`, {\n        user_id: this.props.userInfo.user_id,\n        system_user_role_id: this.state.roleId,\n        status: 1,\n        role: this.state.selectedRole.role,\n        access: true,\n        school_id:\n          this.state.selectedRole.school_required === true\n            ? this.state.schoolId\n            : \"\",\n        district_id:\n          this.state.selectedRole.district_required === true\n            ? this.state.districtId\n            : \"\",\n        room_id:\n          this.state.selectedRole.room_required === true\n            ? this.state.roomId\n            : \"\",\n        education_institution_id: this.state.selectedRole\n          .education_institution_required\n          ? this.state.instituteId\n          : \"\",\n      });\n      if (res) {\n        console.log(\"====================================\");\n        console.log({ assignRoleToUser: res });\n        console.log(\"====================================\");\n        this.props.assignRoleToUserAccess(formData, this.props.currentPage);\n        this.setLoadingRequest(false);\n        this.props.setChangeRole(false);\n        this.props.PushPopupAlert({\n          title: \"Assigning Role to User completed successfully\",\n          theme: PopupAlertTheme.success,\n        });\n      }\n    } catch (error) {\n      console.log({ role_error: error });\n      this.props.PushPopupAlert({\n        title: errorToText(error),\n        theme: PopupAlertTheme.danger,\n      });\n    }\n  };\n\n  distinctDistrict = (\n    location: RoomLocationInterface[],\n    province_id?: string\n  ): DistrictInterface[] => {\n    let ids: string[] = [],\n      result: DistrictInterface[] = [];\n\n    if (province_id) {\n      result = location.find((item) => item._id === province_id)\n        ? location.find((item) => item._id === province_id)!.districts\n          ? location.find((item) => item._id === province_id)!.districts\n          : []\n        : [];\n    } else {\n      for (const key in location) {\n        if (Object.prototype.hasOwnProperty.call(location, key)) {\n          for (const keyDistrict in location[key].districts) {\n            if (\n              Object.prototype.hasOwnProperty.call(\n                location[key].districts,\n                keyDistrict\n              )\n            ) {\n              if (!ids.includes(location[key].districts[keyDistrict]._id)) {\n                ids.push(location[key].districts[keyDistrict]._id);\n                result.push(location[key].districts[keyDistrict]);\n              }\n            }\n          }\n        }\n      }\n    }\n\n    return result;\n  };\n\n  distinctCenter = (\n    rooms: RoomLocationInterface[],\n    district_id: string\n  ): LocationRoomTableInterface[] => {\n    let ids: string[] = [],\n      result: LocationRoomTableInterface[] = [];\n\n    LocationsInArray(rooms).forEach((element) => {\n      if (\n        !ids.includes(element.center_id) &&\n        element.district_id === district_id\n      ) {\n        ids.push(element.center_id);\n        result.push(element);\n      }\n    });\n    return result;\n  };\n\n  distinctRoom = (\n    rooms: RoomLocationInterface[],\n    center_id: string\n  ): LocationRoomTableInterface[] => {\n    let ids: string[] = [],\n      result: LocationRoomTableInterface[] = [];\n\n    LocationsInArray(rooms).forEach((element) => {\n      if (!ids.includes(element.room_id) && element.center_id === center_id) {\n        ids.push(element.room_id);\n        result.push(element);\n      }\n    });\n    return result;\n  };\n\n  render() {\n    if (\n      this.state.loading === true ||\n      this.state.loadingForm ||\n      this.props.userInfo.default_access === null ||\n      this.state.roleId.length === 0 ||\n      this.state.selectedRole === null\n    ) {\n      return (\n        <div className=\"text-center py-7 font-bold text-3xl text-gray-400 animate-pulse\">\n          Loading...\n        </div>\n      );\n    }\n\n    return (\n      <div className=\"grid grid-cols-1 md:grid-cols-3 gap-8 py-2 md:py-4 px-2 md:px-0\">\n        {/* left panel */}\n        <div className=\"col-span-1 bg-white w-full overflow-x-auto border rounded\">\n          <div className=\"px-6 md:px-12 py-5 bg-white mx-auto rounded-2xl w-100\">\n            <h3 className=\"font-semibold text-2xl text-gray-800 mb-4\">\n              Change User Role\n            </h3>\n            {this.state.loadingForm ? (\n              <Loading />\n            ) : (\n              <form onSubmit={(e) => this.assignRoleToUser(e)}>\n                <div className=\"space-y-5\">\n                  <div className=\"space-y-2\">\n                    <label className=\"text-sm font-medium text-gray-700 tracking-wide\">\n                      User Role\n                    </label>\n\n                    {!this.state.chooseRole && (\n                      <div\n                        className={`w-full text-base bg-white text-grey-darker cursor-pointer border-2 px-4 py-3 rounded focus:outline-none focus:bg-gray-100 ${\n                          this.state.formError &&\n                          this.state.formError.element === \"role_id\"\n                            ? \"border-red-500\"\n                            : \"border-gray-400\"\n                        }`}\n                        onClick={() => {\n                          !this.state.loadingRequest &&\n                            this.setChooseRole(true);\n                          !this.state.loadingRequest && this.setFormError(null);\n                        }}\n                      >\n                        {this.state.selectedRole\n                          ? this.state.selectedRole.role\n                          : \"Select role\"}\n                      </div>\n                    )}\n\n                    {this.state.chooseRole && (\n                      <RoleList\n                        setChooseRole={this.setChooseRole}\n                        handleSelectRole={this.handleSelectRole}\n                        roleList={this.props.roleList}\n                        loadindRequest={this.state.loadingRequest}\n                      />\n                    )}\n\n                    {this.state.formError &&\n                      this.state.formError.element === \"role_id\" && (\n                        <span className=\"text-red-500\">\n                          {this.state.formError.msg}\n                        </span>\n                      )}\n                  </div>\n\n                  {this.state.selectedRole &&\n                    this.state.selectedRole.education_institution_required && (\n                      <div className=\"space-y-2\">\n                        <label className=\"mb-5 text-sm font-medium text-gray-700 tracking-wide\">\n                          Institute\n                        </label>\n                        <select\n                          className={`block w-full text-base bg-white text-grey-darker border-2 rounded px-4 py-3 md:w-full focus:outline-none focus:bg-gray-100 ${\n                            this.state.formError &&\n                            this.state.formError.element === \"institute_id\"\n                              ? \"border-red-500\"\n                              : \"border-gray-400\"\n                          }`}\n                          onChange={(e) => {\n                            this.setInstituteId(e.target.value);\n                            this.setProvinceId(\"\");\n                            this.setDistrictId(\"\");\n                            this.setSchoolId(\"\");\n                            this.setCenterId(\"\");\n                            this.setRoomId(\"\");\n                            this.state.formError &&\n                              this.state.formError.element === \"institute_id\" &&\n                              this.setFormError(null);\n                          }}\n                          disabled={this.state.loadingRequest}\n                          value={this.state.instituteId}\n                        >\n                          <option value=\"\">Select institute</option>\n                          {this.props.schoolLevels.education_categories &&\n                          this.props.schoolLevels.education_categories.length >\n                            0 ? (\n                            this.props.schoolLevels.education_categories.map(\n                              (institute) => (\n                                <option\n                                  value={institute.education_institute_id}\n                                  key={\n                                    institute.education_institute_id +\n                                    Math.random()\n                                  }\n                                >\n                                  {institute.education_category_title}\n                                </option>\n                              )\n                            )\n                          ) : (\n                            <option value=\"\" disabled>\n                              No institute available\n                            </option>\n                          )}\n                        </select>\n                        {this.state.formError &&\n                          this.state.formError.element === \"institute_id\" && (\n                            <span className=\"text-red-500\">\n                              {this.state.formError.msg}\n                            </span>\n                          )}\n                      </div>\n                    )}\n\n                  {this.state.selectedRole &&\n                    this.state.selectedRole.room_required && (\n                      <div className=\"space-y-2\">\n                        <label className=\"mb-5 text-sm font-medium text-gray-700 tracking-wide\">\n                          Province\n                        </label>\n                        <select\n                          className={`block w-full text-base bg-white text-grey-darker border-2 rounded px-4 py-3 md:w-full focus:outline-none focus:bg-gray-100 ${\n                            this.state.formError &&\n                            this.state.formError.element === \"province_id\"\n                              ? \"border-red-500\"\n                              : \"border-gray-400\"\n                          }`}\n                          onChange={(e) => {\n                            this.setProvinceId(e.target.value);\n                            this.state.formError &&\n                              this.state.formError.element === \"province_id\" &&\n                              this.setFormError(null);\n                            this.setDistrictId(\"\");\n                            this.setSchoolId(\"\");\n                            this.setCenterId(\"\");\n                            this.setRoomId(\"\");\n                          }}\n                          value={this.state.provinceId}\n                          disabled={this.state.loadingRequest}\n                        >\n                          <option value=\"\">Select province</option>\n                          {this.props.roomList &&\n                            this.props.roomList.map((province) => (\n                              <option\n                                key={province._id + Math.random()}\n                                value={province._id}\n                              >\n                                {province.province_name}\n                              </option>\n                            ))}\n                        </select>\n                        {this.state.formError &&\n                          this.state.formError.element === \"province_id\" && (\n                            <span className=\"text-red-500\">\n                              {this.state.formError.msg}\n                            </span>\n                          )}\n                      </div>\n                    )}\n                  {this.state.selectedRole &&\n                    (this.state.selectedRole.district_required ||\n                      this.state.selectedRole.room_required) && (\n                      <div className=\"space-y-2\">\n                        <label className=\"mb-5 text-sm font-medium text-gray-700 tracking-wide\">\n                          District\n                        </label>\n                        <select\n                          className={`block w-full text-base bg-white text-grey-darker border-2 rounded px-4 py-3 md:w-full focus:outline-none focus:bg-gray-100 ${\n                            this.state.formError &&\n                            this.state.formError.element === \"district_id\"\n                              ? \"border-red-500\"\n                              : \"border-gray-400\"\n                          }`}\n                          onChange={(e) => {\n                            this.setDistrictId(e.target.value);\n                            this.state.formError &&\n                              this.state.formError.element === \"district_id\" &&\n                              this.setFormError(null);\n                            this.setSchoolId(\"\");\n                            this.setCenterId(\"\");\n                            this.setRoomId(\"\");\n                          }}\n                          value={this.state.districtId}\n                          disabled={this.state.loadingRequest}\n                        >\n                          <option value=\"\">Select district</option>\n                          {this.props.roomList &&\n                          this.distinctDistrict(\n                            this.props.roomList,\n                            !isEmptyOrSpaces(this.state.provinceId)\n                              ? this.state.provinceId\n                              : undefined\n                          ).length > 0 ? (\n                            this.distinctDistrict(\n                              this.props.roomList,\n                              !isEmptyOrSpaces(this.state.provinceId)\n                                ? this.state.provinceId\n                                : undefined\n                            ).map((district) => (\n                              <option\n                                key={district._id + Math.random()}\n                                value={district._id}\n                              >\n                                {district.district_name}\n                              </option>\n                            ))\n                          ) : (\n                            <option value=\"\" disabled>\n                              No district found\n                            </option>\n                          )}\n                        </select>\n                        {this.state.formError &&\n                          this.state.formError.element === \"district_id\" && (\n                            <span className=\"text-red-500\">\n                              {this.state.formError.msg}\n                            </span>\n                          )}\n                      </div>\n                    )}\n                  {this.state.selectedRole &&\n                    this.state.selectedRole.school_required && (\n                      <div className=\"space-y-2\">\n                        <label className=\"mb-5 text-sm font-medium text-gray-700 tracking-wide\">\n                          School\n                        </label>\n                        {/* {!this.state.chooseSchool && (\n                          <div\n                            className={`w-full text-base bg-white text-grey-darker cursor-pointer border-2 px-4 py-3 rounded focus:outline-none focus:bg-gray-100 ${\n                              this.state.formError &&\n                              this.state.formError.element === \"school_id\"\n                                ? \"border-red-500\"\n                                : \"border-gray-400\"\n                            }`}\n                            onClick={() => {\n                              !this.state.loadingRequest &&\n                                this.setChooseSchool(true);\n                              !this.state.loadingRequest &&\n                                this.setFormError(null);\n                            }}\n                          >\n                            {this.state.schoolId\n                              ? this.state.schoolId\n                              : \"Select school\"}\n                          </div>\n                        )}\n\n                        {this.state.chooseSchool && (\n                          <ChooseSchoolById\n                            allSchool={this.props.schoolList}\n                            setSelectSchool={(school_id: string) => {\n                              this.setSchoolId(school_id);\n                              this.state.formError &&\n                                this.state.formError.element === \"school_id\" &&\n                                this.setFormError(null);\n                              this.setCenterId(\"\");\n                              this.setRoomId(\"\");\n                            }}\n                            currentSelected={this.state.schoolId}\n                            setChooseSchool={this.setChooseSchool}\n                          />\n                        )} */}\n                        <select\n                          className={`block w-full text-base bg-white text-grey-darker border-2 rounded px-4 py-3 md:w-full focus:outline-none focus:bg-gray-100 ${\n                            this.state.formError &&\n                            this.state.formError.element === \"school_id\"\n                              ? \"border-red-500\"\n                              : \"border-gray-400\"\n                          }`}\n                          onChange={(e) => {\n                            this.setSchoolId(e.target.value);\n                            this.state.formError &&\n                              this.state.formError.element === \"school_id\" &&\n                              this.setFormError(null);\n                            this.setCenterId(\"\");\n                            this.setRoomId(\"\");\n                          }}\n                          disabled={this.state.loadingRequest}\n                          value={this.state.schoolId}\n                        >\n                          <option value=\"\">Selected school</option>\n                          {this.props.schoolList &&\n                            this.props.schoolList.map((school) => (\n                              <option\n                                value={school._id}\n                                key={school._id + Math.random()}\n                              >\n                                {school.school_name}\n                              </option>\n                            ))}\n                        </select>\n                        {this.state.formError &&\n                          this.state.formError.element === \"school_id\" && (\n                            <span className=\"text-red-500\">\n                              {this.state.formError.msg}\n                            </span>\n                          )}\n                      </div>\n                    )}\n\n                  {this.state.selectedRole &&\n                    this.state.selectedRole.room_required && (\n                      <div className=\"space-y-2\">\n                        <label className=\"mb-5 text-sm font-medium text-gray-700 tracking-wide\">\n                          Center\n                        </label>\n                        <select\n                          className={`block w-full text-base bg-white text-grey-darker border-2 rounded px-4 py-3 md:w-full focus:outline-none focus:bg-gray-100 ${\n                            this.state.formError &&\n                            this.state.formError.element === \"center_id\"\n                              ? \"border-red-500\"\n                              : \"border-gray-400\"\n                          }`}\n                          onChange={(e) => {\n                            this.setCenterId(e.target.value);\n                            this.state.formError &&\n                              this.state.formError.element === \"center_id\" &&\n                              this.setFormError(null);\n                            this.setRoomId(\"\");\n                          }}\n                          disabled={this.state.loadingRequest}\n                          value={this.state.centerId}\n                        >\n                          <option value=\"\">Select center</option>\n                          {this.state.districtId &&\n                          this.state.districtId.length > 0 &&\n                          this.props.roomList &&\n                          this.distinctCenter(\n                            this.props.roomList,\n                            this.state.districtId\n                          ).length > 0 ? (\n                            this.distinctCenter(\n                              this.props.roomList,\n                              this.state.districtId\n                            ).map((center, index) => (\n                              <option\n                                value={center.center_id}\n                                key={center.center_id + index + Math.random()}\n                              >\n                                {center.center_name}\n                              </option>\n                            ))\n                          ) : (\n                            <option value=\"\" disabled>\n                              No center found\n                            </option>\n                          )}\n                        </select>\n                        {this.state.formError &&\n                          this.state.formError.element === \"center_id\" && (\n                            <span className=\"text-red-500\">\n                              {this.state.formError.msg}\n                            </span>\n                          )}\n                      </div>\n                    )}\n\n                  {this.state.selectedRole &&\n                    this.state.selectedRole.room_required && (\n                      <div className=\"space-y-2\">\n                        <label className=\"mb-5 text-sm font-medium text-gray-700 tracking-wide\">\n                          Room\n                        </label>\n                        <select\n                          className={`block w-full text-base bg-white text-grey-darker border-2 rounded px-4 py-3 md:w-full focus:outline-none focus:bg-gray-100 ${\n                            this.state.formError &&\n                            this.state.formError.element === \"room_id\"\n                              ? \"border-red-500\"\n                              : \"border-gray-400\"\n                          }`}\n                          onChange={(e) => {\n                            this.setRoomId(e.target.value);\n                            this.state.formError &&\n                              this.state.formError.element === \"room_id\" &&\n                              this.setFormError(null);\n                          }}\n                          disabled={this.state.loadingRequest}\n                          value={this.state.roomId}\n                        >\n                          <option value=\"\">Select room</option>\n                          {!isEmptyOrSpaces(this.state.centerId) &&\n                          this.props.roomList &&\n                          this.distinctRoom(\n                            this.props.roomList,\n                            this.state.centerId\n                          ).length > 0 ? (\n                            this.distinctRoom(\n                              this.props.roomList,\n                              this.state.centerId\n                            ).map((room, index) => (\n                              <option\n                                value={room.room_id}\n                                key={room.room_id + index + Math.random()}\n                                className={`${\n                                  room.room_name === \"0\" ? \"hidden\" : \"block\"\n                                }`}\n                              >\n                                {room.room_name}\n                              </option>\n                            ))\n                          ) : (\n                            <option value=\"\" disabled>\n                              No room found\n                            </option>\n                          )}\n                        </select>\n                        {this.state.formError &&\n                          this.state.formError.element === \"room_id\" && (\n                            <span className=\"text-red-500\">\n                              {this.state.formError.msg}\n                            </span>\n                          )}\n                      </div>\n                    )}\n\n                  <div className=\"flex justify-between 2xl:justify-start gap-2\">\n                    <button\n                      className=\"btn bg-gray-500 text-gray-50 focus:outline-none\"\n                      onClick={() => {\n                        this.props.setChangeRole(false);\n                        this.setFormError(null);\n                        this.setProvinceId(\"\");\n                        this.setDistrictId(\"\");\n                        this.setSchoolId(\"\");\n                        this.setCenterId(\"\");\n                        this.setRoomId(\"\");\n                      }}\n                      disabled={this.state.loadingRequest}\n                    >\n                      Back\n                    </button>\n                    <button\n                      className=\"btn btn-blue focus:outline-none\"\n                      // onClick={() => assignRoleToUser()}\n                      disabled={this.state.loadingRequest}\n                    >\n                      {this.state.loadingRequest ? \"Loading...\" : \"Save Change\"}\n                    </button>\n                  </div>\n                </div>\n              </form>\n            )}\n          </div>\n        </div>\n        {/* end left panel */}\n\n        {/* ------------------------------------------------------------ */}\n\n        {/* right panel */}\n        <div className=\"cols-span-1 md:col-span-2 bg-white w-full border rounded text-center p-2 hidden md:block\">\n          <div className=\"my-4\">\n            <span className=\"text-gray-600 font-semibold text-2xl\">\n              {this.state.selectedRole?.role}'s Default Access\n            </span>\n          </div>\n          {!this.state.loading && (\n            <div className=\"overflow-x-auto w-full\">\n              <Table\n                columns={[\n                  {\n                    columnTitle: \"Access Name\",\n                    alignText: \"left\",\n                    padding: \"p-3\",\n                  },\n                  { columnTitle: \"Create\", alignText: \"left\" },\n                  { columnTitle: \"View\", alignText: \"left\" },\n                  { columnTitle: \"Update\", alignText: \"left\" },\n                  { columnTitle: \"Delete\", alignText: \"left\" },\n                ]}\n                rows={this.tableData}\n                pagination={false}\n                search={false}\n                searchBG=\"bg-gray-50\"\n                thColor=\"gray\"\n                tableId=\"defaultAccess\"\n              />\n            </div>\n          )}\n        </div>\n        {/* end right panel */}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = ({\n  schoolLevels,\n}: StoreState): {\n  schoolLevels: schoolLevelsStoreInterface;\n} => {\n  return { schoolLevels };\n};\n\nexport default connect(mapStateToProps, {\n  assignRoleToUserAccess,\n  PushPopupAlert,\n})(UserRole);\n","export default __webpack_public_path__ + \"static/media/blank_profile.c3f94521.png\";","import axios from \"axios\";\nimport React, { Component } from \"react\";\nimport { BiRightArrowAlt } from \"react-icons/bi\";\nimport {\n  MdDelete,\n  MdEdit,\n  MdHighlightOff,\n  MdRemoveRedEye,\n  MdSettings,\n} from \"react-icons/md\";\nimport { SiAddthis } from \"react-icons/si\";\nimport { TiInputChecked } from \"react-icons/ti\";\nimport { connect } from \"react-redux\";\nimport { Redirect } from \"react-router-dom\";\nimport { PushPopupAlert } from \"../../actions\";\nimport { customizeUserAccess } from \"../../actions/users\";\nimport { PopupAlertData } from \"../../components/Alert/Popup\";\nimport Table from \"../../components/Table/Table\";\nimport { PopupAlertTheme } from \"../../interfaces/popupAlert\";\nimport {\n  UserInterface,\n  AccessTaskInterface,\n  CustomeAccessInterface,\n} from \"../../shared/interfaces\";\nimport { API } from \"../../utils/api\";\nimport { errorToText } from \"../../utils/errors\";\n\ninterface AppProps {\n  userInfo: UserInterface | undefined;\n  manageUserId: string;\n  setUserAccess: (value: AccessTaskInterface[] | null) => void;\n  userAccess: AccessTaskInterface[] | null;\n  setCurrentAccess: (value: AccessTaskInterface | null) => void;\n  currentAccess: AccessTaskInterface | null;\n  currentPage: number;\n\n  // REDUX ==============\n  PushPopupAlert: (alert: PopupAlertData) => void;\n  customizeUserAccess: Function;\n}\n\ninterface AppStates {\n  loading: boolean;\n  loadindRequest: boolean;\n  // currentAccess:AccessTaskInterface | null;\n  // userAccess:AccessTaskInterface[] | null;\n  createPermission: boolean;\n  viewPermission: boolean;\n  updatePermission: boolean;\n  deletePermission: boolean;\n}\n\nclass _UserAccess extends Component<AppProps, AppStates> {\n  constructor(props: AppProps) {\n    super(props);\n\n    this.state = {\n      loading: true,\n      loadindRequest: false,\n      // currentAccess:null,\n      // userAccess:null,\n      createPermission: false,\n      viewPermission: false,\n      updatePermission: false,\n      deletePermission: false,\n    };\n  }\n\n  setViewPermission = (value: boolean) => {\n    this.setState({ viewPermission: value });\n  };\n\n  setLoadindRequest = (value: boolean) => {\n    this.setState({ loadindRequest: value });\n  };\n\n  setCreatePermission = (value: boolean) => {\n    this.setState({ createPermission: value });\n  };\n\n  setUpdatePermission = (value: boolean) => {\n    this.setState({ updatePermission: value });\n  };\n\n  setDeletePermission = (value: boolean) => {\n    this.setState({ deletePermission: value });\n  };\n\n  setLoadind = (value: boolean) => {\n    this.setState({ loading: value });\n  };\n\n  overrideUserAccess = (\n    default_access: AccessTaskInterface[],\n    custome_access: AccessTaskInterface[]\n  ) => {\n    if (default_access && custome_access && custome_access.length > 0) {\n      let overideAccess: AccessTaskInterface[] = [];\n      for (const key in default_access) {\n        if (Object.prototype.hasOwnProperty.call(default_access, key)) {\n          const findCustom = custome_access.find(\n            (custom) => custom.id === default_access[key].id\n          );\n          if (findCustom) {\n            overideAccess.push(findCustom);\n          } else {\n            overideAccess.push(default_access[key]);\n          }\n        }\n      }\n      this.props.setUserAccess(overideAccess);\n    }\n  };\n\n  componentDidMount = () => {\n    if (this.props.userInfo && this.props.userInfo.custome_access) {\n      this.props.userInfo.default_access &&\n        this.overrideUserAccess(\n          this.props.userInfo.default_access.access,\n          this.props.userInfo.custome_access.access\n        );\n      this.setLoadind(false);\n    } else {\n      this.props.userInfo &&\n        this.props.userInfo.default_access &&\n        this.props.setUserAccess(this.props.userInfo.default_access.access);\n      this.setLoadind(false);\n    }\n  };\n\n  tableData = (): JSX.Element[] => {\n    if (!this.props.userAccess)\n      return [\n        <tr key={Math.random()}>\n          <td>No data</td>\n        </tr>,\n      ];\n    return this.props.userAccess.map((access: AccessTaskInterface, i) => (\n      <tr\n        key={i + access.id + Math.random()}\n        className={`text-left border-b border-gray-200 cursor-pointer hover:bg-gray-100 ${\n          this.props.currentAccess &&\n          this.props.currentAccess.id === access.id &&\n          \"bg-gray-200 border my-3 hover:bg-gray-100\"\n        }`}\n        onClick={() =>\n          this.props.currentAccess && this.props.currentAccess.id === access.id\n            ? (this.props.setCurrentAccess(null),\n              this.setCreatePermission(false),\n              this.setViewPermission(false),\n              this.setUpdatePermission(false),\n              this.setDeletePermission(false))\n            : (this.props.setCurrentAccess(access),\n              this.setCreatePermission(access.permitted.create),\n              this.setViewPermission(access.permitted.view),\n              this.setUpdatePermission(access.permitted.update),\n              this.setDeletePermission(access.permitted.delete))\n        }\n      >\n        <td className=\"px-2 py-1\">\n          <label className=\"inline-flex items-center\">\n            {/* <input\n              type=\"radio\"\n              name=\"taskAccess\"\n              value={access.id}\n              className=\"form-radio h-4 w-4 text-gray-600\"\n              onChange={() => {\n                currentAccess\n                  ? this.setState({ currentAccess: null })\n                  : this.setState({ currentAccess: access });\n              }}\n              checked={currentAccess ? true : false}\n            /> */}\n            <span className=\"text-gray-900 capitalize text-xl font-normal cursor-pointer\">\n              {access.task}\n            </span>\n          </label>\n        </td>\n        <td>\n          <div\n            className={`inline-flex items-center text-xl ${\n              access.permitted.create ? \"text-green-700\" : \"text-red-700\"\n            }`}\n          >\n            {access.permitted.create ? <TiInputChecked /> : <MdHighlightOff />}\n            {access.permitted.create ? \" Yes\" : \"No\"}\n          </div>\n        </td>\n        <td>\n          <div\n            className={`inline-flex items-center text-xl ${\n              access.permitted.view ? \"text-green-700\" : \"text-red-700\"\n            }`}\n          >\n            {access.permitted.view ? <TiInputChecked /> : <MdHighlightOff />}\n            {access.permitted.view ? \" Yes\" : \"No\"}\n          </div>\n        </td>\n        <td>\n          <div\n            className={`inline-flex items-center text-xl ${\n              access.permitted.update ? \"text-green-700\" : \"text-red-700\"\n            }`}\n          >\n            {access.permitted.update ? <TiInputChecked /> : <MdHighlightOff />}\n            {access.permitted.update ? \" Yes\" : \"No\"}\n          </div>\n        </td>\n        <td>\n          <div\n            className={`inline-flex items-center text-xl ${\n              access.permitted.delete ? \"text-green-700\" : \"text-red-700\"\n            }`}\n          >\n            {access.permitted.delete ? <TiInputChecked /> : <MdHighlightOff />}\n            {access.permitted.delete ? \" Yes\" : \"No\"}\n          </div>\n        </td>\n      </tr>\n    ));\n  };\n\n  handleCustomization = async (e: React.FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n    if (this.props.userInfo) {\n      this.setLoadindRequest(true);\n      let task: [] | CustomeAccessInterface | null = null;\n      task = this.props.userInfo.custome_access;\n      let index = -1;\n\n      try {\n        if (task && this.props.currentAccess) {\n          index = task.access.findIndex(\n            (access) => access.id === this.props.currentAccess!.id\n          );\n          if (index >= 0) {\n            task.access[index].permitted.create = this.state.createPermission;\n            task.access[index].permitted.view = this.state.viewPermission;\n            task.access[index].permitted.update = this.state.updatePermission;\n            task.access[index].permitted.delete = this.state.deletePermission;\n          } else {\n            task.access.push({\n              id: this.props.currentAccess.id,\n              task: this.props.currentAccess.task,\n              key: this.props.currentAccess.key,\n              permitted: {\n                create: this.state.createPermission,\n                view: this.state.viewPermission,\n                update: this.state.updatePermission,\n                delete: this.state.deletePermission,\n              },\n            });\n          }\n        } else if (this.props.currentAccess) {\n          task = {\n            access: [\n              {\n                id: this.props.currentAccess.id,\n                task: this.props.currentAccess.task,\n                key: this.props.currentAccess.key,\n                permitted: {\n                  create: this.state.createPermission,\n                  view: this.state.viewPermission,\n                  update: this.state.updatePermission,\n                  delete: this.state.deletePermission,\n                },\n              },\n            ],\n            user_id: this.props.userInfo.user_id,\n            custome_user_access_id: \"\",\n          };\n        }\n\n        if (task) {\n          let res;\n          if (this.props.userInfo.custome_access !== null) {\n            res = await axios.patch<{ data: CustomeAccessInterface }>(\n              `${API.AUTH}/custaccess`,\n              {\n                access: task.access,\n                user_id: this.props.userInfo.user_id,\n              }\n            );\n          } else {\n            res = await axios.post<{ data: CustomeAccessInterface }>(\n              `${API.AUTH}/custaccess`,\n              {\n                access: task.access,\n                user_id: this.props.userInfo.user_id,\n              }\n            );\n          }\n\n          if (res) {\n            task.custome_user_access_id = res.data.data.custome_user_access_id;\n\n            this.props.customizeUserAccess(task, this.props.currentPage);\n            task &&\n              this.props.userInfo.default_access &&\n              this.overrideUserAccess(\n                this.props.userInfo.default_access.access,\n                task.access\n              );\n            this.props.PushPopupAlert({\n              title: `Resetting User Access complete successfully`,\n              theme: PopupAlertTheme.info,\n            });\n\n            task = null;\n            this.props.setCurrentAccess(null);\n            this.setCreatePermission(false);\n            this.setViewPermission(false);\n            this.setUpdatePermission(false);\n            this.setDeletePermission(false);\n          }\n        }\n      } catch (error) {\n        console.error({ customize_access: error });\n        this.props.PushPopupAlert({\n          title: errorToText(error),\n          theme: PopupAlertTheme.danger,\n        });\n      }\n      this.setLoadindRequest(false);\n    }\n  };\n\n  render() {\n    if (this.props.userInfo === undefined) {\n      return <Redirect to=\"/users\" />;\n    }\n\n    if (this.state.loading || this.props.userInfo === null) {\n      return (\n        <div className=\"text-center py-7 font-bold text-4xl text-gray-400 animate-pulse\">\n          Loading User Access...\n        </div>\n      );\n    }\n\n    return (\n      <div>\n        <div className=\"grid grid-cols-1 md:grid-cols-5 gap-4 mx-1 my-2\">\n          <div\n            className={`col-span-1 md:col-span-3 bg-white w-full overflow-x-auto border rounded text-center p-2 ${\n              this.props.currentAccess ? \"hidden md:block\" : \"\"\n            }`}\n          >\n            <span className=\"text-gray-600 mt-2 font-semibold text-2xl\">\n              Settings\n            </span>\n            {!this.state.loading && (\n              <div className=\"overflow-x-auto w-full\">\n                <Table\n                  columns={[\n                    {\n                      columnTitle: \"Access Name\",\n                      alignText: \"left\",\n                      padding: \"p-3\",\n                    },\n                    { columnTitle: \"Create\", alignText: \"left\" },\n                    { columnTitle: \"View\", alignText: \"left\" },\n                    { columnTitle: \"Update\", alignText: \"left\" },\n                    { columnTitle: \"Delete\", alignText: \"left\" },\n                  ]}\n                  rows={this.tableData}\n                  pagination={false}\n                  search={true}\n                  searchBG=\"bg-gray-50\"\n                  thColor=\"gray\"\n                />\n              </div>\n            )}\n          </div>\n          <div className={`col-span-1 md:col-span-2`}>\n            {!this.props.currentAccess ? (\n              <div className=\"w-full hidden md:flex flex-col items-center text-gray-600 gap-1 py-3\">\n                <MdSettings className=\"w-20 h-20\" />\n                <span className=\"text-8 md:text-12\">\n                  Choose Access to Customize\n                </span>\n              </div>\n            ) : (\n              <div className={``}>\n                <h1 className=\"text-2xl md:text-3xl font-semibold text-center my-2 text-gray-900\">\n                  Customize User Access\n                </h1>\n                <div className=\"flex justify-center mb-3\">\n                  <h2 className=\"text-2xl font-semibold text-center text-gray-600 flex flex-row items-center\">\n                    <BiRightArrowAlt className=\"w-7 h-7\" />\n                    {this.props.currentAccess.task}\n                  </h2>\n                </div>\n\n                <div className=\"flex flex-col px-2 md:px-1\">\n                  <form\n                    className=\"flex flex-col items-center\"\n                    onSubmit={(e) => this.handleCustomization(e)}\n                  >\n                    <div className=\"inline-flex gap-2 items-center\">\n                      <SiAddthis className=\"w-7 h-7 text-gray-600\" />\n                      <div className=\"flex flex-col\">\n                        <h3 className=\"font-semibold text-xl\">Create</h3>\n                        <span className=\"text-gray-600 text-sm md:pr-1\">\n                          This permission gives the user the ability to create\n                        </span>\n                      </div>\n                      <input\n                        type=\"checkbox\"\n                        className=\"form-checkbox h-7 w-7 text-teal-600\"\n                        onChange={() =>\n                          this.setCreatePermission(!this.state.createPermission)\n                        }\n                        checked={this.state.createPermission}\n                        disabled={this.state.loadindRequest}\n                      />\n                    </div>\n                    <div className=\"inline-flex gap-2 items-center\">\n                      <MdRemoveRedEye className=\"w-7 h-7 text-gray-600\" />\n                      <div className=\"flex flex-col\">\n                        <h3 className=\"font-semibold text-xl\">View</h3>\n                        <span className=\"text-gray-600 text-sm md:pr-4\">\n                          This permission gives the user the ability to view\n                        </span>\n                      </div>\n                      <input\n                        type=\"checkbox\"\n                        className=\"form-checkbox h-7 w-7 text-teal-600\"\n                        onChange={() =>\n                          this.setViewPermission(!this.state.viewPermission)\n                        }\n                        checked={this.state.viewPermission}\n                        disabled={this.state.loadindRequest}\n                      />\n                    </div>\n                    <div className=\"inline-flex gap-2 items-center\">\n                      <MdEdit className=\"w-7 h-7 text-gray-600\" />\n                      <div className=\"flex flex-col\">\n                        <h3 className=\"font-semibold text-xl\">Update</h3>\n                        <span className=\"text-gray-600 text-sm\">\n                          This permission gives the user the ability to update\n                        </span>\n                      </div>\n                      <input\n                        type=\"checkbox\"\n                        className=\"form-checkbox h-7 w-7 text-teal-600\"\n                        onChange={() =>\n                          this.setUpdatePermission(!this.state.updatePermission)\n                        }\n                        checked={this.state.updatePermission}\n                        disabled={this.state.loadindRequest}\n                      />\n                    </div>\n                    <div className=\"inline-flex gap-2 items-center\">\n                      <MdDelete className=\"w-7 h-7 text-gray-600\" />\n                      <div className=\"flex flex-col\">\n                        <h3 className=\"font-semibold text-xl\">Delete</h3>\n                        <span className=\"text-gray-600 text-sm md:pr-1\">\n                          This permission gives the user the ability to delete\n                        </span>\n                      </div>\n                      <input\n                        type=\"checkbox\"\n                        className=\"form-checkbox h-7 w-7 text-teal-600\"\n                        onChange={() =>\n                          this.setDeletePermission(!this.state.deletePermission)\n                        }\n                        checked={this.state.deletePermission}\n                        disabled={this.state.loadindRequest}\n                      />\n                    </div>\n\n                    <div className=\"flex items-center justify-center w-full py-3 gap-2\">\n                      {/* <button className=\"btn btn-secondary bg-red-600\">Back</button> */}\n                      <button\n                        className=\"btn bg-gray-500 hover:bg-gray-700 focus:outline-none text-white\"\n                        disabled={this.state.loadindRequest}\n                        onClick={() => {\n                          this.props.setCurrentAccess(null);\n                          this.setCreatePermission(false);\n                          this.setViewPermission(false);\n                          this.setUpdatePermission(false);\n                          this.setDeletePermission(false);\n                        }}\n                      >\n                        Cancel\n                      </button>\n                      <button\n                        className=\"btn btn-blue\"\n                        disabled={this.state.loadindRequest}\n                      >\n                        {!this.state.loadindRequest\n                          ? \"Save Change\"\n                          : \"Processing..\"}\n                      </button>\n                    </div>\n                  </form>\n                </div>\n              </div>\n            )}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport const UserAccess = connect(null, {\n  customizeUserAccess,\n  PushPopupAlert,\n})(_UserAccess);\n","import React, { useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport {\n  FC_CreateDistrict,\n  FC_DeleteDistrict,\n  FC_UpdateDistrict,\n} from \"../../actions/location\";\nimport axios from \"axios\";\nimport { API } from \"../../utils/api\";\nimport {\n  DistrictInterface,\n  RoomLocationInterface,\n} from \"../../shared/interfaces\";\nimport { PushPopupAlert } from \"../../actions/system\";\nimport { PopupAlertData } from \"../../components/Alert/Popup\";\nimport { PopupAlertTheme } from \"../../interfaces/popupAlert\";\nimport { errorToText } from \"../../utils/errors\";\nimport NoResult, { NoResultThemes } from \"../../components/NoResult/NoResult\";\nimport Modal, { ModalSize, Themes } from \"../../components/Modal/Modal\";\nimport { isEmptyOrSpaces } from \"../../shared/dataTest\";\n\ninterface AppProps {\n  thisProvince: RoomLocationInterface;\n  thisDistrict: DistrictInterface | null;\n  loadingRequest: boolean;\n  actionTypes:\n    | \"CREATE_PROVINCE\"\n    | \"UPDATE_PROVINCE\"\n    | \"CREATE_DISTRICT\"\n    | \"UPDATE_DISTRICT\"\n    | \"CREATE_SECTOR\"\n    | \"UPDATE_SECTOR\"\n    | null;\n  setLoadingRequest: React.Dispatch<React.SetStateAction<boolean>>;\n  setThisDistrict: React.Dispatch<\n    React.SetStateAction<DistrictInterface | null>\n  >;\n  setActionTypes: React.Dispatch<\n    React.SetStateAction<\n      | \"CREATE_PROVINCE\"\n      | \"UPDATE_PROVINCE\"\n      | \"CREATE_DISTRICT\"\n      | \"UPDATE_DISTRICT\"\n      | \"CREATE_SECTOR\"\n      | \"UPDATE_SECTOR\"\n      | null\n    >\n  >;\n  FC_CreateDistrict: Function;\n  FC_UpdateDistrict: Function;\n  FC_DeleteDistrict: Function;\n  PushPopupAlert: (alert: PopupAlertData) => void;\n}\n\nconst ViewDistrict: React.FC<AppProps> = (props) => {\n  const [districtName, setDistrictName] = useState<string>(\"\");\n  const [districtCode, setDistrictCode] = useState<number>(0);\n  const [error, setError] = useState<{ element: string; msg: string } | null>(\n    null\n  );\n\n  const handleSubmit = async () => {\n    if (isEmptyOrSpaces(districtName)) {\n      return setError({\n        element: \"district_name\",\n        msg: \"District name is required\",\n      });\n    }\n\n    if (districtCode <= 0) {\n      return setError({\n        element: \"district_code\",\n        msg: \"Invalid district code, code must be greater than 0\",\n      });\n    }\n\n    props.setLoadingRequest(true);\n    try {\n      let res;\n      if (props.actionTypes === \"CREATE_DISTRICT\") {\n        res = await axios.post<{ data: DistrictInterface }>(\n          `${API.APPLICATION}/district`,\n          {\n            province_id: props.thisProvince._id,\n            province_code: props.thisProvince.province_code,\n            district_name: districtName,\n            district_code: districtCode,\n            centers: [],\n          }\n        );\n        if (res.data) {\n          console.log({\n            province_id: props.thisProvince._id,\n            data: res.data.data,\n            res,\n          });\n          props.FC_CreateDistrict({\n            province_id: props.thisProvince._id,\n            data: {\n              centers: res.data.data.centers,\n              sectors: res.data.data.sectors,\n              province_code: res.data.data.province_code,\n              province_id: res.data.data.province_id,\n              district_code: res.data.data.district_code,\n              district_name: res.data.data.district_name,\n              district_id: res.data.data._id,\n            },\n          });\n          props.PushPopupAlert({\n            title: \"New district created successfully\",\n            theme: PopupAlertTheme.success,\n          });\n          props.setLoadingRequest(false);\n          props.setActionTypes(null);\n          setDistrictName(\"\");\n          setDistrictCode(0);\n        }\n      } else if (\n        props.thisDistrict &&\n        props.actionTypes === \"UPDATE_DISTRICT\"\n      ) {\n        const centers: string[] = props.thisDistrict.centers.map(\n          (center) => center._id\n        );\n        res = await axios.patch<{ data: DistrictInterface }>(\n          `${API.APPLICATION}/district`,\n          {\n            district_id: props.thisDistrict._id,\n            province_code: props.thisProvince.province_code,\n            district_name: districtName,\n            district_code: districtCode,\n            centers,\n          }\n        );\n        if (res.data) {\n          props.FC_UpdateDistrict({\n            province_id: props.thisProvince._id,\n            district_id: props.thisDistrict._id,\n            district_name: districtName,\n          });\n          props.PushPopupAlert({\n            title: \"District updated successfully\",\n            theme: PopupAlertTheme.success,\n          });\n          props.setLoadingRequest(false);\n          props.setActionTypes(null);\n          setDistrictName(\"\");\n          props.setThisDistrict(null);\n        }\n      }\n    } catch (error) {\n      console.log({ doc_category_error: error });\n      props.PushPopupAlert({\n        title: errorToText(error),\n        theme: PopupAlertTheme.danger,\n      });\n      props.setLoadingRequest(false);\n    }\n  };\n\n  // const handleDelete = async (districtId: string) => {\n  //   try {\n  //     const res = await axios.delete<DistrictInterface>(\n  //       `${API.APPLICATION}/district/${districtId}`\n  //     );\n\n  //     if (res.data) {\n  //       props.FC_DeleteDistrict({\n  //         province_id: props.thisProvince._id,\n  //         district_id: districtId,\n  //       });\n  //       props.PushPopupAlert({\n  //         title: \"District deleted successfully\",\n  //         theme: PopupAlertTheme.success,\n  //       });\n  //       props.setLoadingRequest(false);\n  //       props.setActionTypes(null);\n  //     }\n  //   } catch (error) {\n  //     console.log({ district_error: error });\n  //     props.PushPopupAlert({\n  //       title: errorToText(error),\n  //       theme: PopupAlertTheme.danger,\n  //     });\n  //     props.setLoadingRequest(false);\n  //   }\n  // };\n\n  return (\n    <div className={`w-full p-2`}>\n      {props.thisProvince.districts.length > 0 ? (\n        <div className=\"rounded border border-gray-100 shadow-sm animate__animated animate__fadeIn\">\n          <table className=\"w-full z-0\">\n            <thead className=\"bg-gray-50\">\n              <tr className=\"text-left\">\n                <th className=\"px-3 py-3\">#</th>\n                <th>District name</th>\n                <th>District code</th>\n                <th>Sectors</th>\n                {/* <th>Status</th> */}\n              </tr>\n            </thead>\n            <tbody className=\"text-base\">\n              {props.thisProvince.districts.map((district, index) => (\n                <tr\n                  key={index + district._id}\n                  className={`text-left border-b border-gray-50`}\n                >\n                  <td className=\"px-3 py-1\">{index + 1}</td>\n                  <td>{district.district_name}</td>\n                  <td>{district.district_code}</td>\n                  <td>\n                    {district.sectors && district.sectors.length > 0\n                      ? district.sectors.length + \" Sector(s)\"\n                      : \"\"}\n                  </td>\n                  {/* <td>\n                    <div className=\"flex items-center gap-2\">\n                      <button\n                        title={\n                          props.thisDistrict &&\n                          props.thisDistrict._id === district._id\n                            ? \"Close Centers\"\n                            : \"View Centers\"\n                        }\n                        className={`${\n                          props.thisDistrict &&\n                          props.thisDistrict._id === district._id\n                            ? \"bg-gray-500 hover:bg-gray-600\"\n                            : \"bg-gray-400 hover:bg-gray-500\"\n                        } p-2 rounded-full shadow-md flex justify-center items-center focus:outline-none`}\n                        onClick={() =>\n                          !props.thisDistrict ||\n                          props.thisDistrict._id !== district._id\n                            ? props.setThisDistrict(district)\n                            : props.setThisDistrict(null)\n                        }\n                      >\n                        {props.thisDistrict &&\n                        props.thisDistrict._id === district._id ? (\n                          <IoMdEyeOff className=\"text-white w-4 h-4\" />\n                        ) : (\n                          <IoMdEye className=\"text-white w-4 h-4\" />\n                        )}\n                      </button>\n                      <button\n                        title=\"Update district\"\n                        className=\"bg-blue-500 hover:bg-blue-600 p-2 rounded-full shadow-md flex justify-center items-center focus:outline-none\"\n                        onClick={() => {\n                          props.setThisDistrict(district);\n                          setDistrictName(district.district_name);\n                          setDistrictCode(district.district_code);\n                          props.setActionTypes(\"UPDATE_DISTRICT\");\n                        }}\n                        disabled={\n                          props.loadingRequest || props.actionTypes !== null\n                        }\n                      >\n                        <MdCreate className=\"text-white w-4 h-4\" />\n                      </button>\n                      <button\n                        title=\"Delete Sub-Category\"\n                        className=\"bg-red-500 hover:bg-red-600 p-2 rounded-full shadow-md flex justify-center items-center focus:outline-none\"\n                        onClick={() => handleDelete(district._id)}\n                        disabled={props.loadingRequest}\n                      >\n                        <MdClear className=\"text-white w-4 h-4\" />\n                      </button>\n                    </div>\n                  </td> */}\n                </tr>\n              ))}\n            </tbody>\n          </table>\n        </div>\n      ) : (\n        <NoResult\n          theme={NoResultThemes.Dark}\n          value={\"No district found!\"}\n          component={\n            <div className=\"w-full mt-2 flex flex-row items-center justify-center\">\n              <ul className=\"text-sm py-2 text-blue-600 font-bold flex flex-row gap-2\">\n                <li\n                  onClick={() => props.setActionTypes(\"CREATE_DISTRICT\")}\n                  className=\"underline text-gray-500 cursor-pointer\"\n                >\n                  Add district\n                </li>\n              </ul>\n            </div>\n          }\n        />\n      )}\n\n      {/* modal for creating new categories or sub category */}\n      {props.actionTypes &&\n        (props.actionTypes === \"CREATE_DISTRICT\" ||\n          props.actionTypes === \"UPDATE_DISTRICT\") && (\n          <Modal\n            backDrop={true}\n            theme={Themes.default}\n            close={(): void => {\n              props.setActionTypes(null);\n              setDistrictName(\"\");\n              setDistrictCode(10);\n              setError(null);\n            }}\n            displayClose={false}\n            backDropClose={false}\n            title={\n              <div className=\"flex items-center space-x-5\">\n                <div className=\"block pl-2 font-semibold text-xl self-start text-gray-700\">\n                  {/* <p className=\"text-base text-gray-500 font-medium\">\n                    You are{\" \"}\n                    {actionType === \"CREATE_SUB\" || \"CREATE_CAT\"\n                      ? \"creating\"\n                      : \"updating\"}\n                  </p> */}\n                  <h2 className=\"uppercase text-back\">\n                    {props.actionTypes === \"CREATE_DISTRICT\"\n                      ? \"CREATING NEW DISTRICT\"\n                      : props.actionTypes === \"UPDATE_DISTRICT\" &&\n                        \"UPDATING EXISTING DISTRICT\"}\n                  </h2>\n                </div>\n              </div>\n            }\n            widthSizeClass={ModalSize.medium}\n            padding={{ title: true, body: false, footer: false }}\n          >\n            <div className=\"mx-5 mb-4\">\n              <div className=\"py-2 text-base leading-6 space-y-4 text-gray-700 sm:text-lg sm:leading-7\">\n                <div className=\"flex flex-col\">\n                  <label>District name</label>\n                  <input\n                    type=\"text\"\n                    className={`bg-white py-1 px-2 border-2 ${\n                      error && error.element === \"district_name\"\n                        ? \"border-red-700\"\n                        : \"border-gray-700\"\n                    } rounded focus:outline-none focus:bg-gray-100`}\n                    onChange={(e) => {\n                      error &&\n                        error.element === \"district_name\" &&\n                        setError(null);\n                      setDistrictName(e.target.value);\n                    }}\n                    value={districtName}\n                    disabled={props.loadingRequest}\n                  />\n                  {error && error.element === \"district_name\" && (\n                    <span className=\"text-red-700\">{error.msg}</span>\n                  )}\n                </div>\n                <div className=\"flex flex-col\">\n                  <label>District code</label>\n                  <input\n                    type=\"number\"\n                    className={`bg-white py-1 px-2 border-2 ${\n                      error && error.element === \"district_code\"\n                        ? \"border-red-700\"\n                        : \"border-gray-700\"\n                    } rounded focus:outline-none focus:bg-gray-100`}\n                    onChange={(e) => {\n                      error &&\n                        error.element === \"district_code\" &&\n                        setError(null);\n                      setDistrictCode(Number(e.target.value));\n                    }}\n                    value={districtCode}\n                    disabled={props.loadingRequest}\n                  />\n                  {error && error.element === \"district_code\" && (\n                    <span className=\"text-red-700\">{error.msg}</span>\n                  )}\n                </div>\n              </div>\n              <div className=\"pt-4 flex justify-between\">\n                <button\n                  onClick={() => {\n                    props.setActionTypes(null);\n                    setDistrictName(\"\");\n                    setDistrictCode(10);\n                    setError(null);\n                  }}\n                  className={`btn bg-gray-400 text-white hover:bg-gray-600`}\n                  type=\"button\"\n                  disabled={props.loadingRequest}\n                >\n                  Exit\n                </button>\n                <button\n                  className=\"btn bg-primary text-white hover:bg-blue-600\"\n                  type=\"button\"\n                  onClick={() => handleSubmit()}\n                  disabled={props.loadingRequest}\n                >\n                  {props.loadingRequest ? \"Loading...\" : \"Save\"}\n                </button>\n              </div>\n            </div>\n          </Modal>\n        )}\n      {/* end modal for creating new categories or sub category */}\n    </div>\n  );\n};\n\nexport default connect(null, {\n  FC_CreateDistrict,\n  FC_UpdateDistrict,\n  FC_DeleteDistrict,\n  PushPopupAlert,\n})(ViewDistrict);\n","import React, { useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { IoMdEye, IoMdEyeOff } from \"react-icons/io\";\nimport {\n  FC_CreateProvince,\n  FC_DeleteProvince,\n  FC_UpdateProvince,\n} from \"../../actions/location\";\nimport axios from \"axios\";\nimport { API } from \"../../utils/api\";\nimport {\n  DistrictInterface,\n  RoomLocationInterface,\n} from \"../../shared/interfaces\";\nimport { PushPopupAlert } from \"../../actions/system\";\nimport { PopupAlertData } from \"../../components/Alert/Popup\";\nimport { PopupAlertTheme } from \"../../interfaces/popupAlert\";\nimport { errorToText } from \"../../utils/errors\";\nimport Modal, { ModalSize, Themes } from \"../../components/Modal/Modal\";\nimport NoResult, { NoResultThemes } from \"../../components/NoResult/NoResult\";\nimport { isEmptyOrSpaces } from \"../../shared/dataTest\";\n\ninterface AppProps {\n  thisProvince: RoomLocationInterface | null;\n  thisDistrict: DistrictInterface | null;\n  loadingRequest: boolean;\n  locations: RoomLocationInterface[];\n  actionTypes:\n    | \"CREATE_PROVINCE\"\n    | \"UPDATE_PROVINCE\"\n    | \"CREATE_DISTRICT\"\n    | \"UPDATE_DISTRICT\"\n    | \"CREATE_SECTOR\"\n    | \"UPDATE_SECTOR\"\n    | null;\n  setLoadingRequest: React.Dispatch<React.SetStateAction<boolean>>;\n  setThisProvince: React.Dispatch<\n    React.SetStateAction<RoomLocationInterface | null>\n  >;\n  setActionTypes: React.Dispatch<\n    React.SetStateAction<\n      | \"CREATE_PROVINCE\"\n      | \"UPDATE_PROVINCE\"\n      | \"CREATE_DISTRICT\"\n      | \"UPDATE_DISTRICT\"\n      | \"CREATE_SECTOR\"\n      | \"UPDATE_SECTOR\"\n      | null\n    >\n  >;\n  FC_CreateProvince: Function;\n  FC_UpdateProvince: Function;\n  FC_DeleteProvince: Function;\n  PushPopupAlert: (alert: PopupAlertData) => void;\n}\n\nconst ViewProvince: React.FC<AppProps> = (props) => {\n  const [provinceTitle, setProvinceTitle] = useState<string>(\"\");\n  const [provinceCode, setProvinceCode] = useState<number>(0);\n  const [error, setError] = useState<{ element: string; msg: string } | null>(\n    null\n  );\n\n  const handleSubmit = async () => {\n    if (isEmptyOrSpaces(provinceTitle)) {\n      return setError({\n        element: \"province_title\",\n        msg: \"Title of Province is required\",\n      });\n    }\n\n    if (provinceCode <= 0) {\n      return setError({\n        element: \"province_code\",\n        msg: \"Code of Province is required\",\n      });\n    }\n\n    props.setLoadingRequest(true);\n    try {\n      let res;\n      if (props.actionTypes === \"CREATE_PROVINCE\") {\n        res = await axios.post<{ data: RoomLocationInterface }>(\n          `${API.APPLICATION}/province`,\n          {\n            province_name: provinceTitle,\n            province_code: provinceCode,\n            districts: [],\n          }\n        );\n\n        if (res.data) {\n          props.FC_CreateProvince(res.data.data);\n          props.PushPopupAlert({\n            title: \"New Province created successfully\",\n            theme: PopupAlertTheme.success,\n          });\n          props.setLoadingRequest(false);\n          props.setActionTypes(null);\n          setProvinceTitle(\"\");\n        }\n      } else if (\n        props.thisProvince &&\n        props.actionTypes === \"UPDATE_PROVINCE\"\n      ) {\n        const districts: string[] = props.thisProvince.districts.map(\n          (district) => district._id\n        );\n        res = await axios.patch<{ updated: RoomLocationInterface }>(\n          `${API.APPLICATION}/province`,\n          {\n            province_id: props.thisProvince._id,\n            province_name: provinceTitle,\n            province_code: provinceCode,\n            districts,\n          }\n        );\n        if (res.data) {\n          console.log({ res: res.data.updated });\n          props.FC_UpdateProvince(res.data.updated);\n          props.PushPopupAlert({\n            title: \"Province updated successfully\",\n            theme: PopupAlertTheme.success,\n          });\n          props.setLoadingRequest(false);\n          props.setActionTypes(null);\n          setProvinceTitle(\"\");\n          props.setThisProvince(null);\n        }\n      }\n    } catch (error) {\n      console.error({ province_error: error });\n      props.PushPopupAlert({\n        title: errorToText(error),\n        theme: PopupAlertTheme.danger,\n      });\n      props.setLoadingRequest(false);\n    }\n  };\n\n  // const handleDelete = async (provinceId: string) => {\n  //   try {\n  //     const res = await axios.delete<RoomLocationInterface>(\n  //       `${API.APPLICATION}/province/${provinceId}`\n  //     );\n\n  //     if (res.data) {\n  //       console.log({ res });\n  //       props.FC_DeleteProvince(provinceId);\n  //       props.PushPopupAlert({\n  //         title: \"Province deleted successfully\",\n  //         theme: PopupAlertTheme.success,\n  //       });\n  //       props.setLoadingRequest(false);\n  //       props.setActionTypes(null);\n  //     }\n  //   } catch (error) {\n  //     console.log({ province_error: error });\n  //     props.PushPopupAlert({\n  //       title: errorToText(error),\n  //       theme: PopupAlertTheme.danger,\n  //     });\n  //     props.setLoadingRequest(false);\n  //   }\n  // };\n\n  return (\n    <div className={`w-full p-2`}>\n      {props.locations.length > 0 ? (\n        props.locations.map((province, index) => (\n          <div\n            key={index + province._id}\n            className=\"flex justify-between items-center p-2 mb-3 rounded border border-gray-100 shadow\"\n          >\n            <div className=\"flex items-center\">\n              <div className=\"ml-2\">\n                <div className=\"text-xl font-semibold text-gray-600\">\n                  {province.province_name}\n                </div>\n                <div className=\"text-sm font-light text-gray-500\">\n                  {province.districts.length > 0\n                    ? province.districts.length + \"District(s)\"\n                    : null}\n                </div>\n              </div>\n            </div>\n            <div className=\"flex items-center gap-2\">\n              <button\n                title={\n                  props.thisProvince &&\n                  props.thisProvince._id === province._id &&\n                  props.actionTypes !== \"UPDATE_PROVINCE\"\n                    ? \"Close Districts\"\n                    : \"View Districts\"\n                }\n                className={`${\n                  props.thisProvince &&\n                  props.thisProvince._id === province._id &&\n                  props.actionTypes !== \"UPDATE_PROVINCE\"\n                    ? \"bg-gray-500 hover:bg-gray-600\"\n                    : \"bg-gray-400 hover:bg-gray-500\"\n                } p-2 rounded-full shadow-md flex justify-center items-center focus:outline-none`}\n                onClick={() => {\n                  !props.thisProvince || props.thisProvince._id !== province._id\n                    ? props.setThisProvince(province)\n                    : props.setThisProvince(null);\n                  setProvinceTitle(\"\");\n                  props.setActionTypes(null);\n                }}\n              >\n                {props.thisProvince &&\n                props.thisProvince._id === province._id &&\n                props.actionTypes !== \"UPDATE_PROVINCE\" ? (\n                  <IoMdEyeOff className=\"text-white w-4 h-4\" />\n                ) : (\n                  <IoMdEye className=\"text-white w-4 h-4\" />\n                )}\n              </button>\n              {/* <button\n                title=\"Update Province\"\n                className=\"bg-blue-500 hover:bg-blue-600 p-2 rounded-full shadow-md flex justify-center items-center focus:outline-none\"\n                onClick={() => {\n                  props.setThisProvince(province);\n                  setProvinceTitle(province.province_name);\n                  setProvinceCode(province.province_code);\n                  props.setActionTypes(\"UPDATE_PROVINCE\");\n                }}\n                disabled={props.loadingRequest || props.actionTypes !== null}\n              >\n                <MdCreate className=\"text-white w-4 h-4\" />\n              </button>\n              <button\n                title=\"Delete Sub-Category\"\n                className=\"bg-red-500 hover:bg-red-600 p-2 rounded-full shadow-md flex justify-center items-center focus:outline-none\"\n                onClick={() => handleDelete(province._id)}\n                disabled={props.loadingRequest || props.actionTypes !== null}\n              >\n                <MdClear className=\"text-white w-4 h-4\" />\n              </button> */}\n            </div>\n          </div>\n        ))\n      ) : (\n        <NoResult\n          theme={NoResultThemes.Dark}\n          value=\"No province found!\"\n          component={\n            <div className=\"w-full mt-2 flex flex-row items-center justify-center\">\n              <ul className=\"text-sm py-2 text-blue-600 font-bold flex flex-row gap-2\">\n                <li\n                  onClick={() => props.setActionTypes(\"CREATE_PROVINCE\")}\n                  className=\"underline text-gray-500 cursor-pointer\"\n                >\n                  Add province\n                </li>\n              </ul>\n            </div>\n          }\n        />\n      )}\n\n      {/* modal for creating new categories or sub category */}\n      {props.actionTypes &&\n        (props.actionTypes === \"CREATE_PROVINCE\" ||\n          props.actionTypes === \"UPDATE_PROVINCE\") && (\n          <Modal\n            backDrop={true}\n            theme={Themes.default}\n            close={(): void => {\n              props.setActionTypes(null);\n              setProvinceTitle(\"\");\n              setProvinceCode(0);\n              setError(null);\n            }}\n            displayClose={false}\n            backDropClose={false}\n            title={\n              <div className=\"flex items-center space-x-5\">\n                <div className=\"block pl-2 font-semibold text-xl self-start text-gray-700\">\n                  <h2 className=\"uppercase text-back\">\n                    {props.actionTypes === \"CREATE_PROVINCE\"\n                      ? \"CREATING NEW PROVINCE\"\n                      : props.actionTypes === \"UPDATE_PROVINCE\" &&\n                        \"UPDATING EXISTING PROVINCE\"}\n                  </h2>\n                </div>\n              </div>\n            }\n            widthSizeClass={ModalSize.medium}\n            padding={{ title: true, body: false, footer: false }}\n          >\n            <div className=\"mx-5 mb-4\">\n              <div className=\"py-2 text-base leading-6 space-y-4 text-gray-700 sm:text-lg sm:leading-7\">\n                <div className=\"flex flex-col\">\n                  <label>Province name</label>\n                  <input\n                    type=\"text\"\n                    className={`bg-white py-1 px-2 border-2 ${\n                      error && error.element === \"province_title\"\n                        ? \"border-red-700\"\n                        : \"border-gray-700\"\n                    } rounded focus:outline-none focus:bg-gray-100`}\n                    onChange={(e) => {\n                      error &&\n                        error.element === \"province_title\" &&\n                        setError(null);\n                      setProvinceTitle(e.target.value);\n                    }}\n                    value={provinceTitle}\n                    disabled={props.loadingRequest}\n                  />\n                  {error && error.element === \"province_title\" && (\n                    <span className=\"text-red-700\">{error.msg}</span>\n                  )}\n                </div>\n                <div className=\"flex flex-col\">\n                  <label>Province code {props.loadingRequest && \"TRUE\"}</label>\n                  <input\n                    type=\"number\"\n                    className={`bg-white py-1 px-2 border-2 ${\n                      error && error.element === \"province_code\"\n                        ? \"border-red-700\"\n                        : \"border-gray-700\"\n                    } rounded focus:outline-none focus:bg-gray-100`}\n                    onChange={(e) => {\n                      error &&\n                        error.element === \"province_code\" &&\n                        setError(null);\n                      setProvinceCode(Number(e.target.value));\n                    }}\n                    value={provinceCode}\n                    disabled={props.loadingRequest}\n                  />\n                  {error && error.element === \"province_code\" && (\n                    <span className=\"text-red-700\">{error.msg}</span>\n                  )}\n                </div>\n              </div>\n              <div className=\"pt-4 flex justify-between\">\n                <button\n                  onClick={() => {\n                    props.setActionTypes(null);\n                    setProvinceTitle(\"\");\n                    setProvinceCode(0);\n                    setError(null);\n                  }}\n                  className={`btn bg-gray-400 text-white hover:bg-gray-600`}\n                  type=\"button\"\n                  disabled={props.loadingRequest}\n                >\n                  Exit\n                </button>\n                <button\n                  className=\"btn bg-primary text-white hover:bg-blue-600\"\n                  type=\"button\"\n                  onClick={() => handleSubmit()}\n                  disabled={props.loadingRequest}\n                >\n                  {props.loadingRequest ? \"Loading...\" : \"Save\"}\n                </button>\n              </div>\n            </div>\n          </Modal>\n        )}\n      {/* end modal for creating new categories or sub category */}\n    </div>\n  );\n};\n\nexport default connect(null, {\n  FC_CreateProvince,\n  FC_UpdateProvince,\n  FC_DeleteProvince,\n  PushPopupAlert,\n})(ViewProvince);\n","import React, { useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { MdClear, MdCreate } from \"react-icons/md\";\nimport {\n  FC_CreateSector,\n  FC_DeleteSector,\n  FC_UpdateSector,\n} from \"../../actions/location\";\nimport axios from \"axios\";\nimport { API } from \"../../utils/api\";\nimport { DistrictInterface, SectorInterface } from \"../../shared/interfaces\";\nimport { PushPopupAlert } from \"../../actions/system\";\nimport { PopupAlertData } from \"../../components/Alert/Popup\";\nimport { PopupAlertTheme } from \"../../interfaces/popupAlert\";\nimport { errorToText } from \"../../utils/errors\";\nimport NoResult, { NoResultThemes } from \"../../components/NoResult/NoResult\";\nimport Modal, { ModalSize, Themes } from \"../../components/Modal/Modal\";\nimport { isEmptyOrSpaces } from \"../../shared/dataTest\";\n\ninterface AppProps {\n  thisDistrict: DistrictInterface;\n  thisSector: SectorInterface | null;\n  loadingRequest: boolean;\n  actionTypes:\n    | \"CREATE_PROVINCE\"\n    | \"UPDATE_PROVINCE\"\n    | \"CREATE_DISTRICT\"\n    | \"UPDATE_DISTRICT\"\n    | \"CREATE_SECTOR\"\n    | \"UPDATE_SECTOR\"\n    | null;\n  setLoadingRequest: React.Dispatch<React.SetStateAction<boolean>>;\n  setThisSector: React.Dispatch<React.SetStateAction<SectorInterface | null>>;\n  setActionTypes: React.Dispatch<\n    React.SetStateAction<\n      | \"CREATE_PROVINCE\"\n      | \"UPDATE_PROVINCE\"\n      | \"CREATE_DISTRICT\"\n      | \"UPDATE_DISTRICT\"\n      | \"CREATE_SECTOR\"\n      | \"UPDATE_SECTOR\"\n      | null\n    >\n  >;\n  FC_CreateSector: Function;\n  FC_UpdateSector: Function;\n  FC_DeleteSector: Function;\n  PushPopupAlert: (alert: PopupAlertData) => void;\n}\n\nconst ViewSectors: React.FC<AppProps> = (props) => {\n  const [sectorName, setSectorName] = useState<string>(\"\");\n  const [sectorCode, setSectorCode] = useState<number>(0);\n  const [error, setError] = useState<{ element: string; msg: string } | null>(\n    null\n  );\n\n  const handleSubmit = async () => {\n    if (isEmptyOrSpaces(sectorName)) {\n      return setError({\n        element: \"sector_name\",\n        msg: \"Sector name is required\",\n      });\n    }\n\n    if (sectorCode <= 0) {\n      return setError({\n        element: \"sector_code\",\n        msg: \"Invalid sector code, must be \",\n      });\n    }\n\n    props.setLoadingRequest(true);\n    try {\n      let res;\n      if (props.actionTypes === \"CREATE_SECTOR\") {\n        res = await axios.post<{ data: SectorInterface }>(\n          `${API.APPLICATION}/sector`,\n          {\n            district_id: props.thisDistrict._id,\n            district_code: props.thisDistrict.district_code,\n            sector_name: sectorName,\n            sector_code: sectorCode,\n          }\n        );\n        if (res.data) {\n          console.log({\n            district_id: props.thisDistrict._id,\n            data: res.data.data,\n            res,\n          });\n          props.FC_CreateSector({\n            province_id: props.thisDistrict.province_id,\n            district_id: props.thisDistrict._id,\n            data: {\n              district_id: res.data.data.district_id,\n              district_code: res.data.data.district_code,\n              sector_name: res.data.data.sector_name,\n              sector_code: res.data.data.sector_code,\n              sector_id: res.data.data.sector_id,\n            },\n          });\n          props.PushPopupAlert({\n            title: \"New sector created successfully\",\n            theme: PopupAlertTheme.success,\n          });\n          props.setLoadingRequest(false);\n          props.setActionTypes(null);\n          setSectorName(\"\");\n        }\n      } else if (props.thisSector && props.actionTypes === \"UPDATE_SECTOR\") {\n        res = await axios.patch<{ data: DistrictInterface }>(\n          `${API.APPLICATION}/sector`,\n          {\n            district_id: props.thisSector.district_id,\n            district_code: props.thisDistrict.district_code,\n            sector_id: props.thisSector.sector_id,\n            sector_name: sectorName,\n            sector_code: sectorCode,\n          }\n        );\n        if (res.data) {\n          props.FC_UpdateSector({\n            province_id: props.thisDistrict.province_id,\n            district_id: props.thisSector.district_id,\n            sector_id: props.thisSector.sector_id,\n            sector_name: sectorName,\n            sector_code: sectorCode,\n          });\n          props.PushPopupAlert({\n            title: \"Sector updated successfully\",\n            theme: PopupAlertTheme.success,\n          });\n          props.setLoadingRequest(false);\n          props.setActionTypes(null);\n          setSectorName(\"\");\n          props.setThisSector(null);\n        }\n      }\n    } catch (error) {\n      console.log({ sector_error: error });\n      props.PushPopupAlert({\n        title: errorToText(error),\n        theme: PopupAlertTheme.danger,\n      });\n      props.setLoadingRequest(false);\n    }\n  };\n\n  const handleDelete = async (sectorId: string) => {\n    try {\n      const res = await axios.delete<SectorInterface>(\n        `${API.APPLICATION}/sector/${sectorId}`\n      );\n\n      if (res.data) {\n        props.FC_DeleteSector({\n          province_id: props.thisDistrict.province_id,\n          district_id: props.thisDistrict._id,\n          sector_id: sectorId,\n        });\n        props.PushPopupAlert({\n          title: \"Sector deleted successfully\",\n          theme: PopupAlertTheme.success,\n        });\n        props.setLoadingRequest(false);\n        props.setActionTypes(null);\n      }\n    } catch (error) {\n      console.log({ district_error: error });\n      props.PushPopupAlert({\n        title: errorToText(error),\n        theme: PopupAlertTheme.danger,\n      });\n      props.setLoadingRequest(false);\n    }\n  };\n\n  return (\n    <div className={`w-full p-2`}>\n      {props.thisDistrict.sectors && props.thisDistrict.sectors.length > 0 ? (\n        <div className=\"rounded border border-gray-100 shadow-sm animate__animated animate__fadeIn\">\n          <table className=\"w-full z-0\">\n            <thead className=\"bg-gray-50\">\n              <tr className=\"text-left\">\n                <th className=\"px-3 py-3\">#</th>\n                <th>Sector name</th>\n                <th>Sector code</th>\n                <th>Status</th>\n              </tr>\n            </thead>\n            <tbody className=\"text-sm\">\n              {props.thisDistrict.sectors.map((sector, index) => (\n                <tr\n                  key={index + sector.district_id}\n                  className={`text-left border-b border-gray-50`}\n                >\n                  <td className=\"px-3 py-1\">{index + 1}</td>\n                  <td>{sector.sector_name}</td>\n                  <td>{sector.sector_name}</td>\n                  <td>\n                    <div className=\"flex items-center gap-2\">\n                      <button\n                        title=\"Update sector\"\n                        className=\"bg-blue-500 hover:bg-blue-600 p-2 rounded-full shadow-md flex justify-center items-center focus:outline-none\"\n                        onClick={() => {\n                          props.setThisSector(sector);\n                          setSectorName(sector.sector_name);\n                          setSectorCode(sector.sector_code);\n                          props.setActionTypes(\"UPDATE_SECTOR\");\n                        }}\n                        disabled={\n                          props.loadingRequest || props.actionTypes !== null\n                        }\n                      >\n                        <MdCreate className=\"text-white w-4 h-4\" />\n                      </button>\n                      <button\n                        title=\"Delete sector\"\n                        className=\"bg-red-500 hover:bg-red-600 p-2 rounded-full shadow-md flex justify-center items-center focus:outline-none\"\n                        onClick={() => handleDelete(sector.sector_id)}\n                        disabled={props.loadingRequest}\n                      >\n                        <MdClear className=\"text-white w-4 h-4\" />\n                      </button>\n                    </div>\n                  </td>\n                </tr>\n              ))}\n            </tbody>\n          </table>\n        </div>\n      ) : (\n        <NoResult\n          theme={NoResultThemes.Dark}\n          value={\"No sector found!\"}\n          component={\n            <div className=\"w-full mt-2 flex flex-row items-center justify-center\">\n              <ul className=\"text-sm py-2 text-blue-600 font-bold flex flex-row gap-2\">\n                <li\n                  onClick={() => props.setActionTypes(\"CREATE_SECTOR\")}\n                  className=\"underline text-gray-500 cursor-pointer\"\n                >\n                  Add sector\n                </li>\n              </ul>\n            </div>\n          }\n        />\n      )}\n\n      {/* modal for creating new categories or sub category */}\n      {props.actionTypes &&\n        (props.actionTypes === \"CREATE_SECTOR\" ||\n          props.actionTypes === \"UPDATE_SECTOR\") && (\n          <Modal\n            backDrop={true}\n            theme={Themes.default}\n            close={(): void => {\n              props.setActionTypes(null);\n              setSectorName(\"\");\n              setSectorCode(0);\n              setError(null);\n            }}\n            displayClose={false}\n            backDropClose={false}\n            title={\n              <div className=\"flex items-center space-x-5\">\n                <div className=\"block pl-2 font-semibold text-xl self-start text-gray-700\">\n                  {/* <p className=\"text-base text-gray-500 font-medium\">\n                    You are{\" \"}\n                    {actionType === \"CREATE_SUB\" || \"CREATE_CAT\"\n                      ? \"creating\"\n                      : \"updating\"}\n                  </p> */}\n                  <h2 className=\"uppercase text-back\">\n                    {props.actionTypes === \"CREATE_SECTOR\"\n                      ? \"CREATING NEW SECTOR\"\n                      : props.actionTypes === \"UPDATE_SECTOR\" &&\n                        \"UPDATING EXISTING SECTOR\"}\n                  </h2>\n                </div>\n              </div>\n            }\n            widthSizeClass={ModalSize.medium}\n            padding={{ title: true, body: false, footer: false }}\n          >\n            <div className=\"w-full px-5 mb-5\">\n              <div className=\"py-3 text-base leading-6 space-y-4 text-gray-700 sm:text-lg sm:leading-7\">\n                <div className=\"flex flex-col\">\n                  <label>Sector name</label>\n                  <input\n                    type=\"text\"\n                    className={`bg-white py-1 px-2 border-2 ${\n                      error && error.element === \"sector_name\"\n                        ? \"border-red-700\"\n                        : \"border-gray-700\"\n                    } rounded focus:outline-none focus:bg-gray-100`}\n                    onChange={(e) => {\n                      error &&\n                        error.element === \"sector_name\" &&\n                        setError(null);\n                      setSectorName(e.target.value);\n                    }}\n                    value={sectorName}\n                    disabled={props.loadingRequest}\n                  />\n                  {error && error.element === \"sector_name\" && (\n                    <span className=\"text-red-700\">{error.msg}</span>\n                  )}\n                </div>\n                <div className=\"flex flex-col\">\n                  <label>Sector code</label>\n                  <input\n                    type=\"number\"\n                    className={`bg-white py-1 px-2 border-2 ${\n                      error && error.element === \"sector_code\"\n                        ? \"border-red-700\"\n                        : \"border-gray-700\"\n                    } rounded focus:outline-none focus:bg-gray-100`}\n                    onChange={(e) => {\n                      error &&\n                        error.element === \"sector_code\" &&\n                        setError(null);\n                      setSectorCode(Number(e.target.value));\n                    }}\n                    value={sectorCode}\n                    disabled={props.loadingRequest}\n                  />\n                  {error && error.element === \"sector_code\" && (\n                    <span className=\"text-red-700\">{error.msg}</span>\n                  )}\n                </div>\n              </div>\n              <div className=\"pt-4 flex justify-between\">\n                <button\n                  onClick={() => {\n                    props.setActionTypes(null);\n                    setSectorName(\"\");\n                    setSectorCode(0);\n                    setError(null);\n                  }}\n                  className={`btn bg-gray-400 text-white hover:bg-gray-600`}\n                  type=\"button\"\n                  disabled={props.loadingRequest}\n                >\n                  Exit\n                </button>\n                <button\n                  className=\"btn bg-primary text-white hover:bg-blue-600\"\n                  type=\"button\"\n                  onClick={() => handleSubmit()}\n                  disabled={props.loadingRequest}\n                >\n                  {props.loadingRequest ? \"Loading...\" : \"Save\"}\n                </button>\n              </div>\n            </div>\n          </Modal>\n        )}\n      {/* end modal for creating new categories or sub category */}\n    </div>\n  );\n};\n\nexport default connect(null, {\n  FC_CreateSector,\n  FC_UpdateSector,\n  FC_DeleteSector,\n  PushPopupAlert,\n})(ViewSectors);\n","import React, { Fragment, useEffect, useState } from \"react\";\nimport { AiOutlineFilter } from \"react-icons/ai\";\nimport { BsCaretRightFill } from \"react-icons/bs\";\nimport { connect } from \"react-redux\";\nimport { getAllRoom } from \"../../actions/location\";\nimport { StoreState } from \"../../reducers\";\nimport {\n  DistrictInterface,\n  LocationRoomTableInterface,\n  RoomLocationInterface,\n  SectorInterface,\n} from \"../../shared/interfaces\";\nimport { LocationsInArray } from \"../UserManagement/UserList\";\nimport ViewDistricts from \"./ViewDistricts\";\nimport ViewProvince from \"./ViewProvince\";\nimport ViewSectors from \"./ViewSectors\";\n\nexport const distinctDistrict = (\n  rooms: RoomLocationInterface[],\n  province_id?: string\n): LocationRoomTableInterface[] => {\n  let ids: string[] = [],\n    result: LocationRoomTableInterface[] = [];\n\n  LocationsInArray(rooms).forEach((element) => {\n    if (!ids.includes(element.district_id)) {\n      if (province_id && element.province_id === province_id) {\n        ids.push(element.district_id);\n        result.push(element);\n      } else if (province_id === undefined) {\n        ids.push(element.district_id);\n        result.push(element);\n      }\n    }\n  });\n\n  return result;\n};\n\nexport const distinctCenter = (\n  rooms: RoomLocationInterface[],\n  district_id: string\n): LocationRoomTableInterface[] => {\n  let ids: string[] = [],\n    result: LocationRoomTableInterface[] = [];\n\n  LocationsInArray(rooms).forEach((element) => {\n    if (\n      !ids.includes(element.center_id) &&\n      element.district_id === district_id\n    ) {\n      ids.push(element.center_id);\n      result.push(element);\n    }\n  });\n  return result;\n};\n\nexport const distinctRoom = (\n  rooms: RoomLocationInterface[],\n  center_id: string\n): LocationRoomTableInterface[] => {\n  let ids: string[] = [],\n    result: LocationRoomTableInterface[] = [];\n\n  LocationsInArray(rooms).forEach((element) => {\n    if (!ids.includes(element.room_id) && element.center_id === center_id) {\n      ids.push(element.room_id);\n      result.push(element);\n    }\n  });\n  return result;\n};\n\ninterface AppProps {\n  locations: RoomLocationInterface[];\n  getAllRoom: Function;\n}\n\nconst _Locations: React.FC<AppProps> = (props) => {\n  const [actionTypes, setActionTypes] = useState<\n    | \"CREATE_PROVINCE\"\n    | \"UPDATE_PROVINCE\"\n    | \"CREATE_DISTRICT\"\n    | \"UPDATE_DISTRICT\"\n    | \"CREATE_SECTOR\"\n    | \"UPDATE_SECTOR\"\n    | null\n  >(null);\n  const [thisProvince, setThisProvince] =\n    useState<RoomLocationInterface | null>(null);\n  const [thisDistrict, setThisDistrict] = useState<DistrictInterface | null>(\n    null\n  );\n  const [thisSector, setThisSector] = useState<SectorInterface | null>(null);\n  const [loading, setLoading] = useState<boolean>(true);\n  const [loadingRequest, setLoadingRequest] = useState<boolean>(false);\n\n  useEffect(() => {\n    if (!props.locations.length && loading) {\n      props.getAllRoom((status: boolean, msg: string) => {\n        setLoading(status);\n        if (!status && msg.length > 0) {\n          console.log(msg);\n        }\n      });\n    } else if (loading) {\n      setLoading(false);\n    }\n  }, [loading, props]);\n\n  if (loading === true) {\n    return (\n      <div className=\"text-center mt-7 font-bold text-4xl text-gray-400 animate-pulse\">\n        Loading locations...\n      </div>\n    );\n  }\n\n  const displayTitle = () => {\n    if (\n      (!thisSector ||\n        (thisSector &&\n          (actionTypes === \"CREATE_SECTOR\" ||\n            actionTypes === \"UPDATE_SECTOR\"))) &&\n      thisDistrict &&\n      actionTypes !== \"CREATE_DISTRICT\" &&\n      actionTypes !== \"UPDATE_DISTRICT\"\n    ) {\n      return (\n        <div className=\"flex items-center gap-1\">\n          <span\n            className=\"cursor-pointer uppercase text-xl font-semibold text-gray-800\"\n            onClick={() => {\n              setThisProvince(null);\n            }}\n          >\n            province\n          </span>\n          <span>/</span>\n          <span\n            className=\"cursor-pointer uppercase text-xl font-semibold text-gray-800\"\n            onClick={() => {\n              setThisDistrict(null);\n            }}\n          >\n            district\n          </span>\n          <span>/</span>\n          <span className=\"text-xl text-gray-800\">\n            {thisDistrict.district_name}\n          </span>\n        </div>\n      );\n    } else if (\n      (!thisDistrict ||\n        (thisDistrict &&\n          (actionTypes === \"CREATE_DISTRICT\" ||\n            actionTypes === \"UPDATE_DISTRICT\"))) &&\n      thisProvince\n    ) {\n      return (\n        <div className=\"flex items-center gap-2\">\n          <span\n            className=\"cursor-pointer uppercase text-xl font-semibold text-gray-800\"\n            onClick={() => {\n              setThisProvince(null);\n            }}\n          >\n            province\n          </span>\n          <span>/</span>\n          <span className=\"text-xl text-gray-800\">\n            {thisProvince.province_name}\n          </span>\n        </div>\n      );\n    }\n\n    return (\n      <div className=\"flex items-center gap-1\">\n        <span className=\"uppercase text-xl font-semibold text-gray-800\">\n          province\n        </span>\n        <span>/</span>\n      </div>\n    );\n  };\n\n  return (\n    <Fragment>\n      <div className=\"w-full my-5\">\n        {/* header title */}\n        <div className=\"flex justify-between p-2 gap-1\">\n          <div className=\"flex flex-col\">\n            <span className=\"text-blue-600 text-2xl md:text-2xl lg:text-3xl font-bold\">\n              Locations Management\n            </span>\n\n            <div className=\"flex flex-row items-center md:gap-3 gap-2 mt-1\">\n              <AiOutlineFilter className=\"text-xl\" />\n              <div className=\"flex flex-row items-center gap-1\">\n                {thisProvince && (\n                  <span className=\"text-gray-700 text-base font-bold\">\n                    {thisProvince.province_name}\n                  </span>\n                )}\n                {thisDistrict && (\n                  <div className=\"flex flex-row items-center gap-1\">\n                    <BsCaretRightFill />\n                    <span className=\"text-blue-600 text-base font-bold underline\">\n                      {thisDistrict.district_name} district\n                    </span>\n                  </div>\n                )}\n              </div>\n            </div>\n          </div>\n        </div>\n        {/* end header title */}\n\n        <div className=\"w-full bg-white\">\n          <div className=\"border-b px-2 py-3 flex justify-between\">\n            {displayTitle()}\n\n            {/* CREATE NEW PROVINCE =====================================*/}\n            {/* {(!thisProvince ||\n              (thisProvince &&\n                (actionTypes === \"CREATE_PROVINCE\" ||\n                  actionTypes === \"UPDATE_PROVINCE\"))) && (\n              <button\n                type=\"button\"\n                className={`btn hover:bg-blue-500 mb-1 border-2 border-blue-500 bg-white\n        hover:text-white rounded-md flex items-center font-bold text-gray-700 focus:outline-none gap-1 ${\n          loadingRequest && \"cursor-wait\"\n        } ${actionTypes !== null && \"cursor-not-allowed\"}`}\n                onClick={() => setActionTypes(\"CREATE_PROVINCE\")}\n                disabled={actionTypes !== null || loadingRequest}\n              >\n                <MdAdd className=\"inline-block mr-1 text-xl font-bold\" />\n                New Province\n              </button>\n            )} */}\n            {/* CREATE NEW DISTRICT =====================================*/}\n            {/* {(!thisDistrict ||\n              (thisDistrict &&\n                (actionTypes === \"CREATE_DISTRICT\" ||\n                  actionTypes === \"UPDATE_DISTRICT\"))) &&\n              thisProvince && (\n                <button\n                  type=\"button\"\n                  className={`btn hover:bg-blue-500 mb-1 border-2 border-blue-500 bg-white\n        hover:text-white rounded-md flex items-center font-bold text-gray-700 focus:outline-none gap-1 ${\n          loadingRequest && \"cursor-wait\"\n        } ${actionTypes !== null && \"cursor-not-allowed\"}`}\n                  onClick={() => setActionTypes(\"CREATE_DISTRICT\")}\n                  disabled={actionTypes !== null || loadingRequest}\n                >\n                  <MdAdd className=\"inline-block mr-1 text-xl font-bold\" />\n                  New District\n                </button>\n              )} */}\n\n            {/* CREATE NEW SECTOR =====================================*/}\n            {/* {(!thisSector ||\n              (thisSector &&\n                (actionTypes === \"CREATE_SECTOR\" ||\n                  actionTypes === \"UPDATE_SECTOR\"))) &&\n              thisDistrict &&\n              actionTypes !== \"CREATE_DISTRICT\" &&\n              actionTypes !== \"UPDATE_DISTRICT\" && (\n                <button\n                  type=\"button\"\n                  className={`btn hover:bg-blue-500 mb-1 border-2 border-blue-500 bg-white\n        hover:text-white rounded-md flex items-center font-bold text-gray-700 focus:outline-none gap-1 ${\n          loadingRequest && \"cursor-wait\"\n        } ${actionTypes !== null && \"cursor-not-allowed\"}`}\n                  onClick={() => setActionTypes(\"CREATE_SECTOR\")}\n                  disabled={actionTypes !== null || loadingRequest}\n                >\n                  <MdAdd className=\"inline-block mr-1 text-xl font-bold\" />\n                  New Sector\n                </button>\n              )} */}\n          </div>\n\n          {(!thisProvince ||\n            (thisProvince &&\n              (actionTypes === \"CREATE_PROVINCE\" ||\n                actionTypes === \"UPDATE_PROVINCE\"))) && (\n            <ViewProvince\n              thisProvince={thisProvince}\n              thisDistrict={thisDistrict}\n              loadingRequest={loadingRequest}\n              locations={props.locations}\n              actionTypes={actionTypes}\n              setLoadingRequest={setLoadingRequest}\n              setThisProvince={setThisProvince}\n              setActionTypes={setActionTypes}\n            />\n          )}\n\n          {(!thisDistrict ||\n            (thisDistrict &&\n              (actionTypes === \"CREATE_DISTRICT\" ||\n                actionTypes === \"UPDATE_DISTRICT\"))) &&\n            thisProvince && (\n              <ViewDistricts\n                thisDistrict={thisDistrict}\n                loadingRequest={loadingRequest}\n                actionTypes={actionTypes}\n                setLoadingRequest={setLoadingRequest}\n                setActionTypes={setActionTypes}\n                thisProvince={thisProvince}\n                setThisDistrict={setThisDistrict}\n              />\n            )}\n\n          {(!thisSector ||\n            (thisSector &&\n              (actionTypes === \"CREATE_SECTOR\" ||\n                actionTypes === \"UPDATE_SECTOR\"))) &&\n            thisDistrict &&\n            actionTypes !== \"CREATE_DISTRICT\" &&\n            actionTypes !== \"UPDATE_DISTRICT\" && (\n              <ViewSectors\n                thisDistrict={thisDistrict}\n                thisSector={thisSector}\n                loadingRequest={loadingRequest}\n                actionTypes={actionTypes}\n                setLoadingRequest={setLoadingRequest}\n                setThisSector={setThisSector}\n                setActionTypes={setActionTypes}\n              />\n            )}\n        </div>\n      </div>\n    </Fragment>\n  );\n};\n\nconst mapStateToProps = ({\n  locations,\n}: StoreState): {\n  locations: RoomLocationInterface[];\n} => {\n  return { locations: locations.roomLocation };\n};\n\nexport const Locations = connect(mapStateToProps, {\n  getAllRoom,\n})(_Locations);\n"],"sourceRoot":""}
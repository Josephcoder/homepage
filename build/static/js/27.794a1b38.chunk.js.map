{"version":3,"sources":["shared/dataTest.tsx","actions/users.ts","components/Table/Table.tsx","components/Navigation/SideNavigation.tsx","actions/claiming.ts","actions/session.ts","actions/document.ts","actions/settings.ts","containers/Claimings/Admin/AdminClaimAppView.tsx","containers/Claimings/Admin/AdminClaimDocView.tsx","containers/Claimings/Admin/index.tsx","shared/interfaces.tsx","containers/Claimings/ClaimDocView.tsx","containers/Positions/ViewRequirements.tsx","containers/Claimings/Candidate/ApplicationFormView.tsx","containers/Claimings/Candidate/DocFormView.tsx","containers/Claimings/Candidate/FormApplicationList.tsx","containers/Claimings/Candidate/FormDocumentList.tsx","containers/Claimings/Candidate/ClaimForm.tsx","containers/Claimings/ClaimHeaderTitle.tsx","containers/Claimings/Admin/AdminFilterByType.tsx","containers/AdminDashboard/ChartComponents/VBarChart.tsx","containers/SessionSettings/SessionDetails.tsx","containers/Claimings/Candidate/index.tsx","containers/Claimings/Candidate/FilterByType.tsx","containers/Claimings/ClaimApplView.tsx","containers/AdminDashboard/ChartComponents/PieChart.tsx","containers/AdminDashboard/DashboardLabelItem.tsx","containers/AdminDashboard/ExamDashboard/ExamDashboardLabels.tsx","containers/AdminDashboard/ClaimDashboard/AllClaimChart.tsx","containers/AdminDashboard/ClaimDashboard/ClaimDashBoardTitle.tsx","containers/AdminDashboard/ClaimDashboard/ClaimDashboard.tsx"],"names":["data_school","school_id","school_title","district_id","number_of_females","number_of_males","isEmptyOrSpaces","str","match","getRoleById","roles","roleId","filter","role","system_user_role_id","getInstituteById","institutes","instituteId","find","item","education_institute_id","getPositionById","positions","position_id","console","log","data","position","toTwoDigit","value","dec","Math","floor","slice","toString","substr","toAnyDigit","padding","zeroes","Array","join","capitalizeFirstLetter","charAt","toUpperCase","isDateExpiried","paramDate","thisDate","Date","today","getTime","documentValidationStatus","fetchUserAccess","dispatch","a","setAxiosToken","axios","get","API","AUTH","res","users_response","type","ActionTypes","FETCH_USERS_ACCESS","payload","users","error","user_error","blockUserToSystem","BLOCK_USER_TO_SYSTEM","unBlockUserToSystem","UNBLOCK_USER_TO_SYSTEM","assignRoleToUserAccess","ASSIGN_ROLE_TO_USER","customizeUserAccess","CUSTOMIZE_USER_ACCESS","resetUserAccess","RESET_USER_ACCESS","verifyAllDocument","VERIFY_ALL_DOCUMENT","Table","table","tr","rows","columns","hideColumns","pagination","search","tableSize","tableClass","tableId","rounded","searchBG","thColor","loading","length","result","characters","charactersLength","i","random","FC_makeID","useState","totalItems","setTotalItems","totalPages","setTotalPages","currentPage","setCurrentPage","pages","setPages","pageSize","setPageSize","startIndex","setStartIndex","endIndex","setEndIndex","useEffect","tablePagination","document","getElementById","getElementsByTagName","ceil","min","_pages","from","keys","map","style","display","className","placeholder","onChange","e","filterType","td","cols","toLowerCase","textContent","innerText","indexOf","filterTable","target","disabled","Number","id","column","index","alignText","isSortAllowed","onClick","switching","x","y","shouldSwitch","colIndex","dir","switchcount","innerHTML","parentNode","insertBefore","sortThisColumn","columnTitle","aria-label","page","pageIndex","_SideNavigation","props","componentDidMount","PageHasSubNav","componentWillUnmount","state","this","auth","isAuthenticated","navActive","system","navigation","children","React","Component","SideNavigation","connect","NavToogle","MainItem","title","icon","MdBrightness1","active","count","IconDefined","SubItemContainer","SubItem","GetClaimingTypes","callback","CLAIMING","claimtYPES","claim_types","status","GET_CLAIMING_TYPES","errorToText","setSelectedClaimType","thisType","SELECT_CLAIM_TYPE","createClaim","CREATE_CLAIM","createReClaim","RE_CLAIM","evaluateClaim","EVALUATE_CLAIM","getMyClaims","user_id","period_id","order","sortBy","post","user","api_claim","GET_MY_CLAIMS","getMyRejectedApplications","APPLICATION","claimPersonalApplication","application","GET_CANDIDATES_APPLICATIONS","getMyRejectedDocuments","claimPersonalDocuments","details","key","dataRejected","validation_status","push","claimPersonalDocumentDetails","GET_CANDIDATES_DOCUMENTS","getAllClaims","claim_level","GET_ALL_CLAIMS","getAllApplications","GET_ALL_APPLICATION","GetPlansTypes","GET_PLANS_TYPES","plan_types","setSelectedPlanType","SELECT_PLAN_TYPE","getActiveSessionPlan","GET_ACTIVE_SESSION_PLANS","session_plan","undefined","is_active","GetAllSessionPlans","GET_ALL_SESSION_PLANS","session_data","createSessionPlan","CREATE_SESSION_PLAN","updateSessionPlan","UPDATE_SESSION_PLAN","sessionActivation","SESSION_ACTIVATION","deleteSessionPlan","DELETE_SESSION_PLAN","getDocumentCategory","docCategory","GET_DOCUMENT_CATEGORY","createDocumentCategory","CREATE_DOCUMENT_CATEGORY","updateDocumentCategory","UPDATE_DOCUMENT_CATEGORY","deleteDocumentCategory","DELETE_DOCUMENT_CATEGORY","getDocumentSubCategory","docSubCategory","GET_DOCUMENT_SUB_CATEGORY","doc_SUB_category_error","createDocumentSubCategory","CREATE_DOCUMENT_SUB_CATEGORY","updateDocumentSubCategory","UPDATE_DOCUMENT_SUB_CATEGORY","deleteDocumentSubCategory","DELETE_DOCUMENT_SUB_CATEGORY","getDocumentFields","docFields","GET_DOCUMENT_FIELDS","createDocumentFields","CREATE_DOCUMENT_FIELDS","updateDocumentFields","reducer","UPDATE_DOCUMENT_FIELDS","deleteDocumentFields","DELETE_DOCUMENT_FIELDS","getCandidatesInInstitute","educatin_type_id","url","newArray","element","GET_CANDIDATE_IN_INSTITUTE","verifyDocument","action_verify","VERIFY_DOCUMENT","getSystemSettings","GET_SYSTEM_SETTINGS","code_error","disableSystemSetting","DISABLE_SYSTEM_SETTINGS","getApplicationSessions","GET_APPLICATION_SESSIONS","createAplicationSession","CREATE_APPLICATION_SESSIONS","updateAplicationSession","check","UPDATE_APPLICATION_SESSIONS","disableApplicationSession","DISABLE_APPLICATION_SESSION","getPositions","GET_POSTIONS","deletePosition","DELETE_POSITION","publishPosition","PUBLISH_POSITION","viewTabs","FC_AdminApplicationPositionDistinctCategory","thisPosition","documentCategories","PositionsTemp","DistinctCategoriesTemp","DistinctCategoriesIds","DistinctSubCategoriesTemp","DistinctSubCategoriesIds","requirements","req","thisRequirements","thisCategory","documentCategory","user_detail_category_id","category","thisSubCategory","documentSubCategory","user_detail_subcategory_id","subcategory","category_id","field","thisField","documentFields","_id","position_requirement","required","category_title","subcategory_id","subcategory_title","field_title","field_id","includes","reAssessApplication","PushPopupAlert","loadingRequest","setLoadingRequest","actionTaken","setActionTaken","formError","setFormError","responseMsg","setResponseMsg","profile","selectedTab","setSelectedTab","handleVerify","msg","subClaim","thisClaim","claims","level","api_body","sub_claim_id","evaluation_comment","evaluated_by","decision_taken_status","put","evaluate_claim_res","ClaimDecisionStatus","ACCEPTED","overrideDecision","theme","PopupAlertTheme","success","danger","patch","claiming_on_id","comment","application_status","ApplicationStates","Shortlisted","application_id","systemPositions","Object","values","thisApplication","description","school_level_id","school_level_name","education_category_title","courses","course_name","course_code","course_id","NoResult","NoResultThemes","Dark","ViewRequirements","showEvaluator","userList","position_title","previous","Rejected","override_by","DATE","createdAt","reason","claim","showDate","timestampToDate","date_created","timeFR","isClaimEvaluated","REJECTED","toLocaleLowerCase","getUserDocuments","user_info","fname","lname","last_claim_status","ClaimStatus","PENDING","resize","window","confirm","FC_DocValidation","doc_id","DocValidationStatusInterface","APPROVED","validated_by","api_redux","date","FC_shortListing","candidate_id","candidateId","setViewImage","viewImage","adminDisplayClaimTitle","thisDoc","commet","src","AUTH_FILES","files","alt","DELETED","thisUser","candidateDocuments","type_key","PlansTypeKeys","DOCUMENT_VALIDATION","AdminClaimGetDocTitle","main","doc","DocCategory","DocSubCategory","DocField","DocTitle","sub_category_id","c","category_subcategory_data","sub_category","getApplicationById","allApplications","AdminClaim","system_settings","sessionPlan","claiming","application_sessions","allSessionPlans","documentReducer","thisPeriod","setThisPeriod","setLoading","loadingSession","setLoadingSession","periodChanged","setPeriodChanged","loadingPosition","setLoadingPosition","loadingApplications","setLoadingApplications","loadingClaims","setLoadingClaims","loadingDocuments","setLoadingDocuments","loadingClarifications","setLoadingClarifications","loadingUsers","setLoadingUsers","loadingFields","setLoadingFields","viewClaim","setViewClaim","claimId","setClaimId","claimType","setClaimType","setCandidateId","thisSession","allClaims","session_plan_id","displayClaimName","displayClaimTitle","AdminFilterByType","ClaimHeaderTitle","headerTitle","selectedClaimType","EXAMINATION","MARKS_PUBLICATION","PLACEMENT_TRANSFER","onPeriodChange","claimTypes","filterClaimsByClaimType","Light","whichClaimType","whichClaimStatus","classes","getClaimById","ClaimTypesInterface","DOCUMENT","PostRequestStatusInterface","DocumentAttributesInterface","SESSION_PLAN_KEYS","isReclaimAllowed","_thisClaim","claim_status","EVALUATED","handleSubmit","reClaimingMsg","warning","setReClaimingMsg","setReClaiming","ClaimGetDocTitle","reClaiming","colSpan","FC_ApplicationPositionDistinctCategory","category_subcategory_data_id","setChooseClaimFile","setClaimFileId","setViewThisFile","getRejectedApplicants","applicationData","FormApplicationList","objList","text","searchInput","setSearchInput","candidateApplications","isClaimAllowed","myClaims","activeSession","product","flag","prop","DocumentTitleData","documentData","documentTemp","company","email","end_year","names","phone_number","school","start_year","year","doc_title","getRejectedDocuments","rejected","FormDocumentList","viewThisFile","category_subcategory_Data_id","allClaim","claimOnId","ClaimForm","isDocumentIdValid","alert","info","isApplicationIdValid","app_id","app","setState","setLoadingForm","loadingForm","setAlertError","alertError","claimFileId","chooseClaimFile","setClaimComment","claimComment","isClaimTypeOpen","plans","isPlanActive","isClaimBtnValid","file_id","claim_type","setFormState","thisClaimType","thisClaimTypeId","formType","activeSessionPlan","_isDocumentIdValid","_isApplicationIdValid","getDocumentById","documents","applications","getValidation","thisId","old_reason","old_status","old_evaluated_by","cleanToClose","preventDefault","selectClaimType","generateChooseFileTitle","formState","Modal","backDrop","Themes","default","close","displayClose","backDropClose","widthSizeClass","ModalSize","extraLarge","medium","body","footer","onSubmit","replace","ApplicationFormView","isLoading","sessions","selectPeriod","session","session_plan_name","claimList","loadingClaimTypes","setLoadingClaimTypes","countClaims","Fragment","defaultBar","borderRadius","horizontal","columnWidth","endingShape","VBarChart","chart","events","dataPointSelection","event","chartContext","config","labelClicked","w","labels","dataPointIndex","FC_LoadSelected","seriesIndex","stacked","plotOptions","bar","dataLabels","enabled","xaxis","rotate","categories","categoriesLabel","tickPlacement","yaxis","yaxisText","fill","opacity","tooltip","formatter","val","tooltipText","grid","left","right","noData","align","verticalAlign","options","setOptions","colors","chartClicked","zoom","autoScaleYaxis","series","width","height","chartHeight","isActivationAllowed","thisPlans","end_date","getPlanTypeByKey","allPlanTypes","viewThisSession","thisPlan","planEndDate","planStartDate","start_date","type_status","SessionPlanTypeStatus","CLOSED","SessionDetails","handlePlanActivation","newState","newData","period","updatedAt","prototype","hasOwnProperty","call","OPEN","type_id","type_title","allowed_claim_level","history","setViewThisSession","ClaimTypesEnum","loadingRejectedApplications","setLoadingRejectedApplications","loadingRejectedDocuments","setLoadingRejectedDocuments","COMPLETED","setViewPosition","viewPosition","document_id","claim_id","exam","marks_publication","placement","displayDocClaimTitle","CandidateClaim","claimForm","setClaimForm","thisCLaim","handleDelete","ClaimApplView","PieChart","DashboardLabelItem","FaUsers","iconColor","countOver","ExamDashboardLabels","numCols","labelsOnRow","childrenPosition","AllClaimChart","FC_GetAllClaimChartData","acceptedArray","rejectedArray","activeArray","labelArray","typeKey","ClaimTypes","accepted","pending","name","ClaimDashBoardTitle","reportTitle","education_categories","allEducation","loadingEducation","thisEducation","setThisEducation","education","ClaimDashboard","schoolLevels","loadEducationCategories","loadingInstitutes","setLoadingInstitutes","thisLabel","setThisLabel","getClaimInstitute","claimsTypes","output","all","decision","itm","FC_ClaimData","arrayNew","n","keyClaim","dataArray","gender","sex","national_id","n_id","phone","education_category","claim_session","claim_title","getClaimDataByTitle","allData","FaBookOpen","legend","show","horizontalAlign","fontSize","itemMargin","vertical","pie","donut","color","offsetY","fontFamily","total","label","globals","seriesTotals","reduce","b"],"mappings":"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","file":"static/js/27.794a1b38.chunk.js","sourcesContent":["import { NumberFormat } from \"xlsx\";\nimport { education_category } from \"../interfaces\";\nimport { PositionAPI } from \"../interfaces/position\";\nimport {\n  AccessTaskInterface,\n  CustomeAccessInterface,\n  PositionInterface,\n  PostSchoolInterface,\n  RoleToUserInterface,\n  SchoolInfoInterface,\n  SchoolLevelInterface,\n  SystemUserRoleInterface,\n} from \"./interfaces\";\n\nexport const data_tasks: AccessTaskInterface[] = [\n  {\n    id: \"11233242\",\n    task: \"Do Exam\",\n    key: \"do_exam\",\n    permitted: {\n      create: false,\n      view: false,\n      update: false,\n      delete: false,\n    },\n  },\n  {\n    id: \"1123382242\",\n    task: \"Do Application\",\n    key: \"do_application\",\n    permitted: {\n      create: false,\n      view: false,\n      update: false,\n      delete: false,\n    },\n  },\n];\n\nexport const data_school: SchoolInfoInterface[] = [\n  {\n    school_id: \"32762426329\",\n    school_title: \"G.S. De Gitega\",\n    district_id: \"234242\",\n    number_of_females: 10,\n    number_of_males: 12,\n  },\n  {\n    school_id: \"32762426329\",\n    school_title: \"G.S. De Gitega\",\n    district_id: \"7322342684\",\n  },\n  {\n    school_id: \"32762426329\",\n    school_title: \"Rucee De Kigali\",\n    district_id: \"234242\",\n    number_of_females: 10,\n    number_of_males: 12,\n  },\n  {\n    school_id: \"32762426329\",\n    school_title: \"G.S. De Gitega\",\n    district_id: \"73232432684\",\n    number_of_females: 10,\n    number_of_males: 12,\n  },\n];\n\nexport const data_school_level: SchoolLevelInterface[] = [\n  {\n    school_level_id: \"324234r2ee432\",\n    school_level_name: \"Ordinary Level\",\n    description: \"Ordinary Level description\",\n    education_institute: [\"6100449ceabcc3b4623752e2\"],\n    courses: [],\n  },\n  {\n    school_level_name: \"A level\",\n    description: \"A level description\",\n    education_institute: [\n      \"6100592f646ddb0771e8fc50\",\n      \"61005941646ddb0771e8fc51\",\n    ],\n    courses: [],\n    school_level_id: \"61005974646ddb0771e8fc52\",\n  },\n  {\n    school_level_name: \"O level\",\n    description: \"O level description\",\n    education_institute: [\"6100592f646ddb0771e8fc50\"],\n    courses: [],\n    school_level_id: \"61005989646ddb0771e8fc53\",\n  },\n  {\n    school_level_name: \"Primary\",\n    description: \"Primary description\",\n    education_institute: [\"6100592f646ddb0771e8fc50\"],\n    courses: [],\n    school_level_id: \"61005999646ddb0771e8fc54\",\n  },\n  {\n    school_level_name: \"Ordinary Level\",\n    description: \"Ordinary Level description\",\n    education_institute: [\"610045218bdc25b50cc8bcbc\"],\n    courses: [],\n    school_level_id: \"61065114ea5d9b48e9677606\",\n  },\n];\n\nexport const data_position: PositionInterface[] = [\n  {\n    courses: [\n      {\n        course_name: \"Physics\",\n        course_code: \"P21\",\n        description: \"description of P21\",\n        school_levels: [\"61005974646ddb0771e8fc52\"],\n        course_id: \"610252c47d84ba2313cf6148\",\n      },\n      {\n        course_name: \"Mathematics\",\n        course_code: \"m211\",\n        description: \"description of m211\",\n        school_levels: [\"61005974646ddb0771e8fc52\"],\n        course_id: \"610252fd7d84ba2313cf6149\",\n      },\n    ],\n    position_title: \"Teaching mathematics\",\n    description: \"Teaching mathematics\",\n    school_level_id: {\n      school_level_name: \"A level\",\n      description: \"A level description\",\n      education_institute: [\n        \"6100592f646ddb0771e8fc50\",\n        \"61005941646ddb0771e8fc51\",\n      ],\n      courses: [],\n      school_level_id: \"61005974646ddb0771e8fc52\",\n    },\n    education_institute_id: {\n      education_category_title: \"REB\",\n      school_levels: [],\n      description: \"REB\",\n      education_institute_id: \"6100592f646ddb0771e8fc50\",\n    },\n    requirements: [\n      {\n        user_detail_category_id: \"60fc4868f485d8dd91ed321e\",\n        title: \"Education\",\n        user_required_docs: [\n          {\n            user_detail_subcategory_id: \"60fc48dbf485d8dd91ed321f\",\n            title: \"A1\",\n          },\n        ],\n      },\n    ],\n    position_id: \"610254047d84ba2313cf614a\",\n  },\n  {\n    courses: [\n      {\n        course_name: \"Physics\",\n        course_code: \"P21\",\n        description: \"description of P21\",\n        school_levels: [\"61005974646ddb0771e8fc52\"],\n        course_id: \"610252c47d84ba2313cf6148\",\n      },\n      {\n        course_name: \"English\",\n        course_code: \"e213\",\n        description: \"description of e213\",\n        school_levels: [\"61005974646ddb0771e8fc52\"],\n        course_id: \"6102e72675cc702bbd1582e3\",\n      },\n    ],\n    position_title: \"Teaching Physics\",\n    description: \"Teaching Physics\",\n    school_level_id: {\n      school_level_name: \"A level\",\n      description: \"A level description\",\n      education_institute: [\n        \"6100592f646ddb0771e8fc50\",\n        \"61005941646ddb0771e8fc51\",\n      ],\n      courses: [],\n      school_level_id: \"61005974646ddb0771e8fc52\",\n    },\n    education_institute_id: {\n      education_category_title: \"REB\",\n      school_levels: [],\n      description: \"REB\",\n      education_institute_id: \"6100592f646ddb0771e8fc50\",\n    },\n    requirements: [\n      {\n        user_detail_category_id: \"60fc4868f485d8dd91ed321e\",\n        title: \"Education\",\n        user_required_docs: [\n          {\n            user_detail_subcategory_id: \"60fc48dbf485d8dd91ed321f\",\n            title: \"A1\",\n          },\n        ],\n      },\n      {\n        user_detail_category_id: \"60fc47dff485d8dd91ed3219\",\n        title: \"Language\",\n        user_required_docs: [\n          {\n            user_detail_subcategory_id: \"6102e7ec248f742b674c67ad\",\n            title: \"English\",\n          },\n        ],\n      },\n    ],\n    position_id: \"6102ea2975cc702bbd1582e5\",\n  },\n  {\n    courses: [\n      {\n        course_name: \"Biology\",\n        course_code: \"b213\",\n        description: \"description of b213\",\n        school_levels: [\"61005974646ddb0771e8fc52\"],\n        course_id: \"6103a37975cc702bbd1582e6\",\n      },\n      {\n        course_name: \"English\",\n        course_code: \"e213\",\n        description: \"description of e213\",\n        school_levels: [\"61005974646ddb0771e8fc52\"],\n        course_id: \"6102e72675cc702bbd1582e3\",\n      },\n    ],\n    position_title: \"Teaching Biology\",\n    description: \"Teaching Biology\",\n    school_level_id: {\n      school_level_name: \"A level\",\n      description: \"A level description\",\n      education_institute: [\n        \"6100592f646ddb0771e8fc50\",\n        \"61005941646ddb0771e8fc51\",\n      ],\n      courses: [],\n      school_level_id: \"61005974646ddb0771e8fc52\",\n    },\n    education_institute_id: {\n      education_category_title: \"REB\",\n      school_levels: [],\n      description: \"REB\",\n      education_institute_id: \"6100592f646ddb0771e8fc50\",\n    },\n    requirements: [\n      {\n        user_detail_category_id: \"60fc4868f485d8dd91ed321e\",\n        title: \"A0\",\n        user_required_docs: [\n          {\n            user_detail_subcategory_id: \"60fc48eff485d8dd91ed3221\",\n            title: \"A0\",\n          },\n        ],\n      },\n      {\n        user_detail_category_id: \"60fc47dff485d8dd91ed3219\",\n        title: \"Language\",\n        user_required_docs: [\n          {\n            user_detail_subcategory_id: \"6102e7ec248f742b674c67ad\",\n            title: \"English\",\n          },\n          {\n            user_detail_subcategory_id: \"6102e84c248f742b674c67af\",\n            title: \"Ikinyarwanda\",\n          },\n        ],\n      },\n    ],\n    position_id: \"6103a54075cc702bbd1582e8\",\n  },\n  {\n    courses: [\n      {\n        course_name: \"Biology\",\n        course_code: \"b213\",\n        description: \"description of b213\",\n        school_levels: [\"61005974646ddb0771e8fc52\"],\n        course_id: \"6103a37975cc702bbd1582e6\",\n      },\n      {\n        course_name: \"English\",\n        course_code: \"e213\",\n        description: \"description of e213\",\n        school_levels: [\"61005974646ddb0771e8fc52\"],\n        course_id: \"6102e72675cc702bbd1582e3\",\n      },\n    ],\n    position_title: \"Teaching basic Biology\",\n    description: \"Teaching basic Biology\",\n    school_level_id: {\n      school_level_name: \"O level\",\n      description: \"O level description\",\n      education_institute: [\"6100592f646ddb0771e8fc50\"],\n      courses: [],\n      school_level_id: \"61005989646ddb0771e8fc53\",\n    },\n    education_institute_id: {\n      education_category_title: \"REB\",\n      school_levels: [],\n      description: \"REB\",\n      education_institute_id: \"6100592f646ddb0771e8fc50\",\n    },\n    requirements: [\n      {\n        user_detail_category_id: \"60fc4868f485d8dd91ed321e\",\n        title: \"Education\",\n        user_required_docs: [\n          {\n            user_detail_subcategory_id: \"60fc48dbf485d8dd91ed321f\",\n            title: \"A1\",\n          },\n        ],\n      },\n      {\n        user_detail_category_id: \"60fc47dff485d8dd91ed3219\",\n        title: \"Language\",\n        user_required_docs: [\n          {\n            user_detail_subcategory_id: \"6102e7ec248f742b674c67ad\",\n            title: \"English\",\n          },\n          {\n            user_detail_subcategory_id: \"6102e84c248f742b674c67af\",\n            title: \"Ikinyarwanda\",\n          },\n        ],\n      },\n    ],\n    position_id: \"6103a6ca75cc702bbd1582e9\",\n  },\n  {\n    courses: [\n      {\n        course_name: \"Biology\",\n        course_code: \"b213\",\n        description: \"description of b213\",\n        school_levels: [\"61005974646ddb0771e8fc52\"],\n        course_id: \"6103a37975cc702bbd1582e6\",\n      },\n      {\n        course_name: \"English\",\n        course_code: \"e213\",\n        description: \"description of e213\",\n        school_levels: [\"61005974646ddb0771e8fc52\"],\n        course_id: \"6102e72675cc702bbd1582e3\",\n      },\n    ],\n    position_title: \"Teaching basic Biology\",\n    description: \"Teaching basic Biology\",\n    school_level_id: {\n      school_level_name: \"O level\",\n      description: \"O level description\",\n      education_institute: [\"6100592f646ddb0771e8fc50\"],\n      courses: [],\n      school_level_id: \"61005989646ddb0771e8fc53\",\n    },\n    education_institute_id: {\n      education_category_title: \"WDA\",\n      school_levels: [],\n      description: \"WDA\",\n      education_institute_id: \"61005941646ddb0771e8fc51\",\n    },\n    requirements: [\n      {\n        user_detail_category_id: \"60fc4868f485d8dd91ed321e\",\n        title: \"Education\",\n        user_required_docs: [\n          {\n            user_detail_subcategory_id: \"60fc48dbf485d8dd91ed321f\",\n            title: \"A1\",\n          },\n        ],\n      },\n      {\n        user_detail_category_id: \"60fc47dff485d8dd91ed3219\",\n        title: \"Language\",\n        user_required_docs: [\n          {\n            user_detail_subcategory_id: \"6102e7ec248f742b674c67ad\",\n            title: \"English\",\n          },\n          {\n            user_detail_subcategory_id: \"6102e84c248f742b674c67af\",\n            title: \"Ikinyarwanda\",\n          },\n        ],\n      },\n    ],\n    position_id: \"6103a78475cc702bbd1582ea\",\n  },\n  {\n    courses: [\n      {\n        course_name: \"Biology\",\n        course_code: \"b213\",\n        description: \"description of b213\",\n        school_levels: [\"61005974646ddb0771e8fc52\"],\n        course_id: \"6103a37975cc702bbd1582e6\",\n      },\n      {\n        course_name: \"English\",\n        course_code: \"e213\",\n        description: \"description of e213\",\n        school_levels: [\"61005974646ddb0771e8fc52\"],\n        course_id: \"6102e72675cc702bbd1582e3\",\n      },\n    ],\n    position_title: \"Teaching basic physics\",\n    description: \"Teaching basic physics\",\n    school_level_id: {\n      school_level_name: \"A level\",\n      description: \"A level description\",\n      education_institute: [\n        \"6100592f646ddb0771e8fc50\",\n        \"61005941646ddb0771e8fc51\",\n      ],\n      courses: [],\n      school_level_id: \"61005974646ddb0771e8fc52\",\n    },\n    education_institute_id: {\n      education_category_title: \"WDA\",\n      school_levels: [],\n      description: \"WDA\",\n      education_institute_id: \"61005941646ddb0771e8fc51\",\n    },\n    requirements: [\n      {\n        user_detail_category_id: \"60fc4868f485d8dd91ed321e\",\n        title: \"Education\",\n        user_required_docs: [\n          {\n            user_detail_subcategory_id: \"60fc48dbf485d8dd91ed321f\",\n            title: \"A1\",\n          },\n        ],\n      },\n      {\n        user_detail_category_id: \"60fc47dff485d8dd91ed3219\",\n        title: \"Language\",\n        user_required_docs: [\n          {\n            user_detail_subcategory_id: \"6102e7ec248f742b674c67ad\",\n            title: \"English\",\n          },\n          {\n            user_detail_subcategory_id: \"6102e84c248f742b674c67af\",\n            title: \"Ikinyarwanda\",\n          },\n        ],\n      },\n    ],\n    position_id: \"6103a7ec75cc702bbd1582eb\",\n  },\n];\n\nexport const data_posts_school: PostSchoolInterface[] = [];\n\nexport const isEmptyOrSpaces = (str: string): boolean => {\n  return str === null || str.match(/^ *$/) !== null;\n};\n\nexport const getUserTitle = (\n  accessRoles: SystemUserRoleInterface[],\n  roleId: string\n): string => {\n  const result = accessRoles.find((e) => e.system_user_role_id === roleId);\n  return result ? result.role : \"\";\n};\n\nexport const getRoleById = (\n  roles: SystemUserRoleInterface[],\n  roleId: string\n): SystemUserRoleInterface => {\n  return roles.filter((role) => role.system_user_role_id === roleId)[0];\n};\n\nexport const getInstituteById = (\n  institutes: education_category[],\n  instituteId: string\n): education_category | undefined => {\n  return institutes.find((item) => item.education_institute_id === instituteId);\n};\n\nexport const getPositionById = (\n  positions: PositionAPI[],\n  position_id: string\n): PositionAPI => {\n  console.log({\n    positions,\n    position_id,\n    data: positions.filter(\n      (position) => position.position_id === position_id\n    )[0],\n  });\n  return positions.filter(\n    (position) => position.position_id === position_id\n  )[0];\n};\n\nexport const getSchoolById = (\n  schools: SchoolInfoInterface[],\n  school_id: string\n): SchoolInfoInterface => {\n  return schools.filter((school) => school.school_id === school_id)[0];\n};\n\nexport const getPostById = (\n  posts: PostSchoolInterface[],\n  post_id: string\n): PostSchoolInterface => {\n  return posts.filter((post) => post.school_id === post_id)[0];\n};\n\nexport const getPostsBySchoolId = (\n  posts: PostSchoolInterface[],\n  school_id: string\n): PostSchoolInterface[] => {\n  return posts.filter((post) => post.school_id === school_id);\n};\n\nexport const getPostsByIds = (\n  posts: PostSchoolInterface[],\n  school_id: string,\n  position_id: string\n): PostSchoolInterface[] => {\n  return posts.filter(\n    (post) => post.school_id === school_id && post.position_id === position_id\n  );\n};\n\nexport const displayDate = (dateToDisplay: Date): string => {\n  return new Intl.DateTimeFormat(\"en-GB\", {\n    year: \"numeric\",\n    month: \"long\",\n    day: \"2-digit\",\n  }).format(dateToDisplay);\n};\n\nexport const userAccess = (\n  defaultAccess: RoleToUserInterface,\n  customAccess: CustomeAccessInterface\n): RoleToUserInterface => {\n  // const data = defaultAccess.access.map((default,index,customAccess)=>{\n  //   let data_custom = customAccess\n  //   if\n  // })\n  // return customAccess.filter((custom) => custom.id === accecc_id)[0];\n  return defaultAccess;\n};\n\n// export const groupBy = (list: [], keyGetter: Function) => {\n//   const map = new Map();\n//   list.forEach((item) => {\n//     const key = keyGetter(item);\n//     const collection = map.get(key);\n//     if (!collection) {\n//       map.set(key, [item]);\n//     } else {\n//       collection.push(item);\n//     }\n//   });\n//   return map;\n// };\n\nexport const toTwoDigit = (value: number): string => {\n  var dec = value - Math.floor(value);\n  value = value - dec;\n  return (\"0\" + value).slice(-2) + dec.toString().substr(1);\n};\n\nexport const toAnyDigit = (\n  value: NumberFormat,\n  padding: number = 3\n): string => {\n  var zeroes = new Array(padding + 1).join(\"0\");\n  return (zeroes + value).slice(-padding);\n};\n\nexport const choosenSchool = \"611fce914ce2093472232f5f\";\nexport const choosenDistrict = \"610bd1f3334bb2405fa5061e\";\n\nexport const capitalizeFirstLetter = (value: string): string => {\n  return value.charAt(0).toUpperCase() + value.slice(1);\n};\n\nexport const isDateExpiried = (paramDate: string) => {\n  const thisDate = new Date(paramDate);\n  const today = new Date();\n  if (thisDate.getTime() < today.getTime()) {\n    return true;\n  }\n\n  return false;\n};\n\nexport const exportData = [\n  {\n    userId: 1,\n    id: 1,\n    title:\n      \"sunt aut facere repellat provident occaecati excepturi optio reprehenderit\",\n    body: \"quia et suscipit\\nsuscipit recusandae consequuntur expedita et cum\\nreprehenderit molestiae ut ut quas totam\\nnostrum rerum est autem sunt rem eveniet architecto\",\n  },\n  {\n    userId: 1,\n    id: 2,\n    title: \"qui est esse\",\n    body: \"est rerum tempore vitae\\nsequi sint nihil reprehenderit dolor beatae ea dolores neque\\nfugiat blanditiis voluptate porro vel nihil molestiae ut reiciendis\\nqui aperiam non debitis possimus qui neque nisi nulla\",\n  },\n  {\n    userId: 1,\n    id: 3,\n    title: \"ea molestias quasi exercitationem repellat qui ipsa sit aut\",\n    body: \"et iusto sed quo iure\\nvoluptatem occaecati omnis eligendi aut ad\\nvoluptatem doloribus vel accusantium quis pariatur\\nmolestiae porro eius odio et labore et velit aut\",\n  },\n  {\n    userId: 1,\n    id: 4,\n    title: \"eum et est occaecati\",\n    body: \"ullam et saepe reiciendis voluptatem adipisci\\nsit amet autem assumenda provident rerum culpa\\nquis hic commodi nesciunt rem tenetur doloremque ipsam iure\\nquis sunt voluptatem rerum illo velit\",\n  },\n  {\n    userId: 1,\n    id: 5,\n    title: \"nesciunt quas odio\",\n    body: \"repudiandae veniam quaerat sunt sed\\nalias aut fugiat sit autem sed est\\nvoluptatem omnis possimus esse voluptatibus quis\\nest aut tenetur dolor neque\",\n  },\n  {\n    userId: 1,\n    id: 6,\n    title: \"dolorem eum magni eos aperiam quia\",\n    body: \"ut aspernatur corporis harum nihil quis provident sequi\\nmollitia nobis aliquid molestiae\\nperspiciatis et ea nemo ab reprehenderit accusantium quas\\nvoluptate dolores velit et doloremque molestiae\",\n  },\n  {\n    userId: 1,\n    id: 7,\n    title: \"magnam facilis autem\",\n    body: \"dolore placeat quibusdam ea quo vitae\\nmagni quis enim qui quis quo nemo aut saepe\\nquidem repellat excepturi ut quia\\nsunt ut sequi eos ea sed quas\",\n  },\n  {\n    userId: 1,\n    id: 8,\n    title: \"dolorem dolore est ipsam\",\n    body: \"dignissimos aperiam dolorem qui eum\\nfacilis quibusdam animi sint suscipit qui sint possimus cum\\nquaerat magni maiores excepturi\\nipsam ut commodi dolor voluptatum modi aut vitae\",\n  },\n  {\n    userId: 1,\n    id: 9,\n    title: \"nesciunt iure omnis dolorem tempora et accusantium\",\n    body: \"consectetur animi nesciunt iure dolore\\nenim quia ad\\nveniam autem ut quam aut nobis\\net est aut quod aut provident voluptas autem voluptas\",\n  },\n  {\n    userId: 1,\n    id: 10,\n    title: \"optio molestias id quia eum\",\n    body: \"quo et expedita modi cum officia vel magni\\ndoloribus qui repudiandae\\nvero nisi sit\\nquos veniam quod sed accusamus veritatis error\",\n  },\n  {\n    userId: 2,\n    id: 11,\n    title: \"et ea vero quia laudantium autem\",\n    body: \"delectus reiciendis molestiae occaecati non minima eveniet qui voluptatibus\\naccusamus in eum beatae sit\\nvel qui neque voluptates ut commodi qui incidunt\\nut animi commodi\",\n  },\n  {\n    userId: 2,\n    id: 12,\n    title: \"in quibusdam tempore odit est dolorem\",\n    body: \"itaque id aut magnam\\npraesentium quia et ea odit et ea voluptas et\\nsapiente quia nihil amet occaecati quia id voluptatem\\nincidunt ea est distinctio odio\",\n  },\n  {\n    userId: 2,\n    id: 13,\n    title: \"dolorum ut in voluptas mollitia et saepe quo animi\",\n    body: \"aut dicta possimus sint mollitia voluptas commodi quo doloremque\\niste corrupti reiciendis voluptatem eius rerum\\nsit cumque quod eligendi laborum minima\\nperferendis recusandae assumenda consectetur porro architecto ipsum ipsam\",\n  },\n  {\n    userId: 2,\n    id: 14,\n    title: \"voluptatem eligendi optio\",\n    body: \"fuga et accusamus dolorum perferendis illo voluptas\\nnon doloremque neque facere\\nad qui dolorum molestiae beatae\\nsed aut voluptas totam sit illum\",\n  },\n  {\n    userId: 2,\n    id: 15,\n    title: \"eveniet quod temporibus\",\n    body: \"reprehenderit quos placeat\\nvelit minima officia dolores impedit repudiandae molestiae nam\\nvoluptas recusandae quis delectus\\nofficiis harum fugiat vitae\",\n  },\n  {\n    userId: 2,\n    id: 16,\n    title:\n      \"sint suscipit perspiciatis velit dolorum rerum ipsa laboriosam odio\",\n    body: \"suscipit nam nisi quo aperiam aut\\nasperiores eos fugit maiores voluptatibus quia\\nvoluptatem quis ullam qui in alias quia est\\nconsequatur magni mollitia accusamus ea nisi voluptate dicta\",\n  },\n  {\n    userId: 2,\n    id: 17,\n    title: \"fugit voluptas sed molestias voluptatem provident\",\n    body: \"eos voluptas et aut odit natus earum\\naspernatur fuga molestiae ullam\\ndeserunt ratione qui eos\\nqui nihil ratione nemo velit ut aut id quo\",\n  },\n  {\n    userId: 2,\n    id: 18,\n    title: \"voluptate et itaque vero tempora molestiae\",\n    body: \"eveniet quo quis\\nlaborum totam consequatur non dolor\\nut et est repudiandae\\nest voluptatem vel debitis et magnam\",\n  },\n  {\n    userId: 2,\n    id: 19,\n    title: \"adipisci placeat illum aut reiciendis qui\",\n    body: \"illum quis cupiditate provident sit magnam\\nea sed aut omnis\\nveniam maiores ullam consequatur atque\\nadipisci quo iste expedita sit quos voluptas\",\n  },\n  {\n    userId: 2,\n    id: 20,\n    title: \"doloribus ad provident suscipit at\",\n    body: \"qui consequuntur ducimus possimus quisquam amet similique\\nsuscipit porro ipsam amet\\neos veritatis officiis exercitationem vel fugit aut necessitatibus totam\\nomnis rerum consequatur expedita quidem cumque explicabo\",\n  },\n  {\n    userId: 3,\n    id: 21,\n    title: \"asperiores ea ipsam voluptatibus modi minima quia sint\",\n    body: \"repellat aliquid praesentium dolorem quo\\nsed totam minus non itaque\\nnihil labore molestiae sunt dolor eveniet hic recusandae veniam\\ntempora et tenetur expedita sunt\",\n  },\n  {\n    userId: 3,\n    id: 22,\n    title: \"dolor sint quo a velit explicabo quia nam\",\n    body: \"eos qui et ipsum ipsam suscipit aut\\nsed omnis non odio\\nexpedita earum mollitia molestiae aut atque rem suscipit\\nnam impedit esse\",\n  },\n  {\n    userId: 3,\n    id: 23,\n    title: \"maxime id vitae nihil numquam\",\n    body: \"veritatis unde neque eligendi\\nquae quod architecto quo neque vitae\\nest illo sit tempora doloremque fugit quod\\net et vel beatae sequi ullam sed tenetur perspiciatis\",\n  },\n  {\n    userId: 3,\n    id: 24,\n    title: \"autem hic labore sunt dolores incidunt\",\n    body: \"enim et ex nulla\\nomnis voluptas quia qui\\nvoluptatem consequatur numquam aliquam sunt\\ntotam recusandae id dignissimos aut sed asperiores deserunt\",\n  },\n  {\n    userId: 3,\n    id: 25,\n    title: \"rem alias distinctio quo quis\",\n    body: \"ullam consequatur ut\\nomnis quis sit vel consequuntur\\nipsa eligendi ipsum molestiae et omnis error nostrum\\nmolestiae illo tempore quia et distinctio\",\n  },\n  {\n    userId: 3,\n    id: 26,\n    title: \"est et quae odit qui non\",\n    body: \"similique esse doloribus nihil accusamus\\nomnis dolorem fuga consequuntur reprehenderit fugit recusandae temporibus\\nperspiciatis cum ut laudantium\\nomnis aut molestiae vel vero\",\n  },\n  {\n    userId: 3,\n    id: 27,\n    title: \"quasi id et eos tenetur aut quo autem\",\n    body: \"eum sed dolores ipsam sint possimus debitis occaecati\\ndebitis qui qui et\\nut placeat enim earum aut odit facilis\\nconsequatur suscipit necessitatibus rerum sed inventore temporibus consequatur\",\n  },\n  {\n    userId: 3,\n    id: 28,\n    title: \"delectus ullam et corporis nulla voluptas sequi\",\n    body: \"non et quaerat ex quae ad maiores\\nmaiores recusandae totam aut blanditiis mollitia quas illo\\nut voluptatibus voluptatem\\nsimilique nostrum eum\",\n  },\n  {\n    userId: 3,\n    id: 29,\n    title: \"iusto eius quod necessitatibus culpa ea\",\n    body: \"odit magnam ut saepe sed non qui\\ntempora atque nihil\\naccusamus illum doloribus illo dolor\\neligendi repudiandae odit magni similique sed cum maiores\",\n  },\n  {\n    userId: 3,\n    id: 30,\n    title: \"a quo magni similique perferendis\",\n    body: \"alias dolor cumque\\nimpedit blanditiis non eveniet odio maxime\\nblanditiis amet eius quis tempora quia autem rem\\na provident perspiciatis quia\",\n  },\n  {\n    userId: 4,\n    id: 31,\n    title: \"ullam ut quidem id aut vel consequuntur\",\n    body: \"debitis eius sed quibusdam non quis consectetur vitae\\nimpedit ut qui consequatur sed aut in\\nquidem sit nostrum et maiores adipisci atque\\nquaerat voluptatem adipisci repudiandae\",\n  },\n  {\n    userId: 4,\n    id: 32,\n    title: \"doloremque illum aliquid sunt\",\n    body: \"deserunt eos nobis asperiores et hic\\nest debitis repellat molestiae optio\\nnihil ratione ut eos beatae quibusdam distinctio maiores\\nearum voluptates et aut adipisci ea maiores voluptas maxime\",\n  },\n  {\n    userId: 4,\n    id: 33,\n    title: \"qui explicabo molestiae dolorem\",\n    body: \"rerum ut et numquam laborum odit est sit\\nid qui sint in\\nquasi tenetur tempore aperiam et quaerat qui in\\nrerum officiis sequi cumque quod\",\n  },\n  {\n    userId: 4,\n    id: 34,\n    title: \"magnam ut rerum iure\",\n    body: \"ea velit perferendis earum ut voluptatem voluptate itaque iusto\\ntotam pariatur in\\nnemo voluptatem voluptatem autem magni tempora minima in\\nest distinctio qui assumenda accusamus dignissimos officia nesciunt nobis\",\n  },\n  {\n    userId: 4,\n    id: 35,\n    title: \"id nihil consequatur molestias animi provident\",\n    body: \"nisi error delectus possimus ut eligendi vitae\\nplaceat eos harum cupiditate facilis reprehenderit voluptatem beatae\\nmodi ducimus quo illum voluptas eligendi\\net nobis quia fugit\",\n  },\n  {\n    userId: 4,\n    id: 36,\n    title: \"fuga nam accusamus voluptas reiciendis itaque\",\n    body: \"ad mollitia et omnis minus architecto odit\\nvoluptas doloremque maxime aut non ipsa qui alias veniam\\nblanditiis culpa aut quia nihil cumque facere et occaecati\\nqui aspernatur quia eaque ut aperiam inventore\",\n  },\n  {\n    userId: 4,\n    id: 37,\n    title: \"provident vel ut sit ratione est\",\n    body: \"debitis et eaque non officia sed nesciunt pariatur vel\\nvoluptatem iste vero et ea\\nnumquam aut expedita ipsum nulla in\\nvoluptates omnis consequatur aut enim officiis in quam qui\",\n  },\n  {\n    userId: 4,\n    id: 38,\n    title: \"explicabo et eos deleniti nostrum ab id repellendus\",\n    body: \"animi esse sit aut sit nesciunt assumenda eum voluptas\\nquia voluptatibus provident quia necessitatibus ea\\nrerum repudiandae quia voluptatem delectus fugit aut id quia\\nratione optio eos iusto veniam iure\",\n  },\n  {\n    userId: 4,\n    id: 39,\n    title: \"eos dolorem iste accusantium est eaque quam\",\n    body: \"corporis rerum ducimus vel eum accusantium\\nmaxime aspernatur a porro possimus iste omnis\\nest in deleniti asperiores fuga aut\\nvoluptas sapiente vel dolore minus voluptatem incidunt ex\",\n  },\n  {\n    userId: 4,\n    id: 40,\n    title: \"enim quo cumque\",\n    body: \"ut voluptatum aliquid illo tenetur nemo sequi quo facilis\\nipsum rem optio mollitia quas\\nvoluptatem eum voluptas qui\\nunde omnis voluptatem iure quasi maxime voluptas nam\",\n  },\n  {\n    userId: 5,\n    id: 41,\n    title: \"non est facere\",\n    body: \"molestias id nostrum\\nexcepturi molestiae dolore omnis repellendus quaerat saepe\\nconsectetur iste quaerat tenetur asperiores accusamus ex ut\\nnam quidem est ducimus sunt debitis saepe\",\n  },\n  {\n    userId: 5,\n    id: 42,\n    title:\n      \"commodi ullam sint et excepturi error explicabo praesentium voluptas\",\n    body: \"odio fugit voluptatum ducimus earum autem est incidunt voluptatem\\nodit reiciendis aliquam sunt sequi nulla dolorem\\nnon facere repellendus voluptates quia\\nratione harum vitae ut\",\n  },\n  {\n    userId: 5,\n    id: 43,\n    title:\n      \"eligendi iste nostrum consequuntur adipisci praesentium sit beatae perferendis\",\n    body: \"similique fugit est\\nillum et dolorum harum et voluptate eaque quidem\\nexercitationem quos nam commodi possimus cum odio nihil nulla\\ndolorum exercitationem magnam ex et a et distinctio debitis\",\n  },\n  {\n    userId: 5,\n    id: 44,\n    title: \"optio dolor molestias sit\",\n    body: \"temporibus est consectetur dolore\\net libero debitis vel velit laboriosam quia\\nipsum quibusdam qui itaque fuga rem aut\\nea et iure quam sed maxime ut distinctio quae\",\n  },\n  {\n    userId: 5,\n    id: 45,\n    title: \"ut numquam possimus omnis eius suscipit laudantium iure\",\n    body: \"est natus reiciendis nihil possimus aut provident\\nex et dolor\\nrepellat pariatur est\\nnobis rerum repellendus dolorem autem\",\n  },\n  {\n    userId: 5,\n    id: 46,\n    title: \"aut quo modi neque nostrum ducimus\",\n    body: \"voluptatem quisquam iste\\nvoluptatibus natus officiis facilis dolorem\\nquis quas ipsam\\nvel et voluptatum in aliquid\",\n  },\n  {\n    userId: 5,\n    id: 47,\n    title: \"quibusdam cumque rem aut deserunt\",\n    body: \"voluptatem assumenda ut qui ut cupiditate aut impedit veniam\\noccaecati nemo illum voluptatem laudantium\\nmolestiae beatae rerum ea iure soluta nostrum\\neligendi et voluptate\",\n  },\n  {\n    userId: 5,\n    id: 48,\n    title: \"ut voluptatem illum ea doloribus itaque eos\",\n    body: \"voluptates quo voluptatem facilis iure occaecati\\nvel assumenda rerum officia et\\nillum perspiciatis ab deleniti\\nlaudantium repellat ad ut et autem reprehenderit\",\n  },\n  {\n    userId: 5,\n    id: 49,\n    title: \"laborum non sunt aut ut assumenda perspiciatis voluptas\",\n    body: \"inventore ab sint\\nnatus fugit id nulla sequi architecto nihil quaerat\\neos tenetur in in eum veritatis non\\nquibusdam officiis aspernatur cumque aut commodi aut\",\n  },\n  {\n    userId: 5,\n    id: 50,\n    title:\n      \"repellendus qui recusandae incidunt voluptates tenetur qui omnis exercitationem\",\n    body: \"error suscipit maxime adipisci consequuntur recusandae\\nvoluptas eligendi et est et voluptates\\nquia distinctio ab amet quaerat molestiae et vitae\\nadipisci impedit sequi nesciunt quis consectetur\",\n  },\n  {\n    userId: 6,\n    id: 51,\n    title: \"soluta aliquam aperiam consequatur illo quis voluptas\",\n    body: \"sunt dolores aut doloribus\\ndolore doloribus voluptates tempora et\\ndoloremque et quo\\ncum asperiores sit consectetur dolorem\",\n  },\n  {\n    userId: 6,\n    id: 52,\n    title: \"qui enim et consequuntur quia animi quis voluptate quibusdam\",\n    body: \"iusto est quibusdam fuga quas quaerat molestias\\na enim ut sit accusamus enim\\ntemporibus iusto accusantium provident architecto\\nsoluta esse reprehenderit qui laborum\",\n  },\n  {\n    userId: 6,\n    id: 53,\n    title: \"ut quo aut ducimus alias\",\n    body: \"minima harum praesentium eum rerum illo dolore\\nquasi exercitationem rerum nam\\nporro quis neque quo\\nconsequatur minus dolor quidem veritatis sunt non explicabo similique\",\n  },\n  {\n    userId: 6,\n    id: 54,\n    title: \"sit asperiores ipsam eveniet odio non quia\",\n    body: \"totam corporis dignissimos\\nvitae dolorem ut occaecati accusamus\\nex velit deserunt\\net exercitationem vero incidunt corrupti mollitia\",\n  },\n  {\n    userId: 6,\n    id: 55,\n    title: \"sit vel voluptatem et non libero\",\n    body: \"debitis excepturi ea perferendis harum libero optio\\neos accusamus cum fuga ut sapiente repudiandae\\net ut incidunt omnis molestiae\\nnihil ut eum odit\",\n  },\n  {\n    userId: 6,\n    id: 56,\n    title: \"qui et at rerum necessitatibus\",\n    body: \"aut est omnis dolores\\nneque rerum quod ea rerum velit pariatur beatae excepturi\\net provident voluptas corrupti\\ncorporis harum reprehenderit dolores eligendi\",\n  },\n  {\n    userId: 6,\n    id: 57,\n    title: \"sed ab est est\",\n    body: \"at pariatur consequuntur earum quidem\\nquo est laudantium soluta voluptatem\\nqui ullam et est\\net cum voluptas voluptatum repellat est\",\n  },\n  {\n    userId: 6,\n    id: 58,\n    title: \"voluptatum itaque dolores nisi et quasi\",\n    body: \"veniam voluptatum quae adipisci id\\net id quia eos ad et dolorem\\naliquam quo nisi sunt eos impedit error\\nad similique veniam\",\n  },\n  {\n    userId: 6,\n    id: 59,\n    title: \"qui commodi dolor at maiores et quis id accusantium\",\n    body: \"perspiciatis et quam ea autem temporibus non voluptatibus qui\\nbeatae a earum officia nesciunt dolores suscipit voluptas et\\nanimi doloribus cum rerum quas et magni\\net hic ut ut commodi expedita sunt\",\n  },\n  {\n    userId: 6,\n    id: 60,\n    title:\n      \"consequatur placeat omnis quisquam quia reprehenderit fugit veritatis facere\",\n    body: \"asperiores sunt ab assumenda cumque modi velit\\nqui esse omnis\\nvoluptate et fuga perferendis voluptas\\nillo ratione amet aut et omnis\",\n  },\n  {\n    userId: 7,\n    id: 61,\n    title: \"voluptatem doloribus consectetur est ut ducimus\",\n    body: \"ab nemo optio odio\\ndelectus tenetur corporis similique nobis repellendus rerum omnis facilis\\nvero blanditiis debitis in nesciunt doloribus dicta dolores\\nmagnam minus velit\",\n  },\n  {\n    userId: 7,\n    id: 62,\n    title: \"beatae enim quia vel\",\n    body: \"enim aspernatur illo distinctio quae praesentium\\nbeatae alias amet delectus qui voluptate distinctio\\nodit sint accusantium autem omnis\\nquo molestiae omnis ea eveniet optio\",\n  },\n  {\n    userId: 7,\n    id: 63,\n    title:\n      \"voluptas blanditiis repellendus animi ducimus error sapiente et suscipit\",\n    body: \"enim adipisci aspernatur nemo\\nnumquam omnis facere dolorem dolor ex quis temporibus incidunt\\nab delectus culpa quo reprehenderit blanditiis asperiores\\naccusantium ut quam in voluptatibus voluptas ipsam dicta\",\n  },\n  {\n    userId: 7,\n    id: 64,\n    title: \"et fugit quas eum in in aperiam quod\",\n    body: \"id velit blanditiis\\neum ea voluptatem\\nmolestiae sint occaecati est eos perspiciatis\\nincidunt a error provident eaque aut aut qui\",\n  },\n  {\n    userId: 7,\n    id: 65,\n    title: \"consequatur id enim sunt et et\",\n    body: \"voluptatibus ex esse\\nsint explicabo est aliquid cumque adipisci fuga repellat labore\\nmolestiae corrupti ex saepe at asperiores et perferendis\\nnatus id esse incidunt pariatur\",\n  },\n  {\n    userId: 7,\n    id: 66,\n    title: \"repudiandae ea animi iusto\",\n    body: \"officia veritatis tenetur vero qui itaque\\nsint non ratione\\nsed et ut asperiores iusto eos molestiae nostrum\\nveritatis quibusdam et nemo iusto saepe\",\n  },\n  {\n    userId: 7,\n    id: 67,\n    title: \"aliquid eos sed fuga est maxime repellendus\",\n    body: \"reprehenderit id nostrum\\nvoluptas doloremque pariatur sint et accusantium quia quod aspernatur\\net fugiat amet\\nnon sapiente et consequatur necessitatibus molestiae\",\n  },\n  {\n    userId: 7,\n    id: 68,\n    title: \"odio quis facere architecto reiciendis optio\",\n    body: \"magnam molestiae perferendis quisquam\\nqui cum reiciendis\\nquaerat animi amet hic inventore\\nea quia deleniti quidem saepe porro velit\",\n  },\n  {\n    userId: 7,\n    id: 69,\n    title: \"fugiat quod pariatur odit minima\",\n    body: \"officiis error culpa consequatur modi asperiores et\\ndolorum assumenda voluptas et vel qui aut vel rerum\\nvoluptatum quisquam perspiciatis quia rerum consequatur totam quas\\nsequi commodi repudiandae asperiores et saepe a\",\n  },\n  {\n    userId: 7,\n    id: 70,\n    title: \"voluptatem laborum magni\",\n    body: \"sunt repellendus quae\\nest asperiores aut deleniti esse accusamus repellendus quia aut\\nquia dolorem unde\\neum tempora esse dolore\",\n  },\n  {\n    userId: 8,\n    id: 71,\n    title: \"et iusto veniam et illum aut fuga\",\n    body: \"occaecati a doloribus\\niste saepe consectetur placeat eum voluptate dolorem et\\nqui quo quia voluptas\\nrerum ut id enim velit est perferendis\",\n  },\n  {\n    userId: 8,\n    id: 72,\n    title: \"sint hic doloribus consequatur eos non id\",\n    body: \"quam occaecati qui deleniti consectetur\\nconsequatur aut facere quas exercitationem aliquam hic voluptas\\nneque id sunt ut aut accusamus\\nsunt consectetur expedita inventore velit\",\n  },\n  {\n    userId: 8,\n    id: 73,\n    title: \"consequuntur deleniti eos quia temporibus ab aliquid at\",\n    body: \"voluptatem cumque tenetur consequatur expedita ipsum nemo quia explicabo\\naut eum minima consequatur\\ntempore cumque quae est et\\net in consequuntur voluptatem voluptates aut\",\n  },\n  {\n    userId: 8,\n    id: 74,\n    title: \"enim unde ratione doloribus quas enim ut sit sapiente\",\n    body: \"odit qui et et necessitatibus sint veniam\\nmollitia amet doloremque molestiae commodi similique magnam et quam\\nblanditiis est itaque\\nquo et tenetur ratione occaecati molestiae tempora\",\n  },\n  {\n    userId: 8,\n    id: 75,\n    title: \"dignissimos eum dolor ut enim et delectus in\",\n    body: \"commodi non non omnis et voluptas sit\\nautem aut nobis magnam et sapiente voluptatem\\net laborum repellat qui delectus facilis temporibus\\nrerum amet et nemo voluptate expedita adipisci error dolorem\",\n  },\n  {\n    userId: 8,\n    id: 76,\n    title: \"doloremque officiis ad et non perferendis\",\n    body: \"ut animi facere\\ntotam iusto tempore\\nmolestiae eum aut et dolorem aperiam\\nquaerat recusandae totam odio\",\n  },\n  {\n    userId: 8,\n    id: 77,\n    title: \"necessitatibus quasi exercitationem odio\",\n    body: \"modi ut in nulla repudiandae dolorum nostrum eos\\naut consequatur omnis\\nut incidunt est omnis iste et quam\\nvoluptates sapiente aliquam asperiores nobis amet corrupti repudiandae provident\",\n  },\n  {\n    userId: 8,\n    id: 78,\n    title: \"quam voluptatibus rerum veritatis\",\n    body: \"nobis facilis odit tempore cupiditate quia\\nassumenda doloribus rerum qui ea\\nillum et qui totam\\naut veniam repellendus\",\n  },\n  {\n    userId: 8,\n    id: 79,\n    title: \"pariatur consequatur quia magnam autem omnis non amet\",\n    body: \"libero accusantium et et facere incidunt sit dolorem\\nnon excepturi qui quia sed laudantium\\nquisquam molestiae ducimus est\\nofficiis esse molestiae iste et quos\",\n  },\n  {\n    userId: 8,\n    id: 80,\n    title: \"labore in ex et explicabo corporis aut quas\",\n    body: \"ex quod dolorem ea eum iure qui provident amet\\nquia qui facere excepturi et repudiandae\\nasperiores molestias provident\\nminus incidunt vero fugit rerum sint sunt excepturi provident\",\n  },\n  {\n    userId: 9,\n    id: 81,\n    title: \"tempora rem veritatis voluptas quo dolores vero\",\n    body: \"facere qui nesciunt est voluptatum voluptatem nisi\\nsequi eligendi necessitatibus ea at rerum itaque\\nharum non ratione velit laboriosam quis consequuntur\\nex officiis minima doloremque voluptas ut aut\",\n  },\n  {\n    userId: 9,\n    id: 82,\n    title: \"laudantium voluptate suscipit sunt enim enim\",\n    body: \"ut libero sit aut totam inventore sunt\\nporro sint qui sunt molestiae\\nconsequatur cupiditate qui iste ducimus adipisci\\ndolor enim assumenda soluta laboriosam amet iste delectus hic\",\n  },\n  {\n    userId: 9,\n    id: 83,\n    title: \"odit et voluptates doloribus alias odio et\",\n    body: \"est molestiae facilis quis tempora numquam nihil qui\\nvoluptate sapiente consequatur est qui\\nnecessitatibus autem aut ipsa aperiam modi dolore numquam\\nreprehenderit eius rem quibusdam\",\n  },\n  {\n    userId: 9,\n    id: 84,\n    title:\n      \"optio ipsam molestias necessitatibus occaecati facilis veritatis dolores aut\",\n    body: \"sint molestiae magni a et quos\\neaque et quasi\\nut rerum debitis similique veniam\\nrecusandae dignissimos dolor incidunt consequatur odio\",\n  },\n  {\n    userId: 9,\n    id: 85,\n    title: \"dolore veritatis porro provident adipisci blanditiis et sunt\",\n    body: \"similique sed nisi voluptas iusto omnis\\nmollitia et quo\\nassumenda suscipit officia magnam sint sed tempora\\nenim provident pariatur praesentium atque animi amet ratione\",\n  },\n  {\n    userId: 9,\n    id: 86,\n    title: \"placeat quia et porro iste\",\n    body: \"quasi excepturi consequatur iste autem temporibus sed molestiae beatae\\net quaerat et esse ut\\nvoluptatem occaecati et vel explicabo autem\\nasperiores pariatur deserunt optio\",\n  },\n  {\n    userId: 9,\n    id: 87,\n    title: \"nostrum quis quasi placeat\",\n    body: \"eos et molestiae\\nnesciunt ut a\\ndolores perspiciatis repellendus repellat aliquid\\nmagnam sint rem ipsum est\",\n  },\n  {\n    userId: 9,\n    id: 88,\n    title: \"sapiente omnis fugit eos\",\n    body: \"consequatur omnis est praesentium\\nducimus non iste\\nneque hic deserunt\\nvoluptatibus veniam cum et rerum sed\",\n  },\n  {\n    userId: 9,\n    id: 89,\n    title: \"sint soluta et vel magnam aut ut sed qui\",\n    body: \"repellat aut aperiam totam temporibus autem et\\narchitecto magnam ut\\nconsequatur qui cupiditate rerum quia soluta dignissimos nihil iure\\ntempore quas est\",\n  },\n  {\n    userId: 9,\n    id: 90,\n    title: \"ad iusto omnis odit dolor voluptatibus\",\n    body: \"minus omnis soluta quia\\nqui sed adipisci voluptates illum ipsam voluptatem\\neligendi officia ut in\\neos soluta similique molestias praesentium blanditiis\",\n  },\n  {\n    userId: 10,\n    id: 91,\n    title: \"aut amet sed\",\n    body: \"libero voluptate eveniet aperiam sed\\nsunt placeat suscipit molestias\\nsimilique fugit nam natus\\nexpedita consequatur consequatur dolores quia eos et placeat\",\n  },\n  {\n    userId: 10,\n    id: 92,\n    title: \"ratione ex tenetur perferendis\",\n    body: \"aut et excepturi dicta laudantium sint rerum nihil\\nlaudantium et at\\na neque minima officia et similique libero et\\ncommodi voluptate qui\",\n  },\n  {\n    userId: 10,\n    id: 93,\n    title: \"beatae soluta recusandae\",\n    body: \"dolorem quibusdam ducimus consequuntur dicta aut quo laboriosam\\nvoluptatem quis enim recusandae ut sed sunt\\nnostrum est odit totam\\nsit error sed sunt eveniet provident qui nulla\",\n  },\n  {\n    userId: 10,\n    id: 94,\n    title: \"qui qui voluptates illo iste minima\",\n    body: \"aspernatur expedita soluta quo ab ut similique\\nexpedita dolores amet\\nsed temporibus distinctio magnam saepe deleniti\\nomnis facilis nam ipsum natus sint similique omnis\",\n  },\n  {\n    userId: 10,\n    id: 95,\n    title: \"id minus libero illum nam ad officiis\",\n    body: \"earum voluptatem facere provident blanditiis velit laboriosam\\npariatur accusamus odio saepe\\ncumque dolor qui a dicta ab doloribus consequatur omnis\\ncorporis cupiditate eaque assumenda ad nesciunt\",\n  },\n  {\n    userId: 10,\n    id: 96,\n    title: \"quaerat velit veniam amet cupiditate aut numquam ut sequi\",\n    body: \"in non odio excepturi sint eum\\nlabore voluptates vitae quia qui et\\ninventore itaque rerum\\nveniam non exercitationem delectus aut\",\n  },\n  {\n    userId: 10,\n    id: 97,\n    title: \"quas fugiat ut perspiciatis vero provident\",\n    body: \"eum non blanditiis soluta porro quibusdam voluptas\\nvel voluptatem qui placeat dolores qui velit aut\\nvel inventore aut cumque culpa explicabo aliquid at\\nperspiciatis est et voluptatem dignissimos dolor itaque sit nam\",\n  },\n  {\n    userId: 10,\n    id: 98,\n    title: \"laboriosam dolor voluptates\",\n    body: \"doloremque ex facilis sit sint culpa\\nsoluta assumenda eligendi non ut eius\\nsequi ducimus vel quasi\\nveritatis est dolores\",\n  },\n  {\n    userId: 10,\n    id: 99,\n    title: \"temporibus sit alias delectus eligendi possimus magni\",\n    body: \"quo deleniti praesentium dicta non quod\\naut est molestias\\nmolestias et officia quis nihil\\nitaque dolorem quia\",\n  },\n  {\n    userId: 10,\n    id: 100,\n    title: \"at nam consequatur ea labore ea harum\",\n    body: \"cupiditate quo est a modi nesciunt soluta\\nipsa voluptas error itaque dicta in\\nautem qui minus magnam et distinctio eum\\naccusamus ratione error aut\",\n  },\n];\n","import axios from \"axios\";\nimport { Dispatch } from \"redux\";\nimport { ActionTypes } from \"./types\";\nimport {\n  AssignRoleToUserActionInterface,\n  CustomeAccessInterface,\n  UserInterface,\n} from \"../shared/interfaces\";\nimport { API } from \"../utils/api\";\nimport { setAxiosToken } from \"../utils/AxiosToken\";\n\n/**\n * * ****************************** INTERFACES *****************************\n */\n\ninterface FetchUsersAction {\n  type: ActionTypes.FETCH_USERS_ACCESS;\n  payload: UserInterface[];\n}\n\ninterface BlockUserToSystem {\n  type: ActionTypes.BLOCK_USER_TO_SYSTEM | ActionTypes.UNBLOCK_USER_TO_SYSTEM;\n  payload: string;\n}\n\ninterface AssignRoleToUserAction {\n  type: ActionTypes.ASSIGN_ROLE_TO_USER;\n  payload: AssignRoleToUserActionInterface;\n}\n\ninterface CustomizeUserAccessAction {\n  type: ActionTypes.CUSTOMIZE_USER_ACCESS;\n  payload: CustomeAccessInterface;\n}\n\ninterface ResetUserAccessAction {\n  type: ActionTypes.RESET_USER_ACCESS;\n  payload: string;\n}\n\ntype fetchUserAccessInterface = {\n  users: UserInterface[];\n  next: {\n    page: number;\n    limit: number;\n  } | null;\n  previous: {\n    page: number;\n    limit: number;\n  } | null;\n  total_users: number;\n};\n\nexport enum documentValidationStatus {\n  waiting = \"waiting\",\n  approved = \"approved\",\n  rejected = \"rejected\",\n}\n\nexport interface VerifyDocumentInterface {\n  user_id: string;\n  doc_id: string;\n  validation_status: \"waiting\" | \"approved\" | \"rejected\";\n  validated_by: {\n    user_id: string;\n    comment: string;\n    validation_status: \"waiting\" | \"approved\" | \"rejected\";\n    date?: string;\n  };\n}\n\ninterface VerifyAllDocumentAction {\n  type: ActionTypes.VERIFY_ALL_DOCUMENT;\n  payload: VerifyDocumentInterface;\n}\n\nexport type AccessUserActionType =\n  | FetchUsersAction\n  | BlockUserToSystem\n  | AssignRoleToUserAction\n  | CustomizeUserAccessAction\n  | ResetUserAccessAction\n  | VerifyAllDocumentAction;\n\n/**\n * * ****************************** ACTIONS *****************************\n */\n\nexport const fetchUserAccess = () => {\n  return async (dispatch: Dispatch) => {\n    try {\n      setAxiosToken();\n      const res = await axios.get<fetchUserAccessInterface>(\n        `${API.AUTH}/users?page=1&limit=500`\n      );\n      console.log({ users_response: res });\n      dispatch<FetchUsersAction>({\n        type: ActionTypes.FETCH_USERS_ACCESS,\n        payload: res.data.users,\n      });\n    } catch (error) {\n      console.error({ user_error: error });\n    }\n  };\n};\n\nexport const blockUserToSystem = (data: string) => {\n  console.log({ data });\n  return async (dispatch: Dispatch) => {\n    dispatch<BlockUserToSystem>({\n      type: ActionTypes.BLOCK_USER_TO_SYSTEM,\n      payload: data,\n    });\n  };\n};\n\nexport const unBlockUserToSystem = (data: string) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<BlockUserToSystem>({\n      type: ActionTypes.UNBLOCK_USER_TO_SYSTEM,\n      payload: data,\n    });\n  };\n};\n\nexport const assignRoleToUserAccess = (\n  data: AssignRoleToUserActionInterface\n) => {\n  console.log({ data });\n  return async (dispatch: Dispatch) => {\n    dispatch<AssignRoleToUserAction>({\n      type: ActionTypes.ASSIGN_ROLE_TO_USER,\n      payload: data,\n      // payload: response.data,\n    });\n  };\n};\n\nexport const customizeUserAccess = (data: CustomeAccessInterface) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<CustomizeUserAccessAction>({\n      type: ActionTypes.CUSTOMIZE_USER_ACCESS,\n      payload: data,\n    });\n  };\n};\n\nexport const resetUserAccess = (data: string) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<ResetUserAccessAction>({\n      type: ActionTypes.RESET_USER_ACCESS,\n      payload: data,\n    });\n  };\n};\n\nexport const verifyAllDocument = (data: VerifyDocumentInterface) => {\n  console.log({ data });\n  return async (dispatch: Dispatch) => {\n    dispatch<VerifyAllDocumentAction>({\n      type: ActionTypes.VERIFY_ALL_DOCUMENT,\n      payload: data,\n    });\n  };\n};\n","import React, { useEffect, useState } from \"react\";\nimport { BiSort } from \"react-icons/bi\";\nimport { MdNavigateBefore, MdNavigateNext, MdSearch } from \"react-icons/md\";\n\nconst FC_makeID = (length: number = 5): string => {\n  let result: string = \"\";\n  let characters: string =\n    \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\n  let charactersLength = characters.length;\n  for (let i: number = 0; i < length; i++) {\n    result += characters.charAt(Math.floor(Math.random() * charactersLength));\n  }\n  return result;\n};\n\nexport const sortThisColumn = (\n  tableId: string,\n  colIndex: number = 0,\n  dir: \"asc\" | \"desc\" = \"asc\"\n) => {\n  var table,\n    rows,\n    switching,\n    i,\n    x,\n    y,\n    shouldSwitch,\n    switchcount = 0;\n  table = document.getElementById(tableId) as HTMLTableElement;\n  switching = true;\n  /* Make a loop that will continue until\n  no switching has been done: */\n  if (table) {\n    while (switching) {\n      //start by saying: no switching is done:\n      switching = false;\n      rows = table.rows;\n      /*Loop through all table rows (except the\n    first, which contains table headers):*/\n      for (i = 1; i < rows.length - 1; i++) {\n        //start by saying there should be no switching:\n        shouldSwitch = false;\n        /*Get the two elements you want to compare,\n      one from current row and one from the next:*/\n        x = rows[i].getElementsByTagName(\"TD\")[colIndex];\n        y = rows[i + 1].getElementsByTagName(\"TD\")[colIndex];\n        /*check if the two rows should switch place,\n      based on the direction, asc or desc:*/\n        if (dir === \"asc\" && x && y) {\n          if (x.innerHTML.toLowerCase() > y.innerHTML.toLowerCase()) {\n            //if so, mark as a switch and break the loop:\n            shouldSwitch = true;\n            break;\n          }\n        } else if (dir === \"desc\" && x && y) {\n          if (x.innerHTML.toLowerCase() < y.innerHTML.toLowerCase()) {\n            //if so, mark as a switch and break the loop:\n            shouldSwitch = true;\n            break;\n          }\n        }\n      }\n      if (shouldSwitch && rows[i].parentNode) {\n        /*If a switch has been marked, make the switch\n      and mark that a switch has been done:*/\n        rows[i].parentNode!.insertBefore(rows[i + 1], rows[i]);\n        switching = true;\n        //Each time a switch is done, increase this count by 1:\n        switchcount++;\n      } else {\n        /*If no switching has been done AND the direction is \"asc\",\n      set the direction to \"desc\" and run the while loop again.*/\n        if (switchcount === 0 && dir === \"asc\") {\n          dir = \"desc\";\n          switching = true;\n        }\n      }\n      // if (i === 0) continue;\n      // rows.cells[i].style.backgroundColor = \"blue\";\n    }\n  }\n};\n\nexport interface TableColumnsInterface {\n  columnTitle: JSX.Element | string;\n  alignText: string;\n  padding?: string;\n  isSortAllowed?: boolean;\n}\n\ninterface TableProps {\n  columns: TableColumnsInterface[];\n  rows: Function;\n  hideColumns?: boolean;\n  pagination?: boolean;\n  search?: boolean;\n  tableSize?: string;\n  tableClass?: string;\n  tableId?: string;\n  rounded?: boolean;\n  searchBG?: string;\n  thColor?: string;\n  loading?: boolean;\n}\n\nconst Table: React.FC<TableProps> = ({\n  rows,\n  columns,\n  hideColumns = false,\n  pagination = false,\n  search = false,\n  tableSize = \"w-full\",\n  tableClass,\n  tableId = \"myTable\",\n  rounded = false,\n  searchBG = \"bg-gray-200\",\n  thColor = \"blue\",\n  loading = false,\n}) => {\n  const startPage = 1;\n  tableId = tableId === \"myTable\" ? FC_makeID() : tableId;\n  let table: HTMLElement, tr: HTMLCollectionOf<HTMLTableRowElement>;\n  const [totalItems, setTotalItems] = useState<number>(0);\n  const [totalPages, setTotalPages] = useState<number>(1);\n  const [currentPage, setCurrentPage] = useState<number>(1);\n  const [pages, setPages] = useState<number[]>();\n  const [pageSize, setPageSize] = useState<number>(10);\n  const [startIndex, setStartIndex] = useState<number>(0);\n  const [endIndex, setEndIndex] = useState<number>(0);\n\n  useEffect(() => {\n    pagination && tablePagination();\n  });\n\n  const filterTable = (\n    data: string,\n    filterType?: \"default\" | \"field\"\n  ): void => {\n    var filter, tr, td, rows: number, cols: number, txtValue;\n    if (filterType === \"field\" && data === \"all\") data = \"\";\n    filter = data.toLowerCase();\n    table = document.getElementById(tableId)!;\n    tr = table.getElementsByTagName(\"tr\");\n    for (rows = 0; rows < tr.length; rows++) {\n      for (cols = 0; cols < columns.length; cols++) {\n        td = tr[rows].getElementsByTagName(\"td\")[cols];\n        if (td) {\n          txtValue = td.textContent || td.innerText;\n          if (txtValue.toLowerCase().indexOf(filter) > -1) {\n            tr[rows].style.display = \"\";\n            break;\n          } else {\n            tr[rows].style.display = \"none\";\n          }\n        }\n      }\n    }\n  };\n\n  const tablePagination = (): void => {\n    table = document.getElementById(tableId)!;\n    tr = table.getElementsByTagName(\"tr\");\n    setTotalItems(tr.length);\n    setTotalPages(Math.ceil(totalItems / pageSize));\n\n    // calculate start and end item indexes on the current page\n    setStartIndex((currentPage - 1) * pageSize);\n    setEndIndex(Math.min(startIndex + pageSize - 1, totalItems - 1));\n\n    /**\n     * TODO!\n     * There is a problem with this condition\n     */\n    let _pages = Array.from(Array(totalPages + 1 - startPage).keys()).map(\n      (i) => startPage + i\n    );\n    if (!pages || _pages.length !== pages.length) {\n      setPages(_pages);\n    }\n\n    for (let i: number = 0; i < tr.length; i++) {\n      if (i >= startIndex && i <= endIndex) {\n        tr[i].style.display = \"\";\n      } else {\n        tr[i].style.display = \"none\";\n      }\n    }\n  };\n\n  return (\n    <div className={`${tableSize}`}>\n      {/* search box  */}\n      {search && (\n        <div className={`${searchBG} w-full mb-2`}>\n          {search && (\n            <div className=\"bg-white rounded flex items-center w-full p-2 border-2 border-gray-500\">\n              <MdSearch className=\"h-5 w-5 fill-current text-gray-400\" />\n              <input\n                type=\"search\"\n                placeholder=\"search\"\n                onChange={(e) => filterTable(e.target.value)}\n                className=\"w-full h-6 pl-4 text-sm outline-none focus:outline-none bg-white\"\n                disabled={loading}\n              />\n\n              {pagination && (\n                <div className=\"select\">\n                  <select\n                    className=\"text-base outline-none focus:outline-none bg-white\"\n                    onChange={(e) => setPageSize(Number(e.target.value))}\n                    disabled={loading}\n                  >\n                    <option value=\"10\">10</option>\n                    <option value=\"25\">25</option>\n                    <option value=\"50\">50</option>\n                    <option value=\"100\">100</option>\n                  </select>\n                </div>\n              )}\n            </div>\n          )}\n        </div>\n      )}\n      <table\n        className={\n          tableClass\n            ? tableClass\n            : `w-full shadow ${\n                rounded && \"sm:rounded-lg\"\n              } table-auto order-table`\n        }\n        id={tableId}\n      >\n        {!hideColumns && (\n          <thead className=\"bg-white border-b-2 border-gray-300 text-gray-600 font-bold text-base\">\n            <tr\n              className={`text-left tracking-wide bg-${thColor}-100 border-b-2 border-${thColor}-500 text-${thColor}-600`}\n            >\n              {columns.map((column, index) => (\n                <th\n                  key={index}\n                  className={`${column.padding} text-${\n                    column.alignText\n                  } px-3 py-2 ${column.isSortAllowed && \"cursor-pointer\"}`}\n                  onClick={() =>\n                    column.isSortAllowed && sortThisColumn(tableId, index)\n                  }\n                >\n                  <div className=\"flex items-center gap-1\">\n                    {column.columnTitle}\n                    {column.isSortAllowed && <BiSort />}\n                  </div>\n                </th>\n              ))}\n            </tr>\n          </thead>\n        )}\n        <tbody id=\"table-data\" className=\"bg-white text-black text-base\">\n          {rows()}\n        </tbody>\n      </table>\n      {pagination && (\n        <div className=\"sm:flex-1 sm:flex sm:items-center sm:justify-between mt-4 work-sans\">\n          <div>\n            <span className=\"text-xs xs:text-sm text-gray-900\">\n              Showing 1 to {pageSize} of {totalItems - 1} Entries\n            </span>\n          </div>\n          <div>\n            <nav className=\"inline-flex shadow-sm\">\n              <div>\n                <button\n                  type=\"button\"\n                  className={`inline-flex items-center px-2 py-2 rounded-l-md border border-gray-300 text-sm font-medium text-gray-500 ${\n                    currentPage !== 1 && \"bg-white\"\n                  }`}\n                  aria-label=\"Previous\"\n                  disabled={currentPage === 1 || loading}\n                  onClick={() => setCurrentPage(currentPage - 1)}\n                >\n                  <MdNavigateBefore className=\"h-5 w-5\" />\n                </button>\n              </div>\n              <div>\n                {pages &&\n                  pages.map((page, pageIndex) => (\n                    <button\n                      key={pageIndex}\n                      className={`-ml-px inline-flex items-center px-4 py-2 border border-gray-300 text-sm font-medium text-gray-700 ${\n                        page !== currentPage\n                          ? \"bg-white\"\n                          : \"bg-gray-100 cursor-default\"\n                      }`}\n                      disabled={page === currentPage || loading}\n                      onClick={() => setCurrentPage(page)}\n                    >\n                      {page}\n                    </button>\n                  ))}\n              </div>\n              <div>\n                <button\n                  type=\"button\"\n                  className={`inline-flex items-center px-2 py-2 rounded-r-md border border-gray-300 text-sm leading-5 font-medium text-gray-500 ${\n                    currentPage !== totalPages && \"bg-white\"\n                  }`}\n                  aria-label=\"Next\"\n                  disabled={currentPage === totalPages || loading}\n                  onClick={() => setCurrentPage(currentPage + 1)}\n                >\n                  <MdNavigateNext className=\"h-5 w-5\" />\n                </button>\n              </div>\n            </nav>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default Table;\n","import React, { FC, ReactElement, ReactNode } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Auth, System } from \"../../actions\";\nimport { StoreState } from \"../../reducers\";\nimport { NavToogle, PageHasSubNav } from \"../../actions\";\nimport { MdBrightness1, MdSearch } from \"react-icons/md\";\n\n// props for the component\ninterface AppProps {\n  auth: Auth;\n  system: System;\n  PageHasSubNav: Function;\n  NavToogle: Function;\n  children: ReactNode;\n}\n//\ninterface AppState {\n  loading: boolean;\n}\n\nclass _SideNavigation extends React.Component<AppProps, AppState> {\n  constructor(props: AppProps) {\n    super(props);\n\n    this.state = {\n      loading: false,\n    };\n  }\n\n  componentDidMount = () => this.props.PageHasSubNav(true);\n  componentWillUnmount = () => this.props.PageHasSubNav(false);\n\n  render() {\n    const isAuthenticated = this.props.auth.isAuthenticated;\n\n    if (isAuthenticated === false) {\n      return null;\n    }\n\n    const navActive = this.props.system.navigation;\n    return (\n      <div\n        className={`fixed w-48 p-1 pr-2 pl-6 text-gray-700 bg-white ${\n          navActive === true ? \"lg:left-16  left-16\" : \" -left-72 lg:left-16\"\n        }  top-0 bottom-0 pt-20 z-30 shadow-lg  transition-all duration-500 ease-in-out overflow-y-auto`}\n      >\n        {this.props.children}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = ({\n  auth,\n  system,\n}: StoreState): { auth: Auth; system: System } => {\n  return { auth: auth, system: system };\n};\n\nexport const SideNavigation = connect(mapStateToProps, {\n  NavToogle,\n  PageHasSubNav,\n})(_SideNavigation);\n\n//************************************ FORM SEARCH **************************************** */\n\ntype SearchComponentInterface = {\n  data: any[];\n};\n\nexport const Search: FC<SearchComponentInterface> = ({\n  data,\n}): ReactElement => {\n  return (\n    <div className=\"m-1 rounded-md shadow-md border border-blue-400 bg-white p-1 flex \">\n      <label htmlFor=\"search-text\" className=\"inline-block text-2xl\">\n        <MdSearch className=\"inline-block text-blue-400\" />\n      </label>\n      <input\n        type=\"search\"\n        className=\"outline-none bg-transparent flex-1 pl-1\"\n        placeholder=\"Search\"\n        id=\"search-text\"\n      />\n    </div>\n  );\n};\n\n//************************************ FORM SEARCH **************************************** */\n\ntype MainItemComponentInterface = {\n  title: string;\n  icon?: any;\n  active?: boolean;\n  count?: number;\n};\n\n/**\n *\n * @param param0\n * @returns\n */\nexport const MainItem: FC<MainItemComponentInterface> = ({\n  title = \"\",\n  icon = MdBrightness1,\n  active = false,\n  count = 0,\n}): ReactElement => {\n  const IconDefined = icon;\n  return (\n    <section\n      className={`${\n        active === true\n          ? \"bg-blue-500 text-white font-bold\"\n          : \"bg-blue-100 text-blue-800\"\n      } mb-1 hover:font-bold py-1 hover:bg-blue-400 hover:text-white --font-bold  px-2 rounded-md flex cursor-pointer items-center`}\n    >\n      <section className=\"flex-1\">\n        <IconDefined className=\"inline-block mr-1 text-xs\" />\n        <span>{title}</span>\n      </section>\n\n      {count > 0 ? (\n        <span className=\"px-0.5 my-1 text-xs bg-blue-600 text-white rounded-full\">\n          {count}\n        </span>\n      ) : null}\n    </section>\n  );\n};\n\n//************************************ FORM SEARCH **************************************** */\n\ntype SubItemContainerComponentInterface = {\n  children: ReactNode;\n};\n\n/**\n *\n * @param param0\n * @returns\n */\nexport const SubItemContainer: FC<SubItemContainerComponentInterface> = ({\n  children,\n}): ReactElement => {\n  return (\n    <div className=\"ml-3 overflow-y-auto border-l-2 border-blue-200 -mt-1 pt-2 mb-2 pl-1 cursor-pointer\">\n      {children}\n    </div>\n  );\n};\n\n//************************************ FORM SEARCH **************************************** */\n\ntype SubItemComponentInterface = {\n  title: string;\n  icon?: any;\n  active?: boolean;\n  count?: number;\n};\n\n/**\n *\n * @param param0\n * @returns\n * @important Remenber to use these components inside the <SubItemContainer>...</SubItemContainer>\n */\nexport const SubItem: FC<SubItemComponentInterface> = ({\n  title = \"\",\n  icon = MdBrightness1,\n  active = false,\n  count = 0,\n}): ReactElement => {\n  const IconDefined = icon;\n\n  return (\n    <div\n      className={`animate__animated animate__zoomIn animate__faster ${\n        active === true ? \"bg-blue-500 text-white font-bold\" : \" text-blue-800\"\n      } text-blue-800 bg-blue-200 rounded-md px-1 mb-1 flex items-center py-1 font-bold`}\n    >\n      <IconDefined\n        className={`inline-block mr-0.1 text-xs ${\n          active === true ? \"text-white\" : \"\"\n        }`}\n      />\n      <span\n        className={`inline-block pl-1 ${active === true ? \"text-white\" : \"\"}`}\n      >\n        {title}\n      </span>\n      {count >= 1 ? (\n        <span\n          className={`text-sm fint-bold ${active === true ? \"text-white\" : \"\"}`}\n        >\n          {count}\n        </span>\n      ) : null}\n    </div>\n  );\n};\n","import axios from \"axios\";\nimport { Dispatch } from \"redux\";\nimport { ActionTypes } from \"./types\";\nimport { API } from \"../utils/api\";\nimport { setAxiosToken } from \"../utils/AxiosToken\";\nimport { errorToText } from \"../utils/errors\";\nimport { CategorySubcategoryData } from \"../interfaces/candidatesInterfaces\";\nimport {\n  allClaimApplicationInterface,\n  CandidateClaimInterface,\n  claimApplicationsInterface,\n  ClaimTypesInterfaceAPI,\n  PlansTypeKeys,\n} from \"../interfaces\";\n\nexport interface DocumentClaimUser {\n  category_id: string;\n  company: string;\n  description: string;\n  email: string;\n  end_year: string;\n  files: string;\n  names: string;\n  phone_number: string;\n  school: {\n    school_name: string;\n    _id: string;\n    status: boolean;\n    education_category_id?: {\n      education_category_title: string;\n      _id: string;\n    };\n    district_id?: {\n      district_name: string;\n      _id: string;\n    };\n  } | null;\n  school_id: string;\n  start_year: string;\n  sub_category_id: string;\n  title: string;\n  year: string;\n  validation_status: string;\n  validated_by: {\n    user_id: string;\n    comment: string;\n    validation_status: string;\n    date: string;\n  };\n  doc_id: string;\n  category_subcategory_data: CategorySubcategoryData | null;\n}\n\n/**\n * * ****************************** INTERFACES *****************************\n */\n\n// CANDIDATE_APPLICATIONS\nexport interface GetCandidateApplicationsAction {\n  type: ActionTypes.GET_CANDIDATES_APPLICATIONS;\n  payload: claimApplicationsInterface[];\n}\n\n// CREATE PERSONAL CLAIM\nexport interface CreateClaimAction {\n  type: ActionTypes.CREATE_CLAIM;\n  payload: CandidateClaimInterface;\n}\n\n// EVALUATE CANDIDATE CLAIM\nexport interface EvaluateClaimAction {\n  type: ActionTypes.EVALUATE_CLAIM;\n  payload: CandidateClaimInterface;\n}\n\n// CREATE PERSONAL CLAIM\nexport interface CreateReClaimAction {\n  type: ActionTypes.RE_CLAIM;\n  payload: CandidateClaimInterface;\n}\n\n// CANDIDATE_DOCUMENTS\nexport interface GetCandidateDocumentsAction {\n  type: ActionTypes.GET_CANDIDATES_DOCUMENTS;\n  payload: DocumentClaimUser[];\n}\n\n// CLAIM TYPES =====================================\nexport interface GetClaimingTypesAction {\n  type: ActionTypes.GET_CLAIMING_TYPES;\n  payload: ClaimTypesInterfaceAPI[];\n}\n\n// SET CLAIM TYPE =====================================\nexport interface setSelectedClaimTypeActions {\n  type: ActionTypes.SELECT_CLAIM_TYPE;\n  payload: PlansTypeKeys | \"all\";\n}\n\n// MY PERSONAL CLAIMS\nexport interface GetMyClaimsAction {\n  type: ActionTypes.GET_MY_CLAIMS;\n  payload: CandidateClaimInterface[];\n}\n\n// ALL CANDIDATES CLAIMS\nexport interface GetAllClaimsAction {\n  type: ActionTypes.GET_ALL_CLAIMS;\n  payload: CandidateClaimInterface[];\n}\n\n// GET ALL APPLICATIONS BY PERIOD\nexport interface GetAllApplicationsAction {\n  type: ActionTypes.GET_ALL_APPLICATION;\n  payload: allClaimApplicationInterface[];\n}\n\nexport type ClaimingActionType =\n  | GetCandidateApplicationsAction\n  | GetCandidateDocumentsAction\n  | GetClaimingTypesAction\n  | setSelectedClaimTypeActions\n  | CreateClaimAction\n  | GetMyClaimsAction\n  | GetAllClaimsAction\n  | EvaluateClaimAction\n  | CreateReClaimAction\n  | GetAllApplicationsAction;\n\n/**\n * * ****************************** ACTIONS *****************************\n */\n\n// CLAIM TYPES ==========================\nexport const GetClaimingTypes = (callback: Function) => {\n  callback(true, \"\");\n  return async (dispatch: Dispatch) => {\n    try {\n      setAxiosToken();\n      const res = await axios.get<ClaimTypesInterfaceAPI[]>(\n        `${API.CLAIMING}/claim-type`\n      );\n      console.log({ claimtYPES: res.data });\n      let claim_types: ClaimTypesInterfaceAPI[] = [];\n      if (res.status === 200) {\n        // setApplications(res.data);\n        if (res.data !== null && res.data.length > 0) {\n          claim_types = res.data;\n        }\n      }\n      dispatch<GetClaimingTypesAction>({\n        type: ActionTypes.GET_CLAIMING_TYPES,\n        payload: claim_types,\n      });\n      callback(false, \"\");\n    } catch (error) {\n      console.error({ error: errorToText(error) });\n      callback(false, errorToText(error));\n    }\n  };\n};\n\n// SELECT CLAIM TYPES ==========================\nexport const setSelectedClaimType = (\n  thisType: PlansTypeKeys | \"all\"\n): setSelectedClaimTypeActions => {\n  console.log({ thisType });\n  return {\n    type: ActionTypes.SELECT_CLAIM_TYPE,\n    payload: thisType,\n  };\n};\n\n// CREATE PERSONAL CLAIM\nexport const createClaim = (data: CandidateClaimInterface) => {\n  return {\n    type: ActionTypes.CREATE_CLAIM,\n    payload: data,\n  };\n};\n\n// CREATE PERSONAL RECLAIM\nexport const createReClaim = (data: CandidateClaimInterface) => {\n  return {\n    type: ActionTypes.RE_CLAIM,\n    payload: data,\n  };\n};\n\n// EVALUATE CANDIDATE CLAIM\nexport const evaluateClaim = (data: CandidateClaimInterface) => {\n  return {\n    type: ActionTypes.EVALUATE_CLAIM,\n    payload: data,\n  };\n};\n\n// MY PERSONAL CLAIMS\nexport const getMyClaims = (\n  user_id: string,\n  period_id: string,\n  callback: Function,\n  order: \"desc\" | \"asc\" = \"desc\",\n  sortBy: \"createdAt\" | \"last_claim_status\" = \"createdAt\"\n) => {\n  console.log({ user_id, period_id });\n  return async (dispatch: Dispatch) => {\n    callback(true, \"\");\n    try {\n      setAxiosToken();\n      const res = await axios.post<CandidateClaimInterface[]>(\n        `${API.CLAIMING}/user`,\n        {\n          order,\n          sortBy,\n          filter: {\n            user: user_id,\n            period_id,\n          },\n        }\n      );\n      console.log({ api_claim: res.data });\n\n      dispatch<GetMyClaimsAction>({\n        type: ActionTypes.GET_MY_CLAIMS,\n        payload: res.data,\n      });\n      callback(false, \"\");\n    } catch (error) {\n      console.error(error);\n      callback(false, errorToText(error));\n    }\n  };\n};\n\n// PERSONAL APPLICATION\nexport const getMyRejectedApplications = (\n  user_id: string,\n  callback: Function\n) => {\n  callback(true, \"\");\n  return async (dispatch: Dispatch) => {\n    try {\n      setAxiosToken();\n      const res = await axios.get<claimApplicationsInterface[]>(\n        `${API.APPLICATION}/application/${user_id}`\n      );\n      console.log({ claimPersonalApplication: res.data });\n      let application: claimApplicationsInterface[] = res.data;\n      // if (res.status === 200) {\n      //   // setApplications(res.data);\n      //   if (res.data !== null && res.data.length > 0) {\n      //     let dataRejected: claimApplicationsInterface[] = [];\n      //     for (const key in res.data) {\n      //       if (res.data[key].application_status === \"rejected\") {\n      //         dataRejected.push(res.data[key]);\n      //       }\n      //     }\n      //     application = dataRejected;\n      //   }\n      // }\n      dispatch<GetCandidateApplicationsAction>({\n        type: ActionTypes.GET_CANDIDATES_APPLICATIONS,\n        payload: application,\n      });\n      callback(false, \"\");\n    } catch (error) {\n      console.error(error);\n      callback(false, errorToText(error));\n    }\n  };\n};\n\n// PERSONAL APPLICATION\nexport const getMyRejectedDocuments = (callback: Function) => {\n  callback(true, \"\");\n  return async (dispatch: Dispatch) => {\n    try {\n      setAxiosToken();\n      const res = await axios.get<{\n        n_id: string;\n        fname: string;\n        lname: string;\n        district: string;\n        phone_number: string;\n        email: string;\n        details: DocumentClaimUser[];\n      }>(`${API.AUTH}/currentdet`);\n      console.log({ claimPersonalDocuments: res.data });\n      let details: DocumentClaimUser[] = [];\n      if (res.status === 200) {\n        // setApplications(res.data);\n        if (res.data !== null && res.data.details.length > 0) {\n          let dataRejected: DocumentClaimUser[] = [];\n          for (const key in res.data.details) {\n            if (res.data.details[key].validation_status !== \"waiting\") {\n              dataRejected.push(res.data.details[key]);\n            }\n          }\n          details = dataRejected;\n        }\n      }\n      console.log({ claimPersonalDocumentDetails: details });\n\n      dispatch<GetCandidateDocumentsAction>({\n        type: ActionTypes.GET_CANDIDATES_DOCUMENTS,\n        payload: details,\n      });\n      callback(false, \"\");\n    } catch (error) {\n      console.error(error);\n      callback(false, errorToText(error));\n    }\n  };\n};\n\n// GET ALL CLAIM\nexport const getAllClaims = (\n  claim_level: number,\n  period_id: string,\n  callback: Function,\n  order: \"desc\" | \"asc\" = \"desc\",\n  sortBy: \"createdAt\" | \"last_claim_status\" = \"createdAt\"\n) => {\n  return async (dispatch: Dispatch) => {\n    callback(true, \"\");\n    try {\n      setAxiosToken();\n      const res = await axios.post<CandidateClaimInterface[]>(\n        `${API.CLAIMING}/user`,\n        {\n          order,\n          sortBy,\n          filter: {\n            claim_level: 2,\n            period_id,\n          },\n        }\n      );\n      console.log({ api_claim: res.data });\n\n      dispatch<GetAllClaimsAction>({\n        type: ActionTypes.GET_ALL_CLAIMS,\n        payload: res.data,\n      });\n      callback(false, \"\");\n    } catch (error) {\n      console.error(error);\n      callback(false, errorToText(error));\n    }\n  };\n};\n\nexport const getAllApplications = (period_id: string, callback: Function) => {\n  return async (dispatch: Dispatch) => {\n    callback(true, \"\");\n    try {\n      setAxiosToken();\n      const res = await axios.get<allClaimApplicationInterface[]>(\n        `${API.APPLICATION}/applicationbyperiod/${period_id}`\n      );\n      console.log({ api_claim: res.data });\n\n      dispatch<GetAllApplicationsAction>({\n        type: ActionTypes.GET_ALL_APPLICATION,\n        payload: res.data,\n      });\n      callback(false, \"\");\n    } catch (error) {\n      console.error(error);\n      callback(false, errorToText(error));\n    }\n  };\n};\n","import axios from \"axios\";\nimport { Dispatch } from \"redux\";\nimport { ActionTypes } from \"./types\";\nimport { API } from \"../utils/api\";\nimport { setAxiosToken } from \"../utils/AxiosToken\";\nimport { errorToText } from \"../utils/errors\";\nimport { PlansTypeInterface, SessionPlanInterface } from \"../interfaces\";\n\n/**\n * * ****************************** INTERFACES *****************************\n */\n\n// GET ACTIVE PLAN TYPES\nexport interface GetPlansTypesAction {\n  type: ActionTypes.GET_PLANS_TYPES;\n  payload: PlansTypeInterface[];\n}\n\n// GET INACTIVE PLAN TYPES\nexport interface GetDeletedPlansTypesAction {\n  type: ActionTypes.GET_DELETED_PLANS_TYPES;\n  payload: PlansTypeInterface[];\n}\n\n// CREATE PLAN TYPE\nexport interface CreatePlansTypeAction {\n  type: ActionTypes.CREATE_PLAN_TYPE;\n  payload: PlansTypeInterface;\n}\n\n// UPDATE PLAN TYPE\nexport interface UpdatePlansTypeAction {\n  type: ActionTypes.UPDATE_PLAN_TYPE;\n  payload: PlansTypeInterface;\n}\n\n// DELETE PLAN TYPE\nexport interface DeletePlansTypeAction {\n  type: ActionTypes.DELETE_PLAN_TYPE;\n  payload: PlansTypeInterface;\n}\n\n// SET PLAN TYPE =====================================\nexport interface setSelectedPlanTypeActions {\n  type: ActionTypes.SELECT_PLAN_TYPE;\n  payload: PlansTypeInterface | \"all\";\n}\n\n// GET ALL SESSION PLAN\nexport interface GetAllSessionPlansAction {\n  type: ActionTypes.GET_ALL_SESSION_PLANS;\n  payload: SessionPlanInterface[];\n}\n\n// GET ACTIVE SESSION PLAN\nexport interface GetActiveSessionPlanAction {\n  type: ActionTypes.GET_ACTIVE_SESSION_PLANS;\n  payload: SessionPlanInterface | \"none\";\n}\n\n// CREATE SESSION PLAN\nexport interface CreateSessionPlansAction {\n  type: ActionTypes.CREATE_SESSION_PLAN;\n  payload: SessionPlanInterface;\n}\n\n// UPDATE SESSION PLAN\nexport interface UpdateSessionPlansAction {\n  type: ActionTypes.UPDATE_SESSION_PLAN;\n  payload: SessionPlanInterface;\n}\n\n// ACTIVATE SESSION PLAN\nexport interface ActivateSessionPlansAction {\n  type: ActionTypes.SESSION_ACTIVATION;\n  payload: SessionPlanInterface;\n}\n\n// DELETE SESSION PLAN\nexport interface DeleteSessionPlanAction {\n  type: ActionTypes.DELETE_SESSION_PLAN;\n  payload: string;\n}\n\nexport type SessionActionType =\n  | GetPlansTypesAction\n  | GetDeletedPlansTypesAction\n  | CreatePlansTypeAction\n  | UpdatePlansTypeAction\n  | DeletePlansTypeAction\n  | GetAllSessionPlansAction\n  | GetActiveSessionPlanAction\n  | CreateSessionPlansAction\n  | UpdateSessionPlansAction\n  | ActivateSessionPlansAction\n  | DeleteSessionPlanAction\n  | setSelectedPlanTypeActions;\n\n/**\n * * ****************************** ACTIONS *****************************\n */\n\n// GET ACTIVE PLAN TYPES ==========================\nexport const GetPlansTypes = (callback: Function) => {\n  callback(true, \"\");\n  return async (dispatch: Dispatch) => {\n    try {\n      setAxiosToken();\n      const res = await axios.get<PlansTypeInterface[]>(\n        `${API.CLAIMING}/session-type`\n      );\n      console.log({ GET_PLANS_TYPES: res.data });\n      let plan_types: PlansTypeInterface[] = [];\n      if (res.status === 200) {\n        // setApplications(res.data);\n        if (res.data !== null && res.data.length > 0) {\n          plan_types = res.data;\n        }\n      }\n      dispatch<GetPlansTypesAction>({\n        type: ActionTypes.GET_PLANS_TYPES,\n        payload: plan_types,\n      });\n      callback(false, \"\");\n    } catch (error) {\n      console.error({ error: errorToText(error) });\n      callback(false, errorToText(error));\n    }\n  };\n};\n\n// GET ACTIVE PLAN TYPES ==========================\nexport const GetDeletedPlansTypes = (callback: Function) => {\n  callback(true, \"\");\n  return async (dispatch: Dispatch) => {\n    try {\n      setAxiosToken();\n      const res = await axios.get<PlansTypeInterface[]>(\n        `${API.CLAIMING}/session-type/deleted`\n      );\n      console.log({ GET_DELETED_PLANS_TYPES: res.data });\n      let plan_types: PlansTypeInterface[] = [];\n      if (res.status === 200) {\n        // setApplications(res.data);\n        if (res.data !== null && res.data.length > 0) {\n          plan_types = res.data;\n        }\n      }\n      dispatch<GetDeletedPlansTypesAction>({\n        type: ActionTypes.GET_DELETED_PLANS_TYPES,\n        payload: plan_types,\n      });\n      callback(false, \"\");\n    } catch (error) {\n      console.error({ error: errorToText(error) });\n      callback(false, errorToText(error));\n    }\n  };\n};\n\n// CREATE PLAN TYPE\nexport const createPlanType = (\n  data: PlansTypeInterface\n): CreatePlansTypeAction => {\n  return {\n    type: ActionTypes.CREATE_PLAN_TYPE,\n    payload: data,\n  };\n};\n\n// UPDATE PLAN TYPE\nexport const updatePlanType = (\n  data: PlansTypeInterface\n): UpdatePlansTypeAction => {\n  return {\n    type: ActionTypes.UPDATE_PLAN_TYPE,\n    payload: data,\n  };\n};\n\n// DELETE PLAN TYPE\nexport const deletePlanType = (\n  data: PlansTypeInterface\n): DeletePlansTypeAction => {\n  return {\n    type: ActionTypes.DELETE_PLAN_TYPE,\n    payload: data,\n  };\n};\n\n// SELECT PLAN TYPES ==========================\nexport const setSelectedPlanType = (\n  thisType: PlansTypeInterface | \"all\"\n): setSelectedPlanTypeActions => {\n  console.log({ thisType });\n  return {\n    type: ActionTypes.SELECT_PLAN_TYPE,\n    payload: thisType,\n  };\n};\n\n// GET ACTIVE PLAN TYPES ==========================\nexport const getActiveSessionPlan = (callback: Function) => {\n  callback(true, \"\");\n  return async (dispatch: Dispatch) => {\n    try {\n      setAxiosToken();\n      const res = await axios.get<SessionPlanInterface>(\n        `${API.CLAIMING}/session/active/`\n      );\n      console.log({ GET_ACTIVE_SESSION_PLANS: res.data });\n      let session_plan: SessionPlanInterface | undefined = undefined;\n      // if (res.status === 200) {\n      //   // setApplications(res.data);\n      // }\n      if (res.data && res.data.is_active !== undefined) {\n        session_plan = res.data;\n      }\n      console.log({ session_plan: res.data });\n\n      dispatch<GetActiveSessionPlanAction>({\n        type: ActionTypes.GET_ACTIVE_SESSION_PLANS,\n        payload: session_plan ? session_plan : \"none\",\n      });\n      callback(false, \"\", session_plan ? session_plan : \"none\");\n    } catch (error) {\n      console.error({ error: errorToText(error) });\n      callback(false, errorToText(error));\n    }\n  };\n};\n\n// GET ALL PLAN TYPES ==========================\nexport const GetAllSessionPlans = (callback: Function) => {\n  callback(true, \"\");\n  return async (dispatch: Dispatch) => {\n    try {\n      setAxiosToken();\n      const res = await axios.get<SessionPlanInterface[]>(\n        `${API.CLAIMING}/session/`\n      );\n      console.log({ GET_ALL_SESSION_PLANS: res.data });\n      let session_data: SessionPlanInterface[] = [];\n      if (res.status === 200) {\n        // setApplications(res.data);\n        if (res.data !== null && res.data.length > 0) {\n          session_data = res.data;\n        }\n      }\n      dispatch<GetAllSessionPlansAction>({\n        type: ActionTypes.GET_ALL_SESSION_PLANS,\n        payload: session_data,\n      });\n      callback(false, \"\", session_data);\n    } catch (error) {\n      console.error({ error: errorToText(error) });\n      callback(false, errorToText(error));\n    }\n  };\n};\n\n// CREATE SESSION PLAN\nexport const createSessionPlan = (\n  data: SessionPlanInterface\n): CreateSessionPlansAction => {\n  return {\n    type: ActionTypes.CREATE_SESSION_PLAN,\n    payload: data,\n  };\n};\n\n// UPDATE SESSION PLAN\nexport const updateSessionPlan = (\n  data: SessionPlanInterface\n): UpdateSessionPlansAction => {\n  return {\n    type: ActionTypes.UPDATE_SESSION_PLAN,\n    payload: data,\n  };\n};\n\n// ACTIVATE SESSION PLAN\nexport const sessionActivation = (\n  data: SessionPlanInterface\n): ActivateSessionPlansAction => {\n  return {\n    type: ActionTypes.SESSION_ACTIVATION,\n    payload: data,\n  };\n};\n\n// DELETE SESSION PLAN\nexport const deleteSessionPlan = (data: string): DeleteSessionPlanAction => {\n  return {\n    type: ActionTypes.DELETE_SESSION_PLAN,\n    payload: data,\n  };\n};\n","import axios from \"axios\";\nimport { Dispatch } from \"redux\";\nimport { ActionTypes } from \"./types\";\nimport {\n  CandidatesInterface,\n  DocumentCategoryInterface,\n  DocumentFieldsInterface,\n  DocumentSubCategoryInterface,\n} from \"../shared/interfaces\";\nimport { API } from \"../utils/api\";\nimport { setAxiosToken } from \"../utils/AxiosToken\";\nimport { errorToText } from \"../utils/errors\";\nimport { VerifyDocumentInterface } from \"./users\";\n\n/**\n * * ****************************** INTERFACES *****************************\n */\n\n// CATEGORY\nexport interface GetDocumentCategoryAction {\n  type: ActionTypes.GET_DOCUMENT_CATEGORY;\n  payload: DocumentCategoryInterface[];\n}\n\nexport interface CreateDocumentCategoryAction {\n  type: ActionTypes.CREATE_DOCUMENT_CATEGORY;\n  payload: DocumentCategoryInterface;\n}\n\nexport interface UpdateDocumentCategoryAction {\n  type: ActionTypes.UPDATE_DOCUMENT_CATEGORY;\n  payload: DocumentCategoryInterface;\n}\n\nexport interface DeleteDocumentCategoryAction {\n  type: ActionTypes.DELETE_DOCUMENT_CATEGORY;\n  payload: string;\n}\n\n// SUB CATEGORY\nexport interface GetDocumentSubCategoryAction {\n  type: ActionTypes.GET_DOCUMENT_SUB_CATEGORY;\n  payload: DocumentSubCategoryInterface[];\n}\n\nexport interface CreateDocumentSubCategoryAction {\n  type: ActionTypes.CREATE_DOCUMENT_SUB_CATEGORY;\n  payload: DocumentSubCategoryInterface;\n}\n\nexport interface UpdateDocumentSubCategoryAction {\n  type: ActionTypes.UPDATE_DOCUMENT_SUB_CATEGORY;\n  payload: DocumentSubCategoryInterface;\n}\n\nexport interface DeleteDocumentSubCategoryAction {\n  type: ActionTypes.DELETE_DOCUMENT_SUB_CATEGORY;\n  payload: string;\n}\n\n// FIELDS\nexport interface GetDocumentFieldsAction {\n  type: ActionTypes.GET_DOCUMENT_FIELDS;\n  payload: DocumentFieldsInterface[];\n}\n\nexport interface CreateDocumentFieldsAction {\n  type: ActionTypes.CREATE_DOCUMENT_FIELDS;\n  payload: DocumentFieldsInterface;\n}\n\nexport interface UpdateDocumentFieldsAction {\n  type: ActionTypes.UPDATE_DOCUMENT_FIELDS;\n  payload: DocumentFieldsInterface;\n}\n\nexport interface DeleteDocumentFieldsAction {\n  type: ActionTypes.DELETE_DOCUMENT_FIELDS;\n  payload: string;\n}\n\n// DOCUMENT CHECKING\nexport interface GetCandidatesInInstituteAtion {\n  type: ActionTypes.GET_CANDIDATE_IN_INSTITUTE;\n  payload: CandidatesInterface[];\n}\n\ninterface VerifyDocumentAction {\n  type: ActionTypes.VERIFY_DOCUMENT;\n  payload: VerifyDocumentInterface;\n}\n\nexport type DocumentCategoryActionType =\n  | GetDocumentCategoryAction\n  | CreateDocumentCategoryAction\n  | UpdateDocumentCategoryAction\n  | DeleteDocumentCategoryAction\n  | GetDocumentSubCategoryAction\n  | CreateDocumentSubCategoryAction\n  | UpdateDocumentSubCategoryAction\n  | DeleteDocumentSubCategoryAction\n  | GetDocumentFieldsAction\n  | CreateDocumentFieldsAction\n  | UpdateDocumentFieldsAction\n  | DeleteDocumentFieldsAction\n  | GetCandidatesInInstituteAtion\n  | VerifyDocumentAction;\n\n/**\n * * ****************************** ACTIONS *****************************\n */\n\n// CATEGORY\n\nexport const getDocumentCategory = () => {\n  return async (dispatch: Dispatch) => {\n    try {\n      setAxiosToken();\n      const res = await axios.get(`${API.AUTH}/detailcategory`);\n      console.log({ docCategory: res });\n      dispatch<GetDocumentCategoryAction>({\n        type: ActionTypes.GET_DOCUMENT_CATEGORY,\n        payload: res.data,\n      });\n    } catch (error) {\n      console.error({ error: errorToText(error) });\n    }\n  };\n};\n\nexport const createDocumentCategory = (data: DocumentCategoryInterface) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<CreateDocumentCategoryAction>({\n      type: ActionTypes.CREATE_DOCUMENT_CATEGORY,\n      payload: data,\n    });\n  };\n};\n\nexport const updateDocumentCategory = (data: DocumentCategoryInterface) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<UpdateDocumentCategoryAction>({\n      type: ActionTypes.UPDATE_DOCUMENT_CATEGORY,\n      payload: data,\n    });\n  };\n};\n\nexport const deleteDocumentCategory = (data: string) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<DeleteDocumentCategoryAction>({\n      type: ActionTypes.DELETE_DOCUMENT_CATEGORY,\n      payload: data,\n    });\n  };\n};\n\n// SUB CATEGORY\nexport const getDocumentSubCategory = () => {\n  return async (dispatch: Dispatch) => {\n    try {\n      setAxiosToken();\n      const res = await axios.get<DocumentSubCategoryInterface[]>(\n        `${API.AUTH}/detailsubcategory`\n      );\n      console.log({ docSubCategory: res });\n      dispatch<GetDocumentSubCategoryAction>({\n        type: ActionTypes.GET_DOCUMENT_SUB_CATEGORY,\n        payload: res.data,\n        // payload: response.data,\n      });\n    } catch (error) {\n      console.log({ doc_SUB_category_error: error });\n    }\n  };\n};\n\nexport const createDocumentSubCategory = (\n  data: DocumentSubCategoryInterface\n) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<CreateDocumentSubCategoryAction>({\n      type: ActionTypes.CREATE_DOCUMENT_SUB_CATEGORY,\n      payload: data,\n    });\n  };\n};\n\nexport const updateDocumentSubCategory = (\n  data: DocumentSubCategoryInterface\n) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<UpdateDocumentSubCategoryAction>({\n      type: ActionTypes.UPDATE_DOCUMENT_SUB_CATEGORY,\n      payload: data,\n    });\n  };\n};\n\nexport const deleteDocumentSubCategory = (data: string) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<DeleteDocumentSubCategoryAction>({\n      type: ActionTypes.DELETE_DOCUMENT_SUB_CATEGORY,\n      payload: data,\n    });\n  };\n};\n\n// FIELDS\nexport const getDocumentFields = () => {\n  return async (dispatch: Dispatch) => {\n    try {\n      setAxiosToken();\n      const res = await axios.get<DocumentFieldsInterface[]>(\n        `${API.AUTH}/categorysubcatedata`\n      );\n      console.log({ docFields: res });\n      dispatch<GetDocumentFieldsAction>({\n        type: ActionTypes.GET_DOCUMENT_FIELDS,\n        payload: res.data,\n        // payload: response.data,\n      });\n    } catch (error) {\n      console.log({ doc_SUB_category_error: error });\n    }\n  };\n};\n\nexport const createDocumentFields = (data: DocumentFieldsInterface) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<CreateDocumentFieldsAction>({\n      type: ActionTypes.CREATE_DOCUMENT_FIELDS,\n      payload: data,\n    });\n  };\n};\n\nexport const updateDocumentFields = (data: DocumentFieldsInterface) => {\n  console.log({ reducer: data });\n  return async (dispatch: Dispatch) => {\n    dispatch<UpdateDocumentFieldsAction>({\n      type: ActionTypes.UPDATE_DOCUMENT_FIELDS,\n      payload: data,\n    });\n  };\n};\n\nexport const deleteDocumentFields = (data: string) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<DeleteDocumentFieldsAction>({\n      type: ActionTypes.DELETE_DOCUMENT_FIELDS,\n      payload: data,\n    });\n  };\n};\n\n// CANDIDATE IN EDUCATION CATEGORY\nexport const getCandidatesInInstitute = (\n  educatin_type_id: string,\n  callback: Function\n) => {\n  console.log({\n    url: `${API.APPLICATION}/educationtypeuserdocs/${educatin_type_id}`,\n  });\n  return async (dispatch: Dispatch) => {\n    callback(true, \"\", null);\n    try {\n      setAxiosToken();\n      const res = await axios.get<CandidatesInterface[]>(\n        `${API.APPLICATION}/educationtypeuserdocs/${educatin_type_id}`\n      );\n      const newArray: CandidatesInterface[] = res.data.filter((element) => {\n        return element !== null && element !== undefined;\n      });\n      console.log({ getCandidatesInInstitute: res, newArray });\n      dispatch<GetCandidatesInInstituteAtion>({\n        type: ActionTypes.GET_CANDIDATE_IN_INSTITUTE,\n        payload: newArray,\n        // payload: response.data,\n      });\n      callback(false, \"\", newArray);\n    } catch (error) {\n      console.log({ getCandidatesInInstitute: error });\n      callback(false, errorToText(error), null);\n    }\n  };\n};\n\nexport const verifyDocument = (data: VerifyDocumentInterface) => {\n  console.log({ action_verify: data });\n  return async (dispatch: Dispatch) => {\n    dispatch<VerifyDocumentAction>({\n      type: ActionTypes.VERIFY_DOCUMENT,\n      payload: data,\n    });\n  };\n};\n","import axios from \"axios\";\nimport { Dispatch } from \"redux\";\nimport { ActionTypes } from \"./types\";\nimport {\n  ApplicationSessionInterface,\n  SystemSettingsInterface,\n} from \"../shared/interfaces\";\nimport { API } from \"../utils/api\";\nimport { setAxiosToken } from \"../utils/AxiosToken\";\nimport { errorToText } from \"../utils/errors\";\nimport { PositionAPI } from \"../interfaces/position\";\n\n/**\n * * ****************************** INTERFACES *****************************\n */\n\n// SYSTEM SETTINGS  ==============\nexport interface GetSystemSettingsAction {\n  type: ActionTypes.GET_SYSTEM_SETTINGS;\n  payload: SystemSettingsInterface[];\n}\n\nexport interface DisableSystemSettingsAction {\n  type: ActionTypes.DISABLE_SYSTEM_SETTINGS;\n  payload: {\n    system_setting_id: string;\n    status: \"enabled\" | \"disabled\";\n  };\n}\n\n// APPLICATION SETTINGS ===================================\nexport interface GetApplicationSessionAction {\n  type: ActionTypes.GET_APPLICATION_SESSIONS;\n  payload: ApplicationSessionInterface[];\n}\n\nexport interface CreateApplicationSessionAction {\n  type: ActionTypes.CREATE_APPLICATION_SESSIONS;\n  payload: ApplicationSessionInterface;\n}\n\nexport interface UpdateApplicationSessionAction {\n  type: ActionTypes.UPDATE_APPLICATION_SESSIONS;\n  payload: ApplicationSessionInterface;\n}\n\nexport interface DisableApplicationSessionAction {\n  type: ActionTypes.DISABLE_APPLICATION_SESSION;\n  payload: {\n    application_session_id: string;\n    status: boolean;\n  };\n}\n\n// POSITIONS SETTINGS ===================================\nexport interface PositionCreateInterface {\n  position_id?: string;\n  position_title: string;\n  description: string;\n  school_level_id: string;\n  education_institute_id: string;\n  courses: string[];\n  requirements: {\n    user_detail_category_id: string;\n    user_detail_subcategory_id: string;\n    position_requirement: {\n      category_subcategory_data_id: string;\n      required: boolean;\n    }[];\n    required: boolean;\n  }[];\n}\nexport interface GetPositionsAction {\n  type: ActionTypes.GET_POSTIONS;\n  payload: PositionAPI[];\n}\n\nexport interface CreatePositionsAction {\n  type: ActionTypes.CREATE_POSITION;\n  payload: PositionCreateInterface;\n}\n\nexport interface UpdatePositionsAction {\n  type: ActionTypes.UPDATE_POSITION;\n  payload: PositionCreateInterface;\n}\n\nexport interface DeletePositionAction {\n  type: ActionTypes.DELETE_POSITION;\n  payload: string;\n}\n\nexport interface PublishPositionAction {\n  type: ActionTypes.PUBLISH_POSITION;\n  payload: {\n    position_id: string;\n    status: boolean;\n  };\n}\n\nexport type SystemActionType =\n  | GetSystemSettingsAction\n  | DisableSystemSettingsAction\n  | GetApplicationSessionAction\n  | CreateApplicationSessionAction\n  | UpdateApplicationSessionAction\n  | DisableApplicationSessionAction\n  | GetPositionsAction\n  | CreatePositionsAction\n  | UpdatePositionsAction\n  | DeletePositionAction\n  | PublishPositionAction;\n\n/**\n * * ****************************** ACTIONS *****************************\n */\n\nexport const getSystemSettings = (callback: Function) => {\n  return async (dispatch: Dispatch) => {\n    callback(true, \"\");\n    try {\n      setAxiosToken();\n      const res = await axios.get<SystemSettingsInterface[]>(\n        `${API.AUTH}/settings`\n      );\n      dispatch<GetSystemSettingsAction>({\n        type: ActionTypes.GET_SYSTEM_SETTINGS,\n        payload: res.data,\n      });\n      callback(false, \"\");\n    } catch (error) {\n      console.log({ code_error: error });\n      callback(false, errorToText(error));\n    }\n  };\n};\n\nexport const disableSystemSetting = (data: {\n  system_setting_id: string;\n  status: \"enabled\" | \"disabled\";\n}) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<DisableSystemSettingsAction>({\n      type: ActionTypes.DISABLE_SYSTEM_SETTINGS,\n      payload: data,\n    });\n  };\n};\n\n// ============================ PERIODS =======================\n\nexport const getApplicationSessions = (callback: Function) => {\n  return async (dispatch: Dispatch) => {\n    callback(true, \"\");\n    try {\n      setAxiosToken();\n      const res = await axios.get<ApplicationSessionInterface[]>(\n        `${API.APPLICATION}/applicationsesion`\n      );\n      dispatch<GetApplicationSessionAction>({\n        type: ActionTypes.GET_APPLICATION_SESSIONS,\n        payload: res.data,\n      });\n      callback(false, \"\");\n    } catch (error) {\n      console.log({ code_error: error });\n      callback(false, errorToText(error));\n    }\n  };\n};\n\nexport const createAplicationSession = (data: ApplicationSessionInterface) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<CreateApplicationSessionAction>({\n      type: ActionTypes.CREATE_APPLICATION_SESSIONS,\n      payload: data,\n    });\n  };\n};\n\nexport const updateAplicationSession = (data: ApplicationSessionInterface) => {\n  console.log({ check: data });\n  return async (dispatch: Dispatch) => {\n    dispatch<UpdateApplicationSessionAction>({\n      type: ActionTypes.UPDATE_APPLICATION_SESSIONS,\n      payload: data,\n    });\n  };\n};\n\nexport const disableApplicationSession = (data: {\n  application_session_id: string;\n  status: boolean;\n}) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<DisableApplicationSessionAction>({\n      type: ActionTypes.DISABLE_APPLICATION_SESSION,\n      payload: data,\n    });\n  };\n};\n\nexport const getPositions = (callback: Function) => {\n  return async (dispatch: Dispatch) => {\n    callback(true, \"\");\n    try {\n      setAxiosToken();\n      const res = await axios.get<PositionAPI[]>(`${API.APPLICATION}/position`);\n      dispatch<GetPositionsAction>({\n        type: ActionTypes.GET_POSTIONS,\n        payload: res.data,\n      });\n      callback(false, \"\");\n    } catch (error) {\n      console.log({ code_error: error });\n      callback(false, errorToText(error));\n    }\n  };\n};\n\nexport const createPosition = (data: PositionCreateInterface) => {\n  console.log({ createPosition: data });\n  return async (dispatch: Dispatch) => {\n    dispatch<CreatePositionsAction>({\n      type: ActionTypes.CREATE_POSITION,\n      payload: data,\n    });\n  };\n};\n\nexport const updatePosition = (data: PositionCreateInterface) => {\n  console.log({ updatePosition: data });\n  return async (dispatch: Dispatch) => {\n    dispatch<UpdatePositionsAction>({\n      type: ActionTypes.UPDATE_POSITION,\n      payload: data,\n    });\n  };\n};\n\nexport const deletePosition = (data: string) => {\n  console.log({ deletePosition: data });\n  return async (dispatch: Dispatch) => {\n    dispatch<DeletePositionAction>({\n      type: ActionTypes.DELETE_POSITION,\n      payload: data,\n    });\n  };\n};\n\nexport const publishPosition = (data: {\n  position_id: string;\n  status: boolean;\n}) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<PublishPositionAction>({\n      type: ActionTypes.PUBLISH_POSITION,\n      payload: data,\n    });\n  };\n};\n","import axios from \"axios\";\nimport React, { useState } from \"react\";\nimport { FaRegCheckCircle } from \"react-icons/fa\";\nimport { MdCancel, MdTurnedIn } from \"react-icons/md\";\nimport { RiArrowGoBackFill } from \"react-icons/ri\";\nimport { connect } from \"react-redux\";\nimport { getUserDocuments } from \".\";\nimport { Auth, PushPopupAlert, reAssessApplication } from \"../../../actions\";\nimport { evaluateClaim } from \"../../../actions/claiming\";\nimport NoResult, {\n  NoResultThemes,\n} from \"../../../components/NoResult/NoResult\";\nimport {\n  allClaimApplicationInterface,\n  CandidateClaimInterface,\n  ClaimDecisionStatus,\n  ClaimStatus,\n  ClaimTypesInterfaceAPI,\n  PositionAPI,\n} from \"../../../interfaces\";\nimport { ApplicationStates } from \"../../../interfaces/application\";\nimport { PopupAlertTheme } from \"../../../interfaces/popupAlert\";\nimport { StoreState } from \"../../../reducers\";\nimport { DocumentReducerInterface } from \"../../../reducers/document\";\nimport {\n  capitalizeFirstLetter,\n  isEmptyOrSpaces,\n} from \"../../../shared/dataTest\";\nimport { UserInterface } from \"../../../shared/interfaces\";\nimport { API } from \"../../../utils/api\";\nimport { errorToText } from \"../../../utils/errors\";\nimport { DATE, showDate, timestampToDate } from \"../../../utils/functions\";\nimport { PositionRequirementTableInterface } from \"../../Positions/ViewPosition\";\nimport ViewRequirements from \"../../Positions/ViewRequirements\";\nimport { showEvaluator } from \"../Candidate/ApplicationFormView\";\nimport { isClaimEvaluated } from \"../ClaimDocView\";\n\nexport const FC_AdminApplicationPositionDistinctCategory = (\n  thisPosition: PositionAPI,\n  documentCategories: DocumentReducerInterface\n): {\n  PositionsTemp: PositionRequirementTableInterface[];\n  DistinctCategoriesTemp: PositionRequirementTableInterface[];\n  DistinctSubCategoriesTemp: PositionRequirementTableInterface[];\n} => {\n  let PositionsTemp: PositionRequirementTableInterface[] = [];\n  let DistinctCategoriesTemp: PositionRequirementTableInterface[] = [],\n    DistinctCategoriesIds: string[] = [];\n  let DistinctSubCategoriesTemp: PositionRequirementTableInterface[] = [],\n    DistinctSubCategoriesIds: string[] = [];\n  // GET REQUIREMENTS OF THE CURRENT POSITION ====================\n  let requirements = thisPosition.requirements;\n  // LOOP THROUGH CURRENT POSITION REQUIREMENTS ==========================\n  for (let req in requirements) {\n    let thisRequirements = requirements[req];\n    // GET DOC CATEGORY OF THE CURRENT POSITION REQUIREMENTS ====================\n    let thisCategory = documentCategories.documentCategory\n      ? documentCategories.documentCategory.find(\n          (item) =>\n            item.user_detail_category_id ===\n            thisRequirements.category.user_detail_category_id\n        ) && {\n          title: documentCategories.documentCategory.find(\n            (item) =>\n              item.user_detail_category_id ===\n              thisRequirements.category.user_detail_category_id\n          )!.title,\n          user_detail_category_id: documentCategories.documentCategory.find(\n            (item) =>\n              item.user_detail_category_id ===\n              thisRequirements.category.user_detail_category_id\n          )!.user_detail_category_id,\n        }\n      : {\n          title: \"\",\n          user_detail_category_id:\n            thisRequirements.category.user_detail_category_id,\n        };\n    // GET DOC SUB CATEGORY OF THE CURRENT POSITION REQUIREMENTS ====================\n    let thisSubCategory = documentCategories.documentSubCategory\n      ? documentCategories.documentSubCategory.find(\n          (item) =>\n            item.user_detail_subcategory_id ===\n            thisRequirements.subcategory.user_detail_subcategory_id\n        )\n        ? {\n            title: documentCategories.documentSubCategory.find(\n              (item) =>\n                item.user_detail_subcategory_id ===\n                thisRequirements.subcategory.user_detail_subcategory_id\n            )!.title,\n            user_detail_subcategory_id:\n              documentCategories.documentSubCategory.find(\n                (item) =>\n                  item.user_detail_subcategory_id ===\n                  thisRequirements.subcategory.user_detail_subcategory_id\n              )!.user_detail_subcategory_id,\n            category_id: documentCategories.documentSubCategory.find(\n              (item) =>\n                item.user_detail_subcategory_id ===\n                thisRequirements.subcategory.user_detail_subcategory_id\n            )!.category_id,\n          }\n        : {\n            title: \"\",\n            user_detail_subcategory_id:\n              thisRequirements.subcategory.user_detail_subcategory_id,\n            category_id: \"\",\n          }\n      : {\n          title: \"\",\n          user_detail_subcategory_id:\n            thisRequirements.subcategory.user_detail_subcategory_id,\n          category_id: \"\",\n        };\n    // LOOP THROUGH FIELDS OF THE CURRENT POSITION REQUIREMENTS ==========================\n    if (thisCategory) {\n      for (let field in thisRequirements.position_requirement) {\n        // GET FIELDS OF THE CURRENT POSITION REQUIREMENTS ====================\n        let thisField = documentCategories.documentFields\n          ? documentCategories.documentFields.find(\n              (item) =>\n                item._id === thisRequirements.position_requirement[field]._id\n            )\n            ? {\n                title: documentCategories.documentFields.find(\n                  (item) =>\n                    item._id ===\n                    thisRequirements.position_requirement[field]._id\n                )!.title,\n                _id: documentCategories.documentFields.find(\n                  (item) =>\n                    item._id ===\n                    thisRequirements.position_requirement[field]._id\n                )!._id,\n                required: thisRequirements.position_requirement[field].required,\n              }\n            : {\n                title: \"\",\n                _id: thisRequirements.position_requirement[field]._id,\n                required: thisRequirements.position_requirement[field].required,\n              }\n          : {\n              title: \"\",\n              _id: thisRequirements.position_requirement[field]._id,\n              required: thisRequirements.position_requirement[field].required,\n            };\n        // ADD CURRENT CATEGORY, SUB CATEGORY & FIELDS OF THE CURRENT POSITION REQUIREMENTS IN POSITIONS TEMP ====================\n        PositionsTemp.push({\n          category_id: thisCategory.user_detail_category_id,\n          category_title: thisCategory.title,\n          subcategory_id: thisSubCategory.user_detail_subcategory_id,\n          subcategory_title: thisSubCategory.title,\n          field_title: thisField.title,\n          field_id: thisField._id,\n          required: thisField.required,\n        });\n      }\n\n      // ADD CATEOGRY OF THE CURRENT POSITION REQUIREMENTS TO ARRAY ====================\n      if (\n        !DistinctCategoriesIds.includes(thisCategory.user_detail_category_id)\n      ) {\n        DistinctCategoriesIds.push(thisCategory.user_detail_category_id);\n        DistinctCategoriesTemp.push({\n          category_id: thisCategory.user_detail_category_id,\n          category_title: thisCategory.title,\n          subcategory_id: \"\",\n          subcategory_title: \"\",\n          field_title: \"\",\n          field_id: \"\",\n          required: false,\n        });\n      }\n\n      // ADD SUB CATEOGRY OF THE CURRENT POSITION REQUIREMENTS TO ARRAY ====================\n      if (\n        !DistinctSubCategoriesIds.includes(\n          thisSubCategory.user_detail_subcategory_id\n        )\n      ) {\n        DistinctSubCategoriesIds.push(\n          thisSubCategory.user_detail_subcategory_id\n        );\n        DistinctSubCategoriesTemp.push({\n          category_id: thisSubCategory.category_id,\n          category_title: \"\",\n          subcategory_id: thisSubCategory.user_detail_subcategory_id,\n          subcategory_title: thisSubCategory.title,\n          field_title: \"\",\n          field_id: \"\",\n          required: false,\n        });\n      }\n    }\n  }\n  // DistinctCategoriesIds.;\n\n  return { PositionsTemp, DistinctCategoriesTemp, DistinctSubCategoriesTemp };\n};\n\nenum viewTabs {\n  profile = \"User Profile\",\n  application = \"User Application\",\n}\n\ntype AdminClaimAppViewProps = {\n  thisApplication: allClaimApplicationInterface;\n  thisPosition: PositionAPI;\n  documentCategories: DocumentReducerInterface;\n  thisClaim: CandidateClaimInterface;\n  userList: UserInterface[];\n  claimTypes: ClaimTypesInterfaceAPI[];\n  systemPositions: PositionAPI[];\n\n  // REDUX ==================\n  auth: Auth;\n  reAssessApplication: Function;\n  evaluateClaim: Function;\n  PushPopupAlert: Function;\n};\n\nconst AdminClaimAppView: React.FC<AdminClaimAppViewProps> = (props) => {\n  const [viewPosition, setViewPosition] = useState<boolean>(true);\n  const [loadingRequest, setLoadingRequest] = useState<boolean>(false);\n  const [actionTaken, setActionTaken] = useState<ClaimDecisionStatus | null>(\n    null\n  );\n  const [formError, setFormError] = useState<{\n    element: string;\n    msg: string;\n  } | null>(null);\n  const [responseMsg, setResponseMsg] = useState<string>(\"\");\n  const [selectedTab, setSelectedTab] = useState<viewTabs>(viewTabs.profile);\n\n  const handleVerify = async () => {\n    if (!actionTaken) {\n      setFormError({\n        element: \"action\",\n        msg: \"Action is required!\",\n      });\n      return setLoadingRequest(false);\n    }\n\n    if (isEmptyOrSpaces(responseMsg)) {\n      setFormError({\n        element: \"comment\",\n        msg: \"Reason of rejection is required\",\n      });\n      return setLoadingRequest(false);\n    }\n\n    let subClaim = props.thisClaim.claims.find(\n      (item) => item.level === props.thisClaim.claim_level\n    );\n\n    if (subClaim) {\n      setLoadingRequest(true);\n      const api_body: {\n        sub_claim_id: string;\n        evaluation_comment: string;\n        evaluated_by: string;\n        decision_taken_status: ClaimDecisionStatus;\n      } = {\n        sub_claim_id: subClaim.id,\n        evaluation_comment: responseMsg,\n        evaluated_by: props.auth.user.user_id,\n        decision_taken_status: actionTaken,\n      };\n\n      try {\n        const res = await axios.put<CandidateClaimInterface>(\n          `${API.CLAIMING}/user/evaluate/${props.thisClaim.id}`,\n          api_body\n        );\n        if (res) {\n          console.log({ evaluate_claim_res: res });\n          props.evaluateClaim(res.data);\n          // REVALIDATED DOCUMENT IF IT IS APPROVED =========================\n          if (actionTaken === ClaimDecisionStatus.ACCEPTED) {\n            await overrideDecision();\n          }\n          props.PushPopupAlert({\n            title: `Claim responded successfully!`,\n            theme: PopupAlertTheme.success,\n          });\n          // setDocumentId(\"null\");\n          setResponseMsg(\"\");\n          setActionTaken(null);\n        }\n      } catch (error) {\n        console.error(error);\n        props.PushPopupAlert({\n          title: errorToText(error),\n          theme: PopupAlertTheme.danger,\n        });\n      }\n      setLoadingRequest(false);\n    }\n  };\n\n  const overrideDecision = async () => {\n    try {\n      const res = await axios.patch(\n        `${API.APPLICATION}/tolerateappl/${props.thisClaim.claiming_on_id}`,\n        {\n          user_id: props.auth.user.user_id,\n          comment: responseMsg,\n          application_status: ApplicationStates.Shortlisted,\n        }\n      );\n\n      res.data &&\n        props.reAssessApplication({\n          application_id: props.thisClaim.claiming_on_id,\n          application_status: ApplicationStates.Shortlisted,\n        });\n    } catch (error) {\n      console.error({ code_error: error });\n      PushPopupAlert({\n        title: errorToText(error),\n        theme: PopupAlertTheme.danger,\n      });\n      // errorToText(error);\n    }\n    setLoadingRequest(false);\n  };\n\n  const getPositionById = (position_id: string): PositionAPI | undefined => {\n    let result = props.systemPositions.find(\n      (item) => item.position_id === position_id\n    );\n\n    return result;\n  };\n\n  return (\n    <section className=\"\">\n      {/* #################### VIEW TABS ################################## */}\n      <div className=\"flex flex-row items-center mx-4\">\n        {Object.values(viewTabs).map((item, i) => (\n          <div\n            key={i}\n            onClick={() => setSelectedTab(item)}\n            className={`animate__animated ${\n              selectedTab === item\n                ? \"bg-blue-100 border-blue-600 text-blue-600 animate__zoomIn\"\n                : \"bg-white border-white text-gray-600\"\n            } hover:bg-blue-100 px-4 py-2 cursor-pointer font-bold border-b-4 hover:border-blue-600 hover:text-blue-600 rounded-t mt-1 mr-1`}\n          >\n            {item}\n          </div>\n        ))}\n      </div>\n      {/* #################### END VIEW TABS ################################## */}\n      <div className=\"w-full bg-white px-4 py-1 divide-y-2 space-y-2\">\n        {/* DOCUMENT DETAILS ==================================================== */}\n        <section className=\"flex flex-col\">\n          {/* DISPLAY POSITION ==================================================== */}\n          {selectedTab === viewTabs.application && (\n            <section className=\"w-full my-1 animate__animated animate__fadeIn rounded\">\n              <div className=\"bg-white w-full\">\n                <div className=\"text-gray-800 text-2xl font-bold my-2\">\n                  Position Details\n                </div>\n                <div className=\"flex items-center gap-2 text-base text-gray-600\">\n                  <span className={`italic`}>Desc:</span>\n                  <span className=\"font-semibold\">\n                    {getPositionById(props.thisApplication.position)\n                      ? getPositionById(props.thisApplication.position)!\n                          .description\n                      : \"\"}\n                  </span>\n                </div>\n                <div className=\"flex items-center gap-2 text-base text-gray-600\">\n                  <span className={`italic`}>School level:</span>\n                  <span className=\"font-semibold\">\n                    {getPositionById(props.thisApplication.position)\n                      ? getPositionById(props.thisApplication.position)!\n                          .school_level_id.school_level_name\n                      : \"\"}\n                  </span>\n                </div>\n                <div className=\"flex items-center gap-2 text-base text-gray-600\">\n                  <span className={`italic`}>Institute:</span>\n                  <span className=\"font-semibold\">\n                    {getPositionById(props.thisApplication.position)\n                      ? getPositionById(props.thisApplication.position)!\n                          .education_institute_id.education_category_title\n                      : \"\"}\n                  </span>\n                </div>\n                <div className=\"flex items-center gap-2 text-base text-gray-600\">\n                  <span className={`italic`}>Courses:</span>\n                  <span className=\"flex items-center gap-2\">\n                    {getPositionById(props.thisApplication.position) ? (\n                      getPositionById(\n                        props.thisApplication.position\n                      )!.courses.map((item, index) => (\n                        <div\n                          key={index + item.course_id}\n                          className=\"flex items-center gap-1\"\n                        >\n                          <span className=\"font-semibold\">\n                            {item.course_name}\n                          </span>\n                          <span className=\"text-gray-600\">\n                            ({item.course_code})\n                          </span>\n                          {index !==\n                            getPositionById(props.thisApplication.position)!\n                              .courses.length -\n                              1 && \",\"}\n                        </div>\n                      ))\n                    ) : (\n                      <NoResult\n                        theme={NoResultThemes.Dark}\n                        value={\"No courses found\"}\n                      />\n                    )}\n                  </span>\n                </div>\n\n                <div className=\"text-gray-800 text-2xl font-bold my-2\">\n                  Position Requirements\n                </div>\n                {getPositionById(props.thisApplication.position) ? (\n                  getPositionById(props.thisApplication.position)!.requirements\n                    .length > 0 ? (\n                    FC_AdminApplicationPositionDistinctCategory(\n                      getPositionById(props.thisApplication.position)!,\n                      props.documentCategories\n                    ).DistinctCategoriesTemp.map((item, index) => (\n                      <div\n                        className=\"bg-gray-100props.thisApplication.position rounded p-2\"\n                        key={index + item.category_id}\n                      >\n                        <div className=\"flex items-center gap-2 text-2xl text-gray-500 font-bold\">\n                          <MdTurnedIn />\n                          <span>{item.category_title}</span>\n                        </div>\n                        <div className=\"border bg-white mt-1\">\n                          <ViewRequirements\n                            requirements={FC_AdminApplicationPositionDistinctCategory(\n                              getPositionById(props.thisApplication.position)!,\n                              props.documentCategories\n                            ).PositionsTemp.filter(\n                              (req) => req.category_id === item.category_id\n                            )}\n                          />\n                        </div>\n                      </div>\n                    ))\n                  ) : (\n                    <NoResult\n                      theme={NoResultThemes.Dark}\n                      value={\"No requirements\"}\n                    ></NoResult>\n                  )\n                ) : (\n                  <NoResult\n                    theme={NoResultThemes.Dark}\n                    value={\"No requirements\"}\n                  ></NoResult>\n                )}\n              </div>\n            </section>\n          )}\n          {/* END DISPLAY POSITION ==================================================== */}\n          {/* -------------------------------------------------------------------------------- */}\n          {/* DISPLAY PROFILE ==================================================== */}\n          {selectedTab === viewTabs.profile && (\n            <section className=\"w-full my-2 animate__animated animate__fadeIn rounded\">\n              <div className=\"flex items-center justify-between\">\n                <div className=\"flex items-center gap-2\">\n                  <span className={`italic text-gray-600`}>Names:</span>\n                  <span className=\"text-gray-800 font-bold text-xl\">\n                    {showEvaluator(\n                      props.userList,\n                      props.thisApplication.user_id\n                    )}\n                  </span>\n                </div>\n                {false && (\n                  <button\n                    type=\"button\"\n                    className=\"bg-blue-200 hover:bg-blue-300 text-blue-700 group-hover:text-blue-800 py-1 px-2 mr-1 rounded text-sm\"\n                    onClick={() => setViewPosition(!viewPosition)}\n                  >\n                    {viewPosition ? \"Hide\" : \"More\"}\n                  </button>\n                )}\n              </div>\n            </section>\n          )}\n          {/* END DISPLAY PROFILE ==================================================== */}\n          <div className=\"flex items-center\">\n            <div className=\"flex items-center gap-2\">\n              <span className={`italic text-gray-600`}>Title:</span>\n              <span className=\"text-gray-800 font-bold text-2xl\">\n                {getPositionById(props.thisApplication.position)\n                  ? getPositionById(props.thisApplication.position)!\n                      .position_title\n                  : \"Position not found\"}\n              </span>\n            </div>\n          </div>\n          <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n            <span className={`italic`}>Status:</span>\n            <span\n              className={`font-bold ${\n                props.thisClaim.previous\n                  ? props.thisClaim.previous.status ===\n                    ApplicationStates.Rejected\n                  : props.thisApplication.application_status ===\n                    ApplicationStates.Rejected\n                  ? \"text-yellow-900\"\n                  : \"text-blue-600\"\n              } rounded px-3 py-1`}\n            >\n              {props.thisClaim.previous\n                ? capitalizeFirstLetter(props.thisClaim.previous.status)\n                : capitalizeFirstLetter(\n                    props.thisApplication.application_status\n                  )}\n            </span>\n          </div>\n          <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n            <span className={`italic`}>Evaluated by:</span>\n            <span className=\"font-semibold\">\n              {props.thisClaim.previous\n                ? showEvaluator(\n                    props.userList,\n                    props.thisClaim.previous.evaluated_by\n                  )\n                : showEvaluator(\n                    props.userList,\n                    props.thisApplication.override_by.user_id\n                  )}\n            </span>\n          </div>\n          {false && (\n            <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n              <span className={`italic`}>Session:</span>\n              <span className=\"font-bold text-gray-900 py-1\">\n                {props.thisApplication.application_session}\n              </span>\n            </div>\n          )}\n          <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n            <span className={`italic`}>Date:</span>\n            <span className=\"font-bold text-gray-900 py-1\">\n              {DATE(props.thisApplication.createdAt)}\n            </span>\n          </div>\n          <div className=\"flex items-start gap-2 text-sm text-gray-600\">\n            <span className={`italic`}>Reason:</span>\n            <span className=\"font-normal\">\n              {props.thisClaim.previous\n                ? props.thisClaim.previous.reason\n                : props.thisApplication.override_by.comment}\n            </span>\n          </div>\n        </section>\n        {/* END DOCUMENT DETAILS ==================================================== */}\n\n        {/* ################################################################################ */}\n\n        {/* CLAIM LEVEL 1 DETAILS ==================================================== */}\n        {props.thisClaim.claims.length > 0 &&\n          props.thisClaim.claims.map((claim, index) => (\n            <section className=\"flex flex-col px-2 pt-3\" key={index + claim.id}>\n              {/* CLAIM COMMENT ==>> LEVEL 1 ==================================================== */}\n              <div className=\"flex flex-col items-start gap-2\">\n                <p>{claim.reason}</p>\n                <span className=\"text-gray-500 text-xs\">\n                  {showDate(claim.createdAt) +\n                    \" at \" +\n                    timestampToDate(claim.date_created).timeFR}\n                </span>\n              </div>\n              {/* CLAIM COMMENT ==>> LEVEL 1 ==================================================== */}\n\n              {isClaimEvaluated(props.thisClaim, claim.level) && (\n                <section className=\"mt-4\">\n                  <span className=\"text-gray-500 italic font-semibold\">\n                    Response (level {index + 1})\n                  </span>\n                  <div className=\"border-t-2\">\n                    <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n                      <span className={`italic`}>Status:</span>\n                      <span\n                        className={`font-bold ${\n                          claim.decision_taken_status ===\n                          ClaimDecisionStatus.REJECTED\n                            ? \"text-yellow-900\"\n                            : \"text-blue-600\"\n                        } rounded px-3 py-1`}\n                      >\n                        {capitalizeFirstLetter(\n                          claim.decision_taken_status.toLocaleLowerCase()\n                        )}\n                      </span>\n                    </div>\n                    <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n                      <span className={`italic`}>Evaluated by:</span>\n                      <span className=\"font-semibold\">\n                        {getUserDocuments(props.userList, claim.evaluated_by)\n                          ? getUserDocuments(\n                              props.userList,\n                              claim.evaluated_by\n                            )!.user.user_info.fname +\n                            \" \" +\n                            getUserDocuments(\n                              props.userList,\n                              claim.evaluated_by\n                            )!.user.user_info.lname\n                          : \"-\"}\n                      </span>\n                    </div>\n                    <div className=\"flex items-start gap-2 text-sm text-gray-600\">\n                      <span className={`italic`}>Reason:</span>\n                      <span className=\"font-normal\">\n                        {claim.evaluation_comment}\n                      </span>\n                    </div>\n                  </div>\n                </section>\n              )}\n            </section>\n          ))}\n        {/* END CLAIM LEVEL 1 DETAILS ==================================================== */}\n      </div>\n\n      {/* FOOTER INITIAL ========================================== */}\n      {!actionTaken && (\n        <section className=\"flex items-center justify-between\">\n          {/* SHOWING STATUS ===================================== */}\n          <div className=\"mx-4 mb-5 mt-3\">\n            <span className=\"text-yellow-700 italic font-semibold\">\n              {capitalizeFirstLetter(\n                props.thisClaim.last_claim_status.toLocaleLowerCase()\n              )}\n            </span>\n          </div>\n\n          {props.thisClaim.last_claim_status === ClaimStatus.PENDING && (\n            <div className=\"flex items-center gap-2 px-2\">\n              <button\n                className={`px-4 py-2 font-semibold text-red-50 rounded inline-flex items-center space-x-2 focus:outline-none bg-red-700 hover:bg-red-800`}\n                onClick={() => {\n                  setActionTaken(ClaimDecisionStatus.REJECTED);\n                }}\n              >\n                <MdCancel className=\"w-5 h-5\" />\n                <span>Reject</span>\n              </button>\n              <button\n                className={`px-4 py-2 font-semibold text-blue-50 rounded inline-flex items-center space-x-2 focus:outline-none bg-blue-700 hover:bg-blue-800`}\n                onClick={() => {\n                  setActionTaken(ClaimDecisionStatus.ACCEPTED);\n                }}\n              >\n                <FaRegCheckCircle className=\"w-5 h-5\" />\n                <span>Accept</span>\n              </button>\n            </div>\n          )}\n        </section>\n      )}\n      {/* END FOOTER INITIAL ========================================== */}\n\n      {/* ======================================================== */}\n      {/* FOOTER RESPONSE ========================================== */}\n      {actionTaken && (\n        <section className=\"my-5 overflow-x-auto\">\n          <div className=\"italic text-gray-700 text-base my-1 mx-2\">\n            Selected decision:{\" \"}\n            <span\n              className={`font-semibold text-lg ${\n                actionTaken === ClaimDecisionStatus.ACCEPTED\n                  ? \"text-blue-700\"\n                  : \"text-yellow-800\"\n              }`}\n            >\n              {actionTaken === ClaimDecisionStatus.ACCEPTED\n                ? \"Approved\"\n                : \"Rejected\"}\n            </span>\n          </div>\n          {/* right part */}\n          <div className=\"flex flex-col md:flex-row items-end md:items-start gap-1 w-full\">\n            <div className=\"w-full px-2\">\n              <textarea\n                placeholder={`Reason of your decision...`}\n                cols={50}\n                rows={3}\n                className={`border border-${\n                  formError && formError.element === \"comment\" ? \"red\" : \"gray\"\n                }-400 rounded px-3 py-1 w-full focus:outline-none`}\n                style={{ resize: \"none\" }}\n                value={responseMsg}\n                onChange={(e) => {\n                  setResponseMsg(e.target.value);\n                  setFormError(null);\n                }}\n                disabled={loadingRequest}\n              ></textarea>\n              {formError && formError.element === \"comment\" && (\n                <p className=\"text-red-800\">{formError.msg}</p>\n              )}\n            </div>\n            <div className=\"flex flex-row md:flex-col gap-1 max-w-full px-2\">\n              <button\n                className=\"bg-gray-700 hover:bg-gray-800 px-4 py-2 font-semibold rounded text-white inline-flex items-center space-x-2 focus:outline-none\"\n                onClick={() => {\n                  setResponseMsg(\"\");\n                  setActionTaken(null);\n                  setFormError(null);\n                }}\n                disabled={loadingRequest}\n              >\n                <RiArrowGoBackFill className=\"w-5 h-5\" />\n                <span>Back</span>\n              </button>\n              <button\n                className=\"bg-blue-700 hover:bg-blue-800 px-4 py-2 font-semibold rounded text-white inline-flex items-center space-x-2 focus:outline-none\"\n                disabled={loadingRequest}\n                onClick={() =>\n                  window.confirm(\n                    `Are you sure you want to ${\n                      actionTaken === ClaimDecisionStatus.ACCEPTED\n                        ? \"approve\"\n                        : \"rejected\"\n                    } this document?`\n                  ) && handleVerify()\n                }\n              >\n                {loadingRequest ? (\n                  <div className=\"\">Loading...</div>\n                ) : (\n                  <div className=\"inline-flex items-center space-x-2 gap-1\">\n                    <FaRegCheckCircle className=\"w-5 h-5\" />\n                    <span>Confirm</span>\n                  </div>\n                )}\n              </button>\n            </div>\n          </div>\n          {/* end right part */}\n        </section>\n      )}\n      {/* END FOOTER RESPONSE ========================================== */}\n    </section>\n  );\n};\n\nconst mapStateToProps = ({\n  auth,\n}: StoreState): {\n  auth: Auth;\n} => {\n  return {\n    auth: auth,\n  };\n};\n\nexport default connect(mapStateToProps, {\n  evaluateClaim,\n  reAssessApplication,\n  PushPopupAlert,\n})(AdminClaimAppView);\n","import axios from \"axios\";\nimport React from \"react\";\nimport { FaRegCheckCircle } from \"react-icons/fa\";\nimport { MdCancel } from \"react-icons/md\";\nimport { RiArrowGoBackFill } from \"react-icons/ri\";\nimport { connect } from \"react-redux\";\nimport { adminDisplayClaimTitle, getUserDocuments } from \".\";\nimport { Auth, PushPopupAlert } from \"../../../actions\";\nimport { evaluateClaim } from \"../../../actions/claiming\";\nimport { verifyDocument } from \"../../../actions/document\";\nimport { VerifyDocumentInterface } from \"../../../actions/users\";\nimport {\n  CandidateClaimInterface,\n  ClaimDecisionStatus,\n  ClaimStatus,\n  ClaimTypesInterfaceAPI,\n} from \"../../../interfaces\";\nimport { PopupAlertTheme } from \"../../../interfaces/popupAlert\";\nimport { StoreState } from \"../../../reducers\";\nimport { DocumentReducerInterface } from \"../../../reducers/document\";\nimport {\n  capitalizeFirstLetter,\n  isEmptyOrSpaces,\n} from \"../../../shared/dataTest\";\nimport {\n  DocValidationStatusInterface,\n  UserDocumentsInterface,\n  UserInterface,\n} from \"../../../shared/interfaces\";\nimport { API } from \"../../../utils/api\";\nimport { errorToText } from \"../../../utils/errors\";\nimport { showDate, timestampToDate } from \"../../../utils/functions\";\nimport { isClaimEvaluated } from \"../ClaimDocView\";\n\ntype AdminClaimDocViewProps = {\n  thisDoc: UserDocumentsInterface;\n  documentCategories: DocumentReducerInterface;\n  thisClaim: CandidateClaimInterface;\n  userList: UserInterface[];\n  candidateId: string;\n  claimTypes: ClaimTypesInterfaceAPI[];\n  viewImage: boolean;\n  setViewImage: React.Dispatch<React.SetStateAction<boolean>>;\n  loadingRequest: boolean;\n  setLoadingRequest: React.Dispatch<React.SetStateAction<boolean>>;\n  actionTaken: ClaimDecisionStatus | null;\n  setActionTaken: React.Dispatch<\n    React.SetStateAction<ClaimDecisionStatus | null>\n  >;\n  responseMsg: string;\n  setResponseMsg: React.Dispatch<React.SetStateAction<string>>;\n  formError: {\n    element: string;\n    msg: string;\n  } | null;\n  setFormError: React.Dispatch<\n    React.SetStateAction<{\n      element: string;\n      msg: string;\n    } | null>\n  >;\n\n  // REDUX ==================\n  auth: Auth;\n  verifyDocument: Function;\n  evaluateClaim: Function;\n  PushPopupAlert: Function;\n};\n\nconst AdminClaimDocView: React.FC<AdminClaimDocViewProps> = (props) => {\n  const handleVerify = async () => {\n    if (!props.actionTaken) {\n      props.setFormError({\n        element: \"action\",\n        msg: \"Action is required!\",\n      });\n      return props.setLoadingRequest(false);\n    }\n\n    if (isEmptyOrSpaces(props.responseMsg)) {\n      props.setFormError({\n        element: \"comment\",\n        msg: \"Reason of rejection is required\",\n      });\n      return props.setLoadingRequest(false);\n    }\n\n    let subClaim = props.thisClaim.claims.find(\n      (item) => item.level === props.thisClaim.claim_level\n    );\n\n    if (subClaim) {\n      props.setLoadingRequest(true);\n      const api_body: {\n        sub_claim_id: string;\n        evaluation_comment: string;\n        evaluated_by: string;\n        decision_taken_status: ClaimDecisionStatus;\n      } = {\n        sub_claim_id: subClaim.id,\n        evaluation_comment: props.responseMsg,\n        evaluated_by: props.auth.user.user_id,\n        decision_taken_status: props.actionTaken,\n      };\n\n      try {\n        const res = await axios.put<CandidateClaimInterface>(\n          `${API.CLAIMING}/user/evaluate/${props.thisClaim.id}`,\n          api_body\n        );\n        if (res) {\n          console.log({ evaluate_claim_res: res });\n          props.evaluateClaim(res.data);\n          // REVALIDATED DOCUMENT IF IT IS APPROVED =========================\n          if (props.actionTaken === ClaimDecisionStatus.ACCEPTED) {\n            await FC_DocValidation();\n          }\n          props.PushPopupAlert({\n            title: `Claim responded successfully!`,\n            theme: PopupAlertTheme.success,\n          });\n          // setDocumentId(\"null\");\n          props.setResponseMsg(\"\");\n          props.setActionTaken(null);\n        }\n      } catch (error) {\n        console.error(error);\n        props.PushPopupAlert({\n          title: errorToText(error),\n          theme: PopupAlertTheme.danger,\n        });\n      }\n      props.setLoadingRequest(false);\n    }\n  };\n\n  const FC_DocValidation = async () => {\n    const api_body: VerifyDocumentInterface = {\n      user_id: props.thisClaim.user,\n      doc_id: props.thisClaim.claiming_on_id,\n      validation_status:\n        props.actionTaken === ClaimDecisionStatus.ACCEPTED\n          ? DocValidationStatusInterface.APPROVED\n          : DocValidationStatusInterface.REJECTED,\n      validated_by: {\n        user_id: props.auth.user.user_id,\n        comment: props.responseMsg,\n        validation_status:\n          props.actionTaken === ClaimDecisionStatus.ACCEPTED\n            ? DocValidationStatusInterface.APPROVED\n            : DocValidationStatusInterface.REJECTED,\n      },\n    };\n    const api_redux: VerifyDocumentInterface = {\n      user_id: props.thisClaim.user,\n      doc_id: props.thisClaim.claiming_on_id,\n      validation_status:\n        props.actionTaken === ClaimDecisionStatus.ACCEPTED\n          ? DocValidationStatusInterface.APPROVED\n          : DocValidationStatusInterface.REJECTED,\n      validated_by: {\n        user_id: props.auth.user.user_id,\n        comment: props.responseMsg,\n        validation_status:\n          props.actionTaken === ClaimDecisionStatus.ACCEPTED\n            ? DocValidationStatusInterface.APPROVED\n            : DocValidationStatusInterface.REJECTED,\n        date: \"\",\n      },\n    };\n\n    try {\n      const res = await axios.post<VerifyDocumentInterface>(\n        `${API.AUTH}/validateuserdoc`,\n        api_body\n      );\n      if (res) {\n        props.verifyDocument(api_redux);\n        await FC_shortListing(props.thisClaim.user);\n        // setDocumentId(\"null\");\n      }\n    } catch (error) {\n      console.error(error);\n      props.PushPopupAlert({\n        title: errorToText(error),\n        theme: PopupAlertTheme.danger,\n      });\n    }\n  };\n\n  const FC_shortListing = async (candidate_id: string) => {\n    try {\n      const res = await axios.patch(\n        `${API.APPLICATION}/doccheckshortlist/${candidate_id}`\n      );\n      console.log({ res });\n    } catch (error) {\n      console.error({ error });\n      props.PushPopupAlert({\n        title: errorToText(error),\n        theme: PopupAlertTheme.danger,\n      });\n    }\n  };\n\n  return (\n    <section className=\"\">\n      <div className=\"w-full bg-white px-4 py-1 divide-y-2 space-y-2\">\n        {/* DOCUMENT DETAILS ==================================================== */}\n        <section className=\"flex flex-col\">\n          <div className=\"flex items-center justify-between\">\n            <div className=\"flex items-center gap-2\">\n              <span className={`italic text-gray-600`}>Names:</span>\n              <span className=\"text-gray-800 font-bold text-xl\">\n                {getUserDocuments(props.userList, props.candidateId)\n                  ? getUserDocuments(props.userList, props.candidateId)!.user\n                      .user_info.fname +\n                    \" \" +\n                    getUserDocuments(props.userList, props.candidateId)!.user\n                      .user_info.lname\n                  : \"-\"}\n              </span>\n            </div>\n            <button\n              type=\"button\"\n              className=\"bg-blue-200 hover:bg-blue-300 text-blue-700 group-hover:text-blue-800 py-1 px-2 mr-1 rounded text-sm\"\n              onClick={() => props.setViewImage(!props.viewImage)}\n            >\n              {props.viewImage ? \"Hide\" : \"View\"}\n            </button>\n          </div>\n          <div className=\"flex items-center gap-2\">\n            <span className={`italic text-gray-600`}>Title:</span>\n            <span className=\"text-gray-800 font-bold text-2xl\">\n              {/* {ClaimGetDocTitle(props.documentCategories, props.thisDoc).main} */}\n              {getUserDocuments(props.userList, props.thisClaim.user)\n                ? adminDisplayClaimTitle(\n                    props.documentCategories,\n                    getUserDocuments(props.userList, props.thisClaim.user)!\n                      .document,\n                    props.thisClaim\n                  )\n                : \"-\"}\n            </span>\n          </div>\n          <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n            <span className={`italic`}>Status:</span>\n            <span className=\"font-bold text-yellow-900 rounded px-3 py-1\">\n              {props.thisClaim.previous\n                ? capitalizeFirstLetter(props.thisClaim.previous.status)\n                : capitalizeFirstLetter(props.thisDoc.validation_status)}\n            </span>\n          </div>\n          <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n            <span className={`italic`}>Evaluated by:</span>\n            <span className=\"font-semibold\">\n              {props.thisClaim.previous\n                ? getUserDocuments(\n                    props.userList,\n                    props.thisClaim.previous.evaluated_by\n                  )\n                  ? getUserDocuments(\n                      props.userList,\n                      props.thisClaim.previous.evaluated_by\n                    )!.user.user_info.fname +\n                    \" \" +\n                    getUserDocuments(\n                      props.userList,\n                      props.thisClaim.previous.evaluated_by\n                    )!.user.user_info.lname\n                  : \"-\"\n                : getUserDocuments(\n                    props.userList,\n                    props.thisDoc.validated_by.user_id\n                  )\n                ? getUserDocuments(\n                    props.userList,\n                    props.thisDoc.validated_by.user_id\n                  )!.user.user_info.fname +\n                  \" \" +\n                  getUserDocuments(\n                    props.userList,\n                    props.thisDoc.validated_by.user_id\n                  )!.user.user_info.lname\n                : \"-\"}\n            </span>\n          </div>\n          <div className=\"flex items-start gap-2 text-sm text-gray-600\">\n            <span className={`italic`}>Reason:</span>\n            <span className=\"font-normal\">\n              {props.thisClaim.previous\n                ? props.thisClaim.previous.reason\n                : props.thisDoc.validated_by.commet}\n            </span>\n          </div>\n\n          {/* DISPLAY IMAGE ==================================================== */}\n          {props.viewImage && (\n            <div className=\"w-full my-1 animate__animated animate__fadeIn\">\n              <img\n                src={`${API.AUTH_FILES}/${props.thisDoc.files}`}\n                alt=\"doc file\"\n                className={`w-full animate__animated animate__fadeIn`}\n              />\n            </div>\n          )}\n          {/* END DISPLAY IMAGE ==================================================== */}\n        </section>\n        {/* END DOCUMENT DETAILS ==================================================== */}\n\n        {/* ################################################################################ */}\n\n        {/* CLAIM LEVEL 1 DETAILS ==================================================== */}\n        {props.thisClaim.claims.length > 0 &&\n          props.thisClaim.claims.map((claim, index) => (\n            <section className=\"flex flex-col px-2 pt-3\" key={index + claim.id}>\n              {/* CLAIM COMMENT ==>> LEVEL 1 ==================================================== */}\n              <div className=\"flex flex-col items-start gap-2\">\n                <p>{claim.reason}</p>\n                <span className=\"text-gray-500 text-xs\">\n                  {showDate(claim.createdAt) +\n                    \" at \" +\n                    timestampToDate(claim.date_created).timeFR}\n                </span>\n              </div>\n              {/* CLAIM COMMENT ==>> LEVEL 1 ==================================================== */}\n\n              {isClaimEvaluated(props.thisClaim, claim.level) && (\n                <section className=\"mt-4\">\n                  <span className=\"text-gray-500 italic font-semibold\">\n                    Response (level {index + 1})\n                  </span>\n                  <div className=\"border-t-2\">\n                    <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n                      <span className={`italic`}>Status:</span>\n                      <span\n                        className={`font-bold ${\n                          claim.decision_taken_status ===\n                          ClaimDecisionStatus.REJECTED\n                            ? \"text-yellow-900\"\n                            : \"text-blue-600\"\n                        } rounded px-3 py-1`}\n                      >\n                        {capitalizeFirstLetter(\n                          claim.decision_taken_status.toLocaleLowerCase()\n                        )}\n                      </span>\n                    </div>\n                    <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n                      <span className={`italic`}>Evaluated by:</span>\n                      <span className=\"font-semibold\">\n                        {getUserDocuments(props.userList, claim.evaluated_by)\n                          ? getUserDocuments(\n                              props.userList,\n                              claim.evaluated_by\n                            )!.user.user_info.fname +\n                            \" \" +\n                            getUserDocuments(\n                              props.userList,\n                              claim.evaluated_by\n                            )!.user.user_info.lname\n                          : \"-\"}\n                      </span>\n                    </div>\n                    <div className=\"flex items-start gap-2 text-sm text-gray-600\">\n                      <span className={`italic`}>Reason:</span>\n                      <span className=\"font-normal\">\n                        {claim.evaluation_comment}\n                      </span>\n                    </div>\n                  </div>\n                </section>\n              )}\n            </section>\n          ))}\n        {/* END CLAIM LEVEL 1 DETAILS ==================================================== */}\n      </div>\n\n      {/* FOOTER INITIAL ========================================== */}\n      {!props.actionTaken && (\n        <section className=\"flex items-center justify-between\">\n          {/* SHOWING STATUS ===================================== */}\n          <div className=\"mx-4 mb-5 mt-3\">\n            <span\n              className={`${\n                props.thisClaim.last_claim_status === ClaimStatus.PENDING\n                  ? \"text-yellow-700\"\n                  : props.thisClaim.last_claim_status === ClaimStatus.DELETED\n                  ? \"text-red-700\"\n                  : \"text-green-700\"\n              } italic font-semibold`}\n            >\n              {capitalizeFirstLetter(\n                props.thisClaim.last_claim_status.toLocaleLowerCase()\n              )}\n            </span>\n          </div>\n\n          {props.thisClaim.last_claim_status === ClaimStatus.PENDING && (\n            <div className=\"flex items-center gap-2 px-2\">\n              <button\n                className={`px-4 py-2 font-semibold text-red-50 rounded inline-flex items-center space-x-2 focus:outline-none bg-red-700 hover:bg-red-800`}\n                onClick={() => {\n                  props.setActionTaken(ClaimDecisionStatus.REJECTED);\n                }}\n              >\n                <MdCancel className=\"w-5 h-5\" />\n                <span>Reject</span>\n              </button>\n              <button\n                className={`px-4 py-2 font-semibold text-blue-50 rounded inline-flex items-center space-x-2 focus:outline-none bg-blue-700 hover:bg-blue-800`}\n                onClick={() => {\n                  props.setActionTaken(ClaimDecisionStatus.ACCEPTED);\n                }}\n              >\n                <FaRegCheckCircle className=\"w-5 h-5\" />\n                <span>Accept</span>\n              </button>\n            </div>\n          )}\n        </section>\n      )}\n      {/* END FOOTER INITIAL ========================================== */}\n\n      {/* ======================================================== */}\n      {/* FOOTER RESPONSE ========================================== */}\n      {props.actionTaken && (\n        <section className=\"my-5 overflow-x-auto\">\n          <div className=\"italic text-gray-700 text-base my-1 mx-2\">\n            Selected decision:{\" \"}\n            <span\n              className={`font-semibold text-lg ${\n                props.actionTaken === ClaimDecisionStatus.ACCEPTED\n                  ? \"text-blue-700\"\n                  : \"text-yellow-800\"\n              }`}\n            >\n              {props.actionTaken === ClaimDecisionStatus.ACCEPTED\n                ? \"Approved\"\n                : \"Rejected\"}\n            </span>\n          </div>\n          {/* right part */}\n          <div className=\"flex flex-col md:flex-row items-end md:items-start gap-1 w-full\">\n            <div className=\"w-full px-2\">\n              <textarea\n                placeholder={`Reason of your decision...`}\n                cols={50}\n                rows={3}\n                className={`border border-${\n                  props.formError && props.formError.element === \"comment\"\n                    ? \"red\"\n                    : \"gray\"\n                }-400 rounded px-3 py-1 w-full focus:outline-none`}\n                style={{ resize: \"none\" }}\n                value={props.responseMsg}\n                onChange={(e) => {\n                  props.setResponseMsg(e.target.value);\n                  props.setFormError(null);\n                }}\n                disabled={props.loadingRequest}\n              ></textarea>\n              {props.formError && props.formError.element === \"comment\" && (\n                <p className=\"text-red-800\">{props.formError.msg}</p>\n              )}\n            </div>\n            <div className=\"flex flex-row md:flex-col gap-1 max-w-full px-2\">\n              <button\n                className=\"bg-gray-700 hover:bg-gray-800 px-4 py-2 font-semibold rounded text-white inline-flex items-center space-x-2 focus:outline-none\"\n                onClick={() => {\n                  props.setResponseMsg(\"\");\n                  props.setActionTaken(null);\n                  props.setFormError(null);\n                }}\n                disabled={props.loadingRequest}\n              >\n                <RiArrowGoBackFill className=\"w-5 h-5\" />\n                <span>Back</span>\n              </button>\n              <button\n                className=\"bg-blue-700 hover:bg-blue-800 px-4 py-2 font-semibold rounded text-white inline-flex items-center space-x-2 focus:outline-none\"\n                disabled={props.loadingRequest}\n                onClick={() =>\n                  window.confirm(\n                    `Are you sure you want to ${\n                      props.actionTaken === ClaimDecisionStatus.ACCEPTED\n                        ? \"approve\"\n                        : \"rejected\"\n                    } this document?`\n                  ) && handleVerify()\n                }\n              >\n                {props.loadingRequest ? (\n                  <div className=\"\">Loading...</div>\n                ) : (\n                  <div className=\"inline-flex items-center space-x-2 gap-1\">\n                    <FaRegCheckCircle className=\"w-5 h-5\" />\n                    <span>Confirm</span>\n                  </div>\n                )}\n              </button>\n            </div>\n          </div>\n          {/* end right part */}\n        </section>\n      )}\n      {/* END FOOTER RESPONSE ========================================== */}\n    </section>\n  );\n};\n\nconst mapStateToProps = ({\n  auth,\n}: StoreState): {\n  auth: Auth;\n} => {\n  return {\n    auth: auth,\n  };\n};\n\nexport default connect(mapStateToProps, {\n  evaluateClaim,\n  verifyDocument,\n  PushPopupAlert,\n})(AdminClaimDocView);\n","import React, { Fragment, useEffect, useState } from \"react\";\nimport { MdArrowBack } from \"react-icons/md\";\nimport { connect } from \"react-redux\";\nimport { PushPopupAlert } from \"../../../actions\";\nimport { Auth } from \"../../../actions/auth\";\nimport { getAllApplications, getAllClaims } from \"../../../actions/claiming\";\nimport {\n  getDocumentCategory,\n  getDocumentSubCategory,\n  getDocumentFields,\n} from \"../../../actions/document\";\nimport { GetAllSessionPlans } from \"../../../actions/session\";\nimport { getPositions } from \"../../../actions/settings\";\nimport { verifyAllDocument, fetchUserAccess } from \"../../../actions/users\";\nimport { PopupAlertData } from \"../../../components/Alert/Popup\";\nimport { SideNavigation } from \"../../../components/Navigation/SideNavigation\";\nimport NoResult, {\n  NoResultThemes,\n} from \"../../../components/NoResult/NoResult\";\nimport Table from \"../../../components/Table/Table\";\nimport {\n  allClaimApplicationInterface,\n  CandidateClaimInterface,\n  ClaimDecisionStatus,\n  ClaimTypesInterface,\n  PlansTypeKeys,\n  PositionAPI,\n  SessionPlanInterface,\n} from \"../../../interfaces\";\nimport { PopupAlertTheme } from \"../../../interfaces/popupAlert\";\nimport { StoreState } from \"../../../reducers\";\nimport { ClaimingReducerType } from \"../../../reducers/claiming\";\nimport { DocumentReducerInterface } from \"../../../reducers/document\";\nimport {\n  UserDocumentsInterface,\n  UserInterface,\n} from \"../../../shared/interfaces\";\nimport { getClaimById, whichClaimStatus, whichClaimType } from \"../Candidate\";\nimport ClaimHeaderTitle from \"../ClaimHeaderTitle\";\nimport AdminClaimAppView from \"./AdminClaimAppView\";\nimport AdminClaimDocView from \"./AdminClaimDocView\";\nimport AdminFilterByType, {\n  filterClaimsByClaimType,\n} from \"./AdminFilterByType\";\n\nexport const getUserDocuments = (\n  userList: UserInterface[],\n  user_id: String\n): { user: UserInterface; document: UserDocumentsInterface[] } | null => {\n  const thisUser = userList.find((item) => item.user_id === user_id);\n  if (thisUser) {\n    const thisDoc = thisUser.details.filter(\n      (item) => item.validation_status !== \"waiting\"\n    );\n    return { user: thisUser, document: thisDoc };\n  }\n  return null;\n};\n\nexport const adminDisplayClaimTitle = (\n  documentCategories: DocumentReducerInterface,\n  candidateDocuments: UserDocumentsInterface[],\n  thisClaim: CandidateClaimInterface\n): string => {\n  let result: string = \"\";\n\n  // CHECK IF CLAIM IS FOR DOCUMENTS ===============================================\n  if (thisClaim.type_key === PlansTypeKeys.DOCUMENT_VALIDATION) {\n    let thisDoc = candidateDocuments.find(\n      (item) => item.doc_id === thisClaim.claiming_on_id\n    );\n    result = thisDoc\n      ? AdminClaimGetDocTitle(documentCategories, thisDoc).main\n      : \"Document not found\";\n  }\n  // END CHECK IF CLAIM IS FOR DOCUMENTS ===============================================\n\n  return result;\n};\n\nexport const AdminClaimGetDocTitle = (\n  documentCategories: DocumentReducerInterface,\n  doc: UserDocumentsInterface\n): { category: string; sub_category: string; field: string; main: string } => {\n  let DocCategory: string = \"\",\n    DocSubCategory: string = \"\",\n    DocField: string = \"\",\n    DocTitle: string = \"\";\n  if (\n    doc.sub_category_id &&\n    doc.sub_category_id.length > 0 &&\n    documentCategories.documentSubCategory\n  ) {\n    DocTitle = documentCategories.documentSubCategory.filter(\n      (c) => c.user_detail_subcategory_id === doc.sub_category_id\n    )[0].title;\n    DocSubCategory = DocTitle;\n  } else if (\n    doc.category_id.length > 0 &&\n    documentCategories.documentCategory\n  ) {\n    DocTitle = documentCategories.documentCategory.filter(\n      (c) => c.user_detail_category_id === doc.category_id\n    )[0].title;\n    DocCategory = DocTitle;\n  }\n  if (\n    doc.category_subcategory_data.length > 0 &&\n    documentCategories.documentFields\n  ) {\n    DocField = documentCategories.documentFields.filter(\n      (c) => c._id === doc.category_subcategory_data\n    )[0].title;\n    DocTitle += \" in \" + DocField;\n  }\n\n  return {\n    category: DocCategory,\n    sub_category: DocSubCategory,\n    field: DocField,\n    main: DocTitle,\n  };\n};\n\nexport const getApplicationById = (\n  allApplications: allClaimApplicationInterface[] | null,\n  systemPositions: PositionAPI[] | null,\n  application_id: String\n): {\n  application: allClaimApplicationInterface;\n  position: PositionAPI;\n} | null => {\n  if (allApplications) {\n    let thisApplication = allApplications.find(\n      (item) => item._id === application_id\n    );\n    if (thisApplication && systemPositions) {\n      let thisPosition = systemPositions.find(\n        (item) => item.position_id === thisApplication!.position\n      );\n      if (thisPosition) {\n        return { application: thisApplication, position: thisPosition };\n      }\n    }\n  }\n  return null;\n};\n\ntype AppProps = {\n  auth: Auth;\n  application_sessions: SessionPlanInterface[] | null;\n  claiming: ClaimingReducerType;\n  documentReducer: DocumentReducerInterface;\n  userList: UserInterface[];\n  systemPositions: PositionAPI[] | null;\n  getPositions: Function;\n  getAllApplications: Function;\n  getAllClaims: Function;\n  GetAllSessionPlans: Function;\n  getDocumentCategory: Function;\n  getDocumentSubCategory: Function;\n  getDocumentFields: Function;\n  verifyAllDocument: Function;\n  fetchUserAccess: Function;\n  PushPopupAlert: (alert: PopupAlertData) => void;\n};\n\nconst Index: React.FC<AppProps> = (props) => {\n  const [thisPeriod, setThisPeriod] = useState<SessionPlanInterface | null>(\n    null\n  );\n  const [loading, setLoading] = useState<boolean>(true);\n  const [loadingSession, setLoadingSession] = useState<boolean>(true);\n  const [periodChanged, setPeriodChanged] = useState<boolean>(false);\n  const [loadingPosition, setLoadingPosition] = useState<boolean>(true);\n  const [loadingApplications, setLoadingApplications] = useState<boolean>(true);\n  const [loadingClaims, setLoadingClaims] = useState<boolean>(true);\n  const [loadingDocuments, setLoadingDocuments] = useState<boolean>(true);\n  const [loadingClarifications, setLoadingClarifications] =\n    useState<boolean>(true);\n  const [loadingUsers, setLoadingUsers] = useState(true);\n  const [loadingFields, setLoadingFields] = useState<boolean>(true);\n  const [viewClaim, setViewClaim] = useState<boolean>(false);\n  const [claimId, setClaimId] = useState<string | null>(null);\n  const [claimType, setClaimType] = useState<string | null>(null);\n  const [candidateId, setCandidateId] = useState<string | null>(null);\n\n  // FOR FORM ================\n  const [viewImage, setViewImage] = useState<boolean>(true);\n  const [loadingRequest, setLoadingRequest] = useState<boolean>(false);\n  const [actionTaken, setActionTaken] = useState<ClaimDecisionStatus | null>(\n    null\n  );\n  const [responseMsg, setResponseMsg] = useState<string>(\"\");\n  const [formError, setFormError] = useState<{\n    element: string;\n    msg: string;\n  } | null>(null);\n\n  useEffect(() => {\n    // LOADING APPLICATION SESSION ====================================\n    if (props.application_sessions === null) {\n      props.GetAllSessionPlans((status: boolean, msg: string) => {\n        if (!status) {\n          setLoadingSession(false);\n          setLoading(false);\n          if (msg.length) {\n            props.PushPopupAlert({\n              title: msg,\n              theme: PopupAlertTheme.danger,\n            });\n          }\n        }\n      });\n    } else if (loadingSession) {\n      setLoading(false);\n      setLoadingSession(false);\n    }\n\n    // SETTING ACTIVE SESSION ==========================\n    if (thisPeriod === null && !loadingSession && props.application_sessions) {\n      let thisSession = props.application_sessions.find(\n        (item) => item.is_active === true\n      );\n      setThisPeriod(\n        thisSession\n          ? thisSession\n          : props.application_sessions[props.application_sessions.length - 1]\n      );\n    }\n\n    // LOADING DOCUMENT CATEGORIES ==========================\n    if (!props.documentReducer.documentCategory && loadingDocuments) {\n      props.getDocumentCategory();\n      setLoadingDocuments(false);\n    } else if (loadingDocuments) {\n      setLoadingDocuments(false);\n    }\n    // LOADING DOCUMENT CLARIFICATIONS ==========================\n    if (!props.documentReducer.documentSubCategory && loadingClarifications) {\n      props.getDocumentSubCategory();\n      setLoadingClarifications(false);\n    } else if (loadingClarifications) {\n      setLoadingClarifications(false);\n    }\n    // LOADING DOCUMENT FIELDS ==========================\n    if (!props.documentReducer.documentFields && loadingFields) {\n      props.getDocumentFields();\n      setLoadingFields(false);\n    } else if (loadingFields) {\n      setLoadingFields(false);\n    }\n\n    // LOADING CLAIMING OF CURRENT CANDIDATES ================================\n    if (props.claiming.allClaims === null && thisPeriod !== null) {\n      props.getAllClaims(\n        2,\n        thisPeriod.session_plan_id,\n        (status: boolean, msg: string) => {\n          !status && setLoadingClaims(status);\n          if (status === false && msg.length) {\n            props.PushPopupAlert({\n              title: msg,\n              theme: PopupAlertTheme.danger,\n            });\n          }\n        }\n      );\n    } else if (thisPeriod && loadingClaims) {\n      setLoadingClaims(false);\n    }\n\n    // LOADING CLAIMING OF CURRENT CANDIDATES ================================\n    if (props.claiming.allApplications === null && thisPeriod !== null) {\n      props.getAllApplications(\n        thisPeriod.session_plan_id,\n        (status: boolean, msg: string) => {\n          !status && setLoadingApplications(status);\n          if (status === false && msg.length) {\n            props.PushPopupAlert({\n              title: msg,\n              theme: PopupAlertTheme.danger,\n            });\n          }\n        }\n      );\n    } else if (thisPeriod && loadingApplications) {\n      setLoadingApplications(false);\n    }\n\n    if (!props.userList.length && loadingUsers) {\n      setLoadingUsers(false);\n      props.fetchUserAccess();\n    } else if (loadingUsers) {\n      setLoadingUsers(false);\n    }\n\n    if (props.systemPositions === null) {\n      props.getPositions((status: boolean, msg: string) => {\n        setLoadingPosition(status);\n        console.log({ status: status, msg: msg });\n        if (msg.length) {\n          props.PushPopupAlert({\n            title: msg,\n            theme: PopupAlertTheme.danger,\n          });\n        }\n      });\n    } else if (loadingPosition) {\n      setLoadingPosition(false);\n    }\n  }, [\n    loadingApplications,\n    loadingClaims,\n    loadingClarifications,\n    loadingDocuments,\n    loadingFields,\n    loadingPosition,\n    loadingSession,\n    loadingUsers,\n    props,\n    thisPeriod,\n  ]);\n\n  if (loading || props.application_sessions === null) {\n    return (\n      <div className=\"text-center mt-7 font-bold text-4xl text-gray-400 animate-pulse\">\n        Loading Data...\n      </div>\n    );\n  }\n\n  const displayClaimName = (\n    thisClaim: CandidateClaimInterface\n  ): string | JSX.Element => {\n    let result: string = thisClaim.claiming_on_id;\n    if (thisClaim.type_key === PlansTypeKeys.DOCUMENT_VALIDATION) {\n      if (loadingUsers)\n        return <div className={`h-6 bg-gray-300 rounded w-2/3`}></div>;\n      result = getUserDocuments(props.userList, thisClaim.user)\n        ? getUserDocuments(props.userList, thisClaim.user)!.user.user_info\n            .fname +\n          \" \" +\n          getUserDocuments(props.userList, thisClaim.user)!.user.user_info.lname\n        : \"-\";\n    }\n    if (thisClaim.type_key === PlansTypeKeys.APPLICATION) {\n      if (\n        loadingApplications ||\n        loadingPosition ||\n        props.systemPositions === null ||\n        props.claiming.allApplications === null\n      ) {\n        return <div className={`h-6 bg-gray-300 rounded w-2/3`}></div>;\n      } else if (props.claiming.allApplications) {\n        result = getUserDocuments(props.userList, thisClaim.user)\n          ? getUserDocuments(props.userList, thisClaim.user)!.user.user_info\n              .fname +\n            \" \" +\n            getUserDocuments(props.userList, thisClaim.user)!.user.user_info\n              .lname\n          : \"-\";\n      }\n    }\n\n    return result;\n  };\n\n  const displayClaimTitle = (\n    thisClaim: CandidateClaimInterface\n  ): string | JSX.Element => {\n    let result: string = thisClaim.claiming_on_id;\n    if (thisClaim.type_key === PlansTypeKeys.DOCUMENT_VALIDATION) {\n      if (loadingUsers)\n        return <div className={`h-6 bg-gray-300 rounded w-2/3`}></div>;\n      result = getUserDocuments(props.userList, thisClaim.user)\n        ? adminDisplayClaimTitle(\n            props.documentReducer,\n            getUserDocuments(props.userList, thisClaim.user)!.document,\n            thisClaim\n          )\n        : \"Document not found\";\n    }\n    if (thisClaim.type_key === PlansTypeKeys.APPLICATION) {\n      if (loadingApplications || loadingPosition) {\n        return <div className={`h-6 bg-gray-300 rounded w-2/3`}></div>;\n      } else if (props.claiming.allApplications) {\n        let thisApplication = props.claiming.allApplications.find(\n          (item) => item._id === thisClaim.claiming_on_id\n        );\n        if (\n          thisApplication &&\n          props.claiming.allApplications &&\n          props.systemPositions\n        ) {\n          let thisPosition = props.systemPositions.find(\n            (item) => item.position_id === thisApplication!.position\n          );\n          if (thisPosition) {\n            result = thisPosition.position_title;\n          } else {\n            result = \"Application not found\";\n          }\n        }\n      }\n    }\n\n    return result;\n  };\n\n  const tableData = (): JSX.Element[] => {\n    if (\n      props.claiming.allClaims &&\n      props.claiming.claimTypes &&\n      !loadingDocuments &&\n      !loadingSession &&\n      !loadingUsers &&\n      !loadingClaims\n    ) {\n      // CHECK IF THERE IS NO CLAIM ========================================\n      if (\n        filterClaimsByClaimType(\n          props.claiming.allClaims,\n          props.claiming.selectedClaimType\n        ).length <= 0\n      ) {\n        return [\n          <tr\n            className=\"border-b border-gray-200 group hover:bg-gray-50 cursor-pointer\"\n            key=\"key3201\"\n          >\n            <td className=\"px-3 py-1\">\n              <NoResult\n                theme={NoResultThemes.Light}\n                value={\"No claim found!\"}\n              />\n            </td>\n          </tr>,\n        ];\n      }\n      // END CHECK IF THERE IS NO CLAIM ========================================\n\n      return filterClaimsByClaimType(\n        props.claiming.allClaims,\n        props.claiming.selectedClaimType\n      ).map((claim, index) => (\n        <tr\n          className=\"border-b border-gray-200 group hover:bg-gray-50 cursor-pointer\"\n          key={index + claim.id}\n          onClick={() => {\n            setViewClaim(true);\n            setClaimId(claim.id);\n            setCandidateId(claim.user);\n            setClaimType(whichClaimType(claim) ? whichClaimType(claim)! : null);\n          }}\n        >\n          <td className=\"px-3 py-1\">{index + 1}</td>\n          <td className=\"px-3 py-1 whitespace-nowrap\">\n            {displayClaimName(claim)}\n          </td>\n          <td className=\"px-3 py-1 whitespace-nowrap\">\n            {displayClaimTitle(claim)}\n          </td>\n          <td className=\"px-3 py-1 text-center whitespace-nowrap\">\n            {whichClaimType(claim) ? whichClaimType(claim)! : \"-\"}\n          </td>\n          <td className=\"px-3 py-1 text-center whitespace-nowrap\">\n            <span\n              className={`inline-block rounded-full duration-300 text-xs font-semibold px-3 py-1 ${\n                whichClaimStatus(claim).classes\n              }`}\n            >\n              {whichClaimStatus(claim).status}\n            </span>\n          </td>\n          <td className=\"px-3 py-1 text-center whitespace-nowrap\">\n            <button className=\"btn bg-blue-500 text-white group-hover:bg-blue-600\">\n              View\n            </button>\n          </td>\n        </tr>\n      ));\n    }\n\n    return [\n      <tr key={43243} className=\"border-b border-gray-200\">\n        <td className=\"p-3 text-center whitespace-nowrap\">\n          <div className=\"w-full h-4 rounded bg-gray-200 animate__animated animate__pulse animate__delay-5s animate__infinite\"></div>\n        </td>\n        <td className=\"p-3 text-center whitespace-nowrap\">\n          <div className=\"w-full h-4 rounded bg-gray-200 animate__animated animate__pulse animate__delay-5s animate__infinite\"></div>\n        </td>\n        <td className=\"p-3 text-center whitespace-nowrap\">\n          <div className=\"w-full h-4 rounded bg-gray-200 animate__animated animate__pulse animate__delay-5s animate__infinite\"></div>\n        </td>\n        <td className=\"p-3 text-center whitespace-nowrap\">\n          <div className=\"w-full h-4 rounded bg-gray-200 animate__animated animate__pulse animate__delay-5s animate__infinite\"></div>\n        </td>\n      </tr>,\n      <tr key={43243343} className=\"border-b border-gray-200\">\n        <td className=\"p-3 text-center whitespace-nowrap\">\n          <div className=\"w-full h-4 rounded bg-gray-200 animate__animated animate__pulse animate__delay-5s animate__infinite\"></div>\n        </td>\n        <td className=\"p-3 text-center whitespace-nowrap\">\n          <div className=\"w-full h-4 rounded bg-gray-200 animate__animated animate__pulse animate__delay-5s animate__infinite\"></div>\n        </td>\n        <td className=\"p-3 text-center whitespace-nowrap\">\n          <div className=\"w-full h-4 rounded bg-gray-200 animate__animated animate__pulse animate__delay-5s animate__infinite\"></div>\n        </td>\n        <td className=\"p-3 text-center whitespace-nowrap\">\n          <div className=\"w-full h-4 rounded bg-gray-200 animate__animated animate__pulse animate__delay-5s animate__infinite\"></div>\n        </td>\n      </tr>,\n      <tr key={4327543} className=\"border-b border-gray-200\">\n        <td className=\"p-3 text-center whitespace-nowrap\">\n          <div className=\"w-full h-4 rounded bg-gray-200 animate__animated animate__pulse animate__delay-5s animate__infinite\"></div>\n        </td>\n        <td className=\"p-3 text-center whitespace-nowrap\">\n          <div className=\"w-full h-4 rounded bg-gray-200 animate__animated animate__pulse animate__delay-5s animate__infinite\"></div>\n        </td>\n        <td className=\"p-3 text-center whitespace-nowrap\">\n          <div className=\"w-full h-4 rounded bg-gray-200 animate__animated animate__pulse animate__delay-5s animate__infinite\"></div>\n        </td>\n        <td className=\"p-3 text-center whitespace-nowrap\">\n          <div className=\"w-full h-4 rounded bg-gray-200 animate__animated animate__pulse animate__delay-5s animate__infinite\"></div>\n        </td>\n      </tr>,\n    ];\n  };\n\n  const onPeriodChange = (period_id: string) => {\n    setPeriodChanged(true);\n    props.getAllClaims(2, period_id, (status: boolean, msg: string) => {\n      !status && setPeriodChanged(false);\n      if (status === false && msg.length) {\n        props.PushPopupAlert({\n          title: msg,\n          theme: PopupAlertTheme.danger,\n        });\n      }\n    });\n  };\n\n  return (\n    <Fragment>\n      {/* {props.claiming.myClaims} */}\n      {/* SIDE NAVIGATION */}\n      {!viewClaim && (\n        <SideNavigation>\n          {/* FILTER SECTION */}\n          <AdminFilterByType loadingClaims={loadingClaims} />\n          {/* END FILTER SECTION */}\n        </SideNavigation>\n      )}\n      {/* END SIDE NAVIGATION */}\n\n      {/* CLAIM TITLE ===================================== */}\n      {!viewClaim && (\n        <ClaimHeaderTitle\n          headerTitle={`${\n            props.claiming.selectedClaimType === \"all\"\n              ? \"All\"\n              : props.claiming.selectedClaimType ===\n                PlansTypeKeys.DOCUMENT_VALIDATION\n              ? \"Documents\"\n              : props.claiming.selectedClaimType === PlansTypeKeys.APPLICATION\n              ? \"Applications\"\n              : props.claiming.selectedClaimType === PlansTypeKeys.EXAMINATION\n              ? \"Exam\"\n              : props.claiming.selectedClaimType ===\n                PlansTypeKeys.MARKS_PUBLICATION\n              ? \"Marks publication\"\n              : props.claiming.selectedClaimType ===\n                PlansTypeKeys.PLACEMENT_TRANSFER\n              ? \"Placements\"\n              : \"\"\n          } Claiming`}\n          loading={loading}\n          loadingSession={loadingSession}\n          thisPeriod={thisPeriod}\n          setThisPeriod={setThisPeriod}\n          setLoadingSession={setLoadingSession}\n          application_sessions={props.application_sessions}\n          onPeriodChange={onPeriodChange}\n          periodChanged={periodChanged}\n        />\n      )}\n      {/* END CLAIM TITLE ===================================== */}\n\n      {!viewClaim && (\n        <section className=\"bg-white w-full p-1\">\n          <Table\n            columns={[\n              { columnTitle: \"\", alignText: \"left\", padding: \"p-3\" },\n              { columnTitle: \"\", alignText: \"left\", padding: \"p-3\" },\n              {\n                columnTitle: \"\",\n                alignText: \"left\",\n                padding: \"p-3\",\n              },\n              {\n                columnTitle: \"\",\n                alignText: \"left\",\n                padding: \"p-3\",\n              },\n              { columnTitle: \"\", alignText: \"left\", padding: \"p-3\" },\n            ]}\n            hideColumns={true}\n            rows={tableData}\n            pagination={true}\n            search={true}\n            thColor=\"gray\"\n            loading={loadingClaims}\n          />\n        </section>\n      )}\n\n      {/* view claim */}\n      {viewClaim &&\n        candidateId &&\n        getUserDocuments(props.userList, candidateId) &&\n        props.claiming.allClaims &&\n        claimId &&\n        getClaimById(props.claiming.allClaims, claimId) &&\n        props.claiming.claimTypes && (\n          <section className=\"bg-white w-full p-1 my-4\">\n            {/* VIEW CLAIM HEADER =============================== */}\n            <section className=\"flex items-center gap-2 py-2 border-b\">\n              <button\n                className={`ml-3 bg-gray-50 hover:bg-blue-100 rounded-full px-1 py-1 focus:outline-none ${\n                  loadingRequest ? \"cursor-not-allowed\" : \"cursor-pointer\"\n                } animate__animated animate__fadeIn`}\n                disabled={loadingRequest}\n                onClick={() => {\n                  setViewClaim(false);\n                  setViewImage(true);\n                  setLoadingRequest(false);\n                  setActionTaken(null);\n                  setResponseMsg(\"\");\n                  setFormError(null);\n                }}\n              >\n                <MdArrowBack className=\"w-7 h-7\" />\n              </button>\n              {/* <div className={`text-blue-600 font-extrabold text-2xl px-2`}>\n                Positions\n              </div> */}\n            </section>\n            {/* END VIEW CLAIM HEADER =============================== */}\n\n            <section className=\"my-2\">\n              {/* FOR DOCUMENT ========================== */}\n              {claimType &&\n                claimType.toLocaleLowerCase() ===\n                  ClaimTypesInterface.DOCUMENT.toLocaleLowerCase() && (\n                  <div>\n                    {getUserDocuments(\n                      props.userList,\n                      candidateId\n                    )!.document.find(\n                      (item) =>\n                        item.doc_id ===\n                        getClaimById(props.claiming.allClaims!, claimId)!\n                          .claiming_on_id\n                    ) ? (\n                      <AdminClaimDocView\n                        thisDoc={\n                          getUserDocuments(\n                            props.userList,\n                            candidateId\n                          )!.document.find(\n                            (item) =>\n                              item.doc_id ===\n                              getClaimById(props.claiming.allClaims!, claimId)!\n                                .claiming_on_id\n                          )!\n                        }\n                        documentCategories={props.documentReducer}\n                        thisClaim={\n                          getClaimById(props.claiming.allClaims, claimId)!\n                        }\n                        userList={props.userList}\n                        claimTypes={props.claiming.claimTypes}\n                        viewImage={viewImage}\n                        setViewImage={setViewImage}\n                        loadingRequest={loadingRequest}\n                        setLoadingRequest={setLoadingRequest}\n                        actionTaken={actionTaken}\n                        setActionTaken={setActionTaken}\n                        responseMsg={responseMsg}\n                        setResponseMsg={setResponseMsg}\n                        formError={formError}\n                        setFormError={setFormError}\n                        candidateId={candidateId}\n                      />\n                    ) : (\n                      <NoResult\n                        theme={NoResultThemes.Dark}\n                        value={\"Document not found\"}\n                      />\n                    )}\n                  </div>\n                )}\n\n              {/* FOR APPLICATION ========================== */}\n              {claimType &&\n                claimType.toLocaleLowerCase() ===\n                  ClaimTypesInterface.APPLICATION.toLocaleLowerCase() && (\n                  <div>\n                    {getApplicationById(\n                      props.claiming.allApplications,\n                      props.systemPositions,\n                      getClaimById(props.claiming.allClaims, claimId)!\n                        .claiming_on_id\n                    ) ? (\n                      props.systemPositions && (\n                        <AdminClaimAppView\n                          thisApplication={\n                            getApplicationById(\n                              props.claiming.allApplications,\n                              props.systemPositions,\n                              getClaimById(props.claiming.allClaims, claimId)!\n                                .claiming_on_id\n                            )!.application\n                          }\n                          thisPosition={\n                            getApplicationById(\n                              props.claiming.allApplications,\n                              props.systemPositions,\n                              getClaimById(props.claiming.allClaims, claimId)!\n                                .claiming_on_id\n                            )!.position\n                          }\n                          documentCategories={props.documentReducer}\n                          thisClaim={\n                            getClaimById(props.claiming.allClaims, claimId)!\n                          }\n                          userList={props.userList}\n                          claimTypes={props.claiming.claimTypes}\n                          systemPositions={props.systemPositions}\n                        />\n                      )\n                    ) : (\n                      <NoResult\n                        theme={NoResultThemes.Dark}\n                        value={\"Application not found\"}\n                      />\n                    )}\n                  </div>\n                )}\n            </section>\n          </section>\n        )}\n      {/* end view claim */}\n    </Fragment>\n  );\n};\n\nconst mapStateToProps = ({\n  auth,\n  system_settings,\n  sessionPlan,\n  claiming,\n  document,\n  users,\n}: StoreState): {\n  auth: Auth;\n  application_sessions: SessionPlanInterface[] | null;\n  systemPositions: PositionAPI[] | null;\n  claiming: ClaimingReducerType;\n  documentReducer: DocumentReducerInterface;\n  userList: UserInterface[];\n} => {\n  return {\n    auth: auth,\n    application_sessions: sessionPlan.allSessionPlans,\n    systemPositions: system_settings.systemPositions,\n    claiming,\n    documentReducer: document,\n    userList: users,\n  };\n};\n\nexport const AdminClaim = connect(mapStateToProps, {\n  getAllClaims,\n  getAllApplications,\n  GetAllSessionPlans,\n  getDocumentCategory,\n  getDocumentSubCategory,\n  getDocumentFields,\n  verifyAllDocument,\n  fetchUserAccess,\n  getPositions,\n  PushPopupAlert,\n})(Index);\n","import {\n  ApplicationStates,\n  SESSION_PLAN_KEYS,\n} from \"../interfaces/application\";\n\nexport interface SystemSettingsInterface {\n  system_setting_id: string;\n  name: string;\n  key: string;\n  status: \"enabled\" | \"disabled\";\n}\n\nexport interface ApplicationSessionInterface {\n  is_active: boolean;\n  application_session_name: string;\n  period: string;\n  application_start_date: string;\n  application_end_date: string;\n  createdAt: string;\n  updatedAt: string;\n  application_session_id: string;\n}\n\nexport interface UserInfoInterface {\n  document_type?: string;\n  issue_number?: string;\n  date_of_issue?: string;\n  date_of_expiry?: string;\n  place_of_issue?: string;\n  application_number?: string;\n  fname: string;\n  lname: string;\n  sex: \"M\" | \"F\";\n  father_names: string;\n  mother_names: string;\n  date_of_birth: string;\n  place_of_birth?: string;\n  country_of_birth: string;\n  village_id: string;\n  village: string;\n  cell: string;\n  sector: string;\n  district: string;\n  province: string;\n  photo?: string;\n  civil_status?: string;\n  spouse?: any;\n  status?: string;\n}\n\nexport interface UserInterface {\n  user_id: string;\n  n_id?: string;\n  phone_number: string;\n  email: string;\n  password?: string;\n  user_info: UserInfoInterface;\n  details: UserDocumentsInterface[];\n  user_photo?: string;\n  default_access: RoleToUserInterface | null;\n  custome_access: CustomeAccessInterface | null;\n  is_active?: boolean;\n}\n\nexport interface CandidateDetailsInterface_old {\n  category_id: string;\n  sub_category_id: string;\n  category_subcategory_data: string;\n  title: string;\n  description: string;\n  files: string;\n  start_year: string;\n  end_year: string;\n  school: string;\n  email: string;\n  names: string;\n  phone_number: string;\n  company: string;\n  year: string;\n  doc_id: string;\n  validation_status: \"waiting\" | \"approved\" | \"rejected\";\n  validated_by: {\n    user_id: string;\n    comment: string;\n    validation_status: \"waiting\" | \"approved\" | \"rejected\";\n    date: string;\n  } | null;\n  doc_history_status: string;\n  get_in_date: string;\n  approved?: string;\n}\n\nexport interface CandidateDetailsInterface {\n  category_id: string;\n  sub_category_id: string;\n  category_subcategory_data: string;\n  title: string;\n  description: string;\n  files: string;\n  start_year: string;\n  end_year: string;\n  school: string;\n  email: string;\n  names: string;\n  phone_number: string;\n  company: string;\n  year: string;\n  doc_id: string;\n  validation_status: \"waiting\" | \"approved\" | \"rejected\";\n  validated_by: {\n    user_id: string;\n    comment: string;\n    validation_status: \"waiting\" | \"approved\" | \"rejected\";\n    date: string;\n  } | null;\n  doc_history_status: string;\n  get_in_date: string;\n  approved?: string;\n}\n\nexport interface DocInterface {\n  category_subcategory_data: string;\n  school: string;\n  category_id: string;\n  company: string;\n  description: string;\n  email: string;\n  end_year: string;\n  files: string;\n  names: string;\n  phone_number: string;\n  start_year: string;\n  sub_category_id: string;\n  title: string;\n  year: string;\n  approved: string;\n  doc_id: string;\n  validated_by: null;\n  validation_status: string;\n  doc_history_status: string;\n  get_in_date: string;\n  date_modefied: string;\n}\n\nexport interface CandidateRoleToUserInterface {\n  key: string;\n  status: number;\n  access: boolean;\n  assigned_date: string;\n}\n\nexport interface CandidatesInterface_old {\n  user_id: string;\n  n_id: string;\n  fname: string;\n  lname: string;\n  phone_number: string;\n  district: string;\n  email: string;\n  details: CandidateDetailsInterface[];\n}\n\nexport interface ApplicationExamsInterface {\n  course_id: string;\n  proctoring_type: string;\n  center_id: string;\n  room_id: string;\n}\n\nexport interface CandidatesInterface {\n  user_id: string;\n  n_id: string;\n  fname: string;\n  lname: string;\n  phone_number: string;\n  district: string;\n  email: string;\n  details: CandidateDetailsInterface[];\n  exams: ApplicationExamsInterface[];\n}\n\nexport interface CustomeAccessInterface {\n  access: AccessTaskInterface[];\n  user_id: string;\n  custome_user_access_id: string;\n}\n\nexport interface UserDocumentsInterface {\n  category_id: string;\n  sub_category_id: string;\n  category_subcategory_data: string;\n  title: string;\n  description: string;\n  files: string;\n  start_year: string;\n  end_year: string;\n  school: { title: string; school_id: string | null };\n  email: string;\n  names: string;\n  phone_number: string;\n  company: string;\n  year: string;\n  approved: \"waiting\" | \"approved\" | \"rejected\";\n  doc_id: string;\n  validation_status: \"waiting\" | \"approved\" | \"rejected\";\n  validated_by: {\n    user_id: string;\n    commet: string;\n    validation_status: \"waiting\" | \"approved\" | \"rejected\";\n    date: string;\n  };\n}\n\nexport interface SystemUserRoleInterface {\n  system_user_role_id: string;\n  role: string;\n  status: boolean;\n  access: AccessTaskInterface[];\n  district_required?: boolean;\n  school_required?: boolean;\n  room_required?: boolean;\n  education_institution_required?: boolean;\n  school_id: string;\n  district_id: string;\n}\n\nexport interface CustomeUserAccessInterface {\n  user_id: string;\n  access?: [\n    {\n      id: string;\n      task: string;\n      key: string;\n      permitted: {\n        create: boolean;\n        delete: boolean;\n        update: boolean;\n        view: boolean;\n      };\n    }\n  ];\n}\n\nexport interface PermissionInterface {\n  create: boolean;\n  view: boolean;\n  update: boolean;\n  delete: boolean;\n}\n\nexport interface AccessTaskInterface {\n  id: string;\n  task: string;\n  key: string;\n  permitted: PermissionInterface;\n}\n\nexport interface RoleToUserInterface {\n  system_user_role_id: string;\n  role: string;\n  access: AccessTaskInterface[];\n  status?: number;\n  school_id: string;\n  district_id: string;\n  room_id: string;\n  education_institution_id: string;\n}\n\nexport interface RoomsInterface {\n  occupied: number;\n  isUsed: string;\n  room_type: string;\n  room_number: number;\n  capacity: number;\n  examination_center_room_id: string;\n}\n\nexport interface CentersInterface {\n  rooms: RoomsInterface[];\n  isUsed: boolean;\n  examination_center_id: string;\n  center_name: string;\n}\n\nexport interface DistrictInterface {\n  centers: CentersInterface[];\n  district_name: string;\n  district_id: string;\n}\n\nexport interface RoomLocationInterface {\n  districts: DistrictInterface[];\n  province_name: string;\n  province_id: string;\n}\n\nexport interface AssignRoleToUserActionInterface {\n  user_id: string;\n  data: RoleToUserInterface;\n}\n\nexport interface AssignRoleToUserActionInterface {\n  user_id: string;\n  data: RoleToUserInterface;\n}\n\nexport enum PostRequestStatusInterface {\n  INITIATED = \"initiated\",\n  CONFIRMED = \"confirmed\",\n  RECEIVED = \"received\",\n}\n\nexport interface PostSchoolInterface_old {\n  post_at_school_id: string;\n  school_id: string;\n  position_id: string;\n  district_id: string;\n  needed_posts: number;\n  confirmed_posts?: number;\n  occupied_posts?: number;\n  requested_by: string;\n  confirmed_by?: string;\n  received_posts?: number;\n  request_date: Date;\n  approval_date?: Date;\n  post_at_school_status: PostRequestStatusInterface;\n}\n\nexport interface PostSchoolInterface {\n  requested_post_id: string;\n  school_id: string;\n  position_id: string;\n  district_id: string;\n  needed_posts: number;\n  male_number: number;\n  female_number: number;\n  description: string;\n  confirmed_posts?: number;\n  occupied_posts?: number;\n  requested_by: string;\n  confirmed_by?: string;\n  received_posts?: number;\n  request_date: Date;\n  approval_date?: Date;\n  requested_post_status: PostRequestStatusInterface;\n}\n\nexport interface SchoolInfoInterface {\n  school_id: string;\n  school_title: string;\n  district_id: string;\n  number_of_females?: number;\n  number_of_males?: number;\n}\n\nexport interface SchoolsInterface {\n  _id: string;\n  status: boolean;\n  school_name: string;\n  district_id: string;\n  education_category_id: string;\n}\n\nexport interface SchoolLevelInterface {\n  school_level_id: string;\n  school_level_name: string;\n  description: string;\n  education_institute: string[];\n  courses: [];\n}\n\nexport interface CourseInterface {\n  course_name: string;\n  course_code: string;\n  description: string;\n  school_levels: string[];\n  course_id: string;\n}\n\nexport interface EducationInstituteInterface {\n  education_category_title: string;\n  school_levels: [];\n  description: string;\n  education_institute_id: string;\n}\n\nexport interface PositionRequirementInterface {\n  user_detail_category_id: string;\n  title: string;\n  user_required_docs: {\n    user_detail_subcategory_id: string;\n    title: string;\n  }[];\n}\n\nexport interface PositionInterface {\n  courses: CourseInterface[];\n  position_title: string;\n  description: string;\n  school_level_id: SchoolLevelInterface;\n  education_institute_id: EducationInstituteInterface;\n  requirements: PositionRequirementInterface[];\n  position_id: string;\n}\n\nexport enum DocumentAttributesInterface {\n  \"Title\" = \"title\",\n  \"Description\" = \"description\",\n  \"Files\" = \"files\",\n  \"email\" = \"email\",\n  \"names\" = \"names\",\n  \"phone_number\" = \"phone_number\",\n  \"position\" = \"position\",\n  \"relation\" = \"relation\",\n  \"src\" = \"src\",\n  \"year\" = \"year\",\n  \"company\" = \"company\",\n  \"category_subcategory_data\" = \"category_subcategory_data\",\n  \"others\" = \"others\",\n  \"start_year\" = \"start_year\",\n  \"end_year\" = \"end_year\",\n  \"School\" = \"School\",\n}\n\nexport enum DocValidationStatusInterface {\n  APPROVED = \"approved\",\n  REJECTED = \"rejected\",\n}\n\nexport interface DocumentCategoryInterface {\n  user_detail_category_id: string;\n  title: string;\n  description: string;\n  fields: DocumentAttributesInterface[];\n}\n\nexport interface DocumentSubCategoryInterface {\n  category_id: string;\n  title: string;\n  description: string;\n  user_detail_subcategory_id: string;\n}\n\nexport interface DocumentFieldsInterface {\n  _id: string;\n  category_id: string;\n  subcategory_id: string | null;\n  title: string;\n  description: string;\n  others: [];\n}\n\n// export interface DistrictInterface {\n//   centers: string[];\n//   district_name: string;\n//   district_id: string;\n// }\n\nexport interface ApplicationAssessmentInterface {\n  application_id: string;\n  user_id: string;\n  application_session: string;\n  application_status: string;\n  n_id: string;\n  phone_number: string;\n  email: string;\n  fname: string;\n  lname: string;\n  sex: \"M\" | \"F\";\n  district: string;\n  position: PositionApplicationInterface;\n  details: CandidateDetailsInterface[];\n  createdAt: string;\n  updatedAt: string;\n}\n\nexport interface AdminApplicationsToPrintInterface {\n  application_id: number;\n  names: string;\n  gender?: string;\n  national_id?: string;\n  phone?: string;\n  email?: string;\n  position: string;\n  education_category?: string;\n  application_session?: string;\n  district?: string;\n  date?: string;\n  decision?: ApplicationStates;\n}\n\nexport interface PositionApplicationInterface {\n  courses: string[];\n  position_title: string;\n  description: string;\n  school_level_id: string;\n  education_institute_id: string;\n  requirements: PositionRequirementInterface[];\n  position_id: string;\n}\n\nexport interface PositionRequirementInterface {\n  user_detail_category_id: string;\n  title: string;\n  user_required_docs: {\n    user_detail_subcategory_id: string;\n    title: string;\n  }[];\n}\n\nexport interface ApplicationRequirementInterface {\n  user_detail_category_id: string;\n  title: string;\n  user_required_docs: {\n    user_detail_subcategory_id: string;\n    title: string;\n  }[];\n}\n\n// [\n//   {\n//     user_detail_category_id: \"60fc4868f485d8dd91ed321e\",\n//     user_detail_subcategory_id: \"60fc48e8f485d8dd91ed3220\",\n//     position_requirement: [\n//       {\n//         category_subcategory_data_id: \"61277ec70ea9aba1b3661643\",\n//         required: true,\n//       },\n//     ],\n//     required: true,\n//   },\n// ];\n\nexport interface PeriodInterface {\n  is_active: string;\n  application_session_name: string;\n  period: string;\n  application_start_date: string;\n  application_end_date: string;\n  createdAt: string;\n  updatedAt: string;\n  application_session_id: string;\n}\n\nexport interface LocationRoomTableInterface {\n  province_id: string;\n  province_name: string;\n  district_id: string;\n  district_name: string;\n  center_id: string;\n  center_name: string;\n  room_id: string;\n  room_name: string;\n  capacity: number;\n  occupied: number;\n}\n\nexport interface PositionRequirementsFieldInterface {\n  category_id: string;\n  category_name: string;\n  sub_category_id: string;\n  sub_category_name: string;\n  field_id: string;\n  field_name: string;\n  required: boolean;\n}\n\nexport interface ApplicationPeriodInterface {\n  _id: string;\n  application_status: ApplicationStates;\n  user_id: string;\n  position: string;\n  application_session: string;\n  exams: ApplicationExamsInterface[];\n}\n\nexport const getDocCategoryById = (\n  subDocs: DocumentCategoryInterface[],\n  docId: string\n): DocumentCategoryInterface => {\n  return subDocs.filter((doc) => doc.user_detail_category_id === docId)[0];\n};\n\nexport const getSubDocCategoryById = (\n  subDocs: DocumentSubCategoryInterface[],\n  docId: string\n): DocumentSubCategoryInterface => {\n  return subDocs.filter((doc) => doc.user_detail_subcategory_id === docId)[0];\n};\n\nexport const SESSION_PLAN_TYPES: {\n  type_id: number;\n  type_title: string;\n  type_key: SESSION_PLAN_KEYS;\n}[] = [\n  {\n    type_id: 1,\n    type_title: \"Application\",\n    type_key: SESSION_PLAN_KEYS.APPLICATION,\n  },\n  {\n    type_id: 2,\n    type_title: \"Document Validation\",\n    type_key: SESSION_PLAN_KEYS.DOCUMENT_VALIDATION,\n  },\n  {\n    type_id: 3,\n    type_title: \"Examination\",\n    type_key: SESSION_PLAN_KEYS.EXAMINATION,\n  },\n  {\n    type_id: 4,\n    type_title: \"Marks Publication\",\n    type_key: SESSION_PLAN_KEYS.MARKS_PUBLICATION,\n  },\n  {\n    type_id: 5,\n    type_title: \"Placement and Transfer\",\n    type_key: SESSION_PLAN_KEYS.PLACEMENT_TRANSFER,\n  },\n];\n","import axios from \"axios\";\nimport React, { useEffect, useState } from \"react\";\nimport { FaRegCheckCircle } from \"react-icons/fa\";\nimport { RiArrowGoBackFill } from \"react-icons/ri\";\nimport { connect } from \"react-redux\";\nimport { PushPopupAlert } from \"../../actions\";\nimport { createReClaim, DocumentClaimUser } from \"../../actions/claiming\";\nimport { fetchUserAccess } from \"../../actions/users\";\nimport {\n  CandidateClaimInterface,\n  ClaimDecisionStatus,\n  ClaimStatus,\n} from \"../../interfaces\";\nimport { PopupAlertTheme } from \"../../interfaces/popupAlert\";\nimport { StoreState } from \"../../reducers\";\nimport { DocumentReducerInterface } from \"../../reducers/document\";\nimport { capitalizeFirstLetter, isEmptyOrSpaces } from \"../../shared/dataTest\";\nimport { UserInterface } from \"../../shared/interfaces\";\nimport { API } from \"../../utils/api\";\nimport { setAxiosToken } from \"../../utils/AxiosToken\";\nimport { errorToText, showDate, timestampToDate } from \"../../utils/functions\";\nimport { getUserDocuments } from \"./Admin\";\nimport { ClaimGetDocTitle } from \"./Candidate/ClaimForm\";\n\nconst isReclaimAllowed = (thisClaim: CandidateClaimInterface): boolean => {\n  if (thisClaim.claim_level === 1) {\n    const _thisClaim = thisClaim.claims.find((item) => item.level === 1);\n    if (_thisClaim) {\n      if (_thisClaim.decision_taken_status === ClaimDecisionStatus.REJECTED) {\n        return true;\n      }\n    }\n  }\n  return false;\n};\n\nexport const isClaimEvaluated = (\n  thisClaim: CandidateClaimInterface,\n  level: number\n): boolean => {\n  const _thisClaim = thisClaim.claims.find(\n    (item) =>\n      item.level === level && item.claim_status === ClaimStatus.EVALUATED\n  );\n  if (_thisClaim) {\n    return true;\n  }\n  return false;\n};\n\ntype ClaimDocViewProps = {\n  thisDoc: DocumentClaimUser;\n  // setViewThisFile: React.Dispatch<React.SetStateAction<string>>;\n  documentCategories: DocumentReducerInterface;\n  thisClaim: CandidateClaimInterface;\n  viewImage: boolean;\n  setViewImage: React.Dispatch<React.SetStateAction<boolean>>;\n  loadingRequest: boolean;\n  setLoadingRequest: React.Dispatch<React.SetStateAction<boolean>>;\n  reClaiming: boolean;\n  setReClaiming: React.Dispatch<React.SetStateAction<boolean>>;\n  reClaimingMsg: string;\n  setReClaimingMsg: React.Dispatch<React.SetStateAction<string>>;\n  formError: {\n    element: string;\n    msg: string;\n  } | null;\n  setFormError: React.Dispatch<\n    React.SetStateAction<{\n      element: string;\n      msg: string;\n    } | null>\n  >;\n\n  // REDUX DATA =====================\n  userList: UserInterface[];\n  fetchUserAccess: Function;\n  createReClaim: Function;\n  PushPopupAlert: Function;\n};\n\nconst ClaimDocView: React.FC<ClaimDocViewProps> = (props) => {\n  const [loadingUsers, setLoadingUsers] = useState(true);\n\n  useEffect(() => {\n    if (!props.userList.length && loadingUsers) {\n      setLoadingUsers(false);\n      props.fetchUserAccess();\n    } else if (loadingUsers) {\n      setLoadingUsers(false);\n    }\n  }, [loadingUsers, props]);\n\n  const handleSubmit = async () => {\n    if (isEmptyOrSpaces(props.reClaimingMsg)) {\n      return props.setFormError({\n        element: \"comment\",\n        msg: \"Claim comment is required!\",\n      });\n    }\n    if (!props.thisClaim) {\n      return props.PushPopupAlert({\n        title: \"Claim sent successful\",\n        theme: PopupAlertTheme.warning,\n      });\n    }\n\n    props.setLoadingRequest(true);\n    try {\n      setAxiosToken();\n      const res = await axios.put<CandidateClaimInterface>(\n        `${API.CLAIMING}/user/reclaim/${props.thisClaim.id}`,\n        {\n          reason: props.reClaimingMsg,\n        }\n      );\n      console.log({ res: res.data });\n      if (res.status === 201 || res.status === 200) {\n        props.createReClaim(res.data);\n        props.PushPopupAlert({\n          title: \"Claim sent successful\",\n          theme: PopupAlertTheme.success,\n        });\n        props.setReClaimingMsg(\"\");\n        props.setReClaiming(false);\n      }\n    } catch (error) {\n      console.error({ error });\n      props.PushPopupAlert({\n        title: errorToText(error),\n        theme: PopupAlertTheme.danger,\n      });\n    }\n    props.setLoadingRequest(false);\n  };\n\n  return (\n    <section className=\"\">\n      <div className=\"w-full bg-white px-4 py-1 divide-y-2 space-y-2\">\n        {/* DOCUMENT DETAILS ==================================================== */}\n        <section className=\"flex flex-col\">\n          <div className=\"flex items-center justify-between\">\n            <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n              <span className={`italic`}>Title:</span>\n              <span className=\"text-gray-800 font-bold text-xl\">\n                {ClaimGetDocTitle(props.documentCategories, props.thisDoc).main}\n              </span>\n            </div>\n            <button\n              type=\"button\"\n              className=\"bg-blue-200 hover:bg-blue-300 text-blue-700 group-hover:text-blue-800 py-1 px-2 mr-1 rounded text-sm\"\n              onClick={() => props.setViewImage(!props.viewImage)}\n            >\n              {props.viewImage ? \"Hide\" : \"View\"}\n            </button>\n          </div>\n          <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n            <span className={`italic`}>Status:</span>\n            <span\n              className={`font-bold ${\n                props.thisClaim.previous\n                  ? props.thisClaim.previous.status === \"rejected\"\n                  : props.thisDoc.validation_status === \"rejected\"\n                  ? \"text-yellow-900\"\n                  : \"text-blue-600\"\n              } rounded px-3 py-1`}\n            >\n              {props.thisClaim.previous\n                ? capitalizeFirstLetter(props.thisClaim.previous.status)\n                : capitalizeFirstLetter(props.thisDoc.validation_status)}\n            </span>\n          </div>\n          <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n            <span className={`italic`}>Evaluated by:</span>\n            <span className=\"font-semibold\">\n              {loadingUsers ? (\n                <div className=\"w-24 h-3 rounded bg-gray-200 animate__animated animate__pulse animate__delay-5s animate__infinite\"></div>\n              ) : props.thisClaim.previous ? (\n                getUserDocuments(\n                  props.userList,\n                  props.thisClaim.previous.evaluated_by\n                ) ? (\n                  getUserDocuments(\n                    props.userList,\n                    props.thisClaim.previous.evaluated_by\n                  )!.user.user_info.fname +\n                  \" \" +\n                  getUserDocuments(\n                    props.userList,\n                    props.thisClaim.previous.evaluated_by\n                  )!.user.user_info.lname\n                ) : (\n                  \"-\"\n                )\n              ) : getUserDocuments(\n                  props.userList,\n                  props.thisDoc.validated_by.user_id\n                ) ? (\n                getUserDocuments(\n                  props.userList,\n                  props.thisDoc.validated_by.user_id\n                )!.user.user_info.fname +\n                \" \" +\n                getUserDocuments(\n                  props.userList,\n                  props.thisDoc.validated_by.user_id\n                )!.user.user_info.lname\n              ) : (\n                \"-\"\n              )}\n            </span>\n          </div>\n          <div className=\"flex items-start gap-2 text-sm text-gray-600\">\n            <span className={`italic`}>Reason:</span>\n            <span className=\"font-normal\">\n              {props.thisClaim.previous\n                ? props.thisClaim.previous.reason\n                : props.thisDoc.validated_by.comment}\n            </span>\n          </div>\n\n          {/* DISPLAY IMAGE ==================================================== */}\n          {props.viewImage && (\n            <div className=\"w-full my-1 animate__animated animate__fadeIn\">\n              <img\n                src={`${API.AUTH_FILES}/${props.thisDoc.files}`}\n                alt=\"doc file\"\n                className={`w-full animate__animated animate__fadeIn`}\n              />\n            </div>\n          )}\n          {/* END DISPLAY IMAGE ==================================================== */}\n        </section>\n        {/* END DOCUMENT DETAILS ==================================================== */}\n\n        {/* ################################################################################ */}\n\n        {/* CLAIM LEVELS DETAILS ==================================================== */}\n        {props.thisClaim.claims.length > 0 &&\n          props.thisClaim.claims.map((claim, index) => (\n            <section className=\"flex flex-col px-2 pt-3\" key={index + claim.id}>\n              {/* CLAIM COMMENT ==>> LEVEL 1 ==================================================== */}\n              <div className=\"flex flex-col items-start gap-2\">\n                <p>{claim.reason}</p>\n                <span className=\"text-gray-500 text-xs\">\n                  {showDate(claim.createdAt) +\n                    \" at \" +\n                    timestampToDate(claim.date_created).timeFR}\n                </span>\n              </div>\n\n              {/* RESPONSE OF LEVELS ======================================= */}\n              {isClaimEvaluated(props.thisClaim, claim.level) && (\n                <section className=\"mt-4\">\n                  <span className=\"text-gray-500 italic font-semibold\">\n                    Response (level {index + 1})\n                  </span>\n                  <div className=\"border-t-2\">\n                    <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n                      <span className={`italic`}>Status:</span>\n                      <span\n                        className={`font-bold ${\n                          claim.decision_taken_status ===\n                          ClaimDecisionStatus.REJECTED\n                            ? \"text-yellow-900\"\n                            : \"text-blue-600\"\n                        } rounded px-3 py-1`}\n                      >\n                        {capitalizeFirstLetter(\n                          claim.decision_taken_status.toLocaleLowerCase()\n                        )}\n                      </span>\n                    </div>\n                    <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n                      <span className={`italic`}>Evaluated by:</span>\n                      <span className=\"font-semibold\">\n                        {loadingUsers ? (\n                          <div className=\"w-24 h-3 rounded bg-gray-200 animate__animated animate__pulse animate__delay-5s animate__infinite\"></div>\n                        ) : getUserDocuments(\n                            props.userList,\n                            claim.evaluated_by\n                          ) ? (\n                          getUserDocuments(props.userList, claim.evaluated_by)!\n                            .user.user_info.fname +\n                          \" \" +\n                          getUserDocuments(props.userList, claim.evaluated_by)!\n                            .user.user_info.lname\n                        ) : (\n                          \"-\"\n                        )}\n                      </span>\n                    </div>\n                    <div className=\"flex items-start gap-2 text-sm text-gray-600\">\n                      <span className={`italic`}>Reason:</span>\n                      <span className=\"font-normal\">\n                        {claim.evaluation_comment}\n                      </span>\n                    </div>\n                  </div>\n                </section>\n              )}\n              {/* CLAIM COMMENT ==>> LEVELS ==================================================== */}\n            </section>\n          ))}\n        {/* END CLAIM LEVELS DETAILS ==================================================== */}\n      </div>\n      <section>\n        {!props.reClaiming && (\n          <div className=\"mx-4 mb-5 mt-3 flex items-center justify-between\">\n            <span\n              className={`${\n                props.thisClaim.last_claim_status === ClaimStatus.PENDING\n                  ? \"text-yellow-700\"\n                  : props.thisClaim.last_claim_status === ClaimStatus.DELETED\n                  ? \"text-red-700\"\n                  : \"text-green-700\"\n              } italic font-semibold`}\n            >\n              {capitalizeFirstLetter(\n                props.thisClaim.last_claim_status.toLocaleLowerCase()\n              )}\n            </span>\n\n            {isReclaimAllowed(props.thisClaim) && (\n              <button\n                className=\"btn btn-blue\"\n                onClick={() => props.setReClaiming(true)}\n                disabled={props.loadingRequest}\n              >\n                Reclaim\n              </button>\n            )}\n          </div>\n        )}\n        {/* right part */}\n        {props.reClaiming && (\n          <div className=\"flex flex-col md:flex-row items-end md:items-start gap-1 w-full\">\n            <div className=\"w-full px-2\">\n              <textarea\n                placeholder={`Reason of your reclaim...`}\n                cols={50}\n                rows={3}\n                className={`border border-${\n                  props.formError && props.formError.element === \"comment\"\n                    ? \"red\"\n                    : \"gray\"\n                }-400 rounded px-3 py-1 w-full focus:outline-none`}\n                style={{ resize: \"none\" }}\n                value={props.reClaimingMsg}\n                onChange={(e) => {\n                  props.setReClaimingMsg(e.target.value);\n                  props.setFormError(null);\n                }}\n                disabled={props.loadingRequest}\n              ></textarea>\n              {props.formError && props.formError.element === \"comment\" && (\n                <p className=\"text-red-800\">{props.formError.msg}</p>\n              )}\n            </div>\n            <div className=\"flex flex-row md:flex-col gap-1 max-w-full px-2\">\n              <button\n                className=\"bg-gray-700 hover:bg-gray-800 px-4 py-2 font-semibold rounded text-white inline-flex items-center space-x-2 focus:outline-none\"\n                onClick={() => {\n                  props.setReClaimingMsg(\"\");\n                  props.setReClaiming(false);\n                  props.setFormError(null);\n                }}\n                disabled={props.loadingRequest}\n              >\n                <RiArrowGoBackFill className=\"w-5 h-5\" />\n                <span>Back</span>\n              </button>\n              <button\n                className=\"bg-blue-700 hover:bg-blue-800 px-4 py-2 font-semibold rounded text-white inline-flex items-center space-x-2 focus:outline-none\"\n                disabled={props.loadingRequest}\n                onClick={() => handleSubmit()}\n              >\n                {props.loadingRequest ? (\n                  <div className=\"\">Loading...</div>\n                ) : (\n                  <div className=\"inline-flex items-center space-x-2 gap-1\">\n                    <FaRegCheckCircle className=\"w-5 h-5\" />\n                    <span>Confirm</span>\n                  </div>\n                )}\n              </button>\n            </div>\n          </div>\n        )}\n        {/* end right part */}\n      </section>\n    </section>\n  );\n};\n\nconst mapStateToProps = ({\n  users,\n}: StoreState): {\n  userList: UserInterface[];\n} => {\n  return { userList: users };\n};\n\nexport default connect(mapStateToProps, {\n  fetchUserAccess,\n  createReClaim,\n  PushPopupAlert,\n})(ClaimDocView);\n","import React from \"react\";\nimport Table from \"../../components/Table/Table\";\nimport { PositionRequirementTableInterface } from \"./ViewPosition\";\n\ninterface RequirementProps {\n  requirements: PositionRequirementTableInterface[];\n}\n\nconst ViewRequirements: React.FC<RequirementProps> = (props) => {\n  const tableData = (): JSX.Element[] => {\n    let data: PositionRequirementTableInterface[] = props.requirements;\n    // let data: PositionSubcategoryData[] =\n    //   props.position_requirement.position_requirement;\n    if (data.length === 0) {\n      return [\n        <tr key={153} className=\"border-b border-gray-200 hover:bg-gray-100\">\n          <td className=\"p-3 text-center\" colSpan={3}>\n            No Data Found\n          </td>\n        </tr>,\n      ];\n    }\n\n    return data.map((item, index) => (\n      <tr\n        key={index + item.field_id}\n        className=\"border-b border-gray-200 hover:bg-gray-100\"\n      >\n        <td className=\"p-3 text-left whitespace-nowrap\">{index + 1}</td>\n        <td className=\"p-3 text-left\">\n          <span>{item.subcategory_title + \" in \" + item.field_title}</span>\n        </td>\n        <td className=\"p-3 text-left text-lg italic\">\n          {item.required ? (\n            <span className=\"text-yellow-800\">Required</span>\n          ) : (\n            \"Optional\"\n          )}\n        </td>\n      </tr>\n    ));\n  };\n\n  return (\n    <div>\n      <Table\n        columns={[\n          { columnTitle: \"#\", alignText: \"left\", padding: \"p-3\" },\n          { columnTitle: \"Document\", alignText: \"left\", padding: \"p-3\" },\n          { columnTitle: \"Status\", alignText: \"left\", padding: \"p-3\" },\n          // { columnTitle: \"\", alignText: \"left\", padding: \"p-3\" },\n        ]}\n        rows={tableData}\n        pagination={false}\n        search={false}\n        thColor=\"gray\"\n      />\n    </div>\n  );\n};\n\nexport default ViewRequirements;\n","import React, { useEffect, useState } from \"react\";\nimport { MdTurnedIn } from \"react-icons/md\";\nimport { connect } from \"react-redux\";\nimport { PushPopupAlert } from \"../../../actions\";\nimport { fetchUserAccess } from \"../../../actions/users\";\nimport NoResult, {\n  NoResultThemes,\n} from \"../../../components/NoResult/NoResult\";\nimport {\n  claimApplicationsInterface,\n  claimApplicationsPositionInterface,\n} from \"../../../interfaces\";\nimport { ApplicationStates } from \"../../../interfaces/application\";\nimport { StoreState } from \"../../../reducers\";\nimport { DocumentReducerInterface } from \"../../../reducers/document\";\nimport { capitalizeFirstLetter } from \"../../../shared/dataTest\";\nimport { UserInterface } from \"../../../shared/interfaces\";\nimport { DATE } from \"../../../utils/functions\";\nimport { PositionRequirementTableInterface } from \"../../Positions/ViewPosition\";\nimport ViewRequirements from \"../../Positions/ViewRequirements\";\nimport { getUserDocuments } from \"../Admin\";\n\nexport const FC_ApplicationPositionDistinctCategory = (\n  thisPosition: claimApplicationsPositionInterface,\n  documentCategories: DocumentReducerInterface\n): {\n  PositionsTemp: PositionRequirementTableInterface[];\n  DistinctCategoriesTemp: PositionRequirementTableInterface[];\n  DistinctSubCategoriesTemp: PositionRequirementTableInterface[];\n} => {\n  let PositionsTemp: PositionRequirementTableInterface[] = [];\n  let DistinctCategoriesTemp: PositionRequirementTableInterface[] = [],\n    DistinctCategoriesIds: string[] = [];\n  let DistinctSubCategoriesTemp: PositionRequirementTableInterface[] = [],\n    DistinctSubCategoriesIds: string[] = [];\n  // GET REQUIREMENTS OF THE CURRENT POSITION ====================\n  let requirements = thisPosition.requirements;\n  // LOOP THROUGH CURRENT POSITION REQUIREMENTS ==========================\n  for (let req in requirements) {\n    let thisRequirements = requirements[req];\n    // GET DOC CATEGORY OF THE CURRENT POSITION REQUIREMENTS ====================\n    let thisCategory = documentCategories.documentCategory\n      ? documentCategories.documentCategory.find(\n          (item) =>\n            item.user_detail_category_id ===\n            thisRequirements.user_detail_category_id\n        ) && {\n          title: documentCategories.documentCategory.find(\n            (item) =>\n              item.user_detail_category_id ===\n              thisRequirements.user_detail_category_id\n          )!.title,\n          user_detail_category_id: documentCategories.documentCategory.find(\n            (item) =>\n              item.user_detail_category_id ===\n              thisRequirements.user_detail_category_id\n          )!.user_detail_category_id,\n        }\n      : {\n          title: \"\",\n          user_detail_category_id: thisRequirements.user_detail_category_id,\n        };\n    // GET DOC SUB CATEGORY OF THE CURRENT POSITION REQUIREMENTS ====================\n    let thisSubCategory = documentCategories.documentSubCategory\n      ? documentCategories.documentSubCategory.find(\n          (item) =>\n            item.user_detail_subcategory_id ===\n            thisRequirements.user_detail_subcategory_id\n        )\n        ? {\n            title: documentCategories.documentSubCategory.find(\n              (item) =>\n                item.user_detail_subcategory_id ===\n                thisRequirements.user_detail_subcategory_id\n            )!.title,\n            user_detail_subcategory_id:\n              documentCategories.documentSubCategory.find(\n                (item) =>\n                  item.user_detail_subcategory_id ===\n                  thisRequirements.user_detail_subcategory_id\n              )!.user_detail_subcategory_id,\n            category_id: documentCategories.documentSubCategory.find(\n              (item) =>\n                item.user_detail_subcategory_id ===\n                thisRequirements.user_detail_subcategory_id\n            )!.category_id,\n          }\n        : {\n            title: \"\",\n            user_detail_subcategory_id:\n              thisRequirements.user_detail_subcategory_id,\n            category_id: \"\",\n          }\n      : {\n          title: \"\",\n          user_detail_subcategory_id:\n            thisRequirements.user_detail_subcategory_id,\n          category_id: \"\",\n        };\n    // LOOP THROUGH FIELDS OF THE CURRENT POSITION REQUIREMENTS ==========================\n    if (thisCategory) {\n      for (let field in thisRequirements.position_requirement) {\n        // GET FIELDS OF THE CURRENT POSITION REQUIREMENTS ====================\n        let thisField = documentCategories.documentFields\n          ? documentCategories.documentFields.find(\n              (item) =>\n                item._id ===\n                thisRequirements.position_requirement[field]\n                  .category_subcategory_data_id\n            )\n            ? {\n                title: documentCategories.documentFields.find(\n                  (item) =>\n                    item._id ===\n                    thisRequirements.position_requirement[field]\n                      .category_subcategory_data_id\n                )!.title,\n                _id: documentCategories.documentFields.find(\n                  (item) =>\n                    item._id ===\n                    thisRequirements.position_requirement[field]\n                      .category_subcategory_data_id\n                )!._id,\n                required: thisRequirements.position_requirement[field].required,\n              }\n            : {\n                title: \"\",\n                _id: thisRequirements.user_detail_subcategory_id,\n                required: thisRequirements.position_requirement[field].required,\n              }\n          : {\n              title: \"\",\n              _id: thisRequirements.user_detail_subcategory_id,\n              required: thisRequirements.position_requirement[field].required,\n            };\n        // ADD CURRENT CATEGORY, SUB CATEGORY & FIELDS OF THE CURRENT POSITION REQUIREMENTS IN POSITIONS TEMP ====================\n        PositionsTemp.push({\n          category_id: thisCategory.user_detail_category_id,\n          category_title: thisCategory.title,\n          subcategory_id: thisSubCategory.user_detail_subcategory_id,\n          subcategory_title: thisSubCategory.title,\n          field_title: thisField.title,\n          field_id: thisField._id,\n          required: thisField.required,\n        });\n      }\n\n      // ADD CATEOGRY OF THE CURRENT POSITION REQUIREMENTS TO ARRAY ====================\n      if (\n        !DistinctCategoriesIds.includes(thisCategory.user_detail_category_id)\n      ) {\n        DistinctCategoriesIds.push(thisCategory.user_detail_category_id);\n        DistinctCategoriesTemp.push({\n          category_id: thisCategory.user_detail_category_id,\n          category_title: thisCategory.title,\n          subcategory_id: \"\",\n          subcategory_title: \"\",\n          field_title: \"\",\n          field_id: \"\",\n          required: false,\n        });\n      }\n\n      // ADD SUB CATEOGRY OF THE CURRENT POSITION REQUIREMENTS TO ARRAY ====================\n      if (\n        !DistinctSubCategoriesIds.includes(\n          thisSubCategory.user_detail_subcategory_id\n        )\n      ) {\n        DistinctSubCategoriesIds.push(\n          thisSubCategory.user_detail_subcategory_id\n        );\n        DistinctSubCategoriesTemp.push({\n          category_id: thisSubCategory.category_id,\n          category_title: \"\",\n          subcategory_id: thisSubCategory.user_detail_subcategory_id,\n          subcategory_title: thisSubCategory.title,\n          field_title: \"\",\n          field_id: \"\",\n          required: false,\n        });\n      }\n    }\n  }\n  // DistinctCategoriesIds.;\n\n  return { PositionsTemp, DistinctCategoriesTemp, DistinctSubCategoriesTemp };\n};\n\nexport const showEvaluator = (\n  userList: UserInterface[],\n  user_id: string\n): string => {\n  let result: string = \"\";\n  if (user_id === \"system\") {\n    result = \"System\";\n  } else {\n    let user = getUserDocuments(userList, user_id);\n    if (user) {\n      result = user.user.user_info.fname + \" \" + user.user.user_info.lname;\n    }\n  }\n  return result;\n};\n\ntype ApplicationFormViewProps = {\n  thisApplication: claimApplicationsInterface;\n  setViewThisFile: (value: string) => void;\n  setChooseClaimFile: (value: boolean) => void;\n  setClaimFileId: (value: string) => void;\n  documentCategories: DocumentReducerInterface;\n  userList: UserInterface[];\n  fetchUserAccess: Function;\n  PushPopupAlert: Function;\n};\n\nconst ApplicationFormView: React.FC<ApplicationFormViewProps> = (props) => {\n  const [loadingUsers, setLoadingUsers] = useState(true);\n\n  useEffect(() => {\n    if (!props.userList.length && loadingUsers) {\n      setLoadingUsers(false);\n      props.fetchUserAccess();\n    } else if (loadingUsers) {\n      setLoadingUsers(false);\n    }\n  }, [loadingUsers, props]);\n\n  return (\n    <section className=\"\">\n      <div className=\"w-full bg-gray-100 px-4 py-1 animate__animated animate__fadeIn\">\n        <div className=\"flex flex-col mb-2\">\n          {/* APPLICATION TITLE ========== */}\n          <section className=\"flex items-center justify-between\">\n            <span className=\"text-blue-600 font-bold text-2xl\">\n              {props.thisApplication.position.position_title}\n            </span>\n            <button\n              type=\"button\"\n              className=\"btn btn-blue\"\n              onClick={() => {\n                props.setChooseClaimFile(false);\n                props.setClaimFileId(props.thisApplication.application_id);\n                props.setViewThisFile(\"\");\n              }}\n            >\n              Choose\n            </button>\n          </section>\n          <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n            <span className={`italic`}>Date:</span>\n            <span className=\"font-bold text-gray-900 py-1\">\n              {DATE(props.thisApplication.createdAt)}\n            </span>\n          </div>\n          {false && (\n            <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n              <span className={`italic`}>Session:</span>\n              <span className=\"font-bold text-gray-900 py-1\">\n                {\n                  props.thisApplication.application_session\n                    .application_session_name\n                }\n              </span>\n            </div>\n          )}\n          <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n            <span className={`italic`}>Status:</span>\n            <span\n              className={`font-bold ${\n                props.thisApplication.application_status ===\n                ApplicationStates.Rejected\n                  ? \"text-yellow-900\"\n                  : \"text-blue-600\"\n              } py-1`}\n            >\n              {capitalizeFirstLetter(props.thisApplication.application_status)}\n            </span>\n          </div>\n          <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n            <span className={`italic`}>Evaluated by:</span>\n            <span className=\"font-bold text-gray-900 py-1\">\n              {loadingUsers ? (\n                <div className=\"w-24 h-3 rounded bg-gray-200 animate__animated animate__pulse animate__delay-5s animate__infinite\"></div>\n              ) : (\n                showEvaluator(\n                  props.userList,\n                  props.thisApplication.override_by.user_id\n                )\n              )}\n            </span>\n          </div>\n          <div className=\"flex items-start gap-2 text-sm text-gray-600\">\n            <span className={`italic`}>Reason:</span>\n            <span className=\"font-semibold text-gray-900\">\n              {props.thisApplication.override_by.comment}\n            </span>\n          </div>\n        </div>\n        <div className=\"bg-white w-full rounded p-2 mb-2\">\n          <div className=\"text-gray-800 text-2xl font-bold my-2\">\n            Position Details\n          </div>\n          <div className=\"flex items-center gap-2 text-base text-gray-600\">\n            <span className={`italic`}>Desc:</span>\n            <span className=\"font-semibold\">\n              {props.thisApplication.position.description}\n            </span>\n          </div>\n          <div className=\"flex items-center gap-2 text-base text-gray-600\">\n            <span className={`italic`}>School level:</span>\n            <span className=\"font-semibold\">\n              {props.thisApplication.position.school_level_id.school_level_name}\n            </span>\n          </div>\n          <div className=\"flex items-center gap-2 text-base text-gray-600\">\n            <span className={`italic`}>Institute:</span>\n            <span className=\"font-semibold\">\n              {\n                props.thisApplication.position.education_institute_id\n                  .education_category_title\n              }\n            </span>\n          </div>\n          <div className=\"flex items-center gap-2 text-base text-gray-600\">\n            <span className={`italic`}>Courses:</span>\n            <span className=\"flex items-center gap-2\">\n              {props.thisApplication.position.courses.map((item, index) => (\n                <div\n                  key={index + item.course_id}\n                  className=\"flex items-center gap-1\"\n                >\n                  <span className=\"font-semibold\">{item.course_name}</span>\n                  <span className=\"text-gray-600\">({item.course_code})</span>\n                  {index !==\n                    props.thisApplication.position.courses.length - 1 && \",\"}\n                </div>\n              ))}\n            </span>\n          </div>\n\n          <div className=\"text-gray-800 text-2xl font-bold my-2\">\n            Position Requirements\n          </div>\n          {props.thisApplication.position.requirements.length > 0 ? (\n            FC_ApplicationPositionDistinctCategory(\n              props.thisApplication.position,\n              props.documentCategories\n            ).DistinctCategoriesTemp.map((item, index) => (\n              <div\n                className=\"bg-gray-100props.thisApplication.position rounded p-2\"\n                key={index + item.category_id}\n              >\n                <div className=\"flex items-center gap-2 text-2xl text-gray-500 font-bold\">\n                  <MdTurnedIn />\n                  <span>{item.category_title}</span>\n                </div>\n                <div className=\"border bg-white mt-1\">\n                  <ViewRequirements\n                    requirements={FC_ApplicationPositionDistinctCategory(\n                      props.thisApplication.position,\n                      props.documentCategories\n                    ).PositionsTemp.filter(\n                      (req) => req.category_id === item.category_id\n                    )}\n                  />\n                </div>\n              </div>\n            ))\n          ) : (\n            <NoResult\n              theme={NoResultThemes.Dark}\n              value={\"No requirements\"}\n            ></NoResult>\n          )}\n        </div>\n      </div>\n    </section>\n  );\n};\n\nconst mapStateToProps = ({\n  users,\n}: StoreState): {\n  userList: UserInterface[];\n} => {\n  return {\n    userList: users,\n  };\n};\n\nexport default connect(mapStateToProps, { PushPopupAlert, fetchUserAccess })(\n  ApplicationFormView\n);\n","import React, { useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { PushPopupAlert } from \"../../../actions\";\nimport { DocumentClaimUser } from \"../../../actions/claiming\";\nimport { fetchUserAccess } from \"../../../actions/users\";\nimport { StoreState } from \"../../../reducers\";\nimport { DocumentReducerInterface } from \"../../../reducers/document\";\nimport { capitalizeFirstLetter } from \"../../../shared/dataTest\";\nimport { UserInterface } from \"../../../shared/interfaces\";\nimport { API } from \"../../../utils/api\";\nimport { getUserDocuments } from \"../Admin\";\nimport { ClaimGetDocTitle } from \"./ClaimForm\";\n\ntype DocFormViewProps = {\n  thisDoc: DocumentClaimUser;\n  setChooseClaimFile: (value: boolean) => void;\n  setClaimFileId: (value: string) => void;\n  setViewThisFile: (value: string) => void;\n  documentCategories: DocumentReducerInterface;\n  userList: UserInterface[];\n  fetchUserAccess: Function;\n  PushPopupAlert: Function;\n};\n\nconst DocFormView: React.FC<DocFormViewProps> = (props) => {\n  const [loadingUsers, setLoadingUsers] = useState(true);\n\n  useEffect(() => {\n    if (!props.userList.length && loadingUsers) {\n      setLoadingUsers(false);\n      props.fetchUserAccess();\n    } else if (loadingUsers) {\n      setLoadingUsers(false);\n    }\n  }, [loadingUsers, props]);\n\n  return (\n    <section className=\"\">\n      <div className=\"w-full bg-gray-100 px-4 py-1 animate__animated animate__fadeIn\">\n        <div className=\"flex flex-col mb-2\">\n          <div className=\"flex items-center justify-between\">\n            <span className=\"text-blue-600 font-bold text-xl\">\n              {ClaimGetDocTitle(props.documentCategories, props.thisDoc).main}\n            </span>\n            <button\n              type=\"button\"\n              className=\"btn btn-blue\"\n              onClick={() => {\n                props.setChooseClaimFile(false);\n                props.setClaimFileId(props.thisDoc.doc_id);\n                props.setViewThisFile(\"\");\n              }}\n            >\n              Choose\n            </button>\n          </div>\n          <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n            <span className={`italic`}>Status:</span>\n            <span className=\"font-bold text-yellow-900 rounded px-3 py-1\">\n              {capitalizeFirstLetter(props.thisDoc.validation_status)}\n            </span>\n          </div>\n          <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n            <span className={`italic`}>Evaluated by:</span>\n            <span className=\"font-semibold\">\n              {loadingUsers ? (\n                <div className=\"w-24 h-3 rounded bg-gray-200 animate__animated animate__pulse animate__delay-5s animate__infinite\"></div>\n              ) : getUserDocuments(\n                  props.userList,\n                  props.thisDoc.validated_by.user_id\n                ) ? (\n                getUserDocuments(\n                  props.userList,\n                  props.thisDoc.validated_by.user_id\n                )!.user.user_info.fname +\n                \" \" +\n                getUserDocuments(\n                  props.userList,\n                  props.thisDoc.validated_by.user_id\n                )!.user.user_info.lname\n              ) : (\n                \"-\"\n              )}\n            </span>\n          </div>\n          <div className=\"flex items-start gap-2 text-sm text-gray-600\">\n            <span className={`italic`}>Reason:</span>\n            <span className=\"font-normal\">\n              {props.thisDoc.validated_by.comment}\n            </span>\n          </div>\n          <div className=\"w-full my-1\">\n            <img\n              src={`${API.AUTH_FILES}/${props.thisDoc.files}`}\n              alt=\"doc file\"\n              className={`w-full`}\n            />\n          </div>\n        </div>\n      </div>\n    </section>\n  );\n};\n\nconst mapStateToProps = ({\n  users,\n}: StoreState): {\n  userList: UserInterface[];\n} => {\n  return {\n    userList: users,\n  };\n};\n\nexport default connect(mapStateToProps, { PushPopupAlert, fetchUserAccess })(\n  DocFormView\n);\n","import React, { useState } from \"react\";\nimport { MdSearch } from \"react-icons/md\";\nimport {\n  CandidateClaimInterface,\n  claimApplicationsInterface,\n  SessionPlanInterface,\n} from \"../../../interfaces\";\nimport { ApplicationStates } from \"../../../interfaces/application\";\nimport { isClaimAllowed } from \"./ClaimForm\";\n\nconst getRejectedApplicants = (\n  applicationData: claimApplicationsInterface[]\n): claimApplicationsInterface[] => {\n  return applicationData.filter(\n    (item) => item.application_status === ApplicationStates.Rejected\n  );\n};\n\nexport const searchApplication = (\n  objList: claimApplicationsInterface[],\n  text: any\n): claimApplicationsInterface[] => {\n  if (undefined === text || text === \"\") return objList;\n  return objList.filter((product) => {\n    let flag;\n    // let dataKeys = product;\n\n    for (let prop in product) {\n      flag = false;\n      if (prop === \"position\") {\n        flag =\n          product.position.position_title\n            .toString()\n            .toLowerCase()\n            .indexOf(text.toLowerCase()) > -1;\n      }\n      if (flag) break;\n    }\n    return flag;\n  });\n  // return objList.filter((product) =>\n  //   product.position.position_title.includes(text)\n  // );\n};\n\ntype FormApplicationListProps = {\n  setChooseClaimFile: (value: boolean) => void;\n  setClaimFileId: (value: string) => void;\n  setViewThisFile: (value: string) => void;\n  viewThisFile: string;\n  candidateApplications: claimApplicationsInterface[];\n  myClaims: CandidateClaimInterface[];\n  activeSession: SessionPlanInterface;\n};\n\nconst FormApplicationList: React.FC<FormApplicationListProps> = (props) => {\n  const [searchInput, setSearchInput] = useState<string>(\"\");\n  return (\n    <section>\n      {/* SEARCH PART */}\n      <div className=\"flex items-center w-full my-1\">\n        <MdSearch className=\"w-6 h-6 absolute ml-2\" />\n        <input\n          type=\"text\"\n          placeholder=\"Search\"\n          className=\"focus:border-2 h-7 ml-1 pl-9 mr-2 bg-gray-100 focus:border-gray-700 w-full rounded\"\n          onChange={(e) => setSearchInput(e.target.value)}\n          value={searchInput}\n          disabled={\n            getRejectedApplicants(props.candidateApplications).filter((item) =>\n              isClaimAllowed(\n                props.myClaims,\n                props.activeSession.session_plan_id,\n                item.application_id\n              )\n            ).length > 0\n              ? false\n              : true\n          }\n        />\n        <button\n          className=\"bg-red-200 text-red-700 py-1 px-2 mr-1 rounded text-sm focus:outline-none\"\n          type=\"button\"\n          onClick={() => {\n            props.setChooseClaimFile(false);\n            props.setViewThisFile(\"\");\n          }}\n        >\n          Cancel\n        </button>\n      </div>\n      {/* END SEARCH PART ///////////////// */}{\" \"}\n      {/* searchData(props.candidateApplications, searchInput) */}\n      <div className=\"w-full h-52 mt-2 overflow-y-auto divide-y divide-gray-300\">\n        {getRejectedApplicants(props.candidateApplications).filter((item) =>\n          isClaimAllowed(\n            props.myClaims,\n            props.activeSession.session_plan_id,\n            item.application_id\n          )\n        ).length > 0 ? (\n          searchApplication(\n            getRejectedApplicants(props.candidateApplications).filter((item) =>\n              isClaimAllowed(\n                props.myClaims,\n                props.activeSession.session_plan_id,\n                item.application_id\n              )\n            ),\n            searchInput\n          ).map((item, index) => (\n            <div\n              className=\"group flex items-center justify-between my-1 hover:bg-gray-100\"\n              key={index + item.application_id}\n            >\n              <div\n                className=\"p-1 w-full mr-2 cursor-pointer\"\n                onClick={() => {\n                  props.setChooseClaimFile(false);\n                  props.setClaimFileId(item.application_id);\n                }}\n              >\n                <p className=\"text-base font-medium text-black\">\n                  {item.position.position_title}\n                </p>\n              </div>\n              <button\n                type=\"button\"\n                className=\"bg-blue-200 hover:bg-blue-300 text-blue-700 group-hover:text-blue-800 py-1 px-2 mr-1 rounded text-sm\"\n                onClick={() => {\n                  props.setViewThisFile(item.application_id);\n                }}\n              >\n                View\n              </button>\n            </div>\n          ))\n        ) : (\n          <div className=\"text-center p-3\">\n            <p className=\"text-base font-medium text-black\">\n              No Rejected document available\n            </p>\n          </div>\n        )}\n      </div>\n    </section>\n  );\n};\n\nexport default FormApplicationList;\n","import React, { useState } from \"react\";\nimport { MdSearch } from \"react-icons/md\";\nimport { DocumentReducerInterface } from \"../../../reducers/document\";\nimport { ClaimGetDocTitle, isClaimAllowed } from \"./ClaimForm\";\nimport { DocumentClaimUser } from \"../../../actions/claiming\";\nimport { CategorySubcategoryData } from \"../../../interfaces/candidatesInterfaces\";\nimport {\n  CandidateClaimInterface,\n  SessionPlanInterface,\n} from \"../../../interfaces\";\n\nexport interface DocumentTitleInterface {\n  category_id: string;\n  company: string;\n  description: string;\n  email: string;\n  end_year: string;\n  files: string;\n  names: string;\n  phone_number: string;\n  school: {\n    school_name: string;\n    _id: string;\n    status: boolean;\n    education_category_id?: {\n      education_category_title: string;\n      _id: string;\n    };\n    district_id?: {\n      district_name: string;\n      _id: string;\n    };\n  } | null;\n  school_id: string;\n  start_year: string;\n  sub_category_id: string;\n  title: string;\n  year: string;\n  validation_status: string;\n  validated_by: {\n    user_id: string;\n    comment: string;\n    validation_status: string;\n    date: string;\n  };\n  doc_id: string;\n  doc_title: string;\n  category_subcategory_data: CategorySubcategoryData | null;\n}\n\nexport const DocumentTitleData = (\n  documentData: DocumentClaimUser[],\n  documentCategories: DocumentReducerInterface\n): DocumentTitleInterface[] | [] => {\n  let documentTemp: DocumentTitleInterface[] = [];\n  for (let i in documentData) {\n    documentTemp.push({\n      category_id: documentData[i].category_id,\n      company: documentData[i].company,\n      description: documentData[i].description,\n      email: documentData[i].email,\n      end_year: documentData[i].end_year,\n      files: documentData[i].files,\n      names: documentData[i].names,\n      phone_number: documentData[i].phone_number,\n      school: documentData[i].school,\n      school_id: documentData[i].school_id,\n      start_year: documentData[i].start_year,\n      sub_category_id: documentData[i].sub_category_id,\n      title: documentData[i].title,\n      year: documentData[i].year,\n      validation_status: documentData[i].validation_status,\n      validated_by: documentData[i].validated_by,\n      doc_id: documentData[i].doc_id,\n      doc_title: ClaimGetDocTitle(documentCategories, documentData[i]).main,\n      category_subcategory_data: documentData[i].category_subcategory_data,\n    });\n  }\n  return documentTemp;\n};\n\nconst getRejectedDocuments = (\n  documentData: DocumentClaimUser[]\n): DocumentClaimUser[] => {\n  console.log({\n    rejected: documentData.filter(\n      (item) => item.validation_status === \"rejected\"\n    ),\n  });\n  return documentData.filter((item) => item.validation_status === \"rejected\");\n};\n\nexport const searchDocuments = (\n  objList: DocumentTitleInterface[],\n  text: any\n): DocumentTitleInterface[] => {\n  if (undefined === text || text === \"\") return objList;\n  return objList.filter(\n    (product) =>\n      product.doc_title.toString().toLowerCase().indexOf(text.toLowerCase()) >\n      -1\n  );\n};\n\ntype FormDocumentListProps = {\n  setChooseClaimFile: (value: boolean) => void;\n  setClaimFileId: (value: string) => void;\n  setViewThisFile: (value: string) => void;\n  viewThisFile: string;\n  candidateDocuments: DocumentClaimUser[];\n  documentCategories: DocumentReducerInterface;\n  myClaims: CandidateClaimInterface[];\n  activeSession: SessionPlanInterface;\n};\n\nconst FormDocumentList: React.FC<FormDocumentListProps> = (props) => {\n  const [searchInput, setSearchInput] = useState<string>(\"\");\n  return (\n    <section>\n      {/* SEARCH PART */}\n      <div className=\"flex items-center w-full my-1\">\n        <MdSearch className=\"w-6 h-6 absolute ml-2\" />\n        <input\n          type=\"text\"\n          placeholder=\"Search\"\n          className=\"focus:border-2 h-7 ml-1 pl-9 mr-2 bg-gray-100 focus:border-gray-700 w-full rounded\"\n          onChange={(e) => setSearchInput(e.target.value)}\n          value={searchInput}\n          disabled={\n            DocumentTitleData(\n              getRejectedDocuments(props.candidateDocuments),\n              props.documentCategories\n            ).filter((item) =>\n              isClaimAllowed(\n                props.myClaims,\n                props.activeSession.session_plan_id,\n                item.doc_id\n              )\n            ).length > 0\n              ? false\n              : true\n          }\n        />\n        <button\n          className=\"bg-red-200 text-red-700 py-1 px-2 mr-1 rounded text-sm focus:outline-none\"\n          type=\"button\"\n          onClick={() => {\n            props.setChooseClaimFile(false);\n            props.setViewThisFile(\"\");\n          }}\n        >\n          Cancel\n        </button>\n      </div>\n      {/* END SEARCH PART ///////////////// */}\n      <div className=\"w-full h-52 mt-2 overflow-y-auto divide-y divide-gray-300\">\n        {props.candidateDocuments.filter((item) =>\n          isClaimAllowed(\n            props.myClaims,\n            props.activeSession.session_plan_id,\n            item.doc_id\n          )\n        ).length > 0 ? (\n          searchDocuments(\n            DocumentTitleData(\n              getRejectedDocuments(props.candidateDocuments),\n              props.documentCategories\n            ).filter((item) =>\n              isClaimAllowed(\n                props.myClaims,\n                props.activeSession.session_plan_id,\n                item.doc_id\n              )\n            ),\n            searchInput\n          ).map((doc, index) => (\n            <section key={index + doc.doc_id}>\n              <div className=\"group flex items-center justify-between my-1 hover:bg-gray-100\">\n                <div\n                  className=\"p-1 w-full mr-2 cursor-pointer\"\n                  onClick={() => {\n                    props.setChooseClaimFile(false);\n                    props.setClaimFileId(doc.doc_id);\n                  }}\n                >\n                  <p className=\"text-base font-medium text-black\">\n                    {ClaimGetDocTitle(props.documentCategories, doc).main}\n                  </p>\n                </div>\n                <button\n                  type=\"button\"\n                  className=\"bg-blue-200 hover:bg-blue-300 text-blue-700 group-hover:text-blue-800 py-1 px-2 mr-1 rounded text-sm\"\n                  onClick={() => {\n                    props.viewThisFile === doc.doc_id\n                      ? props.setViewThisFile(\"\")\n                      : props.setViewThisFile(doc.doc_id);\n                  }}\n                >\n                  {props.viewThisFile === doc.doc_id ? \"Close\" : \"View\"}\n                </button>\n              </div>\n            </section>\n          ))\n        ) : (\n          <div className=\"text-center p-3\">\n            <p className=\"text-base font-medium text-black\">\n              No Rejected document available\n            </p>\n          </div>\n        )}\n      </div>\n    </section>\n  );\n};\n\nexport default FormDocumentList;\n","import axios from \"axios\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Auth, PushPopupAlert } from \"../../../actions\";\nimport {\n  createClaim,\n  DocumentClaimUser,\n  GetClaimingTypes,\n  getMyRejectedApplications,\n  getMyRejectedDocuments,\n} from \"../../../actions/claiming\";\nimport {\n  getDocumentCategory,\n  getDocumentSubCategory,\n  getDocumentFields,\n} from \"../../../actions/document\";\nimport { getActiveSessionPlan } from \"../../../actions/session\";\nimport { getApplicationSessions } from \"../../../actions/settings\";\nimport { PopupAlertData } from \"../../../components/Alert/Popup\";\nimport Modal, { ModalSize, Themes } from \"../../../components/Modal/Modal\";\nimport {\n  CandidateClaimInterface,\n  claimApplicationsInterface,\n  PlansInterface,\n  PlansTypeKeys,\n  SessionPlanInterface,\n} from \"../../../interfaces\";\nimport { ApplicationStates } from \"../../../interfaces/application\";\nimport { PopupAlertTheme } from \"../../../interfaces/popupAlert\";\nimport { StoreState } from \"../../../reducers\";\nimport { ClaimingReducerType } from \"../../../reducers/claiming\";\nimport { DocumentReducerInterface } from \"../../../reducers/document\";\nimport { SessionPlanReducerInterface } from \"../../../reducers/session\";\nimport {\n  capitalizeFirstLetter,\n  isEmptyOrSpaces,\n} from \"../../../shared/dataTest\";\nimport { API } from \"../../../utils/api\";\nimport { setAxiosToken } from \"../../../utils/AxiosToken\";\nimport { errorToText } from \"../../../utils/errors\";\nimport { isPlanActive } from \"../../SessionSettings/SessionDetails\";\nimport ApplicationFormView from \"./ApplicationFormView\";\nimport DocFormView from \"./DocFormView\";\nimport FormApplicationList from \"./FormApplicationList\";\nimport FormDocumentList from \"./FormDocumentList\";\n\nexport const ClaimGetDocTitle = (\n  documentCategories: DocumentReducerInterface,\n  doc: DocumentClaimUser\n): { category: string; sub_category: string; field: string; main: string } => {\n  let DocCategory: string = \"\",\n    DocSubCategory: string = \"\",\n    DocField: string = \"\",\n    DocTitle: string = \"\";\n  if (\n    doc.sub_category_id.length > 0 &&\n    documentCategories.documentSubCategory\n  ) {\n    DocTitle = documentCategories.documentSubCategory.filter(\n      (c) => c.user_detail_subcategory_id === doc.sub_category_id\n    )[0].title;\n    DocSubCategory = DocTitle;\n  } else if (\n    doc.category_id.length > 0 &&\n    documentCategories.documentCategory\n  ) {\n    DocTitle = documentCategories.documentCategory.filter(\n      (c) => c.user_detail_category_id === doc.category_id\n    )[0].title;\n    DocCategory = DocTitle;\n  }\n  if (\n    doc.category_subcategory_data &&\n    doc.category_subcategory_data.category_subcategory_Data_id.length > 0 &&\n    documentCategories.documentFields\n  ) {\n    console.log({ doc });\n    DocField = documentCategories.documentFields.filter(\n      (c) =>\n        c._id === doc.category_subcategory_data?.category_subcategory_Data_id\n    )[0].title;\n    DocTitle += \" in \" + DocField;\n  }\n\n  return {\n    category: DocCategory,\n    sub_category: DocSubCategory,\n    field: DocField,\n    main: DocTitle,\n  };\n};\n\nexport const isClaimAllowed = (\n  allClaim: CandidateClaimInterface[],\n  period_id: string,\n  claimOnId: string\n): boolean => {\n  if (\n    allClaim.find(\n      (item) =>\n        item.period_id === period_id && item.claiming_on_id === claimOnId\n    )\n  ) {\n    return false;\n  }\n  return true;\n};\n\ntype ClaimFormProps = {\n  // FOR SHORTCUT BUTTONS CALL\n  claim_type?: PlansTypeKeys;\n  file_id?: string;\n  // REQUIRED PROPS\n  formState: boolean;\n  setFormState: (value: boolean) => void;\n  auth: Auth;\n  sessionPlan: SessionPlanReducerInterface;\n  claiming: ClaimingReducerType;\n  documentReducer: DocumentReducerInterface;\n  getActiveSessionPlan: Function;\n  createClaim: Function;\n  GetClaimingTypes: Function;\n  getDocumentCategory: Function;\n  getDocumentSubCategory: Function;\n  getDocumentFields: Function;\n  getMyRejectedApplications: Function;\n  getMyRejectedDocuments: Function;\n  PushPopupAlert: (alert: PopupAlertData) => void;\n};\n\ntype ClaimFormState = {\n  loading: boolean;\n  loadingForm: boolean;\n  formError: {\n    element: string;\n    msg: string;\n  } | null;\n  thisClaimType: PlansTypeKeys | null;\n  thisClaimTypeId: string;\n  claimComment: string;\n  claimFileId: string;\n  chooseClaimFile: boolean;\n  viewThisFile: string;\n  formType: \"DEFAULT\" | \"PROPS\";\n  alertError: string | null;\n  activeSession: SessionPlanInterface | null;\n};\n\nclass ClaimForm extends Component<ClaimFormProps, ClaimFormState> {\n  constructor(props: ClaimFormProps) {\n    super(props);\n\n    this.state = {\n      loading: true,\n      loadingForm: false,\n      formError: null,\n      thisClaimType: null,\n      thisClaimTypeId: \"\",\n      claimComment: \"\",\n      claimFileId: \"\",\n      chooseClaimFile: false,\n      viewThisFile: \"\",\n      formType: \"DEFAULT\",\n      alertError: null,\n      activeSession: null,\n    };\n  }\n\n  isDocumentIdValid = (\n    doc_id: string\n  ): {\n    status: boolean;\n    msg: string;\n    alert: PopupAlertTheme;\n  } => {\n    if (this.props.claiming.candidateDocuments) {\n      let doc = this.props.claiming.candidateDocuments.find(\n        (item) => item.doc_id === doc_id\n      );\n      if (doc) {\n        // CHECK IF DOCUMENT HAS REJECTED STATUS\n        if (doc.validated_by.validation_status !== \"rejected\") {\n          return {\n            status: false,\n            msg: \"Only rejected document are allowed for claim\",\n            alert: PopupAlertTheme.info,\n          };\n        }\n        // CHECK IF DOCUMENT HAS ALREADY CLAIMED ON\n        if (\n          this.props.claiming.myClaims &&\n          this.state.activeSession &&\n          isClaimAllowed(\n            this.props.claiming.myClaims,\n            this.state.activeSession.session_plan_id,\n            doc_id\n          )\n        ) {\n          return {\n            status: false,\n            msg: \"This document already in claiming list!\",\n            alert: PopupAlertTheme.info,\n          };\n        }\n        return { status: true, msg: \"\", alert: PopupAlertTheme.success };\n      } else {\n        return {\n          status: false,\n          msg: \"Invalid document id\",\n          alert: PopupAlertTheme.warning,\n        };\n      }\n    }\n    return {\n      status: false,\n      msg: \"No Documents, please try again\",\n      alert: PopupAlertTheme.info,\n    };\n  };\n\n  isApplicationIdValid = (\n    app_id: string\n  ): {\n    status: boolean;\n    msg: string;\n    alert: PopupAlertTheme;\n  } => {\n    if (this.props.claiming.candidateApplications) {\n      let app = this.props.claiming.candidateApplications.find(\n        (item) => item.application_id === app_id\n      );\n      if (app) {\n        // CHECK IF DOCUMENT HAS REJECTED STATUS\n        if (app.application_status !== ApplicationStates.Rejected) {\n          return {\n            status: false,\n            msg: \"Only rejected application are allowed for claim\",\n            alert: PopupAlertTheme.info,\n          };\n        }\n        // CHECK IF DOCUMENT HAS ALREADY CLAIMED ON\n        if (\n          this.props.claiming.myClaims &&\n          this.state.activeSession &&\n          isClaimAllowed(\n            this.props.claiming.myClaims,\n            this.state.activeSession.session_plan_id,\n            app.application_id\n          )\n        ) {\n          return {\n            status: false,\n            msg: \"This application already in claiming list!\",\n            alert: PopupAlertTheme.info,\n          };\n        }\n        return { status: true, msg: \"\", alert: PopupAlertTheme.info };\n      } else {\n        return {\n          status: false,\n          msg: \"Invalid application id\",\n          alert: PopupAlertTheme.warning,\n        };\n      }\n    }\n    return {\n      status: false,\n      msg: \"No Application, please try again!\",\n      alert: PopupAlertTheme.info,\n    };\n  };\n\n  setLoading = (state: boolean) => {\n    this.setState({ loading: state });\n  };\n\n  setLoadingForm = (state: boolean) => {\n    this.setState({ loadingForm: state });\n  };\n\n  setFormError = (\n    data: {\n      element: string;\n      msg: string;\n    } | null\n  ) => {\n    this.setState({ formError: data });\n  };\n\n  setAlertError = (data: string | null) => {\n    this.setState({ alertError: data });\n  };\n\n  setClaimFileId = (data: string) => {\n    this.setState({ claimFileId: data });\n  };\n\n  setViewThisFile = (data: string) => {\n    this.setState({ viewThisFile: data });\n  };\n\n  setChooseClaimFile = (data: boolean) => {\n    this.setState({ chooseClaimFile: data });\n  };\n\n  setClaimComment = (data: string) => {\n    this.setState({ claimComment: data });\n  };\n\n  isClaimTypeOpen = (\n    thisSession: SessionPlanInterface,\n    thisType: PlansTypeKeys\n  ): boolean => {\n    let data: PlansInterface | undefined;\n    if (thisType === PlansTypeKeys.APPLICATION) {\n      data = thisSession.plans.find(\n        (item) => item.type_key === PlansTypeKeys.APPLICATION\n      );\n      if (data && isPlanActive(thisSession, data) === \"OPEN\") {\n        return true;\n      }\n    } else if (thisType === PlansTypeKeys.DOCUMENT_VALIDATION) {\n      data = thisSession.plans.find(\n        (item) => item.type_key === PlansTypeKeys.DOCUMENT_VALIDATION\n      );\n      if (data && isPlanActive(thisSession, data) === \"OPEN\") {\n        return true;\n      }\n    } else if (thisType === PlansTypeKeys.PLACEMENT_TRANSFER) {\n      data = thisSession.plans.find(\n        (item) => item.type_key === PlansTypeKeys.PLACEMENT_TRANSFER\n      );\n      if (data && isPlanActive(thisSession, data) === \"OPEN\") {\n        return true;\n      }\n    }\n    return false;\n  };\n\n  isClaimBtnValid = (thisSession: SessionPlanInterface) => {\n    if (this.props.file_id || this.props.claim_type) {\n      // CHECK IF CLAIM TYPE && CLAIM FILE PROPS ARE PASSED PROPS\n      if (!this.props.claim_type) {\n        this.props.PushPopupAlert({\n          title: \"Claim type is required!\",\n          theme: PopupAlertTheme.warning,\n        });\n        this.props.setFormState(false);\n        this.setState({\n          claimFileId: \"\",\n          thisClaimType: null,\n          thisClaimTypeId: \"\",\n          claimComment: \"\",\n          chooseClaimFile: false,\n          formType: \"DEFAULT\",\n          viewThisFile: \"\",\n          formError: null,\n        });\n      } else if (!this.props.file_id) {\n        this.props.PushPopupAlert({\n          title: \"Claim file is required!\",\n          theme: PopupAlertTheme.warning,\n        });\n        this.props.setFormState(false);\n        this.setState({\n          claimFileId: \"\",\n          thisClaimType: null,\n          thisClaimTypeId: \"\",\n          claimComment: \"\",\n          chooseClaimFile: false,\n          formType: \"DEFAULT\",\n          viewThisFile: \"\",\n          formError: null,\n        });\n      } else if (!this.isClaimTypeOpen(thisSession, this.props.claim_type)) {\n        // IF CLAIM TYPE && CLAIM FILE PROPS ARE PASSED PROPS\n        // CHECK IF CLAIM TYPE IS OPEN ================\n        this.props.PushPopupAlert({\n          title: \"Claim type is closed!\",\n          theme: PopupAlertTheme.warning,\n        });\n        this.props.setFormState(false);\n        this.setState({\n          claimFileId: \"\",\n          thisClaimType: null,\n          thisClaimTypeId: \"\",\n          claimComment: \"\",\n          chooseClaimFile: false,\n          formType: \"DEFAULT\",\n          viewThisFile: \"\",\n          formError: null,\n        });\n      }\n    }\n  };\n\n  componentDidMount = () => {\n    if (\n      this.props.sessionPlan.activeSessionPlan === null ||\n      this.props.sessionPlan.activeSessionPlan === \"none\"\n    ) {\n      this.props.getActiveSessionPlan(\n        (status: boolean, msg: string, data: SessionPlanInterface | \"none\") => {\n          this.setLoading(status);\n          if (!status && msg.length) {\n            this.props.PushPopupAlert({\n              title: msg,\n              theme: PopupAlertTheme.danger,\n            });\n          }\n          if (data && data === \"none\") {\n            this.props.PushPopupAlert({\n              title: \"No session active session\",\n              theme: PopupAlertTheme.danger,\n            });\n            this.props.setFormState(false);\n            this.setState({\n              claimFileId: \"\",\n              thisClaimType: null,\n              thisClaimTypeId: \"\",\n              claimComment: \"\",\n              chooseClaimFile: false,\n              formType: \"DEFAULT\",\n              viewThisFile: \"\",\n              formError: null,\n            });\n          } else {\n            this.setState({ activeSession: data });\n            this.isClaimBtnValid(data);\n          }\n        }\n      );\n    } else {\n      this.setState({\n        activeSession: this.props.sessionPlan.activeSessionPlan,\n      });\n      this.isClaimBtnValid(this.props.sessionPlan.activeSessionPlan);\n      this.setLoading(false);\n    }\n\n    if (this.props.documentReducer.documentCategory === null) {\n      this.props.getDocumentCategory();\n    }\n    if (this.props.documentReducer.documentSubCategory === null) {\n      this.props.getDocumentSubCategory();\n    }\n    if (this.props.documentReducer.documentFields === null) {\n      this.props.getDocumentFields();\n    }\n\n    if (this.props.claiming.candidateApplications === null) {\n      this.props.getMyRejectedApplications(\n        this.props.auth.user.user_id,\n        (status: boolean, msg: string) => {\n          this.setLoading(status);\n          if (status === false) {\n            if (msg.length > 0) {\n              this.props.PushPopupAlert({\n                title: msg,\n                theme: PopupAlertTheme.danger,\n              });\n            }\n          }\n        }\n      );\n    }\n\n    if (this.props.claiming.candidateDocuments === null) {\n      this.props.getMyRejectedDocuments((status: boolean, msg: string) => {\n        this.setLoading(status);\n        if (status === false) {\n          if (msg.length > 0) {\n            this.props.PushPopupAlert({\n              title: msg,\n              theme: PopupAlertTheme.danger,\n            });\n          }\n        }\n      });\n    }\n\n    if (\n      this.props.claiming.claimTypes === null ||\n      this.props.claiming.claimTypes.length <= 0\n    ) {\n      this.props.GetClaimingTypes((status: boolean, msg: string) => {\n        this.setLoading(status);\n        if (status === false) {\n          if (msg.length > 0) {\n            this.props.PushPopupAlert({\n              title: msg,\n              theme: PopupAlertTheme.danger,\n            });\n          }\n        }\n      });\n    }\n\n    // PROPS VALIDATION PROCESS ###############\n    if (\n      this.props.claim_type &&\n      this.props.file_id &&\n      this.state.formType === \"DEFAULT\"\n    ) {\n      if (this.props.claim_type === PlansTypeKeys.DOCUMENT_VALIDATION) {\n        let _isDocumentIdValid = this.isDocumentIdValid(this.props.file_id);\n        if (!_isDocumentIdValid.status) {\n          this.props.PushPopupAlert({\n            title: _isDocumentIdValid.msg,\n            theme: _isDocumentIdValid.alert,\n          });\n          // setAlertError(_isDocumentIdValid.msg);\n          this.props.setFormState(false);\n        } else {\n          this.setState({\n            thisClaimType: this.props.claim_type,\n            claimFileId: this.props.file_id,\n            formType: \"PROPS\",\n          });\n        }\n      }\n      if (this.props.claim_type === PlansTypeKeys.APPLICATION) {\n        let _isApplicationIdValid = this.isApplicationIdValid(\n          this.props.file_id\n        );\n        if (!_isApplicationIdValid.status) {\n          this.props.PushPopupAlert({\n            title: _isApplicationIdValid.msg,\n            theme: _isApplicationIdValid.alert,\n          });\n          this.props.setFormState(false);\n        } else {\n          this.setState({\n            thisClaimType: this.props.claim_type,\n            claimFileId: this.props.file_id,\n            formType: \"PROPS\",\n          });\n        }\n      }\n    }\n  };\n\n  getDocumentById = (\n    documents: DocumentClaimUser[],\n    doc_id: string\n  ): DocumentClaimUser => {\n    return documents.filter((item) => item.doc_id === doc_id)[0];\n  };\n\n  getApplicationById = (\n    applications: claimApplicationsInterface[],\n    application_id: string\n  ): claimApplicationsInterface => {\n    return applications.filter(\n      (item) => item.application_id === application_id\n    )[0];\n  };\n\n  getValidation = (\n    thisId: string\n  ): {\n    old_reason: string;\n    old_status: string;\n    old_evaluated_by: string;\n  } => {\n    let result: {\n      old_reason: string;\n      old_status: string;\n      old_evaluated_by: string;\n    } = { old_reason: \"\", old_status: \"\", old_evaluated_by: \"\" };\n\n    if (\n      this.state.thisClaimType === PlansTypeKeys.DOCUMENT_VALIDATION &&\n      this.props.claiming.candidateDocuments\n    ) {\n      result = {\n        old_reason: this.getDocumentById(\n          this.props.claiming.candidateDocuments,\n          thisId\n        ).validated_by.comment,\n        old_status: this.getDocumentById(\n          this.props.claiming.candidateDocuments,\n          thisId\n        ).validated_by.validation_status,\n        old_evaluated_by: this.getDocumentById(\n          this.props.claiming.candidateDocuments,\n          thisId\n        ).validated_by.user_id,\n      };\n    } else if (\n      this.state.thisClaimType === PlansTypeKeys.APPLICATION &&\n      this.props.claiming.candidateApplications\n    ) {\n      result = {\n        old_reason: this.getApplicationById(\n          this.props.claiming.candidateApplications,\n          thisId\n        ).override_by.comment,\n        old_status: this.getApplicationById(\n          this.props.claiming.candidateApplications,\n          thisId\n        ).override_by.application_status,\n        old_evaluated_by: this.getApplicationById(\n          this.props.claiming.candidateApplications,\n          thisId\n        ).override_by.user_id,\n      };\n    }\n\n    return result;\n  };\n\n  cleanToClose = () => {\n    this.props.setFormState(false);\n    this.setState({\n      claimFileId: \"\",\n      thisClaimType: null,\n      thisClaimTypeId: \"\",\n      claimComment: \"\",\n      chooseClaimFile: false,\n      formType: \"DEFAULT\",\n      viewThisFile: \"\",\n      formError: null,\n    });\n  };\n\n  handleSubmit = async (e: React.FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n    if (!this.state.thisClaimType) {\n      return this.setFormError({\n        element: \"claim_type\",\n        msg: \"Claim type is required!\",\n      });\n    }\n    if (isEmptyOrSpaces(this.state.claimFileId)) {\n      return this.setFormError({\n        element: \"claim_file\",\n        msg: `Please select ${this.state.thisClaimType.toLocaleLowerCase()} you are claiming on!`,\n      });\n    }\n    if (isEmptyOrSpaces(this.state.claimComment)) {\n      return this.setFormError({\n        element: \"claim_comment\",\n        msg: `Claim comment is required!`,\n      });\n    }\n\n    if (!this.state.activeSession) {\n      return this.setAlertError(`No active claiming session is available!`);\n    }\n\n    this.setLoadingForm(true);\n    try {\n      setAxiosToken();\n      const res = await axios.post<CandidateClaimInterface>(\n        `${API.CLAIMING}/user/create`,\n        {\n          claiming_on_id: this.state.claimFileId,\n          type_key: this.state.thisClaimType,\n          user: this.props.auth.user.user_id,\n          period_id: this.state.activeSession.session_plan_id,\n          reason: this.state.claimComment,\n          old_reason: this.getValidation(this.state.claimFileId).old_reason,\n          old_status: this.getValidation(this.state.claimFileId).old_status,\n          old_evaluated_by: this.getValidation(this.state.claimFileId)\n            .old_evaluated_by,\n        }\n      );\n      console.log({ createClaim: res.data });\n      if (res.status === 201 || res.status === 200) {\n        this.props.createClaim(res.data);\n        this.props.PushPopupAlert({\n          title: \"Claim sent successful\",\n          theme: PopupAlertTheme.success,\n        });\n        this.cleanToClose();\n      }\n    } catch (error) {\n      console.error({ error });\n      this.props.PushPopupAlert({\n        title: errorToText(error),\n        theme: PopupAlertTheme.danger,\n      });\n    }\n    this.setLoadingForm(false);\n  };\n\n  selectClaimType = (thisClaim: string) => {\n    this.setState({\n      thisClaimType: isEmptyOrSpaces(thisClaim)\n        ? null\n        : (thisClaim as PlansTypeKeys),\n    });\n  };\n\n  generateChooseFileTitle = (thisClaimType: PlansTypeKeys | null): string => {\n    let result: string = \"\";\n\n    switch (thisClaimType) {\n      case PlansTypeKeys.APPLICATION:\n        result = `Select application you are claiming on?`;\n        break;\n      case PlansTypeKeys.DOCUMENT_VALIDATION:\n        result = `Select document you are claiming on?`;\n        break;\n      case PlansTypeKeys.EXAMINATION:\n        result = `Select exam you are claiming on?`;\n        break;\n      case PlansTypeKeys.MARKS_PUBLICATION:\n        result = `Select marks publication you are claiming on?`;\n        break;\n      case PlansTypeKeys.PLACEMENT_TRANSFER:\n        result = `Select placement you are claiming on?`;\n        break;\n      default:\n        result = \"Select file you are claiming on?\";\n        break;\n    }\n\n    return result;\n  };\n\n  render() {\n    if (this.state.loading) {\n      return null;\n    }\n    return (\n      <div className=\"pb-3\">\n        {this.props.formState && (\n          <Modal\n            backDrop={true}\n            theme={Themes.default}\n            close={(): void => {\n              !this.state.loadingForm &&\n                this.state.viewThisFile.length <= 0 &&\n                this.cleanToClose();\n              !this.state.loadingForm &&\n                this.state.viewThisFile.length > 0 &&\n                this.setViewThisFile(\"\");\n            }}\n            displayClose={true}\n            backDropClose={false}\n            title={\n              <div className=\"text-gray-900 font-bold text-xl md:ml-1\">\n                {this.state.viewThisFile.length <= 0 && \"Claiming form\"}\n                {this.state.viewThisFile.length > 0 &&\n                  this.state.thisClaimType ===\n                    PlansTypeKeys.DOCUMENT_VALIDATION &&\n                  \"Viewing document\"}\n                {this.state.viewThisFile.length > 0 &&\n                  this.state.thisClaimType === PlansTypeKeys.APPLICATION &&\n                  \"Viewing application\"}\n              </div>\n            }\n            widthSizeClass={\n              this.state.viewThisFile.length > 0\n                ? ModalSize.extraLarge\n                : ModalSize.medium\n            }\n            padding={{ title: true, body: false, footer: false }}\n          >\n            {/* CLAIM FORM ============================================== */}\n            {this.state.viewThisFile.length <= 0 && (\n              <form onSubmit={(e) => this.handleSubmit(e)}>\n                <div className=\"px-6 pb-3\">\n                  {this.state.alertError && (\n                    <div\n                      className=\"alert-warning cursor-pointer\"\n                      onClick={() => this.setAlertError(null)}\n                    >\n                      {this.state.alertError}\n                    </div>\n                  )}\n                  <div className=\"text-base text-gray-700 sm:text-lg\">\n                    {/* SELECT CLAIM TYPE ============================================== */}\n                    <div className=\"flex flex-col mb-2\">\n                      <label>Claim type</label>\n                      <select\n                        className={`rounded px-2 py-2 w-full bg-white focus:outline-none ${\n                          this.state.formError &&\n                          this.state.formError.element === \"claim_type\"\n                            ? \"border-red-500\"\n                            : \"border-gray-500\"\n                        } border-2`}\n                        onChange={(e: React.ChangeEvent<HTMLSelectElement>) => {\n                          this.selectClaimType(e.target.value);\n                          this.setClaimFileId(\"\");\n                          this.state.formError &&\n                            this.state.formError.element === \"claim_type\" &&\n                            this.setFormError(null);\n                        }}\n                        value={this.state.thisClaimTypeId}\n                        disabled={\n                          this.state.loadingForm ||\n                          this.state.formType === \"PROPS\"\n                        }\n                      >\n                        <option value=\"\">Choose claim type</option>\n                        {Object.values(PlansTypeKeys).map((item, index) => (\n                          <option value={item} key={index + item}>\n                            {capitalizeFirstLetter(\n                              item.toLocaleLowerCase().replace(/_/g, \" \")\n                            )}\n                          </option>\n                        ))}\n                      </select>\n                      {this.state.formError &&\n                        this.state.formError.element === \"claim_type\" && (\n                          <span className=\"text-red-500\">\n                            {this.state.formError.msg}\n                          </span>\n                        )}\n                    </div>\n                    {/* END SELECT CLAIM TYPE ============================================== */}\n\n                    {/* SELECT FILE TO CLAIM ON ============================================== */}\n                    <div className=\"flex flex-col mb-2\">\n                      <label>\n                        {this.generateChooseFileTitle(this.state.thisClaimType)}\n                      </label>\n                      <div\n                        className={`text-left bg-white border-2 border-gray-700 rounded w-full ${\n                          this.state.chooseClaimFile ? \"h-64\" : \"h-10\"\n                        } ${\n                          this.state.formError &&\n                          this.state.formError.element === \"claim_file\"\n                            ? \"border-red-500\"\n                            : \"border-gray-500\"\n                        } border-2 ${\n                          this.state.thisClaimType &&\n                          !this.state.chooseClaimFile\n                            ? \"cursor-pointer\"\n                            : !this.state.chooseClaimFile &&\n                              \"cursor-not-allowed\"\n                        }`}\n                        title={\n                          !this.state.thisClaimType\n                            ? \"Choose claim type first!\"\n                            : \"\"\n                        }\n                        onClick={() => {\n                          this.state.formType === \"DEFAULT\" &&\n                            this.state.thisClaimType &&\n                            !this.state.chooseClaimFile &&\n                            this.setChooseClaimFile(true);\n                          this.state.formError &&\n                            this.state.formError.element === \"claim_file\" &&\n                            this.setFormError(null);\n                        }}\n                      >\n                        {/* DISPLAYING FILTERED SELECTING FILE ============================ */}\n                        {this.state.claimFileId.length > 0 &&\n                        !this.state.chooseClaimFile ? (\n                          <p className=\"my-1 mx-2\">\n                            {this.state.thisClaimType ===\n                              PlansTypeKeys.DOCUMENT_VALIDATION &&\n                              this.props.claiming.candidateDocuments &&\n                              ClaimGetDocTitle(\n                                this.props.documentReducer,\n                                this.getDocumentById(\n                                  this.props.claiming.candidateDocuments,\n                                  this.state.claimFileId\n                                )\n                              ).main}\n                            {this.state.thisClaimType ===\n                              PlansTypeKeys.APPLICATION &&\n                              this.props.claiming.candidateApplications &&\n                              this.getApplicationById(\n                                this.props.claiming.candidateApplications,\n                                this.state.claimFileId\n                              ).position.position_title}\n                          </p>\n                        ) : (\n                          !this.state.chooseClaimFile && (\n                            <p className=\"my-1 mx-2\">\n                              Select Claim{\" \"}\n                              {this.state.thisClaimType &&\n                                this.state.thisClaimType\n                                  .toLocaleLowerCase()\n                                  .replace(/_/g, \" \")}\n                            </p>\n                          )\n                        )}\n                        {/* END DISPLAYING FILTERED SELECTING FILE ============================ */}\n\n                        {/* LISTING OF REJECTED DOCUMENTS ============================ */}\n                        {this.state.chooseClaimFile &&\n                          this.state.thisClaimType ===\n                            PlansTypeKeys.DOCUMENT_VALIDATION &&\n                          this.props.claiming.candidateDocuments &&\n                          this.props.claiming.myClaims &&\n                          this.props.sessionPlan.activeSessionPlan &&\n                          this.props.sessionPlan.activeSessionPlan !==\n                            \"none\" && (\n                            <FormDocumentList\n                              setChooseClaimFile={this.setChooseClaimFile}\n                              setClaimFileId={this.setClaimFileId}\n                              setViewThisFile={this.setViewThisFile}\n                              viewThisFile={this.state.viewThisFile}\n                              candidateDocuments={\n                                this.props.claiming.candidateDocuments\n                              }\n                              documentCategories={this.props.documentReducer}\n                              myClaims={this.props.claiming.myClaims}\n                              activeSession={\n                                this.props.sessionPlan.activeSessionPlan\n                              }\n                            />\n                          )}\n                        {/* END LISTING OF REJECTED DOCUMENTS ============================ */}\n                        {/* LISTING OF REJECTED APPLICATION ============================ */}\n                        {this.state.chooseClaimFile &&\n                          this.state.thisClaimType ===\n                            PlansTypeKeys.APPLICATION &&\n                          this.props.claiming.candidateApplications &&\n                          this.props.claiming.myClaims &&\n                          this.props.sessionPlan.activeSessionPlan &&\n                          this.props.sessionPlan.activeSessionPlan !==\n                            \"none\" && (\n                            <FormApplicationList\n                              setChooseClaimFile={this.setChooseClaimFile}\n                              setClaimFileId={this.setClaimFileId}\n                              setViewThisFile={this.setViewThisFile}\n                              viewThisFile={this.state.viewThisFile}\n                              candidateApplications={\n                                this.props.claiming.candidateApplications\n                              }\n                              myClaims={this.props.claiming.myClaims}\n                              activeSession={\n                                this.props.sessionPlan.activeSessionPlan\n                              }\n                            />\n                          )}\n                        {/* END LISTING OF REJECTED APPLICATION ============================ */}\n                      </div>\n                      {this.state.formError &&\n                        this.state.formError.element === \"claim_file\" && (\n                          <span className=\"text-red-500\">\n                            {this.state.formError.msg}\n                          </span>\n                        )}\n                    </div>\n                    {/* END SELECT FILE TO CLAIM ON ============================================== */}\n\n                    {/* CLAIM COMMENT ============================================== */}\n                    <div className=\"flex flex-col\">\n                      <label>Comment</label>\n                      <textarea\n                        className={`text-left input-white w-20 inline-block ${\n                          this.state.formError &&\n                          this.state.formError.element === \"claim_comment\"\n                            ? \"border-red-500\"\n                            : \"border-gray-500\"\n                        } border-2`}\n                        placeholder={`Claim comment`}\n                        style={{ resize: \"none\" }}\n                        value={this.state.claimComment}\n                        onChange={(e) => {\n                          this.setClaimComment(e.target.value);\n                          this.state.formError &&\n                            this.state.formError.element === \"claim_comment\" &&\n                            this.setFormError(null);\n                        }}\n                        rows={3}\n                        disabled={this.state.loadingForm}\n                      ></textarea>\n                      {this.state.formError &&\n                        this.state.formError.element === \"claim_comment\" && (\n                          <span className=\"text-red-500\">\n                            {this.state.formError.msg}\n                          </span>\n                        )}\n                    </div>\n                    {/* END CLAIM COMMENT ============================================== */}\n                  </div>\n                  <div className=\"pt-3 flex justify-between\">\n                    <button\n                      onClick={() => this.cleanToClose()}\n                      className={`btn bg-gray-400 text-white hover:bg-gray-600 focus:outline-none ${\n                        this.state.loadingForm && \"cursor-not-allowed\"\n                      }`}\n                      type=\"button\"\n                      disabled={this.state.loadingForm}\n                    >\n                      Exit\n                    </button>\n                    <button\n                      className={`btn bg-primary text-white hover:bg-blue-600 focus:outline-none ${\n                        this.state.loadingForm && \"cursor-wait\"\n                      }`}\n                      type=\"submit\"\n                      disabled={this.state.loadingForm}\n                    >\n                      {this.state.loadingForm ? \"Loading...\" : \"Claim\"}\n                    </button>\n                  </div>\n                </div>\n              </form>\n            )}\n            {/* END CLAIM FORM ============================================== */}\n\n            {/* CLAIM DOCUMENT VIEW ============================================== */}\n            {this.state.viewThisFile.length > 0 &&\n              this.props.claiming.candidateDocuments &&\n              this.state.thisClaimType ===\n                PlansTypeKeys.DOCUMENT_VALIDATION && (\n                <DocFormView\n                  thisDoc={this.getDocumentById(\n                    this.props.claiming.candidateDocuments,\n                    this.state.viewThisFile\n                  )}\n                  setViewThisFile={this.setViewThisFile}\n                  documentCategories={this.props.documentReducer}\n                  setChooseClaimFile={this.setChooseClaimFile}\n                  setClaimFileId={this.setClaimFileId}\n                />\n              )}\n            {/* END CLAIM DOCUMENT VIEW ============================================== */}\n            {/* CLAIM APPLICATION VIEW ============================================== */}\n            {this.state.viewThisFile.length > 0 &&\n              this.props.claiming.candidateApplications &&\n              this.state.thisClaimType === PlansTypeKeys.APPLICATION && (\n                <ApplicationFormView\n                  thisApplication={this.getApplicationById(\n                    this.props.claiming.candidateApplications,\n                    this.state.viewThisFile\n                  )}\n                  documentCategories={this.props.documentReducer}\n                  setChooseClaimFile={this.setChooseClaimFile}\n                  setClaimFileId={this.setClaimFileId}\n                  setViewThisFile={this.setViewThisFile}\n                />\n              )}\n            {/* END CLAIM APPLICATION VIEW ============================================== */}\n          </Modal>\n        )}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = ({\n  auth,\n  document,\n  claiming,\n  sessionPlan,\n}: StoreState): {\n  auth: Auth;\n  sessionPlan: SessionPlanReducerInterface;\n  documentReducer: DocumentReducerInterface;\n  claiming: ClaimingReducerType;\n} => {\n  return {\n    auth: auth,\n    sessionPlan,\n    documentReducer: document,\n    claiming,\n  };\n};\n\nexport default connect(mapStateToProps, {\n  getActiveSessionPlan,\n  createClaim,\n  GetClaimingTypes,\n  getMyRejectedApplications,\n  getMyRejectedDocuments,\n  getDocumentCategory,\n  getDocumentSubCategory,\n  getDocumentFields,\n  getApplicationSessions,\n  PushPopupAlert,\n})(ClaimForm);\n","import React from \"react\";\nimport { AiFillDashboard } from \"react-icons/ai\";\nimport { SessionPlanInterface } from \"../../interfaces\";\n\ntype ClaimHeaderTitleProps = {\n  headerTitle: string;\n  loading: boolean;\n  loadingSession: boolean;\n  periodChanged: boolean;\n  thisPeriod: SessionPlanInterface | null;\n  setThisPeriod: (state: SessionPlanInterface | null) => void;\n  setLoadingSession: (state: boolean) => void;\n  application_sessions: SessionPlanInterface[];\n  onPeriodChange: (period_id: string) => void;\n};\n\nconst selectPeriod = (\n  sessions: SessionPlanInterface[],\n  period_id: string,\n  setThisPeriod: (state: SessionPlanInterface | null) => void\n) => {\n  setThisPeriod(\n    sessions.filter((item) => item.session_plan_id === period_id)[0]\n  );\n};\n\nconst ClaimHeaderTitle: React.FC<ClaimHeaderTitleProps> = (props) => {\n  const isLoading = (): boolean => {\n    if (props.loading || props.loadingSession || props.periodChanged) {\n      return true;\n    }\n    return false;\n  };\n\n  return (\n    <div className=\"mt-3 rounded flex flex-col md:flex-row md:justify-between items-start\">\n      <div className=\"flex flex-row items-center gap-3 mb-2\">\n        <AiFillDashboard className=\"text-6xl text-blue-600 hidden md:block\" />\n        <div className=\"flex flex-col\">\n          <span className=\"text-blue-600 text-3xl font-bold\">\n            {props.headerTitle}\n          </span>\n        </div>\n      </div>\n\n      {/* FILTER SECTION PERIOD && EDUCATION */}\n      <section className=\"w-full md:w-auto my-2 md:my-0\">\n        <div>\n          <select\n            className={`bg-white text-gray-600 border border-gray-400 rounded p-2 focus:outline-none ${\n              isLoading() ? \"cursor-wait\" : \"cursor-default\"\n            }`}\n            value={props.thisPeriod ? props.thisPeriod.session_plan_id : \"\"}\n            disabled={isLoading()}\n            onChange={(e) => {\n              selectPeriod(\n                props.application_sessions,\n                e.target.value,\n                props.setThisPeriod\n              );\n              props.setLoadingSession(true);\n              props.onPeriodChange(e.target.value);\n            }}\n          >\n            {props.application_sessions.map((session, item) => (\n              <option\n                key={session.session_plan_id + item}\n                value={session.session_plan_id}\n              >\n                {session.session_plan_name}\n              </option>\n            ))}\n          </select>\n        </div>\n      </section>\n      {/* END FILTER SECTION PERIOD && EDUCATION */}\n    </div>\n  );\n};\n\nexport default ClaimHeaderTitle;\n","import React, { useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Auth, PushPopupAlert } from \"../../../actions\";\nimport {\n  getAllClaims,\n  GetClaimingTypes,\n  setSelectedClaimType,\n} from \"../../../actions/claiming\";\nimport { PopupAlertData } from \"../../../components/Alert/Popup\";\nimport { MainItem } from \"../../../components/Navigation/SideNavigation\";\nimport {\n  CandidateClaimInterface,\n  ClaimStatus,\n  PlansTypeKeys,\n} from \"../../../interfaces\";\nimport { PopupAlertTheme } from \"../../../interfaces/popupAlert\";\nimport { StoreState } from \"../../../reducers\";\nimport { ClaimingReducerType } from \"../../../reducers/claiming\";\n\nexport const filterClaimsByClaimType = (\n  claimList: CandidateClaimInterface[],\n  claimType: PlansTypeKeys | \"all\"\n): CandidateClaimInterface[] => {\n  if (claimType === \"all\") {\n    return claimList;\n  }\n\n  return claimList.filter((item) => item.type_key === claimType);\n};\n\ntype AdminFilterByTypeProps = {\n  loadingClaims: boolean;\n  FC_CountByType?: Function;\n\n  // REDUX PROPS =======================================\n  auth: Auth;\n  claiming: ClaimingReducerType;\n  GetClaimingTypes: Function;\n  setSelectedClaimType: Function;\n  getAllClaims: Function;\n  PushPopupAlert: (alert: PopupAlertData) => void;\n};\n\nconst AdminFilterByType: React.FC<AdminFilterByTypeProps> = (props) => {\n  const [loading, setLoading] = useState<boolean>(true);\n  const [loadingClaimTypes, setLoadingClaimTypes] = useState<boolean>(true);\n\n  useEffect(() => {\n    if (props.claiming.claimTypes === null) {\n      props.GetClaimingTypes((status: boolean, msg: string) => {\n        if (status === false) {\n          if (msg.length > 0) {\n            props.PushPopupAlert({\n              title: msg,\n              theme: PopupAlertTheme.danger,\n            });\n          }\n          setLoadingClaimTypes(false);\n          setLoading(false);\n        }\n      });\n    } else if (loadingClaimTypes) {\n      setLoadingClaimTypes(false);\n      setLoading(false);\n    }\n  }, [loadingClaimTypes, props]);\n\n  const countClaims = (\n    claiming: ClaimingReducerType,\n    thisType: PlansTypeKeys | \"all\"\n  ): number => {\n    let result: number = 0;\n\n    if (claiming.allClaims && thisType === \"all\") {\n      result = claiming.allClaims.filter(\n        (item) => item.last_claim_status === ClaimStatus.PENDING\n      ).length;\n    }\n    if (claiming.allClaims && thisType !== \"all\") {\n      result = claiming.allClaims.filter(\n        (item) =>\n          item.type_key === thisType &&\n          item.last_claim_status === ClaimStatus.PENDING\n      ).length;\n    }\n\n    return result;\n  };\n\n  return (\n    <React.Fragment>\n      <span className=\"mt-2 text-sm\">Filter by claim type</span>\n      {/* WHILE LOADING DATA ================================== */}\n      {(loading || props.loadingClaims) && (\n        <section className=\"space-y-2\">\n          <div className=\"w-full h-7 rounded bg-gray-200 animate__animated animate__pulse animate__delay-5s animate__infinite\"></div>\n          <div className=\"w-full h-7 rounded bg-gray-200 animate__animated animate__pulse animate__delay-5s animate__infinite\"></div>\n          <div className=\"w-full h-7 rounded bg-gray-200 animate__animated animate__pulse animate__delay-5s animate__infinite\"></div>\n          <div className=\"w-full h-7 rounded bg-gray-200 animate__animated animate__pulse animate__delay-5s animate__infinite\"></div>\n        </section>\n      )}\n      {/* END WHILE LOADING DATA ================================== */}\n\n      {/* AFTER LOADING DATA ================================== */}\n      {!loading && !props.loadingClaims && props.claiming.claimTypes && (\n        <section>\n          {/* ALL ================================= */}\n          <div\n            className=\"mt-2\"\n            onClick={() => {\n              // props.setThisClaimType(\"ALL\");\n              props.setSelectedClaimType(\"all\");\n            }}\n          >\n            <MainItem\n              title=\"All\"\n              active={props.claiming.selectedClaimType === \"all\"}\n              count={countClaims(props.claiming, \"all\")}\n            />\n          </div>\n          {/* APPLICATION ================================= */}\n          <div\n            className=\"mt-2\"\n            onClick={() => {\n              // props.setThisClaimType(ClaimTypesInterface.DOCUMENT);\n              props.setSelectedClaimType(PlansTypeKeys.APPLICATION);\n            }}\n          >\n            <MainItem\n              title={\"Application\"}\n              active={\n                props.claiming.selectedClaimType !== \"all\" &&\n                props.claiming.selectedClaimType === PlansTypeKeys.APPLICATION\n              }\n              count={countClaims(props.claiming, PlansTypeKeys.APPLICATION)}\n            />\n          </div>\n          {/* DOCUMENT ================================= */}\n          <div\n            className=\"mt-2\"\n            onClick={() => {\n              props.setSelectedClaimType(PlansTypeKeys.DOCUMENT_VALIDATION);\n            }}\n          >\n            <MainItem\n              title={\"Document\"}\n              active={\n                props.claiming.selectedClaimType !== \"all\" &&\n                props.claiming.selectedClaimType ===\n                  PlansTypeKeys.DOCUMENT_VALIDATION\n              }\n              count={countClaims(\n                props.claiming,\n                PlansTypeKeys.DOCUMENT_VALIDATION\n              )}\n            />\n          </div>\n          {/* EXAMINATION ================================= */}\n          <div\n            className=\"mt-2\"\n            onClick={() => {\n              props.setSelectedClaimType(PlansTypeKeys.EXAMINATION);\n            }}\n          >\n            <MainItem\n              title={\"Exam\"}\n              active={\n                props.claiming.selectedClaimType !== \"all\" &&\n                props.claiming.selectedClaimType === PlansTypeKeys.EXAMINATION\n              }\n              count={countClaims(props.claiming, PlansTypeKeys.EXAMINATION)}\n            />\n          </div>\n          {/* MARKS PUBLICATION ================================= */}\n          <div\n            className=\"mt-2\"\n            onClick={() => {\n              props.setSelectedClaimType(PlansTypeKeys.MARKS_PUBLICATION);\n            }}\n          >\n            <MainItem\n              title={\"Marks publication\"}\n              active={\n                props.claiming.selectedClaimType !== \"all\" &&\n                props.claiming.selectedClaimType ===\n                  PlansTypeKeys.MARKS_PUBLICATION\n              }\n              count={countClaims(\n                props.claiming,\n                PlansTypeKeys.MARKS_PUBLICATION\n              )}\n            />\n          </div>\n          {/* PLACEMENT TRANSFER ================================= */}\n          <div\n            className=\"mt-2\"\n            onClick={() => {\n              props.setSelectedClaimType(PlansTypeKeys.PLACEMENT_TRANSFER);\n            }}\n          >\n            <MainItem\n              title={\"Placement\"}\n              active={\n                props.claiming.selectedClaimType !== \"all\" &&\n                props.claiming.selectedClaimType ===\n                  PlansTypeKeys.PLACEMENT_TRANSFER\n              }\n              count={countClaims(\n                props.claiming,\n                PlansTypeKeys.PLACEMENT_TRANSFER\n              )}\n            />\n          </div>\n        </section>\n      )}\n      {/* END AFTER LOADING DATA ================================== */}\n    </React.Fragment>\n  );\n};\n\nconst mapStateToProps = ({\n  auth,\n  claiming,\n}: StoreState): { auth: Auth; claiming: ClaimingReducerType } => {\n  return { auth, claiming };\n};\n\nexport default connect(mapStateToProps, {\n  GetClaimingTypes,\n  setSelectedClaimType,\n  getAllClaims,\n  PushPopupAlert,\n})(AdminFilterByType);\n","import { ApexOptions } from \"apexcharts\";\nimport React, { useEffect, useState } from \"react\";\nimport Chart from \"react-apexcharts\";\n\ntype VBarCharPropstInterface = {\n  labels: string[];\n  categoriesLabel: any;\n  bar?: {\n    borderRadius: number;\n    horizontal: boolean;\n    columnWidth: string;\n    endingShape: string;\n  };\n  dataLabels: boolean;\n  yaxisText: string;\n  tooltipText: string;\n  series: {\n    name: string;\n    data: number[];\n  }[];\n  defaultBar?: {\n    borderRadius: number;\n    horizontal: boolean;\n    columnWidth: string;\n    endingShape: string;\n  };\n  colors?: any[];\n  title?: {\n    text: string;\n    align: string;\n    margin: number;\n    offestY: number;\n    style: {\n      fontSize: string;\n    };\n  };\n  stacked?: boolean;\n  FC_LoadSelected?: (labelIndex: number, seriesIndex: number) => void;\n  chartHeight?: number;\n};\n\nconst defaultBar = {\n  borderRadius: 4,\n  horizontal: false,\n  columnWidth: \"95%\",\n  endingShape: \"rounded\",\n};\n\nconst VBarChart: React.FC<VBarCharPropstInterface> = (props) => {\n  const [loading, setLoading] = useState<boolean>(true);\n  const [options, setOptions] = useState<ApexOptions>({\n    chart: {\n      events: {\n        dataPointSelection: (event, chartContext, config) => {\n          console.log({\n            labelClicked: config.w.config.labels[config.dataPointIndex],\n            // seriesClicked: config.w.config.series[config.dataPointIndex],\n          });\n          if (props.FC_LoadSelected) {\n            props.FC_LoadSelected(config.dataPointIndex, config.seriesIndex);\n          }\n          // console.log(config.seriesIndex);\n          // console.log(config.dataPointIndex);\n        },\n      },\n      stacked: props.stacked ? props.stacked : false,\n    },\n    plotOptions: {\n      bar: props.defaultBar ? props.defaultBar : defaultBar,\n    },\n    labels: props.labels,\n    dataLabels: {\n      enabled: true,\n    },\n    xaxis: {\n      labels: {\n        rotate: -45,\n      },\n      categories: props.categoriesLabel,\n      tickPlacement: \"on\",\n    },\n    yaxis: {\n      title: {\n        text: props.yaxisText,\n      },\n    },\n    fill: {\n      opacity: 1,\n    },\n    tooltip: {\n      y: {\n        formatter: function (val: number) {\n          return val + \" \" + props.tooltipText;\n        },\n      },\n    },\n    grid: {\n      padding: {\n        left: 30, // or whatever value that works\n        right: 30, // or whatever value that works\n      },\n    },\n    noData: {\n      text: \"No data found\",\n      align: \"center\",\n      verticalAlign: \"middle\",\n    },\n  });\n\n  useEffect(() => {\n    if (props.colors && props.colors.length > 0 && loading) {\n      setOptions({\n        chart: {\n          stacked: props.stacked ? props.stacked : false,\n          events: {\n            dataPointSelection: (event, chartContext, config) => {\n              console.log({\n                chartClicked: config.w.config.labels[config.dataPointIndex],\n              });\n              if (props.FC_LoadSelected) {\n                props.FC_LoadSelected(\n                  config.dataPointIndex,\n                  config.seriesIndex\n                );\n              }\n            },\n          },\n          zoom: {\n            enabled: true,\n            autoScaleYaxis: true,\n          },\n        },\n        plotOptions: {\n          bar: props.defaultBar ? props.defaultBar : defaultBar,\n        },\n        labels: props.labels,\n        dataLabels: {\n          enabled: true,\n        },\n        xaxis: {\n          labels: {\n            rotate: -45,\n          },\n          categories: props.categoriesLabel,\n          tickPlacement: \"on\",\n        },\n        yaxis: {\n          title: {\n            text: props.yaxisText,\n          },\n        },\n        fill: {\n          opacity: 1,\n        },\n        tooltip: {\n          y: {\n            formatter: function (val: number) {\n              return val + \" \" + props.tooltipText;\n            },\n          },\n        },\n        grid: {\n          padding: {\n            left: 30, // or whatever value that works\n            right: 30, // or whatever value that works\n          },\n        },\n        noData: {\n          text: \"No data found\",\n          align: \"center\",\n          verticalAlign: \"middle\",\n        },\n        colors: props.colors,\n      });\n    } else if (loading) {\n      setOptions({\n        chart: {\n          stacked: props.stacked ? props.stacked : false,\n          events: {\n            dataPointSelection: (event, chartContext, config) => {\n              console.log({\n                labelClicked: config.w.config.labels[config.dataPointIndex],\n                // seriesClicked: config.w.config.series[config.dataPointIndex],\n              });\n              if (props.FC_LoadSelected) {\n                props.FC_LoadSelected(\n                  config.dataPointIndex,\n                  config.seriesIndex\n                );\n              }\n              // console.log(config.seriesIndex);\n              // console.log(config.dataPointIndex);\n            },\n          },\n          zoom: {\n            enabled: true,\n            autoScaleYaxis: true,\n          },\n        },\n        plotOptions: {\n          bar: props.defaultBar ? props.defaultBar : defaultBar,\n        },\n        labels: props.labels,\n        dataLabels: {\n          enabled: true,\n        },\n        xaxis: {\n          labels: {\n            rotate: -45,\n          },\n          categories: props.categoriesLabel,\n          tickPlacement: \"on\",\n        },\n        yaxis: {\n          title: {\n            text: props.yaxisText,\n          },\n        },\n        fill: {\n          opacity: 1,\n        },\n        tooltip: {\n          y: {\n            formatter: function (val: number) {\n              return val + \" \" + props.tooltipText;\n            },\n          },\n        },\n        grid: {\n          padding: {\n            left: 30, // or whatever value that works\n            right: 30, // or whatever value that works\n          },\n        },\n        noData: {\n          text: \"No data found\",\n          align: \"center\",\n          verticalAlign: \"middle\",\n        },\n      });\n    }\n    setLoading(false);\n  }, [loading, options, props]);\n\n  if (loading) {\n    return (\n      <div className=\"text-center mt-7 font-bold text-4xl text-gray-400 animate-pulse\">\n        Loading Data...\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"w-full\">\n      <Chart\n        options={options}\n        series={props.series}\n        type=\"bar\"\n        width=\"100%\"\n        height={props.chartHeight ? props.chartHeight : undefined}\n      />\n    </div>\n  );\n};\n\nexport default VBarChart;\n","import axios from \"axios\";\nimport React, { Component } from \"react\";\nimport { VscLoading } from \"react-icons/vsc\";\nimport { connect } from \"react-redux\";\nimport { PushPopupAlert } from \"../../actions\";\nimport { updateSessionPlan } from \"../../actions/session\";\nimport { PopupAlertData } from \"../../components/Alert/Popup\";\nimport {\n  allPlanTypes,\n  PlansInterface,\n  PlansTypeInterface,\n  PlansTypeKeys,\n  SessionPlanInterface,\n  SessionPlanTypeStatus,\n} from \"../../interfaces\";\nimport { PopupAlertTheme } from \"../../interfaces/popupAlert\";\nimport { capitalizeFirstLetter } from \"../../shared/dataTest\";\nimport { API } from \"../../utils/api\";\nimport { DATE, errorToText } from \"../../utils/functions\";\n\nexport const isActivationAllowed = (thisPlans: PlansInterface): boolean => {\n  let today: Date = new Date(),\n    end_date = new Date(thisPlans.end_date);\n  if (end_date.getTime() >= today.getTime()) {\n    return true;\n  }\n  return false;\n};\n\nexport const getPlanTypeByKey = (\n  type_key: PlansTypeKeys\n): PlansTypeInterface | undefined => {\n  return allPlanTypes.find((item) => item.type_key === type_key);\n};\n\nexport const isPlanActive = (\n  viewThisSession: SessionPlanInterface,\n  thisPlan: PlansInterface\n): \"OPEN\" | \"CLOSED\" | \"WAITING\" => {\n  if (viewThisSession.is_active) {\n    let today = new Date(),\n      planEndDate = new Date(thisPlan.end_date),\n      planStartDate = new Date(thisPlan.start_date);\n    if (\n      planEndDate.getTime() >= today.getTime() &&\n      planStartDate.getTime() <= today.getTime() &&\n      thisPlan.type_status !== SessionPlanTypeStatus.CLOSED\n    ) {\n      return \"OPEN\";\n    } else if (\n      planStartDate.getTime() > today.getTime() &&\n      thisPlan.type_status !== SessionPlanTypeStatus.CLOSED\n    ) {\n      return \"WAITING\";\n    }\n  }\n  return \"CLOSED\";\n};\n\ntype SessionDetailsProps = {\n  viewThisSession: SessionPlanInterface;\n  setViewThisSession: (data: SessionPlanInterface) => void;\n\n  // REDUX ----------------\n  updateSessionPlan: Function;\n  PushPopupAlert: (alert: PopupAlertData) => void;\n};\n\ntype SessionDetailsState = {\n  loadingRequest: string;\n};\n\nexport class SessionDetails extends Component<\n  SessionDetailsProps,\n  SessionDetailsState\n> {\n  constructor(props: SessionDetailsProps) {\n    super(props);\n\n    this.state = {\n      loadingRequest: \"\",\n    };\n  }\n\n  handlePlanActivation = async (\n    session: SessionPlanInterface,\n    thisPlan: PlansInterface\n  ) => {\n    const newState: \"open\" | \"close\" = session.is_active ? \"close\" : \"open\";\n\n    if (!window.confirm(`Are you sure you want to ${newState} this plan?`)) {\n      return true;\n    }\n\n    if (!isActivationAllowed(thisPlan)) {\n      this.props.PushPopupAlert({\n        title: `Opening/Closing plan which has been expired is not allowed!`,\n        theme: PopupAlertTheme.warning,\n      });\n    }\n\n    let newData: SessionPlanInterface = {\n      session_plan_name: session.session_plan_name,\n      period: session.period,\n      is_active: session.is_active,\n      plans: [],\n      createdAt: session.createdAt,\n      updatedAt: session.updatedAt,\n      session_plan_id: session.session_plan_id,\n    };\n    for (const key in session.plans) {\n      if (Object.prototype.hasOwnProperty.call(session.plans, key)) {\n        const element = session.plans[key];\n        if (thisPlan.type_key === element.type_key) {\n          if (thisPlan.type_status === SessionPlanTypeStatus.OPEN) {\n            newData.plans.push({\n              type_id: thisPlan.type_id,\n              type_title: thisPlan.type_title,\n              type_key: thisPlan.type_key,\n              type_status: SessionPlanTypeStatus.CLOSED,\n              start_date: thisPlan.start_date,\n              end_date: thisPlan.end_date,\n              allowed_claim_level: thisPlan.allowed_claim_level,\n              _id: thisPlan._id,\n              history: thisPlan.history,\n            });\n          } else {\n            newData.plans.push({\n              type_id: thisPlan.type_id,\n              type_title: thisPlan.type_title,\n              type_key: thisPlan.type_key,\n              type_status: SessionPlanTypeStatus.OPEN,\n              start_date: thisPlan.start_date,\n              end_date: thisPlan.end_date,\n              allowed_claim_level: thisPlan.allowed_claim_level,\n              _id: thisPlan._id,\n              history: thisPlan.history,\n            });\n          }\n        } else {\n          newData.plans.push(element);\n        }\n      }\n    }\n\n    console.log(\"====================================\");\n    console.log({ newData });\n    console.log(\"====================================\");\n\n    this.setState({ loadingRequest: thisPlan.type_key });\n    try {\n      const res = await axios.put<SessionPlanInterface>(\n        `${API.CLAIMING}/session/${session.session_plan_id}`,\n        newData\n      );\n      this.props.updateSessionPlan(res.data);\n      this.props.setViewThisSession(res.data);\n      this.props.PushPopupAlert({\n        title: `Session ${newState}d successfully`,\n        theme: PopupAlertTheme.info,\n      });\n      this.setState({ loadingRequest: \"\" });\n      console.log(\"updateSessionPlan: \", res);\n    } catch (error) {\n      console.error({ error: errorToText(error) });\n      this.props.PushPopupAlert({\n        title: errorToText(error),\n        theme: PopupAlertTheme.warning,\n      });\n    }\n  };\n\n  render() {\n    return (\n      <table className=\"w-full bg-white shadow p-5\" id=\"session_content\">\n        <thead className=\"bg-white border-b-2 border-gray-300 text-gray-600 font-bold text-sm\">\n          <tr>\n            <td className=\"p-2\">#</td>\n            <td className=\"p-2\">Plan Type</td>\n            <td className=\"p-2\">Start Date</td>\n            <td className=\"p-2\">End date</td>\n            {this.props.viewThisSession.is_active && (\n              <td className=\"p-2\" colSpan={2}>\n                Status\n              </td>\n            )}\n          </tr>\n        </thead>\n        <tbody>\n          {/* WHILE DATA FOUND ====================== */}\n          {this.props.viewThisSession.plans.map((item, index) => (\n            <tr\n              key={index + item._id}\n              className={`border-b border-gray-200 hover:bg-gray-100`}\n            >\n              <td className=\"p-2 text-left whitespace-nowrap\">{index + 1}</td>\n              <td className=\"p-2 text-left\">\n                <span className=\"text-lg\">\n                  {getPlanTypeByKey(item.type_key) &&\n                    capitalizeFirstLetter(\n                      getPlanTypeByKey(item.type_key)!.type_title\n                    )}\n                </span>\n              </td>\n              <td className=\"p-2 text-left\">{DATE(item.start_date)}</td>\n              <td className=\"p-2 text-left\">{DATE(item.end_date)}</td>\n              {this.props.viewThisSession.is_active && (\n                <td>\n                  {isPlanActive(this.props.viewThisSession, item) === \"OPEN\" ? (\n                    <span className={`px-2 py-1 font-semibold text-green-700`}>\n                      Open\n                    </span>\n                  ) : isPlanActive(this.props.viewThisSession, item) ===\n                    \"WAITING\" ? (\n                    <span className={`px-2 py-1 font-semibold text-gray-700`}>\n                      Waiting\n                    </span>\n                  ) : (\n                    <span className={`px-2 py-1 font-semibold text-red-700`}>\n                      Closed\n                    </span>\n                  )}\n                </td>\n              )}\n              {this.props.viewThisSession.is_active && (\n                <td>\n                  {isActivationAllowed(item) && (\n                    <div className=\"flex items-center justify-center gap-1\">\n                      <div\n                        className={`relative ${\n                          this.state.loadingRequest.length > 0\n                            ? \"cursor-not-allowed\"\n                            : \"cursor-pointer\"\n                        }`}\n                        title={\n                          item.type_status === SessionPlanTypeStatus.OPEN\n                            ? \"Deactivating session\"\n                            : \"Activating session\"\n                        }\n                        onClick={() =>\n                          this.state.loadingRequest.length <= 0 &&\n                          this.handlePlanActivation(\n                            this.props.viewThisSession,\n                            item\n                          )\n                        }\n                      >\n                        <span className=\"block w-14 h-8 bg-gray-100 rounded-full shadow-inner\"></span>\n                        <span\n                          className={`absolute block w-6 h-6 mt-1 ml-1 rounded-full shadow inset-y-0 left-0 focus-within:shadow-outline transition-transform duration-500 ease-in-out ${\n                            item.type_status === SessionPlanTypeStatus.CLOSED\n                              ? \"bg-red-500\"\n                              : \"bg-green-500 transform translate-x-full\"\n                          }`}\n                        ></span>\n                      </div>\n                      {this.state.loadingRequest === item.type_key && (\n                        <VscLoading className=\"animate__animated animate__rotateIn animate__infinite\" />\n                      )}\n                    </div>\n                  )}\n                </td>\n              )}\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    );\n  }\n}\n\nexport default connect(null, {\n  updateSessionPlan,\n  PushPopupAlert,\n})(SessionDetails);\n","import React, { Fragment, useEffect, useState } from \"react\";\nimport { MdAdd, MdArrowBack, MdDelete } from \"react-icons/md\";\nimport { connect } from \"react-redux\";\nimport { PushPopupAlert } from \"../../../actions\";\nimport { Auth } from \"../../../actions/auth\";\nimport { DocumentClaimUser, getMyClaims } from \"../../../actions/claiming\";\nimport {\n  getDocumentCategory,\n  getDocumentSubCategory,\n  getDocumentFields,\n} from \"../../../actions/document\";\nimport { PopupAlertData } from \"../../../components/Alert/Popup\";\nimport { SideNavigation } from \"../../../components/Navigation/SideNavigation\";\nimport Table from \"../../../components/Table/Table\";\nimport {\n  CandidateClaimInterface,\n  claimApplicationsInterface,\n  ClaimStatus,\n  PlansTypeKeys,\n  SessionPlanInterface,\n} from \"../../../interfaces\";\nimport { PopupAlertTheme } from \"../../../interfaces/popupAlert\";\nimport { StoreState } from \"../../../reducers\";\nimport { ClaimingReducerType } from \"../../../reducers/claiming\";\nimport { DocumentReducerInterface } from \"../../../reducers/document\";\nimport { capitalizeFirstLetter } from \"../../../shared/dataTest\";\nimport ClaimHeaderTitle from \"../ClaimHeaderTitle\";\nimport ClaimDocView, { isClaimEvaluated } from \"../ClaimDocView\";\nimport FilterByType from \"./FilterByType\";\nimport ClaimForm, { ClaimGetDocTitle } from \"./ClaimForm\";\nimport NoResult, {\n  NoResultThemes,\n} from \"../../../components/NoResult/NoResult\";\nimport { filterClaimsByClaimType } from \"../Admin/AdminFilterByType\";\nimport ClaimApplView from \"../ClaimApplView\";\nimport { GetAllSessionPlans } from \"../../../actions/session\";\n\nexport const getDocumentById = (\n  candidateDocuments: DocumentClaimUser[],\n  document_id: string\n): DocumentClaimUser | null => {\n  let result: DocumentClaimUser | undefined = candidateDocuments.find(\n    (item) => item.doc_id === document_id\n  );\n  return result ? result : null;\n};\n\nexport const getApplicationById = (\n  candidateApplications: claimApplicationsInterface[],\n  application_id: string\n): claimApplicationsInterface | null => {\n  let result: claimApplicationsInterface | undefined =\n    candidateApplications.find(\n      (item) => item.application_id === application_id\n    );\n  return result ? result : null;\n};\n\nexport const getClaimById = (\n  claimList: CandidateClaimInterface[],\n  claim_id: string\n): CandidateClaimInterface | null => {\n  let result: CandidateClaimInterface | undefined = claimList.find(\n    (item) => item.id === claim_id\n  );\n  return result ? result : null;\n};\n\nexport enum ClaimTypesEnum {\n  application = \"application\",\n  document = \"document\",\n  exam = \"exam\",\n  marks_publication = \"marks publication\",\n  placement = \"placement\",\n}\nexport const whichClaimType = (\n  thisClaim: CandidateClaimInterface\n): ClaimTypesEnum | undefined => {\n  if (thisClaim.type_key === PlansTypeKeys.APPLICATION) {\n    return ClaimTypesEnum.application;\n  }\n  if (thisClaim.type_key === PlansTypeKeys.DOCUMENT_VALIDATION) {\n    return ClaimTypesEnum.document;\n  }\n  if (thisClaim.type_key === PlansTypeKeys.EXAMINATION) {\n    return ClaimTypesEnum.exam;\n  }\n  if (thisClaim.type_key === PlansTypeKeys.MARKS_PUBLICATION) {\n    return ClaimTypesEnum.marks_publication;\n  }\n  if (thisClaim.type_key === PlansTypeKeys.PLACEMENT_TRANSFER) {\n    return ClaimTypesEnum.placement;\n  }\n};\n\nexport const whichClaimStatus = (\n  thisClaim: CandidateClaimInterface\n): {\n  classes: string;\n  status: string;\n} => {\n  let classes: string, status: string;\n  switch (thisClaim.last_claim_status) {\n    case ClaimStatus.COMPLETED:\n      classes = \"text-blue-700 italic font-semiblod\";\n      status = capitalizeFirstLetter(ClaimStatus.COMPLETED.toLocaleLowerCase());\n      break;\n    case ClaimStatus.EVALUATED:\n      classes = \"text-green-700 italic font-semiblod\";\n      status = capitalizeFirstLetter(ClaimStatus.EVALUATED.toLocaleLowerCase());\n      break;\n\n    case ClaimStatus.DELETED:\n      classes = \"text-red-700 italic font-semiblod\";\n      status = capitalizeFirstLetter(ClaimStatus.DELETED.toLocaleLowerCase());\n      break;\n\n    default:\n      classes = \"text-yellow-700 italic font-semiblod\";\n      status = capitalizeFirstLetter(ClaimStatus.PENDING.toLocaleLowerCase());\n      break;\n  }\n\n  return { classes, status };\n};\n\nexport const displayDocClaimTitle = (\n  documentCategories: DocumentReducerInterface,\n  candidateDocuments: DocumentClaimUser[],\n  thisClaim: CandidateClaimInterface\n): string => {\n  let result: string = \"\";\n\n  // CHECK IF CLAIM IS FOR DOCUMENTS ===============================================\n  if (thisClaim.type_key === PlansTypeKeys.DOCUMENT_VALIDATION) {\n    let thisDoc = getDocumentById(candidateDocuments, thisClaim.claiming_on_id);\n    result = thisDoc\n      ? ClaimGetDocTitle(documentCategories, thisDoc).main\n      : \"Document not found\";\n  }\n  // END CHECK IF CLAIM IS FOR DOCUMENTS ===============================================\n  return result;\n};\n\nexport const displayClaimTitle = (\n  claiming: ClaimingReducerType,\n  documentReducer: DocumentReducerInterface,\n  thisClaim: CandidateClaimInterface\n): string => {\n  let result: string = thisClaim.claiming_on_id;\n\n  if (thisClaim.type_key === PlansTypeKeys.DOCUMENT_VALIDATION) {\n    result = displayDocClaimTitle(\n      documentReducer,\n      claiming.candidateDocuments!,\n      thisClaim\n    );\n  }\n  if (\n    thisClaim.type_key === PlansTypeKeys.APPLICATION &&\n    claiming.candidateApplications\n  ) {\n    let thisApplication = getApplicationById(\n      claiming.candidateApplications,\n      thisClaim.claiming_on_id\n    );\n    if (thisApplication) {\n      result = thisApplication.position.position_title;\n    } else {\n      result = \"Application not found\";\n    }\n  }\n\n  return result;\n};\n\ntype AppProps = {\n  auth: Auth;\n  claiming: ClaimingReducerType;\n  application_sessions: SessionPlanInterface[] | null;\n  documentReducer: DocumentReducerInterface;\n  getMyClaims: Function;\n  GetAllSessionPlans: Function;\n  getDocumentCategory: Function;\n  getDocumentSubCategory: Function;\n  getDocumentFields: Function;\n  PushPopupAlert: (alert: PopupAlertData) => void;\n};\n\nconst Index: React.FC<AppProps> = (props) => {\n  const [thisPeriod, setThisPeriod] = useState<SessionPlanInterface | null>(\n    null\n  );\n  const [loading, setLoading] = useState<boolean>(true);\n  const [loadingSession, setLoadingSession] = useState<boolean>(true);\n  const [loadingClaims, setLoadingClaims] = useState<boolean>(true);\n  const [periodChanged, setPeriodChanged] = useState<boolean>(false);\n  const [loadingDocuments, setLoadingDocuments] = useState<boolean>(true);\n  const [loadingClarifications, setLoadingClarifications] =\n    useState<boolean>(true);\n  const [loadingFields, setLoadingFields] = useState<boolean>(true);\n  const [viewClaim, setViewClaim] = useState<boolean>(false);\n  const [claimId, setClaimId] = useState<string | null>(null);\n  const [claimForm, setClaimForm] = useState<boolean>(false);\n\n  // FOR FORM ================\n  const [viewImage, setViewImage] = useState<boolean>(false);\n  const [loadingRequest, setLoadingRequest] = useState<boolean>(false);\n  const [reClaiming, setReClaiming] = useState<boolean>(false);\n  const [reClaimingMsg, setReClaimingMsg] = useState<string>(\"\");\n  const [formError, setFormError] = useState<{\n    element: string;\n    msg: string;\n  } | null>(null);\n\n  useEffect(() => {\n    // LOADING APPLICATION SESSION ====================================\n    if (props.application_sessions === null) {\n      props.GetAllSessionPlans((status: boolean, msg: string) => {\n        if (!status) {\n          setLoadingSession(false);\n          setLoading(false);\n          if (msg.length) {\n            props.PushPopupAlert({\n              title: msg,\n              theme: PopupAlertTheme.danger,\n            });\n          }\n        }\n      });\n    } else if (loadingSession) {\n      setLoading(false);\n      setLoadingSession(false);\n    }\n\n    // SETTING ACTIVE SESSION ==========================\n    if (thisPeriod === null && !loadingSession && props.application_sessions) {\n      let thisSession = props.application_sessions.find(\n        (item) => item.is_active === true\n      );\n      setThisPeriod(\n        thisSession\n          ? thisSession\n          : props.application_sessions[props.application_sessions.length - 1]\n      );\n    }\n\n    if (!props.documentReducer.documentCategory && loadingDocuments) {\n      props.getDocumentCategory();\n      setLoadingDocuments(false);\n    } else if (loadingDocuments) {\n      setLoadingDocuments(false);\n    }\n    if (!props.documentReducer.documentSubCategory && loadingClarifications) {\n      props.getDocumentSubCategory();\n      setLoadingClarifications(false);\n    } else if (loadingClarifications) {\n      setLoadingClarifications(false);\n    }\n    if (!props.documentReducer.documentFields && loadingFields) {\n      props.getDocumentFields();\n      setLoadingFields(false);\n    } else if (loadingFields) {\n      setLoadingFields(false);\n    }\n\n    // LOADING CLAIMING OF CURRENT CANDIDATES ================================\n    if (props.claiming.myClaims === null && thisPeriod !== null) {\n      props.getMyClaims(\n        props.auth.user.user_id,\n        thisPeriod.session_plan_id,\n        (status: boolean, msg: string) => {\n          !status && setLoadingClaims(status);\n          if (status === false && msg.length) {\n            props.PushPopupAlert({\n              title: msg,\n              theme: PopupAlertTheme.danger,\n            });\n          }\n        }\n      );\n    } else if (thisPeriod && loadingClaims) {\n      setLoadingClaims(false);\n    }\n  }, [\n    loadingClaims,\n    loadingClarifications,\n    loadingDocuments,\n    loadingFields,\n    loadingSession,\n    props,\n    thisPeriod,\n  ]);\n\n  if (loading === true || props.application_sessions === null) {\n    return (\n      <div className=\"text-center mt-7 font-bold text-4xl text-gray-400 animate-pulse\">\n        Loading Data...\n      </div>\n    );\n  }\n\n  const tableData = (): JSX.Element[] => {\n    if (\n      props.claiming.myClaims &&\n      props.claiming.candidateDocuments &&\n      props.claiming.claimTypes &&\n      !loadingDocuments &&\n      !loadingSession &&\n      !loadingClaims &&\n      !periodChanged\n    ) {\n      if (\n        filterClaimsByClaimType(\n          props.claiming.myClaims,\n          props.claiming.selectedClaimType\n        ).length <= 0\n      ) {\n        return [\n          <tr\n            className=\"border-b border-gray-200 group hover:bg-gray-50 cursor-pointer\"\n            key=\"key3201\"\n          >\n            <td className=\"px-3 py-1\">\n              <NoResult\n                theme={NoResultThemes.Light}\n                value={\"No claim found!\"}\n              />\n            </td>\n          </tr>,\n        ];\n      }\n      return filterClaimsByClaimType(\n        props.claiming.myClaims,\n        props.claiming.selectedClaimType\n      ).map((claim, index) => (\n        <tr\n          className=\"border-b border-gray-200 group hover:bg-gray-50 cursor-pointer\"\n          key={index + claim.id}\n          onClick={() => {\n            setViewClaim(true);\n            setClaimId(claim.id);\n          }}\n        >\n          <td className=\"px-3 py-1 whitespace-nowrap\">\n            {displayClaimTitle(props.claiming, props.documentReducer, claim)}\n          </td>\n          <td className=\"px-3 py-1 text-center whitespace-nowrap\">\n            {whichClaimType(claim) ? whichClaimType(claim) : \"-\"}\n          </td>\n          <td className=\"px-3 py-1 text-center whitespace-nowrap\">\n            <span\n              className={`inline-block rounded-full duration-300 text-xs font-semibold px-3 py-1 ${\n                whichClaimStatus(claim).classes\n              }`}\n            >\n              {whichClaimStatus(claim).status}\n            </span>\n          </td>\n          <td className=\"px-3 py-1 text-center whitespace-nowrap\">\n            <button className=\"btn bg-blue-500 text-white group-hover:bg-blue-600\">\n              View\n            </button>\n          </td>\n        </tr>\n      ));\n    }\n\n    return [\n      <tr key={43243} className=\"border-b border-gray-200\">\n        <td className=\"p-3 text-center whitespace-nowrap\">\n          <div className=\"w-full h-4 rounded bg-gray-200 animate__animated animate__pulse animate__delay-5s animate__infinite\"></div>\n        </td>\n        <td className=\"p-3 text-center whitespace-nowrap\">\n          <div className=\"w-full h-4 rounded bg-gray-200 animate__animated animate__pulse animate__delay-5s animate__infinite\"></div>\n        </td>\n        <td className=\"p-3 text-center whitespace-nowrap\">\n          <div className=\"w-full h-4 rounded bg-gray-200 animate__animated animate__pulse animate__delay-5s animate__infinite\"></div>\n        </td>\n        <td className=\"p-3 text-center whitespace-nowrap\">\n          <div className=\"w-full h-4 rounded bg-gray-200 animate__animated animate__pulse animate__delay-5s animate__infinite\"></div>\n        </td>\n      </tr>,\n      <tr key={43243343} className=\"border-b border-gray-200\">\n        <td className=\"p-3 text-center whitespace-nowrap\">\n          <div className=\"w-full h-4 rounded bg-gray-200 animate__animated animate__pulse animate__delay-5s animate__infinite\"></div>\n        </td>\n        <td className=\"p-3 text-center whitespace-nowrap\">\n          <div className=\"w-full h-4 rounded bg-gray-200 animate__animated animate__pulse animate__delay-5s animate__infinite\"></div>\n        </td>\n        <td className=\"p-3 text-center whitespace-nowrap\">\n          <div className=\"w-full h-4 rounded bg-gray-200 animate__animated animate__pulse animate__delay-5s animate__infinite\"></div>\n        </td>\n        <td className=\"p-3 text-center whitespace-nowrap\">\n          <div className=\"w-full h-4 rounded bg-gray-200 animate__animated animate__pulse animate__delay-5s animate__infinite\"></div>\n        </td>\n      </tr>,\n      <tr key={4327543} className=\"border-b border-gray-200\">\n        <td className=\"p-3 text-center whitespace-nowrap\">\n          <div className=\"w-full h-4 rounded bg-gray-200 animate__animated animate__pulse animate__delay-5s animate__infinite\"></div>\n        </td>\n        <td className=\"p-3 text-center whitespace-nowrap\">\n          <div className=\"w-full h-4 rounded bg-gray-200 animate__animated animate__pulse animate__delay-5s animate__infinite\"></div>\n        </td>\n        <td className=\"p-3 text-center whitespace-nowrap\">\n          <div className=\"w-full h-4 rounded bg-gray-200 animate__animated animate__pulse animate__delay-5s animate__infinite\"></div>\n        </td>\n        <td className=\"p-3 text-center whitespace-nowrap\">\n          <div className=\"w-full h-4 rounded bg-gray-200 animate__animated animate__pulse animate__delay-5s animate__infinite\"></div>\n        </td>\n      </tr>,\n    ];\n  };\n\n  const isDeleteAllowed = (thisCLaim: CandidateClaimInterface): boolean => {\n    if (!isClaimEvaluated(thisCLaim, 1)) {\n      return true;\n    }\n    return false;\n  };\n\n  const onPeriodChange = (period_id: string) => {\n    setPeriodChanged(true);\n    props.getMyClaims(\n      props.auth.user.user_id,\n      period_id,\n      (status: boolean, msg: string) => {\n        !status && setPeriodChanged(false);\n        if (status === false && msg.length) {\n          props.PushPopupAlert({\n            title: msg,\n            theme: PopupAlertTheme.danger,\n          });\n        }\n      }\n    );\n  };\n\n  const handleDelete = async () => {};\n\n  return (\n    <Fragment>\n      {/* {props.claiming.myClaims} */}\n      {/* SIDE NAVIGATION */}\n      {!viewClaim && (\n        <SideNavigation>\n          <button\n            className=\"btn mb-3 border-2 border-blue-500 hover:bg-blue-500 hover:text-white flex items-center flex-1 font-bold w-full focus:outline-none\"\n            onClick={() => setClaimForm(true)}\n            disabled={viewClaim || loading}\n          >\n            <MdAdd className=\"inline-block mr-1 text-xl font-bold\" />\n            <span>Claiming</span>\n          </button>\n\n          {/* FILTER SECTION */}\n          <FilterByType loadingClaims={loadingClaims} />\n          {/* END FILTER SECTION */}\n        </SideNavigation>\n      )}\n      {/* END SIDE NAVIGATION */}\n\n      {/* CLAIM TITLE ===================================== */}\n      {!viewClaim && (\n        <ClaimHeaderTitle\n          headerTitle={`${\n            props.claiming.selectedClaimType === \"all\"\n              ? \"All\"\n              : props.claiming.selectedClaimType ===\n                PlansTypeKeys.DOCUMENT_VALIDATION\n              ? \"Documents\"\n              : props.claiming.selectedClaimType === PlansTypeKeys.APPLICATION\n              ? \"Applications\"\n              : props.claiming.selectedClaimType === PlansTypeKeys.EXAMINATION\n              ? \"Exam\"\n              : props.claiming.selectedClaimType ===\n                PlansTypeKeys.MARKS_PUBLICATION\n              ? \"Marks publication\"\n              : props.claiming.selectedClaimType ===\n                PlansTypeKeys.PLACEMENT_TRANSFER\n              ? \"Placements\"\n              : \"\"\n          } Claiming`}\n          loading={loading}\n          loadingSession={loadingSession}\n          thisPeriod={thisPeriod}\n          setThisPeriod={setThisPeriod}\n          setLoadingSession={setLoadingSession}\n          application_sessions={props.application_sessions}\n          onPeriodChange={onPeriodChange}\n          periodChanged={periodChanged}\n        />\n      )}\n      {/* END CLAIM TITLE ===================================== */}\n\n      {!viewClaim && (\n        <section className=\"bg-white w-full p-1\">\n          {\n            <Table\n              columns={[\n                { columnTitle: \"\", alignText: \"left\", padding: \"p-3\" },\n                { columnTitle: \"\", alignText: \"left\", padding: \"p-3\" },\n                {\n                  columnTitle: \"\",\n                  alignText: \"left\",\n                  padding: \"p-3\",\n                },\n                {\n                  columnTitle: \"\",\n                  alignText: \"left\",\n                  padding: \"p-3\",\n                },\n                { columnTitle: \"\", alignText: \"left\", padding: \"p-3\" },\n              ]}\n              hideColumns={true}\n              rows={tableData}\n              pagination={true}\n              search={true}\n              thColor=\"gray\"\n              loading={loadingClaims}\n            />\n          }\n        </section>\n      )}\n\n      {/* view claim */}\n      {viewClaim &&\n        props.claiming.myClaims &&\n        claimId &&\n        getClaimById(props.claiming.myClaims, claimId) && (\n          <section className=\"bg-white w-full p-1 my-4\">\n            {/* VIEW CLAIM HEADER =============================== */}\n            <section className=\"flex items-center gap-2 py-2 border-b\">\n              <button\n                className={`ml-3 bg-gray-50 hover:bg-blue-100 rounded-full px-1 py-1 focus:outline-none ${\n                  loadingRequest ? \"cursor-not-allowed\" : \"cursor-pointer\"\n                } animate__animated animate__fadeIn`}\n                disabled={loadingRequest}\n                onClick={() => {\n                  setViewClaim(false);\n                  setViewImage(false);\n                  setLoadingRequest(false);\n                  setFormError(null);\n                  setReClaiming(false);\n                  setReClaimingMsg(\"\");\n                }}\n              >\n                <MdArrowBack className=\"w-7 h-7\" />\n              </button>\n              {isDeleteAllowed(\n                getClaimById(props.claiming.myClaims, claimId)!\n              ) && (\n                <button\n                  className={`bg-gray-50 hover:bg-blue-100 rounded-full px-1 py-1 focus:outline-none ${\n                    loadingRequest ? \"cursor-not-allowed\" : \"cursor-pointer\"\n                  } animate__animated animate__fadeIn`}\n                  disabled={loadingRequest}\n                  onClick={() => {\n                    handleDelete();\n                  }}\n                >\n                  <MdDelete className=\"w-7 h-7\" />\n                </button>\n              )}\n              {/* <div\n            className={`text-blue-600 font-extrabold ${\n              modalAction ? \"text-2xl\" : \"text-xl\"\n            } px-2`}\n          >\n            {modalAction === \"CREATE_POSITION\"\n              ? \"Creating new position\"\n              : modalAction === \"UPDATE_POSITION\"\n              ? \"Updating \" + positionTitle\n              : \"Positions\"}\n          </div> */}\n            </section>\n            {/* END VIEW CLAIM HEADER =============================== */}\n\n            <section className=\"my-2\">\n              {/* VIEWING CLAIM OF A DOCUMENT ===================== */}\n              {getClaimById(props.claiming.myClaims, claimId)!.type_key ===\n                PlansTypeKeys.DOCUMENT_VALIDATION &&\n              props.claiming.candidateDocuments &&\n              getDocumentById(\n                props.claiming.candidateDocuments,\n                getClaimById(props.claiming.myClaims, claimId)!.claiming_on_id\n              ) ? (\n                <ClaimDocView\n                  thisDoc={\n                    getDocumentById(\n                      props.claiming.candidateDocuments,\n                      getClaimById(props.claiming.myClaims, claimId)!\n                        .claiming_on_id\n                    )!\n                  }\n                  documentCategories={props.documentReducer}\n                  thisClaim={getClaimById(props.claiming.myClaims, claimId)!}\n                  viewImage={viewImage}\n                  setViewImage={setViewImage}\n                  loadingRequest={loadingRequest}\n                  setLoadingRequest={setLoadingRequest}\n                  reClaiming={reClaiming}\n                  setReClaiming={setReClaiming}\n                  reClaimingMsg={reClaimingMsg}\n                  setReClaimingMsg={setReClaimingMsg}\n                  formError={formError}\n                  setFormError={setFormError}\n                />\n              ) : (\n                getClaimById(props.claiming.myClaims, claimId)!.type_key ===\n                  PlansTypeKeys.DOCUMENT_VALIDATION && (\n                  <NoResult\n                    theme={NoResultThemes.Dark}\n                    value={\"Document not found\"}\n                  />\n                )\n              )}\n              {/* END VIEWING CLAIM OF A DOCUMENT ===================== */}\n\n              {/* ############################################################### */}\n\n              {/* VIEWING CLAIM OF AN APPLICATION ===================== */}\n              {getClaimById(props.claiming.myClaims, claimId)!.type_key ===\n                PlansTypeKeys.APPLICATION &&\n              props.claiming.candidateApplications &&\n              getApplicationById(\n                props.claiming.candidateApplications,\n                getClaimById(props.claiming.myClaims, claimId)!.claiming_on_id\n              ) ? (\n                <ClaimApplView\n                  thisApplication={\n                    getApplicationById(\n                      props.claiming.candidateApplications,\n                      getClaimById(props.claiming.myClaims, claimId)!\n                        .claiming_on_id\n                    )!\n                  }\n                  documentCategories={props.documentReducer}\n                  thisClaim={getClaimById(props.claiming.myClaims, claimId)!}\n                  viewPosition={viewImage}\n                  setViewPosition={setViewImage}\n                  loadingRequest={loadingRequest}\n                  setLoadingRequest={setLoadingRequest}\n                  reClaiming={reClaiming}\n                  setReClaiming={setReClaiming}\n                  reClaimingMsg={reClaimingMsg}\n                  setReClaimingMsg={setReClaimingMsg}\n                  formError={formError}\n                  setFormError={setFormError}\n                />\n              ) : (\n                getClaimById(props.claiming.myClaims, claimId)!.type_key ===\n                  PlansTypeKeys.APPLICATION && (\n                  <NoResult\n                    theme={NoResultThemes.Dark}\n                    value={\"Application not found\"}\n                  />\n                )\n              )}\n            </section>\n          </section>\n        )}\n      {/* end view claim */}\n\n      {/* CLAIM FORM  ################ */}\n      {claimForm && (\n        <ClaimForm formState={claimForm} setFormState={setClaimForm} />\n      )}\n    </Fragment>\n  );\n};\n\nconst mapStateToProps = ({\n  auth,\n  sessionPlan,\n  claiming,\n  document,\n}: StoreState): {\n  auth: Auth;\n  claiming: ClaimingReducerType;\n  application_sessions: SessionPlanInterface[] | null;\n  documentReducer: DocumentReducerInterface;\n} => {\n  return {\n    auth: auth,\n    claiming,\n    application_sessions: sessionPlan.allSessionPlans,\n    documentReducer: document,\n  };\n};\n\nexport const CandidateClaim = connect(mapStateToProps, {\n  getMyClaims,\n  GetAllSessionPlans,\n  getDocumentCategory,\n  getDocumentSubCategory,\n  getDocumentFields,\n  PushPopupAlert,\n})(Index);\n","import React, { useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Auth, PushPopupAlert } from \"../../../actions\";\nimport {\n  GetClaimingTypes,\n  getMyRejectedApplications,\n  getMyRejectedDocuments,\n  setSelectedClaimType,\n} from \"../../../actions/claiming\";\nimport { PopupAlertData } from \"../../../components/Alert/Popup\";\nimport { MainItem } from \"../../../components/Navigation/SideNavigation\";\nimport { ClaimStatus, PlansTypeKeys } from \"../../../interfaces\";\nimport { PopupAlertTheme } from \"../../../interfaces/popupAlert\";\nimport { StoreState } from \"../../../reducers\";\nimport { ClaimingReducerType } from \"../../../reducers/claiming\";\n\ntype FilterByTypeProps = {\n  // thisClaimType: ClaimTypesInterface | \"ALL\";\n  // setThisClaimType: React.Dispatch<\n  //   React.SetStateAction<ClaimTypesInterface | \"ALL\">\n  // >;\n  loadingClaims: boolean;\n  FC_CountByType?: Function;\n\n  // REDUX PROPS =======================================\n  auth: Auth;\n  claiming: ClaimingReducerType;\n  GetClaimingTypes: Function;\n  setSelectedClaimType: Function;\n  getMyRejectedApplications: Function;\n  getMyRejectedDocuments: Function;\n  PushPopupAlert: (alert: PopupAlertData) => void;\n};\n\nconst FilterByType: React.FC<FilterByTypeProps> = (props) => {\n  const [loading, setLoading] = useState<boolean>(true);\n  const [loadingRejectedApplications, setLoadingRejectedApplications] =\n    useState<boolean>(true);\n  const [loadingRejectedDocuments, setLoadingRejectedDocuments] =\n    useState<boolean>(true);\n  const [loadingClaimTypes, setLoadingClaimTypes] = useState<boolean>(true);\n\n  useEffect(() => {\n    if (props.claiming.candidateApplications === null) {\n      props.getMyRejectedApplications(\n        props.auth.user.user_id,\n        (status: boolean, msg: string) => {\n          if (status === false) {\n            if (msg.length > 0) {\n              props.PushPopupAlert({\n                title: msg,\n                theme: PopupAlertTheme.danger,\n              });\n            }\n            setLoadingRejectedApplications(false);\n          }\n        }\n      );\n    } else if (loadingRejectedApplications) {\n      setLoadingRejectedApplications(false);\n    }\n\n    if (props.claiming.candidateDocuments === null) {\n      console.log(\"filterrrrrrrrrrrrrrrrrrrr loadingRejectedDocuments\");\n      props.getMyRejectedDocuments((status: boolean, msg: string) => {\n        if (status === false) {\n          if (msg.length > 0) {\n            props.PushPopupAlert({\n              title: msg,\n              theme: PopupAlertTheme.danger,\n            });\n          }\n          setLoadingRejectedDocuments(false);\n        }\n      });\n    } else if (loadingRejectedDocuments) {\n      setLoadingRejectedDocuments(false);\n    }\n\n    if (props.claiming.claimTypes === null) {\n      props.GetClaimingTypes((status: boolean, msg: string) => {\n        if (status === false) {\n          if (msg.length > 0) {\n            props.PushPopupAlert({\n              title: msg,\n              theme: PopupAlertTheme.danger,\n            });\n          }\n          setLoadingClaimTypes(false);\n        }\n      });\n    } else if (loadingClaimTypes) {\n      setLoadingClaimTypes(false);\n    }\n\n    if (\n      !loadingRejectedApplications &&\n      !loadingRejectedDocuments &&\n      !loadingClaimTypes &&\n      loading\n    ) {\n      setLoading(false);\n    }\n  }, [\n    loading,\n    loadingClaimTypes,\n    loadingRejectedApplications,\n    loadingRejectedDocuments,\n    props,\n  ]);\n\n  const countClaims = (\n    claiming: ClaimingReducerType,\n    thisType: PlansTypeKeys | \"all\"\n  ): number => {\n    let result: number = 0;\n\n    if (claiming.myClaims && thisType === \"all\") {\n      result = claiming.myClaims.filter(\n        (item) =>\n          item.last_claim_status !== ClaimStatus.DELETED &&\n          item.last_claim_status !== ClaimStatus.COMPLETED\n      ).length;\n    }\n    if (claiming.myClaims && thisType !== \"all\") {\n      result = claiming.myClaims.filter(\n        (item) =>\n          item.type_key === thisType &&\n          item.last_claim_status !== ClaimStatus.DELETED &&\n          item.last_claim_status !== ClaimStatus.COMPLETED\n      ).length;\n    }\n\n    return result;\n  };\n\n  return (\n    <React.Fragment>\n      <span className=\"mt-2 text-sm\">Filter by claim type</span>\n      {/* WHILE LOADING DATA ================================== */}\n      {(loading || props.loadingClaims) && (\n        <section className=\"space-y-2\">\n          <div className=\"w-full h-7 rounded bg-gray-200 animate__animated animate__pulse animate__delay-5s animate__infinite\"></div>\n          <div className=\"w-full h-7 rounded bg-gray-200 animate__animated animate__pulse animate__delay-5s animate__infinite\"></div>\n          <div className=\"w-full h-7 rounded bg-gray-200 animate__animated animate__pulse animate__delay-5s animate__infinite\"></div>\n          <div className=\"w-full h-7 rounded bg-gray-200 animate__animated animate__pulse animate__delay-5s animate__infinite\"></div>\n        </section>\n      )}\n      {/* END WHILE LOADING DATA ================================== */}\n\n      {/* AFTER LOADING DATA ================================== */}\n      {!loading && !props.loadingClaims && (\n        <section>\n          {/* ALL ================================= */}\n          <div\n            className=\"mt-2\"\n            onClick={() => {\n              // props.setThisClaimType(\"ALL\");\n              props.setSelectedClaimType(\"all\");\n            }}\n          >\n            <MainItem\n              title=\"All\"\n              active={props.claiming.selectedClaimType === \"all\"}\n              count={countClaims(props.claiming, \"all\")}\n            />\n          </div>\n          {/* APPLICATION ================================= */}\n          <div\n            className=\"mt-2\"\n            onClick={() => {\n              // props.setThisClaimType(ClaimTypesInterface.DOCUMENT);\n              props.setSelectedClaimType(PlansTypeKeys.APPLICATION);\n            }}\n          >\n            <MainItem\n              title={\"Application\"}\n              active={\n                props.claiming.selectedClaimType !== \"all\" &&\n                props.claiming.selectedClaimType === PlansTypeKeys.APPLICATION\n              }\n              count={countClaims(props.claiming, PlansTypeKeys.APPLICATION)}\n            />\n          </div>\n          {/* DOCUMENT ================================= */}\n          <div\n            className=\"mt-2\"\n            onClick={() => {\n              props.setSelectedClaimType(PlansTypeKeys.DOCUMENT_VALIDATION);\n            }}\n          >\n            <MainItem\n              title={\"Document\"}\n              active={\n                props.claiming.selectedClaimType !== \"all\" &&\n                props.claiming.selectedClaimType ===\n                  PlansTypeKeys.DOCUMENT_VALIDATION\n              }\n              count={countClaims(\n                props.claiming,\n                PlansTypeKeys.DOCUMENT_VALIDATION\n              )}\n            />\n          </div>\n          {/* EXAMINATION ================================= */}\n          <div\n            className=\"mt-2\"\n            onClick={() => {\n              props.setSelectedClaimType(PlansTypeKeys.EXAMINATION);\n            }}\n          >\n            <MainItem\n              title={\"Exam\"}\n              active={\n                props.claiming.selectedClaimType !== \"all\" &&\n                props.claiming.selectedClaimType === PlansTypeKeys.EXAMINATION\n              }\n              count={countClaims(props.claiming, PlansTypeKeys.EXAMINATION)}\n            />\n          </div>\n          {/* MARKS PUBLICATION ================================= */}\n          <div\n            className=\"mt-2\"\n            onClick={() => {\n              props.setSelectedClaimType(PlansTypeKeys.MARKS_PUBLICATION);\n            }}\n          >\n            <MainItem\n              title={\"Marks publication\"}\n              active={\n                props.claiming.selectedClaimType !== \"all\" &&\n                props.claiming.selectedClaimType ===\n                  PlansTypeKeys.MARKS_PUBLICATION\n              }\n              count={countClaims(\n                props.claiming,\n                PlansTypeKeys.MARKS_PUBLICATION\n              )}\n            />\n          </div>\n          {/* PLACEMENT TRANSFER ================================= */}\n          <div\n            className=\"mt-2\"\n            onClick={() => {\n              props.setSelectedClaimType(PlansTypeKeys.PLACEMENT_TRANSFER);\n            }}\n          >\n            <MainItem\n              title={\"Placement\"}\n              active={\n                props.claiming.selectedClaimType !== \"all\" &&\n                props.claiming.selectedClaimType ===\n                  PlansTypeKeys.PLACEMENT_TRANSFER\n              }\n              count={countClaims(\n                props.claiming,\n                PlansTypeKeys.PLACEMENT_TRANSFER\n              )}\n            />\n          </div>\n          {/* <div\n            className=\"mt-2\"\n            onClick={() => {\n              props.setThisClaimType(ClaimTypesInterface.APPLICATION);\n            }}\n          >\n            <MainItem\n              title={capitalizeFirstLetter(ClaimTypesInterface.APPLICATION)}\n              active={props.thisClaimType === ClaimTypesInterface.APPLICATION}\n              count={countClaims(props.claiming).applications}\n            />\n          </div>\n          <div\n            className=\"mt-2\"\n            onClick={() => {\n              props.setThisClaimType(ClaimTypesInterface.PLACEMENT);\n            }}\n          >\n            <MainItem\n              title={capitalizeFirstLetter(ClaimTypesInterface.PLACEMENT)}\n              active={props.thisClaimType === ClaimTypesInterface.PLACEMENT}\n              count={countClaims(props.claiming).placement}\n            />\n          </div> */}\n        </section>\n      )}\n      {/* END AFTER LOADING DATA ================================== */}\n    </React.Fragment>\n  );\n};\n\nconst mapStateToProps = ({\n  auth,\n  claiming,\n}: StoreState): { auth: Auth; claiming: ClaimingReducerType } => {\n  return { auth, claiming };\n};\n\nexport default connect(mapStateToProps, {\n  GetClaimingTypes,\n  setSelectedClaimType,\n  getMyRejectedApplications,\n  getMyRejectedDocuments,\n  PushPopupAlert,\n})(FilterByType);\n","import axios from \"axios\";\nimport React, { useEffect, useState } from \"react\";\nimport { FaRegCheckCircle } from \"react-icons/fa\";\nimport { MdTurnedIn } from \"react-icons/md\";\nimport { RiArrowGoBackFill } from \"react-icons/ri\";\nimport { connect } from \"react-redux\";\nimport { PushPopupAlert } from \"../../actions\";\nimport { createReClaim } from \"../../actions/claiming\";\nimport { fetchUserAccess } from \"../../actions/users\";\nimport NoResult, { NoResultThemes } from \"../../components/NoResult/NoResult\";\nimport {\n  CandidateClaimInterface,\n  claimApplicationsInterface,\n  ClaimDecisionStatus,\n  ClaimStatus,\n} from \"../../interfaces\";\nimport { ApplicationStates } from \"../../interfaces/application\";\nimport { PopupAlertTheme } from \"../../interfaces/popupAlert\";\nimport { StoreState } from \"../../reducers\";\nimport { DocumentReducerInterface } from \"../../reducers/document\";\nimport { capitalizeFirstLetter, isEmptyOrSpaces } from \"../../shared/dataTest\";\nimport { UserInterface } from \"../../shared/interfaces\";\nimport { API } from \"../../utils/api\";\nimport { setAxiosToken } from \"../../utils/AxiosToken\";\nimport {\n  DATE,\n  errorToText,\n  showDate,\n  timestampToDate,\n} from \"../../utils/functions\";\nimport ViewRequirements from \"../Positions/ViewRequirements\";\nimport { getUserDocuments } from \"./Admin\";\nimport {\n  FC_ApplicationPositionDistinctCategory,\n  showEvaluator,\n} from \"./Candidate/ApplicationFormView\";\nimport { isClaimEvaluated } from \"./ClaimDocView\";\n\nconst isReclaimAllowed = (thisClaim: CandidateClaimInterface): boolean => {\n  if (thisClaim.claim_level === 1) {\n    const _thisClaim = thisClaim.claims.find((item) => item.level === 1);\n    if (_thisClaim) {\n      if (_thisClaim.decision_taken_status === ClaimDecisionStatus.REJECTED) {\n        return true;\n      }\n    }\n  }\n  return false;\n};\n\ntype ClaimDocViewProps = {\n  thisApplication: claimApplicationsInterface;\n  documentCategories: DocumentReducerInterface;\n  thisClaim: CandidateClaimInterface;\n  viewPosition: boolean;\n  setViewPosition: React.Dispatch<React.SetStateAction<boolean>>;\n  loadingRequest: boolean;\n  setLoadingRequest: React.Dispatch<React.SetStateAction<boolean>>;\n  reClaiming: boolean;\n  setReClaiming: React.Dispatch<React.SetStateAction<boolean>>;\n  reClaimingMsg: string;\n  setReClaimingMsg: React.Dispatch<React.SetStateAction<string>>;\n  formError: {\n    element: string;\n    msg: string;\n  } | null;\n  setFormError: React.Dispatch<\n    React.SetStateAction<{\n      element: string;\n      msg: string;\n    } | null>\n  >;\n\n  // REDUX DATA =====================\n  userList: UserInterface[];\n  fetchUserAccess: Function;\n  createReClaim: Function;\n  PushPopupAlert: Function;\n};\n\nconst ClaimDocView: React.FC<ClaimDocViewProps> = (props) => {\n  const [loadingUsers, setLoadingUsers] = useState(true);\n\n  useEffect(() => {\n    if (!props.userList.length && loadingUsers) {\n      setLoadingUsers(false);\n      props.fetchUserAccess();\n    } else if (loadingUsers) {\n      setLoadingUsers(false);\n    }\n  }, [loadingUsers, props]);\n\n  const handleSubmit = async () => {\n    if (isEmptyOrSpaces(props.reClaimingMsg)) {\n      return props.setFormError({\n        element: \"comment\",\n        msg: \"Claim comment is required!\",\n      });\n    }\n    if (!props.thisClaim) {\n      return props.PushPopupAlert({\n        title: \"Claim is required\",\n        theme: PopupAlertTheme.warning,\n      });\n    }\n\n    props.setLoadingRequest(true);\n    try {\n      setAxiosToken();\n      const res = await axios.put<CandidateClaimInterface>(\n        `${API.CLAIMING}/user/reclaim/${props.thisClaim.id}`,\n        {\n          reason: props.reClaimingMsg,\n        }\n      );\n      console.log({ res: res.data });\n      if (res.status === 201 || res.status === 200) {\n        props.createReClaim(res.data);\n        props.PushPopupAlert({\n          title: \"Claim sent successful\",\n          theme: PopupAlertTheme.success,\n        });\n        props.setReClaimingMsg(\"\");\n        props.setReClaiming(false);\n      }\n    } catch (error) {\n      console.error({ error });\n      props.PushPopupAlert({\n        title: errorToText(error),\n        theme: PopupAlertTheme.danger,\n      });\n    }\n    props.setLoadingRequest(false);\n  };\n\n  return (\n    <section className=\"\">\n      <div className=\"w-full bg-white px-4 py-1 divide-y-2 space-y-2\">\n        {/* DOCUMENT DETAILS ==================================================== */}\n        <section className=\"flex flex-col\">\n          <div className=\"flex items-center justify-between\">\n            <span className=\"text-blue-600 font-bold text-2xl\">\n              {props.thisApplication.position.position_title}\n            </span>\n            <button\n              type=\"button\"\n              className=\"bg-blue-200 hover:bg-blue-300 text-blue-700 group-hover:text-blue-800 py-1 px-2 mr-1 rounded text-sm\"\n              onClick={() => props.setViewPosition(!props.viewPosition)}\n            >\n              {props.viewPosition ? \"Hide\" : \"More\"}\n            </button>\n          </div>\n          <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n            <span className={`italic`}>Status:</span>\n            <span\n              className={`font-bold ${\n                props.thisClaim.previous\n                  ? props.thisClaim.previous.status ===\n                    ApplicationStates.Rejected\n                  : props.thisApplication.application_status ===\n                    ApplicationStates.Rejected\n                  ? \"text-yellow-900\"\n                  : \"text-blue-600\"\n              } rounded px-3 py-1`}\n            >\n              {props.thisClaim.previous\n                ? capitalizeFirstLetter(props.thisClaim.previous.status)\n                : capitalizeFirstLetter(\n                    props.thisApplication.application_status\n                  )}\n            </span>\n          </div>\n          <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n            <span className={`italic`}>Evaluated by:</span>\n            <span className=\"font-semibold\">\n              {loadingUsers ? (\n                <div className=\"w-24 h-3 rounded bg-gray-200 animate__animated animate__pulse animate__delay-5s animate__infinite\"></div>\n              ) : props.thisClaim.previous ? (\n                showEvaluator(\n                  props.userList,\n                  props.thisClaim.previous.evaluated_by\n                )\n              ) : (\n                showEvaluator(\n                  props.userList,\n                  props.thisApplication.override_by.user_id\n                )\n              )}\n            </span>\n          </div>\n          {false && (\n            <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n              <span className={`italic`}>Session:</span>\n              <span className=\"font-bold text-gray-900 py-1\">\n                {\n                  props.thisApplication.application_session\n                    .application_session_name\n                }\n              </span>\n            </div>\n          )}\n          <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n            <span className={`italic`}>Date:</span>\n            <span className=\"font-bold text-gray-900 py-1\">\n              {DATE(props.thisApplication.createdAt)}\n            </span>\n          </div>\n          <div className=\"flex items-start gap-2 text-sm text-gray-600\">\n            <span className={`italic`}>Reason:</span>\n            <span className=\"font-normal\">\n              {props.thisClaim.previous\n                ? props.thisClaim.previous.reason\n                : props.thisApplication.override_by.comment}\n            </span>\n          </div>\n\n          {/* DISPLAY POSITION ==================================================== */}\n          {props.viewPosition && (\n            <div className=\"w-full my-1 animate__animated animate__fadeIn rounded\">\n              <div className=\"bg-white w-full\">\n                <div className=\"text-gray-800 text-2xl font-bold my-2\">\n                  Position Details\n                </div>\n                <div className=\"flex items-center gap-2 text-base text-gray-600\">\n                  <span className={`italic`}>Desc:</span>\n                  <span className=\"font-semibold\">\n                    {props.thisApplication.position.description}\n                  </span>\n                </div>\n                <div className=\"flex items-center gap-2 text-base text-gray-600\">\n                  <span className={`italic`}>School level:</span>\n                  <span className=\"font-semibold\">\n                    {\n                      props.thisApplication.position.school_level_id\n                        .school_level_name\n                    }\n                  </span>\n                </div>\n                <div className=\"flex items-center gap-2 text-base text-gray-600\">\n                  <span className={`italic`}>Institute:</span>\n                  <span className=\"font-semibold\">\n                    {\n                      props.thisApplication.position.education_institute_id\n                        .education_category_title\n                    }\n                  </span>\n                </div>\n                <div className=\"flex items-center gap-2 text-base text-gray-600\">\n                  <span className={`italic`}>Courses:</span>\n                  <span className=\"flex items-center gap-2\">\n                    {props.thisApplication.position.courses.map(\n                      (item, index) => (\n                        <div\n                          key={index + item.course_id}\n                          className=\"flex items-center gap-1\"\n                        >\n                          <span className=\"font-semibold\">\n                            {item.course_name}\n                          </span>\n                          <span className=\"text-gray-600\">\n                            ({item.course_code})\n                          </span>\n                          {index !==\n                            props.thisApplication.position.courses.length - 1 &&\n                            \",\"}\n                        </div>\n                      )\n                    )}\n                  </span>\n                </div>\n\n                <div className=\"text-gray-800 text-2xl font-bold my-2\">\n                  Position Requirements\n                </div>\n                {props.thisApplication.position.requirements.length > 0 ? (\n                  FC_ApplicationPositionDistinctCategory(\n                    props.thisApplication.position,\n                    props.documentCategories\n                  ).DistinctCategoriesTemp.map((item, index) => (\n                    <div\n                      className=\"bg-gray-100props.thisApplication.position rounded p-2\"\n                      key={index + item.category_id}\n                    >\n                      <div className=\"flex items-center gap-2 text-2xl text-gray-500 font-bold\">\n                        <MdTurnedIn />\n                        <span>{item.category_title}</span>\n                      </div>\n                      <div className=\"border bg-white mt-1\">\n                        <ViewRequirements\n                          requirements={FC_ApplicationPositionDistinctCategory(\n                            props.thisApplication.position,\n                            props.documentCategories\n                          ).PositionsTemp.filter(\n                            (req) => req.category_id === item.category_id\n                          )}\n                        />\n                      </div>\n                    </div>\n                  ))\n                ) : (\n                  <NoResult\n                    theme={NoResultThemes.Dark}\n                    value={\"No requirements\"}\n                  ></NoResult>\n                )}\n              </div>\n            </div>\n          )}\n          {/* END DISPLAY POSITION ==================================================== */}\n        </section>\n        {/* END DOCUMENT DETAILS ==================================================== */}\n\n        {/* ################################################################################ */}\n\n        {/* CLAIM LEVELS DETAILS ==================================================== */}\n        {props.thisClaim.claims.length > 0 &&\n          props.thisClaim.claims.map((claim, index) => (\n            <section className=\"flex flex-col px-2 pt-3\" key={index + claim.id}>\n              {/* CLAIM COMMENT ==>> LEVEL 1 ==================================================== */}\n              <div className=\"flex flex-col items-start gap-2\">\n                <p>{claim.reason}</p>\n                <span className=\"text-gray-500 text-xs\">\n                  {showDate(claim.createdAt) +\n                    \" at \" +\n                    timestampToDate(claim.date_created).timeFR}\n                </span>\n              </div>\n\n              {/* RESPONSE OF LEVELS ======================================= */}\n              {isClaimEvaluated(props.thisClaim, claim.level) && (\n                <section className=\"mt-4\">\n                  <span className=\"text-gray-500 italic font-semibold\">\n                    Response (level {index + 1})\n                  </span>\n                  <div className=\"border-t-2\">\n                    <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n                      <span className={`italic`}>Status:</span>\n                      <span\n                        className={`font-bold ${\n                          claim.decision_taken_status ===\n                          ClaimDecisionStatus.REJECTED\n                            ? \"text-yellow-900\"\n                            : \"text-blue-600\"\n                        } rounded px-3 py-1`}\n                      >\n                        {capitalizeFirstLetter(\n                          claim.decision_taken_status.toLocaleLowerCase()\n                        )}\n                      </span>\n                    </div>\n                    <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n                      <span className={`italic`}>Evaluated by:</span>\n                      <span className=\"font-semibold\">\n                        {loadingUsers ? (\n                          <div className=\"w-24 h-3 rounded bg-gray-200 animate__animated animate__pulse animate__delay-5s animate__infinite\"></div>\n                        ) : getUserDocuments(\n                            props.userList,\n                            claim.evaluated_by\n                          ) ? (\n                          getUserDocuments(props.userList, claim.evaluated_by)!\n                            .user.user_info.fname +\n                          \" \" +\n                          getUserDocuments(props.userList, claim.evaluated_by)!\n                            .user.user_info.lname\n                        ) : (\n                          \"-\"\n                        )}\n                      </span>\n                    </div>\n                    <div className=\"flex items-start gap-2 text-sm text-gray-600\">\n                      <span className={`italic`}>Reason:</span>\n                      <span className=\"font-normal\">\n                        {claim.evaluation_comment}\n                      </span>\n                    </div>\n                  </div>\n                </section>\n              )}\n              {/* CLAIM COMMENT ==>> LEVELS ==================================================== */}\n            </section>\n          ))}\n        {/* END CLAIM LEVELS DETAILS ==================================================== */}\n      </div>\n      <section>\n        {!props.reClaiming && (\n          <div className=\"mx-4 mb-5 mt-3 flex items-center justify-between\">\n            <span\n              className={`${\n                props.thisClaim.last_claim_status === ClaimStatus.PENDING\n                  ? \"text-yellow-700\"\n                  : props.thisClaim.last_claim_status === ClaimStatus.DELETED\n                  ? \"text-red-700\"\n                  : \"text-green-700\"\n              } italic font-semibold`}\n            >\n              {capitalizeFirstLetter(\n                props.thisClaim.last_claim_status.toLocaleLowerCase()\n              )}\n            </span>\n\n            {isReclaimAllowed(props.thisClaim) && (\n              <button\n                className=\"btn btn-blue\"\n                onClick={() => props.setReClaiming(true)}\n                disabled={props.loadingRequest}\n              >\n                Reclaim\n              </button>\n            )}\n          </div>\n        )}\n        {/* right part */}\n        {props.reClaiming && (\n          <div className=\"flex flex-col md:flex-row items-end md:items-start gap-1 w-full\">\n            <div className=\"w-full px-2\">\n              <textarea\n                placeholder={`Reason of your reclaim...`}\n                cols={50}\n                rows={3}\n                className={`border border-${\n                  props.formError && props.formError.element === \"comment\"\n                    ? \"red\"\n                    : \"gray\"\n                }-400 rounded px-3 py-1 w-full focus:outline-none`}\n                style={{ resize: \"none\" }}\n                value={props.reClaimingMsg}\n                onChange={(e) => {\n                  props.setReClaimingMsg(e.target.value);\n                  props.setFormError(null);\n                }}\n                disabled={props.loadingRequest}\n              ></textarea>\n              {props.formError && props.formError.element === \"comment\" && (\n                <p className=\"text-red-800\">{props.formError.msg}</p>\n              )}\n            </div>\n            <div className=\"flex flex-row md:flex-col gap-1 max-w-full px-2\">\n              <button\n                className=\"bg-gray-700 hover:bg-gray-800 px-4 py-2 font-semibold rounded text-white inline-flex items-center space-x-2 focus:outline-none\"\n                onClick={() => {\n                  props.setReClaimingMsg(\"\");\n                  props.setReClaiming(false);\n                  props.setFormError(null);\n                }}\n                disabled={props.loadingRequest}\n              >\n                <RiArrowGoBackFill className=\"w-5 h-5\" />\n                <span>Back</span>\n              </button>\n              <button\n                className=\"bg-blue-700 hover:bg-blue-800 px-4 py-2 font-semibold rounded text-white inline-flex items-center space-x-2 focus:outline-none\"\n                disabled={props.loadingRequest}\n                onClick={() => handleSubmit()}\n              >\n                {props.loadingRequest ? (\n                  <div className=\"\">Loading...</div>\n                ) : (\n                  <div className=\"inline-flex items-center space-x-2 gap-1\">\n                    <FaRegCheckCircle className=\"w-5 h-5\" />\n                    <span>Confirm</span>\n                  </div>\n                )}\n              </button>\n            </div>\n          </div>\n        )}\n        {/* end right part */}\n      </section>\n    </section>\n  );\n};\n\nconst mapStateToProps = ({\n  users,\n}: StoreState): {\n  userList: UserInterface[];\n} => {\n  return { userList: users };\n};\n\nexport default connect(mapStateToProps, {\n  fetchUserAccess,\n  createReClaim,\n  PushPopupAlert,\n})(ClaimDocView);\n","import React from \"react\";\nimport Chart from \"react-apexcharts\";\n\ntype chartType = {\n  options: {\n    labels: string[];\n    legend?: ApexLegend;\n    plotOptions?: ApexPlotOptions;\n    colors?: any[];\n  };\n  series: number[];\n  width?: number;\n};\n\nconst PieChart: React.FC<chartType> = (props) => {\n  return (\n    <div className=\"donut\">\n      <Chart\n        options={props.options}\n        series={props.series}\n        type=\"donut\"\n        width={`${props.width ? props.width : \"380\"}`}\n      />\n    </div>\n  );\n};\n\nexport default PieChart;\n","import React, { FC } from \"react\";\nimport { IconType } from \"react-icons\";\nimport { FaUsers } from \"react-icons/fa\";\nimport { toAnyDigit } from \"../../shared/dataTest\";\n\nexport type DashboardLabelItemInterface = {\n  // TITLE: Application or Exam or Shortlisted ....\n  title: string;\n  // ICON: FaExpand ....\n  icon: IconType;\n  // ICON COLOR: blue, indigo, gray ....\n  iconColor: string;\n  // COUNT: 0,1,2,3,5,23,563 ....\n  count: number;\n  // COUNT: 0,1,2,3,5,23,563 ....\n  countOver?: number;\n};\n\nconst DashboardLabelItem: FC<DashboardLabelItemInterface> = (\n  props = {\n    title: \"\",\n    icon: FaUsers,\n    iconColor: \"indigo\",\n    count: 0,\n    countOver: undefined,\n  }\n) => {\n  const IconDefined = props.icon;\n  return (\n    <div className=\"flex items-center px-6 py-4 bg-white w-full rounded-md space-x-2 mb-2 lg:mb-0 shadow-md\">\n      <div\n        className={`p-3 rounded-full bg-${props.iconColor}-200 bg-opacity-75`}\n      >\n        <IconDefined className={`h-8 w-8 text-${props.iconColor}-600`} />\n      </div>\n      <div>\n        <h1 className=\"text-3xl font-semibold text-gray-700\">\n          {toAnyDigit(props.count)}{\" \"}\n          {props.countOver && \"/ \" + toAnyDigit(props.countOver)}\n        </h1>\n        <span className=\"text-gray-500 text-lg\">{props.title}</span>\n      </div>\n    </div>\n  );\n};\n\nexport default DashboardLabelItem;\n","import React from \"react\";\nimport DashboardLabelItem, {\n  DashboardLabelItemInterface,\n} from \"../DashboardLabelItem\";\n\ntype DashboardLabelProps = {\n  dataLabels: DashboardLabelItemInterface[];\n  labelsOnRow?: number;\n  childrenPosition?: \"START\" | \"END\";\n  children?: JSX.Element;\n};\n\nconst ExamDashboardLabels: React.FC<DashboardLabelProps> = (props) => {\n  const numCols: number = props.labelsOnRow\n    ? props.labelsOnRow > 4\n      ? props.labelsOnRow\n      : 4\n    : 4;\n  return (\n    <div\n      className={`grid 2xl:grid-cols-${numCols} xl:grid-cols-${\n        numCols - 1\n      } lg:grid-cols-${numCols - 2} md:grid-cols-${\n        numCols - 3\n      } sm:grid-cols-2 grid-cols-1 gap-4 items-center mx-auto`}\n    >\n      {props.children &&\n        ((props.childrenPosition && props.childrenPosition === \"START\") ||\n          !props.childrenPosition) &&\n        props.children}\n      {props.dataLabels.map((item, index) => (\n        <section key={index + item.title}>\n          <DashboardLabelItem\n            title={item.title}\n            icon={item.icon}\n            iconColor={item.iconColor}\n            count={item.count}\n          />\n        </section>\n      ))}\n      {props.children &&\n        props.childrenPosition &&\n        props.childrenPosition === \"END\" &&\n        props.children}\n    </div>\n  );\n};\n\nexport default ExamDashboardLabels;\n","import React from \"react\";\nimport VBarChart from \"../ChartComponents/VBarChart\";\n\ntype AllClaimChartProps = {\n  ClaimTypes: {\n    title: string;\n    count: {\n      all: number;\n      accepted: number;\n      rejected: number;\n      pending: number;\n    };\n    type: string | \"all\";\n  }[];\n};\n\nconst AllClaimChart: React.FC<AllClaimChartProps> = (props) => {\n  const FC_GetAllClaimChartData = (): {\n    accepted: number[];\n    rejected: number[];\n    active: number[];\n    labels: string[];\n  } => {\n    let acceptedArray: number[] = [],\n      rejectedArray: number[] = [],\n      activeArray: number[] = [],\n      labelArray: string[] = [];\n\n    for (const typeKey in props.ClaimTypes) {\n      if (props.ClaimTypes[typeKey].type !== \"all\") {\n        acceptedArray.push(props.ClaimTypes[typeKey].count.accepted);\n        rejectedArray.push(props.ClaimTypes[typeKey].count.rejected);\n        activeArray.push(props.ClaimTypes[typeKey].count.pending);\n        labelArray.push(props.ClaimTypes[typeKey].type);\n      }\n    }\n    return {\n      accepted: acceptedArray,\n      rejected: rejectedArray,\n      active: activeArray,\n      labels: labelArray,\n    };\n  };\n\n  return (\n    <section className=\"my-3 max-w-full bg-white\">\n      <div className=\"flex items-center justify-between px-3\">\n        <span className=\"text-gray-600 font-semibold text-xl py-4 px-0\">\n          Claim chart on country level\n        </span>\n      </div>\n      <div className=\"mb-4 pb-2 px-3\">\n        <VBarChart\n          labels={FC_GetAllClaimChartData().labels}\n          categoriesLabel={FC_GetAllClaimChartData().labels}\n          dataLabels={false}\n          yaxisText=\"(Applicants)\"\n          tooltipText=\"Claims\"\n          series={[\n            {\n              name: \"Pending Claim\",\n              data: FC_GetAllClaimChartData().active,\n            },\n            {\n              name: \"Accepted Claim\",\n              data: FC_GetAllClaimChartData().accepted,\n            },\n            {\n              name: \"Rejected Claim\",\n              data: FC_GetAllClaimChartData().rejected,\n            },\n          ]}\n          colors={[\"#4b5563\", \"#469769\", \"#d97724\"]}\n          defaultBar={{\n            borderRadius: 4,\n            horizontal: false,\n            columnWidth: \"95%\",\n            endingShape: \"rounded\",\n          }}\n          stacked={true}\n        />\n      </div>\n    </section>\n  );\n};\n\nexport default AllClaimChart;\n","import React from \"react\";\nimport { AiFillDashboard } from \"react-icons/ai\";\nimport { MdBrightness1 } from \"react-icons/md\";\nimport { SessionPlanInterface } from \"../../../interfaces\";\nimport { education_category } from \"../../../interfaces/education_category\";\n\ntype ClaimDashBoardTitleProps = {\n  reportTitle: string;\n  education_categories: education_category[] | null;\n  loading: boolean;\n  loadingApplications: boolean;\n  loadingEducation: boolean;\n  thisEducation: education_category | null;\n  allEducation: boolean;\n  periodChanged: boolean;\n  setThisEducation: React.Dispatch<\n    React.SetStateAction<education_category | null>\n  >;\n  thisPeriod: string;\n  setThisPeriod: React.Dispatch<React.SetStateAction<string>>;\n  application_sessions: SessionPlanInterface[];\n  onPeriodChange: (period_id: string) => void;\n};\n\nconst ClaimDashBoardTitle: React.FC<ClaimDashBoardTitleProps> = (props) => {\n  return (\n    <div className=\"mt-3 rounded flex flex-col md:flex-row md:justify-between items-start\">\n      <div className=\"flex flex-row items-center gap-3 mb-2\">\n        <AiFillDashboard className=\"text-6xl text-blue-600 hidden md:block\" />\n        <div className=\"flex flex-col\">\n          <span className=\"text-blue-600 text-3xl font-bold\">\n            {props.reportTitle}\n          </span>\n        </div>\n      </div>\n\n      {/* FILTER SECTION PERIOD && EDUCATION */}\n      <section className=\"w-full md:w-auto my-2 md:my-0\">\n        {/* EDUCATION CATEGORY sections */}\n        <section>\n          {props.education_categories && props.education_categories.length > 0 && (\n            <div className=\"flex items-start md:items-center justify-start md:justify-end gap-2\">\n              {props.allEducation && (\n                <div\n                  className={`w-auto ${\n                    props.loading ||\n                    props.loadingApplications ||\n                    props.loadingEducation ||\n                    props.periodChanged\n                      ? \"cursor-not-allowed\"\n                      : \"cursor-pointer\"\n                  } ${\n                    props.thisEducation === null\n                      ? \"bg-blue-500 text-white font-bold\"\n                      : \"bg-gray-100 text-blue-800\"\n                  } mb-1 hover:font-bold py-1 hover:bg-blue-400 hover:text-white --font-bold  px-2 rounded-md flex items-center animate__animated animate__zoomIn`}\n                  onClick={() =>\n                    !props.loading &&\n                    !props.loadingEducation &&\n                    props.setThisEducation(null)\n                  }\n                >\n                  <section className=\"flex-1\">\n                    <MdBrightness1 className=\"inline-block mr-1 text-xs\" />\n                    <span>All</span>\n                  </section>\n                </div>\n              )}\n              {props.education_categories.map((education, index) => (\n                <div\n                  key={education.education_institute_id + index}\n                  className={`w-auto ${\n                    props.loading ||\n                    props.loadingApplications ||\n                    props.loadingEducation\n                      ? \"cursor-not-allowed\"\n                      : \"cursor-pointer\"\n                  } ${\n                    props.thisEducation &&\n                    education.education_institute_id ===\n                      props.thisEducation.education_institute_id\n                      ? \"bg-blue-500 text-white font-bold\"\n                      : \"bg-gray-100 text-blue-800\"\n                  } mb-1 hover:font-bold py-1 hover:bg-blue-400 hover:text-white --font-bold  px-2 rounded-md flex items-center animate__animated animate__zoomIn`}\n                  onClick={() =>\n                    !props.loading &&\n                    !props.loadingApplications &&\n                    !props.loadingEducation &&\n                    props.setThisEducation(education)\n                  }\n                >\n                  <div className=\"flex-1\">\n                    <MdBrightness1 className=\"inline-block mr-1 text-xs\" />\n                    <span>{education.education_category_title}</span>\n                  </div>\n                </div>\n              ))}\n            </div>\n          )}\n        </section>\n        {/* end EDUCATION CATEGORY sections */}\n        <div>\n          <select\n            className={`bg-white text-gray-600 border border-gray-400 rounded p-2 focus:outline-none ${\n              props.loadingApplications && \"cursor-wait\"\n            }`}\n            value={props.thisPeriod}\n            disabled={\n              props.loading ||\n              props.loadingApplications ||\n              props.loadingEducation ||\n              props.periodChanged\n            }\n            onChange={(e) => {\n              props.setThisPeriod(e.target.value);\n              props.onPeriodChange(e.target.value);\n            }}\n          >\n            {props.application_sessions.map((session, item) => (\n              <option\n                key={session.session_plan_id + item}\n                value={session.session_plan_id}\n              >\n                {session.session_plan_name}\n              </option>\n            ))}\n          </select>\n        </div>\n      </section>\n      {/* END FILTER SECTION PERIOD && EDUCATION */}\n    </div>\n  );\n};\n\nexport default ClaimDashBoardTitle;\n","import React, { Fragment, useEffect, useState } from \"react\";\nimport { FaBookOpen } from \"react-icons/fa\";\nimport { connect } from \"react-redux\";\nimport {\n  Auth,\n  schoolLevelsStoreInterface,\n  loadEducationCategories,\n  PushPopupAlert,\n} from \"../../../actions\";\nimport {\n  getAllClaims,\n  GetClaimingTypes,\n  getAllApplications,\n  setSelectedClaimType,\n} from \"../../../actions/claiming\";\nimport {\n  getDocumentCategory,\n  getDocumentSubCategory,\n  getDocumentFields,\n} from \"../../../actions/document\";\nimport { GetAllSessionPlans } from \"../../../actions/session\";\nimport { getPositions } from \"../../../actions/settings\";\nimport { fetchUserAccess } from \"../../../actions/users\";\nimport { PopupAlertData } from \"../../../components/Alert/Popup\";\nimport NoResult, {\n  NoResultThemes,\n} from \"../../../components/NoResult/NoResult\";\nimport {\n  CandidateClaimInterface,\n  ClaimDecisionStatus,\n  ClaimToPrintInterface,\n  ClaimTypesInterfaceAPI,\n  education_category,\n  PlansTypeKeys,\n  PositionAPI,\n  SessionPlanInterface,\n} from \"../../../interfaces\";\nimport { PopupAlertTheme } from \"../../../interfaces/popupAlert\";\nimport { StoreState } from \"../../../reducers\";\nimport { ClaimingReducerType } from \"../../../reducers/claiming\";\nimport { DocumentReducerInterface } from \"../../../reducers/document\";\nimport {\n  capitalizeFirstLetter,\n  isEmptyOrSpaces,\n} from \"../../../shared/dataTest\";\nimport { UserInterface } from \"../../../shared/interfaces\";\nimport { DATE } from \"../../../utils/functions\";\nimport {\n  adminDisplayClaimTitle,\n  getUserDocuments,\n} from \"../../Claimings/Admin\";\nimport { whichClaimType } from \"../../Claimings/Candidate\";\nimport PieChart from \"../ChartComponents/PieChart\";\nimport ExamDashboardLabels from \"../ExamDashboard/ExamDashboardLabels\";\nimport AllClaimChart from \"./AllClaimChart\";\nimport ClaimDashBoardTitle from \"./ClaimDashBoardTitle\";\n\ninterface WaitingListDashboardProps {\n  auth: Auth;\n  application_sessions: SessionPlanInterface[] | null;\n  claiming: ClaimingReducerType;\n  documentReducer: DocumentReducerInterface;\n  userList: UserInterface[];\n  systemPositions: PositionAPI[] | null;\n  schoolLevels: schoolLevelsStoreInterface;\n  loadEducationCategories: (callback: (loading: boolean) => void) => void;\n  setSelectedClaimType: Function;\n  getPositions: Function;\n  getAllClaims: Function;\n  GetClaimingTypes: Function;\n  getAllApplications: Function;\n  GetAllSessionPlans: Function;\n  getDocumentCategory: Function;\n  getDocumentSubCategory: Function;\n  getDocumentFields: Function;\n  fetchUserAccess: Function;\n  PushPopupAlert: (alert: PopupAlertData) => void;\n}\n\nconst _ClaimDashboard: React.FC<WaitingListDashboardProps> = (props) => {\n  const [thisPeriod, setThisPeriod] = useState<string>(\"\");\n  const [loading, setLoading] = useState<boolean>(true);\n  const [loadingSession, setLoadingSession] = useState<boolean>(true);\n  const [periodChanged, setPeriodChanged] = useState<boolean>(false);\n  const [loadingPosition, setLoadingPosition] = useState<boolean>(true);\n  const [loadingApplications, setLoadingApplications] = useState<boolean>(true);\n  const [loadingClaims, setLoadingClaims] = useState<boolean>(true);\n  const [loadingDocuments, setLoadingDocuments] = useState<boolean>(true);\n  const [loadingInstitutes, setLoadingInstitutes] = useState<boolean>(true);\n  const [loadingClarifications, setLoadingClarifications] =\n    useState<boolean>(true);\n  const [loadingUsers, setLoadingUsers] = useState(true);\n  const [loadingFields, setLoadingFields] = useState<boolean>(true);\n  const [thisEducation, setThisEducation] = useState<education_category | null>(\n    null\n  );\n  const [thisLabel, setThisLabel] = useState<string>(\"All claim types status\");\n\n  useEffect(() => {\n    // LOADING EDUCATION CATEGORY =================================\n    if (\n      props.schoolLevels.education_categories === null ||\n      props.schoolLevels.education_categories.length === 0\n    ) {\n      props.loadEducationCategories(setLoadingInstitutes);\n    } else {\n      setLoadingInstitutes(false);\n    }\n    // END LOADING EDUCATION CATEGORY =================================\n    // LOADING CLAIM TYPES ========================================\n    if (props.claiming.claimTypes === null) {\n      props.GetClaimingTypes((status: boolean, msg: string) => {\n        if (status === false) {\n          if (msg.length > 0) {\n            props.PushPopupAlert({\n              title: msg,\n              theme: PopupAlertTheme.danger,\n            });\n          }\n        }\n      });\n    }\n    // END LOADING CLAIM TYPES ========================================\n    // LOADING APPLICATION SESSION ====================================\n    if (props.application_sessions === null) {\n      props.GetAllSessionPlans((status: boolean, msg: string) => {\n        if (!status) {\n          setLoadingSession(false);\n          setLoading(false);\n          if (msg.length) {\n            props.PushPopupAlert({\n              title: msg,\n              theme: PopupAlertTheme.danger,\n            });\n          }\n        }\n      });\n    } else if (loadingSession) {\n      setLoading(false);\n      setLoadingSession(false);\n    }\n\n    // SETTING ACTIVE SESSION ==========================\n    if (\n      isEmptyOrSpaces(thisPeriod) &&\n      !loadingSession &&\n      props.application_sessions\n    ) {\n      let thisSession = props.application_sessions.find(\n        (item) => item.is_active === true\n      );\n      setThisPeriod(\n        thisSession\n          ? thisSession.session_plan_id\n          : props.application_sessions[props.application_sessions.length - 1]\n              .session_plan_id\n      );\n    }\n\n    // LOADING DOCUMENT CATEGORIES ==========================\n    if (!props.documentReducer.documentCategory && loadingDocuments) {\n      props.getDocumentCategory();\n      setLoadingDocuments(false);\n    } else if (loadingDocuments) {\n      setLoadingDocuments(false);\n    }\n    // LOADING DOCUMENT CLARIFICATIONS ==========================\n    if (!props.documentReducer.documentSubCategory && loadingClarifications) {\n      props.getDocumentSubCategory();\n      setLoadingClarifications(false);\n    } else if (loadingClarifications) {\n      setLoadingClarifications(false);\n    }\n    // LOADING DOCUMENT FIELDS ==========================\n    if (!props.documentReducer.documentFields && loadingFields) {\n      props.getDocumentFields();\n      setLoadingFields(false);\n    } else if (loadingFields) {\n      setLoadingFields(false);\n    }\n\n    // LOADING CLAIMING OF CURRENT CANDIDATES ================================\n    if (props.claiming.allClaims === null && !isEmptyOrSpaces(thisPeriod)) {\n      props.getAllClaims(2, thisPeriod, (status: boolean, msg: string) => {\n        !status && setLoadingClaims(status);\n        if (status === false && msg.length) {\n          props.PushPopupAlert({\n            title: msg,\n            theme: PopupAlertTheme.danger,\n          });\n        }\n      });\n    } else if (!isEmptyOrSpaces(thisPeriod) && loadingClaims) {\n      setLoadingClaims(false);\n    }\n\n    // LOADING CLAIMING OF CURRENT CANDIDATES ================================\n    if (\n      props.claiming.allApplications === null &&\n      !isEmptyOrSpaces(thisPeriod)\n    ) {\n      props.getAllApplications(thisPeriod, (status: boolean, msg: string) => {\n        !status && setLoadingApplications(status);\n        if (status === false && msg.length) {\n          props.PushPopupAlert({\n            title: msg,\n            theme: PopupAlertTheme.danger,\n          });\n        }\n      });\n    } else if (!isEmptyOrSpaces(thisPeriod) && loadingApplications) {\n      // alert(\"apps\");\n      setLoadingApplications(false);\n    }\n\n    if (!props.userList.length && loadingUsers) {\n      setLoadingUsers(false);\n      props.fetchUserAccess();\n    } else if (loadingUsers) {\n      setLoadingUsers(false);\n    }\n\n    if (props.systemPositions === null) {\n      props.getPositions((status: boolean, msg: string) => {\n        setLoadingPosition(status);\n        console.log({ status: status, msg: msg });\n        if (msg.length) {\n          props.PushPopupAlert({\n            title: msg,\n            theme: PopupAlertTheme.danger,\n          });\n        }\n      });\n    } else if (loadingPosition) {\n      setLoadingPosition(false);\n    }\n  }, [\n    loadingApplications,\n    loadingClaims,\n    loadingClarifications,\n    loadingDocuments,\n    loadingFields,\n    loadingPosition,\n    loadingSession,\n    loadingUsers,\n    props,\n    thisPeriod,\n  ]);\n\n  const onPeriodChange = (period_id: string) => {\n    setPeriodChanged(true);\n    props.getAllClaims(2, period_id, (status: boolean, msg: string) => {\n      !status && setPeriodChanged(false);\n      if (status === false && msg.length) {\n        props.PushPopupAlert({\n          title: msg,\n          theme: PopupAlertTheme.danger,\n        });\n      }\n    });\n  };\n\n  const getClaimInstitute = (\n    thisClaim: CandidateClaimInterface\n  ): string | null => {\n    if (thisClaim.type_key === PlansTypeKeys.DOCUMENT_VALIDATION) {\n      return null;\n    }\n    if (thisClaim.type_key === PlansTypeKeys.APPLICATION) {\n      if (props.claiming.allApplications) {\n        let thisApplication = props.claiming.allApplications.find(\n          (item) => item._id === thisClaim.claiming_on_id\n        );\n        if (\n          thisApplication &&\n          props.claiming.allApplications &&\n          props.systemPositions\n        ) {\n          // return thisApplication.\n          let thisPosition = props.systemPositions.find(\n            (item) => item.position_id === thisApplication!.position\n          );\n          if (thisPosition) {\n            return thisPosition.education_institute_id.education_institute_id;\n          }\n        }\n      }\n    }\n\n    return null;\n  };\n\n  const displayClaimName = (\n    thisClaim: CandidateClaimInterface\n  ): UserInterface | null => {\n    let result: UserInterface | null = null;\n    if (thisClaim.type_key === PlansTypeKeys.DOCUMENT_VALIDATION) {\n      result = getUserDocuments(props.userList, thisClaim.user)\n        ? getUserDocuments(props.userList, thisClaim.user)!.user\n        : null;\n    }\n    if (thisClaim.type_key === PlansTypeKeys.APPLICATION) {\n      if (props.claiming.allApplications) {\n        result = getUserDocuments(props.userList, thisClaim.user)\n          ? getUserDocuments(props.userList, thisClaim.user)!.user\n          : null;\n      }\n    }\n\n    return result;\n  };\n\n  const displayClaimTitle = (thisClaim: CandidateClaimInterface): string => {\n    let result: string = thisClaim.claiming_on_id;\n    if (thisClaim.type_key === PlansTypeKeys.DOCUMENT_VALIDATION) {\n      result = getUserDocuments(props.userList, thisClaim.user)\n        ? adminDisplayClaimTitle(\n            props.documentReducer,\n            getUserDocuments(props.userList, thisClaim.user)!.document,\n            thisClaim\n          )\n        : \"Document not found\";\n    }\n    if (thisClaim.type_key === PlansTypeKeys.APPLICATION) {\n      if (props.claiming.allApplications) {\n        let thisApplication = props.claiming.allApplications.find(\n          (item) => item._id === thisClaim.claiming_on_id\n        );\n        if (\n          thisApplication &&\n          props.claiming.allApplications &&\n          props.systemPositions\n        ) {\n          let thisPosition = props.systemPositions.find(\n            (item) => item.position_id === thisApplication!.position\n          );\n          if (thisPosition) {\n            result = thisPosition.position_title;\n          } else {\n            result = \"Application not found\";\n          }\n        }\n      }\n    }\n\n    return result;\n  };\n\n  const ClaimTypes = (\n    claims: ClaimToPrintInterface[],\n    claimsTypes: ClaimTypesInterfaceAPI[]\n  ): {\n    title: string;\n    count: {\n      all: number;\n      accepted: number;\n      rejected: number;\n      pending: number;\n    };\n    type: string | \"all\";\n  }[] => {\n    let output: {\n      title: string;\n      count: {\n        all: number;\n        accepted: number;\n        rejected: number;\n        pending: number;\n      };\n      type: string | \"all\";\n    }[] = [\n      {\n        title: \"All claim types status\",\n        count: {\n          all: claims.length,\n          accepted: claims.filter(\n            (item) => item.decision === ClaimDecisionStatus.ACCEPTED\n          ).length,\n          rejected: claims.filter(\n            (item) => item.decision === ClaimDecisionStatus.REJECTED\n          ).length,\n          pending: claims.filter((item) => item.decision === \"PENDING\").length,\n        },\n        type: \"all\",\n      },\n    ];\n    for (let i in claimsTypes) {\n      output.push({\n        title: claimsTypes[i].title + \" claim status\",\n        count: {\n          all: claims.filter((itm) => itm.claim_type === claimsTypes[i].title)\n            .length,\n          accepted: claims.filter(\n            (itm) =>\n              itm.claim_type === claimsTypes[i].title &&\n              itm.decision === ClaimDecisionStatus.ACCEPTED\n          ).length,\n          rejected: claims.filter(\n            (itm) =>\n              itm.claim_type === claimsTypes[i].title &&\n              itm.decision === ClaimDecisionStatus.REJECTED\n          ).length,\n          pending: claims.filter(\n            (itm) =>\n              itm.claim_type === claimsTypes[i].title &&\n              itm.decision === \"PENDING\"\n          ).length,\n        },\n        type: claimsTypes[i].title,\n      });\n    }\n    return output;\n  };\n\n  const FC_ClaimData = (\n    allClaims: CandidateClaimInterface[] | null,\n    claimTypes: ClaimTypesInterfaceAPI[] | null\n  ): ClaimToPrintInterface[] | null => {\n    if (allClaims === null || claimTypes === null || allClaims.length <= 0)\n      return null;\n    let arrayNew: ClaimToPrintInterface[] = [];\n    let n: number = 1;\n    // LOOP IN ALL CLAIM ONE BY ONE ###########################\n    for (const key in allClaims) {\n      if (Object.prototype.hasOwnProperty.call(allClaims, key)) {\n        // LOOP IN ALL CLAIM OF ONE FILE ONE BY ONE ===========================\n        for (const keyClaim in allClaims[key].claims) {\n          if (\n            Object.prototype.hasOwnProperty.call(\n              allClaims[key].claims,\n              keyClaim\n            )\n          ) {\n            const element = allClaims[key].claims[keyClaim];\n            const thisUser = displayClaimName(allClaims[key]);\n            const thisType = whichClaimType(allClaims[key]);\n            let dataArray: ClaimToPrintInterface = {\n              claim_id: n,\n              names: thisUser\n                ? thisUser.user_info.fname + \" \" + thisUser.user_info.lname\n                : \"\",\n              gender: thisUser\n                ? thisUser!.user_info.sex\n                  ? \"Male\"\n                  : \"Female\"\n                : \"\",\n              national_id: thisUser ? thisUser!.n_id! : \"\",\n              phone: thisUser ? thisUser!.phone_number : \"\",\n              email: thisUser ? thisUser!.email : \"\",\n              claim_type: thisType ? thisType : \"\",\n              claim_level: element.level,\n              education_category: getClaimInstitute(allClaims[key]),\n              claim_session: thisPeriod,\n              date: DATE(element.createdAt),\n              decision: element.decision_taken_status\n                ? element.decision_taken_status\n                : \"PENDING\",\n              claim_title: displayClaimTitle(allClaims[key]),\n            };\n            arrayNew.push(dataArray);\n            n++;\n          }\n        }\n      }\n    }\n    return arrayNew;\n  };\n\n  const getClaimDataByTitle = (\n    allData: {\n      title: string;\n      count: {\n        all: number;\n        accepted: number;\n        rejected: number;\n        pending: number;\n      };\n      type: string | \"all\";\n    }[]\n  ):\n    | {\n        title: string;\n        count: {\n          all: number;\n          accepted: number;\n          rejected: number;\n          pending: number;\n        };\n        type: string | \"all\";\n      }\n    | undefined => {\n    return allData.find((item) => item.title === thisLabel);\n  };\n\n  if (loading || props.application_sessions === null) {\n    return (\n      <div className=\"text-center mt-7 font-bold text-4xl text-gray-400 animate-pulse\">\n        Loading Data...\n      </div>\n    );\n  }\n  return (\n    <Fragment>\n      {/* HEADER TITLE */}\n      <ClaimDashBoardTitle\n        education_categories={props.schoolLevels.education_categories}\n        loading={loading}\n        loadingApplications={loadingApplications}\n        loadingEducation={loadingInstitutes}\n        thisEducation={thisEducation}\n        setThisEducation={setThisEducation}\n        thisPeriod={thisPeriod}\n        setThisPeriod={setThisPeriod}\n        application_sessions={props.application_sessions}\n        reportTitle={\"Claim Dashboard\"}\n        allEducation={true}\n        periodChanged={periodChanged}\n        onPeriodChange={onPeriodChange}\n      />\n      {/* END HEADER TITLE */}\n\n      {/* CLAIM ALL STATUS LABELS ======================================= */}\n      {props.claiming.claimTypes &&\n        props.claiming.allClaims &&\n        FC_ClaimData(props.claiming.allClaims, props.claiming.claimTypes) && (\n          <section className=\"my-2\">\n            <div className=\"text-2xl font-semibold text-gray-600\">\n              {thisLabel}{\" \"}\n              <select\n                className={`bg-white text-gray-600 border-2 border-blue-600 rounded-lg px-2 py-1 focus:outline-none`}\n                value={thisLabel}\n                onChange={(e) => setThisLabel(e.target.value)}\n              >\n                {ClaimTypes(\n                  FC_ClaimData(\n                    props.claiming.allClaims,\n                    props.claiming.claimTypes\n                  )!,\n                  props.claiming.claimTypes!\n                ).map((item, index: number) => (\n                  <option key={item.type + index} value={item.title}>\n                    {capitalizeFirstLetter(item.type.toLocaleLowerCase())}\n                  </option>\n                ))}\n              </select>\n            </div>\n            {getClaimDataByTitle(\n              ClaimTypes(\n                FC_ClaimData(\n                  props.claiming.allClaims,\n                  props.claiming.claimTypes\n                )!,\n                props.claiming.claimTypes!\n              )\n            ) && (\n              <ExamDashboardLabels\n                dataLabels={[\n                  {\n                    title: \"Total claim\",\n                    icon: FaBookOpen,\n                    iconColor: \"blue\",\n                    count: getClaimDataByTitle(\n                      ClaimTypes(\n                        FC_ClaimData(\n                          props.claiming.allClaims,\n                          props.claiming.claimTypes\n                        )!,\n                        props.claiming.claimTypes!\n                      )\n                    )!.count.all,\n                  },\n                  {\n                    title: \"Accepted Claim\",\n                    icon: FaBookOpen,\n                    iconColor: \"green\",\n                    count: getClaimDataByTitle(\n                      ClaimTypes(\n                        FC_ClaimData(\n                          props.claiming.allClaims,\n                          props.claiming.claimTypes\n                        )!,\n                        props.claiming.claimTypes!\n                      )\n                    )!.count.accepted,\n                  },\n                  {\n                    title: \"Rejected Claim\",\n                    icon: FaBookOpen,\n                    iconColor: \"yellow\",\n                    count: getClaimDataByTitle(\n                      ClaimTypes(\n                        FC_ClaimData(\n                          props.claiming.allClaims,\n                          props.claiming.claimTypes\n                        )!,\n                        props.claiming.claimTypes!\n                      )\n                    )!.count.rejected,\n                  },\n                  {\n                    title: \"Pending Claim\",\n                    icon: FaBookOpen,\n                    iconColor: \"gray\",\n                    count: getClaimDataByTitle(\n                      ClaimTypes(\n                        FC_ClaimData(\n                          props.claiming.allClaims,\n                          props.claiming.claimTypes\n                        )!,\n                        props.claiming.claimTypes!\n                      )\n                    )!.count.pending,\n                  },\n                ]}\n                labelsOnRow={5}\n              >\n                <div className=\"flex justify-center\">\n                  <PieChart\n                    options={{\n                      labels: [\"Accepted\", \"Rejected\", \"Pending\"],\n                      legend: {\n                        show: false,\n                        position: \"bottom\",\n                        horizontalAlign: \"center\",\n                        fontSize: \"16px\",\n                        itemMargin: {\n                          horizontal: 3,\n                          vertical: 0,\n                        },\n                      },\n                      plotOptions: {\n                        pie: {\n                          donut: {\n                            labels: {\n                              show: true,\n                              name: {\n                                show: true,\n                                fontSize: \"16px\",\n                                //   fontFamily: \"Rubik\",\n                                color: \"#2564eb\",\n                                offsetY: -10,\n                              },\n                              value: {\n                                show: true,\n                                fontSize: \"20px\",\n                                fontFamily: \"Helvetica, Arial, sans-serif\",\n                                color: \"#2564eb\",\n                                offsetY: 10,\n                                formatter: function (val) {\n                                  return val;\n                                },\n                              },\n                              total: {\n                                show: true,\n                                label: \"Total\",\n                                color: \"#2564eb\",\n                                formatter: function (w) {\n                                  return w.globals.seriesTotals.reduce(\n                                    (a: number, b: number) => {\n                                      return a + b;\n                                    },\n                                    0\n                                  );\n                                },\n                              },\n                            },\n                          },\n                        },\n                      },\n                      colors: [\"#469769\", \"#d97724\", \"#4b5563\"],\n                    }}\n                    series={[\n                      getClaimDataByTitle(\n                        ClaimTypes(\n                          FC_ClaimData(\n                            props.claiming.allClaims,\n                            props.claiming.claimTypes\n                          )!,\n                          props.claiming.claimTypes!\n                        )\n                      )!.count.accepted,\n                      getClaimDataByTitle(\n                        ClaimTypes(\n                          FC_ClaimData(\n                            props.claiming.allClaims,\n                            props.claiming.claimTypes\n                          )!,\n                          props.claiming.claimTypes!\n                        )\n                      )!.count.rejected,\n                      getClaimDataByTitle(\n                        ClaimTypes(\n                          FC_ClaimData(\n                            props.claiming.allClaims,\n                            props.claiming.claimTypes\n                          )!,\n                          props.claiming.claimTypes!\n                        )\n                      )!.count.pending,\n                    ]}\n                    width={210}\n                  />\n                </div>\n              </ExamDashboardLabels>\n            )}\n          </section>\n        )}\n      {props.claiming.claimTypes &&\n        props.claiming.allClaims &&\n        !FC_ClaimData(props.claiming.allClaims, props.claiming.claimTypes) &&\n        props.claiming.allClaims &&\n        props.claiming.allClaims.length <= 0 && (\n          <div className=\"my-4\">\n            <NoResult\n              theme={NoResultThemes.Dark}\n              value={\"No claims data found!\"}\n            />\n          </div>\n        )}\n      {/* CLAIM STATUS ON COUNTRY LEVEL LABELS ======================================= */}\n\n      {/* ===================================================================================== */}\n\n      {/* EXAM PERFORMANCE ON COUNTRY CHART ======================================= */}\n      {props.claiming.claimTypes &&\n        FC_ClaimData(props.claiming.allClaims, props.claiming.claimTypes) && (\n          <AllClaimChart\n            ClaimTypes={ClaimTypes(\n              FC_ClaimData(\n                props.claiming.allClaims,\n                props.claiming.claimTypes\n              )!,\n              props.claiming.claimTypes\n            )}\n          />\n        )}\n      {/* END EXAM PERFORMANCE ON COUNTRY CHART ======================================= */}\n    </Fragment>\n  );\n};\n\nconst mapStateToProps = ({\n  auth,\n  system_settings,\n  sessionPlan,\n  claiming,\n  document,\n  users,\n  schoolLevels,\n}: StoreState): {\n  auth: Auth;\n  application_sessions: SessionPlanInterface[] | null;\n  systemPositions: PositionAPI[] | null;\n  claiming: ClaimingReducerType;\n  documentReducer: DocumentReducerInterface;\n  userList: UserInterface[];\n  schoolLevels: schoolLevelsStoreInterface;\n} => {\n  return {\n    auth: auth,\n    application_sessions: sessionPlan.allSessionPlans,\n    systemPositions: system_settings.systemPositions,\n    claiming,\n    documentReducer: document,\n    userList: users,\n    schoolLevels,\n  };\n};\n\nexport const ClaimDashboard = connect(mapStateToProps, {\n  getAllClaims,\n  GetClaimingTypes,\n  getAllApplications,\n  GetAllSessionPlans,\n  loadEducationCategories,\n  getDocumentCategory,\n  getDocumentSubCategory,\n  getDocumentFields,\n  setSelectedClaimType,\n  fetchUserAccess,\n  getPositions,\n  PushPopupAlert,\n})(_ClaimDashboard);\n"],"sourceRoot":""}
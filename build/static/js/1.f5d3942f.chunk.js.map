{"version":3,"sources":["components/NoResult/NoResult.tsx","components/ApplicationPeriods/ApplicationPeriods.tsx","containers/Application/ApplicationSteps/ApplicationSteps.tsx","utils/question_bank.ts","containers/ApplicationsDashboard/ApplicationHistory/ApplicationHistory.tsx","containers/ApplicationsDashboard/ExamDetails/ExamDetails.tsx","containers/ApplicationsDashboard/Exams.tsx","containers/ApplicationsDashboard/ApplicationsDashboard.tsx"],"names":["NoResultThemes","NoResult","props","className","theme","Dark","value","undefined","component","ApplicationPeriods","type","placeholder","applicationPeriods","map","item","i","onClick","setSelectedPeriod","showPeriodFilter","is_active","application_session_name","DATE","application_start_date","application_end_date","ApplicationStepsTypes","getQuestionType","question_types","type_id","check","find","itm","id","check_type","questionTypeElements","key","element","findTotalMarks","courses","results","sum","course","test","course_id","user_total_marks","toFixed","CheckIfExamDone","res","ApplicationHistory","applicationHistory","length","date","comment","ApplicationStatesDescription","application_status","caption","ExamDetails","setLoading","status","setState","loading","componentDidMount","locationsData","Locations_list","loadAllLocationsData","loadApplicationPeriods","state","this","candidateExam","selected_exam_id","to","examDetails","locationDetails","Loading","LoadingType","dark","setSelectedCandidateExam","exam_date","start_time","duration","discription","dangerouslySetInnerHTML","__html","termes","center_id","province_name","district_name","center_name","room_number","proctoring_type","Component","_PostExams","renderExam","user_id","exam","examStatus","Editing","loadExam","redirect","closeModal","centersModal","setMaxExamModal","updateLocationFunction","exams","selected_application","updateLocation","setLoadingExams","loadingExams","setLoadingExamsDone","loadingExamsDone","numberOfIncomplete","count","filter","findLocation","course_name","course_code","location","exam_id","findExam","courseId","user_exams_temp","current_temp","testDone","user_exams_done","exam_status","UserExamStatus","findCourse","selectedExams","x","appointmentDetailsModal","pendingCourses","selectedPosition","InitializationFn","periods","selected_period","loadExamsDone","application_session_id","auth","user","InitializeExamDetails","room_id","position_id","loadCourses","doExam","exam_answers","displayResults","changeLocation","selectedCourse","selectedLocation","applicationHistoryState","period","setSelectedLocationData","ChooseExamCenter","positionCourses","addLocation","Done","parseInt","selectedApplicationDetails","ApplicationStates","Rejected","deleteApplication","changeLocationError","Alert","title","description","AlertInterface","danger","setSelectedCourse","positions","selected_position","setSelectedPosition","PostExams","connect","prepareExam","loadExamsList","_ApplicationsDashboard","filteredApplications","applications","Status","searchPeriod","appl","application_session","closeApplicationDetails","displayDetailsModal","setDisplayDetailsModal","applicationStatuses","application","output","push","maxExamModal","LoadApplications","a","loadingErr","number_of_incomplete","axios","get","API","APPLICATION","console","log","data","position","application_id","incrementIncomplete","errorToText","applicationError","post","noRoomsApplication","PushPopupAlert","PopupAlertTheme","success","response","errors","field","newArr","removeLocation","message","changeLoadingState","window","confirm","delete","warning","setShowFilterStatus","loadAllPositions","apply","currentStep","Step3","initiateApplication","Step1","doTestStatus","applicationDetails","selectedApplicationStatus","FC_Access","UserAccessList","MY_APPLICATION","view","position_title","Exams","application_history","SideNavigation","positions_list","active","LoadingV2","Initiated","Shortlisted","createdAt","Modal","backDrop","Themes","default","close","backDropClose","widthSizeClass","ModalSize","extraLarge","displayClose","padding","body","ApplicationsDashboard","system"],"mappings":"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","file":"static/js/1.f5d3942f.chunk.js","sourcesContent":["import React from 'react'\nimport { RiSearchLine } from 'react-icons/ri'\n\nexport enum NoResultThemes {\n  Dark = \"Dark\",\n  Light = \"Light\",\n}\n\ninterface NoResultProps {\n  theme: NoResultThemes;\n  value: string;\n  component?: any;\n}\n\nconst NoResult = (props: NoResultProps) => {\n  return (\n    <div className={`flex flex-col py-4 justify-center items-center text-gray-500 border-2 border-white ${props.theme === NoResultThemes.Dark ? \"bg-gray-100\" : \"bg-white\"} rounded`}>\n      <RiSearchLine className=\"text-6xl text-gray-500 animate__animated animate__shakeX\" />\n      <span className=\"text-xl mb-3\">{props.value}</span>\n      {props.component !== undefined &&\n      props.component}\n    </div>\n  )\n}\n\nexport default NoResult\n","import React from 'react'\nimport { FaBusinessTime } from 'react-icons/fa';\nimport { ApplicationPeriodGet } from '../../interfaces/application';\nimport { DATE } from '../../utils/functions';\nimport Loading from '../Loading/Loading';\n\ninterface ApplicationPeriodsProps {\n  applicationPeriods: ApplicationPeriodGet[] | null;\n  setSelectedPeriod: (period: ApplicationPeriodGet) => void;\n  showPeriodFilter: (status: boolean) => void;\n}\n\nconst ApplicationPeriods = (props: ApplicationPeriodsProps) => {\n  return (\n    <div className=\"-mt-4\">\n      <input type=\"text\" className=\"input-white border -mt-2 mb-3\" placeholder=\"Search by year, name\" />\n      {props.applicationPeriods === null ? <Loading /> : props.applicationPeriods.map((item, i) => (\n        <div onClick={() => {props.setSelectedPeriod(item); props.showPeriodFilter(false)}} key={i + 1} \n          className={`flex flex-col md:flex-row items-start md:items-center md:justify-between rounded border ${item.is_active === true ? \"bg-blue-50 border-blue-100\" : \"bg-gray-50 border-gray-100 \"} hover:bg-blue-100 hover:border-blue-500 px-2 py-2 cursor-pointer mb-2`}>\n          <div className=\"flex flex-row items-center gap-3\">\n            <FaBusinessTime className={`${item.is_active === true ? \"text-blue-600\" : \"text-gray-500\"} text-4xl`} />\n            <div className=\"flex flex-col\">\n              <div className={`${item.is_active === true ? \"text-blue-600\" : \"text-gray-600\"} font-bold`}>{item.application_session_name}</div>\n              <div className=\"text-sm text-gray-500\"><span>Status: </span><span className={`${item.is_active === true ? \"text-blue-600\" : \"text-gray-600\"}`}>{item.is_active === true ? \"Active\" : \"Expired\"}</span></div>\n            </div>\n          </div>\n          <div className=\"flex flex-col items-start md:items-end md:justify-end\">\n            <div className=\"text-xs md:text-sm text-right text-gray-500\"><span>Start: </span><span className={`${item.is_active === true ? \"text-blue-600\" : \"text-gray-600\"} text-right font-bold`}>{DATE(item.application_start_date, \"DD/MM/YYYY\")}</span></div>\n            <div className=\"text-xs md:text-sm text-right text-gray-500\"><span>End: </span><span className={`${item.is_active === true ? \"text-blue-600\" : \"text-gray-600\"} text-right font-bold`}>{DATE(item.application_end_date, \"DD/MM/YYYY\")}</span></div>\n          </div>\n        </div>\n      ))}\n    </div>\n  )\n}\n\nexport default ApplicationPeriods\n","import React from 'react'\nimport ApplicationStepItem, { ApplicationStepInterface } from './ApplicationStepItem'\n\nexport enum ApplicationStepsTypes {\n  Step1, Step2, Step3\n}\n\ninterface ApplicationStepsProps {\n  currentStep: ApplicationStepsTypes;\n  setApplicationStep: (step: ApplicationStepsTypes) => void;\n}\n\nconst ApplicationSteps = ({currentStep, setApplicationStep}: ApplicationStepsProps) => {\n  const steps: ApplicationStepInterface[] = [\n    {\n      step: ApplicationStepsTypes.Step1,\n      stepNumber: 1,\n      title: \"Requirements\",\n      description: \"Check the position and its requirements\",\n    },\n    {\n      step: ApplicationStepsTypes.Step2,\n      stepNumber: 2,\n      title: \"Psychometric test\",\n      description: \"Do psychometric test\",\n    },\n    {\n      step: ApplicationStepsTypes.Step3,\n      stepNumber: 3,\n      title: \"Exam centre\",\n      description: \"Choose the examination centre\",\n    },\n  ]\n  return (\n    <div className=\"grid md:grid-cols-3 gap-2 w-full mt-4\">\n      {steps.map((item: ApplicationStepInterface, i: number) => (\n        <ApplicationStepItem \n          currentStep={currentStep}\n          stepItem={item}\n          setApplicationStep={setApplicationStep}\n        />\n      ))}\n    </div>\n  )\n}\n\nexport default ApplicationSteps\n","import { ExamResultsDetails } from \"../interfaces/exam\";\nimport { PositionAPICourse } from \"../interfaces/position\";\nimport { questionType, questionTypeElements, questionTypeElementsType } from \"../interfaces/question\";\n\nexport const getQuestionType = (question_types: questionType[] | null, type_id: string) => {\n  let type: questionTypeElementsType | null = null;\n  if (question_types !== null) {\n    let check = question_types.find(itm => itm.id === type_id);\n    if (check !== undefined) {\n      let check_type = questionTypeElements.find(itm => check && itm.key === check.element);\n      if (check_type !== undefined) {\n        type = check_type.key\n      }\n    }\n  }\n  return type;\n}\n\nexport const findTotalMarks = (courses: PositionAPICourse[], results: ExamResultsDetails[] | null) => {\n  if (results !== null) {\n    let sum: number = 0;\n    for (let course of courses) {\n      let test = results.find(itm => itm.course === course.course_id);\n      if (test !== undefined) {\n        sum = sum + test.user_total_marks;\n      }\n    }\n    return sum.toFixed(2)\n  } else {\n    return \"Wait...\"\n  }\n}\n\nexport const CheckIfExamDone = (courses: PositionAPICourse[], results: ExamResultsDetails[] | null) => {\n  let res: boolean = false;\n  if (results !== null) {\n    for (let course of courses) {\n      let test = results.find(itm => itm.course === course.course_id);\n      if (test !== undefined) {\n        res = true;\n      }\n    }\n  }\n  return res;\n}","import React from 'react'\nimport { applicationHistory, ApplicationStatesDescription } from '../../../interfaces/application'\nimport { DATE } from '../../../utils/functions'\n\ninterface ApplicationHistoryProps {\n  applicationHistory: applicationHistory[];\n}\n\nconst ApplicationHistory = (props: ApplicationHistoryProps) => {\n  return (\n    <div className=\"flex flex-col justify-between items-start gap-1 bg-white px-3 py-2\">\n      {/* <span className=\"text-sm text-blue-800 font-bold\">Application status history</span> */}\n      <hr className=\"bg-blue-600\" />\n      <div className=\"grid md:grid-cols-2 lg:grid-cols-3 gap-3\">\n      {props.applicationHistory !== undefined &&\n        props.applicationHistory.length > 0 && \n        props.applicationHistory.map((item, i) => (\n          <div key={i + 1} className=\"col-span-1 flex flex-col border border-blue-500 rounded px-3 py-2\">\n            <div className=\"flex flex-row gap-2 justify-start items-center text-xs\">\n              <span className=\"text-gray-500\">Date:</span>\n              <span className=\"font-bold\">{DATE(item.date, \"DD/MM/YYYY\")}</span>\n            </div>\n            <div className=\"flex flex-row gap-2 justify-start items-center text-xs\">\n              <span className=\"text-gray-500\">Action:</span>\n              <span className=\"font-bold\">{item.comment}</span>\n            </div>\n            <div className=\"flex flex-row gap-2 justify-start items-center text-xs\">\n              <span className=\"text-gray-500\">Application status:</span>\n              <span className=\"font-bold\">{ApplicationStatesDescription.find(itm => itm.key === item.application_status)?.caption}</span>\n            </div>\n          </div>\n        ))}\n      </div> \n    </div>\n  )\n}\n\nexport default ApplicationHistory\n","import React, { Component } from 'react'\nimport { MdInfo, MdLocationOn } from 'react-icons/md';\nimport { Redirect } from 'react-router-dom';\nimport { applicationPeriodsStoreInterface } from '../../../actions/application_periods';\nimport { candidateExamStoreInterface, InitialExamDetails } from '../../../actions/candidate_exam';\nimport { LocationsDataStoreInterface } from '../../../actions/locations_data';\nimport Loading from '../../../components/Loading/Loading';\nimport { LoadingType } from '../../../components/Loading/LoadingV2';\nimport { applicationExamAPI } from '../../../interfaces/application';\nimport { DATE } from '../../../utils/functions';\nimport { LocationTableInterface } from '../../Application/ExamCenter/ChooseExamCenter';\n\ninterface ExamDetailsProps {\n  locationDetails: applicationExamAPI | undefined;\n  examDetails: InitialExamDetails | null;\n  locationsData: LocationsDataStoreInterface;\n  loadAllLocationsData: (callback: (loading: boolean) => void) => void;\n  setSelectedLocationData: (locationData: LocationTableInterface) => void;\n  periods: applicationPeriodsStoreInterface;\n  loadApplicationPeriods: (callback: (loading: boolean) => void) => void;\n  candidateExam: candidateExamStoreInterface;\n  setSelectedCandidateExam: (exam_id: string) => void;\n  // selectedCourse: course;\n}\ninterface ExamDetailsState {\n  loading: boolean;\n}\n\nclass ExamDetails extends Component<ExamDetailsProps, ExamDetailsState> {\n  constructor(props: ExamDetailsProps) {\n\t\tsuper(props);\n\n\t\tthis.state = {\n      loading: false,\n\t\t};\n\t}\n  setLoading = (status: boolean) => {\n    this.setState({ loading: status });\n  }\n  componentDidMount = () => {\n    if (this.props.locationsData.Locations_list === null || this.props.locationsData.Locations_list.length === 0) {\n      this.props.loadAllLocationsData(this.setLoading);\n    }\n    // if (this.props.periods.applicationPeriods === null || this.props.periods.applicationPeriods.length === 0 || this.props.periods.selected_period === null) {\n      this.props.loadApplicationPeriods(this.setLoading);\n    // } \n  }\n  render() {\n    if (this.props.candidateExam.selected_exam_id !== null) {\n      return <Redirect to=\"/do-exam\" />\n    }\n    if (this.props.examDetails === null) {\n      return (\n        <div className=\"bg-yellow-50 text-yellow-800 font-bold rounded px-2 py-4 text-center text-3xl border border-yellow-600 mx-4 my-4\">\n          No Exam details found!\n        </div>\n      )\n    }\n    if (this.props.locationDetails === undefined) {\n      return (\n        <div className=\"bg-yellow-50 text-yellow-800 font-bold rounded px-2 py-4 text-center text-3xl border border-yellow-600 mx-4 my-4\">\n          No exam location details found!\n        </div>\n      )\n    }\n    return (\n      <div>\n        {this.state.loading === true ? \n        <div className=\"px-4 py-4 rounded bg-gray-100\">\n          <Loading type={LoadingType.dark} />\n        </div>:\n        <div>\n          <div className=\"bg-gray-100 rounded mx-2 mb-2 px-2 py-2\">\n            <div className=\"font-bold text-xl text-blue-600 mb-4 flex flex-row items-center justify-between gap-2 bg-white py-2 px-2 rounded\">\n              <div className=\"flex flex-row items-center gap-2\">\n                <MdInfo className=\"text-4xl text-blue-600\" />\n                Exam information\n              </div>\n              <button onClick={() => {\n                // this.props.setSelectedCourse(this.props.selectedCourse);\n                this.props.examDetails && this.props.setSelectedCandidateExam(this.props.examDetails.id)\n              }} type=\"button\" className={`btn ${this.props.candidateExam.selected_exam_id !== null ? \"bg-yellow-700 hover:bg-yellow-900\" : \"bg-blue-600 hover:bg-blue-700\"} text-white cursor-pointer text-base`}>{this.props.candidateExam.selected_exam_id !== null ? \"Return to Exam\" : \"Start Exam\"}</button>\n            </div>\n            <div className=\"grid md:grid-cols-3 gap-4\">\n              <div className=\"col-span-1\">\n                <div className=\"flex flex-col pl-2 border-gray-300 pb-2\">\n                  <span className=\"text-gray-500 text-sm italic\">Exam date:</span>\n                  <span className=\"text-gray-700 font-bold\">{DATE(this.props.examDetails.exam_date, \"DD/MM/YYYY\")}</span>\n                </div>\n              </div>\n              <div className=\"col-span-1\">\n                <div className=\"flex flex-col pl-2 border-gray-300 pb-2\">\n                  <span className=\"text-gray-500 text-sm italic\">Exam start time:</span>\n                  <span className=\"text-gray-700 font-bold\">{this.props.examDetails.start_time}</span>\n                </div>\n              </div>\n              <div className=\"col-span-1\">\n                <div className=\"flex flex-col pl-2 border-gray-300 pb-2\">\n                  <span className=\"text-gray-500 text-sm italic\">Exam duration:</span>\n                  <span className=\"text-gray-700 font-bold\">{this.props.examDetails.duration/60} hours {this.props.examDetails.duration%60 > 0 && <div>{this.props.examDetails.duration%60} mins</div>}</span>\n                </div>\n              </div>\n              <div className=\"col-span-3\">\n                <div className=\"flex flex-col px-2 pb-2\">\n                  <span className=\"text-gray-500 text-sm italic\">Exam description:</span>\n                  <span className=\"text-gray-700 font-bold px-2 py-2 rounded bg-white mt-2\">\n                    {this.props.examDetails.discription}\n                  </span>\n                </div>\n              </div>\n              <div className=\"col-span-3\">\n                <div className=\"flex flex-col px-2 pb-2\">\n                  <span className=\"text-gray-500 text-sm italic\">Terms and conditions / Rules:</span>\n                  <div className=\"px-2 py-2 rounded bg-white mt-2\" dangerouslySetInnerHTML={{__html: this.props.examDetails.termes}}></div>\n                </div>\n              </div>\n            </div>\n          </div>\n          <div className=\"bg-gray-100 rounded mx-2 mb-2 px-2 py-2\">\n            <div className=\"font-bold text-xl text-blue-600 mb-4 flex flex-row items-center justify-between gap-2 bg-white py-2 px-2 rounded\">\n              <div className=\"flex flex-row items-center gap-2\">\n                <MdLocationOn className=\"text-4xl text-blue-600\" />\n                Examination location\n              </div>\n            </div>\n            <div className=\"grid md:grid-cols-3 gap-4 px-2\">\n              <div className=\"col-span-1\">\n                <div className=\"flex flex-col border-b border-gray-300 pb-2\">\n                  <span className=\"text-gray-500 text-sm italic\">Province:</span>\n                  <span className=\"text-gray-700 font-bold\">{this.props.locationsData.Locations_list && this.props.locationsData.Locations_list.find(itm => this.props.locationDetails !== undefined && itm.center_id === this.props.locationDetails.center_id)?.province_name}</span>\n                </div>\n              </div>\n              <div className=\"col-span-1\">\n                <div className=\"flex flex-col border-b border-gray-300 pb-2\">\n                  <span className=\"text-gray-500 text-sm italic\">District:</span>\n                  <span className=\"text-gray-700 font-bold\">{this.props.locationsData.Locations_list && this.props.locationsData.Locations_list.find(itm => this.props.locationDetails !== undefined && itm.center_id === this.props.locationDetails.center_id)?.district_name}</span>\n                </div>\n              </div>\n              <div className=\"col-span-1\">\n                <div className=\"flex flex-col border-b border-gray-300 pb-2\">\n                  <span className=\"text-gray-500 text-sm italic\">Center: </span>\n                  <span className=\"text-gray-700 font-bold\">{this.props.locationDetails.center_name}</span>\n                </div>\n              </div>\n              <div className=\"col-span-1\">\n                <div className=\"flex flex-col border-b border-gray-300 pb-2\">\n                  <span className=\"text-gray-500 text-sm italic\">Room number: </span>\n                  <span className=\"text-gray-700 font-bold\">{this.props.locationDetails.room_number}</span>\n                </div>\n              </div>\n              <div className=\"col-span-1\">\n                <div className=\"flex flex-col border-b border-gray-300 pb-2\">\n                  <span className=\"text-gray-500 text-sm italic\">Proctoring type</span>\n                  <span className=\"text-gray-700 font-bold\">{this.props.locationDetails.proctoring_type}</span>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>}\n      </div>\n    )\n  }\n}\n\nexport default ExamDetails\n","import React, { Component } from 'react'\n\nimport { Fragment } from 'react'\nimport { MdHistory } from 'react-icons/md'\nimport { Redirect } from 'react-router-dom'\nimport ChooseExamCenter, { LocationTableInterface } from '../Application/ExamCenter/ChooseExamCenter'\nimport { connect } from \"react-redux\";\nimport {\n  Auth,\n  loadExam,\n  examDataInterface,\n  PrepareExamsStoreInterface,\n  loadExamsList,\n  LocationsDataStoreInterface,\n  loadAllLocationsData,\n  setSelectedLocationData,\n  applicationPeriodsStoreInterface,\n  loadApplicationPeriods,\n  candidateExamStoreInterface,\n  setSelectedCandidateExam,\n  courseStoreInterface,\n  loadCourses,\n  setSelectedCourse,\n  InitializeExamDetails,\n  InitialExamDetails,\n  setSelectedPeriod,\n  setSelectedPosition,\n  positionsStoreInterface,\n  loadExamsDone,\n} from \"../../actions\";\nimport { StoreState } from \"../../reducers\";\nimport Loading from '../../components/Loading/Loading'\nimport { ExamInterface, examStatus, UserExamStatus } from '../../interfaces/exam'\nimport { course, PositionAPI } from '../../interfaces/index'\nimport { applicationExamAPI, applicationHistory, ApplicationPeriodGet, ApplicationStates, GetApplicationsAPI } from '../../interfaces/application'\nimport { sentExamInterface } from '../Application/ExamCenter/ExamCenter'\nimport Alert, { AlertInterface } from '../../components/Alert/Alert'\nimport { RiErrorWarningLine } from 'react-icons/ri'\nimport { BsFileEarmarkText } from 'react-icons/bs'\nimport { IoMdTrash } from 'react-icons/io'\nimport { DATE } from '../../utils/functions'\nimport ApplicationHistory from './ApplicationHistory/ApplicationHistory'\nimport ExamDetails from './ExamDetails/ExamDetails'\nimport { CheckIfExamDone, findTotalMarks } from '../../utils/question_bank'\n\ninterface PostExamsProps {\n  doExam: examDataInterface;\n  auth: Auth;\n  loadExam: (user_id: string, exam: ExamInterface) => void;\n  selectedPosition: PositionAPI;\n  selectedExams: applicationExamAPI[] | null;\n  selected_application: string | null;\n  updateLocation: (application_id: string, exams: sentExamInterface[]) => void;\n  changeLocationError: string | null,\n  loading: boolean,\n  incrementIncomplete: () => void;\n  applicationHistory: applicationHistory[] | undefined;\n  deleteApplication: (id: string) => void;\n  selectedApplicationDetails: GetApplicationsAPI | null;\n  locationsData: LocationsDataStoreInterface;\n  loadAllLocationsData: (callback: (loading: boolean) => void) => void;\n  setSelectedLocationData: (locationData: LocationTableInterface) => void;\n  periods: applicationPeriodsStoreInterface;\n  loadApplicationPeriods: (callback: (loading: boolean) => void) => void;\n  candidateExam: candidateExamStoreInterface;\n  setSelectedCandidateExam: (exam_id: string) => void;\n  course: courseStoreInterface;\n  loadCourses: (callback: (loading: boolean) => void) => void;\n  setSelectedCourse: (course: course | null) => void;\n  InitializeExamDetails: (periodId: string, courseId: string, room_id: string, position_id: string, callback: (loading: boolean) => void) => void;\n  setSelectedPeriod: (period: ApplicationPeriodGet) => void;\n  positions: positionsStoreInterface;\n  setSelectedPosition: (position: PositionAPI) => void;\n  loadExamsDone: (periodId: string, userId: string, callback: (loading: boolean) => void) => void;\n  setMaxExamModal: (status: boolean) => void;\n  setDisplayDetailsModal: (status: boolean) => void;\n}\ninterface PostExamsState {\n  appointmentDetailsModal: {\n    status: boolean;\n    item: InitialExamDetails | null;\n  };\n  redirect: boolean;\n  displayResults: boolean;\n  changeLocation: {\n    status: boolean;\n    location: ExamInterface | null;\n  };\n  centersModal: boolean;\n  selectedCourse: course | null,\n  selectedLocation: applicationExamAPI | null,\n  applicationHistoryState: boolean;\n  loading: boolean;\n  loadingExams: boolean;\n  loadingExamsDone: boolean;\n}\n\nclass _PostExams extends Component<PostExamsProps, PostExamsState> {\n  constructor(props: PostExamsProps) {\n\t\tsuper(props);\n\n\t\tthis.state = {\n      appointmentDetailsModal: {\n        status: false,\n        item: null,\n      },\n      redirect: false,\n      displayResults: false,\n      changeLocation: {\n        status: false,\n        location: null,\n      },\n      centersModal: false,\n      selectedCourse: null,\n      selectedLocation: null,\n      applicationHistoryState: false,\n      loading: false,\n      loadingExams: false,\n      loadingExamsDone: true,\n    };\n\t}\n\n  renderExam = (user_id: string, exam: ExamInterface) => {\n    exam.status = examStatus.Editing;\n    this.props.loadExam(user_id, exam);\n    this.setState({ redirect: true });\n  }\n\n  closeModal = () => {\n    this.setState({ centersModal: false });\n    this.props.setMaxExamModal(false);\n  }\n\n  updateLocationFunction = (exams: sentExamInterface[]) => {\n    if (this.props.selected_application !== null) {\n      this.props.updateLocation(this.props.selected_application, exams);\n    }\n  }\n\n  setLoading = (status: boolean) => {\n    this.setState({ loading: status});\n  }\n  setLoadingExams = (status: boolean) => {\n    this.setState({ loadingExams: status});\n  }\n  setLoadingExamsDone = (status: boolean) => {\n    this.setState({ loadingExamsDone: status});\n  }\n\n  numberOfIncomplete = (\n    exams: sentExamInterface[], courses: {\n    course_name: string;\n    course_code: string;\n    description: string;\n    school_levels: string[];\n    course_id: string;\n    }[]) => {\n    let count: number = 0;\n      for (let i in courses) {\n        if (exams.filter(item => item.course_id === courses[i].course_id).length === 0) {\n          count = count + 1;\n        }\n      }\n    return count;\n\n  }\n\n  findLocation = (\n    course_id: string, \n    course_name: string,\n    course_code: string,\n    location: LocationTableInterface,\n    exam_id: string,\n  ) => {\n    return this.updateLocationFunction([{\n      course_id: course_id, \n      proctoring_type: \"Center\",\n      center_id: location.center_id\n    }])\n  }\n\n  findExam = (courseId: string) => {\n    if (this.props.candidateExam.user_exams_temp !== null) {\n      let current_temp = this.props.candidateExam.user_exams_temp.find(itm => itm.course === courseId);\n      let testDone = this.props.candidateExam.user_exams_done.find(itm => itm.course === courseId);\n      if (current_temp !== undefined && (testDone === undefined || testDone.exam_status === UserExamStatus.Editing)) {\n        return current_temp;\n      }\n    }\n    return null;\n  }\n\n  findCourse = (course_id: string): applicationExamAPI | null => {\n    if (this.props.selectedExams !== null) {\n      let x: applicationExamAPI | null | undefined = this.props.selectedExams.find(itm => this.state.appointmentDetailsModal && itm.course_id === course_id)\n      if (x !== undefined && x !== null) {\n        return x;\n      }\n    }\n    return null\n  }\n\n  pendingCourses = () => {\n    let count = 0;\n    for(let course of this.props.selectedPosition.courses) {\n      if (this.props.candidateExam.user_exams_temp !== null) {\n        // let current_temp = this.props.candidateExam.user_exams_temp.find(itm => itm.course === course.course_id);\n        let testDone = this.props.candidateExam.user_exams_done.find(itm => itm.course === course.course_id);\n        if (testDone === undefined) {\n          count = count + 1;\n        }\n      }\n    }\n    return count;\n  }\n\n  InitializationFn = () => {\n    if (this.props.periods.selected_period !== null && this.props.selectedPosition !== null) {\n      this.props.loadExamsDone(this.props.periods.selected_period.application_session_id, this.props.auth.user.user_id, this.setLoadingExamsDone);\n      // if (this.state.loadingExamsDone === false) {\n        for(let course of this.props.selectedPosition.courses) {\n          let testDone = this.props.candidateExam.user_exams_temp.find(itm => itm.course === course.course_id);\n          if (testDone === undefined) {\n            let center_id = this.props.selectedExams?.find(itm => itm.course_id === course.course_id);\n            if (center_id !== undefined) {\n              this.props.InitializeExamDetails(\n                this.props.periods.selected_period.application_session_id,\n                course.course_id,\n                center_id.room_id,\n                this.props.selectedPosition.position_id,\n                this.setLoadingExams\n              )\n            }\n          }\n        }\n      // }\n    }\n  }\n\n  componentDidMount = () => {\n    this.props.loadApplicationPeriods(this.setLoading);\n    if (this.props.course.courses === null || this.props.course.courses.length === 0) {\n      this.props.loadCourses(this.setLoading);\n    }\n    this.InitializationFn();\n    if (this.props.doExam.exam_answers) {\n      if (this.props.doExam.exam_answers.status === examStatus.Editing) {\n        this.setState({ redirect: true });\n      }\n    }\n  }\n\n  render() {\n    if (this.props.candidateExam.selected_exam_id !== null) {\n      return <Redirect to=\"/do-exam\" />\n    }\n    if (this.state.redirect === true) {\n      return <Redirect to=\"/do-exam\" />\n    }\n    if (this.props.loading === true) { return <Loading /> }\n    return (\n      this.props.selectedExams === null ? \"No result found!\" :\n      <Fragment>\n        {this.state.appointmentDetailsModal.status === true &&\n          this.state.appointmentDetailsModal.item !== null ?\n          <>\n          <div className=\"animate__animated animate__fadeInUp animate__faster\">\n            <div className=\"flex flex-row gap-4 items-center justify-between bg-blue-100 py-2 px-2 mb-2\">\n              <div className=\"flex flex-col\">\n                <div className=\"flex flex-row gap-2 items-center\">\n                  <div onClick={() => this.setState({ appointmentDetailsModal: { status: false, item: null}, displayResults: false })} className=\"btn bg-white hover:bg-blue-600 hover:text-white text-gray-600 cursor-pointer\">Back</div>\n                  <span className=\"font-bold text-xl text-gray-700\">Exam: {this.state.appointmentDetailsModal.item !== null && <>{this.findCourse(this.state.appointmentDetailsModal.item!.course)?.course_name}</>}</span>\n                </div>\n              </div>\n            </div>\n            {this.findExam(this.state.appointmentDetailsModal.item.course) === null ? \n            <div className=\"text-yellow-700 font-bold text-center text-3xl bg-yellow-50 border border-yellow-200 rounded px-4 py-4 mx-4 my-4\">\n            No exam found for selected course</div> :\n            this.props.periods.applicationPeriods && \n            (this.props.periods.applicationPeriods.find(itm => this.state.appointmentDetailsModal.item && itm.application_session_id === this.state.appointmentDetailsModal.item.period)?.is_active === false ||\n            this.props.periods.applicationPeriods.find(itm => this.state.appointmentDetailsModal.item && itm.application_session_id === this.state.appointmentDetailsModal.item.period)?.is_active === undefined) ?\n            <div className=\"text-yellow-700 font-bold text-center text-3xl bg-yellow-50 border border-yellow-200 rounded px-4 py-4 mx-4 my-4 flex flex-col items-center\">\n              <div>No exam for the selected period</div>\n              <div onClick={() => this.props.loadApplicationPeriods(this.setLoading)} className=\"btn bg-white text-gray-700 w-max text-base border border-gray-700 mt-4 cursor-pointer\">Reload</div>\n            </div> :\n            <ExamDetails \n              locationDetails={this.props.selectedExams.find(itm => this.state.appointmentDetailsModal.item && itm.course_id === this.state.appointmentDetailsModal.item.course)}\n              examDetails={this.findExam(this.state.appointmentDetailsModal.item.course)}\n              locationsData={this.props.locationsData}\n              loadAllLocationsData={this.props.loadAllLocationsData}\n              setSelectedLocationData={this.props.setSelectedLocationData} \n              periods={this.props.periods} \n              loadApplicationPeriods={this.props.loadApplicationPeriods}\n              candidateExam={this.props.candidateExam} \n              setSelectedCandidateExam={this.props.setSelectedCandidateExam} />}\n          </div>\n          </> : \n          this.state.centersModal === true && this.state.selectedCourse !== null ?\n          <div className=\"animate__animated animate__fadeInUp animate__faster\">\n            <div className=\"flex flex-row gap-4 items-center justify-between bg-blue-100 py-2 px-2 mb-2\">\n              <div className=\"flex flex-col\">\n                <div className=\"flex flex-row gap-2 items-center\">\n                  <div onClick={() => {\n                    this.setState({ centersModal: false, selectedCourse: null })\n                  }} className=\"btn bg-white hover:bg-blue-600 hover:text-white text-gray-600 cursor-pointer\">Back</div>\n                  <span className=\"font-bold text-xl text-gray-700\">Change exam location</span>\n                </div>\n              </div>\n            </div>\n            <ChooseExamCenter\n              positionCourses={this.state.selectedCourse}\n              addLocation={this.findLocation}\n              closeModal={this.closeModal}\n            />\n          </div> : \n        this.state.applicationHistoryState === true ?\n          this.props.applicationHistory === undefined ?  <div className=\"text-yellow-700 font-bold text-2xl text-center\">No application history found!</div> :\n          <div className=\"animate__animated animate__fadeInUp animate__faster bg-white\">\n            <div className=\"flex flex-row gap-4 items-center justify-between bg-blue-100 py-2 px-2\">\n              <div className=\"flex flex-col\">\n                <div className=\"flex flex-row gap-2 items-center\">\n                  <div onClick={() => this.setState({ applicationHistoryState: false })} className=\"btn bg-white hover:bg-blue-600 hover:text-white text-gray-600 cursor-pointer\">Back</div>\n                  <span className=\"font-bold text-xl text-gray-700\">Application history</span>\n                </div>\n              </div>\n            </div>\n            <ApplicationHistory applicationHistory={this.props.applicationHistory} />\n          </div>\n        : \n        <div className=\"\">\n          <div className=\"px-2 md:py-2\">\n            <div className=\"flex flex-col md:flex-row justify-between items-start md:items-center\">\n              <div onClick={() => this.setState({ applicationHistoryState: true })}className=\"btn bg-gray-100 text-gray-600 border border-gray-300 text-sm flex flex-row items-center gap-2 cursor-pointer hover:border-blue-500 hover:bg-blue-50 hover:text-blue-600 my-3 md:mt-0\">\n                <MdHistory className=\"text-xl\" />\n                <span>View application history</span>\n              </div>\n              <div className={`grid ${this.pendingCourses() > 0 ? \"grid-cols-3\" : \"grid-cols-2\"} gap-4`}>\n                <div className=\"col-span-1 flex justify-start md:justify-end\">\n                  <div className=\"flex flex-row items-center\">\n                    <div className=\"flex flex-col\">\n                      <span className=\"text-xs md:text-md text-gray-500 font-bold text-left md:text-right\">Total</span>\n                      <span className=\"text-xl md:text-xl font-bold text-gray-700 text-left md:text-right\">{this.props.selectedExams.length}</span>\n                    </div>\n                  </div>\n                </div>\n                {this.pendingCourses() > 0 &&\n                <div className=\"col-span-1 flex justify-start md:justify-end\">\n                  <div className=\"flex flex-row items-center\">\n                    <div className=\"flex flex-col\">\n                      <span className=\"text-xs md:text-md text-gray-500 font-bold text-left md:text-right\">Pending</span>\n                      <span className=\"text-xl md:text-xl font-bold text-gray-700 text-left md:text-right\">{\n                      this.props.selectedPosition !== null &&\n                      this.pendingCourses()}</span>\n                    </div>\n                  </div>\n                </div>}\n                <div className=\"col-span-1 flex justify-start md:justify-end\">\n                  <div className=\"flex flex-row items-center\">\n                    <div className=\"flex flex-col\">\n                      <span className=\"text-xs md:text-md text-gray-500 font-bold text-left md:text-right\">Total marks</span>\n                      {this.state.loadingExams === true || this.state.loadingExamsDone === true ? <span>Wait...</span> :\n                      <span className=\"text-xl md:text-xl font-bold text-gray-700 text-left md:text-right\">{this.props.candidateExam.user_exams_done.find(itm => itm.exam_status === UserExamStatus.Done)?.exam_id !== undefined ? (parseInt(findTotalMarks(this.props.selectedPosition.courses, this.props.candidateExam.user_exams_done))/this.props.selectedPosition.courses.length).toFixed(1) : \"...\"}%</span>}\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n            <div className=\"font-bold flex flex-col md:flex-row items-start md:items-center justify-start md:justify-between gap-2\">\n              {this.props.selectedApplicationDetails && this.props.selectedApplicationDetails.application_status !== ApplicationStates.Rejected ?\n              <div className=\"text-xl flex flex-row items-center gap-2\">\n                <BsFileEarmarkText className=\"text-2xl\" />\n                <span>Exams list</span>\n              </div> : <div></div>}\n              {this.state.loadingExams === false && this.state.loadingExamsDone === false && CheckIfExamDone(this.props.selectedPosition.courses, this.props.candidateExam.user_exams_done) === false &&\n              <div onClick={() => this.props.selected_application && this.props.deleteApplication(this.props.selected_application)} className=\"btn flex flex-row gap-2 items-center text-red-700 bg-red-50 cursor-pointer hover:bg-red-100 hover:text-red-900\">\n                <IoMdTrash className=\"text-xl \" />\n                <span className=\"text-sm\">Remove application</span>\n              </div>}\n            </div>\n          </div>\n          {this.props.selectedApplicationDetails && this.props.selectedApplicationDetails.application_status !== ApplicationStates.Rejected &&\n          <div className=\"px-2 pb-2 mt-3\">\n            <div>\n              {this.props.changeLocationError !== null && \n              <Alert \n                title=\"Error\"\n                description={this.props.changeLocationError}\n                theme={AlertInterface.danger}\n              />}\n            </div>\n            {this.state.loading === true ? \n            <div className=\"rounded border px-4 py-4 flex flex-col gap-3\">\n              <span className=\"text-gray-500 text-xl ml-4\">Loading...</span>\n              <Loading />\n            </div> :\n            <div className=\"grid md:grid-cols-1 lg:grid-cols-1 gap-3\">\n              \n              {this.props.selectedPosition === null || this.props.selectedExams === null ? <Loading /> : \n              this.props.selectedPosition.courses.length === 0 ? \"No Exams found!\" :\n              this.props.selectedPosition.courses.map((item, i) => (\n                <>\n                {this.props.loading === true && this.state.selectedCourse?.course_id === item.course_id ? <Loading /> : \n                <div key={i + 1} className={`border px-2 py-2 rounded ${this.state.selectedCourse?.course_id === item.course_id ? \"border-blue-500 bg-blue-50\" : this.props.selectedExams === null ? \"\" : this.props.selectedExams.find(itm => itm.course_id === item.course_id) !== undefined ? this.props.candidateExam.user_exams_done.find(itm => itm.course === item.course_id) !== undefined ? this.props.candidateExam.user_exams_done.find(itm => itm.course === item.course_id)?.exam_status === UserExamStatus.Editing ? \"bg-yellow-50 border-yellow-300 hover:bg-yellow-50\" : \"bg-blue-50 border-white hover:bg-blue-100\" : \"bg-white border-blue-200 hover:bg-blue-100\" : \"bg-yellow-50 hover:bg-white border-yellow-600\"}`}>\n                  <div className=\"grid md:grid-cols-12 gap-2\">\n                    <div className=\"col-span-4 flex fex-row items-center gap-3\">\n                      <div className=\"flex flex-col\">\n                        <span className={`font-bold ${this.props.selectedExams?.find(itm => itm.course_id === item.course_id) !== undefined ? \"text-blue-600\" : \"text-yellow-700\"} text-lg truncate`}>{item.course_name}</span>\n                        <div className=\"flex flex-row justify-start items-center gap-2\">\n                          {this.props.candidateExam.user_exams_done.find(itm => itm.course === item.course_id) === undefined &&\n                          <span className=\"text-gray-500 text-xs\">Exam date: </span>}\n                          {this.props.selectedExams === null || this.state.loadingExams === true ? \n                          <div className=\"text-gray-500 font-bold bg-gray-100 text-sm rounded px-3 py-2\">Checking...</div> : \n                          this.findExam(item.course_id) !== null ? \n                          <div className=\"flex flex-row items-center gap-2\">\n                            <span className=\"font-bold text-blue-600 text-sm\">{DATE(this.findExam(item.course_id)!.exam_date, \"DD/MM/YYYY\")}</span>\n                            <span className={`bg-blue-100 text-blue-600 font-bold px-2 py-1 rounded-full text-sm`}>{this.findExam(item.course_id)!.start_time}</span>\n                          </div> : this.props.candidateExam.user_exams_done.find(itm => itm.course === item.course_id) !== undefined ?\n                          <span className=\"font-bold text-blue-600 text-sm\">Exam was done! {this.props.candidateExam.user_exams_done.find(itm => itm.course === item.course_id)?.exam_date !== undefined && DATE(this.props.candidateExam.user_exams_done.filter(itm => itm.course === item.course_id)[0].exam_date, \"DD/MM/YYYY\")}<span className=\"bg-blue-100 text-blue-700 rounded-full px-2 py-1 ml-3 text-xs\">{this.props.candidateExam.user_exams_done.find(itm => itm.course === item.course_id)?.exam_status}</span></span> :\n                          <span className={`text-gray-600 text-sm italic`}>Waiting for preparation</span>}\n                        </div>\n                      </div>\n                    </div>\n                    <div className=\"col-span-4 flex flex-col items-start justify-center\">\n                    {this.props.selectedExams === null ? \"\" : this.props.selectedExams.find(itm => itm.course_id === item.course_id) !== undefined ? \n                      <>\n                        <div className=\"flex flex-row justify-start items-center gap-2\">\n                          <span className=\"text-gray-500 text-xs\">Proctoring type: </span>\n                          <span className=\"text-gray-700 font-bold text-sm\">{this.props.selectedExams === null ? \"\" : this.props.selectedExams.find(itm => itm.course_id === item.course_id) !== undefined && this.props.selectedExams.find(itm => itm.course_id === item.course_id)?.proctoring_type}</span>\n                        </div>\n                        <div className=\"flex flex-row justify-start items-center gap-2\">\n                          <span className=\"text-gray-500 text-xs\">Exam location: </span>\n                          <span className={`text-gray-700 font-bold text-sm`}>Center: {this.props.selectedExams === null ? \"\" : this.props.selectedExams.find(itm => itm.course_id === item.course_id) !== undefined ? this.props.selectedExams.find(itm => itm.course_id === item.course_id)?.center_name : <span className=\"italic text-xs\">No location selected</span>}</span>\n                          <span className={`text-gray-700 font-bold text-sm`}>Room: {this.props.selectedExams === null ? \"\" : this.props.selectedExams.find(itm => itm.course_id === item.course_id) !== undefined ? this.props.selectedExams.find(itm => itm.course_id === item.course_id)?.room_number : <span className=\"italic text-xs\">No location selected</span>}</span>\n                        </div>\n                      </> : \n                      <div className=\"flex flex-row gap-2 items-center justify-start\">\n                        <RiErrorWarningLine className=\"text-xl text-yellow-700\" />\n                        <span className=\"text-yellow-700 italic text-sm\">No location selected</span>\n                      </div>}\n                    </div>\n                    <div className=\"col-span-4 flex items-center justify-start md:justify-end\">\n                    {this.props.selectedExams === null ? \"\" : this.props.selectedExams.find(itm => itm.course_id === item.course_id) !== undefined ? \n                      <div className=\"flex flex-row justify-start md:justify-end items-center gap-2\">\n                        {this.state.loadingExams === true || this.state.loadingExamsDone === true ? <div className=\"text-gray-500 font-bold bg-gray-100 text-sm rounded px-3 py-2\">Checking...</div> : this.props.candidateExam.user_exams_done.find(itm => itm.course === item.course_id) === undefined &&\n                        <div onClick={() => {\n                          this.setState({ selectedCourse: item, centersModal: true });\n                          this.props.setMaxExamModal(true);\n                        }} className=\"btn text-blue-600 border border-white cursor-pointer hover:bg-blue-600 hover:text-white bg-blue-100 text-sm w-40 text-center\">Change location</div>}\n                        {this.state.loadingExams === true || this.state.loadingExamsDone === true ? <div className=\"text-gray-500 font-bold bg-gray-100 text-sm rounded px-3 py-2\">Checking...</div> : this.findExam(item.course_id) !== null && this.findExam(item.course_id)?.course !== undefined && this.props.candidateExam.user_exams_done.find(itm => itm.course === item.course_id)?.exam_status !== UserExamStatus.Editing &&\n                        <div onClick={() => {\n                          this.props.course.courses && this.props.setSelectedCourse(this.props.course.courses.find(itm => itm.course_id === item.course_id)!);\n                          this.findExam(item.course_id) !== null && this.setState({ appointmentDetailsModal: { status: true, item: this.findExam(item.course_id)} });\n                        }} className=\"btn border border-blue-500 text-blue-600 cursor-pointer hover:bg-blue-600 hover:text-white text-sm text-center\">Details</div>}\n                        {this.state.loadingExams === true || this.state.loadingExamsDone === true ? <div className=\"text-gray-500 font-bold bg-gray-100 text-sm rounded px-3 py-2\">Checking...</div> : this.props.periods.selected_period !== null && this.props.periods.selected_period.is_active === true &&\n                        this.findExam(item.course_id) !== null && this.findExam(item.course_id)?.id !== undefined &&\n                        <div onClick={() => {\n                          if (this.props.selectedPosition !== null) {\n                            if (this.props.positions.selected_position === null || this.props.positions.selected_position.position_id !== this.props.selectedPosition.position_id) {\n                              this.props.setSelectedPosition(this.props.selectedPosition);\n                            }\n                            this.props.selectedExams !== null && this.props.course.courses && this.props.setSelectedCourse(this.props.course.courses.find(itm => itm.course_id === item.course_id)!);\n                            this.props.selectedExams !== null && this.findExam(item.course_id) !== null && this.props.setSelectedCandidateExam(this.findExam(item.course_id)!.id);\n                          }\n                        }} className={`btn border ${this.props.candidateExam.user_exams_done.find(itm => itm.course === item.course_id)?.exam_status !== UserExamStatus.Editing ? \"border-blue-500 bg-blue-600 hover:text-blue-600\" : \"border-yellow-500 bg-yellow-600 hover:text-yellow-600\"} text-white cursor-pointer hover:bg-white text-sm w-max text-center`}>\n                          {this.props.candidateExam.user_exams_done.find(itm => itm.course === item.course_id)?.exam_status !== UserExamStatus.Editing ? \"Start exam\" : \"Back to Exam\"}\n                        </div>}\n                      </div> : \n                      <div className=\"flex flex-row justify-start md:justify-end items-center gap-2\">\n                        {this.props.candidateExam.user_exams_done.find(itm => itm.course === item.course_id) === undefined &&\n                        <div onClick={() => this.setState({ selectedCourse: item, centersModal: true })} className=\"btn cursor-pointer bg-yellow-700 hover:bg-yellow-50 border border-yellow-700 hover:text-yellow-700 text-white text-sm w-36 text-center\">Choose location</div>}\n                      </div>}\n                      {this.props.candidateExam.user_exams_done.find(itm => itm.course === item.course_id) !== undefined && this.props.candidateExam.user_exams_done.find(itm => itm.course === item.course_id)?.exam_status !== UserExamStatus.Editing &&\n                      <div className=\"flex flex-row gap-2 items-center\">\n                        <div className={`text-blue-600 flex flex-col gap-0 text-right ml-2`}>\n                          <span className=\"text-sm\">Marks</span>\n                          <span className=\"text-lg font-bold -mt-1\">{this.props.candidateExam.user_exams_done.find(itm => itm.course === item.course_id)?.user_total_marks.toFixed(2)}%</span>\n                        </div>\n                        {/* <div className=\"btn bg-white text-blue-700 border border-blue-700\">View details</div> */}\n                      </div>}\n                    </div>\n                  </div>\n                </div>}\n                </>\n              ))\n            }\n            </div>}\n          </div>}\n        </div>\n        }\n      </Fragment>\n    )\n  }\n}\n\n\nconst mapStateToProps = ({\n  auth,\n  doExam,\n  prepareExam,\n  locationsData,\n  periods,\n  candidateExam,\n  course,\n  positions,\n}: StoreState): { auth: Auth; doExam: examDataInterface, prepareExam: PrepareExamsStoreInterface; locationsData: LocationsDataStoreInterface; periods: applicationPeriodsStoreInterface; candidateExam: candidateExamStoreInterface; course: courseStoreInterface; positions: positionsStoreInterface; } => {\n  return { auth: auth, doExam: doExam, prepareExam: prepareExam, locationsData: locationsData, periods: periods, candidateExam: candidateExam, course: course, positions: positions, };\n};\n\nconst PostExams = connect(mapStateToProps, {\n  loadExam,\n  loadExamsList,\n  loadAllLocationsData,\n  setSelectedLocationData,\n  loadApplicationPeriods,\n  setSelectedCandidateExam,\n  loadCourses,\n  setSelectedCourse,\n  InitializeExamDetails,\n  setSelectedPeriod,\n  setSelectedPosition,\n  loadExamsDone,\n})(_PostExams);\n\nexport default PostExams;","import React, { Component, Fragment } from 'react'\nimport { MdAdd, } from 'react-icons/md'\nimport { Link, Redirect } from 'react-router-dom'\nimport { connect } from \"react-redux\";\nimport {\n  Auth,\n  initiateApplication,\n  removeLocation,\n  loadApplicationPeriods,\n  applicationPeriodsStoreInterface,\n  setSelectedPeriod,\n  System,\n  PushPopupAlert,\n  positionsStoreInterface,\n  loadAllPositions,\n  FC_Access,\n} from \"../../actions\";\nimport { StoreState } from \"../../reducers\";\nimport { applicationStoreInterface, initialApplicationInterface } from '../../actions/application';\nimport { ApplicationStepsTypes } from '../Application/ApplicationSteps/ApplicationSteps';\nimport { applicationExamAPI, ApplicationPeriodGet, ApplicationStates, ApplicationStatesDescription, GetApplicationsAPI, NoRoomsInterface } from '../../interfaces/application';\nimport Exams from './Exams';\nimport { PositionAPI } from '../../interfaces/index';\nimport axios from 'axios';\nimport { API } from '../../utils/api';\nimport { sentExamInterface } from '../Application/ExamCenter/ExamCenter';\nimport Loading from '../../components/Loading/Loading';\nimport { AiOutlineFilter } from 'react-icons/ai';\nimport { IoBriefcase, IoBriefcaseOutline } from 'react-icons/io5';\nimport Modal, { ModalSize, Themes } from '../../components/Modal/Modal';\nimport { SideNavigation, MainItem, } from '../../components/Navigation/SideNavigation';\nimport { BsCaretRightFill } from 'react-icons/bs';\nimport LoadingV2, { LoadingType } from '../../components/Loading/LoadingV2';\nimport { PopupAlertData } from '../../components/Alert/Popup';\nimport { PopupAlertTheme } from '../../interfaces/popupAlert';\nimport { RiFileForbidLine } from 'react-icons/ri';\nimport { IoMdList } from 'react-icons/io';\nimport NoResult, { NoResultThemes } from '../../components/NoResult/NoResult';\nimport ApplicationPeriods from '../../components/ApplicationPeriods/ApplicationPeriods';\nimport { DATE } from '../../utils/functions';\nimport { UserAccessList } from '../../utils/auth_access';\nimport { errorToText } from '../../utils/errors';\nimport { BiArrowBack } from 'react-icons/bi';\n\ninterface ApplicationsDashboardState {\n  selectedPosition: PositionAPI | null;\n  selectedExams: applicationExamAPI[] | null;\n  applications: GetApplicationsAPI[] | [] | null;\n  selected_application: string | null;\n  noRoomsApplication: NoRoomsInterface[] | null | [];\n  loading: boolean;\n  applicationError: string | null;\n  number_of_incomplete: number,\n  applicationDetails: boolean,\n  selectedApplicationStatus: ApplicationStates | null,\n  showPeriodFilter: boolean,\n  maxExamModal: boolean,\n  loadingErr: string;\n  displayDetailsModal: boolean;\n}\ninterface ApplicationsDashboardProps {\n  auth: Auth;\n  application: applicationStoreInterface;\n  periods: applicationPeriodsStoreInterface;\n  initiateApplication: (initial: initialApplicationInterface) => void;\n  removeLocation: (course_id: string) => void;\n  loadApplicationPeriods: (callback: (loading: boolean) => void) => void;\n  setSelectedPeriod: (period: ApplicationPeriodGet) => void;\n  system: System;\n  PushPopupAlert: (alert: PopupAlertData) => void;\n  positions: positionsStoreInterface;\n  loadAllPositions: (callback: (loading: boolean) => void) => void;\n  FC_Access: Function;\n}\n\nclass _ApplicationsDashboard extends Component<ApplicationsDashboardProps, ApplicationsDashboardState> {\n  constructor(props: ApplicationsDashboardProps) {\n\t\tsuper(props);\n\n\t\tthis.state = {\n      selectedPosition: null,\n      selectedExams: null,\n      applications: null,\n      selected_application: null,\n      noRoomsApplication: null,\n      loading: false,\n      applicationError: null,\n      number_of_incomplete: 0,\n      applicationDetails: false,\n      selectedApplicationStatus: null,\n      showPeriodFilter: false,\n      maxExamModal: false,\n      loadingErr: \"\",\n      displayDetailsModal: false,\n\t\t};\n\t}\n\n  filteredApplications = (applications: GetApplicationsAPI[], Status: ApplicationStates | null, searchPeriod?: ApplicationPeriodGet | null) => {\n    let appl:GetApplicationsAPI[];\n    if (searchPeriod !== undefined && searchPeriod !== null) {\n      appl = applications.filter(itm => itm.application_session.application_session_id === searchPeriod.application_session_id);\n    } else {\n      appl = applications;\n    }\n    if (Status === null) {\n      return appl;\n    } else {\n      return appl.filter(item => item.application_status === Status);\n    }\n  }\n\n  closeApplicationDetails = () => {\n    this.setState({ selected_application: null });\n    this.setState({ selectedPosition: null, selected_application: null })\n    this.setState({ selectedExams: null });\n    this.setState({ displayDetailsModal: false });\n  }\n\n  setDisplayDetailsModal = (status: boolean) => {\n    this.setState({ displayDetailsModal: status });\n  }\n\n  applicationStatuses = (application: GetApplicationsAPI[]): { title: string, count: number, status: ApplicationStates }[] => {\n    let output: { title: string, count: number, status: ApplicationStates }[] = [];\n    for (let i in ApplicationStatesDescription) {\n      output.push({\n        title: ApplicationStatesDescription[i].caption,\n        count: application.filter(itm => itm.application_status === ApplicationStatesDescription[i].key).length,\n        status: ApplicationStatesDescription[i].key\n      })\n    }\n    return output;\n  }\n\n  setMaxExamModal = (status: boolean) => {\n    this.setState({ maxExamModal: status });\n  }\n\n  LoadApplications = async () => {\n    this.setState({ loadingErr: \"\" })\n    this.setState({ number_of_incomplete: 0 });\n    if (this.props.auth.user.user_id) {\n      const user_id = this.props.auth.user.user_id;\n      const selected_position = this.state.selectedPosition;\n      this.setState({ applications: null });\n      this.setState({ selectedPosition: null });\n      this.setState({ selectedExams: null });\n      \n      try {\n        const res = await axios.get<GetApplicationsAPI[]>(`${API.APPLICATION}/application/${user_id}`);\n        if (res.status === 200) {\n          console.log(\"Apps: \", res.data)\n          this.setState({ applications: res.data });\n          if (res.data !== null) {\n            if (res.data.length > 0) {\n              // let done = false;\n              for (let i in res.data) {\n                let courses = res.data[i].position.courses;\n                let exams = res.data[i].exams;\n                if (res.data[i].position.position_id === selected_position?.position_id) {\n                  this.setState({ selectedPosition: res.data[i].position });\n                  this.setState({ selectedExams: exams });\n                }\n                for ( let x in courses) {\n                  if (exams.filter(itm => itm.course_id === courses[x].course_id).length === 0 && res.data[i].application_status !== ApplicationStates.Rejected) {\n                    this.setState({ selected_application: res.data[i].application_id });\n                    this.setState({ selectedPosition: res.data[i].position, selected_application: res.data[i].application_id })\n                    this.setState({ selectedExams: res.data[i].exams });\n                    this.incrementIncomplete();\n                  }\n                }\n              }\n            }\n          }\n        }\n        console.log(\"Applications: \", this.state.applications);\n      } catch (error: any) {\n        this.setState({ loadingErr: errorToText(error) })\n        console.log(\"Applications err: \", {...error});\n      }\n    }\n  }\n\n  updateLocation = async (application_id: string, exams: sentExamInterface[]) => {\n    this.setState({ loading: true });\n    this.setState({ applicationError: null });\n    console.log(application_id);\n    for(let i in exams) {\n      try {\n        const res = await axios.post(`${API.APPLICATION}/application/updatemissed`, {\n          application_id: application_id,\n          exams: exams[i]\n        });\n        if (res.status === 200 && this.state.noRoomsApplication !== null) {\n          this.setState({ noRoomsApplication: this.state.noRoomsApplication?.filter(itm => itm.course_id !== exams[i].course_id) });\n        }\n        if (res.status === 200) {\n          this.props.PushPopupAlert({\n            title: `Location updated successfully`,\n            description: \"Location has updated successfully! You can continue to update before starting of the examination!\",\n            theme: PopupAlertTheme.success,\n          });\n        }\n        this.LoadApplications();\n      } catch (error: any) {\n        if (error.response) {\n          if (error.response.data) {\n            if (error.response.data.errors !== undefined) {\n              if (error.response.data.errors.length > 0) {\n                if (this.state.noRoomsApplication) {\n                  let newArr: sentExamInterface[];\n                  if (error.response.data.errors[0].field !== undefined) {\n                    newArr = this.state.noRoomsApplication?.filter(itm => itm.course_id === error.response.data.errors[0].field.course_id);\n                    if (newArr !== undefined)  {\n                      for (let i in newArr) {\n                        this.props.removeLocation(newArr[i].course_id);\n                      }\n                    }\n                  }\n                }\n                this.setState({ applicationError: error.response.data.errors[0].message });\n                this.props.PushPopupAlert({\n                  title: error.response.data.errors[0].message,\n                  theme: PopupAlertTheme.danger,\n                });\n              }\n            } else {\n              this.props.PushPopupAlert({\n                title: \"Something went wrong! Please try again\",\n                theme: PopupAlertTheme.danger,\n              });\n              this.setState({ applicationError: \"Something went wrong! Please try again\" });\n            }\n          }\n        }\n        console.log(\"Change error: \", {...error});\n      }\n    }\n    if (this.state.selectedPosition) {\n      this.setState({ selectedPosition: this.state.selectedPosition });\n    }\n    this.setState({ selected_application: application_id });\n    this.setState({ loading: false });\n  }\n\n  incrementIncomplete = () => {\n    this.setState({ number_of_incomplete: this.state.number_of_incomplete + 1 });\n  }\n\n  changeLoadingState = (state: boolean) => {\n    this.setState({ loading: state });\n  }\n\n  deleteApplication = async (id: string) => {\n    if (window.confirm(\"Are you sure do you want to delete this application?\") && id) {\n      this.changeLoadingState(true);\n      try {\n        await axios.delete(`${API.APPLICATION}/application/${id}`);\n        this.props.PushPopupAlert({\n          title: `Application deleted successfully!`,\n          theme: PopupAlertTheme.success,\n        });\n        this.setState({ selectedExams: null });\n        this.LoadApplications();\n      } catch (error: any) {\n        this.props.PushPopupAlert({\n          title: `Failed to delete application!`,\n          theme: PopupAlertTheme.warning,\n        });\n      }\n      this.changeLoadingState(false);\n    }\n  }\n\n  setShowFilterStatus = (status: boolean) => {\n    this.setState({ showPeriodFilter: status})\n  }\n\n  componentDidMount = () => {\n    this.props.loadApplicationPeriods(this.changeLoadingState);\n    this.LoadApplications();\n    this.props.loadAllPositions(this.changeLoadingState);\n    if (this.props.application.apply === undefined || this.props.application.apply.currentStep === ApplicationStepsTypes.Step3) {\n      this.props.initiateApplication({\n        user_id: this.props.auth.user.user_id, \n        selectedPosition: null, \n        currentStep: ApplicationStepsTypes.Step1,\n        positions: null,\n        doTestStatus: {\n          status: false,\n        },\n        selectedLocation: []\n      });\n    }\n    if (this.state.applications !== null) {\n      if (this.state.applications.length > 0) {\n        if (this.state.selectedPosition === null) {\n          this.setState({ selectedPosition: this.state.applications[0].position, selected_application: this.state.applications[0].application_id })\n        }\n        if (this.state.selectedExams === null) {\n          this.setState({ selectedExams: this.state.applications[0].exams })\n        }\n      }\n    }\n  }\n  render() {\n    if (!FC_Access(this.props.auth, UserAccessList.MY_APPLICATION).view) {\n      return <Redirect to=\"/\" />\n    }\n    return (\n      <Fragment>\n        {this.state.selectedPosition !== null && this.state.selectedExams !== null && this.state.displayDetailsModal === true ?\n          <div className=\"border-t border-gray-200 my-2 pb-2 bg-white rounded animate__animated animate__fadeInUp animate__faster\">\n            <div className=\"flex flex-row gap-4 items-center bg-blue-600 rounded-t py-2 px-2\">\n              <div className=\"h-12 w-12 rounded-full bg-blue-500 hover:bg-blue-700 cursor-pointer flex items-center justify-center\">\n                <BiArrowBack className=\"text-3xl text-white\" onClick={() => this.closeApplicationDetails()} />\n              </div>\n              <div className=\"flex flex-col\">\n                <span className=\"font-bold text-xl text-white\">{this.state.selectedPosition.position_title}</span>\n                <span className=\"text-sm text-gray-100 font-normal pl-1\">\n                  {this.state.applications !== null && this.state.selectedPosition !== null && this.state.applications.find(itm => itm.position.position_id === this.state.selectedPosition?.position_id)?.application_session.application_session_name} - {this.state.applications !== null && this.state.selectedPosition !== null && this.state.applications.find(itm => itm.position.position_id === this.state.selectedPosition?.position_id)?.application_session.period}\n                </span>\n              </div>\n            </div>\n            <Exams \n              selectedExams={this.state.selectedExams}\n              selectedPosition={this.state.selectedPosition}\n              selected_application={this.state.selected_application}\n              updateLocation={this.updateLocation}\n              changeLocationError={this.state.applicationError}\n              loading={this.state.loading}\n              incrementIncomplete={this.incrementIncomplete}\n              applicationHistory={this.state.applications !== null && this.state.selectedPosition !== null ? this.state.applications.find(itm => itm.position.position_id === this.state.selectedPosition?.position_id)?.application_history : undefined}\n              deleteApplication={this.deleteApplication}\n              selectedApplicationDetails={this.state.applications && this.state.applications.find(itm => itm.application_id === this.state.selected_application)!}\n              setMaxExamModal={this.setMaxExamModal}\n              setDisplayDetailsModal={this.setDisplayDetailsModal}\n            />\n          </div>\n        :\n        <>\n        <SideNavigation>\n          {this.props.positions.positions_list === null ? <div className=\"btn bg-gray-500 text-white mb-4 w-full flex flex-row items-center gap-3 cursor-not-allowed animate__animated animate__zoomIn\">\n            <RiFileForbidLine className=\"text-2xl text-white\" /> Please wait...\n          </div> :\n          this.props.positions.positions_list.length > 0 && this.props.periods.applicationPeriods && this.props.periods.applicationPeriods.filter(itm => itm.is_active === true).length !== 0 ?\n          <Link to=\"/apply\">\n            <div className=\"btn btn-blue text-white mb-4 w-full flex flex-row items-center gap-3 animate__animated animate__zoomIn\">\n              <MdAdd className=\"text-2xl text-white\" /> Apply\n            </div>\n          </Link> : \n          <div className=\"btn bg-gray-200 cursor-not-allowed text-gray-500 mb-4 w-full flex flex-row items-center animate__animated animate__zoomIn\">\n            No vacancies!\n          </div>}\n          {/* <div className=\"mb-6\"></div> */}\n          {/* <Search data={[1, 2, 3]} /> */}\n          <div \n          onClick={() => this.setState({ selectedApplicationStatus: null })} \n          className={`cursor-pointer ${this.state.selectedApplicationStatus !== null ? \"text-gray-600 hover:text-blue-600 border border-gray-200 hover:border-blue-600 hover:bg-blue-100 bg-white\" : \"text-blue-600 border border-blue-600 hover:bg-blue-100 bg-blue-100\"} flex flex-row items-center gap-2 px-2 py-1 rounded font-bold`}>\n            <IoMdList className=\"text-xl\" />\n            <span>View all ({this.state.applications && this.filteredApplications(this.state.applications, this.state.selectedApplicationStatus, this.props.periods.selected_period) ? this.filteredApplications(this.state.applications, this.state.selectedApplicationStatus, this.props.periods.selected_period).length : 0})</span>\n          </div>\n          <div className=\"pt-1\">\n            {this.state.applications && this.filteredApplications(this.state.applications, null, this.props.periods.selected_period) === null ? <Loading /> : this.state.applications && this.applicationStatuses(this.filteredApplications(this.state.applications, null, this.props.periods.selected_period)).map((itm: { title: string; count: number, status: ApplicationStates }, i: number) => (\n              itm.count > 0 &&\n              <Fragment key={itm.title}>\n                <div onClick={() => this.setState({ selectedApplicationStatus: itm.status })}>\n                  <MainItem title={itm.title} count={itm.count} active={this.state.selectedApplicationStatus === itm.status ? true : false} />\n                </div>\n              </Fragment>\n            ))}\n          </div>\n        </SideNavigation>\n        <div className=\"pr-2\">\n          <div className=\"mt-2 rounded px-3 md:px-4 py-3 md:py-3\">\n            <div className=\"flex flex-col\">\n              <div className=\"flex flex-col md:flex-row justify-between md:items-center\">\n                <div className=\"flex flex-col\">\n                  <span className=\"text-blue-600 text-2xl md:text-2xl lg:text-3xl font-bold\">My Applications <span className=\"md:hidden\">({this.state.applications && this.filteredApplications(this.state.applications, this.state.selectedApplicationStatus, this.props.periods.selected_period) ? this.filteredApplications(this.state.applications, this.state.selectedApplicationStatus, this.props.periods.selected_period).length : 0})</span></span>\n                  <div className=\"text-gray-700 font-bold text-xs md:text-sm lg:text-md flex flex-row gap-1 items-center\"><AiOutlineFilter className=\"text-2xl\" /> Selected period <span onClick={() => this.setState({ showPeriodFilter: true })} className={`px-2 ${this.props.periods.selected_period !== null? \"text-blue-600 hover:bg-blue-100 border-2 border-gray-200 hover:border-blue-600 underline\" : \"bg-white text-gray-600 hover:bg-gray-100 border border-gray-300\"}  rounded-full py-1 flex flex-row justify-center items-center font-bold cursor-pointer`}>{this.props.periods.selected_period !== null ? <><BsCaretRightFill className=\"mr-3\" />{this.props.periods.selected_period.application_session_name}</> : \"Choose period\"}</span></div>\n                </div>\n              </div>\n            </div>\n          </div>\n          {this.state.loadingErr !== \"\" &&\n          <div className=\"bg-yellow-100 text-yellow-700 font-extrabold text-2xl mx-4 px-3 py-3 rounded\">{this.state.loadingErr}</div>} \n          <div className=\"mb-2\">\n            <div className=\"grid grid-cols-12 gap-3\">\n              <div className=\"col-span-12\">\n                <div className={`grid md:grid-cols-1 lg:grid-cols-1 gap-2`}>\n                  <div className=\"ml-2 -my-2 md:hidden lg:hidden xl:hidden\">\n                    {this.props.positions.positions_list === null ? <div className=\"btn bg-gray-500 text-white mb-4 w-full flex flex-row items-center gap-3 animate__animated animate__zoomIn justify-center\">\n                      <RiFileForbidLine className=\"text-2xl text-white\" /> Please wait...\n                    </div> :\n                    this.props.positions.positions_list.length > 0 ?\n                    <Link to=\"/apply\">\n                      <div className=\"btn btn-blue text-white mb-4 w-full flex flex-row items-center gap-3 animate__animated animate__zoomIn justify-center\">\n                        <MdAdd className=\"text-2xl text-white\" /> Create application\n                      </div>\n                    </Link> : \n                    <div className=\"btn bg-gray-400 text-white mb-4 w-full flex flex-row items-center gap-3 animate__animated animate__zoomIn justify-center\">\n                      <RiFileForbidLine className=\"text-2xl text-white\" /> No vacancies!\n                    </div>}\n                  </div>\n                  {this.state.applications === null ? <LoadingV2 type={LoadingType.dark} /> :\n                  this.filteredApplications(this.state.applications, this.state.selectedApplicationStatus, this.props.periods.selected_period).length === 0 ? \n                  <div className=\"ml-2\">\n                  <NoResult \n                  theme={NoResultThemes.Dark} \n                  value=\"No Applications found!\" \n                  component={<div className=\"ml-2 -my-2 hidden md:block\">\n                    {this.props.positions.positions_list !== null && this.props.positions.positions_list.length > 0 && this.props.periods.applicationPeriods && this.props.periods.applicationPeriods.filter(itm => itm.is_active === true).length !== 0 &&\n                    <Link to=\"/apply\">\n                      <div className=\"text-blue-600 font-bold underline mb-2 hover:text-blue-800 animate__animated animate__zoomIn\">\n                        Click here to create new application\n                      </div>\n                    </Link>}\n                  </div>} \n                  /></div> :\n                  this.filteredApplications(this.state.applications, this.state.selectedApplicationStatus, this.props.periods.selected_period).map((item, i) => (\n                    <div \n                      onClick={() => { \n                        this.setState({ selectedPosition: item.position, selected_application: item.application_id }); \n                        this.setState({ selectedExams: item.exams });\n                        this.setState({ displayDetailsModal: true });\n                      }} \n                      className={`bg-white rounded-md \n                      ${this.state.selectedPosition?.position_id === item.position.position_id ? \"border-2 border-blue-600 shadow\" : \n                      item.application_status === ApplicationStates.Initiated ? \"border-gray-200 bg-gray-50 px-3 py-3 hover:border-gray-500\" : \n                      item.application_status === ApplicationStates.Rejected ? \"px-3 py-3 bg-white border-white\" : \n                      item.application_status === ApplicationStates.Shortlisted ? \"border-gray-200 bg-white px-3 py-3 hover:border-blue-600\" : \n                      \"px-3 py-3 bg-white border-yellow-600 hover:border-yellow-500\"} flex flex-col cursor-pointer font-normal hover:font-bold border-2 ml-2`}>\n                      <div className={`grid md:grid-cols-12 ${this.state.selectedPosition?.position_id === item.position.position_id ? \"bg-gray-100 pr-3 rounded-t py-2\" : \"bg-white\"}`}>\n                        <div className=\"col-span-1 flex items-center justify-center\">\n                          {item.application_status === ApplicationStates.Initiated ?\n                          <IoBriefcaseOutline className=\"text-5xl text-gray-600\" /> :\n                          item.application_status === ApplicationStates.Rejected ?\n                          <IoBriefcase className=\"text-5xl text-yellow-900\" /> :\n                          item.application_status === ApplicationStates.Shortlisted ?\n                          <IoBriefcaseOutline className=\"text-5xl text-blue-600\" /> :\n                          <IoBriefcase className=\"text-5xl text-yellow-700\" />}\n                        </div>\n                        <div className=\"col-span-7\">\n                          <span className={`font-extrabold ${item.application_status !== ApplicationStates.Initiated ? item.application_status === ApplicationStates.Rejected ? \"text-yellow-900\" : item.application_status === ApplicationStates.Shortlisted ? \"text-blue-600\" : \"text-yellow-700\" : \"text-blue-600\"}`}>{item.position.position_title}</span>\n                          <div className=\"flex flex-col text-xs text-gray-600 mt-3\">\n                            <div className=\"flex flex-row gap-2\">\n                              <span className={`${item.application_status !== ApplicationStates.Initiated ? item.application_status === ApplicationStates.Rejected ? \"text-yellow-900\" : item.application_status === ApplicationStates.Shortlisted ? \"text-blue-600\" : \"text-yellow-700\" : \"text-gray-500\"}`}>Date:</span>\n                              <span className={`${item.application_status !== ApplicationStates.Initiated ? item.application_status === ApplicationStates.Rejected ? \"text-yellow-900\" : item.application_status === ApplicationStates.Shortlisted ? \"text-blue-600\" : \"text-yellow-700\" : \"text-black\"} font-bold`}>{DATE(item.createdAt, \"DD/MM/YYYY\")}</span>\n                            </div>\n                            <div className=\"flex flex-row gap-2\">\n                              <span className={`${item.application_status !== ApplicationStates.Initiated ? item.application_status === ApplicationStates.Rejected ? \"text-yellow-900\" : item.application_status === ApplicationStates.Shortlisted ? \"text-blue-600\" : \"text-yellow-700\" : \"text-gray-500\"}`}>Application period:</span>\n                              <span className={`${item.application_status !== ApplicationStates.Initiated ? item.application_status === ApplicationStates.Rejected ? \"text-yellow-900\" : item.application_status === ApplicationStates.Shortlisted ? \"text-blue-600\" : \"text-yellow-700\" : \"text-black\"} font-bold`}>{item.application_session && item.application_session.application_session_name} - {item.application_session && item.application_session.period}</span>\n                            </div>\n                          </div>\n                        </div>\n                        <div className=\"col-span-4 flex md:justify-end items-center\">\n                          <div className=\"flex flex-col float-left text-sm md:justify-end\">\n                            <span className={`${item.application_status === ApplicationStates.Rejected ? \"text-yellow-700\" : \"text-gray-500\"} md:text-right`}>Status</span>\n                            {item.application_status === ApplicationStates.Initiated ? \n                            <span className={`font-bold ${this.state.selectedPosition?.position_id === item.position.position_id ? \"bg-gray-600 text-gray-100 border border-gray-500 rounded-full\" : \"bg-gray-50 text-gray-800 rounded\"} px-3 py-1`}>{ApplicationStatesDescription.find(itm => itm.key === item.application_status)?.caption }</span>:\n                            item.application_status === ApplicationStates.Rejected ? \n                            <span className={`font-bold ${this.state.selectedPosition?.position_id === item.position.position_id ? \"bg-yellow-900 text-yellow-100 border border-yellow-700 rounded-full\" : \"bg-yellow-100 text-yellow-900 rounded\"} px-3 py-1`}>{ApplicationStatesDescription.find(itm => itm.key === item.application_status)?.caption }</span> :\n                            item.application_status === ApplicationStates.Shortlisted ? \n                            <span className={`font-bold ${this.state.selectedPosition?.position_id === item.position.position_id ? \"bg-blue-900 text-blue-100 border border-blue-700 rounded-full\" : \"bg-blue-100 text-blue-900 rounded\"} px-3 py-1`}>{ApplicationStatesDescription.find(itm => itm.key === item.application_status)?.caption }</span> :\n                            <span className={`font-bold ${this.state.selectedPosition?.position_id === item.position.position_id ? \"bg-yellow-600 text-yellow-100 border border-yellow-500 rounded-full\" : \"bg-yellow-100 text-yellow-700 rounded\"} px-3 py-1`}>{ApplicationStatesDescription.find(itm => itm.key === item.application_status)?.caption }</span>\n                            }\n                          </div>\n                        </div>\n                      </div>\n                      \n                    </div>\n                  ))}\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n        </>}\n        \n        {this.state.showPeriodFilter === true &&\n        <Modal\n          title={<div className=\"text-2xl\">Filter by period</div>}\n          backDrop={true}\n          theme={Themes.default}\n          close={() => this.setState({ showPeriodFilter: false })}\n          backDropClose={true}\n          widthSizeClass={ModalSize.extraLarge}\n          displayClose={true}\n          padding={{title: true, body: true}} >\n            <ApplicationPeriods \n              applicationPeriods={this.props.periods.applicationPeriods} \n              setSelectedPeriod={this.props.setSelectedPeriod} \n              showPeriodFilter={this.setShowFilterStatus}\n            />\n        </Modal>}\n      </Fragment>\n    )\n  }\n}\n\nconst mapStateToProps = ({\n  auth,\n  application,\n  periods,\n  system,\n  positions,\n}: StoreState): { auth: Auth; application: applicationStoreInterface, periods: applicationPeriodsStoreInterface; system: System; positions: positionsStoreInterface, } => {\n  return { auth: auth, application: application, periods, system: system, positions: positions, };\n};\n\nexport const ApplicationsDashboard = connect(mapStateToProps, {\n  initiateApplication,\n  removeLocation,\n  loadApplicationPeriods,\n  setSelectedPeriod,\n  PushPopupAlert,\n  loadAllPositions,\n  FC_Access,\n})(_ApplicationsDashboard);"],"sourceRoot":""}
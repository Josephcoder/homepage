{"version":3,"sources":["actions/session.ts","actions/settings.ts","containers/MarksPublication/MarksPublication.tsx","containers/MarksPublication/ChoosePosition.tsx","containers/MarksPublication/MarksPublicationForm.tsx","actions/marks_publication.ts","containers/MarksPublication/WithMarks.tsx"],"names":["GetPlansTypes","callback","dispatch","a","setAxiosToken","axios","get","API","CLAIMING","res","console","log","GET_PLANS_TYPES","data","plan_types","status","length","type","ActionTypes","payload","error","errorToText","setSelectedPlanType","thisType","SELECT_PLAN_TYPE","getActiveSessionPlan","GET_ACTIVE_SESSION_PLANS","session_plan","undefined","is_active","GetAllSessionPlans","GET_ALL_SESSION_PLANS","session_data","createSessionPlan","CREATE_SESSION_PLAN","updateSessionPlan","UPDATE_SESSION_PLAN","sessionActivation","SESSION_ACTIVATION","deleteSessionPlan","DELETE_SESSION_PLAN","getSystemSettings","AUTH","GET_SYSTEM_SETTINGS","code_error","disableSystemSetting","DISABLE_SYSTEM_SETTINGS","getApplicationSessions","APPLICATION","GET_APPLICATION_SESSIONS","getPositions","GET_POSTIONS","deletePosition","DELETE_POSITION","publishPosition","PUBLISH_POSITION","pageTabs","ChoosePosition","props","setCustomMarks","thisPosition","value","currentSelectedList","customMarks","index","findIndex","item","id","marks","Number","push","getMarkByPosition","find","setSearchInput","setState","searchInput","state","className","placeholder","onChange","e","target","this","disabled","positionList","onClick","setChoosePosition","searchData","map","element","position_title","min","max","position_id","defaultMarks","Component","MarksPublicationForm","choosePosition","setFormError","formError","changeDefaultMarks","window","confirm","setInputMarks","cleanBeforeClose","modalAction","setInputComment","setModalAction","handleSubmit","preventDefault","msg","isEmptyOrSpaces","inputComment","positionWithMarks","forEach","positionItem","thisCustomMarks","position","comment","inputMarks","requestData","session","sessions","session_plan_id","doneby","auth","user","user_id","created_date","moment","toDate","format","toString","publication_position_marks","setLoadingRequest","post","createMarksPublication","PushPopupAlert","title","theme","PopupAlertTheme","success","danger","searchPosition","onSubmit","method","capitalizeFirstLetter","session_plan_name","marksArray","loadingRequest","cols","rows","style","resize","connect","CREATE_MARKS_PUBLICATION","WithMarks","styelingController","sectionStyles","btnStyles","isPublished","section","button","getNeededData","allPosition","allMarks","result","marksBySession","marksByPosition","province_id","province_name","courses","description","school_level_id","education_institute_id","requirements","isDeleted","marksPublication","i","setThisPosition","isUpdateOn","defaultChanged","NoResult","NoResultThemes","Dark","update","n","setLoading","loading","setThisTab","tab","thisTabs","positionId","setPositionId","loadPositions","systemPositions","componentDidMount","getMarksPublication","FC_neededPositions","withMarks","withoutMarks","publishedPosition","filter","isMarkPublished","thisPublishedMarks","publication_status","isUpdateAllowed","handleUpdate","info","thisSession","_id","publication_id","createdAt","updatedAt","put","updateMarksPublication","handlePublishMarks","MarksPublication","sessionPlan","system_settings","activeSessionPlan","responseData","GetMarksPublication","GET_MARKS_PUBLICATION","UPDATE_MARKS_PUBLICATION"],"mappings":"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","file":"static/js/49.53e0da63.chunk.js","sourcesContent":["import axios from \"axios\";\nimport { Dispatch } from \"redux\";\nimport { ActionTypes } from \"./types\";\nimport { API } from \"../utils/api\";\nimport { setAxiosToken } from \"../utils/AxiosToken\";\nimport { errorToText } from \"../utils/errors\";\nimport { PlansTypeInterface, SessionPlanInterface } from \"../interfaces\";\n\n/**\n * * ****************************** INTERFACES *****************************\n */\n\n// GET ACTIVE PLAN TYPES\nexport interface GetPlansTypesAction {\n  type: ActionTypes.GET_PLANS_TYPES;\n  payload: PlansTypeInterface[];\n}\n\n// GET INACTIVE PLAN TYPES\nexport interface GetDeletedPlansTypesAction {\n  type: ActionTypes.GET_DELETED_PLANS_TYPES;\n  payload: PlansTypeInterface[];\n}\n\n// CREATE PLAN TYPE\nexport interface CreatePlansTypeAction {\n  type: ActionTypes.CREATE_PLAN_TYPE;\n  payload: PlansTypeInterface;\n}\n\n// UPDATE PLAN TYPE\nexport interface UpdatePlansTypeAction {\n  type: ActionTypes.UPDATE_PLAN_TYPE;\n  payload: PlansTypeInterface;\n}\n\n// DELETE PLAN TYPE\nexport interface DeletePlansTypeAction {\n  type: ActionTypes.DELETE_PLAN_TYPE;\n  payload: PlansTypeInterface;\n}\n\n// SET PLAN TYPE =====================================\nexport interface setSelectedPlanTypeActions {\n  type: ActionTypes.SELECT_PLAN_TYPE;\n  payload: PlansTypeInterface | \"all\";\n}\n\n// GET ALL SESSION PLAN\nexport interface GetAllSessionPlansAction {\n  type: ActionTypes.GET_ALL_SESSION_PLANS;\n  payload: SessionPlanInterface[];\n}\n\n// GET ACTIVE SESSION PLAN\nexport interface GetActiveSessionPlanAction {\n  type: ActionTypes.GET_ACTIVE_SESSION_PLANS;\n  payload: SessionPlanInterface | \"none\";\n}\n\n// CREATE SESSION PLAN\nexport interface CreateSessionPlansAction {\n  type: ActionTypes.CREATE_SESSION_PLAN;\n  payload: SessionPlanInterface;\n}\n\n// UPDATE SESSION PLAN\nexport interface UpdateSessionPlansAction {\n  type: ActionTypes.UPDATE_SESSION_PLAN;\n  payload: SessionPlanInterface;\n}\n\n// ACTIVATE SESSION PLAN\nexport interface ActivateSessionPlansAction {\n  type: ActionTypes.SESSION_ACTIVATION;\n  payload: SessionPlanInterface;\n}\n\n// DELETE SESSION PLAN\nexport interface DeleteSessionPlanAction {\n  type: ActionTypes.DELETE_SESSION_PLAN;\n  payload: string;\n}\n\nexport type SessionActionType =\n  | GetPlansTypesAction\n  | GetDeletedPlansTypesAction\n  | CreatePlansTypeAction\n  | UpdatePlansTypeAction\n  | DeletePlansTypeAction\n  | GetAllSessionPlansAction\n  | GetActiveSessionPlanAction\n  | CreateSessionPlansAction\n  | UpdateSessionPlansAction\n  | ActivateSessionPlansAction\n  | DeleteSessionPlanAction\n  | setSelectedPlanTypeActions;\n\n/**\n * * ****************************** ACTIONS *****************************\n */\n\n// GET ACTIVE PLAN TYPES ==========================\nexport const GetPlansTypes = (callback: Function) => {\n  callback(true, \"\");\n  return async (dispatch: Dispatch) => {\n    try {\n      setAxiosToken();\n      const res = await axios.get<PlansTypeInterface[]>(\n        `${API.CLAIMING}/session-type`\n      );\n      console.log({ GET_PLANS_TYPES: res.data });\n      let plan_types: PlansTypeInterface[] = [];\n      if (res.status === 200) {\n        // setApplications(res.data);\n        if (res.data !== null && res.data.length > 0) {\n          plan_types = res.data;\n        }\n      }\n      dispatch<GetPlansTypesAction>({\n        type: ActionTypes.GET_PLANS_TYPES,\n        payload: plan_types,\n      });\n      callback(false, \"\");\n    } catch (error) {\n      console.error({ error: errorToText(error) });\n      callback(false, errorToText(error));\n    }\n  };\n};\n\n// GET ACTIVE PLAN TYPES ==========================\nexport const GetDeletedPlansTypes = (callback: Function) => {\n  callback(true, \"\");\n  return async (dispatch: Dispatch) => {\n    try {\n      setAxiosToken();\n      const res = await axios.get<PlansTypeInterface[]>(\n        `${API.CLAIMING}/session-type/deleted`\n      );\n      console.log({ GET_DELETED_PLANS_TYPES: res.data });\n      let plan_types: PlansTypeInterface[] = [];\n      if (res.status === 200) {\n        // setApplications(res.data);\n        if (res.data !== null && res.data.length > 0) {\n          plan_types = res.data;\n        }\n      }\n      dispatch<GetDeletedPlansTypesAction>({\n        type: ActionTypes.GET_DELETED_PLANS_TYPES,\n        payload: plan_types,\n      });\n      callback(false, \"\");\n    } catch (error) {\n      console.error({ error: errorToText(error) });\n      callback(false, errorToText(error));\n    }\n  };\n};\n\n// CREATE PLAN TYPE\nexport const createPlanType = (\n  data: PlansTypeInterface\n): CreatePlansTypeAction => {\n  return {\n    type: ActionTypes.CREATE_PLAN_TYPE,\n    payload: data,\n  };\n};\n\n// UPDATE PLAN TYPE\nexport const updatePlanType = (\n  data: PlansTypeInterface\n): UpdatePlansTypeAction => {\n  return {\n    type: ActionTypes.UPDATE_PLAN_TYPE,\n    payload: data,\n  };\n};\n\n// DELETE PLAN TYPE\nexport const deletePlanType = (\n  data: PlansTypeInterface\n): DeletePlansTypeAction => {\n  return {\n    type: ActionTypes.DELETE_PLAN_TYPE,\n    payload: data,\n  };\n};\n\n// SELECT PLAN TYPES ==========================\nexport const setSelectedPlanType = (\n  thisType: PlansTypeInterface | \"all\"\n): setSelectedPlanTypeActions => {\n  console.log({ thisType });\n  return {\n    type: ActionTypes.SELECT_PLAN_TYPE,\n    payload: thisType,\n  };\n};\n\n// GET ACTIVE PLAN TYPES ==========================\nexport const getActiveSessionPlan = (callback: Function) => {\n  callback(true, \"\");\n  return async (dispatch: Dispatch) => {\n    try {\n      setAxiosToken();\n      const res = await axios.get<SessionPlanInterface>(\n        `${API.CLAIMING}/session/active/`\n      );\n      console.log({ GET_ACTIVE_SESSION_PLANS: res.data });\n      let session_plan: SessionPlanInterface | undefined = undefined;\n      // if (res.status === 200) {\n      //   // setApplications(res.data);\n      // }\n      if (res.data && res.data.is_active !== undefined) {\n        session_plan = res.data;\n      }\n      console.log({ session_plan: res.data });\n\n      dispatch<GetActiveSessionPlanAction>({\n        type: ActionTypes.GET_ACTIVE_SESSION_PLANS,\n        payload: session_plan ? session_plan : \"none\",\n      });\n      callback(false, \"\", session_plan ? session_plan : \"none\");\n    } catch (error) {\n      console.error({ error: errorToText(error) });\n      callback(false, errorToText(error));\n    }\n  };\n};\n\n// GET ALL PLAN TYPES ==========================\nexport const GetAllSessionPlans = (callback: Function) => {\n  callback(true, \"\");\n  return async (dispatch: Dispatch) => {\n    try {\n      setAxiosToken();\n      const res = await axios.get<SessionPlanInterface[]>(\n        `${API.CLAIMING}/session/`\n      );\n      console.log({ GET_ALL_SESSION_PLANS: res.data });\n      let session_data: SessionPlanInterface[] = [];\n      if (res.status === 200) {\n        // setApplications(res.data);\n        if (res.data !== null && res.data.length > 0) {\n          session_data = res.data;\n        }\n      }\n      dispatch<GetAllSessionPlansAction>({\n        type: ActionTypes.GET_ALL_SESSION_PLANS,\n        payload: session_data,\n      });\n      callback(false, \"\", session_data);\n    } catch (error) {\n      console.error({ error: errorToText(error) });\n      callback(false, errorToText(error));\n    }\n  };\n};\n\n// CREATE SESSION PLAN\nexport const createSessionPlan = (\n  data: SessionPlanInterface\n): CreateSessionPlansAction => {\n  return {\n    type: ActionTypes.CREATE_SESSION_PLAN,\n    payload: data,\n  };\n};\n\n// UPDATE SESSION PLAN\nexport const updateSessionPlan = (\n  data: SessionPlanInterface\n): UpdateSessionPlansAction => {\n  return {\n    type: ActionTypes.UPDATE_SESSION_PLAN,\n    payload: data,\n  };\n};\n\n// ACTIVATE SESSION PLAN\nexport const sessionActivation = (\n  data: SessionPlanInterface\n): ActivateSessionPlansAction => {\n  return {\n    type: ActionTypes.SESSION_ACTIVATION,\n    payload: data,\n  };\n};\n\n// DELETE SESSION PLAN\nexport const deleteSessionPlan = (data: string): DeleteSessionPlanAction => {\n  return {\n    type: ActionTypes.DELETE_SESSION_PLAN,\n    payload: data,\n  };\n};\n","import axios from \"axios\";\nimport { Dispatch } from \"redux\";\nimport { ActionTypes } from \"./types\";\nimport {\n  ApplicationSessionInterface,\n  SystemSettingsInterface,\n} from \"../shared/interfaces\";\nimport { API } from \"../utils/api\";\nimport { setAxiosToken } from \"../utils/AxiosToken\";\nimport { errorToText } from \"../utils/errors\";\nimport { PositionAPI } from \"../interfaces/position\";\n\n/**\n * * ****************************** INTERFACES *****************************\n */\n\n// SYSTEM SETTINGS  ==============\nexport interface GetSystemSettingsAction {\n  type: ActionTypes.GET_SYSTEM_SETTINGS;\n  payload: SystemSettingsInterface[];\n}\n\nexport interface DisableSystemSettingsAction {\n  type: ActionTypes.DISABLE_SYSTEM_SETTINGS;\n  payload: {\n    system_setting_id: string;\n    status: \"enabled\" | \"disabled\";\n  };\n}\n\n// APPLICATION SETTINGS ===================================\nexport interface GetApplicationSessionAction {\n  type: ActionTypes.GET_APPLICATION_SESSIONS;\n  payload: ApplicationSessionInterface[];\n}\n\nexport interface CreateApplicationSessionAction {\n  type: ActionTypes.CREATE_APPLICATION_SESSIONS;\n  payload: ApplicationSessionInterface;\n}\n\nexport interface UpdateApplicationSessionAction {\n  type: ActionTypes.UPDATE_APPLICATION_SESSIONS;\n  payload: ApplicationSessionInterface;\n}\n\nexport interface DisableApplicationSessionAction {\n  type: ActionTypes.DISABLE_APPLICATION_SESSION;\n  payload: {\n    application_session_id: string;\n    status: boolean;\n  };\n}\n\n// POSITIONS SETTINGS ===================================\nexport interface PositionCreateInterface {\n  position_id?: string;\n  position_title: string;\n  description: string;\n  school_level_id: string;\n  education_institute_id: string;\n  courses: string[];\n  requirements: {\n    user_detail_category_id: string;\n    user_detail_subcategory_id: string;\n    position_requirement: {\n      category_subcategory_data_id: string;\n      required: boolean;\n    }[];\n    required: boolean;\n  }[];\n}\nexport interface GetPositionsAction {\n  type: ActionTypes.GET_POSTIONS;\n  payload: PositionAPI[];\n}\n\nexport interface CreatePositionsAction {\n  type: ActionTypes.CREATE_POSITION;\n  payload: PositionCreateInterface;\n}\n\nexport interface UpdatePositionsAction {\n  type: ActionTypes.UPDATE_POSITION;\n  payload: PositionCreateInterface;\n}\n\nexport interface DeletePositionAction {\n  type: ActionTypes.DELETE_POSITION;\n  payload: string;\n}\n\nexport interface PublishPositionAction {\n  type: ActionTypes.PUBLISH_POSITION;\n  payload: {\n    position_id: string;\n    status: boolean;\n  };\n}\n\nexport type SystemActionType =\n  | GetSystemSettingsAction\n  | DisableSystemSettingsAction\n  | GetApplicationSessionAction\n  | CreateApplicationSessionAction\n  | UpdateApplicationSessionAction\n  | DisableApplicationSessionAction\n  | GetPositionsAction\n  | CreatePositionsAction\n  | UpdatePositionsAction\n  | DeletePositionAction\n  | PublishPositionAction;\n\n/**\n * * ****************************** ACTIONS *****************************\n */\n\nexport const getSystemSettings = (callback: Function) => {\n  return async (dispatch: Dispatch) => {\n    callback(true, \"\");\n    try {\n      setAxiosToken();\n      const res = await axios.get<SystemSettingsInterface[]>(\n        `${API.AUTH}/settings`\n      );\n      dispatch<GetSystemSettingsAction>({\n        type: ActionTypes.GET_SYSTEM_SETTINGS,\n        payload: res.data,\n      });\n      callback(false, \"\");\n    } catch (error) {\n      console.log({ code_error: error });\n      callback(false, errorToText(error));\n    }\n  };\n};\n\nexport const disableSystemSetting = (data: {\n  system_setting_id: string;\n  status: \"enabled\" | \"disabled\";\n}) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<DisableSystemSettingsAction>({\n      type: ActionTypes.DISABLE_SYSTEM_SETTINGS,\n      payload: data,\n    });\n  };\n};\n\n// ============================ PERIODS =======================\n\nexport const getApplicationSessions = (callback: Function) => {\n  return async (dispatch: Dispatch) => {\n    callback(true, \"\");\n    try {\n      setAxiosToken();\n      const res = await axios.get<ApplicationSessionInterface[]>(\n        `${API.APPLICATION}/applicationsesion`\n      );\n      dispatch<GetApplicationSessionAction>({\n        type: ActionTypes.GET_APPLICATION_SESSIONS,\n        payload: res.data,\n      });\n      callback(false, \"\");\n    } catch (error) {\n      console.log({ code_error: error });\n      callback(false, errorToText(error));\n    }\n  };\n};\n\nexport const createAplicationSession = (data: ApplicationSessionInterface) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<CreateApplicationSessionAction>({\n      type: ActionTypes.CREATE_APPLICATION_SESSIONS,\n      payload: data,\n    });\n  };\n};\n\nexport const updateAplicationSession = (data: ApplicationSessionInterface) => {\n  console.log({ check: data });\n  return async (dispatch: Dispatch) => {\n    dispatch<UpdateApplicationSessionAction>({\n      type: ActionTypes.UPDATE_APPLICATION_SESSIONS,\n      payload: data,\n    });\n  };\n};\n\nexport const disableApplicationSession = (data: {\n  application_session_id: string;\n  status: boolean;\n}) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<DisableApplicationSessionAction>({\n      type: ActionTypes.DISABLE_APPLICATION_SESSION,\n      payload: data,\n    });\n  };\n};\n\nexport const getPositions = (callback: Function) => {\n  return async (dispatch: Dispatch) => {\n    callback(true, \"\");\n    try {\n      setAxiosToken();\n      const res = await axios.get<PositionAPI[]>(`${API.APPLICATION}/position`);\n      dispatch<GetPositionsAction>({\n        type: ActionTypes.GET_POSTIONS,\n        payload: res.data,\n      });\n      callback(false, \"\");\n    } catch (error) {\n      console.log({ code_error: error });\n      callback(false, errorToText(error));\n    }\n  };\n};\n\nexport const createPosition = (data: PositionCreateInterface) => {\n  console.log({ createPosition: data });\n  return async (dispatch: Dispatch) => {\n    dispatch<CreatePositionsAction>({\n      type: ActionTypes.CREATE_POSITION,\n      payload: data,\n    });\n  };\n};\n\nexport const updatePosition = (data: PositionCreateInterface) => {\n  console.log({ updatePosition: data });\n  return async (dispatch: Dispatch) => {\n    dispatch<UpdatePositionsAction>({\n      type: ActionTypes.UPDATE_POSITION,\n      payload: data,\n    });\n  };\n};\n\nexport const deletePosition = (data: string) => {\n  console.log({ deletePosition: data });\n  return async (dispatch: Dispatch) => {\n    dispatch<DeletePositionAction>({\n      type: ActionTypes.DELETE_POSITION,\n      payload: data,\n    });\n  };\n};\n\nexport const publishPosition = (data: {\n  position_id: string;\n  status: boolean;\n}) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<PublishPositionAction>({\n      type: ActionTypes.PUBLISH_POSITION,\n      payload: data,\n    });\n  };\n};\n","import axios from \"axios\";\nimport React, { Component } from \"react\";\nimport { MdArrowBack } from \"react-icons/md\";\nimport { RiFolderSettingsFill } from \"react-icons/ri\";\nimport { connect } from \"react-redux\";\nimport { Auth, PushPopupAlert } from \"../../actions\";\nimport {\n  getMarksPublication,\n  updateMarksPublication,\n} from \"../../actions/marks_publication\";\nimport { getActiveSessionPlan } from \"../../actions/session\";\nimport { getPositions } from \"../../actions/settings\";\nimport { PopupAlertData } from \"../../components/Alert/Popup\";\nimport { PositionAPI, SessionPlanInterface } from \"../../interfaces\";\nimport {\n  marksPublicationInterface,\n  publicationInterface,\n} from \"../../interfaces/marks_publication\";\nimport { PopupAlertTheme } from \"../../interfaces/popupAlert\";\nimport { StoreState } from \"../../reducers\";\nimport { API } from \"../../utils/api\";\nimport { errorToText } from \"../../utils/errors\";\nimport MarksPublicationForm from \"./MarksPublicationForm\";\nimport WithMarks from \"./WithMarks\";\n\nexport const marksArray = (update: boolean = false): (number | null)[] => {\n  let result: (number | null)[] = update ? [null] : [0],\n    n: number = 0;\n  while (n <= 100) {\n    result.push(n);\n    n++;\n  }\n  return result;\n};\n\nenum pageTabs {\n  withMarks = \"Published position(s)\",\n  withoutMarks = \"None published position\",\n}\n\ninterface MarksPublicationProps {\n  auth: Auth;\n  systemPositions: PositionAPI[] | null;\n  sessions: SessionPlanInterface | \"none\" | null;\n  marksPublication: marksPublicationInterface[] | null;\n  getActiveSessionPlan: Function;\n  getPositions: Function;\n  getMarksPublication: Function;\n  updateMarksPublication: Function;\n  PushPopupAlert: (alert: PopupAlertData) => void;\n}\n\ninterface MarksPublicationState {\n  loading: boolean;\n  loadingRequest: boolean;\n  modalAction: \"CREATE\" | \"UPDATE\" | false;\n  searchPosition: string;\n  thisTabs: pageTabs;\n  positionId: string[];\n  thisPosition: PositionAPI | null;\n  inputMarks: number;\n  inputComment: string;\n  customMarks: { id: string; marks: number }[];\n  defaultChanged: boolean;\n}\n\nclass index extends Component<MarksPublicationProps, MarksPublicationState> {\n  constructor(props: MarksPublicationProps) {\n    super(props);\n\n    this.state = {\n      loading: true,\n      loadingRequest: false,\n      modalAction: false,\n      searchPosition: \"\",\n      thisTabs: pageTabs.withMarks,\n      positionId: [],\n      thisPosition: null,\n      inputMarks: 70,\n      inputComment: \"\",\n      customMarks: [],\n      defaultChanged: false,\n    };\n  }\n\n  setLoading = (status: boolean) => {\n    this.setState({ loading: status });\n  };\n\n  setLoadingRequest = (status: boolean) => {\n    this.setState({ loadingRequest: status });\n  };\n\n  setModalAction = (status: \"CREATE\" | \"UPDATE\" | false) => {\n    this.setState({ modalAction: status });\n  };\n\n  setThisTab = (tab: pageTabs) => {\n    if (tab !== this.state.thisTabs) {\n      this.setState({ thisTabs: tab, positionId: [], thisPosition: null });\n    }\n  };\n\n  setThisPosition = (value: PositionAPI | null) => {\n    this.setState({ thisPosition: value });\n  };\n\n  setPositionId = (value: string[]) => {\n    this.setState({\n      positionId: value,\n    });\n  };\n\n  setCustomMarks = (value: { id: string; marks: number }[]) => {\n    this.setState({\n      customMarks: value,\n    });\n  };\n\n  setInputMarks = (value: number) => {\n    this.setState({ inputMarks: value });\n  };\n\n  setInputComment = (value: string) => {\n    this.setState({ inputComment: value });\n  };\n\n  loadPositions = () => {\n    if (this.props.systemPositions === null) {\n      this.props.getPositions((status: boolean, msg: string) => {\n        this.setLoading(status);\n        console.log({ status: status, msg: msg });\n        if (!status && msg.length) {\n          this.props.PushPopupAlert({\n            title: msg,\n            theme: PopupAlertTheme.danger,\n          });\n        }\n      });\n    } else if (this.state.loading) {\n      this.setLoading(false);\n    }\n  };\n\n  componentDidMount = () => {\n    // SESSION CONTROLLER ========================================\n    if (this.props.sessions === null || this.props.sessions === \"none\") {\n      this.props.getActiveSessionPlan(\n        (status: boolean, msg: string, data: SessionPlanInterface | \"none\") => {\n          this.setLoading(status);\n          if (!status) {\n            if (msg.length) {\n              this.props.PushPopupAlert({\n                title: msg,\n                theme: PopupAlertTheme.danger,\n              });\n            }\n\n            if (data && data !== \"none\") {\n              this.loadPositions();\n            }\n          }\n        }\n      );\n    } else {\n      this.loadPositions();\n    }\n\n    if (this.props.marksPublication === null) {\n      this.props.getMarksPublication(\n        (status: boolean, msg: string, data?: marksPublicationInterface[]) => {\n          this.setLoading(status);\n          if (!status && msg.length > 0) {\n            this.props.PushPopupAlert({\n              title: msg,\n              theme: PopupAlertTheme.danger,\n            });\n          }\n\n          if (!status && data) {\n            console.log(\"====================================\");\n            console.log({ data });\n            console.log(\"====================================\");\n          }\n        }\n      );\n    }\n  };\n\n  FC_neededPositions = (\n    allPosition: PositionAPI[]\n  ): {\n    withoutMarks: PositionAPI[];\n    withMarks: PositionAPI[];\n  } => {\n    let result: {\n      withoutMarks: PositionAPI[];\n      withMarks: PositionAPI[];\n    } = { withMarks: [], withoutMarks: [] };\n    let publishedPosition: PositionAPI[] = allPosition.filter(\n      (item) => item.isPublished && !item.isDeleted\n    );\n\n    result.withoutMarks = publishedPosition;\n\n    return result;\n  };\n\n  isMarkPublished = (\n    marksPublication: marksPublicationInterface[],\n    session: SessionPlanInterface\n  ): boolean => {\n    if (marksPublication.length > 0) {\n      const thisPublishedMarks = marksPublication.find(\n        (item) => item.session === session.session_plan_id\n      );\n      if (\n        thisPublishedMarks &&\n        thisPublishedMarks.publication_status === \"PUBLISHED\"\n      ) {\n        return true;\n      }\n    }\n    return false;\n  };\n\n  isUpdateAllowed = (\n    marksPublication: marksPublicationInterface[],\n    session: SessionPlanInterface\n  ): boolean => {\n    if (marksPublication.length > 0) {\n      const thisPublishedMarks = marksPublication.find(\n        (item) => item.session === session.session_plan_id\n      );\n      if (thisPublishedMarks) {\n        return true;\n      }\n    }\n    return false;\n  };\n\n  changeDefaultMarks = (value: number) => {\n    if (this.state.customMarks.length > 0) {\n      if (\n        window.confirm(\n          \"Do you want the default pass mark to override the customized pass marks on some position\"\n        )\n      ) {\n        this.setCustomMarks([]);\n      }\n    }\n    this.setState({ defaultChanged: true });\n    this.setInputMarks(value);\n  };\n\n  handleUpdate = async () => {\n    if (this.props.sessions === null) {\n      return this.props.PushPopupAlert({\n        title: `Load session first!`,\n        theme: PopupAlertTheme.info,\n      });\n    }\n\n    if (this.props.sessions === \"none\") {\n      return this.props.PushPopupAlert({\n        title: `No active session available!`,\n        theme: PopupAlertTheme.info,\n      });\n    }\n\n    if (this.props.marksPublication === null) {\n      return this.props.PushPopupAlert({\n        title: `Load published pass marks first!`,\n        theme: PopupAlertTheme.info,\n      });\n    }\n\n    const thisSession = this.props.sessions;\n\n    const thisPublishedMarks = this.props.marksPublication.find(\n      (item) => item.session === thisSession.session_plan_id\n    );\n\n    if (!thisPublishedMarks) {\n      return this.props.PushPopupAlert({\n        title: `No pass marks publication available! Add pass marks instead!`,\n        theme: PopupAlertTheme.info,\n      });\n    }\n\n    if (this.state.customMarks.length <= 0 && !this.state.defaultChanged) {\n      return this.props.PushPopupAlert({\n        title: `No change have been done!`,\n        theme: PopupAlertTheme.info,\n      });\n    }\n\n    if (!window.confirm(`Are you sure you wanted to update`)) {\n      return;\n    }\n\n    let requestData: marksPublicationInterface,\n      positionWithMarks: publicationInterface[] = [];\n\n    thisPublishedMarks.publication_position_marks.forEach((positionItem) => {\n      if (this.state.customMarks.length > 0) {\n        const thisCustomMarks = this.state.customMarks.find(\n          (item) => item.id === positionItem.position\n        );\n        if (thisCustomMarks) {\n          positionWithMarks.push({\n            _id: positionItem._id,\n            position: thisCustomMarks.id,\n            marks: thisCustomMarks.marks,\n            comment: positionItem.comment,\n          });\n        } else {\n          if (this.state.defaultChanged) {\n            positionWithMarks.push({\n              _id: positionItem._id,\n              position: positionItem.position,\n              marks: this.state.inputMarks,\n              comment: positionItem.comment,\n            });\n          } else {\n            positionWithMarks.push({\n              _id: positionItem._id,\n              position: positionItem.position,\n              marks: positionItem.marks,\n              comment: positionItem.comment,\n            });\n          }\n        }\n      } else {\n        if (this.state.defaultChanged) {\n          positionWithMarks.push({\n            _id: positionItem._id,\n            position: positionItem.position,\n            marks: this.state.inputMarks,\n            comment: positionItem.comment,\n          });\n        } else {\n          positionWithMarks.push({\n            _id: positionItem._id,\n            position: positionItem.position,\n            marks: positionItem.marks,\n            comment: positionItem.comment,\n          });\n        }\n      }\n    });\n\n    requestData = {\n      session: thisPublishedMarks.session,\n      doneby: this.props.auth.user.user_id,\n      created_date: thisPublishedMarks.created_date,\n      publication_position_marks: positionWithMarks,\n      publication_id: thisPublishedMarks.publication_id,\n      publication_status: thisPublishedMarks.publication_status,\n      status: thisPublishedMarks.status,\n      createdAt: thisPublishedMarks.createdAt,\n      updatedAt: thisPublishedMarks.updatedAt,\n    };\n\n    console.log(\"====================================\");\n    console.log({ requestData });\n    console.log(\"====================================\");\n\n    this.setLoadingRequest(true);\n    try {\n      const res = await axios.put<marksPublicationInterface>(\n        `${API.CLAIMING}/publication/${thisPublishedMarks.publication_id}`,\n        requestData\n      );\n      if (res) {\n        console.log(\"====================================\");\n        console.log({ res });\n        console.log(\"====================================\");\n        // this.props.verifyDocument(api_redux);\n        this.props.updateMarksPublication(res.data);\n        this.props.PushPopupAlert({\n          title: `Pass mark updated successfully!`,\n          theme: PopupAlertTheme.success,\n        });\n      }\n      this.cleanBeforeClose();\n    } catch (error) {\n      console.error(error);\n      this.props.PushPopupAlert({\n        title: errorToText(error),\n        theme: PopupAlertTheme.danger,\n      });\n    }\n    this.setLoadingRequest(false);\n  };\n\n  handlePublishMarks = async () => {\n    if (this.props.sessions === null) {\n      return this.props.PushPopupAlert({\n        title: `Load session first!`,\n        theme: PopupAlertTheme.info,\n      });\n    }\n\n    if (this.props.sessions === \"none\") {\n      return this.props.PushPopupAlert({\n        title: `No active session available!`,\n        theme: PopupAlertTheme.info,\n      });\n    }\n\n    if (this.props.marksPublication === null) {\n      return this.props.PushPopupAlert({\n        title: `Load published pass marks first!`,\n        theme: PopupAlertTheme.info,\n      });\n    }\n\n    const thisSession = this.props.sessions;\n\n    const thisPublishedMarks = this.props.marksPublication.find(\n      (item) => item.session === thisSession.session_plan_id\n    );\n\n    if (!thisPublishedMarks) {\n      return this.props.PushPopupAlert({\n        title: `No pass marks publication available! Add pass marks instead!`,\n        theme: PopupAlertTheme.info,\n      });\n    }\n\n    if (!window.confirm(`Are you sure you wanted to publish marks`)) {\n      return;\n    }\n\n    console.log(\"====================================\");\n    console.log({ thisPublishedMarks: thisPublishedMarks.publication_id });\n    console.log(\"====================================\");\n\n    this.setLoadingRequest(true);\n    try {\n      const res = await axios.put<marksPublicationInterface>(\n        `${API.CLAIMING}/publication/publication/${thisPublishedMarks.publication_id}`\n      );\n      if (res) {\n        console.log(\"====================================\");\n        console.log({ res });\n        console.log(\"====================================\");\n        // this.props.verifyDocument(api_redux);\n        this.props.getMarksPublication((status: boolean, msg: string) => {\n          if (!status && msg.length > 0) {\n            this.props.PushPopupAlert({\n              title: msg,\n              theme: PopupAlertTheme.danger,\n            });\n          }\n        });\n        // this.props.updateMarksPublication(res.data);\n        this.props.PushPopupAlert({\n          title: `Pass mark published successfully!`,\n          theme: PopupAlertTheme.success,\n        });\n      }\n      this.cleanBeforeClose();\n    } catch (error) {\n      console.error(error);\n      this.props.PushPopupAlert({\n        title: errorToText(error),\n        theme: PopupAlertTheme.danger,\n      });\n    }\n    this.setLoadingRequest(false);\n  };\n\n  cleanBeforeClose = () => {\n    if (this.state.modalAction === \"UPDATE\") {\n      this.setInputMarks(70);\n      this.setInputComment(\"\");\n      this.setCustomMarks([]);\n      this.setModalAction(false);\n      this.setState({ defaultChanged: false });\n    }\n  };\n\n  render() {\n    if (\n      this.props.sessions === null ||\n      this.props.systemPositions === null ||\n      this.props.marksPublication === null ||\n      this.state.loading\n    ) {\n      return (\n        <div className=\"text-center mt-7 font-bold text-4xl text-gray-400 animate-pulse\">\n          Loading...\n        </div>\n      );\n    }\n\n    return (\n      <div>\n        <div className=\"mt-3 rounded flex flex-row justify-between items-center\">\n          <div className=\"flex flex-row items-center gap-3\">\n            <RiFolderSettingsFill className=\"text-6xl text-blue-600\" />\n            <div className=\"flex flex-col\">\n              <span className=\"text-blue-600 text-2xl font-bold\">\n                Marks publication\n              </span>\n              <div className=\"flex items-center gap-1\">\n                <span className=\"text-gray-600 text-base italic\">Session:</span>\n                <span className=\"text-gray-600 text-base font-bold\">\n                  {this.props.sessions &&\n                    this.props.sessions !== \"none\" &&\n                    this.props.sessions.session_plan_name}\n                </span>\n              </div>\n            </div>\n          </div>\n        </div>\n\n        {/* CONTENT BODY =============================== */}\n        <div className=\"mt-1 p-1 bg-white\">\n          {/* CONTENT BODY TITLE ========================== */}\n          <div\n            className={`flex flex-row items-center bg-gray-100 py-1 ${\n              this.props.sessions &&\n              this.props.sessions !== \"none\" &&\n              this.state.modalAction === \"CREATE\"\n                ? \"justify-between\"\n                : \"justify-end\"\n            }`}\n          >\n            {/* TABS CONTROLLER ============== */}\n            {this.props.sessions &&\n              this.props.sessions !== \"none\" &&\n              this.state.modalAction === \"CREATE\" && (\n                <button\n                  className={`ml-3 bg-gray-50 hover:bg-blue-100 rounded-full px-1 py-1 focus:outline-none ${\n                    this.state.loadingRequest\n                      ? \"cursor-not-allowed\"\n                      : \"cursor-pointer\"\n                  } animate__animated animate__fadeIn`}\n                  disabled={this.state.loadingRequest}\n                  onClick={() =>\n                    this.setState({\n                      modalAction: false,\n                      positionId: [],\n                      inputMarks: 70,\n                      inputComment: \"\",\n                    })\n                  }\n                >\n                  <MdArrowBack className=\"w-7 h-7\" />\n                </button>\n              )}\n            {/* END TABS CONTROLLER ============== */}\n\n            {/* ADD PASS MARKS PUBLICATION */}\n            {this.props.sessions &&\n              this.props.sessions !== \"none\" &&\n              this.state.modalAction === false &&\n              this.props.systemPositions.filter(\n                (item) => item.isPublished && !item.isDeleted\n              ).length > 0 &&\n              !this.isUpdateAllowed(\n                this.props.marksPublication,\n                this.props.sessions\n              ) && (\n                <div\n                  className=\"btn bg-blue-600 text-white cursor-pointer hover:bg-blue-800\"\n                  onClick={() => {\n                    this.setModalAction(\"CREATE\");\n                  }}\n                >\n                  Add pass marks\n                </div>\n              )}\n\n            {/* UPDATE PASS MARKS PUBLICATION */}\n            {this.props.sessions &&\n              this.props.sessions !== \"none\" &&\n              this.state.modalAction === false &&\n              this.props.systemPositions.filter(\n                (item) => item.isPublished && !item.isDeleted\n              ).length > 0 &&\n              this.isUpdateAllowed(\n                this.props.marksPublication,\n                this.props.sessions\n              ) &&\n              !this.isMarkPublished(\n                this.props.marksPublication,\n                this.props.sessions\n              ) && (\n                <div\n                  className=\"btn bg-blue-600 text-white cursor-pointer hover:bg-blue-800\"\n                  onClick={() => {\n                    this.setModalAction(\"UPDATE\");\n                    this.setInputMarks(-1);\n                  }}\n                >\n                  Update pass marks\n                </div>\n              )}\n\n            {/* PUBLISH MARKS PUBLICATION */}\n            {this.props.sessions &&\n              this.props.sessions !== \"none\" &&\n              this.state.modalAction === false &&\n              this.props.systemPositions.filter(\n                (item) => item.isPublished && !item.isDeleted\n              ).length > 0 &&\n              this.isUpdateAllowed(\n                this.props.marksPublication,\n                this.props.sessions\n              ) &&\n              !this.isMarkPublished(\n                this.props.marksPublication,\n                this.props.sessions\n              ) && (\n                <div\n                  className={`btn bg-gray-600 text-white ml-1 hover:bg-gray-800 ${\n                    this.state.loadingRequest ? \"cursor-wait\" : \"cursor-pointer\"\n                  }`}\n                  onClick={() =>\n                    !this.state.loadingRequest && this.handlePublishMarks()\n                  }\n                >\n                  Publish pass marks\n                </div>\n              )}\n\n            {this.props.sessions !== \"none\" &&\n              this.isMarkPublished(\n                this.props.marksPublication,\n                this.props.sessions\n              ) && (\n                <div className=\"px-3 py-1 text-1xl font-bold text-blue-500 border-4 border-blue-500 border-dotted\">\n                  Marks published\n                </div>\n              )}\n\n            {this.props.sessions &&\n              this.props.sessions !== \"none\" &&\n              this.state.modalAction === \"UPDATE\" &&\n              this.props.systemPositions.filter(\n                (item) => item.isPublished && !item.isDeleted\n              ).length > 0 &&\n              this.isUpdateAllowed(\n                this.props.marksPublication,\n                this.props.sessions\n              ) && (\n                <div className=\"flex items-center gap-1 animate__animated animate__fadeInRight animate__faster\">\n                  <div className=\"flex items-center gap-1\">\n                    <label className=\"w-full inline-block text-right\">\n                      Default pass marks\n                    </label>\n                    <select\n                      className=\"outline-none bg-white text-gray-700 text-base mr-1 py-2 px-2 border-2 border-gray-500 rounded\"\n                      value={this.state.inputMarks}\n                      onChange={(e) =>\n                        this.changeDefaultMarks(Number(e.target.value))\n                      }\n                    >\n                      {marksArray(true).map((item, index) => (\n                        <option\n                          value={item ? item : \"-1\"}\n                          key={index * (item ? item : -1)}\n                          disabled={item === null}\n                        >\n                          {item ? item : \"Select\"}\n                        </option>\n                      ))}\n                    </select>\n                  </div>\n                  <button\n                    className={`btn bg-primary text-white hover:bg-blue-600 focus:outline-none ${\n                      this.state.loadingRequest && \"cursor-wait\"\n                    }`}\n                    type=\"button\"\n                    onClick={() => this.handleUpdate()}\n                    disabled={this.state.loadingRequest}\n                  >\n                    {this.state.loadingRequest ? \"Loading...\" : \"Save\"}\n                  </button>\n                  <button\n                    className={`btn bg-red-500 text-white hover:bg-red-600 focus:outline-none ${\n                      this.state.loadingRequest && \"cursor-wait\"\n                    }`}\n                    type=\"button\"\n                    onClick={() => this.cleanBeforeClose()}\n                    disabled={this.state.loadingRequest}\n                  >\n                    Cancel\n                  </button>\n                </div>\n              )}\n          </div>\n          {/* END CONTENT BODY TITLE ========================== */}\n\n          {/* REAL BODY ============================= */}\n          <div className=\"=rounded mx-1 mb-2 mt-3\">\n            {this.state.thisTabs === pageTabs.withMarks &&\n              this.state.modalAction !== \"CREATE\" && (\n                <WithMarks\n                  positionList={this.props.systemPositions.filter(\n                    (item) => item.isPublished && !item.isDeleted\n                  )}\n                  marksPublication={this.props.marksPublication}\n                  sessions={this.props.sessions}\n                  thisPosition={this.state.thisPosition}\n                  loadingRequest={this.state.loadingRequest}\n                  isUpdateOn={this.state.modalAction === \"UPDATE\"}\n                  setThisPosition={this.setThisPosition}\n                  customMarks={this.state.customMarks}\n                  setCustomMarks={this.setCustomMarks}\n                  defaultChanged={this.state.defaultChanged}\n                  defaultMarks={this.state.inputMarks}\n                />\n              )}\n          </div>\n        </div>\n        {/* END CONTENT BODY =========================== */}\n\n        {/* modal controller ==================================== */}\n        {this.props.sessions &&\n          this.props.sessions !== \"none\" &&\n          this.state.modalAction === \"CREATE\" && (\n            <MarksPublicationForm\n              sessions={this.props.sessions}\n              positionList={\n                this.FC_neededPositions(this.props.systemPositions).withoutMarks\n              }\n              loadingRequest={this.state.loadingRequest}\n              inputMarks={this.state.inputMarks}\n              modalAction={this.state.modalAction}\n              setModalAction={this.setModalAction}\n              setInputMarks={this.setInputMarks}\n              inputComment={this.state.inputComment}\n              setInputComment={this.setInputComment}\n              setLoadingRequest={this.setLoadingRequest}\n              customMarks={this.state.customMarks}\n              setCustomMarks={this.setCustomMarks}\n            />\n          )}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = ({\n  auth,\n  sessionPlan,\n  marksPublication,\n  system_settings,\n}: StoreState): {\n  auth: Auth;\n  sessions: SessionPlanInterface | \"none\" | null;\n  marksPublication: marksPublicationInterface[] | null;\n  systemPositions: PositionAPI[] | null;\n} => {\n  return {\n    auth: auth,\n    systemPositions: system_settings.systemPositions,\n    marksPublication,\n    sessions: sessionPlan.activeSessionPlan,\n  };\n};\n\nexport const MarksPublication = connect(mapStateToProps, {\n  getPositions,\n  getActiveSessionPlan,\n  getMarksPublication,\n  updateMarksPublication,\n  PushPopupAlert,\n})(index);\n","import React, { Component } from \"react\";\nimport { MdSearch } from \"react-icons/md\";\nimport { PositionAPI } from \"../../interfaces\";\nimport searchData from \"../../utils/search\";\n\nexport const isPositionSelected = (\n  positionIds: string[],\n  thisPosition: string\n) => {\n  return positionIds.find((item) => item === thisPosition);\n};\n\ninterface ChoosePositionProps {\n  positionList: PositionAPI[];\n  setChoosePosition: (value: boolean) => void;\n  loadingRequest: boolean;\n  defaultMarks: number;\n  customMarks: { id: string; marks: number }[];\n  setCustomMarks: (\n    value: {\n      id: string;\n      marks: number;\n    }[]\n  ) => void;\n}\n\ninterface ChoosePositionState {\n  searchInput: string;\n}\n\nexport class ChoosePosition extends Component<\n  ChoosePositionProps,\n  ChoosePositionState\n> {\n  constructor(props: ChoosePositionProps) {\n    super(props);\n\n    this.state = {\n      searchInput: \"\",\n    };\n  }\n\n  setCustomMarks = (thisPosition: string, value: string) => {\n    let currentSelectedList: {\n      id: string;\n      marks: number;\n    }[] = [...this.props.customMarks];\n    let index = currentSelectedList.findIndex(\n      (item) => item.id === thisPosition\n    );\n    if (index >= 0) {\n      currentSelectedList[index].marks = Number(value);\n    } else {\n      currentSelectedList.push({ id: thisPosition, marks: Number(value) });\n    }\n    this.props.setCustomMarks(currentSelectedList);\n  };\n\n  getMarkByPosition = (thisPosition: string) => {\n    return this.props.customMarks.find((item) => item.id === thisPosition);\n  };\n\n  setSearchInput = (value: string) => {\n    this.setState({ searchInput: value });\n  };\n\n  render() {\n    return (\n      <section className={`rounded`}>\n        {/* SEARCH PART */}\n        <div className=\"flex items-center w-full my-1\">\n          <MdSearch className=\"w-6 h-6 absolute ml-2\" />\n          <input\n            type=\"text\"\n            placeholder=\"Search\"\n            className=\"focus:border-2 h-7 ml-1 pl-9 mr-2 bg-gray-100 border-gray-600 focus:border-gray-700 w-full rounded\"\n            onChange={(e) => this.setSearchInput(e.target.value)}\n            value={this.state.searchInput}\n            disabled={this.props.positionList.length > 0 ? false : true}\n          />\n          <div className=\"flex items-center w-auto justify-end gap-1\">\n            <button\n              className=\"bg-red-200 text-red-700 py-1 px-2 mr-1 rounded text-sm focus:outline-none\"\n              type=\"button\"\n              onClick={() => this.props.setChoosePosition(false)}\n            >\n              Close\n            </button>\n          </div>\n        </div>\n        {/* END SEARCH PART ///////////////// */}\n        <div\n          className={`w-full h-96 mt-2 divide-y divide-gray-300 overflow-y-auto`}\n        >\n          {searchData(this.props.positionList, this.state.searchInput).length >\n          0 ? (\n            searchData(this.props.positionList, this.state.searchInput).map(\n              (element, index) => (\n                <section key={index + element.position_id}>\n                  <div\n                    className={`group flex items-center justify-between my-1 hover:bg-gray-100`}\n                  >\n                    <div className=\"p-1 w-full mr-2\">\n                      <p className=\"text-base font-medium text-black\">\n                        {element.position_title}\n                      </p>\n                    </div>\n\n                    <input\n                      type=\"number\"\n                      min={0}\n                      max={100}\n                      value={\n                        this.getMarkByPosition(element.position_id)\n                          ? this.getMarkByPosition(element.position_id)!.marks\n                          : this.props.defaultMarks\n                      }\n                      onChange={(e) =>\n                        this.setCustomMarks(element.position_id, e.target.value)\n                      }\n                      className=\"rounded border-2 border-gray-500 focus:border-gray-700 focus:outline-none\"\n                    />\n                  </div>\n                </section>\n              )\n            )\n          ) : (\n            <div className=\"text-center p-3\">\n              <p className=\"text-base font-medium text-black\">\n                No position available\n              </p>\n            </div>\n          )}\n        </div>\n      </section>\n    );\n  }\n}\n\nexport default ChoosePosition;\n","import axios from \"axios\";\nimport moment from \"moment\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Auth, PushPopupAlert } from \"../../actions\";\nimport { createMarksPublication } from \"../../actions/marks_publication\";\nimport { PopupAlertData } from \"../../components/Alert/Popup\";\nimport { PositionAPI, SessionPlanInterface } from \"../../interfaces\";\nimport {\n  marksPublicationFormInterface,\n  marksPublicationInterface,\n  publicationFormInterface,\n} from \"../../interfaces/marks_publication\";\nimport { PopupAlertTheme } from \"../../interfaces/popupAlert\";\nimport { StoreState } from \"../../reducers\";\nimport { capitalizeFirstLetter, isEmptyOrSpaces } from \"../../shared/dataTest\";\nimport { API } from \"../../utils/api\";\nimport { errorToText } from \"../../utils/errors\";\nimport ChoosePosition from \"./ChoosePosition\";\nimport { marksArray } from \"./MarksPublication\";\n\ninterface MarksPublicationFormProps {\n  sessions: SessionPlanInterface;\n  positionList: PositionAPI[];\n  loadingRequest: boolean;\n  inputMarks: number;\n  inputComment: string;\n  customMarks: { id: string; marks: number }[];\n  setCustomMarks: (\n    value: {\n      id: string;\n      marks: number;\n    }[]\n  ) => void;\n  modalAction: false | \"CREATE\" | \"UPDATE\";\n  setModalAction: (status: \"CREATE\" | \"UPDATE\" | false) => void;\n  setInputMarks: (value: number) => void;\n  setInputComment: (value: string) => void;\n  setLoadingRequest: (status: boolean) => void;\n\n  //   REDUX ==========================\n  auth: Auth;\n  createMarksPublication: Function;\n  PushPopupAlert: (alert: PopupAlertData) => void;\n}\n\ninterface MarksPublicationFormState {\n  searchPosition: string;\n  formError: {\n    element: string;\n    msg: string;\n  } | null;\n  choosePosition: boolean;\n}\n\nclass MarksPublicationForm extends Component<\n  MarksPublicationFormProps,\n  MarksPublicationFormState\n> {\n  constructor(props: MarksPublicationFormProps) {\n    super(props);\n\n    this.state = {\n      searchPosition: \"\",\n      formError: null,\n      choosePosition: false,\n    };\n  }\n\n  setChoosePosition = (value: boolean) => {\n    this.setState({ choosePosition: value });\n  };\n\n  setFormError = (\n    value: {\n      element: string;\n      msg: string;\n    } | null\n  ) => {\n    this.setState({ formError: value });\n  };\n\n  changeDefaultMarks = (value: number) => {\n    if (this.props.customMarks.length > 0) {\n      if (\n        window.confirm(\n          \"Do you want the default pass mark to override the customized pass marks on some position\"\n        )\n      ) {\n        this.props.setCustomMarks([]);\n      }\n    }\n    this.props.setInputMarks(value);\n  };\n\n  cleanBeforeClose = () => {\n    if (this.props.modalAction === \"CREATE\") {\n      this.props.setInputMarks(70);\n      this.props.setInputComment(\"\");\n      this.props.setCustomMarks([]);\n      this.props.setModalAction(false);\n    }\n  };\n\n  handleSubmit = async (e: React.FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n    if (this.props.positionList.length <= 0) {\n      return this.setFormError({\n        element: \"position\",\n        msg: \"There is no published position available\",\n      });\n    }\n\n    if (isEmptyOrSpaces(this.props.inputComment)) {\n      return this.setFormError({\n        element: \"comment\",\n        msg: \"Comment is required\",\n      });\n    }\n\n    if (!window.confirm(`Are you sure you wanted to submit`)) {\n      return;\n    }\n\n    let requestData: marksPublicationFormInterface,\n      positionWithMarks: publicationFormInterface[] = [];\n\n    this.props.positionList.forEach((positionItem) => {\n      if (this.props.customMarks.length > 0) {\n        const thisCustomMarks = this.props.customMarks.find(\n          (item) => item.id === positionItem.position_id\n        );\n        if (thisCustomMarks) {\n          positionWithMarks.push({\n            position: thisCustomMarks.id,\n            marks: thisCustomMarks.marks,\n            comment: this.props.inputComment,\n          });\n        } else {\n          positionWithMarks.push({\n            position: positionItem.position_id,\n            marks: this.props.inputMarks,\n            comment: this.props.inputComment,\n          });\n        }\n      } else {\n        positionWithMarks.push({\n          position: positionItem.position_id,\n          marks: this.props.inputMarks,\n          comment: this.props.inputComment,\n        });\n      }\n    });\n\n    requestData = {\n      session: this.props.sessions.session_plan_id,\n      doneby: this.props.auth.user.user_id,\n      created_date: moment(moment().toDate()).format(\"YYYY-MM-DD\").toString(),\n      publication_position_marks: positionWithMarks,\n    };\n\n    console.log(\"====================================\");\n    console.log({ requestData });\n    console.log(\"====================================\");\n\n    this.props.setLoadingRequest(true);\n    try {\n      const res = await axios.post<marksPublicationInterface>(\n        `${API.CLAIMING}/publication`,\n        requestData\n      );\n      if (res) {\n        console.log(\"====================================\");\n        console.log({ res });\n        console.log(\"====================================\");\n        this.props.createMarksPublication(res.data);\n        this.props.PushPopupAlert({\n          title: `Mark published successfully!`,\n          theme: PopupAlertTheme.success,\n        });\n      }\n      this.cleanBeforeClose();\n    } catch (error) {\n      console.error(error);\n      this.props.PushPopupAlert({\n        title: errorToText(error),\n        theme: PopupAlertTheme.danger,\n      });\n    }\n    this.props.setLoadingRequest(false);\n  };\n\n  render() {\n    return (\n      <form\n        onSubmit={(e: React.FormEvent<HTMLFormElement>) => this.handleSubmit(e)}\n        method=\"post\"\n      >\n        <div className=\"pt-2 pb-4 w-full bg-gray-100 px-5 flex flex-col gap-2\">\n          <div className=\"flex flex-col\">\n            <label>Session</label>\n            <input\n              type=\"text\"\n              className={`text-left input-white w-full inline-block border-gray-500 border-2`}\n              placeholder=\"Sub Category Title\"\n              value={capitalizeFirstLetter(\n                this.props.sessions.session_plan_name\n              )}\n              disabled={true}\n            />\n          </div>\n          <div className=\"flex flex-col\">\n            <label>Default pass marks</label>\n            <select\n              className=\"outline-none bg-white text-gray-700 text-base mr-1 py-2 px-2 border-2 border-gray-500 rounded\"\n              value={this.props.inputMarks}\n              onChange={(e) => this.changeDefaultMarks(Number(e.target.value))}\n            >\n              {marksArray().map((item, index) => (\n                <option\n                  value={item ? item : \"-1\"}\n                  key={index * (item ? item : -1)}\n                >\n                  {item}\n                </option>\n              ))}\n            </select>\n          </div>\n          <div className=\"flex flex-col\">\n            <label>Customize pass marks by position</label>\n            <div\n              className={`text-left bg-white border-2 border-gray-500 rounded w-full ${\n                this.state.choosePosition ? \"h-auto\" : \"h-10\"\n              } ${\n                this.state.formError &&\n                this.state.formError.element === \"position\"\n                  ? \"border-red-500\"\n                  : \"\"\n              } border-2 ${\n                !this.props.loadingRequest\n                  ? \"cursor-pointer\"\n                  : \"cursor-not-allowed\"\n              }`}\n              title=\"Choose position\"\n              onClick={() => {\n                !this.state.choosePosition && this.setChoosePosition(true);\n                this.state.formError &&\n                  this.state.formError.element === \"position\" &&\n                  this.setFormError(null);\n              }}\n            >\n              {/* DISPLAYING FILTERED SELECTING FILE ============================ */}\n              {this.props.customMarks.length > 0 &&\n              !this.state.choosePosition ? (\n                <p className=\"my-1 mx-2 text-gray-700\">\n                  Some position has customized pass marks\n                </p>\n              ) : (\n                !this.state.choosePosition && (\n                  <p className=\"my-1 mx-2 text-gray-500\">\n                    Click to view position\n                  </p>\n                )\n              )}\n              {/* END DISPLAYING FILTERED SELECTING FILE ============================ */}\n\n              {/* LISTING OF REJECTED DOCUMENTS ============================ */}\n              {this.state.choosePosition && (\n                <ChoosePosition\n                  positionList={this.props.positionList}\n                  setChoosePosition={this.setChoosePosition}\n                  loadingRequest={this.props.loadingRequest}\n                  defaultMarks={this.props.inputMarks}\n                  customMarks={this.props.customMarks}\n                  setCustomMarks={this.props.setCustomMarks}\n                />\n              )}\n              {/* END LISTING OF REJECTED DOCUMENTS ============================ */}\n            </div>\n            {this.state.formError &&\n              this.state.formError.element === \"position\" && (\n                <span className=\"text-red-500\">{this.state.formError.msg}</span>\n              )}\n          </div>\n          <div className=\"flex flex-col\">\n            <label>Comment</label>\n            <textarea\n              placeholder={`Comment for pass mark`}\n              cols={50}\n              rows={3}\n              className={`border-2 ${\n                this.state.formError &&\n                this.state.formError.element === \"comment\"\n                  ? \"border-red-400\"\n                  : \"border-gray-500\"\n              } rounded px-3 py-1 w-full focus:outline-none`}\n              style={{ resize: \"none\" }}\n              value={this.props.inputComment}\n              onChange={(e) => {\n                this.props.setInputComment(e.target.value);\n                this.setFormError(null);\n              }}\n              disabled={this.props.loadingRequest}\n            ></textarea>\n            {this.state.formError &&\n              this.state.formError.element === \"comment\" && (\n                <p className=\"text-red-800\">{this.state.formError.msg}</p>\n              )}\n          </div>\n\n          <div className=\"pt-4 flex justify-between\">\n            <button\n              onClick={() => {\n                this.cleanBeforeClose();\n              }}\n              className={`btn bg-gray-400 text-white hover:bg-gray-600 focus:outline-none ${\n                this.props.loadingRequest && \"cursor-not-allowed\"\n              }`}\n              type=\"button\"\n              disabled={this.props.loadingRequest}\n            >\n              Exit\n            </button>\n            <div className=\"flex items-center gap-1\">\n              <div className=\"flex items-center gap-1\">\n                <label className=\"w-full inline-block text-right\">\n                  Pass marks\n                </label>\n                <select\n                  className=\"outline-none bg-white text-gray-700 text-base mr-1 py-2 px-2 border-2 border-gray-500 rounded\"\n                  value={this.props.inputMarks}\n                  onChange={(e) =>\n                    this.props.setInputMarks(Number(e.target.value))\n                  }\n                >\n                  {marksArray().map((item, index) => (\n                    <option\n                      value={item ? item : \"-1\"}\n                      key={index * (item ? item : -1)}\n                    >\n                      {item}\n                    </option>\n                  ))}\n                </select>\n              </div>\n              <button\n                className={`btn bg-primary text-white hover:bg-blue-600 focus:outline-none ${\n                  this.props.loadingRequest && \"cursor-wait\"\n                }`}\n                type=\"submit\"\n                disabled={this.props.loadingRequest}\n              >\n                {this.props.loadingRequest ? \"Loading...\" : \"Save\"}\n              </button>\n            </div>\n          </div>\n        </div>\n      </form>\n    );\n  }\n}\n\nconst mapStateToProps = ({\n  auth,\n}: StoreState): {\n  auth: Auth;\n} => {\n  return {\n    auth: auth,\n  };\n};\n\nexport default connect(mapStateToProps, {\n  createMarksPublication,\n  PushPopupAlert,\n})(MarksPublicationForm);\n","import axios from \"axios\";\nimport { Dispatch } from \"redux\";\nimport { ActionTypes } from \"./types\";\nimport { API } from \"../utils/api\";\nimport { setAxiosToken } from \"../utils/AxiosToken\";\nimport { errorToText } from \"../utils/errors\";\nimport { marksPublicationInterface } from \"../interfaces/marks_publication\";\n\n/**\n * * ****************************** INTERFACES *****************************\n */\n\n// MARKS PUBLICATION\nexport interface GetMarksPublicationAction {\n  type: ActionTypes.GET_MARKS_PUBLICATION;\n  payload: marksPublicationInterface[];\n}\n\n// CREATE PERSONAL CLAIM\nexport interface CreateMarksPublicationAction {\n  type: ActionTypes.CREATE_MARKS_PUBLICATION;\n  payload: marksPublicationInterface;\n}\n\n// UPDATE PERSONAL CLAIM\nexport interface UpdateMarksPublicationAction {\n  type: ActionTypes.UPDATE_MARKS_PUBLICATION;\n  payload: marksPublicationInterface;\n}\n\nexport type MarksPublicationActionType =\n  | GetMarksPublicationAction\n  | CreateMarksPublicationAction\n  | UpdateMarksPublicationAction;\n\n/**\n * * ****************************** ACTIONS *****************************\n */\n\n// GET MARKS PUBLICATION ==========================\nexport const getMarksPublication = (callback: Function) => {\n  callback(true, \"\");\n  return async (dispatch: Dispatch) => {\n    try {\n      setAxiosToken();\n      const res = await axios.get<marksPublicationInterface[]>(\n        `${API.CLAIMING}/publication`\n      );\n      let responseData: marksPublicationInterface[] = [];\n      if (res.status === 200) {\n        // setApplications(res.data);\n        if (res.data !== null && res.data.length > 0) {\n          responseData = res.data;\n        }\n      }\n      console.log(\"====================================\");\n      console.log({ GetMarksPublication: res.data });\n      console.log(\"====================================\");\n      dispatch<GetMarksPublicationAction>({\n        type: ActionTypes.GET_MARKS_PUBLICATION,\n        payload: responseData,\n      });\n      callback(false, \"\", responseData);\n    } catch (error) {\n      console.error({ error: errorToText(error) });\n      callback(false, errorToText(error));\n    }\n  };\n};\n\n// CREATE MARKS PUBLICATION ==========================\n// export const setSelectedClaimType = (\n//   thisType: PlansTypeKeys | \"all\"\n// ): setSelectedClaimTypeActions => {\n//   console.log({ thisType });\n//   return {\n//     type: ActionTypes.SELECT_CLAIM_TYPE,\n//     payload: thisType,\n//   };\n// };\n\n// CREATE PERSONAL CLAIM\nexport const createMarksPublication = (data: marksPublicationInterface) => {\n  return {\n    type: ActionTypes.CREATE_MARKS_PUBLICATION,\n    payload: data,\n  };\n};\n\n// CREATE MARKS PUBLICATION ==========================\n// export const setSelectedClaimType = (\n//   thisType: PlansTypeKeys | \"all\"\n// ): setSelectedClaimTypeActions => {\n//   console.log({ thisType });\n//   return {\n//     type: ActionTypes.SELECT_CLAIM_TYPE,\n//     payload: thisType,\n//   };\n// };\n\n// UPDATE PERSONAL CLAIM\nexport const updateMarksPublication = (data: marksPublicationInterface) => {\n  return {\n    type: ActionTypes.UPDATE_MARKS_PUBLICATION,\n    payload: data,\n  };\n};\n","import React, { Component } from \"react\";\nimport { HiOutlineDocumentSearch } from \"react-icons/hi\";\nimport { IoWarning } from \"react-icons/io5\";\nimport { connect } from \"react-redux\";\nimport { PushPopupAlert } from \"../../actions\";\nimport { PopupAlertData } from \"../../components/Alert/Popup\";\nimport NoResult, { NoResultThemes } from \"../../components/NoResult/NoResult\";\nimport {\n  PositionAPI,\n  PositionAPICourse,\n  PositionRequirements,\n  SessionPlanInterface,\n} from \"../../interfaces\";\nimport { marksPublicationInterface } from \"../../interfaces/marks_publication\";\nimport { PopupAlertTheme } from \"../../interfaces/popupAlert\";\nimport searchData from \"../../utils/search\";\n\nexport interface MarksPublicationPosition {\n  province_id: string;\n  province_name: string;\n  courses: PositionAPICourse[];\n  position_title: string;\n  description: string;\n  school_level_id: {\n    school_level_name: string;\n    description: string;\n    education_institute: string[];\n    courses: [];\n    school_level_id: string;\n  };\n  education_institute_id: {\n    education_category_title: string;\n    school_levels: [];\n    description: string;\n    education_institute_id: string;\n  };\n  requirements: PositionRequirements[];\n  isDeleted: boolean;\n  isPublished: boolean;\n  position_id: string;\n  marks: number;\n}\n\ntype WithMarksProps = {\n  positionList: PositionAPI[];\n  marksPublication: marksPublicationInterface[];\n  sessions: SessionPlanInterface | \"none\";\n  thisPosition: PositionAPI | null;\n  loadingRequest: boolean;\n  setThisPosition: (value: PositionAPI | null) => void;\n\n  // FOR UPDATING ==========================\n  defaultMarks: number;\n  defaultChanged: boolean;\n  customMarks: { id: string; marks: number }[];\n  setCustomMarks: (\n    value: {\n      id: string;\n      marks: number;\n    }[]\n  ) => void;\n  isUpdateOn: boolean;\n  PushPopupAlert: (alert: PopupAlertData) => void;\n};\n\ninterface WithMarksState {\n  searchInput: string;\n}\nexport class WithMarks extends Component<WithMarksProps, WithMarksState> {\n  constructor(props: WithMarksProps) {\n    super(props);\n\n    this.state = {\n      searchInput: \"\",\n    };\n  }\n\n  setSearchInput = (value: string) => {\n    this.setState({ searchInput: value });\n  };\n\n  styelingController = (\n    position: PositionAPI\n  ): { section: string; button: string } => {\n    let sectionStyles: string = \"\",\n      btnStyles: string = \"bg-blue-100 group-hover:bg-blue-50\";\n    if (this.props.thisPosition) {\n      if (this.props.thisPosition.position_id === position.position_id) {\n        if (this.props.thisPosition.isPublished) {\n          sectionStyles = \"bg-blue-100 border border-blue-500\";\n          btnStyles = \"bg-blue-100 group-hover:bg-blue-50\";\n        } else {\n          sectionStyles = \"bg-yellow-100 border border-yellow-500\";\n          btnStyles = \"bg-yellow-100 group-hover:bg-yellow-50\";\n        }\n      }\n    }\n    return { section: sectionStyles, button: btnStyles };\n  };\n\n  getNeededData = (\n    allPosition: PositionAPI[],\n    allMarks: marksPublicationInterface[],\n    sessions: SessionPlanInterface | \"none\"\n  ): MarksPublicationPosition[] => {\n    let result: MarksPublicationPosition[] = [];\n\n    allPosition.forEach((element) => {\n      let marksBySession =\n        sessions !== \"none\"\n          ? allMarks.find((item) => item.session === sessions.session_plan_id)\n          : undefined;\n      if (marksBySession) {\n        let marksByPosition = marksBySession.publication_position_marks.find(\n          (item) => item.position === element.position_id\n        );\n        if (marksByPosition) {\n          result.push({\n            province_id: element.province_id,\n            province_name: element.province_name,\n            courses: element.courses,\n            position_title: element.position_title,\n            description: element.description,\n            school_level_id: element.school_level_id,\n            education_institute_id: element.education_institute_id,\n            requirements: element.requirements,\n            isDeleted: element.isDeleted,\n            isPublished: element.isPublished,\n            position_id: element.position_id,\n            marks: marksByPosition.marks,\n          });\n        }\n      }\n    });\n\n    return result;\n  };\n\n  setCustomMarks = (thisPosition: string, value: string) => {\n    if (Number(value) < 0 || Number(value) > 100) {\n      return this.props.PushPopupAlert({\n        title: `Pass marks must be less or equal to 100 and greater or equal to 0`,\n        theme: PopupAlertTheme.danger,\n      });\n    }\n\n    let currentSelectedList: {\n      id: string;\n      marks: number;\n    }[] = [...this.props.customMarks];\n    let index = currentSelectedList.findIndex(\n      (item) => item.id === thisPosition\n    );\n\n    if (index >= 0) {\n      currentSelectedList[index].marks = Number(value);\n    } else {\n      currentSelectedList.push({ id: thisPosition, marks: Number(value) });\n    }\n\n    this.props.setCustomMarks(currentSelectedList);\n  };\n\n  getMarkByPosition = (thisPosition: string) => {\n    return this.props.customMarks.find((item) => item.id === thisPosition);\n  };\n\n  render() {\n    if (this.props.sessions === \"none\") {\n      return (\n        <div className=\"py-10 flex flex-col items-center rounded border border-gray-300 bg-white text-2xl font-medium text-yellow-800 animate__animated animate__pulse\">\n          <IoWarning className=\"w-32 h-32\" />\n          No Active session available!\n        </div>\n      );\n    }\n    return (\n      <div>\n        {this.props.positionList.length <= 0 && (\n          <div className=\"text-gray-400 px-6 py-4 rounded border mt-4 text-xl font-extrabold flex flex-col items-center justify-center bg-gray-100\">\n            <HiOutlineDocumentSearch className=\"text-7xl text-gray-400 animate__animated animate__shakeX\" />\n            <span>No position available</span>\n          </div>\n        )}\n\n        {this.props.positionList.length > 0 && (\n          <section className=\"flex flex-col-reverse sm:flex-row items-center gap-2 w-full my-2\">\n            <div className=\"w-full\">\n              <input\n                onChange={(e: React.ChangeEvent<HTMLInputElement>) =>\n                  this.setSearchInput(e.target.value)\n                }\n                type=\"text\"\n                className=\"input-white h-10 text-sm border-2 border-gray-400 focus:border-gray-500 w-full\"\n                placeholder={`Search position by title or description`}\n                value={this.state.searchInput}\n                disabled={\n                  this.getNeededData(\n                    this.props.positionList,\n                    this.props.marksPublication,\n                    this.props.sessions\n                  ).length > 0\n                    ? false\n                    : true\n                }\n              />\n            </div>\n          </section>\n        )}\n\n        {searchData(\n          this.getNeededData(\n            this.props.positionList,\n            this.props.marksPublication,\n            this.props.sessions\n          ),\n          this.state.searchInput\n        ).length > 0 ? (\n          searchData(\n            this.getNeededData(\n              this.props.positionList,\n              this.props.marksPublication,\n              this.props.sessions\n            ),\n            this.state.searchInput\n          ).map((item: MarksPublicationPosition, i: number) => (\n            <div\n              key={i + item.position_id}\n              className={`border hover:bg-blue-50`}\n            >\n              <div\n                className={`w-full flex flex-row px-3 py-2 rounded items-start my-1 justify-between group ${\n                  this.styelingController(item).section\n                }`}\n              >\n                <div\n                  className={`flex flex-col`}\n                  onClick={() => {\n                    !this.props.loadingRequest &&\n                    this.props.thisPosition &&\n                    this.props.thisPosition.position_id === item.position_id\n                      ? this.props.setThisPosition(null)\n                      : this.props.setThisPosition(item);\n                  }}\n                >\n                  <span className=\"text-gray-600 font-bold\">\n                    {item.position_title}\n                  </span>\n                  <span className={`text-xs pr-5 text-gray-500`}>\n                    {item.description}\n                  </span>\n                </div>\n                <div className=\"flex flex-row items-center gap-2\">\n                  {!this.props.isUpdateOn ? (\n                    <span className=\"text-gray-600 italic font-semibold\">\n                      {item.marks}%\n                    </span>\n                  ) : (\n                    <input\n                      type=\"number\"\n                      min={0}\n                      max={100}\n                      value={\n                        this.getMarkByPosition(item.position_id)\n                          ? this.getMarkByPosition(item.position_id)!.marks\n                          : this.props.defaultChanged\n                          ? this.props.defaultMarks\n                          : item.marks\n                      }\n                      onChange={(e) =>\n                        this.setCustomMarks(item.position_id, e.target.value)\n                      }\n                      className=\"rounded border-2 border-gray-500 focus:border-gray-700 focus:outline-none\"\n                    />\n                  )}\n                </div>\n              </div>\n            </div>\n          ))\n        ) : (\n          <NoResult theme={NoResultThemes.Dark} value={\"No position found\"} />\n        )}\n      </div>\n    );\n  }\n}\n\nexport default connect(null, { PushPopupAlert })(WithMarks);\n"],"sourceRoot":""}
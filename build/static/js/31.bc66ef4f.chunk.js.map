{"version":3,"sources":["components/Table/Table.tsx","components/Navigation/SideNavigation.tsx","actions/settings.ts","actions/location.ts","shared/interfaces.tsx","containers/Positions/ViewRequirements.tsx","actions/schools.ts","interfaces/marks_publication.ts","containers/Positions/ViewPosition.tsx","containers/district/Schools/index.tsx","containers/HeadTeacher/ReceivePost.tsx","containers/HeadTeacher/ViewRequest.tsx","containers/HeadTeacher/RequestList.tsx","containers/HeadTeacher/StepsHeader.tsx","containers/HeadTeacher/RequestPostForm.tsx","containers/HeadTeacher/RequestTeacher.tsx","containers/district/index.tsx"],"names":["Table","table","tr","rows","columns","hideColumns","pagination","search","tableSize","tableClass","tableId","rounded","searchBG","thColor","loading","length","result","characters","charactersLength","i","charAt","Math","floor","random","FC_makeID","useState","totalItems","setTotalItems","totalPages","setTotalPages","currentPage","setCurrentPage","pages","setPages","pageSize","setPageSize","startIndex","setStartIndex","endIndex","setEndIndex","useEffect","tablePagination","document","getElementById","getElementsByTagName","ceil","min","_pages","Array","from","keys","map","style","display","className","type","placeholder","onChange","e","data","filterType","filter","td","cols","toLowerCase","textContent","innerText","indexOf","filterTable","target","value","disabled","Number","id","column","index","padding","alignText","isSortAllowed","onClick","switching","x","y","shouldSwitch","colIndex","dir","switchcount","innerHTML","parentNode","insertBefore","sortThisColumn","columnTitle","aria-label","page","pageIndex","_SideNavigation","props","componentDidMount","PageHasSubNav","componentWillUnmount","state","this","auth","isAuthenticated","navActive","system","navigation","children","React","Component","SideNavigation","connect","NavToogle","MainItem","title","icon","MdBrightness1","active","count","IconDefined","SubItemContainer","SubItem","getSystemSettings","callback","dispatch","a","setAxiosToken","axios","get","API","AUTH","res","ActionTypes","GET_SYSTEM_SETTINGS","payload","console","log","code_error","errorToText","disableSystemSetting","DISABLE_SYSTEM_SETTINGS","getApplicationSessions","APPLICATION","GET_APPLICATION_SESSIONS","getPositions","GET_POSTIONS","deletePosition","DELETE_POSITION","publishPosition","PUBLISH_POSITION","getAllRoom","GET_ALL_ROOM","error","FC_CreateProvince","CREATE_PROVINCE","FC_UpdateProvince","UPDATE_PROVINCE","FC_DeleteProvince","DELETE_PROVINCE","FC_CreateDistrict","CREATE_DISTRICT","FC_UpdateDistrict","UPDATE_DISTRICT","FC_DeleteDistrict","DELETE_DISTRICT","FC_CreateSector","CREATE_SECTOR","FC_UpdateSector","UPDATE_SECTOR","FC_DeleteSector","DELETE_SECTOR","FC_CreateCenter","CREATE_CENTER","FC_UpdateCenter","UPDATE_CENTER","FC_DeleteCenter","DELETE_CENTER","FC_CreateRoom","CREATE_ROOM","FC_UpdateRoom","UPDATE_ROOM","FC_DeleteRoom","delete_room","DELETE_ROOM","PostRequestStatusInterface","DocumentAttributesInterface","DocValidationStatusInterface","SESSION_PLAN_KEYS","DOCUMENT_VALIDATION","EXAMINATION","MARKS_PUBLICATION","PLACEMENT_TRANSFER","ViewRequirements","requirements","colSpan","item","subcategory_title","field_title","required","field_id","getSchools","GET_SCHOOLS","createSchool","schools","CREATE_SCHOOL","updateSchool","UPDATE_SCHOOL","deleteSchool","DELETE_SCHOOL","fetchSchoolPosts","school_id","PLACEMENT","schoolPosts","FETCH_SCHOOL_POSTS","getSchoolPlacement","GET_SCHOOL_PLACEMENT","createSchoolPost","CREATE_SCHOOL_POST","updateSchoolPost","TYPE","UPDATE_SCHOOL_POST","fetchDistrictPosts","district_id","districtPosts","FETCH_DISTRICT_POSTS","getDistrictPlacement","GET_DISTRICT_PLACEMENT","MarksPublicationCandidateStatus","marksPublicationCandidateReportContentKeyInterface","PlacedCandidateStatus","WaitingListStatus","placementReportContentKeyInterface","FC_PositionDistinctCategory","PositionData","PositionsTemp","DistinctCategoriesTemp","DistinctCategoriesIds","DistinctSubCategoriesTemp","DistinctSubCategoriesIds","pos","req","thisRequirements","thisCategory","category","thisSubCategory","subcategory","field","position_requirement","thisField","push","category_id","user_detail_category_id","category_title","subcategory_id","user_detail_subcategory_id","_id","includes","PushPopupAlert","loadingRequest","setLoadingRequest","position_id","status","name","window","confirm","patch","isPublished","theme","PopupAlertTheme","info","thisPositionCopy","thisPosition","setThisPosition","danger","position_title","description","school_level_id","school_level_name","education_institute_id","education_category_title","courses","course_name","course_code","course_id","isGuest","NoResultThemes","Dark","LocationsSectorInArray","LocationData","locationTemp","p","districts","d","sectors","s","province_id","province_name","province_code","district_name","district_code","sector_id","sector_name","sector_code","getSchoolById","find","school","setLoading","setState","setLoadingSchool","loadingSchool","setError","allRoom","msg","education_categories","loadEducationCategories","loadingCandidatesError","schoolList","handleSubmit","preventDefault","isEmptyOrSpaces","schoolName","element","schoolCode","instituteId","districtId","sectorId","thisSector","getSectors","modalState","post","school_name","school_code","education_category_id","shool_id","success","provinceId","thisSchool","doc_category_error","handleDelete","schoolId","delete","province_error","filterSchools","FILTER_TYPE","FILTER_VALUE","IGNORE_DISTRICT","newArray","thisDistrict","edication","thisEdication","countSchool","counts","toTwoDigit","getProvinceByCode","getDistrictByCode","province","undefined","getSectorByCode","district","districtFilterStatus","edicationCategoryFilterStatus","provinceFilterStatus","thisProvince","Fragment","MdLabel","education","backDrop","Themes","default","close","displayClose","backDropClose","widthSizeClass","ModalSize","medium","body","footer","onSubmit","institute","sector","Schools","schoolLevels","locations","roomLocation","ReceivePost","submitRequest","thisPlacement","action","comment","setFormError","received","thisPost","received_posts","requested_post_id","confirmed_posts","confirmed_by","user","user_id","approval_date","needed_posts","male_number","female_number","occupied_posts","requested_by","requested_post_status","RECEIVED","confirmPlacement","role_error","placedStatus","waiting_list_id","placed_candidate_id","REJECTED","PLACED","user_access","message","loadingPost","setLoadingPost","getSchoolPlacementError","placement_id","viewPost","setThisPost","setReceivedPosts","setModalState","getPositionById","systemPositions","CONFIRMED","getPlacementByRequest","placementList","INITIATED","capitalizeFirstLetter","src","AUTH_FILES","user_info","photo","alt","fname","lname","phone_number","email","formError","resize","ViewRequest","Modal","setViewPost","large","schoolPlacements","setPostId","setPositionId","setRequestedPosts","setRequestExplanation","setFemaleOnPosition","setMaleOnPosition","setFormSteps","ONE","TWO","setStepState","RequestList","setSearchInput","searchInput","setFilterByPosition","filterByPosition","position","schoolPost","NoResult","StepsHeader","currentStep","stepState","RequestPostForm","GetAllowedPositions","postPositionIds","key","Object","prototype","hasOwnProperty","call","requestedPosts","requestExplanation","positionId","maleOnPosition","femaleOnPosition","setSchoolLevel","selectedLevel","getPositionByLevelId","allPosition","levelId","formSteps","school_levels","ViewPosition","htmlFor","system_settings","placements","request","PENDING","request_id","RequestTeacher","postId","receivedPosts","to","loadSchoolLevels","PostRequest","District","districtPlacements","loadingPosition","setLoadingPosition","loadingPlacement","setLoadingPlacement","approvedPosts","setApprovedPosts","doPlacement","msgAlert","doPlacement_reply","reDoPlacement","addSchoolRequest","dataForm","gender","available_places","requested_teacher","requested_teachers","addSchoolRequest_reply","Date","post_relpy","DATE","request_date","toString","max"],"mappings":"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","file":"static/js/31.bc66ef4f.chunk.js","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { BiSort } from \"react-icons/bi\";\nimport { MdNavigateBefore, MdNavigateNext, MdSearch } from \"react-icons/md\";\n\nconst FC_makeID = (length: number = 5): string => {\n  let result: string = \"\";\n  let characters: string =\n    \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\n  let charactersLength = characters.length;\n  for (let i: number = 0; i < length; i++) {\n    result += characters.charAt(Math.floor(Math.random() * charactersLength));\n  }\n  return result;\n};\n\nexport const sortThisColumn = (\n  tableId: string,\n  colIndex: number = 0,\n  dir: \"asc\" | \"desc\" = \"asc\"\n) => {\n  var table,\n    rows,\n    switching,\n    i,\n    x,\n    y,\n    shouldSwitch,\n    switchcount = 0;\n  table = document.getElementById(tableId) as HTMLTableElement;\n  switching = true;\n  /* Make a loop that will continue until\n  no switching has been done: */\n  if (table) {\n    while (switching) {\n      //start by saying: no switching is done:\n      switching = false;\n      rows = table.rows;\n      /*Loop through all table rows (except the\n    first, which contains table headers):*/\n      for (i = 1; i < rows.length - 1; i++) {\n        //start by saying there should be no switching:\n        shouldSwitch = false;\n        /*Get the two elements you want to compare,\n      one from current row and one from the next:*/\n        x = rows[i].getElementsByTagName(\"TD\")[colIndex];\n        y = rows[i + 1].getElementsByTagName(\"TD\")[colIndex];\n        /*check if the two rows should switch place,\n      based on the direction, asc or desc:*/\n        if (dir === \"asc\" && x && y) {\n          if (x.innerHTML.toLowerCase() > y.innerHTML.toLowerCase()) {\n            //if so, mark as a switch and break the loop:\n            shouldSwitch = true;\n            break;\n          }\n        } else if (dir === \"desc\" && x && y) {\n          if (x.innerHTML.toLowerCase() < y.innerHTML.toLowerCase()) {\n            //if so, mark as a switch and break the loop:\n            shouldSwitch = true;\n            break;\n          }\n        }\n      }\n      if (shouldSwitch && rows[i].parentNode) {\n        /*If a switch has been marked, make the switch\n      and mark that a switch has been done:*/\n        rows[i].parentNode!.insertBefore(rows[i + 1], rows[i]);\n        switching = true;\n        //Each time a switch is done, increase this count by 1:\n        switchcount++;\n      } else {\n        /*If no switching has been done AND the direction is \"asc\",\n      set the direction to \"desc\" and run the while loop again.*/\n        if (switchcount === 0 && dir === \"asc\") {\n          dir = \"desc\";\n          switching = true;\n        }\n      }\n      // if (i === 0) continue;\n      // rows.cells[i].style.backgroundColor = \"blue\";\n    }\n  }\n};\n\nexport interface TableColumnsInterface {\n  columnTitle: JSX.Element | string;\n  alignText: string;\n  padding?: string;\n  isSortAllowed?: boolean;\n}\n\ninterface TableProps {\n  columns: TableColumnsInterface[];\n  rows: Function;\n  hideColumns?: boolean;\n  pagination?: boolean;\n  search?: boolean;\n  tableSize?: string;\n  tableClass?: string;\n  tableId?: string;\n  rounded?: boolean;\n  searchBG?: string;\n  thColor?: string;\n  loading?: boolean;\n}\n\nconst Table: React.FC<TableProps> = ({\n  rows,\n  columns,\n  hideColumns = false,\n  pagination = false,\n  search = false,\n  tableSize = \"w-full\",\n  tableClass,\n  tableId = \"myTable\",\n  rounded = false,\n  searchBG = \"bg-gray-200\",\n  thColor = \"blue\",\n  loading = false,\n}) => {\n  const startPage = 1;\n  tableId = tableId === \"myTable\" ? FC_makeID() : tableId;\n  let table: HTMLElement, tr: HTMLCollectionOf<HTMLTableRowElement>;\n  const [totalItems, setTotalItems] = useState<number>(0);\n  const [totalPages, setTotalPages] = useState<number>(1);\n  const [currentPage, setCurrentPage] = useState<number>(1);\n  const [pages, setPages] = useState<number[]>();\n  const [pageSize, setPageSize] = useState<number>(10);\n  const [startIndex, setStartIndex] = useState<number>(0);\n  const [endIndex, setEndIndex] = useState<number>(0);\n\n  useEffect(() => {\n    pagination && tablePagination();\n  });\n\n  const filterTable = (\n    data: string,\n    filterType?: \"default\" | \"field\"\n  ): void => {\n    var filter, tr, td, rows: number, cols: number, txtValue;\n    if (filterType === \"field\" && data === \"all\") data = \"\";\n    filter = data.toLowerCase();\n    table = document.getElementById(tableId)!;\n    tr = table.getElementsByTagName(\"tr\");\n    for (rows = 0; rows < tr.length; rows++) {\n      for (cols = 0; cols < columns.length; cols++) {\n        td = tr[rows].getElementsByTagName(\"td\")[cols];\n        if (td) {\n          txtValue = td.textContent || td.innerText;\n          if (txtValue.toLowerCase().indexOf(filter) > -1) {\n            tr[rows].style.display = \"\";\n            break;\n          } else {\n            tr[rows].style.display = \"none\";\n          }\n        }\n      }\n    }\n  };\n\n  const tablePagination = (): void => {\n    table = document.getElementById(tableId)!;\n    tr = table.getElementsByTagName(\"tr\");\n    setTotalItems(tr.length);\n    setTotalPages(Math.ceil(totalItems / pageSize));\n\n    // calculate start and end item indexes on the current page\n    setStartIndex((currentPage - 1) * pageSize);\n    setEndIndex(Math.min(startIndex + pageSize - 1, totalItems - 1));\n\n    /**\n     * TODO!\n     * There is a problem with this condition\n     */\n    let _pages = Array.from(Array(totalPages + 1 - startPage).keys()).map(\n      (i) => startPage + i\n    );\n    if (!pages || _pages.length !== pages.length) {\n      setPages(_pages);\n    }\n\n    for (let i: number = 0; i < tr.length; i++) {\n      if (i >= startIndex && i <= endIndex) {\n        tr[i].style.display = \"\";\n      } else {\n        tr[i].style.display = \"none\";\n      }\n    }\n  };\n\n  return (\n    <div className={`${tableSize}`}>\n      {/* search box  */}\n      {search && (\n        <div className={`${searchBG} w-full mb-2`}>\n          {search && (\n            <div className=\"bg-white rounded flex items-center w-full p-2 border-2 border-gray-500\">\n              <MdSearch className=\"h-5 w-5 fill-current text-gray-400\" />\n              <input\n                type=\"search\"\n                placeholder=\"search\"\n                onChange={(e) => filterTable(e.target.value)}\n                className=\"w-full h-6 pl-4 text-sm outline-none focus:outline-none bg-white\"\n                disabled={loading}\n              />\n\n              {pagination && (\n                <div className=\"select\">\n                  <select\n                    className=\"text-base outline-none focus:outline-none bg-white\"\n                    onChange={(e) => setPageSize(Number(e.target.value))}\n                    disabled={loading}\n                  >\n                    <option value=\"10\">10</option>\n                    <option value=\"25\">25</option>\n                    <option value=\"50\">50</option>\n                    <option value=\"100\">100</option>\n                  </select>\n                </div>\n              )}\n            </div>\n          )}\n        </div>\n      )}\n      <table\n        className={\n          tableClass\n            ? tableClass\n            : `w-full shadow ${\n                rounded && \"sm:rounded-lg\"\n              } table-auto order-table`\n        }\n        id={tableId}\n      >\n        {!hideColumns && (\n          <thead className=\"bg-white border-b-2 border-gray-300 text-gray-600 font-bold text-base\">\n            <tr\n              className={`text-left tracking-wide bg-${thColor}-100 border-b-2 border-${thColor}-500 text-${thColor}-600`}\n            >\n              {columns.map((column, index) => (\n                <th\n                  key={index}\n                  className={`${column.padding} text-${\n                    column.alignText\n                  } px-3 py-2 ${column.isSortAllowed && \"cursor-pointer\"}`}\n                  onClick={() =>\n                    column.isSortAllowed && sortThisColumn(tableId, index)\n                  }\n                >\n                  <div className=\"flex items-center gap-1\">\n                    {column.columnTitle}\n                    {column.isSortAllowed && <BiSort />}\n                  </div>\n                </th>\n              ))}\n            </tr>\n          </thead>\n        )}\n        <tbody id=\"table-data\" className=\"bg-white text-black text-base\">\n          {rows()}\n        </tbody>\n      </table>\n      {pagination && (\n        <div className=\"sm:flex-1 sm:flex sm:items-center sm:justify-between mt-4 work-sans\">\n          <div>\n            <span className=\"text-xs xs:text-sm text-gray-900\">\n              Showing 1 to {pageSize} of {totalItems - 1} Entries\n            </span>\n          </div>\n          <div>\n            <nav className=\"inline-flex shadow-sm\">\n              <div>\n                <button\n                  type=\"button\"\n                  className={`inline-flex items-center px-2 py-2 rounded-l-md border border-gray-300 text-sm font-medium text-gray-500 ${\n                    currentPage !== 1 && \"bg-white\"\n                  }`}\n                  aria-label=\"Previous\"\n                  disabled={currentPage === 1 || loading}\n                  onClick={() => setCurrentPage(currentPage - 1)}\n                >\n                  <MdNavigateBefore className=\"h-5 w-5\" />\n                </button>\n              </div>\n              <div>\n                {pages &&\n                  pages.map((page, pageIndex) => (\n                    <button\n                      key={pageIndex}\n                      className={`-ml-px inline-flex items-center px-4 py-2 border border-gray-300 text-sm font-medium text-gray-700 ${\n                        page !== currentPage\n                          ? \"bg-white\"\n                          : \"bg-gray-100 cursor-default\"\n                      }`}\n                      disabled={page === currentPage || loading}\n                      onClick={() => setCurrentPage(page)}\n                    >\n                      {page}\n                    </button>\n                  ))}\n              </div>\n              <div>\n                <button\n                  type=\"button\"\n                  className={`inline-flex items-center px-2 py-2 rounded-r-md border border-gray-300 text-sm leading-5 font-medium text-gray-500 ${\n                    currentPage !== totalPages && \"bg-white\"\n                  }`}\n                  aria-label=\"Next\"\n                  disabled={currentPage === totalPages || loading}\n                  onClick={() => setCurrentPage(currentPage + 1)}\n                >\n                  <MdNavigateNext className=\"h-5 w-5\" />\n                </button>\n              </div>\n            </nav>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default Table;\n","import React, { FC, ReactElement, ReactNode } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Auth, System } from \"../../actions\";\nimport { StoreState } from \"../../reducers\";\nimport { NavToogle, PageHasSubNav } from \"../../actions\";\nimport { MdBrightness1, MdSearch } from \"react-icons/md\";\n\n// props for the component\ninterface AppProps {\n  auth: Auth;\n  system: System;\n  PageHasSubNav: Function;\n  NavToogle: Function;\n  children: ReactNode;\n}\n//\ninterface AppState {\n  loading: boolean;\n}\n\nclass _SideNavigation extends React.Component<AppProps, AppState> {\n  constructor(props: AppProps) {\n    super(props);\n\n    this.state = {\n      loading: false,\n    };\n  }\n\n  componentDidMount = () => this.props.PageHasSubNav(true);\n  componentWillUnmount = () => this.props.PageHasSubNav(false);\n\n  render() {\n    const isAuthenticated = this.props.auth.isAuthenticated;\n\n    if (isAuthenticated === false) {\n      return null;\n    }\n\n    const navActive = this.props.system.navigation;\n    return (\n      <div\n        className={`fixed w-48 p-1 pr-2 pl-6 text-gray-700 bg-white ${\n          navActive === true ? \"lg:left-16  left-16\" : \" -left-72 lg:left-16\"\n        }  top-0 bottom-0 pt-20 z-30 shadow-lg  transition-all duration-500 ease-in-out overflow-y-auto`}\n      >\n        {this.props.children}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = ({\n  auth,\n  system,\n}: StoreState): { auth: Auth; system: System } => {\n  return { auth: auth, system: system };\n};\n\nexport const SideNavigation = connect(mapStateToProps, {\n  NavToogle,\n  PageHasSubNav,\n})(_SideNavigation);\n\n//************************************ FORM SEARCH **************************************** */\n\ntype SearchComponentInterface = {\n  data: any[];\n};\n\nexport const Search: FC<SearchComponentInterface> = ({\n  data,\n}): ReactElement => {\n  return (\n    <div className=\"m-1 rounded-md shadow-md border border-blue-400 bg-white p-1 flex \">\n      <label htmlFor=\"search-text\" className=\"inline-block text-2xl\">\n        <MdSearch className=\"inline-block text-blue-400\" />\n      </label>\n      <input\n        type=\"search\"\n        className=\"outline-none bg-transparent flex-1 pl-1\"\n        placeholder=\"Search\"\n        id=\"search-text\"\n      />\n    </div>\n  );\n};\n\n//************************************ FORM SEARCH **************************************** */\n\ntype MainItemComponentInterface = {\n  title: string;\n  icon?: any;\n  active?: boolean;\n  count?: number;\n};\n\n/**\n *\n * @param param0\n * @returns\n */\nexport const MainItem: FC<MainItemComponentInterface> = ({\n  title = \"\",\n  icon = MdBrightness1,\n  active = false,\n  count = 0,\n}): ReactElement => {\n  const IconDefined = icon;\n  return (\n    <section\n      className={`${\n        active === true\n          ? \"bg-blue-500 text-white font-bold\"\n          : \"bg-blue-100 text-blue-800\"\n      } mb-1 hover:font-bold py-1 hover:bg-blue-400 hover:text-white --font-bold  px-2 rounded-md flex cursor-pointer items-center`}\n    >\n      <section className=\"flex-1\">\n        <IconDefined className=\"inline-block mr-1 text-xs\" />\n        <span>{title}</span>\n      </section>\n\n      {count > 0 ? (\n        <span className=\"px-0.5 my-1 text-xs bg-blue-600 text-white rounded-full\">\n          {count}\n        </span>\n      ) : null}\n    </section>\n  );\n};\n\n//************************************ FORM SEARCH **************************************** */\n\ntype SubItemContainerComponentInterface = {\n  children: ReactNode;\n};\n\n/**\n *\n * @param param0\n * @returns\n */\nexport const SubItemContainer: FC<SubItemContainerComponentInterface> = ({\n  children,\n}): ReactElement => {\n  return (\n    <div className=\"ml-3 overflow-y-auto border-l-2 border-blue-200 -mt-1 pt-2 mb-2 pl-1 cursor-pointer\">\n      {children}\n    </div>\n  );\n};\n\n//************************************ FORM SEARCH **************************************** */\n\ntype SubItemComponentInterface = {\n  title: string;\n  icon?: any;\n  active?: boolean;\n  count?: number;\n};\n\n/**\n *\n * @param param0\n * @returns\n * @important Remenber to use these components inside the <SubItemContainer>...</SubItemContainer>\n */\nexport const SubItem: FC<SubItemComponentInterface> = ({\n  title = \"\",\n  icon = MdBrightness1,\n  active = false,\n  count = 0,\n}): ReactElement => {\n  const IconDefined = icon;\n\n  return (\n    <div\n      className={`animate__animated animate__zoomIn animate__faster ${\n        active === true ? \"bg-blue-500 text-white font-bold\" : \" text-blue-800\"\n      } text-blue-800 bg-blue-200 rounded-md px-1 mb-1 flex items-center py-1 font-bold`}\n    >\n      <IconDefined\n        className={`inline-block mr-0.1 text-xs ${\n          active === true ? \"text-white\" : \"\"\n        }`}\n      />\n      <span\n        className={`inline-block pl-1 ${active === true ? \"text-white\" : \"\"}`}\n      >\n        {title}\n      </span>\n      {count >= 1 ? (\n        <span\n          className={`text-sm fint-bold ${active === true ? \"text-white\" : \"\"}`}\n        >\n          {count}\n        </span>\n      ) : null}\n    </div>\n  );\n};\n","import axios from \"axios\";\nimport { Dispatch } from \"redux\";\nimport { ActionTypes } from \"./types\";\nimport {\n  ApplicationSessionInterface,\n  SystemSettingsInterface,\n} from \"../shared/interfaces\";\nimport { API } from \"../utils/api\";\nimport { setAxiosToken } from \"../utils/AxiosToken\";\nimport { errorToText } from \"../utils/errors\";\nimport { PositionAPI } from \"../interfaces/position\";\n\n/**\n * * ****************************** INTERFACES *****************************\n */\n\n// SYSTEM SETTINGS  ==============\nexport interface GetSystemSettingsAction {\n  type: ActionTypes.GET_SYSTEM_SETTINGS;\n  payload: SystemSettingsInterface[];\n}\n\nexport interface DisableSystemSettingsAction {\n  type: ActionTypes.DISABLE_SYSTEM_SETTINGS;\n  payload: {\n    system_setting_id: string;\n    status: \"enabled\" | \"disabled\";\n  };\n}\n\n// APPLICATION SETTINGS ===================================\nexport interface GetApplicationSessionAction {\n  type: ActionTypes.GET_APPLICATION_SESSIONS;\n  payload: ApplicationSessionInterface[];\n}\n\nexport interface CreateApplicationSessionAction {\n  type: ActionTypes.CREATE_APPLICATION_SESSIONS;\n  payload: ApplicationSessionInterface;\n}\n\nexport interface UpdateApplicationSessionAction {\n  type: ActionTypes.UPDATE_APPLICATION_SESSIONS;\n  payload: ApplicationSessionInterface;\n}\n\nexport interface DisableApplicationSessionAction {\n  type: ActionTypes.DISABLE_APPLICATION_SESSION;\n  payload: {\n    application_session_id: string;\n    status: boolean;\n  };\n}\n\n// POSITIONS SETTINGS ===================================\nexport interface PositionCreateInterface {\n  position_id?: string;\n  position_title: string;\n  description: string;\n  school_level_id: string;\n  education_institute_id: string;\n  courses: string[];\n  requirements: {\n    user_detail_category_id: string;\n    user_detail_subcategory_id: string;\n    position_requirement: {\n      category_subcategory_data_id: string;\n      required: boolean;\n    }[];\n    required: boolean;\n  }[];\n}\nexport interface GetPositionsAction {\n  type: ActionTypes.GET_POSTIONS;\n  payload: PositionAPI[];\n}\n\nexport interface CreatePositionsAction {\n  type: ActionTypes.CREATE_POSITION;\n  payload: PositionCreateInterface;\n}\n\nexport interface UpdatePositionsAction {\n  type: ActionTypes.UPDATE_POSITION;\n  payload: PositionCreateInterface;\n}\n\nexport interface DeletePositionAction {\n  type: ActionTypes.DELETE_POSITION;\n  payload: string;\n}\n\nexport interface PublishPositionAction {\n  type: ActionTypes.PUBLISH_POSITION;\n  payload: {\n    position_id: string;\n    status: boolean;\n  };\n}\n\nexport type SystemActionType =\n  | GetSystemSettingsAction\n  | DisableSystemSettingsAction\n  | GetApplicationSessionAction\n  | CreateApplicationSessionAction\n  | UpdateApplicationSessionAction\n  | DisableApplicationSessionAction\n  | GetPositionsAction\n  | CreatePositionsAction\n  | UpdatePositionsAction\n  | DeletePositionAction\n  | PublishPositionAction;\n\n/**\n * * ****************************** ACTIONS *****************************\n */\n\nexport const getSystemSettings = (callback: Function) => {\n  return async (dispatch: Dispatch) => {\n    callback(true, \"\");\n    try {\n      setAxiosToken();\n      const res = await axios.get<SystemSettingsInterface[]>(\n        `${API.AUTH}/settings`\n      );\n      dispatch<GetSystemSettingsAction>({\n        type: ActionTypes.GET_SYSTEM_SETTINGS,\n        payload: res.data,\n      });\n      callback(false, \"\");\n    } catch (error) {\n      console.log({ code_error: error });\n      callback(false, errorToText(error));\n    }\n  };\n};\n\nexport const disableSystemSetting = (data: {\n  system_setting_id: string;\n  status: \"enabled\" | \"disabled\";\n}) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<DisableSystemSettingsAction>({\n      type: ActionTypes.DISABLE_SYSTEM_SETTINGS,\n      payload: data,\n    });\n  };\n};\n\n// ============================ PERIODS =======================\n\nexport const getApplicationSessions = (callback: Function) => {\n  return async (dispatch: Dispatch) => {\n    callback(true, \"\");\n    try {\n      setAxiosToken();\n      const res = await axios.get<ApplicationSessionInterface[]>(\n        `${API.APPLICATION}/applicationsesion`\n      );\n      dispatch<GetApplicationSessionAction>({\n        type: ActionTypes.GET_APPLICATION_SESSIONS,\n        payload: res.data,\n      });\n      callback(false, \"\");\n    } catch (error) {\n      console.log({ code_error: error });\n      callback(false, errorToText(error));\n    }\n  };\n};\n\nexport const createAplicationSession = (data: ApplicationSessionInterface) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<CreateApplicationSessionAction>({\n      type: ActionTypes.CREATE_APPLICATION_SESSIONS,\n      payload: data,\n    });\n  };\n};\n\nexport const updateAplicationSession = (data: ApplicationSessionInterface) => {\n  console.log({ check: data });\n  return async (dispatch: Dispatch) => {\n    dispatch<UpdateApplicationSessionAction>({\n      type: ActionTypes.UPDATE_APPLICATION_SESSIONS,\n      payload: data,\n    });\n  };\n};\n\nexport const disableApplicationSession = (data: {\n  application_session_id: string;\n  status: boolean;\n}) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<DisableApplicationSessionAction>({\n      type: ActionTypes.DISABLE_APPLICATION_SESSION,\n      payload: data,\n    });\n  };\n};\n\nexport const getPositions = (callback: Function) => {\n  return async (dispatch: Dispatch) => {\n    callback(true, \"\");\n    try {\n      setAxiosToken();\n      const res = await axios.get<PositionAPI[]>(`${API.APPLICATION}/position`);\n      dispatch<GetPositionsAction>({\n        type: ActionTypes.GET_POSTIONS,\n        payload: res.data,\n      });\n      callback(false, \"\");\n    } catch (error) {\n      console.log({ code_error: error });\n      callback(false, errorToText(error));\n    }\n  };\n};\n\nexport const createPosition = (data: PositionCreateInterface) => {\n  console.log({ createPosition: data });\n  return async (dispatch: Dispatch) => {\n    dispatch<CreatePositionsAction>({\n      type: ActionTypes.CREATE_POSITION,\n      payload: data,\n    });\n  };\n};\n\nexport const updatePosition = (data: PositionCreateInterface) => {\n  console.log({ updatePosition: data });\n  return async (dispatch: Dispatch) => {\n    dispatch<UpdatePositionsAction>({\n      type: ActionTypes.UPDATE_POSITION,\n      payload: data,\n    });\n  };\n};\n\nexport const deletePosition = (data: string) => {\n  console.log({ deletePosition: data });\n  return async (dispatch: Dispatch) => {\n    dispatch<DeletePositionAction>({\n      type: ActionTypes.DELETE_POSITION,\n      payload: data,\n    });\n  };\n};\n\nexport const publishPosition = (data: {\n  position_id: string;\n  status: boolean;\n}) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<PublishPositionAction>({\n      type: ActionTypes.PUBLISH_POSITION,\n      payload: data,\n    });\n  };\n};\n","import axios from \"axios\";\nimport { Dispatch } from \"redux\";\nimport { ActionTypes } from \"./types\";\nimport { API } from \"../utils/api\";\nimport {\n  CentersInterface,\n  DistrictInterface,\n  RoomLocationInterface,\n  RoomsInterface,\n  SectorInterface,\n} from \"../shared/interfaces\";\nimport { errorToText } from \"../utils/errors\";\n\n/**\n * * ****************************** INTERFACES *****************************\n */\n\nexport interface getAllRoomActions {\n  type: ActionTypes.GET_ALL_ROOM;\n  payload: RoomLocationInterface[];\n}\n\nexport interface createProvinceActions {\n  type: ActionTypes.CREATE_PROVINCE;\n  payload: RoomLocationInterface;\n}\n\nexport interface updateProvinceActions {\n  type: ActionTypes.UPDATE_PROVINCE;\n  payload: {\n    province_id: string;\n    province_name: string;\n    provice_code: number;\n  };\n}\n\nexport interface deleteProvinceActions {\n  type: ActionTypes.DELETE_PROVINCE;\n  payload: string;\n}\n\n// ============ DISTRICT =================\nexport interface createDistrictActions {\n  type: ActionTypes.CREATE_DISTRICT;\n  payload: { province_id: string; data: DistrictInterface };\n}\n\nexport interface updateDistrictActions {\n  type: ActionTypes.UPDATE_DISTRICT;\n  payload: {\n    province_id: string;\n    district_id: string;\n    district_name: string;\n    district_code: number;\n  };\n}\n\nexport interface deleteDistrictActions {\n  type: ActionTypes.DELETE_DISTRICT;\n  payload: { province_id: string; district_id: string };\n}\n\n// ============ SECTOR =================\nexport interface createSectorActions {\n  type: ActionTypes.CREATE_SECTOR;\n  payload: {\n    province_id: string;\n    district_id: string;\n    data: SectorInterface;\n  };\n}\n\nexport interface updateSectorActions {\n  type: ActionTypes.UPDATE_SECTOR;\n  payload: {\n    province_id: string;\n    district_id: string;\n    sector_id: string;\n    sector_name: string;\n    sector_code: number;\n  };\n}\n\nexport interface deleteSectorActions {\n  type: ActionTypes.DELETE_SECTOR;\n  payload: { province_id: string; district_id: string; sector_id: string };\n}\n\n// ============ CENTERS =================\nexport interface createCenterActions {\n  type: ActionTypes.CREATE_CENTER;\n  payload: {\n    province_id: string;\n    district_id: string;\n    data: CentersInterface;\n  };\n}\n\nexport interface updateCenterActions {\n  type: ActionTypes.UPDATE_CENTER;\n  payload: {\n    province_id: string;\n    district_id: string;\n    examination_center_id: string;\n    center_name: string;\n  };\n}\n\nexport interface deleteCenterActions {\n  type: ActionTypes.DELETE_CENTER;\n  payload: { province_id: string; district_id: string; center_id: string };\n}\n\n// ============ ROOMS =================\nexport interface createRoomActions {\n  type: ActionTypes.CREATE_ROOM;\n  payload: {\n    province_id: string;\n    district_id: string;\n    center_id: string;\n    data: RoomsInterface;\n  };\n}\n\nexport interface updateRoomActions {\n  type: ActionTypes.UPDATE_ROOM;\n  payload: {\n    province_id: string;\n    district_id: string;\n    center_id: string;\n    room_id: string;\n    room_number: number;\n    capacity: number;\n  };\n}\n\nexport interface deleteRoomActions {\n  type: ActionTypes.DELETE_ROOM;\n  payload: {\n    province_id: string;\n    district_id: string;\n    center_id: string;\n    room_id: string;\n  };\n}\n\nexport type RoomActionType =\n  | getAllRoomActions\n  | createProvinceActions\n  | updateProvinceActions\n  | deleteProvinceActions\n  | createDistrictActions\n  | updateDistrictActions\n  | deleteDistrictActions\n  | createSectorActions\n  | updateSectorActions\n  | deleteSectorActions\n  | createCenterActions\n  | updateCenterActions\n  | deleteCenterActions\n  | createRoomActions\n  | updateRoomActions\n  | deleteRoomActions;\n\n/**\n * * ****************************** ACTIONS *****************************\n */\n\nexport const getAllRoom = (callback: Function) => {\n  return async (dispatch: Dispatch) => {\n    callback(true, \"\");\n    try {\n      const res = await axios.get<RoomLocationInterface[]>(\n        `${API.APPLICATION}/roomlocation`\n      );\n      dispatch<getAllRoomActions>({\n        type: ActionTypes.GET_ALL_ROOM,\n        payload: res.data,\n      });\n      console.log(\"====================================\");\n      console.log({ res: res.data });\n      console.log(\"====================================\");\n      callback(false, \"\", res.data);\n    } catch (error) {\n      console.error(\"Err: \", error);\n      callback(false, errorToText(error));\n    }\n  };\n};\n\nexport const FC_CreateProvince = (data: RoomLocationInterface) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<createProvinceActions>({\n      type: ActionTypes.CREATE_PROVINCE,\n      payload: data,\n    });\n  };\n};\n\nexport const FC_UpdateProvince = (data: {\n  province_id: string;\n  province_name: string;\n  provice_code: number;\n}) => {\n  console.log({ data });\n  return async (dispatch: Dispatch) => {\n    dispatch<updateProvinceActions>({\n      type: ActionTypes.UPDATE_PROVINCE,\n      payload: data,\n    });\n  };\n};\n\nexport const FC_DeleteProvince = (data: string) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<deleteProvinceActions>({\n      type: ActionTypes.DELETE_PROVINCE,\n      payload: data,\n    });\n  };\n};\n\n// DISTRICT =================\nexport const FC_CreateDistrict = (data: {\n  province_id: string;\n  data: DistrictInterface;\n}) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<createDistrictActions>({\n      type: ActionTypes.CREATE_DISTRICT,\n      payload: data,\n    });\n  };\n};\n\nexport const FC_UpdateDistrict = (data: {\n  province_id: string;\n  district_id: string;\n  district_name: string;\n  district_code: number;\n}) => {\n  console.log({ data });\n  return async (dispatch: Dispatch) => {\n    dispatch<updateDistrictActions>({\n      type: ActionTypes.UPDATE_DISTRICT,\n      payload: data,\n    });\n  };\n};\n\nexport const FC_DeleteDistrict = (data: {\n  province_id: string;\n  district_id: string;\n}) => {\n  console.log({ data });\n  return async (dispatch: Dispatch) => {\n    dispatch<deleteDistrictActions>({\n      type: ActionTypes.DELETE_DISTRICT,\n      payload: data,\n    });\n  };\n};\n\n// SECTOR =================\nexport const FC_CreateSector = (data: {\n  province_id: string;\n  district_id: string;\n  data: SectorInterface;\n}) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<createSectorActions>({\n      type: ActionTypes.CREATE_SECTOR,\n      payload: data,\n    });\n  };\n};\n\nexport const FC_UpdateSector = (data: {\n  province_id: string;\n  district_id: string;\n  sector_id: string;\n  sector_name: string;\n  sector_code: number;\n}) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<updateSectorActions>({\n      type: ActionTypes.UPDATE_SECTOR,\n      payload: data,\n    });\n  };\n};\n\nexport const FC_DeleteSector = (data: {\n  province_id: string;\n  district_id: string;\n  sector_id: string;\n}) => {\n  console.log({ data });\n  return async (dispatch: Dispatch) => {\n    dispatch<deleteSectorActions>({\n      type: ActionTypes.DELETE_SECTOR,\n      payload: data,\n    });\n  };\n};\n\n// CENTERS =================\nexport const FC_CreateCenter = (data: {\n  province_id: string;\n  district_id: string;\n  data: CentersInterface;\n}) => {\n  console.log({ data });\n  return async (dispatch: Dispatch) => {\n    dispatch<createCenterActions>({\n      type: ActionTypes.CREATE_CENTER,\n      payload: data,\n    });\n  };\n};\n\nexport const FC_UpdateCenter = (data: {\n  province_id: string;\n  district_id: string;\n  examination_center_id: string;\n  center_name: string;\n}) => {\n  console.log({ data });\n  return async (dispatch: Dispatch) => {\n    dispatch<updateCenterActions>({\n      type: ActionTypes.UPDATE_CENTER,\n      payload: data,\n    });\n  };\n};\n\nexport const FC_DeleteCenter = (data: {\n  province_id: string;\n  district_id: string;\n  center_id: string;\n}) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<deleteCenterActions>({\n      type: ActionTypes.DELETE_CENTER,\n      payload: data,\n    });\n  };\n};\n\n// ROOM =================\nexport const FC_CreateRoom = (data: {\n  province_id: string;\n  district_id: string;\n  center_id: string;\n  data: RoomsInterface;\n}) => {\n  console.log({ data });\n  return async (dispatch: Dispatch) => {\n    dispatch<createRoomActions>({\n      type: ActionTypes.CREATE_ROOM,\n      payload: data,\n    });\n  };\n};\n\nexport const FC_UpdateRoom = (data: {\n  province_id: string;\n  district_id: string;\n  center_id: string;\n  room_id: string;\n  room_number: number;\n  capacity: number;\n}) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<updateRoomActions>({\n      type: ActionTypes.UPDATE_ROOM,\n      payload: data,\n    });\n  };\n};\n\nexport const FC_DeleteRoom = (data: {\n  province_id: string;\n  district_id: string;\n  center_id: string;\n  room_id: string;\n}) => {\n  console.log({ delete_room: data });\n  return async (dispatch: Dispatch) => {\n    dispatch<deleteRoomActions>({\n      type: ActionTypes.DELETE_ROOM,\n      payload: data,\n    });\n  };\n};\n","import {\n  ApplicationStates,\n  SESSION_PLAN_KEYS,\n} from \"../interfaces/application\";\n\nexport interface SystemSettingsInterface {\n  system_setting_id: string;\n  name: string;\n  key: string;\n  status: \"enabled\" | \"disabled\";\n}\n\nexport interface ApplicationSessionInterface {\n  is_active: boolean;\n  application_session_name: string;\n  period: string;\n  application_start_date: string;\n  application_end_date: string;\n  createdAt: string;\n  updatedAt: string;\n  application_session_id: string;\n}\n\nexport interface UserInfoInterface {\n  document_type?: string;\n  issue_number?: string;\n  date_of_issue?: string;\n  date_of_expiry?: string;\n  place_of_issue?: string;\n  application_number?: string;\n  fname: string;\n  lname: string;\n  sex: \"M\" | \"F\";\n  father_names: string;\n  mother_names: string;\n  date_of_birth: string;\n  place_of_birth?: string;\n  country_of_birth: string;\n  village_id: string;\n  village: string;\n  cell: string;\n  sector: string;\n  district: string;\n  province: string;\n  photo?: string;\n  civil_status?: string;\n  spouse?: any;\n  status?: string;\n}\n\nexport interface UserInterface {\n  user_id: string;\n  n_id?: string;\n  phone_number: string;\n  email: string;\n  password?: string;\n  user_info: UserInfoInterface;\n  details: UserDocumentsInterface[];\n  user_photo?: string;\n  default_access: RoleToUserInterface | null;\n  custome_access: CustomeAccessInterface | null;\n  is_active?: boolean;\n}\n\nexport interface CandidateDetailsInterface_old {\n  category_id: string;\n  sub_category_id: string;\n  category_subcategory_data: string;\n  title: string;\n  description: string;\n  files: string;\n  start_year: string;\n  end_year: string;\n  school: string;\n  email: string;\n  names: string;\n  phone_number: string;\n  company: string;\n  year: string;\n  doc_id: string;\n  validation_status: \"waiting\" | \"approved\" | \"rejected\";\n  validated_by: {\n    user_id: string;\n    comment: string;\n    validation_status: \"waiting\" | \"approved\" | \"rejected\";\n    date: string;\n  } | null;\n  doc_history_status: string;\n  get_in_date: string;\n  approved?: string;\n}\n\nexport interface CandidateDetailsInterface {\n  category_id: string;\n  sub_category_id: string;\n  category_subcategory_data: string;\n  title: string;\n  description: string;\n  files: string;\n  start_year: string;\n  end_year: string;\n  school: string;\n  email: string;\n  names: string;\n  phone_number: string;\n  company: string;\n  year: string;\n  doc_id: string;\n  validation_status: \"waiting\" | \"approved\" | \"rejected\";\n  validated_by: {\n    user_id: string;\n    comment: string;\n    validation_status: \"waiting\" | \"approved\" | \"rejected\";\n    date: string;\n  } | null;\n  doc_history_status: string;\n  get_in_date: string;\n  approved?: string;\n}\n\nexport interface DocInterface {\n  category_subcategory_data: string;\n  school: string;\n  category_id: string;\n  company: string;\n  description: string;\n  email: string;\n  end_year: string;\n  files: string;\n  names: string;\n  phone_number: string;\n  start_year: string;\n  sub_category_id: string;\n  title: string;\n  year: string;\n  approved: string;\n  doc_id: string;\n  validated_by: null;\n  validation_status: string;\n  doc_history_status: string;\n  get_in_date: string;\n  date_modefied: string;\n}\n\nexport interface CandidateRoleToUserInterface {\n  key: string;\n  status: number;\n  access: boolean;\n  assigned_date: string;\n}\n\nexport interface CandidatesInterface_old {\n  user_id: string;\n  n_id: string;\n  fname: string;\n  lname: string;\n  phone_number: string;\n  district: string;\n  email: string;\n  details: CandidateDetailsInterface[];\n}\n\nexport interface ApplicationExamsInterface {\n  course_id: string;\n  proctoring_type: string;\n  center_id: string;\n  room_id: string;\n}\n\nexport interface CandidatesInterface {\n  user_id: string;\n  n_id: string;\n  fname: string;\n  lname: string;\n  phone_number: string;\n  district: string;\n  email: string;\n  in_education?: boolean;\n  disability?: boolean;\n  details: CandidateDetailsInterface[];\n  exams: ApplicationExamsInterface[];\n}\n\nexport interface CustomeAccessInterface {\n  access: AccessTaskInterface[];\n  user_id: string;\n  custome_user_access_id: string;\n}\n\nexport interface UserDocumentsInterface {\n  category_id: string;\n  sub_category_id: string;\n  category_subcategory_data: string;\n  title: string;\n  description: string;\n  files: string;\n  start_year: string;\n  end_year: string;\n  school: { title: string; school_id: string | null };\n  email: string;\n  names: string;\n  phone_number: string;\n  company: string;\n  year: string;\n  approved: \"waiting\" | \"approved\" | \"rejected\";\n  doc_id: string;\n  validation_status: \"waiting\" | \"approved\" | \"rejected\";\n  validated_by: {\n    user_id: string;\n    commet: string;\n    validation_status: \"waiting\" | \"approved\" | \"rejected\";\n    date: string;\n  };\n}\n\nexport interface SystemUserRoleInterface {\n  system_user_role_id: string;\n  role: string;\n  status: boolean;\n  access: AccessTaskInterface[];\n  district_required?: boolean;\n  school_required?: boolean;\n  room_required?: boolean;\n  education_institution_required?: boolean;\n  school_id: string;\n  district_id: string;\n}\n\nexport interface CustomeUserAccessInterface {\n  user_id: string;\n  access?: [\n    {\n      id: string;\n      task: string;\n      key: string;\n      permitted: {\n        create: boolean;\n        delete: boolean;\n        update: boolean;\n        view: boolean;\n      };\n    }\n  ];\n}\n\nexport interface PermissionInterface {\n  create: boolean;\n  view: boolean;\n  update: boolean;\n  delete: boolean;\n}\n\nexport interface AccessTaskInterface {\n  id: string;\n  task: string;\n  key: string;\n  permitted: PermissionInterface;\n}\n\nexport interface RoleToUserInterface {\n  system_user_role_id: string;\n  role: string;\n  access: AccessTaskInterface[];\n  status?: number;\n  school_id: string;\n  district_id: string;\n  room_id: string;\n  education_institution_id: string;\n}\n\nexport interface RoomsInterface {\n  occupied: number;\n  isUsed: string;\n  room_type: string;\n  room_number: number;\n  capacity: number;\n  _id: string;\n}\n\nexport interface CentersInterface {\n  rooms: RoomsInterface[];\n  isUsed: boolean;\n  _id: string;\n  center_name: string;\n  center_code: number;\n  district_id: string;\n}\n\nexport interface SectorInterface {\n  district_code: number;\n  district_id: string;\n  sector_name: string;\n  sector_code: number;\n  sector_id: string;\n}\n\nexport interface DistrictInterface {\n  centers: CentersInterface[];\n  sectors: SectorInterface[];\n  province_code: number;\n  province_id: string;\n  district_name: string;\n  district_code: number;\n  _id: string;\n}\n\nexport interface RoomLocationInterface {\n  districts: DistrictInterface[];\n  province_name: string;\n  province_code: number;\n  _id: string;\n}\n\nexport interface AssignRoleToUserActionInterface {\n  user_id: string;\n  data: RoleToUserInterface;\n}\n\nexport interface AssignRoleToUserActionInterface {\n  user_id: string;\n  data: RoleToUserInterface;\n}\n\nexport enum PostRequestStatusInterface {\n  INITIATED = \"initiated\",\n  CONFIRMED = \"confirmed\",\n  RECEIVED = \"received\",\n}\n\nexport interface PostSchoolInterface_old {\n  post_at_school_id: string;\n  school_id: string;\n  position_id: string;\n  district_id: string;\n  needed_posts: number;\n  confirmed_posts?: number;\n  occupied_posts?: number;\n  requested_by: string;\n  confirmed_by?: string;\n  received_posts?: number;\n  request_date: Date;\n  approval_date?: Date;\n  post_at_school_status: PostRequestStatusInterface;\n}\n\nexport interface PostSchoolInterface {\n  requested_post_id: string;\n  school_id: string;\n  position_id: string;\n  district_id: string;\n  needed_posts: number;\n  male_number: number;\n  female_number: number;\n  description: string;\n  confirmed_posts?: number;\n  occupied_posts?: number;\n  requested_by: string;\n  confirmed_by?: string;\n  received_posts?: number;\n  request_date: Date;\n  approval_date?: Date;\n  requested_post_status: PostRequestStatusInterface;\n}\n\nexport interface SchoolInfoInterface {\n  school_id: string;\n  school_title: string;\n  district_id: string;\n  number_of_females?: number;\n  number_of_males?: number;\n}\n\nexport interface SchoolsInterface {\n  _id: string;\n  status: boolean;\n  school_name: string;\n  school_code: number;\n  province_id: string;\n  province_code: number;\n  district_id: string;\n  district_code: number;\n  sector_id: string;\n  sector_code: number;\n  education_category_id: string;\n}\n\nexport interface SchoolLevelInterface {\n  school_level_id: string;\n  school_level_name: string;\n  description: string;\n  education_institute: string[];\n  courses: [];\n}\n\nexport interface CourseInterface {\n  course_name: string;\n  course_code: string;\n  description: string;\n  school_levels: string[];\n  course_id: string;\n}\n\nexport interface EducationInstituteInterface {\n  education_category_title: string;\n  school_levels: [];\n  description: string;\n  education_institute_id: string;\n}\n\nexport interface PositionRequirementInterface {\n  user_detail_category_id: string;\n  title: string;\n  user_required_docs: {\n    user_detail_subcategory_id: string;\n    title: string;\n  }[];\n}\n\nexport interface PositionInterface {\n  courses: CourseInterface[];\n  position_title: string;\n  description: string;\n  school_level_id: SchoolLevelInterface;\n  education_institute_id: EducationInstituteInterface;\n  requirements: PositionRequirementInterface[];\n  position_id: string;\n}\n\nexport enum DocumentAttributesInterface {\n  \"Title\" = \"title\",\n  \"Description\" = \"description\",\n  \"Files\" = \"files\",\n  \"email\" = \"email\",\n  \"names\" = \"names\",\n  \"phone_number\" = \"phone_number\",\n  \"position\" = \"position\",\n  \"relation\" = \"relation\",\n  \"src\" = \"src\",\n  \"year\" = \"year\",\n  \"company\" = \"company\",\n  \"category_subcategory_data\" = \"category_subcategory_data\",\n  \"others\" = \"others\",\n  \"start_year\" = \"start_year\",\n  \"end_year\" = \"end_year\",\n  \"School\" = \"School\",\n}\n\nexport enum DocValidationStatusInterface {\n  APPROVED = \"approved\",\n  REJECTED = \"rejected\",\n}\n\nexport interface DocumentCategoryInterface {\n  user_detail_category_id: string;\n  title: string;\n  description: string;\n  fields: DocumentAttributesInterface[];\n}\n\nexport interface DocumentSubCategoryInterface {\n  category_id: string;\n  title: string;\n  description: string;\n  user_detail_subcategory_id: string;\n}\n\nexport interface DocumentFieldsInterface {\n  _id: string;\n  category_id: string;\n  subcategory_id: string | null;\n  title: string;\n  description: string;\n  others: [];\n}\n\nexport interface ApplicationAssessmentInterface {\n  application_id: string;\n  user_id: string;\n  application_session: string;\n  application_status: string;\n  n_id: string;\n  phone_number: string;\n  email: string;\n  fname: string;\n  lname: string;\n  sex: \"M\" | \"F\";\n  district: string;\n  position: PositionApplicationInterface;\n  details: CandidateDetailsInterface[];\n  createdAt: string;\n  updatedAt: string;\n}\n\nexport interface AdminApplicationsToPrintInterface {\n  application_id: number;\n  names: string;\n  gender?: string;\n  national_id?: string;\n  phone?: string;\n  email?: string;\n  position: string;\n  education_category?: string;\n  application_session?: string;\n  district?: string;\n  date?: string;\n  decision?: ApplicationStates;\n}\n\nexport interface PositionApplicationInterface {\n  courses: string[];\n  position_title: string;\n  description: string;\n  school_level_id: string;\n  education_institute_id: string;\n  requirements: PositionRequirementInterface[];\n  position_id: string;\n}\n\nexport interface PositionRequirementInterface {\n  user_detail_category_id: string;\n  title: string;\n  user_required_docs: {\n    user_detail_subcategory_id: string;\n    title: string;\n  }[];\n}\n\nexport interface ApplicationRequirementInterface {\n  user_detail_category_id: string;\n  title: string;\n  user_required_docs: {\n    user_detail_subcategory_id: string;\n    title: string;\n  }[];\n}\n\nexport interface PeriodInterface {\n  is_active: string;\n  application_session_name: string;\n  period: string;\n  application_start_date: string;\n  application_end_date: string;\n  createdAt: string;\n  updatedAt: string;\n  application_session_id: string;\n}\n\nexport interface LocationRoomTableInterface {\n  province_id: string;\n  province_name: string;\n  district_id: string;\n  district_name: string;\n  center_id: string;\n  center_name: string;\n  room_id: string;\n  room_name: string;\n  capacity: number;\n  occupied: number;\n}\n\nexport interface LocationSectorTableInterface {\n  province_id: string;\n  province_name: string;\n  province_code: number;\n  district_id: string;\n  district_name: string;\n  district_code: number;\n  sector_id: string;\n  sector_name: string;\n  sector_code: number;\n}\n\nexport interface PositionRequirementsFieldInterface {\n  category_id: string;\n  category_name: string;\n  sub_category_id: string;\n  sub_category_name: string;\n  field_id: string;\n  field_name: string;\n  required: boolean;\n}\n\nexport interface ApplicationPeriodInterface {\n  _id: string;\n  application_status: ApplicationStates;\n  user_id: string;\n  position: string;\n  application_session: string;\n  exams: ApplicationExamsInterface[];\n}\n\nexport const getDocCategoryById = (\n  subDocs: DocumentCategoryInterface[],\n  docId: string\n): DocumentCategoryInterface => {\n  return subDocs.filter((doc) => doc.user_detail_category_id === docId)[0];\n};\n\nexport const getSubDocCategoryById = (\n  subDocs: DocumentSubCategoryInterface[],\n  docId: string\n): DocumentSubCategoryInterface => {\n  return subDocs.filter((doc) => doc.user_detail_subcategory_id === docId)[0];\n};\n\nexport const SESSION_PLAN_TYPES: {\n  type_id: number;\n  type_title: string;\n  type_key: SESSION_PLAN_KEYS;\n}[] = [\n  {\n    type_id: 1,\n    type_title: \"Application\",\n    type_key: SESSION_PLAN_KEYS.APPLICATION,\n  },\n  {\n    type_id: 2,\n    type_title: \"Document Validation\",\n    type_key: SESSION_PLAN_KEYS.DOCUMENT_VALIDATION,\n  },\n  {\n    type_id: 3,\n    type_title: \"Examination\",\n    type_key: SESSION_PLAN_KEYS.EXAMINATION,\n  },\n  {\n    type_id: 4,\n    type_title: \"Marks Publication\",\n    type_key: SESSION_PLAN_KEYS.MARKS_PUBLICATION,\n  },\n  {\n    type_id: 5,\n    type_title: \"Placement and Transfer\",\n    type_key: SESSION_PLAN_KEYS.PLACEMENT_TRANSFER,\n  },\n];\n","import React from \"react\";\nimport Table from \"../../components/Table/Table\";\nimport { PositionRequirementTableInterface } from \"./ViewPosition\";\n\ninterface RequirementProps {\n  requirements: PositionRequirementTableInterface[];\n}\n\nconst ViewRequirements: React.FC<RequirementProps> = (props) => {\n  const tableData = (): JSX.Element[] => {\n    let data: PositionRequirementTableInterface[] = props.requirements;\n    // let data: PositionSubcategoryData[] =\n    //   props.position_requirement.position_requirement;\n    if (data.length === 0) {\n      return [\n        <tr key={153} className=\"border-b border-gray-200 hover:bg-gray-100\">\n          <td className=\"p-3 text-center\" colSpan={3}>\n            No Data Found\n          </td>\n        </tr>,\n      ];\n    }\n\n    return data.map((item, index) => (\n      <tr\n        key={index + item.field_id}\n        className=\"border-b border-gray-200 hover:bg-gray-100\"\n      >\n        <td className=\"p-3 text-left whitespace-nowrap\">{index + 1}</td>\n        <td className=\"p-3 text-left\">\n          <span>{item.subcategory_title + \" in \" + item.field_title}</span>\n        </td>\n        <td className=\"p-3 text-left text-lg italic\">\n          {item.required ? (\n            <span className=\"text-yellow-800\">Required</span>\n          ) : (\n            \"Optional\"\n          )}\n        </td>\n      </tr>\n    ));\n  };\n\n  return (\n    <div>\n      <Table\n        columns={[\n          { columnTitle: \"#\", alignText: \"left\", padding: \"p-3\" },\n          { columnTitle: \"Document\", alignText: \"left\", padding: \"p-3\" },\n          { columnTitle: \"Status\", alignText: \"left\", padding: \"p-3\" },\n          // { columnTitle: \"\", alignText: \"left\", padding: \"p-3\" },\n        ]}\n        rows={tableData}\n        pagination={false}\n        search={false}\n        thColor=\"gray\"\n      />\n    </div>\n  );\n};\n\nexport default ViewRequirements;\n","import { Dispatch } from \"redux\";\nimport { ActionTypes } from \"./types\";\nimport { data_school } from \"../shared/dataTest\";\nimport {\n  PostSchoolInterface,\n  SchoolInfoInterface,\n  SchoolsInterface,\n} from \"../shared/interfaces\";\nimport { setAxiosToken } from \"../utils/AxiosToken\";\nimport axios from \"axios\";\nimport { API } from \"../utils/api\";\nimport { errorToText } from \"../utils/errors\";\nimport { placedCandidateInterface } from \"../interfaces/marks_publication\";\n\n/**\n * * ****************************** INTERFACES *****************************\n */\n\nexport interface GetSchoolsAction {\n  type: ActionTypes.GET_SCHOOLS;\n  payload: SchoolsInterface[];\n}\n\nexport interface GetSchoolsInfoAction {\n  type: ActionTypes.GET_SCHOOLS_INFO;\n  payload: SchoolInfoInterface[];\n}\n\nexport interface CreateSchoolAction {\n  type: ActionTypes.CREATE_SCHOOL;\n  payload: SchoolsInterface;\n}\n\nexport interface UpdateSchoolAction {\n  type: ActionTypes.UPDATE_SCHOOL;\n  payload: SchoolsInterface;\n}\n\nexport interface DeleteSchoolAction {\n  type: ActionTypes.DELETE_SCHOOL;\n  payload: string;\n}\n\n// School Posts interfaces\nexport interface FetchSchoolPostsAction {\n  type: ActionTypes.FETCH_SCHOOL_POSTS;\n  payload: PostSchoolInterface[];\n}\n\n// School Placements interfaces\nexport interface GetSchoolPlacementAction {\n  type: ActionTypes.GET_SCHOOL_PLACEMENT;\n  payload: placedCandidateInterface[];\n}\n\n// District School Placements interfaces\nexport interface GetDistrictPlacementAction {\n  type: ActionTypes.GET_DISTRICT_PLACEMENT;\n  payload: placedCandidateInterface[];\n}\n\n// District School Placements interfaces\nexport interface GetSessionPlacementAction {\n  type: ActionTypes.GET_SESSION_PLACEMENT;\n  payload: placedCandidateInterface[];\n}\n\nexport interface FetchDistrictPostsAction {\n  type: ActionTypes.FETCH_DISTRICT_POSTS;\n  payload: PostSchoolInterface[];\n}\n\nexport interface CreateSchoolPostAction {\n  type: ActionTypes.CREATE_SCHOOL_POST;\n  payload: PostSchoolInterface;\n}\n\nexport interface UpdateSchoolPostAction {\n  type: ActionTypes.UPDATE_SCHOOL_POST;\n  payload: {\n    TYPE: \"DISTRICT\" | \"SCHOOL\" | \"RECEIVED\";\n    data: PostSchoolInterface;\n  };\n}\n\nexport interface DeleteSchoolPostAction {\n  type: ActionTypes.DELETE_SCHOOL_POST;\n  payload: PostSchoolInterface[];\n}\n\nexport type SchoolActionType =\n  | GetSchoolsAction\n  | GetSchoolsInfoAction\n  | CreateSchoolAction\n  | UpdateSchoolAction\n  | DeleteSchoolAction\n  | FetchSchoolPostsAction\n  | GetSchoolPlacementAction\n  | FetchDistrictPostsAction\n  | CreateSchoolPostAction\n  | UpdateSchoolPostAction\n  | DeleteSchoolPostAction\n  | GetDistrictPlacementAction\n  | GetSessionPlacementAction;\n\n/**\n * * ****************************** ACTIONS *****************************\n */\n\nexport const getSchools = (callback: Function) => {\n  return async (dispatch: Dispatch) => {\n    callback(true, \"\");\n    try {\n      const res = await axios.get<SchoolsInterface[]>(\n        `${API.APPLICATION}/schools`\n      );\n      dispatch<GetSchoolsAction>({\n        type: ActionTypes.GET_SCHOOLS,\n        payload: res.data,\n      });\n      callback(false, \"\", res.data);\n    } catch (error) {\n      console.log(\"Err: \", error);\n      callback(false, errorToText(error));\n    }\n  };\n};\n\nexport const getSchoolsInfo = () => {\n  return async (dispatch: Dispatch) => {\n    setAxiosToken();\n    // const response = await axios.get<AccessRoleType[]>(url);\n\n    dispatch<GetSchoolsInfoAction>({\n      type: ActionTypes.GET_SCHOOLS_INFO,\n      payload: data_school,\n      // payload: response.data,\n    });\n  };\n};\n\nexport const createSchool = (data: SchoolsInterface) => {\n  console.log({ schools: data });\n  return async (dispatch: Dispatch) => {\n    dispatch<CreateSchoolAction>({\n      type: ActionTypes.CREATE_SCHOOL,\n      payload: data,\n    });\n  };\n};\n\nexport const updateSchool = (data: SchoolsInterface) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<UpdateSchoolAction>({\n      type: ActionTypes.UPDATE_SCHOOL,\n      payload: data,\n    });\n  };\n};\n\nexport const deleteSchool = (data: string) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<DeleteSchoolAction>({\n      type: ActionTypes.DELETE_SCHOOL,\n      payload: data,\n    });\n  };\n};\n\nexport const fetchSchoolPosts = (school_id: string, callback: Function) => {\n  return async (dispatch: Dispatch) => {\n    callback(true, \"\");\n    try {\n      const res = await axios.get<PostSchoolInterface[]>(\n        `${API.PLACEMENT}/requestpost/school/${school_id}`\n      );\n\n      console.log({ schoolPosts: res.data });\n\n      dispatch<FetchSchoolPostsAction>({\n        type: ActionTypes.FETCH_SCHOOL_POSTS,\n        payload: res.data,\n      });\n      callback(false, \"\");\n    } catch (error) {\n      console.log(\"Err: \", error);\n      callback(false, errorToText(error));\n    }\n  };\n};\n\nexport const getSchoolPlacement = (school_id: string, callback: Function) => {\n  return async (dispatch: Dispatch) => {\n    callback(true, \"\");\n    try {\n      const res = await axios.get<placedCandidateInterface[]>(\n        `${API.PLACEMENT}/placedcandidate/school/${school_id}`\n      );\n\n      console.log({ getSchoolPlacement: res.data });\n\n      dispatch<GetSchoolPlacementAction>({\n        type: ActionTypes.GET_SCHOOL_PLACEMENT,\n        payload: res.data,\n      });\n      callback(false, \"\", res.data);\n    } catch (error) {\n      console.log(\"Err: \", error);\n      callback(false, errorToText(error));\n    }\n  };\n};\n\nexport const createSchoolPost = (data: PostSchoolInterface) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<CreateSchoolPostAction>({\n      type: ActionTypes.CREATE_SCHOOL_POST,\n      payload: data,\n    });\n  };\n};\n\nexport const updateSchoolPost = (\n  TYPE: \"DISTRICT\" | \"SCHOOL\" | \"RECEIVED\",\n  data: PostSchoolInterface\n) => {\n  console.log({ TYPE, data });\n  return async (dispatch: Dispatch) => {\n    dispatch<UpdateSchoolPostAction>({\n      type: ActionTypes.UPDATE_SCHOOL_POST,\n      payload: { TYPE, data },\n    });\n  };\n};\n\nexport const deleteSchoolPost = (data: PostSchoolInterface[]) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<DeleteSchoolPostAction>({\n      type: ActionTypes.DELETE_SCHOOL_POST,\n      payload: data,\n    });\n  };\n};\n\nexport const fetchDistrictPosts = (district_id: string, callback: Function) => {\n  return async (dispatch: Dispatch) => {\n    callback(true, \"\");\n    try {\n      const res = await axios.get<PostSchoolInterface[]>(\n        `${API.PLACEMENT}/requestpost/district/${district_id}`\n      );\n\n      console.log({ districtPosts: res });\n\n      dispatch<FetchDistrictPostsAction>({\n        type: ActionTypes.FETCH_DISTRICT_POSTS,\n        payload: res.data,\n      });\n      callback(false, \"\");\n    } catch (error) {\n      console.log(\"Err: \", error);\n      callback(false, errorToText(error));\n    }\n  };\n};\n\nexport const getDistrictPlacement = (\n  district_id: string,\n  callback: Function\n) => {\n  return async (dispatch: Dispatch) => {\n    callback(true, \"\");\n    try {\n      const res = await axios.get<placedCandidateInterface[]>(\n        `${API.PLACEMENT}/placedcandidate/district/${district_id}`\n      );\n\n      console.log(\"====================================\");\n      console.log({ getDistrictPlacement: res.data });\n      console.log(\"====================================\");\n\n      dispatch<GetDistrictPlacementAction>({\n        type: ActionTypes.GET_DISTRICT_PLACEMENT,\n        payload: res.data,\n      });\n      callback(false, \"\", res.data);\n    } catch (error) {\n      console.log(\"Err: \", error);\n      callback(false, errorToText(error));\n    }\n  };\n};\nexport const getSessionPlacement = (session_id: string, callback: Function) => {\n  return async (dispatch: Dispatch) => {\n    callback(true, \"\");\n    try {\n      const res = await axios.get<placedCandidateInterface[]>(\n        `${API.PLACEMENT}/placedcandidate/session/${session_id}`\n      );\n\n      console.log(\"====================================\");\n      console.log({ getSessionPlacement: res.data });\n      console.log(\"====================================\");\n\n      dispatch<GetSessionPlacementAction>({\n        type: ActionTypes.GET_SESSION_PLACEMENT,\n        payload: res.data,\n      });\n      callback(false, \"\", res.data);\n    } catch (error) {\n      console.log(\"Err: \", error);\n      callback(false, errorToText(error));\n    }\n  };\n};\n","export interface marksPublicationInterface {\n  publication_id: string;\n  session: string;\n  doneby: string;\n  created_date: string;\n  publication_status: \"PENDING\" | \"PUBLISHED\";\n  status: number;\n  publication_position_marks: publicationInterface[];\n  createdAt: string;\n  updatedAt: string;\n}\n\nexport interface publicationInterface {\n  _id: string;\n  position: string;\n  marks: number;\n  comment: string;\n}\n\nexport interface marksPublicationFormInterface {\n  session: string;\n  doneby: string;\n  created_date: string;\n  publication_position_marks: publicationFormInterface[];\n}\n\nexport interface publicationFormInterface {\n  position: string;\n  marks: number;\n  comment: string;\n}\n\nexport enum MarksPublicationCandidateStatus {\n  Failed = \"Failed\",\n  Passed = \"Passed\",\n}\n\nexport interface MarksPublicationCandidate {\n  user: {\n    in_eduction: boolean;\n    disability: boolean;\n    is_active: boolean;\n    n_id: string;\n    phone_number: string;\n    email: string;\n    createdAt: string;\n    updatedAt: string;\n    user_id: string;\n    user_info: placedCandidateUserInfo;\n  };\n  period: string;\n  position: string;\n  courses: {\n    id: string;\n    marks: number;\n    _id: string;\n  }[];\n  waiting_status: MarksPublicationCandidateStatus;\n  status: number;\n  user_position_marks: number;\n  createdAt: string;\n  updatedAt: string;\n  disability: boolean;\n  gender: string;\n  in_education: boolean;\n  id: string;\n}\n\nexport interface MarksPublicationCandidateToPrintInterface {\n  no: number;\n  names: string;\n  national_id: string;\n  phone: string;\n  email: string;\n  gender: string;\n  position_name: string;\n  marks: number;\n  status: MarksPublicationCandidateStatus;\n}\n\nexport enum marksPublicationCandidateReportContentKeyInterface {\n  applicant_name = \"names\",\n  national_id = \"national_id\",\n  phone_number = \"phone\",\n  email = \"email\",\n  gender = \"gender\",\n  position_name = \"position_name\",\n  marks = \"marks\",\n  status = \"status\",\n}\n\nexport interface marksPublicationReportContentInterface {\n  key: marksPublicationCandidateReportContentKeyInterface;\n  title: string;\n  status: boolean;\n}\n// ---------------------------------------------------------------------------------------------\n\nexport interface placedCandidateInterface {\n  _id: string;\n  status: PlacedCandidateStatus;\n  user_id: string;\n  school_id: string;\n  position_id: string;\n  waiting_list_id: string;\n  request_id: string;\n  createdAt: string;\n  comment: string;\n  updatedAt: string;\n  __v: number;\n  n_id: string;\n  phone_number: string;\n  email: string;\n  user_info: placedCandidateUserInfo;\n}\n\nexport interface placedCandidateUserInfo {\n  document_type: string;\n  issue_number: string;\n  date_of_issue: string;\n  date_of_expiry: string;\n  place_of_issue: string;\n  application_number: string;\n  fname: string;\n  lname: string;\n  father_names: string;\n  mother_names: string;\n  sex: string;\n  date_of_birth: string;\n  place_of_birth: string;\n  country_of_birth: string;\n  village_id: string;\n  village: string;\n  cell: string;\n  sector: string;\n  district: string;\n  province: string;\n  civil_status: string;\n  spouse: null;\n  status: string;\n  photo: string;\n}\n\nexport enum PlacedCandidateStatus {\n  PENDING = \"pending\",\n  PLACED = \"placed\",\n  REJECTED = \"rejected\",\n}\n\nexport enum WaitingListStatus {\n  WAITING = \"waiting\",\n  PENDING = \"pending\",\n  PLACED = \"placed\",\n}\n\nexport interface PlacementToPrintInterface {\n  no: number;\n  names: string;\n  national_id: string;\n  phone: string;\n  email: string;\n  school_name: string;\n  position_name: string;\n  status: PlacedCandidateStatus;\n}\n\nexport enum placementReportContentKeyInterface {\n  applicant_name = \"names\",\n  national_id = \"national_id\",\n  phone_number = \"phone\",\n  email = \"email\",\n  school_name = \"school_name\",\n  position_name = \"position_name\",\n  status = \"status\",\n}\n\nexport interface placementReportContentInterface {\n  key: placementReportContentKeyInterface;\n  title: string;\n  status: boolean;\n}\n","import axios from \"axios\";\nimport React, { useState } from \"react\";\nimport { MdTurnedIn } from \"react-icons/md\";\nimport { VscLoading } from \"react-icons/vsc\";\nimport { connect } from \"react-redux\";\nimport { PushPopupAlert } from \"../../actions\";\nimport { publishPosition } from \"../../actions/settings\";\nimport { PopupAlertData } from \"../../components/Alert/Popup\";\nimport NoResult, { NoResultThemes } from \"../../components/NoResult/NoResult\";\nimport { PopupAlertTheme } from \"../../interfaces/popupAlert\";\nimport { PositionAPI } from \"../../interfaces/position\";\nimport { API } from \"../../utils/api\";\nimport { errorToText } from \"../../utils/functions\";\nimport ViewRequirements from \"./ViewRequirements\";\n\nexport interface PositionRequirementTableInterface {\n  category_id: string;\n  category_title: string;\n  subcategory_id: string;\n  subcategory_title: string;\n  field_title: string;\n  field_id: string;\n  // _id: string;\n  required: boolean;\n}\n\nexport const FC_PositionDistinctCategory = (\n  PositionData: PositionAPI[]\n): {\n  PositionsTemp: PositionRequirementTableInterface[];\n  DistinctCategoriesTemp: PositionRequirementTableInterface[];\n  DistinctSubCategoriesTemp: PositionRequirementTableInterface[];\n} => {\n  let PositionsTemp: PositionRequirementTableInterface[] = [];\n  let DistinctCategoriesTemp: PositionRequirementTableInterface[] = [],\n    DistinctCategoriesIds: string[] = [];\n  let DistinctSubCategoriesTemp: PositionRequirementTableInterface[] = [],\n    DistinctSubCategoriesIds: string[] = [];\n  // LOOP IN ALL POSITIONS ==========================\n  for (let pos in PositionData) {\n    // GET CURRENT POSITION ====================\n    let thisPosition = PositionData[pos];\n    // GET REQUIREMENTS OF THE CURRENT POSITION ====================\n    let requirements = thisPosition.requirements;\n    // LOOP THROUGH CURRENT POSITION REQUIREMENTS ==========================\n    for (let req in requirements) {\n      let thisRequirements = requirements[req];\n      // GET DOC CATEGORY OF THE CURRENT POSITION REQUIREMENTS ====================\n      let thisCategory = thisRequirements.category;\n      // GET DOC SUB CATEGORY OF THE CURRENT POSITION REQUIREMENTS ====================\n      let thisSubCategory = thisRequirements.subcategory;\n      // LOOP THROUGH FIELDS OF THE CURRENT POSITION REQUIREMENTS ==========================\n      if (thisCategory) {\n        for (let field in thisRequirements.position_requirement) {\n          // GET FIELDS OF THE CURRENT POSITION REQUIREMENTS ====================\n          let thisField = thisRequirements.position_requirement[field];\n          // ADD CURRENT CATEGORY, SUB CATEGORY & FIELDS OF THE CURRENT POSITION REQUIREMENTS IN POSITIONS TEMP ====================\n          PositionsTemp.push({\n            category_id: thisCategory.user_detail_category_id,\n            category_title: thisCategory.title,\n            subcategory_id: thisSubCategory.user_detail_subcategory_id,\n            subcategory_title: thisSubCategory.title,\n            field_title: thisField.title,\n            field_id: thisField._id,\n            required: thisField.required,\n          });\n        }\n\n        // ADD CATEOGRY OF THE CURRENT POSITION REQUIREMENTS TO ARRAY ====================\n        if (\n          !DistinctCategoriesIds.includes(thisCategory.user_detail_category_id)\n        ) {\n          DistinctCategoriesIds.push(thisCategory.user_detail_category_id);\n          DistinctCategoriesTemp.push({\n            category_id: thisCategory.user_detail_category_id,\n            category_title: thisCategory.title,\n            subcategory_id: \"\",\n            subcategory_title: \"\",\n            field_title: \"\",\n            field_id: \"\",\n            required: false,\n          });\n        }\n\n        // ADD SUB CATEOGRY OF THE CURRENT POSITION REQUIREMENTS TO ARRAY ====================\n        if (\n          !DistinctSubCategoriesIds.includes(\n            thisSubCategory.user_detail_subcategory_id\n          )\n        ) {\n          DistinctSubCategoriesIds.push(\n            thisSubCategory.user_detail_subcategory_id\n          );\n          DistinctSubCategoriesTemp.push({\n            category_id: thisSubCategory.category_id,\n            category_title: \"\",\n            subcategory_id: thisSubCategory.user_detail_subcategory_id,\n            subcategory_title: thisSubCategory.title,\n            field_title: \"\",\n            field_id: \"\",\n            required: false,\n          });\n        }\n      }\n    }\n    // DistinctCategoriesIds.;\n  }\n\n  return { PositionsTemp, DistinctCategoriesTemp, DistinctSubCategoriesTemp };\n};\n\nexport interface ViewPositionProps {\n  thisPosition: PositionAPI;\n  setThisPosition?: (value: PositionAPI | null) => void;\n  publishPosition: Function;\n  isGuest?: boolean;\n  PushPopupAlert: (alert: PopupAlertData) => void;\n}\n\nconst ViewPosition = (props: ViewPositionProps) => {\n  const [loadingRequest, setLoadingRequest] = useState<string>(\"\");\n\n  const publishPosition = async (\n    position_id: string,\n    status: boolean,\n    name: string\n  ) => {\n    if (\n      window.confirm(\n        `Are you sure do you want to ${\n          status ? \"publish\" : \"unpublish\"\n        } this position?`\n      )\n    ) {\n      setLoadingRequest(position_id);\n      try {\n        const res = await axios.patch(\n          `${API.APPLICATION}/publishposition/${position_id}`,\n          {\n            isPublished: status,\n          }\n        );\n        props.publishPosition({ position_id, status });\n        props.PushPopupAlert({\n          title: `${name} ${\n            status ? \" published\" : \" stopped on application\"\n          } successfully`,\n          theme: PopupAlertTheme.info,\n        });\n        let thisPositionCopy = { ...props.thisPosition };\n        thisPositionCopy.isPublished = status;\n        props.setThisPosition && props.setThisPosition(thisPositionCopy);\n        console.log(\"Position publish: \", res);\n      } catch (error) {\n        console.error(\"err: \", error);\n        props.PushPopupAlert({\n          title: errorToText(error),\n          theme: PopupAlertTheme.danger,\n        });\n      }\n      setLoadingRequest(\"\");\n    }\n  };\n\n  return (\n    <div className=\"w-full\">\n      <div className=\"w-full bg-gray-100 px-4 py-1 animate__animated animate__fadeIn\">\n        <div className=\"flex flex-col mb-2\">\n          <span className=\"text-blue-600 font-bold text-2xl\">\n            {props.thisPosition.position_title}\n          </span>\n          <div className=\"flex items-center gap-2 text-base text-gray-600\">\n            <span className={`italic`}>Desc:</span>\n            <span className=\"font-semibold\">\n              {props.thisPosition.description}\n            </span>\n          </div>\n          <div className=\"flex items-center gap-2 text-base text-gray-600\">\n            <span className={`italic`}>School level:</span>\n            <span className=\"font-semibold\">\n              {props.thisPosition.school_level_id.school_level_name}\n            </span>\n          </div>\n          <div className=\"flex items-center gap-2 text-base text-gray-600\">\n            <span className={`italic`}>Institute:</span>\n            <span className=\"font-semibold\">\n              {\n                props.thisPosition.education_institute_id\n                  .education_category_title\n              }\n            </span>\n          </div>\n          <div className=\"flex items-center gap-2 text-base text-gray-600\">\n            <span className={`italic`}>Courses:</span>\n            <span className=\"flex items-center gap-2\">\n              {props.thisPosition.courses.map((item, index) => (\n                <div\n                  key={index + item.course_id}\n                  className=\"flex items-center gap-1\"\n                >\n                  <span className=\"font-semibold\">{item.course_name}</span>\n                  <span className=\"text-gray-600\">({item.course_code})</span>\n                  {index !== props.thisPosition.courses.length - 1 && \",\"}\n                </div>\n              ))}\n            </span>\n          </div>\n          <div className=\"flex items-center gap-2 text-base text-gray-600\">\n            <span className={`italic`}>Status:</span>\n\n            <div className=\"flex flex-row items-center gap-2 mt-1\">\n              {!props.isGuest ? (\n                <div\n                  className={`relative ${\n                    loadingRequest.length > 0\n                      ? \"cursor-not-allowed\"\n                      : \"cursor-pointer\"\n                  } flex items-center gap-1`}\n                  onClick={() =>\n                    !loadingRequest.length &&\n                    !props.isGuest &&\n                    publishPosition(\n                      props.thisPosition.position_id,\n                      !props.thisPosition.isPublished,\n                      props.thisPosition.position_title\n                    )\n                  }\n                >\n                  <span className=\"block w-14 h-8 bg-gray-100 hover:border-gray-100 rounded-full shadow-inner\"></span>\n                  <span\n                    className={`absolute block w-6 h-6 mt-1 ml-1 rounded-full shadow inset-y-0 left-0 focus-within:shadow-outline transition-transform duration-500 ease-in-out ${\n                      !props.thisPosition.isPublished\n                        ? \"bg-yellow-500\"\n                        : \"bg-green-500 transform translate-x-full\"\n                    }`}\n                  ></span>\n                  {loadingRequest === props.thisPosition.position_id ? (\n                    <VscLoading className=\"animate__animated animate__rotateIn animate__infinite\" />\n                  ) : (\n                    <span className=\"font-medium\">\n                      {props.thisPosition.isPublished\n                        ? \"Published\"\n                        : \"Unpublished\"}\n                    </span>\n                  )}\n                </div>\n              ) : props.thisPosition.isPublished ? (\n                <span className=\"text-green-600 font-semibold text-xl italic\">\n                  Published\n                </span>\n              ) : (\n                <span className=\"text-yellow-600 font-semibold text-xl italic\">\n                  Not Published\n                </span>\n              )}\n            </div>\n          </div>\n        </div>\n        <div className=\"bg-white w-full rounded p-2 mb-2\">\n          <div className=\"text-blue-500 text-2xl font-bold my-2\">\n            Position Requirements\n          </div>\n          {props.thisPosition.requirements.length > 0 ? (\n            FC_PositionDistinctCategory([\n              props.thisPosition,\n            ]).DistinctCategoriesTemp.map((item, index) => (\n              <div\n                className=\"bg-gray-100 rounded p-2\"\n                key={index + item.category_id}\n              >\n                <div className=\"flex items-center gap-2 text-2xl text-gray-500 font-bold\">\n                  <MdTurnedIn />\n                  <span>{item.category_title}</span>\n                </div>\n                <div className=\"border bg-white mt-1\">\n                  <ViewRequirements\n                    requirements={FC_PositionDistinctCategory([\n                      props.thisPosition,\n                    ]).PositionsTemp.filter(\n                      (req) => req.category_id === item.category_id\n                    )}\n                  />\n                </div>\n              </div>\n            ))\n          ) : (\n            <NoResult\n              theme={NoResultThemes.Dark}\n              value={\"No requirements\"}\n            ></NoResult>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default connect(null, { publishPosition, PushPopupAlert })(ViewPosition);\n","import axios from \"axios\";\nimport React, { Component } from \"react\";\nimport { AiOutlineCaretRight } from \"react-icons/ai\";\nimport { BiBuildingHouse } from \"react-icons/bi\";\nimport { IoIosClose } from \"react-icons/io\";\nimport { MdFilterList, MdLabel, MdModeEdit, MdSave } from \"react-icons/md\";\nimport { connect } from \"react-redux\";\nimport {\n  Auth,\n  loadEducationCategories,\n  PushPopupAlert,\n} from \"../../../actions\";\nimport { getAllRoom } from \"../../../actions/location\";\nimport {\n  createSchool,\n  getSchools,\n  updateSchool,\n  deleteSchool,\n} from \"../../../actions/schools\";\nimport { PopupAlertData } from \"../../../components/Alert/Popup\";\nimport Modal, { ModalSize, Themes } from \"../../../components/Modal/Modal\";\nimport {\n  MainItem,\n  SideNavigation,\n  SubItem,\n  SubItemContainer,\n} from \"../../../components/Navigation/SideNavigation\";\nimport { education_category } from \"../../../interfaces\";\nimport { PopupAlertTheme } from \"../../../interfaces/popupAlert\";\nimport { StoreState } from \"../../../reducers\";\nimport { isEmptyOrSpaces, toTwoDigit } from \"../../../shared/dataTest\";\nimport {\n  SchoolsInterface,\n  RoomLocationInterface,\n  DistrictInterface,\n  LocationSectorTableInterface,\n  SectorInterface,\n} from \"../../../shared/interfaces\";\nimport { API } from \"../../../utils/api\";\nimport { errorToText } from \"../../../utils/errors\";\n\nexport const LocationsSectorInArray = (\n  LocationData: RoomLocationInterface[]\n): LocationSectorTableInterface[] | [] => {\n  let locationTemp: LocationSectorTableInterface[] = [];\n  for (let p in LocationData) {\n    let districts = LocationData[p].districts;\n    for (let d in districts) {\n      let sectors = districts[d].sectors;\n      for (let s in sectors) {\n        locationTemp.push({\n          province_id: LocationData[p]._id,\n          province_name: LocationData[p].province_name,\n          province_code: LocationData[p].province_code,\n          district_id: districts[d]._id,\n          district_name: districts[d].district_name,\n          district_code: districts[d].district_code,\n          sector_id: sectors[s].sector_id,\n          sector_name: sectors[s].sector_name,\n          sector_code: sectors[s].sector_code,\n        });\n      }\n    }\n  }\n  return locationTemp;\n};\n\nexport const getSchoolById = (\n  schools: SchoolsInterface[],\n  school_id: string\n): SchoolsInterface | undefined => {\n  return schools.find((school) => school._id === school_id);\n};\ninterface AppProps {\n  auth: Auth;\n  education_categories: education_category[] | null;\n  allRoom: RoomLocationInterface[];\n  schools: SchoolsInterface[];\n  getSchools: Function;\n  loadEducationCategories: (callback: (loading: boolean) => void) => void;\n  createSchool: Function;\n  getAllRoom: Function;\n  updateSchool: Function;\n  deleteSchool: Function;\n  PushPopupAlert: (alert: PopupAlertData) => void;\n}\n\ninterface AppState {\n  loading: boolean;\n  loadingSchool: boolean;\n  loadingRequest: boolean;\n  districtFilterStatus: boolean;\n  edicationCategoryFilterStatus: boolean;\n  provinceFilterStatus: boolean;\n  thisEdication: education_category | null;\n  thisProvince: RoomLocationInterface | null;\n  thisDistrict: DistrictInterface | null;\n  district: DistrictInterface[];\n  schoolList: SchoolsInterface[];\n  modalState: \"\" | \"CREATE\" | \"UPDATE\";\n  error: { element: string; msg: string } | null;\n  schoolName: string;\n  schoolCode: number;\n  thisSchool: SchoolsInterface | null;\n  instituteId: string;\n  provinceId: string;\n  districtId: string;\n  sectorId: string;\n}\n\nclass index extends Component<AppProps, AppState> {\n  constructor(props: AppProps) {\n    super(props);\n\n    this.state = {\n      loading: true,\n      loadingSchool: true,\n      loadingRequest: false,\n      districtFilterStatus: false,\n      edicationCategoryFilterStatus: false,\n      provinceFilterStatus: false,\n      thisEdication: null,\n      thisProvince: null,\n      thisDistrict: null,\n      district: [],\n      schoolList: this.props.schools,\n      modalState: \"\",\n      error: null,\n      schoolName: \"\",\n      schoolCode: 0,\n      thisSchool: null,\n      instituteId: \"\",\n      provinceId: \"\",\n      districtId: \"\",\n      sectorId: \"\",\n    };\n  }\n\n  setLoading = (state: boolean) => {\n    this.setState({ loading: state });\n  };\n\n  setLoadingSchool = (state: boolean) => {\n    this.setState({ loadingSchool: state });\n  };\n\n  setLoadingRequest = (state: boolean) => {\n    this.setState({ loadingRequest: state });\n  };\n\n  setError = (\n    data: {\n      element: string;\n      msg: string;\n    } | null\n  ) => {\n    this.setState({ error: data });\n  };\n\n  componentDidMount = () => {\n    if (!this.props.allRoom.length && this.state.loading) {\n      this.props.getAllRoom((status: boolean, msg: string) => {\n        this.setLoading(status);\n        if (!status && msg.length > 0) console.error(msg);\n      });\n    } else if (this.state.loading) {\n      this.setLoading(false);\n    }\n\n    if (\n      this.props.education_categories === null ||\n      this.props.education_categories.length === 0\n    ) {\n      this.props.loadEducationCategories(this.setLoading);\n    }\n\n    if (!this.props.schools.length && this.state.loadingSchool) {\n      this.props.getSchools(\n        (status: boolean, msg: string, data?: SchoolsInterface[]) => {\n          console.log(status, msg);\n          this.setLoadingSchool(status);\n          if (!status) {\n            if (msg.length > 0) {\n              console.error({ loadingCandidatesError: msg });\n            }\n            if (data) {\n              this.setState({ schoolList: data });\n            }\n          }\n        }\n      );\n    } else {\n      this.setLoadingSchool(false);\n    }\n  };\n\n  handleSubmit = async (e: React.FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n    if (isEmptyOrSpaces(this.state.schoolName)) {\n      return this.setError({\n        element: \"school_name\",\n        msg: \"School name is required\",\n      });\n    }\n    if (this.state.schoolCode <= 0) {\n      return this.setError({\n        element: \"school_code\",\n        msg: \"Invalid school code, School code less than 0\",\n      });\n    }\n    if (isEmptyOrSpaces(this.state.instituteId)) {\n      return this.setError({\n        element: \"edication_id\",\n        msg: \"Education Institute is required\",\n      });\n    }\n\n    if (isEmptyOrSpaces(this.state.districtId)) {\n      return this.setError({\n        element: \"districtId_id\",\n        msg: \"District is required\",\n      });\n    }\n    if (isEmptyOrSpaces(this.state.sectorId)) {\n      return this.setError({\n        element: \"sector_id\",\n        msg: \"Sector is required\",\n      });\n    }\n\n    const thisSector = this.getSectors()!.find(\n      (item) => item.sector_id === this.state.sectorId\n    );\n    if (!thisSector) {\n      return this.setError({\n        element: \"sector_id\",\n        msg: \"Unknown selected sector\",\n      });\n    }\n\n    this.setLoadingRequest(true);\n    try {\n      let res;\n      if (this.state.modalState === \"CREATE\") {\n        res = await axios.post<{\n          data: {\n            status: boolean;\n            school_name: string;\n            school_code: number;\n            district_id: string;\n            sector_id: string;\n            sector_code: number;\n            education_category_id: string;\n            shool_id: string;\n          };\n        }>(`${API.APPLICATION}/schools`, {\n          school_name: this.state.schoolName,\n          school_code: this.state.schoolCode,\n          district_id: this.state.districtId,\n          sector_id: this.state.sectorId,\n          sector_code: thisSector.sector_code,\n          education_category_id: this.state.instituteId,\n        });\n        if (res.data) {\n          console.log({ res });\n          // this.setState({\n          //   schoolList: [\n          //     ...this.state.schoolList,\n          //     {\n          //       _id: res.data.data.shool_id,\n          //       status: res.data.data.status,\n          //       school_name: res.data.data.school_name,\n          //       school_code: res.data.data.school_code,\n          //       sector_id: res.data.data.sector_id,\n          //       sector_code: res.data.data.sector_code,\n          //       district_id: res.data.data.district_id,\n          //       district_code: res.data.data.district_code,\n          //       province_id: res.data.data.province_id,\n          //       province_code: res.data.data.province_code,\n          //       education_category_id: res.data.data.education_category_id,\n          //     },\n          //   ],\n          // });\n          this.props.createSchool({\n            _id: res.data.data.shool_id,\n            status: res.data.data.status,\n            school_name: res.data.data.school_name,\n            school_code: res.data.data.school_code,\n            sector_code: res.data.data.sector_code,\n            district_id: res.data.data.district_id,\n            sector_id: res.data.data.sector_id,\n            education_category_id: res.data.data.education_category_id,\n          });\n          this.props.PushPopupAlert({\n            title: \"New School created successfully\",\n            theme: PopupAlertTheme.success,\n          });\n          this.setLoadingRequest(false);\n          this.setState({\n            schoolName: \"\",\n            schoolCode: 0,\n            districtId: \"\",\n            sectorId: \"\",\n            instituteId: \"\",\n            provinceId: \"\",\n            thisSchool: null,\n            modalState: \"\",\n          });\n        }\n      } else if (this.state.thisSchool && this.state.modalState === \"UPDATE\") {\n        res = await axios.patch<{ update: SchoolsInterface }>(\n          `${API.APPLICATION}/schools`,\n          {\n            school_id: this.state.thisSchool._id,\n            school_name: this.state.schoolName,\n            school_code: this.state.schoolCode,\n            district_id: this.state.districtId,\n            sector_id: this.state.sectorId,\n            sector_code: thisSector.sector_code,\n            education_category_id: this.state.instituteId,\n          }\n        );\n        if (res.data) {\n          console.log({ res });\n          this.props.updateSchool({\n            _id: this.state.thisSchool._id,\n            status: true,\n            sector_code: thisSector.sector_code,\n            school_name: this.state.schoolName,\n            school_code: this.state.schoolCode,\n            district_id: this.state.districtId,\n            sector_id: this.state.sectorId,\n            education_category_id: this.state.instituteId,\n          });\n          this.props.PushPopupAlert({\n            title: \"School updated successfully\",\n            theme: PopupAlertTheme.success,\n          });\n          this.setLoadingRequest(false);\n          this.setState({\n            schoolName: \"\",\n            schoolCode: 0,\n            districtId: \"\",\n            sectorId: \"\",\n            instituteId: \"\",\n            provinceId: \"\",\n            thisSchool: null,\n            modalState: \"\",\n          });\n        }\n      }\n    } catch (error) {\n      console.log({ doc_category_error: error });\n      this.props.PushPopupAlert({\n        title: errorToText(error),\n        theme: PopupAlertTheme.danger,\n      });\n      this.setLoadingRequest(false);\n    }\n  };\n\n  handleDelete = async (schoolId: string) => {\n    if (window.confirm(\"Are you sure do you want to delete this room?\")) {\n      this.setLoadingRequest(true);\n      try {\n        const res = await axios.delete<SchoolsInterface>(\n          `${API.APPLICATION}/schools/${schoolId}`\n        );\n\n        if (res.data) {\n          console.log({ res });\n          this.props.deleteSchool(schoolId);\n          this.props.PushPopupAlert({\n            title: \"School deleted successfully\",\n            theme: PopupAlertTheme.success,\n          });\n        }\n      } catch (error) {\n        console.log({ province_error: error });\n        this.props.PushPopupAlert({\n          title: errorToText(error),\n          theme: PopupAlertTheme.danger,\n        });\n      }\n      this.setLoadingRequest(false);\n    }\n  };\n\n  filterSchools = (\n    FILTER_TYPE: \"INSTITUTE\" | \"DISTRICT\",\n    FILTER_VALUE: string,\n    IGNORE_DISTRICT: boolean = false\n  ) => {\n    var newArray: SchoolsInterface[] = [];\n    if (FILTER_TYPE === \"INSTITUTE\") {\n      if (this.state.thisDistrict && !IGNORE_DISTRICT) {\n        if (FILTER_VALUE === \"ALL\") {\n          newArray = this.props.schools.filter(\n            (edication) =>\n              edication.district_id === this.state.thisDistrict!._id\n          );\n        } else {\n          newArray = this.props.schools.filter(\n            (edication) =>\n              edication.education_category_id === FILTER_VALUE &&\n              edication.district_id === this.state.thisDistrict!._id\n          );\n        }\n      } else {\n        if (FILTER_VALUE === \"ALL\") {\n          newArray = this.props.schools;\n        } else {\n          newArray = this.props.schools.filter(\n            (edication) => edication.education_category_id === FILTER_VALUE\n          );\n        }\n      }\n    }\n    if (FILTER_TYPE === \"DISTRICT\") {\n      if (this.state.thisEdication) {\n        if (FILTER_VALUE === \"ALL\") {\n          newArray = this.props.schools.filter(\n            (edication) =>\n              edication.education_category_id ===\n              this.state.thisEdication!.education_institute_id\n          );\n        } else {\n          newArray = this.props.schools.filter(\n            (edication) =>\n              edication.district_id === FILTER_VALUE &&\n              edication.education_category_id ===\n                this.state.thisEdication!.education_institute_id\n          );\n        }\n      } else {\n        if (FILTER_VALUE === \"ALL\") {\n          newArray = this.props.schools;\n        } else {\n          newArray = this.props.schools.filter(\n            (edication) => edication.district_id === FILTER_VALUE\n          );\n        }\n      }\n    }\n    this.setState({ schoolList: newArray });\n  };\n\n  countSchool = (\n    FILTER_TYPE: \"DEFAULT\" | \"EDUCATION\" | \"DISTRICT\" = \"DEFAULT\",\n    FILTER_VALUE: string = \"ALL\"\n  ): string => {\n    let counts: number = 0;\n    if (FILTER_TYPE === \"DEFAULT\") {\n      counts = this.state.schoolList.length;\n    } else if (FILTER_TYPE === \"EDUCATION\") {\n      counts = this.state.schoolList.filter(\n        (item) => item.education_category_id === FILTER_VALUE\n      ).length;\n    } else if (FILTER_TYPE === \"DISTRICT\") {\n      counts = this.state.schoolList.filter(\n        (item) => item.district_id === FILTER_VALUE\n      ).length;\n    }\n    return toTwoDigit(counts);\n  };\n\n  getProvinceByCode = (\n    province_code: number\n  ): RoomLocationInterface | undefined => {\n    return this.props.allRoom.find(\n      (item) => item.province_code === province_code\n    );\n  };\n\n  getDistrictByCode = (\n    province_code: number,\n    district_code: number\n  ): DistrictInterface | undefined => {\n    let province = this.props.allRoom.find(\n      (item) => item.province_code === province_code\n    );\n    return province\n      ? province.districts.find((item) => item.district_code === district_code)\n      : undefined;\n  };\n\n  getSectorByCode = (\n    province_code: number,\n    district_code: number,\n    sector_code: number\n  ): SectorInterface | undefined => {\n    const province = this.props.allRoom.find(\n      (item) => item.province_code === province_code\n    );\n\n    if (province && province.districts) {\n      const district = province.districts.find(\n        (item) => item.district_code === district_code\n      );\n      return district && district.sectors\n        ? district.sectors.find((item) => item.sector_code === sector_code)\n        : undefined;\n    }\n  };\n  getSectors = () => {\n    let province = this.props.allRoom.find(\n      (province) => province._id === this.state.provinceId\n    );\n    if (province && province.districts.length > 0) {\n      let district = province.districts.find(\n        (item) => item._id === this.state.districtId\n      );\n      if (district) {\n        return district.sectors;\n      }\n    }\n    return null;\n  };\n\n  render() {\n    if (this.state.loadingSchool || this.state.loading) {\n      return (\n        <div className=\"text-center mt-7 font-bold text-4xl text-gray-400 animate-pulse\">\n          Loading schools...\n        </div>\n      );\n    }\n    return (\n      <React.Fragment>\n        <SideNavigation>\n          {this.state.loading ? (\n            <section className=\"animate-pulse\">\n              <div className=\"bg-gray-400 font-bold mb-2 h-7 px-2 rounded-md cursor-wait\"></div>\n              <div className=\"bg-gray-400 font-bold mb-2 h-7 px-2 rounded-md cursor-wait\"></div>\n              <div className=\"bg-gray-400 font-bold mb-2 h-7 px-2 rounded-md cursor-wait\"></div>\n            </section>\n          ) : (\n            <React.Fragment>\n              {/* EDUCATION CATEGORY sections */}\n              <span className=\"font-semibold text-lg text-gray-500\">\n                Filter by Institute\n              </span>\n              <section\n                className={`mt-2 ${\n                  this.state.loadingRequest && \"cursor-pointer\"\n                }`}\n                onClick={() =>\n                  !this.state.loadingRequest &&\n                  this.setState({\n                    edicationCategoryFilterStatus:\n                      !this.state.edicationCategoryFilterStatus,\n                  })\n                }\n              >\n                <MainItem\n                  title={\n                    !this.state.thisEdication\n                      ? \"Choose Education Institute\"\n                      : this.state.thisEdication.education_category_title\n                  }\n                  active={\n                    this.state.edicationCategoryFilterStatus ||\n                    this.state.thisEdication !== null\n                      ? true\n                      : false\n                  }\n                />\n              </section>\n              {this.state.edicationCategoryFilterStatus &&\n                this.props.education_categories &&\n                this.props.education_categories.length > 0 && (\n                  <SubItemContainer>\n                    {this.props.education_categories &&\n                      this.props.education_categories.map(\n                        (edication, index) => (\n                          <section\n                            key={edication.education_institute_id + index}\n                            onClick={() =>\n                              !this.state.loadingRequest &&\n                              (this.setState({\n                                thisEdication: edication,\n                                edicationCategoryFilterStatus: false,\n                              }),\n                              this.filterSchools(\n                                \"INSTITUTE\",\n                                edication.education_institute_id\n                              ))\n                            }\n                          >\n                            <SubItem\n                              title={edication.education_category_title}\n                              icon={MdLabel}\n                              active={\n                                this.state.thisEdication\n                                  ? edication.education_institute_id ===\n                                    this.state.thisEdication\n                                      .education_institute_id\n                                  : false\n                              }\n                            />\n                          </section>\n                        )\n                      )}\n                  </SubItemContainer>\n                )}\n              {/* end EDUCATION CATEGORY sections */}\n\n              {/* province sections */}\n              <section>\n                <span className=\"font-semibold text-lg text-gray-500\">\n                  Filter by District\n                </span>\n                <section\n                  className=\"mt-2\"\n                  onClick={() =>\n                    !this.state.loadingRequest &&\n                    this.setState({\n                      provinceFilterStatus: !this.state.provinceFilterStatus,\n                      edicationCategoryFilterStatus: false,\n                      districtFilterStatus: false,\n                    })\n                  }\n                >\n                  <MainItem\n                    title={\n                      !this.state.thisProvince\n                        ? \"Choose Province\"\n                        : this.state.thisProvince.province_name\n                    }\n                    active={\n                      this.state.provinceFilterStatus ||\n                      this.state.thisProvince !== null\n                        ? true\n                        : false\n                    }\n                  />\n                </section>\n              </section>\n              {this.state.provinceFilterStatus &&\n                this.props.allRoom &&\n                this.props.allRoom.length > 0 && (\n                  <SubItemContainer>\n                    {this.props.allRoom &&\n                      this.props.allRoom.map((province, index) => (\n                        <section\n                          key={province._id + index}\n                          onClick={() =>\n                            !this.state.loadingRequest &&\n                            (this.setState({\n                              provinceFilterStatus: false,\n                              thisProvince: province,\n                              thisDistrict: null,\n                            }),\n                            this.state.thisEdication &&\n                              this.filterSchools(\n                                \"INSTITUTE\",\n                                this.state.thisEdication.education_institute_id,\n                                true\n                              ))\n                          }\n                        >\n                          <SubItem\n                            title={province.province_name}\n                            icon={MdLabel}\n                            active={\n                              this.state.thisProvince\n                                ? province._id === this.state.thisProvince._id\n                                : false\n                            }\n                          />\n                        </section>\n                      ))}\n                  </SubItemContainer>\n                )}\n              {/* end province sections */}\n\n              {/* DISTRICT sections */}\n              {this.state.thisProvince && (\n                <section\n                  className=\"mt-2\"\n                  onClick={() =>\n                    !this.state.loadingRequest &&\n                    this.setState({\n                      edicationCategoryFilterStatus: false,\n                      provinceFilterStatus: false,\n                      districtFilterStatus: !this.state.districtFilterStatus,\n                    })\n                  }\n                >\n                  <MainItem\n                    title={\n                      !this.state.thisDistrict\n                        ? \"Choose District\"\n                        : this.state.thisDistrict.district_name\n                    }\n                    active={\n                      this.state.districtFilterStatus ||\n                      this.state.thisDistrict !== null\n                        ? true\n                        : false\n                    }\n                  />\n                </section>\n              )}\n              {this.state.districtFilterStatus &&\n                this.state.thisProvince &&\n                this.state.thisProvince.districts.length > 0 && (\n                  <SubItemContainer>\n                    {this.state.thisProvince &&\n                      this.state.thisProvince.districts.map(\n                        (district, index) => (\n                          <section\n                            key={district._id + index}\n                            onClick={() =>\n                              !this.state.loadingRequest &&\n                              (this.setState({\n                                thisDistrict: district,\n                                districtFilterStatus: false,\n                              }),\n                              this.filterSchools(\"DISTRICT\", district._id))\n                            }\n                          >\n                            <SubItem\n                              title={district.district_name}\n                              icon={MdLabel}\n                              active={\n                                this.state.thisDistrict\n                                  ? district._id === this.state.thisDistrict._id\n                                  : false\n                              }\n                            />\n                          </section>\n                        )\n                      )}\n                  </SubItemContainer>\n                )}\n              {/* end DISTRICT sections */}\n            </React.Fragment>\n          )}\n        </SideNavigation>\n\n        {/* BODY =================================== */}\n        <div className=\"w-full my-5 px-1\">\n          {/* header title */}\n          <div className=\"flex items-start justify-between\">\n            <div className=\"flex flex-row items-center\">\n              <BiBuildingHouse className=\"text-blue-500 w-28 h-28\" />\n              {console.log({\n                LocationsSectorInArray: LocationsSectorInArray(\n                  this.props.allRoom\n                ),\n              })}\n              {console.log({ allRoom: this.props.allRoom })}\n              <div className=\"flex flex-col\">\n                <h1 className=\"text-3xl font-semibold\">Schools Management</h1>\n                <div className=\"flex flex-row items-center mx-2 md:gap-3 gap-2\">\n                  <div className=\"flex flex-col mt-1\">\n                    <span className=\"text-gray-600 text-base\">\n                      All School(s)\n                    </span>\n                    <span className=\"text-gray-600 text-2xl font-bold\">\n                      {this.countSchool()}\n                    </span>\n                  </div>\n                  {this.props.education_categories &&\n                    this.props.education_categories.length > 0 &&\n                    this.props.education_categories.map((education, index) => (\n                      <div\n                        className=\"flex flex-col mt-1\"\n                        key={index + education.education_institute_id}\n                      >\n                        <span className=\"text-gray-600 text-base\">\n                          {education.education_category_title}\n                        </span>\n                        <span className=\"text-gray-600 text-2xl font-bold\">\n                          {this.countSchool(\n                            \"EDUCATION\",\n                            education.education_institute_id\n                          )}\n                        </span>\n                      </div>\n                    ))}\n                </div>\n              </div>\n            </div>\n          </div>\n          {/* end header title */}\n\n          <div className=\"md:w-98 bg-white mx-auto md:p-2\">\n            <div className=\"flex items-start justify-between\">\n              <div>\n                {this.state.thisEdication && (\n                  <div className=\"flex\">\n                    <div className=\"flex items-center gap-1 mx-1\">\n                      <MdFilterList className=\"text-gray-600\" />\n                      <span className=\"font-semibold text-gray-500\">\n                        Institute:\n                      </span>\n                      <span className=\"font-semibold text-blue-700\">\n                        {this.state.thisEdication.education_category_title}\n                      </span>\n                    </div>\n                    <IoIosClose\n                      className=\"cursor-pointer rounded-full hover:bg-red-500 hover:text-white\"\n                      onClick={() =>\n                        !this.state.loading &&\n                        (this.setState({ thisEdication: null }),\n                        this.filterSchools(\"INSTITUTE\", \"ALL\"))\n                      }\n                      title=\"Clean Education Institute filter\"\n                    />\n                  </div>\n                )}\n                {this.state.thisProvince && (\n                  <div className=\"flex\">\n                    <div className=\"flex items-center gap-1 mx-1\">\n                      <MdFilterList className=\"text-gray-600\" />\n                      <span className=\"font-semibold text-gray-500\">\n                        Location:\n                      </span>\n                      <span\n                        className={`font-semibold ${\n                          this.state.thisDistrict\n                            ? \"text-black cursor-pointer\"\n                            : \"text-blue-700\"\n                        }`}\n                      >\n                        {this.state.thisProvince.province_name}\n                      </span>\n                      {this.state.thisDistrict && (\n                        <div className=\"flex items-center\">\n                          <AiOutlineCaretRight />\n                          <span className=\"text-blue-700 font-semibold\">\n                            {this.state.thisDistrict.district_name}\n                          </span>\n                        </div>\n                      )}\n                    </div>\n                    <IoIosClose\n                      className=\"cursor-pointer rounded-full hover:bg-red-500 hover:text-white\"\n                      onClick={() =>\n                        !this.state.loading &&\n                        (this.setState({\n                          thisDistrict: null,\n                          thisProvince: null,\n                        }),\n                        this.filterSchools(\"DISTRICT\", \"ALL\"))\n                      }\n                      title=\"Clean location filter\"\n                    />\n                  </div>\n                )}\n              </div>\n              {false && (\n                <button\n                  type=\"button\"\n                  className=\"btn btn-blue flex my-1\"\n                  onClick={() => this.setState({ modalState: \"CREATE\" })}\n                  disabled={this.state.loadingRequest}\n                >\n                  <MdSave className=\"h-6 w-6\" />\n                  <span className=\"ml-2\">Add School</span>\n                </button>\n              )}\n            </div>\n            <div className=\"rounded border border-gray-100 my-1 shadow-sm animate__animated animate__fadeIn\">\n              <table className=\"w-full z-0\">\n                <thead className=\"bg-gray-50\">\n                  <tr className=\"text-left\">\n                    <th className=\"px-3 py-3\">#</th>\n                    <th>School code</th>\n                    <th>School name</th>\n                    <th>Institute</th>\n                    <th>Province</th>\n                    <th>District</th>\n                    {/* <th>Sector</th> */}\n                    <th>Status</th>\n                  </tr>\n                </thead>\n                <tbody className=\"text-sm\">\n                  {!this.state.schoolList.length && (\n                    <tr\n                      key={1}\n                      className=\"border-b border-gray-200 hover:bg-gray-100\"\n                    >\n                      <td className=\"p-3 text-center\" colSpan={8}>\n                        No School Found\n                      </td>\n                    </tr>\n                  )}\n                  {this.state.schoolList.length > 0 &&\n                    !this.state.loading &&\n                    this.state.schoolList.map((school, index) => (\n                      <tr\n                        key={index + school._id}\n                        className=\"border-b border-gray-200 hover:bg-gray-100\"\n                      >\n                        <td className=\"p-3 text-left whitespace-nowrap\">\n                          {index + 1}\n                        </td>\n                        <td className=\"p-3 text-left\">{school.school_code}</td>\n                        <td className=\"p-3 text-left\">{school.school_name}</td>\n                        <td className=\"py-3 px-3 text-left\">\n                          {this.props.education_categories &&\n                          this.props.education_categories.filter(\n                            (education) =>\n                              education.education_institute_id ===\n                              school.education_category_id\n                          ).length > 0\n                            ? this.props.education_categories.filter(\n                                (education) =>\n                                  education.education_institute_id ===\n                                  school.education_category_id\n                              )[0].education_category_title\n                            : \"No Institute\"}\n                        </td>\n                        <td className=\"py-3 px-3 text-left\">\n                          {this.getProvinceByCode(school.province_code)\n                            ? this.getProvinceByCode(school.province_code)!\n                                .province_name\n                            : \"No province \"}\n                        </td>\n                        <td className=\"py-3 px-3 text-left\">\n                          {this.getDistrictByCode(\n                            school.province_code,\n                            school.district_code\n                          )\n                            ? this.getDistrictByCode(\n                                school.province_code,\n                                school.district_code\n                              )!.district_name\n                            : \"No district\"}\n                        </td>\n                        {/* <td className=\"py-3 px-3 text-left\">\n                          {this.getSectorByCode(\n                            school.province_code,\n                            school.district_code,\n                            school.sector_code\n                          )\n                            ? this.getSectorByCode(\n                                school.province_code,\n                                school.district_code,\n                                school.sector_code\n                              )!.sector_name\n                            : \"No sector \"+school.sector_code}\n                        </td> */}\n                        <td className=\"px-3\">\n                          <div className=\"flex items-center gap-2 float-right\">\n                            <button\n                              className={`bg-blue-600 text-white font-bold py-1 px-2 flex items-center rounded focus:outline-none ${\n                                this.state.loadingRequest\n                                  ? \"cursor-not-allowed\"\n                                  : null\n                              }`}\n                              title=\"Edit School\"\n                              disabled={this.state.loadingRequest}\n                              onClick={() => {\n                                this.setState({\n                                  modalState: \"UPDATE\",\n                                  thisSchool: school,\n                                  schoolName: school.school_name,\n                                  schoolCode: school.school_code,\n                                  instituteId: school.education_category_id,\n                                  districtId: school.district_id,\n                                  sectorId: school.sector_id,\n                                  provinceId: this.props.allRoom.find((item) =>\n                                    item.districts.find(\n                                      (d) => d._id === school.district_id\n                                    )\n                                  )\n                                    ? this.props.allRoom.find((item) =>\n                                        item.districts.find(\n                                          (d) => d._id === school.district_id\n                                        )\n                                      )!._id\n                                    : \"\",\n                                });\n                              }}\n                            >\n                              <MdModeEdit className=\"w-4 h-4\" />\n                              Edit\n                            </button>\n                            <button\n                              className={`bg-red-700 text-white font-bold py-1 px-2 flex items-center rounded focus:outline-none ${\n                                this.state.loadingRequest\n                                  ? \"cursor-not-allowed\"\n                                  : null\n                              }`}\n                              title=\"Delete\"\n                              disabled={this.state.loadingRequest}\n                              onClick={() => this.handleDelete(school._id)}\n                            >\n                              <MdModeEdit className=\"w-4 h-4\" />\n                              Delete\n                            </button>\n                          </div>\n                        </td>\n                      </tr>\n                    ))}\n                </tbody>\n              </table>\n            </div>\n          </div>\n        </div>\n\n        {/* modal control */}\n        {this.state.modalState && (\n          <Modal\n            backDrop={true}\n            theme={Themes.default}\n            close={(): void =>\n              this.setState({\n                modalState: \"\",\n                thisSchool: null,\n                schoolName: \"\",\n                instituteId: \"\",\n                districtId: \"\",\n                provinceId: \"\",\n              })\n            }\n            displayClose={true}\n            backDropClose={false}\n            title={\n              <div className=\"text-gray-600 font-bold text-3xl md:ml-4 inline-flex items-center gap-2\">\n                <BiBuildingHouse className=\"w-11 h-11 text-gray-500 hover:bg-gray-500 hover:text-gray-50 rounded-full p-0 foucs:outline-none\" />\n                {this.state.modalState === \"CREATE\" ? \"CREATE \" : \"UPDATE \"}{\" \"}\n                SCHOOL\n              </div>\n            }\n            widthSizeClass={ModalSize.medium}\n            padding={{ title: true, body: false, footer: false }}\n          >\n            <div className=\"mx-8 mb-8\">\n              <form onSubmit={(e) => this.handleSubmit(e)}>\n                <div className=\"py-4 text-base leading-6 space-y-4 text-gray-700 sm:text-lg sm:leading-7\">\n                  <div className=\"flex flex-col\">\n                    <label>School name</label>\n                    <input\n                      type=\"text\"\n                      className={`text-left input-white w-20 inline-block border-2 ${\n                        this.state.error &&\n                        this.state.error.element === \"school_name\"\n                          ? \"border-red-700\"\n                          : \"border-gray-500\"\n                      }`}\n                      placeholder=\"School name\"\n                      value={this.state.schoolName}\n                      onChange={(e) => {\n                        this.setError(null);\n                        this.setState({ schoolName: e.target.value });\n                      }}\n                      disabled={this.state.loadingRequest}\n                    />\n                    {this.state.error &&\n                      this.state.error.element === \"school_name\" && (\n                        <span className=\"text-red-700\">\n                          {this.state.error.msg}\n                        </span>\n                      )}\n                  </div>\n\n                  <div className=\"flex flex-col\">\n                    <label>School code</label>\n                    <input\n                      type=\"number\"\n                      className={`text-left input-white w-20 inline-block border-2 ${\n                        this.state.error &&\n                        this.state.error.element === \"school_code\"\n                          ? \"border-red-700\"\n                          : \"border-gray-500\"\n                      }`}\n                      placeholder=\"School code\"\n                      value={this.state.schoolCode}\n                      onChange={(e) => {\n                        this.setError(null);\n                        this.setState({ schoolCode: Number(e.target.value) });\n                      }}\n                      disabled={this.state.loadingRequest}\n                    />\n                    {this.state.error &&\n                      this.state.error.element === \"school_code\" && (\n                        <span className=\"text-red-700\">\n                          {this.state.error.msg}\n                        </span>\n                      )}\n                  </div>\n\n                  {/* INSTITUTES ================= */}\n                  <div className=\"flex flex-col\">\n                    <label>Institutes</label>\n                    {/* block appearance-none w-full bg-grey-lighter border\n                  border-grey-lighter text-grey-darker py-3 px-4 pr-8 rounded */}\n                    <select\n                      className={`text-left input-white w-full block border-2 py-3 px-4 pr-8 ${\n                        this.state.error &&\n                        this.state.error.element === \"edication_id\"\n                          ? \"border-red-700\"\n                          : \"border-gray-500\"\n                      }`}\n                      value={this.state.instituteId}\n                      onChange={(e) =>\n                        this.setState({\n                          instituteId: e.target.value,\n                        })\n                      }\n                      disabled={this.state.loadingRequest}\n                    >\n                      <option value=\"\" disabled>\n                        Choose Institute\n                      </option>\n                      {this.props.education_categories &&\n                        this.props.education_categories.map(\n                          (institute, index) => (\n                            <option\n                              value={institute.education_institute_id}\n                              key={index + institute.education_institute_id}\n                            >\n                              {institute.education_category_title}\n                            </option>\n                          )\n                        )}\n                    </select>\n                    {this.state.error &&\n                      this.state.error.element === \"edication_id\" && (\n                        <span className=\"text-red-700\">\n                          {this.state.error.msg}\n                        </span>\n                      )}\n                  </div>\n\n                  {/* PROVINCE ================= */}\n                  <div className=\"flex flex-col\">\n                    <label>Province</label>\n                    <select\n                      className={`text-left input-white w-20 inline-block border-2 border-gray-500`}\n                      value={this.state.provinceId}\n                      onChange={(e) =>\n                        this.setState({ provinceId: e.target.value })\n                      }\n                      disabled={this.state.loadingRequest}\n                    >\n                      <option value=\"\" disabled>\n                        Choose province\n                      </option>\n                      {this.props.allRoom &&\n                        this.props.allRoom.map((province, index) => (\n                          <option\n                            value={province._id}\n                            key={index + province._id}\n                          >\n                            {province.province_name}\n                          </option>\n                        ))}\n                    </select>\n                  </div>\n\n                  {/* DISTRICT ================= */}\n                  {this.state.provinceId.length > 0 && (\n                    <div className=\"flex flex-col\">\n                      <label>Sector</label>\n                      <select\n                        className={`text-left input-white w-20 inline-block border-2 ${\n                          this.state.error &&\n                          this.state.error.element === \"districtId_id\"\n                            ? \"border-red-700\"\n                            : \"border-gray-500\"\n                        }`}\n                        value={this.state.districtId}\n                        onChange={(e) =>\n                          this.setState({ districtId: e.target.value })\n                        }\n                        disabled={this.state.loadingRequest}\n                      >\n                        <option value=\"\" disabled>\n                          Choose district\n                        </option>\n                        {this.props.allRoom &&\n                        this.props.allRoom.filter(\n                          (province) => province._id === this.state.provinceId\n                        )[0].districts.length > 0 ? (\n                          this.props.allRoom\n                            .filter(\n                              (province) =>\n                                province._id === this.state.provinceId\n                            )[0]\n                            .districts.map((district, index) => (\n                              <option\n                                value={district._id}\n                                key={index + district._id}\n                              >\n                                {district.district_name}\n                              </option>\n                            ))\n                        ) : (\n                          <option key={702} disabled={true}>\n                            No District Found\n                          </option>\n                        )}\n                      </select>\n                      {this.state.error &&\n                        this.state.error.element === \"districtId_id\" && (\n                          <span className=\"text-red-700\">\n                            {this.state.error.msg}\n                          </span>\n                        )}\n                    </div>\n                  )}\n\n                  {/* DISTRICT ================= */}\n                  {this.state.provinceId.length > 0 && (\n                    <div className=\"flex flex-col\">\n                      <label>Sector</label>\n                      <select\n                        className={`text-left input-white w-20 inline-block border-2 ${\n                          this.state.error &&\n                          this.state.error.element === \"sector_id\"\n                            ? \"border-red-700\"\n                            : \"border-gray-500\"\n                        }`}\n                        value={this.state.sectorId}\n                        onChange={(e) =>\n                          this.setState({ sectorId: e.target.value })\n                        }\n                        disabled={this.state.loadingRequest}\n                      >\n                        <option value=\"\" disabled>\n                          Choose sector\n                        </option>\n                        {this.props.allRoom && this.getSectors() ? (\n                          this.getSectors()!.map((sector, index) => (\n                            <option\n                              value={sector.sector_id}\n                              key={index + sector.sector_id}\n                            >\n                              {sector.sector_name}\n                            </option>\n                          ))\n                        ) : (\n                          <option key={702} disabled={true}>\n                            No Sector Found\n                          </option>\n                        )}\n                      </select>\n                      {this.state.error &&\n                        this.state.error.element === \"sector_id\" && (\n                          <span className=\"text-red-700\">\n                            {this.state.error.msg}\n                          </span>\n                        )}\n                    </div>\n                  )}\n                </div>\n                <div className=\"pt-4 flex justify-between\">\n                  <button\n                    onClick={() =>\n                      this.setState({\n                        modalState: \"\",\n                        thisSchool: null,\n                        schoolName: \"\",\n                        instituteId: \"\",\n                        districtId: \"\",\n                        provinceId: \"\",\n                      })\n                    }\n                    className={`btn bg-gray-400 text-white hover:bg-gray-600 focus:outline-none`}\n                    type=\"button\"\n                    disabled={this.state.loadingRequest}\n                  >\n                    Exit\n                  </button>\n                  <button\n                    className={`btn bg-primary text-white hover:bg-blue-600 focus:outline-none ${\n                      this.state.loadingRequest ? \"animate-pulse\" : null\n                    }`}\n                    type=\"submit\"\n                    disabled={this.state.loadingRequest}\n                  >\n                    {this.state.loadingRequest ? \"Loading...\" : \"Save\"}\n                  </button>\n                </div>\n              </form>\n            </div>\n          </Modal>\n        )}\n      </React.Fragment>\n    );\n  }\n}\n\nconst mapStateToProps = ({\n  auth,\n  schools,\n  schoolLevels,\n  locations,\n}: StoreState): {\n  auth: Auth;\n  schools: SchoolsInterface[];\n  education_categories: education_category[] | null;\n  allRoom: RoomLocationInterface[];\n} => {\n  return {\n    auth: auth,\n    schools: schools.schools,\n    education_categories: schoolLevels.education_categories,\n    allRoom: locations.roomLocation,\n  };\n};\n\nexport const Schools = connect(mapStateToProps, {\n  createSchool,\n  getSchools,\n  updateSchool,\n  getAllRoom,\n  deleteSchool,\n  loadEducationCategories,\n  PushPopupAlert,\n})(index);\n","import axios from \"axios\";\nimport React, { Component } from \"react\";\nimport {\n  MdArrowBack,\n  MdErrorOutline,\n  MdMail,\n  MdSmartphone,\n  MdTaskAlt,\n} from \"react-icons/md\";\nimport { connect } from \"react-redux\";\nimport { Auth, PushPopupAlert } from \"../../actions\";\nimport { fetchSchoolPosts, getSchoolPlacement } from \"../../actions/schools\";\nimport { PopupAlertData } from \"../../components/Alert/Popup\";\nimport { PositionAPI } from \"../../interfaces\";\nimport {\n  placedCandidateInterface,\n  PlacedCandidateStatus,\n} from \"../../interfaces/marks_publication\";\nimport { PopupAlertTheme } from \"../../interfaces/popupAlert\";\nimport { StoreState } from \"../../reducers\";\nimport {\n  capitalizeFirstLetter,\n  getPositionById,\n  isEmptyOrSpaces,\n} from \"../../shared/dataTest\";\nimport {\n  PostSchoolInterface,\n  PostRequestStatusInterface,\n} from \"../../shared/interfaces\";\nimport { API } from \"../../utils/api\";\nimport { errorToText } from \"../../utils/errors\";\nimport { getPlacementByRequest } from \"./RequestTeacher\";\n\ntype ReceivePostProps = {\n  viewPost: boolean;\n  placementList: placedCandidateInterface[];\n  thisPost: PostSchoolInterface;\n  setThisPost: (value: PostSchoolInterface | null) => void;\n  setModalState: (value: \"CREATE\" | \"UPDATE\" | \"RECEIVE\" | null) => void;\n  formError: {\n    element: string;\n    msg: string;\n  } | null;\n  setFormError: (\n    value: {\n      element: string;\n      msg: string;\n    } | null\n  ) => void;\n  receivedPosts: number;\n  setReceivedPosts: (value: number) => void;\n  loadingRequest: boolean;\n  setLoadingRequest: (value: boolean) => void;\n  loadingPost: boolean;\n  setLoadingPost: (value: boolean) => void;\n  positionId: string;\n  systemPositions: PositionAPI[];\n\n  // REDUX ==========\n  auth: Auth;\n  fetchSchoolPosts: Function;\n  getSchoolPlacement: Function;\n  PushPopupAlert: (alert: PopupAlertData) => void;\n};\n\ntype ReceivePostState = {\n  placement_id: string;\n  action: \"RECEIVED\" | \"NOT_RECEIVED\" | null;\n  comment: string;\n};\n\nclass ReceivePost extends Component<ReceivePostProps, ReceivePostState> {\n  constructor(props: ReceivePostProps) {\n    super(props);\n\n    this.state = {\n      placement_id: \"\",\n      action: null,\n      comment: \"\",\n    };\n  }\n  submitRequest = async (\n    thisPlacement: placedCandidateInterface,\n    action: \"RECEIVED\" | \"NOT_RECEIVED\"\n  ) => {\n    if (action === \"NOT_RECEIVED\" && isEmptyOrSpaces(this.state.comment)) {\n      return this.props.setFormError({\n        element: \"received_comment\",\n        msg: \"Reason of your decision is required!\",\n      });\n    }\n\n    let received: number = 0;\n    if (action === \"NOT_RECEIVED\") {\n      received = this.props.thisPost.received_posts\n        ? this.props.thisPost.received_posts\n        : 0;\n    } else {\n      received = this.props.thisPost.received_posts\n        ? this.props.thisPost.received_posts + 1\n        : 1;\n    }\n\n    this.props.setLoadingRequest(true);\n    try {\n      if (this.props.thisPost) {\n        const res = await axios.patch<{ data: PostSchoolInterface }>(\n          `${API.PLACEMENT}/requestpost/${this.props.thisPost.requested_post_id}`,\n          {\n            confirmed_posts: this.props.thisPost.confirmed_posts,\n            confirmed_by: this.props.auth.user.user_id,\n            received_posts: received,\n            approval_date: this.props.thisPost.approval_date,\n            school_id: this.props.thisPost.school_id,\n            position_id: this.props.thisPost.position_id,\n            district_id: this.props.thisPost.district_id,\n            needed_posts: this.props.thisPost.needed_posts,\n            male_number: this.props.thisPost.male_number,\n            female_number: this.props.thisPost.female_number,\n            description: this.props.thisPost.description,\n            occupied_posts: this.props.thisPost.occupied_posts,\n            requested_by: this.props.auth.user.user_id,\n            requested_post_status: PostRequestStatusInterface.RECEIVED,\n          }\n        );\n        if (res) {\n          // props.updateSchoolPost(\"SCHOOL\", res.data.data);\n          this.confirmPlacement(thisPlacement);\n\n          // !this.props.viewPost && this.props.setThisPost(null);\n          // this.props.setReceivedPosts(0);\n          // this.props.setModalState(null);\n          // this.props.PushPopupAlert({\n          //   title: `Post request has been received!`,\n          //   theme: PopupAlertTheme.info,\n          // });\n        }\n      }\n    } catch (error) {\n      console.error({ role_error: error });\n      this.props.PushPopupAlert({\n        title: errorToText(error),\n        theme: PopupAlertTheme.danger,\n      });\n    }\n    this.props.setLoadingRequest(false);\n  };\n\n  confirmPlacement = async (thisPlacement: placedCandidateInterface) => {\n    this.props.setLoadingRequest(true);\n    try {\n      if (this.props.thisPost) {\n        const res = await axios.post<{ data: PostSchoolInterface }>(\n          `${API.PLACEMENT}/confirmreceived`,\n          {\n            placedStatus: [\n              {\n                waiting_list_id: thisPlacement.waiting_list_id,\n                placed_candidate_id: thisPlacement._id,\n                status:\n                  this.state.action === \"NOT_RECEIVED\"\n                    ? PlacedCandidateStatus.REJECTED\n                    : PlacedCandidateStatus.PLACED,\n              },\n            ],\n          }\n        );\n        if (res) {\n          this.props.fetchSchoolPosts(\n            this.props.auth.user_access.school_id,\n            (status: boolean, message: string) => {\n              if (!status) {\n                if (message.length > 0 && this.props.loadingPost) {\n                  console.error(\"error loading school post: \", message);\n                  this.props.PushPopupAlert({\n                    title: message,\n                    theme: PopupAlertTheme.danger,\n                  });\n                }\n                this.props.setLoadingPost(false);\n              }\n            }\n          );\n\n          this.props.getSchoolPlacement(\n            this.props.auth.user_access.school_id,\n            (\n              status: boolean,\n              msg: string,\n              data?: placedCandidateInterface[]\n            ) => {\n              this.props.setLoadingPost(status);\n              if (!status && msg.length > 0) {\n                console.error({ getSchoolPlacementError: msg });\n                this.props.PushPopupAlert({\n                  title: msg,\n                  theme: PopupAlertTheme.danger,\n                });\n              }\n            }\n          );\n\n          this.props.setFormError(null);\n          this.setState({ comment: \"\", placement_id: \"\", action: null });\n          !this.props.viewPost && this.props.setThisPost(null);\n          this.props.setReceivedPosts(0);\n          this.props.setModalState(null);\n          this.props.PushPopupAlert({\n            title: `Request has been done completely!`,\n            theme: PopupAlertTheme.info,\n          });\n        }\n      }\n    } catch (error) {\n      console.error({ role_error: error });\n      this.props.PushPopupAlert({\n        title: errorToText(error),\n        theme: PopupAlertTheme.danger,\n      });\n    }\n    this.props.setLoadingRequest(false);\n  };\n\n  render() {\n    return (\n      <section>\n        <div className=\"border-b-2 border-gray-200 mb-2 pb-1 flex items-center gap-3\">\n          <button\n            className={`ml-3 bg-gray-100 hover:bg-blue-100 rounded-full px-1 py-1 focus:outline-none ${\n              this.props.loadingRequest ? \"cursor-wait\" : \"cursor-pointer\"\n            } animate__animated animate__fadeIn`}\n            disabled={this.props.loadingRequest}\n            onClick={() => {\n              this.props.setThisPost(null);\n              this.props.setReceivedPosts(0);\n              this.props.setModalState(null);\n            }}\n          >\n            <MdArrowBack className=\"text-4xl\" />\n          </button>\n\n          <span className=\"font-bold text-2xl md:text-3xl text-gray-700\">\n            Confirm teacher arrival\n          </span>\n        </div>\n\n        <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4 divide-x-0 divide-y md:divide-x md:divide-y-0\">\n          <div className=\"px-1 mb-4 mt-3\">\n            <div className=\"text-base leading-6 space-y-4 text-gray-700 sm:text-lg sm:leading-7\">\n              <div className=\"flex flex-row item-center justify-left gap-3 mb-2\">\n                <span className=\"text-gray-500 italic\">Position: </span>\n                <span className=\"font-bold\">\n                  {getPositionById(\n                    this.props.systemPositions,\n                    this.props.thisPost.position_id\n                  )\n                    ? getPositionById(\n                        this.props.systemPositions,\n                        this.props.thisPost.position_id\n                      )!.position_title\n                    : \"Unknown position\"}\n                </span>\n              </div>\n\n              <table className=\"w-full shadow\" id=\"report_content\">\n                <thead className=\"bg-blue-50 border-b-2 border-gray-300 text-gray-600 font-bold text-sm\">\n                  <tr>\n                    <td className=\"px-2 py-2\">Requested posts</td>\n                    <td className=\"px-2 py-2\">Approved posts</td>\n                    <td className=\"px-2 py-2\">Post posts</td>\n                    <td className=\"px-2 py-2\">Received posts</td>\n                    <td className=\"px-2 py-2\">Occupation</td>\n                    <td className=\"px-2 py-2\">Status</td>\n                  </tr>\n                </thead>\n                <tbody>\n                  <tr>\n                    <td className=\"px-2 py-2\">\n                      {this.props.thisPost.needed_posts}\n                    </td>\n                    <td className=\"px-2 py-2\">\n                      {this.props.thisPost.requested_post_status ===\n                      PostRequestStatusInterface.CONFIRMED ? (\n                        <div className=\"flex items-center gap-1\">\n                          {this.props.thisPost.confirmed_posts}\n                        </div>\n                      ) : (\n                        \"-\"\n                      )}\n                    </td>\n                    <td className=\"px-2 py-2\">\n                      {this.props.thisPost.requested_post_status ===\n                      PostRequestStatusInterface.CONFIRMED ? (\n                        <span>\n                          {\n                            getPlacementByRequest(\n                              this.props.placementList,\n                              this.props.thisPost.requested_post_id\n                            ).length\n                          }\n                        </span>\n                      ) : (\n                        \"-\"\n                      )}\n                    </td>\n                    <td className=\"px-2 py-2\">\n                      {this.props.thisPost.requested_post_status ===\n                      PostRequestStatusInterface.RECEIVED\n                        ? this.props.thisPost.received_posts\n                        : \"-\"}\n                    </td>\n                    <td className=\"px-2 py-2\">\n                      {this.props.thisPost.female_number +\n                        this.props.thisPost.male_number}\n                    </td>\n\n                    <td className=\"px-2 py-2\">\n                      <span\n                        className={`px-2 py-1 mx-1 font-semibold rounded ${\n                          this.props.thisPost.requested_post_status ===\n                          PostRequestStatusInterface.INITIATED\n                            ? \"text-gray-700 bg-gray-100 dark:bg-gray-700 dark:text-gray-100\"\n                            : this.props.thisPost.requested_post_status ===\n                              PostRequestStatusInterface.CONFIRMED\n                            ? \"text-blue-700 bg-blue-100 dark:bg-blue-700 dark:text-blue-100\"\n                            : \"text-green-800 bg-green-100 dark:bg-green-800 dark:text-green-100\"\n                        }`}\n                      >\n                        {this.props.thisPost.requested_post_status ===\n                        PostRequestStatusInterface.INITIATED\n                          ? \"Pending\"\n                          : capitalizeFirstLetter(\n                              this.props.thisPost.requested_post_status\n                            )}\n                      </span>\n                    </td>\n                  </tr>\n                </tbody>\n              </table>\n            </div>\n          </div>\n\n          <div className=\"px-4 mt-3 mb-4\">\n            {getPlacementByRequest(\n              this.props.placementList,\n              this.props.thisPost.requested_post_id\n            ).map((item, index) => (\n              <div\n                className=\"relative grid grid-cols-1 gap-4 px-4 py-1 mb-8 border rounded bg-white shadow\"\n                key={index + item._id}\n              >\n                <div className=\"relative flex gap-4\">\n                  {/* IMG ================== */}\n                  <img\n                    src={API.AUTH_FILES + \"/\" + item.user_info.photo}\n                    className=\"object-center object-cover relative rounded-lg -top-4 -mb-3 bg-white border h-20 w-20\"\n                    alt=\"\"\n                    loading=\"lazy\"\n                  />\n                  <div className=\"flex flex-col w-full\">\n                    <div className=\"flex flex-row justify-between\">\n                      <p className=\"relative text-xl whitespace-nowrap truncate overflow-hidden\">\n                        {item.user_info.fname + \" \" + item.user_info.lname}\n                      </p>\n                    </div>\n                    <p className=\"text-gray-500 text-sm flex items-center gap-1\">\n                      <MdSmartphone /> {item.phone_number}\n                    </p>\n                    <p className=\"text-gray-500 text-sm flex items-center gap-1\">\n                      <MdMail /> {item.email}\n                    </p>\n                  </div>\n                </div>\n                <div className=\"-mt-3\">\n                  {this.state.action !== \"NOT_RECEIVED\" && (\n                    <div className=\"flex flex-row-reverse gap-2\">\n                      <div className=\"flex-initial\">\n                        <button\n                          type=\"button\"\n                          className=\"btn btn-blue flex items-center font-medium tracking-wide capitalize transition duration-300 transform active:scale-95 ease-in-out\"\n                          disabled={this.props.loadingRequest}\n                          onClick={() => {\n                            this.setState({\n                              placement_id: item._id,\n                              action: \"RECEIVED\",\n                            });\n                            this.submitRequest(item, \"RECEIVED\");\n                          }}\n                        >\n                          <MdTaskAlt />\n                          <span className=\"pl-2 mx-1\">\n                            {this.props.loadingRequest\n                              ? \"Loading...\"\n                              : \"Received\"}\n                          </span>\n                        </button>\n                      </div>\n                      <div className=\"flex-initial\">\n                        <button\n                          type=\"button\"\n                          className=\"btn flex items-center px-5 py-2.5 font-medium tracking-wide text-black capitalize hover:bg-red-200 hover:fill-current hover:text-red-600 focus:outline-none transition duration-300 transform active:scale-95 ease-in-out\"\n                          disabled={this.props.loadingRequest}\n                          onClick={() =>\n                            this.setState({\n                              placement_id: item._id,\n                              action: \"NOT_RECEIVED\",\n                            })\n                          }\n                        >\n                          <MdErrorOutline />\n                          <span className=\"pl-2 mx-1\">Not received</span>\n                        </button>\n                      </div>\n                    </div>\n                  )}\n                  {this.state.action === \"NOT_RECEIVED\" &&\n                    this.state.placement_id === item._id && (\n                      <div className=\"flex flex-col md:flex-row items-end md:items-start gap-2 animate__animated animate__fadeInRight animate__faster mt-2\">\n                        <div className=\"w-full\">\n                          <textarea\n                            className={`border-2 rounded p-2 md:text-base w-full ${\n                              this.props.formError &&\n                              this.props.formError.element ===\n                                \"received_comment\"\n                                ? \"border-red-500\"\n                                : \"border-gray-300\"\n                            } focus:border-gray-500`}\n                            placeholder=\"comment\"\n                            onChange={(e) => {\n                              this.setState({ comment: e.target.value });\n                              this.props.formError &&\n                                this.props.formError.element ===\n                                  \"received_comment\" &&\n                                this.props.setFormError(null);\n                            }}\n                            value={this.state.comment}\n                            style={{ resize: \"none\" }}\n                          ></textarea>\n                          {this.props.formError &&\n                            this.props.formError.element ===\n                              \"received_comment\" && (\n                              <span className=\"text-red-700 text-sm\">\n                                {this.props.formError.msg}\n                              </span>\n                            )}\n                        </div>\n\n                        <button\n                          type=\"button\"\n                          className=\"btn bg-gray-100 hover:bg-gray-400 font-medium tracking-wide capitalize transition duration-300 transform active:scale-95 ease-in-out\"\n                          disabled={this.props.loadingRequest}\n                          onClick={() =>\n                            this.submitRequest(item, \"NOT_RECEIVED\")\n                          }\n                        >\n                          {this.props.loadingRequest ? \"Loading...\" : \"Confirm\"}\n                        </button>\n                      </div>\n                    )}\n                </div>\n              </div>\n            ))}\n          </div>\n        </div>\n      </section>\n    );\n  }\n}\n\nconst mapStateToProps = ({\n  auth,\n}: StoreState): {\n  auth: Auth;\n} => {\n  return {\n    auth: auth,\n  };\n};\nexport default connect(mapStateToProps, {\n  fetchSchoolPosts,\n  getSchoolPlacement,\n  PushPopupAlert,\n})(ReceivePost);\n","import React, { Component } from \"react\";\nimport { BiReply } from \"react-icons/bi\";\nimport Modal, { ModalSize, Themes } from \"../../components/Modal/Modal\";\nimport { PositionAPI } from \"../../interfaces\";\nimport { placedCandidateInterface } from \"../../interfaces/marks_publication\";\nimport { capitalizeFirstLetter, getPositionById } from \"../../shared/dataTest\";\nimport {\n  PostRequestStatusInterface,\n  PostSchoolInterface,\n} from \"../../shared/interfaces\";\nimport { getPlacementByRequest } from \"./RequestTeacher\";\n\ninterface ViewRequestProps {\n  thisPost: PostSchoolInterface;\n  setThisPost: (value: PostSchoolInterface | null) => void;\n  setViewPost: (value: boolean) => void;\n  systemPositions: PositionAPI[];\n  schoolPlacements: placedCandidateInterface[];\n  setPostId: (value: string) => void;\n  setModalState: (value: \"CREATE\" | \"UPDATE\" | \"RECEIVE\" | null) => void;\n  setPositionId: (value: string) => void;\n  setRequestedPosts: (value: number) => void;\n  setRequestExplanation: (value: string) => void;\n  setFemaleOnPosition: (value: number) => void;\n  setMaleOnPosition: (value: number) => void;\n  setFormSteps: (value: { ONE: boolean; TWO: boolean }) => void;\n  setStepState: (value: { ONE: boolean; TWO: boolean }) => void;\n}\n\nexport class ViewRequest extends Component<ViewRequestProps> {\n  render() {\n    return (\n      <Modal\n        backDrop={true}\n        theme={Themes.default}\n        close={(): void => {\n          this.props.setThisPost(null);\n          this.props.setViewPost(false);\n        }}\n        displayClose={true}\n        backDropClose={false}\n        title={\n          <div className=\"flex flex-row gap-4 items-center\">\n            <div className=\"flex flex-col\">\n              <span className=\"font-bold text-2xl text-gray-500\">\n                Viewing Post Request\n              </span>\n            </div>\n          </div>\n        }\n        widthSizeClass={ModalSize.large}\n        padding={{ title: true, body: false, footer: false }}\n      >\n        <section className=\"px-4 mx-auto mb-4 mt-3 flex items-start\">\n          <section className=\"w-full\">\n            <div className=\"flex flex-row item-center justify-left gap-3 mb-2\">\n              <span className=\"text-gray-500 italic\">Position: </span>\n              <span className=\"font-bold\">\n                {getPositionById(\n                  this.props.systemPositions,\n                  this.props.thisPost.position_id\n                )\n                  ? getPositionById(\n                      this.props.systemPositions,\n                      this.props.thisPost.position_id\n                    )!.position_title\n                  : \"Unknown position\"}\n              </span>\n            </div>\n            <div className=\"flex flex-row item-center justify-left gap-3 mb-2\">\n              <span className=\"text-gray-500 italic\">Requested posts: </span>\n              <span className=\"font-bold text-xl\">\n                {this.props.thisPost.needed_posts}\n              </span>\n            </div>\n            <div className=\"flex flex-row item-center justify-left gap-3 mb-2\">\n              <span className=\"text-gray-500 italic\">Approved posts: </span>\n              <span className=\"font-bold text-xl\">\n                {this.props.thisPost.requested_post_status !==\n                PostRequestStatusInterface.INITIATED ? (\n                  <div\n                    className=\"flex items-center gap-1 cursor-pointer\"\n                    onClick={() => this.props.setModalState(\"RECEIVE\")}\n                  >\n                    {this.props.thisPost.confirmed_posts}\n                    {getPlacementByRequest(\n                      this.props.schoolPlacements,\n                      this.props.thisPost.requested_post_id\n                    ).length > 0 && (\n                      <BiReply className=\"bg-yellow-600 w-5 h-5 text-white\" />\n                    )}\n                  </div>\n                ) : (\n                  \"-\"\n                )}\n              </span>\n            </div>\n            <div className=\"flex flex-row item-center justify-left gap-3 mb-2\">\n              <span className=\"text-gray-500 italic\">Placed posts: </span>\n              <span className=\"font-bold text-xl\">\n                {this.props.thisPost.requested_post_status !==\n                PostRequestStatusInterface.INITIATED ? (\n                  <div\n                    className=\"flex items-center gap-1 cursor-pointer\"\n                    onClick={() => this.props.setModalState(\"RECEIVE\")}\n                  >\n                    {\n                      getPlacementByRequest(\n                        this.props.schoolPlacements,\n                        this.props.thisPost.requested_post_id\n                      ).length\n                    }\n                    {getPlacementByRequest(\n                      this.props.schoolPlacements,\n                      this.props.thisPost.requested_post_id\n                    ).length > 0 && (\n                      <BiReply className=\"bg-yellow-600 w-5 h-5 text-white\" />\n                    )}\n                  </div>\n                ) : (\n                  \"-\"\n                )}\n              </span>\n            </div>\n            <div className=\"flex flex-row item-center justify-left gap-3 mb-2\">\n              <span className=\"text-gray-500 italic\">Received posts: </span>\n              <span className=\"font-bold text-xl\">\n                {this.props.thisPost.requested_post_status ===\n                PostRequestStatusInterface.RECEIVED\n                  ? this.props.thisPost.received_posts\n                  : \"-\"}\n              </span>\n            </div>\n            <div className=\"flex flex-row item-center justify-left gap-3 mb-2\">\n              <span className=\"text-gray-500 italic\">Number of female: </span>\n              <span className=\"font-bold text-xl\">\n                {this.props.thisPost.female_number}\n              </span>\n            </div>\n            <div className=\"flex flex-row item-center justify-left gap-3 mb-2\">\n              <span className=\"text-gray-500 italic\">Number of male: </span>\n              <span className=\"font-bold text-xl\">\n                {this.props.thisPost.male_number}\n              </span>\n            </div>\n            <div className=\"flex flex-row item-center justify-left gap-3 mb-2\">\n              <span className=\"text-gray-500 italic\">Request reason: </span>\n              <span className=\"font-bold text-xl\">\n                {this.props.thisPost.description}\n              </span>\n            </div>\n            <div className=\"flex flex-row item-center justify-left gap-3 mb-2\">\n              <span className=\"text-gray-500 italic\">Status: </span>\n              <span\n                className={`px-2 py-1 mx-1 font-semibold rounded ${\n                  this.props.thisPost.requested_post_status ===\n                  PostRequestStatusInterface.INITIATED\n                    ? \"text-gray-700 bg-gray-100 dark:bg-gray-700 dark:text-gray-100\"\n                    : this.props.thisPost.requested_post_status ===\n                      PostRequestStatusInterface.CONFIRMED\n                    ? \"text-blue-700 bg-blue-100 dark:bg-blue-700 dark:text-blue-100\"\n                    : \"text-green-800 bg-green-100 dark:bg-green-800 dark:text-green-100\"\n                }`}\n              >\n                {this.props.thisPost.requested_post_status ===\n                PostRequestStatusInterface.INITIATED\n                  ? \"Pending\"\n                  : capitalizeFirstLetter(\n                      this.props.thisPost.requested_post_status\n                    )}\n              </span>\n            </div>\n          </section>\n          <div className=\"mb-3 flex items-center justify-end gap-2\">\n            {this.props.thisPost.requested_post_status ===\n              PostRequestStatusInterface.INITIATED && (\n              <button\n                className=\"font-bold py-1 px-4 rounded bg-gray-500 text-white hover:bg-gray-700\"\n                onClick={() => {\n                  this.props.setModalState(\"UPDATE\");\n                  this.props.setPostId(this.props.thisPost.requested_post_id);\n                  this.props.setPositionId(this.props.thisPost.position_id);\n                  this.props.setRequestedPosts(\n                    this.props.thisPost.needed_posts\n                  );\n                  this.props.setRequestExplanation(\n                    this.props.thisPost.description\n                  );\n                  this.props.setFemaleOnPosition(\n                    this.props.thisPost.female_number\n                  );\n                  this.props.setMaleOnPosition(this.props.thisPost.male_number);\n                  this.props.setFormSteps({ ONE: true, TWO: false });\n                  this.props.setStepState({ ONE: false, TWO: false });\n                }}\n                disabled={\n                  this.props.thisPost.requested_post_status !==\n                  PostRequestStatusInterface.INITIATED\n                }\n              >\n                Edit\n              </button>\n            )}\n            {this.props.thisPost.requested_post_status !==\n              PostRequestStatusInterface.INITIATED &&\n              getPlacementByRequest(\n                this.props.schoolPlacements,\n                this.props.thisPost.requested_post_id\n              ).length > 0 && (\n                <button\n                  className=\"font-bold py-1 px-2 rounded bg-gray-500 text-white hover:bg-gray-700\"\n                  onClick={() => this.props.setModalState(\"RECEIVE\")}\n                >\n                  Receive\n                </button>\n              )}\n          </div>\n        </section>\n      </Modal>\n    );\n  }\n}\n\nexport default ViewRequest;\n","import React, { Component } from \"react\";\nimport { BiReply } from \"react-icons/bi\";\nimport NoResult, { NoResultThemes } from \"../../components/NoResult/NoResult\";\nimport { PositionAPI } from \"../../interfaces\";\nimport { placedCandidateInterface } from \"../../interfaces/marks_publication\";\nimport { capitalizeFirstLetter, getPositionById } from \"../../shared/dataTest\";\nimport {\n  PostRequestStatusInterface,\n  PostSchoolInterface,\n} from \"../../shared/interfaces\";\nimport { getPlacementByRequest } from \"./RequestTeacher\";\nimport ViewRequest from \"./ViewRequest\";\n\ninterface RequestListProps {\n  schoolPosts: PostSchoolInterface[];\n  systemPositions: PositionAPI[] | null;\n  setModalState: (value: \"CREATE\" | \"UPDATE\" | \"RECEIVE\" | null) => void;\n  loadingRequest: boolean;\n  filterByPosition: string;\n  setFilterByPosition: (value: string) => void;\n  setThisPost: (value: PostSchoolInterface | null) => void;\n  setViewPost: (value: boolean) => void;\n\n  schoolPlacements: placedCandidateInterface[];\n\n  thisPost: PostSchoolInterface | null;\n  setPostId: (value: string) => void;\n  setPositionId: (value: string) => void;\n  setRequestedPosts: (value: number) => void;\n  setRequestExplanation: (value: string) => void;\n  setFemaleOnPosition: (value: number) => void;\n  setMaleOnPosition: (value: number) => void;\n  setFormSteps: (value: { ONE: boolean; TWO: boolean }) => void;\n  setStepState: (value: { ONE: boolean; TWO: boolean }) => void;\n  viewPost: boolean;\n  modalState: \"CREATE\" | \"UPDATE\" | \"RECEIVE\" | null;\n}\n\ninterface RequestListState {\n  searchInput: string;\n}\n\nclass RequestList extends Component<RequestListProps, RequestListState> {\n  constructor(props: RequestListProps) {\n    super(props);\n\n    this.state = {\n      searchInput: \"\",\n    };\n  }\n\n  setSearchInput = (value: string) => {\n    this.setState({ searchInput: value });\n  };\n\n  render() {\n    return (\n      <div>\n        <div className=\"my-2 flex sm:flex-row flex-col justify-between\">\n          <div className=\"flex flex-col md:flex-row\">\n            <select\n              className=\"border-2 border-gray-700 bg-white p-2 rounded focus:outline-none\"\n              onChange={(e) => this.props.setFilterByPosition(e.target.value)}\n              value={this.props.filterByPosition}\n            >\n              <option value=\"all\">All Position</option>\n              {this.props.systemPositions &&\n              this.props.systemPositions.length > 0 ? (\n                this.props.systemPositions.map((position, index) => (\n                  <option key={index + 1} value={position.position_id}>\n                    {position.position_title}\n                  </option>\n                ))\n              ) : (\n                <option value=\"\">No Position found</option>\n              )}\n            </select>\n          </div>\n          <div className=\"block relative\">\n            <div className=\"pt-6 md:pt-0 md:pl-6\">\n              <button\n                className=\"btn bg-primary text-white hover:bg-blue-600\"\n                onClick={() => this.props.setModalState(\"CREATE\")}\n                disabled={this.props.loadingRequest}\n              >\n                Request Teacher\n              </button>\n            </div>\n          </div>\n        </div>\n\n        <div className=\"w-full py-2\">\n          <input\n            onChange={(e) => this.setSearchInput(e.target.value)}\n            type=\"text\"\n            value={this.state.searchInput}\n            placeholder=\"Search...\"\n            className=\"w-full bg-gray-50 border-2 border-gray-400 py-2 px-3 rounded focus:border-gray-800\"\n            disabled={\n              this.props.schoolPosts.length <= 0 || this.props.loadingRequest\n            }\n          />\n        </div>\n\n        <table className=\"w-full shadow\" id=\"report_content\">\n          <thead className=\"bg-white border-b-2 border-gray-300 text-gray-600 font-bold text-sm\">\n            <tr>\n              <td className=\"px-2 py-2\">#</td>\n              <td className=\"px-2 py-2\">Position</td>\n              <td className=\"px-2 py-2\">Request</td>\n              <td className=\"px-2 py-2\">Approved</td>\n              <td className=\"px-2 py-2\">Placed</td>\n              <td className=\"px-2 py-2\">Occupied</td>\n              <td className=\"px-2 py-2\">Vacant</td>\n              <td className=\"px-2 py-2\">Status</td>\n            </tr>\n          </thead>\n          <tbody>\n            {this.props.schoolPosts.length > 0 ? (\n              this.props.schoolPosts.map((schoolPost, index) => (\n                <tr\n                  key={index + schoolPost.requested_post_id}\n                  className=\"border-b border-gray-200 hover:bg-gray-100\"\n                >\n                  <td className=\"px-2 py-3 text-left font-medium\">\n                    {index + 1}\n                  </td>\n                  <td className=\"py-3 px-1 text-left font-medium\">\n                    {this.props.systemPositions &&\n                    getPositionById(\n                      this.props.systemPositions,\n                      schoolPost.position_id\n                    )\n                      ? getPositionById(\n                          this.props.systemPositions,\n                          schoolPost.position_id\n                        )!.position_title\n                      : \"Unknown position\"}\n                  </td>\n                  <td className=\"py-3 px-2 text-left text-base font-medium\">\n                    {schoolPost.needed_posts}\n                  </td>\n                  <td className=\"py-3 px-2 text-left text-base font-medium\">\n                    {schoolPost.requested_post_status !==\n                    PostRequestStatusInterface.INITIATED ? (\n                      <div className=\"flex items-center gap-1\">\n                        {schoolPost.confirmed_posts}\n                        {getPlacementByRequest(\n                          this.props.schoolPlacements,\n                          schoolPost.requested_post_id\n                        ).length > 0 && (\n                          <BiReply\n                            className=\"bg-yellow-600 w-5 h-5 text-white cursor-pointer\"\n                            onClick={() => {\n                              this.props.setModalState(\"RECEIVE\");\n                              this.props.setThisPost(schoolPost);\n                            }}\n                          />\n                        )}\n                      </div>\n                    ) : (\n                      \"-\"\n                    )}\n                  </td>\n                  <td className=\"py-3 px-2 text-left text-base font-medium\">\n                    {schoolPost.requested_post_status !==\n                    PostRequestStatusInterface.INITIATED ? (\n                      <div className=\"flex items-center gap-1\">\n                        {\n                          getPlacementByRequest(\n                            this.props.schoolPlacements,\n                            schoolPost.requested_post_id\n                          ).length\n                        }\n                        {getPlacementByRequest(\n                          this.props.schoolPlacements,\n                          schoolPost.requested_post_id\n                        ).length > 0 && (\n                          <BiReply\n                            className=\"bg-yellow-600 w-5 h-5 text-white cursor-pointer\"\n                            onClick={() => {\n                              this.props.setModalState(\"RECEIVE\");\n                              this.props.setThisPost(schoolPost);\n                            }}\n                          />\n                        )}\n                      </div>\n                    ) : (\n                      \"-\"\n                    )}\n                  </td>\n                  <td className=\"py-3 px-2 text-left text-base font-medium\">\n                    {schoolPost.occupied_posts\n                      ? schoolPost.occupied_posts +\n                        (schoolPost.received_posts\n                          ? schoolPost.received_posts\n                          : 0)\n                      : \"-\"}\n                  </td>\n                  <td className=\"py-3 px-2 text-left text-base font-medium\">\n                    {schoolPost.requested_post_status ===\n                    PostRequestStatusInterface.RECEIVED\n                      ? (schoolPost.confirmed_posts\n                          ? schoolPost.confirmed_posts\n                          : 0) -\n                        (schoolPost.received_posts\n                          ? schoolPost.received_posts\n                          : 0)\n                      : \"-\"}\n                  </td>\n                  <td>\n                    <span\n                      className={`px-2 py-1 font-semibold rounded ${\n                        schoolPost.requested_post_status ===\n                        PostRequestStatusInterface.INITIATED\n                          ? \"text-gray-700 bg-gray-100 dark:bg-gray-700 dark:text-gray-100\"\n                          : schoolPost.requested_post_status ===\n                            PostRequestStatusInterface.CONFIRMED\n                          ? \"text-blue-700 bg-blue-100 dark:bg-blue-700 dark:text-blue-100\"\n                          : \"text-green-800 bg-green-100 dark:bg-green-800 dark:text-green-100\"\n                      }`}\n                    >\n                      {schoolPost.requested_post_status ===\n                      PostRequestStatusInterface.INITIATED\n                        ? \"Pending\"\n                        : capitalizeFirstLetter(\n                            schoolPost.requested_post_status\n                          )}\n                    </span>\n                  </td>\n                  <td className=\"py- text-left\">\n                    <div className=\"flex item-center justify-end gap-1\">\n                      <button\n                        className=\"btn btn-blue transition ease-out duration-500 flex items-center\"\n                        title=\"View User Profile\"\n                        onClick={() => {\n                          this.props.setThisPost(schoolPost);\n                          this.props.setViewPost(true);\n                        }}\n                      >\n                        Details\n                      </button>\n                      {schoolPost.requested_post_status ===\n                        PostRequestStatusInterface.INITIATED && (\n                        <button\n                          className=\"btn bg-gray-500 text-white hover:bg-gray-700\"\n                          onClick={() => {\n                            this.props.setModalState(\"UPDATE\");\n                            this.props.setPostId(schoolPost.requested_post_id);\n                            this.props.setPositionId(schoolPost.position_id);\n                            this.props.setRequestedPosts(\n                              schoolPost.needed_posts\n                            );\n                            this.props.setRequestExplanation(\n                              schoolPost.description\n                            );\n                            this.props.setFemaleOnPosition(\n                              schoolPost.female_number\n                            );\n                            this.props.setMaleOnPosition(\n                              schoolPost.male_number\n                            );\n                            this.props.setFormSteps({ ONE: true, TWO: false });\n                            this.props.setStepState({ ONE: false, TWO: false });\n                          }}\n                          disabled={this.props.loadingRequest}\n                        >\n                          Edit\n                        </button>\n                      )}\n                    </div>\n                  </td>\n                </tr>\n              ))\n            ) : (\n              <tr>\n                <td colSpan={8}>\n                  <NoResult\n                    theme={NoResultThemes.Dark}\n                    value={\"No request have been made!\"}\n                  />\n                </td>\n              </tr>\n            )}\n          </tbody>\n        </table>\n\n        {this.props.viewPost &&\n          this.props.modalState === null &&\n          this.props.thisPost &&\n          this.props.systemPositions && (\n            <ViewRequest\n              thisPost={this.props.thisPost}\n              setThisPost={this.props.setThisPost}\n              setViewPost={this.props.setViewPost}\n              systemPositions={this.props.systemPositions}\n              schoolPlacements={this.props.schoolPlacements}\n              setPostId={this.props.setPostId}\n              setModalState={this.props.setModalState}\n              setPositionId={this.props.setPositionId}\n              setRequestedPosts={this.props.setRequestedPosts}\n              setRequestExplanation={this.props.setRequestExplanation}\n              setFemaleOnPosition={this.props.setFemaleOnPosition}\n              setMaleOnPosition={this.props.setMaleOnPosition}\n              setFormSteps={this.props.setFormSteps}\n              setStepState={this.props.setStepState}\n            />\n          )}\n      </div>\n    );\n  }\n}\n\nexport default RequestList;\n","import React, { Fragment } from \"react\";\nimport { FaSchool } from \"react-icons/fa\";\nimport { VscOpenPreview } from \"react-icons/vsc\";\n\ninterface StepsHeaderProps {\n  currentStep: number;\n  stepState: {\n    ONE: boolean;\n    TWO: boolean;\n  };\n  setFormSteps: (value: { ONE: boolean; TWO: boolean }) => void;\n}\n\nconst StepsHeader: React.FC<StepsHeaderProps> = (props) => {\n  return (\n    <Fragment>\n      <div className=\"p-5\">\n        <div className=\"mx-4 p-4\">\n          <div className=\"flex items-center\">\n            {/* STEP ONE ================================== */}\n            <div\n              className={`flex items-center ${\n                props.currentStep === 1\n                  ? \"text-white\"\n                  : props.stepState.ONE\n                  ? \"text-blue-500 cursor-pointer\"\n                  : \"text-gray-500\"\n              } relative`}\n              onClick={() =>\n                props.stepState.ONE &&\n                props.setFormSteps({\n                  ONE: true,\n                  TWO: false,\n                })\n              }\n            >\n              <div\n                className={`rounded-full transition duration-500 ease-in-out h-12 w-12 py-3 border-2 ${\n                  props.currentStep === 1\n                    ? \"border-blue-500 bg-blue-500\"\n                    : props.stepState.ONE\n                    ? \"border-blue-500 cursor-pointer\"\n                    : \"border-gray-500\"\n                }`}\n              >\n                <FaSchool className=\"feather feather-bookmark w-full h-full\" />\n              </div>\n              <div\n                className={`absolute top-0 -ml-10 text-center mt-16 w-32 text-xs font-semibold uppercase ${\n                  props.currentStep === 1\n                    ? \"text-blue-500\"\n                    : props.stepState.ONE\n                    ? \"text-blue-500 cursor-pointer\"\n                    : \"text-gray-500\"\n                }`}\n              >\n                Position\n              </div>\n            </div>\n            <div\n              className={`flex-auto border-t-2 transition duration-500 ease-in-out ${\n                props.stepState.ONE ? \"border-blue-500\" : \"border-gray-300\"\n              }`}\n            ></div>\n\n            {/* STEP TWO ================================== */}\n            <div\n              className={`flex items-center ${\n                props.currentStep === 4\n                  ? \"text-white\"\n                  : props.stepState.TWO\n                  ? \"text-blue-500 cursor-pointer\"\n                  : \"text-gray-500\"\n              } relative`}\n              onClick={() =>\n                props.stepState.TWO &&\n                props.setFormSteps({\n                  ONE: false,\n                  TWO: false,\n                })\n              }\n            >\n              <div\n                className={`rounded-full transition duration-500 ease-in-out h-12 w-12 py-3 border-2 ${\n                  props.currentStep === 4\n                    ? \"border-blue-500 bg-blue-500\"\n                    : props.stepState.TWO\n                    ? \"border-blue-500 cursor-pointer\"\n                    : \"border-gray-500\"\n                }`}\n              >\n                <VscOpenPreview className=\"feather feather-database w-full h-full\" />\n              </div>\n              <div\n                className={`absolute top-0 -ml-10 text-center mt-16 w-32 text-xs font-semibold uppercase ${\n                  props.currentStep === 4\n                    ? \"text-blue-500\"\n                    : props.stepState.TWO\n                    ? \"text-blue-500\"\n                    : \"text-gray-500\"\n                }`}\n              >\n                Description\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </Fragment>\n  );\n};\n\nexport default StepsHeader;\n","import axios from \"axios\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport {\n  Auth,\n  PushPopupAlert,\n  schoolLevelsStoreInterface,\n} from \"../../actions\";\nimport { createSchoolPost } from \"../../actions/schools\";\nimport { PopupAlertData } from \"../../components/Alert/Popup\";\nimport { PositionAPI } from \"../../interfaces\";\nimport { PopupAlertTheme } from \"../../interfaces/popupAlert\";\nimport { StoreState } from \"../../reducers\";\nimport { getPositionById, isEmptyOrSpaces } from \"../../shared/dataTest\";\nimport {\n  PostRequestStatusInterface,\n  PostSchoolInterface,\n  SchoolsInterface,\n} from \"../../shared/interfaces\";\nimport { API } from \"../../utils/api\";\nimport { errorToText } from \"../../utils/errors\";\nimport ViewPosition from \"../Positions/ViewPosition\";\nimport StepsHeader from \"./StepsHeader\";\n\ninterface RequestPostFormProps {\n  loadingRequest: boolean;\n  setLoadingRequest: (value: boolean) => void;\n  formSteps: {\n    ONE: boolean;\n    TWO: boolean;\n  };\n  setFormSteps: (value: { ONE: boolean; TWO: boolean }) => void;\n  stepState: {\n    ONE: boolean;\n    TWO: boolean;\n  };\n  setStepState: (value: { ONE: boolean; TWO: boolean }) => void;\n  positionId: string;\n  setPositionId: (value: string) => void;\n  setRequestedPosts: (value: number) => void;\n  requestedPosts: number;\n  maleOnPosition: number;\n  femaleOnPosition: number;\n  setFemaleOnPosition: (value: number) => void;\n  setMaleOnPosition: (value: number) => void;\n  requestExplanation: string;\n  setRequestExplanation: (value: string) => void;\n  modalState: \"CREATE\" | \"UPDATE\" | \"RECEIVE\" | null;\n  setModalState: (value: \"CREATE\" | \"UPDATE\" | \"RECEIVE\" | null) => void;\n  formError: {\n    element: string;\n    msg: string;\n  } | null;\n  setFormError: (\n    value: {\n      element: string;\n      msg: string;\n    } | null\n  ) => void;\n\n  //   REDUX =================\n  auth: Auth;\n  schools: SchoolsInterface[];\n  schoolPosts: PostSchoolInterface[];\n  schoolLevels: schoolLevelsStoreInterface;\n  systemPositions: PositionAPI[] | null;\n  createSchoolPost: Function;\n  PushPopupAlert: (alert: PopupAlertData) => void;\n}\n\ninterface RequestPostFormState {\n  selectedLevel: string;\n}\n\nexport class RequestPostForm extends Component<\n  RequestPostFormProps,\n  RequestPostFormState\n> {\n  constructor(props: RequestPostFormProps) {\n    super(props);\n\n    this.state = {\n      selectedLevel: \"\",\n    };\n  }\n\n  GetAllowedPositions = (position_id?: string): PositionAPI[] => {\n    if (this.props.systemPositions) {\n      if (this.props.schoolPosts.length > 0) {\n        let postPositionIds: string[] = [];\n        for (const key in this.props.schoolPosts) {\n          if (\n            Object.prototype.hasOwnProperty.call(this.props.schoolPosts, key)\n          ) {\n            if (\n              this.props.schoolPosts[key].requested_post_status !==\n              PostRequestStatusInterface.RECEIVED\n            ) {\n              if (\n                !position_id ||\n                position_id !== this.props.schoolPosts[key].position_id\n              ) {\n                postPositionIds.push(this.props.schoolPosts[key].position_id);\n              }\n            }\n          }\n        }\n        if (position_id) {\n          postPositionIds = postPositionIds.filter(\n            (item) => item !== position_id\n          );\n        }\n        return this.props.systemPositions.filter(\n          (item) => !postPositionIds.includes(item.position_id)\n        );\n      }\n      return this.props.systemPositions;\n    }\n    return [];\n  };\n\n  submitRequest = async (e: React.FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n    // if (this.props.modalState === \"RECEIVE\" && this.props.receivedPosts < 0) {\n    //   return this.props.setFormError({\n    //     element: \"received_posts\",\n    //     msg: \"Invalid number of received post\",\n    //   });\n    // }\n    // if (\n    //   this.props.modalState === \"RECEIVE\" &&\n    //   this.props.thisPost &&\n    //   this.props.receivedPosts > this.props.thisPost.needed_posts\n    // ) {\n    //   return this.props.setFormError({\n    //     element: \"received_posts\",\n    //     msg: \"Invalid number of received post\",\n    //   });\n    // }\n\n    if (this.props.requestedPosts <= 0) {\n      return this.props.setFormError({\n        element: \"requested_posts\",\n        msg: \"Needed post must be greater than 0\",\n      });\n    }\n\n    if (isEmptyOrSpaces(this.props.requestExplanation)) {\n      return this.props.setFormError({\n        element: \"comment\",\n        msg: \"Explanation is required!\",\n      });\n    }\n\n    const thisSchool = this.props.schools.find(\n      (item) => item._id === this.props.auth.user_access.school_id\n    );\n\n    if (!thisSchool) {\n      return this.props.PushPopupAlert({\n        title: \"No district id found\",\n        theme: PopupAlertTheme.danger,\n      });\n    }\n\n    this.props.setLoadingRequest(true);\n    try {\n      if (this.props.modalState === \"CREATE\") {\n        const res = await axios.post<{ data: PostSchoolInterface }>(\n          `${API.PLACEMENT}/requestpost`,\n          {\n            school_id: this.props.auth.user_access.school_id,\n            position_id: this.props.positionId,\n            district_id: thisSchool.district_id,\n            needed_posts: this.props.requestedPosts,\n            male_number: this.props.maleOnPosition,\n            female_number: this.props.femaleOnPosition,\n            // description: 44,\n            description: this.props.requestExplanation,\n            occupied_posts:\n              Number(this.props.maleOnPosition) +\n              Number(this.props.femaleOnPosition),\n            requested_by: this.props.auth.user.user_id,\n          }\n        );\n        if (res) {\n          this.props.createSchoolPost(res.data.data);\n          this.props.setPositionId(\"\");\n          this.props.setRequestedPosts(0);\n          this.props.setFemaleOnPosition(0);\n          this.props.setMaleOnPosition(0);\n          this.props.setRequestExplanation(\"\");\n          this.props.setFormSteps({ ONE: true, TWO: false });\n          this.props.setStepState({ ONE: false, TWO: false });\n          this.props.PushPopupAlert({\n            title: `Post(s) has been requested!`,\n            theme: PopupAlertTheme.success,\n          });\n        }\n      }\n    } catch (error) {\n      console.error({ role_error: error });\n      this.props.PushPopupAlert({\n        title: errorToText(error),\n        theme: PopupAlertTheme.danger,\n      });\n    }\n    this.props.setLoadingRequest(false);\n  };\n\n  setSchoolLevel = (value: string) => {\n    this.setState({ selectedLevel: value });\n  };\n\n  getPositionByLevelId = (\n    allPosition: PositionAPI[],\n    levelId: string\n  ): PositionAPI[] => {\n    if (isEmptyOrSpaces(levelId)) {\n      return allPosition;\n    }\n    return allPosition.filter(\n      (item) => item.school_level_id.school_level_id === levelId\n    );\n  };\n\n  render() {\n    return (\n      <div>\n        <StepsHeader\n          currentStep={this.props.formSteps.TWO ? 2 : 1}\n          stepState={this.props.stepState}\n          setFormSteps={this.props.setFormSteps}\n        />\n        <div className=\"px-4 mx-auto mb-4 mt-3\">\n          {this.props.formSteps.ONE && (\n            <section>\n              <div className=\"flex flex-col mb-4\">\n                <label>School level</label>\n                <select\n                  className=\"border-2 border-gray-700 bg-white p-2 rounded focus:outline-none focus:bg-gray-100\"\n                  value={this.state.selectedLevel}\n                  onChange={(e) => {\n                    this.setSchoolLevel(e.target.value);\n                  }}\n                >\n                  <option value=\"\">Choose level</option>\n                  {this.props.schoolLevels.school_levels &&\n                  this.props.schoolLevels.school_levels.length > 0 ? (\n                    this.props.schoolLevels.school_levels.map((item, index) => (\n                      <option key={index + 11} value={item.school_level_id}>\n                        {item.school_level_name}\n                      </option>\n                    ))\n                  ) : (\n                    <option>No school level found</option>\n                  )}\n                </select>\n              </div>\n\n              <div className=\"flex flex-col\">\n                <label>Select Position {this.props.positionId}</label>\n                <select\n                  className=\"border-2 border-gray-700 bg-white p-2 rounded focus:outline-none focus:bg-gray-100\"\n                  value={this.props.positionId}\n                  onChange={(e) => {\n                    this.props.setPositionId(e.target.value);\n                  }}\n                >\n                  <option value=\"\">Choose Position</option>\n                  {this.props.systemPositions &&\n                  this.getPositionByLevelId(\n                    this.GetAllowedPositions(\n                      this.props.positionId.length > 0\n                        ? this.props.positionId\n                        : \"\"\n                    ),\n                    this.state.selectedLevel\n                  ).length > 0 ? (\n                    this.getPositionByLevelId(\n                      this.GetAllowedPositions(\n                        this.props.positionId.length > 0\n                          ? this.props.positionId\n                          : \"\"\n                      ),\n                      this.state.selectedLevel\n                    ).map((position, index) => (\n                      <option key={index + 11} value={position.position_id}>\n                        {position.position_title}\n                      </option>\n                    ))\n                  ) : (\n                    <option>No position found</option>\n                  )}\n                </select>\n              </div>\n              {this.props.positionId.length > 0 &&\n                this.props.systemPositions &&\n                getPositionById(\n                  this.props.systemPositions,\n                  this.props.positionId\n                ) && (\n                  <div className=\"my-2 rounded border\">\n                    <ViewPosition\n                      thisPosition={\n                        getPositionById(\n                          this.props.systemPositions,\n                          this.props.positionId\n                        )!\n                      }\n                      isGuest={true}\n                    />\n                  </div>\n                )}\n              <div className=\"bg-white w-full flex justify-end\">\n                {this.props.positionId.length > 0 && (\n                  <button\n                    className=\"btn btn-blue m-1 mr-2 mb-2 animate__animated animate__fadeIn focus:outline-none\"\n                    onClick={() => {\n                      this.props.setFormSteps({\n                        ONE: false,\n                        TWO: true,\n                      });\n                      this.props.setStepState({\n                        ONE: true,\n                        TWO: false,\n                      });\n                    }}\n                  >\n                    Continue\n                  </button>\n                )}\n              </div>\n            </section>\n          )}\n          <form onSubmit={this.submitRequest}>\n            <div className=\"bg-white\">\n              {this.props.formSteps.TWO && (\n                <div className=\"text-base leading-6 space-y-4 text-gray-700 sm:text-lg sm:leading-7\">\n                  <div className=\"mb-4 md:flex md:justify-between\">\n                    <div className=\"mb-4 md:mr-2 md:mb-0 w-full\">\n                      <label\n                        className=\"block mb-2 text-sm font-bold text-gray-700\"\n                        htmlFor=\"female\"\n                      >\n                        Current number of Female on this position\n                      </label>\n                      <input\n                        className=\"appearance-none rounded w-full py-1 px-4 border-2 border-gray-700 bg-white focus:outline-none focus:bg-gray-100\"\n                        id=\"female\"\n                        type=\"number\"\n                        min={0}\n                        value={this.props.femaleOnPosition}\n                        onChange={(e) =>\n                          this.props.setFemaleOnPosition(Number(e.target.value))\n                        }\n                        placeholder=\"Current number of Female on this position\"\n                      />\n                      {/* <p className=\"text-xs italic text-red-500\">\n                          Please choose a password.\n                        </p> */}\n                    </div>\n                    <div className=\"md:ml-2 w-full\">\n                      <label\n                        className=\"block mb-2 text-sm font-bold text-gray-700\"\n                        htmlFor=\"male\"\n                      >\n                        Current number of Male on this position\n                      </label>\n                      <input\n                        className=\"appearance-none rounded w-full py-1 px-4 border-2 border-gray-700 bg-white focus:outline-none focus:bg-gray-100\"\n                        id=\"male\"\n                        type=\"number\"\n                        min={0}\n                        value={this.props.maleOnPosition}\n                        onChange={(e) =>\n                          this.props.setMaleOnPosition(Number(e.target.value))\n                        }\n                        placeholder=\"Current number of Male on this post\"\n                      />\n                    </div>\n                  </div>\n                  <div className=\"flex flex-col\">\n                    <label>Needed posts (number)</label>\n                    <input\n                      type=\"number\"\n                      className={`appearance-none rounded w-full py-1 px-4 border-2 bg-white focus:outline-none focus:bg-gray-100 ${\n                        this.props.formError &&\n                        this.props.formError.element === \"requested_posts\"\n                          ? \"border-red-700\"\n                          : \"border-gray-700\"\n                      }`}\n                      value={this.props.requestedPosts}\n                      onChange={(e) => {\n                        this.props.setRequestedPosts(Number(e.target.value));\n                        this.props.formError &&\n                          this.props.formError.element === \"requested_posts\" &&\n                          this.props.setFormError(null);\n                      }}\n                      placeholder=\"1\"\n                    />\n                    {this.props.formError &&\n                      this.props.formError.element === \"requested_posts\" && (\n                        <span className=\"text-xs italic text-red-700 mt-1\">\n                          {this.props.formError.msg}\n                        </span>\n                      )}\n                  </div>\n                  <div className=\"flex flex-col\">\n                    <label>Explanation</label>\n                    <textarea\n                      name=\"description\"\n                      className={`appearance-none rounded w-full py-1 px-4 border-2 bg-white focus:outline-none focus:bg-gray-100 ${\n                        this.props.formError &&\n                        this.props.formError.element === \"comment\"\n                          ? \"border-red-700\"\n                          : \"border-gray-700\"\n                      }`}\n                      id=\"description\"\n                      placeholder=\"Explanation\"\n                      value={this.props.requestExplanation}\n                      onChange={(e) => {\n                        this.props.setRequestExplanation(e.target.value);\n                        this.props.formError &&\n                          this.props.formError.element === \"comment\" &&\n                          this.props.setFormError(null);\n                      }}\n                      rows={2}\n                    ></textarea>\n                    {this.props.formError &&\n                      this.props.formError.element === \"comment\" && (\n                        <span className=\"text-xs italic text-red-700 mt-1\">\n                          {this.props.formError.msg}\n                        </span>\n                      )}\n                  </div>\n                </div>\n              )}\n              <div className=\"pt-4 flex justify-between\">\n                <button\n                  className=\"btn bg-gray-400 text-white hover:bg-gray-600\"\n                  onClick={() => {\n                    this.props.setPositionId(\"\");\n                    this.props.setRequestedPosts(0);\n                    this.props.setFemaleOnPosition(0);\n                    this.props.setMaleOnPosition(0);\n                    this.props.setRequestExplanation(\"\");\n                    this.props.setModalState(null);\n                    this.props.setFormError(null);\n                    this.props.setFormSteps({ ONE: true, TWO: false });\n                    this.props.setStepState({ ONE: false, TWO: false });\n                  }}\n                >\n                  Exit\n                </button>\n                {this.props.formSteps.TWO && (\n                  <button\n                    className=\"btn bg-primary text-white hover:bg-blue-600\"\n                    disabled={this.props.loadingRequest}\n                  >\n                    {this.props.loadingRequest ? \"Loading...\" : \"Request\"}\n                  </button>\n                )}\n              </div>\n            </div>\n          </form>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = ({\n  auth,\n  schools,\n  system_settings,\n  schoolLevels,\n}: StoreState): {\n  auth: Auth;\n  schools: SchoolsInterface[];\n  schoolPosts: PostSchoolInterface[];\n  schoolLevels: schoolLevelsStoreInterface;\n  systemPositions: PositionAPI[] | null;\n} => {\n  return {\n    auth: auth,\n    schools: schools.schools,\n    schoolPosts: schools.schoolPosts,\n    schoolLevels,\n    systemPositions: system_settings.systemPositions,\n  };\n};\n\nexport default connect(mapStateToProps, {\n  createSchoolPost,\n  PushPopupAlert,\n})(RequestPostForm);\n","import React, { Component } from \"react\";\nimport { GiTeacher } from \"react-icons/gi\";\nimport { connect } from \"react-redux\";\nimport { Redirect } from \"react-router-dom\";\nimport {\n  Auth,\n  loadSchoolLevels,\n  PushPopupAlert,\n  schoolLevelsStoreInterface,\n} from \"../../actions\";\nimport {\n  getSchools,\n  fetchSchoolPosts,\n  createSchoolPost,\n  updateSchoolPost,\n  getSchoolPlacement,\n} from \"../../actions/schools\";\nimport { getPositions } from \"../../actions/settings\";\nimport { PopupAlertData } from \"../../components/Alert/Popup\";\nimport { PositionAPI } from \"../../interfaces\";\nimport {\n  placedCandidateInterface,\n  PlacedCandidateStatus,\n} from \"../../interfaces/marks_publication\";\nimport { PopupAlertTheme } from \"../../interfaces/popupAlert\";\nimport { StoreState } from \"../../reducers\";\nimport { SchoolsInterface, PostSchoolInterface } from \"../../shared/interfaces\";\nimport ReceivePost from \"./ReceivePost\";\nimport RequestList from \"./RequestList\";\nimport RequestPostForm from \"./RequestPostForm\";\n\nexport const getPlacementByRequest = (\n  placements: placedCandidateInterface[],\n  request: string,\n  status: PlacedCandidateStatus = PlacedCandidateStatus.PENDING\n): placedCandidateInterface[] => {\n  // position id must be replaced with request id\n  return placements.filter(\n    (item) => item.request_id === request && item.status === status\n  );\n};\n\ninterface RequestTeacherProps {\n  auth: Auth;\n  schools: SchoolsInterface[];\n  schoolLevels: schoolLevelsStoreInterface;\n  systemPositions: PositionAPI[] | null;\n  schoolPosts: PostSchoolInterface[];\n  schoolPlacements: placedCandidateInterface[] | null;\n  getPositions: Function;\n  fetchSchoolPosts: Function;\n  getSchoolPlacement: Function;\n  createSchoolPost: Function;\n  updateSchoolPost: Function;\n  getSchools: Function;\n  loadSchoolLevels: (callback: (loading: boolean) => void) => void;\n  PushPopupAlert: (alert: PopupAlertData) => void;\n}\n\ninterface RequestTeacherState {\n  loading: boolean;\n  loadingPost: boolean;\n  loadingRequest: boolean;\n  modalState: \"CREATE\" | \"UPDATE\" | \"RECEIVE\" | null;\n  filterByPosition: string;\n  positionId: string;\n  requestedPosts: number;\n  femaleOnPosition: number;\n  maleOnPosition: number;\n  requestExplanation: string;\n  formSteps: {\n    ONE: boolean;\n    TWO: boolean;\n  };\n  stepState: {\n    ONE: boolean;\n    TWO: boolean;\n  };\n  thisPost: PostSchoolInterface | null;\n  viewPost: boolean;\n  postId: string;\n  receivedPosts: number;\n  formError: {\n    element: string;\n    msg: string;\n  } | null;\n}\nclass RequestTeacher extends Component<\n  RequestTeacherProps,\n  RequestTeacherState\n> {\n  constructor(props: RequestTeacherProps) {\n    super(props);\n\n    this.state = {\n      loading: true,\n      loadingPost: true,\n      loadingRequest: false,\n      modalState: null,\n      filterByPosition: \"\",\n      positionId: \"\",\n      requestedPosts: 0,\n      femaleOnPosition: 0,\n      maleOnPosition: 0,\n      requestExplanation: \"\",\n      formSteps: { ONE: true, TWO: false },\n      stepState: { ONE: false, TWO: false },\n      thisPost: null,\n      viewPost: false,\n      postId: \"\",\n      receivedPosts: 0,\n      formError: null,\n    };\n  }\n\n  setLoading = (value: boolean) => {\n    this.setState({ loading: value });\n  };\n\n  setLoadingRequest = (value: boolean) => {\n    this.setState({ loadingRequest: value });\n  };\n\n  setLoadingPost = (value: boolean) => {\n    this.setState({ loadingPost: value });\n  };\n\n  setViewPost = (value: boolean) => {\n    this.setState({ viewPost: value });\n  };\n\n  setPostId = (value: string) => {\n    this.setState({ postId: value });\n  };\n\n  setFormError = (\n    value: {\n      element: string;\n      msg: string;\n    } | null\n  ) => {\n    this.setState({ formError: value });\n  };\n\n  setPositionId = (value: string) => {\n    this.setState({ positionId: value });\n  };\n  setRequestedPosts = (value: number) => {\n    this.setState({ requestedPosts: value });\n  };\n  setFemaleOnPosition = (value: number) => {\n    this.setState({ femaleOnPosition: value });\n  };\n  setMaleOnPosition = (value: number) => {\n    this.setState({ maleOnPosition: value });\n  };\n  setRequestExplanation = (value: string) => {\n    this.setState({ requestExplanation: value });\n  };\n  setFormSteps = (value: { ONE: boolean; TWO: boolean }) => {\n    this.setState({ formSteps: value });\n  };\n  setStepState = (value: { ONE: boolean; TWO: boolean }) => {\n    this.setState({ stepState: value });\n  };\n  setFilterByPosition = (value: string) => {\n    this.setState({ filterByPosition: value });\n  };\n\n  setThisPost = (value: PostSchoolInterface | null) => {\n    this.setState({ thisPost: value });\n  };\n\n  setModalState = (value: \"CREATE\" | \"UPDATE\" | \"RECEIVE\" | null) => {\n    this.setState({ modalState: value });\n  };\n\n  setReceivedPosts = (value: number) => {\n    this.setState({ receivedPosts: value });\n  };\n\n  componentDidMount = () => {\n    if (this.props.auth.user_access.school_id.length <= 0) {\n      return <Redirect to=\"/apps-page\" />;\n    }\n    if (!this.props.schools.length && this.state.loading) {\n      this.props.getSchools((status: boolean, msg: string) => {\n        this.setLoading(status);\n        if (msg.length > 0) {\n          console.error({ loadingCandidatesError: msg });\n          this.setLoading(false);\n        }\n      });\n    } else {\n      this.setLoading(false);\n    }\n\n    if (!this.props.schoolPlacements) {\n      this.props.getSchoolPlacement(\n        this.props.auth.user_access.school_id,\n        (status: boolean, msg: string, data?: placedCandidateInterface[]) => {\n          this.setLoading(status);\n          if (!status && msg.length > 0) {\n            console.error({ getSchoolPlacementError: msg });\n          }\n        }\n      );\n    } else {\n      this.setLoading(false);\n    }\n\n    if (\n      this.props.systemPositions === null ||\n      (this.props.systemPositions.length === 0 && this.state.loading)\n    ) {\n      this.setLoading(true);\n      this.props.getPositions((status: boolean, msg: string) => {\n        this.setLoading(status);\n        console.log({ status: status, msg: msg });\n        if (msg.length) {\n          this.props.PushPopupAlert({\n            title: msg,\n            theme: PopupAlertTheme.danger,\n          });\n        }\n      });\n    } else {\n      this.setLoading(false);\n    }\n\n    if (\n      this.props.schoolLevels.school_levels === null ||\n      (this.props.schoolLevels.school_levels.length === 0 && this.state.loading)\n    ) {\n      this.props.loadSchoolLevels(this.setLoading);\n    }\n\n    if (!this.props.schoolPosts.length && this.state.loadingPost) {\n      this.props.fetchSchoolPosts(\n        this.props.auth.user_access.school_id,\n        (status: boolean, message: string) => {\n          if (!status) {\n            if (message.length > 0 && this.state.loadingPost) {\n              console.error(\"error loading school post: \", message);\n              this.props.PushPopupAlert({\n                title: message,\n                theme: PopupAlertTheme.danger,\n              });\n            }\n            this.setState({ loadingPost: false });\n          }\n        }\n      );\n    } else {\n      this.setState({ loadingPost: false });\n    }\n  };\n\n  getPositionById = (\n    systemPositions: PositionAPI[],\n    positionId: string\n  ): PositionAPI | undefined => {\n    return systemPositions.find((item) => item.position_id === positionId);\n  };\n\n  render() {\n    if (this.state.loading) {\n      return (\n        <div className=\"text-center mt-7 font-bold text-4xl text-gray-400 animate-pulse\">\n          Loading data...\n        </div>\n      );\n    }\n\n    return (\n      <div>\n        {/* header title */}\n        <div className=\"flex flex-row items-start gap-3 my-2\">\n          <GiTeacher className=\"text-blue-700 w-10 h-10 md:block hidden\" />\n          <div className=\"w-full\">\n            <div className=\"flex justify-between w-full\">\n              <div className=\"flex flex-col gap-1 justify-between\">\n                <h1 className=\"md:text-4xl text-3xl font-semibold\">\n                  Teacher Request\n                </h1>\n\n                <div className=\"flex-row items-center md:gap-3 gap-2 hidden\">\n                  <div className=\"flex flex-row items-center mt-1 gap-1\">\n                    <span className=\"text-gray-600 text-xl\">level:</span>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n        {/* end header title */}\n\n        <div className=\"bg-white shadow p-2 rounded\">\n          {!this.state.modalState && this.props.schoolPlacements && (\n            <RequestList\n              systemPositions={this.props.systemPositions}\n              setModalState={this.setModalState}\n              loadingRequest={this.state.loadingRequest}\n              setFilterByPosition={this.setFilterByPosition}\n              schoolPosts={this.props.schoolPosts}\n              setThisPost={this.setThisPost}\n              setViewPost={this.setViewPost}\n              setPostId={this.setPostId}\n              setPositionId={this.setPositionId}\n              setRequestedPosts={this.setRequestedPosts}\n              setRequestExplanation={this.setRequestExplanation}\n              setFemaleOnPosition={this.setFemaleOnPosition}\n              setMaleOnPosition={this.setMaleOnPosition}\n              setFormSteps={this.setFormSteps}\n              setStepState={this.setStepState}\n              thisPost={this.state.thisPost}\n              viewPost={this.state.viewPost}\n              modalState={this.state.modalState}\n              schoolPlacements={this.props.schoolPlacements}\n              filterByPosition={this.state.filterByPosition}\n            />\n          )}\n\n          {(this.state.modalState === \"CREATE\" ||\n            this.state.modalState === \"UPDATE\") && (\n            <RequestPostForm\n              loadingRequest={this.state.loadingRequest}\n              setLoadingRequest={this.setLoadingRequest}\n              formSteps={this.state.formSteps}\n              setFormSteps={this.setFormSteps}\n              stepState={this.state.stepState}\n              setStepState={this.setStepState}\n              positionId={this.state.positionId}\n              setPositionId={this.setPositionId}\n              setRequestedPosts={this.setRequestedPosts}\n              requestedPosts={this.state.requestedPosts}\n              maleOnPosition={this.state.maleOnPosition}\n              femaleOnPosition={this.state.femaleOnPosition}\n              setFemaleOnPosition={this.setFemaleOnPosition}\n              setMaleOnPosition={this.setMaleOnPosition}\n              requestExplanation={this.state.requestExplanation}\n              setRequestExplanation={this.setRequestExplanation}\n              modalState={this.state.modalState}\n              setModalState={this.setModalState}\n              formError={this.state.formError}\n              setFormError={this.setFormError}\n            />\n          )}\n\n          {this.state.modalState === \"RECEIVE\" &&\n            this.state.thisPost &&\n            this.props.systemPositions &&\n            this.props.schoolPlacements && (\n              <ReceivePost\n                loadingPost={this.state.loadingPost}\n                loadingRequest={this.state.loadingRequest}\n                positionId={this.state.positionId}\n                thisPost={this.state.thisPost}\n                viewPost={this.state.viewPost}\n                receivedPosts={this.state.receivedPosts}\n                formError={this.state.formError}\n                systemPositions={this.props.systemPositions}\n                setThisPost={this.setThisPost}\n                setModalState={this.setModalState}\n                setFormError={this.setFormError}\n                setReceivedPosts={this.setReceivedPosts}\n                setLoadingRequest={this.setLoadingRequest}\n                setLoadingPost={this.setLoadingPost}\n                placementList={this.props.schoolPlacements}\n              />\n            )}\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = ({\n  auth,\n  schools,\n  system_settings,\n  schoolLevels,\n}: StoreState): {\n  auth: Auth;\n  schools: SchoolsInterface[];\n  schoolPosts: PostSchoolInterface[];\n  schoolPlacements: placedCandidateInterface[] | null;\n  schoolLevels: schoolLevelsStoreInterface;\n  systemPositions: PositionAPI[] | null;\n} => {\n  return {\n    auth: auth,\n    schools: schools.schools,\n    schoolPosts: schools.schoolPosts,\n    schoolPlacements: schools.schoolPlacements,\n    schoolLevels,\n    systemPositions: system_settings.systemPositions,\n  };\n};\n\nexport const PostRequest = connect(mapStateToProps, {\n  loadSchoolLevels,\n  getPositions,\n  getSchools,\n  fetchSchoolPosts,\n  getSchoolPlacement,\n  createSchoolPost,\n  updateSchoolPost,\n  PushPopupAlert,\n})(RequestTeacher);\n","import React, { useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Redirect } from \"react-router-dom\";\nimport Modal, { ModalSize, Themes } from \"../../components/Modal/Modal\";\nimport Table from \"../../components/Table/Table\";\nimport { StoreState } from \"../../reducers\";\nimport {\n  PostRequestStatusInterface,\n  PostSchoolInterface,\n  SchoolsInterface,\n} from \"../../shared/interfaces\";\nimport {\n  fetchDistrictPosts,\n  createSchoolPost,\n  getSchools,\n  updateSchoolPost,\n  getDistrictPlacement,\n} from \"../../actions/schools\";\nimport {\n  capitalizeFirstLetter,\n  getPositionById,\n  isEmptyOrSpaces,\n} from \"../../shared/dataTest\";\nimport { GiTeacher } from \"react-icons/gi\";\nimport { Auth, PushPopupAlert } from \"../../actions\";\nimport { PopupAlertData } from \"../../components/Alert/Popup\";\nimport { PopupAlertTheme } from \"../../interfaces/popupAlert\";\nimport { PositionAPI } from \"../../interfaces\";\nimport { getPositions } from \"../../actions/settings\";\nimport axios from \"axios\";\nimport { API } from \"../../utils/api\";\nimport { errorToText } from \"../../utils/errors\";\nimport { getSchoolById } from \"../district/Schools\";\nimport { DATE } from \"../../utils/functions\";\nimport {\n  placedCandidateInterface,\n  PlacedCandidateStatus,\n} from \"../../interfaces/marks_publication\";\nimport { getPlacementByRequest } from \"../HeadTeacher/RequestTeacher\";\n\ninterface AppProps {\n  auth: Auth;\n  schools: SchoolsInterface[];\n  systemPositions: PositionAPI[] | null;\n  districtPosts: PostSchoolInterface[];\n  districtPlacements: placedCandidateInterface[] | null;\n  getPositions: Function;\n  fetchDistrictPosts: Function;\n  createSchoolPost: Function;\n  updateSchoolPost: Function;\n  getSchools: Function;\n  getDistrictPlacement: Function;\n  PushPopupAlert: (alert: PopupAlertData) => void;\n}\n\nconst _District: React.FC<AppProps> = (props) => {\n  const [loadingPosition, setLoadingPosition] = useState<boolean>(false);\n  const [loadingPost, setLoadingPost] = useState<boolean>(true);\n  const [loadingPlacement, setLoadingPlacement] = useState<boolean>(true);\n  const [modalState, setModalState] = useState<\"CONFIRM\" | \"UPDATE\" | null>(\n    null\n  );\n  const [filterByPosition, setFilterByPosition] = useState<string>(\"all\");\n  const [loadingRequest, setLoadingRequest] = useState<boolean>(false);\n  const [loading, setLoading] = useState<boolean>(true);\n  const [thisPost, setThisPost] = useState<PostSchoolInterface | null>(null);\n  const [viewPost, setViewPost] = useState<boolean>(false);\n  const [approvedPosts, setApprovedPosts] = useState<number>(0);\n  const [formError, setFormError] = useState<{\n    element: string;\n    msg: string;\n  } | null>(null);\n\n  useEffect(() => {\n    if (!isEmptyOrSpaces(props.auth.user_access.district_id)) {\n      if (!props.schools.length && loading) {\n        props.getSchools((status: boolean, msg: string) => {\n          setLoading(status);\n          if (msg.length > 0) {\n            console.error({ loadingCandidatesError: msg });\n          }\n        });\n      } else if (loading) {\n        setLoading(false);\n        loadingPosition && setLoadingPosition(false);\n      }\n\n      if (props.systemPositions === null) {\n        setLoadingPosition(true);\n        props.getPositions((status: boolean, msg: string) => {\n          setLoadingPosition(status);\n          console.log({ status: status, msg: msg });\n          if (msg.length) {\n            props.PushPopupAlert({\n              title: msg,\n              theme: PopupAlertTheme.danger,\n            });\n          }\n        });\n      }\n      if (!props.districtPosts.length && loadingPost) {\n        props.fetchDistrictPosts(\n          props.auth.user_access.district_id,\n          (status: boolean, message: string) => {\n            if (!status) {\n              if (message.length > 0 && loadingPost) {\n                console.error(\"error loading school post: \", message);\n                props.PushPopupAlert({\n                  title: message,\n                  theme: PopupAlertTheme.danger,\n                });\n              }\n              setLoadingPost(false);\n            }\n          }\n        );\n      } else if (loadingPost) {\n        setLoadingPost(false);\n      }\n\n      if (!props.districtPlacements) {\n        props.getDistrictPlacement(\n          props.auth.user_access.district_id,\n          (status: boolean, message: string) => {\n            if (!status) {\n              if (message.length > 0 && loadingPlacement) {\n                console.error(\"error loading school post: \", message);\n                props.PushPopupAlert({\n                  title: message,\n                  theme: PopupAlertTheme.danger,\n                });\n              }\n              setLoadingPlacement(false);\n            }\n          }\n        );\n      } else if (loadingPlacement) {\n        setLoadingPlacement(false);\n      }\n    }\n  }, [loading, loadingPlacement, loadingPosition, loadingPost, props]);\n\n  if (isEmptyOrSpaces(props.auth.user_access.district_id)) {\n    return <Redirect to=\"/\" />;\n  }\n\n  if (loading === true) {\n    return (\n      <div className=\"text-center mt-7 font-bold text-4xl text-gray-400 animate-pulse\">\n        Loading data...\n      </div>\n    );\n  }\n\n  const tableData = (): JSX.Element[] => {\n    if (loadingPost) {\n      return [\n        <tr key={1} className=\"border-b border-gray-200 hover:bg-gray-100\">\n          <td className=\"p-3 text-center\" colSpan={8}>\n            Loading post request(s)\n          </td>\n        </tr>,\n      ];\n    }\n\n    let data = props.districtPosts;\n\n    data =\n      filterByPosition !== \"\" && filterByPosition !== \"all\"\n        ? data.filter(\n            (schoolPost) => schoolPost.position_id === filterByPosition\n          )\n        : data;\n\n    if (data.length === 0) {\n      return [\n        <tr key={1} className=\"border-b border-gray-200 hover:bg-gray-100\">\n          <td className=\"p-3 text-center\" colSpan={8}>\n            No Data Found\n          </td>\n        </tr>,\n      ];\n    }\n\n    return data.map((schoolPost, index) => (\n      <tr\n        key={index + 1}\n        className=\"border-b border-gray-200 hover:bg-gray-100\"\n      >\n        <td className=\"py-3 px-4 text-left\">\n          {getSchoolById(props.schools, schoolPost.school_id)\n            ? getSchoolById(props.schools, schoolPost.school_id)!.school_name\n            : \"Unknown school\"}\n        </td>\n        <td className=\"py-3 px-4 text-left\">\n          {props.systemPositions &&\n          getPositionById(props.systemPositions, schoolPost.position_id)\n            ? getPositionById(props.systemPositions, schoolPost.position_id)!\n                .position_title\n            : \"Unknown position\"}\n        </td>\n        <td className=\"py-3 px-4 text-left text-base font-bold\">\n          {schoolPost.needed_posts}\n        </td>\n        <td className=\"py-3 px-4 text-left text-base font-medium\">\n          {schoolPost.requested_post_status !==\n          PostRequestStatusInterface.INITIATED\n            ? schoolPost.confirmed_posts\n            : \"-\"}\n        </td>\n        <td className=\"py-3 px-4 text-left text-base font-medium\">\n          {schoolPost.occupied_posts\n            ? schoolPost.occupied_posts +\n              (schoolPost.requested_post_status ===\n              PostRequestStatusInterface.RECEIVED\n                ? schoolPost.received_posts\n                  ? schoolPost.received_posts\n                  : 0\n                : 0)\n            : \"-\"}\n        </td>\n        <td className=\"py-3 px-4 text-left text-base font-medium\">\n          {schoolPost.requested_post_status !==\n          PostRequestStatusInterface.INITIATED\n            ? (schoolPost.confirmed_posts ? schoolPost.confirmed_posts : 0) -\n              (schoolPost.requested_post_status ===\n              PostRequestStatusInterface.RECEIVED\n                ? schoolPost.received_posts\n                  ? schoolPost.received_posts\n                  : 0\n                : 0)\n            : \"-\"}\n        </td>\n        <td>\n          <span\n            className={`px-2 py-1 font-semibold rounded ${\n              schoolPost.requested_post_status ===\n              PostRequestStatusInterface.INITIATED\n                ? \"text-gray-700 bg-gray-100 dark:bg-gray-700 dark:text-gray-100\"\n                : schoolPost.requested_post_status ===\n                  PostRequestStatusInterface.CONFIRMED\n                ? \"text-blue-700 bg-blue-100 dark:bg-blue-700 dark:text-blue-100\"\n                : \"text-green-800 bg-green-100 dark:bg-green-800 dark:text-green-100\"\n            }`}\n          >\n            {schoolPost.requested_post_status ===\n            PostRequestStatusInterface.INITIATED\n              ? \"Pending\"\n              : capitalizeFirstLetter(schoolPost.requested_post_status)}\n          </span>\n        </td>\n        <td className=\"py- text-left\">\n          <div className=\"flex item-center justify-end gap-1\">\n            {schoolPost.requested_post_status ===\n              PostRequestStatusInterface.INITIATED && (\n              <button\n                className=\"\n                btn\n                bg-gray-400\n                text-gray-50\n                hover:bg-gray-600\n                transition\n                ease-out\n                duration-500\n                flex items-center\n              \"\n                title=\"View User Profile\"\n                onClick={() => {\n                  setThisPost(schoolPost);\n                  setModalState(\"CONFIRM\");\n                }}\n              >\n                Reply\n              </button>\n            )}\n            <button\n              className=\"\n                btn\n                btn-blue\n                transition\n                ease-out\n                duration-500\n                flex items-center\n              \"\n              title=\"View User Profile\"\n              onClick={() => {\n                setThisPost(schoolPost);\n                setViewPost(true);\n              }}\n            >\n              Details\n            </button>\n            {/* {schoolPost.requested_post_status ===\n              PostRequestStatusInterface.INITIATED && (\n              <button\n                className=\"btn bg-gray-500 text-white hover:bg-gray-700\"\n                onClick={() => {\n                  setModalState(\"UPDATE\");\n                }}\n                disabled={loadingRequest}\n              >\n                Edit\n              </button>\n            )} */}\n          </div>\n        </td>\n      </tr>\n    ));\n  };\n\n  const doPlacement = async (thisPost: PostSchoolInterface) => {\n    try {\n      const res = await axios.post<any[]>(\n        `${API.PLACEMENT}/doplace/${thisPost.school_id}/${thisPost.position_id}`,\n        { request_id: thisPost.requested_post_id }\n      );\n\n      if (res) {\n        console.log(\"====================================\");\n        console.log({ doPlacement: res });\n        console.log(\"====================================\");\n        props.fetchDistrictPosts(\n          props.auth.user_access.district_id,\n          (status: boolean, message: string) => {\n            if (!status) {\n              if (message.length > 0 && loadingPost) {\n                console.error(\"error loading school post: \", message);\n                props.PushPopupAlert({\n                  title: message,\n                  theme: PopupAlertTheme.danger,\n                });\n              }\n              setLoadingPost(false);\n            }\n          }\n        );\n\n        let msgAlert: string = \"\";\n        if (res.data.length > 0) {\n          if (res.data.length === approvedPosts) {\n            msgAlert = \"All confirmed posts has been placed on school!\";\n          } else {\n            msgAlert = `${res.data.length} of ${approvedPosts} post(s) has been placed on school!`;\n          }\n        } else {\n          msgAlert = \"Post request has been confirmed but no placement done!\";\n        }\n\n        setThisPost(null);\n        setApprovedPosts(0);\n        setModalState(null);\n        props.PushPopupAlert({\n          title: msgAlert,\n          theme:\n            res.data.length > 0\n              ? PopupAlertTheme.success\n              : PopupAlertTheme.info,\n        });\n      }\n    } catch (error) {\n      console.error({ doPlacement_reply: error });\n      props.PushPopupAlert({\n        title: errorToText(error),\n        theme: PopupAlertTheme.danger,\n      });\n    }\n  };\n\n  const reDoPlacement = async (thisPost: PostSchoolInterface) => {\n    try {\n      const res = await axios.post<any[]>(\n        `${API.PLACEMENT}/doplace/${thisPost.school_id}/${thisPost.position_id}`,\n        { request_id: thisPost.requested_post_id }\n      );\n\n      if (res) {\n        console.log(\"====================================\");\n        console.log({ reDoPlacement: res });\n        console.log(\"====================================\");\n        props.fetchDistrictPosts(\n          props.auth.user_access.district_id,\n          (status: boolean, message: string) => {\n            if (!status) {\n              if (message.length > 0 && loadingPost) {\n                console.error(\"error loading school post: \", message);\n                props.PushPopupAlert({\n                  title: message,\n                  theme: PopupAlertTheme.danger,\n                });\n              }\n              setLoadingPost(false);\n            }\n          }\n        );\n\n        let msgAlert: string = \"\";\n        if (res.data.length > 0) {\n          if (res.data.length === approvedPosts) {\n            msgAlert = \"All confirmed posts has been placed on school!\";\n          } else {\n            msgAlert = `${res.data.length} of ${\n              thisPost.occupied_posts\n                ? thisPost.occupied_posts -\n                  (thisPost.received_posts ? thisPost.received_posts : 0)\n                : 0\n            } post(s) has been placed on school!`;\n          }\n        } else {\n          msgAlert =\n            \"Placement failed, Please wait for the next application period!\";\n        }\n\n        props.PushPopupAlert({\n          title: msgAlert,\n          theme:\n            res.data.length > 0\n              ? PopupAlertTheme.success\n              : PopupAlertTheme.info,\n        });\n      }\n    } catch (error) {\n      console.error({ doPlacement_reply: error });\n      props.PushPopupAlert({\n        title: errorToText(error),\n        theme: PopupAlertTheme.danger,\n      });\n    }\n  };\n\n  const addSchoolRequest = async (thisPost: PostSchoolInterface) => {\n    let thisSchool = getSchoolById(props.schools, thisPost.school_id);\n    if (thisSchool) {\n      const dataForm: {\n        school_id: string;\n        school_name: string;\n        district_id: string;\n        sector_id: string;\n        province_id: string;\n        gender: \"M\" | \"F\";\n        available_places: {\n          position_id: string;\n          requested_teacher: number;\n        }[];\n      }[] = [\n        {\n          school_id: thisSchool._id,\n          school_name: thisSchool.school_name,\n          district_id: thisSchool.district_id,\n          sector_id: thisSchool.sector_id,\n          province_id: thisSchool.district_id,\n          gender: thisPost.male_number > thisPost.female_number ? \"F\" : \"M\",\n          available_places: [\n            {\n              position_id: thisPost.position_id,\n              requested_teacher: approvedPosts,\n            },\n          ],\n        },\n      ];\n\n      let data = { requested_teachers: dataForm };\n      console.log(\"====================================\");\n      console.log({ requested_teachers: dataForm, data });\n      console.log(\"====================================\");\n\n      try {\n        const res = await axios.post(`${API.PLACEMENT}/requestteachers/`, data);\n\n        if (res) {\n          console.log(\"====================================\");\n          console.log({ addSchoolRequest: res });\n          console.log(\"====================================\");\n          await doPlacement(thisPost);\n        }\n      } catch (error) {\n        console.error({ addSchoolRequest_reply: error });\n        props.PushPopupAlert({\n          title: errorToText(error),\n          theme: PopupAlertTheme.danger,\n        });\n      }\n    }\n  };\n\n  const submitRequest = async (e: React.FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n    if (!thisPost) {\n      return;\n    }\n\n    if (approvedPosts < 0) {\n      return setFormError({\n        element: \"approved_posts\",\n        msg: \"Invalid number of approved post\",\n      });\n    }\n\n    if (approvedPosts > thisPost.needed_posts) {\n      return setFormError({\n        element: \"approved_posts\",\n        msg: \"Approved post can't be greater than needed post\",\n      });\n    }\n\n    setLoadingRequest(true);\n    try {\n      if (modalState === \"CONFIRM\") {\n        const res = await axios.patch<{ data: PostSchoolInterface }>(\n          `${API.PLACEMENT}/requestpost/${thisPost.requested_post_id}`,\n          {\n            confirmed_posts: approvedPosts,\n            confirmed_by: props.auth.user.user_id,\n            received_posts: 0,\n            approval_date: new Date(),\n            school_id: thisPost.school_id,\n            position_id: thisPost.position_id,\n            district_id: thisPost.district_id,\n            needed_posts: thisPost.needed_posts,\n            male_number: thisPost.male_number,\n            female_number: thisPost.female_number,\n            description: thisPost.description,\n            occupied_posts: thisPost.occupied_posts,\n            requested_by: props.auth.user.user_id,\n            requested_post_status: PostRequestStatusInterface.CONFIRMED,\n          }\n        );\n        if (res) {\n          // props.updateSchoolPost(\"SCHOOL\", res.data.data);\n          await addSchoolRequest(thisPost);\n        }\n      }\n    } catch (error) {\n      console.error({ post_relpy: error });\n      props.PushPopupAlert({\n        title: errorToText(error),\n        theme: PopupAlertTheme.danger,\n      });\n    }\n    setLoadingRequest(false);\n  };\n\n  return (\n    <React.Fragment>\n      {/* header title */}\n      <div className=\"flex flex-row items-center gap-4 my-2\">\n        <GiTeacher className=\"text-blue-600 text-5xl md:block hidden\" />\n        <div className=\"w-full\">\n          <div className=\"flex justify-between w-full\">\n            <div className=\"flex flex-col gap-1 justify-between\">\n              <h1 className=\"md:text-4xl text-3xl font-semibold\">\n                Schools requests\n              </h1>\n            </div>\n          </div>\n        </div>\n      </div>\n      {/* end header title */}\n      <div className=\"grid md:grid-cols-5 gap-2 bg-white shadow-md p-2\">\n        <div className={`md:col-span-5 rounded`}>\n          <div className=\"my-2 flex sm:flex-row flex-col justify-between\">\n            <div className=\"flex flex-col md:flex-row\">\n              <select\n                className=\"border-2 border-gray-700 bg-white p-2 rounded focus:outline-none\"\n                value={filterByPosition}\n                onChange={(e) => setFilterByPosition(e.target.value)}\n              >\n                <option value=\"all\">All Position</option>\n                {props.systemPositions && props.systemPositions.length > 0 ? (\n                  props.systemPositions.map((position, index) => (\n                    <option key={index + 1} value={position.position_id}>\n                      {position.position_title}\n                    </option>\n                  ))\n                ) : (\n                  <option value=\"\">No Position found</option>\n                )}\n              </select>\n            </div>\n          </div>\n          <Table\n            columns={[\n              { columnTitle: \"SCHOOL\", alignText: \"left\", padding: \"p-3\" },\n              { columnTitle: \"POSITION\", alignText: \"left\", padding: \"p-3\" },\n              { columnTitle: \"REQUEST\", alignText: \"left\", padding: \"p-3\" },\n              { columnTitle: \"APPROVED\", alignText: \"left\", padding: \"p-3\" },\n              { columnTitle: \"OCCUPIED\", alignText: \"left\", padding: \"p-3\" },\n              { columnTitle: \"VACCANTS\", alignText: \"left\", padding: \"p-3\" },\n              { columnTitle: \"STATUS\", alignText: \"left\", padding: \"p-3\" },\n              { columnTitle: \"\", alignText: \"left\", padding: \"p-3\" },\n            ]}\n            rows={tableData}\n            pagination={true}\n            search={true}\n            thColor=\"gray\"\n          />\n        </div>\n      </div>\n\n      {/* responde Modal */}\n      {modalState && thisPost && props.systemPositions && (\n        <Modal\n          backDrop={true}\n          theme={Themes.default}\n          close={(): void => {\n            setThisPost(null);\n            setModalState(null);\n          }}\n          displayClose={true}\n          backDropClose={false}\n          title={\n            <div className=\"flex flex-row gap-4 items-center\">\n              {/* <IoBriefcase className=\"text-5xl text-gray-500\" /> */}\n              <div className=\"flex flex-col\">\n                <span className=\"font-bold text-2xl text-gray-500\">\n                  Responding to Requesting Teachers\n                </span>\n              </div>\n            </div>\n          }\n          widthSizeClass={ModalSize.medium}\n          padding={{ title: true, body: false, footer: false }}\n        >\n          <div className=\"px-4 mx-auto mb-4 mt-3\">\n            <form onSubmit={submitRequest}>\n              <div className=\"bg-white\">\n                <div className=\"text-base leading-6 space-y-4 text-gray-700 sm:text-lg sm:leading-7\">\n                  <div className=\"flex flex-col\">\n                    <label>School</label>\n                    <input\n                      type=\"text\"\n                      className=\"appearance-none rounded w-full py-1 px-4 border-2 border-gray-700 bg-white focus:outline-none focus:bg-gray-100\"\n                      value={\n                        getSchoolById(props.schools, thisPost.school_id)\n                          ?.school_name\n                      }\n                      placeholder=\"school name\"\n                      disabled\n                    />\n                  </div>\n                  <div className=\"flex flex-col\">\n                    <label>Position</label>\n                    <input\n                      type=\"text\"\n                      className=\"appearance-none rounded w-full py-1 px-4 border-2 border-gray-700 bg-white focus:outline-none focus:bg-gray-100\"\n                      value={\n                        getPositionById(\n                          props.systemPositions,\n                          thisPost.position_id\n                        )\n                          ? getPositionById(\n                              props.systemPositions,\n                              thisPost.position_id\n                            )!.position_title\n                          : \"\"\n                      }\n                      placeholder=\"position title\"\n                      disabled\n                    />\n                  </div>\n                  <div className=\"flex flex-col\">\n                    <label>Needed posts (number)</label>\n                    <input\n                      type=\"number\"\n                      className=\"appearance-none rounded w-full py-1 px-4 border-2 border-gray-700 bg-white focus:outline-none focus:bg-gray-100\"\n                      value={thisPost.needed_posts}\n                      min={1}\n                      placeholder=\"1\"\n                      disabled\n                    />\n                  </div>\n                  <div className=\"flex flex-col\">\n                    <label>Occupation (number)</label>\n                    <input\n                      type=\"number\"\n                      className=\"appearance-none rounded w-full py-1 px-4 border-2 border-gray-700 bg-white focus:outline-none focus:bg-gray-100\"\n                      value={thisPost.occupied_posts}\n                      min={1}\n                      placeholder=\"1\"\n                      disabled\n                    />\n                  </div>\n                  <div className=\"flex flex-col\">\n                    <label>Explanation</label>\n                    <textarea\n                      className=\"appearance-none rounded w-full py-1 px-4 border-2 border-gray-700 bg-white focus:outline-none focus:bg-gray-100\"\n                      placeholder=\"Explanation\"\n                      value={thisPost.description}\n                      rows={2}\n                      disabled\n                    ></textarea>\n                  </div>\n                  <div className=\"flex flex-col\">\n                    <label>Requested date</label>\n                    <input\n                      type=\"text\"\n                      className=\"appearance-none rounded w-full py-1 px-4 border-2 border-gray-700 bg-white focus:outline-none focus:bg-gray-100\"\n                      value={DATE(thisPost.request_date.toString())}\n                      placeholder=\"YYYY/MM/DD\"\n                      disabled\n                    />\n                  </div>\n\n                  <div className=\"flex flex-col\">\n                    <label>Approved posts (number)</label>\n                    <input\n                      type=\"number\"\n                      className={`appearance-none rounded w-full py-1 px-4 border-2 bg-white focus:outline-none focus:bg-gray-100 ${\n                        formError !== null &&\n                        formError.element === \"approved_posts\"\n                          ? \"border-red-500\"\n                          : \"border-gray-700\"\n                      }`}\n                      value={approvedPosts}\n                      onChange={(e) => {\n                        setApprovedPosts(Number(e.target.value));\n                      }}\n                      min={0}\n                      max={thisPost.needed_posts}\n                      placeholder=\"1\"\n                      disabled={loadingRequest}\n                    />\n                    {formError !== null &&\n                      formError.element === \"approved_posts\" && (\n                        <span className=\"text-red-600 font-bold text-xs\">\n                          {formError.msg}\n                        </span>\n                      )}\n                  </div>\n                </div>\n                <div className=\"pt-4 flex justify-between\">\n                  <button\n                    className=\"btn bg-gray-400 text-white hover:bg-gray-600\"\n                    onClick={() => {\n                      setThisPost(null);\n                      setApprovedPosts(0);\n                      setModalState(null);\n                    }}\n                  >\n                    Exit\n                  </button>\n                  <button\n                    className=\"btn bg-primary text-white hover:bg-blue-600\"\n                    disabled={loadingRequest}\n                  >\n                    {loadingRequest ? \"Loading...\" : \"Request\"}\n                  </button>\n                </div>\n              </div>\n            </form>\n          </div>\n        </Modal>\n      )}\n      {/* End of responde Modal */}\n\n      {viewPost && modalState === null && thisPost && props.systemPositions && (\n        <Modal\n          backDrop={true}\n          theme={Themes.default}\n          close={(): void => {\n            setThisPost(null);\n            setViewPost(false);\n          }}\n          displayClose={true}\n          backDropClose={false}\n          title={\n            <div className=\"flex flex-row gap-4 items-center\">\n              {/* <IoBriefcase className=\"text-5xl text-gray-500\" /> */}\n              <div className=\"flex flex-col\">\n                <span className=\"font-bold text-2xl text-gray-500\">\n                  Viewing Post Request\n                </span>\n              </div>\n            </div>\n          }\n          widthSizeClass={ModalSize.large}\n          padding={{ title: true, body: false, footer: false }}\n        >\n          <section className=\"px-4 mx-auto mb-4 mt-3 flex items-start\">\n            <section className=\"w-full\">\n              <div className=\"flex flex-row item-center justify-left gap-3 mb-2\">\n                <span className=\"text-gray-500\">Position: </span>\n                <span className=\"font-bold\">\n                  {getPositionById(props.systemPositions, thisPost.position_id)\n                    ? getPositionById(\n                        props.systemPositions,\n                        thisPost.position_id\n                      )!.position_title\n                    : \"Unknown position\"}\n                </span>\n                <button className=\"rounded-full border-2 px-3 border-blue-500 hover:bg-blue-50 hidden\">\n                  more\n                </button>\n              </div>\n              <div className=\"flex flex-row item-center justify-left gap-3 mb-2\">\n                <span className=\"text-gray-500\">Requested posts: </span>\n                <span className=\"font-bold text-xl\">\n                  {thisPost.needed_posts}\n                </span>\n              </div>\n              <div className=\"flex flex-row item-center justify-left gap-3 mb-2\">\n                <span className=\"text-gray-500\">Confirmed posts: </span>\n                <span className=\"font-bold text-xl\">\n                  {thisPost.confirmed_posts}\n                </span>\n              </div>\n              <div className=\"flex flex-row item-center justify-left gap-3 mb-2\">\n                <span className=\"text-gray-500\">Received posts: </span>\n                <span className=\"font-bold text-xl\">\n                  {thisPost.requested_post_status ===\n                  PostRequestStatusInterface.RECEIVED\n                    ? thisPost.received_posts\n                    : \"-\"}\n                </span>\n              </div>\n              <div className=\"flex flex-row item-center justify-left gap-3 mb-2\">\n                <span className=\"text-gray-500\">Occupation: </span>\n                <span className=\"font-bold text-xl\">\n                  {thisPost.occupied_posts\n                    ? thisPost.occupied_posts +\n                      (thisPost.requested_post_status ===\n                      PostRequestStatusInterface.RECEIVED\n                        ? thisPost.received_posts\n                          ? thisPost.received_posts\n                          : 0\n                        : 0)\n                    : 0}\n                </span>\n              </div>\n              <div className=\"flex flex-row item-center justify-left gap-3 mb-2\">\n                <span className=\"text-gray-500\">Not received posts: </span>\n                <span className=\"font-bold text-xl\">\n                  {props.districtPlacements\n                    ? getPlacementByRequest(\n                        props.districtPlacements,\n                        thisPost.requested_post_id,\n                        PlacedCandidateStatus.REJECTED\n                      ).length\n                    : \"-\"}\n                  {props.districtPlacements &&\n                    getPlacementByRequest(\n                      props.districtPlacements,\n                      thisPost.requested_post_id,\n                      PlacedCandidateStatus.REJECTED\n                    ).length > 0 && (\n                      <button\n                        className=\"font-bold ml-2 py-1 px-4 rounded bg-gray-500 text-white hover:bg-gray-700\"\n                        onClick={() => reDoPlacement(thisPost)}\n                        disabled={loadingRequest}\n                      >\n                        Do placement\n                      </button>\n                    )}\n                </span>\n              </div>\n              <div className=\"flex flex-row item-center justify-left gap-3 mb-2\">\n                <span className=\"text-gray-500\">Request reason: </span>\n                <span className=\"font-bold text-xl\">\n                  {thisPost.description}\n                </span>\n              </div>\n              <div className=\"flex flex-row item-center justify-left gap-3 mb-2\">\n                <span className=\"text-gray-500\">Status: </span>\n                <span\n                  className={`px-2 py-1 mx-1 font-semibold rounded ${\n                    thisPost.requested_post_status ===\n                    PostRequestStatusInterface.INITIATED\n                      ? \"text-gray-700 bg-gray-100 dark:bg-gray-700 dark:text-gray-100\"\n                      : thisPost.requested_post_status ===\n                        PostRequestStatusInterface.CONFIRMED\n                      ? \"text-blue-700 bg-blue-100 dark:bg-blue-700 dark:text-blue-100\"\n                      : \"text-green-800 bg-green-100 dark:bg-green-800 dark:text-green-100\"\n                  }`}\n                >\n                  {thisPost.requested_post_status ===\n                  PostRequestStatusInterface.INITIATED\n                    ? \"Pending\"\n                    : capitalizeFirstLetter(thisPost.requested_post_status)}\n                </span>\n              </div>\n            </section>\n            <div className=\"mb-3 flex items-center justify-end gap-2\">\n              {thisPost.requested_post_status ===\n                PostRequestStatusInterface.INITIATED && (\n                <button\n                  className=\"font-bold py-1 px-4 rounded bg-gray-500 text-white hover:bg-gray-700\"\n                  onClick={() => {\n                    setModalState(\"UPDATE\");\n                  }}\n                  disabled={\n                    thisPost.requested_post_status !==\n                    PostRequestStatusInterface.INITIATED\n                  }\n                >\n                  Edit\n                </button>\n              )}\n            </div>\n          </section>\n        </Modal>\n      )}\n    </React.Fragment>\n  );\n};\n\nconst mapStateToProps = ({\n  auth,\n  schools,\n  system_settings,\n}: StoreState): {\n  auth: Auth;\n  schools: SchoolsInterface[];\n  districtPosts: PostSchoolInterface[];\n  districtPlacements: placedCandidateInterface[] | null;\n  systemPositions: PositionAPI[] | null;\n} => {\n  return {\n    auth: auth,\n    schools: schools.schools,\n    districtPosts: schools.districtPosts,\n    districtPlacements: schools.districtPlacements,\n    systemPositions: system_settings.systemPositions,\n  };\n};\n\nexport const District = connect(mapStateToProps, {\n  getPositions,\n  getSchools,\n  fetchDistrictPosts,\n  getDistrictPlacement,\n  createSchoolPost,\n  updateSchoolPost,\n  PushPopupAlert,\n})(_District);\n"],"sourceRoot":""}
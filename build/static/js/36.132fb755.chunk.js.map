{"version":3,"sources":["containers/Admin/ShortListingReport/ChartView.tsx","containers/Admin/ShortListingReport/ShortListingReport.tsx","utils/ExportToExcel.tsx"],"names":["ChartView","props","setLoading","status","setState","loading","state","maxData","series","name","data","district_max","map","item","max_count","options","chart","type","height","plotOptions","bar","borderRadius","horizontal","dataLabels","enabled","xaxis","categories","district_name","allData","total_count","className","id","this","Component","_ShortListingReport","loadShortListingReport","institution","a","session_plan","axios","get","API","APPLICATION","_id","res","positions","positions_list","loadAllPositionsByInstitute","education_institute_id","console","log","GetDistrictDataTotal","district_code","total","test","find","itm","district_of_residence_id","undefined","count","GetDistrictMaximumSits","max","selected_position","selected_position_id","position_test","pos","position_id","position_title","GetDistrictsDataMax","response","districts","maxDistrictCounts","position_name","componentDidMount","FC_getLocations","error","locations","msg","schoolLevels","selectedEducationCategory","education_categories","auth","education_institution_id","setSelectedEducationCategory","exportExcel","alert","FC_UpdateApplicationToPrint","arrayNew","n","key","Object","prototype","hasOwnProperty","call","element","thisPosition","dataArray","Nyarugenge","Gasabo","Kicukiro","Nyanza","Gisagara","Nyaruguru","Huye","Nyamagabe","Ruhango","Muhanga","Kamonyi","Karongi","Rutsiro","Rubavu","Nyabihu","Ngororero","Rusizi","Nyamasheke","Rulindo","Gakenke","Musanze","Burera","Gicumbi","Rwamagana","Nyagatare","Gatsibo","Kayonza","Kirehe","Ngoma","Bugesera","push","datToPrint","searchData","viewType","generateReportModal","formError","reportTitle","Loading","description","onClick","capitalizeFirstWord","session_plan_name","reportType","length","district","i","colSpan","position","k","d","d_find","commaFy","Modal","title","backDrop","theme","Themes","default","close","backDropClose","widthSizeClass","ModalSize","medium","displayClose","padding","placeholder","value","onChange","e","target","disabled","isEmptyOrSpaces","ExportToExcel","fileData","fileName","btnName","ShortListingReport","connect","system","showIcon","apiData","wb","Sheets","XLSX","json_to_sheet","SheetNames","excelBuffer","bookType","Blob","FileSaver","exportToCSV"],"mappings":"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","file":"static/js/36.132fb755.chunk.js","sourcesContent":["import { ApexOptions } from \"apexcharts\";\nimport React, { Component } from \"react\";\nimport ReactApexChart from \"react-apexcharts\";\n\ninterface DistrictsMaximumPositions {\n  series: {\n    name: string;\n    data: number[];\n  }[];\n  options: ApexOptions;\n}\n\ninterface ChartViewProps {\n  district_max: {\n    district_code: string;\n    district_name: string;\n    position_id: string;\n    position_name: string;\n    total_count: number;\n    max_count: number;\n  }[];\n}\ninterface ChartViewState {\n  loading: boolean;\n  maxData: DistrictsMaximumPositions;\n  allData: DistrictsMaximumPositions;\n}\n\nexport class ChartView extends Component<ChartViewProps, ChartViewState> {\n  constructor(props: ChartViewProps) {\n    super(props);\n\n    this.state = {\n      loading: false,\n      maxData: {\n        series: [\n          {\n            name: \"Minimum sits\",\n            data: this.props.district_max.map((item) => item.max_count),\n          },\n        ],\n        options: {\n          chart: {\n            type: \"bar\",\n            height: 500,\n          },\n          plotOptions: {\n            bar: {\n              borderRadius: 6,\n              horizontal: true,\n            },\n          },\n          dataLabels: {\n            enabled: true,\n          },\n          xaxis: {\n            categories: this.props.district_max.map(\n              (item) => item.district_name\n            ),\n          },\n        },\n      },\n      allData: {\n        series: [\n          {\n            name: \"Minimum sits\",\n            data: this.props.district_max.map((item) => item.max_count),\n          },\n          {\n            name: \"All applicants\",\n            data: this.props.district_max.map((item) => item.total_count),\n          },\n        ],\n        options: {\n          chart: {\n            type: \"bar\",\n            height: 800,\n          },\n          plotOptions: {\n            bar: {\n              borderRadius: 0,\n              horizontal: true,\n            },\n          },\n          dataLabels: {\n            enabled: false,\n          },\n          xaxis: {\n            categories: this.props.district_max.map(\n              (item) => item.district_name\n            ),\n          },\n        },\n      },\n    };\n  }\n  setLoading = (status: boolean) => this.setState({ loading: status });\n\n  render() {\n    return (\n      <div>\n        <div className=\"bg-white rounded p-3 mb-5 mt-3\">\n          <div className=\"text-2xl font-bold mt-3 text-gray-600\">\n            Districts and minimum candidates\n          </div>\n          <div id=\"chart\">\n            <ReactApexChart\n              options={this.state.maxData.options}\n              series={this.state.maxData.series}\n              type=\"bar\"\n            />\n          </div>\n        </div>\n        <div className=\"bg-white rounded p-3 mb-5 mt-3\">\n          <div className=\"text-2xl font-bold mt-3 text-gray-600\">Summary</div>\n          <div id=\"chart\">\n            <ReactApexChart\n              options={this.state.allData.options}\n              series={this.state.allData.series}\n              type=\"area\"\n            />\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n","import axios from \"axios\";\nimport React, { Component } from \"react\";\nimport { MdBarChart, MdTableView } from \"react-icons/md\";\nimport { SiMicrosoftexcel } from \"react-icons/si\";\nimport { connect } from \"react-redux\";\nimport {\n  Auth,\n  positionsStoreInterface,\n  schoolLevelsStoreInterface,\n  System,\n  setSelectedEducationCategory,\n  FC_getLocations,\n  LocationAPI,\n  loadAllPositionsByInstitute,\n} from \"../../../actions\";\nimport Loading from \"../../../components/Loading/Loading\";\nimport Modal, { Themes, ModalSize } from \"../../../components/Modal/Modal\";\nimport { education_category } from \"../../../interfaces\";\nimport { ShortlistingDataToPrintInterface } from \"../../../interfaces/shortlisting.types\";\nimport { StoreState } from \"../../../reducers\";\nimport { capitalizeFirstWord, isEmptyOrSpaces } from \"../../../shared/dataTest\";\nimport { API } from \"../../../utils/api\";\nimport ExportToExcel from \"../../../utils/ExportToExcel\";\nimport { commaFy } from \"../../../utils/functions\";\nimport { ChartView } from \"./ChartView\";\n\nexport interface ShortListingDataInterface {\n  district_of_residence_id: string;\n  count: number;\n}\n\nexport interface ShortListingReportInterface {\n  _id: string;\n  data: ShortListingDataInterface[];\n  count: number;\n}\n\ninterface ShortListingReportProps {\n  auth: Auth;\n  system: System;\n  positions: positionsStoreInterface;\n  schoolLevels: schoolLevelsStoreInterface;\n  setSelectedEducationCategory: (data: education_category) => void;\n  loadAllPositionsByInstitute: (\n    institution_id: string,\n    callback: (loading: boolean) => void\n  ) => void;\n}\ninterface ShortListingReportState {\n  loading: boolean;\n  data: ShortListingReportInterface[] | null;\n  searchData: string;\n  districts: LocationAPI | null;\n  error: string;\n  viewType: \"Table\" | \"Chart\";\n  datToPrint: ShortlistingDataToPrintInterface[] | null;\n  generateReportModal: {\n    reportType: \"EXCEL\" | \"PDF\";\n    status: boolean;\n  } | null;\n  formError: {\n    element: string;\n    msg: string;\n  } | null;\n  reportTitle: string;\n}\n\nclass _ShortListingReport extends Component<\n  ShortListingReportProps,\n  ShortListingReportState\n> {\n  constructor(props: ShortListingReportProps) {\n    super(props);\n\n    this.state = {\n      loading: false,\n      data: null,\n      searchData: \"\",\n      districts: null,\n      error: \"\",\n      viewType: \"Table\",\n      datToPrint: null,\n      generateReportModal: null,\n      formError: null,\n      reportTitle: \"Shortlisting report\",\n    };\n  }\n  setLoading = (status: boolean) => this.setState({ loading: status });\n\n  loadShortListingReport = async (institution: education_category) => {\n    if (institution.session_plan !== null) {\n      this.setLoading(true);\n      try {\n        const res = await axios.get<ShortListingReportInterface[]>(\n          `${API.APPLICATION}/counter/dshortlisted/${institution.session_plan._id}`\n        );\n        if (res.status === 200) {\n          if (this.props.positions.positions_list === null) {\n            this.props.loadAllPositionsByInstitute(\n              institution.education_institute_id,\n              this.setLoading\n            );\n          }\n          this.setState({ loading: false, data: res.data });\n        }\n        console.log(\"Res data: \", res.data);\n      } catch (error: any) {\n        this.setLoading(false);\n        console.log(\"Err: \", { ...error });\n      }\n    }\n  };\n\n  GetDistrictDataTotal = (district_code: string): number => {\n    let total: number = 0;\n    if (this.state.data !== null) {\n      for (const item of this.state.data) {\n        const test = item.data.find(\n          (itm) => itm.district_of_residence_id === district_code\n        );\n        if (test !== undefined) {\n          total += test.count;\n        }\n      }\n    }\n    return total;\n  };\n\n  GetDistrictMaximumSits = (\n    district_code: string\n  ): {\n    position_id: string;\n    position_title: string;\n    count: number;\n  } => {\n    let max: number = 0;\n    let selected_position: string = \"\";\n    let selected_position_id: string = \"\";\n    if (this.state.data !== null) {\n      for (const item of this.state.data) {\n        const test = item.data.find(\n          (itm) => itm.district_of_residence_id === district_code\n        );\n        if (test !== undefined) {\n          if (test.count > max) {\n            const position_test = this.props.positions.positions_list?.find(\n              (pos) => pos.position_id === item._id\n            );\n            if (position_test !== undefined) {\n              selected_position = position_test.position_title;\n              selected_position_id = position_test.position_id;\n              max = test.count;\n            }\n          }\n        }\n      }\n    }\n    return {\n      position_id: selected_position_id,\n      position_title: selected_position,\n      count: max,\n    };\n  };\n\n  GetDistrictsDataMax = (): {\n    district_code: string;\n    district_name: string;\n    position_id: string;\n    position_name: string;\n    total_count: number;\n    max_count: number;\n  }[] => {\n    let response: {\n      district_code: string;\n      district_name: string;\n      position_id: string;\n      position_name: string;\n      total_count: number;\n      max_count: number;\n    }[] = [];\n    if (this.state.data !== null && this.state.districts !== null) {\n      for (const item of this.state.districts.districts) {\n        const maxDistrictCounts = this.GetDistrictMaximumSits(\n          item.district_code\n        );\n        response = [\n          ...response,\n          {\n            district_code: item.district_code,\n            district_name: item.district_name,\n            position_id: maxDistrictCounts.position_id,\n            position_name: maxDistrictCounts.position_title,\n            total_count: this.GetDistrictDataTotal(item.district_code),\n            max_count: maxDistrictCounts.count,\n          },\n        ];\n      }\n    }\n    return response;\n  };\n  componentDidMount = () => {\n    if (this.state.districts === null) {\n      this.setLoading(true);\n      FC_getLocations(\n        (error: boolean, locations: LocationAPI | null, msg: string) => {\n          if (locations !== null) {\n            this.setState({\n              districts: locations,\n              loading: false,\n              error: \"\",\n            });\n          } else {\n            if (error === false) {\n              this.setState({ error: msg, loading: false, districts: null });\n            }\n          }\n        }\n      );\n    }\n    if (this.props.schoolLevels.selectedEducationCategory === null) {\n      if (this.props.schoolLevels.education_categories !== null) {\n        const test = this.props.schoolLevels.education_categories.find(\n          (itm) =>\n            itm.education_institute_id ===\n            this.props.auth.education_institution_id\n        );\n        if (test !== undefined) {\n          this.props.setSelectedEducationCategory(test);\n          if (this.state.data === null) {\n            this.loadShortListingReport(test);\n          }\n        }\n      }\n    } else {\n      if (this.state.data === null) {\n        this.loadShortListingReport(\n          this.props.schoolLevels.selectedEducationCategory\n        );\n      }\n    }\n  };\n\n  // Export function\n  exportExcel = () => {\n    alert(\"Exported successfully!\");\n  };\n\n  FC_UpdateApplicationToPrint = () => {\n    if (\n      this.state.districts &&\n      this.state.data &&\n      this.props.positions.positions_list\n    ) {\n      let arrayNew: ShortlistingDataToPrintInterface[] = [];\n      let n: number = 1;\n      for (const key in this.state.data) {\n        if (Object.prototype.hasOwnProperty.call(this.state.data, key)) {\n          const element = this.state.data[key];\n          const thisPosition = this.props.positions.positions_list.find(\n            (item) => item.position_id === element._id\n          );\n          let dataArray: ShortlistingDataToPrintInterface = {\n            n: n,\n            positions: thisPosition\n              ? thisPosition.position_title\n              : \"Unknown position\",\n            Nyarugenge: element.data.find(\n              (item) => item.district_of_residence_id === \"11\"\n            )\n              ? element.data.find(\n                  (item) => item.district_of_residence_id === \"11\"\n                )!.count\n              : 0,\n            Gasabo: element.data.find(\n              (item) => item.district_of_residence_id === \"12\"\n            )\n              ? element.data.find(\n                  (item) => item.district_of_residence_id === \"12\"\n                )!.count\n              : 0,\n            Kicukiro: element.data.find(\n              (item) => item.district_of_residence_id === \"13\"\n            )\n              ? element.data.find(\n                  (item) => item.district_of_residence_id === \"13\"\n                )!.count\n              : 0,\n            Nyanza: element.data.find(\n              (item) => item.district_of_residence_id === \"21\"\n            )\n              ? element.data.find(\n                  (item) => item.district_of_residence_id === \"21\"\n                )!.count\n              : 0,\n            Gisagara: element.data.find(\n              (item) => item.district_of_residence_id === \"22\"\n            )\n              ? element.data.find(\n                  (item) => item.district_of_residence_id === \"22\"\n                )!.count\n              : 0,\n            Nyaruguru: element.data.find(\n              (item) => item.district_of_residence_id === \"23\"\n            )\n              ? element.data.find(\n                  (item) => item.district_of_residence_id === \"23\"\n                )!.count\n              : 0,\n            Huye: element.data.find(\n              (item) => item.district_of_residence_id === \"24\"\n            )\n              ? element.data.find(\n                  (item) => item.district_of_residence_id === \"24\"\n                )!.count\n              : 0,\n            Nyamagabe: element.data.find(\n              (item) => item.district_of_residence_id === \"25\"\n            )\n              ? element.data.find(\n                  (item) => item.district_of_residence_id === \"25\"\n                )!.count\n              : 0,\n            Ruhango: element.data.find(\n              (item) => item.district_of_residence_id === \"26\"\n            )\n              ? element.data.find(\n                  (item) => item.district_of_residence_id === \"26\"\n                )!.count\n              : 0,\n            Muhanga: element.data.find(\n              (item) => item.district_of_residence_id === \"27\"\n            )\n              ? element.data.find(\n                  (item) => item.district_of_residence_id === \"27\"\n                )!.count\n              : 0,\n            Kamonyi: element.data.find(\n              (item) => item.district_of_residence_id === \"28\"\n            )\n              ? element.data.find(\n                  (item) => item.district_of_residence_id === \"28\"\n                )!.count\n              : 0,\n            Karongi: element.data.find(\n              (item) => item.district_of_residence_id === \"31\"\n            )\n              ? element.data.find(\n                  (item) => item.district_of_residence_id === \"31\"\n                )!.count\n              : 0,\n            Rutsiro: element.data.find(\n              (item) => item.district_of_residence_id === \"32\"\n            )\n              ? element.data.find(\n                  (item) => item.district_of_residence_id === \"32\"\n                )!.count\n              : 0,\n            Rubavu: element.data.find(\n              (item) => item.district_of_residence_id === \"33\"\n            )\n              ? element.data.find(\n                  (item) => item.district_of_residence_id === \"33\"\n                )!.count\n              : 0,\n            Nyabihu: element.data.find(\n              (item) => item.district_of_residence_id === \"34\"\n            )\n              ? element.data.find(\n                  (item) => item.district_of_residence_id === \"34\"\n                )!.count\n              : 0,\n            Ngororero: element.data.find(\n              (item) => item.district_of_residence_id === \"35\"\n            )\n              ? element.data.find(\n                  (item) => item.district_of_residence_id === \"35\"\n                )!.count\n              : 0,\n            Rusizi: element.data.find(\n              (item) => item.district_of_residence_id === \"36\"\n            )\n              ? element.data.find(\n                  (item) => item.district_of_residence_id === \"36\"\n                )!.count\n              : 0,\n            Nyamasheke: element.data.find(\n              (item) => item.district_of_residence_id === \"37\"\n            )\n              ? element.data.find(\n                  (item) => item.district_of_residence_id === \"37\"\n                )!.count\n              : 0,\n            Rulindo: element.data.find(\n              (item) => item.district_of_residence_id === \"41\"\n            )\n              ? element.data.find(\n                  (item) => item.district_of_residence_id === \"41\"\n                )!.count\n              : 0,\n            Gakenke: element.data.find(\n              (item) => item.district_of_residence_id === \"42\"\n            )\n              ? element.data.find(\n                  (item) => item.district_of_residence_id === \"42\"\n                )!.count\n              : 0,\n            Musanze: element.data.find(\n              (item) => item.district_of_residence_id === \"43\"\n            )\n              ? element.data.find(\n                  (item) => item.district_of_residence_id === \"43\"\n                )!.count\n              : 0,\n            Burera: element.data.find(\n              (item) => item.district_of_residence_id === \"44\"\n            )\n              ? element.data.find(\n                  (item) => item.district_of_residence_id === \"44\"\n                )!.count\n              : 0,\n            Gicumbi: element.data.find(\n              (item) => item.district_of_residence_id === \"45\"\n            )\n              ? element.data.find(\n                  (item) => item.district_of_residence_id === \"45\"\n                )!.count\n              : 0,\n            Rwamagana: element.data.find(\n              (item) => item.district_of_residence_id === \"51\"\n            )\n              ? element.data.find(\n                  (item) => item.district_of_residence_id === \"51\"\n                )!.count\n              : 0,\n            Nyagatare: element.data.find(\n              (item) => item.district_of_residence_id === \"52\"\n            )\n              ? element.data.find(\n                  (item) => item.district_of_residence_id === \"52\"\n                )!.count\n              : 0,\n            Gatsibo: element.data.find(\n              (item) => item.district_of_residence_id === \"53\"\n            )\n              ? element.data.find(\n                  (item) => item.district_of_residence_id === \"53\"\n                )!.count\n              : 0,\n            Kayonza: element.data.find(\n              (item) => item.district_of_residence_id === \"54\"\n            )\n              ? element.data.find(\n                  (item) => item.district_of_residence_id === \"54\"\n                )!.count\n              : 0,\n            Kirehe: element.data.find(\n              (item) => item.district_of_residence_id === \"55\"\n            )\n              ? element.data.find(\n                  (item) => item.district_of_residence_id === \"55\"\n                )!.count\n              : 0,\n            Ngoma: element.data.find(\n              (item) => item.district_of_residence_id === \"56\"\n            )\n              ? element.data.find(\n                  (item) => item.district_of_residence_id === \"56\"\n                )!.count\n              : 0,\n            Bugesera: element.data.find(\n              (item) => item.district_of_residence_id === \"57\"\n            )\n              ? element.data.find(\n                  (item) => item.district_of_residence_id === \"57\"\n                )!.count\n              : 0,\n          };\n\n          arrayNew.push(dataArray);\n          n++;\n        }\n      }\n      this.setState({ datToPrint: arrayNew });\n      arrayNew = [];\n      n = 1;\n    }\n  };\n\n  render() {\n    const selected_institution =\n      this.props.schoolLevels.education_categories?.find(\n        (itm) =>\n          itm.education_institute_id ===\n          this.props.auth.education_institution_id\n      );\n    if (selected_institution === undefined) {\n      return (\n        <div>\n          <div className=\"rounded-xl border-2 border-gray-600 flex flex-col items-center justify-center p-7 text-center w-full mt-5 bg-white\">\n            <span className=\"font-extrabold text-3xl text-gray-600\">\n              Your institute is not yet defined\n            </span>\n            <span>\n              If you have an institute assigned to you, please refresh your page\n              or wait a moment... your page...\n              {/* You are not allowed to view shortlisting report because you have\n              no access for this report. please contact your administrator */}\n            </span>\n          </div>\n        </div>\n      );\n    }\n    if (\n      this.state.loading === null ||\n      this.state.data === null ||\n      this.props.schoolLevels.selectedEducationCategory === null ||\n      this.props.positions.positions_list === null\n    ) {\n      return (\n        <div className=\"bg-white rounded p-5 mt-5\">\n          <Loading />\n          <div className=\"-mt-5 ml-5\">Loading report, please wait...</div>\n        </div>\n      );\n    }\n    if (this.state.error !== \"\") {\n      <div onClick={() => this.setState({ error: \"\" })}>\n        <div className=\"cursor-pointer rounded-xl border-2 border-yellow-600 flex flex-col items-center justify-center p-7 text-center w-full mt-5 bg-yellow-100\">\n          <span className=\"font-extrabold text-3xl text-yellow-800\">\n            Error occurred!\n          </span>\n          <span>{this.state.error}</span>\n        </div>\n      </div>;\n    }\n    return (\n      <div>\n        <section>\n          {/* REPORT TITLE ============================================ */}\n          <div className=\"grid md:grid-cols-12\">\n            <div className=\"col-span-8\">\n              <div className=\"mt-4 flex flex-col gap-1\">\n                <span className=\"text-4xl font-bold text-gray-700\">\n                  Shortlisting report\n                </span>\n              </div>\n              <div className=\"flex flex-col\">\n                <span className=\"text-blue-600 font-bold text-lg\">\n                  {\n                    this.props.schoolLevels.selectedEducationCategory\n                      .description\n                  }\n                </span>\n              </div>\n              <div className=\"flex flex-row items-center bg-white w-max\">\n                <div\n                  onClick={() => this.setState({ viewType: \"Table\" })}\n                  className={`cursor-pointer flex flex-row gap-1 items-center border-b-4 px-5 py-2 ${\n                    this.state.viewType === \"Table\"\n                      ? \"border-blue-600 text-blue-600 font-extrabold\"\n                      : \"border-white\"\n                  }`}\n                >\n                  <div>\n                    <MdTableView className=\"text-2xl\" />\n                  </div>\n                  <span>Table view</span>\n                </div>\n                <div\n                  onClick={() => this.setState({ viewType: \"Chart\" })}\n                  className={`cursor-pointer flex flex-row gap-1 items-center border-b-4 px-5 py-2 ${\n                    this.state.viewType === \"Chart\"\n                      ? \"border-blue-600 text-blue-600 font-extrabold\"\n                      : \"border-white\"\n                  }`}\n                >\n                  <div>\n                    <MdBarChart className=\"text-2xl\" />\n                  </div>\n                  <span>Graph representation</span>\n                </div>\n              </div>\n            </div>\n            <div className=\"col-span-4\">\n              <div className=\"float-right flex flex-col mr-2 mt-4 bg-white rounded p-3 py-2\">\n                <span>Active Session</span>\n                <div className=\"border-b border-gray-400 my-1\"></div>\n                <span className=\"font-bold text-blue-600 text-lg\">\n                  {capitalizeFirstWord(\n                    this.props.schoolLevels.selectedEducationCategory\n                      .session_plan!.session_plan_name\n                  )}\n                </span>\n              </div>\n            </div>\n          </div>\n          {/* END REPORT TITLE ============================================ */}\n          {this.state.viewType === \"Table\" ? (\n            <div>\n              <div className=\"flex items-end justify-end mr-3 -mt-7\">\n                <div\n                  onClick={() => {\n                    this.FC_UpdateApplicationToPrint();\n                    this.setState({\n                      generateReportModal: {\n                        reportType: \"EXCEL\",\n                        status: true,\n                      },\n                    });\n                  }}\n                  className=\"cursor-pointer flex flex-row items-center gap-2 rounded bg-blue-100 hover:bg-blue-200 text-blue-600 hover:text-blue-700 px-3 py-2 w-max border border-blue-600 hover:border-blue-700\"\n                >\n                  <div>\n                    <SiMicrosoftexcel className=\"text-xl\" />\n                  </div>\n                  <span>Export</span>\n                </div>\n              </div>\n              {this.state.districts !== null &&\n                this.state.districts.districts.length > 0 && (\n                  <div className=\"bg-white my-4 mt-2 mr-2\">\n                    <div className=\"w-full overflow-x-auto mb-10\">\n                      <table className=\"w-full shadow\" id=\"report_content\">\n                        <thead className=\"bg-white border-b-2 border-blue-600 text-gray-600 font-extrabold text-sm\">\n                          <tr className=\"border-b border-blue-600\">\n                            <th className=\"px-4 py-2 text-black border border-blue-400\">\n                              #\n                            </th>\n                            <th className=\"px-4 py-2 text-black text-left border border-blue-400\">\n                              <div className=\"w-80\">Position/District</div>\n                            </th>\n                            {this.state.districts.districts.map(\n                              (district, i) => (\n                                <th\n                                  key={i + 1}\n                                  className=\"px-4 py-3 border text-black border-blue-400 text-center\"\n                                >\n                                  {district.district_name}\n                                </th>\n                              )\n                            )}\n                          </tr>\n                        </thead>\n                        <tbody>\n                          {this.state.data.length === 0 ? (\n                            <tr>\n                              <td\n                                colSpan={32}\n                                className=\"p-5 text-xl font-extrabold text-gray-600\"\n                              >\n                                No data found!\n                              </td>\n                            </tr>\n                          ) : (\n                            this.state.data.map((position, k) => (\n                              <tr\n                                key={k + 1}\n                                className=\"hover:bg-blue-50 hover:text-blue-700 group cursor-pointer\"\n                              >\n                                <td className=\"px-4 py-3 border border-gray-400  text-center\">\n                                  {k + 1}\n                                </td>\n                                <td className=\"px-4 py-3 border border-gray-400 w-80\">\n                                  {\n                                    this.props.positions.positions_list?.find(\n                                      (pos) => pos.position_id === position._id\n                                    )?.position_title\n                                  }\n                                </td>\n                                {this.state.districts !== null &&\n                                  this.state.districts.districts.map(\n                                    (district, d) => (\n                                      <td\n                                        key={d + 1}\n                                        className=\"px-4 py-3 border border-gray-400 text-center\"\n                                      >\n                                        {position.data.find(\n                                          (d_find) =>\n                                            d_find.district_of_residence_id ===\n                                            district.district_code\n                                        ) === undefined ||\n                                        position.data.find(\n                                          (d_find) =>\n                                            d_find.district_of_residence_id ===\n                                            district.district_code\n                                        ) === null\n                                          ? 0\n                                          : commaFy(\n                                              position.data.find(\n                                                (d_find) =>\n                                                  d_find.district_of_residence_id ===\n                                                  district.district_code\n                                              )!.count\n                                            )}\n                                      </td>\n                                    )\n                                  )}\n                              </tr>\n                            ))\n                          )}\n                        </tbody>\n                        <tfoot>\n                          <tr className=\"bg-blue-50 text-blue-600\">\n                            <td\n                              colSpan={2}\n                              className=\"font-extrabold text-lg px-4 border border-blue-400\"\n                            >\n                              Total shortlisted\n                            </td>\n                            {this.state.districts.districts.map(\n                              (district, i) => (\n                                <th\n                                  key={i + 1}\n                                  className=\"px-4 py-3 border border-blue-400 text-center\"\n                                >\n                                  <div className=\"flex flex-col font-extrabold items-center justify-center text-center w-full text-xl\">\n                                    <span>\n                                      {commaFy(\n                                        this.GetDistrictDataTotal(\n                                          district.district_code\n                                        )\n                                      )}\n                                    </span>\n                                    <span className=\"text-sm text-black font-light\">\n                                      {district.district_name}\n                                    </span>\n                                  </div>\n                                </th>\n                              )\n                            )}\n                          </tr>\n                          {/* Maximum sits */}\n                          <tr className=\"bg-green-50 text-green-600\">\n                            <td\n                              colSpan={2}\n                              className=\"font-extrabold text-lg px-4 border border-green-400\"\n                            >\n                              Maximum candidates (position)\n                            </td>\n                            {this.state.districts.districts.map(\n                              (district, i) => (\n                                <th\n                                  key={i + 1}\n                                  className=\"border border-green-400 text-center\"\n                                >\n                                  <div className=\"flex flex-col font-extrabold items-center justify-center w-max text-xl hover:bg-green-100 px-4 py-3\">\n                                    <span>\n                                      {commaFy(\n                                        this.GetDistrictMaximumSits(\n                                          district.district_code\n                                        ).count\n                                      )}\n                                    </span>\n                                    <span className=\"text-sm text-black font-light\">\n                                      {\n                                        this.GetDistrictMaximumSits(\n                                          district.district_code\n                                        ).position_title\n                                      }\n                                    </span>\n                                  </div>\n                                </th>\n                              )\n                            )}\n                          </tr>\n                        </tfoot>\n                      </table>\n                    </div>\n                  </div>\n                )}\n            </div>\n          ) : (\n            <div>\n              {/* Chart representation */}\n              <div>\n                <ChartView district_max={this.GetDistrictsDataMax()} />\n              </div>\n            </div>\n          )}\n        </section>\n\n        {this.state.generateReportModal !== null &&\n          this.state.generateReportModal.status === true && (\n            <Modal\n              title={\n                <div className=\"flex flex-row gap-4 items-center\">\n                  {/* <IoBriefcase className=\"text-5xl text-gray-500\" /> */}\n                  <div className=\"flex flex-col\">\n                    <span className=\"font-bold text-2xl text-gray-500\">\n                      Generating Report contents\n                    </span>\n                    <span className=\"text-sm text-blue-600 font-normal\">\n                      Generating Shortlisting Report\n                    </span>\n                  </div>\n                </div>\n              }\n              backDrop={true}\n              theme={Themes.default}\n              close={() => this.setState({ generateReportModal: null })}\n              backDropClose={true}\n              widthSizeClass={ModalSize.medium}\n              displayClose={true}\n              padding={{ title: true }}\n            >\n              <div className=\"px-6\">\n                <div className=\"my-2 text-base text-gray-700 sm:text-lg\">\n                  <div className=\"flex flex-col\">\n                    <label>Title</label>\n                    <input\n                      type=\"text\"\n                      className={`text-left input-white w-20 inline-block ${\n                        this.state.formError &&\n                        this.state.formError.element === \"report_title\"\n                          ? \"border-red-500\"\n                          : \"border-gray-500\"\n                      } border-2`}\n                      placeholder=\"Report title\"\n                      value={this.state.reportTitle}\n                      onChange={(e) =>\n                        this.setState({\n                          formError: null,\n                          reportTitle: e.target.value,\n                        })\n                      }\n                      disabled={this.state.datToPrint ? false : true}\n                    />\n                    {this.state.formError &&\n                      this.state.formError.element === \"report_title\" && (\n                        <span className=\"text-red-500\">\n                          {this.state.formError.msg}\n                        </span>\n                      )}\n                  </div>\n                </div>\n                <div className=\"flex justify-end mb-2 mt-4\">\n                  {this.state.datToPrint &&\n                    !isEmptyOrSpaces(this.state.reportTitle) && (\n                      <ExportToExcel\n                        fileData={this.state.datToPrint}\n                        fileName={this.state.reportTitle}\n                        btnName=\"Generate\"\n                      />\n                    )}\n                </div>\n              </div>\n            </Modal>\n          )}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = ({\n  auth,\n  system,\n  positions,\n  schoolLevels,\n}: StoreState): {\n  auth: Auth;\n  system: System;\n  positions: positionsStoreInterface;\n  schoolLevels: schoolLevelsStoreInterface;\n} => {\n  return {\n    auth: auth,\n    system: system,\n    positions: positions,\n    schoolLevels,\n  };\n};\n\nexport const ShortListingReport = connect(mapStateToProps, {\n  setSelectedEducationCategory,\n  loadAllPositionsByInstitute,\n})(_ShortListingReport);\n","import React from \"react\";\nimport * as FileSaver from \"file-saver\";\nimport * as XLSX from \"xlsx\";\nimport { RiFileExcel2Fill } from \"react-icons/ri\";\n\ninterface ExportToExcelProps {\n  fileData: any[];\n  fileName: string;\n  btnName?: string;\n  className?: string;\n  showIcon?: boolean;\n}\n\nconst ExportToExcel: React.FC<ExportToExcelProps> = ({\n  fileData,\n  fileName,\n  btnName = \"Excel\",\n  className = \"flex items-center gap-1 px-4 py-1 rounded text-green-700 bg-white border hover:text-white hover:bg-green-700 border-green-700 font-bold\",\n  showIcon = true,\n}) => {\n  const fileType =\n    \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;charset=UTF-8\";\n  const fileExtension = \".xlsx\";\n\n  const exportToCSV = (apiData: any[], fileName: string) => {\n    const ws = XLSX.utils.json_to_sheet(apiData);\n    const wb = { Sheets: { data: ws }, SheetNames: [\"data\"] };\n    const excelBuffer = XLSX.write(wb, { bookType: \"xlsx\", type: \"array\" });\n    const data = new Blob([excelBuffer], { type: fileType });\n    FileSaver.saveAs(data, fileName + fileExtension);\n  };\n\n  return (\n    <button\n      onClick={(e) => exportToCSV(fileData, fileName)}\n      className={className}\n    >\n      {showIcon && <RiFileExcel2Fill />}\n      {btnName}\n    </button>\n  );\n};\n\nexport default ExportToExcel;\n"],"sourceRoot":""}
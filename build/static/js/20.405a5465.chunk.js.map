{"version":3,"sources":["containers/AdminHomePage/AppItem.tsx","containers/AdminHomePage/AdminHomePage.tsx"],"names":["AppItem","link","show_category","Icon","icon","to","url","className","category","title","description","data","MdAccountCircle","items","MdSupervisorAccount","keywords","access","UserAccessList","USER_MANAGEMENT","MY_APPLICATION","MdSettings","MdFolder","MdInsertDriveFile","MdViewList","MdPlaylistPlay","MdSecurity","MdAssistantPhoto","MdAssistant","_AdminHomepage","props","state","loading","data_list","searchText","allData","allApplications","dataItem","applicationData","FC_Access","this","auth","view","push","setState","resultData","search","htmlFor","type","placeholder","id","onChange","e","target","value","length","map","key","itm","key_parent","ParentIcon","classNme","React","Component","AdminHomepage","connect"],"mappings":"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","file":"static/js/20.405a5465.chunk.js","sourcesContent":["import React, { FC, ReactElement } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { DataListItem } from \"./AdminHomePage\";\n\ntype AppItemProps = {\n  link: DataListItem;\n  show_category: boolean;\n};\n\nconst AppItem: FC<AppItemProps> = ({ link, show_category }): ReactElement => {\n  let Icon = link.icon;\n  return (\n    <Link\n      to={link.url}\n      className=\"p-2 bg-white shadow rounded flex hover:bg-blue-100 cursor-pointer\"\n    >\n      <section>\n        <Icon className=\"text-4xl mt-1 text-gray-500\" />\n      </section>\n      <section className=\"flex-1 pl-1\">\n        {show_category === true && (\n          <h4 className=\"text-sm text-blue-700\">{link.category}</h4>\n        )}\n        <h3 className=\"font-bold text-xl\">{link.title}</h3>\n        <p className=\"text-sm text-gray-400\">{link.description}</p>\n      </section>\n    </Link>\n  );\n};\nexport default AppItem;\n","import React, { Fragment } from \"react\";\nimport {\n  MdAccountCircle,\n  MdAssistant,\n  MdAssistantPhoto,\n  MdFolder,\n  MdInsertDriveFile,\n  MdPlaylistPlay,\n  MdSearch,\n  MdSecurity,\n  MdSettings,\n  MdSupervisorAccount,\n  MdViewList,\n} from \"react-icons/md\";\nimport { connect } from \"react-redux\";\n// import { Link } from \"react-router-dom\";\nimport { Auth, FC_Access } from \"../../actions\";\nimport { StoreState } from \"../../reducers\";\nimport { UserAccessList } from \"../../utils/auth_access\";\nimport search from \"../../utils/search\";\nimport AppItem from \"./AppItem\";\n\n// props for the component\ninterface AppProps {\n  auth: Auth;\n}\n\ninterface AppState {\n  loading: boolean;\n  data_list: DataListItem[];\n  data: ApplicationsInterface[];\n  searchText: string;\n}\n\nexport interface DataListItem {\n  title: string;\n  description: string;\n  keywords: string;\n  icon: any;\n  url: string;\n  category?: string;\n  access: UserAccessList;\n}\n\ninterface ApplicationsInterface {\n  title: string;\n  description: string;\n  icon: any;\n  items: DataListItem[];\n}\n\nconst data: ApplicationsInterface[] = [\n  {\n    title: \"Users\",\n    description: \"Users management\",\n    icon: MdAccountCircle,\n    items: [\n      {\n        title: \"User access\",\n        description: \"Manage users\",\n        icon: MdSupervisorAccount,\n        keywords: \"manage\",\n        url: \"/users\",\n        access: UserAccessList.USER_MANAGEMENT,\n      },\n      {\n        title: \"Candidates\",\n        description: \"All candidates\",\n        icon: MdSupervisorAccount,\n        keywords: \"candidates\",\n        url: \"/users\",\n        access: UserAccessList.MY_APPLICATION,\n      },\n      {\n        title: \"Settings\",\n        description: \"Users settings\",\n        icon: MdSettings,\n        keywords: \"candidates, user, settings\",\n        url: \"/users\",\n        access: UserAccessList.MY_APPLICATION,\n      },\n    ],\n  },\n  {\n    title: \"Documents\",\n    description: \"Documents management\",\n    icon: MdFolder,\n    items: [\n      {\n        title: \"Documents\",\n        description: \"User's documents\",\n        icon: MdInsertDriveFile,\n        keywords: \"manage\",\n        url: \"/users\",\n        access: UserAccessList.MY_APPLICATION,\n      },\n      {\n        title: \"Categories\",\n        description: \"User's documents\",\n        icon: MdViewList,\n        keywords: \"manage\",\n        url: \"/users\",\n        access: UserAccessList.MY_APPLICATION,\n      },\n      {\n        title: \"Sub Categories\",\n        description: \"User's documents\",\n        icon: MdViewList,\n        keywords: \"manage\",\n        url: \"/users\",\n        access: UserAccessList.MY_APPLICATION,\n      },\n\n      {\n        title: \"Data\",\n        description: \"Data corresponding to uses\",\n        icon: MdPlaylistPlay,\n        keywords: \"candidates, user, settings\",\n        url: \"/users\",\n        access: UserAccessList.MY_APPLICATION,\n      },\n      {\n        title: \"Settings\",\n        description: \"Data corresponding to uses\",\n        icon: MdSettings,\n        keywords: \"candidates, user, settings\",\n        url: \"/users\",\n        access: UserAccessList.MY_APPLICATION,\n      },\n    ],\n  },\n  {\n    title: \"Proctoring\",\n    description: \"Proctoring room exam\",\n    icon: MdSecurity,\n    items: [\n      {\n        title: \"Start proctoring\",\n        description: \"Supervise a room assgned to you\",\n        icon: MdAssistantPhoto,\n        keywords: \"supervise manage gucunga ckeck do exam\",\n        url: \"/admin-center\",\n        access: UserAccessList.MY_APPLICATION,\n      },\n      {\n        title: \"Assign supervisor\",\n        description: \"Assign supervison on a room\",\n        icon: MdAssistant,\n        keywords: \"add supervisor give a room room-check\",\n        url: \"/users\",\n        access: UserAccessList.MY_APPLICATION,\n      },\n      {\n        title: \"Settings\",\n        description: \"Supervisor settings\",\n        icon: MdSettings,\n        keywords: \"candidates, user, settings\",\n        url: \"/users\",\n        access: UserAccessList.MY_APPLICATION,\n      },\n    ],\n  },\n];\n\nclass _AdminHomepage extends React.Component<AppProps, AppState> {\n  constructor(props: AppProps) {\n    super(props);\n\n    this.state = {\n      loading: false,\n      data_list: [],\n      data: [],\n      searchText: \"\",\n    };\n  }\n\n  componentDidMount() {\n    let allData: DataListItem[] = [];\n    let allApplications: ApplicationsInterface[] = [];\n\n    for (const dataItem of data) {\n      let applicationData: DataListItem[] = [];\n\n      for (const link of dataItem.items) {\n        if (FC_Access(this.props.auth, link.access).view) {\n          allData.push({ ...link, category: dataItem.title });\n          applicationData.push({ ...link, category: dataItem.title });\n        }\n      }\n\n      // create another data push\n      allApplications.push({\n        description: dataItem.description,\n        icon: dataItem.icon,\n        title: dataItem.title,\n        items: applicationData,\n      } as ApplicationsInterface);\n      applicationData = [];\n    }\n\n    this.setState({\n      data: allApplications,\n      data_list: allData,\n    });\n  }\n\n  render() {\n    let resultData: DataListItem[] = search(\n      this.state.data_list,\n      this.state.searchText,\n      {\n        title: true,\n        description: true,\n        keywords: true,\n        url: true,\n        category: true,\n      }\n    );\n    return (\n      <div className=\"\">\n        <div className=\"p-3 bg-blue-300 text-blue-900 mx-2 mt-2 rounded-lg\">\n          <h2 className=\"text-3xl font-bold text-center\">All application</h2>\n          <h6 className=\"text-center\">App system features</h6>\n\n          <div className=\"m-1 max-w-lg mx-auto rounded-md shadow-md border border-blue-400 bg-white p-1 flex \">\n            <label htmlFor=\"search-text\" className=\"inline-block text-2xl\">\n              <MdSearch className=\"inline-block text-blue-400\" />\n            </label>\n            <input\n              type=\"search\"\n              className=\"outline-none bg-transparent flex-1 pl-1\"\n              placeholder=\"Application, reports, candidates...\"\n              id=\"search-text\"\n              onChange={(e) => this.setState({ searchText: e.target.value })}\n            />\n          </div>\n        </div>\n\n        <div className=\"mt-5 mx-3 animate__animated animate__fadeIn\">\n          {this.state.searchText.length >= 3 ? (\n            <div>\n              <div>\n                <div className=\"p-2 bg-gray-500 text-white mt-4 rounded flex items-center\">\n                  <h2>{resultData.length}</h2>\n                  <h2 className=\"flex-1 pl-1\">Results</h2>\n                </div>\n              </div>\n\n              {resultData.length <= 0 ? (\n                <div className=\"p-6 text-center mt-3 animate__animated animate__fadeIn\">\n                  <h1 className=\"text-3xl text-gray-500 font-bold\">\n                    No results found\n                  </h1>\n                  <h3 className=\"text-gray-500\">Try using other words</h3>\n                </div>\n              ) : (\n                <div className=\"grid md:grid-cols-3 lg:grid-cols-4 xl:grid-cols-5 gap-2 mt-2 \">\n                  {resultData.map((link: DataListItem, key) => (\n                    <AppItem key={key} link={link} show_category={true} />\n                  ))}\n                </div>\n              )}\n            </div>\n          ) : this.state.data.length <= 0 ? (\n            <div>\n              <div className=\"p-2 bg-gray-500 text-white mt-4 rounded flex items-center\">\n                <h2>0</h2>\n                <h2 className=\"flex-1 pl-1\">Results</h2>\n              </div>\n            </div>\n          ) : (\n            this.state.data.map((itm, key_parent) => {\n              let ParentIcon = itm.icon;\n              return (\n                <Fragment key={key_parent}>\n                  {itm.items.length > 0 && (\n                    <div>\n                      <div className=\"p-2 bg-gray-500 text-white mt-4 rounded flex items-center\">\n                        <ParentIcon classNme=\"pr-3 text-xl \" />{\" \"}\n                        <h2 className=\"flex-1 pl-1\">{itm.title}</h2>\n                      </div>\n\n                      <div className=\"grid md:grid-cols-3 lg:grid-cols-4 xl:grid-cols-5 gap-2 mt-2 \">\n                        {itm.items.map((link, key) => (\n                          <AppItem\n                            key={key}\n                            link={link}\n                            show_category={false}\n                          />\n                        ))}\n                      </div>\n                    </div>\n                  )}{\" \"}\n                </Fragment>\n              );\n            })\n          )}\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = ({ auth }: StoreState): { auth: Auth } => {\n  return { auth: auth };\n};\n\nexport const AdminHomepage = connect(mapStateToProps, {})(_AdminHomepage);\n"],"sourceRoot":""}
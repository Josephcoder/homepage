{"version":3,"sources":["actions/users.ts","containers/UserManagement/UserList.tsx","containers/UserManagement/RoleList.tsx","containers/UserManagement/UserRole.tsx","shared/blank_profile.png","containers/UserManagement/UserAccess.tsx"],"names":["documentValidationStatus","userPageLimit","fetchUserAccess","page","callback","dispatch","a","setAxiosToken","axios","get","API","USER","res","console","log","type","ActionTypes","FETCH_USERS_ACCESS","payload","users","data","next","previous","total_users","error","user_error","errorToText","blockUserToSystem","user_id","BLOCK_USER_TO_SYSTEM","id","unBlockUserToSystem","UNBLOCK_USER_TO_SYSTEM","assignRoleToUserAccess","ASSIGN_ROLE_TO_USER","customizeUserAccess","CUSTOMIZE_USER_ACCESS","resetUserAccess","RESET_USER_ACCESS","FC_GetUserBySearch","search_value","ModalState","RoleList","props","useState","searchInput","setSearchInput","className","placeholder","onChange","e","target","value","disabled","roleList","length","onClick","setChooseRole","search","map","role","index","loadindRequest","handleSelectRole","system_user_role_id","capitalizeFirstLetter","React","memo","url","AUTH","UserRole","setRoleId","setState","roleId","setSelectedRole","selectedRole","setProvinceId","provinceId","setDistrictId","districtId","setCenterId","centerId","setRoomId","roomId","setLoadingForm","loadingForm","setLoading","loading","setInstituteId","instituteId","setFormError","formError","setLoadingRequest","loadingRequest","chooseRole","setDefaultState","default_access","LOAD_province","LOAD_district","district_required","roomList","distinctDistrict","find","item","_id","district_id","province_id","room_required","LocationsInArray","room_id","center_id","componentDidMount","userInfo","state","result","vvvvv","role_id","TYPE","element","tableData","access","i","task","permitted","create","view","update","delete","Math","random","colSpan","assignRoleToUser","preventDefault","window","confirm","msg","isEmptyOrSpaces","education_institution_required","formData","status","school_id","education_institution_id","post","currentPage","setChangeRole","PushPopupAlert","title","theme","PopupAlertTheme","success","role_error","danger","location","ids","districts","key","Object","prototype","hasOwnProperty","call","keyDistrict","includes","push","distinctCenter","rooms","forEach","distinctRoom","this","Loading","onSubmit","schoolLevels","education_categories","institute","education_institute_id","education_category_title","province","province_name","undefined","district","district_name","center","center_name","room","room_name","Table","columns","columnTitle","alignText","padding","rows","pagination","searchBG","thColor","tableId","Component","connect","getUserById","userId","LocationData","locationTemp","p","d","centers","c","r","room_number","toString","capacity","occupied","UserList","setLoadingRequestType","loadingRequestType","setRoomList","setRoomTables","roomTable","setCurrentAccess","currentAccess","setUserAccess","userAccess","allRoom","getAllRoom","setLoadingUser","loadingUser","pageNumber","user","setManageUser","setManageUserId","user_info","fname","lname","email","sex","getRoleById","blockUser","actionType","patch","is_active","info","blockUser_ERROR","restUserAccess","warning","resetedAccess","searchFind","manageUser","reseting_user_access","DATA_GetUser","manageUserId","DATA_GetRoleById","DATA_ThisRoom","src","photo","FC_GetBase64Img","profile","alt","getInstituteById","NoResult","NoResultThemes","Dark","n_id","phone_number","custome_access","changeRole","UserAccess","locations","roomLocation","_UserAccess","setViewPermission","viewPermission","setLoadindRequest","setCreatePermission","createPermission","setUpdatePermission","updatePermission","setDeletePermission","deletePermission","setLoadind","overrideUserAccess","overideAccess","findCustom","custom","handleCustomization","findIndex","custome_user_access_id","customize_access","to","checked"],"mappings":"gbAqEYA,E,sEAzDCC,EAAwB,I,SAyDzBD,K,kBAAAA,E,oBAAAA,E,qBAAAA,M,KAwCL,IAAME,EAAkB,SAC7BC,EACAC,GAOA,OADAA,GAAYA,GAAS,EAAM,GAAI,MAC/B,uCAAO,WAAOC,GAAP,eAAAC,EAAA,sEAEHC,cAFG,SAGeC,IAAMC,IAAN,UACbC,IAAIC,KADS,kBACKR,EADL,kBACmBF,IAJlC,OAGGW,EAHH,OAMHC,QAAQC,IAAI,wCACZD,QAAQC,IAAI,CAAEZ,gBAAiBU,IAC/BC,QAAQC,IAAI,wCACZT,EAA2B,CACzBU,KAAMC,IAAYC,mBAClBC,QAAS,CACPC,MAAO,CAAC,CAAEC,KAAMR,EAAIQ,KAAKD,MAAQhB,KAAMA,IACvCkB,KAAMT,EAAIQ,KAAKC,KACfC,SAAUV,EAAIQ,KAAKE,SACnBC,YAAaX,EAAIQ,KAAKG,eAG1BnB,GAAYA,GAAS,EAAO,GAAIQ,EAAIQ,KAAKD,OAlBtC,kDAoBHN,QAAQW,MAAM,CAAEC,WAAW,EAAD,KAC1BrB,GAAYA,GAAS,EAAOsB,YAAY,EAAD,IAAS,MArB7C,0DAAP,uDA0BWC,EAAoB,SAACC,EAAiBzB,GACjD,8CAAO,WAAOE,GAAP,SAAAC,EAAA,sDACLD,EAA4B,CAC1BU,KAAMC,IAAYa,qBAClBX,QAAS,CAAEY,GAAIF,EAASzB,UAHrB,2CAAP,uDAQW4B,EAAsB,SAACH,EAAiBzB,GACnD,8CAAO,WAAOE,GAAP,SAAAC,EAAA,sDACLD,EAA4B,CAC1BU,KAAMC,IAAYgB,uBAClBd,QAAS,CAAEY,GAAIF,EAASzB,UAHrB,2CAAP,uDAQW8B,EAAyB,SACpCb,EACAjB,GAEA,8CAAO,WAAOE,GAAP,SAAAC,EAAA,sDACLD,EAAiC,CAC/BU,KAAMC,IAAYkB,oBAClBhB,QAAS,CAAEE,OAAMjB,UAHd,2CAAP,uDAQWgC,EAAsB,SACjCf,EACAjB,GAEA,8CAAO,WAAOE,GAAP,SAAAC,EAAA,sDACLD,EAAoC,CAClCU,KAAMC,IAAYoB,sBAClBlB,QAAS,CAAEE,OAAMjB,UAHd,2CAAP,uDAQWkC,EAAkB,SAACjB,EAAcjB,GAC5C,8CAAO,WAAOE,GAAP,SAAAC,EAAA,sDACLD,EAAgC,CAC9BU,KAAMC,IAAYsB,kBAClBpB,QAAS,CAAEU,QAASR,EAAMjB,UAHvB,2CAAP,uDAQWoC,EAAkB,uCAAG,WAChCC,EACApC,GAFgC,eAAAE,EAAA,6DAQhCF,GAAS,EAAM,GAAI,MARa,SAU9BG,cAV8B,SAWZC,IAAMC,IAAN,UACbC,IAAIC,KADS,kBACK6B,IAZO,OAWxB5B,EAXwB,OAc9BC,QAAQC,IAAI,0DACZD,QAAQC,IAAI,CAAEyB,mBAAoB3B,IAClCC,QAAQC,IAAI,0DACZV,GAAS,EAAO,GAAIQ,EAAIQ,MAjBM,kDAmB9BP,QAAQW,MAAM,CAAEC,WAAW,EAAD,KAC1BrB,GAAS,EAAOsB,YAAY,EAAD,IAAS,MApBN,0DAAH,yD,yGCzJnBe,E,mOCpBNC,EAAoC,SAACC,GACzC,MAAsCC,mBAAiB,IAAvD,mBAAOC,EAAP,KAAoBC,EAApB,KACA,OACE,0BAASC,UAAU,mCAAnB,UAEE,sBAAKA,UAAU,gCAAf,UACE,cAAC,KAAD,CAAUA,UAAU,0BACpB,uBACEhC,KAAK,OACLiC,YAAY,SACZD,UAAU,qFACVE,SAAU,SAACC,GAAD,OAAOJ,EAAeI,EAAEC,OAAOC,QACzCA,MAAOP,EACPQ,WAAUV,EAAMW,SAASC,OAAS,KAEpC,wBACER,UAAU,4EACVhC,KAAK,SACLyC,QAAS,WACPb,EAAMc,eAAc,IAJxB,sBAYF,qBAAKV,UAAU,4DAAf,SACGW,YAAOf,EAAMW,SAAUT,GAAaU,OAAS,EAC5CG,YAAOf,EAAMW,SAAUT,GAAac,KAAI,SAACC,EAAMC,GAAP,OACtC,kCACE,sBAAKd,UAAU,iEAAf,UACE,qBACEA,UAAU,iCACVS,QAAS,WACPb,EAAMc,eAAc,IACnBd,EAAMmB,gBACLnB,EAAMoB,iBAAiBH,EAAKI,sBALlC,SAQE,mBAAGjB,UAAU,iCAAb,SACGkB,YAAsBL,EAAKA,UAGhC,wBACE7C,KAAK,SACLgC,UAAU,6GAFZ,wBAdUc,EAAQD,EAAKA,SAwB7B,qBAAKb,UAAU,kBAAf,SACE,mBAAGA,UAAU,mCAAb,uCAUGmB,MAAMC,KAAKzB,GC7DpB0B,EAAG,UAAM1D,IAAI2D,KAAV,qBAgCHC,E,kDACJ,WAAY3B,GAAkB,IAAD,8BAC3B,cAAMA,IAkBR4B,UAAY,SAACnB,GACX,EAAKoB,SAAS,CAAEC,OAAQrB,KApBG,EAuB7BsB,gBAAkB,SAACtB,GACjB,EAAKoB,SAAS,CAAEG,aAAcvB,KAxBH,EA2B7BwB,cAAgB,SAACxB,GACf,EAAKoB,SAAS,CAAEK,WAAYzB,KA5BD,EA+B7B0B,cAAgB,SAAC1B,GACf,EAAKoB,SAAS,CAAEO,WAAY3B,KAhCD,EAmC7B4B,YAAc,SAAC5B,GACb,EAAKoB,SAAS,CAAES,SAAU7B,KApCC,EAuC7B8B,UAAY,SAAC9B,GACX,EAAKoB,SAAS,CAAEW,OAAQ/B,KAxCG,EA2C7BgC,eAAiB,SAAChC,GAChB,EAAKoB,SAAS,CAAEa,YAAajC,KA5CF,EA+C7BkC,WAAa,SAAClC,GACZ,EAAKoB,SAAS,CAAEe,QAASnC,KAhDE,EAmD7BoC,eAAiB,SAACpC,GAChB,EAAKoB,SAAS,CAAEiB,YAAarC,KApDF,EAuD7BsC,aAAe,SACbtC,GAKA,EAAKoB,SAAS,CAAEmB,UAAWvC,KA7DA,EA+D7BwC,kBAAoB,SAACxC,GACnB,EAAKoB,SAAS,CAAEqB,eAAgBzC,KAhEL,EAkE7BK,cAAgB,SAACL,GACf,EAAKoB,SAAS,CAAEsB,WAAY1C,KAnED,EAsE7B2C,gBAAkB,SAChBC,EACApC,GAGA,IAAIqC,EACAC,EACAtC,EAAKuC,mBAAqB,EAAKxD,MAAMyD,WACvCF,EAAgB,EAAKG,iBAAiB,EAAK1D,MAAMyD,UAAUE,MACzD,SAACC,GAAD,OAAUA,EAAKC,MAAQR,EAAgBS,iBAExB,EAAK7B,cAAcsB,EAAcQ,aAClDR,GAAiB,EAAKpB,cAAckB,EAAgBS,aACpD,EAAKrB,gBAAe,IACXxB,EAAK+C,eAAiB,EAAKhE,MAAMyD,WAG1CH,EAAgBW,EAAiB,EAAKjE,MAAMyD,UAAUE,MACpD,SAACC,GAAD,OAAUA,EAAKM,UAAYb,EAAgBa,aAE5B,EAAKjC,cAAcqB,EAAcS,aAClDT,GAAiB,EAAKnB,cAAcmB,EAAcQ,aAClDR,GAAiB,EAAKjB,YAAYiB,EAAca,WAChD,EAAK5B,UAAUc,EAAea,SAC9B,EAAKzB,gBAAe,IAEpB,EAAKA,gBAAe,IAhGK,EAoG7B2B,kBAAoB,WAClB,GAAI,EAAKpE,MAAMW,SAASC,OAAQ,CAC9B,GAAI,EAAKZ,MAAMqE,SAAShB,gBAAkB,EAAKiB,MAAM5B,YAAa,CAEhE,IAAK,EAAK4B,MAAMxC,OAAOlB,OAAQ,CAC7B,IAAI2D,EAAS,EAAKvE,MAAMW,SAASgD,MAC/B,SAAC1C,GAAD,OACEA,EAAKI,sBACL,EAAKrB,MAAMqE,SAAShB,eAAgBhC,uBAEpCkD,IACF,EAAK3C,UACH,EAAK5B,MAAMqE,SAAShB,eAAehC,qBAErC,EAAKU,gBAAgBwC,GACrB,EAAKnB,gBAAgB,EAAKpD,MAAMqE,SAAShB,eAAgBkB,IAI7DrG,QAAQC,IAAI,wCACZD,QAAQC,IAAI,CAAEqG,MAAO,EAAKxE,MAAMqE,SAAShB,iBACzCnF,QAAQC,IAAI,wCAGV,EAAKmG,MAAMtC,cAAgB,EAAKhC,MAAMqE,SAAShB,gBACjD,EAAKD,gBACH,EAAKpD,MAAMqE,SAAShB,eACpB,EAAKiB,MAAMtC,cAIf,EAAKW,YAAW,KAnIS,EAuI7BvB,iBAAmB,SACjBqD,GAEI,IADJC,EACG,uDAD0B,SAE7B,GAAI,EAAK1E,MAAMW,SAAU,CACvB,IAAI4D,EAAS,EAAKvE,MAAMW,SAASgD,MAC/B,SAAC1C,GAAD,OAAUA,EAAKI,sBAAwBoD,KAErCF,IACF,EAAK3C,UAAU6C,GACf,EAAK1C,gBAAgBwC,GACrB,EAAKD,MAAMtB,WACwB,YAAjC,EAAKsB,MAAMtB,UAAU2B,SACrB,EAAK5B,aAAa,MAEP,WAAT2B,IACF,EAAKzC,cAAc,IACnB,EAAKE,cAAc,IACnB,EAAKE,YAAY,IACjB,EAAKE,UAAU,IACf,EAAKM,eAAe,QA3JC,EAiK7B+B,UAAY,WAQV,OANE,EAAKN,MAAMxC,OAAOlB,OAAS,GACC,OAA5B,EAAK0D,MAAMtC,cACX,EAAKhC,MAAMW,UAEX,EAAKS,iBAAiB,EAAKkD,MAAMxC,OAAQ,WAEvC,EAAKwC,MAAMtC,aACN,EAAKsC,MAAMtC,aAAa6C,OAAO7D,KAAI,SAAC6D,EAAQC,GAAT,OACxC,qBAEE1E,UAAS,uDAFX,UAIE,oBAAIA,UAAU,YAAd,SACE,uBAAOA,UAAU,2BAAjB,SACE,sBAAMA,UAAU,8DAAhB,SACGyE,EAAOE,WAId,6BACE,sBACE3E,UAAS,2CACPyE,EAAOG,UAAUC,OAAS,iBAAmB,gBAFjD,UAKGJ,EAAOG,UAAUC,OAChB,cAAC,IAAD,IAEA,cAAC,IAAD,IAEDJ,EAAOG,UAAUC,OAAS,OAAS,UAGxC,6BACE,sBACE7E,UAAS,2CACPyE,EAAOG,UAAUE,KAAO,iBAAmB,gBAF/C,UAKGL,EAAOG,UAAUE,KAAO,cAAC,IAAD,IAAqB,cAAC,IAAD,IAC7CL,EAAOG,UAAUE,KAAO,OAAS,UAGtC,6BACE,sBACE9E,UAAS,2CACPyE,EAAOG,UAAUG,OAAS,iBAAmB,gBAFjD,UAKGN,EAAOG,UAAUG,OAChB,cAAC,IAAD,IAEA,cAAC,IAAD,IAEDN,EAAOG,UAAUG,OAAS,OAAS,UAGxC,6BACE,sBACE/E,UAAS,2CACPyE,EAAOG,UAAUI,OAAS,iBAAmB,gBAFjD,UAKGP,EAAOG,UAAUI,OAChB,cAAC,IAAD,IAEA,cAAC,IAAD,IAEDP,EAAOG,UAAUI,OAAS,OAAS,YA3DnCN,EAAID,EAAO1F,GAAKkG,KAAKC,aAiEhB,CACd,6BACE,oBAAIC,QAAS,EAAGnF,UAAU,wBAA1B,wDADM,UA9OiB,EAuP7BoF,iBAvP6B,uCAuPV,WAAOjF,GAAP,iBAAA5C,EAAA,yDACjB4C,EAAEkF,iBACGC,OAAOC,QAAP,0CAFY,0CAGR,GAHQ,UAMZ,EAAKrB,MAAMtC,aANC,yCAOR,EAAKe,aAAa,CACvB4B,QAAS,UACTiB,IAAK,4BATQ,WAc2B,IAA1C,EAAKtB,MAAMtC,aAAagC,gBACxB6B,YAAgB,EAAKvB,MAAMpC,YAfZ,yCAiBR,EAAKa,aAAa,CACvB4B,QAAS,cACTiB,IAAK,2BAnBQ,WAwB4C,IAA3D,EAAKtB,MAAMtC,aAAa8D,iCACxBD,YAAgB,EAAKvB,MAAMxB,aAzBZ,yCA2BR,EAAKC,aAAa,CACvB4B,QAAS,eACTiB,IAAK,yCA7BQ,WAkC4B,IAA1C,EAAKtB,MAAMtC,aAAagC,gBACuB,IAA9C,EAAKM,MAAMtC,aAAawB,oBAC1BqC,YAAgB,EAAKvB,MAAMlC,YApCZ,0CAsCR,EAAKW,aAAa,CACvB4B,QAAS,cACTiB,IAAK,2BAxCQ,YA6C2B,IAA1C,EAAKtB,MAAMtC,aAAagC,gBACxB6B,YAAgB,EAAKvB,MAAMhC,UA9CZ,0CAgDR,EAAKS,aAAa,CACvB4B,QAAS,YACTiB,IAAK,yBAlDQ,YAuD2B,IAA1C,EAAKtB,MAAMtC,aAAagC,gBACxB6B,YAAgB,EAAKvB,MAAM9B,QAxDZ,0CA0DR,EAAKO,aAAa,CACvB4B,QAAS,UACTiB,IAAK,uBA5DQ,eA+DjB,EAAK3C,mBAAkB,GACnB8C,EAA4C,CAC9C9G,QAAS,EAAKe,MAAMqE,SAASpF,QAC7BR,KAAM,CACJ4C,oBAAqB,EAAKiD,MAAMxC,OAChCkE,OAAQ,EACR/E,KAAM,EAAKqD,MAAMtC,aAAaf,KAC9B4D,OAAQ,EAAKP,MAAMtC,aAAa6C,OAChCoB,UAAW,GACXnC,YAAa,GACbI,QAAS,EAAKI,MAAMtC,aAAagC,cAAgB,EAAKM,MAAM9B,OAAS,GACrE0D,yBAA0B,EAAK5B,MAAMtC,aAClC8D,+BACC,EAAKxB,MAAMxB,YACX,KA7ES,oBAkFGjF,IAAMsI,KAAN,UAAc1E,EAAd,kBAAmC,CACnDxC,QAAS,EAAKe,MAAMqE,SAASpF,QAC7BoC,oBAAqB,EAAKiD,MAAMxC,OAChCkE,OAAQ,EACR/E,KAAM,EAAKqD,MAAMtC,aAAaf,KAC9B4D,QAAQ,EACRoB,UAAW,GACXnC,aACgD,IAA9C,EAAKQ,MAAMtC,aAAawB,kBACpB,EAAKc,MAAMlC,WACX,GACN8B,SAC4C,IAA1C,EAAKI,MAAMtC,aAAagC,cACpB,EAAKM,MAAM9B,OACX,GACN0D,yBAA0B,EAAK5B,MAAMtC,aAClC8D,+BACC,EAAKxB,MAAMxB,YACX,KApGS,SAkFT7E,EAlFS,UAuGbC,QAAQC,IAAI,wCACZD,QAAQC,IAAI,CAAEqH,iBAAkBvH,IAChCC,QAAQC,IAAI,wCACZ,EAAK6B,MAAMV,uBAAuByG,EAAU,EAAK/F,MAAMoG,aACvD,EAAKnD,mBAAkB,GACvB,EAAKjD,MAAMqG,eAAc,GACzB,EAAKrG,MAAMsG,eAAe,CACxBC,MAAO,gDACPC,MAAOC,IAAgBC,WA/GZ,mDAmHfxI,QAAQC,IAAI,CAAEwI,WAAW,EAAD,KACxB,EAAK3G,MAAMsG,eAAe,CACxBC,MAAOxH,YAAY,EAAD,IAClByH,MAAOC,IAAgBG,SAtHV,2DAvPU,wDAkX7BlD,iBAAmB,SACjBmD,EACA9C,GAEA,IAAI+C,EAAgB,GAClBvC,EAA8B,GAEhC,GAAIR,EACFQ,EAASsC,EAASlD,MAAK,SAACC,GAAD,OAAUA,EAAKC,MAAQE,MAC1C8C,EAASlD,MAAK,SAACC,GAAD,OAAUA,EAAKC,MAAQE,KAAcgD,UACjDF,EAASlD,MAAK,SAACC,GAAD,OAAUA,EAAKC,MAAQE,KAAcgD,UAErD,QAEJ,IAAK,IAAMC,KAAOH,EAChB,GAAII,OAAOC,UAAUC,eAAeC,KAAKP,EAAUG,GACjD,IAAK,IAAMK,KAAeR,EAASG,GAAKD,UAEpCE,OAAOC,UAAUC,eAAeC,KAC9BP,EAASG,GAAKD,UACdM,KAGGP,EAAIQ,SAAST,EAASG,GAAKD,UAAUM,GAAaxD,OACrDiD,EAAIS,KAAKV,EAASG,GAAKD,UAAUM,GAAaxD,KAC9CU,EAAOgD,KAAKV,EAASG,GAAKD,UAAUM,MAQhD,OAAO9C,GAnZoB,EAsZ7BiD,eAAiB,SACfC,EACA3D,GAEA,IAAIgD,EAAgB,GAClBvC,EAAuC,GAWzC,OATAN,EAAiBwD,GAAOC,SAAQ,SAAC/C,GAE5BmC,EAAIQ,SAAS3C,EAAQR,YACtBQ,EAAQb,cAAgBA,IAExBgD,EAAIS,KAAK5C,EAAQR,WACjBI,EAAOgD,KAAK5C,OAGTJ,GAtaoB,EAya7BoD,aAAe,SACbF,EACAtD,GAEA,IAAI2C,EAAgB,GAClBvC,EAAuC,GAQzC,OANAN,EAAiBwD,GAAOC,SAAQ,SAAC/C,GAC1BmC,EAAIQ,SAAS3C,EAAQT,UAAYS,EAAQR,YAAcA,IAC1D2C,EAAIS,KAAK5C,EAAQT,SACjBK,EAAOgD,KAAK5C,OAGTJ,GAnbP,EAAKD,MAAQ,CACX1B,SAAS,EACTF,aAAa,EACbQ,gBAAgB,EAChBpB,OAAQ,GACRI,WAAY,GACZE,WAAY,GACZI,OAAQ,GACRM,YAAa,GACbR,SAAU,GACVN,aAAc,KACdgB,UAAW,KACXG,YAAY,GAfa,E,0CAyb7B,WAAU,IAAD,SACP,OACyB,IAAvByE,KAAKtD,MAAM1B,SACXgF,KAAKtD,MAAM5B,aAC4B,OAAvCkF,KAAK5H,MAAMqE,SAAShB,gBACS,IAA7BuE,KAAKtD,MAAMxC,OAAOlB,QACU,OAA5BgH,KAAKtD,MAAMtC,aAGT,qBAAK5B,UAAU,kEAAf,wBAOF,sBAAKA,UAAU,kEAAf,UAEE,qBAAKA,UAAU,4DAAf,SACE,sBAAKA,UAAU,wDAAf,UACE,oBAAIA,UAAU,4CAAd,8BAGCwH,KAAKtD,MAAM5B,YACV,cAACmF,EAAA,EAAD,IAEA,sBAAMC,SAAU,SAACvH,GAAD,OAAO,EAAKiF,iBAAiBjF,IAA7C,SACE,sBAAKH,UAAU,YAAf,UACE,sBAAKA,UAAU,YAAf,UACE,uBAAOA,UAAU,kDAAjB,wBAIEwH,KAAKtD,MAAMnB,YACX,qBACE/C,UAAS,oIACPwH,KAAKtD,MAAMtB,WACsB,YAAjC4E,KAAKtD,MAAMtB,UAAU2B,QACjB,iBACA,mBAEN9D,QAAS,YACN,EAAKyD,MAAMpB,gBACV,EAAKpC,eAAc,IACpB,EAAKwD,MAAMpB,gBAAkB,EAAKH,aAAa,OAVpD,SAaG6E,KAAKtD,MAAMtC,aACR4F,KAAKtD,MAAMtC,aAAaf,KACxB,gBAIP2G,KAAKtD,MAAMnB,YACV,cAAC,EAAD,CACErC,cAAe8G,KAAK9G,cACpBM,iBAAkBwG,KAAKxG,iBACvBT,SAAUiH,KAAK5H,MAAMW,SACrBQ,eAAgByG,KAAKtD,MAAMpB,iBAI9B0E,KAAKtD,MAAMtB,WACuB,YAAjC4E,KAAKtD,MAAMtB,UAAU2B,SACnB,sBAAMvE,UAAU,eAAhB,SACGwH,KAAKtD,MAAMtB,UAAU4C,SAK7BgC,KAAKtD,MAAMtC,cACV4F,KAAKtD,MAAMtC,aAAa8D,gCACtB,sBAAK1F,UAAU,YAAf,UACE,uBAAOA,UAAU,uDAAjB,uBAGA,yBACEA,UAAS,qIACPwH,KAAKtD,MAAMtB,WACsB,iBAAjC4E,KAAKtD,MAAMtB,UAAU2B,QACjB,iBACA,mBAENrE,SAAU,SAACC,GACT,EAAKsC,eAAetC,EAAEC,OAAOC,OAC7B,EAAKwB,cAAc,IACnB,EAAKE,cAAc,IACnB,EAAKE,YAAY,IACjB,EAAKE,UAAU,IACf,EAAK+B,MAAMtB,WACwB,iBAAjC,EAAKsB,MAAMtB,UAAU2B,SACrB,EAAK5B,aAAa,OAEtBrC,SAAUkH,KAAKtD,MAAMpB,eACrBzC,MAAOmH,KAAKtD,MAAMxB,YAlBpB,UAoBE,wBAAQrC,MAAM,GAAd,8BACCmH,KAAK5H,MAAM+H,aAAaC,sBACzBJ,KAAK5H,MAAM+H,aAAaC,qBAAqBpH,OAC3C,EACAgH,KAAK5H,MAAM+H,aAAaC,qBAAqBhH,KAC3C,SAACiH,GAAD,OACE,wBACExH,MAAOwH,EAAUC,uBADnB,SAOGD,EAAUE,0BAJTF,EAAUC,uBACV7C,KAAKC,aAQb,wBAAQ7E,MAAM,GAAGC,UAAQ,EAAzB,uCAKHkH,KAAKtD,MAAMtB,WACuB,iBAAjC4E,KAAKtD,MAAMtB,UAAU2B,SACnB,sBAAMvE,UAAU,eAAhB,SACGwH,KAAKtD,MAAMtB,UAAU4C,SAMjCgC,KAAKtD,MAAMtC,cACV4F,KAAKtD,MAAMtC,aAAagC,eACtB,sBAAK5D,UAAU,YAAf,UACE,uBAAOA,UAAU,uDAAjB,sBAGA,yBACEA,UAAS,qIACPwH,KAAKtD,MAAMtB,WACsB,gBAAjC4E,KAAKtD,MAAMtB,UAAU2B,QACjB,iBACA,mBAENrE,SAAU,SAACC,GACT,EAAK0B,cAAc1B,EAAEC,OAAOC,OAC5B,EAAK6D,MAAMtB,WACwB,gBAAjC,EAAKsB,MAAMtB,UAAU2B,SACrB,EAAK5B,aAAa,MACpB,EAAKZ,cAAc,IACnB,EAAKE,YAAY,IACjB,EAAKE,UAAU,KAEjB9B,MAAOmH,KAAKtD,MAAMpC,WAClBxB,SAAUkH,KAAKtD,MAAMpB,eAjBvB,UAmBE,wBAAQzC,MAAM,GAAd,6BACCmH,KAAK5H,MAAMyD,UACVmE,KAAK5H,MAAMyD,SAASzC,KAAI,SAACoH,GAAD,OACtB,wBAEE3H,MAAO2H,EAASvE,IAFlB,SAIGuE,EAASC,eAHLD,EAASvE,IAAMwB,KAAKC,gBAOhCsC,KAAKtD,MAAMtB,WACuB,gBAAjC4E,KAAKtD,MAAMtB,UAAU2B,SACnB,sBAAMvE,UAAU,eAAhB,SACGwH,KAAKtD,MAAMtB,UAAU4C,SAKjCgC,KAAKtD,MAAMtC,eACT4F,KAAKtD,MAAMtC,aAAawB,mBACvBoE,KAAKtD,MAAMtC,aAAagC,gBACxB,sBAAK5D,UAAU,YAAf,UACE,uBAAOA,UAAU,uDAAjB,sBAGA,yBACEA,UAAS,qIACPwH,KAAKtD,MAAMtB,WACsB,gBAAjC4E,KAAKtD,MAAMtB,UAAU2B,QACjB,iBACA,mBAENrE,SAAU,SAACC,GACT,EAAK4B,cAAc5B,EAAEC,OAAOC,OAC5B,EAAK6D,MAAMtB,WACwB,gBAAjC,EAAKsB,MAAMtB,UAAU2B,SACrB,EAAK5B,aAAa,MACpB,EAAKV,YAAY,IACjB,EAAKE,UAAU,KAEjB9B,MAAOmH,KAAKtD,MAAMlC,WAClB1B,SAAUkH,KAAKtD,MAAMpB,eAhBvB,UAkBE,wBAAQzC,MAAM,GAAd,6BACCmH,KAAK5H,MAAMyD,UACZmE,KAAKlE,iBACHkE,KAAK5H,MAAMyD,SACVoC,YAAgB+B,KAAKtD,MAAMpC,iBAExBoG,EADAV,KAAKtD,MAAMpC,YAEftB,OAAS,EACTgH,KAAKlE,iBACHkE,KAAK5H,MAAMyD,SACVoC,YAAgB+B,KAAKtD,MAAMpC,iBAExBoG,EADAV,KAAKtD,MAAMpC,YAEflB,KAAI,SAACuH,GAAD,OACJ,wBAEE9H,MAAO8H,EAAS1E,IAFlB,SAIG0E,EAASC,eAHLD,EAAS1E,IAAMwB,KAAKC,aAO7B,wBAAQ7E,MAAM,GAAGC,UAAQ,EAAzB,kCAKHkH,KAAKtD,MAAMtB,WACuB,gBAAjC4E,KAAKtD,MAAMtB,UAAU2B,SACnB,sBAAMvE,UAAU,eAAhB,SACGwH,KAAKtD,MAAMtB,UAAU4C,SAMjCgC,KAAKtD,MAAMtC,cACV4F,KAAKtD,MAAMtC,aAAagC,eACtB,sBAAK5D,UAAU,YAAf,UACE,uBAAOA,UAAU,uDAAjB,oBAGA,yBACEA,UAAS,qIACPwH,KAAKtD,MAAMtB,WACsB,cAAjC4E,KAAKtD,MAAMtB,UAAU2B,QACjB,iBACA,mBAENrE,SAAU,SAACC,GACT,EAAK8B,YAAY9B,EAAEC,OAAOC,OAC1B,EAAK6D,MAAMtB,WACwB,cAAjC,EAAKsB,MAAMtB,UAAU2B,SACrB,EAAK5B,aAAa,MACpB,EAAKR,UAAU,KAEjB7B,SAAUkH,KAAKtD,MAAMpB,eACrBzC,MAAOmH,KAAKtD,MAAMhC,SAfpB,UAiBE,wBAAQ7B,MAAM,GAAd,2BACCmH,KAAKtD,MAAMlC,YACZwF,KAAKtD,MAAMlC,WAAWxB,OAAS,GAC/BgH,KAAK5H,MAAMyD,UACXmE,KAAKJ,eACHI,KAAK5H,MAAMyD,SACXmE,KAAKtD,MAAMlC,YACXxB,OAAS,EACTgH,KAAKJ,eACHI,KAAK5H,MAAMyD,SACXmE,KAAKtD,MAAMlC,YACXpB,KAAI,SAACyH,EAAQvH,GAAT,OACJ,wBACET,MAAOgI,EAAOtE,UADhB,SAIGsE,EAAOC,aAFHD,EAAOtE,UAAYjD,EAAQmE,KAAKC,aAMzC,wBAAQ7E,MAAM,GAAGC,UAAQ,EAAzB,gCAKHkH,KAAKtD,MAAMtB,WACuB,cAAjC4E,KAAKtD,MAAMtB,UAAU2B,SACnB,sBAAMvE,UAAU,eAAhB,SACGwH,KAAKtD,MAAMtB,UAAU4C,SAMjCgC,KAAKtD,MAAMtC,cACV4F,KAAKtD,MAAMtC,aAAagC,eACtB,sBAAK5D,UAAU,YAAf,UACE,uBAAOA,UAAU,uDAAjB,kBAGA,yBACEA,UAAS,qIACPwH,KAAKtD,MAAMtB,WACsB,YAAjC4E,KAAKtD,MAAMtB,UAAU2B,QACjB,iBACA,mBAENrE,SAAU,SAACC,GACT,EAAKgC,UAAUhC,EAAEC,OAAOC,OACxB,EAAK6D,MAAMtB,WACwB,YAAjC,EAAKsB,MAAMtB,UAAU2B,SACrB,EAAK5B,aAAa,OAEtBrC,SAAUkH,KAAKtD,MAAMpB,eACrBzC,MAAOmH,KAAKtD,MAAM9B,OAdpB,UAgBE,wBAAQ/B,MAAM,GAAd,0BACEoF,YAAgB+B,KAAKtD,MAAMhC,WAC7BsF,KAAK5H,MAAMyD,UACXmE,KAAKD,aACHC,KAAK5H,MAAMyD,SACXmE,KAAKtD,MAAMhC,UACX1B,OAAS,EACTgH,KAAKD,aACHC,KAAK5H,MAAMyD,SACXmE,KAAKtD,MAAMhC,UACXtB,KAAI,SAAC2H,EAAMzH,GAAP,OACJ,wBACET,MAAOkI,EAAKzE,QAEZ9D,UAAS,UACY,MAAnBuI,EAAKC,UAAoB,SAAW,SAJxC,SAOGD,EAAKC,WALDD,EAAKzE,QAAUhD,EAAQmE,KAAKC,aASrC,wBAAQ7E,MAAM,GAAGC,UAAQ,EAAzB,8BAKHkH,KAAKtD,MAAMtB,WACuB,YAAjC4E,KAAKtD,MAAMtB,UAAU2B,SACnB,sBAAMvE,UAAU,eAAhB,SACGwH,KAAKtD,MAAMtB,UAAU4C,SAMlC,sBAAKxF,UAAU,+CAAf,UACE,wBACEA,UAAU,kDACVS,QAAS,WACP,EAAKb,MAAMqG,eAAc,GACzB,EAAKtD,aAAa,MAClB,EAAKd,cAAc,IACnB,EAAKE,cAAc,IACnB,EAAKE,YAAY,IACjB,EAAKE,UAAU,KAEjB7B,SAAUkH,KAAKtD,MAAMpB,eAVvB,kBAcA,wBACE9C,UAAU,kCAEVM,SAAUkH,KAAKtD,MAAMpB,eAHvB,SAKG0E,KAAKtD,MAAMpB,eAAiB,aAAe,6BAa1D,sBAAK9C,UAAU,2FAAf,UACE,qBAAKA,UAAU,OAAf,SACE,uBAAMA,UAAU,uCAAhB,oBACGwH,KAAKtD,MAAMtC,oBADd,aACG,EAAyBf,KAD5B,0BAIA2G,KAAKtD,MAAM1B,SACX,qBAAKxC,UAAU,yBAAf,SACE,cAACyI,EAAA,EAAD,CACEC,QAAS,CACP,CACEC,YAAa,cACbC,UAAW,OACXC,QAAS,OAEX,CAAEF,YAAa,SAAUC,UAAW,QACpC,CAAED,YAAa,OAAQC,UAAW,QAClC,CAAED,YAAa,SAAUC,UAAW,QACpC,CAAED,YAAa,SAAUC,UAAW,SAEtCE,KAAMtB,KAAKhD,UACXuE,YAAY,EACZpI,QAAQ,EACRqI,SAAS,aACTC,QAAQ,OACRC,QAAQ,8B,GAh1BDC,aAm2BRhI,MAAMC,KACnBgI,aATsB,SAAC,GAKvB,MAAO,CAAEzB,aADN,EAHHA,gBAQyB,CACvBzI,2BACAgH,qBAFFkD,CAGG7H,ICj6BU,MAA0B,0C,QHsC5B8H,EAAc,SAACjL,EAAwBkL,GAClD,OAAOlL,EAAMmF,MAAK,SAACC,GAAD,OAAUA,EAAK3E,UAAYyK,O,SAGnC5J,K,2BAAAA,E,gCAAAA,E,mCAAAA,E,2BAAAA,M,KAQL,IAAMmE,EAAmB,SAC9B0F,GAEA,IAAIC,EAA6C,GACjD,IAAK,IAAIC,KAAKF,EAAc,CAC1B,IAAI5C,EAAY4C,EAAaE,GAAG9C,UAChC,IAAK,IAAI+C,KAAK/C,EAAW,CACvB,IAAIgD,EAAUhD,EAAU+C,GAAGC,QAC3B,IAAK,IAAIC,KAAKD,EAAS,CACrB,IAAItC,EAAQsC,EAAQC,GAAGvC,MACvB,IAAK,IAAIwC,KAAKxC,EACZmC,EAAarC,KAAK,CAChBxD,YAAa4F,EAAaE,GAAGhG,IAC7BwE,cAAesB,EAAaE,GAAGxB,cAC/BvE,YAAaiD,EAAU+C,GAAGjG,IAC1B2E,cAAezB,EAAU+C,GAAGtB,cAC5BrE,UAAW4F,EAAQC,GAAGnG,IACtB6E,YAAaqB,EAAQC,GAAGtB,YACxBxE,QAASuD,EAAMwC,GAAGpG,IAClB+E,UAAWnB,EAAMwC,GAAGC,YAAYC,WAChCC,SAAU3C,EAAMwC,GAAGG,SACnBC,SAAU5C,EAAMwC,GAAGI,aAM7B,OAAOT,GAsCHU,E,kDACJ,WAAYtK,GAAkB,IAAD,8BAC3B,cAAMA,IAaRiD,kBAAoB,SAACxC,GACnB,EAAKoB,SAAS,CAAEqB,eAAgBzC,KAfL,EAkB7BkC,WAAa,SAAClC,GACZ,EAAKoB,SAAS,CAAEe,QAASnC,KAnBE,EAsB7B8J,sBAAwB,SACtB9J,GAEA,EAAKoB,SAAS,CAAE2I,mBAAoB/J,KAzBT,EA4B7BgK,YAAc,SAAChK,GACb,EAAKoB,SAAS,CAAE4B,SAAUhD,KA7BC,EAgC7BiK,cAAgB,SAACjK,GACf,EAAKoB,SAAS,CAAE8I,UAAWlK,KAjCA,EAoC7BmK,iBAAmB,SAACnK,GAClB,EAAKoB,SAAS,CAAEgJ,cAAepK,KArCJ,EAwC7BqK,cAAgB,SAACrK,GACf,EAAKoB,SAAS,CAAEkJ,WAAYtK,KAzCD,EA4C7B2D,kBAAoB,WACgB,IAA9B,EAAKpE,MAAMgL,QAAQpK,OACrB,EAAKZ,MAAMiL,YACT,SAACjF,EAAiBJ,EAAanH,GAC7B,EAAKkE,WAAWqD,GAChB,EAAKhG,MAAMkL,eAAelF,IACrBA,GAAUJ,EAAIhF,OAAS,GAC1B,EAAKZ,MAAMsG,eAAe,CACxBC,MAAOX,EACPY,MAAOC,IAAgBG,SAGvBnI,GAAQA,EAAKmC,OAAS,IACxB,EAAK6J,YAAYhM,GACjB,EAAKiM,cAAczG,EAAiBxF,QAIjC,EAAK6F,MAAM1B,UACpB,EAAK6H,YAAY,EAAKzK,MAAMgL,SAC5B,EAAKN,cAAczG,EAAiB,EAAKjE,MAAMgL,UAC/C,EAAKhL,MAAMkL,gBAAe,GAC1B,EAAKvI,YAAW,KAlES,EAsE7BiC,UAAY,WACV,GAAI,EAAK5E,MAAMmL,aAAe,EAAK7G,MAAM1B,QACvC,MAAO,CACL,oBAEExC,UAAU,6CAFZ,SAIE,oBAAIA,UAAU,kBAAkBmF,QAAS,EAAzC,SACE,cAACsC,EAAA,EAAD,OAJGxC,KAAKC,WAUhB,IAAI7G,EAAwB,EAAKuB,MAAMxB,MACvC,GAAIC,EAAKmC,QAAU,EACjB,MAAO,CACL,oBAEER,UAAU,6CAFZ,SAIE,oBAAIA,UAAU,kBAAkBmF,QAAS,EAAzC,4BAHKF,KAAKC,WAUhB,IAAM8F,EACJ,EAAKpL,MAAMoG,YAAc,EAAmC,IAA9B,EAAKpG,MAAMoG,YAAc,GAAU,EAEnE,OAAO3H,EAAKuC,KAAI,SAACqK,EAAqBnK,GAAtB,eACd,qBAEEd,UAAU,kEACVS,QAAS,WACP,EAAKb,MAAMsL,cAAcD,GACzB,EAAKrL,MAAMuL,gBAAgBF,EAAKpM,UALpC,UAQE,oBAAImB,UAAU,kCAAd,SACGgL,EAAalK,EAAQ,IAExB,oBAAId,UAAU,gBAAd,SACE,+BACGiL,EAAKG,WACJH,EAAKG,UAAUC,MAAQ,IAAMJ,EAAKG,UAAUE,UAGlD,oBAAItL,UAAU,gBAAd,SAA+BiL,EAAKM,QAEpC,oBAAIvL,UAAU,gBAAd,SACGiL,EAAKG,WAAoC,MAAvBH,EAAKG,UAAUI,IAAc,OAAS,WAE3D,oBAAIxL,UAAU,oDAAd,SACGiL,EAAKhI,gBACJgI,EAAKhI,eAAehC,qBACpBgK,EAAKhI,eAAehC,qBAClB,sBACEjB,UAAS,gGADX,UAGG,UAAAyL,YACC,EAAK7L,MAAMW,SACX0K,EAAKhI,eAAehC,4BAFrB,eAGEJ,OACDK,YAAqB,UACnBuK,YACE,EAAK7L,MAAMW,SACX0K,EAAKhI,eAAehC,4BAHH,aACnB,EAGGJ,UAkBf,oBAAIb,UAAU,mBAAd,SACE,wBACEA,UAAU,oFACVmG,MAAM,qBACN1F,QAAS,WACP,EAAKb,MAAMsL,cAAcD,GACzB,EAAKrL,MAAMuL,gBAAgBF,EAAKpM,UALpC,wBAvDGiC,EAAQmE,KAAKC,cAvGK,EA6K7BwG,UA7K6B,uCA6KjB,WAAO7M,EAAiB8M,GAAxB,eAAApO,EAAA,yDACLsB,GACH,EAAKe,MAAMsG,eAAe,CACxBC,MAAO,wCACPC,MAAOC,IAAgBG,SAI3B,EAAK3D,mBAAkB,GAGpByC,OAAOC,QAAP,+BACyBoG,EAAa,QAAU,WADhD,gBAXO,yCAeD,EAAK9I,mBAAkB,IAftB,gCAmBUpF,IAAMmO,MAAN,UACbjO,IAAI2D,KADS,gCACmBzC,GACnC,CACEgN,WAAYF,IAtBR,QAmBF9N,EAnBE,UA0BNC,QAAQC,IAAI,wCACZD,QAAQC,IAAI,CAAEa,kBAAmBf,IACjCC,QAAQC,IAAI,wCACZ4N,EACI,EAAK/L,MAAMhB,kBAAkBC,EAAS,EAAKe,MAAMoG,aACjD,EAAKpG,MAAMZ,oBAAoBH,EAAS,EAAKe,MAAMoG,aAEvD,EAAKpG,MAAMsG,eAAe,CACxBC,MAAM,iBAAD,OAAmBwF,EAAa,UAAY,YAA5C,KACLvF,MAAOC,IAAgByF,QAnCnB,kDAuCRhO,QAAQW,MAAM,CAAEsN,gBAAgB,EAAD,KAC/B,EAAKnM,MAAMsG,eAAe,CACxBC,MAAOxH,YAAY,EAAD,IAClByH,MAAOC,IAAgBG,SA1CjB,QA8CV,EAAK3D,mBAAkB,GACvBhE,EAAU,GA/CA,0DA7KiB,0DA+N7BmN,eA/N6B,uCA+NZ,WAAOnN,GAAP,eAAAtB,EAAA,yDACVsB,GACH,EAAKe,MAAMsG,eAAe,CACxBC,MAAO,wCACPC,MAAOC,IAAgB4F,UAItB3G,OAAOC,QAAP,iDARU,yCASN,EAAK1C,mBAAkB,IATjB,cAYf,EAAKA,mBAAkB,GACvB,EAAKsH,sBAAsB,SAbZ,kBAgBK1M,IAAMuH,OAAN,UACbrH,IAAIC,KADS,+BACkBiB,IAjBvB,eAmBN,EAAKe,MAAMN,gBAAgBT,EAAS,EAAKe,MAAMoG,cAClDkG,EAAkDzG,YACpD,EAAK7F,MAAMuM,YAET,EAAKvM,MAAMxB,MAAMmF,MAAK,SAAC0H,GAAD,OAAUA,EAAKpM,UAAYA,KACjD,EAAKe,MAAMwM,cAEbF,EAAcjJ,gBACZ,EAAKyH,cAAcwB,EAAcjJ,eAAewB,QAClD,EAAK7E,MAAMsG,eAAe,CACxBC,MAAM,8CACNC,MAAOC,IAAgByF,OAEzB,EAAKtB,iBAAiB,OAhCX,kDAmCb1M,QAAQW,MAAM,CAAE4N,qBAAqB,EAAD,KACpC,EAAKzM,MAAMsG,eAAe,CACxBC,MAAOxH,YAAY,EAAD,IAClByH,MAAOC,IAAgBG,SAtCZ,QA0Cf,EAAK3D,mBAAkB,GACvB,EAAKsH,sBAAsB,MAC3BtL,EAAU,GA5CK,0DA/NY,wDA8Q7ByE,iBAAmB,SACjBmD,EACA9C,GAEA,IAAI+C,EAAgB,GAClBvC,EAA8B,GAEhC,GAAIR,EACFQ,EAASsC,EAASlD,MAAK,SAACC,GAAD,OAAUA,EAAKC,MAAQE,MAC1C8C,EAASlD,MAAK,SAACC,GAAD,OAAUA,EAAKC,MAAQE,KAAcgD,UACjDF,EAASlD,MAAK,SAACC,GAAD,OAAUA,EAAKC,MAAQE,KAAcgD,UAErD,QAEJ,IAAK,IAAMC,KAAOH,EAChB,GAAII,OAAOC,UAAUC,eAAeC,KAAKP,EAAUG,GACjD,IAAK,IAAMK,KAAeR,EAASG,GAAKD,UAEpCE,OAAOC,UAAUC,eAAeC,KAC9BP,EAASG,GAAKD,UACdM,KAGGP,EAAIQ,SAAST,EAASG,GAAKD,UAAUM,GAAaxD,OACrDiD,EAAIS,KAAKV,EAASG,GAAKD,UAAUM,GAAaxD,KAC9CU,EAAOgD,KAAKV,EAASG,GAAKD,UAAUM,MAQhD,OAAO9C,GA5SP,EAAKD,MAAQ,CACXpB,gBAAgB,EAChBN,SAAS,EACT4H,mBAAoB,KACpB/G,SAAU,KACVkH,UAAW,KACXI,WAAY,KACZF,cAAe,MAVU,E,0CAkT7B,WAAU,IAAD,OACD6B,EAAe7G,YAAgB+B,KAAK5H,MAAMuM,YAC5C3E,KAAK5H,MAAMxB,MAAMmF,MACf,SAAC0H,GAAD,OAAUA,EAAKpM,UAAY,EAAKe,MAAM2M,gBAExC/E,KAAK5H,MAAMwM,WACX5E,KAAK5H,MAAMwM,gBACXlE,EACEsE,EACJF,GAAgBA,EAAcrJ,eAC1BwI,YACEjE,KAAK5H,MAAMW,SACX+L,EAAcrJ,eAAgBhC,0BAEhCiH,EAEAuE,EACJjF,KAAKtD,MAAMqG,WAAa+B,EACpB9E,KAAKtD,MAAMqG,UAAUhH,MACnB,SAACgF,GAAD,aAAUA,EAAKzE,WAAL,UAAiBwI,EAAcrJ,sBAA/B,aAAiB,EAA8Ba,iBAE3DoE,EAEN,OACE,iCACIV,KAAK5H,MAAMwM,YACX,qBAAKpM,UAAU,iCAAf,SACE,sBAAKA,UAAS,wBAAd,UACE,qBAAKA,UAAU,iDAAf,SACE,qBAAKA,UAAU,0DAMhBwH,KAAK5H,MAAMxB,OACV,cAACqK,EAAA,EAAD,CACEC,QAAS,CACP,CAAEC,YAAa,IAAKC,UAAW,OAAQC,QAAS,OAChD,CAAEF,YAAa,QAASC,UAAW,OAAQC,QAAS,OACpD,CAAEF,YAAa,QAASC,UAAW,OAAQC,QAAS,OACpD,CACEF,YAAa,SACbC,UAAW,OACXC,QAAS,OAEX,CAAEF,YAAa,OAAQC,UAAW,OAAQC,QAAS,OAEnD,CAAEF,YAAa,GAAIC,UAAW,OAAQC,QAAS,QAEjDC,KAAMtB,KAAKhD,UACXuE,YAAY,EACZpI,QAAQ,EACRsI,QAAQ,OACRzG,QAASgF,KAAK5H,MAAMmL,aAAevD,KAAKtD,MAAM1B,eASvDgF,KAAK5H,MAAMwM,YACV,sBAAKpM,UAAU,oBAAf,UAEE,sBAAKA,UAAU,uFAAf,UACGsM,EACC,sBAEEtM,UAAU,qEAFZ,UAIE,qBACE0M,IACoC,QAAlCJ,EAAclB,UAAUuB,YACUzE,IAAlCoE,EAAclB,UAAUuB,MACpBC,YAAgBN,EAAclB,UAAUuB,OACxCE,EAENC,IAAI,GACJ9M,UAAU,0CAEZ,sBAAKA,UAAU,yCAAf,UACE,sBAAMA,UAAU,yBAAhB,SACGsM,EAAclB,UAAUC,MACvB,IACAiB,EAAclB,UAAUE,QAE5B,sBAAKtL,UAAU,oBAAf,UACE,cAAC,IAAD,CAAQA,UAAU,YAClB,sBAAMA,UAAU,sBAAhB,SACGwM,GAAoBA,EAAiB3L,UAG1C,sBAAKb,UAAU,0BAAf,UACE,sBAAMA,UAAU,gBAAhB,oBACA,sBAAMA,UAAU,wBAAhB,SACGwM,GAAoBA,EAAiB5I,cAClC,OACA4I,GACAA,EAAiB9G,+BACjB,YACA,SAGP8G,GACDA,EAAiB9G,+BACf,sBAAK1F,UAAU,0BAAf,UACE,sBAAMA,UAAU,gBAAhB,wBACA,sBAAMA,UAAU,wBAAhB,SACGsM,EAAcrJ,gBACfuE,KAAK5H,MAAM+H,aAAaC,sBACxBmF,YACEvF,KAAK5H,MAAM+H,aAAaC,qBACxB0E,EAAcrJ,eACX6C,0BAEDiH,YACEvF,KAAK5H,MAAM+H,aAAaC,qBACxB0E,EAAcrJ,eACX6C,0BACFiC,yBACH,yBAIRyE,GACAA,EAAiB5I,eACf,sBAAK5D,UAAU,0BAAf,UAEE,cAAC,IAAD,CAAcA,UAAU,kBACvByM,GACC,sBAAMzM,UAAU,wBAAhB,UACgB,OAAbyM,QAAa,IAAbA,OAAA,EAAAA,EAAerE,eACd,OADD,OAECqE,QAFD,IAECA,OAFD,EAECA,EAAenE,aACf,YAHD,OAICmE,QAJD,IAICA,OAJD,EAICA,EAAejE,qBApExB8D,EAAczN,QAAUoG,KAAKC,UA6EpC,qBAAKlF,UAAU,SAAf,SACE,cAACgN,EAAA,EAAD,CACE5G,MAAO6G,IAAeC,KACtB7M,MAAO,0BAIZiM,GACC,sBAEEtM,UAAU,uBAFZ,UAIE,sBAAKA,UAAU,0BAAf,UACE,sBAAMA,UAAU,gBAAhB,kBACA,sBAAMA,UAAU,wBAAhB,SACGsM,EAAca,UAGnB,sBAAKnN,UAAU,0BAAf,UACE,sBAAMA,UAAU,gBAAhB,oBACA,sBAAMA,UAAU,wBAAhB,SACGsM,EAAcf,WAGnB,sBAAKvL,UAAU,0BAAf,UACE,sBAAMA,UAAU,gBAAhB,oBACA,sBAAMA,UAAU,wBAAhB,SACGsM,EAAcc,kBAGnB,sBAAKpN,UAAU,0BAAf,UACE,sBAAMA,UAAU,gBAAhB,qBACA,sBAAMA,UAAU,wBAAhB,UAC+B,IAA5BsM,EAAcT,UAAsB,UAAY,cAGrD,sBAAK7L,UAAU,0BAAf,UACGsM,EAAce,gBACb,yBACErN,UAAS,gFACPwH,KAAKtD,MAAMkG,oBACuB,UAAlC5C,KAAKtD,MAAMkG,mBACP,0BACA,eAEN3J,QAAS,kBACP,EAAKuL,eAAeM,EAAczN,UAEpCyB,SAAUkH,KAAKtD,MAAMpB,eAVvB,UAYE,cAAC,IAAD,CAAQ9C,UAAU,yBAClB,+BACGwH,KAAKtD,MAAMkG,oBACsB,UAAlC5C,KAAKtD,MAAMkG,mBACP,eACA,qBAIR5C,KAAK5H,MAAM0N,YACX,yBACEtN,UAAU,wGACVS,QAAS,kBAAM,EAAKb,MAAMqG,eAAc,IAF1C,UAIE,cAAC,IAAD,CAAQjG,UAAU,yBAClB,kDAGHsM,EAAcT,UACb,yBACE7L,UAAS,iFACPwH,KAAKtD,MAAMkG,oBACuB,WAAlC5C,KAAKtD,MAAMkG,mBACP,yBACA,cAEN3J,QAAS,kBACN,EAAKyD,MAAMpB,gBACZ,EAAKlD,MAAMwM,YACX,EAAKV,UACHY,EAAczN,QACdyN,EAAcT,YAGlBvL,SAAUkH,KAAKtD,MAAMpB,eAfvB,UAiBE,cAAC,IAAD,CAAQ9C,UAAU,yBAClB,+BACGwH,KAAKtD,MAAMkG,oBACsB,UAAlC5C,KAAKtD,MAAMkG,mBACP,aACA,kBAIR,yBACEpK,UAAS,iFACPwH,KAAKtD,MAAMkG,oBACuB,WAAlC5C,KAAKtD,MAAMkG,mBACP,4BACA,iBAEN3J,QAAS,kBACN,EAAKyD,MAAMpB,gBACZ,EAAKlD,MAAMwM,YACX,EAAKV,UACHY,EAAczN,QACdyN,EAAcT,YAGlBvL,SAAUkH,KAAKtD,MAAMpB,eAfvB,UAiBE,cAAC,IAAD,CAAQ9C,UAAU,yBAClB,+BACGwH,KAAKtD,MAAMkG,oBACsB,UAAlC5C,KAAKtD,MAAMkG,mBACP,aACA,wBA5GPkC,EAAczN,QAAUoG,KAAKC,aAuHvCsC,KAAK5H,MAAMwM,YACZ5E,KAAKtD,MAAMb,UACXmE,KAAK5H,MAAM0N,WACT,cAAC,EAAD,CACErJ,SAAUuD,KAAK5H,MAAMwM,WACrB7L,SAAUiH,KAAK5H,MAAMW,SACrB4H,SAAUX,KAAKlE,iBAAiBkE,KAAKtD,MAAMb,UAC3CA,SAAUmE,KAAKtD,MAAMb,SACrB4C,cAAeuB,KAAK5H,MAAMqG,cAC1BD,YAAawB,KAAK5H,MAAMoG,cAG1B,cAACuH,EAAA,WAAD,CACEtJ,SAAUqI,EACVC,aAAc/E,KAAK5H,MAAM2M,aACzB7B,cAAelD,KAAKkD,cACpBC,WAAYnD,KAAKtD,MAAMyG,WACvBH,iBAAkBhD,KAAKgD,iBACvBC,cAAejD,KAAKtD,MAAMuG,cAC1BzE,YAAawB,KAAK5H,MAAMoG,wB,GAxlBjBmD,aAgnBRhI,QAAMC,KACnBgI,aAdsB,SAAC,GAOvB,MAAO,CACLzB,aAFC,EALHA,aAQEiD,QAHC,EAJH4C,UAOqBC,gBAKI,CACvB7O,sBACAI,wBACAM,oBACAuL,eACA3E,qBALFkD,CAMGc,K,wRItrBCwD,E,kDACJ,WAAY9N,GAAkB,IAAD,8BAC3B,cAAMA,IAcR+N,kBAAoB,SAACtN,GACnB,EAAKoB,SAAS,CAAEmM,eAAgBvN,KAhBL,EAmB7BwN,kBAAoB,SAACxN,GACnB,EAAKoB,SAAS,CAAEV,eAAgBV,KApBL,EAuB7ByN,oBAAsB,SAACzN,GACrB,EAAKoB,SAAS,CAAEsM,iBAAkB1N,KAxBP,EA2B7B2N,oBAAsB,SAAC3N,GACrB,EAAKoB,SAAS,CAAEwM,iBAAkB5N,KA5BP,EA+B7B6N,oBAAsB,SAAC7N,GACrB,EAAKoB,SAAS,CAAE0M,iBAAkB9N,KAhCP,EAmC7B+N,WAAa,SAAC/N,GACZ,EAAKoB,SAAS,CAAEe,QAASnC,KApCE,EAuC7BgO,mBAAqB,SACnBpL,EACAoK,GAEA,GAAIpK,GAAkBoK,GAAkBA,EAAe7M,OAAS,EAAG,CACjE,IAAI8N,EAAuC,GADsB,WAEtD1H,GACT,GAAIC,OAAOC,UAAUC,eAAeC,KAAK/D,EAAgB2D,GAAM,CAC7D,IAAM2H,EAAalB,EAAe9J,MAChC,SAACiL,GAAD,OAAYA,EAAOzP,KAAOkE,EAAe2D,GAAK7H,MAE5CwP,EACFD,EAAcnH,KAAKoH,GAEnBD,EAAcnH,KAAKlE,EAAe2D,MARxC,IAAK,IAAMA,KAAO3D,EAAiB,EAAxB2D,GAYX,EAAKhH,MAAM8K,cAAc4D,KAzDA,EA6D7BtK,kBAAoB,WACd,EAAKpE,MAAMqE,UAAY,EAAKrE,MAAMqE,SAASoJ,gBAC7C,EAAKzN,MAAMqE,SAAShB,gBAClB,EAAKoL,mBACH,EAAKzO,MAAMqE,SAAShB,eAAewB,OACnC,EAAK7E,MAAMqE,SAASoJ,eAAe5I,QAEvC,EAAK2J,YAAW,KAEhB,EAAKxO,MAAMqE,UACT,EAAKrE,MAAMqE,SAAShB,gBACpB,EAAKrD,MAAM8K,cAAc,EAAK9K,MAAMqE,SAAShB,eAAewB,QAC9D,EAAK2J,YAAW,KAzES,EA6E7B5J,UAAY,WACV,OAAK,EAAK5E,MAAM+K,WAMT,EAAK/K,MAAM+K,WAAW/J,KAAI,SAAC6D,EAA6BC,GAA9B,OAC/B,qBAEE1E,UAAS,8EACP,EAAKJ,MAAM6K,eACX,EAAK7K,MAAM6K,cAAc1L,KAAO0F,EAAO1F,IACvC,6CAEF0B,QAAS,kBACP,EAAKb,MAAM6K,eAAiB,EAAK7K,MAAM6K,cAAc1L,KAAO0F,EAAO1F,IAC9D,EAAKa,MAAM4K,iBAAiB,MAC7B,EAAKsD,qBAAoB,GACzB,EAAKH,mBAAkB,GACvB,EAAKK,qBAAoB,GACzB,EAAKE,qBAAoB,KACxB,EAAKtO,MAAM4K,iBAAiB/F,GAC7B,EAAKqJ,oBAAoBrJ,EAAOG,UAAUC,QAC1C,EAAK8I,kBAAkBlJ,EAAOG,UAAUE,MACxC,EAAKkJ,oBAAoBvJ,EAAOG,UAAUG,QAC1C,EAAKmJ,oBAAoBzJ,EAAOG,UAAUI,UAlBlD,UAqBE,oBAAIhF,UAAU,YAAd,SACE,uBAAOA,UAAU,2BAAjB,SAaE,sBAAMA,UAAU,8DAAhB,SACGyE,EAAOE,WAId,6BACE,sBACE3E,UAAS,2CACPyE,EAAOG,UAAUC,OAAS,iBAAmB,gBAFjD,UAKGJ,EAAOG,UAAUC,OAAS,cAAC,IAAD,IAAqB,cAAC,IAAD,IAC/CJ,EAAOG,UAAUC,OAAS,OAAS,UAGxC,6BACE,sBACE7E,UAAS,2CACPyE,EAAOG,UAAUE,KAAO,iBAAmB,gBAF/C,UAKGL,EAAOG,UAAUE,KAAO,cAAC,IAAD,IAAqB,cAAC,IAAD,IAC7CL,EAAOG,UAAUE,KAAO,OAAS,UAGtC,6BACE,sBACE9E,UAAS,2CACPyE,EAAOG,UAAUG,OAAS,iBAAmB,gBAFjD,UAKGN,EAAOG,UAAUG,OAAS,cAAC,IAAD,IAAqB,cAAC,IAAD,IAC/CN,EAAOG,UAAUG,OAAS,OAAS,UAGxC,6BACE,sBACE/E,UAAS,2CACPyE,EAAOG,UAAUI,OAAS,iBAAmB,gBAFjD,UAKGP,EAAOG,UAAUI,OAAS,cAAC,IAAD,IAAqB,cAAC,IAAD,IAC/CP,EAAOG,UAAUI,OAAS,OAAS,YA5EnCN,EAAID,EAAO1F,GAAKkG,KAAKC,aAPrB,CACL,6BACE,0CADOD,KAAKC,YAhFS,EAyK7BuJ,oBAzK6B,uCAyKP,WAAOtO,GAAP,mBAAA5C,EAAA,yDACpB4C,EAAEkF,kBACE,EAAKzF,MAAMqE,SAFK,oBAGlB,EAAK4J,mBAAkB,GACnBlJ,EAA2C,KAC/CA,EAAO,EAAK/E,MAAMqE,SAASoJ,eACvBvM,GAAS,EANK,SASZ6D,GAAQ,EAAK/E,MAAM6K,eACrB3J,EAAQ6D,EAAKF,OAAOiK,WAClB,SAACjK,GAAD,OAAYA,EAAO1F,KAAO,EAAKa,MAAM6K,cAAe1L,QAEzC,GACX4F,EAAKF,OAAO3D,GAAO8D,UAAUC,OAAS,EAAKX,MAAM6J,iBACjDpJ,EAAKF,OAAO3D,GAAO8D,UAAUE,KAAO,EAAKZ,MAAM0J,eAC/CjJ,EAAKF,OAAO3D,GAAO8D,UAAUG,OAAS,EAAKb,MAAM+J,iBACjDtJ,EAAKF,OAAO3D,GAAO8D,UAAUI,OAAS,EAAKd,MAAMiK,kBAEjDxJ,EAAKF,OAAO0C,KAAK,CACfpI,GAAI,EAAKa,MAAM6K,cAAc1L,GAC7B4F,KAAM,EAAK/E,MAAM6K,cAAc9F,KAC/BiC,IAAK,EAAKhH,MAAM6K,cAAc7D,IAC9BhC,UAAW,CACTC,OAAQ,EAAKX,MAAM6J,iBACnBjJ,KAAM,EAAKZ,MAAM0J,eACjB7I,OAAQ,EAAKb,MAAM+J,iBACnBjJ,OAAQ,EAAKd,MAAMiK,oBAIhB,EAAKvO,MAAM6K,gBACpB9F,EAAO,CACLF,OAAQ,CACN,CACE1F,GAAI,EAAKa,MAAM6K,cAAc1L,GAC7B4F,KAAM,EAAK/E,MAAM6K,cAAc9F,KAC/BiC,IAAK,EAAKhH,MAAM6K,cAAc7D,IAC9BhC,UAAW,CACTC,OAAQ,EAAKX,MAAM6J,iBACnBjJ,KAAM,EAAKZ,MAAM0J,eACjB7I,OAAQ,EAAKb,MAAM+J,iBACnBjJ,OAAQ,EAAKd,MAAMiK,oBAIzBtP,QAAS,EAAKe,MAAMqE,SAASpF,QAC7B8P,uBAAwB,MAIxBhK,EAnDY,oBAqD6B,OAAvC,EAAK/E,MAAMqE,SAASoJ,eArDV,kCAsDA5P,IAAMmO,MAAN,UACPjO,IAAIC,KADG,kBAEV,CACE6G,OAAQE,EAAKF,OACb5F,QAAS,EAAKe,MAAMqE,SAASpF,UA1DrB,QAsDZhB,EAtDY,gDA8DAJ,IAAMsI,KAAN,UACPpI,IAAIC,KADG,kBAEV,CACE6G,OAAQE,EAAKF,OACb5F,QAAS,EAAKe,MAAMqE,SAASpF,UAlErB,QA8DZhB,EA9DY,eAuEVA,IACF8G,EAAKgK,uBAAyB9Q,EAAIQ,KAAKA,KAAKsQ,uBAE5C,EAAK/O,MAAMR,oBAAoBuF,EAAM,EAAK/E,MAAMoG,aAChDrB,GACE,EAAK/E,MAAMqE,SAAShB,gBACpB,EAAKoL,mBACH,EAAKzO,MAAMqE,SAAShB,eAAewB,OACnCE,EAAKF,QAET,EAAK7E,MAAMsG,eAAe,CACxBC,MAAM,8CACNC,MAAOC,IAAgByF,OAGzBnH,EAAO,KACP,EAAK/E,MAAM4K,iBAAiB,MAC5B,EAAKsD,qBAAoB,GACzB,EAAKH,mBAAkB,GACvB,EAAKK,qBAAoB,GACzB,EAAKE,qBAAoB,IA3Fb,0DA+FhBpQ,QAAQW,MAAM,CAAEmQ,iBAAiB,EAAD,KAChC,EAAKhP,MAAMsG,eAAe,CACxBC,MAAOxH,YAAY,EAAD,IAClByH,MAAOC,IAAgBG,SAlGT,QAqGlB,EAAKqH,mBAAkB,GArGL,0DAzKO,sDAG3B,EAAK3J,MAAQ,CACX1B,SAAS,EACTzB,gBAAgB,EAGhBgN,kBAAkB,EAClBH,gBAAgB,EAChBK,kBAAkB,EAClBE,kBAAkB,GAXO,E,0CAkR7B,WAAU,IAAD,OACP,YAA4BjG,IAAxBV,KAAK5H,MAAMqE,SACN,cAAC,IAAD,CAAU4K,GAAG,WAGlBrH,KAAKtD,MAAM1B,SAAmC,OAAxBgF,KAAK5H,MAAMqE,SAEjC,qBAAKjE,UAAU,kEAAf,oCAOF,8BACE,sBAAKA,UAAU,kDAAf,UACE,sBACEA,UAAS,kGACPwH,KAAK5H,MAAM6K,cAAgB,kBAAoB,IAFnD,UAKE,sBAAMzK,UAAU,4CAAhB,uBAGEwH,KAAKtD,MAAM1B,SACX,qBAAKxC,UAAU,yBAAf,SACE,cAAC,IAAD,CACE0I,QAAS,CACP,CACEC,YAAa,cACbC,UAAW,OACXC,QAAS,OAEX,CAAEF,YAAa,SAAUC,UAAW,QACpC,CAAED,YAAa,OAAQC,UAAW,QAClC,CAAED,YAAa,SAAUC,UAAW,QACpC,CAAED,YAAa,SAAUC,UAAW,SAEtCE,KAAMtB,KAAKhD,UACXuE,YAAY,EACZpI,QAAQ,EACRqI,SAAS,aACTC,QAAQ,cAKhB,qBAAKjJ,UAAS,2BAAd,SACIwH,KAAK5H,MAAM6K,cAQX,sBAAKzK,UAAS,GAAd,UACE,oBAAIA,UAAU,oEAAd,mCAGA,qBAAKA,UAAU,2BAAf,SACE,qBAAIA,UAAU,8EAAd,UACE,cAAC,IAAD,CAAiBA,UAAU,YAC1BwH,KAAK5H,MAAM6K,cAAc9F,UAI9B,qBAAK3E,UAAU,6BAAf,SACE,uBACEA,UAAU,6BACV0H,SAAU,SAACvH,GAAD,OAAO,EAAKsO,oBAAoBtO,IAF5C,UAIE,sBAAKH,UAAU,iCAAf,UACE,cAAC,IAAD,CAAWA,UAAU,0BACrB,sBAAKA,UAAU,gBAAf,UACE,oBAAIA,UAAU,wBAAd,oBACA,sBAAMA,UAAU,gCAAhB,qEAIF,uBACEhC,KAAK,WACLgC,UAAU,sCACVE,SAAU,kBACR,EAAK4N,qBAAqB,EAAK5J,MAAM6J,mBAEvCe,QAAStH,KAAKtD,MAAM6J,iBACpBzN,SAAUkH,KAAKtD,MAAMnD,oBAGzB,sBAAKf,UAAU,iCAAf,UACE,cAAC,KAAD,CAAgBA,UAAU,0BAC1B,sBAAKA,UAAU,gBAAf,UACE,oBAAIA,UAAU,wBAAd,kBACA,sBAAMA,UAAU,gCAAhB,mEAIF,uBACEhC,KAAK,WACLgC,UAAU,sCACVE,SAAU,kBACR,EAAKyN,mBAAmB,EAAKzJ,MAAM0J,iBAErCkB,QAAStH,KAAKtD,MAAM0J,eACpBtN,SAAUkH,KAAKtD,MAAMnD,oBAGzB,sBAAKf,UAAU,iCAAf,UACE,cAAC,IAAD,CAAQA,UAAU,0BAClB,sBAAKA,UAAU,gBAAf,UACE,oBAAIA,UAAU,wBAAd,oBACA,sBAAMA,UAAU,wBAAhB,qEAIF,uBACEhC,KAAK,WACLgC,UAAU,sCACVE,SAAU,kBACR,EAAK8N,qBAAqB,EAAK9J,MAAM+J,mBAEvCa,QAAStH,KAAKtD,MAAM+J,iBACpB3N,SAAUkH,KAAKtD,MAAMnD,oBAGzB,sBAAKf,UAAU,iCAAf,UACE,cAAC,IAAD,CAAUA,UAAU,0BACpB,sBAAKA,UAAU,gBAAf,UACE,oBAAIA,UAAU,wBAAd,oBACA,sBAAMA,UAAU,gCAAhB,qEAIF,uBACEhC,KAAK,WACLgC,UAAU,sCACVE,SAAU,kBACR,EAAKgO,qBAAqB,EAAKhK,MAAMiK,mBAEvCW,QAAStH,KAAKtD,MAAMiK,iBACpB7N,SAAUkH,KAAKtD,MAAMnD,oBAIzB,sBAAKf,UAAU,qDAAf,UAEE,wBACEA,UAAU,kEACVM,SAAUkH,KAAKtD,MAAMnD,eACrBN,QAAS,WACP,EAAKb,MAAM4K,iBAAiB,MAC5B,EAAKsD,qBAAoB,GACzB,EAAKH,mBAAkB,GACvB,EAAKK,qBAAoB,GACzB,EAAKE,qBAAoB,IAR7B,oBAaA,wBACElO,UAAU,eACVM,SAAUkH,KAAKtD,MAAMnD,eAFvB,SAIIyG,KAAKtD,MAAMnD,eAET,eADA,2BApHd,sBAAKf,UAAU,uEAAf,UACE,cAAC,KAAD,CAAYA,UAAU,cACtB,sBAAMA,UAAU,oBAAhB,sD,GAtUUmJ,aAucboE,EAAapM,IAAMC,KAC9BgI,YAAQ,KAAM,CACZhK,wBACA8G,qBAFFkD,CAGGsE","file":"static/js/11.3053b6dc.chunk.js","sourcesContent":["import axios from \"axios\";\nimport { Dispatch } from \"redux\";\nimport { ActionTypes } from \"./types\";\nimport {\n  AssignRoleToUserActionInterface,\n  CustomeAccessInterface,\n  UserInterface,\n} from \"../shared/interfaces\";\nimport { API } from \"../utils/api\";\nimport { setAxiosToken } from \"../utils/AxiosToken\";\nimport { errorToText } from \"../utils/errors\";\n\nexport const userPageLimit: number = 30;\n\n/**\n * * ****************************** INTERFACES *****************************\n */\n\nexport interface FetchUsersAction {\n  type: ActionTypes.FETCH_USERS_ACCESS;\n  payload: UserAccessInterface;\n}\n\nexport interface BlockUserToSystem {\n  type: ActionTypes.BLOCK_USER_TO_SYSTEM | ActionTypes.UNBLOCK_USER_TO_SYSTEM;\n  payload: { id: string; page: number };\n}\n\nexport interface AssignRoleToUserAction {\n  type: ActionTypes.ASSIGN_ROLE_TO_USER;\n  payload: { data: AssignRoleToUserActionInterface; page: number };\n}\n\nexport interface CustomizeUserAccessAction {\n  type: ActionTypes.CUSTOMIZE_USER_ACCESS;\n  payload: { data: CustomeAccessInterface; page: number };\n}\n\nexport interface ResetUserAccessAction {\n  type: ActionTypes.RESET_USER_ACCESS;\n  payload: { user_id: string; page: number };\n}\n\nexport type fetchUserAccessInterface = {\n  users: UserInterface[] | null;\n  next: {\n    page: number;\n    limit: number;\n  } | null;\n  previous: {\n    page: number;\n    limit: number;\n  } | null;\n  total_users: number;\n};\n\nexport type UserAccessInterface = {\n  users: { data: UserInterface[]; page: number }[] | null;\n  next: {\n    page: number;\n    limit: number;\n  } | null;\n  previous: {\n    page: number;\n    limit: number;\n  } | null;\n  total_users: number;\n};\n\nexport enum documentValidationStatus {\n  waiting = \"waiting\",\n  approved = \"approved\",\n  rejected = \"rejected\",\n}\n\nexport interface VerifyDocumentInterface {\n  user_id: string;\n  doc_id: string;\n  validation_status: \"waiting\" | \"approved\" | \"rejected\";\n  validated_by: {\n    user_id: string;\n    comment: string;\n    validation_status: \"waiting\" | \"approved\" | \"rejected\";\n    date?: string;\n  };\n  in_education: boolean;\n  disability: boolean;\n  expiration_date: string;\n}\n\nexport type AccessUserActionType =\n  | FetchUsersAction\n  | BlockUserToSystem\n  | AssignRoleToUserAction\n  | CustomizeUserAccessAction\n  | ResetUserAccessAction;\n\n/**\n * * ****************************** ACTIONS *****************************\n */\n\nexport type FT_FetchUserAccess = (\n  page: number,\n  callBack?: (\n    status: boolean,\n    msg: string,\n    data: UserInterface[] | null\n  ) => void\n) => void;\nexport const fetchUserAccess = (\n  page: number,\n  callback?: (\n    status: boolean,\n    msg: string,\n    data: UserInterface[] | null\n  ) => void\n) => {\n  callback && callback(true, \"\", null);\n  return async (dispatch: Dispatch) => {\n    try {\n      setAxiosToken();\n      const res = await axios.get<fetchUserAccessInterface>(\n        `${API.USER}/?page=${page}&limit=${userPageLimit}`\n      );\n      console.log(\"====================================\");\n      console.log({ fetchUserAccess: res });\n      console.log(\"====================================\");\n      dispatch<FetchUsersAction>({\n        type: ActionTypes.FETCH_USERS_ACCESS,\n        payload: {\n          users: [{ data: res.data.users!, page: page }],\n          next: res.data.next,\n          previous: res.data.previous,\n          total_users: res.data.total_users,\n        },\n      });\n      callback && callback(false, \"\", res.data.users);\n    } catch (error) {\n      console.error({ user_error: error });\n      callback && callback(false, errorToText(error), null);\n    }\n  };\n};\n\nexport const blockUserToSystem = (user_id: string, page: number) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<BlockUserToSystem>({\n      type: ActionTypes.BLOCK_USER_TO_SYSTEM,\n      payload: { id: user_id, page },\n    });\n  };\n};\n\nexport const unBlockUserToSystem = (user_id: string, page: number) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<BlockUserToSystem>({\n      type: ActionTypes.UNBLOCK_USER_TO_SYSTEM,\n      payload: { id: user_id, page },\n    });\n  };\n};\n\nexport const assignRoleToUserAccess = (\n  data: AssignRoleToUserActionInterface,\n  page: number\n) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<AssignRoleToUserAction>({\n      type: ActionTypes.ASSIGN_ROLE_TO_USER,\n      payload: { data, page },\n    });\n  };\n};\n\nexport const customizeUserAccess = (\n  data: CustomeAccessInterface,\n  page: number\n) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<CustomizeUserAccessAction>({\n      type: ActionTypes.CUSTOMIZE_USER_ACCESS,\n      payload: { data, page },\n    });\n  };\n};\n\nexport const resetUserAccess = (data: string, page: number) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<ResetUserAccessAction>({\n      type: ActionTypes.RESET_USER_ACCESS,\n      payload: { user_id: data, page },\n    });\n  };\n};\n\nexport const FC_GetUserBySearch = async (\n  search_value: string,\n  callback: (\n    status: boolean,\n    msg: string,\n    data: UserInterface | null | \"\"\n  ) => void\n) => {\n  callback(true, \"\", null);\n  try {\n    setAxiosToken();\n    const res = await axios.get<UserInterface | null | \"\">(\n      `${API.USER}/check/${search_value}`\n    );\n    console.log(\"=================FC_GetUserBySearch===================\");\n    console.log({ FC_GetUserBySearch: res });\n    console.log(\"=================FC_GetUserBySearch===================\");\n    callback(false, \"\", res.data);\n  } catch (error) {\n    console.error({ user_error: error });\n    callback(false, errorToText(error), null);\n  }\n};\n","import axios from \"axios\";\nimport React, { Component } from \"react\";\nimport { MdLock, MdLocationOn } from \"react-icons/md\";\nimport { connect } from \"react-redux\";\nimport { PushPopupAlert, schoolLevelsStoreInterface } from \"../../actions\";\nimport { getAllRoom } from \"../../actions/location\";\nimport {\n  blockUserToSystem,\n  unBlockUserToSystem,\n  resetUserAccess,\n} from \"../../actions/users\";\nimport { PopupAlertData } from \"../../components/Alert/Popup\";\nimport Loading from \"../../components/Loading/Loading\";\nimport NoResult, { NoResultThemes } from \"../../components/NoResult/NoResult\";\nimport Table from \"../../components/Table/Table\";\nimport { PopupAlertTheme } from \"../../interfaces/popupAlert\";\nimport { StoreState } from \"../../reducers\";\nimport {\n  getRoleById,\n  capitalizeFirstLetter,\n  getInstituteById,\n  isEmptyOrSpaces,\n} from \"../../shared/dataTest\";\nimport {\n  RoomLocationInterface,\n  LocationRoomTableInterface,\n  DistrictInterface,\n  SystemUserRoleInterface,\n  UserInterface,\n  AccessTaskInterface,\n} from \"../../shared/interfaces\";\nimport { API } from \"../../utils/api\";\nimport { errorToText } from \"../../utils/errors\";\nimport { UserAccess } from \"./UserAccess\";\nimport UserRole from \"./UserRole\";\nimport profile from \"../../shared/blank_profile.png\"; // with im\nimport { FC_GetBase64Img } from \"../../utils/functions\";\n\nexport const getUserById = (users: UserInterface[], userId: string) => {\n  return users.find((item) => item.user_id === userId);\n};\n\nexport enum ModalState {\n  View_User = \"View User Info\",\n  Add_Access = \"Add Access To User\",\n  Update_Access = \"Update User Access\",\n  Close_Modal = \"Close Modal\",\n}\n\n// Table replaced with Emmy's function\nexport const LocationsInArray = (\n  LocationData: RoomLocationInterface[]\n): LocationRoomTableInterface[] | [] => {\n  let locationTemp: LocationRoomTableInterface[] = [];\n  for (let p in LocationData) {\n    let districts = LocationData[p].districts;\n    for (let d in districts) {\n      let centers = districts[d].centers;\n      for (let c in centers) {\n        let rooms = centers[c].rooms;\n        for (let r in rooms) {\n          locationTemp.push({\n            province_id: LocationData[p]._id,\n            province_name: LocationData[p].province_name,\n            district_id: districts[d]._id,\n            district_name: districts[d].district_name,\n            center_id: centers[c]._id,\n            center_name: centers[c].center_name,\n            room_id: rooms[r]._id,\n            room_name: rooms[r].room_number.toString(),\n            capacity: rooms[r].capacity,\n            occupied: rooms[r].occupied,\n          });\n        }\n      }\n    }\n  }\n  return locationTemp;\n};\n\ninterface AppProps {\n  users: UserInterface[];\n  roleList: SystemUserRoleInterface[];\n  userTypes: \"all\" | \"active\" | \"blocked\";\n  loadingUser: boolean;\n  schoolLevels: schoolLevelsStoreInterface;\n  setLoadingUser: (value: boolean) => void;\n  manageUser: UserInterface | null;\n  setManageUser: (value: UserInterface | null) => void;\n  changeRole: boolean;\n  setChangeRole: (value: boolean) => void;\n  currentPage: number;\n  manageUserId: string;\n  setManageUserId: (value: string) => void;\n  searchFind: string;\n\n  // REDUX =================\n  allRoom: RoomLocationInterface[];\n  getAllRoom: Function;\n  blockUserToSystem: Function;\n  unBlockUserToSystem: Function;\n  resetUserAccess: Function;\n  PushPopupAlert: (alert: PopupAlertData) => void;\n}\n\ninterface AppStates {\n  loadingRequest: boolean;\n  loading: boolean;\n  loadingRequestType: \"RESET\" | \"STATUS\" | \"CHANGE_ROLE\" | null;\n  roomList: RoomLocationInterface[] | null;\n  roomTable: LocationRoomTableInterface[] | null;\n  userAccess: AccessTaskInterface[] | null;\n  currentAccess: AccessTaskInterface | null;\n}\n\nclass UserList extends Component<AppProps, AppStates> {\n  constructor(props: AppProps) {\n    super(props);\n\n    this.state = {\n      loadingRequest: false,\n      loading: true,\n      loadingRequestType: null,\n      roomList: null,\n      roomTable: null,\n      userAccess: null,\n      currentAccess: null,\n    };\n  }\n\n  setLoadingRequest = (value: boolean) => {\n    this.setState({ loadingRequest: value });\n  };\n\n  setLoading = (value: boolean) => {\n    this.setState({ loading: value });\n  };\n\n  setLoadingRequestType = (\n    value: \"RESET\" | \"STATUS\" | \"CHANGE_ROLE\" | null\n  ) => {\n    this.setState({ loadingRequestType: value });\n  };\n\n  setRoomList = (value: RoomLocationInterface[] | null) => {\n    this.setState({ roomList: value });\n  };\n\n  setRoomTables = (value: LocationRoomTableInterface[] | null) => {\n    this.setState({ roomTable: value });\n  };\n\n  setCurrentAccess = (value: AccessTaskInterface | null) => {\n    this.setState({ currentAccess: value });\n  };\n\n  setUserAccess = (value: AccessTaskInterface[] | null) => {\n    this.setState({ userAccess: value });\n  };\n\n  componentDidMount = () => {\n    if (this.props.allRoom.length === 0) {\n      this.props.getAllRoom(\n        (status: boolean, msg: string, data?: RoomLocationInterface[]) => {\n          this.setLoading(status);\n          this.props.setLoadingUser(status);\n          if (!status && msg.length > 0) {\n            this.props.PushPopupAlert({\n              title: msg,\n              theme: PopupAlertTheme.danger,\n            });\n          }\n          if (data && data.length > 0) {\n            this.setRoomList(data);\n            this.setRoomTables(LocationsInArray(data));\n          }\n        }\n      );\n    } else if (this.state.loading) {\n      this.setRoomList(this.props.allRoom);\n      this.setRoomTables(LocationsInArray(this.props.allRoom));\n      this.props.setLoadingUser(false);\n      this.setLoading(false);\n    }\n  };\n\n  tableData = (): JSX.Element[] => {\n    if (this.props.loadingUser || this.state.loading) {\n      return [\n        <tr\n          key={Math.random()}\n          className=\"border-b border-gray-200 hover:bg-gray-100\"\n        >\n          <td className=\"p-3 text-center\" colSpan={8}>\n            <Loading />\n          </td>\n        </tr>,\n      ];\n    }\n\n    let data: UserInterface[] = this.props.users;\n    if (data.length <= 0) {\n      return [\n        <tr\n          key={Math.random()}\n          className=\"border-b border-gray-200 hover:bg-gray-100\"\n        >\n          <td className=\"p-3 text-center\" colSpan={8}>\n            No Data Found\n          </td>\n        </tr>,\n      ];\n    }\n\n    const pageNumber: number =\n      this.props.currentPage > 1 ? (this.props.currentPage - 1) * 30 : 0;\n\n    return data.map((user: UserInterface, index: number) => (\n      <tr\n        key={index + Math.random()}\n        className=\"border-b border-gray-200 hover:bg-gray-100 group cursor-pointer\"\n        onClick={() => {\n          this.props.setManageUser(user);\n          this.props.setManageUserId(user.user_id);\n        }}\n      >\n        <td className=\"p-3 text-left whitespace-nowrap\">\n          {pageNumber + index + 1}\n        </td>\n        <td className=\"p-3 text-left\">\n          <span>\n            {user.user_info &&\n              user.user_info.fname + \" \" + user.user_info.lname}\n          </span>\n        </td>\n        <td className=\"p-3 text-left\">{user.email}</td>\n        {/* <td className=\"p-3 text-left\">{user.phone_number}</td> */}\n        <td className=\"p-3 text-left\">\n          {user.user_info && user.user_info.sex === \"M\" ? \"Male\" : \"Female\"}\n        </td>\n        <td className=\"p-3 text-left text-blue-700 text-base font-medium\">\n          {user.default_access &&\n            user.default_access.system_user_role_id &&\n            user.default_access.system_user_role_id && (\n              <span\n                className={`px-2 py-1 font-semibold rounded text-blue-700 bg-blue-100 dark:bg-blue-700 dark:text-blue-100`}\n              >\n                {getRoleById(\n                  this.props.roleList,\n                  user.default_access.system_user_role_id\n                )?.role &&\n                  capitalizeFirstLetter(\n                    getRoleById(\n                      this.props.roleList,\n                      user.default_access.system_user_role_id\n                    )?.role\n                  )}\n              </span>\n            )}\n        </td>\n        {/* {userTypes === \"all\" && (\n          <td>\n            {user.is_active ? (\n              <span className={`px-2 py-1 font-semibold text-green-700`}>\n                Active\n              </span>\n            ) : (\n              <span className={`px-2 py-1 font-semibold text-red-700`}>\n                Blocked\n              </span>\n            )}\n          </td>\n        )} */}\n        <td className=\"px-3 text-center\">\n          <button\n            className=\"btn bg-gray-200 group-hover:bg-blue-700 group-hover:text-white focus:outline-none\"\n            title=\"Manage User Access\"\n            onClick={() => {\n              this.props.setManageUser(user);\n              this.props.setManageUserId(user.user_id);\n            }}\n          >\n            Manage\n          </button>\n        </td>\n      </tr>\n    ));\n  };\n\n  blockUser = async (user_id: string, actionType: boolean) => {\n    if (!user_id) {\n      this.props.PushPopupAlert({\n        title: \"User Access is required doesn't exist\",\n        theme: PopupAlertTheme.danger,\n      });\n    }\n\n    this.setLoadingRequest(true);\n\n    if (\n      !window.confirm(\n        `Are sure you want to ${actionType ? \"block\" : \"activate\"} this user?`\n      )\n    ) {\n      return this.setLoadingRequest(false);\n    }\n\n    try {\n      const res = await axios.patch(\n        `${API.AUTH}/auth/user/disactive/${user_id}`,\n        {\n          is_active: !actionType,\n        }\n      );\n      if (res) {\n        console.log(\"====================================\");\n        console.log({ blockUserToSystem: res });\n        console.log(\"====================================\");\n        actionType\n          ? this.props.blockUserToSystem(user_id, this.props.currentPage)\n          : this.props.unBlockUserToSystem(user_id, this.props.currentPage);\n\n        this.props.PushPopupAlert({\n          title: `User has been ${actionType ? \"blocked\" : \"activated\"}!`,\n          theme: PopupAlertTheme.info,\n        });\n      }\n    } catch (error) {\n      console.error({ blockUser_ERROR: error });\n      this.props.PushPopupAlert({\n        title: errorToText(error),\n        theme: PopupAlertTheme.danger,\n      });\n    }\n\n    this.setLoadingRequest(false);\n    user_id = \"\";\n  };\n\n  restUserAccess = async (user_id: string) => {\n    if (!user_id) {\n      this.props.PushPopupAlert({\n        title: \"User Access is required doesn't exist\",\n        theme: PopupAlertTheme.warning,\n      });\n    }\n\n    if (!window.confirm(`Are sure you want to reset to default access?`)) {\n      return this.setLoadingRequest(false);\n    }\n\n    this.setLoadingRequest(true);\n    this.setLoadingRequestType(\"RESET\");\n\n    try {\n      const res = await axios.delete(\n        `${API.USER}/access/custom/user/${user_id}`\n      );\n      res && this.props.resetUserAccess(user_id, this.props.currentPage);\n      let resetedAccess: UserInterface | undefined | null = isEmptyOrSpaces(\n        this.props.searchFind\n      )\n        ? this.props.users.find((user) => user.user_id === user_id)\n        : this.props.manageUser;\n      if (resetedAccess) {\n        resetedAccess.default_access &&\n          this.setUserAccess(resetedAccess.default_access.access);\n        this.props.PushPopupAlert({\n          title: `Resetting User Access complete successfully`,\n          theme: PopupAlertTheme.info,\n        });\n        this.setCurrentAccess(null);\n      }\n    } catch (error) {\n      console.error({ reseting_user_access: error });\n      this.props.PushPopupAlert({\n        title: errorToText(error),\n        theme: PopupAlertTheme.danger,\n      });\n    }\n\n    this.setLoadingRequest(false);\n    this.setLoadingRequestType(null);\n    user_id = \"\";\n  };\n\n  distinctDistrict = (\n    location: RoomLocationInterface[],\n    province_id?: string\n  ): DistrictInterface[] => {\n    let ids: string[] = [],\n      result: DistrictInterface[] = [];\n\n    if (province_id) {\n      result = location.find((item) => item._id === province_id)\n        ? location.find((item) => item._id === province_id)!.districts\n          ? location.find((item) => item._id === province_id)!.districts\n          : []\n        : [];\n    } else {\n      for (const key in location) {\n        if (Object.prototype.hasOwnProperty.call(location, key)) {\n          for (const keyDistrict in location[key].districts) {\n            if (\n              Object.prototype.hasOwnProperty.call(\n                location[key].districts,\n                keyDistrict\n              )\n            ) {\n              if (!ids.includes(location[key].districts[keyDistrict]._id)) {\n                ids.push(location[key].districts[keyDistrict]._id);\n                result.push(location[key].districts[keyDistrict]);\n              }\n            }\n          }\n        }\n      }\n    }\n\n    return result;\n  };\n\n  render() {\n    const DATA_GetUser = isEmptyOrSpaces(this.props.searchFind)\n      ? this.props.users.find(\n          (user) => user.user_id === this.props.manageUserId\n        )\n      : this.props.manageUser\n      ? this.props.manageUser\n      : undefined;\n    const DATA_GetRoleById =\n      DATA_GetUser && DATA_GetUser!.default_access\n        ? getRoleById(\n            this.props.roleList,\n            DATA_GetUser!.default_access!.system_user_role_id\n          )\n        : undefined;\n\n    const DATA_ThisRoom =\n      this.state.roomTable && DATA_GetUser\n        ? this.state.roomTable.find(\n            (room) => room.room_id === DATA_GetUser!.default_access?.room_id\n          )\n        : undefined;\n\n    return (\n      <div>\n        {!this.props.manageUser && (\n          <div className=\"grid md:grid-cols-5 gap-2 mb-5\">\n            <div className={`md:col-span-5 rounded`}>\n              <div className=\"my-2 flex sm:flex-row flex-col justify-between\">\n                <div className=\"flex flex-col md:flex-row gap-1 items-center mx-1.5\">\n                  {/* <span className=\"text-lg\">All User</span>\n                  <MdChevronRight className=\"w-7 h-7\" />\n                  <span className=\"text-lg underline\">All User</span> */}\n                </div>\n              </div>\n              {this.props.users && (\n                <Table\n                  columns={[\n                    { columnTitle: \"#\", alignText: \"left\", padding: \"p-3\" },\n                    { columnTitle: \"Names\", alignText: \"left\", padding: \"p-3\" },\n                    { columnTitle: \"Email\", alignText: \"left\", padding: \"p-3\" },\n                    {\n                      columnTitle: \"Gender\",\n                      alignText: \"left\",\n                      padding: \"p-3\",\n                    },\n                    { columnTitle: \"Role\", alignText: \"left\", padding: \"p-3\" },\n                    // { columnTitle: \"Status\", alignText: \"left\", padding: \"p-3\" },\n                    { columnTitle: \"\", alignText: \"left\", padding: \"p-3\" },\n                  ]}\n                  rows={this.tableData}\n                  pagination={false}\n                  search={true}\n                  thColor=\"gray\"\n                  loading={this.props.loadingUser || this.state.loading}\n                />\n              )}\n            </div>\n          </div>\n        )}\n\n        {/* -------------------------------------------------------- */}\n\n        {this.props.manageUser && (\n          <div className=\"bg-gray-100 h-100\">\n            {/* header */}\n            <div className=\"bg-white border-b border-t px-4 py-2 flex flex-col md:flex-row items-center gap-x-14\">\n              {DATA_GetUser ? (\n                <div\n                  key={DATA_GetUser!.user_id + Math.random()}\n                  className=\"flex flex-col md:flex-row md:items-start items-center w-full gap-3\"\n                >\n                  <img\n                    src={\n                      DATA_GetUser!.user_info.photo !== \"pic\" &&\n                      DATA_GetUser!.user_info.photo !== undefined\n                        ? FC_GetBase64Img(DATA_GetUser!.user_info.photo)\n                        : profile\n                    }\n                    alt=\"\"\n                    className=\"rounded-full w-32 h-32 object-contain\"\n                  />\n                  <div className=\"flex flex-col gap-1 items-start w-full\">\n                    <span className=\"text-2xl font-semibold\">\n                      {DATA_GetUser!.user_info.fname +\n                        \" \" +\n                        DATA_GetUser!.user_info.lname}\n                    </span>\n                    <div className=\"flex items-center\">\n                      <MdLock className=\"w-5 h-5\" />\n                      <span className=\"text-lg font-medium\">\n                        {DATA_GetRoleById && DATA_GetRoleById.role}\n                      </span>\n                    </div>\n                    <div className=\"flex items-center gap-1\">\n                      <span className=\"text-gray-500\">Level:</span>\n                      <span className=\"text-base font-medium\">\n                        {DATA_GetRoleById && DATA_GetRoleById.room_required\n                          ? \"Room\"\n                          : DATA_GetRoleById &&\n                            DATA_GetRoleById.education_institution_required\n                          ? \"Institute\"\n                          : \"-\"}\n                      </span>\n                    </div>\n                    {DATA_GetRoleById &&\n                    DATA_GetRoleById.education_institution_required ? (\n                      <div className=\"flex items-center gap-1\">\n                        <span className=\"text-gray-500\">Institute:</span>\n                        <span className=\"text-base font-medium\">\n                          {DATA_GetUser!.default_access &&\n                          this.props.schoolLevels.education_categories &&\n                          getInstituteById(\n                            this.props.schoolLevels.education_categories,\n                            DATA_GetUser!.default_access!\n                              .education_institution_id\n                          )\n                            ? getInstituteById(\n                                this.props.schoolLevels.education_categories,\n                                DATA_GetUser!.default_access!\n                                  .education_institution_id\n                              )!.education_category_title\n                            : \"Unknown Institute\"}\n                        </span>\n                      </div>\n                    ) : (\n                      DATA_GetRoleById &&\n                      DATA_GetRoleById.room_required && (\n                        <div className=\"flex items-center gap-1\">\n                          {/* <span className=\"text-gray-500\">Room:</span> */}\n                          <MdLocationOn className=\"text-gray-500\" />\n                          {DATA_ThisRoom && (\n                            <span className=\"text-base font-medium\">\n                              {DATA_ThisRoom?.district_name +\n                                \" - \" +\n                                DATA_ThisRoom?.center_name +\n                                \" - Room \" +\n                                DATA_ThisRoom?.room_name}\n                            </span>\n                          )}\n                        </div>\n                      )\n                    )}\n                  </div>\n                </div>\n              ) : (\n                <div className=\"w-full\">\n                  <NoResult\n                    theme={NoResultThemes.Dark}\n                    value={\"User info not found\"}\n                  />\n                </div>\n              )}\n              {DATA_GetUser && (\n                <div\n                  key={DATA_GetUser!.user_id + Math.random()}\n                  className=\"flex flex-col w-full\"\n                >\n                  <div className=\"flex items-center gap-1\">\n                    <span className=\"text-gray-500\">NID:</span>\n                    <span className=\"text-base font-medium\">\n                      {DATA_GetUser!.n_id}\n                    </span>\n                  </div>\n                  <div className=\"flex items-center gap-1\">\n                    <span className=\"text-gray-500\">Email:</span>\n                    <span className=\"text-base font-medium\">\n                      {DATA_GetUser!.email}\n                    </span>\n                  </div>\n                  <div className=\"flex items-center gap-1\">\n                    <span className=\"text-gray-500\">Phone:</span>\n                    <span className=\"text-base font-medium\">\n                      {DATA_GetUser!.phone_number}\n                    </span>\n                  </div>\n                  <div className=\"flex items-center gap-1\">\n                    <span className=\"text-gray-500\">Status:</span>\n                    <span className=\"text-base font-medium\">\n                      {DATA_GetUser!.is_active === false ? \"Blocked\" : \"Active\"}\n                    </span>\n                  </div>\n                  <div className=\"flex items-center gap-1\">\n                    {DATA_GetUser!.custome_access && (\n                      <button\n                        className={`px-2 py-1 font-semibold text-gray-50 inline-flex items-center rounded ${\n                          this.state.loadingRequestType &&\n                          this.state.loadingRequestType === \"RESET\"\n                            ? \"cursor-wait bg-gray-400\"\n                            : \"bg-gray-600\"\n                        }`}\n                        onClick={() =>\n                          this.restUserAccess(DATA_GetUser!.user_id)\n                        }\n                        disabled={this.state.loadingRequest}\n                      >\n                        <MdLock className=\"w-4 h-4 fill-current\" />\n                        <span>\n                          {this.state.loadingRequestType &&\n                          this.state.loadingRequestType === \"RESET\"\n                            ? \"Resetting...\"\n                            : \"Reset Access\"}\n                        </span>\n                      </button>\n                    )}\n                    {!this.props.changeRole && (\n                      <button\n                        className=\"bg-yellow-300 hover:bg-yellow-400 px-2 py-1 font-semibold text-black inline-flex items-center rounded\"\n                        onClick={() => this.props.setChangeRole(true)}\n                      >\n                        <MdLock className=\"w-4 h-4 fill-current\" />\n                        <span>Change Role</span>\n                      </button>\n                    )}\n                    {DATA_GetUser!.is_active ? (\n                      <button\n                        className={`px-2 py-1 font-semibold text-gray-100 inline-flex items-center rounded ${\n                          this.state.loadingRequestType &&\n                          this.state.loadingRequestType === \"STATUS\"\n                            ? \"cursor-wait bg-red-500\"\n                            : \"bg-red-700\"\n                        }`}\n                        onClick={() =>\n                          !this.state.loadingRequest &&\n                          this.props.manageUser &&\n                          this.blockUser(\n                            DATA_GetUser!.user_id,\n                            DATA_GetUser!.is_active\n                          )\n                        }\n                        disabled={this.state.loadingRequest}\n                      >\n                        <MdLock className=\"w-4 h-4 fill-current\" />\n                        <span>\n                          {this.state.loadingRequestType &&\n                          this.state.loadingRequestType === \"RESET\"\n                            ? \"Loading...\"\n                            : \"Block user\"}\n                        </span>\n                      </button>\n                    ) : (\n                      <button\n                        className={`px-2 py-1 font-semibold text-gray-100 inline-flex items-center rounded ${\n                          this.state.loadingRequestType &&\n                          this.state.loadingRequestType === \"STATUS\"\n                            ? \"cursor-wait bg-yellow-500\"\n                            : \"bg-yellow-700\"\n                        }`}\n                        onClick={() =>\n                          !this.state.loadingRequest &&\n                          this.props.manageUser &&\n                          this.blockUser(\n                            DATA_GetUser!.user_id,\n                            DATA_GetUser!.is_active\n                          )\n                        }\n                        disabled={this.state.loadingRequest}\n                      >\n                        <MdLock className=\"w-4 h-4 fill-current\" />\n                        <span>\n                          {this.state.loadingRequestType &&\n                          this.state.loadingRequestType === \"RESET\"\n                            ? \"Loading...\"\n                            : \"Re-Activate\"}\n                        </span>\n                      </button>\n                    )}\n                  </div>\n                </div>\n              )}\n            </div>\n            {/* end header */}\n\n            {/* content */}\n            {this.props.manageUser &&\n            this.state.roomList &&\n            this.props.changeRole ? (\n              <UserRole\n                userInfo={this.props.manageUser}\n                roleList={this.props.roleList}\n                district={this.distinctDistrict(this.state.roomList)}\n                roomList={this.state.roomList}\n                setChangeRole={this.props.setChangeRole}\n                currentPage={this.props.currentPage}\n              />\n            ) : (\n              <UserAccess\n                userInfo={DATA_GetUser}\n                manageUserId={this.props.manageUserId}\n                setUserAccess={this.setUserAccess}\n                userAccess={this.state.userAccess}\n                setCurrentAccess={this.setCurrentAccess}\n                currentAccess={this.state.currentAccess}\n                currentPage={this.props.currentPage}\n              />\n            )}\n            {/* end content */}\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = ({\n  schoolLevels,\n  locations,\n}: StoreState): {\n  schoolLevels: schoolLevelsStoreInterface;\n  allRoom: RoomLocationInterface[];\n} => {\n  return {\n    schoolLevels,\n    allRoom: locations.roomLocation,\n  };\n};\n\nexport default React.memo(\n  connect(mapStateToProps, {\n    blockUserToSystem,\n    unBlockUserToSystem,\n    resetUserAccess,\n    getAllRoom,\n    PushPopupAlert,\n  })(UserList)\n);\n","import React, { useState } from \"react\";\nimport { MdSearch } from \"react-icons/md\";\nimport { capitalizeFirstLetter } from \"../../shared/dataTest\";\nimport { SystemUserRoleInterface } from \"../../shared/interfaces\";\nimport search from \"../../utils/search\";\n\n// const searchRole = (\n//   objList: SystemUserRoleInterface[],\n//   text: string\n// ): SystemUserRoleInterface[] => {\n//   return objList.filter(\n//     (product) => product.role.toLocaleLowerCase() === text.toLocaleLowerCase()\n//   );\n// };\n\ntype RoleListProps = {\n  setChooseRole: (value: boolean) => void;\n  roleList: SystemUserRoleInterface[];\n  handleSelectRole: (role_id: string, TYPE?: \"SELECT\" | \"DEFAULT\") => void;\n  loadindRequest: boolean;\n};\n\nconst RoleList: React.FC<RoleListProps> = (props) => {\n  const [searchInput, setSearchInput] = useState<string>(\"\");\n  return (\n    <section className=\"border-2 rounded border-gray-400\">\n      {/* SEARCH PART */}\n      <div className=\"flex items-center w-full my-1\">\n        <MdSearch className=\"w-6 h-6 absolute ml-2\" />\n        <input\n          type=\"text\"\n          placeholder=\"Search\"\n          className=\"focus:border-2 h-7 ml-1 pl-9 mr-2 bg-gray-100 focus:border-gray-700 w-full rounded\"\n          onChange={(e) => setSearchInput(e.target.value)}\n          value={searchInput}\n          disabled={props.roleList.length > 0 ? false : true}\n        />\n        <button\n          className=\"bg-red-200 text-red-700 py-1 px-2 mr-1 rounded text-sm focus:outline-none\"\n          type=\"button\"\n          onClick={() => {\n            props.setChooseRole(false);\n          }}\n        >\n          Close\n        </button>\n      </div>\n      {/* END SEARCH PART ///////////////// */}\n\n      <div className=\"w-full h-52 mt-2 overflow-y-auto divide-y divide-gray-300\">\n        {search(props.roleList, searchInput).length > 0 ? (\n          search(props.roleList, searchInput).map((role, index) => (\n            <section key={index + role.role}>\n              <div className=\"group flex items-center justify-between my-1 hover:bg-gray-100\">\n                <div\n                  className=\"p-1 w-full mr-2 cursor-pointer\"\n                  onClick={() => {\n                    props.setChooseRole(false);\n                    !props.loadindRequest &&\n                      props.handleSelectRole(role.system_user_role_id);\n                  }}\n                >\n                  <p className=\"text-sm font-medium text-black\">\n                    {capitalizeFirstLetter(role.role)}\n                  </p>\n                </div>\n                <button\n                  type=\"button\"\n                  className=\"bg-blue-200 group-hover:bg-blue-300 text-blue-700 group-hover:text-blue-800 py-1 px-2 mr-1 rounded text-sm\"\n                >\n                  Choose\n                </button>\n              </div>\n            </section>\n          ))\n        ) : (\n          <div className=\"text-center p-3\">\n            <p className=\"text-base font-medium text-black\">\n              No role available\n            </p>\n          </div>\n        )}\n      </div>\n    </section>\n  );\n};\n\nexport default React.memo(RoleList);\n","import axios from \"axios\";\nimport React, { Component } from \"react\";\nimport { MdHighlightOff } from \"react-icons/md\";\nimport { TiInputChecked } from \"react-icons/ti\";\nimport { connect } from \"react-redux\";\nimport { schoolLevelsStoreInterface, PushPopupAlert } from \"../../actions\";\nimport { assignRoleToUserAccess } from \"../../actions/users\";\nimport { PopupAlertData } from \"../../components/Alert/Popup\";\nimport Loading from \"../../components/Loading/Loading\";\nimport Table from \"../../components/Table/Table\";\nimport { PopupAlertTheme } from \"../../interfaces/popupAlert\";\nimport { StoreState } from \"../../reducers\";\nimport { isEmptyOrSpaces } from \"../../shared/dataTest\";\nimport {\n  UserInterface,\n  SystemUserRoleInterface,\n  DistrictInterface,\n  RoomLocationInterface,\n  AssignRoleToUserActionInterface,\n  LocationRoomTableInterface,\n  RoleToUserInterface,\n} from \"../../shared/interfaces\";\nimport { API } from \"../../utils/api\";\nimport { errorToText } from \"../../utils/errors\";\nimport RoleList from \"./RoleList\";\nimport { LocationsInArray } from \"./UserList\";\nconst url = `${API.AUTH}/auth/user/access`;\n\ninterface AppProps {\n  currentPage: number;\n  userInfo: UserInterface;\n  roleList: SystemUserRoleInterface[];\n  district: DistrictInterface[];\n  assignRoleToUserAccess: Function;\n  roomList: RoomLocationInterface[] | null;\n  schoolLevels: schoolLevelsStoreInterface;\n  setChangeRole: (value: boolean) => void;\n  PushPopupAlert: (alert: PopupAlertData) => void;\n}\n\ninterface AppState {\n  loading: boolean;\n  loadingForm: boolean;\n  loadingRequest: boolean;\n  roleId: string;\n  provinceId: string;\n  districtId: string;\n  roomId: string;\n  instituteId: string;\n  centerId: string;\n  selectedRole: SystemUserRoleInterface | null;\n  formError: {\n    element: string;\n    msg: string;\n  } | null;\n  chooseRole: boolean;\n}\n\nclass UserRole extends Component<AppProps, AppState> {\n  constructor(props: AppProps) {\n    super(props);\n\n    this.state = {\n      loading: true,\n      loadingForm: true,\n      loadingRequest: false,\n      roleId: \"\",\n      provinceId: \"\",\n      districtId: \"\",\n      roomId: \"\",\n      instituteId: \"\",\n      centerId: \"\",\n      selectedRole: null,\n      formError: null,\n      chooseRole: false,\n    };\n  }\n\n  setRoleId = (value: string) => {\n    this.setState({ roleId: value });\n  };\n\n  setSelectedRole = (value: SystemUserRoleInterface | null) => {\n    this.setState({ selectedRole: value });\n  };\n\n  setProvinceId = (value: string) => {\n    this.setState({ provinceId: value });\n  };\n\n  setDistrictId = (value: string) => {\n    this.setState({ districtId: value });\n  };\n\n  setCenterId = (value: string) => {\n    this.setState({ centerId: value });\n  };\n\n  setRoomId = (value: string) => {\n    this.setState({ roomId: value });\n  };\n\n  setLoadingForm = (value: boolean) => {\n    this.setState({ loadingForm: value });\n  };\n\n  setLoading = (value: boolean) => {\n    this.setState({ loading: value });\n  };\n\n  setInstituteId = (value: string) => {\n    this.setState({ instituteId: value });\n  };\n\n  setFormError = (\n    value: {\n      element: string;\n      msg: string;\n    } | null\n  ) => {\n    this.setState({ formError: value });\n  };\n  setLoadingRequest = (value: boolean) => {\n    this.setState({ loadingRequest: value });\n  };\n  setChooseRole = (value: boolean) => {\n    this.setState({ chooseRole: value });\n  };\n\n  setDefaultState = (\n    default_access: RoleToUserInterface,\n    role: SystemUserRoleInterface\n  ) => {\n    // SET DEFAULT PROVINCE && DISTRICT ID =======================\n    let LOAD_province: LocationRoomTableInterface | undefined;\n    let LOAD_district: DistrictInterface | undefined;\n    if (role.district_required && this.props.roomList) {\n      LOAD_district = this.distinctDistrict(this.props.roomList).find(\n        (item) => item._id === default_access!.district_id\n      );\n      LOAD_district && this.setProvinceId(LOAD_district.province_id);\n      LOAD_district && this.setDistrictId(default_access!.district_id);\n      this.setLoadingForm(false);\n    } else if (role.room_required && this.props.roomList) {\n      // SET DEFAULT PROVINCE && DISTRICT && ROOM ID =======================\n\n      LOAD_province = LocationsInArray(this.props.roomList).find(\n        (item) => item.room_id === default_access!.room_id\n      );\n      LOAD_province && this.setProvinceId(LOAD_province.province_id);\n      LOAD_province && this.setDistrictId(LOAD_province.district_id);\n      LOAD_province && this.setCenterId(LOAD_province.center_id);\n      this.setRoomId(default_access.room_id);\n      this.setLoadingForm(false);\n    } else {\n      this.setLoadingForm(false);\n    }\n  };\n\n  componentDidMount = () => {\n    if (this.props.roleList.length) {\n      if (this.props.userInfo.default_access && this.state.loadingForm) {\n        // SET DEFAULT ROLE ID =======================\n        if (!this.state.roleId.length) {\n          let result = this.props.roleList.find(\n            (role) =>\n              role.system_user_role_id ===\n              this.props.userInfo.default_access!.system_user_role_id\n          );\n          if (result) {\n            this.setRoleId(\n              this.props.userInfo.default_access.system_user_role_id\n            );\n            this.setSelectedRole(result);\n            this.setDefaultState(this.props.userInfo.default_access, result);\n          }\n        }\n\n        console.log(\"====================================\");\n        console.log({ vvvvv: this.props.userInfo.default_access });\n        console.log(\"====================================\");\n      }\n\n      if (this.state.selectedRole && this.props.userInfo.default_access) {\n        this.setDefaultState(\n          this.props.userInfo.default_access,\n          this.state.selectedRole\n        );\n      }\n\n      this.setLoading(false);\n    }\n  };\n\n  handleSelectRole = (\n    role_id: string,\n    TYPE: \"SELECT\" | \"DEFAULT\" = \"SELECT\"\n  ) => {\n    if (this.props.roleList) {\n      let result = this.props.roleList.find(\n        (role) => role.system_user_role_id === role_id\n      );\n      if (result) {\n        this.setRoleId(role_id);\n        this.setSelectedRole(result);\n        this.state.formError &&\n          this.state.formError.element === \"role_id\" &&\n          this.setFormError(null);\n\n        if (TYPE === \"SELECT\") {\n          this.setProvinceId(\"\");\n          this.setDistrictId(\"\");\n          this.setCenterId(\"\");\n          this.setRoomId(\"\");\n          this.setInstituteId(\"\");\n        }\n      }\n    }\n  };\n\n  tableData = (): JSX.Element[] => {\n    if (\n      this.state.roleId.length > 0 &&\n      this.state.selectedRole === null &&\n      this.props.roleList\n    ) {\n      this.handleSelectRole(this.state.roleId, \"DEFAULT\");\n    }\n    if (this.state.selectedRole) {\n      return this.state.selectedRole.access.map((access, i) => (\n        <tr\n          key={i + access.id + Math.random()}\n          className={`text-left border-b border-gray-200 hover:bg-gray-100`}\n        >\n          <td className=\"px-2 py-1\">\n            <label className=\"inline-flex items-center\">\n              <span className=\"text-gray-900 capitalize text-xl font-normal cursor-pointer\">\n                {access.task}\n              </span>\n            </label>\n          </td>\n          <td>\n            <div\n              className={`inline-flex items-center text-xl ${\n                access.permitted.create ? \"text-green-700\" : \"text-red-700\"\n              }`}\n            >\n              {access.permitted.create ? (\n                <TiInputChecked />\n              ) : (\n                <MdHighlightOff />\n              )}\n              {access.permitted.create ? \" Yes\" : \"No\"}\n            </div>\n          </td>\n          <td>\n            <div\n              className={`inline-flex items-center text-xl ${\n                access.permitted.view ? \"text-green-700\" : \"text-red-700\"\n              }`}\n            >\n              {access.permitted.view ? <TiInputChecked /> : <MdHighlightOff />}\n              {access.permitted.view ? \" Yes\" : \"No\"}\n            </div>\n          </td>\n          <td>\n            <div\n              className={`inline-flex items-center text-xl ${\n                access.permitted.update ? \"text-green-700\" : \"text-red-700\"\n              }`}\n            >\n              {access.permitted.update ? (\n                <TiInputChecked />\n              ) : (\n                <MdHighlightOff />\n              )}\n              {access.permitted.update ? \" Yes\" : \"No\"}\n            </div>\n          </td>\n          <td>\n            <div\n              className={`inline-flex items-center text-xl ${\n                access.permitted.delete ? \"text-green-700\" : \"text-red-700\"\n              }`}\n            >\n              {access.permitted.delete ? (\n                <TiInputChecked />\n              ) : (\n                <MdHighlightOff />\n              )}\n              {access.permitted.delete ? \" Yes\" : \"No\"}\n            </div>\n          </td>\n        </tr>\n      ));\n    }\n    const optionB = [\n      <tr key=\"55re\">\n        <td colSpan={5} className=\"text-center px-2 py-2\">\n          No Default Access Available on this Role.\n        </td>\n      </tr>,\n    ];\n    return optionB;\n  };\n\n  assignRoleToUser = async (e: React.FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n    if (!window.confirm(`Are sure you want to change user role?`)) {\n      return false;\n    }\n\n    if (!this.state.selectedRole) {\n      return this.setFormError({\n        element: \"role_id\",\n        msg: \"User role is required!\",\n      });\n    }\n\n    if (\n      this.state.selectedRole.room_required === true &&\n      isEmptyOrSpaces(this.state.provinceId)\n    ) {\n      return this.setFormError({\n        element: \"province_id\",\n        msg: \"Province is required!\",\n      });\n    }\n\n    if (\n      this.state.selectedRole.education_institution_required === true &&\n      isEmptyOrSpaces(this.state.instituteId)\n    ) {\n      return this.setFormError({\n        element: \"institute_id\",\n        msg: \"Institute is required on this role!\",\n      });\n    }\n\n    if (\n      (this.state.selectedRole.room_required === true ||\n        this.state.selectedRole.district_required === true) &&\n      isEmptyOrSpaces(this.state.districtId)\n    ) {\n      return this.setFormError({\n        element: \"district_id\",\n        msg: \"District is required!\",\n      });\n    }\n\n    if (\n      this.state.selectedRole.room_required === true &&\n      isEmptyOrSpaces(this.state.centerId)\n    ) {\n      return this.setFormError({\n        element: \"center_id\",\n        msg: \"Center is required!\",\n      });\n    }\n\n    if (\n      this.state.selectedRole.room_required === true &&\n      isEmptyOrSpaces(this.state.roomId)\n    ) {\n      return this.setFormError({\n        element: \"room_id\",\n        msg: \"Room is required!\",\n      });\n    }\n    this.setLoadingRequest(true);\n    let formData: AssignRoleToUserActionInterface = {\n      user_id: this.props.userInfo.user_id,\n      data: {\n        system_user_role_id: this.state.roleId,\n        status: 1,\n        role: this.state.selectedRole.role,\n        access: this.state.selectedRole.access,\n        school_id: \"\",\n        district_id: \"\",\n        room_id: this.state.selectedRole.room_required ? this.state.roomId : \"\",\n        education_institution_id: this.state.selectedRole\n          .education_institution_required\n          ? this.state.instituteId\n          : \"\",\n      },\n    };\n\n    try {\n      const res = await axios.post(`${url}/addroletouser`, {\n        user_id: this.props.userInfo.user_id,\n        system_user_role_id: this.state.roleId,\n        status: 1,\n        role: this.state.selectedRole.role,\n        access: true,\n        school_id: \"\",\n        district_id:\n          this.state.selectedRole.district_required === true\n            ? this.state.districtId\n            : \"\",\n        room_id:\n          this.state.selectedRole.room_required === true\n            ? this.state.roomId\n            : \"\",\n        education_institution_id: this.state.selectedRole\n          .education_institution_required\n          ? this.state.instituteId\n          : \"\",\n      });\n      if (res) {\n        console.log(\"====================================\");\n        console.log({ assignRoleToUser: res });\n        console.log(\"====================================\");\n        this.props.assignRoleToUserAccess(formData, this.props.currentPage);\n        this.setLoadingRequest(false);\n        this.props.setChangeRole(false);\n        this.props.PushPopupAlert({\n          title: \"Assigning Role to User completed successfully\",\n          theme: PopupAlertTheme.success,\n        });\n      }\n    } catch (error) {\n      console.log({ role_error: error });\n      this.props.PushPopupAlert({\n        title: errorToText(error),\n        theme: PopupAlertTheme.danger,\n      });\n    }\n  };\n\n  distinctDistrict = (\n    location: RoomLocationInterface[],\n    province_id?: string\n  ): DistrictInterface[] => {\n    let ids: string[] = [],\n      result: DistrictInterface[] = [];\n\n    if (province_id) {\n      result = location.find((item) => item._id === province_id)\n        ? location.find((item) => item._id === province_id)!.districts\n          ? location.find((item) => item._id === province_id)!.districts\n          : []\n        : [];\n    } else {\n      for (const key in location) {\n        if (Object.prototype.hasOwnProperty.call(location, key)) {\n          for (const keyDistrict in location[key].districts) {\n            if (\n              Object.prototype.hasOwnProperty.call(\n                location[key].districts,\n                keyDistrict\n              )\n            ) {\n              if (!ids.includes(location[key].districts[keyDistrict]._id)) {\n                ids.push(location[key].districts[keyDistrict]._id);\n                result.push(location[key].districts[keyDistrict]);\n              }\n            }\n          }\n        }\n      }\n    }\n\n    return result;\n  };\n\n  distinctCenter = (\n    rooms: RoomLocationInterface[],\n    district_id: string\n  ): LocationRoomTableInterface[] => {\n    let ids: string[] = [],\n      result: LocationRoomTableInterface[] = [];\n\n    LocationsInArray(rooms).forEach((element) => {\n      if (\n        !ids.includes(element.center_id) &&\n        element.district_id === district_id\n      ) {\n        ids.push(element.center_id);\n        result.push(element);\n      }\n    });\n    return result;\n  };\n\n  distinctRoom = (\n    rooms: RoomLocationInterface[],\n    center_id: string\n  ): LocationRoomTableInterface[] => {\n    let ids: string[] = [],\n      result: LocationRoomTableInterface[] = [];\n\n    LocationsInArray(rooms).forEach((element) => {\n      if (!ids.includes(element.room_id) && element.center_id === center_id) {\n        ids.push(element.room_id);\n        result.push(element);\n      }\n    });\n    return result;\n  };\n\n  render() {\n    if (\n      this.state.loading === true ||\n      this.state.loadingForm ||\n      this.props.userInfo.default_access === null ||\n      this.state.roleId.length === 0 ||\n      this.state.selectedRole === null\n    ) {\n      return (\n        <div className=\"text-center py-7 font-bold text-3xl text-gray-400 animate-pulse\">\n          Loading...\n        </div>\n      );\n    }\n\n    return (\n      <div className=\"grid grid-cols-1 md:grid-cols-3 gap-8 py-2 md:py-4 px-2 md:px-0\">\n        {/* left panel */}\n        <div className=\"col-span-1 bg-white w-full overflow-x-auto border rounded\">\n          <div className=\"px-6 md:px-12 py-5 bg-white mx-auto rounded-2xl w-100\">\n            <h3 className=\"font-semibold text-2xl text-gray-800 mb-4\">\n              Change User Role\n            </h3>\n            {this.state.loadingForm ? (\n              <Loading />\n            ) : (\n              <form onSubmit={(e) => this.assignRoleToUser(e)}>\n                <div className=\"space-y-5\">\n                  <div className=\"space-y-2\">\n                    <label className=\"text-sm font-medium text-gray-700 tracking-wide\">\n                      User Role\n                    </label>\n\n                    {!this.state.chooseRole && (\n                      <div\n                        className={`w-full text-base bg-white text-grey-darker cursor-pointer border-2 px-4 py-3 rounded focus:outline-none focus:bg-gray-100 ${\n                          this.state.formError &&\n                          this.state.formError.element === \"role_id\"\n                            ? \"border-red-500\"\n                            : \"border-gray-400\"\n                        }`}\n                        onClick={() => {\n                          !this.state.loadingRequest &&\n                            this.setChooseRole(true);\n                          !this.state.loadingRequest && this.setFormError(null);\n                        }}\n                      >\n                        {this.state.selectedRole\n                          ? this.state.selectedRole.role\n                          : \"Select role\"}\n                      </div>\n                    )}\n\n                    {this.state.chooseRole && (\n                      <RoleList\n                        setChooseRole={this.setChooseRole}\n                        handleSelectRole={this.handleSelectRole}\n                        roleList={this.props.roleList}\n                        loadindRequest={this.state.loadingRequest}\n                      />\n                    )}\n\n                    {this.state.formError &&\n                      this.state.formError.element === \"role_id\" && (\n                        <span className=\"text-red-500\">\n                          {this.state.formError.msg}\n                        </span>\n                      )}\n                  </div>\n\n                  {this.state.selectedRole &&\n                    this.state.selectedRole.education_institution_required && (\n                      <div className=\"space-y-2\">\n                        <label className=\"mb-5 text-sm font-medium text-gray-700 tracking-wide\">\n                          Institute\n                        </label>\n                        <select\n                          className={`block w-full text-base bg-white text-grey-darker border-2 rounded px-4 py-3 md:w-full focus:outline-none focus:bg-gray-100 ${\n                            this.state.formError &&\n                            this.state.formError.element === \"institute_id\"\n                              ? \"border-red-500\"\n                              : \"border-gray-400\"\n                          }`}\n                          onChange={(e) => {\n                            this.setInstituteId(e.target.value);\n                            this.setProvinceId(\"\");\n                            this.setDistrictId(\"\");\n                            this.setCenterId(\"\");\n                            this.setRoomId(\"\");\n                            this.state.formError &&\n                              this.state.formError.element === \"institute_id\" &&\n                              this.setFormError(null);\n                          }}\n                          disabled={this.state.loadingRequest}\n                          value={this.state.instituteId}\n                        >\n                          <option value=\"\">Select institute</option>\n                          {this.props.schoolLevels.education_categories &&\n                          this.props.schoolLevels.education_categories.length >\n                            0 ? (\n                            this.props.schoolLevels.education_categories.map(\n                              (institute) => (\n                                <option\n                                  value={institute.education_institute_id}\n                                  key={\n                                    institute.education_institute_id +\n                                    Math.random()\n                                  }\n                                >\n                                  {institute.education_category_title}\n                                </option>\n                              )\n                            )\n                          ) : (\n                            <option value=\"\" disabled>\n                              No institute available\n                            </option>\n                          )}\n                        </select>\n                        {this.state.formError &&\n                          this.state.formError.element === \"institute_id\" && (\n                            <span className=\"text-red-500\">\n                              {this.state.formError.msg}\n                            </span>\n                          )}\n                      </div>\n                    )}\n\n                  {this.state.selectedRole &&\n                    this.state.selectedRole.room_required && (\n                      <div className=\"space-y-2\">\n                        <label className=\"mb-5 text-sm font-medium text-gray-700 tracking-wide\">\n                          Province\n                        </label>\n                        <select\n                          className={`block w-full text-base bg-white text-grey-darker border-2 rounded px-4 py-3 md:w-full focus:outline-none focus:bg-gray-100 ${\n                            this.state.formError &&\n                            this.state.formError.element === \"province_id\"\n                              ? \"border-red-500\"\n                              : \"border-gray-400\"\n                          }`}\n                          onChange={(e) => {\n                            this.setProvinceId(e.target.value);\n                            this.state.formError &&\n                              this.state.formError.element === \"province_id\" &&\n                              this.setFormError(null);\n                            this.setDistrictId(\"\");\n                            this.setCenterId(\"\");\n                            this.setRoomId(\"\");\n                          }}\n                          value={this.state.provinceId}\n                          disabled={this.state.loadingRequest}\n                        >\n                          <option value=\"\">Select province</option>\n                          {this.props.roomList &&\n                            this.props.roomList.map((province) => (\n                              <option\n                                key={province._id + Math.random()}\n                                value={province._id}\n                              >\n                                {province.province_name}\n                              </option>\n                            ))}\n                        </select>\n                        {this.state.formError &&\n                          this.state.formError.element === \"province_id\" && (\n                            <span className=\"text-red-500\">\n                              {this.state.formError.msg}\n                            </span>\n                          )}\n                      </div>\n                    )}\n                  {this.state.selectedRole &&\n                    (this.state.selectedRole.district_required ||\n                      this.state.selectedRole.room_required) && (\n                      <div className=\"space-y-2\">\n                        <label className=\"mb-5 text-sm font-medium text-gray-700 tracking-wide\">\n                          District\n                        </label>\n                        <select\n                          className={`block w-full text-base bg-white text-grey-darker border-2 rounded px-4 py-3 md:w-full focus:outline-none focus:bg-gray-100 ${\n                            this.state.formError &&\n                            this.state.formError.element === \"district_id\"\n                              ? \"border-red-500\"\n                              : \"border-gray-400\"\n                          }`}\n                          onChange={(e) => {\n                            this.setDistrictId(e.target.value);\n                            this.state.formError &&\n                              this.state.formError.element === \"district_id\" &&\n                              this.setFormError(null);\n                            this.setCenterId(\"\");\n                            this.setRoomId(\"\");\n                          }}\n                          value={this.state.districtId}\n                          disabled={this.state.loadingRequest}\n                        >\n                          <option value=\"\">Select district</option>\n                          {this.props.roomList &&\n                          this.distinctDistrict(\n                            this.props.roomList,\n                            !isEmptyOrSpaces(this.state.provinceId)\n                              ? this.state.provinceId\n                              : undefined\n                          ).length > 0 ? (\n                            this.distinctDistrict(\n                              this.props.roomList,\n                              !isEmptyOrSpaces(this.state.provinceId)\n                                ? this.state.provinceId\n                                : undefined\n                            ).map((district) => (\n                              <option\n                                key={district._id + Math.random()}\n                                value={district._id}\n                              >\n                                {district.district_name}\n                              </option>\n                            ))\n                          ) : (\n                            <option value=\"\" disabled>\n                              No district found\n                            </option>\n                          )}\n                        </select>\n                        {this.state.formError &&\n                          this.state.formError.element === \"district_id\" && (\n                            <span className=\"text-red-500\">\n                              {this.state.formError.msg}\n                            </span>\n                          )}\n                      </div>\n                    )}\n\n                  {this.state.selectedRole &&\n                    this.state.selectedRole.room_required && (\n                      <div className=\"space-y-2\">\n                        <label className=\"mb-5 text-sm font-medium text-gray-700 tracking-wide\">\n                          Center\n                        </label>\n                        <select\n                          className={`block w-full text-base bg-white text-grey-darker border-2 rounded px-4 py-3 md:w-full focus:outline-none focus:bg-gray-100 ${\n                            this.state.formError &&\n                            this.state.formError.element === \"center_id\"\n                              ? \"border-red-500\"\n                              : \"border-gray-400\"\n                          }`}\n                          onChange={(e) => {\n                            this.setCenterId(e.target.value);\n                            this.state.formError &&\n                              this.state.formError.element === \"center_id\" &&\n                              this.setFormError(null);\n                            this.setRoomId(\"\");\n                          }}\n                          disabled={this.state.loadingRequest}\n                          value={this.state.centerId}\n                        >\n                          <option value=\"\">Select center</option>\n                          {this.state.districtId &&\n                          this.state.districtId.length > 0 &&\n                          this.props.roomList &&\n                          this.distinctCenter(\n                            this.props.roomList,\n                            this.state.districtId\n                          ).length > 0 ? (\n                            this.distinctCenter(\n                              this.props.roomList,\n                              this.state.districtId\n                            ).map((center, index) => (\n                              <option\n                                value={center.center_id}\n                                key={center.center_id + index + Math.random()}\n                              >\n                                {center.center_name}\n                              </option>\n                            ))\n                          ) : (\n                            <option value=\"\" disabled>\n                              No center found\n                            </option>\n                          )}\n                        </select>\n                        {this.state.formError &&\n                          this.state.formError.element === \"center_id\" && (\n                            <span className=\"text-red-500\">\n                              {this.state.formError.msg}\n                            </span>\n                          )}\n                      </div>\n                    )}\n\n                  {this.state.selectedRole &&\n                    this.state.selectedRole.room_required && (\n                      <div className=\"space-y-2\">\n                        <label className=\"mb-5 text-sm font-medium text-gray-700 tracking-wide\">\n                          Room\n                        </label>\n                        <select\n                          className={`block w-full text-base bg-white text-grey-darker border-2 rounded px-4 py-3 md:w-full focus:outline-none focus:bg-gray-100 ${\n                            this.state.formError &&\n                            this.state.formError.element === \"room_id\"\n                              ? \"border-red-500\"\n                              : \"border-gray-400\"\n                          }`}\n                          onChange={(e) => {\n                            this.setRoomId(e.target.value);\n                            this.state.formError &&\n                              this.state.formError.element === \"room_id\" &&\n                              this.setFormError(null);\n                          }}\n                          disabled={this.state.loadingRequest}\n                          value={this.state.roomId}\n                        >\n                          <option value=\"\">Select room</option>\n                          {!isEmptyOrSpaces(this.state.centerId) &&\n                          this.props.roomList &&\n                          this.distinctRoom(\n                            this.props.roomList,\n                            this.state.centerId\n                          ).length > 0 ? (\n                            this.distinctRoom(\n                              this.props.roomList,\n                              this.state.centerId\n                            ).map((room, index) => (\n                              <option\n                                value={room.room_id}\n                                key={room.room_id + index + Math.random()}\n                                className={`${\n                                  room.room_name === \"0\" ? \"hidden\" : \"block\"\n                                }`}\n                              >\n                                {room.room_name}\n                              </option>\n                            ))\n                          ) : (\n                            <option value=\"\" disabled>\n                              No room found\n                            </option>\n                          )}\n                        </select>\n                        {this.state.formError &&\n                          this.state.formError.element === \"room_id\" && (\n                            <span className=\"text-red-500\">\n                              {this.state.formError.msg}\n                            </span>\n                          )}\n                      </div>\n                    )}\n\n                  <div className=\"flex justify-between 2xl:justify-start gap-2\">\n                    <button\n                      className=\"btn bg-gray-500 text-gray-50 focus:outline-none\"\n                      onClick={() => {\n                        this.props.setChangeRole(false);\n                        this.setFormError(null);\n                        this.setProvinceId(\"\");\n                        this.setDistrictId(\"\");\n                        this.setCenterId(\"\");\n                        this.setRoomId(\"\");\n                      }}\n                      disabled={this.state.loadingRequest}\n                    >\n                      Back\n                    </button>\n                    <button\n                      className=\"btn btn-blue focus:outline-none\"\n                      // onClick={() => assignRoleToUser()}\n                      disabled={this.state.loadingRequest}\n                    >\n                      {this.state.loadingRequest ? \"Loading...\" : \"Save Change\"}\n                    </button>\n                  </div>\n                </div>\n              </form>\n            )}\n          </div>\n        </div>\n        {/* end left panel */}\n\n        {/* ------------------------------------------------------------ */}\n\n        {/* right panel */}\n        <div className=\"cols-span-1 md:col-span-2 bg-white w-full border rounded text-center p-2 hidden md:block\">\n          <div className=\"my-4\">\n            <span className=\"text-gray-600 font-semibold text-2xl\">\n              {this.state.selectedRole?.role}'s Default Access\n            </span>\n          </div>\n          {!this.state.loading && (\n            <div className=\"overflow-x-auto w-full\">\n              <Table\n                columns={[\n                  {\n                    columnTitle: \"Access Name\",\n                    alignText: \"left\",\n                    padding: \"p-3\",\n                  },\n                  { columnTitle: \"Create\", alignText: \"left\" },\n                  { columnTitle: \"View\", alignText: \"left\" },\n                  { columnTitle: \"Update\", alignText: \"left\" },\n                  { columnTitle: \"Delete\", alignText: \"left\" },\n                ]}\n                rows={this.tableData}\n                pagination={false}\n                search={false}\n                searchBG=\"bg-gray-50\"\n                thColor=\"gray\"\n                tableId=\"defaultAccess\"\n              />\n            </div>\n          )}\n        </div>\n        {/* end right panel */}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = ({\n  schoolLevels,\n}: StoreState): {\n  schoolLevels: schoolLevelsStoreInterface;\n} => {\n  return { schoolLevels };\n};\n\nexport default React.memo(\n  connect(mapStateToProps, {\n    assignRoleToUserAccess,\n    PushPopupAlert,\n  })(UserRole)\n);\n","export default __webpack_public_path__ + \"static/media/blank_profile.c3f94521.png\";","import axios from \"axios\";\nimport React, { Component } from \"react\";\nimport { BiRightArrowAlt } from \"react-icons/bi\";\nimport {\n  MdDelete,\n  MdEdit,\n  MdHighlightOff,\n  MdRemoveRedEye,\n  MdSettings,\n} from \"react-icons/md\";\nimport { SiAddthis } from \"react-icons/si\";\nimport { TiInputChecked } from \"react-icons/ti\";\nimport { connect } from \"react-redux\";\nimport { Redirect } from \"react-router-dom\";\nimport { PushPopupAlert } from \"../../actions\";\nimport { customizeUserAccess } from \"../../actions/users\";\nimport { PopupAlertData } from \"../../components/Alert/Popup\";\nimport Table from \"../../components/Table/Table\";\nimport { PopupAlertTheme } from \"../../interfaces/popupAlert\";\nimport {\n  UserInterface,\n  AccessTaskInterface,\n  CustomeAccessInterface,\n} from \"../../shared/interfaces\";\nimport { API } from \"../../utils/api\";\nimport { errorToText } from \"../../utils/errors\";\n\ninterface AppProps {\n  userInfo: UserInterface | undefined;\n  manageUserId: string;\n  setUserAccess: (value: AccessTaskInterface[] | null) => void;\n  userAccess: AccessTaskInterface[] | null;\n  setCurrentAccess: (value: AccessTaskInterface | null) => void;\n  currentAccess: AccessTaskInterface | null;\n  currentPage: number;\n\n  // REDUX ==============\n  PushPopupAlert: (alert: PopupAlertData) => void;\n  customizeUserAccess: Function;\n}\n\ninterface AppStates {\n  loading: boolean;\n  loadindRequest: boolean;\n  // currentAccess:AccessTaskInterface | null;\n  // userAccess:AccessTaskInterface[] | null;\n  createPermission: boolean;\n  viewPermission: boolean;\n  updatePermission: boolean;\n  deletePermission: boolean;\n}\n\nclass _UserAccess extends Component<AppProps, AppStates> {\n  constructor(props: AppProps) {\n    super(props);\n\n    this.state = {\n      loading: true,\n      loadindRequest: false,\n      // currentAccess:null,\n      // userAccess:null,\n      createPermission: false,\n      viewPermission: false,\n      updatePermission: false,\n      deletePermission: false,\n    };\n  }\n\n  setViewPermission = (value: boolean) => {\n    this.setState({ viewPermission: value });\n  };\n\n  setLoadindRequest = (value: boolean) => {\n    this.setState({ loadindRequest: value });\n  };\n\n  setCreatePermission = (value: boolean) => {\n    this.setState({ createPermission: value });\n  };\n\n  setUpdatePermission = (value: boolean) => {\n    this.setState({ updatePermission: value });\n  };\n\n  setDeletePermission = (value: boolean) => {\n    this.setState({ deletePermission: value });\n  };\n\n  setLoadind = (value: boolean) => {\n    this.setState({ loading: value });\n  };\n\n  overrideUserAccess = (\n    default_access: AccessTaskInterface[],\n    custome_access: AccessTaskInterface[]\n  ) => {\n    if (default_access && custome_access && custome_access.length > 0) {\n      let overideAccess: AccessTaskInterface[] = [];\n      for (const key in default_access) {\n        if (Object.prototype.hasOwnProperty.call(default_access, key)) {\n          const findCustom = custome_access.find(\n            (custom) => custom.id === default_access[key].id\n          );\n          if (findCustom) {\n            overideAccess.push(findCustom);\n          } else {\n            overideAccess.push(default_access[key]);\n          }\n        }\n      }\n      this.props.setUserAccess(overideAccess);\n    }\n  };\n\n  componentDidMount = () => {\n    if (this.props.userInfo && this.props.userInfo.custome_access) {\n      this.props.userInfo.default_access &&\n        this.overrideUserAccess(\n          this.props.userInfo.default_access.access,\n          this.props.userInfo.custome_access.access\n        );\n      this.setLoadind(false);\n    } else {\n      this.props.userInfo &&\n        this.props.userInfo.default_access &&\n        this.props.setUserAccess(this.props.userInfo.default_access.access);\n      this.setLoadind(false);\n    }\n  };\n\n  tableData = (): JSX.Element[] => {\n    if (!this.props.userAccess)\n      return [\n        <tr key={Math.random()}>\n          <td>No data</td>\n        </tr>,\n      ];\n    return this.props.userAccess.map((access: AccessTaskInterface, i) => (\n      <tr\n        key={i + access.id + Math.random()}\n        className={`text-left border-b border-gray-200 cursor-pointer hover:bg-gray-100 ${\n          this.props.currentAccess &&\n          this.props.currentAccess.id === access.id &&\n          \"bg-gray-200 border my-3 hover:bg-gray-100\"\n        }`}\n        onClick={() =>\n          this.props.currentAccess && this.props.currentAccess.id === access.id\n            ? (this.props.setCurrentAccess(null),\n              this.setCreatePermission(false),\n              this.setViewPermission(false),\n              this.setUpdatePermission(false),\n              this.setDeletePermission(false))\n            : (this.props.setCurrentAccess(access),\n              this.setCreatePermission(access.permitted.create),\n              this.setViewPermission(access.permitted.view),\n              this.setUpdatePermission(access.permitted.update),\n              this.setDeletePermission(access.permitted.delete))\n        }\n      >\n        <td className=\"px-2 py-1\">\n          <label className=\"inline-flex items-center\">\n            {/* <input\n              type=\"radio\"\n              name=\"taskAccess\"\n              value={access.id}\n              className=\"form-radio h-4 w-4 text-gray-600\"\n              onChange={() => {\n                currentAccess\n                  ? this.setState({ currentAccess: null })\n                  : this.setState({ currentAccess: access });\n              }}\n              checked={currentAccess ? true : false}\n            /> */}\n            <span className=\"text-gray-900 capitalize text-xl font-normal cursor-pointer\">\n              {access.task}\n            </span>\n          </label>\n        </td>\n        <td>\n          <div\n            className={`inline-flex items-center text-xl ${\n              access.permitted.create ? \"text-green-700\" : \"text-red-700\"\n            }`}\n          >\n            {access.permitted.create ? <TiInputChecked /> : <MdHighlightOff />}\n            {access.permitted.create ? \" Yes\" : \"No\"}\n          </div>\n        </td>\n        <td>\n          <div\n            className={`inline-flex items-center text-xl ${\n              access.permitted.view ? \"text-green-700\" : \"text-red-700\"\n            }`}\n          >\n            {access.permitted.view ? <TiInputChecked /> : <MdHighlightOff />}\n            {access.permitted.view ? \" Yes\" : \"No\"}\n          </div>\n        </td>\n        <td>\n          <div\n            className={`inline-flex items-center text-xl ${\n              access.permitted.update ? \"text-green-700\" : \"text-red-700\"\n            }`}\n          >\n            {access.permitted.update ? <TiInputChecked /> : <MdHighlightOff />}\n            {access.permitted.update ? \" Yes\" : \"No\"}\n          </div>\n        </td>\n        <td>\n          <div\n            className={`inline-flex items-center text-xl ${\n              access.permitted.delete ? \"text-green-700\" : \"text-red-700\"\n            }`}\n          >\n            {access.permitted.delete ? <TiInputChecked /> : <MdHighlightOff />}\n            {access.permitted.delete ? \" Yes\" : \"No\"}\n          </div>\n        </td>\n      </tr>\n    ));\n  };\n\n  handleCustomization = async (e: React.FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n    if (this.props.userInfo) {\n      this.setLoadindRequest(true);\n      let task: [] | CustomeAccessInterface | null = null;\n      task = this.props.userInfo.custome_access;\n      let index = -1;\n\n      try {\n        if (task && this.props.currentAccess) {\n          index = task.access.findIndex(\n            (access) => access.id === this.props.currentAccess!.id\n          );\n          if (index >= 0) {\n            task.access[index].permitted.create = this.state.createPermission;\n            task.access[index].permitted.view = this.state.viewPermission;\n            task.access[index].permitted.update = this.state.updatePermission;\n            task.access[index].permitted.delete = this.state.deletePermission;\n          } else {\n            task.access.push({\n              id: this.props.currentAccess.id,\n              task: this.props.currentAccess.task,\n              key: this.props.currentAccess.key,\n              permitted: {\n                create: this.state.createPermission,\n                view: this.state.viewPermission,\n                update: this.state.updatePermission,\n                delete: this.state.deletePermission,\n              },\n            });\n          }\n        } else if (this.props.currentAccess) {\n          task = {\n            access: [\n              {\n                id: this.props.currentAccess.id,\n                task: this.props.currentAccess.task,\n                key: this.props.currentAccess.key,\n                permitted: {\n                  create: this.state.createPermission,\n                  view: this.state.viewPermission,\n                  update: this.state.updatePermission,\n                  delete: this.state.deletePermission,\n                },\n              },\n            ],\n            user_id: this.props.userInfo.user_id,\n            custome_user_access_id: \"\",\n          };\n        }\n\n        if (task) {\n          let res;\n          if (this.props.userInfo.custome_access !== null) {\n            res = await axios.patch<{ data: CustomeAccessInterface }>(\n              `${API.USER}/access/custom`,\n              {\n                access: task.access,\n                user_id: this.props.userInfo.user_id,\n              }\n            );\n          } else {\n            res = await axios.post<{ data: CustomeAccessInterface }>(\n              `${API.USER}/access/custom`,\n              {\n                access: task.access,\n                user_id: this.props.userInfo.user_id,\n              }\n            );\n          }\n\n          if (res) {\n            task.custome_user_access_id = res.data.data.custome_user_access_id;\n\n            this.props.customizeUserAccess(task, this.props.currentPage);\n            task &&\n              this.props.userInfo.default_access &&\n              this.overrideUserAccess(\n                this.props.userInfo.default_access.access,\n                task.access\n              );\n            this.props.PushPopupAlert({\n              title: `Resetting User Access complete successfully`,\n              theme: PopupAlertTheme.info,\n            });\n\n            task = null;\n            this.props.setCurrentAccess(null);\n            this.setCreatePermission(false);\n            this.setViewPermission(false);\n            this.setUpdatePermission(false);\n            this.setDeletePermission(false);\n          }\n        }\n      } catch (error) {\n        console.error({ customize_access: error });\n        this.props.PushPopupAlert({\n          title: errorToText(error),\n          theme: PopupAlertTheme.danger,\n        });\n      }\n      this.setLoadindRequest(false);\n    }\n  };\n\n  render() {\n    if (this.props.userInfo === undefined) {\n      return <Redirect to=\"/users\" />;\n    }\n\n    if (this.state.loading || this.props.userInfo === null) {\n      return (\n        <div className=\"text-center py-7 font-bold text-4xl text-gray-400 animate-pulse\">\n          Loading User Access...\n        </div>\n      );\n    }\n\n    return (\n      <div>\n        <div className=\"grid grid-cols-1 md:grid-cols-5 gap-4 mx-1 my-2\">\n          <div\n            className={`col-span-1 md:col-span-3 bg-white w-full overflow-x-auto border rounded text-center p-2 ${\n              this.props.currentAccess ? \"hidden md:block\" : \"\"\n            }`}\n          >\n            <span className=\"text-gray-600 mt-2 font-semibold text-2xl\">\n              Settings\n            </span>\n            {!this.state.loading && (\n              <div className=\"overflow-x-auto w-full\">\n                <Table\n                  columns={[\n                    {\n                      columnTitle: \"Access Name\",\n                      alignText: \"left\",\n                      padding: \"p-3\",\n                    },\n                    { columnTitle: \"Create\", alignText: \"left\" },\n                    { columnTitle: \"View\", alignText: \"left\" },\n                    { columnTitle: \"Update\", alignText: \"left\" },\n                    { columnTitle: \"Delete\", alignText: \"left\" },\n                  ]}\n                  rows={this.tableData}\n                  pagination={false}\n                  search={true}\n                  searchBG=\"bg-gray-50\"\n                  thColor=\"gray\"\n                />\n              </div>\n            )}\n          </div>\n          <div className={`col-span-1 md:col-span-2`}>\n            {!this.props.currentAccess ? (\n              <div className=\"w-full hidden md:flex flex-col items-center text-gray-600 gap-1 py-3\">\n                <MdSettings className=\"w-20 h-20\" />\n                <span className=\"text-8 md:text-12\">\n                  Choose Access to Customize\n                </span>\n              </div>\n            ) : (\n              <div className={``}>\n                <h1 className=\"text-2xl md:text-3xl font-semibold text-center my-2 text-gray-900\">\n                  Customize User Access\n                </h1>\n                <div className=\"flex justify-center mb-3\">\n                  <h2 className=\"text-2xl font-semibold text-center text-gray-600 flex flex-row items-center\">\n                    <BiRightArrowAlt className=\"w-7 h-7\" />\n                    {this.props.currentAccess.task}\n                  </h2>\n                </div>\n\n                <div className=\"flex flex-col px-2 md:px-1\">\n                  <form\n                    className=\"flex flex-col items-center\"\n                    onSubmit={(e) => this.handleCustomization(e)}\n                  >\n                    <div className=\"inline-flex gap-2 items-center\">\n                      <SiAddthis className=\"w-7 h-7 text-gray-600\" />\n                      <div className=\"flex flex-col\">\n                        <h3 className=\"font-semibold text-xl\">Create</h3>\n                        <span className=\"text-gray-600 text-sm md:pr-1\">\n                          This permission gives the user the ability to create\n                        </span>\n                      </div>\n                      <input\n                        type=\"checkbox\"\n                        className=\"form-checkbox h-7 w-7 text-teal-600\"\n                        onChange={() =>\n                          this.setCreatePermission(!this.state.createPermission)\n                        }\n                        checked={this.state.createPermission}\n                        disabled={this.state.loadindRequest}\n                      />\n                    </div>\n                    <div className=\"inline-flex gap-2 items-center\">\n                      <MdRemoveRedEye className=\"w-7 h-7 text-gray-600\" />\n                      <div className=\"flex flex-col\">\n                        <h3 className=\"font-semibold text-xl\">View</h3>\n                        <span className=\"text-gray-600 text-sm md:pr-4\">\n                          This permission gives the user the ability to view\n                        </span>\n                      </div>\n                      <input\n                        type=\"checkbox\"\n                        className=\"form-checkbox h-7 w-7 text-teal-600\"\n                        onChange={() =>\n                          this.setViewPermission(!this.state.viewPermission)\n                        }\n                        checked={this.state.viewPermission}\n                        disabled={this.state.loadindRequest}\n                      />\n                    </div>\n                    <div className=\"inline-flex gap-2 items-center\">\n                      <MdEdit className=\"w-7 h-7 text-gray-600\" />\n                      <div className=\"flex flex-col\">\n                        <h3 className=\"font-semibold text-xl\">Update</h3>\n                        <span className=\"text-gray-600 text-sm\">\n                          This permission gives the user the ability to update\n                        </span>\n                      </div>\n                      <input\n                        type=\"checkbox\"\n                        className=\"form-checkbox h-7 w-7 text-teal-600\"\n                        onChange={() =>\n                          this.setUpdatePermission(!this.state.updatePermission)\n                        }\n                        checked={this.state.updatePermission}\n                        disabled={this.state.loadindRequest}\n                      />\n                    </div>\n                    <div className=\"inline-flex gap-2 items-center\">\n                      <MdDelete className=\"w-7 h-7 text-gray-600\" />\n                      <div className=\"flex flex-col\">\n                        <h3 className=\"font-semibold text-xl\">Delete</h3>\n                        <span className=\"text-gray-600 text-sm md:pr-1\">\n                          This permission gives the user the ability to delete\n                        </span>\n                      </div>\n                      <input\n                        type=\"checkbox\"\n                        className=\"form-checkbox h-7 w-7 text-teal-600\"\n                        onChange={() =>\n                          this.setDeletePermission(!this.state.deletePermission)\n                        }\n                        checked={this.state.deletePermission}\n                        disabled={this.state.loadindRequest}\n                      />\n                    </div>\n\n                    <div className=\"flex items-center justify-center w-full py-3 gap-2\">\n                      {/* <button className=\"btn btn-secondary bg-red-600\">Back</button> */}\n                      <button\n                        className=\"btn bg-gray-500 hover:bg-gray-700 focus:outline-none text-white\"\n                        disabled={this.state.loadindRequest}\n                        onClick={() => {\n                          this.props.setCurrentAccess(null);\n                          this.setCreatePermission(false);\n                          this.setViewPermission(false);\n                          this.setUpdatePermission(false);\n                          this.setDeletePermission(false);\n                        }}\n                      >\n                        Cancel\n                      </button>\n                      <button\n                        className=\"btn btn-blue\"\n                        disabled={this.state.loadindRequest}\n                      >\n                        {!this.state.loadindRequest\n                          ? \"Save Change\"\n                          : \"Processing..\"}\n                      </button>\n                    </div>\n                  </form>\n                </div>\n              </div>\n            )}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport const UserAccess = React.memo(\n  connect(null, {\n    customizeUserAccess,\n    PushPopupAlert,\n  })(_UserAccess)\n);\n"],"sourceRoot":""}
{"version":3,"sources":["actions/location.ts","containers/Locations/RoomForm.tsx","containers/Locations/CenterForm.tsx","containers/Locations/ViewCenters.tsx","containers/Locations/index.tsx"],"names":["getAllRoom","callback","dispatch","a","axios","get","API","APPLICATION","res","type","ActionTypes","GET_ALL_ROOM","payload","data","console","log","error","errorToText","FC_CreateProvince","CREATE_PROVINCE","FC_UpdateProvince","UPDATE_PROVINCE","FC_DeleteProvince","DELETE_PROVINCE","FC_CreateDistrict","CREATE_DISTRICT","FC_UpdateDistrict","UPDATE_DISTRICT","FC_DeleteDistrict","DELETE_DISTRICT","FC_CreateSector","CREATE_SECTOR","FC_UpdateSector","UPDATE_SECTOR","FC_DeleteSector","DELETE_SECTOR","FC_CreateCenter","CREATE_CENTER","FC_UpdateCenter","UPDATE_CENTER","FC_DeleteCenter","DELETE_CENTER","FC_CreateRoom","CREATE_ROOM","FC_UpdateRoom","UPDATE_ROOM","FC_DeleteRoom","delete_room","DELETE_ROOM","RoomForm","props","className","element","onChange","e","setError","selectProvince","target","value","thisProvince","_id","disabled","loadingRequest","locations","map","item","index","province_name","msg","selectDistrict","thisDistrict","filter","loc","length","districts","district","district_name","selectCenter","thisCenter","centers","center","center_name","placeholder","roomNumber","setRoomNumber","parseInt","roomCapacity","setRoomCapacity","onClick","setActionTypes","setThisRoom","handleSubmitRoom","CenterForm","setCenterName","centerName","handleSubmit","connect","PushPopupAlert","useState","loadingDeletion","setLoadingDeletion","searchCenter","setSearchCenter","setLoadingRequest","actionTypes","post","district_id","rooms","province_id","thisProvinceId","title","theme","PopupAlertTheme","success","room","patch","examination_center_id","isUsed","doc_category_error","danger","handleDelete","centerId","window","confirm","isEmptyOrSpaces","warning","delete","center_id","newArr","setThisDistrict","province_error","room_type","room_number","capacity","occupied","thisRoom","examination_center_room_id","room_id","handleDeleteRoom","roomId","setThisCenter","province","items","setThisProvince","d","getDistinctCenter","undefined","result","find","province_code","toString","key","Object","prototype","hasOwnProperty","call","elementDistrict","push","district_code","provKey","elementProv","distKey","searchData","id","Modal","backDrop","Themes","default","close","displayClose","backDropClose","widthSizeClass","ModalSize","medium","padding","body","footer","Centers","roomLocation","loading","setLoading","useEffect","status","NoResult","NoResultThemes","Dark"],"mappings":"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","file":"static/js/55.a5fc3816.chunk.js","sourcesContent":["import axios from \"axios\";\nimport { Dispatch } from \"redux\";\nimport { ActionTypes } from \"./types\";\nimport { API } from \"../utils/api\";\nimport {\n  CentersInterface,\n  DistrictInterface,\n  RoomLocationInterface,\n  RoomsInterface,\n  SectorInterface,\n} from \"../shared/interfaces\";\nimport { errorToText } from \"../utils/errors\";\n\n/**\n * * ****************************** INTERFACES *****************************\n */\n\nexport interface getAllRoomActions {\n  type: ActionTypes.GET_ALL_ROOM;\n  payload: RoomLocationInterface[];\n}\n\nexport interface createProvinceActions {\n  type: ActionTypes.CREATE_PROVINCE;\n  payload: RoomLocationInterface;\n}\n\nexport interface updateProvinceActions {\n  type: ActionTypes.UPDATE_PROVINCE;\n  payload: {\n    province_id: string;\n    province_name: string;\n    provice_code: number;\n  };\n}\n\nexport interface deleteProvinceActions {\n  type: ActionTypes.DELETE_PROVINCE;\n  payload: string;\n}\n\n// ============ DISTRICT =================\nexport interface createDistrictActions {\n  type: ActionTypes.CREATE_DISTRICT;\n  payload: { province_id: string; data: DistrictInterface };\n}\n\nexport interface updateDistrictActions {\n  type: ActionTypes.UPDATE_DISTRICT;\n  payload: {\n    province_id: string;\n    district_id: string;\n    district_name: string;\n    district_code: number;\n  };\n}\n\nexport interface deleteDistrictActions {\n  type: ActionTypes.DELETE_DISTRICT;\n  payload: { province_id: string; district_id: string };\n}\n\n// ============ SECTOR =================\nexport interface createSectorActions {\n  type: ActionTypes.CREATE_SECTOR;\n  payload: {\n    province_id: string;\n    district_id: string;\n    data: SectorInterface;\n  };\n}\n\nexport interface updateSectorActions {\n  type: ActionTypes.UPDATE_SECTOR;\n  payload: {\n    province_id: string;\n    district_id: string;\n    sector_id: string;\n    sector_name: string;\n    sector_code: number;\n  };\n}\n\nexport interface deleteSectorActions {\n  type: ActionTypes.DELETE_SECTOR;\n  payload: { province_id: string; district_id: string; sector_id: string };\n}\n\n// ============ CENTERS =================\nexport interface createCenterActions {\n  type: ActionTypes.CREATE_CENTER;\n  payload: {\n    province_id: string;\n    district_id: string;\n    data: CentersInterface;\n  };\n}\n\nexport interface updateCenterActions {\n  type: ActionTypes.UPDATE_CENTER;\n  payload: {\n    province_id: string;\n    district_id: string;\n    examination_center_id: string;\n    center_name: string;\n  };\n}\n\nexport interface deleteCenterActions {\n  type: ActionTypes.DELETE_CENTER;\n  payload: { province_id: string; district_id: string; center_id: string };\n}\n\n// ============ ROOMS =================\nexport interface createRoomActions {\n  type: ActionTypes.CREATE_ROOM;\n  payload: {\n    province_id: string;\n    district_id: string;\n    center_id: string;\n    data: RoomsInterface;\n  };\n}\n\nexport interface updateRoomActions {\n  type: ActionTypes.UPDATE_ROOM;\n  payload: {\n    province_id: string;\n    district_id: string;\n    center_id: string;\n    room_id: string;\n    room_number: number;\n    capacity: number;\n  };\n}\n\nexport interface deleteRoomActions {\n  type: ActionTypes.DELETE_ROOM;\n  payload: {\n    province_id: string;\n    district_id: string;\n    center_id: string;\n    room_id: string;\n  };\n}\n\nexport type RoomActionType =\n  | getAllRoomActions\n  | createProvinceActions\n  | updateProvinceActions\n  | deleteProvinceActions\n  | createDistrictActions\n  | updateDistrictActions\n  | deleteDistrictActions\n  | createSectorActions\n  | updateSectorActions\n  | deleteSectorActions\n  | createCenterActions\n  | updateCenterActions\n  | deleteCenterActions\n  | createRoomActions\n  | updateRoomActions\n  | deleteRoomActions;\n\n/**\n * * ****************************** ACTIONS *****************************\n */\n\nexport const getAllRoom = (callback: Function) => {\n  return async (dispatch: Dispatch) => {\n    callback(true, \"\");\n    try {\n      const res = await axios.get<RoomLocationInterface[]>(\n        `${API.APPLICATION}/roomlocation`\n      );\n      dispatch<getAllRoomActions>({\n        type: ActionTypes.GET_ALL_ROOM,\n        payload: res.data,\n      });\n      console.log(\"====================================\");\n      console.log({ res: res.data });\n      console.log(\"====================================\");\n      callback(false, \"\", res.data);\n    } catch (error) {\n      console.error(\"Err: \", error);\n      callback(false, errorToText(error));\n    }\n  };\n};\n\nexport const FC_CreateProvince = (data: RoomLocationInterface) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<createProvinceActions>({\n      type: ActionTypes.CREATE_PROVINCE,\n      payload: data,\n    });\n  };\n};\n\nexport const FC_UpdateProvince = (data: {\n  province_id: string;\n  province_name: string;\n  provice_code: number;\n}) => {\n  console.log({ data });\n  return async (dispatch: Dispatch) => {\n    dispatch<updateProvinceActions>({\n      type: ActionTypes.UPDATE_PROVINCE,\n      payload: data,\n    });\n  };\n};\n\nexport const FC_DeleteProvince = (data: string) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<deleteProvinceActions>({\n      type: ActionTypes.DELETE_PROVINCE,\n      payload: data,\n    });\n  };\n};\n\n// DISTRICT =================\nexport const FC_CreateDistrict = (data: {\n  province_id: string;\n  data: DistrictInterface;\n}) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<createDistrictActions>({\n      type: ActionTypes.CREATE_DISTRICT,\n      payload: data,\n    });\n  };\n};\n\nexport const FC_UpdateDistrict = (data: {\n  province_id: string;\n  district_id: string;\n  district_name: string;\n  district_code: number;\n}) => {\n  console.log({ data });\n  return async (dispatch: Dispatch) => {\n    dispatch<updateDistrictActions>({\n      type: ActionTypes.UPDATE_DISTRICT,\n      payload: data,\n    });\n  };\n};\n\nexport const FC_DeleteDistrict = (data: {\n  province_id: string;\n  district_id: string;\n}) => {\n  console.log({ data });\n  return async (dispatch: Dispatch) => {\n    dispatch<deleteDistrictActions>({\n      type: ActionTypes.DELETE_DISTRICT,\n      payload: data,\n    });\n  };\n};\n\n// SECTOR =================\nexport const FC_CreateSector = (data: {\n  province_id: string;\n  district_id: string;\n  data: SectorInterface;\n}) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<createSectorActions>({\n      type: ActionTypes.CREATE_SECTOR,\n      payload: data,\n    });\n  };\n};\n\nexport const FC_UpdateSector = (data: {\n  province_id: string;\n  district_id: string;\n  sector_id: string;\n  sector_name: string;\n  sector_code: number;\n}) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<updateSectorActions>({\n      type: ActionTypes.UPDATE_SECTOR,\n      payload: data,\n    });\n  };\n};\n\nexport const FC_DeleteSector = (data: {\n  province_id: string;\n  district_id: string;\n  sector_id: string;\n}) => {\n  console.log({ data });\n  return async (dispatch: Dispatch) => {\n    dispatch<deleteSectorActions>({\n      type: ActionTypes.DELETE_SECTOR,\n      payload: data,\n    });\n  };\n};\n\n// CENTERS =================\nexport const FC_CreateCenter = (data: {\n  province_id: string;\n  district_id: string;\n  data: CentersInterface;\n}) => {\n  console.log({ data });\n  return async (dispatch: Dispatch) => {\n    dispatch<createCenterActions>({\n      type: ActionTypes.CREATE_CENTER,\n      payload: data,\n    });\n  };\n};\n\nexport const FC_UpdateCenter = (data: {\n  province_id: string;\n  district_id: string;\n  examination_center_id: string;\n  center_name: string;\n}) => {\n  console.log({ data });\n  return async (dispatch: Dispatch) => {\n    dispatch<updateCenterActions>({\n      type: ActionTypes.UPDATE_CENTER,\n      payload: data,\n    });\n  };\n};\n\nexport const FC_DeleteCenter = (data: {\n  province_id: string;\n  district_id: string;\n  center_id: string;\n}) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<deleteCenterActions>({\n      type: ActionTypes.DELETE_CENTER,\n      payload: data,\n    });\n  };\n};\n\n// ROOM =================\nexport const FC_CreateRoom = (data: {\n  province_id: string;\n  district_id: string;\n  center_id: string;\n  data: RoomsInterface;\n}) => {\n  console.log({ data });\n  return async (dispatch: Dispatch) => {\n    dispatch<createRoomActions>({\n      type: ActionTypes.CREATE_ROOM,\n      payload: data,\n    });\n  };\n};\n\nexport const FC_UpdateRoom = (data: {\n  province_id: string;\n  district_id: string;\n  center_id: string;\n  room_id: string;\n  room_number: number;\n  capacity: number;\n}) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<updateRoomActions>({\n      type: ActionTypes.UPDATE_ROOM,\n      payload: data,\n    });\n  };\n};\n\nexport const FC_DeleteRoom = (data: {\n  province_id: string;\n  district_id: string;\n  center_id: string;\n  room_id: string;\n}) => {\n  console.log({ delete_room: data });\n  return async (dispatch: Dispatch) => {\n    dispatch<deleteRoomActions>({\n      type: ActionTypes.DELETE_ROOM,\n      payload: data,\n    });\n  };\n};\n","import React, { Fragment } from \"react\";\nimport {\n  CentersInterface,\n  DistrictInterface,\n  RoomLocationInterface,\n  RoomsInterface,\n} from \"../../shared/interfaces\";\n\ninterface RoomFormProps {\n  thisCenter: CentersInterface | null;\n  thisDistrict: DistrictInterface | null;\n  thisProvince: RoomLocationInterface | null;\n  locations: RoomLocationInterface[];\n  roomNumber: number;\n  roomCapacity: number;\n  thisRoom: RoomsInterface | null;\n  error: {\n    element: string;\n    msg: string;\n  } | null;\n  loadingRequest: boolean;\n  setError: (\n    value: React.SetStateAction<{\n      element: string;\n      msg: string;\n    } | null>\n  ) => void;\n  setRoomNumber: React.Dispatch<React.SetStateAction<number>>;\n  setRoomCapacity: React.Dispatch<React.SetStateAction<number>>;\n  setThisRoom: React.Dispatch<React.SetStateAction<RoomsInterface | null>>;\n  setActionTypes: React.Dispatch<\n    React.SetStateAction<\n      | \"\"\n      | \"CREATE_PROVINCE\"\n      | \"UPDATE_PROVINCE\"\n      | \"CREATE_DISTRICT\"\n      | \"UPDATE_DISTRICT\"\n      | \"CREATE_CENTER\"\n      | \"UPDATE_CENTER\"\n      | \"CREATE_ROOM\"\n      | \"UPDATE_ROOM\"\n    >\n  >;\n  handleSubmitRoom: () => Promise<void>;\n  selectProvince: (province_id: string) => void;\n  selectDistrict: (province_id: string, district_id: string) => void;\n  selectCenter: (\n    province_id: string,\n    district_id: string,\n    center_id: string\n  ) => void;\n}\n\nconst RoomForm = (props: RoomFormProps) => {\n  return (\n    <Fragment>\n      <div className=\"py-4 text-base leading-6 space-y-4 text-gray-700 sm:text-lg sm:leading-7\">\n        {/* PROVINCE SELECT ========================================== */}\n        <div className=\"flex flex-col\">\n          <label>Province</label>\n          <select\n            className={`bg-white py-1 px-2 border-2 w-full focus:outline-none focus:bg-gray-100 text-gray-600 focus:text-gray-800 rounded h-10 md:w-full ${\n              props.error && props.error.element === \"province_id\"\n                ? \"border-red-700\"\n                : \"border-gray-400 focus:border-gray-500\"\n            }`}\n            onChange={(e) => {\n              props.error &&\n                props.error.element === \"province_id\" &&\n                props.setError(null);\n              props.selectProvince(e.target.value);\n            }}\n            value={props.thisProvince ? props.thisProvince._id : \"\"}\n            disabled={props.loadingRequest}\n          >\n            <option value=\"\" disabled>\n              Select province\n            </option>\n            {props.locations.map((item, index) => (\n              <option value={item._id} key={item._id + index}>\n                {item.province_name}\n              </option>\n            ))}\n          </select>\n          {props.error && props.error.element === \"province_id\" && (\n            <span className=\"text-red-700\">{props.error.msg}</span>\n          )}\n        </div>\n        {/* END PROVINCE SELECT ========================================== */}\n\n        {/* DISTRICT SELECT ========================================== */}\n        <div className=\"flex flex-col\">\n          <label>District</label>\n          <select\n            className={`bg-white py-1 px-2 border-2 w-full focus:outline-none focus:bg-gray-100 text-gray-600 focus:text-gray-800 rounded h-10 md:w-full ${\n              props.error && props.error.element === \"district_id\"\n                ? \"border-red-700\"\n                : \"border-gray-400 focus:border-gray-500\"\n            } ${!props.thisProvince && \"cursor-not-allowed\"}`}\n            onChange={(e) => {\n              props.error &&\n                props.error.element === \"district_id\" &&\n                props.setError(null);\n              props.selectDistrict(\n                props.thisProvince ? props.thisProvince._id : \"\",\n                e.target.value\n              );\n            }}\n            value={props.thisDistrict ? props.thisDistrict._id : \"\"}\n            disabled={props.loadingRequest || props.thisProvince === null}\n          >\n            <option value=\"\" disabled>\n              Select district\n            </option>\n            {props.thisProvince !== null &&\n            props.locations.filter((loc) => loc._id === props.thisProvince!._id)\n              .length > 0 ? (\n              props.locations\n                .filter((loc) => loc._id === props.thisProvince!._id)[0]\n                .districts.map((district, index) => (\n                  <option value={district._id} key={index + district._id}>\n                    {district.district_name}\n                  </option>\n                ))\n            ) : (\n              <option value=\"\" disabled>\n                No district found\n              </option>\n            )}\n          </select>\n          {props.error && props.error.element === \"district_id\" && (\n            <span className=\"text-red-700\">{props.error.msg}</span>\n          )}\n        </div>\n        {/* END DISTRICT SELECT ========================================== */}\n\n        {/* CENTER SELECT ========================================== */}\n        <div className=\"flex flex-col\">\n          <label>Center</label>\n          <select\n            className={`bg-white py-1 px-2 border-2 w-full focus:outline-none focus:bg-gray-100 text-gray-600 focus:text-gray-800 rounded h-10 md:w-full ${\n              props.error && props.error.element === \"center_id\"\n                ? \"border-red-700\"\n                : \"border-gray-400 focus:border-gray-500\"\n            } ${\n              (!props.thisProvince || props.thisDistrict) &&\n              \"cursor-not-allowed\"\n            }`}\n            onChange={(e) => {\n              props.error &&\n                props.error.element === \"center_id\" &&\n                props.setError(null);\n              props.selectCenter(\n                props.thisProvince ? props.thisProvince._id : \"\",\n                props.thisDistrict ? props.thisDistrict._id : \"\",\n                e.target.value\n              );\n            }}\n            value={props.thisCenter ? props.thisCenter._id : \"\"}\n            disabled={\n              props.loadingRequest ||\n              props.thisProvince === null ||\n              props.thisDistrict === null\n            }\n          >\n            <option value=\"\" disabled>\n              Select center\n            </option>\n            {props.thisDistrict !== null &&\n            props.thisDistrict.centers &&\n            props.thisDistrict.centers.length > 0 ? (\n              props.thisDistrict.centers.map((center, index) => (\n                <option value={center._id} key={index + center._id}>\n                  {center.center_name}\n                </option>\n              ))\n            ) : (\n              <option value=\"\" disabled>\n                No center found\n              </option>\n            )}\n          </select>\n          {props.error && props.error.element === \"center_id\" && (\n            <span className=\"text-red-700\">{props.error.msg}</span>\n          )}\n        </div>\n        {/* END CENTER SELECT ========================================== */}\n\n        <div className=\"flex flex-col\">\n          <label>Room</label>\n          <input\n            type=\"number\"\n            className={`text-left input-white w-full inline-block border-2 ${\n              props.error && props.error.element === \"room_number\"\n                ? \"border-red-700\"\n                : \"border-gray-400 focus:border-gray-500\"\n            }`}\n            placeholder=\"Room number\"\n            value={props.roomNumber}\n            onChange={(e) => props.setRoomNumber(parseInt(e.target.value))}\n            disabled={props.loadingRequest}\n          />\n          {props.error && props.error.element === \"room_number\" && (\n            <span className=\"text-red-700\">{props.error.msg}</span>\n          )}\n        </div>\n        <div className=\"flex flex-col\">\n          <label>Seats Capacity</label>\n          <input\n            type=\"number\"\n            className={`text-left input-white w-full inline-block border-2 ${\n              props.error && props.error.element === \"room_capacity\"\n                ? \"border-red-700\"\n                : \"border-gray-400 focus:border-gray-500\"\n            }`}\n            placeholder=\"Room capacity\"\n            value={props.roomCapacity}\n            onChange={(e) => props.setRoomCapacity(parseInt(e.target.value))}\n            disabled={props.loadingRequest}\n          />\n          {props.error && props.error.element === \"room_capacity\" && (\n            <span className=\"text-red-700\">{props.error.msg}</span>\n          )}\n        </div>\n      </div>\n      <div className=\"pt-4 flex justify-between\">\n        <button\n          onClick={() => {\n            props.setActionTypes(\"\");\n            props.setThisRoom(null);\n            props.setRoomCapacity(0);\n            props.setRoomNumber(0);\n          }}\n          className={`btn bg-gray-400 text-white hover:bg-gray-600`}\n          type=\"button\"\n          disabled={props.loadingRequest}\n        >\n          Exit\n        </button>\n        <button\n          className=\"btn bg-primary text-white hover:bg-blue-600\"\n          type=\"button\"\n          onClick={() => props.handleSubmitRoom()}\n          disabled={props.loadingRequest}\n        >\n          {props.loadingRequest ? \"Loading...\" : \"Save\"}\n        </button>\n      </div>\n    </Fragment>\n  );\n};\n\nexport default RoomForm;\n","import React, { Fragment } from \"react\";\nimport { MdCancel, MdSave } from \"react-icons/md\";\nimport {\n  DistrictInterface,\n  RoomLocationInterface,\n} from \"../../shared/interfaces\";\n\ninterface CenterFormProps {\n  thisDistrict: DistrictInterface | null;\n  thisProvince: RoomLocationInterface | null;\n  locations: RoomLocationInterface[];\n  loadingRequest: boolean;\n  centerName: string;\n  error: {\n    element: string;\n    msg: string;\n  } | null;\n  setCenterName: (value: React.SetStateAction<string>) => void;\n  setError: (\n    value: React.SetStateAction<{\n      element: string;\n      msg: string;\n    } | null>\n  ) => void;\n  setActionTypes: React.Dispatch<\n    React.SetStateAction<\n      | \"\"\n      | \"CREATE_PROVINCE\"\n      | \"UPDATE_PROVINCE\"\n      | \"CREATE_DISTRICT\"\n      | \"UPDATE_DISTRICT\"\n      | \"CREATE_CENTER\"\n      | \"UPDATE_CENTER\"\n      | \"CREATE_ROOM\"\n      | \"UPDATE_ROOM\"\n    >\n  >;\n  handleSubmit: () => Promise<void>;\n  selectProvince: (province_id: string) => void;\n  selectDistrict: (province_id: string, district_id: string) => void;\n}\n\nconst CenterForm: React.FC<CenterFormProps> = (props) => {\n  return (\n    <Fragment>\n      <div className=\"py-4 text-base leading-6 space-y-4 text-gray-700 sm:text-lg sm:leading-7\">\n        {/* PROVINCE SELECT ========================================== */}\n        <div className=\"flex flex-col\">\n          <label>Province</label>\n          <select\n            className={`bg-white py-1 px-2 border-2 w-full focus:outline-none focus:bg-gray-100 text-gray-600 focus:text-gray-800 rounded h-10 md:w-full ${\n              props.error && props.error.element === \"province_id\"\n                ? \"border-red-700\"\n                : \"border-gray-400 focus:border-gray-500\"\n            }`}\n            onChange={(e) => {\n              props.error &&\n                props.error.element === \"province_id\" &&\n                props.setError(null);\n              props.selectProvince(e.target.value);\n            }}\n            value={props.thisProvince ? props.thisProvince._id : \"\"}\n            disabled={props.loadingRequest}\n          >\n            <option value=\"\" disabled>\n              Select province\n            </option>\n            {props.locations.map((item, index) => (\n              <option value={item._id} key={item._id + index}>\n                {item.province_name}\n              </option>\n            ))}\n          </select>\n          {props.error && (\n            <span className=\"text-red-700\">{props.error.msg}</span>\n          )}\n        </div>\n        {/* END PROVINCE SELECT ========================================== */}\n\n        {/* DISTRICT SELECT ========================================== */}\n        <div className=\"flex flex-col\">\n          <label>District</label>\n          <select\n            className={`bg-white py-1 px-2 border-2 w-full focus:outline-none focus:bg-gray-100 text-gray-600 focus:text-gray-800 rounded h-10 md:w-full ${\n              props.error && props.error.element === \"district_id\"\n                ? \"border-red-700\"\n                : \"border-gray-400 focus:border-gray-500\"\n            } ${!props.thisProvince && \"cursor-not-allowed\"}`}\n            onChange={(e) => {\n              props.error &&\n                props.error.element === \"district_id\" &&\n                props.setError(null);\n              props.selectDistrict(\n                props.thisProvince ? props.thisProvince._id : \"\",\n                e.target.value\n              );\n            }}\n            value={props.thisDistrict ? props.thisDistrict._id : \"\"}\n            disabled={props.loadingRequest || props.thisProvince === null}\n          >\n            <option value=\"\" disabled>\n              Select district\n            </option>\n            {props.thisProvince !== null &&\n            props.locations.filter((loc) => loc._id === props.thisProvince!._id)\n              .length > 0 ? (\n              props.locations\n                .filter((loc) => loc._id === props.thisProvince!._id)[0]\n                .districts.map((district, index) => (\n                  <option value={district._id} key={index + district._id}>\n                    {district.district_name}\n                  </option>\n                ))\n            ) : (\n              <option value=\"\" disabled>\n                No district found\n              </option>\n            )}\n          </select>\n          {props.error && (\n            <span className=\"text-red-700\">{props.error.msg}</span>\n          )}\n        </div>\n        {/* END DISTRICT SELECT ========================================== */}\n\n        <div className=\"flex flex-col\">\n          <label>Center name</label>\n          <input\n            type=\"text\"\n            className={`bg-white py-1 px-2 border-2 ${\n              props.error && props.error.element === \"center_name\"\n                ? \"border-red-700\"\n                : \"border-gray-400 focus:border-gray-500\"\n            } rounded focus:outline-none focus:bg-gray-100`}\n            onChange={(e) => {\n              props.error &&\n                props.error.element === \"center_name\" &&\n                props.setError(null);\n              props.setCenterName(e.target.value);\n            }}\n            value={props.centerName}\n            disabled={props.loadingRequest}\n          />\n          {props.error && (\n            <span className=\"text-red-700\">{props.error.msg}</span>\n          )}\n        </div>\n      </div>\n      <div className=\"pt-4 flex justify-between\">\n        <button\n          type=\"button\"\n          className=\"btn bg-gray-500 focus:outline-none hover:bg-gray-700 text-white flex items-center gap-1\"\n          onClick={() => {\n            props.setActionTypes(\"\");\n            props.setCenterName(\"\");\n          }}\n          disabled={props.loadingRequest}\n        >\n          <MdCancel\n            className={`inline-block mr-1 text-xl font-bold ${\n              props.loadingRequest ? \"animate-pulse\" : \"\"\n            }`}\n          />\n          Cancel\n        </button>\n        <button\n          type=\"button\"\n          className=\"btn btn-blue focus:outline-none flex items-center gap-1\"\n          onClick={() => props.handleSubmit()}\n          disabled={props.loadingRequest}\n        >\n          <MdSave className=\"inline-blocktext-xl font-bold\" />\n          <span>{props.loadingRequest ? \"loading...\" : \"Save\"}</span>\n        </button>\n      </div>\n    </Fragment>\n  );\n};\n\nexport default CenterForm;\n","import React, { useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport {\n  MdAdd,\n  MdClear,\n  MdCreate,\n  MdDelete,\n  MdExpandLess,\n  MdExpandMore,\n} from \"react-icons/md\";\nimport {\n  FC_CreateCenter,\n  FC_CreateRoom,\n  FC_DeleteCenter,\n  FC_DeleteRoom,\n  FC_UpdateCenter,\n  FC_UpdateRoom,\n} from \"../../actions/location\";\nimport axios from \"axios\";\nimport { API } from \"../../utils/api\";\nimport {\n  CentersInterface,\n  DistrictInterface,\n  RoomLocationInterface,\n  RoomsInterface,\n} from \"../../shared/interfaces\";\nimport { PushPopupAlert } from \"../../actions/system\";\nimport { PopupAlertData } from \"../../components/Alert/Popup\";\nimport { PopupAlertTheme } from \"../../interfaces/popupAlert\";\nimport { errorToText } from \"../../utils/errors\";\nimport Modal, { ModalSize, Themes } from \"../../components/Modal/Modal\";\nimport { AiOutlineFileSearch } from \"react-icons/ai\";\nimport RoomForm from \"./RoomForm\";\nimport CenterForm from \"./CenterForm\";\nimport searchData from \"../../utils/search\";\nimport { isEmptyOrSpaces } from \"../../shared/dataTest\";\n\ninterface AppProps {\n  thisProvinceId: string;\n  thisDistrict: DistrictInterface | null;\n  thisCenter: CentersInterface | null;\n  thisRoom: RoomsInterface | null;\n  thisProvince: RoomLocationInterface | null;\n  locations: RoomLocationInterface[];\n  loadingRequest: boolean;\n  actionTypes:\n    | \"\"\n    | \"CREATE_PROVINCE\"\n    | \"UPDATE_PROVINCE\"\n    | \"CREATE_DISTRICT\"\n    | \"UPDATE_DISTRICT\"\n    | \"CREATE_CENTER\"\n    | \"UPDATE_CENTER\"\n    | \"CREATE_ROOM\"\n    | \"UPDATE_ROOM\";\n  setLoadingRequest: React.Dispatch<React.SetStateAction<boolean>>;\n  setThisCenter: React.Dispatch<React.SetStateAction<CentersInterface | null>>;\n  setThisRoom: React.Dispatch<React.SetStateAction<RoomsInterface | null>>;\n  setThisDistrict: React.Dispatch<\n    React.SetStateAction<DistrictInterface | null>\n  >;\n  setThisProvince: React.Dispatch<\n    React.SetStateAction<RoomLocationInterface | null>\n  >;\n  setActionTypes: React.Dispatch<\n    React.SetStateAction<\n      | \"\"\n      | \"CREATE_PROVINCE\"\n      | \"UPDATE_PROVINCE\"\n      | \"CREATE_DISTRICT\"\n      | \"UPDATE_DISTRICT\"\n      | \"CREATE_CENTER\"\n      | \"UPDATE_CENTER\"\n      | \"CREATE_ROOM\"\n      | \"UPDATE_ROOM\"\n    >\n  >;\n  FC_CreateCenter: Function;\n  FC_UpdateCenter: Function;\n  FC_DeleteCenter: Function;\n  FC_CreateRoom: Function;\n  FC_UpdateRoom: Function;\n  FC_DeleteRoom: Function;\n  PushPopupAlert: (alert: PopupAlertData) => void;\n}\n\nconst ViewCenters: React.FC<AppProps> = (props) => {\n  const [centerName, setCenterName] = useState<string>(\"\");\n  const [roomNumber, setRoomNumber] = useState<number>(0);\n  const [roomCapacity, setRoomCapacity] = useState<number>(0);\n  const [error, setError] = useState<{ element: string; msg: string } | null>(\n    null\n  );\n  const [loadingDeletion, setLoadingDeletion] = useState<string>(\"\");\n  const [searchCenter, setSearchCenter] = useState<string>(\"\");\n\n  const handleSubmit = async () => {\n    if (!props.thisProvince) {\n      return setError({\n        element: \"province_id\",\n        msg: \"Province is required\",\n      });\n    }\n    if (!props.thisDistrict) {\n      return setError({\n        element: \"district_id\",\n        msg: \"District is required\",\n      });\n    }\n    if (!centerName.length) {\n      return setError({\n        element: \"center_name\",\n        msg: \"Center name is required\",\n      });\n    }\n    props.setLoadingRequest(true);\n    try {\n      let res;\n      if (props.actionTypes === \"CREATE_CENTER\") {\n        res = await axios.post<{ data: CentersInterface }>(\n          `${API.APPLICATION}/center`,\n          {\n            district_id: props.thisDistrict._id,\n            center_name: centerName,\n            rooms: [],\n          }\n        );\n        if (res.data) {\n          props.FC_CreateCenter({\n            province_id: props.thisProvinceId,\n            district_id: props.thisDistrict._id,\n            data: res.data.data,\n          });\n          props.PushPopupAlert({\n            title: \"New Center created successfully\",\n            theme: PopupAlertTheme.success,\n          });\n          props.setLoadingRequest(false);\n          props.setActionTypes(\"\");\n          setCenterName(\"\");\n        }\n      } else if (props.thisCenter && props.actionTypes === \"UPDATE_CENTER\") {\n        const rooms: string[] = props.thisCenter.rooms.map((room) => room._id);\n        res = await axios.patch<{ update: CentersInterface }>(\n          `${API.APPLICATION}/center`,\n          {\n            examination_center_id: props.thisCenter._id,\n            center_name: centerName,\n            rooms,\n            isUsed: true,\n          }\n        );\n        if (res.data) {\n          props.FC_UpdateCenter({\n            province_id: props.thisProvinceId,\n            district_id: props.thisDistrict._id,\n            examination_center_id: props.thisCenter._id,\n            center_name: centerName,\n          });\n          props.PushPopupAlert({\n            title: \"Center updated successfully\",\n            theme: PopupAlertTheme.success,\n          });\n          props.setLoadingRequest(false);\n          props.setActionTypes(\"\");\n          setCenterName(\"\");\n        }\n      }\n    } catch (error) {\n      console.log({ doc_category_error: error });\n      props.PushPopupAlert({\n        title: errorToText(error),\n        theme: PopupAlertTheme.danger,\n      });\n      props.setLoadingRequest(false);\n    }\n  };\n\n  const handleDelete = async (centerId: string) => {\n    if (window.confirm(\"Are you sure do you want to delete this center?\")) {\n      if (isEmptyOrSpaces(props.thisProvinceId)) {\n        return PushPopupAlert({\n          title: \"Province is required!\",\n          theme: PopupAlertTheme.warning,\n        });\n      }\n      if (!props.thisDistrict) {\n        return PushPopupAlert({\n          title: \"District is required!\",\n          theme: PopupAlertTheme.warning,\n        });\n      }\n      setLoadingDeletion(centerId);\n      try {\n        const res = await axios.delete<CentersInterface>(\n          `${API.APPLICATION}/center/${centerId}`\n        );\n\n        if (res.data) {\n          props.FC_DeleteCenter({\n            province_id: props.thisProvinceId,\n            district_id: props.thisDistrict._id,\n            center_id: centerId,\n          });\n          let newArr: DistrictInterface = { ...props.thisDistrict }; // copying the old datas array\n          let center: CentersInterface[] = [];\n\n          center = props.thisDistrict.centers.filter(\n            (element) => element._id !== centerId\n          );\n          newArr.centers = center;\n          props.setThisDistrict(newArr);\n\n          props.PushPopupAlert({\n            title: \"Center deleted successfully\",\n            theme: PopupAlertTheme.success,\n          });\n          props.setLoadingRequest(false);\n          props.setActionTypes(\"\");\n        }\n      } catch (error) {\n        console.log({ province_error: error });\n        props.PushPopupAlert({\n          title: errorToText(error),\n          theme: PopupAlertTheme.danger,\n        });\n        props.setLoadingRequest(false);\n      }\n      setLoadingDeletion(\"\");\n    }\n  };\n\n  const handleSubmitRoom = async () => {\n    if (!props.thisProvince) {\n      return setError({\n        element: \"province_id\",\n        msg: \"Province is required\",\n      });\n    }\n\n    if (!props.thisDistrict) {\n      return setError({\n        element: \"district_id\",\n        msg: \"District is required\",\n      });\n    }\n\n    if (!props.thisCenter) {\n      return setError({\n        element: \"center_id\",\n        msg: \"Center is required\",\n      });\n    }\n\n    if (roomNumber <= 0) {\n      return setError({\n        element: \"room_number\",\n        msg: \"Room number is required\",\n      });\n    }\n\n    if (roomCapacity <= 0) {\n      return setError({\n        element: \"room_capacity\",\n        msg: \"Enter valid room capacity\",\n      });\n    }\n\n    props.setLoadingRequest(true);\n    try {\n      let res;\n      if (props.actionTypes === \"CREATE_ROOM\") {\n        res = await axios.post<{ data: RoomsInterface }>(\n          `${API.APPLICATION}/centerroom`,\n          {\n            center_id: props.thisCenter._id,\n            room_type: \"Physical room\",\n            room_number: roomNumber,\n            capacity: roomCapacity,\n            occupied: 0,\n          }\n        );\n        if (res.data) {\n          props.FC_CreateRoom({\n            province_id: props.thisProvinceId,\n            district_id: props.thisDistrict._id,\n            center_id: props.thisCenter._id,\n            data: res.data.data,\n          });\n          props.PushPopupAlert({\n            title: \"New Room created successfully\",\n            theme: PopupAlertTheme.success,\n          });\n          props.setLoadingRequest(false);\n          props.setActionTypes(\"\");\n          setRoomNumber(0);\n          setRoomCapacity(0);\n        }\n      } else if (props.thisRoom && props.actionTypes === \"UPDATE_ROOM\") {\n        res = await axios.patch<{ data: RoomsInterface }>(\n          `${API.APPLICATION}/centerroom`,\n          {\n            examination_center_room_id: props.thisRoom._id,\n            center_id: props.thisCenter._id,\n            room_type: props.thisRoom.room_type,\n            room_number: roomNumber,\n            capacity: roomCapacity,\n            occupied: props.thisRoom.occupied,\n            isUsed: true,\n          }\n        );\n        if (res.data) {\n          props.FC_UpdateRoom({\n            province_id: props.thisProvinceId,\n            district_id: props.thisDistrict._id,\n            center_id: props.thisCenter._id,\n            room_id: props.thisRoom._id,\n            room_number: roomNumber,\n            capacity: roomCapacity,\n          });\n          props.PushPopupAlert({\n            title: \"Room updated successfully\",\n            theme: PopupAlertTheme.success,\n          });\n          props.setLoadingRequest(false);\n          props.setActionTypes(\"\");\n          setRoomNumber(0);\n          setRoomCapacity(0);\n          props.setThisRoom(null);\n        }\n      }\n    } catch (error) {\n      console.log({ doc_category_error: error });\n      props.PushPopupAlert({\n        title: errorToText(error),\n        theme: PopupAlertTheme.danger,\n      });\n      props.setLoadingRequest(false);\n    }\n  };\n\n  const handleDeleteRoom = async (roomId: string) => {\n    if (window.confirm(\"Are you sure do you want to delete this room?\")) {\n      if (isEmptyOrSpaces(props.thisProvinceId)) {\n        return PushPopupAlert({\n          title: \"Province is required!\",\n          theme: PopupAlertTheme.warning,\n        });\n      }\n      if (!props.thisDistrict) {\n        return PushPopupAlert({\n          title: \"District is required!\",\n          theme: PopupAlertTheme.warning,\n        });\n      }\n      if (props.thisCenter === null) {\n        return PushPopupAlert({\n          title: \"Center is required!\",\n          theme: PopupAlertTheme.warning,\n        });\n      }\n      setLoadingDeletion(roomId);\n      try {\n        const res = await axios.delete<CentersInterface>(\n          `${API.APPLICATION}/centerroom/${roomId}`\n        );\n        if (res.data) {\n          console.log({ res });\n          let newArr: CentersInterface = { ...props.thisCenter }; // copying the old datas array\n          let room: RoomsInterface[] = [];\n\n          room = props.thisCenter.rooms.filter(\n            (element) => element._id !== roomId\n          );\n          newArr.rooms = room;\n          props.FC_DeleteRoom({\n            province_id: props.thisProvinceId,\n            district_id: props.thisDistrict._id,\n            center_id: props.thisCenter._id,\n            room_id: roomId,\n          });\n          props.setThisCenter(newArr);\n          props.PushPopupAlert({\n            title: \"Room deleted successfully\",\n            theme: PopupAlertTheme.success,\n          });\n          props.setLoadingRequest(false);\n          props.setActionTypes(\"\");\n        }\n      } catch (error) {\n        console.log({ province_error: error });\n        props.PushPopupAlert({\n          title: errorToText(error),\n          theme: PopupAlertTheme.danger,\n        });\n        props.setLoadingRequest(false);\n      }\n      setLoadingDeletion(\"\");\n    }\n  };\n\n  const selectProvince = (province_id: string) => {\n    let province = props.locations.filter(\n      (items) => items._id === province_id\n    )[0];\n    props.setThisProvince(province);\n    if (province.districts.length > 0) {\n      props.setThisDistrict(\n        props.locations.filter((items) => items._id === province_id)[0]\n          .districts[0]\n      );\n    }\n  };\n\n  const selectDistrict = (province_id: string, district_id: string) => {\n    props.setThisDistrict(\n      props.locations\n        .filter((items) => items._id === province_id)[0]\n        .districts.filter((d) => d._id === district_id)[0]\n    );\n    props.setThisCenter(null);\n  };\n\n  const selectCenter = (\n    province_id: string,\n    district_id: string,\n    center_id: string\n  ) => {\n    props.setThisCenter(\n      props.locations\n        .filter((items) => items._id === province_id)[0]\n        .districts.filter((d) => d._id === district_id)[0]\n        .centers.filter((item) => item._id === center_id)[0]\n    );\n  };\n\n  const isRoomExist = (thisCenter: CentersInterface): boolean => {\n    if (thisCenter.rooms.length > 0) {\n      return true;\n    }\n    return false;\n  };\n\n  const cleanModal = () => {\n    if (\n      props.actionTypes === \"CREATE_ROOM\" ||\n      props.actionTypes === \"UPDATE_ROOM\"\n    ) {\n      props.setThisRoom(null);\n      setRoomCapacity(0);\n      setRoomNumber(0);\n    }\n    if (\n      (props.actionTypes === \"CREATE_CENTER\" ||\n        props.actionTypes === \"UPDATE_CENTER\") &&\n      props.thisProvince\n    ) {\n      setCenterName(\"\");\n    }\n    props.setActionTypes(\"\");\n    setError(null);\n  };\n\n  const getDistinctCenter = (\n    province: RoomLocationInterface | null,\n    district: DistrictInterface | null\n  ): CentersInterface[] => {\n    let thisProvince: RoomLocationInterface | undefined = undefined;\n    let thisDistrict: DistrictInterface | undefined = undefined;\n    let result: CentersInterface[] = [];\n    if (province && !district) {\n      thisProvince = props.locations.find(\n        (item) =>\n          item.province_code.toString() === province.province_code.toString()\n      );\n      if (thisProvince) {\n        for (const key in thisProvince.districts) {\n          if (\n            Object.prototype.hasOwnProperty.call(thisProvince.districts, key)\n          ) {\n            const elementDistrict = thisProvince.districts[key];\n            for (const key in elementDistrict.centers) {\n              if (\n                Object.prototype.hasOwnProperty.call(\n                  elementDistrict.centers,\n                  key\n                )\n              ) {\n                result.push(elementDistrict.centers[key]);\n              }\n            }\n          }\n        }\n      }\n    }\n\n    if (province && district) {\n      thisProvince = props.locations.find(\n        (item) =>\n          item.province_code.toString() === province.province_code.toString()\n      );\n      if (thisProvince) {\n        thisDistrict = thisProvince.districts.find(\n          (item) =>\n            item.district_code.toString() === district.district_code.toString()\n        );\n        if (thisDistrict) {\n          for (const key in thisDistrict.centers) {\n            if (\n              Object.prototype.hasOwnProperty.call(thisDistrict.centers, key)\n            ) {\n              result.push(thisDistrict.centers[key]);\n            }\n          }\n        }\n      }\n    }\n\n    if (!province && !district) {\n      for (const provKey in props.locations) {\n        if (Object.prototype.hasOwnProperty.call(props.locations, provKey)) {\n          const elementProv = props.locations[provKey];\n          for (const distKey in elementProv.districts) {\n            if (\n              Object.prototype.hasOwnProperty.call(\n                elementProv.districts,\n                distKey\n              )\n            ) {\n              const elementDistrict = elementProv.districts[distKey];\n              for (const key in elementDistrict.centers) {\n                if (\n                  Object.prototype.hasOwnProperty.call(\n                    elementDistrict.centers,\n                    key\n                  )\n                ) {\n                  result.push(elementDistrict.centers[key]);\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n    return result;\n  };\n\n  return (\n    <div\n      className={`bg-white w-full p-2 border border-gray-300 rounded shadow`}\n    >\n      <div className=\"border-b px-2 py-3 flex justify-between\">\n        <h2 className=\"text-3xl font-semibold text-gray-800\">\n          List of Centers\n        </h2>\n        <div className=\"flex items-center gap-2\">\n          <button\n            type=\"button\"\n            className={`btn mb-1 border-2 border-blue-400 bg-blue-400 hover:bg-blue-500 hover:border-blue-500\n        text-white rounded-md flex items-center font-bold focus:outline-none ${\n          props.loadingRequest && \"cursor-wait\"\n        } ${props.actionTypes !== \"\" && \"cursor-not-allowed\"}`}\n            onClick={() => props.setActionTypes(\"CREATE_CENTER\")}\n            disabled={props.actionTypes !== \"\" || props.loadingRequest}\n          >\n            <MdAdd className=\"inline-block mr-1 text-xl font-bold\" /> New Center\n          </button>\n          <button\n            type=\"button\"\n            className={`btn hover:bg-blue-500 mb-1 border-2 border-blue-500 bg-white\n        hover:text-white rounded-md flex items-center font-bold text-gray-700 focus:outline-none gap-1 ${\n          props.loadingRequest && \"cursor-wait\"\n        } ${props.actionTypes !== \"\" && \"cursor-not-allowed\"}`}\n            onClick={() => props.setActionTypes(\"CREATE_ROOM\")}\n            disabled={props.actionTypes !== \"\" || props.loadingRequest}\n          >\n            <MdAdd className=\"inline-block mr-1 text-xl font-bold\" />\n            New Room\n          </button>\n        </div>\n      </div>\n\n      {/* FILTER FORM ======================================== */}\n      <div className=\"flex flex-col sm:flex-row items-center gap-2 w-full my-2\">\n        <div className=\"w-full sm:w-1/5\">\n          <select\n            className=\"input-white h-10 text-sm border-2 border-gray-400 focus:border-gray-500 w-full\"\n            placeholder={`Filter by province`}\n            onChange={(e: React.ChangeEvent<HTMLSelectElement>) =>\n              selectProvince(e.target.value)\n            }\n            value={props.thisProvince ? props.thisProvince._id : \"\"}\n          >\n            <option value=\"ALL\">All province</option>\n            {props.locations.map((province, index) => (\n              <option value={province._id} key={index + province._id}>\n                {province.province_name}\n              </option>\n            ))}\n          </select>\n        </div>\n        <div className=\"w-full sm:w-1/5\">\n          <select\n            className=\"input-white h-10 text-sm border-2 border-gray-400 focus:border-gray-500 w-full\"\n            placeholder={`Filter by district`}\n            onChange={(e: React.ChangeEvent<HTMLSelectElement>) =>\n              selectDistrict(props.thisProvince!._id, e.target.value)\n            }\n            value={props.thisDistrict ? props.thisDistrict._id : \"ALL\"}\n          >\n            <option value=\"ALL\">All district</option>\n            {props.thisProvince !== null ? (\n              props.locations.filter(\n                (loc) => loc._id === props.thisProvince!._id\n              ).length > 0 ? (\n                props.locations\n                  .filter((loc) => loc._id === props.thisProvince!._id)[0]\n                  .districts.map((district, index) => (\n                    <option value={district._id} key={index + district._id}>\n                      {district.district_name}\n                    </option>\n                  ))\n              ) : (\n                <option value=\"\" disabled>\n                  No district found\n                </option>\n              )\n            ) : (\n              <option value=\"\" disabled>\n                Select province first!\n              </option>\n            )}\n          </select>\n        </div>\n        <div className=\"w-full sm:w-3/5\">\n          <input\n            onChange={(e: React.ChangeEvent<HTMLInputElement>) =>\n              setSearchCenter(e.target.value)\n            }\n            type=\"text\"\n            className=\"input-white h-10 text-sm border-2 border-gray-400 focus:border-gray-500\"\n            placeholder={`Search centers by title`}\n            value={searchCenter}\n            disabled={\n              getDistinctCenter(props.thisProvince, props.thisDistrict).length >\n              0\n                ? false\n                : true\n            }\n          />\n        </div>\n      </div>\n      {/* END FILTER FORM ======================================== */}\n\n      {getDistinctCenter(props.thisProvince, props.thisDistrict).length > 0 ? (\n        <div className=\"bg-white\">\n          {searchData(\n            getDistinctCenter(props.thisProvince, props.thisDistrict),\n            searchCenter\n          ).map((center: CentersInterface, index) => (\n            <div\n              key={index + center._id}\n              className=\"p-2 my-3 rounded border hover:bg-gray-50\"\n            >\n              <div\n                className=\"flex justify-between items-center group cursor-pointer\"\n                onClick={() =>\n                  !props.thisCenter || props.thisCenter._id !== center._id\n                    ? props.setThisCenter(center)\n                    : props.setThisCenter(null)\n                }\n              >\n                <div className=\"ml-2\">\n                  <div className=\"text-2xl font-semibold text-gray-600\">\n                    {center.center_name}\n                  </div>\n                  <div className=\"text-base top-1 text-gray-600\">\n                    {center.rooms.length > 0\n                      ? center.rooms.length + \" Room(s)\"\n                      : null}\n                  </div>\n                </div>\n                <div className=\"flex items-center gap-2\">\n                  {props.thisCenter && props.thisCenter._id === center._id && (\n                    <button\n                      className={`text-white bg-blue-400 group-hover:bg-blue-600 focus:outline-none p-2 rounded-full group-hover:shadow-md group-hover:text-white  ${\n                        props.loadingRequest && \"cursor-wait\"\n                      } ${props.actionTypes !== \"\" && \"cursor-not-allowed\"}`}\n                      onClick={() => {\n                        props.setThisCenter(center);\n                        setCenterName(center.center_name);\n                        props.setActionTypes(\"UPDATE_CENTER\");\n                      }}\n                      disabled={\n                        props.loadingRequest || props.actionTypes !== \"\"\n                      }\n                      title=\"Edit center\"\n                    >\n                      <MdCreate className=\"w-6 h-6\" />\n                    </button>\n                  )}\n                  {props.thisCenter &&\n                    props.thisCenter._id === center._id &&\n                    !isRoomExist(props.thisCenter) && (\n                      <button\n                        title=\"Delete center\"\n                        className={`bg-red-400 group-hover:bg-red-600 text-white focus:outline-none p-2 rounded-full group-hover:shadow-md group-hover:text-white ${\n                          props.loadingRequest && \"cursor-wait\"\n                        } ${props.actionTypes !== \"\" && \"cursor-not-allowed\"}`}\n                        onClick={() => handleDelete(center._id)}\n                        disabled={\n                          props.loadingRequest ||\n                          loadingDeletion.length > 0 ||\n                          props.actionTypes !== \"\"\n                        }\n                      >\n                        <MdClear className=\"w-6 h-6\" />\n                      </button>\n                    )}\n\n                  <button\n                    title={\n                      props.thisCenter && props.thisCenter._id === center._id\n                        ? \"Close Center\"\n                        : \"View Rooms\"\n                    }\n                    className={`${\n                      props.thisCenter && props.thisCenter._id === center._id\n                        ? \"group-hover:bg-gray-600\"\n                        : \"group-hover:bg-gray-500\"\n                    } p-2 rounded-full bg-gray-300 group-hover:shadow-md flex justify-center items-center focus:outline-none text-gray-800 group-hover:text-white`}\n                    onClick={() =>\n                      !props.thisCenter || props.thisCenter._id !== center._id\n                        ? props.setThisCenter(center)\n                        : props.setThisCenter(null)\n                    }\n                  >\n                    {props.thisCenter && props.thisCenter._id === center._id ? (\n                      <MdExpandLess className=\"w-6 h-6\" />\n                    ) : (\n                      <MdExpandMore className=\"w-6 h-6\" />\n                    )}\n                  </button>\n                </div>\n              </div>\n\n              {props.thisCenter && props.thisCenter._id === center._id && (\n                <div\n                  className={`bg-white h-full w-full hidden md:block mt-2 p-2 pb-5 border border-gray-300 rounded shadow animate__animated animate__fadeIn`}\n                >\n                  <div className=\"border-b px-2 py-3 flex justify-between\">\n                    <h2 className=\"text-3xl font-semibold text-gray-800\">\n                      List of Rooms\n                    </h2>\n\n                    <button\n                      type=\"button\"\n                      className={`btn hover:bg-blue-500 mb-1 border-2 border-blue-500 bg-white\n        hover:text-white rounded-md flex items-center font-bold text-gray-700 focus:outline-none gap-1 ${\n          props.loadingRequest && \"cursor-wait\"\n        } ${props.actionTypes !== \"\" && \"cursor-not-allowed\"}`}\n                      onClick={() => props.setActionTypes(\"CREATE_ROOM\")}\n                      disabled={\n                        props.actionTypes !== \"\" || props.loadingRequest\n                      }\n                    >\n                      <MdAdd className=\"inline-block mr-1 text-xl font-bold\" />\n                      New Room\n                    </button>\n                  </div>\n\n                  {center.rooms.length > 0 ? (\n                    <table\n                      className={`w-full shadow sm:rounded-lg table-auto order-table max-w-full`}\n                    >\n                      <thead className=\"bg-white border-b-2 border-gray-300 text-gray-600 font-bold text-sm\">\n                        <tr\n                          className={`text-left tracking-wide bg-gray-100 border-b-2 border-gray-500 text-gray-600 overflow-hidden`}\n                        >\n                          <th className={`p-3 text-left`}>Room</th>\n                          <th className={`p-3 text-left`}>Type</th>\n                          <th className={`p-3 text-left`}>Capacity</th>\n                          <th className={`p-3 text-left`}>Occupied</th>\n                          <th className={`p-3 text-left`}></th>\n                        </tr>\n                      </thead>\n                      <tbody\n                        id={`table-data_${center._id}`}\n                        className=\"bg-white text-black text-base\"\n                      >\n                        {center.rooms.map(\n                          (room: RoomsInterface, index: number) => (\n                            <tr key={index + room._id}>\n                              {/* <td className=\"p-3 text-left whitespace-nowrap\">{index + 1}</td> */}\n                              <td className=\"p-3 text-left\">\n                                {room.room_number}\n                              </td>\n                              <td className=\"p-3 text-left\">\n                                {room.room_type}\n                              </td>\n                              <td className=\"p-3 text-left\">{room.capacity}</td>\n                              <td className=\"p-3 text-left\">{room.occupied}</td>\n                              <td>\n                                <div className=\"flex items-center justify-center gap-2\">\n                                  <button\n                                    title=\"Update Sub-Category\"\n                                    className=\"bg-gray-50 hover:bg-blue-100 rounded-full px-1 py-1 focus:outline-none\"\n                                    onClick={() => {\n                                      props.setThisRoom(room);\n                                      setRoomCapacity(room.capacity);\n                                      setRoomNumber(room.room_number);\n                                      props.setActionTypes(\"UPDATE_ROOM\");\n                                    }}\n                                    disabled={\n                                      props.loadingRequest ||\n                                      props.actionTypes !== \"\"\n                                    }\n                                  >\n                                    <MdCreate className=\"text-blue-700 w-7 h-7\" />\n                                  </button>\n                                  <button\n                                    title=\"Delete Sub-Category\"\n                                    className=\"bg-gray-50 hover:bg-blue-100 rounded-full px-1 py-1 focus:outline-none\"\n                                    onClick={() => handleDeleteRoom(room._id)}\n                                    disabled={\n                                      props.loadingRequest ||\n                                      props.actionTypes !== \"\"\n                                    }\n                                  >\n                                    {loadingDeletion === room._id ? (\n                                      \"Loading...\"\n                                    ) : (\n                                      <div className=\"flex justify-center items-center gap-1\">\n                                        <MdDelete className=\"text-red-700 w-7 h-7\" />\n                                      </div>\n                                    )}\n                                  </button>\n                                </div>\n                              </td>\n                            </tr>\n                          )\n                        )}\n                      </tbody>\n                    </table>\n                  ) : (\n                    <div className=\"text-center py-8\">\n                      <AiOutlineFileSearch className=\"w-24 h-24 mx-auto text-gray-600\" />\n                      <span className=\"text-gray-600 text-2xl\">\n                        No Data Found\n                      </span>\n                    </div>\n                  )}\n                </div>\n              )}\n            </div>\n          ))}\n        </div>\n      ) : (\n        <div className=\"text-center py-8\">\n          <AiOutlineFileSearch className=\"w-24 h-24 mx-auto text-gray-600\" />\n          <span className=\"text-gray-600 text-2xl\">No Data Found</span>\n        </div>\n      )}\n\n      {/* modal for creating new categories or sub category */}\n      {props.actionTypes !== \"\" && (\n        <Modal\n          backDrop={true}\n          theme={Themes.default}\n          close={(): void => cleanModal()}\n          displayClose={true}\n          backDropClose={false}\n          title={\n            <div className=\"flex items-center space-x-5\">\n              <div className=\"block pl-2 font-semibold text-xl self-start text-gray-700\">\n                <h2 className=\"uppercase text-back\">\n                  {props.actionTypes === \"CREATE_ROOM\"\n                    ? \"CREATING NEW ROOM\"\n                    : props.actionTypes === \"UPDATE_ROOM\" &&\n                      \"UPDATING EXISTING ROOM\"}\n                  {props.actionTypes === \"CREATE_CENTER\"\n                    ? \"CREATING NEW CENTER\"\n                    : props.actionTypes === \"UPDATE_CENTER\" &&\n                      \"UPDATING EXISTING CENTER\"}\n                </h2>\n              </div>\n            </div>\n          }\n          widthSizeClass={ModalSize.medium}\n          padding={{ title: true, body: false, footer: false }}\n        >\n          <div className=\"mx-5 mb-8\">\n            <div className=\"divide-y divide-gray-200\">\n              {(props.actionTypes === \"CREATE_ROOM\" ||\n                props.actionTypes === \"UPDATE_ROOM\") && (\n                <RoomForm\n                  roomNumber={roomNumber}\n                  roomCapacity={roomCapacity}\n                  thisRoom={props.thisRoom}\n                  setError={setError}\n                  loadingRequest={props.loadingRequest}\n                  setRoomNumber={setRoomNumber}\n                  setRoomCapacity={setRoomCapacity}\n                  setThisRoom={props.setThisRoom}\n                  setActionTypes={props.setActionTypes}\n                  handleSubmitRoom={handleSubmitRoom}\n                  thisDistrict={props.thisDistrict}\n                  thisProvince={props.thisProvince}\n                  locations={props.locations}\n                  error={error}\n                  selectProvince={selectProvince}\n                  selectDistrict={selectDistrict}\n                  selectCenter={selectCenter}\n                  thisCenter={props.thisCenter}\n                />\n              )}\n              {(props.actionTypes === \"CREATE_CENTER\" ||\n                props.actionTypes === \"UPDATE_CENTER\") && (\n                <CenterForm\n                  centerName={centerName}\n                  error={error}\n                  loadingRequest={props.loadingRequest}\n                  setCenterName={setCenterName}\n                  setError={setError}\n                  setActionTypes={props.setActionTypes}\n                  handleSubmit={handleSubmit}\n                  thisDistrict={props.thisDistrict}\n                  thisProvince={props.thisProvince}\n                  locations={props.locations}\n                  selectProvince={selectProvince}\n                  selectDistrict={selectDistrict}\n                />\n              )}\n            </div>\n          </div>\n        </Modal>\n      )}\n      {/* end modal for creating new categories or sub category */}\n    </div>\n  );\n};\n\nexport default connect(null, {\n  FC_CreateCenter,\n  FC_UpdateCenter,\n  FC_DeleteCenter,\n  FC_CreateRoom,\n  FC_UpdateRoom,\n  FC_DeleteRoom,\n  PushPopupAlert,\n})(ViewCenters);\n","import React, { Fragment, useEffect, useState } from \"react\";\nimport { AiOutlineFilter } from \"react-icons/ai\";\nimport { BsCaretRightFill } from \"react-icons/bs\";\nimport { connect } from \"react-redux\";\nimport { getAllRoom } from \"../../actions/location\";\nimport NoResult, { NoResultThemes } from \"../../components/NoResult/NoResult\";\nimport { StoreState } from \"../../reducers\";\nimport {\n  CentersInterface,\n  DistrictInterface,\n  RoomLocationInterface,\n  RoomsInterface,\n} from \"../../shared/interfaces\";\nimport ViewCenters from \"./ViewCenters\";\n\ninterface AppProps {\n  locations: RoomLocationInterface[];\n  getAllRoom: Function;\n}\nconst Index: React.FC<AppProps> = (props) => {\n  const [actionTypes, setActionTypes] = useState<\n    | \"CREATE_PROVINCE\"\n    | \"UPDATE_PROVINCE\"\n    | \"CREATE_DISTRICT\"\n    | \"UPDATE_DISTRICT\"\n    | \"CREATE_CENTER\"\n    | \"UPDATE_CENTER\"\n    | \"CREATE_ROOM\"\n    | \"UPDATE_ROOM\"\n    | \"\"\n  >(\"\");\n  const [thisProvince, setThisProvince] =\n    useState<RoomLocationInterface | null>(null);\n  const [thisDistrict, setThisDistrict] = useState<DistrictInterface | null>(\n    null\n  );\n  const [thisCenter, setThisCenter] = useState<CentersInterface | null>(null);\n  const [thisRoom, setThisRoom] = useState<RoomsInterface | null>(null);\n  const [loading, setLoading] = useState<boolean>(true);\n  // const [districtNotFound, setDistrictNotFound] = useState<boolean>(false);\n  const [loadingRequest, setLoadingRequest] = useState<boolean>(false);\n\n  useEffect(() => {\n    if (!props.locations.length && loading) {\n      props.getAllRoom((status: boolean, msg: string) => {\n        setLoading(status);\n        if (!status && msg.length > 0) {\n          console.error(msg);\n        }\n        // setLoadingLocations(false);\n      });\n    } else if (loading) {\n      setLoading(false);\n    }\n  }, [loading, props]);\n\n  if (loading === true) {\n    return (\n      <div className=\"text-center mt-7 font-bold text-4xl text-gray-400 animate-pulse\">\n        Loading locations...\n      </div>\n    );\n  }\n\n  return (\n    <Fragment>\n      <div className=\"w-full my-5\">\n        {/* header title */}\n        <div className=\"flex justify-between w-full m-2 gap-1\">\n          <div className=\"flex flex-col\">\n            <span className=\"text-blue-600 text-2xl md:text-2xl lg:text-3xl font-bold\">\n              Locations Management\n            </span>\n\n            <div className=\"flex flex-row items-center md:gap-3 gap-2 mt-1\">\n              <AiOutlineFilter className=\"text-xl\" />\n              <div className=\"flex flex-row items-center gap-1\">\n                {thisProvince && (\n                  <span className=\"text-gray-700 text-base font-bold\">\n                    {thisProvince.province_name}\n                  </span>\n                )}\n                {thisDistrict && (\n                  <div className=\"flex flex-row items-center gap-1\">\n                    <BsCaretRightFill />\n                    <span className=\"text-blue-600 text-base font-bold underline\">\n                      {thisDistrict.district_name} district\n                    </span>\n                  </div>\n                )}\n              </div>\n            </div>\n          </div>\n        </div>\n        {/* end header title */}\n\n        {props.locations.length > 0 ? (\n          <div className=\"w-full\">\n            {/* ============================= CENTERS ============================= */}\n            <ViewCenters\n              locations={props.locations}\n              thisProvince={thisProvince}\n              thisProvinceId={thisProvince ? thisProvince._id : \"\"}\n              thisDistrict={thisDistrict}\n              thisCenter={thisCenter}\n              thisRoom={thisRoom}\n              loadingRequest={loadingRequest}\n              actionTypes={actionTypes}\n              setThisProvince={setThisProvince}\n              setThisDistrict={setThisDistrict}\n              setLoadingRequest={setLoadingRequest}\n              setThisCenter={setThisCenter}\n              setThisRoom={setThisRoom}\n              setActionTypes={setActionTypes}\n            />\n            {/* =========================== END CENTERS =========================== */}\n          </div>\n        ) : (\n          <NoResult theme={NoResultThemes.Dark} value=\"No Locations found!\" />\n        )}\n      </div>\n    </Fragment>\n  );\n};\n\nconst mapStateToProps = ({\n  locations,\n}: StoreState): {\n  locations: RoomLocationInterface[];\n} => {\n  return { locations: locations.roomLocation };\n};\n\nexport const Centers = connect(mapStateToProps, {\n  getAllRoom,\n})(Index);\n"],"sourceRoot":""}
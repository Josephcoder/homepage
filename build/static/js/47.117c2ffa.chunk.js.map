{"version":3,"sources":["components/Table/Table.tsx","actions/settings.ts","containers/SystemSettings/index.tsx","containers/SystemSettings/CreateApplicationSession.tsx","containers/SystemSettings/ApplicationSessions.tsx","containers/SystemSettings/SystemSettings.tsx"],"names":["Table","table","tr","rows","columns","hideColumns","pagination","search","tableSize","tableClass","tableId","rounded","searchBG","thColor","loading","length","result","characters","charactersLength","i","charAt","Math","floor","random","FC_makeID","useState","totalItems","setTotalItems","totalPages","setTotalPages","currentPage","setCurrentPage","pages","setPages","pageSize","setPageSize","startIndex","setStartIndex","endIndex","setEndIndex","useEffect","tablePagination","document","getElementById","getElementsByTagName","ceil","min","_pages","Array","from","keys","map","style","display","className","type","placeholder","onChange","e","data","filterType","filter","td","cols","toLowerCase","textContent","innerText","indexOf","filterTable","target","value","disabled","Number","id","column","index","padding","alignText","isSortAllowed","onClick","switching","x","y","shouldSwitch","colIndex","dir","switchcount","innerHTML","parentNode","insertBefore","sortThisColumn","columnTitle","aria-label","page","pageIndex","getSystemSettings","callback","dispatch","a","setAxiosToken","axios","get","API","AUTH","res","ActionTypes","GET_SYSTEM_SETTINGS","payload","console","log","code_error","errorToText","disableSystemSetting","DISABLE_SYSTEM_SETTINGS","getApplicationSessions","APPLICATION","GET_APPLICATION_SESSIONS","createAplicationSession","CREATE_APPLICATION_SESSIONS","updateAplicationSession","check","UPDATE_APPLICATION_SESSIONS","disableApplicationSession","DISABLE_APPLICATION_SESSION","getPositions","GET_POSTIONS","deletePosition","DELETE_POSITION","publishPosition","PUBLISH_POSITION","SettingsType","CreateApplicationSession","props","sessionName","setSessionName","sessionPeriod","setSessionPeriod","sessionStart","setSessionStart","sessionEnd","setSessionEnd","formError","setFormError","setLoading","selectedPeriod","application_session_name","period","DATE","application_start_date","application_end_date","handleSubmit","preventDefault","element","msg","date2","Date","application_session_id","patch","PushPopupAlert","title","theme","PopupAlertTheme","info","setSelectedPeriod","closeModal","post","session","success","danger","error","onSubmit","ApplicationSession","connect","auth","application_sessions","system_settings","applicationSessions","loadingRequest","setLoadingRequest","addNew","setAddNew","activateSession","application_id","status","name","warning","put","is_active","Loading","colSpan","item","isDateExpiried","Modal","backDrop","Themes","default","close","widthSizeClass","ModalSize","medium","displayClose","backDropClose","body","SystemSettings","systemSettings","disableSettings","system_setting_id","setting_id","key","capitalizeFirstLetter","Index","settings","settingType","caption","applicationSession","setting_type","useParams","selectedSetting","setSelectedSetting"],"mappings":"mMAiUeA,IAxNqB,SAAC,GAa9B,IAGDC,EAAoBC,EAfxBC,EAYI,EAZJA,KACAC,EAWI,EAXJA,QAWI,IAVJC,mBAUI,aATJC,kBASI,aARJC,cAQI,aAPJC,iBAOI,MAPQ,SAOR,EANJC,EAMI,EANJA,WAMI,IALJC,eAKI,MALM,UAKN,MAJJC,eAII,aAHJC,gBAGI,MAHO,cAGP,MAFJC,eAEI,MAFM,OAEN,MADJC,eACI,SAEJJ,EAAsB,YAAZA,EApHM,WAKhB,IALiD,IAAhCK,EAA+B,uDAAd,EAC9BC,EAAiB,GACjBC,EACF,iEACEC,EAAmBD,EAAWF,OACzBI,EAAY,EAAGA,EAAIJ,EAAQI,IAClCH,GAAUC,EAAWG,OAAOC,KAAKC,MAAMD,KAAKE,SAAWL,IAEzD,OAAOF,EA4G2BQ,GAAcd,EAEhD,MAAoCe,mBAAiB,GAArD,mBAAOC,EAAP,KAAmBC,EAAnB,KACA,EAAoCF,mBAAiB,GAArD,mBAAOG,EAAP,KAAmBC,EAAnB,KACA,EAAsCJ,mBAAiB,GAAvD,mBAAOK,EAAP,KAAoBC,EAApB,KACA,EAA0BN,qBAA1B,mBAAOO,EAAP,KAAcC,EAAd,KACA,EAAgCR,mBAAiB,IAAjD,mBAAOS,EAAP,KAAiBC,EAAjB,KACA,EAAoCV,mBAAiB,GAArD,mBAAOW,EAAP,KAAmBC,EAAnB,KACA,EAAgCZ,mBAAiB,GAAjD,oBAAOa,GAAP,MAAiBC,GAAjB,MAEAC,qBAAU,WACRlC,GAAcmC,QAGhB,IAyBMA,GAAkB,WACtBxC,EAAQyC,SAASC,eAAejC,GAChCR,EAAKD,EAAM2C,qBAAqB,MAChCjB,EAAczB,EAAGa,QACjBc,EAAcR,KAAKwB,KAAKnB,EAAaQ,IAGrCG,GAAeP,EAAc,GAAKI,GAClCK,GAAYlB,KAAKyB,IAAIV,EAAaF,EAAW,EAAGR,EAAa,IAM7D,IAAIqB,EAASC,MAAMC,KAAKD,MAAMpB,EAAa,EAtD3B,GAsD0CsB,QAAQC,KAChE,SAAChC,GAAD,OAvDc,EAuDKA,KAEhBa,GAASe,EAAOhC,SAAWiB,EAAMjB,QACpCkB,EAASc,GAGX,IAAK,IAAI5B,EAAY,EAAGA,EAAIjB,EAAGa,OAAQI,IAEnCjB,EAAGiB,GAAGiC,MAAMC,QADVlC,GAAKiB,GAAcjB,GAAKmB,GACJ,GAEA,QAK5B,OACE,sBAAKgB,UAAS,UAAK9C,GAAnB,UAEGD,GACC,qBAAK+C,UAAS,UAAK1C,EAAL,gBAAd,SACGL,GACC,sBAAK+C,UAAU,yEAAf,UACE,cAAC,KAAD,CAAUA,UAAU,uCACpB,uBACEC,KAAK,SACLC,YAAY,SACZC,SAAU,SAACC,GAAD,OAlEJ,SAClBC,EACAC,GAEA,IAAIC,EAAQ3D,EAAI4D,EAAI3D,EAAc4D,EAKlC,IAJmB,UAAfH,GAAmC,QAATD,IAAgBA,EAAO,IACrDE,EAASF,EAAKK,cAEd9D,GADAD,EAAQyC,SAASC,eAAejC,IACrBkC,qBAAqB,MAC3BzC,EAAO,EAAGA,EAAOD,EAAGa,OAAQZ,IAC/B,IAAK4D,EAAO,EAAGA,EAAO3D,EAAQW,OAAQgD,IAEpC,GADAD,EAAK5D,EAAGC,GAAMyC,qBAAqB,MAAMmB,GACjC,CAEN,IADWD,EAAGG,aAAeH,EAAGI,WACnBF,cAAcG,QAAQN,IAAW,EAAG,CAC/C3D,EAAGC,GAAMiD,MAAMC,QAAU,GACzB,MAEAnD,EAAGC,GAAMiD,MAAMC,QAAU,QAgDJe,CAAYV,EAAEW,OAAOC,QACtChB,UAAU,mEACViB,SAAUzD,IAGXR,GACC,qBAAKgD,UAAU,SAAf,SACE,yBACEA,UAAU,qDACVG,SAAU,SAACC,GAAD,OAAOvB,EAAYqC,OAAOd,EAAEW,OAAOC,SAC7CC,SAAUzD,EAHZ,UAKE,wBAAQwD,MAAM,KAAd,gBACA,wBAAQA,MAAM,KAAd,gBACA,wBAAQA,MAAM,KAAd,gBACA,wBAAQA,MAAM,MAAd,2BAQd,wBACEhB,UACE7C,GAAU,wBAGJE,GAAW,gBAHP,2BAMZ8D,GAAI/D,EARN,WAUIL,GACA,uBAAOiD,UAAU,wEAAjB,SACE,oBACEA,UAAS,qCAAgCzC,EAAhC,kCAAiEA,EAAjE,qBAAqFA,EAArF,QADX,SAGGT,EAAQ+C,KAAI,SAACuB,EAAQC,GAAT,OACX,oBAEErB,UAAS,UAAKoB,EAAOE,QAAZ,iBACPF,EAAOG,UADA,sBAEKH,EAAOI,eAAiB,kBACtCC,QAAS,kBACPL,EAAOI,eAtOG,SAC5BpE,GAGI,IACAT,EACFE,EACA6E,EACA7D,EACA8D,EACAC,EACAC,EATFC,EAEG,uDAFgB,EACnBC,EACG,uDADmB,MASpBC,EAAc,EAKhB,GAHAN,GAAY,EADZ/E,EAAQyC,SAASC,eAAejC,GAK9B,KAAOsE,GAAW,CAMhB,IAJAA,GAAY,EACZ7E,EAAOF,EAAME,KAGRgB,EAAI,EAAGA,EAAIhB,EAAKY,OAAS,EAAGI,IAS/B,GAPAgE,GAAe,EAGfF,EAAI9E,EAAKgB,GAAGyB,qBAAqB,MAAMwC,GACvCF,EAAI/E,EAAKgB,EAAI,GAAGyB,qBAAqB,MAAMwC,GAG/B,QAARC,GAAiBJ,GAAKC,GACxB,GAAID,EAAEM,UAAUvB,cAAgBkB,EAAEK,UAAUvB,cAAe,CAEzDmB,GAAe,EACf,YAEG,GAAY,SAARE,GAAkBJ,GAAKC,GAC5BD,EAAEM,UAAUvB,cAAgBkB,EAAEK,UAAUvB,cAAe,CAEzDmB,GAAe,EACf,MAIFA,GAAgBhF,EAAKgB,GAAGqE,YAG1BrF,EAAKgB,GAAGqE,WAAYC,aAAatF,EAAKgB,EAAI,GAAIhB,EAAKgB,IACnD6D,GAAY,EAEZM,KAIoB,IAAhBA,GAA6B,QAARD,IACvBA,EAAM,OACNL,GAAY,IA2KsBU,CAAehF,EAASiE,IANpD,SASE,sBAAKrB,UAAU,0BAAf,UACGoB,EAAOiB,YACPjB,EAAOI,eAAiB,cAAC,IAAD,QAVtBH,UAiBf,uBAAOF,GAAG,aAAanB,UAAU,gCAAjC,SACGnD,SAGJG,GACC,sBAAKgD,UAAU,sEAAf,UACE,8BACE,uBAAMA,UAAU,mCAAhB,0BACgBpB,EADhB,OAC8BR,EAAa,EAD3C,gBAIF,8BACE,sBAAK4B,UAAU,wBAAf,UACE,8BACE,wBACEC,KAAK,SACLD,UAAS,mHACS,IAAhBxB,GAAqB,YAEvB8D,aAAW,WACXrB,SAA0B,IAAhBzC,GAAqBhB,EAC/BiE,QAAS,kBAAMhD,EAAeD,EAAc,IAP9C,SASE,cAAC,KAAD,CAAkBwB,UAAU,gBAGhC,8BACGtB,GACCA,EAAMmB,KAAI,SAAC0C,EAAMC,GAAP,OACR,wBAEExC,UAAS,6GACPuC,IAAS/D,EACL,WACA,8BAENyC,SAAUsB,IAAS/D,GAAehB,EAClCiE,QAAS,kBAAMhD,EAAe8D,IARhC,SAUGA,GATIC,QAab,8BACE,wBACEvC,KAAK,SACLD,UAAS,6HACPxB,IAAgBF,GAAc,YAEhCgE,aAAW,OACXrB,SAAUzC,IAAgBF,GAAcd,EACxCiE,QAAS,kBAAMhD,EAAeD,EAAc,IAP9C,SASE,cAAC,KAAD,CAAgBwB,UAAU,6B,6ZCjM/ByC,EAAoB,SAACC,GAChC,8CAAO,WAAOC,GAAP,eAAAC,EAAA,6DACLF,GAAS,EAAM,IADV,SAGHG,cAHG,SAIeC,IAAMC,IAAN,UACbC,IAAIC,KADS,cAJf,OAIGC,EAJH,OAOHP,EAAkC,CAChC1C,KAAMkD,IAAYC,oBAClBC,QAASH,EAAI7C,OAEfqC,GAAS,EAAO,IAXb,kDAaHY,QAAQC,IAAI,CAAEC,WAAW,EAAD,KACxBd,GAAS,EAAOe,YAAY,EAAD,KAdxB,0DAAP,uDAmBWC,EAAuB,SAACrD,GAInC,8CAAO,WAAOsC,GAAP,SAAAC,EAAA,sDACLD,EAAsC,CACpC1C,KAAMkD,IAAYQ,wBAClBN,QAAShD,IAHN,2CAAP,uDAUWuD,EAAyB,SAAClB,GACrC,8CAAO,WAAOC,GAAP,eAAAC,EAAA,6DACLF,GAAS,EAAM,IADV,SAGHG,cAHG,SAIeC,IAAMC,IAAN,UACbC,IAAIa,YADS,uBAJf,OAIGX,EAJH,OAOHP,EAAsC,CACpC1C,KAAMkD,IAAYW,yBAClBT,QAASH,EAAI7C,OAEfqC,GAAS,EAAO,IAXb,kDAaHY,QAAQC,IAAI,CAAEC,WAAW,EAAD,KACxBd,GAAS,EAAOe,YAAY,EAAD,KAdxB,0DAAP,uDAmBWM,EAA0B,SAAC1D,GACtC,8CAAO,WAAOsC,GAAP,SAAAC,EAAA,sDACLD,EAAyC,CACvC1C,KAAMkD,IAAYa,4BAClBX,QAAShD,IAHN,2CAAP,uDAQW4D,EAA0B,SAAC5D,GAEtC,OADAiD,QAAQC,IAAI,CAAEW,MAAO7D,IACrB,uCAAO,WAAOsC,GAAP,SAAAC,EAAA,sDACLD,EAAyC,CACvC1C,KAAMkD,IAAYgB,4BAClBd,QAAShD,IAHN,2CAAP,uDAQW+D,EAA4B,SAAC/D,GAIxC,8CAAO,WAAOsC,GAAP,SAAAC,EAAA,sDACLD,EAA0C,CACxC1C,KAAMkD,IAAYkB,4BAClBhB,QAAShD,IAHN,2CAAP,uDAQWiE,EAAe,SAAC5B,GAC3B,8CAAO,WAAOC,GAAP,eAAAC,EAAA,6DACLF,GAAS,EAAM,IADV,SAGHG,cAHG,SAIeC,IAAMC,IAAN,UAA4BC,IAAIa,YAAhC,cAJf,OAIGX,EAJH,OAKHP,EAA6B,CAC3B1C,KAAMkD,IAAYoB,aAClBlB,QAASH,EAAI7C,OAEfqC,GAAS,EAAO,IATb,kDAWHY,QAAQC,IAAI,CAAEC,WAAW,EAAD,KACxBd,GAAS,EAAOe,YAAY,EAAD,KAZxB,0DAAP,uDAqCWe,EAAiB,SAACnE,GAE7B,OADAiD,QAAQC,IAAI,CAAEiB,eAAgBnE,IAC9B,uCAAO,WAAOsC,GAAP,SAAAC,EAAA,sDACLD,EAA+B,CAC7B1C,KAAMkD,IAAYsB,gBAClBpB,QAAShD,IAHN,2CAAP,uDAQWqE,EAAkB,SAACrE,GAI9B,8CAAO,WAAOsC,GAAP,SAAAC,EAAA,sDACLD,EAAgC,CAC9B1C,KAAMkD,IAAYwB,iBAClBtB,QAAShD,IAHN,2CAAP,wD,kFCxPGuE,E,sJC4QUC,EA9PsC,SAACC,GACpD,MAAsC3G,mBAAiB,IAAvD,mBAAO4G,EAAP,KAAoBC,EAApB,KACA,EAA0C7G,mBAAiB,IAA3D,mBAAO8G,EAAP,KAAsBC,EAAtB,KACA,EAAwC/G,mBAAiB,IAAzD,mBAAOgH,EAAP,KAAqBC,EAArB,KACA,EAAoCjH,mBAAiB,IAArD,mBAAOkH,EAAP,KAAmBC,EAAnB,KACA,EAAkCnH,mBAGxB,MAHV,mBAAOoH,EAAP,KAAkBC,EAAlB,KAIA,EAA8BrH,oBAAkB,GAAhD,mBAAOX,EAAP,KAAgBiI,EAAhB,KASAvG,qBAAU,WACJ4F,EAAMY,kBACPX,EAAYtH,QACXuH,EAAeF,EAAMY,eAAeC,2BACrCV,EAAcxH,QAAUyH,EAAiBJ,EAAMY,eAAeE,SAC9DT,EAAa1H,QACZ2H,EACES,YAAKf,EAAMY,eAAeI,uBAAwB,gBAErDT,EAAW5H,QACV6H,EACEO,YAAKf,EAAMY,eAAeK,qBAAsB,kBAQrD,CACDjB,EAAMY,eACNL,EAAW5H,OACXsH,EAAYtH,OACZwH,EAAcxH,OACd0H,EAAa1H,SAGf,IAAMuI,EAAY,uCAAG,WAAO5F,GAAP,iBAAAwC,EAAA,yDACnBxC,EAAE6F,iBAEkB,KAAhBlB,EAHe,yCAIVS,EAAa,CAClBU,QAAS,OACTC,IAAK,kCANU,UAQU,KAAlBlB,EARQ,yCASVO,EAAa,CAClBU,QAAS,SACTC,IAAK,gCAXU,UAaS,KAAjBhB,EAbQ,0CAcVK,EAAa,CAClBU,QAAS,aACTC,IAAK,wCAhBU,WAkBO,KAAfd,EAlBQ,0CAmBVG,EAAa,CAClBU,QAAS,WACTC,IAAK,sCArBU,WAlC8BC,EAyDLf,IAxDjB,IAAIgB,KAwDDlB,IAvDH,IAAIkB,KAAKD,IAgCjB,0CAwBVZ,EAAa,CAClBU,QAAS,WACTC,IAAK,4CA1BU,WA6BjBV,GAAW,GA7BM,UAgCc,OAAzBX,EAAMY,eAhCK,wBAiCbpC,QAAQC,IAAI,CACV+C,uBAAwBxB,EAAMY,eAAeY,uBAC7CX,yBAA0BZ,EAC1Ba,OAAQX,EACRa,uBAAwBX,EACxBY,qBAAsBV,IAtCX,UAwCKvC,IAAMyD,MAAN,UACbvD,IAAIa,YADS,sBAEhB,CACEyC,uBACExB,EAAMY,eAAeY,uBACvBX,yBAA0BZ,EAC1Ba,OAAQX,EACRa,uBAAwBX,EACxBY,qBAAsBV,IAhDb,QAwCPnC,EAxCO,OAoDb4B,EAAMb,wBAAwBf,EAAI7C,KAAKA,MAEvCyE,EAAM0B,eAAe,CACnBC,MAAM,2CACNC,MAAOC,IAAgBC,OAEzB9B,EAAM+B,kBAAkB,MACxB/B,EAAMgC,YAAW,GACjBxD,QAAQC,IAAI,WAAYL,EAAI7C,KAAKA,MA5DpB,yCA+DKyC,IAAMiE,KAAN,UAAc/D,IAAIa,YAAlB,sBAAmD,CACnE8B,yBAA0BZ,EAC1Ba,OAAQX,EACRa,uBAAwBX,EACxBY,qBAAsBV,IAnEX,QA+DPnC,EA/DO,OAqEb4B,EAAMf,wBAAwBb,EAAI7C,KAAK2G,SACvClC,EAAM0B,eAAe,CACnBC,MAAM,2CACNC,MAAOC,IAAgBM,UAEzBnC,EAAMgC,YAAW,GACjBxD,QAAQC,IAAI,WAAYL,GA3EX,2DA8Ef4B,EAAM0B,eAAe,CACnBC,MAAM,GAAD,OAAKhD,YAAY,EAAD,IAAhB,eACLiD,MAAOC,IAAgBO,SAEzB5D,QAAQ6D,MAAM,QAAS,CAAEA,MAAK,OAlFf,QAoFjB1B,GAAW,GApFM,kCAlCK,IAAyBW,IAkC9B,sBAAH,sDAwFlB,OACE,uBAAMgB,SAAUpB,EAAchG,UAAU,QAAxC,UACE,sBAAKA,UAAU,qBAAf,UACE,sBAAMA,UAAU,uCAAhB,0BAGA,uBACEiB,SAAUzD,EACV2C,SAAU,SAACC,GACT4E,EAAe5E,EAAEW,OAAOC,OACxBwE,EAAa,OAEfvF,KAAK,OACLe,MAAO+D,EACP/E,UAAS,+BACO,OAAduF,GAA4C,SAAtBA,EAAUW,QAC5B,iBACA,qBAGO,OAAdX,GAA4C,SAAtBA,EAAUW,SAC/B,sBAAMlG,UAAU,iCAAhB,SACGuF,EAAUY,SAIjB,sBAAKnG,UAAU,qBAAf,UACE,sBAAMA,UAAU,uCAAhB,4BAGA,uBACEiB,SAAUzD,EACV2C,SAAU,SAACC,GACT8E,EAAiB9E,EAAEW,OAAOC,OAC1BwE,EAAa,OAEfvF,KAAK,OACLe,MAAOiE,EACPjF,UAAS,+BACO,OAAduF,GAA4C,WAAtBA,EAAUW,QAC5B,iBACA,qBAGO,OAAdX,GAA4C,WAAtBA,EAAUW,SAC/B,sBAAMlG,UAAU,iCAAhB,SACGuF,EAAUY,SAIjB,sBAAKnG,UAAU,qBAAf,UACE,sBAAMA,UAAU,uCAAhB,gCAGA,uBACEiB,SAAUzD,EACV2C,SAAU,SAACC,GACTgF,EAAgBhF,EAAEW,OAAOC,OACzBwE,EAAa,OAEfvF,KAAK,OACLe,MAAOmE,EACPnF,UAAS,+BACO,OAAduF,GAA4C,eAAtBA,EAAUW,QAC5B,iBACA,qBAGO,OAAdX,GAA4C,eAAtBA,EAAUW,SAC/B,sBAAMlG,UAAU,iCAAhB,SACGuF,EAAUY,SAKjB,sBAAKnG,UAAU,qBAAf,UACE,sBAAMA,UAAU,uCAAhB,8BAGA,uBACEiB,SAAUzD,EACV2C,SAAU,SAACC,GACTkF,EAAclF,EAAEW,OAAOC,OACvBwE,EAAa,OAEfvF,KAAK,OACLe,MAAOqE,EACPrF,UAAS,+BACO,OAAduF,GAA4C,aAAtBA,EAAUW,QAC5B,iBACA,qBAGO,OAAdX,GAA4C,aAAtBA,EAAUW,SAC/B,sBAAMlG,UAAU,iCAAhB,SACGuF,EAAUY,SAKjB,qBAAKnG,UAAU,6CAAf,SACE,wBACEiB,SAAUzD,EACVyC,KAAK,SACLD,UAAS,sCACK,IAAZxC,EACI,qDACA,IANR,UASe,IAAZA,EACG,iBACyB,OAAzBsH,EAAMY,eACN,SACA,iB,kCCmDC2B,EARYC,aAbH,SAAC,GAOvB,MAAO,CACLC,KAFC,EALHA,KAQEC,qBAHC,EAJHC,gBAOwCC,uBAIU,CAClD9D,2BACAQ,8BACAL,4BACAE,4BACAuC,qBALyBc,EAnRC,SAACxC,GAC3B,MAA8B3G,oBAAkB,GAAhD,mBAAOX,EAAP,KAAgBiI,EAAhB,KACA,EAA4CtH,mBAAiB,IAA7D,mBAAOwJ,EAAP,KAAuBC,EAAvB,KACA,EAA4BzJ,oBAAkB,GAA9C,mBAAO0J,EAAP,KAAeC,EAAf,KACA,EACE3J,mBAA6C,MAD/C,mBAAOuH,EAAP,KAAuBmB,EAAvB,KAGMkB,EAAe,uCAAG,WACtBC,EACAC,EACAC,GAHsB,eAAAtF,EAAA,yDAKjBqF,EALiB,yCAMbnD,EAAM0B,eAAe,CAC1BC,MAAM,0CACNC,MAAOC,IAAgBwB,WARL,cAWtBP,EAAkBI,GAXI,kBAaFlF,IAAMsF,IAAN,UAAapF,IAAIa,YAAjB,sBAAkD,CAClEyC,uBAAwB0B,EACxBK,UAAWJ,IAfO,OAad/E,EAbc,OAkBpB4B,EAAMb,wBAAwBf,EAAI7C,KAAKA,MACvCyE,EAAM0B,eAAe,CACnBC,MAAM,GAAD,OAAKyB,EAAL,YAAaD,EAAS,UAAY,WAAlC,iBACLvB,MAAOC,IAAgBM,UArBL,kDAwBpB3D,QAAQ6D,MAAM,QAAd,MACArC,EAAM0B,eAAe,CACnBC,MAAOhD,YAAY,EAAD,IAClBiD,MAAOC,IAAgBO,SA3BL,QA8BtBU,EAAkB,IA9BI,0DAAH,0DA6JrB,OAjBA1I,qBAAU,WAEyB,OAA/B4F,EAAM0C,sBACgC,IAAtC1C,EAAM0C,qBAAqB/J,QAE3BqH,EAAMlB,wBAAuB,SAACqE,EAAiB9B,GAC7CV,EAAWwC,GACP9B,EAAI1I,QACNqH,EAAM0B,eAAe,CACnBC,MAAON,EACPO,MAAOC,IAAgBO,cAK9B,CAACpC,EAAOW,IAGT,eAAC,WAAD,WACE,sBAAKzF,UAAU,OAAf,UACE,sBAAKA,UAAU,8DAAf,UACE,qBAAKA,UAAU,4CAAf,2CAGa,IAAZxC,GACC,qBACEiE,QAAS,kBAAMqG,GAAU,IACzB9H,UAAU,8DAFZ,wBAQJ,qBAAKA,UAAU,gBAAf,SACkC,OAA/B8E,EAAM0C,uBAA6C,IAAZhK,EACtC,cAAC8K,EAAA,EAAD,IACwC,IAAtCxD,EAAM0C,qBAAqB/J,OAC7B,sBAAKuC,UAAU,2HAAf,UACE,cAAC,IAAD,CAAyBA,UAAU,6DACnC,4DAGF,qBAAKA,UAAU,OAAf,SACE,cAACtD,EAAA,EAAD,CACEI,QAAS,CACP,CAAEuF,YAAa,IAAKd,UAAW,OAAQD,QAAS,OAChD,CAAEe,YAAa,UAAWd,UAAW,OAAQD,QAAS,OACtD,CAAEe,YAAa,UAAWd,UAAW,OAAQD,QAAS,OACtD,CACEe,YAAa,aACbd,UAAW,OACXD,QAAS,OAEX,CACEe,YAAa,WACbd,UAAW,OACXD,QAAS,OAEX,CAAEe,YAAa,SAAUd,UAAW,OAAQD,QAAS,OACrD,CAAEe,YAAa,GAAId,UAAW,OAAQD,QAAS,OAC/C,CAAEe,YAAa,GAAId,UAAW,OAAQD,QAAS,QAEjDzE,KAzKI,WAChB,IAAIwD,EAAsCyE,EAAM0C,qBAChD,OAAoB,IAAhBnH,EAAK5C,OACA,CACL,oBAAYuC,UAAU,6CAAtB,SACE,oBAAIA,UAAU,kBAAkBuI,QAAS,EAAzC,4BADO,IAQNlI,EAAKR,KAAI,SAAC2I,EAAMnH,GAAP,OACd,qBAAgBrB,UAAU,6CAA1B,UACE,oBAAIA,UAAU,kCAAd,SAAiDqB,EAAQ,IACzD,oBAAIrB,UAAU,gBAAd,SACE,+BAAOwI,EAAK7C,6BAEd,oBAAI3F,UAAU,gBAAd,SAA+BwI,EAAK5C,SAEpC,oBAAI5F,UAAU,gBAAd,SAA+B6F,YAAK2C,EAAK1C,0BACzC,oBAAI9F,UAAU,gBAAd,SAA+B6F,YAAK2C,EAAKzC,wBACzC,6BACGyC,EAAKH,UACJ,sBAAMrI,UAAS,yCAAf,oBAIA,sBAAMA,UAAS,uCAAf,wBAKJ,6BACE,sBAAKA,UAAU,0BAAf,UACE,sBACEA,UAAS,mBACP2H,EAAelK,OAAS,GACxBgL,YAAeD,EAAKzC,uBACpByC,EAAKH,UACD,qBACA,kBAEN5B,MACEgC,YAAeD,EAAKzC,sBAChB,kBACAyC,EAAKH,UACL,8CACA,GAEN5G,QAAS,kBACNkG,EAAelK,SACfgL,YAAeD,EAAKzC,wBACpByC,EAAKH,WACNN,EACES,EAAKlC,wBACJkC,EAAKH,UACNG,EAAK7C,2BAtBX,UA0BE,sBAAM3F,UAAU,yDAChB,sBACEA,UAAS,0JACNwI,EAAKH,UAEF,0CADA,mBAKTV,IAAmBa,EAAKlC,wBACvB,cAAC,IAAD,CAAYtG,UAAU,+DAI5B,oBAAIA,UAAU,mBAAd,SACE,qBAAKA,UAAU,mCAAf,SACE,qBACEyB,QAAS,YACNkG,EAAelK,QAAUoJ,EAAkB2B,IAC3Cb,EAAelK,QAAUqK,GAAU,IAEtC9H,UAAS,8DACP2H,EAAelK,OAAS,EACpB,qBACA,kBARR,SAWE,cAAC,IAAD,CAAQuC,UAAU,mCA3EjBqB,OA6JCrE,YAAY,EACZC,QAAQ,EACRM,QAAQ,iBAON,IAAXsK,GACC,cAACa,EAAA,EAAD,CACEjC,MACE,qBAAKzG,UAAU,mCAAf,SACE,sBAAKA,UAAU,gBAAf,UACE,sBAAMA,UAAU,wCAAhB,SACsB,OAAnB0F,EACGA,EAAeC,yBACf,gCAEN,sBAAM3F,UAAU,oCAAhB,SACsB,OAAnB0F,EACG,0CACA,qFAKZiD,UAAU,EACVjC,MAAOkC,IAAOC,QACdC,MAAO,WACLhB,GAAU,GACVjB,EAAkB,OAEpBkC,eAAgBC,IAAUC,OAC1BC,cAAc,EACdC,eAAe,EACf7H,QAAS,CAAEmF,OAAO,EAAM2C,MAAM,GA1BhC,SA4BE,cAAC,EAAD,CACEtC,WAAYgB,EACZpC,eAAgBA,EAChB3B,wBAAyBe,EAAMf,wBAC/BE,wBAAyBa,EAAMb,wBAC/BuC,eAAgB1B,EAAM0B,eACtBK,kBAAmBA,YChHhBwC,EANQ/B,aAbC,SAAC,GAOvB,MAAO,CACLC,KAFC,EALHA,KAQEE,gBAHC,EAJHA,gBAOmC6B,kBAIW,CAC9C7G,sBACAiB,yBACA8C,qBAHqBc,EAjJC,SAACxC,GACvB,MAA8B3G,oBAAkB,GAAhD,mBAAOX,EAAP,KAAgBiI,EAAhB,KACA,EAA4CtH,mBAAiB,IAA7D,mBAAOwJ,EAAP,KAAuBC,EAAvB,KAEM2B,EAAe,uCAAG,WACtBC,EACAvB,EACAC,GAHsB,eAAAtF,EAAA,6DAKtBgF,EAAkB4B,GALI,kBAOF1G,IAAMyD,MAAN,UAAevD,IAAIC,KAAnB,aAAoC,CACpDwG,WAAYD,EACZvB,OAAQA,IATU,OAOd/E,EAPc,OAWpB4B,EAAMpB,qBAAqB,CAAE8F,oBAAmBvB,WAChDnD,EAAM0B,eAAe,CACnBC,MAAM,GAAD,OAAKyB,EAAL,YAAaD,EAAb,iBACLvB,MAAOC,IAAgBM,UAEzB3D,QAAQC,IAAI,YAAaL,GAhBL,kDAkBpBI,QAAQ6D,MAAM,QAAd,MACArC,EAAM0B,eAAe,CACnBC,MAAOhD,YAAY,EAAD,IAClBiD,MAAOC,IAAgBO,SArBL,QAwBtBU,EAAkB,IAxBI,0DAAH,0DAyCrB,OAdA1I,qBAAU,WACsB,OAA1B4F,EAAM2C,iBAA6D,IAAjC3C,EAAM2C,gBAAgBhK,QAC1DqH,EAAMrC,mBAAkB,SAACwF,EAAiB9B,GACxCV,EAAWwC,GACP9B,EAAI1I,QACNqH,EAAM0B,eAAe,CACnBC,MAAON,EACPO,MAAOC,IAAgBO,cAK9B,CAACpC,EAAOW,IAGT,cAAC,WAAD,UACE,sBAAKzF,UAAU,OAAf,UACE,qBAAKA,UAAU,8DAAf,SACE,qBAAKA,UAAU,4CAAf,+BAYF,qBAAKA,UAAU,gBAAf,SAC6B,OAA1B8E,EAAM2C,kBAAwC,IAAZjK,EACjC,cAAC8K,EAAA,EAAD,IACmC,IAAjCxD,EAAM2C,gBAAgBhK,OACxB,sBAAKuC,UAAU,2HAAf,UACE,cAAC,IAAD,CAAyBA,UAAU,6DACnC,4DAGF8E,EAAM2C,gBAAgB5H,KAAI,SAAC2I,EAAM3K,GAAP,OACxB,sBAEEmC,UAAS,0EAFX,UAIE,sBAAKA,UAAU,gBAAf,UACE,sBAAMA,UAAU,0BAAhB,SAA2CwI,EAAKN,OAChD,sBAAMlI,UAAS,6BAAf,SACGwI,EAAKkB,MAER,sBACE1J,UAAS,uBACS,aAAhBwI,EAAKP,OACD,eACA,kBAJR,SAOG0B,YAAsBnB,EAAKP,aAGhC,qBAAKjI,UAAU,mCAAf,SACE,sBACEA,UAAS,mBACP2H,EAAelK,OAAS,EACpB,qBACA,iBAHG,4BAKTgE,QAAS,kBACNkG,EAAelK,QAChB8L,EACEf,EAAKgB,kBACW,aAAhBhB,EAAKP,OAAwB,UAAY,WACzCO,EAAKN,OAXX,UAeE,sBAAMlI,UAAU,yDAChB,sBACEA,UAAS,0JACS,aAAhBwI,EAAKP,OACD,aACA,6CAGPN,IAAmBa,EAAKgB,kBACvB,cAAC,IAAD,CAAYxJ,UAAU,0DAEtB,sBAAMA,UAAU,oBAAhB,SACmB,aAAhBwI,EAAKP,OAAwB,OAAS,cA9C1CpK,EAAI2K,EAAKgB,gC,kBH5FzB5E,K,gCAAAA,E,yCAAAA,M,KAKE,IAAMgF,EAAQ,WACnB,IAAMC,EAA6D,CACjE,CACEC,YAAalF,EAAa0E,eAC1BS,QAAS,mBAEX,CACED,YAAalF,EAAaoF,mBAC1BD,QAAS,uBAGLE,EAAiBC,cAAjBD,aACR,EAA8C9L,mBAC3B,uBAAjB8L,EACIrF,EAAaoF,mBACbpF,EAAa0E,gBAHnB,mBAAOa,EAAP,KAAwBC,EAAxB,KAKA,OACE,sBAAKpK,UAAU,GAAf,UACE,qBAAKA,UAAU,0DAAf,SACE,sBAAKA,UAAU,mCAAf,UACE,cAAC,IAAD,CAAsBA,UAAU,2BAChC,qBAAKA,UAAU,gBAAf,SACE,sBAAMA,UAAU,mCAAhB,6BAmBN,qBAAKA,UAAU,qBAAf,SAGE,sBAAKA,UAAU,8CAAf,UACE,qBAAKA,UAAU,6BAAf,SACG6J,EAAShK,KAAI,SAAC2I,EAAM3K,GAAP,OACZ,qBAEE4D,QAAS,kBAAM2I,EAAmB5B,EAAKsB,cACvC9J,UAAS,4BACPmK,IAAoB3B,EAAKsB,YACrB,4DACA,sCAHG,kIAHX,SASGtB,EAAKuB,SARDlM,QAYX,sBAAKmC,UAAU,qBAAf,UACGmK,IAAoBvF,EAAa0E,gBAChC,cAAC,EAAD,IAEDa,IAAoBvF,EAAaoF,oBAChC,cAAC,EAAD","file":"static/js/47.117c2ffa.chunk.js","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { BiSort } from \"react-icons/bi\";\nimport { MdNavigateBefore, MdNavigateNext, MdSearch } from \"react-icons/md\";\n\nconst FC_makeID = (length: number = 5): string => {\n  let result: string = \"\";\n  let characters: string =\n    \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\n  let charactersLength = characters.length;\n  for (let i: number = 0; i < length; i++) {\n    result += characters.charAt(Math.floor(Math.random() * charactersLength));\n  }\n  return result;\n};\n\nexport const sortThisColumn = (\n  tableId: string,\n  colIndex: number = 0,\n  dir: \"asc\" | \"desc\" = \"asc\"\n) => {\n  var table,\n    rows,\n    switching,\n    i,\n    x,\n    y,\n    shouldSwitch,\n    switchcount = 0;\n  table = document.getElementById(tableId) as HTMLTableElement;\n  switching = true;\n  /* Make a loop that will continue until\n  no switching has been done: */\n  if (table) {\n    while (switching) {\n      //start by saying: no switching is done:\n      switching = false;\n      rows = table.rows;\n      /*Loop through all table rows (except the\n    first, which contains table headers):*/\n      for (i = 1; i < rows.length - 1; i++) {\n        //start by saying there should be no switching:\n        shouldSwitch = false;\n        /*Get the two elements you want to compare,\n      one from current row and one from the next:*/\n        x = rows[i].getElementsByTagName(\"TD\")[colIndex];\n        y = rows[i + 1].getElementsByTagName(\"TD\")[colIndex];\n        /*check if the two rows should switch place,\n      based on the direction, asc or desc:*/\n        if (dir === \"asc\" && x && y) {\n          if (x.innerHTML.toLowerCase() > y.innerHTML.toLowerCase()) {\n            //if so, mark as a switch and break the loop:\n            shouldSwitch = true;\n            break;\n          }\n        } else if (dir === \"desc\" && x && y) {\n          if (x.innerHTML.toLowerCase() < y.innerHTML.toLowerCase()) {\n            //if so, mark as a switch and break the loop:\n            shouldSwitch = true;\n            break;\n          }\n        }\n      }\n      if (shouldSwitch && rows[i].parentNode) {\n        /*If a switch has been marked, make the switch\n      and mark that a switch has been done:*/\n        rows[i].parentNode!.insertBefore(rows[i + 1], rows[i]);\n        switching = true;\n        //Each time a switch is done, increase this count by 1:\n        switchcount++;\n      } else {\n        /*If no switching has been done AND the direction is \"asc\",\n      set the direction to \"desc\" and run the while loop again.*/\n        if (switchcount === 0 && dir === \"asc\") {\n          dir = \"desc\";\n          switching = true;\n        }\n      }\n      // if (i === 0) continue;\n      // rows.cells[i].style.backgroundColor = \"blue\";\n    }\n  }\n};\n\nexport interface TableColumnsInterface {\n  columnTitle: JSX.Element | string;\n  alignText: string;\n  padding?: string;\n  isSortAllowed?: boolean;\n}\n\ninterface TableProps {\n  columns: TableColumnsInterface[];\n  rows: Function;\n  hideColumns?: boolean;\n  pagination?: boolean;\n  search?: boolean;\n  tableSize?: string;\n  tableClass?: string;\n  tableId?: string;\n  rounded?: boolean;\n  searchBG?: string;\n  thColor?: string;\n  loading?: boolean;\n}\n\nconst Table: React.FC<TableProps> = ({\n  rows,\n  columns,\n  hideColumns = false,\n  pagination = false,\n  search = false,\n  tableSize = \"w-full\",\n  tableClass,\n  tableId = \"myTable\",\n  rounded = false,\n  searchBG = \"bg-gray-200\",\n  thColor = \"blue\",\n  loading = false,\n}) => {\n  const startPage = 1;\n  tableId = tableId === \"myTable\" ? FC_makeID() : tableId;\n  let table: HTMLElement, tr: HTMLCollectionOf<HTMLTableRowElement>;\n  const [totalItems, setTotalItems] = useState<number>(0);\n  const [totalPages, setTotalPages] = useState<number>(1);\n  const [currentPage, setCurrentPage] = useState<number>(1);\n  const [pages, setPages] = useState<number[]>();\n  const [pageSize, setPageSize] = useState<number>(10);\n  const [startIndex, setStartIndex] = useState<number>(0);\n  const [endIndex, setEndIndex] = useState<number>(0);\n\n  useEffect(() => {\n    pagination && tablePagination();\n  });\n\n  const filterTable = (\n    data: string,\n    filterType?: \"default\" | \"field\"\n  ): void => {\n    var filter, tr, td, rows: number, cols: number, txtValue;\n    if (filterType === \"field\" && data === \"all\") data = \"\";\n    filter = data.toLowerCase();\n    table = document.getElementById(tableId)!;\n    tr = table.getElementsByTagName(\"tr\");\n    for (rows = 0; rows < tr.length; rows++) {\n      for (cols = 0; cols < columns.length; cols++) {\n        td = tr[rows].getElementsByTagName(\"td\")[cols];\n        if (td) {\n          txtValue = td.textContent || td.innerText;\n          if (txtValue.toLowerCase().indexOf(filter) > -1) {\n            tr[rows].style.display = \"\";\n            break;\n          } else {\n            tr[rows].style.display = \"none\";\n          }\n        }\n      }\n    }\n  };\n\n  const tablePagination = (): void => {\n    table = document.getElementById(tableId)!;\n    tr = table.getElementsByTagName(\"tr\");\n    setTotalItems(tr.length);\n    setTotalPages(Math.ceil(totalItems / pageSize));\n\n    // calculate start and end item indexes on the current page\n    setStartIndex((currentPage - 1) * pageSize);\n    setEndIndex(Math.min(startIndex + pageSize - 1, totalItems - 1));\n\n    /**\n     * TODO!\n     * There is a problem with this condition\n     */\n    let _pages = Array.from(Array(totalPages + 1 - startPage).keys()).map(\n      (i) => startPage + i\n    );\n    if (!pages || _pages.length !== pages.length) {\n      setPages(_pages);\n    }\n\n    for (let i: number = 0; i < tr.length; i++) {\n      if (i >= startIndex && i <= endIndex) {\n        tr[i].style.display = \"\";\n      } else {\n        tr[i].style.display = \"none\";\n      }\n    }\n  };\n\n  return (\n    <div className={`${tableSize}`}>\n      {/* search box  */}\n      {search && (\n        <div className={`${searchBG} w-full mb-2`}>\n          {search && (\n            <div className=\"bg-white rounded flex items-center w-full p-2 border-2 border-gray-500\">\n              <MdSearch className=\"h-5 w-5 fill-current text-gray-400\" />\n              <input\n                type=\"search\"\n                placeholder=\"search\"\n                onChange={(e) => filterTable(e.target.value)}\n                className=\"w-full h-6 pl-4 text-sm outline-none focus:outline-none bg-white\"\n                disabled={loading}\n              />\n\n              {pagination && (\n                <div className=\"select\">\n                  <select\n                    className=\"text-base outline-none focus:outline-none bg-white\"\n                    onChange={(e) => setPageSize(Number(e.target.value))}\n                    disabled={loading}\n                  >\n                    <option value=\"10\">10</option>\n                    <option value=\"25\">25</option>\n                    <option value=\"50\">50</option>\n                    <option value=\"100\">100</option>\n                  </select>\n                </div>\n              )}\n            </div>\n          )}\n        </div>\n      )}\n      <table\n        className={\n          tableClass\n            ? tableClass\n            : `w-full shadow ${\n                rounded && \"sm:rounded-lg\"\n              } table-auto order-table`\n        }\n        id={tableId}\n      >\n        {!hideColumns && (\n          <thead className=\"bg-white border-b-2 border-gray-300 text-gray-600 font-bold text-base\">\n            <tr\n              className={`text-left tracking-wide bg-${thColor}-100 border-b-2 border-${thColor}-500 text-${thColor}-600`}\n            >\n              {columns.map((column, index) => (\n                <th\n                  key={index}\n                  className={`${column.padding} text-${\n                    column.alignText\n                  } px-3 py-2 ${column.isSortAllowed && \"cursor-pointer\"}`}\n                  onClick={() =>\n                    column.isSortAllowed && sortThisColumn(tableId, index)\n                  }\n                >\n                  <div className=\"flex items-center gap-1\">\n                    {column.columnTitle}\n                    {column.isSortAllowed && <BiSort />}\n                  </div>\n                </th>\n              ))}\n            </tr>\n          </thead>\n        )}\n        <tbody id=\"table-data\" className=\"bg-white text-black text-base\">\n          {rows()}\n        </tbody>\n      </table>\n      {pagination && (\n        <div className=\"sm:flex-1 sm:flex sm:items-center sm:justify-between mt-4 work-sans\">\n          <div>\n            <span className=\"text-xs xs:text-sm text-gray-900\">\n              Showing 1 to {pageSize} of {totalItems - 1} Entries\n            </span>\n          </div>\n          <div>\n            <nav className=\"inline-flex shadow-sm\">\n              <div>\n                <button\n                  type=\"button\"\n                  className={`inline-flex items-center px-2 py-2 rounded-l-md border border-gray-300 text-sm font-medium text-gray-500 ${\n                    currentPage !== 1 && \"bg-white\"\n                  }`}\n                  aria-label=\"Previous\"\n                  disabled={currentPage === 1 || loading}\n                  onClick={() => setCurrentPage(currentPage - 1)}\n                >\n                  <MdNavigateBefore className=\"h-5 w-5\" />\n                </button>\n              </div>\n              <div>\n                {pages &&\n                  pages.map((page, pageIndex) => (\n                    <button\n                      key={pageIndex}\n                      className={`-ml-px inline-flex items-center px-4 py-2 border border-gray-300 text-sm font-medium text-gray-700 ${\n                        page !== currentPage\n                          ? \"bg-white\"\n                          : \"bg-gray-100 cursor-default\"\n                      }`}\n                      disabled={page === currentPage || loading}\n                      onClick={() => setCurrentPage(page)}\n                    >\n                      {page}\n                    </button>\n                  ))}\n              </div>\n              <div>\n                <button\n                  type=\"button\"\n                  className={`inline-flex items-center px-2 py-2 rounded-r-md border border-gray-300 text-sm leading-5 font-medium text-gray-500 ${\n                    currentPage !== totalPages && \"bg-white\"\n                  }`}\n                  aria-label=\"Next\"\n                  disabled={currentPage === totalPages || loading}\n                  onClick={() => setCurrentPage(currentPage + 1)}\n                >\n                  <MdNavigateNext className=\"h-5 w-5\" />\n                </button>\n              </div>\n            </nav>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default Table;\n","import axios from \"axios\";\nimport { Dispatch } from \"redux\";\nimport { ActionTypes } from \"./types\";\nimport {\n  ApplicationSessionInterface,\n  SystemSettingsInterface,\n} from \"../shared/interfaces\";\nimport { API } from \"../utils/api\";\nimport { setAxiosToken } from \"../utils/AxiosToken\";\nimport { errorToText } from \"../utils/errors\";\nimport { PositionAPI } from \"../interfaces/position\";\n\n/**\n * * ****************************** INTERFACES *****************************\n */\n\n// SYSTEM SETTINGS  ==============\nexport interface GetSystemSettingsAction {\n  type: ActionTypes.GET_SYSTEM_SETTINGS;\n  payload: SystemSettingsInterface[];\n}\n\nexport interface DisableSystemSettingsAction {\n  type: ActionTypes.DISABLE_SYSTEM_SETTINGS;\n  payload: {\n    system_setting_id: string;\n    status: \"enabled\" | \"disabled\";\n  };\n}\n\n// APPLICATION SETTINGS ===================================\nexport interface GetApplicationSessionAction {\n  type: ActionTypes.GET_APPLICATION_SESSIONS;\n  payload: ApplicationSessionInterface[];\n}\n\nexport interface CreateApplicationSessionAction {\n  type: ActionTypes.CREATE_APPLICATION_SESSIONS;\n  payload: ApplicationSessionInterface;\n}\n\nexport interface UpdateApplicationSessionAction {\n  type: ActionTypes.UPDATE_APPLICATION_SESSIONS;\n  payload: ApplicationSessionInterface;\n}\n\nexport interface DisableApplicationSessionAction {\n  type: ActionTypes.DISABLE_APPLICATION_SESSION;\n  payload: {\n    application_session_id: string;\n    status: boolean;\n  };\n}\n\n// POSITIONS SETTINGS ===================================\nexport interface PositionCreateInterface {\n  position_id?: string;\n  position_title: string;\n  description: string;\n  school_level_id: string;\n  education_institute_id: string;\n  courses: string[];\n  requirements: {\n    user_detail_category_id: string;\n    user_detail_subcategory_id: string;\n    position_requirement: {\n      category_subcategory_data_id: string;\n      required: boolean;\n    }[];\n    required: boolean;\n  }[];\n}\nexport interface GetPositionsAction {\n  type: ActionTypes.GET_POSTIONS;\n  payload: PositionAPI[];\n}\n\nexport interface CreatePositionsAction {\n  type: ActionTypes.CREATE_POSITION;\n  payload: PositionCreateInterface;\n}\n\nexport interface UpdatePositionsAction {\n  type: ActionTypes.UPDATE_POSITION;\n  payload: PositionCreateInterface;\n}\n\nexport interface DeletePositionAction {\n  type: ActionTypes.DELETE_POSITION;\n  payload: string;\n}\n\nexport interface PublishPositionAction {\n  type: ActionTypes.PUBLISH_POSITION;\n  payload: {\n    position_id: string;\n    status: boolean;\n  };\n}\n\nexport type SystemActionType =\n  | GetSystemSettingsAction\n  | DisableSystemSettingsAction\n  | GetApplicationSessionAction\n  | CreateApplicationSessionAction\n  | UpdateApplicationSessionAction\n  | DisableApplicationSessionAction\n  | GetPositionsAction\n  | CreatePositionsAction\n  | UpdatePositionsAction\n  | DeletePositionAction\n  | PublishPositionAction;\n\n/**\n * * ****************************** ACTIONS *****************************\n */\n\nexport const getSystemSettings = (callback: Function) => {\n  return async (dispatch: Dispatch) => {\n    callback(true, \"\");\n    try {\n      setAxiosToken();\n      const res = await axios.get<SystemSettingsInterface[]>(\n        `${API.AUTH}/settings`\n      );\n      dispatch<GetSystemSettingsAction>({\n        type: ActionTypes.GET_SYSTEM_SETTINGS,\n        payload: res.data,\n      });\n      callback(false, \"\");\n    } catch (error) {\n      console.log({ code_error: error });\n      callback(false, errorToText(error));\n    }\n  };\n};\n\nexport const disableSystemSetting = (data: {\n  system_setting_id: string;\n  status: \"enabled\" | \"disabled\";\n}) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<DisableSystemSettingsAction>({\n      type: ActionTypes.DISABLE_SYSTEM_SETTINGS,\n      payload: data,\n    });\n  };\n};\n\n// ============================ PERIODS =======================\n\nexport const getApplicationSessions = (callback: Function) => {\n  return async (dispatch: Dispatch) => {\n    callback(true, \"\");\n    try {\n      setAxiosToken();\n      const res = await axios.get<ApplicationSessionInterface[]>(\n        `${API.APPLICATION}/applicationsesion`\n      );\n      dispatch<GetApplicationSessionAction>({\n        type: ActionTypes.GET_APPLICATION_SESSIONS,\n        payload: res.data,\n      });\n      callback(false, \"\");\n    } catch (error) {\n      console.log({ code_error: error });\n      callback(false, errorToText(error));\n    }\n  };\n};\n\nexport const createAplicationSession = (data: ApplicationSessionInterface) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<CreateApplicationSessionAction>({\n      type: ActionTypes.CREATE_APPLICATION_SESSIONS,\n      payload: data,\n    });\n  };\n};\n\nexport const updateAplicationSession = (data: ApplicationSessionInterface) => {\n  console.log({ check: data });\n  return async (dispatch: Dispatch) => {\n    dispatch<UpdateApplicationSessionAction>({\n      type: ActionTypes.UPDATE_APPLICATION_SESSIONS,\n      payload: data,\n    });\n  };\n};\n\nexport const disableApplicationSession = (data: {\n  application_session_id: string;\n  status: boolean;\n}) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<DisableApplicationSessionAction>({\n      type: ActionTypes.DISABLE_APPLICATION_SESSION,\n      payload: data,\n    });\n  };\n};\n\nexport const getPositions = (callback: Function) => {\n  return async (dispatch: Dispatch) => {\n    callback(true, \"\");\n    try {\n      setAxiosToken();\n      const res = await axios.get<PositionAPI[]>(`${API.APPLICATION}/position`);\n      dispatch<GetPositionsAction>({\n        type: ActionTypes.GET_POSTIONS,\n        payload: res.data,\n      });\n      callback(false, \"\");\n    } catch (error) {\n      console.log({ code_error: error });\n      callback(false, errorToText(error));\n    }\n  };\n};\n\nexport const createPosition = (data: PositionCreateInterface) => {\n  console.log({ createPosition: data });\n  return async (dispatch: Dispatch) => {\n    dispatch<CreatePositionsAction>({\n      type: ActionTypes.CREATE_POSITION,\n      payload: data,\n    });\n  };\n};\n\nexport const updatePosition = (data: PositionCreateInterface) => {\n  console.log({ updatePosition: data });\n  return async (dispatch: Dispatch) => {\n    dispatch<UpdatePositionsAction>({\n      type: ActionTypes.UPDATE_POSITION,\n      payload: data,\n    });\n  };\n};\n\nexport const deletePosition = (data: string) => {\n  console.log({ deletePosition: data });\n  return async (dispatch: Dispatch) => {\n    dispatch<DeletePositionAction>({\n      type: ActionTypes.DELETE_POSITION,\n      payload: data,\n    });\n  };\n};\n\nexport const publishPosition = (data: {\n  position_id: string;\n  status: boolean;\n}) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<PublishPositionAction>({\n      type: ActionTypes.PUBLISH_POSITION,\n      payload: data,\n    });\n  };\n};\n","import React, { useState } from \"react\";\nimport { RiFolderSettingsFill } from \"react-icons/ri\";\nimport ApplicationSession from \"./ApplicationSessions\";\nimport SystemSettings from \"./SystemSettings\";\nimport { useParams } from \"react-router-dom\";\n\nenum SettingsType {\n  systemSettings = \"systemSettings\",\n  applicationSession = \"applicationSession\",\n}\n\nexport const Index = () => {\n  const settings: { settingType: SettingsType; caption: string }[] = [\n    {\n      settingType: SettingsType.systemSettings,\n      caption: \"System Settings\",\n    },\n    {\n      settingType: SettingsType.applicationSession,\n      caption: \"Appication Session\",\n    },\n  ];\n  const { setting_type } = useParams<{ setting_type: string }>();\n  const [selectedSetting, setSelectedSetting] = useState<SettingsType | null>(\n    setting_type === \"applicationSession\"\n      ? SettingsType.applicationSession\n      : SettingsType.systemSettings\n  );\n  return (\n    <div className=\"\">\n      <div className=\"mt-3 rounded flex flex-row justify-between items-center\">\n        <div className=\"flex flex-row items-center gap-3\">\n          <RiFolderSettingsFill className=\"text-6xl text-blue-600\" />\n          <div className=\"flex flex-col\">\n            <span className=\"text-blue-600 text-2xl font-bold\">Settings</span>\n            {/* <span className=\"text-gray-600 text-sm\">\n              Customization of questiopositionsn bank predefined settings including\n              courses, chapters, question types, etc\n            </span> */}\n          </div>\n        </div>\n        {/* <div className=\"flex flex-row\">\n          <Link\n            to=\"/method-add-question\"\n            className={`btn bg-blue-100 hover:bg-white text-blue-700 border-2 border-white`}\n          >\n            Add questions\n          </Link>\n          <div className=\"btn bg-black bg-opacity-30 text-white border-2 border-white\">\n            Change course\n          </div>\n        </div> */}\n      </div>\n      <div className=\"mt-3 mb-6 flex-col\">\n        {/* <div className=\"flex flex-col\"> */}\n        {/* <div className=\"bg-white flex rounded\"> */}\n        <div className=\"bg-white w-full border border-white rounded\">\n          <div className=\"flex flex-row items-center\">\n            {settings.map((item, i) => (\n              <div\n                key={i}\n                onClick={() => setSelectedSetting(item.settingType)}\n                className={`animate__animated ${\n                  selectedSetting === item.settingType\n                    ? \"bg-blue-100 border-blue-600 text-blue-600 animate__zoomIn\"\n                    : \"bg-white border-white text-gray-600\"\n                } hover:bg-blue-100 px-4 py-2 cursor-pointer font-bold border-b-4 hover:border-blue-600 hover:text-blue-600 rounded-t mt-1 mx-1`}\n              >\n                {item.caption}\n              </div>\n            ))}\n          </div>\n          <div className=\"=rounded mx-1 mb-1\">\n            {selectedSetting === SettingsType.systemSettings && (\n              <SystemSettings />\n            )}\n            {selectedSetting === SettingsType.applicationSession && (\n              <ApplicationSession />\n            )}\n          </div>\n        </div>\n        {/* </div> */}\n        {/* </div> */}\n      </div>\n    </div>\n  );\n};\n","import axios from \"axios\";\nimport React, { useEffect, useState } from \"react\";\nimport { PopupAlertData } from \"../../components/Alert/Popup\";\nimport { PopupAlertTheme } from \"../../interfaces/popupAlert\";\nimport { ApplicationSessionInterface } from \"../../shared/interfaces\";\nimport { API } from \"../../utils/api\";\nimport { errorToText } from \"../../utils/errors\";\nimport { DATE } from \"../../utils/functions\";\n\ninterface AppProps {\n  closeModal: (state: boolean) => void;\n  selectedPeriod: ApplicationSessionInterface | null;\n  setSelectedPeriod: React.Dispatch<\n    React.SetStateAction<ApplicationSessionInterface | null>\n  >;\n  PushPopupAlert: (alert: PopupAlertData) => void;\n  createAplicationSession: Function;\n  updateAplicationSession: Function;\n}\n\nconst CreateApplicationSession: React.FC<AppProps> = (props) => {\n  const [sessionName, setSessionName] = useState<string>(\"\");\n  const [sessionPeriod, setSessionPeriod] = useState<string>(\"\");\n  const [sessionStart, setSessionStart] = useState<string>(\"\");\n  const [sessionEnd, setSessionEnd] = useState<string>(\"\");\n  const [formError, setFormError] = useState<{\n    element: string;\n    msg: string;\n  } | null>(null);\n  const [loading, setLoading] = useState<boolean>(false);\n\n  const isDifferenceValid = function (date1: string, date2: string): boolean {\n    const valid_date_1: Date = new Date(date1);\n    const valid_date_2: Date = new Date(date2);\n    if (valid_date_1 >= valid_date_2) return false;\n    else return true;\n  };\n\n  useEffect(() => {\n    if (props.selectedPeriod) {\n      !sessionName.length &&\n        setSessionName(props.selectedPeriod.application_session_name);\n      !sessionPeriod.length && setSessionPeriod(props.selectedPeriod.period);\n      !sessionStart.length &&\n        setSessionStart(\n          DATE(props.selectedPeriod.application_start_date, \"YYYY/MM/DD\")\n        );\n      !sessionEnd.length &&\n        setSessionEnd(\n          DATE(props.selectedPeriod.application_end_date, \"YYYY/MM/DD\")\n        );\n      // console.log({\n      //   og: props.selectedPeriod.application_start_date,\n      //   new: DATE(props.selectedPeriod.application_start_date),\n      //   new_2: DATE(props.selectedPeriod.application_start_date).split(\"/\").reverse().join(\"/\"),\n      // });\n    }\n  }, [\n    props.selectedPeriod,\n    sessionEnd.length,\n    sessionName.length,\n    sessionPeriod.length,\n    sessionStart.length,\n  ]);\n\n  const handleSubmit = async (e: React.FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n    // validation\n    if (sessionName === \"\") {\n      return setFormError({\n        element: \"name\",\n        msg: \"Please fill the session name\",\n      });\n    } else if (sessionPeriod === \"\") {\n      return setFormError({\n        element: \"period\",\n        msg: \"Please fill session period\",\n      });\n    } else if (sessionStart === \"\") {\n      return setFormError({\n        element: \"start_date\",\n        msg: \"Please fill the session start date\",\n      });\n    } else if (sessionEnd === \"\") {\n      return setFormError({\n        element: \"end_date\",\n        msg: \"Please fill the session end date\",\n      });\n    } else if (!isDifferenceValid(sessionStart, sessionEnd)) {\n      return setFormError({\n        element: \"end_date\",\n        msg: \"Please fill the valid session end date\",\n      });\n    } else {\n      setLoading(true);\n      try {\n        // Update current\n        if (props.selectedPeriod !== null) {\n          console.log({\n            application_session_id: props.selectedPeriod.application_session_id,\n            application_session_name: sessionName,\n            period: sessionPeriod,\n            application_start_date: sessionStart,\n            application_end_date: sessionEnd,\n          });\n          const res = await axios.patch(\n            `${API.APPLICATION}/applicationsesion`,\n            {\n              application_session_id:\n                props.selectedPeriod.application_session_id,\n              application_session_name: sessionName,\n              period: sessionPeriod,\n              application_start_date: sessionStart,\n              application_end_date: sessionEnd,\n            }\n          );\n\n          props.updateAplicationSession(res.data.data);\n\n          props.PushPopupAlert({\n            title: `Application Session updated successfully`,\n            theme: PopupAlertTheme.info,\n          });\n          props.setSelectedPeriod(null);\n          props.closeModal(false);\n          console.log(\"Result: \", res.data.data);\n        } else {\n          // Add new\n          const res = await axios.post(`${API.APPLICATION}/applicationsesion`, {\n            application_session_name: sessionName,\n            period: sessionPeriod,\n            application_start_date: sessionStart,\n            application_end_date: sessionEnd,\n          });\n          props.createAplicationSession(res.data.session);\n          props.PushPopupAlert({\n            title: `Application session created successfully`,\n            theme: PopupAlertTheme.success,\n          });\n          props.closeModal(false);\n          console.log(\"Result: \", res);\n        }\n      } catch (error) {\n        props.PushPopupAlert({\n          title: `${errorToText(error)}! Try again`,\n          theme: PopupAlertTheme.danger,\n        });\n        console.error(\"Err: \", { error });\n      }\n      setLoading(false);\n    }\n  };\n\n  return (\n    <form onSubmit={handleSubmit} className=\"-mt-2\">\n      <div className=\"flex flex-col mb-2\">\n        <span className=\"text-sm text-gray-600 font-bold mb-1\">\n          Session name\n        </span>\n        <input\n          disabled={loading}\n          onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n            setSessionName(e.target.value);\n            setFormError(null);\n          }}\n          type=\"text\"\n          value={sessionName}\n          className={`input-white border-2 ${\n            formError !== null && formError.element === \"name\"\n              ? \"border-red-500\"\n              : \"border-gray-500\"\n          }`}\n        />\n        {formError !== null && formError.element === \"name\" && (\n          <span className=\"text-red-600 font-bold text-xs\">\n            {formError.msg}\n          </span>\n        )}\n      </div>\n      <div className=\"flex flex-col mb-2\">\n        <span className=\"text-sm text-gray-600 font-bold mb-1\">\n          Session period\n        </span>\n        <input\n          disabled={loading}\n          onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n            setSessionPeriod(e.target.value);\n            setFormError(null);\n          }}\n          type=\"text\"\n          value={sessionPeriod}\n          className={`input-white border-2 ${\n            formError !== null && formError.element === \"period\"\n              ? \"border-red-500\"\n              : \"border-gray-500\"\n          }`}\n        />\n        {formError !== null && formError.element === \"period\" && (\n          <span className=\"text-red-600 font-bold text-xs\">\n            {formError.msg}\n          </span>\n        )}\n      </div>\n      <div className=\"flex flex-col mb-2\">\n        <span className=\"text-sm text-gray-600 font-bold mb-1\">\n          Session start date\n        </span>\n        <input\n          disabled={loading}\n          onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n            setSessionStart(e.target.value);\n            setFormError(null);\n          }}\n          type=\"date\"\n          value={sessionStart}\n          className={`input-white border-2 ${\n            formError !== null && formError.element === \"start_date\"\n              ? \"border-red-500\"\n              : \"border-gray-500\"\n          }`}\n        />\n        {formError !== null && formError.element === \"start_date\" && (\n          <span className=\"text-red-600 font-bold text-xs\">\n            {formError.msg}\n          </span>\n        )}\n      </div>\n\n      <div className=\"flex flex-col mb-2\">\n        <span className=\"text-sm text-gray-600 font-bold mb-1\">\n          Session end date\n        </span>\n        <input\n          disabled={loading}\n          onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n            setSessionEnd(e.target.value);\n            setFormError(null);\n          }}\n          type=\"date\"\n          value={sessionEnd}\n          className={`input-white border-2 ${\n            formError !== null && formError.element === \"end_date\"\n              ? \"border-red-500\"\n              : \"border-gray-500\"\n          }`}\n        />\n        {formError !== null && formError.element === \"end_date\" && (\n          <span className=\"text-red-600 font-bold text-xs\">\n            {formError.msg}\n          </span>\n        )}\n      </div>\n\n      <div className=\"flex flex-row justify-between items-center\">\n        <button\n          disabled={loading}\n          type=\"submit\"\n          className={`btn bg-blue-600 text-white ${\n            loading === true\n              ? \"animate__animated animate__flash animate__infinite\"\n              : \"\"\n          }`}\n        >\n          {loading === true\n            ? \"Please wait...\"\n            : props.selectedPeriod !== null\n            ? \"Update\"\n            : \"Create\"}\n        </button>\n      </div>\n    </form>\n  );\n};\n\nexport default CreateApplicationSession;\n","import React, { Fragment, useEffect, useState } from \"react\";\nimport { HiOutlineDocumentSearch } from \"react-icons/hi\";\nimport { connect } from \"react-redux\";\nimport { Auth, PushPopupAlert } from \"../../actions\";\nimport Loading from \"../../components/Loading/Loading\";\nimport { StoreState } from \"../../reducers\";\nimport { PopupAlertData } from \"../../components/Alert/Popup\";\nimport axios from \"axios\";\nimport { API } from \"../../utils/api\";\nimport { PopupAlertTheme } from \"../../interfaces/popupAlert\";\nimport {\n  createAplicationSession,\n  disableApplicationSession,\n  getApplicationSessions,\n  updateAplicationSession,\n} from \"../../actions/settings\";\nimport { ApplicationSessionInterface } from \"../../shared/interfaces\";\nimport { errorToText } from \"../../utils/errors\";\nimport { DATE } from \"../../utils/functions\";\nimport Modal, { ModalSize, Themes } from \"../../components/Modal/Modal\";\nimport CreateApplicationSession from \"./CreateApplicationSession\";\nimport Table from \"../../components/Table/Table\";\nimport { MdEdit } from \"react-icons/md\";\nimport { VscLoading } from \"react-icons/vsc\";\nimport { isDateExpiried } from \"../../shared/dataTest\";\n\ninterface AppPropsInterface {\n  application_sessions: ApplicationSessionInterface[];\n  PushPopupAlert: (alert: PopupAlertData) => void;\n  getApplicationSessions: Function;\n  disableApplicationSession: Function;\n  createAplicationSession: Function;\n  updateAplicationSession: Function;\n}\n\nconst _ApplicationSession = (props: AppPropsInterface) => {\n  const [loading, setLoading] = useState<boolean>(false);\n  const [loadingRequest, setLoadingRequest] = useState<string>(\"\");\n  const [addNew, setAddNew] = useState<boolean>(false);\n  const [selectedPeriod, setSelectedPeriod] =\n    useState<ApplicationSessionInterface | null>(null);\n\n  const activateSession = async (\n    application_id: string,\n    status: boolean,\n    name: string\n  ) => {\n    if (!status) {\n      return props.PushPopupAlert({\n        title: `Not allowed to stop application session`,\n        theme: PopupAlertTheme.warning,\n      });\n    }\n    setLoadingRequest(application_id);\n    try {\n      const res = await axios.put(`${API.APPLICATION}/applicationsesion`, {\n        application_session_id: application_id,\n        is_active: status,\n      });\n      // props.disableApplicationSession({ application_id, status });\n      props.updateAplicationSession(res.data.data);\n      props.PushPopupAlert({\n        title: `${name} ${status ? \"enabled\" : \"disabled\"} successfully`,\n        theme: PopupAlertTheme.success,\n      });\n    } catch (error) {\n      console.error(\"err: \", error);\n      props.PushPopupAlert({\n        title: errorToText(error),\n        theme: PopupAlertTheme.danger,\n      });\n    }\n    setLoadingRequest(\"\");\n  };\n\n  const tableData = (): JSX.Element[] => {\n    let data: ApplicationSessionInterface[] = props.application_sessions;\n    if (data.length === 0) {\n      return [\n        <tr key={1} className=\"border-b border-gray-200 hover:bg-gray-100\">\n          <td className=\"p-3 text-center\" colSpan={9}>\n            No Data Found\n          </td>\n        </tr>,\n      ];\n    }\n\n    return data.map((item, index) => (\n      <tr key={index} className=\"border-b border-gray-200 hover:bg-gray-100\">\n        <td className=\"p-3 text-left whitespace-nowrap\">{index + 1}</td>\n        <td className=\"p-3 text-left\">\n          <span>{item.application_session_name}</span>\n        </td>\n        <td className=\"p-3 text-left\">{item.period}</td>\n        {/* <td className=\"p-3 text-left\">{user.phone_number}</td> */}\n        <td className=\"p-3 text-left\">{DATE(item.application_start_date)}</td>\n        <td className=\"p-3 text-left\">{DATE(item.application_end_date)}</td>\n        <td>\n          {item.is_active ? (\n            <span className={`px-2 py-1 font-semibold text-green-700`}>\n              Active\n            </span>\n          ) : (\n            <span className={`px-2 py-1 font-semibold text-red-700`}>\n              Inactive\n            </span>\n          )}\n        </td>\n        <td>\n          <div className=\"flex items-center gap-1\">\n            <div\n              className={`relative ${\n                loadingRequest.length > 0 ||\n                isDateExpiried(item.application_end_date) ||\n                item.is_active\n                  ? \"cursor-not-allowed\"\n                  : \"cursor-pointer\"\n              }`}\n              title={\n                isDateExpiried(item.application_end_date)\n                  ? \"Seesion expired\"\n                  : item.is_active\n                  ? \"Activate another session to close this one!\"\n                  : \"\"\n              }\n              onClick={() =>\n                !loadingRequest.length &&\n                !isDateExpiried(item.application_end_date) &&\n                !item.is_active &&\n                activateSession(\n                  item.application_session_id,\n                  !item.is_active,\n                  item.application_session_name\n                )\n              }\n            >\n              <span className=\"block w-14 h-8 bg-gray-100 rounded-full shadow-inner\"></span>\n              <span\n                className={`absolute block w-6 h-6 mt-1 ml-1 rounded-full shadow inset-y-0 left-0 focus-within:shadow-outline transition-transform duration-500 ease-in-out ${\n                  !item.is_active\n                    ? \"bg-red-500\"\n                    : \"bg-green-500 transform translate-x-full\"\n                }`}\n              ></span>\n            </div>\n            {loadingRequest === item.application_session_id && (\n              <VscLoading className=\"animate__animated animate__rotateIn animate__infinite\" />\n            )}\n          </div>\n        </td>\n        <td className=\"px-5 text-center\">\n          <div className=\"flex flex-row items-center gap-2\">\n            <div\n              onClick={() => {\n                !loadingRequest.length && setSelectedPeriod(item);\n                !loadingRequest.length && setAddNew(true);\n              }}\n              className={`bg-gray-50 hover:bg-blue-100 rounded-full px-1 py-1 ${\n                loadingRequest.length > 0\n                  ? \"cursor-not-allowed\"\n                  : \"cursor-pointer\"\n              }`}\n            >\n              <MdEdit className=\"text-3xl text-blue-700\" />\n            </div>\n            {/* <div\n              // onClick={() =>\n              //   setSelectedQuestionType({\n              //     action: QT_QuestionTypeAction.Delete,\n              //     selectedQuestionType: item,\n              //   })\n              // }\n              className=\"bg-gray-100 hover:bg-red-100 rounded-full px-1 py-1 cursor-pointer\"\n            >\n              <IoMdTrash className=\"text-3xl text-yellow-700\" />\n            </div> */}\n          </div>\n        </td>\n      </tr>\n    ));\n  };\n\n  useEffect(() => {\n    if (\n      props.application_sessions === null ||\n      props.application_sessions.length === 0\n    ) {\n      props.getApplicationSessions((status: boolean, msg: string) => {\n        setLoading(status);\n        if (msg.length) {\n          props.PushPopupAlert({\n            title: msg,\n            theme: PopupAlertTheme.danger,\n          });\n        }\n      });\n    }\n  }, [props, setLoading]);\n\n  return (\n    <Fragment>\n      <div className=\"mt-1\">\n        <div className=\"flex flex-row justify-between items-center bg-gray-100 py-1\">\n          <div className=\"text-blue-600 font-extrabold text-xl px-2\">\n            Application Session settings\n          </div>\n          {loading === false && (\n            <div\n              onClick={() => setAddNew(true)}\n              className=\"btn bg-blue-600 text-white cursor-pointer hover:bg-blue-800\"\n            >\n              Add new\n            </div>\n          )}\n        </div>\n        <div className=\"flex flex-col\">\n          {props.application_sessions === null || loading === true ? (\n            <Loading />\n          ) : props.application_sessions.length === 0 ? (\n            <div className=\"text-gray-400 px-6 py-4 rounded border mt-4 text-xl font-extrabold flex flex-col items-center justify-center bg-gray-100\">\n              <HiOutlineDocumentSearch className=\"text-7xl text-gray-400 animate__animated animate__shakeX\" />\n              <span>No settings available</span>\n            </div>\n          ) : (\n            <div className=\"my-1\">\n              <Table\n                columns={[\n                  { columnTitle: \"#\", alignText: \"left\", padding: \"p-3\" },\n                  { columnTitle: \"Session\", alignText: \"left\", padding: \"p-3\" },\n                  { columnTitle: \"Perriod\", alignText: \"left\", padding: \"p-3\" },\n                  {\n                    columnTitle: \"Start Date\",\n                    alignText: \"left\",\n                    padding: \"p-3\",\n                  },\n                  {\n                    columnTitle: \"End Date\",\n                    alignText: \"left\",\n                    padding: \"p-3\",\n                  },\n                  { columnTitle: \"Status\", alignText: \"left\", padding: \"p-3\" },\n                  { columnTitle: \"\", alignText: \"left\", padding: \"p-3\" },\n                  { columnTitle: \"\", alignText: \"left\", padding: \"p-3\" },\n                ]}\n                rows={tableData}\n                pagination={false}\n                search={true}\n                thColor=\"gray\"\n              />\n            </div>\n          )}\n        </div>\n      </div>\n\n      {addNew === true && (\n        <Modal\n          title={\n            <div className=\"flex flex-row gap-4 items-center\">\n              <div className=\"flex flex-col\">\n                <span className=\"font-extrabold text-2xl text-gray-500\">\n                  {selectedPeriod !== null\n                    ? selectedPeriod.application_session_name\n                    : \"Add new Application Session\"}\n                </span>\n                <span className=\"text-sm text-gray-500 font-normal\">\n                  {selectedPeriod !== null\n                    ? \"Update the selected application session\"\n                    : \"Application Session is a very sensitive data, make sure you give valid data\"}\n                </span>\n              </div>\n            </div>\n          }\n          backDrop={true}\n          theme={Themes.default}\n          close={() => {\n            setAddNew(false);\n            setSelectedPeriod(null);\n          }}\n          widthSizeClass={ModalSize.medium}\n          displayClose={true}\n          backDropClose={false}\n          padding={{ title: true, body: true }}\n        >\n          <CreateApplicationSession\n            closeModal={setAddNew}\n            selectedPeriod={selectedPeriod}\n            createAplicationSession={props.createAplicationSession}\n            updateAplicationSession={props.updateAplicationSession}\n            PushPopupAlert={props.PushPopupAlert}\n            setSelectedPeriod={setSelectedPeriod}\n          />\n        </Modal>\n      )}\n    </Fragment>\n  );\n};\n\nconst mapStateToProps = ({\n  auth,\n  system_settings,\n}: StoreState): {\n  auth: Auth;\n  application_sessions: ApplicationSessionInterface[];\n} => {\n  return {\n    auth: auth,\n    application_sessions: system_settings.applicationSessions,\n  };\n};\n\nconst ApplicationSession = connect(mapStateToProps, {\n  getApplicationSessions,\n  disableApplicationSession,\n  createAplicationSession,\n  updateAplicationSession,\n  PushPopupAlert,\n})(_ApplicationSession);\n\nexport default ApplicationSession;\n","import React, { Fragment, useEffect, useState } from \"react\";\nimport { HiOutlineDocumentSearch } from \"react-icons/hi\";\nimport { connect } from \"react-redux\";\nimport { Auth, PushPopupAlert } from \"../../actions\";\nimport Loading from \"../../components/Loading/Loading\";\nimport { StoreState } from \"../../reducers\";\nimport { PopupAlertData } from \"../../components/Alert/Popup\";\nimport axios from \"axios\";\nimport { API } from \"../../utils/api\";\nimport { PopupAlertTheme } from \"../../interfaces/popupAlert\";\nimport {\n  disableSystemSetting,\n  getSystemSettings,\n} from \"../../actions/settings\";\nimport { SystemSettingsInterface } from \"../../shared/interfaces\";\nimport { errorToText } from \"../../utils/errors\";\nimport { VscLoading } from \"react-icons/vsc\";\nimport { capitalizeFirstLetter } from \"../../shared/dataTest\";\n\ninterface AppPropsInterface {\n  system_settings: SystemSettingsInterface[];\n  PushPopupAlert: (alert: PopupAlertData) => void;\n  getSystemSettings: Function;\n  disableSystemSetting: Function;\n}\n\nconst _SystemSettings = (props: AppPropsInterface) => {\n  const [loading, setLoading] = useState<boolean>(false);\n  const [loadingRequest, setLoadingRequest] = useState<string>(\"\");\n\n  const disableSettings = async (\n    system_setting_id: string,\n    status: \"enabled\" | \"disabled\",\n    name: string\n  ) => {\n    setLoadingRequest(system_setting_id);\n    try {\n      const res = await axios.patch(`${API.AUTH}/settings`, {\n        setting_id: system_setting_id,\n        status: status,\n      });\n      props.disableSystemSetting({ system_setting_id, status });\n      props.PushPopupAlert({\n        title: `${name} ${status} successfully`,\n        theme: PopupAlertTheme.success,\n      });\n      console.log(\"Deleted: \", res);\n    } catch (error) {\n      console.error(\"err: \", error);\n      props.PushPopupAlert({\n        title: errorToText(error),\n        theme: PopupAlertTheme.danger,\n      });\n    }\n    setLoadingRequest(\"\");\n  };\n\n  useEffect(() => {\n    if (props.system_settings === null || props.system_settings.length === 0) {\n      props.getSystemSettings((status: boolean, msg: string) => {\n        setLoading(status);\n        if (msg.length) {\n          props.PushPopupAlert({\n            title: msg,\n            theme: PopupAlertTheme.danger,\n          });\n        }\n      });\n    }\n  }, [props, setLoading]);\n\n  return (\n    <Fragment>\n      <div className=\"mt-1\">\n        <div className=\"flex flex-row justify-between items-center bg-gray-100 py-1\">\n          <div className=\"text-blue-600 font-extrabold text-xl px-2\">\n            System Settings\n          </div>\n          {/* {loading === false && (\n            <div\n              onClick={() => setAddNew(true)}\n              className=\"btn bg-blue-600 text-white cursor-pointer hover:bg-blue-800\"\n            >\n              Add new\n            </div>\n          )} */}\n        </div>\n        <div className=\"flex flex-col\">\n          {props.system_settings === null || loading === true ? (\n            <Loading />\n          ) : props.system_settings.length === 0 ? (\n            <div className=\"text-gray-400 px-6 py-4 rounded border mt-4 text-xl font-extrabold flex flex-col items-center justify-center bg-gray-100\">\n              <HiOutlineDocumentSearch className=\"text-7xl text-gray-400 animate__animated animate__shakeX\" />\n              <span>No settings available</span>\n            </div>\n          ) : (\n            props.system_settings.map((item, i) => (\n              <div\n                key={i + item.system_setting_id}\n                className={`border flex flex-row px-3 py-2 rounded items-start my-1 justify-between`}\n              >\n                <div className=\"flex flex-col\">\n                  <span className=\"text-gray-600 font-bold\">{item.name}</span>\n                  <span className={`text-xs pr-5 text-gray-500`}>\n                    {item.key}\n                  </span>\n                  <span\n                    className={`text-xs pr-5 ${\n                      item.status === \"disabled\"\n                        ? \"text-red-700\"\n                        : \"text-green-700\"\n                    }`}\n                  >\n                    {capitalizeFirstLetter(item.status)}\n                  </span>\n                </div>\n                <div className=\"flex flex-row items-center gap-2\">\n                  <div\n                    className={`relative ${\n                      loadingRequest.length > 0\n                        ? \"cursor-not-allowed\"\n                        : \"cursor-pointer\"\n                    } flex items-center gap-1`}\n                    onClick={() =>\n                      !loadingRequest.length &&\n                      disableSettings(\n                        item.system_setting_id,\n                        item.status === \"disabled\" ? \"enabled\" : \"disabled\",\n                        item.name\n                      )\n                    }\n                  >\n                    <span className=\"block w-14 h-8 bg-gray-100 rounded-full shadow-inner\"></span>\n                    <span\n                      className={`absolute block w-6 h-6 mt-1 ml-1 rounded-full shadow inset-y-0 left-0 focus-within:shadow-outline transition-transform duration-500 ease-in-out ${\n                        item.status === \"disabled\"\n                          ? \"bg-red-500\"\n                          : \"bg-green-500 transform translate-x-full\"\n                      }`}\n                    ></span>\n                    {loadingRequest === item.system_setting_id ? (\n                      <VscLoading className=\"animate__animated animate__rotateIn animate__infinite\" />\n                    ) : (\n                      <span className=\"text-lg font-mono\">\n                        {item.status === \"disabled\" ? \"Off \" : \"On\"}\n                      </span>\n                    )}\n                  </div>\n                </div>\n              </div>\n            ))\n          )}\n        </div>\n      </div>\n    </Fragment>\n  );\n};\n\nconst mapStateToProps = ({\n  auth,\n  system_settings,\n}: StoreState): {\n  auth: Auth;\n  system_settings: SystemSettingsInterface[];\n} => {\n  return {\n    auth: auth,\n    system_settings: system_settings.systemSettings,\n  };\n};\n\nconst SystemSettings = connect(mapStateToProps, {\n  getSystemSettings,\n  disableSystemSetting,\n  PushPopupAlert,\n})(_SystemSettings);\n\nexport default SystemSettings;\n"],"sourceRoot":""}
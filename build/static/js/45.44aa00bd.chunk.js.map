{"version":3,"sources":["containers/district/index.tsx","actions/session.ts","actions/schools.ts","interfaces/marks_publication.ts","containers/HeadTeacher/ReceivePost.tsx","containers/HeadTeacher/ViewRequest.tsx","containers/HeadTeacher/RequestList.tsx","containers/HeadTeacher/StepsHeader.tsx","containers/HeadTeacher/RequestPostForm.tsx","containers/HeadTeacher/RequestTeacher.tsx"],"names":["defaultColumns","columnTitle","alignText","padding","editColumns","_District","props","setTableColumns","data","setState","tableColumns","setModalState","value","modalState","setFilterByPosition","filterByPosition","setInstituteId","institute_id","setCategoryId","category_id","setQualificationId","qualification_id","setLoadingRequest","loadingRequest","setLoading","loading","setLoadingPost","loadingPost","setThisPost","thisPost","setThisPostTable","thisPostTable","setConfirmedPosts","confirmedPosts","setLeftPlacement","leftPlacements","setViewPost","viewPost","setApprovedPosts","approvedPosts","setFormError","formError","setSelectedPostId","selectedPostId","assignConfirmedPost","postRequests","limit","getLimitations","districtPlacementLimits","post_id","requested_post","distributed","general","PushPopupAlert","title","theme","PopupAlertTheme","warning","state","postIndex","findIndex","item","requested_post_id","confirmed_posts","approval_date","Date","push","confirmed_by","auth","user","user_id","description","requested_post_status","PostRequestStatusInterface","CONFIRMED","getAssignedValuePost","postId","result","find","loadData","sessionId","document","documentCategory","getDocumentCategory","documentSubCategory","getDocumentSubCategory","systemPositions","getPositions","status","msg","console","log","length","danger","districtPosts","fetchDistrictPosts","user_access","district_id","message","error","districtPlacements","getDistrictPlacement","schoolLevels","education_categories","loadEducationCategories","getDistrictPlacementLimit","componentDidMount","isEmptyOrSpaces","activeAcademicSession","getActiveAcademicSession","loadingCandidatesError","_id","doPlacement","a","axios","post","API","PLACEMENT","school_id","position_id","request_id","res","msgAlert","success","info","doPlacement_reply","errorToText","reDoPlacement","occupied_posts","received_posts","generateDataForSchoolRequest","school_ids","requests","posts","forEach","confirmed","includes","schoolIndex","available_places","requested_teacher","school","school_name","sector_id","province_id","gender","male_number","female_number","addSchoolRequest","dataForm","requested_teachers","addSchoolRequest_reply","submitRequest","element","patch","confirmedPost","post_relpy","filterQualifications","allData","categoryId","filter","generateFormData","neededPositions","subcategory_id","education_institute_id","thisPosition","position_name","position_title","female","male","needed_posts","distributed_post","total_post","total_staff","new_teacher","vacant_post","getAllowedPlacementByDegree","allLimits","degree","session","thisLimit","institution_id","post_request_session_id","confirmed_post","currentPostId","_withExcept","_withoutExcept","postRequest","fromForm","undefined","allDistributed","tableData","className","colSpan","NoResultThemes","Dark","dataTable","map","schoolPost","index","type","autoFocus","onChange","e","Number","target","onFocus","disabled","INITIATED","RECEIVED","onClick","this","to","institute","education_category_title","category","user_detail_category_id","qualification","user_detail_subcategory_id","columns","rows","pagination","search","thColor","backDrop","Themes","default","close","displayClose","backDropClose","widthSizeClass","ModalSize","large","body","footer","getPositionById","DATE","request_date","toString","onSubmit","min","max","placeholder","extraLarge","id","getPlacementByRequest","PlacedCandidateStatus","REJECTED","showRequestStatus","PLACED","PENDING","isGuest","Component","District","connect","schools","system_settings","sessionPlan","updateSchoolPost","GetPlansTypes","callback","dispatch","setAxiosToken","get","CLAIMING","GET_PLANS_TYPES","plan_types","ActionTypes","payload","setSelectedPlanType","thisType","SELECT_PLAN_TYPE","getActiveSessionPlan","GET_ACTIVE_SESSION_PLANS","session_plan","is_active","GetAllSessionPlans","GET_ALL_SESSION_PLANS","session_data","createSessionPlan","CREATE_SESSION_PLAN","updateSessionPlan","UPDATE_SESSION_PLAN","sessionActivation","SESSION_ACTIVATION","deleteSessionPlan","DELETE_SESSION_PLAN","createAcademicSession","CREATE_ACADEMIC_SESSION","GetAllAcademicSession","GET_ALL_ACADEMIC_SESSION","updateAcademicSession","UPDATE_ACADEMIC_SESSION","academicSessionActivation","ACADEMIC_SESSION_ACTIVATION","deleteAcademicSession","DELETE_ACADEMIC_SESSION","GET_ACTIVE_ACADEMIC_SESSION","getSchools","APPLICATION","GET_SCHOOLS","getSchoolById","schoolId","GET_SCHOOLS_BY_ID","createSchool","CREATE_SCHOOL","updateSchool","UPDATE_SCHOOL","deleteSchool","DELETE_SCHOOL","fetchSchoolPosts","schoolPosts","FETCH_SCHOOL_POSTS","getSchoolPlacement","GET_SCHOOL_PLACEMENT","createSchoolPost","CREATE_SCHOOL_POST","TYPE","UPDATE_SCHOOL_POST","FETCH_DISTRICT_POSTS","GET_DISTRICT_PLACEMENT","getInstitutePlacementLimit","session_id","GET_INSTITUTE_PLACEMENT_LIMIT","GET_DISTRICT_PLACEMENT_LIMIT","updateInstitutePlacementLimit","UPDATE_INSTITUTE_PLACEMENT_LIMIT","MarksPublicationCandidateStatus","marksPublicationCandidateReportContentKeyInterface","placementReportContentKeyInterface","postShowStatus","placed","received","rejected","ALL_RECEIVED","ALL_REJECTED","RECEIVED_REJECTED","PARTIAL_RECEIVED_REJECTED","PARTIAL_RECEIVED","PARTIAL_REJECTED","ReceivePost","setThisPlacement","thisPlacement","setAction","action","setTakeAction","takeAction","comment","requested_by","confirmPlacement","role_error","placedStatus","waiting_list_id","placed_candidate_id","getSchoolPlacementError","placement_id","setReceivedPosts","placementList","src","AUTH_FILES","user_info","photo","alt","fname","lname","phone_number","email","style","resize","confirmFun","setModalAction","modalType","ActionConfirmEnum","INFO","ViewRequest","Modal","schoolPlacements","capitalizeFirstLetter","setPostId","setPositionId","setRequestedPosts","setRequestExplanation","setFemaleOnPosition","setMaleOnPosition","setFormSteps","ONE","TWO","setStepState","RequestList","setSearchInput","searchInput","position","NoResult","StepsHeader","currentStep","stepState","RequestPostForm","GetAllowedPositions","postPositionIds","key","Object","prototype","hasOwnProperty","call","preventDefault","requestedPosts","requestExplanation","thisSchool","mySchool","positionId","maleOnPosition","femaleOnPosition","setSchoolLevel","selectedLevel","getPositionByLevelId","allPosition","levelId","school_level_id","formSteps","school_levels","school_level_name","ViewPosition","htmlFor","name","placements","request","RequestTeacher","receivedPosts","loadSchoolLevels","PostRequest"],"mappings":"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","file":"static/js/45.44aa00bd.chunk.js","sourcesContent":["import axios from \"axios\";\nimport React, { Component, Fragment } from \"react\";\nimport { GiTeacher } from \"react-icons/gi\";\nimport { MdInfoOutline } from \"react-icons/md\";\nimport { connect } from \"react-redux\";\nimport { Redirect } from \"react-router-dom\";\nimport {\n  Auth,\n  loadEducationCategories,\n  PushPopupAlert,\n  schoolLevelsStoreInterface,\n} from \"../../actions\";\nimport {\n  getDocumentCategory,\n  getDocumentSubCategory,\n} from \"../../actions/document\";\nimport {\n  fetchDistrictPosts,\n  getDistrictPlacement,\n  getDistrictPlacementLimit,\n  updateSchoolPost,\n} from \"../../actions/schools\";\nimport { getActiveAcademicSession } from \"../../actions/session\";\nimport { getPositions } from \"../../actions/settings\";\nimport { PopupAlertData } from \"../../components/Alert/Popup\";\nimport Modal, { Themes, ModalSize } from \"../../components/Modal/Modal\";\nimport NoResult, { NoResultThemes } from \"../../components/NoResult/NoResult\";\nimport Table, { TableColumnsInterface } from \"../../components/Table/Table\";\nimport { AcademicSessionInterface, PositionAPI } from \"../../interfaces\";\nimport {\n  placedCandidateInterface,\n  PlacedCandidateStatus,\n} from \"../../interfaces/marks_publication\";\nimport { PopupAlertTheme } from \"../../interfaces/popupAlert\";\nimport { StoreState } from \"../../reducers\";\nimport { DocumentReducerInterface } from \"../../reducers/document\";\nimport { getPositionById, isEmptyOrSpaces } from \"../../shared/dataTest\";\nimport {\n  PostSchoolInterface,\n  PostRequestStatusInterface,\n  DocumentSubCategoryInterface,\n} from \"../../shared/interfaces\";\nimport { API } from \"../../utils/api\";\nimport { errorToText } from \"../../utils/errors\";\nimport { DATE } from \"../../utils/functions\";\nimport { showRequestStatus } from \"../HeadTeacher/ReceivePost\";\nimport { getPlacementByRequest } from \"../HeadTeacher/RequestTeacher\";\nimport { PlacementListInterface } from \"../PlacementLimit/PlacementLimit\";\nimport ViewPosition from \"../Positions/ViewPosition\";\n\nconst defaultColumns: TableColumnsInterface[] = [\n  { columnTitle: \"SCHOOL\", alignText: \"left\", padding: \"p-3\" },\n  { columnTitle: \"POSITION\", alignText: \"left\", padding: \"p-3\" },\n  { columnTitle: \"Teacher F\", alignText: \"left\", padding: \"p-3\" },\n  { columnTitle: \"Teacher M\", alignText: \"left\", padding: \"p-3\" },\n  {\n    columnTitle: \"REQUESTED POSTS\",\n    alignText: \"left\",\n    padding: \"p-3\",\n  },\n  {\n    columnTitle: \"APPROVED POSTS\",\n    alignText: \"left\",\n    padding: \"p-3\",\n  },\n  { columnTitle: \"ALL POSTS\", alignText: \"left\", padding: \"p-3\" },\n  { columnTitle: \"ALL STAFF\", alignText: \"left\", padding: \"p-3\" },\n  { columnTitle: \"NEW STAFF\", alignText: \"left\", padding: \"p-3\" },\n  {\n    columnTitle: \"VACANT POSTS\",\n    alignText: \"left\",\n    padding: \"p-3\",\n  },\n  // { columnTitle: \"STATUS\", alignText: \"left\", padding: \"p-3\" },\n  { columnTitle: \"\", alignText: \"left\", padding: \"p-3\" },\n];\nconst editColumns: TableColumnsInterface[] = [\n  { columnTitle: \"SCHOOL\", alignText: \"left\", padding: \"p-3\" },\n  { columnTitle: \"POSITION\", alignText: \"left\", padding: \"p-3\" },\n  { columnTitle: \"Teacher F\", alignText: \"left\", padding: \"p-3\" },\n  { columnTitle: \"Teacher M\", alignText: \"left\", padding: \"p-3\" },\n  {\n    columnTitle: \"REQUESTED POSTS\",\n    alignText: \"left\",\n    padding: \"p-3\",\n  },\n  {\n    columnTitle: \"APPROVED POSTS\",\n    alignText: \"left\",\n    padding: \"p-3\",\n  },\n  { columnTitle: \"\", alignText: \"left\", padding: \"p-3\" },\n];\n\ntype TableDataType = {\n  post_id: string;\n  school_id: string;\n  school_name: string;\n  position_id: string;\n  position_name: string;\n  // NUMBER OF FEMALE PROVIDED BY HT\n  female: number;\n  // NUMBER OF MALE PROVIDED BY HT\n  male: number;\n  // NUMBER OF POST REQUESTED BY HT\n  requested_post: number;\n  // NUMBER OF POST APPROVED BY DDE\n  distributed_post: number;\n  // NUMBER OF ALL POST (APPROVED + FEMALE + MALE)\n  total_post: number;\n  // NUMBER OF ALL POST (RECEIVED + FEMALE + MALE)\n  total_staff: number;\n  // NUMBER OF ALL RECEIVED POST\n  new_teacher: number;\n  // NUMBER OF ALL (APPROVED - RECEIVED) POST\n  vacant_post: number;\n  status: PostRequestStatusInterface;\n};\n\ntype ConfirmedPostType = {\n  requested_post_id: string;\n  confirmed_posts: number;\n  confirmed_by: string;\n  approval_date: Date;\n  description: string;\n  requested_post_status: PostRequestStatusInterface;\n};\n\ntype AddRequest4PlacementType = {\n  school_id: string;\n  school_name: string;\n  request_id: string;\n  district_id: string;\n  sector_id: string;\n  province_id: string;\n  gender: \"M\" | \"F\";\n  available_places: {\n    position_id: string;\n    requested_teacher: number;\n  }[];\n};\n\ninterface AppProps {\n  auth: Auth;\n  systemPositions: PositionAPI[] | null;\n  districtPosts: PostSchoolInterface[];\n  districtPlacements: placedCandidateInterface[] | null;\n  document: DocumentReducerInterface;\n  schoolLevels: schoolLevelsStoreInterface;\n  activeAcademicSession: AcademicSessionInterface | \"none\" | null;\n  districtPlacementLimits: PlacementListInterface[] | null;\n  getPositions: Function;\n  fetchDistrictPosts: Function;\n  updateSchoolPost: Function;\n  getSchools: Function;\n  getDistrictPlacement: Function;\n  getDocumentCategory: Function;\n  getDocumentSubCategory: Function;\n  getActiveAcademicSession: Function;\n  getDistrictPlacementLimit: Function;\n  loadEducationCategories: (callback: (loading: boolean) => void) => void;\n  PushPopupAlert: (alert: PopupAlertData) => void;\n}\n\ninterface AppState {\n  modalState: \"CONFIRM\" | \"UPDATE\" | null;\n  filterByPosition: string;\n  institute_id: string;\n  category_id: string;\n  qualification_id: string;\n  loadingRequest: boolean;\n  loading: boolean;\n  loadingPost: boolean;\n  thisPost: PostSchoolInterface | null;\n  thisPostTable: TableDataType | null;\n  viewPost: boolean;\n  // TO BE REMOVED ===========\n  approvedPosts: number;\n  // END TO BE REMOVED ===========\n  selectedPostId: string;\n  leftPlacements: number;\n  confirmedPosts: ConfirmedPostType[] | null;\n  tableColumns: TableColumnsInterface[];\n  formError: {\n    element: string;\n    msg: string;\n  } | null;\n}\n\nexport class _District extends Component<AppProps, AppState> {\n  constructor(props: AppProps) {\n    super(props);\n\n    this.state = {\n      modalState: null,\n      filterByPosition: \"\",\n      institute_id: \"\",\n      category_id: \"\",\n      qualification_id: \"\",\n      loadingRequest: false,\n      loading: true,\n      loadingPost: true,\n      thisPost: null,\n      viewPost: false,\n      approvedPosts: 0,\n      selectedPostId: \"\",\n      formError: null,\n      thisPostTable: null,\n      confirmedPosts: null,\n      leftPlacements: 0,\n      tableColumns: defaultColumns,\n    };\n  }\n\n  setTableColumns = (data: TableColumnsInterface[]) => {\n    this.setState({ tableColumns: data });\n  };\n\n  setModalState = (value: \"CONFIRM\" | \"UPDATE\" | null) => {\n    this.setState({ modalState: value });\n  };\n\n  setFilterByPosition = (value: string) => {\n    this.setState({ filterByPosition: value });\n  };\n\n  setInstituteId = (value: string) => {\n    this.setState({ institute_id: value });\n  };\n\n  setCategoryId = (value: string) => {\n    this.setState({ category_id: value });\n  };\n\n  setQualificationId = (value: string) => {\n    this.setState({ qualification_id: value });\n  };\n\n  setLoadingRequest = (value: boolean) => {\n    this.setState({ loadingRequest: value });\n  };\n\n  setLoading = (value: boolean) => {\n    this.setState({ loading: value });\n  };\n\n  setLoadingPost = (value: boolean) => {\n    this.setState({ loadingPost: value });\n  };\n\n  setThisPost = (value: PostSchoolInterface | null) => {\n    this.setState({ thisPost: value });\n  };\n\n  setThisPostTable = (value: TableDataType | null) => {\n    this.setState({ thisPostTable: value });\n  };\n\n  setConfirmedPosts = (value: ConfirmedPostType[] | null) => {\n    this.setState({ confirmedPosts: value });\n  };\n\n  setLeftPlacement = (data: number) => {\n    this.setState({ leftPlacements: data });\n  };\n\n  setViewPost = (value: boolean) => {\n    this.setState({ viewPost: value });\n  };\n\n  setApprovedPosts = (value: number) => {\n    this.setState({ approvedPosts: value });\n  };\n\n  setFormError = (\n    value: {\n      element: string;\n      msg: string;\n    } | null\n  ) => {\n    this.setState({ formError: value });\n  };\n\n  setSelectedPostId = (data: string) => {\n    this.setState({ selectedPostId: data });\n  };\n\n  assignConfirmedPost = (\n    thisPost: TableDataType,\n    value: number,\n    postRequests: TableDataType[]\n  ) => {\n    let data: ConfirmedPostType[] = [];\n    const limit = this.getLimitations(\n      postRequests,\n      this.props.districtPlacementLimits!,\n      thisPost.post_id\n    );\n    if (\n      value > thisPost.requested_post ||\n      limit.distributed + value > limit.general\n    )\n      return this.props.PushPopupAlert({\n        title: `Incorrect value!`,\n        theme: PopupAlertTheme.warning,\n      });\n    if (this.state.confirmedPosts) {\n      data = [...this.state.confirmedPosts];\n      const postIndex = data.findIndex(\n        (item) => item.requested_post_id === thisPost.post_id\n      );\n      if (postIndex >= 0) {\n        data[postIndex].confirmed_posts = value;\n        data[postIndex].approval_date = new Date();\n      } else {\n        data.push({\n          requested_post_id: thisPost.post_id,\n          confirmed_posts: value,\n          confirmed_by: this.props.auth.user.user_id,\n          approval_date: new Date(),\n          description: \"Not defined\",\n          requested_post_status: PostRequestStatusInterface.CONFIRMED,\n        });\n      }\n    } else {\n      data.push({\n        requested_post_id: thisPost.post_id,\n        confirmed_posts: value,\n        confirmed_by: this.props.auth.user.user_id,\n        approval_date: new Date(),\n        description: \"Not defined\",\n        requested_post_status: PostRequestStatusInterface.CONFIRMED,\n      });\n    }\n    this.setConfirmedPosts(data);\n  };\n\n  getAssignedValuePost = (postId: string): number => {\n    let result: number = 0;\n    if (this.state.confirmedPosts) {\n      const thisPost = this.state.confirmedPosts.find(\n        (item) => item.requested_post_id === postId\n      );\n      if (thisPost) result = thisPost.confirmed_posts;\n    }\n    return result;\n  };\n\n  loadData = (sessionId: string) => {\n    if (!this.props.document.documentCategory) {\n      this.props.getDocumentCategory();\n    }\n    if (!this.props.document.documentSubCategory) {\n      this.props.getDocumentSubCategory();\n    }\n    if (this.props.systemPositions === null) {\n      this.setLoading(true);\n      this.props.getPositions((status: boolean, msg: string) => {\n        this.setLoading(status);\n        console.log({ status: status, msg: msg });\n        if (msg.length) {\n          this.props.PushPopupAlert({\n            title: msg,\n            theme: PopupAlertTheme.danger,\n          });\n        }\n      });\n    }\n    if (!this.props.districtPosts.length && this.state.loadingPost) {\n      this.props.fetchDistrictPosts(\n        this.props.auth.user_access.district_id,\n        (status: boolean, message: string) => {\n          this.setLoadingPost(status);\n          if (!status) {\n            if (message.length > 0 && this.state.loadingPost) {\n              console.error(\"error loading school post: \", message);\n              this.props.PushPopupAlert({\n                title: message,\n                theme: PopupAlertTheme.danger,\n              });\n            }\n          }\n        }\n      );\n    } else if (this.state.loadingPost) {\n      this.setLoadingPost(false);\n    }\n\n    if (!this.props.districtPlacements) {\n      this.props.getDistrictPlacement(\n        this.props.auth.user_access.district_id,\n        (status: boolean, message: string) => {\n          this.setLoading(status);\n          if (!status) {\n            if (message.length > 0 && status) {\n              console.error(\"error loading school post: \", message);\n              this.props.PushPopupAlert({\n                title: message,\n                theme: PopupAlertTheme.danger,\n              });\n            }\n          }\n        }\n      );\n    } else if (this.state.loading) {\n      this.setLoading(false);\n    }\n    if (\n      this.props.schoolLevels.education_categories === null ||\n      this.props.schoolLevels.education_categories.length === 0\n    ) {\n      this.setLoading(true);\n      this.props.loadEducationCategories(this.setLoading);\n    }\n    if (!this.props.districtPlacementLimits) {\n      this.props.getDistrictPlacementLimit(\n        this.props.auth.user_access.district_id,\n        sessionId,\n        (status: boolean, message: string) => {\n          this.setLoading(status);\n          if (!status) {\n            if (message.length > 0 && status) {\n              console.error(\n                \"error loading getDistrictPlacementLimit: \",\n                message\n              );\n              this.props.PushPopupAlert({\n                title: message,\n                theme: PopupAlertTheme.danger,\n              });\n            }\n          }\n        }\n      );\n    } else if (this.state.loading) {\n      this.setLoading(false);\n    }\n  };\n\n  componentDidMount = () => {\n    if (!isEmptyOrSpaces(this.props.auth.user_access.district_id)) {\n      if (\n        this.props.activeAcademicSession === null ||\n        this.props.activeAcademicSession === \"none\"\n      ) {\n        this.props.getActiveAcademicSession(\n          (\n            status: boolean,\n            msg: string,\n            data?: AcademicSessionInterface | \"none\"\n          ) => {\n            this.setLoading(status);\n            if (msg.length > 0) {\n              console.error({ loadingCandidatesError: msg });\n              this.props.PushPopupAlert({\n                title: msg,\n                theme: PopupAlertTheme.danger,\n              });\n            }\n            if (data && data !== \"none\") this.loadData(data._id);\n          }\n        );\n      } else this.loadData(this.props.activeAcademicSession._id);\n    }\n  };\n\n  doPlacement = async (thisPost: PostSchoolInterface) => {\n    try {\n      const res = await axios.post<any[]>(\n        `${API.PLACEMENT}/doplace/${thisPost.school_id}/${thisPost.position_id}`,\n        { request_id: thisPost._id }\n      );\n\n      if (res) {\n        console.log(\"====================================\");\n        console.log({ doPlacement: res });\n        console.log(\"====================================\");\n        this.props.fetchDistrictPosts(\n          this.props.auth.user_access.district_id,\n          (status: boolean, message: string) => {\n            if (!status) {\n              if (message.length > 0 && this.state.loadingPost) {\n                console.error(\"error loading school post: \", message);\n                this.props.PushPopupAlert({\n                  title: message,\n                  theme: PopupAlertTheme.danger,\n                });\n              }\n              this.setLoadingPost(false);\n            }\n          }\n        );\n\n        let msgAlert: string = \"\";\n        if (res.data.length > 0) {\n          if (res.data.length === this.state.approvedPosts) {\n            msgAlert = \"All confirmed posts has been placed on school!\";\n          } else {\n            msgAlert = `${res.data.length} of ${this.state.approvedPosts} post(s) has been placed on school!`;\n          }\n        } else {\n          msgAlert = \"Post request has been confirmed but no placement done!\";\n        }\n\n        this.setThisPost(null);\n        this.setApprovedPosts(0);\n        this.setModalState(null);\n        this.setThisPostTable(null);\n        this.setTableColumns(defaultColumns);\n        this.setSelectedPostId(\"\");\n        this.setConfirmedPosts(null);\n        this.props.PushPopupAlert({\n          title: msgAlert,\n          theme:\n            res.data.length > 0\n              ? PopupAlertTheme.success\n              : PopupAlertTheme.info,\n        });\n      }\n    } catch (error) {\n      console.error({ doPlacement_reply: error });\n      this.props.PushPopupAlert({\n        title: errorToText(error),\n        theme: PopupAlertTheme.danger,\n      });\n    }\n  };\n\n  reDoPlacement = async (thisPost: PostSchoolInterface) => {\n    try {\n      const res = await axios.post<any[]>(\n        `${API.PLACEMENT}/doplace/${thisPost.school_id}/${thisPost.position_id}`,\n        { request_id: thisPost._id }\n      );\n\n      if (res) {\n        console.log(\"====================================\");\n        console.log({ reDoPlacement: res });\n        console.log(\"====================================\");\n        this.props.fetchDistrictPosts(\n          this.props.auth.user_access.district_id,\n          (status: boolean, message: string) => {\n            if (!status) {\n              if (message.length > 0 && this.state.loadingPost) {\n                console.error(\"error loading school post: \", message);\n                this.props.PushPopupAlert({\n                  title: message,\n                  theme: PopupAlertTheme.danger,\n                });\n              }\n              this.setLoadingPost(false);\n            }\n          }\n        );\n\n        let msgAlert: string = \"\";\n        if (res.data.length > 0) {\n          if (res.data.length === this.state.approvedPosts) {\n            msgAlert = \"All confirmed posts has been placed on school!\";\n          } else {\n            msgAlert = `${res.data.length} of ${\n              thisPost.occupied_posts\n                ? thisPost.occupied_posts -\n                  (thisPost.received_posts ? thisPost.received_posts : 0)\n                : 0\n            } post(s) has been placed on school!`;\n          }\n        } else {\n          msgAlert =\n            \"Placement failed, Please wait for the next application period!\";\n        }\n\n        this.props.PushPopupAlert({\n          title: msgAlert,\n          theme:\n            res.data.length > 0\n              ? PopupAlertTheme.success\n              : PopupAlertTheme.info,\n        });\n      }\n    } catch (error) {\n      console.error({ doPlacement_reply: error });\n      this.props.PushPopupAlert({\n        title: errorToText(error),\n        theme: PopupAlertTheme.danger,\n      });\n    }\n  };\n\n  generateDataForSchoolRequest = (\n    confirmedPosts: ConfirmedPostType[]\n  ): { requests: AddRequest4PlacementType[]; posts: PostSchoolInterface[] } => {\n    let school_ids: string[] = [],\n      requests: AddRequest4PlacementType[] = [],\n      posts: PostSchoolInterface[] = [];\n\n    if (this.props.districtPosts) {\n      confirmedPosts.forEach((confirmed) => {\n        const thisPost = this.props.districtPosts.find(\n          (item) => item._id === confirmed.requested_post_id\n        );\n        if (thisPost) {\n          posts.push(thisPost);\n          if (school_ids.includes(thisPost.school_id)) {\n            const schoolIndex = requests.findIndex(\n              (item) => item.school_id === thisPost.school_id\n            );\n            const positionIndex = requests[\n              schoolIndex\n            ].available_places.findIndex(\n              (item) => item.position_id === thisPost.position_id\n            );\n            if (positionIndex < 0) {\n              requests[schoolIndex].available_places.push({\n                position_id: thisPost.position_id,\n                requested_teacher: confirmed.confirmed_posts,\n              });\n            }\n          } else\n            requests.push({\n              school_id: thisPost.school._id,\n              school_name: thisPost.school.school_name,\n              request_id: thisPost._id,\n              district_id: thisPost.district_id,\n              sector_id: thisPost.school.sector_id,\n              province_id: thisPost.school.province_id,\n              gender: thisPost.male_number > thisPost.female_number ? \"F\" : \"M\",\n              available_places: [\n                {\n                  position_id: thisPost.position_id,\n                  requested_teacher: confirmed.confirmed_posts,\n                },\n              ],\n            });\n        }\n      });\n    }\n\n    return { requests, posts };\n  };\n\n  addSchoolRequest = async (\n    dataForm: AddRequest4PlacementType[],\n    thisPost: PostSchoolInterface[]\n  ) => {\n    // const dataForm: AddRequest4PlacementType[] = [\n    //   {\n    //     school_id: thisPost.school._id,\n    //     school_name: thisPost.school.school_name,\n    //     request_id: thisPost._id,\n    //     district_id: thisPost.district_id,\n    //     sector_id: thisPost.school.sector_id,\n    //     province_id: thisPost.school.province_id,\n    //     gender: thisPost.male_number > thisPost.female_number ? \"F\" : \"M\",\n    //     available_places: [\n    //       {\n    //         position_id: thisPost.position_id,\n    //         requested_teacher: this.state.approvedPosts,\n    //       },\n    //     ],\n    //   },\n    // ];\n\n    let data = { requested_teachers: dataForm };\n\n    try {\n      const res = await axios.post(`${API.PLACEMENT}/requestteachers/`, data);\n\n      if (res) {\n        console.log(\"====================================\");\n        console.log({ addSchoolRequest: res });\n        console.log(\"====================================\");\n        await this.doPlacement(thisPost[0]);\n      }\n    } catch (error) {\n      console.error({ addSchoolRequest_reply: error });\n      this.props.PushPopupAlert({\n        title: errorToText(error),\n        theme: PopupAlertTheme.danger,\n      });\n    }\n  };\n\n  submitRequest = async () => {\n    // e.preventDefault();\n    // if (!this.state.thisPost) {\n    //   return;\n    // }\n\n    if (!this.state.confirmedPosts || this.state.confirmedPosts.length === 0) {\n      return this.setFormError({\n        element: \"approved_posts\",\n        msg: \"Invalid number of approved post\",\n      });\n    }\n\n    // if (this.state.approvedPosts > this.state.thisPost.needed_posts) {\n    //   return this.setFormError({\n    //     element: \"approved_posts\",\n    //     msg: \"Approved post can't be greater than needed post\",\n    //   });\n    // }\n\n    this.setLoadingRequest(true);\n    try {\n      if (this.state.modalState === \"CONFIRM\") {\n        const res = await axios.patch<{ data: PostSchoolInterface }>(\n          `${API.PLACEMENT}/requestpostdistributed`,\n          { confirmedPost: this.state.confirmedPosts }\n        );\n        if (res) {\n          // props.updateSchoolPost(\"SCHOOL\", res.data.data);\n          // this.generateDataForSchoolRequest(this.state.confirmedPosts)\n          await this.addSchoolRequest(\n            this.generateDataForSchoolRequest(this.state.confirmedPosts)\n              .requests,\n            this.generateDataForSchoolRequest(this.state.confirmedPosts).posts\n          );\n        }\n      }\n    } catch (error) {\n      console.error({ post_relpy: error });\n      this.props.PushPopupAlert({\n        title: errorToText(error),\n        theme: PopupAlertTheme.danger,\n      });\n    }\n    this.setLoadingRequest(false);\n  };\n\n  filterQualifications = (\n    allData: DocumentSubCategoryInterface[],\n    categoryId: string\n  ): DocumentSubCategoryInterface[] => {\n    let result: DocumentSubCategoryInterface[] = allData;\n\n    if (!isEmptyOrSpaces(categoryId))\n      result = allData.filter((item) => item.category_id === categoryId);\n    return result;\n  };\n\n  generateFormData = (\n    institute_id: string,\n    qualification_id: string\n  ): TableDataType[] | null => {\n    let result: TableDataType[] | null = null;\n\n    if (\n      !isEmptyOrSpaces(institute_id) &&\n      !isEmptyOrSpaces(qualification_id) &&\n      this.props.systemPositions &&\n      this.props.districtPosts\n    ) {\n      // GET ALL NEEDED POSITION BY INSTITUTION ID && SUBCATEGORY/QUALIFICATION ID =======\n      const neededPositions = this.props.systemPositions.filter(\n        (item) =>\n          item.subcategory_id === qualification_id &&\n          item.education_institute_id.education_institute_id === institute_id\n      );\n\n      // GET ALL NEEDED POSITION BY INSTITUTION ID && SUBCATEGORY/QUALIFICATION ID =======\n      this.props.districtPosts.forEach((post) => {\n        const thisPosition = neededPositions.find(\n          (item) => item.position_id === post.position_id\n        );\n        if (thisPosition) {\n          if (result === null) {\n            result = [\n              {\n                post_id: post._id,\n                school_id: post.school_id,\n                school_name: post.school.school_name,\n                position_id: thisPosition.position_id,\n                position_name: thisPosition.position_title,\n                female: post.female_number,\n                male: post.male_number,\n                requested_post: post.needed_posts,\n                distributed_post: post.confirmed_posts\n                  ? post.confirmed_posts\n                  : 0,\n                total_post:\n                  post.female_number +\n                  post.male_number +\n                  (post.confirmed_posts ? post.confirmed_posts : 0),\n                total_staff:\n                  post.female_number +\n                  post.male_number +\n                  (post.received_posts ? post.received_posts : 0),\n                new_teacher: post.received_posts ? post.received_posts : 0,\n                vacant_post:\n                  (post.confirmed_posts ? post.confirmed_posts : 0) -\n                  (post.received_posts ? post.received_posts : 0),\n                status: post.requested_post_status,\n              },\n            ];\n          } else {\n            result.push({\n              post_id: post._id,\n              school_id: post.school_id,\n              school_name: post.school.school_name,\n              position_id: thisPosition.position_id,\n              position_name: thisPosition.position_title,\n              female: post.female_number,\n              male: post.male_number,\n              requested_post: post.needed_posts,\n              distributed_post: post.confirmed_posts ? post.confirmed_posts : 0,\n              total_post:\n                post.female_number +\n                post.male_number +\n                (post.confirmed_posts ? post.confirmed_posts : 0),\n              total_staff:\n                post.female_number +\n                post.male_number +\n                (post.received_posts ? post.received_posts : 0),\n              new_teacher: post.received_posts ? post.received_posts : 0,\n              vacant_post:\n                (post.confirmed_posts ? post.confirmed_posts : 0) -\n                (post.received_posts ? post.received_posts : 0),\n              status: post.requested_post_status,\n            });\n          }\n        }\n      });\n    }\n\n    return result;\n  };\n\n  getAllowedPlacementByDegree = (\n    allLimits: PlacementListInterface[],\n    degree: string\n  ): number => {\n    let result: number = 0;\n    let session: string =\n      this.props.activeAcademicSession &&\n      this.props.activeAcademicSession !== \"none\"\n        ? this.props.activeAcademicSession!._id\n        : \"\";\n    const thisLimit = allLimits.find(\n      (item) =>\n        item.institution_id === this.state.institute_id &&\n        item.subcategory_id === degree &&\n        item.post_request_session_id === session\n    );\n    if (thisLimit) result = thisLimit.confirmed_post;\n    return result;\n  };\n\n  getLimitations = (\n    postRequests: TableDataType[],\n    allLimits: PlacementListInterface[],\n    currentPostId: string = \"\"\n  ) => {\n    let general: number = 0,\n      _withExcept: number = 0,\n      _withoutExcept: number = 0;\n    const thisLimit = allLimits.find(\n      (item) =>\n        item.institution_id === this.state.institute_id &&\n        this.props.activeAcademicSession! !== \"none\" &&\n        item.post_request_session_id ===\n          this.props.activeAcademicSession!._id &&\n        item.subcategory_id === this.state.qualification_id\n    );\n    general = thisLimit ? thisLimit.confirmed_post : 0;\n    if (general > 0) {\n      postRequests.forEach((postRequest) => {\n        const fromForm = this.state.confirmedPosts\n          ? this.state.confirmedPosts.find(\n              (item) => item.requested_post_id === postRequest.post_id\n            )\n          : undefined;\n        if (postRequest.post_id === currentPostId)\n          _withExcept += postRequest.total_post - postRequest.distributed_post;\n        else\n          _withExcept +=\n            postRequest.total_post -\n            postRequest.distributed_post +\n            (fromForm ? fromForm!.confirmed_posts : 0);\n        _withoutExcept +=\n          postRequest.total_post + (fromForm ? fromForm!.confirmed_posts : 0);\n      });\n    }\n    return {\n      general,\n      distributed: _withExcept,\n      allDistributed: _withoutExcept,\n    };\n  };\n\n  tableData = (): JSX.Element[] => {\n    if (this.state.loadingPost || this.props.districtPlacementLimits === null) {\n      return [\n        <tr key={1} className=\"border-b border-gray-200 hover:bg-gray-100\">\n          <td className=\"p-3 text-center\" colSpan={11}>\n            Loading post request(s)\n          </td>\n        </tr>,\n      ];\n    }\n\n    if (\n      !this.generateFormData(\n        this.state.institute_id,\n        this.state.qualification_id\n      )\n    ) {\n      return [\n        <tr key={1} className=\"border-b border-gray-200 hover:bg-gray-100\">\n          <td className=\"p-3 text-center\" colSpan={11}>\n            <NoResult\n              theme={NoResultThemes.Dark}\n              value={\"Select institute and Qualification to view request!\"}\n            />\n          </td>\n        </tr>,\n      ];\n    }\n\n    let data = this.generateFormData(\n      this.state.institute_id,\n      this.state.qualification_id\n    )!;\n\n    if (data.length === 0) {\n      return [\n        <tr key={1} className=\"border-b border-gray-200 hover:bg-gray-100\">\n          <td className=\"p-3 text-center\" colSpan={10}>\n            No Data Found\n          </td>\n        </tr>,\n      ];\n    }\n\n    console.log(\"====================================\");\n    console.log({ dataTable: data });\n    console.log(\"====================================\");\n\n    return data.map((schoolPost, index) => (\n      <tr\n        key={index + schoolPost.post_id}\n        className=\"border-b border-gray-200 hover:bg-gray-100 group\"\n      >\n        <td className=\"py-3 px-4 text-left\">{index + 1}</td>\n        <td className=\"py-3 px-4 text-left\">{schoolPost.school_name}</td>\n        <td className=\"py-3 px-4 text-left\">{schoolPost.position_name}</td>\n        <td className=\"py-3 px-4 text-left text-base font-bold\">\n          {schoolPost.female}\n        </td>\n        <td className=\"py-3 px-4 text-left text-base font-bold\">\n          {schoolPost.male}\n        </td>\n        <td className=\"py-3 px-4 text-left text-base font-bold\">\n          {schoolPost.requested_post}\n        </td>\n        <td className=\"py-3 px-4 text-left text-base font-medium\">\n          {this.state.thisPostTable && this.state.modalState !== null ? (\n            <input\n              type=\"number\"\n              value={this.getAssignedValuePost(schoolPost.post_id)}\n              className=\"rounded border px-2 py-1 w-28\"\n              autoFocus={\n                schoolPost.post_id === this.state.thisPostTable.post_id\n              }\n              onChange={(e) =>\n                this.assignConfirmedPost(\n                  schoolPost,\n                  Number(e.target.value),\n                  data\n                )\n              }\n              onFocus={() => this.setSelectedPostId(schoolPost.post_id)}\n              // onBlur={() => this.setSelectedPostId(\"\")}\n              disabled={this.state.loadingRequest}\n            />\n          ) : schoolPost.status !== PostRequestStatusInterface.INITIATED ? (\n            schoolPost.distributed_post\n          ) : (\n            \"-\"\n          )}\n        </td>\n        {!this.state.thisPostTable && (\n          <Fragment>\n            <td className=\"py-3 px-4 text-left text-base font-medium\">\n              {schoolPost.total_post}\n            </td>\n            <td className=\"py-3 px-4 text-left text-base font-medium\">\n              {schoolPost.total_staff}\n            </td>\n            <td className=\"py-3 px-4 text-left text-base font-medium\">\n              {schoolPost.status === PostRequestStatusInterface.RECEIVED\n                ? schoolPost.new_teacher\n                : \"-\"}\n            </td>\n            <td className=\"py-3 px-4 text-left text-base font-medium\">\n              {schoolPost.status !== PostRequestStatusInterface.INITIATED\n                ? schoolPost.vacant_post\n                : \"-\"}\n            </td>\n          </Fragment>\n        )}\n        <td className=\"py- text-left\">\n          {schoolPost.post_id === this.state.selectedPostId && (\n            <div className=\"flex items-center gap-3\">\n              <div\n                className=\"rounded text-gray-500\n                text-base font-bold\"\n              >\n                <span className=\"text-black\">\n                  {this.getLimitations(\n                    data,\n                    this.props.districtPlacementLimits!,\n                    schoolPost.post_id\n                  ).distributed + this.getAssignedValuePost(schoolPost.post_id)}\n                </span>{\" \"}\n                of{\" \"}\n                {\n                  this.getLimitations(\n                    data,\n                    this.props.districtPlacementLimits!,\n                    schoolPost.post_id\n                  ).general\n                }\n              </div>\n              <button\n                className={`btn bg-blue-100 text-blue-500 group-hover:bg-blue-500 group-hover:text-blue-50 ${\n                  this.state.loadingRequest && \"cursor-wait\"\n                }`}\n                title=\"Save changes\"\n                onClick={() => this.submitRequest()}\n                disabled={this.state.loadingRequest}\n              >\n                {!this.state.loadingRequest ? \"Save\" : \"Loading...\"}\n              </button>\n              <button\n                className={`btn bg-gray-100 text-gray-500 group-hover:bg-gray-500 group-hover:text-gray-50 ${\n                  this.state.loadingRequest && \"cursor-not-allowed\"\n                }`}\n                title=\"Cancel changes\"\n                onClick={() => {\n                  this.setThisPostTable(null);\n                  this.setModalState(null);\n                  this.setTableColumns(defaultColumns);\n                  this.setSelectedPostId(\"\");\n                  this.setConfirmedPosts(null);\n                }}\n                disabled={this.state.loadingRequest}\n              >\n                Cancel\n              </button>\n            </div>\n          )}\n          {this.state.thisPostTable === null && this.state.modalState === null && (\n            <div className=\"flex item-center justify-end gap-1\">\n              {this.getAllowedPlacementByDegree(\n                this.props.districtPlacementLimits!,\n                this.state.qualification_id\n              ) > 0 &&\n                schoolPost.status === PostRequestStatusInterface.INITIATED && (\n                  <button\n                    className=\"btn btn-blue\"\n                    title=\"View User Profile\"\n                    onClick={() => {\n                      this.setThisPostTable(schoolPost);\n                      this.setModalState(\"CONFIRM\");\n                      this.setTableColumns(editColumns);\n                    }}\n                  >\n                    Reply\n                  </button>\n                )}\n              {/* <button\n                className=\"\n                btn\n                bg-gray-400\n                text-gray-50\n                hover:bg-gray-600\n                transition\n                ease-out\n                duration-500\n                flex items-center\n              \"\n                title=\"Request details\"\n                // onClick={() => {\n                //   this.setThisPost(schoolPost);\n                //   this.setViewPost(true);\n                // }}\n              >\n                Details\n              </button> */}\n            </div>\n          )}\n        </td>\n      </tr>\n    ));\n  };\n\n  render() {\n    if (isEmptyOrSpaces(this.props.auth.user_access.district_id)) {\n      return <Redirect to=\"/\" />;\n    }\n\n    if (\n      this.props.activeAcademicSession !== null &&\n      this.props.activeAcademicSession === \"none\"\n    ) {\n      return (\n        <div className=\"bg-yellow-100 rounded flex flex-col items-center justify-center p-6 my-8 text-yellow-900 border border-yellow-900\">\n          <MdInfoOutline className=\"text-6xl md:text-9xl\" />\n          <div className=\"text-center flex flex-col\">\n            <span className=\"text-2xl md:text-4xl font-extrabold\">\n              No academic active session\n            </span>\n            <span className=\"text-lg\">\n              Please Wait for the system to publish the sessions or contact the\n              administrator\n            </span>\n          </div>\n        </div>\n      );\n    }\n\n    if (this.state.loading || this.state.loadingPost) {\n      return (\n        <div className=\"text-center mt-7 font-bold text-4xl text-gray-400 animate-pulse\">\n          Loading data...\n        </div>\n      );\n    }\n\n    return (\n      <div>\n        {/* header title */}\n        <div className=\"flex flex-row items-start gap-4 my-2 overflow-x-auto\">\n          <GiTeacher className=\"text-blue-600 text-5xl md:block hidden\" />\n          <div className=\"w-full\">\n            <div className=\"flex justify-between w-full\">\n              <div className=\"flex flex-col gap-1 justify-between\">\n                <h1 className=\"md:text-4xl text-3xl font-semibold\">\n                  Schools requests\n                </h1>\n                <div className=\"flex-row items-center md:gap-3 gap-2\">\n                  <div className=\"flex flex-row items-center gap-1\">\n                    <span className=\"text-gray-600 text-lg\">\n                      Academic session:\n                    </span>\n                    <span className=\"text-gray-600 font-semibold text-xl\">\n                      {this.props.activeAcademicSession?.title}\n                    </span>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n        {/* end header title */}\n\n        {/* ----------------------------------------------------------------------------- */}\n\n        {/* CONTENT BODY */}\n        <div className=\"bg-white shadow-md p-2 rounded overflow-x-auto\">\n          <div className=\"my-2 grid grid-cols-1 sm:grid-cols-3 items-center gap-2\">\n            {/* SELECT INSTITUTE */}\n            <select\n              className=\"border-2 w-full md:w-auto border-gray-700 bg-white p-2 rounded focus:outline-none\"\n              value={this.state.institute_id}\n              onChange={(e) => {\n                this.setInstituteId(e.target.value);\n                this.setLeftPlacement(0);\n              }}\n              disabled={\n                this.state.thisPostTable !== null ||\n                this.state.modalState !== null\n              }\n            >\n              <option value=\"\">Select Institute</option>\n              {this.props.schoolLevels.education_categories &&\n              this.props.schoolLevels.education_categories.length > 0 ? (\n                this.props.schoolLevels.education_categories.map(\n                  (institute, index) => (\n                    <option\n                      key={index + 1}\n                      value={institute.education_institute_id}\n                    >\n                      {institute.education_category_title}\n                    </option>\n                  )\n                )\n              ) : (\n                <option value=\"\">No institute found</option>\n              )}\n            </select>\n\n            {/* SELECT CATEGORY */}\n            <select\n              className=\"w-full md:w-auto border-2 border-gray-700 bg-white p-2 rounded focus:outline-none\"\n              value={this.state.category_id}\n              onChange={(e) => this.setCategoryId(e.target.value)}\n              disabled={\n                this.state.thisPostTable !== null ||\n                this.state.modalState !== null\n              }\n            >\n              <option value=\"\">Document category</option>\n              {this.props.document.documentCategory &&\n              this.props.document.documentCategory.length > 0 ? (\n                this.props.document.documentCategory.map((category, index) => (\n                  <option\n                    key={index + 1}\n                    value={category.user_detail_category_id}\n                  >\n                    {category.title}\n                  </option>\n                ))\n              ) : (\n                <option value=\"\">No document category found</option>\n              )}\n            </select>\n\n            {/* SELECT SUB-CATEGORY <==> QUALIFICATION */}\n            <select\n              className=\"w-full md:w-auto border-2 border-gray-700 bg-white p-2 rounded focus:outline-none\"\n              value={this.state.qualification_id}\n              onChange={(e) => {\n                this.setQualificationId(e.target.value);\n                this.setLeftPlacement(0);\n              }}\n              disabled={\n                this.state.thisPostTable !== null ||\n                this.state.modalState !== null\n              }\n            >\n              <option value=\"\">Select Qualification</option>\n              {this.props.document.documentSubCategory &&\n              this.filterQualifications(\n                this.props.document.documentSubCategory,\n                this.state.category_id\n              ).length > 0 ? (\n                this.filterQualifications(\n                  this.props.document.documentSubCategory,\n                  this.state.category_id\n                ).map((qualification, index) => (\n                  <option\n                    key={index + 1}\n                    value={qualification.user_detail_subcategory_id}\n                  >\n                    {qualification.title}\n                  </option>\n                ))\n              ) : (\n                <option value=\"\">No qualification found</option>\n              )}\n            </select>\n          </div>\n          <Table\n            columns={this.state.tableColumns}\n            rows={this.tableData}\n            pagination={true}\n            search={true}\n            thColor=\"gray\"\n          />\n        </div>\n        {/* END CONTENT BODY */}\n\n        {/* ----------------------------------------------------------------------------- */}\n\n        {/* RESPOND TO REQUEST Modal */}\n        {this.state.modalState &&\n          this.state.thisPost &&\n          this.props.systemPositions && (\n            <Modal\n              backDrop={true}\n              theme={Themes.default}\n              close={(): void => {\n                this.setThisPost(null);\n                this.setModalState(null);\n              }}\n              displayClose={true}\n              backDropClose={false}\n              title={\n                <div className=\"flex flex-row gap-4 items-center\">\n                  <div className=\"flex flex-col\">\n                    <span className=\"font-bold text-2xl text-gray-500\">\n                      Responding to requested post\n                    </span>\n                  </div>\n                </div>\n              }\n              widthSizeClass={ModalSize.large}\n              padding={{ title: true, body: false, footer: false }}\n            >\n              <div className=\"px-4 mx-auto mb-4 mt-3\">\n                <div className=\"flex flex-col gap-3\">\n                  {/* LEFT SIDE OF THE SYSTEM ================================== */}\n                  <div className=\"rounded bg-gray-100 border p-2\">\n                    <table>\n                      <tbody>\n                        <tr>\n                          <td className=\"text-lg text-gray-700\">School:</td>\n                          <td className=\"font-medium px-4 text-lg text-gray-700\">\n                            {this.state.thisPost.school.school_name}\n                          </td>\n                        </tr>\n                        <tr>\n                          <td className=\"text-lg text-gray-700\">Position:</td>\n                          <td className=\"font-medium px-4 text-lg text-gray-700\">\n                            {getPositionById(\n                              this.props.systemPositions,\n                              this.state.thisPost.position_id\n                            )\n                              ? getPositionById(\n                                  this.props.systemPositions,\n                                  this.state.thisPost.position_id\n                                )!.position_title\n                              : \"\"}\n                          </td>\n                        </tr>\n                        <tr>\n                          <td className=\"text-lg text-gray-700\">\n                            Needed posts (number):\n                          </td>\n                          <td className=\"font-medium px-4 text-lg text-gray-700\">\n                            {this.state.thisPost.needed_posts}\n                          </td>\n                        </tr>\n                        <tr>\n                          <td className=\"text-lg text-gray-700\">\n                            Occupation (number):\n                          </td>\n                          <td className=\"font-medium px-4 text-lg text-gray-700\">\n                            {this.state.thisPost.occupied_posts}\n                          </td>\n                        </tr>\n                        <tr>\n                          <td className=\"text-lg text-gray-700\">\n                            Explanation:\n                          </td>\n                          <td className=\"font-medium px-4 text-lg text-gray-700\">\n                            {this.state.thisPost.description}\n                          </td>\n                        </tr>\n                        <tr>\n                          <td className=\"text-lg text-gray-700\">\n                            Requested date:\n                          </td>\n                          <td className=\"font-medium px-4 text-lg text-gray-700\">\n                            {DATE(this.state.thisPost.request_date.toString())}\n                          </td>\n                        </tr>\n                      </tbody>\n                    </table>\n                  </div>\n                  {/* END LEFT SIDE OF THE SYSTEM ================================== */}\n\n                  {/* --------------------------------------------------------------------- */}\n\n                  <div className=\"bg-white\">\n                    <form onSubmit={this.submitRequest}>\n                      <div className=\"text-base leading-6 space-y-4 text-gray-700 sm:text-lg sm:leading-7\">\n                        <div className=\"flex flex-col\">\n                          <label>Approved posts (number)</label>\n                          <input\n                            type=\"number\"\n                            className={`appearance-none rounded w-full py-1 px-4 border-2 bg-white focus:outline-none focus:bg-gray-100 ${\n                              this.state.formError !== null &&\n                              this.state.formError.element === \"approved_posts\"\n                                ? \"border-red-500\"\n                                : \"border-gray-700\"\n                            }`}\n                            value={this.state.approvedPosts}\n                            onChange={(e) => {\n                              this.setApprovedPosts(Number(e.target.value));\n                            }}\n                            min={0}\n                            max={this.state.thisPost.needed_posts}\n                            placeholder=\"1\"\n                            disabled={this.state.loadingRequest}\n                          />\n                          {this.state.formError !== null &&\n                            this.state.formError.element ===\n                              \"approved_posts\" && (\n                              <span className=\"text-red-600 font-bold text-xs\">\n                                {this.state.formError.msg}\n                              </span>\n                            )}\n                        </div>\n                      </div>\n                      <div className=\"pt-4 flex justify-between\">\n                        <button\n                          className=\"btn bg-gray-400 text-white hover:bg-gray-600\"\n                          onClick={() => {\n                            this.setThisPost(null);\n                            this.setApprovedPosts(0);\n                            this.setModalState(null);\n                          }}\n                        >\n                          Exit\n                        </button>\n                        <button\n                          className=\"btn bg-primary text-white hover:bg-blue-600\"\n                          disabled={this.state.loadingRequest}\n                        >\n                          {this.state.loadingRequest ? \"Loading...\" : \"Respond\"}\n                        </button>\n                      </div>\n                    </form>\n                  </div>\n                </div>\n              </div>\n            </Modal>\n          )}\n        {/* End of RESPOND TO REQUEST Modal */}\n\n        {/* ----------------------------------------------------------------------------- */}\n\n        {this.state.viewPost &&\n          this.state.modalState === null &&\n          this.state.thisPost &&\n          this.props.systemPositions && (\n            <Modal\n              backDrop={true}\n              theme={Themes.default}\n              close={(): void => {\n                this.setThisPost(null);\n                this.setViewPost(false);\n              }}\n              displayClose={true}\n              backDropClose={false}\n              title={\n                <div className=\"flex flex-row gap-4 items-center\">\n                  {/* <IoBriefcase className=\"text-5xl text-gray-500\" /> */}\n                  <div className=\"flex flex-col\">\n                    <span className=\"font-bold text-2xl text-gray-500\">\n                      Viewing Post Request\n                    </span>\n                  </div>\n                </div>\n              }\n              widthSizeClass={ModalSize.extraLarge}\n              padding={{ title: true, body: false, footer: false }}\n            >\n              <section className=\"px-4 mx-auto mb-4 mt-3 flex items-start\">\n                <section className=\"w-full\">\n                  <div className=\"flex flex-row item-center justify-left gap-3 mb-2\">\n                    <span className=\"text-gray-500\">Position: </span>\n                    <span className=\"font-bold\">\n                      {getPositionById(\n                        this.props.systemPositions,\n                        this.state.thisPost.position_id\n                      )\n                        ? getPositionById(\n                            this.props.systemPositions,\n                            this.state.thisPost.position_id\n                          )!.position_title\n                        : \"Unknown position\"}\n                    </span>\n                  </div>\n                  <div className=\"my-2\">\n                    <table className=\"w-full border\" id=\"report_content\">\n                      <thead className=\"bg-blue-50 border-b border-gray-300 text-gray-600 font-bold text-sm\">\n                        <tr>\n                          <td className=\"px-2 py-2\">Requested posts</td>\n                          <td className=\"px-2 py-2\">Approved posts</td>\n                          <td className=\"px-2 py-2\">Placed posts</td>\n                          <td className=\"px-2 py-2\">Received posts</td>\n                          <td className=\"px-2 py-2\">Not received posts</td>\n                          <td className=\"px-2 py-2\">Status</td>\n                          <td></td>\n                        </tr>\n                      </thead>\n                      <tbody>\n                        <tr>\n                          <td className=\"px-2 py-2\">\n                            {this.state.thisPost.needed_posts}\n                          </td>\n                          <td className=\"px-2 py-2\">\n                            {this.state.thisPost.requested_post_status !==\n                            PostRequestStatusInterface.INITIATED ? (\n                              <div className=\"flex items-center gap-1\">\n                                {this.state.thisPost.confirmed_posts}\n                              </div>\n                            ) : (\n                              \"-\"\n                            )}\n                          </td>\n                          <td className=\"px-2 py-2\">\n                            {this.props.districtPlacements &&\n                            this.state.thisPost.requested_post_status !==\n                              PostRequestStatusInterface.INITIATED ? (\n                              <span>\n                                {\n                                  getPlacementByRequest(\n                                    this.props.districtPlacements,\n                                    this.state.thisPost._id\n                                  ).length\n                                }\n                              </span>\n                            ) : (\n                              \"-\"\n                            )}\n                          </td>\n                          <td className=\"px-2 py-2\">\n                            {this.state.thisPost.requested_post_status ===\n                            PostRequestStatusInterface.RECEIVED\n                              ? this.state.thisPost.received_posts\n                              : \"-\"}\n                          </td>\n                          <td className=\"px-2 py-2\">\n                            {this.props.districtPlacements &&\n                            this.state.thisPost.requested_post_status ===\n                              PostRequestStatusInterface.RECEIVED ? (\n                              <span>\n                                {\n                                  getPlacementByRequest(\n                                    this.props.districtPlacements,\n                                    this.state.thisPost._id,\n                                    PlacedCandidateStatus.REJECTED\n                                  ).length\n                                }\n                              </span>\n                            ) : (\n                              \"-\"\n                            )}\n                          </td>\n\n                          <td className=\"px-2 py-2\">\n                            <span\n                              className={`px-2 py-1 font-semibold rounded ${\n                                this.state.thisPost.requested_post_status ===\n                                PostRequestStatusInterface.INITIATED\n                                  ? \"text-gray-700 bg-gray-100 dark:bg-gray-700 dark:text-gray-100\"\n                                  : this.state.thisPost\n                                      .requested_post_status ===\n                                    PostRequestStatusInterface.CONFIRMED\n                                  ? \"text-blue-700 bg-blue-100 dark:bg-blue-700 dark:text-blue-100\"\n                                  : \"text-green-800 bg-green-100 dark:bg-green-800 dark:text-green-100\"\n                              }`}\n                            >\n                              {this.props.districtPlacements\n                                ? showRequestStatus(\n                                    this.state.thisPost.requested_post_status,\n                                    getPlacementByRequest(\n                                      this.props.districtPlacements,\n                                      this.state.thisPost._id,\n                                      \"all\"\n                                    ).length,\n                                    getPlacementByRequest(\n                                      this.props.districtPlacements,\n                                      this.state.thisPost._id,\n                                      PlacedCandidateStatus.PLACED\n                                    ).length,\n                                    getPlacementByRequest(\n                                      this.props.districtPlacements,\n                                      this.state.thisPost._id,\n                                      PlacedCandidateStatus.REJECTED\n                                    ).length\n                                  )\n                                : showRequestStatus(\n                                    this.state.thisPost.requested_post_status,\n                                    0,\n                                    0,\n                                    0\n                                  )}\n                            </span>\n                          </td>\n                          <td>\n                            {this.state.thisPost.requested_post_status ===\n                              PostRequestStatusInterface.INITIATED && (\n                              <button\n                                className=\"font-bold py-1 px-4 rounded bg-gray-500 text-white hover:bg-gray-700\"\n                                onClick={() => {\n                                  this.setModalState(\"UPDATE\");\n                                }}\n                                disabled={\n                                  this.state.thisPost.requested_post_status !==\n                                  PostRequestStatusInterface.INITIATED\n                                }\n                              >\n                                Reply\n                              </button>\n                            )}\n                            {this.props.districtPlacements &&\n                              getPlacementByRequest(\n                                this.props.districtPlacements,\n                                this.state.thisPost._id,\n                                PlacedCandidateStatus.PENDING\n                              ).length === 0 &&\n                              getPlacementByRequest(\n                                this.props.districtPlacements,\n                                this.state.thisPost._id,\n                                PlacedCandidateStatus.REJECTED\n                              ).length > 0 && (\n                                <button\n                                  className=\"font-bold ml-2 py-1 px-4 rounded bg-gray-500 text-white hover:bg-gray-700\"\n                                  onClick={() =>\n                                    this.reDoPlacement(this.state.thisPost!)\n                                  }\n                                  disabled={this.state.loadingRequest}\n                                >\n                                  Do placement\n                                </button>\n                              )}\n                          </td>\n                        </tr>\n                      </tbody>\n                    </table>\n                  </div>\n                  {getPositionById(\n                    this.props.systemPositions,\n                    this.state.thisPost.position_id\n                  ) && (\n                    <ViewPosition\n                      thisPosition={\n                        getPositionById(\n                          this.props.systemPositions,\n                          this.state.thisPost.position_id\n                        )!\n                      }\n                      isGuest={true}\n                    />\n                  )}\n                </section>\n              </section>\n            </Modal>\n          )}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = ({\n  auth,\n  schools,\n  system_settings,\n  schoolLevels,\n  document,\n  sessionPlan,\n}: StoreState): {\n  auth: Auth;\n  districtPosts: PostSchoolInterface[];\n  districtPlacements: placedCandidateInterface[] | null;\n  systemPositions: PositionAPI[] | null;\n  schoolLevels: schoolLevelsStoreInterface;\n  document: DocumentReducerInterface;\n  activeAcademicSession: AcademicSessionInterface | \"none\" | null;\n  districtPlacementLimits: PlacementListInterface[] | null;\n} => {\n  return {\n    auth: auth,\n    districtPosts: schools.districtPosts,\n    districtPlacements: schools.districtPlacements,\n    systemPositions: system_settings.systemPositions,\n    schoolLevels,\n    document,\n    activeAcademicSession: sessionPlan.activeAcademicSession,\n    districtPlacementLimits: schools.districtPlacementLimits,\n  };\n};\n\nexport const District = connect(mapStateToProps, {\n  getDocumentCategory,\n  getDocumentSubCategory,\n  getPositions,\n  fetchDistrictPosts,\n  getDistrictPlacement,\n  updateSchoolPost,\n  loadEducationCategories,\n  getActiveAcademicSession,\n  getDistrictPlacementLimit,\n  PushPopupAlert,\n})(_District);\n","import axios from \"axios\";\nimport { Dispatch } from \"redux\";\nimport { ActionTypes } from \"./types\";\nimport { API } from \"../utils/api\";\nimport { setAxiosToken } from \"../utils/AxiosToken\";\nimport { errorToText } from \"../utils/errors\";\nimport {\n  AcademicSessionInterface,\n  PlansTypeInterface,\n  SessionPlanInterface,\n} from \"../interfaces\";\n\n/**\n * * ****************************** INTERFACES *****************************\n */\n\n// GET ACTIVE PLAN TYPES\nexport interface GetPlansTypesAction {\n  type: ActionTypes.GET_PLANS_TYPES;\n  payload: PlansTypeInterface[];\n}\n\n// GET INACTIVE PLAN TYPES\nexport interface GetDeletedPlansTypesAction {\n  type: ActionTypes.GET_DELETED_PLANS_TYPES;\n  payload: PlansTypeInterface[];\n}\n\n// CREATE PLAN TYPE\nexport interface CreatePlansTypeAction {\n  type: ActionTypes.CREATE_PLAN_TYPE;\n  payload: PlansTypeInterface;\n}\n\n// UPDATE PLAN TYPE\nexport interface UpdatePlansTypeAction {\n  type: ActionTypes.UPDATE_PLAN_TYPE;\n  payload: PlansTypeInterface;\n}\n\n// DELETE PLAN TYPE\nexport interface DeletePlansTypeAction {\n  type: ActionTypes.DELETE_PLAN_TYPE;\n  payload: PlansTypeInterface;\n}\n\n// SET PLAN TYPE =====================================\nexport interface setSelectedPlanTypeActions {\n  type: ActionTypes.SELECT_PLAN_TYPE;\n  payload: PlansTypeInterface | \"all\";\n}\n\n// GET ALL SESSION PLAN\nexport interface GetAllSessionPlansAction {\n  type: ActionTypes.GET_ALL_SESSION_PLANS;\n  payload: SessionPlanInterface[];\n}\n\n// GET ACTIVE SESSION PLAN\nexport interface GetActiveSessionPlanAction {\n  type: ActionTypes.GET_ACTIVE_SESSION_PLANS;\n  payload: SessionPlanInterface | \"none\";\n}\n\n// CREATE SESSION PLAN\nexport interface CreateSessionPlansAction {\n  type: ActionTypes.CREATE_SESSION_PLAN;\n  payload: SessionPlanInterface;\n}\n\n// UPDATE SESSION PLAN\nexport interface UpdateSessionPlansAction {\n  type: ActionTypes.UPDATE_SESSION_PLAN;\n  payload: SessionPlanInterface;\n}\n\n// ACTIVATE SESSION PLAN\nexport interface ActivateSessionPlansAction {\n  type: ActionTypes.SESSION_ACTIVATION;\n  payload: SessionPlanInterface;\n}\n\n// DELETE SESSION PLAN\nexport interface DeleteSessionPlanAction {\n  type: ActionTypes.DELETE_SESSION_PLAN;\n  payload: string;\n}\n\n// GET ALL ACADEMIC SESSION\nexport interface GetAllAcademicSessionAction {\n  type: ActionTypes.GET_ALL_ACADEMIC_SESSION;\n  payload: AcademicSessionInterface[];\n}\n\n// CREATE ACADEMIC SESSION\nexport interface CreateAcademicSessionAction {\n  type: ActionTypes.CREATE_ACADEMIC_SESSION;\n  payload: AcademicSessionInterface;\n}\n\n// UPDATE ACADEMIC SESSION\nexport interface UpdateAcademicSessionAction {\n  type: ActionTypes.UPDATE_ACADEMIC_SESSION;\n  payload: AcademicSessionInterface;\n}\n\n// ACTIVATE ACADEMIC SESSION\nexport interface ActivateAcademicSessionAction {\n  type: ActionTypes.ACADEMIC_SESSION_ACTIVATION;\n  payload: AcademicSessionInterface;\n}\n\n// DELETE ACADEMIC SESSION\nexport interface DeleteAcademicSessionAction {\n  type: ActionTypes.DELETE_ACADEMIC_SESSION;\n  payload: string;\n}\n\n// GET ACTIVE ACADEMIC SESSION\nexport interface GetActiveAcademicSessionAction {\n  type: ActionTypes.GET_ACTIVE_ACADEMIC_SESSION;\n  payload: AcademicSessionInterface | \"none\";\n}\n\nexport type SessionActionType =\n  | GetPlansTypesAction\n  | GetDeletedPlansTypesAction\n  | CreatePlansTypeAction\n  | UpdatePlansTypeAction\n  | DeletePlansTypeAction\n  | GetAllSessionPlansAction\n  | GetActiveSessionPlanAction\n  | CreateSessionPlansAction\n  | UpdateSessionPlansAction\n  | ActivateSessionPlansAction\n  | DeleteSessionPlanAction\n  | setSelectedPlanTypeActions\n  | GetAllAcademicSessionAction\n  | CreateAcademicSessionAction\n  | UpdateAcademicSessionAction\n  | ActivateAcademicSessionAction\n  | DeleteAcademicSessionAction\n  | GetActiveAcademicSessionAction;\n\n/**\n * * ****************************** ACTIONS *****************************\n */\n\n// GET ACTIVE PLAN TYPES ==========================\nexport const GetPlansTypes = (callback: Function) => {\n  callback(true, \"\");\n  return async (dispatch: Dispatch) => {\n    try {\n      setAxiosToken();\n      const res = await axios.get<PlansTypeInterface[]>(\n        `${API.CLAIMING}/session-type`\n      );\n      console.log({ GET_PLANS_TYPES: res.data });\n      let plan_types: PlansTypeInterface[] = [];\n      if (res.status === 200) {\n        // setApplications(res.data);\n        if (res.data !== null && res.data.length > 0) {\n          plan_types = res.data;\n        }\n      }\n      dispatch<GetPlansTypesAction>({\n        type: ActionTypes.GET_PLANS_TYPES,\n        payload: plan_types,\n      });\n      callback(false, \"\");\n    } catch (error) {\n      console.error({ error: errorToText(error) });\n      callback(false, errorToText(error));\n    }\n  };\n};\n\n// GET ACTIVE PLAN TYPES ==========================\nexport const GetDeletedPlansTypes = (callback: Function) => {\n  callback(true, \"\");\n  return async (dispatch: Dispatch) => {\n    try {\n      setAxiosToken();\n      const res = await axios.get<PlansTypeInterface[]>(\n        `${API.CLAIMING}/session-type/deleted`\n      );\n      console.log({ GET_DELETED_PLANS_TYPES: res.data });\n      let plan_types: PlansTypeInterface[] = [];\n      if (res.status === 200) {\n        // setApplications(res.data);\n        if (res.data !== null && res.data.length > 0) {\n          plan_types = res.data;\n        }\n      }\n      dispatch<GetDeletedPlansTypesAction>({\n        type: ActionTypes.GET_DELETED_PLANS_TYPES,\n        payload: plan_types,\n      });\n      callback(false, \"\");\n    } catch (error) {\n      console.error({ error: errorToText(error) });\n      callback(false, errorToText(error));\n    }\n  };\n};\n\n// CREATE PLAN TYPE\nexport const createPlanType = (\n  data: PlansTypeInterface\n): CreatePlansTypeAction => {\n  return {\n    type: ActionTypes.CREATE_PLAN_TYPE,\n    payload: data,\n  };\n};\n\n// UPDATE PLAN TYPE\nexport const updatePlanType = (\n  data: PlansTypeInterface\n): UpdatePlansTypeAction => {\n  return {\n    type: ActionTypes.UPDATE_PLAN_TYPE,\n    payload: data,\n  };\n};\n\n// DELETE PLAN TYPE\nexport const deletePlanType = (\n  data: PlansTypeInterface\n): DeletePlansTypeAction => {\n  return {\n    type: ActionTypes.DELETE_PLAN_TYPE,\n    payload: data,\n  };\n};\n\n// SELECT PLAN TYPES ==========================\nexport const setSelectedPlanType = (\n  thisType: PlansTypeInterface | \"all\"\n): setSelectedPlanTypeActions => {\n  console.log({ thisType });\n  return {\n    type: ActionTypes.SELECT_PLAN_TYPE,\n    payload: thisType,\n  };\n};\n\n// GET ACTIVE PLAN TYPES ==========================\nexport const getActiveSessionPlan = (callback: Function) => {\n  callback(true, \"\");\n  return async (dispatch: Dispatch) => {\n    try {\n      setAxiosToken();\n      const res = await axios.get<SessionPlanInterface>(\n        `${API.CLAIMING}/session/active/`\n      );\n      console.log({ GET_ACTIVE_SESSION_PLANS: res.data });\n      let session_plan: SessionPlanInterface | undefined = undefined;\n      // if (res.status === 200) {\n      //   // setApplications(res.data);\n      // }\n      if (res.data && res.data.is_active !== undefined) {\n        session_plan = res.data;\n      }\n      console.log({ session_plan: res.data });\n\n      dispatch<GetActiveSessionPlanAction>({\n        type: ActionTypes.GET_ACTIVE_SESSION_PLANS,\n        payload: session_plan ? session_plan : \"none\",\n      });\n      callback(false, \"\", session_plan ? session_plan : \"none\");\n    } catch (error) {\n      console.error({ error: errorToText(error) });\n      callback(false, errorToText(error));\n    }\n  };\n};\n\n// GET ALL PLAN TYPES ==========================\nexport const GetAllSessionPlans = (callback: Function) => {\n  callback(true, \"\");\n  return async (dispatch: Dispatch) => {\n    try {\n      setAxiosToken();\n      const res = await axios.get<SessionPlanInterface[]>(\n        `${API.CLAIMING}/session/`\n      );\n      console.log({ GET_ALL_SESSION_PLANS: res.data });\n      let session_data: SessionPlanInterface[] = [];\n      if (res.status === 200) {\n        // setApplications(res.data);\n        if (res.data !== null && res.data.length > 0) {\n          session_data = res.data;\n        }\n      }\n      dispatch<GetAllSessionPlansAction>({\n        type: ActionTypes.GET_ALL_SESSION_PLANS,\n        payload: session_data,\n      });\n      callback(false, \"\", session_data);\n    } catch (error) {\n      console.error({ error: errorToText(error) });\n      callback(false, errorToText(error));\n    }\n  };\n};\n\n// CREATE SESSION PLAN\nexport const createSessionPlan = (\n  data: SessionPlanInterface\n): CreateSessionPlansAction => {\n  return {\n    type: ActionTypes.CREATE_SESSION_PLAN,\n    payload: data,\n  };\n};\n\n// UPDATE SESSION PLAN\nexport const updateSessionPlan = (\n  data: SessionPlanInterface\n): UpdateSessionPlansAction => {\n  return {\n    type: ActionTypes.UPDATE_SESSION_PLAN,\n    payload: data,\n  };\n};\n\n// ACTIVATE SESSION PLAN\nexport const sessionActivation = (\n  data: SessionPlanInterface\n): ActivateSessionPlansAction => {\n  return {\n    type: ActionTypes.SESSION_ACTIVATION,\n    payload: data,\n  };\n};\n\n// DELETE SESSION PLAN\nexport const deleteSessionPlan = (data: string): DeleteSessionPlanAction => {\n  return {\n    type: ActionTypes.DELETE_SESSION_PLAN,\n    payload: data,\n  };\n};\n\n// CREATE ACADEMIC SESSION\nexport const createAcademicSession = (\n  data: AcademicSessionInterface\n): CreateAcademicSessionAction => {\n  return {\n    type: ActionTypes.CREATE_ACADEMIC_SESSION,\n    payload: data,\n  };\n};\n\n// GET ALL ACADEMIC SESSION ==========================\nexport const GetAllAcademicSession = (callback: Function) => {\n  callback(true, \"\");\n  return async (dispatch: Dispatch) => {\n    try {\n      setAxiosToken();\n      const res = await axios.get<AcademicSessionInterface[]>(\n        `${API.PLACEMENT}/postrequestperiod/`\n      );\n      console.log({ GET_ALL_SESSION_PLANS: res.data });\n      let session_data: AcademicSessionInterface[] = [];\n      if (res.status === 200) {\n        // setApplications(res.data);\n        if (res.data !== null && res.data.length > 0) {\n          session_data = res.data;\n        }\n      }\n      console.log(\"====================================\");\n      console.log({ GetAllAcademicSession: res });\n      console.log(\"====================================\");\n      dispatch<GetAllAcademicSessionAction>({\n        type: ActionTypes.GET_ALL_ACADEMIC_SESSION,\n        payload: session_data,\n      });\n      callback(false, \"\", session_data);\n    } catch (error) {\n      console.error({ error: errorToText(error) });\n      callback(false, errorToText(error));\n    }\n  };\n};\n\n// UPDATE ACADEMIC SESSION\nexport const updateAcademicSession = (\n  data: AcademicSessionInterface\n): UpdateAcademicSessionAction => {\n  return {\n    type: ActionTypes.UPDATE_ACADEMIC_SESSION,\n    payload: data,\n  };\n};\n\n// ACTIVATE ACADEMIC SESSION\nexport const academicSessionActivation = (\n  data: AcademicSessionInterface\n): ActivateAcademicSessionAction => {\n  return {\n    type: ActionTypes.ACADEMIC_SESSION_ACTIVATION,\n    payload: data,\n  };\n};\n\n// DELETE ACADEMIC SESSION\nexport const deleteAcademicSession = (\n  data: string\n): DeleteAcademicSessionAction => {\n  return {\n    type: ActionTypes.DELETE_ACADEMIC_SESSION,\n    payload: data,\n  };\n};\n\n// GET ACTIVE PLAN TYPES ==========================\nexport const getActiveAcademicSession = (callback: Function) => {\n  callback(true, \"\");\n  return async (dispatch: Dispatch) => {\n    try {\n      setAxiosToken();\n      const res = await axios.get<AcademicSessionInterface>(\n        `${API.PLACEMENT}/postrequestperiod/one`\n      );\n      console.log({ GET_ACTIVE_ACADEMIC_SESSION: res.data });\n      let session_plan: AcademicSessionInterface | undefined = undefined;\n      // if (res.status === 200) {\n      //   // setApplications(res.data);\n      // }\n      if (res.data) {\n        session_plan = res.data;\n      }\n      console.log({ session_plan: res.data });\n\n      dispatch<GetActiveAcademicSessionAction>({\n        type: ActionTypes.GET_ACTIVE_ACADEMIC_SESSION,\n        payload: session_plan ? session_plan : \"none\",\n      });\n      callback(false, \"\", session_plan ? session_plan : \"none\");\n    } catch (error) {\n      console.error({ error: errorToText(error) });\n      callback(false, errorToText(error));\n    }\n  };\n};\n","import { Dispatch } from \"redux\";\nimport { ActionTypes } from \"./types\";\nimport {\n  MySchoolInterface,\n  PostSchoolInterface,\n  SchoolInfoInterface,\n  SchoolsInterface,\n} from \"../shared/interfaces\";\n// import { setAxiosToken } from \"../utils/AxiosToken\";\nimport axios from \"axios\";\nimport { API } from \"../utils/api\";\nimport { errorToText } from \"../utils/errors\";\nimport { placedCandidateInterface } from \"../interfaces/marks_publication\";\nimport { PlacementListInterface } from \"../containers/PlacementLimit/PlacementLimit\";\n\n/**\n * * ****************************** INTERFACES *****************************\n */\n\nexport interface GetSchoolsAction {\n  type: ActionTypes.GET_SCHOOLS;\n  payload: SchoolsInterface[];\n}\n\nexport interface GetSchoolByIdAction {\n  type: ActionTypes.GET_SCHOOLS_BY_ID;\n  payload: MySchoolInterface;\n}\n\nexport interface GetSchoolsInfoAction {\n  type: ActionTypes.GET_SCHOOLS_INFO;\n  payload: SchoolInfoInterface[];\n}\n\nexport interface CreateSchoolAction {\n  type: ActionTypes.CREATE_SCHOOL;\n  payload: SchoolsInterface;\n}\n\nexport interface UpdateSchoolAction {\n  type: ActionTypes.UPDATE_SCHOOL;\n  payload: SchoolsInterface;\n}\n\nexport interface DeleteSchoolAction {\n  type: ActionTypes.DELETE_SCHOOL;\n  payload: string;\n}\n\n// School Posts interfaces\nexport interface FetchSchoolPostsAction {\n  type: ActionTypes.FETCH_SCHOOL_POSTS;\n  payload: PostSchoolInterface[];\n}\n\n// School Placements interfaces\nexport interface GetSchoolPlacementAction {\n  type: ActionTypes.GET_SCHOOL_PLACEMENT;\n  payload: placedCandidateInterface[];\n}\n\n// District School Placements interfaces\nexport interface GetDistrictPlacementAction {\n  type: ActionTypes.GET_DISTRICT_PLACEMENT;\n  payload: placedCandidateInterface[];\n}\n\n// District School Placements interfaces\nexport interface GetSessionPlacementAction {\n  type: ActionTypes.GET_SESSION_PLACEMENT;\n  payload: placedCandidateInterface[];\n}\n\nexport interface FetchDistrictPostsAction {\n  type: ActionTypes.FETCH_DISTRICT_POSTS;\n  payload: PostSchoolInterface[];\n}\n\nexport interface CreateSchoolPostAction {\n  type: ActionTypes.CREATE_SCHOOL_POST;\n  payload: PostSchoolInterface;\n}\n\nexport interface UpdateSchoolPostAction {\n  type: ActionTypes.UPDATE_SCHOOL_POST;\n  payload: {\n    TYPE: \"DISTRICT\" | \"SCHOOL\" | \"RECEIVED\";\n    data: PostSchoolInterface;\n  };\n}\n\nexport interface DeleteSchoolPostAction {\n  type: ActionTypes.DELETE_SCHOOL_POST;\n  payload: PostSchoolInterface[];\n}\n\n// Get Institute Limit Posts Action interfaces\nexport interface GetInstitutePlacementLimitAction {\n  type: ActionTypes.GET_INSTITUTE_PLACEMENT_LIMIT;\n  payload: PlacementListInterface[];\n}\n\nexport interface GetDistrictPlacementLimitAction {\n  type: ActionTypes.GET_DISTRICT_PLACEMENT_LIMIT;\n  payload: PlacementListInterface[];\n}\n\nexport interface UpdateInstitutePlacementLimitAction {\n  type: ActionTypes.UPDATE_INSTITUTE_PLACEMENT_LIMIT;\n  payload: { limit_id: string; confirmed_post: number };\n}\n\nexport type SchoolActionType =\n  | GetSchoolsAction\n  | GetSchoolByIdAction\n  | GetSchoolsInfoAction\n  | CreateSchoolAction\n  | UpdateSchoolAction\n  | DeleteSchoolAction\n  | FetchSchoolPostsAction\n  | GetSchoolPlacementAction\n  | FetchDistrictPostsAction\n  | CreateSchoolPostAction\n  | UpdateSchoolPostAction\n  | DeleteSchoolPostAction\n  | GetDistrictPlacementAction\n  | GetSessionPlacementAction\n  | GetInstitutePlacementLimitAction\n  | GetDistrictPlacementLimitAction\n  | UpdateInstitutePlacementLimitAction;\n\n/**\n * * ****************************** ACTIONS *****************************\n */\n\nexport const getSchools = (callback: Function) => {\n  callback(true, \"\");\n  return async (dispatch: Dispatch) => {\n    try {\n      const res = await axios.get<SchoolsInterface[]>(\n        `${API.APPLICATION}/schools`\n      );\n      dispatch<GetSchoolsAction>({\n        type: ActionTypes.GET_SCHOOLS,\n        payload: res.data,\n      });\n      callback(false, \"\", res.data);\n    } catch (error) {\n      console.log(\"Err: \", error);\n      callback(false, errorToText(error));\n    }\n  };\n};\n\nexport const getSchoolById = (schoolId: string, callback: Function) => {\n  return async (dispatch: Dispatch) => {\n    callback(true, \"\");\n    try {\n      const res = await axios.get<MySchoolInterface>(\n        `${API.APPLICATION}/schools/${schoolId}`\n      );\n      dispatch<GetSchoolByIdAction>({\n        type: ActionTypes.GET_SCHOOLS_BY_ID,\n        payload: res.data,\n      });\n      callback(false, \"\", res.data);\n    } catch (error) {\n      console.log(\"Err: \", error);\n      callback(false, errorToText(error));\n    }\n  };\n};\n\n// export const getSchoolsInfo = () => {\n//   return async (dispatch: Dispatch) => {\n//     setAxiosToken();\n//     const response = await axios.get<SchoolInfoInterface[]>(url);\n\n//     dispatch<GetSchoolsInfoAction>({\n//       type: ActionTypes.GET_SCHOOLS_INFO,\n//       payload: response.data,\n//     });\n//   };\n// };\n\nexport const createSchool = (data: SchoolsInterface) => {\n  console.log({ schools: data });\n  return async (dispatch: Dispatch) => {\n    dispatch<CreateSchoolAction>({\n      type: ActionTypes.CREATE_SCHOOL,\n      payload: data,\n    });\n  };\n};\n\nexport const updateSchool = (data: SchoolsInterface) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<UpdateSchoolAction>({\n      type: ActionTypes.UPDATE_SCHOOL,\n      payload: data,\n    });\n  };\n};\n\nexport const deleteSchool = (data: string) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<DeleteSchoolAction>({\n      type: ActionTypes.DELETE_SCHOOL,\n      payload: data,\n    });\n  };\n};\n\nexport const fetchSchoolPosts = (school_id: string, callback: Function) => {\n  return async (dispatch: Dispatch) => {\n    callback(true, \"\");\n    try {\n      const res = await axios.get<PostSchoolInterface[]>(\n        `${API.PLACEMENT}/requestpost/school/${school_id}`\n      );\n\n      console.log(\"====================================\");\n      console.log({ schoolPosts: res });\n      console.log(\"====================================\");\n\n      dispatch<FetchSchoolPostsAction>({\n        type: ActionTypes.FETCH_SCHOOL_POSTS,\n        payload: res.data,\n      });\n      callback(false, \"\");\n    } catch (error) {\n      console.log(\"Err: \", error);\n      callback(false, errorToText(error));\n    }\n  };\n};\n\nexport const getSchoolPlacement = (school_id: string, callback: Function) => {\n  return async (dispatch: Dispatch) => {\n    callback(true, \"\");\n    try {\n      const res = await axios.get<placedCandidateInterface[]>(\n        `${API.PLACEMENT}/placedcandidate/school/${school_id}`\n      );\n\n      console.log({ getSchoolPlacement: res.data });\n\n      dispatch<GetSchoolPlacementAction>({\n        type: ActionTypes.GET_SCHOOL_PLACEMENT,\n        payload: res.data,\n      });\n      callback(false, \"\", res.data);\n    } catch (error) {\n      console.log(\"Err: \", error);\n      callback(false, errorToText(error));\n    }\n  };\n};\n\nexport const createSchoolPost = (data: PostSchoolInterface) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<CreateSchoolPostAction>({\n      type: ActionTypes.CREATE_SCHOOL_POST,\n      payload: data,\n    });\n  };\n};\n\nexport const updateSchoolPost = (\n  TYPE: \"DISTRICT\" | \"SCHOOL\" | \"RECEIVED\",\n  data: PostSchoolInterface\n) => {\n  console.log({ TYPE, data });\n  return async (dispatch: Dispatch) => {\n    dispatch<UpdateSchoolPostAction>({\n      type: ActionTypes.UPDATE_SCHOOL_POST,\n      payload: { TYPE, data },\n    });\n  };\n};\n\nexport const deleteSchoolPost = (data: PostSchoolInterface[]) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<DeleteSchoolPostAction>({\n      type: ActionTypes.DELETE_SCHOOL_POST,\n      payload: data,\n    });\n  };\n};\n\nexport const fetchDistrictPosts = (district_id: string, callback: Function) => {\n  return async (dispatch: Dispatch) => {\n    callback(true, \"\");\n    try {\n      const res = await axios.get<PostSchoolInterface[]>(\n        `${API.PLACEMENT}/requestpost/district/${district_id}`\n      );\n\n      console.log(\"====================================\");\n      console.log({ fetchDistrictPosts: res });\n      console.log(\"====================================\");\n\n      dispatch<FetchDistrictPostsAction>({\n        type: ActionTypes.FETCH_DISTRICT_POSTS,\n        payload: res.data,\n      });\n      callback(false, \"\");\n    } catch (error) {\n      console.log(\"Err: \", error);\n      callback(false, errorToText(error));\n    }\n  };\n};\n\nexport const getDistrictPlacement = (\n  district_id: string,\n  callback: Function\n) => {\n  return async (dispatch: Dispatch) => {\n    callback(true, \"\");\n    try {\n      const res = await axios.get<placedCandidateInterface[]>(\n        `${API.PLACEMENT}/placedcandidate/district/${district_id}`\n      );\n\n      console.log(\"====================================\");\n      console.log({ getDistrictPlacement: res.data });\n      console.log(\"====================================\");\n\n      dispatch<GetDistrictPlacementAction>({\n        type: ActionTypes.GET_DISTRICT_PLACEMENT,\n        payload: res.data,\n      });\n      callback(false, \"\", res.data);\n    } catch (error) {\n      console.log(\"Err: \", error);\n      callback(false, errorToText(error));\n    }\n  };\n};\n\nexport const getSessionPlacement = (session_id: string, callback: Function) => {\n  return async (dispatch: Dispatch) => {\n    callback(true, \"\");\n    try {\n      const res = await axios.get<placedCandidateInterface[]>(\n        `${API.PLACEMENT}/placedcandidate/session/${session_id}`\n      );\n\n      console.log(\"====================================\");\n      console.log({ getSessionPlacement: res.data });\n      console.log(\"====================================\");\n\n      dispatch<GetSessionPlacementAction>({\n        type: ActionTypes.GET_SESSION_PLACEMENT,\n        payload: res.data,\n      });\n      callback(false, \"\", res.data);\n    } catch (error) {\n      console.log(\"Err: \", error);\n      callback(false, errorToText(error));\n    }\n  };\n};\n\nexport const getInstitutePlacementLimit = (\n  institute_id: string,\n  session_id: string,\n  callback: Function\n) => {\n  return async (dispatch: Dispatch) => {\n    callback(true, \"\");\n    try {\n      const res = await axios.get<PlacementListInterface[]>(\n        `${API.PLACEMENT}/confirmedpostrequest/institute/${institute_id}/${session_id}`\n      );\n\n      console.log(\"====================================\");\n      console.log({ getInstitutePlacementLimit: res.data });\n      console.log(\"====================================\");\n\n      dispatch<GetInstitutePlacementLimitAction>({\n        type: ActionTypes.GET_INSTITUTE_PLACEMENT_LIMIT,\n        payload: res.data,\n      });\n      callback(false, \"\", res.data);\n    } catch (error) {\n      console.log(\"Err: \", error);\n      callback(false, errorToText(error));\n    }\n  };\n};\n\nexport const getDistrictPlacementLimit = (\n  district_id: string,\n  session_id: string,\n  callback: Function\n) => {\n  return async (dispatch: Dispatch) => {\n    callback(true, \"\");\n    try {\n      const res = await axios.get<PlacementListInterface[]>(\n        `${API.PLACEMENT}/confirmedpostrequest/district/${district_id}/${session_id}`\n      );\n\n      console.log(\"====================================\");\n      console.log({ getDistrictPlacementLimit: res.data });\n      console.log(\"====================================\");\n\n      dispatch<GetDistrictPlacementLimitAction>({\n        type: ActionTypes.GET_DISTRICT_PLACEMENT_LIMIT,\n        payload: res.data,\n      });\n      callback(false, \"\", res.data);\n    } catch (error) {\n      console.log(\"Err: \", error);\n      callback(false, errorToText(error));\n    }\n  };\n};\n\nexport const updateInstitutePlacementLimit = (data: {\n  limit_id: string;\n  confirmed_post: number;\n}) => {\n  console.log(\"====================================\");\n  console.log({ updateInstitutePlacementLimit: data });\n  console.log(\"====================================\");\n  return async (dispatch: Dispatch) => {\n    dispatch<UpdateInstitutePlacementLimitAction>({\n      type: ActionTypes.UPDATE_INSTITUTE_PLACEMENT_LIMIT,\n      payload: data,\n    });\n  };\n};\n","export interface marksPublicationInterface {\n  publication_id: string;\n  session: string;\n  doneby: string;\n  created_date: string;\n  publication_status: \"PENDING\" | \"PUBLISHED\";\n  status: number;\n  publication_position_marks: publicationInterface[];\n  createdAt: string;\n  updatedAt: string;\n}\n\nexport interface publicationInterface {\n  _id: string;\n  position: string;\n  marks: number;\n  comment: string;\n}\n\nexport interface marksPublicationFormInterface {\n  session: string;\n  doneby: string;\n  created_date: string;\n  publication_position_marks: publicationFormInterface[];\n}\n\nexport interface publicationFormInterface {\n  position: string;\n  marks: number;\n  comment: string;\n}\n\nexport enum MarksPublicationCandidateStatus {\n  Failed = \"Failed\",\n  Passed = \"Passed\",\n}\n\nexport interface MarksPublicationCandidate_old {\n  user: {\n    in_eduction: boolean;\n    disability: boolean;\n    is_active: boolean;\n    n_id: string;\n    phone_number: string;\n    email: string;\n    createdAt: string;\n    updatedAt: string;\n    user_id: string;\n    user_info: placedCandidateUserInfo;\n  };\n  period: string;\n  position: string;\n  courses: {\n    id: string;\n    marks: number;\n    _id: string;\n  }[];\n  waiting_status: MarksPublicationCandidateStatus;\n  status: number;\n  user_position_marks: number;\n  createdAt: string;\n  updatedAt: string;\n  disability: boolean;\n  gender: string;\n  in_education: boolean;\n  id: string;\n}\n\nexport interface MarksPublicationCandidate {\n  _id: string;\n  user: string;\n  period: string;\n  position: string;\n  in_education: boolean;\n  n_id: string;\n  fname: string;\n  lname: string;\n  email: string;\n  phone_number: string;\n  gender: string;\n  disability: boolean;\n  courses: {\n    id: string;\n    marks: number;\n    _id: string;\n  }[];\n  waiting_status: MarksPublicationCandidateStatus;\n  status: number;\n  user_position_marks: number;\n  createdAt: string;\n  updatedAt: string;\n  __v: number;\n}\n\nexport interface MarksPublicationCandidateToPrintInterface {\n  no: number;\n  names: string;\n  national_id: string;\n  phone: string;\n  email: string;\n  gender: string;\n  position_name: string;\n  marks: number;\n  status: MarksPublicationCandidateStatus;\n}\n\nexport enum marksPublicationCandidateReportContentKeyInterface {\n  applicant_name = \"names\",\n  national_id = \"national_id\",\n  phone_number = \"phone\",\n  email = \"email\",\n  gender = \"gender\",\n  position_name = \"position_name\",\n  marks = \"marks\",\n  status = \"status\",\n}\n\nexport interface marksPublicationReportContentInterface {\n  key: marksPublicationCandidateReportContentKeyInterface;\n  title: string;\n  status: boolean;\n}\n// ---------------------------------------------------------------------------------------------\n\nexport interface placedCandidateInterface {\n  _id: string;\n  status: PlacedCandidateStatus;\n  user_id: string;\n  school_id: string;\n  position_id: string;\n  waiting_list_id: string;\n  request_id: string;\n  createdAt: string;\n  comment: string;\n  updatedAt: string;\n  __v: number;\n  n_id: string;\n  phone_number: string;\n  email: string;\n  user_info: placedCandidateUserInfo;\n  school: {\n    _id: string;\n    school_name: string;\n    school_code: string;\n    province_id: string;\n    province_code: string;\n    district_id: {\n      _id: string;\n      district_name: string;\n    };\n    district_code: string;\n    sector_code: string;\n    sector_id: string;\n    school_status: string;\n    status: number;\n    createdAt: string;\n    updatedAt: string;\n  };\n}\n\nexport interface placedCandidateUserInfo {\n  document_type: string;\n  issue_number: string;\n  date_of_issue: string;\n  date_of_expiry: string;\n  place_of_issue: string;\n  application_number: string;\n  fname: string;\n  lname: string;\n  father_names: string;\n  mother_names: string;\n  sex: string;\n  date_of_birth: string;\n  place_of_birth: string;\n  country_of_birth: string;\n  village_id: string;\n  village: string;\n  cell: string;\n  sector: string;\n  district: string;\n  province: string;\n  civil_status: string;\n  spouse: null;\n  status: string;\n  photo: string;\n}\n\nexport enum PlacedCandidateStatus {\n  PENDING = \"pending\",\n  PLACED = \"placed\",\n  REJECTED = \"rejected\",\n}\n\nexport interface PlacementToPrintInterface {\n  no: number;\n  names: string;\n  national_id: string;\n  phone: string;\n  email: string;\n  school_name: string;\n  position_name: string;\n  waiting_date: string;\n  placement_date: string;\n  status: PlacedCandidateStatus;\n}\n\nexport enum placementReportContentKeyInterface {\n  applicant_name = \"names\",\n  national_id = \"national_id\",\n  phone_number = \"phone\",\n  email = \"email\",\n  school_name = \"school_name\",\n  position_name = \"position_name\",\n  waiting_date = \"waiting_date\",\n  placement_date = \"placement_date\",\n  status = \"status\",\n}\n\nexport interface placementReportContentInterface {\n  key: placementReportContentKeyInterface;\n  title: string;\n  status: boolean;\n}\n","import axios from \"axios\";\nimport React, { Component } from \"react\";\nimport {\n  MdArrowBack,\n  MdErrorOutline,\n  MdMail,\n  MdSmartphone,\n  MdTaskAlt,\n} from \"react-icons/md\";\nimport { connect } from \"react-redux\";\nimport { Auth, PushPopupAlert } from \"../../actions\";\nimport { fetchSchoolPosts, getSchoolPlacement } from \"../../actions/schools\";\nimport ActionConfirm, {\n  ActionConfirmEnum,\n} from \"../../components/ActionConfirm/ActionConfirm\";\nimport { PopupAlertData } from \"../../components/Alert/Popup\";\nimport { PositionAPI } from \"../../interfaces\";\nimport {\n  placedCandidateInterface,\n  PlacedCandidateStatus,\n} from \"../../interfaces/marks_publication\";\nimport { PopupAlertTheme } from \"../../interfaces/popupAlert\";\nimport { StoreState } from \"../../reducers\";\nimport { getPositionById, isEmptyOrSpaces } from \"../../shared/dataTest\";\nimport {\n  PostSchoolInterface,\n  PostRequestStatusInterface,\n} from \"../../shared/interfaces\";\nimport { API } from \"../../utils/api\";\nimport { errorToText } from \"../../utils/errors\";\nimport ViewPosition from \"../Positions/ViewPosition\";\nimport { getPlacementByRequest } from \"./RequestTeacher\";\n\nexport enum postShowStatus {\n  PENDING = \"Pending\",\n  CONFIRMED = \"Confirmed\",\n  ALL_RECEIVED = \"All received\",\n  PARTIAL_RECEIVED = \"Received & Pending\",\n  ALL_REJECTED = \"All rejected\",\n  PARTIAL_REJECTED = \"Rejected & Pending\",\n  PARTIAL_RECEIVED_REJECTED = \"Received & Rejected & Pending\",\n  RECEIVED_REJECTED = \"Received & Rejected\",\n}\nexport const showRequestStatus = (\n  status: PostRequestStatusInterface,\n  placed: number,\n  received: number,\n  rejected: number\n): postShowStatus => {\n  if (status === PostRequestStatusInterface.RECEIVED) {\n    if (placed === received) {\n      return postShowStatus.ALL_RECEIVED;\n    }\n    if (placed === rejected) {\n      return postShowStatus.ALL_REJECTED;\n    }\n    if (placed === rejected + received) {\n      return postShowStatus.RECEIVED_REJECTED;\n    }\n    if (placed > rejected + received && received > 0 && rejected > 0) {\n      return postShowStatus.PARTIAL_RECEIVED_REJECTED;\n    }\n    if (rejected === 0 && placed > received) {\n      return postShowStatus.PARTIAL_RECEIVED;\n    }\n    if (received === 0 && placed > rejected) {\n      return postShowStatus.PARTIAL_REJECTED;\n    }\n  }\n\n  if (status === PostRequestStatusInterface.CONFIRMED) {\n    return postShowStatus.CONFIRMED;\n  }\n  return postShowStatus.PENDING;\n};\n\ntype ReceivePostProps = {\n  viewPost: boolean;\n  placementList: placedCandidateInterface[];\n  thisPost: PostSchoolInterface;\n  setThisPost: (value: PostSchoolInterface | null) => void;\n  setModalState: (value: \"CREATE\" | \"UPDATE\" | \"RECEIVE\" | null) => void;\n  formError: {\n    element: string;\n    msg: string;\n  } | null;\n  setFormError: (\n    value: {\n      element: string;\n      msg: string;\n    } | null\n  ) => void;\n  receivedPosts: number;\n  setReceivedPosts: (value: number) => void;\n  loadingRequest: boolean;\n  setLoadingRequest: (value: boolean) => void;\n  loadingPost: boolean;\n  setLoadingPost: (value: boolean) => void;\n  positionId: string;\n  systemPositions: PositionAPI[];\n\n  // REDUX ==========\n  auth: Auth;\n  fetchSchoolPosts: Function;\n  getSchoolPlacement: Function;\n  PushPopupAlert: (alert: PopupAlertData) => void;\n};\n\ntype ReceivePostState = {\n  placement_id: string;\n  action: \"RECEIVED\" | \"NOT_RECEIVED\" | null;\n  takeAction: boolean;\n  comment: string;\n  thisPlacement: placedCandidateInterface | null;\n};\n\nclass ReceivePost extends Component<ReceivePostProps, ReceivePostState> {\n  constructor(props: ReceivePostProps) {\n    super(props);\n\n    this.state = {\n      placement_id: \"\",\n      action: null,\n      thisPlacement: null,\n      takeAction: false,\n      comment: \"\",\n    };\n  }\n  setThisPlacement = (value: placedCandidateInterface | null) => {\n    this.setState({ thisPlacement: value });\n  };\n  setAction = (value: \"RECEIVED\" | \"NOT_RECEIVED\" | null) => {\n    this.setState({ action: value });\n  };\n  setTakeAction = (value: boolean) => {\n    this.setState({ takeAction: value });\n  };\n\n  submitRequest = async (\n    thisPlacement: placedCandidateInterface,\n    action: \"RECEIVED\" | \"NOT_RECEIVED\"\n  ) => {\n    if (action === \"NOT_RECEIVED\" && isEmptyOrSpaces(this.state.comment)) {\n      return this.props.setFormError({\n        element: \"received_comment\",\n        msg: \"Reason of your decision is required!\",\n      });\n    }\n\n    let received: number = 0;\n    if (action === \"NOT_RECEIVED\") {\n      received = this.props.thisPost.received_posts\n        ? this.props.thisPost.received_posts\n        : 0;\n    } else {\n      received = this.props.thisPost.received_posts\n        ? this.props.thisPost.received_posts + 1\n        : 1;\n    }\n\n    this.props.setLoadingRequest(true);\n    try {\n      if (this.props.thisPost) {\n        const res = await axios.patch<{ data: PostSchoolInterface }>(\n          `${API.PLACEMENT}/requestpost/${this.props.thisPost._id}`,\n          {\n            confirmed_posts: this.props.thisPost.confirmed_posts,\n            confirmed_by: this.props.auth.user.user_id,\n            received_posts: received,\n            approval_date: this.props.thisPost.approval_date,\n            school_id: this.props.thisPost.school_id,\n            position_id: this.props.thisPost.position_id,\n            district_id: this.props.thisPost.district_id,\n            needed_posts: this.props.thisPost.needed_posts,\n            male_number: this.props.thisPost.male_number,\n            female_number: this.props.thisPost.female_number,\n            description: this.props.thisPost.description,\n            occupied_posts: this.props.thisPost.occupied_posts,\n            requested_by: this.props.auth.user.user_id,\n            requested_post_status: PostRequestStatusInterface.RECEIVED,\n          }\n        );\n        if (res) {\n          // props.updateSchoolPost(\"SCHOOL\", res.data.data);\n          this.confirmPlacement(thisPlacement);\n\n          // !this.props.viewPost && this.props.setThisPost(null);\n          // this.props.setReceivedPosts(0);\n          // this.props.setModalState(null);\n          // this.props.PushPopupAlert({\n          //   title: `Post request has been received!`,\n          //   theme: PopupAlertTheme.info,\n          // });\n        }\n      }\n    } catch (error) {\n      console.error({ role_error: error });\n      this.props.PushPopupAlert({\n        title: errorToText(error),\n        theme: PopupAlertTheme.danger,\n      });\n    }\n    this.props.setLoadingRequest(false);\n  };\n\n  confirmPlacement = async (thisPlacement: placedCandidateInterface) => {\n    this.props.setLoadingRequest(true);\n    try {\n      if (this.props.thisPost) {\n        const res = await axios.post<{ data: PostSchoolInterface }>(\n          `${API.PLACEMENT}/confirmreceived`,\n          {\n            placedStatus: [\n              {\n                waiting_list_id: thisPlacement.waiting_list_id,\n                placed_candidate_id: thisPlacement._id,\n                status:\n                  this.state.action === \"NOT_RECEIVED\"\n                    ? PlacedCandidateStatus.REJECTED\n                    : PlacedCandidateStatus.PLACED,\n              },\n            ],\n          }\n        );\n        if (res) {\n          this.props.fetchSchoolPosts(\n            this.props.auth.user_access.school_id,\n            (status: boolean, message: string) => {\n              if (!status) {\n                if (message.length > 0 && this.props.loadingPost) {\n                  console.error(\"error loading school post: \", message);\n                  this.props.PushPopupAlert({\n                    title: message,\n                    theme: PopupAlertTheme.danger,\n                  });\n                }\n                this.props.setLoadingPost(false);\n              }\n            }\n          );\n\n          this.props.getSchoolPlacement(\n            this.props.auth.user_access.school_id,\n            (\n              status: boolean,\n              msg: string,\n              data?: placedCandidateInterface[]\n            ) => {\n              this.props.setLoadingPost(status);\n              if (!status && msg.length > 0) {\n                console.error({ getSchoolPlacementError: msg });\n                this.props.PushPopupAlert({\n                  title: msg,\n                  theme: PopupAlertTheme.danger,\n                });\n              }\n            }\n          );\n\n          this.props.setFormError(null);\n          this.setState({ comment: \"\", placement_id: \"\", action: null });\n          !this.props.viewPost && this.props.setThisPost(null);\n          this.props.setReceivedPosts(0);\n          this.props.setModalState(null);\n          this.props.PushPopupAlert({\n            title: `Request has been done completely!`,\n            theme: PopupAlertTheme.info,\n          });\n        }\n      }\n    } catch (error) {\n      console.error({ role_error: error });\n      this.props.PushPopupAlert({\n        title: errorToText(error),\n        theme: PopupAlertTheme.danger,\n      });\n    }\n    this.props.setLoadingRequest(false);\n  };\n\n  render() {\n    return (\n      <section>\n        <div className=\"border-b-2 border-gray-200 mb-2 pb-1 flex items-center gap-3\">\n          <button\n            className={`ml-3 bg-gray-100 hover:bg-blue-100 rounded-full px-1 py-1 focus:outline-none ${\n              this.props.loadingRequest ? \"cursor-wait\" : \"cursor-pointer\"\n            } animate__animated animate__fadeIn`}\n            disabled={this.props.loadingRequest}\n            onClick={() => {\n              this.props.setThisPost(null);\n              this.props.setReceivedPosts(0);\n              this.props.setModalState(null);\n            }}\n          >\n            <MdArrowBack className=\"text-4xl\" />\n          </button>\n\n          <span className=\"font-bold text-2xl md:text-3xl text-gray-700\">\n            Confirm teacher arrival\n          </span>\n        </div>\n\n        <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4 divide-x-0 divide-y md:divide-x md:divide-y-0\">\n          <div className=\"px-1 mb-4 mt-3\">\n            <div className=\"text-base leading-6 space-y-4 text-gray-700 sm:text-lg sm:leading-7\">\n              <div className=\"flex flex-row item-center justify-left gap-3 mb-2\">\n                <span className=\"text-gray-500 italic\">Position: </span>\n                <span className=\"font-bold\">\n                  {getPositionById(\n                    this.props.systemPositions,\n                    this.props.thisPost.position_id\n                  )\n                    ? getPositionById(\n                        this.props.systemPositions,\n                        this.props.thisPost.position_id\n                      )!.position_title\n                    : \"Unknown position\"}\n                </span>\n              </div>\n\n              <table className=\"w-full shadow\" id=\"report_content\">\n                <thead className=\"bg-blue-50 border-b-2 border-gray-300 text-gray-600 font-bold text-sm\">\n                  <tr>\n                    <td className=\"px-2 py-2\">Requested posts</td>\n                    <td className=\"px-2 py-2\">Approved posts</td>\n                    <td className=\"px-2 py-2\">Placed posts</td>\n                    <td className=\"px-2 py-2\">Received posts</td>\n                    <td className=\"px-2 py-2\">Not received posts</td>\n                    <td className=\"px-2 py-2\">Status</td>\n                  </tr>\n                </thead>\n                <tbody>\n                  <tr>\n                    <td className=\"px-2 py-2\">\n                      {this.props.thisPost.needed_posts}\n                    </td>\n                    <td className=\"px-2 py-2\">\n                      {this.props.thisPost.requested_post_status !==\n                      PostRequestStatusInterface.INITIATED ? (\n                        <div className=\"flex items-center gap-1\">\n                          {this.props.thisPost.confirmed_posts}\n                        </div>\n                      ) : (\n                        \"-\"\n                      )}\n                    </td>\n                    <td className=\"px-2 py-2\">\n                      {this.props.thisPost.requested_post_status !==\n                      PostRequestStatusInterface.INITIATED ? (\n                        <span>\n                          {\n                            getPlacementByRequest(\n                              this.props.placementList,\n                              this.props.thisPost._id\n                            ).length\n                          }\n                        </span>\n                      ) : (\n                        \"-\"\n                      )}\n                    </td>\n                    <td className=\"px-2 py-2\">\n                      {this.props.thisPost.requested_post_status ===\n                      PostRequestStatusInterface.RECEIVED\n                        ? this.props.thisPost.received_posts\n                        : \"-\"}\n                    </td>\n                    <td className=\"px-2 py-2\">\n                      {this.props.thisPost.requested_post_status ===\n                      PostRequestStatusInterface.RECEIVED ? (\n                        <span>\n                          {\n                            getPlacementByRequest(\n                              this.props.placementList,\n                              this.props.thisPost._id,\n                              PlacedCandidateStatus.REJECTED\n                            ).length\n                          }\n                        </span>\n                      ) : (\n                        \"0\"\n                      )}\n                    </td>\n\n                    <td className=\"px-2 py-2\">\n                      <span\n                        className={`px-2 py-1 mx-1 font-semibold rounded ${\n                          this.props.thisPost.requested_post_status ===\n                          PostRequestStatusInterface.INITIATED\n                            ? \"text-gray-700 bg-gray-100 dark:bg-gray-700 dark:text-gray-100\"\n                            : this.props.thisPost.requested_post_status ===\n                              PostRequestStatusInterface.CONFIRMED\n                            ? \"text-blue-700 bg-blue-100 dark:bg-blue-700 dark:text-blue-100\"\n                            : \"text-green-800 bg-green-100 dark:bg-green-800 dark:text-green-100\"\n                        }`}\n                      >\n                        {showRequestStatus(\n                          this.props.thisPost.requested_post_status,\n                          getPlacementByRequest(\n                            this.props.placementList,\n                            this.props.thisPost._id,\n                            \"all\"\n                          ).length,\n                          getPlacementByRequest(\n                            this.props.placementList,\n                            this.props.thisPost._id,\n                            PlacedCandidateStatus.PLACED\n                          ).length,\n                          getPlacementByRequest(\n                            this.props.placementList,\n                            this.props.thisPost._id,\n                            PlacedCandidateStatus.REJECTED\n                          ).length\n                        )}\n                      </span>\n                    </td>\n                  </tr>\n                </tbody>\n              </table>\n\n              <div className=\"my-2\">\n                {getPositionById(\n                  this.props.systemPositions,\n                  this.props.thisPost.position_id\n                ) && (\n                  <ViewPosition\n                    thisPosition={\n                      getPositionById(\n                        this.props.systemPositions,\n                        this.props.thisPost.position_id\n                      )!\n                    }\n                    isGuest={true}\n                  />\n                )}\n              </div>\n            </div>\n          </div>\n\n          <div className=\"px-4 mt-3 mb-4\">\n            {getPlacementByRequest(\n              this.props.placementList,\n              this.props.thisPost._id\n            ).map((item, index) => (\n              <div\n                className=\"relative grid grid-cols-1 gap-4 px-4 py-1 mb-8 border rounded bg-white shadow\"\n                key={index + item._id}\n              >\n                <div className=\"relative flex gap-4\">\n                  {/* IMG ================== */}\n                  <img\n                    src={API.AUTH_FILES + \"/\" + item.user_info.photo}\n                    className=\"object-center object-cover relative rounded-lg -top-4 -mb-3 bg-white border h-20 w-20\"\n                    alt=\"\"\n                    loading=\"lazy\"\n                  />\n                  <div className=\"flex flex-col w-full\">\n                    <div className=\"flex flex-row justify-between\">\n                      <p className=\"relative text-xl whitespace-nowrap truncate overflow-hidden\">\n                        {item.user_info.fname + \" \" + item.user_info.lname}\n                      </p>\n                    </div>\n                    <p className=\"text-gray-500 text-sm flex items-center gap-1\">\n                      <MdSmartphone /> {item.phone_number}\n                    </p>\n                    <p className=\"text-gray-500 text-sm flex items-center gap-1\">\n                      <MdMail /> {item.email}\n                    </p>\n                  </div>\n                </div>\n                <div className=\"-mt-3 overflow-x-hidden\">\n                  {this.state.action !== \"NOT_RECEIVED\" && (\n                    <div className=\"flex flex-row-reverse gap-2\">\n                      <div className=\"flex-initial\">\n                        <button\n                          type=\"button\"\n                          className=\"btn btn-blue flex items-center font-medium tracking-wide capitalize transition duration-300 transform active:scale-95 ease-in-out\"\n                          disabled={this.props.loadingRequest}\n                          onClick={() => {\n                            this.setState({\n                              placement_id: item._id,\n                              action: \"RECEIVED\",\n                              thisPlacement: item,\n                              takeAction: true,\n                            });\n                            // this.submitRequest(item, \"RECEIVED\");\n                          }}\n                        >\n                          <MdTaskAlt />\n                          <span className=\"pl-2 mx-1\">\n                            {this.props.loadingRequest &&\n                            item._id === this.state.placement_id\n                              ? \"Loading...\"\n                              : \"Received\"}\n                          </span>\n                        </button>\n                      </div>\n                      <div className=\"flex-initial\">\n                        <button\n                          type=\"button\"\n                          className=\"btn flex items-center px-5 py-2.5 font-medium tracking-wide text-black capitalize hover:bg-red-200 hover:fill-current hover:text-red-600 focus:outline-none transition duration-300 transform active:scale-95 ease-in-out\"\n                          disabled={this.props.loadingRequest}\n                          onClick={() =>\n                            this.setState({\n                              placement_id: item._id,\n                              action: \"NOT_RECEIVED\",\n                              thisPlacement: item,\n                            })\n                          }\n                        >\n                          <MdErrorOutline />\n                          <span className=\"pl-2 mx-1\">Not received</span>\n                        </button>\n                      </div>\n                    </div>\n                  )}\n                  {this.state.action === \"NOT_RECEIVED\" &&\n                    this.state.placement_id === item._id && (\n                      <div className=\"flex flex-col md:flex-row items-end md:items-start gap-2 animate__animated animate__fadeInRight animate__faster mt-2\">\n                        <div className=\"w-full\">\n                          <textarea\n                            className={`border-2 rounded p-2 md:text-base w-full ${\n                              this.props.formError &&\n                              this.props.formError.element ===\n                                \"received_comment\"\n                                ? \"border-red-500\"\n                                : \"border-gray-300\"\n                            } focus:border-gray-500`}\n                            placeholder=\"comment\"\n                            onChange={(e) => {\n                              this.setState({ comment: e.target.value });\n                              this.props.formError &&\n                                this.props.formError.element ===\n                                  \"received_comment\" &&\n                                this.props.setFormError(null);\n                            }}\n                            value={this.state.comment}\n                            style={{ resize: \"none\" }}\n                          ></textarea>\n                          {this.props.formError &&\n                            this.props.formError.element ===\n                              \"received_comment\" && (\n                              <span className=\"text-red-700 text-sm\">\n                                {this.props.formError.msg}\n                              </span>\n                            )}\n                        </div>\n\n                        <div>\n                          <button\n                            type=\"button\"\n                            className=\"btn bg-gray-100 hover:bg-gray-400 w-full font-medium tracking-wide capitalize transition duration-300 transform active:scale-95 ease-in-out\"\n                            disabled={this.props.loadingRequest}\n                            onClick={() => this.setTakeAction(true)}\n                          >\n                            {this.props.loadingRequest &&\n                            item._id === this.state.placement_id\n                              ? \"Loading...\"\n                              : \"Confirm\"}\n                          </button>\n                          <button\n                            type=\"button\"\n                            className=\"btn bg-red-100  w-full hover:bg-red-400 font-medium tracking-wide capitalize transition duration-300 transform active:scale-95 ease-in-out\"\n                            disabled={this.props.loadingRequest}\n                            onClick={() =>\n                              this.setState({\n                                placement_id: \"\",\n                                action: null,\n                                thisPlacement: null,\n                              })\n                            }\n                          >\n                            {this.props.loadingRequest &&\n                            item._id === this.state.placement_id\n                              ? \"Loading...\"\n                              : \"Cancel\"}\n                          </button>\n                        </div>\n                      </div>\n                    )}\n                </div>\n              </div>\n            ))}\n          </div>\n        </div>\n\n        {this.state.thisPlacement &&\n          this.state.action &&\n          this.state.takeAction && (\n            <ActionConfirm\n              confirmFun={() => {\n                this.setTakeAction(false);\n                this.submitRequest(\n                  this.state.thisPlacement!,\n                  this.state.action!\n                );\n              }}\n              setModalAction={(value: boolean) => {\n                this.setTakeAction(value);\n                this.setThisPlacement(null);\n                this.setAction(null);\n                this.setState({\n                  placement_id: \"\",\n                });\n              }}\n              description={\n                this.state.action === \"NOT_RECEIVED\"\n                  ? `Do you really confirm that ${this.state.thisPlacement.user_info.fname} ${this.state.thisPlacement.user_info.lname} didn't or will not come?`\n                  : `Do you really confirm that you have received ${this.state.thisPlacement.user_info.fname} ${this.state.thisPlacement.user_info.lname}?`\n              }\n              modalType={ActionConfirmEnum.INFO}\n            />\n          )}\n      </section>\n    );\n  }\n}\n\nconst mapStateToProps = ({\n  auth,\n}: StoreState): {\n  auth: Auth;\n} => {\n  return {\n    auth: auth,\n  };\n};\nexport default connect(mapStateToProps, {\n  fetchSchoolPosts,\n  getSchoolPlacement,\n  PushPopupAlert,\n})(ReceivePost);\n","import React, { Component } from \"react\";\nimport { BiReply } from \"react-icons/bi\";\nimport Modal, { ModalSize, Themes } from \"../../components/Modal/Modal\";\nimport { PositionAPI } from \"../../interfaces\";\nimport { placedCandidateInterface } from \"../../interfaces/marks_publication\";\nimport { capitalizeFirstLetter, getPositionById } from \"../../shared/dataTest\";\nimport {\n  PostRequestStatusInterface,\n  PostSchoolInterface,\n} from \"../../shared/interfaces\";\nimport { getPlacementByRequest } from \"./RequestTeacher\";\n\ninterface ViewRequestProps {\n  thisPost: PostSchoolInterface;\n  setThisPost: (value: PostSchoolInterface | null) => void;\n  setViewPost: (value: boolean) => void;\n  systemPositions: PositionAPI[];\n  schoolPlacements: placedCandidateInterface[];\n  setPostId: (value: string) => void;\n  setModalState: (value: \"CREATE\" | \"UPDATE\" | \"RECEIVE\" | null) => void;\n  setPositionId: (value: string) => void;\n  setRequestedPosts: (value: number) => void;\n  setRequestExplanation: (value: string) => void;\n  setFemaleOnPosition: (value: number) => void;\n  setMaleOnPosition: (value: number) => void;\n  setFormSteps: (value: { ONE: boolean; TWO: boolean }) => void;\n  setStepState: (value: { ONE: boolean; TWO: boolean }) => void;\n}\n\nexport class ViewRequest extends Component<ViewRequestProps> {\n  render() {\n    return (\n      <Modal\n        backDrop={true}\n        theme={Themes.default}\n        close={(): void => {\n          this.props.setThisPost(null);\n          this.props.setViewPost(false);\n        }}\n        displayClose={true}\n        backDropClose={false}\n        title={\n          <div className=\"flex flex-row gap-4 items-center\">\n            <div className=\"flex flex-col\">\n              <span className=\"font-bold text-2xl text-gray-500\">\n                Viewing Post Request\n              </span>\n            </div>\n          </div>\n        }\n        widthSizeClass={ModalSize.large}\n        padding={{ title: true, body: false, footer: false }}\n      >\n        <section className=\"px-4 mx-auto mb-4 mt-3 flex items-start\">\n          <section className=\"w-full\">\n            <div className=\"flex flex-row item-center justify-left gap-3 mb-2\">\n              <span className=\"text-gray-500 italic\">Position: </span>\n              <span className=\"font-bold\">\n                {getPositionById(\n                  this.props.systemPositions,\n                  this.props.thisPost.position_id\n                )\n                  ? getPositionById(\n                      this.props.systemPositions,\n                      this.props.thisPost.position_id\n                    )!.position_title\n                  : \"Unknown position\"}\n              </span>\n            </div>\n            <div className=\"flex flex-row item-center justify-left gap-3 mb-2\">\n              <span className=\"text-gray-500 italic\">Requested posts: </span>\n              <span className=\"font-bold text-xl\">\n                {this.props.thisPost.needed_posts}\n              </span>\n            </div>\n            <div className=\"flex flex-row item-center justify-left gap-3 mb-2\">\n              <span className=\"text-gray-500 italic\">Approved posts: </span>\n              <span className=\"font-bold text-xl\">\n                {this.props.thisPost.requested_post_status !==\n                PostRequestStatusInterface.INITIATED\n                  ? this.props.thisPost.confirmed_posts\n                  : \"-\"}\n              </span>\n            </div>\n            <div className=\"flex flex-row item-center justify-left gap-3 mb-2\">\n              <span className=\"text-gray-500 italic\">Placed posts: </span>\n              <span className=\"font-bold text-xl\">\n                {this.props.thisPost.requested_post_status !==\n                PostRequestStatusInterface.INITIATED ? (\n                  <div\n                    className=\"flex items-center gap-1 cursor-pointer\"\n                    onClick={() => this.props.setModalState(\"RECEIVE\")}\n                  >\n                    {\n                      getPlacementByRequest(\n                        this.props.schoolPlacements,\n                        this.props.thisPost._id\n                      ).length\n                    }\n                    {getPlacementByRequest(\n                      this.props.schoolPlacements,\n                      this.props.thisPost._id\n                    ).length > 0 && (\n                      <BiReply className=\"bg-yellow-600 w-5 h-5 text-white\" />\n                    )}\n                  </div>\n                ) : (\n                  \"-\"\n                )}\n              </span>\n            </div>\n            <div className=\"flex flex-row item-center justify-left gap-3 mb-2\">\n              <span className=\"text-gray-500 italic\">Received posts: </span>\n              <span className=\"font-bold text-xl\">\n                {this.props.thisPost.requested_post_status ===\n                PostRequestStatusInterface.RECEIVED\n                  ? this.props.thisPost.received_posts\n                  : \"-\"}\n              </span>\n            </div>\n            <div className=\"flex flex-row item-center justify-left gap-3 mb-2\">\n              <span className=\"text-gray-500 italic\">Number of female: </span>\n              <span className=\"font-bold text-xl\">\n                {this.props.thisPost.female_number}\n              </span>\n            </div>\n            <div className=\"flex flex-row item-center justify-left gap-3 mb-2\">\n              <span className=\"text-gray-500 italic\">Number of male: </span>\n              <span className=\"font-bold text-xl\">\n                {this.props.thisPost.male_number}\n              </span>\n            </div>\n            <div className=\"flex flex-row item-center justify-left gap-3 mb-2\">\n              <span className=\"text-gray-500 italic\">Request reason: </span>\n              <span className=\"font-bold text-xl\">\n                {this.props.thisPost.description}\n              </span>\n            </div>\n            <div className=\"flex flex-row item-center justify-left gap-3 mb-2\">\n              <span className=\"text-gray-500 italic\">Status: </span>\n              <span\n                className={`px-2 py-1 mx-1 font-semibold rounded ${\n                  this.props.thisPost.requested_post_status ===\n                  PostRequestStatusInterface.INITIATED\n                    ? \"text-gray-700 bg-gray-100 dark:bg-gray-700 dark:text-gray-100\"\n                    : this.props.thisPost.requested_post_status ===\n                      PostRequestStatusInterface.CONFIRMED\n                    ? \"text-blue-700 bg-blue-100 dark:bg-blue-700 dark:text-blue-100\"\n                    : \"text-green-800 bg-green-100 dark:bg-green-800 dark:text-green-100\"\n                }`}\n              >\n                {this.props.thisPost.requested_post_status ===\n                PostRequestStatusInterface.INITIATED\n                  ? \"Pending\"\n                  : capitalizeFirstLetter(\n                      this.props.thisPost.requested_post_status\n                    )}\n              </span>\n            </div>\n          </section>\n          <div className=\"mb-3 flex items-center justify-end gap-2\">\n            {this.props.thisPost.requested_post_status ===\n              PostRequestStatusInterface.INITIATED && (\n              <button\n                className=\"font-bold py-1 px-4 rounded bg-gray-500 text-white hover:bg-gray-700\"\n                onClick={() => {\n                  this.props.setModalState(\"UPDATE\");\n                  this.props.setPostId(this.props.thisPost._id);\n                  this.props.setPositionId(this.props.thisPost.position_id);\n                  this.props.setRequestedPosts(\n                    this.props.thisPost.needed_posts\n                  );\n                  this.props.setRequestExplanation(\n                    this.props.thisPost.description\n                  );\n                  this.props.setFemaleOnPosition(\n                    this.props.thisPost.female_number\n                  );\n                  this.props.setMaleOnPosition(this.props.thisPost.male_number);\n                  this.props.setFormSteps({ ONE: true, TWO: false });\n                  this.props.setStepState({ ONE: false, TWO: false });\n                }}\n                disabled={\n                  this.props.thisPost.requested_post_status !==\n                  PostRequestStatusInterface.INITIATED\n                }\n              >\n                Edit\n              </button>\n            )}\n            {this.props.thisPost.requested_post_status !==\n              PostRequestStatusInterface.INITIATED &&\n              getPlacementByRequest(\n                this.props.schoolPlacements,\n                this.props.thisPost._id\n              ).length > 0 && (\n                <button\n                  className=\"font-bold py-1 px-2 rounded bg-gray-500 text-white hover:bg-gray-700\"\n                  onClick={() => this.props.setModalState(\"RECEIVE\")}\n                >\n                  Receive\n                </button>\n              )}\n          </div>\n        </section>\n      </Modal>\n    );\n  }\n}\n\nexport default ViewRequest;\n","import React, { Component } from \"react\";\nimport { BiReply } from \"react-icons/bi\";\nimport NoResult, { NoResultThemes } from \"../../components/NoResult/NoResult\";\nimport { PositionAPI } from \"../../interfaces\";\nimport {\n  placedCandidateInterface,\n  PlacedCandidateStatus,\n} from \"../../interfaces/marks_publication\";\nimport { getPositionById } from \"../../shared/dataTest\";\nimport {\n  PostRequestStatusInterface,\n  PostSchoolInterface,\n} from \"../../shared/interfaces\";\nimport { showRequestStatus } from \"./ReceivePost\";\nimport { getPlacementByRequest } from \"./RequestTeacher\";\nimport ViewRequest from \"./ViewRequest\";\n\ninterface RequestListProps {\n  schoolPosts: PostSchoolInterface[];\n  systemPositions: PositionAPI[] | null;\n  setModalState: (value: \"CREATE\" | \"UPDATE\" | \"RECEIVE\" | null) => void;\n  loadingRequest: boolean;\n  filterByPosition: string;\n  setFilterByPosition: (value: string) => void;\n  setThisPost: (value: PostSchoolInterface | null) => void;\n  setViewPost: (value: boolean) => void;\n\n  schoolPlacements: placedCandidateInterface[];\n\n  thisPost: PostSchoolInterface | null;\n  setPostId: (value: string) => void;\n  setPositionId: (value: string) => void;\n  setRequestedPosts: (value: number) => void;\n  setRequestExplanation: (value: string) => void;\n  setFemaleOnPosition: (value: number) => void;\n  setMaleOnPosition: (value: number) => void;\n  setFormSteps: (value: { ONE: boolean; TWO: boolean }) => void;\n  setStepState: (value: { ONE: boolean; TWO: boolean }) => void;\n  viewPost: boolean;\n  modalState: \"CREATE\" | \"UPDATE\" | \"RECEIVE\" | null;\n}\n\ninterface RequestListState {\n  searchInput: string;\n}\n\nclass RequestList extends Component<RequestListProps, RequestListState> {\n  constructor(props: RequestListProps) {\n    super(props);\n\n    this.state = {\n      searchInput: \"\",\n    };\n  }\n\n  setSearchInput = (value: string) => {\n    this.setState({ searchInput: value });\n  };\n\n  render() {\n    return (\n      <div>\n        <div className=\"my-2 flex sm:flex-row flex-col justify-between\">\n          <div className=\"flex flex-col md:flex-row\">\n            <select\n              className=\"border-2 border-gray-700 bg-white p-2 rounded focus:outline-none\"\n              onChange={(e) => this.props.setFilterByPosition(e.target.value)}\n              value={this.props.filterByPosition}\n            >\n              <option value=\"all\">All Position</option>\n              {this.props.systemPositions &&\n              this.props.systemPositions.length > 0 ? (\n                this.props.systemPositions.map((position, index) => (\n                  <option key={index + 1} value={position.position_id}>\n                    {position.position_title}\n                  </option>\n                ))\n              ) : (\n                <option value=\"\">No Position found</option>\n              )}\n            </select>\n          </div>\n          <div className=\"block relative\">\n            <div className=\"pt-6 md:pt-0 md:pl-6\">\n              <button\n                className=\"btn bg-primary text-white hover:bg-blue-600\"\n                onClick={() => this.props.setModalState(\"CREATE\")}\n                disabled={this.props.loadingRequest}\n              >\n                Request Teacher\n              </button>\n            </div>\n          </div>\n        </div>\n\n        <div className=\"w-full py-2\">\n          <input\n            onChange={(e) => this.setSearchInput(e.target.value)}\n            type=\"text\"\n            value={this.state.searchInput}\n            placeholder=\"Search...\"\n            className=\"w-full bg-gray-50 border-2 border-gray-400 py-2 px-3 rounded focus:border-gray-800\"\n            disabled={\n              this.props.schoolPosts.length <= 0 || this.props.loadingRequest\n            }\n          />\n        </div>\n\n        <table className=\"w-full shadow\" id=\"report_content\">\n          <thead className=\"bg-blue-50 border-b-2 border-gray-300 text-gray-600 font-bold text-sm\">\n            <tr>\n              <td className=\"px-2 py-2\">#</td>\n              <td className=\"px-2 py-2\">Position</td>\n              <td className=\"px-2 py-2\">Current F</td>\n              <td className=\"px-2 py-2\">Current M</td>\n              <td className=\"px-2 py-2\">Request</td>\n              <td className=\"px-2 py-2\">Approved</td>\n              <td className=\"px-2 py-2\">Placed</td>\n              <td className=\"px-2 py-2\">Received</td>\n              <td className=\"px-2 py-2\">Not Received</td>\n              <td className=\"px-2 py-2\">Vacant</td>\n              <td className=\"px-2 py-2\">Status</td>\n              <td className=\"px-2 py-2\"></td>\n            </tr>\n          </thead>\n          <tbody>\n            {this.props.schoolPosts.length > 0 ? (\n              this.props.schoolPosts.map((schoolPost, index) => (\n                <tr\n                  key={index + schoolPost._id}\n                  className=\"border-b border-gray-200 hover:bg-gray-100\"\n                >\n                  <td className=\"px-2 py-3 text-left font-medium\">\n                    {index + 1}\n                  </td>\n                  <td className=\"py-3 px-1 text-left font-medium\">\n                    {this.props.systemPositions &&\n                    getPositionById(\n                      this.props.systemPositions,\n                      schoolPost.position_id\n                    )\n                      ? getPositionById(\n                          this.props.systemPositions,\n                          schoolPost.position_id\n                        )!.position_title\n                      : \"Unknown position\"}\n                  </td>\n                  <td className=\"py-3 px-3 text-left text-base font-medium\">\n                    {schoolPost.female_number}\n                  </td>\n                  <td className=\"py-3 px-3 text-left text-base font-medium\">\n                    {schoolPost.male_number}\n                  </td>\n                  <td className=\"py-3 px-3 text-left text-base font-medium\">\n                    {schoolPost.needed_posts}\n                  </td>\n                  <td className=\"py-3 px-3 text-left text-base font-medium\">\n                    {schoolPost.requested_post_status !==\n                    PostRequestStatusInterface.INITIATED\n                      ? schoolPost.confirmed_posts\n                      : \"-\"}\n                  </td>\n                  <td className=\"py-3 px-3 text-left text-base font-medium\">\n                    <div className=\"flex items-center gap-1\">\n                      {schoolPost.confirmed_posts &&\n                        getPlacementByRequest(\n                          this.props.schoolPlacements,\n                          schoolPost._id\n                        ).length}\n                      {getPlacementByRequest(\n                        this.props.schoolPlacements,\n                        schoolPost._id\n                      ).length > 0 && (\n                        <BiReply\n                          className=\"bg-yellow-600 w-5 h-5 text-white cursor-pointer\"\n                          onClick={() => {\n                            this.props.setModalState(\"RECEIVE\");\n                            this.props.setThisPost(schoolPost);\n                          }}\n                        />\n                      )}\n                    </div>\n                  </td>\n                  <td className=\"py-3 px-3 text-left text-base font-medium\">\n                    {schoolPost.received_posts}\n                  </td>\n                  <td className=\"py-3 px-3 text-left text-base font-medium\">\n                    {schoolPost.confirmed_posts &&\n                      getPlacementByRequest(\n                        this.props.schoolPlacements,\n                        schoolPost._id,\n                        PlacedCandidateStatus.REJECTED\n                      ).length}\n                  </td>\n                  <td className=\"py-3 px-3 text-left text-base font-medium\">\n                    {schoolPost.confirmed_posts &&\n                      getPlacementByRequest(\n                        this.props.schoolPlacements,\n                        schoolPost._id,\n                        \"all\"\n                      ).length -\n                        getPlacementByRequest(\n                          this.props.schoolPlacements,\n                          schoolPost._id,\n                          PlacedCandidateStatus.PLACED\n                        ).length}\n                  </td>\n                  <td>\n                    <span\n                      className={`px-2 py-1 font-semibold rounded ${\n                        schoolPost.requested_post_status ===\n                        PostRequestStatusInterface.INITIATED\n                          ? \"text-gray-700 bg-gray-100 dark:bg-gray-700 dark:text-gray-100\"\n                          : schoolPost.requested_post_status ===\n                            PostRequestStatusInterface.CONFIRMED\n                          ? \"text-blue-700 bg-blue-100 dark:bg-blue-700 dark:text-blue-100\"\n                          : \"text-green-800 bg-green-100 dark:bg-green-800 dark:text-green-100\"\n                      }`}\n                    >\n                      {showRequestStatus(\n                        schoolPost.requested_post_status,\n                        getPlacementByRequest(\n                          this.props.schoolPlacements,\n                          schoolPost._id,\n                          \"all\"\n                        ).length,\n                        getPlacementByRequest(\n                          this.props.schoolPlacements,\n                          schoolPost._id,\n                          PlacedCandidateStatus.PLACED\n                        ).length,\n                        getPlacementByRequest(\n                          this.props.schoolPlacements,\n                          schoolPost._id,\n                          PlacedCandidateStatus.REJECTED\n                        ).length\n                      )}\n                    </span>\n                  </td>\n                  <td className=\"py- text-left\">\n                    <div className=\"flex item-center justify-end gap-1\">\n                      <button\n                        className=\"btn btn-blue transition ease-out duration-500 flex items-center\"\n                        title=\"View User Profile\"\n                        onClick={() => {\n                          this.props.setThisPost(schoolPost);\n                          this.props.setViewPost(true);\n                        }}\n                      >\n                        Details\n                      </button>\n                      {schoolPost.requested_post_status ===\n                        PostRequestStatusInterface.INITIATED && (\n                        <button\n                          className=\"btn bg-gray-500 text-white hover:bg-gray-700\"\n                          onClick={() => {\n                            this.props.setModalState(\"UPDATE\");\n                            this.props.setPostId(schoolPost._id);\n                            this.props.setPositionId(schoolPost.position_id);\n                            this.props.setRequestedPosts(\n                              schoolPost.needed_posts\n                            );\n                            this.props.setRequestExplanation(\n                              schoolPost.description\n                            );\n                            this.props.setFemaleOnPosition(\n                              schoolPost.female_number\n                            );\n                            this.props.setMaleOnPosition(\n                              schoolPost.male_number\n                            );\n                            this.props.setFormSteps({ ONE: true, TWO: false });\n                            this.props.setStepState({ ONE: false, TWO: false });\n                          }}\n                          disabled={this.props.loadingRequest}\n                        >\n                          Edit\n                        </button>\n                      )}\n                      {getPlacementByRequest(\n                        this.props.schoolPlacements,\n                        schoolPost._id\n                      ).length > 0 && (\n                        <button\n                          className=\"btn bg-green-600 text-white hover:bg-green-700\"\n                          onClick={() => {\n                            this.props.setModalState(\"RECEIVE\");\n                            this.props.setThisPost(schoolPost);\n                          }}\n                          disabled={this.props.loadingRequest}\n                        >\n                          Receive\n                        </button>\n                      )}\n                    </div>\n                  </td>\n                </tr>\n              ))\n            ) : (\n              <tr>\n                <td colSpan={12}>\n                  <NoResult\n                    theme={NoResultThemes.Dark}\n                    value={\"No request have been made!\"}\n                  />\n                </td>\n              </tr>\n            )}\n          </tbody>\n        </table>\n\n        {this.props.viewPost &&\n          this.props.modalState === null &&\n          this.props.thisPost &&\n          this.props.systemPositions && (\n            <ViewRequest\n              thisPost={this.props.thisPost}\n              setThisPost={this.props.setThisPost}\n              setViewPost={this.props.setViewPost}\n              systemPositions={this.props.systemPositions}\n              schoolPlacements={this.props.schoolPlacements}\n              setPostId={this.props.setPostId}\n              setModalState={this.props.setModalState}\n              setPositionId={this.props.setPositionId}\n              setRequestedPosts={this.props.setRequestedPosts}\n              setRequestExplanation={this.props.setRequestExplanation}\n              setFemaleOnPosition={this.props.setFemaleOnPosition}\n              setMaleOnPosition={this.props.setMaleOnPosition}\n              setFormSteps={this.props.setFormSteps}\n              setStepState={this.props.setStepState}\n            />\n          )}\n      </div>\n    );\n  }\n}\n\nexport default RequestList;\n","import React, { Fragment } from \"react\";\nimport { FaSchool } from \"react-icons/fa\";\nimport { VscOpenPreview } from \"react-icons/vsc\";\n\ninterface StepsHeaderProps {\n  currentStep: number;\n  stepState: {\n    ONE: boolean;\n    TWO: boolean;\n  };\n  setFormSteps: (value: { ONE: boolean; TWO: boolean }) => void;\n}\n\nconst StepsHeader: React.FC<StepsHeaderProps> = (props) => {\n  return (\n    <Fragment>\n      <div className=\"p-5\">\n        <div className=\"mx-4 p-4\">\n          <div className=\"flex items-center\">\n            {/* STEP ONE ================================== */}\n            <div\n              className={`flex items-center ${\n                props.currentStep === 1\n                  ? \"text-white\"\n                  : props.stepState.ONE\n                  ? \"text-blue-500 cursor-pointer\"\n                  : \"text-gray-500\"\n              } relative`}\n              onClick={() =>\n                props.stepState.ONE &&\n                props.setFormSteps({\n                  ONE: true,\n                  TWO: false,\n                })\n              }\n            >\n              <div\n                className={`rounded-full transition duration-500 ease-in-out h-12 w-12 py-3 border-2 ${\n                  props.currentStep === 1\n                    ? \"border-blue-500 bg-blue-500\"\n                    : props.stepState.ONE\n                    ? \"border-blue-500 cursor-pointer\"\n                    : \"border-gray-500\"\n                }`}\n              >\n                <FaSchool className=\"feather feather-bookmark w-full h-full\" />\n              </div>\n              <div\n                className={`absolute top-0 -ml-10 text-center mt-16 w-32 text-xs font-semibold uppercase ${\n                  props.currentStep === 1\n                    ? \"text-blue-500\"\n                    : props.stepState.ONE\n                    ? \"text-blue-500 cursor-pointer\"\n                    : \"text-gray-500\"\n                }`}\n              >\n                Position\n              </div>\n            </div>\n            <div\n              className={`flex-auto border-t-2 transition duration-500 ease-in-out ${\n                props.stepState.ONE ? \"border-blue-500\" : \"border-gray-300\"\n              }`}\n            ></div>\n\n            {/* STEP TWO ================================== */}\n            <div\n              className={`flex items-center ${\n                props.currentStep === 4\n                  ? \"text-white\"\n                  : props.stepState.TWO\n                  ? \"text-blue-500 cursor-pointer\"\n                  : \"text-gray-500\"\n              } relative`}\n              onClick={() =>\n                props.stepState.TWO &&\n                props.setFormSteps({\n                  ONE: false,\n                  TWO: false,\n                })\n              }\n            >\n              <div\n                className={`rounded-full transition duration-500 ease-in-out h-12 w-12 py-3 border-2 ${\n                  props.currentStep === 4\n                    ? \"border-blue-500 bg-blue-500\"\n                    : props.stepState.TWO\n                    ? \"border-blue-500 cursor-pointer\"\n                    : \"border-gray-500\"\n                }`}\n              >\n                <VscOpenPreview className=\"feather feather-database w-full h-full\" />\n              </div>\n              <div\n                className={`absolute top-0 -ml-10 text-center mt-16 w-32 text-xs font-semibold uppercase ${\n                  props.currentStep === 4\n                    ? \"text-blue-500\"\n                    : props.stepState.TWO\n                    ? \"text-blue-500\"\n                    : \"text-gray-500\"\n                }`}\n              >\n                Description\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </Fragment>\n  );\n};\n\nexport default StepsHeader;\n","import axios from \"axios\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport {\n  Auth,\n  PushPopupAlert,\n  schoolLevelsStoreInterface,\n} from \"../../actions\";\nimport { createSchoolPost, updateSchoolPost } from \"../../actions/schools\";\nimport { PopupAlertData } from \"../../components/Alert/Popup\";\nimport { PositionAPI } from \"../../interfaces\";\nimport { PopupAlertTheme } from \"../../interfaces/popupAlert\";\nimport { StoreState } from \"../../reducers\";\nimport { getPositionById, isEmptyOrSpaces } from \"../../shared/dataTest\";\nimport {\n  MySchoolInterface,\n  PostRequestStatusInterface,\n  PostSchoolInterface,\n} from \"../../shared/interfaces\";\nimport { API } from \"../../utils/api\";\nimport { errorToText } from \"../../utils/errors\";\nimport ViewPosition from \"../Positions/ViewPosition\";\nimport StepsHeader from \"./StepsHeader\";\n\ninterface RequestPostFormProps {\n  loadingRequest: boolean;\n  setLoadingRequest: (value: boolean) => void;\n  formSteps: {\n    ONE: boolean;\n    TWO: boolean;\n  };\n  setFormSteps: (value: { ONE: boolean; TWO: boolean }) => void;\n  stepState: {\n    ONE: boolean;\n    TWO: boolean;\n  };\n  setStepState: (value: { ONE: boolean; TWO: boolean }) => void;\n  sessionId: string;\n  postId: string;\n  setPostId: (value: string) => void;\n  positionId: string;\n  setPositionId: (value: string) => void;\n  setRequestedPosts: (value: number) => void;\n  requestedPosts: number;\n  maleOnPosition: number;\n  femaleOnPosition: number;\n  setFemaleOnPosition: (value: number) => void;\n  setMaleOnPosition: (value: number) => void;\n  requestExplanation: string;\n  setRequestExplanation: (value: string) => void;\n  modalState: \"CREATE\" | \"UPDATE\" | \"RECEIVE\" | null;\n  setModalState: (value: \"CREATE\" | \"UPDATE\" | \"RECEIVE\" | null) => void;\n  formError: {\n    element: string;\n    msg: string;\n  } | null;\n  setFormError: (\n    value: {\n      element: string;\n      msg: string;\n    } | null\n  ) => void;\n\n  //   REDUX =================\n  auth: Auth;\n  mySchool: MySchoolInterface | null;\n  schoolPosts: PostSchoolInterface[];\n  schoolLevels: schoolLevelsStoreInterface;\n  systemPositions: PositionAPI[] | null;\n  createSchoolPost: Function;\n  updateSchoolPost: Function;\n  PushPopupAlert: (alert: PopupAlertData) => void;\n}\n\ninterface RequestPostFormState {\n  selectedLevel: string;\n  error: string | null;\n}\n\nexport class RequestPostForm extends Component<\n  RequestPostFormProps,\n  RequestPostFormState\n> {\n  constructor(props: RequestPostFormProps) {\n    super(props);\n\n    this.state = {\n      selectedLevel: \"\",\n      error: null,\n    };\n  }\n\n  GetAllowedPositions = (position_id?: string): PositionAPI[] => {\n    if (this.props.systemPositions) {\n      if (this.props.schoolPosts.length > 0) {\n        let postPositionIds: string[] = [];\n        for (const key in this.props.schoolPosts) {\n          if (\n            Object.prototype.hasOwnProperty.call(this.props.schoolPosts, key)\n          ) {\n            if (\n              this.props.schoolPosts[key].requested_post_status !==\n                PostRequestStatusInterface.RECEIVED ||\n              (this.props.schoolPosts[key].requested_post_status !==\n                PostRequestStatusInterface.CONFIRMED &&\n                this.props.schoolPosts[key].confirmed_posts &&\n                this.props.schoolPosts[key].confirmed_posts === 0)\n            ) {\n              if (\n                !position_id ||\n                position_id !== this.props.schoolPosts[key].position_id\n              ) {\n                postPositionIds.push(this.props.schoolPosts[key].position_id);\n              }\n            }\n          }\n        }\n        if (position_id) {\n          postPositionIds = postPositionIds.filter(\n            (item) => item !== position_id\n          );\n        }\n        return this.props.systemPositions.filter(\n          (item) => !postPositionIds.includes(item.position_id)\n        );\n      }\n      return this.props.systemPositions;\n    }\n    return [];\n  };\n\n  submitRequest = async (e: React.FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n    // if (this.props.modalState === \"RECEIVE\" && this.props.receivedPosts < 0) {\n    //   return this.props.setFormError({\n    //     element: \"received_posts\",\n    //     msg: \"Invalid number of received post\",\n    //   });\n    // }\n    // if (\n    //   this.props.modalState === \"RECEIVE\" &&\n    //   this.props.thisPost &&\n    //   this.props.receivedPosts > this.props.thisPost.needed_posts\n    // ) {\n    //   return this.props.setFormError({\n    //     element: \"received_posts\",\n    //     msg: \"Invalid number of received post\",\n    //   });\n    // }\n\n    if (this.props.requestedPosts <= 0) {\n      return this.props.setFormError({\n        element: \"requested_posts\",\n        msg: \"Needed post must be greater than 0\",\n      });\n    }\n\n    if (isEmptyOrSpaces(this.props.requestExplanation)) {\n      return this.props.setFormError({\n        element: \"comment\",\n        msg: \"Explanation is required!\",\n      });\n    }\n\n    const thisSchool = this.props.mySchool;\n    if (!thisSchool) {\n      return this.props.PushPopupAlert({\n        title: \"No district id found\",\n        theme: PopupAlertTheme.danger,\n      });\n    }\n\n    if (\n      this.props.modalState === \"UPDATE\" &&\n      isEmptyOrSpaces(this.props.postId)\n    ) {\n      return this.setState({ error: \"Post id not find\" });\n    }\n\n    this.props.setLoadingRequest(true);\n    try {\n      if (this.props.modalState === \"CREATE\") {\n        const res = await axios.post<{ data: PostSchoolInterface }>(\n          `${API.PLACEMENT}/requestpost`,\n          {\n            school_id: this.props.auth.user_access.school_id,\n            position_id: this.props.positionId,\n            district_id: thisSchool.district_id,\n            needed_posts: this.props.requestedPosts,\n            male_number: this.props.maleOnPosition,\n            female_number: this.props.femaleOnPosition,\n            // description: 44,\n            description: this.props.requestExplanation,\n            occupied_posts:\n              Number(this.props.maleOnPosition) +\n              Number(this.props.femaleOnPosition),\n            requested_by: this.props.auth.user.user_id,\n            post_request_session_id: this.props.sessionId,\n          }\n        );\n        if (res) {\n          this.props.createSchoolPost(res.data.data);\n          this.props.setPositionId(\"\");\n          this.props.setRequestedPosts(0);\n          this.props.setFemaleOnPosition(0);\n          this.props.setMaleOnPosition(0);\n          this.props.setRequestExplanation(\"\");\n          this.props.setFormSteps({ ONE: true, TWO: false });\n          this.props.setStepState({ ONE: false, TWO: false });\n          this.props.PushPopupAlert({\n            title: `Post(s) has been requested!`,\n            theme: PopupAlertTheme.success,\n          });\n        }\n      }\n\n      if (this.props.modalState === \"UPDATE\") {\n        console.log(\"====================================\");\n        console.log({\n          confirmed_posts: 0,\n          confirmed_by: null,\n          received_posts: 0,\n          approval_date: null,\n          school_id: this.props.auth.user_access.school_id,\n          position_id: this.props.positionId,\n          district_id: thisSchool.district_id._id,\n          needed_posts: this.props.requestedPosts,\n          male_number: this.props.maleOnPosition,\n          female_number: this.props.femaleOnPosition,\n          description: this.props.requestExplanation,\n          occupied_posts:\n            Number(this.props.maleOnPosition) +\n            Number(this.props.femaleOnPosition),\n          requested_by: this.props.auth.user.user_id,\n          requested_post_status: PostRequestStatusInterface.INITIATED,\n        });\n        console.log(\"====================================\");\n        const res = await axios.patch<{ data: PostSchoolInterface }>(\n          `${API.PLACEMENT}/requestpost/${this.props.postId}`,\n          {\n            confirmed_posts: 0,\n            confirmed_by: null,\n            received_posts: 0,\n            approval_date: null,\n            school_id: this.props.auth.user_access.school_id,\n            position_id: this.props.positionId,\n            district_id: thisSchool.district_id,\n            needed_posts: this.props.requestedPosts,\n            male_number: this.props.maleOnPosition,\n            female_number: this.props.femaleOnPosition,\n            description: this.props.requestExplanation,\n            occupied_posts:\n              Number(this.props.maleOnPosition) +\n              Number(this.props.femaleOnPosition),\n            requested_by: this.props.auth.user.user_id,\n            requested_post_status: PostRequestStatusInterface.INITIATED,\n            post_request_session_id: this.props.sessionId,\n          }\n        );\n\n        if (res) {\n          console.log(\"====================================\");\n          console.log({ updateSchoolPost: res.data.data });\n          console.log(\"====================================\");\n          this.props.updateSchoolPost(\"SCHOOL\", res.data.data);\n          this.props.setPostId(\"\");\n          this.props.setPositionId(\"\");\n          this.props.setRequestedPosts(0);\n          this.props.setFemaleOnPosition(0);\n          this.props.setMaleOnPosition(0);\n          this.props.setRequestExplanation(\"\");\n          this.props.setFormSteps({ ONE: true, TWO: false });\n          this.props.setStepState({ ONE: false, TWO: false });\n          this.props.PushPopupAlert({\n            title: `Post(s) has been updated!`,\n            theme: PopupAlertTheme.info,\n          });\n        }\n      }\n    } catch (error) {\n      console.error({ role_error: error });\n      this.props.PushPopupAlert({\n        title: errorToText(error),\n        theme: PopupAlertTheme.danger,\n      });\n    }\n    this.props.setLoadingRequest(false);\n  };\n\n  setSchoolLevel = (value: string) => {\n    this.setState({ selectedLevel: value });\n  };\n\n  getPositionByLevelId = (\n    allPosition: PositionAPI[],\n    levelId: string\n  ): PositionAPI[] => {\n    if (isEmptyOrSpaces(levelId)) {\n      return allPosition;\n    }\n    return allPosition.filter(\n      (item) => item.school_level_id.school_level_id === levelId\n    );\n  };\n\n  render() {\n    return (\n      <div>\n        <StepsHeader\n          currentStep={this.props.formSteps.TWO ? 2 : 1}\n          stepState={this.props.stepState}\n          setFormSteps={this.props.setFormSteps}\n        />\n        <div className=\"px-4 mx-auto mb-4 mt-3\">\n          {this.props.formSteps.ONE && (\n            <section>\n              <div className=\"flex flex-col mb-4\">\n                <label>School level</label>\n                <select\n                  className=\"border-2 border-gray-700 bg-white p-2 rounded focus:outline-none focus:bg-gray-100\"\n                  value={this.state.selectedLevel}\n                  onChange={(e) => {\n                    this.setSchoolLevel(e.target.value);\n                  }}\n                >\n                  <option value=\"\">Choose level</option>\n                  {this.props.schoolLevels.school_levels &&\n                  this.props.schoolLevels.school_levels.length > 0 ? (\n                    this.props.schoolLevels.school_levels.map((item, index) => (\n                      <option key={index + 11} value={item.school_level_id}>\n                        {item.school_level_name}\n                      </option>\n                    ))\n                  ) : (\n                    <option>No school level found</option>\n                  )}\n                </select>\n              </div>\n\n              <div className=\"flex flex-col\">\n                <label>Select Position</label>\n                <select\n                  className=\"border-2 border-gray-700 bg-white p-2 rounded focus:outline-none focus:bg-gray-100\"\n                  value={this.props.positionId}\n                  onChange={(e) => {\n                    this.props.setPositionId(e.target.value);\n                  }}\n                >\n                  <option value=\"\">Choose Position</option>\n                  {this.props.systemPositions &&\n                  this.getPositionByLevelId(\n                    this.GetAllowedPositions(\n                      this.props.positionId.length > 0\n                        ? this.props.positionId\n                        : \"\"\n                    ),\n                    this.state.selectedLevel\n                  ).length > 0 ? (\n                    this.getPositionByLevelId(\n                      this.GetAllowedPositions(\n                        this.props.positionId.length > 0\n                          ? this.props.positionId\n                          : \"\"\n                      ),\n                      this.state.selectedLevel\n                    ).map((position, index) => (\n                      <option key={index + 11} value={position.position_id}>\n                        {position.position_title}\n                      </option>\n                    ))\n                  ) : (\n                    <option>No position found</option>\n                  )}\n                </select>\n              </div>\n              {this.props.positionId.length > 0 &&\n                this.props.systemPositions &&\n                getPositionById(\n                  this.props.systemPositions,\n                  this.props.positionId\n                ) && (\n                  <div className=\"my-2 rounded border\">\n                    <ViewPosition\n                      thisPosition={\n                        getPositionById(\n                          this.props.systemPositions,\n                          this.props.positionId\n                        )!\n                      }\n                      isGuest={true}\n                    />\n                  </div>\n                )}\n              <div className=\"bg-white w-full flex justify-end\">\n                {this.props.positionId.length > 0 && (\n                  <button\n                    className=\"btn btn-blue m-1 mr-2 mb-2 animate__animated animate__fadeIn focus:outline-none\"\n                    onClick={() => {\n                      this.props.setFormSteps({\n                        ONE: false,\n                        TWO: true,\n                      });\n                      this.props.setStepState({\n                        ONE: true,\n                        TWO: false,\n                      });\n                    }}\n                  >\n                    Continue\n                  </button>\n                )}\n              </div>\n            </section>\n          )}\n          <form onSubmit={this.submitRequest}>\n            <div className=\"bg-white\">\n              {this.props.formSteps.TWO && (\n                <div className=\"text-base leading-6 space-y-4 text-gray-700 sm:text-lg sm:leading-7\">\n                  {this.state.error && (\n                    <div\n                      className=\"alert-warning animate__animated animate__fadeInRight animate__faster\"\n                      onClick={() => this.setState({ error: null })}\n                    >\n                      {this.state.error}\n                    </div>\n                  )}\n                  <div className=\"mb-4 md:flex md:justify-between\">\n                    <div className=\"mb-4 md:mr-2 md:mb-0 w-full\">\n                      <label\n                        className=\"block mb-2 text-sm font-bold text-gray-700\"\n                        htmlFor=\"female\"\n                      >\n                        Current number of Female on this position\n                      </label>\n                      <input\n                        className=\"appearance-none rounded w-full py-1 px-4 border-2 border-gray-700 bg-white focus:outline-none focus:bg-gray-100\"\n                        id=\"female\"\n                        type=\"number\"\n                        min={0}\n                        value={this.props.femaleOnPosition}\n                        onChange={(e) =>\n                          this.props.setFemaleOnPosition(Number(e.target.value))\n                        }\n                        placeholder=\"Current number of Female on this position\"\n                      />\n                      {/* <p className=\"text-xs italic text-red-500\">\n                          Please choose a password.\n                        </p> */}\n                    </div>\n                    <div className=\"md:ml-2 w-full\">\n                      <label\n                        className=\"block mb-2 text-sm font-bold text-gray-700\"\n                        htmlFor=\"male\"\n                      >\n                        Current number of Male on this position\n                      </label>\n                      <input\n                        className=\"appearance-none rounded w-full py-1 px-4 border-2 border-gray-700 bg-white focus:outline-none focus:bg-gray-100\"\n                        id=\"male\"\n                        type=\"number\"\n                        min={0}\n                        value={this.props.maleOnPosition}\n                        onChange={(e) =>\n                          this.props.setMaleOnPosition(Number(e.target.value))\n                        }\n                        placeholder=\"Current number of Male on this post\"\n                      />\n                    </div>\n                  </div>\n                  <div className=\"flex flex-col\">\n                    <label>Needed posts (number)</label>\n                    <input\n                      type=\"number\"\n                      className={`appearance-none rounded w-full py-1 px-4 border-2 bg-white focus:outline-none focus:bg-gray-100 ${\n                        this.props.formError &&\n                        this.props.formError.element === \"requested_posts\"\n                          ? \"border-red-700\"\n                          : \"border-gray-700\"\n                      }`}\n                      value={this.props.requestedPosts}\n                      onChange={(e) => {\n                        this.props.setRequestedPosts(Number(e.target.value));\n                        this.props.formError &&\n                          this.props.formError.element === \"requested_posts\" &&\n                          this.props.setFormError(null);\n                      }}\n                      placeholder=\"1\"\n                    />\n                    {this.props.formError &&\n                      this.props.formError.element === \"requested_posts\" && (\n                        <span className=\"text-xs italic text-red-700 mt-1\">\n                          {this.props.formError.msg}\n                        </span>\n                      )}\n                  </div>\n                  <div className=\"flex flex-col\">\n                    <label>Explanation</label>\n                    <textarea\n                      name=\"description\"\n                      className={`appearance-none rounded w-full py-1 px-4 border-2 bg-white focus:outline-none focus:bg-gray-100 ${\n                        this.props.formError &&\n                        this.props.formError.element === \"comment\"\n                          ? \"border-red-700\"\n                          : \"border-gray-700\"\n                      }`}\n                      id=\"description\"\n                      placeholder=\"Explanation\"\n                      value={this.props.requestExplanation}\n                      onChange={(e) => {\n                        this.props.setRequestExplanation(e.target.value);\n                        this.props.formError &&\n                          this.props.formError.element === \"comment\" &&\n                          this.props.setFormError(null);\n                      }}\n                      rows={2}\n                    ></textarea>\n                    {this.props.formError &&\n                      this.props.formError.element === \"comment\" && (\n                        <span className=\"text-xs italic text-red-700 mt-1\">\n                          {this.props.formError.msg}\n                        </span>\n                      )}\n                  </div>\n                </div>\n              )}\n              <div className=\"pt-4 flex justify-between\">\n                <button\n                  className=\"btn bg-gray-400 text-white hover:bg-gray-600\"\n                  onClick={() => {\n                    this.props.setPositionId(\"\");\n                    this.props.setRequestedPosts(0);\n                    this.props.setFemaleOnPosition(0);\n                    this.props.setMaleOnPosition(0);\n                    this.props.setRequestExplanation(\"\");\n                    this.props.setModalState(null);\n                    this.props.setFormError(null);\n                    this.props.setFormSteps({ ONE: true, TWO: false });\n                    this.props.setStepState({ ONE: false, TWO: false });\n                  }}\n                  disabled={this.props.loadingRequest}\n                >\n                  Exit\n                </button>\n                {this.props.formSteps.TWO && (\n                  <button\n                    className=\"btn bg-primary text-white hover:bg-blue-600\"\n                    disabled={this.props.loadingRequest}\n                  >\n                    {this.props.loadingRequest\n                      ? \"Loading...\"\n                      : this.props.modalState === \"UPDATE\"\n                      ? \"Update\"\n                      : \"Request\"}\n                  </button>\n                )}\n              </div>\n            </div>\n          </form>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = ({\n  auth,\n  schools,\n  system_settings,\n  schoolLevels,\n}: StoreState): {\n  auth: Auth;\n  mySchool: MySchoolInterface | null;\n  schoolPosts: PostSchoolInterface[];\n  schoolLevels: schoolLevelsStoreInterface;\n  systemPositions: PositionAPI[] | null;\n} => {\n  return {\n    auth: auth,\n    mySchool: schools.mySchool,\n    schoolPosts: schools.schoolPosts,\n    schoolLevels,\n    systemPositions: system_settings.systemPositions,\n  };\n};\n\nexport default connect(mapStateToProps, {\n  createSchoolPost,\n  updateSchoolPost,\n  PushPopupAlert,\n})(RequestPostForm);\n","import React, { Component } from \"react\";\nimport { GiTeacher } from \"react-icons/gi\";\nimport { MdInfoOutline } from \"react-icons/md\";\nimport { connect } from \"react-redux\";\nimport { Redirect } from \"react-router-dom\";\nimport {\n  Auth,\n  loadSchoolLevels,\n  PushPopupAlert,\n  schoolLevelsStoreInterface,\n} from \"../../actions\";\nimport {\n  getSchoolById,\n  fetchSchoolPosts,\n  createSchoolPost,\n  updateSchoolPost,\n  getSchoolPlacement,\n} from \"../../actions/schools\";\nimport { getActiveAcademicSession } from \"../../actions/session\";\nimport { getPositions } from \"../../actions/settings\";\nimport { PopupAlertData } from \"../../components/Alert/Popup\";\nimport { AcademicSessionInterface, PositionAPI } from \"../../interfaces\";\nimport {\n  placedCandidateInterface,\n  PlacedCandidateStatus,\n} from \"../../interfaces/marks_publication\";\nimport { PopupAlertTheme } from \"../../interfaces/popupAlert\";\nimport { StoreState } from \"../../reducers\";\nimport { isEmptyOrSpaces } from \"../../shared/dataTest\";\nimport {\n  PostSchoolInterface,\n  MySchoolInterface,\n} from \"../../shared/interfaces\";\nimport ReceivePost from \"./ReceivePost\";\nimport RequestList from \"./RequestList\";\nimport RequestPostForm from \"./RequestPostForm\";\n\nexport const getPlacementByRequest = (\n  placements: placedCandidateInterface[],\n  request: string,\n  status: PlacedCandidateStatus | \"all\" = PlacedCandidateStatus.PENDING\n): placedCandidateInterface[] => {\n  console.log(\"====================================\");\n  console.log({ placements, request });\n  console.log(\"====================================\");\n  if (status !== \"all\") {\n    // position id must be replaced with request id\n    return placements.filter(\n      (item) => item.request_id === request && item.status === status\n    );\n  }\n  return placements.filter((item) => item.request_id === request);\n};\n\ninterface RequestTeacherProps {\n  auth: Auth;\n  mySchool: MySchoolInterface | null;\n  schoolLevels: schoolLevelsStoreInterface;\n  systemPositions: PositionAPI[] | null;\n  schoolPosts: PostSchoolInterface[];\n  schoolPlacements: placedCandidateInterface[] | null;\n  activeAcademicSession: AcademicSessionInterface | \"none\" | null;\n  getActiveAcademicSession: Function;\n  getPositions: Function;\n  fetchSchoolPosts: Function;\n  getSchoolPlacement: Function;\n  createSchoolPost: Function;\n  updateSchoolPost: Function;\n  getSchoolById: Function;\n  loadSchoolLevels: (callback: (loading: boolean) => void) => void;\n  PushPopupAlert: (alert: PopupAlertData) => void;\n}\n\ninterface RequestTeacherState {\n  loading: boolean;\n  loadingPost: boolean;\n  loadingRequest: boolean;\n  modalState: \"CREATE\" | \"UPDATE\" | \"RECEIVE\" | null;\n  filterByPosition: string;\n  positionId: string;\n  requestedPosts: number;\n  femaleOnPosition: number;\n  maleOnPosition: number;\n  requestExplanation: string;\n  formSteps: {\n    ONE: boolean;\n    TWO: boolean;\n  };\n  stepState: {\n    ONE: boolean;\n    TWO: boolean;\n  };\n  thisPost: PostSchoolInterface | null;\n  viewPost: boolean;\n  postId: string;\n  receivedPosts: number;\n  formError: {\n    element: string;\n    msg: string;\n  } | null;\n}\nclass RequestTeacher extends Component<\n  RequestTeacherProps,\n  RequestTeacherState\n> {\n  constructor(props: RequestTeacherProps) {\n    super(props);\n\n    this.state = {\n      loading: true,\n      loadingPost: true,\n      loadingRequest: false,\n      modalState: null,\n      filterByPosition: \"\",\n      positionId: \"\",\n      requestedPosts: 0,\n      femaleOnPosition: 0,\n      maleOnPosition: 0,\n      requestExplanation: \"\",\n      formSteps: { ONE: true, TWO: false },\n      stepState: { ONE: false, TWO: false },\n      thisPost: null,\n      viewPost: false,\n      postId: \"\",\n      receivedPosts: 0,\n      formError: null,\n    };\n  }\n\n  setLoading = (value: boolean) => {\n    this.setState({ loading: value });\n  };\n\n  setLoadingRequest = (value: boolean) => {\n    this.setState({ loadingRequest: value });\n  };\n\n  setLoadingPost = (value: boolean) => {\n    this.setState({ loadingPost: value });\n  };\n\n  setViewPost = (value: boolean) => {\n    this.setState({ viewPost: value });\n  };\n\n  setPostId = (value: string) => {\n    this.setState({ postId: value });\n  };\n\n  setFormError = (\n    value: {\n      element: string;\n      msg: string;\n    } | null\n  ) => {\n    this.setState({ formError: value });\n  };\n\n  setPositionId = (value: string) => {\n    this.setState({ positionId: value });\n  };\n  setRequestedPosts = (value: number) => {\n    this.setState({ requestedPosts: value });\n  };\n  setFemaleOnPosition = (value: number) => {\n    this.setState({ femaleOnPosition: value });\n  };\n  setMaleOnPosition = (value: number) => {\n    this.setState({ maleOnPosition: value });\n  };\n  setRequestExplanation = (value: string) => {\n    this.setState({ requestExplanation: value });\n  };\n  setFormSteps = (value: { ONE: boolean; TWO: boolean }) => {\n    this.setState({ formSteps: value });\n  };\n  setStepState = (value: { ONE: boolean; TWO: boolean }) => {\n    this.setState({ stepState: value });\n  };\n  setFilterByPosition = (value: string) => {\n    this.setState({ filterByPosition: value });\n  };\n\n  setThisPost = (value: PostSchoolInterface | null) => {\n    this.setState({ thisPost: value });\n  };\n\n  setModalState = (value: \"CREATE\" | \"UPDATE\" | \"RECEIVE\" | null) => {\n    this.setState({ modalState: value });\n  };\n\n  setReceivedPosts = (value: number) => {\n    this.setState({ receivedPosts: value });\n  };\n\n  loadData = () => {\n    if (!this.props.mySchool) {\n      this.props.getSchoolById(\n        this.props.auth.user_access.school_id,\n        (status: boolean, msg: string) => {\n          this.setLoading(status);\n          if (msg.length > 0) {\n            console.error({ loadingCandidatesError: msg });\n            this.props.PushPopupAlert({\n              title: msg,\n              theme: PopupAlertTheme.danger,\n            });\n            this.setLoading(false);\n          }\n        }\n      );\n    } else {\n      this.setLoading(false);\n    }\n\n    if (!this.props.schoolPlacements) {\n      this.props.getSchoolPlacement(\n        this.props.auth.user_access.school_id,\n        (status: boolean, msg: string, data?: placedCandidateInterface[]) => {\n          this.setLoading(status);\n          if (!status && msg.length > 0) {\n            console.error({ getSchoolPlacementError: msg });\n            this.props.PushPopupAlert({\n              title: msg,\n              theme: PopupAlertTheme.danger,\n            });\n          }\n        }\n      );\n    } else {\n      this.setLoading(false);\n    }\n\n    if (\n      this.props.systemPositions === null ||\n      (this.props.systemPositions.length === 0 && this.state.loading)\n    ) {\n      this.setLoading(true);\n      this.props.getPositions((status: boolean, msg: string) => {\n        this.setLoading(status);\n        console.log({ status: status, msg: msg });\n        if (msg.length) {\n          this.props.PushPopupAlert({\n            title: msg,\n            theme: PopupAlertTheme.danger,\n          });\n        }\n      });\n    } else {\n      this.setLoading(false);\n    }\n\n    if (\n      this.props.schoolLevels.school_levels === null ||\n      (this.props.schoolLevels.school_levels.length === 0 && this.state.loading)\n    ) {\n      this.props.loadSchoolLevels(this.setLoading);\n    }\n\n    if (!this.props.schoolPosts.length && this.state.loadingPost) {\n      this.props.fetchSchoolPosts(\n        this.props.auth.user_access.school_id,\n        (status: boolean, message: string) => {\n          if (!status) {\n            if (message.length > 0 && this.state.loadingPost) {\n              console.error(\"error loading school post: \", message);\n              this.props.PushPopupAlert({\n                title: message,\n                theme: PopupAlertTheme.danger,\n              });\n            }\n            this.setState({ loadingPost: false });\n          }\n        }\n      );\n    } else {\n      this.setState({ loadingPost: false });\n    }\n  };\n\n  componentDidMount = () => {\n    if (isEmptyOrSpaces(this.props.auth.user_access.school_id)) {\n      return <Redirect to=\"/apps-page\" />;\n    }\n    if (\n      this.props.activeAcademicSession === null ||\n      this.props.activeAcademicSession === \"none\"\n    ) {\n      this.props.getActiveAcademicSession(\n        (\n          status: boolean,\n          msg: string,\n          data?: AcademicSessionInterface | \"none\"\n        ) => {\n          this.setLoading(status);\n          if (msg.length > 0) {\n            console.error({ loadingCandidatesError: msg });\n            this.props.PushPopupAlert({\n              title: msg,\n              theme: PopupAlertTheme.danger,\n            });\n          }\n          if (data && data !== \"none\") this.loadData();\n        }\n      );\n    } else this.loadData();\n  };\n\n  getPositionById = (\n    systemPositions: PositionAPI[],\n    positionId: string\n  ): PositionAPI | undefined => {\n    return systemPositions.find((item) => item.position_id === positionId);\n  };\n\n  render() {\n    if (\n      this.props.activeAcademicSession !== null &&\n      this.props.activeAcademicSession === \"none\"\n    ) {\n      return (\n        <div className=\"bg-yellow-100 rounded flex flex-col items-center justify-center p-6 my-8 text-yellow-900 border border-yellow-900\">\n          <MdInfoOutline className=\"text-6xl md:text-9xl\" />\n          <div className=\"text-center flex flex-col\">\n            <span className=\"text-2xl md:text-4xl font-extrabold\">\n              No academic active session\n            </span>\n            <span className=\"text-lg\">\n              Please Wait for the system to publish the sessions or contact the\n              administrator\n            </span>\n          </div>\n        </div>\n      );\n    }\n    if (this.state.loading) {\n      return (\n        <div className=\"text-center mt-7 font-bold text-4xl text-gray-400 animate-pulse\">\n          Loading data...\n        </div>\n      );\n    }\n\n    return (\n      <div>\n        {/* header title */}\n        <div className=\"flex flex-row items-start gap-3 my-2\">\n          <GiTeacher className=\"text-blue-700 w-10 h-10 md:block hidden\" />\n          <div className=\"w-full\">\n            <div className=\"flex justify-between w-full\">\n              <div className=\"flex flex-col gap-1 justify-between\">\n                <h1 className=\"md:text-4xl text-3xl font-semibold\">\n                  Teacher Request\n                </h1>\n\n                <div className=\"flex-row items-center md:gap-3 gap-2\">\n                  <div className=\"flex flex-row items-center gap-1\">\n                    <span className=\"text-gray-600 text-lg\">\n                      Academic session:\n                    </span>\n                    <span className=\"text-gray-600 font-semibold text-xl\">\n                      {this.props.activeAcademicSession?.title}\n                    </span>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n        {/* end header title */}\n\n        <div className=\"bg-white shadow p-2 rounded\">\n          {!this.state.modalState && this.props.schoolPlacements && (\n            <RequestList\n              systemPositions={this.props.systemPositions}\n              setModalState={this.setModalState}\n              loadingRequest={this.state.loadingRequest}\n              setFilterByPosition={this.setFilterByPosition}\n              schoolPosts={this.props.schoolPosts}\n              setThisPost={this.setThisPost}\n              setViewPost={this.setViewPost}\n              setPostId={this.setPostId}\n              setPositionId={this.setPositionId}\n              setRequestedPosts={this.setRequestedPosts}\n              setRequestExplanation={this.setRequestExplanation}\n              setFemaleOnPosition={this.setFemaleOnPosition}\n              setMaleOnPosition={this.setMaleOnPosition}\n              setFormSteps={this.setFormSteps}\n              setStepState={this.setStepState}\n              thisPost={this.state.thisPost}\n              viewPost={this.state.viewPost}\n              modalState={this.state.modalState}\n              schoolPlacements={this.props.schoolPlacements}\n              filterByPosition={this.state.filterByPosition}\n            />\n          )}\n\n          {this.props.activeAcademicSession &&\n            (this.state.modalState === \"CREATE\" ||\n              this.state.modalState === \"UPDATE\") && (\n              <RequestPostForm\n                loadingRequest={this.state.loadingRequest}\n                setLoadingRequest={this.setLoadingRequest}\n                formSteps={this.state.formSteps}\n                setFormSteps={this.setFormSteps}\n                stepState={this.state.stepState}\n                setStepState={this.setStepState}\n                sessionId={this.props.activeAcademicSession?._id}\n                postId={this.state.postId}\n                setPostId={this.setPostId}\n                positionId={this.state.positionId}\n                setPositionId={this.setPositionId}\n                setRequestedPosts={this.setRequestedPosts}\n                requestedPosts={this.state.requestedPosts}\n                maleOnPosition={this.state.maleOnPosition}\n                femaleOnPosition={this.state.femaleOnPosition}\n                setFemaleOnPosition={this.setFemaleOnPosition}\n                setMaleOnPosition={this.setMaleOnPosition}\n                requestExplanation={this.state.requestExplanation}\n                setRequestExplanation={this.setRequestExplanation}\n                modalState={this.state.modalState}\n                setModalState={this.setModalState}\n                formError={this.state.formError}\n                setFormError={this.setFormError}\n              />\n            )}\n\n          {this.state.modalState === \"RECEIVE\" &&\n            this.state.thisPost &&\n            this.props.systemPositions &&\n            this.props.schoolPlacements && (\n              <ReceivePost\n                loadingPost={this.state.loadingPost}\n                loadingRequest={this.state.loadingRequest}\n                positionId={this.state.positionId}\n                thisPost={this.state.thisPost}\n                viewPost={this.state.viewPost}\n                receivedPosts={this.state.receivedPosts}\n                formError={this.state.formError}\n                systemPositions={this.props.systemPositions}\n                setThisPost={this.setThisPost}\n                setModalState={this.setModalState}\n                setFormError={this.setFormError}\n                setReceivedPosts={this.setReceivedPosts}\n                setLoadingRequest={this.setLoadingRequest}\n                setLoadingPost={this.setLoadingPost}\n                placementList={this.props.schoolPlacements}\n              />\n            )}\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = ({\n  auth,\n  schools,\n  system_settings,\n  schoolLevels,\n  sessionPlan,\n}: StoreState): {\n  auth: Auth;\n  mySchool: MySchoolInterface | null;\n  schoolPosts: PostSchoolInterface[];\n  schoolPlacements: placedCandidateInterface[] | null;\n  schoolLevels: schoolLevelsStoreInterface;\n  systemPositions: PositionAPI[] | null;\n  activeAcademicSession: AcademicSessionInterface | \"none\" | null;\n} => {\n  return {\n    auth: auth,\n    mySchool: schools.mySchool,\n    schoolPosts: schools.schoolPosts,\n    schoolPlacements: schools.schoolPlacements,\n    schoolLevels,\n    systemPositions: system_settings.systemPositions,\n    activeAcademicSession: sessionPlan.activeAcademicSession,\n  };\n};\n\nexport const PostRequest = connect(mapStateToProps, {\n  loadSchoolLevels,\n  getPositions,\n  getSchoolById,\n  fetchSchoolPosts,\n  getSchoolPlacement,\n  createSchoolPost,\n  updateSchoolPost,\n  getActiveAcademicSession,\n  PushPopupAlert,\n})(RequestTeacher);\n"],"sourceRoot":""}
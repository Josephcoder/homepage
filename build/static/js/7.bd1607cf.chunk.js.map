{"version":3,"sources":["utils/search.ts","../node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js","containers/Application/ApplicationPositions/SchoolLevelsFilter/SchoolLevelsItem.tsx","containers/Application/ApplicationPositions/SchoolLevelsFilter/SchoolLevelsFilter.tsx","components/ApplicationPeriods/ApplicationPeriods.tsx","components/Courses/Courses.tsx","components/Questions/QuestionItem.tsx","components/Questions/Questions.tsx","interfaces/prepare_exam.ts","containers/PrepareExam/ExamsList/ExamsList.tsx"],"names":["search","objList","text","keys","undefined","filter","product","flag","dataKeys","prop","toString","toLowerCase","indexOf","_createForOfIteratorHelper","o","allowArrayLike","it","Symbol","iterator","Array","isArray","length","i","F","s","n","done","value","e","_e","f","TypeError","err","normalCompletion","didErr","step","next","_e2","SchoolLevelsItem","props","useState","levelsDropDown","setLevelsDropDown","className","onClick","searchLevel","schoolLevel","educationCategoryDetails","education_institute_id","educationCategory","setSearchLevel","initializeItem","education_category_title","description","activateItem","console","log","schoolLevels","map","item","education_institute","find","itm","educationCate","activateLevelItem","school_level_name","SchoolLevelsFilter","educationCategories","Loading","ApplicationPeriods","type","placeholder","applicationPeriods","setSelectedPeriod","showPeriodFilter","is_active","application_session_name","DATE","application_start_date","application_end_date","_UploadQuestion","setLoading","status","setState","loading","setSelectedEducationCategory","setSelectedSchoolLevel","showFilter","setSchoolLevelFilterFn","filteredCourses","courses","searched","filtered","school_levels","itm1","school_level_id","item2","setUploadingStatus","uploadingStatus","componentDidMount","course","loadCourses","state","searchCourseInput","this","education_categories","loadEducationCategories","loadSchoolLevels","onChange","target","style","minHeight","searchData","setSelectedCourse","selected_course_id","course_id","course_name","course_code","title","backDrop","theme","Themes","default","close","backDropClose","widthSizeClass","ModalSize","medium","displayClose","padding","Component","UploadQuestion","connect","auth","questionBank","QuestionItem","select","callBack","question","number","questionTypes","id","Questions","setUploadedQuestions","loadQuestionTypes","useEffect","questionsList","selectedCourse","questionPaper","QuestionNumberFormat","PrepareExamStatus","returnQuestionNumbering","numbering","ABC","abc","I","NUMBER","EXAM_QUESTIONS_NUMBERING","key","_ExamsList","addQuestionToPaper","addExamQuestion","removeToQuestionPaper","window","confirm","selectPeriod","chooseCourse","myCourse","conf","prepareExam","questions","x","selectCourse","examQuestionsIds","ids","periods","loadApplicationPeriods","loadQuestionBank","loadExamsList","addQuestionModal","formErr","element","msg","questions_per_page","exam_date","start_time","duration","number_format","discription","termes","selected_period","selected_course","to","examsList","colSpan","createdAt","application_session_id","period","exam_status","large","ExamsList","system","PushPopupAlert"],"mappings":"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","file":"static/js/7.bd1607cf.chunk.js","sourcesContent":["const search = (objList: any[], text: any, keys: any = null) => {\n  if (undefined === text || text === \"\") return objList;\n  return objList.filter((product) => {\n    let flag;\n    let dataKeys = keys === null ? product : keys;\n    for (let prop in dataKeys) {\n      flag = false;\n      flag =\n        product[prop].toString().toLowerCase().indexOf(text.toLowerCase()) > -1;\n      if (flag) break;\n    }\n    return flag;\n  });\n};\n\nexport default search;\n","import unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nexport default function _createForOfIteratorHelper(o, allowArrayLike) {\n  var it;\n\n  if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) {\n    if (Array.isArray(o) || (it = unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n      if (it) o = it;\n      var i = 0;\n\n      var F = function F() {};\n\n      return {\n        s: F,\n        n: function n() {\n          if (i >= o.length) return {\n            done: true\n          };\n          return {\n            done: false,\n            value: o[i++]\n          };\n        },\n        e: function e(_e) {\n          throw _e;\n        },\n        f: F\n      };\n    }\n\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n\n  var normalCompletion = true,\n      didErr = false,\n      err;\n  return {\n    s: function s() {\n      it = o[Symbol.iterator]();\n    },\n    n: function n() {\n      var step = it.next();\n      normalCompletion = step.done;\n      return step;\n    },\n    e: function e(_e2) {\n      didErr = true;\n      err = _e2;\n    },\n    f: function f() {\n      try {\n        if (!normalCompletion && it[\"return\"] != null) it[\"return\"]();\n      } finally {\n        if (didErr) throw err;\n      }\n    }\n  };\n}","import {useState} from 'react'\nimport * as Interfaces from '../../../../interfaces/index';\nimport { FiChevronDown, FiChevronRight } from 'react-icons/fi';\nimport { searchItem } from '../ApplicationPositions';\n\ninterface SchoolLevelsItemPropsInterface {\n  educationCategoryDetails: Interfaces.education_category;\n  schoolLevels: Interfaces.school_level[] | null;\n  searchLevel: searchItem | null;\n  setSearchLevel: (educationCategory: Interfaces.education_category | null, schoolLevel: Interfaces.school_level | null) => void;\n}\n\nconst SchoolLevelsItem = (props: SchoolLevelsItemPropsInterface):JSX.Element => {\n  const [levelsDropDown, setLevelsDropDown] = useState<boolean>(false);\n  const initializeItem = (levelsDropDown: boolean, props: any) => { \n    if ((props.searchLevel !== null && props.searchLevel.schoolLevel === null) || (props.searchLevel !== null && props.educationCategoryDetails.education_institute_id !== props.searchLevel.educationCategory.education_institute_id) || props.setSearchLevel === null) {\n      levelsDropDown === false && props.setSearchLevel(null, null); \n      levelsDropDown === false && props.setSearchLevel(props.educationCategoryDetails, null); \n    }\n  }\n  const activateItem = (levelsDropDown: boolean, props: any) => { \n    props.setSearchLevel(null, null); \n    props.setSearchLevel(props.educationCategoryDetails, null); \n  }\n  const activateLevelItem = (educationCate: Interfaces.education_category, item: Interfaces.school_level) => { \n    props.setSearchLevel(null, null); \n    props.setSearchLevel(educationCate, item); \n  }\n  return (\n    <div className=\"flex flex-col\">\n      <div onClick={() => {setLevelsDropDown(!levelsDropDown); initializeItem(levelsDropDown, props)}} className=\"flex flex-row justify-between items-center py-2 px-2 bg-blue-100 rounded cursor-pointer hover:bg-blue-200 mb-2\">\n        <div className=\"flex flex-col pl-1\">\n          <span className=\"uppercase text-blue-600 text-lg font-bold\">{props.educationCategoryDetails.education_category_title}</span>\n          <span className=\"text-xs\">{props.educationCategoryDetails.description}</span>\n        </div>\n        <div className=\"px-1 py-1 rounded-full flex items-center justify-center cursor-pointer text-blue-600 bg-blue-100 hover:bg-white hover:text-blue-800\">\n          {levelsDropDown === false ? <FiChevronRight className=\"text-2xl\" /> : <FiChevronDown className=\"text-2xl\" />}\n        </div>\n      </div>\n      {levelsDropDown === true &&\n      <div className=\"flex flex-col\">\n        <div onClick={() => activateItem(levelsDropDown, props)} className={`flex flex-row justify-between items-center py-2 px-2 bg-blue-50 rounded cursor-pointer hover:bg-blue-50 mb-2 ml-5 border ${props.searchLevel !== null && props.searchLevel.educationCategory !== null && props.searchLevel.educationCategory.education_institute_id === props.educationCategoryDetails.education_institute_id && props.searchLevel.schoolLevel === null ? \"border-blue-500\" : \"border-blue-100\"} hover:border-blue-500`}>\n          <div className=\"flex flex-col pl-1\">\n            <span className=\"text-blue-700 text-sm font-bold\">All levels</span>\n          </div>\n        </div>\n        {console.log(\"Institute: \", props.educationCategoryDetails)}\n        {props.schoolLevels === null ? \"Loading...\" :\n        props.schoolLevels.length === 0 ? \"No levels found\" :\n        props.schoolLevels.map((item, i) => (\n          item.education_institute.find(itm => itm === props.educationCategoryDetails.education_institute_id) && \n          <div onClick={() => activateLevelItem(props.educationCategoryDetails, item)} key={i + 1} className={`flex flex-row justify-between items-center py-2 px-2 bg-blue-50 rounded cursor-pointer hover:bg-blue-50 mb-2 ml-5 border ${props.searchLevel !== null && props.searchLevel.schoolLevel !== null && props.searchLevel.schoolLevel === item && props.searchLevel.educationCategory !== null && props.searchLevel.educationCategory.education_institute_id === props.educationCategoryDetails.education_institute_id ? \"border-blue-500\" : \"border-blue-100\"} hover:border-blue-500`}>\n            <div className=\"flex flex-col pl-1\">\n              <span className=\"text-blue-700 text-sm font-bold\">{item.school_level_name}</span>\n            </div>\n          </div>\n        ))}\n      </div>}\n    </div>\n  )\n}\n\nexport default SchoolLevelsItem\n","import SchoolLevelsItem from './SchoolLevelsItem'\nimport * as Interfaces from '../../../../interfaces/index';\nimport { searchItem } from '../ApplicationPositions';\nimport Loading from '../../../../components/Loading/Loading';\n\ninterface SchoolLevelsFilterPropsInterface {\n  educationCategories: Interfaces.education_category[] | null;\n  schoolLevels: Interfaces.school_level[] | null;\n  searchLevel: searchItem | null;\n  setSearchLevel: (educationCategory: Interfaces.education_category | null, schoolLevel: Interfaces.school_level | null) => void\n  setSchoolLevelFilterFn: (status: boolean) => void;\n}\n\nconst SchoolLevelsFilter = (props: SchoolLevelsFilterPropsInterface) => {\n  return (\n    <div className=\"col-span-12 md:col-span-4 md:static w-full top-2\">\n      <div className=\"bg-white shadow rounded-sm px-2 py-2\">\n        {console.log(props.educationCategories)}\n        {props.educationCategories === null ? <Loading /> :\n        props.educationCategories.length === 0 ? \"No Education categories available\" :\n        props.educationCategories.map((item, i) => (\n          <SchoolLevelsItem \n            key={i + 1} educationCategoryDetails={item} \n            schoolLevels={props.schoolLevels}\n            searchLevel={props.searchLevel}\n            setSearchLevel={props.setSearchLevel}\n            />\n        ))}\n      </div>\n    </div>\n  )\n}\n\nexport default SchoolLevelsFilter\n","import React from 'react'\nimport { FaBusinessTime } from 'react-icons/fa';\nimport { ApplicationPeriodGet } from '../../interfaces/application';\nimport { DATE } from '../../utils/functions';\nimport Loading from '../Loading/Loading';\n\ninterface ApplicationPeriodsProps {\n  applicationPeriods: ApplicationPeriodGet[] | null;\n  setSelectedPeriod: (period: ApplicationPeriodGet) => void;\n  showPeriodFilter: (status: boolean) => void;\n}\n\nconst ApplicationPeriods = (props: ApplicationPeriodsProps) => {\n  return (\n    <div className=\"-mt-4\">\n      <input type=\"text\" className=\"input-white border -mt-2 mb-3\" placeholder=\"Search by year, name\" />\n      {props.applicationPeriods === null ? <Loading /> : props.applicationPeriods.map((item, i) => (\n        <div onClick={() => {props.setSelectedPeriod(item); props.showPeriodFilter(false)}} key={i + 1} \n          className={`flex flex-col md:flex-row items-start md:items-center md:justify-between rounded border ${item.is_active === true ? \"bg-blue-50 border-blue-100\" : \"bg-gray-50 border-gray-100 \"} hover:bg-blue-100 hover:border-blue-500 px-2 py-2 cursor-pointer mb-2`}>\n          <div className=\"flex flex-row items-center gap-3\">\n            <FaBusinessTime className={`${item.is_active === true ? \"text-blue-600\" : \"text-gray-500\"} text-4xl`} />\n            <div className=\"flex flex-col\">\n              <div className={`${item.is_active === true ? \"text-blue-600\" : \"text-gray-600\"} font-bold`}>{item.application_session_name}</div>\n              <div className=\"text-sm text-gray-500\"><span>Status: </span><span className={`${item.is_active === true ? \"text-blue-600\" : \"text-gray-600\"}`}>{item.is_active === true ? \"Active\" : \"Expired\"}</span></div>\n            </div>\n          </div>\n          <div className=\"flex flex-col items-start md:items-end md:justify-end\">\n            <div className=\"text-xs md:text-sm text-right text-gray-500\"><span>Start: </span><span className={`${item.is_active === true ? \"text-blue-600\" : \"text-gray-600\"} text-right font-bold`}>{DATE(item.application_start_date, \"DD/MM/YYYY\")}</span></div>\n            <div className=\"text-xs md:text-sm text-right text-gray-500\"><span>End: </span><span className={`${item.is_active === true ? \"text-blue-600\" : \"text-gray-600\"} text-right font-bold`}>{DATE(item.application_end_date, \"DD/MM/YYYY\")}</span></div>\n          </div>\n        </div>\n      ))}\n    </div>\n  )\n}\n\nexport default ApplicationPeriods\n","import React, { Component, Fragment } from 'react'\nimport { FiFilter } from 'react-icons/fi';\nimport * as Interfaces from \"../../interfaces/index\";\nimport searchData from \"../../utils/search\";\n\nimport { connect } from \"react-redux\";\nimport {\n  Auth, \n  courseStoreInterface,\n  loadCourses,\n  schoolLevelsStoreInterface,\n  loadSchoolLevels,\n  loadEducationCategories,\n  setSelectedEducationCategory,\n  setSelectedSchoolLevel,\n  QuestionBankStoreInterface,\n} from \"../../actions\";\nimport { StoreState } from \"../../reducers\";\nimport { course } from '../../interfaces/course';\nimport Loading from '../../components/Loading/Loading';\nimport Modal, { ModalSize, Themes } from '../../components/Modal/Modal';\nimport { FaAngleRight } from 'react-icons/fa';\nimport { searchItem } from '../../containers/Application/ApplicationPositions/ApplicationPositions';\nimport SchoolLevelsFilter from '../../containers/Application/ApplicationPositions/SchoolLevelsFilter/SchoolLevelsFilter';\n\ninterface UploadQuestionState {\n  loading: boolean;\n  searchLevel: searchItem | null;\n  showFilter: boolean;\n  uploadingStatus: boolean;\n  searchCourseInput: string;\n}\ninterface UploadQuestionProps {\n  auth: Auth;\n  course: courseStoreInterface;\n  schoolLevels: schoolLevelsStoreInterface;\n  questionBank: QuestionBankStoreInterface;\n  selected_course_id: string | null;\n  loadEducationCategories: (callback: (loading: boolean) => void) => void;\n  loadSchoolLevels: (callback: (loading: boolean) => void) => void;\n  setSelectedEducationCategory: (\n    education_category: Interfaces.education_category\n  ) => void;\n  setSelectedSchoolLevel: (education_category: Interfaces.school_level) => void;\n  loadCourses: (callback: (loading: boolean) => void) => void;\n  setSelectedCourse: (course: course | null) => void;\n}\n\nclass _UploadQuestion extends Component<UploadQuestionProps, UploadQuestionState> {\n  constructor(props: UploadQuestionProps) {\n\t\tsuper(props);\n\n\t\tthis.state = {\n      loading: false,\n      searchLevel: null,\n      showFilter: false,\n      uploadingStatus: false,\n      searchCourseInput: \"\",\n\t\t};\n\t}\n\n  setLoading = (status: boolean) => {\n    this.setState({ loading: status });\n  }\n\n  setSearchLevel = (\n    educationCategory: Interfaces.education_category | null,\n    schoolLevel: Interfaces.school_level | null\n  ) => {\n    this.setState({\n      searchLevel: {\n        educationCategory: educationCategory,\n        schoolLevel: schoolLevel,\n      },\n    });\n    if (educationCategory) {\n      this.props.setSelectedEducationCategory(educationCategory);\n    }\n    if (schoolLevel) {\n      this.props.setSelectedSchoolLevel(schoolLevel);\n      this.setState({ showFilter: false });\n    }\n  };\n\n  setSchoolLevelFilterFn = (status: boolean) => {\n    this.setState({ showFilter: status });\n  };\n\n  filteredCourses = (courses: course[], searched: searchItem | null): course[] => {\n    let filtered: course[] = courses;\n    if (searched !== null) {\n      if (searched.schoolLevel !== null) {\n        filtered = courses.filter((itm) => {\n          if (itm.school_levels.find(itm1 => itm1 === searched.schoolLevel?.school_level_id)) {\n            let status = false;\n            for (let item2 of itm.school_levels) {\n              if (searched.educationCategory?.school_levels.find(i => i === item2)) {\n                status = true;\n              }\n            }\n            return status === true ? itm : null;\n          } else {\n            return null;\n          }\n        })\n      } else if (searched.educationCategory !== null) {\n        filtered = courses.filter((itm) => {\n          let status = false;\n          for (let item2 of itm.school_levels) {\n            if (searched.educationCategory?.school_levels.find(i => i === item2)) {\n              status = true;\n            }\n          }\n          return status === true ? itm : null;\n        })\n      }\n    }\n    return filtered;\n  }\n\n  setUploadingStatus = (status: boolean) => {\n    this.setState({ uploadingStatus: status});\n  }\n\n  componentDidMount = () => {\n    if (this.props.course.courses === null || this.props.course.courses.length === 0) {\n      this.props.loadCourses(this.setLoading);\n    }\n  }\n\n  render() {\n    return (\n      <Fragment>\n        <div className=\"flex-col\">\n          <div className=\"my-4 grid md:grid-cols-5 gap-2\">\n            <div className={`animate__animated md:col-span-5 md:flex md:flex-col min-h-full bg-white shadow rounded`}>\n              <div className=\"py-2 px-2\">\n                <div className=\"flex flex-row gap-2 mb-2 items-center justify-between\">\n                  <div className=\"flex flex-col\">\n                    <div><span className=\"text-lg text-gray-600 font-bold\">Choose a course</span></div>\n                    <div className=\"flex flex-row items-center\">\n                      {this.state.searchLevel?.educationCategory && <span className=\"bg-blue-50 rounded-full px-2 text-xs text-blue-600 font-bold\">{this.state.searchLevel.educationCategory?.education_category_title}</span>}\n                      {this.state.searchLevel?.schoolLevel && <div className=\"flex flex-row items-center\"><FaAngleRight className=\"\" /><span className=\"bg-blue-50 rounded-full px-2 text-xs text-blue-600 font-bold\">{this.state.searchLevel.schoolLevel?.school_level_name}</span></div>}\n                    </div>\n                  </div>\n                  <div onClick={() => { \n                    this.props.schoolLevels.education_categories === null && this.props.loadEducationCategories(this.setLoading);\n                    this.props.schoolLevels.school_levels === null && this.props.loadSchoolLevels(this.setLoading);\n                    this.setState({ showFilter: true }) }} className=\"btn cursor-pointer bg-blue-50 hover:bg-blue-100 text-blue-600 flex flex-row gap-1 items-center\">\n                    <FiFilter className=\"text-xl\" />\n                    <span>Filter</span>\n                  </div> \n                </div>\n                <div>\n                  <input onChange={(e: React.ChangeEvent<HTMLInputElement>) => this.setState({ searchCourseInput: e.target.value })} type=\"text\" className=\"input-white h-10 text-sm border-2 border-blue-500\" placeholder=\"Search question by title or description\" />\n                </div>\n                <div className=\"mt-4\" style={{minHeight: '500px'}}>\n                  {this.state.uploadingStatus === true ? <div className=\"my-2 flex flex-col gap-2\">\n                    <div className=\"rounded-xl bg-gray-100 h-8\"></div>\n                    <div className=\"rounded-xl bg-gray-100 h-8 w-4/5\"></div>\n                    <div className=\"rounded-xl bg-gray-100 h-8 w-5/6\"></div>\n                    <div className=\"rounded-xl bg-gray-100 h-8\"></div>\n                    <div className=\"rounded-xl bg-gray-100 h-8 w-3/4\"></div>\n                    <div className=\"rounded-xl bg-gray-100 h-8\"></div>\n                  </div> :\n                  this.props.course.courses === null ? <Loading /> :\n                  this.props.course.courses && this.filteredCourses(this.props.course.courses, this.state.searchLevel).length === 0 ? <span className=\"text-gray-400 font-extrabold ml-2 animate__animated animate__shakeX\">No courses available!</span> :\n                  this.props.course.courses && searchData(this.filteredCourses(this.props.course.courses, this.state.searchLevel), this.state.searchCourseInput).map((item, i) => (\n                    <div key={i + 1} \n                    onClick={() => this.props.setSelectedCourse(item)} \n                    className={`rounded border ${this.props.selected_course_id !== null && this.props.selected_course_id === item.course_id ? \"bg-blue-100 border-blue-300 text-blue-600 animate__animated animate__bounceIn\" : \"border-gray-200 hover:bg-blue-100 hover:border-blue-600 text-gray-600\"}  px-2 py-3 flex flex-row gap-3 items-center my-2 cursor-pointer`}>\n                      <span className=\"text-sm\">\n                        <div className={`h-8 w-8 rounded-full flex justify-center items-center text-white ${this.props.selected_course_id !== null && this.props.selected_course_id === item.course_id ? \"bg-blue-600 text-white\" : \"font-bold bg-gray-500\"}`}>{i + 1}</div>\n                      </span>\n                      <div className=\"flex flex-col\">\n                        <span className={`text-md font-bold`}>{item.course_name}</span>\n                        <span className={`text-xs`}>Code: {item.course_code}</span>\n                      </div>\n                    </div>\n                  ))}\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n        {this.state.showFilter === true &&\n        <Modal\n          title=\"Filter courses by school levels\"\n          backDrop={true}\n          theme={Themes.default}\n          close={() => this.setState({ showFilter: false })}\n          backDropClose={true}\n          widthSizeClass={ModalSize.medium}\n          displayClose={true}\n          padding={{title: true,}}\n        >\n          <SchoolLevelsFilter \n            educationCategories={this.props.schoolLevels.education_categories}\n            schoolLevels={this.props.schoolLevels.school_levels}\n            searchLevel={this.state.searchLevel}\n            setSearchLevel={this.setSearchLevel}\n            setSchoolLevelFilterFn={this.setSchoolLevelFilterFn}\n          />\n        </Modal>}\n      </Fragment>\n    )\n  }\n}\n\nconst mapStateToProps = ({\n  auth,\n  course,\n  schoolLevels,\n  questionBank,\n}: StoreState): { auth: Auth; course: courseStoreInterface; schoolLevels: schoolLevelsStoreInterface; questionBank: QuestionBankStoreInterface; } => {\n  return { auth: auth, course: course, schoolLevels: schoolLevels, questionBank: questionBank };\n};\n\nconst UploadQuestion = connect(mapStateToProps, {\n  loadCourses,\n  loadSchoolLevels,\n  loadEducationCategories,\n  setSelectedEducationCategory,\n  setSelectedSchoolLevel,\n})(_UploadQuestion);\n\nexport default UploadQuestion;\n","import React from 'react'\nimport { ImCheckboxChecked, ImCheckboxUnchecked } from 'react-icons/im'\nimport { questionTypesStoreInterface } from '../../actions/questionTypes'\nimport { QuestionInterface } from '../../interfaces/question'\n\ninterface QuestionItemProps {\n  question: QuestionInterface;\n  callBack: (question: QuestionInterface) => void;\n  status: boolean;\n  questionTypes: questionTypesStoreInterface;\n  select: boolean;\n  number: number;\n}\n\nconst QuestionItem = (props: QuestionItemProps) => {\n  return (\n    <div onClick={() => props.select === true && props.callBack(props.question)} className={`bg-gray-50 cursor-pointer rounded border border-gray-200 px-3 py-2 text-gray-700 hover:text-blue-600 flex flex-row items-center justify-between gap-4 ${props.select === true ? \"hover:bg-blue-50\" : \"hover:bg-white\"} hover:border-blue-600 mb-3`}>\n      <div className=\"flex flex-row items-center justify-between w-full\">\n        <div className=\"flex flex-row items-center gap-3\">\n          <div>\n            {props.select === false ? \n            <div className=\"font-bold text-blue-600\">\n              ({props.number})\n            </div> :\n            props.status === true ?\n            <ImCheckboxChecked className=\"text-xl text-blue-600\" /> :\n            <ImCheckboxUnchecked className=\"text-xl text-blue-600\" />}\n          </div>\n          <div className=\"flex flex-col truncate\">\n            <span className=\"text-xs text-blue-600 font-bold w-max\">{props.questionTypes.questionTypes && props.questionTypes.questionTypes.find(itm => itm.id && itm.id === props.question.type)?.title}</span>\n            <span className=\"font-bold\">{props.question.question[0].title}</span>\n            <span className=\"truncate text-xs\">{props.question.question[0].description}</span>\n          </div>\n        </div>\n        {props.select === false &&\n        <div onClick={() => props.select === false && props.callBack(props.question)} className=\"btn bg-red-50 hover:bg-red-100 border border-red-100 text-red-700 cursor-pointer text-sm\">Remove</div>}\n      </div>\n    </div>\n  )\n}\n\nexport default QuestionItem\n","import React, { useEffect, useState } from 'react'\nimport Loading from '../../components/Loading/Loading'\nimport { connect } from \"react-redux\";\nimport {\n  Auth, \n  courseStoreInterface,\n  loadCourses,\n  schoolLevelsStoreInterface,\n  loadSchoolLevels,\n  loadEducationCategories,\n  setSelectedEducationCategory,\n  setSelectedSchoolLevel,\n  QuestionBankStoreInterface,\n  setUploadedQuestions,\n  questionTypesStoreInterface,\n  setSelectedCourse,\n  loadQuestionTypes,\n} from \"../../actions\";\nimport { StoreState } from \"../../reducers\";\nimport { course } from '../../interfaces/course';\nimport { QuestionInterface, uploadQuestionsResponse } from '../../interfaces/question';\nimport { ImCheckboxChecked, ImCheckboxUnchecked } from 'react-icons/im';\nimport QuestionItem from './QuestionItem';\n\ninterface UploadedQuestionsProps {\n  questionBank: QuestionBankStoreInterface;\n  setUploadedQuestions: (questions: uploadQuestionsResponse | null) => void;\n  selectedCourse: course;\n  course: courseStoreInterface;\n  callBack: (question: QuestionInterface) => void;\n  questionTypes: questionTypesStoreInterface;\n  loadQuestionTypes: (callback: (loading: boolean) => void) => void;\n  setSelectedCourse: (course: course | null) => void;\n  questionsList: QuestionInterface[];\n  questionPaper: QuestionInterface[];\n}\n\nconst _Questions = (props: UploadedQuestionsProps) => {\n  const [loading, setLoading] = useState<boolean>(false);\n\n  useEffect(() => {\n    if (props.questionTypes.questionTypes === null || props.questionTypes.questionTypes.length === 0) {\n      props.loadQuestionTypes(setLoading);\n    }\n  }, [props]);\n  return (\n    <div className=\"bg-white animate__animated animate__fadeInLeft animate__fast px-2 py-2 gap-3 mb-2 rounded\">\n      {loading === true ? <Loading /> :\n      props.questionsList.filter(itm => itm.course === props.selectedCourse.course_id).length === 0 ? <div>No questions uploaded!</div> :\n      props.questionsList.filter(itm => itm.course === props.selectedCourse.course_id).map((item, i) => (\n        <QuestionItem \n        key={i + 1} \n        question={item} \n        callBack={props.callBack} \n        status={props.questionPaper.find(itm => itm.id === item.id) ? true : false} \n        questionTypes={props.questionTypes}\n        select={true}\n        number={i + 1} />\n      ))}\n    </div>\n  )\n}\n\n\nconst mapStateToProps = ({\n  auth,\n  course,\n  schoolLevels,\n  questionBank,\n  questionTypes,\n}: StoreState): { auth: Auth; course: courseStoreInterface; schoolLevels: schoolLevelsStoreInterface; questionBank: QuestionBankStoreInterface; questionTypes: questionTypesStoreInterface; } => {\n  return { auth: auth, course: course, schoolLevels: schoolLevels, questionBank: questionBank, questionTypes: questionTypes, };\n};\n\nconst Questions = connect(mapStateToProps, {\n  loadCourses,\n  loadSchoolLevels,\n  loadEducationCategories,\n  setSelectedEducationCategory,\n  setSelectedSchoolLevel,\n  setUploadedQuestions,\n  setSelectedCourse,\n  loadQuestionTypes,\n})(_Questions);\n\nexport default Questions;\n","export enum QuestionNumberFormat {\n  ABC = \"ABC\",\n  abc = \"abc\",\n  NUMBER = \"NUMBER\",\n  I = \"I\",\n}\n\nexport const returnQuestionNumbering = (numbering: QuestionNumberFormat) => {\n  switch (numbering) {\n    case QuestionNumberFormat.ABC:\n      return \"A,B,C\";\n    case QuestionNumberFormat.abc:\n      return \"a,b,c\";\n    case QuestionNumberFormat.I:\n      return \"i, ii, iii\";\n    case QuestionNumberFormat.NUMBER:\n      return \"1,2,3\";\n  }\n}\n\nexport const EXAM_QUESTIONS_NUMBERING = [\n  {\n    key: QuestionNumberFormat.NUMBER,\n    value: returnQuestionNumbering(QuestionNumberFormat.NUMBER)\n  },\n  {\n    key: QuestionNumberFormat.ABC,\n    value: returnQuestionNumbering(QuestionNumberFormat.ABC)\n  },{\n    key: QuestionNumberFormat.abc,\n    value: returnQuestionNumbering(QuestionNumberFormat.abc)\n  },{\n    key: QuestionNumberFormat.I,\n    value: returnQuestionNumbering(QuestionNumberFormat.I)\n  },\n]\n\nexport enum PrepareExamStatus {\n  Created = \"Created\",\n}\n\nexport interface prepare_exam_request {\n    period: string;\n    course: string;\n    questions: string[];\n    exam_status: PrepareExamStatus;\n    termes: string;\n    questions_per_page: number;\n    exam_date: string;\n    start_time: string;\n    duration: number;\n    number_format: QuestionNumberFormat;\n    discription: string;\n}\n\nexport interface ExamItemResponse {\n  questions: string[];\n  status: 1;\n  period: string;\n  course: string;\n  exam_status: PrepareExamStatus;\n  termes: string;\n  questions_per_page: number;\n  exam_date: string;\n  start_time: string;\n  duration: number;\n  number_format: QuestionNumberFormat;\n  discription: string;\n  createdAt: string;\n  updatedAt: string;\n  id: string;\n}","import React, { Component, Fragment } from \"react\";\nimport Courses from \"../../../components/Courses/Courses\";\nimport Modal, { ModalSize, Themes } from \"../../../components/Modal/Modal\";\nimport { connect } from \"react-redux\";\nimport {\n  Auth, \n  courseStoreInterface,\n  loadCourses,\n  schoolLevelsStoreInterface,\n  loadSchoolLevels,\n  loadEducationCategories,\n  setSelectedEducationCategory,\n  setSelectedSchoolLevel,\n  QuestionBankStoreInterface,\n  setUploadedQuestions,\n  questionTypesStoreInterface,\n  loadQuestionTypes,\n  loadQuestionBank,\n  setSelectedCourse,\n  PrepareExamsStoreInterface,\n  addExamQuestion,\n  applicationPeriodsStoreInterface,\n  loadApplicationPeriods,\n  setSelectedPeriod,\n  System,\n  PushPopupAlert,\n  loadExamsList,\n} from \"../../../actions\";\nimport { StoreState } from \"../../../reducers\";\nimport { course } from \"../../../interfaces/course\";\nimport { QuestionInterface, uploadQuestionsResponse } from \"../../../interfaces/question\";\nimport Questions from \"../../../components/Questions/Questions\";\nimport Loading from \"../../../components/Loading/Loading\";\nimport { ApplicationPeriodGet } from \"../../../interfaces/application\";\nimport ApplicationPeriods from \"../../../components/ApplicationPeriods/ApplicationPeriods\";\nimport { RiFilePaperFill } from \"react-icons/ri\";\nimport { QuestionNumberFormat } from \"../../../interfaces/prepare_exam\";\nimport { DATE } from \"../../../utils/functions\";\nimport { MdMoreHoriz } from \"react-icons/md\";\nimport { Link } from \"react-router-dom\";\n\ninterface ExamsListProps {\n  selectedCourse: course;\n  questionBank: QuestionBankStoreInterface;\n  course: courseStoreInterface;\n  questionTypes: questionTypesStoreInterface;\n  prepareExam: PrepareExamsStoreInterface;\n  system: System;\n  setUploadingStatus: (status: boolean) => void;\n  setSelectedCourse: (coure: course | null) => void;\n  setUploadedQuestions: (questions: uploadQuestionsResponse | null) => void;\n  loadQuestionTypes: (callback: (loading: boolean) => void) => void;\n  loadQuestionBank: (callback: (loading: boolean) => void) => void;\n  addExamQuestion: (question: QuestionInterface) => void;\n  periods: applicationPeriodsStoreInterface;\n  loadApplicationPeriods: (callback: (loading: boolean) => void) => void;\n  setSelectedPeriod: (period: ApplicationPeriodGet) => void;\n  loadExamsList: (callback: (loading: boolean) => void) => void;\n  loadCourses: (callback: (loading: boolean) => void) => void;\n}\ninterface ExamsListState {\n  loading: boolean;\n  selectCourse: boolean;\n  selectPeriod: boolean;\n  addQuestionModal: boolean;\n  formErr: {\n    element: string;\n    msg: string;\n  } | null;\n  questions_per_page: number;\n  exam_date: string;\n  start_time: string;\n  duration: number;\n  number_format: string;\n  discription: string;\n  termes: string;\n}\n\nclass _ExamsList extends Component<ExamsListProps, ExamsListState> {\n  constructor(props: ExamsListProps) {\n    super(props);\n\n    this.state = {\n      loading: false,\n      selectCourse: false,\n      selectPeriod: false,\n      addQuestionModal: false,\n      formErr: {\n        element: \"\", msg: \"\"\n      },\n      questions_per_page: 1,\n      exam_date: \"\",\n      start_time: \"\",\n      duration: 1,\n      number_format: QuestionNumberFormat.NUMBER,\n      discription: \"\",\n      termes: \"\",\n    };\n  }\n  setLoading = (status: boolean) => {\n    this.setState({ loading: status });\n  }\n  addQuestionToPaper = (question: QuestionInterface) => {\n    this.props.addExamQuestion(question);\n  }\n  removeToQuestionPaper = (question: QuestionInterface) => {\n    if (window.confirm(\"Are you sure do you want to remove question to question paper?\")) {\n      this.props.addExamQuestion(question);\n    }\n  }\n  showPeriodFilter = (status: boolean) => {\n    this.setState({ selectPeriod: status })\n  }\n\n  chooseCourse = (myCourse: course | null) => {\n    let conf: boolean = false;\n    if (this.props.prepareExam.questions.length !== 0) {\n      conf = window.confirm(\"Are you sure do you want to change course? You will loose your selected questions\")\n    }\n    if (conf === true) {\n      for (let x of this.props.prepareExam.questions) {\n        this.props.addExamQuestion(x);\n      }\n      this.props.setSelectedCourse(myCourse);\n    }\n    if (this.props.prepareExam.questions.length === 0) {\n      this.props.setSelectedCourse(myCourse);\n    }\n    this.setState({ selectCourse: false });\n  }\n\n  examQuestionsIds = (questions: QuestionInterface[]): string[] => {\n    let ids: string[] = [];\n    for (let question of questions) {\n      ids = [...ids, question.id];\n    }\n    return ids;\n  }\n\n  componentDidMount = () => {\n    if (this.props.questionTypes.questionTypes === null || this.props.questionTypes.questionTypes.length === 0) {\n      this.props.loadQuestionTypes(this.setLoading);\n    }\n    if (this.props.periods.applicationPeriods === null || this.props.periods.applicationPeriods.length === 0) {\n      this.props.loadApplicationPeriods(this.setLoading);\n    }\n    if (this.props.questionBank.questions === null || this.props.questionBank.questions.length === 0) {\n      this.props.loadQuestionBank(this.setLoading);\n    }\n    // if (this.props.prepareExam.examsList === null || this.props.prepareExam.examsList.length === 0) {\n      this.props.loadExamsList(this.setLoading);\n    // }\n    if (this.props.course.courses === null || this.props.course.courses.length === 0) {\n      this.props.loadCourses(this.setLoading);\n    }\n    \n  }\n  render() {\n    return (\n      <Fragment>\n      <div>\n        <div className=\"mt-3 rounded px-2 flex flex-col gap-3 bg-white py-2\">\n          <div className=\"flex flex-row items center justify-between\">\n            <div className=\"flex flex-row items-center\">\n              <RiFilePaperFill className=\"text-7xl text-blue-600\" />\n              <div className=\"flex flex-col px-1\">\n                <span className=\"text-gray-600 text-2xl font-bold\">Exams list</span>\n                <span className=\"text-blue-600 text-sm font-bold mt-1\">Period: {this.props.periods.selected_period === null ? <span className=\"text-yellow-700 italic\">Not selected!</span> : (`${this.props.periods.selected_period.application_session_name} - ${this.props.periods.selected_period.is_active === true ? \"Active\" : \"Not valid!\"}`)}</span>\n                <span className=\"text-blue-600 text-sm font-bold\">Course: {this.props.course.selected_course === null ? <span className=\"text-yellow-700 italic\">Not selected!</span> : (`${this.props.course.selected_course.course_code} - ${this.props.course.selected_course.course_name}`)}</span>\n              </div>\n            </div>\n            <div className=\"flex flex-row items-center gap-2\">\n              <div onClick={() => this.setState({ selectPeriod: true })} className={`btn ${this.props.periods.selected_period === null ? \"bg-yellow-50 hover:bg-yellow-100 border border-yellow-600 text-yellow-600\" : \"bg-blue-50 hover:bg-blue-100 border border-blue-100 text-blue-600\"} h-max flex items-center justify-center h-10 cursor-pointer`}>{this.props.periods.selected_period === null ? \"Choose period\" : \"Filter by Period\"}</div>\n              <Link to=\"prepare-exam\" className={`btn ${this.props.course.selected_course === null ? \"bg-yellow-50 hover:bg-yellow-100 border border-yellow-600 text-yellow-600\" : \"bg-blue-600 hover:bg-blue-800 text-white\"} h-max flex items-center justify-center h-10 cursor-pointer`}>Prepare exam</Link>\n            </div>\n          </div>\n        </div>\n        {this.state.loading === true ? \n        <div className=\"px-4 py-6 mt-4 bg-white rounded\">\n          <div className=\"text-gray-600 mb-3 px-4\">Loading exams list, Please wait...</div>\n          <Loading /> \n        </div>:\n        <div className=\"rounded bg-white px-3 py-3 mt-2 mb-28\">\n          <div className=\"w-full overflow-x-auto\">\n            <table className=\"w-full\">\n              <thead className=\"bg-blue-50 font-bold text-gray-800\">\n                <tr>\n                  <td className=\"py-2 pl-2 font-bold\">#</td>\n                  <td className=\"py-2\">Course</td>\n                  <td className=\"py-2\">Exam date</td>\n                  <td className=\"py-2\">Exam time</td>\n                  <td className=\"py-2\">Exam duration</td>\n                  <td className=\"py-2\">Questions</td>\n                  <td className=\"py-2\">Created at</td>\n                  <td className=\"py-2\">Period</td>\n                  <td className=\"py-2\">Exam status</td>\n                  <td></td>\n                </tr>\n              </thead>\n              <tbody>\n                {this.props.prepareExam.examsList === null ? \n                <tr>\n                  <td colSpan={6}><Loading /></td>\n                </tr> :\n                  this.props.prepareExam.examsList.length === 0 ?\n                  <tr>\n                    <td colSpan={6}>\n                      <div className=\"rounded bg-gray-100 px-3 py-3 flex items-center justify-center\">No exams found!</div>\n                    </td>\n                  </tr> :\n                  this.props.prepareExam.examsList.map((item, i) => (\n                    <tr key={i + 1} className={`border-b border-gray-300 text-sm`}>\n                      <td className=\"pl-2 px-2 font-bold\">{i + 1}</td>\n                      <td className=\"py-2\"><span className=\"font-bold\">{this.props.course.courses && this.props.course.courses.find(itm => itm.course_id === item.course)?.course_code}</span>-{this.props.course.courses && this.props.course.courses.find(itm => itm.course_id === item.course)?.course_name}</td>\n                      <td className=\"py-2\">{DATE(item.exam_date, \"DD/MM/YYYY\")}</td>\n                      <td className=\"py-2\">{item.start_time}</td>\n                      <td className=\"py-2\">{item.duration} hours</td>\n                      <td className=\"py-2\">{item.questions.length}</td>\n                      <td className=\"py-2\">{DATE(item.createdAt, \"DD/MM/YYYY\")}</td>\n                      <td className=\"py-2\">{this.props.periods.applicationPeriods && this.props.periods.applicationPeriods.find(itm => itm.application_session_id === item.period)?.application_session_name}</td>\n                      <td className=\"py-2\">{item.exam_status}</td>\n                      <td>\n                        <div className=\"text-2xl flex items-center justify-center rounded-full bg-gray-100 hover:bg-blue-100 text-gray-600 hover:text-blue-600 h-10 w-10 float-right\">\n                          <MdMoreHoriz />\n                        </div>\n                      </td>\n                    </tr>\n                  ))}\n              </tbody>\n            </table>\n          </div>\n        </div>}\n      </div>\n      {this.state.selectCourse === true &&\n      <Modal\n        title=\"Choose a course\"\n        backDrop={true}\n        theme={Themes.default}\n        close={() => this.setState({ selectCourse: false })}\n        backDropClose={true}\n        widthSizeClass={ModalSize.large}\n        displayClose={true}\n        padding={{title: true,}}>\n        <Courses setSelectedCourse={this.chooseCourse} selected_course_id={this.props.course.selected_course && this.props.course.selected_course.course_id} />\n      </Modal>}\n      {this.state.addQuestionModal === true &&\n      <Modal\n        title=\"Add exam questions\"\n        backDrop={true}\n        theme={Themes.default}\n        close={() => this.setState({ addQuestionModal: false })}\n        backDropClose={true}\n        widthSizeClass={ModalSize.large}\n        displayClose={true}\n        padding={{title: true,}}>\n        {this.props.questionBank.questions === null ? <Loading /> :\n        this.props.course.selected_course === null ? <div>Please choose a course</div> :\n        <Questions \n        selectedCourse={this.props.course.selected_course} \n        callBack={this.addQuestionToPaper} \n        questionsList={this.props.questionBank.questions}\n        questionPaper={this.props.prepareExam.questions} />}\n      </Modal>}\n      {this.state.selectPeriod === true &&\n      <Modal\n        title=\"Choose a period\"\n        backDrop={true}\n        theme={Themes.default}\n        close={() => this.setState({ selectPeriod: false })}\n        backDropClose={true}\n        widthSizeClass={ModalSize.large}\n        displayClose={true}\n        padding={{title: true,}}>\n          <div className=\"px-2\">\n            <ApplicationPeriods \n            applicationPeriods={this.props.periods.applicationPeriods} \n            setSelectedPeriod={this.props.setSelectedPeriod} \n            showPeriodFilter={this.showPeriodFilter} />\n          </div>\n      </Modal>}\n      </Fragment>\n    );\n  }\n}\n\n\nconst mapStateToProps = ({\n  auth,\n  course,\n  schoolLevels,\n  questionBank,\n  questionTypes,\n  prepareExam,\n  periods,\n  system,\n}: StoreState): { auth: Auth; course: courseStoreInterface; schoolLevels: schoolLevelsStoreInterface; questionBank: QuestionBankStoreInterface; questionTypes: questionTypesStoreInterface; prepareExam: PrepareExamsStoreInterface; periods: applicationPeriodsStoreInterface; system: System } => {\n  return { auth: auth, course: course, schoolLevels: schoolLevels, questionBank: questionBank, questionTypes: questionTypes, prepareExam: prepareExam, periods: periods, system: system };\n};\n\nexport const ExamsList = connect(mapStateToProps, {\n  loadCourses,\n  loadSchoolLevels,\n  loadEducationCategories,\n  setSelectedEducationCategory,\n  setSelectedSchoolLevel,\n  setUploadedQuestions,\n  loadQuestionTypes,\n  loadQuestionBank,\n  setSelectedCourse,\n  addExamQuestion,\n  loadApplicationPeriods,\n  setSelectedPeriod,\n  PushPopupAlert,\n  loadExamsList,\n})(_ExamsList);\n"],"sourceRoot":""}
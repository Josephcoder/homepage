{"version":3,"sources":["actions/users.ts","components/Table/Table.tsx","actions/session.ts","components/Navigation/SideNavigation.tsx","actions/document.ts","actions/settings.ts","containers/Claimings/Candidate/ChooseReason.tsx","containers/Claimings/Candidate/ExaminationFormView.tsx","containers/Claimings/Candidate/FormPlacementList.tsx","containers/Claimings/Candidate/ClaimForm.tsx","containers/Positions/ViewRequirements.tsx","containers/Claimings/Candidate/FormExamList.tsx","containers/Claimings/Candidate/ApplicationFormView.tsx","containers/SessionSettings/SessionDetails.tsx","containers/Claimings/Candidate/DocFormView.tsx","containers/Claimings/Candidate/FormApplicationList.tsx","containers/Claimings/Candidate/FormDocumentList.tsx"],"names":["documentValidationStatus","fetchUserAccess","dispatch","a","setAxiosToken","axios","get","API","AUTH","res","console","log","users_response","type","ActionTypes","FETCH_USERS_ACCESS","payload","data","users","error","user_error","blockUserToSystem","BLOCK_USER_TO_SYSTEM","unBlockUserToSystem","UNBLOCK_USER_TO_SYSTEM","assignRoleToUserAccess","ASSIGN_ROLE_TO_USER","customizeUserAccess","CUSTOMIZE_USER_ACCESS","resetUserAccess","RESET_USER_ACCESS","verifyAllDocument","VERIFY_ALL_DOCUMENT","Table","table","tr","rows","columns","hideColumns","pagination","search","tableSize","tableClass","tableId","rounded","searchBG","thColor","loading","length","result","characters","charactersLength","i","charAt","Math","floor","random","FC_makeID","useState","totalItems","setTotalItems","totalPages","setTotalPages","currentPage","setCurrentPage","pages","setPages","pageSize","setPageSize","startIndex","setStartIndex","endIndex","setEndIndex","useEffect","tablePagination","document","getElementById","getElementsByTagName","ceil","min","_pages","Array","from","keys","map","style","display","className","placeholder","onChange","e","filterType","filter","td","cols","toLowerCase","textContent","innerText","indexOf","filterTable","target","value","disabled","Number","id","column","index","padding","alignText","isSortAllowed","onClick","switching","x","y","shouldSwitch","colIndex","dir","switchcount","innerHTML","parentNode","insertBefore","sortThisColumn","columnTitle","aria-label","page","pageIndex","GetPlansTypes","callback","CLAIMING","GET_PLANS_TYPES","plan_types","status","errorToText","setSelectedPlanType","thisType","SELECT_PLAN_TYPE","getActiveSessionPlan","GET_ACTIVE_SESSION_PLANS","session_plan","undefined","is_active","GetAllSessionPlans","GET_ALL_SESSION_PLANS","session_data","createSessionPlan","CREATE_SESSION_PLAN","updateSessionPlan","UPDATE_SESSION_PLAN","sessionActivation","SESSION_ACTIVATION","deleteSessionPlan","DELETE_SESSION_PLAN","_SideNavigation","props","componentDidMount","PageHasSubNav","componentWillUnmount","state","this","auth","isAuthenticated","navActive","system","navigation","children","React","Component","SideNavigation","connect","NavToogle","MainItem","title","icon","MdBrightness1","active","count","IconDefined","SubItemContainer","SubItem","getDocumentCategory","docCategory","GET_DOCUMENT_CATEGORY","createDocumentCategory","CREATE_DOCUMENT_CATEGORY","updateDocumentCategory","UPDATE_DOCUMENT_CATEGORY","deleteDocumentCategory","DELETE_DOCUMENT_CATEGORY","getDocumentSubCategory","docSubCategory","GET_DOCUMENT_SUB_CATEGORY","doc_SUB_category_error","createDocumentSubCategory","CREATE_DOCUMENT_SUB_CATEGORY","updateDocumentSubCategory","UPDATE_DOCUMENT_SUB_CATEGORY","deleteDocumentSubCategory","DELETE_DOCUMENT_SUB_CATEGORY","getDocumentFields","docFields","GET_DOCUMENT_FIELDS","createDocumentFields","CREATE_DOCUMENT_FIELDS","updateDocumentFields","reducer","UPDATE_DOCUMENT_FIELDS","deleteDocumentFields","DELETE_DOCUMENT_FIELDS","getCandidatesInInstitute","educatin_type_id","APPLICATION","newArray","element","GET_CANDIDATE_IN_INSTITUTE","verifyDocument","action_verify","VERIFY_DOCUMENT","getSystemSettings","GET_SYSTEM_SETTINGS","code_error","disableSystemSetting","DISABLE_SYSTEM_SETTINGS","getApplicationSessions","GET_APPLICATION_SESSIONS","getPositions","GET_POSTIONS","deletePosition","DELETE_POSITION","publishPosition","PUBLISH_POSITION","ChooseReason","setSearchInput","setState","searchInput","setChooseClaimReason","allClaimReasons","item","claimReason","setClaimReason","reason","toString","userList","PushPopupAlert","thisAnswerSheet","course","setChooseClaimFile","setClaimFileId","answer_sheet_id","setViewThisFile","DATE","createdAt","questions","question","find","q","language","QuestionLanguage","Eng","description","answer","myPlacement","isClaimAllowed","myClaims","activeSession","session_plan_id","placed","_id","school","school_name","ClaimGetDocTitle","documentCategories","doc","DocCategory","DocSubCategory","DocField","DocTitle","sub_category_id","documentSubCategory","c","user_detail_subcategory_id","category_id","documentCategory","user_detail_category_id","category_subcategory_data","category_subcategory_Data_id","documentFields","category","sub_category","field","main","allClaim","period_id","claimOnId","claiming_on_id","ClaimForm","isDocumentIdValid","documents","doc_id","validated_by","validation_status","msg","alert","PopupAlertTheme","info","claiming","success","warning","isApplicationIdValid","applications","app_id","app","application_id","application_status","ApplicationStates","Rejected","setLoading","setLoadingForm","loadingForm","setFormError","formError","setAlertError","alertError","claimFileId","viewThisFile","chooseClaimFile","chooseClaimReason","setClaimComment","claimComment","isClaimTypeOpen","thisSession","PlansTypeKeys","plans","type_key","isPlanActive","DOCUMENT_VALIDATION","PLACEMENT_TRANSFER","isClaimBtnValid","file_id","claim_type","theme","setFormState","thisClaimType","thisClaimTypeId","formType","displayClaimType","claimType","EXAMINATION","MARKS_PUBLICATION","isClaimsAllowed","thisPeriod","getMyClaims","user","user_id","danger","loadExamAnswers","activeSessionPlan","getMyAnswers","sessionPlan","_isClaimsAllowed","documentReducer","candidateApplications","getMyRejectedApplications","_isApplicationIdValid","candidateDocuments","getMyRejectedDocuments","_isDocumentIdValid","claimReasons","getClaimReasons","getMyPlacement","courses","loadCourses","getDocumentById","getApplicationById","getExamById","exams","getValidation","thisId","old_reason","old_status","old_evaluated_by","comment","override_by","cleanToClose","response","loadUserById","isEmptyOrSpaces","handleSubmit","preventDefault","toLocaleLowerCase","old_evaluator_email","old_evaluator_name","evaluator_email","evaluator_name","email","user_info","fname","lname","default_claim_resaons","post","createClaim","selectClaimType","thisClaim","generateChooseFileTitle","formState","Modal","backDrop","Themes","default","close","displayClose","backDropClose","widthSizeClass","ModalSize","extraLarge","medium","body","footer","onSubmit","Object","values","capitalizeFirstLetter","replace","position","position_title","myAnswer","getCourseIdBySheetId","getCourseById","course_name","FormDocumentList","FormApplicationList","FormExamList","candidateAnswers","resize","DocFormView","thisDoc","ApplicationFormView","thisApplication","GetClaimingTypes","ViewRequirements","requirements","colSpan","subcategory_title","field_title","required","field_id","getFailedExam","allData","allCourses","forEach","total_marks","push","course_id","sheet_id","FC_ApplicationPositionDistinctCategory","thisPosition","PositionsTemp","DistinctCategoriesTemp","DistinctCategoriesIds","DistinctSubCategoriesTemp","DistinctSubCategoriesIds","req","thisRequirements","thisCategory","thisSubCategory","thisField","position_requirement","category_subcategory_data_id","category_title","subcategory_id","includes","showEvaluator","loadingUsers","setLoadingUsers","school_level_id","school_level_name","education_institute_id","education_category_title","course_code","NoResultThemes","Dark","isActivationAllowed","thisPlans","today","Date","end_date","getTime","getPlanTypeByKey","allPlanTypes","viewThisSession","thisPlan","planEndDate","planStartDate","start_date","type_status","SessionPlanTypeStatus","CLOSED","SessionDetails","handlePlanActivation","session","newState","window","confirm","key","newData","session_plan_name","period","updatedAt","prototype","hasOwnProperty","call","OPEN","type_id","type_title","allowed_claim_level","history","loadingRequest","put","setViewThisSession","src","AUTH_FILES","files","alt","getRejectedApplicants","applicationData","objList","text","product","flag","prop","DocumentTitleData","documentData","documentTemp","company","end_year","names","phone_number","school_id","start_year","year","doc_title","getRejectedDocuments","rejected"],"mappings":"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","file":"static/js/8.9526d40f.chunk.js","sourcesContent":["import axios from \"axios\";\nimport { Dispatch } from \"redux\";\nimport { ActionTypes } from \"./types\";\nimport {\n  AssignRoleToUserActionInterface,\n  CustomeAccessInterface,\n  UserInterface,\n} from \"../shared/interfaces\";\nimport { API } from \"../utils/api\";\nimport { setAxiosToken } from \"../utils/AxiosToken\";\n\n/**\n * * ****************************** INTERFACES *****************************\n */\n\ninterface FetchUsersAction {\n  type: ActionTypes.FETCH_USERS_ACCESS;\n  payload: UserInterface[];\n}\n\ninterface BlockUserToSystem {\n  type: ActionTypes.BLOCK_USER_TO_SYSTEM | ActionTypes.UNBLOCK_USER_TO_SYSTEM;\n  payload: string;\n}\n\ninterface AssignRoleToUserAction {\n  type: ActionTypes.ASSIGN_ROLE_TO_USER;\n  payload: AssignRoleToUserActionInterface;\n}\n\ninterface CustomizeUserAccessAction {\n  type: ActionTypes.CUSTOMIZE_USER_ACCESS;\n  payload: CustomeAccessInterface;\n}\n\ninterface ResetUserAccessAction {\n  type: ActionTypes.RESET_USER_ACCESS;\n  payload: string;\n}\n\ntype fetchUserAccessInterface = {\n  users: UserInterface[];\n  next: {\n    page: number;\n    limit: number;\n  } | null;\n  previous: {\n    page: number;\n    limit: number;\n  } | null;\n  total_users: number;\n};\n\nexport enum documentValidationStatus {\n  waiting = \"waiting\",\n  approved = \"approved\",\n  rejected = \"rejected\",\n}\n\nexport interface VerifyDocumentInterface {\n  user_id: string;\n  doc_id: string;\n  validation_status: \"waiting\" | \"approved\" | \"rejected\";\n  validated_by: {\n    user_id: string;\n    comment: string;\n    validation_status: \"waiting\" | \"approved\" | \"rejected\";\n    date?: string;\n  };\n  in_education: boolean;\n  disability: boolean;\n}\n\ninterface VerifyAllDocumentAction {\n  type: ActionTypes.VERIFY_ALL_DOCUMENT;\n  payload: VerifyDocumentInterface;\n}\n\nexport type AccessUserActionType =\n  | FetchUsersAction\n  | BlockUserToSystem\n  | AssignRoleToUserAction\n  | CustomizeUserAccessAction\n  | ResetUserAccessAction\n  | VerifyAllDocumentAction;\n\n/**\n * * ****************************** ACTIONS *****************************\n */\n\nexport const fetchUserAccess = () => {\n  return async (dispatch: Dispatch) => {\n    try {\n      setAxiosToken();\n      const res = await axios.get<fetchUserAccessInterface>(\n        `${API.AUTH}/users?page=1&limit=500`\n      );\n      console.log({ users_response: res });\n      dispatch<FetchUsersAction>({\n        type: ActionTypes.FETCH_USERS_ACCESS,\n        payload: res.data.users,\n      });\n    } catch (error) {\n      console.error({ user_error: error });\n    }\n  };\n};\n\nexport const blockUserToSystem = (data: string) => {\n  console.log({ data });\n  return async (dispatch: Dispatch) => {\n    dispatch<BlockUserToSystem>({\n      type: ActionTypes.BLOCK_USER_TO_SYSTEM,\n      payload: data,\n    });\n  };\n};\n\nexport const unBlockUserToSystem = (data: string) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<BlockUserToSystem>({\n      type: ActionTypes.UNBLOCK_USER_TO_SYSTEM,\n      payload: data,\n    });\n  };\n};\n\nexport const assignRoleToUserAccess = (\n  data: AssignRoleToUserActionInterface\n) => {\n  console.log({ data });\n  return async (dispatch: Dispatch) => {\n    dispatch<AssignRoleToUserAction>({\n      type: ActionTypes.ASSIGN_ROLE_TO_USER,\n      payload: data,\n      // payload: response.data,\n    });\n  };\n};\n\nexport const customizeUserAccess = (data: CustomeAccessInterface) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<CustomizeUserAccessAction>({\n      type: ActionTypes.CUSTOMIZE_USER_ACCESS,\n      payload: data,\n    });\n  };\n};\n\nexport const resetUserAccess = (data: string) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<ResetUserAccessAction>({\n      type: ActionTypes.RESET_USER_ACCESS,\n      payload: data,\n    });\n  };\n};\n\nexport const verifyAllDocument = (data: VerifyDocumentInterface) => {\n  console.log({ data });\n  return async (dispatch: Dispatch) => {\n    dispatch<VerifyAllDocumentAction>({\n      type: ActionTypes.VERIFY_ALL_DOCUMENT,\n      payload: data,\n    });\n  };\n};\n","import React, { useEffect, useState } from \"react\";\nimport { BiSort } from \"react-icons/bi\";\nimport { MdNavigateBefore, MdNavigateNext, MdSearch } from \"react-icons/md\";\n\nconst FC_makeID = (length: number = 5): string => {\n  let result: string = \"\";\n  let characters: string =\n    \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\n  let charactersLength = characters.length;\n  for (let i: number = 0; i < length; i++) {\n    result += characters.charAt(Math.floor(Math.random() * charactersLength));\n  }\n  return result;\n};\n\nexport const sortThisColumn = (\n  tableId: string,\n  colIndex: number = 0,\n  dir: \"asc\" | \"desc\" = \"asc\"\n) => {\n  var table,\n    rows,\n    switching,\n    i,\n    x,\n    y,\n    shouldSwitch,\n    switchcount = 0;\n  table = document.getElementById(tableId) as HTMLTableElement;\n  switching = true;\n  /* Make a loop that will continue until\n  no switching has been done: */\n  if (table) {\n    while (switching) {\n      //start by saying: no switching is done:\n      switching = false;\n      rows = table.rows;\n      /*Loop through all table rows (except the\n    first, which contains table headers):*/\n      for (i = 1; i < rows.length - 1; i++) {\n        //start by saying there should be no switching:\n        shouldSwitch = false;\n        /*Get the two elements you want to compare,\n      one from current row and one from the next:*/\n        x = rows[i].getElementsByTagName(\"TD\")[colIndex];\n        y = rows[i + 1].getElementsByTagName(\"TD\")[colIndex];\n        /*check if the two rows should switch place,\n      based on the direction, asc or desc:*/\n        if (dir === \"asc\" && x && y) {\n          if (x.innerHTML.toLowerCase() > y.innerHTML.toLowerCase()) {\n            //if so, mark as a switch and break the loop:\n            shouldSwitch = true;\n            break;\n          }\n        } else if (dir === \"desc\" && x && y) {\n          if (x.innerHTML.toLowerCase() < y.innerHTML.toLowerCase()) {\n            //if so, mark as a switch and break the loop:\n            shouldSwitch = true;\n            break;\n          }\n        }\n      }\n      if (shouldSwitch && rows[i].parentNode) {\n        /*If a switch has been marked, make the switch\n      and mark that a switch has been done:*/\n        rows[i].parentNode!.insertBefore(rows[i + 1], rows[i]);\n        switching = true;\n        //Each time a switch is done, increase this count by 1:\n        switchcount++;\n      } else {\n        /*If no switching has been done AND the direction is \"asc\",\n      set the direction to \"desc\" and run the while loop again.*/\n        if (switchcount === 0 && dir === \"asc\") {\n          dir = \"desc\";\n          switching = true;\n        }\n      }\n      // if (i === 0) continue;\n      // rows.cells[i].style.backgroundColor = \"blue\";\n    }\n  }\n};\n\nexport interface TableColumnsInterface {\n  columnTitle: JSX.Element | string;\n  alignText: string;\n  padding?: string;\n  isSortAllowed?: boolean;\n}\n\ninterface TableProps {\n  columns: TableColumnsInterface[];\n  rows: Function;\n  hideColumns?: boolean;\n  pagination?: boolean;\n  search?: boolean;\n  tableSize?: string;\n  tableClass?: string;\n  tableId?: string;\n  rounded?: boolean;\n  searchBG?: string;\n  thColor?: string;\n  loading?: boolean;\n}\n\nconst Table: React.FC<TableProps> = ({\n  rows,\n  columns,\n  hideColumns = false,\n  pagination = false,\n  search = false,\n  tableSize = \"w-full\",\n  tableClass,\n  tableId = \"myTable\",\n  rounded = false,\n  searchBG = \"bg-gray-200\",\n  thColor = \"blue\",\n  loading = false,\n}) => {\n  const startPage = 1;\n  tableId = tableId === \"myTable\" ? FC_makeID() : tableId;\n  let table: HTMLElement, tr: HTMLCollectionOf<HTMLTableRowElement>;\n  const [totalItems, setTotalItems] = useState<number>(0);\n  const [totalPages, setTotalPages] = useState<number>(1);\n  const [currentPage, setCurrentPage] = useState<number>(1);\n  const [pages, setPages] = useState<number[]>();\n  const [pageSize, setPageSize] = useState<number>(10);\n  const [startIndex, setStartIndex] = useState<number>(0);\n  const [endIndex, setEndIndex] = useState<number>(0);\n\n  useEffect(() => {\n    pagination && tablePagination();\n  });\n\n  const filterTable = (\n    data: string,\n    filterType?: \"default\" | \"field\"\n  ): void => {\n    var filter, tr, td, rows: number, cols: number, txtValue;\n    if (filterType === \"field\" && data === \"all\") data = \"\";\n    filter = data.toLowerCase();\n    table = document.getElementById(tableId)!;\n    tr = table.getElementsByTagName(\"tr\");\n    for (rows = 0; rows < tr.length; rows++) {\n      for (cols = 0; cols < columns.length; cols++) {\n        td = tr[rows].getElementsByTagName(\"td\")[cols];\n        if (td) {\n          txtValue = td.textContent || td.innerText;\n          if (txtValue.toLowerCase().indexOf(filter) > -1) {\n            tr[rows].style.display = \"\";\n            break;\n          } else {\n            tr[rows].style.display = \"none\";\n          }\n        }\n      }\n    }\n  };\n\n  const tablePagination = (): void => {\n    table = document.getElementById(tableId)!;\n    tr = table.getElementsByTagName(\"tr\");\n    setTotalItems(tr.length);\n    setTotalPages(Math.ceil(totalItems / pageSize));\n\n    // calculate start and end item indexes on the current page\n    setStartIndex((currentPage - 1) * pageSize);\n    setEndIndex(Math.min(startIndex + pageSize - 1, totalItems - 1));\n\n    /**\n     * TODO!\n     * There is a problem with this condition\n     */\n    let _pages = Array.from(Array(totalPages + 1 - startPage).keys()).map(\n      (i) => startPage + i\n    );\n    if (!pages || _pages.length !== pages.length) {\n      setPages(_pages);\n    }\n\n    for (let i: number = 0; i < tr.length; i++) {\n      if (i >= startIndex && i <= endIndex) {\n        tr[i].style.display = \"\";\n      } else {\n        tr[i].style.display = \"none\";\n      }\n    }\n  };\n\n  return (\n    <div className={`${tableSize}`}>\n      {/* search box  */}\n      {search && (\n        <div className={`${searchBG} w-full mb-2`}>\n          {search && (\n            <div className=\"bg-white rounded flex items-center w-full p-2 border-2 border-gray-500\">\n              <MdSearch className=\"h-5 w-5 fill-current text-gray-400\" />\n              <input\n                type=\"search\"\n                placeholder=\"search\"\n                onChange={(e) => filterTable(e.target.value)}\n                className=\"w-full h-6 pl-4 text-sm outline-none focus:outline-none bg-white\"\n                disabled={loading}\n              />\n\n              {pagination && (\n                <div className=\"select\">\n                  <select\n                    className=\"text-base outline-none focus:outline-none bg-white\"\n                    onChange={(e) => setPageSize(Number(e.target.value))}\n                    disabled={loading}\n                  >\n                    <option value=\"10\">10</option>\n                    <option value=\"25\">25</option>\n                    <option value=\"50\">50</option>\n                    <option value=\"100\">100</option>\n                  </select>\n                </div>\n              )}\n            </div>\n          )}\n        </div>\n      )}\n      <table\n        className={\n          tableClass\n            ? tableClass\n            : `w-full shadow ${\n                rounded && \"sm:rounded-lg\"\n              } table-auto order-table`\n        }\n        id={tableId}\n      >\n        {!hideColumns && (\n          <thead className=\"bg-white border-b-2 border-gray-300 text-gray-600 font-bold text-base\">\n            <tr\n              className={`text-left tracking-wide bg-${thColor}-100 border-b-2 border-${thColor}-500 text-${thColor}-600`}\n            >\n              {columns.map((column, index) => (\n                <th\n                  key={index}\n                  className={`${column.padding} text-${\n                    column.alignText\n                  } px-3 py-2 ${column.isSortAllowed && \"cursor-pointer\"}`}\n                  onClick={() =>\n                    column.isSortAllowed && sortThisColumn(tableId, index)\n                  }\n                >\n                  <div className=\"flex items-center gap-1\">\n                    {column.columnTitle}\n                    {column.isSortAllowed && <BiSort />}\n                  </div>\n                </th>\n              ))}\n            </tr>\n          </thead>\n        )}\n        <tbody id=\"table-data\" className=\"bg-white text-black text-base\">\n          {rows()}\n        </tbody>\n      </table>\n      {pagination && (\n        <div className=\"sm:flex-1 sm:flex sm:items-center sm:justify-between mt-4 work-sans\">\n          <div>\n            <span className=\"text-xs xs:text-sm text-gray-900\">\n              Showing 1 to {pageSize} of {totalItems - 1} Entries\n            </span>\n          </div>\n          <div>\n            <nav className=\"inline-flex shadow-sm\">\n              <div>\n                <button\n                  type=\"button\"\n                  className={`inline-flex items-center px-2 py-2 rounded-l-md border border-gray-300 text-sm font-medium text-gray-500 ${\n                    currentPage !== 1 && \"bg-white\"\n                  }`}\n                  aria-label=\"Previous\"\n                  disabled={currentPage === 1 || loading}\n                  onClick={() => setCurrentPage(currentPage - 1)}\n                >\n                  <MdNavigateBefore className=\"h-5 w-5\" />\n                </button>\n              </div>\n              <div>\n                {pages &&\n                  pages.map((page, pageIndex) => (\n                    <button\n                      key={pageIndex}\n                      className={`-ml-px inline-flex items-center px-4 py-2 border border-gray-300 text-sm font-medium text-gray-700 ${\n                        page !== currentPage\n                          ? \"bg-white\"\n                          : \"bg-gray-100 cursor-default\"\n                      }`}\n                      disabled={page === currentPage || loading}\n                      onClick={() => setCurrentPage(page)}\n                    >\n                      {page}\n                    </button>\n                  ))}\n              </div>\n              <div>\n                <button\n                  type=\"button\"\n                  className={`inline-flex items-center px-2 py-2 rounded-r-md border border-gray-300 text-sm leading-5 font-medium text-gray-500 ${\n                    currentPage !== totalPages && \"bg-white\"\n                  }`}\n                  aria-label=\"Next\"\n                  disabled={currentPage === totalPages || loading}\n                  onClick={() => setCurrentPage(currentPage + 1)}\n                >\n                  <MdNavigateNext className=\"h-5 w-5\" />\n                </button>\n              </div>\n            </nav>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default Table;\n","import axios from \"axios\";\nimport { Dispatch } from \"redux\";\nimport { ActionTypes } from \"./types\";\nimport { API } from \"../utils/api\";\nimport { setAxiosToken } from \"../utils/AxiosToken\";\nimport { errorToText } from \"../utils/errors\";\nimport { PlansTypeInterface, SessionPlanInterface } from \"../interfaces\";\n\n/**\n * * ****************************** INTERFACES *****************************\n */\n\n// GET ACTIVE PLAN TYPES\nexport interface GetPlansTypesAction {\n  type: ActionTypes.GET_PLANS_TYPES;\n  payload: PlansTypeInterface[];\n}\n\n// GET INACTIVE PLAN TYPES\nexport interface GetDeletedPlansTypesAction {\n  type: ActionTypes.GET_DELETED_PLANS_TYPES;\n  payload: PlansTypeInterface[];\n}\n\n// CREATE PLAN TYPE\nexport interface CreatePlansTypeAction {\n  type: ActionTypes.CREATE_PLAN_TYPE;\n  payload: PlansTypeInterface;\n}\n\n// UPDATE PLAN TYPE\nexport interface UpdatePlansTypeAction {\n  type: ActionTypes.UPDATE_PLAN_TYPE;\n  payload: PlansTypeInterface;\n}\n\n// DELETE PLAN TYPE\nexport interface DeletePlansTypeAction {\n  type: ActionTypes.DELETE_PLAN_TYPE;\n  payload: PlansTypeInterface;\n}\n\n// SET PLAN TYPE =====================================\nexport interface setSelectedPlanTypeActions {\n  type: ActionTypes.SELECT_PLAN_TYPE;\n  payload: PlansTypeInterface | \"all\";\n}\n\n// GET ALL SESSION PLAN\nexport interface GetAllSessionPlansAction {\n  type: ActionTypes.GET_ALL_SESSION_PLANS;\n  payload: SessionPlanInterface[];\n}\n\n// GET ACTIVE SESSION PLAN\nexport interface GetActiveSessionPlanAction {\n  type: ActionTypes.GET_ACTIVE_SESSION_PLANS;\n  payload: SessionPlanInterface | \"none\";\n}\n\n// CREATE SESSION PLAN\nexport interface CreateSessionPlansAction {\n  type: ActionTypes.CREATE_SESSION_PLAN;\n  payload: SessionPlanInterface;\n}\n\n// UPDATE SESSION PLAN\nexport interface UpdateSessionPlansAction {\n  type: ActionTypes.UPDATE_SESSION_PLAN;\n  payload: SessionPlanInterface;\n}\n\n// ACTIVATE SESSION PLAN\nexport interface ActivateSessionPlansAction {\n  type: ActionTypes.SESSION_ACTIVATION;\n  payload: SessionPlanInterface;\n}\n\n// DELETE SESSION PLAN\nexport interface DeleteSessionPlanAction {\n  type: ActionTypes.DELETE_SESSION_PLAN;\n  payload: string;\n}\n\nexport type SessionActionType =\n  | GetPlansTypesAction\n  | GetDeletedPlansTypesAction\n  | CreatePlansTypeAction\n  | UpdatePlansTypeAction\n  | DeletePlansTypeAction\n  | GetAllSessionPlansAction\n  | GetActiveSessionPlanAction\n  | CreateSessionPlansAction\n  | UpdateSessionPlansAction\n  | ActivateSessionPlansAction\n  | DeleteSessionPlanAction\n  | setSelectedPlanTypeActions;\n\n/**\n * * ****************************** ACTIONS *****************************\n */\n\n// GET ACTIVE PLAN TYPES ==========================\nexport const GetPlansTypes = (callback: Function) => {\n  callback(true, \"\");\n  return async (dispatch: Dispatch) => {\n    try {\n      setAxiosToken();\n      const res = await axios.get<PlansTypeInterface[]>(\n        `${API.CLAIMING}/session-type`\n      );\n      console.log({ GET_PLANS_TYPES: res.data });\n      let plan_types: PlansTypeInterface[] = [];\n      if (res.status === 200) {\n        // setApplications(res.data);\n        if (res.data !== null && res.data.length > 0) {\n          plan_types = res.data;\n        }\n      }\n      dispatch<GetPlansTypesAction>({\n        type: ActionTypes.GET_PLANS_TYPES,\n        payload: plan_types,\n      });\n      callback(false, \"\");\n    } catch (error) {\n      console.error({ error: errorToText(error) });\n      callback(false, errorToText(error));\n    }\n  };\n};\n\n// GET ACTIVE PLAN TYPES ==========================\nexport const GetDeletedPlansTypes = (callback: Function) => {\n  callback(true, \"\");\n  return async (dispatch: Dispatch) => {\n    try {\n      setAxiosToken();\n      const res = await axios.get<PlansTypeInterface[]>(\n        `${API.CLAIMING}/session-type/deleted`\n      );\n      console.log({ GET_DELETED_PLANS_TYPES: res.data });\n      let plan_types: PlansTypeInterface[] = [];\n      if (res.status === 200) {\n        // setApplications(res.data);\n        if (res.data !== null && res.data.length > 0) {\n          plan_types = res.data;\n        }\n      }\n      dispatch<GetDeletedPlansTypesAction>({\n        type: ActionTypes.GET_DELETED_PLANS_TYPES,\n        payload: plan_types,\n      });\n      callback(false, \"\");\n    } catch (error) {\n      console.error({ error: errorToText(error) });\n      callback(false, errorToText(error));\n    }\n  };\n};\n\n// CREATE PLAN TYPE\nexport const createPlanType = (\n  data: PlansTypeInterface\n): CreatePlansTypeAction => {\n  return {\n    type: ActionTypes.CREATE_PLAN_TYPE,\n    payload: data,\n  };\n};\n\n// UPDATE PLAN TYPE\nexport const updatePlanType = (\n  data: PlansTypeInterface\n): UpdatePlansTypeAction => {\n  return {\n    type: ActionTypes.UPDATE_PLAN_TYPE,\n    payload: data,\n  };\n};\n\n// DELETE PLAN TYPE\nexport const deletePlanType = (\n  data: PlansTypeInterface\n): DeletePlansTypeAction => {\n  return {\n    type: ActionTypes.DELETE_PLAN_TYPE,\n    payload: data,\n  };\n};\n\n// SELECT PLAN TYPES ==========================\nexport const setSelectedPlanType = (\n  thisType: PlansTypeInterface | \"all\"\n): setSelectedPlanTypeActions => {\n  console.log({ thisType });\n  return {\n    type: ActionTypes.SELECT_PLAN_TYPE,\n    payload: thisType,\n  };\n};\n\n// GET ACTIVE PLAN TYPES ==========================\nexport const getActiveSessionPlan = (callback: Function) => {\n  callback(true, \"\");\n  return async (dispatch: Dispatch) => {\n    try {\n      setAxiosToken();\n      const res = await axios.get<SessionPlanInterface>(\n        `${API.CLAIMING}/session/active/`\n      );\n      console.log({ GET_ACTIVE_SESSION_PLANS: res.data });\n      let session_plan: SessionPlanInterface | undefined = undefined;\n      // if (res.status === 200) {\n      //   // setApplications(res.data);\n      // }\n      if (res.data && res.data.is_active !== undefined) {\n        session_plan = res.data;\n      }\n      console.log({ session_plan: res.data });\n\n      dispatch<GetActiveSessionPlanAction>({\n        type: ActionTypes.GET_ACTIVE_SESSION_PLANS,\n        payload: session_plan ? session_plan : \"none\",\n      });\n      callback(false, \"\", session_plan ? session_plan : \"none\");\n    } catch (error) {\n      console.error({ error: errorToText(error) });\n      callback(false, errorToText(error));\n    }\n  };\n};\n\n// GET ALL PLAN TYPES ==========================\nexport const GetAllSessionPlans = (callback: Function) => {\n  callback(true, \"\");\n  return async (dispatch: Dispatch) => {\n    try {\n      setAxiosToken();\n      const res = await axios.get<SessionPlanInterface[]>(\n        `${API.CLAIMING}/session/`\n      );\n      console.log({ GET_ALL_SESSION_PLANS: res.data });\n      let session_data: SessionPlanInterface[] = [];\n      if (res.status === 200) {\n        // setApplications(res.data);\n        if (res.data !== null && res.data.length > 0) {\n          session_data = res.data;\n        }\n      }\n      dispatch<GetAllSessionPlansAction>({\n        type: ActionTypes.GET_ALL_SESSION_PLANS,\n        payload: session_data,\n      });\n      callback(false, \"\", session_data);\n    } catch (error) {\n      console.error({ error: errorToText(error) });\n      callback(false, errorToText(error));\n    }\n  };\n};\n\n// CREATE SESSION PLAN\nexport const createSessionPlan = (\n  data: SessionPlanInterface\n): CreateSessionPlansAction => {\n  return {\n    type: ActionTypes.CREATE_SESSION_PLAN,\n    payload: data,\n  };\n};\n\n// UPDATE SESSION PLAN\nexport const updateSessionPlan = (\n  data: SessionPlanInterface\n): UpdateSessionPlansAction => {\n  return {\n    type: ActionTypes.UPDATE_SESSION_PLAN,\n    payload: data,\n  };\n};\n\n// ACTIVATE SESSION PLAN\nexport const sessionActivation = (\n  data: SessionPlanInterface\n): ActivateSessionPlansAction => {\n  return {\n    type: ActionTypes.SESSION_ACTIVATION,\n    payload: data,\n  };\n};\n\n// DELETE SESSION PLAN\nexport const deleteSessionPlan = (data: string): DeleteSessionPlanAction => {\n  return {\n    type: ActionTypes.DELETE_SESSION_PLAN,\n    payload: data,\n  };\n};\n","import React, { FC, ReactElement, ReactNode } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Auth, System } from \"../../actions\";\nimport { StoreState } from \"../../reducers\";\nimport { NavToogle, PageHasSubNav } from \"../../actions\";\nimport { MdBrightness1, MdSearch } from \"react-icons/md\";\n\n// props for the component\ninterface AppProps {\n  auth: Auth;\n  system: System;\n  PageHasSubNav: Function;\n  NavToogle: Function;\n  children: ReactNode;\n}\n//\ninterface AppState {\n  loading: boolean;\n}\n\nclass _SideNavigation extends React.Component<AppProps, AppState> {\n  constructor(props: AppProps) {\n    super(props);\n\n    this.state = {\n      loading: false,\n    };\n  }\n\n  componentDidMount = () => this.props.PageHasSubNav(true);\n  componentWillUnmount = () => this.props.PageHasSubNav(false);\n\n  render() {\n    const isAuthenticated = this.props.auth.isAuthenticated;\n\n    if (isAuthenticated === false) {\n      return null;\n    }\n\n    const navActive = this.props.system.navigation;\n    return (\n      <div\n        className={`fixed w-48 p-1 pr-2 pl-6 text-gray-700 bg-white ${\n          navActive === true ? \"lg:left-16  left-16\" : \" -left-72 lg:left-16\"\n        }  top-0 bottom-0 pt-20 z-30 shadow-lg  transition-all duration-500 ease-in-out overflow-y-auto`}\n      >\n        {this.props.children}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = ({\n  auth,\n  system,\n}: StoreState): { auth: Auth; system: System } => {\n  return { auth: auth, system: system };\n};\n\nexport const SideNavigation = connect(mapStateToProps, {\n  NavToogle,\n  PageHasSubNav,\n})(_SideNavigation);\n\n//************************************ FORM SEARCH **************************************** */\n\ntype SearchComponentInterface = {\n  data: any[];\n};\n\nexport const Search: FC<SearchComponentInterface> = ({\n  data,\n}): ReactElement => {\n  return (\n    <div className=\"m-1 rounded-md shadow-md border border-blue-400 bg-white p-1 flex \">\n      <label htmlFor=\"search-text\" className=\"inline-block text-2xl\">\n        <MdSearch className=\"inline-block text-blue-400\" />\n      </label>\n      <input\n        type=\"search\"\n        className=\"outline-none bg-transparent flex-1 pl-1\"\n        placeholder=\"Search\"\n        id=\"search-text\"\n      />\n    </div>\n  );\n};\n\n//************************************ FORM SEARCH **************************************** */\n\ntype MainItemComponentInterface = {\n  title: string;\n  icon?: any;\n  active?: boolean;\n  count?: number;\n};\n\n/**\n *\n * @param param0\n * @returns\n */\nexport const MainItem: FC<MainItemComponentInterface> = ({\n  title = \"\",\n  icon = MdBrightness1,\n  active = false,\n  count = 0,\n}): ReactElement => {\n  const IconDefined = icon;\n  return (\n    <section\n      className={`${\n        active === true\n          ? \"bg-blue-500 text-white font-bold\"\n          : \"bg-blue-100 text-blue-800\"\n      } mb-1 hover:font-bold py-1 hover:bg-blue-400 hover:text-white --font-bold  px-2 rounded-md flex cursor-pointer items-center`}\n    >\n      <section className=\"flex-1\">\n        <IconDefined className=\"inline-block mr-1 text-xs\" />\n        <span>{title}</span>\n      </section>\n\n      {count > 0 ? (\n        <span className=\"px-0.5 my-1 text-xs bg-blue-600 text-white rounded-full\">\n          {count}\n        </span>\n      ) : null}\n    </section>\n  );\n};\n\n//************************************ FORM SEARCH **************************************** */\n\ntype SubItemContainerComponentInterface = {\n  children: ReactNode;\n};\n\n/**\n *\n * @param param0\n * @returns\n */\nexport const SubItemContainer: FC<SubItemContainerComponentInterface> = ({\n  children,\n}): ReactElement => {\n  return (\n    <div className=\"ml-3 overflow-y-auto border-l-2 border-blue-200 -mt-1 pt-2 mb-2 pl-1 cursor-pointer\">\n      {children}\n    </div>\n  );\n};\n\n//************************************ FORM SEARCH **************************************** */\n\ntype SubItemComponentInterface = {\n  title: string;\n  icon?: any;\n  active?: boolean;\n  count?: number;\n};\n\n/**\n *\n * @param param0\n * @returns\n * @important Remenber to use these components inside the <SubItemContainer>...</SubItemContainer>\n */\nexport const SubItem: FC<SubItemComponentInterface> = ({\n  title = \"\",\n  icon = MdBrightness1,\n  active = false,\n  count = 0,\n}): ReactElement => {\n  const IconDefined = icon;\n\n  return (\n    <div\n      className={`animate__animated animate__zoomIn animate__faster ${\n        active === true ? \"bg-blue-500 text-white font-bold\" : \" text-blue-800\"\n      } text-blue-800 bg-blue-200 rounded-md px-1 mb-1 flex items-center py-1 font-bold`}\n    >\n      <IconDefined\n        className={`inline-block mr-0.1 text-xs ${\n          active === true ? \"text-white\" : \"\"\n        }`}\n      />\n      <span\n        className={`inline-block pl-1 ${active === true ? \"text-white\" : \"\"}`}\n      >\n        {title}\n      </span>\n      {count >= 1 ? (\n        <span\n          className={`text-sm fint-bold ${active === true ? \"text-white\" : \"\"}`}\n        >\n          {count}\n        </span>\n      ) : null}\n    </div>\n  );\n};\n","import axios from \"axios\";\nimport { Dispatch } from \"redux\";\nimport { ActionTypes } from \"./types\";\nimport {\n  CandidatesInterface,\n  DocumentCategoryInterface,\n  DocumentFieldsInterface,\n  DocumentSubCategoryInterface,\n} from \"../shared/interfaces\";\nimport { API } from \"../utils/api\";\nimport { setAxiosToken } from \"../utils/AxiosToken\";\nimport { errorToText } from \"../utils/errors\";\nimport { VerifyDocumentInterface } from \"./users\";\n\n/**\n * * ****************************** INTERFACES *****************************\n */\n\n// CATEGORY\nexport interface GetDocumentCategoryAction {\n  type: ActionTypes.GET_DOCUMENT_CATEGORY;\n  payload: DocumentCategoryInterface[];\n}\n\nexport interface CreateDocumentCategoryAction {\n  type: ActionTypes.CREATE_DOCUMENT_CATEGORY;\n  payload: DocumentCategoryInterface;\n}\n\nexport interface UpdateDocumentCategoryAction {\n  type: ActionTypes.UPDATE_DOCUMENT_CATEGORY;\n  payload: DocumentCategoryInterface;\n}\n\nexport interface DeleteDocumentCategoryAction {\n  type: ActionTypes.DELETE_DOCUMENT_CATEGORY;\n  payload: string;\n}\n\n// SUB CATEGORY\nexport interface GetDocumentSubCategoryAction {\n  type: ActionTypes.GET_DOCUMENT_SUB_CATEGORY;\n  payload: DocumentSubCategoryInterface[];\n}\n\nexport interface CreateDocumentSubCategoryAction {\n  type: ActionTypes.CREATE_DOCUMENT_SUB_CATEGORY;\n  payload: DocumentSubCategoryInterface;\n}\n\nexport interface UpdateDocumentSubCategoryAction {\n  type: ActionTypes.UPDATE_DOCUMENT_SUB_CATEGORY;\n  payload: DocumentSubCategoryInterface;\n}\n\nexport interface DeleteDocumentSubCategoryAction {\n  type: ActionTypes.DELETE_DOCUMENT_SUB_CATEGORY;\n  payload: string;\n}\n\n// FIELDS\nexport interface GetDocumentFieldsAction {\n  type: ActionTypes.GET_DOCUMENT_FIELDS;\n  payload: DocumentFieldsInterface[];\n}\n\nexport interface CreateDocumentFieldsAction {\n  type: ActionTypes.CREATE_DOCUMENT_FIELDS;\n  payload: DocumentFieldsInterface;\n}\n\nexport interface UpdateDocumentFieldsAction {\n  type: ActionTypes.UPDATE_DOCUMENT_FIELDS;\n  payload: DocumentFieldsInterface;\n}\n\nexport interface DeleteDocumentFieldsAction {\n  type: ActionTypes.DELETE_DOCUMENT_FIELDS;\n  payload: string;\n}\n\n// DOCUMENT CHECKING\nexport interface GetCandidatesInInstituteAtion {\n  type: ActionTypes.GET_CANDIDATE_IN_INSTITUTE;\n  payload: CandidatesInterface[];\n}\n\nexport interface VerifyDocumentAction {\n  type: ActionTypes.VERIFY_DOCUMENT;\n  payload: VerifyDocumentInterface;\n}\n\nexport type DocumentCategoryActionType =\n  | GetDocumentCategoryAction\n  | CreateDocumentCategoryAction\n  | UpdateDocumentCategoryAction\n  | DeleteDocumentCategoryAction\n  | GetDocumentSubCategoryAction\n  | CreateDocumentSubCategoryAction\n  | UpdateDocumentSubCategoryAction\n  | DeleteDocumentSubCategoryAction\n  | GetDocumentFieldsAction\n  | CreateDocumentFieldsAction\n  | UpdateDocumentFieldsAction\n  | DeleteDocumentFieldsAction\n  | GetCandidatesInInstituteAtion\n  | VerifyDocumentAction;\n\n/**\n * * ****************************** ACTIONS *****************************\n */\n\n// CATEGORY\n\nexport const getDocumentCategory = () => {\n  return async (dispatch: Dispatch) => {\n    try {\n      setAxiosToken();\n      const res = await axios.get(`${API.AUTH}/detailcategory`);\n      console.log({ docCategory: res });\n      dispatch<GetDocumentCategoryAction>({\n        type: ActionTypes.GET_DOCUMENT_CATEGORY,\n        payload: res.data,\n      });\n    } catch (error) {\n      console.error({ error: errorToText(error) });\n    }\n  };\n};\n\nexport const createDocumentCategory = (data: DocumentCategoryInterface) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<CreateDocumentCategoryAction>({\n      type: ActionTypes.CREATE_DOCUMENT_CATEGORY,\n      payload: data,\n    });\n  };\n};\n\nexport const updateDocumentCategory = (data: DocumentCategoryInterface) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<UpdateDocumentCategoryAction>({\n      type: ActionTypes.UPDATE_DOCUMENT_CATEGORY,\n      payload: data,\n    });\n  };\n};\n\nexport const deleteDocumentCategory = (data: string) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<DeleteDocumentCategoryAction>({\n      type: ActionTypes.DELETE_DOCUMENT_CATEGORY,\n      payload: data,\n    });\n  };\n};\n\n// SUB CATEGORY\nexport const getDocumentSubCategory = () => {\n  return async (dispatch: Dispatch) => {\n    try {\n      setAxiosToken();\n      const res = await axios.get<DocumentSubCategoryInterface[]>(\n        `${API.AUTH}/detailsubcategory`\n      );\n      console.log({ docSubCategory: res });\n      dispatch<GetDocumentSubCategoryAction>({\n        type: ActionTypes.GET_DOCUMENT_SUB_CATEGORY,\n        payload: res.data,\n        // payload: response.data,\n      });\n    } catch (error) {\n      console.log({ doc_SUB_category_error: error });\n    }\n  };\n};\n\nexport const createDocumentSubCategory = (\n  data: DocumentSubCategoryInterface\n) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<CreateDocumentSubCategoryAction>({\n      type: ActionTypes.CREATE_DOCUMENT_SUB_CATEGORY,\n      payload: data,\n    });\n  };\n};\n\nexport const updateDocumentSubCategory = (\n  data: DocumentSubCategoryInterface\n) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<UpdateDocumentSubCategoryAction>({\n      type: ActionTypes.UPDATE_DOCUMENT_SUB_CATEGORY,\n      payload: data,\n    });\n  };\n};\n\nexport const deleteDocumentSubCategory = (data: string) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<DeleteDocumentSubCategoryAction>({\n      type: ActionTypes.DELETE_DOCUMENT_SUB_CATEGORY,\n      payload: data,\n    });\n  };\n};\n\n// FIELDS\nexport const getDocumentFields = () => {\n  return async (dispatch: Dispatch) => {\n    try {\n      setAxiosToken();\n      const res = await axios.get<DocumentFieldsInterface[]>(\n        `${API.AUTH}/categorysubcatedata`\n      );\n      console.log({ docFields: res });\n      dispatch<GetDocumentFieldsAction>({\n        type: ActionTypes.GET_DOCUMENT_FIELDS,\n        payload: res.data,\n        // payload: response.data,\n      });\n    } catch (error) {\n      console.log({ doc_SUB_category_error: error });\n    }\n  };\n};\n\nexport const createDocumentFields = (data: DocumentFieldsInterface) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<CreateDocumentFieldsAction>({\n      type: ActionTypes.CREATE_DOCUMENT_FIELDS,\n      payload: data,\n    });\n  };\n};\n\nexport const updateDocumentFields = (data: DocumentFieldsInterface) => {\n  console.log({ reducer: data });\n  return async (dispatch: Dispatch) => {\n    dispatch<UpdateDocumentFieldsAction>({\n      type: ActionTypes.UPDATE_DOCUMENT_FIELDS,\n      payload: data,\n    });\n  };\n};\n\nexport const deleteDocumentFields = (data: string) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<DeleteDocumentFieldsAction>({\n      type: ActionTypes.DELETE_DOCUMENT_FIELDS,\n      payload: data,\n    });\n  };\n};\n\n// CANDIDATE IN EDUCATION CATEGORY\nexport const getCandidatesInInstitute = (\n  educatin_type_id: string,\n  callback: Function\n) => {\n  return async (dispatch: Dispatch) => {\n    callback(true, \"\", null);\n    try {\n      setAxiosToken();\n      const res = await axios.get<CandidatesInterface[]>(\n        `${API.APPLICATION}/educationtypeuserdocs/${educatin_type_id}`\n      );\n      const newArray: CandidatesInterface[] = res.data.filter((element) => {\n        return element !== null && element !== undefined;\n      });\n      console.log({ getCandidatesInInstitute: res, newArray });\n      dispatch<GetCandidatesInInstituteAtion>({\n        type: ActionTypes.GET_CANDIDATE_IN_INSTITUTE,\n        payload: newArray,\n        // payload: response.data,\n      });\n      callback(false, \"\", newArray);\n    } catch (error) {\n      console.log({ getCandidatesInInstitute: error });\n      callback(false, errorToText(error), null);\n    }\n  };\n};\n\nexport const verifyDocument = (data: VerifyDocumentInterface) => {\n  console.log({ action_verify: data });\n  return async (dispatch: Dispatch) => {\n    dispatch<VerifyDocumentAction>({\n      type: ActionTypes.VERIFY_DOCUMENT,\n      payload: data,\n    });\n  };\n};\n","import axios from \"axios\";\nimport { Dispatch } from \"redux\";\nimport { ActionTypes } from \"./types\";\nimport {\n  ApplicationSessionInterface,\n  SystemSettingsInterface,\n} from \"../shared/interfaces\";\nimport { API } from \"../utils/api\";\nimport { setAxiosToken } from \"../utils/AxiosToken\";\nimport { errorToText } from \"../utils/errors\";\nimport { PositionAPI } from \"../interfaces/position\";\n\n/**\n * * ****************************** INTERFACES *****************************\n */\n\n// SYSTEM SETTINGS  ==============\nexport interface GetSystemSettingsAction {\n  type: ActionTypes.GET_SYSTEM_SETTINGS;\n  payload: SystemSettingsInterface[];\n}\n\nexport interface DisableSystemSettingsAction {\n  type: ActionTypes.DISABLE_SYSTEM_SETTINGS;\n  payload: {\n    system_setting_id: string;\n    status: \"enabled\" | \"disabled\";\n  };\n}\n\n// APPLICATION SETTINGS ===================================\nexport interface GetApplicationSessionAction {\n  type: ActionTypes.GET_APPLICATION_SESSIONS;\n  payload: ApplicationSessionInterface[];\n}\n\nexport interface CreateApplicationSessionAction {\n  type: ActionTypes.CREATE_APPLICATION_SESSIONS;\n  payload: ApplicationSessionInterface;\n}\n\nexport interface UpdateApplicationSessionAction {\n  type: ActionTypes.UPDATE_APPLICATION_SESSIONS;\n  payload: ApplicationSessionInterface;\n}\n\nexport interface DisableApplicationSessionAction {\n  type: ActionTypes.DISABLE_APPLICATION_SESSION;\n  payload: {\n    application_session_id: string;\n    status: boolean;\n  };\n}\n\n// POSITIONS SETTINGS ===================================\nexport interface PositionCreateInterface {\n  position_id?: string;\n  position_title: string;\n  description: string;\n  school_level_id: string;\n  education_institute_id: string;\n  courses: string[];\n  requirements: {\n    user_detail_category_id: string;\n    user_detail_subcategory_id: string;\n    position_requirement: {\n      category_subcategory_data_id: string;\n      required: boolean;\n    }[];\n    required: boolean;\n  }[];\n}\nexport interface GetPositionsAction {\n  type: ActionTypes.GET_POSTIONS;\n  payload: PositionAPI[];\n}\n\nexport interface CreatePositionsAction {\n  type: ActionTypes.CREATE_POSITION;\n  payload: PositionCreateInterface;\n}\n\nexport interface UpdatePositionsAction {\n  type: ActionTypes.UPDATE_POSITION;\n  payload: PositionCreateInterface;\n}\n\nexport interface DeletePositionAction {\n  type: ActionTypes.DELETE_POSITION;\n  payload: string;\n}\n\nexport interface PublishPositionAction {\n  type: ActionTypes.PUBLISH_POSITION;\n  payload: {\n    position_id: string;\n    status: boolean;\n  };\n}\n\nexport type SystemActionType =\n  | GetSystemSettingsAction\n  | DisableSystemSettingsAction\n  | GetApplicationSessionAction\n  | CreateApplicationSessionAction\n  | UpdateApplicationSessionAction\n  | DisableApplicationSessionAction\n  | GetPositionsAction\n  | CreatePositionsAction\n  | UpdatePositionsAction\n  | DeletePositionAction\n  | PublishPositionAction;\n\n/**\n * * ****************************** ACTIONS *****************************\n */\n\nexport const getSystemSettings = (callback: Function) => {\n  return async (dispatch: Dispatch) => {\n    callback(true, \"\");\n    try {\n      setAxiosToken();\n      const res = await axios.get<SystemSettingsInterface[]>(\n        `${API.AUTH}/settings`\n      );\n      dispatch<GetSystemSettingsAction>({\n        type: ActionTypes.GET_SYSTEM_SETTINGS,\n        payload: res.data,\n      });\n      callback(false, \"\");\n    } catch (error) {\n      console.log({ code_error: error });\n      callback(false, errorToText(error));\n    }\n  };\n};\n\nexport const disableSystemSetting = (data: {\n  system_setting_id: string;\n  status: \"enabled\" | \"disabled\";\n}) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<DisableSystemSettingsAction>({\n      type: ActionTypes.DISABLE_SYSTEM_SETTINGS,\n      payload: data,\n    });\n  };\n};\n\n// ============================ PERIODS =======================\n\nexport const getApplicationSessions = (callback: Function) => {\n  return async (dispatch: Dispatch) => {\n    callback(true, \"\");\n    try {\n      setAxiosToken();\n      const res = await axios.get<ApplicationSessionInterface[]>(\n        `${API.APPLICATION}/applicationsesion`\n      );\n      dispatch<GetApplicationSessionAction>({\n        type: ActionTypes.GET_APPLICATION_SESSIONS,\n        payload: res.data,\n      });\n      callback(false, \"\");\n    } catch (error) {\n      console.log({ code_error: error });\n      callback(false, errorToText(error));\n    }\n  };\n};\n\nexport const createAplicationSession = (data: ApplicationSessionInterface) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<CreateApplicationSessionAction>({\n      type: ActionTypes.CREATE_APPLICATION_SESSIONS,\n      payload: data,\n    });\n  };\n};\n\nexport const updateAplicationSession = (data: ApplicationSessionInterface) => {\n  console.log({ check: data });\n  return async (dispatch: Dispatch) => {\n    dispatch<UpdateApplicationSessionAction>({\n      type: ActionTypes.UPDATE_APPLICATION_SESSIONS,\n      payload: data,\n    });\n  };\n};\n\nexport const disableApplicationSession = (data: {\n  application_session_id: string;\n  status: boolean;\n}) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<DisableApplicationSessionAction>({\n      type: ActionTypes.DISABLE_APPLICATION_SESSION,\n      payload: data,\n    });\n  };\n};\n\nexport const getPositions = (callback: Function) => {\n  return async (dispatch: Dispatch) => {\n    callback(true, \"\");\n    try {\n      setAxiosToken();\n      const res = await axios.get<PositionAPI[]>(`${API.APPLICATION}/position`);\n      dispatch<GetPositionsAction>({\n        type: ActionTypes.GET_POSTIONS,\n        payload: res.data,\n      });\n      callback(false, \"\");\n    } catch (error) {\n      console.log({ code_error: error });\n      callback(false, errorToText(error));\n    }\n  };\n};\n\nexport const createPosition = (data: PositionCreateInterface) => {\n  console.log({ createPosition: data });\n  return async (dispatch: Dispatch) => {\n    dispatch<CreatePositionsAction>({\n      type: ActionTypes.CREATE_POSITION,\n      payload: data,\n    });\n  };\n};\n\nexport const updatePosition = (data: PositionCreateInterface) => {\n  console.log({ updatePosition: data });\n  return async (dispatch: Dispatch) => {\n    dispatch<UpdatePositionsAction>({\n      type: ActionTypes.UPDATE_POSITION,\n      payload: data,\n    });\n  };\n};\n\nexport const deletePosition = (data: string) => {\n  console.log({ deletePosition: data });\n  return async (dispatch: Dispatch) => {\n    dispatch<DeletePositionAction>({\n      type: ActionTypes.DELETE_POSITION,\n      payload: data,\n    });\n  };\n};\n\nexport const publishPosition = (data: {\n  position_id: string;\n  status: boolean;\n}) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<PublishPositionAction>({\n      type: ActionTypes.PUBLISH_POSITION,\n      payload: data,\n    });\n  };\n};\n","import React, { Component } from \"react\";\nimport { MdSearch } from \"react-icons/md\";\nimport { claimReasonInterface } from \"../../../interfaces\";\nimport search from \"../../../utils/search\";\n\nexport const claimReasonsData = [\n  { key: 1, reason: \"Not placed (Sinahawe umwanya)\" },\n  {\n    key: 2,\n    reason:\n      \"Not placed with higher marks (Sinahawe umwanya kandi hari abo ndusha twakoze bimwe bawuhawe)\",\n  },\n  {\n    key: 3,\n    reason:\n      \"Want to change district of placement (Nifuza guhindurirwa akarere nahawemo umwanya)\",\n  },\n  {\n    key: 4,\n    reason: \"Rejected offer by mistake (Nibeshye nanga umwanya nahawe)\",\n  },\n  {\n    key: 0,\n    reason: \"None of the above (nta na kimwe muri ibyo byavuzwe haruguru)\",\n  },\n];\n\ntype ChooseReasonProps = {\n  claimReason: claimReasonInterface | null;\n  setClaimReason: (value: claimReasonInterface | null) => void;\n  setChooseClaimReason: (value: boolean) => void;\n  allClaimReasons: claimReasonInterface[];\n};\n\ntype ChooseReasonState = {\n  searchInput: string;\n};\n\nclass ChooseReason extends Component<ChooseReasonProps, ChooseReasonState> {\n  constructor(props: ChooseReasonProps) {\n    super(props);\n\n    this.state = {\n      searchInput: \"\",\n    };\n  }\n\n  setSearchInput = (value: string) => {\n    this.setState({ searchInput: value });\n  };\n\n  render() {\n    return (\n      <div>\n        {/* SEARCH PART */}\n        <div className=\"flex items-center w-full my-1\">\n          <MdSearch className=\"w-6 h-6 absolute ml-2\" />\n          <input\n            type=\"text\"\n            placeholder=\"Search\"\n            className=\"focus:border-2 h-7 ml-1 pl-9 mr-2 bg-gray-100 focus:border-gray-700 w-full rounded\"\n            onChange={(e) => this.setSearchInput(e.target.value)}\n            value={this.state.searchInput}\n          />\n          <button\n            className=\"bg-red-200 text-red-700 py-1 px-2 mr-1 rounded text-sm focus:outline-none\"\n            type=\"button\"\n            onClick={() => this.props.setChooseClaimReason(false)}\n          >\n            Cancel\n          </button>\n        </div>\n        {/* END SEARCH PART ///////////////// */}\n\n        <div className=\"w-full h-52 mt-2 overflow-y-auto divide-y divide-gray-300\">\n          {search(this.props.allClaimReasons, this.state.searchInput).map(\n            (item: claimReasonInterface, index) => (\n              <section key={index.toString() + item.id}>\n                <div\n                  className={`my-1 py-1 w-full px-2 hover:bg-gray-100 cursor-pointer ${\n                    this.props.claimReason &&\n                    this.props.claimReason.id === item.id &&\n                    \"border-l-2 border-blue-600\"\n                  }`}\n                  onClick={() => {\n                    this.props.setChooseClaimReason(false);\n                    this.props.setClaimReason(item);\n                  }}\n                >\n                  <p className=\"text-base text-black\">{item.reason}</p>\n                </div>\n              </section>\n            )\n          )}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default ChooseReason;\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { PushPopupAlert } from \"../../../actions\";\nimport { fetchUserAccess } from \"../../../actions/users\";\nimport {\n  claimApplicationsPositionInterface,\n  ClaimExamResultsDetails,\n  QuestionLanguage,\n} from \"../../../interfaces\";\nimport { StoreState } from \"../../../reducers\";\nimport { DocumentReducerInterface } from \"../../../reducers/document\";\nimport { UserInterface } from \"../../../shared/interfaces\";\nimport { DATE } from \"../../../utils/functions\";\nimport { PositionRequirementTableInterface } from \"../../Positions/ViewPosition\";\n\nexport const FC_ApplicationPositionDistinctCategory = (\n  thisPosition: claimApplicationsPositionInterface,\n  documentCategories: DocumentReducerInterface\n): {\n  PositionsTemp: PositionRequirementTableInterface[];\n  DistinctCategoriesTemp: PositionRequirementTableInterface[];\n  DistinctSubCategoriesTemp: PositionRequirementTableInterface[];\n} => {\n  let PositionsTemp: PositionRequirementTableInterface[] = [];\n  let DistinctCategoriesTemp: PositionRequirementTableInterface[] = [],\n    DistinctCategoriesIds: string[] = [];\n  let DistinctSubCategoriesTemp: PositionRequirementTableInterface[] = [],\n    DistinctSubCategoriesIds: string[] = [];\n  // GET REQUIREMENTS OF THE CURRENT POSITION ====================\n  let requirements = thisPosition.requirements;\n  // LOOP THROUGH CURRENT POSITION REQUIREMENTS ==========================\n  for (let req in requirements) {\n    let thisRequirements = requirements[req];\n    // GET DOC CATEGORY OF THE CURRENT POSITION REQUIREMENTS ====================\n    let thisCategory = documentCategories.documentCategory\n      ? documentCategories.documentCategory.find(\n          (item) =>\n            item.user_detail_category_id ===\n            thisRequirements.user_detail_category_id\n        ) && {\n          title: documentCategories.documentCategory.find(\n            (item) =>\n              item.user_detail_category_id ===\n              thisRequirements.user_detail_category_id\n          )!.title,\n          user_detail_category_id: documentCategories.documentCategory.find(\n            (item) =>\n              item.user_detail_category_id ===\n              thisRequirements.user_detail_category_id\n          )!.user_detail_category_id,\n        }\n      : {\n          title: \"\",\n          user_detail_category_id: thisRequirements.user_detail_category_id,\n        };\n    // GET DOC SUB CATEGORY OF THE CURRENT POSITION REQUIREMENTS ====================\n    let thisSubCategory = documentCategories.documentSubCategory\n      ? documentCategories.documentSubCategory.find(\n          (item) =>\n            item.user_detail_subcategory_id ===\n            thisRequirements.user_detail_subcategory_id\n        )\n        ? {\n            title: documentCategories.documentSubCategory.find(\n              (item) =>\n                item.user_detail_subcategory_id ===\n                thisRequirements.user_detail_subcategory_id\n            )!.title,\n            user_detail_subcategory_id:\n              documentCategories.documentSubCategory.find(\n                (item) =>\n                  item.user_detail_subcategory_id ===\n                  thisRequirements.user_detail_subcategory_id\n              )!.user_detail_subcategory_id,\n            category_id: documentCategories.documentSubCategory.find(\n              (item) =>\n                item.user_detail_subcategory_id ===\n                thisRequirements.user_detail_subcategory_id\n            )!.category_id,\n          }\n        : {\n            title: \"\",\n            user_detail_subcategory_id:\n              thisRequirements.user_detail_subcategory_id,\n            category_id: \"\",\n          }\n      : {\n          title: \"\",\n          user_detail_subcategory_id:\n            thisRequirements.user_detail_subcategory_id,\n          category_id: \"\",\n        };\n    // LOOP THROUGH FIELDS OF THE CURRENT POSITION REQUIREMENTS ==========================\n    if (thisCategory) {\n      for (let field in thisRequirements.position_requirement) {\n        // GET FIELDS OF THE CURRENT POSITION REQUIREMENTS ====================\n        let thisField = documentCategories.documentFields\n          ? documentCategories.documentFields.find(\n              (item) =>\n                item._id ===\n                thisRequirements.position_requirement[field]\n                  .category_subcategory_data_id\n            )\n            ? {\n                title: documentCategories.documentFields.find(\n                  (item) =>\n                    item._id ===\n                    thisRequirements.position_requirement[field]\n                      .category_subcategory_data_id\n                )!.title,\n                _id: documentCategories.documentFields.find(\n                  (item) =>\n                    item._id ===\n                    thisRequirements.position_requirement[field]\n                      .category_subcategory_data_id\n                )!._id,\n                required: thisRequirements.position_requirement[field].required,\n              }\n            : {\n                title: \"\",\n                _id: thisRequirements.user_detail_subcategory_id,\n                required: thisRequirements.position_requirement[field].required,\n              }\n          : {\n              title: \"\",\n              _id: thisRequirements.user_detail_subcategory_id,\n              required: thisRequirements.position_requirement[field].required,\n            };\n        // ADD CURRENT CATEGORY, SUB CATEGORY & FIELDS OF THE CURRENT POSITION REQUIREMENTS IN POSITIONS TEMP ====================\n        PositionsTemp.push({\n          category_id: thisCategory.user_detail_category_id,\n          category_title: thisCategory.title,\n          subcategory_id: thisSubCategory.user_detail_subcategory_id,\n          subcategory_title: thisSubCategory.title,\n          field_title: thisField.title,\n          field_id: thisField._id,\n          required: thisField.required,\n        });\n      }\n\n      // ADD CATEOGRY OF THE CURRENT POSITION REQUIREMENTS TO ARRAY ====================\n      if (\n        !DistinctCategoriesIds.includes(thisCategory.user_detail_category_id)\n      ) {\n        DistinctCategoriesIds.push(thisCategory.user_detail_category_id);\n        DistinctCategoriesTemp.push({\n          category_id: thisCategory.user_detail_category_id,\n          category_title: thisCategory.title,\n          subcategory_id: \"\",\n          subcategory_title: \"\",\n          field_title: \"\",\n          field_id: \"\",\n          required: false,\n        });\n      }\n\n      // ADD SUB CATEOGRY OF THE CURRENT POSITION REQUIREMENTS TO ARRAY ====================\n      if (\n        !DistinctSubCategoriesIds.includes(\n          thisSubCategory.user_detail_subcategory_id\n        )\n      ) {\n        DistinctSubCategoriesIds.push(\n          thisSubCategory.user_detail_subcategory_id\n        );\n        DistinctSubCategoriesTemp.push({\n          category_id: thisSubCategory.category_id,\n          category_title: \"\",\n          subcategory_id: thisSubCategory.user_detail_subcategory_id,\n          subcategory_title: thisSubCategory.title,\n          field_title: \"\",\n          field_id: \"\",\n          required: false,\n        });\n      }\n    }\n  }\n  // DistinctCategoriesIds.;\n\n  return { PositionsTemp, DistinctCategoriesTemp, DistinctSubCategoriesTemp };\n};\n\nexport const showEvaluator = (\n  userList: UserInterface[],\n  user_id: string\n): string => {\n  let result: string = \"\";\n  if (user_id === \"system\") {\n    result = \"System\";\n  } else {\n    // let user = getUserDocuments(userList, user_id);\n    // let user = undefined;\n    // if (user) {\n    //   result = user.user.user_info.fname + \" \" + user.user.user_info.lname;\n    // }\n  }\n  return result;\n};\n\ntype ExaminationFormViewProps = {\n  thisAnswerSheet: ClaimExamResultsDetails;\n  setViewThisFile: (value: string) => void;\n  setChooseClaimFile: (value: boolean) => void;\n  setClaimFileId: (value: string) => void;\n  fetchUserAccess: Function;\n  PushPopupAlert: Function;\n};\n\nconst ExaminationFormView: React.FC<ExaminationFormViewProps> = (props) => {\n  return (\n    <section className=\"\">\n      <div className=\"w-full bg-gray-100 px-4 py-1 animate__animated animate__fadeIn\">\n        <div className=\"flex flex-col mb-2\">\n          {/* APPLICATION TITLE ========== */}\n          <section className=\"flex items-center justify-between\">\n            <span className=\"text-blue-600 font-bold text-2xl\">\n              {props.thisAnswerSheet.course}\n            </span>\n            <button\n              type=\"button\"\n              className=\"btn btn-blue\"\n              onClick={() => {\n                props.setChooseClaimFile(false);\n                props.setClaimFileId(props.thisAnswerSheet.answer_sheet_id);\n                props.setViewThisFile(\"\");\n              }}\n            >\n              Choose\n            </button>\n          </section>\n          <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n            <span className={`italic`}>Date:</span>\n            <span className=\"font-bold text-gray-900 py-1\">\n              {DATE(props.thisAnswerSheet.createdAt)}\n            </span>\n          </div>\n        </div>\n        <div className=\"bg-white w-full rounded p-2 mb-2\">\n          <div className=\"text-gray-800 text-2xl font-bold my-2\">Questions</div>\n          {props.thisAnswerSheet.questions.map((item, index) => (\n            <div\n              key={index + item.id}\n              className=\"rounded border my-1 p-1 divide-y\"\n            >\n              <div className=\"flex flex-col gap-1 text-base text-gray-600\">\n                <span className={`font-semibold`}>\n                  {item.question.find(\n                    (q) => q.language === QuestionLanguage.Eng\n                  )\n                    ? item.question.find(\n                        (q) => q.language === QuestionLanguage.Eng\n                      )!.title\n                    : item.question[0].title}\n                  :\n                </span>\n                <span className=\"\">\n                  {item.question.find(\n                    (q) => q.language === QuestionLanguage.Eng\n                  )\n                    ? item.question.find(\n                        (q) => q.language === QuestionLanguage.Eng\n                      )!.description\n                    : item.question[0].description}\n                </span>\n                <div className=\"flex items-center gap-2\">\n                  <span className=\"text-medium\">Right answer</span>\n                  <span className=\"\">\n                    {item.question.find(\n                      (q) => q.language === QuestionLanguage.Eng\n                    )\n                      ? item.question.find(\n                          (q) => q.language === QuestionLanguage.Eng\n                        )!.description\n                      : item.question[0].answer}\n                  </span>\n                </div>\n              </div>\n            </div>\n          ))}\n        </div>\n      </div>\n    </section>\n  );\n};\n\nconst mapStateToProps = ({\n  users,\n}: StoreState): {\n  userList: UserInterface[];\n} => {\n  return {\n    userList: users,\n  };\n};\n\nexport default connect(mapStateToProps, { PushPopupAlert, fetchUserAccess })(\n  ExaminationFormView\n);\n","import React, { useState } from \"react\";\nimport { MdSearch } from \"react-icons/md\";\nimport { connect } from \"react-redux\";\nimport {\n  course,\n  CandidateClaimInterface,\n  claimApplicationsInterface,\n  ClaimExamResultsDetails,\n  SessionPlanInterface,\n} from \"../../../interfaces\";\nimport { candidatePlacementInterface } from \"../../../interfaces/placement\";\nimport { isClaimAllowed } from \"./ClaimForm\";\n\nexport const getCourseById = (courses: course[], course_id: string) => {\n  return courses.find((item) => item.course_id === course_id);\n};\n\nexport const getCourseIdBySheetId = (\n  allData: ClaimExamResultsDetails[],\n  sheet_id: string\n) => {\n  return allData.find((item) => item.answer_sheet_id === sheet_id);\n};\n\nexport const searchApplication = (\n  objList: claimApplicationsInterface[],\n  text: any\n): claimApplicationsInterface[] => {\n  if (undefined === text || text === \"\") return objList;\n  return objList.filter((product) => {\n    let flag;\n    // let dataKeys = product;\n\n    for (let prop in product) {\n      flag = false;\n      if (prop === \"position\") {\n        flag =\n          product.position.position_title\n            .toString()\n            .toLowerCase()\n            .indexOf(text.toLowerCase()) > -1;\n      }\n      if (flag) break;\n    }\n    return flag;\n  });\n  // return objList.filter((product) =>\n  //   product.position.position_title.includes(text)\n  // );\n};\n\ntype FormPlacementListProps = {\n  setChooseClaimFile: (value: boolean) => void;\n  setClaimFileId: (value: string) => void;\n  setViewThisFile: (value: string) => void;\n  viewThisFile: string;\n  myPlacement: candidatePlacementInterface | null;\n  myClaims: CandidateClaimInterface[];\n  activeSession: SessionPlanInterface;\n\n  // REDUX //////////////////////\n};\n\nconst FormPlacementList: React.FC<FormPlacementListProps> = (props) => {\n  const [searchInput, setSearchInput] = useState<string>(\"\");\n\n  return (\n    <section>\n      {/* SEARCH PART */}\n      <div className=\"flex items-center w-full my-1\">\n        <MdSearch className=\"w-6 h-6 absolute ml-2\" />\n        <input\n          type=\"text\"\n          placeholder=\"Search\"\n          className=\"focus:border-2 h-7 ml-1 pl-9 mr-2 bg-gray-100 focus:border-gray-700 w-full rounded\"\n          onChange={(e) => setSearchInput(e.target.value)}\n          value={searchInput}\n          disabled={\n            props.myPlacement === null ||\n            isClaimAllowed(\n              props.myClaims,\n              props.activeSession.session_plan_id,\n              props.myPlacement.placed._id\n            )\n              ? false\n              : true\n          }\n        />\n        <button\n          className=\"bg-red-200 text-red-700 py-1 px-2 mr-1 rounded text-sm focus:outline-none\"\n          type=\"button\"\n          onClick={() => {\n            props.setChooseClaimFile(false);\n            props.setViewThisFile(\"\");\n          }}\n        >\n          Cancel\n        </button>\n      </div>\n      {/* END SEARCH PART ///////////////// */}{\" \"}\n      {/* searchData(props.candidateAnswers, searchInput) */}\n      <div className=\"w-full h-52 mt-2 overflow-y-auto divide-y divide-gray-300\">\n        {props.myPlacement ? (\n          isClaimAllowed(\n            props.myClaims,\n            props.activeSession.session_plan_id,\n            props.myPlacement.placed._id\n          ) && (\n            <div className=\"group flex items-center justify-between my-1 hover:bg-gray-100\">\n              <div\n                className=\"p-1 w-full mr-2 cursor-pointer\"\n                onClick={() => {\n                  props.setChooseClaimFile(false);\n                  props.setClaimFileId(props.myPlacement!.placed._id);\n                }}\n              >\n                <p className=\"text-base font-medium text-black\">\n                  Placed on {props.myPlacement.placed.school.school_name}\n                </p>\n              </div>\n              <button\n                type=\"button\"\n                className=\"bg-blue-200 hover:bg-blue-300 text-blue-700 group-hover:text-blue-800 py-1 px-2 mr-1 rounded text-sm\"\n                onClick={() => {\n                  props.setViewThisFile(props.myPlacement!.placed._id);\n                }}\n              >\n                View\n              </button>\n            </div>\n          )\n        ) : (\n          <div className=\"text-center p-3\">\n            <p className=\"text-base font-medium text-black\">\n              No placement to claim on!\n            </p>\n          </div>\n        )}\n      </div>\n    </section>\n  );\n};\n\n// const mapStateToProps = ({\n//   course,\n// }: StoreState): {\n//   courses: course[] | null;\n// } => {\n//   return {\n//     courses: course.courses,\n//   };\n// };\nexport default connect(null, {})(FormPlacementList);\n","import axios from \"axios\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Auth, loadCourses, PushPopupAlert } from \"../../../actions\";\nimport {\n  createClaim,\n  DocumentClaimUser,\n  GetClaimingTypes,\n  getClaimReasons,\n  getMyAnswers,\n  getMyClaims,\n  getMyPlacement,\n  getMyRejectedApplications,\n  getMyRejectedDocuments,\n} from \"../../../actions/claiming\";\nimport {\n  getDocumentCategory,\n  getDocumentSubCategory,\n  getDocumentFields,\n} from \"../../../actions/document\";\nimport { getActiveSessionPlan } from \"../../../actions/session\";\nimport { getApplicationSessions } from \"../../../actions/settings\";\nimport { PopupAlertData } from \"../../../components/Alert/Popup\";\nimport Modal, { ModalSize, Themes } from \"../../../components/Modal/Modal\";\nimport {\n  CandidateClaimInterface,\n  claimApplicationsInterface,\n  ClaimExamResultsDetails,\n  claimReasonInterface,\n  course,\n  PlansInterface,\n  PlansTypeKeys,\n  SessionPlanInterface,\n} from \"../../../interfaces\";\nimport { ApplicationStates } from \"../../../interfaces/application\";\nimport { candidatePlacementInterface } from \"../../../interfaces/placement\";\nimport { PopupAlertTheme } from \"../../../interfaces/popupAlert\";\nimport { StoreState } from \"../../../reducers\";\nimport { ClaimingReducerType } from \"../../../reducers/claiming\";\nimport { DocumentReducerInterface } from \"../../../reducers/document\";\nimport { SessionPlanReducerInterface } from \"../../../reducers/session\";\nimport {\n  capitalizeFirstLetter,\n  isEmptyOrSpaces,\n} from \"../../../shared/dataTest\";\nimport { UserInterface } from \"../../../shared/interfaces\";\nimport { API } from \"../../../utils/api\";\nimport { setAxiosToken } from \"../../../utils/AxiosToken\";\nimport { errorToText } from \"../../../utils/errors\";\nimport { isPlanActive } from \"../../SessionSettings/SessionDetails\";\nimport ApplicationFormView from \"./ApplicationFormView\";\nimport ChooseReason from \"./ChooseReason\";\nimport DocFormView from \"./DocFormView\";\nimport ExaminationFormView from \"./ExaminationFormView\";\nimport FormApplicationList from \"./FormApplicationList\";\nimport FormDocumentList from \"./FormDocumentList\";\nimport FormExamList, {\n  getCourseById,\n  getCourseIdBySheetId,\n} from \"./FormExamList\";\nimport FormPlacementList from \"./FormPlacementList\";\n\nexport const ClaimGetDocTitle = (\n  documentCategories: DocumentReducerInterface,\n  doc: DocumentClaimUser\n): { category: string; sub_category: string; field: string; main: string } => {\n  let DocCategory: string = \"\",\n    DocSubCategory: string = \"\",\n    DocField: string = \"\",\n    DocTitle: string = \"\";\n  if (\n    doc.sub_category_id.length > 0 &&\n    documentCategories.documentSubCategory\n  ) {\n    DocTitle = documentCategories.documentSubCategory.filter(\n      (c) => c.user_detail_subcategory_id === doc.sub_category_id\n    )[0].title;\n    DocSubCategory = DocTitle;\n  } else if (\n    doc.category_id.length > 0 &&\n    documentCategories.documentCategory\n  ) {\n    DocTitle = documentCategories.documentCategory.filter(\n      (c) => c.user_detail_category_id === doc.category_id\n    )[0].title;\n    DocCategory = DocTitle;\n  }\n  if (\n    doc.category_subcategory_data &&\n    doc.category_subcategory_data.category_subcategory_Data_id.length > 0 &&\n    documentCategories.documentFields\n  ) {\n    console.log({ doc });\n    DocField = documentCategories.documentFields.filter(\n      (c) =>\n        c._id === doc.category_subcategory_data?.category_subcategory_Data_id\n    )[0].title;\n    DocTitle += \" in \" + DocField;\n  }\n\n  return {\n    category: DocCategory,\n    sub_category: DocSubCategory,\n    field: DocField,\n    main: DocTitle,\n  };\n};\n\nexport const isClaimAllowed = (\n  allClaim: CandidateClaimInterface[],\n  period_id: string,\n  claimOnId: string\n): boolean => {\n  if (\n    allClaim.find(\n      (item) =>\n        item.period_id === period_id && item.claiming_on_id === claimOnId\n    )\n  ) {\n    return false;\n  }\n  return true;\n};\n\ntype ClaimFormProps = {\n  // FOR SHORTCUT BUTTONS CALL\n  claim_type?: PlansTypeKeys;\n  file_id?: string;\n  // REQUIRED PROPS\n  formState: boolean;\n  setFormState: (value: boolean, response?: boolean) => void;\n  auth: Auth;\n  sessionPlan: SessionPlanReducerInterface;\n  claiming: ClaimingReducerType;\n  documentReducer: DocumentReducerInterface;\n  courses: course[] | null;\n  loadCourses: Function;\n  getMyAnswers: Function;\n  getMyPlacement: Function;\n  getClaimReasons: Function;\n  getActiveSessionPlan: Function;\n  createClaim: Function;\n  GetClaimingTypes: Function;\n  getDocumentCategory: Function;\n  getDocumentSubCategory: Function;\n  getDocumentFields: Function;\n  getMyRejectedApplications: Function;\n  getMyRejectedDocuments: Function;\n  getMyClaims: Function;\n  PushPopupAlert: (alert: PopupAlertData) => void;\n};\n\ntype ClaimFormState = {\n  loading: boolean;\n  loadingForm: boolean;\n  formError: {\n    element: string;\n    msg: string;\n  } | null;\n  thisClaimType: PlansTypeKeys | null;\n  thisClaimTypeId: string;\n  claimComment: string;\n  claimFileId: string;\n  chooseClaimFile: boolean;\n  chooseClaimReason: boolean;\n  claimReason: claimReasonInterface | null;\n  myPlacement: candidatePlacementInterface | null;\n  viewThisFile: string;\n  formType: \"DEFAULT\" | \"PROPS\";\n  alertError: string | null;\n  activeSession: SessionPlanInterface | null;\n};\n\nclass ClaimForm extends Component<ClaimFormProps, ClaimFormState> {\n  constructor(props: ClaimFormProps) {\n    super(props);\n\n    this.state = {\n      loading: true,\n      loadingForm: false,\n      formError: null,\n      thisClaimType: null,\n      thisClaimTypeId: \"\",\n      claimComment: \"\",\n      claimFileId: \"\",\n      chooseClaimFile: false,\n      viewThisFile: \"\",\n      formType: \"DEFAULT\",\n      alertError: null,\n      activeSession: null,\n      myPlacement: this.props.claiming.myPlacement,\n      chooseClaimReason: false,\n      claimReason: null,\n    };\n  }\n\n  isDocumentIdValid = (\n    documents: DocumentClaimUser[],\n    doc_id: string\n  ): {\n    status: boolean;\n    msg: string;\n    alert: PopupAlertTheme;\n  } => {\n    let doc = documents.find((item) => item.doc_id === doc_id);\n    if (doc) {\n      // CHECK IF DOCUMENT HAS REJECTED STATUS\n      if (doc.validated_by.validation_status !== \"rejected\") {\n        return {\n          status: false,\n          msg: \"Only rejected document are allowed for claim\",\n          alert: PopupAlertTheme.info,\n        };\n      }\n      // CHECK IF DOCUMENT HAS ALREADY CLAIMED ON\n      if (\n        this.props.claiming.myClaims &&\n        this.state.activeSession &&\n        isClaimAllowed(\n          this.props.claiming.myClaims,\n          this.state.activeSession.session_plan_id,\n          doc_id\n        )\n      ) {\n        return {\n          status: false,\n          msg: \"This document already in claiming list!\",\n          alert: PopupAlertTheme.info,\n        };\n      }\n      return { status: true, msg: \"\", alert: PopupAlertTheme.success };\n    } else {\n      return {\n        status: false,\n        msg: \"Invalid document id\",\n        alert: PopupAlertTheme.warning,\n      };\n    }\n    // return {\n    //   status: false,\n    //   msg: \"No Documents, please try again\",\n    //   alert: PopupAlertTheme.info,\n    // };\n  };\n\n  isApplicationIdValid = (\n    applications: claimApplicationsInterface[],\n    app_id: string\n  ): {\n    status: boolean;\n    msg: string;\n    alert: PopupAlertTheme;\n  } => {\n    let app = applications.find((item) => item.application_id === app_id);\n    console.log(\"====================================\");\n    console.log({ app, app_id });\n    console.log(\"====================================\");\n    if (app) {\n      // CHECK IF DOCUMENT HAS REJECTED STATUS\n      if (app.application_status !== ApplicationStates.Rejected) {\n        return {\n          status: false,\n          msg: \"Only rejected application are allowed for claim\",\n          alert: PopupAlertTheme.info,\n        };\n      }\n      // CHECK IF DOCUMENT HAS ALREADY CLAIMED ON\n      if (\n        this.props.claiming.myClaims &&\n        this.state.activeSession &&\n        isClaimAllowed(\n          this.props.claiming.myClaims,\n          this.state.activeSession.session_plan_id,\n          app.application_id\n        )\n      ) {\n        return {\n          status: false,\n          msg: \"This application already in claiming list!\",\n          alert: PopupAlertTheme.info,\n        };\n      }\n      return { status: true, msg: \"\", alert: PopupAlertTheme.info };\n    } else {\n      return {\n        status: false,\n        msg: \"Invalid application id\",\n        alert: PopupAlertTheme.warning,\n      };\n    }\n    // return {\n    //   status: false,\n    //   msg: \"No Application, please try again!\",\n    //   alert: PopupAlertTheme.info,\n    // };\n  };\n\n  setLoading = (state: boolean) => {\n    this.setState({ loading: state });\n  };\n\n  setLoadingForm = (state: boolean) => {\n    this.setState({ loadingForm: state });\n  };\n\n  setFormError = (\n    data: {\n      element: string;\n      msg: string;\n    } | null\n  ) => {\n    this.setState({ formError: data });\n  };\n\n  setAlertError = (data: string | null) => {\n    this.setState({ alertError: data });\n  };\n\n  setClaimFileId = (data: string) => {\n    this.setState({ claimFileId: data });\n  };\n\n  setViewThisFile = (data: string) => {\n    this.setState({ viewThisFile: data });\n  };\n\n  setChooseClaimFile = (data: boolean) => {\n    this.setState({ chooseClaimFile: data });\n  };\n\n  setChooseClaimReason = (data: boolean) => {\n    this.setState({ chooseClaimReason: data });\n  };\n\n  setClaimReason = (value: claimReasonInterface | null) => {\n    this.setState({ claimReason: value });\n  };\n\n  setClaimComment = (data: string) => {\n    this.setState({ claimComment: data });\n  };\n\n  isClaimTypeOpen = (\n    thisSession: SessionPlanInterface,\n    thisType: PlansTypeKeys\n  ): boolean => {\n    let data: PlansInterface | undefined;\n    if (thisType === PlansTypeKeys.APPLICATION) {\n      data = thisSession.plans.find(\n        (item) => item.type_key === PlansTypeKeys.APPLICATION\n      );\n      if (data && isPlanActive(thisSession, data) === \"OPEN\") {\n        return true;\n      }\n    } else if (thisType === PlansTypeKeys.DOCUMENT_VALIDATION) {\n      data = thisSession.plans.find(\n        (item) => item.type_key === PlansTypeKeys.DOCUMENT_VALIDATION\n      );\n      if (data && isPlanActive(thisSession, data) === \"OPEN\") {\n        return true;\n      }\n    } else if (thisType === PlansTypeKeys.PLACEMENT_TRANSFER) {\n      data = thisSession.plans.find(\n        (item) => item.type_key === PlansTypeKeys.PLACEMENT_TRANSFER\n      );\n      if (data && isPlanActive(thisSession, data) === \"OPEN\") {\n        return true;\n      }\n    }\n    return false;\n  };\n\n  isClaimBtnValid = (thisSession: SessionPlanInterface) => {\n    if (this.props.file_id || this.props.claim_type) {\n      // CHECK IF CLAIM TYPE && CLAIM FILE PROPS ARE PASSED PROPS\n      if (!this.props.claim_type) {\n        this.props.PushPopupAlert({\n          title: \"Claim type is required!\",\n          theme: PopupAlertTheme.warning,\n        });\n        this.props.setFormState(false);\n        this.setState({\n          claimFileId: \"\",\n          thisClaimType: null,\n          thisClaimTypeId: \"\",\n          claimComment: \"\",\n          chooseClaimFile: false,\n          formType: \"DEFAULT\",\n          viewThisFile: \"\",\n          formError: null,\n        });\n      } else if (!this.props.file_id) {\n        this.props.PushPopupAlert({\n          title: \"Claim file is required!\",\n          theme: PopupAlertTheme.warning,\n        });\n        this.props.setFormState(false);\n        this.setState({\n          claimFileId: \"\",\n          thisClaimType: null,\n          thisClaimTypeId: \"\",\n          claimComment: \"\",\n          chooseClaimFile: false,\n          formType: \"DEFAULT\",\n          viewThisFile: \"\",\n          formError: null,\n        });\n      } else if (!this.isClaimTypeOpen(thisSession, this.props.claim_type)) {\n        // IF CLAIM TYPE && CLAIM FILE PROPS ARE PASSED PROPS\n        // CHECK IF CLAIM TYPE IS OPEN ================\n        this.props.PushPopupAlert({\n          title: \"Claim type is closed!\",\n          theme: PopupAlertTheme.warning,\n        });\n        this.props.setFormState(false);\n        this.setState({\n          claimFileId: \"\",\n          thisClaimType: null,\n          thisClaimTypeId: \"\",\n          claimComment: \"\",\n          chooseClaimFile: false,\n          formType: \"DEFAULT\",\n          viewThisFile: \"\",\n          formError: null,\n        });\n      }\n    }\n  };\n\n  displayClaimType = (claimType: PlansTypeKeys): string => {\n    let result: string = \"\";\n    switch (claimType) {\n      case PlansTypeKeys.APPLICATION:\n        result = \"application\";\n        break;\n      case PlansTypeKeys.DOCUMENT_VALIDATION:\n        result = \"document\";\n        break;\n      case PlansTypeKeys.EXAMINATION:\n        result = \"exam\";\n        break;\n      case PlansTypeKeys.MARKS_PUBLICATION:\n        result = \"marks publication\";\n        break;\n      case PlansTypeKeys.PLACEMENT_TRANSFER:\n        result = \"placement\";\n        break;\n      default:\n        result = \"\";\n        break;\n    }\n\n    return result;\n  };\n\n  isClaimsAllowed = (\n    thisPeriod: SessionPlanInterface\n  ): {\n    status: boolean;\n    msg: string;\n    alert: PopupAlertTheme;\n  } => {\n    // LOADING CLAIMING OF CURRENT CANDIDATES ================================\n    if (\n      this.props.claiming.myClaims === null &&\n      this.props.file_id &&\n      this.props.claim_type\n    ) {\n      this.props.getMyClaims(\n        this.props.auth.user.user_id,\n        thisPeriod.session_plan_id,\n        (status: boolean, msg: string, data?: CandidateClaimInterface[]) => {\n          // !status && setLoadingClaims(status);\n          this.setLoading(status);\n          if (!status && msg.length) {\n            this.props.PushPopupAlert({\n              title: msg,\n              theme: PopupAlertTheme.danger,\n            });\n          }\n          if (data) {\n            let claim = data.find(\n              (item) =>\n                item.claiming_on_id === this.props.file_id &&\n                item.period_id === thisPeriod.session_plan_id\n            );\n            if (claim) {\n              return {\n                status: false,\n                msg: `You have already claimed on this ${this.displayClaimType(\n                  this.props.claim_type!\n                )}`,\n                alert: PopupAlertTheme.info,\n              };\n            }\n          }\n        }\n      );\n    } else if (\n      this.props.claiming.myClaims &&\n      this.props.file_id &&\n      this.props.claim_type\n    ) {\n      let claim = this.props.claiming.myClaims.find(\n        (item) =>\n          item.claiming_on_id === this.props.file_id &&\n          item.period_id === thisPeriod.session_plan_id\n      );\n      if (claim) {\n        return {\n          status: false,\n          msg: `You have already claimed on this ${this.displayClaimType(\n            this.props.claim_type!\n          )}`,\n          alert: PopupAlertTheme.info,\n        };\n      }\n    }\n\n    return {\n      status: true,\n      msg: \"\",\n      alert: PopupAlertTheme.success,\n    };\n  };\n\n  loadExamAnswers = (\n    activeSessionPlan: SessionPlanInterface,\n    user_id: string\n  ) => {\n    this.props.getMyAnswers(\n      activeSessionPlan.session_plan_id,\n      user_id,\n      (status: boolean, msg: string, data: SessionPlanInterface | \"none\") => {\n        this.setLoading(status);\n        if (!status && msg.length) {\n          this.props.PushPopupAlert({\n            title: msg,\n            theme: PopupAlertTheme.danger,\n          });\n        }\n        if (data) {\n          console.log(\"====================================\");\n          console.log({ data });\n          console.log(\"====================================\");\n        }\n      }\n    );\n  };\n\n  componentDidMount = () => {\n    if (\n      this.props.sessionPlan.activeSessionPlan === null ||\n      this.props.sessionPlan.activeSessionPlan === \"none\"\n    ) {\n      this.props.getActiveSessionPlan(\n        (status: boolean, msg: string, data: SessionPlanInterface | \"none\") => {\n          this.setLoading(status);\n          if (!status && msg.length) {\n            this.props.PushPopupAlert({\n              title: msg,\n              theme: PopupAlertTheme.danger,\n            });\n          }\n          if (data && data === \"none\") {\n            this.props.PushPopupAlert({\n              title: \"No session active session\",\n              theme: PopupAlertTheme.danger,\n            });\n            this.props.setFormState(false);\n            this.setState({\n              claimFileId: \"\",\n              thisClaimType: null,\n              thisClaimTypeId: \"\",\n              claimComment: \"\",\n              chooseClaimFile: false,\n              formType: \"DEFAULT\",\n              viewThisFile: \"\",\n              formError: null,\n            });\n          } else if (data) {\n            let _isClaimsAllowed = this.isClaimsAllowed(data);\n            if (!_isClaimsAllowed.status) {\n              this.props.PushPopupAlert({\n                title: _isClaimsAllowed.msg,\n                theme: _isClaimsAllowed.alert,\n              });\n              this.props.setFormState(false);\n            }\n            this.setState({ activeSession: data });\n            this.loadExamAnswers(data, this.props.auth.user.user_id);\n            this.isClaimBtnValid(data);\n          }\n        }\n      );\n    } else {\n      this.setState({\n        activeSession: this.props.sessionPlan.activeSessionPlan,\n      });\n      this.isClaimBtnValid(this.props.sessionPlan.activeSessionPlan);\n      let _isClaimsAllowed = this.isClaimsAllowed(\n        this.props.sessionPlan.activeSessionPlan\n      );\n      if (!_isClaimsAllowed.status) {\n        this.props.PushPopupAlert({\n          title: _isClaimsAllowed.msg,\n          theme: _isClaimsAllowed.alert,\n        });\n        this.props.setFormState(false);\n      }\n      this.loadExamAnswers(\n        this.props.sessionPlan.activeSessionPlan,\n        this.props.auth.user.user_id\n      );\n      this.setLoading(false);\n    }\n\n    if (this.props.documentReducer.documentCategory === null) {\n      this.props.getDocumentCategory();\n    }\n    if (this.props.documentReducer.documentSubCategory === null) {\n      this.props.getDocumentSubCategory();\n    }\n    if (this.props.documentReducer.documentFields === null) {\n      this.props.getDocumentFields();\n    }\n\n    if (this.props.claiming.candidateApplications === null) {\n      this.props.getMyRejectedApplications(\n        this.props.auth.user.user_id,\n        (status: boolean, msg: string, data?: claimApplicationsInterface[]) => {\n          this.setLoading(status);\n          if (!status) {\n            if (msg.length > 0) {\n              this.props.PushPopupAlert({\n                title: msg,\n                theme: PopupAlertTheme.danger,\n              });\n            }\n            if (data) {\n              // PROPS VALIDATION PROCESS ###############\n              if (\n                this.props.claim_type &&\n                this.props.file_id &&\n                this.state.formType === \"DEFAULT\"\n              ) {\n                if (this.props.claim_type === PlansTypeKeys.APPLICATION) {\n                  let _isApplicationIdValid = this.isApplicationIdValid(\n                    data,\n                    this.props.file_id\n                  );\n                  if (!_isApplicationIdValid.status) {\n                    this.props.PushPopupAlert({\n                      title: _isApplicationIdValid.msg,\n                      theme: _isApplicationIdValid.alert,\n                    });\n                    this.props.setFormState(false);\n                  } else {\n                    this.setState({\n                      thisClaimType: this.props.claim_type,\n                      claimFileId: this.props.file_id,\n                      formType: \"PROPS\",\n                    });\n                  }\n                }\n              }\n            }\n          }\n        }\n      );\n    }\n\n    if (this.props.claiming.candidateDocuments === null) {\n      this.props.getMyRejectedDocuments(\n        (status: boolean, msg: string, data?: DocumentClaimUser[]) => {\n          this.setLoading(status);\n          if (!status) {\n            if (msg.length > 0) {\n              this.props.PushPopupAlert({\n                title: msg,\n                theme: PopupAlertTheme.danger,\n              });\n            }\n            if (data) {\n              // PROPS VALIDATION PROCESS ###############\n              if (\n                this.props.claim_type &&\n                this.props.file_id &&\n                this.state.formType === \"DEFAULT\"\n              ) {\n                if (\n                  this.props.claim_type === PlansTypeKeys.DOCUMENT_VALIDATION\n                ) {\n                  let _isDocumentIdValid = this.isDocumentIdValid(\n                    data,\n                    this.props.file_id\n                  );\n                  if (!_isDocumentIdValid.status) {\n                    this.props.PushPopupAlert({\n                      title: _isDocumentIdValid.msg,\n                      theme: _isDocumentIdValid.alert,\n                    });\n                    // setAlertError(_isDocumentIdValid.msg);\n                    this.props.setFormState(false);\n                  } else {\n                    this.setState({\n                      thisClaimType: this.props.claim_type,\n                      claimFileId: this.props.file_id,\n                      formType: \"PROPS\",\n                    });\n                  }\n                }\n              }\n            }\n          }\n        }\n      );\n    }\n\n    if (this.props.claiming.claimReasons === null) {\n      this.props.getClaimReasons((status: boolean, msg: string) => {\n        this.setLoading(status);\n        if (!status) {\n          if (msg.length > 0) {\n            this.props.PushPopupAlert({\n              title: msg,\n              theme: PopupAlertTheme.danger,\n            });\n          }\n        }\n      });\n    }\n\n    if (this.props.claiming.myPlacement === null) {\n      this.props.getMyPlacement(\n        this.props.auth.user.user_id,\n        (\n          status: boolean,\n          msg: string,\n          data?: candidatePlacementInterface | null\n        ) => {\n          this.setLoading(status);\n          if (!status) {\n            if (msg.length > 0) {\n              this.props.PushPopupAlert({\n                title: msg,\n                theme: PopupAlertTheme.danger,\n              });\n            }\n          }\n          if (data) {\n            this.setState({ myPlacement: data });\n          }\n        }\n      );\n    }\n\n    // PROPS VALIDATION PROCESS ###############\n    if (\n      this.props.claim_type &&\n      this.props.file_id &&\n      this.state.formType === \"DEFAULT\"\n    ) {\n      this.setState({ thisClaimType: this.props.claim_type });\n      if (\n        this.props.claim_type === PlansTypeKeys.DOCUMENT_VALIDATION &&\n        this.props.claiming.candidateDocuments\n      ) {\n        let _isDocumentIdValid = this.isDocumentIdValid(\n          this.props.claiming.candidateDocuments,\n          this.props.file_id\n        );\n        if (!_isDocumentIdValid.status) {\n          this.props.PushPopupAlert({\n            title: _isDocumentIdValid.msg,\n            theme: _isDocumentIdValid.alert,\n          });\n          // setAlertError(_isDocumentIdValid.msg);\n          this.props.setFormState(false);\n        } else {\n          this.setState({\n            thisClaimType: this.props.claim_type,\n            claimFileId: this.props.file_id,\n            formType: \"PROPS\",\n          });\n        }\n      }\n      if (\n        this.props.claim_type === PlansTypeKeys.APPLICATION &&\n        this.props.claiming.candidateApplications\n      ) {\n        let _isApplicationIdValid = this.isApplicationIdValid(\n          this.props.claiming.candidateApplications,\n          this.props.file_id\n        );\n        if (!_isApplicationIdValid.status) {\n          this.props.PushPopupAlert({\n            title: _isApplicationIdValid.msg,\n            theme: _isApplicationIdValid.alert,\n          });\n          this.props.setFormState(false);\n        } else {\n          this.setState({\n            thisClaimType: this.props.claim_type,\n            claimFileId: this.props.file_id,\n            formType: \"PROPS\",\n          });\n        }\n      }\n    }\n\n    if (\n      this.props.courses === null ||\n      (this.props.courses.length === 0 && this.state.loading)\n    ) {\n      this.props.loadCourses(this.setLoading);\n      this.setLoading(false);\n    } else {\n      this.setLoading(false);\n    }\n  };\n\n  getDocumentById = (\n    documents: DocumentClaimUser[],\n    doc_id: string\n  ): DocumentClaimUser => {\n    return documents.filter((item) => item.doc_id === doc_id)[0];\n  };\n\n  getApplicationById = (\n    applications: claimApplicationsInterface[],\n    application_id: string\n  ): claimApplicationsInterface => {\n    return applications.filter(\n      (item) => item.application_id === application_id\n    )[0];\n  };\n\n  getExamById = (\n    exams: ClaimExamResultsDetails[],\n    answer_sheet_id: string\n  ): ClaimExamResultsDetails | undefined => {\n    return exams.find((item) => item.answer_sheet_id === answer_sheet_id);\n  };\n\n  getValidation = (\n    thisId: string\n  ): {\n    old_reason: string;\n    old_status: string;\n    old_evaluated_by: string;\n  } => {\n    let result: {\n      old_reason: string;\n      old_status: string;\n      old_evaluated_by: string;\n    } = { old_reason: \"\", old_status: \"\", old_evaluated_by: \"\" };\n\n    if (\n      this.state.thisClaimType === PlansTypeKeys.DOCUMENT_VALIDATION &&\n      this.props.claiming.candidateDocuments\n    ) {\n      result = {\n        old_reason: this.getDocumentById(\n          this.props.claiming.candidateDocuments,\n          thisId\n        ).validated_by.comment,\n        old_status: this.getDocumentById(\n          this.props.claiming.candidateDocuments,\n          thisId\n        ).validated_by.validation_status,\n        old_evaluated_by: this.getDocumentById(\n          this.props.claiming.candidateDocuments,\n          thisId\n        ).validated_by.user_id,\n      };\n    } else if (\n      this.state.thisClaimType === PlansTypeKeys.APPLICATION &&\n      this.props.claiming.candidateApplications\n    ) {\n      result = {\n        old_reason: this.getApplicationById(\n          this.props.claiming.candidateApplications,\n          thisId\n        ).override_by.comment,\n        old_status: this.getApplicationById(\n          this.props.claiming.candidateApplications,\n          thisId\n        ).override_by.application_status,\n        old_evaluated_by: this.getApplicationById(\n          this.props.claiming.candidateApplications,\n          thisId\n        ).override_by.user_id,\n      };\n    }\n\n    return result;\n  };\n\n  cleanToClose = (response?: boolean) => {\n    if (this.state.formType === \"PROPS\" && response) {\n      this.props.setFormState(false, response);\n    } else {\n      this.props.setFormState(false);\n    }\n    this.setState({\n      claimFileId: \"\",\n      thisClaimType: null,\n      thisClaimTypeId: \"\",\n      claimComment: \"\",\n      chooseClaimFile: false,\n      formType: \"DEFAULT\",\n      viewThisFile: \"\",\n      formError: null,\n    });\n  };\n\n  loadUserById = async (user_id: string, callback: Function) => {\n    if (isEmptyOrSpaces(user_id)) {\n      return this.props.PushPopupAlert({\n        title: \"No user id provided\",\n        theme: PopupAlertTheme.danger,\n      });\n    }\n    try {\n      setAxiosToken();\n      const res = await axios.get<UserInterface>(\n        `${API.AUTH}/users/${user_id}`\n      );\n      console.log(\"====================================\");\n      console.log({ loadUserById: res });\n      console.log(\"====================================\");\n      if (res) {\n        callback(res.data);\n      }\n    } catch (error) {\n      console.error({ error });\n      this.props.PushPopupAlert({\n        title: errorToText(error),\n        theme: PopupAlertTheme.danger,\n      });\n    }\n  };\n\n  handleSubmit = async (e: React.FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n    if (!this.state.thisClaimType) {\n      return this.setFormError({\n        element: \"claim_type\",\n        msg: \"Claim type is required!\",\n      });\n    }\n    if (isEmptyOrSpaces(this.state.claimFileId)) {\n      return this.setFormError({\n        element: \"claim_file\",\n        msg: `Please select ${this.state.thisClaimType.toLocaleLowerCase()} you are claiming on!`,\n      });\n    }\n\n    if (!this.state.claimReason) {\n      return this.setFormError({\n        element: \"claim_reason\",\n        msg: `Please select the reason of your claim!`,\n      });\n    }\n\n    if (isEmptyOrSpaces(this.state.claimComment)) {\n      return this.setFormError({\n        element: \"claim_comment\",\n        msg: `Claim comment is required!`,\n      });\n    }\n\n    if (!this.state.activeSession) {\n      return this.setAlertError(`No active claiming session is available!`);\n    }\n\n    this.setLoadingForm(true);\n    let old_evaluator_email: string = \"info@system.com\";\n    let old_evaluator_name: string = \"System\";\n    let evaluator_email: string = \"\";\n    let evaluator_name: string = \"\";\n\n    if (this.state.thisClaimType !== PlansTypeKeys.EXAMINATION) {\n      await this.loadUserById(\n        this.getValidation(this.state.claimFileId).old_evaluated_by,\n        (data: UserInterface) => {\n          old_evaluator_email = data.email;\n          old_evaluator_name =\n            data.user_info.fname + \" \" + data.user_info.lname;\n        }\n      );\n    }\n\n    try {\n      console.log(\"====================================\");\n      console.log({\n        claiming_on_id: this.state.claimFileId,\n        type_key: this.state.thisClaimType,\n        user: this.props.auth.user.user_id,\n        period_id: this.state.activeSession.session_plan_id,\n        default_claim_resaons: this.state.claimReason.id,\n        reason: this.state.claimComment,\n        old_reason:\n          this.state.thisClaimType === PlansTypeKeys.EXAMINATION ||\n          this.state.thisClaimType === PlansTypeKeys.PLACEMENT_TRANSFER\n            ? \"System\"\n            : this.getValidation(this.state.claimFileId).old_reason,\n        old_status:\n          this.state.thisClaimType === PlansTypeKeys.EXAMINATION ||\n          this.state.thisClaimType === PlansTypeKeys.PLACEMENT_TRANSFER\n            ? \"Failed\"\n            : this.getValidation(this.state.claimFileId).old_status,\n        old_evaluated_by:\n          this.state.thisClaimType === PlansTypeKeys.EXAMINATION ||\n          this.state.thisClaimType === PlansTypeKeys.PLACEMENT_TRANSFER\n            ? \"\"\n            : this.getValidation(this.state.claimFileId).old_evaluated_by,\n        old_evaluator_email,\n        old_evaluator_name,\n        evaluator_email,\n        evaluator_name,\n      });\n      console.log(\"====================================\");\n\n      setAxiosToken();\n      const res = await axios.post<CandidateClaimInterface>(\n        `${API.CLAIMING}/user/create`,\n        {\n          claiming_on_id: this.state.claimFileId,\n          type_key: this.state.thisClaimType,\n          user: this.props.auth.user.user_id,\n          period_id: this.state.activeSession.session_plan_id,\n          default_claim_resaons: this.state.claimReason.id,\n          reason: this.state.claimComment,\n          old_reason:\n            this.state.thisClaimType === PlansTypeKeys.EXAMINATION ||\n            this.state.thisClaimType === PlansTypeKeys.PLACEMENT_TRANSFER\n              ? \"System\"\n              : this.getValidation(this.state.claimFileId).old_reason,\n          old_status:\n            this.state.thisClaimType === PlansTypeKeys.EXAMINATION ||\n            this.state.thisClaimType === PlansTypeKeys.PLACEMENT_TRANSFER\n              ? \"Failed\"\n              : this.getValidation(this.state.claimFileId).old_status,\n          old_evaluated_by:\n            this.state.thisClaimType === PlansTypeKeys.EXAMINATION ||\n            this.state.thisClaimType === PlansTypeKeys.PLACEMENT_TRANSFER\n              ? \"\"\n              : this.getValidation(this.state.claimFileId).old_evaluated_by,\n          old_evaluator_email,\n          old_evaluator_name,\n          evaluator_email,\n          evaluator_name,\n        }\n      );\n      console.log({ createClaim: res.data });\n      if (res.status === 201 || res.status === 200) {\n        this.props.createClaim(res.data);\n        this.props.PushPopupAlert({\n          title: \"Claim sent successful\",\n          theme: PopupAlertTheme.success,\n        });\n        this.cleanToClose(true);\n      }\n    } catch (error) {\n      console.error({ error });\n      this.props.PushPopupAlert({\n        title: errorToText(error),\n        theme: PopupAlertTheme.danger,\n      });\n    }\n    this.setLoadingForm(false);\n  };\n\n  selectClaimType = (thisClaim: string) => {\n    this.setState({\n      thisClaimType: isEmptyOrSpaces(thisClaim)\n        ? null\n        : (thisClaim as PlansTypeKeys),\n    });\n  };\n\n  generateChooseFileTitle = (thisClaimType: PlansTypeKeys | null): string => {\n    let result: string = \"\";\n\n    switch (thisClaimType) {\n      case PlansTypeKeys.APPLICATION:\n        result = `Select application you are claiming on?`;\n        break;\n      case PlansTypeKeys.DOCUMENT_VALIDATION:\n        result = `Select document you are claiming on?`;\n        break;\n      case PlansTypeKeys.EXAMINATION:\n        result = `Select exam you are claiming on?`;\n        break;\n      case PlansTypeKeys.MARKS_PUBLICATION:\n        result = `Select marks publication you are claiming on?`;\n        break;\n      case PlansTypeKeys.PLACEMENT_TRANSFER:\n        result = `Select placement you are claiming on?`;\n        break;\n      default:\n        result = \"Select file you are claiming on?\";\n        break;\n    }\n\n    return result;\n  };\n\n  render() {\n    if (\n      this.state.loading ||\n      this.state.activeSession === null ||\n      (this.props.claiming.myClaims === null &&\n        this.props.file_id &&\n        this.props.claim_type)\n    ) {\n      return null;\n    }\n\n    return (\n      <div className=\"pb-3\">\n        {this.props.formState && (\n          <Modal\n            backDrop={true}\n            theme={Themes.default}\n            close={(): void => {\n              !this.state.loadingForm &&\n                this.state.viewThisFile.length <= 0 &&\n                this.cleanToClose();\n              !this.state.loadingForm &&\n                this.state.viewThisFile.length > 0 &&\n                this.setViewThisFile(\"\");\n            }}\n            displayClose={true}\n            backDropClose={false}\n            title={\n              <div className=\"text-gray-900 font-bold text-xl md:ml-1\">\n                {this.state.viewThisFile.length <= 0 && \"Claiming form\"}\n                {this.state.viewThisFile.length > 0 &&\n                  this.state.thisClaimType ===\n                    PlansTypeKeys.DOCUMENT_VALIDATION &&\n                  \"Viewing document\"}\n                {this.state.viewThisFile.length > 0 &&\n                  this.state.thisClaimType === PlansTypeKeys.APPLICATION &&\n                  \"Viewing application\"}\n              </div>\n            }\n            widthSizeClass={\n              this.state.viewThisFile.length > 0\n                ? ModalSize.extraLarge\n                : ModalSize.medium\n            }\n            padding={{ title: true, body: false, footer: false }}\n          >\n            {/* CLAIM FORM ============================================== */}\n            {this.state.viewThisFile.length <= 0 && (\n              <form onSubmit={(e) => this.handleSubmit(e)}>\n                <div className=\"px-6 pb-3\">\n                  {this.state.alertError && (\n                    <div\n                      className=\"alert-warning cursor-pointer\"\n                      onClick={() => this.setAlertError(null)}\n                    >\n                      {this.state.alertError}\n                    </div>\n                  )}\n                  <div className=\"text-base text-gray-700 sm:text-lg\">\n                    {/* SELECT CLAIM TYPE ============================================== */}\n                    <div className=\"flex flex-col mb-2\">\n                      <label>Claim type</label>\n                      <select\n                        className={`rounded px-2 py-2 w-full bg-white focus:outline-none ${\n                          this.state.formType === \"PROPS\" &&\n                          \"cursor-not-allowed\"\n                        } ${\n                          this.state.formError &&\n                          this.state.formError.element === \"claim_type\"\n                            ? \"border-red-500\"\n                            : \"border-gray-500\"\n                        } border-2`}\n                        onChange={(e: React.ChangeEvent<HTMLSelectElement>) => {\n                          this.selectClaimType(e.target.value);\n                          this.setClaimFileId(\"\");\n                          this.state.formError &&\n                            this.state.formError.element === \"claim_type\" &&\n                            this.setFormError(null);\n                        }}\n                        value={\n                          this.state.thisClaimType\n                            ? this.state.thisClaimType\n                            : \"\"\n                        }\n                        disabled={\n                          this.state.loadingForm ||\n                          this.state.formType === \"PROPS\"\n                        }\n                      >\n                        <option value=\"\">Choose claim type</option>\n                        {Object.values(PlansTypeKeys).map((item, index) => (\n                          <option\n                            value={item}\n                            key={index + item}\n                            className={`${\n                              item === PlansTypeKeys.MARKS_PUBLICATION ||\n                              item === PlansTypeKeys.PLACEMENT_TRANSFER\n                                ? \"hidden\"\n                                : \"block\"\n                            }`}\n                          >\n                            {capitalizeFirstLetter(\n                              item.toLocaleLowerCase().replace(/_/g, \" \")\n                            )}\n                          </option>\n                        ))}\n                      </select>\n                      {this.state.formError &&\n                        this.state.formError.element === \"claim_type\" && (\n                          <span className=\"text-red-500\">\n                            {this.state.formError.msg}\n                          </span>\n                        )}\n                    </div>\n                    {/* END SELECT CLAIM TYPE ============================================== */}\n\n                    {/* SELECT FILE TO CLAIM ON ============================================== */}\n                    <div className=\"flex flex-col mb-2\">\n                      <label>\n                        {this.generateChooseFileTitle(this.state.thisClaimType)}\n                      </label>\n                      <div\n                        className={`text-left bg-white border-2 ${\n                          this.state.formType !== \"PROPS\"\n                            ? \"border-gray-700\"\n                            : \"border-gray-400 text-gray-500\"\n                        } rounded w-full ${\n                          this.state.chooseClaimFile ? \"h-64\" : \"h-10\"\n                        } ${\n                          this.state.formError &&\n                          this.state.formError.element === \"claim_file\"\n                            ? \"border-red-500\"\n                            : \"\"\n                        } border-2 ${\n                          this.state.thisClaimType &&\n                          !this.state.chooseClaimFile &&\n                          this.state.formType !== \"PROPS\"\n                            ? \"cursor-pointer\"\n                            : !this.state.chooseClaimFile &&\n                              \"cursor-not-allowed\"\n                        }`}\n                        title={\n                          !this.state.thisClaimType\n                            ? \"Choose claim type first!\"\n                            : \"\"\n                        }\n                        onClick={() => {\n                          this.state.formType === \"DEFAULT\" &&\n                            this.state.thisClaimType &&\n                            !this.state.chooseClaimFile &&\n                            this.setChooseClaimFile(true);\n                          this.state.formError &&\n                            this.state.formError.element === \"claim_file\" &&\n                            this.setFormError(null);\n                        }}\n                      >\n                        {/* DISPLAYING FILTERED SELECTING FILE ============================ */}\n                        {this.state.claimFileId.length > 0 &&\n                        !this.state.chooseClaimFile ? (\n                          <p className=\"my-1 mx-2\">\n                            {this.state.thisClaimType ===\n                              PlansTypeKeys.DOCUMENT_VALIDATION &&\n                              this.props.claiming.candidateDocuments &&\n                              ClaimGetDocTitle(\n                                this.props.documentReducer,\n                                this.getDocumentById(\n                                  this.props.claiming.candidateDocuments,\n                                  this.state.claimFileId\n                                )\n                              ).main}\n                            {this.state.thisClaimType ===\n                              PlansTypeKeys.APPLICATION &&\n                              this.props.claiming.candidateApplications &&\n                              this.getApplicationById(\n                                this.props.claiming.candidateApplications,\n                                this.state.claimFileId\n                              ).position.position_title}\n                            {this.state.thisClaimType ===\n                              PlansTypeKeys.EXAMINATION &&\n                              this.props.courses &&\n                              this.props.claiming.myAnswer &&\n                              getCourseIdBySheetId(\n                                this.props.claiming.myAnswer,\n                                this.state.claimFileId\n                              ) &&\n                              getCourseById(\n                                this.props.courses,\n                                getCourseIdBySheetId(\n                                  this.props.claiming.myAnswer,\n                                  this.state.claimFileId\n                                )!.course\n                              ) &&\n                              getCourseById(\n                                this.props.courses,\n                                getCourseIdBySheetId(\n                                  this.props.claiming.myAnswer,\n                                  this.state.claimFileId\n                                )!.course\n                              )!.course_name}\n\n                            {this.state.thisClaimType ===\n                              PlansTypeKeys.PLACEMENT_TRANSFER &&\n                              this.state.myPlacement &&\n                              !isEmptyOrSpaces(this.state.claimFileId) &&\n                              \"Placed on \" +\n                                this.state.myPlacement.placed.school\n                                  .school_name}\n                          </p>\n                        ) : (\n                          !this.state.chooseClaimFile && (\n                            <p className=\"my-1 mx-2\">\n                              Select Claim{\" \"}\n                              {this.state.thisClaimType &&\n                                this.state.thisClaimType\n                                  .toLocaleLowerCase()\n                                  .replace(/_/g, \" \")}\n                            </p>\n                          )\n                        )}\n                        {/* END DISPLAYING FILTERED SELECTING FILE ============================ */}\n\n                        {/* LISTING OF REJECTED DOCUMENTS ============================ */}\n                        {this.state.chooseClaimFile &&\n                          this.state.thisClaimType ===\n                            PlansTypeKeys.DOCUMENT_VALIDATION &&\n                          this.props.claiming.candidateDocuments &&\n                          this.props.claiming.myClaims &&\n                          this.props.sessionPlan.activeSessionPlan &&\n                          this.props.sessionPlan.activeSessionPlan !==\n                            \"none\" && (\n                            <FormDocumentList\n                              setChooseClaimFile={this.setChooseClaimFile}\n                              setClaimFileId={this.setClaimFileId}\n                              setViewThisFile={this.setViewThisFile}\n                              viewThisFile={this.state.viewThisFile}\n                              candidateDocuments={\n                                this.props.claiming.candidateDocuments\n                              }\n                              documentCategories={this.props.documentReducer}\n                              myClaims={this.props.claiming.myClaims}\n                              activeSession={\n                                this.props.sessionPlan.activeSessionPlan\n                              }\n                            />\n                          )}\n                        {/* END LISTING OF REJECTED DOCUMENTS ============================ */}\n                        {/* ---------------------------------------------------------- */}\n                        {/* LISTING OF REJECTED APPLICATION ============================ */}\n                        {this.state.chooseClaimFile &&\n                          this.state.thisClaimType ===\n                            PlansTypeKeys.APPLICATION &&\n                          this.props.claiming.candidateApplications &&\n                          this.props.claiming.myClaims &&\n                          this.props.sessionPlan.activeSessionPlan &&\n                          this.props.sessionPlan.activeSessionPlan !==\n                            \"none\" && (\n                            <FormApplicationList\n                              setChooseClaimFile={this.setChooseClaimFile}\n                              setClaimFileId={this.setClaimFileId}\n                              setViewThisFile={this.setViewThisFile}\n                              viewThisFile={this.state.viewThisFile}\n                              candidateApplications={\n                                this.props.claiming.candidateApplications\n                              }\n                              myClaims={this.props.claiming.myClaims}\n                              activeSession={\n                                this.props.sessionPlan.activeSessionPlan\n                              }\n                            />\n                          )}\n                        {/* END LISTING OF REJECTED APPLICATION ============================ */}\n                        {/* ---------------------------------------------------------- */}\n                        {/* LISTING OF FAILED EXAM ============================ */}\n                        {this.state.chooseClaimFile &&\n                          this.state.thisClaimType ===\n                            PlansTypeKeys.EXAMINATION &&\n                          this.props.claiming.myAnswer &&\n                          this.props.claiming.myClaims &&\n                          this.props.sessionPlan.activeSessionPlan &&\n                          this.props.sessionPlan.activeSessionPlan !==\n                            \"none\" && (\n                            <FormExamList\n                              setChooseClaimFile={this.setChooseClaimFile}\n                              setClaimFileId={this.setClaimFileId}\n                              setViewThisFile={this.setViewThisFile}\n                              viewThisFile={this.state.viewThisFile}\n                              candidateAnswers={this.props.claiming.myAnswer}\n                              myClaims={this.props.claiming.myClaims}\n                              activeSession={\n                                this.props.sessionPlan.activeSessionPlan\n                              }\n                            />\n                          )}\n                        {/* END LISTING OF FAILED EXAM ============================ */}\n                        {/* ---------------------------------------------------------- */}\n                        {/* PENDING PLACMENT ============================ */}\n                        {this.state.chooseClaimFile &&\n                          this.state.thisClaimType ===\n                            PlansTypeKeys.PLACEMENT_TRANSFER &&\n                          this.props.claiming.myClaims &&\n                          this.props.sessionPlan.activeSessionPlan &&\n                          this.props.sessionPlan.activeSessionPlan !==\n                            \"none\" && (\n                            <FormPlacementList\n                              setChooseClaimFile={this.setChooseClaimFile}\n                              setClaimFileId={this.setClaimFileId}\n                              setViewThisFile={this.setViewThisFile}\n                              viewThisFile={this.state.viewThisFile}\n                              myClaims={this.props.claiming.myClaims}\n                              activeSession={\n                                this.props.sessionPlan.activeSessionPlan\n                              }\n                              myPlacement={this.state.myPlacement}\n                            />\n                          )}\n                        {/* END LISTING OF FAILED EXAM ============================ */}\n                      </div>\n                      {this.state.formError &&\n                        this.state.formError.element === \"claim_file\" && (\n                          <span className=\"text-red-500\">\n                            {this.state.formError.msg}\n                          </span>\n                        )}\n                    </div>\n                    {/* END SELECT FILE TO CLAIM ON ============================================== */}\n\n                    {/* CLAIM REASONS ========================================== */}\n                    <div className=\"flex flex-col mb-2\">\n                      <label>Choose reason of your claim</label>\n                      <div\n                        className={`text-left bg-white border-2 border-gray-700 rounded w-full ${\n                          this.state.chooseClaimReason ? \"h-64\" : \"h-auto\"\n                        } ${\n                          this.state.formError &&\n                          this.state.formError.element === \"claim_reason\"\n                            ? \"border-red-500\"\n                            : \"\"\n                        } border-2 ${\n                          this.props.claiming.claimReasons === null\n                            ? \"cursor-wait\"\n                            : \"cursor-pointer\"\n                        }`}\n                        title=\"Choose the reason for your claim!\"\n                        onClick={() => {\n                          !this.state.chooseClaimReason &&\n                            this.setState({ chooseClaimReason: true });\n                          this.state.formError &&\n                            this.state.formError.element === \"claim_reason\" &&\n                            this.setFormError(null);\n                        }}\n                      >\n                        {/* DISPLAYING SELECTED REASON ============================ */}\n                        {this.state.claimReason &&\n                        !this.state.chooseClaimReason ? (\n                          <p className=\"my-1 mx-2\">\n                            {this.state.claimReason.reason}\n                          </p>\n                        ) : (\n                          !this.state.chooseClaimReason && (\n                            <p className=\"my-1 mx-2\">Select reason</p>\n                          )\n                        )}\n                        {/* END DISPLAYING SELECTED REASON ============================ */}\n\n                        {/* LISTING OF CLAIM REASONS ============================ */}\n                        {this.state.chooseClaimReason &&\n                          this.props.claiming.claimReasons && (\n                            <ChooseReason\n                              setChooseClaimReason={this.setChooseClaimReason}\n                              setClaimReason={this.setClaimReason}\n                              claimReason={this.state.claimReason}\n                              allClaimReasons={this.props.claiming.claimReasons}\n                            />\n                          )}\n                        {/* END LISTING OF CLAIM REASONS ============================ */}\n                      </div>\n                      {this.state.formError &&\n                        this.state.formError.element === \"claim_reason\" && (\n                          <span className=\"text-red-500\">\n                            {this.state.formError.msg}\n                          </span>\n                        )}\n                    </div>\n                    {/* END CLAIM REASONS ========================================== */}\n\n                    {/* CLAIM COMMENT ============================================== */}\n                    <div className=\"flex flex-col\">\n                      <label>Comment</label>\n                      <textarea\n                        className={`text-left input-white w-20 inline-block ${\n                          this.state.formError &&\n                          this.state.formError.element === \"claim_comment\"\n                            ? \"border-red-500\"\n                            : \"border-gray-500\"\n                        } border-2`}\n                        placeholder={`Claim comment`}\n                        style={{ resize: \"none\" }}\n                        value={this.state.claimComment}\n                        onChange={(e) => {\n                          this.setClaimComment(e.target.value);\n                          this.state.formError &&\n                            this.state.formError.element === \"claim_comment\" &&\n                            this.setFormError(null);\n                        }}\n                        rows={3}\n                        disabled={this.state.loadingForm}\n                      ></textarea>\n                      {this.state.formError &&\n                        this.state.formError.element === \"claim_comment\" && (\n                          <span className=\"text-red-500\">\n                            {this.state.formError.msg}\n                          </span>\n                        )}\n                    </div>\n                    {/* END CLAIM COMMENT ============================================== */}\n                  </div>\n\n                  <div className=\"pt-3 flex justify-between\">\n                    <button\n                      onClick={() => this.cleanToClose()}\n                      className={`btn bg-gray-400 text-white hover:bg-gray-600 focus:outline-none ${\n                        this.state.loadingForm && \"cursor-not-allowed\"\n                      }`}\n                      type=\"button\"\n                      disabled={this.state.loadingForm}\n                    >\n                      Exit\n                    </button>\n                    <button\n                      className={`btn bg-primary text-white hover:bg-blue-600 focus:outline-none ${\n                        this.state.loadingForm && \"cursor-wait\"\n                      }`}\n                      type=\"submit\"\n                      disabled={this.state.loadingForm}\n                    >\n                      {this.state.loadingForm ? \"Loading...\" : \"Claim\"}\n                    </button>\n                  </div>\n                </div>\n              </form>\n            )}\n            {/* END CLAIM FORM ============================================== */}\n\n            {/* CLAIM DOCUMENT VIEW ============================================== */}\n            {this.state.viewThisFile.length > 0 &&\n              this.props.claiming.candidateDocuments &&\n              this.state.thisClaimType ===\n                PlansTypeKeys.DOCUMENT_VALIDATION && (\n                <DocFormView\n                  thisDoc={this.getDocumentById(\n                    this.props.claiming.candidateDocuments,\n                    this.state.viewThisFile\n                  )}\n                  setViewThisFile={this.setViewThisFile}\n                  documentCategories={this.props.documentReducer}\n                  setChooseClaimFile={this.setChooseClaimFile}\n                  setClaimFileId={this.setClaimFileId}\n                />\n              )}\n            {/* END CLAIM DOCUMENT VIEW ============================================== */}\n            {/* ------------------------------------------------------------------------- */}\n            {/* CLAIM APPLICATION VIEW ============================================== */}\n            {this.state.viewThisFile.length > 0 &&\n              this.props.claiming.candidateApplications &&\n              this.state.thisClaimType === PlansTypeKeys.APPLICATION && (\n                <ApplicationFormView\n                  thisApplication={this.getApplicationById(\n                    this.props.claiming.candidateApplications,\n                    this.state.viewThisFile\n                  )}\n                  documentCategories={this.props.documentReducer}\n                  setChooseClaimFile={this.setChooseClaimFile}\n                  setClaimFileId={this.setClaimFileId}\n                  setViewThisFile={this.setViewThisFile}\n                />\n              )}\n            {/* END CLAIM APPLICATION VIEW ============================================== */}\n            {/* ------------------------------------------------------------------------- */}\n            {/* CLAIM EXAMINATION VIEW ============================================== */}\n            {this.state.viewThisFile.length > 0 &&\n              this.props.claiming.myAnswer &&\n              this.state.thisClaimType === PlansTypeKeys.EXAMINATION &&\n              this.getExamById(\n                this.props.claiming.myAnswer,\n                this.state.viewThisFile\n              ) && (\n                <ExaminationFormView\n                  thisAnswerSheet={\n                    this.getExamById(\n                      this.props.claiming.myAnswer,\n                      this.state.viewThisFile\n                    )!\n                  }\n                  setChooseClaimFile={this.setChooseClaimFile}\n                  setClaimFileId={this.setClaimFileId}\n                  setViewThisFile={this.setViewThisFile}\n                  // thisAnswerSheet={undefined}\n                  // setViewThisFile={undefined}\n                  // setChooseClaimFile={undefined}\n                  // setClaimFileId={undefined}\n                />\n              )}\n            {/* END CLAIM EXAMINATION VIEW ============================================== */}\n          </Modal>\n        )}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = ({\n  auth,\n  document,\n  claiming,\n  sessionPlan,\n  course,\n}: StoreState): {\n  auth: Auth;\n  sessionPlan: SessionPlanReducerInterface;\n  documentReducer: DocumentReducerInterface;\n  claiming: ClaimingReducerType;\n  courses: course[] | null;\n} => {\n  return {\n    auth: auth,\n    sessionPlan,\n    documentReducer: document,\n    claiming,\n    courses: course.courses,\n  };\n};\n\nexport default connect(mapStateToProps, {\n  getActiveSessionPlan,\n  loadCourses,\n  getMyClaims,\n  getClaimReasons,\n  getMyAnswers,\n  getMyPlacement,\n  createClaim,\n  GetClaimingTypes,\n  getMyRejectedApplications,\n  getMyRejectedDocuments,\n  getDocumentCategory,\n  getDocumentSubCategory,\n  getDocumentFields,\n  getApplicationSessions,\n  PushPopupAlert,\n})(ClaimForm);\n","import React from \"react\";\nimport Table from \"../../components/Table/Table\";\nimport { PositionRequirementTableInterface } from \"./ViewPosition\";\n\ninterface RequirementProps {\n  requirements: PositionRequirementTableInterface[];\n}\n\nconst ViewRequirements: React.FC<RequirementProps> = (props) => {\n  const tableData = (): JSX.Element[] => {\n    let data: PositionRequirementTableInterface[] = props.requirements;\n    // let data: PositionSubcategoryData[] =\n    //   props.position_requirement.position_requirement;\n    if (data.length === 0) {\n      return [\n        <tr key={153} className=\"border-b border-gray-200 hover:bg-gray-100\">\n          <td className=\"p-3 text-center\" colSpan={3}>\n            No Data Found\n          </td>\n        </tr>,\n      ];\n    }\n\n    return data.map((item, index) => (\n      <tr\n        key={index + item.field_id}\n        className=\"border-b border-gray-200 hover:bg-gray-100\"\n      >\n        <td className=\"p-3 text-left whitespace-nowrap\">{index + 1}</td>\n        <td className=\"p-3 text-left\">\n          <span>{item.subcategory_title + \" in \" + item.field_title}</span>\n        </td>\n        <td className=\"p-3 text-left text-lg italic\">\n          {item.required ? (\n            <span className=\"text-yellow-800\">Required</span>\n          ) : (\n            \"Optional\"\n          )}\n        </td>\n      </tr>\n    ));\n  };\n\n  return (\n    <div>\n      <Table\n        columns={[\n          { columnTitle: \"#\", alignText: \"left\", padding: \"p-3\" },\n          { columnTitle: \"Document\", alignText: \"left\", padding: \"p-3\" },\n          { columnTitle: \"Status\", alignText: \"left\", padding: \"p-3\" },\n          // { columnTitle: \"\", alignText: \"left\", padding: \"p-3\" },\n        ]}\n        rows={tableData}\n        pagination={false}\n        search={false}\n        thColor=\"gray\"\n      />\n    </div>\n  );\n};\n\nexport default ViewRequirements;\n","import React, { useState } from \"react\";\nimport { MdSearch } from \"react-icons/md\";\nimport { connect } from \"react-redux\";\nimport {\n  course,\n  CandidateClaimInterface,\n  claimApplicationsInterface,\n  ClaimExamResultsDetails,\n  SessionPlanInterface,\n} from \"../../../interfaces\";\nimport { StoreState } from \"../../../reducers\";\nimport { search } from \"../../../utils/functions\";\nimport { isClaimAllowed } from \"./ClaimForm\";\n\nconst getFailedExam = (\n  allData: ClaimExamResultsDetails[],\n  allCourses: course[]\n): ClaimExamResultsDetails[] => {\n  let result: ClaimExamResultsDetails[] = [];\n  allData.forEach((element) => {\n    if (element.total_marks <= 50) {\n      let data = element;\n      data.course_name = getCourseById(allCourses, element.course)\n        ? getCourseById(allCourses, element.course)!.course_name\n        : \"Unknown exam\";\n      result.push(data);\n    }\n  });\n\n  return result;\n};\n\nexport const getCourseById = (courses: course[], course_id: string) => {\n  return courses.find((item) => item.course_id === course_id);\n};\n\nexport const getCourseIdBySheetId = (\n  allData: ClaimExamResultsDetails[],\n  sheet_id: string\n) => {\n  return allData.find((item) => item.answer_sheet_id === sheet_id);\n};\n\nexport const searchApplication = (\n  objList: claimApplicationsInterface[],\n  text: any\n): claimApplicationsInterface[] => {\n  if (undefined === text || text === \"\") return objList;\n  return objList.filter((product) => {\n    let flag;\n    // let dataKeys = product;\n\n    for (let prop in product) {\n      flag = false;\n      if (prop === \"position\") {\n        flag =\n          product.position.position_title\n            .toString()\n            .toLowerCase()\n            .indexOf(text.toLowerCase()) > -1;\n      }\n      if (flag) break;\n    }\n    return flag;\n  });\n  // return objList.filter((product) =>\n  //   product.position.position_title.includes(text)\n  // );\n};\n\ntype FormExamListProps = {\n  setChooseClaimFile: (value: boolean) => void;\n  setClaimFileId: (value: string) => void;\n  setViewThisFile: (value: string) => void;\n  viewThisFile: string;\n  candidateAnswers: ClaimExamResultsDetails[];\n  myClaims: CandidateClaimInterface[];\n  activeSession: SessionPlanInterface;\n\n  // REDUX //////////////////////\n  courses: course[] | null;\n};\n\nconst FormExamList: React.FC<FormExamListProps> = (props) => {\n  const [searchInput, setSearchInput] = useState<string>(\"\");\n\n  return (\n    <section>\n      {/* SEARCH PART */}\n      <div className=\"flex items-center w-full my-1\">\n        <MdSearch className=\"w-6 h-6 absolute ml-2\" />\n        <input\n          type=\"text\"\n          placeholder=\"Search\"\n          className=\"focus:border-2 h-7 ml-1 pl-9 mr-2 bg-gray-100 focus:border-gray-700 w-full rounded\"\n          onChange={(e) => setSearchInput(e.target.value)}\n          value={searchInput}\n          disabled={\n            !props.courses ||\n            getFailedExam(props.candidateAnswers, props.courses).filter(\n              (item) =>\n                isClaimAllowed(\n                  props.myClaims,\n                  props.activeSession.session_plan_id,\n                  item.answer_sheet_id\n                )\n            ).length > 0\n              ? false\n              : true\n          }\n        />\n        <button\n          className=\"bg-red-200 text-red-700 py-1 px-2 mr-1 rounded text-sm focus:outline-none\"\n          type=\"button\"\n          onClick={() => {\n            props.setChooseClaimFile(false);\n            props.setViewThisFile(\"\");\n          }}\n        >\n          Cancel\n        </button>\n      </div>\n      {/* END SEARCH PART ///////////////// */}{\" \"}\n      {/* searchData(props.candidateAnswers, searchInput) */}\n      <div className=\"w-full h-52 mt-2 overflow-y-auto divide-y divide-gray-300\">\n        {props.courses &&\n        getFailedExam(props.candidateAnswers, props.courses).filter((item) =>\n          isClaimAllowed(\n            props.myClaims,\n            props.activeSession.session_plan_id,\n            item.answer_sheet_id\n          )\n        ).length > 0 ? (\n          search(\n            getFailedExam(props.candidateAnswers, props.courses).filter(\n              (item) =>\n                isClaimAllowed(\n                  props.myClaims,\n                  props.activeSession.session_plan_id,\n                  item.answer_sheet_id\n                )\n            ),\n            searchInput\n          ).map((item: ClaimExamResultsDetails, index: number) => (\n            <div\n              className=\"group flex items-center justify-between my-1 hover:bg-gray-100\"\n              key={index + item.answer_sheet_id}\n            >\n              <div\n                className=\"p-1 w-full mr-2 cursor-pointer\"\n                onClick={() => {\n                  props.setChooseClaimFile(false);\n                  props.setClaimFileId(item.answer_sheet_id);\n                }}\n              >\n                <p className=\"text-base font-medium text-black\">\n                  {item.course_name}\n                </p>\n              </div>\n              <button\n                type=\"button\"\n                className=\"bg-blue-200 hover:bg-blue-300 text-blue-700 group-hover:text-blue-800 py-1 px-2 mr-1 rounded text-sm\"\n                onClick={() => {\n                  props.setViewThisFile(item.answer_sheet_id);\n                }}\n              >\n                View\n              </button>\n            </div>\n          ))\n        ) : (\n          <div className=\"text-center p-3\">\n            <p className=\"text-base font-medium text-black\">\n              No failed exam available\n            </p>\n          </div>\n        )}\n      </div>\n    </section>\n  );\n};\n\nconst mapStateToProps = ({\n  course,\n}: StoreState): {\n  courses: course[] | null;\n} => {\n  return {\n    courses: course.courses,\n  };\n};\nexport default connect(mapStateToProps, {})(FormExamList);\n","import React, { useEffect, useState } from \"react\";\nimport { MdTurnedIn } from \"react-icons/md\";\nimport { connect } from \"react-redux\";\nimport { PushPopupAlert } from \"../../../actions\";\nimport { fetchUserAccess } from \"../../../actions/users\";\nimport NoResult, {\n  NoResultThemes,\n} from \"../../../components/NoResult/NoResult\";\nimport {\n  claimApplicationsInterface,\n  claimApplicationsPositionInterface,\n} from \"../../../interfaces\";\nimport { ApplicationStates } from \"../../../interfaces/application\";\nimport { StoreState } from \"../../../reducers\";\nimport { DocumentReducerInterface } from \"../../../reducers/document\";\nimport { capitalizeFirstLetter } from \"../../../shared/dataTest\";\nimport { UserInterface } from \"../../../shared/interfaces\";\nimport { DATE } from \"../../../utils/functions\";\nimport { PositionRequirementTableInterface } from \"../../Positions/ViewPosition\";\nimport ViewRequirements from \"../../Positions/ViewRequirements\";\n\nexport const FC_ApplicationPositionDistinctCategory = (\n  thisPosition: claimApplicationsPositionInterface,\n  documentCategories: DocumentReducerInterface\n): {\n  PositionsTemp: PositionRequirementTableInterface[];\n  DistinctCategoriesTemp: PositionRequirementTableInterface[];\n  DistinctSubCategoriesTemp: PositionRequirementTableInterface[];\n} => {\n  let PositionsTemp: PositionRequirementTableInterface[] = [];\n  let DistinctCategoriesTemp: PositionRequirementTableInterface[] = [],\n    DistinctCategoriesIds: string[] = [];\n  let DistinctSubCategoriesTemp: PositionRequirementTableInterface[] = [],\n    DistinctSubCategoriesIds: string[] = [];\n  // GET REQUIREMENTS OF THE CURRENT POSITION ====================\n  let requirements = thisPosition.requirements;\n  // LOOP THROUGH CURRENT POSITION REQUIREMENTS ==========================\n  for (let req in requirements) {\n    let thisRequirements = requirements[req];\n    // GET DOC CATEGORY OF THE CURRENT POSITION REQUIREMENTS ====================\n    let thisCategory = documentCategories.documentCategory\n      ? documentCategories.documentCategory.find(\n          (item) =>\n            item.user_detail_category_id ===\n            thisRequirements.user_detail_category_id\n        ) && {\n          title: documentCategories.documentCategory.find(\n            (item) =>\n              item.user_detail_category_id ===\n              thisRequirements.user_detail_category_id\n          )!.title,\n          user_detail_category_id: documentCategories.documentCategory.find(\n            (item) =>\n              item.user_detail_category_id ===\n              thisRequirements.user_detail_category_id\n          )!.user_detail_category_id,\n        }\n      : {\n          title: \"\",\n          user_detail_category_id: thisRequirements.user_detail_category_id,\n        };\n    // GET DOC SUB CATEGORY OF THE CURRENT POSITION REQUIREMENTS ====================\n    let thisSubCategory = documentCategories.documentSubCategory\n      ? documentCategories.documentSubCategory.find(\n          (item) =>\n            item.user_detail_subcategory_id ===\n            thisRequirements.user_detail_subcategory_id\n        )\n        ? {\n            title: documentCategories.documentSubCategory.find(\n              (item) =>\n                item.user_detail_subcategory_id ===\n                thisRequirements.user_detail_subcategory_id\n            )!.title,\n            user_detail_subcategory_id:\n              documentCategories.documentSubCategory.find(\n                (item) =>\n                  item.user_detail_subcategory_id ===\n                  thisRequirements.user_detail_subcategory_id\n              )!.user_detail_subcategory_id,\n            category_id: documentCategories.documentSubCategory.find(\n              (item) =>\n                item.user_detail_subcategory_id ===\n                thisRequirements.user_detail_subcategory_id\n            )!.category_id,\n          }\n        : {\n            title: \"\",\n            user_detail_subcategory_id:\n              thisRequirements.user_detail_subcategory_id,\n            category_id: \"\",\n          }\n      : {\n          title: \"\",\n          user_detail_subcategory_id:\n            thisRequirements.user_detail_subcategory_id,\n          category_id: \"\",\n        };\n    // LOOP THROUGH FIELDS OF THE CURRENT POSITION REQUIREMENTS ==========================\n    if (thisCategory) {\n      for (let field in thisRequirements.position_requirement) {\n        // GET FIELDS OF THE CURRENT POSITION REQUIREMENTS ====================\n        let thisField = documentCategories.documentFields\n          ? documentCategories.documentFields.find(\n              (item) =>\n                item._id ===\n                thisRequirements.position_requirement[field]\n                  .category_subcategory_data_id\n            )\n            ? {\n                title: documentCategories.documentFields.find(\n                  (item) =>\n                    item._id ===\n                    thisRequirements.position_requirement[field]\n                      .category_subcategory_data_id\n                )!.title,\n                _id: documentCategories.documentFields.find(\n                  (item) =>\n                    item._id ===\n                    thisRequirements.position_requirement[field]\n                      .category_subcategory_data_id\n                )!._id,\n                required: thisRequirements.position_requirement[field].required,\n              }\n            : {\n                title: \"\",\n                _id: thisRequirements.user_detail_subcategory_id,\n                required: thisRequirements.position_requirement[field].required,\n              }\n          : {\n              title: \"\",\n              _id: thisRequirements.user_detail_subcategory_id,\n              required: thisRequirements.position_requirement[field].required,\n            };\n        // ADD CURRENT CATEGORY, SUB CATEGORY & FIELDS OF THE CURRENT POSITION REQUIREMENTS IN POSITIONS TEMP ====================\n        PositionsTemp.push({\n          category_id: thisCategory.user_detail_category_id,\n          category_title: thisCategory.title,\n          subcategory_id: thisSubCategory.user_detail_subcategory_id,\n          subcategory_title: thisSubCategory.title,\n          field_title: thisField.title,\n          field_id: thisField._id,\n          required: thisField.required,\n        });\n      }\n\n      // ADD CATEOGRY OF THE CURRENT POSITION REQUIREMENTS TO ARRAY ====================\n      if (\n        !DistinctCategoriesIds.includes(thisCategory.user_detail_category_id)\n      ) {\n        DistinctCategoriesIds.push(thisCategory.user_detail_category_id);\n        DistinctCategoriesTemp.push({\n          category_id: thisCategory.user_detail_category_id,\n          category_title: thisCategory.title,\n          subcategory_id: \"\",\n          subcategory_title: \"\",\n          field_title: \"\",\n          field_id: \"\",\n          required: false,\n        });\n      }\n\n      // ADD SUB CATEOGRY OF THE CURRENT POSITION REQUIREMENTS TO ARRAY ====================\n      if (\n        !DistinctSubCategoriesIds.includes(\n          thisSubCategory.user_detail_subcategory_id\n        )\n      ) {\n        DistinctSubCategoriesIds.push(\n          thisSubCategory.user_detail_subcategory_id\n        );\n        DistinctSubCategoriesTemp.push({\n          category_id: thisSubCategory.category_id,\n          category_title: \"\",\n          subcategory_id: thisSubCategory.user_detail_subcategory_id,\n          subcategory_title: thisSubCategory.title,\n          field_title: \"\",\n          field_id: \"\",\n          required: false,\n        });\n      }\n    }\n  }\n  // DistinctCategoriesIds.;\n\n  return { PositionsTemp, DistinctCategoriesTemp, DistinctSubCategoriesTemp };\n};\n\nexport const showEvaluator = (\n  userList: UserInterface[],\n  user_id: string\n): string => {\n  let result: string = \"\";\n  if (user_id === \"system\") {\n    result = \"System\";\n  } else {\n    // let user = getUserDocuments(userList, user_id);\n    // let user = undefined;\n    // if (user) {\n    //   result = user.user.user_info.fname + \" \" + user.user.user_info.lname;\n    // }\n  }\n  return result;\n};\n\ntype ApplicationFormViewProps = {\n  thisApplication: claimApplicationsInterface;\n  setViewThisFile: (value: string) => void;\n  setChooseClaimFile: (value: boolean) => void;\n  setClaimFileId: (value: string) => void;\n  documentCategories: DocumentReducerInterface;\n  userList: UserInterface[];\n  fetchUserAccess: Function;\n  PushPopupAlert: Function;\n};\n\nconst ApplicationFormView: React.FC<ApplicationFormViewProps> = (props) => {\n  const [loadingUsers, setLoadingUsers] = useState(true);\n\n  useEffect(() => {\n    if (!props.userList.length && loadingUsers) {\n      setLoadingUsers(false);\n      props.fetchUserAccess();\n    } else if (loadingUsers) {\n      setLoadingUsers(false);\n    }\n  }, [loadingUsers, props]);\n\n  return (\n    <section className=\"\">\n      <div className=\"w-full bg-gray-100 px-4 py-1 animate__animated animate__fadeIn\">\n        <div className=\"flex flex-col mb-2\">\n          {/* APPLICATION TITLE ========== */}\n          <section className=\"flex items-center justify-between\">\n            <span className=\"text-blue-600 font-bold text-2xl\">\n              {props.thisApplication.position.position_title}\n            </span>\n            <button\n              type=\"button\"\n              className=\"btn btn-blue\"\n              onClick={() => {\n                props.setChooseClaimFile(false);\n                props.setClaimFileId(props.thisApplication.application_id);\n                props.setViewThisFile(\"\");\n              }}\n            >\n              Choose\n            </button>\n          </section>\n          <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n            <span className={`italic`}>Date:</span>\n            <span className=\"font-bold text-gray-900 py-1\">\n              {DATE(props.thisApplication.createdAt)}\n            </span>\n          </div>\n          {false && (\n            <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n              <span className={`italic`}>Session:</span>\n              <span className=\"font-bold text-gray-900 py-1\">\n                {\n                  props.thisApplication.application_session\n                    .application_session_name\n                }\n              </span>\n            </div>\n          )}\n          <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n            <span className={`italic`}>Status:</span>\n            <span\n              className={`font-bold ${\n                props.thisApplication.application_status ===\n                ApplicationStates.Rejected\n                  ? \"text-yellow-900\"\n                  : \"text-blue-600\"\n              } py-1`}\n            >\n              {capitalizeFirstLetter(props.thisApplication.application_status)}\n            </span>\n          </div>\n          <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n            <span className={`italic`}>Evaluated by:</span>\n            <span className=\"font-bold text-gray-900 py-1\">\n              {loadingUsers ? (\n                <div className=\"w-24 h-3 rounded bg-gray-200 animate__animated animate__pulse animate__delay-5s animate__infinite\"></div>\n              ) : (\n                showEvaluator(\n                  props.userList,\n                  props.thisApplication.override_by.user_id\n                )\n              )}\n            </span>\n          </div>\n          <div className=\"flex items-start gap-2 text-sm text-gray-600\">\n            <span className={`italic`}>Reason:</span>\n            <span className=\"font-semibold text-gray-900\">\n              {props.thisApplication.override_by.comment}\n            </span>\n          </div>\n        </div>\n        <div className=\"bg-white w-full rounded p-2 mb-2\">\n          <div className=\"text-gray-800 text-2xl font-bold my-2\">\n            Position Details\n          </div>\n          <div className=\"flex items-center gap-2 text-base text-gray-600\">\n            <span className={`italic`}>Desc:</span>\n            <span className=\"font-semibold\">\n              {props.thisApplication.position.description}\n            </span>\n          </div>\n          <div className=\"flex items-center gap-2 text-base text-gray-600\">\n            <span className={`italic`}>School level:</span>\n            <span className=\"font-semibold\">\n              {props.thisApplication.position.school_level_id.school_level_name}\n            </span>\n          </div>\n          <div className=\"flex items-center gap-2 text-base text-gray-600\">\n            <span className={`italic`}>Institute:</span>\n            <span className=\"font-semibold\">\n              {\n                props.thisApplication.position.education_institute_id\n                  .education_category_title\n              }\n            </span>\n          </div>\n          <div className=\"flex items-center gap-2 text-base text-gray-600\">\n            <span className={`italic`}>Courses:</span>\n            <span className=\"flex items-center gap-2\">\n              {props.thisApplication.position.courses.map((item, index) => (\n                <div\n                  key={index + item.course_id}\n                  className=\"flex items-center gap-1\"\n                >\n                  <span className=\"font-semibold\">{item.course_name}</span>\n                  <span className=\"text-gray-600\">({item.course_code})</span>\n                  {index !==\n                    props.thisApplication.position.courses.length - 1 && \",\"}\n                </div>\n              ))}\n            </span>\n          </div>\n\n          <div className=\"text-gray-800 text-2xl font-bold my-2\">\n            Position Requirements\n          </div>\n          {props.thisApplication.position.requirements.length > 0 ? (\n            FC_ApplicationPositionDistinctCategory(\n              props.thisApplication.position,\n              props.documentCategories\n            ).DistinctCategoriesTemp.map((item, index) => (\n              <div\n                className=\"bg-gray-100props.thisApplication.position rounded p-2\"\n                key={index + item.category_id}\n              >\n                <div className=\"flex items-center gap-2 text-2xl text-gray-500 font-bold\">\n                  <MdTurnedIn />\n                  <span>{item.category_title}</span>\n                </div>\n                <div className=\"border bg-white mt-1\">\n                  <ViewRequirements\n                    requirements={FC_ApplicationPositionDistinctCategory(\n                      props.thisApplication.position,\n                      props.documentCategories\n                    ).PositionsTemp.filter(\n                      (req) => req.category_id === item.category_id\n                    )}\n                  />\n                </div>\n              </div>\n            ))\n          ) : (\n            <NoResult\n              theme={NoResultThemes.Dark}\n              value={\"No requirements\"}\n            ></NoResult>\n          )}\n        </div>\n      </div>\n    </section>\n  );\n};\n\nconst mapStateToProps = ({\n  users,\n}: StoreState): {\n  userList: UserInterface[];\n} => {\n  return {\n    userList: users,\n  };\n};\n\nexport default connect(mapStateToProps, { PushPopupAlert, fetchUserAccess })(\n  ApplicationFormView\n);\n","import axios from \"axios\";\nimport React, { Component } from \"react\";\nimport { VscLoading } from \"react-icons/vsc\";\nimport { connect } from \"react-redux\";\nimport { PushPopupAlert } from \"../../actions\";\nimport { updateSessionPlan } from \"../../actions/session\";\nimport { PopupAlertData } from \"../../components/Alert/Popup\";\nimport {\n  allPlanTypes,\n  PlansInterface,\n  PlansTypeInterface,\n  PlansTypeKeys,\n  SessionPlanInterface,\n  SessionPlanTypeStatus,\n} from \"../../interfaces\";\nimport { PopupAlertTheme } from \"../../interfaces/popupAlert\";\nimport { capitalizeFirstLetter } from \"../../shared/dataTest\";\nimport { API } from \"../../utils/api\";\nimport { DATE, errorToText } from \"../../utils/functions\";\n\nexport const isActivationAllowed = (thisPlans: PlansInterface): boolean => {\n  let today: Date = new Date(),\n    end_date = new Date(thisPlans.end_date);\n  if (end_date.getTime() >= today.getTime()) {\n    return true;\n  }\n  return false;\n};\n\nexport const getPlanTypeByKey = (\n  type_key: PlansTypeKeys\n): PlansTypeInterface | undefined => {\n  return allPlanTypes.find((item) => item.type_key === type_key);\n};\n\nexport const isPlanActive = (\n  viewThisSession: SessionPlanInterface,\n  thisPlan: PlansInterface\n): \"OPEN\" | \"CLOSED\" | \"WAITING\" => {\n  if (viewThisSession.is_active) {\n    let today = new Date(),\n      planEndDate = new Date(thisPlan.end_date),\n      planStartDate = new Date(thisPlan.start_date);\n    if (\n      planEndDate.getTime() >= today.getTime() &&\n      planStartDate.getTime() <= today.getTime() &&\n      thisPlan.type_status !== SessionPlanTypeStatus.CLOSED\n    ) {\n      return \"OPEN\";\n    } else if (\n      planStartDate.getTime() > today.getTime() &&\n      thisPlan.type_status !== SessionPlanTypeStatus.CLOSED\n    ) {\n      return \"WAITING\";\n    }\n  }\n  return \"CLOSED\";\n};\n\ntype SessionDetailsProps = {\n  viewThisSession: SessionPlanInterface;\n  setViewThisSession: (data: SessionPlanInterface) => void;\n\n  // REDUX ----------------\n  updateSessionPlan: Function;\n  PushPopupAlert: (alert: PopupAlertData) => void;\n};\n\ntype SessionDetailsState = {\n  loadingRequest: string;\n};\n\nexport class SessionDetails extends Component<\n  SessionDetailsProps,\n  SessionDetailsState\n> {\n  constructor(props: SessionDetailsProps) {\n    super(props);\n\n    this.state = {\n      loadingRequest: \"\",\n    };\n  }\n\n  handlePlanActivation = async (\n    session: SessionPlanInterface,\n    thisPlan: PlansInterface\n  ) => {\n    const newState: \"open\" | \"close\" = session.is_active ? \"close\" : \"open\";\n\n    if (!window.confirm(`Are you sure you want to ${newState} this plan?`)) {\n      return true;\n    }\n\n    if (!isActivationAllowed(thisPlan)) {\n      this.props.PushPopupAlert({\n        title: `Opening/Closing plan which has been expired is not allowed!`,\n        theme: PopupAlertTheme.warning,\n      });\n    }\n\n    let newData: SessionPlanInterface = {\n      session_plan_name: session.session_plan_name,\n      period: session.period,\n      is_active: session.is_active,\n      plans: [],\n      createdAt: session.createdAt,\n      updatedAt: session.updatedAt,\n      session_plan_id: session.session_plan_id,\n    };\n    for (const key in session.plans) {\n      if (Object.prototype.hasOwnProperty.call(session.plans, key)) {\n        const element = session.plans[key];\n        if (thisPlan.type_key === element.type_key) {\n          if (thisPlan.type_status === SessionPlanTypeStatus.OPEN) {\n            newData.plans.push({\n              type_id: thisPlan.type_id,\n              type_title: thisPlan.type_title,\n              type_key: thisPlan.type_key,\n              type_status: SessionPlanTypeStatus.CLOSED,\n              start_date: thisPlan.start_date,\n              end_date: thisPlan.end_date,\n              allowed_claim_level: thisPlan.allowed_claim_level,\n              _id: thisPlan._id,\n              history: thisPlan.history,\n            });\n          } else {\n            newData.plans.push({\n              type_id: thisPlan.type_id,\n              type_title: thisPlan.type_title,\n              type_key: thisPlan.type_key,\n              type_status: SessionPlanTypeStatus.OPEN,\n              start_date: thisPlan.start_date,\n              end_date: thisPlan.end_date,\n              allowed_claim_level: thisPlan.allowed_claim_level,\n              _id: thisPlan._id,\n              history: thisPlan.history,\n            });\n          }\n        } else {\n          newData.plans.push(element);\n        }\n      }\n    }\n\n    console.log(\"====================================\");\n    console.log({ newData });\n    console.log(\"====================================\");\n\n    this.setState({ loadingRequest: thisPlan.type_key });\n    try {\n      const res = await axios.put<SessionPlanInterface>(\n        `${API.CLAIMING}/session/${session.session_plan_id}`,\n        newData\n      );\n      this.props.updateSessionPlan(res.data);\n      this.props.setViewThisSession(res.data);\n      this.props.PushPopupAlert({\n        title: `Session ${newState}d successfully`,\n        theme: PopupAlertTheme.info,\n      });\n      this.setState({ loadingRequest: \"\" });\n      console.log(\"updateSessionPlan: \", res);\n    } catch (error) {\n      console.error({ error: errorToText(error) });\n      this.props.PushPopupAlert({\n        title: errorToText(error),\n        theme: PopupAlertTheme.warning,\n      });\n    }\n  };\n\n  render() {\n    return (\n      <table className=\"w-full bg-white shadow p-5\" id=\"session_content\">\n        <thead className=\"bg-white border-b-2 border-gray-300 text-gray-600 font-bold text-sm\">\n          <tr>\n            <td className=\"p-2\">#</td>\n            <td className=\"p-2\">Plan Type</td>\n            <td className=\"p-2\">Start Date</td>\n            <td className=\"p-2\">End date</td>\n            {this.props.viewThisSession.is_active && (\n              <td className=\"p-2\" colSpan={2}>\n                Status\n              </td>\n            )}\n          </tr>\n        </thead>\n        <tbody>\n          {/* WHILE DATA FOUND ====================== */}\n          {this.props.viewThisSession.plans.map((item, index) => (\n            <tr\n              key={index + item._id}\n              className={`border-b border-gray-200 hover:bg-gray-100`}\n            >\n              <td className=\"p-2 text-left whitespace-nowrap\">{index + 1}</td>\n              <td className=\"p-2 text-left\">\n                <span className=\"text-lg\">\n                  {getPlanTypeByKey(item.type_key) &&\n                    capitalizeFirstLetter(\n                      getPlanTypeByKey(item.type_key)!.type_title\n                    )}\n                </span>\n              </td>\n              <td className=\"p-2 text-left\">{DATE(item.start_date)}</td>\n              <td className=\"p-2 text-left\">{DATE(item.end_date)}</td>\n              {this.props.viewThisSession.is_active && (\n                <td>\n                  {isPlanActive(this.props.viewThisSession, item) === \"OPEN\" ? (\n                    <span className={`px-2 py-1 font-semibold text-green-700`}>\n                      Open\n                    </span>\n                  ) : isPlanActive(this.props.viewThisSession, item) ===\n                    \"WAITING\" ? (\n                    <span className={`px-2 py-1 font-semibold text-gray-700`}>\n                      Waiting\n                    </span>\n                  ) : (\n                    <span className={`px-2 py-1 font-semibold text-red-700`}>\n                      Closed\n                    </span>\n                  )}\n                </td>\n              )}\n              {this.props.viewThisSession.is_active && (\n                <td>\n                  {isActivationAllowed(item) && (\n                    <div className=\"flex items-center justify-center gap-1\">\n                      <div\n                        className={`relative ${\n                          this.state.loadingRequest.length > 0\n                            ? \"cursor-not-allowed\"\n                            : \"cursor-pointer\"\n                        }`}\n                        title={\n                          item.type_status === SessionPlanTypeStatus.OPEN\n                            ? \"Deactivating session\"\n                            : \"Activating session\"\n                        }\n                        onClick={() =>\n                          this.state.loadingRequest.length <= 0 &&\n                          this.handlePlanActivation(\n                            this.props.viewThisSession,\n                            item\n                          )\n                        }\n                      >\n                        <span className=\"block w-14 h-8 bg-gray-100 rounded-full shadow-inner\"></span>\n                        <span\n                          className={`absolute block w-6 h-6 mt-1 ml-1 rounded-full shadow inset-y-0 left-0 focus-within:shadow-outline transition-transform duration-500 ease-in-out ${\n                            item.type_status === SessionPlanTypeStatus.CLOSED\n                              ? \"bg-red-500\"\n                              : \"bg-green-500 transform translate-x-full\"\n                          }`}\n                        ></span>\n                      </div>\n                      {this.state.loadingRequest === item.type_key && (\n                        <VscLoading className=\"animate__animated animate__rotateIn animate__infinite\" />\n                      )}\n                    </div>\n                  )}\n                </td>\n              )}\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    );\n  }\n}\n\nexport default connect(null, {\n  updateSessionPlan,\n  PushPopupAlert,\n})(SessionDetails);\n","import React, { useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { PushPopupAlert } from \"../../../actions\";\nimport { DocumentClaimUser } from \"../../../actions/claiming\";\nimport { fetchUserAccess } from \"../../../actions/users\";\nimport { StoreState } from \"../../../reducers\";\nimport { DocumentReducerInterface } from \"../../../reducers/document\";\nimport { capitalizeFirstLetter } from \"../../../shared/dataTest\";\nimport { UserInterface } from \"../../../shared/interfaces\";\nimport { API } from \"../../../utils/api\";\nimport { ClaimGetDocTitle } from \"./ClaimForm\";\n\ntype DocFormViewProps = {\n  thisDoc: DocumentClaimUser;\n  setChooseClaimFile: (value: boolean) => void;\n  setClaimFileId: (value: string) => void;\n  setViewThisFile: (value: string) => void;\n  documentCategories: DocumentReducerInterface;\n  userList: UserInterface[];\n  fetchUserAccess: Function;\n  PushPopupAlert: Function;\n};\n\nconst DocFormView: React.FC<DocFormViewProps> = (props) => {\n  const [loadingUsers, setLoadingUsers] = useState(true);\n\n  useEffect(() => {\n    if (!props.userList.length && loadingUsers) {\n      setLoadingUsers(false);\n      props.fetchUserAccess();\n    } else if (loadingUsers) {\n      setLoadingUsers(false);\n    }\n  }, [loadingUsers, props]);\n\n  return (\n    <section className=\"\">\n      <div className=\"w-full bg-gray-100 px-4 py-1 animate__animated animate__fadeIn\">\n        <div className=\"flex flex-col mb-2\">\n          <div className=\"flex items-center justify-between\">\n            <span className=\"text-blue-600 font-bold text-xl\">\n              {ClaimGetDocTitle(props.documentCategories, props.thisDoc).main}\n            </span>\n            <button\n              type=\"button\"\n              className=\"btn btn-blue\"\n              onClick={() => {\n                props.setChooseClaimFile(false);\n                props.setClaimFileId(props.thisDoc.doc_id);\n                props.setViewThisFile(\"\");\n              }}\n            >\n              Choose\n            </button>\n          </div>\n          <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n            <span className={`italic`}>Status:</span>\n            <span className=\"font-bold text-yellow-900 rounded px-3 py-1\">\n              {capitalizeFirstLetter(props.thisDoc.validation_status)}\n            </span>\n          </div>\n          <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n            <span className={`italic`}>Evaluated by:</span>\n            <span className=\"font-semibold\">\n              ################\n              {/* {loadingUsers ? (\n                <div className=\"w-24 h-3 rounded bg-gray-200 animate__animated animate__pulse animate__delay-5s animate__infinite\"></div>\n              ) : getUserDocuments(\n                  props.userList,\n                  props.thisDoc.validated_by.user_id\n                ) ? (\n                getUserDocuments(\n                  props.userList,\n                  props.thisDoc.validated_by.user_id\n                )!.user.user_info.fname +\n                \" \" +\n                getUserDocuments(\n                  props.userList,\n                  props.thisDoc.validated_by.user_id\n                )!.user.user_info.lname\n              ) : (\n                \"-\"\n              )} */}\n            </span>\n          </div>\n          <div className=\"flex items-start gap-2 text-sm text-gray-600\">\n            <span className={`italic`}>Reason:</span>\n            <span className=\"font-normal\">\n              {props.thisDoc.validated_by.comment}\n            </span>\n          </div>\n          <div className=\"w-full my-1\">\n            <img\n              src={`${API.AUTH_FILES}/${props.thisDoc.files}`}\n              alt=\"doc file\"\n              className={`w-full`}\n            />\n          </div>\n        </div>\n      </div>\n    </section>\n  );\n};\n\nconst mapStateToProps = ({\n  users,\n}: StoreState): {\n  userList: UserInterface[];\n} => {\n  return {\n    userList: users,\n  };\n};\n\nexport default connect(mapStateToProps, { PushPopupAlert, fetchUserAccess })(\n  DocFormView\n);\n","import React, { useState } from \"react\";\nimport { MdSearch } from \"react-icons/md\";\nimport {\n  CandidateClaimInterface,\n  claimApplicationsInterface,\n  SessionPlanInterface,\n} from \"../../../interfaces\";\nimport { ApplicationStates } from \"../../../interfaces/application\";\nimport { isClaimAllowed } from \"./ClaimForm\";\n\nconst getRejectedApplicants = (\n  applicationData: claimApplicationsInterface[]\n): claimApplicationsInterface[] => {\n  return applicationData.filter(\n    (item) => item.application_status === ApplicationStates.Rejected\n  );\n};\n\nexport const searchApplication = (\n  objList: claimApplicationsInterface[],\n  text: any\n): claimApplicationsInterface[] => {\n  if (undefined === text || text === \"\") return objList;\n  return objList.filter((product) => {\n    let flag;\n    // let dataKeys = product;\n\n    for (let prop in product) {\n      flag = false;\n      if (prop === \"position\") {\n        flag =\n          product.position.position_title\n            .toString()\n            .toLowerCase()\n            .indexOf(text.toLowerCase()) > -1;\n      }\n      if (flag) break;\n    }\n    return flag;\n  });\n  // return objList.filter((product) =>\n  //   product.position.position_title.includes(text)\n  // );\n};\n\ntype FormApplicationListProps = {\n  setChooseClaimFile: (value: boolean) => void;\n  setClaimFileId: (value: string) => void;\n  setViewThisFile: (value: string) => void;\n  viewThisFile: string;\n  candidateApplications: claimApplicationsInterface[];\n  myClaims: CandidateClaimInterface[];\n  activeSession: SessionPlanInterface;\n};\n\nconst FormApplicationList: React.FC<FormApplicationListProps> = (props) => {\n  const [searchInput, setSearchInput] = useState<string>(\"\");\n  return (\n    <section>\n      {/* SEARCH PART */}\n      <div className=\"flex items-center w-full my-1\">\n        <MdSearch className=\"w-6 h-6 absolute ml-2\" />\n        <input\n          type=\"text\"\n          placeholder=\"Search\"\n          className=\"focus:border-2 h-7 ml-1 pl-9 mr-2 bg-gray-100 focus:border-gray-700 w-full rounded\"\n          onChange={(e) => setSearchInput(e.target.value)}\n          value={searchInput}\n          disabled={\n            getRejectedApplicants(props.candidateApplications).filter((item) =>\n              isClaimAllowed(\n                props.myClaims,\n                props.activeSession.session_plan_id,\n                item.application_id\n              )\n            ).length > 0\n              ? false\n              : true\n          }\n        />\n        <button\n          className=\"bg-red-200 text-red-700 py-1 px-2 mr-1 rounded text-sm focus:outline-none\"\n          type=\"button\"\n          onClick={() => {\n            props.setChooseClaimFile(false);\n            props.setViewThisFile(\"\");\n          }}\n        >\n          Cancel\n        </button>\n      </div>\n      {/* END SEARCH PART ///////////////// */}{\" \"}\n      {/* searchData(props.candidateApplications, searchInput) */}\n      <div className=\"w-full h-52 mt-2 overflow-y-auto divide-y divide-gray-300\">\n        {getRejectedApplicants(props.candidateApplications).filter((item) =>\n          isClaimAllowed(\n            props.myClaims,\n            props.activeSession.session_plan_id,\n            item.application_id\n          )\n        ).length > 0 ? (\n          searchApplication(\n            getRejectedApplicants(props.candidateApplications).filter((item) =>\n              isClaimAllowed(\n                props.myClaims,\n                props.activeSession.session_plan_id,\n                item.application_id\n              )\n            ),\n            searchInput\n          ).map((item, index) => (\n            <div\n              className=\"group flex items-center justify-between my-1 hover:bg-gray-100\"\n              key={index + item.application_id}\n            >\n              <div\n                className=\"p-1 w-full mr-2 cursor-pointer\"\n                onClick={() => {\n                  props.setChooseClaimFile(false);\n                  props.setClaimFileId(item.application_id);\n                }}\n              >\n                <p className=\"text-base font-medium text-black\">\n                  {item.position.position_title}\n                </p>\n              </div>\n              <button\n                type=\"button\"\n                className=\"bg-blue-200 hover:bg-blue-300 text-blue-700 group-hover:text-blue-800 py-1 px-2 mr-1 rounded text-sm\"\n                onClick={() => {\n                  props.setViewThisFile(item.application_id);\n                }}\n              >\n                View\n              </button>\n            </div>\n          ))\n        ) : (\n          <div className=\"text-center p-3\">\n            <p className=\"text-base font-medium text-black\">\n              No Rejected document available\n            </p>\n          </div>\n        )}\n      </div>\n    </section>\n  );\n};\n\nexport default FormApplicationList;\n","import React, { useState } from \"react\";\nimport { MdSearch } from \"react-icons/md\";\nimport { DocumentReducerInterface } from \"../../../reducers/document\";\nimport { ClaimGetDocTitle, isClaimAllowed } from \"./ClaimForm\";\nimport { DocumentClaimUser } from \"../../../actions/claiming\";\nimport { CategorySubcategoryData } from \"../../../interfaces/candidatesInterfaces\";\nimport {\n  CandidateClaimInterface,\n  SessionPlanInterface,\n} from \"../../../interfaces\";\n\nexport interface DocumentTitleInterface {\n  category_id: string;\n  company: string;\n  description: string;\n  email: string;\n  end_year: string;\n  files: string;\n  names: string;\n  phone_number: string;\n  school: {\n    school_name: string;\n    _id: string;\n    status: boolean;\n    education_category_id?: {\n      education_category_title: string;\n      _id: string;\n    };\n    district_id?: {\n      district_name: string;\n      _id: string;\n    };\n  } | null;\n  school_id: string;\n  start_year: string;\n  sub_category_id: string;\n  title: string;\n  year: string;\n  validation_status: string;\n  validated_by: {\n    user_id: string;\n    comment: string;\n    validation_status: string;\n    date: string;\n  };\n  doc_id: string;\n  doc_title: string;\n  category_subcategory_data: CategorySubcategoryData | null;\n}\n\nexport const DocumentTitleData = (\n  documentData: DocumentClaimUser[],\n  documentCategories: DocumentReducerInterface\n): DocumentTitleInterface[] | [] => {\n  let documentTemp: DocumentTitleInterface[] = [];\n  for (let i in documentData) {\n    documentTemp.push({\n      category_id: documentData[i].category_id,\n      company: documentData[i].company,\n      description: documentData[i].description,\n      email: documentData[i].email,\n      end_year: documentData[i].end_year,\n      files: documentData[i].files,\n      names: documentData[i].names,\n      phone_number: documentData[i].phone_number,\n      school: documentData[i].school,\n      school_id: documentData[i].school_id,\n      start_year: documentData[i].start_year,\n      sub_category_id: documentData[i].sub_category_id,\n      title: documentData[i].title,\n      year: documentData[i].year,\n      validation_status: documentData[i].validation_status,\n      validated_by: documentData[i].validated_by,\n      doc_id: documentData[i].doc_id,\n      doc_title: ClaimGetDocTitle(documentCategories, documentData[i]).main,\n      category_subcategory_data: documentData[i].category_subcategory_data,\n    });\n  }\n  return documentTemp;\n};\n\nconst getRejectedDocuments = (\n  documentData: DocumentClaimUser[]\n): DocumentClaimUser[] => {\n  console.log({\n    rejected: documentData.filter(\n      (item) => item.validation_status === \"rejected\"\n    ),\n  });\n  return documentData.filter((item) => item.validation_status === \"rejected\");\n};\n\nexport const searchDocuments = (\n  objList: DocumentTitleInterface[],\n  text: any\n): DocumentTitleInterface[] => {\n  if (undefined === text || text === \"\") return objList;\n  return objList.filter(\n    (product) =>\n      product.doc_title.toString().toLowerCase().indexOf(text.toLowerCase()) >\n      -1\n  );\n};\n\ntype FormDocumentListProps = {\n  setChooseClaimFile: (value: boolean) => void;\n  setClaimFileId: (value: string) => void;\n  setViewThisFile: (value: string) => void;\n  viewThisFile: string;\n  candidateDocuments: DocumentClaimUser[];\n  documentCategories: DocumentReducerInterface;\n  myClaims: CandidateClaimInterface[];\n  activeSession: SessionPlanInterface;\n};\n\nconst FormDocumentList: React.FC<FormDocumentListProps> = (props) => {\n  const [searchInput, setSearchInput] = useState<string>(\"\");\n  return (\n    <section>\n      {/* SEARCH PART */}\n      <div className=\"flex items-center w-full my-1\">\n        <MdSearch className=\"w-6 h-6 absolute ml-2\" />\n        <input\n          type=\"text\"\n          placeholder=\"Search\"\n          className=\"focus:border-2 h-7 ml-1 pl-9 mr-2 bg-gray-100 focus:border-gray-700 w-full rounded\"\n          onChange={(e) => setSearchInput(e.target.value)}\n          value={searchInput}\n          disabled={\n            DocumentTitleData(\n              getRejectedDocuments(props.candidateDocuments),\n              props.documentCategories\n            ).filter((item) =>\n              isClaimAllowed(\n                props.myClaims,\n                props.activeSession.session_plan_id,\n                item.doc_id\n              )\n            ).length > 0\n              ? false\n              : true\n          }\n        />\n        <button\n          className=\"bg-red-200 text-red-700 py-1 px-2 mr-1 rounded text-sm focus:outline-none\"\n          type=\"button\"\n          onClick={() => {\n            props.setChooseClaimFile(false);\n            props.setViewThisFile(\"\");\n          }}\n        >\n          Cancel\n        </button>\n      </div>\n      {/* END SEARCH PART ///////////////// */}\n      <div className=\"w-full h-52 mt-2 overflow-y-auto divide-y divide-gray-300\">\n        {props.candidateDocuments.filter((item) =>\n          isClaimAllowed(\n            props.myClaims,\n            props.activeSession.session_plan_id,\n            item.doc_id\n          )\n        ).length > 0 ? (\n          searchDocuments(\n            DocumentTitleData(\n              getRejectedDocuments(props.candidateDocuments),\n              props.documentCategories\n            ).filter((item) =>\n              isClaimAllowed(\n                props.myClaims,\n                props.activeSession.session_plan_id,\n                item.doc_id\n              )\n            ),\n            searchInput\n          ).map((doc, index) => (\n            <section key={index + doc.doc_id}>\n              <div className=\"group flex items-center justify-between my-1 hover:bg-gray-100\">\n                <div\n                  className=\"p-1 w-full mr-2 cursor-pointer\"\n                  onClick={() => {\n                    props.setChooseClaimFile(false);\n                    props.setClaimFileId(doc.doc_id);\n                  }}\n                >\n                  <p className=\"text-base font-medium text-black\">\n                    {ClaimGetDocTitle(props.documentCategories, doc).main}\n                  </p>\n                </div>\n                <button\n                  type=\"button\"\n                  className=\"bg-blue-200 hover:bg-blue-300 text-blue-700 group-hover:text-blue-800 py-1 px-2 mr-1 rounded text-sm\"\n                  onClick={() => {\n                    props.viewThisFile === doc.doc_id\n                      ? props.setViewThisFile(\"\")\n                      : props.setViewThisFile(doc.doc_id);\n                  }}\n                >\n                  {props.viewThisFile === doc.doc_id ? \"Close\" : \"View\"}\n                </button>\n              </div>\n            </section>\n          ))\n        ) : (\n          <div className=\"text-center p-3\">\n            <p className=\"text-base font-medium text-black\">\n              No Rejected document available\n            </p>\n          </div>\n        )}\n      </div>\n    </section>\n  );\n};\n\nexport default FormDocumentList;\n"],"sourceRoot":""}
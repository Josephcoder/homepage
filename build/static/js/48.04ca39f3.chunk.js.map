{"version":3,"sources":["utils/question_bank.ts","components/AnswersDetails/CandidateAnswersDetails.tsx","components/ClaimForm/ClaimFormComponent.tsx","containers/CandidateExams/CandidateExams.tsx","containers/ApplicationsDashboard/ApplicationHistory/ApplicationHistory.tsx","containers/ApplicationsDashboard/ExamDetails/ExamDetails.tsx","containers/ApplicationsDashboard/ExamStatus/PreparedExams.tsx","containers/ApplicationsDashboard/ExamStatus/ActiveExams.tsx","containers/ApplicationsDashboard/ExamStatus/ExamsDone.tsx","containers/ApplicationsDashboard/Exams.tsx","components/CandidatePlacementCheck/CandidatePlacementCheck.tsx","containers/ApplicationsDashboard/ApplicationsDashboard.tsx","containers/UserDashboard/UserDashboard.tsx"],"names":["ExamTimeStatus","today","moment","tz","TimeZone","getQuestionType","question_types","type_id","type","check","find","itm","id","undefined","check_type","questionTypeElements","key","element","findTotalMarks","courses","results","sum","course","test","course_id","total_marks","toFixed","CheckIfExamDone","res","validateCalculatedFormula","formula","characters","length","status","msg","el","filter","nextCharacter","i","convertFromStringToDate","responseDate","dateComponents","split","datePieces","timePieces","Date","parseInt","validateExamDate","exam_date","start_time","end_time","Expired","toDay","toString","examDate","startTime","getDate","getMonth","getFullYear","endTime","Waiting","getTime","Online","InitializeExamsDone","selected_period","selectedPosition","candidateExam","loadExamsDone","user_id","setLoadingExamsDone","selectedExams","InitializeExamDetails","setLoadingExams","session_plan_id","user_exams_temp","center_id","district_id","room_id","position_id","proctoringDefaultRules","rule","caption","CandidateAnswersDetails","props","compareWithToday","exam_id","className","DATE","showAnswers","ClaimFormComponent","isDocumentIdValid","documents","doc_id","doc","item","validated_by","validation_status","alert","PopupAlertTheme","info","claiming","myClaims","state","activeSession","isClaimAllowed","success","warning","isApplicationIdValid","applications","app_id","app","application_id","console","log","application_status","ApplicationStates","Rejected","setLoading","setState","loading","setLoadingForm","loadingForm","setFormError","data","formError","setAlertError","alertError","setClaimFileId","claimFileId","setViewThisFile","viewThisFile","setChooseClaimFile","chooseClaimFile","setClaimComment","claimComment","isClaimTypeOpen","thisSession","thisType","PlansTypeKeys","APPLICATION","plans","type_key","isPlanActive","DOCUMENT_VALIDATION","PLACEMENT_TRANSFER","isClaimBtnValid","file_id","claim_type","PushPopupAlert","title","theme","setFormState","thisClaimType","thisClaimTypeId","formType","displayClaimType","claimType","result","EXAMINATION","MARKS_PUBLICATION","isClaimsAllowed","thisPeriod","getMyClaims","auth","user","danger","claim","claiming_on_id","period_id","found_claim","componentDidMount","sessionPlan","activeSessionPlan","getActiveSessionPlan","_isClaimsAllowed","documentReducer","documentCategory","getDocumentCategory","documentSubCategory","getDocumentSubCategory","documentFields","getDocumentFields","candidateApplications","getMyRejectedApplications","_isApplicationIdValid","candidateDocuments","getMyRejectedDocuments","_isDocumentIdValid","getDocumentById","getApplicationById","getValidation","thisId","old_reason","old_status","old_evaluated_by","comment","override_by","cleanToClose","handleSubmit","e","a","preventDefault","isEmptyOrSpaces","toLocaleLowerCase","setAxiosToken","axios","post","API","CLAIMING","reason","createClaim","error","errorToText","selectClaimType","thisClaim","generateChooseFileTitle","this","claims","map","date_created","evaluation_comment","decision_taken_status","onSubmit","onClick","onChange","target","value","disabled","Object","values","index","capitalizeFirstLetter","replace","ClaimGetDocTitle","main","position","position_title","documentCategories","placeholder","style","resize","rows","thisDoc","thisApplication","Component","connect","document","GetClaimingTypes","tooday","date","myDate","todayConverted","get","ChangeLocationComponent","useState","display","setDisplay","changeLocation","_CandidateExams","setloadingExamsDone","loadingExamsDone","loadCandidateExams","period","QBank","candidateExams","loadUserProfileDetails","FC_GetProfileDetails","InitializationFn","application","user_exams_done","application_session","exams","loadUserApplications","candidate_applications","AddUserApplication","findLocation","updateLocation","selectedCourse","centersModal","maxExamModal","successMessage","updateLocationFunction","addLocation","course_name","course_code","location","proctoring_type","loadApplicationPeriods","sex","removeDuplicatesExams","temp","_id","removeDuplicatesNotPreparedExams","setTimeOut","temps","activeExams","selectApplication","setMaxExamModal","closeModal","selectedExam","FC_Access","UserAccessList","MY_APPLICATION","view","selected_exam_id","to","preparedExam","user_status","center_name","room_number","description","school_levels","UserExamStatus","Editing","Paused","Shortlisted","setSelectedPosition","setSelectedCourse","setSelectedCandidateExam","Done","Removed","user_marks","discription","termes","rules","found","duration_min","getMinutesFromTwoDates","timeout","returnString","labels","days","notPreparedExam","positionCourses","backDrop","Themes","default","close","backDropClose","widthSizeClass","ModalSize","extraLarge","displayClose","padding","CandidateExams","periods","LoadCandidateApplications","ApplicationHistory","applicationHistory","ApplicationStatesDescription","ExamDetails","locationsData","Locations_list","loadAllLocationsData","examDetails","locationDetails","Loading","LoadingType","dark","duration","dangerouslySetInnerHTML","__html","province_name","district_name","PreparedExams","NotPreparedExamsFilter","ex","findExam","PreparedExamsFilter","AllPendingExams","totalPending","loadingExams","selectedApplicationDetails","appointmentDetailsModal","is_active","positions","selected_position","Initiated","ActiveExams","ActiveExamsFilter","exam_start_time","exam_end_time","x","ExamsDone","viewMarksDetailsFn","Exam","examTest","courseSelected","viewMarksDetails","ExamsDoneFilter","_PostExams","renderExam","exam","examStatus","loadExam","redirect","setClaim","selected_application","numberOfIncomplete","count","courseId","current_temp","testDone","findCourse","pendingCourses","loadCourses","doExam","exam_answers","displayResults","selectedLocation","applicationHistoryState","selectedExamDetails","applicationPeriods","setSelectedLocationData","ChooseExamCenter","deleteApplication","PostExams","prepareExam","loadExamsList","setSelectedPeriod","CandidatePlacementCheck","_ApplicationsDashboard","filteredApplications","Status","searchPeriod","appl","closeApplicationDetails","displayDetailsModal","setDisplayDetailsModal","applicationStatuses","output","push","LoadApplications","loadingErr","number_of_incomplete","response","Incomplete","incrementIncomplete","applicationError","noRoomsApplication","errors","field","newArr","removeLocation","message","changeLoadingState","window","confirm","delete","RemoveUserApplication","setShowFilterStatus","showPeriodFilter","loadAllPositions","apply","currentStep","ApplicationStepsTypes","Step3","initiateApplication","Step1","doTestStatus","applicationDetails","selectedApplicationStatus","viewSchools","session_plan_name","Pass","checkApplication","SelectUserApplication","Exams","changeLocationError","application_history","SideNavigation","positions_list","active","LoadingV2","NoResult","NoResultThemes","Dark","component","createdAt","Modal","body","ApplicationPeriods","ApplicationsDashboard","system","UserDashboard"],"mappings":"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","file":"static/js/48.04ca39f3.chunk.js","sourcesContent":["import { candidateExamStoreInterface } from \"../actions/candidate_exam\";\nimport {\n  applicationExamAPI,\n  ApplicationPeriodGet,\n} from \"../interfaces/application\";\nimport { ExamAnswerSheetDone } from \"../interfaces/exam\";\nimport { PositionAPI, PositionAPICourse } from \"../interfaces/position\";\nimport {\n  questionType,\n  questionTypeElements,\n  questionTypeElementsType,\n} from \"../interfaces/question\";\nimport moment from \"moment-timezone\";\nimport { TimeZone } from \"./app.config\";\n\nconst today = moment().tz(TimeZone);\n\nexport const getQuestionType = (\n  question_types: questionType[] | null,\n  type_id: string\n) => {\n  let type: questionTypeElementsType | null = null;\n  if (question_types !== null) {\n    let check = question_types.find((itm) => itm.id === type_id);\n    if (check !== undefined) {\n      let check_type = questionTypeElements.find(\n        (itm) => check && itm.key === check.element\n      );\n      if (check_type !== undefined) {\n        type = check_type.key;\n      }\n    }\n  }\n  return type;\n};\n\nexport const findTotalMarks = (\n  courses: PositionAPICourse[],\n  results: ExamAnswerSheetDone[] | null\n) => {\n  if (results !== null) {\n    let sum: number = 0;\n    for (let course of courses) {\n      let test = results.find((itm) => itm.course === course.course_id);\n      if (test !== undefined) {\n        sum = sum + test.total_marks;\n      }\n    }\n    return sum.toFixed(2);\n  } else {\n    return \"Wait...\";\n  }\n};\n\nexport const CheckIfExamDone = (\n  courses: PositionAPICourse[],\n  results: ExamAnswerSheetDone[] | null\n) => {\n  let res: boolean = false;\n  if (results !== null) {\n    for (let course of courses) {\n      let test = results.find((itm) => itm.course === course.course_id);\n      if (test !== undefined) {\n        res = true;\n      }\n    }\n  }\n  return res;\n};\n\nexport const validateCalculatedFormula = (\n  formula: string\n): { status: boolean; msg: string } => {\n  let characters: string[] = [];\n  if (\n    formula === undefined ||\n    formula === \"\" ||\n    formula.length === undefined ||\n    formula.length === 0\n  ) {\n    return {\n      status: false,\n      msg: `Please type a formula`,\n    };\n  }\n  if (formula.length < 3) {\n    return {\n      status: false,\n      msg: `The formula in not valid, it is not complete!`,\n    };\n  }\n  for (let el of formula) {\n    characters = [...characters, el];\n  }\n  if (characters[0] !== `\"`) {\n    return {\n      status: false,\n      msg: `Formula should start with (\") character`,\n    };\n  }\n  if (characters.filter((itm) => itm === `\"`).length < 2) {\n    return {\n      status: false,\n      msg: `Formula is missing closing (\") character`,\n    };\n  }\n  if (characters.filter((itm) => itm === `\"`).length > 2) {\n    return {\n      status: false,\n      msg: `Formula is invalid, because it has many (\") characters (${\n        characters.filter((itm) => itm === `\"`).length\n      })`,\n    };\n  }\n  if (\n    characters[characters.length - 1] !== `\"` &&\n    characters.filter((itm) => itm === `\"`).length === 2\n  ) {\n    let nextCharacter: string = \"\";\n    for (let i = 0; i < characters.length; i++) {\n      if (characters[i] === `\"` && i !== 0) {\n        nextCharacter = characters[i + 1];\n      }\n    }\n    if (nextCharacter !== `;`) {\n      return {\n        status: false,\n        msg: `Formula is missing separation character (;) between formula and error`,\n      };\n    }\n    if (characters[characters.length - 1] === `;`) {\n      return {\n        status: false,\n        msg: `Formula is missing error after (;) character`,\n      };\n    }\n  }\n  return {\n    status: true,\n    msg: `Formula is valid`,\n  };\n};\n\nexport function convertFromStringToDate(responseDate: string) {\n  let dateComponents = responseDate.split(\"T\");\n  let datePieces = dateComponents[0].split(\"-\");\n  let timePieces = dateComponents[1].split(\":\");\n  return new Date(\n    parseInt(datePieces[2]),\n    parseInt(datePieces[1]) - 1,\n    parseInt(datePieces[0]),\n    parseInt(timePieces[0]),\n    parseInt(timePieces[1]),\n    parseInt(timePieces[2])\n  );\n}\n\nexport enum ExamTimeStatus {\n  Waiting = \"Waiting\",\n  Online = \"Online\",\n  Expired = \"Expired\",\n}\n\nexport const validateExamDate = (\n  exam_date: string,\n  start_time: string,\n  end_time: string\n) => {\n  let status: ExamTimeStatus = ExamTimeStatus.Expired;\n  // Dates\n  const toDay: Date = new Date(today.toString());\n  const examDate = new Date(exam_date);\n\n  // Time\n  const startTime = convertFromStringToDate(\n    examDate.getDate() +\n      \"-\" +\n      (examDate.getMonth() + 1) +\n      \"-\" +\n      examDate.getFullYear() +\n      \"T\" +\n      start_time +\n      \":0\"\n  );\n  const endTime = convertFromStringToDate(\n    examDate.getDate() +\n      \"-\" +\n      (examDate.getMonth() + 1) +\n      \"-\" +\n      examDate.getFullYear() +\n      \"T\" +\n      end_time +\n      \":0\"\n  );\n\n  // check exam date\n  if (\n    examDate.getDate() > toDay.getDate() ||\n    examDate.getMonth() > toDay.getMonth() ||\n    examDate.getFullYear() > toDay.getFullYear()\n  ) {\n    status = ExamTimeStatus.Waiting;\n  }\n\n  if (\n    examDate.getDate() < toDay.getDate() ||\n    examDate.getMonth() < toDay.getMonth() ||\n    examDate.getFullYear() < toDay.getFullYear()\n  ) {\n    status = ExamTimeStatus.Expired;\n  }\n\n  if (\n    examDate.getDate() === toDay.getDate() &&\n    examDate.getMonth() === toDay.getMonth() &&\n    examDate.getFullYear() === toDay.getFullYear()\n  ) {\n    if (startTime.getTime() > toDay.getTime()) {\n      status = ExamTimeStatus.Waiting;\n    } else if (\n      startTime.getTime() <= toDay.getTime() &&\n      endTime.getTime() >= toDay.getTime()\n    ) {\n      status = ExamTimeStatus.Online;\n    } else {\n      status = ExamTimeStatus.Expired;\n    }\n  }\n  // console.log(\n  //   \"Dates comparison: \" + examDate.getDate() + \"=>\" + toDay.getDate()\n  // );\n  // console.log(\"Exam Status: \", status);\n  return status;\n};\n\nexport const InitializeExamsDone = (\n  selected_period: ApplicationPeriodGet | null,\n  selectedPosition: PositionAPI | null,\n  candidateExam: candidateExamStoreInterface,\n  loadExamsDone: (\n    periodId: string,\n    userId: string,\n    callback: (loading: boolean) => void\n  ) => void,\n  user_id: string,\n  setLoadingExamsDone: (status: boolean) => void,\n  selectedExams: applicationExamAPI[] | null,\n  InitializeExamDetails: (\n    periodId: string,\n    courseId: string,\n    district_id: string,\n    center_id: string,\n    room_id: string,\n    position_id: string,\n    callback: (loading: boolean) => void\n  ) => void,\n  setLoadingExams: (status: boolean) => void\n) => {\n  if (selected_period !== null && selectedPosition !== null) {\n    loadExamsDone(\n      selected_period.session_plan_id,\n      user_id,\n      setLoadingExamsDone\n    );\n    for (let course of selectedPosition.courses) {\n      let testDone = candidateExam.user_exams_temp.find(\n        (itm) => itm.course === course.course_id\n      );\n      if (testDone === undefined) {\n        let center_id = selectedExams?.find(\n          (itm) => itm.course_id === course.course_id\n        );\n        if (center_id !== undefined) {\n          InitializeExamDetails(\n            selected_period.session_plan_id,\n            course.course_id,\n            center_id.district_id,\n            center_id.center_id,\n            center_id.room_id,\n            selectedPosition.position_id,\n            setLoadingExams\n          );\n        }\n      }\n    }\n  }\n};\n\nexport const getActiveExam = (\n  candidateExam: candidateExamStoreInterface\n): ExamAnswerSheetDone | null => {\n  if (candidateExam.user_exams_done.length > 0) {\n    for (let exam of candidateExam.user_exams_done) {\n      if (\n        validateExamDate(\n          exam.exam_date,\n          exam.exam_start_time,\n          exam.exam_end_time\n        ) === ExamTimeStatus.Online\n      ) {\n        return exam;\n      }\n    }\n  }\n  return null;\n};\n\nexport const proctoringDefaultRules: {\n  rule: string;\n  status: boolean;\n  caption: string;\n}[] = [\n  {\n    rule: \"right_click_enabled\",\n    status: false,\n    caption: \"Enable right click\",\n  },\n  {\n    rule: \"copy_enabled\",\n    status: false,\n    caption: \"Enable copy\",\n  },\n  {\n    rule: \"paste_enabled\",\n    status: false,\n    caption: \"Enable paste\",\n  },\n  {\n    rule: \"stop_candidate_when_comeback\",\n    status: false,\n    caption: \"Enable Candidate when coming back\",\n  },\n  {\n    rule: \"allow_to_leave_browser\",\n    status: false,\n    caption: \"Enable to leave browser\",\n  },\n];\n","import moment from \"moment\";\nimport React from \"react\";\nimport {\n  compareWithToday,\n  ExamDoneDetailsAnswers,\n} from \"../../containers/CandidateExams/CandidateExams\";\nimport { TimeZone } from \"../../utils/app.config\";\nimport { DATE } from \"../../utils/functions\";\nimport { AnswersDetails } from \"./AnswersDetails\";\n\ninterface CandidateAnswersDetailsProps {\n  exam_id: ExamDoneDetailsAnswers;\n  showAnswers: boolean;\n}\n\nconst CandidateAnswersDetails = (props: CandidateAnswersDetailsProps) => {\n  const today = moment().tz(TimeZone);\n  return (\n    <div>\n      {/* Check if period is open for claims */}\n      {compareWithToday(today, props.exam_id.exam_date) === false ? (\n        <div className=\"bg-yellow-100 text-yellow-800 font-extrabold text-center flex flex-col items-center justify-center text-lg px-2 py-6\">\n          <div className=\"mb-5 text-3xl\">\n            Please wait, the exam details will be visible soon!\n          </div>\n          <div className=\"text-gray-600\">Please come after this date: </div>\n          <div className=\"bg-white rounded-full px-3 py-1 text-gray-700\">\n            {DATE(new Date(props.exam_id.exam_date).toString())}\n          </div>\n        </div>\n      ) : (\n        <AnswersDetails exam_id={props.exam_id} showAnswers={true} />\n      )}\n    </div>\n  );\n};\n\nexport default CandidateAnswersDetails;\n","import axios from \"axios\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Auth, PushPopupAlert } from \"../../actions\";\nimport {\n  createClaim,\n  DocumentClaimUser,\n  GetClaimingTypes,\n  getMyClaims,\n  getMyRejectedApplications,\n  getMyRejectedDocuments,\n} from \"../../actions/claiming\";\nimport {\n  getDocumentCategory,\n  getDocumentSubCategory,\n  getDocumentFields,\n} from \"../../actions/document\";\nimport { getActiveSessionPlan } from \"../../actions/session\";\nimport { PopupAlertData } from \"../Alert/Popup\";\nimport ApplicationFormView from \"../../containers/Claimings/Candidate/ApplicationFormView\";\nimport {\n  isClaimAllowed,\n  ClaimGetDocTitle,\n} from \"../../containers/Claimings/Candidate/ClaimForm\";\nimport DocFormView from \"../../containers/Claimings/Candidate/DocFormView\";\nimport FormApplicationList from \"../../containers/Claimings/Candidate/FormApplicationList\";\nimport FormDocumentList from \"../../containers/Claimings/Candidate/FormDocumentList\";\nimport { isPlanActive } from \"../../containers/SessionSettings/SessionDetails\";\nimport {\n  PlansTypeKeys,\n  SessionPlanInterface,\n  claimApplicationsInterface,\n  PlansInterface,\n  CandidateClaimInterface,\n} from \"../../interfaces\";\nimport { ApplicationStates } from \"../../interfaces/application\";\nimport { PopupAlertTheme } from \"../../interfaces/popupAlert\";\nimport { StoreState } from \"../../reducers\";\nimport { ClaimingReducerType } from \"../../reducers/claiming\";\nimport { DocumentReducerInterface } from \"../../reducers/document\";\nimport { SessionPlanReducerInterface } from \"../../reducers/session\";\nimport { isEmptyOrSpaces, capitalizeFirstLetter } from \"../../shared/dataTest\";\nimport { API } from \"../../utils/api\";\nimport { setAxiosToken } from \"../../utils/AxiosToken\";\nimport { errorToText } from \"../../utils/errors\";\n\ntype ClaimFormProps = {\n  // FOR SHORTCUT BUTTONS CALL\n  // REQUIRED PROPS\n  claim_type: PlansTypeKeys;\n  file_id: string;\n  setFormState: (value: boolean, response?: boolean) => void;\n  auth: Auth;\n  sessionPlan: SessionPlanReducerInterface;\n  claiming: ClaimingReducerType;\n  documentReducer: DocumentReducerInterface;\n  getActiveSessionPlan: Function;\n  createClaim: Function;\n  GetClaimingTypes: Function;\n  getDocumentCategory: Function;\n  getDocumentSubCategory: Function;\n  getDocumentFields: Function;\n  getMyRejectedApplications: Function;\n  getMyRejectedDocuments: Function;\n  getMyClaims: Function;\n  PushPopupAlert: (alert: PopupAlertData) => void;\n};\n\ntype ClaimFormState = {\n  loading: boolean;\n  loadingForm: boolean;\n  formError: {\n    element: string;\n    msg: string;\n  } | null;\n  thisClaimType: PlansTypeKeys | null;\n  thisClaimTypeId: string;\n  claimComment: string;\n  claimFileId: string;\n  chooseClaimFile: boolean;\n  viewThisFile: string;\n  formType: \"DEFAULT\" | \"PROPS\";\n  alertError: string | null;\n  activeSession: SessionPlanInterface | null;\n  found_claim: CandidateClaimInterface | null;\n};\n\nclass ClaimFormComponent extends Component<ClaimFormProps, ClaimFormState> {\n  constructor(props: ClaimFormProps) {\n    super(props);\n\n    this.state = {\n      loading: true,\n      loadingForm: false,\n      formError: null,\n      thisClaimType: null,\n      thisClaimTypeId: \"\",\n      claimComment: \"\",\n      claimFileId: \"\",\n      chooseClaimFile: false,\n      viewThisFile: \"\",\n      formType: \"DEFAULT\",\n      alertError: null,\n      activeSession: null,\n      found_claim: null,\n    };\n  }\n\n  isDocumentIdValid = (\n    documents: DocumentClaimUser[],\n    doc_id: string\n  ): {\n    status: boolean;\n    msg: string;\n    alert: PopupAlertTheme;\n  } => {\n    let doc = documents.find((item) => item.doc_id === doc_id);\n    if (doc) {\n      // CHECK IF DOCUMENT HAS REJECTED STATUS\n      if (doc.validated_by.validation_status !== \"rejected\") {\n        return {\n          status: false,\n          msg: \"Only rejected document are allowed for claim\",\n          alert: PopupAlertTheme.info,\n        };\n      }\n      // CHECK IF DOCUMENT HAS ALREADY CLAIMED ON\n      if (\n        this.props.claiming.myClaims &&\n        this.state.activeSession &&\n        isClaimAllowed(\n          this.props.claiming.myClaims,\n          this.state.activeSession.session_plan_id,\n          doc_id\n        )\n      ) {\n        return {\n          status: false,\n          msg: \"This document already in claiming list!\",\n          alert: PopupAlertTheme.info,\n        };\n      }\n      return { status: true, msg: \"\", alert: PopupAlertTheme.success };\n    } else {\n      return {\n        status: false,\n        msg: \"Invalid document id\",\n        alert: PopupAlertTheme.warning,\n      };\n    }\n    // return {\n    //   status: false,\n    //   msg: \"No Documents, please try again\",\n    //   alert: PopupAlertTheme.info,\n    // };\n  };\n\n  isApplicationIdValid = (\n    applications: claimApplicationsInterface[],\n    app_id: string\n  ): {\n    status: boolean;\n    msg: string;\n    alert: PopupAlertTheme;\n  } => {\n    let app = applications.find((item) => item.application_id === app_id);\n    console.log(\"====================================\");\n    console.log({ app, app_id });\n    console.log(\"====================================\");\n    if (app) {\n      // CHECK IF DOCUMENT HAS REJECTED STATUS\n      if (app.application_status !== ApplicationStates.Rejected) {\n        return {\n          status: false,\n          msg: \"Only rejected application are allowed for claim\",\n          alert: PopupAlertTheme.info,\n        };\n      }\n      // CHECK IF DOCUMENT HAS ALREADY CLAIMED ON\n      if (\n        this.props.claiming.myClaims &&\n        this.state.activeSession &&\n        isClaimAllowed(\n          this.props.claiming.myClaims,\n          this.state.activeSession.session_plan_id,\n          app.application_id\n        )\n      ) {\n        return {\n          status: false,\n          msg: \"This application already in claiming list!\",\n          alert: PopupAlertTheme.info,\n        };\n      }\n      return { status: true, msg: \"\", alert: PopupAlertTheme.info };\n    } else {\n      return {\n        status: false,\n        msg: \"Invalid application id\",\n        alert: PopupAlertTheme.warning,\n      };\n    }\n    // return {\n    //   status: false,\n    //   msg: \"No Application, please try again!\",\n    //   alert: PopupAlertTheme.info,\n    // };\n  };\n\n  setLoading = (state: boolean) => {\n    this.setState({ loading: state });\n  };\n\n  setLoadingForm = (state: boolean) => {\n    this.setState({ loadingForm: state });\n  };\n\n  setFormError = (\n    data: {\n      element: string;\n      msg: string;\n    } | null\n  ) => {\n    this.setState({ formError: data });\n  };\n\n  setAlertError = (data: string | null) => {\n    this.setState({ alertError: data });\n  };\n\n  setClaimFileId = (data: string) => {\n    this.setState({ claimFileId: data });\n  };\n\n  setViewThisFile = (data: string) => {\n    this.setState({ viewThisFile: data });\n  };\n\n  setChooseClaimFile = (data: boolean) => {\n    this.setState({ chooseClaimFile: data });\n  };\n\n  setClaimComment = (data: string) => {\n    this.setState({ claimComment: data });\n  };\n\n  isClaimTypeOpen = (\n    thisSession: SessionPlanInterface,\n    thisType: PlansTypeKeys\n  ): boolean => {\n    let data: PlansInterface | undefined;\n    if (thisType === PlansTypeKeys.APPLICATION) {\n      data = thisSession.plans.find(\n        (item) => item.type_key === PlansTypeKeys.APPLICATION\n      );\n      if (data && isPlanActive(thisSession, data) === \"OPEN\") {\n        return true;\n      }\n    } else if (thisType === PlansTypeKeys.DOCUMENT_VALIDATION) {\n      data = thisSession.plans.find(\n        (item) => item.type_key === PlansTypeKeys.DOCUMENT_VALIDATION\n      );\n      if (data && isPlanActive(thisSession, data) === \"OPEN\") {\n        return true;\n      }\n    } else if (thisType === PlansTypeKeys.PLACEMENT_TRANSFER) {\n      data = thisSession.plans.find(\n        (item) => item.type_key === PlansTypeKeys.PLACEMENT_TRANSFER\n      );\n      if (data && isPlanActive(thisSession, data) === \"OPEN\") {\n        return true;\n      }\n    }\n    return false;\n  };\n\n  isClaimBtnValid = (thisSession: SessionPlanInterface) => {\n    if (this.props.file_id || this.props.claim_type) {\n      // CHECK IF CLAIM TYPE && CLAIM FILE PROPS ARE PASSED PROPS\n      if (!this.props.claim_type) {\n        this.props.PushPopupAlert({\n          title: \"Claim type is required!\",\n          theme: PopupAlertTheme.warning,\n        });\n        this.props.setFormState(false);\n        this.setState({\n          claimFileId: \"\",\n          thisClaimType: null,\n          thisClaimTypeId: \"\",\n          claimComment: \"\",\n          chooseClaimFile: false,\n          formType: \"DEFAULT\",\n          viewThisFile: \"\",\n          formError: null,\n        });\n      } else if (!this.props.file_id) {\n        this.props.PushPopupAlert({\n          title: \"Claim file is required!\",\n          theme: PopupAlertTheme.warning,\n        });\n        this.props.setFormState(false);\n        this.setState({\n          claimFileId: \"\",\n          thisClaimType: null,\n          thisClaimTypeId: \"\",\n          claimComment: \"\",\n          chooseClaimFile: false,\n          formType: \"DEFAULT\",\n          viewThisFile: \"\",\n          formError: null,\n        });\n      } else if (!this.isClaimTypeOpen(thisSession, this.props.claim_type)) {\n        // IF CLAIM TYPE && CLAIM FILE PROPS ARE PASSED PROPS\n        // CHECK IF CLAIM TYPE IS OPEN ================\n        this.props.PushPopupAlert({\n          title: \"Claim type is closed!\",\n          theme: PopupAlertTheme.warning,\n        });\n        this.props.setFormState(false);\n        this.setState({\n          claimFileId: \"\",\n          thisClaimType: null,\n          thisClaimTypeId: \"\",\n          claimComment: \"\",\n          chooseClaimFile: false,\n          formType: \"DEFAULT\",\n          viewThisFile: \"\",\n          formError: null,\n        });\n      }\n    }\n  };\n\n  displayClaimType = (claimType: PlansTypeKeys): string => {\n    let result: string = \"\";\n    switch (claimType) {\n      case PlansTypeKeys.APPLICATION:\n        result = \"application\";\n        break;\n      case PlansTypeKeys.DOCUMENT_VALIDATION:\n        result = \"document\";\n        break;\n      case PlansTypeKeys.EXAMINATION:\n        result = \"exam\";\n        break;\n      case PlansTypeKeys.MARKS_PUBLICATION:\n        result = \"marks publication\";\n        break;\n      case PlansTypeKeys.PLACEMENT_TRANSFER:\n        result = \"placement\";\n        break;\n      default:\n        result = \"\";\n        break;\n    }\n\n    return result;\n  };\n\n  isClaimsAllowed = (\n    thisPeriod: SessionPlanInterface\n  ): {\n    status: boolean;\n    msg: string;\n    alert: PopupAlertTheme;\n  } => {\n    // LOADING CLAIMING OF CURRENT CANDIDATES ================================\n    if (\n      this.props.claiming.myClaims === null &&\n      this.props.file_id &&\n      this.props.claim_type\n    ) {\n      this.props.getMyClaims(\n        this.props.auth.user.user_id,\n        thisPeriod.session_plan_id,\n        (status: boolean, msg: string, data?: CandidateClaimInterface[]) => {\n          // !status && setLoadingClaims(status);\n          this.setLoading(status);\n          if (!status && msg.length) {\n            this.props.PushPopupAlert({\n              title: msg,\n              theme: PopupAlertTheme.danger,\n            });\n          }\n          if (data) {\n            let claim = data.find(\n              (item) =>\n                item.claiming_on_id === this.props.file_id &&\n                item.period_id === thisPeriod.session_plan_id\n            );\n            if (claim) {\n              this.setState({ found_claim: claim });\n              return {\n                status: true,\n                msg: `You have already claimed on this ${this.displayClaimType(\n                  this.props.claim_type!\n                )}`,\n                alert: PopupAlertTheme.info,\n              };\n            }\n          }\n        }\n      );\n    } else if (\n      this.props.claiming.myClaims &&\n      this.props.file_id &&\n      this.props.claim_type\n    ) {\n      let claim = this.props.claiming.myClaims.find(\n        (item) =>\n          item.claiming_on_id === this.props.file_id &&\n          item.period_id === thisPeriod.session_plan_id\n      );\n      if (claim) {\n        this.setState({ found_claim: claim });\n\n        return {\n          status: true,\n          msg: `You have already claimed on this ${this.displayClaimType(\n            this.props.claim_type!\n          )}`,\n          alert: PopupAlertTheme.info,\n        };\n      }\n    }\n\n    return {\n      status: true,\n      msg: \"\",\n      alert: PopupAlertTheme.success,\n    };\n  };\n\n  componentDidMount = () => {\n    if (\n      this.props.sessionPlan.activeSessionPlan === null ||\n      this.props.sessionPlan.activeSessionPlan === \"none\"\n    ) {\n      this.props.getActiveSessionPlan(\n        (status: boolean, msg: string, data: SessionPlanInterface | \"none\") => {\n          this.setLoading(status);\n          if (!status && msg.length) {\n            this.props.PushPopupAlert({\n              title: msg,\n              theme: PopupAlertTheme.danger,\n            });\n          }\n          if (data && data === \"none\") {\n            this.props.PushPopupAlert({\n              title: \"No session active session\",\n              theme: PopupAlertTheme.danger,\n            });\n            this.props.setFormState(false);\n            this.setState({\n              claimFileId: \"\",\n              thisClaimType: null,\n              thisClaimTypeId: \"\",\n              claimComment: \"\",\n              chooseClaimFile: false,\n              formType: \"DEFAULT\",\n              viewThisFile: \"\",\n              formError: null,\n            });\n          } else if (data) {\n            let _isClaimsAllowed = this.isClaimsAllowed(data);\n            if (!_isClaimsAllowed.status) {\n              this.props.PushPopupAlert({\n                title: _isClaimsAllowed.msg,\n                theme: _isClaimsAllowed.alert,\n              });\n            }\n            // this.props.setFormState(false);\n            this.setState({ activeSession: data });\n            this.isClaimBtnValid(data);\n          }\n        }\n      );\n    } else {\n      this.setState({\n        activeSession: this.props.sessionPlan.activeSessionPlan,\n      });\n      this.isClaimBtnValid(this.props.sessionPlan.activeSessionPlan);\n      let _isClaimsAllowed = this.isClaimsAllowed(\n        this.props.sessionPlan.activeSessionPlan\n      );\n      if (!_isClaimsAllowed.status) {\n        this.props.PushPopupAlert({\n          title: _isClaimsAllowed.msg,\n          theme: _isClaimsAllowed.alert,\n        });\n        this.props.setFormState(false);\n      }\n      this.setLoading(false);\n    }\n\n    if (this.props.documentReducer.documentCategory === null) {\n      this.props.getDocumentCategory();\n    }\n    if (this.props.documentReducer.documentSubCategory === null) {\n      this.props.getDocumentSubCategory();\n    }\n    if (this.props.documentReducer.documentFields === null) {\n      this.props.getDocumentFields();\n    }\n\n    if (this.props.claiming.candidateApplications === null) {\n      this.props.getMyRejectedApplications(\n        this.props.auth.user.user_id,\n        (status: boolean, msg: string, data?: claimApplicationsInterface[]) => {\n          this.setLoading(status);\n          if (!status) {\n            if (msg.length > 0) {\n              this.props.PushPopupAlert({\n                title: msg,\n                theme: PopupAlertTheme.danger,\n              });\n            }\n            if (data) {\n              // PROPS VALIDATION PROCESS ###############\n              if (\n                this.props.claim_type &&\n                this.props.file_id &&\n                this.state.formType === \"DEFAULT\"\n              ) {\n                if (this.props.claim_type === PlansTypeKeys.APPLICATION) {\n                  let _isApplicationIdValid = this.isApplicationIdValid(\n                    data,\n                    this.props.file_id\n                  );\n                  if (!_isApplicationIdValid.status) {\n                    this.props.PushPopupAlert({\n                      title: _isApplicationIdValid.msg,\n                      theme: _isApplicationIdValid.alert,\n                    });\n                    this.props.setFormState(false);\n                  } else {\n                    this.setState({\n                      thisClaimType: this.props.claim_type,\n                      claimFileId: this.props.file_id,\n                      formType: \"PROPS\",\n                    });\n                  }\n                }\n              }\n            }\n          }\n        }\n      );\n    }\n\n    if (this.props.claiming.candidateDocuments === null) {\n      this.props.getMyRejectedDocuments(\n        (status: boolean, msg: string, data?: DocumentClaimUser[]) => {\n          this.setLoading(status);\n          if (!status) {\n            if (msg.length > 0) {\n              this.props.PushPopupAlert({\n                title: msg,\n                theme: PopupAlertTheme.danger,\n              });\n            }\n            if (data) {\n              // PROPS VALIDATION PROCESS ###############\n              if (\n                this.props.claim_type &&\n                this.props.file_id &&\n                this.state.formType === \"DEFAULT\"\n              ) {\n                if (\n                  this.props.claim_type === PlansTypeKeys.DOCUMENT_VALIDATION\n                ) {\n                  let _isDocumentIdValid = this.isDocumentIdValid(\n                    data,\n                    this.props.file_id\n                  );\n                  if (!_isDocumentIdValid.status) {\n                    this.props.PushPopupAlert({\n                      title: _isDocumentIdValid.msg,\n                      theme: _isDocumentIdValid.alert,\n                    });\n                    // setAlertError(_isDocumentIdValid.msg);\n                    this.props.setFormState(false);\n                  } else {\n                    this.setState({\n                      thisClaimType: this.props.claim_type,\n                      claimFileId: this.props.file_id,\n                      formType: \"PROPS\",\n                    });\n                  }\n                }\n              }\n            }\n          }\n        }\n      );\n    }\n\n    // PROPS VALIDATION PROCESS ###############\n    if (\n      this.props.claim_type &&\n      this.props.file_id &&\n      this.state.formType === \"DEFAULT\"\n    ) {\n      this.setState({ thisClaimType: this.props.claim_type });\n      if (\n        this.props.claim_type === PlansTypeKeys.DOCUMENT_VALIDATION &&\n        this.props.claiming.candidateDocuments\n      ) {\n        let _isDocumentIdValid = this.isDocumentIdValid(\n          this.props.claiming.candidateDocuments,\n          this.props.file_id\n        );\n        if (!_isDocumentIdValid.status) {\n          this.props.PushPopupAlert({\n            title: _isDocumentIdValid.msg,\n            theme: _isDocumentIdValid.alert,\n          });\n          // setAlertError(_isDocumentIdValid.msg);\n          this.props.setFormState(false);\n        } else {\n          this.setState({\n            thisClaimType: this.props.claim_type,\n            claimFileId: this.props.file_id,\n            formType: \"PROPS\",\n          });\n        }\n      }\n      if (\n        this.props.claim_type === PlansTypeKeys.APPLICATION &&\n        this.props.claiming.candidateApplications\n      ) {\n        let _isApplicationIdValid = this.isApplicationIdValid(\n          this.props.claiming.candidateApplications,\n          this.props.file_id\n        );\n        if (!_isApplicationIdValid.status) {\n          this.props.PushPopupAlert({\n            title: _isApplicationIdValid.msg,\n            theme: _isApplicationIdValid.alert,\n          });\n          this.props.setFormState(false);\n        } else {\n          this.setState({\n            thisClaimType: this.props.claim_type,\n            claimFileId: this.props.file_id,\n            formType: \"PROPS\",\n          });\n        }\n      }\n    }\n  };\n\n  getDocumentById = (\n    documents: DocumentClaimUser[],\n    doc_id: string\n  ): DocumentClaimUser => {\n    return documents.filter((item) => item.doc_id === doc_id)[0];\n  };\n\n  getApplicationById = (\n    applications: claimApplicationsInterface[],\n    application_id: string\n  ): claimApplicationsInterface => {\n    return applications.filter(\n      (item) => item.application_id === application_id\n    )[0];\n  };\n\n  getValidation = (\n    thisId: string\n  ): {\n    old_reason: string;\n    old_status: string;\n    old_evaluated_by: string;\n  } => {\n    let result: {\n      old_reason: string;\n      old_status: string;\n      old_evaluated_by: string;\n    } = { old_reason: \"\", old_status: \"\", old_evaluated_by: \"\" };\n\n    if (\n      this.state.thisClaimType === PlansTypeKeys.DOCUMENT_VALIDATION &&\n      this.props.claiming.candidateDocuments\n    ) {\n      result = {\n        old_reason: this.getDocumentById(\n          this.props.claiming.candidateDocuments,\n          thisId\n        ).validated_by.comment,\n        old_status: this.getDocumentById(\n          this.props.claiming.candidateDocuments,\n          thisId\n        ).validated_by.validation_status,\n        old_evaluated_by: this.getDocumentById(\n          this.props.claiming.candidateDocuments,\n          thisId\n        ).validated_by.user_id,\n      };\n    } else if (\n      this.state.thisClaimType === PlansTypeKeys.APPLICATION &&\n      this.props.claiming.candidateApplications\n    ) {\n      result = {\n        old_reason: this.getApplicationById(\n          this.props.claiming.candidateApplications,\n          thisId\n        ).override_by.comment,\n        old_status: this.getApplicationById(\n          this.props.claiming.candidateApplications,\n          thisId\n        ).override_by.application_status,\n        old_evaluated_by: this.getApplicationById(\n          this.props.claiming.candidateApplications,\n          thisId\n        ).override_by.user_id,\n      };\n    }\n\n    return result;\n  };\n\n  cleanToClose = () => {\n    this.props.setFormState(false);\n    this.setState({\n      claimFileId: \"\",\n      thisClaimType: null,\n      thisClaimTypeId: \"\",\n      claimComment: \"\",\n      chooseClaimFile: false,\n      formType: \"DEFAULT\",\n      viewThisFile: \"\",\n      formError: null,\n    });\n  };\n\n  handleSubmit = async (e: React.FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n    if (!this.state.thisClaimType) {\n      return this.setFormError({\n        element: \"claim_type\",\n        msg: \"Claim type is required!\",\n      });\n    }\n    if (isEmptyOrSpaces(this.state.claimFileId)) {\n      return this.setFormError({\n        element: \"claim_file\",\n        msg: `Please select ${this.state.thisClaimType.toLocaleLowerCase()} you are claiming on!`,\n      });\n    }\n    if (isEmptyOrSpaces(this.state.claimComment)) {\n      return this.setFormError({\n        element: \"claim_comment\",\n        msg: `Claim comment is required!`,\n      });\n    }\n\n    if (!this.state.activeSession) {\n      return this.setAlertError(`No active claiming session is available!`);\n    }\n\n    this.setLoadingForm(true);\n    try {\n      setAxiosToken();\n      const res = await axios.post<CandidateClaimInterface>(\n        `${API.CLAIMING}/user/create`,\n        {\n          claiming_on_id: this.state.claimFileId,\n          type_key: this.state.thisClaimType,\n          user: this.props.auth.user.user_id,\n          period_id: this.state.activeSession.session_plan_id,\n          reason: this.state.claimComment,\n          old_reason: this.getValidation(this.state.claimFileId).old_reason,\n          old_status: this.getValidation(this.state.claimFileId).old_status,\n          old_evaluated_by: this.getValidation(this.state.claimFileId)\n            .old_evaluated_by,\n        }\n      );\n      console.log({ createClaim: res.data });\n      if (res.status === 201 || res.status === 200) {\n        this.props.createClaim(res.data);\n        this.props.PushPopupAlert({\n          title: \"Claim sent successful\",\n          theme: PopupAlertTheme.success,\n        });\n        this.cleanToClose();\n        this.props.setFormState(false);\n      }\n    } catch (error) {\n      console.error({ error });\n      this.props.PushPopupAlert({\n        title: errorToText(error),\n        theme: PopupAlertTheme.danger,\n      });\n    }\n    this.props.setFormState(false);\n    this.setLoadingForm(false);\n  };\n\n  selectClaimType = (thisClaim: string) => {\n    this.setState({\n      thisClaimType: isEmptyOrSpaces(thisClaim)\n        ? null\n        : (thisClaim as PlansTypeKeys),\n    });\n  };\n\n  generateChooseFileTitle = (thisClaimType: PlansTypeKeys | null): string => {\n    let result: string = \"\";\n\n    switch (thisClaimType) {\n      case PlansTypeKeys.APPLICATION:\n        result = `Select application you are claiming on?`;\n        break;\n      case PlansTypeKeys.DOCUMENT_VALIDATION:\n        result = `Select document you are claiming on?`;\n        break;\n      case PlansTypeKeys.EXAMINATION:\n        result = `Select exam you are claiming on?`;\n        break;\n      case PlansTypeKeys.MARKS_PUBLICATION:\n        result = `Select marks publication you are claiming on?`;\n        break;\n      case PlansTypeKeys.PLACEMENT_TRANSFER:\n        result = `Select placement you are claiming on?`;\n        break;\n      default:\n        result = \"Select file you are claiming on?\";\n        break;\n    }\n\n    return result;\n  };\n\n  render() {\n    if (this.state.found_claim !== null) {\n      return (\n        <div>\n          <h2 className=\"text-center text-2xl font-bold p-3 text-gray-500\">\n            Claims on this {this.displayClaimType(this.props.claim_type!)}\n          </h2>\n          {this.state.found_claim.claims.length >= 1 ? (\n            <div>\n              {this.state.found_claim.claims.map((itm) => (\n                <div className=\"p-2 border rounded mb-2\">\n                  <div className=\"p-1 border-b\">\n                    <span className=\"text-gray-400\">Created date:</span>{\" \"}\n                    <b>{itm.date_created}</b>\n                  </div>\n                  <div className=\"p-1 border-b\">\n                    <span className=\"text-gray-400\">Reason:</span>{\" \"}\n                    <p>{itm.reason}</p>\n                  </div>\n                  <div className=\"p-1 border-b\">\n                    <span className=\"text-gray-400\">Evaluation comment:</span>{\" \"}\n                    <p>{itm.evaluation_comment}</p>\n                  </div>\n                  <div className=\"p-1\">\n                    <span className=\"text-gray-400 block\">decision:</span>{\" \"}\n                    <h3 className=\"text-xl font-bold\">\n                      {itm.decision_taken_status}\n                    </h3>\n                  </div>\n                </div>\n              ))}\n            </div>\n          ) : (\n            <div>No claims found!</div>\n          )}\n        </div>\n      );\n    }\n\n    if (\n      this.state.loading ||\n      this.state.activeSession === null ||\n      (this.props.claiming.myClaims === null &&\n        this.props.file_id &&\n        this.props.claim_type)\n    ) {\n      return null;\n    }\n    return (\n      <div className=\"pb-3\">\n        {/* CLAIM FORM ============================================== */}\n        {this.state.viewThisFile.length <= 0 && (\n          <form onSubmit={(e) => this.handleSubmit(e)}>\n            <div className=\"px-6 pb-3\">\n              {this.state.alertError && (\n                <div\n                  className=\"alert-warning cursor-pointer\"\n                  onClick={() => this.setAlertError(null)}\n                >\n                  {this.state.alertError}\n                </div>\n              )}\n              <div className=\"text-base text-gray-700 sm:text-lg\">\n                {/* SELECT CLAIM TYPE ============================================== */}\n                <div className=\"flex flex-col mb-2\">\n                  <label>Claim type</label>\n                  <select\n                    className={`rounded px-2 py-2 w-full bg-white focus:outline-none ${\n                      this.state.formType === \"PROPS\" && \"cursor-not-allowed\"\n                    } ${\n                      this.state.formError &&\n                      this.state.formError.element === \"claim_type\"\n                        ? \"border-red-500\"\n                        : \"border-gray-500\"\n                    } border-2`}\n                    onChange={(e: React.ChangeEvent<HTMLSelectElement>) => {\n                      this.selectClaimType(e.target.value);\n                      this.setClaimFileId(\"\");\n                      this.state.formError &&\n                        this.state.formError.element === \"claim_type\" &&\n                        this.setFormError(null);\n                    }}\n                    value={\n                      this.state.thisClaimType ? this.state.thisClaimType : \"\"\n                    }\n                    disabled={\n                      this.state.loadingForm || this.state.formType === \"PROPS\"\n                    }\n                  >\n                    <option value=\"\">Choose claim type</option>\n                    {Object.values(PlansTypeKeys).map((item, index) => (\n                      <option value={item} key={index + item}>\n                        {capitalizeFirstLetter(\n                          item.toLocaleLowerCase().replace(/_/g, \" \")\n                        )}\n                      </option>\n                    ))}\n                  </select>\n                  {this.state.formError &&\n                    this.state.formError.element === \"claim_type\" && (\n                      <span className=\"text-red-500\">\n                        {this.state.formError.msg}\n                      </span>\n                    )}\n                </div>\n                {/* END SELECT CLAIM TYPE ============================================== */}\n\n                {/* SELECT FILE TO CLAIM ON ============================================== */}\n                <div className=\"flex flex-col mb-2\">\n                  <label>\n                    {this.generateChooseFileTitle(this.state.thisClaimType)}\n                  </label>\n                  <div\n                    className={`text-left bg-white border-2 ${\n                      this.state.formType !== \"PROPS\"\n                        ? \"border-gray-700\"\n                        : \"border-gray-400 text-gray-500\"\n                    } rounded w-full ${\n                      this.state.chooseClaimFile ? \"h-64\" : \"h-10\"\n                    } ${\n                      this.state.formError &&\n                      this.state.formError.element === \"claim_file\"\n                        ? \"border-red-500\"\n                        : \"\"\n                    } border-2 ${\n                      this.state.thisClaimType &&\n                      !this.state.chooseClaimFile &&\n                      this.state.formType !== \"PROPS\"\n                        ? \"cursor-pointer\"\n                        : !this.state.chooseClaimFile && \"cursor-not-allowed\"\n                    }`}\n                    title={\n                      !this.state.thisClaimType\n                        ? \"Choose claim type first!\"\n                        : \"\"\n                    }\n                    onClick={() => {\n                      this.state.formType === \"DEFAULT\" &&\n                        this.state.thisClaimType &&\n                        !this.state.chooseClaimFile &&\n                        this.setChooseClaimFile(true);\n                      this.state.formError &&\n                        this.state.formError.element === \"claim_file\" &&\n                        this.setFormError(null);\n                    }}\n                  >\n                    {/* DISPLAYING FILTERED SELECTING FILE ============================ */}\n                    {this.state.claimFileId.length > 0 &&\n                    !this.state.chooseClaimFile ? (\n                      <p className=\"my-1 mx-2\">\n                        {this.state.thisClaimType ===\n                          PlansTypeKeys.DOCUMENT_VALIDATION &&\n                          this.props.claiming.candidateDocuments &&\n                          ClaimGetDocTitle(\n                            this.props.documentReducer,\n                            this.getDocumentById(\n                              this.props.claiming.candidateDocuments,\n                              this.state.claimFileId\n                            )\n                          ).main}\n                        {this.state.thisClaimType ===\n                          PlansTypeKeys.APPLICATION &&\n                          this.props.claiming.candidateApplications &&\n                          this.getApplicationById(\n                            this.props.claiming.candidateApplications,\n                            this.state.claimFileId\n                          ).position.position_title}\n                      </p>\n                    ) : (\n                      !this.state.chooseClaimFile && (\n                        <p className=\"my-1 mx-2\">\n                          Select Claim{\" \"}\n                          {this.state.thisClaimType &&\n                            this.state.thisClaimType\n                              .toLocaleLowerCase()\n                              .replace(/_/g, \" \")}\n                        </p>\n                      )\n                    )}\n                    {/* END DISPLAYING FILTERED SELECTING FILE ============================ */}\n\n                    {/* LISTING OF REJECTED DOCUMENTS ============================ */}\n                    {this.state.chooseClaimFile &&\n                      this.state.thisClaimType ===\n                        PlansTypeKeys.DOCUMENT_VALIDATION &&\n                      this.props.claiming.candidateDocuments &&\n                      this.props.claiming.myClaims &&\n                      this.props.sessionPlan.activeSessionPlan &&\n                      this.props.sessionPlan.activeSessionPlan !== \"none\" && (\n                        <FormDocumentList\n                          setChooseClaimFile={this.setChooseClaimFile}\n                          setClaimFileId={this.setClaimFileId}\n                          setViewThisFile={this.setViewThisFile}\n                          viewThisFile={this.state.viewThisFile}\n                          candidateDocuments={\n                            this.props.claiming.candidateDocuments\n                          }\n                          documentCategories={this.props.documentReducer}\n                          myClaims={this.props.claiming.myClaims}\n                          activeSession={\n                            this.props.sessionPlan.activeSessionPlan\n                          }\n                        />\n                      )}\n                    {/* END LISTING OF REJECTED DOCUMENTS ============================ */}\n                    {/* LISTING OF REJECTED APPLICATION ============================ */}\n                    {this.state.chooseClaimFile &&\n                      this.state.thisClaimType === PlansTypeKeys.APPLICATION &&\n                      this.props.claiming.candidateApplications &&\n                      this.props.claiming.myClaims &&\n                      this.props.sessionPlan.activeSessionPlan &&\n                      this.props.sessionPlan.activeSessionPlan !== \"none\" && (\n                        <FormApplicationList\n                          setChooseClaimFile={this.setChooseClaimFile}\n                          setClaimFileId={this.setClaimFileId}\n                          setViewThisFile={this.setViewThisFile}\n                          viewThisFile={this.state.viewThisFile}\n                          candidateApplications={\n                            this.props.claiming.candidateApplications\n                          }\n                          myClaims={this.props.claiming.myClaims}\n                          activeSession={\n                            this.props.sessionPlan.activeSessionPlan\n                          }\n                        />\n                      )}\n                    {/* END LISTING OF REJECTED APPLICATION ============================ */}\n                  </div>\n                  {this.state.formError &&\n                    this.state.formError.element === \"claim_file\" && (\n                      <span className=\"text-red-500\">\n                        {this.state.formError.msg}\n                      </span>\n                    )}\n                </div>\n                {/* END SELECT FILE TO CLAIM ON ============================================== */}\n\n                {/* CLAIM COMMENT ============================================== */}\n                <div className=\"flex flex-col\">\n                  <label>Comment</label>\n                  <textarea\n                    className={`text-left input-white w-20 inline-block ${\n                      this.state.formError &&\n                      this.state.formError.element === \"claim_comment\"\n                        ? \"border-red-500\"\n                        : \"border-gray-500\"\n                    } border-2`}\n                    placeholder={`Claim comment`}\n                    style={{ resize: \"none\" }}\n                    value={this.state.claimComment}\n                    onChange={(e) => {\n                      this.setClaimComment(e.target.value);\n                      this.state.formError &&\n                        this.state.formError.element === \"claim_comment\" &&\n                        this.setFormError(null);\n                    }}\n                    rows={3}\n                    disabled={this.state.loadingForm}\n                  ></textarea>\n                  {this.state.formError &&\n                    this.state.formError.element === \"claim_comment\" && (\n                      <span className=\"text-red-500\">\n                        {this.state.formError.msg}\n                      </span>\n                    )}\n                </div>\n                {/* END CLAIM COMMENT ============================================== */}\n              </div>\n              <div className=\"pt-3 flex justify-between\">\n                <button\n                  onClick={() => this.cleanToClose()}\n                  className={`btn bg-gray-400 text-white hover:bg-gray-600 focus:outline-none ${\n                    this.state.loadingForm && \"cursor-not-allowed\"\n                  }`}\n                  type=\"button\"\n                  disabled={this.state.loadingForm}\n                >\n                  Exit\n                </button>\n                <button\n                  className={`btn bg-primary text-white hover:bg-blue-600 focus:outline-none ${\n                    this.state.loadingForm && \"cursor-wait\"\n                  }`}\n                  type=\"submit\"\n                  disabled={this.state.loadingForm}\n                >\n                  {this.state.loadingForm ? \"Loading...\" : \"Claim\"}\n                </button>\n              </div>\n            </div>\n          </form>\n        )}\n        {/* END CLAIM FORM ============================================== */}\n\n        {/* CLAIM DOCUMENT VIEW ============================================== */}\n        {this.state.viewThisFile.length > 0 &&\n          this.props.claiming.candidateDocuments &&\n          this.state.thisClaimType === PlansTypeKeys.DOCUMENT_VALIDATION && (\n            <DocFormView\n              thisDoc={this.getDocumentById(\n                this.props.claiming.candidateDocuments,\n                this.state.viewThisFile\n              )}\n              setViewThisFile={this.setViewThisFile}\n              documentCategories={this.props.documentReducer}\n              setChooseClaimFile={this.setChooseClaimFile}\n              setClaimFileId={this.setClaimFileId}\n            />\n          )}\n        {/* END CLAIM DOCUMENT VIEW ============================================== */}\n        {/* CLAIM APPLICATION VIEW ============================================== */}\n        {this.state.viewThisFile.length > 0 &&\n          this.props.claiming.candidateApplications &&\n          this.state.thisClaimType === PlansTypeKeys.APPLICATION && (\n            <ApplicationFormView\n              thisApplication={this.getApplicationById(\n                this.props.claiming.candidateApplications,\n                this.state.viewThisFile\n              )}\n              documentCategories={this.props.documentReducer}\n              setChooseClaimFile={this.setChooseClaimFile}\n              setClaimFileId={this.setClaimFileId}\n              setViewThisFile={this.setViewThisFile}\n            />\n          )}\n        {/* END CLAIM APPLICATION VIEW ============================================== */}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = ({\n  auth,\n  document,\n  claiming,\n  sessionPlan,\n}: StoreState): {\n  auth: Auth;\n  sessionPlan: SessionPlanReducerInterface;\n  documentReducer: DocumentReducerInterface;\n  claiming: ClaimingReducerType;\n} => {\n  return {\n    auth: auth,\n    sessionPlan,\n    documentReducer: document,\n    claiming,\n  };\n};\n\nexport default connect(mapStateToProps, {\n  getActiveSessionPlan,\n  getMyClaims,\n  createClaim,\n  GetClaimingTypes,\n  getMyRejectedApplications,\n  getMyRejectedDocuments,\n  getDocumentCategory,\n  getDocumentSubCategory,\n  getDocumentFields,\n  PushPopupAlert,\n})(ClaimFormComponent);\n","import React, { Component, Fragment, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { BiArrowBack } from \"react-icons/bi\";\nimport { BsFillFileEarmarkTextFill } from \"react-icons/bs\";\nimport axios from \"axios\";\nimport { API } from \"../../utils/api\";\nimport { errorToText } from \"../../utils/errors\";\nimport { setAxiosToken } from \"../../utils/AxiosToken\";\nimport { connect } from \"react-redux\";\nimport moment from \"moment-timezone\";\nimport { TimeZone } from \"../../utils/app.config\";\nimport { Redirect } from \"react-router-dom\";\nimport {\n  Auth,\n  CandidateApplicationsStoreInterface,\n  candidateExamStoreInterface,\n  FC_Access,\n  FC_GetProfileDetails,\n  LoadCandidateApplications,\n  setSelectedCandidateExam,\n  setSelectedCourse,\n  setSelectedPosition,\n  InitializeExamDetails,\n  loadExamsDone,\n  AddUserApplication,\n  loadApplicationPeriods,\n  applicationPeriodsStoreInterface,\n} from \"../../actions\";\nimport { StoreState } from \"../../reducers\";\nimport { UserExamStatus, UserExamsListInterface } from \"../../interfaces/exam\";\nimport Loading from \"../../components/Loading/Loading\";\nimport { DATE, getMinutesFromTwoDates } from \"../../utils/functions\";\nimport { CountDown } from \"../../components/CountDown/CountDown\";\nimport { ExamTimeStatus, validateExamDate } from \"../../utils/question_bank\";\nimport { course, PositionAPI, PositionAPICourse } from \"../../interfaces\";\nimport {\n  ApplicationStates,\n  GetApplicationsAPI,\n} from \"../../interfaces/application\";\nimport { UserAccessList } from \"../../utils/auth_access\";\nimport { MdClose } from \"react-icons/md\";\nimport ChooseExamCenter, {\n  LocationTableInterface,\n} from \"../Application/ExamCenter/ChooseExamCenter\";\nimport { sentExamInterface } from \"../Application/ExamCenter/ExamCenter\";\nimport Modal, { ModalSize, Themes } from \"../../components/Modal/Modal\";\nimport CandidateAnswersDetails from \"../../components/AnswersDetails/CandidateAnswersDetails\";\n\nexport const compareWithToday = (tooday: moment.Moment, date: string) => {\n  const myDate = DATE(date, \"MM/DD/YYYY\");\n  let todayConverted =\n    (tooday.get(\"month\") < 9 ? \"0\" : \"\") +\n    (tooday.get(\"month\") + 1).toString() +\n    \"/\" +\n    tooday.get(\"date\") +\n    \"/\" +\n    tooday.get(\"year\");\n  if (new Date(myDate).getTime() < new Date(todayConverted).getTime()) {\n    return true;\n  }\n  return false;\n};\n\nexport interface ExamDoneDetailsAnswers {\n  course: string;\n  course_name: string;\n  discription: string;\n  termes: string;\n  rules: {\n    right_click_enabled: boolean;\n    copy_enabled: boolean;\n    paste_enabled: boolean;\n    stop_candidate_when_comeback: boolean;\n    allow_to_leave_browser: boolean;\n  };\n  period: string;\n  exam_date: string;\n}\n\ninterface NotPreparedExam {\n  course: string;\n  course_name: string;\n  course_code: string;\n  position: string;\n}\ninterface changeLocProps {\n  changeLocation: () => void;\n}\ninterface CandidateExamsProps {\n  FC_GetProfileDetails: Function;\n  auth: Auth;\n  candidateExam: candidateExamStoreInterface;\n  candidateApplications: CandidateApplicationsStoreInterface;\n  LoadCandidateApplications: (\n    user_id: string,\n    callback: (loading: boolean) => void\n  ) => void;\n  setSelectedCandidateExam: (exam_id: string) => void;\n  setSelectedCourse: (course: course | null) => void;\n  setSelectedPosition: (position: PositionAPI) => void;\n  InitializeExamDetails: (\n    periodId: string,\n    courseId: string,\n    district_id: string,\n    center_id: string,\n    room_id: string,\n    position_id: string,\n    callback: (loading: boolean) => void\n  ) => void;\n  loadExamsDone: (\n    periodId: string,\n    userId: string,\n    callback: (loading: boolean) => void\n  ) => void;\n  AddUserApplication: (application: GetApplicationsAPI) => void;\n  periods: applicationPeriodsStoreInterface;\n  loadApplicationPeriods: (callback: (loading: boolean) => void) => void;\n}\n\nconst ChangeLocationComponent = (props: changeLocProps): JSX.Element => {\n  const [display, setDisplay] = useState<boolean>(true);\n  if (display === false) {\n    return <div></div>;\n  }\n  return (\n    <div className=\"absolute right-2 left-2 md:right-1/4 md:left-1/4 lg:left-1/2 lg:right-auto bg-yellow-50 shadow-xl rounded py-1 px-1 flex flex-row justify-between items-center gap-2 text-yellow-800 -mt-5 lg:-mt-8\">\n      <div className=\"flex flex-row gap-2 items-center justify-between w-full pl-1\">\n        <span className=\"font-bold\">You are advised to change location</span>\n        <div\n          onClick={props.changeLocation}\n          className=\"px-2 py-1 rounded bg-blue-100 text-blue-600 w-max cursor-pointer\"\n        >\n          Change\n        </div>\n      </div>\n      <div\n        onClick={() => setDisplay(false)}\n        className=\"bg-yellow-100 text-yellow-600 rounded-full flex items-center justify-center p-1 h-8 w-8 cursor-pointer\"\n      >\n        <MdClose className=\"text-4xl\" />\n      </div>\n    </div>\n  );\n};\n\ninterface candidatePendingExamsList {\n  preparedExam: UserExamsListInterface[];\n  notPreparedExam: NotPreparedExam[];\n}\ninterface CandidateExamsState {\n  loading: boolean;\n  loadingExamsDone: boolean;\n  candidateExams: candidatePendingExamsList | null;\n  activeExams: string[];\n  candidateApplications: GetApplicationsAPI[] | null;\n  selectedCourse: course | null;\n  centersModal: boolean;\n  maxExamModal: boolean;\n  selectedPosition: string;\n  successMessage: string;\n  selectedExam: ExamDoneDetailsAnswers | null;\n}\n\nexport class _CandidateExams extends Component<\n  CandidateExamsProps,\n  CandidateExamsState\n> {\n  constructor(props: CandidateExamsProps) {\n    super(props);\n\n    this.state = {\n      loading: false,\n      loadingExamsDone: false,\n      candidateExams: null,\n      activeExams: [],\n      candidateApplications: null,\n      selectedCourse: null,\n      centersModal: false,\n      maxExamModal: false,\n      selectedPosition: \"\",\n      successMessage: \"\",\n      selectedExam: null,\n    };\n  }\n  setLoading = (status: boolean) => {\n    this.setState({ loading: status });\n  };\n  setloadingExamsDone = (status: boolean) => {\n    this.setState({ loadingExamsDone: status });\n  };\n  loadCandidateExams = async (user: string, period: string) => {\n    this.setLoading(true);\n    setAxiosToken();\n    try {\n      const res = await axios.get<candidatePendingExamsList>(\n        `${API.QBank}/exam/user/${user}/${period}`\n      );\n      this.setState({ candidateExams: res.data });\n      // console.log(\"My exams list: \", res.data);\n    } catch (error: any) {\n      console.log(\"My exams error: \", { ...error });\n      alert(errorToText(error));\n    }\n    this.setLoading(false);\n  };\n  loadUserProfileDetails = () => {\n    this.setState({\n      loading: true,\n    });\n    this.props.FC_GetProfileDetails(\n      this.props.auth.user.user_id,\n      (status: boolean, msg: string) => {\n        if (status === true) {\n          this.setState({\n            loading: false,\n          });\n        } else {\n          this.setState({\n            loading: false,\n          });\n        }\n      }\n    );\n    this.setState({\n      loading: false,\n    });\n  };\n\n  InitializationFn = (application: GetApplicationsAPI) => {\n    if (this.props.candidateExam.user_exams_done.length === 0) {\n      this.props.loadExamsDone(\n        application.application_session.session_plan_id,\n        this.props.auth.user.user_id,\n        this.setloadingExamsDone\n      );\n    }\n    for (let course of application.position.courses) {\n      let testDone = this.props.candidateExam.user_exams_temp.find(\n        (itm) => itm.course === course.course_id\n      );\n      if (testDone === undefined) {\n        let center_id = application.exams.find(\n          (itm) => itm.course_id === course.course_id\n        );\n        if (center_id !== undefined) {\n          this.props.InitializeExamDetails(\n            application.application_session.session_plan_id,\n            course.course_id,\n            center_id.district_id,\n            center_id.center_id,\n            center_id.room_id,\n            application.position.position_id,\n            this.setLoading\n          );\n        }\n      }\n    }\n  };\n  loadUserApplications = async () => {\n    this.setLoading(true);\n    try {\n      const res = await axios.get<GetApplicationsAPI[]>(\n        `${API.APPLICATION}/application/${this.props.auth.user.user_id}`\n      );\n      if (res.status === 200) {\n        this.setState({ candidateApplications: res.data });\n        for (let application of res.data) {\n          this.InitializationFn(application);\n        }\n        if (\n          this.props.candidateApplications.candidate_applications === null ||\n          this.props.candidateApplications.candidate_applications.length === 0\n        ) {\n          for (let application of res.data) {\n            this.props.AddUserApplication(application);\n          }\n        }\n      }\n    } catch (error: any) {\n      console.log(\"Appl ex Err: \", { ...error });\n    }\n    this.setLoading(false);\n  };\n  findLocation = (position_id: string, course_id: string) => {\n    if (this.state.candidateApplications !== null) {\n      const test = this.state.candidateApplications.find(\n        (item) =>\n          item.position.position_id === position_id &&\n          item.exams.filter((itm) => itm.course_id === course_id)\n      );\n      if (test !== undefined) {\n        let course = test.exams.find((itm) => itm.course_id === course_id);\n        if (course !== undefined) {\n          return course;\n        }\n      }\n    }\n    return null;\n  };\n  updateLocation = async (\n    application_id: string,\n    exams: sentExamInterface[]\n  ) => {\n    this.setState({ loading: true });\n    for (let i in exams) {\n      try {\n        const res = await axios.post(\n          `${API.APPLICATION}/application/updatemissed`,\n          {\n            application_id: application_id,\n            exams: exams[i],\n          }\n        );\n        if (res.status === 200) {\n          this.setState({\n            selectedCourse: null,\n            centersModal: false,\n            maxExamModal: false,\n            selectedPosition: \"\",\n            successMessage: \"Location updated successfully!\",\n          });\n          this.loadUserApplications();\n        }\n      } catch (error: any) {\n        console.log(\"Update loc err: \", { ...error });\n      }\n    }\n  };\n  updateLocationFunction = (exams: sentExamInterface[]) => {\n    if (this.state.candidateApplications !== null) {\n      let application = this.state.candidateApplications.find(\n        (item) => item.position.position_id === this.state.selectedPosition\n      );\n      if (application !== undefined) {\n        this.updateLocation(application.application_id, exams);\n      } else {\n        alert(\"Invalid application\");\n      }\n    } else {\n      alert(\"Missing application\");\n    }\n  };\n  addLocation = (\n    course_id: string,\n    course_name: string,\n    course_code: string,\n    location: LocationTableInterface,\n    exam_id: string\n  ) => {\n    return this.updateLocationFunction([\n      {\n        course_id: course_id,\n        proctoring_type: \"Center\",\n        center_id: location.center_id,\n        district_id: location.district_id,\n      },\n    ]);\n  };\n  componentDidMount = () => {\n    this.props.loadApplicationPeriods(this.setLoading);\n\n    if (\n      this.props.auth.user.sex === \"\" ||\n      this.props.auth.user.sex.length === 0\n    ) {\n      this.loadUserProfileDetails();\n    }\n    this.loadUserApplications();\n    if (this.props.auth.application_session !== null) {\n      this.loadCandidateExams(\n        this.props.auth.user.user_id,\n        this.props.auth.application_session.session_plan_id\n      );\n    }\n    if (this.props.auth.application_session !== null) {\n      this.props.loadExamsDone(\n        this.props.auth.application_session.session_plan_id,\n        this.props.auth.user.user_id,\n        this.setloadingExamsDone\n      );\n    }\n  };\n\n  removeDuplicatesExams = (\n    exams: UserExamsListInterface[]\n  ): UserExamsListInterface[] => {\n    let temp: UserExamsListInterface[] = [];\n    if (this.state.candidateApplications !== null) {\n      for (let item of exams) {\n        if (\n          this.state.candidateApplications.find(\n            (test) => test.position.position_id === item.position\n          ) !== undefined\n        ) {\n          if (temp.find((itm) => itm._id === item._id) === undefined) {\n            temp = [...temp, item];\n          }\n        }\n      }\n    }\n    return temp;\n  };\n\n  removeDuplicatesNotPreparedExams = (\n    exams: NotPreparedExam[]\n  ): NotPreparedExam[] => {\n    let temp: NotPreparedExam[] = [];\n    if (this.state.candidateApplications !== null) {\n      for (let item of exams) {\n        if (\n          this.state.candidateApplications.find(\n            (test) => test.position.position_id === item.position\n          ) !== undefined\n        ) {\n          if (temp.find((itm) => itm.course === item.course) === undefined) {\n            temp = [...temp, item];\n          }\n        }\n      }\n    }\n    return temp;\n  };\n  setTimeOut = (exam_id: string) => {\n    let temps: string[] = this.state.activeExams;\n    this.setState({\n      activeExams: [...temps, exam_id],\n    });\n  };\n  selectApplication = (\n    applications: GetApplicationsAPI[] | null,\n    position_id: string,\n    course_id: string\n  ): GetApplicationsAPI | null => {\n    if (applications !== null) {\n      let temp = applications.find(\n        (item) => item.position.position_id === position_id\n      );\n      if (temp !== undefined) {\n        if (\n          temp.position.courses.find((itm) => itm.course_id === course_id) !==\n          undefined\n        ) {\n          return temp;\n        }\n      }\n    }\n    return null;\n  };\n  setMaxExamModal = (status: boolean) => {\n    this.setState({ maxExamModal: status });\n  };\n\n  changeLocation = (item: PositionAPICourse) => {\n    this.setState({ selectedCourse: item, centersModal: true });\n    this.setMaxExamModal(true);\n  };\n\n  closeModal = () => {\n    this.setState({ centersModal: false });\n    this.setMaxExamModal(false);\n  };\n\n  render() {\n    const today = moment().tz(TimeZone);\n    // console.log(\"TODAY: \", today.get(\"days\"));\n    if (!FC_Access(this.props.auth, UserAccessList.MY_APPLICATION).view) {\n      return <Redirect to=\"/\" />;\n    }\n    if (this.props.candidateExam.selected_exam_id !== null) {\n      return <Redirect to=\"/do-exam\" />;\n    }\n    return (\n      <Fragment>\n        {this.state.selectedCourse === null ? (\n          <div className=\"mt-2 -ml-2 mr-3 pb-5\">\n            <div className=\"rounded mt-2\">\n              <div className=\"flex flex-row items-center gap-3\">\n                <Link\n                  to=\"/apps-page\"\n                  title=\"Back to menus\"\n                  className=\"bg-white group hover:bg-blue-50 h-10 w-10 flex items-center justify-center rounded-full cursor-pointer\"\n                >\n                  <BiArrowBack className=\"text-3xl text-blue-600 group-hover:text-blue-800\" />\n                </Link>\n                <div className=\"flex flex-col\">\n                  <span className=\"font-extrabold text-3xl\">My exams</span>\n                  <span className=\"text-gray-600 text-sm\">\n                    List of exams that are assigned to me\n                  </span>\n                </div>\n              </div>\n            </div>\n            {this.state.successMessage !== \"\" && (\n              <div\n                title=\"Click to close the message\"\n                onClick={() => this.setState({ successMessage: \"\" })}\n                className=\"animate__animated animate__zoomIn px-3 py-2 bg-green-500 text-white my-2 rounded cursor-pointer\"\n              >\n                {this.state.successMessage}\n              </div>\n            )}\n            {this.state.loading === true ||\n            this.state.loadingExamsDone === true ||\n            this.state.candidateExams === null ||\n            this.state.candidateApplications == null ? (\n              <div className=\"px-4 pt-5 pb-1 bg-white mt-2 rounded\">\n                <Loading />\n              </div>\n            ) : this.removeDuplicatesExams(\n                this.state.candidateExams.preparedExam\n              ).length === 0 ? (\n              <div className=\"bg-gray-50 rounded px-4 py-5 text-center font-bold mt-2 text-2xl text-gray-400\">\n                No exams found\n              </div>\n            ) : (\n              this.removeDuplicatesExams(\n                this.state.candidateExams.preparedExam\n              ).map((item, i) => (\n                <div key={i + 1} className=\"my-2 rounded bg-white p-2 group\">\n                  <div className=\"flex flex-col md:flex-row items-center justify-between\">\n                    <div className=\"flex flex-col md:flex-row items-center gap-2 w-full\">\n                      <div>\n                        <BsFillFileEarmarkTextFill className=\"hidden md:block text-4xl text-gray-600 group-hover:text-blue-600\" />\n                      </div>\n                      <div className=\"flex flex-col w-full\">\n                        <span className=\"text-base text-gray-800 font-extrabold group-hover:text-blue-600\">\n                          {item.course_name}\n                        </span>\n                        <div className=\"flex flex-row items-center justify-start w-full gap-3 -mt-1\">\n                          <div className=\"text-sm text-gray-500 group-hover:text-blue-600\">\n                            Date: {DATE(item.exam_date, \"DD/MM/YYYY\")}\n                          </div>\n                          <div className=\"hidden md:block text-sm bg-gray-100 underline text-gray-500  font-bold rounded-full px-2\">\n                            Start time: {item.start_time}\n                          </div>\n                          <div className=\"hidden md:block text-sm bg-blue-100 text-blue-900  font-bold rounded-full px-2\">\n                            Status: {item.user_status}\n                          </div>\n                        </div>\n                        {this.findLocation(item.position, item.course) !==\n                          null && (\n                          <div className=\"flex flex-row items-center gap-2 mt-2\">\n                            <div>\n                              Exam center:{\" \"}\n                              <span className=\"text-sm bg-gray-100 text-blue-900 group-hover:text-blue-600 font-bold rounded-full px-2 w-max\">\n                                {\n                                  this.findLocation(item.position, item.course)\n                                    ?.center_name\n                                }\n                              </span>\n                            </div>\n                            <div className=\"w-max flex flex-col md:flex-row\">\n                              Room number:{\" \"}\n                              {this.findLocation(item.position, item.course)\n                                ?.room_number === 0 ? (\n                                <span className=\"text-sm bg-yellow-100 text-yellow-900 group-hover:text-yellow-800 font-bold rounded-full px-2 w-max flex items-center justify-center\">\n                                  Waiting room\n                                </span>\n                              ) : (\n                                <span className=\"text-sm bg-gray-100 text-blue-900 group-hover:text-blue-600 font-bold rounded-full px-2 w-max\">\n                                  {\n                                    this.findLocation(\n                                      item.position,\n                                      item.course\n                                    )?.room_number\n                                  }\n                                </span>\n                              )}\n                              {/* Change loc */}\n                              {this.findLocation(item.position, item.course)\n                                ?.room_number === 0 &&\n                                validateExamDate(\n                                  item.exam_date,\n                                  item.start_time,\n                                  item.end_time\n                                ) !== ExamTimeStatus.Expired && (\n                                  <ChangeLocationComponent\n                                    changeLocation={() => {\n                                      this.setState({\n                                        selectedCourse: {\n                                          course_name: item.course_name,\n                                          course_code: item.course_code,\n                                          description: item.course_name,\n                                          school_levels: [],\n                                          course_id: item.course,\n                                        },\n                                        selectedPosition: item.position,\n                                        centersModal: true,\n                                      });\n                                      this.setMaxExamModal(true);\n                                    }}\n                                  />\n                                )}\n                            </div>\n                          </div>\n                        )}\n                      </div>\n                    </div>\n                    <div className=\"lg:w-full flex flex-row items-center justify-end\">\n                      {this.state.activeExams.find(\n                        (itm) => itm === item._id\n                      ) !== undefined ||\n                      item.user_status === UserExamStatus.Editing ||\n                      item.user_status === UserExamStatus.Paused ? (\n                        validateExamDate(\n                          item.exam_date,\n                          item.start_time,\n                          item.end_time\n                        ) !== ExamTimeStatus.Expired ? (\n                          this.selectApplication(\n                            this.state.candidateApplications,\n                            item.position,\n                            item.course\n                          )?.application_status !==\n                          ApplicationStates.Shortlisted ? (\n                            <div className=\"text-yellow-800 font-extrabold text-base bg-yellow-100 rounded px-3 py-1 cursor-not-allowed\">\n                              Not shortlisted\n                            </div>\n                          ) : (\n                            <div\n                              onClick={() => {\n                                let application = this.selectApplication(\n                                  this.state.candidateApplications,\n                                  item.position,\n                                  item.course\n                                );\n                                if (application !== null) {\n                                  if (\n                                    application.application_status ===\n                                    ApplicationStates.Shortlisted\n                                  ) {\n                                    // Select exam\n                                    this.props.setSelectedPosition(\n                                      application.position\n                                    );\n                                    this.props.setSelectedCourse(\n                                      application.position.courses.find(\n                                        (itm) => itm.course_id === item.course\n                                      )!\n                                    );\n                                    this.props.setSelectedCandidateExam(\n                                      item._id\n                                    );\n                                  } else {\n                                    alert(\n                                      \"Corresponding application is not shortlisted!\"\n                                    );\n                                  }\n                                } else {\n                                  alert(\"Invalid exam!\");\n                                }\n                              }}\n                              className={`${\n                                item.user_status === UserExamStatus.Editing ||\n                                item.user_status === UserExamStatus.Paused\n                                  ? \"bg-green-600 group-hover:bg-green-800\"\n                                  : \"bg-blue-600 group-hover:bg-blue-800\"\n                              } btn  text-white cursor-pointer w-max`}\n                            >\n                              {item.user_status === UserExamStatus.Editing\n                                ? \"Back to Exam\"\n                                : item.user_status === UserExamStatus.Paused\n                                ? \"Paused, back to exam\"\n                                : \"Start Exam\"}\n                            </div>\n                          )\n                        ) : item.user_status === UserExamStatus.Editing ||\n                          item.user_status === UserExamStatus.Done ||\n                          item.user_status === UserExamStatus.Paused ||\n                          item.user_status === UserExamStatus.Removed ? (\n                          <div className=\"text-blue-700 flex flex-col items-end justify-center w-max\">\n                            <span>Marks</span>\n                            <span className=\"text-2xl font-extrabold -mt-2\">\n                              {item.user_marks.toFixed(2)}%\n                            </span>\n                            <div\n                              onClick={() =>\n                                this.setState({\n                                  selectedExam: {\n                                    course: item.course,\n                                    course_name: item.course_name,\n                                    discription: item.discription,\n                                    termes: item.termes,\n                                    rules: item.rules,\n                                    period: item.period,\n                                    exam_date: item.exam_date,\n                                  },\n                                })\n                              }\n                              className=\"btn bg-blue-100 text-blue-700 cursor-pointer\"\n                            >\n                              Check details\n                            </div>\n                          </div>\n                        ) : (\n                          <div className=\"bg-yellow-100 text-yellow-700 font-extrabold text-base px-3 py-1 rounded-md w-max\">\n                            Expired\n                          </div>\n                        )\n                      ) : item.found === false ? (\n                        <div\n                          title=\"Please wait for the exam time\"\n                          className=\"text-lg lg:text-xl font-extrabold bg-green-100 text-green-700 px-3 py-1 rounded cursor-not-allowed w-max\"\n                        >\n                          <CountDown\n                            start_time={new Date(today.toString()).toString()}\n                            duration_min={getMinutesFromTwoDates(\n                              new Date(today.toString()),\n                              new Date(\n                                DATE(item.exam_date, \"MM/DD/YYYY\") +\n                                  \" \" +\n                                  item.start_time\n                              )\n                            )}\n                            timeout={() => this.setTimeOut(item._id)}\n                            returnString={true}\n                            labels={true}\n                            days\n                          />\n                        </div>\n                      ) : (\n                        <div className=\"text-blue-700 flex flex-col items-end justify-center w-max\">\n                          <span>Marks</span>\n                          <span className=\"text-2xl font-extrabold -mt-2\">\n                            {item.user_marks.toFixed(2)}%\n                          </span>\n                          <div\n                            onClick={() =>\n                              this.setState({\n                                selectedExam: {\n                                  course: item.course,\n                                  course_name: item.course_name,\n                                  discription: item.discription,\n                                  termes: item.termes,\n                                  rules: item.rules,\n                                  period: item.period,\n                                  exam_date: item.exam_date,\n                                },\n                              })\n                            }\n                            className=\"btn bg-blue-100 text-blue-700 cursor-pointer\"\n                          >\n                            Check details\n                          </div>\n                        </div>\n                      )}\n                    </div>\n                  </div>\n                </div>\n              ))\n            )}\n            {/* Not prepared exams */}\n            {this.state.candidateExams !== null &&\n              this.state.loading !== true &&\n              this.removeDuplicatesNotPreparedExams(\n                this.state.candidateExams.notPreparedExam\n              ).length > 0 &&\n              this.removeDuplicatesNotPreparedExams(\n                this.state.candidateExams.notPreparedExam\n              ).map((item, i) => (\n                <div\n                  key={i + 1}\n                  className=\"my-2 rounded bg-white p-2 py-3 group\"\n                >\n                  <div className=\"flex flex-col md:flex-row items-center justify-between\">\n                    <div className=\"flex flex-col md:flex-row items-center gap-2 w-full\">\n                      <div className=\"\">\n                        <BsFillFileEarmarkTextFill className=\"hidden md:block text-4xl text-gray-300 group-hover:text-blue-600\" />\n                      </div>\n                      <div className=\"flex flex-col\">\n                        <span className=\"text-base text-gray-600 font-bold group-hover:text-blue-600\">\n                          {item.course_name}\n                        </span>\n                        <div className=\"flex flex-row items-center gap-3 -mt-1\">\n                          {this.findLocation(item.position, item.course) !==\n                            null && (\n                            <div className=\"flex flex-row items-center gap-2 mt-2\">\n                              <div className=\"flex flex-col md:flex-row md:items-center\">\n                                Exam center:{\" \"}\n                                <span className=\"text-sm bg-gray-100 text-blue-900 group-hover:text-blue-600 font-bold rounded-full px-2 w-max\">\n                                  {\n                                    this.findLocation(\n                                      item.position,\n                                      item.course\n                                    )?.center_name\n                                  }\n                                </span>\n                              </div>\n                              <div className=\"w-max flex flex-col md:flex-row md:items-center\">\n                                Room number:{\" \"}\n                                {this.findLocation(item.position, item.course)\n                                  ?.room_number === 0 ? (\n                                  <span className=\"text-sm bg-yellow-100 text-yellow-900 group-hover:text-yellow-800 font-bold rounded-full px-2 w-max flex items-center justify-center\">\n                                    Waiting room\n                                  </span>\n                                ) : (\n                                  <span className=\"text-sm bg-gray-100 text-blue-900 group-hover:text-blue-600 font-bold rounded-full px-2 w-max\">\n                                    {\n                                      this.findLocation(\n                                        item.position,\n                                        item.course\n                                      )?.room_number\n                                    }\n                                  </span>\n                                )}\n                                {/* Change loc */}\n                                {this.findLocation(item.position, item.course)\n                                  ?.room_number === 0 && (\n                                  <ChangeLocationComponent\n                                    changeLocation={() => {\n                                      this.setState({\n                                        selectedCourse: {\n                                          course_name: item.course_name,\n                                          course_code: item.course_code,\n                                          description: item.course_name,\n                                          school_levels: [],\n                                          course_id: item.course,\n                                        },\n                                        selectedPosition: item.position,\n                                        centersModal: true,\n                                      });\n                                      this.setMaxExamModal(true);\n                                    }}\n                                  />\n                                )}\n                              </div>\n                            </div>\n                          )}\n                        </div>\n                      </div>\n                    </div>\n                    <div className=\"bg-gray-100 text-gray-600 font-extrabold text-base px-3 py-1 rounded-md\">\n                      Not prepared\n                    </div>\n                  </div>\n                </div>\n              ))}\n          </div>\n        ) : this.state.loading === true ? (\n          <div className=\"px-4 pt-5 pb-1 bg-white mt-2 rounded\">\n            <Loading />\n          </div>\n        ) : (\n          <div className=\"animate__animated animate__fadeInUp animate__faster mt-2 mr-1 -ml-3 rounded-t-md bg-white shadow-md pb-5\">\n            <div className=\"flex flex-row gap-4 items-center justify-between bg-blue-100 py-2 px-2 mb-2\">\n              <div className=\"flex flex-col w-full\">\n                <div className=\"flex flex-row gap-2 items-center justify-between w-full pl-2\">\n                  <span className=\"font-bold text-xl text-gray-800\">\n                    Change exam location\n                  </span>\n                  <div className=\"bg-white hover:text-yellow-700 hover:bg-white rounded-full p-1 h-10 w-10 border-2 border-white hover:border-yellow-600 flex items-center justify-center\">\n                    <MdClose\n                      className=\"cursor-pointer font-extrabold text-3xl\"\n                      onClick={() => {\n                        this.setState({\n                          centersModal: false,\n                          selectedCourse: null,\n                        });\n                      }}\n                    />\n                  </div>\n                </div>\n              </div>\n            </div>\n            <ChooseExamCenter\n              positionCourses={this.state.selectedCourse}\n              addLocation={this.addLocation}\n              closeModal={this.closeModal}\n            />\n          </div>\n        )}\n        {this.state.selectedExam !== null && (\n          <Modal\n            title={\n              <div className=\"text-2xl font-extrabold text-blue-600 px-2\">\n                Exam result details\n              </div>\n            }\n            backDrop={true}\n            theme={Themes.default}\n            close={() => this.setState({ selectedExam: null })}\n            backDropClose={true}\n            widthSizeClass={ModalSize.extraLarge}\n            displayClose={true}\n            padding={{ title: true }}\n          >\n            <CandidateAnswersDetails\n              exam_id={this.state.selectedExam}\n              showAnswers={false}\n            />\n          </Modal>\n        )}\n      </Fragment>\n    );\n  }\n}\n\nconst mapStateToProps = ({\n  auth,\n  candidateExam,\n  candidateApplications,\n  periods,\n}: StoreState): {\n  auth: Auth;\n  candidateExam: candidateExamStoreInterface;\n  candidateApplications: CandidateApplicationsStoreInterface;\n  periods: applicationPeriodsStoreInterface;\n} => {\n  return {\n    auth: auth,\n    candidateExam: candidateExam,\n    candidateApplications: candidateApplications,\n    periods: periods,\n  };\n};\n\nexport const CandidateExams = connect(mapStateToProps, {\n  FC_GetProfileDetails,\n  LoadCandidateApplications,\n  setSelectedCandidateExam,\n  setSelectedCourse,\n  setSelectedPosition,\n  InitializeExamDetails,\n  loadExamsDone,\n  AddUserApplication,\n  loadApplicationPeriods,\n})(_CandidateExams);\n","import React from 'react'\nimport { applicationHistory, ApplicationStatesDescription } from '../../../interfaces/application'\nimport { DATE } from '../../../utils/functions'\n\ninterface ApplicationHistoryProps {\n  applicationHistory: applicationHistory[];\n}\n\nconst ApplicationHistory = (props: ApplicationHistoryProps) => {\n  return (\n    <div className=\"flex flex-col justify-between items-start gap-1 bg-white px-3 py-2\">\n      {/* <span className=\"text-sm text-blue-800 font-bold\">Application status history</span> */}\n      <hr className=\"bg-blue-600\" />\n      <div className=\"grid md:grid-cols-2 lg:grid-cols-3 gap-3\">\n      {props.applicationHistory !== undefined &&\n        props.applicationHistory.length > 0 && \n        props.applicationHistory.map((item, i) => (\n          <div key={i + 1} className=\"col-span-1 flex flex-col border border-blue-500 rounded px-3 py-2\">\n            <div className=\"flex flex-row gap-2 justify-start items-center text-xs\">\n              <span className=\"text-gray-500\">Date:</span>\n              <span className=\"font-bold\">{DATE(item.date, \"DD/MM/YYYY\")}</span>\n            </div>\n            <div className=\"flex flex-row gap-2 justify-start items-center text-xs\">\n              <span className=\"text-gray-500\">Action:</span>\n              <span className=\"font-bold\">{item.comment}</span>\n            </div>\n            <div className=\"flex flex-row gap-2 justify-start items-center text-xs\">\n              <span className=\"text-gray-500\">Application status:</span>\n              <span className=\"font-bold\">{ApplicationStatesDescription.find(itm => itm.key === item.application_status)?.caption}</span>\n            </div>\n          </div>\n        ))}\n      </div> \n    </div>\n  )\n}\n\nexport default ApplicationHistory\n","import React, { Component } from \"react\";\nimport { MdInfo, MdLocationOn } from \"react-icons/md\";\nimport { Redirect } from \"react-router-dom\";\nimport { applicationPeriodsStoreInterface } from \"../../../actions/application_periods\";\nimport {\n  candidateExamStoreInterface,\n  InitialExamDetails,\n} from \"../../../actions/candidate_exam\";\nimport { LocationsDataStoreInterface } from \"../../../actions/locations_data\";\nimport Loading from \"../../../components/Loading/Loading\";\nimport { LoadingType } from \"../../../components/Loading/LoadingV2\";\nimport { applicationExamAPI } from \"../../../interfaces/application\";\nimport { DATE } from \"../../../utils/functions\";\nimport { LocationTableInterface } from \"../../Application/ExamCenter/ChooseExamCenter\";\n\ninterface ExamDetailsProps {\n  locationDetails: applicationExamAPI | undefined;\n  examDetails: InitialExamDetails | null;\n  locationsData: LocationsDataStoreInterface;\n  loadAllLocationsData: (callback: (loading: boolean) => void) => void;\n  setSelectedLocationData: (locationData: LocationTableInterface) => void;\n  periods: applicationPeriodsStoreInterface;\n  loadApplicationPeriods: (callback: (loading: boolean) => void) => void;\n  candidateExam: candidateExamStoreInterface;\n  setSelectedCandidateExam: (exam_id: string) => void;\n  // selectedCourse: course;\n}\ninterface ExamDetailsState {\n  loading: boolean;\n}\n\nclass ExamDetails extends Component<ExamDetailsProps, ExamDetailsState> {\n  constructor(props: ExamDetailsProps) {\n    super(props);\n\n    this.state = {\n      loading: false,\n    };\n  }\n  setLoading = (status: boolean) => {\n    this.setState({ loading: status });\n  };\n  componentDidMount = () => {\n    if (\n      this.props.locationsData.Locations_list === null ||\n      this.props.locationsData.Locations_list.length === 0\n    ) {\n      this.props.loadAllLocationsData(this.setLoading);\n    }\n    // if (this.props.periods.applicationPeriods === null || this.props.periods.applicationPeriods.length === 0 || this.props.periods.selected_period === null) {\n    this.props.loadApplicationPeriods(this.setLoading);\n    // }\n  };\n  render() {\n    if (this.props.candidateExam.selected_exam_id !== null) {\n      return <Redirect to=\"/do-exam\" />;\n    }\n    if (this.props.examDetails === null) {\n      return (\n        <div className=\"bg-yellow-50 text-yellow-800 font-bold rounded px-2 py-4 text-center text-3xl border border-yellow-600 mx-4 my-4\">\n          No Exam details found!\n        </div>\n      );\n    }\n    if (this.props.locationDetails === undefined) {\n      return (\n        <div className=\"bg-yellow-50 text-yellow-800 font-bold rounded px-2 py-4 text-center text-3xl border border-yellow-600 mx-4 my-4\">\n          No exam location details found!\n        </div>\n      );\n    }\n    return (\n      <div>\n        {this.state.loading === true ? (\n          <div className=\"px-4 py-4 rounded bg-gray-100\">\n            <Loading type={LoadingType.dark} />\n          </div>\n        ) : (\n          <div>\n            <div className=\"bg-gray-100 rounded mx-2 mb-2 px-2 py-2\">\n              <div className=\"font-bold text-xl text-blue-600 mb-4 flex flex-row items-center justify-between gap-2 bg-white py-2 px-2 rounded\">\n                <div className=\"flex flex-row items-center gap-2\">\n                  <MdInfo className=\"text-4xl text-blue-600\" />\n                  Exam information\n                </div>\n                <button\n                  onClick={() => {\n                    // this.props.setSelectedCourse(this.props.selectedCourse);\n                    this.props.examDetails &&\n                      this.props.setSelectedCandidateExam(\n                        this.props.examDetails.id\n                      );\n                  }}\n                  type=\"button\"\n                  className={`btn ${\n                    this.props.candidateExam.selected_exam_id !== null\n                      ? \"bg-yellow-700 hover:bg-yellow-900\"\n                      : \"bg-blue-600 hover:bg-blue-700\"\n                  } text-white cursor-pointer text-base`}\n                >\n                  {this.props.candidateExam.selected_exam_id !== null\n                    ? \"Return to Exam\"\n                    : \"Start Exam\"}\n                </button>\n              </div>\n              <div className=\"grid md:grid-cols-3 gap-4\">\n                <div className=\"col-span-1\">\n                  <div className=\"flex flex-col pl-2 border-gray-300 pb-2\">\n                    <span className=\"text-gray-500 text-sm italic\">\n                      Exam date:\n                    </span>\n                    <span className=\"text-gray-700 font-bold\">\n                      {DATE(this.props.examDetails.exam_date, \"DD/MM/YYYY\")}\n                    </span>\n                  </div>\n                </div>\n                <div className=\"col-span-1\">\n                  <div className=\"flex flex-col pl-2 border-gray-300 pb-2\">\n                    <span className=\"text-gray-500 text-sm italic\">\n                      Exam start time:\n                    </span>\n                    <span className=\"text-gray-700 font-bold\">\n                      {this.props.examDetails.start_time}\n                    </span>\n                  </div>\n                </div>\n                <div className=\"col-span-1\">\n                  <div className=\"flex flex-col pl-2 border-gray-300 pb-2\">\n                    <span className=\"text-gray-500 text-sm italic\">\n                      Exam duration:\n                    </span>\n                    <span className=\"text-gray-700 font-bold\">\n                      {this.props.examDetails.duration / 60} hours{\" \"}\n                      {this.props.examDetails.duration % 60 > 0 && (\n                        <div>{this.props.examDetails.duration % 60} mins</div>\n                      )}\n                    </span>\n                  </div>\n                </div>\n                <div className=\"col-span-3\">\n                  <div className=\"flex flex-col px-2 pb-2\">\n                    <span className=\"text-gray-500 text-sm italic\">\n                      Exam description:\n                    </span>\n                    <span className=\"text-gray-700 font-bold px-2 py-2 rounded bg-white mt-2\">\n                      {this.props.examDetails.discription}\n                    </span>\n                  </div>\n                </div>\n                <div className=\"col-span-3\">\n                  <div className=\"flex flex-col px-2 pb-2\">\n                    <span className=\"text-gray-500 text-sm italic\">\n                      Terms and conditions / Rules:\n                    </span>\n                    <div\n                      className=\"px-2 py-2 rounded bg-white mt-2\"\n                      dangerouslySetInnerHTML={{\n                        __html: this.props.examDetails.termes,\n                      }}\n                    ></div>\n                  </div>\n                </div>\n              </div>\n            </div>\n            <div className=\"bg-gray-100 rounded mx-2 mb-2 px-2 py-2\">\n              <div className=\"font-bold text-xl text-blue-600 mb-4 flex flex-row items-center justify-between gap-2 bg-white py-2 px-2 rounded\">\n                <div className=\"flex flex-row items-center gap-2\">\n                  <MdLocationOn className=\"text-4xl text-blue-600\" />\n                  Examination location\n                </div>\n              </div>\n              <div className=\"grid md:grid-cols-3 gap-4 px-2\">\n                <div className=\"col-span-1\">\n                  <div className=\"flex flex-col border-b border-gray-300 pb-2\">\n                    <span className=\"text-gray-500 text-sm italic\">\n                      Province:\n                    </span>\n                    <span className=\"text-gray-700 font-bold\">\n                      {this.props.locationsData.Locations_list &&\n                        this.props.locationsData.Locations_list.find(\n                          (itm) =>\n                            this.props.locationDetails !== undefined &&\n                            itm.center_id ===\n                              this.props.locationDetails.center_id\n                        )?.province_name}\n                    </span>\n                  </div>\n                </div>\n                <div className=\"col-span-1\">\n                  <div className=\"flex flex-col border-b border-gray-300 pb-2\">\n                    <span className=\"text-gray-500 text-sm italic\">\n                      District:\n                    </span>\n                    <span className=\"text-gray-700 font-bold\">\n                      {this.props.locationsData.Locations_list &&\n                        this.props.locationsData.Locations_list.find(\n                          (itm) =>\n                            this.props.locationDetails !== undefined &&\n                            itm.center_id ===\n                              this.props.locationDetails.center_id\n                        )?.district_name}\n                    </span>\n                  </div>\n                </div>\n                <div className=\"col-span-1\">\n                  <div className=\"flex flex-col border-b border-gray-300 pb-2\">\n                    <span className=\"text-gray-500 text-sm italic\">\n                      Center:{\" \"}\n                    </span>\n                    <span className=\"text-gray-700 font-bold\">\n                      {this.props.locationDetails.center_name}\n                    </span>\n                  </div>\n                </div>\n                <div className=\"col-span-1\">\n                  <div className=\"flex flex-col border-b border-gray-300 pb-2\">\n                    <span className=\"text-gray-500 text-sm italic\">\n                      Room number:{\" \"}\n                    </span>\n                    <span className=\"text-gray-700 font-bold\">\n                      {this.props.locationDetails.room_number}\n                    </span>\n                  </div>\n                </div>\n                <div className=\"col-span-1\">\n                  <div className=\"flex flex-col border-b border-gray-300 pb-2\">\n                    <span className=\"text-gray-500 text-sm italic\">\n                      Proctoring type\n                    </span>\n                    <span className=\"text-gray-700 font-bold\">\n                      {this.props.locationDetails.proctoring_type}\n                    </span>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default ExamDetails;\n","import React, { Component } from \"react\";\nimport { CgCheckO } from \"react-icons/cg\";\nimport { IoMdInformationCircleOutline } from \"react-icons/io\";\nimport { RiCheckboxBlankCircleFill, RiErrorWarningLine } from \"react-icons/ri\";\nimport { applicationPeriodsStoreInterface } from \"../../../actions/application_periods\";\nimport {\n  candidateExamStoreInterface,\n  InitialExamDetails,\n} from \"../../../actions/candidate_exam\";\nimport { courseStoreInterface } from \"../../../actions/course\";\nimport { positionsStoreInterface } from \"../../../actions/positions\";\nimport Loading from \"../../../components/Loading/Loading\";\nimport {\n  applicationExamAPI,\n  ApplicationStates,\n  GetApplicationsAPI,\n} from \"../../../interfaces/application\";\nimport { course } from \"../../../interfaces/course\";\nimport { UserExamStatus } from \"../../../interfaces/exam\";\nimport { PositionAPI, PositionAPICourse } from \"../../../interfaces/position\";\nimport { DATE } from \"../../../utils/functions\";\nimport { ExamTimeStatus, validateExamDate } from \"../../../utils/question_bank\";\n\ninterface PreparedExamsProps {\n  selectedPosition: PositionAPI;\n  selectedExams: applicationExamAPI[] | null;\n  findExam: (courseId: string) => InitialExamDetails | null;\n  loadingExams: boolean;\n  loadingExamsDone: boolean;\n  setMaxExamModal: (status: boolean) => void;\n  course: courseStoreInterface;\n  setSelectedCourse: (course: course | null) => void;\n  candidateExam: candidateExamStoreInterface;\n  positions: positionsStoreInterface;\n  periods: applicationPeriodsStoreInterface;\n  setSelectedPosition: (position: PositionAPI) => void;\n  setSelectedCandidateExam: (exam_id: string) => void;\n  changeLocation: (item: PositionAPICourse) => void;\n  selectedApplicationDetails: GetApplicationsAPI;\n}\ninterface PreparedExamsState {}\n\nexport class PreparedExams extends Component<\n  PreparedExamsProps,\n  PreparedExamsState\n> {\n  render() {\n    let NotPreparedExamsFilter = this.props.selectedPosition.courses.filter(\n      (itm) =>\n        this.props.candidateExam.user_exams_done.filter(\n          (ex) => ex.course === itm.course_id\n        ).length === 0 && this.props.findExam(itm.course_id) === null\n    );\n    let PreparedExamsFilter = this.props.selectedPosition.courses.filter(\n      (itm) =>\n        this.props.candidateExam.user_exams_done.filter(\n          (ex) => ex.course === itm.course_id\n        ).length === 0 && this.props.findExam(itm.course_id) !== null\n    );\n    let AllPendingExams = [...PreparedExamsFilter, ...NotPreparedExamsFilter];\n    let totalPending =\n      NotPreparedExamsFilter.length + PreparedExamsFilter.length;\n    return (\n      <div className=\"bg-white px-2 py-2\">\n        <div className=\"bg-gray-100 rounded px-2 py-2\">\n          <div className=\"flex flex-row items-center justify-between text-xl mb-3 mx-2\">\n            <span className=\"font-bold \">Waiting exams</span>\n            <span className=\"font-bold bg-white text-blue-600 rounded-full px-2 text-base border border-blue-200\">\n              {this.props.selectedPosition !== null &&\n                this.props.selectedExams !== null &&\n                this.props.loadingExams === false &&\n                totalPending}\n            </span>\n          </div>\n          <div className=\"flex flex-col gap-2\">\n            {this.props.selectedPosition === null ||\n            this.props.selectedExams === null ||\n            this.props.loadingExams === true ? (\n              <Loading />\n            ) : AllPendingExams.length === 0 ? (\n              <div className=\"border border-gray-200 text-gray-400 font-bold rounded-md px-3 py-3 text-center\">\n                <div className=\"flex justify-center items-center w-full text-4xl\">\n                  <IoMdInformationCircleOutline />\n                </div>\n                <div className=\"text-gray-500\">No exams found!</div>\n              </div>\n            ) : (\n              AllPendingExams.map((item, i) => (\n                <div\n                  key={i + 1}\n                  className={`px-3 py-2 rounded group bg-white border`}\n                >\n                  <div className=\"grid md:grid-cols-12 gap-2\">\n                    {/* First col */}\n                    <div className=\"col-span-12 md:col-span-6 lg:col-span-4 flex fex-row items-center gap-3\">\n                      <div className=\"flex flex-row gap-2 items-center\">\n                        <div\n                          className={`text-gray-300 group-hover:text-white flex flex-row items-center gap-2 text-right ml-2`}\n                        >\n                          {this.props.findExam(item.course_id) !== null ? (\n                            <CgCheckO className=\"text-4xl text-blue-600\" />\n                          ) : (\n                            <RiCheckboxBlankCircleFill className=\"text-4xl text-blue-100\" />\n                          )}\n                        </div>\n                      </div>\n                      <div className=\"flex flex-col\">\n                        <div className={`font-bold text-gray-600 truncate`}>\n                          {item.course_name}\n                        </div>\n                        <div className=\"flex flex-row justify-start items-center gap-2\">\n                          <span className=\"text-gray-500 text-xs\">\n                            Exam date:{\" \"}\n                          </span>\n                          {this.props.findExam(item.course_id) !== null ? (\n                            <div className=\"flex flex-row items-center gap-2\">\n                              {validateExamDate(\n                                this.props.findExam(item.course_id)!.exam_date,\n                                this.props.findExam(item.course_id)!.start_time,\n                                this.props.findExam(item.course_id)!.end_time\n                              ) === ExamTimeStatus.Online ? (\n                                <span className=\"bg-blue-100 text-blue-600 font-bold px-2 rounded-full\">\n                                  {validateExamDate(\n                                    this.props.findExam(item.course_id)!\n                                      .exam_date,\n                                    this.props.findExam(item.course_id)!\n                                      .start_time,\n                                    this.props.findExam(item.course_id)!\n                                      .end_time\n                                  )}\n                                </span>\n                              ) : validateExamDate(\n                                  this.props.findExam(item.course_id)!\n                                    .exam_date,\n                                  this.props.findExam(item.course_id)!\n                                    .start_time,\n                                  this.props.findExam(item.course_id)!.end_time\n                                ) === ExamTimeStatus.Expired ? (\n                                <span className=\"italic text-yellow-700 underline\">\n                                  {validateExamDate(\n                                    this.props.findExam(item.course_id)!\n                                      .exam_date,\n                                    this.props.findExam(item.course_id)!\n                                      .start_time,\n                                    this.props.findExam(item.course_id)!\n                                      .end_time\n                                  )}\n                                </span>\n                              ) : (\n                                <span className=\"italic\">\n                                  {validateExamDate(\n                                    this.props.findExam(item.course_id)!\n                                      .exam_date,\n                                    this.props.findExam(item.course_id)!\n                                      .start_time,\n                                    this.props.findExam(item.course_id)!\n                                      .end_time\n                                  )}\n                                </span>\n                              )}\n                              <span className=\"font-bold text-blue-600 text-sm\">\n                                {DATE(\n                                  this.props.findExam(item.course_id)!\n                                    .exam_date,\n                                  \"DD/MM/YYYY\"\n                                )}\n                              </span>\n                              <span\n                                className={`bg-blue-100 text-blue-600 font-bold px-2 py-1 rounded-full text-sm`}\n                              >\n                                {\n                                  this.props.findExam(item.course_id)!\n                                    .start_time\n                                }\n                              </span>\n                            </div>\n                          ) : (\n                            <span className=\"text-gray-500 text-sm\">\n                              Waiting for preparation\n                            </span>\n                          )}\n                        </div>\n                      </div>\n                    </div>\n                    {/* Second col */}\n                    <div className=\"col-span-12 md:col-span-6 lg:col-span-4 flex flex-col items-start justify-center\">\n                      {this.props.selectedExams === null ? (\n                        \"\"\n                      ) : this.props.selectedExams.find(\n                          (itm) => itm.course_id === item.course_id\n                        ) !== undefined ? (\n                        <>\n                          <div className=\"flex flex-row justify-start items-center gap-2\">\n                            <span className=\"text-gray-500 text-xs\">\n                              Proctoring type:{\" \"}\n                            </span>\n                            <span className=\"text-gray-700 font-bold text-sm\">\n                              {this.props.selectedExams === null\n                                ? \"\"\n                                : this.props.selectedExams.find(\n                                    (itm) => itm.course_id === item.course_id\n                                  ) !== undefined &&\n                                  this.props.selectedExams.find(\n                                    (itm) => itm.course_id === item.course_id\n                                  )?.proctoring_type}\n                            </span>\n                          </div>\n                          <div className=\"flex flex-col justify-center items-start gap-2\">\n                            {/* <span className=\"text-gray-500 text-xs\">\n                              Exam location:{\" \"}\n                            </span> */}\n                            <span className={`text-gray-700 font-bold text-sm`}>\n                              Center:{\" \"}\n                              {this.props.selectedExams === null ? (\n                                \"\"\n                              ) : this.props.selectedExams.find(\n                                  (itm) => itm.course_id === item.course_id\n                                ) !== undefined ? (\n                                this.props.selectedExams.find(\n                                  (itm) => itm.course_id === item.course_id\n                                )?.center_name\n                              ) : (\n                                <span className=\"italic text-xs\">\n                                  No location selected\n                                </span>\n                              )}\n                            </span>\n                            <span className={`text-gray-700 font-bold text-sm`}>\n                              Room:{\" \"}\n                              {this.props.selectedExams === null ? (\n                                \"\"\n                              ) : this.props.selectedExams.find(\n                                  (itm) => itm.course_id === item.course_id\n                                ) !== undefined ? (\n                                this.props.selectedExams.find(\n                                  (itm) => itm.course_id === item.course_id\n                                )?.room_number === 0 ? (\n                                  <span className=\"bg-yellow-100 text-yellow-700 font-bold px-2 py-1 rounded\">\n                                    Waiting room, you are advised to choose\n                                    another center\n                                  </span>\n                                ) : (\n                                  <span className=\"text-blue-600 bg-blue-100 px-2 py-1 rounded\">\n                                    No:{\" \"}\n                                    {\n                                      this.props.selectedExams.find(\n                                        (itm) =>\n                                          itm.course_id === item.course_id\n                                      )?.room_number\n                                    }\n                                  </span>\n                                )\n                              ) : (\n                                <span className=\"italic text-xs\">\n                                  No location selected\n                                </span>\n                              )}\n                            </span>\n                          </div>\n                        </>\n                      ) : (\n                        <div className=\"flex flex-row gap-2 items-center justify-start\">\n                          <RiErrorWarningLine className=\"text-xl text-yellow-700\" />\n                          <span className=\"text-yellow-700 italic text-sm\">\n                            No location selected\n                          </span>\n                        </div>\n                      )}\n                    </div>\n                    {/* Third col */}\n                    <div className=\"col-span-12 md:col-span-12 lg:col-span-4 flex items-center justify-start lg:justify-end\">\n                      {this.props.selectedExams === null ? (\n                        \"\"\n                      ) : this.props.selectedExams.find(\n                          (itm) => itm.course_id === item.course_id\n                        ) !== undefined ? (\n                        <div className=\"flex flex-row justify-start md:justify-end items-center gap-2\">\n                          {this.props.loadingExams === true ||\n                          this.props.loadingExamsDone === true ? (\n                            <div className=\"text-gray-500 font-bold bg-gray-100 text-sm rounded px-3 py-2\">\n                              Checking...\n                            </div>\n                          ) : (\n                            ((this.props.candidateExam.user_exams_done.find(\n                              (itm) => itm.course === item.course_id\n                            ) === undefined &&\n                              this.props.findExam(item.course_id) !== null &&\n                              validateExamDate(\n                                this.props.findExam(item.course_id)!.exam_date,\n                                this.props.findExam(item.course_id)!.start_time,\n                                this.props.findExam(item.course_id)!.end_time\n                              ) === ExamTimeStatus.Waiting) ||\n                              this.props.findExam(item.course_id) === null) && (\n                              <div\n                                onClick={() => this.props.changeLocation(item)}\n                                className=\"btn text-blue-600 border border-white cursor-pointer group-hover:bg-blue-600 hover:bg-blue-800 group-hover:text-white bg-blue-100 text-sm w-40 text-center\"\n                              >\n                                Change location\n                              </div>\n                            )\n                          )}\n                          {this.props.loadingExams === true ||\n                          this.props.loadingExamsDone === true ? (\n                            <div className=\"text-gray-500 font-bold bg-gray-100 text-sm rounded px-3 py-2\">\n                              Checking...\n                            </div>\n                          ) : (\n                            this.props.findExam(item.course_id) !== null &&\n                            this.props.findExam(item.course_id)?.course !==\n                              undefined &&\n                            this.props.candidateExam.user_exams_done.find(\n                              (itm) => itm.course === item.course_id\n                            )?.user_status !== UserExamStatus.Editing &&\n                            validateExamDate(\n                              this.props.findExam(item.course_id)!.exam_date,\n                              this.props.findExam(item.course_id)!.start_time,\n                              this.props.findExam(item.course_id)!.end_time\n                            ) === ExamTimeStatus.Online &&\n                            this.props.selectedApplicationDetails\n                              .application_status ===\n                              ApplicationStates.Shortlisted && (\n                              <div\n                                onClick={() => {\n                                  this.props.course.courses &&\n                                    this.props.setSelectedCourse(\n                                      this.props.course.courses.find(\n                                        (itm) =>\n                                          itm.course_id === item.course_id\n                                      )!\n                                    );\n                                  this.props.findExam(item.course_id) !==\n                                    null &&\n                                    this.setState({\n                                      appointmentDetailsModal: {\n                                        status: true,\n                                        item: this.props.findExam(\n                                          item.course_id\n                                        ),\n                                      },\n                                    });\n                                }}\n                                className=\"hidden btn border border-blue-500 text-blue-600 cursor-pointer hover:bg-blue-600 hover:text-white text-sm text-center\"\n                              >\n                                Details\n                              </div>\n                            )\n                          )}\n                          {this.props.loadingExams === true ||\n                          this.props.loadingExamsDone === true ? (\n                            <div className=\"text-gray-500 font-bold bg-gray-100 text-sm rounded px-3 py-2\">\n                              Checking...\n                            </div>\n                          ) : (\n                            this.props.periods.selected_period !== null &&\n                            this.props.periods.selected_period.is_active ===\n                              true &&\n                            this.props.findExam(item.course_id) !== null &&\n                            this.props.findExam(item.course_id)?.id !==\n                              undefined &&\n                            validateExamDate(\n                              this.props.findExam(item.course_id)!.exam_date,\n                              this.props.findExam(item.course_id)!.start_time,\n                              this.props.findExam(item.course_id)!.end_time\n                            ) === ExamTimeStatus.Online &&\n                            this.props.selectedApplicationDetails\n                              .application_status ===\n                              ApplicationStates.Shortlisted && (\n                              <div\n                                onClick={() => {\n                                  if (this.props.selectedPosition !== null) {\n                                    if (\n                                      this.props.positions.selected_position ===\n                                        null ||\n                                      this.props.positions.selected_position\n                                        .position_id !==\n                                        this.props.selectedPosition.position_id\n                                    ) {\n                                      this.props.setSelectedPosition(\n                                        this.props.selectedPosition\n                                      );\n                                    }\n                                    this.props.selectedExams !== null &&\n                                      this.props.course.courses &&\n                                      this.props.setSelectedCourse(\n                                        this.props.course.courses.find(\n                                          (itm) =>\n                                            itm.course_id === item.course_id\n                                        )!\n                                      );\n                                    this.props.selectedExams !== null &&\n                                      this.props.findExam(item.course_id) !==\n                                        null &&\n                                      this.props.setSelectedCandidateExam(\n                                        this.props.findExam(item.course_id)!.id\n                                      );\n                                  }\n                                }}\n                                className={`btn border ${\n                                  this.props.candidateExam.user_exams_done.find(\n                                    (itm) => itm.course === item.course_id\n                                  )?.user_status !== UserExamStatus.Editing\n                                    ? \"border-blue-500 bg-blue-600 hover:text-blue-600\"\n                                    : \"border-green-500 bg-green-600 hover:text-green-600\"\n                                } text-white cursor-pointer hover:bg-white text-sm w-max text-center`}\n                              >\n                                {this.props.candidateExam.user_exams_done.find(\n                                  (itm) => itm.course === item.course_id\n                                )?.user_status !== UserExamStatus.Editing\n                                  ? \"Start exam\"\n                                  : \"Back to Exam\"}\n                              </div>\n                            )\n                          )}\n                          {this.props.selectedApplicationDetails\n                            .application_status ===\n                            ApplicationStates.Initiated && (\n                            <div className=\"font-semibold text-yellow-800 bg-yellow-50 py-2 px-4 text-base\">\n                              Waiting for shortlisting\n                            </div>\n                          )}\n                        </div>\n                      ) : (\n                        <div className=\"flex flex-row justify-start md:justify-end items-center gap-2\">\n                          {this.props.candidateExam.user_exams_done.find(\n                            (itm) => itm.course === item.course_id\n                          ) === undefined && (\n                            <div\n                              onClick={() => this.props.changeLocation(item)}\n                              className=\"btn cursor-pointer bg-yellow-700 hover:bg-yellow-50 border border-yellow-700 hover:text-yellow-700 text-white text-sm w-36 text-center\"\n                            >\n                              Choose location\n                            </div>\n                          )}\n                        </div>\n                      )}\n                      {this.props.candidateExam.user_exams_done.find(\n                        (itm) => itm.course === item.course_id\n                      ) !== undefined &&\n                        this.props.candidateExam.user_exams_done.find(\n                          (itm) => itm.course === item.course_id\n                        )?.user_status !== UserExamStatus.Editing && (\n                          <div className=\"flex flex-row gap-2 items-center\">\n                            <div\n                              className={`text-blue-600 flex flex-row items-center gap-2 text-right ml-2`}\n                            >\n                              <div className=\"flex flex-col gap-0\">\n                                <span className=\"text-sm\">Marks</span>\n                                <span className=\"text-lg font-bold -mt-1\">\n                                  {this.props.candidateExam.user_exams_done\n                                    .find(\n                                      (itm) => itm.course === item.course_id\n                                    )\n                                    ?.total_marks.toFixed(2)}\n                                  %\n                                </span>\n                              </div>\n                            </div>\n                          </div>\n                        )}\n                    </div>\n                  </div>\n                </div>\n              ))\n            )}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default PreparedExams;\n","import React, { Component } from \"react\";\nimport { HiInformationCircle } from \"react-icons/hi\";\nimport { IoMdInformationCircleOutline } from \"react-icons/io\";\nimport { MdCheckCircle, MdPauseCircleFilled } from \"react-icons/md\";\nimport { RiCheckboxBlankCircleFill, RiErrorWarningLine } from \"react-icons/ri\";\nimport { applicationPeriodsStoreInterface } from \"../../../actions/application_periods\";\nimport {\n  candidateExamStoreInterface,\n  InitialExamDetails,\n} from \"../../../actions/candidate_exam\";\nimport { courseStoreInterface } from \"../../../actions/course\";\nimport { positionsStoreInterface } from \"../../../actions/positions\";\nimport Loading from \"../../../components/Loading/Loading\";\nimport {\n  applicationExamAPI,\n  ApplicationStates,\n  GetApplicationsAPI,\n} from \"../../../interfaces/application\";\nimport { course } from \"../../../interfaces/course\";\nimport { UserExamStatus } from \"../../../interfaces/exam\";\nimport { PositionAPI } from \"../../../interfaces/position\";\nimport { DATE } from \"../../../utils/functions\";\nimport { ExamTimeStatus, validateExamDate } from \"../../../utils/question_bank\";\n\ninterface ActiveExamsProps {\n  selectedPosition: PositionAPI;\n  selectedExams: applicationExamAPI[] | null;\n  findExam: (courseId: string) => InitialExamDetails | null;\n  loadingExams: boolean;\n  loadingExamsDone: boolean;\n  setMaxExamModal: (status: boolean) => void;\n  course: courseStoreInterface;\n  setSelectedCourse: (course: course | null) => void;\n  candidateExam: candidateExamStoreInterface;\n  positions: positionsStoreInterface;\n  periods: applicationPeriodsStoreInterface;\n  setSelectedPosition: (position: PositionAPI) => void;\n  setSelectedCandidateExam: (exam_id: string) => void;\n  selectedApplicationDetails: GetApplicationsAPI;\n}\ninterface ActiveExamsState {}\n\nexport class ActiveExams extends Component<ActiveExamsProps, ActiveExamsState> {\n  render() {\n    let ExamsDoneFilterTemp = this.props.selectedPosition.courses.filter(\n      (itm) =>\n        this.props.findExam(itm.course_id) !== null &&\n        this.props.candidateExam.user_exams_done.filter(\n          (ex) =>\n            ex.course === itm.course_id &&\n            validateExamDate(\n              ex.exam_date,\n              ex.exam_start_time,\n              ex.exam_end_time\n            ) === ExamTimeStatus.Online\n        ).length > 0\n    );\n    let ActiveExamsFilter = ExamsDoneFilterTemp.filter(\n      (check) =>\n        this.props.candidateExam.user_exams_done.filter(\n          (itm) => itm.course === check.course_id\n        ) !== undefined &&\n        (this.props.candidateExam.user_exams_done.find(\n          (itm) => itm.course === check.course_id\n        )?.user_status === UserExamStatus.Editing ||\n          this.props.candidateExam.user_exams_done.find(\n            (itm) => itm.course === check.course_id\n          )?.user_status === UserExamStatus.Paused)\n    );\n    return (\n      <>\n        {ActiveExamsFilter.length > 0 ? (\n          <div className=\"bg-white px-2 py-2\">\n            <div className=\"bg-gray-100 rounded px-2 py-2\">\n              <div className=\"flex flex-row items-center justify-between text-xl mb-3 mx-2\">\n                <span className=\"font-bold \">Active exam</span>\n                <span className=\"font-bold bg-white text-green-600 rounded-full px-2 text-base border border-gray-200\">\n                  {this.props.selectedPosition !== null &&\n                    this.props.selectedExams !== null &&\n                    this.props.loadingExams === false &&\n                    ActiveExamsFilter.length}\n                </span>\n              </div>\n              <div className=\"flex flex-col gap-2\">\n                {this.props.selectedPosition === null ||\n                this.props.selectedExams === null ||\n                this.props.loadingExams === true ? (\n                  <Loading />\n                ) : ActiveExamsFilter.length === 0 ? (\n                  <div className=\"border border-gray-200 text-gray-400 font-bold rounded-md px-3 py-3 text-center\">\n                    <div className=\"flex justify-center items-center w-full text-4xl\">\n                      <IoMdInformationCircleOutline />\n                    </div>\n                    <div className=\"text-gray-500\">No exams found!</div>\n                  </div>\n                ) : (\n                  ActiveExamsFilter.map((item, i) => (\n                    <div\n                      key={i + 1}\n                      className={`px-3 py-2 rounded group bg-white border-2 border-green-600 hover:bg-green-50`}\n                    >\n                      <div className=\"grid md:grid-cols-12 gap-2\">\n                        {/* First col */}\n                        <div className=\"col-span-12 md:col-span-6 lg:col-span-4 flex fex-row items-center gap-3\">\n                          {this.props.candidateExam.user_exams_done.find(\n                            (itm) => itm.course === item.course_id\n                          ) !== undefined &&\n                            this.props.candidateExam.user_exams_done.find(\n                              (itm) => itm.course === item.course_id\n                            )?.user_status === UserExamStatus.Editing && (\n                              <div className=\"flex flex-row gap-2 items-center\">\n                                <div\n                                  className={`text-green-600 flex flex-row items-center gap-2 text-right ml-2`}\n                                >\n                                  <HiInformationCircle className=\"text-4xl\" />\n                                </div>\n                              </div>\n                            )}\n                          {this.props.candidateExam.user_exams_done.find(\n                            (itm) => itm.course === item.course_id\n                          ) !== undefined &&\n                            this.props.candidateExam.user_exams_done.find(\n                              (itm) => itm.course === item.course_id\n                            )?.user_status === UserExamStatus.Done && (\n                              <div className=\"flex flex-row gap-2 items-center\">\n                                <div\n                                  className={`text-blue-600 flex flex-row items-center gap-2 text-right ml-2`}\n                                >\n                                  <MdCheckCircle className=\"text-4xl\" />\n                                </div>\n                              </div>\n                            )}\n                          {this.props.candidateExam.user_exams_done.find(\n                            (itm) => itm.course === item.course_id\n                          ) !== undefined &&\n                            this.props.candidateExam.user_exams_done.find(\n                              (itm) => itm.course === item.course_id\n                            )?.user_status === UserExamStatus.Removed && (\n                              <div className=\"flex flex-row gap-2 items-center\">\n                                <div\n                                  className={`text-yellow-800 flex flex-row items-center gap-2 text-right ml-2`}\n                                >\n                                  <MdCheckCircle className=\"text-4xl\" />\n                                </div>\n                              </div>\n                            )}\n                          {this.props.candidateExam.user_exams_done.find(\n                            (itm) => itm.course === item.course_id\n                          ) !== undefined &&\n                            this.props.candidateExam.user_exams_done.find(\n                              (itm) => itm.course === item.course_id\n                            )?.user_status === UserExamStatus.Paused && (\n                              <div className=\"flex flex-row gap-2 items-center\">\n                                <div\n                                  className={`text-green-500 flex flex-row items-center gap-2 text-right ml-2`}\n                                >\n                                  <MdPauseCircleFilled className=\"text-4xl\" />\n                                </div>\n                              </div>\n                            )}\n                          {this.props.candidateExam.user_exams_done.find(\n                            (itm) => itm.course === item.course_id\n                          ) === undefined &&\n                            this.props.findExam(item.course_id) !== null &&\n                            this.props.findExam(item.course_id)?.id !==\n                              undefined && (\n                              <div className=\"flex flex-row gap-2 items-center\">\n                                <div\n                                  className={`text-blue-600 flex flex-row items-center gap-2 text-right ml-2 animate-ping`}\n                                >\n                                  <HiInformationCircle className=\"text-4xl\" />\n                                </div>\n                              </div>\n                            )}\n                          {this.props.candidateExam.user_exams_done.find(\n                            (itm) => itm.course === item.course_id\n                          ) === undefined &&\n                            (this.props.findExam(item.course_id) === null ||\n                              this.props.findExam(item.course_id)?.id ===\n                                undefined) && (\n                              <div className=\"flex flex-row gap-2 items-center\">\n                                <div\n                                  className={`text-gray-300 group-hover:text-white flex flex-row items-center gap-2 text-right ml-2`}\n                                >\n                                  <RiCheckboxBlankCircleFill className=\"text-4xl\" />\n                                </div>\n                              </div>\n                            )}\n                          <div className=\"flex flex-col\">\n                            <div className={`font-bold text-gray-600 truncate`}>\n                              {item.course_name}\n                            </div>\n                            <div className=\"flex flex-row justify-start items-center gap-2\">\n                              <span className=\"text-gray-500 text-xs\">\n                                Exam date:{\" \"}\n                              </span>\n                              <div className=\"flex flex-row items-center gap-2\">\n                                <span className=\"font-bold text-green-600 text-sm\">\n                                  {DATE(\n                                    this.props.findExam(item.course_id)!\n                                      .exam_date,\n                                    \"DD/MM/YYYY\"\n                                  )}\n                                </span>\n                                <span\n                                  className={`bg-gray-100 text-green-600 font-bold px-2 py-1 rounded-full text-sm`}\n                                >\n                                  {\n                                    this.props.findExam(item.course_id)!\n                                      .start_time\n                                  }\n                                </span>\n                                <span\n                                  className={`bg-gray-100 text-gray-800 font-bold px-2 py-1 rounded-full text-sm underline`}\n                                >\n                                  {\n                                    this.props.candidateExam.user_exams_done.find(\n                                      (x) => x.course === item.course_id\n                                    )?.user_status\n                                  }\n                                </span>\n                              </div>\n                            </div>\n                          </div>\n                        </div>\n                        {/* Second col */}\n                        <div className=\"col-span-12 md:col-span-6 lg:col-span-4 flex flex-col items-start justify-center\">\n                          {this.props.selectedExams === null ? (\n                            \"\"\n                          ) : this.props.selectedExams.find(\n                              (itm) => itm.course_id === item.course_id\n                            ) !== undefined ? (\n                            <>\n                              <div className=\"flex flex-row justify-start items-center gap-2\">\n                                <span className=\"text-gray-500 text-xs\">\n                                  Proctoring type:{\" \"}\n                                </span>\n                                <span className=\"text-gray-700 font-bold text-sm\">\n                                  {this.props.selectedExams === null\n                                    ? \"\"\n                                    : this.props.selectedExams.find(\n                                        (itm) =>\n                                          itm.course_id === item.course_id\n                                      ) !== undefined &&\n                                      this.props.selectedExams.find(\n                                        (itm) =>\n                                          itm.course_id === item.course_id\n                                      )?.proctoring_type}\n                                </span>\n                              </div>\n                              <div className=\"flex flex-col justify-center items-start gap-2\">\n                                {/* <span className=\"text-gray-500 text-xs\">\n                                  Exam location:{\" \"}\n                                </span> */}\n                                <span\n                                  className={`text-gray-700 font-bold text-sm`}\n                                >\n                                  Center:{\" \"}\n                                  {this.props.selectedExams === null ? (\n                                    \"\"\n                                  ) : this.props.selectedExams.find(\n                                      (itm) => itm.course_id === item.course_id\n                                    ) !== undefined ? (\n                                    this.props.selectedExams.find(\n                                      (itm) => itm.course_id === item.course_id\n                                    )?.center_name\n                                  ) : (\n                                    <span className=\"italic text-xs\">\n                                      No location selected\n                                    </span>\n                                  )}\n                                </span>\n                                <span\n                                  className={`text-gray-700 font-bold text-sm`}\n                                >\n                                  Room:{\" \"}\n                                  {this.props.selectedExams === null ? (\n                                    \"\"\n                                  ) : this.props.selectedExams.find(\n                                      (itm) => itm.course_id === item.course_id\n                                    ) !== undefined ? (\n                                    this.props.selectedExams.find(\n                                      (itm) => itm.course_id === item.course_id\n                                    )?.room_number === 0 ? (\n                                      <span className=\"bg-yellow-100 text-yellow-700 font-bold px-2 py-1 rounded\">\n                                        Waiting room, you are advised to choose\n                                        another center\n                                      </span>\n                                    ) : (\n                                      <span className=\"text-blue-600 bg-blue-100 px-2 py-1 rounded\">\n                                        No:{\" \"}\n                                        {\n                                          this.props.selectedExams.find(\n                                            (itm) =>\n                                              itm.course_id === item.course_id\n                                          )?.room_number\n                                        }\n                                      </span>\n                                    )\n                                  ) : (\n                                    <span className=\"italic text-xs\">\n                                      No location selected\n                                    </span>\n                                  )}\n                                </span>\n                              </div>\n                            </>\n                          ) : (\n                            <div className=\"flex flex-row gap-2 items-center justify-start\">\n                              <RiErrorWarningLine className=\"text-xl text-yellow-700\" />\n                              <span className=\"text-yellow-700 italic text-sm\">\n                                No location selected\n                              </span>\n                            </div>\n                          )}\n                        </div>\n                        {/* Third col */}\n                        <div className=\"col-span-12 md:col-span-12 lg:col-span-4 flex items-center justify-start lg:justify-end\">\n                          {this.props.selectedExams === null ? (\n                            \"\"\n                          ) : this.props.selectedExams.find(\n                              (itm) => itm.course_id === item.course_id\n                            ) !== undefined ? (\n                            <div className=\"flex flex-row justify-start md:justify-end items-center gap-2\">\n                              {this.props.loadingExams === true ||\n                              this.props.loadingExamsDone === true ? (\n                                <div className=\"text-gray-500 font-bold bg-gray-100 text-sm rounded px-3 py-2\">\n                                  Checking...\n                                </div>\n                              ) : (\n                                this.props.candidateExam.user_exams_done.find(\n                                  (itm) => itm.course === item.course_id\n                                ) === undefined && (\n                                  <div\n                                    onClick={() => {\n                                      this.setState({\n                                        selectedCourse: item,\n                                        centersModal: true,\n                                      });\n                                      this.props.setMaxExamModal(true);\n                                    }}\n                                    className=\"btn text-blue-600 border border-white cursor-pointer group-hover:bg-blue-600 hover:bg-blue-800 group-hover:text-white bg-blue-100 text-sm w-40 text-center\"\n                                  >\n                                    Change location\n                                  </div>\n                                )\n                              )}\n                              {this.props.loadingExams === true ||\n                              this.props.loadingExamsDone === true ? (\n                                <div className=\"text-gray-500 font-bold bg-gray-100 text-sm rounded px-3 py-2\">\n                                  Checking...\n                                </div>\n                              ) : (\n                                this.props.periods.selected_period !== null &&\n                                this.props.periods.selected_period.is_active ===\n                                  true &&\n                                this.props.findExam(item.course_id) !== null &&\n                                this.props.findExam(item.course_id)?.id !==\n                                  undefined &&\n                                this.props.selectedApplicationDetails\n                                  .application_status ===\n                                  ApplicationStates.Shortlisted && (\n                                  <div\n                                    onClick={() => {\n                                      if (\n                                        this.props.selectedPosition !== null\n                                      ) {\n                                        if (\n                                          this.props.positions\n                                            .selected_position === null ||\n                                          this.props.positions.selected_position\n                                            .position_id !==\n                                            this.props.selectedPosition\n                                              .position_id\n                                        ) {\n                                          this.props.setSelectedPosition(\n                                            this.props.selectedPosition\n                                          );\n                                        }\n                                        this.props.selectedExams !== null &&\n                                          this.props.course.courses &&\n                                          this.props.setSelectedCourse(\n                                            this.props.course.courses.find(\n                                              (itm) =>\n                                                itm.course_id === item.course_id\n                                            )!\n                                          );\n                                        this.props.selectedExams !== null &&\n                                          this.props.findExam(\n                                            item.course_id\n                                          ) !== null &&\n                                          this.props.setSelectedCandidateExam(\n                                            this.props.findExam(item.course_id)!\n                                              .id\n                                          );\n                                      }\n                                    }}\n                                    className={`btn border border-green-500 bg-green-600 hover:text-green-600 text-white cursor-pointer hover:bg-white text-sm w-max text-center`}\n                                  >\n                                    Back to exam\n                                  </div>\n                                )\n                              )}\n                            </div>\n                          ) : (\n                            <div className=\"flex flex-row justify-start md:justify-end items-center gap-2\">\n                              {this.props.candidateExam.user_exams_done.find(\n                                (itm) => itm.course === item.course_id\n                              ) === undefined && (\n                                <div\n                                  onClick={() =>\n                                    this.setState({\n                                      selectedCourse: item,\n                                      centersModal: true,\n                                    })\n                                  }\n                                  className=\"btn cursor-pointer bg-yellow-700 hover:bg-yellow-50 border border-yellow-700 hover:text-yellow-700 text-white text-sm w-36 text-center\"\n                                >\n                                  Choose location\n                                </div>\n                              )}\n                            </div>\n                          )}\n                        </div>\n                      </div>\n                    </div>\n                  ))\n                )}\n              </div>\n            </div>\n          </div>\n        ) : (\n          <div></div>\n        )}\n      </>\n    );\n  }\n}\n\nexport default ActiveExams;\n","import React, { Component } from \"react\";\nimport { HiInformationCircle } from \"react-icons/hi\";\nimport { IoMdInformationCircleOutline } from \"react-icons/io\";\nimport { MdCheckCircle, MdPauseCircleFilled } from \"react-icons/md\";\nimport { RiCheckboxBlankCircleFill, RiErrorWarningLine } from \"react-icons/ri\";\nimport { applicationPeriodsStoreInterface } from \"../../../actions/application_periods\";\nimport {\n  candidateExamStoreInterface,\n  InitialExamDetails,\n} from \"../../../actions/candidate_exam\";\nimport { courseStoreInterface } from \"../../../actions/course\";\nimport { positionsStoreInterface } from \"../../../actions/positions\";\nimport Loading from \"../../../components/Loading/Loading\";\nimport { applicationExamAPI } from \"../../../interfaces/application\";\nimport { course } from \"../../../interfaces/course\";\nimport { ExamAnswerSheetDone, UserExamStatus } from \"../../../interfaces/exam\";\nimport { PositionAPI, PositionAPICourse } from \"../../../interfaces/position\";\nimport { DATE } from \"../../../utils/functions\";\nimport { ExamTimeStatus, validateExamDate } from \"../../../utils/question_bank\";\nimport { ExamDoneDetailsAnswers } from \"../../CandidateExams/CandidateExams\";\n\ninterface ExamsDoneProps {\n  selectedPosition: PositionAPI;\n  selectedExams: applicationExamAPI[] | null;\n  findExam: (courseId: string) => InitialExamDetails | null;\n  loadingExams: boolean;\n  loadingExamsDone: boolean;\n  setMaxExamModal: (status: boolean) => void;\n  course: courseStoreInterface;\n  setSelectedCourse: (course: course | null) => void;\n  candidateExam: candidateExamStoreInterface;\n  positions: positionsStoreInterface;\n  periods: applicationPeriodsStoreInterface;\n  setSelectedPosition: (position: PositionAPI) => void;\n  setSelectedCandidateExam: (exam_id: string) => void;\n  viewMarksDetails: (selectedExamDetails: ExamDoneDetailsAnswers) => void;\n}\ninterface ExamsDoneState {\n  loading: boolean;\n  selectedCourse: PositionAPICourse | null;\n  centersModal: boolean;\n}\n\nexport class ExamsDone extends Component<ExamsDoneProps, ExamsDoneState> {\n  constructor(props: ExamsDoneProps) {\n    super(props);\n\n    this.state = {\n      loading: false,\n      centersModal: false,\n      selectedCourse: null,\n    };\n  }\n  viewMarksDetailsFn = (Exam: ExamAnswerSheetDone) => {\n    const examTest = this.props.candidateExam.user_exams_temp.find(\n      (itm) => itm.course === Exam.course && itm.period === Exam.period\n    );\n    if (examTest !== undefined) {\n      let courseSelected = this.props.selectedPosition.courses.find(\n        (itm) => itm.course_id === examTest.course\n      );\n      if (courseSelected !== undefined) {\n        this.props.viewMarksDetails({\n          course: examTest.course,\n          course_name: courseSelected.course_name,\n          discription: examTest.discription,\n          termes: examTest.termes,\n          rules: examTest.rules,\n          period: Exam.period,\n          exam_date: Exam.exam_date,\n        });\n      }\n    }\n  };\n  render() {\n    let ExamsDoneFilter = this.props.selectedPosition.courses.filter(\n      (itm) =>\n        this.props.findExam(itm.course_id) !== null &&\n        this.props.candidateExam.user_exams_done.filter(\n          (ex) =>\n            ex.course === itm.course_id &&\n            (ex.user_status === UserExamStatus.Done ||\n              ex.user_status === UserExamStatus.Removed ||\n              validateExamDate(\n                ex.exam_date,\n                ex.exam_start_time,\n                ex.exam_end_time\n              ) === ExamTimeStatus.Expired)\n        ).length > 0\n    );\n    // console.log(\"Done ex: \", ExamsDoneFilter);\n    return (\n      <div className=\"bg-white px-2 py-2\">\n        <div className=\"bg-gray-100 rounded px-2 py-2\">\n          <div className=\"flex flex-row items-center justify-between text-xl mb-3 mx-2\">\n            <span className=\"font-bold \">Completed exams</span>\n            <span className=\"font-bold bg-white text-gray-600 rounded-full px-2 text-base border border-gray-200\">\n              {this.props.selectedPosition !== null &&\n                this.props.selectedExams !== null &&\n                this.props.loadingExams === false &&\n                ExamsDoneFilter.length}\n            </span>\n          </div>\n          <div className=\"flex flex-col gap-2\">\n            {this.props.selectedPosition === null ||\n            this.props.selectedExams === null ||\n            this.props.loadingExams === true ? (\n              <Loading />\n            ) : ExamsDoneFilter.length === 0 ? (\n              <div className=\"border border-gray-200 text-gray-400 font-bold rounded-md px-3 py-3 text-center\">\n                <div className=\"flex justify-center items-center w-full text-4xl\">\n                  <IoMdInformationCircleOutline />\n                </div>\n                <div className=\"text-gray-500\">No exams found!</div>\n              </div>\n            ) : (\n              ExamsDoneFilter.map((item, i) => (\n                <div key={i + 1} className={`px-3 py-2 rounded group bg-white`}>\n                  <div className=\"grid md:grid-cols-12 gap-2\">\n                    {/* First col */}\n                    <div className=\"col-span-12 md:col-span-6 lg:col-span-4 flex fex-row items-center gap-3\">\n                      {this.props.candidateExam.user_exams_done.find(\n                        (itm) => itm.course === item.course_id\n                      ) !== undefined &&\n                        this.props.candidateExam.user_exams_done.find(\n                          (itm) => itm.course === item.course_id\n                        )?.user_status === UserExamStatus.Editing && (\n                          <div className=\"flex flex-row gap-2 items-center\">\n                            <div\n                              className={`text-gray-300 flex flex-row items-center gap-2 text-right ml-2`}\n                            >\n                              <HiInformationCircle className=\"text-4xl\" />\n                            </div>\n                          </div>\n                        )}\n                      {this.props.candidateExam.user_exams_done.find(\n                        (itm) => itm.course === item.course_id\n                      ) !== undefined &&\n                        this.props.candidateExam.user_exams_done.find(\n                          (itm) => itm.course === item.course_id\n                        )?.user_status === UserExamStatus.Done && (\n                          <div className=\"flex flex-row gap-2 items-center\">\n                            <div\n                              className={`text-blue-600 flex flex-row items-center gap-2 text-right ml-2`}\n                            >\n                              <MdCheckCircle className=\"text-4xl\" />\n                            </div>\n                          </div>\n                        )}\n                      {this.props.candidateExam.user_exams_done.find(\n                        (itm) => itm.course === item.course_id\n                      ) !== undefined &&\n                        this.props.candidateExam.user_exams_done.find(\n                          (itm) => itm.course === item.course_id\n                        )?.user_status === UserExamStatus.Removed && (\n                          <div className=\"flex flex-row gap-2 items-center\">\n                            <div\n                              className={`text-gray-300 flex flex-row items-center gap-2 text-right ml-2`}\n                            >\n                              <MdCheckCircle className=\"text-4xl\" />\n                            </div>\n                          </div>\n                        )}\n                      {this.props.candidateExam.user_exams_done.find(\n                        (itm) => itm.course === item.course_id\n                      ) !== undefined &&\n                        this.props.candidateExam.user_exams_done.find(\n                          (itm) => itm.course === item.course_id\n                        )?.user_status === UserExamStatus.Paused && (\n                          <div className=\"flex flex-row gap-2 items-center\">\n                            <div\n                              className={`text-gray-300 flex flex-row items-center gap-2 text-right ml-2`}\n                            >\n                              <MdPauseCircleFilled className=\"text-4xl\" />\n                            </div>\n                          </div>\n                        )}\n                      {this.props.candidateExam.user_exams_done.find(\n                        (itm) => itm.course === item.course_id\n                      ) === undefined &&\n                        this.props.findExam(item.course_id) !== null &&\n                        this.props.findExam(item.course_id)?.id !==\n                          undefined && (\n                          <div className=\"flex flex-row gap-2 items-center\">\n                            <div\n                              className={`text-blue-600 flex flex-row items-center gap-2 text-right ml-2 animate-ping`}\n                            >\n                              <HiInformationCircle className=\"text-4xl\" />\n                            </div>\n                          </div>\n                        )}\n                      {this.props.candidateExam.user_exams_done.find(\n                        (itm) => itm.course === item.course_id\n                      ) === undefined &&\n                        (this.props.findExam(item.course_id) === null ||\n                          this.props.findExam(item.course_id)?.id ===\n                            undefined) && (\n                          <div className=\"flex flex-row gap-2 items-center\">\n                            <div\n                              className={`text-gray-300 group-hover:text-white flex flex-row items-center gap-2 text-right ml-2`}\n                            >\n                              <RiCheckboxBlankCircleFill className=\"text-4xl\" />\n                            </div>\n                          </div>\n                        )}\n                      <div className=\"flex flex-col\">\n                        <div className={`font-bold text-gray-600 truncate`}>\n                          {item.course_name}\n                        </div>\n                        <div className=\"flex flex-row justify-start items-center gap-2\">\n                          <span className=\"text-gray-500 text-xs\">\n                            Exam date:{\" \"}\n                          </span>\n                          <div className=\"flex flex-row items-center gap-2\">\n                            <span className=\"font-bold text-gray-800 text-sm\">\n                              {DATE(\n                                this.props.findExam(item.course_id)!.exam_date,\n                                \"DD/MM/YYYY\"\n                              )}\n                            </span>\n                            <span\n                              className={`bg-gray-100 text-gray-800 font-bold px-2 py-1 rounded-full text-sm`}\n                            >\n                              {this.props.findExam(item.course_id)!.start_time}\n                            </span>\n                            <span\n                              className={`bg-gray-100 text-gray-800 font-bold px-2 py-1 rounded-full text-sm underline`}\n                            >\n                              {this.props.candidateExam.user_exams_done.find(\n                                (x) => x.course === item.course_id\n                              ) !== undefined\n                                ? validateExamDate(\n                                    this.props.candidateExam.user_exams_done.find(\n                                      (x) => x.course === item.course_id\n                                    )!.exam_date,\n                                    this.props.candidateExam.user_exams_done.find(\n                                      (x) => x.course === item.course_id\n                                    )!.exam_start_time,\n                                    this.props.candidateExam.user_exams_done.find(\n                                      (x) => x.course === item.course_id\n                                    )!.exam_end_time\n                                  ) === ExamTimeStatus.Expired &&\n                                  (this.props.candidateExam.user_exams_done.find(\n                                    (x) => x.course === item.course_id\n                                  )?.user_status === UserExamStatus.Editing\n                                    ? \"Not submitted\"\n                                    : this.props.candidateExam.user_exams_done.find(\n                                        (x) => x.course === item.course_id\n                                      )?.user_status === UserExamStatus.Paused)\n                                  ? \"Paused\"\n                                  : this.props.candidateExam.user_exams_done.find(\n                                      (x) => x.course === item.course_id\n                                    )?.user_status\n                                : \"\"}\n                            </span>\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                    {/* Second col */}\n                    <div className=\"col-span-12 md:col-span-6 lg:col-span-4 flex flex-col items-start justify-center\">\n                      {this.props.selectedExams === null ? (\n                        \"\"\n                      ) : this.props.selectedExams.find(\n                          (itm) => itm.course_id === item.course_id\n                        ) !== undefined ? (\n                        <>\n                          <div className=\"flex flex-row justify-start items-center gap-2\">\n                            <span className=\"text-gray-500 text-xs\">\n                              Proctoring type:{\" \"}\n                            </span>\n                            <span className=\"text-gray-700 font-bold text-sm\">\n                              {this.props.selectedExams === null\n                                ? \"\"\n                                : this.props.selectedExams.find(\n                                    (itm) => itm.course_id === item.course_id\n                                  ) !== undefined &&\n                                  this.props.selectedExams.find(\n                                    (itm) => itm.course_id === item.course_id\n                                  )?.proctoring_type}\n                            </span>\n                          </div>\n                          <div className=\"flex flex-col justify-center items-start gap-2\">\n                            {/* <span className=\"text-gray-500 text-xs\">\n                              Exam location:{\" \"}\n                            </span> */}\n                            <span className={`text-gray-700 font-bold text-sm`}>\n                              Center:{\" \"}\n                              {this.props.selectedExams === null ? (\n                                \"\"\n                              ) : this.props.selectedExams.find(\n                                  (itm) => itm.course_id === item.course_id\n                                ) !== undefined ? (\n                                this.props.selectedExams.find(\n                                  (itm) => itm.course_id === item.course_id\n                                )?.center_name\n                              ) : (\n                                <span className=\"italic text-xs\">\n                                  No location selected\n                                </span>\n                              )}\n                            </span>\n                            <span className={`text-gray-700 font-bold text-sm`}>\n                              Room:{\" \"}\n                              {this.props.selectedExams === null ? (\n                                \"\"\n                              ) : this.props.selectedExams.find(\n                                  (itm) => itm.course_id === item.course_id\n                                ) !== undefined ? (\n                                this.props.selectedExams.find(\n                                  (itm) => itm.course_id === item.course_id\n                                )?.room_number === 0 ? (\n                                  <span className=\"bg-yellow-100 text-yellow-700 font-bold px-2 py-1 rounded\">\n                                    Waiting room, you are advised to choose\n                                    another center\n                                  </span>\n                                ) : (\n                                  <span className=\"text-blue-600 bg-blue-100 px-2 py-1 rounded\">\n                                    No:{\" \"}\n                                    {\n                                      this.props.selectedExams.find(\n                                        (itm) =>\n                                          itm.course_id === item.course_id\n                                      )?.room_number\n                                    }\n                                  </span>\n                                )\n                              ) : (\n                                <span className=\"italic text-xs\">\n                                  No location selected\n                                </span>\n                              )}\n                            </span>\n                          </div>\n                        </>\n                      ) : (\n                        <div className=\"flex flex-row gap-2 items-center justify-start\">\n                          <RiErrorWarningLine className=\"text-xl text-yellow-700\" />\n                          <span className=\"text-yellow-700 italic text-sm\">\n                            No location selected\n                          </span>\n                        </div>\n                      )}\n                    </div>\n                    {/* Third col */}\n                    <div className=\"col-span-12 md:col-span-12 lg:col-span-4 items-center justify-start lg:justify-end\">\n                      {this.props.selectedExams === null ? (\n                        \"\"\n                      ) : this.props.selectedExams.find(\n                          (itm) => itm.course_id === item.course_id\n                        ) !== undefined ? (\n                        <div className=\"flex flex-row justify-start md:justify-end items-center gap-2\">\n                          {this.props.loadingExams === true ||\n                          this.props.loadingExamsDone === true ? (\n                            <div className=\"text-gray-500 font-bold bg-gray-100 text-sm rounded px-3 py-2\">\n                              Checking...\n                            </div>\n                          ) : (\n                            this.props.candidateExam.user_exams_done.find(\n                              (itm) => itm.course === item.course_id\n                            ) === undefined && (\n                              <div\n                                onClick={() => {\n                                  this.setState({\n                                    selectedCourse: item,\n                                    centersModal: true,\n                                  });\n                                  this.props.setMaxExamModal(true);\n                                }}\n                                className=\"btn text-blue-600 border border-white cursor-pointer group-hover:bg-blue-600 hover:bg-blue-800 group-hover:text-white bg-blue-100 text-sm w-40 text-center\"\n                              >\n                                Change location\n                              </div>\n                            )\n                          )}\n                        </div>\n                      ) : (\n                        <div className=\"flex flex-row justify-start md:justify-end items-center gap-2\">\n                          {this.props.candidateExam.user_exams_done.find(\n                            (itm) => itm.course === item.course_id\n                          ) === undefined && (\n                            <div\n                              onClick={() =>\n                                this.setState({\n                                  selectedCourse: item,\n                                  centersModal: true,\n                                })\n                              }\n                              className=\"btn cursor-pointer bg-yellow-700 hover:bg-yellow-50 border border-yellow-700 hover:text-yellow-700 text-white text-sm w-36 text-center\"\n                            >\n                              Choose location\n                            </div>\n                          )}\n                        </div>\n                      )}\n                      {this.props.candidateExam.user_exams_done.find(\n                        (itm) => itm.course === item.course_id\n                      ) !== undefined && (\n                        // this.props.candidateExam.user_exams_done.find(\n                        //   (itm) => itm.course === item.course_id\n                        // )?.user_status !== UserExamStatus.Editing &&\n                        <div className=\"flex flex-row gap-2 items-center justify-end h-full\">\n                          <div\n                            className={`text-blue-600 flex flex-row items-center gap-2 text-right ml-2`}\n                          >\n                            <div className=\"flex flex-col gap-0\">\n                              <span className=\"text-sm\">Marks</span>\n                              <span className=\"text-lg font-bold -mt-1\">\n                                {this.props.candidateExam.user_exams_done\n                                  .find((itm) => itm.course === item.course_id)\n                                  ?.total_marks.toFixed(2)}\n                                %\n                              </span>\n                            </div>\n                            <div\n                              onClick={() =>\n                                this.viewMarksDetailsFn(\n                                  this.props.candidateExam.user_exams_done.find(\n                                    (itm) => itm.course === item.course_id\n                                  )!\n                                )\n                              }\n                              className=\"btn bg-blue-100 hover:bg-blue-200 cursor-pointer text-blue-700 hover:text-blue-900\"\n                            >\n                              Details\n                            </div>\n                          </div>\n                        </div>\n                      )}\n                    </div>\n                  </div>\n                </div>\n              ))\n            )}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default ExamsDone;\n","import React, { Component } from \"react\";\n\nimport { Fragment } from \"react\";\nimport { MdClose, MdHistory } from \"react-icons/md\";\nimport { Link, Redirect } from \"react-router-dom\";\nimport ChooseExamCenter, {\n  LocationTableInterface,\n} from \"../Application/ExamCenter/ChooseExamCenter\";\nimport { connect } from \"react-redux\";\nimport {\n  Auth,\n  loadExam,\n  examDataInterface,\n  PrepareExamsStoreInterface,\n  loadExamsList,\n  LocationsDataStoreInterface,\n  loadAllLocationsData,\n  setSelectedLocationData,\n  applicationPeriodsStoreInterface,\n  loadApplicationPeriods,\n  candidateExamStoreInterface,\n  setSelectedCandidateExam,\n  courseStoreInterface,\n  loadCourses,\n  setSelectedCourse,\n  InitializeExamDetails,\n  InitialExamDetails,\n  setSelectedPeriod,\n  setSelectedPosition,\n  positionsStoreInterface,\n  loadExamsDone,\n} from \"../../actions\";\nimport { StoreState } from \"../../reducers\";\nimport Loading from \"../../components/Loading/Loading\";\nimport {\n  ExamInterface,\n  examStatus,\n  UserExamStatus,\n} from \"../../interfaces/exam\";\nimport {\n  CandidateClaimInterface,\n  course,\n  PlansTypeKeys,\n  PositionAPI,\n  PositionAPICourse,\n} from \"../../interfaces/index\";\nimport {\n  applicationExamAPI,\n  applicationHistory,\n  ApplicationPeriodGet,\n  ApplicationStates,\n  GetApplicationsAPI,\n} from \"../../interfaces/application\";\nimport { sentExamInterface } from \"../Application/ExamCenter/ExamCenter\";\nimport { BsFileEarmarkText } from \"react-icons/bs\";\nimport { IoMdTrash } from \"react-icons/io\";\nimport ApplicationHistory from \"./ApplicationHistory/ApplicationHistory\";\nimport ExamDetails from \"./ExamDetails/ExamDetails\";\nimport { CheckIfExamDone, findTotalMarks } from \"../../utils/question_bank\";\nimport PreparedExams from \"./ExamStatus/PreparedExams\";\nimport ActiveExams from \"./ExamStatus/ActiveExams\";\nimport ExamsDone from \"./ExamStatus/ExamsDone\";\nimport { IoHandLeftSharp } from \"react-icons/io5\";\nimport { isClaimAllowed } from \"../Claimings/Candidate/ClaimForm\";\nimport ClaimFormComponent from \"../../components/ClaimForm/ClaimFormComponent\";\nimport { ClaimingReducerType } from \"../../reducers/claiming\";\nimport { getMyClaims } from \"../../actions/claiming\";\nimport { ExamDoneDetailsAnswers } from \"../CandidateExams/CandidateExams\";\nimport CandidateAnswersDetails from \"../../components/AnswersDetails/CandidateAnswersDetails\";\n\ninterface PostExamsProps {\n  doExam: examDataInterface;\n  auth: Auth;\n  loadExam: (user_id: string, exam: ExamInterface) => void;\n  selectedPosition: PositionAPI;\n  selectedExams: applicationExamAPI[] | null;\n  selected_application: string | null;\n  updateLocation: (application_id: string, exams: sentExamInterface[]) => void;\n  changeLocationError: string | null;\n  loading: boolean;\n  incrementIncomplete: () => void;\n  applicationHistory: applicationHistory[] | undefined;\n  deleteApplication: (id: string) => void;\n  selectedApplicationDetails: GetApplicationsAPI | null;\n  locationsData: LocationsDataStoreInterface;\n  loadAllLocationsData: (callback: (loading: boolean) => void) => void;\n  setSelectedLocationData: (locationData: LocationTableInterface) => void;\n  periods: applicationPeriodsStoreInterface;\n  loadApplicationPeriods: (callback: (loading: boolean) => void) => void;\n  candidateExam: candidateExamStoreInterface;\n  setSelectedCandidateExam: (exam_id: string) => void;\n  course: courseStoreInterface;\n  loadCourses: (callback: (loading: boolean) => void) => void;\n  setSelectedCourse: (course: course | null) => void;\n  InitializeExamDetails: (\n    periodId: string,\n    courseId: string,\n    district_id: string,\n    center_id: string,\n    room_id: string,\n    position_id: string,\n    callback: (loading: boolean) => void\n  ) => void;\n  setSelectedPeriod: (period: ApplicationPeriodGet) => void;\n  positions: positionsStoreInterface;\n  setSelectedPosition: (position: PositionAPI) => void;\n  loadExamsDone: (\n    periodId: string,\n    userId: string,\n    callback: (loading: boolean) => void\n  ) => void;\n  setMaxExamModal: (status: boolean) => void;\n  setDisplayDetailsModal: (status: boolean) => void;\n  claiming: ClaimingReducerType;\n  getMyClaims: Function;\n}\ninterface PostExamsState {\n  appointmentDetailsModal: {\n    status: boolean;\n    item: InitialExamDetails | null;\n  };\n  redirect: boolean;\n  displayResults: boolean;\n  changeLocation: {\n    status: boolean;\n    location: ExamInterface | null;\n  };\n  centersModal: boolean;\n  selectedCourse: course | null;\n  selectedLocation: applicationExamAPI | null;\n  applicationHistoryState: boolean;\n  loading: boolean;\n  loadingExams: boolean;\n  loadingExamsDone: boolean;\n  claim: boolean;\n  selectedExamDetails: ExamDoneDetailsAnswers | null;\n}\n\nclass _PostExams extends Component<PostExamsProps, PostExamsState> {\n  constructor(props: PostExamsProps) {\n    super(props);\n\n    this.state = {\n      appointmentDetailsModal: {\n        status: false,\n        item: null,\n      },\n      redirect: false,\n      displayResults: false,\n      changeLocation: {\n        status: false,\n        location: null,\n      },\n      centersModal: false,\n      selectedCourse: null,\n      selectedLocation: null,\n      applicationHistoryState: false,\n      loading: false,\n      loadingExams: false,\n      loadingExamsDone: true,\n      claim: false,\n      selectedExamDetails: null,\n    };\n  }\n\n  renderExam = (user_id: string, exam: ExamInterface) => {\n    exam.status = examStatus.Editing;\n    this.props.loadExam(user_id, exam);\n    this.setState({ redirect: true });\n  };\n\n  setClaim = (status: boolean) => {\n    this.setState({ claim: status });\n  };\n\n  closeModal = () => {\n    this.setState({ centersModal: false });\n    this.props.setMaxExamModal(false);\n  };\n\n  updateLocationFunction = (exams: sentExamInterface[]) => {\n    if (this.props.selected_application !== null) {\n      this.props.updateLocation(this.props.selected_application, exams);\n    }\n  };\n\n  setLoading = (status: boolean) => {\n    this.setState({ loading: status });\n  };\n  setLoadingExams = (status: boolean) => {\n    this.setState({ loadingExams: status });\n  };\n  setLoadingExamsDone = (status: boolean) => {\n    this.setState({ loadingExamsDone: status });\n  };\n\n  numberOfIncomplete = (\n    exams: sentExamInterface[],\n    courses: {\n      course_name: string;\n      course_code: string;\n      description: string;\n      school_levels: string[];\n      course_id: string;\n    }[]\n  ) => {\n    let count: number = 0;\n    for (let i in courses) {\n      if (\n        exams.filter((item) => item.course_id === courses[i].course_id)\n          .length === 0\n      ) {\n        count = count + 1;\n      }\n    }\n    return count;\n  };\n\n  findLocation = (\n    course_id: string,\n    course_name: string,\n    course_code: string,\n    location: LocationTableInterface,\n    exam_id: string\n  ) => {\n    return this.updateLocationFunction([\n      {\n        course_id: course_id,\n        proctoring_type: \"Center\",\n        center_id: location.center_id,\n        district_id: location.district_id,\n      },\n    ]);\n  };\n\n  findExam = (courseId: string) => {\n    if (this.props.candidateExam.user_exams_temp !== null) {\n      let current_temp = this.props.candidateExam.user_exams_temp.find(\n        (itm) => itm.course === courseId\n      );\n      let testDone = this.props.candidateExam.user_exams_done.find(\n        (itm) => itm.course === courseId\n      );\n      if (\n        current_temp !== undefined &&\n        (testDone === undefined ||\n          testDone.user_status === UserExamStatus.Editing ||\n          testDone.user_status === UserExamStatus.Paused ||\n          testDone.user_status === UserExamStatus.Done ||\n          testDone.user_status === UserExamStatus.Removed)\n      ) {\n        return current_temp;\n      }\n    }\n    return null;\n  };\n\n  findCourse = (course_id: string): applicationExamAPI | null => {\n    if (this.props.selectedExams !== null) {\n      let x: applicationExamAPI | null | undefined =\n        this.props.selectedExams.find(\n          (itm) =>\n            this.state.appointmentDetailsModal && itm.course_id === course_id\n        );\n      if (x !== undefined && x !== null) {\n        return x;\n      }\n    }\n    return null;\n  };\n\n  pendingCourses = () => {\n    let count = 0;\n    for (let course of this.props.selectedPosition.courses) {\n      if (this.props.candidateExam.user_exams_temp !== null) {\n        // let current_temp = this.props.candidateExam.user_exams_temp.find(itm => itm.course === course.course_id);\n        let testDone = this.props.candidateExam.user_exams_done.find(\n          (itm) => itm.course === course.course_id\n        );\n        if (testDone === undefined) {\n          count = count + 1;\n        }\n      }\n    }\n    return count;\n  };\n\n  changeLocation = (item: PositionAPICourse) => {\n    this.setState({ selectedCourse: item, centersModal: true });\n    this.props.setMaxExamModal(true);\n  };\n\n  InitializationFn = () => {\n    if (\n      this.props.periods.selected_period !== null &&\n      this.props.selectedPosition !== null\n    ) {\n      this.props.loadExamsDone(\n        this.props.periods.selected_period.session_plan_id,\n        this.props.auth.user.user_id,\n        this.setLoadingExamsDone\n      );\n      // if (this.state.loadingExamsDone === false) {\n      for (let course of this.props.selectedPosition.courses) {\n        let testDone = this.props.candidateExam.user_exams_temp.find(\n          (itm) => itm.course === course.course_id\n        );\n        if (testDone === undefined) {\n          let center_id = this.props.selectedExams?.find(\n            (itm) => itm.course_id === course.course_id\n          );\n          if (center_id !== undefined) {\n            this.props.InitializeExamDetails(\n              this.props.periods.selected_period.session_plan_id,\n              course.course_id,\n              center_id.district_id,\n              center_id.center_id,\n              center_id.room_id,\n              this.props.selectedPosition.position_id,\n              this.setLoadingExams\n            );\n          }\n        }\n      }\n      // }\n    }\n  };\n\n  componentDidMount = () => {\n    this.props.loadApplicationPeriods(this.setLoading);\n    if (\n      this.props.course.courses === null ||\n      this.props.course.courses.length === 0\n    ) {\n      this.props.loadCourses(this.setLoading);\n    }\n    this.InitializationFn();\n    if (this.props.doExam.exam_answers) {\n      if (this.props.doExam.exam_answers.status === examStatus.Editing) {\n        this.setState({ redirect: true });\n      }\n    }\n    if (\n      this.props.claiming.myClaims === null &&\n      this.props.periods.selected_period !== null\n    ) {\n      this.props.getMyClaims(\n        this.props.auth.user.user_id,\n        this.props.periods.selected_period.session_plan_id,\n        (status: boolean, msg: string, data?: CandidateClaimInterface[]) => {\n          this.setState({ loading: status });\n          if (msg !== \"\") {\n            alert(msg);\n          }\n        }\n      );\n    }\n  };\n\n  render() {\n    if (this.props.candidateExam.selected_exam_id !== null) {\n      return <Redirect to=\"/do-exam\" />;\n    }\n    if (this.state.redirect === true) {\n      return <Redirect to=\"/do-exam\" />;\n    }\n    if (\n      this.props.loading === true ||\n      this.state.loadingExams === true ||\n      this.state.loadingExamsDone === true\n    ) {\n      return (\n        <div className=\"bg-white border my-4 mx-4 rounded px-4 py-4 flex flex-col\">\n          <span className=\"mx-4 animate-pulse\">Loading, Please wait...</span>\n          <Loading />\n        </div>\n      );\n    }\n    return this.props.selectedExams === null ? (\n      \"No result found!\"\n    ) : (\n      <Fragment>\n        {this.state.selectedExamDetails !== null ? (\n          <>\n            <div className=\"animate__animated animate__fadeInUp animate__faster mt-2 mx-2 rounded-t-md border border-blue-300\">\n              <div className=\"flex flex-row gap-4 items-center justify-between bg-blue-100 py-2 px-2 mb-2\">\n                <div className=\"flex flex-col w-full\">\n                  <div className=\"flex flex-row gap-2 items-center justify-between w-full pl-2\">\n                    <span className=\"font-bold text-xl text-gray-800\">\n                      Exam answers details\n                    </span>\n                    <div className=\"bg-white hover:text-yellow-700 hover:bg-white rounded-full p-1 h-10 w-10 border-2 border-white hover:border-yellow-600 flex items-center justify-center\">\n                      <MdClose\n                        className=\"cursor-pointer font-extrabold text-3xl\"\n                        onClick={() => {\n                          this.setState({\n                            selectedExamDetails: null,\n                          });\n                        }}\n                      />\n                    </div>\n                  </div>\n                </div>\n              </div>\n              <CandidateAnswersDetails\n                exam_id={this.state.selectedExamDetails}\n                showAnswers={false}\n              />\n            </div>\n          </>\n        ) : this.state.appointmentDetailsModal.status === true &&\n          this.state.appointmentDetailsModal.item !== null ? (\n          <>\n            <div className=\"animate__animated animate__fadeInUp animate__faster mt-2 mx-2 rounded-t-md border border-blue-300\">\n              <div className=\"flex flex-row gap-4 items-center justify-between bg-blue-100 py-2 px-2 mb-2\">\n                <div className=\"flex flex-row gap-2 items-center justify-between w-full pl-2\">\n                  <span className=\"font-bold text-xl text-gray-800\">\n                    Exam:{\" \"}\n                    {this.state.appointmentDetailsModal.item !== null && (\n                      <>\n                        {\n                          this.findCourse(\n                            this.state.appointmentDetailsModal.item!.course\n                          )?.course_name\n                        }\n                      </>\n                    )}\n                  </span>\n                  <div className=\"bg-white hover:text-yellow-700 hover:bg-white rounded-full p-1 h-10 w-10 border-2 border-white hover:border-yellow-600 flex items-center justify-center\">\n                    <MdClose\n                      className=\"cursor-pointer font-extrabold text-3xl\"\n                      onClick={() =>\n                        this.setState({\n                          appointmentDetailsModal: {\n                            status: false,\n                            item: null,\n                          },\n                          displayResults: false,\n                        })\n                      }\n                    />\n                  </div>\n                </div>\n              </div>\n              {this.findExam(this.state.appointmentDetailsModal.item.course) ===\n              null ? (\n                <div className=\"text-yellow-700 font-bold text-center text-3xl bg-yellow-50 border border-yellow-200 rounded px-4 py-4 mx-4 my-4\">\n                  No exam found for selected course\n                </div>\n              ) : this.props.periods.applicationPeriods &&\n                (this.props.periods.applicationPeriods.find(\n                  (itm) =>\n                    this.state.appointmentDetailsModal.item &&\n                    itm.session_plan_id ===\n                      this.state.appointmentDetailsModal.item.period\n                )?.is_active === false ||\n                  this.props.periods.applicationPeriods.find(\n                    (itm) =>\n                      this.state.appointmentDetailsModal.item &&\n                      itm.session_plan_id ===\n                        this.state.appointmentDetailsModal.item.period\n                  )?.is_active === undefined) ? (\n                <div className=\"text-yellow-700 font-bold text-center text-3xl bg-yellow-50 border border-yellow-200 rounded px-4 py-4 mx-4 my-4 flex flex-col items-center\">\n                  <div>No exam for the selected period</div>\n                  <div\n                    onClick={() =>\n                      this.props.loadApplicationPeriods(this.setLoading)\n                    }\n                    className=\"btn bg-white text-gray-700 w-max text-base border border-gray-700 mt-4 cursor-pointer\"\n                  >\n                    Reload\n                  </div>\n                </div>\n              ) : (\n                <ExamDetails\n                  locationDetails={this.props.selectedExams.find(\n                    (itm) =>\n                      this.state.appointmentDetailsModal.item &&\n                      itm.course_id ===\n                        this.state.appointmentDetailsModal.item.course\n                  )}\n                  examDetails={this.findExam(\n                    this.state.appointmentDetailsModal.item.course\n                  )}\n                  locationsData={this.props.locationsData}\n                  loadAllLocationsData={this.props.loadAllLocationsData}\n                  setSelectedLocationData={this.props.setSelectedLocationData}\n                  periods={this.props.periods}\n                  loadApplicationPeriods={this.props.loadApplicationPeriods}\n                  candidateExam={this.props.candidateExam}\n                  setSelectedCandidateExam={this.props.setSelectedCandidateExam}\n                />\n              )}\n            </div>\n          </>\n        ) : this.state.centersModal === true &&\n          this.state.selectedCourse !== null ? (\n          <div className=\"animate__animated animate__fadeInUp animate__faster mt-2 mx-2 rounded-t-md border border-blue-300\">\n            <div className=\"flex flex-row gap-4 items-center justify-between bg-blue-100 py-2 px-2 mb-2\">\n              <div className=\"flex flex-col w-full\">\n                <div className=\"flex flex-row gap-2 items-center justify-between w-full pl-2\">\n                  <span className=\"font-bold text-xl text-gray-800\">\n                    Change exam location\n                  </span>\n                  <div className=\"bg-white hover:text-yellow-700 hover:bg-white rounded-full p-1 h-10 w-10 border-2 border-white hover:border-yellow-600 flex items-center justify-center\">\n                    <MdClose\n                      className=\"cursor-pointer font-extrabold text-3xl\"\n                      onClick={() => {\n                        this.setState({\n                          centersModal: false,\n                          selectedCourse: null,\n                        });\n                      }}\n                    />\n                  </div>\n                </div>\n              </div>\n            </div>\n            <ChooseExamCenter\n              positionCourses={this.state.selectedCourse}\n              addLocation={this.findLocation}\n              closeModal={this.closeModal}\n            />\n          </div>\n        ) : this.state.applicationHistoryState === true ? (\n          this.props.applicationHistory === undefined ? (\n            <div className=\"text-yellow-700 font-bold text-2xl text-center\">\n              No application history found!\n            </div>\n          ) : (\n            <div className=\"animate__animated animate__fadeInUp animate__faster bg-white mt-2 mx-2 rounded-t-md border border-blue-300\">\n              <div className=\"flex flex-row gap-4 items-center justify-between bg-blue-100 py-2 px-2\">\n                <div className=\"flex flex-row gap-2 items-center justify-between w-full pl-2\">\n                  <span className=\"font-bold text-xl text-gray-800\">\n                    Application history\n                  </span>\n                  <div className=\"bg-white hover:text-yellow-700 hover:bg-white rounded-full p-1 h-10 w-10 border-2 border-white hover:border-yellow-600 flex items-center justify-center\">\n                    <MdClose\n                      className=\"cursor-pointer font-extrabold text-3xl\"\n                      onClick={() =>\n                        this.setState({ applicationHistoryState: false })\n                      }\n                    />\n                  </div>\n                </div>\n              </div>\n              <ApplicationHistory\n                applicationHistory={this.props.applicationHistory}\n              />\n            </div>\n          )\n        ) : (\n          <div className=\"\">\n            <div className=\"px-2 md:py-2\">\n              <div className=\"flex flex-col md:flex-row justify-between items-center md:items-center\">\n                <div className=\"flex flex-row items-center gap-3 mb-3 pt-4 lg:pt-0\">\n                  <span className=\"bg-blue-50  text-gray-600 font-base rounded-md px-3 py-1 mt-0\">\n                    Status:{\" \"}\n                    <span className=\"font-extrabold text-blue-700 underline\">\n                      {\n                        this.props.selectedApplicationDetails\n                          ?.application_status\n                      }\n                    </span>\n                  </span>\n                  <div\n                    onClick={() =>\n                      this.setState({ applicationHistoryState: true })\n                    }\n                    className=\"btn bg-gray-100 text-gray-600 border border-gray-300 text-sm flex flex-row items-center gap-2 cursor-pointer hover:border-blue-500 hover:bg-blue-50 hover:text-blue-600 md:mt-0\"\n                  >\n                    <MdHistory className=\"text-xl\" />\n                    <span>View application history</span>\n                  </div>\n                </div>\n                <div\n                  className={`grid ${\n                    this.pendingCourses() > 0 ? \"grid-cols-3\" : \"grid-cols-2\"\n                  } gap-4 w-full md:w-max bg-gray-100 md:bg-white p-2 md:p-0 rounded mb-2 md:mb-0`}\n                >\n                  <div className=\"col-span-1 flex justify-start md:justify-end\">\n                    <div className=\"flex flex-row items-center\">\n                      <div className=\"flex flex-col\">\n                        <span className=\"text-xs md:text-md text-gray-500 font-bold text-left md:text-right\">\n                          Total\n                        </span>\n                        <span className=\"text-xl md:text-xl font-bold text-gray-700 text-left md:text-right\">\n                          {this.props.selectedExams.length}\n                        </span>\n                      </div>\n                    </div>\n                  </div>\n                  {this.pendingCourses() > 0 && (\n                    <div className=\"col-span-1 flex justify-start md:justify-end\">\n                      <div className=\"flex flex-row items-center\">\n                        <div className=\"flex flex-col\">\n                          <span className=\"text-xs md:text-md text-gray-500 font-bold text-left md:text-right\">\n                            Pending\n                          </span>\n                          <span className=\"text-xl md:text-xl font-bold text-gray-700 text-left md:text-right\">\n                            {this.props.selectedPosition !== null &&\n                              this.pendingCourses()}\n                          </span>\n                        </div>\n                      </div>\n                    </div>\n                  )}\n                  <div className=\"col-span-1 flex justify-start md:justify-end\">\n                    <div className=\"flex flex-row items-center\">\n                      <div className=\"flex flex-col\">\n                        <span className=\"text-xs md:text-md text-gray-500 font-bold text-left md:text-right\">\n                          Total marks\n                        </span>\n                        {\n                          // this.state.loadingExams === true || this.state.loadingExamsDone === true ? <span>Wait...</span> :\n                          <span className=\"text-xl md:text-xl font-bold text-gray-700 text-left md:text-right\">\n                            {parseInt(\n                              findTotalMarks(\n                                this.props.selectedPosition.courses,\n                                this.props.candidateExam.user_exams_done\n                              )\n                            ) > 0\n                              ? (\n                                  parseInt(\n                                    findTotalMarks(\n                                      this.props.selectedPosition.courses,\n                                      this.props.candidateExam.user_exams_done\n                                    )\n                                  ) / this.props.selectedPosition.courses.length\n                                ).toFixed(2)\n                              : 0}\n                            %\n                          </span>\n                        }\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n              <div className=\"font-bold flex flex-col md:flex-row items-start md:items-center justify-start md:justify-between gap-2\">\n                {this.props.selectedApplicationDetails &&\n                this.props.selectedApplicationDetails.application_status !==\n                  ApplicationStates.Rejected ? (\n                  <div className=\"text-xl flex flex-row items-center gap-2\">\n                    <BsFileEarmarkText className=\"text-2xl\" />\n                    <span>Exams list: </span>\n                  </div>\n                ) : (\n                  <div>\n                    {this.state.loadingExams === false &&\n                    this.state.loadingExamsDone === false &&\n                    CheckIfExamDone(\n                      this.props.selectedPosition.courses,\n                      this.props.candidateExam.user_exams_done\n                    ) === false &&\n                    this.props.periods.selected_period &&\n                    this.props.selected_application &&\n                    this.props.claiming.myClaims &&\n                    isClaimAllowed(\n                      this.props.claiming.myClaims,\n                      this.props.periods.selected_period.session_plan_id,\n                      this.props.selected_application\n                    ) === true ? (\n                      <div\n                        onClick={() => this.setClaim(!this.state.claim)}\n                        className=\"btn hidden flex-row gap-2 items-center text-green-700 bg-green-50 cursor-pointer hover:bg-green-100 hover:text-green-900 border border-green-600 hover:border-green-800\"\n                      >\n                        <IoHandLeftSharp className=\"text-xl \" />\n                        <span className=\"text-sm\">Claim now</span>\n                      </div>\n                    ) : this.props.claiming.myClaims === null ? (\n                      <div>Loading...</div>\n                    ) : (\n                      this.props.claiming.myClaims.length > 0 && (\n                        <Link\n                          to=\"claiming-candidate\"\n                          className=\"text-lg font-bold text-blue-600 bg-white hover:bg-blue-100 border border-blue-600 rounded px-3 py-2\"\n                        >\n                          Go to claims list\n                        </Link>\n                      )\n                    )}\n                  </div>\n                )}\n                {this.state.loadingExams === false &&\n                  this.state.loadingExamsDone === false &&\n                  CheckIfExamDone(\n                    this.props.selectedPosition.courses,\n                    this.props.candidateExam.user_exams_done\n                  ) === false && (\n                    <div\n                      onClick={() =>\n                        this.props.selected_application &&\n                        this.props.deleteApplication(\n                          this.props.selected_application\n                        )\n                      }\n                      className=\"btn flex flex-row gap-2 items-center text-red-700 bg-red-50 cursor-pointer hover:bg-red-100 hover:text-red-900\"\n                    >\n                      <IoMdTrash className=\"text-xl \" />\n                      <span className=\"text-sm\">Remove application</span>\n                    </div>\n                  )}\n              </div>\n              {this.state.claim === true &&\n                this.props.selected_application !== null && (\n                  <div className=\"bg-gray-100 mt-4 pt-2 rounded\">\n                    <div className=\"font-bold text-xl px-3 pb-2\">\n                      Submit application claim\n                    </div>\n                    <ClaimFormComponent\n                      setFormState={this.setClaim}\n                      claim_type={PlansTypeKeys.APPLICATION}\n                      file_id={this.props.selected_application}\n                    />\n                  </div>\n                )}\n            </div>\n            {this.props.selectedApplicationDetails &&\n              this.props.selectedApplicationDetails.application_status !==\n                ApplicationStates.Rejected && (\n                <>\n                  <ActiveExams\n                    selectedPosition={this.props.selectedPosition}\n                    selectedExams={this.props.selectedExams}\n                    findExam={this.findExam}\n                    loadingExams={this.state.loadingExams}\n                    loadingExamsDone={this.state.loadingExamsDone}\n                    setMaxExamModal={this.props.setMaxExamModal}\n                    course={this.props.course}\n                    setSelectedCourse={this.props.setSelectedCourse}\n                    candidateExam={this.props.candidateExam}\n                    positions={this.props.positions}\n                    periods={this.props.periods}\n                    setSelectedPosition={this.props.setSelectedPosition}\n                    setSelectedCandidateExam={\n                      this.props.setSelectedCandidateExam\n                    }\n                    selectedApplicationDetails={\n                      this.props.selectedApplicationDetails\n                    }\n                  />\n                  <PreparedExams\n                    selectedPosition={this.props.selectedPosition}\n                    selectedExams={this.props.selectedExams}\n                    findExam={this.findExam}\n                    loadingExams={this.state.loadingExams}\n                    loadingExamsDone={this.state.loadingExamsDone}\n                    setMaxExamModal={this.props.setMaxExamModal}\n                    course={this.props.course}\n                    setSelectedCourse={this.props.setSelectedCourse}\n                    candidateExam={this.props.candidateExam}\n                    positions={this.props.positions}\n                    periods={this.props.periods}\n                    setSelectedPosition={this.props.setSelectedPosition}\n                    setSelectedCandidateExam={\n                      this.props.setSelectedCandidateExam\n                    }\n                    changeLocation={this.changeLocation}\n                    selectedApplicationDetails={\n                      this.props.selectedApplicationDetails\n                    }\n                  />\n                  <ExamsDone\n                    selectedPosition={this.props.selectedPosition}\n                    selectedExams={this.props.selectedExams}\n                    findExam={this.findExam}\n                    loadingExams={this.state.loadingExams}\n                    loadingExamsDone={this.state.loadingExamsDone}\n                    setMaxExamModal={this.props.setMaxExamModal}\n                    course={this.props.course}\n                    setSelectedCourse={this.props.setSelectedCourse}\n                    candidateExam={this.props.candidateExam}\n                    positions={this.props.positions}\n                    periods={this.props.periods}\n                    setSelectedPosition={this.props.setSelectedPosition}\n                    setSelectedCandidateExam={\n                      this.props.setSelectedCandidateExam\n                    }\n                    viewMarksDetails={(\n                      selectedExamDetails: ExamDoneDetailsAnswers\n                    ) => {\n                      this.setState({\n                        selectedExamDetails: selectedExamDetails,\n                      });\n                    }}\n                  />\n                </>\n              )}\n          </div>\n        )}\n      </Fragment>\n    );\n  }\n}\n\nconst mapStateToProps = ({\n  auth,\n  doExam,\n  prepareExam,\n  locationsData,\n  periods,\n  candidateExam,\n  course,\n  positions,\n  claiming,\n}: StoreState): {\n  auth: Auth;\n  doExam: examDataInterface;\n  prepareExam: PrepareExamsStoreInterface;\n  locationsData: LocationsDataStoreInterface;\n  periods: applicationPeriodsStoreInterface;\n  candidateExam: candidateExamStoreInterface;\n  course: courseStoreInterface;\n  positions: positionsStoreInterface;\n  claiming: ClaimingReducerType;\n} => {\n  return {\n    auth: auth,\n    doExam: doExam,\n    prepareExam: prepareExam,\n    locationsData: locationsData,\n    periods: periods,\n    candidateExam: candidateExam,\n    course: course,\n    positions: positions,\n    claiming: claiming,\n  };\n};\n\nconst PostExams = connect(mapStateToProps, {\n  loadExam,\n  loadExamsList,\n  loadAllLocationsData,\n  setSelectedLocationData,\n  loadApplicationPeriods,\n  setSelectedCandidateExam,\n  loadCourses,\n  setSelectedCourse,\n  InitializeExamDetails,\n  setSelectedPeriod,\n  setSelectedPosition,\n  loadExamsDone,\n  getMyClaims,\n})(_PostExams);\n\nexport default PostExams;\n","import React, { Component } from \"react\";\nimport { GetApplicationsAPI } from \"../../interfaces/application\";\nimport { CandidateInterface } from \"../../interfaces/candidatesInterfaces\";\nimport { PlacedCandidateStatus } from \"../../interfaces/marks_publication\";\nimport { UserInfoInterface } from \"../../shared/interfaces\";\n\ninterface CandidatePlacementCheckProps {\n  position: GetApplicationsAPI;\n  user: CandidateInterface;\n}\ninterface CandidatePlacementCheckState {\n  loading: boolean;\n}\ninterface SchoolItemPlacement {\n  _id: string;\n  school_name: string;\n  school_code: string;\n  province_id: string;\n  province_code: string;\n  district_id: {\n    _id: string;\n    district_name: string;\n  };\n  district_code: string;\n  sector_code: string;\n  sector_id: string;\n  school_status: string;\n  status: number;\n  createdAt: string;\n  updatedAt: string;\n}\nexport interface SchoolPlacementInterface {\n  n_id: string;\n  phone_number: string;\n  email: string;\n  user_info: UserInfoInterface;\n  placed: {\n    _id: string;\n    comment: string;\n    status: PlacedCandidateStatus;\n    waiting_list_id: string;\n    user_id: string;\n    school_id: string;\n    district_id: string;\n    position_id: string;\n    request_id: string;\n    createdAt: string;\n    updatedAt: string;\n    school: SchoolItemPlacement;\n    __v: number;\n  };\n}\n\n// interface CandidatePlacementSchool {}\n\nexport class CandidatePlacementCheck extends Component<\n  CandidatePlacementCheckProps,\n  CandidatePlacementCheckState\n> {\n  constructor(props: CandidatePlacementCheckProps) {\n    super(props);\n\n    this.state = {\n      loading: false,\n    };\n  }\n  setLoading = (state: boolean) => {\n    this.setState({ loading: state });\n  };\n\n  render() {\n    return <div>Candidate Placement check</div>;\n  }\n}\n\nexport default CandidatePlacementCheck;\n","import React, { Component, Fragment } from \"react\";\nimport { MdAdd } from \"react-icons/md\";\nimport { Link, Redirect } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport {\n  Auth,\n  initiateApplication,\n  removeLocation,\n  loadApplicationPeriods,\n  applicationPeriodsStoreInterface,\n  setSelectedPeriod,\n  System,\n  PushPopupAlert,\n  positionsStoreInterface,\n  loadAllPositions,\n  FC_Access,\n  CandidateApplicationsStoreInterface,\n  LoadCandidateApplications,\n  candidateExamStoreInterface,\n  InitializeExamDetails,\n  loadExamsDone,\n  setSelectedPosition,\n  setSelectedCourse,\n  courseStoreInterface,\n  setSelectedCandidateExam,\n  examDataInterface,\n  AddUserApplication,\n  RemoveUserApplication,\n  SelectUserApplication,\n} from \"../../actions\";\nimport { StoreState } from \"../../reducers\";\nimport {\n  applicationStoreInterface,\n  initialApplicationInterface,\n} from \"../../actions/application\";\nimport { ApplicationStepsTypes } from \"../Application/ApplicationSteps/ApplicationSteps\";\nimport {\n  applicationExamAPI,\n  ApplicationPeriodGet,\n  ApplicationStates,\n  ApplicationStatesDescription,\n  GetApplicationsAPI,\n  NoRoomsInterface,\n} from \"../../interfaces/application\";\nimport Exams from \"./Exams\";\nimport { course, PositionAPI } from \"../../interfaces/index\";\nimport axios from \"axios\";\nimport { API } from \"../../utils/api\";\nimport { sentExamInterface } from \"../Application/ExamCenter/ExamCenter\";\nimport Loading from \"../../components/Loading/Loading\";\nimport { AiOutlineFilter } from \"react-icons/ai\";\nimport { IoBriefcase, IoBriefcaseOutline } from \"react-icons/io5\";\nimport Modal, { ModalSize, Themes } from \"../../components/Modal/Modal\";\nimport {\n  SideNavigation,\n  MainItem,\n} from \"../../components/Navigation/SideNavigation\";\nimport { BsCaretRightFill } from \"react-icons/bs\";\nimport LoadingV2, { LoadingType } from \"../../components/Loading/LoadingV2\";\nimport { PopupAlertData } from \"../../components/Alert/Popup\";\nimport { PopupAlertTheme } from \"../../interfaces/popupAlert\";\nimport { RiFileForbidLine } from \"react-icons/ri\";\nimport { IoMdList } from \"react-icons/io\";\nimport NoResult, { NoResultThemes } from \"../../components/NoResult/NoResult\";\nimport ApplicationPeriods from \"../../components/ApplicationPeriods/ApplicationPeriods\";\nimport { DATE } from \"../../utils/functions\";\nimport { UserAccessList } from \"../../utils/auth_access\";\nimport { BiArrowBack } from \"react-icons/bi\";\nimport { InitializeExamsDone } from \"../../utils/question_bank\";\nimport { examStatus } from \"../../interfaces/exam\";\nimport CandidatePlacementCheck from \"../../components/CandidatePlacementCheck/CandidatePlacementCheck\";\n\ninterface ApplicationsDashboardState {\n  selectedPosition: PositionAPI | null;\n  selectedExams: applicationExamAPI[] | null;\n  applications: GetApplicationsAPI[] | [] | null;\n  selected_application: string | null;\n  noRoomsApplication: NoRoomsInterface[] | null | [];\n  loading: boolean;\n  applicationError: string | null;\n  number_of_incomplete: number;\n  applicationDetails: boolean;\n  selectedApplicationStatus: ApplicationStates | null;\n  showPeriodFilter: boolean;\n  maxExamModal: boolean;\n  loadingErr: string;\n  displayDetailsModal: boolean;\n  viewSchools: GetApplicationsAPI | null;\n}\ninterface ApplicationsDashboardProps {\n  auth: Auth;\n  application: applicationStoreInterface;\n  periods: applicationPeriodsStoreInterface;\n  initiateApplication: (initial: initialApplicationInterface) => void;\n  removeLocation: (course_id: string) => void;\n  loadApplicationPeriods: (callback: (loading: boolean) => void) => void;\n  setSelectedPeriod: (period: ApplicationPeriodGet) => void;\n  system: System;\n  PushPopupAlert: (alert: PopupAlertData) => void;\n  positions: positionsStoreInterface;\n  loadAllPositions: (callback: (loading: boolean) => void) => void;\n  FC_Access: Function;\n  candidateApplications: CandidateApplicationsStoreInterface;\n  LoadCandidateApplications: (\n    user_id: string,\n    callback: (loading: boolean) => void\n  ) => void;\n  InitializeExamDetails: (\n    periodId: string,\n    courseId: string,\n    district_id: string,\n    center_id: string,\n    room_id: string,\n    position_id: string,\n    callback: (loading: boolean) => void\n  ) => void;\n  loadExamsDone: (\n    periodId: string,\n    userId: string,\n    callback: (loading: boolean) => void\n  ) => void;\n  candidateExam: candidateExamStoreInterface;\n  setSelectedPosition: (position: PositionAPI) => void;\n  course: courseStoreInterface;\n  setSelectedCourse: (course: course | null) => void;\n  setSelectedCandidateExam: (exam_id: string) => void;\n  doExam: examDataInterface;\n  AddUserApplication: (application: GetApplicationsAPI) => void;\n  RemoveUserApplication: (application_id: string) => void;\n  SelectUserApplication: (application: GetApplicationsAPI | null) => void;\n}\n\nclass _ApplicationsDashboard extends Component<\n  ApplicationsDashboardProps,\n  ApplicationsDashboardState\n> {\n  constructor(props: ApplicationsDashboardProps) {\n    super(props);\n\n    this.state = {\n      selectedPosition: null,\n      selectedExams: null,\n      applications: null,\n      selected_application: null,\n      noRoomsApplication: null,\n      loading: false,\n      applicationError: null,\n      number_of_incomplete: 0,\n      applicationDetails: false,\n      selectedApplicationStatus: null,\n      showPeriodFilter: false,\n      maxExamModal: false,\n      loadingErr: \"\",\n      displayDetailsModal: false,\n      viewSchools: null,\n    };\n  }\n\n  setLoading = (state: boolean) => {\n    this.setState({ loading: state });\n  };\n\n  filteredApplications = (\n    applications: GetApplicationsAPI[],\n    Status: ApplicationStates | null,\n    searchPeriod?: ApplicationPeriodGet | null\n  ) => {\n    let appl: GetApplicationsAPI[];\n    if (searchPeriod !== undefined && searchPeriod !== null) {\n      appl = applications.filter(\n        (itm) =>\n          itm.application_session.session_plan_id ===\n          searchPeriod.session_plan_id\n      );\n    } else {\n      appl = applications;\n    }\n    if (Status === null) {\n      return appl;\n    } else {\n      return appl.filter((item) => item.application_status === Status);\n    }\n  };\n\n  closeApplicationDetails = () => {\n    this.setState({ selected_application: null });\n    this.setState({ selectedPosition: null, selected_application: null });\n    this.setState({ selectedExams: null });\n    this.setState({ displayDetailsModal: false });\n  };\n\n  setDisplayDetailsModal = (status: boolean) => {\n    this.setState({ displayDetailsModal: status });\n  };\n\n  applicationStatuses = (\n    application: GetApplicationsAPI[]\n  ): { title: string; count: number; status: ApplicationStates }[] => {\n    let output: { title: string; count: number; status: ApplicationStates }[] =\n      [];\n    for (let i in ApplicationStatesDescription) {\n      output.push({\n        title: ApplicationStatesDescription[i].caption,\n        count: application.filter(\n          (itm) =>\n            itm.application_status === ApplicationStatesDescription[i].key\n        ).length,\n        status: ApplicationStatesDescription[i].key,\n      });\n    }\n    return output;\n  };\n\n  setMaxExamModal = (status: boolean) => {\n    this.setState({ maxExamModal: status });\n  };\n\n  LoadApplications = async () => {\n    this.setState({ loadingErr: \"\" });\n    this.setState({ number_of_incomplete: 0 });\n    if (this.props.auth.user.user_id) {\n      const selected_position = this.state.selectedPosition;\n      this.setState({ applications: null });\n      this.setState({ selectedPosition: null });\n      this.setState({ selectedExams: null });\n      let response: GetApplicationsAPI[] | null = null;\n      if (\n        this.props.candidateApplications.candidate_applications === null &&\n        this.props.auth.user\n      ) {\n        try {\n          const res = await axios.get<GetApplicationsAPI[]>(\n            `${API.APPLICATION}/application/${this.props.auth.user.user_id}`\n          );\n          // console.log(\"Applications list: \", res.data);\n          if (res.status === 200) {\n            response = res.data;\n            if (res.data.length === 0) {\n              response = [];\n            } else {\n              for (let application of response) {\n                this.props.AddUserApplication(application);\n              }\n            }\n          } else {\n            response = [];\n          }\n        } catch (error: any) {\n          response = [];\n          console.log(\"Appl Err: \", { ...error });\n        }\n      } else {\n        response = this.props.candidateApplications.candidate_applications;\n      }\n      this.setState({ applications: response });\n      if (response !== null) {\n        if (response.length > 0) {\n          // let done = false;\n          for (let i in response) {\n            let courses = response[i].position.courses;\n            let exams = response[i].exams;\n            if (\n              response[i].position.position_id ===\n              selected_position?.position_id\n            ) {\n              this.setState({ selectedPosition: response[i].position });\n              this.setState({ selectedExams: exams });\n            }\n            // Load Exams done\n            InitializeExamsDone(\n              this.props.periods.selected_period,\n              response[i].position,\n              this.props.candidateExam,\n              this.props.loadExamsDone,\n              this.props.auth.user.user_id,\n              this.setLoading,\n              response[i].exams,\n              this.props.InitializeExamDetails,\n              this.setLoading\n            );\n            for (let x in courses) {\n              if (\n                exams.filter((itm) => itm.course_id === courses[x].course_id)\n                  .length === 0 &&\n                response[i].application_status === ApplicationStates.Incomplete\n              ) {\n                this.setState({\n                  selected_application: response[i].application_id,\n                });\n                this.setState({\n                  selectedPosition: response[i].position,\n                  selected_application: response[i].application_id,\n                });\n                this.setState({ selectedExams: response[i].exams });\n                this.setState({ displayDetailsModal: true });\n                this.incrementIncomplete();\n              }\n            }\n          }\n        } else {\n          this.props.LoadCandidateApplications(\n            this.props.auth.user.user_id,\n            this.setLoading\n          );\n        }\n      }\n    }\n  };\n\n  updateLocation = async (\n    application_id: string,\n    exams: sentExamInterface[]\n  ) => {\n    this.setState({ loading: true });\n    this.setState({ applicationError: null });\n    console.log(application_id);\n    for (let i in exams) {\n      try {\n        const res = await axios.post(\n          `${API.APPLICATION}/application/updatemissed`,\n          {\n            application_id: application_id,\n            exams: exams[i],\n          }\n        );\n        if (res.status === 200 && this.state.noRoomsApplication !== null) {\n          this.setState({\n            noRoomsApplication: this.state.noRoomsApplication?.filter(\n              (itm) => itm.course_id !== exams[i].course_id\n            ),\n          });\n        }\n        if (res.status === 200) {\n          this.props.LoadCandidateApplications(\n            this.props.auth.user.user_id,\n            this.setLoading\n          );\n          this.LoadApplications();\n          this.setState({ displayDetailsModal: false });\n          this.setState({ selectedPosition: null, selected_application: null });\n          this.setState({ selectedExams: null });\n          this.props.PushPopupAlert({\n            title: `Location updated successfully`,\n            description:\n              \"Location has updated successfully! You can continue to update before starting of the examination!\",\n            theme: PopupAlertTheme.success,\n          });\n        }\n      } catch (error: any) {\n        if (error.response) {\n          if (error.response.data) {\n            if (error.response.data.errors !== undefined) {\n              if (error.response.data.errors.length > 0) {\n                if (this.state.noRoomsApplication) {\n                  let newArr: sentExamInterface[];\n                  if (error.response.data.errors[0].field !== undefined) {\n                    newArr = this.state.noRoomsApplication?.filter(\n                      (itm) =>\n                        itm.course_id ===\n                        error.response.data.errors[0].field.course_id\n                    );\n                    if (newArr !== undefined) {\n                      for (let i in newArr) {\n                        this.props.removeLocation(newArr[i].course_id);\n                      }\n                    }\n                  }\n                }\n                this.setState({\n                  applicationError: error.response.data.errors[0].message,\n                });\n                this.props.PushPopupAlert({\n                  title: error.response.data.errors[0].message,\n                  theme: PopupAlertTheme.danger,\n                });\n              }\n            } else {\n              this.props.PushPopupAlert({\n                title: \"Something went wrong! Please try again\",\n                theme: PopupAlertTheme.danger,\n              });\n              this.setState({\n                applicationError: \"Something went wrong! Please try again\",\n              });\n            }\n          }\n        }\n        console.log(\"Change error: \", { ...error });\n      }\n    }\n    if (this.state.selectedPosition) {\n      this.setState({ selectedPosition: this.state.selectedPosition });\n    }\n    this.setState({ selected_application: application_id });\n    this.setState({ loading: false });\n  };\n\n  incrementIncomplete = () => {\n    this.setState({\n      number_of_incomplete: this.state.number_of_incomplete + 1,\n    });\n  };\n\n  changeLoadingState = (state: boolean) => {\n    this.setState({ loading: state });\n  };\n\n  deleteApplication = async (id: string) => {\n    if (\n      window.confirm(\"Are you sure do you want to delete this application?\") &&\n      id\n    ) {\n      this.changeLoadingState(true);\n      try {\n        await axios.delete(`${API.APPLICATION}/application/${id}`);\n        this.props.RemoveUserApplication(id);\n        this.LoadApplications();\n        this.props.PushPopupAlert({\n          title: `Application deleted successfully!`,\n          theme: PopupAlertTheme.success,\n        });\n        this.setState({ selectedExams: null });\n      } catch (error: any) {\n        this.props.PushPopupAlert({\n          title: `Failed to delete application!`,\n          theme: PopupAlertTheme.warning,\n        });\n      }\n      this.changeLoadingState(false);\n    }\n  };\n\n  setShowFilterStatus = (status: boolean) => {\n    this.setState({ showPeriodFilter: status });\n  };\n\n  componentDidMount = () => {\n    this.props.loadApplicationPeriods(this.changeLoadingState);\n    this.LoadApplications();\n    this.props.loadAllPositions(this.changeLoadingState);\n    if (\n      this.props.application.apply === undefined ||\n      this.props.application.apply.currentStep === ApplicationStepsTypes.Step3\n    ) {\n      this.props.initiateApplication({\n        user_id: this.props.auth.user.user_id,\n        selectedPosition: null,\n        currentStep: ApplicationStepsTypes.Step1,\n        positions: null,\n        doTestStatus: {\n          status: false,\n        },\n        selectedLocation: [],\n      });\n    }\n    // if (this.props.candidateApplications.candidate_applications !== null) {\n    //   if (this.props.candidateApplications.candidate_applications.length > 0) {\n    //     if (this.state.selectedPosition === null) {\n    //       this.setState({ selectedPosition: this.props.candidateApplications.candidate_applications[0].position, selected_application: this.props.candidateApplications.candidate_applications[0].application_id })\n    //     }\n    //     if (this.state.selectedExams === null) {\n    //       this.setState({ selectedExams: this.props.candidateApplications.candidate_applications[0].exams })\n    //     }\n    //   }\n    // }\n  };\n  render() {\n    if (!FC_Access(this.props.auth, UserAccessList.MY_APPLICATION).view) {\n      return <Redirect to=\"/\" />;\n    }\n    if (this.props.candidateExam.selected_exam_id !== null) {\n      return <Redirect to=\"/do-exam\" />;\n    }\n    if (this.props.doExam.exam_answers) {\n      if (\n        this.props.doExam.exam_answers.status === examStatus.Editing ||\n        this.props.doExam.exam_answers.status === examStatus.Paused\n      ) {\n        return <Redirect to=\"/do-exam\" />;\n      }\n    }\n    return (\n      <Fragment>\n        {this.state.selectedPosition !== null &&\n        this.state.selectedExams !== null &&\n        this.state.displayDetailsModal === true ? (\n          <div className=\"border-t border-gray-200 my-2 pb-2 bg-white rounded animate__animated animate__fadeInUp animate__faster -ml-2 mr-1\">\n            <div className=\"flex flex-col md:flex-row gap-4 items-center md:justify-between bg-blue-600 rounded-t py-2 px-2\">\n              <div className=\"flex flex-row gap-4 w-full\">\n                <div>\n                  <div className=\"h-12 w-12 rounded-full bg-blue-500 hover:bg-blue-700 cursor-pointer flex items-center justify-center\">\n                    <BiArrowBack\n                      className=\"text-3xl text-white\"\n                      onClick={() => this.closeApplicationDetails()}\n                    />\n                  </div>\n                </div>\n                <div className=\"flex flex-col w-full\">\n                  <span className=\"font-bold text-xl text-white\">\n                    {this.state.selectedPosition.position_title}\n                  </span>\n                  <span className=\"text-sm text-gray-100 font-normal pl-1\">\n                    {this.props.candidateApplications.candidate_applications &&\n                      this.state.selectedPosition !== null &&\n                      this.props.candidateApplications.candidate_applications.find(\n                        (itm) =>\n                          itm.position.position_id ===\n                          this.state.selectedPosition?.position_id\n                      )?.application_session.session_plan_name}{\" \"}\n                    -{\" \"}\n                    {this.props.candidateApplications.candidate_applications !==\n                      null &&\n                      this.state.selectedPosition !== null &&\n                      this.props.candidateApplications.candidate_applications.find(\n                        (itm) =>\n                          itm.position.position_id ===\n                          this.state.selectedPosition?.position_id\n                      )?.application_session.period}\n                  </span>\n                </div>\n              </div>\n              {this.props.candidateApplications.candidate_applications !==\n                null &&\n              this.props.candidateApplications.candidate_applications.find(\n                (itm) =>\n                  itm.application_id === this.state.selected_application &&\n                  (itm.application_status === ApplicationStates.Shortlisted ||\n                    itm.application_status === ApplicationStates.Pass)\n              ) !== undefined ? (\n                <div\n                  title=\"Choose the Province, Choose the District, etc.\"\n                  className=\"mb-3 md:mb-0\"\n                  onClick={() => {\n                    if (\n                      this.props.candidateApplications\n                        .candidate_applications !== null\n                    ) {\n                      let checkApplication =\n                        this.props.candidateApplications.candidate_applications.find(\n                          (itm) =>\n                            itm.application_id ===\n                            this.state.selected_application\n                        );\n                      if (checkApplication !== undefined) {\n                        this.props.SelectUserApplication(checkApplication);\n                      }\n                    }\n                  }}\n                >\n                  <Link\n                    to=\"/placement-contract\"\n                    className=\"bg-blue-500 px-4 py-3 font-bold rounded-md border-2 border-white text-white hover:bg-blue-800\"\n                  >\n                    Placement\n                  </Link>\n                </div>\n              ) : (\n                <div\n                  title=\"Wait for being shortlisted to fill placement agreement\"\n                  className=\"bg-blue-500 text-blue-300 rounded px-3 py-2 cursor-not-allowed hidden md:block\"\n                >\n                  Placement\n                </div>\n              )}\n            </div>\n            {/* Check application */}\n            <div className=\"bg-gray-100\"></div>\n            <Exams\n              selectedExams={this.state.selectedExams}\n              selectedPosition={this.state.selectedPosition}\n              selected_application={this.state.selected_application}\n              updateLocation={this.updateLocation}\n              changeLocationError={this.state.applicationError}\n              loading={this.state.loading}\n              incrementIncomplete={this.incrementIncomplete}\n              applicationHistory={\n                this.props.candidateApplications.candidate_applications !==\n                  null && this.state.selectedPosition !== null\n                  ? this.props.candidateApplications.candidate_applications.find(\n                      (itm) =>\n                        itm.position.position_id ===\n                        this.state.selectedPosition?.position_id\n                    )?.application_history\n                  : undefined\n              }\n              deleteApplication={this.deleteApplication}\n              selectedApplicationDetails={\n                this.props.candidateApplications.candidate_applications &&\n                this.props.candidateApplications.candidate_applications.find(\n                  (itm) =>\n                    itm.application_id === this.state.selected_application\n                )!\n              }\n              setMaxExamModal={this.setMaxExamModal}\n              setDisplayDetailsModal={this.setDisplayDetailsModal}\n            />\n          </div>\n        ) : (\n          <>\n            <SideNavigation>\n              {this.props.positions.positions_list === null ? (\n                <div className=\"btn bg-gray-500 text-white mb-4 w-full flex flex-row items-center gap-3 cursor-not-allowed animate__animated animate__zoomIn\">\n                  <RiFileForbidLine className=\"text-2xl text-white\" /> Please\n                  wait...\n                </div>\n              ) : this.props.positions.positions_list.length > 0 &&\n                this.props.periods.applicationPeriods &&\n                this.props.periods.applicationPeriods.filter(\n                  (itm) => itm.is_active === true\n                ).length !== 0 ? (\n                <Link to=\"/apply\">\n                  <div className=\"btn btn-blue text-white mb-4 w-full flex flex-row items-center gap-3 animate__animated animate__zoomIn\">\n                    <MdAdd className=\"text-2xl text-white\" /> Apply\n                  </div>\n                </Link>\n              ) : (\n                <div className=\"btn bg-gray-200 cursor-not-allowed text-gray-500 mb-4 w-full flex flex-row items-center animate__animated animate__zoomIn\">\n                  No vacancies!\n                </div>\n              )}\n              {/* <div className=\"mb-6\"></div> */}\n              {/* <Search data={[1, 2, 3]} /> */}\n              <div\n                onClick={() =>\n                  this.setState({ selectedApplicationStatus: null })\n                }\n                className={`cursor-pointer ${\n                  this.state.selectedApplicationStatus !== null\n                    ? \"text-gray-600 hover:text-blue-600 border border-gray-200 hover:border-blue-600 hover:bg-blue-100 bg-white\"\n                    : \"text-blue-600 border border-blue-600 hover:bg-blue-100 bg-blue-100\"\n                } flex flex-row items-center gap-2 px-2 py-1 rounded font-bold`}\n              >\n                <IoMdList className=\"text-xl\" />\n                <span>\n                  View all (\n                  {this.props.candidateApplications.candidate_applications ===\n                  null\n                    ? 0\n                    : this.props.candidateApplications.candidate_applications.filter(\n                        (itm) =>\n                          itm.application_session.session_plan_id ===\n                          this.props.periods.selected_period?.session_plan_id\n                      ).length}\n                  )\n                </span>\n              </div>\n              <div className=\"pt-1\">\n                {this.props.candidateApplications.candidate_applications &&\n                this.filteredApplications(\n                  this.props.candidateApplications.candidate_applications,\n                  null,\n                  this.props.periods.selected_period\n                ) === null ? (\n                  <Loading />\n                ) : (\n                  this.props.candidateApplications.candidate_applications &&\n                  this.applicationStatuses(\n                    this.filteredApplications(\n                      this.props.candidateApplications.candidate_applications,\n                      null,\n                      this.props.periods.selected_period\n                    )\n                  ).map(\n                    (\n                      itm: {\n                        title: string;\n                        count: number;\n                        status: ApplicationStates;\n                      },\n                      i: number\n                    ) =>\n                      itm.count > 0 && (\n                        <Fragment key={itm.title}>\n                          <div\n                            onClick={() =>\n                              this.setState({\n                                selectedApplicationStatus: itm.status,\n                              })\n                            }\n                          >\n                            <MainItem\n                              title={itm.title}\n                              count={itm.count}\n                              active={\n                                this.state.selectedApplicationStatus ===\n                                itm.status\n                                  ? true\n                                  : false\n                              }\n                            />\n                          </div>\n                        </Fragment>\n                      )\n                  )\n                )}\n              </div>\n            </SideNavigation>\n            <div className=\"px-2 -ml-2 lg:ml-0\">\n              <div className=\"mt-2 rounded px-2 md:px-0 py-3 md:py-3\">\n                <div className=\"flex flex-col\">\n                  <div className=\"flex flex-col md:flex-row justify-between md:items-center\">\n                    <div className=\"flex flex-col\">\n                      <span className=\"text-blue-600 text-2xl md:text-2xl lg:text-3xl font-bold\">\n                        My Applications{\" \"}\n                        <span className=\"md:hidden\">\n                          (\n                          {this.props.candidateApplications\n                            .candidate_applications &&\n                          this.filteredApplications(\n                            this.props.candidateApplications\n                              .candidate_applications,\n                            this.state.selectedApplicationStatus,\n                            this.props.periods.selected_period\n                          )\n                            ? this.filteredApplications(\n                                this.props.candidateApplications\n                                  .candidate_applications,\n                                this.state.selectedApplicationStatus,\n                                this.props.periods.selected_period\n                              ).length\n                            : 0}\n                          )\n                        </span>\n                      </span>\n                      <div className=\"text-gray-700 font-bold text-xs md:text-sm lg:text-md flex flex-row gap-1 items-center\">\n                        <AiOutlineFilter className=\"text-2xl\" /> Selected period{\" \"}\n                        <span\n                          onClick={() =>\n                            this.setState({ showPeriodFilter: true })\n                          }\n                          className={`px-2 ${\n                            this.props.periods.selected_period !== null\n                              ? \"text-blue-600 hover:bg-blue-100 border-2 border-gray-200 hover:border-blue-600 underline\"\n                              : \"bg-white text-gray-600 hover:bg-gray-100 border border-gray-300\"\n                          }  rounded-full py-1 flex flex-row justify-center items-center font-bold cursor-pointer`}\n                        >\n                          {this.props.periods.selected_period !== null ? (\n                            <>\n                              <BsCaretRightFill className=\"mr-3\" />\n                              {\n                                this.props.periods.selected_period\n                                  .session_plan_name\n                              }\n                            </>\n                          ) : (\n                            \"Choose period\"\n                          )}\n                        </span>\n                      </div>\n                    </div>\n                    <div>\n                      <div\n                        onClick={() =>\n                          this.setState({ showPeriodFilter: true })\n                        }\n                        className=\"bg-white border border-white hover:border-blue-600 text-blue-600 font-bold items-center btn w-max cursor-pointer hover:bg-blue-100 my-2 md:my-0\"\n                      >\n                        {this.props.periods.selected_period === null\n                          ? \"Choose period\"\n                          : \"Change period\"}\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n              {this.state.loadingErr !== \"\" && (\n                <div className=\"bg-yellow-100 text-yellow-700 font-extrabold text-2xl mx-4 px-3 py-3 rounded\">\n                  {this.state.loadingErr}\n                </div>\n              )}\n              <div className=\"mb-2\">\n                <div className=\"grid grid-cols-12 gap-3\">\n                  <div className=\"col-span-12\">\n                    <div className={`grid md:grid-cols-1 lg:grid-cols-1 gap-2`}>\n                      <div className=\"-my-2 md:hidden lg:hidden xl:hidden\">\n                        {this.props.positions.positions_list === null ? (\n                          <div className=\"btn bg-gray-500 text-white mb-4 w-full flex flex-row items-center gap-3 animate__animated animate__zoomIn justify-center\">\n                            <RiFileForbidLine className=\"text-2xl text-white\" />{\" \"}\n                            Please wait...\n                          </div>\n                        ) : this.props.positions.positions_list.length > 0 ? (\n                          <Link to=\"/apply\">\n                            <div className=\"btn btn-blue text-white mb-4 w-full flex flex-row items-center gap-3 animate__animated animate__zoomIn justify-center\">\n                              <MdAdd className=\"text-2xl text-white\" /> Create\n                              application\n                            </div>\n                          </Link>\n                        ) : (\n                          <div className=\"btn bg-gray-400 text-white mb-4 w-full flex flex-row items-center gap-3 animate__animated animate__zoomIn justify-center\">\n                            <RiFileForbidLine className=\"text-2xl text-white\" />{\" \"}\n                            No vacancies!\n                          </div>\n                        )}\n                      </div>\n                      {this.props.candidateApplications\n                        .candidate_applications === null ? (\n                        <LoadingV2 type={LoadingType.dark} />\n                      ) : this.filteredApplications(\n                          this.props.candidateApplications\n                            .candidate_applications,\n                          this.state.selectedApplicationStatus,\n                          this.props.periods.selected_period\n                        ).length === 0 ? (\n                        <div className=\"\">\n                          <NoResult\n                            theme={NoResultThemes.Dark}\n                            value=\"No Applications found!\"\n                            component={\n                              <div className=\"-my-2 hidden md:block\">\n                                {this.props.positions.positions_list !== null &&\n                                  this.props.positions.positions_list.length >\n                                    0 &&\n                                  this.props.periods.applicationPeriods &&\n                                  this.props.periods.applicationPeriods.filter(\n                                    (itm) => itm.is_active === true\n                                  ).length !== 0 && (\n                                    <Link to=\"/apply\">\n                                      <div className=\"text-blue-600 font-bold underline mb-2 hover:text-blue-800 animate__animated animate__zoomIn\">\n                                        Click here to create new application\n                                      </div>\n                                    </Link>\n                                  )}\n                              </div>\n                            }\n                          />\n                        </div>\n                      ) : (\n                        this.filteredApplications(\n                          this.props.candidateApplications\n                            .candidate_applications,\n                          this.state.selectedApplicationStatus,\n                          this.props.periods.selected_period\n                        ).map((item, i) => (\n                          <div\n                            key={i + 1}\n                            onClick={() => {\n                              this.setState({\n                                selectedPosition: item.position,\n                                selected_application: item.application_id,\n                              });\n                              this.setState({ selectedExams: item.exams });\n                              this.setState({ displayDetailsModal: true });\n                            }}\n                            className={`bg-white rounded-md animate__animated animate__fadeIn animate__faster\n                      ${\n                        this.state.selectedPosition?.position_id ===\n                        item.position.position_id\n                          ? \"border-2 border-blue-600 shadow\"\n                          : item.application_status ===\n                            ApplicationStates.Initiated\n                          ? \"border-gray-200 bg-gray-50 hover:border-gray-600\"\n                          : item.application_status ===\n                            ApplicationStates.Rejected\n                          ? \"bg-white border-white\"\n                          : item.application_status ===\n                            ApplicationStates.Shortlisted\n                          ? \"border-gray-200 bg-white hover:border-blue-600\"\n                          : \"bg-white border-yellow-600 hover:border-yellow-500\"\n                      } flex flex-col cursor-pointer font-normal hover:font-bold border-2`}\n                          >\n                            <div\n                              className={`grid md:grid-cols-12 group px-3 py-3 rounded-md gap-2 ${\n                                this.state.selectedPosition?.position_id ===\n                                item.position.position_id\n                                  ? \"bg-gray-100 rounded-t\"\n                                  : \"bg-white\"\n                              }`}\n                            >\n                              <div className=\"col-span-1 flex items-center justify-center\">\n                                {item.application_status ===\n                                ApplicationStates.Initiated ? (\n                                  <IoBriefcaseOutline className=\"text-5xl text-gray-400 group-hover:text-blue-600\" />\n                                ) : item.application_status ===\n                                  ApplicationStates.Rejected ? (\n                                  <IoBriefcase className=\"text-5xl text-gray-400 group-hover:text-gray-700\" />\n                                ) : item.application_status ===\n                                  ApplicationStates.Shortlisted ? (\n                                  <IoBriefcaseOutline className=\"text-5xl text-gray-400 group-hover:text-blue-600\" />\n                                ) : item.application_status ===\n                                  ApplicationStates.Incomplete ? (\n                                  <IoBriefcaseOutline className=\"text-5xl text-gray-400 group-hover:text-yellow-800\" />\n                                ) : (\n                                  <IoBriefcase className=\"text-5xl text-gray-400 group-hover:text-blue-600\" />\n                                )}\n                              </div>\n                              <div className=\"col-span-7\">\n                                <span\n                                  className={`font-extrabold \n                          ${\n                            item.application_status !==\n                            ApplicationStates.Initiated\n                              ? item.application_status ===\n                                ApplicationStates.Rejected\n                                ? \"text-gray-900 group-hover:text-gray-900\"\n                                : item.application_status ===\n                                  ApplicationStates.Shortlisted\n                                ? \"text-gray-900 group-hover:text-blue-600\"\n                                : item.application_status ===\n                                  ApplicationStates.Incomplete\n                                ? \"text-gray-900 group-hover:text-yellow-800\"\n                                : \"text-gray-900 group-hover:text-blue-600\"\n                              : \"text-gray-900 group-hover:text-blue-600\"\n                          }`}\n                                >\n                                  {item.position.position_title}\n                                </span>\n                                <div className=\"flex flex-col text-xs text-gray-600\">\n                                  <div className=\"flex flex-row gap-2\">\n                                    <div>\n                                      <div className=\"flex flex-col float-left text-sm md:justify-end pt-2\">\n                                        <span\n                                          className={`${\n                                            item.application_status ===\n                                            ApplicationStates.Rejected\n                                              ? \"text-yellow-700\"\n                                              : \"text-gray-500\"\n                                          } md:text-right`}\n                                        >\n                                          {/* Status */}\n                                        </span>\n                                        {item.application_status ===\n                                        ApplicationStates.Initiated ? (\n                                          <span\n                                            className={`font-bold ${\n                                              this.state.selectedPosition\n                                                ?.position_id ===\n                                              item.position.position_id\n                                                ? \"bg-gray-600 text-gray-100 border border-gray-500 rounded-full\"\n                                                : \"bg-gray-50 text-gray-800 rounded\"\n                                            } px-3 py-1`}\n                                          >\n                                            {\n                                              ApplicationStatesDescription.find(\n                                                (itm) =>\n                                                  itm.key ===\n                                                  item.application_status\n                                              )?.caption\n                                            }\n                                          </span>\n                                        ) : item.application_status ===\n                                          ApplicationStates.Rejected ? (\n                                          <span\n                                            className={`font-bold ${\n                                              this.state.selectedPosition\n                                                ?.position_id ===\n                                              item.position.position_id\n                                                ? \"bg-yellow-900 text-yellow-100 border border-yellow-700 rounded-full\"\n                                                : \"bg-yellow-100 text-yellow-900 rounded\"\n                                            } px-3 py-1`}\n                                          >\n                                            {\n                                              ApplicationStatesDescription.find(\n                                                (itm) =>\n                                                  itm.key ===\n                                                  item.application_status\n                                              )?.caption\n                                            }\n                                          </span>\n                                        ) : item.application_status ===\n                                          ApplicationStates.Shortlisted ? (\n                                          <span\n                                            className={`font-bold ${\n                                              this.state.selectedPosition\n                                                ?.position_id ===\n                                              item.position.position_id\n                                                ? \"bg-blue-900 text-blue-100 border border-blue-700 rounded-full\"\n                                                : \"bg-blue-100 text-blue-900 rounded\"\n                                            } px-3 py-1`}\n                                          >\n                                            {\n                                              ApplicationStatesDescription.find(\n                                                (itm) =>\n                                                  itm.key ===\n                                                  item.application_status\n                                              )?.caption\n                                            }\n                                          </span>\n                                        ) : (\n                                          <span\n                                            className={`font-bold ${\n                                              this.state.selectedPosition\n                                                ?.position_id ===\n                                              item.position.position_id\n                                                ? \"bg-yellow-600 text-yellow-100 border border-yellow-500 rounded-full\"\n                                                : \"bg-yellow-100 text-yellow-700 rounded\"\n                                            } px-3 py-1`}\n                                          >\n                                            {\n                                              ApplicationStatesDescription.find(\n                                                (itm) =>\n                                                  itm.key ===\n                                                  item.application_status\n                                              )?.caption\n                                            }\n                                          </span>\n                                        )}\n                                      </div>\n                                    </div>\n                                    <div className=\"flex flex-col\">\n                                      <span\n                                        className={`${\n                                          item.application_status !==\n                                          ApplicationStates.Initiated\n                                            ? item.application_status ===\n                                              ApplicationStates.Rejected\n                                              ? \"text-gray-500\"\n                                              : item.application_status ===\n                                                ApplicationStates.Shortlisted\n                                              ? \"text-gray-500\"\n                                              : \"text-gray-500\"\n                                            : \"text-gray-500\"\n                                        }`}\n                                      >\n                                        {/* Application period: */}\n                                      </span>\n                                      <span\n                                        className={`${\n                                          item.application_status !==\n                                          ApplicationStates.Initiated\n                                            ? item.application_status ===\n                                              ApplicationStates.Rejected\n                                              ? \"text-gray-800\"\n                                              : item.application_status ===\n                                                ApplicationStates.Shortlisted\n                                              ? \"text-gray-800\"\n                                              : \"text-gray-800\"\n                                            : \"text-black\"\n                                        } font-bold`}\n                                      >\n                                        {item.application_session &&\n                                          item.application_session\n                                            .session_plan_name}{\" \"}\n                                        -{\" \"}\n                                        {item.application_session &&\n                                          item.application_session.period}\n                                      </span>\n                                      <div className=\"flex flex-row gap-2\">\n                                        <span\n                                          className={`${\n                                            item.application_status !==\n                                            ApplicationStates.Initiated\n                                              ? item.application_status ===\n                                                ApplicationStates.Rejected\n                                                ? \"text-gray-500\"\n                                                : item.application_status ===\n                                                  ApplicationStates.Shortlisted\n                                                ? \"text-gray-500\"\n                                                : \"text-gray-500\"\n                                              : \"text-gray-500\"\n                                          }`}\n                                        >\n                                          Date:\n                                        </span>\n                                        <span\n                                          className={`${\n                                            item.application_status !==\n                                            ApplicationStates.Initiated\n                                              ? item.application_status ===\n                                                ApplicationStates.Rejected\n                                                ? \"text-gray-800\"\n                                                : item.application_status ===\n                                                  ApplicationStates.Shortlisted\n                                                ? \"text-gray-800\"\n                                                : \"text-gray-800\"\n                                              : \"text-black\"\n                                          } font-bold`}\n                                        >\n                                          {DATE(item.createdAt, \"DD/MM/YYYY\")}\n                                        </span>\n                                      </div>\n                                    </div>\n                                  </div>\n                                </div>\n                              </div>\n                              <div className=\"col-span-12 md:col-span-4 flex md:justify-end items-center\">\n                                {/* Action */}\n                                <div className=\"flex flex-row items-center justify-end gap-2 w-full\">\n                                  {/* <div className=\"btn bg-gray-100 text-gray-600\">\n                                    Details\n                                  </div> */}\n                                  {item.application_status ===\n                                    ApplicationStates.Shortlisted && (\n                                    <div\n                                      className=\"mt-2 md:mt-0\"\n                                      title=\"Choose the Province, Choose the District, etc.\"\n                                      onClick={() => {\n                                        this.props.SelectUserApplication(item);\n                                      }}\n                                    >\n                                      <Link to=\"/placement-contract\">\n                                        <div className=\"rounded px-2 py-1 font-bold bg-blue-50 text-blue-600 group-hover:bg-blue-600 group-hover:text-white\">\n                                          <span>Placement agreement</span>\n                                        </div>\n                                      </Link>\n                                    </div>\n                                  )}\n                                  <div className=\"rounded px-2 py-1 bg-gray-100 hover:bg-gray-200 text-gray-600 cursor-pointer mt-2 md:mt-0 font-bold\">\n                                    Details\n                                  </div>\n                                </div>\n                              </div>\n                            </div>\n                          </div>\n                        ))\n                      )}\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </>\n        )}\n\n        {this.state.showPeriodFilter === true && (\n          <Modal\n            title={<div className=\"text-2xl\">Choose a period</div>}\n            backDrop={true}\n            theme={Themes.default}\n            close={() => this.setState({ showPeriodFilter: false })}\n            backDropClose={true}\n            widthSizeClass={ModalSize.extraLarge}\n            displayClose={true}\n            padding={{ title: true, body: false }}\n          >\n            <ApplicationPeriods\n              applicationPeriods={this.props.periods.applicationPeriods}\n              setSelectedPeriod={this.props.setSelectedPeriod}\n              showPeriodFilter={this.setShowFilterStatus}\n            />\n          </Modal>\n        )}\n        {this.state.viewSchools !== null && (\n          <Modal\n            title={\n              <div className=\"flex flex-col\">\n                <span className=\"text-4xl font-extrabold text-blue-600\">\n                  {this.state.viewSchools.position.position_title}\n                </span>\n                <span className=\"text-base\">View placement schools</span>\n              </div>\n            }\n            backDrop={true}\n            theme={Themes.default}\n            close={() => this.setState({ viewSchools: null })}\n            backDropClose={true}\n            widthSizeClass={ModalSize.extraLarge}\n            displayClose={true}\n            padding={{ title: true, body: false }}\n          >\n            <CandidatePlacementCheck\n              position={this.state.viewSchools}\n              user={this.props.auth.user}\n            />\n          </Modal>\n        )}\n      </Fragment>\n    );\n  }\n}\n\nconst mapStateToProps = ({\n  auth,\n  application,\n  periods,\n  system,\n  positions,\n  candidateApplications,\n  candidateExam,\n  course,\n  doExam,\n}: StoreState): {\n  auth: Auth;\n  application: applicationStoreInterface;\n  periods: applicationPeriodsStoreInterface;\n  system: System;\n  positions: positionsStoreInterface;\n  candidateApplications: CandidateApplicationsStoreInterface;\n  candidateExam: candidateExamStoreInterface;\n  course: courseStoreInterface;\n  doExam: examDataInterface;\n} => {\n  return {\n    auth: auth,\n    application: application,\n    periods,\n    system: system,\n    positions: positions,\n    candidateApplications: candidateApplications,\n    candidateExam: candidateExam,\n    course: course,\n    doExam: doExam,\n  };\n};\n\nexport const ApplicationsDashboard = connect(mapStateToProps, {\n  initiateApplication,\n  removeLocation,\n  loadApplicationPeriods,\n  setSelectedPeriod,\n  PushPopupAlert,\n  loadAllPositions,\n  FC_Access,\n  LoadCandidateApplications,\n  InitializeExamDetails,\n  loadExamsDone,\n  setSelectedPosition,\n  setSelectedCourse,\n  setSelectedCandidateExam,\n  AddUserApplication,\n  RemoveUserApplication,\n  SelectUserApplication,\n})(_ApplicationsDashboard);\n","import React, { FC, ReactElement } from \"react\";\nimport { ApplicationsDashboard } from \"../ApplicationsDashboard/ApplicationsDashboard\";\ntype UserDashboardProps = {};\n\nexport const UserDashboard: FC<UserDashboardProps> = (): ReactElement => {\n  /* function body */\n  return (\n    <div className=\"\">\n      {/* Applications Dashboard */}\n      <ApplicationsDashboard />\n    {/* <div className=\"p-6\">\n      <h1 className=\"text-6xl text-center font-bold text-gray-400\">\n        Dashboard{\" \"}\n      </h1>\n\n      <br />\n      <br />\n      <div className=\"text-center\">\n        <Link to=\"/admin-center\">\n          <button className=\"text-blue-900 bg-blue-200 rounded py-1 px-2\">\n            Access Center as Admin\n          </button>\n        </Link>\n\n        <Link to=\"/candidate-center\">\n          <button className=\"text-yellow-900 bg-yellow-200 ml-1 rounded py-1 px-2\">\n            Access Center as a candidate\n          </button>\n        </Link>\n      </div>\n      <br />\n      <br />\n      <br />\n\n      <SystemDevelopmentProgress /> */}\n    </div>\n  );\n};\n"],"sourceRoot":""}
{"version":3,"sources":["components/ContractViewer/ContractViewerItem.tsx","components/ContractViewer/ContractViewer.tsx","containers/Admin/WaitingList/WaitingListReport.tsx","actions/location.ts","actions/settings.ts","containers/SessionSettings/NoSession.tsx","components/Loading/TableLoading.tsx","interfaces/waitingList.ts"],"names":["ContractViewerItem","props","className","title","strict","data","length","map","itm","id","ContractViewer","componentDidMount","locations","FC_getLocations","status","msg","FC_GetWaitingLocationList","setState","loading","state","selectedSchool","contract","school","values","FC_LoadSchoolsByIDs","toString","schools","err","this","Loading","ProvincesList","DistrictList","SectorList","province","forEach","el","findIt","provinces","find","element","province_code","undefined","push","province_name","district","districts","district_code","district_name","sector","sectors","sector_code","sector_name","school_code","school_name","Component","React","memo","connect","waitingLocation","FC_LoadSchoolsByDistrict","getPeriodById","allSession","period_id","item","session_plan_id","defaultReportContent","key","waitingListReportContentKeyInterface","names","national_id","gender","phone","user_position_marks","waitingList_session","education_category","date","waiting_status","position_title","_WaitingListReport","setLoading","value","setLoadingWaitingList","loadingWaitingList","setThisPeriod","thisPeriod","setWaitingListToPrint","waitingListToPrint","setThisWaitingListStatus","thisWaitingListStatus","setThisPosition","thisPosition","setSelectPosition","selectPosition","setSortProperty","sortProperty","setIsSorted","isSorted","setSortOrder","sortOrder","setSearchInput","searchInput","setSearchPositionInput","searchPositionInput","setDownloading","downloading","setGenerateReportModal","generateReportModal","setReportTitle","reportTitle","setReportContent","reportContent","setSelectAll","selectAll","setFormError","formError","setSelectPeriod","selectPeriod","setThisEducation","thisEducation","schoolLevels","education_categories","loadEducationCategories","application_sessions","GetAllSessionPlans","PushPopupAlert","theme","PopupAlertTheme","danger","systemPositions","getPositions","getWaitingList","setSort","thisProperty","showStatus","result","WaitingListStatus","WAITING","PENDING","PLACED","FC_WaitingListStatus","WaitingList","output","count","type","statusArray","Object","i","capitalizeFirstLetter","filter","updateReportContent","index","findIndex","newArray","updateWaitingListToPrint","session","session_plan_name","waitingList","arrayNew","n","prototype","hasOwnProperty","call","getPositionById","position_id","thisSession","session_id","dataArray","user_info","fname","lname","sex","n_id","phone_number","email","Number","marks","toFixed","education_institute_id","education_category_title","DATE","createdAt","FC_WaitingListData","allWaitList","waitingList_id","_id","applicantGender","male","education_category_id","waitingList_session_id","resetReportContent","currentState","isChangeAllowed","generateReportTitle","FC_GeneratePDF","document","querySelectorAll","table","getElementById","reportSettings","doneBy","auth","user","subjectTitle","subject","period","footer","institute","generatePDF","warning","FC_FilterWaitingList","waitingListStatus","position","viewContractor","waitingData","selectedWaiting","objList","text","NoSession","SideNavigation","onClick","active","disabled","reportType","onChange","e","target","placeholder","TableLoading","cols","colSpan","sortThisArray","product","flag","prop","toLowerCase","indexOf","Modal","backDrop","Themes","default","close","backDropClose","widthSizeClass","ModalSize","extraLarge","displayClose","padding","LoadingV2","LoadingType","dark","search","style","fontStyle","school_level_id","school_level_name","ChooseSession","setSelectSession","chooseAll","currentSelected","medium","ExportToExcel","fileData","fileName","btnName","WaitingListReport","system_settings","sessionPlan","allSessionPlans","getAllRoom","callback","dispatch","a","axios","get","API","APPLICATION","res","ActionTypes","GET_ALL_ROOM","payload","console","log","error","errorToText","FC_CreateProvince","CREATE_PROVINCE","FC_UpdateProvince","UPDATE_PROVINCE","FC_DeleteProvince","DELETE_PROVINCE","FC_CreateDistrict","CREATE_DISTRICT","FC_UpdateDistrict","UPDATE_DISTRICT","FC_DeleteDistrict","DELETE_DISTRICT","FC_CreateSector","CREATE_SECTOR","FC_UpdateSector","UPDATE_SECTOR","FC_DeleteSector","DELETE_SECTOR","FC_CreateCenter","CREATE_CENTER","FC_UpdateCenter","UPDATE_CENTER","FC_DeleteCenter","DELETE_CENTER","FC_CreateRoom","CREATE_ROOM","FC_UpdateRoom","UPDATE_ROOM","FC_DeleteRoom","delete_room","DELETE_ROOM","GET_LOCATION_WAITING_LIST","getSystemSettings","setAxiosToken","AUTH","GET_SYSTEM_SETTINGS","code_error","disableSystemSetting","DISABLE_SYSTEM_SETTINGS","GetTaskAccess","response","task","permitted","GET_TASK_ACCESS","GET_POSTIONS","deletePosition","DELETE_POSITION","publishPosition","PUBLISH_POSITION","displayCols","colsArray"],"mappings":"kbAgGeA,EApFgC,SAACC,GAC9C,OACE,sBAAKC,UAAU,mCAAf,UACE,sBAKEA,UAAU,gFALZ,UAOE,qBAAKA,UAAU,wDAAf,SAgBE,sBACEA,UAAS,iEADX,SAGG,YAAcD,EAAME,MAAQ,UAGjC,qBAAKD,UAAU,sFAAf,SACE,uBAAMA,UAAU,WAAhB,WACoB,IAAjBD,EAAMG,QAAoB,OAASH,EAAME,MAAQ,WAClD,4BAAIF,EAAMI,KAAKC,SAFjB,sBAMJ,qBAAKJ,UAAU,oEAAf,SAIE,qBAAKA,UAAU,wDAAf,SACE,sBAAKA,UAAU,kBAAf,UACGD,EAAMI,KAAKC,QAAU,EACpB,sBAAMJ,UAAU,yEAAhB,SACE,qBAAKA,UAAU,oBAAf,SACE,uBAAMA,UAAU,oBAAhB,iBACOD,EAAME,MADb,WAOJF,EAAMI,KAAKE,KAAI,SAACC,GAAD,OACb,sBAEEN,UAAU,yEAFZ,SAIE,qBAAKA,UAAU,oBAAf,SACE,sBAAMA,UAAU,oBAAhB,SAAqCM,EAAIL,WAJtCK,EAAIC,QAUG,IAAjBR,EAAMG,QAAoBH,EAAMI,KAAKC,OAAS,GAC7C,sBAAMJ,UAAU,yEAAhB,SACE,qBAAKA,UAAU,oBAAf,SACE,uBAAMA,UAAU,oBAAhB,wBACcD,EAAME,MADpB,wBC7CZO,E,kDAIJ,WAAYT,GAA6B,IAAD,8BACtC,cAAMA,IAQRU,kBAAoB,WACW,OAAzB,EAAKV,MAAMW,UACbC,cACE,SAACC,EAAiBT,EAA0BU,IAC3B,IAAXD,GAA4B,OAATT,GACrB,EAAKJ,MAAMe,0BAA0BX,GACrC,EAAKY,SAAS,CACZC,SAAS,KAGX,EAAKD,SAAS,CACZC,SAAS,OAMa,OAA9B,EAAKC,MAAMC,gBACX,EAAKnB,MAAMoB,SAASC,OAAOC,OAAOjB,QAAU,GAE5C,EAAKW,SAAS,CACZC,SAAS,IAEX,EAAKjB,MAAMuB,oBACT,EAAKvB,MAAMoB,SAASC,OAAOC,OAAOhB,KAAI,SAACC,GAAD,OAASA,EAAIiB,eACnD,SAACX,EAAQY,EAASC,IACD,IAAXb,GACF,EAAKG,SAAS,CACZG,eAAgBM,EAChBR,SAAS,QAKZ,EAAKD,SAAS,CAAEC,SAAS,EAAOE,eAAgB,MAxCvD,EAAKD,MAAQ,CACXD,SAAS,EACTE,eAAgB,MALoB,E,0CA8CxC,WAAU,IAAD,OACP,IACyB,IAAvBQ,KAAKT,MAAMD,SACc,OAAzBU,KAAK3B,MAAMW,WACmB,OAA9BgB,KAAKT,MAAMC,eAEX,OACE,sBAAKlB,UAAU,iFAAf,UACE,qBAAKA,UAAU,kCAAf,8CAGA,cAAC2B,EAAA,EAAD,OAKN,IAAIC,EAAoC,GACpCC,EAAmC,GACnCC,EAAiC,GAiDrC,OA/C4B,OAAxBJ,KAAK3B,MAAMoB,WAEbO,KAAK3B,MAAMoB,SAASY,SAASV,OAAOW,SAAQ,SAACC,GAC3C,GAA6B,OAAzB,EAAKlC,MAAMW,UAAoB,CACjC,IAAIwB,EAAS,EAAKnC,MAAMW,UAAUyB,UAAUC,MAC1C,SAACC,GAAD,OAAaA,EAAQC,gBAAkBL,EAAGV,mBAE7BgB,IAAXL,GACFN,EAAcY,KAAK,CACjBjC,GAAI2B,EAAOI,cACXrC,MAAOiC,EAAOO,oBAOtBf,KAAK3B,MAAMoB,SAASuB,SAASrB,OAAOW,SAAQ,SAACC,GAC3C,GAA6B,OAAzB,EAAKlC,MAAMW,UAAoB,CACjC,IAAIwB,EAAS,EAAKnC,MAAMW,UAAUiC,UAAUP,MAC1C,SAACC,GAAD,OAAaA,EAAQO,gBAAkBX,EAAGV,mBAE7BgB,IAAXL,GACFL,EAAaW,KAAK,CAChBjC,GAAI2B,EAAOU,cACX3C,MAAOiC,EAAOW,oBAOtBnB,KAAK3B,MAAMoB,SAAS2B,OAAOzB,OAAOW,SAAQ,SAACC,GACzC,GAA6B,OAAzB,EAAKlC,MAAMW,UAAoB,CACjC,IAAIwB,EAAS,EAAKnC,MAAMW,UAAUqC,QAAQX,MACxC,SAACC,GAAD,OAAaA,EAAQW,cAAgBf,EAAGV,mBAE3BgB,IAAXL,GACFJ,EAAWU,KAAK,CACdjC,GAAI2B,EAAOc,YACX/C,MAAOiC,EAAOe,mBAQtB,qCACE,cAAC,EAAD,CACEhD,MAAM,WACNE,KAAMyB,EACN1B,OAAQwB,KAAK3B,MAAMoB,SAASY,SAAS7B,SAEvC,cAAC,EAAD,CACED,MAAM,WACNE,KAAM0B,EACN3B,OAAQwB,KAAK3B,MAAMoB,SAASuB,SAASxC,SAEvC,cAAC,EAAD,CACED,MAAM,SACNE,KAAM2B,EACN5B,OAAQwB,KAAK3B,MAAMoB,SAAS2B,OAAO5C,SAErC,cAAC,EAAD,CACED,MAAM,SACNE,KAAMuB,KAAKT,MAAMC,eAAeb,KAAI,SAACC,GAAD,MAAU,CAC5CC,GAAID,EAAI4C,YACRjD,MAAOK,EAAI6C,gBAEbjD,OAAQwB,KAAK3B,MAAMoB,SAASC,OAAOlB,gB,GA5IhBkD,aA0JdC,MAAMC,KACnBC,aARsB,SAAC,GAKvB,MAAO,CAAE7C,UADN,EAHHA,UAI8B8C,mBAGL,CACvBC,6BACAnC,wBACAR,+BAHFyC,CAIG/C,I,wGCpIQkD,EAAgB,SAC3BC,EACAC,GAEA,OAAOD,EAAWvB,MAAK,SAACyB,GAAD,OAAUA,EAAKC,kBAAoBF,MAwCtDG,EAA4D,CAChE,CACEC,IAAKC,IAAqCC,MAC1CjE,MAAO,kBACPW,QAAQ,GAEV,CACEoD,IAAKC,IAAqCE,YAC1ClE,MAAO,cACPW,QAAQ,GAEV,CACEoD,IAAKC,IAAqCG,OAC1CnE,MAAO,SACPW,QAAQ,GAEV,CACEoD,IAAKC,IAAqCI,MAC1CpE,MAAO,QACPW,QAAQ,GAEV,CACEoD,IAAKC,IAAqCK,oBAC1CrE,MAAO,kBACPW,QAAQ,GAEV,CACEoD,IAAKC,IAAqCM,oBAC1CtE,MAAO,uBACPW,QAAQ,GAEV,CACEoD,IAAKC,IAAqCO,mBAC1CvE,MAAO,sBACPW,QAAQ,GAEV,CACEoD,IAAKC,IAAqCQ,KAC1CxE,MAAO,oBACPW,QAAQ,GAEV,CACEoD,IAAKC,IAAqCS,eAC1CzE,MAAO,sBACPW,QAAQ,GAEV,CACEoD,IAAKC,IAAqCU,eAC1C1E,MAAO,WACPW,QAAQ,IA+CNgE,E,kDACJ,WAAY7E,GAAkB,IAAD,8BAC3B,cAAMA,IA2BR8E,WAAa,SAACC,GACZ,EAAK/D,SAAS,CAAEC,QAAS8D,KA7BE,EAgC7BC,sBAAwB,SAACD,GACvB,EAAK/D,SAAS,CAAEiE,mBAAoBF,KAjCT,EAoC7BG,cAAgB,SAACH,GACf,EAAK/D,SAAS,CAAEmE,WAAYJ,KArCD,EAwC7BK,sBAAwB,SAACL,GACvB,EAAK/D,SAAS,CAAEqE,mBAAoBN,KAzCT,EA4C7BO,yBAA2B,SAACP,GAC1B,EAAK/D,SAAS,CAAEuE,sBAAuBR,KA7CZ,EAgD7BS,gBAAkB,SAACT,GACjB,EAAK/D,SAAS,CAAEyE,aAAcV,KAjDH,EAoD7BW,kBAAoB,SAACX,GACnB,EAAK/D,SAAS,CAAE2E,eAAgBZ,KArDL,EAwD7Ba,gBAAkB,SAACb,GACjB,EAAK/D,SAAS,CAAE6E,aAAcd,KAzDH,EA4D7Be,YAAc,SAACf,GACb,EAAK/D,SAAS,CAAE+E,SAAUhB,KA7DC,EAgE7BiB,aAAe,SAACjB,GACd,EAAK/D,SAAS,CAAEiF,UAAWlB,KAjEA,EAoE7BmB,eAAiB,SAACnB,GAChB,EAAK/D,SAAS,CAAEmF,YAAapB,KArEF,EAwE7BqB,uBAAyB,SAACrB,GACxB,EAAK/D,SAAS,CAAEqF,oBAAqBtB,KAzEV,EA4E7BuB,eAAiB,SAACvB,GAChB,EAAK/D,SAAS,CAAEuF,YAAaxB,KA7EF,EAgF7ByB,uBAAyB,SACvBzB,GAKA,EAAK/D,SAAS,CAAEyF,oBAAqB1B,KAtFV,EAyF7B2B,eAAiB,SAAC3B,GAChB,EAAK/D,SAAS,CAAE2F,YAAa5B,KA1FF,EA6F7B6B,iBAAmB,SAAC7B,GAClB,EAAK/D,SAAS,CAAE6F,cAAe9B,KA9FJ,EAiG7B+B,aAAe,SAAC/B,GACd,EAAK/D,SAAS,CAAE+F,UAAWhC,KAlGA,EAqG7BiC,aAAe,SACbjC,GAKA,EAAK/D,SAAS,CAAEiG,UAAWlC,KA3GA,EA8G7BmC,gBAAkB,SAACnC,GACjB,EAAK/D,SAAS,CAAEmG,aAAcpC,KA/GH,EAkH7BqC,iBAAmB,SAACrC,GAClB,EAAK/D,SAAS,CAAEqG,cAAetC,KAnHJ,EAsH7BrE,kBAAoB,WAGiC,OAAjD,EAAKV,MAAMsH,aAAaC,sBACgC,IAAxD,EAAKvH,MAAMsH,aAAaC,qBAAqBlH,QAE7C,EAAKL,MAAMwH,wBAAwB,EAAK1C,YAKF,OAApC,EAAK9E,MAAMyH,sBACb,EAAKzH,MAAM0H,oBAAmB,SAAC7G,EAAiBC,GAC9C,EAAKgE,WAAWjE,GACXA,GACCC,EAAIT,QACN,EAAKL,MAAM2H,eAAe,CACxBzH,MAAOY,EACP8G,MAAOC,IAAgBC,YASE,OAA/B,EAAK9H,MAAM+H,iBACb,EAAK/H,MAAMgI,cAAa,SAACnH,EAAiBC,GACxC,EAAKgE,WAAWjE,GACZC,EAAIT,QACN,EAAKL,MAAM2H,eAAe,CACxBzH,MAAOY,EACP8G,MAAOC,IAAgBC,YAO3B,EAAK5G,MAAM+D,oBACb,EAAKjF,MAAMiI,gBAAe,SAACpH,EAAiBC,GAC1C,EAAKkE,sBAAsBnE,IACZ,IAAXA,GACEC,EAAIT,OAAS,GACf,EAAKL,MAAM2H,eAAe,CACxBzH,MAAOY,EACP8G,MAAOC,IAAgBC,aArKN,EA8K7BI,QAAU,SAACC,GAEP,EAAKjH,MAAM2E,eAAiBsC,GACH,QAAzB,EAAKjH,MAAM+E,UAEX,EAAKD,aAAa,QAElB,EAAKA,aAAa,OAEpB,EAAKJ,gBAAgBuC,GACrB,EAAKrC,aAAY,IAxLU,EA2L7BsC,WAAa,SAACvH,GACZ,IAAIwH,EAAiB,GACrB,OAAQxH,GACN,KAAKyH,IAAkBC,QACrBF,EAAS,UACT,MACF,KAAKC,IAAkBE,QACrBH,EAAS,mBACT,MACF,KAAKC,IAAkBG,OACrBJ,EAAS,qBACT,MACF,QACEA,EAAS,MAIb,OAAOA,GA5MoB,EA+M7BK,qBAAuB,SACrBC,GAMA,IAAIC,EAIE,CAAC,CAAE1I,MAAO,aAAc2I,MAAOF,EAAYtI,OAAQyI,KAAM,QACzDC,EAAcC,OAAO1H,OAAOgH,KAN7B,WAOIW,GACPL,EAAOnG,KAAK,CACVvC,MAAOgJ,YAAsBH,EAAYE,IACzCJ,MAAOF,EAAYQ,QAAO,SAAC5I,GAAD,OAASA,EAAIM,SAAWkI,EAAYE,MAC3D5I,OACHyI,KAAMC,EAAYE,MALtB,IAAK,IAAIA,KAAKF,EAAc,EAAnBE,GAQT,OAAOL,GApOoB,EAuO7BQ,oBAAsB,SAACnF,GACrB,IAAIoF,EAAgB,EAAKnI,MAAM2F,cAAcyC,WAC3C,SAACxF,GAAD,OAAUA,EAAKG,MAAQA,KAErBsF,EACF,EAAKrI,MAAM2F,cACb0C,EAASF,GAAOxI,QAAU0I,EAASF,GAAOxI,OAC1C,EAAK+F,iBAAiB2C,GACEA,EAASlH,MAAK,SAACyB,GAAD,OAA0B,IAAhBA,EAAKjD,UAEnD,EAAKiG,cAAa,GAElB,EAAKA,cAAa,GAIpB,EAAK0C,4BAvPsB,EA0P7BA,yBAA2B,WAEzB,GAAI,EAAKtI,MAAMuE,aAAc,CAC3B,IAAIgE,EAAkB,GAEpBA,EAD4B,QAA1B,EAAKvI,MAAMiE,WACH,cAEA,EAAKjE,MAAMiE,WAAWuE,kBAElC,EAAKhD,eACH,kBACE,EAAKxF,MAAMuE,aAAab,eACxB,MACA6E,GAIN,GACE,EAAKzJ,MAAM+H,iBACX,EAAK/H,MAAM2J,aACX,EAAK3J,MAAMyH,qBACX,CACA,IAAImC,EAA0C,GAC1CC,EAAY,EAChB,IAAK,IAAM5F,KAAO,EAAKjE,MAAM2J,YAC3B,GAAIX,OAAOc,UAAUC,eAAeC,KAAK,EAAKhK,MAAM2J,YAAa1F,GAAM,CACrE,IAAM3B,EAAU,EAAKtC,MAAM2J,YAAY1F,GACjCwB,EAAewE,YACnB,EAAKjK,MAAM+H,gBACXzF,EAAQ4H,aAEJC,EAAcxG,EAClB,EAAK3D,MAAMyH,qBACXnF,EAAQ8H,YAENC,EAAyC,CAC3C7J,GAAIqJ,EAAErI,WACN2C,MAAO7B,EAAQgI,UAAUC,MAAQ,IAAMjI,EAAQgI,UAAUE,MACzDnG,OAAkC,MAA1B/B,EAAQgI,UAAUG,IAAc,OAAS,SACjDrG,YAAa9B,EAAQoI,KACrBpG,MAAOhC,EAAQqI,aACfC,MAAOtI,EAAQsI,MACfrG,oBAAqBsG,OAAOvI,EAAQwI,MAAMC,QAAQ,IAClDnG,eAAgBa,EACZA,EAAab,eACb,mBACJH,mBAAoBgB,EAChBA,EAAauF,uBAAuBC,yBACpC,IACJzG,oBAAqB2F,EACjBA,EAAYT,kBACZ,kBACJhF,KAAMwG,YAAK5I,EAAQ6I,WACnBxG,eAAgB,EAAKyD,WAAW9F,EAAQzB,SAG1C,IAAK,IAAMoD,KAAO,EAAK/C,MAAM2F,cAEzBmC,OAAOc,UAAUC,eAAeC,KAC9B,EAAK9I,MAAM2F,cACX5C,KAGG,EAAK/C,MAAM2F,cAAc5C,GAAKpD,eAC1BwJ,EAAU,EAAKnJ,MAAM2F,cAAc5C,GAAKA,MAIrD2F,EAASnH,KAAK4H,GACdR,IAGJ,EAAKzE,sBAAsBwE,GAC3BA,EAAW,GACXC,EAAI,IApUqB,EAwU7BuB,mBAAqB,SACnBC,EACAtD,GAEA,GACkB,OAAhBsD,GACoB,OAApBtD,GACoC,OAApC,EAAK/H,MAAMyH,qBAEX,OAAO,KACT,IAAImC,EAAuC,GAE3C,IAAK,IAAM3F,KAAOoH,EAAa,CAC7B,IAAM/I,EAAU+I,EAAYpH,GAC5B,GAAI3B,EAAQgI,UAAW,CACrB,IAAM7E,EAAewE,YACnBlC,EACAzF,EAAQ4H,aAEJC,EAAcxG,EAClB,EAAK3D,MAAMyH,qBACXnF,EAAQ8H,YAENC,EAAsC,CACxClG,MAAO7B,EAAQgI,UAAUC,MAAQ,IAAMjI,EAAQgI,UAAUE,MACzDc,eAAgBhJ,EAAQiJ,IACxBlH,QACE/B,EAAQgI,UAAUG,IACde,IAAgBC,MAEtBrH,YAAa9B,EAAQoI,KACrBpG,MAAOhC,EAAQqI,aACfC,MAAOtI,EAAQsI,MACfrG,oBAAqBsG,OAAOvI,EAAQwI,MAAMC,QAAQ,IAClDb,YAAazE,EACTA,EAAayE,YACb,mBACJtF,eAAgBa,EACZA,EAAab,eACb,mBACJH,mBAAoBgB,EAChBA,EAAauF,uBAAuBC,yBACpC,GACJS,sBAAuBjG,EACnBA,EAAauF,uBAAuBA,uBACpC,GACJxG,oBAAqB2F,EACjBA,EAAYT,kBACZ,kBACJhF,KAAMwG,YAAK5I,EAAQ6I,WACnBxG,eAAgB,EAAKyD,WAAW9F,EAAQzB,QACxCA,OAAQyB,EAAQzB,OAChB8K,uBAAwBrJ,EAAQ8H,YAElCR,EAASnH,KAAK4H,IAGlB,OAAOT,GAjYoB,EAoY7BgC,mBAAqB,SAACC,GACpB,IAAItC,EACF,EAAKrI,MAAM2F,cACb,IAAK,IAAM5C,KAAOsF,EACZ,EAAKuC,gBAAgBvC,EAAStF,GAAKA,OACrCsF,EAAStF,GAAKpD,QAAUgL,GAI5B,EAAKjF,iBAAiB2C,GACtB,EAAKzC,cAAc+E,GACnB,EAAKrC,4BA/YsB,EAkZ7BsC,gBAAkB,SAAC7H,GACjB,OACEA,IAAQC,IAAqCC,OAC7CF,IAAQC,IAAqCS,gBAC7CV,IAAQC,IAAqCM,qBAC7CP,IAAQC,IAAqCU,gBAC7CX,IAAQC,IAAqCQ,MAC7CT,IAAQC,IAAqCK,qBAC7CN,IAAQC,IAAqCE,aAC7CH,IAAQC,IAAqCO,oBA3ZpB,EAka7BsH,oBAAsB,SAACnH,GACrB,IAAI6E,EAAkB,GAEpBA,EAD4B,QAA1B,EAAKvI,MAAMiE,WACH,cAEA,EAAKjE,MAAMiE,WAAWuE,kBAElC,EAAKhD,eAAe,kBAAoB9B,EAAiB,MAAQ6E,IAzatC,EA4a7BuC,eAAiB,WACf,GAAKC,SAASC,iBAAiB,4BAA4B7L,OAA3D,CAQA,IAAIoJ,EAAkB,GAEpBA,EAD4B,QAA1B,EAAKvI,MAAMiE,WACH,cAEA,EAAKjE,MAAMiE,WAAWuE,kBAElC,IAAMyC,EAA4BF,SAASG,eAAe,kBACpDC,EAA0C,CAC9CC,OAAQ,EAAKtM,MAAMuM,KAAKC,KAAKjC,MAAQ,IAAM,EAAKvK,MAAMuM,KAAKC,KAAKhC,MAChEtK,MAAO,EAAKgB,MAAMyF,YAClB8F,aAAc,WACdC,QAAS,EAAKxL,MAAMuE,aAChB,EAAKvE,MAAMuE,aAAab,eACxB,eACJ+H,OAAQlD,EACRmD,OAAQ,6BACRC,UAAW,EAAK3L,MAAMuE,aAClB,EAAKvE,MAAMuE,aAAauF,uBACrBC,yBACH,IAENkB,GAASW,YAAYT,EAAgBF,EAAO,EAAK7F,qBA5B/C,EAAKtG,MAAM2H,eAAe,CACxBzH,MAAM,sCACN0H,MAAOC,IAAgBkF,WAhbA,EA6c7BC,qBAAuB,SACrB3B,EACA4B,EACA9C,EACA0C,EACAK,GAEA,IAAI7E,EAAqCgD,EAuBzC,MAtB0B,QAAtB4B,IACF5E,EAASA,EAAOc,QAAO,SAACrF,GAAD,OAAUA,EAAKjD,SAAWoM,MAG/CC,IACF7E,EAASA,EAAOc,QACd,SAACrF,GAAD,OAAUA,EAAKoG,cAAgBgD,EAAShD,gBAIxB,QAAhBC,IACF9B,EAASA,EAAOc,QACd,SAACrF,GAAD,OAAUA,EAAK6H,yBAA2BxB,EAAYpG,oBAIxC,QAAd8I,IACFxE,EAASA,EAAOc,QACd,SAACrF,GAAD,OAAUA,EAAKW,qBAAuBoI,EAAU5B,6BAI7C5C,GA3eoB,EA8e7B8E,eAAiB,SACfC,GAEA,IAAI/E,OAAS7F,EAMb,OAJI,EAAKxC,MAAM2J,cACbtB,EAAS,EAAKrI,MAAM2J,YAAYtH,MAC9B,SAACyB,GAAD,OAAUA,EAAKyH,MAAQ6B,EAAY9B,mBAEhCjD,GApfP,EAAKnH,MAAQ,CACXiE,WAAY,MACZlE,SAAS,EACTgE,oBAAoB,EACpBI,mBAAoB,KACpBE,sBAAuB,MACvBE,aAAc,KACdE,gBAAgB,EAChBE,aAAc,GACdE,UAAU,EACVE,UAAW,MACXE,YAAa,GACbE,oBAAqB,GACrBE,aAAa,EACbE,oBAAqB,KACrBE,YAAa,GACbE,cAAe7C,EACf+C,WAAW,EACXE,UAAW,KACXE,cAAc,EACdE,cAAe,MACfgG,gBAAiB,MAxBQ,E,0CA0f7B,WAAU,IA/nBVC,EACAC,EA8nBS,OACP,OACE5L,KAAK3B,MAAMyH,sBACgC,IAA3C9F,KAAK3B,MAAMyH,qBAAqBpH,OAEzB,cAACmN,EAAA,EAAD,IAIP,gCACE,eAACC,EAAA,EAAD,WACE,sBAAKxN,UAAU,qBAAf,UACE,sBAAMA,UAAU,6BAAhB,mCAGkD,OAAjD0B,KAAK3B,MAAMsH,aAAaC,qBACvB,cAAC3F,EAAA,EAAD,IAC0D,IAAxDD,KAAK3B,MAAMsH,aAAaC,qBAAqBlH,OAC/C,sDAEA,eAAC,WAAD,WACE,sBACEqN,QAAS,kBAAM,EAAKtG,iBAAiB,QACrCnH,UAAS,uDACsB,QAA7B0B,KAAKT,MAAMmG,cACP,qFACA,8DAHG,+CAFX,UAQgC,QAA7B1F,KAAKT,MAAMmG,cACV,cAAC,KAAD,IAEA,cAAC,KAAD,IAEF,0CAED1F,KAAK3B,MAAMsH,aAAaC,qBAAqBjH,KAAI,SAACwD,EAAMmF,GAAP,OAChD,sBACEyE,QAAS,kBAAM,EAAKtG,iBAAiBtD,IAErC7D,UAAS,uDACsB,QAA7B,EAAKiB,MAAMmG,eACX,EAAKnG,MAAMmG,cAAc2D,yBACvBlH,EAAKkH,uBACH,qFACA,8DALG,+CAHX,UAWgC,QAA7B,EAAK9J,MAAMmG,eACZ,EAAKnG,MAAMmG,cAAc2D,yBACvBlH,EAAKkH,uBACL,cAAC,KAAD,IAEA,cAAC,KAAD,IAEF,+BAAOlH,EAAKmH,6BAhBPhC,EAAI,YAsBnB,sBAAKhJ,UAAU,GAAf,UACE,qBAAKA,UAAU,6BAAf,8BACA,sBACEyN,QAAS,kBAAM,EAAKxG,iBAAgB,IACpCjH,UAAU,wNAFZ,UAI6B,QAA1B0B,KAAKT,MAAMiE,WAAX,UACMxD,KAAKT,MAAMiE,WAAWuE,kBAD5B,cACmD/H,KAAKT,MAAMiE,WAAWwH,QACtE,cACJ,cAAC,IAAD,CAAQ1M,UAAU,gCAItB,sBAAKA,UAAU,OAAf,UACE,qBAAKA,UAAU,kCAAf,0BACC0B,KAAKT,MAAM+D,oBAIN,OAHNtD,KAAKyJ,mBACHzJ,KAAK3B,MAAM2J,YACXhI,KAAK3B,MAAM+H,iBAEX,cAACnG,EAAA,EAAD,IAEAD,KAAK+G,qBACH/G,KAAKyJ,mBACHzJ,KAAK3B,MAAM2J,YACXhI,KAAK3B,MAAM+H,kBAEbzH,KAAI,SAACwD,EAAMuF,GAAP,OACJ,qBACEqE,QAAS,kBAAM,EAAKpI,yBAAyBxB,EAAKgF,OADpD,SAIE,cAAC,IAAD,CACE5I,MAAO4D,EAAK5D,MACZ2I,MAAO/E,EAAK+E,MACZ8E,OAAQ,EAAKzM,MAAMqE,wBAA0BzB,EAAKgF,QAL/ChF,EAAK5D,MAAQmJ,YAa5B,oCAEE,sBAAKpJ,UAAU,uBAAf,UACE,qBAAKA,UAAU,aAAf,SACE,sBAAKA,UAAU,gCAAf,UACE,sBAAMA,UAAU,mCAAhB,iCAGA,sBACEyN,QAAS,kBAAM,EAAKhI,mBAAkB,IACtCzF,UAAU,sBAFZ,UAIE,sBAAMA,UAAU,gBAAhB,iCACA,sBAAMA,UAAU,mDAAhB,SAC+B,OAA5B0B,KAAKT,MAAMuE,aACR9D,KAAKT,MAAMuE,aAAab,eACxB,yBAKZ,qBAAK3E,UAAU,aAAf,SACE,sBAAKA,UAAU,mBAAf,UACG0B,KAAK3B,MAAM2J,aAAehI,KAAK3B,MAAM2J,YAAYtJ,OAAS,GACzD,sBAAKJ,UAAU,wDAAf,UACE,cAAC,IAAD,CAAUA,UAAU,2BACpB,sBAAMA,UAAU,gBAAhB,uBACA,wBACEA,UAAU,wGACV2N,SAAUjM,KAAKT,MAAMD,QACrByM,QAAS,WACP,EAAKlE,2BACL,EAAKhD,uBAAuB,CAC1BqH,WAAY,QACZhN,QAAQ,KAPd,mBAaA,wBACEZ,UAAS,gHACP0B,KAAKT,MAAMqF,aAAe,eAE5BmH,QAAS,kBAAM,EAAK1B,kBACpB4B,SAAUjM,KAAKT,MAAMD,SAAWU,KAAKT,MAAMqF,YAL7C,oBAWJ,sBACEmH,QAAS,kBAAM,EAAKhI,mBAAkB,IACtCzF,UAAU,gJAFZ,UAIE,cAAC,IAAD,CAAaA,UAAU,YAJzB,gCAYN,sBAAKA,UAAU,gBAAf,UACE,qBAAKA,UAAU,mBAAf,SACE,uBACE6N,SAAU,SAACC,GAAD,OAAO,EAAK7H,eAAe6H,EAAEC,OAAOjJ,QAC9C+D,KAAK,OACL/D,MAAOpD,KAAKT,MAAMiF,YAClB8H,YAAY,YACZhO,UAAU,6DACV2N,SACEjM,KAAKT,MAAM+D,oBAIL,OAHNtD,KAAKyJ,mBACHzJ,KAAK3B,MAAM2J,YACXhI,KAAK3B,MAAM+H,qBAKnB,qBAAK9H,UAAU,yBAAf,SACE,wBAAOA,UAAU,gBAAgBO,GAAG,iBAApC,UACE,uBAAOP,UAAU,sEAAjB,SACE,+BACE,oBAAIA,UAAU,YAAd,eACA,oBACEA,UAAU,2BACVyN,QAAS,kBAAM,EAAKxF,QAAQ,UAF9B,SAIE,sBAAKjI,UAAU,0BAAf,6BACkB,cAAC,IAAD,SAGpB,oBAAIA,UAAU,YAAd,yBACA,oBACEA,UAAU,2BACVyN,QAAS,kBAAM,EAAKxF,QAAQ,WAF9B,SAIE,sBAAKjI,UAAU,0BAAf,oBACS,cAAC,IAAD,SAGX,oBAAIA,UAAU,YAAd,mBACA,oBACEA,UAAU,2BACVyN,QAAS,kBAAM,EAAKxF,QAAQ,wBAF9B,SAIE,sBAAKjI,UAAU,0BAAf,mBACQ,cAAC,IAAD,SAGV,oBACEA,UAAU,2BACVyN,QAAS,kBAAM,EAAKxF,QAAQ,mBAF9B,SAIE,sBAAKjI,UAAU,0BAAf,sBACW,cAAC,IAAD,SAGb,oBACEA,UAAU,2BACVyN,QAAS,kBAAM,EAAKxF,QAAQ,uBAF9B,SAIE,sBAAKjI,UAAU,0BAAf,uBACY,cAAC,IAAD,SAGd,oBACEA,UAAU,2BACVyN,QAAS,kBAAM,EAAKxF,QAAQ,mBAF9B,SAIE,sBAAKjI,UAAU,0BAAf,oBACS,cAAC,IAAD,SAGX,oBACEA,UAAU,2BACVyN,QAAS,kBAAM,EAAKxF,QAAQ,wBAF9B,SAIE,sBAAKjI,UAAU,0BAAf,qBACU,cAAC,IAAD,SAGZ,oBACEA,UAAU,2BACVyN,QAAS,kBAAM,EAAKxF,QAAQ,SAF9B,SAIE,sBAAKjI,UAAU,0BAAf,kBACO,cAAC,IAAD,cAKb,gCACG0B,KAAKT,MAAM+D,mBACV,cAACiJ,EAAA,EAAD,CAAcC,KAAM,KAId,OAHJxM,KAAKyJ,mBACLzJ,KAAK3B,MAAM2J,YACXhI,KAAK3B,MAAM+H,iBAEb,cAACmG,EAAA,EAAD,CAAcC,KAAM,KAUP,IATXxM,KAAKqL,qBACLrL,KAAKyJ,mBACHzJ,KAAK3B,MAAM2J,YACXhI,KAAK3B,MAAM+H,iBAEbpG,KAAKT,MAAMqE,sBACX5D,KAAKT,MAAMiE,WACXxD,KAAKT,MAAMmG,cACX1F,KAAKT,MAAMuE,cACXpF,OACF,6BACE,oBAAI+N,QAAS,GAAInO,UAAU,YAA3B,SACE,sBAAKA,UAAU,oFAAf,UACE,cAAC,IAAD,CAAcA,UAAU,kEACxB,sBAAMA,UAAU,oBAAhB,yDAGA,qBAAKA,UAAU,wDAAf,SACE,qBAAIA,UAAU,2DAAd,UACE,oBACEyN,QAAS,kBAAM,EAAKhI,mBAAkB,IACtCzF,UAAU,yCAFZ,gCAMA,oBAAIA,UAAU,uBAAd,gBACA,oBACEA,UAAU,0BACVyN,QAAS,kBAAM,EAAKxG,iBAAgB,IAFtC,0CAYVmH,YACE1M,KAAKT,MAAM6E,UA/6B/BuH,EAi7BsB3L,KAAKqL,qBACHrL,KAAKyJ,mBACHzJ,KAAK3B,MAAM2J,YACXhI,KAAK3B,MAAM+H,iBAEbpG,KAAKT,MAAMqE,sBACX5D,KAAKT,MAAMiE,WACXxD,KAAKT,MAAMmG,cACX1F,KAAKT,MAAMuE,cAx7BnC8H,EA07BsB5L,KAAKT,MAAMiF,iBAx7B7B3D,IAAc+K,GAAiB,KAATA,EAAoBD,EACvCA,EAAQnE,QAAO,SAACmF,GACrB,IAAIC,EAGJ,IAAK,IAAIC,KAAQF,EAsBf,GArBAC,GAAO,EAEI,UAATC,GACS,WAATA,GACS,gBAATA,GACS,UAATA,GACS,UAATA,GACS,wBAATA,GACS,mBAATA,GACS,uBAATA,GACS,wBAATA,GACS,SAATA,GACS,mBAATA,GAEIF,EAAQE,KACVD,EACED,EAAQE,GAAOhN,WACZiN,cACAC,QAAQnB,EAAKkB,gBAAkB,GAGpCF,EAAM,MAEZ,OAAOA,MA65BW5M,KAAKT,MAAM2E,aACXlE,KAAKT,MAAM+E,WACX3F,KAAI,SAACwD,EAAgCmF,GAAjC,OACJ,qBAEEhJ,UAAS,UACPgJ,EAAI,IAAM,EAAI,cAAgB,WADvB,8HAGTyE,QAAS,kBAAM,EAAK1M,SAAS,CAAEqM,gBAAiBvJ,KALlD,UAOE,oBAAI7D,UAAU,YAAd,SAA2BgJ,EAAI,IAC/B,oBAAIhJ,UAAU,YAAd,SAA2B6D,EAAKK,QAChC,oBAAIlE,UAAU,YAAd,SAA2B6D,EAAKM,cAChC,oBAAInE,UAAU,YAAd,SAA2B6D,EAAKO,SAChC,oBAAIpE,UAAU,YAAd,SAA2B6D,EAAKQ,QAChC,oBAAIrE,UAAU,YAAd,SACG6D,EAAKS,sBAER,oBAAItE,UAAU,YAAd,SAA2B6D,EAAKc,iBAChC,oBAAI3E,UAAU,YAAd,SAA2B6D,EAAKW,qBAChC,oBAAIxE,UAAU,YAAd,SACGiJ,YACCpF,EAAKa,eAAe8J,iBAGxB,oBAAIxO,UAAU,YAAd,SACG6D,EAAKU,sBAER,oBAAIvE,UAAU,YAAd,SAA2B6D,EAAKY,SAxB3BuE,EAAI,gBAkCtBtH,KAAKT,MAAMyE,gBACV,cAACgJ,EAAA,EAAD,CACEzO,MACE,sBAAKD,UAAU,mCAAf,UACE,cAAC,IAAD,CAAUA,UAAU,2BACpB,qBAAKA,UAAU,gBAAf,SACE,sBAAMA,UAAU,kCAAhB,uCAMN2O,UAAU,EACVhH,MAAOiH,IAAOC,QACdC,MAAO,WACL,EAAKrJ,mBAAkB,GACvB,EAAKU,uBAAuB,KAE9B4I,eAAe,EACfC,eAAgBC,IAAUC,WAC1BC,cAAc,EACdC,QAAS,CAAEnP,OAAO,GApBpB,SAsBE,qBAAKD,UAAU,YAAf,SACkC,OAA/B0B,KAAK3B,MAAM+H,gBACV,cAACuH,EAAA,EAAD,CAAWxG,KAAMyG,IAAYC,OACW,IAAtC7N,KAAK3B,MAAM+H,gBAAgB1H,OAC7B,sBAAKJ,UAAU,0DAAf,UACE,cAAC,KAAD,CAAUA,UAAU,aACpB,qBAAKA,UAAU,4CAAf,SACE,4EAIJ,qCACE,sBAAKA,UAAU,gBAAf,UACE,sBAAMA,UAAU,kCAAhB,qCAGA,uBACE6N,SAAU,SAACC,GAAD,OACR,EAAK3H,uBAAuB2H,EAAEC,OAAOjJ,QAEvC+D,KAAK,OACL7I,UAAU,qCACVgO,YAAY,kBAGhB,qBACEP,QAAS,WACP,EAAK3B,oBAAoB,gBACzB,EAAKvG,gBAAgB,MACrB,EAAKE,mBAAkB,GACvB,EAAKU,uBAAuB,KAE9BnG,UAAU,iHAPZ,SASE,sBAAKA,UAAU,uBAAf,UACE,qBAAKA,UAAU,6BAAf,SACE,sBAAKA,UAAU,mCAAf,UACE,8BACE,cAAC,IAAD,CAAgBA,UAAU,yCAE5B,qBAAKA,UAAU,gBAAf,SACE,sBAAMA,UAAU,+CAAhB,iCAMN,qBAAKA,UAAU,4CAAf,SACE,qBAAKA,UAAU,uCAAf,SACE,qBAAKA,UAAU,yCAAf,6BAOPwP,YACC9N,KAAK3B,MAAM+H,gBACXpG,KAAKT,MAAMmF,qBACX/F,KAAI,SAACwD,EAAmBG,GAApB,OACJ,qBAEEyJ,QAAS,WACP,EAAK3B,oBAAoBjI,EAAKc,gBAC9B,EAAKY,gBAAgB1B,GACrB,EAAK4B,mBAAkB,GACvB,EAAKU,uBAAuB,KAE9BnG,UAAU,iHARZ,SAUE,sBAAKA,UAAU,uBAAf,UACE,qBAAKA,UAAU,6BAAf,SACE,sBAAKA,UAAU,mCAAf,UACE,8BACE,cAAC,IAAD,CAAgBA,UAAU,yCAE5B,sBAAKA,UAAU,gBAAf,UACE,sBAAMA,UAAU,6CAAhB,SACG6D,EAAKc,iBAER,uBAAM3E,UAAU,+BAAhB,0BACgB,IACd,sBACEA,UAAU,2BACVyP,MAAO,CAAEC,UAAW,UAFtB,SAIG7L,EAAK8L,gBAAgBC,uBAG1B,sBAAM5P,UAAU,2EAAhB,SAEI6D,EAAKkH,uBACFC,mCAMb,qBAAKhL,UAAU,4CAAf,SACE,qBAAKA,UAAU,uCAAf,SACE,qBAAKA,UAAU,yCAAf,4BAvCDgE,EAAM,aAyDxBtC,KAAKT,MAAMiG,cACV,cAACwH,EAAA,EAAD,CACEzO,MACE,sBAAKD,UAAU,mCAAf,UACE,cAAC,IAAD,CAAWA,UAAU,2BACrB,sBAAMA,UAAU,gBAAhB,gCAGJ2O,UAAU,EACVhH,MAAOiH,IAAOC,QACdC,MAAO,kBAAM,EAAK7H,iBAAgB,IAClC8H,eAAe,EACfC,eAAgBC,IAAUC,WAC1BC,cAAc,EACdC,QAAS,CAAEnP,OAAO,GAbpB,SAeE,cAAC4P,EAAA,EAAD,CACElM,WAAYjC,KAAK3B,MAAMyH,qBACvBsI,iBAAkB,SAAChL,GACjB,EAAKG,cAAcH,GACnB,EAAKmC,iBAAgB,IAEvB8I,WAAW,EACXC,gBAAiBtO,KAAKT,MAAMiE,eASE,OAAnCxD,KAAKT,MAAMuF,sBACgC,IAA1C9E,KAAKT,MAAMuF,oBAAoB5F,QAC7B,cAAC8N,EAAA,EAAD,CACEzO,MACE,qBAAKD,UAAU,mCAAf,SAEE,sBAAKA,UAAU,gBAAf,UACE,sBAAMA,UAAU,mCAAhB,wCAGA,uBAAMA,UAAU,oCAAhB,wBACc0B,KAAKT,MAAMuF,oBAAoBoH,WAAY,IADzD,iBAONe,UAAU,EACVhH,MAAOiH,IAAOC,QACdC,MAAO,kBAAM,EAAKvI,uBAAuB,OACzCwI,eAAe,EACfC,eAAgBC,IAAUgB,OAC1Bd,cAAc,EACdC,QAAS,CAAEnP,OAAO,GArBpB,SAuBE,sBAAKD,UAAU,OAAf,UACE,sBAAKA,UAAU,0CAAf,UACE,sBAAKA,UAAU,gBAAf,UACE,0CACA,uBACE6I,KAAK,OACL7I,UAAS,kDACP0B,KAAKT,MAAM+F,WACsB,iBAAjCtF,KAAKT,MAAM+F,UAAU3E,QACjB,iBACA,kBAJG,aAMT2L,YAAY,qBACZlJ,MAAOpD,KAAKT,MAAMyF,YAClBmH,SAAU,SAACC,GACT,EAAK/G,aAAa,MAClB,EAAKN,eAAeqH,EAAEC,OAAOjJ,QAE/B6I,SAAUjM,KAAKT,MAAMD,UAEtBU,KAAKT,MAAM+F,WACuB,iBAAjCtF,KAAKT,MAAM+F,UAAU3E,SACnB,sBAAMrC,UAAU,eAAhB,SACG0B,KAAKT,MAAM+F,UAAUnG,SAI9B,sBAAKb,UAAU,qBAAf,UACE,mDACA,qBAAKA,UAAU,0DAAf,SACG0B,KAAKT,MAAM2F,cAAcvG,KAAI,SAACwD,EAAMuF,GAAP,OAC5B,sBAEEpJ,UAAS,kCACP,EAAK6L,gBAAgBhI,EAAKG,KACtB,iBACA,sBAENyJ,QAAS,kBACP,EAAK5B,gBAAgBhI,EAAKG,MAC1B,EAAKmF,oBAAoBtF,EAAKG,MAEhC/D,MACG,EAAK4L,gBAAgBhI,EAAKG,KAEvB,GADA,6BAbR,UAiBGH,EAAKjD,OACJ,cAAC,IAAD,CAAYZ,UAAU,0BAEtB,cAAC,IAAD,CAAwBA,UAAU,YAEpC,+BAAO6D,EAAK5D,UArBPmJ,QAyBV1H,KAAKT,MAAM+F,WACuB,mBAAjCtF,KAAKT,MAAM+F,UAAU3E,SACnB,sBAAMrC,UAAU,eAAhB,SACG0B,KAAKT,MAAM+F,UAAUnG,YAKhC,sBAAKb,UAAU,iCAAf,UACE,sBACEA,UAAS,yCACTyN,QAAS,kBACP,EAAK9B,mBAAmB,EAAK1K,MAAM6F,YAHvC,UAMGpF,KAAKT,MAAM6F,UACV,cAAC,IAAD,CAAY9G,UAAU,0BAEtB,cAAC,IAAD,CAAwBA,UAAU,YAEpC,iDAGD0B,KAAKT,MAAMmE,qBAAuB1D,KAAKT,MAAMD,SAC5C,cAACkP,EAAA,EAAD,CACEC,SAAUzO,KAAKT,MAAMmE,mBACrBgL,SAAU1O,KAAKT,MAAMyF,YACrB2J,QAAQ,qBAYrB3O,KAAKT,MAAMmM,iBACV1L,KAAKwL,eAAexL,KAAKT,MAAMmM,kBAC7B,cAACsB,EAAA,EAAD,CACEzO,MACE,sBAAKD,UAAU,mCAAf,UACE,cAAC,IAAD,CAAgBA,UAAU,2BAC1B,sBAAMA,UAAU,WAAhB,SACG0B,KAAKT,MAAMmM,gBAAgBlJ,MAC1B,gCAIRyK,UAAU,EACVhH,MAAOiH,IAAOC,QACdC,MAAO,kBAAM,EAAK/N,SAAS,CAAEqM,gBAAiB,QAC9C2B,eAAe,EACfC,eAAgBC,IAAUC,WAC1BC,cAAc,EACdC,QAAS,CAAEnP,OAAO,GAhBpB,SAkBE,cAAC,EAAD,CACEkB,SACEO,KAAKwL,eAAexL,KAAKT,MAAMmM,iBAAkBjM,uB,GA3pCpCiC,aA4rCpBkN,EAAoB/M,aAtBT,SAAC,GAYnB,IAXJ+I,EAWG,EAXHA,KACAiE,EAUG,EAVHA,gBACAC,EASG,EATHA,YACAnJ,EAQG,EARHA,aACAqC,EAOG,EAPHA,YAQA,MAAO,CACL4C,KAAMA,EACN9E,qBAAsBgJ,EAAYC,gBAClC3I,gBAAiByI,EAAgBzI,gBACjCT,eACAqC,iBAIsD,CACxD1B,mBACAP,uBACAF,6BACAQ,iBACAL,qBAL+BnE,CAM9BqB,I,oqBC/tCU8L,EAAa,SAACC,GACzB,8CAAO,WAAOC,GAAP,eAAAC,EAAA,6DACLF,GAAS,EAAM,IADV,kBAGeG,IAAMC,IAAN,UACbC,IAAIC,YADS,kBAHf,OAGGC,EAHH,OAMHN,EAA4B,CAC1B/H,KAAMsI,IAAYC,aAClBC,QAASH,EAAI/Q,OAEfmR,QAAQC,IAAI,wCACZD,QAAQC,IAAI,CAAEL,IAAKA,EAAI/Q,OACvBmR,QAAQC,IAAI,wCACZZ,GAAS,EAAO,GAAIO,EAAI/Q,MAbrB,kDAeHmR,QAAQE,MAAM,QAAd,MACAb,GAAS,EAAOc,YAAY,EAAD,KAhBxB,0DAAP,uDAqBWC,EAAoB,SAACvR,GAChC,8CAAO,WAAOyQ,GAAP,SAAAC,EAAA,sDACLD,EAAgC,CAC9B/H,KAAMsI,IAAYQ,gBAClBN,QAASlR,IAHN,2CAAP,uDAQWyR,EAAoB,SAACzR,GAMhC,OADAmR,QAAQC,IAAI,CAAEpR,SACd,uCAAO,WAAOyQ,GAAP,SAAAC,EAAA,sDACLD,EAAgC,CAC9B/H,KAAMsI,IAAYU,gBAClBR,QAASlR,IAHN,2CAAP,uDAQW2R,EAAoB,SAAC3R,GAChC,8CAAO,WAAOyQ,GAAP,SAAAC,EAAA,sDACLD,EAAgC,CAC9B/H,KAAMsI,IAAYY,gBAClBV,QAASlR,IAHN,2CAAP,uDASW6R,EAAoB,SAAC7R,GAIhC,8CAAO,WAAOyQ,GAAP,SAAAC,EAAA,sDACLD,EAAgC,CAC9B/H,KAAMsI,IAAYc,gBAClBZ,QAASlR,IAHN,2CAAP,uDAQW+R,EAAoB,SAAC/R,GAOhC,OADAmR,QAAQC,IAAI,CAAEpR,SACd,uCAAO,WAAOyQ,GAAP,SAAAC,EAAA,sDACLD,EAAgC,CAC9B/H,KAAMsI,IAAYgB,gBAClBd,QAASlR,IAHN,2CAAP,uDAQWiS,EAAoB,SAACjS,GAKhC,OADAmR,QAAQC,IAAI,CAAEpR,SACd,uCAAO,WAAOyQ,GAAP,SAAAC,EAAA,sDACLD,EAAgC,CAC9B/H,KAAMsI,IAAYkB,gBAClBhB,QAASlR,IAHN,2CAAP,uDASWmS,EAAkB,SAACnS,GAK9B,8CAAO,WAAOyQ,GAAP,SAAAC,EAAA,sDACLD,EAA8B,CAC5B/H,KAAMsI,IAAYoB,cAClBlB,QAASlR,IAHN,2CAAP,uDAQWqS,EAAkB,SAACrS,GAO9B,8CAAO,WAAOyQ,GAAP,SAAAC,EAAA,sDACLD,EAA8B,CAC5B/H,KAAMsI,IAAYsB,cAClBpB,QAASlR,IAHN,2CAAP,uDAQWuS,EAAkB,SAACvS,GAM9B,OADAmR,QAAQC,IAAI,CAAEpR,SACd,uCAAO,WAAOyQ,GAAP,SAAAC,EAAA,sDACLD,EAA8B,CAC5B/H,KAAMsI,IAAYwB,cAClBtB,QAASlR,IAHN,2CAAP,uDASWyS,EAAkB,SAACzS,GAM9B,OADAmR,QAAQC,IAAI,CAAEpR,SACd,uCAAO,WAAOyQ,GAAP,SAAAC,EAAA,sDACLD,EAA8B,CAC5B/H,KAAMsI,IAAY0B,cAClBxB,QAASlR,IAHN,2CAAP,uDAQW2S,EAAkB,SAAC3S,GAO9B,OADAmR,QAAQC,IAAI,CAAEpR,SACd,uCAAO,WAAOyQ,GAAP,SAAAC,EAAA,sDACLD,EAA8B,CAC5B/H,KAAMsI,IAAY4B,cAClB1B,QAASlR,IAHN,2CAAP,uDAQW6S,EAAkB,SAAC7S,GAK9B,8CAAO,WAAOyQ,GAAP,SAAAC,EAAA,sDACLD,EAA8B,CAC5B/H,KAAMsI,IAAY8B,cAClB5B,QAASlR,IAHN,2CAAP,uDASW+S,EAAgB,SAAC/S,GAO5B,OADAmR,QAAQC,IAAI,CAAEpR,SACd,uCAAO,WAAOyQ,GAAP,SAAAC,EAAA,sDACLD,EAA4B,CAC1B/H,KAAMsI,IAAYgC,YAClB9B,QAASlR,IAHN,2CAAP,uDAQWiT,EAAgB,SAACjT,GAQ5B,8CAAO,WAAOyQ,GAAP,SAAAC,EAAA,sDACLD,EAA4B,CAC1B/H,KAAMsI,IAAYkC,YAClBhC,QAASlR,IAHN,2CAAP,uDAQWmT,EAAgB,SAACnT,GAO5B,OADAmR,QAAQC,IAAI,CAAEgC,YAAapT,IAC3B,uCAAO,WAAOyQ,GAAP,SAAAC,EAAA,sDACLD,EAA4B,CAC1B/H,KAAMsI,IAAYqC,YAClBnC,QAASlR,IAHN,2CAAP,uDAUWW,EAA4B,SAACJ,GACxC,OAAO,SAACkQ,GACNA,EAAuC,CACrC/H,KAAMsI,IAAYsC,0BAClBpC,QAAS3Q,O,sTCtTFgT,EAAoB,SAAC/C,GAChC,8CAAO,WAAOC,GAAP,eAAAC,EAAA,6DACLF,GAAS,EAAM,IADV,SAGHgD,cAHG,SAIe7C,IAAMC,IAAN,UACbC,IAAI4C,KADS,cAJf,OAIG1C,EAJH,OAOHN,EAAkC,CAChC/H,KAAMsI,IAAY0C,oBAClBxC,QAASH,EAAI/Q,OAEfwQ,GAAS,EAAO,IAXb,kDAaHW,QAAQC,IAAI,CAAEuC,WAAW,EAAD,KACxBnD,GAAS,EAAOc,YAAY,EAAD,KAdxB,0DAAP,uDAmBWsC,EAAuB,SAAC5T,GAInC,8CAAO,WAAOyQ,GAAP,SAAAC,EAAA,sDACLD,EAAsC,CACpC/H,KAAMsI,IAAY6C,wBAClB3C,QAASlR,IAHN,2CAAP,uDAUW8T,EAAgB,SAACtD,GAC5B,8CAAO,WAAOC,GAAP,iBAAAC,EAAA,6DACLF,GAAS,EAAM,IADV,SAGHgD,cAHG,SAIe7C,IAAMC,IAAN,UAObC,IAAI4C,KAPS,mBAJf,OAIG1C,EAJH,OAYCgD,EAAkChD,EAAI/Q,KAAKE,KAAI,SAACF,GAAD,MAAW,CAC5DI,GAAIJ,EAAKI,GACT4T,KAAMhU,EAAKF,MACX+D,IAAK7D,EAAK6D,IACVoQ,UAAWjU,EAAKiU,cAElBxD,EAA8B,CAC5B/H,KAAMsI,IAAYkD,gBAClBhD,QAAS6C,IAEXvD,GAAS,EAAO,GAAIuD,GAtBjB,kDAwBH5C,QAAQC,IAAI,CAAEuC,WAAW,EAAD,KACxBnD,GAAS,EAAOc,YAAY,EAAD,KAzBxB,0DAAP,uDAgCW1J,EAAe,SAAC4I,GAC3B,8CAAO,WAAOC,GAAP,eAAAC,EAAA,6DACLF,GAAS,EAAM,IADV,SAGHgD,cAHG,SAIe7C,IAAMC,IAAN,UAA4BC,IAAIC,YAAhC,cAJf,OAIGC,EAJH,OAKHN,EAA6B,CAC3B/H,KAAMsI,IAAYmD,aAClBjD,QAASH,EAAI/Q,OAEfwQ,GAAS,EAAO,IATb,kDAWHW,QAAQC,IAAI,CAAEuC,WAAW,EAAD,KACxBnD,GAAS,EAAOc,YAAY,EAAD,KAZxB,0DAAP,uDAqCW8C,EAAiB,SAACpU,GAE7B,OADAmR,QAAQC,IAAI,CAAEgD,eAAgBpU,IAC9B,uCAAO,WAAOyQ,GAAP,SAAAC,EAAA,sDACLD,EAAsC,CACpC/H,KAAMsI,IAAYqD,gBAClBnD,QAASlR,IAHN,2CAAP,uDAQWsU,EAAkB,SAACtU,GAI9B,8CAAO,WAAOyQ,GAAP,SAAAC,EAAA,sDACLD,EAAgC,CAC9B/H,KAAMsI,IAAYuD,iBAClBrD,QAASlR,IAHN,2CAAP,wD,iCC1NF,wBAsBeoN,IAnBG,WAChB,OACE,qBAAKvN,UAAU,OAAf,SACE,sBAAKA,UAAU,oHAAf,UACE,cAAC,IAAD,CAAeA,UAAU,yBACzB,sBAAKA,UAAU,4BAAf,UACE,sBAAMA,UAAU,sCAAhB,kCAGA,sBAAMA,UAAU,UAAhB,uG,iCCZV,gBAoCeiO,IA/BmC,SAAClO,GACjD,IAAM4U,EAAc,WAElB,IADA,IAAIC,EAAsB,GACjBxL,EAAQ,EAAGA,EAAQrJ,EAAMmO,KAAM9E,IACtCwL,EAAUpS,KAAK4G,GAUjB,OARawL,EAAUvU,KAAI,SAACgC,GAC1B,OACE,oBAAIrC,UAAU,oCAAd,SACE,qBAAKA,UAAU,yGADsCqC,OAQ7D,OACE,qCACE,oBAAIrC,UAAU,2BAAd,SACG2U,KAD2C,KAG9C,oBAAI3U,UAAU,2BAAd,SACG2U,KAD2C,OAG9C,oBAAI3U,UAAU,2BAAd,SACG2U,KAD2C,a,iCCuB7C,IAAKtM,EAMAkD,EAuCAtH,EA7CZ,sG,SAAYoE,K,kBAAAA,E,kBAAAA,E,iBAAAA,M,cAMAkD,K,YAAAA,E,gBAAAA,E,UAAAA,M,cAuCAtH,K,cAAAA,E,gBAAAA,E,0BAAAA,E,cAAAA,E,cAAAA,E,0CAAAA,E,gCAAAA,E,wCAAAA,E,YAAAA,E,gCAAAA,E,2CAAAA,M","file":"static/js/47.b56e6a4f.chunk.js","sourcesContent":["import React from \"react\";\nimport { ImRadioChecked, ImRadioUnchecked } from \"react-icons/im\";\nimport { ContractItemList } from \"../../containers/PlacementContract/Contract/Contract\";\n\ninterface AppProps {\n  title: string;\n  data: ContractItemList[];\n  strict: boolean;\n  //   expandClick?: () => void;\n  //   loading: boolean;\n}\n\nconst ContractViewerItem: React.FC<AppProps> = (props) => {\n  return (\n    <div className=\"bg-white border p-3 rounded mt-2\">\n      <div\n        // onClick={() => {\n        //   setOpen(!open);\n        //   if (expandClick) expandClick();\n        // }}\n        className=\"flex flex-row items-center justify-between cursor-pointer hover:text-blue-600\"\n      >\n        <div className=\"flex flex-row items-center gap-3 group cursor-pointer\">\n          {/* <div>\n            <div\n              className={`${\n                open === false\n                  ? \"bg-gray-50 text-gray-400\"\n                  : \"bg-blue-50 text-blue-600\"\n              } rounded-full flex items-center justify-center h-10 w-10  cursor-pointer group-hover:bg-blue-100 group-hover:text-blue-600`}\n            >\n              <MdExpandMore\n                className={`text-5xl transition transform${\n                  open === false ? translateClass : \"\"\n                }`}\n              />\n            </div>\n          </div> */}\n          <span\n            className={`text-blue-600 font-extrabold text-xl group-hover:text-blue-600`}\n          >\n            {\"Selected \" + props.title + \"(s)\"}\n          </span>\n        </div>\n        <div className=\"text-right bg-gray-50 text-gray-800 rounded-xl px-3 py-1 flex flex-row items-center\">\n          <span className=\"text-sm \">\n            {props.strict === false && \"All \" + props.title + \"s, with \"}\n            <b>{props.data.length}</b> Priorities\n          </span>\n        </div>\n      </div>\n      <div className=\"my-2 rounded bg-white px-3 py-2 animate__animated animate__fadeIn\">\n        {/* <div>\n          <span className=\"text-lg font-bold\">Select priority</span>\n        </div> */}\n        <div className=\"bg-gray-50 border rounded-md w-full grid grid-cols-12\">\n          <div className=\"col-span-10 p-1\">\n            {props.data.length <= 0 ? (\n              <span className=\" inline-block w-auto  rounded-full text-md bg-gray-500  m-1 text-white\">\n                <div className=\"flex items-center\">\n                  <span className=\"flex-1 p-0.5 px-2\">\n                    All {props.title}\n                    {`s`}\n                  </span>\n                </div>\n              </span>\n            ) : (\n              props.data.map((itm) => (\n                <span\n                  key={itm.id}\n                  className=\" inline-block w-auto  rounded-full text-md bg-gray-500  m-1 text-white\"\n                >\n                  <div className=\"flex items-center\">\n                    <span className=\"flex-1 p-0.5 px-2\">{itm.title}</span>\n                  </div>\n                </span>\n              ))\n            )}\n\n            {props.strict === false && props.data.length > 0 && (\n              <span className=\" inline-block w-auto  rounded-full text-md bg-gray-500  m-1 text-white\">\n                <div className=\"flex items-center\">\n                  <span className=\"flex-1 p-0.5 px-2\">\n                    and others {props.title}\n                    {`(s)`}\n                  </span>\n                </div>\n              </span>\n            )}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default ContractViewerItem;\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport {\n  FC_getLocations,\n  FC_LoadSchoolsByDistrict,\n  FC_LoadSchoolsByIDs,\n  FT_LoadSchoolsByDistrict,\n  FT_LoadSchoolsByIDs,\n  LocationAPI,\n  SchoolContract,\n} from \"../../actions\";\nimport {\n  FC_GetWaitingLocationList,\n  FT_GetWaitingLocationList,\n} from \"../../actions/location\";\nimport { ContractItemList } from \"../../containers/PlacementContract/Contract/Contract\";\nimport { ViewContractType } from \"../../interfaces/waitingList\";\nimport { StoreState } from \"../../reducers\";\nimport Loading from \"../Loading/Loading\";\nimport ContractViewerItem from \"./ContractViewerItem\";\n\ninterface ContractViewerProps {\n  // FROM PROPS\n  contract: ViewContractType;\n\n  // FROM REDUX =========\n  locations: LocationAPI | null;\n  FC_LoadSchoolsByDistrict: FT_LoadSchoolsByDistrict;\n  FC_LoadSchoolsByIDs: FT_LoadSchoolsByIDs;\n  FC_GetWaitingLocationList: FT_GetWaitingLocationList;\n}\n\ninterface ContractViewerState {\n  loading: boolean;\n  selectedSchool: SchoolContract[] | null;\n}\n\nclass ContractViewer extends Component<\n  ContractViewerProps,\n  ContractViewerState\n> {\n  constructor(props: ContractViewerProps) {\n    super(props);\n\n    this.state = {\n      loading: true,\n      selectedSchool: null,\n    };\n  }\n\n  componentDidMount = () => {\n    if (this.props.locations === null)\n      FC_getLocations(\n        (status: boolean, data: LocationAPI | null, msg: string) => {\n          if (status === true && data !== null) {\n            this.props.FC_GetWaitingLocationList(data);\n            this.setState({\n              loading: false,\n            });\n          } else {\n            this.setState({\n              loading: false,\n            });\n          }\n        }\n      );\n    else if (\n      this.state.selectedSchool === null &&\n      this.props.contract.school.values.length >= 1\n    ) {\n      this.setState({\n        loading: true,\n      });\n      this.props.FC_LoadSchoolsByIDs(\n        this.props.contract.school.values.map((itm) => itm.toString()),\n        (status, schools, err) => {\n          if (status === true) {\n            this.setState({\n              selectedSchool: schools,\n              loading: false,\n            });\n          }\n        }\n      );\n    } else this.setState({ loading: false, selectedSchool: [] });\n  };\n\n  render() {\n    if (\n      this.state.loading === true ||\n      this.props.locations === null ||\n      this.state.selectedSchool === null\n    ) {\n      return (\n        <div className=\"bg-white mt-6 mx-6 p-6 h-full flex flex-col items-start justify-center rounded\">\n          <div className=\"text-xl mx-4 my-4 animate-pulse\">\n            Loading contract, Please wait...\n          </div>\n          <Loading />\n        </div>\n      );\n    }\n\n    let ProvincesList: ContractItemList[] = [];\n    let DistrictList: ContractItemList[] = [];\n    let SectorList: ContractItemList[] = [];\n\n    if (this.props.contract !== null) {\n      // * Province\n      this.props.contract.province.values.forEach((el) => {\n        if (this.props.locations !== null) {\n          let findIt = this.props.locations.provinces.find(\n            (element) => element.province_code === el.toString()\n          );\n          if (findIt !== undefined) {\n            ProvincesList.push({\n              id: findIt.province_code,\n              title: findIt.province_name,\n            } as ContractItemList);\n          }\n        }\n      });\n\n      // * Province\n      this.props.contract.district.values.forEach((el) => {\n        if (this.props.locations !== null) {\n          let findIt = this.props.locations.districts.find(\n            (element) => element.district_code === el.toString()\n          );\n          if (findIt !== undefined) {\n            DistrictList.push({\n              id: findIt.district_code,\n              title: findIt.district_name,\n            } as ContractItemList);\n          }\n        }\n      });\n\n      // * Sector\n      this.props.contract.sector.values.forEach((el) => {\n        if (this.props.locations !== null) {\n          let findIt = this.props.locations.sectors.find(\n            (element) => element.sector_code === el.toString()\n          );\n          if (findIt !== undefined) {\n            SectorList.push({\n              id: findIt.sector_code,\n              title: findIt.sector_name,\n            } as ContractItemList);\n          }\n        }\n      });\n    }\n\n    return (\n      <>\n        <ContractViewerItem\n          title=\"Province\"\n          data={ProvincesList}\n          strict={this.props.contract.province.strict}\n        />\n        <ContractViewerItem\n          title=\"District\"\n          data={DistrictList}\n          strict={this.props.contract.district.strict}\n        />\n        <ContractViewerItem\n          title=\"Sector\"\n          data={SectorList}\n          strict={this.props.contract.sector.strict}\n        />\n        <ContractViewerItem\n          title=\"School\"\n          data={this.state.selectedSchool.map((itm) => ({\n            id: itm.school_code,\n            title: itm.school_name,\n          }))}\n          strict={this.props.contract.school.strict}\n        />\n      </>\n    );\n  }\n}\n\nconst mapStateToProps = ({\n  locations,\n}: StoreState): {\n  locations: LocationAPI | null;\n} => {\n  return { locations: locations.waitingLocation };\n};\nexport default React.memo(\n  connect(mapStateToProps, {\n    FC_LoadSchoolsByDistrict,\n    FC_LoadSchoolsByIDs,\n    FC_GetWaitingLocationList,\n  })(ContractViewer)\n);\n","import React, { Component, Fragment } from \"react\";\nimport { BiExport, BiFilterAlt, BiSort } from \"react-icons/bi\";\nimport { FaFileContract } from \"react-icons/fa\";\nimport { FiEdit } from \"react-icons/fi\";\nimport { ImFilesEmpty } from \"react-icons/im\";\nimport { IoIosBriefcase } from \"react-icons/io\";\nimport { IoFilter } from \"react-icons/io5\";\nimport {\n  MdCheckBox,\n  MdCheckBoxOutlineBlank,\n  MdHistory,\n  MdRadioButtonChecked,\n  MdRadioButtonUnchecked,\n  MdSearch,\n} from \"react-icons/md\";\nimport { connect } from \"react-redux\";\nimport {\n  Auth,\n  schoolLevelsStoreInterface,\n  loadEducationCategories,\n  PushPopupAlert,\n} from \"../../../actions\";\nimport { GetAllSessionPlans } from \"../../../actions/session\";\nimport { getPositions } from \"../../../actions/settings\";\nimport { getWaitingList } from \"../../../actions/waitingList\";\nimport { PopupAlertData } from \"../../../components/Alert/Popup\";\nimport ContractViewer from \"../../../components/ContractViewer/ContractViewer\";\nimport {\n  generatePDF,\n  reportSettingsInterface,\n} from \"../../../components/DownloadPDF/rest\";\nimport Loading from \"../../../components/Loading/Loading\";\nimport LoadingV2, { LoadingType } from \"../../../components/Loading/LoadingV2\";\nimport TableLoading from \"../../../components/Loading/TableLoading\";\nimport Modal, { ModalSize, Themes } from \"../../../components/Modal/Modal\";\nimport {\n  SideNavigation,\n  MainItem,\n} from \"../../../components/Navigation/SideNavigation\";\nimport {\n  SessionPlanInterface,\n  PositionAPI,\n  education_category,\n} from \"../../../interfaces\";\nimport { PopupAlertTheme } from \"../../../interfaces/popupAlert\";\nimport {\n  applicantGender,\n  WaitingListDataInterface,\n  WaitingListInterface,\n  waitingListReportContentInterface,\n  waitingListReportContentKeyInterface,\n  WaitingListStatus,\n  WaitingListToPrintInterface,\n} from \"../../../interfaces/waitingList\";\nimport { StoreState } from \"../../../reducers\";\nimport {\n  capitalizeFirstLetter,\n  getPositionById,\n} from \"../../../shared/dataTest\";\nimport ExportToExcel from \"../../../utils/ExportToExcel\";\nimport { DATE, search, sortThisArray } from \"../../../utils/functions\";\nimport ChooseSession from \"../../SessionSettings/ChooseSession\";\nimport NoSession from \"../../SessionSettings/NoSession\";\n\nexport const getPeriodById = (\n  allSession: SessionPlanInterface[],\n  period_id: string\n): SessionPlanInterface | undefined => {\n  return allSession.find((item) => item.session_plan_id === period_id);\n};\n\nconst searchData = (\n  objList: WaitingListDataInterface[],\n  text: string\n): WaitingListDataInterface[] => {\n  if (undefined === text || text === \"\") return objList;\n  return objList.filter((product) => {\n    let flag;\n    // let dataKeys = product;\n\n    for (let prop in product) {\n      flag = false;\n      if (\n        prop === \"names\" ||\n        prop === \"gender\" ||\n        prop === \"national_id\" ||\n        prop === \"phone\" ||\n        prop === \"email\" ||\n        prop === \"user_position_marks\" ||\n        prop === \"position_title\" ||\n        prop === \"education_category\" ||\n        prop === \"waitingList_session\" ||\n        prop === \"date\" ||\n        prop === \"waiting_status\"\n      ) {\n        if (product[prop]) {\n          flag =\n            product[prop]!.toString()\n              .toLowerCase()\n              .indexOf(text.toLowerCase()) > -1;\n        }\n      }\n      if (flag) break;\n    }\n    return flag;\n  });\n};\n\nconst defaultReportContent: waitingListReportContentInterface[] = [\n  {\n    key: waitingListReportContentKeyInterface.names,\n    title: \"Applicant Names\",\n    status: true,\n  },\n  {\n    key: waitingListReportContentKeyInterface.national_id,\n    title: \"National ID\",\n    status: true,\n  },\n  {\n    key: waitingListReportContentKeyInterface.gender,\n    title: \"Gender\",\n    status: true,\n  },\n  {\n    key: waitingListReportContentKeyInterface.phone,\n    title: \"Phone\",\n    status: true,\n  },\n  {\n    key: waitingListReportContentKeyInterface.user_position_marks,\n    title: \"Applicant marks\",\n    status: true,\n  },\n  {\n    key: waitingListReportContentKeyInterface.waitingList_session,\n    title: \"Waiting list Session\",\n    status: true,\n  },\n  {\n    key: waitingListReportContentKeyInterface.education_category,\n    title: \"Education Institute\",\n    status: true,\n  },\n  {\n    key: waitingListReportContentKeyInterface.date,\n    title: \"Waiting list Date\",\n    status: true,\n  },\n  {\n    key: waitingListReportContentKeyInterface.waiting_status,\n    title: \"Waiting list Status\",\n    status: true,\n  },\n  {\n    key: waitingListReportContentKeyInterface.position_title,\n    title: \"Position\",\n    status: true,\n  },\n];\n\ntype AppProps = {\n  auth: Auth;\n  application_sessions: SessionPlanInterface[] | null;\n  systemPositions: PositionAPI[] | null;\n  schoolLevels: schoolLevelsStoreInterface;\n  waitingList: WaitingListInterface[] | null;\n  getWaitingList: Function;\n  getPositions: Function;\n  GetAllSessionPlans: Function;\n  loadEducationCategories: (callback: (loading: boolean) => void) => void;\n  PushPopupAlert: (alert: PopupAlertData) => void;\n};\n\ntype AppState = {\n  thisPeriod: SessionPlanInterface | \"all\";\n  loading: boolean;\n  loadingWaitingList: boolean;\n  waitingListToPrint: WaitingListToPrintInterface[] | null;\n  thisWaitingListStatus: WaitingListStatus | \"all\";\n  thisPosition: PositionAPI | null;\n  selectPosition: boolean;\n  sortProperty: string;\n  isSorted: boolean;\n  sortOrder: \"ASC\" | \"DESC\";\n  searchInput: string;\n  searchPositionInput: string;\n  downloading: boolean;\n  generateReportModal: {\n    reportType: \"EXCEL\" | \"PDF\";\n    status: boolean;\n  } | null;\n  reportTitle: string;\n  reportContent: waitingListReportContentInterface[];\n  selectAll: boolean;\n  formError: {\n    element: string;\n    msg: string;\n  } | null;\n  selectPeriod: boolean;\n  selectedWaiting: WaitingListDataInterface | null;\n  thisEducation: education_category | \"all\";\n};\n\nclass _WaitingListReport extends Component<AppProps, AppState> {\n  constructor(props: AppProps) {\n    super(props);\n\n    this.state = {\n      thisPeriod: \"all\",\n      loading: true,\n      loadingWaitingList: true,\n      waitingListToPrint: null,\n      thisWaitingListStatus: \"all\",\n      thisPosition: null,\n      selectPosition: false,\n      sortProperty: \"\",\n      isSorted: false,\n      sortOrder: \"ASC\",\n      searchInput: \"\",\n      searchPositionInput: \"\",\n      downloading: false,\n      generateReportModal: null,\n      reportTitle: \"\",\n      reportContent: defaultReportContent,\n      selectAll: true,\n      formError: null,\n      selectPeriod: false,\n      thisEducation: \"all\",\n      selectedWaiting: null,\n    };\n  }\n\n  setLoading = (value: boolean) => {\n    this.setState({ loading: value });\n  };\n\n  setLoadingWaitingList = (value: boolean) => {\n    this.setState({ loadingWaitingList: value });\n  };\n\n  setThisPeriod = (value: SessionPlanInterface | \"all\") => {\n    this.setState({ thisPeriod: value });\n  };\n\n  setWaitingListToPrint = (value: WaitingListToPrintInterface[] | null) => {\n    this.setState({ waitingListToPrint: value });\n  };\n\n  setThisWaitingListStatus = (value: WaitingListStatus | \"all\") => {\n    this.setState({ thisWaitingListStatus: value });\n  };\n\n  setThisPosition = (value: PositionAPI | null) => {\n    this.setState({ thisPosition: value });\n  };\n\n  setSelectPosition = (value: boolean) => {\n    this.setState({ selectPosition: value });\n  };\n\n  setSortProperty = (value: string | \"all\") => {\n    this.setState({ sortProperty: value });\n  };\n\n  setIsSorted = (value: boolean) => {\n    this.setState({ isSorted: value });\n  };\n\n  setSortOrder = (value: \"ASC\" | \"DESC\") => {\n    this.setState({ sortOrder: value });\n  };\n\n  setSearchInput = (value: string) => {\n    this.setState({ searchInput: value });\n  };\n\n  setSearchPositionInput = (value: string) => {\n    this.setState({ searchPositionInput: value });\n  };\n\n  setDownloading = (value: boolean) => {\n    this.setState({ downloading: value });\n  };\n\n  setGenerateReportModal = (\n    value: {\n      reportType: \"EXCEL\" | \"PDF\";\n      status: boolean;\n    } | null\n  ) => {\n    this.setState({ generateReportModal: value });\n  };\n\n  setReportTitle = (value: string) => {\n    this.setState({ reportTitle: value });\n  };\n\n  setReportContent = (value: waitingListReportContentInterface[]) => {\n    this.setState({ reportContent: value });\n  };\n\n  setSelectAll = (value: boolean) => {\n    this.setState({ selectAll: value });\n  };\n\n  setFormError = (\n    value: {\n      element: string;\n      msg: string;\n    } | null\n  ) => {\n    this.setState({ formError: value });\n  };\n\n  setSelectPeriod = (value: boolean) => {\n    this.setState({ selectPeriod: value });\n  };\n\n  setThisEducation = (value: education_category | \"all\") => {\n    this.setState({ thisEducation: value });\n  };\n\n  componentDidMount = () => {\n    // LOADING EDUCATION CATEGORY =================================\n    if (\n      this.props.schoolLevels.education_categories === null ||\n      this.props.schoolLevels.education_categories.length === 0\n    ) {\n      this.props.loadEducationCategories(this.setLoading);\n    }\n    // END LOADING EDUCATION CATEGORY =================================\n    // ###################################################################\n    // LOADING APPLICATION SESSION ====================================\n    if (this.props.application_sessions === null) {\n      this.props.GetAllSessionPlans((status: boolean, msg: string) => {\n        this.setLoading(status);\n        if (!status) {\n          if (msg.length) {\n            this.props.PushPopupAlert({\n              title: msg,\n              theme: PopupAlertTheme.danger,\n            });\n          }\n        }\n      });\n    }\n    // END LOADING APPLICATION SESSION ====================================\n    // ###################################################################\n    // LOADING POSITIONS ====================================\n    if (this.props.systemPositions === null) {\n      this.props.getPositions((status: boolean, msg: string) => {\n        this.setLoading(status);\n        if (msg.length) {\n          this.props.PushPopupAlert({\n            title: msg,\n            theme: PopupAlertTheme.danger,\n          });\n        }\n      });\n    }\n\n    // LOADING WAITING LIST ========================================\n    if (this.state.loadingWaitingList) {\n      this.props.getWaitingList((status: boolean, msg: string) => {\n        this.setLoadingWaitingList(status);\n        if (status === false) {\n          if (msg.length > 0) {\n            this.props.PushPopupAlert({\n              title: msg,\n              theme: PopupAlertTheme.danger,\n            });\n          }\n        }\n      });\n    }\n    // END LOADING CLAIM TYPES ========================================\n  };\n\n  setSort = (thisProperty: string) => {\n    if (\n      this.state.sortProperty === thisProperty &&\n      this.state.sortOrder === \"ASC\"\n    ) {\n      this.setSortOrder(\"DESC\");\n    } else {\n      this.setSortOrder(\"ASC\");\n    }\n    this.setSortProperty(thisProperty);\n    this.setIsSorted(true);\n  };\n\n  showStatus = (status: WaitingListStatus | \"all\"): string => {\n    let result: string = \"\";\n    switch (status) {\n      case WaitingListStatus.WAITING:\n        result = \"Waiting\";\n        break;\n      case WaitingListStatus.PENDING:\n        result = \"Placed & pending\";\n        break;\n      case WaitingListStatus.PLACED:\n        result = \"Placed & confirmed\";\n        break;\n      default:\n        result = \"All\";\n        break;\n    }\n\n    return result;\n  };\n\n  FC_WaitingListStatus = (\n    WaitingList: WaitingListDataInterface[]\n  ): {\n    title: string;\n    count: number;\n    type: WaitingListStatus | \"all\";\n  }[] => {\n    let output: {\n      title: string;\n      count: number;\n      type: WaitingListStatus | \"all\";\n    }[] = [{ title: \"All status\", count: WaitingList.length, type: \"all\" }];\n    const statusArray = Object.values(WaitingListStatus);\n    for (let i in statusArray) {\n      output.push({\n        title: capitalizeFirstLetter(statusArray[i]),\n        count: WaitingList.filter((itm) => itm.status === statusArray[i])\n          .length,\n        type: statusArray[i],\n      });\n    }\n    return output;\n  };\n\n  updateReportContent = (key: waitingListReportContentKeyInterface) => {\n    let index: number = this.state.reportContent.findIndex(\n      (item) => item.key === key\n    );\n    let newArray: waitingListReportContentInterface[] =\n      this.state.reportContent;\n    newArray[index].status = !newArray[index].status;\n    this.setReportContent(newArray);\n    let isSelectAllNeeded = newArray.find((item) => item.status === false);\n    if (isSelectAllNeeded) {\n      this.setSelectAll(false);\n    } else {\n      this.setSelectAll(true);\n    }\n\n    // UPDATE APPLICATION LIST FOR UPDATE ==============================\n    this.updateWaitingListToPrint();\n  };\n\n  updateWaitingListToPrint = () => {\n    // UPDATE REPORT TITLE ========================\n    if (this.state.thisPosition) {\n      let session: string = \"\";\n      if (this.state.thisPeriod === \"all\") {\n        session = \"All session\";\n      } else {\n        session = this.state.thisPeriod.session_plan_name;\n      }\n      this.setReportTitle(\n        \"Waiting list - \" +\n          this.state.thisPosition.position_title +\n          \" - \" +\n          session\n      );\n    }\n    // UPDATE CONTENT =============================\n    if (\n      this.props.systemPositions &&\n      this.props.waitingList &&\n      this.props.application_sessions\n    ) {\n      let arrayNew: WaitingListToPrintInterface[] = [];\n      let n: number = 1;\n      for (const key in this.props.waitingList) {\n        if (Object.prototype.hasOwnProperty.call(this.props.waitingList, key)) {\n          const element = this.props.waitingList[key];\n          const thisPosition = getPositionById(\n            this.props.systemPositions,\n            element.position_id\n          );\n          const thisSession = getPeriodById(\n            this.props.application_sessions,\n            element.session_id\n          );\n          let dataArray: WaitingListToPrintInterface = {\n            id: n.toString(),\n            names: element.user_info.fname + \" \" + element.user_info.lname,\n            gender: element.user_info.sex === \"M\" ? \"Male\" : \"Female\",\n            national_id: element.n_id,\n            phone: element.phone_number,\n            email: element.email,\n            user_position_marks: Number(element.marks.toFixed(2)),\n            position_title: thisPosition\n              ? thisPosition.position_title\n              : \"Unknown position\",\n            education_category: thisPosition\n              ? thisPosition.education_institute_id.education_category_title\n              : \"-\",\n            waitingList_session: thisSession\n              ? thisSession.session_plan_name\n              : \"Unknown session\",\n            date: DATE(element.createdAt),\n            waiting_status: this.showStatus(element.status),\n          };\n\n          for (const key in this.state.reportContent) {\n            if (\n              Object.prototype.hasOwnProperty.call(\n                this.state.reportContent,\n                key\n              )\n            ) {\n              if (!this.state.reportContent[key].status) {\n                delete dataArray[this.state.reportContent[key].key];\n              }\n            }\n          }\n          arrayNew.push(dataArray);\n          n++;\n        }\n      }\n      this.setWaitingListToPrint(arrayNew);\n      arrayNew = [];\n      n = 1;\n    }\n  };\n\n  FC_WaitingListData = (\n    allWaitList: WaitingListInterface[] | null,\n    systemPositions: PositionAPI[] | null\n  ): WaitingListDataInterface[] | null => {\n    if (\n      allWaitList === null ||\n      systemPositions === null ||\n      this.props.application_sessions === null\n    )\n      return null;\n    let arrayNew: WaitingListDataInterface[] = [];\n    // LOOP IN ALL WAITING LIST ONE BY ONE ###########################\n    for (const key in allWaitList) {\n      const element = allWaitList[key];\n      if (element.user_info) {\n        const thisPosition = getPositionById(\n          systemPositions,\n          element.position_id\n        );\n        const thisSession = getPeriodById(\n          this.props.application_sessions,\n          element.session_id\n        );\n        let dataArray: WaitingListDataInterface = {\n          names: element.user_info.fname + \" \" + element.user_info.lname,\n          waitingList_id: element._id,\n          gender:\n            element.user_info.sex === \"M\"\n              ? applicantGender.male\n              : applicantGender.male,\n          national_id: element.n_id,\n          phone: element.phone_number,\n          email: element.email,\n          user_position_marks: Number(element.marks.toFixed(2)),\n          position_id: thisPosition\n            ? thisPosition.position_id\n            : \"Unknown position\",\n          position_title: thisPosition\n            ? thisPosition.position_title\n            : \"Unknown position\",\n          education_category: thisPosition\n            ? thisPosition.education_institute_id.education_category_title\n            : \"\",\n          education_category_id: thisPosition\n            ? thisPosition.education_institute_id.education_institute_id\n            : \"\",\n          waitingList_session: thisSession\n            ? thisSession.session_plan_name\n            : \"Unknown session\",\n          date: DATE(element.createdAt),\n          waiting_status: this.showStatus(element.status),\n          status: element.status,\n          waitingList_session_id: element.session_id,\n        };\n        arrayNew.push(dataArray);\n      }\n    }\n    return arrayNew;\n  };\n\n  resetReportContent = (currentState: boolean) => {\n    let newArray: waitingListReportContentInterface[] =\n      this.state.reportContent;\n    for (const key in newArray) {\n      if (this.isChangeAllowed(newArray[key].key)) {\n        newArray[key].status = !currentState;\n      }\n    }\n\n    this.setReportContent(newArray);\n    this.setSelectAll(!currentState);\n    this.updateWaitingListToPrint();\n  };\n\n  isChangeAllowed = (key: waitingListReportContentKeyInterface): boolean => {\n    if (\n      key === waitingListReportContentKeyInterface.names ||\n      key === waitingListReportContentKeyInterface.waiting_status ||\n      key === waitingListReportContentKeyInterface.waitingList_session ||\n      key === waitingListReportContentKeyInterface.position_title ||\n      key === waitingListReportContentKeyInterface.date ||\n      key === waitingListReportContentKeyInterface.user_position_marks ||\n      key === waitingListReportContentKeyInterface.national_id ||\n      key === waitingListReportContentKeyInterface.education_category\n    ) {\n      return false;\n    }\n    return true;\n  };\n\n  generateReportTitle = (position_title: string) => {\n    let session: string = \"\";\n    if (this.state.thisPeriod === \"all\") {\n      session = \"All session\";\n    } else {\n      session = this.state.thisPeriod.session_plan_name;\n    }\n    this.setReportTitle(\"Waiting list - \" + position_title + \" - \" + session);\n  };\n\n  FC_GeneratePDF = () => {\n    if (!document.querySelectorAll(\"#report_content tbody tr\").length) {\n      this.props.PushPopupAlert({\n        title: `Can't generate Report of empty Data`,\n        theme: PopupAlertTheme.warning,\n      });\n      return;\n    }\n\n    let session: string = \"\";\n    if (this.state.thisPeriod === \"all\") {\n      session = \"All session\";\n    } else {\n      session = this.state.thisPeriod.session_plan_name;\n    }\n    const table: HTMLElement | null = document.getElementById(\"report_content\");\n    const reportSettings: reportSettingsInterface = {\n      doneBy: this.props.auth.user.fname + \" \" + this.props.auth.user.lname,\n      title: this.state.reportTitle,\n      subjectTitle: \"Position\",\n      subject: this.state.thisPosition\n        ? this.state.thisPosition.position_title\n        : \"All position\",\n      period: session,\n      footer: \"Online Teacher Recruitment\",\n      institute: this.state.thisPosition\n        ? this.state.thisPosition.education_institute_id\n            .education_category_title\n        : \"\",\n    };\n    table && generatePDF(reportSettings, table, this.setDownloading);\n  };\n\n  FC_FilterWaitingList = (\n    allWaitList: WaitingListDataInterface[],\n    waitingListStatus: WaitingListStatus | \"all\",\n    thisSession: SessionPlanInterface | \"all\",\n    institute: education_category | \"all\",\n    position: PositionAPI | null\n  ): WaitingListDataInterface[] => {\n    let result: WaitingListDataInterface[] = allWaitList;\n    if (waitingListStatus !== \"all\") {\n      result = result.filter((item) => item.status === waitingListStatus);\n    }\n\n    if (position) {\n      result = result.filter(\n        (item) => item.position_id === position.position_id\n      );\n    }\n\n    if (thisSession !== \"all\") {\n      result = result.filter(\n        (item) => item.waitingList_session_id === thisSession.session_plan_id\n      );\n    }\n\n    if (institute !== \"all\") {\n      result = result.filter(\n        (item) => item.education_category === institute.education_category_title\n      );\n    }\n\n    return result;\n  };\n\n  viewContractor = (\n    waitingData: WaitingListDataInterface\n  ): WaitingListInterface | undefined => {\n    let result = undefined;\n\n    if (this.props.waitingList)\n      result = this.props.waitingList.find(\n        (item) => item._id === waitingData.waitingList_id\n      );\n    return result;\n  };\n\n  render() {\n    if (\n      this.props.application_sessions &&\n      this.props.application_sessions.length === 0\n    ) {\n      return <NoSession />;\n    }\n\n    return (\n      <div>\n        <SideNavigation>\n          <div className=\"flex flex-col mb-4\">\n            <span className=\"text-sm text-gray-600 mb-2\">\n              Education categories:\n            </span>\n            {this.props.schoolLevels.education_categories === null ? (\n              <Loading />\n            ) : this.props.schoolLevels.education_categories.length === 0 ? (\n              <span>No institute found</span>\n            ) : (\n              <Fragment>\n                <div\n                  onClick={() => this.setThisEducation(\"all\")}\n                  className={`border rounded px-2 py-2 mb-2 cursor-pointer ${\n                    this.state.thisEducation === \"all\"\n                      ? \"bg-blue-600 text-white hover:bg-blue-100 hover:text-blue-600 hover:border-blue-500\"\n                      : \"hover:bg-blue-100 hover:text-blue-600 hover:border-blue-500\"\n                  } font-bold flex flex-row items-center gap-2`}\n                >\n                  {this.state.thisEducation === \"all\" ? (\n                    <MdRadioButtonChecked />\n                  ) : (\n                    <MdRadioButtonUnchecked />\n                  )}\n                  <span>All</span>\n                </div>\n                {this.props.schoolLevels.education_categories.map((item, i) => (\n                  <div\n                    onClick={() => this.setThisEducation(item)}\n                    key={i + 1}\n                    className={`border rounded px-2 py-2 mb-2 cursor-pointer ${\n                      this.state.thisEducation !== \"all\" &&\n                      this.state.thisEducation.education_institute_id ===\n                        item.education_institute_id\n                        ? \"bg-blue-600 text-white hover:bg-blue-100 hover:text-blue-600 hover:border-blue-500\"\n                        : \"hover:bg-blue-100 hover:text-blue-600 hover:border-blue-500\"\n                    } font-bold flex flex-row items-center gap-2`}\n                  >\n                    {this.state.thisEducation !== \"all\" &&\n                    this.state.thisEducation.education_institute_id ===\n                      item.education_institute_id ? (\n                      <MdRadioButtonChecked />\n                    ) : (\n                      <MdRadioButtonUnchecked />\n                    )}\n                    <span>{item.education_category_title}</span>\n                  </div>\n                ))}\n              </Fragment>\n            )}\n          </div>\n          <div className=\"\">\n            <div className=\"text-gray-600 text-sm mb-2\">Selected period:</div>\n            <div\n              onClick={() => this.setSelectPeriod(true)}\n              className=\"font-bold bg-blue-50 border border-blue-200 rounded py-2 cursor-pointer text-base px-2 hover:underline  text-blue-600  mb-4 w-full flex flex-row items-center gap-2 justify-between animate__animated animate__zoomIn\"\n            >\n              {this.state.thisPeriod !== \"all\"\n                ? `${this.state.thisPeriod.session_plan_name} - ${this.state.thisPeriod.period}`\n                : \"All session\"}\n              <FiEdit className=\"text-xl text-blue-600\" />\n            </div>\n          </div>\n\n          <div className=\"pt-1\">\n            <div className=\"text-sm text-gray-700 pb-2 pt-2\">Claim types:</div>\n            {this.state.loadingWaitingList ||\n            this.FC_WaitingListData(\n              this.props.waitingList,\n              this.props.systemPositions\n            ) === null ? (\n              <Loading />\n            ) : (\n              this.FC_WaitingListStatus(\n                this.FC_WaitingListData(\n                  this.props.waitingList,\n                  this.props.systemPositions\n                )!\n              ).map((item, index: number) => (\n                <div\n                  onClick={() => this.setThisWaitingListStatus(item.type)}\n                  key={item.title + index}\n                >\n                  <MainItem\n                    title={item.title}\n                    count={item.count}\n                    active={this.state.thisWaitingListStatus === item.type}\n                  />\n                </div>\n              ))\n            )}\n          </div>\n        </SideNavigation>\n\n        <section>\n          {/* REPORT TITLE ============================================ */}\n          <div className=\"grid md:grid-cols-12\">\n            <div className=\"col-span-6\">\n              <div className=\"mt-4 mx-4 flex flex-col gap-1\">\n                <span className=\"text-3xl font-bold text-gray-700\">\n                  Waiting list report\n                </span>\n                <div\n                  onClick={() => this.setSelectPosition(true)}\n                  className=\"flex flex-row gap-2\"\n                >\n                  <span className=\"text-gray-500\">Selected position: </span>\n                  <span className=\"text-blue-600 font-bold underline cursor-pointer\">\n                    {this.state.thisPosition !== null\n                      ? this.state.thisPosition.position_title\n                      : \"All position\"}\n                  </span>\n                </div>\n              </div>\n            </div>\n            <div className=\"col-span-6\">\n              <div className=\"float-right mt-2\">\n                {this.props.waitingList && this.props.waitingList.length > 0 && (\n                  <div className=\"flex flex-row items-center justify-end font-bold mb-2\">\n                    <BiExport className=\"text-2xl text-gray-500\" />\n                    <span className=\"text-gray-500\">Export as</span>\n                    <button\n                      className=\"px-4 py-1 ml-1 rounded bg-white border hover:text-blue-600 font-bold hover:bg-blue-50 border-gray-200\"\n                      disabled={this.state.loading}\n                      onClick={() => {\n                        this.updateWaitingListToPrint();\n                        this.setGenerateReportModal({\n                          reportType: \"EXCEL\",\n                          status: true,\n                        });\n                      }}\n                    >\n                      EXCEL\n                    </button>\n                    <button\n                      className={`px-4 py-1 ml-1 rounded bg-white border hover:text-blue-600 font-bold hover:bg-blue-50 border-gray-200 ${\n                        this.state.downloading && \"cursor-wait\"\n                      }`}\n                      onClick={() => this.FC_GeneratePDF()}\n                      disabled={this.state.loading || this.state.downloading}\n                    >\n                      PDF\n                    </button>\n                  </div>\n                )}\n                <div\n                  onClick={() => this.setSelectPosition(true)}\n                  className=\"btn bg-blue-50 border border-blue-300 text-blue-600 cursor-pointer hover:bg-blue-100 flex flex-row items-center justify-center gap-2 text-sm \"\n                >\n                  <BiFilterAlt className=\"text-xl\" />\n                  Filter by position\n                </div>\n              </div>\n            </div>\n          </div>\n          {/* END REPORT TITLE ============================================ */}\n\n          <div className=\"bg-white my-4\">\n            <div className=\"w-full px-2 py-2\">\n              <input\n                onChange={(e) => this.setSearchInput(e.target.value)}\n                type=\"text\"\n                value={this.state.searchInput}\n                placeholder=\"Search...\"\n                className=\"w-full bg-gray-100 py-2 px-3 rounded focus:border-gray-800\"\n                disabled={\n                  this.state.loadingWaitingList ||\n                  this.FC_WaitingListData(\n                    this.props.waitingList,\n                    this.props.systemPositions\n                  ) === null\n                }\n              />\n            </div>\n            <div className=\"w-full overflow-x-auto\">\n              <table className=\"w-full shadow\" id=\"report_content\">\n                <thead className=\"bg-white border-b-2 border-gray-300 text-gray-600 font-bold text-sm\">\n                  <tr>\n                    <td className=\"px-2 py-2\">#</td>\n                    <td\n                      className=\"px-2 py-2 cursor-pointer\"\n                      onClick={() => this.setSort(\"names\")}\n                    >\n                      <div className=\"flex items-center gap-1\">\n                        Applicant names <BiSort />\n                      </div>\n                    </td>\n                    <td className=\"px-2 py-2\">National ID</td>\n                    <td\n                      className=\"px-2 py-2 cursor-pointer\"\n                      onClick={() => this.setSort(\"gender\")}\n                    >\n                      <div className=\"flex items-center gap-1\">\n                        Gender <BiSort />\n                      </div>\n                    </td>\n                    <td className=\"px-2 py-2\">Phone</td>\n                    <td\n                      className=\"px-2 py-2 cursor-pointer\"\n                      onClick={() => this.setSort(\"user_position_marks\")}\n                    >\n                      <div className=\"flex items-center gap-1\">\n                        Marks <BiSort />\n                      </div>\n                    </td>\n                    <td\n                      className=\"px-2 py-2 cursor-pointer\"\n                      onClick={() => this.setSort(\"position_title\")}\n                    >\n                      <div className=\"flex items-center gap-1\">\n                        Position <BiSort />\n                      </div>\n                    </td>\n                    <td\n                      className=\"px-2 py-2 cursor-pointer\"\n                      onClick={() => this.setSort(\"education_category\")}\n                    >\n                      <div className=\"flex items-center gap-1\">\n                        Institute <BiSort />\n                      </div>\n                    </td>\n                    <td\n                      className=\"px-2 py-2 cursor-pointer\"\n                      onClick={() => this.setSort(\"waiting_status\")}\n                    >\n                      <div className=\"flex items-center gap-1\">\n                        Status <BiSort />\n                      </div>\n                    </td>\n                    <td\n                      className=\"px-2 py-2 cursor-pointer\"\n                      onClick={() => this.setSort(\"waitingList_session\")}\n                    >\n                      <div className=\"flex items-center gap-1\">\n                        Session <BiSort />\n                      </div>\n                    </td>\n                    <td\n                      className=\"px-2 py-2 cursor-pointer\"\n                      onClick={() => this.setSort(\"date\")}\n                    >\n                      <div className=\"flex items-center gap-1\">\n                        Date <BiSort />\n                      </div>\n                    </td>\n                  </tr>\n                </thead>\n                <tbody>\n                  {this.state.loadingWaitingList ? (\n                    <TableLoading cols={11} />\n                  ) : this.FC_WaitingListData(\n                      this.props.waitingList,\n                      this.props.systemPositions\n                    ) === null ? (\n                    <TableLoading cols={10} />\n                  ) : this.FC_FilterWaitingList(\n                      this.FC_WaitingListData(\n                        this.props.waitingList,\n                        this.props.systemPositions\n                      )!,\n                      this.state.thisWaitingListStatus,\n                      this.state.thisPeriod,\n                      this.state.thisEducation,\n                      this.state.thisPosition\n                    ).length === 0 ? (\n                    <tr>\n                      <td colSpan={11} className=\"px-2 py-2\">\n                        <div className=\"flex flex-col text-gray-400 items-center justify-center bg-gray-100 rounded py-10\">\n                          <ImFilesEmpty className=\"text-8xl text-gray-400 mb-2 animate__animated animate__shakeX\" />\n                          <span className=\"text-sm font-bold\">\n                            No result found! Please try to search again\n                          </span>\n                          <div className=\"w-full mt-2 flex flex-row items-center justify-center\">\n                            <ul className=\"text-sm py-2 text-blue-600 font-bold flex flex-row gap-2\">\n                              <li\n                                onClick={() => this.setSelectPosition(true)}\n                                className=\"underline text-gray-500 cursor-pointer\"\n                              >\n                                Filter by position\n                              </li>\n                              <li className=\"text-gray-400 italic\">or</li>\n                              <li\n                                className=\"text-gray-500 underline\"\n                                onClick={() => this.setSelectPeriod(true)}\n                              >\n                                Filter by period\n                              </li>\n                            </ul>\n                          </div>\n                        </div>\n                      </td>\n                    </tr>\n                  ) : (\n                    sortThisArray(\n                      this.state.isSorted,\n                      searchData(\n                        this.FC_FilterWaitingList(\n                          this.FC_WaitingListData(\n                            this.props.waitingList,\n                            this.props.systemPositions\n                          )!,\n                          this.state.thisWaitingListStatus,\n                          this.state.thisPeriod,\n                          this.state.thisEducation,\n                          this.state.thisPosition\n                        ),\n                        this.state.searchInput\n                      ),\n                      this.state.sortProperty,\n                      this.state.sortOrder\n                    ).map((item: WaitingListDataInterface, i: number) => (\n                      <tr\n                        key={i + 1}\n                        className={`${\n                          i % 2 !== 0 ? \"bg-gray-100\" : \"bg-white\"\n                        } text-gray-600 hover:bg-blue-100 hover:text-blue-700 cursor-pointer border-b border-gray-300 hover:border-blue-500 text-sm`}\n                        onClick={() => this.setState({ selectedWaiting: item })}\n                      >\n                        <td className=\"px-2 py-2\">{i + 1}</td>\n                        <td className=\"px-2 py-2\">{item.names}</td>\n                        <td className=\"px-2 py-2\">{item.national_id}</td>\n                        <td className=\"px-2 py-2\">{item.gender}</td>\n                        <td className=\"px-2 py-2\">{item.phone}</td>\n                        <td className=\"px-2 py-2\">\n                          {item.user_position_marks}\n                        </td>\n                        <td className=\"px-2 py-2\">{item.position_title}</td>\n                        <td className=\"px-2 py-2\">{item.education_category}</td>\n                        <td className=\"px-2 py-2\">\n                          {capitalizeFirstLetter(\n                            item.waiting_status.toLowerCase()\n                          )}\n                        </td>\n                        <td className=\"px-2 py-2\">\n                          {item.waitingList_session}\n                        </td>\n                        <td className=\"px-2 py-2\">{item.date}</td>\n                      </tr>\n                    ))\n                  )}\n                </tbody>\n              </table>\n            </div>\n          </div>\n\n          {/* CHOOSING POSITION MODAL */}\n          {this.state.selectPosition && (\n            <Modal\n              title={\n                <div className=\"flex flex-row gap-4 items-center\">\n                  <IoFilter className=\"text-5xl text-blue-600\" />\n                  <div className=\"flex flex-col\">\n                    <span className=\"font-bold text-xl text-blue-600\">\n                      Filter by a position\n                    </span>\n                  </div>\n                </div>\n              }\n              backDrop={true}\n              theme={Themes.default}\n              close={() => {\n                this.setSelectPosition(false);\n                this.setSearchPositionInput(\"\");\n              }}\n              backDropClose={true}\n              widthSizeClass={ModalSize.extraLarge}\n              displayClose={true}\n              padding={{ title: true }}\n            >\n              <div className=\"px-2 pb-2\">\n                {this.props.systemPositions === null ? (\n                  <LoadingV2 type={LoadingType.dark} />\n                ) : this.props.systemPositions.length === 0 ? (\n                  <div className=\"flex flex-col text-gray-400 items-center justify-center\">\n                    <MdSearch className=\"text-6xl\" />\n                    <div className=\"flex flex-col items-center justify-center\">\n                      <span>No positions found! Please go back!</span>\n                    </div>\n                  </div>\n                ) : (\n                  <>\n                    <div className=\"flex flex-col\">\n                      <span className=\"text-gray-600 text-xs font-bold\">\n                        Filter by position name\n                      </span>\n                      <input\n                        onChange={(e: React.ChangeEvent<HTMLInputElement>) =>\n                          this.setSearchPositionInput(e.target.value)\n                        }\n                        type=\"text\"\n                        className=\"mb-4 bg-gray-100 px-3 py-2 rounded\"\n                        placeholder=\"Keyword...\"\n                      />\n                    </div>\n                    <div\n                      onClick={() => {\n                        this.generateReportTitle(\"All position\");\n                        this.setThisPosition(null);\n                        this.setSelectPosition(false);\n                        this.setSearchPositionInput(\"\");\n                      }}\n                      className=\"bg-white cursor-pointer rounded  px-3 py-2 border border-gray-200 hover:border-blue-500 hover:bg-blue-100 mb-2\"\n                    >\n                      <div className=\"grid lg:grid-cols-12\">\n                        <div className=\"col-span-12 lg:col-span-10\">\n                          <div className=\"flex flex-row items-center gap-3\">\n                            <div>\n                              <IoIosBriefcase className=\"text-4xl md:text-5xl text-blue-600\" />\n                            </div>\n                            <div className=\"flex flex-col\">\n                              <span className=\"text-base lg:text-lg font-bold text-gray-700\">\n                                All position\n                              </span>\n                            </div>\n                          </div>\n                        </div>\n                        <div className=\"col-span-12 lg:col-span-2 hidden lg:block\">\n                          <div className=\"h-full flex items-center justify-end\">\n                            <div className=\"btn bg-blue-600 text-white float-right\">\n                              Choose\n                            </div>\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                    {search(\n                      this.props.systemPositions,\n                      this.state.searchPositionInput\n                    ).map((item: PositionAPI, key: number) => (\n                      <div\n                        key={key + 1}\n                        onClick={() => {\n                          this.generateReportTitle(item.position_title);\n                          this.setThisPosition(item);\n                          this.setSelectPosition(false);\n                          this.setSearchPositionInput(\"\");\n                        }}\n                        className=\"bg-white cursor-pointer rounded  px-3 py-2 border border-gray-200 hover:border-blue-500 hover:bg-blue-100 mb-2\"\n                      >\n                        <div className=\"grid lg:grid-cols-12\">\n                          <div className=\"col-span-12 lg:col-span-10\">\n                            <div className=\"flex flex-row items-center gap-3\">\n                              <div>\n                                <IoIosBriefcase className=\"text-4xl md:text-5xl text-blue-600\" />\n                              </div>\n                              <div className=\"flex flex-col\">\n                                <span className=\"text-xs lg:text-sm font-bold text-gray-700\">\n                                  {item.position_title}\n                                </span>\n                                <span className=\"text-xs text-gray-500 italic\">\n                                  School level:{\" \"}\n                                  <span\n                                    className=\"text-gray-800 font-light\"\n                                    style={{ fontStyle: \"normal\" }}\n                                  >\n                                    {item.school_level_id.school_level_name}\n                                  </span>\n                                </span>\n                                <span className=\"text-xs font-bold text-blue-600 bg-blue-100 w-max px-3 py-1 rounded-full\">\n                                  {\n                                    item.education_institute_id\n                                      .education_category_title\n                                  }\n                                </span>\n                              </div>\n                            </div>\n                          </div>\n                          <div className=\"col-span-12 lg:col-span-2 hidden lg:block\">\n                            <div className=\"h-full flex items-center justify-end\">\n                              <div className=\"btn bg-blue-600 text-white float-right\">\n                                Choose\n                              </div>\n                            </div>\n                          </div>\n                        </div>\n                      </div>\n                    ))}\n                  </>\n                )}\n              </div>\n            </Modal>\n          )}\n          {/* END CHOOSING POSITION MODAL */}\n\n          {/* ####################################################################################### */}\n\n          {/* CHOOSING PERIOD CONTENT MODAL */}\n          {this.state.selectPeriod && (\n            <Modal\n              title={\n                <div className=\"flex flex-row gap-4 items-center\">\n                  <MdHistory className=\"text-5xl text-blue-600\" />\n                  <span className=\"flex flex-col\">Choose a period</span>\n                </div>\n              }\n              backDrop={true}\n              theme={Themes.default}\n              close={() => this.setSelectPeriod(false)}\n              backDropClose={true}\n              widthSizeClass={ModalSize.extraLarge}\n              displayClose={true}\n              padding={{ title: true }}\n            >\n              <ChooseSession\n                allSession={this.props.application_sessions}\n                setSelectSession={(value: SessionPlanInterface | \"all\") => {\n                  this.setThisPeriod(value);\n                  this.setSelectPeriod(false);\n                }}\n                chooseAll={true}\n                currentSelected={this.state.thisPeriod}\n              />\n            </Modal>\n          )}\n          {/* END CHOOSING PERIOD CONTENT MODAL */}\n\n          {/* ####################################################################################### */}\n\n          {/* GENERATE DYNAMIC REPORT CONTENT MODAL */}\n          {this.state.generateReportModal !== null &&\n            this.state.generateReportModal.status === true && (\n              <Modal\n                title={\n                  <div className=\"flex flex-row gap-4 items-center\">\n                    {/* <IoBriefcase className=\"text-5xl text-gray-500\" /> */}\n                    <div className=\"flex flex-col\">\n                      <span className=\"font-bold text-2xl text-gray-500\">\n                        Generating Report contents\n                      </span>\n                      <span className=\"text-sm text-blue-600 font-normal\">\n                        Generating {this.state.generateReportModal.reportType}{\" \"}\n                        Report\n                      </span>\n                    </div>\n                  </div>\n                }\n                backDrop={true}\n                theme={Themes.default}\n                close={() => this.setGenerateReportModal(null)}\n                backDropClose={false}\n                widthSizeClass={ModalSize.medium}\n                displayClose={true}\n                padding={{ title: true }}\n              >\n                <div className=\"px-6\">\n                  <div className=\"my-2 text-base text-gray-700 sm:text-lg\">\n                    <div className=\"flex flex-col\">\n                      <label>Title</label>\n                      <input\n                        type=\"text\"\n                        className={`text-left input-white w-20 inline-block ${\n                          this.state.formError &&\n                          this.state.formError.element === \"report_title\"\n                            ? \"border-red-500\"\n                            : \"border-gray-500\"\n                        } border-2`}\n                        placeholder=\"Sub Category Title\"\n                        value={this.state.reportTitle}\n                        onChange={(e) => {\n                          this.setFormError(null);\n                          this.setReportTitle(e.target.value);\n                        }}\n                        disabled={this.state.loading}\n                      />\n                      {this.state.formError &&\n                        this.state.formError.element === \"report_title\" && (\n                          <span className=\"text-red-500\">\n                            {this.state.formError.msg}\n                          </span>\n                        )}\n                    </div>\n                    <div className=\"flex flex-col mt-2\">\n                      <label>Report content</label>\n                      <div className=\"grid grid-cols-2 md:grid-cols-3 items-center gap-2 mt-2\">\n                        {this.state.reportContent.map((item, index) => (\n                          <div\n                            key={index}\n                            className={`flex items-center gap-1 ${\n                              this.isChangeAllowed(item.key)\n                                ? \"cursor-pointer\"\n                                : \"cursor-not-allowed\"\n                            }`}\n                            onClick={() =>\n                              this.isChangeAllowed(item.key) &&\n                              this.updateReportContent(item.key)\n                            }\n                            title={\n                              !this.isChangeAllowed(item.key)\n                                ? \"Required for every report!\"\n                                : \"\"\n                            }\n                          >\n                            {item.status ? (\n                              <MdCheckBox className=\"w-6 h-6 text-blue-700\" />\n                            ) : (\n                              <MdCheckBoxOutlineBlank className=\"w-6 h-6\" />\n                            )}\n                            <span>{item.title}</span>\n                          </div>\n                        ))}\n                      </div>\n                      {this.state.formError &&\n                        this.state.formError.element === \"report_content\" && (\n                          <span className=\"text-red-500\">\n                            {this.state.formError.msg}\n                          </span>\n                        )}\n                    </div>\n                  </div>\n                  <div className=\"flex justify-between mb-2 mt-4\">\n                    <div\n                      className={`flex items-center gap-1 cursor-pointer`}\n                      onClick={() =>\n                        this.resetReportContent(this.state.selectAll)\n                      }\n                    >\n                      {this.state.selectAll ? (\n                        <MdCheckBox className=\"w-6 h-6 text-blue-700\" />\n                      ) : (\n                        <MdCheckBoxOutlineBlank className=\"w-6 h-6\" />\n                      )}\n                      <span>Select all</span>\n                    </div>\n\n                    {this.state.waitingListToPrint && !this.state.loading && (\n                      <ExportToExcel\n                        fileData={this.state.waitingListToPrint}\n                        fileName={this.state.reportTitle}\n                        btnName=\"Generate\"\n                      />\n                    )}\n                  </div>\n                </div>\n              </Modal>\n            )}\n          {/* END GENERATE DYNAMIC REPORT CONTENT MODAL */}\n\n          {/* ####################################################################################### */}\n\n          {/* CHOOSING PERIOD CONTENT MODAL */}\n          {this.state.selectedWaiting &&\n            this.viewContractor(this.state.selectedWaiting) && (\n              <Modal\n                title={\n                  <div className=\"flex flex-row gap-4 items-center\">\n                    <FaFileContract className=\"text-4xl text-blue-600\" />\n                    <span className=\"text-3xl\">\n                      {this.state.selectedWaiting.names +\n                        \"'s placement preferences\"}\n                    </span>\n                  </div>\n                }\n                backDrop={true}\n                theme={Themes.default}\n                close={() => this.setState({ selectedWaiting: null })}\n                backDropClose={true}\n                widthSizeClass={ModalSize.extraLarge}\n                displayClose={true}\n                padding={{ title: true }}\n              >\n                <ContractViewer\n                  contract={\n                    this.viewContractor(this.state.selectedWaiting)!.contract\n                  }\n                />\n              </Modal>\n            )}\n        </section>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = ({\n  auth,\n  system_settings,\n  sessionPlan,\n  schoolLevels,\n  waitingList,\n}: StoreState): {\n  auth: Auth;\n  application_sessions: SessionPlanInterface[] | null;\n  systemPositions: PositionAPI[] | null;\n  schoolLevels: schoolLevelsStoreInterface;\n  waitingList: WaitingListInterface[] | null;\n} => {\n  return {\n    auth: auth,\n    application_sessions: sessionPlan.allSessionPlans,\n    systemPositions: system_settings.systemPositions,\n    schoolLevels,\n    waitingList,\n  };\n};\n\nexport const WaitingListReport = connect(mapStateToProps, {\n  getWaitingList,\n  GetAllSessionPlans,\n  loadEducationCategories,\n  getPositions,\n  PushPopupAlert,\n})(_WaitingListReport);\n","import axios from \"axios\";\nimport { Dispatch } from \"redux\";\nimport { ActionTypes } from \"./types\";\nimport { API } from \"../utils/api\";\nimport {\n  CentersInterface,\n  DistrictInterface,\n  RoomLocationInterface,\n  RoomsInterface,\n  SectorInterface,\n} from \"../shared/interfaces\";\nimport { errorToText } from \"../utils/errors\";\nimport { LocationAPI } from \".\";\n\n/**\n * * ****************************** INTERFACES *****************************\n */\n\nexport interface getAllRoomActions {\n  type: ActionTypes.GET_ALL_ROOM;\n  payload: RoomLocationInterface[];\n}\n\nexport interface createProvinceActions {\n  type: ActionTypes.CREATE_PROVINCE;\n  payload: RoomLocationInterface;\n}\n\nexport interface updateProvinceActions {\n  type: ActionTypes.UPDATE_PROVINCE;\n  payload: {\n    province_id: string;\n    province_name: string;\n    provice_code: number;\n  };\n}\n\nexport interface deleteProvinceActions {\n  type: ActionTypes.DELETE_PROVINCE;\n  payload: string;\n}\n\n// ============ DISTRICT =================\nexport interface createDistrictActions {\n  type: ActionTypes.CREATE_DISTRICT;\n  payload: { province_id: string; data: DistrictInterface };\n}\n\nexport interface updateDistrictActions {\n  type: ActionTypes.UPDATE_DISTRICT;\n  payload: {\n    province_id: string;\n    district_id: string;\n    district_name: string;\n    district_code: number;\n  };\n}\n\nexport interface deleteDistrictActions {\n  type: ActionTypes.DELETE_DISTRICT;\n  payload: { province_id: string; district_id: string };\n}\n\n// ============ SECTOR =================\nexport interface createSectorActions {\n  type: ActionTypes.CREATE_SECTOR;\n  payload: {\n    province_id: string;\n    district_id: string;\n    data: SectorInterface;\n  };\n}\n\nexport interface updateSectorActions {\n  type: ActionTypes.UPDATE_SECTOR;\n  payload: {\n    province_id: string;\n    district_id: string;\n    sector_id: string;\n    sector_name: string;\n    sector_code: number;\n  };\n}\n\nexport interface deleteSectorActions {\n  type: ActionTypes.DELETE_SECTOR;\n  payload: { province_id: string; district_id: string; sector_id: string };\n}\n\n// ============ CENTERS =================\nexport interface createCenterActions {\n  type: ActionTypes.CREATE_CENTER;\n  payload: {\n    province_id: string;\n    district_id: string;\n    data: CentersInterface;\n  };\n}\n\nexport interface updateCenterActions {\n  type: ActionTypes.UPDATE_CENTER;\n  payload: {\n    province_id: string;\n    district_id: string;\n    examination_center_id: string;\n    center_name: string;\n  };\n}\n\nexport interface deleteCenterActions {\n  type: ActionTypes.DELETE_CENTER;\n  payload: { province_id: string; district_id: string; center_id: string };\n}\n\n// ============ ROOMS =================\nexport interface createRoomActions {\n  type: ActionTypes.CREATE_ROOM;\n  payload: {\n    province_id: string;\n    district_id: string;\n    center_id: string;\n    data: RoomsInterface;\n  };\n}\n\nexport interface updateRoomActions {\n  type: ActionTypes.UPDATE_ROOM;\n  payload: {\n    province_id: string;\n    district_id: string;\n    center_id: string;\n    room_id: string;\n    room_number: number;\n    capacity: number;\n  };\n}\n\nexport interface deleteRoomActions {\n  type: ActionTypes.DELETE_ROOM;\n  payload: {\n    province_id: string;\n    district_id: string;\n    center_id: string;\n    room_id: string;\n  };\n}\n\nexport interface GetWaitingLocationListAction {\n  type: ActionTypes.GET_LOCATION_WAITING_LIST;\n  payload: LocationAPI;\n}\n\nexport type RoomActionType =\n  | getAllRoomActions\n  | createProvinceActions\n  | updateProvinceActions\n  | deleteProvinceActions\n  | createDistrictActions\n  | updateDistrictActions\n  | deleteDistrictActions\n  | createSectorActions\n  | updateSectorActions\n  | deleteSectorActions\n  | createCenterActions\n  | updateCenterActions\n  | deleteCenterActions\n  | createRoomActions\n  | updateRoomActions\n  | deleteRoomActions\n  | GetWaitingLocationListAction;\n\n/**\n * * ****************************** ACTIONS *****************************\n */\n\nexport const getAllRoom = (callback: Function) => {\n  return async (dispatch: Dispatch) => {\n    callback(true, \"\");\n    try {\n      const res = await axios.get<RoomLocationInterface[]>(\n        `${API.APPLICATION}/roomlocation`\n      );\n      dispatch<getAllRoomActions>({\n        type: ActionTypes.GET_ALL_ROOM,\n        payload: res.data,\n      });\n      console.log(\"====================================\");\n      console.log({ res: res.data });\n      console.log(\"====================================\");\n      callback(false, \"\", res.data);\n    } catch (error) {\n      console.error(\"Err: \", error);\n      callback(false, errorToText(error));\n    }\n  };\n};\n\nexport const FC_CreateProvince = (data: RoomLocationInterface) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<createProvinceActions>({\n      type: ActionTypes.CREATE_PROVINCE,\n      payload: data,\n    });\n  };\n};\n\nexport const FC_UpdateProvince = (data: {\n  province_id: string;\n  province_name: string;\n  provice_code: number;\n}) => {\n  console.log({ data });\n  return async (dispatch: Dispatch) => {\n    dispatch<updateProvinceActions>({\n      type: ActionTypes.UPDATE_PROVINCE,\n      payload: data,\n    });\n  };\n};\n\nexport const FC_DeleteProvince = (data: string) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<deleteProvinceActions>({\n      type: ActionTypes.DELETE_PROVINCE,\n      payload: data,\n    });\n  };\n};\n\n// DISTRICT =================\nexport const FC_CreateDistrict = (data: {\n  province_id: string;\n  data: DistrictInterface;\n}) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<createDistrictActions>({\n      type: ActionTypes.CREATE_DISTRICT,\n      payload: data,\n    });\n  };\n};\n\nexport const FC_UpdateDistrict = (data: {\n  province_id: string;\n  district_id: string;\n  district_name: string;\n  district_code: number;\n}) => {\n  console.log({ data });\n  return async (dispatch: Dispatch) => {\n    dispatch<updateDistrictActions>({\n      type: ActionTypes.UPDATE_DISTRICT,\n      payload: data,\n    });\n  };\n};\n\nexport const FC_DeleteDistrict = (data: {\n  province_id: string;\n  district_id: string;\n}) => {\n  console.log({ data });\n  return async (dispatch: Dispatch) => {\n    dispatch<deleteDistrictActions>({\n      type: ActionTypes.DELETE_DISTRICT,\n      payload: data,\n    });\n  };\n};\n\n// SECTOR =================\nexport const FC_CreateSector = (data: {\n  province_id: string;\n  district_id: string;\n  data: SectorInterface;\n}) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<createSectorActions>({\n      type: ActionTypes.CREATE_SECTOR,\n      payload: data,\n    });\n  };\n};\n\nexport const FC_UpdateSector = (data: {\n  province_id: string;\n  district_id: string;\n  sector_id: string;\n  sector_name: string;\n  sector_code: number;\n}) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<updateSectorActions>({\n      type: ActionTypes.UPDATE_SECTOR,\n      payload: data,\n    });\n  };\n};\n\nexport const FC_DeleteSector = (data: {\n  province_id: string;\n  district_id: string;\n  sector_id: string;\n}) => {\n  console.log({ data });\n  return async (dispatch: Dispatch) => {\n    dispatch<deleteSectorActions>({\n      type: ActionTypes.DELETE_SECTOR,\n      payload: data,\n    });\n  };\n};\n\n// CENTERS =================\nexport const FC_CreateCenter = (data: {\n  province_id: string;\n  district_id: string;\n  data: CentersInterface;\n}) => {\n  console.log({ data });\n  return async (dispatch: Dispatch) => {\n    dispatch<createCenterActions>({\n      type: ActionTypes.CREATE_CENTER,\n      payload: data,\n    });\n  };\n};\n\nexport const FC_UpdateCenter = (data: {\n  province_id: string;\n  district_id: string;\n  examination_center_id: string;\n  center_name: string;\n}) => {\n  console.log({ data });\n  return async (dispatch: Dispatch) => {\n    dispatch<updateCenterActions>({\n      type: ActionTypes.UPDATE_CENTER,\n      payload: data,\n    });\n  };\n};\n\nexport const FC_DeleteCenter = (data: {\n  province_id: string;\n  district_id: string;\n  center_id: string;\n}) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<deleteCenterActions>({\n      type: ActionTypes.DELETE_CENTER,\n      payload: data,\n    });\n  };\n};\n\n// ROOM =================\nexport const FC_CreateRoom = (data: {\n  province_id: string;\n  district_id: string;\n  center_id: string;\n  data: RoomsInterface;\n}) => {\n  console.log({ data });\n  return async (dispatch: Dispatch) => {\n    dispatch<createRoomActions>({\n      type: ActionTypes.CREATE_ROOM,\n      payload: data,\n    });\n  };\n};\n\nexport const FC_UpdateRoom = (data: {\n  province_id: string;\n  district_id: string;\n  center_id: string;\n  room_id: string;\n  room_number: number;\n  capacity: number;\n}) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<updateRoomActions>({\n      type: ActionTypes.UPDATE_ROOM,\n      payload: data,\n    });\n  };\n};\n\nexport const FC_DeleteRoom = (data: {\n  province_id: string;\n  district_id: string;\n  center_id: string;\n  room_id: string;\n}) => {\n  console.log({ delete_room: data });\n  return async (dispatch: Dispatch) => {\n    dispatch<deleteRoomActions>({\n      type: ActionTypes.DELETE_ROOM,\n      payload: data,\n    });\n  };\n};\n\n// GET LOCATION FOR WAITING LIST\nexport type FT_GetWaitingLocationList = (locations: LocationAPI) => void;\nexport const FC_GetWaitingLocationList = (locations: LocationAPI) => {\n  return (dispatch: Dispatch) => {\n    dispatch<GetWaitingLocationListAction>({\n      type: ActionTypes.GET_LOCATION_WAITING_LIST,\n      payload: locations,\n    });\n  };\n};\n","import axios from \"axios\";\nimport { Dispatch } from \"redux\";\nimport { ActionTypes } from \"./types\";\nimport {\n  AccessTaskInterface,\n  PermissionInterface,\n  SystemSettingsInterface,\n} from \"../shared/interfaces\";\nimport { API } from \"../utils/api\";\nimport { setAxiosToken } from \"../utils/AxiosToken\";\nimport { errorToText } from \"../utils/errors\";\nimport { PositionAPI } from \"../interfaces/position\";\n\n/**\n * * ****************************** INTERFACES *****************************\n */\n\n// SYSTEM SETTINGS  ==============\nexport interface GetSystemSettingsAction {\n  type: ActionTypes.GET_SYSTEM_SETTINGS;\n  payload: SystemSettingsInterface[];\n}\n\nexport interface DisableSystemSettingsAction {\n  type: ActionTypes.DISABLE_SYSTEM_SETTINGS;\n  payload: {\n    system_setting_id: string;\n    status: \"enabled\" | \"disabled\";\n  };\n}\n\n// ROLE TASKS ACCESS SETTINGS ===================================\nexport interface GetTaskAccessAction {\n  type: ActionTypes.GET_TASK_ACCESS;\n  payload: AccessTaskInterface[];\n}\n\n// POSITIONS SETTINGS ===================================\nexport interface PositionCreateInterface {\n  position_id?: string;\n  position_title: string;\n  position_code: string;\n  description: string;\n  school_level_id: string;\n  subcategory_id: string;\n  education_institute_id: string;\n  courses: string[];\n  requirements: {\n    user_detail_category_id: string;\n    user_detail_subcategory_id: string;\n    position_requirement: {\n      category_subcategory_data_id: string;\n      required: boolean;\n    }[];\n    required: boolean;\n  }[];\n}\nexport interface GetPositionsAction {\n  type: ActionTypes.GET_POSTIONS;\n  payload: PositionAPI[];\n}\n\nexport interface CreatePositionsAction {\n  type: ActionTypes.CREATE_POSITION;\n  payload: PositionCreateInterface;\n}\n\nexport interface UpdatePositionsAction {\n  type: ActionTypes.UPDATE_POSITION;\n  payload: PositionCreateInterface;\n}\n\nexport interface DeletePositionSettingAction {\n  type: ActionTypes.DELETE_POSITION;\n  payload: string;\n}\n\nexport interface PublishPositionAction {\n  type: ActionTypes.PUBLISH_POSITION;\n  payload: {\n    position_id: string;\n    status: boolean;\n  };\n}\n\nexport type SystemActionType =\n  | GetSystemSettingsAction\n  | DisableSystemSettingsAction\n  | GetTaskAccessAction\n  | GetPositionsAction\n  | CreatePositionsAction\n  | UpdatePositionsAction\n  | DeletePositionSettingAction\n  | PublishPositionAction;\n\n/**\n * * ****************************** ACTIONS *****************************\n */\n\nexport const getSystemSettings = (callback: Function) => {\n  return async (dispatch: Dispatch) => {\n    callback(true, \"\");\n    try {\n      setAxiosToken();\n      const res = await axios.get<SystemSettingsInterface[]>(\n        `${API.AUTH}/settings`\n      );\n      dispatch<GetSystemSettingsAction>({\n        type: ActionTypes.GET_SYSTEM_SETTINGS,\n        payload: res.data,\n      });\n      callback(false, \"\");\n    } catch (error) {\n      console.log({ code_error: error });\n      callback(false, errorToText(error));\n    }\n  };\n};\n\nexport const disableSystemSetting = (data: {\n  system_setting_id: string;\n  status: \"enabled\" | \"disabled\";\n}) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<DisableSystemSettingsAction>({\n      type: ActionTypes.DISABLE_SYSTEM_SETTINGS,\n      payload: data,\n    });\n  };\n};\n\n// ============================ tasks access =======================\n\nexport const GetTaskAccess = (callback: Function) => {\n  return async (dispatch: Dispatch) => {\n    callback(true, \"\");\n    try {\n      setAxiosToken();\n      const res = await axios.get<\n        {\n          id: string;\n          title: string;\n          key: string;\n          permitted: PermissionInterface;\n        }[]\n      >(`${API.AUTH}/allroleaccess`);\n      let response: AccessTaskInterface[] = res.data.map((data) => ({\n        id: data.id,\n        task: data.title,\n        key: data.key,\n        permitted: data.permitted,\n      }));\n      dispatch<GetTaskAccessAction>({\n        type: ActionTypes.GET_TASK_ACCESS,\n        payload: response,\n      });\n      callback(false, \"\", response);\n    } catch (error) {\n      console.log({ code_error: error });\n      callback(false, errorToText(error));\n    }\n  };\n};\n\n// ============================ positions =======================\n\nexport const getPositions = (callback: Function) => {\n  return async (dispatch: Dispatch) => {\n    callback(true, \"\");\n    try {\n      setAxiosToken();\n      const res = await axios.get<PositionAPI[]>(`${API.APPLICATION}/position`);\n      dispatch<GetPositionsAction>({\n        type: ActionTypes.GET_POSTIONS,\n        payload: res.data,\n      });\n      callback(false, \"\");\n    } catch (error) {\n      console.log({ code_error: error });\n      callback(false, errorToText(error));\n    }\n  };\n};\n\nexport const createPosition = (data: PositionCreateInterface) => {\n  console.log({ createPosition: data });\n  return async (dispatch: Dispatch) => {\n    dispatch<CreatePositionsAction>({\n      type: ActionTypes.CREATE_POSITION,\n      payload: data,\n    });\n  };\n};\n\nexport const updatePosition = (data: PositionCreateInterface) => {\n  console.log({ updatePosition: data });\n  return async (dispatch: Dispatch) => {\n    dispatch<UpdatePositionsAction>({\n      type: ActionTypes.UPDATE_POSITION,\n      payload: data,\n    });\n  };\n};\n\nexport const deletePosition = (data: string) => {\n  console.log({ deletePosition: data });\n  return async (dispatch: Dispatch) => {\n    dispatch<DeletePositionSettingAction>({\n      type: ActionTypes.DELETE_POSITION,\n      payload: data,\n    });\n  };\n};\n\nexport const publishPosition = (data: {\n  position_id: string;\n  status: boolean;\n}) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<PublishPositionAction>({\n      type: ActionTypes.PUBLISH_POSITION,\n      payload: data,\n    });\n  };\n};\n","import React from \"react\";\nimport { MdInfoOutline } from \"react-icons/md\";\n\nconst NoSession = () => {\n  return (\n    <div className=\"my-5\">\n      <div className=\"bg-yellow-100 rounded flex flex-col items-center justify-center p-6 my-8 text-yellow-900 border border-yellow-900\">\n        <MdInfoOutline className=\"text-6xl md:text-9xl\" />\n        <div className=\"text-center flex flex-col\">\n          <span className=\"text-2xl md:text-4xl font-extrabold\">\n            No session available\n          </span>\n          <span className=\"text-lg\">\n            Please Wait for the system to publish the sessions or contact the\n            administrator\n          </span>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default NoSession;\n","import React from \"react\";\n\ntype TableLoadingProps = {\n  cols: number;\n};\nconst TableLoading: React.FC<TableLoadingProps> = (props) => {\n  const displayCols = (): JSX.Element[] => {\n    let colsArray: number[] = [];\n    for (let index = 0; index < props.cols; index++) {\n      colsArray.push(index);\n    }\n    let result = colsArray.map((element) => {\n      return (\n        <td className=\"p-3 text-center whitespace-nowrap\" key={element}>\n          <div className=\"w-full h-4 rounded bg-gray-200 animate__animated animate__pulse animate__delay-5s animate__infinite\"></div>\n        </td>\n      );\n    });\n\n    return result;\n  };\n  return (\n    <>\n      <tr className=\"border-b border-gray-200\" key={228}>\n        {displayCols()}\n      </tr>\n      <tr className=\"border-b border-gray-200\" key={22648}>\n        {displayCols()}\n      </tr>\n      <tr className=\"border-b border-gray-200\" key={229768}>\n        {displayCols()}\n      </tr>\n    </>\n  );\n};\n\nexport default TableLoading;\n","import { PContractItem } from \"./candidate_placement_contract\";\n\nexport type ViewContractType = {\n  province: PContractItem;\n  district: PContractItem;\n  sector: PContractItem;\n  school: PContractItem;\n};\nexport interface WaitingListInterface {\n  _id: string;\n  status: WaitingListStatus;\n  user_id: string;\n  marks: number;\n  in_education: boolean;\n  session_id: string;\n  position_id: string;\n  gender: string;\n  createdAt: string;\n  updatedAt: string;\n  __v: number;\n  n_id: string;\n  phone_number: string;\n  email: string;\n  contract: ViewContractType;\n  user_info: {\n    document_type: string;\n    issue_number: string;\n    date_of_issue: string;\n    date_of_expiry: string;\n    place_of_issue: string;\n    application_number: string;\n    fname: string;\n    lname: string;\n    father_names: string;\n    mother_names: string;\n    sex: string;\n    date_of_birth: string;\n    place_of_birth: string;\n    country_of_birth: string;\n    village_id: string;\n    village: string;\n    cell: string;\n    sector: string;\n    district: string;\n    province: string;\n    civil_status: string;\n    spouse: null;\n    status: string;\n    photo: string;\n  };\n}\n\nexport enum WaitingListStatus {\n  WAITING = \"waiting\",\n  PENDING = \"pending\",\n  PLACED = \"placed\",\n}\n\nexport enum applicantGender {\n  male = \"Male\",\n  female = \"Female\",\n  null = \"-\",\n}\n\nexport interface WaitingListToPrintInterface {\n  id: string;\n  names: string;\n  gender: string;\n  national_id: string;\n  phone: string;\n  email: string;\n  user_position_marks: number;\n  position_title: string;\n  education_category: string;\n  waitingList_session: string;\n  date: string;\n  waiting_status: string;\n}\nexport interface WaitingListDataInterface {\n  waitingList_id: string;\n  names: string;\n  gender: applicantGender;\n  national_id: string;\n  phone: string;\n  email: string;\n  user_position_marks: number;\n  position_id: string;\n  position_title: string;\n  education_category_id: string;\n  education_category: string;\n  waitingList_session: string;\n  waitingList_session_id: string;\n  date: string;\n  waiting_status: string;\n  status: WaitingListStatus;\n}\n\nexport enum waitingListReportContentKeyInterface {\n  names = \"names\",\n  gender = \"gender\",\n  national_id = \"national_id\",\n  email = \"email\",\n  phone = \"phone\",\n  user_position_marks = \"user_position_marks\",\n  position_title = \"position_title\",\n  education_category = \"education_category\",\n  date = \"date\",\n  waiting_status = \"waiting_status\",\n  waitingList_session = \"waitingList_session\",\n}\n\nexport interface waitingListReportContentInterface {\n  key: waitingListReportContentKeyInterface;\n  title: string;\n  status: boolean;\n}\n"],"sourceRoot":""}
{"version":3,"sources":["components/ClaimReportTools/ClaimReportAnalytic.tsx","containers/Claimings/Admin/ClaimReport.tsx"],"names":["ClaimReportAnalytic","props","setLoading","status","setState","loading","state","className","id","options","chart","width","type","labels","this","general_main_data","completedClaimCounts","evaluatedClaimCounts","pendingClaimCounts","deletedClaimCounts","responsive","breakpoint","legend","position","series","selected_claim_type","claim_level","general_summary","pending","validated","height","plotOptions","bar","borderRadius","horizontal","barHeight","dataLabels","enabled","xaxis","categories","summary_details","map","item","position_title","name","data","total","length","console","log","Component","_ClaimReport","GetClaims","level","session_id","a","axios","post","API","CLAIMING","period_id","res","GetSummaryFilter","response","test","find","itm","undefined","filter","push","ClaimStatus","PENDING","EVALUATED","GetSummary","res_data","type_key","title","claims","selected_level","claim_status","sort","b","GetSummaryCounts","componentDidMount","getMainSummary","schoolLevels","selectedEducationCategory","education_categories","education_institute_id","auth","education_institution_id","setSelectedEducationCategory","session_plan","_id","selected_institution","error","success","PlansTypeKeys","APPLICATION","view_type","Loading","capitalizeFirstLetter","toString","onChange","e","selected_type","target","value","DOCUMENT_VALIDATION","EXAMINATION","parseInt","displayNumbers","onClick","colSpan","i","institution","ClaimReport","connect","system","positions","loadAllPositionsByInstitute"],"mappings":"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","file":"static/js/55.93aee45a.chunk.js","sourcesContent":["import { ApexOptions } from \"apexcharts\";\nimport axios from \"axios\";\nimport React, { Component } from \"react\";\nimport ReactApexChart from \"react-apexcharts\";\nimport { GetGeneralSummaryInterface } from \"../../containers/Claimings/Admin/ClaimReport\";\nimport { education_category, PlansTypeKeys } from \"../../interfaces\";\nimport { API } from \"../../utils/api\";\nimport Loading from \"../Loading/Loading\";\n\ninterface GeneralSummaryPie {\n  series: number[];\n  options: ApexOptions;\n}\n\ninterface ClaimReportAnalyticProps {\n  general_summary: {\n    pending: number;\n    validated: number;\n    total: number;\n  };\n  summary_details: {\n    position_title: string;\n    total: number;\n    pending: number;\n    validated: number;\n  }[];\n  claim_level: number;\n  institution: education_category;\n  general_main_data: GetGeneralSummaryInterface;\n  selected_claim_type: PlansTypeKeys;\n}\n\ninterface ClaimReportAnalyticState {\n  loading: boolean;\n}\n\nexport class ClaimReportAnalytic extends Component<\n  ClaimReportAnalyticProps,\n  ClaimReportAnalyticState\n> {\n  constructor(props: ClaimReportAnalyticProps) {\n    super(props);\n\n    this.state = {\n      loading: true,\n    };\n  }\n  setLoading = (status: boolean) => this.setState({ loading: status });\n  render() {\n    return (\n      <div className=\"animate__animated animate__fadeIn\">\n        <div className=\"flex flex-row items-center gap-4 h-64\">\n          <div className=\"bg-gray-100 rounded p-4 border border-blue-600 h-full\">\n            <div>\n              <div className=\"font-extrabold text-xl\">General summary</div>\n            </div>\n            <div id=\"chart\">\n              <ReactApexChart\n                options={{\n                  chart: {\n                    width: 380,\n                    type: \"donut\",\n                  },\n                  labels: [\n                    `Total Completed claims (${this.props.general_main_data.completedClaimCounts})`,\n                    `Total evaluated claims (${this.props.general_main_data.evaluatedClaimCounts})`,\n                    `Total pending claims (${this.props.general_main_data.pendingClaimCounts})`,\n                    `Total Canceled claims (${this.props.general_main_data.deletedClaimCounts})`,\n                  ],\n                  responsive: [\n                    {\n                      breakpoint: 480,\n                      options: {\n                        chart: {\n                          width: 200,\n                        },\n                        legend: {\n                          position: \"bottom\",\n                        },\n                      },\n                    },\n                  ],\n                }}\n                series={[\n                  this.props.general_main_data.completedClaimCounts,\n                  this.props.general_main_data.evaluatedClaimCounts,\n                  this.props.general_main_data.pendingClaimCounts,\n                  this.props.general_main_data.deletedClaimCounts,\n                ]}\n                type=\"donut\"\n                width={400}\n              />\n            </div>\n          </div>\n          <div className=\"bg-gray-100 rounded p-4 border border-blue-600 h-full\">\n            <div>\n              <div className=\"font-extrabold text-xl\">\n                {this.props.selected_claim_type}\n              </div>\n              <div className=\"font-extrabold text-base text-blue-600\">\n                Claim level:{\" \"}\n                {this.props.claim_level === 1\n                  ? \"Level one\"\n                  : \"Public Service Commission\"}\n              </div>\n            </div>\n            <div id=\"chart\">\n              <ReactApexChart\n                options={{\n                  chart: {\n                    width: 380,\n                    type: \"pie\",\n                  },\n                  labels: [\n                    `Total pending claims (${this.props.general_summary.pending})`,\n                    `Total evaluated claims (${this.props.general_summary.validated})`,\n                  ],\n                  responsive: [\n                    {\n                      breakpoint: 480,\n                      options: {\n                        chart: {\n                          width: 200,\n                        },\n                        legend: {\n                          position: \"bottom\",\n                        },\n                      },\n                    },\n                  ],\n                }}\n                series={[\n                  this.props.general_summary.pending,\n                  this.props.general_summary.validated,\n                ]}\n                type=\"pie\"\n                width={400}\n              />\n            </div>\n          </div>\n        </div>\n        <div className=\"animate__animated animate__fadeIn rounded border border-blue-600 pt-3 pr-2 mt-4\">\n          <div id=\"chart\" className=\"h-auto\">\n            <ReactApexChart\n              options={{\n                chart: {\n                  type: \"bar\",\n                  height: \"auto\",\n                },\n                plotOptions: {\n                  bar: {\n                    borderRadius: 2,\n                    horizontal: true,\n                    barHeight: \"100px\",\n                  },\n                },\n                dataLabels: {\n                  enabled: true,\n                },\n                xaxis: {\n                  categories: this.props.summary_details.map(\n                    (item) => item.position_title\n                  ),\n                },\n              }}\n              series={[\n                {\n                  name: \"Total claims\",\n                  data: this.props.summary_details.map((item) => item.total),\n                },\n                {\n                  name: \"Pending claims\",\n                  data: this.props.summary_details.map((item) => item.pending),\n                },\n                {\n                  name: \"Validated claims\",\n                  data: this.props.summary_details.map(\n                    (item) => item.validated\n                  ),\n                },\n              ]}\n              type=\"bar\"\n              height={this.props.summary_details.length > 60 ? 5000 : 3000}\n            />\n          </div>\n          {console.log(\"Length: \", this.props.summary_details.length)}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default ClaimReportAnalytic;\n","import axios from \"axios\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport {\n  Auth,\n  positionsStoreInterface,\n  schoolLevelsStoreInterface,\n  System,\n  setSelectedEducationCategory,\n  loadAllPositionsByInstitute,\n} from \"../../../actions\";\nimport ClaimReportAnalytic from \"../../../components/ClaimReportTools/ClaimReportAnalytic\";\nimport Loading from \"../../../components/Loading/Loading\";\nimport {\n  ClaimStatus,\n  education_category,\n  PlansTypeKeys,\n} from \"../../../interfaces\";\nimport { StoreState } from \"../../../reducers\";\nimport { capitalizeFirstLetter } from \"../../../shared/dataTest\";\nimport { API } from \"../../../utils/api\";\nimport { displayNumbers } from \"../../../utils/functions\";\n\nexport interface GetGeneralSummaryInterface {\n  allClaimCounts: number;\n  completedClaimCounts: number;\n  deletedClaimCounts: number;\n  evaluatedClaimCounts: number;\n  pendingClaimCounts: number;\n}\n\ninterface GetClaimsReportInterface {\n  _id: string;\n  previous: {\n    evaluater: {\n      email: string;\n      name: string;\n    };\n    reason: string;\n    status: string;\n  };\n  title: string;\n  last_claim_status: ClaimStatus;\n  claiming_on_id: string;\n  type_key: PlansTypeKeys;\n  default_claim_resaons: string;\n  user: string;\n  period_id: string;\n  claim_level: number;\n  claims: [\n    {\n      claim_status: ClaimStatus;\n      _id: string;\n      level: number;\n      reason: string;\n      date_created: string;\n      createdAt: string;\n      updatedAt: string;\n    }\n  ];\n  createdAt: string;\n  updatedAt: string;\n  __v: 0;\n}\n\ninterface PositionSummaryInterface {\n  position_title: string;\n  total: number;\n  status: ClaimStatus;\n}\n\ninterface ClaimReportProps {\n  auth: Auth;\n  system: System;\n  positions: positionsStoreInterface;\n  schoolLevels: schoolLevelsStoreInterface;\n  setSelectedEducationCategory: (data: education_category) => void;\n  loadAllPositionsByInstitute: (\n    institution_id: string,\n    callback: (loading: boolean) => void\n  ) => void;\n}\ninterface ClaimReportState {\n  error: string;\n  success: string;\n  loading: boolean;\n  data: GetClaimsReportInterface[] | null;\n  selected_level: number;\n  selected_claim_type: PlansTypeKeys;\n  view_type: \"Table\" | \"Analytical\";\n  general_main_data: GetGeneralSummaryInterface | null;\n}\n\nclass _ClaimReport extends Component<ClaimReportProps, ClaimReportState> {\n  constructor(props: ClaimReportProps) {\n    super(props);\n\n    this.state = {\n      loading: true,\n      error: \"\",\n      success: \"\",\n      data: null,\n      selected_level: 1,\n      selected_claim_type: PlansTypeKeys.APPLICATION,\n      view_type: \"Table\",\n      general_main_data: null,\n    };\n  }\n  setLoading = (status: boolean) => this.setState({ loading: status });\n  GetClaims = async (level: number, session_id: string) => {\n    this.setLoading(true);\n    try {\n      const res = await axios.post<GetClaimsReportInterface[]>(\n        `${API.CLAIMING}/user/level/${level}`,\n        {\n          period_id: session_id,\n        }\n      );\n      if (res.data) {\n        this.setState({\n          data: res.data,\n        });\n      }\n      console.log(\"Response: \", res.data);\n      this.setLoading(false);\n    } catch (error: any) {\n      console.log(\"Error: \", { ...error });\n      this.setLoading(false);\n    }\n  };\n\n  GetSummaryFilter = (data: PositionSummaryInterface[]) => {\n    let response: {\n      position_title: string;\n      total: number;\n      pending: number;\n      validated: number;\n    }[] = [];\n    for (const item of data) {\n      const test = response.find(\n        (itm) => itm.position_title === item.position_title\n      );\n      if (test !== undefined) {\n        response = response.filter(\n          (itm) => itm.position_title !== test.position_title\n        );\n        response.push({\n          position_title: test.position_title,\n          total: test.total + 1,\n          pending:\n            item.status === ClaimStatus.PENDING\n              ? test.pending + 1\n              : test.pending,\n          validated:\n            item.status === ClaimStatus.EVALUATED\n              ? test.validated + 1\n              : test.validated,\n        });\n      } else {\n        response.push({\n          position_title: item.position_title,\n          total: item.total,\n          pending: item.status === ClaimStatus.PENDING ? 1 : 0,\n          validated: item.status === ClaimStatus.EVALUATED ? 1 : 0,\n        });\n      }\n    }\n    return response;\n  };\n\n  GetSummary = (\n    data: GetClaimsReportInterface[]\n  ): {\n    position_title: string;\n    total: number;\n    pending: number;\n    validated: number;\n  }[] => {\n    let response: PositionSummaryInterface[] = [];\n    const res_data = data.filter(\n      (itm) => itm.type_key === this.state.selected_claim_type\n    );\n    for (const item of res_data) {\n      response.push({\n        position_title: item.title,\n        total: 1,\n        status: item.claims.filter(\n          (itm) => itm.level === this.state.selected_level\n        )[0].claim_status,\n      });\n    }\n    return this.GetSummaryFilter(response).sort((a, b) =>\n      a.pending < b.pending ? 1 : b.pending < a.pending ? -1 : 0\n    );\n  };\n\n  GetSummaryCounts = (\n    data: {\n      position_title: string;\n      total: number;\n      pending: number;\n      validated: number;\n    }[]\n  ): {\n    pending: number;\n    validated: number;\n    total: number;\n  } => {\n    let res: {\n      pending: number;\n      validated: number;\n      total: number;\n    } = {\n      pending: 0,\n      validated: 0,\n      total: 0,\n    };\n    let pending: number = 0;\n    let validated: number = 0;\n    let total: number = 0;\n    for (const item of data) {\n      pending = pending + item.pending;\n      validated = validated + item.validated;\n      total = total + item.total;\n    }\n    res = {\n      pending: pending,\n      validated: validated,\n      total: total,\n    };\n    return res;\n  };\n\n  componentDidMount = () => {\n    if (this.state.general_main_data === null) {\n      this.getMainSummary(this.state.selected_level);\n    }\n    if (this.props.schoolLevels.selectedEducationCategory === null) {\n      if (this.props.schoolLevels.education_categories !== null) {\n        const test = this.props.schoolLevels.education_categories.find(\n          (itm) =>\n            itm.education_institute_id ===\n            this.props.auth.education_institution_id\n        );\n        if (test !== undefined) {\n          this.props.setSelectedEducationCategory(test);\n          if (test.session_plan !== null) {\n            this.GetClaims(this.state.selected_level, test.session_plan._id);\n          }\n        }\n      }\n    } else {\n      if (\n        this.props.schoolLevels.selectedEducationCategory.session_plan !== null\n      ) {\n        this.GetClaims(\n          this.state.selected_level,\n          this.props.schoolLevels.selectedEducationCategory.session_plan._id\n        );\n      }\n    }\n  };\n\n  getMainSummary = async (claim_level: number) => {\n    const selected_institution =\n      this.props.schoolLevels.education_categories?.find(\n        (itm) =>\n          itm.education_institute_id ===\n          this.props.auth.education_institution_id\n      );\n    if (\n      selected_institution?.session_plan !== null &&\n      selected_institution?.session_plan !== undefined\n    ) {\n      this.setLoading(true);\n      try {\n        const res = await axios.post<GetGeneralSummaryInterface>(\n          `${API.CLAIMING}/user/count/${claim_level}`,\n          {\n            period_id: selected_institution.session_plan._id,\n          }\n        );\n        this.setState({ loading: false, general_main_data: res.data });\n        console.log(\"Res: \", res.data);\n      } catch (error: any) {\n        this.setState({ loading: false });\n        console.log(\"Err: \", { ...error });\n      }\n    }\n  };\n\n  render() {\n    const selected_institution =\n      this.props.schoolLevels.education_categories?.find(\n        (itm) =>\n          itm.education_institute_id ===\n          this.props.auth.education_institution_id\n      );\n    if (selected_institution === undefined) {\n      return (\n        <div>\n          <div className=\"rounded-xl border-2 border-gray-600 flex flex-col items-center justify-center p-7 text-center w-full mt-5 bg-white\">\n            <span className=\"font-extrabold text-3xl text-gray-600\">\n              Your institute is not yet defined\n            </span>\n            <span>\n              If you have an institute assigned to you, please refresh your page\n              or wait a moment... your page...\n              {/* You are not allowed to view shortlisting report because you have\n              no access for this report. please contact your administrator */}\n            </span>\n          </div>\n        </div>\n      );\n    }\n    if (\n      this.state.loading === true ||\n      this.props.schoolLevels.selectedEducationCategory === null ||\n      this.state.data === null ||\n      this.state.general_main_data === null\n    ) {\n      return (\n        <div className=\"bg-white rounded p-5 mt-5\">\n          <Loading />\n          <div className=\"-mt-5 ml-5\">Loading report, please wait...</div>\n        </div>\n      );\n    }\n    if (this.state.error !== \"\") {\n      <div onClick={() => this.setState({ error: \"\" })}>\n        <div className=\"cursor-pointer rounded-xl border-2 border-yellow-600 flex flex-col items-center justify-center p-7 text-center w-full mt-5 bg-yellow-100\">\n          <span className=\"font-extrabold text-3xl text-yellow-800\">\n            Error occurred!\n          </span>\n          <span>{this.state.error}</span>\n        </div>\n      </div>;\n    }\n    return (\n      <div>\n        <div className=\"mt-4 bg-white rounded\">\n          <div className=\"p-4 flex flex-row items-center gap-3 justify-between\">\n            <div>\n              <div className=\"text-3xl font-extrabold\">\n                Claiming report (\n                <span className=\"text-blue-600 lowercase\">\n                  {capitalizeFirstLetter(\n                    this.state.selected_claim_type.toString()\n                  )}\n                </span>\n                )\n              </div>\n              <div className=\"flex flex-row items-center gap-2 ml-2\">\n                <div className=\"flex flex-col\">\n                  <span className=\"text-sm font-bold\">Choose claim type</span>\n                  <select\n                    onChange={(e) => {\n                      this.setState({ loading: true });\n                      const selected_type = e.target.value as PlansTypeKeys;\n                      this.setState({\n                        selected_claim_type: selected_type,\n                      });\n                      this.setState({ loading: false });\n                    }}\n                    value={this.state.selected_claim_type}\n                    className=\"px-3 py-2 rounded border border-gray-500\"\n                  >\n                    <option value={PlansTypeKeys.APPLICATION}>\n                      Applications\n                    </option>\n                    <option value={PlansTypeKeys.DOCUMENT_VALIDATION}>\n                      Document validation\n                    </option>\n                    <option value={PlansTypeKeys.EXAMINATION}>\n                      Examinations\n                    </option>\n                  </select>\n                </div>\n                <div className=\"flex flex-col\">\n                  <span className=\"text-sm font-bold\">Choose claim level</span>\n                  <select\n                    value={this.state.selected_level}\n                    onChange={(e) => {\n                      if (selected_institution.session_plan !== null) {\n                        const selected_level = parseInt(e.target.value);\n                        this.setState({\n                          selected_level: selected_level,\n                        });\n                        this.setLoading(true);\n                        this.GetClaims(\n                          selected_level,\n                          selected_institution.session_plan._id\n                        );\n                      }\n                    }}\n                    className=\"px-3 py-2 rounded border border-gray-500\"\n                  >\n                    <option value={1}>Level 1</option>\n                    <option value={2}>Public Service Commission Level</option>\n                  </select>\n                </div>\n              </div>\n            </div>\n            <div className=\"flex flex-row items-center gap-3\">\n              <div className=\"flex flex-col rounded bg-blue-100 p-2 text-right animate__animated animate__zoomIn\">\n                <span className=\"text-3xl font-extrabold\">\n                  {displayNumbers(\n                    this.GetSummaryCounts(this.GetSummary(this.state.data))\n                      .total\n                  )}\n                </span>\n                <span className=\"font-normal text-sm text-blue-900\">\n                  Total claims\n                </span>\n              </div>\n              <div className=\"flex flex-col rounded bg-blue-100 p-2 text-right animate__animated animate__zoomIn\">\n                <span className=\"text-3xl font-extrabold\">\n                  {displayNumbers(\n                    this.GetSummaryCounts(this.GetSummary(this.state.data))\n                      .pending\n                  )}\n                </span>\n                <span className=\"font-normal text-sm text-blue-900\">\n                  Waiting claims\n                </span>\n              </div>\n              <div className=\"flex flex-col rounded bg-green-100 p-2 text-right animate__animated animate__zoomIn\">\n                <span className=\"text-3xl font-extrabold text-green-900\">\n                  {displayNumbers(\n                    this.GetSummaryCounts(this.GetSummary(this.state.data))\n                      .validated\n                  )}\n                </span>\n                <span className=\"font-normal text-sm text-green-900\">\n                  Validated claims\n                </span>\n              </div>\n            </div>\n          </div>\n          <div className=\"border-t border-gray-400 p-4\">\n            <div className=\"flex flex-row items-center rounded mb-3\">\n              <div\n                onClick={() => this.setState({ view_type: \"Table\" })}\n                className={`px-3 py-2 ${\n                  this.state.view_type === \"Table\"\n                    ? \"bg-white font-bold text-blue-800 border-b-4 border-blue-600 rounded-t-md animate__animated animate__fadeIn\"\n                    : \"bg-white font-light  border-b-4 border-gray-200 hover:bg-blue-100 hover:text-blue-800 hover:border-blue-600\"\n                } cursor-pointer`}\n              >\n                Table view\n              </div>\n              <div\n                onClick={() => this.setState({ view_type: \"Analytical\" })}\n                className={`px-3 py-2 ${\n                  this.state.view_type === \"Analytical\"\n                    ? \"bg-white font-bold text-blue-800 border-b-4 border-blue-600 rounded-t-md animate__animated animate__fadeIn\"\n                    : \"bg-white font-light  border-b-4 border-gray-200 hover:bg-blue-100 hover:text-blue-800 hover:border-blue-600\"\n                } cursor-pointer`}\n              >\n                Analytical view\n              </div>\n            </div>\n            {this.state.view_type === \"Table\" ? (\n              <table className=\"w-full animate__animated animate__fadeIn\">\n                <thead className=\"bg-blue-100 \">\n                  <tr className=\"\">\n                    <th className=\"px-3 py-1 text-center\">#</th>\n                    <th className=\"px-3 py-1 text-left\">Position</th>\n                    <th className=\"px-3 py-1 text-center\">Total claims</th>\n                    <th className=\"px-3 py-1 text-center\">Waiting claims</th>\n                    <th className=\"px-3 py-1 text-center\">Validated claims</th>\n                  </tr>\n                </thead>\n                <tbody>\n                  {this.GetSummary(this.state.data).length === 0 ? (\n                    <tr>\n                      <td\n                        colSpan={5}\n                        className=\"text-center p-3 text-3xl font-light bg-gray-100 border border-gray-500 rounded\"\n                      >\n                        No result found!\n                      </td>\n                    </tr>\n                  ) : (\n                    this.GetSummary(this.state.data).map((item, i) => (\n                      <tr\n                        key={i + 1}\n                        className={`${\n                          i % 2 !== 0 ? \"bg-gray-100\" : \"bg-white\"\n                        } ${\n                          item.total === item.validated\n                            ? \"text-green-900 font-light\"\n                            : item.validated === 0\n                            ? \"text-yellow-900 font-bold\"\n                            : \"text-black font-light\"\n                        }`}\n                      >\n                        <td className=\"px-3 py-1 text-center\">{i + 1}</td>\n                        <td className=\"px-3 py-1 text-left\">\n                          {item.position_title}\n                        </td>\n                        <td className=\"px-3 py-1 text-center\">\n                          {displayNumbers(item.total)}\n                        </td>\n                        <td className=\"px-3 py-1 text-center\">\n                          {displayNumbers(item.pending)}\n                        </td>\n                        <td className=\"px-3 py-1 text-center\">\n                          {displayNumbers(item.validated)}\n                        </td>\n                      </tr>\n                    ))\n                  )}\n                </tbody>\n              </table>\n            ) : (\n              <ClaimReportAnalytic\n                general_summary={this.GetSummaryCounts(\n                  this.GetSummary(this.state.data)\n                )}\n                summary_details={this.GetSummary(this.state.data)}\n                claim_level={this.state.selected_level}\n                institution={selected_institution}\n                general_main_data={this.state.general_main_data}\n                selected_claim_type={this.state.selected_claim_type}\n              />\n            )}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = ({\n  auth,\n  system,\n  positions,\n  schoolLevels,\n}: StoreState): {\n  auth: Auth;\n  system: System;\n  positions: positionsStoreInterface;\n  schoolLevels: schoolLevelsStoreInterface;\n} => {\n  return {\n    auth: auth,\n    system: system,\n    positions: positions,\n    schoolLevels,\n  };\n};\n\nexport const ClaimReport = connect(mapStateToProps, {\n  setSelectedEducationCategory,\n  loadAllPositionsByInstitute,\n})(_ClaimReport);\n"],"sourceRoot":""}
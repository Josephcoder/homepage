{"version":3,"sources":["containers/Admin/MarksPublication/MarksPublicationReport.tsx","actions/settings.ts","containers/SessionSettings/NoSession.tsx","components/Loading/TableLoading.tsx","interfaces/marks_publication.ts"],"names":["defaultReportContent","key","marksPublicationCandidateReportContentKeyInterface","applicant_name","title","status","national_id","email","phone_number","gender","position_name","marks","_MarksPublicationReport","props","setLoading","setState","loading","setLoadingData","loadingData","setSelectAll","selectAll","setSelectSession","selectSession","setSelectedSession","thisSession","selectedSession","reportTitle","session_plan_name","setSelectPosition","selectPosition","setSelectedPosition","thisPosition","selectedPosition","setReportTitle","thisTitle","setFormError","data","formError","setSortOrder","thisOrder","sortOrder","setSortProperty","thisProperty","sortProperty","setIsSorted","isSorted","setGenerateReportModal","generateReportModal","setDownloading","value","downloading","setSort","state","loadReportMainData","a","axios","get","API","DO_EXAM","session_plan_id","res","console","log","reportMainData","error","reportMainData_error","PushPopupAlert","errorToText","theme","PopupAlertTheme","danger","componentDidMount","systemPositions","getPositions","msg","length","application_sessions","GetAllSessionPlans","errorMsg","sessionData","isEmptyOrSpaces","warning","activeSession","find","item","is_active","FC_GeneratePDF","document","querySelectorAll","table","getElementById","reportSettings","doneBy","auth","user","fname","lname","subjectTitle","subject","period","footer","institute","orientation","generatePDF","updateContentToPrint","arrayNew","n","Object","prototype","hasOwnProperty","call","position_id","position","undefined","dataArray","no","names","n_id","phone","position_title","user_position_marks","waiting_status","reportContentExport","push","dataToPrint","updateReportContent","index","findIndex","newArray","isChangeAllowed","resetReportContent","currentState","dataToShow","allData","result","Math","random","Number","toFixed","FC_FilterReportData","filter","toLocaleLowerCase","ReportStatuses","output","count","capitalizeFirstLetter","MarksPublicationCandidateStatus","Passed","itm","Failed","selectedStatus","searchInput","searchPositionInput","this","className","onClick","map","i","active","disabled","reportType","onChange","e","target","type","placeholder","id","cols","colSpan","sortThisArray","search","backDrop","Themes","default","close","backDropClose","widthSizeClass","ModalSize","extraLarge","displayClose","padding","allSession","chooseAll","currentSelected","LoadingType","dark","to","style","fontStyle","school_level_id","school_level_name","education_institute_id","education_category_title","medium","element","fileData","fileName","btnName","Component","MarksPublicationReport","connect","system_settings","sessionPlan","allSessionPlans","getSystemSettings","callback","dispatch","setAxiosToken","AUTH","ActionTypes","GET_SYSTEM_SETTINGS","payload","code_error","disableSystemSetting","DISABLE_SYSTEM_SETTINGS","GetTaskAccess","response","task","permitted","GET_TASK_ACCESS","APPLICATION","GET_POSTIONS","deletePosition","DELETE_POSITION","publishPosition","PUBLISH_POSITION","NoSession","TableLoading","displayCols","colsArray","PlacedCandidateStatus","placementReportContentKeyInterface"],"mappings":"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","file":"static/js/50.e442bea0.chunk.js","sourcesContent":["import React, { Component, Fragment } from \"react\";\nimport {\n  MdCheckBox,\n  MdCheckBoxOutlineBlank,\n  MdHistory,\n  MdSearch,\n} from \"react-icons/md\";\nimport { connect } from \"react-redux\";\nimport { Auth, PushPopupAlert } from \"../../../actions\";\nimport { getPositions } from \"../../../actions/settings\";\nimport { PopupAlertData } from \"../../../components/Alert/Popup\";\nimport Modal, { ModalSize, Themes } from \"../../../components/Modal/Modal\";\nimport { PositionAPI, SessionPlanInterface } from \"../../../interfaces\";\nimport {\n  MarksPublicationCandidateStatus,\n  marksPublicationReportContentInterface,\n  marksPublicationCandidateReportContentKeyInterface,\n  MarksPublicationCandidateToPrintInterface,\n  MarksPublicationCandidate,\n} from \"../../../interfaces/marks_publication\";\nimport { PopupAlertTheme } from \"../../../interfaces/popupAlert\";\nimport { StoreState } from \"../../../reducers\";\nimport {\n  capitalizeFirstLetter,\n  isEmptyOrSpaces,\n} from \"../../../shared/dataTest\";\nimport {\n  generatePDF,\n  reportSettingsInterface,\n} from \"../../../components/DownloadPDF/rest\";\nimport { BiExport, BiSort } from \"react-icons/bi\";\nimport {\n  MainItem,\n  SideNavigation,\n} from \"../../../components/Navigation/SideNavigation\";\nimport { FiEdit } from \"react-icons/fi\";\nimport TableLoading from \"../../../components/Loading/TableLoading\";\nimport { ImFilesEmpty } from \"react-icons/im\";\nimport { errorToText, search, sortThisArray } from \"../../../utils/functions\";\nimport Loading from \"../../../components/Loading/Loading\";\nimport { GetAllSessionPlans } from \"../../../actions/session\";\nimport axios from \"axios\";\nimport { API } from \"../../../utils/api\";\nimport ChooseSession from \"../../SessionSettings/ChooseSession\";\nimport LoadingV2, { LoadingType } from \"../../../components/Loading/LoadingV2\";\nimport { Link } from \"react-router-dom\";\nimport { IoFilter } from \"react-icons/io5\";\nimport { IoIosBriefcase } from \"react-icons/io\";\nimport ExportToExcel from \"../../../utils/ExportToExcel\";\nimport NoSession from \"../../SessionSettings/NoSession\";\n\nconst defaultReportContent: marksPublicationReportContentInterface[] = [\n  {\n    key: marksPublicationCandidateReportContentKeyInterface.applicant_name,\n    title: \"Applicant name\",\n    status: true,\n  },\n  {\n    key: marksPublicationCandidateReportContentKeyInterface.national_id,\n    title: \"National ID\",\n    status: true,\n  },\n  {\n    key: marksPublicationCandidateReportContentKeyInterface.email,\n    title: \"Email\",\n    status: true,\n  },\n  {\n    key: marksPublicationCandidateReportContentKeyInterface.phone_number,\n    title: \"Phone\",\n    status: true,\n  },\n  {\n    key: marksPublicationCandidateReportContentKeyInterface.gender,\n    title: \"Gender\",\n    status: true,\n  },\n  {\n    key: marksPublicationCandidateReportContentKeyInterface.position_name,\n    title: \"Position\",\n    status: true,\n  },\n  {\n    key: marksPublicationCandidateReportContentKeyInterface.marks,\n    title: \"Marks\",\n    status: true,\n  },\n  {\n    key: marksPublicationCandidateReportContentKeyInterface.status,\n    title: \"Status\",\n    status: true,\n  },\n];\n\ninterface MarksPublicationReportProps {\n  //   REDUX ############################\n  auth: Auth;\n  systemPositions: PositionAPI[] | null;\n  application_sessions: SessionPlanInterface[] | null;\n\n  GetAllSessionPlans: Function;\n  getSchools: Function;\n  getPositions: Function;\n  getAllRoom: Function;\n  selectDistrict: Function;\n  PushPopupAlert: (alert: PopupAlertData) => void;\n}\n\ninterface MarksPublicationReportState {\n  loading: boolean;\n  loadingData: boolean;\n  selectAll: boolean;\n  reportMainData: MarksPublicationCandidate[] | null;\n  reportContentExport: marksPublicationReportContentInterface[];\n  reportTitle: string;\n  dataToPrint: MarksPublicationCandidateToPrintInterface[] | null;\n  sortProperty: string;\n  isSorted: boolean;\n  sortOrder: \"ASC\" | \"DESC\";\n  searchInput: string;\n  searchPositionInput: string;\n  generateReportModal: {\n    reportType: \"EXCEL\" | \"PDF\";\n    status: boolean;\n  } | null;\n  formError: {\n    element: string;\n    msg: string;\n  } | null;\n  selectedStatus: MarksPublicationCandidateStatus | \"all\";\n  selectPosition: boolean;\n  selectedPosition: PositionAPI | null;\n  selectedSession: SessionPlanInterface | null;\n  selectSession: boolean;\n  downloading: boolean;\n}\n\nexport class _MarksPublicationReport extends Component<\n  MarksPublicationReportProps,\n  MarksPublicationReportState\n> {\n  constructor(props: MarksPublicationReportProps) {\n    super(props);\n\n    this.state = {\n      loading: true,\n      loadingData: true,\n      selectedStatus: \"all\",\n      selectAll: true,\n      // selectedReportTitle: centerReportTitleType;\n      reportMainData: null,\n      reportContentExport: defaultReportContent,\n      reportTitle: \"\",\n      dataToPrint: null,\n      sortProperty: \"\",\n      isSorted: false,\n      sortOrder: \"ASC\",\n      searchInput: \"\",\n      searchPositionInput: \"\",\n      generateReportModal: null,\n      formError: null,\n      selectPosition: false,\n      selectedPosition: null,\n      selectedSession: null,\n      selectSession: false,\n      downloading: false,\n    };\n  }\n\n  setLoading = (status: boolean) => {\n    this.setState({ loading: status });\n  };\n\n  setLoadingData = (status: boolean) => {\n    this.setState({ loadingData: status });\n  };\n\n  setSelectAll = (status: boolean) => {\n    this.setState({ selectAll: status });\n  };\n\n  setSelectSession = (status: boolean) => {\n    this.setState({ selectSession: status });\n  };\n\n  setSelectedSession = (thisSession: SessionPlanInterface) => {\n    this.setState({\n      selectedSession: thisSession,\n      reportTitle:\n        \"Application marks publication Report - \" +\n        thisSession!.session_plan_name,\n    });\n  };\n\n  setSelectPosition = (status: boolean) => {\n    this.setState({ selectPosition: status });\n  };\n\n  setSelectedPosition = (thisPosition: PositionAPI | null) => {\n    this.setState({ selectedPosition: thisPosition });\n  };\n\n  setReportTitle = (thisTitle: string) => {\n    this.setState({ reportTitle: thisTitle });\n  };\n\n  setFormError = (\n    data: {\n      element: string;\n      msg: string;\n    } | null\n  ) => {\n    this.setState({ formError: data });\n  };\n\n  setSortOrder = (thisOrder: \"ASC\" | \"DESC\") => {\n    this.setState({ sortOrder: thisOrder });\n  };\n\n  setSortProperty = (thisProperty: string) => {\n    this.setState({ sortProperty: thisProperty });\n  };\n\n  setIsSorted = (status: boolean) => {\n    this.setState({ isSorted: status });\n  };\n\n  setGenerateReportModal = (\n    data: {\n      reportType: \"EXCEL\" | \"PDF\";\n      status: boolean;\n    } | null\n  ) => {\n    this.setState({ generateReportModal: data });\n  };\n\n  setDownloading = (value: boolean) => {\n    this.setState({ downloading: value });\n  };\n\n  setSort = (thisProperty: string) => {\n    if (\n      this.state.sortProperty === thisProperty &&\n      this.state.sortOrder === \"ASC\"\n    ) {\n      this.setSortOrder(\"DESC\");\n    } else {\n      this.setSortOrder(\"ASC\");\n    }\n    this.setSortProperty(thisProperty);\n    this.setIsSorted(true);\n  };\n\n  loadReportMainData = async (thisSession: SessionPlanInterface) => {\n    this.setLoadingData(true);\n    try {\n      const res = await axios.get<MarksPublicationCandidate[]>(\n        `${API.DO_EXAM}/waiting/publication/${thisSession.session_plan_id}`\n      );\n      console.log(\"====================================\");\n      console.log({ reportMainData: res });\n      console.log(\"====================================\");\n      this.setState({ reportMainData: res.data });\n    } catch (error) {\n      console.error({ reportMainData_error: error });\n      // callback(false, errorToText(error));\n      this.props.PushPopupAlert({\n        title: errorToText(error),\n        theme: PopupAlertTheme.danger,\n      });\n    }\n    this.setLoadingData(false);\n  };\n\n  componentDidMount = () => {\n    if (this.props.systemPositions === null) {\n      this.props.getPositions((status: boolean, msg: string) => {\n        this.setLoading(status);\n        console.log({ status: status, msg: msg });\n        if (msg.length) {\n          this.props.PushPopupAlert({\n            title: msg,\n            theme: PopupAlertTheme.danger,\n          });\n        }\n      });\n    } else if (this.state.loading) {\n      this.setLoading(false);\n    }\n\n    if (\n      this.props.application_sessions === null ||\n      this.props.application_sessions.length === 0\n    ) {\n      this.props.GetAllSessionPlans(\n        (\n          status: boolean,\n          errorMsg: string,\n          sessionData: SessionPlanInterface[]\n        ) => {\n          this.setLoading(status);\n          if (!status) {\n            if (!isEmptyOrSpaces(errorMsg)) {\n              this.props.PushPopupAlert({\n                title: errorMsg,\n                theme: PopupAlertTheme.warning,\n              });\n            }\n\n            if (sessionData && sessionData.length > 0) {\n              let activeSession = sessionData.find((item) => item.is_active);\n              if (activeSession) {\n                this.setSelectedSession(activeSession);\n                if (this.state.reportMainData === null) {\n                  this.loadReportMainData(activeSession);\n                }\n              } else {\n                this.setSelectSession(true);\n              }\n            }\n          }\n        }\n      );\n    } else {\n      this.setLoading(false);\n      if (this.props.application_sessions.length > 0) {\n        let activeSession = this.props.application_sessions.find(\n          (item) => item.is_active\n        );\n        if (activeSession) {\n          this.setSelectedSession(activeSession);\n          if (this.state.reportMainData === null) {\n            this.loadReportMainData(activeSession);\n          }\n        } else {\n          this.setSelectSession(true);\n        }\n      }\n    }\n  };\n\n  FC_GeneratePDF = () => {\n    if (!document.querySelectorAll(\"#report_content tbody tr\").length) {\n      this.props.PushPopupAlert({\n        title: `Can't generate Report of empty Data`,\n        theme: PopupAlertTheme.warning,\n      });\n      return false;\n    }\n\n    if (this.state.selectedSession) {\n      const table: HTMLElement | null =\n        document.getElementById(\"report_content\");\n      const reportSettings: reportSettingsInterface = {\n        doneBy: this.props.auth.user.fname + \" \" + this.props.auth.user.lname,\n        title: \"Marks publication Report\",\n        subjectTitle: `Application marks publication`,\n        subject: \"All position\",\n        period: this.state.selectedSession.session_plan_name,\n        footer: \"Online Recruitment\",\n        institute: \"All institute\",\n        orientation: \"l\",\n      };\n      table && generatePDF(reportSettings, table, this.setDownloading);\n    }\n  };\n\n  updateContentToPrint = () => {\n    // UPDATE REPORT TITLE ========================\n    if (this.state.selectedSession) {\n      let title =\n        \"Application marks publication Report - \" +\n        this.state.selectedSession.session_plan_name;\n      this.setReportTitle(title);\n    }\n    // UPDATE CONTENT =============================\n    if (this.state.reportMainData) {\n      let arrayNew: MarksPublicationCandidateToPrintInterface[] = [];\n      let n: number = 1;\n      for (const key in this.state.reportMainData) {\n        if (\n          Object.prototype.hasOwnProperty.call(this.state.reportMainData, key)\n        ) {\n          let thisPosition = this.props.systemPositions\n            ? this.props.systemPositions.find(\n                (item) =>\n                  item.position_id === this.state.reportMainData![key].position\n              )\n            : undefined;\n          let dataArray: MarksPublicationCandidateToPrintInterface | null =\n            null;\n          dataArray = {\n            no: n,\n            names:\n              this.state.reportMainData![key].fname +\n              \" \" +\n              this.state.reportMainData![key].lname,\n            national_id: this.state.reportMainData![key].n_id,\n            phone: this.state.reportMainData![key].phone_number,\n            email: this.state.reportMainData![key].email,\n            gender: this.state.reportMainData![key].gender,\n            position_name: thisPosition ? thisPosition.position_title : \"\",\n            marks: this.state.reportMainData![key].user_position_marks,\n            status: this.state.reportMainData![key].waiting_status,\n          };\n\n          for (const key in this.state.reportContentExport) {\n            if (\n              Object.prototype.hasOwnProperty.call(\n                this.state.reportContentExport,\n                key\n              )\n            ) {\n              if (!this.state.reportContentExport[key].status && dataArray) {\n                delete dataArray[this.state.reportContentExport[key].key];\n              }\n            }\n          }\n          dataArray && arrayNew.push(dataArray);\n          n++;\n        }\n      }\n      this.setState({ dataToPrint: arrayNew });\n      arrayNew = [];\n      n = 1;\n    }\n  };\n\n  updateReportContent = (\n    key: marksPublicationCandidateReportContentKeyInterface\n  ) => {\n    let index: number = this.state.reportContentExport.findIndex(\n      (item) => item.key === key\n    );\n    let newArray: marksPublicationReportContentInterface[] =\n      this.state.reportContentExport;\n    newArray[index].status = !newArray[index].status;\n    this.setState({ reportContentExport: newArray });\n    let isSelectAllNeeded = newArray.find((item) => item.status === false);\n    if (isSelectAllNeeded) {\n      this.setSelectAll(false);\n    } else {\n      this.setSelectAll(true);\n    }\n\n    // UPDATE APPLICATION LIST FOR UPDATE ==============================\n    this.updateContentToPrint();\n  };\n\n  isChangeAllowed = (\n    key: marksPublicationCandidateReportContentKeyInterface\n  ): boolean => {\n    if (\n      key ===\n        marksPublicationCandidateReportContentKeyInterface.applicant_name ||\n      key ===\n        marksPublicationCandidateReportContentKeyInterface.position_name ||\n      key === marksPublicationCandidateReportContentKeyInterface.national_id\n    ) {\n      return false;\n    }\n    return true;\n  };\n\n  resetReportContent = (currentState: boolean) => {\n    let newArray: marksPublicationReportContentInterface[] =\n      this.state.reportContentExport;\n    for (const key in newArray) {\n      if (this.isChangeAllowed(newArray[key].key)) {\n        newArray[key].status = !currentState;\n      }\n    }\n\n    this.setState({ reportContentExport: newArray });\n    this.setSelectAll(!currentState);\n    this.updateContentToPrint();\n  };\n\n  dataToShow = (\n    allData: MarksPublicationCandidate[]\n  ): MarksPublicationCandidateToPrintInterface[] => {\n    let result: MarksPublicationCandidateToPrintInterface[] = [];\n    for (const key in allData) {\n      if (Object.prototype.hasOwnProperty.call(allData, key)) {\n        let thisPosition = this.props.systemPositions\n          ? this.props.systemPositions.find(\n              (item) => item.position_id === allData[key].position\n            )\n          : undefined;\n        result.push({\n          no: Math.random(),\n          names: allData![key].fname + \" \" + allData![key].lname,\n          national_id: allData![key].n_id,\n          phone: allData![key].phone_number,\n          email: allData![key].email,\n          gender: allData![key].gender,\n          position_name: thisPosition ? thisPosition.position_title : \"\",\n          marks: Number(allData![key].user_position_marks.toFixed(2)),\n          status: allData![key].waiting_status,\n        });\n      }\n    }\n    return result;\n  };\n\n  FC_FilterReportData = (\n    allData: MarksPublicationCandidateToPrintInterface[],\n    status: MarksPublicationCandidateStatus | \"all\",\n    position: PositionAPI | null\n  ): MarksPublicationCandidateToPrintInterface[] => {\n    let result: MarksPublicationCandidateToPrintInterface[] = allData;\n    if (status !== \"all\") {\n      result = result.filter((item) => item.status === status);\n    }\n\n    if (position) {\n      result = result.filter(\n        (item) =>\n          item.position_name.toLocaleLowerCase() ===\n          position.position_title.toLocaleLowerCase()\n      );\n    }\n\n    return result;\n  };\n\n  ReportStatuses = (\n    allData: MarksPublicationCandidate[]\n  ): {\n    title: string;\n    count: number;\n    status: MarksPublicationCandidateStatus | \"all\";\n  }[] => {\n    let output: {\n      title: string;\n      count: number;\n      status: MarksPublicationCandidateStatus | \"all\";\n    }[] = [{ title: \"All\", count: allData.length, status: \"all\" }];\n    output.push(\n      {\n        title: capitalizeFirstLetter(\n          MarksPublicationCandidateStatus.Passed.toLocaleLowerCase()\n        ),\n        count: allData.filter(\n          (itm) => itm.waiting_status === MarksPublicationCandidateStatus.Passed\n        ).length,\n        status: MarksPublicationCandidateStatus.Passed,\n      },\n      {\n        title: capitalizeFirstLetter(\n          MarksPublicationCandidateStatus.Failed.toLocaleLowerCase()\n        ),\n        count: allData.filter(\n          (itm) => itm.waiting_status === MarksPublicationCandidateStatus.Failed\n        ).length,\n        status: MarksPublicationCandidateStatus.Failed,\n      }\n    );\n    return output;\n  };\n\n  render() {\n    if (this.state.loading) {\n      return (\n        <div className=\"text-center mt-7 font-bold text-4xl text-gray-400 animate-pulse\">\n          Loading data...\n        </div>\n      );\n    }\n\n    if (\n      this.props.application_sessions &&\n      this.props.application_sessions.length === 0\n    ) {\n      return <NoSession />;\n    }\n\n    return (\n      <div>\n        <SideNavigation>\n          <div className=\"\">\n            <div className=\"text-gray-600 text-sm mb-2\">Session:</div>\n            <div\n              onClick={() => this.setSelectSession(true)}\n              className=\"font-bold bg-blue-50 border border-blue-200 rounded py-2 cursor-pointer text-xs px-2 hover:underline justify-between text-blue-600  mb-4 w-full flex flex-row items-center animate__animated animate__zoomIn\"\n            >\n              {this.state.selectedSession !== null\n                ? `${this.state.selectedSession.session_plan_name}`\n                : \"Filter by session\"}\n              <FiEdit className=\"text-lg text-blue-600\" />\n            </div>\n          </div>\n\n          <div className=\"pt-1\">\n            <div className=\"text-sm text-gray-700 pb-2 pt-2\">\n              Performance statuses:\n            </div>\n            {this.state.reportMainData === null || this.state.loadingData ? (\n              <Loading />\n            ) : (\n              this.ReportStatuses(this.state.reportMainData!).map(\n                (\n                  itm: {\n                    title: string;\n                    count: number;\n                    status: MarksPublicationCandidateStatus | \"all\";\n                  },\n                  i: number\n                ) => (\n                  // itm.count > 0 &&\n                  <Fragment key={itm.title}>\n                    <div\n                      onClick={() =>\n                        this.setState({ selectedStatus: itm.status })\n                      }\n                    >\n                      <MainItem\n                        title={itm.title}\n                        count={itm.count}\n                        active={\n                          this.state.selectedStatus === itm.status\n                            ? true\n                            : false\n                        }\n                      />\n                    </div>\n                  </Fragment>\n                )\n              )\n            )}\n          </div>\n        </SideNavigation>\n\n        {/* BODY CONTENT--------------------------------- */}\n        <section>\n          {/* REPORT TITLE ============================================ */}\n          <div className=\"grid md:grid-cols-12\">\n            <div className=\"col-span-8\">\n              <div className=\"mt-4 mx-4 flex flex-col gap-1\">\n                <span className=\"text-3xl font-bold text-gray-700\">\n                  Applications marks publication Report\n                </span>\n                <div\n                  onClick={() => this.setState({ selectPosition: true })}\n                  className=\"flex flex-row gap-2 items-end\"\n                >\n                  <span className=\"text-gray-500 text-xl\">Position:</span>\n                  <span className=\"text-blue-600 font-bold underline cursor-pointer text-xl\">\n                    {this.state.selectedPosition !== null\n                      ? this.state.selectedPosition.position_title\n                      : \"All position\"}\n                  </span>\n                </div>\n              </div>\n            </div>\n            <div className=\"col-span-4\">\n              <div className=\"float-right mt-2\">\n                {this.state.reportMainData &&\n                  this.state.reportMainData.length > 0 && (\n                    <div className=\"flex flex-row items-center justify-end font-bold mb-2\">\n                      <BiExport className=\"text-2xl text-gray-500\" />\n                      <span className=\"text-gray-500\">Export as</span>\n                      <button\n                        className=\"px-4 py-1 ml-1 rounded bg-white border hover:text-blue-600 font-bold hover:bg-blue-50 border-gray-200\"\n                        disabled={\n                          this.state.reportMainData && !this.state.downloading\n                            ? false\n                            : true\n                        }\n                        onClick={() => {\n                          this.updateContentToPrint();\n                          this.setGenerateReportModal({\n                            reportType: \"EXCEL\",\n                            status: true,\n                          });\n                        }}\n                      >\n                        EXCEL\n                      </button>\n                      <button\n                        className={`px-4 py-1 ml-1 rounded bg-white border hover:text-blue-600 font-bold hover:bg-blue-50 border-gray-200 ${\n                          this.state.downloading && \"cursor-wait\"\n                        }`}\n                        onClick={() => this.FC_GeneratePDF()}\n                        disabled={this.state.reportMainData ? false : true}\n                      >\n                        PDF\n                      </button>\n                    </div>\n                  )}\n              </div>\n            </div>\n          </div>\n          {/* END REPORT TITLE ============================================ */}\n\n          {/* ######################################################## */}\n          <div className=\"bg-white my-4\">\n            <div className=\"w-full px-2 py-2\">\n              <input\n                onChange={(e) => this.setState({ searchInput: e.target.value })}\n                type=\"text\"\n                value={this.state.searchInput}\n                placeholder=\"Search...\"\n                className=\"w-full bg-gray-100 py-2 px-3 rounded focus:border-gray-800\"\n                disabled={\n                  this.state.loadingData === null ||\n                  this.state.reportMainData === null ||\n                  this.FC_FilterReportData(\n                    this.dataToShow(this.state.reportMainData),\n                    this.state.selectedStatus,\n                    this.state.selectedPosition\n                  ).length <= 0\n                }\n              />\n            </div>\n            <table className=\"w-full shadow\" id=\"report_content\">\n              <thead className=\"bg-white border-b-2 border-gray-300 text-gray-600 font-bold text-sm\">\n                <tr>\n                  <td className=\"px-2 py-2\">#</td>\n                  <td\n                    className=\"px-2 py-2 cursor-pointer\"\n                    onClick={() => this.setSort(\"names\")}\n                  >\n                    <div className=\"flex items-center gap-1\">\n                      Names <BiSort />\n                    </div>\n                  </td>\n                  <td\n                    className=\"px-2 py-2 cursor-pointer\"\n                    onClick={() => this.setSort(\"national_id\")}\n                  >\n                    <div className=\"flex items-center gap-1\">\n                      National Id <BiSort />\n                    </div>\n                  </td>\n                  <td\n                    className=\"px-2 py-2 cursor-pointer\"\n                    onClick={() => this.setSort(\"phone\")}\n                  >\n                    <div className=\"flex items-center gap-1\">\n                      Phone <BiSort />\n                    </div>\n                  </td>\n                  <td\n                    className=\"px-2 py-2 cursor-pointer\"\n                    onClick={() => this.setSort(\"email\")}\n                  >\n                    <div className=\"flex items-center gap-1\">\n                      Email <BiSort />\n                    </div>\n                  </td>\n                  <td\n                    className=\"px-2 py-2 cursor-pointer\"\n                    onClick={() => this.setSort(\"gender\")}\n                  >\n                    <div className=\"flex items-center gap-1\">\n                      Gender <BiSort />\n                    </div>\n                  </td>\n                  <td\n                    className=\"px-2 py-2 cursor-pointer\"\n                    onClick={() => this.setSort(\"position_name\")}\n                  >\n                    <div className=\"flex items-center gap-1\">\n                      Position <BiSort />\n                    </div>\n                  </td>\n                  <td\n                    className=\"px-2 py-2 cursor-pointer\"\n                    onClick={() => this.setSort(\"marks\")}\n                  >\n                    <div className=\"flex items-center gap-1\">\n                      Marks <BiSort />\n                    </div>\n                  </td>\n                  <td\n                    className=\"px-2 py-2 cursor-pointer\"\n                    onClick={() => this.setSort(\"status\")}\n                  >\n                    <div className=\"flex items-center gap-1\">\n                      Status <BiSort />\n                    </div>\n                  </td>\n                </tr>\n              </thead>\n              <tbody>\n                {this.state.reportMainData === null ||\n                this.state.loadingData ? (\n                  <TableLoading cols={9} />\n                ) : this.FC_FilterReportData(\n                    this.dataToShow(this.state.reportMainData),\n                    this.state.selectedStatus,\n                    this.state.selectedPosition\n                  ).length === 0 ? (\n                  <tr>\n                    <td colSpan={9} className=\"px-2 py-2\">\n                      <div className=\"flex flex-col text-gray-400 items-center justify-center bg-gray-100 rounded py-10\">\n                        <ImFilesEmpty className=\"text-8xl text-gray-400 mb-2 animate__animated animate__shakeX\" />\n                        <span className=\"text-sm font-bold\">\n                          No result found! Please try to search again\n                        </span>\n                        <div className=\"w-full mt-2 flex flex-row items-center justify-center\">\n                          <ul className=\"text-sm py-2 text-blue-600 font-bold flex flex-row gap-2\">\n                            <li\n                              onClick={() =>\n                                this.setState({ selectSession: true })\n                              }\n                              className=\"underline text-gray-500 cursor-pointer\"\n                            >\n                              Choose another district\n                            </li>\n                          </ul>\n                        </div>\n                      </div>\n                    </td>\n                  </tr>\n                ) : (\n                  sortThisArray(\n                    this.state.isSorted,\n                    search(\n                      this.FC_FilterReportData(\n                        this.dataToShow(this.state.reportMainData),\n                        this.state.selectedStatus,\n                        this.state.selectedPosition\n                      ),\n                      this.state.searchInput\n                    ),\n                    this.state.sortProperty,\n                    this.state.sortOrder\n                  ).map(\n                    (item: MarksPublicationCandidateToPrintInterface, i) => (\n                      <tr\n                        key={i + item.no}\n                        className={`hover:bg-blue-100 hover:text-blue-700 border-b hover:border-blue-500 text-sm ${\n                          item.status === MarksPublicationCandidateStatus.Failed\n                            ? \"border-yellow-500 text-gray-700 bg-yellow-200\"\n                            : \"bg-white\"\n                        }`}\n                      >\n                        <td className=\"px-2 py-2\">{i + 1}</td>\n                        <td className=\"px-2 py-2\">{item.names}</td>\n                        <td className=\"px-2 py-2\">{item.national_id}</td>\n                        <td className=\"px-2 py-2\">{item.phone}</td>\n                        <td className=\"px-2 py-2\">{item.email}</td>\n                        <td className=\"px-2 py-2\">{item.gender}</td>\n                        <td className=\"px-2 py-2\">{item.position_name}</td>\n                        <td className=\"px-2 py-2\">{item.marks}</td>\n                        <td className=\"px-2 py-2\">{item.status}</td>\n                      </tr>\n                    )\n                  )\n                )}\n              </tbody>\n            </table>\n          </div>\n        </section>\n        {/* END BODY CONTENT--------------------------------- */}\n\n        {/* ---------------------------------------------------------------------------- */}\n        {/* SELECT SESSION MODAL =========================== */}\n        {this.state.selectSession && (\n          <Modal\n            title={\n              <div className=\"flex flex-row gap-4 items-center\">\n                <MdHistory className=\"text-5xl text-blue-600\" />\n                <span className=\"flex flex-col\">Choose session</span>\n              </div>\n            }\n            backDrop={true}\n            theme={Themes.default}\n            close={() =>\n              this.state.selectedSession !== null &&\n              this.setSelectSession(false)\n            }\n            backDropClose={true}\n            widthSizeClass={ModalSize.extraLarge}\n            displayClose={true}\n            padding={{ title: true }}\n          >\n            <ChooseSession\n              allSession={this.props.application_sessions}\n              setSelectSession={(value: SessionPlanInterface | \"all\") => {\n                if (value !== \"all\") {\n                  this.setSelectedSession(value);\n                  this.loadReportMainData(value);\n                  this.setSelectSession(false);\n                }\n              }}\n              chooseAll={false}\n              currentSelected={\n                this.state.selectedSession ? this.state.selectedSession : \"all\"\n              }\n            />\n          </Modal>\n        )}\n\n        {/* ---------------------------------------------------------------------------- */}\n\n        {/* POSITION CONTENT MODAL */}\n        {this.state.selectPosition === true && (\n          <Modal\n            title={\n              <div className=\"flex flex-row gap-4 items-center\">\n                <IoFilter className=\"text-5xl text-blue-600\" />\n                <div className=\"flex flex-col\">\n                  <span className=\"font-bold text-xl text-blue-600\">\n                    Filter by a position\n                  </span>\n                </div>\n              </div>\n            }\n            backDrop={true}\n            theme={Themes.default}\n            close={() => this.setState({ selectPosition: false })}\n            backDropClose={true}\n            widthSizeClass={ModalSize.extraLarge}\n            displayClose={true}\n            padding={{ title: true }}\n          >\n            <div className=\"px-2 pb-2\">\n              {this.state.selectPosition === true &&\n              this.props.systemPositions === null ? (\n                <LoadingV2 type={LoadingType.dark} />\n              ) : this.props.systemPositions!.length === 0 ? (\n                <div className=\"flex flex-col text-gray-400 items-center justify-center\">\n                  <MdSearch className=\"text-6xl\" />\n                  <div className=\"flex flex-col items-center justify-center\">\n                    <span>No positions found! Please go back!</span>\n                    <Link\n                      to=\"/\"\n                      className=\"btn bg-yellow-100 text-yellow-700 my-4 hover:bg-yellow-200\"\n                    >\n                      Go back\n                    </Link>\n                  </div>\n                </div>\n              ) : (\n                <>\n                  <div className=\"flex flex-col\">\n                    <span className=\"text-gray-600 text-xs font-bold\">\n                      Filter by position name\n                    </span>\n                    <input\n                      onChange={(e: React.ChangeEvent<HTMLInputElement>) =>\n                        this.setState({ searchPositionInput: e.target.value })\n                      }\n                      type=\"text\"\n                      className=\"mb-4 bg-gray-100 px-3 py-2 rounded\"\n                      placeholder=\"Keyword...\"\n                    />\n                  </div>\n                  <div\n                    onClick={() => {\n                      this.setSelectedPosition(null);\n                      this.setState({\n                        selectPosition: false,\n                        reportTitle:\n                          \"Application marks publication Report - \" +\n                          this.state.selectedSession\n                            ? this.state.selectedSession!.session_plan_name\n                            : \"\",\n                      });\n                    }}\n                    className=\"bg-white cursor-pointer rounded  px-3 py-2 border border-gray-200 hover:border-blue-500 hover:bg-blue-100 mb-2\"\n                  >\n                    <div className=\"grid lg:grid-cols-12\">\n                      <div className=\"col-span-12 lg:col-span-10\">\n                        <div className=\"flex flex-row items-center gap-3\">\n                          <div>\n                            <IoIosBriefcase className=\"text-4xl md:text-5xl text-blue-600\" />\n                          </div>\n                          <div className=\"flex flex-col\">\n                            <span className=\"text-xs lg:text-base font-bold text-gray-700\">\n                              All positions\n                            </span>\n                          </div>\n                        </div>\n                      </div>\n                      <div className=\"col-span-12 lg:col-span-2 hidden lg:block\">\n                        <div className=\"h-full flex items-center justify-end\">\n                          <div className=\"btn bg-blue-600 text-white float-right\">\n                            Choose\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                  {search(\n                    this.props.systemPositions!,\n                    this.state.searchPositionInput\n                  ).map((item: PositionAPI, key: number) => (\n                    <div\n                      key={key + 1}\n                      onClick={() => {\n                        this.setSelectedPosition(item);\n                        this.setState({\n                          selectPosition: false,\n                          reportTitle:\n                            \"Application marks publication Report - \" +\n                            this.state.selectedSession\n                              ? this.state.selectedSession!.session_plan_name +\n                                \" on \" +\n                                item.position_title\n                              : \"\",\n                        });\n                      }}\n                      className=\"bg-white cursor-pointer rounded  px-3 py-2 border border-gray-200 hover:border-blue-500 hover:bg-blue-100 mb-2\"\n                    >\n                      <div className=\"grid lg:grid-cols-12\">\n                        <div className=\"col-span-12 lg:col-span-10\">\n                          <div className=\"flex flex-row items-center gap-3\">\n                            <div>\n                              <IoIosBriefcase className=\"text-4xl md:text-5xl text-blue-600\" />\n                            </div>\n                            <div className=\"flex flex-col\">\n                              <span className=\"text-xs lg:text-sm font-bold text-gray-700\">\n                                {item.position_title}\n                              </span>\n                              <span className=\"text-xs text-gray-500 italic\">\n                                School level:{\" \"}\n                                <span\n                                  className=\"text-gray-800 font-light\"\n                                  style={{ fontStyle: \"normal\" }}\n                                >\n                                  {item.school_level_id.school_level_name}\n                                </span>\n                              </span>\n                              <span className=\"text-xs font-bold text-blue-600 bg-blue-100 w-max px-3 py-1 rounded-full\">\n                                {\n                                  item.education_institute_id\n                                    .education_category_title\n                                }\n                              </span>\n                            </div>\n                          </div>\n                        </div>\n                        <div className=\"col-span-12 lg:col-span-2 hidden lg:block\">\n                          <div className=\"h-full flex items-center justify-end\">\n                            <div className=\"btn bg-blue-600 text-white float-right\">\n                              Choose\n                            </div>\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                  ))}\n                </>\n              )}\n            </div>\n          </Modal>\n        )}\n        {/* END POSITION CONTENT MODAL */}\n\n        {/* GENERATE REPORT MODAL CONTENT MODAL */}\n        {this.state.generateReportModal !== null &&\n          this.state.generateReportModal.status === true && (\n            <Modal\n              title={\n                <div className=\"flex flex-row gap-4 items-center\">\n                  {/* <IoBriefcase className=\"text-5xl text-gray-500\" /> */}\n                  <div className=\"flex flex-col\">\n                    <span className=\"font-bold text-2xl text-gray-500\">\n                      Generating Report contents\n                    </span>\n                    <span className=\"text-sm text-blue-600 font-normal\">\n                      Generating {this.state.generateReportModal.reportType}{\" \"}\n                      Report\n                    </span>\n                  </div>\n                </div>\n              }\n              backDrop={true}\n              theme={Themes.default}\n              close={() => this.setGenerateReportModal(null)}\n              backDropClose={false}\n              widthSizeClass={ModalSize.medium}\n              displayClose={true}\n              padding={{ title: true }}\n            >\n              <div className=\"px-6\">\n                <div className=\"my-2 text-base text-gray-700 sm:text-lg\">\n                  <div className=\"flex flex-col\">\n                    <label>Title</label>\n                    <input\n                      type=\"text\"\n                      className={`text-left input-white w-20 inline-block ${\n                        this.state.formError &&\n                        this.state.formError.element === \"report_title\"\n                          ? \"border-red-500\"\n                          : \"border-gray-500\"\n                      } border-2`}\n                      placeholder=\"Sub Category Title\"\n                      value={this.state.reportTitle}\n                      onChange={(e) => {\n                        this.setFormError(null);\n                        this.setReportTitle(e.target.value);\n                      }}\n                      disabled={this.state.reportMainData ? false : true}\n                    />\n                    {this.state.formError &&\n                      this.state.formError.element === \"report_title\" && (\n                        <span className=\"text-red-500\">\n                          {this.state.formError.msg}\n                        </span>\n                      )}\n                  </div>\n                  <div className=\"flex flex-col mt-2\">\n                    <label>Report content</label>\n                    <div className=\"grid grid-cols-2 md:grid-cols-3 items-center gap-2 mt-2\">\n                      {this.state.reportContentExport.map((item, index) => (\n                        <div\n                          key={index}\n                          className={`flex items-center gap-1 ${\n                            this.isChangeAllowed(item.key)\n                              ? \"cursor-pointer\"\n                              : \"cursor-not-allowed\"\n                          }`}\n                          onClick={() =>\n                            this.isChangeAllowed(item.key) &&\n                            this.updateReportContent(item.key)\n                          }\n                          title={\n                            !this.isChangeAllowed(item.key)\n                              ? \"Required for every report!\"\n                              : \"\"\n                          }\n                        >\n                          {item.status ? (\n                            <MdCheckBox className=\"w-6 h-6 text-blue-700\" />\n                          ) : (\n                            <MdCheckBoxOutlineBlank className=\"w-6 h-6\" />\n                          )}\n                          <span>{item.title}</span>\n                        </div>\n                      ))}\n                    </div>\n                    {this.state.formError &&\n                      this.state.formError.element === \"report_content\" && (\n                        <span className=\"text-red-500\">\n                          {this.state.formError.msg}\n                        </span>\n                      )}\n                  </div>\n                </div>\n                <div className=\"flex justify-between mb-2 mt-4\">\n                  <div\n                    className={`flex items-center gap-1 cursor-pointer`}\n                    onClick={() =>\n                      this.resetReportContent(this.state.selectAll)\n                    }\n                  >\n                    {this.state.selectAll ? (\n                      <MdCheckBox className=\"w-6 h-6 text-blue-700\" />\n                    ) : (\n                      <MdCheckBoxOutlineBlank className=\"w-6 h-6\" />\n                    )}\n                    <span>Select all</span>\n                  </div>\n\n                  {this.state.dataToPrint && this.state.reportMainData && (\n                    <ExportToExcel\n                      fileData={this.state.dataToPrint}\n                      fileName={this.state.reportTitle}\n                      btnName=\"Generate\"\n                    />\n                  )}\n                </div>\n              </div>\n            </Modal>\n          )}\n        {/* END GENERATE REPORT MODAL CONTENT MODAL */}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = ({\n  auth,\n  system_settings,\n  sessionPlan,\n}: StoreState): {\n  auth: Auth;\n  application_sessions: SessionPlanInterface[] | null;\n  systemPositions: PositionAPI[] | null;\n} => {\n  return {\n    auth: auth,\n    systemPositions: system_settings.systemPositions,\n    application_sessions: sessionPlan.allSessionPlans,\n  };\n};\n\nexport const MarksPublicationReport = connect(mapStateToProps, {\n  GetAllSessionPlans,\n  getPositions,\n  PushPopupAlert,\n})(_MarksPublicationReport);\n","import axios from \"axios\";\nimport { Dispatch } from \"redux\";\nimport { ActionTypes } from \"./types\";\nimport {\n  AccessTaskInterface,\n  PermissionInterface,\n  SystemSettingsInterface,\n} from \"../shared/interfaces\";\nimport { API } from \"../utils/api\";\nimport { setAxiosToken } from \"../utils/AxiosToken\";\nimport { errorToText } from \"../utils/errors\";\nimport { PositionAPI } from \"../interfaces/position\";\n\n/**\n * * ****************************** INTERFACES *****************************\n */\n\n// SYSTEM SETTINGS  ==============\nexport interface GetSystemSettingsAction {\n  type: ActionTypes.GET_SYSTEM_SETTINGS;\n  payload: SystemSettingsInterface[];\n}\n\nexport interface DisableSystemSettingsAction {\n  type: ActionTypes.DISABLE_SYSTEM_SETTINGS;\n  payload: {\n    system_setting_id: string;\n    status: \"enabled\" | \"disabled\";\n  };\n}\n\n// ROLE TASKS ACCESS SETTINGS ===================================\nexport interface GetTaskAccessAction {\n  type: ActionTypes.GET_TASK_ACCESS;\n  payload: AccessTaskInterface[];\n}\n\n// POSITIONS SETTINGS ===================================\nexport interface PositionCreateInterface {\n  position_id?: string;\n  position_title: string;\n  position_code: string;\n  description: string;\n  school_level_id: string;\n  subcategory_id: string;\n  education_institute_id: string;\n  courses: string[];\n  requirements: {\n    user_detail_category_id: string;\n    user_detail_subcategory_id: string;\n    position_requirement: {\n      category_subcategory_data_id: string;\n      required: boolean;\n    }[];\n    required: boolean;\n  }[];\n}\nexport interface GetPositionsAction {\n  type: ActionTypes.GET_POSTIONS;\n  payload: PositionAPI[];\n}\n\nexport interface CreatePositionsAction {\n  type: ActionTypes.CREATE_POSITION;\n  payload: PositionCreateInterface;\n}\n\nexport interface UpdatePositionsAction {\n  type: ActionTypes.UPDATE_POSITION;\n  payload: PositionCreateInterface;\n}\n\nexport interface DeletePositionSettingAction {\n  type: ActionTypes.DELETE_POSITION;\n  payload: string;\n}\n\nexport interface PublishPositionAction {\n  type: ActionTypes.PUBLISH_POSITION;\n  payload: {\n    position_id: string;\n    status: boolean;\n  };\n}\n\nexport type SystemActionType =\n  | GetSystemSettingsAction\n  | DisableSystemSettingsAction\n  | GetTaskAccessAction\n  | GetPositionsAction\n  | CreatePositionsAction\n  | UpdatePositionsAction\n  | DeletePositionSettingAction\n  | PublishPositionAction;\n\n/**\n * * ****************************** ACTIONS *****************************\n */\n\nexport const getSystemSettings = (callback: Function) => {\n  return async (dispatch: Dispatch) => {\n    callback(true, \"\");\n    try {\n      setAxiosToken();\n      const res = await axios.get<SystemSettingsInterface[]>(\n        `${API.AUTH}/settings`\n      );\n      dispatch<GetSystemSettingsAction>({\n        type: ActionTypes.GET_SYSTEM_SETTINGS,\n        payload: res.data,\n      });\n      callback(false, \"\");\n    } catch (error) {\n      console.log({ code_error: error });\n      callback(false, errorToText(error));\n    }\n  };\n};\n\nexport const disableSystemSetting = (data: {\n  system_setting_id: string;\n  status: \"enabled\" | \"disabled\";\n}) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<DisableSystemSettingsAction>({\n      type: ActionTypes.DISABLE_SYSTEM_SETTINGS,\n      payload: data,\n    });\n  };\n};\n\n// ============================ tasks access =======================\n\nexport const GetTaskAccess = (callback: Function) => {\n  return async (dispatch: Dispatch) => {\n    callback(true, \"\");\n    try {\n      setAxiosToken();\n      const res = await axios.get<\n        {\n          id: string;\n          title: string;\n          key: string;\n          permitted: PermissionInterface;\n        }[]\n      >(`${API.AUTH}/allroleaccess`);\n      let response: AccessTaskInterface[] = res.data.map((data) => ({\n        id: data.id,\n        task: data.title,\n        key: data.key,\n        permitted: data.permitted,\n      }));\n      dispatch<GetTaskAccessAction>({\n        type: ActionTypes.GET_TASK_ACCESS,\n        payload: response,\n      });\n      callback(false, \"\", response);\n    } catch (error) {\n      console.log({ code_error: error });\n      callback(false, errorToText(error));\n    }\n  };\n};\n\n// ============================ positions =======================\n\nexport const getPositions = (callback: Function) => {\n  return async (dispatch: Dispatch) => {\n    callback(true, \"\");\n    try {\n      setAxiosToken();\n      const res = await axios.get<PositionAPI[]>(`${API.APPLICATION}/position`);\n      dispatch<GetPositionsAction>({\n        type: ActionTypes.GET_POSTIONS,\n        payload: res.data,\n      });\n      callback(false, \"\");\n    } catch (error) {\n      console.log({ code_error: error });\n      callback(false, errorToText(error));\n    }\n  };\n};\n\nexport const createPosition = (data: PositionCreateInterface) => {\n  console.log({ createPosition: data });\n  return async (dispatch: Dispatch) => {\n    dispatch<CreatePositionsAction>({\n      type: ActionTypes.CREATE_POSITION,\n      payload: data,\n    });\n  };\n};\n\nexport const updatePosition = (data: PositionCreateInterface) => {\n  console.log({ updatePosition: data });\n  return async (dispatch: Dispatch) => {\n    dispatch<UpdatePositionsAction>({\n      type: ActionTypes.UPDATE_POSITION,\n      payload: data,\n    });\n  };\n};\n\nexport const deletePosition = (data: string) => {\n  console.log({ deletePosition: data });\n  return async (dispatch: Dispatch) => {\n    dispatch<DeletePositionSettingAction>({\n      type: ActionTypes.DELETE_POSITION,\n      payload: data,\n    });\n  };\n};\n\nexport const publishPosition = (data: {\n  position_id: string;\n  status: boolean;\n}) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<PublishPositionAction>({\n      type: ActionTypes.PUBLISH_POSITION,\n      payload: data,\n    });\n  };\n};\n","import React from \"react\";\nimport { MdInfoOutline } from \"react-icons/md\";\n\nconst NoSession = () => {\n  return (\n    <div className=\"my-5\">\n      <div className=\"bg-yellow-100 rounded flex flex-col items-center justify-center p-6 my-8 text-yellow-900 border border-yellow-900\">\n        <MdInfoOutline className=\"text-6xl md:text-9xl\" />\n        <div className=\"text-center flex flex-col\">\n          <span className=\"text-2xl md:text-4xl font-extrabold\">\n            No session available\n          </span>\n          <span className=\"text-lg\">\n            Please Wait for the system to publish the sessions or contact the\n            administrator\n          </span>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default NoSession;\n","import React from \"react\";\n\ntype TableLoadingProps = {\n  cols: number;\n};\nconst TableLoading: React.FC<TableLoadingProps> = (props) => {\n  const displayCols = (): JSX.Element[] => {\n    let colsArray: number[] = [];\n    for (let index = 0; index < props.cols; index++) {\n      colsArray.push(index);\n    }\n    let result = colsArray.map((element) => {\n      return (\n        <td className=\"p-3 text-center whitespace-nowrap\" key={element}>\n          <div className=\"w-full h-4 rounded bg-gray-200 animate__animated animate__pulse animate__delay-5s animate__infinite\"></div>\n        </td>\n      );\n    });\n\n    return result;\n  };\n  return (\n    <>\n      <tr className=\"border-b border-gray-200\" key={228}>\n        {displayCols()}\n      </tr>\n      <tr className=\"border-b border-gray-200\" key={22648}>\n        {displayCols()}\n      </tr>\n      <tr className=\"border-b border-gray-200\" key={229768}>\n        {displayCols()}\n      </tr>\n    </>\n  );\n};\n\nexport default TableLoading;\n","export interface marksPublicationInterface {\n  publication_id: string;\n  session: string;\n  doneby: string;\n  created_date: string;\n  publication_status: \"PENDING\" | \"PUBLISHED\";\n  status: number;\n  publication_position_marks: publicationInterface[];\n  createdAt: string;\n  updatedAt: string;\n}\n\nexport interface publicationInterface {\n  _id: string;\n  position: string;\n  marks: number;\n  comment: string;\n}\n\nexport interface marksPublicationFormInterface {\n  session: string;\n  doneby: string;\n  created_date: string;\n  publication_position_marks: publicationFormInterface[];\n}\n\nexport interface publicationFormInterface {\n  position: string;\n  marks: number;\n  comment: string;\n}\n\nexport enum MarksPublicationCandidateStatus {\n  Failed = \"Failed\",\n  Passed = \"Passed\",\n}\n\nexport interface MarksPublicationCandidate_old {\n  user: {\n    in_eduction: boolean;\n    disability: boolean;\n    is_active: boolean;\n    n_id: string;\n    phone_number: string;\n    email: string;\n    createdAt: string;\n    updatedAt: string;\n    user_id: string;\n    user_info: placedCandidateUserInfo;\n  };\n  period: string;\n  position: string;\n  courses: {\n    id: string;\n    marks: number;\n    _id: string;\n  }[];\n  waiting_status: MarksPublicationCandidateStatus;\n  status: number;\n  user_position_marks: number;\n  createdAt: string;\n  updatedAt: string;\n  disability: boolean;\n  gender: string;\n  in_education: boolean;\n  id: string;\n}\n\nexport interface MarksPublicationCandidate {\n  _id: string;\n  user: string;\n  period: string;\n  position: string;\n  in_education: boolean;\n  n_id: string;\n  fname: string;\n  lname: string;\n  email: string;\n  phone_number: string;\n  gender: string;\n  disability: boolean;\n  courses: {\n    id: string;\n    marks: number;\n    _id: string;\n  }[];\n  waiting_status: MarksPublicationCandidateStatus;\n  status: number;\n  user_position_marks: number;\n  createdAt: string;\n  updatedAt: string;\n  __v: number;\n}\n\nexport interface MarksPublicationCandidateToPrintInterface {\n  no: number;\n  names: string;\n  national_id: string;\n  phone: string;\n  email: string;\n  gender: string;\n  position_name: string;\n  marks: number;\n  status: MarksPublicationCandidateStatus;\n}\n\nexport enum marksPublicationCandidateReportContentKeyInterface {\n  applicant_name = \"names\",\n  national_id = \"national_id\",\n  phone_number = \"phone\",\n  email = \"email\",\n  gender = \"gender\",\n  position_name = \"position_name\",\n  marks = \"marks\",\n  status = \"status\",\n}\n\nexport interface marksPublicationReportContentInterface {\n  key: marksPublicationCandidateReportContentKeyInterface;\n  title: string;\n  status: boolean;\n}\n// ---------------------------------------------------------------------------------------------\n\nexport interface placedCandidateInterface {\n  _id: string;\n  status: PlacedCandidateStatus;\n  user_id: string;\n  school_id: string;\n  position_id: string;\n  waiting_list_id: string;\n  request_id: string;\n  createdAt: string;\n  comment: string;\n  updatedAt: string;\n  __v: number;\n  n_id: string;\n  phone_number: string;\n  email: string;\n  user_info: placedCandidateUserInfo;\n  school: {\n    _id: string;\n    school_name: string;\n    school_code: string;\n    province_id: string;\n    province_code: string;\n    district_id: {\n      _id: string;\n      district_name: string;\n    };\n    district_code: string;\n    sector_code: string;\n    sector_id: string;\n    school_status: string;\n    status: number;\n    createdAt: string;\n    updatedAt: string;\n  };\n}\n\nexport interface placedCandidateUserInfo {\n  document_type: string;\n  issue_number: string;\n  date_of_issue: string;\n  date_of_expiry: string;\n  place_of_issue: string;\n  application_number: string;\n  fname: string;\n  lname: string;\n  father_names: string;\n  mother_names: string;\n  sex: string;\n  date_of_birth: string;\n  place_of_birth: string;\n  country_of_birth: string;\n  village_id: string;\n  village: string;\n  cell: string;\n  sector: string;\n  district: string;\n  province: string;\n  civil_status: string;\n  spouse: null;\n  status: string;\n  photo: string;\n}\n\nexport enum PlacedCandidateStatus {\n  PENDING = \"pending\",\n  PLACED = \"placed\",\n  REJECTED = \"rejected\",\n}\n\nexport interface PlacementToPrintInterface {\n  no: number;\n  names: string;\n  national_id: string;\n  phone: string;\n  email: string;\n  school_name: string;\n  position_name: string;\n  waiting_date: string;\n  placement_date: string;\n  status: PlacedCandidateStatus;\n}\n\nexport enum placementReportContentKeyInterface {\n  applicant_name = \"names\",\n  national_id = \"national_id\",\n  phone_number = \"phone\",\n  email = \"email\",\n  school_name = \"school_name\",\n  position_name = \"position_name\",\n  waiting_date = \"waiting_date\",\n  placement_date = \"placement_date\",\n  status = \"status\",\n}\n\nexport interface placementReportContentInterface {\n  key: placementReportContentKeyInterface;\n  title: string;\n  status: boolean;\n}\n"],"sourceRoot":""}
{"version":3,"sources":["containers/UserDashboard/UserDashboard.tsx","components/Navigation/SideNavigation.tsx","containers/ApplicationsDashboard/ApplicationHistory/ApplicationHistory.tsx","containers/ApplicationsDashboard/ExamDetails/ExamDetails.tsx","containers/ApplicationsDashboard/ExamStatus/PreparedExams.tsx","containers/ApplicationsDashboard/ExamStatus/ActiveExams.tsx","containers/ApplicationsDashboard/ExamStatus/ExamsDone.tsx","containers/ApplicationsDashboard/Exams.tsx","components/CandidatePlacementCheck/CandidatePlacementCheck.tsx","containers/ApplicationsDashboard/ApplicationsDashboard.tsx"],"names":["UserDashboard","className","_SideNavigation","props","componentDidMount","PageHasSubNav","componentWillUnmount","state","loading","this","auth","isAuthenticated","navActive","system","navigation","children","React","Component","SideNavigation","connect","NavToogle","MainItem","title","icon","MdBrightness1","active","count","IconDefined","ApplicationHistory","undefined","applicationHistory","length","map","item","i","DATE","date","comment","ApplicationStatesDescription","find","itm","key","application_status","caption","ExamDetails","setLoading","status","setState","locationsData","Locations_list","loadAllLocationsData","loadApplicationPeriods","candidateExam","selected_exam_id","selected_exam_details","doing_exam","to","examDetails","locationDetails","Loading","type","LoadingType","dark","onClick","setSelectedCandidateExam","exam_date","start_time","duration","discription","dangerouslySetInnerHTML","__html","termes","center_id","province_name","district_name","center_name","room_number","proctoring_type","PreparedExams","checkProctoringType","selectedExams","check","course_id","NotPreparedExamsFilter","selectedPosition","courses","filter","user_exams_done","ex","course","findExam","PreparedExamsFilter","AllPendingExams","totalPending","loadingExams","course_name","validateExamDate","end_time","ExamTimeStatus","Online","Expired","loadingExamsDone","Waiting","changeLocation","user_status","UserExamStatus","Editing","selectedApplicationDetails","ApplicationStates","Shortlisted","setSelectedCourse","appointmentDetailsModal","periods","selected_period","is_active","id","positions","selected_position","position_id","setSelectedPosition","setDoingExam","InitializeExamDetails","application_session","session_plan_id","district_id","room_id","setLoadingExams","Initiated","total_marks","toFixed","ActiveExams","ActiveExamsFilter","exam_start_time","exam_end_time","Paused","Done","Removed","x","selectedCourse","centersModal","setMaxExamModal","ExamsDone","viewMarksDetailsFn","Exam","examTest","user_exams_temp","period","courseSelected","viewMarksDetails","rules","exam_id","exam_paper","ExamsDoneFilter","_PostExams","renderExam","user_id","exam","examStatus","loadExam","redirect","setClaim","claim","closeModal","updateLocationFunction","exams","selected_application","updateLocation","setLoadingExamsDone","showTotalMarks","position","test","numberOfIncomplete","findLocation","course_code","location","rooms","room_type","RoomType","Virtual","Physical","courseId","current_temp","testDone","findCourse","pendingCourses","InitializationFn","loadExamsDone","user","loadCourses","doExam","exam_answers","claiming","myClaims","getMyClaims","msg","data","alert","displayResults","selectedLocation","applicationHistoryState","selectedExamDetails","CandidateAnswersDetails","showAnswers","applicationPeriods","setSelectedLocationData","ChooseExamCenter","positionCourses","addLocation","changeProctoring","parseFloat","findTotalMarks","Rejected","CheckIfExamDone","isClaimAllowed","deleteApplication","ClaimFormComponent","setFormState","claim_type","PlansTypeKeys","APPLICATION","file_id","PostExams","prepareExam","loadExamsList","setSelectedPeriod","CandidatePlacementCheck","_ApplicationsDashboard","filteredApplications","applications","Status","searchPeriod","appl","console","log","searchPeriodSel","closeApplicationDetails","displayDetailsModal","setDisplayDetailsModal","applicationStatuses","application","output","push","maxExamModal","LoadApplications","a","loadingErr","number_of_incomplete","response","candidateApplications","candidate_applications","axios","get","API","res","AddUserApplication","Incomplete","application_id","incrementIncomplete","LoadCandidateApplications","applicationError","post","noRoomsApplication","PushPopupAlert","description","theme","PopupAlertTheme","success","errors","field","newArr","removeLocation","message","danger","changeLoadingState","window","confirm","delete","RemoveUserApplication","warning","setShowFilterStatus","showPeriodFilter","loadAllPositions","apply","currentStep","ApplicationStepsTypes","Step3","initiateApplication","Step1","doTestStatus","applicationDetails","selectedApplicationStatus","viewSchools","FC_Access","UserAccessList","MY_APPLICATION","view","position_title","session_plan_name","Pass","checkApplication","SelectUserApplication","Exams","changeLocationError","application_history","positions_list","LoadingV2","NoResult","NoResultThemes","Dark","value","component","createdAt","Modal","backDrop","Themes","default","close","backDropClose","widthSizeClass","ModalSize","extraLarge","displayClose","padding","body","ApplicationPeriods","ApplicationsDashboard"],"mappings":"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","file":"static/js/56.3f0d022b.chunk.js","sourcesContent":["import React, { FC, ReactElement } from \"react\";\nimport { ApplicationsDashboard } from \"../ApplicationsDashboard/ApplicationsDashboard\";\ntype UserDashboardProps = {};\n\nexport const UserDashboard: FC<UserDashboardProps> = (): ReactElement => {\n  /* function body */\n  return (\n    <div className=\"\">\n      {/* Applications Dashboard */}\n      <ApplicationsDashboard />\n    {/* <div className=\"p-6\">\n      <h1 className=\"text-6xl text-center font-bold text-gray-400\">\n        Dashboard{\" \"}\n      </h1>\n\n      <br />\n      <br />\n      <div className=\"text-center\">\n        <Link to=\"/admin-center\">\n          <button className=\"text-blue-900 bg-blue-200 rounded py-1 px-2\">\n            Access Center as Admin\n          </button>\n        </Link>\n\n        <Link to=\"/candidate-center\">\n          <button className=\"text-yellow-900 bg-yellow-200 ml-1 rounded py-1 px-2\">\n            Access Center as a candidate\n          </button>\n        </Link>\n      </div>\n      <br />\n      <br />\n      <br />\n\n      <SystemDevelopmentProgress /> */}\n    </div>\n  );\n};\n","import React, { FC, ReactElement, ReactNode } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Auth, System } from \"../../actions\";\nimport { StoreState } from \"../../reducers\";\nimport { NavToogle, PageHasSubNav } from \"../../actions\";\nimport { MdBrightness1, MdSearch } from \"react-icons/md\";\n\n// props for the component\ninterface AppProps {\n  auth: Auth;\n  system: System;\n  PageHasSubNav: Function;\n  NavToogle: Function;\n  children: ReactNode;\n}\n//\ninterface AppState {\n  loading: boolean;\n}\n\nclass _SideNavigation extends React.Component<AppProps, AppState> {\n  constructor(props: AppProps) {\n    super(props);\n\n    this.state = {\n      loading: false,\n    };\n  }\n\n  componentDidMount = () => this.props.PageHasSubNav(true);\n  componentWillUnmount = () => this.props.PageHasSubNav(false);\n\n  render() {\n    const isAuthenticated = this.props.auth.isAuthenticated;\n\n    if (isAuthenticated === false) {\n      return null;\n    }\n\n    const navActive = this.props.system.navigation;\n    return (\n      <div\n        className={`fixed w-48 p-1 pr-2 pl-6 text-gray-700 bg-white ${\n          navActive === true ? \"lg:left-16  left-16\" : \" -left-72 lg:left-16\"\n        }  top-0 bottom-0 pt-20 z-30 shadow-lg  transition-all duration-500 ease-in-out overflow-y-auto`}\n      >\n        {this.props.children}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = ({\n  auth,\n  system,\n}: StoreState): { auth: Auth; system: System } => {\n  return { auth: auth, system: system };\n};\n\nexport const SideNavigation = connect(mapStateToProps, {\n  NavToogle,\n  PageHasSubNav,\n})(_SideNavigation);\n\n//************************************ FORM SEARCH **************************************** */\n\ntype SearchComponentInterface = {\n  data: any[];\n};\n\nexport const Search: FC<SearchComponentInterface> = ({\n  data,\n}): ReactElement => {\n  return (\n    <div className=\"m-1 rounded-md shadow-md border border-blue-400 bg-white p-1 flex \">\n      <label htmlFor=\"search-text\" className=\"inline-block text-2xl\">\n        <MdSearch className=\"inline-block text-blue-400\" />\n      </label>\n      <input\n        type=\"search\"\n        className=\"outline-none bg-transparent flex-1 pl-1\"\n        placeholder=\"Search\"\n        id=\"search-text\"\n      />\n    </div>\n  );\n};\n\n//************************************ FORM SEARCH **************************************** */\n\ntype MainItemComponentInterface = {\n  title: string;\n  icon?: any;\n  active?: boolean;\n  count?: number;\n};\n\n/**\n *\n * @param param0\n * @returns\n */\nexport const MainItem: FC<MainItemComponentInterface> = ({\n  title = \"\",\n  icon = MdBrightness1,\n  active = false,\n  count = 0,\n}): ReactElement => {\n  const IconDefined = icon;\n  return (\n    <section\n      className={`${\n        active === true\n          ? \"bg-blue-500 text-white font-bold\"\n          : \"bg-blue-100 text-blue-800\"\n      } mb-1 hover:font-bold py-1 hover:bg-blue-400 hover:text-white --font-bold  px-2 rounded-md flex cursor-pointer items-center`}\n    >\n      <section className=\"flex-1\">\n        <IconDefined className=\"inline-block mr-1 text-xs\" />\n        <span>{title}</span>\n      </section>\n\n      {count > 0 ? (\n        <span className=\"px-0.5 my-1 text-xs bg-blue-600 text-white rounded-full\">\n          {count}\n        </span>\n      ) : null}\n    </section>\n  );\n};\n\n//************************************ FORM SEARCH **************************************** */\n\ntype SubItemContainerComponentInterface = {\n  children: ReactNode;\n};\n\n/**\n *\n * @param param0\n * @returns\n */\nexport const SubItemContainer: FC<SubItemContainerComponentInterface> = ({\n  children,\n}): ReactElement => {\n  return (\n    <div className=\"ml-3 overflow-y-auto border-l-2 border-blue-200 -mt-1 pt-2 mb-2 pl-1 cursor-pointer\">\n      {children}\n    </div>\n  );\n};\n\n//************************************ FORM SEARCH **************************************** */\n\ntype SubItemComponentInterface = {\n  title: string;\n  icon?: any;\n  active?: boolean;\n  count?: number;\n};\n\n/**\n *\n * @param param0\n * @returns\n * @important Remenber to use these components inside the <SubItemContainer>...</SubItemContainer>\n */\nexport const SubItem: FC<SubItemComponentInterface> = ({\n  title = \"\",\n  icon = MdBrightness1,\n  active = false,\n  count = 0,\n}): ReactElement => {\n  const IconDefined = icon;\n\n  return (\n    <div\n      className={`animate__animated animate__zoomIn animate__faster ${\n        active === true ? \"bg-blue-500 text-white font-bold\" : \" text-blue-800\"\n      } text-blue-800 bg-blue-200 rounded-md px-1 mb-1 flex items-center py-1 font-bold`}\n    >\n      <IconDefined\n        className={`inline-block mr-0.1 text-xs ${\n          active === true ? \"text-white\" : \"\"\n        }`}\n      />\n      <span\n        className={`inline-block pl-1 ${active === true ? \"text-white\" : \"\"}`}\n      >\n        {title}\n      </span>\n      {count >= 1 ? (\n        <span\n          className={`text-sm fint-bold ${active === true ? \"text-white\" : \"\"}`}\n        >\n          {count}\n        </span>\n      ) : null}\n    </div>\n  );\n};\n","import React from 'react'\nimport { applicationHistory, ApplicationStatesDescription } from '../../../interfaces/application'\nimport { DATE } from '../../../utils/functions'\n\ninterface ApplicationHistoryProps {\n  applicationHistory: applicationHistory[];\n}\n\nconst ApplicationHistory = (props: ApplicationHistoryProps) => {\n  return (\n    <div className=\"flex flex-col justify-between items-start gap-1 bg-white px-3 py-2\">\n      {/* <span className=\"text-sm text-blue-800 font-bold\">Application status history</span> */}\n      <hr className=\"bg-blue-600\" />\n      <div className=\"grid md:grid-cols-2 lg:grid-cols-3 gap-3\">\n      {props.applicationHistory !== undefined &&\n        props.applicationHistory.length > 0 && \n        props.applicationHistory.map((item, i) => (\n          <div key={i + 1} className=\"col-span-1 flex flex-col border border-blue-500 rounded px-3 py-2\">\n            <div className=\"flex flex-row gap-2 justify-start items-center text-xs\">\n              <span className=\"text-gray-500\">Date:</span>\n              <span className=\"font-bold\">{DATE(item.date, \"DD/MM/YYYY\")}</span>\n            </div>\n            <div className=\"flex flex-row gap-2 justify-start items-center text-xs\">\n              <span className=\"text-gray-500\">Action:</span>\n              <span className=\"font-bold\">{item.comment}</span>\n            </div>\n            <div className=\"flex flex-row gap-2 justify-start items-center text-xs\">\n              <span className=\"text-gray-500\">Application status:</span>\n              <span className=\"font-bold\">{ApplicationStatesDescription.find(itm => itm.key === item.application_status)?.caption}</span>\n            </div>\n          </div>\n        ))}\n      </div> \n    </div>\n  )\n}\n\nexport default ApplicationHistory\n","import React, { Component } from \"react\";\nimport { MdInfo, MdLocationOn } from \"react-icons/md\";\nimport { Redirect } from \"react-router-dom\";\nimport { applicationPeriodsStoreInterface } from \"../../../actions/application_periods\";\nimport {\n  candidateExamStoreInterface,\n  InitialExamDetails,\n} from \"../../../actions/candidate_exam\";\nimport { LocationsDataStoreInterface } from \"../../../actions/locations_data\";\nimport Loading from \"../../../components/Loading/Loading\";\nimport { LoadingType } from \"../../../components/Loading/LoadingV2\";\nimport { applicationExamAPI } from \"../../../interfaces/application\";\nimport { DATE } from \"../../../utils/functions\";\nimport { LocationTableInterface } from \"../../Application/ExamCenter/ChooseExamCenter\";\n\ninterface ExamDetailsProps {\n  locationDetails: applicationExamAPI | undefined;\n  examDetails: InitialExamDetails | null;\n  locationsData: LocationsDataStoreInterface;\n  loadAllLocationsData: (callback: (loading: boolean) => void) => void;\n  setSelectedLocationData: (locationData: LocationTableInterface) => void;\n  periods: applicationPeriodsStoreInterface;\n  loadApplicationPeriods: (callback: (loading: boolean) => void) => void;\n  candidateExam: candidateExamStoreInterface;\n  setSelectedCandidateExam: (selected_exam: InitialExamDetails | null) => void;\n  // selectedCourse: course;\n}\ninterface ExamDetailsState {\n  loading: boolean;\n}\n\nclass ExamDetails extends Component<ExamDetailsProps, ExamDetailsState> {\n  constructor(props: ExamDetailsProps) {\n    super(props);\n\n    this.state = {\n      loading: false,\n    };\n  }\n  setLoading = (status: boolean) => {\n    this.setState({ loading: status });\n  };\n  componentDidMount = () => {\n    if (\n      this.props.locationsData.Locations_list === null ||\n      this.props.locationsData.Locations_list.length === 0\n    ) {\n      this.props.loadAllLocationsData(this.setLoading);\n    }\n    // if (this.props.periods.applicationPeriods === null || this.props.periods.applicationPeriods.length === 0 || this.props.periods.selected_period === null) {\n    this.props.loadApplicationPeriods(this.setLoading);\n    // }\n  };\n  render() {\n    if (\n      this.props.candidateExam.selected_exam_id !== null &&\n      this.props.candidateExam.selected_exam_details !== null &&\n      this.props.candidateExam.doing_exam === true\n    ) {\n      return <Redirect to=\"/do-exam\" />;\n    }\n    if (this.props.examDetails === null) {\n      return (\n        <div className=\"bg-yellow-50 text-yellow-800 font-bold rounded px-2 py-4 text-center text-3xl border border-yellow-600 mx-4 my-4\">\n          No Exam details found!\n        </div>\n      );\n    }\n    if (this.props.locationDetails === undefined) {\n      return (\n        <div className=\"bg-yellow-50 text-yellow-800 font-bold rounded px-2 py-4 text-center text-3xl border border-yellow-600 mx-4 my-4\">\n          No exam location details found!\n        </div>\n      );\n    }\n    return (\n      <div>\n        {this.state.loading === true ? (\n          <div className=\"px-4 py-4 rounded bg-gray-100\">\n            <Loading type={LoadingType.dark} />\n          </div>\n        ) : (\n          <div>\n            <div className=\"bg-gray-100 rounded mx-2 mb-2 px-2 py-2\">\n              <div className=\"font-bold text-xl text-blue-600 mb-4 flex flex-row items-center justify-between gap-2 bg-white py-2 px-2 rounded\">\n                <div className=\"flex flex-row items-center gap-2\">\n                  <MdInfo className=\"text-4xl text-blue-600\" />\n                  Exam information\n                </div>\n                <button\n                  onClick={() => {\n                    // this.props.setSelectedCourse(this.props.selectedCourse);\n                    this.props.examDetails &&\n                      this.props.setSelectedCandidateExam(\n                        this.props.examDetails\n                      );\n                  }}\n                  type=\"button\"\n                  className={`btn ${\n                    this.props.candidateExam.selected_exam_id !== null\n                      ? \"bg-yellow-700 hover:bg-yellow-900\"\n                      : \"bg-blue-600 hover:bg-blue-700\"\n                  } text-white cursor-pointer text-base`}\n                >\n                  {this.props.candidateExam.selected_exam_id !== null\n                    ? \"Return to Exam\"\n                    : \"Start Exam\"}\n                </button>\n              </div>\n              <div className=\"grid md:grid-cols-3 gap-4\">\n                <div className=\"col-span-1\">\n                  <div className=\"flex flex-col pl-2 border-gray-300 pb-2\">\n                    <span className=\"text-gray-500 text-sm italic\">\n                      Exam date:\n                    </span>\n                    <span className=\"text-gray-700 font-bold\">\n                      {DATE(this.props.examDetails.exam_date, \"DD/MM/YYYY\")}\n                    </span>\n                  </div>\n                </div>\n                <div className=\"col-span-1\">\n                  <div className=\"flex flex-col pl-2 border-gray-300 pb-2\">\n                    <span className=\"text-gray-500 text-sm italic\">\n                      Exam start time:\n                    </span>\n                    <span className=\"text-gray-700 font-bold\">\n                      {this.props.examDetails.start_time}\n                    </span>\n                  </div>\n                </div>\n                <div className=\"col-span-1\">\n                  <div className=\"flex flex-col pl-2 border-gray-300 pb-2\">\n                    <span className=\"text-gray-500 text-sm italic\">\n                      Exam duration:\n                    </span>\n                    <span className=\"text-gray-700 font-bold\">\n                      {this.props.examDetails.duration / 60} hours{\" \"}\n                      {this.props.examDetails.duration % 60 > 0 && (\n                        <div>{this.props.examDetails.duration % 60} mins</div>\n                      )}\n                    </span>\n                  </div>\n                </div>\n                <div className=\"col-span-3\">\n                  <div className=\"flex flex-col px-2 pb-2\">\n                    <span className=\"text-gray-500 text-sm italic\">\n                      Exam description:\n                    </span>\n                    <span className=\"text-gray-700 font-bold px-2 py-2 rounded bg-white mt-2\">\n                      {this.props.examDetails.discription}\n                    </span>\n                  </div>\n                </div>\n                <div className=\"col-span-3\">\n                  <div className=\"flex flex-col px-2 pb-2\">\n                    <span className=\"text-gray-500 text-sm italic\">\n                      Terms and conditions / Rules:\n                    </span>\n                    <div\n                      className=\"px-2 py-2 rounded bg-white mt-2\"\n                      dangerouslySetInnerHTML={{\n                        __html: this.props.examDetails.termes,\n                      }}\n                    ></div>\n                  </div>\n                </div>\n              </div>\n            </div>\n            <div className=\"bg-gray-100 rounded mx-2 mb-2 px-2 py-2\">\n              <div className=\"font-bold text-xl text-blue-600 mb-4 flex flex-row items-center justify-between gap-2 bg-white py-2 px-2 rounded\">\n                <div className=\"flex flex-row items-center gap-2\">\n                  <MdLocationOn className=\"text-4xl text-blue-600\" />\n                  Examination location\n                </div>\n              </div>\n              <div className=\"grid md:grid-cols-3 gap-4 px-2\">\n                <div className=\"col-span-1\">\n                  <div className=\"flex flex-col border-b border-gray-300 pb-2\">\n                    <span className=\"text-gray-500 text-sm italic\">\n                      Province:\n                    </span>\n                    <span className=\"text-gray-700 font-bold\">\n                      {this.props.locationsData.Locations_list &&\n                        this.props.locationsData.Locations_list.find(\n                          (itm) =>\n                            this.props.locationDetails !== undefined &&\n                            itm.center_id ===\n                              this.props.locationDetails.center_id\n                        )?.province_name}\n                    </span>\n                  </div>\n                </div>\n                <div className=\"col-span-1\">\n                  <div className=\"flex flex-col border-b border-gray-300 pb-2\">\n                    <span className=\"text-gray-500 text-sm italic\">\n                      District:\n                    </span>\n                    <span className=\"text-gray-700 font-bold\">\n                      {this.props.locationsData.Locations_list &&\n                        this.props.locationsData.Locations_list.find(\n                          (itm) =>\n                            this.props.locationDetails !== undefined &&\n                            itm.center_id ===\n                              this.props.locationDetails.center_id\n                        )?.district_name}\n                    </span>\n                  </div>\n                </div>\n                <div className=\"col-span-1\">\n                  <div className=\"flex flex-col border-b border-gray-300 pb-2\">\n                    <span className=\"text-gray-500 text-sm italic\">\n                      Center:{\" \"}\n                    </span>\n                    <span className=\"text-gray-700 font-bold\">\n                      {this.props.locationDetails.center_name}\n                    </span>\n                  </div>\n                </div>\n                <div className=\"col-span-1\">\n                  <div className=\"flex flex-col border-b border-gray-300 pb-2\">\n                    <span className=\"text-gray-500 text-sm italic\">\n                      Room number:{\" \"}\n                    </span>\n                    <span className=\"text-gray-700 font-bold\">\n                      {this.props.locationDetails.room_number}\n                    </span>\n                  </div>\n                </div>\n                <div className=\"col-span-1\">\n                  <div className=\"flex flex-col border-b border-gray-300 pb-2\">\n                    <span className=\"text-gray-500 text-sm italic\">\n                      Proctoring type\n                    </span>\n                    <span className=\"text-gray-700 font-bold\">\n                      {this.props.locationDetails.proctoring_type}\n                    </span>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default ExamDetails;\n","import React, { Component } from \"react\";\nimport { CgCheckO } from \"react-icons/cg\";\nimport { IoMdInformationCircleOutline } from \"react-icons/io\";\nimport { RiCheckboxBlankCircleFill, RiErrorWarningLine } from \"react-icons/ri\";\nimport { applicationPeriodsStoreInterface } from \"../../../actions/application_periods\";\nimport {\n  candidateExamStoreInterface,\n  InitialExamDetails,\n} from \"../../../actions/candidate_exam\";\nimport { courseStoreInterface } from \"../../../actions/course\";\nimport { positionsStoreInterface } from \"../../../actions/positions\";\nimport Loading from \"../../../components/Loading/Loading\";\nimport {\n  applicationExamAPI,\n  ApplicationStates,\n  GetApplicationsAPI,\n} from \"../../../interfaces/application\";\nimport { course } from \"../../../interfaces/course\";\nimport { UserExamStatus } from \"../../../interfaces/exam\";\nimport { PositionAPI, PositionAPICourse } from \"../../../interfaces/position\";\nimport { DATE } from \"../../../utils/functions\";\nimport { ExamTimeStatus, validateExamDate } from \"../../../utils/question_bank\";\n\ninterface PreparedExamsProps {\n  selectedPosition: PositionAPI;\n  selectedExams: applicationExamAPI[] | null;\n  findExam: (courseId: string) => InitialExamDetails | null;\n  loadingExams: boolean;\n  loadingExamsDone: boolean;\n  setMaxExamModal: (status: boolean) => void;\n  course: courseStoreInterface;\n  setSelectedCourse: (course: course | null) => void;\n  candidateExam: candidateExamStoreInterface;\n  positions: positionsStoreInterface;\n  periods: applicationPeriodsStoreInterface;\n  setSelectedPosition: (position: PositionAPI) => void;\n  setSelectedCandidateExam: (selected_exam: InitialExamDetails | null) => void;\n  changeLocation: (item: PositionAPICourse) => void;\n  selectedApplicationDetails: GetApplicationsAPI;\n  setDoingExam: (status: boolean) => void;\n  InitializeExamDetails: (\n    periodId: string,\n    courseId: string,\n    district_id: string,\n    center_id: string,\n    room_id: string,\n    position: PositionAPI,\n    start_exam: boolean,\n    callback: (loading: boolean) => void\n  ) => void;\n  setLoadingExams: (status: boolean) => void;\n}\ninterface PreparedExamsState {}\n\nexport class PreparedExams extends Component<\n  PreparedExamsProps,\n  PreparedExamsState\n> {\n  checkProctoringType = (item: PositionAPICourse) => {\n    if (this.props.selectedExams !== null) {\n      let check = this.props.selectedExams.find(\n        (itm) => itm.course_id === item.course_id\n      );\n      if (check !== undefined) {\n        return check.proctoring_type;\n      }\n    }\n    return \"\";\n  };\n  render() {\n    let NotPreparedExamsFilter = this.props.selectedPosition.courses.filter(\n      (itm) =>\n        this.props.candidateExam.user_exams_done.filter(\n          (ex) => ex.course === itm.course_id\n        ).length === 0 && this.props.findExam(itm.course_id) === null\n    );\n    let PreparedExamsFilter = this.props.selectedPosition.courses.filter(\n      (itm) =>\n        this.props.candidateExam.user_exams_done.filter(\n          (ex) => ex.course === itm.course_id\n        ).length === 0 && this.props.findExam(itm.course_id) !== null\n    );\n    let AllPendingExams = [...PreparedExamsFilter, ...NotPreparedExamsFilter];\n    let totalPending =\n      NotPreparedExamsFilter.length + PreparedExamsFilter.length;\n    return (\n      <div className=\"bg-white px-2 py-2\">\n        <div className=\"bg-gray-100 rounded px-2 py-2\">\n          <div className=\"flex flex-row items-center justify-between text-xl mb-3 mx-2\">\n            <span className=\"font-bold \">Waiting exams</span>\n            <span className=\"font-bold bg-white text-blue-600 rounded-full px-2 text-base border border-blue-200\">\n              {this.props.selectedPosition !== null &&\n                this.props.selectedExams !== null &&\n                this.props.loadingExams === false &&\n                totalPending}\n            </span>\n          </div>\n          <div className=\"flex flex-col gap-2\">\n            {this.props.selectedPosition === null ||\n            this.props.selectedExams === null ||\n            this.props.loadingExams === true ? (\n              <Loading />\n            ) : AllPendingExams.length === 0 ? (\n              <div className=\"border border-gray-200 text-gray-400 font-bold rounded-md px-3 py-3 text-center\">\n                <div className=\"flex justify-center items-center w-full text-4xl\">\n                  <IoMdInformationCircleOutline />\n                </div>\n                <div className=\"text-gray-500\">No exams found!</div>\n              </div>\n            ) : (\n              AllPendingExams.map((item, i) => (\n                <div\n                  key={i + 1}\n                  className={`px-3 py-2 rounded group bg-white border`}\n                >\n                  <div className=\"grid md:grid-cols-12 gap-2\">\n                    {/* First col */}\n                    <div className=\"col-span-12 md:col-span-6 lg:col-span-4 flex fex-row items-center gap-3\">\n                      <div className=\"flex flex-row gap-2 items-center\">\n                        <div\n                          className={`text-gray-300 group-hover:text-white flex flex-row items-center gap-2 text-right ml-2`}\n                        >\n                          {this.props.findExam(item.course_id) !== null ? (\n                            <CgCheckO className=\"text-4xl text-blue-600\" />\n                          ) : (\n                            <RiCheckboxBlankCircleFill className=\"text-4xl text-blue-100\" />\n                          )}\n                        </div>\n                      </div>\n                      <div className=\"flex flex-col\">\n                        <div className={`font-bold text-gray-600 truncate`}>\n                          {item.course_name}\n                        </div>\n                        <div className=\"flex flex-row justify-start items-center gap-2\">\n                          <span className=\"text-gray-500 text-xs\">\n                            Exam date:{\" \"}\n                          </span>\n                          {this.props.findExam(item.course_id) !== null ? (\n                            <div className=\"flex flex-row items-center gap-2\">\n                              {validateExamDate(\n                                this.props.findExam(item.course_id)!.exam_date,\n                                this.props.findExam(item.course_id)!.start_time,\n                                this.props.findExam(item.course_id)!.end_time\n                              ) === ExamTimeStatus.Online ? (\n                                <span className=\"bg-blue-100 text-blue-600 font-bold px-2 rounded-full\">\n                                  {validateExamDate(\n                                    this.props.findExam(item.course_id)!\n                                      .exam_date,\n                                    this.props.findExam(item.course_id)!\n                                      .start_time,\n                                    this.props.findExam(item.course_id)!\n                                      .end_time\n                                  )}\n                                </span>\n                              ) : validateExamDate(\n                                  this.props.findExam(item.course_id)!\n                                    .exam_date,\n                                  this.props.findExam(item.course_id)!\n                                    .start_time,\n                                  this.props.findExam(item.course_id)!.end_time\n                                ) === ExamTimeStatus.Expired ? (\n                                <span className=\"italic text-yellow-700 underline\">\n                                  {validateExamDate(\n                                    this.props.findExam(item.course_id)!\n                                      .exam_date,\n                                    this.props.findExam(item.course_id)!\n                                      .start_time,\n                                    this.props.findExam(item.course_id)!\n                                      .end_time\n                                  )}\n                                </span>\n                              ) : (\n                                <span className=\"italic\">\n                                  {validateExamDate(\n                                    this.props.findExam(item.course_id)!\n                                      .exam_date,\n                                    this.props.findExam(item.course_id)!\n                                      .start_time,\n                                    this.props.findExam(item.course_id)!\n                                      .end_time\n                                  )}\n                                </span>\n                              )}\n                              <span className=\"font-bold text-blue-600 text-sm\">\n                                {DATE(\n                                  this.props.findExam(item.course_id)!\n                                    .exam_date,\n                                  \"DD/MM/YYYY\"\n                                )}\n                              </span>\n                              <span\n                                className={`bg-blue-100 text-blue-600 font-bold px-2 py-1 rounded-full text-sm`}\n                              >\n                                {\n                                  this.props.findExam(item.course_id)!\n                                    .start_time\n                                }\n                              </span>\n                            </div>\n                          ) : (\n                            <span className=\"text-gray-500 text-sm\">\n                              Waiting for preparation\n                            </span>\n                          )}\n                        </div>\n                      </div>\n                    </div>\n                    {/* Second col */}\n                    <div className=\"col-span-12 md:col-span-6 lg:col-span-4 flex flex-col items-start justify-center\">\n                      {this.props.selectedExams === null ? (\n                        \"\"\n                      ) : this.props.selectedExams.find(\n                          (itm) => itm.course_id === item.course_id\n                        ) !== undefined ? (\n                        <>\n                          <div className=\"flex flex-row justify-start items-center gap-2\">\n                            <span className=\"text-gray-500 text-xs\">\n                              Proctoring type:{\" \"}\n                            </span>\n                            <span className=\"text-black font-bold text-sm bg-yellow-200 rounded-full px-2\">\n                              {this.checkProctoringType(item)}\n                            </span>\n                          </div>\n                          <div className=\"flex flex-col justify-center items-start gap-2\">\n                            {/* <span className=\"text-gray-500 text-xs\">\n                              Exam location:{\" \"}\n                            </span> */}\n                            <span className={`text-gray-700 font-bold text-sm`}>\n                              Center:{\" \"}\n                              {this.props.selectedExams === null ? (\n                                \"\"\n                              ) : this.props.selectedExams.find(\n                                  (itm) => itm.course_id === item.course_id\n                                ) !== undefined ? (\n                                this.props.selectedExams.find(\n                                  (itm) => itm.course_id === item.course_id\n                                )?.center_name\n                              ) : (\n                                <span className=\"italic text-xs\">\n                                  No location selected\n                                </span>\n                              )}\n                            </span>\n                            <span className={`text-gray-700 font-bold text-sm`}>\n                              Room:{\" \"}\n                              {this.props.selectedExams === null ? (\n                                \"\"\n                              ) : this.props.selectedExams.find(\n                                  (itm) => itm.course_id === item.course_id\n                                ) !== undefined ? (\n                                this.props.selectedExams.find(\n                                  (itm) => itm.course_id === item.course_id\n                                )?.room_number === 0 ? (\n                                  <span className=\"bg-yellow-100 text-yellow-700 font-bold px-2 py-1 rounded\">\n                                    Waiting room, you are advised to choose\n                                    another center\n                                  </span>\n                                ) : (\n                                  <span className=\"text-blue-600 bg-blue-100 px-2 py-1 rounded\">\n                                    No:{\" \"}\n                                    {\n                                      this.props.selectedExams.find(\n                                        (itm) =>\n                                          itm.course_id === item.course_id\n                                      )?.room_number\n                                    }\n                                  </span>\n                                )\n                              ) : (\n                                <span className=\"italic text-xs\">\n                                  No location selected\n                                </span>\n                              )}\n                            </span>\n                          </div>\n                        </>\n                      ) : (\n                        <div className=\"flex flex-row gap-2 items-center justify-start\">\n                          <RiErrorWarningLine className=\"text-xl text-yellow-700\" />\n                          <span className=\"text-yellow-700 italic text-sm\">\n                            No location selected\n                          </span>\n                        </div>\n                      )}\n                    </div>\n                    {/* Third col */}\n                    <div className=\"col-span-12 md:col-span-12 lg:col-span-4 flex items-center justify-start lg:justify-end\">\n                      {this.props.selectedExams === null ? (\n                        \"\"\n                      ) : this.props.selectedExams.find(\n                          (itm) => itm.course_id === item.course_id\n                        ) !== undefined ? (\n                        <div className=\"flex flex-row justify-start md:justify-end items-center gap-2\">\n                          {this.props.loadingExams === true ||\n                          this.props.loadingExamsDone === true ? (\n                            <div className=\"text-gray-500 font-bold bg-gray-100 text-sm rounded px-3 py-2\">\n                              Checking...\n                            </div>\n                          ) : (\n                            ((this.props.candidateExam.user_exams_done.find(\n                              (itm) => itm.course === item.course_id\n                            ) === undefined &&\n                              this.props.findExam(item.course_id) !== null &&\n                              validateExamDate(\n                                this.props.findExam(item.course_id)!.exam_date,\n                                this.props.findExam(item.course_id)!.start_time,\n                                this.props.findExam(item.course_id)!.end_time\n                              ) === ExamTimeStatus.Waiting) ||\n                              this.props.findExam(item.course_id) === null) && (\n                              <div>\n                                <div\n                                  onClick={() =>\n                                    this.props.changeLocation(item)\n                                  }\n                                  className=\"btn text-blue-600 border border-white cursor-pointer group-hover:bg-blue-600 hover:bg-blue-800 group-hover:text-white bg-blue-100 text-sm w-40 text-center\"\n                                >\n                                  Change location\n                                </div>\n                              </div>\n                            )\n                          )}\n                          {this.props.loadingExams === true ||\n                          this.props.loadingExamsDone === true ? (\n                            <div className=\"text-gray-500 font-bold bg-gray-100 text-sm rounded px-3 py-2\">\n                              Checking...\n                            </div>\n                          ) : (\n                            this.props.findExam(item.course_id) !== null &&\n                            this.props.findExam(item.course_id)?.course !==\n                              undefined &&\n                            this.props.candidateExam.user_exams_done.find(\n                              (itm) => itm.course === item.course_id\n                            )?.user_status !== UserExamStatus.Editing &&\n                            validateExamDate(\n                              this.props.findExam(item.course_id)!.exam_date,\n                              this.props.findExam(item.course_id)!.start_time,\n                              this.props.findExam(item.course_id)!.end_time\n                            ) === ExamTimeStatus.Online &&\n                            this.props.selectedApplicationDetails\n                              .application_status ===\n                              ApplicationStates.Shortlisted && (\n                              <div\n                                onClick={() => {\n                                  this.props.course.courses &&\n                                    this.props.setSelectedCourse(\n                                      this.props.course.courses.find(\n                                        (itm) =>\n                                          itm.course_id === item.course_id\n                                      )!\n                                    );\n                                  this.props.findExam(item.course_id) !==\n                                    null &&\n                                    this.setState({\n                                      appointmentDetailsModal: {\n                                        status: true,\n                                        item: this.props.findExam(\n                                          item.course_id\n                                        ),\n                                      },\n                                    });\n                                }}\n                                className=\"hidden btn border border-blue-500 text-blue-600 cursor-pointer hover:bg-blue-600 hover:text-white text-sm text-center\"\n                              >\n                                Details\n                              </div>\n                            )\n                          )}\n                          {this.props.loadingExams === true ||\n                          this.props.loadingExamsDone === true ? (\n                            <div className=\"text-gray-500 font-bold bg-gray-100 text-sm rounded px-3 py-2\">\n                              Checking...\n                            </div>\n                          ) : (\n                            this.props.periods.selected_period !== null &&\n                            this.props.periods.selected_period.is_active ===\n                              true &&\n                            this.props.findExam(item.course_id) !== null &&\n                            this.props.findExam(item.course_id)?.id !==\n                              undefined &&\n                            validateExamDate(\n                              this.props.findExam(item.course_id)!.exam_date,\n                              this.props.findExam(item.course_id)!.start_time,\n                              this.props.findExam(item.course_id)!.end_time\n                            ) === ExamTimeStatus.Online &&\n                            this.props.selectedApplicationDetails\n                              .application_status ===\n                              ApplicationStates.Shortlisted && (\n                              <div\n                                onClick={() => {\n                                  if (this.props.selectedPosition !== null) {\n                                    if (\n                                      this.props.positions.selected_position ===\n                                        null ||\n                                      this.props.positions.selected_position\n                                        .position_id !==\n                                        this.props.selectedPosition.position_id\n                                    ) {\n                                      this.props.setSelectedPosition(\n                                        this.props.selectedPosition\n                                      );\n                                    }\n                                    this.props.selectedExams !== null &&\n                                      this.props.course.courses &&\n                                      this.props.setSelectedCourse(\n                                        this.props.course.courses.find(\n                                          (itm) =>\n                                            itm.course_id === item.course_id\n                                        )!\n                                      );\n                                    this.props.selectedExams !== null &&\n                                      this.props.findExam(item.course_id) !==\n                                        null &&\n                                      this.props.setSelectedCandidateExam(\n                                        this.props.findExam(item.course_id)\n                                      );\n                                    this.props.setDoingExam(true);\n                                    this.props.selectedExams &&\n                                      this.props.InitializeExamDetails(\n                                        this.props.selectedApplicationDetails\n                                          .application_session.session_plan_id,\n                                        item.course_id,\n                                        this.props.selectedExams.find(\n                                          (itm) =>\n                                            itm.course_id === item.course_id\n                                        )!.district_id,\n                                        this.props.selectedExams.find(\n                                          (itm) =>\n                                            itm.course_id === item.course_id\n                                        )!.center_id,\n                                        this.props.selectedExams.find(\n                                          (itm) =>\n                                            itm.course_id === item.course_id\n                                        )!.room_id,\n                                        this.props.selectedPosition,\n                                        true,\n                                        this.props.setLoadingExams\n                                      );\n                                  }\n                                }}\n                                className={`btn border ${\n                                  this.props.candidateExam.user_exams_done.find(\n                                    (itm) => itm.course === item.course_id\n                                  )?.user_status !== UserExamStatus.Editing\n                                    ? \"border-blue-500 bg-blue-600 hover:text-blue-600\"\n                                    : \"border-green-500 bg-green-600 hover:text-green-600\"\n                                } text-white cursor-pointer hover:bg-white text-sm w-max text-center`}\n                              >\n                                {this.props.candidateExam.user_exams_done.find(\n                                  (itm) => itm.course === item.course_id\n                                )?.user_status !== UserExamStatus.Editing\n                                  ? \"Start exam\"\n                                  : \"Back to Exam\"}\n                              </div>\n                            )\n                          )}\n                          {this.props.selectedApplicationDetails\n                            .application_status ===\n                            ApplicationStates.Initiated && (\n                            <div className=\"font-semibold text-yellow-800 bg-yellow-50 py-2 px-4 text-base\">\n                              Waiting for shortlisting\n                            </div>\n                          )}\n                        </div>\n                      ) : (\n                        <div className=\"flex flex-row justify-start md:justify-end items-center gap-2\">\n                          {this.props.candidateExam.user_exams_done.find(\n                            (itm) => itm.course === item.course_id\n                          ) === undefined && (\n                            <div\n                              onClick={() => this.props.changeLocation(item)}\n                              className=\"btn cursor-pointer bg-yellow-700 hover:bg-yellow-50 border border-yellow-700 hover:text-yellow-700 text-white text-sm w-36 text-center\"\n                            >\n                              Choose location\n                            </div>\n                          )}\n                        </div>\n                      )}\n                      {this.props.candidateExam.user_exams_done.find(\n                        (itm) => itm.course === item.course_id\n                      ) !== undefined &&\n                        this.props.candidateExam.user_exams_done.find(\n                          (itm) => itm.course === item.course_id\n                        )?.user_status !== UserExamStatus.Editing && (\n                          <div className=\"flex flex-row gap-2 items-center\">\n                            <div\n                              className={`text-blue-600 flex flex-row items-center gap-2 text-right ml-2`}\n                            >\n                              <div className=\"flex flex-col gap-0\">\n                                <span className=\"text-sm\">Marks</span>\n                                <span className=\"text-lg font-bold -mt-1\">\n                                  {this.props.candidateExam.user_exams_done\n                                    .find(\n                                      (itm) => itm.course === item.course_id\n                                    )\n                                    ?.total_marks.toFixed(2)}\n                                  %\n                                </span>\n                              </div>\n                            </div>\n                          </div>\n                        )}\n                    </div>\n                  </div>\n                </div>\n              ))\n            )}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default PreparedExams;\n","import React, { Component } from \"react\";\nimport { HiInformationCircle } from \"react-icons/hi\";\nimport { IoMdInformationCircleOutline } from \"react-icons/io\";\nimport { MdCheckCircle, MdPauseCircleFilled } from \"react-icons/md\";\nimport { RiCheckboxBlankCircleFill, RiErrorWarningLine } from \"react-icons/ri\";\nimport { applicationPeriodsStoreInterface } from \"../../../actions/application_periods\";\nimport {\n  candidateExamStoreInterface,\n  InitialExamDetails,\n} from \"../../../actions/candidate_exam\";\nimport { courseStoreInterface } from \"../../../actions/course\";\nimport { positionsStoreInterface } from \"../../../actions/positions\";\nimport Loading from \"../../../components/Loading/Loading\";\nimport {\n  applicationExamAPI,\n  ApplicationStates,\n  GetApplicationsAPI,\n} from \"../../../interfaces/application\";\nimport { course } from \"../../../interfaces/course\";\nimport { UserExamStatus } from \"../../../interfaces/exam\";\nimport { PositionAPI } from \"../../../interfaces/position\";\nimport { DATE } from \"../../../utils/functions\";\nimport { ExamTimeStatus, validateExamDate } from \"../../../utils/question_bank\";\n\ninterface ActiveExamsProps {\n  selectedPosition: PositionAPI;\n  selectedExams: applicationExamAPI[] | null;\n  findExam: (courseId: string) => InitialExamDetails | null;\n  loadingExams: boolean;\n  loadingExamsDone: boolean;\n  setMaxExamModal: (status: boolean) => void;\n  course: courseStoreInterface;\n  setSelectedCourse: (course: course | null) => void;\n  candidateExam: candidateExamStoreInterface;\n  positions: positionsStoreInterface;\n  periods: applicationPeriodsStoreInterface;\n  setSelectedPosition: (position: PositionAPI) => void;\n  setSelectedCandidateExam: (selected_exam: InitialExamDetails | null) => void;\n  selectedApplicationDetails: GetApplicationsAPI;\n  setDoingExam: (status: boolean) => void;\n  InitializeExamDetails: (\n    periodId: string,\n    courseId: string,\n    district_id: string,\n    center_id: string,\n    room_id: string,\n    position: PositionAPI,\n    start_exam: boolean,\n    callback: (loading: boolean) => void\n  ) => void;\n  setLoadingExams: (status: boolean) => void;\n}\ninterface ActiveExamsState {}\n\nexport class ActiveExams extends Component<ActiveExamsProps, ActiveExamsState> {\n  render() {\n    let ExamsDoneFilterTemp = this.props.selectedPosition.courses.filter(\n      (itm) =>\n        this.props.findExam(itm.course_id) !== null &&\n        this.props.candidateExam.user_exams_done.filter(\n          (ex) =>\n            ex.course === itm.course_id &&\n            validateExamDate(\n              ex.exam_date,\n              ex.exam_start_time,\n              ex.exam_end_time\n            ) === ExamTimeStatus.Online\n        ).length > 0\n    );\n    let ActiveExamsFilter = ExamsDoneFilterTemp.filter(\n      (check) =>\n        this.props.candidateExam.user_exams_done.filter(\n          (itm) => itm.course === check.course_id\n        ) !== undefined &&\n        (this.props.candidateExam.user_exams_done.find(\n          (itm) => itm.course === check.course_id\n        )?.user_status === UserExamStatus.Editing ||\n          this.props.candidateExam.user_exams_done.find(\n            (itm) => itm.course === check.course_id\n          )?.user_status === UserExamStatus.Paused)\n    );\n    return (\n      <>\n        {ActiveExamsFilter.length > 0 ? (\n          <div className=\"bg-white px-2 py-2\">\n            <div className=\"bg-gray-100 rounded px-2 py-2\">\n              <div className=\"flex flex-row items-center justify-between text-xl mb-3 mx-2\">\n                <span className=\"font-bold \">Active exam</span>\n                <span className=\"font-bold bg-white text-green-600 rounded-full px-2 text-base border border-gray-200\">\n                  {this.props.selectedPosition !== null &&\n                    this.props.selectedExams !== null &&\n                    this.props.loadingExams === false &&\n                    ActiveExamsFilter.length}\n                </span>\n              </div>\n              <div className=\"flex flex-col gap-2\">\n                {this.props.selectedPosition === null ||\n                this.props.selectedExams === null ||\n                this.props.loadingExams === true ? (\n                  <Loading />\n                ) : ActiveExamsFilter.length === 0 ? (\n                  <div className=\"border border-gray-200 text-gray-400 font-bold rounded-md px-3 py-3 text-center\">\n                    <div className=\"flex justify-center items-center w-full text-4xl\">\n                      <IoMdInformationCircleOutline />\n                    </div>\n                    <div className=\"text-gray-500\">No exams found!</div>\n                  </div>\n                ) : (\n                  ActiveExamsFilter.map((item, i) => (\n                    <div\n                      key={i + 1}\n                      className={`px-3 py-2 rounded group bg-white border-2 border-green-600 hover:bg-green-50`}\n                    >\n                      <div className=\"grid md:grid-cols-12 gap-2\">\n                        {/* First col */}\n                        <div className=\"col-span-12 md:col-span-6 lg:col-span-4 flex fex-row items-center gap-3\">\n                          {this.props.candidateExam.user_exams_done.find(\n                            (itm) => itm.course === item.course_id\n                          ) !== undefined &&\n                            this.props.candidateExam.user_exams_done.find(\n                              (itm) => itm.course === item.course_id\n                            )?.user_status === UserExamStatus.Editing && (\n                              <div className=\"flex flex-row gap-2 items-center\">\n                                <div\n                                  className={`text-green-600 flex flex-row items-center gap-2 text-right ml-2`}\n                                >\n                                  <HiInformationCircle className=\"text-4xl\" />\n                                </div>\n                              </div>\n                            )}\n                          {this.props.candidateExam.user_exams_done.find(\n                            (itm) => itm.course === item.course_id\n                          ) !== undefined &&\n                            this.props.candidateExam.user_exams_done.find(\n                              (itm) => itm.course === item.course_id\n                            )?.user_status === UserExamStatus.Done && (\n                              <div className=\"flex flex-row gap-2 items-center\">\n                                <div\n                                  className={`text-blue-600 flex flex-row items-center gap-2 text-right ml-2`}\n                                >\n                                  <MdCheckCircle className=\"text-4xl\" />\n                                </div>\n                              </div>\n                            )}\n                          {this.props.candidateExam.user_exams_done.find(\n                            (itm) => itm.course === item.course_id\n                          ) !== undefined &&\n                            this.props.candidateExam.user_exams_done.find(\n                              (itm) => itm.course === item.course_id\n                            )?.user_status === UserExamStatus.Removed && (\n                              <div className=\"flex flex-row gap-2 items-center\">\n                                <div\n                                  className={`text-yellow-800 flex flex-row items-center gap-2 text-right ml-2`}\n                                >\n                                  <MdCheckCircle className=\"text-4xl\" />\n                                </div>\n                              </div>\n                            )}\n                          {this.props.candidateExam.user_exams_done.find(\n                            (itm) => itm.course === item.course_id\n                          ) !== undefined &&\n                            this.props.candidateExam.user_exams_done.find(\n                              (itm) => itm.course === item.course_id\n                            )?.user_status === UserExamStatus.Paused && (\n                              <div className=\"flex flex-row gap-2 items-center\">\n                                <div\n                                  className={`text-green-500 flex flex-row items-center gap-2 text-right ml-2`}\n                                >\n                                  <MdPauseCircleFilled className=\"text-4xl\" />\n                                </div>\n                              </div>\n                            )}\n                          {this.props.candidateExam.user_exams_done.find(\n                            (itm) => itm.course === item.course_id\n                          ) === undefined &&\n                            this.props.findExam(item.course_id) !== null &&\n                            this.props.findExam(item.course_id)?.id !==\n                              undefined && (\n                              <div className=\"flex flex-row gap-2 items-center\">\n                                <div\n                                  className={`text-blue-600 flex flex-row items-center gap-2 text-right ml-2 animate-ping`}\n                                >\n                                  <HiInformationCircle className=\"text-4xl\" />\n                                </div>\n                              </div>\n                            )}\n                          {this.props.candidateExam.user_exams_done.find(\n                            (itm) => itm.course === item.course_id\n                          ) === undefined &&\n                            (this.props.findExam(item.course_id) === null ||\n                              this.props.findExam(item.course_id)?.id ===\n                                undefined) && (\n                              <div className=\"flex flex-row gap-2 items-center\">\n                                <div\n                                  className={`text-gray-300 group-hover:text-white flex flex-row items-center gap-2 text-right ml-2`}\n                                >\n                                  <RiCheckboxBlankCircleFill className=\"text-4xl\" />\n                                </div>\n                              </div>\n                            )}\n                          <div className=\"flex flex-col\">\n                            <div className={`font-bold text-gray-600 truncate`}>\n                              {item.course_name}\n                            </div>\n                            <div className=\"flex flex-row justify-start items-center gap-2\">\n                              <span className=\"text-gray-500 text-xs\">\n                                Exam date:{\" \"}\n                              </span>\n                              <div className=\"flex flex-row items-center gap-2\">\n                                <span className=\"font-bold text-green-600 text-sm\">\n                                  {DATE(\n                                    this.props.findExam(item.course_id)!\n                                      .exam_date,\n                                    \"DD/MM/YYYY\"\n                                  )}\n                                </span>\n                                <span\n                                  className={`bg-gray-100 text-green-600 font-bold px-2 py-1 rounded-full text-sm`}\n                                >\n                                  {\n                                    this.props.findExam(item.course_id)!\n                                      .start_time\n                                  }\n                                </span>\n                                <span\n                                  className={`bg-gray-100 text-gray-800 font-bold px-2 py-1 rounded-full text-sm underline`}\n                                >\n                                  {\n                                    this.props.candidateExam.user_exams_done.find(\n                                      (x) => x.course === item.course_id\n                                    )?.user_status\n                                  }\n                                </span>\n                              </div>\n                            </div>\n                          </div>\n                        </div>\n                        {/* Second col */}\n                        <div className=\"col-span-12 md:col-span-6 lg:col-span-4 flex flex-col items-start justify-center\">\n                          {this.props.selectedExams === null ? (\n                            \"\"\n                          ) : this.props.selectedExams.find(\n                              (itm) => itm.course_id === item.course_id\n                            ) !== undefined ? (\n                            <>\n                              <div className=\"flex flex-row justify-start items-center gap-2\">\n                                <span className=\"text-gray-500 text-xs\">\n                                  Proctoring type:{\" \"}\n                                </span>\n                                <span className=\"text-black font-bold text-sm bg-yellow-200 rounded-full px-2\">\n                                  {this.props.selectedExams === null\n                                    ? \"\"\n                                    : this.props.selectedExams.find(\n                                        (itm) =>\n                                          itm.course_id === item.course_id\n                                      ) !== undefined &&\n                                      this.props.selectedExams.find(\n                                        (itm) =>\n                                          itm.course_id === item.course_id\n                                      )?.proctoring_type}\n                                </span>\n                              </div>\n                              <div className=\"flex flex-col justify-center items-start gap-2\">\n                                {/* <span className=\"text-gray-500 text-xs\">\n                                  Exam location:{\" \"}\n                                </span> */}\n                                <span\n                                  className={`text-gray-700 font-bold text-sm`}\n                                >\n                                  Center:{\" \"}\n                                  {this.props.selectedExams === null ? (\n                                    \"\"\n                                  ) : this.props.selectedExams.find(\n                                      (itm) => itm.course_id === item.course_id\n                                    ) !== undefined ? (\n                                    this.props.selectedExams.find(\n                                      (itm) => itm.course_id === item.course_id\n                                    )?.center_name\n                                  ) : (\n                                    <span className=\"italic text-xs\">\n                                      No location selected\n                                    </span>\n                                  )}\n                                </span>\n                                <span\n                                  className={`text-gray-700 font-bold text-sm`}\n                                >\n                                  Room:{\" \"}\n                                  {this.props.selectedExams === null ? (\n                                    \"\"\n                                  ) : this.props.selectedExams.find(\n                                      (itm) => itm.course_id === item.course_id\n                                    ) !== undefined ? (\n                                    this.props.selectedExams.find(\n                                      (itm) => itm.course_id === item.course_id\n                                    )?.room_number === 0 ? (\n                                      <span className=\"bg-yellow-100 text-yellow-700 font-bold px-2 py-1 rounded\">\n                                        Waiting room, you are advised to choose\n                                        another center\n                                      </span>\n                                    ) : (\n                                      <span className=\"text-blue-600 bg-blue-100 px-2 py-1 rounded\">\n                                        No:{\" \"}\n                                        {\n                                          this.props.selectedExams.find(\n                                            (itm) =>\n                                              itm.course_id === item.course_id\n                                          )?.room_number\n                                        }\n                                      </span>\n                                    )\n                                  ) : (\n                                    <span className=\"italic text-xs\">\n                                      No location selected\n                                    </span>\n                                  )}\n                                </span>\n                              </div>\n                            </>\n                          ) : (\n                            <div className=\"flex flex-row gap-2 items-center justify-start\">\n                              <RiErrorWarningLine className=\"text-xl text-yellow-700\" />\n                              <span className=\"text-yellow-700 italic text-sm\">\n                                No location selected\n                              </span>\n                            </div>\n                          )}\n                        </div>\n                        {/* Third col */}\n                        <div className=\"col-span-12 md:col-span-12 lg:col-span-4 flex items-center justify-start lg:justify-end\">\n                          {this.props.selectedExams === null ? (\n                            \"\"\n                          ) : this.props.selectedExams.find(\n                              (itm) => itm.course_id === item.course_id\n                            ) !== undefined ? (\n                            <div className=\"flex flex-row justify-start md:justify-end items-center gap-2\">\n                              {this.props.loadingExams === true ||\n                              this.props.loadingExamsDone === true ? (\n                                <div className=\"text-gray-500 font-bold bg-gray-100 text-sm rounded px-3 py-2\">\n                                  Checking...\n                                </div>\n                              ) : (\n                                this.props.candidateExam.user_exams_done.find(\n                                  (itm) => itm.course === item.course_id\n                                ) === undefined && (\n                                  <div\n                                    onClick={() => {\n                                      this.setState({\n                                        selectedCourse: item,\n                                        centersModal: true,\n                                      });\n                                      this.props.setMaxExamModal(true);\n                                    }}\n                                    className=\"btn text-blue-600 border border-white cursor-pointer group-hover:bg-blue-600 hover:bg-blue-800 group-hover:text-white bg-blue-100 text-sm w-40 text-center\"\n                                  >\n                                    Change location\n                                  </div>\n                                )\n                              )}\n                              {this.props.loadingExams === true ||\n                              this.props.loadingExamsDone === true ? (\n                                <div className=\"text-gray-500 font-bold bg-gray-100 text-sm rounded px-3 py-2\">\n                                  Checking...\n                                </div>\n                              ) : (\n                                this.props.periods.selected_period !== null &&\n                                this.props.periods.selected_period.is_active ===\n                                  true &&\n                                this.props.findExam(item.course_id) !== null &&\n                                this.props.findExam(item.course_id)?.id !==\n                                  undefined &&\n                                this.props.selectedApplicationDetails\n                                  .application_status ===\n                                  ApplicationStates.Shortlisted && (\n                                  <div\n                                    onClick={() => {\n                                      if (\n                                        this.props.selectedPosition !== null\n                                      ) {\n                                        if (\n                                          this.props.positions\n                                            .selected_position === null ||\n                                          this.props.positions.selected_position\n                                            .position_id !==\n                                            this.props.selectedPosition\n                                              .position_id\n                                        ) {\n                                          this.props.setSelectedPosition(\n                                            this.props.selectedPosition\n                                          );\n                                        }\n                                        this.props.selectedExams !== null &&\n                                          this.props.course.courses &&\n                                          this.props.setSelectedCourse(\n                                            this.props.course.courses.find(\n                                              (itm) =>\n                                                itm.course_id === item.course_id\n                                            )!\n                                          );\n                                        this.props.selectedExams !== null &&\n                                          this.props.findExam(\n                                            item.course_id\n                                          ) !== null &&\n                                          this.props.setSelectedCandidateExam(\n                                            this.props.findExam(item.course_id)\n                                          );\n                                        this.props.setDoingExam(true);\n                                        this.props.selectedExams &&\n                                          this.props.InitializeExamDetails(\n                                            this.props\n                                              .selectedApplicationDetails\n                                              .application_session\n                                              .session_plan_id,\n                                            item.course_id,\n                                            this.props.selectedExams.find(\n                                              (itm) =>\n                                                itm.course_id === item.course_id\n                                            )!.district_id,\n                                            this.props.selectedExams.find(\n                                              (itm) =>\n                                                itm.course_id === item.course_id\n                                            )!.center_id,\n                                            this.props.selectedExams.find(\n                                              (itm) =>\n                                                itm.course_id === item.course_id\n                                            )!.room_id,\n                                            this.props.selectedPosition,\n                                            true,\n                                            this.props.setLoadingExams\n                                          );\n                                      }\n                                    }}\n                                    className={`btn border border-green-500 bg-green-600 hover:text-green-600 text-white cursor-pointer hover:bg-white text-sm w-max text-center`}\n                                  >\n                                    Back to exam\n                                  </div>\n                                )\n                              )}\n                            </div>\n                          ) : (\n                            <div className=\"flex flex-row justify-start md:justify-end items-center gap-2\">\n                              {this.props.candidateExam.user_exams_done.find(\n                                (itm) => itm.course === item.course_id\n                              ) === undefined && (\n                                <div\n                                  onClick={() =>\n                                    this.setState({\n                                      selectedCourse: item,\n                                      centersModal: true,\n                                    })\n                                  }\n                                  className=\"btn cursor-pointer bg-yellow-700 hover:bg-yellow-50 border border-yellow-700 hover:text-yellow-700 text-white text-sm w-36 text-center\"\n                                >\n                                  Choose location\n                                </div>\n                              )}\n                            </div>\n                          )}\n                        </div>\n                      </div>\n                    </div>\n                  ))\n                )}\n              </div>\n            </div>\n          </div>\n        ) : (\n          <div></div>\n        )}\n      </>\n    );\n  }\n}\n\nexport default ActiveExams;\n","import React, { Component } from \"react\";\nimport { HiInformationCircle } from \"react-icons/hi\";\nimport { IoMdInformationCircleOutline } from \"react-icons/io\";\nimport { MdCheckCircle, MdPauseCircleFilled } from \"react-icons/md\";\nimport { RiCheckboxBlankCircleFill, RiErrorWarningLine } from \"react-icons/ri\";\nimport { applicationPeriodsStoreInterface } from \"../../../actions/application_periods\";\nimport {\n  candidateExamStoreInterface,\n  InitialExamDetails,\n} from \"../../../actions/candidate_exam\";\nimport { courseStoreInterface } from \"../../../actions/course\";\nimport { positionsStoreInterface } from \"../../../actions/positions\";\nimport Loading from \"../../../components/Loading/Loading\";\nimport { applicationExamAPI } from \"../../../interfaces/application\";\nimport { course } from \"../../../interfaces/course\";\nimport { ExamAnswerSheetDone, UserExamStatus } from \"../../../interfaces/exam\";\nimport { PositionAPI, PositionAPICourse } from \"../../../interfaces/position\";\nimport { DATE } from \"../../../utils/functions\";\nimport { ExamTimeStatus, validateExamDate } from \"../../../utils/question_bank\";\nimport { ExamDoneDetailsAnswers } from \"../../CandidateExams/CandidateExams\";\n\ninterface ExamsDoneProps {\n  selectedPosition: PositionAPI;\n  selectedExams: applicationExamAPI[] | null;\n  findExam: (courseId: string) => InitialExamDetails | null;\n  loadingExams: boolean;\n  loadingExamsDone: boolean;\n  setMaxExamModal: (status: boolean) => void;\n  course: courseStoreInterface;\n  setSelectedCourse: (course: course | null) => void;\n  candidateExam: candidateExamStoreInterface;\n  positions: positionsStoreInterface;\n  periods: applicationPeriodsStoreInterface;\n  setSelectedPosition: (position: PositionAPI) => void;\n  setSelectedCandidateExam: (selected_exam: InitialExamDetails | null) => void;\n  viewMarksDetails: (selectedExamDetails: ExamDoneDetailsAnswers) => void;\n}\ninterface ExamsDoneState {\n  loading: boolean;\n  selectedCourse: PositionAPICourse | null;\n  centersModal: boolean;\n}\n\nexport class ExamsDone extends Component<ExamsDoneProps, ExamsDoneState> {\n  constructor(props: ExamsDoneProps) {\n    super(props);\n\n    this.state = {\n      loading: false,\n      centersModal: false,\n      selectedCourse: null,\n    };\n  }\n  viewMarksDetailsFn = (Exam: ExamAnswerSheetDone) => {\n    const examTest = this.props.candidateExam.user_exams_temp.find(\n      (itm) => itm.course === Exam.course && itm.period === Exam.period\n    );\n    if (examTest !== undefined) {\n      let courseSelected = this.props.selectedPosition.courses.find(\n        (itm) => itm.course_id === examTest.course\n      );\n      if (courseSelected !== undefined) {\n        this.props.viewMarksDetails({\n          course: examTest.course,\n          course_name: courseSelected.course_name,\n          discription: examTest.discription,\n          termes: examTest.termes,\n          rules: examTest.rules,\n          period: Exam.period,\n          exam_date: Exam.exam_date,\n          exam_id: Exam.exam_paper,\n        });\n      }\n    }\n  };\n  render() {\n    let ExamsDoneFilter = this.props.selectedPosition.courses.filter(\n      (itm) =>\n        this.props.findExam(itm.course_id) !== null &&\n        this.props.candidateExam.user_exams_done.filter(\n          (ex) =>\n            ex.course === itm.course_id &&\n            (ex.user_status === UserExamStatus.Done ||\n              ex.user_status === UserExamStatus.Removed ||\n              validateExamDate(\n                ex.exam_date,\n                ex.exam_start_time,\n                ex.exam_end_time\n              ) === ExamTimeStatus.Expired)\n        ).length > 0\n    );\n    // console.log(\"Done ex: \", ExamsDoneFilter);\n    return (\n      <div className=\"bg-white px-2 py-2\">\n        <div className=\"bg-gray-100 rounded px-2 py-2\">\n          <div className=\"flex flex-row items-center justify-between text-xl mb-3 mx-2\">\n            <span className=\"font-bold \">Completed exams</span>\n            <span className=\"font-bold bg-white text-gray-600 rounded-full px-2 text-base border border-gray-200\">\n              {this.props.selectedPosition !== null &&\n                this.props.selectedExams !== null &&\n                this.props.loadingExams === false &&\n                ExamsDoneFilter.length}\n            </span>\n          </div>\n          <div className=\"flex flex-col gap-2\">\n            {this.props.selectedPosition === null ||\n            this.props.selectedExams === null ||\n            this.props.loadingExams === true ? (\n              <Loading />\n            ) : ExamsDoneFilter.length === 0 ? (\n              <div className=\"border border-gray-200 text-gray-400 font-bold rounded-md px-3 py-3 text-center\">\n                <div className=\"flex justify-center items-center w-full text-4xl\">\n                  <IoMdInformationCircleOutline />\n                </div>\n                <div className=\"text-gray-500\">No exams found!</div>\n              </div>\n            ) : (\n              ExamsDoneFilter.map((item, i) => (\n                <div key={i + 1} className={`px-3 py-2 rounded group bg-white`}>\n                  <div className=\"grid md:grid-cols-12 gap-2\">\n                    {/* First col */}\n                    <div className=\"col-span-12 md:col-span-6 lg:col-span-4 flex fex-row items-center gap-3\">\n                      {this.props.candidateExam.user_exams_done.find(\n                        (itm) => itm.course === item.course_id\n                      ) !== undefined &&\n                        this.props.candidateExam.user_exams_done.find(\n                          (itm) => itm.course === item.course_id\n                        )?.user_status === UserExamStatus.Editing && (\n                          <div className=\"flex flex-row gap-2 items-center\">\n                            <div\n                              className={`text-gray-300 flex flex-row items-center gap-2 text-right ml-2`}\n                            >\n                              <HiInformationCircle className=\"text-4xl\" />\n                            </div>\n                          </div>\n                        )}\n                      {this.props.candidateExam.user_exams_done.find(\n                        (itm) => itm.course === item.course_id\n                      ) !== undefined &&\n                        this.props.candidateExam.user_exams_done.find(\n                          (itm) => itm.course === item.course_id\n                        )?.user_status === UserExamStatus.Done && (\n                          <div className=\"flex flex-row gap-2 items-center\">\n                            <div\n                              className={`text-blue-600 flex flex-row items-center gap-2 text-right ml-2`}\n                            >\n                              <MdCheckCircle className=\"text-4xl\" />\n                            </div>\n                          </div>\n                        )}\n                      {this.props.candidateExam.user_exams_done.find(\n                        (itm) => itm.course === item.course_id\n                      ) !== undefined &&\n                        this.props.candidateExam.user_exams_done.find(\n                          (itm) => itm.course === item.course_id\n                        )?.user_status === UserExamStatus.Removed && (\n                          <div className=\"flex flex-row gap-2 items-center\">\n                            <div\n                              className={`text-gray-300 flex flex-row items-center gap-2 text-right ml-2`}\n                            >\n                              <MdCheckCircle className=\"text-4xl\" />\n                            </div>\n                          </div>\n                        )}\n                      {this.props.candidateExam.user_exams_done.find(\n                        (itm) => itm.course === item.course_id\n                      ) !== undefined &&\n                        this.props.candidateExam.user_exams_done.find(\n                          (itm) => itm.course === item.course_id\n                        )?.user_status === UserExamStatus.Paused && (\n                          <div className=\"flex flex-row gap-2 items-center\">\n                            <div\n                              className={`text-gray-300 flex flex-row items-center gap-2 text-right ml-2`}\n                            >\n                              <MdPauseCircleFilled className=\"text-4xl\" />\n                            </div>\n                          </div>\n                        )}\n                      {this.props.candidateExam.user_exams_done.find(\n                        (itm) => itm.course === item.course_id\n                      ) === undefined &&\n                        this.props.findExam(item.course_id) !== null &&\n                        this.props.findExam(item.course_id)?.id !==\n                          undefined && (\n                          <div className=\"flex flex-row gap-2 items-center\">\n                            <div\n                              className={`text-blue-600 flex flex-row items-center gap-2 text-right ml-2 animate-ping`}\n                            >\n                              <HiInformationCircle className=\"text-4xl\" />\n                            </div>\n                          </div>\n                        )}\n                      {this.props.candidateExam.user_exams_done.find(\n                        (itm) => itm.course === item.course_id\n                      ) === undefined &&\n                        (this.props.findExam(item.course_id) === null ||\n                          this.props.findExam(item.course_id)?.id ===\n                            undefined) && (\n                          <div className=\"flex flex-row gap-2 items-center\">\n                            <div\n                              className={`text-gray-300 group-hover:text-white flex flex-row items-center gap-2 text-right ml-2`}\n                            >\n                              <RiCheckboxBlankCircleFill className=\"text-4xl\" />\n                            </div>\n                          </div>\n                        )}\n                      <div className=\"flex flex-col\">\n                        <div className={`font-bold text-gray-600 truncate`}>\n                          {item.course_name}\n                        </div>\n                        <div className=\"flex flex-row justify-start items-center gap-2\">\n                          <span className=\"text-gray-500 text-xs\">\n                            Exam date:{\" \"}\n                          </span>\n                          <div className=\"flex flex-row items-center gap-2\">\n                            <span className=\"font-bold text-gray-800 text-sm\">\n                              {DATE(\n                                this.props.findExam(item.course_id)!.exam_date,\n                                \"DD/MM/YYYY\"\n                              )}\n                            </span>\n                            <span\n                              className={`bg-gray-100 text-gray-800 font-bold px-2 py-1 rounded-full text-sm`}\n                            >\n                              {this.props.findExam(item.course_id)!.start_time}\n                            </span>\n                            <span\n                              className={`bg-gray-100 text-gray-800 font-bold px-2 py-1 rounded-full text-sm underline`}\n                            >\n                              {this.props.candidateExam.user_exams_done.find(\n                                (x) => x.course === item.course_id\n                              ) !== undefined\n                                ? validateExamDate(\n                                    this.props.candidateExam.user_exams_done.find(\n                                      (x) => x.course === item.course_id\n                                    )!.exam_date,\n                                    this.props.candidateExam.user_exams_done.find(\n                                      (x) => x.course === item.course_id\n                                    )!.exam_start_time,\n                                    this.props.candidateExam.user_exams_done.find(\n                                      (x) => x.course === item.course_id\n                                    )!.exam_end_time\n                                  ) === ExamTimeStatus.Expired &&\n                                  (this.props.candidateExam.user_exams_done.find(\n                                    (x) => x.course === item.course_id\n                                  )?.user_status === UserExamStatus.Editing\n                                    ? \"Not submitted\"\n                                    : this.props.candidateExam.user_exams_done.find(\n                                        (x) => x.course === item.course_id\n                                      )?.user_status === UserExamStatus.Paused)\n                                  ? \"Paused\"\n                                  : this.props.candidateExam.user_exams_done.find(\n                                      (x) => x.course === item.course_id\n                                    )?.user_status\n                                : \"\"}\n                            </span>\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                    {/* Second col */}\n                    <div className=\"col-span-12 md:col-span-6 lg:col-span-4 flex flex-col items-start justify-center\">\n                      {this.props.selectedExams === null ? (\n                        \"\"\n                      ) : this.props.selectedExams.find(\n                          (itm) => itm.course_id === item.course_id\n                        ) !== undefined ? (\n                        <>\n                          <div className=\"flex flex-row justify-start items-center gap-2\">\n                            <span className=\"text-gray-500 text-xs\">\n                              Proctoring type:{\" \"}\n                            </span>\n                            <span className=\"text-black font-bold text-sm bg-yellow-200 rounded-full px-2\">\n                              {this.props.selectedExams === null\n                                ? \"\"\n                                : this.props.selectedExams.find(\n                                    (itm) => itm.course_id === item.course_id\n                                  ) !== undefined &&\n                                  this.props.selectedExams.find(\n                                    (itm) => itm.course_id === item.course_id\n                                  )?.proctoring_type}\n                            </span>\n                          </div>\n                          <div className=\"flex flex-col justify-center items-start gap-2\">\n                            {/* <span className=\"text-gray-500 text-xs\">\n                              Exam location:{\" \"}\n                            </span> */}\n                            <span className={`text-gray-700 font-bold text-sm`}>\n                              Center:{\" \"}\n                              {this.props.selectedExams === null ? (\n                                \"\"\n                              ) : this.props.selectedExams.find(\n                                  (itm) => itm.course_id === item.course_id\n                                ) !== undefined ? (\n                                this.props.selectedExams.find(\n                                  (itm) => itm.course_id === item.course_id\n                                )?.center_name\n                              ) : (\n                                <span className=\"italic text-xs\">\n                                  No location selected\n                                </span>\n                              )}\n                            </span>\n                            <span className={`text-gray-700 font-bold text-sm`}>\n                              Room:{\" \"}\n                              {this.props.selectedExams === null ? (\n                                \"\"\n                              ) : this.props.selectedExams.find(\n                                  (itm) => itm.course_id === item.course_id\n                                ) !== undefined ? (\n                                this.props.selectedExams.find(\n                                  (itm) => itm.course_id === item.course_id\n                                )?.room_number === 0 ? (\n                                  <span className=\"bg-yellow-100 text-yellow-700 font-bold px-2 py-1 rounded\">\n                                    Waiting room, you are advised to choose\n                                    another center\n                                  </span>\n                                ) : (\n                                  <span className=\"text-blue-600 bg-blue-100 px-2 py-1 rounded\">\n                                    No:{\" \"}\n                                    {\n                                      this.props.selectedExams.find(\n                                        (itm) =>\n                                          itm.course_id === item.course_id\n                                      )?.room_number\n                                    }\n                                  </span>\n                                )\n                              ) : (\n                                <span className=\"italic text-xs\">\n                                  No location selected\n                                </span>\n                              )}\n                            </span>\n                          </div>\n                        </>\n                      ) : (\n                        <div className=\"flex flex-row gap-2 items-center justify-start\">\n                          <RiErrorWarningLine className=\"text-xl text-yellow-700\" />\n                          <span className=\"text-yellow-700 italic text-sm\">\n                            No location selected\n                          </span>\n                        </div>\n                      )}\n                    </div>\n                    {/* Third col */}\n                    <div className=\"col-span-12 md:col-span-12 lg:col-span-4 items-center justify-start lg:justify-end\">\n                      {this.props.selectedExams === null ? (\n                        \"\"\n                      ) : this.props.selectedExams.find(\n                          (itm) => itm.course_id === item.course_id\n                        ) !== undefined ? (\n                        <div className=\"flex flex-row justify-start md:justify-end items-center gap-2\">\n                          {this.props.loadingExams === true ||\n                          this.props.loadingExamsDone === true ? (\n                            <div className=\"text-gray-500 font-bold bg-gray-100 text-sm rounded px-3 py-2\">\n                              Checking...\n                            </div>\n                          ) : (\n                            this.props.candidateExam.user_exams_done.find(\n                              (itm) => itm.course === item.course_id\n                            ) === undefined && (\n                              <div\n                                onClick={() => {\n                                  this.setState({\n                                    selectedCourse: item,\n                                    centersModal: true,\n                                  });\n                                  this.props.setMaxExamModal(true);\n                                }}\n                                className=\"btn text-blue-600 border border-white cursor-pointer group-hover:bg-blue-600 hover:bg-blue-800 group-hover:text-white bg-blue-100 text-sm w-40 text-center\"\n                              >\n                                Change location\n                              </div>\n                            )\n                          )}\n                        </div>\n                      ) : (\n                        <div className=\"flex flex-row justify-start md:justify-end items-center gap-2\">\n                          {this.props.candidateExam.user_exams_done.find(\n                            (itm) => itm.course === item.course_id\n                          ) === undefined && (\n                            <div\n                              onClick={() =>\n                                this.setState({\n                                  selectedCourse: item,\n                                  centersModal: true,\n                                })\n                              }\n                              className=\"btn cursor-pointer bg-yellow-700 hover:bg-yellow-50 border border-yellow-700 hover:text-yellow-700 text-white text-sm w-36 text-center\"\n                            >\n                              Choose location\n                            </div>\n                          )}\n                        </div>\n                      )}\n                      {this.props.candidateExam.user_exams_done.find(\n                        (itm) => itm.course === item.course_id\n                      ) !== undefined && (\n                        // this.props.candidateExam.user_exams_done.find(\n                        //   (itm) => itm.course === item.course_id\n                        // )?.user_status !== UserExamStatus.Editing &&\n                        <div className=\"flex flex-row gap-2 items-center justify-end h-full\">\n                          <div\n                            className={`text-blue-600 flex flex-row items-center gap-2 text-right ml-2`}\n                          >\n                            <div className=\"flex flex-col gap-0\">\n                              <span className=\"text-sm\">Marks</span>\n                              <span className=\"text-lg font-bold -mt-1\">\n                                {this.props.candidateExam.user_exams_done\n                                  .find((itm) => itm.course === item.course_id)\n                                  ?.total_marks.toFixed(2)}\n                                %\n                              </span>\n                            </div>\n                            <div\n                              onClick={() =>\n                                this.viewMarksDetailsFn(\n                                  this.props.candidateExam.user_exams_done.find(\n                                    (itm) => itm.course === item.course_id\n                                  )!\n                                )\n                              }\n                              className=\"btn bg-blue-100 hover:bg-blue-200 cursor-pointer text-blue-700 hover:text-blue-900\"\n                            >\n                              Details\n                            </div>\n                          </div>\n                        </div>\n                      )}\n                    </div>\n                  </div>\n                </div>\n              ))\n            )}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default ExamsDone;\n","import React, { Component } from \"react\";\n\nimport { Fragment } from \"react\";\nimport { MdClose, MdHistory } from \"react-icons/md\";\nimport { Link, Redirect } from \"react-router-dom\";\nimport ChooseExamCenter, {\n  LocationTableInterface,\n} from \"../Application/ExamCenter/ChooseExamCenter\";\nimport { connect } from \"react-redux\";\nimport {\n  Auth,\n  loadExam,\n  examDataInterface,\n  PrepareExamsStoreInterface,\n  loadExamsList,\n  LocationsDataStoreInterface,\n  loadAllLocationsData,\n  setSelectedLocationData,\n  applicationPeriodsStoreInterface,\n  loadApplicationPeriods,\n  candidateExamStoreInterface,\n  setSelectedCandidateExam,\n  courseStoreInterface,\n  loadCourses,\n  setSelectedCourse,\n  InitializeExamDetails,\n  InitialExamDetails,\n  setSelectedPeriod,\n  setSelectedPosition,\n  positionsStoreInterface,\n  loadExamsDone,\n} from \"../../actions\";\nimport { StoreState } from \"../../reducers\";\nimport Loading from \"../../components/Loading/Loading\";\nimport {\n  ExamInterface,\n  examStatus,\n  UserExamStatus,\n} from \"../../interfaces/exam\";\nimport {\n  CandidateClaimInterface,\n  course,\n  PlansTypeKeys,\n  PositionAPI,\n  PositionAPICourse,\n} from \"../../interfaces/index\";\nimport {\n  applicationExamAPI,\n  applicationHistory,\n  ApplicationPeriodGet,\n  ApplicationStates,\n  ApplicationStatesDescription,\n  GetApplicationsAPI,\n} from \"../../interfaces/application\";\nimport { sentExamInterface } from \"../Application/ExamCenter/ExamCenter\";\nimport { BsFileEarmarkText } from \"react-icons/bs\";\nimport { IoMdTrash } from \"react-icons/io\";\nimport ApplicationHistory from \"./ApplicationHistory/ApplicationHistory\";\nimport ExamDetails from \"./ExamDetails/ExamDetails\";\nimport { CheckIfExamDone, findTotalMarks } from \"../../utils/question_bank\";\nimport PreparedExams from \"./ExamStatus/PreparedExams\";\nimport ActiveExams from \"./ExamStatus/ActiveExams\";\nimport ExamsDone from \"./ExamStatus/ExamsDone\";\nimport { IoHandLeftSharp } from \"react-icons/io5\";\nimport { isClaimAllowed } from \"../Claimings/Candidate/ClaimForm\";\nimport ClaimFormComponent from \"../../components/ClaimForm/ClaimFormComponent\";\nimport { ClaimingReducerType } from \"../../reducers/claiming\";\nimport { getMyClaims } from \"../../actions/claiming\";\nimport { ExamDoneDetailsAnswers } from \"../CandidateExams/CandidateExams\";\nimport CandidateAnswersDetails from \"../../components/AnswersDetails/CandidateAnswersDetails\";\nimport { RoomType } from \"../../interfaces/location\";\n\ninterface PostExamsProps {\n  doExam: examDataInterface;\n  auth: Auth;\n  loadExam: (user_id: string, exam: ExamInterface) => void;\n  selectedPosition: PositionAPI;\n  selectedExams: applicationExamAPI[] | null;\n  selected_application: string | null;\n  updateLocation: (application_id: string, exams: sentExamInterface[]) => void;\n  changeLocationError: string | null;\n  loading: boolean;\n  incrementIncomplete: () => void;\n  applicationHistory: applicationHistory[] | undefined;\n  deleteApplication: (id: string) => void;\n  selectedApplicationDetails: GetApplicationsAPI | null;\n  locationsData: LocationsDataStoreInterface;\n  loadAllLocationsData: (callback: (loading: boolean) => void) => void;\n  setSelectedLocationData: (locationData: LocationTableInterface) => void;\n  periods: applicationPeriodsStoreInterface;\n  loadApplicationPeriods: (callback: (loading: boolean) => void) => void;\n  candidateExam: candidateExamStoreInterface;\n  setSelectedCandidateExam: (selected_exam: InitialExamDetails | null) => void;\n  course: courseStoreInterface;\n  loadCourses: (callback: (loading: boolean) => void) => void;\n  setSelectedCourse: (course: course | null) => void;\n  InitializeExamDetails: (\n    periodId: string,\n    courseId: string,\n    district_id: string,\n    center_id: string,\n    room_id: string,\n    position: PositionAPI,\n    start_exam: boolean,\n    callback: (loading: boolean) => void\n  ) => void;\n  setSelectedPeriod: (period: ApplicationPeriodGet) => void;\n  positions: positionsStoreInterface;\n  setSelectedPosition: (position: PositionAPI) => void;\n  loadExamsDone: (\n    periodId: string,\n    userId: string,\n    callback: (loading: boolean) => void\n  ) => void;\n  setMaxExamModal: (status: boolean) => void;\n  setDisplayDetailsModal: (status: boolean) => void;\n  claiming: ClaimingReducerType;\n  getMyClaims: Function;\n  setDoingExam: (status: boolean) => void;\n  doing_exam: boolean;\n}\ninterface PostExamsState {\n  appointmentDetailsModal: {\n    status: boolean;\n    item: InitialExamDetails | null;\n  };\n  redirect: boolean;\n  displayResults: boolean;\n  changeLocation: {\n    status: boolean;\n    location: ExamInterface | null;\n  };\n  centersModal: boolean;\n  selectedCourse: course | null;\n  selectedLocation: applicationExamAPI | null;\n  applicationHistoryState: boolean;\n  loading: boolean;\n  loadingExams: boolean;\n  loadingExamsDone: boolean;\n  claim: boolean;\n  selectedExamDetails: ExamDoneDetailsAnswers | null;\n}\n\nclass _PostExams extends Component<PostExamsProps, PostExamsState> {\n  constructor(props: PostExamsProps) {\n    super(props);\n\n    this.state = {\n      appointmentDetailsModal: {\n        status: false,\n        item: null,\n      },\n      redirect: false,\n      displayResults: false,\n      changeLocation: {\n        status: false,\n        location: null,\n      },\n      centersModal: false,\n      selectedCourse: null,\n      selectedLocation: null,\n      applicationHistoryState: false,\n      loading: false,\n      loadingExams: false,\n      loadingExamsDone: true,\n      claim: false,\n      selectedExamDetails: null,\n    };\n  }\n\n  renderExam = (user_id: string, exam: ExamInterface) => {\n    exam.status = examStatus.Editing;\n    this.props.loadExam(user_id, exam);\n    this.setState({ redirect: true });\n  };\n\n  setClaim = (status: boolean) => {\n    this.setState({ claim: status });\n  };\n\n  closeModal = () => {\n    this.setState({ centersModal: false });\n    this.props.setMaxExamModal(false);\n  };\n\n  updateLocationFunction = (exams: sentExamInterface[]) => {\n    if (this.props.selected_application !== null) {\n      this.props.updateLocation(this.props.selected_application, exams);\n    }\n  };\n\n  setLoading = (status: boolean) => {\n    this.setState({ loading: status });\n  };\n  setLoadingExams = (status: boolean) => {\n    this.setState({ loadingExams: status });\n  };\n  setLoadingExamsDone = (status: boolean) => {\n    this.setState({ loadingExamsDone: status });\n  };\n\n  showTotalMarks = (position: PositionAPI): boolean => {\n    for (let item of position.courses) {\n      let test = this.props.candidateExam.user_exams_done.find(\n        (itm) => itm.course === item.course_id\n      );\n      if (test !== undefined) {\n        if (\n          test.user_status === UserExamStatus.Paused ||\n          test.user_status === UserExamStatus.Editing\n        ) {\n          return false;\n        }\n      }\n    }\n    return true;\n  };\n\n  numberOfIncomplete = (\n    exams: sentExamInterface[],\n    courses: {\n      course_name: string;\n      course_code: string;\n      description: string;\n      school_levels: string[];\n      course_id: string;\n    }[]\n  ) => {\n    let count: number = 0;\n    for (let i in courses) {\n      if (\n        exams.filter((item) => item.course_id === courses[i].course_id)\n          .length === 0\n      ) {\n        count = count + 1;\n      }\n    }\n    return count;\n  };\n\n  findLocation = (\n    course_id: string,\n    course_name: string,\n    course_code: string,\n    location: LocationTableInterface,\n    exam_id: string\n  ) => {\n    return this.updateLocationFunction([\n      {\n        course_id: course_id,\n        proctoring_type:\n          location.rooms.find((itm) => itm.room_type === RoomType.Virtual) !==\n          undefined\n            ? RoomType.Virtual\n            : RoomType.Physical,\n        center_id: location.center_id,\n        district_id: location.district_id,\n      },\n    ]);\n  };\n\n  findExam = (courseId: string) => {\n    if (this.props.candidateExam.user_exams_temp !== null) {\n      let current_temp = this.props.candidateExam.user_exams_temp.find(\n        (itm) => itm.course === courseId\n      );\n      let testDone = this.props.candidateExam.user_exams_done.find(\n        (itm) => itm.course === courseId\n      );\n      if (\n        current_temp !== undefined &&\n        (testDone === undefined ||\n          testDone.user_status === UserExamStatus.Editing ||\n          testDone.user_status === UserExamStatus.Paused ||\n          testDone.user_status === UserExamStatus.Done ||\n          testDone.user_status === UserExamStatus.Removed)\n      ) {\n        return current_temp;\n      }\n    }\n    return null;\n  };\n\n  findCourse = (course_id: string): applicationExamAPI | null => {\n    if (this.props.selectedExams !== null) {\n      let x: applicationExamAPI | null | undefined =\n        this.props.selectedExams.find(\n          (itm) =>\n            this.state.appointmentDetailsModal && itm.course_id === course_id\n        );\n      if (x !== undefined && x !== null) {\n        return x;\n      }\n    }\n    return null;\n  };\n\n  pendingCourses = () => {\n    let count = 0;\n    for (let course of this.props.selectedPosition.courses) {\n      if (this.props.candidateExam.user_exams_temp !== null) {\n        // let current_temp = this.props.candidateExam.user_exams_temp.find(itm => itm.course === course.course_id);\n        let testDone = this.props.candidateExam.user_exams_done.find(\n          (itm) => itm.course === course.course_id\n        );\n        if (testDone === undefined) {\n          count = count + 1;\n        }\n      }\n    }\n    return count;\n  };\n\n  changeLocation = (item: PositionAPICourse) => {\n    this.setState({ selectedCourse: item, centersModal: true });\n    this.props.setMaxExamModal(true);\n  };\n\n  InitializationFn = () => {\n    if (\n      this.props.periods.selected_period !== null &&\n      this.props.selectedPosition !== null\n    ) {\n      this.props.loadExamsDone(\n        this.props.periods.selected_period.session_plan_id,\n        this.props.auth.user.user_id,\n        this.setLoadingExamsDone\n      );\n      // if (this.state.loadingExamsDone === false) {\n      for (let course of this.props.selectedPosition.courses) {\n        let testDone = this.props.candidateExam.user_exams_temp.find(\n          (itm) => itm.course === course.course_id\n        );\n        if (testDone === undefined) {\n          let center_id = this.props.selectedExams?.find(\n            (itm) => itm.course_id === course.course_id\n          );\n          if (center_id !== undefined) {\n            this.props.setSelectedCourse(course);\n            return this.props.InitializeExamDetails(\n              this.props.periods.selected_period.session_plan_id,\n              course.course_id,\n              center_id.district_id,\n              center_id.center_id,\n              center_id.room_id,\n              this.props.selectedPosition,\n              false,\n              this.setLoadingExams\n            );\n          }\n        }\n      }\n      // }\n    }\n  };\n\n  componentDidMount = () => {\n    this.props.loadApplicationPeriods(this.setLoading);\n    if (\n      this.props.course.courses === null ||\n      this.props.course.courses.length === 0\n    ) {\n      this.props.loadCourses(this.setLoading);\n    }\n    this.InitializationFn();\n    if (this.props.doExam.exam_answers) {\n      if (this.props.doExam.exam_answers.status === examStatus.Editing) {\n        this.setState({ redirect: true });\n      }\n    }\n    if (\n      this.props.claiming.myClaims === null &&\n      this.props.periods.selected_period !== null\n    ) {\n      this.props.getMyClaims(\n        this.props.auth.user.user_id,\n        this.props.periods.selected_period.session_plan_id,\n        (status: boolean, msg: string, data?: CandidateClaimInterface[]) => {\n          this.setState({ loading: status });\n          if (msg !== \"\") {\n            alert(msg);\n          }\n        }\n      );\n    }\n  };\n\n  render() {\n    if (\n      this.props.candidateExam.selected_exam_id !== null &&\n      this.props.candidateExam.selected_exam_details !== null &&\n      (this.props.candidateExam.doing_exam === true ||\n        this.props.doing_exam === true)\n    ) {\n      return <Redirect to=\"/do-exam\" />;\n    }\n    if (\n      this.state.redirect === true &&\n      (this.props.candidateExam.doing_exam === true ||\n        this.props.doing_exam === true)\n    ) {\n      return <Redirect to=\"/do-exam\" />;\n    }\n    if (\n      this.props.loading === true ||\n      this.state.loadingExams === true ||\n      this.state.loadingExamsDone === true\n    ) {\n      return (\n        <div className=\"bg-white border my-4 mx-4 rounded px-4 py-4 flex flex-col\">\n          <span className=\"mx-4 animate-pulse\">Loading, Please wait...</span>\n          <Loading />\n        </div>\n      );\n    }\n    return this.props.selectedExams === null ? (\n      \"No result found!\"\n    ) : (\n      <Fragment>\n        {this.state.selectedExamDetails !== null ? (\n          <>\n            <div className=\"animate__animated animate__fadeInUp animate__faster mt-2 mx-2 rounded-t-md border border-blue-300\">\n              <div className=\"flex flex-row gap-4 items-center justify-between bg-blue-100 py-2 px-2 mb-2\">\n                <div className=\"flex flex-col w-full\">\n                  <div className=\"flex flex-row gap-2 items-center justify-between w-full pl-2\">\n                    <span className=\"font-bold text-xl text-gray-800\">\n                      Exam answers details\n                    </span>\n                    <div className=\"bg-white hover:text-yellow-700 hover:bg-white rounded-full p-1 h-10 w-10 border-2 border-white hover:border-yellow-600 flex items-center justify-center\">\n                      <MdClose\n                        className=\"cursor-pointer font-extrabold text-3xl\"\n                        onClick={() => {\n                          this.setState({\n                            selectedExamDetails: null,\n                          });\n                        }}\n                      />\n                    </div>\n                  </div>\n                </div>\n              </div>\n              <CandidateAnswersDetails\n                exam_id={this.state.selectedExamDetails}\n                showAnswers={false}\n              />\n            </div>\n          </>\n        ) : this.state.appointmentDetailsModal.status === true &&\n          this.state.appointmentDetailsModal.item !== null ? (\n          <>\n            <div className=\"animate__animated animate__fadeInUp animate__faster mt-2 mx-2 rounded-t-md border border-blue-300\">\n              <div className=\"flex flex-row gap-4 items-center justify-between bg-blue-100 py-2 px-2 mb-2\">\n                <div className=\"flex flex-row gap-2 items-center justify-between w-full pl-2\">\n                  <span className=\"font-bold text-xl text-gray-800\">\n                    Exam:{\" \"}\n                    {this.state.appointmentDetailsModal.item !== null && (\n                      <>\n                        {\n                          this.findCourse(\n                            this.state.appointmentDetailsModal.item!.course\n                          )?.course_name\n                        }\n                      </>\n                    )}\n                  </span>\n                  <div className=\"bg-white hover:text-yellow-700 hover:bg-white rounded-full p-1 h-10 w-10 border-2 border-white hover:border-yellow-600 flex items-center justify-center\">\n                    <MdClose\n                      className=\"cursor-pointer font-extrabold text-3xl\"\n                      onClick={() =>\n                        this.setState({\n                          appointmentDetailsModal: {\n                            status: false,\n                            item: null,\n                          },\n                          displayResults: false,\n                        })\n                      }\n                    />\n                  </div>\n                </div>\n              </div>\n              {this.findExam(this.state.appointmentDetailsModal.item.course) ===\n              null ? (\n                <div className=\"text-yellow-700 font-bold text-center text-3xl bg-yellow-50 border border-yellow-200 rounded px-4 py-4 mx-4 my-4\">\n                  No exam found for selected course\n                </div>\n              ) : this.props.periods.applicationPeriods &&\n                (this.props.periods.applicationPeriods.find(\n                  (itm) =>\n                    this.state.appointmentDetailsModal.item &&\n                    itm.session_plan_id ===\n                      this.state.appointmentDetailsModal.item.period\n                )?.is_active === false ||\n                  this.props.periods.applicationPeriods.find(\n                    (itm) =>\n                      this.state.appointmentDetailsModal.item &&\n                      itm.session_plan_id ===\n                        this.state.appointmentDetailsModal.item.period\n                  )?.is_active === undefined) ? (\n                <div className=\"text-yellow-700 font-bold text-center text-3xl bg-yellow-50 border border-yellow-200 rounded px-4 py-4 mx-4 my-4 flex flex-col items-center\">\n                  <div>No exam for the selected period</div>\n                  <div\n                    onClick={() =>\n                      this.props.loadApplicationPeriods(this.setLoading)\n                    }\n                    className=\"btn bg-white text-gray-700 w-max text-base border border-gray-700 mt-4 cursor-pointer\"\n                  >\n                    Reload\n                  </div>\n                </div>\n              ) : (\n                <ExamDetails\n                  locationDetails={this.props.selectedExams.find(\n                    (itm) =>\n                      this.state.appointmentDetailsModal.item &&\n                      itm.course_id ===\n                        this.state.appointmentDetailsModal.item.course\n                  )}\n                  examDetails={this.findExam(\n                    this.state.appointmentDetailsModal.item.course\n                  )}\n                  locationsData={this.props.locationsData}\n                  loadAllLocationsData={this.props.loadAllLocationsData}\n                  setSelectedLocationData={this.props.setSelectedLocationData}\n                  periods={this.props.periods}\n                  loadApplicationPeriods={this.props.loadApplicationPeriods}\n                  candidateExam={this.props.candidateExam}\n                  setSelectedCandidateExam={this.props.setSelectedCandidateExam}\n                />\n              )}\n            </div>\n          </>\n        ) : this.state.centersModal === true &&\n          this.state.selectedCourse !== null ? (\n          <div className=\"animate__animated animate__fadeInUp animate__faster mt-2 mx-2 rounded-t-md border border-blue-300\">\n            <div className=\"flex flex-row gap-4 items-center justify-between bg-blue-100 py-2 px-2 mb-2\">\n              <div className=\"flex flex-col w-full\">\n                <div className=\"flex flex-row gap-2 items-center justify-between w-full pl-2\">\n                  <span className=\"font-bold text-xl text-gray-800\">\n                    Change exam location\n                  </span>\n                  <div className=\"bg-white hover:text-yellow-700 hover:bg-white rounded-full p-1 h-10 w-10 border-2 border-white hover:border-yellow-600 flex items-center justify-center\">\n                    <MdClose\n                      className=\"cursor-pointer font-extrabold text-3xl\"\n                      onClick={() => {\n                        this.setState({\n                          centersModal: false,\n                          selectedCourse: null,\n                        });\n                      }}\n                    />\n                  </div>\n                </div>\n              </div>\n            </div>\n            <ChooseExamCenter\n              positionCourses={this.state.selectedCourse}\n              addLocation={this.findLocation}\n              closeModal={this.closeModal}\n              changeProctoring={true}\n            />\n          </div>\n        ) : this.state.applicationHistoryState === true ? (\n          this.props.applicationHistory === undefined ? (\n            <div className=\"text-yellow-700 font-bold text-2xl text-center\">\n              No application history found!\n            </div>\n          ) : (\n            <div className=\"animate__animated animate__fadeInUp animate__faster bg-white mt-2 mx-2 rounded-t-md border border-blue-300\">\n              <div className=\"flex flex-row gap-4 items-center justify-between bg-blue-100 py-2 px-2\">\n                <div className=\"flex flex-row gap-2 items-center justify-between w-full pl-2\">\n                  <span className=\"font-bold text-xl text-gray-800\">\n                    Application history\n                  </span>\n                  <div className=\"bg-white hover:text-yellow-700 hover:bg-white rounded-full p-1 h-10 w-10 border-2 border-white hover:border-yellow-600 flex items-center justify-center\">\n                    <MdClose\n                      className=\"cursor-pointer font-extrabold text-3xl\"\n                      onClick={() =>\n                        this.setState({ applicationHistoryState: false })\n                      }\n                    />\n                  </div>\n                </div>\n              </div>\n              <ApplicationHistory\n                applicationHistory={this.props.applicationHistory}\n              />\n            </div>\n          )\n        ) : (\n          <div className=\"\">\n            <div className=\"px-2 md:py-2\">\n              <div className=\"flex flex-col md:flex-row justify-between items-center md:items-center\">\n                <div className=\"flex flex-row items-center gap-3 mb-3 pt-4 lg:pt-0\">\n                  <span className=\"bg-blue-50  text-gray-600 font-base rounded-md px-3 py-1 mt-0\">\n                    Status:{\" \"}\n                    <span className=\"font-extrabold text-blue-700 underline\">\n                      {this.props.selectedApplicationDetails &&\n                        ApplicationStatesDescription.find(\n                          (itm) =>\n                            this.props.selectedApplicationDetails &&\n                            itm.key ===\n                              this.props.selectedApplicationDetails\n                                .application_status\n                        )?.caption}\n                    </span>\n                  </span>\n                  <div\n                    onClick={() =>\n                      this.setState({ applicationHistoryState: true })\n                    }\n                    className=\"btn bg-gray-100 text-gray-600 border border-gray-300 text-sm flex flex-row items-center gap-2 cursor-pointer hover:border-blue-500 hover:bg-blue-50 hover:text-blue-600 md:mt-0\"\n                  >\n                    <MdHistory className=\"text-xl\" />\n                    <span>View application history</span>\n                  </div>\n                </div>\n                <div\n                  className={`grid ${\n                    this.pendingCourses() > 0 ? \"grid-cols-3\" : \"grid-cols-2\"\n                  } gap-4 w-full md:w-max bg-gray-100 md:bg-white p-2 md:p-0 rounded mb-2 md:mb-0`}\n                >\n                  <div className=\"col-span-1 flex justify-start md:justify-end\">\n                    <div className=\"flex flex-row items-center\">\n                      <div className=\"flex flex-col\">\n                        <span className=\"text-xs md:text-md text-gray-500 font-bold text-left md:text-right\">\n                          Total\n                        </span>\n                        <span className=\"text-xl md:text-xl font-bold text-gray-700 text-left md:text-right\">\n                          {this.props.selectedExams.length}\n                        </span>\n                      </div>\n                    </div>\n                  </div>\n                  {this.pendingCourses() > 0 && (\n                    <div className=\"col-span-1 flex justify-start md:justify-end\">\n                      <div className=\"flex flex-row items-center\">\n                        <div className=\"flex flex-col\">\n                          <span className=\"text-xs md:text-md text-gray-500 font-bold text-left md:text-right\">\n                            Pending\n                          </span>\n                          <span className=\"text-xl md:text-xl font-bold text-gray-700 text-left md:text-right\">\n                            {this.props.selectedPosition !== null &&\n                              this.pendingCourses()}\n                          </span>\n                        </div>\n                      </div>\n                    </div>\n                  )}\n                  <div className=\"col-span-1 flex justify-start md:justify-end\">\n                    <div className=\"flex flex-row items-center\">\n                      <div className=\"flex flex-col\">\n                        <span className=\"text-xs md:text-md text-gray-500 font-bold text-left md:text-right\">\n                          Total marks\n                        </span>\n                        {this.showTotalMarks(this.props.selectedPosition) ===\n                        true ? (\n                          // this.state.loadingExams === true || this.state.loadingExamsDone === true ? <span>Wait...</span> :\n                          <span className=\"text-xl md:text-xl font-bold text-gray-700 text-left md:text-right\">\n                            {parseFloat(\n                              findTotalMarks(\n                                this.props.selectedPosition.courses,\n                                this.props.candidateExam.user_exams_done\n                              )\n                            ) > 0\n                              ? (\n                                  parseFloat(\n                                    findTotalMarks(\n                                      this.props.selectedPosition.courses,\n                                      this.props.candidateExam.user_exams_done\n                                    )\n                                  ) / this.props.selectedPosition.courses.length\n                                ).toFixed(2)\n                              : 0}\n                            %\n                          </span>\n                        ) : (\n                          <div\n                            title=\"You can not view marks because one of your exams is not completed\"\n                            className=\"py-1 text-center bg-yellow-100 rounded w-max px-4 my-1\"\n                          >\n                            Hidden\n                          </div>\n                        )}\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n              <div className=\"font-bold flex flex-col md:flex-row items-start md:items-center justify-start md:justify-between gap-2\">\n                {this.props.selectedApplicationDetails &&\n                this.props.selectedApplicationDetails.application_status !==\n                  ApplicationStates.Rejected ? (\n                  <div className=\"text-xl flex flex-row items-center gap-2\">\n                    <BsFileEarmarkText className=\"text-2xl\" />\n                    <span>Exams list: </span>\n                  </div>\n                ) : (\n                  <div>\n                    {this.state.loadingExams === false &&\n                    this.state.loadingExamsDone === false &&\n                    CheckIfExamDone(\n                      this.props.selectedPosition.courses,\n                      this.props.candidateExam.user_exams_done\n                    ) === false &&\n                    this.props.periods.selected_period &&\n                    this.props.selected_application &&\n                    this.props.claiming.myClaims &&\n                    isClaimAllowed(\n                      this.props.claiming.myClaims,\n                      this.props.periods.selected_period.session_plan_id,\n                      this.props.selected_application\n                    ) === true ? (\n                      <div\n                        onClick={() => this.setClaim(!this.state.claim)}\n                        className=\"btn flex flex-row gap-2 items-center text-green-700 bg-green-50 cursor-pointer hover:bg-green-100 hover:text-green-900 border border-green-600 hover:border-green-800\"\n                      >\n                        <IoHandLeftSharp className=\"text-xl \" />\n                        <span className=\"text-sm\">Claim now</span>\n                      </div>\n                    ) : this.props.claiming.myClaims === null ? (\n                      <div>Loading...</div>\n                    ) : (\n                      this.props.claiming.myClaims.length > 0 && (\n                        <div\n                          onClick={() => this.setClaim(!this.state.claim)}\n                          className=\"btn flex flex-row gap-2 items-center text-white bg-blue-600 cursor-pointer hover:bg-blue-800\"\n                        >\n                          <IoHandLeftSharp className=\"text-xl \" />\n                          <span className=\"text-sm\">\n                            {this.state.claim === true\n                              ? \"Hide details\"\n                              : \"View claim details\"}\n                          </span>\n                        </div>\n                      )\n                    )}\n                  </div>\n                )}\n                {this.state.loadingExams === false &&\n                  this.state.loadingExamsDone === false &&\n                  CheckIfExamDone(\n                    this.props.selectedPosition.courses,\n                    this.props.candidateExam.user_exams_done\n                  ) === false && (\n                    <div\n                      onClick={() =>\n                        this.props.selected_application &&\n                        this.props.deleteApplication(\n                          this.props.selected_application\n                        )\n                      }\n                      className=\"btn flex flex-row gap-2 items-center text-red-700 bg-red-50 cursor-pointer hover:bg-red-100 hover:text-red-900\"\n                    >\n                      <IoMdTrash className=\"text-xl \" />\n                      <span className=\"text-sm\">Remove application</span>\n                    </div>\n                  )}\n              </div>\n              {this.state.claim === true &&\n                this.props.selected_application !== null && (\n                  <div className=\"bg-gray-100 mt-4 pt-2 rounded\">\n                    <ClaimFormComponent\n                      setFormState={this.setClaim}\n                      claim_type={PlansTypeKeys.APPLICATION}\n                      file_id={this.props.selected_application}\n                    />\n                  </div>\n                )}\n            </div>\n            {this.props.selectedApplicationDetails &&\n              this.props.selectedApplicationDetails.application_status !==\n                ApplicationStates.Rejected && (\n                <>\n                  <ActiveExams\n                    selectedPosition={this.props.selectedPosition}\n                    selectedExams={this.props.selectedExams}\n                    findExam={this.findExam}\n                    loadingExams={this.state.loadingExams}\n                    loadingExamsDone={this.state.loadingExamsDone}\n                    setMaxExamModal={this.props.setMaxExamModal}\n                    course={this.props.course}\n                    setSelectedCourse={this.props.setSelectedCourse}\n                    candidateExam={this.props.candidateExam}\n                    positions={this.props.positions}\n                    periods={this.props.periods}\n                    setSelectedPosition={this.props.setSelectedPosition}\n                    setSelectedCandidateExam={\n                      this.props.setSelectedCandidateExam\n                    }\n                    selectedApplicationDetails={\n                      this.props.selectedApplicationDetails\n                    }\n                    setDoingExam={this.props.setDoingExam}\n                    InitializeExamDetails={this.props.InitializeExamDetails}\n                    setLoadingExams={this.setLoadingExams}\n                  />\n                  <PreparedExams\n                    selectedPosition={this.props.selectedPosition}\n                    selectedExams={this.props.selectedExams}\n                    findExam={this.findExam}\n                    loadingExams={this.state.loadingExams}\n                    loadingExamsDone={this.state.loadingExamsDone}\n                    setMaxExamModal={this.props.setMaxExamModal}\n                    course={this.props.course}\n                    setSelectedCourse={this.props.setSelectedCourse}\n                    candidateExam={this.props.candidateExam}\n                    positions={this.props.positions}\n                    periods={this.props.periods}\n                    setSelectedPosition={this.props.setSelectedPosition}\n                    setSelectedCandidateExam={\n                      this.props.setSelectedCandidateExam\n                    }\n                    changeLocation={this.changeLocation}\n                    selectedApplicationDetails={\n                      this.props.selectedApplicationDetails\n                    }\n                    setDoingExam={this.props.setDoingExam}\n                    InitializeExamDetails={this.props.InitializeExamDetails}\n                    setLoadingExams={this.setLoadingExams}\n                  />\n                  <ExamsDone\n                    selectedPosition={this.props.selectedPosition}\n                    selectedExams={this.props.selectedExams}\n                    findExam={this.findExam}\n                    loadingExams={this.state.loadingExams}\n                    loadingExamsDone={this.state.loadingExamsDone}\n                    setMaxExamModal={this.props.setMaxExamModal}\n                    course={this.props.course}\n                    setSelectedCourse={this.props.setSelectedCourse}\n                    candidateExam={this.props.candidateExam}\n                    positions={this.props.positions}\n                    periods={this.props.periods}\n                    setSelectedPosition={this.props.setSelectedPosition}\n                    setSelectedCandidateExam={\n                      this.props.setSelectedCandidateExam\n                    }\n                    viewMarksDetails={(\n                      selectedExamDetails: ExamDoneDetailsAnswers\n                    ) => {\n                      this.setState({\n                        selectedExamDetails: selectedExamDetails,\n                      });\n                    }}\n                  />\n                </>\n              )}\n          </div>\n        )}\n      </Fragment>\n    );\n  }\n}\n\nconst mapStateToProps = ({\n  auth,\n  doExam,\n  prepareExam,\n  locationsData,\n  periods,\n  candidateExam,\n  course,\n  positions,\n  claiming,\n}: StoreState): {\n  auth: Auth;\n  doExam: examDataInterface;\n  prepareExam: PrepareExamsStoreInterface;\n  locationsData: LocationsDataStoreInterface;\n  periods: applicationPeriodsStoreInterface;\n  candidateExam: candidateExamStoreInterface;\n  course: courseStoreInterface;\n  positions: positionsStoreInterface;\n  claiming: ClaimingReducerType;\n} => {\n  return {\n    auth: auth,\n    doExam: doExam,\n    prepareExam: prepareExam,\n    locationsData: locationsData,\n    periods: periods,\n    candidateExam: candidateExam,\n    course: course,\n    positions: positions,\n    claiming: claiming,\n  };\n};\n\nconst PostExams = connect(mapStateToProps, {\n  loadExam,\n  loadExamsList,\n  loadAllLocationsData,\n  setSelectedLocationData,\n  loadApplicationPeriods,\n  setSelectedCandidateExam,\n  loadCourses,\n  setSelectedCourse,\n  InitializeExamDetails,\n  setSelectedPeriod,\n  setSelectedPosition,\n  loadExamsDone,\n  getMyClaims,\n})(_PostExams);\n\nexport default PostExams;\n","import React, { Component } from \"react\";\nimport { GetApplicationsAPI } from \"../../interfaces/application\";\nimport { CandidateInterface } from \"../../interfaces/candidatesInterfaces\";\nimport { PlacedCandidateStatus } from \"../../interfaces/marks_publication\";\nimport { UserInfoInterface } from \"../../shared/interfaces\";\n\ninterface CandidatePlacementCheckProps {\n  position: GetApplicationsAPI;\n  user: CandidateInterface;\n}\ninterface CandidatePlacementCheckState {\n  loading: boolean;\n}\ninterface SchoolItemPlacement {\n  _id: string;\n  school_name: string;\n  school_code: string;\n  province_id: string;\n  province_code: string;\n  district_id: {\n    _id: string;\n    district_name: string;\n  };\n  district_code: string;\n  sector_code: string;\n  sector_id: string;\n  school_status: string;\n  status: number;\n  createdAt: string;\n  updatedAt: string;\n}\nexport interface SchoolPlacementInterface {\n  n_id: string;\n  phone_number: string;\n  email: string;\n  user_info: UserInfoInterface;\n  placed: {\n    _id: string;\n    comment: string;\n    status: PlacedCandidateStatus;\n    waiting_list_id: string;\n    user_id: string;\n    school_id: string;\n    district_id: string;\n    position_id: string;\n    request_id: string;\n    createdAt: string;\n    updatedAt: string;\n    school: SchoolItemPlacement;\n    __v: number;\n  };\n}\n\n// interface CandidatePlacementSchool {}\n\nexport class CandidatePlacementCheck extends Component<\n  CandidatePlacementCheckProps,\n  CandidatePlacementCheckState\n> {\n  constructor(props: CandidatePlacementCheckProps) {\n    super(props);\n\n    this.state = {\n      loading: false,\n    };\n  }\n  setLoading = (state: boolean) => {\n    this.setState({ loading: state });\n  };\n\n  render() {\n    return <div>Candidate Placement check</div>;\n  }\n}\n\nexport default CandidatePlacementCheck;\n","import React, { Component, Fragment } from \"react\";\nimport { MdAdd } from \"react-icons/md\";\nimport { Link, Redirect } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport {\n  Auth,\n  initiateApplication,\n  removeLocation,\n  loadApplicationPeriods,\n  applicationPeriodsStoreInterface,\n  setSelectedPeriod,\n  System,\n  PushPopupAlert,\n  positionsStoreInterface,\n  loadAllPositions,\n  FC_Access,\n  CandidateApplicationsStoreInterface,\n  LoadCandidateApplications,\n  candidateExamStoreInterface,\n  InitializeExamDetails,\n  loadExamsDone,\n  setSelectedPosition,\n  setSelectedCourse,\n  courseStoreInterface,\n  setSelectedCandidateExam,\n  examDataInterface,\n  AddUserApplication,\n  RemoveUserApplication,\n  SelectUserApplication,\n  InitialExamDetails,\n} from \"../../actions\";\nimport { StoreState } from \"../../reducers\";\nimport {\n  applicationStoreInterface,\n  initialApplicationInterface,\n} from \"../../actions/application\";\nimport { ApplicationStepsTypes } from \"../Application/ApplicationSteps/ApplicationSteps\";\nimport {\n  applicationExamAPI,\n  ApplicationPeriodGet,\n  ApplicationStates,\n  ApplicationStatesDescription,\n  GetApplicationsAPI,\n  NoRoomsInterface,\n} from \"../../interfaces/application\";\nimport Exams from \"./Exams\";\nimport { course, PositionAPI } from \"../../interfaces/index\";\nimport axios from \"axios\";\nimport { API } from \"../../utils/api\";\nimport { sentExamInterface } from \"../Application/ExamCenter/ExamCenter\";\nimport Loading from \"../../components/Loading/Loading\";\nimport { AiOutlineFilter } from \"react-icons/ai\";\nimport { IoBriefcase, IoBriefcaseOutline } from \"react-icons/io5\";\nimport Modal, { ModalSize, Themes } from \"../../components/Modal/Modal\";\nimport {\n  SideNavigation,\n  MainItem,\n} from \"../../components/Navigation/SideNavigation\";\nimport { BsCaretRightFill } from \"react-icons/bs\";\nimport LoadingV2, { LoadingType } from \"../../components/Loading/LoadingV2\";\nimport { PopupAlertData } from \"../../components/Alert/Popup\";\nimport { PopupAlertTheme } from \"../../interfaces/popupAlert\";\nimport { RiFileForbidLine } from \"react-icons/ri\";\nimport { IoMdList } from \"react-icons/io\";\nimport NoResult, { NoResultThemes } from \"../../components/NoResult/NoResult\";\nimport ApplicationPeriods from \"../../components/ApplicationPeriods/ApplicationPeriods\";\nimport { DATE } from \"../../utils/functions\";\nimport { UserAccessList } from \"../../utils/auth_access\";\nimport { BiArrowBack } from \"react-icons/bi\";\nimport { InitializeExamsDone } from \"../../utils/question_bank\";\nimport { examStatus } from \"../../interfaces/exam\";\nimport CandidatePlacementCheck from \"../../components/CandidatePlacementCheck/CandidatePlacementCheck\";\n\ninterface ApplicationsDashboardState {\n  selectedPosition: PositionAPI | null;\n  selectedExams: applicationExamAPI[] | null;\n  applications: GetApplicationsAPI[] | [] | null;\n  selected_application: string | null;\n  noRoomsApplication: NoRoomsInterface[] | null | [];\n  loading: boolean;\n  applicationError: string | null;\n  number_of_incomplete: number;\n  applicationDetails: boolean;\n  selectedApplicationStatus: ApplicationStates | null;\n  showPeriodFilter: boolean;\n  maxExamModal: boolean;\n  loadingErr: string;\n  displayDetailsModal: boolean;\n  viewSchools: GetApplicationsAPI | null;\n  doing_exam: boolean;\n}\ninterface ApplicationsDashboardProps {\n  auth: Auth;\n  application: applicationStoreInterface;\n  periods: applicationPeriodsStoreInterface;\n  initiateApplication: (initial: initialApplicationInterface) => void;\n  removeLocation: (course_id: string) => void;\n  loadApplicationPeriods: (callback: (loading: boolean) => void) => void;\n  setSelectedPeriod: (period: ApplicationPeriodGet) => void;\n  system: System;\n  PushPopupAlert: (alert: PopupAlertData) => void;\n  positions: positionsStoreInterface;\n  loadAllPositions: (callback: (loading: boolean) => void) => void;\n  FC_Access: Function;\n  candidateApplications: CandidateApplicationsStoreInterface;\n  LoadCandidateApplications: (\n    user_id: string,\n    callback: (loading: boolean) => void\n  ) => void;\n  InitializeExamDetails: (\n    periodId: string,\n    courseId: string,\n    district_id: string,\n    center_id: string,\n    room_id: string,\n    position: PositionAPI,\n    start_exam: boolean,\n    callback: (loading: boolean) => void\n  ) => void;\n  loadExamsDone: (\n    periodId: string,\n    userId: string,\n    callback: (loading: boolean) => void\n  ) => void;\n  candidateExam: candidateExamStoreInterface;\n  setSelectedPosition: (position: PositionAPI) => void;\n  course: courseStoreInterface;\n  setSelectedCourse: (course: course | null) => void;\n  setSelectedCandidateExam: (selected_exam: InitialExamDetails | null) => void;\n  doExam: examDataInterface;\n  AddUserApplication: (application: GetApplicationsAPI) => void;\n  RemoveUserApplication: (application_id: string) => void;\n  SelectUserApplication: (application: GetApplicationsAPI | null) => void;\n}\n\nclass _ApplicationsDashboard extends Component<\n  ApplicationsDashboardProps,\n  ApplicationsDashboardState\n> {\n  constructor(props: ApplicationsDashboardProps) {\n    super(props);\n\n    this.state = {\n      selectedPosition: null,\n      selectedExams: null,\n      applications: null,\n      selected_application: null,\n      noRoomsApplication: null,\n      loading: false,\n      applicationError: null,\n      number_of_incomplete: 0,\n      applicationDetails: false,\n      selectedApplicationStatus: null,\n      showPeriodFilter: false,\n      maxExamModal: false,\n      loadingErr: \"\",\n      displayDetailsModal: false,\n      viewSchools: null,\n      doing_exam: false,\n    };\n  }\n\n  setLoading = (state: boolean) => {\n    this.setState({ loading: state });\n  };\n\n  filteredApplications = (\n    applications: GetApplicationsAPI[],\n    Status: ApplicationStates | null,\n    searchPeriod?: ApplicationPeriodGet | null\n  ) => {\n    console.log(\"Appppp: \", applications);\n    let appl: GetApplicationsAPI[];\n    const searchPeriodSel =\n      searchPeriod === null || searchPeriod === undefined\n        ? this.props.auth.application_session?.session_plan_id\n        : searchPeriod.session_plan_id;\n    if (searchPeriodSel !== undefined) {\n      appl = applications.filter(\n        (itm) => itm.application_session.session_plan_id === searchPeriodSel\n      );\n    } else {\n      appl = applications;\n    }\n    console.log(\"appl: \", appl);\n    if (Status === null) {\n      return appl;\n    } else {\n      return appl.filter((item) => item.application_status === Status);\n    }\n  };\n\n  closeApplicationDetails = () => {\n    this.setState({ selected_application: null });\n    this.setState({ selectedPosition: null, selected_application: null });\n    this.setState({ selectedExams: null });\n    this.setState({ displayDetailsModal: false });\n  };\n\n  setDisplayDetailsModal = (status: boolean) => {\n    this.setState({ displayDetailsModal: status });\n  };\n\n  applicationStatuses = (\n    application: GetApplicationsAPI[]\n  ): { title: string; count: number; status: ApplicationStates }[] => {\n    let output: { title: string; count: number; status: ApplicationStates }[] =\n      [];\n    for (let i in ApplicationStatesDescription) {\n      output.push({\n        title: ApplicationStatesDescription[i].caption,\n        count: application.filter(\n          (itm) =>\n            itm.application_status === ApplicationStatesDescription[i].key\n        ).length,\n        status: ApplicationStatesDescription[i].key,\n      });\n    }\n    return output;\n  };\n\n  setMaxExamModal = (status: boolean) => {\n    this.setState({ maxExamModal: status });\n  };\n\n  LoadApplications = async () => {\n    this.setState({ loadingErr: \"\" });\n    this.setState({ number_of_incomplete: 0 });\n    if (this.props.auth.user.user_id) {\n      const selected_position = this.state.selectedPosition;\n      this.setState({ applications: null });\n      this.setState({ selectedPosition: null });\n      this.setState({ selectedExams: null });\n      let response: GetApplicationsAPI[] | null = null;\n      if (\n        this.props.candidateApplications.candidate_applications === null &&\n        this.props.auth.user\n      ) {\n        try {\n          const res = await axios.get<GetApplicationsAPI[]>(\n            `${API.APPLICATION}/application/${this.props.auth.user.user_id}`\n          );\n          // console.log(\"Applications list: \", res.data);\n          if (res.status === 200) {\n            response = res.data;\n            if (res.data.length === 0) {\n              response = [];\n            } else {\n              for (let application of response) {\n                this.props.AddUserApplication(application);\n              }\n            }\n          } else {\n            response = [];\n          }\n        } catch (error: any) {\n          response = [];\n          console.log(\"Appl Err: \", { ...error });\n        }\n      } else {\n        response = this.props.candidateApplications.candidate_applications;\n      }\n      this.setState({ applications: response });\n      if (response !== null) {\n        if (response.length > 0) {\n          // let done = false;\n          for (let i in response) {\n            let courses = response[i].position.courses;\n            let exams = response[i].exams;\n            if (\n              response[i].position.position_id ===\n              selected_position?.position_id\n            ) {\n              this.setState({ selectedPosition: response[i].position });\n              this.setState({ selectedExams: exams });\n            }\n            // Load Exams done:: need to be improved\n            // InitializeExamsDone(\n            //   this.props.periods.selected_period,\n            //   response[i].position,\n            //   this.props.candidateExam,\n            //   this.props.loadExamsDone,\n            //   this.props.auth.user.user_id,\n            //   this.setLoading,\n            //   response[i].exams,\n            //   this.props.InitializeExamDetails,\n            //   this.setLoading\n            // );\n            for (let x in courses) {\n              if (\n                exams.filter((itm) => itm.course_id === courses[x].course_id)\n                  .length === 0 &&\n                response[i].application_status === ApplicationStates.Incomplete\n              ) {\n                this.setState({\n                  selected_application: response[i].application_id,\n                });\n                this.setState({\n                  selectedPosition: response[i].position,\n                  selected_application: response[i].application_id,\n                });\n                this.setState({ selectedExams: response[i].exams });\n                this.setState({ displayDetailsModal: true });\n                this.incrementIncomplete();\n              }\n            }\n          }\n        } else {\n          this.props.LoadCandidateApplications(\n            this.props.auth.user.user_id,\n            this.setLoading\n          );\n        }\n      }\n    }\n  };\n\n  updateLocation = async (\n    application_id: string,\n    exams: sentExamInterface[]\n  ) => {\n    this.setState({ loading: true });\n    this.setState({ applicationError: null });\n    console.log(application_id);\n    for (let i in exams) {\n      try {\n        const res = await axios.post(\n          `${API.APPLICATION}/application/updatemissed`,\n          {\n            application_id: application_id,\n            exams: exams[i],\n          }\n        );\n        if (res.status === 200 && this.state.noRoomsApplication !== null) {\n          this.setState({\n            noRoomsApplication: this.state.noRoomsApplication?.filter(\n              (itm) => itm.course_id !== exams[i].course_id\n            ),\n          });\n        }\n        if (res.status === 200) {\n          this.props.LoadCandidateApplications(\n            this.props.auth.user.user_id,\n            this.setLoading\n          );\n          this.LoadApplications();\n          this.setState({ displayDetailsModal: false });\n          this.setState({ selectedPosition: null, selected_application: null });\n          this.setState({ selectedExams: null });\n          this.props.PushPopupAlert({\n            title: `Location updated successfully`,\n            description:\n              \"Location has updated successfully! You can continue to update before starting of the examination!\",\n            theme: PopupAlertTheme.success,\n          });\n        }\n      } catch (error: any) {\n        if (error.response) {\n          if (error.response.data) {\n            if (error.response.data.errors !== undefined) {\n              if (error.response.data.errors.length > 0) {\n                if (this.state.noRoomsApplication) {\n                  let newArr: sentExamInterface[];\n                  if (error.response.data.errors[0].field !== undefined) {\n                    newArr = this.state.noRoomsApplication?.filter(\n                      (itm) =>\n                        itm.course_id ===\n                        error.response.data.errors[0].field.course_id\n                    );\n                    if (newArr !== undefined) {\n                      for (let i in newArr) {\n                        this.props.removeLocation(newArr[i].course_id);\n                      }\n                    }\n                  }\n                }\n                this.setState({\n                  applicationError: error.response.data.errors[0].message,\n                });\n                this.props.PushPopupAlert({\n                  title: error.response.data.errors[0].message,\n                  theme: PopupAlertTheme.danger,\n                });\n              }\n            } else {\n              this.props.PushPopupAlert({\n                title: \"Something went wrong! Please try again\",\n                theme: PopupAlertTheme.danger,\n              });\n              this.setState({\n                applicationError: \"Something went wrong! Please try again\",\n              });\n            }\n          }\n        }\n        console.log(\"Change error: \", { ...error });\n      }\n    }\n    if (this.state.selectedPosition) {\n      this.setState({ selectedPosition: this.state.selectedPosition });\n    }\n    this.setState({ selected_application: application_id });\n    this.setState({ loading: false });\n  };\n\n  incrementIncomplete = () => {\n    this.setState({\n      number_of_incomplete: this.state.number_of_incomplete + 1,\n    });\n  };\n\n  changeLoadingState = (state: boolean) => {\n    this.setState({ loading: state });\n  };\n\n  deleteApplication = async (id: string) => {\n    if (\n      window.confirm(\"Are you sure do you want to delete this application?\") &&\n      id\n    ) {\n      this.changeLoadingState(true);\n      try {\n        await axios.delete(`${API.APPLICATION}/application/${id}`);\n        this.props.RemoveUserApplication(id);\n        this.LoadApplications();\n        this.props.PushPopupAlert({\n          title: `Application deleted successfully!`,\n          theme: PopupAlertTheme.success,\n        });\n        this.setState({ selectedExams: null });\n      } catch (error: any) {\n        this.props.PushPopupAlert({\n          title: `Failed to delete application!`,\n          theme: PopupAlertTheme.warning,\n        });\n      }\n      this.changeLoadingState(false);\n    }\n  };\n\n  setShowFilterStatus = (status: boolean) => {\n    this.setState({ showPeriodFilter: status });\n  };\n\n  setDoingExam = (status: boolean) => {\n    this.setState({ doing_exam: status });\n  };\n\n  componentDidMount = () => {\n    this.props.loadApplicationPeriods(this.changeLoadingState);\n    this.LoadApplications();\n    this.props.loadAllPositions(this.changeLoadingState);\n    if (\n      this.props.application.apply === undefined ||\n      this.props.application.apply.currentStep === ApplicationStepsTypes.Step3\n    ) {\n      this.props.initiateApplication({\n        user_id: this.props.auth.user.user_id,\n        selectedPosition: null,\n        currentStep: ApplicationStepsTypes.Step1,\n        positions: null,\n        doTestStatus: {\n          status: false,\n        },\n        selectedLocation: [],\n      });\n    }\n    // if (this.props.candidateApplications.candidate_applications !== null) {\n    //   if (this.props.candidateApplications.candidate_applications.length > 0) {\n    //     if (this.state.selectedPosition === null) {\n    //       this.setState({ selectedPosition: this.props.candidateApplications.candidate_applications[0].position, selected_application: this.props.candidateApplications.candidate_applications[0].application_id })\n    //     }\n    //     if (this.state.selectedExams === null) {\n    //       this.setState({ selectedExams: this.props.candidateApplications.candidate_applications[0].exams })\n    //     }\n    //   }\n    // }\n  };\n  render() {\n    if (!FC_Access(this.props.auth, UserAccessList.MY_APPLICATION).view) {\n      return <Redirect to=\"/\" />;\n    }\n    if (\n      this.props.candidateExam.selected_exam_id !== null &&\n      this.props.candidateExam.selected_exam_details !== null &&\n      (this.props.candidateExam.doing_exam === true ||\n        this.state.doing_exam === true)\n    ) {\n      return <Redirect to=\"/do-exam\" />;\n    }\n    if (\n      this.props.doExam.exam_answers &&\n      (this.props.candidateExam.doing_exam === true ||\n        this.state.doing_exam === true)\n    ) {\n      if (\n        this.props.doExam.exam_answers.status === examStatus.Editing ||\n        this.props.doExam.exam_answers.status === examStatus.Paused\n      ) {\n        return <Redirect to=\"/do-exam\" />;\n      }\n    }\n    return (\n      <Fragment>\n        {this.state.selectedPosition !== null &&\n        this.state.selectedExams !== null &&\n        this.state.displayDetailsModal === true ? (\n          <div className=\"border-t border-gray-200 my-2 pb-2 bg-white rounded animate__animated animate__fadeInUp animate__faster -ml-2 mr-1\">\n            <div className=\"flex flex-col md:flex-row gap-4 items-center md:justify-between bg-blue-600 rounded-t py-2 px-2\">\n              <div className=\"flex flex-row gap-4 w-full\">\n                <div>\n                  <div className=\"h-12 w-12 rounded-full bg-blue-500 hover:bg-blue-700 cursor-pointer flex items-center justify-center\">\n                    <BiArrowBack\n                      className=\"text-3xl text-white\"\n                      onClick={() => this.closeApplicationDetails()}\n                    />\n                  </div>\n                </div>\n                <div className=\"flex flex-col w-full\">\n                  <span className=\"font-bold text-xl text-white\">\n                    {this.state.selectedPosition.position_title}\n                  </span>\n                  <span className=\"text-sm text-gray-100 font-normal pl-1\">\n                    {this.props.candidateApplications.candidate_applications &&\n                      this.state.selectedPosition !== null &&\n                      this.props.candidateApplications.candidate_applications.find(\n                        (itm) =>\n                          itm.application_id === this.state.selected_application\n                      )?.application_session.session_plan_name}{\" \"}\n                    -{\" \"}\n                    {this.props.candidateApplications.candidate_applications !==\n                      null &&\n                      this.state.selectedPosition !== null &&\n                      this.props.candidateApplications.candidate_applications.find(\n                        (itm) =>\n                          itm.application_id === this.state.selected_application\n                      )?.application_session.period}\n                  </span>\n                </div>\n              </div>\n              {this.props.candidateApplications.candidate_applications !==\n                null &&\n              this.props.candidateApplications.candidate_applications.find(\n                (itm) =>\n                  itm.application_id === this.state.selected_application &&\n                  (itm.application_status === ApplicationStates.Shortlisted ||\n                    itm.application_status === ApplicationStates.Pass)\n              ) !== undefined ? (\n                <div\n                  title=\"Choose the Province, Choose the District, etc.\"\n                  className=\"mb-3 md:mb-0\"\n                  onClick={() => {\n                    if (\n                      this.props.candidateApplications\n                        .candidate_applications !== null\n                    ) {\n                      let checkApplication =\n                        this.props.candidateApplications.candidate_applications.find(\n                          (itm) =>\n                            itm.application_id ===\n                            this.state.selected_application\n                        );\n                      if (checkApplication !== undefined) {\n                        this.props.SelectUserApplication(checkApplication);\n                      }\n                    }\n                  }}\n                >\n                  <Link\n                    to=\"/placement-contract\"\n                    className=\"bg-blue-500 px-4 py-3 font-bold rounded-md border-2 border-white text-white hover:bg-blue-800\"\n                  >\n                    Placement\n                  </Link>\n                </div>\n              ) : (\n                <div\n                  title=\"Wait for being shortlisted to fill placement agreement\"\n                  className=\"bg-blue-500 text-blue-300 rounded px-3 py-2 cursor-not-allowed hidden md:block\"\n                >\n                  Placement\n                </div>\n              )}\n            </div>\n            {/* Check application */}\n            <div className=\"bg-gray-100\"></div>\n            <Exams\n              selectedExams={this.state.selectedExams}\n              selectedPosition={this.state.selectedPosition}\n              selected_application={this.state.selected_application}\n              updateLocation={this.updateLocation}\n              changeLocationError={this.state.applicationError}\n              loading={this.state.loading}\n              incrementIncomplete={this.incrementIncomplete}\n              applicationHistory={\n                this.props.candidateApplications.candidate_applications !==\n                  null && this.state.selectedPosition !== null\n                  ? this.props.candidateApplications.candidate_applications.find(\n                      (itm) =>\n                        itm.position.position_id ===\n                        this.state.selectedPosition?.position_id\n                    )?.application_history\n                  : undefined\n              }\n              deleteApplication={this.deleteApplication}\n              selectedApplicationDetails={\n                this.props.candidateApplications.candidate_applications &&\n                this.props.candidateApplications.candidate_applications.find(\n                  (itm) =>\n                    itm.application_id === this.state.selected_application\n                )!\n              }\n              setMaxExamModal={this.setMaxExamModal}\n              setDisplayDetailsModal={this.setDisplayDetailsModal}\n              doing_exam={this.state.doing_exam}\n              setDoingExam={this.setDoingExam}\n            />\n          </div>\n        ) : (\n          <>\n            <SideNavigation>\n              {this.props.positions.positions_list === null ? (\n                <div className=\"btn bg-gray-500 text-white mb-4 w-full flex flex-row items-center gap-3 cursor-not-allowed animate__animated animate__zoomIn\">\n                  <RiFileForbidLine className=\"text-2xl text-white\" /> Please\n                  wait...\n                </div>\n              ) : this.props.positions.positions_list.length > 0 &&\n                this.props.periods.applicationPeriods &&\n                this.props.periods.applicationPeriods.filter(\n                  (itm) => itm.is_active === true\n                ).length !== 0 ? (\n                <Link to=\"/apply\">\n                  <div className=\"btn btn-blue text-white mb-4 w-full flex flex-row items-center gap-3 animate__animated animate__zoomIn\">\n                    <MdAdd className=\"text-2xl text-white\" /> Apply\n                  </div>\n                </Link>\n              ) : (\n                <div className=\"btn bg-gray-200 cursor-not-allowed text-gray-500 mb-4 w-full flex flex-row items-center animate__animated animate__zoomIn\">\n                  No vacancies!\n                </div>\n              )}\n              {/* <div className=\"mb-6\"></div> */}\n              {/* <Search data={[1, 2, 3]} /> */}\n              <div\n                onClick={() =>\n                  this.setState({ selectedApplicationStatus: null })\n                }\n                className={`cursor-pointer ${\n                  this.state.selectedApplicationStatus !== null\n                    ? \"text-gray-600 hover:text-blue-600 border border-gray-200 hover:border-blue-600 hover:bg-blue-100 bg-white\"\n                    : \"text-blue-600 border border-blue-600 hover:bg-blue-100 bg-blue-100\"\n                } flex flex-row items-center gap-2 px-2 py-1 rounded font-bold`}\n              >\n                <IoMdList className=\"text-xl\" />\n                <span>\n                  View all (\n                  {this.props.candidateApplications.candidate_applications ===\n                  null\n                    ? 0\n                    : this.props.candidateApplications.candidate_applications.filter(\n                        (itm) =>\n                          itm.application_session.session_plan_id ===\n                          this.props.periods.selected_period?.session_plan_id\n                      ).length}\n                  )\n                </span>\n              </div>\n              <div className=\"pt-1\">\n                {(this.props.candidateApplications.candidate_applications &&\n                  this.filteredApplications(\n                    this.props.candidateApplications.candidate_applications,\n                    null,\n                    this.props.periods.selected_period\n                  ) === null) ||\n                this.props.candidateApplications.loading === true ? (\n                  <Loading />\n                ) : (\n                  this.props.candidateApplications.candidate_applications &&\n                  this.applicationStatuses(\n                    this.filteredApplications(\n                      this.props.candidateApplications.candidate_applications,\n                      null,\n                      this.props.periods.selected_period\n                    )\n                  ).map(\n                    (\n                      itm: {\n                        title: string;\n                        count: number;\n                        status: ApplicationStates;\n                      },\n                      i: number\n                    ) =>\n                      itm.count > 0 && (\n                        <Fragment key={itm.title}>\n                          <div\n                            onClick={() =>\n                              this.setState({\n                                selectedApplicationStatus: itm.status,\n                              })\n                            }\n                          >\n                            <MainItem\n                              title={itm.title}\n                              count={itm.count}\n                              active={\n                                this.state.selectedApplicationStatus ===\n                                itm.status\n                                  ? true\n                                  : false\n                              }\n                            />\n                          </div>\n                        </Fragment>\n                      )\n                  )\n                )}\n              </div>\n            </SideNavigation>\n            <div className=\"px-2 -ml-2 lg:ml-0\">\n              <div className=\"mt-2 rounded px-2 md:px-0 py-3 md:py-3\">\n                <div className=\"flex flex-col\">\n                  <div className=\"flex flex-col md:flex-row justify-between md:items-center\">\n                    <div className=\"flex flex-col\">\n                      <span className=\"text-blue-600 text-2xl md:text-2xl lg:text-3xl font-bold\">\n                        My Applications{\" \"}\n                        <span className=\"md:hidden\">\n                          (\n                          {this.props.candidateApplications\n                            .candidate_applications &&\n                          this.filteredApplications(\n                            this.props.candidateApplications\n                              .candidate_applications,\n                            this.state.selectedApplicationStatus,\n                            this.props.periods.selected_period\n                          )\n                            ? this.filteredApplications(\n                                this.props.candidateApplications\n                                  .candidate_applications,\n                                this.state.selectedApplicationStatus,\n                                this.props.periods.selected_period\n                              ).length\n                            : 0}\n                          )\n                        </span>\n                      </span>\n                      <div className=\"text-gray-700 font-bold text-xs md:text-sm lg:text-md flex flex-row gap-1 items-center\">\n                        <AiOutlineFilter className=\"text-2xl\" /> Selected period{\" \"}\n                        <span\n                          onClick={() =>\n                            this.setState({ showPeriodFilter: true })\n                          }\n                          className={`px-2 ${\n                            this.props.periods.selected_period !== null\n                              ? \"text-blue-600 hover:bg-blue-100 border-2 border-gray-200 hover:border-blue-600 underline\"\n                              : \"bg-white text-gray-600 hover:bg-gray-100 border border-gray-300\"\n                          }  rounded-full py-1 flex flex-row justify-center items-center font-bold cursor-pointer`}\n                        >\n                          {this.props.periods.selected_period !== null ? (\n                            <>\n                              <BsCaretRightFill className=\"mr-3\" />\n                              {\n                                this.props.periods.selected_period\n                                  .session_plan_name\n                              }\n                            </>\n                          ) : (\n                            \"Choose period\"\n                          )}\n                        </span>\n                      </div>\n                    </div>\n                    <div>\n                      <div\n                        onClick={() =>\n                          this.setState({ showPeriodFilter: true })\n                        }\n                        className=\"bg-white border border-white hover:border-blue-600 text-blue-600 font-bold items-center btn w-max cursor-pointer hover:bg-blue-100 my-2 md:my-0\"\n                      >\n                        {this.props.periods.selected_period === null\n                          ? \"Choose period\"\n                          : \"Change period\"}\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n              {this.state.loadingErr !== \"\" && (\n                <div className=\"bg-yellow-100 text-yellow-700 font-extrabold text-2xl mx-4 px-3 py-3 rounded\">\n                  {this.state.loadingErr}\n                </div>\n              )}\n              <div className=\"mb-2\">\n                <div className=\"grid grid-cols-12 gap-3\">\n                  <div className=\"col-span-12\">\n                    <div className={`grid md:grid-cols-1 lg:grid-cols-1 gap-2`}>\n                      <div className=\"-my-2 md:hidden lg:hidden xl:hidden\">\n                        {this.props.positions.positions_list === null ? (\n                          <div className=\"btn bg-gray-500 text-white mb-4 w-full flex flex-row items-center gap-3 animate__animated animate__zoomIn justify-center\">\n                            <RiFileForbidLine className=\"text-2xl text-white\" />{\" \"}\n                            Please wait...\n                          </div>\n                        ) : this.props.positions.positions_list.length > 0 ? (\n                          <Link to=\"/apply\">\n                            <div className=\"btn btn-blue text-white mb-4 w-full flex flex-row items-center gap-3 animate__animated animate__zoomIn justify-center\">\n                              <MdAdd className=\"text-2xl text-white\" /> Create\n                              application\n                            </div>\n                          </Link>\n                        ) : (\n                          <div className=\"btn bg-gray-400 text-white mb-4 w-full flex flex-row items-center gap-3 animate__animated animate__zoomIn justify-center\">\n                            <RiFileForbidLine className=\"text-2xl text-white\" />{\" \"}\n                            No vacancies!\n                          </div>\n                        )}\n                      </div>\n                      {this.props.candidateApplications\n                        .candidate_applications === null ||\n                      this.props.candidateApplications.loading === true ? (\n                        <LoadingV2 type={LoadingType.dark} />\n                      ) : this.filteredApplications(\n                          this.props.candidateApplications\n                            .candidate_applications,\n                          this.state.selectedApplicationStatus,\n                          this.props.periods.selected_period\n                        ).length === 0 ? (\n                        <div className=\"\">\n                          <NoResult\n                            theme={NoResultThemes.Dark}\n                            value=\"No Applications found!\"\n                            component={\n                              <div className=\"-my-2 hidden md:block\">\n                                {this.props.positions.positions_list !== null &&\n                                  this.props.positions.positions_list.length >\n                                    0 &&\n                                  this.props.periods.applicationPeriods &&\n                                  this.props.periods.applicationPeriods.filter(\n                                    (itm) => itm.is_active === true\n                                  ).length !== 0 && (\n                                    <Link to=\"/apply\">\n                                      <div className=\"text-blue-600 font-bold underline mb-2 hover:text-blue-800 animate__animated animate__zoomIn\">\n                                        Click here to create new application\n                                      </div>\n                                    </Link>\n                                  )}\n                              </div>\n                            }\n                          />\n                        </div>\n                      ) : (\n                        this.filteredApplications(\n                          this.props.candidateApplications\n                            .candidate_applications,\n                          this.state.selectedApplicationStatus,\n                          this.props.periods.selected_period\n                        ).map((item, i) => (\n                          <div\n                            key={i + 1}\n                            onClick={() => {\n                              this.setState({\n                                selectedPosition: item.position,\n                                selected_application: item.application_id,\n                              });\n                              this.setState({ selectedExams: item.exams });\n                              this.setState({ displayDetailsModal: true });\n                            }}\n                            className={`bg-white rounded-md animate__animated animate__fadeIn animate__faster\n                      ${\n                        this.state.selectedPosition?.position_id ===\n                        item.position.position_id\n                          ? \"border-2 border-blue-600 shadow\"\n                          : item.application_status ===\n                            ApplicationStates.Initiated\n                          ? \"border-gray-200 bg-gray-50 hover:border-gray-600\"\n                          : item.application_status ===\n                            ApplicationStates.Rejected\n                          ? \"bg-white border-white\"\n                          : item.application_status ===\n                            ApplicationStates.Shortlisted\n                          ? \"border-gray-200 bg-white hover:border-blue-600\"\n                          : item.application_status === ApplicationStates.Pass\n                          ? \"border-green-700 bg-white hover:border-green-900\"\n                          : \"bg-white border-yellow-600 hover:border-yellow-500\"\n                      } flex flex-col cursor-pointer font-normal hover:font-bold border-2`}\n                          >\n                            <div\n                              className={`grid md:grid-cols-12 group px-3 py-3 rounded-md gap-2 ${\n                                this.state.selectedPosition?.position_id ===\n                                item.position.position_id\n                                  ? \"bg-gray-100 rounded-t\"\n                                  : \"bg-white\"\n                              }`}\n                            >\n                              <div className=\"col-span-1 flex items-center justify-center\">\n                                {item.application_status ===\n                                ApplicationStates.Initiated ? (\n                                  <IoBriefcaseOutline className=\"text-5xl text-gray-400 group-hover:text-blue-600\" />\n                                ) : item.application_status ===\n                                  ApplicationStates.Rejected ? (\n                                  <IoBriefcase className=\"text-5xl text-gray-400 group-hover:text-gray-700\" />\n                                ) : item.application_status ===\n                                  ApplicationStates.Shortlisted ? (\n                                  <IoBriefcaseOutline className=\"text-5xl text-gray-400 group-hover:text-blue-600\" />\n                                ) : item.application_status ===\n                                  ApplicationStates.Pass ? (\n                                  <IoBriefcaseOutline className=\"text-5xl text-gray-400 group-hover:text-green-800\" />\n                                ) : item.application_status ===\n                                  ApplicationStates.Incomplete ? (\n                                  <IoBriefcaseOutline className=\"text-5xl text-gray-400 group-hover:text-yellow-800\" />\n                                ) : (\n                                  <IoBriefcase className=\"text-5xl text-gray-400 group-hover:text-blue-600\" />\n                                )}\n                              </div>\n                              <div className=\"col-span-7\">\n                                <span\n                                  className={`font-extrabold \n                          ${\n                            item.application_status !==\n                            ApplicationStates.Initiated\n                              ? item.application_status ===\n                                ApplicationStates.Rejected\n                                ? \"text-gray-900 group-hover:text-gray-900\"\n                                : item.application_status ===\n                                  ApplicationStates.Shortlisted\n                                ? \"text-gray-900 group-hover:text-blue-600\"\n                                : item.application_status ===\n                                  ApplicationStates.Pass\n                                ? \"text-gray-900 group-hover:text-green-800\"\n                                : item.application_status ===\n                                  ApplicationStates.Incomplete\n                                ? \"text-gray-900 group-hover:text-yellow-800\"\n                                : \"text-gray-900 group-hover:text-blue-600\"\n                              : \"text-gray-900 group-hover:text-blue-600\"\n                          }`}\n                                >\n                                  {item.position.position_title}\n                                </span>\n                                <div className=\"flex flex-col text-xs text-gray-600\">\n                                  <div className=\"flex flex-row gap-2\">\n                                    <div>\n                                      <div className=\"flex flex-col float-left text-sm md:justify-end pt-2\">\n                                        <span\n                                          className={`${\n                                            item.application_status ===\n                                            ApplicationStates.Rejected\n                                              ? \"text-yellow-700\"\n                                              : \"text-gray-500\"\n                                          } md:text-right`}\n                                        >\n                                          {/* Status */}\n                                        </span>\n                                        {item.application_status ===\n                                        ApplicationStates.Initiated ? (\n                                          <span\n                                            className={`font-bold ${\n                                              this.state.selectedPosition\n                                                ?.position_id ===\n                                              item.position.position_id\n                                                ? \"bg-gray-600 text-gray-100 border border-gray-500 rounded-full\"\n                                                : \"bg-gray-50 text-gray-800 rounded\"\n                                            } px-3 py-1`}\n                                          >\n                                            {\n                                              ApplicationStatesDescription.find(\n                                                (itm) =>\n                                                  itm.key ===\n                                                  item.application_status\n                                              )?.caption\n                                            }\n                                          </span>\n                                        ) : item.application_status ===\n                                          ApplicationStates.Rejected ? (\n                                          <span\n                                            className={`font-bold ${\n                                              this.state.selectedPosition\n                                                ?.position_id ===\n                                              item.position.position_id\n                                                ? \"bg-yellow-900 text-yellow-100 border border-yellow-700 rounded-full\"\n                                                : \"bg-yellow-100 text-yellow-900 rounded\"\n                                            } px-3 py-1`}\n                                          >\n                                            {\n                                              ApplicationStatesDescription.find(\n                                                (itm) =>\n                                                  itm.key ===\n                                                  item.application_status\n                                              )?.caption\n                                            }\n                                          </span>\n                                        ) : item.application_status ===\n                                          ApplicationStates.Shortlisted ? (\n                                          <span\n                                            className={`font-bold ${\n                                              this.state.selectedPosition\n                                                ?.position_id ===\n                                              item.position.position_id\n                                                ? \"bg-blue-900 text-blue-100 border border-blue-700 rounded-full\"\n                                                : \"bg-blue-100 text-blue-900 rounded\"\n                                            } px-3 py-1`}\n                                          >\n                                            {\n                                              ApplicationStatesDescription.find(\n                                                (itm) =>\n                                                  itm.key ===\n                                                  item.application_status\n                                              )?.caption\n                                            }\n                                          </span>\n                                        ) : item.application_status ===\n                                          ApplicationStates.Pass ? (\n                                          <span\n                                            className={`font-bold ${\n                                              this.state.selectedPosition\n                                                ?.position_id ===\n                                              item.position.position_id\n                                                ? \"bg-green-900 text-green-100 border border-green-700 rounded-full\"\n                                                : \"bg-green-100 text-green-900 rounded\"\n                                            } px-3 py-1`}\n                                          >\n                                            {\n                                              ApplicationStatesDescription.find(\n                                                (itm) =>\n                                                  itm.key ===\n                                                  item.application_status\n                                              )?.caption\n                                            }\n                                          </span>\n                                        ) : (\n                                          <span\n                                            className={`font-bold ${\n                                              this.state.selectedPosition\n                                                ?.position_id ===\n                                              item.position.position_id\n                                                ? \"bg-yellow-600 text-yellow-100 border border-yellow-500 rounded-full\"\n                                                : \"bg-yellow-100 text-yellow-700 rounded\"\n                                            } px-3 py-1`}\n                                          >\n                                            {\n                                              ApplicationStatesDescription.find(\n                                                (itm) =>\n                                                  itm.key ===\n                                                  item.application_status\n                                              )?.caption\n                                            }\n                                          </span>\n                                        )}\n                                      </div>\n                                    </div>\n                                    <div className=\"flex flex-col\">\n                                      <span\n                                        className={`${\n                                          item.application_status !==\n                                          ApplicationStates.Initiated\n                                            ? item.application_status ===\n                                              ApplicationStates.Rejected\n                                              ? \"text-gray-500\"\n                                              : item.application_status ===\n                                                ApplicationStates.Shortlisted\n                                              ? \"text-gray-500\"\n                                              : \"text-gray-500\"\n                                            : \"text-gray-500\"\n                                        }`}\n                                      >\n                                        {/* Application period: */}\n                                      </span>\n                                      <span\n                                        className={`${\n                                          item.application_status !==\n                                          ApplicationStates.Initiated\n                                            ? item.application_status ===\n                                              ApplicationStates.Rejected\n                                              ? \"text-gray-800\"\n                                              : item.application_status ===\n                                                ApplicationStates.Shortlisted\n                                              ? \"text-gray-800\"\n                                              : \"text-gray-800\"\n                                            : \"text-black\"\n                                        } font-bold`}\n                                      >\n                                        {item.application_session &&\n                                          item.application_session\n                                            .session_plan_name}{\" \"}\n                                        -{\" \"}\n                                        {item.application_session &&\n                                          item.application_session.period}\n                                      </span>\n                                      <div className=\"flex flex-row gap-2\">\n                                        <span\n                                          className={`${\n                                            item.application_status !==\n                                            ApplicationStates.Initiated\n                                              ? item.application_status ===\n                                                ApplicationStates.Rejected\n                                                ? \"text-gray-500\"\n                                                : item.application_status ===\n                                                  ApplicationStates.Shortlisted\n                                                ? \"text-gray-500\"\n                                                : \"text-gray-500\"\n                                              : \"text-gray-500\"\n                                          }`}\n                                        >\n                                          Date:\n                                        </span>\n                                        <span\n                                          className={`${\n                                            item.application_status !==\n                                            ApplicationStates.Initiated\n                                              ? item.application_status ===\n                                                ApplicationStates.Rejected\n                                                ? \"text-gray-800\"\n                                                : item.application_status ===\n                                                  ApplicationStates.Shortlisted\n                                                ? \"text-gray-800\"\n                                                : \"text-gray-800\"\n                                              : \"text-black\"\n                                          } font-bold`}\n                                        >\n                                          {DATE(item.createdAt, \"DD/MM/YYYY\")}\n                                        </span>\n                                      </div>\n                                    </div>\n                                  </div>\n                                </div>\n                              </div>\n                              <div className=\"col-span-12 md:col-span-4 flex md:justify-end items-center\">\n                                {/* Action */}\n                                <div className=\"flex flex-row items-center justify-end gap-2 w-full\">\n                                  {/* <div className=\"btn bg-gray-100 text-gray-600\">\n                                    Details\n                                  </div> */}\n                                  {item.application_status ===\n                                    ApplicationStates.Shortlisted && (\n                                    <div\n                                      className=\"mt-2 md:mt-0\"\n                                      title=\"Choose the Province, Choose the District, etc.\"\n                                      onClick={() => {\n                                        this.props.SelectUserApplication(item);\n                                      }}\n                                    >\n                                      <Link to=\"/placement-contract\">\n                                        <div className=\"rounded px-2 py-1 font-bold bg-blue-50 text-blue-600 group-hover:bg-blue-600 group-hover:text-white\">\n                                          <span>Placement agreement</span>\n                                        </div>\n                                      </Link>\n                                    </div>\n                                  )}\n                                  {item.application_status ===\n                                  ApplicationStates.Rejected ? (\n                                    <div className=\"rounded border border-blue-500 px-2 py-1 bg-blue-100 group-hover:bg-blue-600 text-blue-600 group-hover:text-white cursor-pointer mt-2 md:mt-0 font-bold\">\n                                      Rejection Claiming\n                                    </div>\n                                  ) : (\n                                    <div className=\"rounded px-2 py-2 bg-gray-100 hover:bg-gray-200 text-gray-600 cursor-pointer mt-2 md:mt-0 font-bold\">\n                                      Details\n                                    </div>\n                                  )}\n                                </div>\n                              </div>\n                            </div>\n                          </div>\n                        ))\n                      )}\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </>\n        )}\n\n        {this.state.showPeriodFilter === true && (\n          <Modal\n            title={<div className=\"text-2xl\">Choose a period</div>}\n            backDrop={true}\n            theme={Themes.default}\n            close={() => this.setState({ showPeriodFilter: false })}\n            backDropClose={true}\n            widthSizeClass={ModalSize.extraLarge}\n            displayClose={true}\n            padding={{ title: true, body: false }}\n          >\n            <ApplicationPeriods\n              applicationPeriods={this.props.periods.applicationPeriods}\n              setSelectedPeriod={this.props.setSelectedPeriod}\n              showPeriodFilter={this.setShowFilterStatus}\n            />\n          </Modal>\n        )}\n        {this.state.viewSchools !== null && (\n          <Modal\n            title={\n              <div className=\"flex flex-col\">\n                <span className=\"text-4xl font-extrabold text-blue-600\">\n                  {this.state.viewSchools.position.position_title}\n                </span>\n                <span className=\"text-base\">View placement schools</span>\n              </div>\n            }\n            backDrop={true}\n            theme={Themes.default}\n            close={() => this.setState({ viewSchools: null })}\n            backDropClose={true}\n            widthSizeClass={ModalSize.extraLarge}\n            displayClose={true}\n            padding={{ title: true, body: false }}\n          >\n            <CandidatePlacementCheck\n              position={this.state.viewSchools}\n              user={this.props.auth.user}\n            />\n          </Modal>\n        )}\n      </Fragment>\n    );\n  }\n}\n\nconst mapStateToProps = ({\n  auth,\n  application,\n  periods,\n  system,\n  positions,\n  candidateApplications,\n  candidateExam,\n  course,\n  doExam,\n}: StoreState): {\n  auth: Auth;\n  application: applicationStoreInterface;\n  periods: applicationPeriodsStoreInterface;\n  system: System;\n  positions: positionsStoreInterface;\n  candidateApplications: CandidateApplicationsStoreInterface;\n  candidateExam: candidateExamStoreInterface;\n  course: courseStoreInterface;\n  doExam: examDataInterface;\n} => {\n  return {\n    auth: auth,\n    application: application,\n    periods,\n    system: system,\n    positions: positions,\n    candidateApplications: candidateApplications,\n    candidateExam: candidateExam,\n    course: course,\n    doExam: doExam,\n  };\n};\n\nexport const ApplicationsDashboard = connect(mapStateToProps, {\n  initiateApplication,\n  removeLocation,\n  loadApplicationPeriods,\n  setSelectedPeriod,\n  PushPopupAlert,\n  loadAllPositions,\n  FC_Access,\n  LoadCandidateApplications,\n  InitializeExamDetails,\n  loadExamsDone,\n  setSelectedPosition,\n  setSelectedCourse,\n  setSelectedCandidateExam,\n  AddUserApplication,\n  RemoveUserApplication,\n  SelectUserApplication,\n})(_ApplicationsDashboard);\n"],"sourceRoot":""}
{"version":3,"sources":["actions/session.ts","actions/schools.ts","interfaces/marks_publication.ts","containers/HeadTeacher/ReceivePost.tsx","containers/HeadTeacher/ViewRequest.tsx","containers/HeadTeacher/RequestList.tsx","containers/HeadTeacher/StepsHeader.tsx","containers/HeadTeacher/RequestPostForm.tsx","containers/HeadTeacher/RequestTeacher.tsx"],"names":["GetPlansTypes","callback","dispatch","a","setAxiosToken","axios","get","API","CLAIMING","res","console","log","GET_PLANS_TYPES","data","plan_types","status","length","type","ActionTypes","payload","error","errorToText","setSelectedPlanType","thisType","SELECT_PLAN_TYPE","getActiveSessionPlan","GET_ACTIVE_SESSION_PLANS","session_plan","undefined","is_active","GetAllSessionPlans","GET_ALL_SESSION_PLANS","session_data","createSessionPlan","CREATE_SESSION_PLAN","updateSessionPlan","UPDATE_SESSION_PLAN","sessionActivation","SESSION_ACTIVATION","deleteSessionPlan","DELETE_SESSION_PLAN","createAcademicSession","CREATE_ACADEMIC_SESSION","GetAllAcademicSession","PLACEMENT","GET_ALL_ACADEMIC_SESSION","updateAcademicSession","UPDATE_ACADEMIC_SESSION","academicSessionActivation","ACADEMIC_SESSION_ACTIVATION","deleteAcademicSession","DELETE_ACADEMIC_SESSION","getActiveAcademicSession","GET_ACTIVE_ACADEMIC_SESSION","getSchools","APPLICATION","GET_SCHOOLS","getSchoolById","schoolId","GET_SCHOOLS_BY_ID","createSchool","schools","CREATE_SCHOOL","updateSchool","UPDATE_SCHOOL","deleteSchool","DELETE_SCHOOL","fetchSchoolPosts","school_id","schoolPosts","FETCH_SCHOOL_POSTS","getSchoolPlacement","GET_SCHOOL_PLACEMENT","createSchoolPost","CREATE_SCHOOL_POST","updateSchoolPost","TYPE","UPDATE_SCHOOL_POST","fetchDistrictPosts","district_id","FETCH_DISTRICT_POSTS","getDistrictPlacement","GET_DISTRICT_PLACEMENT","getInstitutePlacementLimit","institute_id","session_id","GET_INSTITUTE_PLACEMENT_LIMIT","getDistrictPlacementLimit","GET_DISTRICT_PLACEMENT_LIMIT","updateInstitutePlacementLimit","UPDATE_INSTITUTE_PLACEMENT_LIMIT","MarksPublicationCandidateStatus","marksPublicationCandidateReportContentKeyInterface","PlacedCandidateStatus","placementReportContentKeyInterface","postShowStatus","showRequestStatus","placed","received","rejected","PostRequestStatusInterface","RECEIVED","ALL_RECEIVED","ALL_REJECTED","RECEIVED_REJECTED","PARTIAL_RECEIVED_REJECTED","PARTIAL_RECEIVED","PARTIAL_REJECTED","CONFIRMED","PENDING","ReceivePost","props","setThisPlacement","value","setState","thisPlacement","setAction","action","setTakeAction","takeAction","submitRequest","isEmptyOrSpaces","state","comment","setFormError","element","msg","thisPost","received_posts","setLoadingRequest","patch","_id","confirmed_posts","confirmed_by","auth","user","user_id","approval_date","position_id","needed_posts","male_number","female_number","description","occupied_posts","requested_by","requested_post_status","confirmPlacement","role_error","PushPopupAlert","title","theme","PopupAlertTheme","danger","post","placedStatus","waiting_list_id","placed_candidate_id","REJECTED","PLACED","user_access","message","loadingPost","setLoadingPost","getSchoolPlacementError","placement_id","viewPost","setThisPost","setReceivedPosts","setModalState","info","className","this","loadingRequest","disabled","onClick","getPositionById","systemPositions","position_title","id","INITIATED","getPlacementByRequest","placementList","thisPosition","isGuest","map","item","index","src","AUTH_FILES","user_info","photo","alt","loading","fname","lname","phone_number","email","formError","placeholder","onChange","e","target","style","resize","confirmFun","setModalAction","modalType","ActionConfirmEnum","INFO","Component","connect","ViewRequest","Modal","backDrop","Themes","default","close","setViewPost","displayClose","backDropClose","widthSizeClass","ModalSize","large","padding","body","footer","schoolPlacements","capitalizeFirstLetter","setPostId","setPositionId","setRequestedPosts","setRequestExplanation","setFemaleOnPosition","setMaleOnPosition","setFormSteps","ONE","TWO","setStepState","RequestList","setSearchInput","searchInput","setFilterByPosition","filterByPosition","position","schoolPost","colSpan","NoResult","NoResultThemes","Dark","modalState","StepsHeader","currentStep","stepState","RequestPostForm","GetAllowedPositions","postPositionIds","key","Object","prototype","hasOwnProperty","call","push","filter","includes","preventDefault","requestedPosts","requestExplanation","thisSchool","mySchool","postId","positionId","maleOnPosition","femaleOnPosition","Number","post_request_session_id","sessionId","success","setSchoolLevel","selectedLevel","getPositionByLevelId","allPosition","levelId","school_level_id","formSteps","schoolLevels","school_levels","school_level_name","ViewPosition","onSubmit","htmlFor","min","name","rows","system_settings","placements","request","request_id","RequestTeacher","setLoading","receivedPosts","loadData","loadingCandidatesError","getPositions","loadSchoolLevels","componentDidMount","to","activeAcademicSession","find","PostRequest","sessionPlan"],"mappings":"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","file":"static/js/47.04b98bfd.chunk.js","sourcesContent":["import axios from \"axios\";\nimport { Dispatch } from \"redux\";\nimport { ActionTypes } from \"./types\";\nimport { API } from \"../utils/api\";\nimport { setAxiosToken } from \"../utils/AxiosToken\";\nimport { errorToText } from \"../utils/errors\";\nimport {\n  AcademicSessionInterface,\n  PlansTypeInterface,\n  SessionPlanInterface,\n} from \"../interfaces\";\n\n/**\n * * ****************************** INTERFACES *****************************\n */\n\n// GET ACTIVE PLAN TYPES\nexport interface GetPlansTypesAction {\n  type: ActionTypes.GET_PLANS_TYPES;\n  payload: PlansTypeInterface[];\n}\n\n// GET INACTIVE PLAN TYPES\nexport interface GetDeletedPlansTypesAction {\n  type: ActionTypes.GET_DELETED_PLANS_TYPES;\n  payload: PlansTypeInterface[];\n}\n\n// CREATE PLAN TYPE\nexport interface CreatePlansTypeAction {\n  type: ActionTypes.CREATE_PLAN_TYPE;\n  payload: PlansTypeInterface;\n}\n\n// UPDATE PLAN TYPE\nexport interface UpdatePlansTypeAction {\n  type: ActionTypes.UPDATE_PLAN_TYPE;\n  payload: PlansTypeInterface;\n}\n\n// DELETE PLAN TYPE\nexport interface DeletePlansTypeAction {\n  type: ActionTypes.DELETE_PLAN_TYPE;\n  payload: PlansTypeInterface;\n}\n\n// SET PLAN TYPE =====================================\nexport interface setSelectedPlanTypeActions {\n  type: ActionTypes.SELECT_PLAN_TYPE;\n  payload: PlansTypeInterface | \"all\";\n}\n\n// GET ALL SESSION PLAN\nexport interface GetAllSessionPlansAction {\n  type: ActionTypes.GET_ALL_SESSION_PLANS;\n  payload: SessionPlanInterface[];\n}\n\n// GET ACTIVE SESSION PLAN\nexport interface GetActiveSessionPlanAction {\n  type: ActionTypes.GET_ACTIVE_SESSION_PLANS;\n  payload: SessionPlanInterface | \"none\";\n}\n\n// CREATE SESSION PLAN\nexport interface CreateSessionPlansAction {\n  type: ActionTypes.CREATE_SESSION_PLAN;\n  payload: SessionPlanInterface;\n}\n\n// UPDATE SESSION PLAN\nexport interface UpdateSessionPlansAction {\n  type: ActionTypes.UPDATE_SESSION_PLAN;\n  payload: SessionPlanInterface;\n}\n\n// ACTIVATE SESSION PLAN\nexport interface ActivateSessionPlansAction {\n  type: ActionTypes.SESSION_ACTIVATION;\n  payload: SessionPlanInterface;\n}\n\n// DELETE SESSION PLAN\nexport interface DeleteSessionPlanAction {\n  type: ActionTypes.DELETE_SESSION_PLAN;\n  payload: string;\n}\n\n// GET ALL ACADEMIC SESSION\nexport interface GetAllAcademicSessionAction {\n  type: ActionTypes.GET_ALL_ACADEMIC_SESSION;\n  payload: AcademicSessionInterface[];\n}\n\n// CREATE ACADEMIC SESSION\nexport interface CreateAcademicSessionAction {\n  type: ActionTypes.CREATE_ACADEMIC_SESSION;\n  payload: AcademicSessionInterface;\n}\n\n// UPDATE ACADEMIC SESSION\nexport interface UpdateAcademicSessionAction {\n  type: ActionTypes.UPDATE_ACADEMIC_SESSION;\n  payload: AcademicSessionInterface;\n}\n\n// ACTIVATE ACADEMIC SESSION\nexport interface ActivateAcademicSessionAction {\n  type: ActionTypes.ACADEMIC_SESSION_ACTIVATION;\n  payload: AcademicSessionInterface;\n}\n\n// DELETE ACADEMIC SESSION\nexport interface DeleteAcademicSessionAction {\n  type: ActionTypes.DELETE_ACADEMIC_SESSION;\n  payload: string;\n}\n\n// GET ACTIVE ACADEMIC SESSION\nexport interface GetActiveAcademicSessionAction {\n  type: ActionTypes.GET_ACTIVE_ACADEMIC_SESSION;\n  payload: AcademicSessionInterface | \"none\";\n}\n\nexport type SessionActionType =\n  | GetPlansTypesAction\n  | GetDeletedPlansTypesAction\n  | CreatePlansTypeAction\n  | UpdatePlansTypeAction\n  | DeletePlansTypeAction\n  | GetAllSessionPlansAction\n  | GetActiveSessionPlanAction\n  | CreateSessionPlansAction\n  | UpdateSessionPlansAction\n  | ActivateSessionPlansAction\n  | DeleteSessionPlanAction\n  | setSelectedPlanTypeActions\n  | GetAllAcademicSessionAction\n  | CreateAcademicSessionAction\n  | UpdateAcademicSessionAction\n  | ActivateAcademicSessionAction\n  | DeleteAcademicSessionAction\n  | GetActiveAcademicSessionAction;\n\n/**\n * * ****************************** ACTIONS *****************************\n */\n\n// GET ACTIVE PLAN TYPES ==========================\nexport const GetPlansTypes = (callback: Function) => {\n  callback(true, \"\");\n  return async (dispatch: Dispatch) => {\n    try {\n      setAxiosToken();\n      const res = await axios.get<PlansTypeInterface[]>(\n        `${API.CLAIMING}/session-type`\n      );\n      console.log({ GET_PLANS_TYPES: res.data });\n      let plan_types: PlansTypeInterface[] = [];\n      if (res.status === 200) {\n        // setApplications(res.data);\n        if (res.data !== null && res.data.length > 0) {\n          plan_types = res.data;\n        }\n      }\n      dispatch<GetPlansTypesAction>({\n        type: ActionTypes.GET_PLANS_TYPES,\n        payload: plan_types,\n      });\n      callback(false, \"\");\n    } catch (error) {\n      console.error({ error: errorToText(error) });\n      callback(false, errorToText(error));\n    }\n  };\n};\n\n// GET ACTIVE PLAN TYPES ==========================\nexport const GetDeletedPlansTypes = (callback: Function) => {\n  callback(true, \"\");\n  return async (dispatch: Dispatch) => {\n    try {\n      setAxiosToken();\n      const res = await axios.get<PlansTypeInterface[]>(\n        `${API.CLAIMING}/session-type/deleted`\n      );\n      console.log({ GET_DELETED_PLANS_TYPES: res.data });\n      let plan_types: PlansTypeInterface[] = [];\n      if (res.status === 200) {\n        // setApplications(res.data);\n        if (res.data !== null && res.data.length > 0) {\n          plan_types = res.data;\n        }\n      }\n      dispatch<GetDeletedPlansTypesAction>({\n        type: ActionTypes.GET_DELETED_PLANS_TYPES,\n        payload: plan_types,\n      });\n      callback(false, \"\");\n    } catch (error) {\n      console.error({ error: errorToText(error) });\n      callback(false, errorToText(error));\n    }\n  };\n};\n\n// CREATE PLAN TYPE\nexport const createPlanType = (\n  data: PlansTypeInterface\n): CreatePlansTypeAction => {\n  return {\n    type: ActionTypes.CREATE_PLAN_TYPE,\n    payload: data,\n  };\n};\n\n// UPDATE PLAN TYPE\nexport const updatePlanType = (\n  data: PlansTypeInterface\n): UpdatePlansTypeAction => {\n  return {\n    type: ActionTypes.UPDATE_PLAN_TYPE,\n    payload: data,\n  };\n};\n\n// DELETE PLAN TYPE\nexport const deletePlanType = (\n  data: PlansTypeInterface\n): DeletePlansTypeAction => {\n  return {\n    type: ActionTypes.DELETE_PLAN_TYPE,\n    payload: data,\n  };\n};\n\n// SELECT PLAN TYPES ==========================\nexport const setSelectedPlanType = (\n  thisType: PlansTypeInterface | \"all\"\n): setSelectedPlanTypeActions => {\n  console.log({ thisType });\n  return {\n    type: ActionTypes.SELECT_PLAN_TYPE,\n    payload: thisType,\n  };\n};\n\n// GET ACTIVE PLAN TYPES ==========================\nexport const getActiveSessionPlan = (callback: Function) => {\n  callback(true, \"\");\n  return async (dispatch: Dispatch) => {\n    try {\n      setAxiosToken();\n      const res = await axios.get<SessionPlanInterface>(\n        `${API.CLAIMING}/session/active/`\n      );\n      console.log({ GET_ACTIVE_SESSION_PLANS: res.data });\n      let session_plan: SessionPlanInterface | undefined = undefined;\n      // if (res.status === 200) {\n      //   // setApplications(res.data);\n      // }\n      if (res.data && res.data.is_active !== undefined) {\n        session_plan = res.data;\n      }\n      console.log({ session_plan: res.data });\n\n      dispatch<GetActiveSessionPlanAction>({\n        type: ActionTypes.GET_ACTIVE_SESSION_PLANS,\n        payload: session_plan ? session_plan : \"none\",\n      });\n      callback(false, \"\", session_plan ? session_plan : \"none\");\n    } catch (error) {\n      console.error({ error: errorToText(error) });\n      callback(false, errorToText(error));\n    }\n  };\n};\n\n// GET ALL PLAN TYPES ==========================\nexport const GetAllSessionPlans = (callback: Function) => {\n  callback(true, \"\");\n  return async (dispatch: Dispatch) => {\n    try {\n      setAxiosToken();\n      const res = await axios.get<SessionPlanInterface[]>(\n        `${API.CLAIMING}/session/`\n      );\n      console.log({ GET_ALL_SESSION_PLANS: res.data });\n      let session_data: SessionPlanInterface[] = [];\n      if (res.status === 200) {\n        // setApplications(res.data);\n        if (res.data !== null && res.data.length > 0) {\n          session_data = res.data;\n        }\n      }\n      dispatch<GetAllSessionPlansAction>({\n        type: ActionTypes.GET_ALL_SESSION_PLANS,\n        payload: session_data,\n      });\n      callback(false, \"\", session_data);\n    } catch (error) {\n      console.error({ error: errorToText(error) });\n      callback(false, errorToText(error));\n    }\n  };\n};\n\n// CREATE SESSION PLAN\nexport const createSessionPlan = (\n  data: SessionPlanInterface\n): CreateSessionPlansAction => {\n  return {\n    type: ActionTypes.CREATE_SESSION_PLAN,\n    payload: data,\n  };\n};\n\n// UPDATE SESSION PLAN\nexport const updateSessionPlan = (\n  data: SessionPlanInterface\n): UpdateSessionPlansAction => {\n  return {\n    type: ActionTypes.UPDATE_SESSION_PLAN,\n    payload: data,\n  };\n};\n\n// ACTIVATE SESSION PLAN\nexport const sessionActivation = (\n  data: SessionPlanInterface\n): ActivateSessionPlansAction => {\n  return {\n    type: ActionTypes.SESSION_ACTIVATION,\n    payload: data,\n  };\n};\n\n// DELETE SESSION PLAN\nexport const deleteSessionPlan = (data: string): DeleteSessionPlanAction => {\n  return {\n    type: ActionTypes.DELETE_SESSION_PLAN,\n    payload: data,\n  };\n};\n\n// CREATE ACADEMIC SESSION\nexport const createAcademicSession = (\n  data: AcademicSessionInterface\n): CreateAcademicSessionAction => {\n  return {\n    type: ActionTypes.CREATE_ACADEMIC_SESSION,\n    payload: data,\n  };\n};\n\n// GET ALL ACADEMIC SESSION ==========================\nexport const GetAllAcademicSession = (callback: Function) => {\n  callback(true, \"\");\n  return async (dispatch: Dispatch) => {\n    try {\n      setAxiosToken();\n      const res = await axios.get<AcademicSessionInterface[]>(\n        `${API.PLACEMENT}/postrequestperiod/`\n      );\n      console.log({ GET_ALL_SESSION_PLANS: res.data });\n      let session_data: AcademicSessionInterface[] = [];\n      if (res.status === 200) {\n        // setApplications(res.data);\n        if (res.data !== null && res.data.length > 0) {\n          session_data = res.data;\n        }\n      }\n      console.log(\"====================================\");\n      console.log({ GetAllAcademicSession: res });\n      console.log(\"====================================\");\n      dispatch<GetAllAcademicSessionAction>({\n        type: ActionTypes.GET_ALL_ACADEMIC_SESSION,\n        payload: session_data,\n      });\n      callback(false, \"\", session_data);\n    } catch (error) {\n      console.error({ error: errorToText(error) });\n      callback(false, errorToText(error));\n    }\n  };\n};\n\n// UPDATE ACADEMIC SESSION\nexport const updateAcademicSession = (\n  data: AcademicSessionInterface\n): UpdateAcademicSessionAction => {\n  return {\n    type: ActionTypes.UPDATE_ACADEMIC_SESSION,\n    payload: data,\n  };\n};\n\n// ACTIVATE ACADEMIC SESSION\nexport const academicSessionActivation = (\n  data: AcademicSessionInterface\n): ActivateAcademicSessionAction => {\n  return {\n    type: ActionTypes.ACADEMIC_SESSION_ACTIVATION,\n    payload: data,\n  };\n};\n\n// DELETE ACADEMIC SESSION\nexport const deleteAcademicSession = (\n  data: string\n): DeleteAcademicSessionAction => {\n  return {\n    type: ActionTypes.DELETE_ACADEMIC_SESSION,\n    payload: data,\n  };\n};\n\n// GET ACTIVE PLAN TYPES ==========================\nexport const getActiveAcademicSession = (callback: Function) => {\n  callback(true, \"\");\n  return async (dispatch: Dispatch) => {\n    try {\n      setAxiosToken();\n      const res = await axios.get<AcademicSessionInterface>(\n        `${API.PLACEMENT}/postrequestperiod/one`\n      );\n      console.log({ GET_ACTIVE_ACADEMIC_SESSION: res.data });\n      let session_plan: AcademicSessionInterface | undefined = undefined;\n      // if (res.status === 200) {\n      //   // setApplications(res.data);\n      // }\n      if (res.data) {\n        session_plan = res.data;\n      }\n      console.log({ session_plan: res.data });\n\n      dispatch<GetActiveAcademicSessionAction>({\n        type: ActionTypes.GET_ACTIVE_ACADEMIC_SESSION,\n        payload: session_plan ? session_plan : \"none\",\n      });\n      callback(false, \"\", session_plan ? session_plan : \"none\");\n    } catch (error) {\n      console.error({ error: errorToText(error) });\n      callback(false, errorToText(error));\n    }\n  };\n};\n","import { Dispatch } from \"redux\";\nimport { ActionTypes } from \"./types\";\nimport {\n  MySchoolInterface,\n  PostSchoolInterface,\n  SchoolInfoInterface,\n  SchoolsInterface,\n} from \"../shared/interfaces\";\n// import { setAxiosToken } from \"../utils/AxiosToken\";\nimport axios from \"axios\";\nimport { API } from \"../utils/api\";\nimport { errorToText } from \"../utils/errors\";\nimport { placedCandidateInterface } from \"../interfaces/marks_publication\";\nimport { PlacementListInterface } from \"../containers/PlacementLimit/PlacementLimit\";\n\n/**\n * * ****************************** INTERFACES *****************************\n */\n\nexport interface GetSchoolsAction {\n  type: ActionTypes.GET_SCHOOLS;\n  payload: SchoolsInterface[];\n}\n\nexport interface GetSchoolByIdAction {\n  type: ActionTypes.GET_SCHOOLS_BY_ID;\n  payload: MySchoolInterface;\n}\n\nexport interface GetSchoolsInfoAction {\n  type: ActionTypes.GET_SCHOOLS_INFO;\n  payload: SchoolInfoInterface[];\n}\n\nexport interface CreateSchoolAction {\n  type: ActionTypes.CREATE_SCHOOL;\n  payload: SchoolsInterface;\n}\n\nexport interface UpdateSchoolAction {\n  type: ActionTypes.UPDATE_SCHOOL;\n  payload: SchoolsInterface;\n}\n\nexport interface DeleteSchoolAction {\n  type: ActionTypes.DELETE_SCHOOL;\n  payload: string;\n}\n\n// School Posts interfaces\nexport interface FetchSchoolPostsAction {\n  type: ActionTypes.FETCH_SCHOOL_POSTS;\n  payload: PostSchoolInterface[];\n}\n\n// School Placements interfaces\nexport interface GetSchoolPlacementAction {\n  type: ActionTypes.GET_SCHOOL_PLACEMENT;\n  payload: placedCandidateInterface[];\n}\n\n// District School Placements interfaces\nexport interface GetDistrictPlacementAction {\n  type: ActionTypes.GET_DISTRICT_PLACEMENT;\n  payload: placedCandidateInterface[];\n}\n\n// District School Placements interfaces\nexport interface GetSessionPlacementAction {\n  type: ActionTypes.GET_SESSION_PLACEMENT;\n  payload: placedCandidateInterface[];\n}\n\nexport interface FetchDistrictPostsAction {\n  type: ActionTypes.FETCH_DISTRICT_POSTS;\n  payload: PostSchoolInterface[];\n}\n\nexport interface CreateSchoolPostAction {\n  type: ActionTypes.CREATE_SCHOOL_POST;\n  payload: PostSchoolInterface;\n}\n\nexport interface UpdateSchoolPostAction {\n  type: ActionTypes.UPDATE_SCHOOL_POST;\n  payload: {\n    TYPE: \"DISTRICT\" | \"SCHOOL\" | \"RECEIVED\";\n    data: PostSchoolInterface;\n  };\n}\n\nexport interface DeleteSchoolPostAction {\n  type: ActionTypes.DELETE_SCHOOL_POST;\n  payload: PostSchoolInterface[];\n}\n\n// Get Institute Limit Posts Action interfaces\nexport interface GetInstitutePlacementLimitAction {\n  type: ActionTypes.GET_INSTITUTE_PLACEMENT_LIMIT;\n  payload: PlacementListInterface[];\n}\n\nexport interface GetDistrictPlacementLimitAction {\n  type: ActionTypes.GET_DISTRICT_PLACEMENT_LIMIT;\n  payload: PlacementListInterface[];\n}\n\nexport interface UpdateInstitutePlacementLimitAction {\n  type: ActionTypes.UPDATE_INSTITUTE_PLACEMENT_LIMIT;\n  payload: { limit_id: string; confirmed_post: number };\n}\n\nexport type SchoolActionType =\n  | GetSchoolsAction\n  | GetSchoolByIdAction\n  | GetSchoolsInfoAction\n  | CreateSchoolAction\n  | UpdateSchoolAction\n  | DeleteSchoolAction\n  | FetchSchoolPostsAction\n  | GetSchoolPlacementAction\n  | FetchDistrictPostsAction\n  | CreateSchoolPostAction\n  | UpdateSchoolPostAction\n  | DeleteSchoolPostAction\n  | GetDistrictPlacementAction\n  | GetSessionPlacementAction\n  | GetInstitutePlacementLimitAction\n  | GetDistrictPlacementLimitAction\n  | UpdateInstitutePlacementLimitAction;\n\n/**\n * * ****************************** ACTIONS *****************************\n */\n\nexport const getSchools = (callback: Function) => {\n  callback(true, \"\");\n  return async (dispatch: Dispatch) => {\n    try {\n      const res = await axios.get<SchoolsInterface[]>(\n        `${API.APPLICATION}/schools`\n      );\n      dispatch<GetSchoolsAction>({\n        type: ActionTypes.GET_SCHOOLS,\n        payload: res.data,\n      });\n      callback(false, \"\", res.data);\n    } catch (error) {\n      console.log(\"Err: \", error);\n      callback(false, errorToText(error));\n    }\n  };\n};\n\nexport const getSchoolById = (schoolId: string, callback: Function) => {\n  return async (dispatch: Dispatch) => {\n    callback(true, \"\");\n    try {\n      const res = await axios.get<MySchoolInterface>(\n        `${API.APPLICATION}/schools/${schoolId}`\n      );\n      dispatch<GetSchoolByIdAction>({\n        type: ActionTypes.GET_SCHOOLS_BY_ID,\n        payload: res.data,\n      });\n      callback(false, \"\", res.data);\n    } catch (error) {\n      console.log(\"Err: \", error);\n      callback(false, errorToText(error));\n    }\n  };\n};\n\n// export const getSchoolsInfo = () => {\n//   return async (dispatch: Dispatch) => {\n//     setAxiosToken();\n//     const response = await axios.get<SchoolInfoInterface[]>(url);\n\n//     dispatch<GetSchoolsInfoAction>({\n//       type: ActionTypes.GET_SCHOOLS_INFO,\n//       payload: response.data,\n//     });\n//   };\n// };\n\nexport const createSchool = (data: SchoolsInterface) => {\n  console.log({ schools: data });\n  return async (dispatch: Dispatch) => {\n    dispatch<CreateSchoolAction>({\n      type: ActionTypes.CREATE_SCHOOL,\n      payload: data,\n    });\n  };\n};\n\nexport const updateSchool = (data: SchoolsInterface) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<UpdateSchoolAction>({\n      type: ActionTypes.UPDATE_SCHOOL,\n      payload: data,\n    });\n  };\n};\n\nexport const deleteSchool = (data: string) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<DeleteSchoolAction>({\n      type: ActionTypes.DELETE_SCHOOL,\n      payload: data,\n    });\n  };\n};\n\nexport const fetchSchoolPosts = (school_id: string, callback: Function) => {\n  return async (dispatch: Dispatch) => {\n    callback(true, \"\");\n    try {\n      const res = await axios.get<PostSchoolInterface[]>(\n        `${API.PLACEMENT}/requestpost/school/${school_id}`\n      );\n\n      console.log(\"====================================\");\n      console.log({ schoolPosts: res });\n      console.log(\"====================================\");\n\n      dispatch<FetchSchoolPostsAction>({\n        type: ActionTypes.FETCH_SCHOOL_POSTS,\n        payload: res.data,\n      });\n      callback(false, \"\");\n    } catch (error) {\n      console.log(\"Err: \", error);\n      callback(false, errorToText(error));\n    }\n  };\n};\n\nexport const getSchoolPlacement = (school_id: string, callback: Function) => {\n  return async (dispatch: Dispatch) => {\n    callback(true, \"\");\n    try {\n      const res = await axios.get<placedCandidateInterface[]>(\n        `${API.PLACEMENT}/placedcandidate/school/${school_id}`\n      );\n\n      console.log({ getSchoolPlacement: res.data });\n\n      dispatch<GetSchoolPlacementAction>({\n        type: ActionTypes.GET_SCHOOL_PLACEMENT,\n        payload: res.data,\n      });\n      callback(false, \"\", res.data);\n    } catch (error) {\n      console.log(\"Err: \", error);\n      callback(false, errorToText(error));\n    }\n  };\n};\n\nexport const createSchoolPost = (data: PostSchoolInterface) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<CreateSchoolPostAction>({\n      type: ActionTypes.CREATE_SCHOOL_POST,\n      payload: data,\n    });\n  };\n};\n\nexport const updateSchoolPost = (\n  TYPE: \"DISTRICT\" | \"SCHOOL\" | \"RECEIVED\",\n  data: PostSchoolInterface\n) => {\n  console.log({ TYPE, data });\n  return async (dispatch: Dispatch) => {\n    dispatch<UpdateSchoolPostAction>({\n      type: ActionTypes.UPDATE_SCHOOL_POST,\n      payload: { TYPE, data },\n    });\n  };\n};\n\nexport const deleteSchoolPost = (data: PostSchoolInterface[]) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<DeleteSchoolPostAction>({\n      type: ActionTypes.DELETE_SCHOOL_POST,\n      payload: data,\n    });\n  };\n};\n\nexport const fetchDistrictPosts = (district_id: string, callback: Function) => {\n  return async (dispatch: Dispatch) => {\n    callback(true, \"\");\n    try {\n      const res = await axios.get<PostSchoolInterface[]>(\n        `${API.PLACEMENT}/requestpost/district/${district_id}`\n      );\n\n      console.log(\"====================================\");\n      console.log({ fetchDistrictPosts: res });\n      console.log(\"====================================\");\n\n      dispatch<FetchDistrictPostsAction>({\n        type: ActionTypes.FETCH_DISTRICT_POSTS,\n        payload: res.data,\n      });\n      callback(false, \"\");\n    } catch (error) {\n      console.log(\"Err: \", error);\n      callback(false, errorToText(error));\n    }\n  };\n};\n\nexport const getDistrictPlacement = (\n  district_id: string,\n  callback: Function\n) => {\n  return async (dispatch: Dispatch) => {\n    callback(true, \"\");\n    try {\n      const res = await axios.get<placedCandidateInterface[]>(\n        `${API.PLACEMENT}/placedcandidate/district/${district_id}`\n      );\n\n      console.log(\"====================================\");\n      console.log({ getDistrictPlacement: res.data });\n      console.log(\"====================================\");\n\n      dispatch<GetDistrictPlacementAction>({\n        type: ActionTypes.GET_DISTRICT_PLACEMENT,\n        payload: res.data,\n      });\n      callback(false, \"\", res.data);\n    } catch (error) {\n      console.log(\"Err: \", error);\n      callback(false, errorToText(error));\n    }\n  };\n};\n\nexport const getSessionPlacement = (session_id: string, callback: Function) => {\n  return async (dispatch: Dispatch) => {\n    callback(true, \"\");\n    try {\n      const res = await axios.get<placedCandidateInterface[]>(\n        `${API.PLACEMENT}/placedcandidate/session/${session_id}`\n      );\n\n      console.log(\"====================================\");\n      console.log({ getSessionPlacement: res.data });\n      console.log(\"====================================\");\n\n      dispatch<GetSessionPlacementAction>({\n        type: ActionTypes.GET_SESSION_PLACEMENT,\n        payload: res.data,\n      });\n      callback(false, \"\", res.data);\n    } catch (error) {\n      console.log(\"Err: \", error);\n      callback(false, errorToText(error));\n    }\n  };\n};\n\nexport const getInstitutePlacementLimit = (\n  institute_id: string,\n  session_id: string,\n  callback: Function\n) => {\n  return async (dispatch: Dispatch) => {\n    callback(true, \"\");\n    try {\n      const res = await axios.get<PlacementListInterface[]>(\n        `${API.PLACEMENT}/confirmedpostrequest/institute/${institute_id}/${session_id}`\n      );\n\n      console.log(\"====================================\");\n      console.log({ getInstitutePlacementLimit: res.data });\n      console.log(\"====================================\");\n\n      dispatch<GetInstitutePlacementLimitAction>({\n        type: ActionTypes.GET_INSTITUTE_PLACEMENT_LIMIT,\n        payload: res.data,\n      });\n      callback(false, \"\", res.data);\n    } catch (error) {\n      console.log(\"Err: \", error);\n      callback(false, errorToText(error));\n    }\n  };\n};\n\nexport const getDistrictPlacementLimit = (\n  district_id: string,\n  session_id: string,\n  callback: Function\n) => {\n  return async (dispatch: Dispatch) => {\n    callback(true, \"\");\n    try {\n      const res = await axios.get<PlacementListInterface[]>(\n        `${API.PLACEMENT}/confirmedpostrequest/district/${district_id}/${session_id}`\n      );\n\n      console.log(\"====================================\");\n      console.log({ getDistrictPlacementLimit: res.data });\n      console.log(\"====================================\");\n\n      dispatch<GetDistrictPlacementLimitAction>({\n        type: ActionTypes.GET_DISTRICT_PLACEMENT_LIMIT,\n        payload: res.data,\n      });\n      callback(false, \"\", res.data);\n    } catch (error) {\n      console.log(\"Err: \", error);\n      callback(false, errorToText(error));\n    }\n  };\n};\n\nexport const updateInstitutePlacementLimit = (data: {\n  limit_id: string;\n  confirmed_post: number;\n}) => {\n  console.log(\"====================================\");\n  console.log({ updateInstitutePlacementLimit: data });\n  console.log(\"====================================\");\n  return async (dispatch: Dispatch) => {\n    dispatch<UpdateInstitutePlacementLimitAction>({\n      type: ActionTypes.UPDATE_INSTITUTE_PLACEMENT_LIMIT,\n      payload: data,\n    });\n  };\n};\n","export interface marksPublicationInterface {\n  publication_id: string;\n  session: string;\n  doneby: string;\n  created_date: string;\n  publication_status: \"PENDING\" | \"PUBLISHED\";\n  status: number;\n  publication_position_marks: publicationInterface[];\n  createdAt: string;\n  updatedAt: string;\n}\n\nexport interface publicationInterface {\n  _id: string;\n  position: string;\n  marks: number;\n  comment: string;\n}\n\nexport interface marksPublicationFormInterface {\n  session: string;\n  doneby: string;\n  created_date: string;\n  publication_position_marks: publicationFormInterface[];\n}\n\nexport interface publicationFormInterface {\n  position: string;\n  marks: number;\n  comment: string;\n}\n\nexport enum MarksPublicationCandidateStatus {\n  Failed = \"Failed\",\n  Passed = \"Passed\",\n}\n\nexport interface MarksPublicationCandidate_old {\n  user: {\n    in_eduction: boolean;\n    disability: boolean;\n    is_active: boolean;\n    n_id: string;\n    phone_number: string;\n    email: string;\n    createdAt: string;\n    updatedAt: string;\n    user_id: string;\n    user_info: placedCandidateUserInfo;\n  };\n  period: string;\n  position: string;\n  courses: {\n    id: string;\n    marks: number;\n    _id: string;\n  }[];\n  waiting_status: MarksPublicationCandidateStatus;\n  status: number;\n  user_position_marks: number;\n  createdAt: string;\n  updatedAt: string;\n  disability: boolean;\n  gender: string;\n  in_education: boolean;\n  id: string;\n}\n\nexport interface MarksPublicationCandidate {\n  _id: string;\n  user: string;\n  period: string;\n  position: string;\n  in_education: boolean;\n  n_id: string;\n  fname: string;\n  lname: string;\n  email: string;\n  phone_number: string;\n  gender: string;\n  disability: boolean;\n  courses: {\n    id: string;\n    marks: number;\n    _id: string;\n  }[];\n  waiting_status: MarksPublicationCandidateStatus;\n  status: number;\n  user_position_marks: number;\n  createdAt: string;\n  updatedAt: string;\n  __v: number;\n}\n\nexport interface MarksPublicationCandidateToPrintInterface {\n  no: number;\n  names: string;\n  national_id: string;\n  phone: string;\n  email: string;\n  gender: string;\n  position_name: string;\n  marks: number;\n  status: MarksPublicationCandidateStatus;\n}\n\nexport enum marksPublicationCandidateReportContentKeyInterface {\n  applicant_name = \"names\",\n  national_id = \"national_id\",\n  phone_number = \"phone\",\n  email = \"email\",\n  gender = \"gender\",\n  position_name = \"position_name\",\n  marks = \"marks\",\n  status = \"status\",\n}\n\nexport interface marksPublicationReportContentInterface {\n  key: marksPublicationCandidateReportContentKeyInterface;\n  title: string;\n  status: boolean;\n}\n// ---------------------------------------------------------------------------------------------\n\nexport interface placedCandidateInterface {\n  _id: string;\n  status: PlacedCandidateStatus;\n  user_id: string;\n  school_id: string;\n  position_id: string;\n  waiting_list_id: string;\n  request_id: string;\n  createdAt: string;\n  comment: string;\n  updatedAt: string;\n  __v: number;\n  n_id: string;\n  phone_number: string;\n  email: string;\n  user_info: placedCandidateUserInfo;\n  school: {\n    _id: string;\n    school_name: string;\n    school_code: string;\n    province_id: string;\n    province_code: string;\n    district_id: {\n      _id: string;\n      district_name: string;\n    };\n    district_code: string;\n    sector_code: string;\n    sector_id: string;\n    school_status: string;\n    status: number;\n    createdAt: string;\n    updatedAt: string;\n  };\n}\n\nexport interface placedCandidateUserInfo {\n  document_type: string;\n  issue_number: string;\n  date_of_issue: string;\n  date_of_expiry: string;\n  place_of_issue: string;\n  application_number: string;\n  fname: string;\n  lname: string;\n  father_names: string;\n  mother_names: string;\n  sex: string;\n  date_of_birth: string;\n  place_of_birth: string;\n  country_of_birth: string;\n  village_id: string;\n  village: string;\n  cell: string;\n  sector: string;\n  district: string;\n  province: string;\n  civil_status: string;\n  spouse: null;\n  status: string;\n  photo: string;\n}\n\nexport enum PlacedCandidateStatus {\n  PENDING = \"pending\",\n  PLACED = \"placed\",\n  REJECTED = \"rejected\",\n}\n\nexport interface PlacementToPrintInterface {\n  no: number;\n  names: string;\n  national_id: string;\n  phone: string;\n  email: string;\n  school_name: string;\n  position_name: string;\n  waiting_date: string;\n  placement_date: string;\n  status: PlacedCandidateStatus;\n}\n\nexport enum placementReportContentKeyInterface {\n  applicant_name = \"names\",\n  national_id = \"national_id\",\n  phone_number = \"phone\",\n  email = \"email\",\n  school_name = \"school_name\",\n  position_name = \"position_name\",\n  waiting_date = \"waiting_date\",\n  placement_date = \"placement_date\",\n  status = \"status\",\n}\n\nexport interface placementReportContentInterface {\n  key: placementReportContentKeyInterface;\n  title: string;\n  status: boolean;\n}\n","import axios from \"axios\";\nimport React, { Component } from \"react\";\nimport {\n  MdArrowBack,\n  MdErrorOutline,\n  MdMail,\n  MdSmartphone,\n  MdTaskAlt,\n} from \"react-icons/md\";\nimport { connect } from \"react-redux\";\nimport { Auth, PushPopupAlert } from \"../../actions\";\nimport { fetchSchoolPosts, getSchoolPlacement } from \"../../actions/schools\";\nimport ActionConfirm, {\n  ActionConfirmEnum,\n} from \"../../components/ActionConfirm/ActionConfirm\";\nimport { PopupAlertData } from \"../../components/Alert/Popup\";\nimport { PositionAPI } from \"../../interfaces\";\nimport {\n  placedCandidateInterface,\n  PlacedCandidateStatus,\n} from \"../../interfaces/marks_publication\";\nimport { PopupAlertTheme } from \"../../interfaces/popupAlert\";\nimport { StoreState } from \"../../reducers\";\nimport { getPositionById, isEmptyOrSpaces } from \"../../shared/dataTest\";\nimport {\n  PostSchoolInterface,\n  PostRequestStatusInterface,\n} from \"../../shared/interfaces\";\nimport { API } from \"../../utils/api\";\nimport { errorToText } from \"../../utils/errors\";\nimport ViewPosition from \"../Positions/ViewPosition\";\nimport { getPlacementByRequest } from \"./RequestTeacher\";\n\nexport enum postShowStatus {\n  PENDING = \"Pending\",\n  CONFIRMED = \"Confirmed\",\n  ALL_RECEIVED = \"All received\",\n  PARTIAL_RECEIVED = \"Received & Pending\",\n  ALL_REJECTED = \"All rejected\",\n  PARTIAL_REJECTED = \"Rejected & Pending\",\n  PARTIAL_RECEIVED_REJECTED = \"Received & Rejected & Pending\",\n  RECEIVED_REJECTED = \"Received & Rejected\",\n}\nexport const showRequestStatus = (\n  status: PostRequestStatusInterface,\n  placed: number,\n  received: number,\n  rejected: number\n): postShowStatus => {\n  if (status === PostRequestStatusInterface.RECEIVED) {\n    if (placed === received) {\n      return postShowStatus.ALL_RECEIVED;\n    }\n    if (placed === rejected) {\n      return postShowStatus.ALL_REJECTED;\n    }\n    if (placed === rejected + received) {\n      return postShowStatus.RECEIVED_REJECTED;\n    }\n    if (placed > rejected + received && received > 0 && rejected > 0) {\n      return postShowStatus.PARTIAL_RECEIVED_REJECTED;\n    }\n    if (rejected === 0 && placed > received) {\n      return postShowStatus.PARTIAL_RECEIVED;\n    }\n    if (received === 0 && placed > rejected) {\n      return postShowStatus.PARTIAL_REJECTED;\n    }\n  }\n\n  if (status === PostRequestStatusInterface.CONFIRMED) {\n    return postShowStatus.CONFIRMED;\n  }\n  return postShowStatus.PENDING;\n};\n\ntype ReceivePostProps = {\n  viewPost: boolean;\n  placementList: placedCandidateInterface[];\n  thisPost: PostSchoolInterface;\n  setThisPost: (value: PostSchoolInterface | null) => void;\n  setModalState: (value: \"CREATE\" | \"UPDATE\" | \"RECEIVE\" | null) => void;\n  formError: {\n    element: string;\n    msg: string;\n  } | null;\n  setFormError: (\n    value: {\n      element: string;\n      msg: string;\n    } | null\n  ) => void;\n  receivedPosts: number;\n  setReceivedPosts: (value: number) => void;\n  loadingRequest: boolean;\n  setLoadingRequest: (value: boolean) => void;\n  loadingPost: boolean;\n  setLoadingPost: (value: boolean) => void;\n  positionId: string;\n  systemPositions: PositionAPI[];\n\n  // REDUX ==========\n  auth: Auth;\n  fetchSchoolPosts: Function;\n  getSchoolPlacement: Function;\n  PushPopupAlert: (alert: PopupAlertData) => void;\n};\n\ntype ReceivePostState = {\n  placement_id: string;\n  action: \"RECEIVED\" | \"NOT_RECEIVED\" | null;\n  takeAction: boolean;\n  comment: string;\n  thisPlacement: placedCandidateInterface | null;\n};\n\nclass ReceivePost extends Component<ReceivePostProps, ReceivePostState> {\n  constructor(props: ReceivePostProps) {\n    super(props);\n\n    this.state = {\n      placement_id: \"\",\n      action: null,\n      thisPlacement: null,\n      takeAction: false,\n      comment: \"\",\n    };\n  }\n  setThisPlacement = (value: placedCandidateInterface | null) => {\n    this.setState({ thisPlacement: value });\n  };\n  setAction = (value: \"RECEIVED\" | \"NOT_RECEIVED\" | null) => {\n    this.setState({ action: value });\n  };\n  setTakeAction = (value: boolean) => {\n    this.setState({ takeAction: value });\n  };\n\n  submitRequest = async (\n    thisPlacement: placedCandidateInterface,\n    action: \"RECEIVED\" | \"NOT_RECEIVED\"\n  ) => {\n    if (action === \"NOT_RECEIVED\" && isEmptyOrSpaces(this.state.comment)) {\n      return this.props.setFormError({\n        element: \"received_comment\",\n        msg: \"Reason of your decision is required!\",\n      });\n    }\n\n    let received: number = 0;\n    if (action === \"NOT_RECEIVED\") {\n      received = this.props.thisPost.received_posts\n        ? this.props.thisPost.received_posts\n        : 0;\n    } else {\n      received = this.props.thisPost.received_posts\n        ? this.props.thisPost.received_posts + 1\n        : 1;\n    }\n\n    this.props.setLoadingRequest(true);\n    try {\n      if (this.props.thisPost) {\n        const res = await axios.patch<{ data: PostSchoolInterface }>(\n          `${API.PLACEMENT}/requestpost/${this.props.thisPost._id}`,\n          {\n            confirmed_posts: this.props.thisPost.confirmed_posts,\n            confirmed_by: this.props.auth.user.user_id,\n            received_posts: received,\n            approval_date: this.props.thisPost.approval_date,\n            school_id: this.props.thisPost.school_id,\n            position_id: this.props.thisPost.position_id,\n            district_id: this.props.thisPost.district_id,\n            needed_posts: this.props.thisPost.needed_posts,\n            male_number: this.props.thisPost.male_number,\n            female_number: this.props.thisPost.female_number,\n            description: this.props.thisPost.description,\n            occupied_posts: this.props.thisPost.occupied_posts,\n            requested_by: this.props.auth.user.user_id,\n            requested_post_status: PostRequestStatusInterface.RECEIVED,\n          }\n        );\n        if (res) {\n          // props.updateSchoolPost(\"SCHOOL\", res.data.data);\n          this.confirmPlacement(thisPlacement);\n\n          // !this.props.viewPost && this.props.setThisPost(null);\n          // this.props.setReceivedPosts(0);\n          // this.props.setModalState(null);\n          // this.props.PushPopupAlert({\n          //   title: `Post request has been received!`,\n          //   theme: PopupAlertTheme.info,\n          // });\n        }\n      }\n    } catch (error) {\n      console.error({ role_error: error });\n      this.props.PushPopupAlert({\n        title: errorToText(error),\n        theme: PopupAlertTheme.danger,\n      });\n    }\n    this.props.setLoadingRequest(false);\n  };\n\n  confirmPlacement = async (thisPlacement: placedCandidateInterface) => {\n    this.props.setLoadingRequest(true);\n    try {\n      if (this.props.thisPost) {\n        const res = await axios.post<{ data: PostSchoolInterface }>(\n          `${API.PLACEMENT}/confirmreceived`,\n          {\n            placedStatus: [\n              {\n                waiting_list_id: thisPlacement.waiting_list_id,\n                placed_candidate_id: thisPlacement._id,\n                status:\n                  this.state.action === \"NOT_RECEIVED\"\n                    ? PlacedCandidateStatus.REJECTED\n                    : PlacedCandidateStatus.PLACED,\n              },\n            ],\n          }\n        );\n        if (res) {\n          this.props.fetchSchoolPosts(\n            this.props.auth.user_access.school_id,\n            (status: boolean, message: string) => {\n              if (!status) {\n                if (message.length > 0 && this.props.loadingPost) {\n                  console.error(\"error loading school post: \", message);\n                  this.props.PushPopupAlert({\n                    title: message,\n                    theme: PopupAlertTheme.danger,\n                  });\n                }\n                this.props.setLoadingPost(false);\n              }\n            }\n          );\n\n          this.props.getSchoolPlacement(\n            this.props.auth.user_access.school_id,\n            (\n              status: boolean,\n              msg: string,\n              data?: placedCandidateInterface[]\n            ) => {\n              this.props.setLoadingPost(status);\n              if (!status && msg.length > 0) {\n                console.error({ getSchoolPlacementError: msg });\n                this.props.PushPopupAlert({\n                  title: msg,\n                  theme: PopupAlertTheme.danger,\n                });\n              }\n            }\n          );\n\n          this.props.setFormError(null);\n          this.setState({ comment: \"\", placement_id: \"\", action: null });\n          !this.props.viewPost && this.props.setThisPost(null);\n          this.props.setReceivedPosts(0);\n          this.props.setModalState(null);\n          this.props.PushPopupAlert({\n            title: `Request has been done completely!`,\n            theme: PopupAlertTheme.info,\n          });\n        }\n      }\n    } catch (error) {\n      console.error({ role_error: error });\n      this.props.PushPopupAlert({\n        title: errorToText(error),\n        theme: PopupAlertTheme.danger,\n      });\n    }\n    this.props.setLoadingRequest(false);\n  };\n\n  render() {\n    return (\n      <section>\n        <div className=\"border-b-2 border-gray-200 mb-2 pb-1 flex items-center gap-3\">\n          <button\n            className={`ml-3 bg-gray-100 hover:bg-blue-100 rounded-full px-1 py-1 focus:outline-none ${\n              this.props.loadingRequest ? \"cursor-wait\" : \"cursor-pointer\"\n            } animate__animated animate__fadeIn`}\n            disabled={this.props.loadingRequest}\n            onClick={() => {\n              this.props.setThisPost(null);\n              this.props.setReceivedPosts(0);\n              this.props.setModalState(null);\n            }}\n          >\n            <MdArrowBack className=\"text-4xl\" />\n          </button>\n\n          <span className=\"font-bold text-2xl md:text-3xl text-gray-700\">\n            Confirm teacher arrival\n          </span>\n        </div>\n\n        <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4 divide-x-0 divide-y md:divide-x md:divide-y-0\">\n          <div className=\"px-1 mb-4 mt-3\">\n            <div className=\"text-base leading-6 space-y-4 text-gray-700 sm:text-lg sm:leading-7\">\n              <div className=\"flex flex-row item-center justify-left gap-3 mb-2\">\n                <span className=\"text-gray-500 italic\">Position: </span>\n                <span className=\"font-bold\">\n                  {getPositionById(\n                    this.props.systemPositions,\n                    this.props.thisPost.position_id\n                  )\n                    ? getPositionById(\n                        this.props.systemPositions,\n                        this.props.thisPost.position_id\n                      )!.position_title\n                    : \"Unknown position\"}\n                </span>\n              </div>\n\n              <table className=\"w-full shadow\" id=\"report_content\">\n                <thead className=\"bg-blue-50 border-b-2 border-gray-300 text-gray-600 font-bold text-sm\">\n                  <tr>\n                    <td className=\"px-2 py-2\">Requested posts</td>\n                    <td className=\"px-2 py-2\">Approved posts</td>\n                    <td className=\"px-2 py-2\">Placed posts</td>\n                    <td className=\"px-2 py-2\">Received posts</td>\n                    <td className=\"px-2 py-2\">Not received posts</td>\n                    <td className=\"px-2 py-2\">Status</td>\n                  </tr>\n                </thead>\n                <tbody>\n                  <tr>\n                    <td className=\"px-2 py-2\">\n                      {this.props.thisPost.needed_posts}\n                    </td>\n                    <td className=\"px-2 py-2\">\n                      {this.props.thisPost.requested_post_status !==\n                      PostRequestStatusInterface.INITIATED ? (\n                        <div className=\"flex items-center gap-1\">\n                          {this.props.thisPost.confirmed_posts}\n                        </div>\n                      ) : (\n                        \"-\"\n                      )}\n                    </td>\n                    <td className=\"px-2 py-2\">\n                      {this.props.thisPost.requested_post_status !==\n                      PostRequestStatusInterface.INITIATED ? (\n                        <span>\n                          {\n                            getPlacementByRequest(\n                              this.props.placementList,\n                              this.props.thisPost._id\n                            ).length\n                          }\n                        </span>\n                      ) : (\n                        \"-\"\n                      )}\n                    </td>\n                    <td className=\"px-2 py-2\">\n                      {this.props.thisPost.requested_post_status ===\n                      PostRequestStatusInterface.RECEIVED\n                        ? this.props.thisPost.received_posts\n                        : \"-\"}\n                    </td>\n                    <td className=\"px-2 py-2\">\n                      {this.props.thisPost.requested_post_status ===\n                      PostRequestStatusInterface.RECEIVED ? (\n                        <span>\n                          {\n                            getPlacementByRequest(\n                              this.props.placementList,\n                              this.props.thisPost._id,\n                              PlacedCandidateStatus.REJECTED\n                            ).length\n                          }\n                        </span>\n                      ) : (\n                        \"0\"\n                      )}\n                    </td>\n\n                    <td className=\"px-2 py-2\">\n                      <span\n                        className={`px-2 py-1 mx-1 font-semibold rounded ${\n                          this.props.thisPost.requested_post_status ===\n                          PostRequestStatusInterface.INITIATED\n                            ? \"text-gray-700 bg-gray-100 dark:bg-gray-700 dark:text-gray-100\"\n                            : this.props.thisPost.requested_post_status ===\n                              PostRequestStatusInterface.CONFIRMED\n                            ? \"text-blue-700 bg-blue-100 dark:bg-blue-700 dark:text-blue-100\"\n                            : \"text-green-800 bg-green-100 dark:bg-green-800 dark:text-green-100\"\n                        }`}\n                      >\n                        {showRequestStatus(\n                          this.props.thisPost.requested_post_status,\n                          getPlacementByRequest(\n                            this.props.placementList,\n                            this.props.thisPost._id,\n                            \"all\"\n                          ).length,\n                          getPlacementByRequest(\n                            this.props.placementList,\n                            this.props.thisPost._id,\n                            PlacedCandidateStatus.PLACED\n                          ).length,\n                          getPlacementByRequest(\n                            this.props.placementList,\n                            this.props.thisPost._id,\n                            PlacedCandidateStatus.REJECTED\n                          ).length\n                        )}\n                      </span>\n                    </td>\n                  </tr>\n                </tbody>\n              </table>\n\n              <div className=\"my-2\">\n                {getPositionById(\n                  this.props.systemPositions,\n                  this.props.thisPost.position_id\n                ) && (\n                  <ViewPosition\n                    thisPosition={\n                      getPositionById(\n                        this.props.systemPositions,\n                        this.props.thisPost.position_id\n                      )!\n                    }\n                    isGuest={true}\n                  />\n                )}\n              </div>\n            </div>\n          </div>\n\n          <div className=\"px-4 mt-3 mb-4\">\n            {getPlacementByRequest(\n              this.props.placementList,\n              this.props.thisPost._id\n            ).map((item, index) => (\n              <div\n                className=\"relative grid grid-cols-1 gap-4 px-4 py-1 mb-8 border rounded bg-white shadow\"\n                key={index + item._id}\n              >\n                <div className=\"relative flex gap-4\">\n                  {/* IMG ================== */}\n                  <img\n                    src={API.AUTH_FILES + \"/\" + item.user_info.photo}\n                    className=\"object-center object-cover relative rounded-lg -top-4 -mb-3 bg-white border h-20 w-20\"\n                    alt=\"\"\n                    loading=\"lazy\"\n                  />\n                  <div className=\"flex flex-col w-full\">\n                    <div className=\"flex flex-row justify-between\">\n                      <p className=\"relative text-xl whitespace-nowrap truncate overflow-hidden\">\n                        {item.user_info.fname + \" \" + item.user_info.lname}\n                      </p>\n                    </div>\n                    <p className=\"text-gray-500 text-sm flex items-center gap-1\">\n                      <MdSmartphone /> {item.phone_number}\n                    </p>\n                    <p className=\"text-gray-500 text-sm flex items-center gap-1\">\n                      <MdMail /> {item.email}\n                    </p>\n                  </div>\n                </div>\n                <div className=\"-mt-3 overflow-x-hidden\">\n                  {this.state.action !== \"NOT_RECEIVED\" && (\n                    <div className=\"flex flex-row-reverse gap-2\">\n                      <div className=\"flex-initial\">\n                        <button\n                          type=\"button\"\n                          className=\"btn btn-blue flex items-center font-medium tracking-wide capitalize transition duration-300 transform active:scale-95 ease-in-out\"\n                          disabled={this.props.loadingRequest}\n                          onClick={() => {\n                            this.setState({\n                              placement_id: item._id,\n                              action: \"RECEIVED\",\n                              thisPlacement: item,\n                              takeAction: true,\n                            });\n                            // this.submitRequest(item, \"RECEIVED\");\n                          }}\n                        >\n                          <MdTaskAlt />\n                          <span className=\"pl-2 mx-1\">\n                            {this.props.loadingRequest &&\n                            item._id === this.state.placement_id\n                              ? \"Loading...\"\n                              : \"Received\"}\n                          </span>\n                        </button>\n                      </div>\n                      <div className=\"flex-initial\">\n                        <button\n                          type=\"button\"\n                          className=\"btn flex items-center px-5 py-2.5 font-medium tracking-wide text-black capitalize hover:bg-red-200 hover:fill-current hover:text-red-600 focus:outline-none transition duration-300 transform active:scale-95 ease-in-out\"\n                          disabled={this.props.loadingRequest}\n                          onClick={() =>\n                            this.setState({\n                              placement_id: item._id,\n                              action: \"NOT_RECEIVED\",\n                              thisPlacement: item,\n                            })\n                          }\n                        >\n                          <MdErrorOutline />\n                          <span className=\"pl-2 mx-1\">Not received</span>\n                        </button>\n                      </div>\n                    </div>\n                  )}\n                  {this.state.action === \"NOT_RECEIVED\" &&\n                    this.state.placement_id === item._id && (\n                      <div className=\"flex flex-col md:flex-row items-end md:items-start gap-2 animate__animated animate__fadeInRight animate__faster mt-2\">\n                        <div className=\"w-full\">\n                          <textarea\n                            className={`border-2 rounded p-2 md:text-base w-full ${\n                              this.props.formError &&\n                              this.props.formError.element ===\n                                \"received_comment\"\n                                ? \"border-red-500\"\n                                : \"border-gray-300\"\n                            } focus:border-gray-500`}\n                            placeholder=\"comment\"\n                            onChange={(e) => {\n                              this.setState({ comment: e.target.value });\n                              this.props.formError &&\n                                this.props.formError.element ===\n                                  \"received_comment\" &&\n                                this.props.setFormError(null);\n                            }}\n                            value={this.state.comment}\n                            style={{ resize: \"none\" }}\n                          ></textarea>\n                          {this.props.formError &&\n                            this.props.formError.element ===\n                              \"received_comment\" && (\n                              <span className=\"text-red-700 text-sm\">\n                                {this.props.formError.msg}\n                              </span>\n                            )}\n                        </div>\n\n                        <div>\n                          <button\n                            type=\"button\"\n                            className=\"btn bg-gray-100 hover:bg-gray-400 w-full font-medium tracking-wide capitalize transition duration-300 transform active:scale-95 ease-in-out\"\n                            disabled={this.props.loadingRequest}\n                            onClick={() => this.setTakeAction(true)}\n                          >\n                            {this.props.loadingRequest &&\n                            item._id === this.state.placement_id\n                              ? \"Loading...\"\n                              : \"Confirm\"}\n                          </button>\n                          <button\n                            type=\"button\"\n                            className=\"btn bg-red-100  w-full hover:bg-red-400 font-medium tracking-wide capitalize transition duration-300 transform active:scale-95 ease-in-out\"\n                            disabled={this.props.loadingRequest}\n                            onClick={() =>\n                              this.setState({\n                                placement_id: \"\",\n                                action: null,\n                                thisPlacement: null,\n                              })\n                            }\n                          >\n                            {this.props.loadingRequest &&\n                            item._id === this.state.placement_id\n                              ? \"Loading...\"\n                              : \"Cancel\"}\n                          </button>\n                        </div>\n                      </div>\n                    )}\n                </div>\n              </div>\n            ))}\n          </div>\n        </div>\n\n        {this.state.thisPlacement &&\n          this.state.action &&\n          this.state.takeAction && (\n            <ActionConfirm\n              confirmFun={() => {\n                this.setTakeAction(false);\n                this.submitRequest(\n                  this.state.thisPlacement!,\n                  this.state.action!\n                );\n              }}\n              setModalAction={(value: boolean) => {\n                this.setTakeAction(value);\n                this.setThisPlacement(null);\n                this.setAction(null);\n                this.setState({\n                  placement_id: \"\",\n                });\n              }}\n              description={\n                this.state.action === \"NOT_RECEIVED\"\n                  ? `Do you really confirm that ${this.state.thisPlacement.user_info.fname} ${this.state.thisPlacement.user_info.lname} didn't or will not come?`\n                  : `Do you really confirm that you have received ${this.state.thisPlacement.user_info.fname} ${this.state.thisPlacement.user_info.lname}?`\n              }\n              modalType={ActionConfirmEnum.INFO}\n            />\n          )}\n      </section>\n    );\n  }\n}\n\nconst mapStateToProps = ({\n  auth,\n}: StoreState): {\n  auth: Auth;\n} => {\n  return {\n    auth: auth,\n  };\n};\nexport default connect(mapStateToProps, {\n  fetchSchoolPosts,\n  getSchoolPlacement,\n  PushPopupAlert,\n})(ReceivePost);\n","import React, { Component } from \"react\";\nimport { BiReply } from \"react-icons/bi\";\nimport Modal, { ModalSize, Themes } from \"../../components/Modal/Modal\";\nimport { PositionAPI } from \"../../interfaces\";\nimport { placedCandidateInterface } from \"../../interfaces/marks_publication\";\nimport { capitalizeFirstLetter, getPositionById } from \"../../shared/dataTest\";\nimport {\n  PostRequestStatusInterface,\n  PostSchoolInterface,\n} from \"../../shared/interfaces\";\nimport { getPlacementByRequest } from \"./RequestTeacher\";\n\ninterface ViewRequestProps {\n  thisPost: PostSchoolInterface;\n  setThisPost: (value: PostSchoolInterface | null) => void;\n  setViewPost: (value: boolean) => void;\n  systemPositions: PositionAPI[];\n  schoolPlacements: placedCandidateInterface[];\n  setPostId: (value: string) => void;\n  setModalState: (value: \"CREATE\" | \"UPDATE\" | \"RECEIVE\" | null) => void;\n  setPositionId: (value: string) => void;\n  setRequestedPosts: (value: number) => void;\n  setRequestExplanation: (value: string) => void;\n  setFemaleOnPosition: (value: number) => void;\n  setMaleOnPosition: (value: number) => void;\n  setFormSteps: (value: { ONE: boolean; TWO: boolean }) => void;\n  setStepState: (value: { ONE: boolean; TWO: boolean }) => void;\n}\n\nexport class ViewRequest extends Component<ViewRequestProps> {\n  render() {\n    return (\n      <Modal\n        backDrop={true}\n        theme={Themes.default}\n        close={(): void => {\n          this.props.setThisPost(null);\n          this.props.setViewPost(false);\n        }}\n        displayClose={true}\n        backDropClose={false}\n        title={\n          <div className=\"flex flex-row gap-4 items-center\">\n            <div className=\"flex flex-col\">\n              <span className=\"font-bold text-2xl text-gray-500\">\n                Viewing Post Request\n              </span>\n            </div>\n          </div>\n        }\n        widthSizeClass={ModalSize.large}\n        padding={{ title: true, body: false, footer: false }}\n      >\n        <section className=\"px-4 mx-auto mb-4 mt-3 flex items-start\">\n          <section className=\"w-full\">\n            <div className=\"flex flex-row item-center justify-left gap-3 mb-2\">\n              <span className=\"text-gray-500 italic\">Position: </span>\n              <span className=\"font-bold\">\n                {getPositionById(\n                  this.props.systemPositions,\n                  this.props.thisPost.position_id\n                )\n                  ? getPositionById(\n                      this.props.systemPositions,\n                      this.props.thisPost.position_id\n                    )!.position_title\n                  : \"Unknown position\"}\n              </span>\n            </div>\n            <div className=\"flex flex-row item-center justify-left gap-3 mb-2\">\n              <span className=\"text-gray-500 italic\">Requested posts: </span>\n              <span className=\"font-bold text-xl\">\n                {this.props.thisPost.needed_posts}\n              </span>\n            </div>\n            <div className=\"flex flex-row item-center justify-left gap-3 mb-2\">\n              <span className=\"text-gray-500 italic\">Approved posts: </span>\n              <span className=\"font-bold text-xl\">\n                {this.props.thisPost.requested_post_status !==\n                PostRequestStatusInterface.INITIATED\n                  ? this.props.thisPost.confirmed_posts\n                  : \"-\"}\n              </span>\n            </div>\n            <div className=\"flex flex-row item-center justify-left gap-3 mb-2\">\n              <span className=\"text-gray-500 italic\">Placed posts: </span>\n              <span className=\"font-bold text-xl\">\n                {this.props.thisPost.requested_post_status !==\n                PostRequestStatusInterface.INITIATED ? (\n                  <div\n                    className=\"flex items-center gap-1 cursor-pointer\"\n                    onClick={() => this.props.setModalState(\"RECEIVE\")}\n                  >\n                    {\n                      getPlacementByRequest(\n                        this.props.schoolPlacements,\n                        this.props.thisPost._id\n                      ).length\n                    }\n                    {getPlacementByRequest(\n                      this.props.schoolPlacements,\n                      this.props.thisPost._id\n                    ).length > 0 && (\n                      <BiReply className=\"bg-yellow-600 w-5 h-5 text-white\" />\n                    )}\n                  </div>\n                ) : (\n                  \"-\"\n                )}\n              </span>\n            </div>\n            <div className=\"flex flex-row item-center justify-left gap-3 mb-2\">\n              <span className=\"text-gray-500 italic\">Received posts: </span>\n              <span className=\"font-bold text-xl\">\n                {this.props.thisPost.requested_post_status ===\n                PostRequestStatusInterface.RECEIVED\n                  ? this.props.thisPost.received_posts\n                  : \"-\"}\n              </span>\n            </div>\n            <div className=\"flex flex-row item-center justify-left gap-3 mb-2\">\n              <span className=\"text-gray-500 italic\">Number of female: </span>\n              <span className=\"font-bold text-xl\">\n                {this.props.thisPost.female_number}\n              </span>\n            </div>\n            <div className=\"flex flex-row item-center justify-left gap-3 mb-2\">\n              <span className=\"text-gray-500 italic\">Number of male: </span>\n              <span className=\"font-bold text-xl\">\n                {this.props.thisPost.male_number}\n              </span>\n            </div>\n            <div className=\"flex flex-row item-center justify-left gap-3 mb-2\">\n              <span className=\"text-gray-500 italic\">Request reason: </span>\n              <span className=\"font-bold text-xl\">\n                {this.props.thisPost.description}\n              </span>\n            </div>\n            <div className=\"flex flex-row item-center justify-left gap-3 mb-2\">\n              <span className=\"text-gray-500 italic\">Status: </span>\n              <span\n                className={`px-2 py-1 mx-1 font-semibold rounded ${\n                  this.props.thisPost.requested_post_status ===\n                  PostRequestStatusInterface.INITIATED\n                    ? \"text-gray-700 bg-gray-100 dark:bg-gray-700 dark:text-gray-100\"\n                    : this.props.thisPost.requested_post_status ===\n                      PostRequestStatusInterface.CONFIRMED\n                    ? \"text-blue-700 bg-blue-100 dark:bg-blue-700 dark:text-blue-100\"\n                    : \"text-green-800 bg-green-100 dark:bg-green-800 dark:text-green-100\"\n                }`}\n              >\n                {this.props.thisPost.requested_post_status ===\n                PostRequestStatusInterface.INITIATED\n                  ? \"Pending\"\n                  : capitalizeFirstLetter(\n                      this.props.thisPost.requested_post_status\n                    )}\n              </span>\n            </div>\n          </section>\n          <div className=\"mb-3 flex items-center justify-end gap-2\">\n            {this.props.thisPost.requested_post_status ===\n              PostRequestStatusInterface.INITIATED && (\n              <button\n                className=\"font-bold py-1 px-4 rounded bg-gray-500 text-white hover:bg-gray-700\"\n                onClick={() => {\n                  this.props.setModalState(\"UPDATE\");\n                  this.props.setPostId(this.props.thisPost._id);\n                  this.props.setPositionId(this.props.thisPost.position_id);\n                  this.props.setRequestedPosts(\n                    this.props.thisPost.needed_posts\n                  );\n                  this.props.setRequestExplanation(\n                    this.props.thisPost.description\n                  );\n                  this.props.setFemaleOnPosition(\n                    this.props.thisPost.female_number\n                  );\n                  this.props.setMaleOnPosition(this.props.thisPost.male_number);\n                  this.props.setFormSteps({ ONE: true, TWO: false });\n                  this.props.setStepState({ ONE: false, TWO: false });\n                }}\n                disabled={\n                  this.props.thisPost.requested_post_status !==\n                  PostRequestStatusInterface.INITIATED\n                }\n              >\n                Edit\n              </button>\n            )}\n            {this.props.thisPost.requested_post_status !==\n              PostRequestStatusInterface.INITIATED &&\n              getPlacementByRequest(\n                this.props.schoolPlacements,\n                this.props.thisPost._id\n              ).length > 0 && (\n                <button\n                  className=\"font-bold py-1 px-2 rounded bg-gray-500 text-white hover:bg-gray-700\"\n                  onClick={() => this.props.setModalState(\"RECEIVE\")}\n                >\n                  Receive\n                </button>\n              )}\n          </div>\n        </section>\n      </Modal>\n    );\n  }\n}\n\nexport default ViewRequest;\n","import React, { Component } from \"react\";\nimport { BiReply } from \"react-icons/bi\";\nimport NoResult, { NoResultThemes } from \"../../components/NoResult/NoResult\";\nimport { PositionAPI } from \"../../interfaces\";\nimport {\n  placedCandidateInterface,\n  PlacedCandidateStatus,\n} from \"../../interfaces/marks_publication\";\nimport { getPositionById } from \"../../shared/dataTest\";\nimport {\n  PostRequestStatusInterface,\n  PostSchoolInterface,\n} from \"../../shared/interfaces\";\nimport { showRequestStatus } from \"./ReceivePost\";\nimport { getPlacementByRequest } from \"./RequestTeacher\";\nimport ViewRequest from \"./ViewRequest\";\n\ninterface RequestListProps {\n  schoolPosts: PostSchoolInterface[];\n  systemPositions: PositionAPI[] | null;\n  setModalState: (value: \"CREATE\" | \"UPDATE\" | \"RECEIVE\" | null) => void;\n  loadingRequest: boolean;\n  filterByPosition: string;\n  setFilterByPosition: (value: string) => void;\n  setThisPost: (value: PostSchoolInterface | null) => void;\n  setViewPost: (value: boolean) => void;\n\n  schoolPlacements: placedCandidateInterface[];\n\n  thisPost: PostSchoolInterface | null;\n  setPostId: (value: string) => void;\n  setPositionId: (value: string) => void;\n  setRequestedPosts: (value: number) => void;\n  setRequestExplanation: (value: string) => void;\n  setFemaleOnPosition: (value: number) => void;\n  setMaleOnPosition: (value: number) => void;\n  setFormSteps: (value: { ONE: boolean; TWO: boolean }) => void;\n  setStepState: (value: { ONE: boolean; TWO: boolean }) => void;\n  viewPost: boolean;\n  modalState: \"CREATE\" | \"UPDATE\" | \"RECEIVE\" | null;\n}\n\ninterface RequestListState {\n  searchInput: string;\n}\n\nclass RequestList extends Component<RequestListProps, RequestListState> {\n  constructor(props: RequestListProps) {\n    super(props);\n\n    this.state = {\n      searchInput: \"\",\n    };\n  }\n\n  setSearchInput = (value: string) => {\n    this.setState({ searchInput: value });\n  };\n\n  render() {\n    return (\n      <div>\n        <div className=\"my-2 flex sm:flex-row flex-col justify-between\">\n          <div className=\"flex flex-col md:flex-row\">\n            <select\n              className=\"border-2 border-gray-700 bg-white p-2 rounded focus:outline-none\"\n              onChange={(e) => this.props.setFilterByPosition(e.target.value)}\n              value={this.props.filterByPosition}\n            >\n              <option value=\"all\">All Position</option>\n              {this.props.systemPositions &&\n              this.props.systemPositions.length > 0 ? (\n                this.props.systemPositions.map((position, index) => (\n                  <option key={index + 1} value={position.position_id}>\n                    {position.position_title}\n                  </option>\n                ))\n              ) : (\n                <option value=\"\">No Position found</option>\n              )}\n            </select>\n          </div>\n          <div className=\"block relative\">\n            <div className=\"pt-6 md:pt-0 md:pl-6\">\n              <button\n                className=\"btn bg-primary text-white hover:bg-blue-600\"\n                onClick={() => this.props.setModalState(\"CREATE\")}\n                disabled={this.props.loadingRequest}\n              >\n                Request Teacher\n              </button>\n            </div>\n          </div>\n        </div>\n\n        <div className=\"w-full py-2\">\n          <input\n            onChange={(e) => this.setSearchInput(e.target.value)}\n            type=\"text\"\n            value={this.state.searchInput}\n            placeholder=\"Search...\"\n            className=\"w-full bg-gray-50 border-2 border-gray-400 py-2 px-3 rounded focus:border-gray-800\"\n            disabled={\n              this.props.schoolPosts.length <= 0 || this.props.loadingRequest\n            }\n          />\n        </div>\n\n        <table className=\"w-full shadow\" id=\"report_content\">\n          <thead className=\"bg-blue-50 border-b-2 border-gray-300 text-gray-600 font-bold text-sm\">\n            <tr>\n              <td className=\"px-2 py-2\">#</td>\n              <td className=\"px-2 py-2\">Position</td>\n              <td className=\"px-2 py-2\">Current F</td>\n              <td className=\"px-2 py-2\">Current M</td>\n              <td className=\"px-2 py-2\">Request</td>\n              <td className=\"px-2 py-2\">Approved</td>\n              <td className=\"px-2 py-2\">Placed</td>\n              <td className=\"px-2 py-2\">Received</td>\n              <td className=\"px-2 py-2\">Not Received</td>\n              <td className=\"px-2 py-2\">Vacant</td>\n              <td className=\"px-2 py-2\">Status</td>\n              <td className=\"px-2 py-2\"></td>\n            </tr>\n          </thead>\n          <tbody>\n            {this.props.schoolPosts.length > 0 ? (\n              this.props.schoolPosts.map((schoolPost, index) => (\n                <tr\n                  key={index + schoolPost._id}\n                  className=\"border-b border-gray-200 hover:bg-gray-100\"\n                >\n                  <td className=\"px-2 py-3 text-left font-medium\">\n                    {index + 1}\n                  </td>\n                  <td className=\"py-3 px-1 text-left font-medium\">\n                    {this.props.systemPositions &&\n                    getPositionById(\n                      this.props.systemPositions,\n                      schoolPost.position_id\n                    )\n                      ? getPositionById(\n                          this.props.systemPositions,\n                          schoolPost.position_id\n                        )!.position_title\n                      : \"Unknown position\"}\n                  </td>\n                  <td className=\"py-3 px-3 text-left text-base font-medium\">\n                    {schoolPost.female_number}\n                  </td>\n                  <td className=\"py-3 px-3 text-left text-base font-medium\">\n                    {schoolPost.male_number}\n                  </td>\n                  <td className=\"py-3 px-3 text-left text-base font-medium\">\n                    {schoolPost.needed_posts}\n                  </td>\n                  <td className=\"py-3 px-3 text-left text-base font-medium\">\n                    {schoolPost.requested_post_status !==\n                    PostRequestStatusInterface.INITIATED\n                      ? schoolPost.confirmed_posts\n                      : \"-\"}\n                  </td>\n                  <td className=\"py-3 px-3 text-left text-base font-medium\">\n                    <div className=\"flex items-center gap-1\">\n                      {schoolPost.confirmed_posts &&\n                        getPlacementByRequest(\n                          this.props.schoolPlacements,\n                          schoolPost._id\n                        ).length}\n                      {getPlacementByRequest(\n                        this.props.schoolPlacements,\n                        schoolPost._id\n                      ).length > 0 && (\n                        <BiReply\n                          className=\"bg-yellow-600 w-5 h-5 text-white cursor-pointer\"\n                          onClick={() => {\n                            this.props.setModalState(\"RECEIVE\");\n                            this.props.setThisPost(schoolPost);\n                          }}\n                        />\n                      )}\n                    </div>\n                  </td>\n                  <td className=\"py-3 px-3 text-left text-base font-medium\">\n                    {schoolPost.received_posts}\n                  </td>\n                  <td className=\"py-3 px-3 text-left text-base font-medium\">\n                    {schoolPost.confirmed_posts &&\n                      getPlacementByRequest(\n                        this.props.schoolPlacements,\n                        schoolPost._id,\n                        PlacedCandidateStatus.REJECTED\n                      ).length}\n                  </td>\n                  <td className=\"py-3 px-3 text-left text-base font-medium\">\n                    {schoolPost.confirmed_posts &&\n                      getPlacementByRequest(\n                        this.props.schoolPlacements,\n                        schoolPost._id,\n                        \"all\"\n                      ).length -\n                        getPlacementByRequest(\n                          this.props.schoolPlacements,\n                          schoolPost._id,\n                          PlacedCandidateStatus.PLACED\n                        ).length}\n                  </td>\n                  <td>\n                    <span\n                      className={`px-2 py-1 font-semibold rounded ${\n                        schoolPost.requested_post_status ===\n                        PostRequestStatusInterface.INITIATED\n                          ? \"text-gray-700 bg-gray-100 dark:bg-gray-700 dark:text-gray-100\"\n                          : schoolPost.requested_post_status ===\n                            PostRequestStatusInterface.CONFIRMED\n                          ? \"text-blue-700 bg-blue-100 dark:bg-blue-700 dark:text-blue-100\"\n                          : \"text-green-800 bg-green-100 dark:bg-green-800 dark:text-green-100\"\n                      }`}\n                    >\n                      {showRequestStatus(\n                        schoolPost.requested_post_status,\n                        getPlacementByRequest(\n                          this.props.schoolPlacements,\n                          schoolPost._id,\n                          \"all\"\n                        ).length,\n                        getPlacementByRequest(\n                          this.props.schoolPlacements,\n                          schoolPost._id,\n                          PlacedCandidateStatus.PLACED\n                        ).length,\n                        getPlacementByRequest(\n                          this.props.schoolPlacements,\n                          schoolPost._id,\n                          PlacedCandidateStatus.REJECTED\n                        ).length\n                      )}\n                    </span>\n                  </td>\n                  <td className=\"py- text-left\">\n                    <div className=\"flex item-center justify-end gap-1\">\n                      <button\n                        className=\"btn btn-blue transition ease-out duration-500 flex items-center\"\n                        title=\"View User Profile\"\n                        onClick={() => {\n                          this.props.setThisPost(schoolPost);\n                          this.props.setViewPost(true);\n                        }}\n                      >\n                        Details\n                      </button>\n                      {schoolPost.requested_post_status ===\n                        PostRequestStatusInterface.INITIATED && (\n                        <button\n                          className=\"btn bg-gray-500 text-white hover:bg-gray-700\"\n                          onClick={() => {\n                            this.props.setModalState(\"UPDATE\");\n                            this.props.setPostId(schoolPost._id);\n                            this.props.setPositionId(schoolPost.position_id);\n                            this.props.setRequestedPosts(\n                              schoolPost.needed_posts\n                            );\n                            this.props.setRequestExplanation(\n                              schoolPost.description\n                            );\n                            this.props.setFemaleOnPosition(\n                              schoolPost.female_number\n                            );\n                            this.props.setMaleOnPosition(\n                              schoolPost.male_number\n                            );\n                            this.props.setFormSteps({ ONE: true, TWO: false });\n                            this.props.setStepState({ ONE: false, TWO: false });\n                          }}\n                          disabled={this.props.loadingRequest}\n                        >\n                          Edit\n                        </button>\n                      )}\n                      {getPlacementByRequest(\n                        this.props.schoolPlacements,\n                        schoolPost._id\n                      ).length > 0 && (\n                        <button\n                          className=\"btn bg-green-600 text-white hover:bg-green-700\"\n                          onClick={() => {\n                            this.props.setModalState(\"RECEIVE\");\n                            this.props.setThisPost(schoolPost);\n                          }}\n                          disabled={this.props.loadingRequest}\n                        >\n                          Receive\n                        </button>\n                      )}\n                    </div>\n                  </td>\n                </tr>\n              ))\n            ) : (\n              <tr>\n                <td colSpan={12}>\n                  <NoResult\n                    theme={NoResultThemes.Dark}\n                    value={\"No request have been made!\"}\n                  />\n                </td>\n              </tr>\n            )}\n          </tbody>\n        </table>\n\n        {this.props.viewPost &&\n          this.props.modalState === null &&\n          this.props.thisPost &&\n          this.props.systemPositions && (\n            <ViewRequest\n              thisPost={this.props.thisPost}\n              setThisPost={this.props.setThisPost}\n              setViewPost={this.props.setViewPost}\n              systemPositions={this.props.systemPositions}\n              schoolPlacements={this.props.schoolPlacements}\n              setPostId={this.props.setPostId}\n              setModalState={this.props.setModalState}\n              setPositionId={this.props.setPositionId}\n              setRequestedPosts={this.props.setRequestedPosts}\n              setRequestExplanation={this.props.setRequestExplanation}\n              setFemaleOnPosition={this.props.setFemaleOnPosition}\n              setMaleOnPosition={this.props.setMaleOnPosition}\n              setFormSteps={this.props.setFormSteps}\n              setStepState={this.props.setStepState}\n            />\n          )}\n      </div>\n    );\n  }\n}\n\nexport default RequestList;\n","import React, { Fragment } from \"react\";\nimport { FaSchool } from \"react-icons/fa\";\nimport { VscOpenPreview } from \"react-icons/vsc\";\n\ninterface StepsHeaderProps {\n  currentStep: number;\n  stepState: {\n    ONE: boolean;\n    TWO: boolean;\n  };\n  setFormSteps: (value: { ONE: boolean; TWO: boolean }) => void;\n}\n\nconst StepsHeader: React.FC<StepsHeaderProps> = (props) => {\n  return (\n    <Fragment>\n      <div className=\"p-5\">\n        <div className=\"mx-4 p-4\">\n          <div className=\"flex items-center\">\n            {/* STEP ONE ================================== */}\n            <div\n              className={`flex items-center ${\n                props.currentStep === 1\n                  ? \"text-white\"\n                  : props.stepState.ONE\n                  ? \"text-blue-500 cursor-pointer\"\n                  : \"text-gray-500\"\n              } relative`}\n              onClick={() =>\n                props.stepState.ONE &&\n                props.setFormSteps({\n                  ONE: true,\n                  TWO: false,\n                })\n              }\n            >\n              <div\n                className={`rounded-full transition duration-500 ease-in-out h-12 w-12 py-3 border-2 ${\n                  props.currentStep === 1\n                    ? \"border-blue-500 bg-blue-500\"\n                    : props.stepState.ONE\n                    ? \"border-blue-500 cursor-pointer\"\n                    : \"border-gray-500\"\n                }`}\n              >\n                <FaSchool className=\"feather feather-bookmark w-full h-full\" />\n              </div>\n              <div\n                className={`absolute top-0 -ml-10 text-center mt-16 w-32 text-xs font-semibold uppercase ${\n                  props.currentStep === 1\n                    ? \"text-blue-500\"\n                    : props.stepState.ONE\n                    ? \"text-blue-500 cursor-pointer\"\n                    : \"text-gray-500\"\n                }`}\n              >\n                Position\n              </div>\n            </div>\n            <div\n              className={`flex-auto border-t-2 transition duration-500 ease-in-out ${\n                props.stepState.ONE ? \"border-blue-500\" : \"border-gray-300\"\n              }`}\n            ></div>\n\n            {/* STEP TWO ================================== */}\n            <div\n              className={`flex items-center ${\n                props.currentStep === 4\n                  ? \"text-white\"\n                  : props.stepState.TWO\n                  ? \"text-blue-500 cursor-pointer\"\n                  : \"text-gray-500\"\n              } relative`}\n              onClick={() =>\n                props.stepState.TWO &&\n                props.setFormSteps({\n                  ONE: false,\n                  TWO: false,\n                })\n              }\n            >\n              <div\n                className={`rounded-full transition duration-500 ease-in-out h-12 w-12 py-3 border-2 ${\n                  props.currentStep === 4\n                    ? \"border-blue-500 bg-blue-500\"\n                    : props.stepState.TWO\n                    ? \"border-blue-500 cursor-pointer\"\n                    : \"border-gray-500\"\n                }`}\n              >\n                <VscOpenPreview className=\"feather feather-database w-full h-full\" />\n              </div>\n              <div\n                className={`absolute top-0 -ml-10 text-center mt-16 w-32 text-xs font-semibold uppercase ${\n                  props.currentStep === 4\n                    ? \"text-blue-500\"\n                    : props.stepState.TWO\n                    ? \"text-blue-500\"\n                    : \"text-gray-500\"\n                }`}\n              >\n                Description\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </Fragment>\n  );\n};\n\nexport default StepsHeader;\n","import axios from \"axios\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport {\n  Auth,\n  PushPopupAlert,\n  schoolLevelsStoreInterface,\n} from \"../../actions\";\nimport { createSchoolPost, updateSchoolPost } from \"../../actions/schools\";\nimport { PopupAlertData } from \"../../components/Alert/Popup\";\nimport { PositionAPI } from \"../../interfaces\";\nimport { PopupAlertTheme } from \"../../interfaces/popupAlert\";\nimport { StoreState } from \"../../reducers\";\nimport { getPositionById, isEmptyOrSpaces } from \"../../shared/dataTest\";\nimport {\n  MySchoolInterface,\n  PostRequestStatusInterface,\n  PostSchoolInterface,\n} from \"../../shared/interfaces\";\nimport { API } from \"../../utils/api\";\nimport { errorToText } from \"../../utils/errors\";\nimport ViewPosition from \"../Positions/ViewPosition\";\nimport StepsHeader from \"./StepsHeader\";\n\ninterface RequestPostFormProps {\n  loadingRequest: boolean;\n  setLoadingRequest: (value: boolean) => void;\n  formSteps: {\n    ONE: boolean;\n    TWO: boolean;\n  };\n  setFormSteps: (value: { ONE: boolean; TWO: boolean }) => void;\n  stepState: {\n    ONE: boolean;\n    TWO: boolean;\n  };\n  setStepState: (value: { ONE: boolean; TWO: boolean }) => void;\n  sessionId: string;\n  postId: string;\n  setPostId: (value: string) => void;\n  positionId: string;\n  setPositionId: (value: string) => void;\n  setRequestedPosts: (value: number) => void;\n  requestedPosts: number;\n  maleOnPosition: number;\n  femaleOnPosition: number;\n  setFemaleOnPosition: (value: number) => void;\n  setMaleOnPosition: (value: number) => void;\n  requestExplanation: string;\n  setRequestExplanation: (value: string) => void;\n  modalState: \"CREATE\" | \"UPDATE\" | \"RECEIVE\" | null;\n  setModalState: (value: \"CREATE\" | \"UPDATE\" | \"RECEIVE\" | null) => void;\n  formError: {\n    element: string;\n    msg: string;\n  } | null;\n  setFormError: (\n    value: {\n      element: string;\n      msg: string;\n    } | null\n  ) => void;\n\n  //   REDUX =================\n  auth: Auth;\n  mySchool: MySchoolInterface | null;\n  schoolPosts: PostSchoolInterface[];\n  schoolLevels: schoolLevelsStoreInterface;\n  systemPositions: PositionAPI[] | null;\n  createSchoolPost: Function;\n  updateSchoolPost: Function;\n  PushPopupAlert: (alert: PopupAlertData) => void;\n}\n\ninterface RequestPostFormState {\n  selectedLevel: string;\n  error: string | null;\n}\n\nexport class RequestPostForm extends Component<\n  RequestPostFormProps,\n  RequestPostFormState\n> {\n  constructor(props: RequestPostFormProps) {\n    super(props);\n\n    this.state = {\n      selectedLevel: \"\",\n      error: null,\n    };\n  }\n\n  GetAllowedPositions = (position_id?: string): PositionAPI[] => {\n    if (this.props.systemPositions) {\n      if (this.props.schoolPosts.length > 0) {\n        let postPositionIds: string[] = [];\n        for (const key in this.props.schoolPosts) {\n          if (\n            Object.prototype.hasOwnProperty.call(this.props.schoolPosts, key)\n          ) {\n            if (\n              this.props.schoolPosts[key].requested_post_status !==\n                PostRequestStatusInterface.RECEIVED ||\n              (this.props.schoolPosts[key].requested_post_status !==\n                PostRequestStatusInterface.CONFIRMED &&\n                this.props.schoolPosts[key].confirmed_posts &&\n                this.props.schoolPosts[key].confirmed_posts === 0)\n            ) {\n              if (\n                !position_id ||\n                position_id !== this.props.schoolPosts[key].position_id\n              ) {\n                postPositionIds.push(this.props.schoolPosts[key].position_id);\n              }\n            }\n          }\n        }\n        if (position_id) {\n          postPositionIds = postPositionIds.filter(\n            (item) => item !== position_id\n          );\n        }\n        return this.props.systemPositions.filter(\n          (item) => !postPositionIds.includes(item.position_id)\n        );\n      }\n      return this.props.systemPositions;\n    }\n    return [];\n  };\n\n  submitRequest = async (e: React.FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n    // if (this.props.modalState === \"RECEIVE\" && this.props.receivedPosts < 0) {\n    //   return this.props.setFormError({\n    //     element: \"received_posts\",\n    //     msg: \"Invalid number of received post\",\n    //   });\n    // }\n    // if (\n    //   this.props.modalState === \"RECEIVE\" &&\n    //   this.props.thisPost &&\n    //   this.props.receivedPosts > this.props.thisPost.needed_posts\n    // ) {\n    //   return this.props.setFormError({\n    //     element: \"received_posts\",\n    //     msg: \"Invalid number of received post\",\n    //   });\n    // }\n\n    if (this.props.requestedPosts <= 0) {\n      return this.props.setFormError({\n        element: \"requested_posts\",\n        msg: \"Needed post must be greater than 0\",\n      });\n    }\n\n    if (isEmptyOrSpaces(this.props.requestExplanation)) {\n      return this.props.setFormError({\n        element: \"comment\",\n        msg: \"Explanation is required!\",\n      });\n    }\n\n    const thisSchool = this.props.mySchool;\n    if (!thisSchool) {\n      return this.props.PushPopupAlert({\n        title: \"No district id found\",\n        theme: PopupAlertTheme.danger,\n      });\n    }\n\n    if (\n      this.props.modalState === \"UPDATE\" &&\n      isEmptyOrSpaces(this.props.postId)\n    ) {\n      return this.setState({ error: \"Post id not find\" });\n    }\n\n    this.props.setLoadingRequest(true);\n    try {\n      if (this.props.modalState === \"CREATE\") {\n        const res = await axios.post<{ data: PostSchoolInterface }>(\n          `${API.PLACEMENT}/requestpost`,\n          {\n            school_id: this.props.auth.user_access.school_id,\n            position_id: this.props.positionId,\n            district_id: thisSchool.district_id,\n            needed_posts: this.props.requestedPosts,\n            male_number: this.props.maleOnPosition,\n            female_number: this.props.femaleOnPosition,\n            // description: 44,\n            description: this.props.requestExplanation,\n            occupied_posts:\n              Number(this.props.maleOnPosition) +\n              Number(this.props.femaleOnPosition),\n            requested_by: this.props.auth.user.user_id,\n            post_request_session_id: this.props.sessionId,\n          }\n        );\n        if (res) {\n          this.props.createSchoolPost(res.data.data);\n          this.props.setPositionId(\"\");\n          this.props.setRequestedPosts(0);\n          this.props.setFemaleOnPosition(0);\n          this.props.setMaleOnPosition(0);\n          this.props.setRequestExplanation(\"\");\n          this.props.setFormSteps({ ONE: true, TWO: false });\n          this.props.setStepState({ ONE: false, TWO: false });\n          this.props.PushPopupAlert({\n            title: `Post(s) has been requested!`,\n            theme: PopupAlertTheme.success,\n          });\n        }\n      }\n\n      if (this.props.modalState === \"UPDATE\") {\n        console.log(\"====================================\");\n        console.log({\n          confirmed_posts: 0,\n          confirmed_by: null,\n          received_posts: 0,\n          approval_date: null,\n          school_id: this.props.auth.user_access.school_id,\n          position_id: this.props.positionId,\n          district_id: thisSchool.district_id._id,\n          needed_posts: this.props.requestedPosts,\n          male_number: this.props.maleOnPosition,\n          female_number: this.props.femaleOnPosition,\n          description: this.props.requestExplanation,\n          occupied_posts:\n            Number(this.props.maleOnPosition) +\n            Number(this.props.femaleOnPosition),\n          requested_by: this.props.auth.user.user_id,\n          requested_post_status: PostRequestStatusInterface.INITIATED,\n        });\n        console.log(\"====================================\");\n        const res = await axios.patch<{ data: PostSchoolInterface }>(\n          `${API.PLACEMENT}/requestpost/${this.props.postId}`,\n          {\n            confirmed_posts: 0,\n            confirmed_by: null,\n            received_posts: 0,\n            approval_date: null,\n            school_id: this.props.auth.user_access.school_id,\n            position_id: this.props.positionId,\n            district_id: thisSchool.district_id,\n            needed_posts: this.props.requestedPosts,\n            male_number: this.props.maleOnPosition,\n            female_number: this.props.femaleOnPosition,\n            description: this.props.requestExplanation,\n            occupied_posts:\n              Number(this.props.maleOnPosition) +\n              Number(this.props.femaleOnPosition),\n            requested_by: this.props.auth.user.user_id,\n            requested_post_status: PostRequestStatusInterface.INITIATED,\n            post_request_session_id: this.props.sessionId,\n          }\n        );\n\n        if (res) {\n          console.log(\"====================================\");\n          console.log({ updateSchoolPost: res.data.data });\n          console.log(\"====================================\");\n          this.props.updateSchoolPost(\"SCHOOL\", res.data.data);\n          this.props.setPostId(\"\");\n          this.props.setPositionId(\"\");\n          this.props.setRequestedPosts(0);\n          this.props.setFemaleOnPosition(0);\n          this.props.setMaleOnPosition(0);\n          this.props.setRequestExplanation(\"\");\n          this.props.setFormSteps({ ONE: true, TWO: false });\n          this.props.setStepState({ ONE: false, TWO: false });\n          this.props.PushPopupAlert({\n            title: `Post(s) has been updated!`,\n            theme: PopupAlertTheme.info,\n          });\n        }\n      }\n    } catch (error) {\n      console.error({ role_error: error });\n      this.props.PushPopupAlert({\n        title: errorToText(error),\n        theme: PopupAlertTheme.danger,\n      });\n    }\n    this.props.setLoadingRequest(false);\n  };\n\n  setSchoolLevel = (value: string) => {\n    this.setState({ selectedLevel: value });\n  };\n\n  getPositionByLevelId = (\n    allPosition: PositionAPI[],\n    levelId: string\n  ): PositionAPI[] => {\n    if (isEmptyOrSpaces(levelId)) {\n      return allPosition;\n    }\n    return allPosition.filter(\n      (item) => item.school_level_id.school_level_id === levelId\n    );\n  };\n\n  render() {\n    return (\n      <div>\n        <StepsHeader\n          currentStep={this.props.formSteps.TWO ? 2 : 1}\n          stepState={this.props.stepState}\n          setFormSteps={this.props.setFormSteps}\n        />\n        <div className=\"px-4 mx-auto mb-4 mt-3\">\n          {this.props.formSteps.ONE && (\n            <section>\n              <div className=\"flex flex-col mb-4\">\n                <label>School level</label>\n                <select\n                  className=\"border-2 border-gray-700 bg-white p-2 rounded focus:outline-none focus:bg-gray-100\"\n                  value={this.state.selectedLevel}\n                  onChange={(e) => {\n                    this.setSchoolLevel(e.target.value);\n                  }}\n                >\n                  <option value=\"\">Choose level</option>\n                  {this.props.schoolLevels.school_levels &&\n                  this.props.schoolLevels.school_levels.length > 0 ? (\n                    this.props.schoolLevels.school_levels.map((item, index) => (\n                      <option key={index + 11} value={item.school_level_id}>\n                        {item.school_level_name}\n                      </option>\n                    ))\n                  ) : (\n                    <option>No school level found</option>\n                  )}\n                </select>\n              </div>\n\n              <div className=\"flex flex-col\">\n                <label>Select Position</label>\n                <select\n                  className=\"border-2 border-gray-700 bg-white p-2 rounded focus:outline-none focus:bg-gray-100\"\n                  value={this.props.positionId}\n                  onChange={(e) => {\n                    this.props.setPositionId(e.target.value);\n                  }}\n                >\n                  <option value=\"\">Choose Position</option>\n                  {this.props.systemPositions &&\n                  this.getPositionByLevelId(\n                    this.GetAllowedPositions(\n                      this.props.positionId.length > 0\n                        ? this.props.positionId\n                        : \"\"\n                    ),\n                    this.state.selectedLevel\n                  ).length > 0 ? (\n                    this.getPositionByLevelId(\n                      this.GetAllowedPositions(\n                        this.props.positionId.length > 0\n                          ? this.props.positionId\n                          : \"\"\n                      ),\n                      this.state.selectedLevel\n                    ).map((position, index) => (\n                      <option key={index + 11} value={position.position_id}>\n                        {position.position_title}\n                      </option>\n                    ))\n                  ) : (\n                    <option>No position found</option>\n                  )}\n                </select>\n              </div>\n              {this.props.positionId.length > 0 &&\n                this.props.systemPositions &&\n                getPositionById(\n                  this.props.systemPositions,\n                  this.props.positionId\n                ) && (\n                  <div className=\"my-2 rounded border\">\n                    <ViewPosition\n                      thisPosition={\n                        getPositionById(\n                          this.props.systemPositions,\n                          this.props.positionId\n                        )!\n                      }\n                      isGuest={true}\n                    />\n                  </div>\n                )}\n              <div className=\"bg-white w-full flex justify-end\">\n                {this.props.positionId.length > 0 && (\n                  <button\n                    className=\"btn btn-blue m-1 mr-2 mb-2 animate__animated animate__fadeIn focus:outline-none\"\n                    onClick={() => {\n                      this.props.setFormSteps({\n                        ONE: false,\n                        TWO: true,\n                      });\n                      this.props.setStepState({\n                        ONE: true,\n                        TWO: false,\n                      });\n                    }}\n                  >\n                    Continue\n                  </button>\n                )}\n              </div>\n            </section>\n          )}\n          <form onSubmit={this.submitRequest}>\n            <div className=\"bg-white\">\n              {this.props.formSteps.TWO && (\n                <div className=\"text-base leading-6 space-y-4 text-gray-700 sm:text-lg sm:leading-7\">\n                  {this.state.error && (\n                    <div\n                      className=\"alert-warning animate__animated animate__fadeInRight animate__faster\"\n                      onClick={() => this.setState({ error: null })}\n                    >\n                      {this.state.error}\n                    </div>\n                  )}\n                  <div className=\"mb-4 md:flex md:justify-between\">\n                    <div className=\"mb-4 md:mr-2 md:mb-0 w-full\">\n                      <label\n                        className=\"block mb-2 text-sm font-bold text-gray-700\"\n                        htmlFor=\"female\"\n                      >\n                        Current number of Female on this position\n                      </label>\n                      <input\n                        className=\"appearance-none rounded w-full py-1 px-4 border-2 border-gray-700 bg-white focus:outline-none focus:bg-gray-100\"\n                        id=\"female\"\n                        type=\"number\"\n                        min={0}\n                        value={this.props.femaleOnPosition}\n                        onChange={(e) =>\n                          this.props.setFemaleOnPosition(Number(e.target.value))\n                        }\n                        placeholder=\"Current number of Female on this position\"\n                      />\n                      {/* <p className=\"text-xs italic text-red-500\">\n                          Please choose a password.\n                        </p> */}\n                    </div>\n                    <div className=\"md:ml-2 w-full\">\n                      <label\n                        className=\"block mb-2 text-sm font-bold text-gray-700\"\n                        htmlFor=\"male\"\n                      >\n                        Current number of Male on this position\n                      </label>\n                      <input\n                        className=\"appearance-none rounded w-full py-1 px-4 border-2 border-gray-700 bg-white focus:outline-none focus:bg-gray-100\"\n                        id=\"male\"\n                        type=\"number\"\n                        min={0}\n                        value={this.props.maleOnPosition}\n                        onChange={(e) =>\n                          this.props.setMaleOnPosition(Number(e.target.value))\n                        }\n                        placeholder=\"Current number of Male on this post\"\n                      />\n                    </div>\n                  </div>\n                  <div className=\"flex flex-col\">\n                    <label>Needed posts (number)</label>\n                    <input\n                      type=\"number\"\n                      className={`appearance-none rounded w-full py-1 px-4 border-2 bg-white focus:outline-none focus:bg-gray-100 ${\n                        this.props.formError &&\n                        this.props.formError.element === \"requested_posts\"\n                          ? \"border-red-700\"\n                          : \"border-gray-700\"\n                      }`}\n                      value={this.props.requestedPosts}\n                      onChange={(e) => {\n                        this.props.setRequestedPosts(Number(e.target.value));\n                        this.props.formError &&\n                          this.props.formError.element === \"requested_posts\" &&\n                          this.props.setFormError(null);\n                      }}\n                      placeholder=\"1\"\n                    />\n                    {this.props.formError &&\n                      this.props.formError.element === \"requested_posts\" && (\n                        <span className=\"text-xs italic text-red-700 mt-1\">\n                          {this.props.formError.msg}\n                        </span>\n                      )}\n                  </div>\n                  <div className=\"flex flex-col\">\n                    <label>Explanation</label>\n                    <textarea\n                      name=\"description\"\n                      className={`appearance-none rounded w-full py-1 px-4 border-2 bg-white focus:outline-none focus:bg-gray-100 ${\n                        this.props.formError &&\n                        this.props.formError.element === \"comment\"\n                          ? \"border-red-700\"\n                          : \"border-gray-700\"\n                      }`}\n                      id=\"description\"\n                      placeholder=\"Explanation\"\n                      value={this.props.requestExplanation}\n                      onChange={(e) => {\n                        this.props.setRequestExplanation(e.target.value);\n                        this.props.formError &&\n                          this.props.formError.element === \"comment\" &&\n                          this.props.setFormError(null);\n                      }}\n                      rows={2}\n                    ></textarea>\n                    {this.props.formError &&\n                      this.props.formError.element === \"comment\" && (\n                        <span className=\"text-xs italic text-red-700 mt-1\">\n                          {this.props.formError.msg}\n                        </span>\n                      )}\n                  </div>\n                </div>\n              )}\n              <div className=\"pt-4 flex justify-between\">\n                <button\n                  className=\"btn bg-gray-400 text-white hover:bg-gray-600\"\n                  onClick={() => {\n                    this.props.setPositionId(\"\");\n                    this.props.setRequestedPosts(0);\n                    this.props.setFemaleOnPosition(0);\n                    this.props.setMaleOnPosition(0);\n                    this.props.setRequestExplanation(\"\");\n                    this.props.setModalState(null);\n                    this.props.setFormError(null);\n                    this.props.setFormSteps({ ONE: true, TWO: false });\n                    this.props.setStepState({ ONE: false, TWO: false });\n                  }}\n                  disabled={this.props.loadingRequest}\n                >\n                  Exit\n                </button>\n                {this.props.formSteps.TWO && (\n                  <button\n                    className=\"btn bg-primary text-white hover:bg-blue-600\"\n                    disabled={this.props.loadingRequest}\n                  >\n                    {this.props.loadingRequest\n                      ? \"Loading...\"\n                      : this.props.modalState === \"UPDATE\"\n                      ? \"Update\"\n                      : \"Request\"}\n                  </button>\n                )}\n              </div>\n            </div>\n          </form>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = ({\n  auth,\n  schools,\n  system_settings,\n  schoolLevels,\n}: StoreState): {\n  auth: Auth;\n  mySchool: MySchoolInterface | null;\n  schoolPosts: PostSchoolInterface[];\n  schoolLevels: schoolLevelsStoreInterface;\n  systemPositions: PositionAPI[] | null;\n} => {\n  return {\n    auth: auth,\n    mySchool: schools.mySchool,\n    schoolPosts: schools.schoolPosts,\n    schoolLevels,\n    systemPositions: system_settings.systemPositions,\n  };\n};\n\nexport default connect(mapStateToProps, {\n  createSchoolPost,\n  updateSchoolPost,\n  PushPopupAlert,\n})(RequestPostForm);\n","import React, { Component } from \"react\";\nimport { GiTeacher } from \"react-icons/gi\";\nimport { MdInfoOutline } from \"react-icons/md\";\nimport { connect } from \"react-redux\";\nimport { Redirect } from \"react-router-dom\";\nimport {\n  Auth,\n  loadSchoolLevels,\n  PushPopupAlert,\n  schoolLevelsStoreInterface,\n} from \"../../actions\";\nimport {\n  getSchoolById,\n  fetchSchoolPosts,\n  createSchoolPost,\n  updateSchoolPost,\n  getSchoolPlacement,\n} from \"../../actions/schools\";\nimport { getActiveAcademicSession } from \"../../actions/session\";\nimport { getPositions } from \"../../actions/settings\";\nimport { PopupAlertData } from \"../../components/Alert/Popup\";\nimport { AcademicSessionInterface, PositionAPI } from \"../../interfaces\";\nimport {\n  placedCandidateInterface,\n  PlacedCandidateStatus,\n} from \"../../interfaces/marks_publication\";\nimport { PopupAlertTheme } from \"../../interfaces/popupAlert\";\nimport { StoreState } from \"../../reducers\";\nimport { isEmptyOrSpaces } from \"../../shared/dataTest\";\nimport {\n  PostSchoolInterface,\n  MySchoolInterface,\n} from \"../../shared/interfaces\";\nimport ReceivePost from \"./ReceivePost\";\nimport RequestList from \"./RequestList\";\nimport RequestPostForm from \"./RequestPostForm\";\n\nexport const getPlacementByRequest = (\n  placements: placedCandidateInterface[],\n  request: string,\n  status: PlacedCandidateStatus | \"all\" = PlacedCandidateStatus.PENDING\n): placedCandidateInterface[] => {\n  console.log(\"====================================\");\n  console.log({ placements, request });\n  console.log(\"====================================\");\n  if (status !== \"all\") {\n    // position id must be replaced with request id\n    return placements.filter(\n      (item) => item.request_id === request && item.status === status\n    );\n  }\n  return placements.filter((item) => item.request_id === request);\n};\n\ninterface RequestTeacherProps {\n  auth: Auth;\n  mySchool: MySchoolInterface | null;\n  schoolLevels: schoolLevelsStoreInterface;\n  systemPositions: PositionAPI[] | null;\n  schoolPosts: PostSchoolInterface[];\n  schoolPlacements: placedCandidateInterface[] | null;\n  activeAcademicSession: AcademicSessionInterface | \"none\" | null;\n  getActiveAcademicSession: Function;\n  getPositions: Function;\n  fetchSchoolPosts: Function;\n  getSchoolPlacement: Function;\n  createSchoolPost: Function;\n  updateSchoolPost: Function;\n  getSchoolById: Function;\n  loadSchoolLevels: (callback: (loading: boolean) => void) => void;\n  PushPopupAlert: (alert: PopupAlertData) => void;\n}\n\ninterface RequestTeacherState {\n  loading: boolean;\n  loadingPost: boolean;\n  loadingRequest: boolean;\n  modalState: \"CREATE\" | \"UPDATE\" | \"RECEIVE\" | null;\n  filterByPosition: string;\n  positionId: string;\n  requestedPosts: number;\n  femaleOnPosition: number;\n  maleOnPosition: number;\n  requestExplanation: string;\n  formSteps: {\n    ONE: boolean;\n    TWO: boolean;\n  };\n  stepState: {\n    ONE: boolean;\n    TWO: boolean;\n  };\n  thisPost: PostSchoolInterface | null;\n  viewPost: boolean;\n  postId: string;\n  receivedPosts: number;\n  formError: {\n    element: string;\n    msg: string;\n  } | null;\n}\nclass RequestTeacher extends Component<\n  RequestTeacherProps,\n  RequestTeacherState\n> {\n  constructor(props: RequestTeacherProps) {\n    super(props);\n\n    this.state = {\n      loading: true,\n      loadingPost: true,\n      loadingRequest: false,\n      modalState: null,\n      filterByPosition: \"\",\n      positionId: \"\",\n      requestedPosts: 0,\n      femaleOnPosition: 0,\n      maleOnPosition: 0,\n      requestExplanation: \"\",\n      formSteps: { ONE: true, TWO: false },\n      stepState: { ONE: false, TWO: false },\n      thisPost: null,\n      viewPost: false,\n      postId: \"\",\n      receivedPosts: 0,\n      formError: null,\n    };\n  }\n\n  setLoading = (value: boolean) => {\n    this.setState({ loading: value });\n  };\n\n  setLoadingRequest = (value: boolean) => {\n    this.setState({ loadingRequest: value });\n  };\n\n  setLoadingPost = (value: boolean) => {\n    this.setState({ loadingPost: value });\n  };\n\n  setViewPost = (value: boolean) => {\n    this.setState({ viewPost: value });\n  };\n\n  setPostId = (value: string) => {\n    this.setState({ postId: value });\n  };\n\n  setFormError = (\n    value: {\n      element: string;\n      msg: string;\n    } | null\n  ) => {\n    this.setState({ formError: value });\n  };\n\n  setPositionId = (value: string) => {\n    this.setState({ positionId: value });\n  };\n  setRequestedPosts = (value: number) => {\n    this.setState({ requestedPosts: value });\n  };\n  setFemaleOnPosition = (value: number) => {\n    this.setState({ femaleOnPosition: value });\n  };\n  setMaleOnPosition = (value: number) => {\n    this.setState({ maleOnPosition: value });\n  };\n  setRequestExplanation = (value: string) => {\n    this.setState({ requestExplanation: value });\n  };\n  setFormSteps = (value: { ONE: boolean; TWO: boolean }) => {\n    this.setState({ formSteps: value });\n  };\n  setStepState = (value: { ONE: boolean; TWO: boolean }) => {\n    this.setState({ stepState: value });\n  };\n  setFilterByPosition = (value: string) => {\n    this.setState({ filterByPosition: value });\n  };\n\n  setThisPost = (value: PostSchoolInterface | null) => {\n    this.setState({ thisPost: value });\n  };\n\n  setModalState = (value: \"CREATE\" | \"UPDATE\" | \"RECEIVE\" | null) => {\n    this.setState({ modalState: value });\n  };\n\n  setReceivedPosts = (value: number) => {\n    this.setState({ receivedPosts: value });\n  };\n\n  loadData = () => {\n    if (!this.props.mySchool) {\n      this.props.getSchoolById(\n        this.props.auth.user_access.school_id,\n        (status: boolean, msg: string) => {\n          this.setLoading(status);\n          if (msg.length > 0) {\n            console.error({ loadingCandidatesError: msg });\n            this.props.PushPopupAlert({\n              title: msg,\n              theme: PopupAlertTheme.danger,\n            });\n            this.setLoading(false);\n          }\n        }\n      );\n    } else {\n      this.setLoading(false);\n    }\n\n    if (!this.props.schoolPlacements) {\n      this.props.getSchoolPlacement(\n        this.props.auth.user_access.school_id,\n        (status: boolean, msg: string, data?: placedCandidateInterface[]) => {\n          this.setLoading(status);\n          if (!status && msg.length > 0) {\n            console.error({ getSchoolPlacementError: msg });\n            this.props.PushPopupAlert({\n              title: msg,\n              theme: PopupAlertTheme.danger,\n            });\n          }\n        }\n      );\n    } else {\n      this.setLoading(false);\n    }\n\n    if (\n      this.props.systemPositions === null ||\n      (this.props.systemPositions.length === 0 && this.state.loading)\n    ) {\n      this.setLoading(true);\n      this.props.getPositions((status: boolean, msg: string) => {\n        this.setLoading(status);\n        console.log({ status: status, msg: msg });\n        if (msg.length) {\n          this.props.PushPopupAlert({\n            title: msg,\n            theme: PopupAlertTheme.danger,\n          });\n        }\n      });\n    } else {\n      this.setLoading(false);\n    }\n\n    if (\n      this.props.schoolLevels.school_levels === null ||\n      (this.props.schoolLevels.school_levels.length === 0 && this.state.loading)\n    ) {\n      this.props.loadSchoolLevels(this.setLoading);\n    }\n\n    if (!this.props.schoolPosts.length && this.state.loadingPost) {\n      this.props.fetchSchoolPosts(\n        this.props.auth.user_access.school_id,\n        (status: boolean, message: string) => {\n          if (!status) {\n            if (message.length > 0 && this.state.loadingPost) {\n              console.error(\"error loading school post: \", message);\n              this.props.PushPopupAlert({\n                title: message,\n                theme: PopupAlertTheme.danger,\n              });\n            }\n            this.setState({ loadingPost: false });\n          }\n        }\n      );\n    } else {\n      this.setState({ loadingPost: false });\n    }\n  };\n\n  componentDidMount = () => {\n    if (isEmptyOrSpaces(this.props.auth.user_access.school_id)) {\n      return <Redirect to=\"/apps-page\" />;\n    }\n    if (\n      this.props.activeAcademicSession === null ||\n      this.props.activeAcademicSession === \"none\"\n    ) {\n      this.props.getActiveAcademicSession(\n        (\n          status: boolean,\n          msg: string,\n          data?: AcademicSessionInterface | \"none\"\n        ) => {\n          this.setLoading(status);\n          if (msg.length > 0) {\n            console.error({ loadingCandidatesError: msg });\n            this.props.PushPopupAlert({\n              title: msg,\n              theme: PopupAlertTheme.danger,\n            });\n          }\n          if (data && data !== \"none\") this.loadData();\n        }\n      );\n    } else this.loadData();\n  };\n\n  getPositionById = (\n    systemPositions: PositionAPI[],\n    positionId: string\n  ): PositionAPI | undefined => {\n    return systemPositions.find((item) => item.position_id === positionId);\n  };\n\n  render() {\n    if (\n      this.props.activeAcademicSession !== null &&\n      this.props.activeAcademicSession === \"none\"\n    ) {\n      return (\n        <div className=\"bg-yellow-100 rounded flex flex-col items-center justify-center p-6 my-8 text-yellow-900 border border-yellow-900\">\n          <MdInfoOutline className=\"text-6xl md:text-9xl\" />\n          <div className=\"text-center flex flex-col\">\n            <span className=\"text-2xl md:text-4xl font-extrabold\">\n              No academic active session\n            </span>\n            <span className=\"text-lg\">\n              Please Wait for the system to publish the sessions or contact the\n              administrator\n            </span>\n          </div>\n        </div>\n      );\n    }\n    if (this.state.loading) {\n      return (\n        <div className=\"text-center mt-7 font-bold text-4xl text-gray-400 animate-pulse\">\n          Loading data...\n        </div>\n      );\n    }\n\n    return (\n      <div>\n        {/* header title */}\n        <div className=\"flex flex-row items-start gap-3 my-2\">\n          <GiTeacher className=\"text-blue-700 w-10 h-10 md:block hidden\" />\n          <div className=\"w-full\">\n            <div className=\"flex justify-between w-full\">\n              <div className=\"flex flex-col gap-1 justify-between\">\n                <h1 className=\"md:text-4xl text-3xl font-semibold\">\n                  Teacher Request\n                </h1>\n\n                <div className=\"flex-row items-center md:gap-3 gap-2\">\n                  <div className=\"flex flex-row items-center gap-1\">\n                    <span className=\"text-gray-600 text-lg\">\n                      Academic session:\n                    </span>\n                    <span className=\"text-gray-600 font-semibold text-xl\">\n                      {this.props.activeAcademicSession?.title}\n                    </span>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n        {/* end header title */}\n\n        <div className=\"bg-white shadow p-2 rounded\">\n          {!this.state.modalState && this.props.schoolPlacements && (\n            <RequestList\n              systemPositions={this.props.systemPositions}\n              setModalState={this.setModalState}\n              loadingRequest={this.state.loadingRequest}\n              setFilterByPosition={this.setFilterByPosition}\n              schoolPosts={this.props.schoolPosts}\n              setThisPost={this.setThisPost}\n              setViewPost={this.setViewPost}\n              setPostId={this.setPostId}\n              setPositionId={this.setPositionId}\n              setRequestedPosts={this.setRequestedPosts}\n              setRequestExplanation={this.setRequestExplanation}\n              setFemaleOnPosition={this.setFemaleOnPosition}\n              setMaleOnPosition={this.setMaleOnPosition}\n              setFormSteps={this.setFormSteps}\n              setStepState={this.setStepState}\n              thisPost={this.state.thisPost}\n              viewPost={this.state.viewPost}\n              modalState={this.state.modalState}\n              schoolPlacements={this.props.schoolPlacements}\n              filterByPosition={this.state.filterByPosition}\n            />\n          )}\n\n          {this.props.activeAcademicSession &&\n            (this.state.modalState === \"CREATE\" ||\n              this.state.modalState === \"UPDATE\") && (\n              <RequestPostForm\n                loadingRequest={this.state.loadingRequest}\n                setLoadingRequest={this.setLoadingRequest}\n                formSteps={this.state.formSteps}\n                setFormSteps={this.setFormSteps}\n                stepState={this.state.stepState}\n                setStepState={this.setStepState}\n                sessionId={this.props.activeAcademicSession?._id}\n                postId={this.state.postId}\n                setPostId={this.setPostId}\n                positionId={this.state.positionId}\n                setPositionId={this.setPositionId}\n                setRequestedPosts={this.setRequestedPosts}\n                requestedPosts={this.state.requestedPosts}\n                maleOnPosition={this.state.maleOnPosition}\n                femaleOnPosition={this.state.femaleOnPosition}\n                setFemaleOnPosition={this.setFemaleOnPosition}\n                setMaleOnPosition={this.setMaleOnPosition}\n                requestExplanation={this.state.requestExplanation}\n                setRequestExplanation={this.setRequestExplanation}\n                modalState={this.state.modalState}\n                setModalState={this.setModalState}\n                formError={this.state.formError}\n                setFormError={this.setFormError}\n              />\n            )}\n\n          {this.state.modalState === \"RECEIVE\" &&\n            this.state.thisPost &&\n            this.props.systemPositions &&\n            this.props.schoolPlacements && (\n              <ReceivePost\n                loadingPost={this.state.loadingPost}\n                loadingRequest={this.state.loadingRequest}\n                positionId={this.state.positionId}\n                thisPost={this.state.thisPost}\n                viewPost={this.state.viewPost}\n                receivedPosts={this.state.receivedPosts}\n                formError={this.state.formError}\n                systemPositions={this.props.systemPositions}\n                setThisPost={this.setThisPost}\n                setModalState={this.setModalState}\n                setFormError={this.setFormError}\n                setReceivedPosts={this.setReceivedPosts}\n                setLoadingRequest={this.setLoadingRequest}\n                setLoadingPost={this.setLoadingPost}\n                placementList={this.props.schoolPlacements}\n              />\n            )}\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = ({\n  auth,\n  schools,\n  system_settings,\n  schoolLevels,\n  sessionPlan,\n}: StoreState): {\n  auth: Auth;\n  mySchool: MySchoolInterface | null;\n  schoolPosts: PostSchoolInterface[];\n  schoolPlacements: placedCandidateInterface[] | null;\n  schoolLevels: schoolLevelsStoreInterface;\n  systemPositions: PositionAPI[] | null;\n  activeAcademicSession: AcademicSessionInterface | \"none\" | null;\n} => {\n  return {\n    auth: auth,\n    mySchool: schools.mySchool,\n    schoolPosts: schools.schoolPosts,\n    schoolPlacements: schools.schoolPlacements,\n    schoolLevels,\n    systemPositions: system_settings.systemPositions,\n    activeAcademicSession: sessionPlan.activeAcademicSession,\n  };\n};\n\nexport const PostRequest = connect(mapStateToProps, {\n  loadSchoolLevels,\n  getPositions,\n  getSchoolById,\n  fetchSchoolPosts,\n  getSchoolPlacement,\n  createSchoolPost,\n  updateSchoolPost,\n  getActiveAcademicSession,\n  PushPopupAlert,\n})(RequestTeacher);\n"],"sourceRoot":""}
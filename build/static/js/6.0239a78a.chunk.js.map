{"version":3,"sources":["utils/search.ts","../node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js","containers/Application/ApplicationPositions/SchoolLevelsFilter/SchoolLevelsItem.tsx","containers/Application/ApplicationPositions/SchoolLevelsFilter/SchoolLevelsFilter.tsx","components/NoResult/NoResult.tsx","components/ApplicationPeriods/ApplicationPeriods.tsx","components/Courses/Courses.tsx","components/Questions/QuestionItem.tsx","components/Questions/Questions.tsx","interfaces/prepare_exam.ts","containers/PrepareExam/PrepareExam.tsx"],"names":["search","objList","text","keys","undefined","filter","product","flag","dataKeys","prop","toString","toLowerCase","indexOf","_createForOfIteratorHelper","o","allowArrayLike","it","Symbol","iterator","Array","isArray","length","i","F","s","n","done","value","e","_e","f","TypeError","err","normalCompletion","didErr","step","next","_e2","SchoolLevelsItem","props","useState","levelsDropDown","setLevelsDropDown","className","onClick","searchLevel","schoolLevel","educationCategoryDetails","education_institute_id","educationCategory","setSearchLevel","initializeItem","education_category_title","description","activateItem","console","log","schoolLevels","map","item","education_institute","find","itm","educationCate","activateLevelItem","school_level_name","SchoolLevelsFilter","educationCategories","Loading","NoResultThemes","NoResult","theme","Dark","component","ApplicationPeriods","type","placeholder","applicationPeriods","setSelectedPeriod","showPeriodFilter","is_active","application_session_name","DATE","application_start_date","application_end_date","_UploadQuestion","setLoading","status","setState","loading","setSelectedEducationCategory","setSelectedSchoolLevel","showFilter","setSchoolLevelFilterFn","filteredCourses","courses","searched","filtered","school_levels","itm1","school_level_id","item2","setUploadingStatus","uploadingStatus","componentDidMount","course","loadCourses","state","searchCourseInput","this","education_categories","loadEducationCategories","loadSchoolLevels","onChange","target","style","minHeight","searchData","setSelectedCourse","selected_course_id","course_id","course_name","course_code","title","backDrop","Themes","default","close","backDropClose","widthSizeClass","ModalSize","medium","displayClose","padding","Component","UploadQuestion","connect","auth","questionBank","QuestionItem","select","callBack","question","number","questionTypes","id","Questions","setUploadedQuestions","loadQuestionTypes","useEffect","questionsList","selectedCourse","questionPaper","QuestionNumberFormat","PrepareExamStatus","returnQuestionNumbering","numbering","ABC","abc","I","NUMBER","EXAM_QUESTIONS_NUMBERING","key","_PrepareExam","addQuestionToPaper","addExamQuestion","removeToQuestionPaper","window","confirm","selectPeriod","chooseCourse","myCourse","conf","prepareExam","questions","x","selectCourse","examQuestionsIds","ids","submitExamPreparation","a","formErr","periods","selected_period","element","msg","selected_course","exam_date","start_time","duration","questions_per_page","number_format","discription","termes","axios","post","API","QBank","period","application_session_id","exam_status","Created","redirectToExams","PushPopupAlert","PopupAlertTheme","success","response","data","errors","message","loadApplicationPeriods","loadQuestionBank","addQuestionModal","to","parseInt","selected","AlertInterface","danger","large","PrepareExam","system"],"mappings":"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","file":"static/js/6.0239a78a.chunk.js","sourcesContent":["const search = (objList: any[], text: any, keys: any = null) => {\n  if (undefined === text || text === \"\") return objList;\n  return objList.filter((product) => {\n    let flag;\n    let dataKeys = keys === null ? product : keys;\n    for (let prop in dataKeys) {\n      flag = false;\n      flag =\n        product[prop].toString().toLowerCase().indexOf(text.toLowerCase()) > -1;\n      if (flag) break;\n    }\n    return flag;\n  });\n};\n\nexport default search;\n","import unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nexport default function _createForOfIteratorHelper(o, allowArrayLike) {\n  var it;\n\n  if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) {\n    if (Array.isArray(o) || (it = unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n      if (it) o = it;\n      var i = 0;\n\n      var F = function F() {};\n\n      return {\n        s: F,\n        n: function n() {\n          if (i >= o.length) return {\n            done: true\n          };\n          return {\n            done: false,\n            value: o[i++]\n          };\n        },\n        e: function e(_e) {\n          throw _e;\n        },\n        f: F\n      };\n    }\n\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n\n  var normalCompletion = true,\n      didErr = false,\n      err;\n  return {\n    s: function s() {\n      it = o[Symbol.iterator]();\n    },\n    n: function n() {\n      var step = it.next();\n      normalCompletion = step.done;\n      return step;\n    },\n    e: function e(_e2) {\n      didErr = true;\n      err = _e2;\n    },\n    f: function f() {\n      try {\n        if (!normalCompletion && it[\"return\"] != null) it[\"return\"]();\n      } finally {\n        if (didErr) throw err;\n      }\n    }\n  };\n}","import {useState} from 'react'\nimport * as Interfaces from '../../../../interfaces/index';\nimport { FiChevronDown, FiChevronRight } from 'react-icons/fi';\nimport { searchItem } from '../ApplicationPositions';\n\ninterface SchoolLevelsItemPropsInterface {\n  educationCategoryDetails: Interfaces.education_category;\n  schoolLevels: Interfaces.school_level[] | null;\n  searchLevel: searchItem | null;\n  setSearchLevel: (educationCategory: Interfaces.education_category | null, schoolLevel: Interfaces.school_level | null) => void;\n}\n\nconst SchoolLevelsItem = (props: SchoolLevelsItemPropsInterface):JSX.Element => {\n  const [levelsDropDown, setLevelsDropDown] = useState<boolean>(false);\n  const initializeItem = (levelsDropDown: boolean, props: any) => { \n    if ((props.searchLevel !== null && props.searchLevel.schoolLevel === null) || (props.searchLevel !== null && props.educationCategoryDetails.education_institute_id !== props.searchLevel.educationCategory.education_institute_id) || props.setSearchLevel === null) {\n      levelsDropDown === false && props.setSearchLevel(null, null); \n      levelsDropDown === false && props.setSearchLevel(props.educationCategoryDetails, null); \n    }\n  }\n  const activateItem = (levelsDropDown: boolean, props: any) => { \n    props.setSearchLevel(null, null); \n    props.setSearchLevel(props.educationCategoryDetails, null); \n  }\n  const activateLevelItem = (educationCate: Interfaces.education_category, item: Interfaces.school_level) => { \n    props.setSearchLevel(null, null); \n    props.setSearchLevel(educationCate, item); \n  }\n  return (\n    <div className=\"flex flex-col\">\n      <div onClick={() => {setLevelsDropDown(!levelsDropDown); initializeItem(levelsDropDown, props)}} className=\"flex flex-row justify-between items-center py-2 px-2 bg-blue-100 rounded cursor-pointer hover:bg-blue-200 mb-2\">\n        <div className=\"flex flex-col pl-1\">\n          <span className=\"uppercase text-blue-600 text-lg font-bold\">{props.educationCategoryDetails.education_category_title}</span>\n          <span className=\"text-xs\">{props.educationCategoryDetails.description}</span>\n        </div>\n        <div className=\"px-1 py-1 rounded-full flex items-center justify-center cursor-pointer text-blue-600 bg-blue-100 hover:bg-white hover:text-blue-800\">\n          {levelsDropDown === false ? <FiChevronRight className=\"text-2xl\" /> : <FiChevronDown className=\"text-2xl\" />}\n        </div>\n      </div>\n      {levelsDropDown === true &&\n      <div className=\"flex flex-col\">\n        <div onClick={() => activateItem(levelsDropDown, props)} className={`flex flex-row justify-between items-center py-2 px-2 bg-blue-50 rounded cursor-pointer hover:bg-blue-50 mb-2 ml-5 border ${props.searchLevel !== null && props.searchLevel.educationCategory !== null && props.searchLevel.educationCategory.education_institute_id === props.educationCategoryDetails.education_institute_id && props.searchLevel.schoolLevel === null ? \"border-blue-500\" : \"border-blue-100\"} hover:border-blue-500`}>\n          <div className=\"flex flex-col pl-1\">\n            <span className=\"text-blue-700 text-sm font-bold\">All levels</span>\n          </div>\n        </div>\n        {console.log(\"Institute: \", props.educationCategoryDetails)}\n        {props.schoolLevels === null ? \"Loading...\" :\n        props.schoolLevels.length === 0 ? \"No levels found\" :\n        props.schoolLevels.map((item, i) => (\n          item.education_institute.find(itm => itm === props.educationCategoryDetails.education_institute_id) && \n          <div onClick={() => activateLevelItem(props.educationCategoryDetails, item)} key={i + 1} className={`flex flex-row justify-between items-center py-2 px-2 bg-blue-50 rounded cursor-pointer hover:bg-blue-50 mb-2 ml-5 border ${props.searchLevel !== null && props.searchLevel.schoolLevel !== null && props.searchLevel.schoolLevel === item && props.searchLevel.educationCategory !== null && props.searchLevel.educationCategory.education_institute_id === props.educationCategoryDetails.education_institute_id ? \"border-blue-500\" : \"border-blue-100\"} hover:border-blue-500`}>\n            <div className=\"flex flex-col pl-1\">\n              <span className=\"text-blue-700 text-sm font-bold\">{item.school_level_name}</span>\n            </div>\n          </div>\n        ))}\n      </div>}\n    </div>\n  )\n}\n\nexport default SchoolLevelsItem\n","import SchoolLevelsItem from './SchoolLevelsItem'\nimport * as Interfaces from '../../../../interfaces/index';\nimport { searchItem } from '../ApplicationPositions';\nimport Loading from '../../../../components/Loading/Loading';\n\ninterface SchoolLevelsFilterPropsInterface {\n  educationCategories: Interfaces.education_category[] | null;\n  schoolLevels: Interfaces.school_level[] | null;\n  searchLevel: searchItem | null;\n  setSearchLevel: (educationCategory: Interfaces.education_category | null, schoolLevel: Interfaces.school_level | null) => void\n  setSchoolLevelFilterFn: (status: boolean) => void;\n}\n\nconst SchoolLevelsFilter = (props: SchoolLevelsFilterPropsInterface) => {\n  return (\n    <div className=\"col-span-12 md:col-span-4 md:static w-full top-2\">\n      <div className=\"bg-white shadow rounded-sm px-2 py-2\">\n        {console.log(props.educationCategories)}\n        {props.educationCategories === null ? <Loading /> :\n        props.educationCategories.length === 0 ? \"No Education categories available\" :\n        props.educationCategories.map((item, i) => (\n          <SchoolLevelsItem \n            key={i + 1} educationCategoryDetails={item} \n            schoolLevels={props.schoolLevels}\n            searchLevel={props.searchLevel}\n            setSearchLevel={props.setSearchLevel}\n            />\n        ))}\n      </div>\n    </div>\n  )\n}\n\nexport default SchoolLevelsFilter\n","import React from 'react'\nimport { RiSearchLine } from 'react-icons/ri'\n\nexport enum NoResultThemes {\n  Dark = \"Dark\",\n  Light = \"Light\",\n}\n\ninterface NoResultProps {\n  theme: NoResultThemes;\n  value: string;\n  component?: any;\n}\n\nconst NoResult = (props: NoResultProps) => {\n  return (\n    <div className={`flex flex-col py-4 justify-center items-center text-gray-500 border-2 border-white ${props.theme === NoResultThemes.Dark ? \"bg-gray-100\" : \"bg-white\"} rounded`}>\n      <RiSearchLine className=\"text-6xl text-gray-500 animate__animated animate__shakeX\" />\n      <span className=\"text-xl mb-3\">{props.value}</span>\n      {props.component !== undefined &&\n      props.component}\n    </div>\n  )\n}\n\nexport default NoResult\n","import React from 'react'\nimport { FaBusinessTime } from 'react-icons/fa';\nimport { ApplicationPeriodGet } from '../../interfaces/application';\nimport { DATE } from '../../utils/functions';\nimport Loading from '../Loading/Loading';\n\ninterface ApplicationPeriodsProps {\n  applicationPeriods: ApplicationPeriodGet[] | null;\n  setSelectedPeriod: (period: ApplicationPeriodGet) => void;\n  showPeriodFilter: (status: boolean) => void;\n}\n\nconst ApplicationPeriods = (props: ApplicationPeriodsProps) => {\n  return (\n    <div className=\"-mt-4\">\n      <input type=\"text\" className=\"input-white border -mt-2 mb-3\" placeholder=\"Search by year, name\" />\n      {props.applicationPeriods === null ? <Loading /> : props.applicationPeriods.map((item, i) => (\n        <div onClick={() => {props.setSelectedPeriod(item); props.showPeriodFilter(false)}} key={i + 1} \n          className={`flex flex-col md:flex-row items-start md:items-center md:justify-between rounded border ${item.is_active === true ? \"bg-blue-50 border-blue-100\" : \"bg-gray-50 border-gray-100 \"} hover:bg-blue-100 hover:border-blue-500 px-2 py-2 cursor-pointer mb-2`}>\n          <div className=\"flex flex-row items-center gap-3\">\n            <FaBusinessTime className={`${item.is_active === true ? \"text-blue-600\" : \"text-gray-500\"} text-4xl`} />\n            <div className=\"flex flex-col\">\n              <div className={`${item.is_active === true ? \"text-blue-600\" : \"text-gray-600\"} font-bold`}>{item.application_session_name}</div>\n              <div className=\"text-sm text-gray-500\"><span>Status: </span><span className={`${item.is_active === true ? \"text-blue-600\" : \"text-gray-600\"}`}>{item.is_active === true ? \"Active\" : \"Expired\"}</span></div>\n            </div>\n          </div>\n          <div className=\"flex flex-col items-start md:items-end md:justify-end\">\n            <div className=\"text-xs md:text-sm text-right text-gray-500\"><span>Start: </span><span className={`${item.is_active === true ? \"text-blue-600\" : \"text-gray-600\"} text-right font-bold`}>{DATE(item.application_start_date, \"DD/MM/YYYY\")}</span></div>\n            <div className=\"text-xs md:text-sm text-right text-gray-500\"><span>End: </span><span className={`${item.is_active === true ? \"text-blue-600\" : \"text-gray-600\"} text-right font-bold`}>{DATE(item.application_end_date, \"DD/MM/YYYY\")}</span></div>\n          </div>\n        </div>\n      ))}\n    </div>\n  )\n}\n\nexport default ApplicationPeriods\n","import React, { Component, Fragment } from 'react'\nimport { FiFilter } from 'react-icons/fi';\nimport * as Interfaces from \"../../interfaces/index\";\nimport searchData from \"../../utils/search\";\n\nimport { connect } from \"react-redux\";\nimport {\n  Auth, \n  courseStoreInterface,\n  loadCourses,\n  schoolLevelsStoreInterface,\n  loadSchoolLevels,\n  loadEducationCategories,\n  setSelectedEducationCategory,\n  setSelectedSchoolLevel,\n  QuestionBankStoreInterface,\n} from \"../../actions\";\nimport { StoreState } from \"../../reducers\";\nimport { course } from '../../interfaces/course';\nimport Loading from '../../components/Loading/Loading';\nimport Modal, { ModalSize, Themes } from '../../components/Modal/Modal';\nimport { FaAngleRight } from 'react-icons/fa';\nimport { searchItem } from '../../containers/Application/ApplicationPositions/ApplicationPositions';\nimport SchoolLevelsFilter from '../../containers/Application/ApplicationPositions/SchoolLevelsFilter/SchoolLevelsFilter';\n\ninterface UploadQuestionState {\n  loading: boolean;\n  searchLevel: searchItem | null;\n  showFilter: boolean;\n  uploadingStatus: boolean;\n  searchCourseInput: string;\n}\ninterface UploadQuestionProps {\n  auth: Auth;\n  course: courseStoreInterface;\n  schoolLevels: schoolLevelsStoreInterface;\n  questionBank: QuestionBankStoreInterface;\n  selected_course_id: string | null;\n  loadEducationCategories: (callback: (loading: boolean) => void) => void;\n  loadSchoolLevels: (callback: (loading: boolean) => void) => void;\n  setSelectedEducationCategory: (\n    education_category: Interfaces.education_category\n  ) => void;\n  setSelectedSchoolLevel: (education_category: Interfaces.school_level) => void;\n  loadCourses: (callback: (loading: boolean) => void) => void;\n  setSelectedCourse: (course: course | null) => void;\n}\n\nclass _UploadQuestion extends Component<UploadQuestionProps, UploadQuestionState> {\n  constructor(props: UploadQuestionProps) {\n\t\tsuper(props);\n\n\t\tthis.state = {\n      loading: false,\n      searchLevel: null,\n      showFilter: false,\n      uploadingStatus: false,\n      searchCourseInput: \"\",\n\t\t};\n\t}\n\n  setLoading = (status: boolean) => {\n    this.setState({ loading: status });\n  }\n\n  setSearchLevel = (\n    educationCategory: Interfaces.education_category | null,\n    schoolLevel: Interfaces.school_level | null\n  ) => {\n    this.setState({\n      searchLevel: {\n        educationCategory: educationCategory,\n        schoolLevel: schoolLevel,\n      },\n    });\n    if (educationCategory) {\n      this.props.setSelectedEducationCategory(educationCategory);\n    }\n    if (schoolLevel) {\n      this.props.setSelectedSchoolLevel(schoolLevel);\n      this.setState({ showFilter: false });\n    }\n  };\n\n  setSchoolLevelFilterFn = (status: boolean) => {\n    this.setState({ showFilter: status });\n  };\n\n  filteredCourses = (courses: course[], searched: searchItem | null): course[] => {\n    let filtered: course[] = courses;\n    if (searched !== null) {\n      if (searched.schoolLevel !== null) {\n        filtered = courses.filter((itm) => {\n          if (itm.school_levels.find(itm1 => itm1 === searched.schoolLevel?.school_level_id)) {\n            let status = false;\n            for (let item2 of itm.school_levels) {\n              if (searched.educationCategory?.school_levels.find(i => i === item2)) {\n                status = true;\n              }\n            }\n            return status === true ? itm : null;\n          } else {\n            return null;\n          }\n        })\n      } else if (searched.educationCategory !== null) {\n        filtered = courses.filter((itm) => {\n          let status = false;\n          for (let item2 of itm.school_levels) {\n            if (searched.educationCategory?.school_levels.find(i => i === item2)) {\n              status = true;\n            }\n          }\n          return status === true ? itm : null;\n        })\n      }\n    }\n    return filtered;\n  }\n\n  setUploadingStatus = (status: boolean) => {\n    this.setState({ uploadingStatus: status});\n  }\n\n  componentDidMount = () => {\n    if (this.props.course.courses === null || this.props.course.courses.length === 0) {\n      this.props.loadCourses(this.setLoading);\n    }\n  }\n\n  render() {\n    return (\n      <Fragment>\n        <div className=\"flex-col\">\n          <div className=\"my-4 grid md:grid-cols-5 gap-2\">\n            <div className={`animate__animated md:col-span-5 md:flex md:flex-col min-h-full bg-white shadow rounded`}>\n              <div className=\"py-2 px-2\">\n                <div className=\"flex flex-row gap-2 mb-2 items-center justify-between\">\n                  <div className=\"flex flex-col\">\n                    <div><span className=\"text-lg text-gray-600 font-bold\">Choose a course</span></div>\n                    <div className=\"flex flex-row items-center\">\n                      {this.state.searchLevel?.educationCategory && <span className=\"bg-blue-50 rounded-full px-2 text-xs text-blue-600 font-bold\">{this.state.searchLevel.educationCategory?.education_category_title}</span>}\n                      {this.state.searchLevel?.schoolLevel && <div className=\"flex flex-row items-center\"><FaAngleRight className=\"\" /><span className=\"bg-blue-50 rounded-full px-2 text-xs text-blue-600 font-bold\">{this.state.searchLevel.schoolLevel?.school_level_name}</span></div>}\n                    </div>\n                  </div>\n                  <div onClick={() => { \n                    this.props.schoolLevels.education_categories === null && this.props.loadEducationCategories(this.setLoading);\n                    this.props.schoolLevels.school_levels === null && this.props.loadSchoolLevels(this.setLoading);\n                    this.setState({ showFilter: true }) }} className=\"btn cursor-pointer bg-blue-50 hover:bg-blue-100 text-blue-600 flex flex-row gap-1 items-center\">\n                    <FiFilter className=\"text-xl\" />\n                    <span>Filter</span>\n                  </div> \n                </div>\n                <div>\n                  <input onChange={(e: React.ChangeEvent<HTMLInputElement>) => this.setState({ searchCourseInput: e.target.value })} type=\"text\" className=\"input-white h-10 text-sm border-2 border-blue-500\" placeholder=\"Search question by title or description\" />\n                </div>\n                <div className=\"mt-4\" style={{minHeight: '500px'}}>\n                  {this.state.uploadingStatus === true ? <div className=\"my-2 flex flex-col gap-2\">\n                    <div className=\"rounded-xl bg-gray-100 h-8\"></div>\n                    <div className=\"rounded-xl bg-gray-100 h-8 w-4/5\"></div>\n                    <div className=\"rounded-xl bg-gray-100 h-8 w-5/6\"></div>\n                    <div className=\"rounded-xl bg-gray-100 h-8\"></div>\n                    <div className=\"rounded-xl bg-gray-100 h-8 w-3/4\"></div>\n                    <div className=\"rounded-xl bg-gray-100 h-8\"></div>\n                  </div> :\n                  this.props.course.courses === null ? <Loading /> :\n                  this.props.course.courses && this.filteredCourses(this.props.course.courses, this.state.searchLevel).length === 0 ? <span className=\"text-gray-400 font-extrabold ml-2 animate__animated animate__shakeX\">No courses available!</span> :\n                  this.props.course.courses && searchData(this.filteredCourses(this.props.course.courses, this.state.searchLevel), this.state.searchCourseInput).map((item, i) => (\n                    <div key={i + 1} \n                    onClick={() => this.props.setSelectedCourse(item)} \n                    className={`rounded border ${this.props.selected_course_id !== null && this.props.selected_course_id === item.course_id ? \"bg-blue-100 border-blue-300 text-blue-600 animate__animated animate__bounceIn\" : \"border-gray-200 hover:bg-blue-100 hover:border-blue-600 text-gray-600\"}  px-2 py-3 flex flex-row gap-3 items-center my-2 cursor-pointer`}>\n                      <span className=\"text-sm\">\n                        <div className={`h-8 w-8 rounded-full flex justify-center items-center text-white ${this.props.selected_course_id !== null && this.props.selected_course_id === item.course_id ? \"bg-blue-600 text-white\" : \"font-bold bg-gray-500\"}`}>{i + 1}</div>\n                      </span>\n                      <div className=\"flex flex-col\">\n                        <span className={`text-md font-bold`}>{item.course_name}</span>\n                        <span className={`text-xs`}>Code: {item.course_code}</span>\n                      </div>\n                    </div>\n                  ))}\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n        {this.state.showFilter === true &&\n        <Modal\n          title=\"Filter courses by school levels\"\n          backDrop={true}\n          theme={Themes.default}\n          close={() => this.setState({ showFilter: false })}\n          backDropClose={true}\n          widthSizeClass={ModalSize.medium}\n          displayClose={true}\n          padding={{title: true,}}\n        >\n          <SchoolLevelsFilter \n            educationCategories={this.props.schoolLevels.education_categories}\n            schoolLevels={this.props.schoolLevels.school_levels}\n            searchLevel={this.state.searchLevel}\n            setSearchLevel={this.setSearchLevel}\n            setSchoolLevelFilterFn={this.setSchoolLevelFilterFn}\n          />\n        </Modal>}\n      </Fragment>\n    )\n  }\n}\n\nconst mapStateToProps = ({\n  auth,\n  course,\n  schoolLevels,\n  questionBank,\n}: StoreState): { auth: Auth; course: courseStoreInterface; schoolLevels: schoolLevelsStoreInterface; questionBank: QuestionBankStoreInterface; } => {\n  return { auth: auth, course: course, schoolLevels: schoolLevels, questionBank: questionBank };\n};\n\nconst UploadQuestion = connect(mapStateToProps, {\n  loadCourses,\n  loadSchoolLevels,\n  loadEducationCategories,\n  setSelectedEducationCategory,\n  setSelectedSchoolLevel,\n})(_UploadQuestion);\n\nexport default UploadQuestion;\n","import React from 'react'\nimport { ImCheckboxChecked, ImCheckboxUnchecked } from 'react-icons/im'\nimport { questionTypesStoreInterface } from '../../actions/questionTypes'\nimport { QuestionInterface } from '../../interfaces/question'\n\ninterface QuestionItemProps {\n  question: QuestionInterface;\n  callBack: (question: QuestionInterface) => void;\n  status: boolean;\n  questionTypes: questionTypesStoreInterface;\n  select: boolean;\n  number: number;\n}\n\nconst QuestionItem = (props: QuestionItemProps) => {\n  return (\n    <div onClick={() => props.select === true && props.callBack(props.question)} className={`bg-gray-50 cursor-pointer rounded border border-gray-200 px-3 py-2 text-gray-700 hover:text-blue-600 flex flex-row items-center justify-between gap-4 ${props.select === true ? \"hover:bg-blue-50\" : \"hover:bg-white\"} hover:border-blue-600 mb-3`}>\n      <div className=\"flex flex-row items-center justify-between w-full\">\n        <div className=\"flex flex-row items-center gap-3\">\n          <div>\n            {props.select === false ? \n            <div className=\"font-bold text-blue-600\">\n              ({props.number})\n            </div> :\n            props.status === true ?\n            <ImCheckboxChecked className=\"text-xl text-blue-600\" /> :\n            <ImCheckboxUnchecked className=\"text-xl text-blue-600\" />}\n          </div>\n          <div className=\"flex flex-col truncate\">\n            <span className=\"text-xs text-blue-600 font-bold w-max\">{props.questionTypes.questionTypes && props.questionTypes.questionTypes.find(itm => itm.id && itm.id === props.question.type)?.title}</span>\n            <span className=\"font-bold\">{props.question.question[0].title}</span>\n            <span className=\"truncate text-xs\">{props.question.question[0].description}</span>\n          </div>\n        </div>\n        {props.select === false &&\n        <div onClick={() => props.select === false && props.callBack(props.question)} className=\"btn bg-red-50 hover:bg-red-100 border border-red-100 text-red-700 cursor-pointer text-sm\">Remove</div>}\n      </div>\n    </div>\n  )\n}\n\nexport default QuestionItem\n","import React, { useEffect, useState } from 'react'\nimport Loading from '../../components/Loading/Loading'\nimport { connect } from \"react-redux\";\nimport {\n  Auth, \n  courseStoreInterface,\n  loadCourses,\n  schoolLevelsStoreInterface,\n  loadSchoolLevels,\n  loadEducationCategories,\n  setSelectedEducationCategory,\n  setSelectedSchoolLevel,\n  QuestionBankStoreInterface,\n  setUploadedQuestions,\n  questionTypesStoreInterface,\n  setSelectedCourse,\n  loadQuestionTypes,\n} from \"../../actions\";\nimport { StoreState } from \"../../reducers\";\nimport { course } from '../../interfaces/course';\nimport { QuestionInterface, uploadQuestionsResponse } from '../../interfaces/question';\nimport { ImCheckboxChecked, ImCheckboxUnchecked } from 'react-icons/im';\nimport QuestionItem from './QuestionItem';\n\ninterface UploadedQuestionsProps {\n  questionBank: QuestionBankStoreInterface;\n  setUploadedQuestions: (questions: uploadQuestionsResponse | null) => void;\n  selectedCourse: course;\n  course: courseStoreInterface;\n  callBack: (question: QuestionInterface) => void;\n  questionTypes: questionTypesStoreInterface;\n  loadQuestionTypes: (callback: (loading: boolean) => void) => void;\n  setSelectedCourse: (course: course | null) => void;\n  questionsList: QuestionInterface[];\n  questionPaper: QuestionInterface[];\n}\n\nconst _Questions = (props: UploadedQuestionsProps) => {\n  const [loading, setLoading] = useState<boolean>(false);\n\n  useEffect(() => {\n    if (props.questionTypes.questionTypes === null || props.questionTypes.questionTypes.length === 0) {\n      props.loadQuestionTypes(setLoading);\n    }\n  }, [props]);\n  return (\n    <div className=\"bg-white animate__animated animate__fadeInLeft animate__fast px-2 py-2 gap-3 mb-2 rounded\">\n      {loading === true ? <Loading /> :\n      props.questionsList.filter(itm => itm.course === props.selectedCourse.course_id).length === 0 ? <div>No questions uploaded!</div> :\n      props.questionsList.filter(itm => itm.course === props.selectedCourse.course_id).map((item, i) => (\n        <QuestionItem \n        key={i + 1} \n        question={item} \n        callBack={props.callBack} \n        status={props.questionPaper.find(itm => itm.id === item.id) ? true : false} \n        questionTypes={props.questionTypes}\n        select={true}\n        number={i + 1} />\n      ))}\n    </div>\n  )\n}\n\n\nconst mapStateToProps = ({\n  auth,\n  course,\n  schoolLevels,\n  questionBank,\n  questionTypes,\n}: StoreState): { auth: Auth; course: courseStoreInterface; schoolLevels: schoolLevelsStoreInterface; questionBank: QuestionBankStoreInterface; questionTypes: questionTypesStoreInterface; } => {\n  return { auth: auth, course: course, schoolLevels: schoolLevels, questionBank: questionBank, questionTypes: questionTypes, };\n};\n\nconst Questions = connect(mapStateToProps, {\n  loadCourses,\n  loadSchoolLevels,\n  loadEducationCategories,\n  setSelectedEducationCategory,\n  setSelectedSchoolLevel,\n  setUploadedQuestions,\n  setSelectedCourse,\n  loadQuestionTypes,\n})(_Questions);\n\nexport default Questions;\n","export enum QuestionNumberFormat {\n  ABC = \"ABC\",\n  abc = \"abc\",\n  NUMBER = \"NUMBER\",\n  I = \"I\",\n}\n\nexport const returnQuestionNumbering = (numbering: QuestionNumberFormat) => {\n  switch (numbering) {\n    case QuestionNumberFormat.ABC:\n      return \"A,B,C\";\n    case QuestionNumberFormat.abc:\n      return \"a,b,c\";\n    case QuestionNumberFormat.I:\n      return \"i, ii, iii\";\n    case QuestionNumberFormat.NUMBER:\n      return \"1,2,3\";\n  }\n}\n\nexport const EXAM_QUESTIONS_NUMBERING = [\n  {\n    key: QuestionNumberFormat.NUMBER,\n    value: returnQuestionNumbering(QuestionNumberFormat.NUMBER)\n  },\n  {\n    key: QuestionNumberFormat.ABC,\n    value: returnQuestionNumbering(QuestionNumberFormat.ABC)\n  },{\n    key: QuestionNumberFormat.abc,\n    value: returnQuestionNumbering(QuestionNumberFormat.abc)\n  },{\n    key: QuestionNumberFormat.I,\n    value: returnQuestionNumbering(QuestionNumberFormat.I)\n  },\n]\n\nexport enum PrepareExamStatus {\n  Created = \"Created\",\n}\n\nexport interface prepare_exam_request {\n    period: string;\n    course: string;\n    questions: string[];\n    exam_status: PrepareExamStatus;\n    termes: string;\n    questions_per_page: number;\n    exam_date: string;\n    start_time: string;\n    duration: number;\n    number_format: QuestionNumberFormat;\n    discription: string;\n}\n\nexport interface ExamItemResponse {\n  questions: string[];\n  status: 1;\n  period: string;\n  course: string;\n  exam_status: PrepareExamStatus;\n  termes: string;\n  questions_per_page: number;\n  exam_date: string;\n  start_time: string;\n  duration: number;\n  number_format: QuestionNumberFormat;\n  discription: string;\n  createdAt: string;\n  updatedAt: string;\n  id: string;\n}","import React, { Component, Fragment } from \"react\";\nimport Courses from \"../../components/Courses/Courses\";\nimport Modal, { ModalSize, Themes } from \"../../components/Modal/Modal\";\nimport { connect } from \"react-redux\";\nimport {\n  Auth, \n  courseStoreInterface,\n  loadCourses,\n  schoolLevelsStoreInterface,\n  loadSchoolLevels,\n  loadEducationCategories,\n  setSelectedEducationCategory,\n  setSelectedSchoolLevel,\n  QuestionBankStoreInterface,\n  setUploadedQuestions,\n  questionTypesStoreInterface,\n  loadQuestionTypes,\n  loadQuestionBank,\n  setSelectedCourse,\n  PrepareExamsStoreInterface,\n  addExamQuestion,\n  applicationPeriodsStoreInterface,\n  loadApplicationPeriods,\n  setSelectedPeriod,\n  System,\n  PushPopupAlert,\n} from \"../../actions\";\nimport { StoreState } from \"../../reducers\";\nimport { course } from \"../../interfaces/course\";\nimport { QuestionInterface, uploadQuestionsResponse } from \"../../interfaces/question\";\nimport NoResult, { NoResultThemes } from \"../../components/NoResult/NoResult\";\nimport Questions from \"../../components/Questions/Questions\";\nimport Loading from \"../../components/Loading/Loading\";\nimport QuestionItem from \"../../components/Questions/QuestionItem\";\nimport { ApplicationPeriodGet } from \"../../interfaces/application\";\nimport ApplicationPeriods from \"../../components/ApplicationPeriods/ApplicationPeriods\";\nimport { RiFilePaperFill } from \"react-icons/ri\";\nimport { API } from \"../../utils/api\";\nimport axios from \"axios\";\nimport Alert, { AlertInterface } from \"../../components/Alert/Alert\";\nimport { EXAM_QUESTIONS_NUMBERING, PrepareExamStatus, QuestionNumberFormat } from \"../../interfaces/prepare_exam\";\nimport { Redirect } from \"react-router-dom\";\nimport { PopupAlertData } from \"../../components/Alert/Popup\";\nimport { PopupAlertTheme } from \"../../interfaces/popupAlert\";\n\ninterface AppPropsProps {\n  selectedCourse: course;\n  questionBank: QuestionBankStoreInterface;\n  course: courseStoreInterface;\n  questionTypes: questionTypesStoreInterface;\n  prepareExam: PrepareExamsStoreInterface;\n  system: System;\n  setUploadingStatus: (status: boolean) => void;\n  setSelectedCourse: (coure: course | null) => void;\n  setUploadedQuestions: (questions: uploadQuestionsResponse | null) => void;\n  loadQuestionTypes: (callback: (loading: boolean) => void) => void;\n  loadQuestionBank: (callback: (loading: boolean) => void) => void;\n  addExamQuestion: (question: QuestionInterface) => void;\n  periods: applicationPeriodsStoreInterface;\n  loadApplicationPeriods: (callback: (loading: boolean) => void) => void;\n  setSelectedPeriod: (period: ApplicationPeriodGet) => void;\n  PushPopupAlert: (alert: PopupAlertData) => void;\n}\ninterface AppPropsState {\n  loading: boolean;\n  selectCourse: boolean;\n  selectPeriod: boolean;\n  addQuestionModal: boolean;\n  formErr: {\n    element: string;\n    msg: string;\n  } | null;\n  questions_per_page: number;\n  exam_date: string;\n  start_time: string;\n  duration: number;\n  number_format: string;\n  discription: string;\n  termes: string;\n  redirectToExams: boolean;\n}\n\nclass _PrepareExam extends Component<AppPropsProps, AppPropsState> {\n  constructor(props: AppPropsProps) {\n    super(props);\n\n    this.state = {\n      loading: false,\n      selectCourse: false,\n      selectPeriod: false,\n      addQuestionModal: false,\n      formErr: {\n        element: \"\", msg: \"\"\n      },\n      questions_per_page: 1,\n      exam_date: \"\",\n      start_time: \"\",\n      duration: 1,\n      number_format: QuestionNumberFormat.NUMBER,\n      discription: \"\",\n      termes: \"\",\n      redirectToExams: false,\n    };\n  }\n  setLoading = (status: boolean) => {\n    this.setState({ loading: status });\n  }\n  addQuestionToPaper = (question: QuestionInterface) => {\n    this.props.addExamQuestion(question);\n  }\n  removeToQuestionPaper = (question: QuestionInterface) => {\n    if (window.confirm(\"Are you sure do you want to remove question to question paper?\")) {\n      this.props.addExamQuestion(question);\n    }\n  }\n  showPeriodFilter = (status: boolean) => {\n    this.setState({ selectPeriod: status })\n  }\n\n  chooseCourse = (myCourse: course | null) => {\n    let conf: boolean = false;\n    if (this.props.prepareExam.questions.length !== 0) {\n      conf = window.confirm(\"Are you sure do you want to change course? You will loose your selected questions\")\n    }\n    if (conf === true) {\n      for (let x of this.props.prepareExam.questions) {\n        this.props.addExamQuestion(x);\n      }\n      this.props.setSelectedCourse(myCourse);\n    }\n    if (this.props.prepareExam.questions.length === 0) {\n      this.props.setSelectedCourse(myCourse);\n    }\n    this.setState({ selectCourse: false });\n  }\n\n  examQuestionsIds = (questions: QuestionInterface[]): string[] => {\n    let ids: string[] = [];\n    for (let question of questions) {\n      ids = [...ids, question.id];\n    }\n    return ids;\n  }\n\n  submitExamPreparation = async () => {\n    this.setState({ formErr: null });\n    if (this.props.periods.selected_period === null || this.props.periods.selected_period.is_active === false) {\n      return this.setState({\n        formErr: {\n          element: \"period\",\n          msg: \"Please select valid period!\",\n        }\n      })\n    }\n    if (this.props.course.selected_course === null) {\n      return this.setState({\n        formErr: {\n          element: \"course\",\n          msg: \"Please select a course!\",\n        }\n      })\n    }\n    if (this.state.exam_date === \"\") {\n      return this.setState({\n        formErr: {\n          element: \"exam_date\",\n          msg: \"Please choose exam date\",\n        }\n      })\n    }\n    if (this.state.start_time === \"\") {\n      return this.setState({\n        formErr: {\n          element: \"start_time\",\n          msg: \"Please fill exam start time\",\n        }\n      })\n    }\n    if (this.state.duration < 1) {\n      return this.setState({\n        formErr: {\n          element: \"duration\",\n          msg: \"Please fill exam duration\",\n        }\n      })\n    }\n    if (this.state.questions_per_page < 1) {\n      return this.setState({\n        formErr: {\n          element: \"questions_per_page\",\n          msg: \"Please fill number of questions per page\",\n        }\n      })\n    }\n    if (this.state.number_format === \"\") {\n      return this.setState({\n        formErr: {\n          element: \"number_format\",\n          msg: \"Please fill questions numbering format\",\n        }\n      })\n    }\n    if (this.state.discription === \"\") {\n      return this.setState({\n        formErr: {\n          element: \"discription\",\n          msg: \"Please fill exam description\",\n        }\n      })\n    }\n    if (this.props.prepareExam.questions.length === 0) {\n      return this.setState({\n        formErr: {\n          element: \"questions\",\n          msg: \"Please choose questions\",\n        }\n      })\n    }\n    if (this.state.termes === \"\") {\n      return this.setState({\n        formErr: {\n          element: \"termes\",\n          msg: \"Please fill exam terms and conditions\",\n        }\n      })\n    }\n    this.setState({ loading: true });\n    try {\n      const res = await axios.post(`${API.QBank}/exam`, {\n        period: this.props.periods.selected_period.application_session_id,\n        course: this.props.course.selected_course.course_id,\n        questions: this.examQuestionsIds(this.props.prepareExam.questions),\n        exam_status: PrepareExamStatus.Created,\n        termes: this.state.termes,\n        questions_per_page: this.state.questions_per_page,\n        exam_date: this.state.exam_date,\n        start_time: this.state.start_time,\n        duration: this.state.duration,\n        number_format: this.state.number_format,\n        discription: this.state.discription,\n      });\n      for (let x of this.props.prepareExam.questions) {\n        this.props.addExamQuestion(x);\n      }\n      this.props.setSelectedCourse(null);\n      this.setState({ redirectToExams: true });\n      this.props.PushPopupAlert({\n        title: \"Success\",\n        description: \"Exam has prepared successfully!\",\n        theme: PopupAlertTheme.success\n      })\n    } catch (error: any) {\n      if (error.response) {\n        if (error.response.data) {\n          if (error.response.data.errors !== undefined) {\n            if (error.response.data.errors.length > 0) {\n              this.setState({formErr: {element: \"main\", msg: error.response.data.errors[0].message}});\n            } else {\n              this.setState({formErr: {element: \"main\", msg: \"Failed to update Question!\"}});\n            }\n          } else {\n            this.setState({formErr: {element: \"main\", msg: \"Failed to update Question!\"}});\n          }\n        } else {\n          this.setState({formErr: {element: \"main\", msg: \"Failed to update Question!\"}});\n        }\n      }\n      console.log(\"Exam err: \", {...error})\n    }\n    this.setState({ loading: false });\n  }\n\n  componentDidMount = () => {\n    if (this.props.questionTypes.questionTypes === null || this.props.questionTypes.questionTypes.length === 0) {\n      this.props.loadQuestionTypes(this.setLoading);\n    }\n    if (this.props.periods.applicationPeriods === null || this.props.periods.applicationPeriods.length === 0) {\n      this.props.loadApplicationPeriods(this.setLoading);\n    }\n    if (this.props.questionBank.questions === null || this.props.questionBank.questions.length === 0) {\n      this.props.loadQuestionBank(this.setLoading);\n    }\n  }\n  render() {\n    if (this.state.redirectToExams === true) {\n      return <Redirect to=\"exams-list\" />\n    }\n    return (\n      <Fragment>\n      <div>\n        <div className=\"mt-3 rounded px-2 flex flex-col gap-3 bg-white py-2\">\n          <div className=\"flex flex-row items center justify-between\">\n            <div className=\"flex flex-row items-center\">\n              <RiFilePaperFill className=\"text-7xl text-blue-600\" />\n              <div className=\"flex flex-col px-1\">\n                <span className=\"text-gray-600 text-2xl font-bold\">Prepare exam paper</span>\n                <span className=\"text-blue-600 text-sm font-bold mt-1\">Period: {this.props.periods.selected_period === null ? <span className=\"text-yellow-700 italic\">Not selected!</span> : (`${this.props.periods.selected_period.application_session_name} - ${this.props.periods.selected_period.is_active === true ? \"Active\" : \"Not valid!\"}`)}</span>\n                <span className=\"text-blue-600 text-sm font-bold\">Course: {this.props.course.selected_course === null ? <span className=\"text-yellow-700 italic\">Not selected!</span> : (`${this.props.course.selected_course.course_code} - ${this.props.course.selected_course.course_name}`)}</span>\n              </div>\n            </div>\n            <div className=\"flex flex-row items-center gap-2\">\n              <div onClick={() => this.setState({ selectCourse: true })} className={`btn ${this.props.course.selected_course === null ? \"bg-yellow-50 hover:bg-yellow-100 border border-yellow-600 text-yellow-600\" : \"bg-white hover:bg-blue-100 border border-blue-600 text-blue-600\"} h-max flex items-center justify-center h-10 cursor-pointer`}>{this.props.course.selected_course === null ? \"Choose course\" : \"Change course\"}</div>\n              <div onClick={() => this.setState({ selectPeriod: true })} className={`btn ${this.props.periods.selected_period === null ? \"bg-yellow-50 hover:bg-yellow-100 border border-yellow-600 text-yellow-600\" : \"bg-white hover:bg-blue-100 border border-blue-600 text-blue-600\"} h-max flex items-center justify-center h-10 cursor-pointer`}>{this.props.periods.selected_period === null ? \"Choose period\" : \"Change Period\"}</div>\n            </div>\n          </div>\n        </div>\n        {this.state.loading === true ? \n        <div className=\"px-4 py-6 mt-4 bg-white rounded\">\n          <div className=\"text-gray-600 mb-3 px-4\">Creating exam, Please wait...</div>\n          <Loading /> \n        </div>:\n        <div className=\"rounded bg-white px-3 py-3 mt-2 mb-28\">\n          <div className=\"grid md:grid-cols-12 gap-4\">\n            <div className=\"md:col-span-6 flex flex-col\">\n              <span className=\"text-gray-700 font-semibold\">Exam date</span>\n              <input \n              onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                this.setState({\n                  exam_date: e.target.value,\n                  formErr: null,\n                })\n              }}\n              value={this.state.exam_date}\n              type=\"date\" className={`input-white h-10 border-gray-400 ${this.state.formErr !== null && this.state.formErr.element === \"exam_date\" ? \"border-2 border-red-600\" : \"border\"}`} />\n              {this.state.formErr !== null && this.state.formErr.element === \"exam_date\" && <div className=\"text-red-600 text-xs font-bold italic\">{this.state.formErr.msg}</div>}\n            </div>\n            <div className=\"md:col-span-6 flex flex-col\">\n              <span className=\"text-gray-700 font-semibold\">Exam start time</span>\n              <input \n              onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                this.setState({\n                  start_time: e.target.value,\n                  formErr: null,\n                })\n              }}\n              value={this.state.start_time}\n              type=\"time\" className={`input-white h-10 border-gray-400 ${this.state.formErr !== null && this.state.formErr.element === \"start_time\" ? \"border-2 border-red-600\" : \"border\"}`} />\n              {this.state.formErr !== null && this.state.formErr.element === \"start_time\" && <div className=\"text-red-600 text-xs font-bold italic\">{this.state.formErr.msg}</div>}\n            </div>\n            <div className=\"md:col-span-6 flex flex-col\">\n              <span className=\"text-gray-700 font-semibold\">Exam duration</span>\n              <input \n              onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                this.setState({\n                  duration: parseInt(e.target.value),\n                  formErr: null,\n                })\n              }}\n              value={this.state.duration}\n              type=\"number\" className={`input-white h-10 border-gray-400 ${this.state.formErr !== null && this.state.formErr.element === \"duration\" ? \"border-2 border-red-600\" : \"border\"}`} />\n              {this.state.formErr !== null && this.state.formErr.element === \"duration\" && <div className=\"text-red-600 text-xs font-bold italic\">{this.state.formErr.msg}</div>}\n            </div>\n            <div className=\"md:col-span-6 flex flex-col\">\n              <span className=\"text-gray-700 font-semibold\">Number of questions per page</span>\n              <input \n              onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                this.setState({\n                  questions_per_page: parseInt(e.target.value),\n                  formErr: null,\n                })\n              }}\n              value={this.state.questions_per_page}\n              type=\"number\" className={`input-white h-10 border-gray-400 ${this.state.formErr !== null && this.state.formErr.element === \"questions_per_page\" ? \"border-2 border-red-600\" : \"border\"}`} />\n              {this.state.formErr !== null && this.state.formErr.element === \"questions_per_page\" && <div className=\"text-red-600 text-xs font-bold italic\">{this.state.formErr.msg}</div>}\n            </div>\n            <div className=\"md:col-span-6 flex flex-col\">\n              <span className=\"text-gray-700 font-semibold\">Questions number format: {this.state.number_format}</span>\n              <select\n                onChange={(e) => {\n                  this.setState({\n                    number_format: e.target.value,\n                    formErr: null,\n                  })\n                }}\n                className={`input-white h-10 border-gray-400 ${this.state.formErr !== null && this.state.formErr.element === \"number_format\" ? \"border-2 border-red-600\" : \"border\"}`}>\n                <option value=\"\">Select Numbering format</option>\n                {EXAM_QUESTIONS_NUMBERING.map((item, i) => (\n                  <option selected={item.key === this.state.number_format ? true : false} key={i + 1} value={item.key}>{item.value}</option>\n                ))}\n              </select>\n              {this.state.formErr !== null && this.state.formErr.element === \"number_format\" && <div className=\"text-red-600 text-xs font-bold italic\">{this.state.formErr.msg}</div>}\n            </div>\n            <div className=\"md:col-span-6 flex flex-col\">\n              <span className=\"text-gray-700 font-semibold\">Exam description</span>\n              <textarea\n              onChange={(e: React.ChangeEvent<HTMLTextAreaElement>) => {\n                this.setState({\n                  discription: e.target.value,\n                  formErr: null,\n                })\n              }}\n              value={this.state.discription}\n              className={`input-white min-h-8 border-gray-400 ${this.state.formErr !== null && this.state.formErr.element === \"discription\" ? \"border-2 border-red-600\" : \"border\"}`}></textarea>\n              {this.state.formErr !== null && this.state.formErr.element === \"discription\" && <div className=\"text-red-600 text-xs font-bold italic\">{this.state.formErr.msg}</div>}\n            </div>\n            <div className=\"md:col-span-12 flex flex-col\">\n              <span className=\"text-gray-700 font-semibold\">Exam terms and conditions</span>\n              <textarea \n              onChange={(e: React.ChangeEvent<HTMLTextAreaElement>) => {\n                this.setState({\n                  termes: e.target.value,\n                  formErr: null,\n                })\n              }}\n              value={this.state.termes}\n              className={`input-white min-h-8 border-gray-400 ${this.state.formErr !== null && this.state.formErr.element === \"termes\" ? \"border-2 border-red-600\" : \"border\"}`}></textarea>\n              {this.state.formErr !== null && this.state.formErr.element === \"termes\" && <div className=\"text-red-600 text-xs font-bold italic\">{this.state.formErr.msg}</div>}\n            </div>\n          </div>\n          <div className=\"border rounded px-2 py-2 mt-4\">\n            <div className=\"flex flex-row items-center justify-between\">\n              <span className=\"font-bold text-blue-600 text-lg\">Question paper</span>\n              <div className=\"\">\n                <div onClick={() => this.setState({ addQuestionModal: true })} className=\"btn bg-blue-50 text-blue-600 hover:bg-blue-100 cursor-pointer\">Add question</div>\n              </div>\n            </div>\n            <div className=\"flex flex-col mt-3\">\n              {this.props.prepareExam.questions.length === 0 ?\n              <div className={`${this.state.formErr !== null && this.state.formErr.element === \"questions\" ? \"bg-red-50 border-2 border-red-600 text-red-600\" : \"bg-gray-100\"} rounded mt-2`}>\n                <NoResult theme={NoResultThemes.Dark} value={\"No questions added so far!\"} />\n              </div> :\n              this.props.questionTypes && this.props.prepareExam.questions.map((item, i) => (\n                <QuestionItem \n                key={i + 1} \n                question={item} \n                callBack={this.removeToQuestionPaper} \n                status={true} \n                questionTypes={this.props.questionTypes}\n                select={false}\n                number={i + 1} />\n              ))}\n            </div>\n          </div>\n          <div className=\"my-4\">\n            {this.state.formErr !== null && this.state.formErr.element !== \"\" && \n              <Alert title={\"Missing info\"} description={this.state.formErr.msg} theme={AlertInterface.danger} />\n            }\n          </div>\n          <div className=\"flex flex-row items-center justify-between mt-4\">\n            <div className=\"btn border\">Cancel</div>\n            <div className=\"flex flex-row items-center\">\n              <div onClick={() => this.submitExamPreparation()} className=\"btn bg-blue-600 text-white cursor-pointer\">Submit exam</div>\n            </div>\n          </div>\n        </div>}\n      </div>\n      {this.state.selectCourse === true &&\n      <Modal\n        title=\"Choose a course\"\n        backDrop={true}\n        theme={Themes.default}\n        close={() => this.setState({ selectCourse: false })}\n        backDropClose={true}\n        widthSizeClass={ModalSize.large}\n        displayClose={true}\n        padding={{title: true,}}>\n        <Courses setSelectedCourse={this.chooseCourse} selected_course_id={this.props.course.selected_course && this.props.course.selected_course.course_id} />\n      </Modal>}\n      {this.state.addQuestionModal === true &&\n      <Modal\n        title=\"Add exam questions\"\n        backDrop={true}\n        theme={Themes.default}\n        close={() => this.setState({ addQuestionModal: false })}\n        backDropClose={true}\n        widthSizeClass={ModalSize.large}\n        displayClose={true}\n        padding={{title: true,}}>\n        {this.props.questionBank.questions === null ? <Loading /> :\n        this.props.course.selected_course === null ? <div>Please choose a course</div> :\n        <Questions \n        selectedCourse={this.props.course.selected_course} \n        callBack={this.addQuestionToPaper} \n        questionsList={this.props.questionBank.questions}\n        questionPaper={this.props.prepareExam.questions} />}\n      </Modal>}\n      {this.state.selectPeriod === true &&\n      <Modal\n        title=\"Choose a period\"\n        backDrop={true}\n        theme={Themes.default}\n        close={() => this.setState({ selectPeriod: false })}\n        backDropClose={true}\n        widthSizeClass={ModalSize.large}\n        displayClose={true}\n        padding={{title: true,}}>\n          <div className=\"px-2\">\n            <ApplicationPeriods \n            applicationPeriods={this.props.periods.applicationPeriods} \n            setSelectedPeriod={this.props.setSelectedPeriod} \n            showPeriodFilter={this.showPeriodFilter} />\n          </div>\n      </Modal>}\n      </Fragment>\n    );\n  }\n}\n\n\nconst mapStateToProps = ({\n  auth,\n  course,\n  schoolLevels,\n  questionBank,\n  questionTypes,\n  prepareExam,\n  periods,\n  system,\n}: StoreState): { auth: Auth; course: courseStoreInterface; schoolLevels: schoolLevelsStoreInterface; questionBank: QuestionBankStoreInterface; questionTypes: questionTypesStoreInterface; prepareExam: PrepareExamsStoreInterface; periods: applicationPeriodsStoreInterface; system: System } => {\n  return { auth: auth, course: course, schoolLevels: schoolLevels, questionBank: questionBank, questionTypes: questionTypes, prepareExam: prepareExam, periods: periods, system: system };\n};\n\nexport const PrepareExam = connect(mapStateToProps, {\n  loadCourses,\n  loadSchoolLevels,\n  loadEducationCategories,\n  setSelectedEducationCategory,\n  setSelectedSchoolLevel,\n  setUploadedQuestions,\n  loadQuestionTypes,\n  loadQuestionBank,\n  setSelectedCourse,\n  addExamQuestion,\n  loadApplicationPeriods,\n  setSelectedPeriod,\n  PushPopupAlert,\n})(_PrepareExam);\n"],"sourceRoot":""}
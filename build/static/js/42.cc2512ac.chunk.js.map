{"version":3,"sources":["components/Modal/Modal.tsx","containers/QuestionBank/AddQuestion/Steps/Steps.tsx","containers/QuestionBank/AddQuestion/QuestionLevel/QuestionLevel.tsx","containers/QuestionBank/AddQuestion/QuestionCourse/QuestionCourse.tsx","containers/QuestionBank/AddQuestion/CourseChapters/CourseChapters.tsx","containers/QuestionBank/AddQuestion/QuestionType/QuestionType.tsx","containers/QuestionBank/AddQuestion/QuestionPaper/Matching/AddMatching.tsx","containers/QuestionBank/AddQuestion/QuestionPaper/Matching/Matching.tsx","containers/QuestionBank/AddQuestion/QuestionPaper/MultipleChoice/AddChoice.tsx","containers/QuestionBank/AddQuestion/QuestionPaper/MultipleChoice/MultipleChoice.tsx","containers/QuestionBank/AddQuestion/QuestionPaper/QuestionPaper.tsx","containers/QuestionBank/AddQuestion/QuestionTest/QuestionPreview/Matching.tsx","containers/QuestionBank/AddQuestion/QuestionTest/QuestionPreview/MultipleChoice.tsx","containers/QuestionBank/AddQuestion/QuestionTest/QuestionTest.tsx","containers/QuestionBank/AddQuestion/SaveQuestion/SaveQuestion.tsx","containers/QuestionBank/AddQuestion/AddQuestion.tsx"],"names":["Themes","ModalMarginTop","ModalSize","Modal","props","themeColor","title","backDrop","theme","close","backDropClose","widthSizeClass","displayClose","padding","body","footer","primary","secondary","danger","success","warning","onClick","className","undefined","marginTop","none","style","width","maxHeight","height","maxWidth","overflowY","margin","zIndex","default","children","StepsList","QuestionLevel","Steps","steps","stepsArray","step","course","description","icon","MdCheckBox","questionType","VscListSelection","questionDetails","IoDocumentTextSharp","test","FaFilter","save","RiSave3Line","completedStep","item","stepsProps","map","stepItem","i","setCurrentStep","fontSize","QuestionLevelComponent","questionLevelsList","level","Easy","Medium","Hard","currentSelectedLevel","setQuestionLevel","QuestionCourse","useState","selectCourseModal","setSelectCourseModal","selectedCourse","courseName","large","type","name","placeholder","courseId","courseCode","courseDescription","setSelectedCourse","CourseChapters","chapters","chaptersListModal","setChaptersListModal","chapterId","chapterName","console","log","currentChapters","length","removeChapter","setStepStatus","chapter","find","itm","selectChapter","QuestionType","questionTypeId","questionTypeTitle","questionTypeDescription","setSelectedQuestionType","selectedQuestionType","AddMatching","matchingQuestion","setMatchingQuestion","matchingAnswer","setMatchingAnswer","matchingStatus","setMatchingStatus","formError","setFormError","onChange","e","target","value","element","minHeight","msg","submitData","setMatchingValues","matchingId","Math","random","Matching","matchings","setMatchings","matchingModal","setMatchingModal","questionTitle","setQuestionTitle","questionDescription","setQuestionDescription","defaultMarks","setDefaultMarks","feedback","setFeedBack","useEffect","previousData","addedQuestion","questionmatchings","deletedMatching","indexOf","deletedData","filter","removeMatching","setQuestionData","questionId","AddChoice","choiceDescription","setChoiceDescription","choiceStatus","setChoiceStatus","setChoicesValues","choiceId","MultipleChoice","choices","setChoices","choiceModal","setChoiceModal","questionChoices","deletedChoice","QuestionPaper","question","borderTop","QuestionTest","Alert","AlertInterface","info","SaveQuestion","questionLevel","selectedChapters","_AddQuestion","setState","state","status","stepsStatus","this","React","Component","AddQuestion","connect","auth","fetchAuth"],"mappings":"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","file":"static/js/42.cc2512ac.chunk.js","sourcesContent":["/**\n * @description Modal design\n * @done_by Niyongabo\n */\nimport { MdClose } from \"react-icons/md\";\n\nexport enum Themes {\n  default = \"default\",\n  primary = \"primary\",\n  secondary = \"secondary\",\n  danger = \"danger\",\n  success = \"success\",\n  warning = \"warning\",\n}\n\nexport enum ModalMarginTop {\n  none = \"top-0\",\n  small = \"top-28\",\n  medium = \"top-1/3\",\n  large = \"top-1/2\",\n  extra = \"top-2/3\",\n}\n\nexport enum ModalSize {\n  small = \"max-w-sm\",\n  medium = \"max-w-screen-sm\",\n  large = \"max-w-screen-md\",\n  extraLarge = \"max-w-screen-lg\",\n  maxWidth = \"max-w-screen h-full\",\n}\n\ninterface ModalInterface {\n  title?: any;\n  backDrop: boolean;\n  theme: Themes;\n  close: Function;\n  backDropClose: boolean;\n  footer?: any;\n  children: any;\n  widthSizeClass: ModalSize;\n  displayClose: boolean;\n  padding: { title?: boolean; body?: boolean; footer?: boolean };\n  marginTop?: ModalMarginTop;\n}\n\nconst Modal = (props: ModalInterface): JSX.Element => {\n  const {\n    title,\n    backDrop,\n    theme,\n    close,\n    backDropClose,\n    widthSizeClass,\n    displayClose,\n    padding = { title: true, body: true, footer: true },\n  }: ModalInterface = props;\n\n  let themeColor: string;\n\n  switch (theme) {\n    case Themes.primary:\n      themeColor = \"blue-500\";\n      break;\n    case Themes.secondary:\n      themeColor = \"gray-300\";\n      break;\n    case Themes.danger:\n      themeColor = \"red-500\";\n      break;\n    case Themes.success:\n      themeColor = \"green-500\";\n      break;\n    case Themes.warning:\n      themeColor = \"yellow-500\";\n      break;\n    default:\n      themeColor = \"white\";\n      break;\n  }\n  return (\n    <>\n      <div onClick={(): void => backDropClose && close()} className={`animate__animated animate__fadeIn animate__faster modal fixed bg-black bg-opacity-${backDrop === true ? '60' : '0'}`}></div>\n      <div className={`fixed items-center justify-items-center ${props.marginTop === undefined ? ModalMarginTop.none : props.marginTop} left-0 right-0 bottom-0 bg-white rounded shadow-xl self-center ${widthSizeClass} animate__animated ${props.marginTop !== undefined && props.marginTop !== ModalMarginTop.none ? \"animate__fadeInUp\" : \"animate__zoomIn\"} animate__faster`} style={{width: '100%', maxHeight: '99vh', height: `${widthSizeClass === ModalSize.maxWidth ? props.marginTop === undefined ? \"100%\" : \"unset\" : \"fit-content\"}`, overflowY: 'auto', margin: 'auto', zIndex: 99999999}}>\n        <div className={`flex justify-between bg-${themeColor} ${padding.title === true ? \"py-4 px-4\" : \"\" } rounded-t text-${theme === Themes.default || theme === Themes.secondary ? \"black\" : \"white\"}`}>\n          {!title || title === \"\" ? <div></div> : (<h4 className={`text-lg font-bold `}>{title}</h4>)}\n          {displayClose === false ? \"\" : <div className=\"hover:text-red-600 hover:bg-red-100 rounded-full p-1 h-8 w-8\"><MdClose className=\"cursor-pointer font-extrabold text-2xl\" onClick={():void => close()} /></div>}\n        </div>\n        <div\n          className={`space-x-3 ${padding.body === true ? \"py-4 px-4\" : \"\"}`}\n        >\n          <div>{props.children !== \"\" ? props.children : \"\"}</div>\n        </div>\n        {props.footer !== undefined && props.footer !== \"\" ? (\n          <div\n            className={`flex float-right ${\n              padding.footer === true ? \"py-4 px-4\" : \"\"\n            }`}\n          >\n            {props.footer}\n          </div>\n        ) : ( \n          \"\"\n        )}\n      </div>\n    </>\n  );\n};\n\nexport default Modal;\n","import React from 'react'\nimport { FaFilter } from 'react-icons/fa'\nimport { IoDocumentTextSharp } from 'react-icons/io5'\nimport { MdCheckBox } from 'react-icons/md'\nimport { RiSave3Line } from 'react-icons/ri'\nimport { VscListSelection } from 'react-icons/vsc'\n\nexport enum StepsList {\n\tcourse = \"course\",\n\tquestionType = \"questionType\",\n\tquestionDetails = \"questionDetails\",\n  test = \"test\",\n\tsave = \"save\"\n}\n\nexport interface StepsPropsInterface {\n  steps: {\n    course: boolean,\n    questionType: boolean,\n    questionDetails: boolean,\n    test: boolean,\n    save: boolean\n  },\n  step: StepsList;\n  setStep?: (step:string) => {};\n  setCurrentStep: Function;\n}\n\nexport interface StepsArrayInterface {\n  step: StepsList;\n  title: string;\n  description: string;\n  icon: any\n}\n\nconst Steps = (props: StepsPropsInterface): JSX.Element => {\n  const { steps } = props;\n  const stepsArray: StepsArrayInterface[] = [\n    {\n      step: StepsList.course,\n      title: \"Choose a question category and course\",\n      description: \"Choose a question and a course category\",\n      icon: MdCheckBox\n    },\n    {\n      step: StepsList.questionType,\n      title: \"Choose a question type\",\n      description: \"Choose whether the question is multiple, calculated, essay, matching, etc...\",\n      icon: VscListSelection\n    },\n    {\n      step: StepsList.questionDetails,\n      title: \"Defining question details\",\n      description: \"Define a question details and the requirements\",\n      icon: IoDocumentTextSharp\n    },\n    {\n      step: StepsList.test,\n      title: \"Generate tests\",\n      description: \"Test if you have well prepared the question before submit\",\n      icon: FaFilter\n    },\n    {\n      step: StepsList.save,\n      title: \"Save the question to the bank\",\n      description: \"Move the question from the draft to the question bank\",\n      icon: RiSave3Line\n    },\n  ];\n  const completedStep = (item: StepsArrayInterface, stepsProps: any):boolean => {\n    if (item.step === StepsList.course && stepsProps.course === true) {\n      return true;\n    }\n    else if (item.step === StepsList.questionType && stepsProps.questionType === true) {\n      return true;\n    }\n    else if (item.step === StepsList.questionDetails && stepsProps.questionDetails === true) {\n      return true;\n    }\n    else if (item.step === StepsList.test && stepsProps.test === true) {\n      return true;\n    }\n    else if (item.step === StepsList.save && stepsProps.save === true) {\n      return true;\n    }\n    else {\n      return false;\n    }\n  }\n  // const [step, setStep] = useState<StepsList>(StepsList.course);\n  \n  return (\n    <div className={`bg-gray-100 ${props.step === StepsList.save ? \"border-r-2 border-gray-100\" : \"\"} w-full`}>\n      {stepsArray.map((stepItem, i) => {\n        return (\n          <div key={i + 1} onClick={(): void => props.setCurrentStep(stepItem.step)} className={`flex justify-between items-center cursor-pointer bg-${completedStep(stepItem, steps) === true ? \"white border-gray-100\" : \"\"} hover:bg-white ${props.step === stepItem.step ? `border-l-4 border-green-600 ${completedStep(stepItem, steps) === true ? \"bg-green-50\" : \"bg-white\"} shadow-md` : \"\"}`}>\n            <div className=\"flex flex-col p-2 pl-2\">\n              <span className={`text-${completedStep(stepItem, steps) === true ? \"green-600\" : \"gray-500\"} text-md font-bold`}>\n                {stepItem.title}\n              </span>\n              <span className=\"text-gray-500 font-light\" style={{ fontSize: '10px' }}>\n                {stepItem.description}\n              </span>\n            </div>\n            <div className={`bg-${completedStep(stepItem, steps) === true ? \"green-100\" : \"gray-200\"} rounded-full p-3 mr-2 mt-2 mb-2`}>\n              <stepItem.icon className={`h-10 w-10 text-${completedStep(stepItem, steps) === true ? \"green-500\" : \"gray-400\"}`} />\n            </div>\n          </div>\n        )\n      })}\n\n    </div>\n  )\n}\n\nexport default Steps\n","import React from 'react'\n\nexport enum QuestionLevel {\n\tEasy = \"Easy\",\n\tMedium = \"Medium\",\n\tHard = \"Hard\"\n}\n\nexport interface QuestionLevelComponentInterface {\n\tcurrentSelectedLevel: QuestionLevel | null;\n\tsetQuestionLevel: Function;\n}\n\nconst QuestionLevelComponent = (props: QuestionLevelComponentInterface):JSX.Element => {\n  const questionLevelsList = [\n    {\n      level: QuestionLevel.Easy,\n      description: \"This question is easy, and will have low grades\"\n    },\n    {\n      level: QuestionLevel.Medium,\n      description: \"This question is medium, and will have medium grades\"\n    },\n    {\n      level: QuestionLevel.Hard,\n      description: \"This question is hard, and will have high grades\"\n    }\n  ];\n  return (\n    <div className=\"shadow-md my-3 border rounded pt-1 pb-2 px-2\">\n      <div className=\"flex flex-col\">\n        <span className=\"text-xl font-bold text-gray-700\">Question level {props.currentSelectedLevel && <span className=\"py-1 px-3 bg-green-500 rounded text-white text-xs float-right mt-1\">{props.currentSelectedLevel}</span>}</span>\n        <span className=\"text-xs text-gray-500\">How hard does the question can be for correction</span>\n      </div>\n      <div className=\"grid md:grid-cols-3 gap-2 mt-3\">\n        {questionLevelsList && questionLevelsList.map((item, i) => (\n          item.level === props.currentSelectedLevel ? (\n            <div className=\"question-level-green\">\n              <div className=\"border-4 rounded-full border-green-500 h-12 w-12 col-span-1\">\n                <div className=\"border-4 border-white rounded-full bg-green-500 h-10 w-10 col-span-1\"></div>\n              </div>\n              <div className=\"col-span-3 flex flex-col\">\n                <span className=\"font-bold text-green-600 text-xl ml-3\">{item.level}</span>\n                <span className=\"text-green-700 text-xs ml-3\" style={{fontSize: '9.5px'}}>{item.description}</span>\n              </div>\n            </div>\n            ) : (\n            <div className=\"question-level\" onClick={():void => props.setQuestionLevel(item.level)}>\n              <div className=\"border-8 rounded-full border-gray-400 h-12 w-12 col-span-1\"></div>\n              <div className=\"col-span-3 flex flex-col\">\n                <span className=\"font-bold text-gray-500 text-xl ml-3\">{item.level}</span>\n                <span className=\"text-gray-500 text-xs ml-3\" style={{fontSize: '9.5px'}}>{item.description}</span>\n              </div>\n            </div>\n          )\n        ))\n        }\n      </div>\n    </div>\n  );\n}\n\nexport default QuestionLevelComponent\n","import React, { Fragment, useState } from 'react'\nimport { MdAddCircle, MdModeEdit, MdSearch } from 'react-icons/md'\nimport Modal, { ModalSize, Themes } from '../../../../components/Modal/Modal';\nimport { CourseInterface } from '../Courses/Courses'\n\ninterface QuestionCourseProps {\n  selectedCourse: CourseInterface | null;\n  setSelectedCourse: Function;\n}\n\nconst QuestionCourse = (props: QuestionCourseProps): JSX.Element => {\n  const [selectCourseModal, setSelectCourseModal] = useState(false);\n  const courses: CourseInterface[] = [\n    { \n      courseId: '1',\n      courseName: 'Mathematics for Engineers',\n      courseCode: 'MAT1982',\n      courseDescription: \"Lorem ipsum dolor sit amet consectetur, adipisicing elit. Ducimus accusantium alias, porro quas adipisci possimus doloribus quia sint nobis dolorem. Aspernatur aut esse officia cumque quam porro earum, quod accusamus?\",\n    },\n    { \n      courseId: '2',\n      courseName: 'English',\n      courseCode: 'ENG1982',\n      courseDescription: \"Lorem ipsum dolor sit amet consectetur, adipisicing elit. Ducimus accusantium alias, porro quas adipisci possimus doloribus quia sint nobis dolorem. Aspernatur aut esse officia cumque quam porro earum, quod accusamus?\",\n    },\n    { \n      courseId: '1',\n      courseName: 'Geography',\n      courseCode: 'GEO1982',\n      courseDescription: \"Lorem ipsum dolor sit amet consectetur, adipisicing elit. Ducimus accusantium alias, porro quas adipisci possimus doloribus quia sint nobis dolorem. Aspernatur aut esse officia cumque quam porro earum, quod accusamus?\",\n    },\n    ];\n  return (\n    <Fragment>\n    <div className=\"flex border-2 border-blue-400 p-0 rounded justify-between items-center bg-blue-50\">\n      <div className=\"flex flex-col p-2\">\n        <span className=\"font-light text-gray-500 text-xs\">{props.selectedCourse !== null ? \"Course name\" : \"Choose a course\"}</span>\n        <span className=\"text-gray-500 font-bold text-2xl\">{props.selectedCourse !== null ? <span className=\"text-primary\">{props.selectedCourse.courseName}</span> : \"Click to choose a course\"}</span>\n      </div>\n      <div>\n        <div\n          onClick={(): void => setSelectCourseModal(true)}\n          className=\"bg-blue-400 text-white flex flex-col justify-center items-center font-light h-16 px-4 cursor-pointer hover:bg-primary\"\n        >\n          {props.selectedCourse !== null ? (\n            <>\n              <MdModeEdit className=\"self-center opacity-70 text-3xl\" />\n              <span className=\"text-sm ml-2\">Change course</span>\n            </>\n          ) : (\n            <>\n              <MdAddCircle className=\"self-center opacity-70 text-3xl\" />\n              <span className=\"text-sm ml-2\">Add course</span>\n            </>\n          )}\n        </div>\n      </div>\n    </div>\n    {selectCourseModal === true && (\n      <Modal\n        backDrop={true}\n        theme={Themes.default}\n        close={(): void => setSelectCourseModal(false)}\n        displayClose={true}\n        backDropClose={false}\n        title={<div className=\"bg-white text-gray-500 font-bold text-2xl\">Select & Search course</div>}\n        widthSizeClass={ModalSize.large}\n        padding={{ title: true, body: false, footer: false }}\n      >\n        <div className=\"bg-gray-200 flex justify-center py-3 mb-5\">\n          <div className=\"relative text-gray-600\" style={{width: \"76%\"}}>\n            <input type=\"text\" name=\"search\" placeholder=\"Type the name or the code of a course\" className=\"input-white max-w-xl shadow-md\" />\n            <MdSearch className=\"h-4 w-4 fill-current absolute right-0 top-0 mt-3 mr-4\" />\n          </div>\n        </div>\n        <div className=\"px-5 pb-5\">\n          <div>\n            <table className=\"min-w-max w-full table-auto\">\n              <thead>\n                <tr className=\"bg-gray-200 text-gray-600 uppercase text-sm leading-normal\">\n                  <th className=\"py-3 px-6 text-left\">#</th>\n                  <th className=\"py-3 px-6 text-left\">Code</th>\n                  <th className=\"py-3 px-6 text-left\">Course name</th>\n                </tr>\n              </thead>\n              <tbody className=\"text-gray-600 text-sm font-light\">\n                {courses.map((course, i) => (\n                  <tr key={i + 1} onClick={(): void => { props.setSelectedCourse({courseId: course.courseId, courseName: course.courseName, courseCode: course.courseCode, courseDescription: course.courseDescription}); setSelectCourseModal(false)}} className=\"border-b border-gray-200 hover:bg-gray-100 cursor-pointer\">\n                    <td className=\"py-3 px-6 text-left whitespace-nowrap\">\n                      <span>{i + 1}</span>\n                    </td>\n                    <td className=\"py-3 px-6 text-left\">\n                      <span>{course.courseCode}</span>\n                    </td>\n                    <td className=\"py-3 px-6 text-left\">\n                      <span>{course.courseName}</span>\n                    </td>\n                  </tr>\n                ))}\n              </tbody>\n            </table>\n          </div>\n        </div>\n      </Modal>\n    )}\n    </Fragment>\n  )\n}\n\nexport default QuestionCourse\n","import React, { useState, Fragment } from 'react'\nimport { MdSearch } from 'react-icons/md';\nimport Modal, { ModalSize, Themes } from '../../../../components/Modal/Modal';\nimport { StepsList } from '../Steps/Steps';\n\nexport interface CourseChapterInterface {\n  chapterId: string;\n  chapterName: string;\n  courseId: string;\n}\n\ninterface CourseChaptersProps {\n  currentChapters: CourseChapterInterface[] | null;\n  selectChapter(chapter: CourseChapterInterface):void;\n  removeChapter(chapter: CourseChapterInterface):void;\n  setCurrentStep(step: StepsList):void;\n  setStepStatus(stepItem: StepsList, status: boolean):void;\n}\n\nconst CourseChapters = (props: CourseChaptersProps): JSX.Element => {\n  const [chaptersListModal, setChaptersListModal] = useState(false);\n  let chapters: CourseChapterInterface[];\n  chapters = [\n    { chapterId: \"1\", chapterName: \"Geometric\", courseId: \"1\" },\n    { chapterId: \"2\", chapterName: \"Laplace Transformation\", courseId: \"1\" },\n    { chapterId: \"3\", chapterName: \"Integrals\", courseId: \"1\" },\n    { chapterId: \"4\", chapterName: \"Matrix\", courseId: \"1\" },\n    { chapterId: \"5\", chapterName: \"Derivatives\", courseId: \"1\" },\n    { chapterId: \"6\", chapterName: \"Mathematical Logic\", courseId: \"1\" },\n    { chapterId: \"7\", chapterName: \"Regular Expressions\", courseId: \"1\" },\n  ];\n  return (\n    <Fragment>\n      <div className=\"shadow-md my-4 border rounded pt-1 pb-2 px-2\">\n        <div className=\"flex justify-between items-center\">\n          <div className=\"flex flex-col\">\n            <span className=\"text-gray-700 font-bold text-xl\">Course category/chapters</span>\n            <span className=\"font-light text-gray-500 text-xs\">Select the categories or chapters for this question, this will help in exam preparation and searching</span>\n          </div>\n          <div>\n            <div onClick={() => setChaptersListModal(true)} className=\"btn btn-blue text-white px-3 py-1 cursor-pointer\">\n              <span className=\"font-light\">Add chapter</span>\n            </div>\n          </div>\n        </div>\n        <div>\n        <div className=\"mt-5\">\n            <div>\n              <table className=\"min-w-max w-full table-auto\">\n                <thead>\n                  <tr className=\"bg-gray-200 text-gray-600 uppercase text-sm leading-normal\">\n                    <th className=\"py-3 px-6 text-left\">#</th>\n                    <th className=\"py-3 text-left\">Chapter name</th>\n                    <th className=\"py-3 px-1 text-right\"></th>\n                  </tr>\n                </thead>\n                <tbody className=\"text-gray-600 text-sm font-light\">\n                  {console.log(props.currentChapters)}\n                    {props.currentChapters !== null && props.currentChapters.length > 0 ? (\n                      props.currentChapters.map((item, i) => (\n                        <tr className=\"border-b border-gray-200 hover:bg-gray-100 cursor-pointer\">\n                          <td className=\"py-1 px-6 text-left whitespace-nowrap\">\n                            <span>{i + 1}</span>\n                          </td>\n                          <td className=\"py-1 text-left whitespace-nowrap\">\n                            <span>{item.chapterName}</span>\n                          </td>\n                          <td className=\"py-1 px-1 text-right float-right\">\n                            <div onClick={() => props.removeChapter(item)} className=\"btn bg-red-500 text-white px-3 py-1 cursor-pointer w-20\">\n                              <span className=\"font-light\">Remove</span>\n                            </div>\n                          </td>\n                        </tr>\n                      ))\n                    ) : (\n                    <tr>\n                      <td></td>\n                      <td className=\"py-5\">\n                        <span className=\"text-2xl text-center font-bold text-gray-400 my-5\">No chapter selected!</span>\n                      </td>\n                      <td></td>\n                    </tr>\n                    )}\n                </tbody>\n              </table>\n              <div>\n                {props.currentChapters && props.currentChapters !== null && props.currentChapters.length !== 0 && (\n                  <button type=\"button\" onClick={() => { props.setCurrentStep(StepsList.questionType); props.setStepStatus(StepsList.course, true) }} className=\"btn bg-green-500 text-white px-3 py-1 cursor-pointer mt-5 float-right text-center\">\n                    <span className=\"font-light\">Save & Next</span>\n                  </button>\n                )}\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      {/* Chapters list modal */}\n      {chaptersListModal === true && (\n        <Modal\n          backDrop={true}\n          theme={Themes.default}\n          close={(): void => setChaptersListModal(false)}\n          displayClose={true}\n          backDropClose={false}\n          title={<div className=\"bg-white text-gray-500 font-bold text-2xl\">Add course chapter</div>}\n          widthSizeClass={ModalSize.large}\n          padding={{ title: true, body: false, footer: false }}\n        >\n          <div className=\"bg-gray-200 flex justify-center py-3 mb-5\">\n            <div className=\"relative text-gray-600\" style={{width: \"76%\"}}>\n              <input type=\"text\" name=\"search\" placeholder=\"Type the chapter name\" className=\"input-white max-w-xl shadow-md\" />\n              <MdSearch className=\"h-4 w-4 fill-current absolute right-0 top-0 mt-3 mr-4\" />\n            </div>\n          </div>\n          <div className=\"px-5 pb-5\">\n            <div>\n              <table className=\"min-w-max w-full table-auto\">\n                <thead>\n                  <tr className=\"bg-gray-200 text-gray-600 uppercase text-sm leading-normal\">\n                    <th className=\"py-3 px-6 text-left\">#</th>\n                    <th className=\"py-3 px-6 text-left\">Chapter name</th>\n                    <th className=\"py-3 px-6 text-left\"></th>\n                  </tr>\n                </thead>\n                <tbody className=\"text-gray-600 text-sm font-light\">\n                  {chapters.map((chapter, i) => {\n                    return ((props.currentChapters !== null && chapter.chapterId !== props.currentChapters!.find(itm => itm.chapterId === chapter.chapterId)?.chapterId) || props.currentChapters === null) && (\n                      <tr key={i + 1} className=\"border-b border-gray-200 hover:bg-gray-100 cursor-pointer\">\n                        <td className=\"py-3 px-6 text-left whitespace-nowrap\">\n                          <span>{i + 1}</span>\n                        </td>\n                        <td className=\"py-3 px-6 text-left\">\n                          <span>{chapter.chapterName}</span>\n                        </td>\n                        <td className=\"py-3 px-6 float-right text-center\">\n                          <div onClick={() => props.selectChapter({chapterId: chapter.chapterId, chapterName: chapter.chapterName, courseId: chapter.courseId})} className=\"btn btn-blue text-white px-3 py-1 cursor-pointer w-20\">\n                            <span className=\"font-light\">Add</span>\n                          </div>\n                        </td>\n                      </tr>\n                    )\n                  })}\n                </tbody>\n              </table>\n            </div>\n          </div>\n        </Modal>\n      )}\n    </Fragment>\n  )\n}\n\nexport default CourseChapters\n","import React from 'react'\nimport { MdChevronRight } from 'react-icons/md'\nimport { StepsList } from '../Steps/Steps';\n\nexport interface QuestionTypeInterface {\n  questionTypeId: string;\n  questionTypeTitle: string;\n  questionTypeDescription: string;\n}\n\ninterface QuestionTypeProps {\n  selectedQuestionType: QuestionTypeInterface | null;\n  setSelectedQuestionType: Function;\n  setStepStatus: Function;\n  setCurrentStep(step: StepsList):void;\n}\n\nconst QuestionType = (props: QuestionTypeProps): JSX.Element => {\n  const questionTypes: QuestionTypeInterface[] = [\n    {\n      questionTypeId: \"1\",\n      questionTypeTitle: \"Multiple choice\",\n      questionTypeDescription: \"Lorem ipsum dolor sit, amet consectetur adipisicing elit. Animi tempore id modi molestias at, esse dolor tempora sed sapiente dolores repudiandae sunt\",\n    },\n    {\n      questionTypeId: \"2\",\n      questionTypeTitle: \"True or False\",\n      questionTypeDescription: \"Lorem ipsum dolor sit, amet consectetur adipisicing elit. Animi tempore id modi molestias at, esse dolor tempora sed sapiente dolores repudiandae sunt\",\n    },\n    {\n      questionTypeId: \"3\",\n      questionTypeTitle: \"Matching\",\n      questionTypeDescription: \"Lorem ipsum dolor sit, amet consectetur adipisicing elit. Animi tempore id modi molestias at, esse dolor tempora sed sapiente dolores repudiandae sunt\",\n    },\n    {\n      questionTypeId: \"4\",\n      questionTypeTitle: \"Calculated question\",\n      questionTypeDescription: \"Lorem ipsum dolor sit, amet consectetur adipisicing elit. Animi tempore id modi molestias at, esse dolor tempora sed sapiente dolores repudiandae sunt\",\n    },\n    {\n      questionTypeId: \"5\",\n      questionTypeTitle: \"Numerical\",\n      questionTypeDescription: \"Lorem ipsum dolor sit, amet consectetur adipisicing elit. Animi tempore id modi molestias at, esse dolor tempora sed sapiente dolores repudiandae sunt\",\n    },\n    {\n      questionTypeId: \"6\",\n      questionTypeTitle: \"Embedded question\",\n      questionTypeDescription: \"Lorem ipsum dolor sit, amet consectetur adipisicing elit. Animi tempore id modi molestias at, esse dolor tempora sed sapiente dolores repudiandae sunt\",\n    },\n    {\n      questionTypeId: \"7\",\n      questionTypeTitle: \"Essay/Open\",\n      questionTypeDescription: \"Lorem ipsum dolor sit, amet consectetur adipisicing elit. Animi tempore id modi molestias at, esse dolor tempora sed sapiente dolores repudiandae sunt\",\n    },    \n  ];\n  return (\n    <div>\n\t\t\t<div className=\"flex flex-col px-2 py-1\">\n        <span className=\"text-gray-500 text-3xl font-bold\">Choose a question type</span>\n        <span className=\"text-gray-500 text-xs\">This affects how the question will be presented to the candidate during the exam</span>\n      </div>\n      <div className=\"my-4\">\n      {questionTypes.map((item, i) => (\n        <div key={i + 1} onClick={() => {props.setSelectedQuestionType(item); props.setStepStatus(StepsList.questionType, true); props.setCurrentStep(StepsList.questionDetails)}} className={`shadow flex flex-row px-3 py-2 rounded items-center hover:bg-blue-100 hover:border-blue-500 cursor-pointer my-3 ${props.selectedQuestionType !== null && props.selectedQuestionType!.questionTypeId === item.questionTypeId ? \"bg-blue-100 shadow-0\" : \"\"}`}>\n          <div className=\"flex flex-col\">\n            <span className=\"text-lg text-primary font-bold\">{item.questionTypeTitle}</span>\n            <span className={`text-xs ${props.selectedQuestionType !== null && props.selectedQuestionType!.questionTypeId === item.questionTypeId ? \"text-gray-800\" : \"text-gray-500\"} pr-5`}>{item.questionTypeDescription}</span>\n          </div>\n          <div>\n            <MdChevronRight className=\"text-4xl text-white bg-green-500 rounded-full\" />\n          </div>\n        </div>\n      ))}\n      </div>\n    </div>\n  )\n}\n\nexport default QuestionType\n","import React, { useState } from 'react'\nimport { MdCheckBox, MdCheckBoxOutlineBlank, MdSave } from 'react-icons/md';\nimport { matchingInterface } from './Matching';\n\ninterface AddMatchingProps {\n  setMatchingValues: (matching: matchingInterface) => void;\n}\n\nexport type formErrorInterface = {\n  element: string, \n  msg: string\n}\n\nexport const AddMatching = (props: AddMatchingProps) => {\n  const [matchingQuestion, setMatchingQuestion] = useState<string>(\"\");\n  const [matchingAnswer, setMatchingAnswer] = useState<string>(\"\");\n  const [matchingStatus, setMatchingStatus] = useState<boolean | null>(true);\n  const [formError, setFormError] = useState<formErrorInterface | null>(null);\n\n  const addNewMatching = (submitData: Function) => {\n    \n    if (matchingQuestion == null || matchingQuestion === \"\") {\n      return setFormError({\n        element: \"matchingQuestion\",\n        msg: \"Please fill matching question\"\n      });\n    }\n    if (matchingAnswer == null || matchingAnswer === \"\") {\n      return setFormError({\n        element: \"matchingAnswer\",\n        msg: \"Please fill matching answer\"\n      });\n    }\n    if (matchingStatus == null) {\n      return setFormError({\n        element: \"matchingStatus\",\n        msg: \"Please select if it is correct or incorrect\"\n      });\n    }\n    submitData({\n      matchingId: Math.random(),\n      matchingQuestion: matchingQuestion,\n      matchingAnswer: matchingAnswer,\n      matchingStatus: matchingStatus,\n    })\n  }\n\n  return (\n    <div>\n      <div className=\"p-3 border-t-2 border-b-2 border-gray-200\">\n        <div className=\"flex flex-col\">\n          <label className=\"font-bold\">Matching question</label>\n          <textarea \n          onChange={(e) => {\n            setMatchingQuestion(e.target.value);\n            setFormError(null);\n          }}\n          value={matchingQuestion}\n          placeholder=\"Add a question\" className={`input mt-1 mb-2 font-light text-md ${formError !== null && formError.element === \"matchingQuestion\" && \"border-2 border-red-500\"}`} style={{minHeight: '80px'}}></textarea>\n          {formError !== null && formError.element === \"matchingQuestion\" && (\n            <span className=\"text-red-500 font-bold text-sm\">{formError.msg}</span>\n          )}\n        </div>\n        <div className=\"flex flex-col\">\n          <label className=\"font-bold\">Matching answer</label>\n          <textarea \n          onChange={(e) => {\n            setMatchingAnswer(e.target.value);\n            setFormError(null);\n          }}\n          value={matchingAnswer}\n          placeholder=\"Add matching answer\" className={`input mt-1 mb-2 font-light text-md ${formError !== null && formError.element === \"matchingAnswer\" && \"border-2 border-red-500\"}`} style={{minHeight: '80px'}}></textarea>\n          {formError !== null && formError.element === \"matchingAnswer\" && (\n            <span className=\"text-red-500 font-bold text-sm\">{formError.msg}</span>\n          )}\n        </div>\n      </div>\n      <div className=\"py-2 px-3 flex flex-row justify-between items-center\">\n        <div className=\"flex flex-col\">\n          <div className=\"flex flex-row my-3 gap-10\">\n            <span\n            onClick={() => {\n              setMatchingStatus(true);\n              setFormError(null);\n            }}\n            className={`flex flex-row items-center ${matchingStatus === true ? \"text-primary\" : \"text-gray-700\"} cursor-pointer`}>\n              {matchingStatus === true ? <MdCheckBox className=\"text-3xl\" /> : <MdCheckBoxOutlineBlank className=\"text-3xl\" />}\n              <span className=\"text-xl\">Correct answer</span>\n            </span>\n            <span \n            onClick={() => {\n              setMatchingStatus(false);\n              setFormError(null);\n            }}\n            className={`flex flex-row items-center ${matchingStatus === false ? \"text-primary\" : \"text-gray-700\"} cursor-pointer`}>\n              {matchingStatus === false ? <MdCheckBox className=\"text-3xl\" /> : <MdCheckBoxOutlineBlank className=\"text-3xl\" />}\n              <span className=\"text-xl\">Incorrect answer</span>\n            </span>\n          </div>\n          {formError !== null && formError.element === \"matchingStatus\" && (\n            <span className=\"text-red-500 font-bold text-sm\">{formError.msg}</span>\n          )}\n        </div>\n        <button onClick={() => addNewMatching(props.setMatchingValues)} className=\"btn bg-primary text-white flex flex-row justify-center items-center font-light px-4 cursor-pointer hover:bg-primary\" style={{height: 'fit-content'}}>\n          <MdSave className=\"self-center text-3xl\" />\n          <span className=\"text-lg font-light ml-2\">Save choice</span>\n        </button>\n      </div>\n    </div>\n  )\n}\n","import React, { Fragment, useEffect, useState } from 'react'\nimport { MdAddCircle, MdCancel, MdCheckCircle, MdDelete, MdEdit } from 'react-icons/md';\nimport Modal, { ModalSize, Themes } from '../../../../../components/Modal/Modal';\nimport { formErrorInterface } from '../MultipleChoice/AddChoice';\nimport { AddMatching } from './AddMatching';\n\nexport interface matchingInterface {\n  matchingId: string;\n  matchingQuestion: string;\n  matchingAnswer: string;\n  matchingStatus: boolean;\n}\n\nexport interface MultipleChoiceQuestionInterface {\n  questionId: string;\n  questionTitle: string;\n  questionDescription: string;\n  questionMatchings: matchingInterface[];\n  defaultMarks: number;\n  feedback: string;\n}\n\ninterface MatchingQuestionProps {\n  addedQuestion: any;\n  setQuestionData: Function;\n}\n\nconst Matching = (props: MatchingQuestionProps) => {\n  const [matchings, setMatchings] = useState<matchingInterface[] | []>([]);\n  const [matchingModal, setMatchingModal] = useState<boolean>(false);\n  // Form\n  const [questionTitle, setQuestionTitle] = useState<string>(\"\");\n  const [questionDescription, setQuestionDescription] = useState<string>(\"\");\n  const [defaultMarks, setDefaultMarks] = useState<string>(\"1\");\n  const [feedback, setFeedBack] = useState<string>(\"\");\n  const [formError, setFormError] = useState<formErrorInterface | null>(null);\n\n  const setMatchingsValues = (value: matchingInterface) => {\n\t\tsetMatchings(matchings.length > 0 ? [...matchings, value] : [value]);\n    setMatchingModal(false);\n  }\n\n  const removeMatching = (deletedMatching: matchingInterface) => {\n    let currentmatchings : matchingInterface[] = matchings;\n\t\tif (currentmatchings!.indexOf(deletedMatching) === -1) {\n      return;\n    }\n    const deletedData: matchingInterface | undefined = matchings!.find((itm) => itm === deletedMatching);\n\t\tsetMatchings(matchings!.filter((item) => item !== deletedData));\n\t}\n\n  const addNewQuestion = () => {\n    if (questionTitle == null || questionTitle === \"\") {\n      return setFormError({\n        element: \"questionTitle\",\n        msg: \"Please fill question title\"\n      });\n    }\n    if (questionDescription == null || questionDescription === \"\") {\n      return setFormError({\n        element: \"questionDescription\",\n        msg: \"Please fill question detail\"\n      });\n    }\n    if (defaultMarks == null || defaultMarks === \"\") {\n      return setFormError({\n        element: \"defaultMarks\",\n        msg: \"Please fill default marks\"\n      });\n    }\n    props.setQuestionData({\n      questionId: Math.random(),\n      questionTitle: questionTitle,\n      questionDescription: questionDescription,\n      questionmatchings: matchings,\n      defaultMarks: defaultMarks,\n      feedback: feedback\n    });\n    // console.log(\"Added Question: \", props.addedQuestion);\n  }\n\n  const initializeValues = (previousData: any) => {\n    if (previousData) {\n      if (questionTitle === \"\") {\n        setQuestionTitle(previousData.questionTitle);\n      }\n      if (questionDescription === \"\") {\n        setQuestionDescription(previousData.questionDescription);\n      }\n      if (defaultMarks === \"\") {\n        setDefaultMarks(previousData.defaultMarks);\n      }\n      if (feedback === \"\") {\n        setFeedBack(previousData.feedback);\n      }\n      if (matchings.length === 0) {\n        setMatchings(previousData.questionmatchings);\n      }\n    }\n  }\n\n  useEffect(() => {\n    if (props.addedQuestion) {\n      initializeValues(props.addedQuestion);\n    }\n  });\n\n  return (\n    <Fragment>\n      <div>\n        <div className=\"rounded py-2 px-3 shadow-md flex flex-col\">\n          <div className=\"flex flex-col mb-5\">\n            <label className=\"font-bold\">Question title</label>\n            <input \n            onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n              setQuestionTitle(e.target.value);\n              setFormError(null);\n            }}\n            value={questionTitle === \"\" ? props.addedQuestion ? props.addedQuestion.questionTitle : questionTitle : questionTitle}\n            type=\"text\" placeholder=\"Enter title of the question\" className={`input mt-1 font-light text-md ${formError !== null && formError.element === \"questionTitle\" && \"border-2 border-red-500\"}`} />\n            {formError !== null && formError.element === \"questionTitle\" && (\n              <span className=\"text-red-500 font-bold text-sm\">{formError.msg}</span>\n            )}\n          </div>\n          <div className=\"flex flex-col mb-2\">\n            <label className=\"font-bold\">Question description/body</label>\n            <textarea \n            onChange={(e: React.ChangeEvent<HTMLTextAreaElement>) => {\n              setQuestionDescription(e.target.value);\n              setFormError(null);\n            }}\n            value={questionDescription === \"\" ? props.addedQuestion ? props.addedQuestion.questionDescription : questionDescription : questionDescription}\n            placeholder=\"Ask question\" className={`input mt-1 font-light text-md ${formError !== null && formError.element === \"questionDescription\" && \"border-2 border-red-500\"}`} style={{minHeight: '120px'}}></textarea>\n            {formError !== null && formError.element === \"questionDescription\" && (\n              <span className=\"text-red-500 font-bold text-sm\">{formError.msg}</span>\n            )}\n          </div>\n        </div>\n        <div className=\"rounded py-2 px-3 shadow-md flex flex-col mt-5\">\n          <div className=\"flex flex-row justify-between items-center\">\n            <span className=\"font-bold text-2xl\">Matchings</span>\n            <div onClick={() => setMatchingModal(true)} className=\"btn bg-primary text-white flex flex-row justify-center items-center font-light px-3 cursor-pointer hover:bg-primary\">\n              <MdAddCircle className=\"self-center text-2xl\" />\n              <span className=\"text-md font-light ml-2\">Add matching</span>\n            </div>\n          </div>\n          <div className=\"flex flex-col mt-5 mb-2\">\n            {matchings.length > 0 ? (\n              matchings.map((item: matchingInterface, i: number) => (\n                <div key={i + 1} className=\"rounded mb-3 pb-2 bg-gray-100 shadow-sm border border-gray-300\">\n                  <div className=\"px-3 py-2 flex flex-col\">\n                    <span className=\"font-bold text-gray-400 mr-4 text-lg\">Matching {i + 1}</span>\n                    <span className=\"text-sm\">{item.matchingQuestion}</span>\n                  </div>\n                  <div className={`pt-2 px-3 flex flex-col py-3 bg-${item.matchingStatus === true ? \"green\" : \"gray\"}-50 border-t border-${item.matchingStatus === true ? \"green\" : \"gray\"}-500`}>\n                    <span className={`font-bold text-lg text-${item.matchingStatus === true ? \"green\" : \"gray\"}-500 mr-4`}>Answer {i + 1}</span>\n                    <span className={`text-sm font-bold text-${item.matchingStatus === true ? \"green\" : \"gray\"}-800`}>{item.matchingAnswer}</span>\n                  </div>\n                  <div className={`pt-2 px-3 flex flex-row justify-between border-t border-${item.matchingStatus === true ? \"green\" : \"gray\"}-500`}>\n                    <div className={`flex font-bold flex-row items-center ${item.matchingStatus === true ? \"text-green-500\" : \"text-gray-600\"}`}>\n                      {item.matchingStatus === true ? (\n                        <><MdCheckCircle className=\"text-xl\" />&nbsp;Correct</>\n                      ) : (\n                        <><MdCancel className=\"text-xl\" />&nbsp;Incorrect</>\n                      )}\n                    </div>\n                    <div className=\"flex flex-row items-center float-right\">\n                      <span className=\"flex flex-row items-center hover:bg-blue-200 px-2 py-1 rounded cursor-pointer text-primary hover:text-blue-700\">\n                        <MdEdit className=\"text-xl\" /> Edit\n                      </span>\n                      <span onClick={() => removeMatching(item)} className=\"flex flex-row items-center hover:bg-red-200 px-2 py-1 rounded cursor-pointer text-red-500 hover:text-red-700\">\n                        <MdDelete className=\"text-xl\" /> Remove\n                      </span>\n                    </div>\n                  </div>\n                </div>\n              ))\n            ) : (\n              <div className=\"flex flex-col justify-center items-center bg-gray-200 rounded px-3 py-10\">\n                <span className=\"text-2xl font-bold text-gray-400\">No matchings have added!</span>\n                <span onClick={() => setMatchingModal(true)} className=\"underline text-primary text-sm cursor-pointer\">Click here to add new matching</span>\n              </div>\n            )}\n            <div className=\"flex flex-col mb-5 mt-5\">\n              <label className=\"font-bold\">Default marks</label>\n              <input \n              onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                setDefaultMarks(e.target.value);\n                setFormError(null);\n              }}\n              value={defaultMarks === \"\" ? props.addedQuestion ? props.addedQuestion.defaultMarks : defaultMarks : defaultMarks}\n              type=\"number\" placeholder=\"Default marks\" className={`input mt-1 font-light text-md ${formError !== null && formError.element === \"defaultMarks\" && \"border-2 border-red-500\"}`} />\n              {formError !== null && formError.element === \"defaultMarks\" && (\n                <span className=\"text-red-500 font-bold text-sm\">{formError.msg}</span>\n              )}\n            </div>\n            <div className=\"flex flex-col mb-2 mt-2\">\n              <label className=\"font-bold\">Feedback (Optional)</label>\n              <textarea \n              onChange={(e: React.ChangeEvent<HTMLTextAreaElement>) => {\n                setFeedBack(e.target.value);\n                setFormError(null);\n              }}\n              value={feedback === \"\" ? props.addedQuestion ? props.addedQuestion.feedback : feedback : feedback}\n              placeholder=\"Feedback will be visible to user after correction\" className={`input mt-1 font-light text-md ${formError !== null && formError.element === \"feedback\" && \"border-2 border-red-500\"}`} style={{minHeight: '100px'}}></textarea>\n              {formError !== null && formError.element === \"feedback\" && (\n                <span className=\"text-red-500 font-bold text-sm\">{formError.msg}</span>\n              )}\n            </div>\n            {matchings.length > 0 && (\n              <div className=\"float-right\">\n                <button onClick={() => addNewQuestion()} type=\"button\" className=\"btn bg-green-500 text-white px-3 py-1 cursor-pointer float-right text-center\" style={{width: 'fit-content'}}>\n                  <span className=\"font-light\">Save & Next</span>\n                </button>\n              </div>\n            )}\n          </div>\n        </div>\n      </div>\n      {matchingModal && (\n        <Modal\n          backDrop={true}\n          theme={Themes.default}\n          close={(): void => setMatchingModal(false)}\n          displayClose={true}\n          backDropClose={false}\n          title={<div className=\"bg-white text-gray-500 font-bold text-2xl\">Add new matching</div>}\n          widthSizeClass={ModalSize.large}\n          padding={{ title: true, body: false, footer: false }}>\n          <AddMatching setMatchingValues={setMatchingsValues} />\n        </Modal>\n      )}\n    </Fragment>\n  )\n}\n\nexport default Matching\n","import React, { useState } from 'react'\nimport { MdCheckBox, MdCheckBoxOutlineBlank, MdSave } from 'react-icons/md';\n\ninterface AddChoiceProps {\n  setChoicesValues: Function;\n}\n\nexport type formErrorInterface = {\n  element: string, \n  msg: string\n}\n\nexport const AddChoice = (props: AddChoiceProps) => {\n  const [choiceDescription, setChoiceDescription] = useState<string>(\"\");\n  const [choiceStatus, setChoiceStatus] = useState<boolean | null>(null);\n  const [formError, setFormError] = useState<formErrorInterface | null>(null);\n\n  const addNewChoice = (submitData: Function) => {\n    \n    if (choiceDescription == null || choiceDescription === \"\") {\n      return setFormError({\n        element: \"choiceDescription\",\n        msg: \"Please fill choice\"\n      });\n    }\n    if (choiceStatus == null) {\n      return setFormError({\n        element: \"choiceStatus\",\n        msg: \"Please select if it is correct or incorrect\"\n      });\n    }\n    submitData({\n      choiceId: Math.random(),\n      choiceDescription: choiceDescription,\n      choiceStatus: choiceStatus\n    })\n  }\n\n  return (\n    <div>\n      <div className=\"p-3 border-t-2 border-b-2 border-gray-200\">\n        <div className=\"flex flex-col\">\n          <label className=\"font-bold\">Answer choice</label>\n          <textarea \n          onChange={(e) => {\n            setChoiceDescription(e.target.value);\n            setFormError(null);\n          }}\n          value={choiceDescription}\n          placeholder=\"Add a choice\" className={`input mt-1 mb-2 font-light text-md ${formError !== null && formError.element === \"choiceDescription\" && \"border-2 border-red-500\"}`} style={{minHeight: '120px'}}></textarea>\n          {formError !== null && formError.element === \"choiceDescription\" && (\n            <span className=\"text-red-500 font-bold text-sm\">{formError.msg}</span>\n          )}\n        </div>\n      </div>\n      <div className=\"py-2 px-3 flex flex-row justify-between items-center\">\n        <div className=\"flex flex-col\">\n          <div className=\"flex flex-row my-3 gap-10\">\n            <span\n            onClick={() => {\n              setChoiceStatus(true);\n              setFormError(null);\n            }}\n            className={`flex flex-row items-center ${choiceStatus === true ? \"text-primary\" : \"text-gray-700\"} cursor-pointer`}>\n              {choiceStatus === true ? <MdCheckBox className=\"text-3xl\" /> : <MdCheckBoxOutlineBlank className=\"text-3xl\" />}\n              <span className=\"text-xl\">Correct answer</span>\n            </span>\n            <span \n            onClick={() => {\n              setChoiceStatus(false);\n              setFormError(null);\n            }}\n            className={`flex flex-row items-center ${choiceStatus === false ? \"text-primary\" : \"text-gray-700\"} cursor-pointer`}>\n              {choiceStatus === false ? <MdCheckBox className=\"text-3xl\" /> : <MdCheckBoxOutlineBlank className=\"text-3xl\" />}\n              <span className=\"text-xl\">Incorrect answer</span>\n            </span>\n          </div>\n          {formError !== null && formError.element === \"choiceStatus\" && (\n            <span className=\"text-red-500 font-bold text-sm\">{formError.msg}</span>\n          )}\n        </div>\n        <button onClick={() => addNewChoice(props.setChoicesValues)} className=\"btn bg-primary text-white flex flex-row justify-center items-center font-light px-4 cursor-pointer hover:bg-primary\" style={{height: 'fit-content'}}>\n          <MdSave className=\"self-center text-3xl\" />\n          <span className=\"text-lg font-light ml-2\">Save choice</span>\n        </button>\n      </div>\n    </div>\n  )\n}\n","import React, { Fragment, useState, useEffect } from 'react'\nimport { MdAddCircle, MdCancel, MdCheckCircle, MdDelete, MdEdit } from 'react-icons/md'\nimport Modal, { ModalSize, Themes } from '../../../../../components/Modal/Modal';\nimport { AddChoice, formErrorInterface } from './AddChoice';\n\nexport interface choiceInterface {\n  choiceId: string;\n  choiceDescription: string;\n  choiceStatus: boolean;\n}\n\nexport interface MultipleChoiceQuestionInterface {\n  questionId: string;\n  questionTitle: string;\n  questionDescription: string;\n  questionChoices: choiceInterface[];\n  defaultMarks: number;\n  feedback: string;\n}\n\ninterface MultipleChoiceProps {\n  addedQuestion: any;\n  setQuestionData: Function;\n}\n\nconst MultipleChoice = (props: MultipleChoiceProps) => {\n  const [choices, setChoices] = useState<choiceInterface[] | []>([]);\n  const [choiceModal, setChoiceModal] = useState<boolean>(false);\n  // Form\n  const [questionTitle, setQuestionTitle] = useState<string>(\"\");\n  const [questionDescription, setQuestionDescription] = useState<string>(\"\");\n  const [defaultMarks, setDefaultMarks] = useState<string>(\"1\");\n  const [feedback, setFeedBack] = useState<string>(\"\");\n  const [formError, setFormError] = useState<formErrorInterface | null>(null);\n\n  const setChoicesValues = (value: choiceInterface) => {\n\t\tsetChoices(choices.length > 0 ? [...choices, value] : [value]);\n    setChoiceModal(false);\n  }\n\n  const removeChapter = (deletedChoice: choiceInterface) => {\n    let currentChoices : choiceInterface[] = choices;\n\t\tif (currentChoices!.indexOf(deletedChoice) === -1) {\n      return;\n    }\n    const deletedData: choiceInterface | undefined = choices!.find((itm) => itm === deletedChoice);\n\t\tsetChoices(choices!.filter((item) => item !== deletedData));\n\t}\n\n  const addNewQuestion = () => {\n    if (questionTitle == null || questionTitle === \"\") {\n      return setFormError({\n        element: \"questionTitle\",\n        msg: \"Please fill question title\"\n      });\n    }\n    if (questionDescription == null || questionDescription === \"\") {\n      return setFormError({\n        element: \"questionDescription\",\n        msg: \"Please fill question detail\"\n      });\n    }\n    if (defaultMarks == null || defaultMarks === \"\") {\n      return setFormError({\n        element: \"defaultMarks\",\n        msg: \"Please fill default marks\"\n      });\n    }\n    props.setQuestionData({\n      questionId: Math.random(),\n      questionTitle: questionTitle,\n      questionDescription: questionDescription,\n      questionChoices: choices,\n      defaultMarks: defaultMarks,\n      feedback: feedback\n    });\n    // console.log(\"Added Question: \", props.addedQuestion);\n  }\n\n  const initializeValues = (previousData: any) => {\n    if (previousData) {\n      if (questionTitle === \"\") {\n        setQuestionTitle(previousData.questionTitle);\n      }\n      if (questionDescription === \"\") {\n        setQuestionDescription(previousData.questionDescription);\n      }\n      if (defaultMarks === \"\") {\n        setDefaultMarks(previousData.defaultMarks);\n      }\n      if (feedback === \"\") {\n        setFeedBack(previousData.feedback);\n      }\n      if (choices.length === 0) {\n        setChoices(previousData.questionChoices);\n      }\n    }\n  }\n\n  useEffect(() => {\n    if (props.addedQuestion) {\n      initializeValues(props.addedQuestion);\n    }\n  });\n\n  return (\n    <Fragment>\n      <div>\n        <div className=\"rounded py-2 px-3 shadow-md flex flex-col\">\n          <div className=\"flex flex-col mb-5\">\n            <label className=\"font-bold\">Question title</label>\n            <input \n            onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n              setQuestionTitle(e.target.value);\n              setFormError(null);\n            }}\n            value={questionTitle === \"\" ? props.addedQuestion ? props.addedQuestion.questionTitle : questionTitle : questionTitle}\n            type=\"text\" placeholder=\"Enter title of the question\" className={`input mt-1 font-light text-md ${formError !== null && formError.element === \"questionTitle\" && \"border-2 border-red-500\"}`} />\n            {formError !== null && formError.element === \"questionTitle\" && (\n              <span className=\"text-red-500 font-bold text-sm\">{formError.msg}</span>\n            )}\n          </div>\n          <div className=\"flex flex-col mb-2\">\n            <label className=\"font-bold\">Question description/body</label>\n            <textarea \n            onChange={(e: React.ChangeEvent<HTMLTextAreaElement>) => {\n              setQuestionDescription(e.target.value);\n              setFormError(null);\n            }}\n            value={questionDescription === \"\" ? props.addedQuestion ? props.addedQuestion.questionDescription : questionDescription : questionDescription}\n            placeholder=\"Ask question\" className={`input mt-1 font-light text-md ${formError !== null && formError.element === \"questionDescription\" && \"border-2 border-red-500\"}`} style={{minHeight: '120px'}}></textarea>\n            {formError !== null && formError.element === \"questionDescription\" && (\n              <span className=\"text-red-500 font-bold text-sm\">{formError.msg}</span>\n            )}\n          </div>\n        </div>\n        <div className=\"rounded py-2 px-3 shadow-md flex flex-col mt-5\">\n          <div className=\"flex flex-row justify-between items-center\">\n            <span className=\"font-bold text-2xl\">Choices</span>\n            <div onClick={() => setChoiceModal(true)} className=\"btn bg-primary text-white flex flex-row justify-center items-center font-light px-3 cursor-pointer hover:bg-primary\">\n              <MdAddCircle className=\"self-center text-2xl\" />\n              <span className=\"text-md font-light ml-2\">Add choice</span>\n            </div>\n          </div>\n          <div className=\"flex flex-col mt-5 mb-2\">\n            {choices.length > 0 ? (\n              choices.map((item: choiceInterface, i: number) => (\n                <div key={i + 1} className=\"pt-2 rounded mb-3 border border-gray-300 bg-gray-100\">\n                  <div className=\"px-3 pb-3 flex flex-col\">\n                    <span className=\"font-bold text-gray-400 mr-4\">Choice {i + 1}</span>\n                    <span className=\"text-md italic\">{item.choiceDescription}</span>\n                  </div>\n                  <div className={`py-2 px-3 flex flex-row justify-between border-t ${item.choiceStatus === true ? \"border-gray-300\" : \"border-gray-300\"}`}>\n                    <div className={`flex flex-row items-center font-bold ${item.choiceStatus === true ? \"text-green-500\" : \"text-gray-500\"}`}>\n                      {item.choiceStatus === true ? (\n                        <><MdCheckCircle className=\"text-xl\" />&nbsp;Correct</>\n                      ) : (\n                        <><MdCancel className=\"text-xl\" />&nbsp;Incorrect</>\n                      )}\n                    </div>\n                    <div className=\"flex flex-row items-center float-right\">\n                      <span className=\"flex flex-row items-center hover:bg-blue-200 px-2 py-1 rounded cursor-pointer text-primary hover:text-blue-700\">\n                        <MdEdit className=\"text-xl\" /> Edit\n                      </span>\n                      <span onClick={() => removeChapter(item)} className=\"flex flex-row items-center hover:bg-red-200 px-2 py-1 rounded cursor-pointer text-red-500 hover:text-red-700\">\n                        <MdDelete className=\"text-xl\" /> Remove\n                      </span>\n                    </div>\n                  </div>\n                </div>\n              ))\n            ) : (\n              <div className=\"flex flex-col justify-center items-center bg-gray-200 rounded px-3 py-10\">\n                <span className=\"text-2xl font-bold text-gray-400\">No choices have added!</span>\n                <span onClick={() => setChoiceModal(true)} className=\"underline text-primary text-sm cursor-pointer\">Click here to add new choice</span>\n              </div>\n            )}\n            <div className=\"flex flex-col mb-5 mt-5\">\n              <label className=\"font-bold\">Default marks</label>\n              <input \n              onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                setDefaultMarks(e.target.value);\n                setFormError(null);\n              }}\n              value={defaultMarks === \"\" ? props.addedQuestion ? props.addedQuestion.defaultMarks : defaultMarks : defaultMarks}\n              type=\"number\" placeholder=\"Default marks\" className={`input mt-1 font-light text-md ${formError !== null && formError.element === \"defaultMarks\" && \"border-2 border-red-500\"}`} />\n              {formError !== null && formError.element === \"defaultMarks\" && (\n                <span className=\"text-red-500 font-bold text-sm\">{formError.msg}</span>\n              )}\n            </div>\n            <div className=\"flex flex-col mb-2 mt-2\">\n              <label className=\"font-bold\">Feedback (Optional)</label>\n              <textarea \n              onChange={(e: React.ChangeEvent<HTMLTextAreaElement>) => {\n                setFeedBack(e.target.value);\n                setFormError(null);\n              }}\n              value={feedback === \"\" ? props.addedQuestion ? props.addedQuestion.feedback : feedback : feedback}\n              placeholder=\"Feedback will be visible to user after correction\" className={`input mt-1 font-light text-md ${formError !== null && formError.element === \"feedback\" && \"border-2 border-red-500\"}`} style={{minHeight: '100px'}}></textarea>\n              {formError !== null && formError.element === \"feedback\" && (\n                <span className=\"text-red-500 font-bold text-sm\">{formError.msg}</span>\n              )}\n            </div>\n            {choices.length > 0 && (\n              <div className=\"float-right\">\n                <button onClick={() => addNewQuestion()} type=\"button\" className=\"btn bg-green-500 text-white px-3 py-1 cursor-pointer float-right text-center\" style={{width: 'fit-content'}}>\n                  <span className=\"font-light\">Save & Next</span>\n                </button>\n              </div>\n            )}\n          </div>\n        </div>\n      </div>\n      {choiceModal && (\n        <Modal\n          backDrop={true}\n          theme={Themes.default}\n          close={(): void => setChoiceModal(false)}\n          displayClose={true}\n          backDropClose={false}\n          title={<div className=\"bg-white text-gray-500 font-bold text-2xl\">Add new choice</div>}\n          widthSizeClass={ModalSize.large}\n          padding={{ title: true, body: false, footer: false }}>\n          <AddChoice setChoicesValues={setChoicesValues} /></Modal>\n      )}\n    </Fragment>\n  )\n}\n\nexport default MultipleChoice\n","import React from 'react'\nimport { QuestionTypeInterface } from '../QuestionType/QuestionType';\nimport { StepsList } from '../Steps/Steps';\nimport Matching from './Matching/Matching';\nimport MultipleChoice from './MultipleChoice/MultipleChoice';\n\ninterface QuestionPaperProps {\n  selectedQuestionType: QuestionTypeInterface | null;\n  addedQuestion: any;\n  setStepStatus: Function;\n  setCurrentStep: Function;\n  setQuestionData: Function;\n}\n\nconst QuestionPaper = (props: QuestionPaperProps) => {\n  const setQuestionData = (question: any, ) => {\n    props.setQuestionData(question);\n    props.setStepStatus(StepsList.questionDetails, true);\n    props.setCurrentStep(StepsList.test);\n  }\n  return (\n    <div className=\"py-2 px-2\">\n      {props.selectedQuestionType !== null && props.selectedQuestionType!.questionTypeId === \"1\" && (\n        <MultipleChoice setQuestionData={setQuestionData} addedQuestion={props.addedQuestion} />\n      )}\n      {props.selectedQuestionType !== null && props.selectedQuestionType!.questionTypeId === \"3\" && (\n        <Matching setQuestionData={setQuestionData} addedQuestion={props.addedQuestion} />\n      )}\n    </div>\n  )\n}\n\nexport default QuestionPaper;\n","import React from 'react'\nimport { MdArrowForward, MdCheckBoxOutlineBlank } from 'react-icons/md';\nimport { StepsList } from '../../Steps/Steps';\nimport { QuestionTestProps } from '../QuestionTest';\n\nconst Matching = (props: QuestionTestProps) => {\n  return (\n    <div className=\"p-3 flex flex-col\">\n      <span className=\"font-bold text-lg\">{props.addedQuestion.questionDescription}</span>\n      <span className=\"text-gray-400 text-xs mb-4 italic\">Matching the correct matching(s)</span>\n      \n      <div className=\"py-4\" style={{borderTop: '1px solid #cecece'}}>\n        {props.addedQuestion && props.addedQuestion.questionmatchings.map((item: any, i:number) => (\n          <div className=\"grid md:grid-cols-2 justify-between items-center text-gray-500 cursor-pointer hover:text-black hover:font-bold py-2\">\n            <div className=\"flex flex-row\">\n              <span className=\"mr-3\">\n                <MdCheckBoxOutlineBlank className=\"text-2xl\" /> \n              </span>\n              <span className=\"font-bold\">{item.matchingQuestion}</span>\n            </div>\n            <div>\n              <select className=\"input-white border border-gray-400\">\n                <option>Select answer</option>\n                {props.addedQuestion && props.addedQuestion.questionmatchings.map((item: any, i:number) => (\n                  <option key={i + 1}>{item.matchingAnswer}</option>\n                ))}\n              </select>\n            </div>\n          </div>\n        ))}\n      </div>\n\n      <div>\n        <button onClick={() => { props.setCurrentStep(StepsList.save); props.setStepStatus(StepsList.test, true) }} className=\"btn bg-green-500 text-white flex flex-row justify-center items-center font-light px-4 cursor-pointer hover:bg-green-600 float-right\" style={{height: 'fit-content'}}>\n          <span className=\"text-lg font-light mr-2\">Continue</span>\n          <MdArrowForward className=\"text-3xl\" />\n        </button>\n      </div>\n\n    </div>\n  )\n}\n\nexport default Matching\n","import React from 'react'\nimport { MdArrowForward, MdCheckBoxOutlineBlank, MdRadioButtonUnchecked } from 'react-icons/md';\nimport { choiceInterface } from '../../QuestionPaper/MultipleChoice/MultipleChoice';\nimport { StepsList } from '../../Steps/Steps';\nimport { QuestionTestProps } from '../QuestionTest';\n\nconst MultipleChoice = (props: QuestionTestProps) => {\n  return (\n    <div className=\"p-3 flex flex-col\">\n      <span className=\"font-bold text-lg\">{props.addedQuestion.questionDescription}</span>\n      <span className=\"text-gray-400 text-xs mb-4 italic\">Choose the correct answer(s)</span>\n      \n      <div className=\"py-4\" style={{borderTop: '1px solid #cecece'}}>\n        {props.addedQuestion && props.addedQuestion.questionChoices.map((item: any, i:number) => (\n          <div className=\"flex flex-row text-gray-500 cursor-pointer hover:text-black hover:font-bold py-2\">\n            <span className=\"mr-3\">\n              {props.addedQuestion.questionChoices.filter((item: choiceInterface) => item.choiceStatus === true).length > 1 ? (\n                <MdCheckBoxOutlineBlank className=\"text-2xl\" /> \n              ) : (\n                <MdRadioButtonUnchecked className=\"text-2xl\" /> \n              )}\n            </span>\n            <span className=\"font-bold\">{item.choiceDescription}</span>\n          </div>\n        ))}\n      </div>\n\n      <div>\n        <button onClick={() => { props.setCurrentStep(StepsList.save); props.setStepStatus(StepsList.test, true) }} className=\"btn bg-primary text-white flex flex-row justify-center items-center font-light px-4 cursor-pointer hover:bg-primary float-right\" style={{height: 'fit-content'}}>\n          <span className=\"text-lg font-light mr-2\">Continue</span>\n          <MdArrowForward className=\"text-3xl\" />\n        </button>\n      </div>\n\n    </div>\n  )\n}\n\nexport default MultipleChoice\n","import React from 'react'\nimport Alert, { AlertInterface } from '../../../../components/Alert/Alert';\nimport { QuestionTypeInterface } from '../QuestionType/QuestionType';\nimport Matching from './QuestionPreview/Matching';\nimport MultipleChoice from './QuestionPreview/MultipleChoice';\n\nexport interface QuestionTestProps {\n  addedQuestion: any;\n  selectedQuestionType: QuestionTypeInterface | null;\n  setStepStatus: Function;\n  setCurrentStep: Function;\n}\n\nconst QuestionTest = (props: QuestionTestProps) => {\n  return (\n    <div>\n      <Alert title={`${props.addedQuestion.questionTitle}`} description=\"Preview before putting it in the question bank\" theme={AlertInterface.info} />\n      {/* Multiple choice question */}\n      {props.selectedQuestionType && props.selectedQuestionType.questionTypeId === \"1\" && (\n        <MultipleChoice \n          addedQuestion={props.addedQuestion}\n          selectedQuestionType={props.selectedQuestionType}\n          setStepStatus={props.setStepStatus}\n          setCurrentStep={props.setCurrentStep}\n        />\n      )}\n\n      {/* Matching question */}\n      {props.selectedQuestionType && props.selectedQuestionType.questionTypeId === \"3\" && (\n        <Matching \n          addedQuestion={props.addedQuestion}\n          selectedQuestionType={props.selectedQuestionType}\n          setStepStatus={props.setStepStatus}\n          setCurrentStep={props.setCurrentStep}\n        />\n      )}\n    </div>\n  )\n}\n\nexport default QuestionTest;\n","import React from 'react'\nimport { MdCancel, MdSave } from 'react-icons/md'\nimport { CourseChapterInterface } from '../CourseChapters/CourseChapters';\nimport { CourseInterface } from '../Courses/Courses';\nimport { QuestionLevel } from '../QuestionLevel/QuestionLevel';\nimport { QuestionTypeInterface } from '../QuestionType/QuestionType'\nimport { MultipleChoiceTypeInterface } from '../QuestionTypeInterface/QuestionTypeInterface';\ninterface SaveQuestionProps {\n  questionLevel: QuestionLevel | null;\n  selectedCourse: CourseInterface | null;\n  selectedChapters: CourseChapterInterface[] | null;\n  addedQuestion: MultipleChoiceTypeInterface;\n  selectedQuestionType: QuestionTypeInterface | null;\n  setStepStatus: Function;\n  setCurrentStep: Function;\n\n}\n\n// const submitMultipleQuestion = (questionObj: MultipleChoiceTypeInterface): void => {\n//   console.log('====================================');\n//   console.log(\"Submitted question: \", questionObj);\n//   console.log('====================================');\n// }\n\nconst SaveQuestion = (props: SaveQuestionProps) => {\n  if (\n    props.questionLevel !== null &&\n    props.selectedCourse !== null &&\n    props.selectedChapters !== null &&\n    props.selectedQuestionType !== null &&\n    props.addedQuestion !== null\n  ) {\n  // const questionObj: MultipleChoiceTypeInterface = {\n  //   questionId: Math.random().toString(),\n  //   questionLevel: props.questionLevel,\n  //   course: props.selectedCourse,\n  //   chapters: props.selectedChapters,\n  //   questionType: props.selectedQuestionType,\n  //   question: props.addedQuestion,\n  // }\n  }\n  return (\n    <div className=\"py-5\">\n      <div className=\"flex flex-col justify-center text-center self-center bg-white\">\n        <MdSave className=\"text-9xl self-center text-primary\" />\n        <span className=\"text-2xl font-bold text-primary\">Save question to the question bank</span>\n        <span className=\"px-20 py-4 font-light text-sm\">This question is draft, If you want to save it to the question bank, click save question or cancel the process</span>\n      </div>\n      <div className=\"flex flex-row justify-center\">\n        <button className=\"btn bg-gray-500 text-white flex flex-row justify-center items-center font-light px-4 cursor-pointer hover:bg-gray-600 mx-2\" style={{height: 'fit-content'}}>\n          <MdCancel className=\"self-center text-3xl\" />\n          <span className=\"text-lg font-light ml-2\">Cancel</span>\n        </button>\n        <button className=\"btn bg-green-500 text-white flex flex-row justify-center items-center font-light px-4 cursor-pointer hover:bg-green-600 mx-2\" style={{height: 'fit-content'}}>\n          <MdSave className=\"self-center text-3xl\" />\n          <span className=\"text-lg font-light ml-2\">Confirm & Save</span>\n        </button>\n      </div>\n    </div>\n  )\n}\n\nexport default SaveQuestion;\n","import React, { Fragment } from 'react';\nimport { connect } from 'react-redux';\nimport { Auth, fetchAuth } from '../../../actions';\nimport { StoreState } from '../../../reducers';\n// import { Link } from \"react-router-dom\";\nimport Steps, { StepsList } from './Steps/Steps';\nimport { CourseInterface } from './Courses/Courses';\nimport QuestionTypeComponent, { QuestionLevel } from './QuestionLevel/QuestionLevel';\nimport QuestionCourse from './QuestionCourse/QuestionCourse';\nimport CourseChapters, { CourseChapterInterface } from './CourseChapters/CourseChapters';\nimport QuestionType, { QuestionTypeInterface } from './QuestionType/QuestionType';\nimport QuestionPaper from './QuestionPaper/QuestionPaper';\nimport QuestionTest from './QuestionTest/QuestionTest';\nimport SaveQuestion from './SaveQuestion/SaveQuestion';\nimport Alert, { AlertInterface } from '../../../components/Alert/Alert';\nimport { MultipleChoiceQuestionInterface } from './QuestionPaper/MultipleChoice/MultipleChoice';\n\ninterface AddQuestionState {\n\tstep: StepsList;\n\tselectedCourse: CourseInterface | null;\n\tquestionLevel: QuestionLevel | null;\n\tselectedChapters: CourseChapterInterface[] | null;\n\tsetCurrentStep?: Function;\n\tstepsStatus: { \n\t\tcourse: boolean, \n\t\tquestionType: boolean, \n\t\tquestionDetails: boolean, \n\t\ttest: boolean, \n\t\tsave: boolean \n\t},\n\tselectedQuestionType: QuestionTypeInterface | null;\n\tsetSelectedQuestionType?: Function;\n\taddedQuestion: any;\n\tsetQuestionData?: Function;\n}\n\ninterface AddQuestionProps {}\n\nclass _AddQuestion extends React.Component<AddQuestionProps, AddQuestionState> {\n\tconstructor(props: AddQuestionProps) {\n\t\tsuper(props);\n\n\t\tthis.state = {\n\t\t\tstep: StepsList.course,\n\t\t\tselectedCourse: null,\n\t\t\tquestionLevel: null,\n\t\t\tselectedChapters: null,\n\t\t\tstepsStatus: { course: false, questionType: false, questionDetails: false, test: false, save: false },\n\t\t\tselectedQuestionType: null,\n\t\t\taddedQuestion: null,\n\t\t};\n\t}\n\n\tsetQuestionLevel = (level: QuestionLevel): void => {\n\t\tthis.setState({ questionLevel: level });\n\t}\n\n\tsetSelectedCourse = (course: CourseInterface): void => {\n\t\tthis.setState({ selectedCourse: course });\n\t}\n\n\tselectChapter = (chapter: CourseChapterInterface): void => {\n\t\tlet currentChapters: CourseChapterInterface[];\n\t\tcurrentChapters = this.state.selectedChapters !== null ? [...this.state.selectedChapters, chapter] : [chapter];\n\t\tthis.setState({ selectedChapters: currentChapters });\n\t}\n\n\tsetStepStatus = (stepItem: StepsList, status: boolean): void => {\n\t\tthis.setState({ \n\t\t\tstepsStatus: { \n\t\t\t\tcourse: stepItem === StepsList.course ? status : this.state.stepsStatus.course, \n\t\t\t\tquestionType: stepItem === StepsList.questionType ? status : this.state.stepsStatus.questionType, \n\t\t\t\tquestionDetails: stepItem === StepsList.questionDetails ? status : this.state.stepsStatus.questionDetails, \n\t\t\t\ttest: stepItem === StepsList.test ? status : this.state.stepsStatus.test, \n\t\t\t\tsave: stepItem === StepsList.save ? status : this.state.stepsStatus.save \n\t\t\t} \n\t\t});\n\t}\n\n\tremoveChapter = (chapter: CourseChapterInterface): void => {\n\t\tif (this.state.selectedChapters!.indexOf(chapter) === -1) {\n      return;\n    }\n    const deletedData: CourseChapterInterface | undefined = this.state.selectedChapters!.find((itm) => itm === chapter);\n\t\tthis.setState({ selectedChapters: this.state.selectedChapters!.filter((item) => item !== deletedData) });\n\t}\n\n\tsetCurrentStep = (step: StepsList) => {\n\t\tthis.setState({ step: step });\n\t}\n\tsetSelectedQuestionType = (type: QuestionTypeInterface) => {\n\t\tthis.setState({ selectedQuestionType: type });\n\t}\n\n\tsetQuestionData = (question: MultipleChoiceQuestionInterface) => {\n\t\tthis.setState({ addedQuestion: question });\n\t}\n\n\trender() {\t\t\n\t\treturn (\n\t\t\t<Fragment>\n\t\t\t\t<div className=\"\">\n\t\t\t\t\t<div className=\"bg-hero mt-5 rounded p-4 flex justify-between items-center\">\n\t\t\t\t\t\t<div className=\"flex flex-col\">\n\t\t\t\t\t\t\t<span className=\"text-white text-4xl\">Create new question {this.state.selectedQuestionType !== null && <span className=\"text-lg font-extrabold\"> - ({this.state.selectedQuestionType.questionTypeTitle})</span>}</span>\n\t\t\t\t\t\t\t<span className=\"text-gray-200 font-light text-sm mt-1\">\n\t\t\t\t\t\t\t\t{this.state.selectedCourse && <span className=\"font-bold\">{this.state.selectedCourse!.courseName}</span>}{this.state.questionLevel && <span className=\"font-bold\">-({this.state.questionLevel})</span>}\n\t\t\t\t\t\t\t\t{!this.state.selectedCourse && <span>The question will be stored into the question bank</span>}\n\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<span className=\"text-white text-xl font-light text pr-5\">\n\t\t\t\t\t\t\t\t{!this.state.selectedCourse && <span>Choose the question category and course</span>}\n\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div className=\"my-4 grid md:grid-cols-3\">\n\t\t\t\t\t\t<div className=\"md:col-span-1 md:flex min-h-full\">\n              <Steps steps={this.state.stepsStatus} setCurrentStep={this.setCurrentStep} step={this.state.step} />\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className=\"bg-white md:col-span-2 p-1 pb-4\" style={{height: 'fit-content', minHeight: '400px'}}>\n\t\t\t\t\t\t\t{this.state.step === StepsList.course && (\n\t\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t\t{/* Select question courses */}\n\t\t\t\t\t\t\t\t\t<QuestionCourse selectedCourse={this.state.selectedCourse} setSelectedCourse={this.setSelectedCourse} />\n\t\t\t\t\t\t\t\t\t{/* Question level */}\n\t\t\t\t\t\t\t\t\t{this.state.selectedCourse !== null && (\n\t\t\t\t\t\t\t\t\t\t<QuestionTypeComponent currentSelectedLevel={this.state.questionLevel} setQuestionLevel={this.setQuestionLevel} />\n\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t{/* Select course chapters */}\n\t\t\t\t\t\t\t\t\t{this.state.questionLevel !== null && (\n\t\t\t\t\t\t\t\t\t\t<CourseChapters currentChapters={this.state.selectedChapters} selectChapter={this.selectChapter} removeChapter={this.removeChapter} setCurrentStep={this.setCurrentStep} setStepStatus={this.setStepStatus} />\n\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t\t)}\n\n\t\t\t\t\t\t\t{this.state.step === StepsList.questionType && (\n\t\t\t\t\t\t\t\tthis.state.selectedChapters === null || (this.state.selectedChapters && this.state.selectedChapters!.length === 0) ? (\n\t\t\t\t\t\t\t\t\t<Alert title=\"Error\" description=\"Please complete the previous step by selecting course and chapter\" theme={AlertInterface.danger} />\n\t\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t\t<QuestionType selectedQuestionType={this.state.selectedQuestionType} setSelectedQuestionType={this.setSelectedQuestionType} setStepStatus={this.setStepStatus} setCurrentStep={this.setCurrentStep} />\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t)}\n\n\t\t\t\t\t\t\t{this.state.step === StepsList.questionDetails && (\n\t\t\t\t\t\t\t\tthis.state.selectedQuestionType !== null ? (\n\t\t\t\t\t\t\t\t\t<QuestionPaper selectedQuestionType={this.state.selectedQuestionType} setStepStatus={this.setStepStatus} setCurrentStep={this.setCurrentStep} setQuestionData={this.setQuestionData} addedQuestion={this.state.addedQuestion} />\n\t\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t\t<Alert title=\"Error\" description=\"Please complete the previous step by selecting question type\" theme={AlertInterface.danger} />\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t)}\n\n\t\t\t\t\t\t\t{this.state.step === StepsList.test && (\n\t\t\t\t\t\t\t\t!this.state.addedQuestion ? (\n\t\t\t\t\t\t\t\t\t<Alert title=\"Error\" description=\"Please complete the previous step by defining question details\" theme={AlertInterface.danger} />\n\t\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t\t<QuestionTest addedQuestion={this.state.addedQuestion} setStepStatus={this.setStepStatus} setCurrentStep={this.setCurrentStep} selectedQuestionType={this.state.selectedQuestionType} />\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t{this.state.step === StepsList.save && (\n\t\t\t\t\t\t\t\t!this.state.addedQuestion || this.state.addedQuestion === null ? (\n\t\t\t\t\t\t\t\t\t<Alert title=\"Error\" description=\"Please complete the previous step by defining question details\" theme={AlertInterface.danger} />\n\t\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t\t<SaveQuestion questionLevel={this.state.questionLevel} selectedCourse={this.state.selectedCourse} selectedChapters={this.state.selectedChapters} selectedQuestionType={this.state.selectedQuestionType} addedQuestion={this.state.addedQuestion} setStepStatus={this.setStepStatus} setCurrentStep={this.setCurrentStep} />\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</Fragment>\n\t\t);\n\t}\n}\n\nconst mapStateToProps = ({ auth }: StoreState): { auth: Auth } => {\n\treturn { auth: auth };\n};\n\nexport const AddQuestion = connect(mapStateToProps, {\n\tfetchAuth\n})(_AddQuestion);\n"],"sourceRoot":""}
{"version":3,"sources":["utils/search.ts","components/NoResult/NoResult.tsx","components/ApplicationPeriods/ApplicationPeriods.tsx","containers/Application/ApplicationSteps/ApplicationSteps.tsx","containers/DoExam/utils/utils.ts","containers/Application/ExamCenter/ChooseExamCenter.tsx","containers/DoExam/DoEamResults/DoExamResults.tsx","containers/ApplicationsDashboard/Exams.tsx","containers/ApplicationsDashboard/ApplicationsDashboard.tsx"],"names":["search","objList","text","keys","undefined","filter","product","flag","dataKeys","prop","toString","toLowerCase","indexOf","NoResultThemes","NoResult","props","className","theme","Dark","value","component","ApplicationPeriods","type","placeholder","applicationPeriods","map","item","i","onClick","setSelectedPeriod","showPeriodFilter","is_active","application_session_name","DATE","application_start_date","application_end_date","ApplicationStepsTypes","findResult","examQuestions","answersList","marks","user_answers","status","length","LocationTable","LocationData","locationTemp","p","districts","d","centers","c","rooms","capacity","x","occupied","push","province_id","province_name","district_id","district_name","center_id","examination_center_id","center_name","ChooseExamCenter","useState","setSearch","locations","setLocations","selectedProvince","setSelectedProvince","LoadLocations","a","axios","get","API","APPLICATION","res","data","console","log","useEffect","positionCourses","course_code","course_name","onChange","e","target","searchData","itm","addLocation","course_id","closeModal","DoExamResults","connect","todos","auth","doExam","fetchTodos","deleteTodo","fetchAuth","FC_GetTwoFactorAuth","FC_ChangeTwoFactorType","FC_Login","FC_LoginCheckCode","loadExam","addExamAnswer","deleteExamAnswers","SubmitExamAnswers","redirect","setRedirect","findExamResult","answeredQuestions","exam_answers","exam_questions","to","psychometric_questions_list","question_id","question_description","find","answer","page","user","n_id","_PostExams","renderExam","user_id","exam","examStatus","Editing","setState","centersModal","updateLocationFunction","exams","selected_application","updateLocation","numberOfIncomplete","courses","count","findLocation","location","exam_id","proctoring_type","componentDidMount","state","appointmentDetailsModal","displayResults","changeLocation","selectedCourse","selectedLocation","applicationHistoryState","this","loading","Loading","selectedExams","selectedPosition","selectedApplicationDetails","application_status","ApplicationStates","Rejected","deleteApplication","changeLocationError","Alert","title","description","AlertInterface","danger","Modal","course","backDrop","Themes","default","close","backDropClose","widthSizeClass","ModalSize","extraLarge","displayClose","padding","exam_location","room","duration","center","province","district","academic_year","Done","exam_questions_answers","questionAnswers","toFixed","testAnswers","Waiting","Pending","id","style","width","maxWidth","applicationHistory","large","date","comment","ApplicationStatesDescription","key","caption","Component","PostExams","_ApplicationsDashboard","filteredApplications","applications","Status","searchPeriod","appl","application_session","application_session_id","closeApplicationDetails","applicationStatuses","application","output","LoadApplications","number_of_incomplete","selected_position","position","position_id","application_id","incrementIncomplete","applicationError","post","noRoomsApplication","PushPopupAlert","PopupAlertTheme","success","response","errors","field","newArr","removeLocation","message","changeLoadingState","window","confirm","delete","warning","setShowFilterStatus","loadApplicationPeriods","loadAllPositions","apply","currentStep","Step3","initiateApplication","Step1","positions","doTestStatus","applicationDetails","selectedApplicationStatus","FC_Access","UserAccessList","MY_APPLICATION","view","SideNavigation","positions_list","periods","selected_period","active","LoadingV2","LoadingType","dark","Initiated","Shortlisted","position_title","createdAt","period","Exams","application_history","body","ApplicationsDashboard","system"],"mappings":"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","file":"static/js/1.022a4e1a.chunk.js","sourcesContent":["const search = (objList: any[], text: any, keys: any = null) => {\n  if (undefined === text || text === \"\") return objList;\n  return objList.filter((product) => {\n    let flag;\n    let dataKeys = keys === null ? product : keys;\n    for (let prop in dataKeys) {\n      flag = false;\n      flag =\n        product[prop].toString().toLowerCase().indexOf(text.toLowerCase()) > -1;\n      if (flag) break;\n    }\n    return flag;\n  });\n};\n\nexport default search;\n","import React from 'react'\nimport { RiSearchLine } from 'react-icons/ri'\n\nexport enum NoResultThemes {\n  Dark = \"Dark\",\n  Light = \"Light\",\n}\n\ninterface NoResultProps {\n  theme: NoResultThemes;\n  value: string;\n  component?: any;\n}\n\nconst NoResult = (props: NoResultProps) => {\n  return (\n    <div className={`flex flex-col py-4 justify-center items-center text-gray-500 border-2 border-white ${props.theme === NoResultThemes.Dark ? \"bg-gray-100\" : \"bg-white\"} rounded`}>\n      <RiSearchLine className=\"text-6xl text-gray-500 animate__animated animate__shakeX\" />\n      <span className=\"text-xl mb-3\">{props.value}</span>\n      {props.component !== undefined &&\n      props.component}\n    </div>\n  )\n}\n\nexport default NoResult\n","import React from 'react'\nimport { FaBusinessTime } from 'react-icons/fa';\nimport { ApplicationPeriodGet } from '../../interfaces/application';\nimport { DATE } from '../../utils/functions';\nimport Loading from '../Loading/Loading';\n\ninterface ApplicationPeriodsProps {\n  applicationPeriods: ApplicationPeriodGet[] | null;\n  setSelectedPeriod: (period: ApplicationPeriodGet) => void;\n  showPeriodFilter: (status: boolean) => void;\n}\n\nconst ApplicationPeriods = (props: ApplicationPeriodsProps) => {\n  return (\n    <div className=\"-mt-4\">\n      <input type=\"text\" className=\"input-white border -mt-2 mb-3\" placeholder=\"Search by year, name\" />\n      {props.applicationPeriods === null ? <Loading /> : props.applicationPeriods.map((item, i) => (\n        <div onClick={() => {props.setSelectedPeriod(item); props.showPeriodFilter(false)}} key={i + 1} \n          className={`flex flex-col md:flex-row items-start md:items-center md:justify-between rounded border ${item.is_active === true ? \"bg-blue-50 border-blue-100\" : \"bg-gray-50 border-gray-100 \"} hover:bg-blue-100 hover:border-blue-500 px-2 py-2 cursor-pointer mb-2`}>\n          <div className=\"flex flex-row items-center gap-3\">\n            <FaBusinessTime className={`${item.is_active === true ? \"text-blue-600\" : \"text-gray-500\"} text-4xl`} />\n            <div className=\"flex flex-col\">\n              <div className={`${item.is_active === true ? \"text-blue-600\" : \"text-gray-600\"} font-bold`}>{item.application_session_name}</div>\n              <div className=\"text-sm text-gray-500\"><span>Status: </span><span className={`${item.is_active === true ? \"text-blue-600\" : \"text-gray-600\"}`}>{item.is_active === true ? \"Active\" : \"Expired\"}</span></div>\n            </div>\n          </div>\n          <div className=\"flex flex-col items-start md:items-end md:justify-end\">\n            <div className=\"text-xs md:text-sm text-right text-gray-500\"><span>Start: </span><span className={`${item.is_active === true ? \"text-blue-600\" : \"text-gray-600\"} text-right font-bold`}>{DATE(item.application_start_date, \"DD/MM/YYYY\")}</span></div>\n            <div className=\"text-xs md:text-sm text-right text-gray-500\"><span>End: </span><span className={`${item.is_active === true ? \"text-blue-600\" : \"text-gray-600\"} text-right font-bold`}>{DATE(item.application_end_date, \"DD/MM/YYYY\")}</span></div>\n          </div>\n        </div>\n      ))}\n    </div>\n  )\n}\n\nexport default ApplicationPeriods\n","import React from 'react'\nimport ApplicationStepItem, { ApplicationStepInterface } from './ApplicationStepItem'\n\nexport enum ApplicationStepsTypes {\n  Step1, Step2, Step3\n}\n\ninterface ApplicationStepsProps {\n  currentStep: ApplicationStepsTypes;\n  setApplicationStep: (step: ApplicationStepsTypes) => void;\n}\n\nconst ApplicationSteps = ({currentStep, setApplicationStep}: ApplicationStepsProps) => {\n  const steps: ApplicationStepInterface[] = [\n    {\n      step: ApplicationStepsTypes.Step1,\n      stepNumber: 1,\n      title: \"Requirements\",\n      description: \"Check the position and its requirements\",\n    },\n    {\n      step: ApplicationStepsTypes.Step2,\n      stepNumber: 2,\n      title: \"Psychometric test\",\n      description: \"Do psychometric test\",\n    },\n    {\n      step: ApplicationStepsTypes.Step3,\n      stepNumber: 3,\n      title: \"Exam centre\",\n      description: \"Choose the examination centre\",\n    },\n  ]\n  return (\n    <div className=\"grid md:grid-cols-3 gap-2 w-full mt-4\">\n      {steps.map((item: ApplicationStepInterface, i: number) => (\n        <ApplicationStepItem \n          currentStep={currentStep}\n          stepItem={item}\n          setApplicationStep={setApplicationStep}\n        />\n      ))}\n    </div>\n  )\n}\n\nexport default ApplicationSteps\n","import { exam_question } from \"../../../interfaces/exam_question\";\nimport { newAnswer } from \"../DoExam\";\n\nexport const findResult = (examQuestions: exam_question[], answersList: newAnswer[]): number => {\n  let marks: number = 0;\n  if (answersList !== undefined && answersList !== null) {\n    for (let i in answersList) {\n      let answer = answersList;\n      if (answer[i].user_answers?.status === true) {\n        marks = marks + 1;\n      }\n    }\n  }\n  return examQuestions !== undefined ? (marks * 100)/examQuestions.length : 0;\n}","import axios from 'axios';\nimport React, { useEffect, useState } from 'react'\nimport { MdLocationOn, MdSearch } from 'react-icons/md';\nimport Loading from '../../../components/Loading/Loading';\nimport { course } from '../../../interfaces/course';\nimport { LocationAPI } from '../../../interfaces/location';\nimport { API } from '../../../utils/api';\nimport searchData from \"../../../utils/search\";\n\nexport interface examRoomInterface {\n  isUsed: boolean;\n  room_type: string;\n  room_number: number;\n  capacity: number;\n  examination_center_room_id: string;\n}\n\nexport interface LocationTableInterface {\n  province_id: string;\n  province_name: string;\n  district_id: string;\n  district_name: string;\n  center_id: string;\n  center_name: string;\n  rooms: examRoomInterface[];\n  capacity: number;\n}\n\ninterface ChooseExamCenterProps {\n  addLocation: (\n    course_id: string, \n    course_name: string,\n    course_code: string,\n    location: LocationTableInterface,\n    exam_id: string,\n  ) => void;\n  positionCourses: course;\n  closeModal: () => any;\n}\n\nexport const findCenterCapacity = (rooms: examRoomInterface[]) => {\n  let sum = 0;\n  for (let i in rooms) {\n    sum = sum + rooms[i].capacity;\n  }\n  return sum;\n}\n\nexport const LocationTable = (LocationData: LocationAPI[]): LocationTableInterface[] | [] => {\n  let locationTemp: LocationTableInterface[] = [];\n  for (let p in LocationData) {\n    let districts = LocationData[p].districts;\n    for (let d in districts) {\n      let centers = districts[d].centers;\n      for (let c in centers) {\n        let rooms = centers[c].rooms;\n        let capacity = 0;\n        for (let x in rooms) {\n          capacity = capacity + (rooms[x].capacity - rooms[x].occupied);\n        }\n        locationTemp.push({\n          province_id: LocationData[p].province_id,\n          province_name: LocationData[p].province_name,\n          district_id: districts[d].district_id,\n          district_name: districts[d].district_name,\n          center_id: centers[c].examination_center_id,\n          center_name: centers[c].center_name,\n          rooms: rooms,\n          capacity: capacity,\n        })\n      }\n    }\n  }\n  return locationTemp;\n}\n\nconst ChooseExamCenter = (props: ChooseExamCenterProps) => {\n  const [search, setSearch] = useState<string | \"\">(\"\");\n  const [locations, setLocations] = useState<LocationAPI[] | [] | null>(null);\n  const [selectedProvince, setSelectedProvince] = useState<string | null>(null);\n  \n  const LoadLocations = async () => {\n    try {\n      const res = await axios.get<LocationAPI[]>(`${API.APPLICATION}/roomlocation`);\n      if (res.status === 200) {\n        if (locations === null || locations.length === 0) {\n          setLocations(res.data);\n        }\n      }\n      console.log(\"Locations: \", locations);\n    } catch (error: any) {\n      console.log(\"Locations: \", {...error});\n    }\n  }\n\n  useEffect(() => {\n    LoadLocations();\n  })\n  return (\n    <div className=\"w-full\">\n      <div className=\"flex flex-row items-center\">\n        <div>\n          <MdLocationOn className=\"text-6xl text-blue-500\" />\n        </div>\n        <div className=\"flex flex-col justify-start\">\n          <span className=\"text-2xl font-bold text-primary\">Exam: {props.positionCourses.course_code}-{props.positionCourses.course_name}</span>\n          <span className=\"text-sm text-gray-500\">Choose location for the exam</span>\n        </div>\n      </div>\n\n      <div className=\"flex flex-row px-3 gap-3 my-3 items-center w-full\">\n        <div><span className=\"text-gray-600 text-sm\">Filter by location</span></div>\n        <div className=\"flex flex-col md:flex-row gap-3 w-2/3\">\n          <select onChange={(e: React.ChangeEvent<HTMLSelectElement>) => setSelectedProvince(e.target.value)} className=\"input-white bg-white border border-gray-500 w-1/3\">\n            <option value=\"\">Select province</option>\n            {locations !== null && locations.length > 0 && locations.map((item, i) => (\n              <option key={i + 1} value={item.province_id}>{item.province_name}</option>\n            ))}\n          </select>\n          <input onChange={(e: React.ChangeEvent<HTMLInputElement>) => setSearch(e.target.value)} type=\"text\" placeholder=\"District or center name\" className=\"input-white bg-white border border-gray-500 2/3\" />\n        </div>\n      </div>\n\n      <div className=\"w-full overflow-x-auto\">\n        <div className=\"hidden md:flex flex-row gap-3 w-full justify border-b-2 border-blue-600 py-4 bg-blue-100 text-blue-900 items-center\">\n          <div className=\"w-1/12 text-center font-bold\">#</div>\n          <div className=\"w-1/4 font-bold\">Province</div>\n          <div className=\"w-1/3 font-bold\">District</div>\n          <div className=\"w-1/3 font-bold\">Center</div>\n          <div className=\"w-1/12 font-bold\">Capacity</div>\n          <div className=\"w-1/12 font-bold\"></div>\n        </div>\n        {locations === null ? <div className=\"pt-6\"><Loading /></div> :\n          locations.length === 0 ? \n          <div className=\"flex flex-col justify-center items-center text-gray-400 pt-4\">\n            <MdSearch className=\"text-7xl\" />\n            <span className=\"text-3xl\">No result found</span>\n          </div> :\n          searchData(selectedProvince !== null ? LocationTable(locations).filter(itm => itm.province_id === selectedProvince) : LocationTable(locations), search).map((item, i) => (\n            <div \n            onClick={() => {\n              props.addLocation(\n                props.positionCourses.course_id, \n                props.positionCourses.course_name, \n                props.positionCourses.course_code, \n                item,\n                props.positionCourses.course_id\n              ); \n              props.closeModal();\n            }} key={i + 1} className=\"flex flex-col md:flex-row gap-3 rounded md:rounded-none bg-gray-50 px-3 mx-2 md:mx-0 md:px-0 md:bg-white mb-2 md:mb-0 justify-start border md:border-0 md:border-b text-gray-700 border-gray-300 py-1 text-left items-center cursor-pointer hover:bg-blue-600 hover:text-white text-sm\">\n              <div className=\"w-full md:w-1/12 text-left md:text-center font-bold\">\n                <div className=\"hidden md:block\">{i + 1}</div>\n                <div className=\"bg-blue-100 text-blue-700 rounded-full w-8 h-8 flex md:hidden items-center justify-center mt-2\">{i + 1}</div>\n              </div>\n              <div className=\"w-full md:w-1/4\">{item.province_name}</div>\n              <div className=\"w-full md:w-1/3\">{item.district_name}</div>\n              <div className=\"w-full md:w-1/3\">{item.center_name}</div>\n              <div className=\"w-full md:w-1/12\">{item.capacity}</div>\n              <div className=\"w-full md:w-1/12 px-3\">\n                {props.positionCourses !== undefined &&\n                  <button className=\"h-full px-2 py-1 float-right bg-blue-100 text-blue-700 hover:bg-blue-600 hover:border-blue-700 hover:text-white border rounded border-blue-400\">Choose</button>}\n              </div>\n            </div>\n          ))}\n      </div>\n    </div>\n  )\n}\n\nexport default ChooseExamCenter\n","import React, { useState } from 'react'\nimport { newAnswer } from '../DoExam'\nimport { psychometric_questions_list } from '../QuestionsList/QuestionsList';\nimport { Link, Redirect } from 'react-router-dom';\nimport { connect } from \"react-redux\";\nimport {\n  Todo,\n  Auth,\n  fetchTodos,\n  deleteTodo,\n  fetchAuth,\n  FC_GetTwoFactorAuth,\n  FC_ChangeTwoFactorType,\n  FC_Login,\n  FC_LoginCheckCode,\n  examDataInterface,\n  loadExam,\n  addExamAnswer,\n  deleteExamAnswers,\n  SubmitExamAnswers,\n} from \"../../../actions\";\nimport { StoreState } from \"../../../reducers\";\nimport { findResult } from '../utils/utils';\n\ninterface DoExamResultsInterface { \n  // currentPosition: Interfaces.PositionAPI | null;\n  // setCurrentPosition: (position: Interfaces.PositionAPI | null) => void;\n  // setApplicationStep: (step: ApplicationStepsTypes) => void;\n  // windowStatus: {\n  //   profile: boolean,\n  //   questionsList: boolean,\n  // };\n  // setProfileWindowStatus: (status: boolean) => void;\n  // setQuestionsListWindowStatus: (status: boolean) => void;\n  testAnswers: number;\n  answeredQuestions: newAnswer[] | [] | undefined;\n  // setSelectedQuestion: (question: exam_question) => void;\n  doExam: examDataInterface;\n  auth: Auth;\n  SubmitExamAnswers: (user_id: string) => void;\n  page: string;\n}\n\nconst _DoExamResults = (props: DoExamResultsInterface) => {\n  const [redirect, setRedirect] = useState(false);\n  const findExamResult = () => {\n    let marks: number = 0;\n    if (props.answeredQuestions !== undefined) {\n      if (props.doExam.exam_answers) {\n        return findResult(props.doExam.exam_answers.exam_questions, props.answeredQuestions);\n      }\n    }\n    return marks; \n  }\n\n  if (redirect === true) {\n    return <Redirect to=\"/dashboard\" />\n  }\n  return (\n    <div className=\"\">\n      {props.answeredQuestions !== undefined &&\n      <div className=\"mt-5 bg-white rounded shadow px-3 py-3\">\n      <div className=\"text-4xl font-bold text-blue-600\">Exam results</div>\n      <div className=\"text-sm text-gray-500\"></div>\n        <div className=\"my-2\">\n          <div className=\"font-bold text-lg text-gray-700 my-2 mt-4\">Answers history</div>\n          <div className=\"flex flex-col gap-3\">\n            {psychometric_questions_list.map((item, i) => (\n              <div key={i + 1} className=\"bg-gray-200 px-2 py-2 rounded\">\n                <div className=\"grid md:grid-cols-12 w-full\">\n                  <div className=\"col-span-10 flex flex-row items-center gap-3\">\n                    <div key={i + 1} className=\"w-6 h-6 p-2 rounded-full bg-gray-600 flex justify-center items-center font-bold text-lg text-white cursor-pointer\">{item.question_id}</div>\n                    <div className=\"text-sm\">\n                      <div>{item.question_description}</div>\n                      <div className=\"text-blue-700 font-bold text-sm\">Answer:&nbsp;\n                        {props.answeredQuestions !== undefined && props.answeredQuestions.find(itm => itm.question_id === item.question_id)?.user_answers?.answer}\n                      </div>\n                    </div>\n                  </div>\n                  {props.answeredQuestions !== undefined && props.answeredQuestions.find(itm => itm.question_id === item.question_id)?.user_answers?.status === true ? \n                  <div className=\"col-span-2 bg-blue-100 rounded px-2 py-1 text-center float-right cursor-pointer font-bold text-md text-blue-600 border border-blue-400 flex items-center justify-center h-max md:ml-3\">\n                    Right\n                  </div> : \n                  <div className=\"col-span-2 bg-yellow-100 rounded px-2 py-1 text-center float-right cursor-pointer font-bold text-md text-yellow-600 border border-yellow-400 flex items-center justify-center h-max md:ml-3\">\n                    Wrong\n                  </div>}\n                </div>\n              </div>\n            ))}\n\n            <div className={`border-2 ${findExamResult() >= 50 ? \"border-blue-400 bg-blue-100 text-blue-700\" : \"border-red-400 bg-red-100 text-gray-700\"} px-3 py-3 rounded flex flex-row justify-between items-center`}>\n              <div className=\"\">\n                <div className=\"text-left text-xl\">Total marks</div>\n                <div className=\"text-5xl\">{findExamResult()}%</div>\n              </div>\n              {\n              props.page !== \"doExam\" ? \"\" : findExamResult() >= 50 ?\n              <button onClick={() => { props.SubmitExamAnswers(props.auth.user.n_id); setRedirect(true)}} className=\"btn btn-blue\">Continue</button>\n              :\n              <Link className=\"btn border border-gray-400 bg-white\" to=\"/dashboard\">Back to home</Link>}\n            </div>\n          </div>\n        </div>\n      </div>}\n    </div>\n  )\n}\n\n\nconst mapStateToProps = ({\n  todos,\n  auth,\n  doExam,\n}: StoreState): { todos: Todo[]; auth: Auth; doExam: examDataInterface } => {\n  return { todos: todos, auth: auth, doExam: doExam };\n};\n\nconst DoExamResults = connect(mapStateToProps, {\n  fetchTodos,\n  deleteTodo,\n  fetchAuth,\n  FC_GetTwoFactorAuth,\n  FC_ChangeTwoFactorType,\n  FC_Login,\n  FC_LoginCheckCode,\n  loadExam,\n  addExamAnswer,\n  deleteExamAnswers,\n  SubmitExamAnswers\n})(_DoExamResults);\n\nexport default DoExamResults;","import React, { Component } from 'react'\n\nimport { Fragment } from 'react'\nimport { MdHistory } from 'react-icons/md'\nimport { Redirect } from 'react-router-dom'\nimport Modal, { Themes, ModalSize } from '../../components/Modal/Modal'\nimport ChooseExamCenter, { LocationTableInterface } from '../Application/ExamCenter/ChooseExamCenter'\nimport { connect } from \"react-redux\";\nimport {\n  Todo,\n  Auth,\n  fetchTodos,\n  deleteTodo,\n  fetchAuth,\n  FC_GetTwoFactorAuth,\n  FC_ChangeTwoFactorType,\n  FC_Login,\n  FC_LoginCheckCode,\n  loadExam,\n  examDataInterface,\n} from \"../../actions\";\nimport { StoreState } from \"../../reducers\";\nimport Loading from '../../components/Loading/Loading'\nimport { ExamInterface, examStatus } from '../../interfaces/exam'\nimport DoExamResults from '../DoExam/DoEamResults/DoExamResults'\nimport { findResult } from '../DoExam/utils/utils'\nimport { course, PositionAPI } from '../../interfaces/index'\nimport { applicationExamAPI, applicationHistory, ApplicationStates, ApplicationStatesDescription, GetApplicationsAPI } from '../../interfaces/application'\nimport { sentExamInterface } from '../Application/ExamCenter/ExamCenter'\nimport Alert, { AlertInterface } from '../../components/Alert/Alert'\nimport { RiErrorWarningLine } from 'react-icons/ri'\nimport { BsFileEarmarkText } from 'react-icons/bs'\nimport { IoMdTrash } from 'react-icons/io'\nimport { DATE } from '../../utils/functions'\n\ninterface PostExamsProps {\n  doExam: examDataInterface;\n  auth: Auth;\n  loadExam: (user_id: string, exam: ExamInterface) => void;\n  selectedPosition: PositionAPI | null;\n  selectedExams: applicationExamAPI[] | null;\n  selected_application: string | null;\n  updateLocation: (application_id: string, exams: sentExamInterface[]) => void;\n  changeLocationError: string | null,\n  loading: boolean,\n  incrementIncomplete: () => void;\n  applicationHistory: applicationHistory[] | undefined;\n  deleteApplication: (id: string) => void;\n  selectedApplicationDetails: GetApplicationsAPI | null;\n}\ninterface PostExamsState {\n  appointmentDetailsModal: {\n    status: boolean;\n    item: ExamInterface | null;\n  };\n  redirect: boolean;\n  displayResults: boolean;\n  changeLocation: {\n    status: boolean;\n    location: ExamInterface | null;\n  };\n  centersModal: boolean;\n  selectedCourse: course | null,\n  selectedLocation: {\n    course_id: string, \n    course_name: string,\n    course_code: string,\n    location: LocationTableInterface,\n    exam_id: string,\n  } | null,\n  applicationHistoryState: boolean\n}\n\nexport class _PostExams extends Component<PostExamsProps, PostExamsState> {\n  constructor(props: PostExamsProps) {\n\t\tsuper(props);\n\n\t\tthis.state = {\n      appointmentDetailsModal: {\n        status: false,\n        item: null,\n      },\n      redirect: false,\n      displayResults: false,\n      changeLocation: {\n        status: false,\n        location: null,\n      },\n      centersModal: false,\n      selectedCourse: null,\n      selectedLocation: null,\n      applicationHistoryState: false,\n    };\n\t}\n\n  renderExam = (user_id: string, exam: ExamInterface) => {\n    exam.status = examStatus.Editing;\n    this.props.loadExam(user_id, exam);\n    console.log(\"Selected exam: \", user_id, exam);\n    this.setState({ redirect: true });\n  }\n\n  closeModal = () => {\n    this.setState({ centersModal: false });\n  }\n\n  updateLocationFunction = (exams: sentExamInterface[]) => {\n    if (this.props.selected_application !== null) {\n      this.props.updateLocation(this.props.selected_application, exams);\n      // let selectedCourse: Interfaces.course | null = this.state.selectedCourse;\n      // if (selectedCourse !== null) {\n      //   this.setState({ selectedCourse: null });\n      //   this.setState({ selectedCourse: selectedCourse });\n      // }\n    }\n  }\n\n  numberOfIncomplete = (\n    exams: sentExamInterface[], courses: {\n    course_name: string;\n    course_code: string;\n    description: string;\n    school_levels: string[];\n    course_id: string;\n    }[]) => {\n    let count: number = 0;\n      for (let i in courses) {\n        if (exams.filter(item => item.course_id === courses[i].course_id).length === 0) {\n          count = count + 1;\n        }\n      }\n    return count;\n\n  }\n\n  findLocation = (\n    course_id: string, \n    course_name: string,\n    course_code: string,\n    location: LocationTableInterface,\n    exam_id: string,\n  ) => {\n    return this.updateLocationFunction([{\n      course_id: course_id, \n      proctoring_type: \"Center\",\n      center_id: location.center_id\n    }])\n  }\n\n  componentDidMount = () => {\n    if (this.props.doExam.exam_answers) {\n      if (this.props.doExam.exam_answers.status === examStatus.Editing) {\n        this.setState({ redirect: true });\n      }\n    }\n  }\n\n  render() {\n    if (this.state.redirect === true) {\n      return <Redirect to=\"/do-exam\" />\n    }\n    if (this.props.loading === true) { return <Loading /> }\n    return (\n      this.props.selectedExams === null ? \"No result found!\" :\n      <Fragment>\n        <div className=\"\">\n          {console.log(\"Exams: \", this.props.doExam)}\n          <div className=\"px-2 md:py-2\">\n            <div className=\"flex flex-col md:flex-row justify-between items-start md:items-center\">\n              <div onClick={() => this.setState({ applicationHistoryState: true })}className=\"btn bg-gray-100 text-gray-600 border border-gray-300 text-sm flex flex-row items-center gap-2 cursor-pointer hover:border-blue-500 hover:bg-blue-50 hover:text-blue-600 my-3 md:mt-0\">\n                <MdHistory className=\"text-xl\" />\n                <span>View application history</span>\n              </div>\n              <div className=\"grid grid-cols-3 gap-4\">\n                <div className=\"col-span-1 flex justify-start md:justify-end\">\n                  <div className=\"flex flex-row items-center\">\n                    {/* <MdBookmark className=\"text-5xl text-blue-500\" /> */}\n                    <div className=\"flex flex-col\">\n                      <span className=\"text-xs md:text-md text-gray-500 font-bold text-left md:text-right\">Total</span>\n                      <span className=\"text-xl md:text-xl font-bold text-gray-700 text-left md:text-right\">{this.props.selectedExams.length}</span>\n                    </div>\n                  </div>\n                </div>\n                <div className=\"col-span-1 flex justify-start md:justify-end\">\n                  <div className=\"flex flex-row items-center\">\n                    {/* <MdAssignment className=\"text-5xl text-blue-500\" /> */}\n                    <div className=\"flex flex-col\">\n                      <span className=\"text-xs md:text-md text-gray-500 font-bold text-left md:text-right\">Pending</span>\n                      <span className=\"text-xl md:text-xl font-bold text-gray-700 text-left md:text-right\">{\n                      this.props.selectedPosition !== null &&\n                      this.numberOfIncomplete(this.props.selectedExams, this.props.selectedPosition.courses)\n                      }</span>\n                    </div>\n                  </div>\n                </div>\n                <div className=\"col-span-1 flex justify-start md:justify-end\">\n                  <div className=\"flex flex-row items-center\">\n                    {/* <MdAssignmentTurnedIn className=\"text-5xl text-blue-500\" /> */}\n                    <div className=\"flex flex-col\">\n                      <span className=\"text-xs md:text-md text-gray-500 font-bold text-left md:text-right\">Total marks</span>\n                      <span className=\"text-xl md:text-xl font-bold text-gray-700 text-left md:text-right\">0%</span>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n            <div className=\"font-bold flex flex-col md:flex-row items-start md:items-center justify-start md:justify-between gap-2 mt-8\">\n              {this.props.selectedApplicationDetails && this.props.selectedApplicationDetails.application_status !== ApplicationStates.Rejected ?\n              <div className=\"text-xl flex flex-row items-center gap-2\">\n                <BsFileEarmarkText className=\"text-2xl\" />\n                <span>Exams list</span>\n              </div> : <div></div>}\n              <div onClick={() => this.props.selected_application && this.props.deleteApplication(this.props.selected_application)} className=\"btn flex flex-row gap-2 items-center text-red-700 bg-red-50 cursor-pointer hover:bg-red-100 hover:text-red-900\">\n                <IoMdTrash className=\"text-xl \" />\n                <span className=\"text-sm\">Remove application</span>\n              </div>\n            </div>\n          </div>\n          {this.props.selectedApplicationDetails && this.props.selectedApplicationDetails.application_status !== ApplicationStates.Rejected &&\n          <div className=\"px-2 pb-2 mt-3\">\n            <div>\n              {this.props.changeLocationError !== null && \n              <Alert \n                title=\"Error\"\n                description={this.props.changeLocationError}\n                theme={AlertInterface.danger}\n              />}\n            </div>\n            <div className=\"grid md:grid-cols-1 lg:grid-cols-1 gap-3\">\n              \n              {this.props.selectedPosition === null ? <Loading /> : \n              this.props.selectedPosition.courses.length === 0 ? \"No Exams found!\" :\n              this.props.selectedPosition.courses.map((item, i) => (\n                <>\n                {this.props.loading === true && this.state.selectedCourse?.course_id === item.course_id ? <Loading /> : \n                <div key={i + 1} className={`border px-2 py-2 rounded ${this.state.selectedCourse?.course_id === item.course_id ? \"border-blue-500 bg-blue-50\" : this.props.selectedExams === null ? \"\" : this.props.selectedExams.find(itm => itm.course_id === item.course_id) !== undefined ? \"bg-white border-blue-200 hover:bg-blue-100\" : \"bg-yellow-50 hover:bg-white border-yellow-600\"}`}>\n                  <div className=\"grid md:grid-cols-12 gap-2\">\n                    <div className=\"col-span-4 flex fex-row items-center gap-3\">\n                      {/* <BsFileEarmarkText className={`text-5xl text-blue-500`} /> */}\n                      <div className=\"flex flex-col\">\n                        <span className={`font-bold ${this.props.selectedExams?.find(itm => itm.course_id === item.course_id) !== undefined ? \"text-blue-600\" : \"text-yellow-700\"} text-lg truncate`}>{item.course_name}</span>\n                        <div className=\"flex flex-row justify-start items-center gap-2\">\n                          <span className=\"text-gray-500 text-xs\">Exam date: </span>\n                          <span className={`text-gray-400 text-sm`}>Waiting for preparation</span>\n                        </div>\n                      </div>\n                    </div>\n                    <div className=\"col-span-4 flex flex-col items-start justify-center\">\n                    {this.props.selectedExams === null ? \"\" : this.props.selectedExams.find(itm => itm.course_id === item.course_id) !== undefined ? \n                      <>\n                        <div className=\"flex flex-row justify-start items-center gap-2\">\n                          <span className=\"text-gray-500 text-xs\">Proctoring type: </span>\n                          <span className=\"text-gray-700 font-bold text-sm\">{this.props.selectedExams === null ? \"\" : this.props.selectedExams.find(itm => itm.course_id === item.course_id) !== undefined && this.props.selectedExams.find(itm => itm.course_id === item.course_id)?.proctoring_type}</span>\n                        </div>\n                        <div className=\"flex flex-row justify-start items-center gap-2\">\n                          <span className=\"text-gray-500 text-xs\">Exam location: </span>\n                          <span className={`text-gray-700 font-bold text-sm`}>{this.props.selectedExams === null ? \"\" : this.props.selectedExams.find(itm => itm.course_id === item.course_id) !== undefined ? this.props.selectedExams.find(itm => itm.course_id === item.course_id)?.center_name : <span className=\"italic text-xs\">No location selected</span>}</span>\n                        </div>\n                      </> : \n                      <div className=\"flex flex-row gap-2 items-center justify-start\">\n                        <RiErrorWarningLine className=\"text-xl text-yellow-700\" />\n                        <span className=\"text-yellow-700 italic text-sm\">No location selected</span>\n                      </div>}\n                    </div>\n                    <div className=\"col-span-4 flex items-center justify-start md:justify-end\">\n                    {this.props.selectedExams === null ? \"\" : this.props.selectedExams.find(itm => itm.course_id === item.course_id) !== undefined ?  \n                      <div className=\"flex flex-row justify-start md:justify-end items-center gap-2\">\n                        <div onClick={() => this.setState({ appointmentDetailsModal: { status: true, item: null} })} className=\"btn border border-blue-500 text-blue-600 cursor-pointer hover:bg-blue-600 hover:text-white text-sm\">Details</div>\n                        <div onClick={() => this.setState({ selectedCourse: item, centersModal: true })} className=\"btn text-blue-600 cursor-pointer hover:bg-blue-600 hover:text-white bg-blue-100 text-sm\">Change location</div>\n                      </div> : \n                      <div className=\"flex flex-row justify-start md:justify-end items-center gap-2\">\n                        <div onClick={() => this.setState({ selectedCourse: item, centersModal: true })} className=\"btn cursor-pointer bg-yellow-700 hover:bg-yellow-50 border border-yellow-700 hover:text-yellow-700 text-white text-sm \">Choose location</div>\n                      </div>}\n                    </div>\n                  </div>\n                </div>}\n\n\n                {/* <div key={i + 1}className={`px-4 py-3 bg-white rounded border ${this.state.selectedCourse?.course_id === item.course_id ? \"border-blue-500 bg-blue-50\" :\"bg-gray-50 border-white\"} flex flex-col cursor-pointer font-normal hover:font-bold hover:border-gray-200`}>\n                  {this.props.loading === true && this.state.selectedCourse?.course_id === item.course_id ? <Loading /> : \n                  <>\n                  <span className=\"text-gray-500 text-xs\">Exam name</span>\n                  <span className=\"font-bold text-blue-600 text-xl truncate\">{item.course_name}</span>\n                  <div className=\"flex flex-col text-xs text-gray-600 mt-3 gap-2\">\n                    <div className=\"flex flex-row gap-2\">\n                      <span className=\"text-gray-500\">Exam date:</span>\n                      <span className=\"text-black font-bold\">{\"After exam prepare\"}</span>\n                    </div>\n                    {this.props.selectedExams === null ? \"\" : this.props.selectedExams.find(itm => itm.course_id === item.course_id) !== undefined ? \n                    <>\n                      <div className=\"flex flex-row gap-2\">\n                        <span className=\"text-gray-500\">Proctoring type:</span>\n                        <span className=\"text-black font-bold\">\n                          {this.props.selectedExams === null ? \"\" : this.props.selectedExams.find(itm => itm.course_id === item.course_id) !== undefined && this.props.selectedExams.find(itm => itm.course_id === item.course_id)?.proctoring_type}       \n                        </span>             \n                      </div>\n                      <div className=\"flex flex-row gap-2\">\n                        <span className=\"text-gray-500\">Location:</span>\n                        <span className=\"text-black font-bold truncate\">\n                          {this.props.selectedExams === null ? \"\" : this.props.selectedExams.find(itm => itm.course_id === item.course_id) !== undefined && this.props.selectedExams.find(itm => itm.course_id === item.course_id)?.center_name}\n                        </span>\n                      </div>\n        \n                      <div className=\"flex flex-col\">\n                        <div className=\"my-2 flex flex-row justify-between items-center gap-2\">\n                          <div onClick={() => this.setState({ selectedCourse: item, centersModal: true })} className=\"btn text-blue-600 cursor-pointer hover:bg-blue-600 hover:text-white bg-blue-100\">Change location</div>\n                          <div onClick={() => this.setState({ appointmentDetailsModal: { status: true, item: null} })} className=\"btn border border-blue-500 text-blue-600 cursor-pointer hover:bg-blue-600 hover:text-white\">Details</div>\n                          <div className=\"flex flex-col w-full\">\n                            {item.status === examStatus.Waiting ? \n                            <>\n                              <div className=\"flex flex-row justify-between items-center\">\n                                <span className=\"text-xs text-blue-700\">Count down: 12:00:02</span>\n                                <span className=\"text-xs text-blue-700 italic\">67%</span>\n                              </div>\n                              <div className=\"rounded-full h-3 bg-blue-400 mb-2 mt-1 flex items-center\">\n                                <div className=\"h-2 bg-blue-200 rounded-full\" style={{width: '32%'}}></div>\n                              </div>\n                            </> :\n                            item.status === examStatus.Pending &&\n                            <div>\n                              <div onClick={() => this.props.auth.user.id !== undefined && this.renderExam(this.props.auth.user.id, item)} className=\"btn bg-blue-600 text-white w-max float-right\">Start exam</div>\n                            </div>\n                            }\n                            {item.status === examStatus.Done && \n                            <div className={`w-full px-3 py-2`}>\n                              <span>{findResult(item.exam_questions, item.exam_questions_answers.questionAnswers) >= 50 ? \"You passed with:\" : \"You failed with:\"} </span>\n                              <span className={`w-full font-bold px-3 py-1 text-sm ${findResult(item.exam_questions, item.exam_questions_answers.questionAnswers) >= 50 ? \"bg-green-100 text-green-700 border border-green-700\" : \"bg-red-100 text-red-700 border border-red-700\"}`}>{findResult(item.exam_questions, item.exam_questions_answers.questionAnswers)}%</span>\n                              <span> scores</span>\n                            </div>}\n                          </div>\n                        </div>\n                      </div>\n                    </>\n                    : \n                    <div>\n                      <button onClick={() => this.setState({ selectedCourse: item, centersModal: true })} className=\"btn bg-yellow-100 text-yellow-600 hover:bg-yellow-300\">\n                        Choose a location\n                      </button>\n                    </div>}\n                  </div>\n                  </>}\n                </div> */}\n                </>\n              ))\n            }\n            </div>\n          </div>}\n        </div>\n        {this.state.appointmentDetailsModal.status === true &&\n        <Modal\n          title={<div className=\"text-blue-600 font-bold text-2xl\">{this.state.appointmentDetailsModal.item !== null && <>{this.state.appointmentDetailsModal.item.course.course_code}-{this.state.appointmentDetailsModal.item.course.course_name}</>}</div>}\n          backDrop={true}\n          theme={Themes.default}\n          close={() => this.setState({ appointmentDetailsModal: { status: false, item: null}, displayResults: false })}\n          backDropClose={false}\n          widthSizeClass={ModalSize.extraLarge}\n          displayClose={true}\n          padding={{title: true,}} >\n          {this.state.appointmentDetailsModal.item !== null &&\n          <>\n            <div className=\"px-4 py-3 pb-6 bg-gray-100\">\n              <div className=\"py-2 mb-2\">\n                <span className=\"text-xl font-bold\">Exam details</span>\n              </div>\n              <div className=\"grid md:grid-cols-2 text-sm gap-2\">\n                <div className=\"col-span-1 flex flex-row items-center gap-3\">\n                  <span className=\"text-gray-500\">Course name:</span>\n                  <span className=\"font-semibold\">{this.state.appointmentDetailsModal.item !== null && <>{this.state.appointmentDetailsModal.item.course.course_code}-{this.state.appointmentDetailsModal.item.course.course_name}</>}</span>\n                </div>\n                <div className=\"col-span-1 flex flex-row items-center gap-3\">\n                  <span className=\"text-gray-500\">Exam Room ID:</span>\n                  <span className=\"font-semibold\">{this.state.appointmentDetailsModal.item.exam_location.room}</span>\n                </div>\n                <div className=\"col-span-1 flex flex-row items-center gap-3\">\n                  <span className=\"text-gray-500\">Exam date:</span>\n                  <span className=\"font-semibold\">{\"Date here\"}</span>\n                </div>\n                <div className=\"col-span-1 flex flex-row items-center gap-3\">\n                  <span className=\"text-gray-500\">Proctoring type:</span>\n                  <span className=\"font-semibold bg-blue-100 text-blue-600 px-2 rounded-full\">{this.state.appointmentDetailsModal.item.proctoring_type}</span>\n                </div>\n                <div className=\"col-span-1 flex flex-row items-center gap-3\">\n                  <span className=\"text-gray-500\">Duration:</span>\n                  <span className=\"font-semibold\">{this.state.appointmentDetailsModal.item.duration} hours</span>\n                </div>\n                <div className=\"col-span-1 flex flex-row items-center gap-3\">\n                  <span className=\"text-gray-500\">Exam center/Room:</span>\n                  <span className=\"font-semibold\">{this.state.appointmentDetailsModal.item.exam_location.center}, {this.state.appointmentDetailsModal.item.exam_location.room}</span>\n                </div>\n                <div className=\"col-span-1 flex flex-row items-center gap-3\">\n                  <span className=\"text-gray-500\">Location:</span>\n                  <span className=\"font-semibold\">{this.state.appointmentDetailsModal.item.exam_location.province}, {this.state.appointmentDetailsModal.item.exam_location.district}</span>\n                </div>\n                <div className=\"col-span-1 flex flex-row items-center gap-3\">\n                  <span className=\"text-gray-500\">Academic year:</span>\n                  <span className=\"font-semibold\">{this.state.appointmentDetailsModal.item.academic_year}</span>\n                </div>\n                <div className=\"col-span-1 flex flex-row items-center gap-3\">\n                  <span className=\"text-gray-500\">Status:</span>\n                  <span className=\"text-gray-500 font-bold\">{this.state.appointmentDetailsModal.item.status} for exam</span>\n                </div>\n\n                <div className=\"col-span-1 flex flex-row items-center gap-3\">\n                  {this.state.appointmentDetailsModal.item.status === examStatus.Done && \n                    <div className={`w-full px-3 py-2 bg-white rounded font-bold`}>\n                      <span>{findResult(this.state.appointmentDetailsModal.item.exam_questions, this.state.appointmentDetailsModal.item.exam_questions_answers.questionAnswers) >= 50 ? \"You passed with:\" : \"You failed with:\"} </span>\n                      <span className={`w-full font-bold px-3 py-1 text-sm ${findResult(this.state.appointmentDetailsModal.item.exam_questions, this.state.appointmentDetailsModal.item.exam_questions_answers.questionAnswers) >= 50 ? \"bg-green-100 text-green-700 border border-green-700\" : \"bg-red-100 text-red-700 border border-red-700\"}`}>{findResult(this.state.appointmentDetailsModal.item.exam_questions, this.state.appointmentDetailsModal.item.exam_questions_answers.questionAnswers).toFixed(2)}%</span>\n                      <span> scores</span>\n                    </div>}\n                </div>\n\n              </div>\n            </div>\n            {this.state.displayResults === true && this.state.appointmentDetailsModal.item.exam_questions_answers.questionAnswers.length !== 0 &&\n            <div className=\"border-2 border-blue-600 px-3 pb-3 rounded mx-3 my-3\">\n              <DoExamResults\n                page=\"appointmentDashboard\"\n                answeredQuestions={this.state.appointmentDetailsModal.item.exam_questions_answers.questionAnswers}\n                testAnswers={this.state.appointmentDetailsModal.item.exam_questions_answers.questionAnswers.length === undefined ? 0 : this.state.appointmentDetailsModal.item.exam_questions_answers.questionAnswers.length}\n              />\n            </div>\n            }\n            <div className=\"bg-white px-4 py-4 flex gap-3 justify-between\">\n              <div className=\"flex gap-3\">\n                <div className=\"btn border border-gray-500 text-gray-500 w-max cursor-pointer\">Print</div>\n                {this.state.appointmentDetailsModal.item.status === examStatus.Waiting &&\n                <div className=\"btn border border-blue-500 text-blue-500 w-max cursor-pointer hover:text-white hover:bg-blue-600\">Edit exam room</div>}\n              </div>\n              {this.state.appointmentDetailsModal.item.status === examStatus.Pending &&\n              <div onClick={() => this.props.auth.user.id !== undefined && this.state.appointmentDetailsModal.item !== null && this.renderExam(this.props.auth.user.id, this.state.appointmentDetailsModal.item)} className=\"btn bg-blue-600 text-white w-max cursor-pointer float-right\">Start exam</div>}\n              {this.state.appointmentDetailsModal.item.status === examStatus.Waiting &&\n                <div className=\"flex flex-col w-full\">\n                  <div className=\"flex flex-row justify-between items-center\">\n                    <span className=\"text-xs text-blue-600 font-bold\">Count down: 12:00:02</span>\n                    <span className=\"text-xs text-blue-600 italic\">67%</span>\n                  </div>\n                  <div className=\"rounded-full h-3 bg-blue-400 mb-2 mt-1 flex items-center w-full\">\n                    <div className=\"h-2 bg-blue-200 rounded-full\" style={{width: '32%'}}></div>\n                  </div>\n                </div>}\n                {this.state.appointmentDetailsModal.item.status === examStatus.Done &&\n                <div onClick={() => this.setState({ displayResults: !this.state.displayResults })} className=\"btn bg-blue-600 text-white cursor-pointer\">{this.state.displayResults === true ? \"Close exam results\" : \"View Exam results\"}</div>}\n            </div>\n          </>}\n        </Modal>}\n        {this.state.centersModal === true && this.state.selectedCourse !== null &&\n        <Modal\n          title={<div className=\"text-gray-800 font-bold text-2xl\">Choose exam center location</div>}\n          backDrop={true}\n          theme={Themes.default}\n          close={() => this.setState({ centersModal: false })}\n          backDropClose={false}\n          widthSizeClass={ModalSize.maxWidth}\n          displayClose={true}\n          padding={{title: true,}} >\n          {this.props.selected_application &&\n          this.props.selectedPosition &&\n            <ChooseExamCenter\n            positionCourses={this.state.selectedCourse}\n            addLocation={this.findLocation}\n            closeModal={this.closeModal}\n          />}\n        </Modal>\n        }\n        {this.props.applicationHistory && console.log(\"History: \", this.props.applicationHistory)}\n        {this.state.applicationHistoryState === true &&\n        <Modal\n          title={<div className=\"text-blue-800 font-bold text-xl flex flex-row justify-center items-center gap-2\"><MdHistory className=\"text-3xl\" /><span>Application status history</span></div>}\n          backDrop={true}\n          theme={Themes.default}\n          close={() => this.setState({ applicationHistoryState: false })}\n          backDropClose={true}\n          widthSizeClass={ModalSize.large}\n          displayClose={true}\n          padding={{title: true,}} >\n            <div className=\"flex flex-col justify-between items-start gap-1 bg-blue-50 px-3 py-2\">\n              {/* <span className=\"text-sm text-blue-800 font-bold\">Application status history</span> */}\n              <hr className=\"bg-blue-600\" />\n              <div className=\"grid md:grid-cols-2 lg:grid-cols-3 gap-3\">\n              {this.props.applicationHistory !== undefined &&\n                this.props.applicationHistory.length > 0 && \n                this.props.applicationHistory.map((item, i) => (\n                  <div key={i + 1} className=\"col-span-1 flex flex-col border border-blue-500 rounded px-3 py-2\">\n                    <div className=\"flex flex-row gap-2 justify-start items-center text-xs\">\n                      <span className=\"text-gray-500\">Date:</span>\n                      <span className=\"font-bold\">{DATE(item.date, \"DD/MM/YYYY\")}</span>\n                    </div>\n                    <div className=\"flex flex-row gap-2 justify-start items-center text-xs\">\n                      <span className=\"text-gray-500\">Action:</span>\n                      <span className=\"font-bold\">{item.comment}</span>\n                    </div>\n                    <div className=\"flex flex-row gap-2 justify-start items-center text-xs\">\n                      <span className=\"text-gray-500\">Application status:</span>\n                      <span className=\"font-bold\">{ApplicationStatesDescription.find(itm => itm.key === item.application_status)?.caption}</span>\n                    </div>\n                  </div>\n                ))}\n              </div> \n            </div>\n        </Modal>}\n      </Fragment>\n    )\n  }\n}\n\n\nconst mapStateToProps = ({\n  todos,\n  auth,\n  doExam,\n}: StoreState): { todos: Todo[]; auth: Auth; doExam: examDataInterface } => {\n  return { todos: todos, auth: auth, doExam: doExam };\n};\n\nconst PostExams = connect(mapStateToProps, {\n  fetchTodos,\n  deleteTodo,\n  fetchAuth,\n  FC_GetTwoFactorAuth,\n  FC_ChangeTwoFactorType,\n  FC_Login,\n  FC_LoginCheckCode,\n  loadExam,\n})(_PostExams);\n\nexport default PostExams;","import React, { Component, Fragment } from 'react'\nimport { MdAdd, } from 'react-icons/md'\nimport { Link, Redirect } from 'react-router-dom'\nimport { connect } from \"react-redux\";\nimport {\n  Auth,\n  initiateApplication,\n  removeLocation,\n  loadApplicationPeriods,\n  applicationPeriodsStoreInterface,\n  setSelectedPeriod,\n  System,\n  PushPopupAlert,\n  positionsStoreInterface,\n  loadAllPositions,\n  FC_Access,\n} from \"../../actions\";\nimport { StoreState } from \"../../reducers\";\nimport { applicationStoreInterface, initialApplicationInterface } from '../../actions/application';\nimport { ApplicationStepsTypes } from '../Application/ApplicationSteps/ApplicationSteps';\nimport { applicationExamAPI, ApplicationPeriodGet, ApplicationStates, ApplicationStatesDescription, GetApplicationsAPI, NoRoomsInterface } from '../../interfaces/application';\nimport Exams from './Exams';\nimport { PositionAPI } from '../../interfaces/index';\nimport axios from 'axios';\nimport { API } from '../../utils/api';\nimport { sentExamInterface } from '../Application/ExamCenter/ExamCenter';\nimport Loading from '../../components/Loading/Loading';\nimport { AiOutlineFilter } from 'react-icons/ai';\nimport { IoBriefcase, IoBriefcaseOutline } from 'react-icons/io5';\nimport Modal, { ModalSize, Themes } from '../../components/Modal/Modal';\nimport { SideNavigation, MainItem, } from '../../components/Navigation/SideNavigation';\nimport { BsCaretRightFill } from 'react-icons/bs';\nimport LoadingV2, { LoadingType } from '../../components/Loading/LoadingV2';\nimport { PopupAlertData } from '../../components/Alert/Popup';\nimport { PopupAlertTheme } from '../../interfaces/popupAlert';\nimport { RiFileForbidLine } from 'react-icons/ri';\nimport { IoMdList } from 'react-icons/io';\nimport NoResult, { NoResultThemes } from '../../components/NoResult/NoResult';\nimport ApplicationPeriods from '../../components/ApplicationPeriods/ApplicationPeriods';\nimport { DATE } from '../../utils/functions';\nimport { UserAccessList } from '../../utils/auth_access';\n\ninterface ApplicationsDashboardState {\n  selectedPosition: PositionAPI | null;\n  selectedExams: applicationExamAPI[] | null;\n  applications: GetApplicationsAPI[] | [] | null;\n  selected_application: string | null;\n  noRoomsApplication: NoRoomsInterface[] | null | [];\n  loading: boolean;\n  applicationError: string | null;\n  number_of_incomplete: number,\n  applicationDetails: boolean,\n  selectedApplicationStatus: ApplicationStates | null,\n  showPeriodFilter: boolean,\n}\ninterface ApplicationsDashboardProps {\n  auth: Auth;\n  application: applicationStoreInterface;\n  periods: applicationPeriodsStoreInterface\n  initiateApplication: (initial: initialApplicationInterface) => void;\n  removeLocation: (course_id: string) => void;\n  loadApplicationPeriods: (callback: (loading: boolean) => void) => void;\n  setSelectedPeriod: (period: ApplicationPeriodGet) => void;\n  system: System;\n  PushPopupAlert: (alert: PopupAlertData) => void;\n  positions: positionsStoreInterface;\n  loadAllPositions: (callback: (loading: boolean) => void) => void;\n  FC_Access: Function;\n}\n\nclass _ApplicationsDashboard extends Component<ApplicationsDashboardProps, ApplicationsDashboardState> {\n  constructor(props: ApplicationsDashboardProps) {\n\t\tsuper(props);\n\n\t\tthis.state = {\n      selectedPosition: null,\n      selectedExams: null,\n      applications: null,\n      selected_application: null,\n      noRoomsApplication: null,\n      loading: false,\n      applicationError: null,\n      number_of_incomplete: 0,\n      applicationDetails: false,\n      selectedApplicationStatus: null,\n      showPeriodFilter: false,\n\t\t};\n\t}\n\n  filteredApplications = (applications: GetApplicationsAPI[], Status: ApplicationStates | null, searchPeriod?: ApplicationPeriodGet | null) => {\n    let appl:GetApplicationsAPI[];\n    if (searchPeriod !== undefined && searchPeriod !== null) {\n      appl = applications.filter(itm => itm.application_session.application_session_id === searchPeriod.application_session_id);\n    } else {\n      appl = applications;\n    }\n    if (Status === null) {\n      return appl;\n    } else {\n      return appl.filter(item => item.application_status === Status);\n    }\n  }\n\n  closeApplicationDetails = () => {\n    this.setState({ selected_application: null });\n    this.setState({ selectedPosition: null, selected_application: null })\n    this.setState({ selectedExams: null });\n  }\n\n  applicationStatuses = (application: GetApplicationsAPI[]): { title: string, count: number, status: ApplicationStates }[] => {\n    let output: { title: string, count: number, status: ApplicationStates }[] = [];\n    for (let i in ApplicationStatesDescription) {\n      output.push({\n        title: ApplicationStatesDescription[i].caption,\n        count: application.filter(itm => itm.application_status === ApplicationStatesDescription[i].key).length,\n        status: ApplicationStatesDescription[i].key\n      })\n    }\n    return output;\n  }\n\n  // LoadApplicationPeriods = async () => {\n\n  // }\n\n  LoadApplications = async () => {\n    this.setState({ number_of_incomplete: 0 });\n    if (this.props.auth.user.user_id) {\n      const user_id = this.props.auth.user.user_id;\n      const selected_position = this.state.selectedPosition;\n      this.setState({ applications: null });\n      this.setState({ selectedPosition: null });\n      this.setState({ selectedExams: null });\n      \n      try {\n        const res = await axios.get<GetApplicationsAPI[]>(`${API.APPLICATION}/application/${user_id}`);\n        if (res.status === 200) {\n          this.setState({ applications: res.data });\n          if (res.data !== null) {\n            if (res.data.length > 0) {\n              // let done = false;\n              for (let i in res.data) {\n                let courses = res.data[i].position.courses;\n                let exams = res.data[i].exams;\n                if (res.data[i].position.position_id === selected_position?.position_id) {\n                  this.setState({ selectedPosition: res.data[i].position });\n                  this.setState({ selectedExams: exams });\n                }\n                for ( let x in courses) {\n                  if (exams.filter(itm => itm.course_id === courses[x].course_id).length === 0 && res.data[i].application_status !== ApplicationStates.Rejected) {\n                    this.setState({ selected_application: res.data[i].application_id });\n                    this.setState({ selectedPosition: res.data[i].position, selected_application: res.data[i].application_id })\n                    this.setState({ selectedExams: res.data[i].exams });\n                    // done = true;\n                    this.incrementIncomplete();\n                  }\n                  // if (done === false && this.state.selected_application === null) {\n                  //   this.setState({ selected_application: res.data[0].application_id });\n                  //   this.setState({ selectedPosition: res.data[0].position, selected_application: res.data[0].application_id })\n                  //   this.setState({ selectedExams: res.data[0].exams });\n                  // }\n                }\n              }\n            }\n          }\n        }\n        console.log(\"Applications: \", this.state.applications);\n      } catch (error) {\n        console.log(\"Applications err: \", error);\n      }\n    }\n  }\n\n  updateLocation = async (application_id: string, exams: sentExamInterface[]) => {\n    this.setState({ loading: true });\n    this.setState({ applicationError: null });\n    console.log(application_id);\n    for(let i in exams) {\n      try {\n        const res = await axios.post(`${API.APPLICATION}/application/updatemissed`, {\n          application_id: application_id,\n          exams: exams[i]\n        });\n        if (res.status === 200 && this.state.noRoomsApplication !== null) {\n          this.setState({ noRoomsApplication: this.state.noRoomsApplication?.filter(itm => itm.course_id !== exams[i].course_id) });\n        }\n        if (res.status === 200) {\n          this.props.PushPopupAlert({\n            title: `Location updated successfully`,\n            description: \"Location has updated successfully! You can continue to update before starting of the examination!\",\n            theme: PopupAlertTheme.success,\n          });\n        }\n        this.LoadApplications();\n      } catch (error: any) {\n        if (error.response) {\n          if (error.response.data) {\n            if (error.response.data.errors !== undefined) {\n              if (error.response.data.errors.length > 0) {\n                if (this.state.noRoomsApplication) {\n                  let newArr: sentExamInterface[];\n                  if (error.response.data.errors[0].field !== undefined) {\n                    newArr = this.state.noRoomsApplication?.filter(itm => itm.course_id === error.response.data.errors[0].field.course_id);\n                    if (newArr !== undefined)  {\n                      for (let i in newArr) {\n                        this.props.removeLocation(newArr[i].course_id);\n                      }\n                    }\n                  }\n                }\n                this.setState({ applicationError: error.response.data.errors[0].message });\n                this.props.PushPopupAlert({\n                  title: error.response.data.errors[0].message,\n                  theme: PopupAlertTheme.danger,\n                });\n              }\n            } else {\n              this.props.PushPopupAlert({\n                title: \"Something went wrong! Please try again\",\n                theme: PopupAlertTheme.danger,\n              });\n              this.setState({ applicationError: \"Something went wrong! Please try again\" });\n            }\n          }\n        }\n        console.log(\"Change error: \", {...error});\n      }\n    }\n    if (this.state.selectedPosition) {\n      this.setState({ selectedPosition: this.state.selectedPosition });\n    }\n    this.setState({ selected_application: application_id });\n    this.setState({ loading: false });\n  }\n\n  incrementIncomplete = () => {\n    this.setState({ number_of_incomplete: this.state.number_of_incomplete + 1 });\n  }\n\n  changeLoadingState = (state: boolean) => {\n    this.setState({ loading: state });\n  }\n\n  deleteApplication = async (id: string) => {\n    if (window.confirm(\"Are you sure do you want to delete this application?\") && id) {\n      this.changeLoadingState(true);\n      try {\n        await axios.delete(`${API.APPLICATION}/application/${id}`);\n        this.props.PushPopupAlert({\n          title: `Application deleted successfully!`,\n          theme: PopupAlertTheme.success,\n        });\n        this.LoadApplications();\n      } catch (error: any) {\n        this.props.PushPopupAlert({\n          title: `Failed to delete application!`,\n          theme: PopupAlertTheme.warning,\n        });\n      }\n      this.changeLoadingState(false);\n    }\n  }\n\n  setShowFilterStatus = (status: boolean) => {\n    this.setState({ showPeriodFilter: status})\n  }\n\n  componentDidMount = () => {\n    this.props.loadApplicationPeriods(this.changeLoadingState);\n    this.LoadApplications();\n    this.props.loadAllPositions(this.changeLoadingState);\n    if (this.props.application.apply === undefined || this.props.application.apply.currentStep === ApplicationStepsTypes.Step3) {\n      this.props.initiateApplication({\n        user_id: this.props.auth.user.user_id, \n        selectedPosition: null, \n        currentStep: ApplicationStepsTypes.Step1,\n        positions: null,\n        doTestStatus: {\n          status: false,\n        },\n        selectedLocation: []\n      });\n    }\n    if (this.state.applications !== null) {\n      if (this.state.applications.length > 0) {\n        if (this.state.selectedPosition === null) {\n          this.setState({ selectedPosition: this.state.applications[0].position, selected_application: this.state.applications[0].application_id })\n        }\n        if (this.state.selectedExams === null) {\n          this.setState({ selectedExams: this.state.applications[0].exams })\n        }\n      }\n    }\n  }\n  render() {\n    if (!FC_Access(this.props.auth, UserAccessList.MY_APPLICATION).view) {\n      return <Redirect to=\"/\" />\n    }\n    return (\n      <Fragment>\n        <SideNavigation>\n          {this.props.positions.positions_list === null ? <div className=\"btn bg-gray-500 text-white mb-4 w-full flex flex-row items-center gap-3 cursor-not-allowed animate__animated animate__zoomIn\">\n            <RiFileForbidLine className=\"text-2xl text-white\" /> Please wait...\n          </div> :\n          this.props.positions.positions_list.length > 0 && this.props.periods.applicationPeriods && this.props.periods.applicationPeriods.filter(itm => itm.is_active === true).length !== 0 ?\n          <Link to=\"/apply\">\n            <div className=\"btn btn-blue text-white mb-4 w-full flex flex-row items-center gap-3 animate__animated animate__zoomIn\">\n              <MdAdd className=\"text-2xl text-white\" /> Apply\n            </div>\n          </Link> : \n          <div className=\"btn bg-gray-200 cursor-not-allowed text-gray-500 mb-4 w-full flex flex-row items-center animate__animated animate__zoomIn\">\n            No vacancies!\n          </div>}\n          {/* <div className=\"mb-6\"></div> */}\n          {/* <Search data={[1, 2, 3]} /> */}\n          <div \n          onClick={() => this.setState({ selectedApplicationStatus: null })} \n          className={`cursor-pointer ${this.state.selectedApplicationStatus !== null ? \"text-gray-600 hover:text-blue-600 border border-gray-200 hover:border-blue-600 hover:bg-blue-100 bg-white\" : \"text-blue-600 border border-blue-600 hover:bg-blue-100 bg-blue-100\"} flex flex-row items-center gap-2 px-2 py-1 rounded font-bold`}>\n            <IoMdList className=\"text-xl\" />\n            <span>View all ({this.state.applications && this.filteredApplications(this.state.applications, this.state.selectedApplicationStatus, this.props.periods.selected_period) ? this.filteredApplications(this.state.applications, this.state.selectedApplicationStatus, this.props.periods.selected_period).length : 0})</span>\n          </div>\n          <div className=\"pt-1\">\n            {this.state.applications && this.filteredApplications(this.state.applications, null, this.props.periods.selected_period) === null ? <Loading /> : this.state.applications && this.applicationStatuses(this.filteredApplications(this.state.applications, null, this.props.periods.selected_period)).map((itm: { title: string; count: number, status: ApplicationStates }, i: number) => (\n              itm.count > 0 &&\n              <Fragment key={itm.title}>\n                <div onClick={() => this.setState({ selectedApplicationStatus: itm.status })}>\n                  <MainItem title={itm.title} count={itm.count} active={this.state.selectedApplicationStatus === itm.status ? true : false} />\n                </div>\n              </Fragment>\n            ))}\n          </div>\n        </SideNavigation>\n        <div className=\"pr-2\">\n          <div className=\"mt-2 rounded px-3 md:px-4 py-3 md:py-3\">\n            <div className=\"flex flex-col\">\n              <div className=\"flex flex-col md:flex-row justify-between md:items-center\">\n                <div className=\"flex flex-col gap-1\">\n                  <span className=\"text-blue-600 text-2xl md:text-2xl lg:text-2xl font-bold\">My Applications <span className=\"md:hidden\">({this.state.applications && this.filteredApplications(this.state.applications, this.state.selectedApplicationStatus, this.props.periods.selected_period) ? this.filteredApplications(this.state.applications, this.state.selectedApplicationStatus, this.props.periods.selected_period).length : 0})</span></span>\n                  <div className=\"text-gray-700 font-bold text-xs md:text-sm lg:text-md flex flex-row gap-1 items-center\"><AiOutlineFilter className=\"text-2xl\" /> Selected period <span onClick={() => this.setState({ showPeriodFilter: true })} className={`px-2 ${this.props.periods.selected_period !== null? \"text-blue-600 hover:bg-blue-100 border-2 border-gray-200 hover:border-blue-600 underline\" : \"bg-white text-gray-600 hover:bg-gray-100 border border-gray-300\"}  rounded-full py-1 flex flex-row justify-center items-center font-bold cursor-pointer`}>{this.props.periods.selected_period !== null ? <><BsCaretRightFill className=\"mr-3\" />{this.props.periods.selected_period.application_session_name}</> : \"Choose period\"}</span></div>\n                </div>\n                <div className=\"hidden md:grid grid-cols-2 lg:grid-cols-2 gap-2\">\n                  <div className=\"col-span-1\">\n                    <div className=\"flex flex-col border border-gray-200 px-2 py-2 rounded\">\n                      <span className=\"text-xs md:text-xs text-blue-600 font-bold text-right\">Total</span>\n                      <span className=\"text-xl md:text-2xl font-bold text-blue-600 text-right\">{this.state.applications && this.filteredApplications(this.state.applications, this.state.selectedApplicationStatus, this.props.periods.selected_period) ? this.filteredApplications(this.state.applications, this.state.selectedApplicationStatus, this.props.periods.selected_period).length : 0}</span>\n                    </div>\n                  </div>\n                  <div className=\"col-span-1\">\n                    <div className=\"flex flex-col border border-gray-200 px-2 py-2 rounded\">\n                      <span className=\"text-xs md:text-xs text-blue-600 font-bold text-right\">Incomplete</span>\n                      <span className=\"text-xl md:text-2xl font-bold text-blue-600 text-right\">{this.state.number_of_incomplete}</span>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n          <div className=\"my-2\">\n            <div className=\"grid grid-cols-12 gap-3\">\n              <div className=\"col-span-12\">\n                <div className={`grid md:grid-cols-1 lg:grid-cols-1 gap-2`}>\n                  <div className=\"ml-2 -my-2 md:hidden lg:hidden xl:hidden\">\n                    {this.props.positions.positions_list === null ? <div className=\"btn bg-gray-500 text-white mb-4 w-full flex flex-row items-center gap-3 animate__animated animate__zoomIn justify-center\">\n                      <RiFileForbidLine className=\"text-2xl text-white\" /> Please wait...\n                    </div> :\n                    this.props.positions.positions_list.length > 0 ?\n                    <Link to=\"/apply\">\n                      <div className=\"btn btn-blue text-white mb-4 w-full flex flex-row items-center gap-3 animate__animated animate__zoomIn justify-center\">\n                        <MdAdd className=\"text-2xl text-white\" /> Create application\n                      </div>\n                    </Link> : \n                    <div className=\"btn bg-gray-400 text-white mb-4 w-full flex flex-row items-center gap-3 animate__animated animate__zoomIn justify-center\">\n                      <RiFileForbidLine className=\"text-2xl text-white\" /> No vacancies!\n                    </div>}\n                  </div>\n                  {this.state.applications === null ? <LoadingV2 type={LoadingType.dark} /> :\n                  this.filteredApplications(this.state.applications, this.state.selectedApplicationStatus, this.props.periods.selected_period).length === 0 ? \n                  <div className=\"ml-2\">\n                  <NoResult \n                  theme={NoResultThemes.Dark} \n                  value=\"No Applications found!\" \n                  component={<div className=\"ml-2 -my-2 hidden md:block\">\n                    {this.props.positions.positions_list !== null && this.props.positions.positions_list.length > 0 && this.props.periods.applicationPeriods && this.props.periods.applicationPeriods.filter(itm => itm.is_active === true).length !== 0 &&\n                    <Link to=\"/apply\">\n                      <div className=\"text-blue-600 font-bold underline mb-2 hover:text-blue-800 animate__animated animate__zoomIn\">\n                        Click here to create new application\n                      </div>\n                    </Link>}\n                  </div>} \n                  /></div> :\n                  this.filteredApplications(this.state.applications, this.state.selectedApplicationStatus, this.props.periods.selected_period).map((item, i) => (\n                    <div \n                      onClick={() => { \n                        this.setState({ selectedPosition: item.position, selected_application: item.application_id }); \n                        this.setState({ selectedExams: item.exams })}} \n                      className={`bg-white rounded ${this.state.selectedPosition?.position_id === item.position.position_id ? \"border-2 border-blue-600 shadow\" : item.application_status === ApplicationStates.Initiated ? \"border-gray-200 bg-gray-50 px-3 py-3 hover:border-gray-500\" : item.application_status === ApplicationStates.Rejected ? \"px-3 py-3 bg-white border-white\" : item.application_status === ApplicationStates.Shortlisted ? \"border-gray-200 bg-white px-3 py-3 hover:border-blue-600\" : \"px-3 py-3 bg-white border-yellow-600 hover:border-yellow-500\"} flex flex-col cursor-pointer font-normal hover:font-bold border ml-2`}>\n                      <div className={`grid md:grid-cols-12 ${this.state.selectedPosition?.position_id === item.position.position_id ? \"bg-gray-100 pr-3 rounded-t py-2\" : \"bg-white\"}`}>\n                        <div className=\"col-span-1 flex items-center justify-center\">\n                          {item.application_status === ApplicationStates.Initiated ?\n                          <IoBriefcaseOutline className=\"text-5xl text-gray-600\" /> :\n                          item.application_status === ApplicationStates.Rejected ?\n                          <IoBriefcase className=\"text-5xl text-yellow-900\" /> :\n                          item.application_status === ApplicationStates.Shortlisted ?\n                          <IoBriefcaseOutline className=\"text-5xl text-blue-600\" /> :\n                          <IoBriefcase className=\"text-5xl text-yellow-700\" />}\n                        </div>\n                        <div className=\"col-span-7\">\n                          <span className={`font-extrabold ${item.application_status !== ApplicationStates.Initiated ? item.application_status === ApplicationStates.Rejected ? \"text-yellow-900\" : item.application_status === ApplicationStates.Shortlisted ? \"text-blue-600\" : \"text-yellow-700\" : \"text-blue-600\"}`}>{item.position.position_title}</span>\n                          <div className=\"flex flex-col text-xs text-gray-600 mt-3\">\n                            <div className=\"flex flex-row gap-2\">\n                              <span className={`${item.application_status !== ApplicationStates.Initiated ? item.application_status === ApplicationStates.Rejected ? \"text-yellow-900\" : item.application_status === ApplicationStates.Shortlisted ? \"text-blue-600\" : \"text-yellow-700\" : \"text-gray-500\"}`}>Date:</span>\n                              <span className={`${item.application_status !== ApplicationStates.Initiated ? item.application_status === ApplicationStates.Rejected ? \"text-yellow-900\" : item.application_status === ApplicationStates.Shortlisted ? \"text-blue-600\" : \"text-yellow-700\" : \"text-black\"} font-bold`}>{DATE(item.createdAt, \"DD/MM/YYYY\")}</span>\n                            </div>\n                            <div className=\"flex flex-row gap-2\">\n                              <span className={`${item.application_status !== ApplicationStates.Initiated ? item.application_status === ApplicationStates.Rejected ? \"text-yellow-900\" : item.application_status === ApplicationStates.Shortlisted ? \"text-blue-600\" : \"text-yellow-700\" : \"text-gray-500\"}`}>Application period:</span>\n                              <span className={`${item.application_status !== ApplicationStates.Initiated ? item.application_status === ApplicationStates.Rejected ? \"text-yellow-900\" : item.application_status === ApplicationStates.Shortlisted ? \"text-blue-600\" : \"text-yellow-700\" : \"text-black\"} font-bold`}>{item.application_session && item.application_session.application_session_name} - {item.application_session && item.application_session.period}</span>\n                            </div>\n                          </div>\n                        </div>\n                        <div className=\"col-span-4 flex md:justify-end items-center\">\n                          <div className=\"flex flex-col float-left text-sm md:justify-end\">\n                            <span className={`${item.application_status === ApplicationStates.Rejected ? \"text-yellow-700\" : \"text-gray-500\"} md:text-right`}>Status</span>\n                            {item.application_status === ApplicationStates.Initiated ? \n                            <span className={`font-bold ${this.state.selectedPosition?.position_id === item.position.position_id ? \"bg-gray-600 text-gray-100 border border-gray-500 rounded-full\" : \"bg-gray-50 text-gray-800 rounded\"} px-3 py-1`}>{ApplicationStatesDescription.find(itm => itm.key === item.application_status)?.caption }</span>:\n                            item.application_status === ApplicationStates.Rejected ? \n                            <span className={`font-bold ${this.state.selectedPosition?.position_id === item.position.position_id ? \"bg-yellow-900 text-yellow-100 border border-yellow-700 rounded-full\" : \"bg-yellow-100 text-yellow-900 rounded\"} px-3 py-1`}>{ApplicationStatesDescription.find(itm => itm.key === item.application_status)?.caption }</span> :\n                            item.application_status === ApplicationStates.Shortlisted ? \n                            <span className={`font-bold ${this.state.selectedPosition?.position_id === item.position.position_id ? \"bg-blue-900 text-blue-100 border border-blue-700 rounded-full\" : \"bg-blue-100 text-blue-900 rounded\"} px-3 py-1`}>{ApplicationStatesDescription.find(itm => itm.key === item.application_status)?.caption }</span> :\n                            <span className={`font-bold ${this.state.selectedPosition?.position_id === item.position.position_id ? \"bg-yellow-600 text-yellow-100 border border-yellow-500 rounded-full\" : \"bg-yellow-100 text-yellow-700 rounded\"} px-3 py-1`}>{ApplicationStatesDescription.find(itm => itm.key === item.application_status)?.caption }</span>\n                            }\n                          </div>\n                        </div>\n                      </div>\n                      \n                    </div>\n                  ))}\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n        {this.state.selectedPosition !== null && this.state.selectedExams !== null &&\n        <Modal\n          title={<div className=\"flex flex-row gap-4 items-center\">\n            <IoBriefcaseOutline className=\"text-5xl text-blue-600\" />\n            <div className=\"flex flex-col\">\n              <span className=\"font-bold text-xl text-blue-600\">{this.state.selectedPosition.position_title}</span>\n              <span className=\"text-sm text-gray-500 font-normal pl-1\">\n                {this.state.applications !== null && this.state.selectedPosition !== null && this.state.applications.find(itm => itm.position.position_id === this.state.selectedPosition?.position_id)?.application_session.application_session_name} - {this.state.applications !== null && this.state.selectedPosition !== null && this.state.applications.find(itm => itm.position.position_id === this.state.selectedPosition?.position_id)?.application_session.period}</span>\n              </div>\n            </div>}\n          backDrop={true}\n          theme={Themes.default}\n          close={() => this.closeApplicationDetails()}\n          backDropClose={true}\n          widthSizeClass={ModalSize.extraLarge}\n          displayClose={true}\n          padding={{title: true,}} >\n            <div className=\"border-t border-gray-200 -mt-2 px-2 pb-2\">\n                <Exams \n                  selectedExams={this.state.selectedExams}\n                  selectedPosition={this.state.selectedPosition}\n                  selected_application={this.state.selected_application}\n                  updateLocation={this.updateLocation}\n                  changeLocationError={this.state.applicationError}\n                  loading={this.state.loading}\n                  incrementIncomplete={this.incrementIncomplete}\n                  applicationHistory={this.state.applications !== null && this.state.selectedPosition !== null ? this.state.applications.find(itm => itm.position.position_id === this.state.selectedPosition?.position_id)?.application_history : undefined}\n                  deleteApplication={this.deleteApplication}\n                  selectedApplicationDetails={this.state.applications && this.state.applications.find(itm => itm.application_id === this.state.selected_application)!}\n                />\n            </div>\n        </Modal>}\n        {this.state.showPeriodFilter === true &&\n        <Modal\n          title={<div className=\"text-2xl\">Filter by period</div>}\n          backDrop={true}\n          theme={Themes.default}\n          close={() => this.setState({ showPeriodFilter: false })}\n          backDropClose={true}\n          widthSizeClass={ModalSize.extraLarge}\n          displayClose={true}\n          padding={{title: true, body: true}} >\n            <ApplicationPeriods \n              applicationPeriods={this.props.periods.applicationPeriods} \n              setSelectedPeriod={this.props.setSelectedPeriod} \n              showPeriodFilter={this.setShowFilterStatus}\n            />\n        </Modal>}\n      </Fragment>\n    )\n  }\n}\n\nconst mapStateToProps = ({\n  auth,\n  application,\n  periods,\n  system,\n  positions,\n}: StoreState): { auth: Auth; application: applicationStoreInterface, periods: applicationPeriodsStoreInterface; system: System; positions: positionsStoreInterface, } => {\n  return { auth: auth, application: application, periods, system: system, positions: positions, };\n};\n\nexport const ApplicationsDashboard = connect(mapStateToProps, {\n  initiateApplication,\n  removeLocation,\n  loadApplicationPeriods,\n  setSelectedPeriod,\n  PushPopupAlert,\n  loadAllPositions,\n  FC_Access,\n})(_ApplicationsDashboard);"],"sourceRoot":""}
{"version":3,"sources":["shared/dataTest.tsx","components/Table/Table.tsx","actions/session.ts","actions/document.ts","containers/Claimings/Candidate/FormPlacementList.tsx","containers/Claimings/Candidate/ClaimForm.tsx","containers/Claimings/Candidate/ApplicationFormView.tsx","containers/Positions/ViewRequirements.tsx","containers/Claimings/Candidate/ExaminationFormView.tsx","containers/Claimings/Candidate/FormExamList.tsx","containers/DoExam/DoExamTitle/FindAnswerHybrid.tsx","containers/DoExam/DoExamTitle/FindAnswer.tsx","components/AnswersDetails/AnswersDetails.tsx","components/ClaimForm/ClaimFormComponent.tsx","containers/Claimings/Candidate/ChooseReason.tsx","containers/SessionSettings/ApplicationSession/SessionDetails.tsx","containers/Claimings/Candidate/DocFormView.tsx","containers/Claimings/Candidate/FormApplicationList.tsx","containers/Claimings/Candidate/FormDocumentList.tsx"],"names":["isEmptyOrSpaces","str","match","getRoleById","roles","roleId","filter","role","system_user_role_id","getInstituteById","institutes","instituteId","find","item","education_institute_id","getPositionById","positions","position_id","position","toTwoDigit","value","dec","Math","floor","slice","toString","substr","toAnyDigit","padding","zeroes","Array","join","capitalizeFirstLetter","charAt","toUpperCase","Table","props","table","tr","tableId","length","result","characters","charactersLength","i","random","FC_makeID","useState","totalItems","setTotalItems","totalPages","setTotalPages","currentPage","setCurrentPage","pages","setPages","pageSize","setPageSize","startIndex","setStartIndex","endIndex","setEndIndex","useEffect","pagination","tablePagination","document","getElementById","getElementsByTagName","ceil","min","_pages","from","keys","map","style","display","className","tableSize","search","searchBG","type","placeholder","onChange","e","data","filterType","td","rows","cols","toLowerCase","columns","textContent","innerText","indexOf","filterTable","target","disabled","loading","Number","tableClass","rounded","id","hideColumns","thColor","column","index","alignText","isSortAllowed","onClick","switching","x","y","shouldSwitch","colIndex","dir","switchcount","innerHTML","parentNode","insertBefore","sortThisColumn","columnTitle","aria-label","page","pageIndex","GetPlansTypes","callback","dispatch","a","setAxiosToken","axios","get","API","CLAIMING","res","console","log","GET_PLANS_TYPES","plan_types","status","ActionTypes","payload","error","errorToText","setSelectedPlanType","thisType","SELECT_PLAN_TYPE","getActiveSessionPlan","GET_ACTIVE_SESSION_PLANS","session_plan","undefined","is_active","GetAllSessionPlans","GET_ALL_SESSION_PLANS","session_data","createSessionPlan","CREATE_SESSION_PLAN","updateSessionPlan","UPDATE_SESSION_PLAN","sessionActivation","SESSION_ACTIVATION","deleteSessionPlan","DELETE_SESSION_PLAN","createAcademicSession","CREATE_ACADEMIC_SESSION","GetAllAcademicSession","PLACEMENT","GET_ALL_ACADEMIC_SESSION","updateAcademicSession","UPDATE_ACADEMIC_SESSION","academicSessionActivation","ACADEMIC_SESSION_ACTIVATION","deleteAcademicSession","DELETE_ACADEMIC_SESSION","getActiveAcademicSession","GET_ACTIVE_ACADEMIC_SESSION","getDocumentCategory","AUTH","docCategory","GET_DOCUMENT_CATEGORY","createDocumentCategory","CREATE_DOCUMENT_CATEGORY","updateDocumentCategory","UPDATE_DOCUMENT_CATEGORY","deleteDocumentCategory","DELETE_DOCUMENT_CATEGORY","getDocumentSubCategory","docSubCategory","GET_DOCUMENT_SUB_CATEGORY","doc_SUB_category_error","createDocumentSubCategory","CREATE_DOCUMENT_SUB_CATEGORY","updateDocumentSubCategory","UPDATE_DOCUMENT_SUB_CATEGORY","deleteDocumentSubCategory","DELETE_DOCUMENT_SUB_CATEGORY","getDocumentFields","docFields","GET_DOCUMENT_FIELDS","createDocumentFields","CREATE_DOCUMENT_FIELDS","updateDocumentFields","reducer","UPDATE_DOCUMENT_FIELDS","deleteDocumentFields","DELETE_DOCUMENT_FIELDS","distinctCandidates","candidatesData","user_ids","candidate","forEach","includes","user_id","push","getCandidatesInInstitute","educatin_type_id","session_id","APPLICATION","GET_CANDIDATE_IN_INSTITUTE","verifyDocument","VERIFY_DOCUMENT","React","memo","connect","searchInput","setSearchInput","myPlacement","isClaimAllowed","myClaims","activeSession","session_plan_id","placed","_id","setChooseClaimFile","setViewThisFile","setClaimFileId","school","school_name","ClaimGetDocTitle","documentCategories","doc","DocCategory","DocSubCategory","DocField","DocTitle","sub_category_id","documentSubCategory","c","user_detail_subcategory_id","title","category_id","documentCategory","user_detail_category_id","category_subcategory_data","category_subcategory_Data_id","documentFields","category","sub_category","field","main","allClaim","period_id","claimOnId","claiming_on_id","ClaimForm","setLoading","state","setState","setLoadingForm","loadingForm","setFormError","formError","setAlertError","alertError","claimFileId","viewThisFile","chooseClaimFile","setChooseClaimReason","chooseClaimReason","setClaimReason","claimReason","setClaimComment","claimComment","isClaimTypeOpen","thisSession","PlansTypeKeys","plans","type_key","isPlanActive","DOCUMENT_VALIDATION","PLACEMENT_TRANSFER","displayClaimType","claimType","EXAMINATION","MARKS_PUBLICATION","loadExamAnswers","activeSessionPlan","getMyAnswers","msg","PushPopupAlert","theme","PopupAlertTheme","danger","componentDidMount","auth","application_session","setFormState","thisClaimType","thisClaimTypeId","formType","documentReducer","claiming","claimReasons","getClaimReasons","getDocumentById","documents","doc_id","getApplicationById","applications","application_id","getExamById","exams","answer_sheet_id","getValidation","thisId","old_reason","old_status","old_evaluated_by","candidateDocuments","validated_by","comment","validation_status","candidateApplications","override_by","application_status","cleanToClose","response","loadUserById","getClaimTitle","position_title","courses","myAnswer","getCourseIdBySheetId","getCourseById","course","course_name","getClaimInstitute","handleSubmit","preventDefault","element","toLocaleLowerCase","old_evaluator_email","old_evaluator_name","evaluator_email","evaluator_name","institute_id","email","user_info","fname","lname","post","user","default_claim_resaons","reason","createClaim","success","selectClaimType","thisClaim","getMyRejectedApplications","loadCourses","getMyRejectedDocuments","getMyPlacement","generateChooseFileTitle","this","formState","Modal","backDrop","Themes","default","close","displayClose","backDropClose","widthSizeClass","ModalSize","extraLarge","medium","body","footer","onSubmit","Object","values","replace","FormDocumentList","FormApplicationList","FormExamList","candidateAnswers","ChooseReason","allClaimReasons","resize","DocFormView","thisDoc","ApplicationFormView","thisApplication","ExaminationFormView","thisAnswerSheet","Component","getMyClaims","GetClaimingTypes","FC_ApplicationPositionDistinctCategory","thisPosition","PositionsTemp","DistinctCategoriesTemp","DistinctCategoriesIds","DistinctSubCategoriesTemp","DistinctSubCategoriesIds","requirements","req","thisRequirements","thisCategory","thisSubCategory","subcategory","thisField","position_requirement","required","category_title","subcategory_id","subcategory_title","subcategory_required","field_title","field_id","DATE","createdAt","ApplicationStates","Rejected","dangerouslySetInnerHTML","__html","description","school_level_id","school_level_name","education_category_title","course_code","course_id","NoResultThemes","Dark","ViewRequirements","colSpan","claimShowAnswer","answer","discription","termes","rules","right_click_enabled","copy_enabled","paste_enabled","stop_candidate_when_comeback","allow_to_leave_browser","period","exam_date","exam_id","showAnswers","getFailedExam","allData","allCourses","total_marks","sheet_id","findQType","typeShort","changed","questionTypeElementsType","Hybrid","QuestionForHybrid","Calculated","CalculatedMultipleChoice","Essay","Matching","MultipleChoice","Numeric","ShortAnswer","SimpleCalculate","SingleMultiple","TrueFalse","FindAnswerHybrid","submitQuestionAnswer","Loading","maxHeight","wholeQuestion","selectedLanguage","findQuestionType","questionTypes","question","test","language","sub_question","stri","String","fromCharCode","charCodeAt","Embedded","EmbeddedQuestion","candidateExam","question_answers","answersList","showCorrectAnswer","subQuestionType","reference","resultDiv","user_answers","userAnswer","toMultipleChoice","itm","userAnswerSingle","userAnswer1","toCalculatedMultipleChoice","userAnswerMatch","toMatching","userAnswerTureFalse","toTrueFalse","userAnswerNumerical","toNumerical","userAnswerSimpleCalculate","toSimpleCalculated","userAnswerShortAnswer","toShortAnswer","userAnswerEssay","toEssay","FindAnswer","question_id","UserAnswersSel","SubQ","answers","user_answer","testQ","_AnswersDetails","setLoadingStatus","loadingStatus","loadQuestionTypes","check","user_exams_done","allAnswers","loadExamsDone","exam_paper","requestUserAnswers","userAnswersTotalMarks","total","user_marks","user_exam_details","questions","system","setSelectedExamQuestion","submitExam","selectedExam","setSubmitModal","is_deleted","chapters","customNumber","marks","toFixed","exam_total_marks","AnswersDetails","FC_GetProfileDetails","LoadCandidateApplications","setSelectedCandidateExam","setSelectedCourse","setSelectedPosition","InitializeExamDetails","AddUserApplication","loadApplicationPeriods","ClaimFormComponent","isDocumentIdValid","alert","info","warning","isApplicationIdValid","app_id","app","isExamIdValid","exam","claim_type","candidate_applications","file_id","_isDocumentIdValid","_isApplicationIdValid","_isExamIdValid","application_period","updatedAt","application_history","date","getClaimById","fileId","sessionId","claims","evaluation_comment","decision_taken_status","isActivationAllowed","thisPlans","today","Date","end_date","getTime","getPlanTypeByKey","allPlanTypes","viewThisSession","thisPlan","planEndDate","planStartDate","start_date","type_status","SessionPlanTypeStatus","CLOSED","SessionDetails","handlePlanActivation","session","newState","window","confirm","key","newData","session_plan_name","prototype","hasOwnProperty","call","OPEN","type_id","type_title","allowed_claim_level","history","loadingRequest","put","setViewThisSession","src","AUTH_FILES","files","alt","getRejectedApplicants","applicationData","objList","text","product","flag","prop","DocumentTitleData","documentData","documentTemp","company","end_year","names","phone_number","school_id","start_year","year","doc_title","getRejectedDocuments","rejected"],"mappings":"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","file":"static/js/8.66aac500.chunk.js","sourcesContent":["import { education_category } from \"../interfaces\";\nimport { PositionAPI } from \"../interfaces/position\";\nimport {\n  CustomeAccessInterface,\n  PostSchoolInterface,\n  RoleToUserInterface,\n  SchoolInfoInterface,\n  SystemUserRoleInterface,\n} from \"./interfaces\";\n\nexport const data_posts_school: PostSchoolInterface[] = [];\n\nexport const isEmptyOrSpaces = (str: string): boolean => {\n  return str === null || str.match(/^ *$/) !== null;\n};\n\nexport const getUserTitle = (\n  accessRoles: SystemUserRoleInterface[],\n  roleId: string\n): string => {\n  const result = accessRoles.find((e) => e.system_user_role_id === roleId);\n  return result ? result.role : \"\";\n};\n\nexport const getRoleById = (\n  roles: SystemUserRoleInterface[],\n  roleId: string\n): SystemUserRoleInterface => {\n  return roles.filter((role) => role.system_user_role_id === roleId)[0];\n};\n\nexport const getInstituteById = (\n  institutes: education_category[],\n  instituteId: string\n): education_category | undefined => {\n  return institutes.find((item) => item.education_institute_id === instituteId);\n};\n\nexport const getPositionById_old = (\n  positions: PositionAPI[],\n  position_id: string\n): PositionAPI => {\n  console.log({\n    positions,\n    position_id,\n    data: positions.filter(\n      (position) => position.position_id === position_id\n    )[0],\n  });\n  return positions.filter(\n    (position) => position.position_id === position_id\n  )[0];\n};\n\nexport const getPositionById = (\n  positions: PositionAPI[],\n  position_id: string\n): PositionAPI | undefined => {\n  return positions.find((position) => position.position_id === position_id);\n};\n\nexport const getSchoolById = (\n  schools: SchoolInfoInterface[],\n  school_id: string\n): SchoolInfoInterface => {\n  return schools.filter((school) => school.school_id === school_id)[0];\n};\n\nexport const getPostById = (\n  posts: PostSchoolInterface[],\n  post_id: string\n): PostSchoolInterface => {\n  return posts.filter((post) => post.school_id === post_id)[0];\n};\n\nexport const getPostsBySchoolId = (\n  posts: PostSchoolInterface[],\n  school_id: string\n): PostSchoolInterface[] => {\n  return posts.filter((post) => post.school_id === school_id);\n};\n\nexport const getPostsByIds = (\n  posts: PostSchoolInterface[],\n  school_id: string,\n  position_id: string\n): PostSchoolInterface[] => {\n  return posts.filter(\n    (post) => post.school_id === school_id && post.position_id === position_id\n  );\n};\n\nexport const displayDate = (dateToDisplay: Date): string => {\n  return new Intl.DateTimeFormat(\"en-GB\", {\n    year: \"numeric\",\n    month: \"long\",\n    day: \"2-digit\",\n  }).format(dateToDisplay);\n};\n\nexport const userAccess = (\n  defaultAccess: RoleToUserInterface,\n  customAccess: CustomeAccessInterface\n): RoleToUserInterface => {\n  // const data = defaultAccess.access.map((default,index,customAccess)=>{\n  //   let data_custom = customAccess\n  //   if\n  // })\n  // return customAccess.filter((custom) => custom.id === accecc_id)[0];\n  return defaultAccess;\n};\n\n// export const groupBy = (list: [], keyGetter: Function) => {\n//   const map = new Map();\n//   list.forEach((item) => {\n//     const key = keyGetter(item);\n//     const collection = map.get(key);\n//     if (!collection) {\n//       map.set(key, [item]);\n//     } else {\n//       collection.push(item);\n//     }\n//   });\n//   return map;\n// };\n\nexport const toTwoDigit = (value: number): string => {\n  var dec = value - Math.floor(value);\n  value = value - dec;\n  return (\"0\" + value).slice(-2) + dec.toString().substr(1);\n};\n\nexport const toAnyDigit = (\n  value: string | number,\n  padding: number = 3\n): string => {\n  var zeroes = new Array(padding + 1).join(\"0\");\n  return (zeroes + value).slice(-padding);\n};\n\nexport const capitalizeFirstLetter = (value: string): string => {\n  return value.charAt(0).toUpperCase() + value.slice(1);\n};\n\nexport const isDateExpiried = (paramDate: string) => {\n  const thisDate = new Date(paramDate);\n  const today = new Date();\n  if (thisDate.getTime() < today.getTime()) {\n    return true;\n  }\n\n  return false;\n};\n","import React, { useEffect, useState } from \"react\";\nimport { BiSort } from \"react-icons/bi\";\nimport { MdNavigateBefore, MdNavigateNext, MdSearch } from \"react-icons/md\";\n\nconst FC_makeID = (length: number = 5): string => {\n  let result: string = \"\";\n  let characters: string =\n    \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\n  let charactersLength = characters.length;\n  for (let i: number = 0; i < length; i++) {\n    result += characters.charAt(Math.floor(Math.random() * charactersLength));\n  }\n  return result;\n};\n\nexport const sortThisColumn = (\n  tableId: string,\n  colIndex: number = 0,\n  dir: \"asc\" | \"desc\" = \"asc\"\n) => {\n  var table,\n    rows,\n    switching,\n    i,\n    x,\n    y,\n    shouldSwitch,\n    switchcount = 0;\n  table = document.getElementById(tableId) as HTMLTableElement;\n  switching = true;\n  /* Make a loop that will continue until\n  no switching has been done: */\n  if (table) {\n    while (switching) {\n      //start by saying: no switching is done:\n      switching = false;\n      rows = table.rows;\n      /*Loop through all table rows (except the\n    first, which contains table headers):*/\n      for (i = 1; i < rows.length - 1; i++) {\n        //start by saying there should be no switching:\n        shouldSwitch = false;\n        /*Get the two elements you want to compare,\n      one from current row and one from the next:*/\n        x = rows[i].getElementsByTagName(\"TD\")[colIndex];\n        y = rows[i + 1].getElementsByTagName(\"TD\")[colIndex];\n        /*check if the two rows should switch place,\n      based on the direction, asc or desc:*/\n        if (dir === \"asc\" && x && y) {\n          if (x.innerHTML.toLowerCase() > y.innerHTML.toLowerCase()) {\n            //if so, mark as a switch and break the loop:\n            shouldSwitch = true;\n            break;\n          }\n        } else if (dir === \"desc\" && x && y) {\n          if (x.innerHTML.toLowerCase() < y.innerHTML.toLowerCase()) {\n            //if so, mark as a switch and break the loop:\n            shouldSwitch = true;\n            break;\n          }\n        }\n      }\n      if (shouldSwitch && rows[i].parentNode) {\n        /*If a switch has been marked, make the switch\n      and mark that a switch has been done:*/\n        rows[i].parentNode!.insertBefore(rows[i + 1], rows[i]);\n        switching = true;\n        //Each time a switch is done, increase this count by 1:\n        switchcount++;\n      } else {\n        /*If no switching has been done AND the direction is \"asc\",\n      set the direction to \"desc\" and run the while loop again.*/\n        if (switchcount === 0 && dir === \"asc\") {\n          dir = \"desc\";\n          switching = true;\n        }\n      }\n      // if (i === 0) continue;\n      // rows.cells[i].style.backgroundColor = \"blue\";\n    }\n  }\n};\n\nexport interface TableColumnsInterface {\n  columnTitle: JSX.Element | string;\n  alignText: string;\n  padding?: string;\n  isSortAllowed?: boolean;\n}\n\ninterface TableProps {\n  columns: TableColumnsInterface[];\n  rows: Function;\n  hideColumns?: boolean;\n  pagination?: boolean;\n  search?: boolean;\n  tableSize?: string;\n  tableClass?: string;\n  tableId?: string;\n  rounded?: boolean;\n  searchBG?: string;\n  thColor?: string;\n  loading?: boolean;\n}\n\nconst Table: React.FC<TableProps> = (props) => {\n  const startPage = 1;\n  const tableId =\n    !props.tableId || props.tableId === \"myTable\" ? FC_makeID() : props.tableId;\n  let table: HTMLElement, tr: HTMLCollectionOf<HTMLTableRowElement>;\n  const [totalItems, setTotalItems] = useState<number>(0);\n  const [totalPages, setTotalPages] = useState<number>(1);\n  const [currentPage, setCurrentPage] = useState<number>(1);\n  const [pages, setPages] = useState<number[]>();\n  const [pageSize, setPageSize] = useState<number>(10);\n  const [startIndex, setStartIndex] = useState<number>(0);\n  const [endIndex, setEndIndex] = useState<number>(0);\n\n  useEffect(() => {\n    props.pagination && tablePagination();\n  });\n\n  const filterTable = (\n    data: string,\n    filterType?: \"default\" | \"field\"\n  ): void => {\n    var filter, tr, td, rows: number, cols: number, txtValue;\n    if (filterType === \"field\" && data === \"all\") data = \"\";\n    filter = data.toLowerCase();\n    table = document.getElementById(tableId!)!;\n    tr = table.getElementsByTagName(\"tr\");\n    for (rows = 0; rows < tr.length; rows++) {\n      for (cols = 0; cols < props.columns.length; cols++) {\n        td = tr[rows].getElementsByTagName(\"td\")[cols];\n        if (td) {\n          txtValue = td.textContent || td.innerText;\n          if (txtValue.toLowerCase().indexOf(filter) > -1) {\n            tr[rows].style.display = \"\";\n            break;\n          } else {\n            tr[rows].style.display = \"none\";\n          }\n        }\n      }\n    }\n  };\n\n  const tablePagination = (): void => {\n    table = document.getElementById(tableId)!;\n    tr = table.getElementsByTagName(\"tr\");\n    setTotalItems(tr.length);\n    setTotalPages(Math.ceil(totalItems / pageSize));\n\n    // calculate start and end item indexes on the current page\n    setStartIndex((currentPage - 1) * pageSize);\n    setEndIndex(Math.min(startIndex + pageSize - 1, totalItems - 1));\n\n    /**\n     * TODO!\n     * There is a problem with this condition\n     */\n    let _pages = Array.from(Array(totalPages + 1 - startPage).keys()).map(\n      (i) => startPage + i\n    );\n    if (!pages || _pages.length !== pages.length) {\n      setPages(_pages);\n    }\n\n    for (let i: number = 0; i < tr.length; i++) {\n      if (i >= startIndex && i <= endIndex) {\n        tr[i].style.display = \"\";\n      } else {\n        tr[i].style.display = \"none\";\n      }\n    }\n  };\n\n  return (\n    <div className={`${props.tableSize} overflow-x-auto`}>\n      {/* search box  */}\n      {props.search && (\n        <div className={`${props.searchBG} w-full mb-2`}>\n          {props.search && (\n            <div className=\"bg-white rounded flex items-center w-full p-2 border-2 border-gray-500\">\n              <MdSearch className=\"h-5 w-5 fill-current text-gray-400\" />\n              <input\n                type=\"search\"\n                placeholder=\"search\"\n                onChange={(e) => filterTable(e.target.value)}\n                className=\"w-full h-6 pl-4 text-sm outline-none focus:outline-none bg-white\"\n                disabled={props.loading}\n              />\n\n              {props.pagination && (\n                <div className=\"select\">\n                  <select\n                    className=\"text-base outline-none focus:outline-none bg-white\"\n                    onChange={(e) => setPageSize(Number(e.target.value))}\n                    disabled={props.loading}\n                  >\n                    <option value=\"10\">10</option>\n                    <option value=\"25\">25</option>\n                    <option value=\"50\">50</option>\n                    <option value=\"100\">100</option>\n                  </select>\n                </div>\n              )}\n            </div>\n          )}\n        </div>\n      )}\n      <div className=\"overflow-x-auto w-full\">\n        <table\n          className={\n            props.tableClass\n              ? props.tableClass\n              : `w-full shadow ${\n                  props.rounded && \"sm:rounded-lg\"\n                } table-auto order-table`\n          }\n          id={tableId}\n        >\n          {!props.hideColumns && (\n            <thead className=\"bg-white border-b-2 border-gray-300 text-gray-600 font-bold text-base\">\n              <tr\n                className={`text-left tracking-wide bg-${props.thColor}-100 border-b-2 border-${props.thColor}-500 text-${props.thColor}-600`}\n              >\n                {props.columns.map((column, index) => (\n                  <th\n                    key={index}\n                    className={`${column.padding} text-${\n                      column.alignText\n                    } px-3 py-2 ${column.isSortAllowed && \"cursor-pointer\"}`}\n                    onClick={() =>\n                      column.isSortAllowed && sortThisColumn(tableId, index)\n                    }\n                  >\n                    <div className=\"flex items-center gap-1\">\n                      {column.columnTitle}\n                      {column.isSortAllowed && <BiSort />}\n                    </div>\n                  </th>\n                ))}\n              </tr>\n            </thead>\n          )}\n          <tbody id=\"table-data\" className=\"bg-white text-black text-base\">\n            {props.rows()}\n          </tbody>\n        </table>\n        {props.pagination && (\n          <div className=\"sm:flex-1 sm:flex sm:items-center sm:justify-between mt-4 work-sans\">\n            <div>\n              <span className=\"text-xs xs:text-sm text-gray-900\">\n                Showing 1 to {pageSize} of {totalItems - 1} Entries\n              </span>\n            </div>\n            <div>\n              <nav className=\"inline-flex shadow-sm\">\n                <div>\n                  <button\n                    type=\"button\"\n                    className={`inline-flex items-center px-2 py-2 rounded-l-md border border-gray-300 text-sm font-medium text-gray-500 ${\n                      currentPage !== 1 && \"bg-white\"\n                    }`}\n                    aria-label=\"Previous\"\n                    disabled={currentPage === 1 || props.loading}\n                    onClick={() => setCurrentPage(currentPage - 1)}\n                  >\n                    <MdNavigateBefore className=\"h-5 w-5\" />\n                  </button>\n                </div>\n                <div>\n                  {pages &&\n                    pages.map((page, pageIndex) => (\n                      <button\n                        key={pageIndex}\n                        className={`-ml-px inline-flex items-center px-4 py-2 border border-gray-300 text-sm font-medium text-gray-700 ${\n                          page !== currentPage\n                            ? \"bg-white\"\n                            : \"bg-gray-100 cursor-default\"\n                        }`}\n                        disabled={page === currentPage || props.loading}\n                        onClick={() => setCurrentPage(page)}\n                      >\n                        {page}\n                      </button>\n                    ))}\n                </div>\n                <div>\n                  <button\n                    type=\"button\"\n                    className={`inline-flex items-center px-2 py-2 rounded-r-md border border-gray-300 text-sm leading-5 font-medium text-gray-500 ${\n                      currentPage !== totalPages && \"bg-white\"\n                    }`}\n                    aria-label=\"Next\"\n                    disabled={currentPage === totalPages || props.loading}\n                    onClick={() => setCurrentPage(currentPage + 1)}\n                  >\n                    <MdNavigateNext className=\"h-5 w-5\" />\n                  </button>\n                </div>\n              </nav>\n            </div>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default Table;\n","import axios from \"axios\";\nimport { Dispatch } from \"redux\";\nimport { ActionTypes } from \"./types\";\nimport { API } from \"../utils/api\";\nimport { setAxiosToken } from \"../utils/AxiosToken\";\nimport { errorToText } from \"../utils/errors\";\nimport {\n  AcademicSessionInterface,\n  PlansTypeInterface,\n  SessionPlanInterface,\n} from \"../interfaces\";\n\n/**\n * * ****************************** INTERFACES *****************************\n */\n\n// GET ACTIVE PLAN TYPES\nexport interface GetPlansTypesAction {\n  type: ActionTypes.GET_PLANS_TYPES;\n  payload: PlansTypeInterface[];\n}\n\n// GET INACTIVE PLAN TYPES\nexport interface GetDeletedPlansTypesAction {\n  type: ActionTypes.GET_DELETED_PLANS_TYPES;\n  payload: PlansTypeInterface[];\n}\n\n// CREATE PLAN TYPE\nexport interface CreatePlansTypeAction {\n  type: ActionTypes.CREATE_PLAN_TYPE;\n  payload: PlansTypeInterface;\n}\n\n// UPDATE PLAN TYPE\nexport interface UpdatePlansTypeAction {\n  type: ActionTypes.UPDATE_PLAN_TYPE;\n  payload: PlansTypeInterface;\n}\n\n// DELETE PLAN TYPE\nexport interface DeletePlansTypeAction {\n  type: ActionTypes.DELETE_PLAN_TYPE;\n  payload: PlansTypeInterface;\n}\n\n// SET PLAN TYPE =====================================\nexport interface setSelectedPlanTypeActions {\n  type: ActionTypes.SELECT_PLAN_TYPE;\n  payload: PlansTypeInterface | \"all\";\n}\n\n// GET ALL SESSION PLAN\nexport interface GetAllSessionPlansAction {\n  type: ActionTypes.GET_ALL_SESSION_PLANS;\n  payload: SessionPlanInterface[];\n}\n\n// GET ACTIVE SESSION PLAN\nexport interface GetActiveSessionPlanAction {\n  type: ActionTypes.GET_ACTIVE_SESSION_PLANS;\n  payload: SessionPlanInterface | \"none\";\n}\n\n// CREATE SESSION PLAN\nexport interface CreateSessionPlansAction {\n  type: ActionTypes.CREATE_SESSION_PLAN;\n  payload: SessionPlanInterface;\n}\n\n// UPDATE SESSION PLAN\nexport interface UpdateSessionPlansAction {\n  type: ActionTypes.UPDATE_SESSION_PLAN;\n  payload: SessionPlanInterface;\n}\n\n// ACTIVATE SESSION PLAN\nexport interface ActivateSessionPlansAction {\n  type: ActionTypes.SESSION_ACTIVATION;\n  payload: SessionPlanInterface;\n}\n\n// DELETE SESSION PLAN\nexport interface DeleteSessionPlanAction {\n  type: ActionTypes.DELETE_SESSION_PLAN;\n  payload: string;\n}\n\n// GET ALL ACADEMIC SESSION\nexport interface GetAllAcademicSessionAction {\n  type: ActionTypes.GET_ALL_ACADEMIC_SESSION;\n  payload: AcademicSessionInterface[];\n}\n\n// CREATE ACADEMIC SESSION\nexport interface CreateAcademicSessionAction {\n  type: ActionTypes.CREATE_ACADEMIC_SESSION;\n  payload: AcademicSessionInterface;\n}\n\n// UPDATE ACADEMIC SESSION\nexport interface UpdateAcademicSessionAction {\n  type: ActionTypes.UPDATE_ACADEMIC_SESSION;\n  payload: AcademicSessionInterface;\n}\n\n// ACTIVATE ACADEMIC SESSION\nexport interface ActivateAcademicSessionAction {\n  type: ActionTypes.ACADEMIC_SESSION_ACTIVATION;\n  payload: AcademicSessionInterface;\n}\n\n// DELETE ACADEMIC SESSION\nexport interface DeleteAcademicSessionAction {\n  type: ActionTypes.DELETE_ACADEMIC_SESSION;\n  payload: string;\n}\n\n// GET ACTIVE ACADEMIC SESSION\nexport interface GetActiveAcademicSessionAction {\n  type: ActionTypes.GET_ACTIVE_ACADEMIC_SESSION;\n  payload: AcademicSessionInterface | \"none\";\n}\n\nexport type SessionActionType =\n  | GetPlansTypesAction\n  | GetDeletedPlansTypesAction\n  | CreatePlansTypeAction\n  | UpdatePlansTypeAction\n  | DeletePlansTypeAction\n  | GetAllSessionPlansAction\n  | GetActiveSessionPlanAction\n  | CreateSessionPlansAction\n  | UpdateSessionPlansAction\n  | ActivateSessionPlansAction\n  | DeleteSessionPlanAction\n  | setSelectedPlanTypeActions\n  | GetAllAcademicSessionAction\n  | CreateAcademicSessionAction\n  | UpdateAcademicSessionAction\n  | ActivateAcademicSessionAction\n  | DeleteAcademicSessionAction\n  | GetActiveAcademicSessionAction;\n\n/**\n * * ****************************** ACTIONS *****************************\n */\n\n// GET ACTIVE PLAN TYPES ==========================\nexport const GetPlansTypes = (callback: Function) => {\n  callback(true, \"\");\n  return async (dispatch: Dispatch) => {\n    try {\n      setAxiosToken();\n      const res = await axios.get<PlansTypeInterface[]>(\n        `${API.CLAIMING}/session-type`\n      );\n      console.log({ GET_PLANS_TYPES: res.data });\n      let plan_types: PlansTypeInterface[] = [];\n      if (res.status === 200) {\n        // setApplications(res.data);\n        if (res.data !== null && res.data.length > 0) {\n          plan_types = res.data;\n        }\n      }\n      dispatch<GetPlansTypesAction>({\n        type: ActionTypes.GET_PLANS_TYPES,\n        payload: plan_types,\n      });\n      callback(false, \"\");\n    } catch (error) {\n      console.error({ error: errorToText(error) });\n      callback(false, errorToText(error));\n    }\n  };\n};\n\n// GET ACTIVE PLAN TYPES ==========================\nexport const GetDeletedPlansTypes = (callback: Function) => {\n  callback(true, \"\");\n  return async (dispatch: Dispatch) => {\n    try {\n      setAxiosToken();\n      const res = await axios.get<PlansTypeInterface[]>(\n        `${API.CLAIMING}/session-type/deleted`\n      );\n      console.log({ GET_DELETED_PLANS_TYPES: res.data });\n      let plan_types: PlansTypeInterface[] = [];\n      if (res.status === 200) {\n        // setApplications(res.data);\n        if (res.data !== null && res.data.length > 0) {\n          plan_types = res.data;\n        }\n      }\n      dispatch<GetDeletedPlansTypesAction>({\n        type: ActionTypes.GET_DELETED_PLANS_TYPES,\n        payload: plan_types,\n      });\n      callback(false, \"\");\n    } catch (error) {\n      console.error({ error: errorToText(error) });\n      callback(false, errorToText(error));\n    }\n  };\n};\n\n// CREATE PLAN TYPE\nexport const createPlanType = (\n  data: PlansTypeInterface\n): CreatePlansTypeAction => {\n  return {\n    type: ActionTypes.CREATE_PLAN_TYPE,\n    payload: data,\n  };\n};\n\n// UPDATE PLAN TYPE\nexport const updatePlanType = (\n  data: PlansTypeInterface\n): UpdatePlansTypeAction => {\n  return {\n    type: ActionTypes.UPDATE_PLAN_TYPE,\n    payload: data,\n  };\n};\n\n// DELETE PLAN TYPE\nexport const deletePlanType = (\n  data: PlansTypeInterface\n): DeletePlansTypeAction => {\n  return {\n    type: ActionTypes.DELETE_PLAN_TYPE,\n    payload: data,\n  };\n};\n\n// SELECT PLAN TYPES ==========================\nexport const setSelectedPlanType = (\n  thisType: PlansTypeInterface | \"all\"\n): setSelectedPlanTypeActions => {\n  console.log({ thisType });\n  return {\n    type: ActionTypes.SELECT_PLAN_TYPE,\n    payload: thisType,\n  };\n};\n\n// GET ACTIVE PLAN TYPES ==========================\nexport const getActiveSessionPlan = (callback: Function) => {\n  callback(true, \"\");\n  return async (dispatch: Dispatch) => {\n    try {\n      setAxiosToken();\n      const res = await axios.get<SessionPlanInterface>(\n        `${API.CLAIMING}/session/active/`\n      );\n      console.log({ GET_ACTIVE_SESSION_PLANS: res.data });\n      let session_plan: SessionPlanInterface | undefined = undefined;\n      // if (res.status === 200) {\n      //   // setApplications(res.data);\n      // }\n      if (res.data && res.data.is_active !== undefined) {\n        session_plan = res.data;\n      }\n      console.log({ session_plan: res.data });\n\n      dispatch<GetActiveSessionPlanAction>({\n        type: ActionTypes.GET_ACTIVE_SESSION_PLANS,\n        payload: session_plan ? session_plan : \"none\",\n      });\n      callback(false, \"\", session_plan ? session_plan : \"none\");\n    } catch (error) {\n      console.error({ error: errorToText(error) });\n      callback(false, errorToText(error));\n    }\n  };\n};\n\n// GET ALL PLAN TYPES ==========================\nexport const GetAllSessionPlans = (callback: Function) => {\n  callback(true, \"\");\n  return async (dispatch: Dispatch) => {\n    try {\n      setAxiosToken();\n      const res = await axios.get<SessionPlanInterface[]>(\n        `${API.CLAIMING}/session/`\n      );\n      console.log({ GET_ALL_SESSION_PLANS: res.data });\n      let session_data: SessionPlanInterface[] = [];\n      if (res.status === 200) {\n        // setApplications(res.data);\n        if (res.data !== null && res.data.length > 0) {\n          session_data = res.data;\n        }\n      }\n      dispatch<GetAllSessionPlansAction>({\n        type: ActionTypes.GET_ALL_SESSION_PLANS,\n        payload: session_data,\n      });\n      callback(false, \"\", session_data);\n    } catch (error) {\n      console.error({ error: errorToText(error) });\n      callback(false, errorToText(error));\n    }\n  };\n};\n\n// CREATE SESSION PLAN\nexport const createSessionPlan = (\n  data: SessionPlanInterface\n): CreateSessionPlansAction => {\n  return {\n    type: ActionTypes.CREATE_SESSION_PLAN,\n    payload: data,\n  };\n};\n\n// UPDATE SESSION PLAN\nexport const updateSessionPlan = (\n  data: SessionPlanInterface\n): UpdateSessionPlansAction => {\n  return {\n    type: ActionTypes.UPDATE_SESSION_PLAN,\n    payload: data,\n  };\n};\n\n// ACTIVATE SESSION PLAN\nexport const sessionActivation = (\n  data: SessionPlanInterface\n): ActivateSessionPlansAction => {\n  return {\n    type: ActionTypes.SESSION_ACTIVATION,\n    payload: data,\n  };\n};\n\n// DELETE SESSION PLAN\nexport const deleteSessionPlan = (data: string): DeleteSessionPlanAction => {\n  return {\n    type: ActionTypes.DELETE_SESSION_PLAN,\n    payload: data,\n  };\n};\n\n// CREATE ACADEMIC SESSION\nexport const createAcademicSession = (\n  data: AcademicSessionInterface\n): CreateAcademicSessionAction => {\n  return {\n    type: ActionTypes.CREATE_ACADEMIC_SESSION,\n    payload: data,\n  };\n};\n\n// GET ALL ACADEMIC SESSION ==========================\nexport const GetAllAcademicSession = (callback: Function) => {\n  callback(true, \"\");\n  return async (dispatch: Dispatch) => {\n    try {\n      setAxiosToken();\n      const res = await axios.get<AcademicSessionInterface[]>(\n        `${API.PLACEMENT}/postrequestperiod/`\n      );\n      console.log({ GET_ALL_SESSION_PLANS: res.data });\n      let session_data: AcademicSessionInterface[] = [];\n      if (res.status === 200) {\n        // setApplications(res.data);\n        if (res.data !== null && res.data.length > 0) {\n          session_data = res.data;\n        }\n      }\n      console.log(\"====================================\");\n      console.log({ GetAllAcademicSession: res });\n      console.log(\"====================================\");\n      dispatch<GetAllAcademicSessionAction>({\n        type: ActionTypes.GET_ALL_ACADEMIC_SESSION,\n        payload: session_data,\n      });\n      callback(false, \"\", session_data);\n    } catch (error) {\n      console.error({ error: errorToText(error) });\n      callback(false, errorToText(error));\n    }\n  };\n};\n\n// UPDATE ACADEMIC SESSION\nexport const updateAcademicSession = (\n  data: AcademicSessionInterface\n): UpdateAcademicSessionAction => {\n  return {\n    type: ActionTypes.UPDATE_ACADEMIC_SESSION,\n    payload: data,\n  };\n};\n\n// ACTIVATE ACADEMIC SESSION\nexport const academicSessionActivation = (\n  data: AcademicSessionInterface\n): ActivateAcademicSessionAction => {\n  return {\n    type: ActionTypes.ACADEMIC_SESSION_ACTIVATION,\n    payload: data,\n  };\n};\n\n// DELETE ACADEMIC SESSION\nexport const deleteAcademicSession = (\n  data: string\n): DeleteAcademicSessionAction => {\n  return {\n    type: ActionTypes.DELETE_ACADEMIC_SESSION,\n    payload: data,\n  };\n};\n\n// GET ACTIVE PLAN TYPES ==========================\nexport const getActiveAcademicSession = (callback: Function) => {\n  callback(true, \"\");\n  return async (dispatch: Dispatch) => {\n    try {\n      setAxiosToken();\n      const res = await axios.get<AcademicSessionInterface>(\n        `${API.PLACEMENT}/postrequestperiod/one`\n      );\n      console.log({ GET_ACTIVE_ACADEMIC_SESSION: res.data });\n      let session_plan: AcademicSessionInterface | undefined = undefined;\n      // if (res.status === 200) {\n      //   // setApplications(res.data);\n      // }\n      if (res.data) {\n        session_plan = res.data;\n      }\n      console.log({ session_plan: res.data });\n\n      dispatch<GetActiveAcademicSessionAction>({\n        type: ActionTypes.GET_ACTIVE_ACADEMIC_SESSION,\n        payload: session_plan ? session_plan : \"none\",\n      });\n      callback(false, \"\", session_plan ? session_plan : \"none\");\n    } catch (error) {\n      console.error({ error: errorToText(error) });\n      callback(false, errorToText(error));\n    }\n  };\n};\n","import axios from \"axios\";\nimport { Dispatch } from \"redux\";\nimport { ActionTypes } from \"./types\";\nimport {\n  CandidatesInterface,\n  DocumentCategoryInterface,\n  DocumentFieldsInterface,\n  DocumentSubCategoryInterface,\n} from \"../shared/interfaces\";\nimport { API } from \"../utils/api\";\nimport { setAxiosToken } from \"../utils/AxiosToken\";\nimport { errorToText } from \"../utils/errors\";\nimport { VerifyDocumentInterface } from \"./users\";\n\n/**\n * * ****************************** INTERFACES *****************************\n */\n\n// CATEGORY\nexport interface GetDocumentCategoryAction {\n  type: ActionTypes.GET_DOCUMENT_CATEGORY;\n  payload: DocumentCategoryInterface[];\n}\n\nexport interface CreateDocumentCategoryAction {\n  type: ActionTypes.CREATE_DOCUMENT_CATEGORY;\n  payload: DocumentCategoryInterface;\n}\n\nexport interface UpdateDocumentCategoryAction {\n  type: ActionTypes.UPDATE_DOCUMENT_CATEGORY;\n  payload: DocumentCategoryInterface;\n}\n\nexport interface DeleteDocumentCategoryAction {\n  type: ActionTypes.DELETE_DOCUMENT_CATEGORY;\n  payload: string;\n}\n\n// SUB CATEGORY\nexport interface GetDocumentSubCategoryAction {\n  type: ActionTypes.GET_DOCUMENT_SUB_CATEGORY;\n  payload: DocumentSubCategoryInterface[];\n}\n\nexport interface CreateDocumentSubCategoryAction {\n  type: ActionTypes.CREATE_DOCUMENT_SUB_CATEGORY;\n  payload: DocumentSubCategoryInterface;\n}\n\nexport interface UpdateDocumentSubCategoryAction {\n  type: ActionTypes.UPDATE_DOCUMENT_SUB_CATEGORY;\n  payload: DocumentSubCategoryInterface;\n}\n\nexport interface DeleteDocumentSubCategoryAction {\n  type: ActionTypes.DELETE_DOCUMENT_SUB_CATEGORY;\n  payload: string;\n}\n\n// FIELDS\nexport interface GetDocumentFieldsAction {\n  type: ActionTypes.GET_DOCUMENT_FIELDS;\n  payload: DocumentFieldsInterface[];\n}\n\nexport interface CreateDocumentFieldsAction {\n  type: ActionTypes.CREATE_DOCUMENT_FIELDS;\n  payload: DocumentFieldsInterface;\n}\n\nexport interface UpdateDocumentFieldsAction {\n  type: ActionTypes.UPDATE_DOCUMENT_FIELDS;\n  payload: DocumentFieldsInterface;\n}\n\nexport interface DeleteDocumentFieldsAction {\n  type: ActionTypes.DELETE_DOCUMENT_FIELDS;\n  payload: string;\n}\n\n// DOCUMENT CHECKING\nexport interface GetCandidatesInInstituteAtion {\n  type: ActionTypes.GET_CANDIDATE_IN_INSTITUTE;\n  payload: CandidatesInterface[];\n}\n\nexport interface VerifyDocumentAction {\n  type: ActionTypes.VERIFY_DOCUMENT;\n  payload: VerifyDocumentInterface;\n}\n\nexport type DocumentCategoryActionType =\n  | GetDocumentCategoryAction\n  | CreateDocumentCategoryAction\n  | UpdateDocumentCategoryAction\n  | DeleteDocumentCategoryAction\n  | GetDocumentSubCategoryAction\n  | CreateDocumentSubCategoryAction\n  | UpdateDocumentSubCategoryAction\n  | DeleteDocumentSubCategoryAction\n  | GetDocumentFieldsAction\n  | CreateDocumentFieldsAction\n  | UpdateDocumentFieldsAction\n  | DeleteDocumentFieldsAction\n  | GetCandidatesInInstituteAtion\n  | VerifyDocumentAction;\n\n/**\n * * ****************************** ACTIONS *****************************\n */\n\n// CATEGORY\n\nexport const getDocumentCategory = () => {\n  return async (dispatch: Dispatch) => {\n    try {\n      setAxiosToken();\n      const res = await axios.get(`${API.AUTH}/detailcategory`);\n      console.log({ docCategory: res });\n      dispatch<GetDocumentCategoryAction>({\n        type: ActionTypes.GET_DOCUMENT_CATEGORY,\n        payload: res.data,\n      });\n    } catch (error) {\n      console.error({ error: errorToText(error) });\n    }\n  };\n};\n\nexport const createDocumentCategory = (data: DocumentCategoryInterface) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<CreateDocumentCategoryAction>({\n      type: ActionTypes.CREATE_DOCUMENT_CATEGORY,\n      payload: data,\n    });\n  };\n};\n\nexport const updateDocumentCategory = (data: DocumentCategoryInterface) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<UpdateDocumentCategoryAction>({\n      type: ActionTypes.UPDATE_DOCUMENT_CATEGORY,\n      payload: data,\n    });\n  };\n};\n\nexport const deleteDocumentCategory = (data: string) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<DeleteDocumentCategoryAction>({\n      type: ActionTypes.DELETE_DOCUMENT_CATEGORY,\n      payload: data,\n    });\n  };\n};\n\n// SUB CATEGORY\nexport const getDocumentSubCategory = () => {\n  return async (dispatch: Dispatch) => {\n    try {\n      setAxiosToken();\n      const res = await axios.get<DocumentSubCategoryInterface[]>(\n        `${API.AUTH}/detailsubcategory`\n      );\n      console.log({ docSubCategory: res });\n      dispatch<GetDocumentSubCategoryAction>({\n        type: ActionTypes.GET_DOCUMENT_SUB_CATEGORY,\n        payload: res.data,\n        // payload: response.data,\n      });\n    } catch (error) {\n      console.log({ doc_SUB_category_error: error });\n    }\n  };\n};\n\nexport const createDocumentSubCategory = (\n  data: DocumentSubCategoryInterface\n) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<CreateDocumentSubCategoryAction>({\n      type: ActionTypes.CREATE_DOCUMENT_SUB_CATEGORY,\n      payload: data,\n    });\n  };\n};\n\nexport const updateDocumentSubCategory = (\n  data: DocumentSubCategoryInterface\n) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<UpdateDocumentSubCategoryAction>({\n      type: ActionTypes.UPDATE_DOCUMENT_SUB_CATEGORY,\n      payload: data,\n    });\n  };\n};\n\nexport const deleteDocumentSubCategory = (data: string) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<DeleteDocumentSubCategoryAction>({\n      type: ActionTypes.DELETE_DOCUMENT_SUB_CATEGORY,\n      payload: data,\n    });\n  };\n};\n\n// FIELDS\nexport const getDocumentFields = () => {\n  return async (dispatch: Dispatch) => {\n    try {\n      setAxiosToken();\n      const res = await axios.get<DocumentFieldsInterface[]>(\n        `${API.AUTH}/categorysubcatedata`\n      );\n      console.log({ docFields: res });\n      dispatch<GetDocumentFieldsAction>({\n        type: ActionTypes.GET_DOCUMENT_FIELDS,\n        payload: res.data,\n        // payload: response.data,\n      });\n    } catch (error) {\n      console.log({ doc_SUB_category_error: error });\n    }\n  };\n};\n\nexport const createDocumentFields = (data: DocumentFieldsInterface) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<CreateDocumentFieldsAction>({\n      type: ActionTypes.CREATE_DOCUMENT_FIELDS,\n      payload: data,\n    });\n  };\n};\n\nexport const updateDocumentFields = (data: DocumentFieldsInterface) => {\n  console.log({ reducer: data });\n  return async (dispatch: Dispatch) => {\n    dispatch<UpdateDocumentFieldsAction>({\n      type: ActionTypes.UPDATE_DOCUMENT_FIELDS,\n      payload: data,\n    });\n  };\n};\n\nexport const deleteDocumentFields = (data: string) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<DeleteDocumentFieldsAction>({\n      type: ActionTypes.DELETE_DOCUMENT_FIELDS,\n      payload: data,\n    });\n  };\n};\n\n// REMOVE DUPLICATION IN CANDIDATES IN EDUCATION CATEGORY PER SESSION\nconst distinctCandidates = (\n  candidatesData: CandidatesInterface[]\n): CandidatesInterface[] => {\n  let result: CandidatesInterface[] = [];\n  let user_ids: string[] = [];\n  const newArray: CandidatesInterface[] = candidatesData.filter((candidate) => {\n    return candidate !== null && candidate !== undefined;\n  });\n  newArray.forEach((candidate) => {\n    if (!user_ids.includes(candidate.user_id)) {\n      result.push(candidate);\n      user_ids.push(candidate.user_id);\n    }\n  });\n  return result;\n};\n// CANDIDATE IN EDUCATION CATEGORY PER SESSION\nexport const getCandidatesInInstitute = (\n  educatin_type_id: string,\n  session_id: string,\n  callback: Function\n) => {\n  return async (dispatch: Dispatch) => {\n    callback(true, \"\", null);\n    try {\n      setAxiosToken();\n      const res = await axios.get<CandidatesInterface[]>(\n        `${API.APPLICATION}/educationtypeuserdocs/${educatin_type_id}/${session_id}`\n      );\n\n      console.log(\"====================================\");\n      console.log({\n        getCandidatesInInstitute: res,\n        distinctCandidates: distinctCandidates(res.data),\n      });\n      console.log(\"====================================\");\n      dispatch<GetCandidatesInInstituteAtion>({\n        type: ActionTypes.GET_CANDIDATE_IN_INSTITUTE,\n        payload: distinctCandidates(res.data),\n        // payload: response.data,\n      });\n      callback(false, \"\", distinctCandidates(res.data));\n    } catch (error) {\n      console.log({ getCandidatesInInstitute: error });\n      callback(false, errorToText(error), null);\n    }\n  };\n};\n\nexport const verifyDocument = (data: VerifyDocumentInterface) => {\n  console.log(\"================verifyDocument====================\");\n  console.log({ verifyDocument: data });\n  console.log(\"================verifyDocument====================\");\n  return async (dispatch: Dispatch) => {\n    dispatch<VerifyDocumentAction>({\n      type: ActionTypes.VERIFY_DOCUMENT,\n      payload: data,\n    });\n  };\n};\n","import React, { useState } from \"react\";\nimport { MdSearch } from \"react-icons/md\";\nimport { connect } from \"react-redux\";\nimport { ApplicationSession } from \"../../../actions\";\nimport {\n  course,\n  CandidateClaimInterface,\n  claimApplicationsInterface,\n  ClaimExamResultsDetails,\n} from \"../../../interfaces\";\nimport { candidatePlacementInterface } from \"../../../interfaces/placement\";\nimport { isClaimAllowed } from \"./ClaimForm\";\n\nexport const getCourseById = (courses: course[], course_id: string) => {\n  return courses.find((item) => item.course_id === course_id);\n};\n\nexport const getCourseIdBySheetId = (\n  allData: ClaimExamResultsDetails[],\n  sheet_id: string\n) => {\n  return allData.find((item) => item.answer_sheet_id === sheet_id);\n};\n\nexport const searchApplication = (\n  objList: claimApplicationsInterface[],\n  text: any\n): claimApplicationsInterface[] => {\n  if (undefined === text || text === \"\") return objList;\n  return objList.filter((product) => {\n    let flag;\n    // let dataKeys = product;\n\n    for (let prop in product) {\n      flag = false;\n      if (prop === \"position\") {\n        flag =\n          product.position.position_title\n            .toString()\n            .toLowerCase()\n            .indexOf(text.toLowerCase()) > -1;\n      }\n      if (flag) break;\n    }\n    return flag;\n  });\n  // return objList.filter((product) =>\n  //   product.position.position_title.includes(text)\n  // );\n};\n\ntype FormPlacementListProps = {\n  setChooseClaimFile: (value: boolean) => void;\n  setClaimFileId: (value: string) => void;\n  setViewThisFile: (value: string) => void;\n  claimFileId: string;\n  viewThisFile: string;\n  myPlacement: candidatePlacementInterface | null;\n  myClaims: CandidateClaimInterface[];\n  activeSession: ApplicationSession;\n\n  // REDUX //////////////////////\n};\n\nconst FormPlacementList: React.FC<FormPlacementListProps> = (props) => {\n  const [searchInput, setSearchInput] = useState<string>(\"\");\n\n  return (\n    <section>\n      {/* SEARCH PART */}\n      <div className=\"flex items-center w-full my-1\">\n        <MdSearch className=\"w-6 h-6 absolute ml-2\" />\n        <input\n          type=\"text\"\n          placeholder=\"Search\"\n          className=\"focus:border-2 h-7 ml-1 pl-9 mr-2 bg-gray-100 focus:border-gray-700 w-full rounded\"\n          onChange={(e) => setSearchInput(e.target.value)}\n          value={searchInput}\n          disabled={\n            props.myPlacement === null ||\n            isClaimAllowed(\n              props.myClaims,\n              props.activeSession.session_plan_id,\n              props.myPlacement.placed._id\n            )\n              ? false\n              : true\n          }\n        />\n        <button\n          className=\"bg-red-200 text-red-700 py-1 px-2 mr-1 rounded text-sm focus:outline-none\"\n          type=\"button\"\n          onClick={() => {\n            props.setChooseClaimFile(false);\n            props.setViewThisFile(\"\");\n          }}\n        >\n          Close\n        </button>\n      </div>\n      {/* END SEARCH PART ///////////////// */}{\" \"}\n      {/* searchData(props.candidateAnswers, searchInput) */}\n      <div className=\"w-full h-52 mt-2 overflow-y-auto divide-y divide-gray-300\">\n        {props.myPlacement ? (\n          isClaimAllowed(\n            props.myClaims,\n            props.activeSession.session_plan_id,\n            props.myPlacement.placed._id\n          ) && (\n            <div className=\"group flex items-center justify-between my-1 hover:bg-gray-100\">\n              <div\n                className=\"p-1 w-full mr-2 cursor-pointer\"\n                onClick={() => {\n                  props.setChooseClaimFile(false);\n                  props.setClaimFileId(props.myPlacement!.placed._id);\n                }}\n              >\n                <p className=\"text-base font-medium text-black\">\n                  Placed on {props.myPlacement.placed.school.school_name}\n                </p>\n              </div>\n              <button\n                type=\"button\"\n                className=\"bg-blue-200 hover:bg-blue-300 text-blue-700 group-hover:text-blue-800 py-1 px-2 mr-1 rounded text-sm\"\n                onClick={() => {\n                  props.setViewThisFile(props.myPlacement!.placed._id);\n                }}\n              >\n                View\n              </button>\n            </div>\n          )\n        ) : (\n          <div className=\"text-center p-3\">\n            <p className=\"text-base font-medium text-black\">\n              No placement to claim on!\n            </p>\n          </div>\n        )}\n      </div>\n    </section>\n  );\n};\n\n// const mapStateToProps = ({\n//   course,\n// }: StoreState): {\n//   courses: course[] | null;\n// } => {\n//   return {\n//     courses: course.courses,\n//   };\n// };\nexport default React.memo(connect(null, {})(FormPlacementList));\n","import axios from \"axios\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Auth, loadCourses, PushPopupAlert } from \"../../../actions\";\nimport {\n  createClaim,\n  DocumentClaimUser,\n  GetClaimingTypes,\n  getClaimReasons,\n  getMyAnswers,\n  getMyClaims,\n  getMyPlacement,\n  getMyRejectedApplications,\n  getMyRejectedDocuments,\n} from \"../../../actions/claiming\";\nimport {\n  getDocumentCategory,\n  getDocumentSubCategory,\n  getDocumentFields,\n} from \"../../../actions/document\";\nimport { PopupAlertData } from \"../../../components/Alert/Popup\";\nimport Modal, { ModalSize, Themes } from \"../../../components/Modal/Modal\";\nimport {\n  CandidateClaimInterface,\n  claimApplicationsInterface,\n  ClaimExamResultsDetails,\n  claimReasonInterface,\n  course,\n  PlansInterface,\n  PlansTypeKeys,\n  SessionPlanInterface,\n} from \"../../../interfaces\";\nimport { candidatePlacementInterface } from \"../../../interfaces/placement\";\nimport { PopupAlertTheme } from \"../../../interfaces/popupAlert\";\nimport { StoreState } from \"../../../reducers\";\nimport { ClaimingReducerType } from \"../../../reducers/claiming\";\nimport { DocumentReducerInterface } from \"../../../reducers/document\";\nimport {\n  capitalizeFirstLetter,\n  isEmptyOrSpaces,\n} from \"../../../shared/dataTest\";\nimport { UserInterface } from \"../../../shared/interfaces\";\nimport { API } from \"../../../utils/api\";\nimport { setAxiosToken } from \"../../../utils/AxiosToken\";\nimport { errorToText } from \"../../../utils/errors\";\nimport { isPlanActive } from \"../../SessionSettings/ApplicationSession/SessionDetails\";\nimport ApplicationFormView from \"./ApplicationFormView\";\nimport ChooseReason from \"./ChooseReason\";\nimport DocFormView from \"./DocFormView\";\nimport ExaminationFormView from \"./ExaminationFormView\";\nimport FormApplicationList from \"./FormApplicationList\";\nimport FormDocumentList from \"./FormDocumentList\";\nimport FormExamList, {\n  getCourseById,\n  getCourseIdBySheetId,\n} from \"./FormExamList\";\nimport FormPlacementList from \"./FormPlacementList\";\n\nexport const ClaimGetDocTitle = (\n  documentCategories: DocumentReducerInterface,\n  doc: DocumentClaimUser\n): { category: string; sub_category: string; field: string; main: string } => {\n  let DocCategory: string = \"\",\n    DocSubCategory: string = \"\",\n    DocField: string = \"\",\n    DocTitle: string = \"\";\n  if (\n    doc.sub_category_id.length > 0 &&\n    documentCategories.documentSubCategory\n  ) {\n    DocTitle = documentCategories.documentSubCategory.filter(\n      (c) => c.user_detail_subcategory_id === doc.sub_category_id\n    )[0].title;\n    DocSubCategory = DocTitle;\n  } else if (\n    doc.category_id.length > 0 &&\n    documentCategories.documentCategory\n  ) {\n    DocTitle = documentCategories.documentCategory.filter(\n      (c) => c.user_detail_category_id === doc.category_id\n    )[0].title;\n    DocCategory = DocTitle;\n  }\n  if (\n    doc.category_subcategory_data &&\n    doc.category_subcategory_data.category_subcategory_Data_id.length > 0 &&\n    documentCategories.documentFields\n  ) {\n    console.log({ doc });\n    DocField = documentCategories.documentFields.filter(\n      (c) =>\n        c._id === doc.category_subcategory_data?.category_subcategory_Data_id\n    )[0].title;\n    DocTitle += \" in \" + DocField;\n  }\n\n  return {\n    category: DocCategory,\n    sub_category: DocSubCategory,\n    field: DocField,\n    main: DocTitle,\n  };\n};\n\nexport const isClaimAllowed = (\n  allClaim: CandidateClaimInterface[],\n  period_id: string,\n  claimOnId: string\n): boolean => {\n  if (\n    allClaim.find(\n      (item) =>\n        item.period_id === period_id && item.claiming_on_id === claimOnId\n    )\n  ) {\n    return false;\n  }\n  return true;\n};\n\ntype ClaimFormProps = {\n  // REQUIRED PROPS\n  formState: boolean;\n  setFormState: (value: boolean, response?: boolean) => void;\n  auth: Auth;\n  claiming: ClaimingReducerType;\n  documentReducer: DocumentReducerInterface;\n  courses: course[] | null;\n  loadCourses: Function;\n  getMyAnswers: Function;\n  getMyPlacement: Function;\n  getClaimReasons: Function;\n  createClaim: Function;\n  GetClaimingTypes: Function;\n  getDocumentCategory: Function;\n  getDocumentSubCategory: Function;\n  getDocumentFields: Function;\n  getMyRejectedApplications: Function;\n  getMyRejectedDocuments: Function;\n  getMyClaims: Function;\n  PushPopupAlert: (alert: PopupAlertData) => void;\n};\n\ntype ClaimFormState = {\n  loading: boolean;\n  loadingForm: boolean;\n  formError: {\n    element: string;\n    msg: string;\n  } | null;\n  thisClaimType: PlansTypeKeys | null;\n  thisClaimTypeId: string;\n  claimComment: string;\n  claimFileId: string;\n  chooseClaimFile: boolean;\n  chooseClaimReason: boolean;\n  claimReason: claimReasonInterface | null;\n  myPlacement: candidatePlacementInterface | null;\n  viewThisFile: string;\n  formType: \"DEFAULT\" | \"PROPS\";\n  alertError: string | null;\n};\n\nclass ClaimForm extends Component<ClaimFormProps, ClaimFormState> {\n  constructor(props: ClaimFormProps) {\n    super(props);\n\n    this.state = {\n      loading: false,\n      loadingForm: false,\n      formError: null,\n      thisClaimType: null,\n      thisClaimTypeId: \"\",\n      claimComment: \"\",\n      claimFileId: \"\",\n      chooseClaimFile: false,\n      viewThisFile: \"\",\n      formType: \"DEFAULT\",\n      alertError: null,\n      myPlacement: this.props.claiming.myPlacement,\n      chooseClaimReason: false,\n      claimReason: null,\n    };\n  }\n\n  setLoading = (state: boolean) => {\n    this.setState({ loading: state });\n  };\n\n  setLoadingForm = (state: boolean) => {\n    this.setState({ loadingForm: state });\n  };\n\n  setFormError = (\n    data: {\n      element: string;\n      msg: string;\n    } | null\n  ) => {\n    this.setState({ formError: data });\n  };\n\n  setAlertError = (data: string | null) => {\n    this.setState({ alertError: data });\n  };\n\n  setClaimFileId = (data: string) => {\n    this.setState({ claimFileId: data });\n  };\n\n  setViewThisFile = (data: string) => {\n    this.setState({ viewThisFile: data });\n  };\n\n  setChooseClaimFile = (data: boolean) => {\n    this.setState({ chooseClaimFile: data });\n  };\n\n  setChooseClaimReason = (data: boolean) => {\n    this.setState({ chooseClaimReason: data });\n  };\n\n  setClaimReason = (value: claimReasonInterface | null) => {\n    this.setState({ claimReason: value });\n  };\n\n  setClaimComment = (data: string) => {\n    this.setState({ claimComment: data });\n  };\n\n  isClaimTypeOpen = (\n    thisSession: SessionPlanInterface,\n    thisType: PlansTypeKeys\n  ): boolean => {\n    let data: PlansInterface | undefined;\n    if (thisType === PlansTypeKeys.APPLICATION) {\n      data = thisSession.plans.find(\n        (item) => item.type_key === PlansTypeKeys.APPLICATION\n      );\n      if (data && isPlanActive(thisSession, data) === \"OPEN\") {\n        return true;\n      }\n    } else if (thisType === PlansTypeKeys.DOCUMENT_VALIDATION) {\n      data = thisSession.plans.find(\n        (item) => item.type_key === PlansTypeKeys.DOCUMENT_VALIDATION\n      );\n      if (data && isPlanActive(thisSession, data) === \"OPEN\") {\n        return true;\n      }\n    } else if (thisType === PlansTypeKeys.PLACEMENT_TRANSFER) {\n      data = thisSession.plans.find(\n        (item) => item.type_key === PlansTypeKeys.PLACEMENT_TRANSFER\n      );\n      if (data && isPlanActive(thisSession, data) === \"OPEN\") {\n        return true;\n      }\n    }\n    return false;\n  };\n\n  displayClaimType = (claimType: PlansTypeKeys): string => {\n    let result: string = \"\";\n    switch (claimType) {\n      case PlansTypeKeys.APPLICATION:\n        result = \"application\";\n        break;\n      case PlansTypeKeys.DOCUMENT_VALIDATION:\n        result = \"document\";\n        break;\n      case PlansTypeKeys.EXAMINATION:\n        result = \"exam\";\n        break;\n      case PlansTypeKeys.MARKS_PUBLICATION:\n        result = \"marks publication\";\n        break;\n      case PlansTypeKeys.PLACEMENT_TRANSFER:\n        result = \"placement\";\n        break;\n      default:\n        result = \"\";\n        break;\n    }\n\n    return result;\n  };\n\n  loadExamAnswers = (\n    activeSessionPlan: SessionPlanInterface,\n    user_id: string\n  ) => {\n    this.props.getMyAnswers(\n      activeSessionPlan.session_plan_id,\n      user_id,\n      (status: boolean, msg: string, data: ClaimExamResultsDetails[]) => {\n        this.setLoading(status);\n        if (!status && msg.length) {\n          this.props.PushPopupAlert({\n            title: msg,\n            theme: PopupAlertTheme.danger,\n          });\n        }\n        if (data) {\n          console.log(\"====================================\");\n          console.log({ loadExamAnswers: data });\n          console.log(\"====================================\");\n        }\n      }\n    );\n  };\n\n  componentDidMount = () => {\n    if (this.props.auth.application_session === null) {\n      this.props.PushPopupAlert({\n        title: \"No session active session\",\n        theme: PopupAlertTheme.danger,\n      });\n      this.props.setFormState(false);\n      this.setState({\n        claimFileId: \"\",\n        thisClaimType: null,\n        thisClaimTypeId: \"\",\n        claimComment: \"\",\n        chooseClaimFile: false,\n        formType: \"DEFAULT\",\n        viewThisFile: \"\",\n        formError: null,\n      });\n    } else {\n      if (this.props.documentReducer.documentCategory === null) {\n        this.props.getDocumentCategory();\n      }\n      if (this.props.documentReducer.documentSubCategory === null) {\n        this.props.getDocumentSubCategory();\n      }\n      if (this.props.documentReducer.documentFields === null) {\n        this.props.getDocumentFields();\n      }\n      if (this.props.claiming.claimReasons === null) {\n        this.props.getClaimReasons((status: boolean, msg: string) => {\n          this.setLoading(status);\n          if (!status) {\n            if (msg.length > 0) {\n              this.props.PushPopupAlert({\n                title: msg,\n                theme: PopupAlertTheme.danger,\n              });\n            }\n          }\n        });\n      }\n    }\n  };\n\n  getDocumentById = (\n    documents: DocumentClaimUser[],\n    doc_id: string\n  ): DocumentClaimUser => {\n    return documents.filter((item) => item.doc_id === doc_id)[0];\n  };\n\n  getApplicationById = (\n    applications: claimApplicationsInterface[],\n    application_id: string\n  ): claimApplicationsInterface => {\n    return applications.filter(\n      (item) => item.application_id === application_id\n    )[0];\n  };\n\n  getExamById = (\n    exams: ClaimExamResultsDetails[],\n    answer_sheet_id: string\n  ): ClaimExamResultsDetails | undefined => {\n    return exams.find((item) => item.answer_sheet_id === answer_sheet_id);\n  };\n\n  getValidation = (\n    thisId: string\n  ): {\n    old_reason: string;\n    old_status: string;\n    old_evaluated_by: string;\n  } => {\n    let result: {\n      old_reason: string;\n      old_status: string;\n      old_evaluated_by: string;\n    } = { old_reason: \"\", old_status: \"\", old_evaluated_by: \"\" };\n\n    if (\n      this.state.thisClaimType === PlansTypeKeys.DOCUMENT_VALIDATION &&\n      this.props.claiming.candidateDocuments\n    ) {\n      result = {\n        old_reason: this.getDocumentById(\n          this.props.claiming.candidateDocuments,\n          thisId\n        ).validated_by.comment,\n        old_status: this.getDocumentById(\n          this.props.claiming.candidateDocuments,\n          thisId\n        ).validated_by.validation_status,\n        old_evaluated_by: this.getDocumentById(\n          this.props.claiming.candidateDocuments,\n          thisId\n        ).validated_by.user_id,\n      };\n    } else if (\n      this.state.thisClaimType === PlansTypeKeys.APPLICATION &&\n      this.props.claiming.candidateApplications\n    ) {\n      result = {\n        old_reason: this.getApplicationById(\n          this.props.claiming.candidateApplications,\n          thisId\n        ).override_by.comment,\n        old_status: this.getApplicationById(\n          this.props.claiming.candidateApplications,\n          thisId\n        ).override_by.application_status,\n        old_evaluated_by: this.getApplicationById(\n          this.props.claiming.candidateApplications,\n          thisId\n        ).override_by.user_id,\n      };\n    }\n\n    return result;\n  };\n\n  cleanToClose = (response?: boolean) => {\n    this.props.setFormState(false);\n    this.setState({\n      claimFileId: \"\",\n      thisClaimType: null,\n      thisClaimTypeId: \"\",\n      claimComment: \"\",\n      chooseClaimFile: false,\n      formType: \"DEFAULT\",\n      viewThisFile: \"\",\n      formError: null,\n    });\n  };\n\n  loadUserById = async (user_id: string, callback: Function) => {\n    if (isEmptyOrSpaces(user_id)) {\n      return this.props.PushPopupAlert({\n        title: \"No user id provided\",\n        theme: PopupAlertTheme.danger,\n      });\n    }\n    try {\n      setAxiosToken();\n      const res = await axios.get<UserInterface>(\n        `${API.AUTH}/users/${user_id}`\n      );\n      console.log(\"====================================\");\n      console.log({ loadUserById: res });\n      console.log(\"====================================\");\n      if (res) {\n        callback(res.data);\n      }\n    } catch (error) {\n      console.error({ error });\n      this.props.PushPopupAlert({\n        title: errorToText(error),\n        theme: PopupAlertTheme.danger,\n      });\n    }\n  };\n\n  getClaimTitle = (claimType: PlansTypeKeys): string => {\n    let result: string = \"\";\n    if (\n      claimType === PlansTypeKeys.DOCUMENT_VALIDATION &&\n      this.props.claiming.candidateDocuments\n    ) {\n      result = ClaimGetDocTitle(\n        this.props.documentReducer,\n        this.getDocumentById(\n          this.props.claiming.candidateDocuments,\n          this.state.claimFileId\n        )\n      ).main;\n    }\n    if (\n      claimType === PlansTypeKeys.APPLICATION &&\n      this.props.claiming.candidateApplications\n    ) {\n      result = this.getApplicationById(\n        this.props.claiming.candidateApplications,\n        this.state.claimFileId\n      ).position.position_title;\n    }\n    if (\n      claimType === PlansTypeKeys.EXAMINATION &&\n      this.props.courses &&\n      this.props.claiming.myAnswer &&\n      getCourseIdBySheetId(\n        this.props.claiming.myAnswer,\n        this.state.claimFileId\n      ) &&\n      getCourseById(\n        this.props.courses,\n        getCourseIdBySheetId(\n          this.props.claiming.myAnswer,\n          this.state.claimFileId\n        )!.course\n      )\n    ) {\n      result = getCourseById(\n        this.props.courses,\n        getCourseIdBySheetId(\n          this.props.claiming.myAnswer,\n          this.state.claimFileId\n        )!.course\n      )!.course_name;\n    }\n    if (\n      claimType === PlansTypeKeys.PLACEMENT_TRANSFER &&\n      this.state.myPlacement\n    ) {\n      result = \"Placed on \" + this.state.myPlacement.placed.school.school_name;\n    }\n\n    return result;\n  };\n\n  getClaimInstitute = (claimType: PlansTypeKeys): string => {\n    let result: string = \"\";\n    if (\n      claimType === PlansTypeKeys.APPLICATION &&\n      this.props.claiming.candidateApplications\n    ) {\n      result = this.getApplicationById(\n        this.props.claiming.candidateApplications,\n        this.state.claimFileId\n      ).position.education_institute_id.education_institute_id;\n    }\n\n    return result;\n  };\n\n  handleSubmit = async (e: React.FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n    if (!this.state.thisClaimType) {\n      return this.setFormError({\n        element: \"claim_type\",\n        msg: \"Claim type is required!\",\n      });\n    }\n    if (isEmptyOrSpaces(this.state.claimFileId)) {\n      return this.setFormError({\n        element: \"claim_file\",\n        msg: `Please select ${this.state.thisClaimType.toLocaleLowerCase()} you are claiming on!`,\n      });\n    }\n\n    if (!this.state.claimReason) {\n      return this.setFormError({\n        element: \"claim_reason\",\n        msg: `Please select the reason of your claim!`,\n      });\n    }\n\n    if (isEmptyOrSpaces(this.state.claimComment)) {\n      return this.setFormError({\n        element: \"claim_comment\",\n        msg: `Claim comment is required!`,\n      });\n    }\n\n    if (!this.props.auth.application_session) {\n      return this.setAlertError(`No active claiming session is available!`);\n    }\n\n    this.setLoadingForm(true);\n    let old_evaluator_email: string = \"info@system.com\";\n    let old_evaluator_name: string = \"System\";\n    let evaluator_email: string = \"\";\n    let evaluator_name: string = \"\";\n    let title: string = this.getClaimTitle(this.state.thisClaimType);\n    let institute_id: string = this.getClaimInstitute(this.state.thisClaimType);\n\n    if (\n      this.state.thisClaimType !== PlansTypeKeys.EXAMINATION &&\n      this.getValidation(this.state.claimFileId).old_evaluated_by !== \"system\"\n    ) {\n      await this.loadUserById(\n        this.getValidation(this.state.claimFileId).old_evaluated_by,\n        (data: UserInterface) => {\n          old_evaluator_email = data.email;\n          old_evaluator_name =\n            data.user_info.fname + \" \" + data.user_info.lname;\n        }\n      );\n    }\n\n    if (this.state.thisClaimType === PlansTypeKeys.EXAMINATION) {\n    }\n\n    try {\n      // console.log(\"====================================\");\n      // console.log({\n      //   claiming_on_id: this.state.claimFileId,\n      //   type_key: this.state.thisClaimType,\n      //   user: this.props.auth.user.user_id,\n      //   period_id: this.props.auth.application_session.session_plan_id,\n      //   default_claim_resaons: this.state.claimReason.id,\n      //   reason: this.state.claimComment,\n      //   old_reason:\n      //     this.state.thisClaimType === PlansTypeKeys.EXAMINATION ||\n      //     this.state.thisClaimType === PlansTypeKeys.PLACEMENT_TRANSFER\n      //       ? \"System\"\n      //       : this.getValidation(this.state.claimFileId).old_reason,\n      //   old_status:\n      //     this.state.thisClaimType === PlansTypeKeys.EXAMINATION ||\n      //     this.state.thisClaimType === PlansTypeKeys.PLACEMENT_TRANSFER\n      //       ? \"Failed\"\n      //       : this.getValidation(this.state.claimFileId).old_status,\n      //   old_evaluated_by:\n      //     this.state.thisClaimType === PlansTypeKeys.EXAMINATION ||\n      //     this.state.thisClaimType === PlansTypeKeys.PLACEMENT_TRANSFER\n      //       ? \"\"\n      //       : this.getValidation(this.state.claimFileId).old_evaluated_by,\n      //   old_evaluator_email,\n      //   old_evaluator_name,\n      //   evaluator_email,\n      //   evaluator_name,\n      //   title,\n      // });\n      // console.log(\"====================================\");\n\n      setAxiosToken();\n      const res = await axios.post<CandidateClaimInterface>(\n        `${API.CLAIMING}/user/create`,\n        {\n          claiming_on_id: this.state.claimFileId,\n          type_key: this.state.thisClaimType,\n          user: this.props.auth.user.user_id,\n          period_id: this.props.auth.application_session.session_plan_id,\n          default_claim_resaons: this.state.claimReason.id,\n          reason: this.state.claimComment,\n          old_reason:\n            this.state.thisClaimType === PlansTypeKeys.EXAMINATION ||\n            this.state.thisClaimType === PlansTypeKeys.PLACEMENT_TRANSFER\n              ? \"System\"\n              : this.getValidation(this.state.claimFileId).old_reason,\n          old_status:\n            this.state.thisClaimType === PlansTypeKeys.EXAMINATION ||\n            this.state.thisClaimType === PlansTypeKeys.PLACEMENT_TRANSFER\n              ? \"Failed\"\n              : this.getValidation(this.state.claimFileId).old_status,\n          old_evaluated_by:\n            this.state.thisClaimType === PlansTypeKeys.EXAMINATION ||\n            this.state.thisClaimType === PlansTypeKeys.PLACEMENT_TRANSFER\n              ? \"\"\n              : this.getValidation(this.state.claimFileId).old_evaluated_by,\n          old_evaluator_email,\n          old_evaluator_name,\n          evaluator_email,\n          evaluator_name,\n          title,\n          institute_id,\n        }\n      );\n      console.log({ createClaim: res });\n      if (res.status === 201 || res.status === 200) {\n        this.props.createClaim(res.data);\n        this.props.PushPopupAlert({\n          title: \"Claim sent successful\",\n          theme: PopupAlertTheme.success,\n        });\n        this.cleanToClose(true);\n      }\n    } catch (error) {\n      console.error({ error });\n      this.props.PushPopupAlert({\n        title: errorToText(error),\n        theme: PopupAlertTheme.danger,\n      });\n    }\n    this.setLoadingForm(false);\n  };\n\n  selectClaimType = (thisClaim: string) => {\n    this.setState({\n      thisClaimType: isEmptyOrSpaces(thisClaim)\n        ? null\n        : (thisClaim as PlansTypeKeys),\n    });\n\n    if ((thisClaim as PlansTypeKeys) === PlansTypeKeys.APPLICATION) {\n      if (this.props.claiming.candidateApplications === null) {\n        this.props.getMyRejectedApplications(\n          this.props.auth.user.user_id,\n          (\n            status: boolean,\n            msg: string,\n            data?: claimApplicationsInterface[]\n          ) => {\n            this.setLoading(status);\n            if (!status) {\n              if (msg.length > 0) {\n                this.props.PushPopupAlert({\n                  title: msg,\n                  theme: PopupAlertTheme.danger,\n                });\n              }\n            }\n          }\n        );\n      }\n      if (\n        this.props.courses === null ||\n        (this.props.courses.length === 0 && this.state.loading)\n      ) {\n        this.props.loadCourses(this.setLoading);\n        this.setLoading(false);\n      } else {\n        this.setLoading(false);\n      }\n    } else if ((thisClaim as PlansTypeKeys) === PlansTypeKeys.EXAMINATION) {\n      if (\n        this.props.courses === null ||\n        (this.props.courses.length === 0 && this.state.loading)\n      ) {\n        this.props.loadCourses(this.setLoading);\n        this.setLoading(false);\n      } else {\n        this.setLoading(false);\n      }\n    } else if (\n      (thisClaim as PlansTypeKeys) === PlansTypeKeys.DOCUMENT_VALIDATION\n    ) {\n      if (this.props.claiming.candidateDocuments === null) {\n        this.props.getMyRejectedDocuments(\n          (status: boolean, msg: string, data?: DocumentClaimUser[]) => {\n            this.setLoading(status);\n            if (!status) {\n              if (msg.length > 0) {\n                this.props.PushPopupAlert({\n                  title: msg,\n                  theme: PopupAlertTheme.danger,\n                });\n              }\n            }\n          }\n        );\n      }\n    } else if (\n      (thisClaim as PlansTypeKeys) === PlansTypeKeys.PLACEMENT_TRANSFER\n    ) {\n      if (this.props.claiming.myPlacement === null) {\n        this.props.getMyPlacement(\n          this.props.auth.user.user_id,\n          (\n            status: boolean,\n            msg: string,\n            data?: candidatePlacementInterface | null\n          ) => {\n            this.setLoading(status);\n            if (!status) {\n              if (msg.length > 0) {\n                this.props.PushPopupAlert({\n                  title: msg,\n                  theme: PopupAlertTheme.danger,\n                });\n              }\n            }\n            if (data) {\n              this.setState({ myPlacement: data });\n            }\n          }\n        );\n      }\n    }\n  };\n\n  generateChooseFileTitle = (thisClaimType: PlansTypeKeys | null): string => {\n    let result: string = \"\";\n\n    switch (thisClaimType) {\n      case PlansTypeKeys.APPLICATION:\n        result = `Select application you are claiming on?`;\n        break;\n      case PlansTypeKeys.DOCUMENT_VALIDATION:\n        result = `Select document you are claiming on?`;\n        break;\n      case PlansTypeKeys.EXAMINATION:\n        result = `Select exam you are claiming on?`;\n        break;\n      case PlansTypeKeys.MARKS_PUBLICATION:\n        result = `Select marks publication you are claiming on?`;\n        break;\n      case PlansTypeKeys.PLACEMENT_TRANSFER:\n        result = `Select placement you are claiming on?`;\n        break;\n      default:\n        result = \"Select file you are claiming on?\";\n        break;\n    }\n\n    return result;\n  };\n\n  render() {\n    if (\n      this.props.auth.application_session === null ||\n      this.props.claiming.myClaims === null\n    ) {\n      return null;\n    }\n\n    return (\n      <div className=\"pb-3\">\n        {this.props.formState && (\n          <Modal\n            backDrop={true}\n            theme={Themes.default}\n            close={(): void => {\n              !this.state.loadingForm &&\n                this.state.viewThisFile.length <= 0 &&\n                this.cleanToClose();\n              !this.state.loadingForm &&\n                this.state.viewThisFile.length > 0 &&\n                this.setViewThisFile(\"\");\n            }}\n            displayClose={true}\n            backDropClose={false}\n            title={\n              <div className=\"text-gray-900 font-bold text-xl md:ml-1\">\n                {this.state.viewThisFile.length <= 0 && \"Claiming form\"}\n                {this.state.viewThisFile.length > 0 &&\n                  this.state.thisClaimType ===\n                    PlansTypeKeys.DOCUMENT_VALIDATION &&\n                  \"Viewing document\"}\n                {this.state.viewThisFile.length > 0 &&\n                  this.state.thisClaimType === PlansTypeKeys.APPLICATION &&\n                  \"Viewing application\"}\n              </div>\n            }\n            widthSizeClass={\n              this.state.viewThisFile.length > 0\n                ? ModalSize.extraLarge\n                : ModalSize.medium\n            }\n            padding={{ title: true, body: false, footer: false }}\n          >\n            {/* CLAIM FORM ============================================== */}\n            {this.state.viewThisFile.length <= 0 && (\n              <form onSubmit={(e) => this.handleSubmit(e)}>\n                <div className=\"px-6 pb-3\">\n                  {this.state.alertError && (\n                    <div\n                      className=\"alert-warning cursor-pointer\"\n                      onClick={() => this.setAlertError(null)}\n                    >\n                      {this.state.alertError}\n                    </div>\n                  )}\n                  <div className=\"text-base text-gray-700 sm:text-lg\">\n                    {/* SELECT CLAIM TYPE ============================================== */}\n                    <div className=\"flex flex-col mb-2\">\n                      <label>Claim type</label>\n                      <select\n                        className={`rounded px-2 py-2 w-full bg-white focus:outline-none ${\n                          this.state.formType === \"PROPS\" &&\n                          \"cursor-not-allowed\"\n                        } ${\n                          this.state.formError &&\n                          this.state.formError.element === \"claim_type\"\n                            ? \"border-red-500\"\n                            : \"border-gray-500\"\n                        } border-2`}\n                        onChange={(e: React.ChangeEvent<HTMLSelectElement>) => {\n                          this.selectClaimType(e.target.value);\n                          this.setClaimFileId(\"\");\n                          this.state.formError &&\n                            this.state.formError.element === \"claim_type\" &&\n                            this.setFormError(null);\n                        }}\n                        value={\n                          this.state.thisClaimType\n                            ? this.state.thisClaimType\n                            : \"\"\n                        }\n                        disabled={\n                          this.state.loadingForm ||\n                          this.state.formType === \"PROPS\"\n                        }\n                      >\n                        <option value=\"\">Choose claim type</option>\n                        {Object.values(PlansTypeKeys).map((item, index) => (\n                          <option\n                            value={item}\n                            key={index + item}\n                            className={`${\n                              item === PlansTypeKeys.MARKS_PUBLICATION ||\n                              item === PlansTypeKeys.PLACEMENT_TRANSFER\n                                ? \"hidden\"\n                                : \"block\"\n                            }`}\n                          >\n                            {capitalizeFirstLetter(\n                              item.toLocaleLowerCase().replace(/_/g, \" \")\n                            )}\n                          </option>\n                        ))}\n                      </select>\n                      {this.state.formError &&\n                        this.state.formError.element === \"claim_type\" && (\n                          <span className=\"text-red-500\">\n                            {this.state.formError.msg}\n                          </span>\n                        )}\n                    </div>\n                    {/* END SELECT CLAIM TYPE ============================================== */}\n\n                    {/* SELECT FILE TO CLAIM ON ============================================== */}\n                    <div className=\"flex flex-col mb-2\">\n                      <label>\n                        {this.generateChooseFileTitle(this.state.thisClaimType)}\n                      </label>\n                      <div\n                        className={`text-left bg-white border-2 ${\n                          this.state.formType !== \"PROPS\"\n                            ? \"border-gray-700\"\n                            : \"border-gray-400 text-gray-500\"\n                        } rounded w-full ${\n                          this.state.chooseClaimFile ? \"h-64\" : \"h-10\"\n                        } ${\n                          this.state.formError &&\n                          this.state.formError.element === \"claim_file\"\n                            ? \"border-red-500\"\n                            : \"\"\n                        } border-2 ${\n                          this.state.loading\n                            ? \"cursor-waiting\"\n                            : this.state.thisClaimType &&\n                              !this.state.chooseClaimFile &&\n                              this.state.formType !== \"PROPS\"\n                            ? \"cursor-pointer\"\n                            : !this.state.chooseClaimFile &&\n                              \"cursor-not-allowed\"\n                        }`}\n                        title={\n                          !this.state.thisClaimType\n                            ? \"Choose claim type first!\"\n                            : \"\"\n                        }\n                        onClick={() => {\n                          !this.state.loading &&\n                            this.state.formType === \"DEFAULT\" &&\n                            this.state.thisClaimType &&\n                            !this.state.chooseClaimFile &&\n                            this.setChooseClaimFile(true);\n                          !this.state.loading &&\n                            this.state.formError &&\n                            this.state.formError.element === \"claim_file\" &&\n                            this.setFormError(null);\n                        }}\n                      >\n                        {/* DISPLAYING FILTERED SELECTING FILE ============================ */}\n                        {this.state.claimFileId.length > 0 &&\n                        this.state.thisClaimType &&\n                        !this.state.chooseClaimFile ? (\n                          <p className=\"my-1 mx-2\">\n                            {this.getClaimTitle(this.state.thisClaimType)}\n                          </p>\n                        ) : (\n                          !this.state.chooseClaimFile && (\n                            <p className=\"my-1 mx-2\">\n                              Select Claim{\" \"}\n                              {this.state.thisClaimType &&\n                                this.state.thisClaimType\n                                  .toLocaleLowerCase()\n                                  .replace(/_/g, \" \")}\n                            </p>\n                          )\n                        )}\n                        {/* END DISPLAYING FILTERED SELECTING FILE ============================ */}\n\n                        {/* LISTING OF REJECTED DOCUMENTS ============================ */}\n                        {this.state.chooseClaimFile &&\n                          this.state.thisClaimType ===\n                            PlansTypeKeys.DOCUMENT_VALIDATION &&\n                          this.props.claiming.candidateDocuments &&\n                          this.props.claiming.myClaims &&\n                          this.props.auth.application_session && (\n                            <FormDocumentList\n                              setChooseClaimFile={this.setChooseClaimFile}\n                              setClaimFileId={this.setClaimFileId}\n                              setViewThisFile={this.setViewThisFile}\n                              claimFileId={this.state.claimFileId}\n                              viewThisFile={this.state.viewThisFile}\n                              candidateDocuments={\n                                this.props.claiming.candidateDocuments\n                              }\n                              documentCategories={this.props.documentReducer}\n                              myClaims={this.props.claiming.myClaims}\n                              activeSession={\n                                this.props.auth.application_session\n                              }\n                            />\n                          )}\n                        {/* END LISTING OF REJECTED DOCUMENTS ============================ */}\n                        {/* ---------------------------------------------------------- */}\n                        {/* LISTING OF REJECTED APPLICATION ============================ */}\n                        {this.state.chooseClaimFile &&\n                          this.state.thisClaimType ===\n                            PlansTypeKeys.APPLICATION &&\n                          this.props.claiming.candidateApplications &&\n                          this.props.claiming.myClaims &&\n                          this.props.auth.application_session && (\n                            <FormApplicationList\n                              setChooseClaimFile={this.setChooseClaimFile}\n                              setClaimFileId={this.setClaimFileId}\n                              setViewThisFile={this.setViewThisFile}\n                              claimFileId={this.state.claimFileId}\n                              viewThisFile={this.state.viewThisFile}\n                              candidateApplications={\n                                this.props.claiming.candidateApplications\n                              }\n                              myClaims={this.props.claiming.myClaims}\n                              activeSession={\n                                this.props.auth.application_session\n                              }\n                            />\n                          )}\n                        {/* END LISTING OF REJECTED APPLICATION ============================ */}\n                        {/* ---------------------------------------------------------- */}\n                        {/* LISTING OF FAILED EXAM ============================ */}\n                        {this.state.chooseClaimFile &&\n                          this.state.thisClaimType ===\n                            PlansTypeKeys.EXAMINATION &&\n                          this.props.claiming.myAnswer &&\n                          this.props.claiming.myClaims &&\n                          this.props.auth.application_session && (\n                            <FormExamList\n                              setChooseClaimFile={this.setChooseClaimFile}\n                              setClaimFileId={this.setClaimFileId}\n                              setViewThisFile={this.setViewThisFile}\n                              claimFileId={this.state.claimFileId}\n                              viewThisFile={this.state.viewThisFile}\n                              candidateAnswers={this.props.claiming.myAnswer}\n                              myClaims={this.props.claiming.myClaims}\n                              activeSession={\n                                this.props.auth.application_session\n                              }\n                            />\n                          )}\n                        {/* END LISTING OF FAILED EXAM ============================ */}\n                        {/* ---------------------------------------------------------- */}\n                        {/* PENDING PLACEMENT ============================ */}\n                        {this.state.chooseClaimFile &&\n                          this.state.thisClaimType ===\n                            PlansTypeKeys.PLACEMENT_TRANSFER &&\n                          this.props.claiming.myClaims &&\n                          this.props.auth.application_session && (\n                            <FormPlacementList\n                              setChooseClaimFile={this.setChooseClaimFile}\n                              setClaimFileId={this.setClaimFileId}\n                              setViewThisFile={this.setViewThisFile}\n                              claimFileId={this.state.claimFileId}\n                              viewThisFile={this.state.viewThisFile}\n                              myClaims={this.props.claiming.myClaims}\n                              activeSession={\n                                this.props.auth.application_session\n                              }\n                              myPlacement={this.state.myPlacement}\n                            />\n                          )}\n                        {/* END LISTING OF FAILED Placement ============================ */}\n                      </div>\n                      {this.state.formError &&\n                        this.state.formError.element === \"claim_file\" && (\n                          <span className=\"text-red-500\">\n                            {this.state.formError.msg}\n                          </span>\n                        )}\n                    </div>\n                    {/* END SELECT FILE TO CLAIM ON ============================================== */}\n\n                    {/* CLAIM REASONS ========================================== */}\n                    <div className=\"flex flex-col mb-2\">\n                      <label>Choose reason of your claim</label>\n                      <div\n                        className={`text-left bg-white border-2 border-gray-700 rounded w-full ${\n                          this.state.chooseClaimReason ? \"h-64\" : \"h-auto\"\n                        } ${\n                          this.state.formError &&\n                          this.state.formError.element === \"claim_reason\"\n                            ? \"border-red-500\"\n                            : \"\"\n                        } border-2 ${\n                          this.props.claiming.claimReasons === null\n                            ? \"cursor-wait\"\n                            : \"cursor-pointer\"\n                        }`}\n                        title=\"Choose the reason for your claim!\"\n                        onClick={() => {\n                          !this.state.chooseClaimReason &&\n                            this.setState({ chooseClaimReason: true });\n                          this.state.formError &&\n                            this.state.formError.element === \"claim_reason\" &&\n                            this.setFormError(null);\n                        }}\n                      >\n                        {/* DISPLAYING SELECTED REASON ============================ */}\n                        {this.state.claimReason &&\n                        !this.state.chooseClaimReason ? (\n                          <p className=\"my-1 mx-2\">\n                            {this.state.claimReason.reason}\n                          </p>\n                        ) : (\n                          !this.state.chooseClaimReason && (\n                            <p className=\"my-1 mx-2\">Select reason</p>\n                          )\n                        )}\n                        {/* END DISPLAYING SELECTED REASON ============================ */}\n\n                        {/* LISTING OF CLAIM REASONS ============================ */}\n                        {this.state.chooseClaimReason &&\n                          this.props.claiming.claimReasons && (\n                            <ChooseReason\n                              setChooseClaimReason={this.setChooseClaimReason}\n                              setClaimReason={this.setClaimReason}\n                              claimReason={this.state.claimReason}\n                              allClaimReasons={this.props.claiming.claimReasons}\n                            />\n                          )}\n                        {/* END LISTING OF CLAIM REASONS ============================ */}\n                      </div>\n                      {this.state.formError &&\n                        this.state.formError.element === \"claim_reason\" && (\n                          <span className=\"text-red-500\">\n                            {this.state.formError.msg}\n                          </span>\n                        )}\n                    </div>\n                    {/* END CLAIM REASONS ========================================== */}\n\n                    {/* CLAIM COMMENT ============================================== */}\n                    <div className=\"flex flex-col\">\n                      <label>Comment</label>\n                      <textarea\n                        className={`text-left input-white w-20 inline-block ${\n                          this.state.formError &&\n                          this.state.formError.element === \"claim_comment\"\n                            ? \"border-red-500\"\n                            : \"border-gray-500\"\n                        } border-2`}\n                        placeholder={`Claim comment`}\n                        style={{ resize: \"none\" }}\n                        value={this.state.claimComment}\n                        onChange={(e) => {\n                          this.setClaimComment(e.target.value);\n                          this.state.formError &&\n                            this.state.formError.element === \"claim_comment\" &&\n                            this.setFormError(null);\n                        }}\n                        rows={3}\n                        disabled={this.state.loadingForm}\n                      ></textarea>\n                      {this.state.formError &&\n                        this.state.formError.element === \"claim_comment\" && (\n                          <span className=\"text-red-500\">\n                            {this.state.formError.msg}\n                          </span>\n                        )}\n                    </div>\n                    {/* END CLAIM COMMENT ============================================== */}\n                  </div>\n\n                  <div className=\"pt-3 flex justify-between\">\n                    <button\n                      onClick={() => this.cleanToClose()}\n                      className={`btn bg-gray-400 text-white hover:bg-gray-600 focus:outline-none ${\n                        this.state.loadingForm && \"cursor-not-allowed\"\n                      }`}\n                      type=\"button\"\n                      disabled={this.state.loadingForm || this.state.loading}\n                    >\n                      Exit\n                    </button>\n                    <button\n                      className={`btn bg-primary text-white hover:bg-blue-600 focus:outline-none ${\n                        this.state.loadingForm && \"cursor-wait\"\n                      }`}\n                      type=\"submit\"\n                      disabled={this.state.loadingForm || this.state.loading}\n                    >\n                      {this.state.loadingForm ? \"Loading...\" : \"Claim\"}\n                    </button>\n                  </div>\n                </div>\n              </form>\n            )}\n            {/* END CLAIM FORM ============================================== */}\n\n            {/* CLAIM DOCUMENT VIEW ============================================== */}\n            {this.state.viewThisFile.length > 0 &&\n              this.props.claiming.candidateDocuments &&\n              this.state.thisClaimType ===\n                PlansTypeKeys.DOCUMENT_VALIDATION && (\n                <DocFormView\n                  thisDoc={this.getDocumentById(\n                    this.props.claiming.candidateDocuments,\n                    this.state.viewThisFile\n                  )}\n                  setViewThisFile={this.setViewThisFile}\n                  documentCategories={this.props.documentReducer}\n                  setChooseClaimFile={this.setChooseClaimFile}\n                  setClaimFileId={this.setClaimFileId}\n                />\n              )}\n            {/* END CLAIM DOCUMENT VIEW ============================================== */}\n            {/* ------------------------------------------------------------------------- */}\n            {/* CLAIM APPLICATION VIEW ============================================== */}\n            {this.state.viewThisFile.length > 0 &&\n              this.props.claiming.candidateApplications &&\n              this.state.thisClaimType === PlansTypeKeys.APPLICATION && (\n                <ApplicationFormView\n                  thisApplication={this.getApplicationById(\n                    this.props.claiming.candidateApplications,\n                    this.state.viewThisFile\n                  )}\n                  documentCategories={this.props.documentReducer}\n                  setChooseClaimFile={this.setChooseClaimFile}\n                  setClaimFileId={this.setClaimFileId}\n                  setViewThisFile={this.setViewThisFile}\n                />\n              )}\n            {/* END CLAIM APPLICATION VIEW ============================================== */}\n            {/* ------------------------------------------------------------------------- */}\n            {/* CLAIM EXAMINATION VIEW ============================================== */}\n            {this.state.viewThisFile.length > 0 &&\n              this.props.claiming.myAnswer &&\n              this.state.thisClaimType === PlansTypeKeys.EXAMINATION &&\n              this.getExamById(\n                this.props.claiming.myAnswer,\n                this.state.viewThisFile\n              ) && (\n                <ExaminationFormView\n                  thisAnswerSheet={\n                    this.getExamById(\n                      this.props.claiming.myAnswer,\n                      this.state.viewThisFile\n                    )!\n                  }\n                  setChooseClaimFile={this.setChooseClaimFile}\n                  setClaimFileId={this.setClaimFileId}\n                  setViewThisFile={this.setViewThisFile}\n                  // thisAnswerSheet={undefined}\n                  // setViewThisFile={undefined}\n                  // setChooseClaimFile={undefined}\n                  // setClaimFileId={undefined}\n                />\n              )}\n            {/* END CLAIM EXAMINATION VIEW ============================================== */}\n          </Modal>\n        )}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = ({\n  auth,\n  document,\n  claiming,\n  course,\n}: StoreState): {\n  auth: Auth;\n  documentReducer: DocumentReducerInterface;\n  claiming: ClaimingReducerType;\n  courses: course[] | null;\n} => {\n  return {\n    auth: auth,\n    documentReducer: document,\n    claiming,\n    courses: course.courses,\n  };\n};\n\nexport default React.memo(\n  connect(mapStateToProps, {\n    loadCourses,\n    getMyClaims,\n    getClaimReasons,\n    getMyAnswers,\n    getMyPlacement,\n    createClaim,\n    GetClaimingTypes,\n    getMyRejectedApplications,\n    getMyRejectedDocuments,\n    getDocumentCategory,\n    getDocumentSubCategory,\n    getDocumentFields,\n    PushPopupAlert,\n  })(ClaimForm)\n);\n","import React from \"react\";\nimport { MdTurnedIn } from \"react-icons/md\";\nimport { connect } from \"react-redux\";\nimport { PushPopupAlert } from \"../../../actions\";\nimport NoResult, {\n  NoResultThemes,\n} from \"../../../components/NoResult/NoResult\";\nimport {\n  claimApplicationsInterface,\n  claimApplicationsPositionInterface,\n} from \"../../../interfaces\";\nimport { ApplicationStates } from \"../../../interfaces/application\";\nimport { DocumentReducerInterface } from \"../../../reducers/document\";\nimport { capitalizeFirstLetter } from \"../../../shared/dataTest\";\nimport { UserInterface } from \"../../../shared/interfaces\";\nimport { DATE } from \"../../../utils/functions\";\nimport { PositionRequirementTableInterface } from \"../../Positions/ViewPosition\";\nimport ViewRequirements from \"../../Positions/ViewRequirements\";\n\nexport const FC_ApplicationPositionDistinctCategory = (\n  thisPosition: claimApplicationsPositionInterface,\n  documentCategories: DocumentReducerInterface\n): {\n  PositionsTemp: PositionRequirementTableInterface[];\n  DistinctCategoriesTemp: PositionRequirementTableInterface[];\n  DistinctSubCategoriesTemp: PositionRequirementTableInterface[];\n} => {\n  let PositionsTemp: PositionRequirementTableInterface[] = [];\n  let DistinctCategoriesTemp: PositionRequirementTableInterface[] = [],\n    DistinctCategoriesIds: string[] = [];\n  let DistinctSubCategoriesTemp: PositionRequirementTableInterface[] = [],\n    DistinctSubCategoriesIds: string[] = [];\n  // GET REQUIREMENTS OF THE CURRENT POSITION ====================\n  let requirements = thisPosition.requirements;\n  // LOOP THROUGH CURRENT POSITION REQUIREMENTS ==========================\n  for (let req in requirements) {\n    let thisRequirements = requirements[req];\n    // GET DOC CATEGORY OF THE CURRENT POSITION REQUIREMENTS ====================\n    let thisCategory = documentCategories.documentCategory\n      ? documentCategories.documentCategory.find(\n          (item) =>\n            item.user_detail_category_id ===\n            thisRequirements.category.user_detail_category_id\n        ) && {\n          title: documentCategories.documentCategory.find(\n            (item) =>\n              item.user_detail_category_id ===\n              thisRequirements.category.user_detail_category_id\n          )!.title,\n          user_detail_category_id: documentCategories.documentCategory.find(\n            (item) =>\n              item.user_detail_category_id ===\n              thisRequirements.category.user_detail_category_id\n          )!.user_detail_category_id,\n        }\n      : {\n          title: \"\",\n          user_detail_category_id:\n            thisRequirements.category.user_detail_category_id,\n        };\n    // GET DOC SUB CATEGORY OF THE CURRENT POSITION REQUIREMENTS ====================\n    let thisSubCategory = documentCategories.documentSubCategory\n      ? documentCategories.documentSubCategory.find(\n          (item) =>\n            item.user_detail_subcategory_id ===\n            thisRequirements.subcategory.user_detail_subcategory_id\n        )\n        ? {\n            title: documentCategories.documentSubCategory.find(\n              (item) =>\n                item.user_detail_subcategory_id ===\n                thisRequirements.subcategory.user_detail_subcategory_id\n            )!.title,\n            user_detail_subcategory_id:\n              documentCategories.documentSubCategory.find(\n                (item) =>\n                  item.user_detail_subcategory_id ===\n                  thisRequirements.subcategory.user_detail_subcategory_id\n              )!.user_detail_subcategory_id,\n            category_id: documentCategories.documentSubCategory.find(\n              (item) =>\n                item.user_detail_subcategory_id ===\n                thisRequirements.subcategory.user_detail_subcategory_id\n            )!.category_id,\n          }\n        : {\n            title: \"\",\n            user_detail_subcategory_id:\n              thisRequirements.subcategory.user_detail_subcategory_id,\n            category_id: \"\",\n          }\n      : {\n          title: \"\",\n          user_detail_subcategory_id:\n            thisRequirements.subcategory.user_detail_subcategory_id,\n          category_id: \"\",\n        };\n    // LOOP THROUGH FIELDS OF THE CURRENT POSITION REQUIREMENTS ==========================\n    if (thisCategory) {\n      for (let field in thisRequirements.position_requirement) {\n        // GET FIELDS OF THE CURRENT POSITION REQUIREMENTS ====================\n        let thisField = documentCategories.documentFields\n          ? documentCategories.documentFields.find(\n              (item) =>\n                item._id === thisRequirements.position_requirement[field]._id\n            )\n            ? {\n                title: documentCategories.documentFields.find(\n                  (item) =>\n                    item._id ===\n                    thisRequirements.position_requirement[field]._id\n                )!.title,\n                _id: documentCategories.documentFields.find(\n                  (item) =>\n                    item._id ===\n                    thisRequirements.position_requirement[field]._id\n                )!._id,\n                required: thisRequirements.position_requirement[field].required,\n              }\n            : {\n                title: \"\",\n                _id: thisRequirements.subcategory.user_detail_subcategory_id,\n                required: thisRequirements.position_requirement[field].required,\n              }\n          : {\n              title: \"\",\n              _id: thisRequirements.subcategory.user_detail_subcategory_id,\n              required: thisRequirements.position_requirement[field].required,\n            };\n        // ADD CURRENT CATEGORY, SUB CATEGORY & FIELDS OF THE CURRENT POSITION REQUIREMENTS IN POSITIONS TEMP ====================\n        PositionsTemp.push({\n          category_id: thisCategory.user_detail_category_id,\n          category_title: thisCategory.title,\n          subcategory_id: thisSubCategory.user_detail_subcategory_id,\n          subcategory_title: thisSubCategory.title,\n          subcategory_required: thisRequirements.required,\n          field_title: thisField.title,\n          field_id: thisField._id,\n          required: thisField.required,\n        });\n      }\n\n      // ADD CATEOGRY OF THE CURRENT POSITION REQUIREMENTS TO ARRAY ====================\n      if (\n        !DistinctCategoriesIds.includes(thisCategory.user_detail_category_id)\n      ) {\n        DistinctCategoriesIds.push(thisCategory.user_detail_category_id);\n        DistinctCategoriesTemp.push({\n          category_id: thisCategory.user_detail_category_id,\n          category_title: thisCategory.title,\n          subcategory_id: \"\",\n          subcategory_title: \"\",\n          subcategory_required: thisRequirements.required,\n          field_title: \"\",\n          field_id: \"\",\n          required: false,\n        });\n      }\n\n      // ADD SUB CATEOGRY OF THE CURRENT POSITION REQUIREMENTS TO ARRAY ====================\n      if (\n        !DistinctSubCategoriesIds.includes(\n          thisSubCategory.user_detail_subcategory_id\n        )\n      ) {\n        DistinctSubCategoriesIds.push(\n          thisSubCategory.user_detail_subcategory_id\n        );\n        DistinctSubCategoriesTemp.push({\n          category_id: thisSubCategory.category_id,\n          category_title: \"\",\n          subcategory_id: thisSubCategory.user_detail_subcategory_id,\n          subcategory_title: thisSubCategory.title,\n          subcategory_required: thisRequirements.required,\n          field_title: \"\",\n          field_id: \"\",\n          required: false,\n        });\n      }\n    }\n  }\n  // DistinctCategoriesIds.;\n\n  return { PositionsTemp, DistinctCategoriesTemp, DistinctSubCategoriesTemp };\n};\n\nexport const showEvaluator = (\n  userList: UserInterface[],\n  user_id: string\n): string => {\n  let result: string = \"\";\n  if (user_id === \"system\") {\n    result = \"System\";\n  } else {\n    // let user = getUserDocuments(userList, user_id);\n    // let user = undefined;\n    // if (user) {\n    //   result = user.user.user_info.fname + \" \" + user.user.user_info.lname;\n    // }\n  }\n  return result;\n};\n\ntype ApplicationFormViewProps = {\n  thisApplication: claimApplicationsInterface;\n  setViewThisFile: (value: string) => void;\n  setChooseClaimFile: (value: boolean) => void;\n  setClaimFileId: (value: string) => void;\n  documentCategories: DocumentReducerInterface;\n  PushPopupAlert: Function;\n};\n\nconst ApplicationFormView: React.FC<ApplicationFormViewProps> = (props) => {\n  return (\n    <section className=\"\">\n      <div className=\"w-full bg-gray-100 px-4 py-1 animate__animated animate__fadeIn\">\n        <div className=\"flex flex-col mb-2\">\n          {/* APPLICATION TITLE ========== */}\n          <section className=\"flex items-center justify-between\">\n            <span className=\"text-blue-600 font-bold text-2xl\">\n              {props.thisApplication.position.position_title}\n            </span>\n            <button\n              type=\"button\"\n              className=\"btn btn-blue\"\n              onClick={() => {\n                props.setChooseClaimFile(false);\n                props.setClaimFileId(props.thisApplication.application_id);\n                props.setViewThisFile(\"\");\n              }}\n            >\n              Choose\n            </button>\n          </section>\n          <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n            <span className={`italic`}>Date:</span>\n            <span className=\"font-bold text-gray-900 py-1\">\n              {DATE(props.thisApplication.createdAt)}\n            </span>\n          </div>\n          {false && (\n            <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n              <span className={`italic`}>Session:</span>\n              <span className=\"font-bold text-gray-900 py-1\">\n                {\n                  props.thisApplication.application_session\n                    .application_session_name\n                }\n              </span>\n            </div>\n          )}\n          <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n            <span className={`italic`}>Status:</span>\n            <span\n              className={`font-bold ${\n                props.thisApplication.application_status ===\n                ApplicationStates.Rejected\n                  ? \"text-yellow-900\"\n                  : \"text-blue-600\"\n              } py-1`}\n            >\n              {capitalizeFirstLetter(props.thisApplication.application_status)}\n            </span>\n          </div>\n          {/* <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n            <span className={`italic`}>Evaluated by:</span>\n            <span className=\"font-bold text-gray-900 py-1\">\n              {props.thisApplication.}\n            </span>\n          </div> */}\n          <div className=\"flex items-start gap-2 text-sm text-gray-600\">\n            <span className={`italic`}>Reason:</span>\n            <span\n              className=\"font-semibold text-gray-900\"\n              dangerouslySetInnerHTML={{\n                __html: props.thisApplication.override_by.comment,\n              }}\n            ></span>\n          </div>\n        </div>\n        <div className=\"bg-white w-full rounded p-2 mb-2\">\n          <div className=\"text-gray-800 text-2xl font-bold my-2\">\n            Position Details\n          </div>\n          <div className=\"flex items-center gap-2 text-base text-gray-600\">\n            <span className={`italic`}>Desc:</span>\n            <span className=\"font-semibold\">\n              {props.thisApplication.position.description}\n            </span>\n          </div>\n          <div className=\"flex items-center gap-2 text-base text-gray-600\">\n            <span className={`italic`}>School level:</span>\n            <span className=\"font-semibold\">\n              {props.thisApplication.position.school_level_id.school_level_name}\n            </span>\n          </div>\n          <div className=\"flex items-center gap-2 text-base text-gray-600\">\n            <span className={`italic`}>Institute:</span>\n            <span className=\"font-semibold\">\n              {\n                props.thisApplication.position.education_institute_id\n                  .education_category_title\n              }\n            </span>\n          </div>\n          <div className=\"flex items-center gap-2 text-base text-gray-600\">\n            <span className={`italic`}>Courses:</span>\n            <span className=\"flex items-center gap-2\">\n              {props.thisApplication.position.courses.map((item, index) => (\n                <div\n                  key={index + item.course_id}\n                  className=\"flex items-center gap-1\"\n                >\n                  <span className=\"font-semibold\">{item.course_name}</span>\n                  <span className=\"text-gray-600\">({item.course_code})</span>\n                  {index !==\n                    props.thisApplication.position.courses.length - 1 && \",\"}\n                </div>\n              ))}\n            </span>\n          </div>\n\n          <div className=\"text-gray-800 text-2xl font-bold my-2\">\n            Position Requirements\n          </div>\n          {props.thisApplication.position.requirements.length > 0 ? (\n            FC_ApplicationPositionDistinctCategory(\n              props.thisApplication.position,\n              props.documentCategories\n            ).DistinctCategoriesTemp.map((item, index) => (\n              <div\n                className=\"bg-gray-100props.thisApplication.position rounded p-2\"\n                key={index + item.category_id}\n              >\n                <div className=\"flex items-center gap-2 text-2xl text-gray-500 font-bold\">\n                  <MdTurnedIn />\n                  <span>{item.category_title}</span>\n                </div>\n                <div className=\"border bg-white mt-1\">\n                  <ViewRequirements\n                    requirements={FC_ApplicationPositionDistinctCategory(\n                      props.thisApplication.position,\n                      props.documentCategories\n                    ).PositionsTemp.filter(\n                      (req) => req.category_id === item.category_id\n                    )}\n                  />\n                </div>\n              </div>\n            ))\n          ) : (\n            <NoResult\n              theme={NoResultThemes.Dark}\n              value={\"No requirements\"}\n            ></NoResult>\n          )}\n        </div>\n      </div>\n    </section>\n  );\n};\n\nexport default React.memo(connect(null, { PushPopupAlert })(ApplicationFormView));\n","import React from \"react\";\nimport Table from \"../../components/Table/Table\";\nimport { isEmptyOrSpaces } from \"../../shared/dataTest\";\nimport { PositionRequirementTableInterface } from \"./ViewPosition\";\n\ninterface RequirementProps {\n  requirements: PositionRequirementTableInterface[];\n}\n\nconst ViewRequirements: React.FC<RequirementProps> = (props) => {\n  const tableData = (): JSX.Element[] => {\n    let data: PositionRequirementTableInterface[] = props.requirements;\n    // let data: PositionSubcategoryData[] =\n    //   props.position_requirement.position_requirement;\n    if (data.length === 0) {\n      return [\n        <tr key={153} className=\"border-b border-gray-200 hover:bg-gray-100\">\n          <td className=\"p-3 text-center\" colSpan={3}>\n            No Data Found\n          </td>\n        </tr>,\n      ];\n    }\n\n    return data.map((item, index) => (\n      <tr\n        key={index + item.field_id}\n        className=\"border-b border-gray-200 hover:bg-gray-100\"\n      >\n        <td className=\"p-3 text-left whitespace-nowrap\">{index + 1}</td>\n        <td className=\"p-3 text-left\">\n          <span>{item.subcategory_title}</span>\n        </td>\n        <td className=\"p-3 text-left\">\n          <span>\n            {isEmptyOrSpaces(item.field_id) ? \"Any document\" : item.field_title}\n          </span>\n        </td>\n        <td className=\"p-3 text-left text-lg italic\">\n          {isEmptyOrSpaces(item.field_id) ? (\n            item.subcategory_required ? (\n              <span className=\"text-yellow-800\">Required</span>\n            ) : (\n              \"Optional\"\n            )\n          ) : item.required ? (\n            <span className=\"text-yellow-800\">Required</span>\n          ) : (\n            \"Optional\"\n          )}\n        </td>\n      </tr>\n    ));\n  };\n\n  return (\n    <div>\n      <Table\n        columns={[\n          { columnTitle: \"#\", alignText: \"left\", padding: \"p-3\" },\n          { columnTitle: \"Qualification\", alignText: \"left\", padding: \"p-3\" },\n          // {\n          //   columnTitle: \"Qualification Status\",\n          //   alignText: \"left\",\n          //   padding: \"p-3\",\n          // },\n          { columnTitle: \"Document\", alignText: \"left\", padding: \"p-3\" },\n          { columnTitle: \"Status\", alignText: \"left\", padding: \"p-3\" },\n          // { columnTitle: \"\", alignText: \"left\", padding: \"p-3\" },\n        ]}\n        rows={tableData}\n        pagination={false}\n        search={false}\n        thColor=\"gray\"\n      />\n    </div>\n  );\n};\n\nexport default React.memo(ViewRequirements);\n","import React from \"react\";\nimport { AnswersDetails } from \"../../../components/AnswersDetails/AnswersDetails\";\nimport {\n  claimApplicationsPositionInterface,\n  ClaimExamResultsDetails,\n} from \"../../../interfaces\";\nimport { DocumentReducerInterface } from \"../../../reducers/document\";\nimport { UserInterface } from \"../../../shared/interfaces\";\nimport { DATE } from \"../../../utils/functions\";\nimport { ExamDoneDetailsAnswers } from \"../../CandidateExams/CandidateExams\";\nimport { PositionRequirementTableInterface } from \"../../Positions/ViewPosition\";\n\nexport const FC_ApplicationPositionDistinctCategory = (\n  thisPosition: claimApplicationsPositionInterface,\n  documentCategories: DocumentReducerInterface\n): {\n  PositionsTemp: PositionRequirementTableInterface[];\n  DistinctCategoriesTemp: PositionRequirementTableInterface[];\n  DistinctSubCategoriesTemp: PositionRequirementTableInterface[];\n} => {\n  let PositionsTemp: PositionRequirementTableInterface[] = [];\n  let DistinctCategoriesTemp: PositionRequirementTableInterface[] = [],\n    DistinctCategoriesIds: string[] = [];\n  let DistinctSubCategoriesTemp: PositionRequirementTableInterface[] = [],\n    DistinctSubCategoriesIds: string[] = [];\n  // GET REQUIREMENTS OF THE CURRENT POSITION ====================\n  let requirements = thisPosition.requirements;\n  // LOOP THROUGH CURRENT POSITION REQUIREMENTS ==========================\n  for (let req in requirements) {\n    let thisRequirements = requirements[req];\n    // GET DOC CATEGORY OF THE CURRENT POSITION REQUIREMENTS ====================\n    let thisCategory = documentCategories.documentCategory\n      ? documentCategories.documentCategory.find(\n          (item) =>\n            item.user_detail_category_id ===\n            thisRequirements.category.user_detail_category_id\n        ) && {\n          title: documentCategories.documentCategory.find(\n            (item) =>\n              item.user_detail_category_id ===\n              thisRequirements.category.user_detail_category_id\n          )!.title,\n          user_detail_category_id: documentCategories.documentCategory.find(\n            (item) =>\n              item.user_detail_category_id ===\n              thisRequirements.category.user_detail_category_id\n          )!.user_detail_category_id,\n        }\n      : {\n          title: \"\",\n          user_detail_category_id:\n            thisRequirements.category.user_detail_category_id,\n        };\n    // GET DOC SUB CATEGORY OF THE CURRENT POSITION REQUIREMENTS ====================\n    let thisSubCategory = documentCategories.documentSubCategory\n      ? documentCategories.documentSubCategory.find(\n          (item) =>\n            item.user_detail_subcategory_id ===\n            thisRequirements.subcategory.user_detail_subcategory_id\n        )\n        ? {\n            title: documentCategories.documentSubCategory.find(\n              (item) =>\n                item.user_detail_subcategory_id ===\n                thisRequirements.subcategory.user_detail_subcategory_id\n            )!.title,\n            user_detail_subcategory_id:\n              documentCategories.documentSubCategory.find(\n                (item) =>\n                  item.user_detail_subcategory_id ===\n                  thisRequirements.subcategory.user_detail_subcategory_id\n              )!.user_detail_subcategory_id,\n            category_id: documentCategories.documentSubCategory.find(\n              (item) =>\n                item.user_detail_subcategory_id ===\n                thisRequirements.subcategory.user_detail_subcategory_id\n            )!.category_id,\n          }\n        : {\n            title: \"\",\n            user_detail_subcategory_id:\n              thisRequirements.subcategory.user_detail_subcategory_id,\n            category_id: \"\",\n          }\n      : {\n          title: \"\",\n          user_detail_subcategory_id:\n            thisRequirements.subcategory.user_detail_subcategory_id,\n          category_id: \"\",\n        };\n    // LOOP THROUGH FIELDS OF THE CURRENT POSITION REQUIREMENTS ==========================\n    if (thisCategory) {\n      for (let field in thisRequirements.position_requirement) {\n        // GET FIELDS OF THE CURRENT POSITION REQUIREMENTS ====================\n        let thisField = documentCategories.documentFields\n          ? documentCategories.documentFields.find(\n              (item) =>\n                item._id === thisRequirements.position_requirement[field]._id\n            )\n            ? {\n                title: documentCategories.documentFields.find(\n                  (item) =>\n                    item._id ===\n                    thisRequirements.position_requirement[field]._id\n                )!.title,\n                _id: documentCategories.documentFields.find(\n                  (item) =>\n                    item._id ===\n                    thisRequirements.position_requirement[field]._id\n                )!._id,\n                required: thisRequirements.position_requirement[field].required,\n              }\n            : {\n                title: \"\",\n                _id: thisRequirements.subcategory.user_detail_subcategory_id,\n                required: thisRequirements.position_requirement[field].required,\n              }\n          : {\n              title: \"\",\n              _id: thisRequirements.subcategory.user_detail_subcategory_id,\n              required: thisRequirements.position_requirement[field].required,\n            };\n        // ADD CURRENT CATEGORY, SUB CATEGORY & FIELDS OF THE CURRENT POSITION REQUIREMENTS IN POSITIONS TEMP ====================\n        PositionsTemp.push({\n          category_id: thisCategory.user_detail_category_id,\n          category_title: thisCategory.title,\n          subcategory_id: thisSubCategory.user_detail_subcategory_id,\n          subcategory_title: thisSubCategory.title,\n          subcategory_required: thisRequirements.required,\n          field_title: thisField.title,\n          field_id: thisField._id,\n          required: thisField.required,\n        });\n      }\n\n      // ADD CATEOGRY OF THE CURRENT POSITION REQUIREMENTS TO ARRAY ====================\n      if (\n        !DistinctCategoriesIds.includes(thisCategory.user_detail_category_id)\n      ) {\n        DistinctCategoriesIds.push(thisCategory.user_detail_category_id);\n        DistinctCategoriesTemp.push({\n          category_id: thisCategory.user_detail_category_id,\n          category_title: thisCategory.title,\n          subcategory_id: \"\",\n          subcategory_title: \"\",\n          subcategory_required: thisRequirements.required,\n          field_title: \"\",\n          field_id: \"\",\n          required: false,\n        });\n      }\n\n      // ADD SUB CATEOGRY OF THE CURRENT POSITION REQUIREMENTS TO ARRAY ====================\n      if (\n        !DistinctSubCategoriesIds.includes(\n          thisSubCategory.user_detail_subcategory_id\n        )\n      ) {\n        DistinctSubCategoriesIds.push(\n          thisSubCategory.user_detail_subcategory_id\n        );\n        DistinctSubCategoriesTemp.push({\n          category_id: thisSubCategory.category_id,\n          category_title: \"\",\n          subcategory_id: thisSubCategory.user_detail_subcategory_id,\n          subcategory_title: thisSubCategory.title,\n          subcategory_required: thisRequirements.required,\n          field_title: \"\",\n          field_id: \"\",\n          required: false,\n        });\n      }\n    }\n  }\n  // DistinctCategoriesIds.;\n\n  return { PositionsTemp, DistinctCategoriesTemp, DistinctSubCategoriesTemp };\n};\n\nexport const showEvaluator = (\n  userList: UserInterface[],\n  user_id: string\n): string => {\n  let result: string = \"\";\n  if (user_id === \"system\") {\n    result = \"System\";\n  } else {\n    // let user = getUserDocuments(userList, user_id);\n    // let user = undefined;\n    // if (user) {\n    //   result = user.user.user_info.fname + \" \" + user.user.user_info.lname;\n    // }\n  }\n  return result;\n};\n\nexport const claimShowAnswer = (\n  answer: ClaimExamResultsDetails,\n  course_name: string\n): ExamDoneDetailsAnswers => {\n  const result: ExamDoneDetailsAnswers = {\n    course: answer.course,\n    course_name: course_name,\n    discription: answer.discription,\n    termes: answer.termes,\n    rules: {\n      right_click_enabled: false,\n      copy_enabled: false,\n      paste_enabled: false,\n      stop_candidate_when_comeback: false,\n      allow_to_leave_browser: false,\n    },\n    period: answer.period,\n    exam_date: answer.exam_date,\n    exam_id: answer.exam_id,\n  };\n  return result;\n};\n\ntype ExaminationFormViewProps = {\n  thisAnswerSheet: ClaimExamResultsDetails;\n  setViewThisFile: (value: string) => void;\n  setChooseClaimFile: (value: boolean) => void;\n  setClaimFileId: (value: string) => void;\n};\n\nconst ExaminationFormView: React.FC<ExaminationFormViewProps> = (props) => {\n  return (\n    <section className=\"\">\n      <div className=\"w-full bg-gray-100 px-4 py-1 animate__animated animate__fadeIn\">\n        <div className=\"flex flex-col mb-2\">\n          {/* APPLICATION TITLE ========== */}\n          <section className=\"flex items-center justify-between\">\n            <span className=\"text-blue-600 font-bold text-2xl\">\n              {props.thisAnswerSheet.course_name}\n            </span>\n            <button\n              type=\"button\"\n              className=\"btn btn-blue\"\n              onClick={() => {\n                props.setChooseClaimFile(false);\n                props.setClaimFileId(props.thisAnswerSheet.answer_sheet_id);\n                props.setViewThisFile(\"\");\n              }}\n            >\n              Choose\n            </button>\n          </section>\n\n          <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n            <span className={`italic`}>Date:</span>\n            <span className=\"font-bold text-gray-900 py-1\">\n              {DATE(props.thisAnswerSheet.createdAt)}\n            </span>\n          </div>\n        </div>\n        {/* QUESTIONS ----------------------------- */}\n        <AnswersDetails\n          showAnswers={false}\n          exam_id={claimShowAnswer(\n            props.thisAnswerSheet,\n            props.thisAnswerSheet.course_name\n          )}\n        />\n        {/* END QUESTIONS ----------------------------- */}\n      </div>\n    </section>\n  );\n};\n\nexport default React.memo(ExaminationFormView);\n","import React, { useState } from \"react\";\nimport { MdSearch } from \"react-icons/md\";\nimport { connect } from \"react-redux\";\nimport { ApplicationSession } from \"../../../actions\";\nimport {\n  course,\n  CandidateClaimInterface,\n  claimApplicationsInterface,\n  ClaimExamResultsDetails,\n} from \"../../../interfaces\";\nimport { StoreState } from \"../../../reducers\";\nimport { search } from \"../../../utils/functions\";\nimport { isClaimAllowed } from \"./ClaimForm\";\n\nconst getFailedExam = (\n  allData: ClaimExamResultsDetails[],\n  allCourses: course[]\n): ClaimExamResultsDetails[] => {\n  let result: ClaimExamResultsDetails[] = [];\n  allData.forEach((element) => {\n    if (element.total_marks < 100) {\n      let data = element;\n      data.course_name = getCourseById(allCourses, element.course)\n        ? getCourseById(allCourses, element.course)!.course_name\n        : \"Unknown exam\";\n      result.push(data);\n    }\n  });\n\n  return result;\n};\n\nexport const getCourseById = (courses: course[], course_id: string) => {\n  return courses.find((item) => item.course_id === course_id);\n};\n\nexport const getCourseIdBySheetId = (\n  allData: ClaimExamResultsDetails[],\n  sheet_id: string\n) => {\n  return allData.find((item) => item.answer_sheet_id === sheet_id);\n};\n\nexport const searchApplication = (\n  objList: claimApplicationsInterface[],\n  text: any\n): claimApplicationsInterface[] => {\n  if (undefined === text || text === \"\") return objList;\n  return objList.filter((product) => {\n    let flag;\n    // let dataKeys = product;\n\n    for (let prop in product) {\n      flag = false;\n      if (prop === \"position\") {\n        flag =\n          product.position.position_title\n            .toString()\n            .toLowerCase()\n            .indexOf(text.toLowerCase()) > -1;\n      }\n      if (flag) break;\n    }\n    return flag;\n  });\n  // return objList.filter((product) =>\n  //   product.position.position_title.includes(text)\n  // );\n};\n\ntype FormExamListProps = {\n  setChooseClaimFile: (value: boolean) => void;\n  setClaimFileId: (value: string) => void;\n  setViewThisFile: (value: string) => void;\n  claimFileId: string;\n  viewThisFile: string;\n  candidateAnswers: ClaimExamResultsDetails[];\n  myClaims: CandidateClaimInterface[];\n  activeSession: ApplicationSession;\n\n  // REDUX //////////////////////\n  courses: course[] | null;\n};\n\nconst FormExamList: React.FC<FormExamListProps> = (props) => {\n  const [searchInput, setSearchInput] = useState<string>(\"\");\n\n  return (\n    <section>\n      {/* SEARCH PART */}\n      <div className=\"flex items-center w-full my-1\">\n        <MdSearch className=\"w-6 h-6 absolute ml-2\" />\n        <input\n          type=\"text\"\n          placeholder=\"Search\"\n          className=\"focus:border-2 h-7 ml-1 pl-9 mr-2 bg-gray-100 focus:border-gray-700 w-full rounded\"\n          onChange={(e) => setSearchInput(e.target.value)}\n          value={searchInput}\n          disabled={\n            !props.courses ||\n            getFailedExam(props.candidateAnswers, props.courses).filter(\n              (item) =>\n                isClaimAllowed(\n                  props.myClaims,\n                  props.activeSession.session_plan_id,\n                  item.answer_sheet_id\n                )\n            ).length > 0\n              ? false\n              : true\n          }\n        />\n        <button\n          className=\"bg-red-200 text-red-700 py-1 px-2 mr-1 rounded text-sm focus:outline-none\"\n          type=\"button\"\n          onClick={() => {\n            props.setChooseClaimFile(false);\n            props.setViewThisFile(\"\");\n          }}\n        >\n          Close\n        </button>\n      </div>\n      {/* END SEARCH PART ///////////////// */}{\" \"}\n      {/* searchData(props.candidateAnswers, searchInput) */}\n      <div className=\"w-full h-52 mt-2 overflow-y-auto divide-y divide-gray-300\">\n        {props.courses &&\n        getFailedExam(props.candidateAnswers, props.courses).filter((item) =>\n          isClaimAllowed(\n            props.myClaims,\n            props.activeSession.session_plan_id,\n            item.answer_sheet_id\n          )\n        ).length > 0 ? (\n          search(\n            getFailedExam(props.candidateAnswers, props.courses).filter(\n              (item) =>\n                isClaimAllowed(\n                  props.myClaims,\n                  props.activeSession.session_plan_id,\n                  item.answer_sheet_id\n                )\n            ),\n            searchInput\n          ).map((item: ClaimExamResultsDetails, index: number) => (\n            <div\n              className={`group flex items-center justify-between my-1 hover:bg-gray-100 ${\n                props.claimFileId === item.answer_sheet_id &&\n                \"bg-blue-50 border-l-4 border-blue-500\"\n              }`}\n              key={index + item.answer_sheet_id}\n            >\n              <div\n                className=\"p-1 w-full mr-2 cursor-pointer\"\n                onClick={() => {\n                  props.setChooseClaimFile(false);\n                  props.setClaimFileId(item.answer_sheet_id);\n                }}\n              >\n                <p className=\"text-base font-medium text-black\">\n                  {item.course_name}\n                </p>\n              </div>\n              <button\n                type=\"button\"\n                className=\"bg-blue-200 hover:bg-blue-300 text-blue-700 group-hover:text-blue-800 py-1 px-2 mr-1 rounded text-sm\"\n                onClick={() => {\n                  props.setViewThisFile(item.answer_sheet_id);\n                }}\n              >\n                View\n              </button>\n            </div>\n          ))\n        ) : (\n          <div className=\"text-center p-3\">\n            <p className=\"text-base font-medium text-black\">\n              No failed exam available\n            </p>\n          </div>\n        )}\n      </div>\n    </section>\n  );\n};\n\nconst mapStateToProps = ({\n  course,\n}: StoreState): {\n  courses: course[] | null;\n} => {\n  return {\n    courses: course.courses,\n  };\n};\nexport default React.memo(connect(mapStateToProps, {})(FormExamList));\n","import {\n  QuestionForEmbedded,\n  QuestionForHybrid,\n  questionShortElementsType,\n  questionTypeElementsType,\n} from \"@mastrecruit/common\";\nimport React from \"react\";\nimport { MdCheckCircle, MdClose } from \"react-icons/md\";\nimport { Auth } from \"../../../actions/auth\";\nimport {\n  candidateExamStoreInterface,\n  QuestionAnswersStore,\n} from \"../../../actions/candidate_exam\";\nimport { questionTypesStoreInterface } from \"../../../actions/questionTypes\";\nimport { System } from \"../../../actions/system\";\nimport Loading from \"../../../components/Loading/Loading\";\nimport { EmbeddedQuestion } from \"../../../components/QuestionPreview/QuestionPreview\";\nimport { course } from \"../../../interfaces/course\";\nimport {\n  QuestionAnswerInterface,\n  QuestionInterface,\n  QuestionLanguage,\n} from \"../../../interfaces/question\";\nimport {\n  ExamAnsweredQuestions,\n  ExamPendingQuestions,\n  findQuestionType,\n} from \"../utils/utils\";\nimport FindAnswer from \"./FindAnswer\";\n\ninterface QuestionsReviewProps {\n  auth: Auth;\n  candidateExam: candidateExamStoreInterface;\n  system: System;\n  setSelectedExamQuestion: (\n    exam_id: string,\n    question_id: string | null\n  ) => void;\n  submitQuestionAnswer: boolean;\n  questionTypes: questionTypesStoreInterface;\n  loadQuestionTypes: (callback: (loading: boolean) => void) => void;\n  submitExam: () => void;\n  selectedExam: course | null;\n  setSubmitModal: (status: boolean) => void;\n  selectedLanguage: QuestionLanguage;\n  wholeQuestion: QuestionInterface;\n  answersList: QuestionAnswersStore[];\n}\n\nexport const findQType = (\n  typeShort: questionShortElementsType | QuestionForEmbedded | QuestionForHybrid\n): questionTypeElementsType => {\n  let changed: questionTypeElementsType = questionTypeElementsType.Hybrid;\n  switch (typeShort) {\n    case QuestionForHybrid.Calculated:\n      changed = questionTypeElementsType.Calculated;\n      break;\n    case QuestionForHybrid.CalculatedMultipleChoice:\n      changed = questionTypeElementsType.CalculatedMultipleChoice;\n      break;\n    case QuestionForHybrid.Essay:\n      changed = questionTypeElementsType.Essay;\n      break;\n    case QuestionForHybrid.Matching:\n      changed = questionTypeElementsType.Matching;\n      break;\n    case QuestionForHybrid.MultipleChoice:\n      changed = questionTypeElementsType.MultipleChoice;\n      break;\n    case QuestionForHybrid.Numeric:\n      changed = questionTypeElementsType.Numeric;\n      break;\n    case QuestionForHybrid.ShortAnswer:\n      changed = questionTypeElementsType.ShortAnswer;\n      break;\n    case QuestionForHybrid.SimpleCalculate:\n      changed = questionTypeElementsType.SimpleCalculate;\n      break;\n    case QuestionForHybrid.SingleMultiple:\n      changed = questionTypeElementsType.SingleMultiple;\n      break;\n    case QuestionForHybrid.TrueFalse:\n      changed = questionTypeElementsType.TrueFalse;\n      break;\n  }\n  return changed;\n};\n\nconst FindAnswerHybrid = (props: QuestionsReviewProps) => {\n  let str = \"a\";\n  if (props.submitQuestionAnswer === true) {\n    return (\n      <div className=\"bg-white rounded mx-4 my-4\">\n        <div className=\"text-gray-600 mx-4\">Saving changes, Please wait...</div>\n        <Loading />\n      </div>\n    );\n  }\n  return (\n    <div className={`pt-4 border-t border-gray-300 bg-white`}>\n      <div className=\"px-4 pb-2\">\n        <div className=\"my-2\">\n          <div\n            className=\"flex flex-col gap-3 overflow-y-auto\"\n            style={{ maxHeight: \"100%\" }}\n          >\n            {console.log(\n              \"Whole: \",\n              props.wholeQuestion,\n              props.selectedLanguage\n            )}\n            <div>\n              {findQuestionType(\n                props.wholeQuestion.type,\n                props.questionTypes.questionTypes\n              ) === questionTypeElementsType.Hybrid &&\n                props.wholeQuestion.question.find(\n                  (test) => test.language === props.selectedLanguage\n                ) !== undefined &&\n                props.wholeQuestion.question\n                  .find((test) => test.language === props.selectedLanguage)!\n                  .sub_question.map((item, i) => {\n                    let stri = String.fromCharCode(\n                      str.charCodeAt(str.length - 1) + i\n                    );\n                    return (\n                      <div\n                        key={i + 1}\n                        className=\"bg-white hover:bg-white border border-white hover:border-blue-400 px-2 py-2 rounded  animate__animated animate__fadeIn animate__fast group\"\n                      >\n                        <div className=\"grid md:grid-cols-12 w-full\">\n                          <div className=\"col-span-12 flex flex-row items-center gap-3\">\n                            <div\n                              key={i + 1}\n                              className=\"w-6 h-6 p-2 rounded-full bg-blue-100 flex justify-center items-center font-bold text-lg text-blue-600 cursor-pointer\"\n                            >\n                              {stri}\n                            </div>\n                            <div className=\"text-sm w-full\">\n                              {props.wholeQuestion.question.find(\n                                (test) =>\n                                  test.language === props.selectedLanguage\n                              ) !== undefined ? (\n                                findQuestionType(\n                                  item.type,\n                                  props.questionTypes.questionTypes\n                                ) === questionTypeElementsType.Embedded ? (\n                                  EmbeddedQuestion(\n                                    props.wholeQuestion!,\n                                    props.questionTypes.questionTypes,\n                                    props.selectedLanguage,\n                                    props.candidateExam.question_answers,\n                                    (data: QuestionAnswerInterface) => {}\n                                  )\n                                ) : (\n                                  <div\n                                    className=\"font-bold text-gray-700 text-base\"\n                                    dangerouslySetInnerHTML={{\n                                      __html: item.description,\n                                    }}\n                                  ></div>\n                                )\n                              ) : (\n                                props.wholeQuestion.question.length > 0 && (\n                                  <div\n                                    className=\"font-bold text-gray-700 text-base max-h-20 truncate\"\n                                    dangerouslySetInnerHTML={{\n                                      __html: item.description,\n                                    }}\n                                  ></div>\n                                )\n                              )}\n                              <div className=\"text-blue-700 font-bold text-sm w-full\">\n                                Answer: &nbsp;\n                                {props.questionTypes.questionTypes !== null && (\n                                  <FindAnswer\n                                    selectedLanguage={props.selectedLanguage}\n                                    question={props.wholeQuestion}\n                                    answersList={props.answersList}\n                                    questionTypes={\n                                      props.questionTypes.questionTypes\n                                    }\n                                    onClick={() => {}}\n                                    showCorrectAnswer={false}\n                                    subQuestionType={findQType(item.typeShort)}\n                                    reference={item.reference}\n                                  />\n                                )}\n                              </div>\n                            </div>\n                          </div>\n                        </div>\n                      </div>\n                    );\n                  })}\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default FindAnswerHybrid;\n","import React from \"react\";\nimport {\n  BsCheckSquareFill,\n  BsCheckCircleFill,\n  BsArrowRightSquareFill,\n  BsArrowRightCircleFill,\n} from \"react-icons/bs\";\nimport { QuestionAnswersStore } from \"../../../actions\";\nimport {\n  CalculatedMultipleChoiceQuestionAnswerInterface,\n  MatchingQuestionAnswerInterface,\n  MultipleChoiceQuestionAnswerInterface,\n  QuestionInterface,\n  questionType,\n  TrueFalseQuestionAnswerInterface,\n  NumericalQuestionAnswerInterface,\n  ShortAnswerQuestionAnswerInterface,\n  SimpleCalculatedQuestionAnswerInterface,\n  QuestionLanguage,\n  LanguageInterface,\n  EssayQuestionAnswerInterface,\n  QuestionAnswerInterface,\n  QuestionAnswerFormat,\n} from \"../../../interfaces\";\nimport {\n  toCalculatedMultipleChoice,\n  toEssay,\n  toMatching,\n  toMultipleChoice,\n  toNumerical,\n  toShortAnswer,\n  toSimpleCalculated,\n  toTrueFalse,\n} from \"../QuestionDetails/ConvertingAnswers\";\nimport { findQuestionType } from \"../utils/utils\";\nimport {\n  QuestionForHybrid,\n  questionTypeElementsType,\n} from \"@mastrecruit/common\";\nimport { findQType } from \"./FindAnswerHybrid\";\n\ninterface FindAnswerProps {\n  question: QuestionInterface;\n  answersList: QuestionAnswersStore[];\n  selectedLanguage: QuestionLanguage | LanguageInterface;\n  questionTypes: questionType[];\n  showCorrectAnswer: boolean;\n  subQuestionType?: questionTypeElementsType;\n  reference?: number;\n  onClick: () => void;\n}\n\nconst resultDiv = (\n  user_answers: QuestionAnswerFormat[],\n  question_answers: QuestionAnswerFormat[],\n  props: FindAnswerProps\n): JSX.Element => {\n  switch (\n    props.subQuestionType === undefined\n      ? findQuestionType(props.question.type, props.questionTypes)\n      : props.subQuestionType\n  ) {\n    case questionTypeElementsType.MultipleChoice:\n      const userAnswer: MultipleChoiceQuestionAnswerInterface[] =\n        toMultipleChoice(user_answers);\n      return (\n        <div className=\"w-full\">\n          {userAnswer\n            .filter((itm) => itm.status === true)\n            .map((item, i) => (\n              <div\n                key={i + 1}\n                onClick={props.onClick}\n                className=\"bg-gray-100 rounded px-3 cursor-pointer flex flex-row items-center gap-3 text-gray-600 hover:text-blue-600 mb-1 py-3 font-bold\"\n              >\n                <div className=\"text-xl text-blue-600\">\n                  <BsCheckSquareFill />\n                </div>\n                <div dangerouslySetInnerHTML={{ __html: item.value }}></div>\n              </div>\n            ))}\n          {/* Correct answers */}\n          {props.showCorrectAnswer === true && (\n            <div className=\"border-l-4 rounded-xl border-blue-600 bg-white p-3\">\n              <div className=\"font-extrabold text-lg\">Correct answer</div>\n              <div>\n                {question_answers\n                  .filter((itm) => itm.status === true)\n                  .map((item, i) => (\n                    <div\n                      key={i + 1}\n                      onClick={props.onClick}\n                      className=\"bg-blue-50 rounded px-3 cursor-pointer flex flex-row items-center gap-3 text-gray-600 hover:text-blue-600 mb-1 py-3 font-bold\"\n                    >\n                      <div className=\"text-xl text-blue-600\">\n                        <BsCheckSquareFill />\n                      </div>\n                      <div\n                        dangerouslySetInnerHTML={{ __html: item.value }}\n                      ></div>\n                    </div>\n                  ))}\n              </div>\n            </div>\n          )}\n        </div>\n      );\n    case questionTypeElementsType.SingleMultiple:\n      const userAnswerSingle: MultipleChoiceQuestionAnswerInterface[] =\n        toMultipleChoice(user_answers);\n      return (\n        <div className=\"w-full\">\n          {userAnswerSingle\n            .filter((itm) => itm.status === true)\n            .map((item, i) => (\n              <div\n                key={i + 1}\n                onClick={props.onClick}\n                className=\"bg-gray-100 rounded px-3 cursor-pointer flex flex-row items-center gap-3 text-gray-600 hover:text-blue-600 mb-1 py-3 font-bold\"\n              >\n                <div className=\"text-xl text-blue-600\">\n                  <BsCheckCircleFill />\n                </div>\n                <div dangerouslySetInnerHTML={{ __html: item.value }}></div>\n              </div>\n            ))}\n          {/* Correct answers */}\n          {props.showCorrectAnswer === true && (\n            <div className=\"border-l-4 rounded-xl border-blue-600 bg-white p-3\">\n              <div className=\"font-extrabold text-lg\">Correct answer</div>\n              <div>\n                {question_answers\n                  .filter((itm) => itm.status === true)\n                  .map((item, i) => (\n                    <div\n                      key={i + 1}\n                      onClick={props.onClick}\n                      className=\"bg-blue-50 rounded px-3 cursor-pointer flex flex-row items-center gap-3 text-gray-600 hover:text-blue-600 mb-1 py-3 font-bold\"\n                    >\n                      <div className=\"text-xl text-blue-600\">\n                        <BsCheckCircleFill />\n                      </div>\n                      <div\n                        dangerouslySetInnerHTML={{ __html: item.value }}\n                      ></div>\n                    </div>\n                  ))}\n              </div>\n            </div>\n          )}\n        </div>\n      );\n\n    case questionTypeElementsType.CalculatedMultipleChoice:\n      const userAnswer1: CalculatedMultipleChoiceQuestionAnswerInterface[] =\n        toCalculatedMultipleChoice(user_answers);\n      return (\n        <div className=\"w-full\">\n          {userAnswer1\n            .filter((itm) => itm.status === true)\n            .map((item, i) => (\n              <div\n                key={i + 1}\n                onClick={props.onClick}\n                className=\"bg-gray-100 rounded px-3 cursor-pointer flex flex-row items-center gap-3 text-gray-600 hover:text-blue-600 mb-1 py-3 font-bold\"\n              >\n                <div className=\"text-xl text-blue-600\">\n                  <BsCheckSquareFill />\n                </div>\n                <div className=\"text-base font-normal text-gray-500\">\n                  {item.value.length > 1 ? (\n                    <>\n                      Between{\" \"}\n                      <span className=\"underline text-gray-600 font-extrabold\">\n                        {item.value[0]}\n                      </span>{\" \"}\n                      and{\" \"}\n                      <span className=\"underline text-gray-600 font-extrabold\">\n                        {item.value[1]}\n                      </span>\n                    </>\n                  ) : (\n                    <span className=\"text-gray-700\">\n                      {item.value[0].toString()}\n                    </span>\n                  )}\n                </div>\n              </div>\n            ))}\n          {/* Correct answers */}\n          {props.showCorrectAnswer === true && (\n            <div className=\"border-l-4 rounded-xl border-blue-600 bg-white p-3\">\n              <div className=\"font-extrabold text-lg\">Correct answer</div>\n              <div>\n                {question_answers\n                  .filter((itm) => itm.status === true)\n                  .map((item, i) => (\n                    <div\n                      key={i + 1}\n                      onClick={props.onClick}\n                      className=\"bg-blue-50 rounded px-3 cursor-pointer flex flex-row items-center gap-3 text-gray-600 mb-1 py-3 font-bold\"\n                    >\n                      <div className=\"text-xl text-blue-600\">\n                        <BsCheckSquareFill />\n                      </div>\n                      <div className=\"text-base font-normal text-gray-500\">\n                        {item.value.length > 1 ? (\n                          <>\n                            Between{\" \"}\n                            <span className=\"underline text-blue-600 font-extrabold\">\n                              {item.value[0]}\n                            </span>{\" \"}\n                            and{\" \"}\n                            <span className=\"underline text-blue-600 font-extrabold\">\n                              {item.value[1]}\n                            </span>\n                          </>\n                        ) : (\n                          <span className=\"text-blue-600\">\n                            {item.value[0].toString()}\n                          </span>\n                        )}\n                      </div>\n                    </div>\n                  ))}\n              </div>\n            </div>\n          )}\n        </div>\n      );\n\n    case questionTypeElementsType.Matching:\n      const userAnswerMatch: MatchingQuestionAnswerInterface[] =\n        toMatching(user_answers);\n      return (\n        <div className=\"w-full\">\n          {userAnswerMatch.map((item, i) => (\n            <div\n              key={i + 1}\n              onClick={props.onClick}\n              className=\"bg-gray-100 rounded cursor-pointer flex flex-row items-center gap-3 text-gray-600 hover:text-blue-600 mb-1 font-bold border border-blue-300\"\n            >\n              <div className=\"text-xl text-blue-600 font-bold p-3 pr-1 md:pr-3\">\n                <div className=\"h-8 w-8 p-3 bg-blue-100 rounded-full flex items-center justify-center\">\n                  {i + 1}\n                </div>\n              </div>\n              <div className=\"flex flex-col lg:flex-row items-center gap-3 w-full h-full truncate\">\n                <div\n                  className=\"w-full mt-3 lg:mb-0\"\n                  dangerouslySetInnerHTML={{ __html: item.value }}\n                ></div>\n                <div className=\"flex flex-row items-center gap-3 w-full mb-3 lg:mb-0\">\n                  <div className=\"text-3xl text-gray-500 group-hover:text-blue-600\">\n                    <BsArrowRightSquareFill />\n                  </div>\n                  <div\n                    className=\"w-full mr-2\"\n                    dangerouslySetInnerHTML={{ __html: item.status }}\n                  ></div>\n                </div>\n              </div>\n            </div>\n          ))}\n          {/* Correct answers */}\n          {props.showCorrectAnswer === true && (\n            <div className=\"border-l-4 rounded-xl border-blue-600 bg-white p-3\">\n              <div className=\"font-extrabold text-lg\">Correct answer</div>\n              <div>\n                {question_answers.map((item, i) => (\n                  <div\n                    key={i + 1}\n                    onClick={props.onClick}\n                    className=\"bg-blue-50 rounded cursor-pointer flex flex-row items-center gap-3 text-gray-600 hover:text-blue-600 mb-1 font-bold border border-blue-300\"\n                  >\n                    <div className=\"text-xl text-blue-600 font-bold p-3 pr-1 md:pr-3\">\n                      <div className=\"h-8 w-8 p-3 bg-blue-100 rounded-full flex items-center justify-center\">\n                        {i + 1}\n                      </div>\n                    </div>\n                    <div className=\"flex flex-col lg:flex-row items-center gap-3 w-full h-full truncate\">\n                      <div\n                        className=\"w-full mt-3 lg:mb-0\"\n                        dangerouslySetInnerHTML={{ __html: item.value }}\n                      ></div>\n                      <div className=\"flex flex-row items-center gap-3 w-full mb-3 lg:mb-0\">\n                        <div className=\"text-3xl text-gray-500 group-hover:text-blue-600\">\n                          <BsArrowRightSquareFill />\n                        </div>\n                        <div\n                          className=\"w-full mr-2\"\n                          dangerouslySetInnerHTML={{ __html: item.status }}\n                        ></div>\n                      </div>\n                    </div>\n                  </div>\n                ))}\n              </div>\n            </div>\n          )}\n        </div>\n      );\n    case questionTypeElementsType.TrueFalse:\n      const userAnswerTureFalse: TrueFalseQuestionAnswerInterface[] =\n        toTrueFalse(user_answers);\n      return (\n        <div className=\"w-full\">\n          {userAnswerTureFalse\n            .filter((itm) => itm.status === true)\n            .map((item, i) => (\n              <div\n                key={i + 1}\n                onClick={props.onClick}\n                className=\"bg-gray-100 rounded px-3 cursor-pointer flex flex-row items-center gap-3 text-gray-600 hover:text-blue-600 mb-1 py-3 font-bold\"\n              >\n                <div className=\"text-xl\">\n                  <BsArrowRightCircleFill />\n                </div>\n                <div dangerouslySetInnerHTML={{ __html: item.value }}></div>\n              </div>\n            ))}\n          {/* Correct answers */}\n          {props.showCorrectAnswer === true && (\n            <div className=\"border-l-4 rounded-xl border-blue-600 bg-white p-3\">\n              <div className=\"font-extrabold text-lg\">Correct answer</div>\n              <div>\n                {question_answers\n                  .filter((itm) => itm.status === true)\n                  .map((item, i) => (\n                    <div\n                      key={i + 1}\n                      onClick={props.onClick}\n                      className=\"bg-blue-50 rounded px-3 cursor-pointer flex flex-row items-center gap-3 text-blue-600 hover:text-blue-600 mb-1 py-3 font-bold\"\n                    >\n                      <div className=\"text-xl\">\n                        <BsArrowRightCircleFill />\n                      </div>\n                      <div\n                        dangerouslySetInnerHTML={{ __html: item.value }}\n                      ></div>\n                    </div>\n                  ))}\n              </div>\n            </div>\n          )}\n        </div>\n      );\n    case questionTypeElementsType.Numeric:\n      const userAnswerNumerical: NumericalQuestionAnswerInterface[] =\n        toNumerical(user_answers);\n      return (\n        <div className=\"w-full\">\n          {userAnswerNumerical.map((item, i) => (\n            <div\n              key={i + 1}\n              onClick={props.onClick}\n              className=\"bg-gray-100 rounded px-3 cursor-pointer flex flex-row items-center gap-3 text-gray-600 hover:text-blue-600 mb-1 py-3 font-bold\"\n            >\n              <div className=\"text-xl\">\n                <BsArrowRightCircleFill />\n              </div>\n              <div className=\"text-gray-600 text-base font-normal\">\n                {item.value.length > 1 ? (\n                  <>\n                    Between{\" \"}\n                    <span className=\"underline text-gray-600 font-extrabold\">\n                      {item.value[0]}\n                    </span>{\" \"}\n                    and{\" \"}\n                    <span className=\"underline text-gray-600 font-extrabold\">\n                      {item.value[1]}\n                    </span>\n                  </>\n                ) : (\n                  item.value.length > 0 && (\n                    <span className=\"text-gray-700\">\n                      {item.value[0].toString()}\n                    </span>\n                  )\n                )}\n              </div>\n            </div>\n          ))}\n          {/* Correct answers */}\n          {props.showCorrectAnswer === true && (\n            <div className=\"border-l-4 rounded-xl border-blue-600 bg-white p-3\">\n              <div className=\"font-extrabold text-lg\">Correct answer</div>\n              <div>\n                {question_answers.map((item, i) => (\n                  <div\n                    key={i + 1}\n                    onClick={props.onClick}\n                    className=\"bg-blue-50 rounded px-3 cursor-pointer flex flex-row items-center gap-3 text-blue-600 hover:text-blue-600 mb-1 py-3 font-bold\"\n                  >\n                    <div className=\"text-xl\">\n                      <BsArrowRightCircleFill />\n                    </div>\n                    <div className=\"text-gray-600 text-base font-normal\">\n                      {item.value.length > 1 ? (\n                        <>\n                          Between{\" \"}\n                          <span className=\"underline text-blue-600 font-extrabold\">\n                            {item.value[0] - item.value[1]}\n                          </span>{\" \"}\n                          and{\" \"}\n                          <span className=\"underline text-blue-600 font-extrabold\">\n                            {item.value[0] + item.value[1]}\n                          </span>\n                        </>\n                      ) : (\n                        item.value.length > 0 && (\n                          <span className=\"text-blue-700\">\n                            {item.value[0].toString()}\n                          </span>\n                        )\n                      )}\n                    </div>\n                  </div>\n                ))}\n              </div>\n            </div>\n          )}\n        </div>\n      );\n    case questionTypeElementsType.SimpleCalculate:\n      const userAnswerSimpleCalculate: SimpleCalculatedQuestionAnswerInterface[] =\n        toSimpleCalculated(user_answers);\n      return (\n        <div className=\"w-full\">\n          {userAnswerSimpleCalculate.map((item, i) => (\n            <div\n              key={i + 1}\n              onClick={props.onClick}\n              className=\"bg-gray-100 rounded px-3 cursor-pointer flex flex-row items-center gap-3 text-gray-600 hover:text-blue-600 mb-1 py-3 font-bold\"\n            >\n              <div className=\"text-xl\">\n                <BsArrowRightCircleFill />\n              </div>\n              <div className=\"text-gray-600 text-base font-normal\">\n                {item.value.length > 1 ? (\n                  <>\n                    Between{\" \"}\n                    <span className=\"underline text-gray-600 font-extrabold\">\n                      {item.value[0]}\n                    </span>{\" \"}\n                    and{\" \"}\n                    <span className=\"underline text-gray-600 font-extrabold\">\n                      {item.value[1]}\n                    </span>\n                  </>\n                ) : (\n                  item.value.length > 0 && (\n                    <span className=\"text-gray-700\">\n                      {item.value[0].toString()}\n                    </span>\n                  )\n                )}\n              </div>\n            </div>\n          ))}\n          {/* Correct answers */}\n          {props.showCorrectAnswer === true && (\n            <div className=\"border-l-4 rounded-xl border-blue-600 bg-white p-3\">\n              <div className=\"font-extrabold text-lg\">Correct answer</div>\n              <div>\n                {question_answers.map((item, i) => (\n                  <div\n                    key={i + 1}\n                    onClick={props.onClick}\n                    className=\"bg-blue-50 rounded px-3 cursor-pointer flex flex-row items-center gap-3 text-blue-600 hover:text-blue-600 mb-1 py-3 font-bold\"\n                  >\n                    <div className=\"text-xl\">\n                      <BsArrowRightCircleFill />\n                    </div>\n                    <div className=\"text-gray-600 text-base font-normal\">\n                      {item.value.length > 1 ? (\n                        <>\n                          Between{\" \"}\n                          <span className=\"underline text-blue-600 font-extrabold\">\n                            {item.value[0]}\n                          </span>{\" \"}\n                          and{\" \"}\n                          <span className=\"underline text-blue-600 font-extrabold\">\n                            {item.value[1]}\n                          </span>\n                        </>\n                      ) : (\n                        item.value.length > 0 && (\n                          <span className=\"text-blue-700\">\n                            {item.value[0].toString()}\n                          </span>\n                        )\n                      )}\n                    </div>\n                  </div>\n                ))}\n              </div>\n            </div>\n          )}\n        </div>\n      );\n    case questionTypeElementsType.ShortAnswer:\n      const userAnswerShortAnswer: ShortAnswerQuestionAnswerInterface[] =\n        toShortAnswer(user_answers);\n      return (\n        <div className=\"w-full\">\n          {userAnswerShortAnswer.map((item, i) => (\n            <div\n              key={i + 1}\n              onClick={props.onClick}\n              className=\"bg-gray-100 rounded px-3 cursor-pointer flex flex-row items-center gap-3 text-gray-600 hover:text-blue-600 mb-1 py-3 font-bold\"\n            >\n              <div className=\"text-xl\">\n                <BsArrowRightCircleFill />\n              </div>\n              <div\n                dangerouslySetInnerHTML={{\n                  __html: item.value,\n                }}\n              ></div>\n            </div>\n          ))}\n          {/* Correct answers */}\n          {props.showCorrectAnswer === true && (\n            <div className=\"border-l-4 rounded-xl border-blue-600 bg-white p-3\">\n              <div className=\"font-extrabold text-lg\">Correct answer</div>\n              <div>\n                {question_answers.map((item, i) => (\n                  <div\n                    key={i + 1}\n                    onClick={props.onClick}\n                    className=\"bg-blue-50 rounded px-3 cursor-pointer flex flex-row items-center gap-3 text-blue-600 hover:text-blue-600 mb-1 py-3 font-bold\"\n                  >\n                    <div className=\"text-xl\">\n                      <BsArrowRightCircleFill />\n                    </div>\n                    <div\n                      dangerouslySetInnerHTML={{\n                        __html: item.value,\n                      }}\n                    ></div>\n                  </div>\n                ))}\n              </div>\n            </div>\n          )}\n        </div>\n      );\n    // Essay\n    case questionTypeElementsType.Essay:\n      const userAnswerEssay: EssayQuestionAnswerInterface[] =\n        toEssay(user_answers);\n      return (\n        <div className=\"w-full\">\n          {userAnswerEssay.map((item, i) => (\n            <div\n              key={i + 1}\n              onClick={props.onClick}\n              className=\"bg-gray-100 rounded px-3 cursor-pointer flex flex-row items-center gap-3 text-gray-600 hover:text-blue-600 mb-1 py-3 font-bold\"\n            >\n              <div className=\"text-xl\">\n                <BsArrowRightCircleFill />\n              </div>\n              <div\n                dangerouslySetInnerHTML={{\n                  __html: item.value,\n                }}\n              ></div>\n            </div>\n          ))}\n          {/* Correct answers */}\n          {props.showCorrectAnswer === true && (\n            <div className=\"border-l-4 rounded-xl border-blue-600 bg-white p-3\">\n              <div className=\"font-extrabold text-lg\">Correct answer</div>\n              <div>\n                {question_answers.map((item, i) => (\n                  <div\n                    key={i + 1}\n                    onClick={props.onClick}\n                    className=\"bg-blue-50 rounded px-3 cursor-pointer flex flex-row items-center gap-3 text-blue-600 hover:text-blue-600 mb-1 py-3 font-bold\"\n                  >\n                    <div className=\"text-xl\">\n                      <BsArrowRightCircleFill />\n                    </div>\n                    <div\n                      dangerouslySetInnerHTML={{\n                        __html: item.value,\n                      }}\n                    ></div>\n                  </div>\n                ))}\n              </div>\n            </div>\n          )}\n        </div>\n      );\n    case questionTypeElementsType.Embedded:\n      return <div></div>;\n    case questionTypeElementsType.Hybrid:\n      return <div></div>;\n    default:\n      return <div className=\"text-blue-600 font-extrabold\">Answer added</div>;\n  }\n};\n\nconst FindAnswer = (props: FindAnswerProps) => {\n  const answer = props.answersList.find(\n    (item) => item.question_id === props.question.question_id\n  );\n  let UserAnswersSel = props.question.question.find(\n    (itm) => itm.language === props.selectedLanguage\n  );\n  if (UserAnswersSel === undefined && props.question.question.length > 0) {\n    UserAnswersSel =\n      props.question.question.find(\n        (itm) => itm.language === props.selectedLanguage\n      ) === undefined\n        ? props.question.question[0]\n        : props.question.question.find(\n            (itm) => itm.language === props.selectedLanguage\n          )!;\n  }\n  if (answer === undefined || UserAnswersSel === undefined) {\n    return (\n      <div className=\"text-yellow-600 font-extrabold text-2xl text-center\">\n        No answer found!\n      </div>\n    );\n  } else {\n    let SubQ = UserAnswersSel.sub_question.find(\n      (itm) => findQType(itm.typeShort) === props.subQuestionType\n    );\n    return (\n      <div>\n        {SubQ === undefined\n          ? resultDiv(\n              answer.answers[0].answer,\n              UserAnswersSel.answers[0].answer,\n              props\n            )\n          : answer.answers\n              .filter((itm) => SubQ && itm.reference === SubQ.reference)\n              .map((user_answer) => {\n                const testQ = UserAnswersSel!.answers.find(\n                  (itm) => itm.reference === user_answer.reference\n                );\n                if (testQ !== undefined) {\n                  return resultDiv(user_answer.answer, testQ.answer, props);\n                } else {\n                  return <div>Answered</div>;\n                }\n              })}\n      </div>\n    );\n  }\n};\n\nexport default FindAnswer;\n","import React, { Component } from \"react\";\nimport FindAnswer from \"../../containers/DoExam/DoExamTitle/FindAnswer\";\nimport { ExamAnswerSheetDone } from \"../../interfaces/exam\";\nimport { connect } from \"react-redux\";\nimport {\n  Auth,\n  CandidateApplicationsStoreInterface,\n  candidateExamStoreInterface,\n  FC_GetProfileDetails,\n  LoadCandidateApplications,\n  setSelectedCandidateExam,\n  setSelectedCourse,\n  setSelectedPosition,\n  InitializeExamDetails,\n  loadExamsDone,\n  AddUserApplication,\n  loadApplicationPeriods,\n  requestUserAnswers,\n  loadQuestionTypes,\n  questionTypesStoreInterface,\n  System,\n  courseStoreInterface,\n  loadCourses,\n} from \"../../actions\";\nimport { StoreState } from \"../../reducers\";\nimport { DATE } from \"../../utils/functions\";\nimport { AiOutlineFileText } from \"react-icons/ai\";\nimport { ExamDoneDetailsAnswers } from \"../../containers/CandidateExams/CandidateExams\";\nimport Loading from \"../Loading/Loading\";\nimport { QuestionLanguage } from \"../../interfaces\";\nimport { findQuestionType } from \"../../containers/DoExam/utils/utils\";\nimport { questionTypeElementsType } from \"@mastrecruit/common\";\nimport { EmbeddedQuestion } from \"../QuestionPreview/QuestionPreview\";\nimport FindAnswerHybrid from \"../../containers/DoExam/DoExamTitle/FindAnswerHybrid\";\n\ninterface AnswersDetailsProps {\n  exam_id: ExamDoneDetailsAnswers;\n  showAnswers: boolean;\n  allAnswers?: ExamAnswerSheetDone[];\n  user_id?: string;\n  questionTypes: questionTypesStoreInterface;\n  requestUserAnswers: (\n    exam_id: string,\n    user_id: string,\n    callback: (loading: boolean) => void\n  ) => void;\n  FC_GetProfileDetails: Function;\n  auth: Auth;\n  candidateExam: candidateExamStoreInterface;\n  loadQuestionTypes: (callback: (loading: boolean) => void) => void;\n  loadExamsDone: (\n    periodId: string,\n    userId: string,\n    callback: (loading: boolean) => void\n  ) => void;\n  system: System;\n  course: courseStoreInterface;\n  loadCourses: (callback: (loading: boolean) => void) => void;\n}\ninterface AnswersDetailsState {\n  loading: boolean;\n  loadingStatus: boolean;\n}\n\nexport class _AnswersDetails extends Component<\n  AnswersDetailsProps,\n  AnswersDetailsState\n> {\n  constructor(props: AnswersDetailsProps) {\n    super(props);\n\n    this.state = {\n      loading: false,\n      loadingStatus: false,\n    };\n  }\n  setLoading = (status: boolean) => {\n    this.setState({ loading: status });\n  };\n  setLoadingStatus = (status: boolean) => {\n    this.setState({ loadingStatus: status });\n  };\n  componentDidMount = () => {\n    if (\n      this.props.questionTypes.questionTypes === null ||\n      this.props.questionTypes.questionTypes.length === 0\n    ) {\n      this.props.loadQuestionTypes(this.setLoading);\n    }\n    if (this.props.exam_id) {\n      if (this.props.course.courses === null) {\n        this.props.loadCourses(this.setLoading);\n      }\n      let check = this.props.candidateExam.user_exams_done.find(\n        (itm) =>\n          itm.course === this.props.exam_id.course &&\n          itm.period === this.props.exam_id.period &&\n          DATE(itm.exam_date) === DATE(this.props.exam_id.exam_date)\n      );\n      // Check if user exams loaded\n      if (\n        (this.props.candidateExam.user_exams_done.length === 0 ||\n          check === undefined) &&\n        this.props.allAnswers === undefined\n      ) {\n        this.props.loadExamsDone(\n          this.props.exam_id.period,\n          this.props.auth.user.user_id,\n          this.setLoadingStatus\n        );\n      }\n      if (check !== undefined) {\n        if (\n          this.props.candidateExam.user_exams_done.find(\n            (item) => item.exam_paper === check?.exam_paper\n          ) === undefined\n        ) {\n          this.props.requestUserAnswers(\n            check.exam_paper,\n            this.props.user_id === undefined\n              ? this.props.auth.user.user_id\n              : this.props.user_id,\n            this.setLoading\n          );\n        }\n      }\n    }\n  };\n  userAnswersTotalMarks = (user_answers: ExamAnswerSheetDone) => {\n    let total: number = 0;\n    for (let item of user_answers.user_answers) {\n      total += item.user_marks;\n    }\n    return total;\n  };\n  render() {\n    let user_exam_details: ExamAnswerSheetDone | undefined =\n      this.props.allAnswers === undefined\n        ? this.props.candidateExam.user_exams_done.find(\n            (itm) =>\n              itm.course === this.props.exam_id.course &&\n              itm.period === this.props.exam_id.period &&\n              DATE(itm.exam_date) === DATE(this.props.exam_id.exam_date)\n          )\n        : this.props.allAnswers.find(\n            (itm) =>\n              itm.course === this.props.exam_id.course &&\n              itm.period === this.props.exam_id.period &&\n              DATE(itm.exam_date) === DATE(this.props.exam_id.exam_date)\n          );\n    if (\n      this.state.loading === true ||\n      this.state.loadingStatus === true ||\n      this.props.course.courses === null\n    ) {\n      return (\n        <div className=\"my-6 rounded bg-white p-3\">\n          <Loading />\n        </div>\n      );\n    }\n    if (user_exam_details === undefined) {\n      return (\n        <div className=\"my-6 rounded bg-white p-3\">\n          <span className=\"text-4xl font-bold\">Exam details not found!</span>\n        </div>\n      );\n    }\n    return (\n      <div className=\"p-2 bg-gray-100\">\n        <div className=\"mb-5 -mt-5\">\n          {user_exam_details !== undefined && (\n            <div className=\"mt-5\">\n              <div className=\"px-3 mb-2 flex flex-row items-center gap-3\">\n                <div>\n                  <AiOutlineFileText className=\"text-5xl text-gray-500\" />\n                </div>\n                <div\n                  className=\"text-2xl font-extrabold\"\n                  dangerouslySetInnerHTML={{\n                    __html: \"Exam for \" + this.props.exam_id.course_name,\n                  }}\n                ></div>\n              </div>\n              <div className=\" p-3 bg-white rounded-t mb-0 border-b\">\n                <div className=\"text-sm text-gray-500 font-bold\">\n                  Exam date:\n                </div>\n                <div\n                  className=\"text-base font-bold\"\n                  dangerouslySetInnerHTML={{\n                    __html: DATE(this.props.exam_id.exam_date),\n                  }}\n                ></div>\n              </div>\n              <div className=\" p-3 bg-white mb-0 border-b\">\n                <div className=\"text-sm text-gray-500 font-bold\">\n                  Exam description:\n                </div>\n                <div\n                  className=\"text-base font-bold\"\n                  dangerouslySetInnerHTML={{\n                    __html: this.props.exam_id.discription,\n                  }}\n                ></div>\n              </div>\n              <div className=\" p-3 bg-white rounded-b mb-0\">\n                <div className=\"text-sm text-gray-500 font-bold\">\n                  Exam terms and conditions:\n                </div>\n                <div\n                  className=\"text-base font-bold\"\n                  dangerouslySetInnerHTML={{\n                    __html: this.props.exam_id.termes,\n                  }}\n                ></div>\n              </div>\n            </div>\n          )}\n        </div>\n        <div className=\"text-2xl font-extrabold text-blue-600 px-2 mb-3\">\n          Exam answers & marks\n        </div>\n        {user_exam_details === undefined ? (\n          \"Not Found\"\n        ) : user_exam_details.user_answers.length === 0 ? (\n          <div>\n            <div className=\"p-5 rounded-lg bg-yellow-100 text-black text-xl mb-5 text-center border border-white shadow-lg animate__animated animate__shakeX\">\n              Exam answers not found, You did not submit the exam!\n            </div>\n          </div>\n        ) : (\n          user_exam_details.user_answers.map((item, i) => (\n            <div\n              key={i + 1}\n              className=\"bg-white hover:bg-white border border-white hover:border-blue-400 px-2 py-2 rounded  animate__animated animate__fadeIn animate__fast group mb-2\"\n            >\n              <div className=\"grid md:grid-cols-11 w-full\">\n                <div className=\"col-span-12 flex flex-row items-center gap-3\">\n                  <div\n                    key={i + 1}\n                    className=\"w-6 h-6 p-2 rounded-full bg-gray-600 flex justify-center items-center font-bold text-lg text-white cursor-pointer\"\n                  >\n                    {i + 1}\n                  </div>\n                  {user_exam_details &&\n                    user_exam_details.questions.find(\n                      (itm) => itm.question_id === item.question\n                    ) !== undefined && (\n                      <div className=\"text-sm w-full\">\n                        {user_exam_details.questions.find(\n                          (itm) => itm.question_id === item.question\n                        ) &&\n                        findQuestionType(\n                          user_exam_details.questions.find(\n                            (itm) => itm.question_id === item.question\n                          )!.type,\n                          this.props.questionTypes.questionTypes\n                        ) !== null &&\n                        findQuestionType(\n                          user_exam_details.questions.find(\n                            (itm) => itm.question_id === item.question\n                          )!.type,\n                          this.props.questionTypes.questionTypes\n                        ) === questionTypeElementsType.Embedded ? (\n                          EmbeddedQuestion(\n                            user_exam_details.questions.find(\n                              (itm) => itm.question_id === item.question\n                            )!,\n                            this.props.questionTypes.questionTypes,\n                            item.language as QuestionLanguage,\n                            [\n                              {\n                                question_id: item.question,\n                                status: true,\n                                answers: item.answers,\n                                language: item.language as QuestionLanguage,\n                              },\n                            ],\n                            () => {}\n                          )\n                        ) : (\n                          <div\n                            dangerouslySetInnerHTML={{\n                              __html: user_exam_details.questions\n                                .find(\n                                  (itm) => itm.question_id === item.question\n                                )!\n                                .question.find(\n                                  (test) => test.language === item.language\n                                )!.description,\n                            }}\n                            className=\"font-bold text-gray-700 text-base\"\n                          ></div>\n                        )}\n                        {console.log(\n                          \"Test selected exam: \",\n                          item.answers,\n                          item.language\n                        )}\n                        <div className=\"text-blue-700 font-bold text-sm w-full\">\n                          {findQuestionType(\n                            user_exam_details.questions.find(\n                              (itm) => itm.question_id === item.question\n                            )!.type,\n                            this.props.questionTypes.questionTypes\n                          ) !== null &&\n                          findQuestionType(\n                            user_exam_details.questions.find(\n                              (itm) => itm.question_id === item.question\n                            )!.type,\n                            this.props.questionTypes.questionTypes\n                          ) === questionTypeElementsType.Embedded\n                            ? \"\"\n                            : \"Answer: \"}\n                          {this.props.questionTypes.questionTypes !== null &&\n                            user_exam_details.user_answers.find(\n                              (itm) => itm.question === item.question\n                            ) && (\n                              <div className=\"mb-2\">\n                                {findQuestionType(\n                                  user_exam_details.questions.find(\n                                    (itm) => itm.question_id === item.question\n                                  )!.type,\n                                  this.props.questionTypes.questionTypes\n                                ) &&\n                                findQuestionType(\n                                  user_exam_details.questions.find(\n                                    (itm) => itm.question_id === item.question\n                                  )!.type,\n                                  this.props.questionTypes.questionTypes\n                                ) === questionTypeElementsType.Hybrid ? (\n                                  <FindAnswerHybrid\n                                    selectedLanguage={\n                                      item.language as QuestionLanguage\n                                    }\n                                    questionTypes={this.props.questionTypes}\n                                    auth={this.props.auth}\n                                    candidateExam={this.props.candidateExam}\n                                    answersList={[\n                                      {\n                                        question_id: item.question,\n                                        status: true,\n                                        answers: item.answers,\n                                        language:\n                                          item.language as QuestionLanguage,\n                                      },\n                                    ]}\n                                    system={this.props.system}\n                                    setSelectedExamQuestion={() => {}}\n                                    submitQuestionAnswer={false}\n                                    loadQuestionTypes={\n                                      this.props.loadQuestionTypes\n                                    }\n                                    submitExam={() => {}}\n                                    selectedExam={\n                                      user_exam_details === undefined ||\n                                      this.props.course.courses === null\n                                        ? null\n                                        : this.props.course.courses.find(\n                                            (itm) =>\n                                              user_exam_details !== undefined &&\n                                              itm.course_id ===\n                                                user_exam_details.questions.find(\n                                                  (itm) =>\n                                                    itm.question_id ===\n                                                    item.question\n                                                )!.course\n                                          )!\n                                    }\n                                    setSubmitModal={(status: boolean) => {}}\n                                    wholeQuestion={\n                                      user_exam_details.questions.find(\n                                        (itm) =>\n                                          itm.question_id === item.question\n                                      )!\n                                    }\n                                  />\n                                ) : (\n                                  <FindAnswer\n                                    selectedLanguage={item.language}\n                                    question={{\n                                      is_deleted:\n                                        user_exam_details.questions.find(\n                                          (itm) =>\n                                            itm.question_id === item.question\n                                        )!.is_deleted,\n                                      question_id: item.question,\n                                      course: user_exam_details.questions.find(\n                                        (itm) =>\n                                          itm.question_id === item.question\n                                      )!.course,\n                                      question:\n                                        user_exam_details.questions.find(\n                                          (itm) =>\n                                            itm.question_id === item.question\n                                        )!.question,\n                                      type: user_exam_details.questions.find(\n                                        (itm) =>\n                                          itm.question_id === item.question\n                                      )!.type,\n                                      chapters:\n                                        user_exam_details.questions.find(\n                                          (itm) =>\n                                            itm.question_id === item.question\n                                        )!.chapters,\n                                      customNumber:\n                                        user_exam_details.questions.find(\n                                          (itm) =>\n                                            itm.question_id === item.question\n                                        )!.customNumber,\n                                      marks: user_exam_details.questions.find(\n                                        (itm) =>\n                                          itm.question_id === item.question\n                                      )!.marks,\n                                      answers: user_exam_details.questions.find(\n                                        (itm) =>\n                                          itm.question_id === item.question\n                                      )!.answers,\n                                    }}\n                                    answersList={[\n                                      {\n                                        question_id: item.question,\n                                        status: true,\n                                        answers:\n                                          user_exam_details.user_answers.find(\n                                            (itm) =>\n                                              itm.question === item.question\n                                          )!.answers,\n                                        language:\n                                          item.language as QuestionLanguage,\n                                      },\n                                    ]}\n                                    questionTypes={\n                                      this.props.questionTypes.questionTypes\n                                    }\n                                    showCorrectAnswer={this.props.showAnswers}\n                                    onClick={() => {}}\n                                  />\n                                )}\n                              </div>\n                            )}\n                        </div>\n                      </div>\n                    )}\n                </div>\n              </div>\n              <div className=\"col-span-1 flex items-center justify-between\">\n                <div></div>\n\n                <div className=\"w-max flex flex-col items-end justify-center bg-blue-50 rounded-md px-3 py-1 group-hover:bg-blue-100\">\n                  <div className=\"text-sm font-semibold text-gray-700\">\n                    Marks\n                  </div>\n                  <div className=\"text-sm font-extrabold text-gray-900 -mt-1\">\n                    <span className=\"text-blue-500\">\n                      {item.user_marks.toFixed(\n                        user_exam_details &&\n                          item.user_marks ===\n                            user_exam_details.questions.find(\n                              (itm) => itm.question_id === item.question\n                            )?.marks\n                          ? 0\n                          : 2\n                      )}\n                    </span>{\" \"}\n                    /{\" \"}\n                    {user_exam_details &&\n                      user_exam_details.questions.find(\n                        (itm) => itm.question_id === item.question\n                      )?.marks}\n                  </div>\n                </div>\n              </div>\n            </div>\n          ))\n        )}\n        <div className=\"flex flex-row items-center justify-between gap-3 mb-10\">\n          <div className=\"bg-blue-100 p-3 pr-3 text-blue-700 flex flex-col items-start justify-center rounded-lg border-2 border-white\">\n            <span className=\"text-gray-700\">Total marks percentage</span>\n            <span className=\"text-3xl font-extrabold\">\n              {user_exam_details &&\n                user_exam_details.total_marks.toFixed(\n                  user_exam_details.total_marks === 100 ||\n                    user_exam_details.total_marks === 0\n                    ? 0\n                    : 2\n                )}\n              %\n            </span>\n          </div>\n          <div>\n            <div className=\"bg-white rounded-lg p-3\">\n              <div className=\"text-gray-500 font-bold text-base text-right\">\n                Exam total marks\n              </div>\n              {user_exam_details !== undefined && (\n                <div className=\"font-extrabold text-3xl text-gray-900 text-right\">\n                  {this.userAnswersTotalMarks(user_exam_details).toFixed(\n                    this.userAnswersTotalMarks(user_exam_details) ===\n                      user_exam_details.exam_total_marks ||\n                      this.userAnswersTotalMarks(user_exam_details) === 0\n                      ? 0\n                      : 2\n                  )}{\" \"}\n                  / {user_exam_details.exam_total_marks}\n                </div>\n              )}\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = ({\n  auth,\n  candidateExam,\n  candidateApplications,\n  questionTypes,\n  system,\n  course,\n}: StoreState): {\n  auth: Auth;\n  candidateExam: candidateExamStoreInterface;\n  candidateApplications: CandidateApplicationsStoreInterface;\n  questionTypes: questionTypesStoreInterface;\n  system: System;\n  course: courseStoreInterface;\n} => {\n  return {\n    auth: auth,\n    candidateExam: candidateExam,\n    candidateApplications: candidateApplications,\n    questionTypes: questionTypes,\n    system: system,\n    course: course,\n  };\n};\n\nexport const AnswersDetails = connect(mapStateToProps, {\n  FC_GetProfileDetails,\n  LoadCandidateApplications,\n  setSelectedCandidateExam,\n  setSelectedCourse,\n  setSelectedPosition,\n  InitializeExamDetails,\n  loadExamsDone,\n  AddUserApplication,\n  loadApplicationPeriods,\n  requestUserAnswers,\n  loadQuestionTypes,\n  loadCourses,\n})(_AnswersDetails);\n","import axios from \"axios\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport {\n  Auth,\n  getMyClaims,\n  createClaim,\n  GetClaimingTypes,\n  getMyRejectedApplications,\n  getMyRejectedDocuments,\n  PushPopupAlert,\n  DocumentClaimUser,\n  getMyAnswers,\n  getClaimReasons,\n  CandidateApplicationsStoreInterface,\n  candidateExamStoreInterface,\n} from \"../../actions\";\nimport {\n  getDocumentCategory,\n  getDocumentSubCategory,\n  getDocumentFields,\n} from \"../../actions/document\";\nimport ApplicationFormView from \"../../containers/Claimings/Candidate/ApplicationFormView\";\nimport ChooseReason from \"../../containers/Claimings/Candidate/ChooseReason\";\nimport { ClaimGetDocTitle } from \"../../containers/Claimings/Candidate/ClaimForm\";\nimport DocFormView from \"../../containers/Claimings/Candidate/DocFormView\";\nimport FormApplicationList from \"../../containers/Claimings/Candidate/FormApplicationList\";\nimport FormDocumentList from \"../../containers/Claimings/Candidate/FormDocumentList\";\nimport {\n  PlansTypeKeys,\n  CandidateClaimInterface,\n  claimApplicationsInterface,\n  claimReasonInterface,\n} from \"../../interfaces\";\nimport {\n  ApplicationStates,\n  GetApplicationsAPI,\n} from \"../../interfaces/application\";\nimport { ExamAnswerSheetDone } from \"../../interfaces/exam\";\nimport { PopupAlertTheme } from \"../../interfaces/popupAlert\";\nimport { StoreState } from \"../../reducers\";\nimport { ClaimingReducerType } from \"../../reducers/claiming\";\nimport { DocumentReducerInterface } from \"../../reducers/document\";\nimport { capitalizeFirstLetter, isEmptyOrSpaces } from \"../../shared/dataTest\";\nimport { UserInterface } from \"../../shared/interfaces\";\nimport { API } from \"../../utils/api\";\nimport { setAxiosToken } from \"../../utils/AxiosToken\";\nimport { errorToText } from \"../../utils/errors\";\nimport { DATE } from \"../../utils/functions\";\nimport { PopupAlertData } from \"../Alert/Popup\";\nimport Loading from \"../Loading/Loading\";\n\nconst getCourseIdBySheetId = (\n  allData: ExamAnswerSheetDone[],\n  sheet_id: string\n) => {\n  return allData.find((item) => item.answer_sheet_id === sheet_id);\n};\n\ntype ClaimFormProps = {\n  claim_type: PlansTypeKeys;\n  file_id: string;\n  setFormState: (value: boolean, response?: boolean) => void;\n  auth: Auth;\n  claiming: ClaimingReducerType;\n  documentReducer: DocumentReducerInterface;\n  candidateApplications: CandidateApplicationsStoreInterface;\n  candidateExam: candidateExamStoreInterface;\n  createClaim: Function;\n  GetClaimingTypes: Function;\n  getDocumentCategory: Function;\n  getDocumentSubCategory: Function;\n  getDocumentFields: Function;\n  getMyRejectedApplications: Function;\n  getMyRejectedDocuments: Function;\n  getMyClaims: Function;\n  getMyAnswers: Function;\n  getClaimReasons: Function;\n  PushPopupAlert: (alert: PopupAlertData) => void;\n\n  // DEFAULT DATA ==========\n  // candidateDocuments?: DocumentClaimUser[];\n  // candidateAnswers?: ClaimExamResultsDetails[];\n  // candidateApplications?: claimApplicationsInterface[];\n};\n\ntype ClaimFormState = {\n  loading: boolean;\n  loadingForm: boolean;\n  formError: {\n    element: string;\n    msg: string;\n  } | null;\n  thisClaimType: PlansTypeKeys | null;\n  thisClaimTypeId: string;\n  claimComment: string;\n  claimFileId: string;\n  chooseClaimFile: boolean;\n  chooseClaimReason: boolean;\n  claimReason: claimReasonInterface | null;\n  viewThisFile: string;\n  formType: \"DEFAULT\" | \"PROPS\";\n  alertError: string | null;\n};\n\nexport class ClaimFormComponent extends Component<\n  ClaimFormProps,\n  ClaimFormState\n> {\n  constructor(props: ClaimFormProps) {\n    super(props);\n\n    this.state = {\n      loading: true,\n      loadingForm: false,\n      formError: null,\n      thisClaimType: null,\n      thisClaimTypeId: \"\",\n      claimComment: \"\",\n      claimFileId: \"\",\n      chooseClaimFile: false,\n      viewThisFile: \"\",\n      formType: \"DEFAULT\",\n      alertError: null,\n      chooseClaimReason: false,\n      claimReason: null,\n    };\n  }\n\n  // GENERATE SET STATES FUNCTIONS\n  setLoading = (state: boolean) => {\n    this.setState({ loading: state });\n  };\n\n  setLoadingForm = (state: boolean) => {\n    this.setState({ loadingForm: state });\n  };\n\n  setFormError = (\n    data: {\n      element: string;\n      msg: string;\n    } | null\n  ) => {\n    this.setState({ formError: data });\n  };\n\n  setAlertError = (data: string | null) => {\n    this.setState({ alertError: data });\n  };\n\n  setClaimFileId = (data: string) => {\n    this.setState({ claimFileId: data });\n  };\n\n  setViewThisFile = (data: string) => {\n    this.setState({ viewThisFile: data });\n  };\n\n  setChooseClaimFile = (data: boolean) => {\n    this.setState({ chooseClaimFile: data });\n  };\n\n  setClaimComment = (data: string) => {\n    this.setState({ claimComment: data });\n  };\n\n  setChooseClaimReason = (value: boolean) => {\n    this.setState({ chooseClaimReason: value });\n  };\n\n  setClaimReason = (value: claimReasonInterface | null) => {\n    this.setState({ claimReason: value });\n  };\n\n  // CHECK IF PASSED ID IS VALID\n  isDocumentIdValid = (\n    documents: DocumentClaimUser[],\n    doc_id: string\n  ): {\n    status: boolean;\n    msg: string;\n    alert: PopupAlertTheme;\n  } => {\n    let doc = documents.find((item) => item.doc_id === doc_id);\n    if (doc) {\n      // CHECK IF DOCUMENT HAS REJECTED STATUS\n      if (doc.validated_by.validation_status !== \"rejected\") {\n        return {\n          status: false,\n          msg: \"Only rejected document are allowed for claim\",\n          alert: PopupAlertTheme.info,\n        };\n      }\n      return { status: true, msg: \"\", alert: PopupAlertTheme.success };\n    } else {\n      return {\n        status: false,\n        msg: \"Invalid document id\",\n        alert: PopupAlertTheme.warning,\n      };\n    }\n  };\n\n  isApplicationIdValid = (\n    applications: GetApplicationsAPI[],\n    app_id: string\n  ): {\n    status: boolean;\n    msg: string;\n    alert: PopupAlertTheme;\n  } => {\n    const app = applications.find((item) => item.application_id === app_id);\n    if (app) {\n      // CHECK IF DOCUMENT HAS REJECTED STATUS\n      if (app.application_status !== ApplicationStates.Rejected) {\n        return {\n          status: false,\n          msg: \"Only rejected application are allowed for claim\",\n          alert: PopupAlertTheme.info,\n        };\n      }\n      // CHECK IF DOCUMENT HAS ALREADY CLAIMED ON\n      return { status: true, msg: \"\", alert: PopupAlertTheme.info };\n    } else {\n      return {\n        status: false,\n        msg: \"Invalid application id\",\n        alert: PopupAlertTheme.warning,\n      };\n    }\n  };\n\n  isExamIdValid = (\n    exams: ExamAnswerSheetDone[],\n    exam_id: string\n  ): {\n    status: boolean;\n    msg: string;\n    alert: PopupAlertTheme;\n  } => {\n    const exam = exams.find((item) => item.answer_sheet_id === exam_id);\n    if (exam) {\n      // CHECK IF DOCUMENT HAS REJECTED STATUS\n      if (exam.total_marks === 100) {\n        return {\n          status: false,\n          msg: \"You can't claim on exam which you have 100%\",\n          alert: PopupAlertTheme.info,\n        };\n      }\n\n      return { status: true, msg: \"\", alert: PopupAlertTheme.info };\n    } else {\n      return {\n        status: false,\n        msg: \"Invalid answer sheet id\",\n        alert: PopupAlertTheme.warning,\n      };\n    }\n    // return {\n    //   status: false,\n    //   msg: \"No Application, please try again!\",\n    //   alert: PopupAlertTheme.info,\n    // };\n  };\n\n  componentDidMount = () => {\n    if (this.props.auth.application_session === null) {\n      this.props.PushPopupAlert({\n        title: \"No session active session\",\n        theme: PopupAlertTheme.danger,\n      });\n      this.props.setFormState(false);\n      this.setState({\n        claimFileId: \"\",\n        thisClaimType: null,\n        thisClaimTypeId: \"\",\n        claimComment: \"\",\n        chooseClaimFile: false,\n        formType: \"DEFAULT\",\n        viewThisFile: \"\",\n        formError: null,\n      });\n    } else {\n      if (\n        this.props.documentReducer.documentCategory === null &&\n        this.props.claim_type === PlansTypeKeys.DOCUMENT_VALIDATION\n      ) {\n        this.props.getDocumentCategory();\n      }\n      if (\n        this.props.documentReducer.documentSubCategory === null &&\n        this.props.claim_type === PlansTypeKeys.DOCUMENT_VALIDATION\n      ) {\n        this.props.getDocumentSubCategory();\n      }\n      if (\n        this.props.documentReducer.documentFields === null &&\n        this.props.claim_type === PlansTypeKeys.DOCUMENT_VALIDATION\n      ) {\n        this.props.getDocumentFields();\n      }\n      if (\n        this.props.candidateApplications.candidate_applications !== null &&\n        this.props.claim_type === PlansTypeKeys.APPLICATION\n      )\n        this.setLoading(false);\n\n      if (\n        (this.props.claiming.candidateDocuments === null ||\n          this.props.claiming.candidateDocuments.length !==\n            this.props.auth.documents.length) &&\n        this.props.claim_type === PlansTypeKeys.DOCUMENT_VALIDATION\n      ) {\n        this.props.getMyRejectedDocuments(\n          (status: boolean, msg: string, data?: DocumentClaimUser[]) => {\n            this.setLoading(status);\n            if (!status) {\n              if (msg.length > 0) {\n                this.props.PushPopupAlert({\n                  title: msg,\n                  theme: PopupAlertTheme.danger,\n                });\n              }\n              if (data) {\n                // PROPS VALIDATION PROCESS ###############\n                if (\n                  this.props.claim_type &&\n                  this.props.file_id &&\n                  this.state.formType === \"DEFAULT\"\n                ) {\n                  if (\n                    this.props.claim_type === PlansTypeKeys.DOCUMENT_VALIDATION\n                  ) {\n                    let _isDocumentIdValid = this.isDocumentIdValid(\n                      data,\n                      this.props.file_id\n                    );\n                    if (!_isDocumentIdValid.status) {\n                      this.props.PushPopupAlert({\n                        title: _isDocumentIdValid.msg,\n                        theme: _isDocumentIdValid.alert,\n                      });\n                      // setAlertError(_isDocumentIdValid.msg);\n                      this.props.setFormState(false);\n                    } else {\n                      this.setState({\n                        thisClaimType: this.props.claim_type,\n                        claimFileId: this.props.file_id,\n                        formType: \"PROPS\",\n                      });\n                    }\n                  }\n                }\n              }\n            }\n          }\n        );\n      } else this.setLoading(false);\n\n      if (this.props.claim_type === PlansTypeKeys.EXAMINATION)\n        this.setLoading(false);\n\n      if (this.props.claiming.claimReasons === null) {\n        this.props.getClaimReasons((status: boolean, msg: string) => {\n          this.setLoading(status);\n          if (!status) {\n            if (msg.length > 0) {\n              this.props.PushPopupAlert({\n                title: msg,\n                theme: PopupAlertTheme.danger,\n              });\n            }\n          }\n        });\n      }\n\n      if (this.props.claiming.myClaims === null) {\n        this.props.getMyClaims(\n          this.props.auth.user.user_id,\n          this.props.auth.application_session.session_plan_id,\n          (status: boolean, msg: string) => {\n            this.setLoading(status);\n            if (status === false && msg.length) {\n              this.props.PushPopupAlert({\n                title: msg,\n                theme: PopupAlertTheme.danger,\n              });\n            }\n          }\n        );\n      } else this.setLoading(false);\n\n      // PROPS VALIDATION PROCESS ###############\n      if (\n        !isEmptyOrSpaces(this.props.claim_type) &&\n        !isEmptyOrSpaces(this.props.file_id) &&\n        this.state.formType === \"DEFAULT\"\n      ) {\n        this.setState({ thisClaimType: this.props.claim_type });\n        if (\n          this.props.claim_type === PlansTypeKeys.DOCUMENT_VALIDATION &&\n          this.props.claiming.candidateDocuments\n        ) {\n          let _isDocumentIdValid = this.isDocumentIdValid(\n            this.props.claiming.candidateDocuments,\n            this.props.file_id\n          );\n          if (!_isDocumentIdValid.status) {\n            this.props.PushPopupAlert({\n              title: _isDocumentIdValid.msg,\n              theme: _isDocumentIdValid.alert,\n            });\n            // setAlertError(_isDocumentIdValid.msg);\n            this.props.setFormState(false);\n          } else {\n            this.setState({\n              thisClaimType: this.props.claim_type,\n              claimFileId: this.props.file_id,\n              formType: \"PROPS\",\n            });\n          }\n        }\n        if (\n          this.props.claim_type === PlansTypeKeys.APPLICATION &&\n          this.props.candidateApplications.candidate_applications\n        ) {\n          let _isApplicationIdValid = this.isApplicationIdValid(\n            this.props.candidateApplications.candidate_applications,\n            this.props.file_id\n          );\n          if (!_isApplicationIdValid.status) {\n            this.props.PushPopupAlert({\n              title: _isApplicationIdValid.msg,\n              theme: _isApplicationIdValid.alert,\n            });\n            this.props.setFormState(false);\n          } else {\n            this.setState({\n              thisClaimType: this.props.claim_type,\n              claimFileId: this.props.file_id,\n              formType: \"PROPS\",\n            });\n          }\n        }\n\n        if (\n          this.props.claim_type === PlansTypeKeys.EXAMINATION &&\n          this.props.candidateExam.user_exams_done\n        ) {\n          let _isExamIdValid = this.isExamIdValid(\n            this.props.candidateExam.user_exams_done,\n            this.props.file_id\n          );\n          if (!_isExamIdValid.status) {\n            this.props.PushPopupAlert({\n              title: _isExamIdValid.msg,\n              theme: _isExamIdValid.alert,\n            });\n            this.props.setFormState(false);\n          } else {\n            this.setState({\n              thisClaimType: this.props.claim_type,\n              claimFileId: this.props.file_id,\n              formType: \"PROPS\",\n            });\n          }\n        }\n      }\n    }\n  };\n\n  getDocumentById = (\n    documents: DocumentClaimUser[],\n    doc_id: string\n  ): DocumentClaimUser => {\n    return documents.filter((item) => item.doc_id === doc_id)[0];\n  };\n\n  getApplicationById = (\n    applications: GetApplicationsAPI[],\n    application_id: string\n  ): claimApplicationsInterface | undefined => {\n    let result: claimApplicationsInterface | undefined = undefined;\n    let thisApplication = applications.find(\n      (item) => item.application_id === application_id\n    );\n\n    if (thisApplication)\n      result = {\n        application_id: thisApplication.application_id,\n        application_period: thisApplication.application_session.session_plan_id,\n        createdAt: thisApplication.createdAt,\n        exams: thisApplication.exams,\n        position: thisApplication.position,\n        application_status:\n          thisApplication.application_status as ApplicationStates,\n        updatedAt: thisApplication.updatedAt,\n        user_id: thisApplication.user_id,\n        application_history: thisApplication.application_history,\n        application_session: thisApplication.application_session,\n        override_by: {\n          application_status: thisApplication.override_by.application_status,\n          comment: thisApplication.override_by.comment,\n          date: thisApplication.override_by.date,\n          user_id: thisApplication.override_by.user_id,\n        },\n      };\n\n    return result;\n  };\n\n  getValidation = (\n    thisId: string\n  ): {\n    old_reason: string;\n    old_status: string;\n    old_evaluated_by: string;\n  } => {\n    let result: {\n      old_reason: string;\n      old_status: string;\n      old_evaluated_by: string;\n    } = { old_reason: \"\", old_status: \"\", old_evaluated_by: \"\" };\n\n    if (\n      this.state.thisClaimType === PlansTypeKeys.DOCUMENT_VALIDATION &&\n      this.props.claiming.candidateDocuments\n    ) {\n      result = {\n        old_reason: this.getDocumentById(\n          this.props.claiming.candidateDocuments,\n          thisId\n        ).validated_by.comment,\n        old_status: this.getDocumentById(\n          this.props.claiming.candidateDocuments,\n          thisId\n        ).validated_by.validation_status,\n        old_evaluated_by: this.getDocumentById(\n          this.props.claiming.candidateDocuments,\n          thisId\n        ).validated_by.user_id,\n      };\n    } else if (\n      this.state.thisClaimType === PlansTypeKeys.APPLICATION &&\n      this.props.candidateApplications.candidate_applications &&\n      this.getApplicationById(\n        this.props.candidateApplications.candidate_applications,\n        thisId\n      )\n    ) {\n      result = {\n        old_reason: this.getApplicationById(\n          this.props.candidateApplications.candidate_applications,\n          thisId\n        )!.override_by.comment,\n        old_status: this.getApplicationById(\n          this.props.candidateApplications.candidate_applications,\n          thisId\n        )!.override_by.application_status,\n        old_evaluated_by: this.getApplicationById(\n          this.props.candidateApplications.candidate_applications,\n          thisId\n        )!.override_by.user_id,\n      };\n    }\n\n    return result;\n  };\n\n  loadUserById = async (user_id: string, callback: Function) => {\n    if (isEmptyOrSpaces(user_id)) {\n      return this.props.PushPopupAlert({\n        title: \"No user id provided\",\n        theme: PopupAlertTheme.danger,\n      });\n    }\n    try {\n      setAxiosToken();\n      const res = await axios.get<UserInterface>(\n        `${API.AUTH}/users/${user_id}`\n      );\n      console.log(\"====================================\");\n      console.log({ loadUserById: res });\n      console.log(\"====================================\");\n      if (res) {\n        callback(res.data);\n      }\n    } catch (error) {\n      console.error({ error });\n      this.props.PushPopupAlert({\n        title: errorToText(error),\n        theme: PopupAlertTheme.danger,\n      });\n    }\n  };\n\n  getClaimTitle = (claimType: PlansTypeKeys): string => {\n    let result: string = \"\";\n    // title from document\n    if (\n      claimType === PlansTypeKeys.DOCUMENT_VALIDATION &&\n      this.props.claiming.candidateDocuments\n    ) {\n      result = ClaimGetDocTitle(\n        this.props.documentReducer,\n        this.getDocumentById(\n          this.props.claiming.candidateDocuments,\n          this.state.claimFileId\n        )\n      ).main;\n    }\n    // title from application\n    if (\n      claimType === PlansTypeKeys.APPLICATION &&\n      this.props.candidateApplications.candidate_applications &&\n      this.getApplicationById(\n        this.props.candidateApplications.candidate_applications,\n        this.state.claimFileId\n      )\n    ) {\n      result = this.getApplicationById(\n        this.props.candidateApplications.candidate_applications,\n        this.state.claimFileId\n      )!.position.position_title;\n    }\n    // title from examination\n    if (\n      claimType === PlansTypeKeys.EXAMINATION &&\n      getCourseIdBySheetId(\n        this.props.candidateExam.user_exams_done,\n        this.state.claimFileId\n      )\n    ) {\n      result = getCourseIdBySheetId(\n        this.props.candidateExam.user_exams_done,\n        this.state.claimFileId\n      )!.course;\n    }\n    // if (\n    //   claimType === PlansTypeKeys.PLACEMENT_TRANSFER &&\n    //   this.state.myPlacement\n    // ) {\n    //   result = \"Placed on \" + this.state.myPlacement.placed.school.school_name;\n    // }\n\n    return result;\n  };\n\n  cleanToClose = () => {\n    this.props.setFormState(false);\n    this.setState({\n      claimFileId: \"\",\n      thisClaimType: null,\n      thisClaimTypeId: \"\",\n      claimComment: \"\",\n      chooseClaimFile: false,\n      formType: \"DEFAULT\",\n      viewThisFile: \"\",\n      formError: null,\n    });\n  };\n\n  handleSubmit = async (e: React.FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n    if (!this.state.thisClaimType) {\n      return this.setFormError({\n        element: \"claim_type\",\n        msg: \"Claim type is required!\",\n      });\n    }\n    if (isEmptyOrSpaces(this.state.claimFileId)) {\n      return this.setFormError({\n        element: \"claim_file\",\n        msg: `Please select ${this.state.thisClaimType.toLocaleLowerCase()} you are claiming on!`,\n      });\n    }\n\n    if (!this.state.claimReason) {\n      return this.setFormError({\n        element: \"claim_reason\",\n        msg: `Please select the reason of your claim!`,\n      });\n    }\n\n    if (isEmptyOrSpaces(this.state.claimComment)) {\n      return this.setFormError({\n        element: \"claim_comment\",\n        msg: `Claim comment is required!`,\n      });\n    }\n\n    if (!this.props.auth.application_session) {\n      return this.setAlertError(`No active claiming session is available!`);\n    }\n    let old_evaluator_email: string = \"info@system.com\";\n    let old_evaluator_name: string = \"System\";\n    let evaluator_email: string = \"\";\n    let evaluator_name: string = \"\";\n    let title: string = this.getClaimTitle(this.state.thisClaimType);\n\n    if (\n      this.state.thisClaimType !== PlansTypeKeys.EXAMINATION &&\n      this.getValidation(this.state.claimFileId).old_evaluated_by !== \"system\"\n    ) {\n      await this.loadUserById(\n        this.getValidation(this.state.claimFileId).old_evaluated_by,\n        (data: UserInterface) => {\n          old_evaluator_email = data.email;\n          old_evaluator_name =\n            data.user_info.fname + \" \" + data.user_info.lname;\n        }\n      );\n    }\n    this.setLoadingForm(true);\n    try {\n      setAxiosToken();\n      const res = await axios.post<CandidateClaimInterface>(\n        `${API.CLAIMING}/user/create`,\n        {\n          claiming_on_id: this.state.claimFileId,\n          type_key: this.state.thisClaimType,\n          user: this.props.auth.user.user_id,\n          period_id: this.props.auth.application_session.session_plan_id,\n          default_claim_resaons: this.state.claimReason.id,\n          reason: this.state.claimComment,\n          // old_reason: this.getValidation(this.state.claimFileId).old_reason,\n          // old_status: this.getValidation(this.state.claimFileId).old_status,\n          // old_evaluated_by: this.getValidation(this.state.claimFileId)\n          //   .old_evaluated_by,\n          old_reason:\n            this.state.thisClaimType === PlansTypeKeys.EXAMINATION ||\n            this.state.thisClaimType === PlansTypeKeys.PLACEMENT_TRANSFER\n              ? \"System\"\n              : this.getValidation(this.state.claimFileId).old_reason,\n          old_status:\n            this.state.thisClaimType === PlansTypeKeys.EXAMINATION ||\n            this.state.thisClaimType === PlansTypeKeys.PLACEMENT_TRANSFER\n              ? \"Failed\"\n              : this.getValidation(this.state.claimFileId).old_status,\n          old_evaluated_by:\n            this.state.thisClaimType === PlansTypeKeys.EXAMINATION ||\n            this.state.thisClaimType === PlansTypeKeys.PLACEMENT_TRANSFER\n              ? \"\"\n              : this.getValidation(this.state.claimFileId).old_evaluated_by,\n          old_evaluator_email,\n          old_evaluator_name,\n          evaluator_email,\n          evaluator_name,\n          title,\n        }\n      );\n      console.log(\"====================================\");\n      console.log({ createClaim: res.data });\n      console.log(\"====================================\");\n      if (res.status === 201 || res.status === 200) {\n        this.props.createClaim(res.data);\n        this.props.PushPopupAlert({\n          title: \"Claim sent successful\",\n          theme: PopupAlertTheme.success,\n        });\n        this.cleanToClose();\n        this.props.setFormState(false);\n      }\n    } catch (error) {\n      console.error({ error });\n      this.props.PushPopupAlert({\n        title: errorToText(error),\n        theme: PopupAlertTheme.danger,\n      });\n    }\n    this.props.setFormState(false);\n    this.setLoadingForm(false);\n  };\n\n  displayClaimType = (claimType: PlansTypeKeys): string => {\n    let result: string = \"\";\n    switch (claimType) {\n      case PlansTypeKeys.APPLICATION:\n        result = \"application\";\n        break;\n      case PlansTypeKeys.DOCUMENT_VALIDATION:\n        result = \"document\";\n        break;\n      case PlansTypeKeys.EXAMINATION:\n        result = \"exam\";\n        break;\n      case PlansTypeKeys.MARKS_PUBLICATION:\n        result = \"marks publication\";\n        break;\n      case PlansTypeKeys.PLACEMENT_TRANSFER:\n        result = \"placement\";\n        break;\n      default:\n        result = \"\";\n        break;\n    }\n\n    return result;\n  };\n\n  selectClaimType = (thisClaim: string) => {\n    this.setState({\n      thisClaimType: isEmptyOrSpaces(thisClaim)\n        ? null\n        : (thisClaim as PlansTypeKeys),\n    });\n  };\n\n  generateChooseFileTitle = (thisClaimType: PlansTypeKeys | null): string => {\n    let result: string = \"\";\n\n    switch (thisClaimType) {\n      case PlansTypeKeys.APPLICATION:\n        result = `Select application you are claiming on?`;\n        break;\n      case PlansTypeKeys.DOCUMENT_VALIDATION:\n        result = `Select document you are claiming on?`;\n        break;\n      case PlansTypeKeys.EXAMINATION:\n        result = `Select exam you are claiming on?`;\n        break;\n      case PlansTypeKeys.MARKS_PUBLICATION:\n        result = `Select marks publication you are claiming on?`;\n        break;\n      case PlansTypeKeys.PLACEMENT_TRANSFER:\n        result = `Select placement you are claiming on?`;\n        break;\n      default:\n        result = \"Select file you are claiming on?\";\n        break;\n    }\n\n    return result;\n  };\n\n  getClaimById = (\n    myClaims: CandidateClaimInterface[],\n    fileId: string,\n    sessionId: string\n  ): CandidateClaimInterface | undefined => {\n    return myClaims.find(\n      (item) => item.claiming_on_id === fileId && item.period_id === sessionId\n    );\n  };\n\n  render() {\n    // CHECK IF STILL LOADING DATA ===============\n    if (\n      this.props.auth.application_session !== null &&\n      (this.state.loading ||\n        (this.props.claiming.myClaims === null &&\n          !isEmptyOrSpaces(this.props.file_id) &&\n          !isEmptyOrSpaces(this.props.claim_type)))\n    ) {\n      return <Loading />;\n    }\n\n    if (\n      this.props.claiming.myClaims &&\n      this.props.auth.application_session &&\n      this.getClaimById(\n        this.props.claiming.myClaims,\n        this.props.file_id,\n        this.props.auth.application_session.session_plan_id\n      ) !== undefined\n    ) {\n      return (\n        <div>\n          <h2 className=\"text-center text-2xl font-bold p-3 text-gray-500\">\n            Claims on this {this.displayClaimType(this.props.claim_type!)}\n          </h2>\n          {this.getClaimById(\n            this.props.claiming.myClaims,\n            this.props.file_id,\n            this.props.auth.application_session.session_plan_id\n          )!.claims.length >= 1 ? (\n            <div>\n              {this.getClaimById(\n                this.props.claiming.myClaims,\n                this.props.file_id,\n                this.props.auth.application_session.session_plan_id\n              )!.claims.map((itm) => (\n                <div className=\"p-2 border rounded mb-2\">\n                  <div className=\"p-1 border-b\">\n                    <span className=\"text-gray-400\">Created date:</span>{\" \"}\n                    <b>{DATE(itm.createdAt)}</b>\n                  </div>\n                  <div className=\"p-1 border-b\">\n                    <span className=\"text-gray-400\">Reason:</span>{\" \"}\n                    <p>{itm.reason}</p>\n                  </div>\n                  <div className=\"p-1 border-b\">\n                    <span className=\"text-gray-400\">Evaluation comment:</span>{\" \"}\n                    <p>{itm.evaluation_comment}</p>\n                  </div>\n                  <div className=\"p-1\">\n                    <span className=\"text-gray-400 block\">decision:</span>{\" \"}\n                    <h3 className=\"text-xl font-bold\">\n                      {itm.decision_taken_status}\n                    </h3>\n                  </div>\n                </div>\n              ))}\n            </div>\n          ) : (\n            <div>No claims found!</div>\n          )}\n        </div>\n      );\n    }\n\n    return (\n      <div className=\"pb-3\">\n        {/* CLAIM FORM ============================================== */}\n        {this.state.viewThisFile.length <= 0 && (\n          <form onSubmit={(e) => this.handleSubmit(e)}>\n            <div className=\"px-6 pb-3\">\n              {this.state.alertError && (\n                <div\n                  className=\"alert-warning cursor-pointer\"\n                  onClick={() => this.setAlertError(null)}\n                >\n                  {this.state.alertError}\n                </div>\n              )}\n              <div className=\"text-base text-gray-700 sm:text-lg\">\n                {/* SELECT CLAIM TYPE ============================================== */}\n                <div className=\"flex flex-col mb-2\">\n                  <label>Claim type</label>\n                  <select\n                    className={`rounded px-2 py-2 w-full bg-white focus:outline-none ${\n                      this.state.formType === \"PROPS\" && \"cursor-not-allowed\"\n                    } ${\n                      this.state.formError &&\n                      this.state.formError.element === \"claim_type\"\n                        ? \"border-red-500\"\n                        : \"border-gray-500\"\n                    } border-2`}\n                    onChange={(e: React.ChangeEvent<HTMLSelectElement>) => {\n                      this.selectClaimType(e.target.value);\n                      this.setClaimFileId(\"\");\n                      this.state.formError &&\n                        this.state.formError.element === \"claim_type\" &&\n                        this.setFormError(null);\n                    }}\n                    value={\n                      this.state.thisClaimType ? this.state.thisClaimType : \"\"\n                    }\n                    disabled={\n                      this.state.loadingForm || this.state.formType === \"PROPS\"\n                    }\n                  >\n                    <option value=\"\">Choose claim type</option>\n                    {Object.values(PlansTypeKeys).map((item, index) => (\n                      <option value={item} key={index + item}>\n                        {capitalizeFirstLetter(\n                          item.toLocaleLowerCase().replace(/_/g, \" \")\n                        )}\n                      </option>\n                    ))}\n                  </select>\n                  {this.state.formError &&\n                    this.state.formError.element === \"claim_type\" && (\n                      <span className=\"text-red-500\">\n                        {this.state.formError.msg}\n                      </span>\n                    )}\n                </div>\n                {/* END SELECT CLAIM TYPE ============================================== */}\n\n                {/* SELECT FILE TO CLAIM ON ============================================== */}\n                <div className=\"flex flex-col mb-2\">\n                  <label>\n                    {this.generateChooseFileTitle(this.state.thisClaimType)}\n                  </label>\n                  <div\n                    className={`text-left bg-white border-2 ${\n                      this.state.formType !== \"PROPS\"\n                        ? \"border-gray-700\"\n                        : \"border-gray-400 text-gray-500\"\n                    } rounded w-full ${\n                      this.state.chooseClaimFile ? \"h-64\" : \"h-10\"\n                    } ${\n                      this.state.formError &&\n                      this.state.formError.element === \"claim_file\"\n                        ? \"border-red-500\"\n                        : \"\"\n                    } border-2 ${\n                      this.state.thisClaimType &&\n                      !this.state.chooseClaimFile &&\n                      this.state.formType !== \"PROPS\"\n                        ? \"cursor-pointer\"\n                        : !this.state.chooseClaimFile && \"cursor-not-allowed\"\n                    }`}\n                    title={\n                      !this.state.thisClaimType\n                        ? \"Choose claim type first!\"\n                        : \"\"\n                    }\n                    onClick={() => {\n                      this.state.formType === \"DEFAULT\" &&\n                        this.state.thisClaimType &&\n                        !this.state.chooseClaimFile &&\n                        this.setChooseClaimFile(true);\n                      this.state.formError &&\n                        this.state.formError.element === \"claim_file\" &&\n                        this.setFormError(null);\n                    }}\n                  >\n                    {/* DISPLAYING FILTERED SELECTING FILE ============================ */}\n                    {this.state.claimFileId.length > 0 &&\n                    !this.state.chooseClaimFile ? (\n                      <p className=\"my-1 mx-2\">\n                        {this.state.thisClaimType ===\n                          PlansTypeKeys.DOCUMENT_VALIDATION &&\n                          this.props.claiming.candidateDocuments &&\n                          ClaimGetDocTitle(\n                            this.props.documentReducer,\n                            this.getDocumentById(\n                              this.props.claiming.candidateDocuments,\n                              this.state.claimFileId\n                            )\n                          ).main}\n                        {this.state.thisClaimType ===\n                          PlansTypeKeys.APPLICATION &&\n                          this.props.candidateApplications\n                            .candidate_applications &&\n                          this.getApplicationById(\n                            this.props.candidateApplications\n                              .candidate_applications,\n                            this.state.claimFileId\n                          ) &&\n                          this.getApplicationById(\n                            this.props.candidateApplications\n                              .candidate_applications,\n                            this.state.claimFileId\n                          )!.position.position_title}\n                      </p>\n                    ) : (\n                      !this.state.chooseClaimFile && (\n                        <p className=\"my-1 mx-2\">\n                          Select Claim{\" \"}\n                          {this.state.thisClaimType &&\n                            this.state.thisClaimType\n                              .toLocaleLowerCase()\n                              .replace(/_/g, \" \")}\n                        </p>\n                      )\n                    )}\n                    {/* END DISPLAYING FILTERED SELECTING FILE ============================ */}\n\n                    {/* LISTING OF REJECTED DOCUMENTS ============================ */}\n                    {this.state.chooseClaimFile &&\n                      this.state.thisClaimType ===\n                        PlansTypeKeys.DOCUMENT_VALIDATION &&\n                      this.props.claiming.candidateDocuments &&\n                      this.props.claiming.myClaims &&\n                      this.props.auth.application_session && (\n                        <FormDocumentList\n                          setChooseClaimFile={this.setChooseClaimFile}\n                          setClaimFileId={this.setClaimFileId}\n                          setViewThisFile={this.setViewThisFile}\n                          claimFileId={this.state.claimFileId}\n                          viewThisFile={this.state.viewThisFile}\n                          candidateDocuments={\n                            this.props.claiming.candidateDocuments\n                          }\n                          documentCategories={this.props.documentReducer}\n                          myClaims={this.props.claiming.myClaims}\n                          activeSession={this.props.auth.application_session}\n                        />\n                      )}\n                    {/* END LISTING OF REJECTED DOCUMENTS ============================ */}\n                    {/* LISTING OF REJECTED APPLICATION ============================ */}\n                    {this.state.chooseClaimFile &&\n                      this.state.thisClaimType === PlansTypeKeys.APPLICATION &&\n                      this.props.claiming.candidateApplications &&\n                      this.props.claiming.myClaims &&\n                      this.props.auth.application_session && (\n                        <FormApplicationList\n                          setChooseClaimFile={this.setChooseClaimFile}\n                          setClaimFileId={this.setClaimFileId}\n                          setViewThisFile={this.setViewThisFile}\n                          claimFileId={this.state.claimFileId}\n                          viewThisFile={this.state.viewThisFile}\n                          candidateApplications={\n                            this.props.claiming.candidateApplications\n                          }\n                          myClaims={this.props.claiming.myClaims}\n                          activeSession={this.props.auth.application_session}\n                        />\n                      )}\n                    {/* END LISTING OF REJECTED APPLICATION ============================ */}\n                  </div>\n                  {this.state.formError &&\n                    this.state.formError.element === \"claim_file\" && (\n                      <span className=\"text-red-500\">\n                        {this.state.formError.msg}\n                      </span>\n                    )}\n                </div>\n                {/* END SELECT FILE TO CLAIM ON ============================================== */}\n\n                {/* CLAIM REASONS ========================================== */}\n                <div className=\"flex flex-col mb-2\">\n                  <label>Choose reason of your claim</label>\n                  <div\n                    className={`text-left bg-white border-2 border-gray-700 rounded w-full ${\n                      this.state.chooseClaimReason ? \"h-64\" : \"h-auto\"\n                    } ${\n                      this.state.formError &&\n                      this.state.formError.element === \"claim_reason\"\n                        ? \"border-red-500\"\n                        : \"\"\n                    } border-2 ${\n                      this.props.claiming.claimReasons === null\n                        ? \"cursor-wait\"\n                        : \"cursor-pointer\"\n                    }`}\n                    title=\"Choose the reason for your claim!\"\n                    onClick={() => {\n                      !this.state.chooseClaimReason &&\n                        this.setState({ chooseClaimReason: true });\n                      this.state.formError &&\n                        this.state.formError.element === \"claim_reason\" &&\n                        this.setFormError(null);\n                    }}\n                  >\n                    {/* DISPLAYING SELECTED REASON ============================ */}\n                    {this.state.claimReason && !this.state.chooseClaimReason ? (\n                      <p className=\"my-1 mx-2\">\n                        {this.state.claimReason.reason}\n                      </p>\n                    ) : (\n                      !this.state.chooseClaimReason && (\n                        <p className=\"my-1 mx-2\">Select reason</p>\n                      )\n                    )}\n                    {/* END DISPLAYING SELECTED REASON ============================ */}\n\n                    {/* LISTING OF CLAIM REASONS ============================ */}\n                    {this.state.chooseClaimReason &&\n                      this.props.claiming.claimReasons && (\n                        <ChooseReason\n                          setChooseClaimReason={this.setChooseClaimReason}\n                          setClaimReason={this.setClaimReason}\n                          claimReason={this.state.claimReason}\n                          allClaimReasons={this.props.claiming.claimReasons}\n                        />\n                      )}\n                    {/* END LISTING OF CLAIM REASONS ============================ */}\n                  </div>\n                  {this.state.formError &&\n                    this.state.formError.element === \"claim_reason\" && (\n                      <span className=\"text-red-500\">\n                        {this.state.formError.msg}\n                      </span>\n                    )}\n                </div>\n                {/* END CLAIM REASONS ========================================== */}\n\n                {/* CLAIM COMMENT ============================================== */}\n                <div className=\"flex flex-col\">\n                  <label>Comment</label>\n                  <textarea\n                    className={`text-left input-white w-20 inline-block ${\n                      this.state.formError &&\n                      this.state.formError.element === \"claim_comment\"\n                        ? \"border-red-500\"\n                        : \"border-gray-500\"\n                    } border-2`}\n                    placeholder={`Claim comment`}\n                    style={{ resize: \"none\" }}\n                    value={this.state.claimComment}\n                    onChange={(e) => {\n                      this.setClaimComment(e.target.value);\n                      this.state.formError &&\n                        this.state.formError.element === \"claim_comment\" &&\n                        this.setFormError(null);\n                    }}\n                    rows={3}\n                    disabled={this.state.loadingForm}\n                  ></textarea>\n                  {this.state.formError &&\n                    this.state.formError.element === \"claim_comment\" && (\n                      <span className=\"text-red-500\">\n                        {this.state.formError.msg}\n                      </span>\n                    )}\n                </div>\n                {/* END CLAIM COMMENT ============================================== */}\n              </div>\n              <div className=\"pt-3 flex justify-between\">\n                <button\n                  onClick={() => this.cleanToClose()}\n                  className={`btn bg-gray-400 text-white hover:bg-gray-600 focus:outline-none ${\n                    this.state.loadingForm && \"cursor-not-allowed\"\n                  }`}\n                  type=\"button\"\n                  disabled={this.state.loadingForm}\n                >\n                  Exit\n                </button>\n                <button\n                  className={`btn bg-primary text-white hover:bg-blue-600 focus:outline-none ${\n                    this.state.loadingForm && \"cursor-wait\"\n                  }`}\n                  type=\"submit\"\n                  disabled={this.state.loadingForm}\n                >\n                  {this.state.loadingForm ? \"Loading...\" : \"Claim\"}\n                </button>\n              </div>\n            </div>\n          </form>\n        )}\n        {/* END CLAIM FORM ============================================== */}\n\n        {/* CLAIM DOCUMENT VIEW ============================================== */}\n        {this.state.viewThisFile.length > 0 &&\n          this.props.claiming.candidateDocuments &&\n          this.state.thisClaimType === PlansTypeKeys.DOCUMENT_VALIDATION && (\n            <DocFormView\n              thisDoc={this.getDocumentById(\n                this.props.claiming.candidateDocuments,\n                this.state.viewThisFile\n              )}\n              setViewThisFile={this.setViewThisFile}\n              documentCategories={this.props.documentReducer}\n              setChooseClaimFile={this.setChooseClaimFile}\n              setClaimFileId={this.setClaimFileId}\n            />\n          )}\n        {/* END CLAIM DOCUMENT VIEW ============================================== */}\n        {/* CLAIM APPLICATION VIEW ============================================== */}\n        {this.state.viewThisFile.length > 0 &&\n          this.props.candidateApplications.candidate_applications &&\n          this.getApplicationById(\n            this.props.candidateApplications.candidate_applications,\n            this.state.viewThisFile\n          ) &&\n          this.state.thisClaimType === PlansTypeKeys.APPLICATION && (\n            <ApplicationFormView\n              thisApplication={\n                this.getApplicationById(\n                  this.props.candidateApplications.candidate_applications,\n                  this.state.viewThisFile\n                )!\n              }\n              documentCategories={this.props.documentReducer}\n              setChooseClaimFile={this.setChooseClaimFile}\n              setClaimFileId={this.setClaimFileId}\n              setViewThisFile={this.setViewThisFile}\n            />\n          )}\n        {/* END CLAIM APPLICATION VIEW ============================================== */}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = ({\n  auth,\n  document,\n  claiming,\n  candidateApplications,\n  candidateExam,\n}: StoreState): {\n  auth: Auth;\n  documentReducer: DocumentReducerInterface;\n  claiming: ClaimingReducerType;\n  candidateApplications: CandidateApplicationsStoreInterface;\n  candidateExam: candidateExamStoreInterface;\n} => {\n  return {\n    auth: auth,\n    documentReducer: document,\n    claiming,\n    candidateApplications: candidateApplications,\n    candidateExam: candidateExam,\n  };\n};\n\nexport default connect(mapStateToProps, {\n  getMyClaims,\n  getMyAnswers,\n  getClaimReasons,\n  createClaim,\n  GetClaimingTypes,\n  getMyRejectedApplications,\n  getMyRejectedDocuments,\n  getDocumentCategory,\n  getDocumentSubCategory,\n  getDocumentFields,\n  PushPopupAlert,\n})(ClaimFormComponent);\n","import React, { Component } from \"react\";\nimport { MdSearch } from \"react-icons/md\";\nimport { claimReasonInterface } from \"../../../interfaces\";\nimport search from \"../../../utils/search\";\n\nexport const claimReasonsData = [\n  { key: 1, reason: \"Not placed (Sinahawe umwanya)\" },\n  {\n    key: 2,\n    reason:\n      \"Not placed with higher marks (Sinahawe umwanya kandi hari abo ndusha twakoze bimwe bawuhawe)\",\n  },\n  {\n    key: 3,\n    reason:\n      \"Want to change district of placement (Nifuza guhindurirwa akarere nahawemo umwanya)\",\n  },\n  {\n    key: 4,\n    reason: \"Rejected offer by mistake (Nibeshye nanga umwanya nahawe)\",\n  },\n  {\n    key: 0,\n    reason: \"None of the above (nta na kimwe muri ibyo byavuzwe haruguru)\",\n  },\n];\n\ntype ChooseReasonProps = {\n  claimReason: claimReasonInterface | null;\n  setClaimReason: (value: claimReasonInterface | null) => void;\n  setChooseClaimReason: (value: boolean) => void;\n  allClaimReasons: claimReasonInterface[];\n};\n\ntype ChooseReasonState = {\n  searchInput: string;\n};\n\nclass ChooseReason extends Component<ChooseReasonProps, ChooseReasonState> {\n  constructor(props: ChooseReasonProps) {\n    super(props);\n\n    this.state = {\n      searchInput: \"\",\n    };\n  }\n\n  setSearchInput = (value: string) => {\n    this.setState({ searchInput: value });\n  };\n\n  render() {\n    return (\n      <div>\n        {/* SEARCH PART */}\n        <div className=\"flex items-center w-full my-1\">\n          <MdSearch className=\"w-6 h-6 absolute ml-2\" />\n          <input\n            type=\"text\"\n            placeholder=\"Search\"\n            className=\"focus:border-2 h-7 ml-1 pl-9 mr-2 bg-gray-100 focus:border-gray-700 w-full rounded\"\n            onChange={(e) => this.setSearchInput(e.target.value)}\n            value={this.state.searchInput}\n          />\n          <button\n            className=\"bg-red-200 text-red-700 py-1 px-2 mr-1 rounded text-sm focus:outline-none\"\n            type=\"button\"\n            onClick={() => this.props.setChooseClaimReason(false)}\n          >\n            Close\n          </button>\n        </div>\n        {/* END SEARCH PART ///////////////// */}\n\n        <div className=\"w-full h-52 mt-2 overflow-y-auto divide-y divide-gray-300\">\n          {search(this.props.allClaimReasons, this.state.searchInput).map(\n            (item: claimReasonInterface, index) => (\n              <section key={index.toString() + item.id}>\n                <div\n                  className={`py-1 w-full px-2 hover:bg-gray-100 cursor-pointer ${\n                    this.props.claimReason &&\n                    this.props.claimReason.id === item.id\n                      ? \"border-l-4 border-blue-500 bg-blue-50\"\n                      : \"my-1\"\n                  }`}\n                  onClick={() => {\n                    this.props.setChooseClaimReason(false);\n                    this.props.setClaimReason(item);\n                  }}\n                >\n                  <p className=\"text-base text-black\">{item.reason}</p>\n                </div>\n              </section>\n            )\n          )}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default React.memo(ChooseReason);\n","import axios from \"axios\";\nimport React, { Component } from \"react\";\nimport { VscLoading } from \"react-icons/vsc\";\nimport { connect } from \"react-redux\";\nimport { PushPopupAlert } from \"../../../actions\";\nimport { updateSessionPlan } from \"../../../actions/session\";\nimport { PopupAlertData } from \"../../../components/Alert/Popup\";\nimport {\n  allPlanTypes,\n  PlansInterface,\n  PlansTypeInterface,\n  PlansTypeKeys,\n  SessionPlanInterface,\n  SessionPlanTypeStatus,\n} from \"../../../interfaces\";\nimport { PopupAlertTheme } from \"../../../interfaces/popupAlert\";\nimport { capitalizeFirstLetter } from \"../../../shared/dataTest\";\nimport { API } from \"../../../utils/api\";\nimport { DATE, errorToText } from \"../../../utils/functions\";\n\nexport const isActivationAllowed = (thisPlans: PlansInterface): boolean => {\n  let today: Date = new Date(),\n    end_date = new Date(thisPlans.end_date);\n  if (end_date.getTime() >= today.getTime()) {\n    return true;\n  }\n  return false;\n};\n\nexport const getPlanTypeByKey = (\n  type_key: PlansTypeKeys\n): PlansTypeInterface | undefined => {\n  return allPlanTypes.find((item) => item.type_key === type_key);\n};\n\nexport const isPlanActive = (\n  viewThisSession: SessionPlanInterface,\n  thisPlan: PlansInterface\n): \"OPEN\" | \"CLOSED\" | \"WAITING\" => {\n  if (viewThisSession.is_active) {\n    let today = new Date(),\n      planEndDate = new Date(thisPlan.end_date),\n      planStartDate = new Date(thisPlan.start_date);\n    if (\n      planEndDate.getTime() >= today.getTime() &&\n      planStartDate.getTime() <= today.getTime() &&\n      thisPlan.type_status !== SessionPlanTypeStatus.CLOSED\n    ) {\n      return \"OPEN\";\n    } else if (\n      planStartDate.getTime() > today.getTime() &&\n      thisPlan.type_status !== SessionPlanTypeStatus.CLOSED\n    ) {\n      return \"WAITING\";\n    }\n  }\n  return \"CLOSED\";\n};\n\ntype SessionDetailsProps = {\n  viewThisSession: SessionPlanInterface;\n  setViewThisSession: (data: SessionPlanInterface) => void;\n\n  // REDUX ----------------\n  updateSessionPlan: Function;\n  PushPopupAlert: (alert: PopupAlertData) => void;\n};\n\ntype SessionDetailsState = {\n  loadingRequest: string;\n};\n\nexport class SessionDetails extends Component<\n  SessionDetailsProps,\n  SessionDetailsState\n> {\n  constructor(props: SessionDetailsProps) {\n    super(props);\n\n    this.state = {\n      loadingRequest: \"\",\n    };\n  }\n\n  handlePlanActivation = async (\n    session: SessionPlanInterface,\n    thisPlan: PlansInterface\n  ) => {\n    const newState: \"open\" | \"close\" = session.is_active ? \"close\" : \"open\";\n\n    if (!window.confirm(`Are you sure you want to ${newState} this plan?`)) {\n      return true;\n    }\n\n    if (!isActivationAllowed(thisPlan)) {\n      this.props.PushPopupAlert({\n        title: `Opening/Closing plan which has been expired is not allowed!`,\n        theme: PopupAlertTheme.warning,\n      });\n    }\n\n    let newData: SessionPlanInterface = {\n      session_plan_name: session.session_plan_name,\n      period: session.period,\n      is_active: session.is_active,\n      plans: [],\n      createdAt: session.createdAt,\n      updatedAt: session.updatedAt,\n      session_plan_id: session.session_plan_id,\n    };\n    for (const key in session.plans) {\n      if (Object.prototype.hasOwnProperty.call(session.plans, key)) {\n        const element = session.plans[key];\n        if (thisPlan.type_key === element.type_key) {\n          if (thisPlan.type_status === SessionPlanTypeStatus.OPEN) {\n            newData.plans.push({\n              type_id: thisPlan.type_id,\n              type_title: thisPlan.type_title,\n              type_key: thisPlan.type_key,\n              type_status: SessionPlanTypeStatus.CLOSED,\n              start_date: thisPlan.start_date,\n              end_date: thisPlan.end_date,\n              allowed_claim_level: thisPlan.allowed_claim_level,\n              _id: thisPlan._id,\n              history: thisPlan.history,\n            });\n          } else {\n            newData.plans.push({\n              type_id: thisPlan.type_id,\n              type_title: thisPlan.type_title,\n              type_key: thisPlan.type_key,\n              type_status: SessionPlanTypeStatus.OPEN,\n              start_date: thisPlan.start_date,\n              end_date: thisPlan.end_date,\n              allowed_claim_level: thisPlan.allowed_claim_level,\n              _id: thisPlan._id,\n              history: thisPlan.history,\n            });\n          }\n        } else {\n          newData.plans.push(element);\n        }\n      }\n    }\n\n    console.log(\"====================================\");\n    console.log({ newData });\n    console.log(\"====================================\");\n\n    this.setState({ loadingRequest: thisPlan.type_key });\n    try {\n      const res = await axios.put<SessionPlanInterface>(\n        `${API.CLAIMING}/session/${session.session_plan_id}`,\n        newData\n      );\n      this.props.updateSessionPlan(res.data);\n      this.props.setViewThisSession(res.data);\n      this.props.PushPopupAlert({\n        title: `Session ${newState}d successfully`,\n        theme: PopupAlertTheme.info,\n      });\n      this.setState({ loadingRequest: \"\" });\n      console.log(\"updateSessionPlan: \", res);\n    } catch (error) {\n      console.error({ error: errorToText(error) });\n      this.props.PushPopupAlert({\n        title: errorToText(error),\n        theme: PopupAlertTheme.warning,\n      });\n    }\n  };\n\n  render() {\n    return (\n      <table className=\"w-full bg-white shadow p-5\" id=\"session_content\">\n        <thead className=\"bg-white border-b-2 border-gray-300 text-gray-600 font-bold text-sm\">\n          <tr>\n            <td className=\"p-2\">#</td>\n            <td className=\"p-2\">Plan Type</td>\n            <td className=\"p-2\">Start Date</td>\n            <td className=\"p-2\">End date</td>\n            {this.props.viewThisSession.is_active && (\n              <td className=\"p-2\" colSpan={2}>\n                Status\n              </td>\n            )}\n          </tr>\n        </thead>\n        <tbody>\n          {/* WHILE DATA FOUND ====================== */}\n          {this.props.viewThisSession.plans.map((item, index) => (\n            <tr\n              key={index + item._id}\n              className={`border-b border-gray-200 hover:bg-gray-100`}\n            >\n              <td className=\"p-2 text-left whitespace-nowrap\">{index + 1}</td>\n              <td className=\"p-2 text-left\">\n                <span className=\"text-lg\">\n                  {getPlanTypeByKey(item.type_key) &&\n                    capitalizeFirstLetter(\n                      getPlanTypeByKey(item.type_key)!.type_title\n                    )}\n                </span>\n              </td>\n              <td className=\"p-2 text-left\">{DATE(item.start_date)}</td>\n              <td className=\"p-2 text-left\">{DATE(item.end_date)}</td>\n              {this.props.viewThisSession.is_active && (\n                <td>\n                  {isPlanActive(this.props.viewThisSession, item) === \"OPEN\" ? (\n                    <span className={`px-2 py-1 font-semibold text-green-700`}>\n                      Open\n                    </span>\n                  ) : isPlanActive(this.props.viewThisSession, item) ===\n                    \"WAITING\" ? (\n                    <span className={`px-2 py-1 font-semibold text-gray-700`}>\n                      Waiting\n                    </span>\n                  ) : (\n                    <span className={`px-2 py-1 font-semibold text-red-700`}>\n                      Closed\n                    </span>\n                  )}\n                </td>\n              )}\n              {this.props.viewThisSession.is_active && (\n                <td>\n                  {isActivationAllowed(item) && (\n                    <div className=\"flex items-center justify-center gap-1\">\n                      <div\n                        className={`relative ${\n                          this.state.loadingRequest.length > 0\n                            ? \"cursor-not-allowed\"\n                            : \"cursor-pointer\"\n                        }`}\n                        title={\n                          item.type_status === SessionPlanTypeStatus.OPEN\n                            ? \"Deactivating session\"\n                            : \"Activating session\"\n                        }\n                        onClick={() =>\n                          this.state.loadingRequest.length <= 0 &&\n                          this.handlePlanActivation(\n                            this.props.viewThisSession,\n                            item\n                          )\n                        }\n                      >\n                        <span className=\"block w-14 h-8 bg-gray-100 rounded-full shadow-inner\"></span>\n                        <span\n                          className={`absolute block w-6 h-6 mt-1 ml-1 rounded-full shadow inset-y-0 left-0 focus-within:shadow-outline transition-transform duration-500 ease-in-out ${\n                            item.type_status === SessionPlanTypeStatus.CLOSED\n                              ? \"bg-red-500\"\n                              : \"bg-green-500 transform translate-x-full\"\n                          }`}\n                        ></span>\n                      </div>\n                      {this.state.loadingRequest === item.type_key && (\n                        <VscLoading className=\"animate__animated animate__rotateIn animate__infinite\" />\n                      )}\n                    </div>\n                  )}\n                </td>\n              )}\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    );\n  }\n}\n\nexport default React.memo(connect(null, {\n  updateSessionPlan,\n  PushPopupAlert,\n})(SessionDetails));\n","import React from \"react\";\nimport { DocumentClaimUser } from \"../../../actions/claiming\";\nimport { DocumentReducerInterface } from \"../../../reducers/document\";\nimport { capitalizeFirstLetter } from \"../../../shared/dataTest\";\nimport { API } from \"../../../utils/api\";\nimport { ClaimGetDocTitle } from \"./ClaimForm\";\n\ntype DocFormViewProps = {\n  thisDoc: DocumentClaimUser;\n  setChooseClaimFile: (value: boolean) => void;\n  setClaimFileId: (value: string) => void;\n  setViewThisFile: (value: string) => void;\n  documentCategories: DocumentReducerInterface;\n};\n\nconst DocFormView: React.FC<DocFormViewProps> = (props) => {\n  return (\n    <section className=\"\">\n      <div className=\"w-full bg-gray-100 px-4 py-1 animate__animated animate__fadeIn\">\n        <div className=\"flex flex-col mb-2\">\n          <div className=\"flex items-center justify-between\">\n            <span className=\"text-blue-600 font-bold text-xl\">\n              {ClaimGetDocTitle(props.documentCategories, props.thisDoc).main}\n            </span>\n            <button\n              type=\"button\"\n              className=\"btn btn-blue\"\n              onClick={() => {\n                props.setChooseClaimFile(false);\n                props.setClaimFileId(props.thisDoc.doc_id);\n                props.setViewThisFile(\"\");\n              }}\n            >\n              Choose\n            </button>\n          </div>\n          <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n            <span className={`italic`}>Status:</span>\n            <span className=\"font-bold text-yellow-900 rounded px-3 py-1\">\n              {capitalizeFirstLetter(props.thisDoc.validation_status)}\n            </span>\n          </div>\n          <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n            <span className={`italic`}>Evaluated by:</span>\n            <span className=\"font-semibold\">\n              ################\n              {/* {loadingUsers ? (\n                <div className=\"w-24 h-3 rounded bg-gray-200 animate__animated animate__pulse animate__delay-5s animate__infinite\"></div>\n              ) : getUserDocuments(\n                  props.userList,\n                  props.thisDoc.validated_by.user_id\n                ) ? (\n                getUserDocuments(\n                  props.userList,\n                  props.thisDoc.validated_by.user_id\n                )!.user.user_info.fname +\n                \" \" +\n                getUserDocuments(\n                  props.userList,\n                  props.thisDoc.validated_by.user_id\n                )!.user.user_info.lname\n              ) : (\n                \"-\"\n              )} */}\n            </span>\n          </div>\n          <div className=\"flex items-start gap-2 text-sm text-gray-600\">\n            <span className={`italic`}>Reason:</span>\n            <span className=\"font-normal\">\n              {props.thisDoc.validated_by.comment}\n            </span>\n          </div>\n          <div className=\"w-full my-1\">\n            <img\n              src={`${API.AUTH_FILES}/${props.thisDoc.files}`}\n              alt=\"doc file\"\n              className={`w-full`}\n            />\n          </div>\n        </div>\n      </div>\n    </section>\n  );\n};\n\nexport default React.memo(DocFormView);\n","import React, { useState } from \"react\";\nimport { MdSearch } from \"react-icons/md\";\nimport { ApplicationSession } from \"../../../actions\";\nimport {\n  CandidateClaimInterface,\n  claimApplicationsInterface,\n} from \"../../../interfaces\";\nimport { ApplicationStates } from \"../../../interfaces/application\";\nimport { isClaimAllowed } from \"./ClaimForm\";\n\nconst getRejectedApplicants = (\n  applicationData: claimApplicationsInterface[]\n): claimApplicationsInterface[] => {\n  return applicationData.filter(\n    (item) => item.application_status === ApplicationStates.Rejected\n  );\n};\n\nexport const searchApplication = (\n  objList: claimApplicationsInterface[],\n  text: any\n): claimApplicationsInterface[] => {\n  if (undefined === text || text === \"\") return objList;\n  return objList.filter((product) => {\n    let flag;\n    // let dataKeys = product;\n\n    for (let prop in product) {\n      flag = false;\n      if (prop === \"position\") {\n        flag =\n          product.position.position_title\n            .toString()\n            .toLowerCase()\n            .indexOf(text.toLowerCase()) > -1;\n      }\n      if (flag) break;\n    }\n    return flag;\n  });\n  // return objList.filter((product) =>\n  //   product.position.position_title.includes(text)\n  // );\n};\n\ntype FormApplicationListProps = {\n  setChooseClaimFile: (value: boolean) => void;\n  setClaimFileId: (value: string) => void;\n  setViewThisFile: (value: string) => void;\n  claimFileId: string;\n  viewThisFile: string;\n  candidateApplications: claimApplicationsInterface[];\n  myClaims: CandidateClaimInterface[];\n  activeSession: ApplicationSession;\n};\n\nconst FormApplicationList: React.FC<FormApplicationListProps> = (props) => {\n  const [searchInput, setSearchInput] = useState<string>(\"\");\n  return (\n    <section>\n      {/* SEARCH PART */}\n      <div className=\"flex items-center w-full my-1\">\n        <MdSearch className=\"w-6 h-6 absolute ml-2\" />\n        <input\n          type=\"text\"\n          placeholder=\"Search\"\n          className=\"focus:border-2 h-7 ml-1 pl-9 mr-2 bg-gray-100 focus:border-gray-700 w-full rounded\"\n          onChange={(e) => setSearchInput(e.target.value)}\n          value={searchInput}\n          disabled={\n            getRejectedApplicants(props.candidateApplications).filter((item) =>\n              isClaimAllowed(\n                props.myClaims,\n                props.activeSession.session_plan_id,\n                item.application_id\n              )\n            ).length > 0\n              ? false\n              : true\n          }\n        />\n        <button\n          className=\"bg-red-200 text-red-700 py-1 px-2 mr-1 rounded text-sm focus:outline-none\"\n          type=\"button\"\n          onClick={() => {\n            props.setChooseClaimFile(false);\n            props.setViewThisFile(\"\");\n          }}\n        >\n          Close\n        </button>\n      </div>\n      {/* END SEARCH PART ///////////////// */}{\" \"}\n      {/* searchData(props.candidateApplications, searchInput) */}\n      <div className=\"w-full h-52 mt-2 overflow-y-auto divide-y divide-gray-300\">\n        {getRejectedApplicants(props.candidateApplications).filter((item) =>\n          isClaimAllowed(\n            props.myClaims,\n            props.activeSession.session_plan_id,\n            item.application_id\n          )\n        ).length > 0 ? (\n          searchApplication(\n            getRejectedApplicants(props.candidateApplications).filter((item) =>\n              isClaimAllowed(\n                props.myClaims,\n                props.activeSession.session_plan_id,\n                item.application_id\n              )\n            ),\n            searchInput\n          ).map((item, index) => (\n            <div\n              className={`group flex items-center justify-between my-1 hover:bg-gray-100 ${\n                props.claimFileId === item.application_id &&\n                \"bg-blue-50 border-l-4 border-blue-500\"\n              }`}\n              key={index + item.application_id}\n            >\n              <div\n                className=\"p-1 w-full mr-2 cursor-pointer\"\n                onClick={() => {\n                  props.setChooseClaimFile(false);\n                  props.setClaimFileId(item.application_id);\n                }}\n              >\n                <p className=\"text-base font-medium text-black\">\n                  {item.position.position_title}\n                </p>\n              </div>\n              <button\n                type=\"button\"\n                className=\"bg-blue-200 hover:bg-blue-300 text-blue-700 group-hover:text-blue-800 py-1 px-2 mr-1 rounded text-sm\"\n                onClick={() => {\n                  props.setViewThisFile(item.application_id);\n                }}\n              >\n                View\n              </button>\n            </div>\n          ))\n        ) : (\n          <div className=\"text-center p-3\">\n            <p className=\"text-base font-medium text-black\">\n              No Rejected document available\n            </p>\n          </div>\n        )}\n      </div>\n    </section>\n  );\n};\n\nexport default React.memo(FormApplicationList);\n","import React, { useState } from \"react\";\nimport { MdSearch } from \"react-icons/md\";\nimport { DocumentReducerInterface } from \"../../../reducers/document\";\nimport { ClaimGetDocTitle, isClaimAllowed } from \"./ClaimForm\";\nimport { DocumentClaimUser } from \"../../../actions/claiming\";\nimport { CategorySubcategoryData } from \"../../../interfaces/candidatesInterfaces\";\nimport { CandidateClaimInterface } from \"../../../interfaces\";\nimport { ApplicationSession } from \"../../../actions\";\n\nexport interface DocumentTitleInterface {\n  category_id: string;\n  company: string;\n  description: string;\n  email: string;\n  end_year: string;\n  files: string;\n  names: string;\n  phone_number: string;\n  school: {\n    school_name: string;\n    _id: string;\n    status: boolean;\n    education_category_id?: {\n      education_category_title: string;\n      _id: string;\n    };\n    district_id?: {\n      district_name: string;\n      _id: string;\n    };\n  } | null;\n  school_id: string;\n  start_year: string;\n  sub_category_id: string;\n  title: string;\n  year: string;\n  validation_status: string;\n  validated_by: {\n    user_id: string;\n    comment: string;\n    validation_status: string;\n    date: string;\n  };\n  doc_id: string;\n  doc_title: string;\n  category_subcategory_data: CategorySubcategoryData | null;\n}\n\nexport const DocumentTitleData = (\n  documentData: DocumentClaimUser[],\n  documentCategories: DocumentReducerInterface\n): DocumentTitleInterface[] | [] => {\n  let documentTemp: DocumentTitleInterface[] = [];\n  for (let i in documentData) {\n    documentTemp.push({\n      category_id: documentData[i].category_id,\n      company: documentData[i].company,\n      description: documentData[i].description,\n      email: documentData[i].email,\n      end_year: documentData[i].end_year,\n      files: documentData[i].files,\n      names: documentData[i].names,\n      phone_number: documentData[i].phone_number,\n      school: documentData[i].school,\n      school_id: documentData[i].school_id,\n      start_year: documentData[i].start_year,\n      sub_category_id: documentData[i].sub_category_id,\n      title: documentData[i].title,\n      year: documentData[i].year,\n      validation_status: documentData[i].validation_status,\n      validated_by: documentData[i].validated_by,\n      doc_id: documentData[i].doc_id,\n      doc_title: ClaimGetDocTitle(documentCategories, documentData[i]).main,\n      category_subcategory_data: documentData[i].category_subcategory_data,\n    });\n  }\n  return documentTemp;\n};\n\nconst getRejectedDocuments = (\n  documentData: DocumentClaimUser[]\n): DocumentClaimUser[] => {\n  console.log({\n    rejected: documentData.filter(\n      (item) => item.validation_status === \"rejected\"\n    ),\n  });\n  return documentData.filter((item) => item.validation_status === \"rejected\");\n};\n\nexport const searchDocuments = (\n  objList: DocumentTitleInterface[],\n  text: any\n): DocumentTitleInterface[] => {\n  if (undefined === text || text === \"\") return objList;\n  return objList.filter(\n    (product) =>\n      product.doc_title.toString().toLowerCase().indexOf(text.toLowerCase()) >\n      -1\n  );\n};\n\ntype FormDocumentListProps = {\n  setChooseClaimFile: (value: boolean) => void;\n  setClaimFileId: (value: string) => void;\n  setViewThisFile: (value: string) => void;\n  claimFileId: string;\n  viewThisFile: string;\n  candidateDocuments: DocumentClaimUser[];\n  documentCategories: DocumentReducerInterface;\n  myClaims: CandidateClaimInterface[];\n  activeSession: ApplicationSession;\n};\n\nconst FormDocumentList: React.FC<FormDocumentListProps> = (props) => {\n  const [searchInput, setSearchInput] = useState<string>(\"\");\n  return (\n    <section>\n      {/* SEARCH PART */}\n      <div className=\"flex items-center w-full my-1\">\n        <MdSearch className=\"w-6 h-6 absolute ml-2\" />\n        <input\n          type=\"text\"\n          placeholder=\"Search\"\n          className=\"focus:border-2 h-7 ml-1 pl-9 mr-2 bg-gray-100 focus:border-gray-700 w-full rounded\"\n          onChange={(e) => setSearchInput(e.target.value)}\n          value={searchInput}\n          disabled={\n            DocumentTitleData(\n              getRejectedDocuments(props.candidateDocuments),\n              props.documentCategories\n            ).filter((item) =>\n              isClaimAllowed(\n                props.myClaims,\n                props.activeSession.session_plan_id,\n                item.doc_id\n              )\n            ).length > 0\n              ? false\n              : true\n          }\n        />\n        <button\n          className=\"bg-red-200 text-red-700 py-1 px-2 mr-1 rounded text-sm focus:outline-none\"\n          type=\"button\"\n          onClick={() => {\n            props.setChooseClaimFile(false);\n            props.setViewThisFile(\"\");\n          }}\n        >\n          Close\n        </button>\n      </div>\n      {/* END SEARCH PART ///////////////// */}\n      <div className=\"w-full h-52 mt-2 overflow-y-auto divide-y divide-gray-300\">\n        {props.candidateDocuments.filter((item) =>\n          isClaimAllowed(\n            props.myClaims,\n            props.activeSession.session_plan_id,\n            item.doc_id\n          )\n        ).length > 0 ? (\n          searchDocuments(\n            DocumentTitleData(\n              getRejectedDocuments(props.candidateDocuments),\n              props.documentCategories\n            ).filter((item) =>\n              isClaimAllowed(\n                props.myClaims,\n                props.activeSession.session_plan_id,\n                item.doc_id\n              )\n            ),\n            searchInput\n          ).map((doc, index) => (\n            <section key={index + doc.doc_id}>\n              <div\n                className={`group flex items-center justify-between my-1 hover:bg-gray-100 ${\n                  props.claimFileId === doc.doc_id &&\n                  \"bg-blue-50 border-l-4 border-blue-500\"\n                }`}\n              >\n                <div\n                  className=\"p-1 w-full mr-2 cursor-pointer\"\n                  onClick={() => {\n                    props.setChooseClaimFile(false);\n                    props.setClaimFileId(doc.doc_id);\n                  }}\n                >\n                  <p className=\"text-base font-medium text-black\">\n                    {ClaimGetDocTitle(props.documentCategories, doc).main}\n                  </p>\n                </div>\n                <button\n                  type=\"button\"\n                  className=\"bg-blue-200 hover:bg-blue-300 text-blue-700 group-hover:text-blue-800 py-1 px-2 mr-1 rounded text-sm\"\n                  onClick={() => {\n                    props.viewThisFile === doc.doc_id\n                      ? props.setViewThisFile(\"\")\n                      : props.setViewThisFile(doc.doc_id);\n                  }}\n                >\n                  {props.viewThisFile === doc.doc_id ? \"Close\" : \"View\"}\n                </button>\n              </div>\n            </section>\n          ))\n        ) : (\n          <div className=\"text-center p-3\">\n            <p className=\"text-base font-medium text-black\">\n              No Rejected document available\n            </p>\n          </div>\n        )}\n      </div>\n    </section>\n  );\n};\n\nexport default React.memo(FormDocumentList);\n"],"sourceRoot":""}
{"version":3,"sources":["components/ApplicationPeriods/ApplicationPeriods.tsx","components/Questions/QuestionItem.tsx","../node_modules/uuid/dist/esm-browser/rng.js","../node_modules/uuid/dist/esm-browser/regex.js","../node_modules/uuid/dist/esm-browser/stringify.js","../node_modules/uuid/dist/esm-browser/validate.js","../node_modules/uuid/dist/esm-browser/v4.js","components/Questions/Questions.tsx","interfaces/prepare_exam.ts","containers/PrepareExam/ExamsList/ExamsList.tsx"],"names":["ApplicationPeriods","props","className","type","placeholder","applicationPeriods","map","item","i","onClick","setSelectedPeriod","showPeriodFilter","is_active","application_session_name","DATE","application_start_date","application_end_date","QuestionItem","useState","editMode","setEditMode","select","callBack","question","number","status","questionTypes","find","itm","id","title","description","alert","backDrop","theme","Themes","default","close","backDropClose","widthSizeClass","ModalSize","extraLarge","displayClose","padding","selectedQuestion","questionsList","unSelectQuestion","getRandomValues","rnds8","Uint8Array","rng","crypto","bind","msCrypto","Error","validate","uuid","REGEX","test","byteToHex","push","toString","substr","stringify","arr","offset","arguments","length","undefined","toLowerCase","TypeError","v4","options","buf","rnds","random","Questions","connect","auth","course","schoolLevels","questionBank","loadCourses","loadSchoolLevels","loadEducationCategories","setSelectedEducationCategory","setSelectedSchoolLevel","setUploadedQuestions","setSelectedCourse","loadQuestionTypes","loading","setLoading","filterQuestionType","setFilterQuestionType","filterQuestionChapter","setFilterQuestionChapter","filteredQuestions","questionType","QuestionChapter","questions","res","temp","filter","chapters","x","useEffect","onChange","e","target","value","selectedCourse","name","course_id","to","questionPaper","QuestionNumberFormat","PrepareExamStatus","returnQuestionNumbering","numbering","ABC","abc","I","NUMBER","EXAM_QUESTIONS_NUMBERING","key","_ExamsList","setState","addQuestionToPaper","addExamQuestion","removeToQuestionPaper","window","confirm","selectPeriod","chooseCourse","myCourse","conf","prepareExam","selectCourse","examQuestionsIds","ids","componentDidMount","periods","loadApplicationPeriods","courses","selected_course","loadQuestionBank","loadExamsList","state","addQuestionModal","formErr","element","msg","questions_per_page","exam_date","start_time","duration","number_format","discription","termes","this","selected_period","course_code","course_name","examsList","colSpan","createdAt","application_session_id","period","exam_status","large","selected_course_id","Component","ExamsList","system","PushPopupAlert"],"mappings":"yJAAA,wCAoCeA,IAxBY,SAACC,GAC1B,OACE,sBAAKC,UAAU,QAAf,UACE,uBAAOC,KAAK,OAAOD,UAAU,gCAAgCE,YAAY,yBAC3C,OAA7BH,EAAMI,mBAA8B,cAAC,IAAD,IAAcJ,EAAMI,mBAAmBC,KAAI,SAACC,EAAMC,GAAP,OAC9E,sBAAKC,QAAS,WAAOR,EAAMS,kBAAkBH,GAAON,EAAMU,kBAAiB,IACzET,UAAS,mGAAgH,IAAnBK,EAAKK,UAAqB,6BAA+B,8BAAtJ,0EADX,UAEE,sBAAKV,UAAU,mCAAf,UACE,cAAC,IAAD,CAAgBA,UAAS,WAAwB,IAAnBK,EAAKK,UAAqB,gBAAkB,gBAAjD,eACzB,sBAAKV,UAAU,gBAAf,UACE,qBAAKA,UAAS,WAAwB,IAAnBK,EAAKK,UAAqB,gBAAkB,gBAAjD,cAAd,SAA6FL,EAAKM,2BAClG,sBAAKX,UAAU,wBAAf,UAAuC,4CAAqB,sBAAMA,UAAS,WAAwB,IAAnBK,EAAKK,UAAqB,gBAAkB,iBAAhE,UAAuG,IAAnBL,EAAKK,UAAqB,SAAW,qBAGzL,sBAAKV,UAAU,wDAAf,UACE,sBAAKA,UAAU,8CAAf,UAA6D,2CAAoB,sBAAMA,UAAS,WAAwB,IAAnBK,EAAKK,UAAqB,gBAAkB,gBAAjD,yBAAf,SAAyGE,YAAKP,EAAKQ,uBAAwB,mBAC5N,sBAAKb,UAAU,8CAAf,UAA6D,yCAAkB,sBAAMA,UAAS,WAAwB,IAAnBK,EAAKK,UAAqB,gBAAkB,gBAAjD,yBAAf,SAAyGE,YAAKP,EAAKS,qBAAsB,wBAXnIR,EAAI,W,0GCsEtFS,IAnEM,SAAChB,GAA8B,IAAD,EACjD,EAAgCiB,oBAAkB,GAAlD,mBAAOC,EAAP,KAAiBC,EAAjB,KAIA,OACE,eAAC,WAAD,WACE,qBAAKX,QAAS,kBAAuB,IAAjBR,EAAMoB,QAAmBpB,EAAMqB,SAASrB,EAAMsB,WAAWrB,UAAS,iKAA4K,IAAjBD,EAAMoB,OAAkB,mBAAqB,iBAAxM,+BAAtF,SACE,sBAAKnB,UAAU,oDAAf,UACE,sBAAKA,UAAU,mCAAf,UACE,+BACoB,IAAjBD,EAAMoB,OACP,sBAAKnB,UAAU,0BAAf,cACID,EAAMuB,OADV,QAGiB,IAAjBvB,EAAMwB,OACN,cAAC,IAAD,CAAmBvB,UAAU,0BAC7B,cAAC,IAAD,CAAqBA,UAAU,4BAEjC,sBAAKA,UAAU,yBAAf,UACE,sBAAMA,UAAU,wCAAhB,SAAyDD,EAAMyB,cAAcA,gBAApB,UAAqCzB,EAAMyB,cAAcA,cAAcC,MAAK,SAAAC,GAAG,OAAIA,EAAIC,IAAMD,EAAIC,KAAO5B,EAAMsB,SAASpB,eAAvH,aAAqC,EAAyF2B,SACvL,sBAAM5B,UAAU,YAAhB,SAA6BD,EAAMsB,SAASA,SAAS,GAAGO,QACxD,sBAAM5B,UAAU,mBAAhB,SAAoCD,EAAMsB,SAASA,SAAS,GAAGQ,qBAGjD,IAAjB9B,EAAMoB,QACP,sBAAKnB,UAAU,mCAAf,UACE,qBACAO,QAAS,kBAAMuB,MAAM,YACrB9B,UAAU,qEAFV,SAGE,cAAC,IAAD,CAAeA,UAAU,6BAE3B,qBACAO,QAAS,kBAAMW,GAAY,IAC3BlB,UAAU,qEAFV,SAGE,cAAC,IAAD,CAAQA,UAAU,6BAEpB,qBACAO,QAAS,kBAAuB,IAAjBR,EAAMoB,QAAoBpB,EAAMqB,SAASrB,EAAMsB,WAC9DrB,UAAU,qEAFV,SAGE,cAAC,IAAD,CAAWA,UAAU,wCAKf,IAAbiB,GACD,cAAC,IAAD,CACEW,MAAM,GACNG,UAAU,EACVC,MAAOC,IAAOC,QACdC,MAAO,kBAAMjB,GAAY,IACzBkB,eAAe,EACfC,eAAgBC,IAAUC,WAC1BC,cAAc,EACdC,QAAS,CAACb,OAAO,GARnB,SASI,qBAAK5B,UAAU,OAAf,SACE,cAAC,IAAD,CACE0C,iBAAkB3C,EAAMsB,SACxBsB,cAAe5C,EAAM4C,cACrBC,iBAzDa,WACvB1B,GAAY,e,iCCpBhB,IAAI2B,EACAC,EAAQ,IAAIC,WAAW,IACZ,SAASC,IAEtB,IAAKH,KAGHA,EAAoC,qBAAXI,QAA0BA,OAAOJ,iBAAmBI,OAAOJ,gBAAgBK,KAAKD,SAA+B,qBAAbE,UAAgE,oBAA7BA,SAASN,iBAAkCM,SAASN,gBAAgBK,KAAKC,WAGrO,MAAM,IAAIC,MAAM,4GAIpB,OAAOP,EAAgBC,GCjBV,4HCQf,ICFeO,MAJf,SAAkBC,GAChB,MAAuB,kBAATA,GAAqBC,EAAMC,KAAKF,IDG5CG,EAAY,GAEPnD,EAAI,EAAGA,EAAI,MAAOA,EACzBmD,EAAUC,MAAMpD,EAAI,KAAOqD,SAAS,IAAIC,OAAO,IAoBlCC,MAjBf,SAAmBC,GACjB,IAAIC,EAASC,UAAUC,OAAS,QAAsBC,IAAjBF,UAAU,GAAmBA,UAAU,GAAK,EAG7EV,GAAQG,EAAUK,EAAIC,EAAS,IAAMN,EAAUK,EAAIC,EAAS,IAAMN,EAAUK,EAAIC,EAAS,IAAMN,EAAUK,EAAIC,EAAS,IAAM,IAAMN,EAAUK,EAAIC,EAAS,IAAMN,EAAUK,EAAIC,EAAS,IAAM,IAAMN,EAAUK,EAAIC,EAAS,IAAMN,EAAUK,EAAIC,EAAS,IAAM,IAAMN,EAAUK,EAAIC,EAAS,IAAMN,EAAUK,EAAIC,EAAS,IAAM,IAAMN,EAAUK,EAAIC,EAAS,KAAON,EAAUK,EAAIC,EAAS,KAAON,EAAUK,EAAIC,EAAS,KAAON,EAAUK,EAAIC,EAAS,KAAON,EAAUK,EAAIC,EAAS,KAAON,EAAUK,EAAIC,EAAS,MAAMI,cAMzf,IAAKd,EAASC,GACZ,MAAMc,UAAU,+BAGlB,OAAOd,GEHMe,IApBf,SAAYC,EAASC,EAAKR,GAExB,IAAIS,GADJF,EAAUA,GAAW,IACFG,SAAWH,EAAQtB,KAAOA,KAK7C,GAHAwB,EAAK,GAAe,GAAVA,EAAK,GAAY,GAC3BA,EAAK,GAAe,GAAVA,EAAK,GAAY,IAEvBD,EAAK,CACPR,EAASA,GAAU,EAEnB,IAAK,IAAIzD,EAAI,EAAGA,EAAI,KAAMA,EACxBiE,EAAIR,EAASzD,GAAKkE,EAAKlE,GAGzB,OAAOiE,EAGT,OAAOV,EAAUW,K,0GCwGbE,EAAYC,aAVM,SAAC,GAOvB,MAAO,CAAEC,KADsL,EAL/LA,KAMqBC,OAD0K,EAJ/LA,OAKqCC,aAD0J,EAH/LA,aAIiEC,aAD8H,EAF/LA,aAG6FvD,cADkG,EAD/LA,iBAKyC,CACzCwD,iBACAC,sBACAC,6BACAC,kCACAC,4BACAC,0BACAC,uBACAC,wBARgBZ,EAvFC,SAAC5E,GAClB,MAA8BiB,oBAAkB,GAAhD,mBAAOwE,EAAP,KAAgBC,EAAhB,KACA,EAAoDzE,mBAAiB,IAArE,mBAAO0E,EAAP,KAA2BC,EAA3B,KACA,EAA0D3E,mBAAiB,IAA3E,mBAAO4E,EAAP,KAA8BC,EAA9B,KAEMC,EAAoB,SAACC,EAAsBC,EAAyBC,GACxE,IAAIC,EAA2BD,EAC/B,GAAqB,KAAjBF,GAA2C,KAApBC,EAAwB,CACjD,IAAIG,EAA4BF,EAAUG,QAAO,SAAA1E,GAAG,OAAIA,EAAIzB,OAAS8F,KACjEI,EAAKlC,OAAS,IAChBiC,EAAMC,EAAKC,QAAO,SAAA/F,GAAI,OAAIA,EAAKgG,SAAS5E,MAAK,SAAA6E,GAAC,OAAIA,IAAMN,aAEhC,KAAjBD,EACTG,EAAMD,EAAUG,QAAO,SAAA1E,GAAG,OAAIA,EAAIzB,OAAS8F,KACd,KAApBC,IACTE,EAAMD,EAAUG,QAAO,SAAA/F,GAAI,OAAIA,EAAKgG,SAAS5E,MAAK,SAAA6E,GAAC,OAAIA,IAAMN,SAE/D,OAAOE,GAQT,OALAK,qBAAU,WACkC,OAAtCxG,EAAMyB,cAAcA,eAAuE,IAA7CzB,EAAMyB,cAAcA,cAAcyC,QAClFlE,EAAMwF,kBAAkBE,KAEzB,CAAC1F,IAEF,sBAAKC,UAAU,4FAAf,UACE,sBAAKA,UAAU,oEAAf,UACE,sBAAKA,UAAU,uBAAf,UACE,sBAAMA,UAAU,kCAAhB,2BACuC,OAAtCD,EAAMyB,cAAcA,cAAyB,cAAC,IAAD,IACD,IAA7CzB,EAAMyB,cAAcA,cAAcyC,OAAe,2DACjD,yBACAuC,SAAU,SAACC,GACTd,EAAsBc,EAAEC,OAAOC,QAEjC3G,UAAU,qCAJV,UAKE,wBAAQ2G,MAAM,GAAd,kCACC5G,EAAMyB,cAAcA,cAAcpB,KAAI,SAACC,EAAMC,GAAP,OACrC,wBAAoBqG,MAAOtG,EAAKsB,GAAhC,SAAqCtB,EAAKuB,OAA7BtB,EAAI,YAIvB,sBAAKN,UAAU,uBAAf,UACE,sBAAMA,UAAU,kCAAhB,oCACmCkE,IAAlCnE,EAAM6G,eAAeP,SAAyB,6CACL,IAA1CtG,EAAM6G,eAAeP,SAAUpC,OAAe,qBAAKjE,UAAU,kBAAf,yCAC9C,yBACAwG,SAAU,SAACC,GACTZ,EAAyBY,EAAEC,OAAOC,QAEpC3G,UAAU,qCAJV,UAKE,wBAAQ2G,MAAM,GAAd,4BACC5G,EAAM6G,eAAeP,SAAUjG,KAAI,SAACC,EAAMC,GAAP,OAClC,wBAAoBqG,MAAOtG,EAAKsB,GAAhC,SAAqCtB,EAAKwG,MAA7BvG,EAAI,gBAKZ,IAAZkF,EAAmB,cAAC,IAAD,IACsI,IAA1JM,EAAkBJ,EAAoBE,EAAuB7F,EAAM4C,cAAcyD,QAAO,SAAA1E,GAAG,OAAIA,EAAImD,SAAW9E,EAAM6G,eAAeE,cAAY7C,OAAe,sBAAKjE,UAAU,0CAAf,UAAyD,yDAAzD,IAA2F,cAAC,IAAD,CAAMA,UAAU,wCAAwC+G,GAAG,oBAA3D,iCACzPjB,EAAkBJ,EAAoBE,EAAuB7F,EAAM4C,cAAcyD,QAAO,SAAA1E,GAAG,OAAIA,EAAImD,SAAW9E,EAAM6G,eAAeE,cAAY1G,KAAI,SAACC,EAAMC,GAAP,OACjJ,cAAC,IAAD,CAEEe,SAAUhB,EACVe,SAAUrB,EAAMqB,SAChBG,SAAQxB,EAAMiH,cAAcvF,MAAK,SAAAC,GAAG,OAAIA,EAAIC,KAAOtB,EAAKsB,MACxDH,cAAezB,EAAMyB,cACrBL,QAAQ,EACRG,OAAQhB,EAAI,EACZqC,cAAe5C,EAAM4C,eAPhBrC,EAAI,YAmCJoE,O,iCCvIR,IAAKuC,EAAZ,sG,SAAYA,K,UAAAA,E,UAAAA,E,gBAAAA,E,OAAAA,M,KAOL,IA8BKC,EA9BCC,EAA0B,SAACC,GACtC,OAAQA,GACN,KAAKH,EAAqBI,IACxB,MAAO,QACT,KAAKJ,EAAqBK,IACxB,MAAO,QACT,KAAKL,EAAqBM,EACxB,MAAO,aACT,KAAKN,EAAqBO,OACxB,MAAO,UAIAC,EAA2B,CACtC,CACEC,IAAKT,EAAqBO,OAC1Bb,MAAOQ,EAAwBF,EAAqBO,SAEtD,CACEE,IAAKT,EAAqBI,IAC1BV,MAAOQ,EAAwBF,EAAqBI,MACpD,CACAK,IAAKT,EAAqBK,IAC1BX,MAAOQ,EAAwBF,EAAqBK,MACpD,CACAI,IAAKT,EAAqBM,EAC1BZ,MAAOQ,EAAwBF,EAAqBM,M,SAI5CL,K,mBAAAA,M,2PCyCNS,E,kDACJ,WAAY5H,GAAwB,IAAD,8BACjC,cAAMA,IAmBR0F,WAAa,SAAClE,GACZ,EAAKqG,SAAS,CAAEpC,QAASjE,KArBQ,EAuBnCsG,mBAAqB,SAACxG,GACpB,EAAKtB,MAAM+H,gBAAgBzG,IAxBM,EA0BnC0G,sBAAwB,SAAC1G,GACnB2G,OAAOC,QAAQ,mEACjB,EAAKlI,MAAM+H,gBAAgBzG,IA5BI,EA+BnCZ,iBAAmB,SAACc,GAClB,EAAKqG,SAAS,CAAEM,aAAc3G,KAhCG,EAmCnC4G,aAAe,SAACC,GACd,IAAIC,GAAgB,EAIpB,GAHgD,IAA5C,EAAKtI,MAAMuI,YAAYrC,UAAUhC,SACnCoE,EAAOL,OAAOC,QAAQ,uFAEX,IAATI,EAAe,CAAC,IAAD,gBACH,EAAKtI,MAAMuI,YAAYrC,WADpB,IACjB,2BAAgD,CAAC,IAAxCK,EAAuC,QAC9C,EAAKvG,MAAM+H,gBAAgBxB,IAFZ,8BAIjB,EAAKvG,MAAMuF,kBAAkB8C,GAEiB,IAA5C,EAAKrI,MAAMuI,YAAYrC,UAAUhC,QACnC,EAAKlE,MAAMuF,kBAAkB8C,GAE/B,EAAKR,SAAS,CAAEW,cAAc,KAjDG,EAoDnCC,iBAAmB,SAACvC,GAClB,IAD+D,EAC3DwC,EAAgB,GAD2C,cAE1CxC,GAF0C,IAE/D,2BAAgC,CAAC,IAAxB5E,EAAuB,QAC9BoH,EAAG,sBAAOA,GAAP,CAAYpH,EAASM,MAHqC,8BAK/D,OAAO8G,GAzD0B,EA4DnCC,kBAAoB,WAC6B,OAA3C,EAAK3I,MAAMyB,cAAcA,eAA4E,IAAlD,EAAKzB,MAAMyB,cAAcA,cAAcyC,QAC5F,EAAKlE,MAAMwF,kBAAkB,EAAKE,YAEU,OAA1C,EAAK1F,MAAM4I,QAAQxI,oBAAgF,IAAjD,EAAKJ,MAAM4I,QAAQxI,mBAAmB8D,QAC1F,EAAKlE,MAAM6I,uBAAuB,EAAKnD,YAEP,OAA9B,EAAK1F,MAAM8E,OAAOgE,SAAyD,IAArC,EAAK9I,MAAM8E,OAAOgE,QAAQ5E,QAClE,EAAKlE,MAAMiF,YAAY,EAAKS,YAEY,OAAtC,EAAK1F,MAAM8E,OAAOiE,iBACpB,EAAKlB,SAAS,CAAEW,cAAc,IAEU,OAAtC,EAAKxI,MAAMgF,aAAakB,WAAmE,IAA7C,EAAKlG,MAAMgF,aAAakB,UAAUhC,QACxC,OAAtC,EAAKlE,MAAM8E,OAAOiE,iBACpB,EAAK/I,MAAMgJ,iBAAiB,EAAKhJ,MAAM8E,OAAOiE,gBAAgBhC,UAAW,EAAKrB,YAIhF,EAAK1F,MAAMiJ,cAAc,EAAKvD,aA5EhC,EAAKwD,MAAQ,CACXzD,SAAS,EACT+C,cAAc,EACdL,cAAc,EACdgB,kBAAkB,EAClBC,QAAS,CACPC,QAAS,GAAIC,IAAK,IAEpBC,mBAAoB,EACpBC,UAAW,GACXC,WAAY,GACZC,SAAU,EACVC,cAAezC,IAAqBO,OACpCmC,YAAa,GACbC,OAAQ,IAjBuB,E,0CAmFnC,WAAU,IAAD,OACP,OACE,eAAC,WAAD,WACA,gCACE,qBAAK5J,UAAU,sDAAf,SACE,sBAAKA,UAAU,6CAAf,UACE,sBAAKA,UAAU,6BAAf,UACE,cAAC,IAAD,CAAiBA,UAAU,2BAC3B,sBAAKA,UAAU,qBAAf,UACE,sBAAMA,UAAU,mCAAhB,wBACA,uBAAMA,UAAU,uCAAhB,qBAAuG,OAAvC6J,KAAK9J,MAAM4I,QAAQmB,gBAA2B,sBAAM9J,UAAU,yBAAhB,2BAA9C,UAAkH6J,KAAK9J,MAAM4I,QAAQmB,gBAAgBnJ,yBAArJ,eAAoO,IAAjDkJ,KAAK9J,MAAM4I,QAAQmB,gBAAgBpJ,UAAqB,SAAW,iBACtT,uBAAMV,UAAU,kCAAhB,qBAAiG,OAAtC6J,KAAK9J,MAAM8E,OAAOiE,gBAA2B,sBAAM9I,UAAU,yBAAhB,2BAA7C,UAAiH6J,KAAK9J,MAAM8E,OAAOiE,gBAAgBiB,YAAnJ,cAAoKF,KAAK9J,MAAM8E,OAAOiE,gBAAgBkB,sBAGrQ,sBAAKhK,UAAU,mCAAf,UACE,qBAAKO,QAAS,kBAAM,EAAKqH,SAAS,CAAEM,cAAc,KAASlI,UAAS,cAAgD,OAAvC6J,KAAK9J,MAAM4I,QAAQmB,gBAA2B,4EAA8E,oEAArI,+DAApE,SAAmX,OAAvCD,KAAK9J,MAAM4I,QAAQmB,gBAA2B,gBAAkB,qBAC5Y,cAAC,IAAD,CAAM/C,GAAG,eAAe/G,UAAS,cAA+C,OAAtC6J,KAAK9J,MAAM8E,OAAOiE,gBAA2B,4EAA8E,2CAApI,+DAAjC,mCAIkB,IAAvBe,KAAKZ,MAAMzD,QACZ,sBAAKxF,UAAU,kCAAf,UACE,qBAAKA,UAAU,0BAAf,gDACA,cAAC,IAAD,OAEF,qBAAKA,UAAU,wCAAf,SACE,qBAAKA,UAAU,yBAAf,SACE,wBAAOA,UAAU,SAAjB,UACE,uBAAOA,UAAU,qCAAjB,SACE,+BACE,oBAAIA,UAAU,sBAAd,eACA,oBAAIA,UAAU,OAAd,oBACA,oBAAIA,UAAU,OAAd,uBACA,oBAAIA,UAAU,OAAd,uBACA,oBAAIA,UAAU,OAAd,2BACA,oBAAIA,UAAU,OAAd,uBACA,oBAAIA,UAAU,OAAd,wBACA,oBAAIA,UAAU,OAAd,oBACA,oBAAIA,UAAU,OAAd,yBACA,4BAGJ,gCACwC,OAArC6J,KAAK9J,MAAMuI,YAAY2B,UACxB,6BACE,oBAAIC,QAAS,EAAb,SAAgB,cAAC,IAAD,QAE4B,IAA5CL,KAAK9J,MAAMuI,YAAY2B,UAAUhG,OACjC,6BACE,oBAAIiG,QAAS,EAAb,SACE,qBAAKlK,UAAU,iEAAf,iCAGJ6J,KAAK9J,MAAMuI,YAAY2B,UAAU7J,KAAI,SAACC,EAAMC,GAAP,iBACnC,qBAAgBN,UAAS,mCAAzB,UACE,oBAAIA,UAAU,sBAAd,SAAqCM,EAAI,IACzC,qBAAIN,UAAU,OAAd,UAAqB,sBAAMA,UAAU,YAAhB,SAA6B,EAAKD,MAAM8E,OAAOgE,UAAlB,UAA6B,EAAK9I,MAAM8E,OAAOgE,QAAQpH,MAAK,SAAAC,GAAG,OAAIA,EAAIoF,YAAczG,EAAKwE,iBAA1F,aAA6B,EAAsEkF,eAArJ,IAA0K,EAAKhK,MAAM8E,OAAOgE,UAAlB,UAA6B,EAAK9I,MAAM8E,OAAOgE,QAAQpH,MAAK,SAAAC,GAAG,OAAIA,EAAIoF,YAAczG,EAAKwE,iBAA1F,aAA6B,EAAsEmF,gBAC7Q,oBAAIhK,UAAU,OAAd,SAAsBY,YAAKP,EAAKkJ,UAAW,gBAC3C,oBAAIvJ,UAAU,OAAd,SAAsBK,EAAKmJ,aAC3B,qBAAIxJ,UAAU,OAAd,UAAsBK,EAAKoJ,SAA3B,YACA,oBAAIzJ,UAAU,OAAd,SAAsBK,EAAK4F,UAAUhC,SACrC,oBAAIjE,UAAU,OAAd,SAAsBY,YAAKP,EAAK8J,UAAW,gBAC3C,oBAAInK,UAAU,OAAd,SAAsB,EAAKD,MAAM4I,QAAQxI,qBAAnB,UAAyC,EAAKJ,MAAM4I,QAAQxI,mBAAmBsB,MAAK,SAAAC,GAAG,OAAIA,EAAI0I,yBAA2B/J,EAAKgK,iBAA/H,aAAyC,EAA+F1J,4BAC9J,oBAAIX,UAAU,OAAd,SAAsBK,EAAKiK,cAC3B,6BACE,qBAAKtK,UAAU,+IAAf,SACE,cAAC,KAAD,UAZGM,EAAI,mBAsBE,IAA5BuJ,KAAKZ,MAAMV,cACZ,cAAC,IAAD,CACE3G,MAAM,kBACNG,UAAU,EACVC,MAAOC,IAAOC,QACdC,MAAO,kBAAM,EAAKyF,SAAS,CAAEW,cAAc,KAC3CnG,eAAe,EACfC,eAAgBC,IAAUiI,MAC1B/H,cAAc,EACdC,QAAS,CAACb,OAAO,GARnB,SASE,cAAC,IAAD,CAAS0D,kBAAmBuE,KAAK1B,aAAcqC,mBAAoBX,KAAK9J,MAAM8E,OAAOiE,iBAAmBe,KAAK9J,MAAM8E,OAAOiE,gBAAgBhC,eAE3G,IAAhC+C,KAAKZ,MAAMC,kBACZ,cAAC,IAAD,CACEtH,MAAM,qBACNG,UAAU,EACVC,MAAOC,IAAOC,QACdC,MAAO,kBAAM,EAAKyF,SAAS,CAAEsB,kBAAkB,KAC/C9G,eAAe,EACfC,eAAgBC,IAAUiI,MAC1B/H,cAAc,EACdC,QAAS,CAACb,OAAO,GARnB,SASyC,OAAtCiI,KAAK9J,MAAMgF,aAAakB,UAAqB,cAAC,IAAD,IACR,OAAtC4D,KAAK9J,MAAM8E,OAAOiE,gBAA2B,yDAC7C,cAAC,IAAD,CACAlC,eAAgBiD,KAAK9J,MAAM8E,OAAOiE,gBAClC1H,SAAUyI,KAAKhC,mBACflF,cAAekH,KAAK9J,MAAMgF,aAAakB,UACvCe,cAAe6C,KAAK9J,MAAMuI,YAAYrC,eAEX,IAA5B4D,KAAKZ,MAAMf,cACZ,cAAC,IAAD,CACEtG,MAAM,kBACNG,UAAU,EACVC,MAAOC,IAAOC,QACdC,MAAO,kBAAM,EAAKyF,SAAS,CAAEM,cAAc,KAC3C9F,eAAe,EACfC,eAAgBC,IAAUiI,MAC1B/H,cAAc,EACdC,QAAS,CAACb,OAAO,GARnB,SASI,qBAAK5B,UAAU,OAAf,SACE,cAAC,IAAD,CACAG,mBAAoB0J,KAAK9J,MAAM4I,QAAQxI,mBACvCK,kBAAmBqJ,KAAK9J,MAAMS,kBAC9BC,iBAAkBoJ,KAAKpJ,8B,GA5MVgK,aAkOZC,EAAY/F,aAbD,SAAC,GAUvB,MAAO,CAAEC,KADyR,EARlSA,KASqBC,OAD6Q,EAPlSA,OAQqCC,aAD6P,EANlSA,aAOiEC,aADiO,EALlSA,aAM6FvD,cADqM,EAJlSA,cAK2H8G,YADuK,EAHlSA,YAIqJK,QAD6I,EAFlSA,QAGuKgC,OAD2H,EADlSA,UAKgD,CAChD3F,iBACAC,sBACAC,6BACAC,kCACAC,4BACAC,0BACAE,uBACAwD,sBACAzD,uBACAwC,qBACAc,4BACApI,uBACAoK,oBACA5B,oBAduBrE,CAetBgD","file":"static/js/11.fb6fdd32.chunk.js","sourcesContent":["import React from 'react'\nimport { FaBusinessTime } from 'react-icons/fa';\nimport { ApplicationPeriodGet } from '../../interfaces/application';\nimport { DATE } from '../../utils/functions';\nimport Loading from '../Loading/Loading';\n\ninterface ApplicationPeriodsProps {\n  applicationPeriods: ApplicationPeriodGet[] | null;\n  setSelectedPeriod: (period: ApplicationPeriodGet) => void;\n  showPeriodFilter: (status: boolean) => void;\n}\n\nconst ApplicationPeriods = (props: ApplicationPeriodsProps) => {\n  return (\n    <div className=\"-mt-4\">\n      <input type=\"text\" className=\"input-white border -mt-2 mb-3\" placeholder=\"Search by year, name\" />\n      {props.applicationPeriods === null ? <Loading /> : props.applicationPeriods.map((item, i) => (\n        <div onClick={() => {props.setSelectedPeriod(item); props.showPeriodFilter(false)}} key={i + 1} \n          className={`flex flex-col md:flex-row items-start md:items-center md:justify-between rounded border ${item.is_active === true ? \"bg-blue-50 border-blue-100\" : \"bg-gray-50 border-gray-100 \"} hover:bg-blue-100 hover:border-blue-500 px-2 py-2 cursor-pointer mb-2`}>\n          <div className=\"flex flex-row items-center gap-3\">\n            <FaBusinessTime className={`${item.is_active === true ? \"text-blue-600\" : \"text-gray-500\"} text-4xl`} />\n            <div className=\"flex flex-col\">\n              <div className={`${item.is_active === true ? \"text-blue-600\" : \"text-gray-600\"} font-bold`}>{item.application_session_name}</div>\n              <div className=\"text-sm text-gray-500\"><span>Status: </span><span className={`${item.is_active === true ? \"text-blue-600\" : \"text-gray-600\"}`}>{item.is_active === true ? \"Active\" : \"Expired\"}</span></div>\n            </div>\n          </div>\n          <div className=\"flex flex-col items-start md:items-end md:justify-end\">\n            <div className=\"text-xs md:text-sm text-right text-gray-500\"><span>Start: </span><span className={`${item.is_active === true ? \"text-blue-600\" : \"text-gray-600\"} text-right font-bold`}>{DATE(item.application_start_date, \"DD/MM/YYYY\")}</span></div>\n            <div className=\"text-xs md:text-sm text-right text-gray-500\"><span>End: </span><span className={`${item.is_active === true ? \"text-blue-600\" : \"text-gray-600\"} text-right font-bold`}>{DATE(item.application_end_date, \"DD/MM/YYYY\")}</span></div>\n          </div>\n        </div>\n      ))}\n    </div>\n  )\n}\n\nexport default ApplicationPeriods\n","import React, { Fragment, useState } from 'react'\nimport { CgDetailsMore } from 'react-icons/cg'\nimport { ImCheckboxChecked, ImCheckboxUnchecked } from 'react-icons/im'\nimport { IoMdTrash } from 'react-icons/io'\nimport { MdEdit } from 'react-icons/md'\nimport { questionTypesStoreInterface } from '../../actions/questionTypes'\nimport EditQuestion from '../../containers/QuestionBank/AddQuestion/UploadQuestion/EditQuestion/EditQuestion'\nimport { QuestionInterface } from '../../interfaces/question'\nimport Modal, { ModalSize, Themes } from '../Modal/Modal'\n\ninterface QuestionItemProps {\n  question: QuestionInterface;\n  callBack: (question: QuestionInterface) => void;\n  status: boolean;\n  questionTypes: questionTypesStoreInterface;\n  select: boolean;\n  number: number;\n  questionsList: QuestionInterface[];\n}\n\nconst QuestionItem = (props: QuestionItemProps) => {\n  const [editMode, setEditMode] = useState<boolean>(false);\n  const unSelectQuestion = () => {\n    setEditMode(false);\n  }\n  return (\n    <Fragment>\n      <div onClick={() => props.select === true && props.callBack(props.question)} className={`bg-gray-50 cursor-pointer rounded border border-gray-200 px-3 py-2 text-gray-700 hover:text-blue-600 flex flex-row items-center justify-between gap-4 ${props.select === true ? \"hover:bg-blue-50\" : \"hover:bg-white\"} hover:border-blue-600 mb-3`}>\n        <div className=\"flex flex-row items-center justify-between w-full\">\n          <div className=\"flex flex-row items-center gap-3\">\n            <div>\n              {props.select === false ? \n              <div className=\"font-bold text-blue-600\">\n                ({props.number})\n              </div> :\n              props.status === true ?\n              <ImCheckboxChecked className=\"text-xl text-blue-600\" /> :\n              <ImCheckboxUnchecked className=\"text-xl text-blue-600\" />}\n            </div>\n            <div className=\"flex flex-col truncate\">\n              <span className=\"text-xs text-blue-600 font-bold w-max\">{props.questionTypes.questionTypes && props.questionTypes.questionTypes.find(itm => itm.id && itm.id === props.question.type)?.title}</span>\n              <span className=\"font-bold\">{props.question.question[0].title}</span>\n              <span className=\"truncate text-xs\">{props.question.question[0].description}</span>\n            </div>\n          </div>\n          {props.select === false &&\n          <div className=\"flex flex-row items-center gap-2\">\n            <div \n            onClick={() => alert(\"Details\")} \n            className=\"bg-gray-50 hover:bg-gray-200 rounded-full px-1 py-1 cursor-pointer\">\n              <CgDetailsMore className=\"text-3xl text-gray-700\"/>\n            </div>\n            <div \n            onClick={() => setEditMode(true)} \n            className=\"bg-gray-50 hover:bg-blue-100 rounded-full px-1 py-1 cursor-pointer\">\n              <MdEdit className=\"text-3xl text-blue-700\"/>\n            </div>\n            <div \n            onClick={() => props.select === false && props.callBack(props.question)} \n            className=\"bg-gray-100 hover:bg-red-100 rounded-full px-1 py-1 cursor-pointer\">\n              <IoMdTrash className=\"text-3xl text-yellow-700\"/>\n            </div>\n          </div>}\n        </div>\n      </div>\n      {editMode === true &&\n      <Modal\n        title=\"\"\n        backDrop={true}\n        theme={Themes.default}\n        close={() => setEditMode(false)}\n        backDropClose={true}\n        widthSizeClass={ModalSize.extraLarge}\n        displayClose={false}\n        padding={{title: false,}}>\n          <div className=\"pt-0\">\n            <EditQuestion \n              selectedQuestion={props.question} \n              questionsList={props.questionsList}\n              unSelectQuestion={unSelectQuestion} \n            />\n          </div>\n      </Modal>}\n    </Fragment>\n  )\n}\n\nexport default QuestionItem\n","// Unique ID creation requires a high quality random # generator. In the browser we therefore\n// require the crypto API and do not support built-in fallback to lower quality random number\n// generators (like Math.random()).\nvar getRandomValues;\nvar rnds8 = new Uint8Array(16);\nexport default function rng() {\n  // lazy load so that environments that need to polyfill have a chance to do so\n  if (!getRandomValues) {\n    // getRandomValues needs to be invoked in a context where \"this\" is a Crypto implementation. Also,\n    // find the complete implementation of crypto (msCrypto) on IE11.\n    getRandomValues = typeof crypto !== 'undefined' && crypto.getRandomValues && crypto.getRandomValues.bind(crypto) || typeof msCrypto !== 'undefined' && typeof msCrypto.getRandomValues === 'function' && msCrypto.getRandomValues.bind(msCrypto);\n\n    if (!getRandomValues) {\n      throw new Error('crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported');\n    }\n  }\n\n  return getRandomValues(rnds8);\n}","export default /^(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|00000000-0000-0000-0000-000000000000)$/i;","import validate from './validate.js';\n/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\n\nvar byteToHex = [];\n\nfor (var i = 0; i < 256; ++i) {\n  byteToHex.push((i + 0x100).toString(16).substr(1));\n}\n\nfunction stringify(arr) {\n  var offset = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  // Note: Be careful editing this code!  It's been tuned for performance\n  // and works in ways you may not expect. See https://github.com/uuidjs/uuid/pull/434\n  var uuid = (byteToHex[arr[offset + 0]] + byteToHex[arr[offset + 1]] + byteToHex[arr[offset + 2]] + byteToHex[arr[offset + 3]] + '-' + byteToHex[arr[offset + 4]] + byteToHex[arr[offset + 5]] + '-' + byteToHex[arr[offset + 6]] + byteToHex[arr[offset + 7]] + '-' + byteToHex[arr[offset + 8]] + byteToHex[arr[offset + 9]] + '-' + byteToHex[arr[offset + 10]] + byteToHex[arr[offset + 11]] + byteToHex[arr[offset + 12]] + byteToHex[arr[offset + 13]] + byteToHex[arr[offset + 14]] + byteToHex[arr[offset + 15]]).toLowerCase(); // Consistency check for valid UUID.  If this throws, it's likely due to one\n  // of the following:\n  // - One or more input array values don't map to a hex octet (leading to\n  // \"undefined\" in the uuid)\n  // - Invalid input values for the RFC `version` or `variant` fields\n\n  if (!validate(uuid)) {\n    throw TypeError('Stringified UUID is invalid');\n  }\n\n  return uuid;\n}\n\nexport default stringify;","import REGEX from './regex.js';\n\nfunction validate(uuid) {\n  return typeof uuid === 'string' && REGEX.test(uuid);\n}\n\nexport default validate;","import rng from './rng.js';\nimport stringify from './stringify.js';\n\nfunction v4(options, buf, offset) {\n  options = options || {};\n  var rnds = options.random || (options.rng || rng)(); // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n\n  rnds[6] = rnds[6] & 0x0f | 0x40;\n  rnds[8] = rnds[8] & 0x3f | 0x80; // Copy bytes to buffer, if provided\n\n  if (buf) {\n    offset = offset || 0;\n\n    for (var i = 0; i < 16; ++i) {\n      buf[offset + i] = rnds[i];\n    }\n\n    return buf;\n  }\n\n  return stringify(rnds);\n}\n\nexport default v4;","import React, { useEffect, useState } from 'react'\nimport Loading from '../../components/Loading/Loading'\nimport { connect } from \"react-redux\";\nimport {\n  Auth, \n  courseStoreInterface,\n  loadCourses,\n  schoolLevelsStoreInterface,\n  loadSchoolLevels,\n  loadEducationCategories,\n  setSelectedEducationCategory,\n  setSelectedSchoolLevel,\n  QuestionBankStoreInterface,\n  setUploadedQuestions,\n  questionTypesStoreInterface,\n  setSelectedCourse,\n  loadQuestionTypes,\n} from \"../../actions\";\nimport { StoreState } from \"../../reducers\";\nimport { course } from '../../interfaces/course';\nimport { QuestionInterface, uploadQuestionsResponse } from '../../interfaces/question';\nimport QuestionItem from './QuestionItem';\nimport { Link } from 'react-router-dom';\n\ninterface UploadedQuestionsProps {\n  questionBank: QuestionBankStoreInterface;\n  setUploadedQuestions: (questions: uploadQuestionsResponse | null) => void;\n  selectedCourse: course;\n  course: courseStoreInterface;\n  callBack: (question: QuestionInterface) => void;\n  questionTypes: questionTypesStoreInterface;\n  loadQuestionTypes: (callback: (loading: boolean) => void) => void;\n  setSelectedCourse: (course: course | null) => void;\n  questionsList: QuestionInterface[];\n  questionPaper: QuestionInterface[];\n}\n\nconst _Questions = (props: UploadedQuestionsProps) => {\n  const [loading, setLoading] = useState<boolean>(false);\n  const [filterQuestionType, setFilterQuestionType] = useState<string>(\"\");\n  const [filterQuestionChapter, setFilterQuestionChapter] = useState<string>(\"\");\n\n  const filteredQuestions = (questionType: string, QuestionChapter: string, questions: QuestionInterface[]) => {\n    let res: QuestionInterface[] = questions;\n    if (questionType !== \"\" && QuestionChapter !== \"\") {\n      let temp: QuestionInterface[] = questions.filter(itm => itm.type === questionType);\n      if (temp.length > 0) {\n        res = temp.filter(item => item.chapters.find(x => x === QuestionChapter));\n      }\n    } else if (questionType !== \"\") {\n      res = questions.filter(itm => itm.type === questionType);\n    } else if (QuestionChapter !== \"\") {\n      res = questions.filter(item => item.chapters.find(x => x === QuestionChapter));\n    }\n    return res\n  }\n\n  useEffect(() => {\n    if (props.questionTypes.questionTypes === null || props.questionTypes.questionTypes.length === 0) {\n      props.loadQuestionTypes(setLoading);\n    }\n  }, [props]);\n  return (\n    <div className=\"bg-white animate__animated animate__fadeInLeft animate__fast px-2 py-2 gap-3 mb-2 rounded\">\n      <div className=\"flex flex-row items-center mb-4 gap-2 bg-blue-100 px-2 py-2 -mx-2\">\n        <div className=\"flex flex-col w-full\">\n          <span className=\"text-gray-700 text-sm font-bold\">Question Type</span>\n          {props.questionTypes.questionTypes === null ? <Loading /> :\n          props.questionTypes.questionTypes.length === 0 ? <div>No Question types found!</div> :\n          <select \n          onChange={(e) => {\n            setFilterQuestionType(e.target.value);\n          }}\n          className=\"input-white border border-gray-400\">\n            <option value=\"\">Choose Question type</option>\n            {props.questionTypes.questionTypes.map((item, i) => (\n              <option key={i + 1} value={item.id}>{item.title}</option>\n            ))}\n          </select>}\n        </div>\n        <div className=\"flex flex-col w-full\">\n          <span className=\"text-gray-700 text-sm font-bold\">Question Chapters</span>\n          {props.selectedCourse.chapters === undefined ? <div>Not found!</div> :\n          props.selectedCourse.chapters!.length === 0 ? <div className=\"text-yellow-700\">No Question chapters found!</div> :\n          <select \n          onChange={(e) => {\n            setFilterQuestionChapter(e.target.value);\n          }}\n          className=\"input-white border border-gray-400\">\n            <option value=\"\">Choose Chapter</option>\n            {props.selectedCourse.chapters!.map((item, i) => (\n              <option key={i + 1} value={item.id}>{item.name}</option>\n            ))}\n          </select>}\n        </div>\n      </div>\n      {loading === true ? <Loading /> :\n      filteredQuestions(filterQuestionType, filterQuestionChapter, props.questionsList.filter(itm => itm.course === props.selectedCourse.course_id)).length === 0 ? <div className=\"text-yellow-700 font-bold flex flex-col\"><div>No questions uploaded!</div> <Link className=\"btn bg-blue-600 text-white mt-4 w-max\" to=\"/upload-questions\">Upload Questions</Link></div> :\n      filteredQuestions(filterQuestionType, filterQuestionChapter, props.questionsList.filter(itm => itm.course === props.selectedCourse.course_id)).map((item, i) => (\n        <QuestionItem \n          key={i + 1}\n          question={item}\n          callBack={props.callBack}\n          status={props.questionPaper.find(itm => itm.id === item.id) ? true : false}\n          questionTypes={props.questionTypes}\n          select={true}\n          number={i + 1} \n          questionsList={props.questionsList} />\n      ))}\n    </div>\n  )\n}\n\n\nconst mapStateToProps = ({\n  auth,\n  course,\n  schoolLevels,\n  questionBank,\n  questionTypes,\n}: StoreState): { auth: Auth; course: courseStoreInterface; schoolLevels: schoolLevelsStoreInterface; questionBank: QuestionBankStoreInterface; questionTypes: questionTypesStoreInterface; } => {\n  return { auth: auth, course: course, schoolLevels: schoolLevels, questionBank: questionBank, questionTypes: questionTypes, };\n};\n\nconst Questions = connect(mapStateToProps, {\n  loadCourses,\n  loadSchoolLevels,\n  loadEducationCategories,\n  setSelectedEducationCategory,\n  setSelectedSchoolLevel,\n  setUploadedQuestions,\n  setSelectedCourse,\n  loadQuestionTypes,\n})(_Questions);\n\nexport default Questions;\n","export enum QuestionNumberFormat {\n  ABC = \"ABC\",\n  abc = \"abc\",\n  NUMBER = \"NUMBER\",\n  I = \"I\",\n}\n\nexport const returnQuestionNumbering = (numbering: QuestionNumberFormat) => {\n  switch (numbering) {\n    case QuestionNumberFormat.ABC:\n      return \"A,B,C\";\n    case QuestionNumberFormat.abc:\n      return \"a,b,c\";\n    case QuestionNumberFormat.I:\n      return \"i, ii, iii\";\n    case QuestionNumberFormat.NUMBER:\n      return \"1,2,3\";\n  }\n}\n\nexport const EXAM_QUESTIONS_NUMBERING = [\n  {\n    key: QuestionNumberFormat.NUMBER,\n    value: returnQuestionNumbering(QuestionNumberFormat.NUMBER)\n  },\n  {\n    key: QuestionNumberFormat.ABC,\n    value: returnQuestionNumbering(QuestionNumberFormat.ABC)\n  },{\n    key: QuestionNumberFormat.abc,\n    value: returnQuestionNumbering(QuestionNumberFormat.abc)\n  },{\n    key: QuestionNumberFormat.I,\n    value: returnQuestionNumbering(QuestionNumberFormat.I)\n  },\n]\n\nexport enum PrepareExamStatus {\n  Created = \"Created\",\n}\n\nexport interface prepare_exam_request {\n    period: string;\n    course: string;\n    questions: string[];\n    exam_status: PrepareExamStatus;\n    termes: string;\n    questions_per_page: number;\n    exam_date: string;\n    start_time: string;\n    duration: number;\n    number_format: QuestionNumberFormat;\n    discription: string;\n}\n\nexport interface ExamItemResponse {\n  questions: string[];\n  status: number;\n  period: string;\n  course: string;\n  exam_status: PrepareExamStatus;\n  termes: string;\n  questions_per_page: number;\n  exam_date: string;\n  start_time: string;\n  duration: number;\n  number_format: QuestionNumberFormat;\n  discription: string;\n  createdAt: string;\n  updatedAt: string;\n  id: string;\n}","import React, { Component, Fragment } from \"react\";\nimport Courses from \"../../../components/Courses/Courses\";\nimport Modal, { ModalSize, Themes } from \"../../../components/Modal/Modal\";\nimport { connect } from \"react-redux\";\nimport {\n  Auth, \n  courseStoreInterface,\n  loadCourses,\n  schoolLevelsStoreInterface,\n  loadSchoolLevels,\n  loadEducationCategories,\n  setSelectedEducationCategory,\n  setSelectedSchoolLevel,\n  QuestionBankStoreInterface,\n  setUploadedQuestions,\n  questionTypesStoreInterface,\n  loadQuestionTypes,\n  loadQuestionBank,\n  setSelectedCourse,\n  PrepareExamsStoreInterface,\n  addExamQuestion,\n  applicationPeriodsStoreInterface,\n  loadApplicationPeriods,\n  setSelectedPeriod,\n  System,\n  PushPopupAlert,\n  loadExamsList,\n} from \"../../../actions\";\nimport { StoreState } from \"../../../reducers\";\nimport { course } from \"../../../interfaces/course\";\nimport { QuestionInterface, uploadQuestionsResponse } from \"../../../interfaces/question\";\nimport Questions from \"../../../components/Questions/Questions\";\nimport Loading from \"../../../components/Loading/Loading\";\nimport { ApplicationPeriodGet } from \"../../../interfaces/application\";\nimport ApplicationPeriods from \"../../../components/ApplicationPeriods/ApplicationPeriods\";\nimport { RiFilePaperFill } from \"react-icons/ri\";\nimport { QuestionNumberFormat } from \"../../../interfaces/prepare_exam\";\nimport { DATE } from \"../../../utils/functions\";\nimport { MdMoreHoriz } from \"react-icons/md\";\nimport { Link } from \"react-router-dom\";\n\ninterface ExamsListProps {\n  selectedCourse: course;\n  questionBank: QuestionBankStoreInterface;\n  course: courseStoreInterface;\n  questionTypes: questionTypesStoreInterface;\n  prepareExam: PrepareExamsStoreInterface;\n  system: System;\n  setUploadingStatus: (status: boolean) => void;\n  setSelectedCourse: (coure: course | null) => void;\n  setUploadedQuestions: (questions: uploadQuestionsResponse | null) => void;\n  loadQuestionTypes: (callback: (loading: boolean) => void) => void;\n  loadQuestionBank: (course_id: string, callback: (loading: boolean) => void) => void;\n  addExamQuestion: (question: QuestionInterface) => void;\n  periods: applicationPeriodsStoreInterface;\n  loadApplicationPeriods: (callback: (loading: boolean) => void) => void;\n  setSelectedPeriod: (period: ApplicationPeriodGet) => void;\n  loadExamsList: (callback: (loading: boolean) => void) => void;\n  loadCourses: (callback: (loading: boolean) => void) => void;\n}\ninterface ExamsListState {\n  loading: boolean;\n  selectCourse: boolean;\n  selectPeriod: boolean;\n  addQuestionModal: boolean;\n  formErr: {\n    element: string;\n    msg: string;\n  } | null;\n  questions_per_page: number;\n  exam_date: string;\n  start_time: string;\n  duration: number;\n  number_format: string;\n  discription: string;\n  termes: string;\n}\n\nclass _ExamsList extends Component<ExamsListProps, ExamsListState> {\n  constructor(props: ExamsListProps) {\n    super(props);\n\n    this.state = {\n      loading: false,\n      selectCourse: false,\n      selectPeriod: false,\n      addQuestionModal: false,\n      formErr: {\n        element: \"\", msg: \"\"\n      },\n      questions_per_page: 1,\n      exam_date: \"\",\n      start_time: \"\",\n      duration: 1,\n      number_format: QuestionNumberFormat.NUMBER,\n      discription: \"\",\n      termes: \"\",\n    };\n  }\n  setLoading = (status: boolean) => {\n    this.setState({ loading: status });\n  }\n  addQuestionToPaper = (question: QuestionInterface) => {\n    this.props.addExamQuestion(question);\n  }\n  removeToQuestionPaper = (question: QuestionInterface) => {\n    if (window.confirm(\"Are you sure do you want to remove question to question paper?\")) {\n      this.props.addExamQuestion(question);\n    }\n  }\n  showPeriodFilter = (status: boolean) => {\n    this.setState({ selectPeriod: status })\n  }\n\n  chooseCourse = (myCourse: course | null) => {\n    let conf: boolean = false;\n    if (this.props.prepareExam.questions.length !== 0) {\n      conf = window.confirm(\"Are you sure do you want to change course? You will loose your selected questions\")\n    }\n    if (conf === true) {\n      for (let x of this.props.prepareExam.questions) {\n        this.props.addExamQuestion(x);\n      }\n      this.props.setSelectedCourse(myCourse);\n    }\n    if (this.props.prepareExam.questions.length === 0) {\n      this.props.setSelectedCourse(myCourse);\n    }\n    this.setState({ selectCourse: false });\n  }\n\n  examQuestionsIds = (questions: QuestionInterface[]): string[] => {\n    let ids: string[] = [];\n    for (let question of questions) {\n      ids = [...ids, question.id];\n    }\n    return ids;\n  }\n\n  componentDidMount = () => {\n    if (this.props.questionTypes.questionTypes === null || this.props.questionTypes.questionTypes.length === 0) {\n      this.props.loadQuestionTypes(this.setLoading);\n    }\n    if (this.props.periods.applicationPeriods === null || this.props.periods.applicationPeriods.length === 0) {\n      this.props.loadApplicationPeriods(this.setLoading);\n    }\n    if (this.props.course.courses === null || this.props.course.courses.length === 0) {\n      this.props.loadCourses(this.setLoading);\n    }\n    if (this.props.course.selected_course === null) {\n      this.setState({ selectCourse: true });\n    }\n    if (this.props.questionBank.questions === null || this.props.questionBank.questions.length === 0) {\n      if (this.props.course.selected_course !== null) {\n        this.props.loadQuestionBank(this.props.course.selected_course.course_id, this.setLoading);\n      }\n    }\n    // if (this.props.prepareExam.examsList === null || this.props.prepareExam.examsList.length === 0) {\n      this.props.loadExamsList(this.setLoading);\n    // }\n    \n  }\n  render() {\n    return (\n      <Fragment>\n      <div>\n        <div className=\"mt-3 rounded px-2 flex flex-col gap-3 bg-white py-2\">\n          <div className=\"flex flex-row items center justify-between\">\n            <div className=\"flex flex-row items-center\">\n              <RiFilePaperFill className=\"text-7xl text-blue-600\" />\n              <div className=\"flex flex-col px-1\">\n                <span className=\"text-gray-600 text-2xl font-bold\">Exams list</span>\n                <span className=\"text-blue-600 text-sm font-bold mt-1\">Period: {this.props.periods.selected_period === null ? <span className=\"text-yellow-700 italic\">Not selected!</span> : (`${this.props.periods.selected_period.application_session_name} - ${this.props.periods.selected_period.is_active === true ? \"Active\" : \"Not valid!\"}`)}</span>\n                <span className=\"text-blue-600 text-sm font-bold\">Course: {this.props.course.selected_course === null ? <span className=\"text-yellow-700 italic\">Not selected!</span> : (`${this.props.course.selected_course.course_code} - ${this.props.course.selected_course.course_name}`)}</span>\n              </div>\n            </div>\n            <div className=\"flex flex-row items-center gap-2\">\n              <div onClick={() => this.setState({ selectPeriod: true })} className={`btn ${this.props.periods.selected_period === null ? \"bg-yellow-50 hover:bg-yellow-100 border border-yellow-600 text-yellow-600\" : \"bg-blue-50 hover:bg-blue-100 border border-blue-100 text-blue-600\"} h-max flex items-center justify-center h-10 cursor-pointer`}>{this.props.periods.selected_period === null ? \"Choose period\" : \"Filter by Period\"}</div>\n              <Link to=\"prepare-exam\" className={`btn ${this.props.course.selected_course === null ? \"bg-yellow-50 hover:bg-yellow-100 border border-yellow-600 text-yellow-600\" : \"bg-blue-600 hover:bg-blue-800 text-white\"} h-max flex items-center justify-center h-10 cursor-pointer`}>Prepare exam</Link>\n            </div>\n          </div>\n        </div>\n        {this.state.loading === true ? \n        <div className=\"px-4 py-6 mt-4 bg-white rounded\">\n          <div className=\"text-gray-600 mb-3 px-4\">Loading exams list, Please wait...</div>\n          <Loading /> \n        </div>:\n        <div className=\"rounded bg-white px-3 py-3 mt-2 mb-28\">\n          <div className=\"w-full overflow-x-auto\">\n            <table className=\"w-full\">\n              <thead className=\"bg-blue-50 font-bold text-gray-800\">\n                <tr>\n                  <td className=\"py-2 pl-2 font-bold\">#</td>\n                  <td className=\"py-2\">Course</td>\n                  <td className=\"py-2\">Exam date</td>\n                  <td className=\"py-2\">Exam time</td>\n                  <td className=\"py-2\">Exam duration</td>\n                  <td className=\"py-2\">Questions</td>\n                  <td className=\"py-2\">Created at</td>\n                  <td className=\"py-2\">Period</td>\n                  <td className=\"py-2\">Exam status</td>\n                  <td></td>\n                </tr>\n              </thead>\n              <tbody>\n                {this.props.prepareExam.examsList === null ? \n                <tr>\n                  <td colSpan={6}><Loading /></td>\n                </tr> :\n                  this.props.prepareExam.examsList.length === 0 ?\n                  <tr>\n                    <td colSpan={6}>\n                      <div className=\"rounded bg-gray-100 px-3 py-3 flex items-center justify-center\">No exams found!</div>\n                    </td>\n                  </tr> :\n                  this.props.prepareExam.examsList.map((item, i) => (\n                    <tr key={i + 1} className={`border-b border-gray-300 text-sm`}>\n                      <td className=\"pl-2 px-2 font-bold\">{i + 1}</td>\n                      <td className=\"py-2\"><span className=\"font-bold\">{this.props.course.courses && this.props.course.courses.find(itm => itm.course_id === item.course)?.course_code}</span>-{this.props.course.courses && this.props.course.courses.find(itm => itm.course_id === item.course)?.course_name}</td>\n                      <td className=\"py-2\">{DATE(item.exam_date, \"DD/MM/YYYY\")}</td>\n                      <td className=\"py-2\">{item.start_time}</td>\n                      <td className=\"py-2\">{item.duration} hours</td>\n                      <td className=\"py-2\">{item.questions.length}</td>\n                      <td className=\"py-2\">{DATE(item.createdAt, \"DD/MM/YYYY\")}</td>\n                      <td className=\"py-2\">{this.props.periods.applicationPeriods && this.props.periods.applicationPeriods.find(itm => itm.application_session_id === item.period)?.application_session_name}</td>\n                      <td className=\"py-2\">{item.exam_status}</td>\n                      <td>\n                        <div className=\"text-2xl flex items-center justify-center rounded-full bg-gray-100 hover:bg-blue-100 text-gray-600 hover:text-blue-600 h-10 w-10 float-right\">\n                          <MdMoreHoriz />\n                        </div>\n                      </td>\n                    </tr>\n                  ))}\n              </tbody>\n            </table>\n          </div>\n        </div>}\n      </div>\n      {this.state.selectCourse === true &&\n      <Modal\n        title=\"Choose a course\"\n        backDrop={true}\n        theme={Themes.default}\n        close={() => this.setState({ selectCourse: false })}\n        backDropClose={true}\n        widthSizeClass={ModalSize.large}\n        displayClose={true}\n        padding={{title: true,}}>\n        <Courses setSelectedCourse={this.chooseCourse} selected_course_id={this.props.course.selected_course && this.props.course.selected_course.course_id} />\n      </Modal>}\n      {this.state.addQuestionModal === true &&\n      <Modal\n        title=\"Add exam questions\"\n        backDrop={true}\n        theme={Themes.default}\n        close={() => this.setState({ addQuestionModal: false })}\n        backDropClose={true}\n        widthSizeClass={ModalSize.large}\n        displayClose={true}\n        padding={{title: true,}}>\n        {this.props.questionBank.questions === null ? <Loading /> :\n        this.props.course.selected_course === null ? <div>Please choose a course</div> :\n        <Questions \n        selectedCourse={this.props.course.selected_course} \n        callBack={this.addQuestionToPaper} \n        questionsList={this.props.questionBank.questions}\n        questionPaper={this.props.prepareExam.questions} />}\n      </Modal>}\n      {this.state.selectPeriod === true &&\n      <Modal\n        title=\"Choose a period\"\n        backDrop={true}\n        theme={Themes.default}\n        close={() => this.setState({ selectPeriod: false })}\n        backDropClose={true}\n        widthSizeClass={ModalSize.large}\n        displayClose={true}\n        padding={{title: true,}}>\n          <div className=\"px-2\">\n            <ApplicationPeriods \n            applicationPeriods={this.props.periods.applicationPeriods} \n            setSelectedPeriod={this.props.setSelectedPeriod} \n            showPeriodFilter={this.showPeriodFilter} />\n          </div>\n      </Modal>}\n      </Fragment>\n    );\n  }\n}\n\n\nconst mapStateToProps = ({\n  auth,\n  course,\n  schoolLevels,\n  questionBank,\n  questionTypes,\n  prepareExam,\n  periods,\n  system,\n}: StoreState): { auth: Auth; course: courseStoreInterface; schoolLevels: schoolLevelsStoreInterface; questionBank: QuestionBankStoreInterface; questionTypes: questionTypesStoreInterface; prepareExam: PrepareExamsStoreInterface; periods: applicationPeriodsStoreInterface; system: System } => {\n  return { auth: auth, course: course, schoolLevels: schoolLevels, questionBank: questionBank, questionTypes: questionTypes, prepareExam: prepareExam, periods: periods, system: system };\n};\n\nexport const ExamsList = connect(mapStateToProps, {\n  loadCourses,\n  loadSchoolLevels,\n  loadEducationCategories,\n  setSelectedEducationCategory,\n  setSelectedSchoolLevel,\n  setUploadedQuestions,\n  loadQuestionTypes,\n  loadQuestionBank,\n  setSelectedCourse,\n  addExamQuestion,\n  loadApplicationPeriods,\n  setSelectedPeriod,\n  PushPopupAlert,\n  loadExamsList,\n})(_ExamsList);\n"],"sourceRoot":""}
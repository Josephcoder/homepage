{"version":3,"sources":["containers/Admin/CenterReport/CenterReport.tsx","containers/SessionSettings/NoSession.tsx","components/Navigation/SideNavigation.tsx","containers/Admin/ExamReport/DoneExamList.tsx","components/Loading/TableLoading.tsx","actions/users.ts","containers/AdminDashboard/ChartComponents/VBarChart.tsx","containers/Admin/ExamReport/ExamReport.tsx","containers/Admin/ExamReport/CandiadtePerformancePerDistrict.tsx","containers/Admin/ExamReport/ExamPerformancePerDistrict.tsx","containers/Admin/ExamReport/ExamReportFilters.tsx","containers/Admin/ExamReport/ExamReportTitle.tsx","utils/ExportToExcel.tsx","utils/mineduc.png","components/DownloadPDF/rest.tsx","containers/SessionSettings/ChooseSession.tsx","containers/Admin/ExamReport/CandidatePerformance.tsx","containers/Admin/ExamReport/ExamList.tsx","containers/Admin/ExamReport/ExamReportModals.tsx","containers/UserManagement/UserList.tsx","containers/UserManagement/RoleList.tsx","containers/UserManagement/UserRole.tsx","shared/blank_profile.png","containers/AdminDashboard/ChartComponents/PieChart.tsx","containers/AdminDashboard/DashboardLabelItem.tsx","containers/Admin/ExamReport/ExamPerformance.tsx","containers/AdminDashboard/ExamDashboard/ExamDashboardLabels.tsx","containers/UserManagement/UserAccess.tsx","containers/AdminDashboard/ExamDashboard/ExamDashboardTitle.tsx","containers/AdminDashboard/ExamDashboard/ExamPreparationChart.tsx","containers/AdminDashboard/ExamDashboard/ExamProgressChart.tsx","containers/AdminDashboard/ExamDashboard/ExamPerformanceChart.tsx","containers/AdminDashboard/ExamDashboard/ExamDashboard.tsx","interfaces/center_report.ts","containers/Admin/CenterReport/DistrictList.tsx"],"names":["centerReportTitleType","defaultReportContent","key","centerReportContentKeyInterface","district_name","title","status","center_name","room_number","room_type","room_capacity","room_occupation","invigilator","index","props","setLoading","setState","loading","setSelectAll","selectAll","setSelectSession","selectSession","setSelectedReportTitle","thisTitle","selectedReportTitle","setReportTitle","reportTitle","setSelectedSession","thisSession","selectedSession","setDefaultReport","thisReport","ROOM_INVIGILATOR","ROOM_OCCUPATION","setFormError","data","formError","loadReportMainData","institution_id","session_id","a","axios","get","API","APPLICATION","res","reportMainData","console","error","reportMainData_error","PushPopupAlert","errorToText","theme","PopupAlertTheme","danger","loadInvigilator","callback","AUTH","invigilatorData","invigilatorData_error","setSortOrder","thisOrder","sortOrder","setSortProperty","thisProperty","sortProperty","setIsSorted","isSorted","setGenerateReportModal","generateReportModal","loadExamData","courses","length","loadCourses","loadingExam","examsList","loadExamsList","FC_OnSessionChanged","FC_OnInstitutionChanged","FC_GetAllSessionByInstitution","errorMsg","sessionData","isEmptyOrSpaces","warning","activeSession","find","item","is_active","_id","componentDidMount","match","params","defaultReportType","FC_HasInstitute","auth","education_institution_id","schoolLevels","education_categories","loadEducationCategories","setSelectedEducationCategory","education_institute_id","selectedEducationCategory","state","FC_FilterReportData","allData","district_id","center_id","course_id","log","result","filter","thisData","_result","check","course_in_room","course","occupied","push","updateContentToPrint","selectedDistrict","selectedExam","course_name","course_code","session_plan_name","arrayNew","n","reportDataResult","roomWithOccupation","Object","prototype","hasOwnProperty","call","dataArray","no","capitalizeFirstLetter","capacity","reportContentExport","centerToPrint","updateReportContent","findIndex","newArray","isChangeAllowed","resetReportContent","currentState","setDownloading","downloading","FC_GeneratePDF","document","querySelectorAll","table","getElementById","reportSettings","doneBy","user","fname","lname","subjectTitle","subject","period","footer","institute","generatePDF","setSort","searchData","objList","text","undefined","product","flag","prop","toString","toLowerCase","indexOf","setChooseDistrict","chooseDistrict","setSelectedDistrict","searchInput","searchExamInput","chooseExam","this","className","sessionPlan","allSessionPlans","map","i","onClick","education_category_title","disabled","reportType","onChange","e","target","value","type","placeholder","id","cols","colSpan","sortThisArray","backDrop","Themes","default","close","backDropClose","widthSizeClass","ModalSize","medium","displayClose","padding","element","msg","fileData","fileName","btnName","extraLarge","allSession","chooseAll","currentSelected","districtList","getDistrictInRoom","loadindRequest","isModal","FC_reportExamList","searchExamList","Component","CenterReport","connect","prepareExam","NoSession","description","React","memo","_SideNavigation","PageHasSubNav","componentWillUnmount","isAuthenticated","navActive","system","navigation","children","SideNavigation","NavToogle","MainItem","icon","MdBrightness1","active","count","IconDefined","ExaminationProgressReportContentKeyInterface","examinationProgressIsChangeAllowed","COURSER_NAME","COURSE_CODE","PERIOD","STATUS","defaultExaminationProgressContent","SCHOOL_LEVEL","DATE","TIME","DURATION","displayStatus","FC_reportDoneExamList","allCourses","allExams","doneExams","ids","includes","courser","doneExam","school_levels","exam","preparation_status","exam_status","FC_reportDoneExamListFilter","thisList","thisValue","searchExamData","DoneExamList","useState","setSearchInput","courseListData","examsListData","doneExamsData","filterExamProgress","exam_date","start_time","duration","getPeriodById","thisPeriod","TableLoading","displayCols","colsArray","documentValidationStatus","url","userPageLimit","fetchUserAccess","page","dispatch","setAxiosToken","ActionTypes","FETCH_USERS_ACCESS","payload","users","next","previous","total_users","user_error","blockUserToSystem","user_id","BLOCK_USER_TO_SYSTEM","unBlockUserToSystem","UNBLOCK_USER_TO_SYSTEM","assignRoleToUserAccess","ASSIGN_ROLE_TO_USER","customizeUserAccess","CUSTOMIZE_USER_ACCESS","resetUserAccess","RESET_USER_ACCESS","defaultBar","borderRadius","horizontal","columnWidth","endingShape","VBarChart","chart","events","dataPointSelection","event","chartContext","config","labelClicked","w","labels","dataPointIndex","FC_LoadSelected","seriesIndex","stacked","plotOptions","bar","dataLabels","enabled","xaxis","rotate","categories","categoriesLabel","tickPlacement","yaxis","yaxisText","fill","opacity","tooltip","y","formatter","val","tooltipText","grid","left","right","noData","align","verticalAlign","options","setOptions","useEffect","colors","chartClicked","zoom","autoScaleYaxis","series","width","height","chartHeight","reportTitleType","FC_CandiadtePerformancePerDistrictFilter","dataList","swap","exam_stastus","exam_location","j","user_total_marks","adminExamReport","candidatePerformanceData","FC_reportCandidatePerformanceData","reportCourseId","reportDistrictId","filterApplicantPerformance","Loading","searchCandidatePerformanceData","slice","controlRowsByStatus","user_name","national_id","user_email","user_phone","timestampToDate","timeAMPM","end_time","ReportUserExamStatus","Editing","Number","toFixed","FC_ExamPerformancePerDistrictPropsData","examsData","pass","failed","exam_ids","toLocaleLowerCase","_marks","candidatesByExam","_key","total_marks","user_status","pass_applicant","failed_applicant","applicants","NoResult","NoResultThemes","Dark","search","ExamReportFilters","EXAM_PERFORMANCE","EXAM_DISTRICT_PERFORMANCE","EXAM_PREPARATION","setFilterPreparation","filterPreparation","EXAMINATION_PROGRESS","setFilterExamProgress","APPLICANTS_PERFORMANCE","APPLICANTS_DISTRICT_PERFORMANCE","setFilterApplicantPerformance","values","SetReportDistrictId","changeReport","setChangeReport","districtModal","setDistrictModal","excelModal","setExcelModal","courseModal","setCourseModal","dataToPrint","updateExamToPrint","downlaodPDF","ExamReportModals","modalFor","ModalForTypes","modalState","changeModalState","excelReportTitle","setExcelReportTitle","examsToPrint","examPreparationReportContent","setExamPreparationReportContent","examPerformanceToPrint","examPerformanceReportContent","setExamPerformanceReportContent","exam30PerformanceToPrint","exam30PerformanceReportContent","setExam30PerformanceReportContent","examinationProgressToPrint","examinationProgressReportContent","setExaminationProgressExamPerformanceReportContent","candidateExamPerformanceToPrint","candidateExamPerformanceReportContent","setCandidateExamPerformanceReportContent","candidate30ExamPerformanceToPrint","candidate30ExamPerformanceReportContent","setCandidate30ExamPerformanceReportContent","choose_district","districtId","loadExaminationProgress","DoneExam","choose_exam","AllExamData","finished","thisExam","getExamByCourseId","periods","period_id","loadAllExams","selected_period","_ExamReport","setLoadingCourses","loadingCourses","setLoadingExams","loadingExams","setLoadingDoneExam","loadingDoneExam","setLoadingCandidatesExamPerformance","loadingCandidatesExamPerformance","setLoadingExamPerformance","loadingExamPerformance","setLoadingSettings","loadingSettings","setSelectPeriod","selectPeriod","setSelectedPeriod","setExamsToPrint","setExamPerformanceToPrint","setExam30PerformanceToPrint","setExaminationProgressToPrint","setCandidateExamPerformanceToPrint","setCandidate30ExamPerformanceToPrint","selectDefaultSession","active_period","onPeriodChange","FD_GetSessions","thisEducation","loadSchoolLevels","loadDoneExam","loadPerfomranceExam","loadCandidatesExamPerformance","order","sortBy","ReportGetCandidatePerformanceSortTypes","getLevelbyId","level_id","school_level_id","getCourses","search_all","forEach","level","levelDetail","education_institute","school_level","findLevel","school_level_name","exam_period","exam_time","exam_duration","ExamPerformance","FC_reportExamPerformanceData","exam_performance","CandidatesExamPerformance","applicant_id","exam_start_time","exam_end_time","performance_status","applicant_name","email","phone","marks","addToTitle","orientation","defaultExamPreparationReportContent","defaultExamPerformanceContent","defaultCandidateExamPerformanceContent","ExamList","examsPerformanceData","thisDistrict","Light","component","CandidatePerformance","applicationPeriods","ExamReport","ExportToExcel","showIcon","apiData","wb","Sheets","XLSX","json_to_sheet","SheetNames","excelBuffer","bookType","Blob","FileSaver","exportToCSV","require","addFooters","doc","pageCount","internal","getNumberOfPages","setFont","setFontSize","setPage","String","pageSize","callBack","lMargin","jsPDF","setTextColor","addImage","Logo","getWidth","lines","splitTextToSize","pdfInMM","getTextWidth","addPage","autoTable","html","startY","margin","cellPadding","rowHeight","bodyStyles","valign","columnStyles","cellWidth","tableWidth","finalY","lastAutoTable","Date","save","returnPromise","then","isPlansActive","plans","today","activePlans","plan","startDate","start_date","endDate","end_date","getTime","type_status","SessionPlanTypeStatus","OPEN","ChooseSession","searched","selectedPlan","setSelectedPlan","setSearch","itm","type_key","type_title","CandidateExamPerformanceReportContentKeyInterface","candidateExamPerformanceIsChangeAllowed","APPLICANT","N_ID","EMAIL","PHONE","MARKS","START_TIME","END_TIME","user_info","n_id","phone_number","FC_reportCandidatePerformanceDataFilter","examPreparationReportContentKeyInterface","examPreparationIsChangeAllowed","FC_reportExamListFilter","thisStatus","createdAt","FC_DistinctDistrict","locations","flags","output","l","roomLocation","getAllRoom","SetReportCourseId","loadingLocation","setLoadingLocation","setError","setDistrictId","examPerformanceIsChangeAllowed","updateExamPerformanceReportContent","isSelectAllNeeded","updateCandidateExamPerformanceReportContent","showGenerateBtn","updateExamPreparationReportContent","updateExaminationProgressReportContent","isAllDistrictAllowed","LocationsInArray","selectDistrict","ModalState","RoleList","roleList","setChooseRole","role","handleSelectRole","system_user_role_id","UserRole","setRoleId","roleId","setSelectedRole","selectedRole","setProvinceId","provinceId","setCenterId","centerId","setRoomId","roomId","setLoadingForm","loadingForm","setInstituteId","instituteId","setLoadingRequest","loadingRequest","chooseRole","setDefaultState","default_access","LOAD_province","LOAD_district","district_required","roomList","distinctDistrict","province_id","room_required","room_id","userInfo","vvvvv","role_id","TYPE","tableData","access","task","permitted","create","view","update","delete","Math","random","assignRoleToUser","preventDefault","window","confirm","education_institution_required","formData","school_id","post","currentPage","setChangeRole","success","role_error","location","districts","keyDistrict","distinctCenter","rooms","distinctRoom","onSubmit","province","province_name","district","center","room","room_name","Table","columns","columnTitle","alignText","rows","pagination","searchBG","thColor","tableId","getUserById","userId","LocationData","locationTemp","p","d","centers","c","r","UserList","setManageUserId","manageUserId","setLoadingRequestType","loadingRequestType","setRoomList","setRoomTables","roomTable","setCurrentAccess","currentAccess","setUserAccess","userAccess","allRoom","setLoadingUser","loadingUser","pageNumber","setManageUser","sex","getRoleById","blockUser","actionType","patch","info","blockUser_ERROR","restUserAccess","USER","resetedAccess","reseting_user_access","DATA_GetUser","DATA_GetRoleById","DATA_ThisRoom","manageUser","src","photo","profile","alt","getInstituteById","custome_access","changeRole","UserAccess","PieChart","DashboardLabelItem","FaUsers","iconColor","countOver","toAnyDigit","examPerformanceReportContentKeyInterface","PERFORMANCE","examPerformance","answer_sheet_id","Fragment","ExamDashboardLabels","numCols","labelsOnRow","childrenPosition","_UserAccess","setViewPermission","viewPermission","setLoadindRequest","setCreatePermission","createPermission","setUpdatePermission","updatePermission","setDeletePermission","deletePermission","setLoadind","overrideUserAccess","overideAccess","findCustom","custom","handleCustomization","custome_user_access_id","customize_access","to","checked","ExamDashboardTitle","education","loadingEducation","setThisEducation","setThisPeriod","application_sessions","session","ExamPreparationChart","name","examPreparationProgress","remaining","ExamProgressChart","progressData","ExamPerformanceChart","loadCoursesByInstitute","courseList","defaultValue","completeExams","remainingExams","dataFound","all","loadExamPreparationProgress","isDatePast","dateParam","date","moment","format","todayDate","pastDate","diff","loadExamAttendance","applicantList","_ExamDashboard","setChangingPeriod","changingPeriod","loadByPeriods","GetAllSessionPlans","sessions","action","FaBookOpen","legend","show","position","horizontalAlign","fontSize","itemMargin","vertical","pie","donut","color","offsetY","fontFamily","total","label","globals","seriesTotals","reduce","b","ExamDashboard","invigilators","thisRoom","getRoomOccupation","roles_to_users","isUsed","DistrictList","bgWhite"],"mappings":"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","file":"static/js/23.96464216.chunk.js","sourcesContent":["import axios from \"axios\";\nimport React, { Component, Fragment } from \"react\";\nimport { BiExport, BiSort } from \"react-icons/bi\";\nimport { CgFileDocument } from \"react-icons/cg\";\nimport { FiEdit } from \"react-icons/fi\";\nimport { ImFilesEmpty } from \"react-icons/im\";\nimport {\n  MdCheckBox,\n  MdCheckBoxOutlineBlank,\n  MdHistory,\n  MdLocationCity,\n  MdRadioButtonChecked,\n  MdRadioButtonUnchecked,\n} from \"react-icons/md\";\nimport { connect } from \"react-redux\";\nimport { RouteComponentProps } from \"react-router\";\nimport {\n  Auth,\n  loadCourses,\n  loadEducationCategories,\n  loadExamsList,\n  PushPopupAlert,\n  schoolLevelsStoreInterface,\n  setSelectedEducationCategory,\n} from \"../../../actions\";\nimport { FC_GetAllSessionByInstitution } from \"../../../actions/session\";\nimport { PopupAlertData } from \"../../../components/Alert/Popup\";\nimport {\n  generatePDF,\n  reportSettingsInterface,\n} from \"../../../components/DownloadPDF/rest\";\nimport Loading from \"../../../components/Loading/Loading\";\nimport TableLoading from \"../../../components/Loading/TableLoading\";\nimport Modal, { ModalSize, Themes } from \"../../../components/Modal/Modal\";\nimport { SideNavigation } from \"../../../components/Navigation/SideNavigation\";\nimport {\n  SessionPlanInterface,\n  course,\n  education_category,\n} from \"../../../interfaces\";\nimport {\n  centerReportContentInterface,\n  centerReportContentKeyInterface,\n  centerReportInterface,\n  centerReportInterface_NEW,\n  CenterToPrintInterface,\n  getDistrictInRoom,\n  roomDistrictInterface,\n  roomWithOccupation,\n} from \"../../../interfaces/center_report\";\nimport { PopupAlertTheme } from \"../../../interfaces/popupAlert\";\nimport { ExamItemResponse } from \"../../../interfaces/prepare_exam\";\nimport { UserByTypeInterfaceAPI } from \"../../../interfaces/user_by_type\";\nimport { StoreState } from \"../../../reducers\";\nimport { SessionPlanReducerInterface } from \"../../../reducers/session\";\nimport {\n  capitalizeFirstLetter,\n  isEmptyOrSpaces,\n} from \"../../../shared/dataTest\";\nimport { API } from \"../../../utils/api\";\nimport ExportToExcel from \"../../../utils/ExportToExcel\";\nimport {\n  errorToText,\n  FC_HasInstitute,\n  sortThisArray,\n} from \"../../../utils/functions\";\nimport ChooseSession from \"../../SessionSettings/ChooseSession\";\nimport NoSession from \"../../SessionSettings/NoSession\";\nimport {\n  examPreparationStateInterface,\n  FC_reportExamList,\n  searchExamList,\n} from \"../ExamReport/ExamList\";\nimport DistrictList from \"./DistrictList\";\n\n// TYPES OF REPORTS ======================================\nexport enum centerReportTitleType {\n  ROOM_OCCUPATION = \"Room occupation report\", // Add course if needed (on course)\n  ROOM_INVIGILATOR = \"Room with invigilator report\",\n}\n\nconst defaultReportContent: centerReportContentInterface[] = [\n  {\n    key: centerReportContentKeyInterface.district_name,\n    title: \"District name\",\n    status: true,\n  },\n  {\n    key: centerReportContentKeyInterface.center_name,\n    title: \"Center name\",\n    status: true,\n  },\n  {\n    key: centerReportContentKeyInterface.room_number,\n    title: \"Room number\",\n    status: true,\n  },\n  {\n    key: centerReportContentKeyInterface.room_type,\n    title: \"Room type\",\n    status: true,\n  },\n  {\n    key: centerReportContentKeyInterface.room_capacity,\n    title: \"Room capacity\",\n    status: true,\n  },\n  {\n    key: centerReportContentKeyInterface.room_occupation,\n    title: \"Room occupation\",\n    status: true,\n  },\n  {\n    key: centerReportContentKeyInterface.invigilator,\n    title: \"Invigilator\",\n    status: true,\n  },\n];\n\ninterface MatchParams {\n  defaultReportType?: string;\n}\n\ninterface CenterReportProps {\n  //   REDUX ############################\n  auth: Auth;\n  sessionPlan: SessionPlanReducerInterface;\n  courses: course[] | null;\n  examsList: ExamItemResponse[] | null;\n  schoolLevels: schoolLevelsStoreInterface;\n  FC_GetAllSessionByInstitution: Function;\n  loadCourses: Function;\n  loadExamsList: Function;\n  loadEducationCategories: Function;\n  setSelectedEducationCategory: (\n    education_category: education_category\n  ) => void;\n  PushPopupAlert: (alert: PopupAlertData) => void;\n}\n\ninterface CenterReportState {\n  loading: boolean;\n  loadingExam: boolean;\n  selectSession: boolean;\n  selectAll: boolean;\n  selectedReportTitle: centerReportTitleType;\n  selectedSession: SessionPlanInterface | null;\n  reportMainData: centerReportInterface[] | null;\n  reportContentExport: centerReportContentInterface[];\n  reportTitle: string;\n  centerToPrint: CenterToPrintInterface[] | null;\n  sortProperty: string;\n  isSorted: boolean;\n  sortOrder: \"ASC\" | \"DESC\";\n  searchInput: string;\n  searchExamInput: string;\n  generateReportModal: {\n    reportType: \"EXCEL\" | \"PDF\";\n    status: boolean;\n  } | null;\n  formError: {\n    element: string;\n    msg: string;\n  } | null;\n  selectedDistrict: roomDistrictInterface | \"all\";\n  chooseDistrict: boolean;\n  selectedExam: examPreparationStateInterface | \"all\";\n  chooseExam: boolean;\n  downloading: boolean;\n  invigilatorData: UserByTypeInterfaceAPI[] | null;\n}\n\nclass index extends Component<\n  CenterReportProps & RouteComponentProps<MatchParams>,\n  CenterReportState\n> {\n  constructor(props: any) {\n    super(props);\n    this.state = {\n      loading: true,\n      loadingExam: true,\n      selectSession: false,\n      selectedReportTitle: centerReportTitleType.ROOM_OCCUPATION,\n      selectedSession: null,\n      reportMainData: null,\n      reportContentExport: defaultReportContent,\n      selectAll: true,\n      reportTitle: \"\",\n      centerToPrint: null,\n      sortProperty: \"\",\n      isSorted: false,\n      sortOrder: \"ASC\",\n      searchInput: \"\",\n      searchExamInput: \"\",\n      generateReportModal: null,\n      formError: null,\n      selectedDistrict: \"all\",\n      chooseDistrict: false,\n      downloading: false,\n      chooseExam: false,\n      selectedExam: \"all\",\n      invigilatorData: null,\n    };\n  }\n\n  setLoading = (status: boolean) => {\n    this.setState({ loading: status });\n  };\n\n  setSelectAll = (status: boolean) => {\n    this.setState({ selectAll: status });\n  };\n\n  setSelectSession = (status: boolean) => {\n    this.setState({ selectSession: status });\n  };\n\n  setSelectedReportTitle = (thisTitle: centerReportTitleType) => {\n    this.setState({ selectedReportTitle: thisTitle });\n  };\n\n  setReportTitle = (thisTitle: string) => {\n    this.setState({ reportTitle: thisTitle });\n  };\n\n  setSelectedSession = (thisSession: SessionPlanInterface) => {\n    this.setState({ selectedSession: thisSession });\n  };\n\n  setDefaultReport = (thisReport?: string) => {\n    if (thisReport && thisReport === \"invigilator\") {\n      return this.setState({\n        selectedReportTitle: centerReportTitleType.ROOM_INVIGILATOR,\n      });\n    }\n    return this.setState({\n      selectedReportTitle: centerReportTitleType.ROOM_OCCUPATION,\n    });\n  };\n\n  setFormError = (\n    data: {\n      element: string;\n      msg: string;\n    } | null\n  ) => {\n    this.setState({ formError: data });\n  };\n\n  loadReportMainData = async (institution_id: string, session_id: string) => {\n    try {\n      const res = await axios.get<centerReportInterface[]>(\n        `${API.APPLICATION}/room/currentroomoccupation/${institution_id}/${session_id}`\n      );\n      this.setState({ reportMainData: res.data });\n    } catch (error) {\n      console.error({ reportMainData_error: error });\n      // callback(false, errorToText(error));\n      this.props.PushPopupAlert({\n        title: errorToText(error),\n        theme: PopupAlertTheme.danger,\n      });\n    }\n  };\n\n  loadInvigilator = async (callback: Function) => {\n    callback(true);\n    try {\n      const res = await axios.get<UserByTypeInterfaceAPI[]>(\n        `${API.AUTH}/auth/user/type`\n        // `${API.AUTH}/auth/user/type/${UserByTypeKeys.INVIGILATOR}`\n      );\n      this.setState({ invigilatorData: res.data });\n      callback(false);\n    } catch (error) {\n      console.error({ invigilatorData_error: error });\n      // callback(false, errorToText(error));\n      this.props.PushPopupAlert({\n        title: errorToText(error),\n        theme: PopupAlertTheme.danger,\n      });\n    }\n  };\n\n  setSortOrder = (thisOrder: \"ASC\" | \"DESC\") => {\n    this.setState({ sortOrder: thisOrder });\n  };\n\n  setSortProperty = (thisProperty: string) => {\n    this.setState({ sortProperty: thisProperty });\n  };\n\n  setIsSorted = (status: boolean) => {\n    this.setState({ isSorted: status });\n  };\n\n  setGenerateReportModal = (\n    data: {\n      reportType: \"EXCEL\" | \"PDF\";\n      status: boolean;\n    } | null\n  ) => {\n    this.setState({ generateReportModal: data });\n  };\n\n  loadExamData = () => {\n    if (this.props.courses === null || this.props.courses.length === 0) {\n      this.props.loadCourses((status: boolean) => {\n        this.setState({ loadingExam: status });\n      });\n    } else {\n      this.setState({ loadingExam: false });\n    }\n\n    if (this.props.examsList === null || this.props.examsList.length === 0) {\n      this.props.loadExamsList((status: boolean) => {\n        this.setState({ loadingExam: status });\n      });\n    } else {\n      this.setState({ loadingExam: false });\n    }\n  };\n\n  FC_OnSessionChanged = (institution_id: string, session_id: string) => {\n    this.loadReportMainData(institution_id, session_id);\n  };\n  FC_OnInstitutionChanged = (institution_id: string) => {\n    this.props.FC_GetAllSessionByInstitution(\n      institution_id,\n      (\n        status: boolean,\n        errorMsg: string,\n        sessionData: SessionPlanInterface[]\n      ) => {\n        this.setLoading(status);\n        if (!status) {\n          if (!isEmptyOrSpaces(errorMsg)) {\n            this.props.PushPopupAlert({\n              title: errorMsg,\n              theme: PopupAlertTheme.warning,\n            });\n          }\n\n          if (sessionData && sessionData.length > 0) {\n            let activeSession = sessionData.find((item) => item.is_active);\n            if (activeSession) {\n              this.setSelectedSession(activeSession);\n              this.FC_OnSessionChanged(institution_id, activeSession._id);\n            } else {\n              this.setSelectedSession(sessionData[sessionData.length - 1]);\n              this.FC_OnSessionChanged(institution_id, sessionData[0]._id);\n            }\n          }\n        }\n      }\n    );\n  };\n\n  componentDidMount = () => {\n    this.setDefaultReport(this.props.match.params.defaultReportType);\n\n    if (FC_HasInstitute(this.props.auth.education_institution_id) === true) {\n      this.FC_OnInstitutionChanged(this.props.auth.education_institution_id!);\n    } else {\n      if (\n        this.props.schoolLevels.education_categories === null ||\n        this.props.schoolLevels.education_categories.length\n      ) {\n        this.props.loadEducationCategories(\n          (status: boolean, data?: education_category[]) => {\n            this.setLoading(status);\n            if (!status && data && data.length > 0) {\n              this.props.setSelectedEducationCategory(data[0]);\n              if (\n                FC_HasInstitute(this.props.auth.education_institution_id) ===\n                false\n              ) {\n                this.FC_OnInstitutionChanged(data[0].education_institute_id);\n              } else {\n                this.FC_OnInstitutionChanged(\n                  this.props.auth.education_institution_id!\n                );\n              }\n            }\n          }\n        );\n      } else if (!this.props.schoolLevels.selectedEducationCategory) {\n        this.props.setSelectedEducationCategory(\n          this.props.schoolLevels.education_categories[0]\n        );\n        this.FC_OnInstitutionChanged(\n          this.props.schoolLevels.education_categories[0].education_institute_id\n        );\n      }\n    }\n\n    if (this.state.invigilatorData === null) {\n      this.loadInvigilator(this.setLoading);\n    }\n\n    this.loadExamData();\n  };\n\n  FC_FilterReportData = (\n    allData: centerReportInterface_NEW[],\n    district_id: string | \"all\",\n    center_id: string | \"all\",\n    course_id: string | \"all\"\n  ): centerReportInterface_NEW[] => {\n    console.log(\"==================FC_FilterReportData==================\");\n    console.log({ allData });\n    console.log(\"==================FC_FilterReportData==================\");\n    let result: centerReportInterface_NEW[] = allData;\n    if (district_id !== \"all\") {\n      result = result.filter((item) => item.district_id === district_id);\n    }\n    if (center_id !== \"all\") {\n      result = result.filter((item) => item.center_id === center_id);\n    }\n\n    if (course_id !== \"all\") {\n      let _result: centerReportInterface_NEW[] = [];\n      let thisData: centerReportInterface_NEW;\n      for (const key in result) {\n        let check = result[key].course_in_room.find(\n          (course) => course.course_id === course_id\n        );\n        if (check) {\n          thisData = result[key];\n          thisData.occupied = check.occupied;\n          _result.push(thisData);\n        } else {\n          thisData = result[key];\n          thisData.occupied = 0;\n          _result.push(thisData);\n        }\n      }\n      result = _result;\n    }\n\n    return result;\n  };\n\n  updateContentToPrint = () => {\n    // UPDATE REPORT TITLE ========================\n    if (this.state.selectedSession) {\n      let title = \"Room Report - \";\n      if (this.state.selectedDistrict !== \"all\") {\n        title =\n          title + this.state.selectedDistrict.district_name + \" district - \";\n      }\n\n      if (this.state.selectedExam !== \"all\") {\n        title =\n          title +\n          this.state.selectedExam.course_name +\n          \" (\" +\n          this.state.selectedExam.course_code +\n          \")\" +\n          \" - \";\n      }\n\n      title = title + this.state.selectedSession.session_plan_name;\n      this.setReportTitle(title);\n    }\n    // UPDATE CONTENT =============================\n    if (this.state.reportMainData && this.state.invigilatorData) {\n      let arrayNew: CenterToPrintInterface[] = [];\n      let n: number = 1;\n      const reportDataResult: centerReportInterface_NEW[] =\n        this.FC_FilterReportData(\n          roomWithOccupation(\n            this.state.reportMainData,\n            this.state.invigilatorData\n          ),\n          this.state.selectedDistrict === \"all\"\n            ? \"all\"\n            : this.state.selectedDistrict.district_id,\n          \"all\",\n          this.state.selectedExam === \"all\"\n            ? \"all\"\n            : this.state.selectedExam.course_id\n        );\n      for (const key in reportDataResult) {\n        if (Object.prototype.hasOwnProperty.call(reportDataResult, key)) {\n          let dataArray: CenterToPrintInterface | null = null;\n          dataArray = {\n            no: n,\n            district_name: reportDataResult[key].district_name,\n            center_name: reportDataResult[key].center_name,\n            room_number: reportDataResult[key].room_number,\n            room_type: capitalizeFirstLetter(reportDataResult[key].room_type),\n            room_capacity:\n              reportDataResult[key].room_type === \"Default\"\n                ? \"-\"\n                : reportDataResult[key].capacity,\n            room_occupation: reportDataResult[key].occupied,\n            invigilator: reportDataResult[key].invigilator,\n          };\n\n          for (const key in this.state.reportContentExport) {\n            if (\n              Object.prototype.hasOwnProperty.call(\n                this.state.reportContentExport,\n                key\n              )\n            ) {\n              if (!this.state.reportContentExport[key].status && dataArray) {\n                delete dataArray[this.state.reportContentExport[key].key];\n              }\n            }\n          }\n          dataArray && arrayNew.push(dataArray);\n          n++;\n        }\n      }\n      this.setState({ centerToPrint: arrayNew });\n      arrayNew = [];\n      n = 1;\n    }\n  };\n\n  updateReportContent = (key: centerReportContentKeyInterface) => {\n    let index: number = this.state.reportContentExport.findIndex(\n      (item) => item.key === key\n    );\n    let newArray: centerReportContentInterface[] =\n      this.state.reportContentExport;\n    newArray[index].status = !newArray[index].status;\n    this.setState({ reportContentExport: newArray });\n    let isSelectAllNeeded = newArray.find((item) => item.status === false);\n    if (isSelectAllNeeded) {\n      this.setSelectAll(false);\n    } else {\n      this.setSelectAll(true);\n    }\n\n    // UPDATE APPLICATION LIST FOR UPDATE ==============================\n    this.updateContentToPrint();\n  };\n\n  isChangeAllowed = (key: centerReportContentKeyInterface): boolean => {\n    if (\n      key === centerReportContentKeyInterface.center_name ||\n      key === centerReportContentKeyInterface.district_name ||\n      key === centerReportContentKeyInterface.room_number ||\n      key === centerReportContentKeyInterface.room_capacity ||\n      key === centerReportContentKeyInterface.room_occupation\n    ) {\n      return false;\n    }\n    return true;\n  };\n\n  resetReportContent = (currentState: boolean) => {\n    let newArray: centerReportContentInterface[] =\n      this.state.reportContentExport;\n    for (const key in newArray) {\n      if (this.isChangeAllowed(newArray[key].key)) {\n        newArray[key].status = !currentState;\n      }\n    }\n\n    this.setState({ reportContentExport: newArray });\n    this.setSelectAll(!currentState);\n    this.updateContentToPrint();\n  };\n\n  setDownloading = (status: boolean) => {\n    this.setState({ downloading: status });\n  };\n\n  FC_GeneratePDF = () => {\n    if (!document.querySelectorAll(\"#report_content tbody tr\").length) {\n      this.props.PushPopupAlert({\n        title: `Can't generate Report of empty Data`,\n        theme: PopupAlertTheme.warning,\n      });\n      return false;\n    }\n\n    if (this.state.selectedSession) {\n      const table: HTMLElement | null =\n        document.getElementById(\"report_content\");\n      const reportSettings: reportSettingsInterface = {\n        doneBy: this.props.auth.user.fname + \" \" + this.props.auth.user.lname,\n        title: \"Room Report\",\n        subjectTitle: \"Room occupation\",\n        subject: \"All room\",\n        period: this.state.selectedSession.session_plan_name,\n        footer: \"Online Recruitment\",\n        institute: \"All institute\",\n      };\n      table && generatePDF(reportSettings, table, this.setDownloading);\n    }\n  };\n\n  setSort = (thisProperty: string) => {\n    if (\n      this.state.sortProperty === thisProperty &&\n      this.state.sortOrder === \"ASC\"\n    ) {\n      this.setSortOrder(\"DESC\");\n    } else {\n      this.setSortOrder(\"ASC\");\n    }\n    this.setSortProperty(thisProperty);\n    this.setIsSorted(true);\n  };\n\n  searchData = (\n    objList: centerReportInterface_NEW[],\n    text: string\n  ): centerReportInterface_NEW[] => {\n    if (undefined === text || text === \"\") return objList;\n    return objList.filter((product) => {\n      let flag;\n      // let dataKeys = product;\n\n      for (let prop in product) {\n        flag = false;\n        if (\n          prop === \"center_name\" ||\n          prop === \"room_number\" ||\n          prop === \"district_name\" ||\n          prop === \"occupied\" ||\n          prop === \"capacity\" ||\n          prop === \"course_in_room\" ||\n          prop === \"invigilator\"\n        ) {\n          if (product[prop]) {\n            flag =\n              product[prop]!.toString()\n                .toLowerCase()\n                .indexOf(text.toLowerCase()) > -1;\n          }\n        }\n        if (flag) break;\n      }\n      return flag;\n    });\n  };\n\n  setChooseDistrict = (status: boolean) => {\n    this.setState({ chooseDistrict: status });\n  };\n\n  setSelectedDistrict = (data: roomDistrictInterface | \"all\") => {\n    this.setState({ selectedDistrict: data });\n  };\n\n  render() {\n    if (this.state.loading) {\n      return (\n        <div className=\"text-center mt-7 font-bold text-4xl text-gray-400 animate-pulse\">\n          Loading data...\n        </div>\n      );\n    }\n\n    if (\n      this.props.sessionPlan.allSessionPlans &&\n      this.props.sessionPlan.allSessionPlans.length === 0\n    ) {\n      return <NoSession />;\n    }\n\n    return (\n      <Fragment>\n        <SideNavigation>\n          {FC_HasInstitute(this.props.auth.education_institution_id) ===\n            false && (\n            <div className=\"flex flex-col mb-4\">\n              <span className=\"text-sm text-gray-600 mb-2\">\n                Education categories:\n              </span>\n              {this.props.schoolLevels.education_categories === null ? (\n                <Loading />\n              ) : this.props.schoolLevels.education_categories.length === 0 ? (\n                <span>No result found</span>\n              ) : (\n                this.props.schoolLevels.education_categories.map((item, i) => (\n                  <div\n                    onClick={() => {\n                      this.props.setSelectedEducationCategory(item);\n                      this.FC_OnInstitutionChanged(item.education_institute_id);\n                    }}\n                    key={i + 1}\n                    className={`border rounded px-2 py-2 mb-2 cursor-pointer ${\n                      this.props.schoolLevels.selectedEducationCategory !==\n                        null &&\n                      this.props.schoolLevels.selectedEducationCategory\n                        .education_institute_id === item.education_institute_id\n                        ? \"bg-blue-600 text-white hover:bg-blue-100 hover:text-blue-600 hover:border-blue-500\"\n                        : \"hover:bg-blue-100 hover:text-blue-600 hover:border-blue-500\"\n                    } font-bold flex flex-row items-center gap-2`}\n                  >\n                    {this.props.schoolLevels.selectedEducationCategory !==\n                      null &&\n                    this.props.schoolLevels.selectedEducationCategory\n                      .education_institute_id ===\n                      item.education_institute_id ? (\n                      <MdRadioButtonChecked />\n                    ) : (\n                      <MdRadioButtonUnchecked />\n                    )}\n                    <span>{item.education_category_title}</span>\n                  </div>\n                ))\n              )}\n            </div>\n          )}\n          <div className=\"\">\n            <div className=\"text-gray-600 text-sm mb-2\">Session:</div>\n            <div\n              onClick={() => this.setSelectSession(true)}\n              className=\"font-bold bg-blue-50 border border-blue-200 rounded py-2 cursor-pointer text-xs px-2 hover:underline justify-between text-blue-600  mb-4 w-full flex flex-row items-center animate__animated animate__zoomIn\"\n            >\n              {this.state.selectedSession !== null\n                ? `${this.state.selectedSession.session_plan_name}`\n                : \"Filter by session\"}\n              <FiEdit className=\"text-lg text-blue-600\" />\n            </div>\n          </div>\n\n          <div className=\"\">\n            <div className=\"text-gray-600 text-sm mb-2\">District:</div>\n            {this.state.reportMainData && (\n              <div\n                onClick={() => this.setChooseDistrict(true)}\n                className=\"font-bold bg-blue-50 border border-blue-200 rounded py-2 cursor-pointer text-xs px-2 hover:underline justify-between text-blue-600  mb-4 w-full flex flex-row items-center animate__animated animate__zoomIn\"\n              >\n                {this.state.selectedDistrict !== \"all\"\n                  ? `${this.state.selectedDistrict.district_name}`\n                  : \"All district\"}\n                <FiEdit className=\"text-lg text-blue-600\" />\n              </div>\n            )}\n          </div>\n\n          {this.state.loadingExam ? (\n            \"loading\"\n          ) : (\n            <div className=\"\">\n              <div className=\"text-gray-600 text-sm mb-2\">Exam:</div>\n              {this.state.reportMainData && (\n                <div\n                  onClick={() => {\n                    this.setState({ chooseExam: true });\n                    // this.loadExamData();\n                  }}\n                  className=\"font-bold bg-blue-50 border border-blue-200 rounded py-2 cursor-pointer text-xs px-2 hover:underline justify-between text-blue-600  mb-4 w-full flex flex-row items-center animate__animated animate__zoomIn\"\n                >\n                  {this.state.selectedExam !== \"all\"\n                    ? `${this.state.selectedExam.course_name}`\n                    : \"All exam\"}\n                  <FiEdit className=\"text-lg text-blue-600\" />\n                </div>\n              )}\n            </div>\n          )}\n        </SideNavigation>\n\n        {/* BODY CONTENT--------------------------------- */}\n        <section>\n          {/* REPORT TITLE ============================================ */}\n          <div className=\"grid md:grid-cols-12\">\n            <div className=\"col-span-8\">\n              <div className=\"mt-4 mx-4 flex flex-col gap-1\">\n                <span className=\"text-3xl font-bold text-gray-700\">\n                  Room report\n                </span>\n              </div>\n            </div>\n            <div className=\"col-span-4\">\n              <div className=\"float-right mt-2\">\n                {this.state.reportMainData &&\n                  this.state.reportMainData.length > 0 && (\n                    <div className=\"flex flex-row items-center justify-end font-bold mb-2\">\n                      <BiExport className=\"text-2xl text-gray-500\" />\n                      <span className=\"text-gray-500\">Export as</span>\n                      <button\n                        className=\"px-4 py-1 ml-1 rounded bg-white border hover:text-blue-600 font-bold hover:bg-blue-50 border-gray-200\"\n                        disabled={\n                          this.state.reportMainData && !this.state.downloading\n                            ? false\n                            : true\n                        }\n                        onClick={() => {\n                          this.updateContentToPrint();\n                          this.setGenerateReportModal({\n                            reportType: \"EXCEL\",\n                            status: true,\n                          });\n                        }}\n                      >\n                        EXCEL\n                      </button>\n                      <button\n                        className={`px-4 py-1 ml-1 rounded bg-white border hover:text-blue-600 font-bold hover:bg-blue-50 border-gray-200 ${\n                          this.state.downloading && \"cursor-wait\"\n                        }`}\n                        onClick={() => this.FC_GeneratePDF()}\n                        disabled={this.state.reportMainData ? false : true}\n                      >\n                        PDF\n                      </button>\n                    </div>\n                  )}\n              </div>\n            </div>\n          </div>\n          {/* END REPORT TITLE ============================================ */}\n\n          {/* ######################################################## */}\n          <div className=\"bg-white my-4\">\n            <div className=\"w-full px-2 py-2\">\n              <input\n                onChange={(e) => this.setState({ searchInput: e.target.value })}\n                type=\"text\"\n                value={this.state.searchInput}\n                placeholder=\"Search...\"\n                className=\"w-full bg-gray-100 py-2 px-3 rounded focus:border-gray-800\"\n                disabled={\n                  this.state.reportMainData === null ||\n                  this.state.invigilatorData === null ||\n                  this.FC_FilterReportData(\n                    roomWithOccupation(\n                      this.state.reportMainData,\n                      this.state.invigilatorData\n                    ),\n                    this.state.selectedDistrict === \"all\"\n                      ? \"all\"\n                      : this.state.selectedDistrict.district_id,\n                    \"all\",\n                    this.state.selectedExam === \"all\"\n                      ? \"all\"\n                      : this.state.selectedExam.course_id\n                  ).length <= 0\n                }\n              />\n            </div>\n            <table className=\"w-full shadow\" id=\"report_content\">\n              <thead className=\"bg-white border-b-2 border-gray-300 text-gray-600 font-bold text-sm\">\n                <tr>\n                  <td className=\"px-2 py-2\">#</td>\n                  <td\n                    className=\"px-2 py-2 cursor-pointer\"\n                    onClick={() => this.setSort(\"district\")}\n                  >\n                    <div className=\"flex items-center gap-1\">\n                      District <BiSort />\n                    </div>\n                  </td>\n                  <td\n                    className=\"px-2 py-2 cursor-pointer\"\n                    onClick={() => this.setSort(\"center\")}\n                  >\n                    <div className=\"flex items-center gap-1\">\n                      Center <BiSort />\n                    </div>\n                  </td>\n                  <td\n                    className=\"px-2 py-2 cursor-pointer\"\n                    onClick={() => this.setSort(\"room_number\")}\n                  >\n                    <div className=\"flex items-center gap-1\">\n                      Room number <BiSort />\n                    </div>\n                  </td>\n                  <td\n                    className=\"px-2 py-2 cursor-pointer\"\n                    onClick={() => this.setSort(\"room_type\")}\n                  >\n                    <div className=\"flex items-center gap-1\">\n                      Room type <BiSort />\n                    </div>\n                  </td>\n                  <td\n                    className=\"px-2 py-2 cursor-pointer\"\n                    onClick={() => this.setSort(\"capacity\")}\n                  >\n                    <div className=\"flex items-center gap-1\">\n                      Room capacity <BiSort />\n                    </div>\n                  </td>\n                  <td\n                    className=\"px-2 py-2 cursor-pointer\"\n                    onClick={() => this.setSort(\"occupied\")}\n                  >\n                    <div className=\"flex items-center gap-1\">\n                      Room occupation <BiSort />\n                    </div>\n                  </td>\n                  <td\n                    className=\"px-2 py-2 cursor-pointer\"\n                    onClick={() => this.setSort(\"invigilator\")}\n                  >\n                    <div className=\"flex items-center gap-1\">\n                      Invigilator <BiSort />\n                    </div>\n                  </td>\n                </tr>\n              </thead>\n              <tbody>\n                {this.state.reportMainData === null ||\n                this.state.invigilatorData === null ? (\n                  <TableLoading cols={8} />\n                ) : this.FC_FilterReportData(\n                    roomWithOccupation(\n                      this.state.reportMainData,\n                      this.state.invigilatorData\n                    ),\n                    this.state.selectedDistrict === \"all\"\n                      ? \"all\"\n                      : this.state.selectedDistrict.district_id,\n                    \"all\",\n                    this.state.selectedExam === \"all\"\n                      ? \"all\"\n                      : this.state.selectedExam.course_id\n                  ).length === 0 ? (\n                  <tr>\n                    <td colSpan={8} className=\"px-2 py-2\">\n                      <div className=\"flex flex-col text-gray-400 items-center justify-center bg-gray-100 rounded py-10\">\n                        <ImFilesEmpty className=\"text-8xl text-gray-400 mb-2 animate__animated animate__shakeX\" />\n                        <span className=\"text-sm font-bold\">\n                          No result found! Please try to search again\n                        </span>\n                        <div className=\"w-full mt-2 flex flex-row items-center justify-center\">\n                          <ul className=\"text-sm py-2 text-blue-600 font-bold flex flex-row gap-2\">\n                            <li\n                              onClick={() => this.setSelectSession(true)}\n                              className=\"underline text-gray-500 cursor-pointer\"\n                            >\n                              Filter by session\n                            </li>\n                          </ul>\n                        </div>\n                      </div>\n                    </td>\n                  </tr>\n                ) : (\n                  sortThisArray(\n                    this.state.isSorted,\n                    this.searchData(\n                      this.FC_FilterReportData(\n                        roomWithOccupation(\n                          this.state.reportMainData,\n                          this.state.invigilatorData\n                        ),\n                        this.state.selectedDistrict === \"all\"\n                          ? \"all\"\n                          : this.state.selectedDistrict.district_id,\n                        \"all\",\n                        this.state.selectedExam === \"all\"\n                          ? \"all\"\n                          : this.state.selectedExam.course_id\n                      ),\n                      this.state.searchInput\n                    ),\n                    this.state.sortProperty,\n                    this.state.sortOrder\n                  ).map((item, i) => (\n                    <tr\n                      key={i + 1}\n                      className={`${\n                        i % 2 !== 0 ? \"bg-gray-100\" : \"bg-white\"\n                      } hover:bg-blue-100 hover:text-blue-700 border-b hover:border-blue-500 text-sm ${\n                        item.room_type === \"Default\"\n                          ? \"border-gray-500 text-gray-700 bg-gray-200\"\n                          : \"text-gray-600 border-gray-300\"\n                      }`}\n                    >\n                      <td className=\"px-2 py-2\">{i + 1}</td>\n                      <td className=\"px-2 py-2\">{item.district_name}</td>\n                      <td className=\"px-2 py-2\">{item.center_name}</td>\n                      <td className=\"px-2 py-2\">{item.room_number}</td>\n                      <td className=\"px-2 py-2\">\n                        {capitalizeFirstLetter(item.room_type)}\n                      </td>\n                      <td className=\"px-2 py-2\">\n                        {item.room_type === \"Default\" ? \"-\" : item.capacity}\n                      </td>\n                      <td className=\"px-2 py-2\">{item.occupied}</td>\n                      <td className=\"px-2 py-2\">{item.invigilator}</td>\n                    </tr>\n                  ))\n                )}\n              </tbody>\n            </table>\n          </div>\n        </section>\n        {/* END BODY CONTENT--------------------------------- */}\n\n        {this.state.generateReportModal !== null &&\n          this.state.generateReportModal.status === true && (\n            <Modal\n              title={\n                <div className=\"flex flex-row gap-4 items-center\">\n                  {/* <IoBriefcase className=\"text-5xl text-gray-500\" /> */}\n                  <div className=\"flex flex-col\">\n                    <span className=\"font-bold text-2xl text-gray-500\">\n                      Generating Report contents\n                    </span>\n                    <span className=\"text-sm text-blue-600 font-normal\">\n                      Generating {this.state.generateReportModal.reportType}{\" \"}\n                      Report\n                    </span>\n                  </div>\n                </div>\n              }\n              backDrop={true}\n              theme={Themes.default}\n              close={() => this.setGenerateReportModal(null)}\n              backDropClose={false}\n              widthSizeClass={ModalSize.medium}\n              displayClose={true}\n              padding={{ title: true }}\n            >\n              <div className=\"px-6\">\n                <div className=\"my-2 text-base text-gray-700 sm:text-lg\">\n                  <div className=\"flex flex-col\">\n                    <label>Title</label>\n                    <input\n                      type=\"text\"\n                      className={`text-left input-white w-20 inline-block ${\n                        this.state.formError &&\n                        this.state.formError.element === \"report_title\"\n                          ? \"border-red-500\"\n                          : \"border-gray-500\"\n                      } border-2`}\n                      placeholder=\"Sub Category Title\"\n                      value={this.state.reportTitle}\n                      onChange={(e) => {\n                        this.setFormError(null);\n                        this.setReportTitle(e.target.value);\n                      }}\n                      disabled={this.state.reportMainData ? false : true}\n                    />\n                    {this.state.formError &&\n                      this.state.formError.element === \"report_title\" && (\n                        <span className=\"text-red-500\">\n                          {this.state.formError.msg}\n                        </span>\n                      )}\n                  </div>\n                  <div className=\"flex flex-col mt-2\">\n                    <label>Report content</label>\n                    <div className=\"grid grid-cols-2 md:grid-cols-3 items-center gap-2 mt-2\">\n                      {this.state.reportContentExport.map((item, index) => (\n                        <div\n                          key={index}\n                          className={`flex items-center gap-1 ${\n                            this.isChangeAllowed(item.key)\n                              ? \"cursor-pointer\"\n                              : \"cursor-not-allowed\"\n                          }`}\n                          onClick={() =>\n                            this.isChangeAllowed(item.key) &&\n                            this.updateReportContent(item.key)\n                          }\n                          title={\n                            !this.isChangeAllowed(item.key)\n                              ? \"Required for every report!\"\n                              : \"\"\n                          }\n                        >\n                          {item.status ? (\n                            <MdCheckBox className=\"w-6 h-6 text-blue-700\" />\n                          ) : (\n                            <MdCheckBoxOutlineBlank className=\"w-6 h-6\" />\n                          )}\n                          <span>{item.title}</span>\n                        </div>\n                      ))}\n                    </div>\n                    {this.state.formError &&\n                      this.state.formError.element === \"report_content\" && (\n                        <span className=\"text-red-500\">\n                          {this.state.formError.msg}\n                        </span>\n                      )}\n                  </div>\n                </div>\n                <div className=\"flex justify-between mb-2 mt-4\">\n                  <div\n                    className={`flex items-center gap-1 cursor-pointer`}\n                    onClick={() =>\n                      this.resetReportContent(this.state.selectAll)\n                    }\n                  >\n                    {this.state.selectAll ? (\n                      <MdCheckBox className=\"w-6 h-6 text-blue-700\" />\n                    ) : (\n                      <MdCheckBoxOutlineBlank className=\"w-6 h-6\" />\n                    )}\n                    <span>Select all</span>\n                  </div>\n\n                  {this.state.centerToPrint && this.state.reportMainData && (\n                    <ExportToExcel\n                      fileData={this.state.centerToPrint}\n                      fileName={this.state.reportTitle}\n                      btnName=\"Generate\"\n                    />\n                  )}\n                </div>\n              </div>\n            </Modal>\n          )}\n        {/* SELECT SESSION MODAL =========================== */}\n        {this.state.selectSession && (\n          <Modal\n            title={\n              <div className=\"flex flex-row gap-4 items-center\">\n                <MdHistory className=\"text-5xl text-blue-600\" />\n                <span className=\"flex flex-col\">Choose session</span>\n              </div>\n            }\n            backDrop={true}\n            theme={Themes.default}\n            close={() =>\n              this.state.selectedSession !== null &&\n              this.setSelectSession(false)\n            }\n            backDropClose={true}\n            widthSizeClass={ModalSize.extraLarge}\n            displayClose={true}\n            padding={{ title: true }}\n          >\n            <ChooseSession\n              allSession={this.props.sessionPlan.allSessionPlans}\n              setSelectSession={(value: SessionPlanInterface | \"all\") => {\n                if (\n                  value !== \"all\" &&\n                  this.props.schoolLevels.selectedEducationCategory\n                ) {\n                  this.setSelectedSession(value);\n                  this.FC_OnSessionChanged(\n                    this.props.schoolLevels.selectedEducationCategory\n                      .education_institute_id,\n                    value._id\n                  );\n                  this.setSelectSession(false);\n                }\n              }}\n              chooseAll={false}\n              currentSelected={\n                this.state.selectedSession ? this.state.selectedSession : \"all\"\n              }\n            />\n          </Modal>\n        )}\n\n        {this.state.chooseDistrict && this.state.reportMainData && (\n          <Modal\n            title={\n              <div className=\"flex flex-row gap-4 items-center\">\n                <MdLocationCity className=\"text-5xl text-blue-600\" />\n                <span className=\"flex flex-col\">Filter by district</span>\n              </div>\n            }\n            backDrop={true}\n            theme={Themes.default}\n            close={() => this.setChooseDistrict(false)}\n            backDropClose={true}\n            widthSizeClass={ModalSize.medium}\n            displayClose={true}\n            padding={{ title: true }}\n          >\n            <DistrictList\n              setChooseDistrict={this.setChooseDistrict}\n              districtList={getDistrictInRoom(this.state.reportMainData)}\n              setSelectedDistrict={this.setSelectedDistrict}\n              loadindRequest={this.state.loading}\n              selectedDistrict={this.state.selectedDistrict}\n              isModal={true}\n            />\n          </Modal>\n        )}\n\n        {this.state.chooseExam && this.state.reportMainData && (\n          <Modal\n            title={\n              <div className=\"flex flex-row gap-4 items-center\">\n                <CgFileDocument className=\"text-5xl text-blue-600\" />\n                <div className=\"flex flex-col\">\n                  <span className=\"font-bold text-xl text-blue-600\">\n                    Choose exam\n                  </span>\n                </div>\n              </div>\n            }\n            backDrop={true}\n            theme={Themes.default}\n            close={() =>\n              this.setState({ chooseExam: false, searchExamInput: \"\" })\n            }\n            backDropClose={true}\n            widthSizeClass={ModalSize.extraLarge}\n            displayClose={true}\n            padding={{ title: true }}\n          >\n            {this.state.loadingExam ||\n            this.props.courses === null ||\n            this.props.examsList === null ? (\n              <Loading />\n            ) : (\n              <div className=\"px-2 pb-2\">\n                <div className=\"w-full py-2\">\n                  <input\n                    onChange={(e) =>\n                      this.setState({ searchExamInput: e.target.value })\n                    }\n                    type=\"text\"\n                    value={this.state.searchExamInput}\n                    placeholder=\"Search...\"\n                    className=\"w-full bg-white py-2 px-3 rounded border border-gray-400\"\n                    disabled={\n                      FC_reportExamList(\n                        this.props.courses,\n                        this.props.examsList\n                      ).length <= 0\n                        ? true\n                        : false\n                    }\n                  />\n                </div>\n                <div\n                  onClick={() =>\n                    this.setState({\n                      selectedExam: \"all\",\n                      chooseExam: false,\n                      searchExamInput: \"\",\n                    })\n                  }\n                  className={`flex items-center border rounded px-2 py-2 cursor-pointer group hover:bg-blue-100 hover:border-blue-500 mb-3 justify-between ${\n                    this.state.selectedExam === \"all\"\n                      ? \"bg-blue-50 border-blue-400\"\n                      : \"bg-white border-gray-200\"\n                  }`}\n                >\n                  <div>\n                    <div className=\"text-sm font-medium italic\">\n                      code: <span className=\"text-blue-500\">-</span>\n                    </div>\n                    <div className=\"font-bold text-lg\">All exams</div>\n                  </div>\n                  <div className=\"btn bg-blue-400 group-hover:bg-blue-600 text-white mr-2\">\n                    Choose\n                  </div>\n                </div>\n                {searchExamList(\n                  FC_reportExamList(this.props.courses, this.props.examsList),\n                  this.state.searchInput\n                ).map((item, i) => (\n                  <div\n                    onClick={() =>\n                      this.setState({\n                        selectedExam: item,\n                        chooseExam: false,\n                        searchExamInput: \"\",\n                      })\n                    }\n                    key={i + 1}\n                    className={`flex items-center border rounded px-2 py-2 cursor-pointer group hover:bg-blue-100 hover:border-blue-500 mb-3 justify-between ${\n                      this.state.selectedExam !== \"all\" &&\n                      this.state.selectedExam.course_id === item.course_id\n                        ? \"bg-blue-50 border-blue-400\"\n                        : \"bg-white border-gray-200\"\n                    }`}\n                  >\n                    <div>\n                      <div className=\"text-sm font-medium italic\">\n                        code:{\" \"}\n                        <span className=\"text-blue-500\">\n                          {item.course_code}\n                        </span>\n                      </div>\n                      <div className=\"font-bold text-lg\">\n                        {item.course_name}\n                      </div>\n                    </div>\n                    <div className=\"btn bg-blue-400 group-hover:bg-blue-600 text-white mr-2\">\n                      Choose\n                    </div>\n                  </div>\n                ))}\n              </div>\n            )}\n          </Modal>\n        )}\n      </Fragment>\n    );\n  }\n}\n\nconst mapStateToProps = ({\n  auth,\n  course,\n  prepareExam,\n  sessionPlan,\n  schoolLevels,\n}: StoreState): {\n  auth: Auth;\n  sessionPlan: SessionPlanReducerInterface;\n  courses: course[] | null;\n  examsList: ExamItemResponse[] | null;\n  schoolLevels: schoolLevelsStoreInterface;\n} => {\n  return {\n    auth: auth,\n    sessionPlan,\n    courses: course.courses,\n    examsList: prepareExam.examsList,\n    schoolLevels,\n  };\n};\n\nexport const CenterReport = connect(mapStateToProps, {\n  FC_GetAllSessionByInstitution,\n  loadCourses,\n  loadExamsList,\n  loadEducationCategories,\n  setSelectedEducationCategory,\n  PushPopupAlert,\n})(index);\n","import React from \"react\";\nimport { IoWarning } from \"react-icons/io5\";\n// import { MdInfoOutline } from \"react-icons/md\";\nimport { NavLink } from \"react-router-dom\";\n\ntype NoSessionProps = {\n  title?: string;\n  description?: string;\n};\n\nconst NoSession: React.FC<NoSessionProps> = ({\n  title = \"No session available\",\n  description = \"Please Wait for the system to publish the sessions or contact the administrator\",\n}) => {\n  return (\n    <div className=\"w-full my-5\">\n      <section className=\"py-10 flex flex-col items-center rounded border border-gray-300 bg-white text-2xl font-medium text-yellow-800 animate__animated animate__pulse\">\n        <div className=\"flex flex-col items-center\">\n          <IoWarning className=\"w-32 h-32\" />\n          {description}\n        </div>\n        {false && (\n          <div className=\"text-center group text-sm -mb-3 mt-5\">\n            <NavLink\n              to=\"/apps-page\"\n              className=\"border border-rounded-md bg-gray-100 text-gray-900 rounded border-gray-100 group-hover:bg-gray-50 group-hover:border-gray-400 px-2 py-1\"\n            >\n              Back to App\n            </NavLink>\n          </div>\n        )}\n      </section>\n    </div>\n  );\n};\n\nexport default React.memo(NoSession);\n","import React, { FC, ReactElement, ReactNode } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Auth, System } from \"../../actions\";\nimport { StoreState } from \"../../reducers\";\nimport { NavToogle, PageHasSubNav } from \"../../actions\";\nimport { MdBrightness1, MdSearch } from \"react-icons/md\";\n\n// props for the component\ninterface AppProps {\n  auth: Auth;\n  system: System;\n  PageHasSubNav: Function;\n  NavToogle: Function;\n  children: ReactNode;\n}\n//\ninterface AppState {\n  loading: boolean;\n}\n\nclass _SideNavigation extends React.Component<AppProps, AppState> {\n  constructor(props: AppProps) {\n    super(props);\n\n    this.state = {\n      loading: false,\n    };\n  }\n\n  componentDidMount = () => this.props.PageHasSubNav(true);\n  componentWillUnmount = () => this.props.PageHasSubNav(false);\n\n  render() {\n    const isAuthenticated = this.props.auth.isAuthenticated;\n\n    if (isAuthenticated === false) {\n      return null;\n    }\n\n    const navActive = this.props.system.navigation;\n    return (\n      <div\n        className={`fixed w-48 p-1 pr-2 pl-6 text-gray-700 bg-white ${\n          navActive === true ? \"lg:left-16  left-16\" : \" -left-72 lg:left-16\"\n        }  top-0 bottom-0 pt-20 z-30 shadow-lg  transition-all duration-500 ease-in-out overflow-y-auto`}\n      >\n        {this.props.children}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = ({\n  auth,\n  system,\n}: StoreState): { auth: Auth; system: System } => {\n  return { auth: auth, system: system };\n};\n\nexport const SideNavigation = connect(mapStateToProps, {\n  NavToogle,\n  PageHasSubNav,\n})(_SideNavigation);\n\n//************************************ FORM SEARCH **************************************** */\n\ntype SearchComponentInterface = {\n  data: any[];\n};\n\nexport const Search: FC<SearchComponentInterface> = ({\n  data,\n}): ReactElement => {\n  return (\n    <div className=\"m-1 rounded-md shadow-md border border-blue-400 bg-white p-1 flex \">\n      <label htmlFor=\"search-text\" className=\"inline-block text-2xl\">\n        <MdSearch className=\"inline-block text-blue-400\" />\n      </label>\n      <input\n        type=\"search\"\n        className=\"outline-none bg-transparent flex-1 pl-1\"\n        placeholder=\"Search\"\n        id=\"search-text\"\n      />\n    </div>\n  );\n};\n\n//************************************ FORM SEARCH **************************************** */\n\ntype MainItemComponentInterface = {\n  title: string;\n  icon?: any;\n  active?: boolean;\n  count?: number;\n};\n\n/**\n *\n * @param param0\n * @returns\n */\nexport const MainItem: FC<MainItemComponentInterface> = ({\n  title = \"\",\n  icon = MdBrightness1,\n  active = false,\n  count = 0,\n}): ReactElement => {\n  const IconDefined = icon;\n  return (\n    <section\n      className={`${\n        active === true\n          ? \"bg-blue-500 text-white font-bold\"\n          : \"bg-blue-100 text-blue-800\"\n      } mb-1 hover:font-bold py-1 hover:bg-blue-400 hover:text-white --font-bold  px-2 rounded-md flex cursor-pointer items-center`}\n    >\n      <section className=\"flex-1\">\n        <IconDefined className=\"inline-block mr-1 text-xs\" />\n        <span>{title}</span>\n      </section>\n\n      {count > 0 ? (\n        <span className=\"px-0.5 my-1 text-xs bg-blue-600 text-white rounded-full\">\n          {count}\n        </span>\n      ) : null}\n    </section>\n  );\n};\n\n//************************************ FORM SEARCH **************************************** */\n\ntype SubItemContainerComponentInterface = {\n  children: ReactNode;\n};\n\n/**\n *\n * @param param0\n * @returns\n */\nexport const SubItemContainer: FC<SubItemContainerComponentInterface> = ({\n  children,\n}): ReactElement => {\n  return (\n    <div className=\"ml-3 overflow-y-auto border-l-2 border-blue-200 -mt-1 pt-2 mb-2 pl-1 cursor-pointer\">\n      {children}\n    </div>\n  );\n};\n\n//************************************ FORM SEARCH **************************************** */\n\ntype SubItemComponentInterface = {\n  title: string;\n  icon?: any;\n  active?: boolean;\n  count?: number;\n};\n\n/**\n *\n * @param param0\n * @returns\n * @important Remenber to use these components inside the <SubItemContainer>...</SubItemContainer>\n */\nexport const SubItem: FC<SubItemComponentInterface> = ({\n  title = \"\",\n  icon = MdBrightness1,\n  active = false,\n  count = 0,\n}): ReactElement => {\n  const IconDefined = icon;\n\n  return (\n    <div\n      className={`animate__animated animate__zoomIn animate__faster ${\n        active === true ? \"bg-blue-500 text-white font-bold\" : \" text-blue-800\"\n      } text-blue-800 bg-blue-200 rounded-md px-1 mb-1 flex items-center py-1 font-bold`}\n    >\n      <IconDefined\n        className={`inline-block mr-0.1 text-xs ${\n          active === true ? \"text-white\" : \"\"\n        }`}\n      />\n      <span\n        className={`inline-block pl-1 ${active === true ? \"text-white\" : \"\"}`}\n      >\n        {title}\n      </span>\n      {count >= 1 ? (\n        <span\n          className={`text-sm fint-bold ${active === true ? \"text-white\" : \"\"}`}\n        >\n          {count}\n        </span>\n      ) : null}\n    </div>\n  );\n};\n","import React, { Fragment, useState } from \"react\";\nimport { BiSort } from \"react-icons/bi\";\nimport Loading from \"../../../components/Loading/Loading\";\nimport { SessionPlanInterface } from \"../../../interfaces\";\nimport { course } from \"../../../interfaces/course\";\nimport { ExamItemResponse } from \"../../../interfaces/prepare_exam\";\nimport { ExamDoneAndRemainingByPeriodInterface } from \"../../../interfaces/reports\";\nimport { capitalizeFirstLetter } from \"../../../shared/dataTest\";\nimport { DATE, sortThisArray } from \"../../../utils/functions\";\n// import searchExamData from \"../../../utils/search\";\nimport { getPeriodById } from \"./ExamReport\";\n\n// EXCEL FILE FUNCTIONS ================================\nexport interface ExaminationProgressToPrintInterface {\n  course_id: number;\n  course_name: string;\n  course_code: string;\n  description: string;\n  school_levels: string;\n  exam_period: string;\n  exam_date: string;\n  exam_time: string;\n  exam_duration: string;\n  exam_status: string;\n}\n\nexport enum ExaminationProgressReportContentKeyInterface {\n  COURSER_NAME = \"course_name\",\n  COURSE_CODE = \"course_code\",\n  SCHOOL_LEVEL = \"school_levels\",\n  PERIOD = \"exam_period\",\n  DATE = \"exam_date\",\n  TIME = \"exam_time\",\n  DURATION = \"exam_duration\",\n  STATUS = \"exam_status\",\n}\n\nexport interface ExaminationProgressReportContentInterface {\n  key: ExaminationProgressReportContentKeyInterface;\n  title: string;\n  status: boolean;\n}\n\nexport const examinationProgressIsChangeAllowed = (\n  key: ExaminationProgressReportContentKeyInterface\n): boolean => {\n  if (\n    key === ExaminationProgressReportContentKeyInterface.COURSER_NAME ||\n    key === ExaminationProgressReportContentKeyInterface.COURSE_CODE ||\n    key === ExaminationProgressReportContentKeyInterface.PERIOD ||\n    key === ExaminationProgressReportContentKeyInterface.STATUS\n  ) {\n    return false;\n  }\n  return true;\n};\n\nexport const defaultExaminationProgressContent: ExaminationProgressReportContentInterface[] =\n  [\n    {\n      key: ExaminationProgressReportContentKeyInterface.COURSER_NAME,\n      title: \"Course names\",\n      status: true,\n    },\n    {\n      key: ExaminationProgressReportContentKeyInterface.COURSE_CODE,\n      title: \"Course code\",\n      status: true,\n    },\n    {\n      key: ExaminationProgressReportContentKeyInterface.SCHOOL_LEVEL,\n      title: \"School levels\",\n      status: true,\n    },\n    {\n      key: ExaminationProgressReportContentKeyInterface.PERIOD,\n      title: \"Exam period\",\n      status: true,\n    },\n    {\n      key: ExaminationProgressReportContentKeyInterface.DATE,\n      title: \"Exam date\",\n      status: true,\n    },\n    {\n      key: ExaminationProgressReportContentKeyInterface.TIME,\n      title: \"Exam time\",\n      status: true,\n    },\n    {\n      key: ExaminationProgressReportContentKeyInterface.DURATION,\n      title: \"Exam duration\",\n      status: true,\n    },\n    {\n      key: ExaminationProgressReportContentKeyInterface.STATUS,\n      title: \"Exam Status\",\n      status: true,\n    },\n  ];\n\n// END EXCEL FILE FUNCTIONS ================================\n\nexport const displayStatus = (status: string): string => {\n  if (status === \"Done\") {\n    return \"Completed\";\n  }\n  if (status === \"Editing\") {\n    return \"In exam\";\n  }\n  return status;\n};\n\nexport interface examProgressStateInterface {\n  course_name: string;\n  course_code: string;\n  description: string;\n  school_levels: string[];\n  course_id: string;\n  exam: ExamItemResponse | null;\n  preparation_status: string;\n}\n\nexport const FC_reportDoneExamList = (\n  allCourses: course[],\n  allExams: ExamItemResponse[],\n  doneExams: ExamDoneAndRemainingByPeriodInterface[]\n): examProgressStateInterface[] => {\n  let result: examProgressStateInterface[] = [],\n    ids: string[] = [];\n  for (const key in allExams) {\n    if (Object.prototype.hasOwnProperty.call(allExams, key)) {\n      if (ids.includes(allExams[key].id)) continue;\n      ids.push(allExams[key].id);\n      let courser = allCourses.find(\n        (item) => item.course_id === allExams[key].course\n      );\n      if (courser) {\n        let doneExam = doneExams.find(\n          (item) =>\n            item.course === allExams[key].course &&\n            item.period === allExams[key].period\n        );\n        result.push({\n          course_name: courser.course_name,\n          course_code: courser.course_code,\n          description: courser.description,\n          school_levels: courser.school_levels,\n          course_id: courser.course_id,\n          exam: allExams[key],\n          preparation_status: doneExam ? doneExam.exam_status : \"remaining\",\n        });\n      }\n    }\n  }\n  return result;\n};\n\nexport const FC_reportDoneExamListFilter = (\n  thisList: examProgressStateInterface[],\n  thisValue: \"all\" | \"Done\" | \"Active\"\n): examProgressStateInterface[] => {\n  if (thisValue === \"all\") {\n    return thisList;\n  } else {\n    return thisList.filter((item) => item.preparation_status === thisValue);\n  }\n};\n\nexport const searchExamData = (\n  objList: examProgressStateInterface[],\n  text: string\n): examProgressStateInterface[] => {\n  if (undefined === text || text === \"\") return objList;\n  return objList.filter((product) => {\n    let flag;\n    // let dataKeys = product;\n\n    for (let prop in product) {\n      flag = false;\n      if (\n        prop === \"course_name\" ||\n        prop === \"course_code\" ||\n        prop === \"preparation_status\"\n      ) {\n        flag =\n          product[prop].toString().toLowerCase().indexOf(text.toLowerCase()) >\n          -1;\n      }\n      if (flag) break;\n    }\n    return flag;\n  });\n};\n\ntype DoneExamListProps = {\n  loading: boolean;\n  examsListData: ExamItemResponse[] | null;\n  courseListData: course[] | null;\n  thisPeriod: SessionPlanInterface[];\n  doneExamsData: ExamDoneAndRemainingByPeriodInterface[] | null;\n\n  // for filter purpose =============================\n  filterExamProgress: \"all\" | \"Done\" | \"Active\";\n};\n\nconst DoneExamList: React.FC<DoneExamListProps> = (props) => {\n  const [searchInput, setSearchInput] = useState<string>(\"\");\n  const [isSorted, setIsSorted] = useState<boolean>(false);\n  const [sortProperty, setSortProperty] = useState<string>(\"\");\n  const [sortOrder, setSortOrder] = useState<\"ASC\" | \"DESC\">(\"ASC\");\n\n  const setSort = (thisProperty: string) => {\n    if (sortProperty === thisProperty && sortOrder === \"ASC\") {\n      setSortOrder(\"DESC\");\n      setSortProperty(thisProperty);\n      setIsSorted(true);\n    } else {\n      setSortOrder(\"ASC\");\n      setSortProperty(thisProperty);\n      setIsSorted(true);\n    }\n  };\n\n  return (\n    <Fragment>\n      <div className=\"bg-white my-4\">\n        <div className=\"w-full px-2 py-2\">\n          <input\n            onChange={(e) => setSearchInput(e.target.value)}\n            type=\"text\"\n            value={searchInput}\n            placeholder=\"Search...\"\n            className=\"w-full bg-gray-100 py-2 px-3 rounded\"\n            disabled={\n              props.courseListData &&\n              props.examsListData &&\n              props.doneExamsData &&\n              FC_reportDoneExamListFilter(\n                FC_reportDoneExamList(\n                  props.courseListData,\n                  props.examsListData,\n                  props.doneExamsData\n                ),\n                props.filterExamProgress\n              ).length <= 0\n                ? true\n                : false\n            }\n          />\n        </div>\n        <table className=\"w-full shadow\" id=\"report_content\">\n          <thead className=\"bg-white border-b-2 border-gray-300 text-gray-600 font-bold text-sm\">\n            <tr>\n              <td className=\"px-2 py-2\">#</td>\n              <td\n                className=\"px-2 py-2 cursor-pointer\"\n                onClick={() => setSort(\"course_name\")}\n              >\n                <div className=\"flex items-center gap-1\">\n                  Course <BiSort />\n                </div>\n              </td>\n              <td className=\"px-2 py-2\">Exam date</td>\n              <td className=\"px-2 py-2\">Exam time</td>\n              <td className=\"px-2 py-2\">Exam duration</td>\n              <td className=\"px-2 py-2\">Exam Period</td>\n              <td\n                className=\"px-2 py-2 cursor-pointer\"\n                onClick={() => setSort(\"preparation_status\")}\n              >\n                <div className=\"flex items-center gap-1\">\n                  Exam Status <BiSort />\n                </div>\n              </td>\n            </tr>\n          </thead>\n          <tbody>\n            {props.courseListData === null || props.loading ? (\n              <tr>\n                <td colSpan={7} className=\"px-2 py-2\">\n                  <Loading />\n                </td>\n              </tr>\n            ) : props.examsListData &&\n              props.doneExamsData &&\n              FC_reportDoneExamListFilter(\n                FC_reportDoneExamList(\n                  props.courseListData,\n                  props.examsListData,\n                  props.doneExamsData\n                ),\n                props.filterExamProgress\n              ).length <= 0 ? (\n              <tr>\n                <td colSpan={7} className=\"px-2 py-2 text-center\">\n                  No Exam list available!\n                </td>\n              </tr>\n            ) : (\n              props.examsListData &&\n              props.doneExamsData &&\n              sortThisArray(\n                isSorted,\n                searchExamData(\n                  FC_reportDoneExamListFilter(\n                    FC_reportDoneExamList(\n                      props.courseListData,\n                      props.examsListData,\n                      props.doneExamsData\n                    ),\n                    props.filterExamProgress\n                  ),\n                  searchInput\n                ),\n                sortProperty,\n                sortOrder\n              ).map((item, i) => (\n                <tr\n                  key={i + 1}\n                  className={`${\n                    item.preparation_status === \"Done\"\n                      ? \"bg-blue-50\"\n                      : \"bg-white\"\n                  } text-gray-600 hover:bg-blue-100 hover:text-blue-700 border-b border-gray-300 hover:border-blue-500 text-sm`}\n                >\n                  <td className=\"px-2 py-2\">{i + 1}</td>\n                  <td className=\"px-2 py-2\">\n                    {capitalizeFirstLetter(item.course_name)} (\n                    <span className=\"font-semibold\">{item.course_code}</span>)\n                  </td>\n                  <td className=\"px-2 py-2\">\n                    {item.exam ? DATE(item.exam.exam_date) : \"-\"}\n                  </td>\n                  <td className=\"px-2 py-2\">\n                    {item.exam ? item.exam.start_time : \"-\"}\n                  </td>\n                  <td className=\"px-2 py-2\">\n                    {item.exam ? item.exam!.duration + \" min\" : \"-\"}\n                  </td>\n                  <td className=\"px-2 py-2\">\n                    {item.exam\n                      ? getPeriodById(props.thisPeriod, item.exam.period)\n                        ? getPeriodById(props.thisPeriod, item.exam.period)!\n                            .session_plan_name\n                        : \"-\"\n                      : \"-\"}\n                  </td>\n                  <td className=\"px-2 py-2\">\n                    {capitalizeFirstLetter(\n                      displayStatus(item.preparation_status)\n                    )}\n                  </td>\n                </tr>\n              ))\n            )}\n          </tbody>\n        </table>\n      </div>\n    </Fragment>\n  );\n};\n\nexport default React.memo(DoneExamList);\n","import React from \"react\";\n\ntype TableLoadingProps = {\n  cols: number;\n};\nconst TableLoading: React.FC<TableLoadingProps> = (props) => {\n  const displayCols = (): JSX.Element[] => {\n    let colsArray: number[] = [];\n    for (let index = 0; index < props.cols; index++) {\n      colsArray.push(index);\n    }\n    let result = colsArray.map((element) => {\n      return (\n        <td className=\"p-3 text-center whitespace-nowrap\" key={element}>\n          <div className=\"w-full h-4 rounded bg-gray-200 animate__animated animate__pulse animate__delay-5s animate__infinite\"></div>\n        </td>\n      );\n    });\n\n    return result;\n  };\n  return (\n    <>\n      <tr className=\"border-b border-gray-200\" key={228}>\n        {displayCols()}\n      </tr>\n      <tr className=\"border-b border-gray-200\" key={22648}>\n        {displayCols()}\n      </tr>\n      <tr className=\"border-b border-gray-200\" key={229768}>\n        {displayCols()}\n      </tr>\n    </>\n  );\n};\n\nexport default TableLoading;\n","import axios from \"axios\";\nimport { Dispatch } from \"redux\";\nimport { ActionTypes } from \"./types\";\nimport {\n  AssignRoleToUserActionInterface,\n  CustomeAccessInterface,\n  UserInterface,\n} from \"../shared/interfaces\";\nimport { API } from \"../utils/api\";\nimport { setAxiosToken } from \"../utils/AxiosToken\";\nimport { errorToText } from \"../utils/errors\";\n\nconst url = `${API.AUTH}/auth`;\nexport const userPageLimit: number = 30;\n\n/**\n * * ****************************** INTERFACES *****************************\n */\n\nexport interface FetchUsersAction {\n  type: ActionTypes.FETCH_USERS_ACCESS;\n  payload: UserAccessInterface;\n}\n\nexport interface BlockUserToSystem {\n  type: ActionTypes.BLOCK_USER_TO_SYSTEM | ActionTypes.UNBLOCK_USER_TO_SYSTEM;\n  payload: { id: string; page: number };\n}\n\nexport interface AssignRoleToUserAction {\n  type: ActionTypes.ASSIGN_ROLE_TO_USER;\n  payload: { data: AssignRoleToUserActionInterface; page: number };\n}\n\nexport interface CustomizeUserAccessAction {\n  type: ActionTypes.CUSTOMIZE_USER_ACCESS;\n  payload: { data: CustomeAccessInterface; page: number };\n}\n\nexport interface ResetUserAccessAction {\n  type: ActionTypes.RESET_USER_ACCESS;\n  payload: { user_id: string; page: number };\n}\n\nexport type fetchUserAccessInterface = {\n  users: UserInterface[] | null;\n  next: {\n    page: number;\n    limit: number;\n  } | null;\n  previous: {\n    page: number;\n    limit: number;\n  } | null;\n  total_users: number;\n};\n\nexport type UserAccessInterface = {\n  users: { data: UserInterface[]; page: number }[] | null;\n  next: {\n    page: number;\n    limit: number;\n  } | null;\n  previous: {\n    page: number;\n    limit: number;\n  } | null;\n  total_users: number;\n};\n\nexport enum documentValidationStatus {\n  waiting = \"waiting\",\n  approved = \"approved\",\n  rejected = \"rejected\",\n}\n\nexport interface VerifyDocumentInterface {\n  user_id: string;\n  doc_id: string;\n  validation_status: \"waiting\" | \"approved\" | \"rejected\";\n  validated_by: {\n    user_id: string;\n    comment: string;\n    validation_status: \"waiting\" | \"approved\" | \"rejected\";\n    date?: string;\n  };\n  in_education: boolean;\n  disability: boolean;\n  expiration_date: string;\n}\n\nexport type AccessUserActionType =\n  | FetchUsersAction\n  | BlockUserToSystem\n  | AssignRoleToUserAction\n  | CustomizeUserAccessAction\n  | ResetUserAccessAction;\n\n/**\n * * ****************************** ACTIONS *****************************\n */\n\nexport type FT_FetchUserAccess = (\n  page: number,\n  callBack?: (\n    status: boolean,\n    msg: string,\n    data: UserInterface[] | null\n  ) => void\n) => void;\nexport const fetchUserAccess = (\n  page: number,\n  callback?: (\n    status: boolean,\n    msg: string,\n    data: UserInterface[] | null\n  ) => void\n) => {\n  callback && callback(true, \"\", null);\n  return async (dispatch: Dispatch) => {\n    try {\n      setAxiosToken();\n      const res = await axios.get<fetchUserAccessInterface>(\n        `${url}/user?page=${page}&limit=${userPageLimit}`\n      );\n      console.log(\"====================================\");\n      console.log({ fetchUserAccess: res });\n      console.log(\"====================================\");\n      dispatch<FetchUsersAction>({\n        type: ActionTypes.FETCH_USERS_ACCESS,\n        payload: {\n          users: [{ data: res.data.users!, page: page }],\n          next: res.data.next,\n          previous: res.data.previous,\n          total_users: res.data.total_users,\n        },\n      });\n      callback && callback(false, \"\", res.data.users);\n    } catch (error) {\n      console.error({ user_error: error });\n      callback && callback(false, errorToText(error), null);\n    }\n  };\n};\n\nexport const blockUserToSystem = (user_id: string, page: number) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<BlockUserToSystem>({\n      type: ActionTypes.BLOCK_USER_TO_SYSTEM,\n      payload: { id: user_id, page },\n    });\n  };\n};\n\nexport const unBlockUserToSystem = (user_id: string, page: number) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<BlockUserToSystem>({\n      type: ActionTypes.UNBLOCK_USER_TO_SYSTEM,\n      payload: { id: user_id, page },\n    });\n  };\n};\n\nexport const assignRoleToUserAccess = (\n  data: AssignRoleToUserActionInterface,\n  page: number\n) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<AssignRoleToUserAction>({\n      type: ActionTypes.ASSIGN_ROLE_TO_USER,\n      payload: { data, page },\n    });\n  };\n};\n\nexport const customizeUserAccess = (\n  data: CustomeAccessInterface,\n  page: number\n) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<CustomizeUserAccessAction>({\n      type: ActionTypes.CUSTOMIZE_USER_ACCESS,\n      payload: { data, page },\n    });\n  };\n};\n\nexport const resetUserAccess = (data: string, page: number) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<ResetUserAccessAction>({\n      type: ActionTypes.RESET_USER_ACCESS,\n      payload: { user_id: data, page },\n    });\n  };\n};\n","import { ApexOptions } from \"apexcharts\";\nimport React, { useEffect, useState } from \"react\";\nimport Chart from \"react-apexcharts\";\n\ntype VBarCharPropstInterface = {\n  labels: string[];\n  categoriesLabel: any;\n  bar?: {\n    borderRadius: number;\n    horizontal: boolean;\n    columnWidth: string;\n    endingShape: string;\n  };\n  dataLabels: boolean;\n  yaxisText: string;\n  tooltipText: string;\n  series: {\n    name: string;\n    data: number[];\n  }[];\n  defaultBar?: {\n    borderRadius: number;\n    horizontal: boolean;\n    columnWidth: string;\n    endingShape: string;\n  };\n  colors?: any[];\n  title?: {\n    text: string;\n    align: string;\n    margin: number;\n    offestY: number;\n    style: {\n      fontSize: string;\n    };\n  };\n  stacked?: boolean;\n  FC_LoadSelected?: (labelIndex: number, seriesIndex: number) => void;\n  chartHeight?: number;\n};\n\nconst defaultBar = {\n  borderRadius: 4,\n  horizontal: false,\n  columnWidth: \"95%\",\n  endingShape: \"rounded\",\n};\n\nconst VBarChart: React.FC<VBarCharPropstInterface> = (props) => {\n  const [loading, setLoading] = useState<boolean>(true);\n  const [options, setOptions] = useState<ApexOptions>({\n    chart: {\n      events: {\n        dataPointSelection: (event, chartContext, config) => {\n          console.log({\n            labelClicked: config.w.config.labels[config.dataPointIndex],\n            // seriesClicked: config.w.config.series[config.dataPointIndex],\n          });\n          if (props.FC_LoadSelected) {\n            props.FC_LoadSelected(config.dataPointIndex, config.seriesIndex);\n          }\n          // console.log(config.seriesIndex);\n          // console.log(config.dataPointIndex);\n        },\n      },\n      stacked: props.stacked ? props.stacked : false,\n    },\n    plotOptions: {\n      bar: props.defaultBar ? props.defaultBar : defaultBar,\n    },\n    labels: props.labels,\n    dataLabels: {\n      enabled: true,\n    },\n    xaxis: {\n      labels: {\n        rotate: -45,\n      },\n      categories: props.categoriesLabel,\n      tickPlacement: \"on\",\n    },\n    yaxis: {\n      title: {\n        text: props.yaxisText,\n      },\n    },\n    fill: {\n      opacity: 1,\n    },\n    tooltip: {\n      y: {\n        formatter: function (val: number) {\n          return val + \" \" + props.tooltipText;\n        },\n      },\n    },\n    grid: {\n      padding: {\n        left: 30, // or whatever value that works\n        right: 30, // or whatever value that works\n      },\n    },\n    noData: {\n      text: \"No data found\",\n      align: \"center\",\n      verticalAlign: \"middle\",\n    },\n  });\n\n  useEffect(() => {\n    if (props.colors && props.colors.length > 0 && loading) {\n      setOptions({\n        chart: {\n          stacked: props.stacked ? props.stacked : false,\n          events: {\n            dataPointSelection: (event, chartContext, config) => {\n              console.log({\n                chartClicked: config.w.config.labels[config.dataPointIndex],\n              });\n              if (props.FC_LoadSelected) {\n                props.FC_LoadSelected(\n                  config.dataPointIndex,\n                  config.seriesIndex\n                );\n              }\n            },\n          },\n          zoom: {\n            enabled: true,\n            autoScaleYaxis: true,\n          },\n        },\n        plotOptions: {\n          bar: props.defaultBar ? props.defaultBar : defaultBar,\n        },\n        labels: props.labels,\n        dataLabels: {\n          enabled: true,\n        },\n        xaxis: {\n          labels: {\n            rotate: -45,\n          },\n          categories: props.categoriesLabel,\n          tickPlacement: \"on\",\n        },\n        yaxis: {\n          title: {\n            text: props.yaxisText,\n          },\n        },\n        fill: {\n          opacity: 1,\n        },\n        tooltip: {\n          y: {\n            formatter: function (val: number) {\n              return val + \" \" + props.tooltipText;\n            },\n          },\n        },\n        grid: {\n          padding: {\n            left: 30, // or whatever value that works\n            right: 30, // or whatever value that works\n          },\n        },\n        noData: {\n          text: \"No data found\",\n          align: \"center\",\n          verticalAlign: \"middle\",\n        },\n        colors: props.colors,\n      });\n    } else if (loading) {\n      setOptions({\n        chart: {\n          stacked: props.stacked ? props.stacked : false,\n          events: {\n            dataPointSelection: (event, chartContext, config) => {\n              console.log({\n                labelClicked: config.w.config.labels[config.dataPointIndex],\n                // seriesClicked: config.w.config.series[config.dataPointIndex],\n              });\n              if (props.FC_LoadSelected) {\n                props.FC_LoadSelected(\n                  config.dataPointIndex,\n                  config.seriesIndex\n                );\n              }\n              // console.log(config.seriesIndex);\n              // console.log(config.dataPointIndex);\n            },\n          },\n          zoom: {\n            enabled: true,\n            autoScaleYaxis: true,\n          },\n        },\n        plotOptions: {\n          bar: props.defaultBar ? props.defaultBar : defaultBar,\n        },\n        labels: props.labels,\n        dataLabels: {\n          enabled: true,\n        },\n        xaxis: {\n          labels: {\n            rotate: -45,\n          },\n          categories: props.categoriesLabel,\n          tickPlacement: \"on\",\n        },\n        yaxis: {\n          title: {\n            text: props.yaxisText,\n          },\n        },\n        fill: {\n          opacity: 1,\n        },\n        tooltip: {\n          y: {\n            formatter: function (val: number) {\n              return val + \" \" + props.tooltipText;\n            },\n          },\n        },\n        grid: {\n          padding: {\n            left: 30, // or whatever value that works\n            right: 30, // or whatever value that works\n          },\n        },\n        noData: {\n          text: \"No data found\",\n          align: \"center\",\n          verticalAlign: \"middle\",\n        },\n      });\n    }\n    setLoading(false);\n  }, [loading, options, props]);\n\n  if (loading) {\n    return (\n      <div className=\"text-center mt-7 font-bold text-4xl text-gray-400 animate-pulse\">\n        Loading Data...\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"w-full\">\n      <Chart\n        options={options}\n        series={props.series}\n        type=\"bar\"\n        width=\"100%\"\n        height={props.chartHeight ? props.chartHeight : undefined}\n      />\n    </div>\n  );\n};\n\nexport default React.memo(VBarChart);\n","import React, { Component } from \"react\";\nimport { BiFilterAlt } from \"react-icons/bi\";\nimport { FiEdit } from \"react-icons/fi\";\nimport { MdRadioButtonChecked, MdRadioButtonUnchecked } from \"react-icons/md\";\nimport { connect } from \"react-redux\";\nimport {\n  Auth,\n  schoolLevelsStoreInterface,\n  setSelectedPeriod,\n  loadCourses,\n  loadExamsList,\n  loadEducationCategories,\n  loadDoneExam,\n  loadSchoolLevels,\n  loadPerfomranceExam,\n  loadCandidatesExamPerformance,\n  setSelectedEducationCategory,\n  PushPopupAlert,\n  FilterParamType,\n  ReportGetCandidatePerformanceSortTypes,\n} from \"../../../actions\";\nimport { FC_GetAllSessionByInstitution } from \"../../../actions/session\";\nimport { PopupAlertData } from \"../../../components/Alert/Popup\";\nimport {\n  generatePDF,\n  reportSettingsInterface,\n} from \"../../../components/DownloadPDF/rest\";\nimport Loading from \"../../../components/Loading/Loading\";\nimport { SideNavigation } from \"../../../components/Navigation/SideNavigation\";\nimport NoResult, {\n  NoResultThemes,\n} from \"../../../components/NoResult/NoResult\";\nimport {\n  course,\n  education_category,\n  ReportUserExamStatus,\n  school_level,\n  SessionPlanInterface,\n} from \"../../../interfaces\";\nimport { PopupAlertTheme } from \"../../../interfaces/popupAlert\";\nimport {\n  ExamItemResponse,\n  PrepareExamStatus,\n  QuestionNumberFormat,\n} from \"../../../interfaces/prepare_exam\";\nimport { StoreState } from \"../../../reducers\";\nimport { ExamReportReducerType } from \"../../../reducers/exam_report\";\nimport { SessionPlanReducerInterface } from \"../../../reducers/session\";\nimport {\n  capitalizeFirstLetter,\n  isEmptyOrSpaces,\n} from \"../../../shared/dataTest\";\nimport {\n  DATE,\n  FC_HasInstitute,\n  timestampToDate,\n} from \"../../../utils/functions\";\nimport NoSession from \"../../SessionSettings/NoSession\";\nimport CandiadtePerformancePerDistrict, {\n  FC_CandiadtePerformancePerDistrictFilter,\n} from \"./CandiadtePerformancePerDistrict\";\nimport CandidatePerformance, {\n  CandidateExamPerformanceToPrintInterface,\n  CandidateExamPerformanceReportContentInterface,\n  defaultCandidateExamPerformanceContent,\n  candidatePerfomranceStateInterface,\n  FC_reportCandidatePerformanceData,\n} from \"./CandidatePerformance\";\nimport DoneExamList, {\n  ExaminationProgressToPrintInterface,\n  ExaminationProgressReportContentInterface,\n  defaultExaminationProgressContent,\n  displayStatus,\n  examProgressStateInterface,\n  FC_reportDoneExamList,\n} from \"./DoneExamList\";\nimport ExamList, {\n  ExamPreparationToPrintInterface,\n  examPreparationReportContentInterface,\n  defaultExamPreparationReportContent,\n  examPreparationStateInterface,\n  FC_reportExamList,\n} from \"./ExamList\";\nimport ExamPerformance, {\n  ExamPerformanceToPrintInterface,\n  examPerformanceReportContentInterface,\n  defaultExamPerformanceContent,\n  examPerformanceStateInterface,\n  FC_reportExamPerformanceData,\n} from \"./ExamPerformance\";\nimport ExamPerformancePerDistrict, {\n  FC_ExamPerformancePerDistrictPropsData,\n} from \"./ExamPerformancePerDistrict\";\nimport ExamReportFilters from \"./ExamReportFilters\";\nimport ExamReportModals, { ModalForTypes } from \"./ExamReportModals\";\nimport ExamReportTitle from \"./ExamReportTitle\";\n\nexport interface reportCourseInterface {\n  course_name: string;\n  course_code: string;\n  description: string;\n  school_levels: string[];\n  course_id: string;\n  exam: {\n    questions: string[];\n    status: number;\n    period: string;\n    course: string;\n    exam_status: PrepareExamStatus;\n    termes: string;\n    questions_per_page: number;\n    exam_date: string;\n    start_time: string;\n    duration: number;\n    number_format: QuestionNumberFormat;\n    discription: string;\n    createdAt: string;\n    updatedAt: string;\n    id: string;\n  };\n}\n\nexport const getExamByCourseId = (\n  allExams: ExamItemResponse[],\n  course_id: string\n): ExamItemResponse | undefined => {\n  return allExams.find((item) => item.course === course_id);\n};\n\nexport const getPeriodById = (\n  periods: SessionPlanInterface[],\n  period_id: string\n): SessionPlanInterface | undefined => {\n  return periods.find((item) => item._id === period_id);\n};\n\nexport const loadAllExams = (\n  examsList: ExamItemResponse[] | null,\n  selected_period: SessionPlanInterface | null\n): ExamItemResponse[] | null => {\n  let result: ExamItemResponse[] | null = examsList;\n  if (result && selected_period) {\n    result = result.filter((item) => item.period === selected_period?._id);\n  } else {\n    result = examsList;\n  }\n  return result;\n};\n\n// TYPES OF REPORTS ======================================\nexport enum reportTitleType {\n  APPLICANTS_PERFORMANCE = \"Exam report\",\n  EXAM_PREPARATION = \"List of prepared and not prepared exams\",\n  EXAM_PERFORMANCE = \"Exam performance\",\n  EXAMINATION_PROGRESS = \"List of complete & remaining exams\",\n  EXAM_DISTRICT_PERFORMANCE = \"Top 30 exams passed in\", // ADD DISTRICT NAME EX: Muhanga District\n  APPLICANTS_DISTRICT_PERFORMANCE = \"Top 30 applicants performance\", // ADD DISTRICT NAME EX: Muhanga District && EXAM NAME EX: Physics\n}\n\ninterface ExamReportProps {\n  auth: Auth;\n  periods: SessionPlanReducerInterface;\n  schoolLevels: schoolLevelsStoreInterface;\n  courses: course[] | null;\n  examsList: ExamItemResponse[] | null;\n  adminExamReport: ExamReportReducerType;\n  FC_GetAllSessionByInstitution: Function;\n  loadEducationCategories: Function;\n  setSelectedEducationCategory: (\n    education_category: education_category\n  ) => void;\n  loadCourses: (callback: (loading: boolean) => void) => void;\n  loadExamsList: (callback: (loading: boolean) => void) => void;\n  loadDoneExam: (period_id: string, callback: Function) => void;\n  loadPerfomranceExam: (period_id: string, callback: Function) => void;\n  loadSchoolLevels: (callback: (loading: boolean) => void) => void;\n  loadCandidatesExamPerformance: (\n    dataBody: FilterParamType | null,\n    callback: Function\n  ) => void;\n  PushPopupAlert: (alert: PopupAlertData) => void;\n}\n\ninterface ExamReportState {\n  loading: boolean;\n  loadingCourses: boolean;\n  loadingExams: boolean;\n  downloading: boolean;\n  loadingDoneExam: boolean;\n  loadingCandidatesExamPerformance: boolean;\n  loadingExamPerformance: boolean;\n  loadingSettings: boolean;\n\n  // FILTER STATES =======================================\n  filterPreparation: \"prepared\" | \"not prepared\" | \"all\";\n  filterExamProgress: \"Done\" | \"Active\" | \"all\";\n  filterApplicantPerformance: ReportUserExamStatus | \"all\";\n  // END FILTER STATES =======================================\n\n  selectPeriod: boolean;\n  generateReportModal: {\n    reportType: \"EXCEL\" | \"PDF\";\n    status: boolean;\n  } | null;\n  districtModal: boolean;\n  selected_period: SessionPlanInterface | null;\n\n  // GENERATE EXCEL REPORT =======================================\n  // WHAT TO PRINT ########################################\n  reportTitle: reportTitleType;\n  // WHAT TITLE TO PRINT ########################################\n  excelReportTitle: string;\n  // SET DEFAULT CONTENT ########################################\n  // ############### EXAM PREPARATION ######################\n  examsToPrint: ExamPreparationToPrintInterface[] | null;\n  examPreparationReportContent: examPreparationReportContentInterface[];\n  // ############### EXAM PERFORMANCE ######################\n  examPerformanceToPrint: ExamPerformanceToPrintInterface[] | null;\n  examPerformanceReportContent: examPerformanceReportContentInterface[];\n  // ############### TOP 30 EXAM PERFORMANCE ######################\n  exam30PerformanceToPrint: ExamPerformanceToPrintInterface[] | null;\n  exam30PerformanceReportContent: examPerformanceReportContentInterface[];\n  // ############### EXAMINATION PROGRESS ######################\n  examinationProgressToPrint: ExaminationProgressToPrintInterface[] | null;\n  examinationProgressReportContent: ExaminationProgressReportContentInterface[];\n  // ############### CANDIDATE EXAM PERFORMANCE ######################\n  candidateExamPerformanceToPrint:\n    | CandidateExamPerformanceToPrintInterface[]\n    | null;\n\n  candidateExamPerformanceReportContent: CandidateExamPerformanceReportContentInterface[];\n  // ############### CANDIDATE EXAM PERFORMANCE ######################\n\n  candidate30ExamPerformanceToPrint:\n    | CandidateExamPerformanceToPrintInterface[]\n    | null;\n\n  candidate30ExamPerformanceReportContent: CandidateExamPerformanceReportContentInterface[];\n  // END GENERATE EXCEL REPORT =======================================\n}\n\nclass _ExamReport extends Component<ExamReportProps, ExamReportState> {\n  constructor(props: ExamReportProps) {\n    super(props);\n\n    this.state = {\n      loading: true,\n      loadingCourses: true,\n      loadingExams: true,\n      downloading: false,\n      loadingDoneExam: true,\n      loadingCandidatesExamPerformance: true,\n      loadingExamPerformance: true,\n      loadingSettings: true,\n      selectPeriod: false,\n      districtModal: false,\n\n      // FILTER STATES =======================================\n      filterPreparation: \"all\",\n      filterExamProgress: \"all\",\n      filterApplicantPerformance: \"all\",\n      // END FILTER STATES =======================================\n\n      generateReportModal: null,\n      selected_period: null,\n\n      // GENERATE EXCEL REPORT =======================================\n      // WHAT TO PRINT ########################################\n      reportTitle: reportTitleType.APPLICANTS_PERFORMANCE,\n      // WHAT TITLE TO PRINT ########################################\n      excelReportTitle: reportTitleType.APPLICANTS_PERFORMANCE,\n      // SET DEFAULT CONTENT ########################################\n      // ############### EXAM PREPARATION ######################\n      examsToPrint: null,\n      examPreparationReportContent: defaultExamPreparationReportContent,\n      // ############### EXAM PERFORMANCE ######################\n      examPerformanceToPrint: null,\n      examPerformanceReportContent: defaultExamPerformanceContent,\n      // ############### TOP 30 EXAM PERFORMANCE ######################\n      exam30PerformanceToPrint: null,\n      exam30PerformanceReportContent: defaultExamPerformanceContent,\n      // ############### EXAMINATION PROGRESS ######################\n      examinationProgressToPrint: null,\n      examinationProgressReportContent: defaultExaminationProgressContent,\n      // ############### CANDIDATE EXAM PERFORMANCE ######################\n      candidateExamPerformanceToPrint: null,\n\n      candidateExamPerformanceReportContent:\n        defaultCandidateExamPerformanceContent,\n      // ############### CANDIDATE EXAM PERFORMANCE ######################\n\n      candidate30ExamPerformanceToPrint: null,\n\n      candidate30ExamPerformanceReportContent:\n        defaultCandidateExamPerformanceContent,\n      // END GENERATE EXCEL REPORT =======================================\n    };\n  }\n\n  setLoading = (value: boolean) => {\n    this.setState({ loading: value });\n  };\n\n  setLoadingCourses = (value: boolean) => {\n    this.setState({ loadingCourses: value });\n  };\n\n  setLoadingExams = (value: boolean) => {\n    this.setState({ loadingExams: value });\n  };\n\n  setDownloading = (value: boolean) => {\n    this.setState({ downloading: value });\n  };\n\n  setLoadingDoneExam = (value: boolean) => {\n    this.setState({ loadingDoneExam: value });\n  };\n\n  setLoadingCandidatesExamPerformance = (value: boolean) => {\n    this.setState({ loadingCandidatesExamPerformance: value });\n  };\n\n  setLoadingExamPerformance = (value: boolean) => {\n    this.setState({ loadingExamPerformance: value });\n  };\n\n  setLoadingSettings = (value: boolean) => {\n    this.setState({ loadingSettings: value });\n  };\n\n  setSelectPeriod = (value: boolean) => {\n    this.setState({ selectPeriod: value });\n  };\n\n  setDistrictModal = (value: boolean) => {\n    this.setState({ districtModal: value });\n  };\n\n  setFilterPreparation = (value: \"prepared\" | \"not prepared\" | \"all\") => {\n    this.setState({ filterPreparation: value });\n  };\n\n  setFilterExamProgress = (value: \"Done\" | \"Active\" | \"all\") => {\n    this.setState({ filterExamProgress: value });\n  };\n\n  setFilterApplicantPerformance = (value: ReportUserExamStatus | \"all\") => {\n    this.setState({ filterApplicantPerformance: value });\n  };\n\n  setGenerateReportModal = (\n    value: {\n      reportType: \"EXCEL\" | \"PDF\";\n      status: boolean;\n    } | null\n  ) => {\n    this.setState({ generateReportModal: value });\n  };\n\n  setSelectedPeriod = (value: SessionPlanInterface | null) => {\n    this.setState({ selected_period: value });\n  };\n\n  setReportTitle = (value: reportTitleType) => {\n    this.setState({ reportTitle: value });\n  };\n\n  setExcelReportTitle = (value: string) => {\n    this.setState({ excelReportTitle: value });\n  };\n\n  setExamsToPrint = (value: ExamPreparationToPrintInterface[] | null) => {\n    this.setState({ examsToPrint: value });\n  };\n\n  setExamPreparationReportContent = (\n    value: examPreparationReportContentInterface[]\n  ) => {\n    this.setState({ examPreparationReportContent: value });\n  };\n  setExamPerformanceToPrint = (\n    value: ExamPerformanceToPrintInterface[] | null\n  ) => {\n    this.setState({ examPerformanceToPrint: value });\n  };\n  setExamPerformanceReportContent = (\n    value: examPerformanceReportContentInterface[]\n  ) => {\n    this.setState({ examPerformanceReportContent: value });\n  };\n\n  setExam30PerformanceToPrint = (\n    value: ExamPerformanceToPrintInterface[] | null\n  ) => {\n    this.setState({ exam30PerformanceToPrint: value });\n  };\n  setExam30PerformanceReportContent = (\n    value: examPerformanceReportContentInterface[]\n  ) => {\n    this.setState({ exam30PerformanceReportContent: value });\n  };\n  setExaminationProgressToPrint = (\n    value: ExaminationProgressToPrintInterface[] | null\n  ) => {\n    this.setState({ examinationProgressToPrint: value });\n  };\n  setExaminationProgressExamPerformanceReportContent = (\n    value: ExaminationProgressReportContentInterface[]\n  ) => {\n    this.setState({ examinationProgressReportContent: value });\n  };\n\n  setCandidateExamPerformanceToPrint = (\n    value: CandidateExamPerformanceToPrintInterface[] | null\n  ) => {\n    this.setState({ candidateExamPerformanceToPrint: value });\n  };\n\n  setCandidateExamPerformanceReportContent = (\n    value: CandidateExamPerformanceReportContentInterface[]\n  ) => {\n    this.setState({ candidateExamPerformanceReportContent: value });\n  };\n\n  setCandidate30ExamPerformanceToPrint = (\n    value: CandidateExamPerformanceToPrintInterface[] | null\n  ) => {\n    this.setState({ candidate30ExamPerformanceToPrint: value });\n  };\n\n  setCandidate30ExamPerformanceReportContent = (\n    value: CandidateExamPerformanceReportContentInterface[]\n  ) => {\n    this.setState({ candidate30ExamPerformanceReportContent: value });\n  };\n\n  selectDefaultSession = (allSession: SessionPlanInterface[]) => {\n    if (allSession.length > 0) {\n      let active_period = allSession.find((item) => item.is_active);\n      this.setSelectedPeriod(active_period ? active_period : allSession[0]);\n      this.onPeriodChange(\n        active_period ? active_period._id : allSession[0]._id\n      );\n    }\n    this.setSelectPeriod(false);\n  };\n\n  // onInstitutionChanged = (institution_id: string) => {\n  //   if (\n  //     this.props.schoolLevels.education_categories &&\n  //     this.props.schoolLevels.education_categories.length > 0\n  //   ) {\n\n  //   }\n  // };\n\n  FD_GetSessions = (institution_id: string) => {\n    this.setSelectedPeriod(null);\n    this.props.FC_GetAllSessionByInstitution(\n      institution_id,\n      (status: boolean, msg: string, data?: SessionPlanInterface[]) => {\n        this.setLoadingSettings(status);\n        if (!status) {\n          if (!isEmptyOrSpaces(msg)) {\n            this.props.PushPopupAlert({\n              title: msg,\n              theme: PopupAlertTheme.danger,\n            });\n          }\n          if (data && data.length > 0) {\n            this.selectDefaultSession(data);\n          }\n        }\n      }\n    );\n  };\n\n  componentDidMount = () => {\n    if (FC_HasInstitute(this.props.auth.education_institution_id)) {\n      this.FD_GetSessions(this.props.auth.education_institution_id!);\n    }\n\n    if (\n      this.props.schoolLevels.education_categories === null ||\n      this.props.schoolLevels.education_categories.length\n    ) {\n      this.props.loadEducationCategories(\n        (status: boolean, data?: education_category[]) => {\n          this.setLoadingSettings(status);\n          if (!status && data && data.length > 0) {\n            // if (!isEmptyOrSpaces(msg)) {\n            //   this.props.PushPopupAlert({\n            //     title: msg,\n            //     theme: PopupAlertTheme.danger,\n            //   });\n            // }\n\n            if (\n              FC_HasInstitute(this.props.auth.education_institution_id) ===\n              false\n            ) {\n              this.props.setSelectedEducationCategory(data[0]);\n              this.FD_GetSessions(data[0].education_institute_id);\n            } else {\n              const thisEducation = data.find(\n                (item) =>\n                  item.education_institute_id ===\n                  this.props.auth.education_institution_id\n              );\n              this.props.setSelectedEducationCategory(\n                thisEducation ? thisEducation : data[0]\n              );\n            }\n            // if (data && data.length > 0) {\n            // }\n          }\n        }\n      );\n    } else if (!this.props.schoolLevels.selectedEducationCategory) {\n      if (FC_HasInstitute(this.props.auth.education_institution_id) === false) {\n        this.props.setSelectedEducationCategory(\n          this.props.schoolLevels.education_categories[0]\n        );\n        this.FD_GetSessions(\n          this.props.schoolLevels.education_categories[0].education_institute_id\n        );\n      } else {\n        const thisEducation = this.props.schoolLevels.education_categories.find(\n          (item) =>\n            item.education_institute_id ===\n            this.props.auth.education_institution_id\n        );\n        this.props.setSelectedEducationCategory(\n          thisEducation\n            ? thisEducation\n            : this.props.schoolLevels.education_categories[0]\n        );\n      }\n    }\n\n    if (\n      this.props.schoolLevels.school_levels === null ||\n      this.props.schoolLevels.school_levels.length <= 0\n    ) {\n      this.props.loadSchoolLevels(this.setLoadingSettings);\n    }\n\n    if (\n      this.props.courses === null ||\n      (this.props.courses.length === 0 && this.state.loadingCourses)\n    ) {\n      this.props.loadCourses(this.setLoadingCourses);\n    } else if (this.state.loadingCourses) {\n      this.setLoadingCourses(false);\n    }\n\n    if (\n      this.props.examsList === null ||\n      (this.props.examsList.length === 0 && this.state.loadingExams)\n    ) {\n      this.props.loadExamsList(this.setLoadingExams);\n    } else if (this.state.loadingExams) {\n      this.setLoadingExams(false);\n    }\n\n    // if (\n    //   this.props.auth.application_session &&\n    //   this.props.auth.application_session._id &&\n    //   (this.props.adminExamReport.DoneExam === null ||\n    //     (this.props.adminExamReport.DoneExam.length === 0 &&\n    //       this.state.loadingDoneExam))\n    // ) {\n    //   this.props.loadDoneExam(\n    //     this.props.auth.application_session._id,\n    //     (status: boolean, msg: string) => {\n    //       if (!status) {\n    //         if (msg.length > 0) {\n    //           this.props.PushPopupAlert({\n    //             title: msg,\n    //             theme: PopupAlertTheme.danger,\n    //           });\n    //         }\n    //         this.setLoadingDoneExam(false);\n    //       }\n    //     }\n    //   );\n    // } else if (this.state.loadingDoneExam) {\n    //   this.setLoadingDoneExam(false);\n    // }\n\n    // if (\n    //   this.props.auth.application_session &&\n    //   this.props.auth.application_session._id &&\n    //   (this.props.adminExamReport.CandidatesExamPerformance === null ||\n    //     (this.props.adminExamReport.CandidatesExamPerformance.length === 0 &&\n    //       this.state.loadingCandidatesExamPerformance))\n    // ) {\n    //   this.props.loadCandidatesExamPerformance(\n    //     {\n    //       order: \"desc\",\n    //       sortBy: ReportGetCandidatePerformanceSortTypes.DATE,\n    //       filter: {\n    //         period: this.props.auth.application_session._id,\n    //       },\n    //     },\n    //     (status: boolean, msg: string) => {\n    //       if (!status) {\n    //         if (msg.length > 0) {\n    //           this.props.PushPopupAlert({\n    //             title: msg,\n    //             theme: PopupAlertTheme.danger,\n    //           });\n    //         }\n    //         this.setLoadingCandidatesExamPerformance(false);\n    //       }\n    //     }\n    //   );\n    // } else if (this.state.loadingCandidatesExamPerformance) {\n    //   this.setLoadingCandidatesExamPerformance(false);\n    // }\n\n    // if (\n    //   this.props.auth.application_session &&\n    //   this.props.auth.application_session._id &&\n    //   (this.props.adminExamReport.ExamPerformance === null ||\n    //     (this.props.adminExamReport.ExamPerformance.length === 0 &&\n    //       this.state.loadingExamPerformance))\n    // ) {\n    //   this.props.loadPerfomranceExam(\n    //     this.props.auth.application_session._id,\n    //     (status: boolean, msg: string) => {\n    //       if (!status) {\n    //         if (msg.length > 0) {\n    //           this.props.PushPopupAlert({\n    //             title: msg,\n    //             theme: PopupAlertTheme.danger,\n    //           });\n    //         }\n    //         this.setLoadingExamPerformance(false);\n    //       }\n    //     }\n    //   );\n    // } else if (this.state.loadingExamPerformance) {\n    //   this.setLoadingExamPerformance(false);\n    // }\n\n    if (this.state.excelReportTitle === this.state.reportTitle) {\n      let result: string = \"\";\n      if (\n        this.state.excelReportTitle ===\n          reportTitleType.EXAM_DISTRICT_PERFORMANCE &&\n        this.props.adminExamReport.reportDistrictId\n      ) {\n        result += ` ${this.props.adminExamReport.reportDistrictId.district_name} district`;\n      } else if (\n        this.state.excelReportTitle ===\n        reportTitleType.APPLICANTS_DISTRICT_PERFORMANCE\n      ) {\n        if (this.props.adminExamReport.reportDistrictId) {\n          result += ` in ${this.props.adminExamReport.reportDistrictId.district_name} district`;\n        }\n        if (this.props.adminExamReport.reportCourseId) {\n          result += ` in exam of ${this.props.adminExamReport.reportCourseId.course_name}(${this.props.adminExamReport.reportCourseId.course_code})`;\n        }\n      } else {\n        result = \"\";\n      }\n      this.setExcelReportTitle(this.state.excelReportTitle + result);\n      this.setLoading(false);\n    }\n  };\n\n  onPeriodChange = (period_id: string) => {\n    this.props.loadDoneExam(period_id, (status: boolean, msg: string) => {\n      this.setLoadingDoneExam(status);\n      if (!status) {\n        if (msg.length > 0) {\n          this.props.PushPopupAlert({\n            title: msg,\n            theme: PopupAlertTheme.danger,\n          });\n        }\n        this.setLoadingDoneExam(false);\n      }\n    });\n\n    this.props.loadPerfomranceExam(\n      period_id,\n      (status: boolean, msg: string) => {\n        this.setLoadingExamPerformance(status);\n        if (!status) {\n          if (msg.length > 0) {\n            this.props.PushPopupAlert({\n              title: msg,\n              theme: PopupAlertTheme.danger,\n            });\n          }\n          this.setLoadingExamPerformance(false);\n        }\n      }\n    );\n\n    this.props.loadCandidatesExamPerformance(\n      {\n        order: \"desc\",\n        sortBy: ReportGetCandidatePerformanceSortTypes.DATE,\n        filter: {\n          period: period_id,\n        },\n      },\n      (status: boolean, msg: string) => {\n        if (!status) {\n          if (msg.length > 0) {\n            this.props.PushPopupAlert({\n              title: msg,\n              theme: PopupAlertTheme.danger,\n            });\n          }\n          this.setLoadingCandidatesExamPerformance(false);\n        }\n      }\n    );\n  };\n\n  getLevelbyId = (level_id: string): school_level | undefined => {\n    if (this.props.schoolLevels.school_levels) {\n      return this.props.schoolLevels.school_levels.find(\n        (item) => item.school_level_id === level_id\n      );\n    }\n  };\n\n  getCourses = (): course[] | null => {\n    let result: course[] | null = [],\n      search_all: boolean = true;\n    if (this.props.courses) {\n      // FILTER BY EDICATION CATEGORY ====================\n      if (this.props.schoolLevels.selectedEducationCategory) {\n        for (const key in this.props.courses) {\n          if (Object.prototype.hasOwnProperty.call(this.props.courses, key)) {\n            if (this.props.courses[key].school_levels.length > 0) {\n              this.props.courses[key].school_levels.forEach((level) => {\n                let levelDetail = this.getLevelbyId(level);\n                if (\n                  levelDetail &&\n                  (levelDetail.education_institute.includes(\n                    this.props.schoolLevels.selectedEducationCategory!\n                      .education_institute_id\n                  ) ||\n                    levelDetail.education_institute.length <= 0)\n                ) {\n                  result && result.push(this.props.courses![key]);\n                }\n              });\n            } else {\n              result && result.push(this.props.courses![key]);\n            }\n          }\n        }\n      }\n      // RETURN DEFAULT VALUES ====================\n      else {\n        search_all = false;\n      }\n    }\n    return !search_all ? this.props.courses : result;\n  };\n\n  updateExamToPrint = () => {\n    // EXAM PREPARATION ######################\n    if (this.state.reportTitle === reportTitleType.EXAM_PREPARATION) {\n      if (\n        loadAllExams(this.props.examsList, this.state.selected_period) &&\n        this.getCourses() &&\n        this.props.periods.allSessionPlans\n      ) {\n        let data: examPreparationStateInterface[] = FC_reportExamList(\n          this.getCourses()!,\n          loadAllExams(this.props.examsList, this.state.selected_period)!\n        );\n        let arrayNew: ExamPreparationToPrintInterface[] = [];\n        let n: number = 1;\n        for (const key in data) {\n          if (Object.prototype.hasOwnProperty.call(data, key)) {\n            let school_level: string = \"\";\n            if (data[key].school_levels.length) {\n              data[key].school_levels.forEach((element, index) => {\n                let findLevel = this.getLevelbyId(element);\n                if (index === 0) {\n                  school_level = findLevel ? findLevel.school_level_name : \"\";\n                } else {\n                  school_level += findLevel\n                    ? \", \" + findLevel.school_level_name\n                    : \"\";\n                }\n              });\n            } else {\n              school_level = \"Any level\";\n            }\n            let dataArray: ExamPreparationToPrintInterface = {\n              course_id: n,\n              course_name: data[key].course_name,\n              course_code: data[key].course_code,\n              description: data[key].description,\n              school_levels: data[key].school_levels.length\n                ? school_level\n                : \"Any\",\n              exam_period: data[key].exam\n                ? getPeriodById(\n                    this.props.periods.allSessionPlans,\n                    data[key].exam!.period\n                  )\n                  ? getPeriodById(\n                      this.props.periods.allSessionPlans,\n                      data[key].exam!.period\n                    )!.session_plan_name\n                  : \"-\"\n                : \"-\",\n              exam_date: data[key].exam ? DATE(data[key].exam!.exam_date) : \"-\",\n              exam_time: data[key].exam ? data[key].exam!.start_time : \"-\",\n              exam_duration: data[key].exam\n                ? data[key].exam!.duration.toString()\n                : \"-\",\n              preparation_status: data[key].exam ? \"Prepared\" : \"Not prepared\",\n            };\n\n            for (const key in this.state.examPreparationReportContent) {\n              if (\n                Object.prototype.hasOwnProperty.call(\n                  this.state.examPreparationReportContent,\n                  key\n                )\n              ) {\n                if (!this.state.examPreparationReportContent[key].status) {\n                  delete dataArray[\n                    this.state.examPreparationReportContent[key].key\n                  ];\n                }\n              }\n            }\n            arrayNew.push(dataArray);\n            n++;\n          }\n        }\n        this.setExamsToPrint(arrayNew);\n        arrayNew = [];\n        n = 1;\n        // props.applicationsToPrint=;\n      }\n    }\n    // EXAM PERFORMANCE ######################\n    if (this.state.reportTitle === reportTitleType.EXAM_PERFORMANCE) {\n      if (\n        loadAllExams(this.props.examsList, this.state.selected_period) &&\n        this.getCourses() &&\n        this.props.adminExamReport.ExamPerformance &&\n        this.props.periods.allSessionPlans\n      ) {\n        let data: examPerformanceStateInterface[] =\n          FC_reportExamPerformanceData(\n            this.getCourses()!,\n            loadAllExams(this.props.examsList, this.state.selected_period)!,\n            this.props.adminExamReport.ExamPerformance\n          );\n        let arrayNew: ExamPerformanceToPrintInterface[] = [];\n        let n: number = 1;\n        for (const key in data) {\n          if (Object.prototype.hasOwnProperty.call(data, key)) {\n            let school_level: string = \"\";\n            if (data[key].school_levels.length) {\n              data[key].school_levels.forEach((element, index) => {\n                let findLevel = this.getLevelbyId(element);\n                if (index === 0) {\n                  school_level = findLevel ? findLevel.school_level_name : \"\";\n                } else {\n                  school_level += findLevel\n                    ? \", \" + findLevel.school_level_name\n                    : \"\";\n                }\n              });\n            } else {\n              school_level = \"Any level\";\n            }\n            let dataArray: ExamPerformanceToPrintInterface = {\n              course_id: n,\n              course_name: data[key].course_name,\n              course_code: data[key].course_code,\n              description: data[key].description,\n              school_levels: data[key].school_levels.length\n                ? school_level\n                : \"Any\",\n              exam_period: data[key].exam\n                ? getPeriodById(\n                    this.props.periods.allSessionPlans,\n                    data[key].exam!.period\n                  )\n                  ? getPeriodById(\n                      this.props.periods.allSessionPlans,\n                      data[key].exam!.period\n                    )!.session_plan_name\n                  : \"-\"\n                : \"-\",\n              exam_date: data[key].exam ? DATE(data[key].exam!.exam_date) : \"-\",\n              exam_time: data[key].exam ? data[key].exam!.start_time : \"-\",\n              exam_duration: data[key].exam\n                ? data[key].exam!.duration.toString()\n                : \"-\",\n              exam_performance: Number(data[key].exam_performance.toFixed(1)),\n            };\n\n            for (const key in this.state.examPerformanceReportContent) {\n              if (\n                Object.prototype.hasOwnProperty.call(\n                  this.state.examPerformanceReportContent,\n                  key\n                )\n              ) {\n                if (!this.state.examPerformanceReportContent[key].status) {\n                  delete dataArray[\n                    this.state.examPerformanceReportContent[key].key\n                  ];\n                }\n              }\n            }\n            arrayNew.push(dataArray);\n            n++;\n          }\n        }\n        this.setExamPerformanceToPrint(arrayNew);\n        arrayNew = [];\n        n = 1;\n        // props.applicationsToPrint=;\n      }\n    }\n    // TOP 30 EXAM PERFORMANCE ######################\n    if (this.state.reportTitle === reportTitleType.EXAM_DISTRICT_PERFORMANCE) {\n      if (\n        loadAllExams(this.props.examsList, this.state.selected_period) &&\n        this.getCourses() &&\n        this.props.adminExamReport.DoneExam &&\n        this.props.adminExamReport.CandidatesExamPerformance &&\n        this.props.adminExamReport.reportDistrictId &&\n        this.props.periods.allSessionPlans\n      ) {\n        let data = FC_ExamPerformancePerDistrictPropsData(\n          this.getCourses()!,\n          loadAllExams(this.props.examsList, this.state.selected_period)!,\n          this.props.adminExamReport.DoneExam,\n          this.props.adminExamReport.CandidatesExamPerformance,\n          this.props.adminExamReport.reportDistrictId.district_id\n        ).slice(0, 30);\n        let arrayNew: ExamPerformanceToPrintInterface[] = [];\n        let n: number = 1;\n        for (const key in data) {\n          if (Object.prototype.hasOwnProperty.call(data, key)) {\n            let school_level: string = \"\";\n            if (data[key].school_levels.length) {\n              data[key].school_levels.forEach((element, index) => {\n                let findLevel = this.getLevelbyId(element);\n                if (index === 0) {\n                  school_level = findLevel ? findLevel.school_level_name : \"\";\n                } else {\n                  school_level += findLevel\n                    ? \", \" + findLevel.school_level_name\n                    : \"\";\n                }\n              });\n            } else {\n              school_level = \"Any level\";\n            }\n            let dataArray: ExamPerformanceToPrintInterface = {\n              course_id: n,\n              course_name: data[key].course_name,\n              course_code: data[key].course_code,\n              description: data[key].description,\n              school_levels: data[key].school_levels.length\n                ? school_level\n                : \"Any\",\n              exam_period: data[key].exam\n                ? getPeriodById(\n                    this.props.periods.allSessionPlans,\n                    data[key].exam!.period\n                  )\n                  ? getPeriodById(\n                      this.props.periods.allSessionPlans,\n                      data[key].exam!.period\n                    )!.session_plan_name\n                  : \"-\"\n                : \"-\",\n              exam_date: data[key].exam ? DATE(data[key].exam!.exam_date) : \"-\",\n              exam_time: data[key].exam ? data[key].exam!.start_time : \"-\",\n              exam_duration: data[key].exam\n                ? data[key].exam!.duration.toString()\n                : \"-\",\n              exam_performance: 0,\n            };\n\n            for (const key in this.state.exam30PerformanceReportContent) {\n              if (\n                Object.prototype.hasOwnProperty.call(\n                  this.state.exam30PerformanceReportContent,\n                  key\n                )\n              ) {\n                if (!this.state.exam30PerformanceReportContent[key].status) {\n                  delete dataArray[\n                    this.state.exam30PerformanceReportContent[key].key\n                  ];\n                }\n              }\n            }\n            arrayNew.push(dataArray);\n            n++;\n          }\n        }\n        this.setExam30PerformanceToPrint(arrayNew);\n        arrayNew = [];\n        n = 1;\n      }\n    }\n    // EXAMINATION PROGRESS ######################\n    if (this.state.reportTitle === reportTitleType.EXAMINATION_PROGRESS) {\n      if (\n        loadAllExams(this.props.examsList, this.state.selected_period) &&\n        this.getCourses() &&\n        this.props.adminExamReport.DoneExam &&\n        this.props.periods.allSessionPlans\n      ) {\n        let data: examProgressStateInterface[] = FC_reportDoneExamList(\n          this.getCourses()!,\n          loadAllExams(this.props.examsList, this.state.selected_period)!,\n          this.props.adminExamReport.DoneExam\n        );\n        let arrayNew: ExaminationProgressToPrintInterface[] = [];\n        let n: number = 1;\n        for (const key in data) {\n          if (Object.prototype.hasOwnProperty.call(data, key)) {\n            let school_level: string = \"\";\n            if (data[key].school_levels.length) {\n              data[key].school_levels.forEach((element, index) => {\n                let findLevel = this.getLevelbyId(element);\n                if (index === 0) {\n                  school_level = findLevel ? findLevel.school_level_name : \"\";\n                } else {\n                  school_level += findLevel\n                    ? \", \" + findLevel.school_level_name\n                    : \"\";\n                }\n              });\n            } else {\n              school_level = \"Any level\";\n            }\n            let dataArray: ExaminationProgressToPrintInterface = {\n              course_id: n,\n              course_name: data[key].course_name,\n              course_code: data[key].course_code,\n              description: data[key].description,\n              school_levels: data[key].school_levels.length\n                ? school_level\n                : \"Any\",\n              exam_period: data[key].exam\n                ? getPeriodById(\n                    this.props.periods.allSessionPlans,\n                    data[key].exam!.period\n                  )\n                  ? getPeriodById(\n                      this.props.periods.allSessionPlans,\n                      data[key].exam!.period\n                    )!.session_plan_name\n                  : \"-\"\n                : \"-\",\n              exam_date: data[key].exam ? DATE(data[key].exam!.exam_date) : \"-\",\n              exam_time: data[key].exam ? data[key].exam!.start_time : \"-\",\n              exam_duration: data[key].exam\n                ? data[key].exam!.duration.toString()\n                : \"-\",\n              exam_status:\n                data[key].preparation_status === \"Done\"\n                  ? \"Completed\"\n                  : data[key].preparation_status,\n            };\n\n            for (const key in this.state.examinationProgressReportContent) {\n              if (\n                Object.prototype.hasOwnProperty.call(\n                  this.state.examinationProgressReportContent,\n                  key\n                )\n              ) {\n                if (!this.state.examinationProgressReportContent[key].status) {\n                  delete dataArray[\n                    this.state.examinationProgressReportContent[key].key\n                  ];\n                }\n              }\n            }\n            arrayNew.push(dataArray);\n            n++;\n          }\n        }\n        this.setExaminationProgressToPrint(arrayNew);\n        arrayNew = [];\n        n = 1;\n        // props.applicationsToPrint=;\n      }\n    }\n    // CANDIDATE EXAM PERFORMANCE ######################\n    if (this.state.reportTitle === reportTitleType.APPLICANTS_PERFORMANCE) {\n      if (\n        this.getCourses() &&\n        this.props.adminExamReport.CandidatesExamPerformance &&\n        this.props.periods.allSessionPlans\n      ) {\n        let data: candidatePerfomranceStateInterface[] =\n          FC_reportCandidatePerformanceData(\n            this.getCourses()!,\n            this.props.adminExamReport.CandidatesExamPerformance,\n            this.props.adminExamReport.reportCourseId\n              ? this.props.adminExamReport.reportCourseId.course_id\n              : \"all\"\n          );\n        let arrayNew: CandidateExamPerformanceToPrintInterface[] = [];\n        let n: number = 1;\n        for (const key in data) {\n          if (Object.prototype.hasOwnProperty.call(data, key)) {\n            let school_level: string = \"\";\n            if (data[key].school_levels.length) {\n              data[key].school_levels.forEach((element, index) => {\n                let findLevel = this.getLevelbyId(element);\n                if (index === 0) {\n                  school_level = findLevel ? findLevel.school_level_name : \"\";\n                } else {\n                  school_level += findLevel\n                    ? \", \" + findLevel.school_level_name\n                    : \"\";\n                }\n              });\n            } else {\n              school_level = \"Any level\";\n            }\n            let dataArray: CandidateExamPerformanceToPrintInterface = {\n              applicant_id: n,\n              course_name: data[key].course_name,\n              course_code: data[key].course_code,\n              description: data[key].description,\n              school_levels: data[key].school_levels.length\n                ? school_level\n                : \"Any\",\n              exam_period: getPeriodById(\n                this.props.periods.allSessionPlans,\n                data[key].exam.period\n              )\n                ? getPeriodById(\n                    this.props.periods.allSessionPlans,\n                    data[key].exam.period\n                  )!.session_plan_name\n                : \"-\",\n              exam_date: DATE(data[key].exam.exam_date),\n              exam_start_time: timestampToDate(\n                Number(data[key].exam.start_time)\n              ).timeAMPM,\n              exam_end_time: timestampToDate(Number(data[key].exam.end_time))\n                .timeAMPM,\n              performance_status: capitalizeFirstLetter(\n                displayStatus(data[key].exam_stastus)\n              ),\n              applicant_name: capitalizeFirstLetter(data[key].user_name),\n              national_id: data[key].national_id,\n              email: data[key].user_email,\n              phone: data[key].user_phone,\n              marks:\n                data[key].exam_stastus !== ReportUserExamStatus.Editing\n                  ? Number(data[key].user_total_marks.toFixed(1)) + \"%\"\n                  : \"-\",\n            };\n\n            for (const key in this.state\n              .candidateExamPerformanceReportContent) {\n              if (\n                Object.prototype.hasOwnProperty.call(\n                  this.state.candidateExamPerformanceReportContent,\n                  key\n                )\n              ) {\n                if (\n                  !this.state.candidateExamPerformanceReportContent[key].status\n                ) {\n                  delete dataArray[\n                    this.state.candidateExamPerformanceReportContent[key].key\n                  ];\n                }\n              }\n            }\n            arrayNew.push(dataArray);\n            n++;\n          }\n        }\n        this.setCandidateExamPerformanceToPrint(arrayNew);\n        arrayNew = [];\n        n = 1;\n        // props.applicationsToPrint=;\n      }\n    }\n    // 30 CANDIDATE EXAM PERFORMANCE ######################\n    if (\n      this.state.reportTitle === reportTitleType.APPLICANTS_DISTRICT_PERFORMANCE\n    ) {\n      if (\n        this.getCourses() &&\n        this.props.adminExamReport.CandidatesExamPerformance &&\n        this.props.periods.allSessionPlans\n      ) {\n        let data: candidatePerfomranceStateInterface[] =\n          FC_CandiadtePerformancePerDistrictFilter(\n            FC_reportCandidatePerformanceData(\n              this.getCourses()!,\n              this.props.adminExamReport.CandidatesExamPerformance,\n              this.props.adminExamReport.reportCourseId\n                ? this.props.adminExamReport.reportCourseId.course_id\n                : \"all\"\n            ),\n            this.props.adminExamReport.reportDistrictId\n              ? this.props.adminExamReport.reportDistrictId.district_id\n              : null,\n            this.props.adminExamReport.reportCourseId\n              ? this.props.adminExamReport.reportCourseId.course_id\n              : null,\n            this.state.filterApplicantPerformance\n          ).slice(0, 30);\n        let arrayNew: CandidateExamPerformanceToPrintInterface[] = [];\n        let n: number = 1;\n        for (const key in data) {\n          if (Object.prototype.hasOwnProperty.call(data, key)) {\n            let school_level: string = \"\";\n            if (data[key].school_levels.length) {\n              data[key].school_levels.forEach((element, index) => {\n                let findLevel = this.getLevelbyId(element);\n                if (index === 0) {\n                  school_level = findLevel ? findLevel.school_level_name : \"\";\n                } else {\n                  school_level += findLevel\n                    ? \", \" + findLevel.school_level_name\n                    : \"\";\n                }\n              });\n            } else {\n              school_level = \"Any level\";\n            }\n            let dataArray: CandidateExamPerformanceToPrintInterface = {\n              applicant_id: n,\n              course_name: data[key].course_name,\n              course_code: data[key].course_code,\n              description: data[key].description,\n              school_levels: data[key].school_levels.length\n                ? school_level\n                : \"Any\",\n              exam_period: getPeriodById(\n                this.props.periods.allSessionPlans,\n                data[key].exam.period\n              )\n                ? getPeriodById(\n                    this.props.periods.allSessionPlans,\n                    data[key].exam.period\n                  )!.session_plan_name\n                : \"-\",\n              exam_date: DATE(data[key].exam.exam_date),\n              exam_start_time: timestampToDate(\n                Number(data[key].exam.start_time)\n              ).timeAMPM,\n              exam_end_time: timestampToDate(Number(data[key].exam.end_time))\n                .timeAMPM,\n              performance_status: capitalizeFirstLetter(\n                displayStatus(data[key].exam_stastus)\n              ),\n              applicant_name: capitalizeFirstLetter(data[key].user_name),\n              national_id: data[key].national_id,\n              email: data[key].user_email,\n              phone: data[key].user_phone,\n              marks:\n                data[key].exam_stastus !== ReportUserExamStatus.Editing\n                  ? Number(data[key].user_total_marks.toFixed(1)) + \"%\"\n                  : \"-\",\n            };\n\n            for (const key in this.state\n              .candidate30ExamPerformanceReportContent) {\n              if (\n                Object.prototype.hasOwnProperty.call(\n                  this.state.candidate30ExamPerformanceReportContent,\n                  key\n                )\n              ) {\n                if (\n                  !this.state.candidate30ExamPerformanceReportContent[key]\n                    .status\n                ) {\n                  delete dataArray[\n                    this.state.candidate30ExamPerformanceReportContent[key].key\n                  ];\n                }\n              }\n            }\n            arrayNew.push(dataArray);\n            n++;\n          }\n        }\n        this.setCandidate30ExamPerformanceToPrint(arrayNew);\n        arrayNew = [];\n        n = 1;\n        // props.applicationsToPrint=;\n      }\n    }\n  };\n\n  addToTitle = (): string => {\n    let result: string = \"\";\n\n    if (\n      this.state.reportTitle === reportTitleType.EXAM_DISTRICT_PERFORMANCE &&\n      this.props.adminExamReport.reportDistrictId\n    ) {\n      result += ` ${this.props.adminExamReport.reportDistrictId.district_name} district`;\n    } else if (\n      this.state.reportTitle === reportTitleType.APPLICANTS_DISTRICT_PERFORMANCE\n    ) {\n      if (this.props.adminExamReport.reportDistrictId) {\n        result += ` in ${this.props.adminExamReport.reportDistrictId.district_name} district`;\n      }\n      if (this.props.adminExamReport.reportCourseId) {\n        result += ` in exam of ${this.props.adminExamReport.reportCourseId.course_name}(${this.props.adminExamReport.reportCourseId.course_code})`;\n      }\n    } else {\n      result = \"\";\n    }\n    return result;\n  };\n\n  downlaodPDF = async () => {\n    if (!document.querySelectorAll(\"#report_content tbody tr\").length) {\n      this.props.PushPopupAlert({\n        title: `Can't generate Report of empty Data`,\n        theme: PopupAlertTheme.warning,\n      });\n      return false;\n    }\n\n    if (this.state.selected_period) {\n      const table: HTMLElement | null =\n        document.getElementById(\"report_content\");\n      const reportSettings: reportSettingsInterface = {\n        doneBy: this.props.auth.user.fname + \" \" + this.props.auth.user.lname,\n        title: \"Exam Report\",\n        subjectTitle: \"Subject\",\n        subject: `${this.state.reportTitle} ${this.addToTitle()}`,\n        period: this.state.selected_period.session_plan_name,\n        footer: \"Online Teacher Recruitment\",\n        institute: this.props.schoolLevels.selectedEducationCategory\n          ? this.props.schoolLevels.selectedEducationCategory\n              .education_category_title\n          : \"All institute\",\n        orientation:\n          this.state.reportTitle === reportTitleType.APPLICANTS_PERFORMANCE ||\n          this.state.reportTitle ===\n            reportTitleType.APPLICANTS_DISTRICT_PERFORMANCE\n            ? \"l\"\n            : \"p\",\n      };\n      table && (await generatePDF(reportSettings, table, this.setDownloading));\n    }\n  };\n\n  render() {\n    if (this.state.loading || this.props.periods.allSessionPlans === null) {\n      return (\n        <div className=\"text-center mt-7 font-bold text-4xl text-gray-400 animate-pulse\">\n          Loading data...\n        </div>\n      );\n    }\n\n    if (this.props.periods.allSessionPlans.length === 0) {\n      return <NoSession />;\n    }\n\n    return (\n      <div>\n        <SideNavigation>\n          {FC_HasInstitute(this.props.auth.education_institution_id) ===\n            false && (\n            <div className=\"flex flex-col mb-4\">\n              <span className=\"text-sm text-gray-600 mb-2\">\n                Education categories:\n              </span>\n              {this.props.schoolLevels.education_categories === null ? (\n                <Loading />\n              ) : this.props.schoolLevels.education_categories.length === 0 ? (\n                <span>No result found</span>\n              ) : (\n                this.props.schoolLevels.education_categories.map((item, i) => (\n                  <div\n                    onClick={() => {\n                      this.props.setSelectedEducationCategory(item);\n                      this.FD_GetSessions(item.education_institute_id);\n                      this.updateExamToPrint();\n                    }}\n                    key={i + 1}\n                    className={`border rounded px-2 py-2 mb-2 cursor-pointer ${\n                      this.props.schoolLevels.selectedEducationCategory !==\n                        null &&\n                      this.props.schoolLevels.selectedEducationCategory\n                        .education_institute_id === item.education_institute_id\n                        ? \"bg-blue-600 text-white hover:bg-blue-100 hover:text-blue-600 hover:border-blue-500\"\n                        : \"hover:bg-blue-100 hover:text-blue-600 hover:border-blue-500\"\n                    } font-bold flex flex-row items-center gap-2`}\n                  >\n                    {this.props.schoolLevels.selectedEducationCategory !==\n                      null &&\n                    this.props.schoolLevels.selectedEducationCategory\n                      .education_institute_id ===\n                      item.education_institute_id ? (\n                      <MdRadioButtonChecked />\n                    ) : (\n                      <MdRadioButtonUnchecked />\n                    )}\n                    <span>{item.education_category_title}</span>\n                  </div>\n                ))\n              )}\n            </div>\n          )}\n          <div className=\"\">\n            <div className=\"text-gray-600 text-sm mb-2\">Selected period:</div>\n            <div\n              onClick={() => this.setSelectPeriod(true)}\n              className=\"font-bold bg-blue-50 border border-blue-200 rounded py-2 cursor-pointer text-xs px-2 hover:underline justify-between text-blue-600  mb-4 w-full flex flex-row items-center animate__animated animate__zoomIn\"\n            >\n              {this.state.selected_period !== null\n                ? `${this.state.selected_period.session_plan_name}`\n                : \"Filter by period\"}\n              <FiEdit className=\"text-lg text-blue-600\" />\n            </div>\n          </div>\n          <ExamReportFilters\n            reportTitle={this.state.reportTitle}\n            filterPreparation={this.state.filterPreparation}\n            setFilterPreparation={this.setFilterPreparation}\n            filterExamProgress={this.state.filterExamProgress}\n            setFilterExamProgress={this.setFilterExamProgress}\n            filterApplicantPerformance={this.state.filterApplicantPerformance}\n            setFilterApplicantPerformance={this.setFilterApplicantPerformance}\n          />\n        </SideNavigation>\n\n        {/* --------------------------------------------------------------------- */}\n\n        {/* REPORT TITLE CONTROLLERS ============================================ */}\n        <ExamReportTitle\n          downloading={this.state.downloading}\n          dataToPrint={loadAllExams(\n            this.props.examsList,\n            this.state.selected_period\n          )}\n          downlaodPDF={this.downlaodPDF}\n          reportTitle={this.state.reportTitle}\n          setReportTitle={this.setReportTitle}\n          setGenerateReportModal={this.setGenerateReportModal}\n          generateReportModal={this.state.generateReportModal}\n          excelReportTitle={this.state.excelReportTitle}\n          setExcelReportTitle={this.setExcelReportTitle}\n          updateExamToPrint={this.updateExamToPrint}\n          // EXAM PREPARATION ######################\n          examsToPrint={this.state.examsToPrint}\n          examPreparationReportContent={this.state.examPreparationReportContent}\n          setExamPreparationReportContent={this.setExamPreparationReportContent}\n          // EXAM PERFORMANCE ######################\n          examPerformanceToPrint={this.state.examPerformanceToPrint}\n          examPerformanceReportContent={this.state.examPerformanceReportContent}\n          setExamPerformanceReportContent={this.setExamPerformanceReportContent}\n          // TOP 30 EXAM PERFORMANCE ######################\n          exam30PerformanceToPrint={this.state.exam30PerformanceToPrint}\n          exam30PerformanceReportContent={\n            this.state.exam30PerformanceReportContent\n          }\n          setExam30PerformanceReportContent={\n            this.setExam30PerformanceReportContent\n          }\n          // EXAMINATION PROGRESS ######################\n          examinationProgressToPrint={this.state.examinationProgressToPrint}\n          examinationProgressReportContent={\n            this.state.examinationProgressReportContent\n          }\n          setExaminationProgressExamPerformanceReportContent={\n            this.setExaminationProgressExamPerformanceReportContent\n          }\n          // CANDIDATE EXAM PERFORMANCE ######################\n          candidateExamPerformanceToPrint={\n            this.state.candidateExamPerformanceToPrint\n          }\n          candidateExamPerformanceReportContent={\n            this.state.candidateExamPerformanceReportContent\n          }\n          setCandidateExamPerformanceReportContent={\n            this.setCandidateExamPerformanceReportContent\n          }\n          // CANDIDATE EXAM PERFORMANCE ######################\n          candidate30ExamPerformanceToPrint={\n            this.state.candidate30ExamPerformanceToPrint\n          }\n          candidate30ExamPerformanceReportContent={\n            this.state.candidate30ExamPerformanceReportContent\n          }\n          setCandidate30ExamPerformanceReportContent={\n            this.setCandidate30ExamPerformanceReportContent\n          }\n          thisPeriod={\n            this.state.selected_period ? this.state.selected_period._id : \"\"\n          }\n        />\n\n        {/* --------------------------------------------------------------------- */}\n\n        {/* EXAM LIST CONTROLLERS ============================================ */}\n        {this.state.reportTitle === reportTitleType.EXAM_PREPARATION &&\n          this.props.periods.allSessionPlans && (\n            <ExamList\n              loading={\n                this.state.loadingExams ||\n                this.state.loadingCourses ||\n                this.state.loadingDoneExam\n              }\n              examsListData={loadAllExams(\n                this.props.examsList,\n                this.state.selected_period\n              )}\n              courseListData={this.getCourses()}\n              thisPeriod={this.props.periods.allSessionPlans}\n              filterPreparation={this.state.filterPreparation}\n            />\n          )}\n        {/* EXAM LIST CONTROLLERS ============================================ */}\n\n        {/* --------------------------------------------------------------------- */}\n\n        {/* DONE & REMAING EXAM LIST CONTROLLERS ============================================ */}\n        {this.state.reportTitle === reportTitleType.EXAMINATION_PROGRESS &&\n          this.props.periods.allSessionPlans && (\n            <DoneExamList\n              loading={\n                this.state.loadingExams\n                  ? true\n                  : this.state.loadingCourses\n                  ? true\n                  : this.state.loadingDoneExam\n                  ? true\n                  : false\n              }\n              examsListData={loadAllExams(\n                this.props.examsList,\n                this.state.selected_period\n              )}\n              courseListData={this.getCourses()}\n              thisPeriod={this.props.periods.allSessionPlans}\n              doneExamsData={this.props.adminExamReport.DoneExam}\n              filterExamProgress={this.state.filterExamProgress}\n            />\n          )}\n        {/* DONE & REMAING EXAM LIST CONTROLLERS ============================================ */}\n\n        {/* --------------------------------------------------------------------- */}\n\n        {/* EXAM PERFORMANCE CONTROLLERS ============================================ */}\n        {this.state.reportTitle === reportTitleType.EXAM_PERFORMANCE &&\n          this.props.periods.allSessionPlans && (\n            <ExamPerformance\n              loading={\n                this.state.loadingExams\n                  ? true\n                  : this.state.loadingCourses\n                  ? true\n                  : this.state.loadingExamPerformance\n                  ? true\n                  : false\n              }\n              examsListData={loadAllExams(\n                this.props.examsList,\n                this.state.selected_period\n              )}\n              courseListData={this.getCourses()}\n              thisPeriod={this.props.periods.allSessionPlans}\n              examsPerformanceData={this.props.adminExamReport.ExamPerformance} // doneExamsData={props.adminExamReport.DoneExam}\n            />\n          )}\n        {/* END EXAM PERFORMANCE CONTROLLERS ============================================ */}\n\n        {/* --------------------------------------------------------------------- */}\n\n        {/* EXAM PERFORMANCE PER DISTRICT LIST CONTROLLERS ============================================ */}\n        {this.state.reportTitle === reportTitleType.EXAM_DISTRICT_PERFORMANCE &&\n        this.props.periods.allSessionPlans &&\n        this.props.adminExamReport.reportDistrictId ? (\n          <ExamPerformancePerDistrict\n            loading={\n              this.state.loadingExams\n                ? true\n                : this.state.loadingCourses\n                ? true\n                : this.state.loadingCandidatesExamPerformance\n                ? true\n                : false\n            }\n            examsListData={loadAllExams(\n              this.props.examsList,\n              this.state.selected_period\n            )}\n            doneExamsData={this.props.adminExamReport.DoneExam}\n            courseListData={this.getCourses()}\n            thisPeriod={this.props.periods.allSessionPlans}\n            candidatePerformanceData={\n              this.props.adminExamReport.CandidatesExamPerformance\n            }\n            thisDistrict={this.props.adminExamReport.reportDistrictId}\n          />\n        ) : (\n          this.state.reportTitle ===\n            reportTitleType.EXAM_DISTRICT_PERFORMANCE && (\n            <NoResult\n              theme={NoResultThemes.Light}\n              value={\"Select district to view data\"}\n              component={\n                <div\n                  onClick={() => this.setDistrictModal(true)}\n                  className=\"btn bg-blue-50 border border-blue-300 text-blue-600 cursor-pointer hover:bg-blue-100 flex flex-row items-center justify-center gap-2 text-sm \"\n                >\n                  <BiFilterAlt className=\"text-xl\" />\n                  Filter by district\n                </div>\n              }\n            />\n          )\n        )}\n        {/* EXAM PERFORMANCE PER DISTRICT LIST CONTROLLERS ============================================  */}\n\n        {/* --------------------------------------------------------------------- */}\n\n        {/* APPLICANTS PERFORMANCE EXAM LIST CONTROLLERS ============================================ */}\n        {this.state.reportTitle === reportTitleType.APPLICANTS_PERFORMANCE &&\n          this.props.periods.allSessionPlans && (\n            <CandidatePerformance\n              loading={\n                this.state.loadingExams\n                  ? true\n                  : this.state.loadingCourses\n                  ? true\n                  : this.state.loadingCandidatesExamPerformance\n                  ? true\n                  : false\n              }\n              examsListData={loadAllExams(\n                this.props.examsList,\n                this.state.selected_period\n              )}\n              courseListData={this.getCourses()}\n              thisPeriod={this.props.periods.allSessionPlans}\n              candidatePerformanceData={\n                this.props.adminExamReport.CandidatesExamPerformance\n              }\n              filterApplicantPerformance={this.state.filterApplicantPerformance}\n            />\n          )}\n        {/* APPLICANTS PERFORMANCE EXAM LIST CONTROLLERS ============================================  */}\n\n        {/* --------------------------------------------------------------------- */}\n\n        {/* APPLICANTS PERFORMANCE EXAM PER DISTRICT LIST CONTROLLERS ============================================ */}\n        {this.state.reportTitle ===\n          reportTitleType.APPLICANTS_DISTRICT_PERFORMANCE &&\n          this.props.periods.allSessionPlans && (\n            <CandiadtePerformancePerDistrict\n              loading={\n                this.state.loadingExams\n                  ? true\n                  : this.state.loadingCourses\n                  ? true\n                  : this.state.loadingCandidatesExamPerformance\n                  ? true\n                  : false\n              }\n              examsListData={loadAllExams(\n                this.props.examsList,\n                this.state.selected_period\n              )}\n              courseListData={this.getCourses()}\n              thisPeriod={this.props.periods.allSessionPlans}\n              candidatePerformanceData={\n                this.props.adminExamReport.CandidatesExamPerformance\n              }\n              filterApplicantPerformance={this.state.filterApplicantPerformance}\n            />\n          )}\n        {/* APPLICANTS PERFORMANCE EXAM PER DISTRICT LIST CONTROLLERS ============================================  */}\n\n        {/* --------------------------------------------------------------------- */}\n\n        {/* CHANGE DISTRICT FILTER MODAL CONTROLLERS ============================================ */}\n        {this.state.districtModal && (\n          <ExamReportModals\n            modalFor={ModalForTypes.choose_district}\n            modalState={this.state.districtModal}\n            changeModalState={this.setDistrictModal}\n            districtId={\n              this.props.adminExamReport.reportDistrictId\n                ? this.props.adminExamReport.reportDistrictId.district_id\n                : \"all\"\n            }\n            reportTitle={this.state.reportTitle}\n          />\n        )}\n        {/* END CHANGE DISTRICT FILTER MODAL CONTROLLERS ============================================ */}\n\n        {/* --------------------------------------------------------------------- */}\n\n        {/* MODAL CONTROLLERS ============================================ */}\n        <ExamReportModals\n          modalState={this.state.selectPeriod}\n          changeModalState={this.setSelectPeriod}\n          applicationPeriods={this.props.periods.allSessionPlans}\n          selected_period={this.state.selected_period}\n          setSelectedPeriod={this.setSelectedPeriod}\n          onPeriodChange={this.onPeriodChange}\n          modalFor={ModalForTypes.period}\n        />\n        {/* END MODAL CONTROLLERS ============================================ */}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = ({\n  auth,\n  sessionPlan,\n  schoolLevels,\n  course,\n  prepareExam,\n  adminExamReport,\n}: StoreState): {\n  auth: Auth;\n  periods: SessionPlanReducerInterface;\n  schoolLevels: schoolLevelsStoreInterface;\n  courses: course[] | null;\n  examsList: ExamItemResponse[] | null;\n  adminExamReport: ExamReportReducerType;\n} => {\n  return {\n    auth,\n    periods: sessionPlan,\n    schoolLevels,\n    courses: course.courses,\n    examsList: prepareExam.examsList,\n    adminExamReport,\n  };\n};\n\nexport const ExamReport = connect(mapStateToProps, {\n  setSelectedPeriod,\n  loadCourses,\n  loadExamsList,\n  FC_GetAllSessionByInstitution,\n  loadEducationCategories,\n  loadDoneExam,\n  loadSchoolLevels,\n  loadPerfomranceExam,\n  loadCandidatesExamPerformance,\n  setSelectedEducationCategory,\n  PushPopupAlert,\n})(_ExamReport);\n","import React, { Fragment, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport Loading from \"../../../components/Loading/Loading\";\nimport {\n  course,\n  CandidatesFailedSucceeded,\n  ReportUserExamStatus,\n  SessionPlanInterface,\n} from \"../../../interfaces\";\nimport { ExamItemResponse } from \"../../../interfaces/prepare_exam\";\nimport { StoreState } from \"../../../reducers\";\nimport { ExamReportReducerType } from \"../../../reducers/exam_report\";\nimport { capitalizeFirstLetter } from \"../../../shared/dataTest\";\nimport { DATE, timestampToDate } from \"../../../utils/functions\";\nimport {\n  candidatePerfomranceStateInterface,\n  controlRowsByStatus,\n  FC_reportCandidatePerformanceData,\n  searchCandidatePerformanceData,\n} from \"./CandidatePerformance\";\nimport { displayStatus } from \"./DoneExamList\";\nimport { getPeriodById } from \"./ExamReport\";\n\nexport const FC_CandiadtePerformancePerDistrictFilter = (\n  dataList: candidatePerfomranceStateInterface[],\n  district_id: string | null = null,\n  course_id: string | null = null,\n  thisValue: ReportUserExamStatus | \"all\" = \"all\"\n): candidatePerfomranceStateInterface[] => {\n  let result: candidatePerfomranceStateInterface[] = [];\n  if (thisValue === \"all\") {\n    result = dataList;\n  } else {\n    result = dataList.filter((item) => item.exam_stastus === thisValue);\n  }\n\n  if (district_id) {\n    result = result.filter(\n      (item) =>\n        item.exam.exam_location &&\n        item.exam.exam_location.district_id === district_id\n    );\n  }\n  if (course_id) {\n    result = result.filter((item) => item.course_id === course_id);\n  }\n\n  // SORTING ARRAY FROM MAX TO MIN ==========================\n  let swap: candidatePerfomranceStateInterface;\n  for (let i = 0; i < result.length; i++) {\n    for (let j = i; j < result.length; j++) {\n      if (result[j].user_total_marks > result[i].user_total_marks) {\n        swap = result[j];\n        result[j] = result[i];\n        result[i] = swap;\n      }\n    }\n  }\n  return result;\n};\n\ntype CandiadtePerformancePerDistrictProps = {\n  loading: boolean;\n  examsListData: ExamItemResponse[] | null;\n  courseListData: course[] | null;\n  thisPeriod: SessionPlanInterface[];\n  candidatePerformanceData: CandidatesFailedSucceeded[] | null;\n\n  // redux props ============\n  adminExamReport: ExamReportReducerType;\n  // FOR APPLICANT PERFORMANCE PROPS\n  filterApplicantPerformance: ReportUserExamStatus | \"all\";\n};\n\nconst CandiadtePerformancePerDistrict: React.FC<\n  CandiadtePerformancePerDistrictProps\n> = (props) => {\n  const [searchInput, setSearchInput] = useState<string>(\"\");\n\n  return (\n    <Fragment>\n      <div className=\"bg-white my-4\">\n        <div className=\"w-full px-2 py-2\">\n          <input\n            onChange={(e) => setSearchInput(e.target.value)}\n            type=\"text\"\n            value={searchInput}\n            placeholder=\"Search...\"\n            className=\"w-full bg-gray-100 py-2 px-3 rounded\"\n            disabled={\n              props.courseListData &&\n              props.candidatePerformanceData &&\n              FC_CandiadtePerformancePerDistrictFilter(\n                FC_reportCandidatePerformanceData(\n                  props.courseListData,\n                  props.candidatePerformanceData,\n                  props.adminExamReport.reportCourseId\n                    ? props.adminExamReport.reportCourseId.course_id\n                    : \"all\"\n                ),\n                props.adminExamReport.reportDistrictId\n                  ? props.adminExamReport.reportDistrictId.district_id\n                  : null,\n                props.adminExamReport.reportCourseId\n                  ? props.adminExamReport.reportCourseId.course_id\n                  : null,\n                props.filterApplicantPerformance\n              ).length <= 0\n                ? true\n                : false\n            }\n          />\n        </div>\n        <div className=\"w-full overflow-x-auto\">\n          <table className=\"w-full shadow\" id=\"report_content\">\n            <thead className=\"bg-white border-b-2 border-gray-300 text-gray-600 font-bold text-sm\">\n              <tr>\n                <td className=\"px-2 py-2\">#</td>\n                <td className=\"px-2 py-2\">Applicants</td>\n                <td className=\"px-2 py-2\">National ID</td>\n                <td className=\"px-2 py-2\">Email</td>\n                <td className=\"px-2 py-2\">Phone</td>\n                <td className=\"px-2 py-2\">\n                  <div className=\"flex items-center gap-1\">Exam</div>\n                </td>\n                <td className=\"px-2 py-2\">Exam period</td>\n                <td className=\"px-2 py-2\">Exam date</td>\n                <td className=\"px-2 py-2\">Exam start time</td>\n                <td className=\"px-2 py-2\">Exam end time</td>\n                <td className=\"px-2 py-2\">\n                  <div className=\"flex items-center gap-1\">Marks</div>\n                </td>\n                <td className=\"px-2 py-2\">Status</td>\n              </tr>\n            </thead>\n            <tbody>\n              {props.courseListData === null || props.loading ? (\n                <tr>\n                  <td colSpan={12} className=\"px-2 py-2\">\n                    <Loading />\n                  </td>\n                </tr>\n              ) : props.candidatePerformanceData &&\n                FC_CandiadtePerformancePerDistrictFilter(\n                  FC_reportCandidatePerformanceData(\n                    props.courseListData,\n                    props.candidatePerformanceData,\n                    props.adminExamReport.reportCourseId\n                      ? props.adminExamReport.reportCourseId.course_id\n                      : \"all\"\n                  ),\n                  props.adminExamReport.reportDistrictId\n                    ? props.adminExamReport.reportDistrictId.district_id\n                    : null,\n                  props.adminExamReport.reportCourseId\n                    ? props.adminExamReport.reportCourseId.course_id\n                    : null,\n                  props.filterApplicantPerformance\n                ).length <= 0 ? (\n                <tr>\n                  <td colSpan={12} className=\"px-2 py-2 text-center\">\n                    No applicant list available!\n                  </td>\n                </tr>\n              ) : (\n                props.candidatePerformanceData &&\n                searchCandidatePerformanceData(\n                  FC_CandiadtePerformancePerDistrictFilter(\n                    FC_reportCandidatePerformanceData(\n                      props.courseListData,\n                      props.candidatePerformanceData,\n                      props.adminExamReport.reportCourseId\n                        ? props.adminExamReport.reportCourseId.course_id\n                        : \"all\"\n                    ),\n                    props.adminExamReport.reportDistrictId\n                      ? props.adminExamReport.reportDistrictId.district_id\n                      : null,\n                    props.adminExamReport.reportCourseId\n                      ? props.adminExamReport.reportCourseId.course_id\n                      : null,\n                    props.filterApplicantPerformance\n                  ).slice(0, 30),\n                  searchInput\n                ).map((item, i) => (\n                  <tr\n                    key={i + 1}\n                    className={`${controlRowsByStatus(\n                      item.exam_stastus\n                    )} text-gray-600 hover:bg-blue-100 hover:text-blue-700 text-sm`}\n                  >\n                    <td className=\"px-2 py-2\">{i + 1}</td>\n                    <td className=\"px-2 py-2\">\n                      {capitalizeFirstLetter(item.user_name)}\n                    </td>\n                    <td className=\"px-2 py-2\">{item.national_id}</td>\n                    <td className=\"px-2 py-2\">{item.user_email}</td>\n                    <td className=\"px-2 py-2\">{item.user_phone}</td>\n                    <td className=\"px-2 py-2\">\n                      {capitalizeFirstLetter(item.course_name)} (\n                      <span className=\"font-semibold\">{item.course_code}</span>)\n                    </td>\n                    <td className=\"px-2 py-2\">\n                      {item.exam\n                        ? getPeriodById(props.thisPeriod, item.exam.period)\n                          ? getPeriodById(props.thisPeriod, item.exam.period)!\n                              .session_plan_name\n                          : \"-\"\n                        : \"-\"}\n                    </td>\n                    <td className=\"px-2 py-2\">\n                      {item.exam.exam_date ? DATE(item.exam.exam_date) : \"-\"}\n                    </td>\n                    <td className=\"px-2 py-2\">\n                      {item.exam.start_time\n                        ? timestampToDate(item.exam.start_time).timeAMPM\n                        : \"-\"}\n                    </td>\n                    <td className=\"px-2 py-2\">\n                      {item.exam.end_time\n                        ? timestampToDate(item.exam.end_time).timeAMPM\n                        : \"-\"}\n                    </td>\n                    <td className=\"px-2 py-2\">\n                      {item.exam_stastus !== ReportUserExamStatus.Editing\n                        ? Number(item.user_total_marks.toFixed(1)) + \"%\"\n                        : \"-\"}\n                    </td>\n                    <td className=\"px-2 py-2\">\n                      {capitalizeFirstLetter(displayStatus(item.exam_stastus))}\n                    </td>\n                  </tr>\n                ))\n              )}\n            </tbody>\n          </table>\n        </div>\n      </div>\n    </Fragment>\n  );\n};\n\nconst mapStateToProps = ({\n  adminExamReport,\n}: StoreState): {\n  adminExamReport: ExamReportReducerType;\n} => {\n  return {\n    adminExamReport,\n  };\n};\n\nexport default React.memo(\n  connect(mapStateToProps, {})(CandiadtePerformancePerDistrict)\n);\n","import React, { Fragment, useState } from \"react\";\nimport { connect } from \"react-redux\";\n// import { BiSort } from \"react-icons/bi\";\nimport Loading from \"../../../components/Loading/Loading\";\nimport NoResult, {\n  NoResultThemes,\n} from \"../../../components/NoResult/NoResult\";\nimport {\n  course,\n  CandidatesFailedSucceeded,\n  ExamDoneAndRemainingByPeriodInterface,\n  ReportUserExamStatus,\n  SessionPlanInterface,\n} from \"../../../interfaces\";\nimport { ExamItemResponse } from \"../../../interfaces/prepare_exam\";\nimport { StoreState } from \"../../../reducers\";\nimport { ExamReportReducerType } from \"../../../reducers/exam_report\";\nimport { capitalizeFirstLetter } from \"../../../shared/dataTest\";\nimport { DATE } from \"../../../utils/functions\";\nimport search from \"../../../utils/search\";\nimport { getPeriodById } from \"./ExamReport\";\n\nexport interface examPerformanceStateInterface {\n  course_name: string;\n  course_code: string;\n  description: string;\n  school_levels: string[];\n  applicants: number;\n  course_id: string;\n  pass_applicant: number;\n  failed_applicant: number;\n  exam: ExamItemResponse;\n  user_total_marks: number;\n}\n\nexport const FC_ExamPerformancePerDistrictPropsData = (\n  allCourses: course[],\n  allExams: ExamItemResponse[],\n  examsData: ExamDoneAndRemainingByPeriodInterface[],\n  candidatePerformanceData: CandidatesFailedSucceeded[],\n  district_id: string\n): examPerformanceStateInterface[] => {\n  let pass: number = 0,\n    failed: number = 0,\n    result: examPerformanceStateInterface[] = [],\n    ids: string[] = [],\n    exam_ids: string[] = [],\n    doneExamsData: ExamDoneAndRemainingByPeriodInterface[] = examsData.filter(\n      (item) => item.exam_status.toLocaleLowerCase() === \"done\"\n    );\n\n  for (const key in doneExamsData) {\n    if (Object.prototype.hasOwnProperty.call(doneExamsData, key)) {\n      if (exam_ids.includes(doneExamsData[key].id)) continue;\n      exam_ids.push(doneExamsData[key].id);\n      let courser = allCourses.find(\n        (item) => item.course_id === doneExamsData[key].course\n      );\n      let _marks: number = 0;\n\n      if (courser) {\n        // CALCURATING SUM OF ALL CANDIDATES MARKS BY EXAM ID=================================\n        let candidatesByExam: CandidatesFailedSucceeded[] =\n          candidatePerformanceData.filter(\n            (item) =>\n              item.course === doneExamsData[key].course &&\n              item.exam_location &&\n              item.exam_location.district_id === district_id\n          );\n        for (const _key in candidatesByExam) {\n          if (Object.prototype.hasOwnProperty.call(candidatesByExam, _key)) {\n            if (ids.includes(candidatesByExam[_key].user.user_id)) continue;\n            ids.push(candidatesByExam[_key].user.user_id);\n            _marks += candidatesByExam[_key].total_marks;\n            if (\n              candidatesByExam[_key].user_status !==\n                ReportUserExamStatus.Editing &&\n              candidatesByExam[_key].total_marks >= 50\n            ) {\n              pass += 1;\n            } else if (\n              candidatesByExam[_key].user_status !==\n              ReportUserExamStatus.Editing\n            ) {\n              failed += 1;\n            }\n          }\n        }\n        let exam = allExams.find(\n          (item) =>\n            item.course === doneExamsData[key].course &&\n            item.period === doneExamsData[key].period\n        );\n        if (exam) {\n          result.push({\n            course_name: courser.course_name,\n            course_code: courser.course_code,\n            description: courser.description,\n            school_levels: courser.school_levels,\n            course_id: courser.course_id,\n            exam: exam,\n            pass_applicant: pass,\n            failed_applicant: failed,\n            applicants: ids.length,\n            user_total_marks: _marks ? _marks / ids.length : _marks, //candidatesByExam.length\n          });\n        }\n        _marks = 0;\n        ids = [];\n      }\n    }\n    exam_ids = [];\n  }\n\n  // SORTING ARRAY FROM MAX TO MIN ==========================\n  let swap: examPerformanceStateInterface;\n  for (let i = 0; i < result.length; i++) {\n    for (let j = i; j < result.length; j++) {\n      if (result[j].user_total_marks > result[i].user_total_marks) {\n        swap = result[j];\n        result[j] = result[i];\n        result[i] = swap;\n      }\n    }\n  }\n  return result;\n};\n\ntype ExamPerformancePerDistrictProps = {\n  loading: boolean;\n  examsListData: ExamItemResponse[] | null;\n  doneExamsData: ExamDoneAndRemainingByPeriodInterface[] | null;\n  courseListData: course[] | null;\n  thisPeriod: SessionPlanInterface[];\n  candidatePerformanceData: CandidatesFailedSucceeded[] | null;\n  thisDistrict: { district_id: string; district_name: string };\n  adminExamReport: ExamReportReducerType;\n};\n\nconst ExamPerformancePerDistrict: React.FC<ExamPerformancePerDistrictProps> = (\n  props\n) => {\n  const [searchInput, setSearchInput] = useState<string>(\"\");\n\n  return (\n    <Fragment>\n      <div className=\"bg-white my-4 max-w-full overflow-x-auto\">\n        <div className=\"w-full px-2 py-2\">\n          <input\n            onChange={(e) => setSearchInput(e.target.value)}\n            type=\"text\"\n            value={searchInput}\n            placeholder=\"Search...\"\n            className=\"w-full bg-gray-100 py-2 px-3 rounded\"\n            disabled={\n              props.courseListData &&\n              props.examsListData &&\n              props.doneExamsData &&\n              props.candidatePerformanceData &&\n              props.adminExamReport.reportDistrictId &&\n              FC_ExamPerformancePerDistrictPropsData(\n                props.courseListData,\n                props.examsListData,\n                props.doneExamsData,\n                props.candidatePerformanceData,\n                props.adminExamReport.reportDistrictId.district_id\n              ).slice(0, 30).length <= 0\n                ? true\n                : false\n            }\n          />\n        </div>\n        <table className=\"w-full shadow\" id=\"report_content\">\n          <thead className=\"bg-white border-b-2 border-gray-300 text-gray-600 font-bold text-sm\">\n            <tr>\n              <td className=\"px-2 py-2\">#</td>\n              <td\n                className=\"px-2 py-2 cursor-pointer\"\n                // onClick={() => setSort(\"course_name\")}\n              >\n                <div className=\"flex items-center gap-1\">\n                  Course\n                  {/* <BiSort /> */}\n                </div>\n              </td>\n              <td className=\"px-2 py-2\">Exam date</td>\n              <td className=\"px-2 py-2\">Exam time</td>\n              <td className=\"px-2 py-2\">Exam duration</td>\n              <td className=\"px-2 py-2\">Exam Period</td>\n              <td className=\"px-2 py-2\">Pass Applicants</td>\n              <td className=\"px-2 py-2\">Failed Applicants</td>\n              <td\n                className=\"px-2 py-2 cursor-pointer\"\n                // onClick={() => setSort(\"user_total_marks\")}\n              >\n                <div className=\"flex items-center gap-1\">\n                  Percentage\n                  {/* <BiSort /> */}\n                </div>\n              </td>\n            </tr>\n          </thead>\n          <tbody>\n            {props.courseListData === null || props.loading ? (\n              <tr>\n                <td colSpan={9} className=\"px-2 py-2\">\n                  <Loading />\n                </td>\n              </tr>\n            ) : props.examsListData &&\n              props.doneExamsData &&\n              props.candidatePerformanceData &&\n              props.adminExamReport.reportDistrictId &&\n              FC_ExamPerformancePerDistrictPropsData(\n                props.courseListData,\n                props.examsListData,\n                props.doneExamsData,\n                props.candidatePerformanceData,\n                props.adminExamReport.reportDistrictId.district_id\n              ).length <= 0 ? (\n              <tr>\n                <td colSpan={9} className=\"px-2 py-2 text-center\">\n                  <NoResult\n                    theme={NoResultThemes.Dark}\n                    value={\"No Exam list available!ss\"}\n                  />\n                </td>\n              </tr>\n            ) : (\n              props.examsListData &&\n              props.doneExamsData &&\n              props.candidatePerformanceData &&\n              props.adminExamReport.reportDistrictId &&\n              search(\n                FC_ExamPerformancePerDistrictPropsData(\n                  props.courseListData,\n                  props.examsListData,\n                  props.doneExamsData,\n                  props.candidatePerformanceData,\n                  props.adminExamReport.reportDistrictId.district_id\n                ).slice(0, 30),\n                searchInput\n              ).map((item: examPerformanceStateInterface, i) => (\n                <tr\n                  key={i + 1}\n                  className={`bg-white text-gray-600 hover:bg-blue-100 hover:text-blue-700 border-b border-gray-300 hover:border-blue-500 text-sm`}\n                >\n                  <td className=\"px-2 py-2\">{i + 1}</td>\n                  <td className=\"px-2 py-2\">\n                    {capitalizeFirstLetter(item.course_name)} (\n                    <span className=\"font-semibold\">{item.course_code}</span>)\n                  </td>\n                  <td className=\"px-2 py-2\">\n                    {item.exam ? DATE(item.exam.exam_date) : \"-\"}\n                  </td>\n                  <td className=\"px-2 py-2\">\n                    {item.exam ? item.exam.start_time : \"-\"}\n                  </td>\n                  <td className=\"px-2 py-2\">\n                    {item.exam ? item.exam!.duration + \" min\" : \"-\"}\n                  </td>\n                  <td className=\"px-2 py-2\">\n                    {item.exam\n                      ? getPeriodById(props.thisPeriod, item.exam.period)\n                        ? getPeriodById(props.thisPeriod, item.exam.period)!\n                            .session_plan_name\n                        : \"-\"\n                      : \"-\"}\n                  </td>\n                  <td className=\"px-2 py-2\">\n                    {item.pass_applicant !== undefined\n                      ? item.pass_applicant\n                      : \"-\"}\n                  </td>\n                  <td className=\"px-2 py-2\">\n                    {item.failed_applicant !== undefined\n                      ? item.failed_applicant\n                      : \"-\"}\n                  </td>\n                  <td className=\"px-2 py-2\">\n                    {Number(item.user_total_marks.toFixed(1)) + \"%\"}\n                  </td>\n                </tr>\n              ))\n            )}\n          </tbody>\n        </table>\n      </div>\n    </Fragment>\n  );\n};\n\nconst mapStateToProps = ({\n  adminExamReport,\n}: StoreState): {\n  adminExamReport: ExamReportReducerType;\n} => {\n  return {\n    adminExamReport,\n  };\n};\n\nexport default React.memo(\n  connect(mapStateToProps, {})(ExamPerformancePerDistrict)\n);\n","import React, { Fragment } from \"react\";\nimport { MainItem } from \"../../../components/Navigation/SideNavigation\";\nimport { ReportUserExamStatus } from \"../../../interfaces\";\nimport { displayStatus } from \"./DoneExamList\";\nimport { reportTitleType } from \"./ExamReport\";\n\ntype ExamReportFiltersProps = {\n  reportTitle: reportTitleType;\n\n  // FOR EXAM PREPARATION PROPS =========================================\n  filterPreparation: \"prepared\" | \"not prepared\" | \"all\";\n  setFilterPreparation: (value: \"prepared\" | \"not prepared\" | \"all\") => void;\n\n  // FOR EXAMINATION PROGRESS PROPS ========================================\n  filterExamProgress: \"all\" | \"Done\" | \"Active\";\n  setFilterExamProgress: (value: \"all\" | \"Done\" | \"Active\") => void;\n\n  // FOR APPLICANT PERFORMANCE PROPS\n  filterApplicantPerformance: ReportUserExamStatus | \"all\";\n  setFilterApplicantPerformance: (value: \"all\" | ReportUserExamStatus) => void;\n};\nconst ExamReportFilters: React.FC<ExamReportFiltersProps> = (props) => {\n  return (\n    <Fragment>\n      {props.reportTitle !== reportTitleType.EXAM_PERFORMANCE &&\n        props.reportTitle !== reportTitleType.EXAM_DISTRICT_PERFORMANCE && (\n          <div className=\"pt-1\">\n            <div className=\"text-sm text-gray-700 pb-2 pt-2\">\n              Filter by statuses:\n            </div>\n            {/* FILTER OF EXAM PREPARATION ================================ */}\n            {props.reportTitle === reportTitleType.EXAM_PREPARATION && (\n              <section>\n                <div onClick={() => props.setFilterPreparation(\"all\")}>\n                  <MainItem\n                    title=\"All\"\n                    count={0}\n                    active={props.filterPreparation === \"all\"}\n                  />\n                </div>\n                <div onClick={() => props.setFilterPreparation(\"prepared\")}>\n                  <MainItem\n                    title=\"Prepared\"\n                    count={0}\n                    active={props.filterPreparation === \"prepared\"}\n                  />\n                </div>\n                <div onClick={() => props.setFilterPreparation(\"not prepared\")}>\n                  <MainItem\n                    title=\"Not Prepared\"\n                    count={0}\n                    active={props.filterPreparation === \"not prepared\"}\n                  />\n                </div>\n              </section>\n            )}\n            {/* END FILTER OF EXAM PREPARATION ================================ */}\n\n            {/* FILTER OF EXAMINATION PROGRESS ================================ */}\n            {props.reportTitle === reportTitleType.EXAMINATION_PROGRESS && (\n              <section>\n                <div onClick={() => props.setFilterExamProgress(\"all\")}>\n                  <MainItem\n                    title=\"All\"\n                    count={0}\n                    active={props.filterExamProgress === \"all\"}\n                  />\n                </div>\n                <div onClick={() => props.setFilterExamProgress(\"Done\")}>\n                  <MainItem\n                    title=\"Completed exam\"\n                    count={0}\n                    active={props.filterExamProgress === \"Done\"}\n                  />\n                </div>\n                <div onClick={() => props.setFilterExamProgress(\"Active\")}>\n                  <MainItem\n                    title=\"Remaining Exam\"\n                    count={0}\n                    active={props.filterExamProgress === \"Active\"}\n                  />\n                </div>\n              </section>\n            )}\n            {/* END FILTER OF EXAMINATION PROGRESS ================================ */}\n\n            {/* FILTER OF APPLICANTS PERFORMANCE ================================ */}\n            {(props.reportTitle === reportTitleType.APPLICANTS_PERFORMANCE ||\n              props.reportTitle ===\n                reportTitleType.APPLICANTS_DISTRICT_PERFORMANCE) && (\n              <section>\n                <div onClick={() => props.setFilterApplicantPerformance(\"all\")}>\n                  <MainItem\n                    title=\"All\"\n                    count={0}\n                    active={props.filterApplicantPerformance === \"all\"}\n                  />\n                </div>\n\n                {Object.values(ReportUserExamStatus).map((item, index) => (\n                  <div\n                    onClick={() => props.setFilterApplicantPerformance(item)}\n                    key={index + item}\n                  >\n                    <MainItem\n                      title={displayStatus(item)}\n                      count={0}\n                      active={props.filterApplicantPerformance === item}\n                    />\n                  </div>\n                ))}\n              </section>\n            )}\n            {/* END FILTER OF APPLICANTS PERFORMANCE ================================ */}\n          </div>\n        )}\n    </Fragment>\n  );\n};\n\nexport default React.memo(ExamReportFilters);\n","import React, { Fragment, useEffect, useState } from \"react\";\nimport { BiExport, BiFilterAlt } from \"react-icons/bi\";\nimport { FaEdit } from \"react-icons/fa\";\nimport { connect } from \"react-redux\";\nimport {\n  schoolLevelsStoreInterface,\n  SetReportDistrictId,\n  SetReportDistrictIdAction,\n} from \"../../../actions\";\nimport { course } from \"../../../interfaces/index\";\nimport { ExamItemResponse } from \"../../../interfaces/prepare_exam\";\nimport { StoreState } from \"../../../reducers\";\nimport { ExamReportReducerType } from \"../../../reducers/exam_report\";\nimport { loadExaminationProgress } from \"../../AdminDashboard/ExamDashboard/ExamDashboard\";\nimport {\n  CandidateExamPerformanceReportContentInterface,\n  CandidateExamPerformanceToPrintInterface,\n} from \"./CandidatePerformance\";\nimport {\n  ExaminationProgressReportContentInterface,\n  ExaminationProgressToPrintInterface,\n} from \"./DoneExamList\";\nimport {\n  examPreparationReportContentInterface,\n  ExamPreparationToPrintInterface,\n} from \"./ExamList\";\nimport {\n  ExamPerformanceToPrintInterface,\n  examPerformanceReportContentInterface,\n} from \"./ExamPerformance\";\nimport { reportTitleType } from \"./ExamReport\";\nimport ExamReportModals, { ModalForTypes } from \"./ExamReportModals\";\n\ntype ExamReportTitleProps = {\n  thisPeriod: string;\n  // FOR PRINT PDF =========================\n  downloading: boolean;\n  dataToPrint: any[] | null;\n  downlaodPDF: () => Promise<false | undefined>;\n  // FOR REPORT TYPE =========================\n  reportTitle: reportTitleType;\n  setReportTitle: (title: reportTitleType) => void;\n  // FOR GENERATE EXCEL =========================\n  generateReportModal: {\n    reportType: \"EXCEL\" | \"PDF\";\n    status: boolean;\n  } | null;\n  setGenerateReportModal: (\n    reportData: {\n      reportType: \"EXCEL\" | \"PDF\";\n      status: boolean;\n    } | null\n  ) => void;\n  excelReportTitle: string;\n  setExcelReportTitle: (title: string) => void;\n  updateExamToPrint: () => void;\n  // FOR EXCEL EXAM PREPARATION REPORT CONTENT ===============================\n  examPreparationReportContent: examPreparationReportContentInterface[];\n  setExamPreparationReportContent: (\n    content: examPreparationReportContentInterface[]\n  ) => void;\n  examsToPrint:\n    | ExamPreparationToPrintInterface[]\n    | ExamPerformanceToPrintInterface[]\n    | null;\n  // FOR EXCEL EXAM PERFORMANCE REPORT CONTENT ===============================\n  examPerformanceToPrint: ExamPerformanceToPrintInterface[] | null;\n  examPerformanceReportContent: examPerformanceReportContentInterface[];\n  setExamPerformanceReportContent: (\n    value: examPerformanceReportContentInterface[]\n  ) => void;\n\n  // FOR EXCEL TOP 30 EXAM PERFORMANCE REPORT CONTENT ===============================\n  exam30PerformanceToPrint: ExamPerformanceToPrintInterface[] | null;\n  exam30PerformanceReportContent: examPerformanceReportContentInterface[];\n  setExam30PerformanceReportContent: (\n    value: examPerformanceReportContentInterface[]\n  ) => void;\n\n  // FOR EXCEL EXAMINATION PROGRESS REPORT CONTENT ===============================\n  examinationProgressToPrint: ExaminationProgressToPrintInterface[] | null;\n  examinationProgressReportContent: ExaminationProgressReportContentInterface[];\n  setExaminationProgressExamPerformanceReportContent: (\n    value: ExaminationProgressReportContentInterface[]\n  ) => void;\n\n  // FOR EXCEL CANDIDATE EXAM PERFORMANCE REPORT CONTENT ===============================\n  candidateExamPerformanceToPrint:\n    | CandidateExamPerformanceToPrintInterface[]\n    | null;\n  candidateExamPerformanceReportContent: CandidateExamPerformanceReportContentInterface[];\n  setCandidateExamPerformanceReportContent: (\n    value: CandidateExamPerformanceReportContentInterface[]\n  ) => void;\n\n  // FOR EXCEL TOP 30 CANDIDATE EXAM PERFORMANCE REPORT CONTENT ===============================\n  candidate30ExamPerformanceToPrint:\n    | CandidateExamPerformanceToPrintInterface[]\n    | null;\n  candidate30ExamPerformanceReportContent: CandidateExamPerformanceReportContentInterface[];\n  setCandidate30ExamPerformanceReportContent: (\n    value: CandidateExamPerformanceReportContentInterface[]\n  ) => void;\n\n  // FOR CHOOSING LOCATION ===========================\n  adminExamReport: ExamReportReducerType;\n  SetReportDistrictId: (\n    data: {\n      district_id: string;\n      district_name: string;\n    } | null\n  ) => SetReportDistrictIdAction;\n\n  // FROM REDUX =================\n  schoolLevels: schoolLevelsStoreInterface;\n  courses: course[] | null;\n  examsList: ExamItemResponse[] | null;\n};\n\nconst ExamReportTitle: React.FC<ExamReportTitleProps> = (props) => {\n  const [changeReport, setChangeReport] = useState<boolean>(false);\n  const [districtModal, setDistrictModal] = useState<boolean>(false);\n  const [excelModal, setExcelModal] = useState<boolean>(false);\n  const [courseModal, setCourseModal] = useState<boolean>(false);\n\n  useEffect(() => {\n    if (\n      props.reportTitle === reportTitleType.EXAM_DISTRICT_PERFORMANCE &&\n      props.adminExamReport.reportDistrictId === null\n    ) {\n      setDistrictModal(true);\n    }\n    if (\n      props.reportTitle === reportTitleType.EXAM_DISTRICT_PERFORMANCE &&\n      props.adminExamReport.reportDistrictId !== null\n    ) {\n      setDistrictModal(false);\n    }\n  }, [props.adminExamReport.reportDistrictId, props.reportTitle]);\n\n  return (\n    <Fragment>\n      <div className=\"grid md:grid-cols-12 items-center\">\n        <div className=\"col-span-1 md:col-span-8\">\n          <div className=\"mt-4 mx-4 flex flex-col gap-1\">\n            <span className=\"text-xl font-bold text-gray-700\">Exam Report</span>\n            <div\n              className=\"flex flex-row gap-2 items-end cursor-pointer\"\n              onClick={() => setChangeReport(true)}\n            >\n              <span className=\"text-gray-500 text-xl\">Report type: </span>\n              <span className=\"text-blue-600 text-3xl font-bold underline\">\n                {props.reportTitle}{\" \"}\n                {props.reportTitle ===\n                  reportTitleType.EXAM_DISTRICT_PERFORMANCE &&\n                props.adminExamReport.reportDistrictId\n                  ? props.adminExamReport.reportDistrictId.district_name\n                  : \"\"}\n              </span>\n            </div>\n            {(props.reportTitle === reportTitleType.EXAM_DISTRICT_PERFORMANCE ||\n              props.reportTitle ===\n                reportTitleType.APPLICANTS_DISTRICT_PERFORMANCE ||\n              props.reportTitle === reportTitleType.APPLICANTS_PERFORMANCE) && (\n              <div className=\"flex flex-wrap justify-starts items-center text-xs text-gray-800 font-medium gap-1 my-1\">\n                <span className=\"text-gray-500\">Filter result: </span>\n                {props.adminExamReport.reportDistrictId &&\n                (props.reportTitle ===\n                  reportTitleType.APPLICANTS_DISTRICT_PERFORMANCE ||\n                  props.reportTitle ===\n                    reportTitleType.EXAM_DISTRICT_PERFORMANCE) ? (\n                  <span className=\"px-2 py-1 rounded bg-gray-300\">\n                    # {props.adminExamReport.reportDistrictId.district_name}\n                  </span>\n                ) : (\n                  <span className=\"px-2 py-1 rounded bg-gray-300\">\n                    # All district\n                  </span>\n                )}\n                {props.adminExamReport.reportCourseId ? (\n                  props.reportTitle ===\n                    reportTitleType.APPLICANTS_DISTRICT_PERFORMANCE && (\n                    <span className=\"px-2 py-1 rounded bg-gray-300\">\n                      #\n                      {props.adminExamReport.reportCourseId.course_name +\n                        \" (\" +\n                        props.adminExamReport.reportCourseId.course_code +\n                        \")\"}\n                    </span>\n                  )\n                ) : (\n                  <span className=\"px-2 py-1 rounded bg-gray-300\">\n                    # All exams\n                  </span>\n                )}\n              </div>\n            )}\n          </div>\n        </div>\n        <div className=\"col-span-1 md:col-span-4\">\n          <div className=\"float-right mt-3\">\n            {props.dataToPrint && props.dataToPrint.length > 0 && (\n              <div className=\"flex flex-row items-center justify-end font-bold mb-2\">\n                <BiExport className=\"text-2xl text-gray-500\" />\n                <span className=\"text-gray-500\">Export as</span>\n                <button\n                  className={`px-4 py-1 ml-1 rounded bg-white border hover:text-blue-600 font-bold hover:bg-blue-50 border-gray-200 focus:outline-none`}\n                  // disabled={\n                  //   props.examsToPrint && props.examsToPrint.length <= 0\n                  //     ? true\n                  //     : false\n                  // }\n                  onClick={() => {\n                    props.updateExamToPrint();\n                    setExcelModal(true);\n                    props.setGenerateReportModal({\n                      reportType: \"EXCEL\",\n                      status: true,\n                    });\n                  }}\n                >\n                  EXCEL\n                </button>\n                <button\n                  className={`px-4 py-1 ml-1 rounded bg-white border hover:text-blue-600 font-bold hover:bg-blue-50 border-gray-200 focus:outline-none ${\n                    props.downloading && \"cursor-wait\"\n                  }`}\n                  onClick={() => props.downlaodPDF()}\n                  disabled={props.downloading}\n                >\n                  PDF\n                </button>\n              </div>\n            )}\n\n            <div>\n              <div\n                onClick={() => setChangeReport(true)}\n                className=\"bg-blue-50 py-2 px-2 border border-blue-300 text-blue-600 font-medium hover:bg-blue-100 flex flex-row items-center justify-center gap-2 text-sm float-right\"\n              >\n                <FaEdit className=\"text-xl\" />\n                Change Report\n              </div>\n            </div>\n\n            <section className=\"flex items-center gap-1 float-right mt-1\">\n              {(props.reportTitle ===\n                reportTitleType.EXAM_DISTRICT_PERFORMANCE ||\n                props.reportTitle ===\n                  reportTitleType.APPLICANTS_DISTRICT_PERFORMANCE) && (\n                <div\n                  onClick={() => setDistrictModal(true)}\n                  className=\"btn bg-blue-50 border border-blue-300 text-blue-600 cursor-pointer hover:bg-blue-100 flex flex-row items-center justify-center gap-2 text-sm \"\n                >\n                  <BiFilterAlt className=\"text-xl\" />\n                  Filter by district\n                </div>\n              )}\n              {(props.reportTitle === reportTitleType.APPLICANTS_PERFORMANCE ||\n                props.reportTitle ===\n                  reportTitleType.APPLICANTS_DISTRICT_PERFORMANCE) && (\n                <div\n                  onClick={() => setCourseModal(true)}\n                  className=\"btn bg-blue-50 border border-blue-300 text-blue-600 cursor-pointer hover:bg-blue-100 flex flex-row items-center justify-center gap-2 text-sm \"\n                >\n                  <BiFilterAlt className=\"text-xl\" />\n                  Filter by exam\n                </div>\n              )}\n            </section>\n          </div>\n        </div>\n      </div>\n\n      {/* GENERATE EXCEL MODAL CONTROLLERS ============================================ */}\n      {excelModal && (\n        <ExamReportModals\n          modalFor={ModalForTypes.generateReportModal}\n          modalState={excelModal}\n          changeModalState={setExcelModal}\n          reportTitle={props.reportTitle}\n          setGenerateReportModal={props.setGenerateReportModal}\n          excelReportTitle={props.excelReportTitle}\n          setExcelReportTitle={props.setExcelReportTitle}\n          updateExamToPrint={props.updateExamToPrint}\n          generateReportModal={props.generateReportModal}\n          // EXAM PREPARATION ######################\n          examsToPrint={props.examsToPrint}\n          examPreparationReportContent={props.examPreparationReportContent}\n          setExamPreparationReportContent={\n            props.setExamPreparationReportContent\n          }\n          // EXAM PERFORMANCE ######################\n          examPerformanceToPrint={props.examPerformanceToPrint}\n          examPerformanceReportContent={props.examPerformanceReportContent}\n          setExamPerformanceReportContent={\n            props.setExamPerformanceReportContent\n          }\n          // TOP 30 EXAM PERFORMANCE ######################\n          exam30PerformanceToPrint={props.exam30PerformanceToPrint}\n          exam30PerformanceReportContent={props.exam30PerformanceReportContent}\n          setExam30PerformanceReportContent={\n            props.setExam30PerformanceReportContent\n          }\n          // EXAMINATION PROGRESS ######################\n          examinationProgressToPrint={props.examinationProgressToPrint}\n          examinationProgressReportContent={\n            props.examinationProgressReportContent\n          }\n          setExaminationProgressExamPerformanceReportContent={\n            props.setExaminationProgressExamPerformanceReportContent\n          }\n          // CANDIDATE EXAM PERFORMANCE ######################\n          candidateExamPerformanceToPrint={\n            props.candidateExamPerformanceToPrint\n          }\n          candidateExamPerformanceReportContent={\n            props.candidateExamPerformanceReportContent\n          }\n          setCandidateExamPerformanceReportContent={\n            props.setCandidateExamPerformanceReportContent\n          }\n          candidate30ExamPerformanceToPrint={\n            props.candidate30ExamPerformanceToPrint\n          }\n          candidate30ExamPerformanceReportContent={\n            props.candidate30ExamPerformanceReportContent\n          }\n          setCandidate30ExamPerformanceReportContent={\n            props.setCandidate30ExamPerformanceReportContent\n          }\n        />\n      )}\n      {/* END GENERATE EXCEL MODAL CONTROLLERS ============================================ */}\n\n      {/* CHANGE REPORT TYPE MODAL CONTROLLERS ============================================ */}\n      {changeReport && (\n        <ExamReportModals\n          modalFor={ModalForTypes.title}\n          modalState={changeReport}\n          reportTitle={props.reportTitle}\n          changeModalState={setChangeReport}\n          setReportTitle={props.setReportTitle}\n          setExcelReportTitle={props.setExcelReportTitle}\n        />\n      )}\n      {/* END CHANGE REPORT TYPE MODAL CONTROLLERS ============================================ */}\n\n      {/* CHANGE DISTRICT FILTER MODAL CONTROLLERS ============================================ */}\n      {districtModal && (\n        <ExamReportModals\n          modalFor={ModalForTypes.choose_district}\n          modalState={districtModal}\n          changeModalState={setDistrictModal}\n          districtId={\n            props.adminExamReport.reportDistrictId\n              ? props.adminExamReport.reportDistrictId.district_id\n              : \"all\"\n          }\n          reportTitle={props.reportTitle}\n        />\n      )}\n      {/* END CHANGE DISTRICT FILTER MODAL CONTROLLERS ============================================ */}\n\n      {/* CHANGE COURSE FILTER MODAL CONTROLLERS ============================================ */}\n      {courseModal &&\n        loadExaminationProgress(\n          props.adminExamReport.DoneExam,\n          props.examsList,\n          props.schoolLevels.selectedEducationCategory,\n          props.courses,\n          props.schoolLevels.school_levels,\n          props.thisPeriod\n        ) && (\n          <ExamReportModals\n            modalFor={ModalForTypes.choose_exam}\n            modalState={courseModal}\n            AllExamData={\n              loadExaminationProgress(\n                props.adminExamReport.DoneExam,\n                props.examsList,\n                props.schoolLevels.selectedEducationCategory,\n                props.courses,\n                props.schoolLevels.school_levels,\n                props.thisPeriod\n              )!.finished\n            }\n            changeModalState={setCourseModal}\n            thisExam={props.adminExamReport.reportCourseId}\n          />\n        )}\n      {/* END CHANGE COURSE FILTER MODAL CONTROLLERS ============================================ */}\n    </Fragment>\n  );\n};\n\nconst mapStateToProps = ({\n  adminExamReport,\n  schoolLevels,\n  course,\n  prepareExam,\n}: StoreState): {\n  schoolLevels: schoolLevelsStoreInterface;\n  courses: course[] | null;\n  examsList: ExamItemResponse[] | null;\n  adminExamReport: ExamReportReducerType;\n} => {\n  return {\n    schoolLevels,\n    courses: course.courses,\n    examsList: prepareExam.examsList,\n    adminExamReport,\n  };\n};\n\nexport default React.memo(\n  connect(mapStateToProps, { SetReportDistrictId })(ExamReportTitle)\n);\n","import React from \"react\";\nimport * as FileSaver from \"file-saver\";\nimport * as XLSX from \"xlsx\";\nimport { RiFileExcel2Fill } from \"react-icons/ri\";\n\ninterface ExportToExcelProps {\n  fileData: any[];\n  fileName: string;\n  btnName?: string;\n  className?: string;\n  showIcon?: boolean;\n}\n\nconst ExportToExcel: React.FC<ExportToExcelProps> = ({\n  fileData,\n  fileName,\n  btnName = \"Excel\",\n  className = \"flex items-center gap-1 px-4 py-1 rounded text-green-700 bg-white border hover:text-white hover:bg-green-700 border-green-700 font-bold\",\n  showIcon = true,\n}) => {\n  const fileType =\n    \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;charset=UTF-8\";\n  const fileExtension = \".xlsx\";\n\n  const exportToCSV = (apiData: any[], fileName: string) => {\n    const ws = XLSX.utils.json_to_sheet(apiData);\n    const wb = { Sheets: { data: ws }, SheetNames: [\"data\"] };\n    const excelBuffer = XLSX.write(wb, { bookType: \"xlsx\", type: \"array\" });\n    const data = new Blob([excelBuffer], { type: fileType });\n    FileSaver.saveAs(data, fileName + fileExtension);\n  };\n\n  return (\n    <button\n      onClick={(e) => exportToCSV(fileData, fileName)}\n      className={className}\n    >\n      {showIcon && <RiFileExcel2Fill />}\n      {btnName}\n    </button>\n  );\n};\n\nexport default ExportToExcel;\n","export default __webpack_public_path__ + \"static/media/mineduc.11a9ae1c.png\";","import jsPDF from \"jspdf\";\nimport { DATE } from \"../../utils/functions\";\nimport Logo from \"../../utils/mineduc.png\";\nrequire(\"jspdf-autotable\");\n\nexport const addFooters = (doc: any) => {\n  const pageCount = doc.internal.getNumberOfPages();\n\n  doc.setFont(\"helvetica\", \"italic\");\n  doc.setFontSize(8);\n  for (var i = 1; i <= pageCount; i++) {\n    doc.setPage(i);\n    doc.text(\n      \"Page \" + String(i) + \" of \" + String(pageCount),\n      doc.internal.pageSize.width / 2,\n      297,\n      {\n        align: \"center\",\n      }\n    );\n  }\n};\n\nexport type reportSettingsInterface = {\n  doneBy: string;\n  title: string;\n  subjectTitle: string;\n  subject: string;\n  institute: string;\n  period: string;\n  footer: string;\n  orientation?: \"p\" | \"l\";\n};\n\nexport const generatePDF = async (\n  reportSettings: reportSettingsInterface,\n  table: HTMLElement,\n  callBack: (status: boolean) => void\n) => {\n  callBack(true);\n  const orientation: \"p\" | \"l\" = reportSettings.orientation\n    ? reportSettings.orientation\n    : \"p\";\n  var lMargin: number = 20; //left margin in mm\n  var rMargin: number = 20; //right margin in mm\n  var pdfInMM: number = 185; // width of A4 in mm\n\n  //   var doc = new jsPDF(\"p\", \"mm\", \"a4\");\n  var doc: any = new jsPDF(orientation, \"mm\", \"a4\");\n\n  doc.setTextColor(95, 95, 95);\n  doc.setFontSize(28);\n  // doc.text(\n  //   this.props.reportTitle,\n  //   doc.internal.pageSize.getWidth() / 2,\n  //   30,\n  //   undefined,\n  //   \"center\"\n  // );\n  doc.addImage(Logo, \"png\", 20, 20, 10, 10);\n  doc.text(\"MINEDUC\", 32, 28.5, undefined, \"left\");\n  //   doc.setTextColor(19, 90, 152);\n  doc.setFontSize(26);\n  doc.text(\n    reportSettings.title,\n    doc.internal.pageSize.getWidth() / 2,\n    42.7,\n    undefined,\n    \"center\"\n  );\n\n  doc.setFontSize(20);\n  doc.text(\n    reportSettings.institute,\n    doc.internal.pageSize.getWidth() / 2,\n    53.7,\n    undefined,\n    \"center\"\n  );\n\n  var lines;\n  lines = doc.splitTextToSize(\n    reportSettings.subject,\n    pdfInMM - lMargin - rMargin\n  );\n  // if (reportSettings.position) {\n  // } else if (reportSettings.subject) {\n  //   lines = doc.splitTextToSize(\n  //     reportSettings.subject,\n  //     pdfInMM - lMargin - rMargin\n  //   );\n  // }\n\n  //   doc.setTextColor(0, 123, 255);\n  doc.setFontSize(16);\n  //   doc.text(lines, doc.internal.pageSize.getWidth() / 2, 45, {\n  //     maxWidth: 85,\n  //     align: \"center\",\n  //   });\n\n  var y = 63,\n    width;\n  doc.setTextColor(95, 95, 95);\n  doc.text(`${reportSettings.subjectTitle}: `, lMargin, y);\n  width = doc.getTextWidth(`${reportSettings.subjectTitle}: `);\n  // if (reportSettings.position) {\n  // } else if (reportSettings.position) {\n  //   doc.text(`Subject: `, lMargin, y);\n  //   width = doc.getTextWidth(\"Subject: \");\n  // }\n  // doc.setFontType(\"bold\");\n  doc.setTextColor(38, 38, 38);\n  for (var i = 0; i < lines.length; i++) {\n    if (y > 280) {\n      y = 10;\n      doc.addPage();\n    }\n    // doc.text(15, y, lines[i]);\n    doc.text(lines[i], lMargin + width, y);\n    y = y + 7;\n  }\n  doc.setTextColor(95, 95, 95);\n  doc.text(\"Period: \", lMargin, y + 3);\n  width = doc.getTextWidth(\"Period: \");\n  doc.setTextColor(38, 38, 38);\n  doc.text(reportSettings.period, lMargin + width, y + 3);\n\n  doc.autoTable({\n    html: table,\n    startY: 85,\n    margin: { horizontal: 20 },\n    cellPadding: 3, // Horizontal cell padding\n    // fontSize: 12,\n    rowHeight: 20,\n    // styles: { overflow: \"linebreak\" },\n    bodyStyles: { valign: \"top\" },\n    columnStyles: { email: { cellWidth: \"wrap\" } },\n    theme: \"striped\",\n    tableWidth: true,\n  });\n\n  doc.setFontSize(12);\n  let finalY = doc.lastAutoTable.finalY; // The y position on the page\n  doc.text(`Reported by: ${reportSettings.doneBy}`, lMargin, finalY + 15);\n  doc.text(\n    \"Report downloaded on \" + DATE(new Date().toString()),\n    lMargin,\n    finalY + 23\n  );\n\n  addFooters(doc);\n  await doc\n    .save(\n      `${\n        reportSettings.title +\n        \": \" +\n        reportSettings.subject +\n        \": \" +\n        reportSettings.period\n      }.pdf`,\n      { returnPromise: true }\n    )\n    .then(callBack(false));\n};\n","import React, { useState } from \"react\";\nimport {\n  MdCheckCircle,\n  MdRadioButtonUnchecked,\n  MdSearch,\n} from \"react-icons/md\";\nimport Loading from \"../../components/Loading/Loading\";\nimport {\n  PlansInterface,\n  SessionPlanInterface,\n  SessionPlanTypeStatus,\n} from \"../../interfaces\";\nimport { DATE } from \"../../utils/functions\";\nimport searchData from \"../../utils/search\";\n\nexport const isPlansActive = (plans: PlansInterface[]): PlansInterface[] => {\n  let today = new Date();\n  let activePlans: PlansInterface[] = [];\n  for (let plan of plans) {\n    let startDate = new Date(plan.start_date);\n    let endDate = new Date(plan.end_date);\n    if (\n      startDate.getTime() <= today.getTime() &&\n      endDate.getTime() >= today.getTime() &&\n      plan.type_status === SessionPlanTypeStatus.OPEN\n    ) {\n      activePlans = [...activePlans, plan];\n    }\n  }\n  return activePlans;\n};\n\ninterface ChooseSessionProps {\n  allSession: SessionPlanInterface[] | null;\n  setSelectSession: (period: SessionPlanInterface | \"all\") => void;\n  currentSelected: SessionPlanInterface | \"all\";\n  chooseAll: boolean;\n}\n\nconst ChooseSession = (props: ChooseSessionProps) => {\n  const [selectedPlan, setSelectedPlan] = useState<SessionPlanInterface | null>(\n    null\n  );\n  const [search, setSearch] = useState<string>(\"\");\n  const getSearch = (\n    period: SessionPlanInterface[],\n    searched: string\n  ): SessionPlanInterface[] => {\n    return searchData(period, searched) as SessionPlanInterface[];\n  };\n\n  return (\n    <div className=\"\">\n      <div className=\"px-3\">\n        <input\n          onChange={(e: React.ChangeEvent<HTMLInputElement>) =>\n            setSearch(e.target.value)\n          }\n          type=\"text\"\n          className=\"py-3 px-4 w-full rounded border border-gray-400 mb-3\"\n          placeholder=\"Search by year, name\"\n          disabled={props.allSession === null || props.allSession.length === 0}\n        />\n      </div>\n\n      <div className=\"bg-gray-100 px-3 pt-3 pb-2 rounded-b\">\n        {props.allSession === null ? (\n          <Loading />\n        ) : props.allSession.length === 0 ? (\n          <div className=\"flex flex-col text-gray-400 items-center justify-center mb-2 bg-white py-4\">\n            <MdSearch className=\"text-6xl\" />\n            <div className=\"flex flex-col items-center justify-center\">\n              <span>No session found!</span>\n            </div>\n          </div>\n        ) : (\n          <section>\n            {props.chooseAll && (\n              <div\n                className={`rounded border ${\n                  props.currentSelected === \"all\"\n                    ? \"bg-blue-50 border-blue-300\"\n                    : \"bg-white border-white \"\n                } group hover:border-blue-500 px-2 py-2 mb-2 flex flex-col md:flex-row items-start md:items-center md:justify-between`}\n              >\n                <div className=\"flex flex-row items-center gap-3\">\n                  {props.currentSelected === \"all\" ? (\n                    <MdCheckCircle className={`text-blue-500 text-4xl`} />\n                  ) : (\n                    <MdRadioButtonUnchecked\n                      className={`text-gray-300 text-4xl`}\n                    />\n                  )}\n                  <div className=\"flex flex-col\">\n                    <div className={`text-gray-600 font-bold`}>All session</div>\n                  </div>\n                </div>\n                <div\n                  onClick={() => {\n                    props.setSelectSession(\"all\");\n                  }}\n                  className=\"bg-gray-50 group-hover:bg-blue-600 font-semibold text-gray-400 group-hover:text-white rounded px-3 py-2 cursor-pointer\"\n                >\n                  Select\n                </div>\n              </div>\n            )}\n            {getSearch(props.allSession, search).map((item, i) => (\n              <div\n                key={i + 1}\n                className={`rounded border ${\n                  props.currentSelected !== \"all\" &&\n                  props.currentSelected._id === item._id\n                    ? \"bg-blue-50 border-blue-300\"\n                    : \"bg-white border-white \"\n                } group hover:border-blue-500 px-2 py-2 mb-2`}\n              >\n                <div className=\"flex flex-col md:flex-row items-start md:items-center md:justify-between \">\n                  <div className=\"flex flex-row items-center gap-3\">\n                    {props.currentSelected !== \"all\" &&\n                    props.currentSelected._id === item._id ? (\n                      <MdCheckCircle className={`text-blue-500 text-4xl`} />\n                    ) : (\n                      <MdRadioButtonUnchecked\n                        className={`text-gray-300 text-4xl`}\n                      />\n                    )}\n                    <div className=\"flex flex-col\">\n                      <div\n                        className={`${\n                          props.currentSelected !== \"all\" &&\n                          props.currentSelected._id === item._id\n                            ? \"text-blue-600\"\n                            : \"text-gray-600\"\n                        } font-bold`}\n                      >\n                        {item.session_plan_name}\n                      </div>\n                      <div className=\"text-sm text-gray-500\">\n                        <span>Status: </span>\n                        <span\n                          className={`${\n                            item.is_active === true\n                              ? \"text-gray-900 font-bold underline\"\n                              : \"text-gray-500 italic\"\n                          }`}\n                        >\n                          {item.is_active === true ? \"Active\" : \"Expired\"}\n                        </span>\n                      </div>\n                    </div>\n                  </div>\n                  <div className=\"flex flex-row items-center gap-2\">\n                    {(selectedPlan === null ||\n                      selectedPlan._id !== item._id) && (\n                      <div\n                        onClick={() => setSelectedPlan(item)}\n                        className=\"bg-gray-50 group-hover:bg-blue-100 font-semibold text-gray-400 group-hover:text-blue-600 rounded px-3 py-2 cursor-pointer\"\n                      >\n                        Details\n                      </div>\n                    )}\n                    <div\n                      onClick={() => {\n                        props.setSelectSession(item);\n                      }}\n                      className=\"bg-gray-50 group-hover:bg-blue-600 font-semibold text-gray-400 group-hover:text-white rounded px-3 py-2 cursor-pointer\"\n                    >\n                      Select\n                    </div>\n                    {selectedPlan !== null && selectedPlan._id === item._id && (\n                      <div\n                        onClick={() => setSelectedPlan(null)}\n                        className=\"bg-red-100 group-hover:bg-red-200 font-semibold text-red-600 group-hover:text-red-800 rounded px-3 py-2 cursor-pointer\"\n                      >\n                        Close\n                      </div>\n                    )}\n                  </div>\n                </div>\n                {selectedPlan !== null && selectedPlan._id === item._id && (\n                  <div className=\"bg-white rounded border border-blue-50 mt-2 animate__animated animate__fadeIn\">\n                    <table className=\"w-full\">\n                      <thead className=\"bg-blue-50\">\n                        <tr className=\"text-left\">\n                          <th className=\"px-3 py-3\">#</th>\n                          <th>Plan</th>\n                          <th>Start date</th>\n                          <th>Ending date</th>\n                          <th>Status</th>\n                        </tr>\n                      </thead>\n                      <tbody className=\"text-sm\">\n                        {selectedPlan !== null &&\n                          selectedPlan._id === item._id &&\n                          selectedPlan.plans.length > 0 &&\n                          item.plans.map((plan, i) => (\n                            <tr\n                              key={i + 1}\n                              className={`${\n                                isPlansActive(item.plans).find(\n                                  (itm) => itm.type_key === plan.type_key\n                                ) !== undefined\n                                  ? \"bg-blue-100 text-blue-600 font-bold\"\n                                  : \"\"\n                              } text-left border-b border-blue-50`}\n                            >\n                              <td className=\"px-3 py-1\">{i + 1}</td>\n                              <td>{plan.type_title}</td>\n                              <td>{DATE(plan.start_date, \"DD/MM/YYYY\")}</td>\n                              <td>{DATE(plan.end_date, \"DD/MM/YYYY\")}</td>\n                              <td>{plan.type_status}</td>\n                            </tr>\n                          ))}\n                      </tbody>\n                    </table>\n                  </div>\n                )}\n              </div>\n            ))}\n          </section>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default React.memo(ChooseSession);\n","import React, { Fragment, useState } from \"react\";\nimport { BiSort } from \"react-icons/bi\";\nimport { connect } from \"react-redux\";\nimport Loading from \"../../../components/Loading/Loading\";\nimport { SessionPlanInterface } from \"../../../interfaces\";\nimport { course } from \"../../../interfaces/course\";\nimport { ExamItemResponse } from \"../../../interfaces/prepare_exam\";\nimport {\n  CandidatesFailedSucceeded,\n  ReportUserExamStatus,\n} from \"../../../interfaces/reports\";\nimport { StoreState } from \"../../../reducers\";\nimport { ExamReportReducerType } from \"../../../reducers/exam_report\";\nimport { capitalizeFirstLetter } from \"../../../shared/dataTest\";\nimport { DATE, sortThisArray, timestampToDate } from \"../../../utils/functions\";\nimport { displayStatus } from \"./DoneExamList\";\nimport { getPeriodById } from \"./ExamReport\";\n\n// EXCEL FILE FUNCTIONS ================================\nexport interface CandidateExamPerformanceToPrintInterface {\n  applicant_id: number;\n  course_name: string;\n  course_code: string;\n  description: string;\n  school_levels: string;\n  exam_period: string;\n  exam_date: string;\n  exam_start_time: string;\n  exam_end_time: string;\n  applicant_name: string;\n  national_id: string;\n  email: string;\n  phone: string;\n  marks: string;\n  performance_status: string;\n}\n\nexport enum CandidateExamPerformanceReportContentKeyInterface {\n  APPLICANT = \"applicant_name\",\n  N_ID = \"national_id\",\n  EMAIL = \"email\",\n  PHONE = \"phone\",\n  MARKS = \"marks\",\n  STATUS = \"performance_status\",\n  COURSER_NAME = \"course_name\",\n  COURSE_CODE = \"course_code\",\n  SCHOOL_LEVEL = \"school_levels\",\n  PERIOD = \"exam_period\",\n  DATE = \"exam_date\",\n  START_TIME = \"exam_start_time\",\n  END_TIME = \"exam_end_time\",\n}\n\nexport interface CandidateExamPerformanceReportContentInterface {\n  key: CandidateExamPerformanceReportContentKeyInterface;\n  title: string;\n  status: boolean;\n}\n\nexport const candidateExamPerformanceIsChangeAllowed = (\n  key: CandidateExamPerformanceReportContentKeyInterface\n): boolean => {\n  if (\n    key === CandidateExamPerformanceReportContentKeyInterface.COURSER_NAME ||\n    key === CandidateExamPerformanceReportContentKeyInterface.COURSE_CODE ||\n    key === CandidateExamPerformanceReportContentKeyInterface.PERIOD ||\n    key === CandidateExamPerformanceReportContentKeyInterface.APPLICANT ||\n    key === CandidateExamPerformanceReportContentKeyInterface.N_ID\n  ) {\n    return false;\n  }\n  return true;\n};\n\nexport const defaultCandidateExamPerformanceContent: CandidateExamPerformanceReportContentInterface[] =\n  [\n    {\n      key: CandidateExamPerformanceReportContentKeyInterface.APPLICANT,\n      title: \"Applicant names\",\n      status: true,\n    },\n    {\n      key: CandidateExamPerformanceReportContentKeyInterface.N_ID,\n      title: \"National ID\",\n      status: true,\n    },\n    {\n      key: CandidateExamPerformanceReportContentKeyInterface.EMAIL,\n      title: \"Email\",\n      status: true,\n    },\n    {\n      key: CandidateExamPerformanceReportContentKeyInterface.PHONE,\n      title: \"Phone\",\n      status: true,\n    },\n    {\n      key: CandidateExamPerformanceReportContentKeyInterface.MARKS,\n      title: \"Marks\",\n      status: true,\n    },\n    {\n      key: CandidateExamPerformanceReportContentKeyInterface.COURSER_NAME,\n      title: \"Course names\",\n      status: true,\n    },\n    {\n      key: CandidateExamPerformanceReportContentKeyInterface.COURSE_CODE,\n      title: \"Course code\",\n      status: true,\n    },\n    {\n      key: CandidateExamPerformanceReportContentKeyInterface.SCHOOL_LEVEL,\n      title: \"School levels\",\n      status: true,\n    },\n    {\n      key: CandidateExamPerformanceReportContentKeyInterface.PERIOD,\n      title: \"Exam period\",\n      status: true,\n    },\n    {\n      key: CandidateExamPerformanceReportContentKeyInterface.DATE,\n      title: \"Exam date\",\n      status: true,\n    },\n    {\n      key: CandidateExamPerformanceReportContentKeyInterface.START_TIME,\n      title: \"Exam start time\",\n      status: true,\n    },\n    {\n      key: CandidateExamPerformanceReportContentKeyInterface.END_TIME,\n      title: \"Exam end time\",\n      status: true,\n    },\n    {\n      key: CandidateExamPerformanceReportContentKeyInterface.STATUS,\n      title: \"Status\",\n      status: true,\n    },\n  ];\n// END EXCEL FILE FUNCTIONS ================================\n\nexport interface candidatePerfomranceStateInterface {\n  user_id: string;\n  user_name: string;\n  national_id: string;\n  user_email: string;\n  user_phone: string;\n  course_name: string;\n  course_code: string;\n  description: string;\n  school_levels: string[];\n  course_id: string;\n  exam: CandidatesFailedSucceeded;\n  user_total_marks: number;\n  exam_stastus: ReportUserExamStatus;\n}\n\nexport const FC_reportCandidatePerformanceData = (\n  allCourses: course[],\n  data: CandidatesFailedSucceeded[],\n  course_id: string\n): candidatePerfomranceStateInterface[] => {\n  let result: candidatePerfomranceStateInterface[] = [],\n    ids: string[] = [];\n  for (const key in data) {\n    if (Object.prototype.hasOwnProperty.call(data, key)) {\n      if (!ids.includes(data[key]._id)) {\n        ids.push(data[key]._id);\n        let courser = allCourses.find(\n          (item) => item.course_id === data[key].course\n        );\n        if (courser) {\n          result.push({\n            user_id: data[key].user.user_id,\n            user_name:\n              capitalizeFirstLetter(data[key].user.user_info.lname) +\n              \" \" +\n              capitalizeFirstLetter(data[key].user.user_info.fname),\n            national_id: data[key].user.n_id ? data[key].user.n_id : \"\",\n            user_email: data[key].user.email,\n            user_phone: data[key].user.phone_number,\n            course_name: courser.course_name,\n            course_code: courser.course_code,\n            description: courser.description,\n            school_levels: courser.school_levels,\n            course_id: courser.course_id,\n            exam: data[key],\n            user_total_marks: data[key].total_marks,\n            exam_stastus: data[key].user_status,\n          });\n        }\n      }\n    }\n  }\n\n  if (course_id !== \"all\") {\n    result = result.filter((item) => item.course_id === course_id);\n  }\n  return result;\n};\n\nexport const FC_reportCandidatePerformanceDataFilter = (\n  thisList: candidatePerfomranceStateInterface[],\n  thisValue: ReportUserExamStatus | \"all\"\n): candidatePerfomranceStateInterface[] => {\n  if (thisValue === \"all\") {\n    return thisList;\n  } else {\n    return thisList.filter((item) => item.exam_stastus === thisValue);\n  }\n};\n\nexport const searchCandidatePerformanceData = (\n  objList: candidatePerfomranceStateInterface[],\n  text: string\n): candidatePerfomranceStateInterface[] => {\n  if (undefined === text || text === \"\") return objList;\n  return objList.filter((product) => {\n    let flag;\n    // let dataKeys = product;\n\n    for (let prop in product) {\n      flag = false;\n      if (\n        prop === \"course_name\" ||\n        prop === \"course_code\" ||\n        prop === \"user_total_marks\" ||\n        prop === \"exam_stastus\" ||\n        prop === \"description\" ||\n        prop === \"user_name\" ||\n        prop === \"user_phone\" ||\n        prop === \"user_email\" ||\n        prop === \"national_id\"\n      ) {\n        flag =\n          product[prop].toString().toLowerCase().indexOf(text.toLowerCase()) >\n          -1;\n      }\n      if (flag) break;\n    }\n    return flag;\n  });\n};\n\nexport const controlRowsByStatus = (status: string): string => {\n  if (status === \"Done\") {\n    return \"bg-blue-50 border-gray-300 hover:border-blue-500 border-t border-b\";\n  }\n  if (status === \"Removed\") {\n    return \"bg-white border-red-300 hover:border-red-500 border-t border-b\";\n  }\n  if (status === \"Paused\") {\n    return \"bg-white border-yellow-300 hover:border-yellow-500 border-t border-b\";\n  }\n  return \"bg-white border-gray-300 hover:border-blue-500 border-t border-b\";\n};\n\ntype CandidatePerformanceProps = {\n  loading: boolean;\n  examsListData: ExamItemResponse[] | null;\n  courseListData: course[] | null;\n  thisPeriod: SessionPlanInterface[];\n  candidatePerformanceData: CandidatesFailedSucceeded[] | null;\n\n  // redux props ============\n  adminExamReport: ExamReportReducerType;\n  // FOR APPLICANT PERFORMANCE PROPS\n  filterApplicantPerformance: ReportUserExamStatus | \"all\";\n};\n\nconst CandidatePerformance: React.FC<CandidatePerformanceProps> = (props) => {\n  const [searchInput, setSearchInput] = useState<string>(\"\");\n  const [isSorted, setIsSorted] = useState<boolean>(false);\n  const [sortProperty, setSortProperty] = useState<string>(\"\");\n  const [sortOrder, setSortOrder] = useState<\"ASC\" | \"DESC\">(\"ASC\");\n\n  const setSort = (thisProperty: string) => {\n    if (sortProperty === thisProperty && sortOrder === \"ASC\") {\n      setSortOrder(\"DESC\");\n      setSortProperty(thisProperty);\n      setIsSorted(true);\n    } else {\n      setSortOrder(\"ASC\");\n      setSortProperty(thisProperty);\n      setIsSorted(true);\n    }\n  };\n\n  return (\n    <Fragment>\n      <div className=\"bg-white my-4\">\n        <div className=\"w-full px-2 py-2\">\n          <input\n            onChange={(e) => setSearchInput(e.target.value)}\n            type=\"text\"\n            value={searchInput}\n            placeholder=\"Search...\"\n            className=\"w-full bg-gray-100 py-2 px-3 rounded\"\n            disabled={\n              props.courseListData &&\n              props.candidatePerformanceData &&\n              FC_reportCandidatePerformanceDataFilter(\n                FC_reportCandidatePerformanceData(\n                  props.courseListData,\n                  props.candidatePerformanceData,\n                  props.adminExamReport.reportCourseId\n                    ? props.adminExamReport.reportCourseId.course_id\n                    : \"all\"\n                ),\n                props.filterApplicantPerformance\n              ).length <= 0\n                ? true\n                : false\n            }\n          />\n        </div>\n        <div className=\"w-full overflow-x-auto\">\n          <table className=\"w-full shadow\" id=\"report_content\">\n            <thead className=\"bg-white border-b-2 border-gray-300 text-gray-600 font-bold text-sm\">\n              <tr>\n                <td className=\"px-2 py-2\">#</td>\n                <td className=\"px-2 py-2\" onClick={() => setSort(\"user_name\")}>\n                  Applicants\n                </td>\n                <td className=\"px-2 py-2\">National ID</td>\n                <td className=\"px-2 py-2\">Email</td>\n                <td className=\"px-2 py-2\">Phone</td>\n                <td\n                  className=\"px-2 py-2 cursor-pointer\"\n                  onClick={() => setSort(\"course_name\")}\n                >\n                  <div className=\"flex items-center gap-1\">\n                    Exam <BiSort />\n                  </div>\n                </td>\n                <td className=\"px-2 py-2\">Exam period</td>\n                <td className=\"px-2 py-2\">Exam date</td>\n                <td className=\"px-2 py-2\">Exam start time</td>\n                <td className=\"px-2 py-2\">Exam end time</td>\n                <td\n                  className=\"px-2 py-2 cursor-pointer\"\n                  onClick={() => setSort(\"user_total_marks\")}\n                >\n                  <div className=\"flex items-center gap-1\">\n                    Marks <BiSort />\n                  </div>\n                </td>\n                <td className=\"px-2 py-2\">Status</td>\n              </tr>\n            </thead>\n            <tbody>\n              {props.courseListData === null || props.loading ? (\n                <tr>\n                  <td colSpan={12} className=\"px-2 py-2\">\n                    <Loading />\n                  </td>\n                </tr>\n              ) : props.candidatePerformanceData &&\n                FC_reportCandidatePerformanceDataFilter(\n                  FC_reportCandidatePerformanceData(\n                    props.courseListData,\n                    props.candidatePerformanceData,\n                    props.adminExamReport.reportCourseId\n                      ? props.adminExamReport.reportCourseId.course_id\n                      : \"all\"\n                  ),\n                  props.filterApplicantPerformance\n                ).length <= 0 ? (\n                <tr>\n                  <td colSpan={12} className=\"px-2 py-2 text-center\">\n                    No applicant list available!\n                  </td>\n                </tr>\n              ) : (\n                props.candidatePerformanceData &&\n                sortThisArray(\n                  isSorted,\n                  searchCandidatePerformanceData(\n                    FC_reportCandidatePerformanceDataFilter(\n                      FC_reportCandidatePerformanceData(\n                        props.courseListData,\n                        props.candidatePerformanceData,\n                        props.adminExamReport.reportCourseId\n                          ? props.adminExamReport.reportCourseId.course_id\n                          : \"all\"\n                      ),\n                      props.filterApplicantPerformance\n                    ),\n                    searchInput\n                  ),\n                  sortProperty,\n                  sortOrder\n                ).map((item: candidatePerfomranceStateInterface, i) => (\n                  <tr\n                    key={i + 1}\n                    className={`${controlRowsByStatus(\n                      item.exam_stastus\n                    )} text-gray-600 hover:bg-blue-100 hover:text-blue-700 text-sm`}\n                  >\n                    <td className=\"px-2 py-2\">{i + 1}</td>\n                    <td className=\"px-2 py-2\">\n                      {capitalizeFirstLetter(item.user_name)}\n                    </td>\n                    <td className=\"px-2 py-2\">{item.national_id}</td>\n                    <td className=\"px-2 py-2\">{item.user_email}</td>\n                    <td className=\"px-2 py-2\">{item.user_phone}</td>\n                    <td className=\"px-2 py-2\">\n                      {capitalizeFirstLetter(item.course_name)} (\n                      <span className=\"font-semibold\">{item.course_code}</span>)\n                    </td>\n                    <td className=\"px-2 py-2\">\n                      {item.exam\n                        ? getPeriodById(props.thisPeriod, item.exam.period)\n                          ? getPeriodById(props.thisPeriod, item.exam.period)!\n                              .session_plan_name\n                          : \"-\"\n                        : \"-\"}\n                    </td>\n                    <td className=\"px-2 py-2\">\n                      {item.exam.exam_date ? DATE(item.exam.exam_date) : \"-\"}\n                    </td>\n                    <td className=\"px-2 py-2\">\n                      {item.exam.start_time\n                        ? timestampToDate(item.exam.start_time).timeAMPM\n                        : \"-\"}\n                    </td>\n                    <td className=\"px-2 py-2\">\n                      {item.exam.end_time\n                        ? timestampToDate(item.exam.end_time).timeAMPM\n                        : \"-\"}\n                    </td>\n                    <td className=\"px-2 py-2\">\n                      {item.exam_stastus !== ReportUserExamStatus.Editing\n                        ? Number(item.user_total_marks.toFixed(1)) + \"%\"\n                        : \"-\"}\n                    </td>\n                    <td className=\"px-2 py-2\">\n                      {capitalizeFirstLetter(displayStatus(item.exam_stastus))}\n                    </td>\n                  </tr>\n                ))\n              )}\n            </tbody>\n          </table>\n        </div>\n      </div>\n    </Fragment>\n  );\n};\n\nconst mapStateToProps = ({\n  adminExamReport,\n}: StoreState): {\n  adminExamReport: ExamReportReducerType;\n} => {\n  return {\n    adminExamReport,\n  };\n};\n\nexport default React.memo(connect(mapStateToProps, {})(CandidatePerformance));\n","import React, { Fragment, useState } from \"react\";\nimport { BiSort } from \"react-icons/bi\";\nimport Loading from \"../../../components/Loading/Loading\";\nimport { SessionPlanInterface } from \"../../../interfaces\";\nimport { course } from \"../../../interfaces/course\";\nimport { ExamItemResponse } from \"../../../interfaces/prepare_exam\";\nimport {\n  capitalizeFirstLetter,\n  isEmptyOrSpaces,\n} from \"../../../shared/dataTest\";\nimport { DATE, sortThisArray } from \"../../../utils/functions\";\n// import searchData from \"../../../utils/search\";\nimport { getPeriodById } from \"./ExamReport\";\n\n// EXCEL INTERFACES ======================================\nexport interface ExamPreparationToPrintInterface {\n  course_id: number;\n  course_name: string;\n  course_code: string;\n  description: string;\n  school_levels: string;\n  exam_period: string;\n  exam_date: string;\n  exam_time: string;\n  exam_duration: string;\n  // exam: ExamItemResponse | null;\n  preparation_status: string;\n}\n\nexport enum examPreparationReportContentKeyInterface {\n  \"course_name\" = \"course_name\",\n  \"course_code\" = \"course_code\",\n  SCHOOL_LEVEL = \"school_levels\",\n  PERIOD = \"exam_period\",\n  DATE = \"exam_date\",\n  TIME = \"exam_time\",\n  DURATION = \"exam_duration\",\n  STATUS = \"preparation_status\",\n}\n\nexport interface examPreparationReportContentInterface {\n  key: examPreparationReportContentKeyInterface;\n  title: string;\n  status: boolean;\n}\n\nexport const defaultExamPreparationReportContent: examPreparationReportContentInterface[] =\n  [\n    {\n      key: examPreparationReportContentKeyInterface.course_name,\n      title: \"Course names\",\n      status: true,\n    },\n    {\n      key: examPreparationReportContentKeyInterface.course_code,\n      title: \"Course code\",\n      status: true,\n    },\n    {\n      key: examPreparationReportContentKeyInterface.SCHOOL_LEVEL,\n      title: \"School levels\",\n      status: true,\n    },\n    {\n      key: examPreparationReportContentKeyInterface.PERIOD,\n      title: \"Exam period\",\n      status: true,\n    },\n    {\n      key: examPreparationReportContentKeyInterface.DATE,\n      title: \"Exam date\",\n      status: true,\n    },\n    {\n      key: examPreparationReportContentKeyInterface.TIME,\n      title: \"Exam time\",\n      status: true,\n    },\n    {\n      key: examPreparationReportContentKeyInterface.DURATION,\n      title: \"Exam duration\",\n      status: true,\n    },\n    {\n      key: examPreparationReportContentKeyInterface.STATUS,\n      title: \"Exam status\",\n      status: true,\n    },\n  ];\n\nexport const examPreparationIsChangeAllowed = (\n  key: examPreparationReportContentKeyInterface\n): boolean => {\n  if (\n    key === examPreparationReportContentKeyInterface.course_name ||\n    key === examPreparationReportContentKeyInterface.course_code\n  ) {\n    return false;\n  }\n  return true;\n};\n// END EXCEL INTERFACES ======================================\n\nexport interface examPreparationStateInterface {\n  course_name: string;\n  course_code: string;\n  description: string;\n  school_levels: string[];\n  course_id: string;\n  exam: ExamItemResponse | null;\n  preparation_status: \"prepared\" | \"not prepared\";\n}\n\nexport const FC_reportExamList = (\n  allCourses: course[],\n  allExams: ExamItemResponse[],\n  period: string = \"\"\n): examPreparationStateInterface[] => {\n  let result: examPreparationStateInterface[] = [],\n    ids: string[] = [];\n  for (const key in allCourses) {\n    if (Object.prototype.hasOwnProperty.call(allCourses, key)) {\n      if (ids.includes(allCourses[key].course_id)) continue;\n      ids.push(allCourses[key].course_id);\n      let exam = !isEmptyOrSpaces(period)\n        ? allExams.find(\n            (item) =>\n              item.course === allCourses[key].course_id &&\n              item.period === period\n          )\n        : allExams.find((item) => item.course === allCourses[key].course_id);\n      if (exam) {\n        result.push({\n          course_name: allCourses[key].course_name,\n          course_code: allCourses[key].course_code,\n          description: allCourses[key].description,\n          school_levels: allCourses[key].school_levels,\n          course_id: allCourses[key].course_id,\n          exam: exam,\n          preparation_status: \"prepared\",\n        });\n      } else {\n        result.push({\n          course_name: allCourses[key].course_name,\n          course_code: allCourses[key].course_code,\n          description: allCourses[key].description,\n          school_levels: allCourses[key].school_levels,\n          course_id: allCourses[key].course_id,\n          exam: null,\n          preparation_status: \"not prepared\",\n        });\n      }\n    }\n  }\n  return result;\n};\n\nexport const FC_reportExamListFilter = (\n  thisList: examPreparationStateInterface[],\n  thisStatus: \"all\" | \"prepared\" | \"not prepared\"\n): examPreparationStateInterface[] => {\n  if (thisStatus === \"all\") {\n    return thisList;\n  } else {\n    return thisList.filter((item) => item.preparation_status === thisStatus);\n  }\n};\n\nexport const searchExamList = (\n  objList: examPreparationStateInterface[],\n  text: string\n): examPreparationStateInterface[] => {\n  if (undefined === text || text === \"\") return objList;\n  return objList.filter((product) => {\n    let flag;\n    // let dataKeys = product;\n\n    for (let prop in product) {\n      flag = false;\n      if (\n        prop === \"course_name\" ||\n        prop === \"course_code\" ||\n        prop === \"preparation_status\"\n      ) {\n        flag =\n          product[prop].toString().toLowerCase().indexOf(text.toLowerCase()) >\n          -1;\n      }\n      if (flag) break;\n    }\n    return flag;\n  });\n};\n\ntype ExamListProps = {\n  loading: boolean;\n  examsListData: ExamItemResponse[] | null;\n  courseListData: course[] | null;\n  thisPeriod: SessionPlanInterface[];\n  // FOR EXAM PREPARATION PROPS =========================================\n  filterPreparation: \"prepared\" | \"not prepared\" | \"all\";\n};\n\nconst ExamList: React.FC<ExamListProps> = (props) => {\n  const [searchInput, setSearchInput] = useState<string>(\"\");\n  const [isSorted, setIsSorted] = useState<boolean>(false);\n  const [sortProperty, setSortProperty] = useState<string>(\"\");\n  const [sortOrder, setSortOrder] = useState<\"ASC\" | \"DESC\">(\"ASC\");\n\n  const setSort = (thisProperty: string) => {\n    if (sortProperty === thisProperty && sortOrder === \"ASC\") {\n      setSortOrder(\"DESC\");\n      setSortProperty(thisProperty);\n      setIsSorted(true);\n    } else {\n      setSortOrder(\"ASC\");\n      setSortProperty(thisProperty);\n      setIsSorted(true);\n    }\n  };\n\n  return (\n    <Fragment>\n      <div className=\"bg-white my-4\">\n        <div className=\"w-full px-2 py-2\">\n          {props.courseListData && props.examsListData && (\n            <input\n              onChange={(e) => setSearchInput(e.target.value)}\n              type=\"text\"\n              value={searchInput}\n              placeholder=\"Search...\"\n              className=\"w-full bg-gray-100 py-2 px-3 rounded\"\n              disabled={\n                FC_reportExamListFilter(\n                  FC_reportExamList(props.courseListData, props.examsListData),\n                  props.filterPreparation\n                ).length <= 0\n              }\n            />\n          )}\n        </div>\n        <div className=\"w-full overflow-x-auto\">\n          <table className=\"w-full shadow\" id=\"report_content\">\n            <thead className=\"bg-white border-b-2 border-gray-300 text-gray-600 font-bold text-sm\">\n              <tr>\n                <td className=\"px-2 py-2\">#</td>\n                <td\n                  className=\"px-2 py-2 cursor-pointer\"\n                  onClick={() => setSort(\"course_name\")}\n                >\n                  <div className=\"flex items-center gap-1\">\n                    Course <BiSort />\n                  </div>\n                </td>\n                <td className=\"px-2 py-2\">Exam date</td>\n                <td className=\"px-2 py-2\">Exam time</td>\n                <td className=\"px-2 py-2\">Exam duration</td>\n                <td className=\"px-2 py-2\">Exam Period</td>\n                <td className=\"px-2 py-2\">Created at</td>\n                <td\n                  className=\"px-2 py-2 cursor-pointer\"\n                  onClick={() => setSort(\"preparation_status\")}\n                >\n                  <div className=\"flex items-center gap-1\">\n                    Exam Status <BiSort />\n                  </div>\n                </td>\n              </tr>\n            </thead>\n            <tbody>\n              {props.courseListData === null || props.loading ? (\n                <tr>\n                  <td colSpan={8} className=\"px-2 py-2\">\n                    <Loading />\n                  </td>\n                </tr>\n              ) : props.courseListData &&\n                props.examsListData &&\n                FC_reportExamListFilter(\n                  FC_reportExamList(props.courseListData, props.examsListData),\n                  props.filterPreparation\n                ).length <= 0 ? (\n                <tr>\n                  <td colSpan={8} className=\"px-2 py-2 text-center\">\n                    No course for exam found\n                  </td>\n                </tr>\n              ) : (\n                props.examsListData &&\n                sortThisArray(\n                  isSorted,\n                  searchExamList(\n                    FC_reportExamListFilter(\n                      FC_reportExamList(\n                        props.courseListData,\n                        props.examsListData\n                      ),\n                      props.filterPreparation\n                    ),\n                    searchInput\n                  ),\n                  sortProperty,\n                  sortOrder\n                ).map((item, i) => (\n                  <tr\n                    key={i + 1}\n                    className={`${\n                      item.exam ? \"bg-blue-50\" : \"bg-white\"\n                    } text-gray-600 hover:bg-blue-100 hover:text-blue-700 border-b border-gray-300 hover:border-blue-500 text-sm`}\n                  >\n                    <td className=\"px-2 py-2\">{i + 1}</td>\n                    <td className=\"px-2 py-2\">\n                      {capitalizeFirstLetter(item.course_name)} (\n                      <span className=\"font-semibold\">{item.course_code}</span>)\n                    </td>\n                    <td className=\"px-2 py-2\">\n                      {item.exam ? DATE(item.exam.exam_date) : \"-\"}\n                    </td>\n                    <td className=\"px-2 py-2\">\n                      {item.exam ? item.exam.start_time : \"-\"}\n                    </td>\n                    <td className=\"px-2 py-2\">\n                      {item.exam ? item.exam!.duration + \" min\" : \"-\"}\n                    </td>\n                    <td className=\"px-2 py-2\">\n                      {item.exam\n                        ? getPeriodById(props.thisPeriod, item.exam.period)\n                          ? getPeriodById(props.thisPeriod, item.exam.period)!\n                              .session_plan_name\n                          : \"-\"\n                        : \"-\"}\n                    </td>\n                    <td className=\"px-2 py-2\">\n                      {item.exam ? DATE(item.exam.createdAt) : \"-\"}\n                    </td>\n                    <td className=\"px-2 py-2\">\n                      {capitalizeFirstLetter(\n                        item.exam ? \"Prepared\" : \"Not prepared\"\n                      )}\n                    </td>\n                  </tr>\n                ))\n              )}\n            </tbody>\n          </table>\n        </div>\n      </div>\n    </Fragment>\n  );\n};\n\nexport default React.memo(ExamList);\n","import React, { useEffect, useState } from \"react\";\nimport { CgFileDocument } from \"react-icons/cg\";\nimport { MdCheckBox, MdCheckBoxOutlineBlank, MdHistory } from \"react-icons/md\";\nimport { connect } from \"react-redux\";\nimport {\n  SetReportCourseId,\n  SetReportCourseIdAction,\n  SetReportDistrictId,\n  SetReportDistrictIdAction,\n} from \"../../../actions\";\nimport { getAllRoom } from \"../../../actions/location\";\nimport Loading from \"../../../components/Loading/Loading\";\nimport Modal, { ModalSize, Themes } from \"../../../components/Modal/Modal\";\nimport { SessionPlanInterface } from \"../../../interfaces\";\nimport { StoreState } from \"../../../reducers\";\nimport { isEmptyOrSpaces } from \"../../../shared/dataTest\";\nimport {\n  LocationRoomTableInterface,\n  RoomLocationInterface,\n} from \"../../../shared/interfaces\";\nimport ExportToExcel from \"../../../utils/ExportToExcel\";\nimport ChooseSession from \"../../SessionSettings/ChooseSession\";\nimport { LocationsInArray } from \"../../UserManagement/UserList\";\nimport {\n  CandidateExamPerformanceToPrintInterface,\n  CandidateExamPerformanceReportContentInterface,\n  CandidateExamPerformanceReportContentKeyInterface,\n  candidateExamPerformanceIsChangeAllowed,\n} from \"./CandidatePerformance\";\nimport {\n  examinationProgressIsChangeAllowed,\n  ExaminationProgressReportContentInterface,\n  ExaminationProgressReportContentKeyInterface,\n  ExaminationProgressToPrintInterface,\n  examProgressStateInterface,\n  searchExamData,\n} from \"./DoneExamList\";\nimport {\n  examPreparationReportContentInterface,\n  ExamPreparationToPrintInterface,\n  examPreparationReportContentKeyInterface,\n  examPreparationIsChangeAllowed,\n} from \"./ExamList\";\nimport {\n  ExamPerformanceToPrintInterface,\n  examPerformanceReportContentInterface,\n  examPerformanceReportContentKeyInterface,\n  examPerformanceIsChangeAllowed,\n} from \"./ExamPerformance\";\nimport { reportTitleType } from \"./ExamReport\";\n\nexport const FC_DistinctDistrict = (\n  locations: LocationRoomTableInterface[]\n): LocationRoomTableInterface[] => {\n  var flags: string[] = [],\n    output: LocationRoomTableInterface[] = [],\n    l: number = locations.length,\n    i: number;\n  for (i = 0; i < l; i++) {\n    if (flags.includes(locations[i].district_id)) continue;\n    flags.push(locations[i].district_id);\n    output.push(locations[i]);\n  }\n\n  return output;\n};\n\nexport enum ModalForTypes {\n  title = \"TITLE\",\n  period = \"PERIOD\",\n  generateReportModal = \"GENERATE REPORT\",\n  choose_exam = \"Choosing Exam\",\n  choose_district = \"Choosing District\",\n}\n\ntype ExamReportModalsProps = {\n  modalFor: ModalForTypes;\n  modalState: boolean;\n  changeModalState: (state: boolean) => void;\n\n  // FOR CHANGING PERIOD =========================\n  applicationPeriods?: SessionPlanInterface[] | null;\n  selected_period?: SessionPlanInterface | null;\n  setSelectedPeriod?: (period: SessionPlanInterface) => void;\n  onPeriodChange?: (period_id: string) => void;\n\n  // FOR CHOOSING EXAM =========================\n  AllExamData?: examProgressStateInterface[];\n  // thisExam?: examProgressStateInterface | null;\n  // setSelectedExam?: (selectedExam: examProgressStateInterface | null) => void;\n  SetReportCourseId: (\n    data: examProgressStateInterface | null\n  ) => SetReportCourseIdAction;\n  thisExam?: examProgressStateInterface | null;\n\n  // FOR REPORT TYPE =========================\n  reportTitle?: reportTitleType;\n  setReportTitle?: (title: reportTitleType) => void;\n\n  // FOR EXCEL GENERATION =========================\n  generateReportModal?: {\n    reportType: \"EXCEL\" | \"PDF\";\n    status: boolean;\n  } | null;\n  setGenerateReportModal?: (\n    reportData: {\n      reportType: \"EXCEL\" | \"PDF\";\n      status: boolean;\n    } | null\n  ) => void;\n  excelReportTitle?: string;\n  setExcelReportTitle?: (title: string) => void;\n  examPreparationReportContent?: examPreparationReportContentInterface[];\n  setExamPreparationReportContent?: (\n    content: examPreparationReportContentInterface[]\n  ) => void;\n  updateExamToPrint?: () => void;\n  examsToPrint?:\n    | ExamPreparationToPrintInterface[]\n    | ExamPerformanceToPrintInterface[]\n    | null;\n  // FOR EXAM PERFORMANCE REPORT ================================\n  examPerformanceToPrint?: ExamPerformanceToPrintInterface[] | null;\n  examPerformanceReportContent?: examPerformanceReportContentInterface[];\n  setExamPerformanceReportContent?: (\n    value: examPerformanceReportContentInterface[]\n  ) => void;\n  // FOR EXCEL TOP 30 EXAM PERFORMANCE REPORT CONTENT ===============================\n  exam30PerformanceToPrint?: ExamPerformanceToPrintInterface[] | null;\n  exam30PerformanceReportContent?: examPerformanceReportContentInterface[];\n  setExam30PerformanceReportContent?: (\n    value: examPerformanceReportContentInterface[]\n  ) => void;\n  // FOR EXCEL EXAMINATION PROGRESS REPORT CONTENT ===============================\n  examinationProgressToPrint?: ExaminationProgressToPrintInterface[] | null;\n  examinationProgressReportContent?: ExaminationProgressReportContentInterface[];\n  setExaminationProgressExamPerformanceReportContent?: (\n    value: ExaminationProgressReportContentInterface[]\n  ) => void;\n  // FOR EXCEL CANDIDATE EXAM PERFORMANCE REPORT CONTENT ===============================\n  candidateExamPerformanceToPrint?:\n    | CandidateExamPerformanceToPrintInterface[]\n    | null;\n  candidateExamPerformanceReportContent?: CandidateExamPerformanceReportContentInterface[];\n  setCandidateExamPerformanceReportContent?: (\n    value: CandidateExamPerformanceReportContentInterface[]\n  ) => void;\n  // FOR EXCEL TOP 30 CANDIDATE EXAM PERFORMANCE REPORT CONTENT ===============================\n  candidate30ExamPerformanceToPrint?:\n    | CandidateExamPerformanceToPrintInterface[]\n    | null;\n  candidate30ExamPerformanceReportContent?: CandidateExamPerformanceReportContentInterface[];\n  setCandidate30ExamPerformanceReportContent?: (\n    value: CandidateExamPerformanceReportContentInterface[]\n  ) => void;\n  // FOR LOCATIONS PROVINCE, DISTRICT, CENTERS, ROOM ================================\n  locations: RoomLocationInterface[];\n  getAllRoom: Function;\n  SetReportDistrictId?: (\n    data: {\n      district_id: string;\n      district_name: string;\n    } | null\n  ) => SetReportDistrictIdAction;\n  districtId?: string;\n  isAllDistrictAllowed?: boolean;\n};\n\nconst ExamReportModals: React.FC<ExamReportModalsProps> = (props) => {\n  const [formError, setFormError] = useState<{\n    element: string;\n    msg: string;\n  } | null>(null);\n  const [selectAll, setSelectAll] = useState<boolean>(true);\n  const [searchInput, setSearchInput] = useState<string>(\"\");\n  const [loadingLocation, setLoadingLocation] = useState<boolean>(true);\n  const [error, setError] = useState<{ element: String; msg: string } | null>(\n    null\n  );\n  const [districtId, setDistrictId] = useState<string>(\n    props.districtId ? props.districtId : \"all\"\n  );\n\n  const isChangeAllowed = (key: any): boolean => {\n    // EXAM PREPARATION ######################\n    if (\n      props.reportTitle &&\n      props.reportTitle === reportTitleType.EXAM_PREPARATION\n    ) {\n      return examPreparationIsChangeAllowed(key);\n    }\n    // EXAM PERFORMANCE ######################\n    if (\n      props.reportTitle &&\n      (props.reportTitle === reportTitleType.EXAM_PERFORMANCE ||\n        props.reportTitle === reportTitleType.EXAM_DISTRICT_PERFORMANCE)\n    ) {\n      return examPerformanceIsChangeAllowed(key);\n    }\n    // EXAMINATION PROGRESS ######################\n    if (\n      props.reportTitle &&\n      props.reportTitle === reportTitleType.EXAMINATION_PROGRESS\n    ) {\n      return examinationProgressIsChangeAllowed(key);\n    }\n    // CANDIDATE EXAM PERFORMANCE && TOP 30 CANDIDATE EXAM PERFORMANCE ######################\n    if (\n      props.reportTitle &&\n      (props.reportTitle === reportTitleType.APPLICANTS_PERFORMANCE ||\n        props.reportTitle === reportTitleType.APPLICANTS_DISTRICT_PERFORMANCE)\n    ) {\n      return candidateExamPerformanceIsChangeAllowed(key);\n    }\n    return false;\n  };\n\n  const updateExamPreparationReportContent = (\n    key: examPreparationReportContentKeyInterface\n  ) => {\n    if (props.examPreparationReportContent) {\n      let index: number = props.examPreparationReportContent.findIndex(\n        (item) => item.key === key\n      );\n      let newArray: examPreparationReportContentInterface[] =\n        props.examPreparationReportContent;\n      newArray[index].status = !newArray[index].status;\n      props.setExamPreparationReportContent &&\n        props.setExamPreparationReportContent(newArray);\n      let isSelectAllNeeded = newArray.find((item) => item.status === false);\n      if (isSelectAllNeeded) {\n        setSelectAll(false);\n      } else {\n        setSelectAll(true);\n      }\n\n      // UPDATE APPLICATION LIST FOR UPDATE ==============================\n      props.updateExamToPrint && props.updateExamToPrint();\n    }\n  };\n\n  const resetReportContent = (currentState: boolean) => {\n    if (props.reportTitle) {\n      // EXAM PREPARATION =======================================\n      if (\n        props.reportTitle === reportTitleType.EXAM_PREPARATION &&\n        props.examPreparationReportContent\n      ) {\n        let newArray: examPreparationReportContentInterface[] =\n          props.examPreparationReportContent;\n        for (const key in newArray) {\n          if (isChangeAllowed(newArray[key].key)) {\n            newArray[key].status = !currentState;\n          }\n        }\n\n        props.setExamPreparationReportContent &&\n          props.setExamPreparationReportContent(newArray);\n        setSelectAll(!currentState);\n\n        props.updateExamToPrint && props.updateExamToPrint();\n      }\n    }\n\n    // EXAM PERFORMANCE =======================================\n    if (\n      props.reportTitle === reportTitleType.EXAM_PERFORMANCE &&\n      props.examPerformanceReportContent\n    ) {\n      let newArray: examPerformanceReportContentInterface[] =\n        props.examPerformanceReportContent;\n      for (const key in newArray) {\n        if (isChangeAllowed(newArray[key].key)) {\n          newArray[key].status = !currentState;\n        }\n      }\n\n      props.setExamPerformanceReportContent &&\n        props.setExamPerformanceReportContent(newArray);\n      setSelectAll(!currentState);\n\n      props.updateExamToPrint && props.updateExamToPrint();\n    }\n\n    // TOP 30 EXAM PERFORMANCE =======================================\n    if (\n      props.reportTitle === reportTitleType.EXAM_DISTRICT_PERFORMANCE &&\n      props.exam30PerformanceReportContent\n    ) {\n      let newArray: examPerformanceReportContentInterface[] =\n        props.exam30PerformanceReportContent;\n      for (const key in newArray) {\n        if (isChangeAllowed(newArray[key].key)) {\n          newArray[key].status = !currentState;\n        }\n      }\n\n      props.setExam30PerformanceReportContent &&\n        props.setExam30PerformanceReportContent(newArray);\n      setSelectAll(!currentState);\n\n      props.updateExamToPrint && props.updateExamToPrint();\n    }\n\n    // EXAMINATION PROGRESS =======================================\n    if (\n      props.reportTitle === reportTitleType.EXAMINATION_PROGRESS &&\n      props.examinationProgressReportContent\n    ) {\n      let newArray: ExaminationProgressReportContentInterface[] =\n        props.examinationProgressReportContent;\n      for (const key in newArray) {\n        if (isChangeAllowed(newArray[key].key)) {\n          newArray[key].status = !currentState;\n        }\n      }\n\n      props.setExaminationProgressExamPerformanceReportContent &&\n        props.setExaminationProgressExamPerformanceReportContent(newArray);\n      setSelectAll(!currentState);\n\n      props.updateExamToPrint && props.updateExamToPrint();\n    }\n\n    // CANDIDATE EXAM PERFORMANCE =======================================\n    if (\n      props.reportTitle === reportTitleType.APPLICANTS_PERFORMANCE &&\n      props.candidateExamPerformanceReportContent\n    ) {\n      let newArray: CandidateExamPerformanceReportContentInterface[] =\n        props.candidateExamPerformanceReportContent;\n      for (const key in newArray) {\n        if (isChangeAllowed(newArray[key].key)) {\n          newArray[key].status = !currentState;\n        }\n      }\n\n      props.setCandidateExamPerformanceReportContent &&\n        props.setCandidateExamPerformanceReportContent(newArray);\n      setSelectAll(!currentState);\n\n      props.updateExamToPrint && props.updateExamToPrint();\n    }\n\n    // TOP 30 CANDIDATE EXAM PERFORMANCE =======================================\n    if (\n      props.reportTitle === reportTitleType.APPLICANTS_DISTRICT_PERFORMANCE &&\n      props.candidate30ExamPerformanceReportContent\n    ) {\n      let newArray: CandidateExamPerformanceReportContentInterface[] =\n        props.candidate30ExamPerformanceReportContent;\n      for (const key in newArray) {\n        if (isChangeAllowed(newArray[key].key)) {\n          newArray[key].status = !currentState;\n        }\n      }\n\n      props.setCandidate30ExamPerformanceReportContent &&\n        props.setCandidate30ExamPerformanceReportContent(newArray);\n      setSelectAll(!currentState);\n\n      props.updateExamToPrint && props.updateExamToPrint();\n    }\n  };\n\n  const updateExamPerformanceReportContent = (\n    key: examPerformanceReportContentKeyInterface\n  ) => {\n    if (\n      props.reportTitle &&\n      props.reportTitle === reportTitleType.EXAM_PERFORMANCE &&\n      props.examPerformanceReportContent\n    ) {\n      let index: number = props.examPerformanceReportContent.findIndex(\n        (item) => item.key === key\n      );\n      let newArray: examPerformanceReportContentInterface[] =\n        props.examPerformanceReportContent;\n      newArray[index].status = !newArray[index].status;\n      props.setExamPerformanceReportContent &&\n        props.setExamPerformanceReportContent(newArray);\n      let isSelectAllNeeded = newArray.find((item) => item.status === false);\n      if (isSelectAllNeeded) {\n        setSelectAll(false);\n      } else {\n        setSelectAll(true);\n      }\n\n      // UPDATE APPLICATION LIST FOR UPDATE ==============================\n      props.updateExamToPrint && props.updateExamToPrint();\n    }\n    if (\n      props.reportTitle &&\n      props.reportTitle === reportTitleType.EXAM_DISTRICT_PERFORMANCE &&\n      props.exam30PerformanceReportContent\n    ) {\n      let index: number = props.exam30PerformanceReportContent.findIndex(\n        (item) => item.key === key\n      );\n      let newArray: examPerformanceReportContentInterface[] =\n        props.exam30PerformanceReportContent;\n      newArray[index].status = !newArray[index].status;\n      props.setExam30PerformanceReportContent &&\n        props.setExam30PerformanceReportContent(newArray);\n      let isSelectAllNeeded = newArray.find((item) => item.status === false);\n      if (isSelectAllNeeded) {\n        setSelectAll(false);\n      } else {\n        setSelectAll(true);\n      }\n\n      // UPDATE APPLICATION LIST FOR UPDATE ==============================\n      props.updateExamToPrint && props.updateExamToPrint();\n    }\n  };\n\n  const updateExaminationProgressReportContent = (\n    key: ExaminationProgressReportContentKeyInterface\n  ) => {\n    if (props.examinationProgressReportContent) {\n      let index: number = props.examinationProgressReportContent.findIndex(\n        (item) => item.key === key\n      );\n      let newArray: ExaminationProgressReportContentInterface[] =\n        props.examinationProgressReportContent;\n      newArray[index].status = !newArray[index].status;\n      props.setExaminationProgressExamPerformanceReportContent &&\n        props.setExaminationProgressExamPerformanceReportContent(newArray);\n      let isSelectAllNeeded = newArray.find((item) => item.status === false);\n      if (isSelectAllNeeded) {\n        setSelectAll(false);\n      } else {\n        setSelectAll(true);\n      }\n\n      // UPDATE APPLICATION LIST FOR UPDATE ==============================\n      props.updateExamToPrint && props.updateExamToPrint();\n    }\n  };\n\n  const updateCandidateExamPerformanceReportContent = (\n    key: CandidateExamPerformanceReportContentKeyInterface\n  ) => {\n    if (\n      props.reportTitle &&\n      props.reportTitle === reportTitleType.APPLICANTS_PERFORMANCE &&\n      props.candidateExamPerformanceReportContent\n    ) {\n      let index: number = props.candidateExamPerformanceReportContent.findIndex(\n        (item) => item.key === key\n      );\n      let newArray: CandidateExamPerformanceReportContentInterface[] =\n        props.candidateExamPerformanceReportContent;\n      newArray[index].status = !newArray[index].status;\n      props.setCandidateExamPerformanceReportContent &&\n        props.setCandidateExamPerformanceReportContent(newArray);\n      let isSelectAllNeeded = newArray.find((item) => item.status === false);\n      if (isSelectAllNeeded) {\n        setSelectAll(false);\n      } else {\n        setSelectAll(true);\n      }\n\n      // UPDATE APPLICATION LIST FOR UPDATE ==============================\n      props.updateExamToPrint && props.updateExamToPrint();\n    }\n\n    if (\n      props.reportTitle &&\n      props.reportTitle === reportTitleType.APPLICANTS_DISTRICT_PERFORMANCE &&\n      props.candidate30ExamPerformanceReportContent\n    ) {\n      let index: number =\n        props.candidate30ExamPerformanceReportContent.findIndex(\n          (item) => item.key === key\n        );\n      let newArray: CandidateExamPerformanceReportContentInterface[] =\n        props.candidate30ExamPerformanceReportContent;\n      newArray[index].status = !newArray[index].status;\n      props.setCandidate30ExamPerformanceReportContent &&\n        props.setCandidate30ExamPerformanceReportContent(newArray);\n      let isSelectAllNeeded = newArray.find((item) => item.status === false);\n      if (isSelectAllNeeded) {\n        setSelectAll(false);\n      } else {\n        setSelectAll(true);\n      }\n\n      // UPDATE APPLICATION LIST FOR UPDATE ==============================\n      props.updateExamToPrint && props.updateExamToPrint();\n    }\n  };\n\n  useEffect(() => {\n    if (\n      !props.locations.length &&\n      props.modalFor === ModalForTypes.choose_district\n    ) {\n      props.getAllRoom((status: boolean, msg: string) => {\n        if (!status && msg.length > 0) console.error(msg);\n        setLoadingLocation(status);\n      });\n    } else {\n      setLoadingLocation(false);\n    }\n  }, [props]);\n\n  const selectDistrict = (district_id: string) => {\n    setError(null);\n    if (district_id === \"all\") {\n      if (\n        ((props.reportTitle &&\n          props.reportTitle ===\n            reportTitleType.APPLICANTS_DISTRICT_PERFORMANCE) ||\n          (props.isAllDistrictAllowed &&\n            props.isAllDistrictAllowed === true)) &&\n        props.SetReportDistrictId\n      ) {\n        props.SetReportDistrictId(null);\n        props.changeModalState(false);\n      } else {\n        setError({ element: \"district\", msg: \"District is required\" });\n      }\n    } else {\n      if (props.SetReportDistrictId) {\n        let thisDistrict = LocationsInArray(props.locations).find(\n          (item) => item.district_id === district_id\n        );\n        if (!thisDistrict) {\n          return setError({ element: \"district\", msg: \"Invalid district id\" });\n        } else {\n          props.SetReportDistrictId({\n            district_id: thisDistrict.district_id,\n            district_name: thisDistrict.district_name,\n          });\n          props.changeModalState(false);\n        }\n      }\n    }\n  };\n\n  const showGenerateBtn = (): { status: boolean; data: any[] } => {\n    if (props.reportTitle) {\n      // EXAM PREPARATION ######################\n      if (\n        props.reportTitle === reportTitleType.EXAM_PREPARATION &&\n        props.excelReportTitle &&\n        props.examsToPrint\n      ) {\n        return { status: true, data: props.examsToPrint };\n      }\n      // EXAM PERFORMANCE ######################\n      if (\n        props.reportTitle === reportTitleType.EXAM_PERFORMANCE &&\n        props.excelReportTitle &&\n        props.examPerformanceToPrint\n      ) {\n        return { status: true, data: props.examPerformanceToPrint };\n      }\n      // TOP 30 EXAM PERFORMANCE ######################\n      if (\n        props.reportTitle === reportTitleType.EXAM_DISTRICT_PERFORMANCE &&\n        props.excelReportTitle &&\n        props.exam30PerformanceToPrint\n      ) {\n        return { status: true, data: props.exam30PerformanceToPrint };\n      }\n      // EXAMINATION PROGRESS ######################\n      if (\n        props.reportTitle === reportTitleType.EXAMINATION_PROGRESS &&\n        props.excelReportTitle &&\n        props.examinationProgressToPrint\n      ) {\n        return { status: true, data: props.examinationProgressToPrint };\n      }\n      // CANDIDATE EXAM PERFORMANCE ######################\n      if (\n        props.reportTitle === reportTitleType.APPLICANTS_PERFORMANCE &&\n        props.excelReportTitle &&\n        props.candidateExamPerformanceToPrint\n      ) {\n        return { status: true, data: props.candidateExamPerformanceToPrint };\n      }\n      // TOP 30 CANDIDATE EXAM PERFORMANCE ######################\n      if (\n        props.reportTitle === reportTitleType.APPLICANTS_DISTRICT_PERFORMANCE &&\n        props.excelReportTitle &&\n        props.candidate30ExamPerformanceToPrint\n      ) {\n        return { status: true, data: props.candidate30ExamPerformanceToPrint };\n      }\n    }\n    return { status: false, data: [] };\n  };\n\n  return (\n    <div>\n      {/* LOAD MODAL FOR PERIOD ================================== */}\n      {props.modalFor === ModalForTypes.period &&\n        props.applicationPeriods &&\n        props.modalState && (\n          <Modal\n            title={\n              <div className=\"flex flex-row gap-4 items-center\">\n                <MdHistory className=\"text-5xl text-blue-600\" />\n                <div className=\"flex flex-col\">\n                  <span className=\"font-bold text-xl text-blue-600\">\n                    Choose a period\n                  </span>\n                </div>\n              </div>\n            }\n            backDrop={true}\n            theme={Themes.default}\n            close={() => props.selected_period && props.changeModalState(false)}\n            backDropClose={true}\n            widthSizeClass={ModalSize.extraLarge}\n            displayClose={true}\n            padding={{ title: true }}\n          >\n            <ChooseSession\n              allSession={props.applicationPeriods}\n              setSelectSession={(value: SessionPlanInterface | \"all\") => {\n                if (value !== \"all\") {\n                  props.setSelectedPeriod && props.setSelectedPeriod(value);\n                  props.onPeriodChange && props.onPeriodChange(value._id);\n                  props.changeModalState(false);\n                }\n              }}\n              chooseAll={false}\n              currentSelected={\n                props.selected_period ? props.selected_period : \"all\"\n              }\n            />\n          </Modal>\n        )}\n      {/* END LOAD MODAL FOR PERIOD ================================== */}\n\n      {/* LOAD MODAL FOR REPORT TYPES ================================== */}\n      {props.modalFor === ModalForTypes.title && props.modalState && (\n        <Modal\n          title={\n            <div className=\"flex flex-row gap-4 items-center\">\n              <CgFileDocument className=\"text-5xl text-blue-600\" />\n              <div className=\"flex flex-col\">\n                <span className=\"font-bold text-xl text-blue-600\">\n                  Choose exam report type\n                </span>\n              </div>\n            </div>\n          }\n          backDrop={true}\n          theme={Themes.default}\n          close={() => props.changeModalState(false)}\n          backDropClose={true}\n          widthSizeClass={ModalSize.extraLarge}\n          displayClose={true}\n          padding={{ title: true }}\n        >\n          <div className=\"px-2 pb-2\">\n            {Object.values(reportTitleType).map((item, i) => (\n              <div\n                onClick={() => {\n                  props.setReportTitle && props.setReportTitle(item);\n                  props.setExcelReportTitle && props.setExcelReportTitle(item);\n                  props.changeModalState(false);\n                }}\n                key={i + 1}\n                className={`flex items-center border rounded px-2 py-2 cursor-pointer group hover:bg-blue-100 hover:border-blue-500 mb-3 justify-between ${\n                  props.reportTitle && props.reportTitle === item\n                    ? \"bg-blue-50 border-blue-400\"\n                    : \"bg-white border-gray-200\"\n                }`}\n              >\n                <div>\n                  <div className=\"text-blue-500 text-sm font-medium italic\">\n                    Report type\n                  </div>\n                  <div className=\"font-bold\">\n                    {item}\n                    {item === reportTitleType.EXAM_DISTRICT_PERFORMANCE &&\n                      \" district\"}\n                  </div>\n                </div>\n                <div className=\"btn bg-blue-400 group-hover:bg-blue-600 text-white mr-2\">\n                  Choose\n                </div>\n              </div>\n            ))}\n          </div>\n        </Modal>\n      )}\n      {/* END LOAD MODAL FOR REPORT TYPES ================================== */}\n\n      {/* GENERATE DYNAMIC REPORT CONTENT MODAL */}\n      {props.generateReportModal &&\n        props.modalFor === ModalForTypes.generateReportModal &&\n        props.modalState && (\n          <Modal\n            title={\n              <div className=\"flex flex-row gap-4 items-center\">\n                {/* <IoBriefcase className=\"text-5xl text-gray-500\" /> */}\n                <div className=\"flex flex-col\">\n                  <span className=\"font-bold text-2xl text-gray-500\">\n                    Generating Report contents\n                  </span>\n                  <span className=\"text-sm text-blue-600 font-normal\">\n                    Generating {props.generateReportModal.reportType} Report\n                  </span>\n                </div>\n              </div>\n            }\n            backDrop={true}\n            theme={Themes.default}\n            close={() =>\n              props.setGenerateReportModal && props.setGenerateReportModal(null)\n            }\n            backDropClose={false}\n            widthSizeClass={ModalSize.medium}\n            displayClose={true}\n            padding={{ title: true }}\n          >\n            <div className=\"px-6\">\n              <div className=\"my-2 text-base text-gray-700 sm:text-lg\">\n                <div className=\"flex flex-col\">\n                  <label>Title</label>\n                  <input\n                    type=\"text\"\n                    className={`text-left input-white w-20 inline-block ${\n                      formError && formError.element === \"report_title\"\n                        ? \"border-red-500\"\n                        : \"border-gray-500\"\n                    } border-2`}\n                    placeholder=\"Sub Category Title\"\n                    value={props.excelReportTitle ? props.excelReportTitle : \"\"}\n                    onChange={(e) => {\n                      props.setExcelReportTitle &&\n                        props.setExcelReportTitle(e.target.value);\n                      setFormError(null);\n                    }}\n                    // disabled={props.loading}\n                  />\n                  {formError && formError.element === \"report_title\" && (\n                    <span className=\"text-red-500\">{formError.msg}</span>\n                  )}\n                </div>\n                <div className=\"flex flex-col mt-2\">\n                  <label>Report content</label>\n                  {/* // EXAM PREPARATION ###################### */}\n                  {props.reportTitle &&\n                    props.reportTitle === reportTitleType.EXAM_PREPARATION && (\n                      <div className=\"grid grid-cols-2 md:grid-cols-3 items-center gap-2 mt-2\">\n                        {props.examPreparationReportContent &&\n                          props.examPreparationReportContent.map(\n                            (item, index) => (\n                              <div\n                                key={index}\n                                className={`flex items-center gap-1 ${\n                                  isChangeAllowed(item.key)\n                                    ? \"cursor-pointer\"\n                                    : \"cursor-not-allowed\"\n                                }`}\n                                onClick={() =>\n                                  isChangeAllowed(item.key) &&\n                                  updateExamPreparationReportContent(item.key)\n                                }\n                                title={\n                                  !isChangeAllowed(item.key)\n                                    ? \"Required for every report!\"\n                                    : \"\"\n                                }\n                              >\n                                {item.status ? (\n                                  <MdCheckBox className=\"w-6 h-6 text-blue-700\" />\n                                ) : (\n                                  <MdCheckBoxOutlineBlank className=\"w-6 h-6\" />\n                                )}\n                                <span>{item.title}</span>\n                              </div>\n                            )\n                          )}\n                      </div>\n                    )}\n                  {/* // EXAM PERFORMANCE ###################### */}\n                  {props.reportTitle &&\n                    props.reportTitle === reportTitleType.EXAM_PERFORMANCE && (\n                      <div className=\"grid grid-cols-2 md:grid-cols-3 items-center gap-2 mt-2\">\n                        {props.examPerformanceReportContent &&\n                          props.examPerformanceReportContent.map(\n                            (item, index) => (\n                              <div\n                                key={index}\n                                className={`flex items-center gap-1 ${\n                                  isChangeAllowed(item.key)\n                                    ? \"cursor-pointer\"\n                                    : \"cursor-not-allowed\"\n                                }`}\n                                onClick={() =>\n                                  isChangeAllowed(item.key) &&\n                                  updateExamPerformanceReportContent(item.key)\n                                }\n                                title={\n                                  !isChangeAllowed(item.key)\n                                    ? \"Required for every report!\"\n                                    : \"\"\n                                }\n                              >\n                                {item.status ? (\n                                  <MdCheckBox className=\"w-6 h-6 text-blue-700\" />\n                                ) : (\n                                  <MdCheckBoxOutlineBlank className=\"w-6 h-6\" />\n                                )}\n                                <span>{item.title}</span>\n                              </div>\n                            )\n                          )}\n                      </div>\n                    )}\n                  {/* // TOP 30 EXAM PERFORMANCE ###################### */}\n                  {props.reportTitle &&\n                    props.reportTitle ===\n                      reportTitleType.EXAM_DISTRICT_PERFORMANCE && (\n                      <div className=\"grid grid-cols-2 md:grid-cols-3 items-center gap-2 mt-2\">\n                        {props.exam30PerformanceReportContent &&\n                          props.exam30PerformanceReportContent.map(\n                            (item, index) => (\n                              <div\n                                key={index}\n                                className={`flex items-center gap-1 ${\n                                  isChangeAllowed(item.key)\n                                    ? \"cursor-pointer\"\n                                    : \"cursor-not-allowed\"\n                                }`}\n                                onClick={() =>\n                                  isChangeAllowed(item.key) &&\n                                  updateExamPerformanceReportContent(item.key)\n                                }\n                                title={\n                                  !isChangeAllowed(item.key)\n                                    ? \"Required for every report!\"\n                                    : \"\"\n                                }\n                              >\n                                {item.status ? (\n                                  <MdCheckBox className=\"w-6 h-6 text-blue-700\" />\n                                ) : (\n                                  <MdCheckBoxOutlineBlank className=\"w-6 h-6\" />\n                                )}\n                                <span>{item.title}</span>\n                              </div>\n                            )\n                          )}\n                      </div>\n                    )}\n                  {/* // EXAMINATION PROGRESS ###################### */}\n                  {props.reportTitle &&\n                    props.reportTitle ===\n                      reportTitleType.EXAMINATION_PROGRESS && (\n                      <div className=\"grid grid-cols-2 md:grid-cols-3 items-center gap-2 mt-2\">\n                        {props.examinationProgressReportContent &&\n                          props.examinationProgressReportContent.map(\n                            (item, index) => (\n                              <div\n                                key={index}\n                                className={`flex items-center gap-1 ${\n                                  isChangeAllowed(item.key)\n                                    ? \"cursor-pointer\"\n                                    : \"cursor-not-allowed\"\n                                }`}\n                                onClick={() =>\n                                  isChangeAllowed(item.key) &&\n                                  updateExaminationProgressReportContent(\n                                    item.key\n                                  )\n                                }\n                                title={\n                                  !isChangeAllowed(item.key)\n                                    ? \"Required for every report!\"\n                                    : \"\"\n                                }\n                              >\n                                {item.status ? (\n                                  <MdCheckBox className=\"w-6 h-6 text-blue-700\" />\n                                ) : (\n                                  <MdCheckBoxOutlineBlank className=\"w-6 h-6\" />\n                                )}\n                                <span>{item.title}</span>\n                              </div>\n                            )\n                          )}\n                      </div>\n                    )}\n                  {/* // EXAMINATION PROGRESS ###################### */}\n                  {/* // CANDIDATE EXAM PERFORMANCE ###################### */}\n                  {props.reportTitle &&\n                    props.reportTitle ===\n                      reportTitleType.APPLICANTS_PERFORMANCE && (\n                      <div className=\"grid grid-cols-2 md:grid-cols-3 items-center gap-2 mt-2\">\n                        {props.candidateExamPerformanceReportContent &&\n                          props.candidateExamPerformanceReportContent.map(\n                            (item, index) => (\n                              <div\n                                key={index}\n                                className={`flex items-center gap-1 ${\n                                  isChangeAllowed(item.key)\n                                    ? \"cursor-pointer\"\n                                    : \"cursor-not-allowed\"\n                                }`}\n                                onClick={() =>\n                                  isChangeAllowed(item.key) &&\n                                  updateCandidateExamPerformanceReportContent(\n                                    item.key\n                                  )\n                                }\n                                title={\n                                  !isChangeAllowed(item.key)\n                                    ? \"Required for every report!\"\n                                    : \"\"\n                                }\n                              >\n                                {item.status ? (\n                                  <MdCheckBox className=\"w-6 h-6 text-blue-700\" />\n                                ) : (\n                                  <MdCheckBoxOutlineBlank className=\"w-6 h-6\" />\n                                )}\n                                <span>{item.title}</span>\n                              </div>\n                            )\n                          )}\n                      </div>\n                    )}\n                  {/* // END EXAMINATION PROGRESS ###################### */}\n                  {/* // TOP 30 CANDIDATE EXAM PERFORMANCE ###################### */}\n                  {props.reportTitle &&\n                    props.reportTitle ===\n                      reportTitleType.APPLICANTS_DISTRICT_PERFORMANCE && (\n                      <div className=\"grid grid-cols-2 md:grid-cols-3 items-center gap-2 mt-2\">\n                        {props.candidate30ExamPerformanceReportContent &&\n                          props.candidate30ExamPerformanceReportContent.map(\n                            (item, index) => (\n                              <div\n                                key={index}\n                                className={`flex items-center gap-1 ${\n                                  isChangeAllowed(item.key)\n                                    ? \"cursor-pointer\"\n                                    : \"cursor-not-allowed\"\n                                }`}\n                                onClick={() =>\n                                  isChangeAllowed(item.key) &&\n                                  updateCandidateExamPerformanceReportContent(\n                                    item.key\n                                  )\n                                }\n                                title={\n                                  !isChangeAllowed(item.key)\n                                    ? \"Required for every report!\"\n                                    : \"\"\n                                }\n                              >\n                                {item.status ? (\n                                  <MdCheckBox className=\"w-6 h-6 text-blue-700\" />\n                                ) : (\n                                  <MdCheckBoxOutlineBlank className=\"w-6 h-6\" />\n                                )}\n                                <span>{item.title}</span>\n                              </div>\n                            )\n                          )}\n                      </div>\n                    )}\n                  {/* // END TOP 30 CANDIDATE EXAM PERFORMANCE ###################### */}\n                  {formError && formError.element === \"report_content\" && (\n                    <span className=\"text-red-500\">{formError.msg}</span>\n                  )}\n                </div>\n              </div>\n              <div className=\"flex justify-between mb-2 mt-4\">\n                <div\n                  className={`flex items-center gap-1 cursor-pointer`}\n                  onClick={() => resetReportContent(selectAll)}\n                >\n                  {selectAll ? (\n                    <MdCheckBox className=\"w-6 h-6 text-blue-700\" />\n                  ) : (\n                    <MdCheckBoxOutlineBlank className=\"w-6 h-6\" />\n                  )}\n                  <span>Select all</span>\n                </div>\n\n                {showGenerateBtn().status && (\n                  <ExportToExcel\n                    fileData={showGenerateBtn().data}\n                    fileName={props.excelReportTitle!}\n                    btnName=\"Generate\"\n                  />\n                )}\n              </div>\n            </div>\n          </Modal>\n        )}\n      {/* END GENERATE DYNAMIC REPORT CONTENT MODAL */}\n\n      {/* LOAD MODAL FOR CHOOSING EXAM ================================== */}\n      {props.modalFor === ModalForTypes.choose_exam &&\n        props.modalState &&\n        props.AllExamData && (\n          <Modal\n            title={\n              <div className=\"flex flex-row gap-4 items-center\">\n                <CgFileDocument className=\"text-5xl text-blue-600\" />\n                <div className=\"flex flex-col\">\n                  <span className=\"font-bold text-xl text-blue-600\">\n                    Choose exam\n                  </span>\n                </div>\n              </div>\n            }\n            backDrop={true}\n            theme={Themes.default}\n            close={() => props.changeModalState(false)}\n            backDropClose={true}\n            widthSizeClass={ModalSize.extraLarge}\n            displayClose={true}\n            padding={{ title: true }}\n          >\n            <div className=\"px-2 pb-2\">\n              <div className=\"w-full py-2\">\n                <input\n                  onChange={(e) => setSearchInput(e.target.value)}\n                  type=\"text\"\n                  value={searchInput}\n                  placeholder=\"Search...\"\n                  className=\"w-full bg-white py-2 px-3 rounded border border-gray-400\"\n                  disabled={props.AllExamData.length <= 0 ? true : false}\n                />\n              </div>\n              <div\n                onClick={() => {\n                  props.SetReportCourseId(null);\n                  props.changeModalState(false);\n                }}\n                className={`flex items-center border rounded px-2 py-2 cursor-pointer group hover:bg-blue-100 hover:border-blue-500 mb-3 justify-between ${\n                  props.thisExam === null\n                    ? \"bg-blue-50 border-blue-400\"\n                    : \"bg-white border-gray-200\"\n                }`}\n              >\n                <div>\n                  <div className=\"text-sm font-medium italic\">\n                    code: <span className=\"text-blue-500\">-</span>\n                  </div>\n                  <div className=\"font-bold text-lg\">All exams</div>\n                </div>\n                <div className=\"btn bg-blue-400 group-hover:bg-blue-600 text-white mr-2\">\n                  Choose\n                </div>\n              </div>\n              {searchExamData(props.AllExamData, searchInput).map((item, i) => (\n                <div\n                  onClick={() => {\n                    props.SetReportCourseId(item);\n                    props.changeModalState(false);\n                  }}\n                  key={i + 1}\n                  className={`flex items-center border rounded px-2 py-2 cursor-pointer group hover:bg-blue-100 hover:border-blue-500 mb-3 justify-between ${\n                    props.thisExam &&\n                    props.thisExam.course_id === item.course_id\n                      ? \"bg-blue-50 border-blue-400\"\n                      : \"bg-white border-gray-200\"\n                  }`}\n                >\n                  <div>\n                    <div className=\"text-sm font-medium italic\">\n                      code:{\" \"}\n                      <span className=\"text-blue-500\">{item.course_code}</span>\n                    </div>\n                    <div className=\"font-bold text-lg\">{item.course_name}</div>\n                  </div>\n                  <div className=\"btn bg-blue-400 group-hover:bg-blue-600 text-white mr-2\">\n                    Choose\n                  </div>\n                </div>\n              ))}\n            </div>\n          </Modal>\n        )}\n      {/* END LOAD MODAL FOR CHOOSING EXAM ================================== */}\n\n      {/* LOAD MODAL FOR CHOOSING DISTRICT ================================== */}\n      {props.modalFor === ModalForTypes.choose_district && props.modalState && (\n        <Modal\n          title={\n            <div className=\"flex flex-row gap-4 items-center\">\n              <CgFileDocument className=\"text-5xl text-blue-600\" />\n              <div className=\"flex flex-col\">\n                <span className=\"font-bold text-xl text-blue-600\">\n                  Choose district\n                </span>\n              </div>\n            </div>\n          }\n          backDrop={true}\n          theme={Themes.default}\n          close={() =>\n            !isEmptyOrSpaces(districtId) && props.changeModalState(false)\n          }\n          backDropClose={true}\n          widthSizeClass={ModalSize.medium}\n          displayClose={true}\n          padding={{ title: true }}\n        >\n          <div className=\"px-2 pb-2 \">\n            {loadingLocation ? (\n              <Loading />\n            ) : (\n              <section className=\"pb-8 px-7 \">\n                {/* <div className=\"grid grid-cols-1 \"> */}\n                <label className=\"uppercase md:text-sm text-xs text-gray-500 text-light font-semibold\">\n                  District\n                </label>\n                {props.locations.length > 0 ? (\n                  <div className=\"\">\n                    <select\n                      className={`py-3 px-3 w-full rounded border-2 bg-white mt-1 focus:outline-none ${\n                        error && error.element === \"district\"\n                          ? \"border-red-400 focus:border-red-800\"\n                          : \"border-gray-400 focus:border-gray-800\"\n                      }`}\n                      value={districtId}\n                      onChange={(e) => {\n                        setDistrictId(e.target.value);\n                        selectDistrict(e.target.value);\n                      }}\n                    >\n                      <option value=\"all\">Select district</option>\n                      {FC_DistinctDistrict(\n                        LocationsInArray(props.locations)\n                      ).map((item, index) => (\n                        <option\n                          key={index + item.district_id}\n                          value={item.district_id}\n                        >\n                          {item.district_name}\n                        </option>\n                      ))}\n                    </select>\n                    {error && error.element === \"district\" && (\n                      <p className=\"text-xs italic text-red-500 mt-3\">\n                        {error.msg}\n                      </p>\n                    )}\n                  </div>\n                ) : (\n                  <div className=\"alert-info\">No district found</div>\n                )}\n                {/* </div> */}\n              </section>\n            )}\n          </div>\n        </Modal>\n      )}\n      {/* END LOAD MODAL FOR CHOOSING DISTRICT ================================== */}\n    </div>\n  );\n};\n\nconst mapStateToProps = ({\n  locations,\n}: StoreState): {\n  locations: RoomLocationInterface[];\n} => {\n  return {\n    locations: locations.roomLocation,\n  };\n};\n\nexport default React.memo(\n  connect(mapStateToProps, {\n    getAllRoom,\n    SetReportDistrictId,\n    SetReportCourseId,\n  })(ExamReportModals)\n);\n","import axios from \"axios\";\nimport React, { Component } from \"react\";\nimport { MdLock, MdLocationOn } from \"react-icons/md\";\nimport { connect } from \"react-redux\";\nimport { PushPopupAlert, schoolLevelsStoreInterface } from \"../../actions\";\nimport { getAllRoom } from \"../../actions/location\";\nimport {\n  blockUserToSystem,\n  unBlockUserToSystem,\n  resetUserAccess,\n} from \"../../actions/users\";\nimport { PopupAlertData } from \"../../components/Alert/Popup\";\nimport Loading from \"../../components/Loading/Loading\";\nimport NoResult, { NoResultThemes } from \"../../components/NoResult/NoResult\";\nimport Table from \"../../components/Table/Table\";\nimport { PopupAlertTheme } from \"../../interfaces/popupAlert\";\nimport { StoreState } from \"../../reducers\";\nimport {\n  getRoleById,\n  capitalizeFirstLetter,\n  getInstituteById,\n} from \"../../shared/dataTest\";\nimport {\n  RoomLocationInterface,\n  LocationRoomTableInterface,\n  DistrictInterface,\n  SystemUserRoleInterface,\n  UserInterface,\n  AccessTaskInterface,\n  SchoolsInterface,\n} from \"../../shared/interfaces\";\nimport { API } from \"../../utils/api\";\nimport { errorToText } from \"../../utils/errors\";\nimport { UserAccess } from \"./UserAccess\";\nimport UserRole from \"./UserRole\";\nimport profile from \"../../shared/blank_profile.png\"; // with im\n\nexport const getUserById = (users: UserInterface[], userId: string) => {\n  return users.find((item) => item.user_id === userId);\n};\n\nexport enum ModalState {\n  View_User = \"View User Info\",\n  Add_Access = \"Add Access To User\",\n  Update_Access = \"Update User Access\",\n  Close_Modal = \"Close Modal\",\n}\n\n// Table replaced with Emmy's function\nexport const LocationsInArray = (\n  LocationData: RoomLocationInterface[]\n): LocationRoomTableInterface[] | [] => {\n  let locationTemp: LocationRoomTableInterface[] = [];\n  for (let p in LocationData) {\n    let districts = LocationData[p].districts;\n    for (let d in districts) {\n      let centers = districts[d].centers;\n      for (let c in centers) {\n        let rooms = centers[c].rooms;\n        for (let r in rooms) {\n          locationTemp.push({\n            province_id: LocationData[p]._id,\n            province_name: LocationData[p].province_name,\n            district_id: districts[d]._id,\n            district_name: districts[d].district_name,\n            center_id: centers[c]._id,\n            center_name: centers[c].center_name,\n            room_id: rooms[r]._id,\n            room_name: rooms[r].room_number.toString(),\n            capacity: rooms[r].capacity,\n            occupied: rooms[r].occupied,\n          });\n        }\n      }\n    }\n  }\n  return locationTemp;\n};\n\ninterface AppProps {\n  users: UserInterface[];\n  roleList: SystemUserRoleInterface[];\n  userTypes: \"all\" | \"active\" | \"blocked\";\n  loadingUser: boolean;\n  schoolLevels: schoolLevelsStoreInterface;\n  setLoadingUser: (value: boolean) => void;\n  manageUser: UserInterface | null;\n  setManageUser: (value: UserInterface | null) => void;\n  changeRole: boolean;\n  setChangeRole: (value: boolean) => void;\n  currentPage: number;\n\n  // REDUX =================\n  allRoom: RoomLocationInterface[];\n  getAllRoom: Function;\n  blockUserToSystem: Function;\n  unBlockUserToSystem: Function;\n  resetUserAccess: Function;\n  PushPopupAlert: (alert: PopupAlertData) => void;\n}\n\ninterface AppStates {\n  manageUserId: string;\n  loadingRequest: boolean;\n  loading: boolean;\n  loadingRequestType: \"RESET\" | \"STATUS\" | \"CHANGE_ROLE\" | null;\n  roomList: RoomLocationInterface[] | null;\n  roomTable: LocationRoomTableInterface[] | null;\n  userAccess: AccessTaskInterface[] | null;\n  currentAccess: AccessTaskInterface | null;\n}\n\nclass UserList extends Component<AppProps, AppStates> {\n  constructor(props: AppProps) {\n    super(props);\n\n    this.state = {\n      manageUserId: \"\",\n      loadingRequest: false,\n      loading: true,\n      loadingRequestType: null,\n      roomList: null,\n      roomTable: null,\n      userAccess: null,\n      currentAccess: null,\n    };\n  }\n\n  setManageUserId = (value: string) => {\n    this.setState({ manageUserId: value });\n  };\n\n  setLoadingRequest = (value: boolean) => {\n    this.setState({ loadingRequest: value });\n  };\n\n  setLoading = (value: boolean) => {\n    this.setState({ loading: value });\n  };\n\n  setLoadingRequestType = (\n    value: \"RESET\" | \"STATUS\" | \"CHANGE_ROLE\" | null\n  ) => {\n    this.setState({ loadingRequestType: value });\n  };\n\n  setRoomList = (value: RoomLocationInterface[] | null) => {\n    this.setState({ roomList: value });\n  };\n\n  setRoomTables = (value: LocationRoomTableInterface[] | null) => {\n    this.setState({ roomTable: value });\n  };\n\n  setCurrentAccess = (value: AccessTaskInterface | null) => {\n    this.setState({ currentAccess: value });\n  };\n\n  setUserAccess = (value: AccessTaskInterface[] | null) => {\n    this.setState({ userAccess: value });\n  };\n\n  componentDidMount = () => {\n    if (this.props.allRoom.length === 0) {\n      this.props.getAllRoom(\n        (status: boolean, msg: string, data?: RoomLocationInterface[]) => {\n          this.setLoading(status);\n          this.props.setLoadingUser(status);\n          if (!status && msg.length > 0) {\n            this.props.PushPopupAlert({\n              title: msg,\n              theme: PopupAlertTheme.danger,\n            });\n          }\n          if (data && data.length > 0) {\n            this.setRoomList(data);\n            this.setRoomTables(LocationsInArray(data));\n          }\n        }\n      );\n    } else if (this.state.loading) {\n      this.setRoomList(this.props.allRoom);\n      this.setRoomTables(LocationsInArray(this.props.allRoom));\n      this.props.setLoadingUser(false);\n      this.setLoading(false);\n    }\n  };\n\n  tableData = (): JSX.Element[] => {\n    if (this.props.loadingUser || this.state.loading) {\n      return [\n        <tr\n          key={Math.random()}\n          className=\"border-b border-gray-200 hover:bg-gray-100\"\n        >\n          <td className=\"p-3 text-center\" colSpan={8}>\n            <Loading />\n          </td>\n        </tr>,\n      ];\n    }\n\n    let data: UserInterface[] = this.props.users;\n    if (data.length <= 0) {\n      return [\n        <tr\n          key={Math.random()}\n          className=\"border-b border-gray-200 hover:bg-gray-100\"\n        >\n          <td className=\"p-3 text-center\" colSpan={8}>\n            No Data Found\n          </td>\n        </tr>,\n      ];\n    }\n\n    const pageNumber: number =\n      this.props.currentPage > 1 ? this.props.currentPage * 10 : 0;\n\n    return data.map((user: UserInterface, index: number) => (\n      <tr\n        key={index + Math.random()}\n        className=\"border-b border-gray-200 hover:bg-gray-100 group cursor-pointer\"\n        onClick={() => {\n          this.props.setManageUser(user);\n          this.setManageUserId(user.user_id);\n        }}\n      >\n        <td className=\"p-3 text-left whitespace-nowrap\">\n          {pageNumber + index + 1}\n        </td>\n        <td className=\"p-3 text-left\">\n          <span>\n            {user.user_info &&\n              user.user_info.fname + \" \" + user.user_info.lname}\n          </span>\n        </td>\n        <td className=\"p-3 text-left\">{user.email}</td>\n        {/* <td className=\"p-3 text-left\">{user.phone_number}</td> */}\n        <td className=\"p-3 text-left\">\n          {user.user_info && user.user_info.sex === \"M\" ? \"Male\" : \"Female\"}\n        </td>\n        <td className=\"p-3 text-left text-blue-700 text-base font-medium\">\n          {user.default_access &&\n            user.default_access.system_user_role_id &&\n            user.default_access.system_user_role_id && (\n              <span\n                className={`px-2 py-1 font-semibold rounded text-blue-700 bg-blue-100 dark:bg-blue-700 dark:text-blue-100`}\n              >\n                {getRoleById(\n                  this.props.roleList,\n                  user.default_access.system_user_role_id\n                )?.role &&\n                  capitalizeFirstLetter(\n                    getRoleById(\n                      this.props.roleList,\n                      user.default_access.system_user_role_id\n                    )?.role\n                  )}\n              </span>\n            )}\n        </td>\n        {/* {userTypes === \"all\" && (\n          <td>\n            {user.is_active ? (\n              <span className={`px-2 py-1 font-semibold text-green-700`}>\n                Active\n              </span>\n            ) : (\n              <span className={`px-2 py-1 font-semibold text-red-700`}>\n                Blocked\n              </span>\n            )}\n          </td>\n        )} */}\n        <td className=\"px-3 text-center\">\n          <button\n            className=\"btn bg-gray-200 group-hover:bg-blue-700 group-hover:text-white focus:outline-none\"\n            title=\"Manage User Access\"\n            onClick={() => {\n              this.props.setManageUser(user);\n              this.setManageUserId(user.user_id);\n            }}\n          >\n            Manage\n          </button>\n        </td>\n      </tr>\n    ));\n  };\n\n  blockUser = async (user_id: string, actionType: boolean) => {\n    if (!user_id) {\n      this.props.PushPopupAlert({\n        title: \"User Access is required doesn't exist\",\n        theme: PopupAlertTheme.danger,\n      });\n    }\n\n    this.setLoadingRequest(true);\n\n    if (\n      !window.confirm(\n        `Are sure you want to ${actionType ? \"block\" : \"activate\"} this user?`\n      )\n    ) {\n      return this.setLoadingRequest(false);\n    }\n\n    try {\n      const res = await axios.patch(\n        `${API.AUTH}/auth/user/disactive/${user_id}`,\n        {\n          is_active: !actionType,\n        }\n      );\n      if (res) {\n        console.log(\"====================================\");\n        console.log({ blockUserToSystem: res });\n        console.log(\"====================================\");\n        actionType\n          ? this.props.blockUserToSystem(user_id, this.props.currentPage)\n          : this.props.unBlockUserToSystem(user_id, this.props.currentPage);\n\n        this.props.PushPopupAlert({\n          title: `User has been ${actionType ? \"blocked\" : \"activated\"}!`,\n          theme: PopupAlertTheme.info,\n        });\n      }\n    } catch (error) {\n      console.error({ blockUser_ERROR: error });\n      this.props.PushPopupAlert({\n        title: errorToText(error),\n        theme: PopupAlertTheme.danger,\n      });\n    }\n\n    this.setLoadingRequest(false);\n    user_id = \"\";\n  };\n\n  restUserAccess = async (user_id: string) => {\n    if (!user_id) {\n      this.props.PushPopupAlert({\n        title: \"User Access is required doesn't exist\",\n        theme: PopupAlertTheme.warning,\n      });\n    }\n\n    if (!window.confirm(`Are sure you want to reset to default access?`)) {\n      return this.setLoadingRequest(false);\n    }\n\n    this.setLoadingRequest(true);\n    this.setLoadingRequestType(\"RESET\");\n\n    try {\n      const res = await axios.delete(\n        `${API.USER}/access/custom/user/${user_id}`\n      );\n      res && this.props.resetUserAccess(user_id, this.props.currentPage);\n      let resetedAccess: UserInterface | undefined = this.props.users.find(\n        (user) => user.user_id === user_id\n      );\n      if (resetedAccess) {\n        resetedAccess.default_access &&\n          this.setUserAccess(resetedAccess.default_access.access);\n        this.props.PushPopupAlert({\n          title: `Resetting User Access complete successfully`,\n          theme: PopupAlertTheme.info,\n        });\n        this.setCurrentAccess(null);\n      }\n    } catch (error) {\n      console.error({ reseting_user_access: error });\n      this.props.PushPopupAlert({\n        title: errorToText(error),\n        theme: PopupAlertTheme.danger,\n      });\n    }\n\n    this.setLoadingRequest(false);\n    this.setLoadingRequestType(null);\n    user_id = \"\";\n  };\n\n  distinctDistrict = (\n    location: RoomLocationInterface[],\n    province_id?: string\n  ): DistrictInterface[] => {\n    let ids: string[] = [],\n      result: DistrictInterface[] = [];\n\n    if (province_id) {\n      result = location.find((item) => item._id === province_id)\n        ? location.find((item) => item._id === province_id)!.districts\n          ? location.find((item) => item._id === province_id)!.districts\n          : []\n        : [];\n    } else {\n      for (const key in location) {\n        if (Object.prototype.hasOwnProperty.call(location, key)) {\n          for (const keyDistrict in location[key].districts) {\n            if (\n              Object.prototype.hasOwnProperty.call(\n                location[key].districts,\n                keyDistrict\n              )\n            ) {\n              if (!ids.includes(location[key].districts[keyDistrict]._id)) {\n                ids.push(location[key].districts[keyDistrict]._id);\n                result.push(location[key].districts[keyDistrict]);\n              }\n            }\n          }\n        }\n      }\n    }\n\n    return result;\n  };\n\n  render() {\n    const DATA_GetUser = this.props.users.find(\n      (user) => user.user_id === this.state.manageUserId\n    );\n    const DATA_GetRoleById =\n      DATA_GetUser && DATA_GetUser!.default_access\n        ? getRoleById(\n            this.props.roleList,\n            DATA_GetUser!.default_access!.system_user_role_id\n          )\n        : undefined;\n\n    const DATA_ThisRoom =\n      this.state.roomTable && DATA_GetUser\n        ? this.state.roomTable.find(\n            (room) => room.room_id === DATA_GetUser!.default_access?.room_id\n          )\n        : undefined;\n    return (\n      <div>\n        {!this.props.manageUser && (\n          <div className=\"grid md:grid-cols-5 gap-2 mb-5\">\n            <div className={`md:col-span-5 rounded`}>\n              <div className=\"my-2 flex sm:flex-row flex-col justify-between\">\n                <div className=\"flex flex-col md:flex-row gap-1 items-center mx-1.5\">\n                  {/* <span className=\"text-lg\">All User</span>\n                  <MdChevronRight className=\"w-7 h-7\" />\n                  <span className=\"text-lg underline\">All User</span> */}\n                </div>\n              </div>\n              {this.props.users && (\n                <Table\n                  columns={[\n                    { columnTitle: \"#\", alignText: \"left\", padding: \"p-3\" },\n                    { columnTitle: \"Names\", alignText: \"left\", padding: \"p-3\" },\n                    { columnTitle: \"Email\", alignText: \"left\", padding: \"p-3\" },\n                    {\n                      columnTitle: \"Gender\",\n                      alignText: \"left\",\n                      padding: \"p-3\",\n                    },\n                    { columnTitle: \"Role\", alignText: \"left\", padding: \"p-3\" },\n                    // { columnTitle: \"Status\", alignText: \"left\", padding: \"p-3\" },\n                    { columnTitle: \"\", alignText: \"left\", padding: \"p-3\" },\n                  ]}\n                  rows={this.tableData}\n                  pagination={false}\n                  search={true}\n                  thColor=\"gray\"\n                  loading={this.props.loadingUser || this.state.loading}\n                />\n              )}\n            </div>\n          </div>\n        )}\n\n        {/* -------------------------------------------------------- */}\n\n        {this.props.manageUser && (\n          <div className=\"bg-gray-100 h-100\">\n            {/* header */}\n            <div className=\"bg-white border-b border-t px-4 py-2 flex flex-col md:flex-row items-center gap-x-14\">\n              {DATA_GetUser ? (\n                <div\n                  key={DATA_GetUser!.user_id + Math.random()}\n                  className=\"flex flex-col md:flex-row md:items-start items-center w-full gap-3\"\n                >\n                  <img\n                    src={\n                      DATA_GetUser!.user_info.photo !== \"pic\"\n                        ? DATA_GetUser!.user_info.photo\n                        : profile\n                    }\n                    alt=\"\"\n                    className=\"rounded-full w-32 h-32\"\n                  />\n                  <div className=\"flex flex-col gap-1 items-start w-full\">\n                    <span className=\"text-2xl font-semibold\">\n                      {DATA_GetUser!.user_info.fname +\n                        \" \" +\n                        DATA_GetUser!.user_info.lname}\n                    </span>\n                    <div className=\"flex items-center\">\n                      <MdLock className=\"w-5 h-5\" />\n                      <span className=\"text-lg font-medium\">\n                        {DATA_GetRoleById && DATA_GetRoleById.role}\n                      </span>\n                    </div>\n                    <div className=\"flex items-center gap-1\">\n                      <span className=\"text-gray-500\">Level:</span>\n                      <span className=\"text-base font-medium\">\n                        {DATA_GetRoleById && DATA_GetRoleById.room_required\n                          ? \"Room\"\n                          : DATA_GetRoleById &&\n                            DATA_GetRoleById.education_institution_required\n                          ? \"Institute\"\n                          : \"-\"}\n                      </span>\n                    </div>\n                    {DATA_GetRoleById &&\n                    DATA_GetRoleById.education_institution_required ? (\n                      <div className=\"flex items-center gap-1\">\n                        <span className=\"text-gray-500\">Institute:</span>\n                        <span className=\"text-base font-medium\">\n                          {DATA_GetUser!.default_access &&\n                          this.props.schoolLevels.education_categories &&\n                          getInstituteById(\n                            this.props.schoolLevels.education_categories,\n                            DATA_GetUser!.default_access!\n                              .education_institution_id\n                          )\n                            ? getInstituteById(\n                                this.props.schoolLevels.education_categories,\n                                DATA_GetUser!.default_access!\n                                  .education_institution_id\n                              )!.education_category_title\n                            : \"Unknown Institute\"}\n                        </span>\n                      </div>\n                    ) : (\n                      DATA_GetRoleById &&\n                      DATA_GetRoleById.room_required && (\n                        <div className=\"flex items-center gap-1\">\n                          {/* <span className=\"text-gray-500\">Room:</span> */}\n                          <MdLocationOn className=\"text-gray-500\" />\n                          {DATA_ThisRoom && (\n                            <span className=\"text-base font-medium\">\n                              {DATA_ThisRoom?.district_name +\n                                \" - \" +\n                                DATA_ThisRoom?.center_name +\n                                \" - Room \" +\n                                DATA_ThisRoom?.room_name}\n                            </span>\n                          )}\n                        </div>\n                      )\n                    )}\n                  </div>\n                </div>\n              ) : (\n                <NoResult\n                  theme={NoResultThemes.Dark}\n                  value={\"User info not found\"}\n                />\n              )}\n              {DATA_GetUser && (\n                <div\n                  key={DATA_GetUser!.user_id + Math.random()}\n                  className=\"flex flex-col w-full\"\n                >\n                  <div className=\"flex items-center gap-1\">\n                    <span className=\"text-gray-500\">NID:</span>\n                    <span className=\"text-base font-medium\">\n                      {DATA_GetUser!.n_id}\n                    </span>\n                  </div>\n                  <div className=\"flex items-center gap-1\">\n                    <span className=\"text-gray-500\">Email:</span>\n                    <span className=\"text-base font-medium\">\n                      {DATA_GetUser!.email}\n                    </span>\n                  </div>\n                  <div className=\"flex items-center gap-1\">\n                    <span className=\"text-gray-500\">Phone:</span>\n                    <span className=\"text-base font-medium\">\n                      {DATA_GetUser!.phone_number}\n                    </span>\n                  </div>\n                  <div className=\"flex items-center gap-1\">\n                    <span className=\"text-gray-500\">Status:</span>\n                    <span className=\"text-base font-medium\">\n                      {DATA_GetUser!.is_active === false ? \"Blocked\" : \"Active\"}\n                    </span>\n                  </div>\n                  <div className=\"flex items-center gap-1\">\n                    {DATA_GetUser!.custome_access && (\n                      <button\n                        className={`px-2 py-1 font-semibold text-gray-50 inline-flex items-center rounded ${\n                          this.state.loadingRequestType &&\n                          this.state.loadingRequestType === \"RESET\"\n                            ? \"cursor-wait bg-gray-400\"\n                            : \"bg-gray-600\"\n                        }`}\n                        onClick={() =>\n                          this.restUserAccess(DATA_GetUser!.user_id)\n                        }\n                        disabled={this.state.loadingRequest}\n                      >\n                        <MdLock className=\"w-4 h-4 fill-current\" />\n                        <span>\n                          {this.state.loadingRequestType &&\n                          this.state.loadingRequestType === \"RESET\"\n                            ? \"Resetting...\"\n                            : \"Reset Access\"}\n                        </span>\n                      </button>\n                    )}\n                    {!this.props.changeRole && (\n                      <button\n                        className=\"bg-yellow-300 hover:bg-yellow-400 px-2 py-1 font-semibold text-black inline-flex items-center rounded\"\n                        onClick={() => this.props.setChangeRole(true)}\n                      >\n                        <MdLock className=\"w-4 h-4 fill-current\" />\n                        <span>Change Role</span>\n                      </button>\n                    )}\n                    {DATA_GetUser!.is_active ? (\n                      <button\n                        className={`px-2 py-1 font-semibold text-gray-100 inline-flex items-center rounded ${\n                          this.state.loadingRequestType &&\n                          this.state.loadingRequestType === \"STATUS\"\n                            ? \"cursor-wait bg-red-500\"\n                            : \"bg-red-700\"\n                        }`}\n                        onClick={() =>\n                          !this.state.loadingRequest &&\n                          this.props.manageUser &&\n                          this.blockUser(\n                            DATA_GetUser!.user_id,\n                            DATA_GetUser!.is_active\n                          )\n                        }\n                        disabled={this.state.loadingRequest}\n                      >\n                        <MdLock className=\"w-4 h-4 fill-current\" />\n                        <span>\n                          {this.state.loadingRequestType &&\n                          this.state.loadingRequestType === \"RESET\"\n                            ? \"Loading...\"\n                            : \"Block user\"}\n                        </span>\n                      </button>\n                    ) : (\n                      <button\n                        className={`px-2 py-1 font-semibold text-gray-100 inline-flex items-center rounded ${\n                          this.state.loadingRequestType &&\n                          this.state.loadingRequestType === \"STATUS\"\n                            ? \"cursor-wait bg-yellow-500\"\n                            : \"bg-yellow-700\"\n                        }`}\n                        onClick={() =>\n                          !this.state.loadingRequest &&\n                          this.props.manageUser &&\n                          this.blockUser(\n                            DATA_GetUser!.user_id,\n                            DATA_GetUser!.is_active\n                          )\n                        }\n                        disabled={this.state.loadingRequest}\n                      >\n                        <MdLock className=\"w-4 h-4 fill-current\" />\n                        <span>\n                          {this.state.loadingRequestType &&\n                          this.state.loadingRequestType === \"RESET\"\n                            ? \"Loading...\"\n                            : \"Re-Activate\"}\n                        </span>\n                      </button>\n                    )}\n                  </div>\n                </div>\n              )}\n            </div>\n            {/* end header */}\n\n            {/* content */}\n            {this.props.manageUser &&\n            this.state.roomList &&\n            this.props.changeRole ? (\n              <UserRole\n                userInfo={this.props.manageUser}\n                roleList={this.props.roleList}\n                district={this.distinctDistrict(this.state.roomList)}\n                roomList={this.state.roomList}\n                setChangeRole={this.props.setChangeRole}\n                currentPage={this.props.currentPage}\n              />\n            ) : (\n              <UserAccess\n                userInfo={getUserById(\n                  this.props.users,\n                  this.state.manageUserId\n                )}\n                manageUserId={this.state.manageUserId}\n                setUserAccess={this.setUserAccess}\n                userAccess={this.state.userAccess}\n                setCurrentAccess={this.setCurrentAccess}\n                currentAccess={this.state.currentAccess}\n                currentPage={this.props.currentPage}\n              />\n            )}\n            {/* end content */}\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = ({\n  schoolLevels,\n  locations,\n}: StoreState): {\n  schoolLevels: schoolLevelsStoreInterface;\n  allRoom: RoomLocationInterface[];\n} => {\n  return {\n    schoolLevels,\n    allRoom: locations.roomLocation,\n  };\n};\n\nexport default React.memo(\n  connect(mapStateToProps, {\n    blockUserToSystem,\n    unBlockUserToSystem,\n    resetUserAccess,\n    getAllRoom,\n    PushPopupAlert,\n  })(UserList)\n);\n","import React, { useState } from \"react\";\nimport { MdSearch } from \"react-icons/md\";\nimport { capitalizeFirstLetter } from \"../../shared/dataTest\";\nimport { SystemUserRoleInterface } from \"../../shared/interfaces\";\nimport search from \"../../utils/search\";\n\n// const searchRole = (\n//   objList: SystemUserRoleInterface[],\n//   text: string\n// ): SystemUserRoleInterface[] => {\n//   return objList.filter(\n//     (product) => product.role.toLocaleLowerCase() === text.toLocaleLowerCase()\n//   );\n// };\n\ntype RoleListProps = {\n  setChooseRole: (value: boolean) => void;\n  roleList: SystemUserRoleInterface[];\n  handleSelectRole: (role_id: string, TYPE?: \"SELECT\" | \"DEFAULT\") => void;\n  loadindRequest: boolean;\n};\n\nconst RoleList: React.FC<RoleListProps> = (props) => {\n  const [searchInput, setSearchInput] = useState<string>(\"\");\n  return (\n    <section className=\"border-2 rounded border-gray-400\">\n      {/* SEARCH PART */}\n      <div className=\"flex items-center w-full my-1\">\n        <MdSearch className=\"w-6 h-6 absolute ml-2\" />\n        <input\n          type=\"text\"\n          placeholder=\"Search\"\n          className=\"focus:border-2 h-7 ml-1 pl-9 mr-2 bg-gray-100 focus:border-gray-700 w-full rounded\"\n          onChange={(e) => setSearchInput(e.target.value)}\n          value={searchInput}\n          disabled={props.roleList.length > 0 ? false : true}\n        />\n        <button\n          className=\"bg-red-200 text-red-700 py-1 px-2 mr-1 rounded text-sm focus:outline-none\"\n          type=\"button\"\n          onClick={() => {\n            props.setChooseRole(false);\n          }}\n        >\n          Close\n        </button>\n      </div>\n      {/* END SEARCH PART ///////////////// */}\n\n      <div className=\"w-full h-52 mt-2 overflow-y-auto divide-y divide-gray-300\">\n        {search(props.roleList, searchInput).length > 0 ? (\n          search(props.roleList, searchInput).map((role, index) => (\n            <section key={index + role.role}>\n              <div className=\"group flex items-center justify-between my-1 hover:bg-gray-100\">\n                <div\n                  className=\"p-1 w-full mr-2 cursor-pointer\"\n                  onClick={() => {\n                    props.setChooseRole(false);\n                    !props.loadindRequest &&\n                      props.handleSelectRole(role.system_user_role_id);\n                  }}\n                >\n                  <p className=\"text-sm font-medium text-black\">\n                    {capitalizeFirstLetter(role.role)}\n                  </p>\n                </div>\n                <button\n                  type=\"button\"\n                  className=\"bg-blue-200 group-hover:bg-blue-300 text-blue-700 group-hover:text-blue-800 py-1 px-2 mr-1 rounded text-sm\"\n                >\n                  Choose\n                </button>\n              </div>\n            </section>\n          ))\n        ) : (\n          <div className=\"text-center p-3\">\n            <p className=\"text-base font-medium text-black\">\n              No role available\n            </p>\n          </div>\n        )}\n      </div>\n    </section>\n  );\n};\n\nexport default React.memo(RoleList);\n","import axios from \"axios\";\nimport React, { Component } from \"react\";\nimport { MdHighlightOff } from \"react-icons/md\";\nimport { TiInputChecked } from \"react-icons/ti\";\nimport { connect } from \"react-redux\";\nimport { schoolLevelsStoreInterface, PushPopupAlert } from \"../../actions\";\nimport { assignRoleToUserAccess } from \"../../actions/users\";\nimport { PopupAlertData } from \"../../components/Alert/Popup\";\nimport Loading from \"../../components/Loading/Loading\";\nimport Table from \"../../components/Table/Table\";\nimport { PopupAlertTheme } from \"../../interfaces/popupAlert\";\nimport { StoreState } from \"../../reducers\";\nimport { isEmptyOrSpaces } from \"../../shared/dataTest\";\nimport {\n  UserInterface,\n  SystemUserRoleInterface,\n  DistrictInterface,\n  RoomLocationInterface,\n  AssignRoleToUserActionInterface,\n  LocationRoomTableInterface,\n  RoleToUserInterface,\n} from \"../../shared/interfaces\";\nimport { API } from \"../../utils/api\";\nimport { errorToText } from \"../../utils/errors\";\nimport RoleList from \"./RoleList\";\nimport { LocationsInArray } from \"./UserList\";\nconst url = `${API.AUTH}/auth/user/access`;\n\ninterface AppProps {\n  currentPage: number;\n  userInfo: UserInterface;\n  roleList: SystemUserRoleInterface[];\n  district: DistrictInterface[];\n  assignRoleToUserAccess: Function;\n  roomList: RoomLocationInterface[] | null;\n  schoolLevels: schoolLevelsStoreInterface;\n  setChangeRole: (value: boolean) => void;\n  PushPopupAlert: (alert: PopupAlertData) => void;\n}\n\ninterface AppState {\n  loading: boolean;\n  loadingForm: boolean;\n  loadingRequest: boolean;\n  roleId: string;\n  provinceId: string;\n  districtId: string;\n  roomId: string;\n  instituteId: string;\n  centerId: string;\n  selectedRole: SystemUserRoleInterface | null;\n  formError: {\n    element: string;\n    msg: string;\n  } | null;\n  chooseRole: boolean;\n}\n\nclass UserRole extends Component<AppProps, AppState> {\n  constructor(props: AppProps) {\n    super(props);\n\n    this.state = {\n      loading: true,\n      loadingForm: true,\n      loadingRequest: false,\n      roleId: \"\",\n      provinceId: \"\",\n      districtId: \"\",\n      roomId: \"\",\n      instituteId: \"\",\n      centerId: \"\",\n      selectedRole: null,\n      formError: null,\n      chooseRole: false,\n    };\n  }\n\n  setRoleId = (value: string) => {\n    this.setState({ roleId: value });\n  };\n\n  setSelectedRole = (value: SystemUserRoleInterface | null) => {\n    this.setState({ selectedRole: value });\n  };\n\n  setProvinceId = (value: string) => {\n    this.setState({ provinceId: value });\n  };\n\n  setDistrictId = (value: string) => {\n    this.setState({ districtId: value });\n  };\n\n  setCenterId = (value: string) => {\n    this.setState({ centerId: value });\n  };\n\n  setRoomId = (value: string) => {\n    this.setState({ roomId: value });\n  };\n\n  setLoadingForm = (value: boolean) => {\n    this.setState({ loadingForm: value });\n  };\n\n  setLoading = (value: boolean) => {\n    this.setState({ loading: value });\n  };\n\n  setInstituteId = (value: string) => {\n    this.setState({ instituteId: value });\n  };\n\n  setFormError = (\n    value: {\n      element: string;\n      msg: string;\n    } | null\n  ) => {\n    this.setState({ formError: value });\n  };\n  setLoadingRequest = (value: boolean) => {\n    this.setState({ loadingRequest: value });\n  };\n  setChooseRole = (value: boolean) => {\n    this.setState({ chooseRole: value });\n  };\n\n  setDefaultState = (\n    default_access: RoleToUserInterface,\n    role: SystemUserRoleInterface\n  ) => {\n    // SET DEFAULT PROVINCE && DISTRICT ID =======================\n    let LOAD_province: LocationRoomTableInterface | undefined;\n    let LOAD_district: DistrictInterface | undefined;\n    if (role.district_required && this.props.roomList) {\n      LOAD_district = this.distinctDistrict(this.props.roomList).find(\n        (item) => item._id === default_access!.district_id\n      );\n      LOAD_district && this.setProvinceId(LOAD_district.province_id);\n      LOAD_district && this.setDistrictId(default_access!.district_id);\n      this.setLoadingForm(false);\n    } else if (role.room_required && this.props.roomList) {\n      // SET DEFAULT PROVINCE && DISTRICT && ROOM ID =======================\n\n      LOAD_province = LocationsInArray(this.props.roomList).find(\n        (item) => item.room_id === default_access!.room_id\n      );\n      LOAD_province && this.setProvinceId(LOAD_province.province_id);\n      LOAD_province && this.setDistrictId(LOAD_province.district_id);\n      LOAD_province && this.setCenterId(LOAD_province.center_id);\n      this.setRoomId(default_access.room_id);\n      this.setLoadingForm(false);\n    } else {\n      this.setLoadingForm(false);\n    }\n  };\n\n  componentDidMount = () => {\n    if (this.props.roleList.length) {\n      if (this.props.userInfo.default_access && this.state.loadingForm) {\n        // SET DEFAULT ROLE ID =======================\n        if (!this.state.roleId.length) {\n          let result = this.props.roleList.find(\n            (role) =>\n              role.system_user_role_id ===\n              this.props.userInfo.default_access!.system_user_role_id\n          );\n          if (result) {\n            this.setRoleId(\n              this.props.userInfo.default_access.system_user_role_id\n            );\n            this.setSelectedRole(result);\n            this.setDefaultState(this.props.userInfo.default_access, result);\n          }\n        }\n\n        console.log(\"====================================\");\n        console.log({ vvvvv: this.props.userInfo.default_access });\n        console.log(\"====================================\");\n      }\n\n      if (this.state.selectedRole && this.props.userInfo.default_access) {\n        this.setDefaultState(\n          this.props.userInfo.default_access,\n          this.state.selectedRole\n        );\n      }\n\n      this.setLoading(false);\n    }\n  };\n\n  handleSelectRole = (\n    role_id: string,\n    TYPE: \"SELECT\" | \"DEFAULT\" = \"SELECT\"\n  ) => {\n    if (this.props.roleList) {\n      let result = this.props.roleList.find(\n        (role) => role.system_user_role_id === role_id\n      );\n      if (result) {\n        this.setRoleId(role_id);\n        this.setSelectedRole(result);\n        this.state.formError &&\n          this.state.formError.element === \"role_id\" &&\n          this.setFormError(null);\n\n        if (TYPE === \"SELECT\") {\n          this.setProvinceId(\"\");\n          this.setDistrictId(\"\");\n          this.setCenterId(\"\");\n          this.setRoomId(\"\");\n          this.setInstituteId(\"\");\n        }\n      }\n    }\n  };\n\n  tableData = (): JSX.Element[] => {\n    if (\n      this.state.roleId.length > 0 &&\n      this.state.selectedRole === null &&\n      this.props.roleList\n    ) {\n      this.handleSelectRole(this.state.roleId, \"DEFAULT\");\n    }\n    if (this.state.selectedRole) {\n      return this.state.selectedRole.access.map((access, i) => (\n        <tr\n          key={i + access.id + Math.random()}\n          className={`text-left border-b border-gray-200 hover:bg-gray-100`}\n        >\n          <td className=\"px-2 py-1\">\n            <label className=\"inline-flex items-center\">\n              <span className=\"text-gray-900 capitalize text-xl font-normal cursor-pointer\">\n                {access.task}\n              </span>\n            </label>\n          </td>\n          <td>\n            <div\n              className={`inline-flex items-center text-xl ${\n                access.permitted.create ? \"text-green-700\" : \"text-red-700\"\n              }`}\n            >\n              {access.permitted.create ? (\n                <TiInputChecked />\n              ) : (\n                <MdHighlightOff />\n              )}\n              {access.permitted.create ? \" Yes\" : \"No\"}\n            </div>\n          </td>\n          <td>\n            <div\n              className={`inline-flex items-center text-xl ${\n                access.permitted.view ? \"text-green-700\" : \"text-red-700\"\n              }`}\n            >\n              {access.permitted.view ? <TiInputChecked /> : <MdHighlightOff />}\n              {access.permitted.view ? \" Yes\" : \"No\"}\n            </div>\n          </td>\n          <td>\n            <div\n              className={`inline-flex items-center text-xl ${\n                access.permitted.update ? \"text-green-700\" : \"text-red-700\"\n              }`}\n            >\n              {access.permitted.update ? (\n                <TiInputChecked />\n              ) : (\n                <MdHighlightOff />\n              )}\n              {access.permitted.update ? \" Yes\" : \"No\"}\n            </div>\n          </td>\n          <td>\n            <div\n              className={`inline-flex items-center text-xl ${\n                access.permitted.delete ? \"text-green-700\" : \"text-red-700\"\n              }`}\n            >\n              {access.permitted.delete ? (\n                <TiInputChecked />\n              ) : (\n                <MdHighlightOff />\n              )}\n              {access.permitted.delete ? \" Yes\" : \"No\"}\n            </div>\n          </td>\n        </tr>\n      ));\n    }\n    const optionB = [\n      <tr key=\"55re\">\n        <td colSpan={5} className=\"text-center px-2 py-2\">\n          No Default Access Available on this Role.\n        </td>\n      </tr>,\n    ];\n    return optionB;\n  };\n\n  assignRoleToUser = async (e: React.FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n    if (!window.confirm(`Are sure you want to change user role?`)) {\n      return false;\n    }\n\n    if (!this.state.selectedRole) {\n      return this.setFormError({\n        element: \"role_id\",\n        msg: \"User role is required!\",\n      });\n    }\n\n    if (\n      this.state.selectedRole.room_required === true &&\n      isEmptyOrSpaces(this.state.provinceId)\n    ) {\n      return this.setFormError({\n        element: \"province_id\",\n        msg: \"Province is required!\",\n      });\n    }\n\n    if (\n      this.state.selectedRole.education_institution_required === true &&\n      isEmptyOrSpaces(this.state.instituteId)\n    ) {\n      return this.setFormError({\n        element: \"institute_id\",\n        msg: \"Institute is required on this role!\",\n      });\n    }\n\n    if (\n      (this.state.selectedRole.room_required === true ||\n        this.state.selectedRole.district_required === true) &&\n      isEmptyOrSpaces(this.state.districtId)\n    ) {\n      return this.setFormError({\n        element: \"district_id\",\n        msg: \"District is required!\",\n      });\n    }\n\n    if (\n      this.state.selectedRole.room_required === true &&\n      isEmptyOrSpaces(this.state.centerId)\n    ) {\n      return this.setFormError({\n        element: \"center_id\",\n        msg: \"Center is required!\",\n      });\n    }\n\n    if (\n      this.state.selectedRole.room_required === true &&\n      isEmptyOrSpaces(this.state.roomId)\n    ) {\n      return this.setFormError({\n        element: \"room_id\",\n        msg: \"Room is required!\",\n      });\n    }\n    this.setLoadingRequest(true);\n    let formData: AssignRoleToUserActionInterface = {\n      user_id: this.props.userInfo.user_id,\n      data: {\n        system_user_role_id: this.state.roleId,\n        status: 1,\n        role: this.state.selectedRole.role,\n        access: this.state.selectedRole.access,\n        school_id: \"\",\n        district_id: \"\",\n        room_id: this.state.selectedRole.room_required ? this.state.roomId : \"\",\n        education_institution_id: this.state.selectedRole\n          .education_institution_required\n          ? this.state.instituteId\n          : \"\",\n      },\n    };\n\n    try {\n      const res = await axios.post(`${url}/addroletouser`, {\n        user_id: this.props.userInfo.user_id,\n        system_user_role_id: this.state.roleId,\n        status: 1,\n        role: this.state.selectedRole.role,\n        access: true,\n        school_id: \"\",\n        district_id:\n          this.state.selectedRole.district_required === true\n            ? this.state.districtId\n            : \"\",\n        room_id:\n          this.state.selectedRole.room_required === true\n            ? this.state.roomId\n            : \"\",\n        education_institution_id: this.state.selectedRole\n          .education_institution_required\n          ? this.state.instituteId\n          : \"\",\n      });\n      if (res) {\n        console.log(\"====================================\");\n        console.log({ assignRoleToUser: res });\n        console.log(\"====================================\");\n        this.props.assignRoleToUserAccess(formData, this.props.currentPage);\n        this.setLoadingRequest(false);\n        this.props.setChangeRole(false);\n        this.props.PushPopupAlert({\n          title: \"Assigning Role to User completed successfully\",\n          theme: PopupAlertTheme.success,\n        });\n      }\n    } catch (error) {\n      console.log({ role_error: error });\n      this.props.PushPopupAlert({\n        title: errorToText(error),\n        theme: PopupAlertTheme.danger,\n      });\n    }\n  };\n\n  distinctDistrict = (\n    location: RoomLocationInterface[],\n    province_id?: string\n  ): DistrictInterface[] => {\n    let ids: string[] = [],\n      result: DistrictInterface[] = [];\n\n    if (province_id) {\n      result = location.find((item) => item._id === province_id)\n        ? location.find((item) => item._id === province_id)!.districts\n          ? location.find((item) => item._id === province_id)!.districts\n          : []\n        : [];\n    } else {\n      for (const key in location) {\n        if (Object.prototype.hasOwnProperty.call(location, key)) {\n          for (const keyDistrict in location[key].districts) {\n            if (\n              Object.prototype.hasOwnProperty.call(\n                location[key].districts,\n                keyDistrict\n              )\n            ) {\n              if (!ids.includes(location[key].districts[keyDistrict]._id)) {\n                ids.push(location[key].districts[keyDistrict]._id);\n                result.push(location[key].districts[keyDistrict]);\n              }\n            }\n          }\n        }\n      }\n    }\n\n    return result;\n  };\n\n  distinctCenter = (\n    rooms: RoomLocationInterface[],\n    district_id: string\n  ): LocationRoomTableInterface[] => {\n    let ids: string[] = [],\n      result: LocationRoomTableInterface[] = [];\n\n    LocationsInArray(rooms).forEach((element) => {\n      if (\n        !ids.includes(element.center_id) &&\n        element.district_id === district_id\n      ) {\n        ids.push(element.center_id);\n        result.push(element);\n      }\n    });\n    return result;\n  };\n\n  distinctRoom = (\n    rooms: RoomLocationInterface[],\n    center_id: string\n  ): LocationRoomTableInterface[] => {\n    let ids: string[] = [],\n      result: LocationRoomTableInterface[] = [];\n\n    LocationsInArray(rooms).forEach((element) => {\n      if (!ids.includes(element.room_id) && element.center_id === center_id) {\n        ids.push(element.room_id);\n        result.push(element);\n      }\n    });\n    return result;\n  };\n\n  render() {\n    if (\n      this.state.loading === true ||\n      this.state.loadingForm ||\n      this.props.userInfo.default_access === null ||\n      this.state.roleId.length === 0 ||\n      this.state.selectedRole === null\n    ) {\n      return (\n        <div className=\"text-center py-7 font-bold text-3xl text-gray-400 animate-pulse\">\n          Loading...\n        </div>\n      );\n    }\n\n    return (\n      <div className=\"grid grid-cols-1 md:grid-cols-3 gap-8 py-2 md:py-4 px-2 md:px-0\">\n        {/* left panel */}\n        <div className=\"col-span-1 bg-white w-full overflow-x-auto border rounded\">\n          <div className=\"px-6 md:px-12 py-5 bg-white mx-auto rounded-2xl w-100\">\n            <h3 className=\"font-semibold text-2xl text-gray-800 mb-4\">\n              Change User Role\n            </h3>\n            {this.state.loadingForm ? (\n              <Loading />\n            ) : (\n              <form onSubmit={(e) => this.assignRoleToUser(e)}>\n                <div className=\"space-y-5\">\n                  <div className=\"space-y-2\">\n                    <label className=\"text-sm font-medium text-gray-700 tracking-wide\">\n                      User Role\n                    </label>\n\n                    {!this.state.chooseRole && (\n                      <div\n                        className={`w-full text-base bg-white text-grey-darker cursor-pointer border-2 px-4 py-3 rounded focus:outline-none focus:bg-gray-100 ${\n                          this.state.formError &&\n                          this.state.formError.element === \"role_id\"\n                            ? \"border-red-500\"\n                            : \"border-gray-400\"\n                        }`}\n                        onClick={() => {\n                          !this.state.loadingRequest &&\n                            this.setChooseRole(true);\n                          !this.state.loadingRequest && this.setFormError(null);\n                        }}\n                      >\n                        {this.state.selectedRole\n                          ? this.state.selectedRole.role\n                          : \"Select role\"}\n                      </div>\n                    )}\n\n                    {this.state.chooseRole && (\n                      <RoleList\n                        setChooseRole={this.setChooseRole}\n                        handleSelectRole={this.handleSelectRole}\n                        roleList={this.props.roleList}\n                        loadindRequest={this.state.loadingRequest}\n                      />\n                    )}\n\n                    {this.state.formError &&\n                      this.state.formError.element === \"role_id\" && (\n                        <span className=\"text-red-500\">\n                          {this.state.formError.msg}\n                        </span>\n                      )}\n                  </div>\n\n                  {this.state.selectedRole &&\n                    this.state.selectedRole.education_institution_required && (\n                      <div className=\"space-y-2\">\n                        <label className=\"mb-5 text-sm font-medium text-gray-700 tracking-wide\">\n                          Institute\n                        </label>\n                        <select\n                          className={`block w-full text-base bg-white text-grey-darker border-2 rounded px-4 py-3 md:w-full focus:outline-none focus:bg-gray-100 ${\n                            this.state.formError &&\n                            this.state.formError.element === \"institute_id\"\n                              ? \"border-red-500\"\n                              : \"border-gray-400\"\n                          }`}\n                          onChange={(e) => {\n                            this.setInstituteId(e.target.value);\n                            this.setProvinceId(\"\");\n                            this.setDistrictId(\"\");\n                            this.setCenterId(\"\");\n                            this.setRoomId(\"\");\n                            this.state.formError &&\n                              this.state.formError.element === \"institute_id\" &&\n                              this.setFormError(null);\n                          }}\n                          disabled={this.state.loadingRequest}\n                          value={this.state.instituteId}\n                        >\n                          <option value=\"\">Select institute</option>\n                          {this.props.schoolLevels.education_categories &&\n                          this.props.schoolLevels.education_categories.length >\n                            0 ? (\n                            this.props.schoolLevels.education_categories.map(\n                              (institute) => (\n                                <option\n                                  value={institute.education_institute_id}\n                                  key={\n                                    institute.education_institute_id +\n                                    Math.random()\n                                  }\n                                >\n                                  {institute.education_category_title}\n                                </option>\n                              )\n                            )\n                          ) : (\n                            <option value=\"\" disabled>\n                              No institute available\n                            </option>\n                          )}\n                        </select>\n                        {this.state.formError &&\n                          this.state.formError.element === \"institute_id\" && (\n                            <span className=\"text-red-500\">\n                              {this.state.formError.msg}\n                            </span>\n                          )}\n                      </div>\n                    )}\n\n                  {this.state.selectedRole &&\n                    this.state.selectedRole.room_required && (\n                      <div className=\"space-y-2\">\n                        <label className=\"mb-5 text-sm font-medium text-gray-700 tracking-wide\">\n                          Province\n                        </label>\n                        <select\n                          className={`block w-full text-base bg-white text-grey-darker border-2 rounded px-4 py-3 md:w-full focus:outline-none focus:bg-gray-100 ${\n                            this.state.formError &&\n                            this.state.formError.element === \"province_id\"\n                              ? \"border-red-500\"\n                              : \"border-gray-400\"\n                          }`}\n                          onChange={(e) => {\n                            this.setProvinceId(e.target.value);\n                            this.state.formError &&\n                              this.state.formError.element === \"province_id\" &&\n                              this.setFormError(null);\n                            this.setDistrictId(\"\");\n                            this.setCenterId(\"\");\n                            this.setRoomId(\"\");\n                          }}\n                          value={this.state.provinceId}\n                          disabled={this.state.loadingRequest}\n                        >\n                          <option value=\"\">Select province</option>\n                          {this.props.roomList &&\n                            this.props.roomList.map((province) => (\n                              <option\n                                key={province._id + Math.random()}\n                                value={province._id}\n                              >\n                                {province.province_name}\n                              </option>\n                            ))}\n                        </select>\n                        {this.state.formError &&\n                          this.state.formError.element === \"province_id\" && (\n                            <span className=\"text-red-500\">\n                              {this.state.formError.msg}\n                            </span>\n                          )}\n                      </div>\n                    )}\n                  {this.state.selectedRole &&\n                    (this.state.selectedRole.district_required ||\n                      this.state.selectedRole.room_required) && (\n                      <div className=\"space-y-2\">\n                        <label className=\"mb-5 text-sm font-medium text-gray-700 tracking-wide\">\n                          District\n                        </label>\n                        <select\n                          className={`block w-full text-base bg-white text-grey-darker border-2 rounded px-4 py-3 md:w-full focus:outline-none focus:bg-gray-100 ${\n                            this.state.formError &&\n                            this.state.formError.element === \"district_id\"\n                              ? \"border-red-500\"\n                              : \"border-gray-400\"\n                          }`}\n                          onChange={(e) => {\n                            this.setDistrictId(e.target.value);\n                            this.state.formError &&\n                              this.state.formError.element === \"district_id\" &&\n                              this.setFormError(null);\n                            this.setCenterId(\"\");\n                            this.setRoomId(\"\");\n                          }}\n                          value={this.state.districtId}\n                          disabled={this.state.loadingRequest}\n                        >\n                          <option value=\"\">Select district</option>\n                          {this.props.roomList &&\n                          this.distinctDistrict(\n                            this.props.roomList,\n                            !isEmptyOrSpaces(this.state.provinceId)\n                              ? this.state.provinceId\n                              : undefined\n                          ).length > 0 ? (\n                            this.distinctDistrict(\n                              this.props.roomList,\n                              !isEmptyOrSpaces(this.state.provinceId)\n                                ? this.state.provinceId\n                                : undefined\n                            ).map((district) => (\n                              <option\n                                key={district._id + Math.random()}\n                                value={district._id}\n                              >\n                                {district.district_name}\n                              </option>\n                            ))\n                          ) : (\n                            <option value=\"\" disabled>\n                              No district found\n                            </option>\n                          )}\n                        </select>\n                        {this.state.formError &&\n                          this.state.formError.element === \"district_id\" && (\n                            <span className=\"text-red-500\">\n                              {this.state.formError.msg}\n                            </span>\n                          )}\n                      </div>\n                    )}\n\n                  {this.state.selectedRole &&\n                    this.state.selectedRole.room_required && (\n                      <div className=\"space-y-2\">\n                        <label className=\"mb-5 text-sm font-medium text-gray-700 tracking-wide\">\n                          Center\n                        </label>\n                        <select\n                          className={`block w-full text-base bg-white text-grey-darker border-2 rounded px-4 py-3 md:w-full focus:outline-none focus:bg-gray-100 ${\n                            this.state.formError &&\n                            this.state.formError.element === \"center_id\"\n                              ? \"border-red-500\"\n                              : \"border-gray-400\"\n                          }`}\n                          onChange={(e) => {\n                            this.setCenterId(e.target.value);\n                            this.state.formError &&\n                              this.state.formError.element === \"center_id\" &&\n                              this.setFormError(null);\n                            this.setRoomId(\"\");\n                          }}\n                          disabled={this.state.loadingRequest}\n                          value={this.state.centerId}\n                        >\n                          <option value=\"\">Select center</option>\n                          {this.state.districtId &&\n                          this.state.districtId.length > 0 &&\n                          this.props.roomList &&\n                          this.distinctCenter(\n                            this.props.roomList,\n                            this.state.districtId\n                          ).length > 0 ? (\n                            this.distinctCenter(\n                              this.props.roomList,\n                              this.state.districtId\n                            ).map((center, index) => (\n                              <option\n                                value={center.center_id}\n                                key={center.center_id + index + Math.random()}\n                              >\n                                {center.center_name}\n                              </option>\n                            ))\n                          ) : (\n                            <option value=\"\" disabled>\n                              No center found\n                            </option>\n                          )}\n                        </select>\n                        {this.state.formError &&\n                          this.state.formError.element === \"center_id\" && (\n                            <span className=\"text-red-500\">\n                              {this.state.formError.msg}\n                            </span>\n                          )}\n                      </div>\n                    )}\n\n                  {this.state.selectedRole &&\n                    this.state.selectedRole.room_required && (\n                      <div className=\"space-y-2\">\n                        <label className=\"mb-5 text-sm font-medium text-gray-700 tracking-wide\">\n                          Room\n                        </label>\n                        <select\n                          className={`block w-full text-base bg-white text-grey-darker border-2 rounded px-4 py-3 md:w-full focus:outline-none focus:bg-gray-100 ${\n                            this.state.formError &&\n                            this.state.formError.element === \"room_id\"\n                              ? \"border-red-500\"\n                              : \"border-gray-400\"\n                          }`}\n                          onChange={(e) => {\n                            this.setRoomId(e.target.value);\n                            this.state.formError &&\n                              this.state.formError.element === \"room_id\" &&\n                              this.setFormError(null);\n                          }}\n                          disabled={this.state.loadingRequest}\n                          value={this.state.roomId}\n                        >\n                          <option value=\"\">Select room</option>\n                          {!isEmptyOrSpaces(this.state.centerId) &&\n                          this.props.roomList &&\n                          this.distinctRoom(\n                            this.props.roomList,\n                            this.state.centerId\n                          ).length > 0 ? (\n                            this.distinctRoom(\n                              this.props.roomList,\n                              this.state.centerId\n                            ).map((room, index) => (\n                              <option\n                                value={room.room_id}\n                                key={room.room_id + index + Math.random()}\n                                className={`${\n                                  room.room_name === \"0\" ? \"hidden\" : \"block\"\n                                }`}\n                              >\n                                {room.room_name}\n                              </option>\n                            ))\n                          ) : (\n                            <option value=\"\" disabled>\n                              No room found\n                            </option>\n                          )}\n                        </select>\n                        {this.state.formError &&\n                          this.state.formError.element === \"room_id\" && (\n                            <span className=\"text-red-500\">\n                              {this.state.formError.msg}\n                            </span>\n                          )}\n                      </div>\n                    )}\n\n                  <div className=\"flex justify-between 2xl:justify-start gap-2\">\n                    <button\n                      className=\"btn bg-gray-500 text-gray-50 focus:outline-none\"\n                      onClick={() => {\n                        this.props.setChangeRole(false);\n                        this.setFormError(null);\n                        this.setProvinceId(\"\");\n                        this.setDistrictId(\"\");\n                        this.setCenterId(\"\");\n                        this.setRoomId(\"\");\n                      }}\n                      disabled={this.state.loadingRequest}\n                    >\n                      Back\n                    </button>\n                    <button\n                      className=\"btn btn-blue focus:outline-none\"\n                      // onClick={() => assignRoleToUser()}\n                      disabled={this.state.loadingRequest}\n                    >\n                      {this.state.loadingRequest ? \"Loading...\" : \"Save Change\"}\n                    </button>\n                  </div>\n                </div>\n              </form>\n            )}\n          </div>\n        </div>\n        {/* end left panel */}\n\n        {/* ------------------------------------------------------------ */}\n\n        {/* right panel */}\n        <div className=\"cols-span-1 md:col-span-2 bg-white w-full border rounded text-center p-2 hidden md:block\">\n          <div className=\"my-4\">\n            <span className=\"text-gray-600 font-semibold text-2xl\">\n              {this.state.selectedRole?.role}'s Default Access\n            </span>\n          </div>\n          {!this.state.loading && (\n            <div className=\"overflow-x-auto w-full\">\n              <Table\n                columns={[\n                  {\n                    columnTitle: \"Access Name\",\n                    alignText: \"left\",\n                    padding: \"p-3\",\n                  },\n                  { columnTitle: \"Create\", alignText: \"left\" },\n                  { columnTitle: \"View\", alignText: \"left\" },\n                  { columnTitle: \"Update\", alignText: \"left\" },\n                  { columnTitle: \"Delete\", alignText: \"left\" },\n                ]}\n                rows={this.tableData}\n                pagination={false}\n                search={false}\n                searchBG=\"bg-gray-50\"\n                thColor=\"gray\"\n                tableId=\"defaultAccess\"\n              />\n            </div>\n          )}\n        </div>\n        {/* end right panel */}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = ({\n  schoolLevels,\n}: StoreState): {\n  schoolLevels: schoolLevelsStoreInterface;\n} => {\n  return { schoolLevels };\n};\n\nexport default React.memo(\n  connect(mapStateToProps, {\n    assignRoleToUserAccess,\n    PushPopupAlert,\n  })(UserRole)\n);\n","export default __webpack_public_path__ + \"static/media/blank_profile.c3f94521.png\";","import React from \"react\";\nimport Chart from \"react-apexcharts\";\n\ntype chartType = {\n  options: {\n    labels: string[];\n    legend?: ApexLegend;\n    plotOptions?: ApexPlotOptions;\n    colors?: any[];\n  };\n  series: number[];\n  width?: number;\n};\n\nconst PieChart: React.FC<chartType> = (props) => {\n  return (\n    <div className=\"donut\">\n      <Chart\n        options={props.options}\n        series={props.series}\n        type=\"donut\"\n        width={`${props.width ? props.width : \"380\"}`}\n      />\n    </div>\n  );\n};\n\nexport default React.memo(PieChart);\n","import React, { FC } from \"react\";\nimport { IconType } from \"react-icons\";\nimport { FaUsers } from \"react-icons/fa\";\nimport { toAnyDigit } from \"../../shared/dataTest\";\n\nexport type DashboardLabelItemInterface = {\n  // TITLE: Application or Exam or Shortlisted ....\n  title: string;\n  // ICON: FaExpand ....\n  icon: IconType;\n  // ICON COLOR: blue, indigo, gray ....\n  iconColor: string;\n  // COUNT: 0,1,2,3,5,23,563 ....\n  count: number;\n  // COUNT: 0,1,2,3,5,23,563 ....\n  countOver?: number;\n};\n\nconst DashboardLabelItem: FC<DashboardLabelItemInterface> = (\n  props = {\n    title: \"\",\n    icon: FaUsers,\n    iconColor: \"indigo\",\n    count: 0,\n    countOver: undefined,\n  }\n) => {\n  const IconDefined = props.icon;\n  return (\n    <div className=\"flex items-center px-6 py-4 bg-white w-full rounded-md space-x-2 mb-2 lg:mb-0 shadow-md\">\n      <div\n        className={`p-3 rounded-full bg-${props.iconColor}-200 bg-opacity-75`}\n      >\n        <IconDefined className={`h-8 w-8 text-${props.iconColor}-600`} />\n      </div>\n      <div>\n        <h1 className=\"text-3xl font-semibold text-gray-700\">\n          {toAnyDigit(props.count)}{\" \"}\n          {props.countOver && \"/ \" + toAnyDigit(props.countOver)}\n        </h1>\n        <span className=\"text-gray-500 text-lg\">{props.title}</span>\n      </div>\n    </div>\n  );\n};\n\nexport default React.memo(DashboardLabelItem);\n","import React, { useState } from \"react\";\nimport { BiSort } from \"react-icons/bi\";\nimport Loading from \"../../../components/Loading/Loading\";\nimport { SessionPlanInterface } from \"../../../interfaces\";\nimport { course } from \"../../../interfaces/course\";\nimport { ExamItemResponse } from \"../../../interfaces/prepare_exam\";\nimport { ExamsParcentageSuccessFailedRateByPeriodInterface } from \"../../../interfaces/reports\";\nimport { capitalizeFirstLetter } from \"../../../shared/dataTest\";\nimport { DATE, sortThisArray } from \"../../../utils/functions\";\n\nexport interface ExamPerformanceToPrintInterface {\n  course_id: number;\n  course_name: string;\n  course_code: string;\n  description: string;\n  school_levels: string;\n  exam_period: string;\n  exam_date: string;\n  exam_time: string;\n  exam_duration: string;\n  exam_performance: number;\n}\n\nexport enum examPerformanceReportContentKeyInterface {\n  COURSER_NAME = \"course_name\",\n  COURSE_CODE = \"course_code\",\n  SCHOOL_LEVEL = \"school_levels\",\n  PERIOD = \"exam_period\",\n  DATE = \"exam_date\",\n  TIME = \"exam_time\",\n  DURATION = \"exam_duration\",\n  PERFORMANCE = \"exam_performance\",\n}\n\nexport interface examPerformanceReportContentInterface {\n  key: examPerformanceReportContentKeyInterface;\n  title: string;\n  status: boolean;\n}\n\nexport const examPerformanceIsChangeAllowed = (\n  key: examPerformanceReportContentKeyInterface\n): boolean => {\n  if (\n    key === examPerformanceReportContentKeyInterface.COURSER_NAME ||\n    key === examPerformanceReportContentKeyInterface.COURSE_CODE ||\n    key === examPerformanceReportContentKeyInterface.PERIOD ||\n    key === examPerformanceReportContentKeyInterface.PERFORMANCE\n  ) {\n    return false;\n  }\n  return true;\n};\n\nexport const defaultExamPerformanceContent: examPerformanceReportContentInterface[] =\n  [\n    {\n      key: examPerformanceReportContentKeyInterface.COURSER_NAME,\n      title: \"Course names\",\n      status: true,\n    },\n    {\n      key: examPerformanceReportContentKeyInterface.COURSE_CODE,\n      title: \"Course code\",\n      status: true,\n    },\n    {\n      key: examPerformanceReportContentKeyInterface.SCHOOL_LEVEL,\n      title: \"School levels\",\n      status: true,\n    },\n    {\n      key: examPerformanceReportContentKeyInterface.PERIOD,\n      title: \"Exam period\",\n      status: true,\n    },\n    {\n      key: examPerformanceReportContentKeyInterface.DATE,\n      title: \"Exam date\",\n      status: true,\n    },\n    {\n      key: examPerformanceReportContentKeyInterface.TIME,\n      title: \"Exam time\",\n      status: true,\n    },\n    {\n      key: examPerformanceReportContentKeyInterface.DURATION,\n      title: \"Exam duration\",\n      status: true,\n    },\n    {\n      key: examPerformanceReportContentKeyInterface.PERFORMANCE,\n      title: \"Exam performance\",\n      status: true,\n    },\n  ];\n\nexport interface examPerformanceStateInterface {\n  course_name: string;\n  course_code: string;\n  description: string;\n  school_levels: string[];\n  course_id: string;\n  exam: ExamItemResponse | null;\n  exam_performance: number;\n}\n\nexport const FC_reportExamPerformanceData = (\n  allCourses: course[],\n  allExams: ExamItemResponse[],\n  examPerformance: ExamsParcentageSuccessFailedRateByPeriodInterface[]\n): examPerformanceStateInterface[] => {\n  let result: examPerformanceStateInterface[] = [],\n    ids: string[] = [];\n  for (const key in examPerformance) {\n    if (Object.prototype.hasOwnProperty.call(examPerformance, key)) {\n      if (ids.includes(examPerformance[key].answer_sheet_id)) continue;\n      ids.push(examPerformance[key].answer_sheet_id);\n      let courser = allCourses.find(\n        (item) => item.course_id === examPerformance[key].course\n      );\n      if (courser) {\n        let exam = allExams.find(\n          (item) =>\n            item.course === examPerformance[key].course &&\n            item.period === examPerformance[key].period\n        );\n        result.push({\n          course_name: courser.course_name,\n          course_code: courser.course_code,\n          description: courser.description,\n          school_levels: courser.school_levels,\n          course_id: courser.course_id,\n          exam: exam ? exam : null,\n          exam_performance: examPerformance[key].total_marks,\n        });\n      }\n    }\n  }\n  console.log(\"===============-----------------=====================\");\n  console.log({ result });\n  console.log(\"===============-----------------=====================\");\n  return result;\n};\n\nexport const searchExamPerformanceData = (\n  objList: examPerformanceStateInterface[],\n  text: string\n): examPerformanceStateInterface[] => {\n  if (undefined === text || text === \"\") return objList;\n  return objList.filter((product) => {\n    let flag;\n    // let dataKeys = product;\n\n    for (let prop in product) {\n      flag = false;\n      if (\n        prop === \"course_name\" ||\n        prop === \"course_code\" ||\n        prop === \"exam_performance\"\n      ) {\n        flag =\n          product[prop].toString().toLowerCase().indexOf(text.toLowerCase()) >\n          -1;\n      }\n      if (flag) break;\n    }\n    return flag;\n  });\n};\n\ntype ExamPerformanceProps = {\n  loading: boolean;\n  examsListData: ExamItemResponse[] | null;\n  courseListData: course[] | null;\n  thisPeriod: SessionPlanInterface[];\n  examsPerformanceData:\n    | ExamsParcentageSuccessFailedRateByPeriodInterface[]\n    | null;\n};\n\nconst ExamPerformance: React.FC<ExamPerformanceProps> = (props) => {\n  const [searchInput, setSearchInput] = useState<string>(\"\");\n  const [isSorted, setIsSorted] = useState<boolean>(false);\n  const [sortProperty, setSortProperty] = useState<string>(\"\");\n  const [sortOrder, setSortOrder] = useState<\"ASC\" | \"DESC\">(\"ASC\");\n\n  const setSort = (thisProperty: string) => {\n    if (sortProperty === thisProperty && sortOrder === \"ASC\") {\n      setSortOrder(\"DESC\");\n      setSortProperty(thisProperty);\n      setIsSorted(true);\n    } else {\n      setSortOrder(\"ASC\");\n      setSortProperty(thisProperty);\n      setIsSorted(true);\n    }\n  };\n\n  return (\n    <React.Fragment>\n      <div className=\"bg-white my-4\">\n        <div className=\"w-full px-2 py-2\">\n          <input\n            onChange={(e) => setSearchInput(e.target.value)}\n            type=\"text\"\n            value={searchInput}\n            placeholder=\"Search...\"\n            className=\"w-full bg-gray-100 py-2 px-3 rounded\"\n            disabled={\n              props.courseListData &&\n              props.examsListData &&\n              props.examsPerformanceData &&\n              FC_reportExamPerformanceData(\n                props.courseListData,\n                props.examsListData,\n                props.examsPerformanceData\n              ).length <= 0\n                ? true\n                : false\n            }\n          />\n        </div>\n        <div className=\"w-full overflow-x-auto\">\n          <table className=\"w-full shadow\" id=\"report_content\">\n            <thead className=\"bg-white border-b-2 border-gray-300 text-gray-600 font-bold text-sm\">\n              <tr>\n                <td className=\"px-2 py-2\">#</td>\n                <td\n                  className=\"px-2 py-2 cursor-pointer\"\n                  onClick={() => setSort(\"course_name\")}\n                >\n                  <div className=\"flex items-center gap-1\">\n                    Course <BiSort />\n                  </div>\n                </td>\n                <td className=\"px-2 py-2\">Exam date</td>\n                <td className=\"px-2 py-2\">Exam time</td>\n                <td className=\"px-2 py-2\">Exam duration</td>\n                <td\n                  className=\"px-2 py-2 cursor-pointer\"\n                  onClick={() => setSort(\"exam_performance\")}\n                >\n                  <div className=\"flex items-center gap-1\">\n                    Exam performance <BiSort />\n                  </div>\n                </td>\n              </tr>\n            </thead>\n            <tbody>\n              {props.courseListData === null || props.loading ? (\n                <tr>\n                  <td colSpan={6} className=\"px-2 py-2\">\n                    <Loading />\n                  </td>\n                </tr>\n              ) : props.examsListData &&\n                props.examsPerformanceData &&\n                FC_reportExamPerformanceData(\n                  props.courseListData,\n                  props.examsListData,\n                  props.examsPerformanceData\n                ).length <= 0 ? (\n                <tr>\n                  <td colSpan={6} className=\"px-2 py-2 text-center\">\n                    No Exam list available!\n                  </td>\n                </tr>\n              ) : (\n                props.examsListData &&\n                props.examsPerformanceData &&\n                sortThisArray(\n                  isSorted,\n                  searchExamPerformanceData(\n                    FC_reportExamPerformanceData(\n                      props.courseListData,\n                      props.examsListData,\n                      props.examsPerformanceData\n                    ),\n                    searchInput\n                  ),\n                  sortProperty,\n                  sortOrder\n                ).map((item: examPerformanceStateInterface, i) => (\n                  <tr\n                    key={i + 1}\n                    className={`bg-white text-gray-600 hover:bg-blue-100 hover:text-blue-700 border-b border-gray-300 hover:border-blue-500 text-sm`}\n                  >\n                    <td className=\"px-2 py-2\">{i + 1}</td>\n                    <td className=\"px-2 py-2\">\n                      {capitalizeFirstLetter(item.course_name)} (\n                      <span className=\"font-semibold\">{item.course_code}</span>)\n                    </td>\n                    <td className=\"px-2 py-2\">\n                      {item.exam ? DATE(item.exam.exam_date) : \"-\"}\n                    </td>\n                    <td className=\"px-2 py-2\">\n                      {item.exam ? item.exam.start_time : \"-\"}\n                    </td>\n                    <td className=\"px-2 py-2\">\n                      {item.exam ? item.exam!.duration + \" min\" : \"-\"}\n                    </td>\n                    <td className=\"px-2 py-2\">\n                      {Number(item.exam_performance.toFixed(1)) + \"%\"}\n                    </td>\n                  </tr>\n                ))\n              )}\n            </tbody>\n          </table>\n        </div>\n      </div>\n    </React.Fragment>\n  );\n};\n\nexport default React.memo(ExamPerformance);\n","import React from \"react\";\nimport DashboardLabelItem, {\n  DashboardLabelItemInterface,\n} from \"../DashboardLabelItem\";\n\ntype DashboardLabelProps = {\n  dataLabels: DashboardLabelItemInterface[];\n  labelsOnRow?: number;\n  childrenPosition?: \"START\" | \"END\";\n  children?: JSX.Element;\n};\n\nconst ExamDashboardLabels: React.FC<DashboardLabelProps> = (props) => {\n  const numCols: number = props.labelsOnRow\n    ? props.labelsOnRow > 4\n      ? props.labelsOnRow\n      : 4\n    : 4;\n  return (\n    <div\n      className={`grid 2xl:grid-cols-${numCols} xl:grid-cols-${\n        numCols - 1\n      } lg:grid-cols-${numCols - 2} md:grid-cols-${\n        numCols - 3\n      } sm:grid-cols-2 grid-cols-1 gap-4 items-center mx-auto`}\n    >\n      {props.children &&\n        ((props.childrenPosition && props.childrenPosition === \"START\") ||\n          !props.childrenPosition) &&\n        props.children}\n      {props.dataLabels.map((item, index) => (\n        <section key={index + item.title}>\n          <DashboardLabelItem\n            title={item.title}\n            icon={item.icon}\n            iconColor={item.iconColor}\n            count={item.count}\n          />\n        </section>\n      ))}\n      {props.children &&\n        props.childrenPosition &&\n        props.childrenPosition === \"END\" &&\n        props.children}\n    </div>\n  );\n};\n\nexport default React.memo(ExamDashboardLabels);\n","import axios from \"axios\";\nimport React, { Component } from \"react\";\nimport { BiRightArrowAlt } from \"react-icons/bi\";\nimport {\n  MdDelete,\n  MdEdit,\n  MdHighlightOff,\n  MdRemoveRedEye,\n  MdSettings,\n} from \"react-icons/md\";\nimport { SiAddthis } from \"react-icons/si\";\nimport { TiInputChecked } from \"react-icons/ti\";\nimport { connect } from \"react-redux\";\nimport { Redirect } from \"react-router-dom\";\nimport { PushPopupAlert } from \"../../actions\";\nimport { customizeUserAccess } from \"../../actions/users\";\nimport { PopupAlertData } from \"../../components/Alert/Popup\";\nimport Table from \"../../components/Table/Table\";\nimport { PopupAlertTheme } from \"../../interfaces/popupAlert\";\nimport {\n  UserInterface,\n  AccessTaskInterface,\n  CustomeAccessInterface,\n} from \"../../shared/interfaces\";\nimport { API } from \"../../utils/api\";\nimport { errorToText } from \"../../utils/errors\";\n\ninterface AppProps {\n  userInfo: UserInterface | undefined;\n  manageUserId: string;\n  setUserAccess: (value: AccessTaskInterface[] | null) => void;\n  userAccess: AccessTaskInterface[] | null;\n  setCurrentAccess: (value: AccessTaskInterface | null) => void;\n  currentAccess: AccessTaskInterface | null;\n  currentPage: number;\n\n  // REDUX ==============\n  PushPopupAlert: (alert: PopupAlertData) => void;\n  customizeUserAccess: Function;\n}\n\ninterface AppStates {\n  loading: boolean;\n  loadindRequest: boolean;\n  // currentAccess:AccessTaskInterface | null;\n  // userAccess:AccessTaskInterface[] | null;\n  createPermission: boolean;\n  viewPermission: boolean;\n  updatePermission: boolean;\n  deletePermission: boolean;\n}\n\nclass _UserAccess extends Component<AppProps, AppStates> {\n  constructor(props: AppProps) {\n    super(props);\n\n    this.state = {\n      loading: true,\n      loadindRequest: false,\n      // currentAccess:null,\n      // userAccess:null,\n      createPermission: false,\n      viewPermission: false,\n      updatePermission: false,\n      deletePermission: false,\n    };\n  }\n\n  setViewPermission = (value: boolean) => {\n    this.setState({ viewPermission: value });\n  };\n\n  setLoadindRequest = (value: boolean) => {\n    this.setState({ loadindRequest: value });\n  };\n\n  setCreatePermission = (value: boolean) => {\n    this.setState({ createPermission: value });\n  };\n\n  setUpdatePermission = (value: boolean) => {\n    this.setState({ updatePermission: value });\n  };\n\n  setDeletePermission = (value: boolean) => {\n    this.setState({ deletePermission: value });\n  };\n\n  setLoadind = (value: boolean) => {\n    this.setState({ loading: value });\n  };\n\n  overrideUserAccess = (\n    default_access: AccessTaskInterface[],\n    custome_access: AccessTaskInterface[]\n  ) => {\n    if (default_access && custome_access && custome_access.length > 0) {\n      let overideAccess: AccessTaskInterface[] = [];\n      for (const key in default_access) {\n        if (Object.prototype.hasOwnProperty.call(default_access, key)) {\n          const findCustom = custome_access.find(\n            (custom) => custom.id === default_access[key].id\n          );\n          if (findCustom) {\n            overideAccess.push(findCustom);\n          } else {\n            overideAccess.push(default_access[key]);\n          }\n        }\n      }\n      this.props.setUserAccess(overideAccess);\n    }\n  };\n\n  componentDidMount = () => {\n    if (this.props.userInfo && this.props.userInfo.custome_access) {\n      this.props.userInfo.default_access &&\n        this.overrideUserAccess(\n          this.props.userInfo.default_access.access,\n          this.props.userInfo.custome_access.access\n        );\n      this.setLoadind(false);\n    } else {\n      this.props.userInfo &&\n        this.props.userInfo.default_access &&\n        this.props.setUserAccess(this.props.userInfo.default_access.access);\n      this.setLoadind(false);\n    }\n  };\n\n  tableData = (): JSX.Element[] => {\n    if (!this.props.userAccess)\n      return [\n        <tr key={Math.random()}>\n          <td>No data</td>\n        </tr>,\n      ];\n    return this.props.userAccess.map((access: AccessTaskInterface, i) => (\n      <tr\n        key={i + access.id + Math.random()}\n        className={`text-left border-b border-gray-200 cursor-pointer hover:bg-gray-100 ${\n          this.props.currentAccess &&\n          this.props.currentAccess.id === access.id &&\n          \"bg-gray-200 border my-3 hover:bg-gray-100\"\n        }`}\n        onClick={() =>\n          this.props.currentAccess && this.props.currentAccess.id === access.id\n            ? (this.props.setCurrentAccess(null),\n              this.setCreatePermission(false),\n              this.setViewPermission(false),\n              this.setUpdatePermission(false),\n              this.setDeletePermission(false))\n            : (this.props.setCurrentAccess(access),\n              this.setCreatePermission(access.permitted.create),\n              this.setViewPermission(access.permitted.view),\n              this.setUpdatePermission(access.permitted.update),\n              this.setDeletePermission(access.permitted.delete))\n        }\n      >\n        <td className=\"px-2 py-1\">\n          <label className=\"inline-flex items-center\">\n            {/* <input\n              type=\"radio\"\n              name=\"taskAccess\"\n              value={access.id}\n              className=\"form-radio h-4 w-4 text-gray-600\"\n              onChange={() => {\n                currentAccess\n                  ? this.setState({ currentAccess: null })\n                  : this.setState({ currentAccess: access });\n              }}\n              checked={currentAccess ? true : false}\n            /> */}\n            <span className=\"text-gray-900 capitalize text-xl font-normal cursor-pointer\">\n              {access.task}\n            </span>\n          </label>\n        </td>\n        <td>\n          <div\n            className={`inline-flex items-center text-xl ${\n              access.permitted.create ? \"text-green-700\" : \"text-red-700\"\n            }`}\n          >\n            {access.permitted.create ? <TiInputChecked /> : <MdHighlightOff />}\n            {access.permitted.create ? \" Yes\" : \"No\"}\n          </div>\n        </td>\n        <td>\n          <div\n            className={`inline-flex items-center text-xl ${\n              access.permitted.view ? \"text-green-700\" : \"text-red-700\"\n            }`}\n          >\n            {access.permitted.view ? <TiInputChecked /> : <MdHighlightOff />}\n            {access.permitted.view ? \" Yes\" : \"No\"}\n          </div>\n        </td>\n        <td>\n          <div\n            className={`inline-flex items-center text-xl ${\n              access.permitted.update ? \"text-green-700\" : \"text-red-700\"\n            }`}\n          >\n            {access.permitted.update ? <TiInputChecked /> : <MdHighlightOff />}\n            {access.permitted.update ? \" Yes\" : \"No\"}\n          </div>\n        </td>\n        <td>\n          <div\n            className={`inline-flex items-center text-xl ${\n              access.permitted.delete ? \"text-green-700\" : \"text-red-700\"\n            }`}\n          >\n            {access.permitted.delete ? <TiInputChecked /> : <MdHighlightOff />}\n            {access.permitted.delete ? \" Yes\" : \"No\"}\n          </div>\n        </td>\n      </tr>\n    ));\n  };\n\n  handleCustomization = async (e: React.FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n    if (this.props.userInfo) {\n      this.setLoadindRequest(true);\n      let task: [] | CustomeAccessInterface | null = null;\n      task = this.props.userInfo.custome_access;\n      let index = -1;\n\n      try {\n        if (task && this.props.currentAccess) {\n          index = task.access.findIndex(\n            (access) => access.id === this.props.currentAccess!.id\n          );\n          if (index >= 0) {\n            task.access[index].permitted.create = this.state.createPermission;\n            task.access[index].permitted.view = this.state.viewPermission;\n            task.access[index].permitted.update = this.state.updatePermission;\n            task.access[index].permitted.delete = this.state.deletePermission;\n          } else {\n            task.access.push({\n              id: this.props.currentAccess.id,\n              task: this.props.currentAccess.task,\n              key: this.props.currentAccess.key,\n              permitted: {\n                create: this.state.createPermission,\n                view: this.state.viewPermission,\n                update: this.state.updatePermission,\n                delete: this.state.deletePermission,\n              },\n            });\n          }\n        } else if (this.props.currentAccess) {\n          task = {\n            access: [\n              {\n                id: this.props.currentAccess.id,\n                task: this.props.currentAccess.task,\n                key: this.props.currentAccess.key,\n                permitted: {\n                  create: this.state.createPermission,\n                  view: this.state.viewPermission,\n                  update: this.state.updatePermission,\n                  delete: this.state.deletePermission,\n                },\n              },\n            ],\n            user_id: this.props.userInfo.user_id,\n            custome_user_access_id: \"\",\n          };\n        }\n\n        if (task) {\n          let res;\n          if (this.props.userInfo.custome_access !== null) {\n            res = await axios.patch<{ data: CustomeAccessInterface }>(\n              `${API.USER}/access/custom`,\n              {\n                access: task.access,\n                user_id: this.props.userInfo.user_id,\n              }\n            );\n          } else {\n            res = await axios.post<{ data: CustomeAccessInterface }>(\n              `${API.USER}/access/custom`,\n              {\n                access: task.access,\n                user_id: this.props.userInfo.user_id,\n              }\n            );\n          }\n\n          if (res) {\n            task.custome_user_access_id = res.data.data.custome_user_access_id;\n\n            this.props.customizeUserAccess(task, this.props.currentPage);\n            task &&\n              this.props.userInfo.default_access &&\n              this.overrideUserAccess(\n                this.props.userInfo.default_access.access,\n                task.access\n              );\n            this.props.PushPopupAlert({\n              title: `Resetting User Access complete successfully`,\n              theme: PopupAlertTheme.info,\n            });\n\n            task = null;\n            this.props.setCurrentAccess(null);\n            this.setCreatePermission(false);\n            this.setViewPermission(false);\n            this.setUpdatePermission(false);\n            this.setDeletePermission(false);\n          }\n        }\n      } catch (error) {\n        console.error({ customize_access: error });\n        this.props.PushPopupAlert({\n          title: errorToText(error),\n          theme: PopupAlertTheme.danger,\n        });\n      }\n      this.setLoadindRequest(false);\n    }\n  };\n\n  render() {\n    if (this.props.userInfo === undefined) {\n      return <Redirect to=\"/users\" />;\n    }\n\n    if (this.state.loading || this.props.userInfo === null) {\n      return (\n        <div className=\"text-center py-7 font-bold text-4xl text-gray-400 animate-pulse\">\n          Loading User Access...\n        </div>\n      );\n    }\n\n    return (\n      <div>\n        <div className=\"grid grid-cols-1 md:grid-cols-5 gap-4 mx-1 my-2\">\n          <div\n            className={`col-span-1 md:col-span-3 bg-white w-full overflow-x-auto border rounded text-center p-2 ${\n              this.props.currentAccess ? \"hidden md:block\" : \"\"\n            }`}\n          >\n            <span className=\"text-gray-600 mt-2 font-semibold text-2xl\">\n              Settings\n            </span>\n            {!this.state.loading && (\n              <div className=\"overflow-x-auto w-full\">\n                <Table\n                  columns={[\n                    {\n                      columnTitle: \"Access Name\",\n                      alignText: \"left\",\n                      padding: \"p-3\",\n                    },\n                    { columnTitle: \"Create\", alignText: \"left\" },\n                    { columnTitle: \"View\", alignText: \"left\" },\n                    { columnTitle: \"Update\", alignText: \"left\" },\n                    { columnTitle: \"Delete\", alignText: \"left\" },\n                  ]}\n                  rows={this.tableData}\n                  pagination={false}\n                  search={true}\n                  searchBG=\"bg-gray-50\"\n                  thColor=\"gray\"\n                />\n              </div>\n            )}\n          </div>\n          <div className={`col-span-1 md:col-span-2`}>\n            {!this.props.currentAccess ? (\n              <div className=\"w-full hidden md:flex flex-col items-center text-gray-600 gap-1 py-3\">\n                <MdSettings className=\"w-20 h-20\" />\n                <span className=\"text-8 md:text-12\">\n                  Choose Access to Customize\n                </span>\n              </div>\n            ) : (\n              <div className={``}>\n                <h1 className=\"text-2xl md:text-3xl font-semibold text-center my-2 text-gray-900\">\n                  Customize User Access\n                </h1>\n                <div className=\"flex justify-center mb-3\">\n                  <h2 className=\"text-2xl font-semibold text-center text-gray-600 flex flex-row items-center\">\n                    <BiRightArrowAlt className=\"w-7 h-7\" />\n                    {this.props.currentAccess.task}\n                  </h2>\n                </div>\n\n                <div className=\"flex flex-col px-2 md:px-1\">\n                  <form\n                    className=\"flex flex-col items-center\"\n                    onSubmit={(e) => this.handleCustomization(e)}\n                  >\n                    <div className=\"inline-flex gap-2 items-center\">\n                      <SiAddthis className=\"w-7 h-7 text-gray-600\" />\n                      <div className=\"flex flex-col\">\n                        <h3 className=\"font-semibold text-xl\">Create</h3>\n                        <span className=\"text-gray-600 text-sm md:pr-1\">\n                          This permission gives the user the ability to create\n                        </span>\n                      </div>\n                      <input\n                        type=\"checkbox\"\n                        className=\"form-checkbox h-7 w-7 text-teal-600\"\n                        onChange={() =>\n                          this.setCreatePermission(!this.state.createPermission)\n                        }\n                        checked={this.state.createPermission}\n                        disabled={this.state.loadindRequest}\n                      />\n                    </div>\n                    <div className=\"inline-flex gap-2 items-center\">\n                      <MdRemoveRedEye className=\"w-7 h-7 text-gray-600\" />\n                      <div className=\"flex flex-col\">\n                        <h3 className=\"font-semibold text-xl\">View</h3>\n                        <span className=\"text-gray-600 text-sm md:pr-4\">\n                          This permission gives the user the ability to view\n                        </span>\n                      </div>\n                      <input\n                        type=\"checkbox\"\n                        className=\"form-checkbox h-7 w-7 text-teal-600\"\n                        onChange={() =>\n                          this.setViewPermission(!this.state.viewPermission)\n                        }\n                        checked={this.state.viewPermission}\n                        disabled={this.state.loadindRequest}\n                      />\n                    </div>\n                    <div className=\"inline-flex gap-2 items-center\">\n                      <MdEdit className=\"w-7 h-7 text-gray-600\" />\n                      <div className=\"flex flex-col\">\n                        <h3 className=\"font-semibold text-xl\">Update</h3>\n                        <span className=\"text-gray-600 text-sm\">\n                          This permission gives the user the ability to update\n                        </span>\n                      </div>\n                      <input\n                        type=\"checkbox\"\n                        className=\"form-checkbox h-7 w-7 text-teal-600\"\n                        onChange={() =>\n                          this.setUpdatePermission(!this.state.updatePermission)\n                        }\n                        checked={this.state.updatePermission}\n                        disabled={this.state.loadindRequest}\n                      />\n                    </div>\n                    <div className=\"inline-flex gap-2 items-center\">\n                      <MdDelete className=\"w-7 h-7 text-gray-600\" />\n                      <div className=\"flex flex-col\">\n                        <h3 className=\"font-semibold text-xl\">Delete</h3>\n                        <span className=\"text-gray-600 text-sm md:pr-1\">\n                          This permission gives the user the ability to delete\n                        </span>\n                      </div>\n                      <input\n                        type=\"checkbox\"\n                        className=\"form-checkbox h-7 w-7 text-teal-600\"\n                        onChange={() =>\n                          this.setDeletePermission(!this.state.deletePermission)\n                        }\n                        checked={this.state.deletePermission}\n                        disabled={this.state.loadindRequest}\n                      />\n                    </div>\n\n                    <div className=\"flex items-center justify-center w-full py-3 gap-2\">\n                      {/* <button className=\"btn btn-secondary bg-red-600\">Back</button> */}\n                      <button\n                        className=\"btn bg-gray-500 hover:bg-gray-700 focus:outline-none text-white\"\n                        disabled={this.state.loadindRequest}\n                        onClick={() => {\n                          this.props.setCurrentAccess(null);\n                          this.setCreatePermission(false);\n                          this.setViewPermission(false);\n                          this.setUpdatePermission(false);\n                          this.setDeletePermission(false);\n                        }}\n                      >\n                        Cancel\n                      </button>\n                      <button\n                        className=\"btn btn-blue\"\n                        disabled={this.state.loadindRequest}\n                      >\n                        {!this.state.loadindRequest\n                          ? \"Save Change\"\n                          : \"Processing..\"}\n                      </button>\n                    </div>\n                  </form>\n                </div>\n              </div>\n            )}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport const UserAccess = React.memo(\n  connect(null, {\n    customizeUserAccess,\n    PushPopupAlert,\n  })(_UserAccess)\n);\n","import React, { Fragment, useState } from \"react\";\nimport { AiFillDashboard } from \"react-icons/ai\";\nimport { MdBrightness1 } from \"react-icons/md\";\nimport { SessionPlanInterface } from \"../../../interfaces\";\nimport { education_category } from \"../../../interfaces/education_category\";\nimport { reportTitleType } from \"../../Admin/ExamReport/ExamReport\";\nimport ExamReportModals, {\n  ModalForTypes,\n} from \"../../Admin/ExamReport/ExamReportModals\";\n\ntype ExamReportTitleProps = {\n  // FOR SETTINGS ==============================\n  loading: boolean;\n\n  // FOR REPORT TYPE =========================\n  reportTitle: reportTitleType;\n  setReportTitle: (title: reportTitleType) => void;\n\n  //   FOR EDUCATION CATEGORY & PERIOD =====================\n  education_categories: education_category[] | null;\n  loadingEducation: boolean;\n  thisEducation: education_category | null;\n  setThisEducation: (value: education_category | null) => void;\n\n  //   FOR APPLICATION SESSION ============================\n  thisPeriod: string;\n  setThisPeriod: (value: string) => void;\n  application_sessions: SessionPlanInterface[];\n  onPeriodChange?: (period_id: string) => void;\n};\n\nconst ExamDashboardTitle: React.FC<ExamReportTitleProps> = (props) => {\n  const [changeReport, setChangeReport] = useState<boolean>(false);\n\n  return (\n    <Fragment>\n      <div className=\"mt-3 rounded flex flex-col md:flex-row md:justify-between items-start\">\n        <div className=\"flex flex-row items-center gap-3 mb-2\">\n          <AiFillDashboard className=\"text-7xl text-blue-600 hidden md:block\" />\n          <div className=\"flex flex-col\">\n            <span className=\"text-blue-600 text-3xl font-bold\">\n              Exam Dashboard\n            </span>\n            {false && (\n              <div\n                onClick={() => setChangeReport(true)}\n                className=\"flex flex-row gap-2\"\n              >\n                <span className=\"text-gray-500\">Report type: </span>\n                <span className=\"text-gray-600 font-bold underline cursor-pointer\">\n                  {props.reportTitle}\n                </span>\n              </div>\n            )}\n          </div>\n        </div>\n\n        {/* FILTER SECTION PERIOD && EDUCATION */}\n        <section className=\"w-full md:w-auto my-2 md:my-0\">\n          {/* EDUCATION CATEGORY sections */}\n          <section className=\"flex items-start md:items-center justify-start md:justify-end gap-2\">\n            {props.education_categories &&\n              props.education_categories.length > 0 &&\n              props.education_categories.map((education, index) => (\n                <section\n                  key={education.education_institute_id + index}\n                  className={`w-auto ${\n                    props.loading || props.loadingEducation\n                      ? \"cursor-not-allowed\"\n                      : \"cursor-pointer\"\n                  } ${\n                    props.thisEducation &&\n                    education.education_institute_id ===\n                      props.thisEducation.education_institute_id\n                      ? \"bg-blue-500 text-white font-bold\"\n                      : \"bg-gray-100 text-blue-800\"\n                  } mb-1 hover:font-bold py-1 hover:bg-blue-400 hover:text-white --font-bold  px-2 rounded-md flex items-center animate__animated animate__zoomIn`}\n                  onClick={() =>\n                    !props.loading &&\n                    !props.loadingEducation &&\n                    props.setThisEducation(education)\n                  }\n                >\n                  <section className=\"flex-1\">\n                    <MdBrightness1 className=\"inline-block mr-1 text-xs\" />\n                    <span>{education.education_category_title}</span>\n                  </section>\n\n                  {/* {count > 0 ? ( */}\n                  {/* <span className=\"px-0.5 my-1 text-xs bg-blue-600 text-white rounded-full\">\n              12\n            </span> */}\n                  {/* ) : null} */}\n                </section>\n              ))}\n          </section>\n          {/* end EDUCATION CATEGORY sections */}\n          <div>\n            <select\n              className={`bg-white text-gray-600 border border-gray-400 rounded p-2 focus:outline-none ${\n                props.loading && \"cursor-wait\"\n              }`}\n              value={props.thisPeriod}\n              disabled={props.loading || props.loadingEducation}\n              onChange={(e) => {\n                props.setThisPeriod(e.target.value);\n                props.onPeriodChange && props.onPeriodChange(e.target.value);\n                // props.setLoadingApplications(true);\n                // props.GetApplicationPerPeriod(\n                //   e.target.value,\n                //   (status: boolean, msg: string) => {\n                //     props.setLoadingApplications(status);\n                //     if (!status && msg.length > 0) {\n                //       props.PushPopupAlert({\n                //         title: errorToText(msg),\n                //         theme: PopupAlertTheme.danger,\n                //       });\n                //     }\n                //   }\n                // );\n              }}\n            >\n              {props.application_sessions.map((session, item) => (\n                <option key={session._id + item} value={session._id}>\n                  {session.session_plan_name}\n                </option>\n              ))}\n            </select>\n          </div>\n        </section>\n        {/* END FILTER SECTION PERIOD && EDUCATION */}\n      </div>\n      {/* CHANGE REPORT TYPE MODAL CONTROLLERS ============================================ */}\n      {changeReport && (\n        <ExamReportModals\n          modalFor={ModalForTypes.title}\n          modalState={changeReport}\n          reportTitle={props.reportTitle}\n          changeModalState={setChangeReport}\n          setReportTitle={props.setReportTitle}\n        />\n      )}\n      {/* END CHANGE REPORT TYPE MODAL CONTROLLERS ============================================ */}\n    </Fragment>\n  );\n};\n\nexport default React.memo(ExamDashboardTitle);\n","import React, { Component } from \"react\";\nimport { examPreparationStateInterface } from \"../../Admin/ExamReport/ExamList\";\nimport VBarChart from \"../ChartComponents/VBarChart\";\n\ntype ExamPreparationChartProps = {\n  examPreparationProgress: {\n    all: examPreparationStateInterface[];\n    finished: examPreparationStateInterface[];\n    remaining: examPreparationStateInterface[];\n  };\n};\n\nclass ExamPreparationChart extends Component<ExamPreparationChartProps> {\n  render() {\n    return (\n      <div className=\"my-3 max-w-full bg-white\">\n        <div className=\"flex items-center justify-between px-3\">\n          <span className=\"text-gray-600 font-semibold text-xl py-4 px-0\">\n            Exams preparation chart\n          </span>\n        </div>\n\n        <div className=\"mb-4 pb-2 px-3\">\n          <VBarChart\n            labels={[\"Remaining exams\", \"Prepared exams\"]}\n            categoriesLabel={[\"Exam preparation progress\"]}\n            dataLabels={true}\n            yaxisText=\"Exam preparation progress\"\n            tooltipText=\"(Exams)\"\n            series={[\n              {\n                name: \"Remaining exams\",\n                data: [this.props.examPreparationProgress.remaining.length],\n              },\n              {\n                name: \"Prepared exams\",\n                data: [this.props.examPreparationProgress.finished.length],\n              },\n            ]}\n            colors={[\"#4b5563\", \"#469769\"]}\n            defaultBar={{\n              borderRadius: 4,\n              horizontal: false,\n              columnWidth: \"95%\",\n              endingShape: \"rounded\",\n            }}\n            chartHeight={550}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default React.memo(ExamPreparationChart);\n","import React, { Component } from \"react\";\nimport { examProgressStateInterface } from \"../../Admin/ExamReport/DoneExamList\";\nimport VBarChart from \"../ChartComponents/VBarChart\";\n\ntype ExamProgressChartProps = {\n  progressData: {\n    all: examProgressStateInterface[];\n    finished: examProgressStateInterface[];\n    remaining: examProgressStateInterface[];\n  };\n};\n\nclass ExamProgressChart extends Component<ExamProgressChartProps> {\n  render() {\n    return (\n      <div className=\"my-3 max-w-full bg-white\">\n        <div className=\"flex items-center justify-between px-3\">\n          <span className=\"text-gray-600 font-semibold text-xl py-4 px-0\">\n            Examination progress chart\n          </span>\n        </div>\n\n        <div className=\"mb-4 pb-2 px-3\">\n          <VBarChart\n            labels={[\"Remaining exams\", \"Prepared exams\"]}\n            categoriesLabel={[\"Examinations progress\"]}\n            dataLabels={true}\n            yaxisText=\"Examination progress\"\n            tooltipText=\"(Exams)\"\n            series={[\n              {\n                name: \"Remaining exams\",\n                data: [this.props.progressData.remaining.length],\n              },\n              {\n                name: \"Done exams\",\n                data: [this.props.progressData.finished.length],\n              },\n            ]}\n            colors={[\"#4b5563\", \"#469769\"]}\n            defaultBar={{\n              borderRadius: 4,\n              horizontal: false,\n              columnWidth: \"95%\",\n              endingShape: \"rounded\",\n            }}\n            chartHeight={550}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default React.memo(ExamProgressChart);\n","import React, { Component } from \"react\";\nimport { candidatePerfomranceStateInterface } from \"../../Admin/ExamReport/CandidatePerformance\";\nimport VBarChart from \"../ChartComponents/VBarChart\";\n\ntype ExamPerformanceChartProps = {\n  examPerformance: {\n    all: candidatePerfomranceStateInterface[];\n    pass: candidatePerfomranceStateInterface[];\n    failed: candidatePerfomranceStateInterface[];\n    active: candidatePerfomranceStateInterface[];\n  };\n};\n\nclass ExamPerformanceChart extends Component<ExamPerformanceChartProps> {\n  render() {\n    return (\n      <div className=\"my-3 max-w-full bg-white\">\n        <div className=\"flex items-center justify-between px-3\">\n          <span className=\"text-gray-600 font-semibold text-xl py-4 px-0\">\n            Examination performance chart\n          </span>\n        </div>\n\n        <div className=\"mb-4 pb-2 px-3\">\n          <VBarChart\n            labels={[\"Pass applicant(s)\", \"Failed applicant(s)\"]}\n            categoriesLabel={[\"Exam preparation progress\"]}\n            dataLabels={true}\n            yaxisText=\"Exam performance\"\n            tooltipText=\"(Applicants)\"\n            series={[\n              {\n                name: \"Pass applicant(s)\",\n                data: [this.props.examPerformance.pass.length],\n              },\n              {\n                name: \"Failed applicant(s)\",\n                data: [this.props.examPerformance.failed.length],\n              },\n            ]}\n            colors={[\"#469769\", \"#d97724\"]}\n            defaultBar={{\n              borderRadius: 4,\n              horizontal: false,\n              columnWidth: \"95%\",\n              endingShape: \"rounded\",\n            }}\n            chartHeight={550}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default React.memo(ExamPerformanceChart);\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport {\n  Auth,\n  schoolLevelsStoreInterface,\n  loadCourses,\n  loadExamsList,\n  loadEducationCategories,\n  loadDoneExam,\n  loadSchoolLevels,\n  loadPerfomranceExam,\n  loadCandidatesExamPerformance,\n  PushPopupAlert,\n  FilterParamType,\n} from \"../../../actions\";\nimport { StoreState } from \"../../../reducers\";\nimport { GetAllSessionPlans } from \"../../../actions/session\";\nimport {\n  SessionPlanInterface,\n  course,\n  education_category,\n  ExamDoneAndRemainingByPeriodInterface,\n  school_level,\n} from \"../../../interfaces\";\nimport { ExamItemResponse } from \"../../../interfaces/prepare_exam\";\nimport { ExamReportReducerType } from \"../../../reducers/exam_report\";\nimport moment from \"moment\";\nimport { PopupAlertData } from \"../../../components/Alert/Popup\";\nimport {\n  candidatePerfomranceStateInterface,\n  FC_reportCandidatePerformanceData,\n  FC_reportCandidatePerformanceDataFilter,\n} from \"../../Admin/ExamReport/CandidatePerformance\";\nimport {\n  examProgressStateInterface,\n  FC_reportDoneExamList,\n} from \"../../Admin/ExamReport/DoneExamList\";\nimport {\n  examPreparationStateInterface,\n  FC_reportExamList,\n} from \"../../Admin/ExamReport/ExamList\";\nimport { reportTitleType } from \"../../Admin/ExamReport/ExamReport\";\nimport { PopupAlertTheme } from \"../../../interfaces/popupAlert\";\nimport NoSession from \"../../SessionSettings/NoSession\";\nimport ExamDashboardTitle from \"./ExamDashboardTitle\";\nimport ExamDashboardLabels from \"./ExamDashboardLabels\";\nimport { FaBookOpen } from \"react-icons/fa\";\nimport PieChart from \"../ChartComponents/PieChart\";\nimport ExamPreparationChart from \"./ExamPreparationChart\";\nimport ExamProgressChart from \"./ExamProgressChart\";\nimport ExamPerformanceChart from \"./ExamPerformanceChart\";\n\nexport const getLevelbyId = (\n  school_levels: school_level[] | null,\n  level_id: string\n): school_level | undefined => {\n  if (school_levels) {\n    return school_levels.find((item) => item.school_level_id === level_id);\n  }\n};\n\nexport const loadCoursesByInstitute = (\n  thisEducation: education_category | null,\n  courseList: course[] | null,\n  school_levels: school_level[] | null\n): course[] | null => {\n  let result: course[] | null = [],\n    defaultValue: boolean = false;\n  if (courseList && thisEducation) {\n    for (const key in courseList) {\n      if (Object.prototype.hasOwnProperty.call(courseList, key)) {\n        if (courseList[key].school_levels.length > 0) {\n          courseList[key].school_levels.forEach((level) => {\n            let levelDetail = getLevelbyId(school_levels, level);\n            if (\n              levelDetail &&\n              (levelDetail.education_institute.includes(\n                thisEducation.education_institute_id\n              ) ||\n                levelDetail.education_institute.length <= 0)\n            ) {\n              result && result.push(courseList![key]);\n            }\n          });\n        } else {\n          result && result.push(courseList![key]);\n        }\n      }\n    }\n  }\n  // RETURN DEFAULT VALUES ====================\n  else {\n    defaultValue = true;\n  }\n  return defaultValue ? courseList : result;\n};\n\nexport const loadExaminationProgress = (\n  DoneExamList: ExamDoneAndRemainingByPeriodInterface[] | null,\n  examsList: ExamItemResponse[] | null,\n  thisEducation: education_category | null,\n  courseList: course[] | null,\n  school_levels: school_level[] | null,\n  period: string\n): {\n  all: examProgressStateInterface[];\n  finished: examProgressStateInterface[];\n  remaining: examProgressStateInterface[];\n} | null => {\n  let allData: examProgressStateInterface[] = [],\n    completeExams: examProgressStateInterface[] = [],\n    remainingExams: examProgressStateInterface[] = [],\n    dataFound: boolean = false;\n  if (\n    DoneExamList &&\n    loadCoursesByInstitute(thisEducation, courseList, school_levels) &&\n    examsList\n  ) {\n    dataFound = true;\n    allData = FC_reportDoneExamList(\n      loadCoursesByInstitute(thisEducation, courseList, school_levels)!,\n      examsList,\n      DoneExamList\n    ).filter((item) => item.exam && item.exam.period === period);\n    completeExams = allData.filter(\n      (item) => item.preparation_status.toLocaleLowerCase() === \"done\"\n    );\n    remainingExams = allData.filter(\n      (item) => item.preparation_status.toLocaleLowerCase() === \"active\"\n    );\n  }\n  console.log(\"====================================\");\n  console.log({ loadExaminationProgress: DoneExamList });\n  console.log(\"====================================\");\n  return dataFound\n    ? { all: allData, finished: completeExams, remaining: remainingExams }\n    : null;\n};\n\nexport const loadExamPreparationProgress = (\n  dataList: examPreparationStateInterface[]\n): {\n  all: examPreparationStateInterface[];\n  finished: examPreparationStateInterface[];\n  remaining: examPreparationStateInterface[];\n} => {\n  let allData: examPreparationStateInterface[] = dataList,\n    preparedExams: examPreparationStateInterface[] = dataList.filter(\n      (item) => item.preparation_status === \"prepared\"\n    ),\n    remainingExams: examPreparationStateInterface[] = dataList.filter(\n      (item) => item.preparation_status === \"not prepared\"\n    );\n  return { all: allData, finished: preparedExams, remaining: remainingExams };\n};\n\nexport const isDatePast = (dateParam: string): boolean => {\n  const date = moment().format(\"DD-MM-YYYY\");\n  const todayDate = moment(date, \"DD-MM-YYYY\");\n  const pastDate = moment(dateParam, \"DD-MM-YYYY\");\n\n  const dDiff = todayDate.diff(pastDate);\n\n  if (dDiff > 0) {\n    return false;\n  } else {\n    return true;\n  }\n};\n\nexport const loadExamAttendance = (\n  applicantList: candidatePerfomranceStateInterface[],\n  period: string\n): {\n  all: candidatePerfomranceStateInterface[];\n  pass: candidatePerfomranceStateInterface[];\n  failed: candidatePerfomranceStateInterface[];\n  active: candidatePerfomranceStateInterface[];\n} => {\n  return {\n    all: applicantList.filter((item) => item.exam.period === period),\n    pass: applicantList.filter(\n      (item) =>\n        item.exam.period === period &&\n        (item.exam_stastus !== \"Editing\" || isDatePast(item.exam.exam_date)) &&\n        item.user_total_marks >= 50\n    ),\n    failed: applicantList.filter(\n      (item) =>\n        item.exam.period === period &&\n        (item.exam_stastus !== \"Editing\" || isDatePast(item.exam.exam_date)) &&\n        item.user_total_marks < 50\n    ),\n    active: applicantList.filter(\n      (item) =>\n        item.exam.period === period &&\n        item.exam_stastus === \"Editing\" &&\n        !isDatePast(item.exam.exam_date)\n    ),\n  };\n};\n\ninterface ExamDashboardProps {\n  auth: Auth;\n  application_sessions: SessionPlanInterface[] | null;\n  schoolLevels: schoolLevelsStoreInterface;\n  courses: course[] | null;\n  examsList: ExamItemResponse[] | null;\n  adminExamReport: ExamReportReducerType;\n  GetAllSessionPlans: Function;\n  loadEducationCategories: (callback: (loading: boolean) => void) => void;\n  loadCourses: (callback: (loading: boolean) => void) => void;\n  loadExamsList: (callback: (loading: boolean) => void) => void;\n  loadDoneExam: (period_id: string, callback: Function) => void;\n  loadPerfomranceExam: (period_id: string, callback: Function) => void;\n  loadSchoolLevels: (callback: (loading: boolean) => void) => void;\n  loadCandidatesExamPerformance: (\n    dataBody: FilterParamType | null,\n    callback: Function\n  ) => void;\n  PushPopupAlert: (alert: PopupAlertData) => void;\n}\n\ninterface ExamDashboardStates {\n  loading: boolean;\n  loadingCourses: boolean;\n  loadingExams: boolean;\n  loadingDoneExam: boolean;\n  loadingCandidatesExamPerformance: boolean;\n  loadingExamPerformance: boolean;\n  loadingSettings: boolean;\n  changingPeriod: boolean;\n  reportTitle: reportTitleType;\n  thisEducation: education_category | null;\n  thisPeriod: string;\n}\n\nclass _ExamDashboard extends Component<\n  ExamDashboardProps,\n  ExamDashboardStates\n> {\n  constructor(props: ExamDashboardProps) {\n    super(props);\n\n    this.state = {\n      loading: true,\n      loadingCourses: true,\n      loadingExams: true,\n      loadingDoneExam: true,\n      loadingCandidatesExamPerformance: true,\n      loadingExamPerformance: true,\n      loadingSettings: true,\n      changingPeriod: false,\n      reportTitle: reportTitleType.EXAM_PREPARATION,\n      thisEducation: null,\n      thisPeriod: \"\",\n    };\n  }\n\n  setLoading = (value: boolean) => {\n    this.setState({ loading: value });\n  };\n\n  setLoadingCourses = (value: boolean) => {\n    this.setState({ loadingCourses: value });\n  };\n\n  setLoadingExams = (value: boolean) => {\n    this.setState({ loadingExams: value });\n  };\n\n  setLoadingDoneExam = (value: boolean) => {\n    this.setState({ loadingDoneExam: value });\n  };\n\n  setLoadingCandidatesExamPerformance = (value: boolean) => {\n    this.setState({ loadingCandidatesExamPerformance: value });\n  };\n\n  setLoadingExamPerformance = (value: boolean) => {\n    this.setState({ loadingExamPerformance: value });\n  };\n\n  setLoadingSettings = (value: boolean) => {\n    this.setState({ loadingSettings: value });\n  };\n\n  setChangingPeriod = (value: boolean) => {\n    this.setState({ changingPeriod: value });\n  };\n\n  setReportTitle = (value: reportTitleType) => {\n    this.setState({ reportTitle: value });\n  };\n\n  setThisEducation = (value: education_category | null) => {\n    this.setState({ thisEducation: value });\n  };\n\n  setThisPeriod = (value: string) => {\n    this.setState({ thisPeriod: value });\n  };\n\n  loadByPeriods = (session: SessionPlanInterface) => {\n    this.props.loadDoneExam(session._id, (status: boolean, msg: string) => {\n      if (!status) {\n        if (msg.length > 0) {\n          this.props.PushPopupAlert({\n            title: msg,\n            theme: PopupAlertTheme.danger,\n          });\n        }\n        this.setLoadingDoneExam(false);\n      }\n    });\n\n    // --------------------------------------------\n    this.props.loadPerfomranceExam(\n      session._id,\n      (status: boolean, msg: string) => {\n        if (!status) {\n          if (msg.length > 0) {\n            this.props.PushPopupAlert({\n              title: msg,\n              theme: PopupAlertTheme.danger,\n            });\n          }\n          this.setLoadingExamPerformance(false);\n        }\n      }\n    );\n  };\n\n  componentDidMount = () => {\n    if (\n      this.props.schoolLevels.education_categories === null ||\n      this.props.schoolLevels.education_categories.length === 0\n    ) {\n      this.props.loadEducationCategories(this.setLoadingSettings);\n    } else if (\n      this.props.schoolLevels.education_categories.length > 0 &&\n      !this.state.thisEducation\n    ) {\n      this.setThisEducation(this.props.schoolLevels.education_categories[0]);\n      this.setLoadingSettings(false);\n    }\n\n    if (this.props.application_sessions === null) {\n      this.props.GetAllSessionPlans(\n        (status: boolean, msg: string, sessions?: SessionPlanInterface[]) => {\n          this.setLoadingSettings(status);\n          this.setLoading(status);\n          if (!status && msg.length) {\n            this.props.PushPopupAlert({\n              title: msg,\n              theme: PopupAlertTheme.danger,\n            });\n          }\n          if (!status && sessions && sessions.length > 0) {\n            let active_period: SessionPlanInterface | undefined;\n            active_period = sessions.find((item) => item.is_active);\n            if (active_period) {\n              this.setThisPeriod(active_period._id);\n            } else {\n              this.setThisPeriod(sessions[sessions.length - 1]._id);\n            }\n          }\n        }\n      );\n    } else if (\n      this.props.application_sessions.length > 0 &&\n      !this.state.thisPeriod.length\n    ) {\n      let active_period: SessionPlanInterface | undefined;\n      active_period = this.props.application_sessions.find(\n        (item) => item.is_active\n      );\n      if (active_period) {\n        this.setThisPeriod(active_period._id);\n        this.loadByPeriods(active_period);\n      } else {\n        this.setThisPeriod(\n          this.props.application_sessions[\n            this.props.application_sessions.length - 1\n          ]._id\n        );\n        this.loadByPeriods(\n          this.props.application_sessions[\n            this.props.application_sessions.length - 1\n          ]\n        );\n      }\n      this.setLoadingSettings(false);\n      this.setLoading(false);\n    }\n\n    if (\n      this.props.schoolLevels.school_levels === null ||\n      this.props.schoolLevels.school_levels.length <= 0\n    ) {\n      this.props.loadSchoolLevels(this.setLoadingSettings);\n    } else {\n      this.setLoadingSettings(false);\n    }\n\n    // if (this.state.thisPeriod.length > 0 && this.state.loadingDoneExam) {\n    //   this.props.loadDoneExam(\n    //     this.state.thisPeriod,\n    //     (status: boolean, msg: string) => {\n    //       if (!status) {\n    //         if (msg.length > 0) {\n    //           this.props.PushPopupAlert({\n    //             title: msg,\n    //             theme: PopupAlertTheme.danger,\n    //           });\n    //         }\n    //         this.setLoadingDoneExam(false);\n    //       }\n    //     }\n    //   );\n    // }\n    // if (this.state.thisPeriod.length > 0 && this.state.loadingExamPerformance) {\n    //   this.props.loadPerfomranceExam(\n    //     this.state.thisPeriod,\n    //     (status: boolean, msg: string) => {\n    //       if (!status) {\n    //         if (msg.length > 0) {\n    //           this.props.PushPopupAlert({\n    //             title: msg,\n    //             theme: PopupAlertTheme.danger,\n    //           });\n    //         }\n    //         this.setLoadingExamPerformance(false);\n    //       }\n    //     }\n    //   );\n    // }\n\n    if (\n      this.props.adminExamReport.CandidatesExamPerformance === null ||\n      (this.props.adminExamReport.CandidatesExamPerformance.length === 0 &&\n        this.state.loadingCandidatesExamPerformance)\n    ) {\n      this.props.loadCandidatesExamPerformance(\n        null,\n        (status: boolean, msg: string) => {\n          if (!status) {\n            if (msg.length > 0) {\n              this.props.PushPopupAlert({\n                title: msg,\n                theme: PopupAlertTheme.danger,\n              });\n            }\n            this.setLoadingCandidatesExamPerformance(false);\n          }\n        }\n      );\n    }\n  };\n\n  onPeriodChange = (period_id: string) => {\n    this.setLoadingDoneExam(true);\n    this.setLoadingExamPerformance(true);\n    this.setChangingPeriod(true);\n    this.props.loadDoneExam(period_id, (status: boolean, msg: string) => {\n      if (!status) {\n        let action: boolean = true;\n        if (msg.length > 0 && action) {\n          this.props.PushPopupAlert({\n            title: msg,\n            theme: PopupAlertTheme.danger,\n          });\n          action = false;\n        }\n        this.setLoadingDoneExam(false);\n      }\n    });\n\n    this.props.loadPerfomranceExam(\n      period_id,\n      (status: boolean, msg: string) => {\n        if (!status) {\n          let action: boolean = true;\n          if (msg.length > 0 && action) {\n            this.props.PushPopupAlert({\n              title: msg,\n              theme: PopupAlertTheme.danger,\n            });\n            action = false;\n          }\n          this.setLoadingExamPerformance(false);\n        }\n      }\n    );\n\n    if (!this.state.loadingDoneExam && !this.state.loadingExamPerformance) {\n      this.setChangingPeriod(false);\n    }\n  };\n\n  render() {\n    if (this.state.loading || this.props.application_sessions === null) {\n      return (\n        <div className=\"text-center mt-7 font-bold text-4xl text-gray-400 animate-pulse\">\n          Loading Data...\n        </div>\n      );\n    }\n\n    if (this.props.application_sessions.length === 0) {\n      return <NoSession />;\n    }\n\n    return (\n      <div>\n        {/* HEADER TITLE */}\n        <ExamDashboardTitle\n          reportTitle={this.state.reportTitle}\n          setReportTitle={this.setReportTitle}\n          loading={this.state.changingPeriod}\n          education_categories={this.props.schoolLevels.education_categories}\n          loadingEducation={false}\n          thisEducation={this.state.thisEducation}\n          setThisEducation={this.setThisEducation}\n          thisPeriod={this.state.thisPeriod}\n          setThisPeriod={this.setThisPeriod}\n          application_sessions={this.props.application_sessions}\n          onPeriodChange={this.onPeriodChange}\n        />\n        {/* END HEADER TITLE */}\n\n        {/* ----------------------------------------------------------- */}\n\n        {/* EXAMS PREPARATION PROGRESS LABELS ======================================= */}\n        {this.props.examsList &&\n          loadCoursesByInstitute(\n            this.state.thisEducation,\n            this.props.courses,\n            this.props.schoolLevels.school_levels\n          ) && (\n            <section className=\"my-2\">\n              <div className=\"text-2xl font-semibold text-gray-600\">\n                Exams preparation status\n              </div>\n              <ExamDashboardLabels\n                dataLabels={[\n                  {\n                    title: \"Total exams\",\n                    icon: FaBookOpen,\n                    iconColor: \"blue\",\n                    count: loadExamPreparationProgress(\n                      FC_reportExamList(\n                        loadCoursesByInstitute(\n                          this.state.thisEducation,\n                          this.props.courses,\n                          this.props.schoolLevels.school_levels\n                        )!,\n                        this.props.examsList,\n                        this.state.thisPeriod\n                      )\n                    ).all.length,\n                  },\n                  {\n                    title: \"Prepared exams\",\n                    icon: FaBookOpen,\n                    iconColor: \"green\",\n                    count: loadExamPreparationProgress(\n                      FC_reportExamList(\n                        loadCoursesByInstitute(\n                          this.state.thisEducation,\n                          this.props.courses,\n                          this.props.schoolLevels.school_levels\n                        )!,\n                        this.props.examsList,\n                        this.state.thisPeriod\n                      )\n                    ).finished.length,\n                  },\n                  {\n                    title: \"Remaining exams\",\n                    icon: FaBookOpen,\n                    iconColor: \"gray\",\n                    count: loadExamPreparationProgress(\n                      FC_reportExamList(\n                        loadCoursesByInstitute(\n                          this.state.thisEducation,\n                          this.props.courses,\n                          this.props.schoolLevels.school_levels\n                        )!,\n                        this.props.examsList,\n                        this.state.thisPeriod\n                      )\n                    ).remaining.length,\n                  },\n                ]}\n                labelsOnRow={5}\n              >\n                <div className=\"flex justify-center\">\n                  <PieChart\n                    options={{\n                      labels: [\"Prepared\", \"Remaining\"],\n                      legend: {\n                        show: false,\n                        position: \"bottom\",\n                        horizontalAlign: \"center\",\n                        fontSize: \"16px\",\n                        itemMargin: {\n                          horizontal: 3,\n                          vertical: 0,\n                        },\n                      },\n                      plotOptions: {\n                        pie: {\n                          donut: {\n                            labels: {\n                              show: true,\n                              name: {\n                                show: true,\n                                fontSize: \"16px\",\n                                //   fontFamily: \"Rubik\",\n                                color: \"#2564eb\",\n                                offsetY: -10,\n                              },\n                              value: {\n                                show: true,\n                                fontSize: \"20px\",\n                                fontFamily: \"Helvetica, Arial, sans-serif\",\n                                color: \"#2564eb\",\n                                offsetY: 10,\n                                formatter: function (val) {\n                                  return val;\n                                },\n                              },\n                              total: {\n                                show: true,\n                                label: \"Total\",\n                                color: \"#2564eb\",\n                                formatter: function (w) {\n                                  return w.globals.seriesTotals.reduce(\n                                    (a: number, b: number) => {\n                                      return a + b;\n                                    },\n                                    0\n                                  );\n                                },\n                              },\n                            },\n                          },\n                        },\n                      },\n                      colors: [\"#469769\", \"#4b5563\"],\n                    }}\n                    series={[\n                      loadExamPreparationProgress(\n                        FC_reportExamList(\n                          loadCoursesByInstitute(\n                            this.state.thisEducation,\n                            this.props.courses,\n                            this.props.schoolLevels.school_levels\n                          )!,\n                          this.props.examsList,\n                          this.state.thisPeriod\n                        )\n                      ).finished.length,\n                      loadExamPreparationProgress(\n                        FC_reportExamList(\n                          loadCoursesByInstitute(\n                            this.state.thisEducation,\n                            this.props.courses,\n                            this.props.schoolLevels.school_levels\n                          )!,\n                          this.props.examsList,\n                          this.state.thisPeriod\n                        )\n                      ).remaining.length,\n                    ]}\n                    width={210}\n                  />\n                </div>\n              </ExamDashboardLabels>\n            </section>\n          )}\n        {/* EXAMS PREPARATION PROGRESS LABELS ======================================= */}\n\n        {/* ===================================================================================== */}\n\n        {/* EXAMS PROGRESS LABELS ======================================= */}\n        {loadExaminationProgress(\n          this.props.adminExamReport.DoneExam,\n          this.props.examsList,\n          this.state.thisEducation,\n          this.props.courses,\n          this.props.schoolLevels.school_levels,\n          this.state.thisPeriod\n        ) && (\n          <section className=\"my-2\">\n            <div className=\"text-2xl font-semibold text-gray-600\">\n              Examination progress status\n            </div>\n            <ExamDashboardLabels\n              dataLabels={[\n                {\n                  title: \"Total exams\",\n                  icon: FaBookOpen,\n                  iconColor: \"blue\",\n                  count: loadExaminationProgress(\n                    this.props.adminExamReport.DoneExam,\n                    this.props.examsList,\n                    this.state.thisEducation,\n                    this.props.courses,\n                    this.props.schoolLevels.school_levels,\n                    this.state.thisPeriod\n                  )!.all.length,\n                },\n                {\n                  title: \"Done exams\",\n                  icon: FaBookOpen,\n                  iconColor: \"green\",\n                  count: loadExaminationProgress(\n                    this.props.adminExamReport.DoneExam,\n                    this.props.examsList,\n                    this.state.thisEducation,\n                    this.props.courses,\n                    this.props.schoolLevels.school_levels,\n                    this.state.thisPeriod\n                  )!.finished.length,\n                },\n                {\n                  title: \"Remaining exams\",\n                  icon: FaBookOpen,\n                  iconColor: \"gray\",\n                  count: loadExaminationProgress(\n                    this.props.adminExamReport.DoneExam,\n                    this.props.examsList,\n                    this.state.thisEducation,\n                    this.props.courses,\n                    this.props.schoolLevels.school_levels,\n                    this.state.thisPeriod\n                  )!.remaining.length,\n                },\n              ]}\n              labelsOnRow={5}\n            >\n              <div className=\"flex justify-center\">\n                <PieChart\n                  options={{\n                    labels: [\"Done\", \"Remaining\"],\n                    legend: {\n                      show: false,\n                      position: \"bottom\",\n                      horizontalAlign: \"center\",\n                      fontSize: \"16px\",\n                      itemMargin: {\n                        horizontal: 3,\n                        vertical: 0,\n                      },\n                    },\n                    plotOptions: {\n                      pie: {\n                        donut: {\n                          labels: {\n                            show: true,\n                            name: {\n                              show: true,\n                              fontSize: \"16px\",\n                              //   fontFamily: \"Rubik\",\n                              color: \"#2564eb\",\n                              offsetY: -10,\n                            },\n                            value: {\n                              show: true,\n                              fontSize: \"20px\",\n                              fontFamily: \"Helvetica, Arial, sans-serif\",\n                              color: \"#2564eb\",\n                              offsetY: 10,\n                              formatter: function (val) {\n                                return val;\n                              },\n                            },\n                            total: {\n                              show: true,\n                              label: \"Total\",\n                              color: \"#2564eb\",\n                              formatter: function (w) {\n                                return w.globals.seriesTotals.reduce(\n                                  (a: number, b: number) => {\n                                    return a + b;\n                                  },\n                                  0\n                                );\n                              },\n                            },\n                          },\n                        },\n                      },\n                    },\n                    colors: [\"#469769\", \"#4b5563\"],\n                  }}\n                  series={[\n                    loadExaminationProgress(\n                      this.props.adminExamReport.DoneExam,\n                      this.props.examsList,\n                      this.state.thisEducation,\n                      this.props.courses,\n                      this.props.schoolLevels.school_levels,\n                      this.state.thisPeriod\n                    )!.finished.length,\n                    loadExaminationProgress(\n                      this.props.adminExamReport.DoneExam,\n                      this.props.examsList,\n                      this.state.thisEducation,\n                      this.props.courses,\n                      this.props.schoolLevels.school_levels,\n                      this.state.thisPeriod\n                    )!.remaining.length,\n                  ]}\n                  width={210}\n                />\n              </div>\n            </ExamDashboardLabels>\n          </section>\n        )}\n        {/* EXAMS PROGRESS LABELS ======================================= */}\n\n        {/* ===================================================================================== */}\n\n        {/* EXAMS PERFORMANCE LABELS ======================================= */}\n        {this.props.adminExamReport.CandidatesExamPerformance &&\n          loadCoursesByInstitute(\n            this.state.thisEducation,\n            this.props.courses,\n            this.props.schoolLevels.school_levels\n          ) && (\n            <section className=\"my-2\">\n              <div className=\"text-2xl font-semibold text-gray-600\">\n                Examination performance status\n              </div>\n              <ExamDashboardLabels\n                dataLabels={[\n                  {\n                    title: \"Total attendance\",\n                    icon: FaBookOpen,\n                    iconColor: \"blue\",\n                    count: loadExamAttendance(\n                      FC_reportCandidatePerformanceDataFilter(\n                        FC_reportCandidatePerformanceData(\n                          loadCoursesByInstitute(\n                            this.state.thisEducation,\n                            this.props.courses,\n                            this.props.schoolLevels.school_levels\n                          )!,\n                          this.props.adminExamReport.CandidatesExamPerformance,\n                          \"all\"\n                        ),\n                        \"all\"\n                      ),\n                      this.state.thisPeriod\n                    ).all.length,\n                  },\n                  {\n                    title: \"Pass applicant(s)\",\n                    icon: FaBookOpen,\n                    iconColor: \"green\",\n                    count: loadExamAttendance(\n                      FC_reportCandidatePerformanceDataFilter(\n                        FC_reportCandidatePerformanceData(\n                          loadCoursesByInstitute(\n                            this.state.thisEducation,\n                            this.props.courses,\n                            this.props.schoolLevels.school_levels\n                          )!,\n                          this.props.adminExamReport.CandidatesExamPerformance,\n                          \"all\"\n                        ),\n                        \"all\"\n                      ),\n                      this.state.thisPeriod\n                    ).pass.length,\n                  },\n                  {\n                    title: \"Failed applicant(s)\",\n                    icon: FaBookOpen,\n                    iconColor: \"yellow\",\n                    count: loadExamAttendance(\n                      FC_reportCandidatePerformanceDataFilter(\n                        FC_reportCandidatePerformanceData(\n                          loadCoursesByInstitute(\n                            this.state.thisEducation,\n                            this.props.courses,\n                            this.props.schoolLevels.school_levels\n                          )!,\n                          this.props.adminExamReport.CandidatesExamPerformance,\n                          \"all\"\n                        ),\n                        \"all\"\n                      ),\n                      this.state.thisPeriod\n                    ).failed.length,\n                  },\n                  // {\n                  //   title: \"Doing exam\",\n                  //   icon: FaBookOpen,\n                  //   iconColor: \"gray\",\n                  //   count: loadExamAttendance(\n                  //     FC_reportCandidatePerformanceDataFilter(\n                  //       FC_reportCandidatePerformanceData(\n                  //         loadCoursesByInstitute(\n                  //           thisEducation,\n                  //           props.courses,\n                  //           props.schoolLevels.school_levels\n                  //         )!,\n                  //         props.adminExamReport.CandidatesExamPerformance,\n                  //         \"all\"\n                  //       ),\n                  //       \"all\"\n                  //     ),\n                  //     thisPeriod\n                  //   ).active.length,\n                  // },\n                ]}\n                labelsOnRow={5}\n              >\n                <div className=\"flex justify-center\">\n                  <PieChart\n                    options={{\n                      labels: [\"Pass\", \"Failed\"],\n                      // labels: [\"Pass\", \"Failed\", \"Doing Exam\"],\n                      legend: {\n                        show: false,\n                        position: \"bottom\",\n                        horizontalAlign: \"center\",\n                        fontSize: \"16px\",\n                        itemMargin: {\n                          horizontal: 3,\n                          vertical: 0,\n                        },\n                      },\n                      plotOptions: {\n                        pie: {\n                          donut: {\n                            labels: {\n                              show: true,\n                              name: {\n                                show: true,\n                                fontSize: \"16px\",\n                                //   fontFamily: \"Rubik\",\n                                color: \"#2564eb\",\n                                offsetY: -10,\n                              },\n                              value: {\n                                show: true,\n                                fontSize: \"20px\",\n                                fontFamily: \"Helvetica, Arial, sans-serif\",\n                                color: \"#2564eb\",\n                                offsetY: 10,\n                                formatter: function (val) {\n                                  return val;\n                                },\n                              },\n                              total: {\n                                show: true,\n                                label: \"Total\",\n                                color: \"#2564eb\",\n                                formatter: function (w) {\n                                  return w.globals.seriesTotals.reduce(\n                                    (a: number, b: number) => {\n                                      return a + b;\n                                    },\n                                    0\n                                  );\n                                },\n                              },\n                            },\n                          },\n                        },\n                      },\n                      colors: [\"#469769\", \"#d97724\"],\n                      // colors: [\"#469769\", \"#d97724\", \"#4b5563\"],\n                    }}\n                    series={[\n                      loadExamAttendance(\n                        FC_reportCandidatePerformanceDataFilter(\n                          FC_reportCandidatePerformanceData(\n                            loadCoursesByInstitute(\n                              this.state.thisEducation,\n                              this.props.courses,\n                              this.props.schoolLevels.school_levels\n                            )!,\n                            this.props.adminExamReport\n                              .CandidatesExamPerformance,\n                            \"all\"\n                          ),\n                          \"all\"\n                        ),\n                        this.state.thisPeriod\n                      ).pass.length,\n                      loadExamAttendance(\n                        FC_reportCandidatePerformanceDataFilter(\n                          FC_reportCandidatePerformanceData(\n                            loadCoursesByInstitute(\n                              this.state.thisEducation,\n                              this.props.courses,\n                              this.props.schoolLevels.school_levels\n                            )!,\n                            this.props.adminExamReport\n                              .CandidatesExamPerformance,\n                            \"all\"\n                          ),\n                          \"all\"\n                        ),\n                        this.state.thisPeriod\n                      ).failed.length,\n                      // loadExamAttendance(\n                      //   FC_reportCandidatePerformanceDataFilter(\n                      //     FC_reportCandidatePerformanceData(\n                      //       loadCoursesByInstitute(\n                      //         thisEducation,\n                      //         props.courses,\n                      //         props.schoolLevels.school_levels\n                      //       )!,\n                      //       props.adminExamReport.CandidatesExamPerformance,\n                      //       \"all\"\n                      //     ),\n                      //     \"all\"\n                      //   ),\n                      //   thisPeriod\n                      // ).active.length,\n                    ]}\n                    width={210}\n                  />\n                </div>\n              </ExamDashboardLabels>\n            </section>\n          )}\n        {/* EXAMS PERFORMANCE LABELS ======================================= */}\n\n        {/* ------------------------------------------------------------------------------- */}\n\n        {/* ===================================================================================== */}\n\n        {/* EXAMS PREPARATION PROGRESS CHART ======================================= */}\n        {this.props.examsList &&\n          loadCoursesByInstitute(\n            this.state.thisEducation,\n            this.props.courses,\n            this.props.schoolLevels.school_levels\n          ) && (\n            <ExamPreparationChart\n              examPreparationProgress={loadExamPreparationProgress(\n                FC_reportExamList(\n                  loadCoursesByInstitute(\n                    this.state.thisEducation,\n                    this.props.courses,\n                    this.props.schoolLevels.school_levels\n                  )!,\n                  this.props.examsList,\n                  this.state.thisPeriod\n                )\n              )}\n            />\n          )}\n        {/* EXAMS PREPARATION PROGRESS CHART ======================================= */}\n\n        {/* ===================================================================================== */}\n\n        {/* EXAMINATION PROGRESS CHART ======================================= */}\n        {loadExaminationProgress(\n          this.props.adminExamReport.DoneExam,\n          this.props.examsList,\n          this.state.thisEducation,\n          this.props.courses,\n          this.props.schoolLevels.school_levels,\n          this.state.thisPeriod\n        ) && (\n          <ExamProgressChart\n            progressData={\n              loadExaminationProgress(\n                this.props.adminExamReport.DoneExam,\n                this.props.examsList,\n                this.state.thisEducation,\n                this.props.courses,\n                this.props.schoolLevels.school_levels,\n                this.state.thisPeriod\n              )!\n            }\n          />\n        )}\n        {/* EXAMINATION PROGRESS CHART ======================================= */}\n\n        {/* ===================================================================================== */}\n\n        {/* EXAM PERFORMANCE ON COUNTRY CHART ======================================= */}\n        {this.props.adminExamReport.CandidatesExamPerformance &&\n          loadCoursesByInstitute(\n            this.state.thisEducation,\n            this.props.courses,\n            this.props.schoolLevels.school_levels\n          ) && (\n            <ExamPerformanceChart\n              examPerformance={loadExamAttendance(\n                FC_reportCandidatePerformanceDataFilter(\n                  FC_reportCandidatePerformanceData(\n                    loadCoursesByInstitute(\n                      this.state.thisEducation,\n                      this.props.courses,\n                      this.props.schoolLevels.school_levels\n                    )!,\n                    this.props.adminExamReport.CandidatesExamPerformance,\n                    \"all\"\n                  ),\n                  \"all\"\n                ),\n                this.state.thisPeriod\n              )}\n            />\n          )}\n        {/* END EXAM PERFORMANCE ON COUNTRY CHART ======================================= */}\n\n        {/* ------------------------------------------------------------------------------- */}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = ({\n  auth,\n  sessionPlan,\n  schoolLevels,\n  course,\n  prepareExam,\n  adminExamReport,\n}: StoreState): {\n  auth: Auth;\n  application_sessions: SessionPlanInterface[] | null;\n  schoolLevels: schoolLevelsStoreInterface;\n  courses: course[] | null;\n  examsList: ExamItemResponse[] | null;\n  adminExamReport: ExamReportReducerType;\n} => {\n  return {\n    auth,\n    application_sessions: sessionPlan.allSessionPlans,\n    schoolLevels,\n    courses: course.courses,\n    examsList: prepareExam.examsList,\n    adminExamReport,\n  };\n};\n\nexport const ExamDashboard = connect(mapStateToProps, {\n  loadCourses,\n  loadExamsList,\n  loadEducationCategories,\n  loadDoneExam,\n  loadSchoolLevels,\n  loadPerfomranceExam,\n  loadCandidatesExamPerformance,\n  GetAllSessionPlans,\n  PushPopupAlert,\n})(_ExamDashboard);\n","import { UserByTypeInterfaceAPI } from \"./user_by_type\";\n\nexport interface centerReportInterface {\n  _id: string;\n  occupied: number;\n  isUsed: boolean;\n  center_id: string;\n  room_type: string;\n  room_number: number;\n  capacity: number;\n  center_name: string;\n  district_id: string;\n  district_name: string;\n  course_in_room: courseInRoomInterface[];\n}\n\nexport interface centerReportInterface_NEW {\n  _id: string;\n  occupied: number;\n  isUsed: boolean;\n  center_id: string;\n  room_type: string;\n  room_number: number;\n  capacity: number;\n  center_name: string;\n  district_id: string;\n  district_name: string;\n  invigilator: string;\n  course_in_room: courseInRoomInterface[];\n}\n\nexport interface courseInRoomInterface {\n  course_id: string;\n  course_name: string;\n  course_code: string;\n  occupied: number;\n}\n\nexport interface CenterToPrintInterface {\n  no: number;\n  district_name: string;\n  center_name: string;\n  room_number: number;\n  room_type: string;\n  room_capacity: number | \"-\";\n  room_occupation: number;\n  invigilator: string;\n}\n\nexport enum centerReportContentKeyInterface {\n  district_name = \"district_name\",\n  center_name = \"center_name\",\n  room_number = \"room_number\",\n  room_type = \"room_type\",\n  room_capacity = \"room_capacity\",\n  room_occupation = \"room_occupation\",\n  invigilator = \"invigilator\",\n}\n\nexport interface centerReportContentInterface {\n  key: centerReportContentKeyInterface;\n  title: string;\n  status: boolean;\n}\n\nexport interface roomDistrictInterface {\n  district_id: string;\n  district_name: string;\n}\n\nexport const getDistrictInRoom = (\n  allData: centerReportInterface[]\n): roomDistrictInterface[] => {\n  let result: roomDistrictInterface[] = [],\n    ids: string[] = [];\n  for (const key in allData) {\n    if (Object.prototype.hasOwnProperty.call(allData, key)) {\n      if (!ids.includes(allData[key].district_id)) {\n        ids.push(allData[key].district_id);\n        result.push({\n          district_id: allData[key].district_id,\n          district_name: allData[key].district_name,\n        });\n      }\n    }\n  }\n\n  return result;\n};\n\nexport const getRoomOccupation = (thisRoom: centerReportInterface): number => {\n  let result: number = 0;\n  for (const key in thisRoom.course_in_room) {\n    if (Object.prototype.hasOwnProperty.call(thisRoom.course_in_room, key)) {\n      const element = thisRoom.course_in_room[key];\n      if (result < element.occupied) {\n        result = element.occupied;\n      }\n    }\n  }\n  return result;\n};\n\nexport const roomWithOccupation = (\n  allRoom: centerReportInterface[],\n  invigilators: UserByTypeInterfaceAPI[]\n): centerReportInterface_NEW[] => {\n  let result: centerReportInterface_NEW[] = [];\n  for (const key in allRoom) {\n    if (Object.prototype.hasOwnProperty.call(allRoom, key)) {\n      let data: centerReportInterface = allRoom[key];\n      data.occupied = getRoomOccupation(allRoom[key]);\n      const invigilator = invigilators.find(\n        (item) => item.roles_to_users.room_id === allRoom[key]._id\n      );\n      result.push({\n        _id: data._id,\n        occupied: data.occupied,\n        isUsed: data.isUsed,\n        center_id: data.center_id,\n        room_type: data.room_type,\n        room_number: data.room_number,\n        capacity: data.capacity,\n        center_name: data.center_name,\n        district_id: data.district_id,\n        district_name: data.district_name,\n        invigilator: invigilator\n          ? invigilator.user_info.fname + \" \" + invigilator.user_info.lname\n          : \"\",\n        course_in_room: data.course_in_room,\n      });\n    }\n  }\n  return result;\n};\n\nexport const center_report_data: centerReportInterface[] = [\n  {\n    _id: \"61af5367558d345d93dea4397a3\",\n    occupied: 0,\n    isUsed: true,\n    center_id: \"61af534c558dd93dea43979f\",\n    room_type: \"Default\",\n    room_number: 0,\n    capacity: 1000000,\n    center_name: \"Gasabo district center\",\n    district_id: \"61af5338558dd93dea43979b\",\n    district_name: \"Kicukiro\",\n    course_in_room: [],\n  },\n  {\n    _id: \"61af5367558dd93defea4397a6\",\n    occupied: 0,\n    isUsed: true,\n    center_id: \"61af534c558dd93dea43979f\",\n    room_type: \" physical room\",\n    room_number: 112,\n    capacity: 100,\n    center_name: \"Center A\",\n    district_id: \"61af5338558dd93dea43979b\",\n    district_name: \"Kicukiro\",\n    course_in_room: [\n      {\n        course_id: \"61546609eeda150485905a32\",\n        course_name: \"Civisme\",\n        course_code: \"C001\",\n        occupied: 12,\n      },\n      {\n        course_id: \"61546684eeda150485905a3d\",\n        course_name: \"IPTC 1\",\n        course_code: \"ipop\",\n        occupied: 21,\n      },\n      {\n        course_id: \"615465faeeda150485905a2e\",\n        course_name: \"ICT2 for Me\",\n        course_code: \"ICT\",\n        occupied: 100,\n      },\n      {\n        course_id: \"61546401eeda1504859059cc\",\n        course_name: \"ICT in Life\",\n        course_code: \"ICT001\",\n        occupied: 1,\n      },\n    ],\n  },\n  {\n    _id: \"61af536755835dd93defea4397a6\",\n    occupied: 0,\n    isUsed: true,\n    center_id: \"61af534c558dd93dea43979f\",\n    room_type: \" physical room\",\n    room_number: 112,\n    capacity: 120,\n    center_name: \"Gasabo district center\",\n    district_id: \"61af5338558dd93dea43979b\",\n    district_name: \"Kicukiro\",\n    course_in_room: [\n      {\n        course_id: \"61546609eeda150485905a32\",\n        course_name: \"Civisme\",\n        course_code: \"C001\",\n        occupied: 100,\n      },\n      {\n        course_id: \"61546684eeda150485905a3d\",\n        course_name: \"IPTC 1\",\n        course_code: \"ipop\",\n        occupied: 1,\n      },\n      {\n        course_id: \"615465faeeda150485905a2e\",\n        course_name: \"ICT2 for Me\",\n        course_code: \"ICT\",\n        occupied: 10,\n      },\n      {\n        course_id: \"61546401eeda1504859059cc\",\n        course_name: \"ICT in Life\",\n        course_code: \"ICT001\",\n        occupied: 1,\n      },\n    ],\n  },\n];\n","import React, { useState } from \"react\";\nimport { MdSearch } from \"react-icons/md\";\nimport { roomDistrictInterface } from \"../../../interfaces/center_report\";\nimport { capitalizeFirstLetter } from \"../../../shared/dataTest\";\nimport search from \"../../../utils/search\";\n\ntype RoleListProps = {\n  setChooseDistrict: (value: boolean) => void;\n  districtList: roomDistrictInterface[];\n  setSelectedDistrict: (data: roomDistrictInterface | \"all\") => void;\n  selectedDistrict: roomDistrictInterface | \"all\";\n  loadindRequest: boolean;\n  bgWhite?: boolean;\n  isModal?: boolean;\n};\n\nconst DistrictList: React.FC<RoleListProps> = (props) => {\n  const [searchInput, setSearchInput] = useState<string>(\"\");\n  return (\n    <section\n      className={`${\n        props.isModal ? \"\" : \"border-2 rounded border-gray-400 shadow-md\"\n      }`}\n    >\n      {/* SEARCH PART */}\n      <div className=\"flex items-center w-full my-1\">\n        <MdSearch className=\"w-6 h-6 absolute ml-2\" />\n        <input\n          type=\"text\"\n          placeholder=\"Search\"\n          className={`focus:border-2 h-7 ml-1 pl-9 ${\n            props.isModal ? \"mr-1\" : \"mr-2\"\n          } bg-gray-100 focus:border-gray-700 w-full rounded`}\n          onChange={(e) => setSearchInput(e.target.value)}\n          value={searchInput}\n          disabled={props.districtList.length > 0 ? false : true}\n        />\n        {!props.isModal && (\n          <button\n            className=\"bg-red-200 text-red-700 py-1 px-2 mr-1 rounded text-sm focus:outline-none\"\n            type=\"button\"\n            onClick={() => {\n              props.setChooseDistrict(false);\n            }}\n          >\n            Close\n          </button>\n        )}\n      </div>\n      {/* END SEARCH PART ///////////////// */}\n\n      <div\n        className={`w-full h-52 mt-2 ${\n          props.isModal ? \"px-2\" : \"\"\n        } overflow-y-auto divide-y divide-gray-300 ${\n          props.bgWhite && \"bg-white\"\n        }`}\n      >\n        <section>\n          <div\n            className={`group flex items-center justify-between my-1 ${\n              props.selectedDistrict === \"all\"\n                ? \"cursor-default bg-blue-50 hover:bg-blue-100\"\n                : \"hover:bg-blue-100\"\n            }`}\n          >\n            <div\n              className={`p-1 w-full mr-2 ${\n                props.selectedDistrict === \"all\"\n                  ? \"cursor-default\"\n                  : \"cursor-pointer\"\n              }`}\n              onClick={() => {\n                props.setChooseDistrict(false);\n                !props.loadindRequest &&\n                  props.selectedDistrict !== \"all\" &&\n                  props.setSelectedDistrict(\"all\");\n              }}\n            >\n              <p className=\"text-sm font-medium text-black\">All district</p>\n            </div>\n            <button\n              type=\"button\"\n              className=\"bg-blue-200 group-hover:bg-blue-300 text-blue-700 group-hover:text-blue-800 p-1 mr-1 rounded text-sm\"\n            >\n              Choose\n            </button>\n          </div>\n        </section>\n        {search(props.districtList, searchInput).length > 0 ? (\n          search(props.districtList, searchInput).map((district, index) => (\n            <section key={index + district.district_id}>\n              <div className=\"group flex items-center justify-between my-1 hover:bg-gray-100\">\n                <div\n                  className=\"p-1 w-full mr-2 cursor-pointer\"\n                  onClick={() => {\n                    props.setChooseDistrict(false);\n                    !props.loadindRequest &&\n                      props.setSelectedDistrict(district);\n                  }}\n                >\n                  <p className=\"text-sm font-medium text-black\">\n                    {capitalizeFirstLetter(district.district_name)}\n                  </p>\n                </div>\n                <button\n                  type=\"button\"\n                  className=\"bg-blue-200 group-hover:bg-blue-300 text-blue-700 group-hover:text-blue-800 p-1 mr-1 rounded text-sm\"\n                >\n                  Choose\n                </button>\n              </div>\n            </section>\n          ))\n        ) : (\n          <div className=\"text-center p-3\">\n            <p className=\"text-base font-medium text-black\">\n              No district available\n            </p>\n          </div>\n        )}\n      </div>\n    </section>\n  );\n};\n\nexport default React.memo(DistrictList);\n"],"sourceRoot":""}
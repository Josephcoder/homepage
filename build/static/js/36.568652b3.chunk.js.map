{"version":3,"sources":["containers/PlacementLimit/PlacementLimit.tsx","components/Loading/TableLoading.tsx","components/ActionConfirm/ActionConfirm.tsx","actions/schools.ts"],"names":["_PlacementLimit","props","setIsEditing","status","setState","isEditing","setAction","action","setLoading","loading","setSessionError","sessionError","setLoadingRequest","loadingRequest","setLoadingConfirmedPost","loadingConfirmedPost","setCategory","categoryId","setForUpdate","districtId","districtCode","limitId","limit_Id","setSubcategoryId","subcategoryId","setAcademicSessionId","academicSessionId","setDistrictWith0s","districtWith0s","setZerosAllowed","zerosAllowed","setZerosModal","zerosModal","setFormData","formData","setAllDistrict","allDistricts","loadDistrict","a","axios","get","API","APPLICATION","res","data","console","log","districts","error","code_error","loadInstitutePlacementLimit","thisSession","getInstitutePlacementLimit","msg","length","PushPopupAlert","title","theme","PopupAlertTheme","danger","componentDidMount","state","document","documentCategory","getDocumentCategory","documentSubCategory","getDocumentSubCategory","sessionPlan","academicSessions","GetAllAcademicSession","find","item","is_active","_id","institutePlacementLimits","filterSubcategories","isEmptyOrSpaces","filter","category_id","addToFormData","qualificationId","value","thisDistrict","district_id","undefined","index","findIndex","subcategory_id","confirmed_post","push","institution_id","district_code","post_request_session_id","form","getLimitByIds","allData","result","_data","getMissingData","qualification","addMissingData","forEach","district","beforeSubmit","handleSubmit","post","PLACEMENT","confirmedPosts","patch","PlacementLimitFormInterface","updateInstitutePlacementLimit","limit_id","success","doPlacement_reply","errorToText","getPlacementLimitByIds","allPlacement","sessionId","getPlacementLimitByDistrict","setFormDataForUpdate","element","toString","this","className","NoResultThemes","Dark","Fragment","disabled","onChange","e","target","map","session","placeholder","category","user_detail_category_id","subcategory","user_detail_subcategory_id","onClick","cols","colSpan","Light","district_name","type","min","Number","autoFocus","modalType","ActionConfirmEnum","OTHER","confirmFun","setModalAction","description","Component","PlacementLimit","connect","auth","schools","TableLoading","displayCols","colsArray","ActionConfirm","id","DELETE","RESTORE_DELETE","INFO","getSchools","callback","dispatch","ActionTypes","GET_SCHOOLS","payload","getSchoolById","schoolId","GET_SCHOOLS_BY_ID","createSchool","CREATE_SCHOOL","updateSchool","UPDATE_SCHOOL","deleteSchool","DELETE_SCHOOL","fetchSchoolPosts","school_id","schoolPosts","FETCH_SCHOOL_POSTS","getSchoolPlacement","GET_SCHOOL_PLACEMENT","createSchoolPost","CREATE_SCHOOL_POST","updateSchoolPost","TYPE","UPDATE_SCHOOL_POST","fetchDistrictPosts","FETCH_DISTRICT_POSTS","getDistrictPlacement","GET_DISTRICT_PLACEMENT","institute_id","session_id","GET_INSTITUTE_PLACEMENT_LIMIT","getDistrictPlacementLimit","GET_DISTRICT_PLACEMENT_LIMIT","UPDATE_INSTITUTE_PLACEMENT_LIMIT"],"mappings":"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","file":"static/js/36.568652b3.chunk.js","sourcesContent":["import axios from \"axios\";\nimport React, { Component } from \"react\";\nimport { RiFolderSettingsFill } from \"react-icons/ri\";\nimport { connect } from \"react-redux\";\nimport { Auth, PushPopupAlert } from \"../../actions\";\nimport {\n  getDocumentCategory,\n  getDocumentSubCategory,\n} from \"../../actions/document\";\nimport {\n  getInstitutePlacementLimit,\n  updateInstitutePlacementLimit,\n} from \"../../actions/schools\";\nimport { GetAllAcademicSession } from \"../../actions/session\";\nimport ActionConfirm, {\n  ActionConfirmEnum,\n} from \"../../components/ActionConfirm/ActionConfirm\";\nimport { PopupAlertData } from \"../../components/Alert/Popup\";\nimport TableLoading from \"../../components/Loading/TableLoading\";\nimport NoResult, { NoResultThemes } from \"../../components/NoResult/NoResult\";\nimport { AcademicSessionInterface } from \"../../interfaces\";\nimport { PopupAlertTheme } from \"../../interfaces/popupAlert\";\nimport { StoreState } from \"../../reducers\";\nimport { DocumentReducerInterface } from \"../../reducers/document\";\nimport { SessionPlanReducerInterface } from \"../../reducers/session\";\nimport { isEmptyOrSpaces } from \"../../shared/dataTest\";\nimport {\n  AllDistrictInterface,\n  DocumentSubCategoryInterface,\n} from \"../../shared/interfaces\";\nimport { API } from \"../../utils/api\";\nimport { errorToText } from \"../../utils/errors\";\n\nexport interface PlacementListInterface {\n  confirmed_post: number;\n  status: boolean;\n  _id: string;\n  subcategory_id: string;\n  district_id: string;\n  district_code: number;\n  institution_id: string;\n  post_request_session_id: string;\n}\n\nexport interface PlacementLimitFormInterface {\n  subcategory_id: string;\n  district_id: string;\n  institution_id: string;\n  district_code: string;\n  confirmed_post: number;\n  post_request_session_id: string;\n}\n\ninterface PlacementLimitProps {\n  auth: Auth;\n  document: DocumentReducerInterface;\n  sessionPlan: SessionPlanReducerInterface;\n  institutePlacementLimits: PlacementListInterface[] | null;\n  GetAllAcademicSession: Function;\n  getDocumentCategory: Function;\n  getDocumentSubCategory: Function;\n  getInstitutePlacementLimit: Function;\n  updateInstitutePlacementLimit: Function;\n  PushPopupAlert: (alert: PopupAlertData) => void;\n}\n\ninterface PlacementLimitState {\n  loading: boolean;\n  loadingRequest: boolean;\n  isEditing: boolean;\n  allDistricts: AllDistrictInterface[] | null;\n  districtWith0s: string[];\n  zerosAllowed: boolean;\n  zerosModal: boolean;\n  categoryId: string;\n  districtId: string;\n  limit_Id: string;\n  districtCode: string;\n  subcategoryId: string;\n  academicSessionId: string;\n  sessionError: boolean;\n  loadingConfirmedPost: boolean;\n  formData: PlacementLimitFormInterface[] | null;\n  action: \"CREATE\" | \"UPDATE\" | null;\n}\n\nclass _PlacementLimit extends Component<\n  PlacementLimitProps,\n  PlacementLimitState\n> {\n  constructor(props: PlacementLimitProps) {\n    super(props);\n\n    this.state = {\n      isEditing: false,\n      loadingRequest: false,\n      loading: true,\n      allDistricts: null,\n      categoryId: \"\",\n      subcategoryId: \"\",\n      academicSessionId: \"\",\n      formData: null,\n      sessionError: false,\n      action: null,\n      districtWith0s: [],\n      zerosAllowed: false,\n      zerosModal: false,\n      loadingConfirmedPost: true,\n      districtId: \"\",\n      limit_Id: \"\",\n      districtCode: \"\",\n    };\n  }\n\n  setIsEditing = (status: boolean) => {\n    this.setState({ isEditing: status });\n  };\n\n  setAction = (status: \"CREATE\" | \"UPDATE\" | null) => {\n    this.setState({ action: status });\n  };\n\n  setLoading = (status: boolean) => {\n    this.setState({ loading: status });\n  };\n\n  setSessionError = (status: boolean) => {\n    this.setState({ sessionError: status });\n  };\n\n  setLoadingRequest = (status: boolean) => {\n    this.setState({ loadingRequest: status });\n  };\n\n  setLoadingConfirmedPost = (status: boolean) => {\n    this.setState({ loadingConfirmedPost: status });\n  };\n\n  setCategory = (status: string) => {\n    this.setState({ categoryId: status });\n  };\n\n  setForUpdate = (\n    districtId: string,\n    districtCode: string,\n    limitId: string\n  ) => {\n    this.setState({ districtId: districtId, districtCode, limit_Id: limitId });\n  };\n\n  setSubcategoryId = (status: string) => {\n    this.setState({ subcategoryId: status });\n  };\n\n  setAcademicSessionId = (status: string) => {\n    this.setState({ academicSessionId: status });\n  };\n\n  setDistrictWith0s = (status: string[]) => {\n    this.setState({ districtWith0s: status });\n  };\n\n  setZerosAllowed = (status: boolean) => {\n    this.setState({ zerosAllowed: status });\n  };\n\n  setZerosModal = (status: boolean) => {\n    this.setState({ zerosModal: status });\n  };\n\n  setFormData = (status: PlacementLimitFormInterface[] | null) => {\n    this.setState({ formData: status });\n  };\n\n  setAllDistrict = (status: AllDistrictInterface[] | null) => {\n    this.setState({ allDistricts: status });\n  };\n\n  loadDistrict = async () => {\n    this.setLoading(true);\n    try {\n      const res = await axios.get<AllDistrictInterface[]>(\n        `${API.APPLICATION}/district`\n      );\n      this.setAllDistrict(res.data);\n      console.log(\"====================================\");\n      console.log({ districts: res.data });\n      console.log(\"====================================\");\n    } catch (error) {\n      console.log(\"====================================\");\n      console.error({ code_error: error });\n      console.log(\"====================================\");\n    }\n    this.setLoading(false);\n  };\n\n  loadInstitutePlacementLimit = (thisSession: string) => {\n    this.props.getInstitutePlacementLimit(\n      \"6100592f646ddb0771e8fc50\",\n      thisSession,\n      (status: boolean, msg: string) => {\n        this.setLoadingConfirmedPost(status);\n        if (!status && msg.length > 0) {\n          this.props.PushPopupAlert({\n            title: msg,\n            theme: PopupAlertTheme.danger,\n          });\n        }\n      }\n    );\n  };\n\n  componentDidMount = () => {\n    // if (this.props.auth.user_access)\n    if (this.state.loading && !this.state.allDistricts) this.loadDistrict();\n    if (!this.props.document.documentCategory) this.props.getDocumentCategory();\n    if (!this.props.document.documentSubCategory)\n      this.props.getDocumentSubCategory();\n    if (\n      this.props.sessionPlan.academicSessions === null ||\n      this.props.sessionPlan.academicSessions.length <= 0\n    ) {\n      this.props.GetAllAcademicSession(\n        (status: boolean, msg: string, data?: AcademicSessionInterface[]) => {\n          this.setLoading(status);\n          if (!status && msg.length > 0) {\n            this.props.PushPopupAlert({\n              title: msg,\n              theme: PopupAlertTheme.danger,\n            });\n          }\n          if (data && data.length > 0) {\n            const thisSession = data.find((item) => item.is_active === true);\n            this.setAcademicSessionId(\n              thisSession ? thisSession._id : data[0]._id\n            );\n            if (\n              this.props.institutePlacementLimits === null ||\n              this.props.institutePlacementLimits.length === 0\n            ) {\n              this.loadInstitutePlacementLimit(\n                thisSession ? thisSession._id : data[0]._id\n              );\n            } else this.setLoadingConfirmedPost(false);\n          }\n        }\n      );\n    } else {\n      this.setLoading(false);\n      const thisSession = this.props.sessionPlan.academicSessions.find(\n        (item) => item.is_active === true\n      );\n      this.setAcademicSessionId(\n        thisSession\n          ? thisSession._id\n          : this.props.sessionPlan.academicSessions[0]._id\n      );\n      if (\n        this.props.institutePlacementLimits === null ||\n        this.props.institutePlacementLimits.length === 0\n      ) {\n        this.loadInstitutePlacementLimit(\n          thisSession\n            ? thisSession._id\n            : this.props.sessionPlan.academicSessions[0]._id\n        );\n      } else this.setLoadingConfirmedPost(false);\n    }\n  };\n\n  filterSubcategories = (\n    data: DocumentSubCategoryInterface[],\n    categoryId: string\n  ): DocumentSubCategoryInterface[] => {\n    if (!isEmptyOrSpaces(categoryId))\n      return data.filter((item) => item.category_id === categoryId);\n    return data;\n  };\n\n  addToFormData = (\n    qualificationId: string,\n    districtId: string,\n    value: number\n  ) => {\n    const thisDistrict = this.state.allDistricts\n      ? this.state.allDistricts.find((item) => item.district_id === districtId)\n      : undefined;\n    if (isEmptyOrSpaces(this.state.academicSessionId))\n      return this.setSessionError(true);\n    if (thisDistrict) {\n      if (this.state.formData) {\n        let data: PlacementLimitFormInterface[] = [...this.state.formData];\n        const index = data.findIndex(\n          (item) =>\n            item.district_id === districtId &&\n            item.subcategory_id === qualificationId\n        );\n        if (index > -1) {\n          data[index].confirmed_post = value;\n        } else\n          data.push({\n            subcategory_id: qualificationId,\n            district_id: thisDistrict.district_id,\n            institution_id: \"6100592f646ddb0771e8fc50\",\n            district_code: thisDistrict.district_code,\n            confirmed_post: value,\n            post_request_session_id: this.state.academicSessionId,\n          });\n\n        this.setFormData(data);\n      } else\n        this.setFormData([\n          {\n            subcategory_id: qualificationId,\n            district_id: thisDistrict.district_id,\n            institution_id: \"6100592f646ddb0771e8fc50\",\n            district_code: thisDistrict.district_code,\n            confirmed_post: value,\n            post_request_session_id: this.state.academicSessionId,\n          },\n        ]);\n    }\n\n    console.log(\"====================================\");\n    console.log({ form: this.state.formData });\n    console.log(\"====================================\");\n  };\n\n  getLimitByIds = (\n    allData: PlacementLimitFormInterface[] | null,\n    qualificationId: string,\n    districtId: string\n  ): number => {\n    let result: number = 0;\n    if (allData) {\n      const _data = allData.find(\n        (item) =>\n          item.district_id === districtId &&\n          item.subcategory_id === qualificationId\n      );\n      if (_data) result = _data.confirmed_post;\n    }\n\n    return result;\n  };\n\n  getMissingData = (\n    allDistricts: AllDistrictInterface[],\n    allData: PlacementLimitFormInterface[],\n    qualification: string\n  ) => {\n    const formData = allData.filter(\n      (item) => item.subcategory_id === qualification\n    );\n    if (\n      allDistricts.length > formData.length &&\n      !this.state.zerosAllowed &&\n      this.state.action === \"CREATE\"\n    )\n      this.setZerosModal(true);\n    else this.addMissingData(allDistricts, allData, qualification);\n  };\n\n  addMissingData = (\n    allDistricts: AllDistrictInterface[],\n    allData: PlacementLimitFormInterface[],\n    qualification: string\n  ) => {\n    const formData = allData.filter(\n      (item) => item.subcategory_id === qualification\n    );\n    allDistricts.forEach((district) => {\n      const thisDistrict = formData.find(\n        (item) => item.district_id === district.district_id\n      );\n      if (!thisDistrict) {\n        allData.push({\n          subcategory_id: qualification,\n          district_id: district.district_id,\n          institution_id: \"6100592f646ddb0771e8fc50\",\n          district_code: district.district_code,\n          confirmed_post: 0,\n          post_request_session_id: this.state.academicSessionId,\n        });\n      }\n    });\n    this.setFormData(allData);\n    console.log(\"====================================\");\n    console.log({ beforeSubmit: this.state.formData });\n    console.log(\"====================================\");\n    this.handleSubmit();\n  };\n\n  handleSubmit = async () => {\n    this.setLoadingRequest(true);\n    let res;\n    try {\n      if (this.state.action === \"CREATE\") {\n        res = await axios.post<any[]>(\n          `${API.PLACEMENT}/confirmedpostrequest/`,\n          { confirmedPosts: this.state.formData }\n        );\n      } else {\n        res = await axios.patch<any[]>(\n          `${API.PLACEMENT}/confirmedpostrequest/${this.state.limit_Id}`,\n          {\n            subcategory_id: this.state.subcategoryId,\n            district_id: this.state.districtId,\n            institution_id: \"6100592f646ddb0771e8fc50\",\n            district_code: this.state.districtCode,\n            confirmed_post: this.getLimitByIds(\n              this.state.formData,\n              this.state.subcategoryId,\n              this.state.districtId\n            ),\n            post_request_session_id: this.state.academicSessionId,\n          }\n        );\n      }\n\n      if (res) {\n        console.log(\"====================================\");\n        console.log({ PlacementLimitFormInterface: res });\n        console.log(\"====================================\");\n\n        if (this.state.action === \"CREATE\")\n          this.props.getInstitutePlacementLimit(\n            \"6100592f646ddb0771e8fc50\",\n            this.state.academicSessionId,\n            (status: boolean, msg: string) => {\n              this.setLoadingRequest(status);\n              if (!status && msg.length > 0) {\n                this.props.PushPopupAlert({\n                  title: msg,\n                  theme: PopupAlertTheme.danger,\n                });\n              }\n            }\n          );\n        else\n          this.props.updateInstitutePlacementLimit({\n            limit_id: this.state.limit_Id,\n            confirmed_post: this.getLimitByIds(\n              this.state.formData,\n              this.state.subcategoryId,\n              this.state.districtId\n            ),\n          });\n\n        this.setFormData(null);\n        this.setAction(null);\n        this.setIsEditing(false);\n        this.props.PushPopupAlert({\n          title: \"Successfully\",\n          theme: PopupAlertTheme.success,\n        });\n      }\n    } catch (error) {\n      console.error({ doPlacement_reply: error });\n      this.props.PushPopupAlert({\n        title: errorToText(error),\n        theme: PopupAlertTheme.danger,\n      });\n    }\n    this.setLoadingRequest(false);\n  };\n\n  getPlacementLimitByIds = (\n    allPlacement: PlacementListInterface[],\n    sessionId: string,\n    qualificationId: string\n  ): PlacementListInterface[] => {\n    return allPlacement.filter(\n      (item) =>\n        item.subcategory_id === qualificationId &&\n        item.post_request_session_id === sessionId\n    );\n  };\n\n  getPlacementLimitByDistrict = (\n    allPlacement: PlacementListInterface[],\n    districtCode: number\n  ): PlacementListInterface | undefined => {\n    return allPlacement.find((item) => item.district_code === districtCode);\n  };\n\n  setFormDataForUpdate = (allPlacement: PlacementListInterface[]) => {\n    let data: PlacementLimitFormInterface[] = [];\n    allPlacement.forEach((element) => {\n      data.push({\n        subcategory_id: element.subcategory_id,\n        district_id: element.district_id,\n        institution_id: element.institution_id,\n        district_code: element.district_code.toString(),\n        confirmed_post: element.confirmed_post,\n        post_request_session_id: element.post_request_session_id,\n      });\n    });\n    this.setFormData(data);\n  };\n\n  render() {\n    if (\n      this.props.document.documentCategory === null ||\n      this.props.document.documentSubCategory === null\n    ) {\n      return (\n        <div className=\"text-center mt-7 font-bold text-4xl text-gray-400 animate-pulse\">\n          Loading...\n        </div>\n      );\n    }\n\n    if (this.props.document.documentSubCategory.length === 0) {\n      return (\n        <div className=\"mt-5\">\n          <NoResult\n            theme={NoResultThemes.Dark}\n            value={\"No qualification data found!\"}\n          />\n        </div>\n      );\n    }\n\n    return (\n      <React.Fragment>\n        <div className=\"mt-3 rounded flex flex-row justify-between items-center\">\n          <div className=\"flex flex-row items-center gap-3\">\n            <RiFolderSettingsFill className=\"text-6xl text-blue-600\" />\n            <div className=\"flex flex-col\">\n              <span className=\"text-blue-600 text-2xl font-bold\">\n                Set placement limit\n              </span>\n            </div>\n          </div>\n\n          <div className=\"mb-2\">\n            <select\n              className={`bg-white text-gray-600 border border-gray-400 rounded p-2 focus:outline-none`}\n              value={this.state.academicSessionId}\n              disabled={\n                this.state.loading ||\n                this.state.loadingConfirmedPost ||\n                this.state.loadingRequest ||\n                this.props.sessionPlan.academicSessions === null ||\n                !this.state.isEditing ||\n                !this.state.action\n              }\n              onChange={(e) => {\n                this.setAcademicSessionId(e.target.value);\n                this.setLoadingConfirmedPost(true);\n                this.loadInstitutePlacementLimit(e.target.value);\n              }}\n            >\n              {this.props.sessionPlan.academicSessions &&\n                this.props.sessionPlan.academicSessions.map((session, item) => (\n                  <option key={session._id + item} value={session._id}>\n                    {session.title}\n                  </option>\n                ))}\n            </select>\n          </div>\n        </div>\n        <div className=\"mt-3 mb-6 p-2 bg-white w-full border border-white rounded group\">\n          {/* FILTER FORM =================================== */}\n          <section className=\"flex flex-col sm:flex-row items-center gap-2 w-full my-2\">\n            <div className=\"w-full sm:w-1/3\">\n              <select\n                className=\"input-white h-10 text-sm border-2 border-gray-400 focus:border-gray-500 w-full\"\n                placeholder={`Filter by category`}\n                onChange={(e: React.ChangeEvent<HTMLSelectElement>) =>\n                  this.setCategory(e.target.value)\n                }\n                value={this.state.categoryId}\n                disabled={\n                  this.state.loading ||\n                  this.state.loadingConfirmedPost ||\n                  this.state.loadingRequest ||\n                  this.props.sessionPlan.academicSessions === null ||\n                  this.state.isEditing ||\n                  this.state.action !== null\n                }\n              >\n                <option value=\"\">Select category</option>\n                {this.props.document.documentCategory.map((category, index) => (\n                  <option\n                    value={category.user_detail_category_id}\n                    key={index + category.user_detail_category_id}\n                  >\n                    {category.title}\n                  </option>\n                ))}\n              </select>\n            </div>\n            <div className=\"w-full sm:w-1/3\">\n              <select\n                className=\"input-white h-10 text-sm border-2 border-gray-400 focus:border-gray-500 w-full\"\n                placeholder={`Select qualification`}\n                onChange={(e: React.ChangeEvent<HTMLSelectElement>) =>\n                  this.setSubcategoryId(e.target.value)\n                }\n                value={this.state.subcategoryId}\n                disabled={\n                  this.state.loading ||\n                  this.state.loadingConfirmedPost ||\n                  this.state.loadingRequest ||\n                  this.props.sessionPlan.academicSessions === null ||\n                  this.state.isEditing ||\n                  this.state.action !== null\n                }\n              >\n                <option value=\"\">Select qualification</option>\n                {this.filterSubcategories(\n                  this.props.document.documentSubCategory,\n                  this.state.categoryId\n                ).map((subcategory, index) => (\n                  <option\n                    value={subcategory.user_detail_subcategory_id}\n                    key={index + subcategory.user_detail_subcategory_id}\n                  >\n                    {subcategory.title}\n                  </option>\n                ))}\n              </select>\n            </div>\n            <div className=\"w-full sm:w-1/3\">\n              {!isEmptyOrSpaces(this.state.subcategoryId) &&\n                !isEmptyOrSpaces(this.state.academicSessionId) &&\n                this.props.institutePlacementLimits && (\n                  <div className=\"flex item-center justify-end gap-1\">\n                    {this.getPlacementLimitByIds(\n                      this.props.institutePlacementLimits,\n                      this.state.academicSessionId,\n                      this.state.subcategoryId\n                    ).length === 0 &&\n                      !this.state.isEditing &&\n                      !this.state.action && (\n                        <button\n                          className=\"btn bg-gray-100 group-hover:bg-gray-300\"\n                          onClick={() => {\n                            this.setIsEditing(true);\n                            this.setAction(\"CREATE\");\n                          }}\n                        >\n                          Create\n                        </button>\n                      )}\n                  </div>\n                )}\n            </div>\n          </section>\n          {/* END FILTER FORM =================================== */}\n\n          <div className=\"=rounded mx-1 mb-1 overflow-x-auto\">\n            <table className=\"w-full shadow\">\n              <thead className=\"bg-white border-b-2 border-gray-300 text-gray-600 font-bold text-base\">\n                <tr>\n                  <td className=\"px-2 py-2\">#</td>\n                  <td className=\"px-2 py-2\">\n                    <div className=\"flex items-center gap-1\">District</div>\n                  </td>\n                  <td className=\"px-2 py-2\">Candidates</td>\n                  <td className=\"px-2 py-2\"></td>\n                </tr>\n              </thead>\n              <tbody>\n                {this.state.loadingConfirmedPost ? (\n                  <TableLoading cols={4} />\n                ) : this.props.institutePlacementLimits &&\n                  this.state.allDistricts &&\n                  this.state.allDistricts.length > 0 ? (\n                  !isEmptyOrSpaces(this.state.subcategoryId) ? (\n                    this.state.allDistricts.map((district, index) => (\n                      <tr\n                        className={`bg-white text-gray-600 hover:bg-gray-100 text-sm`}\n                        key={index + district.district_id}\n                      >\n                        <td className=\"px-2 py-2\">{index + 1}</td>\n                        <td className=\"px-2 py-2\">{district.district_name}</td>\n                        <td className=\"px-2 py-2\">\n                          {this.state.isEditing ||\n                          (this.state.action === \"UPDATE\" &&\n                            this.state.districtId === district.district_id) ? (\n                            <input\n                              type=\"number\"\n                              className=\"rounded border px-2 py-1 w-40\"\n                              value={this.getLimitByIds(\n                                this.state.formData,\n                                this.state.subcategoryId,\n                                district.district_id\n                              )}\n                              min={0}\n                              onChange={(\n                                e: React.ChangeEvent<HTMLInputElement>\n                              ) =>\n                                this.addToFormData(\n                                  this.state.subcategoryId,\n                                  district.district_id,\n                                  Number(e.target.value)\n                                )\n                              }\n                              disabled={this.state.loadingRequest}\n                              autoFocus={\n                                this.state.action === \"UPDATE\" &&\n                                this.state.districtId === district.district_id\n                              }\n                            />\n                          ) : this.getPlacementLimitByDistrict(\n                              this.getPlacementLimitByIds(\n                                this.props.institutePlacementLimits!,\n                                this.state.academicSessionId,\n                                this.state.subcategoryId\n                              ),\n                              Number(district.district_code)\n                            ) ? (\n                            this.getPlacementLimitByDistrict(\n                              this.getPlacementLimitByIds(\n                                this.props.institutePlacementLimits!,\n                                this.state.academicSessionId,\n                                this.state.subcategoryId\n                              ),\n                              Number(district.district_code)\n                            )!.confirmed_post\n                          ) : (\n                            \"-\"\n                          )}\n                        </td>\n                        {this.getPlacementLimitByIds(\n                          this.props.institutePlacementLimits!,\n                          this.state.academicSessionId,\n                          this.state.subcategoryId\n                        ).length > 0 &&\n                          this.getPlacementLimitByIds(\n                            this.props.institutePlacementLimits!,\n                            this.state.academicSessionId,\n                            this.state.subcategoryId\n                          ).find(\n                            (item) => item.district_id === district.district_id\n                          ) &&\n                          this.state.action !== \"UPDATE\" && (\n                            <td className=\"text-right px-3 py-1\">\n                              <button\n                                className=\"btn bg-green-500 hover:bg-green-600 text-white\"\n                                onClick={() => {\n                                  this.setAction(\"UPDATE\");\n                                  this.setForUpdate(\n                                    district.district_id,\n                                    district.district_code,\n                                    this.getPlacementLimitByIds(\n                                      this.props.institutePlacementLimits!,\n                                      this.state.academicSessionId,\n                                      this.state.subcategoryId\n                                    ).find(\n                                      (item) =>\n                                        item.district_id ===\n                                        district.district_id\n                                    )!._id\n                                  );\n                                  this.props.institutePlacementLimits &&\n                                    this.setFormDataForUpdate(\n                                      this.getPlacementLimitByIds(\n                                        this.props.institutePlacementLimits,\n                                        this.state.academicSessionId,\n                                        this.state.subcategoryId\n                                      )\n                                    );\n                                }}\n                              >\n                                Edit\n                              </button>\n                            </td>\n                          )}\n                        {this.state.action === \"UPDATE\" &&\n                          this.state.districtId === district.district_id && (\n                            <td className=\"flex items-center gap-2 px-2 py-2 float-right\">\n                              <button\n                                className={`btn btn-blue ${\n                                  this.state.loadingRequest && \"cursor-wait\"\n                                }`}\n                                onClick={() =>\n                                  !this.state.loadingRequest &&\n                                  this.state.allDistricts &&\n                                  this.state.formData &&\n                                  this.getMissingData(\n                                    this.state.allDistricts,\n                                    this.state.formData,\n                                    this.state.subcategoryId\n                                  )\n                                }\n                                disabled={this.state.loadingRequest}\n                              >\n                                {this.state.loadingRequest\n                                  ? \"Updating...\"\n                                  : \"Save\"}\n                              </button>\n                              <button\n                                className={`btn bg-gray-400 text-gray-50 hover:bg-gray-500 ${\n                                  this.state.loadingRequest &&\n                                  \"cursor-not-allowed\"\n                                }`}\n                                onClick={() => {\n                                  this.setAction(null);\n                                  this.setForUpdate(\"\", \"\", \"\");\n                                  this.setFormDataForUpdate([]);\n                                }}\n                                disabled={this.state.loadingRequest}\n                              >\n                                Cancel\n                              </button>\n                            </td>\n                          )}\n                      </tr>\n                    ))\n                  ) : (\n                    <tr\n                      className={`bg-white text-gray-600 hover:bg-gray-100 cursor-pointer text-sm`}\n                    >\n                      <td className=\"px-2 py-2\" colSpan={4}>\n                        <NoResult\n                          theme={NoResultThemes.Light}\n                          value={\"Select qualification to view data!\"}\n                        />\n                      </td>\n                    </tr>\n                  )\n                ) : (\n                  <tr\n                    className={`bg-white text-gray-600 hover:bg-gray-100 cursor-pointer text-sm`}\n                  >\n                    <td className=\"px-2 py-2\" colSpan={4}>\n                      <NoResult\n                        theme={NoResultThemes.Light}\n                        value={\"No district found!\"}\n                      />\n                    </td>\n                  </tr>\n                )}\n              </tbody>\n              {!this.state.loading &&\n                this.state.allDistricts &&\n                this.state.allDistricts.length &&\n                this.state.action === \"CREATE\" && (\n                  <tfoot>\n                    <tr\n                      className={`bg-gray-50 text-gray-600 hover:bg-gray-100 text-base`}\n                    >\n                      {/* <td className=\"px-2 py-2 font-semibold\" colSpan={3}>\n                        Total: 100\n                      </td> */}\n                      <td className=\"px-2 py-2 text-right\" colSpan={4}>\n                        <button\n                          className={`btn btn-blue ${\n                            this.state.loadingRequest && \"cursor-pointer\"\n                          }`}\n                          onClick={() =>\n                            !this.state.loadingRequest &&\n                            this.state.allDistricts &&\n                            this.state.formData &&\n                            this.getMissingData(\n                              this.state.allDistricts,\n                              this.state.formData,\n                              this.state.subcategoryId\n                            )\n                          }\n                        >\n                          {this.state.loadingRequest ? \"Loading...\" : \"Save\"}\n                        </button>\n                      </td>\n                    </tr>\n                  </tfoot>\n                )}\n            </table>\n          </div>\n        </div>\n\n        {/* CONFIRM FOR ALLOWING ZEROS OR NOT */}\n        {this.state.zerosModal &&\n          this.state.allDistricts &&\n          this.state.formData && (\n            <ActionConfirm\n              modalType={ActionConfirmEnum.OTHER}\n              confirmFun={() => {\n                this.setZerosAllowed(true);\n                this.addMissingData(\n                  this.state.allDistricts!,\n                  this.state.formData!,\n                  this.state.subcategoryId\n                );\n                this.setZerosModal(false);\n              }}\n              setModalAction={(status: boolean) => {\n                this.setZerosAllowed(false);\n                this.setZerosModal(status);\n              }}\n              description=\"Do you really want to submit with district(s) with 0 placement allowed?\"\n            />\n          )}\n      </React.Fragment>\n    );\n  }\n}\n\nconst mapStateToProps = ({\n  auth,\n  document,\n  sessionPlan,\n  schools,\n}: StoreState): {\n  auth: Auth;\n  document: DocumentReducerInterface;\n  sessionPlan: SessionPlanReducerInterface;\n  institutePlacementLimits: PlacementListInterface[] | null;\n} => {\n  return {\n    auth: auth,\n    document,\n    sessionPlan,\n    institutePlacementLimits: schools.institutePlacementLimits,\n  };\n};\n\nexport const PlacementLimit = connect(mapStateToProps, {\n  getDocumentCategory,\n  getDocumentSubCategory,\n  GetAllAcademicSession,\n  getInstitutePlacementLimit,\n  updateInstitutePlacementLimit,\n  PushPopupAlert,\n})(_PlacementLimit);\n","import React from \"react\";\n\ntype TableLoadingProps = {\n  cols: number;\n};\nconst TableLoading: React.FC<TableLoadingProps> = (props) => {\n  const displayCols = (): JSX.Element[] => {\n    let colsArray: number[] = [];\n    for (let index = 0; index < props.cols; index++) {\n      colsArray.push(index);\n    }\n    let result = colsArray.map((element) => {\n      return (\n        <td className=\"p-3 text-center whitespace-nowrap\" key={element}>\n          <div className=\"w-full h-4 rounded bg-gray-200 animate__animated animate__pulse animate__delay-5s animate__infinite\"></div>\n        </td>\n      );\n    });\n\n    return result;\n  };\n  return (\n    <>\n      <tr className=\"border-b border-gray-200\" key={228}>\n        {displayCols()}\n      </tr>\n      <tr className=\"border-b border-gray-200\" key={22648}>\n        {displayCols()}\n      </tr>\n      <tr className=\"border-b border-gray-200\" key={229768}>\n        {displayCols()}\n      </tr>\n    </>\n  );\n};\n\nexport default TableLoading;\n","import { FiAlertCircle } from \"react-icons/fi\";\nimport { GoAlert } from \"react-icons/go\";\nimport { MdDeleteForever, MdRestoreFromTrash } from \"react-icons/md\";\n\nexport enum ActionConfirmEnum {\n  RESTORE_DELETE = \"restore_delete\",\n  DELETE = \"delete\",\n  INFO = \"info\",\n  OTHER = \"other\",\n}\n\ninterface ActionConfirmProps {\n  confirmFun: Function;\n  setModalAction: (value: boolean) => void;\n  description: string;\n  modalType: ActionConfirmEnum;\n}\n\nconst ActionConfirm: React.FC<ActionConfirmProps> = (props) => {\n  return (\n    <div\n      className=\"min-w-screen h-screen animated fadeIn faster  fixed  left-0 top-0 flex justify-center items-center inset-0 z-50 outline-none focus:outline-none bg-no-repeat bg-center bg-cover\"\n      id=\"modal-id\"\n    >\n      <div className=\"absolute bg-black opacity-80 inset-0 z-0\"></div>\n      <div className=\"w-full  max-w-lg p-5 relative mx-auto my-auto rounded-xl shadow-lg bg-white animate__animated animate__zoomIn animate__faster\">\n        {/* <!--content--> */}\n        <div className=\"\">\n          {/* <!--body--> */}\n          <div className=\"text-center p-5 flex-auto justify-center\">\n            {props.modalType === ActionConfirmEnum.DELETE ||\n              (props.modalType === ActionConfirmEnum.RESTORE_DELETE && (\n                <FiAlertCircle className=\"w-4 h-4 -m-1 flex items-center text-red-500 mx-auto\" />\n              ))}\n            {props.modalType === ActionConfirmEnum.DELETE ? (\n              <MdDeleteForever className=\"w-16 h-16 flex items-center text-red-500 mx-auto\" />\n            ) : props.modalType === ActionConfirmEnum.RESTORE_DELETE ? (\n              <MdRestoreFromTrash className=\"w-16 h-16 flex items-center text-yellow-800 mx-auto\" />\n            ) : props.modalType === ActionConfirmEnum.INFO ? (\n              <GoAlert className=\"w-16 h-16 flex items-center text-blue-500 mx-auto\" />\n            ) : (\n              <GoAlert className=\"w-16 h-16 flex items-center text-yellow-500 mx-auto\" />\n            )}\n            <h2 className=\"text-xl font-bold py-4 \">Are you sure?</h2>\n            <p className=\"text-sm text-gray-500 px-8\">{props.description}</p>\n          </div>\n          {/* <!--footer--> */}\n          <div className=\"p-3  mt-2 text-center space-x-4 md:block\">\n            <button\n              className=\"mb-2 md:mb-0 bg-white px-5 py-2 text-sm shadow-sm font-medium tracking-wider border text-gray-600 rounded-full hover:shadow-lg hover:bg-gray-100\"\n              onClick={() => props.setModalAction(false)}\n            >\n              Cancel\n            </button>\n            <button\n              className={`mb-2 md:mb-0 border px-5 py-2 text-sm shadow-sm font-medium tracking-wider text-white rounded-full hover:shadow-lg ${\n                props.modalType === ActionConfirmEnum.DELETE\n                  ? \"border-red-500 hover:bg-red-600 bg-red-500\"\n                  : props.modalType === ActionConfirmEnum.RESTORE_DELETE\n                  ? \"border-yellow-700 hover:bg-yellow-800 bg-yellow-700\"\n                  : props.modalType === ActionConfirmEnum.INFO\n                  ? \"border-blue-500 hover:bg-blue-600 bg-blue-500\"\n                  : \"border-yellow-500 hover:bg-yellow-600 bg-yellow-500\"\n              }`}\n              onClick={() => {\n                props.confirmFun();\n                props.setModalAction(false);\n              }}\n            >\n              Confirm\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default ActionConfirm;\n","import { Dispatch } from \"redux\";\nimport { ActionTypes } from \"./types\";\nimport {\n  MySchoolInterface,\n  PostSchoolInterface,\n  SchoolInfoInterface,\n  SchoolsInterface,\n} from \"../shared/interfaces\";\n// import { setAxiosToken } from \"../utils/AxiosToken\";\nimport axios from \"axios\";\nimport { API } from \"../utils/api\";\nimport { errorToText } from \"../utils/errors\";\nimport { placedCandidateInterface } from \"../interfaces/marks_publication\";\nimport { PlacementListInterface } from \"../containers/PlacementLimit/PlacementLimit\";\n\n/**\n * * ****************************** INTERFACES *****************************\n */\n\nexport interface GetSchoolsAction {\n  type: ActionTypes.GET_SCHOOLS;\n  payload: SchoolsInterface[];\n}\n\nexport interface GetSchoolByIdAction {\n  type: ActionTypes.GET_SCHOOLS_BY_ID;\n  payload: MySchoolInterface;\n}\n\nexport interface GetSchoolsInfoAction {\n  type: ActionTypes.GET_SCHOOLS_INFO;\n  payload: SchoolInfoInterface[];\n}\n\nexport interface CreateSchoolAction {\n  type: ActionTypes.CREATE_SCHOOL;\n  payload: SchoolsInterface;\n}\n\nexport interface UpdateSchoolAction {\n  type: ActionTypes.UPDATE_SCHOOL;\n  payload: SchoolsInterface;\n}\n\nexport interface DeleteSchoolAction {\n  type: ActionTypes.DELETE_SCHOOL;\n  payload: string;\n}\n\n// School Posts interfaces\nexport interface FetchSchoolPostsAction {\n  type: ActionTypes.FETCH_SCHOOL_POSTS;\n  payload: PostSchoolInterface[];\n}\n\n// School Placements interfaces\nexport interface GetSchoolPlacementAction {\n  type: ActionTypes.GET_SCHOOL_PLACEMENT;\n  payload: placedCandidateInterface[];\n}\n\n// District School Placements interfaces\nexport interface GetDistrictPlacementAction {\n  type: ActionTypes.GET_DISTRICT_PLACEMENT;\n  payload: placedCandidateInterface[];\n}\n\n// District School Placements interfaces\nexport interface GetSessionPlacementAction {\n  type: ActionTypes.GET_SESSION_PLACEMENT;\n  payload: placedCandidateInterface[];\n}\n\nexport interface FetchDistrictPostsAction {\n  type: ActionTypes.FETCH_DISTRICT_POSTS;\n  payload: PostSchoolInterface[];\n}\n\nexport interface CreateSchoolPostAction {\n  type: ActionTypes.CREATE_SCHOOL_POST;\n  payload: PostSchoolInterface;\n}\n\nexport interface UpdateSchoolPostAction {\n  type: ActionTypes.UPDATE_SCHOOL_POST;\n  payload: {\n    TYPE: \"DISTRICT\" | \"SCHOOL\" | \"RECEIVED\";\n    data: PostSchoolInterface;\n  };\n}\n\nexport interface DeleteSchoolPostAction {\n  type: ActionTypes.DELETE_SCHOOL_POST;\n  payload: PostSchoolInterface[];\n}\n\n// Get Institute Limit Posts Action interfaces\nexport interface GetInstitutePlacementLimitAction {\n  type: ActionTypes.GET_INSTITUTE_PLACEMENT_LIMIT;\n  payload: PlacementListInterface[];\n}\n\nexport interface GetDistrictPlacementLimitAction {\n  type: ActionTypes.GET_DISTRICT_PLACEMENT_LIMIT;\n  payload: PlacementListInterface[];\n}\n\nexport interface UpdateInstitutePlacementLimitAction {\n  type: ActionTypes.UPDATE_INSTITUTE_PLACEMENT_LIMIT;\n  payload: { limit_id: string; confirmed_post: number };\n}\n\nexport type SchoolActionType =\n  | GetSchoolsAction\n  | GetSchoolByIdAction\n  | GetSchoolsInfoAction\n  | CreateSchoolAction\n  | UpdateSchoolAction\n  | DeleteSchoolAction\n  | FetchSchoolPostsAction\n  | GetSchoolPlacementAction\n  | FetchDistrictPostsAction\n  | CreateSchoolPostAction\n  | UpdateSchoolPostAction\n  | DeleteSchoolPostAction\n  | GetDistrictPlacementAction\n  | GetSessionPlacementAction\n  | GetInstitutePlacementLimitAction\n  | GetDistrictPlacementLimitAction\n  | UpdateInstitutePlacementLimitAction;\n\n/**\n * * ****************************** ACTIONS *****************************\n */\n\nexport const getSchools = (callback: Function) => {\n  callback(true, \"\");\n  return async (dispatch: Dispatch) => {\n    try {\n      const res = await axios.get<SchoolsInterface[]>(\n        `${API.APPLICATION}/school`\n      );\n      dispatch<GetSchoolsAction>({\n        type: ActionTypes.GET_SCHOOLS,\n        payload: res.data,\n      });\n      callback(false, \"\", res.data);\n    } catch (error) {\n      console.log(\"Err: \", error);\n      callback(false, errorToText(error));\n    }\n  };\n};\n\nexport const getSchoolById = (schoolId: string, callback: Function) => {\n  return async (dispatch: Dispatch) => {\n    callback(true, \"\");\n    try {\n      const res = await axios.get<MySchoolInterface>(\n        `${API.APPLICATION}/schools/${schoolId}`\n      );\n      dispatch<GetSchoolByIdAction>({\n        type: ActionTypes.GET_SCHOOLS_BY_ID,\n        payload: res.data,\n      });\n      callback(false, \"\", res.data);\n    } catch (error) {\n      console.log(\"Err: \", error);\n      callback(false, errorToText(error));\n    }\n  };\n};\n\n// export const getSchoolsInfo = () => {\n//   return async (dispatch: Dispatch) => {\n//     setAxiosToken();\n//     const response = await axios.get<SchoolInfoInterface[]>(url);\n\n//     dispatch<GetSchoolsInfoAction>({\n//       type: ActionTypes.GET_SCHOOLS_INFO,\n//       payload: response.data,\n//     });\n//   };\n// };\n\nexport const createSchool = (data: SchoolsInterface) => {\n  console.log({ schools: data });\n  return async (dispatch: Dispatch) => {\n    dispatch<CreateSchoolAction>({\n      type: ActionTypes.CREATE_SCHOOL,\n      payload: data,\n    });\n  };\n};\n\nexport const updateSchool = (data: SchoolsInterface) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<UpdateSchoolAction>({\n      type: ActionTypes.UPDATE_SCHOOL,\n      payload: data,\n    });\n  };\n};\n\nexport const deleteSchool = (data: string) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<DeleteSchoolAction>({\n      type: ActionTypes.DELETE_SCHOOL,\n      payload: data,\n    });\n  };\n};\n\nexport const fetchSchoolPosts = (school_id: string, callback: Function) => {\n  return async (dispatch: Dispatch) => {\n    callback(true, \"\");\n    try {\n      const res = await axios.get<PostSchoolInterface[]>(\n        `${API.PLACEMENT}/requestpost/school/${school_id}`\n      );\n\n      console.log(\"====================================\");\n      console.log({ schoolPosts: res });\n      console.log(\"====================================\");\n\n      dispatch<FetchSchoolPostsAction>({\n        type: ActionTypes.FETCH_SCHOOL_POSTS,\n        payload: res.data,\n      });\n      callback(false, \"\");\n    } catch (error) {\n      console.log(\"Err: \", error);\n      callback(false, errorToText(error));\n    }\n  };\n};\n\nexport const getSchoolPlacement = (school_id: string, callback: Function) => {\n  return async (dispatch: Dispatch) => {\n    callback(true, \"\");\n    try {\n      const res = await axios.get<placedCandidateInterface[]>(\n        `${API.PLACEMENT}/placedcandidate/school/${school_id}`\n      );\n\n      console.log({ getSchoolPlacement: res.data });\n\n      dispatch<GetSchoolPlacementAction>({\n        type: ActionTypes.GET_SCHOOL_PLACEMENT,\n        payload: res.data,\n      });\n      callback(false, \"\", res.data);\n    } catch (error) {\n      console.log(\"Err: \", error);\n      callback(false, errorToText(error));\n    }\n  };\n};\n\nexport const createSchoolPost = (data: PostSchoolInterface) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<CreateSchoolPostAction>({\n      type: ActionTypes.CREATE_SCHOOL_POST,\n      payload: data,\n    });\n  };\n};\n\nexport const updateSchoolPost = (\n  TYPE: \"DISTRICT\" | \"SCHOOL\" | \"RECEIVED\",\n  data: PostSchoolInterface\n) => {\n  console.log({ TYPE, data });\n  return async (dispatch: Dispatch) => {\n    dispatch<UpdateSchoolPostAction>({\n      type: ActionTypes.UPDATE_SCHOOL_POST,\n      payload: { TYPE, data },\n    });\n  };\n};\n\nexport const deleteSchoolPost = (data: PostSchoolInterface[]) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<DeleteSchoolPostAction>({\n      type: ActionTypes.DELETE_SCHOOL_POST,\n      payload: data,\n    });\n  };\n};\n\nexport const fetchDistrictPosts = (district_id: string, callback: Function) => {\n  return async (dispatch: Dispatch) => {\n    callback(true, \"\");\n    try {\n      const res = await axios.get<PostSchoolInterface[]>(\n        `${API.PLACEMENT}/requestpost/district/${district_id}`\n      );\n\n      console.log(\"====================================\");\n      console.log({ fetchDistrictPosts: res });\n      console.log(\"====================================\");\n\n      dispatch<FetchDistrictPostsAction>({\n        type: ActionTypes.FETCH_DISTRICT_POSTS,\n        payload: res.data,\n      });\n      callback(false, \"\");\n    } catch (error) {\n      console.log(\"Err: \", error);\n      callback(false, errorToText(error));\n    }\n  };\n};\n\nexport const getDistrictPlacement = (\n  district_id: string,\n  callback: Function\n) => {\n  return async (dispatch: Dispatch) => {\n    callback(true, \"\");\n    try {\n      const res = await axios.get<placedCandidateInterface[]>(\n        `${API.PLACEMENT}/placedcandidate/district/${district_id}`\n      );\n\n      console.log(\"====================================\");\n      console.log({ getDistrictPlacement: res.data });\n      console.log(\"====================================\");\n\n      dispatch<GetDistrictPlacementAction>({\n        type: ActionTypes.GET_DISTRICT_PLACEMENT,\n        payload: res.data,\n      });\n      callback(false, \"\", res.data);\n    } catch (error) {\n      console.log(\"Err: \", error);\n      callback(false, errorToText(error));\n    }\n  };\n};\n\nexport const getSessionPlacement = (session_id: string, callback: Function) => {\n  return async (dispatch: Dispatch) => {\n    callback(true, \"\");\n    try {\n      const res = await axios.get<placedCandidateInterface[]>(\n        `${API.PLACEMENT}/placedcandidate/session/${session_id}`\n      );\n\n      console.log(\"====================================\");\n      console.log({ getSessionPlacement: res.data });\n      console.log(\"====================================\");\n\n      dispatch<GetSessionPlacementAction>({\n        type: ActionTypes.GET_SESSION_PLACEMENT,\n        payload: res.data,\n      });\n      callback(false, \"\", res.data);\n    } catch (error) {\n      console.log(\"Err: \", error);\n      callback(false, errorToText(error));\n    }\n  };\n};\n\nexport const getInstitutePlacementLimit = (\n  institute_id: string,\n  session_id: string,\n  callback: Function\n) => {\n  return async (dispatch: Dispatch) => {\n    callback(true, \"\");\n    try {\n      const res = await axios.get<PlacementListInterface[]>(\n        `${API.PLACEMENT}/confirmedpostrequest/institute/${institute_id}/${session_id}`\n      );\n\n      console.log(\"====================================\");\n      console.log({ getInstitutePlacementLimit: res.data });\n      console.log(\"====================================\");\n\n      dispatch<GetInstitutePlacementLimitAction>({\n        type: ActionTypes.GET_INSTITUTE_PLACEMENT_LIMIT,\n        payload: res.data,\n      });\n      callback(false, \"\", res.data);\n    } catch (error) {\n      console.log(\"Err: \", error);\n      callback(false, errorToText(error));\n    }\n  };\n};\n\nexport const getDistrictPlacementLimit = (\n  district_id: string,\n  session_id: string,\n  callback: Function\n) => {\n  return async (dispatch: Dispatch) => {\n    callback(true, \"\");\n    try {\n      const res = await axios.get<PlacementListInterface[]>(\n        `${API.PLACEMENT}/confirmedpostrequest/district/${district_id}/${session_id}`\n      );\n\n      console.log(\"====================================\");\n      console.log({ getDistrictPlacementLimit: res.data });\n      console.log(\"====================================\");\n\n      dispatch<GetDistrictPlacementLimitAction>({\n        type: ActionTypes.GET_DISTRICT_PLACEMENT_LIMIT,\n        payload: res.data,\n      });\n      callback(false, \"\", res.data);\n    } catch (error) {\n      console.log(\"Err: \", error);\n      callback(false, errorToText(error));\n    }\n  };\n};\n\nexport const updateInstitutePlacementLimit = (data: {\n  limit_id: string;\n  confirmed_post: number;\n}) => {\n  console.log(\"====================================\");\n  console.log({ updateInstitutePlacementLimit: data });\n  console.log(\"====================================\");\n  return async (dispatch: Dispatch) => {\n    dispatch<UpdateInstitutePlacementLimitAction>({\n      type: ActionTypes.UPDATE_INSTITUTE_PLACEMENT_LIMIT,\n      payload: data,\n    });\n  };\n};\n"],"sourceRoot":""}
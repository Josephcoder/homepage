{"version":3,"sources":["shared/dataTest.tsx","actions/location.ts","components/Table/Table.tsx","actions/users.ts","actions/schools.ts","containers/UserManagement/UserList.tsx","containers/UserManagement/RoleList.tsx","containers/UserManagement/UserRole.tsx","shared/blank_profile.png","containers/UserManagement/UserAccess.tsx","containers/Locations/ViewDistricts.tsx","containers/Locations/ViewProvince.tsx","containers/Locations/ViewSectors.tsx","containers/Locations/Locations.tsx"],"names":["isEmptyOrSpaces","str","match","getRoleById","roles","roleId","filter","role","system_user_role_id","getInstituteById","institutes","instituteId","find","item","education_institute_id","getPositionById","positions","position_id","position","toTwoDigit","value","dec","Math","floor","slice","toString","substr","toAnyDigit","padding","zeroes","Array","join","capitalizeFirstLetter","charAt","toUpperCase","getAllRoom","callback","dispatch","a","axios","get","API","APPLICATION","res","type","ActionTypes","GET_ALL_ROOM","payload","data","console","log","error","errorToText","FC_CreateProvince","CREATE_PROVINCE","FC_UpdateProvince","UPDATE_PROVINCE","FC_DeleteProvince","DELETE_PROVINCE","FC_CreateDistrict","CREATE_DISTRICT","FC_UpdateDistrict","UPDATE_DISTRICT","FC_DeleteDistrict","DELETE_DISTRICT","FC_CreateSector","CREATE_SECTOR","FC_UpdateSector","UPDATE_SECTOR","FC_DeleteSector","DELETE_SECTOR","FC_CreateCenter","CREATE_CENTER","FC_UpdateCenter","UPDATE_CENTER","FC_DeleteCenter","DELETE_CENTER","FC_CreateRoom","CREATE_ROOM","FC_UpdateRoom","UPDATE_ROOM","FC_DeleteRoom","delete_room","DELETE_ROOM","FC_GetWaitingLocationList","locations","GET_LOCATION_WAITING_LIST","Table","props","table","tr","tableId","length","result","characters","charactersLength","i","random","FC_makeID","useState","totalItems","setTotalItems","totalPages","setTotalPages","currentPage","setCurrentPage","pages","setPages","pageSize","setPageSize","startIndex","setStartIndex","endIndex","setEndIndex","useEffect","pagination","tablePagination","document","getElementById","getElementsByTagName","ceil","min","_pages","from","keys","map","style","display","className","tableSize","search","searchBG","placeholder","onChange","e","filterType","td","rows","cols","toLowerCase","columns","textContent","innerText","indexOf","filterTable","target","disabled","loading","Number","tableClass","rounded","id","hideColumns","thColor","column","index","alignText","isSortAllowed","onClick","switching","x","y","shouldSwitch","colIndex","dir","switchcount","innerHTML","parentNode","insertBefore","sortThisColumn","columnTitle","aria-label","page","pageIndex","documentValidationStatus","userPageLimit","fetchUserAccess","setAxiosToken","AUTH","FETCH_USERS_ACCESS","users","next","previous","total_users","user_error","blockUserToSystem","user_id","BLOCK_USER_TO_SYSTEM","unBlockUserToSystem","UNBLOCK_USER_TO_SYSTEM","assignRoleToUserAccess","ASSIGN_ROLE_TO_USER","customizeUserAccess","CUSTOMIZE_USER_ACCESS","resetUserAccess","RESET_USER_ACCESS","getSchools","GET_SCHOOLS","getSchoolById","schoolId","GET_SCHOOLS_BY_ID","createSchool","schools","CREATE_SCHOOL","updateSchool","UPDATE_SCHOOL","deleteSchool","DELETE_SCHOOL","fetchSchoolPosts","school_id","PLACEMENT","schoolPosts","FETCH_SCHOOL_POSTS","getSchoolPlacement","GET_SCHOOL_PLACEMENT","createSchoolPost","CREATE_SCHOOL_POST","updateSchoolPost","TYPE","UPDATE_SCHOOL_POST","fetchDistrictPosts","district_id","FETCH_DISTRICT_POSTS","getDistrictPlacement","GET_DISTRICT_PLACEMENT","getInstitutePlacementLimit","institute_id","session_id","GET_INSTITUTE_PLACEMENT_LIMIT","getDistrictPlacementLimit","GET_DISTRICT_PLACEMENT_LIMIT","updateInstitutePlacementLimit","UPDATE_INSTITUTE_PLACEMENT_LIMIT","ModalState","RoleList","searchInput","setSearchInput","roleList","setChooseRole","loadindRequest","handleSelectRole","React","memo","UserRole","setRoleId","setState","setSelectedRole","selectedRole","setProvinceId","provinceId","setDistrictId","districtId","setCenterId","centerId","setRoomId","roomId","setLoadingForm","loadingForm","setSchoolId","setChooseSchool","chooseSchool","setLoading","setInstituteId","setFormError","formError","setLoadingRequest","loadingRequest","chooseRole","setDefaultState","default_access","LOAD_province","LOAD_district","district_required","roomList","distinctDistrict","_id","province_id","room_required","LocationsInArray","room_id","center_id","school_required","schoolList","LOAD_school","componentDidMount","userInfo","state","vvvvv","role_id","element","tableData","access","task","permitted","create","view","update","delete","colSpan","assignRoleToUser","preventDefault","window","confirm","msg","education_institution_required","formData","status","education_institution_id","post","setChangeRole","PushPopupAlert","title","theme","PopupAlertTheme","success","role_error","danger","location","ids","districts","key","Object","prototype","hasOwnProperty","call","keyDistrict","includes","push","distinctCenter","rooms","forEach","distinctRoom","this","Loading","onSubmit","schoolLevels","education_categories","institute","education_category_title","province","province_name","undefined","district","district_name","school","school_name","center","center_name","room","room_name","Component","connect","getUserById","userId","LocationData","locationTemp","p","d","centers","c","r","room_number","capacity","occupied","UserList","setManageUserId","manageUserId","setLoadingSchool","loadingSchool","setLoadingRequestType","loadingRequestType","setRoomList","setRoomTables","roomTable","setCurrentAccess","currentAccess","setSchoolList","setUserAccess","userAccess","allRoom","loadingUser","user","setManageUser","user_info","fname","lname","email","sex","blockUser","actionType","patch","is_active","info","blockUser_ERROR","restUserAccess","warning","resetedAccess","reseting_user_access","manageUser","src","photo","profile","alt","NoResult","NoResultThemes","Dark","n_id","phone_number","custome_access","changeRole","UserAccess","roomLocation","_UserAccess","setViewPermission","viewPermission","setLoadindRequest","setCreatePermission","createPermission","setUpdatePermission","updatePermission","setDeletePermission","deletePermission","setLoadind","overrideUserAccess","overideAccess","findCustom","custom","handleCustomization","findIndex","custome_user_access_id","customize_access","to","checked","districtName","setDistrictName","districtCode","setDistrictCode","setError","handleSubmit","actionTypes","thisProvince","province_code","district_code","sectors","setActionTypes","thisDistrict","setThisDistrict","doc_category_error","component","Modal","backDrop","Themes","default","close","displayClose","backDropClose","widthSizeClass","ModalSize","medium","body","footer","provinceTitle","setProvinceTitle","provinceCode","setProvinceCode","updated","setThisProvince","province_error","sectorName","setSectorName","sectorCode","setSectorCode","sector_name","sector_code","sector_id","thisSector","setThisSector","sector_error","handleDelete","sectorId","district_error","sector","Locations","ViewDistricts"],"mappings":"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","file":"static/js/43.4492ae7c.chunk.js","sourcesContent":["import { education_category } from \"../interfaces\";\nimport { PositionAPI } from \"../interfaces/position\";\nimport {\n  CustomeAccessInterface,\n  PostSchoolInterface,\n  RoleToUserInterface,\n  SchoolInfoInterface,\n  SystemUserRoleInterface,\n} from \"./interfaces\";\n\nexport const data_posts_school: PostSchoolInterface[] = [];\n\nexport const isEmptyOrSpaces = (str: string): boolean => {\n  return str === null || str.match(/^ *$/) !== null;\n};\n\nexport const getUserTitle = (\n  accessRoles: SystemUserRoleInterface[],\n  roleId: string\n): string => {\n  const result = accessRoles.find((e) => e.system_user_role_id === roleId);\n  return result ? result.role : \"\";\n};\n\nexport const getRoleById = (\n  roles: SystemUserRoleInterface[],\n  roleId: string\n): SystemUserRoleInterface => {\n  return roles.filter((role) => role.system_user_role_id === roleId)[0];\n};\n\nexport const getInstituteById = (\n  institutes: education_category[],\n  instituteId: string\n): education_category | undefined => {\n  return institutes.find((item) => item.education_institute_id === instituteId);\n};\n\nexport const getPositionById_old = (\n  positions: PositionAPI[],\n  position_id: string\n): PositionAPI => {\n  console.log({\n    positions,\n    position_id,\n    data: positions.filter(\n      (position) => position.position_id === position_id\n    )[0],\n  });\n  return positions.filter(\n    (position) => position.position_id === position_id\n  )[0];\n};\n\nexport const getPositionById = (\n  positions: PositionAPI[],\n  position_id: string\n): PositionAPI | undefined => {\n  return positions.find((position) => position.position_id === position_id);\n};\n\nexport const getSchoolById = (\n  schools: SchoolInfoInterface[],\n  school_id: string\n): SchoolInfoInterface => {\n  return schools.filter((school) => school.school_id === school_id)[0];\n};\n\nexport const getPostById = (\n  posts: PostSchoolInterface[],\n  post_id: string\n): PostSchoolInterface => {\n  return posts.filter((post) => post.school_id === post_id)[0];\n};\n\nexport const getPostsBySchoolId = (\n  posts: PostSchoolInterface[],\n  school_id: string\n): PostSchoolInterface[] => {\n  return posts.filter((post) => post.school_id === school_id);\n};\n\nexport const getPostsByIds = (\n  posts: PostSchoolInterface[],\n  school_id: string,\n  position_id: string\n): PostSchoolInterface[] => {\n  return posts.filter(\n    (post) => post.school_id === school_id && post.position_id === position_id\n  );\n};\n\nexport const displayDate = (dateToDisplay: Date): string => {\n  return new Intl.DateTimeFormat(\"en-GB\", {\n    year: \"numeric\",\n    month: \"long\",\n    day: \"2-digit\",\n  }).format(dateToDisplay);\n};\n\nexport const userAccess = (\n  defaultAccess: RoleToUserInterface,\n  customAccess: CustomeAccessInterface\n): RoleToUserInterface => {\n  // const data = defaultAccess.access.map((default,index,customAccess)=>{\n  //   let data_custom = customAccess\n  //   if\n  // })\n  // return customAccess.filter((custom) => custom.id === accecc_id)[0];\n  return defaultAccess;\n};\n\n// export const groupBy = (list: [], keyGetter: Function) => {\n//   const map = new Map();\n//   list.forEach((item) => {\n//     const key = keyGetter(item);\n//     const collection = map.get(key);\n//     if (!collection) {\n//       map.set(key, [item]);\n//     } else {\n//       collection.push(item);\n//     }\n//   });\n//   return map;\n// };\n\nexport const toTwoDigit = (value: number): string => {\n  var dec = value - Math.floor(value);\n  value = value - dec;\n  return (\"0\" + value).slice(-2) + dec.toString().substr(1);\n};\n\nexport const toAnyDigit = (\n  value: string | number,\n  padding: number = 3\n): string => {\n  var zeroes = new Array(padding + 1).join(\"0\");\n  return (zeroes + value).slice(-padding);\n};\n\nexport const capitalizeFirstLetter = (value: string): string => {\n  return value.charAt(0).toUpperCase() + value.slice(1);\n};\n\nexport const isDateExpiried = (paramDate: string) => {\n  const thisDate = new Date(paramDate);\n  const today = new Date();\n  if (thisDate.getTime() < today.getTime()) {\n    return true;\n  }\n\n  return false;\n};\n","import axios from \"axios\";\nimport { Dispatch } from \"redux\";\nimport { ActionTypes } from \"./types\";\nimport { API } from \"../utils/api\";\nimport {\n  CentersInterface,\n  DistrictInterface,\n  RoomLocationInterface,\n  RoomsInterface,\n  SectorInterface,\n} from \"../shared/interfaces\";\nimport { errorToText } from \"../utils/errors\";\nimport { LocationAPI } from \".\";\n\n/**\n * * ****************************** INTERFACES *****************************\n */\n\nexport interface getAllRoomActions {\n  type: ActionTypes.GET_ALL_ROOM;\n  payload: RoomLocationInterface[];\n}\n\nexport interface createProvinceActions {\n  type: ActionTypes.CREATE_PROVINCE;\n  payload: RoomLocationInterface;\n}\n\nexport interface updateProvinceActions {\n  type: ActionTypes.UPDATE_PROVINCE;\n  payload: {\n    province_id: string;\n    province_name: string;\n    provice_code: number;\n  };\n}\n\nexport interface deleteProvinceActions {\n  type: ActionTypes.DELETE_PROVINCE;\n  payload: string;\n}\n\n// ============ DISTRICT =================\nexport interface createDistrictActions {\n  type: ActionTypes.CREATE_DISTRICT;\n  payload: { province_id: string; data: DistrictInterface };\n}\n\nexport interface updateDistrictActions {\n  type: ActionTypes.UPDATE_DISTRICT;\n  payload: {\n    province_id: string;\n    district_id: string;\n    district_name: string;\n    district_code: number;\n  };\n}\n\nexport interface deleteDistrictActions {\n  type: ActionTypes.DELETE_DISTRICT;\n  payload: { province_id: string; district_id: string };\n}\n\n// ============ SECTOR =================\nexport interface createSectorActions {\n  type: ActionTypes.CREATE_SECTOR;\n  payload: {\n    province_id: string;\n    district_id: string;\n    data: SectorInterface;\n  };\n}\n\nexport interface updateSectorActions {\n  type: ActionTypes.UPDATE_SECTOR;\n  payload: {\n    province_id: string;\n    district_id: string;\n    sector_id: string;\n    sector_name: string;\n    sector_code: number;\n  };\n}\n\nexport interface deleteSectorActions {\n  type: ActionTypes.DELETE_SECTOR;\n  payload: { province_id: string; district_id: string; sector_id: string };\n}\n\n// ============ CENTERS =================\nexport interface createCenterActions {\n  type: ActionTypes.CREATE_CENTER;\n  payload: {\n    province_id: string;\n    district_id: string;\n    data: CentersInterface;\n  };\n}\n\nexport interface updateCenterActions {\n  type: ActionTypes.UPDATE_CENTER;\n  payload: {\n    province_id: string;\n    district_id: string;\n    examination_center_id: string;\n    center_name: string;\n  };\n}\n\nexport interface deleteCenterActions {\n  type: ActionTypes.DELETE_CENTER;\n  payload: { province_id: string; district_id: string; center_id: string };\n}\n\n// ============ ROOMS =================\nexport interface createRoomActions {\n  type: ActionTypes.CREATE_ROOM;\n  payload: {\n    province_id: string;\n    district_id: string;\n    center_id: string;\n    data: RoomsInterface;\n  };\n}\n\nexport interface updateRoomActions {\n  type: ActionTypes.UPDATE_ROOM;\n  payload: {\n    province_id: string;\n    district_id: string;\n    center_id: string;\n    room_id: string;\n    room_number: number;\n    capacity: number;\n  };\n}\n\nexport interface deleteRoomActions {\n  type: ActionTypes.DELETE_ROOM;\n  payload: {\n    province_id: string;\n    district_id: string;\n    center_id: string;\n    room_id: string;\n  };\n}\n\nexport interface GetWaitingLocationListAction {\n  type: ActionTypes.GET_LOCATION_WAITING_LIST;\n  payload: LocationAPI;\n}\n\nexport type RoomActionType =\n  | getAllRoomActions\n  | createProvinceActions\n  | updateProvinceActions\n  | deleteProvinceActions\n  | createDistrictActions\n  | updateDistrictActions\n  | deleteDistrictActions\n  | createSectorActions\n  | updateSectorActions\n  | deleteSectorActions\n  | createCenterActions\n  | updateCenterActions\n  | deleteCenterActions\n  | createRoomActions\n  | updateRoomActions\n  | deleteRoomActions\n  | GetWaitingLocationListAction;\n\n/**\n * * ****************************** ACTIONS *****************************\n */\n\nexport const getAllRoom = (callback: Function) => {\n  return async (dispatch: Dispatch) => {\n    callback(true, \"\");\n    try {\n      const res = await axios.get<RoomLocationInterface[]>(\n        `${API.APPLICATION}/roomlocation`\n      );\n      dispatch<getAllRoomActions>({\n        type: ActionTypes.GET_ALL_ROOM,\n        payload: res.data,\n      });\n      console.log(\"====================================\");\n      console.log({ res: res.data });\n      console.log(\"====================================\");\n      callback(false, \"\", res.data);\n    } catch (error) {\n      console.error(\"Err: \", error);\n      callback(false, errorToText(error));\n    }\n  };\n};\n\nexport const FC_CreateProvince = (data: RoomLocationInterface) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<createProvinceActions>({\n      type: ActionTypes.CREATE_PROVINCE,\n      payload: data,\n    });\n  };\n};\n\nexport const FC_UpdateProvince = (data: {\n  province_id: string;\n  province_name: string;\n  provice_code: number;\n}) => {\n  console.log({ data });\n  return async (dispatch: Dispatch) => {\n    dispatch<updateProvinceActions>({\n      type: ActionTypes.UPDATE_PROVINCE,\n      payload: data,\n    });\n  };\n};\n\nexport const FC_DeleteProvince = (data: string) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<deleteProvinceActions>({\n      type: ActionTypes.DELETE_PROVINCE,\n      payload: data,\n    });\n  };\n};\n\n// DISTRICT =================\nexport const FC_CreateDistrict = (data: {\n  province_id: string;\n  data: DistrictInterface;\n}) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<createDistrictActions>({\n      type: ActionTypes.CREATE_DISTRICT,\n      payload: data,\n    });\n  };\n};\n\nexport const FC_UpdateDistrict = (data: {\n  province_id: string;\n  district_id: string;\n  district_name: string;\n  district_code: number;\n}) => {\n  console.log({ data });\n  return async (dispatch: Dispatch) => {\n    dispatch<updateDistrictActions>({\n      type: ActionTypes.UPDATE_DISTRICT,\n      payload: data,\n    });\n  };\n};\n\nexport const FC_DeleteDistrict = (data: {\n  province_id: string;\n  district_id: string;\n}) => {\n  console.log({ data });\n  return async (dispatch: Dispatch) => {\n    dispatch<deleteDistrictActions>({\n      type: ActionTypes.DELETE_DISTRICT,\n      payload: data,\n    });\n  };\n};\n\n// SECTOR =================\nexport const FC_CreateSector = (data: {\n  province_id: string;\n  district_id: string;\n  data: SectorInterface;\n}) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<createSectorActions>({\n      type: ActionTypes.CREATE_SECTOR,\n      payload: data,\n    });\n  };\n};\n\nexport const FC_UpdateSector = (data: {\n  province_id: string;\n  district_id: string;\n  sector_id: string;\n  sector_name: string;\n  sector_code: number;\n}) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<updateSectorActions>({\n      type: ActionTypes.UPDATE_SECTOR,\n      payload: data,\n    });\n  };\n};\n\nexport const FC_DeleteSector = (data: {\n  province_id: string;\n  district_id: string;\n  sector_id: string;\n}) => {\n  console.log({ data });\n  return async (dispatch: Dispatch) => {\n    dispatch<deleteSectorActions>({\n      type: ActionTypes.DELETE_SECTOR,\n      payload: data,\n    });\n  };\n};\n\n// CENTERS =================\nexport const FC_CreateCenter = (data: {\n  province_id: string;\n  district_id: string;\n  data: CentersInterface;\n}) => {\n  console.log({ data });\n  return async (dispatch: Dispatch) => {\n    dispatch<createCenterActions>({\n      type: ActionTypes.CREATE_CENTER,\n      payload: data,\n    });\n  };\n};\n\nexport const FC_UpdateCenter = (data: {\n  province_id: string;\n  district_id: string;\n  examination_center_id: string;\n  center_name: string;\n}) => {\n  console.log({ data });\n  return async (dispatch: Dispatch) => {\n    dispatch<updateCenterActions>({\n      type: ActionTypes.UPDATE_CENTER,\n      payload: data,\n    });\n  };\n};\n\nexport const FC_DeleteCenter = (data: {\n  province_id: string;\n  district_id: string;\n  center_id: string;\n}) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<deleteCenterActions>({\n      type: ActionTypes.DELETE_CENTER,\n      payload: data,\n    });\n  };\n};\n\n// ROOM =================\nexport const FC_CreateRoom = (data: {\n  province_id: string;\n  district_id: string;\n  center_id: string;\n  data: RoomsInterface;\n}) => {\n  console.log({ data });\n  return async (dispatch: Dispatch) => {\n    dispatch<createRoomActions>({\n      type: ActionTypes.CREATE_ROOM,\n      payload: data,\n    });\n  };\n};\n\nexport const FC_UpdateRoom = (data: {\n  province_id: string;\n  district_id: string;\n  center_id: string;\n  room_id: string;\n  room_number: number;\n  capacity: number;\n}) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<updateRoomActions>({\n      type: ActionTypes.UPDATE_ROOM,\n      payload: data,\n    });\n  };\n};\n\nexport const FC_DeleteRoom = (data: {\n  province_id: string;\n  district_id: string;\n  center_id: string;\n  room_id: string;\n}) => {\n  console.log({ delete_room: data });\n  return async (dispatch: Dispatch) => {\n    dispatch<deleteRoomActions>({\n      type: ActionTypes.DELETE_ROOM,\n      payload: data,\n    });\n  };\n};\n\n// GET LOCATION FOR WAITING LIST\nexport type FT_GetWaitingLocationList = (locations: LocationAPI) => void;\nexport const FC_GetWaitingLocationList = (locations: LocationAPI) => {\n  return (dispatch: Dispatch) => {\n    dispatch<GetWaitingLocationListAction>({\n      type: ActionTypes.GET_LOCATION_WAITING_LIST,\n      payload: locations,\n    });\n  };\n};\n","import React, { useEffect, useState } from \"react\";\nimport { BiSort } from \"react-icons/bi\";\nimport { MdNavigateBefore, MdNavigateNext, MdSearch } from \"react-icons/md\";\n\nconst FC_makeID = (length: number = 5): string => {\n  let result: string = \"\";\n  let characters: string =\n    \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\n  let charactersLength = characters.length;\n  for (let i: number = 0; i < length; i++) {\n    result += characters.charAt(Math.floor(Math.random() * charactersLength));\n  }\n  return result;\n};\n\nexport const sortThisColumn = (\n  tableId: string,\n  colIndex: number = 0,\n  dir: \"asc\" | \"desc\" = \"asc\"\n) => {\n  var table,\n    rows,\n    switching,\n    i,\n    x,\n    y,\n    shouldSwitch,\n    switchcount = 0;\n  table = document.getElementById(tableId) as HTMLTableElement;\n  switching = true;\n  /* Make a loop that will continue until\n  no switching has been done: */\n  if (table) {\n    while (switching) {\n      //start by saying: no switching is done:\n      switching = false;\n      rows = table.rows;\n      /*Loop through all table rows (except the\n    first, which contains table headers):*/\n      for (i = 1; i < rows.length - 1; i++) {\n        //start by saying there should be no switching:\n        shouldSwitch = false;\n        /*Get the two elements you want to compare,\n      one from current row and one from the next:*/\n        x = rows[i].getElementsByTagName(\"TD\")[colIndex];\n        y = rows[i + 1].getElementsByTagName(\"TD\")[colIndex];\n        /*check if the two rows should switch place,\n      based on the direction, asc or desc:*/\n        if (dir === \"asc\" && x && y) {\n          if (x.innerHTML.toLowerCase() > y.innerHTML.toLowerCase()) {\n            //if so, mark as a switch and break the loop:\n            shouldSwitch = true;\n            break;\n          }\n        } else if (dir === \"desc\" && x && y) {\n          if (x.innerHTML.toLowerCase() < y.innerHTML.toLowerCase()) {\n            //if so, mark as a switch and break the loop:\n            shouldSwitch = true;\n            break;\n          }\n        }\n      }\n      if (shouldSwitch && rows[i].parentNode) {\n        /*If a switch has been marked, make the switch\n      and mark that a switch has been done:*/\n        rows[i].parentNode!.insertBefore(rows[i + 1], rows[i]);\n        switching = true;\n        //Each time a switch is done, increase this count by 1:\n        switchcount++;\n      } else {\n        /*If no switching has been done AND the direction is \"asc\",\n      set the direction to \"desc\" and run the while loop again.*/\n        if (switchcount === 0 && dir === \"asc\") {\n          dir = \"desc\";\n          switching = true;\n        }\n      }\n      // if (i === 0) continue;\n      // rows.cells[i].style.backgroundColor = \"blue\";\n    }\n  }\n};\n\nexport interface TableColumnsInterface {\n  columnTitle: JSX.Element | string;\n  alignText: string;\n  padding?: string;\n  isSortAllowed?: boolean;\n}\n\ninterface TableProps {\n  columns: TableColumnsInterface[];\n  rows: Function;\n  hideColumns?: boolean;\n  pagination?: boolean;\n  search?: boolean;\n  tableSize?: string;\n  tableClass?: string;\n  tableId?: string;\n  rounded?: boolean;\n  searchBG?: string;\n  thColor?: string;\n  loading?: boolean;\n}\n\nconst Table: React.FC<TableProps> = (props) => {\n  const startPage = 1;\n  const tableId =\n    !props.tableId || props.tableId === \"myTable\" ? FC_makeID() : props.tableId;\n  let table: HTMLElement, tr: HTMLCollectionOf<HTMLTableRowElement>;\n  const [totalItems, setTotalItems] = useState<number>(0);\n  const [totalPages, setTotalPages] = useState<number>(1);\n  const [currentPage, setCurrentPage] = useState<number>(1);\n  const [pages, setPages] = useState<number[]>();\n  const [pageSize, setPageSize] = useState<number>(10);\n  const [startIndex, setStartIndex] = useState<number>(0);\n  const [endIndex, setEndIndex] = useState<number>(0);\n\n  useEffect(() => {\n    props.pagination && tablePagination();\n  });\n\n  const filterTable = (\n    data: string,\n    filterType?: \"default\" | \"field\"\n  ): void => {\n    var filter, tr, td, rows: number, cols: number, txtValue;\n    if (filterType === \"field\" && data === \"all\") data = \"\";\n    filter = data.toLowerCase();\n    table = document.getElementById(tableId!)!;\n    tr = table.getElementsByTagName(\"tr\");\n    for (rows = 0; rows < tr.length; rows++) {\n      for (cols = 0; cols < props.columns.length; cols++) {\n        td = tr[rows].getElementsByTagName(\"td\")[cols];\n        if (td) {\n          txtValue = td.textContent || td.innerText;\n          if (txtValue.toLowerCase().indexOf(filter) > -1) {\n            tr[rows].style.display = \"\";\n            break;\n          } else {\n            tr[rows].style.display = \"none\";\n          }\n        }\n      }\n    }\n  };\n\n  const tablePagination = (): void => {\n    table = document.getElementById(tableId)!;\n    tr = table.getElementsByTagName(\"tr\");\n    setTotalItems(tr.length);\n    setTotalPages(Math.ceil(totalItems / pageSize));\n\n    // calculate start and end item indexes on the current page\n    setStartIndex((currentPage - 1) * pageSize);\n    setEndIndex(Math.min(startIndex + pageSize - 1, totalItems - 1));\n\n    /**\n     * TODO!\n     * There is a problem with this condition\n     */\n    let _pages = Array.from(Array(totalPages + 1 - startPage).keys()).map(\n      (i) => startPage + i\n    );\n    if (!pages || _pages.length !== pages.length) {\n      setPages(_pages);\n    }\n\n    for (let i: number = 0; i < tr.length; i++) {\n      if (i >= startIndex && i <= endIndex) {\n        tr[i].style.display = \"\";\n      } else {\n        tr[i].style.display = \"none\";\n      }\n    }\n  };\n\n  return (\n    <div className={`${props.tableSize} overflow-x-auto`}>\n      {/* search box  */}\n      {props.search && (\n        <div className={`${props.searchBG} w-full mb-2`}>\n          {props.search && (\n            <div className=\"bg-white rounded flex items-center w-full p-2 border-2 border-gray-500\">\n              <MdSearch className=\"h-5 w-5 fill-current text-gray-400\" />\n              <input\n                type=\"search\"\n                placeholder=\"search\"\n                onChange={(e) => filterTable(e.target.value)}\n                className=\"w-full h-6 pl-4 text-sm outline-none focus:outline-none bg-white\"\n                disabled={props.loading}\n              />\n\n              {props.pagination && (\n                <div className=\"select\">\n                  <select\n                    className=\"text-base outline-none focus:outline-none bg-white\"\n                    onChange={(e) => setPageSize(Number(e.target.value))}\n                    disabled={props.loading}\n                  >\n                    <option value=\"10\">10</option>\n                    <option value=\"25\">25</option>\n                    <option value=\"50\">50</option>\n                    <option value=\"100\">100</option>\n                  </select>\n                </div>\n              )}\n            </div>\n          )}\n        </div>\n      )}\n      <div className=\"overflow-x-auto w-full\">\n        <table\n          className={\n            props.tableClass\n              ? props.tableClass\n              : `w-full shadow ${\n                  props.rounded && \"sm:rounded-lg\"\n                } table-auto order-table`\n          }\n          id={tableId}\n        >\n          {!props.hideColumns && (\n            <thead className=\"bg-white border-b-2 border-gray-300 text-gray-600 font-bold text-base\">\n              <tr\n                className={`text-left tracking-wide bg-${props.thColor}-100 border-b-2 border-${props.thColor}-500 text-${props.thColor}-600`}\n              >\n                {props.columns.map((column, index) => (\n                  <th\n                    key={index}\n                    className={`${column.padding} text-${\n                      column.alignText\n                    } px-3 py-2 ${column.isSortAllowed && \"cursor-pointer\"}`}\n                    onClick={() =>\n                      column.isSortAllowed && sortThisColumn(tableId, index)\n                    }\n                  >\n                    <div className=\"flex items-center gap-1\">\n                      {column.columnTitle}\n                      {column.isSortAllowed && <BiSort />}\n                    </div>\n                  </th>\n                ))}\n              </tr>\n            </thead>\n          )}\n          <tbody id=\"table-data\" className=\"bg-white text-black text-base\">\n            {props.rows()}\n          </tbody>\n        </table>\n        {props.pagination && (\n          <div className=\"sm:flex-1 sm:flex sm:items-center sm:justify-between mt-4 work-sans\">\n            <div>\n              <span className=\"text-xs xs:text-sm text-gray-900\">\n                Showing 1 to {pageSize} of {totalItems - 1} Entries\n              </span>\n            </div>\n            <div>\n              <nav className=\"inline-flex shadow-sm\">\n                <div>\n                  <button\n                    type=\"button\"\n                    className={`inline-flex items-center px-2 py-2 rounded-l-md border border-gray-300 text-sm font-medium text-gray-500 ${\n                      currentPage !== 1 && \"bg-white\"\n                    }`}\n                    aria-label=\"Previous\"\n                    disabled={currentPage === 1 || props.loading}\n                    onClick={() => setCurrentPage(currentPage - 1)}\n                  >\n                    <MdNavigateBefore className=\"h-5 w-5\" />\n                  </button>\n                </div>\n                <div>\n                  {pages &&\n                    pages.map((page, pageIndex) => (\n                      <button\n                        key={pageIndex}\n                        className={`-ml-px inline-flex items-center px-4 py-2 border border-gray-300 text-sm font-medium text-gray-700 ${\n                          page !== currentPage\n                            ? \"bg-white\"\n                            : \"bg-gray-100 cursor-default\"\n                        }`}\n                        disabled={page === currentPage || props.loading}\n                        onClick={() => setCurrentPage(page)}\n                      >\n                        {page}\n                      </button>\n                    ))}\n                </div>\n                <div>\n                  <button\n                    type=\"button\"\n                    className={`inline-flex items-center px-2 py-2 rounded-r-md border border-gray-300 text-sm leading-5 font-medium text-gray-500 ${\n                      currentPage !== totalPages && \"bg-white\"\n                    }`}\n                    aria-label=\"Next\"\n                    disabled={currentPage === totalPages || props.loading}\n                    onClick={() => setCurrentPage(currentPage + 1)}\n                  >\n                    <MdNavigateNext className=\"h-5 w-5\" />\n                  </button>\n                </div>\n              </nav>\n            </div>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default Table;\n","import axios from \"axios\";\nimport { Dispatch } from \"redux\";\nimport { ActionTypes } from \"./types\";\nimport {\n  AssignRoleToUserActionInterface,\n  CustomeAccessInterface,\n  UserInterface,\n} from \"../shared/interfaces\";\nimport { API } from \"../utils/api\";\nimport { setAxiosToken } from \"../utils/AxiosToken\";\nimport { errorToText } from \"../utils/errors\";\n\nexport const userPageLimit: number = 30;\n\n/**\n * * ****************************** INTERFACES *****************************\n */\n\nexport interface FetchUsersAction {\n  type: ActionTypes.FETCH_USERS_ACCESS;\n  payload: UserAccessInterface;\n}\n\nexport interface BlockUserToSystem {\n  type: ActionTypes.BLOCK_USER_TO_SYSTEM | ActionTypes.UNBLOCK_USER_TO_SYSTEM;\n  payload: { id: string; page: number };\n}\n\nexport interface AssignRoleToUserAction {\n  type: ActionTypes.ASSIGN_ROLE_TO_USER;\n  payload: { data: AssignRoleToUserActionInterface; page: number };\n}\n\nexport interface CustomizeUserAccessAction {\n  type: ActionTypes.CUSTOMIZE_USER_ACCESS;\n  payload: { data: CustomeAccessInterface; page: number };\n}\n\nexport interface ResetUserAccessAction {\n  type: ActionTypes.RESET_USER_ACCESS;\n  payload: { user_id: string; page: number };\n}\n\nexport type fetchUserAccessInterface = {\n  users: UserInterface[] | null;\n  next: {\n    page: number;\n    limit: number;\n  } | null;\n  previous: {\n    page: number;\n    limit: number;\n  } | null;\n  total_users: number;\n};\n\nexport type UserAccessInterface = {\n  users: { data: UserInterface[]; page: number }[] | null;\n  next: {\n    page: number;\n    limit: number;\n  } | null;\n  previous: {\n    page: number;\n    limit: number;\n  } | null;\n  total_users: number;\n};\n\nexport enum documentValidationStatus {\n  waiting = \"waiting\",\n  approved = \"approved\",\n  rejected = \"rejected\",\n}\n\nexport interface VerifyDocumentInterface {\n  user_id: string;\n  doc_id: string;\n  validation_status: \"waiting\" | \"approved\" | \"rejected\";\n  validated_by: {\n    user_id: string;\n    comment: string;\n    validation_status: \"waiting\" | \"approved\" | \"rejected\";\n    date?: string;\n  };\n  in_education: boolean;\n  disability: boolean;\n}\n\nexport type AccessUserActionType =\n  | FetchUsersAction\n  | BlockUserToSystem\n  | AssignRoleToUserAction\n  | CustomizeUserAccessAction\n  | ResetUserAccessAction;\n\n/**\n * * ****************************** ACTIONS *****************************\n */\n\nexport const fetchUserAccess = (page: number, callback?: Function) => {\n  callback && callback(true, \"\");\n  return async (dispatch: Dispatch) => {\n    try {\n      setAxiosToken();\n      const res = await axios.get<fetchUserAccessInterface>(\n        `${API.AUTH}/users?page=${page}&limit=${userPageLimit}`\n      );\n      console.log(\"====================================\");\n      console.log({ fetchUserAccess: res });\n      console.log(\"====================================\");\n      dispatch<FetchUsersAction>({\n        type: ActionTypes.FETCH_USERS_ACCESS,\n        payload: {\n          users: [{ data: res.data.users!, page: page }],\n          next: res.data.next,\n          previous: res.data.previous,\n          total_users: res.data.total_users,\n        },\n      });\n      callback && callback(false, \"\", res.data.users);\n    } catch (error) {\n      console.error({ user_error: error });\n      callback && callback(false, errorToText(error));\n    }\n  };\n};\n\nexport const blockUserToSystem = (user_id: string, page: number) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<BlockUserToSystem>({\n      type: ActionTypes.BLOCK_USER_TO_SYSTEM,\n      payload: { id: user_id, page },\n    });\n  };\n};\n\nexport const unBlockUserToSystem = (user_id: string, page: number) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<BlockUserToSystem>({\n      type: ActionTypes.UNBLOCK_USER_TO_SYSTEM,\n      payload: { id: user_id, page },\n    });\n  };\n};\n\nexport const assignRoleToUserAccess = (\n  data: AssignRoleToUserActionInterface,\n  page: number\n) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<AssignRoleToUserAction>({\n      type: ActionTypes.ASSIGN_ROLE_TO_USER,\n      payload: { data, page },\n    });\n  };\n};\n\nexport const customizeUserAccess = (\n  data: CustomeAccessInterface,\n  page: number\n) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<CustomizeUserAccessAction>({\n      type: ActionTypes.CUSTOMIZE_USER_ACCESS,\n      payload: { data, page },\n    });\n  };\n};\n\nexport const resetUserAccess = (data: string, page: number) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<ResetUserAccessAction>({\n      type: ActionTypes.RESET_USER_ACCESS,\n      payload: { user_id: data, page },\n    });\n  };\n};\n","import { Dispatch } from \"redux\";\nimport { ActionTypes } from \"./types\";\nimport {\n  MySchoolInterface,\n  PostSchoolInterface,\n  SchoolInfoInterface,\n  SchoolsInterface,\n} from \"../shared/interfaces\";\n// import { setAxiosToken } from \"../utils/AxiosToken\";\nimport axios from \"axios\";\nimport { API } from \"../utils/api\";\nimport { errorToText } from \"../utils/errors\";\nimport { placedCandidateInterface } from \"../interfaces/marks_publication\";\nimport { PlacementListInterface } from \"../containers/PlacementLimit/PlacementLimit\";\n\n/**\n * * ****************************** INTERFACES *****************************\n */\n\nexport interface GetSchoolsAction {\n  type: ActionTypes.GET_SCHOOLS;\n  payload: SchoolsInterface[];\n}\n\nexport interface GetSchoolByIdAction {\n  type: ActionTypes.GET_SCHOOLS_BY_ID;\n  payload: MySchoolInterface;\n}\n\nexport interface GetSchoolsInfoAction {\n  type: ActionTypes.GET_SCHOOLS_INFO;\n  payload: SchoolInfoInterface[];\n}\n\nexport interface CreateSchoolAction {\n  type: ActionTypes.CREATE_SCHOOL;\n  payload: SchoolsInterface;\n}\n\nexport interface UpdateSchoolAction {\n  type: ActionTypes.UPDATE_SCHOOL;\n  payload: SchoolsInterface;\n}\n\nexport interface DeleteSchoolAction {\n  type: ActionTypes.DELETE_SCHOOL;\n  payload: string;\n}\n\n// School Posts interfaces\nexport interface FetchSchoolPostsAction {\n  type: ActionTypes.FETCH_SCHOOL_POSTS;\n  payload: PostSchoolInterface[];\n}\n\n// School Placements interfaces\nexport interface GetSchoolPlacementAction {\n  type: ActionTypes.GET_SCHOOL_PLACEMENT;\n  payload: placedCandidateInterface[];\n}\n\n// District School Placements interfaces\nexport interface GetDistrictPlacementAction {\n  type: ActionTypes.GET_DISTRICT_PLACEMENT;\n  payload: placedCandidateInterface[];\n}\n\n// District School Placements interfaces\nexport interface GetSessionPlacementAction {\n  type: ActionTypes.GET_SESSION_PLACEMENT;\n  payload: placedCandidateInterface[];\n}\n\nexport interface FetchDistrictPostsAction {\n  type: ActionTypes.FETCH_DISTRICT_POSTS;\n  payload: PostSchoolInterface[];\n}\n\nexport interface CreateSchoolPostAction {\n  type: ActionTypes.CREATE_SCHOOL_POST;\n  payload: PostSchoolInterface;\n}\n\nexport interface UpdateSchoolPostAction {\n  type: ActionTypes.UPDATE_SCHOOL_POST;\n  payload: {\n    TYPE: \"DISTRICT\" | \"SCHOOL\" | \"RECEIVED\";\n    data: PostSchoolInterface;\n  };\n}\n\nexport interface DeleteSchoolPostAction {\n  type: ActionTypes.DELETE_SCHOOL_POST;\n  payload: PostSchoolInterface[];\n}\n\n// Get Institute Limit Posts Action interfaces\nexport interface GetInstitutePlacementLimitAction {\n  type: ActionTypes.GET_INSTITUTE_PLACEMENT_LIMIT;\n  payload: PlacementListInterface[];\n}\n\nexport interface GetDistrictPlacementLimitAction {\n  type: ActionTypes.GET_DISTRICT_PLACEMENT_LIMIT;\n  payload: PlacementListInterface[];\n}\n\nexport interface UpdateInstitutePlacementLimitAction {\n  type: ActionTypes.UPDATE_INSTITUTE_PLACEMENT_LIMIT;\n  payload: { limit_id: string; confirmed_post: number };\n}\n\nexport type SchoolActionType =\n  | GetSchoolsAction\n  | GetSchoolByIdAction\n  | GetSchoolsInfoAction\n  | CreateSchoolAction\n  | UpdateSchoolAction\n  | DeleteSchoolAction\n  | FetchSchoolPostsAction\n  | GetSchoolPlacementAction\n  | FetchDistrictPostsAction\n  | CreateSchoolPostAction\n  | UpdateSchoolPostAction\n  | DeleteSchoolPostAction\n  | GetDistrictPlacementAction\n  | GetSessionPlacementAction\n  | GetInstitutePlacementLimitAction\n  | GetDistrictPlacementLimitAction\n  | UpdateInstitutePlacementLimitAction;\n\n/**\n * * ****************************** ACTIONS *****************************\n */\n\nexport const getSchools = (callback: Function) => {\n  callback(true, \"\");\n  return async (dispatch: Dispatch) => {\n    try {\n      const res = await axios.get<SchoolsInterface[]>(\n        `${API.APPLICATION}/schools`\n      );\n      dispatch<GetSchoolsAction>({\n        type: ActionTypes.GET_SCHOOLS,\n        payload: res.data,\n      });\n      callback(false, \"\", res.data);\n    } catch (error) {\n      console.log(\"Err: \", error);\n      callback(false, errorToText(error));\n    }\n  };\n};\n\nexport const getSchoolById = (schoolId: string, callback: Function) => {\n  return async (dispatch: Dispatch) => {\n    callback(true, \"\");\n    try {\n      const res = await axios.get<MySchoolInterface>(\n        `${API.APPLICATION}/schools/${schoolId}`\n      );\n      dispatch<GetSchoolByIdAction>({\n        type: ActionTypes.GET_SCHOOLS_BY_ID,\n        payload: res.data,\n      });\n      callback(false, \"\", res.data);\n    } catch (error) {\n      console.log(\"Err: \", error);\n      callback(false, errorToText(error));\n    }\n  };\n};\n\n// export const getSchoolsInfo = () => {\n//   return async (dispatch: Dispatch) => {\n//     setAxiosToken();\n//     const response = await axios.get<SchoolInfoInterface[]>(url);\n\n//     dispatch<GetSchoolsInfoAction>({\n//       type: ActionTypes.GET_SCHOOLS_INFO,\n//       payload: response.data,\n//     });\n//   };\n// };\n\nexport const createSchool = (data: SchoolsInterface) => {\n  console.log({ schools: data });\n  return async (dispatch: Dispatch) => {\n    dispatch<CreateSchoolAction>({\n      type: ActionTypes.CREATE_SCHOOL,\n      payload: data,\n    });\n  };\n};\n\nexport const updateSchool = (data: SchoolsInterface) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<UpdateSchoolAction>({\n      type: ActionTypes.UPDATE_SCHOOL,\n      payload: data,\n    });\n  };\n};\n\nexport const deleteSchool = (data: string) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<DeleteSchoolAction>({\n      type: ActionTypes.DELETE_SCHOOL,\n      payload: data,\n    });\n  };\n};\n\nexport const fetchSchoolPosts = (school_id: string, callback: Function) => {\n  return async (dispatch: Dispatch) => {\n    callback(true, \"\");\n    try {\n      const res = await axios.get<PostSchoolInterface[]>(\n        `${API.PLACEMENT}/requestpost/school/${school_id}`\n      );\n\n      console.log(\"====================================\");\n      console.log({ schoolPosts: res });\n      console.log(\"====================================\");\n\n      dispatch<FetchSchoolPostsAction>({\n        type: ActionTypes.FETCH_SCHOOL_POSTS,\n        payload: res.data,\n      });\n      callback(false, \"\");\n    } catch (error) {\n      console.log(\"Err: \", error);\n      callback(false, errorToText(error));\n    }\n  };\n};\n\nexport const getSchoolPlacement = (school_id: string, callback: Function) => {\n  return async (dispatch: Dispatch) => {\n    callback(true, \"\");\n    try {\n      const res = await axios.get<placedCandidateInterface[]>(\n        `${API.PLACEMENT}/placedcandidate/school/${school_id}`\n      );\n\n      console.log({ getSchoolPlacement: res.data });\n\n      dispatch<GetSchoolPlacementAction>({\n        type: ActionTypes.GET_SCHOOL_PLACEMENT,\n        payload: res.data,\n      });\n      callback(false, \"\", res.data);\n    } catch (error) {\n      console.log(\"Err: \", error);\n      callback(false, errorToText(error));\n    }\n  };\n};\n\nexport const createSchoolPost = (data: PostSchoolInterface) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<CreateSchoolPostAction>({\n      type: ActionTypes.CREATE_SCHOOL_POST,\n      payload: data,\n    });\n  };\n};\n\nexport const updateSchoolPost = (\n  TYPE: \"DISTRICT\" | \"SCHOOL\" | \"RECEIVED\",\n  data: PostSchoolInterface\n) => {\n  console.log({ TYPE, data });\n  return async (dispatch: Dispatch) => {\n    dispatch<UpdateSchoolPostAction>({\n      type: ActionTypes.UPDATE_SCHOOL_POST,\n      payload: { TYPE, data },\n    });\n  };\n};\n\nexport const deleteSchoolPost = (data: PostSchoolInterface[]) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<DeleteSchoolPostAction>({\n      type: ActionTypes.DELETE_SCHOOL_POST,\n      payload: data,\n    });\n  };\n};\n\nexport const fetchDistrictPosts = (district_id: string, callback: Function) => {\n  return async (dispatch: Dispatch) => {\n    callback(true, \"\");\n    try {\n      const res = await axios.get<PostSchoolInterface[]>(\n        `${API.PLACEMENT}/requestpost/district/${district_id}`\n      );\n\n      console.log(\"====================================\");\n      console.log({ fetchDistrictPosts: res });\n      console.log(\"====================================\");\n\n      dispatch<FetchDistrictPostsAction>({\n        type: ActionTypes.FETCH_DISTRICT_POSTS,\n        payload: res.data,\n      });\n      callback(false, \"\");\n    } catch (error) {\n      console.log(\"Err: \", error);\n      callback(false, errorToText(error));\n    }\n  };\n};\n\nexport const getDistrictPlacement = (\n  district_id: string,\n  callback: Function\n) => {\n  return async (dispatch: Dispatch) => {\n    callback(true, \"\");\n    try {\n      const res = await axios.get<placedCandidateInterface[]>(\n        `${API.PLACEMENT}/placedcandidate/district/${district_id}`\n      );\n\n      console.log(\"====================================\");\n      console.log({ getDistrictPlacement: res.data });\n      console.log(\"====================================\");\n\n      dispatch<GetDistrictPlacementAction>({\n        type: ActionTypes.GET_DISTRICT_PLACEMENT,\n        payload: res.data,\n      });\n      callback(false, \"\", res.data);\n    } catch (error) {\n      console.log(\"Err: \", error);\n      callback(false, errorToText(error));\n    }\n  };\n};\n\nexport const getSessionPlacement = (session_id: string, callback: Function) => {\n  return async (dispatch: Dispatch) => {\n    callback(true, \"\");\n    try {\n      const res = await axios.get<placedCandidateInterface[]>(\n        `${API.PLACEMENT}/placedcandidate/session/${session_id}`\n      );\n\n      console.log(\"====================================\");\n      console.log({ getSessionPlacement: res.data });\n      console.log(\"====================================\");\n\n      dispatch<GetSessionPlacementAction>({\n        type: ActionTypes.GET_SESSION_PLACEMENT,\n        payload: res.data,\n      });\n      callback(false, \"\", res.data);\n    } catch (error) {\n      console.log(\"Err: \", error);\n      callback(false, errorToText(error));\n    }\n  };\n};\n\nexport const getInstitutePlacementLimit = (\n  institute_id: string,\n  session_id: string,\n  callback: Function\n) => {\n  return async (dispatch: Dispatch) => {\n    callback(true, \"\");\n    try {\n      const res = await axios.get<PlacementListInterface[]>(\n        `${API.PLACEMENT}/confirmedpostrequest/institute/${institute_id}/${session_id}`\n      );\n\n      console.log(\"====================================\");\n      console.log({ getInstitutePlacementLimit: res.data });\n      console.log(\"====================================\");\n\n      dispatch<GetInstitutePlacementLimitAction>({\n        type: ActionTypes.GET_INSTITUTE_PLACEMENT_LIMIT,\n        payload: res.data,\n      });\n      callback(false, \"\", res.data);\n    } catch (error) {\n      console.log(\"Err: \", error);\n      callback(false, errorToText(error));\n    }\n  };\n};\n\nexport const getDistrictPlacementLimit = (\n  district_id: string,\n  session_id: string,\n  callback: Function\n) => {\n  return async (dispatch: Dispatch) => {\n    callback(true, \"\");\n    try {\n      const res = await axios.get<PlacementListInterface[]>(\n        `${API.PLACEMENT}/confirmedpostrequest/district/${district_id}/${session_id}`\n      );\n\n      console.log(\"====================================\");\n      console.log({ getDistrictPlacementLimit: res.data });\n      console.log(\"====================================\");\n\n      dispatch<GetDistrictPlacementLimitAction>({\n        type: ActionTypes.GET_DISTRICT_PLACEMENT_LIMIT,\n        payload: res.data,\n      });\n      callback(false, \"\", res.data);\n    } catch (error) {\n      console.log(\"Err: \", error);\n      callback(false, errorToText(error));\n    }\n  };\n};\n\nexport const updateInstitutePlacementLimit = (data: {\n  limit_id: string;\n  confirmed_post: number;\n}) => {\n  console.log(\"====================================\");\n  console.log({ updateInstitutePlacementLimit: data });\n  console.log(\"====================================\");\n  return async (dispatch: Dispatch) => {\n    dispatch<UpdateInstitutePlacementLimitAction>({\n      type: ActionTypes.UPDATE_INSTITUTE_PLACEMENT_LIMIT,\n      payload: data,\n    });\n  };\n};\n","import axios from \"axios\";\nimport React, { Component } from \"react\";\nimport { MdLock, MdLocationOn } from \"react-icons/md\";\nimport { connect } from \"react-redux\";\nimport { PushPopupAlert, schoolLevelsStoreInterface } from \"../../actions\";\nimport { getAllRoom } from \"../../actions/location\";\nimport { getSchools } from \"../../actions/schools\";\nimport {\n  blockUserToSystem,\n  unBlockUserToSystem,\n  resetUserAccess,\n} from \"../../actions/users\";\nimport { PopupAlertData } from \"../../components/Alert/Popup\";\nimport Loading from \"../../components/Loading/Loading\";\nimport NoResult, { NoResultThemes } from \"../../components/NoResult/NoResult\";\nimport Table from \"../../components/Table/Table\";\nimport { PopupAlertTheme } from \"../../interfaces/popupAlert\";\nimport { StoreState } from \"../../reducers\";\nimport {\n  getRoleById,\n  capitalizeFirstLetter,\n  getInstituteById,\n} from \"../../shared/dataTest\";\nimport {\n  RoomLocationInterface,\n  LocationRoomTableInterface,\n  DistrictInterface,\n  SystemUserRoleInterface,\n  UserInterface,\n  AccessTaskInterface,\n  SchoolsInterface,\n} from \"../../shared/interfaces\";\nimport { API } from \"../../utils/api\";\nimport { errorToText } from \"../../utils/errors\";\nimport { distinctDistrict } from \"../Locations/Locations\";\nimport { UserAccess } from \"./UserAccess\";\nimport UserRole from \"./UserRole\";\nimport profile from \"../../shared/blank_profile.png\"; // with im\n\nexport const getUserById = (users: UserInterface[], userId: string) => {\n  return users.find((item) => item.user_id === userId);\n};\n\nexport enum ModalState {\n  View_User = \"View User Info\",\n  Add_Access = \"Add Access To User\",\n  Update_Access = \"Update User Access\",\n  Close_Modal = \"Close Modal\",\n}\n\n// Tobe replaced with Emmy's function\nexport const LocationsInArray = (\n  LocationData: RoomLocationInterface[]\n): LocationRoomTableInterface[] | [] => {\n  let locationTemp: LocationRoomTableInterface[] = [];\n  for (let p in LocationData) {\n    let districts = LocationData[p].districts;\n    for (let d in districts) {\n      let centers = districts[d].centers;\n      for (let c in centers) {\n        let rooms = centers[c].rooms;\n        for (let r in rooms) {\n          locationTemp.push({\n            province_id: LocationData[p]._id,\n            province_name: LocationData[p].province_name,\n            district_id: districts[d]._id,\n            district_name: districts[d].district_name,\n            center_id: centers[c]._id,\n            center_name: centers[c].center_name,\n            room_id: rooms[r]._id,\n            room_name: rooms[r].room_number.toString(),\n            capacity: rooms[r].capacity,\n            occupied: rooms[r].occupied,\n          });\n        }\n      }\n    }\n  }\n  return locationTemp;\n};\n\ninterface AppProps {\n  users: UserInterface[];\n  roleList: SystemUserRoleInterface[];\n  userTypes: \"all\" | \"active\" | \"blocked\";\n  loadingUser: boolean;\n  schoolLevels: schoolLevelsStoreInterface;\n  setLoadingUser: (value: boolean) => void;\n  manageUser: UserInterface | null;\n  setManageUser: (value: UserInterface | null) => void;\n  changeRole: boolean;\n  setChangeRole: (value: boolean) => void;\n  currentPage: number;\n\n  // REDUX =================\n  allRoom: RoomLocationInterface[];\n  getAllRoom: Function;\n  schools: SchoolsInterface[];\n  getSchools: Function;\n  blockUserToSystem: Function;\n  unBlockUserToSystem: Function;\n  resetUserAccess: Function;\n  PushPopupAlert: (alert: PopupAlertData) => void;\n}\n\ninterface AppStates {\n  manageUserId: string;\n  loadingRequest: boolean;\n  loading: boolean;\n  loadingSchool: boolean;\n  loadingRequestType: \"RESET\" | \"STATUS\" | \"CHANGE_ROLE\" | null;\n  schoolList: SchoolsInterface[] | null;\n  roomList: RoomLocationInterface[] | null;\n  roomTable: LocationRoomTableInterface[] | null;\n  userAccess: AccessTaskInterface[] | null;\n  currentAccess: AccessTaskInterface | null;\n}\n\nclass UserList extends Component<AppProps, AppStates> {\n  constructor(props: AppProps) {\n    super(props);\n\n    this.state = {\n      manageUserId: \"\",\n      loadingRequest: false,\n      loading: true,\n      loadingSchool: true,\n      loadingRequestType: null,\n      schoolList: null,\n      roomList: null,\n      roomTable: null,\n      userAccess: null,\n      currentAccess: null,\n    };\n  }\n\n  setManageUserId = (value: string) => {\n    this.setState({ manageUserId: value });\n  };\n\n  setLoadingRequest = (value: boolean) => {\n    this.setState({ loadingRequest: value });\n  };\n\n  setLoadingSchool = (value: boolean) => {\n    this.setState({ loadingSchool: value });\n  };\n\n  setLoading = (value: boolean) => {\n    this.setState({ loading: value });\n  };\n\n  setLoadingRequestType = (\n    value: \"RESET\" | \"STATUS\" | \"CHANGE_ROLE\" | null\n  ) => {\n    this.setState({ loadingRequestType: value });\n  };\n\n  setRoomList = (value: RoomLocationInterface[] | null) => {\n    this.setState({ roomList: value });\n  };\n\n  setRoomTables = (value: LocationRoomTableInterface[] | null) => {\n    this.setState({ roomTable: value });\n  };\n\n  setCurrentAccess = (value: AccessTaskInterface | null) => {\n    this.setState({ currentAccess: value });\n  };\n\n  setSchoolList = (value: SchoolsInterface[] | null) => {\n    this.setState({ schoolList: value });\n  };\n\n  setUserAccess = (value: AccessTaskInterface[] | null) => {\n    this.setState({ userAccess: value });\n  };\n\n  componentDidMount = () => {\n    if (this.props.schools.length === 0) {\n      this.props.getSchools(\n        (status: boolean, msg: string, data?: SchoolsInterface[]) => {\n          this.setLoadingSchool(status);\n          if (!status) {\n            if (msg.length > 0) {\n              this.props.PushPopupAlert({\n                title: msg,\n                theme: PopupAlertTheme.danger,\n              });\n            }\n            if (data) {\n              this.setLoadingSchool(false);\n              this.setSchoolList(data);\n            }\n          }\n        }\n      );\n    } else {\n      this.setSchoolList(this.props.schools);\n      this.setLoadingSchool(false);\n    }\n\n    if (this.props.allRoom.length === 0) {\n      this.props.getAllRoom(\n        (status: boolean, msg: string, data?: RoomLocationInterface[]) => {\n          this.setLoading(status);\n          if (!status && msg.length > 0) {\n            this.props.PushPopupAlert({\n              title: msg,\n              theme: PopupAlertTheme.danger,\n            });\n          }\n          if (data && data.length > 0) {\n            this.setRoomList(data);\n            this.setRoomTables(LocationsInArray(data));\n          }\n        }\n      );\n    } else if (this.state.loading) {\n      this.setRoomList(this.props.allRoom);\n      this.setRoomTables(LocationsInArray(this.props.allRoom));\n      this.setLoading(false);\n    }\n  };\n\n  tableData = (): JSX.Element[] => {\n    if (\n      this.props.loadingUser ||\n      this.state.loading ||\n      this.state.loadingSchool\n    ) {\n      return [\n        <tr\n          key={Math.random()}\n          className=\"border-b border-gray-200 hover:bg-gray-100\"\n        >\n          <td className=\"p-3 text-center\" colSpan={8}>\n            <Loading />\n          </td>\n        </tr>,\n      ];\n    }\n\n    let data: UserInterface[] = this.props.users;\n    if (data.length <= 0) {\n      return [\n        <tr\n          key={Math.random()}\n          className=\"border-b border-gray-200 hover:bg-gray-100\"\n        >\n          <td className=\"p-3 text-center\" colSpan={8}>\n            No Data Found\n          </td>\n        </tr>,\n      ];\n    }\n\n    return data.map((user: UserInterface, index: number) => (\n      <tr\n        key={index + Math.random()}\n        className=\"border-b border-gray-200 hover:bg-gray-100 group cursor-pointer\"\n        onClick={() => {\n          this.props.setManageUser(user);\n          this.setManageUserId(user.user_id);\n        }}\n      >\n        <td className=\"p-3 text-left whitespace-nowrap\">{index + 1}</td>\n        <td className=\"p-3 text-left\">\n          <span>\n            {user.user_info &&\n              user.user_info.fname + \" \" + user.user_info.lname}\n          </span>\n        </td>\n        <td className=\"p-3 text-left\">{user.email}</td>\n        {/* <td className=\"p-3 text-left\">{user.phone_number}</td> */}\n        <td className=\"p-3 text-left\">\n          {user.user_info && user.user_info.sex === \"M\" ? \"Male\" : \"Female\"}\n        </td>\n        <td className=\"p-3 text-left text-blue-700 text-base font-medium\">\n          {user.default_access &&\n            user.default_access.system_user_role_id &&\n            user.default_access.system_user_role_id && (\n              <span\n                className={`px-2 py-1 font-semibold rounded text-blue-700 bg-blue-100 dark:bg-blue-700 dark:text-blue-100`}\n              >\n                {getRoleById(\n                  this.props.roleList,\n                  user.default_access.system_user_role_id\n                )?.role &&\n                  capitalizeFirstLetter(\n                    getRoleById(\n                      this.props.roleList,\n                      user.default_access.system_user_role_id\n                    )?.role\n                  )}\n              </span>\n            )}\n        </td>\n        {/* {userTypes === \"all\" && (\n          <td>\n            {user.is_active ? (\n              <span className={`px-2 py-1 font-semibold text-green-700`}>\n                Active\n              </span>\n            ) : (\n              <span className={`px-2 py-1 font-semibold text-red-700`}>\n                Blocked\n              </span>\n            )}\n          </td>\n        )} */}\n        <td className=\"px-3 text-center\">\n          <button\n            className=\"btn bg-gray-200 group-hover:bg-blue-700 group-hover:text-white focus:outline-none\"\n            title=\"Manage User Access\"\n            onClick={() => {\n              this.props.setManageUser(user);\n              this.setManageUserId(user.user_id);\n            }}\n          >\n            Manage\n          </button>\n        </td>\n      </tr>\n    ));\n  };\n\n  blockUser = async (user_id: string, actionType: boolean) => {\n    if (!user_id) {\n      this.props.PushPopupAlert({\n        title: \"User Access is required doesn't exist\",\n        theme: PopupAlertTheme.danger,\n      });\n    }\n\n    this.setLoadingRequest(true);\n\n    if (\n      !window.confirm(\n        `Are sure you want to ${actionType ? \"block\" : \"activate\"} this user?`\n      )\n    ) {\n      return this.setLoadingRequest(false);\n    }\n\n    try {\n      const res = await axios.patch(`${API.AUTH}/users/disactive/${user_id}`, {\n        is_active: !actionType,\n      });\n      if (res) {\n        console.log(\"====================================\");\n        console.log({ blockUserToSystem: res });\n        console.log(\"====================================\");\n        actionType\n          ? this.props.blockUserToSystem(user_id, this.props.currentPage)\n          : this.props.unBlockUserToSystem(user_id, this.props.currentPage);\n\n        this.props.PushPopupAlert({\n          title: `User has been ${actionType ? \"blocked\" : \"activated\"}!`,\n          theme: PopupAlertTheme.info,\n        });\n      }\n    } catch (error) {\n      console.error({ blockUser_ERROR: error });\n      this.props.PushPopupAlert({\n        title: errorToText(error),\n        theme: PopupAlertTheme.danger,\n      });\n    }\n\n    this.setLoadingRequest(false);\n    user_id = \"\";\n  };\n\n  restUserAccess = async (user_id: string) => {\n    if (!user_id) {\n      this.props.PushPopupAlert({\n        title: \"User Access is required doesn't exist\",\n        theme: PopupAlertTheme.warning,\n      });\n    }\n\n    if (!window.confirm(`Are sure you want to reset to default access?`)) {\n      return this.setLoadingRequest(false);\n    }\n\n    this.setLoadingRequest(true);\n    this.setLoadingRequestType(\"RESET\");\n\n    try {\n      const res = await axios.delete(`${API.AUTH}/custaccess/user/${user_id}`);\n      res && this.props.resetUserAccess(user_id, this.props.currentPage);\n      let resetedAccess: UserInterface | undefined = this.props.users.find(\n        (user) => user.user_id === user_id\n      );\n      if (resetedAccess) {\n        resetedAccess.default_access &&\n          this.setUserAccess(resetedAccess.default_access.access);\n        this.props.PushPopupAlert({\n          title: `Resetting User Access complete successfully`,\n          theme: PopupAlertTheme.info,\n        });\n        this.setCurrentAccess(null);\n      }\n    } catch (error) {\n      console.error({ reseting_user_access: error });\n      this.props.PushPopupAlert({\n        title: errorToText(error),\n        theme: PopupAlertTheme.danger,\n      });\n    }\n\n    this.setLoadingRequest(false);\n    this.setLoadingRequestType(null);\n    user_id = \"\";\n  };\n\n  distinctDistrict = (\n    location: RoomLocationInterface[],\n    province_id?: string\n  ): DistrictInterface[] => {\n    let ids: string[] = [],\n      result: DistrictInterface[] = [];\n\n    if (province_id) {\n      result = location.find((item) => item._id === province_id)\n        ? location.find((item) => item._id === province_id)!.districts\n          ? location.find((item) => item._id === province_id)!.districts\n          : []\n        : [];\n    } else {\n      for (const key in location) {\n        if (Object.prototype.hasOwnProperty.call(location, key)) {\n          for (const keyDistrict in location[key].districts) {\n            if (\n              Object.prototype.hasOwnProperty.call(\n                location[key].districts,\n                keyDistrict\n              )\n            ) {\n              if (!ids.includes(location[key].districts[keyDistrict]._id)) {\n                ids.push(location[key].districts[keyDistrict]._id);\n                result.push(location[key].districts[keyDistrict]);\n              }\n            }\n          }\n        }\n      }\n    }\n\n    return result;\n  };\n\n  render() {\n    return (\n      <div>\n        {!this.props.manageUser && (\n          <div className=\"grid md:grid-cols-5 gap-2 mb-5\">\n            <div className={`md:col-span-5 rounded`}>\n              <div className=\"my-2 flex sm:flex-row flex-col justify-between\">\n                <div className=\"flex flex-col md:flex-row gap-1 items-center mx-1.5\">\n                  {/* <span className=\"text-lg\">All User</span>\n                  <MdChevronRight className=\"w-7 h-7\" />\n                  <span className=\"text-lg underline\">All User</span> */}\n                </div>\n              </div>\n              {this.props.users && (\n                <Table\n                  columns={[\n                    { columnTitle: \"#\", alignText: \"left\", padding: \"p-3\" },\n                    { columnTitle: \"Names\", alignText: \"left\", padding: \"p-3\" },\n                    { columnTitle: \"Email\", alignText: \"left\", padding: \"p-3\" },\n                    {\n                      columnTitle: \"Gender\",\n                      alignText: \"left\",\n                      padding: \"p-3\",\n                    },\n                    { columnTitle: \"Role\", alignText: \"left\", padding: \"p-3\" },\n                    // { columnTitle: \"Status\", alignText: \"left\", padding: \"p-3\" },\n                    { columnTitle: \"\", alignText: \"left\", padding: \"p-3\" },\n                  ]}\n                  rows={this.tableData}\n                  pagination={false}\n                  search={true}\n                  thColor=\"gray\"\n                  loading={\n                    this.props.loadingUser ||\n                    this.state.loading ||\n                    this.state.loadingSchool\n                  }\n                />\n              )}\n            </div>\n          </div>\n        )}\n\n        {/* -------------------------------------------------------- */}\n\n        {this.props.manageUser && (\n          <div className=\"bg-gray-100 h-100\">\n            {/* header */}\n            <div className=\"bg-white border-b border-t px-4 py-2 flex flex-col md:flex-row items-center gap-x-14\">\n              {this.props.users.find(\n                (user) => user.user_id === this.state.manageUserId\n              ) ? (\n                <div\n                  key={\n                    this.props.users.find(\n                      (user) => user.user_id === this.state.manageUserId\n                    )!.user_id + Math.random()\n                  }\n                  className=\"flex flex-col md:flex-row md:items-start items-center w-full gap-3\"\n                >\n                  <img\n                    src={\n                      this.props.users.find(\n                        (user) => user.user_id === this.state.manageUserId\n                      )!.user_info.photo !== \"pic\"\n                        ? this.props.users.find(\n                            (user) => user.user_id === this.state.manageUserId\n                          )!.user_info.photo\n                        : profile\n                    }\n                    alt=\"\"\n                    className=\"rounded-full w-32 h-32\"\n                  />\n                  <div className=\"flex flex-col gap-1 items-start w-full\">\n                    <span className=\"text-2xl font-semibold\">\n                      {this.props.users.find(\n                        (user) => user.user_id === this.state.manageUserId\n                      )!.user_info.fname +\n                        \" \" +\n                        this.props.users.find(\n                          (user) => user.user_id === this.state.manageUserId\n                        )!.user_info.lname}\n                    </span>\n                    <div className=\"flex items-center\">\n                      <MdLock className=\"w-5 h-5\" />\n                      <span className=\"text-lg font-medium\">\n                        {this.props.users.find(\n                          (user) => user.user_id === this.state.manageUserId\n                        )!.default_access &&\n                          getRoleById(\n                            this.props.roleList,\n                            this.props.users.find(\n                              (user) => user.user_id === this.state.manageUserId\n                            )!.default_access!.system_user_role_id\n                          ).role}\n                      </span>\n                    </div>\n                    <div className=\"flex items-center gap-1\">\n                      <span className=\"text-gray-500\">Level:</span>\n                      <span className=\"text-base font-medium\">\n                        {this.props.users.find(\n                          (user) => user.user_id === this.state.manageUserId\n                        )!.default_access &&\n                        getRoleById(\n                          this.props.roleList,\n                          this.props.users.find(\n                            (user) => user.user_id === this.state.manageUserId\n                          )!.default_access!.system_user_role_id\n                        ).district_required\n                          ? \"District\"\n                          : this.props.users.find(\n                              (user) => user.user_id === this.state.manageUserId\n                            )!.default_access &&\n                            getRoleById(\n                              this.props.roleList,\n                              this.props.users.find(\n                                (user) =>\n                                  user.user_id === this.state.manageUserId\n                              )!.default_access!.system_user_role_id\n                            ).school_required\n                          ? \"School\"\n                          : this.props.users.find(\n                              (user) => user.user_id === this.state.manageUserId\n                            )!.default_access &&\n                            getRoleById(\n                              this.props.roleList,\n                              this.props.users.find(\n                                (user) =>\n                                  user.user_id === this.state.manageUserId\n                              )!.default_access!.system_user_role_id\n                            ).room_required\n                          ? \"Room\"\n                          : this.props.users.find(\n                              (user) => user.user_id === this.state.manageUserId\n                            )!.default_access &&\n                            getRoleById(\n                              this.props.roleList,\n                              this.props.users.find(\n                                (user) =>\n                                  user.user_id === this.state.manageUserId\n                              )!.default_access!.system_user_role_id\n                            ).education_institution_required\n                          ? \"Institute\"\n                          : \"-\"}\n                      </span>\n                    </div>\n                    {this.props.users.find(\n                      (user) => user.user_id === this.state.manageUserId\n                    )!.default_access &&\n                    getRoleById(\n                      this.props.roleList,\n                      this.props.users.find(\n                        (user) => user.user_id === this.state.manageUserId\n                      )!.default_access!.system_user_role_id\n                    ).education_institution_required ? (\n                      <div className=\"flex items-center gap-1\">\n                        <span className=\"text-gray-500\">Institute:</span>\n                        <span className=\"text-base font-medium\">\n                          {this.props.users.find(\n                            (user) => user.user_id === this.state.manageUserId\n                          )!.default_access &&\n                          this.props.schoolLevels.education_categories &&\n                          getInstituteById(\n                            this.props.schoolLevels.education_categories,\n                            this.props.users.find(\n                              (user) => user.user_id === this.state.manageUserId\n                            )!.default_access!.education_institution_id\n                          )\n                            ? getInstituteById(\n                                this.props.schoolLevels.education_categories,\n                                this.props.users.find(\n                                  (user) =>\n                                    user.user_id === this.state.manageUserId\n                                )!.default_access!.education_institution_id\n                              )!.education_category_title\n                            : \"Unknown Institute\"}\n                        </span>\n                      </div>\n                    ) : this.props.users.find(\n                        (user) => user.user_id === this.state.manageUserId\n                      )!.default_access &&\n                      getRoleById(\n                        this.props.roleList,\n                        this.props.users.find(\n                          (user) => user.user_id === this.state.manageUserId\n                        )!.default_access!.system_user_role_id\n                      ).district_required ? (\n                      <div className=\"flex items-center gap-1\">\n                        <span className=\"text-gray-500\">District:</span>\n                        <span className=\"text-base font-medium\">\n                          {this.props.users.find(\n                            (user) => user.user_id === this.state.manageUserId\n                          )!.default_access &&\n                            this.state.roomList &&\n                            distinctDistrict(this.state.roomList).find(\n                              (item) =>\n                                item.district_id ===\n                                this.props.users.find(\n                                  (user) =>\n                                    user.user_id === this.state.manageUserId\n                                )!.default_access!.district_id\n                            ) &&\n                            distinctDistrict(this.state.roomList).find(\n                              (item) =>\n                                item.district_id ===\n                                this.props.users.find(\n                                  (user) =>\n                                    user.user_id === this.state.manageUserId\n                                )!.default_access!.district_id\n                            )!.district_name}\n                        </span>\n                      </div>\n                    ) : this.props.users.find(\n                        (user) => user.user_id === this.state.manageUserId\n                      )!.default_access &&\n                      getRoleById(\n                        this.props.roleList,\n                        this.props.users.find(\n                          (user) => user.user_id === this.state.manageUserId\n                        )!.default_access!.system_user_role_id\n                      ).school_required ? (\n                      <div className=\"flex items-center gap-1\">\n                        <span className=\"text-gray-500\">School:</span>\n                        <span className=\"text-base font-medium\">\n                          {this.state.schoolList &&\n                          this.state.schoolList.find(\n                            (school) =>\n                              school._id ===\n                              this.props.users.find(\n                                (user) =>\n                                  user.user_id === this.state.manageUserId\n                              )!.default_access?.school_id\n                          )\n                            ? this.state.schoolList.find(\n                                (school) =>\n                                  school._id ===\n                                  this.props.users.find(\n                                    (user) =>\n                                      user.user_id === this.state.manageUserId\n                                  )!.default_access?.school_id\n                              )!.school_name\n                            : \"Unknown school\"}\n                        </span>\n                      </div>\n                    ) : (\n                      this.props.users.find(\n                        (user) => user.user_id === this.state.manageUserId\n                      )!.default_access &&\n                      getRoleById(\n                        this.props.roleList,\n                        this.props.users.find(\n                          (user) => user.user_id === this.state.manageUserId\n                        )!.default_access!.system_user_role_id\n                      ).room_required && (\n                        <div className=\"flex items-center gap-1\">\n                          {/* <span className=\"text-gray-500\">Room:</span> */}\n                          <MdLocationOn className=\"text-gray-500\" />\n                          {this.state.roomTable && (\n                            <span className=\"text-base font-medium\">\n                              {this.state.roomTable.find(\n                                (room) =>\n                                  room.room_id ===\n                                  this.props.users.find(\n                                    (user) =>\n                                      user.user_id === this.state.manageUserId\n                                  )!.default_access?.room_id\n                              )?.district_name +\n                                \" - \" +\n                                this.state.roomTable.find(\n                                  (room) =>\n                                    room.room_id ===\n                                    this.props.users.find(\n                                      (user) =>\n                                        user.user_id === this.state.manageUserId\n                                    )!.default_access?.room_id\n                                )?.center_name +\n                                \" - Room \" +\n                                this.state.roomTable.find(\n                                  (room) =>\n                                    room.room_id ===\n                                    this.props.users.find(\n                                      (user) =>\n                                        user.user_id === this.state.manageUserId\n                                    )!.default_access?.room_id\n                                )?.room_name}\n                            </span>\n                          )}\n                        </div>\n                      )\n                    )}\n                  </div>\n                </div>\n              ) : (\n                <NoResult\n                  theme={NoResultThemes.Dark}\n                  value={\"User info not found\"}\n                />\n              )}\n              {this.props.users.find(\n                (user) => user.user_id === this.state.manageUserId\n              ) && (\n                <div\n                  key={\n                    this.props.users.find(\n                      (user) => user.user_id === this.state.manageUserId\n                    )!.user_id + Math.random()\n                  }\n                  className=\"flex flex-col w-full\"\n                >\n                  <div className=\"flex items-center gap-1\">\n                    <span className=\"text-gray-500\">NID:</span>\n                    <span className=\"text-base font-medium\">\n                      {\n                        this.props.users.find(\n                          (user) => user.user_id === this.state.manageUserId\n                        )!.n_id\n                      }\n                    </span>\n                  </div>\n                  <div className=\"flex items-center gap-1\">\n                    <span className=\"text-gray-500\">Email:</span>\n                    <span className=\"text-base font-medium\">\n                      {\n                        this.props.users.find(\n                          (user) => user.user_id === this.state.manageUserId\n                        )!.email\n                      }\n                    </span>\n                  </div>\n                  <div className=\"flex items-center gap-1\">\n                    <span className=\"text-gray-500\">Phone:</span>\n                    <span className=\"text-base font-medium\">\n                      {\n                        this.props.users.find(\n                          (user) => user.user_id === this.state.manageUserId\n                        )!.phone_number\n                      }\n                    </span>\n                  </div>\n                  <div className=\"flex items-center gap-1\">\n                    <span className=\"text-gray-500\">Status:</span>\n                    <span className=\"text-base font-medium\">\n                      {this.props.users.find(\n                        (user) => user.user_id === this.state.manageUserId\n                      )!.is_active === false\n                        ? \"Blocked\"\n                        : \"Active\"}\n                    </span>\n                  </div>\n                  <div className=\"flex items-center gap-1\">\n                    {this.props.users.find(\n                      (user) => user.user_id === this.state.manageUserId\n                    )!.custome_access && (\n                      <button\n                        className={`px-2 py-1 font-semibold text-gray-50 inline-flex items-center rounded ${\n                          this.state.loadingRequestType &&\n                          this.state.loadingRequestType === \"RESET\"\n                            ? \"cursor-wait bg-gray-400\"\n                            : \"bg-gray-600\"\n                        }`}\n                        onClick={() =>\n                          this.restUserAccess(\n                            this.props.users.find(\n                              (user) => user.user_id === this.state.manageUserId\n                            )!.user_id\n                          )\n                        }\n                        disabled={this.state.loadingRequest}\n                      >\n                        <MdLock className=\"w-4 h-4 fill-current\" />\n                        <span>\n                          {this.state.loadingRequestType &&\n                          this.state.loadingRequestType === \"RESET\"\n                            ? \"Reseting...\"\n                            : \"Reset Access\"}\n                        </span>\n                      </button>\n                    )}\n                    {!this.props.changeRole && (\n                      <button\n                        className=\"bg-yellow-300 hover:bg-yellow-400 px-2 py-1 font-semibold text-black inline-flex items-center rounded\"\n                        onClick={() => this.props.setChangeRole(true)}\n                      >\n                        <MdLock className=\"w-4 h-4 fill-current\" />\n                        <span>Change Role</span>\n                      </button>\n                    )}\n                    {this.props.users.find(\n                      (user) => user.user_id === this.state.manageUserId\n                    )!.is_active ? (\n                      <button\n                        className={`px-2 py-1 font-semibold text-gray-100 inline-flex items-center rounded ${\n                          this.state.loadingRequestType &&\n                          this.state.loadingRequestType === \"STATUS\"\n                            ? \"cursor-wait bg-red-500\"\n                            : \"bg-red-700\"\n                        }`}\n                        onClick={() =>\n                          !this.state.loadingRequest &&\n                          this.props.manageUser &&\n                          this.blockUser(\n                            this.props.users.find(\n                              (user) => user.user_id === this.state.manageUserId\n                            )!.user_id,\n                            this.props.users.find(\n                              (user) => user.user_id === this.state.manageUserId\n                            )!.is_active\n                          )\n                        }\n                        disabled={this.state.loadingRequest}\n                      >\n                        <MdLock className=\"w-4 h-4 fill-current\" />\n                        <span>\n                          {this.state.loadingRequestType &&\n                          this.state.loadingRequestType === \"RESET\"\n                            ? \"Loading...\"\n                            : \"Block user\"}\n                        </span>\n                      </button>\n                    ) : (\n                      <button\n                        className={`px-2 py-1 font-semibold text-gray-100 inline-flex items-center rounded ${\n                          this.state.loadingRequestType &&\n                          this.state.loadingRequestType === \"STATUS\"\n                            ? \"cursor-wait bg-yellow-500\"\n                            : \"bg-yellow-700\"\n                        }`}\n                        onClick={() =>\n                          !this.state.loadingRequest &&\n                          this.props.manageUser &&\n                          this.blockUser(\n                            this.props.users.find(\n                              (user) => user.user_id === this.state.manageUserId\n                            )!.user_id,\n                            this.props.users.find(\n                              (user) => user.user_id === this.state.manageUserId\n                            )!.is_active\n                          )\n                        }\n                        disabled={this.state.loadingRequest}\n                      >\n                        <MdLock className=\"w-4 h-4 fill-current\" />\n                        <span>\n                          {this.state.loadingRequestType &&\n                          this.state.loadingRequestType === \"RESET\"\n                            ? \"Loading...\"\n                            : \"Re-Activate\"}\n                        </span>\n                      </button>\n                    )}\n                  </div>\n                </div>\n              )}\n            </div>\n            {/* end header */}\n\n            {/* content */}\n            {this.props.manageUser &&\n            this.state.roomList &&\n            this.props.changeRole ? (\n              <UserRole\n                userInfo={this.props.manageUser}\n                roleList={this.props.roleList}\n                district={this.distinctDistrict(this.state.roomList)}\n                schoolList={this.state.schoolList}\n                roomList={this.state.roomList}\n                setChangeRole={this.props.setChangeRole}\n                currentPage={this.props.currentPage}\n              />\n            ) : (\n              <UserAccess\n                userInfo={getUserById(\n                  this.props.users,\n                  this.state.manageUserId\n                )}\n                manageUserId={this.state.manageUserId}\n                setUserAccess={this.setUserAccess}\n                userAccess={this.state.userAccess}\n                setCurrentAccess={this.setCurrentAccess}\n                currentAccess={this.state.currentAccess}\n                currentPage={this.props.currentPage}\n              />\n            )}\n            {/* end content */}\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = ({\n  schoolLevels,\n  schools,\n  locations,\n}: StoreState): {\n  schoolLevels: schoolLevelsStoreInterface;\n  schools: SchoolsInterface[];\n  allRoom: RoomLocationInterface[];\n} => {\n  return {\n    schoolLevels,\n    schools: schools.schools,\n    allRoom: locations.roomLocation,\n  };\n};\n\nexport default React.memo(\n  connect(mapStateToProps, {\n    blockUserToSystem,\n    unBlockUserToSystem,\n    resetUserAccess,\n    getSchools,\n    getAllRoom,\n    PushPopupAlert,\n  })(UserList)\n);\n","import React, { useState } from \"react\";\nimport { MdSearch } from \"react-icons/md\";\nimport { capitalizeFirstLetter } from \"../../shared/dataTest\";\nimport { SystemUserRoleInterface } from \"../../shared/interfaces\";\nimport search from \"../../utils/search\";\n\n// const searchRole = (\n//   objList: SystemUserRoleInterface[],\n//   text: string\n// ): SystemUserRoleInterface[] => {\n//   return objList.filter(\n//     (product) => product.role.toLocaleLowerCase() === text.toLocaleLowerCase()\n//   );\n// };\n\ntype RoleListProps = {\n  setChooseRole: (value: boolean) => void;\n  roleList: SystemUserRoleInterface[];\n  handleSelectRole: (role_id: string, TYPE?: \"SELECT\" | \"DEFAULT\") => void;\n  loadindRequest: boolean;\n};\n\nconst RoleList: React.FC<RoleListProps> = (props) => {\n  const [searchInput, setSearchInput] = useState<string>(\"\");\n  return (\n    <section className=\"border-2 rounded border-gray-400\">\n      {/* SEARCH PART */}\n      <div className=\"flex items-center w-full my-1\">\n        <MdSearch className=\"w-6 h-6 absolute ml-2\" />\n        <input\n          type=\"text\"\n          placeholder=\"Search\"\n          className=\"focus:border-2 h-7 ml-1 pl-9 mr-2 bg-gray-100 focus:border-gray-700 w-full rounded\"\n          onChange={(e) => setSearchInput(e.target.value)}\n          value={searchInput}\n          disabled={props.roleList.length > 0 ? false : true}\n        />\n        <button\n          className=\"bg-red-200 text-red-700 py-1 px-2 mr-1 rounded text-sm focus:outline-none\"\n          type=\"button\"\n          onClick={() => {\n            props.setChooseRole(false);\n          }}\n        >\n          Close\n        </button>\n      </div>\n      {/* END SEARCH PART ///////////////// */}\n\n      <div className=\"w-full h-52 mt-2 overflow-y-auto divide-y divide-gray-300\">\n        {search(props.roleList, searchInput).length > 0 ? (\n          search(props.roleList, searchInput).map((role, index) => (\n            <section key={index + role.role}>\n              <div className=\"group flex items-center justify-between my-1 hover:bg-gray-100\">\n                <div\n                  className=\"p-1 w-full mr-2 cursor-pointer\"\n                  onClick={() => {\n                    props.setChooseRole(false);\n                    !props.loadindRequest &&\n                      props.handleSelectRole(role.system_user_role_id);\n                  }}\n                >\n                  <p className=\"text-sm font-medium text-black\">\n                    {capitalizeFirstLetter(role.role)}\n                  </p>\n                </div>\n                <button\n                  type=\"button\"\n                  className=\"bg-blue-200 group-hover:bg-blue-300 text-blue-700 group-hover:text-blue-800 py-1 px-2 mr-1 rounded text-sm\"\n                >\n                  Choose\n                </button>\n              </div>\n            </section>\n          ))\n        ) : (\n          <div className=\"text-center p-3\">\n            <p className=\"text-base font-medium text-black\">\n              No role available\n            </p>\n          </div>\n        )}\n      </div>\n    </section>\n  );\n};\n\nexport default React.memo(RoleList);\n","import axios from \"axios\";\nimport React, { Component } from \"react\";\nimport { MdHighlightOff } from \"react-icons/md\";\nimport { TiInputChecked } from \"react-icons/ti\";\nimport { connect } from \"react-redux\";\nimport { schoolLevelsStoreInterface, PushPopupAlert } from \"../../actions\";\nimport { assignRoleToUserAccess } from \"../../actions/users\";\nimport { PopupAlertData } from \"../../components/Alert/Popup\";\nimport Loading from \"../../components/Loading/Loading\";\nimport Table from \"../../components/Table/Table\";\nimport { PopupAlertTheme } from \"../../interfaces/popupAlert\";\nimport { StoreState } from \"../../reducers\";\nimport { isEmptyOrSpaces } from \"../../shared/dataTest\";\nimport {\n  UserInterface,\n  SystemUserRoleInterface,\n  DistrictInterface,\n  SchoolsInterface,\n  RoomLocationInterface,\n  AssignRoleToUserActionInterface,\n  LocationRoomTableInterface,\n  RoleToUserInterface,\n} from \"../../shared/interfaces\";\nimport { API } from \"../../utils/api\";\nimport { errorToText } from \"../../utils/errors\";\nimport RoleList from \"./RoleList\";\nimport { LocationsInArray } from \"./UserList\";\n\ninterface AppProps {\n  currentPage: number;\n  userInfo: UserInterface;\n  roleList: SystemUserRoleInterface[];\n  district: DistrictInterface[];\n  assignRoleToUserAccess: Function;\n  schoolList: SchoolsInterface[] | null;\n  roomList: RoomLocationInterface[] | null;\n  schoolLevels: schoolLevelsStoreInterface;\n  setChangeRole: (value: boolean) => void;\n  PushPopupAlert: (alert: PopupAlertData) => void;\n}\n\ninterface AppState {\n  loading: boolean;\n  loadingForm: boolean;\n  loadingRequest: boolean;\n  roleId: string;\n  provinceId: string;\n  districtId: string;\n  schoolId: string;\n  roomId: string;\n  instituteId: string;\n  centerId: string;\n  selectedRole: SystemUserRoleInterface | null;\n  formError: {\n    element: string;\n    msg: string;\n  } | null;\n  chooseRole: boolean;\n  chooseSchool: boolean;\n}\n\nclass UserRole extends Component<AppProps, AppState> {\n  constructor(props: AppProps) {\n    super(props);\n\n    this.state = {\n      loading: true,\n      loadingForm: true,\n      loadingRequest: false,\n      roleId: \"\",\n      provinceId: \"\",\n      districtId: \"\",\n      schoolId: \"\",\n      roomId: \"\",\n      instituteId: \"\",\n      centerId: \"\",\n      selectedRole: null,\n      formError: null,\n      chooseRole: false,\n      chooseSchool: false,\n    };\n  }\n\n  setRoleId = (value: string) => {\n    this.setState({ roleId: value });\n  };\n\n  setSelectedRole = (value: SystemUserRoleInterface | null) => {\n    this.setState({ selectedRole: value });\n  };\n\n  setProvinceId = (value: string) => {\n    this.setState({ provinceId: value });\n  };\n\n  setDistrictId = (value: string) => {\n    this.setState({ districtId: value });\n  };\n\n  setCenterId = (value: string) => {\n    this.setState({ centerId: value });\n  };\n\n  setRoomId = (value: string) => {\n    this.setState({ roomId: value });\n  };\n\n  setLoadingForm = (value: boolean) => {\n    this.setState({ loadingForm: value });\n  };\n\n  setSchoolId = (value: string) => {\n    this.setState({ schoolId: value });\n  };\n\n  setChooseSchool = (value: boolean) => {\n    this.setState({ chooseSchool: value });\n  };\n\n  setLoading = (value: boolean) => {\n    this.setState({ loading: value });\n  };\n\n  setInstituteId = (value: string) => {\n    this.setState({ instituteId: value });\n  };\n\n  setFormError = (\n    value: {\n      element: string;\n      msg: string;\n    } | null\n  ) => {\n    this.setState({ formError: value });\n  };\n  setLoadingRequest = (value: boolean) => {\n    this.setState({ loadingRequest: value });\n  };\n  setChooseRole = (value: boolean) => {\n    this.setState({ chooseRole: value });\n  };\n\n  setDefaultState = (\n    default_access: RoleToUserInterface,\n    role: SystemUserRoleInterface\n  ) => {\n    // SET DEFAULT PROVINCE && DISTRICT ID =======================\n    let LOAD_province: LocationRoomTableInterface | undefined;\n    let LOAD_district: DistrictInterface | undefined;\n    if (role.district_required && this.props.roomList) {\n      LOAD_district = this.distinctDistrict(this.props.roomList).find(\n        (item) => item._id === default_access!.district_id\n      );\n      LOAD_district && this.setProvinceId(LOAD_district.province_id);\n      LOAD_district && this.setDistrictId(default_access!.district_id);\n      this.setLoadingForm(false);\n    } else if (role.room_required && this.props.roomList) {\n      // SET DEFAULT PROVINCE && DISTRICT && ROOM ID =======================\n\n      LOAD_province = LocationsInArray(this.props.roomList).find(\n        (item) => item.room_id === default_access!.room_id\n      );\n      LOAD_province && this.setProvinceId(LOAD_province.province_id);\n      LOAD_province && this.setDistrictId(LOAD_province.district_id);\n      LOAD_province && this.setCenterId(LOAD_province.center_id);\n      this.setRoomId(default_access.room_id);\n      this.setLoadingForm(false);\n    } else if (\n      role.school_required &&\n      this.props.roomList &&\n      this.props.schoolList\n    ) {\n      // SET DEFAULT PROVINCE && DISTRICT && SCHOOL ID =======================\n      let LOAD_school: SchoolsInterface | undefined =\n        this.props.schoolList.find(\n          (item) => item._id === default_access!.school_id\n        );\n      if (LOAD_school) {\n        LOAD_province = LocationsInArray(this.props.roomList).find(\n          (item) => item.district_id === LOAD_school?.district_id\n        );\n        LOAD_province && this.setProvinceId(LOAD_province.province_id);\n        LOAD_province && this.setDistrictId(LOAD_province.district_id);\n        this.setSchoolId(default_access.school_id);\n        this.setLoadingForm(false);\n      } else {\n        this.setLoadingForm(false);\n      }\n    } else {\n      this.setLoadingForm(false);\n    }\n  };\n\n  componentDidMount = () => {\n    if (this.props.roleList.length) {\n      if (this.props.userInfo.default_access && this.state.loadingForm) {\n        // SET DEFAULT ROLE ID =======================\n        if (!this.state.roleId.length) {\n          let result = this.props.roleList.find(\n            (role) =>\n              role.system_user_role_id ===\n              this.props.userInfo.default_access!.system_user_role_id\n          );\n          if (result) {\n            this.setRoleId(\n              this.props.userInfo.default_access.system_user_role_id\n            );\n            this.setSelectedRole(result);\n            this.setDefaultState(this.props.userInfo.default_access, result);\n          }\n        }\n\n        console.log(\"====================================\");\n        console.log({ vvvvv: this.props.userInfo.default_access });\n        console.log(\"====================================\");\n      }\n\n      if (this.state.selectedRole && this.props.userInfo.default_access) {\n        this.setDefaultState(\n          this.props.userInfo.default_access,\n          this.state.selectedRole\n        );\n      }\n\n      this.setLoading(false);\n    }\n  };\n\n  handleSelectRole = (\n    role_id: string,\n    TYPE: \"SELECT\" | \"DEFAULT\" = \"SELECT\"\n  ) => {\n    if (this.props.roleList) {\n      let result = this.props.roleList.find(\n        (role) => role.system_user_role_id === role_id\n      );\n      if (result) {\n        this.setRoleId(role_id);\n        this.setSelectedRole(result);\n        this.state.formError &&\n          this.state.formError.element === \"role_id\" &&\n          this.setFormError(null);\n\n        if (TYPE === \"SELECT\") {\n          this.setProvinceId(\"\");\n          this.setDistrictId(\"\");\n          this.setSchoolId(\"\");\n          this.setCenterId(\"\");\n          this.setRoomId(\"\");\n          this.setInstituteId(\"\");\n        }\n      }\n    }\n  };\n\n  tableData = (): JSX.Element[] => {\n    if (\n      this.state.roleId.length > 0 &&\n      this.state.selectedRole === null &&\n      this.props.roleList\n    ) {\n      this.handleSelectRole(this.state.roleId, \"DEFAULT\");\n    }\n    if (this.state.selectedRole) {\n      return this.state.selectedRole.access.map((access, i) => (\n        <tr\n          key={i + access.id + Math.random()}\n          className={`text-left border-b border-gray-200 hover:bg-gray-100`}\n        >\n          <td className=\"px-2 py-1\">\n            <label className=\"inline-flex items-center\">\n              <span className=\"text-gray-900 capitalize text-xl font-normal cursor-pointer\">\n                {access.task}\n              </span>\n            </label>\n          </td>\n          <td>\n            <div\n              className={`inline-flex items-center text-xl ${\n                access.permitted.create ? \"text-green-700\" : \"text-red-700\"\n              }`}\n            >\n              {access.permitted.create ? (\n                <TiInputChecked />\n              ) : (\n                <MdHighlightOff />\n              )}\n              {access.permitted.create ? \" Yes\" : \"No\"}\n            </div>\n          </td>\n          <td>\n            <div\n              className={`inline-flex items-center text-xl ${\n                access.permitted.view ? \"text-green-700\" : \"text-red-700\"\n              }`}\n            >\n              {access.permitted.view ? <TiInputChecked /> : <MdHighlightOff />}\n              {access.permitted.view ? \" Yes\" : \"No\"}\n            </div>\n          </td>\n          <td>\n            <div\n              className={`inline-flex items-center text-xl ${\n                access.permitted.update ? \"text-green-700\" : \"text-red-700\"\n              }`}\n            >\n              {access.permitted.update ? (\n                <TiInputChecked />\n              ) : (\n                <MdHighlightOff />\n              )}\n              {access.permitted.update ? \" Yes\" : \"No\"}\n            </div>\n          </td>\n          <td>\n            <div\n              className={`inline-flex items-center text-xl ${\n                access.permitted.delete ? \"text-green-700\" : \"text-red-700\"\n              }`}\n            >\n              {access.permitted.delete ? (\n                <TiInputChecked />\n              ) : (\n                <MdHighlightOff />\n              )}\n              {access.permitted.delete ? \" Yes\" : \"No\"}\n            </div>\n          </td>\n        </tr>\n      ));\n    }\n    const optionB = [\n      <tr key=\"55re\">\n        <td colSpan={5} className=\"text-center px-2 py-2\">\n          No Default Access Available on this Role.\n        </td>\n      </tr>,\n    ];\n    return optionB;\n  };\n\n  assignRoleToUser = async (e: React.FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n    if (!window.confirm(`Are sure you want to change user role?`)) {\n      return false;\n    }\n\n    if (!this.state.selectedRole) {\n      return this.setFormError({\n        element: \"role_id\",\n        msg: \"User role is required!\",\n      });\n    }\n\n    if (\n      this.state.selectedRole.room_required === true &&\n      isEmptyOrSpaces(this.state.provinceId)\n    ) {\n      return this.setFormError({\n        element: \"province_id\",\n        msg: \"Province is required!\",\n      });\n    }\n\n    if (\n      this.state.selectedRole.education_institution_required === true &&\n      isEmptyOrSpaces(this.state.instituteId)\n    ) {\n      return this.setFormError({\n        element: \"institute_id\",\n        msg: \"Institute is required on this role!\",\n      });\n    }\n\n    if (\n      (this.state.selectedRole.room_required === true ||\n        this.state.selectedRole.district_required === true) &&\n      isEmptyOrSpaces(this.state.districtId)\n    ) {\n      return this.setFormError({\n        element: \"district_id\",\n        msg: \"District is required!\",\n      });\n    }\n\n    if (\n      this.state.selectedRole.school_required === true &&\n      isEmptyOrSpaces(this.state.schoolId)\n    ) {\n      return this.setFormError({\n        element: \"school_id\",\n        msg: \"School is required!\",\n      });\n    }\n\n    if (\n      this.state.selectedRole.room_required === true &&\n      isEmptyOrSpaces(this.state.centerId)\n    ) {\n      return this.setFormError({\n        element: \"center_id\",\n        msg: \"Center is required!\",\n      });\n    }\n\n    if (\n      this.state.selectedRole.room_required === true &&\n      isEmptyOrSpaces(this.state.roomId)\n    ) {\n      return this.setFormError({\n        element: \"room_id\",\n        msg: \"Room is required!\",\n      });\n    }\n    this.setLoadingRequest(true);\n    let formData: AssignRoleToUserActionInterface = {\n      user_id: this.props.userInfo.user_id,\n      data: {\n        system_user_role_id: this.state.roleId,\n        status: 1,\n        role: this.state.selectedRole.role,\n        access: this.state.selectedRole.access,\n        school_id: this.state.selectedRole.school_required\n          ? this.state.schoolId\n          : \"\",\n        district_id: this.state.selectedRole.district_required\n          ? this.state.districtId\n          : \"\",\n        room_id: this.state.selectedRole.room_required ? this.state.roomId : \"\",\n        education_institution_id: this.state.selectedRole\n          .education_institution_required\n          ? this.state.instituteId\n          : \"\",\n      },\n    };\n\n    try {\n      const res = await axios.post(`${API.AUTH}/addroletouser`, {\n        user_id: this.props.userInfo.user_id,\n        system_user_role_id: this.state.roleId,\n        status: 1,\n        role: this.state.selectedRole.role,\n        access: true,\n        school_id:\n          this.state.selectedRole.school_required === true\n            ? this.state.schoolId\n            : \"\",\n        district_id:\n          this.state.selectedRole.district_required === true\n            ? this.state.districtId\n            : \"\",\n        room_id:\n          this.state.selectedRole.room_required === true\n            ? this.state.roomId\n            : \"\",\n        education_institution_id: this.state.selectedRole\n          .education_institution_required\n          ? this.state.instituteId\n          : \"\",\n      });\n      if (res) {\n        console.log(\"====================================\");\n        console.log({ assignRoleToUser: res });\n        console.log(\"====================================\");\n        this.props.assignRoleToUserAccess(formData, this.props.currentPage);\n        this.setLoadingRequest(false);\n        this.props.setChangeRole(false);\n        this.props.PushPopupAlert({\n          title: \"Assigning Role to User completed successfully\",\n          theme: PopupAlertTheme.success,\n        });\n      }\n    } catch (error) {\n      console.log({ role_error: error });\n      this.props.PushPopupAlert({\n        title: errorToText(error),\n        theme: PopupAlertTheme.danger,\n      });\n    }\n  };\n\n  distinctDistrict = (\n    location: RoomLocationInterface[],\n    province_id?: string\n  ): DistrictInterface[] => {\n    let ids: string[] = [],\n      result: DistrictInterface[] = [];\n\n    if (province_id) {\n      result = location.find((item) => item._id === province_id)\n        ? location.find((item) => item._id === province_id)!.districts\n          ? location.find((item) => item._id === province_id)!.districts\n          : []\n        : [];\n    } else {\n      for (const key in location) {\n        if (Object.prototype.hasOwnProperty.call(location, key)) {\n          for (const keyDistrict in location[key].districts) {\n            if (\n              Object.prototype.hasOwnProperty.call(\n                location[key].districts,\n                keyDistrict\n              )\n            ) {\n              if (!ids.includes(location[key].districts[keyDistrict]._id)) {\n                ids.push(location[key].districts[keyDistrict]._id);\n                result.push(location[key].districts[keyDistrict]);\n              }\n            }\n          }\n        }\n      }\n    }\n\n    return result;\n  };\n\n  distinctCenter = (\n    rooms: RoomLocationInterface[],\n    district_id: string\n  ): LocationRoomTableInterface[] => {\n    let ids: string[] = [],\n      result: LocationRoomTableInterface[] = [];\n\n    LocationsInArray(rooms).forEach((element) => {\n      if (\n        !ids.includes(element.center_id) &&\n        element.district_id === district_id\n      ) {\n        ids.push(element.center_id);\n        result.push(element);\n      }\n    });\n    return result;\n  };\n\n  distinctRoom = (\n    rooms: RoomLocationInterface[],\n    center_id: string\n  ): LocationRoomTableInterface[] => {\n    let ids: string[] = [],\n      result: LocationRoomTableInterface[] = [];\n\n    LocationsInArray(rooms).forEach((element) => {\n      if (!ids.includes(element.room_id) && element.center_id === center_id) {\n        ids.push(element.room_id);\n        result.push(element);\n      }\n    });\n    return result;\n  };\n\n  render() {\n    if (\n      this.state.loading === true ||\n      this.state.loadingForm ||\n      this.props.userInfo.default_access === null ||\n      this.state.roleId.length === 0 ||\n      this.state.selectedRole === null\n    ) {\n      return (\n        <div className=\"text-center py-7 font-bold text-3xl text-gray-400 animate-pulse\">\n          Loading...\n        </div>\n      );\n    }\n\n    return (\n      <div className=\"grid grid-cols-1 md:grid-cols-3 gap-8 py-2 md:py-4 px-2 md:px-0\">\n        {/* left panel */}\n        <div className=\"col-span-1 bg-white w-full overflow-x-auto border rounded\">\n          <div className=\"px-6 md:px-12 py-5 bg-white mx-auto rounded-2xl w-100\">\n            <h3 className=\"font-semibold text-2xl text-gray-800 mb-4\">\n              Change User Role\n            </h3>\n            {this.state.loadingForm ? (\n              <Loading />\n            ) : (\n              <form onSubmit={(e) => this.assignRoleToUser(e)}>\n                <div className=\"space-y-5\">\n                  <div className=\"space-y-2\">\n                    <label className=\"text-sm font-medium text-gray-700 tracking-wide\">\n                      User Role\n                    </label>\n\n                    {!this.state.chooseRole && (\n                      <div\n                        className={`w-full text-base bg-white text-grey-darker cursor-pointer border-2 px-4 py-3 rounded focus:outline-none focus:bg-gray-100 ${\n                          this.state.formError &&\n                          this.state.formError.element === \"role_id\"\n                            ? \"border-red-500\"\n                            : \"border-gray-400\"\n                        }`}\n                        onClick={() => {\n                          !this.state.loadingRequest &&\n                            this.setChooseRole(true);\n                          !this.state.loadingRequest && this.setFormError(null);\n                        }}\n                      >\n                        {this.state.selectedRole\n                          ? this.state.selectedRole.role\n                          : \"Select role\"}\n                      </div>\n                    )}\n\n                    {this.state.chooseRole && (\n                      <RoleList\n                        setChooseRole={this.setChooseRole}\n                        handleSelectRole={this.handleSelectRole}\n                        roleList={this.props.roleList}\n                        loadindRequest={this.state.loadingRequest}\n                      />\n                    )}\n\n                    {this.state.formError &&\n                      this.state.formError.element === \"role_id\" && (\n                        <span className=\"text-red-500\">\n                          {this.state.formError.msg}\n                        </span>\n                      )}\n                  </div>\n\n                  {this.state.selectedRole &&\n                    this.state.selectedRole.education_institution_required && (\n                      <div className=\"space-y-2\">\n                        <label className=\"mb-5 text-sm font-medium text-gray-700 tracking-wide\">\n                          Institute\n                        </label>\n                        <select\n                          className={`block w-full text-base bg-white text-grey-darker border-2 rounded px-4 py-3 md:w-full focus:outline-none focus:bg-gray-100 ${\n                            this.state.formError &&\n                            this.state.formError.element === \"institute_id\"\n                              ? \"border-red-500\"\n                              : \"border-gray-400\"\n                          }`}\n                          onChange={(e) => {\n                            this.setInstituteId(e.target.value);\n                            this.setProvinceId(\"\");\n                            this.setDistrictId(\"\");\n                            this.setSchoolId(\"\");\n                            this.setCenterId(\"\");\n                            this.setRoomId(\"\");\n                            this.state.formError &&\n                              this.state.formError.element === \"institute_id\" &&\n                              this.setFormError(null);\n                          }}\n                          disabled={this.state.loadingRequest}\n                          value={this.state.instituteId}\n                        >\n                          <option value=\"\">Select institute</option>\n                          {this.props.schoolLevels.education_categories &&\n                          this.props.schoolLevels.education_categories.length >\n                            0 ? (\n                            this.props.schoolLevels.education_categories.map(\n                              (institute) => (\n                                <option\n                                  value={institute.education_institute_id}\n                                  key={\n                                    institute.education_institute_id +\n                                    Math.random()\n                                  }\n                                >\n                                  {institute.education_category_title}\n                                </option>\n                              )\n                            )\n                          ) : (\n                            <option value=\"\" disabled>\n                              No institute available\n                            </option>\n                          )}\n                        </select>\n                        {this.state.formError &&\n                          this.state.formError.element === \"institute_id\" && (\n                            <span className=\"text-red-500\">\n                              {this.state.formError.msg}\n                            </span>\n                          )}\n                      </div>\n                    )}\n\n                  {this.state.selectedRole &&\n                    this.state.selectedRole.room_required && (\n                      <div className=\"space-y-2\">\n                        <label className=\"mb-5 text-sm font-medium text-gray-700 tracking-wide\">\n                          Province\n                        </label>\n                        <select\n                          className={`block w-full text-base bg-white text-grey-darker border-2 rounded px-4 py-3 md:w-full focus:outline-none focus:bg-gray-100 ${\n                            this.state.formError &&\n                            this.state.formError.element === \"province_id\"\n                              ? \"border-red-500\"\n                              : \"border-gray-400\"\n                          }`}\n                          onChange={(e) => {\n                            this.setProvinceId(e.target.value);\n                            this.state.formError &&\n                              this.state.formError.element === \"province_id\" &&\n                              this.setFormError(null);\n                            this.setDistrictId(\"\");\n                            this.setSchoolId(\"\");\n                            this.setCenterId(\"\");\n                            this.setRoomId(\"\");\n                          }}\n                          value={this.state.provinceId}\n                          disabled={this.state.loadingRequest}\n                        >\n                          <option value=\"\">Select province</option>\n                          {this.props.roomList &&\n                            this.props.roomList.map((province) => (\n                              <option\n                                key={province._id + Math.random()}\n                                value={province._id}\n                              >\n                                {province.province_name}\n                              </option>\n                            ))}\n                        </select>\n                        {this.state.formError &&\n                          this.state.formError.element === \"province_id\" && (\n                            <span className=\"text-red-500\">\n                              {this.state.formError.msg}\n                            </span>\n                          )}\n                      </div>\n                    )}\n                  {this.state.selectedRole &&\n                    (this.state.selectedRole.district_required ||\n                      this.state.selectedRole.room_required) && (\n                      <div className=\"space-y-2\">\n                        <label className=\"mb-5 text-sm font-medium text-gray-700 tracking-wide\">\n                          District\n                        </label>\n                        <select\n                          className={`block w-full text-base bg-white text-grey-darker border-2 rounded px-4 py-3 md:w-full focus:outline-none focus:bg-gray-100 ${\n                            this.state.formError &&\n                            this.state.formError.element === \"district_id\"\n                              ? \"border-red-500\"\n                              : \"border-gray-400\"\n                          }`}\n                          onChange={(e) => {\n                            this.setDistrictId(e.target.value);\n                            this.state.formError &&\n                              this.state.formError.element === \"district_id\" &&\n                              this.setFormError(null);\n                            this.setSchoolId(\"\");\n                            this.setCenterId(\"\");\n                            this.setRoomId(\"\");\n                          }}\n                          value={this.state.districtId}\n                          disabled={this.state.loadingRequest}\n                        >\n                          <option value=\"\">Select district</option>\n                          {this.props.roomList &&\n                          this.distinctDistrict(\n                            this.props.roomList,\n                            !isEmptyOrSpaces(this.state.provinceId)\n                              ? this.state.provinceId\n                              : undefined\n                          ).length > 0 ? (\n                            this.distinctDistrict(\n                              this.props.roomList,\n                              !isEmptyOrSpaces(this.state.provinceId)\n                                ? this.state.provinceId\n                                : undefined\n                            ).map((district) => (\n                              <option\n                                key={district._id + Math.random()}\n                                value={district._id}\n                              >\n                                {district.district_name}\n                              </option>\n                            ))\n                          ) : (\n                            <option value=\"\" disabled>\n                              No district found\n                            </option>\n                          )}\n                        </select>\n                        {this.state.formError &&\n                          this.state.formError.element === \"district_id\" && (\n                            <span className=\"text-red-500\">\n                              {this.state.formError.msg}\n                            </span>\n                          )}\n                      </div>\n                    )}\n                  {this.state.selectedRole &&\n                    this.state.selectedRole.school_required && (\n                      <div className=\"space-y-2\">\n                        <label className=\"mb-5 text-sm font-medium text-gray-700 tracking-wide\">\n                          School\n                        </label>\n                        {/* {!this.state.chooseSchool && (\n                          <div\n                            className={`w-full text-base bg-white text-grey-darker cursor-pointer border-2 px-4 py-3 rounded focus:outline-none focus:bg-gray-100 ${\n                              this.state.formError &&\n                              this.state.formError.element === \"school_id\"\n                                ? \"border-red-500\"\n                                : \"border-gray-400\"\n                            }`}\n                            onClick={() => {\n                              !this.state.loadingRequest &&\n                                this.setChooseSchool(true);\n                              !this.state.loadingRequest &&\n                                this.setFormError(null);\n                            }}\n                          >\n                            {this.state.schoolId\n                              ? this.state.schoolId\n                              : \"Select school\"}\n                          </div>\n                        )}\n\n                        {this.state.chooseSchool && (\n                          <ChooseSchoolById\n                            allSchool={this.props.schoolList}\n                            setSelectSchool={(school_id: string) => {\n                              this.setSchoolId(school_id);\n                              this.state.formError &&\n                                this.state.formError.element === \"school_id\" &&\n                                this.setFormError(null);\n                              this.setCenterId(\"\");\n                              this.setRoomId(\"\");\n                            }}\n                            currentSelected={this.state.schoolId}\n                            setChooseSchool={this.setChooseSchool}\n                          />\n                        )} */}\n                        <select\n                          className={`block w-full text-base bg-white text-grey-darker border-2 rounded px-4 py-3 md:w-full focus:outline-none focus:bg-gray-100 ${\n                            this.state.formError &&\n                            this.state.formError.element === \"school_id\"\n                              ? \"border-red-500\"\n                              : \"border-gray-400\"\n                          }`}\n                          onChange={(e) => {\n                            this.setSchoolId(e.target.value);\n                            this.state.formError &&\n                              this.state.formError.element === \"school_id\" &&\n                              this.setFormError(null);\n                            this.setCenterId(\"\");\n                            this.setRoomId(\"\");\n                          }}\n                          disabled={this.state.loadingRequest}\n                          value={this.state.schoolId}\n                        >\n                          <option value=\"\">Selected school</option>\n                          {this.props.schoolList &&\n                            this.props.schoolList.map((school) => (\n                              <option\n                                value={school._id}\n                                key={school._id + Math.random()}\n                              >\n                                {school.school_name}\n                              </option>\n                            ))}\n                        </select>\n                        {this.state.formError &&\n                          this.state.formError.element === \"school_id\" && (\n                            <span className=\"text-red-500\">\n                              {this.state.formError.msg}\n                            </span>\n                          )}\n                      </div>\n                    )}\n\n                  {this.state.selectedRole &&\n                    this.state.selectedRole.room_required && (\n                      <div className=\"space-y-2\">\n                        <label className=\"mb-5 text-sm font-medium text-gray-700 tracking-wide\">\n                          Center\n                        </label>\n                        <select\n                          className={`block w-full text-base bg-white text-grey-darker border-2 rounded px-4 py-3 md:w-full focus:outline-none focus:bg-gray-100 ${\n                            this.state.formError &&\n                            this.state.formError.element === \"center_id\"\n                              ? \"border-red-500\"\n                              : \"border-gray-400\"\n                          }`}\n                          onChange={(e) => {\n                            this.setCenterId(e.target.value);\n                            this.state.formError &&\n                              this.state.formError.element === \"center_id\" &&\n                              this.setFormError(null);\n                            this.setRoomId(\"\");\n                          }}\n                          disabled={this.state.loadingRequest}\n                          value={this.state.centerId}\n                        >\n                          <option value=\"\">Select center</option>\n                          {this.state.districtId &&\n                          this.state.districtId.length > 0 &&\n                          this.props.roomList &&\n                          this.distinctCenter(\n                            this.props.roomList,\n                            this.state.districtId\n                          ).length > 0 ? (\n                            this.distinctCenter(\n                              this.props.roomList,\n                              this.state.districtId\n                            ).map((center, index) => (\n                              <option\n                                value={center.center_id}\n                                key={center.center_id + index + Math.random()}\n                              >\n                                {center.center_name}\n                              </option>\n                            ))\n                          ) : (\n                            <option value=\"\" disabled>\n                              No center found\n                            </option>\n                          )}\n                        </select>\n                        {this.state.formError &&\n                          this.state.formError.element === \"center_id\" && (\n                            <span className=\"text-red-500\">\n                              {this.state.formError.msg}\n                            </span>\n                          )}\n                      </div>\n                    )}\n\n                  {this.state.selectedRole &&\n                    this.state.selectedRole.room_required && (\n                      <div className=\"space-y-2\">\n                        <label className=\"mb-5 text-sm font-medium text-gray-700 tracking-wide\">\n                          Room\n                        </label>\n                        <select\n                          className={`block w-full text-base bg-white text-grey-darker border-2 rounded px-4 py-3 md:w-full focus:outline-none focus:bg-gray-100 ${\n                            this.state.formError &&\n                            this.state.formError.element === \"room_id\"\n                              ? \"border-red-500\"\n                              : \"border-gray-400\"\n                          }`}\n                          onChange={(e) => {\n                            this.setRoomId(e.target.value);\n                            this.state.formError &&\n                              this.state.formError.element === \"room_id\" &&\n                              this.setFormError(null);\n                          }}\n                          disabled={this.state.loadingRequest}\n                          value={this.state.roomId}\n                        >\n                          <option value=\"\">Select room</option>\n                          {!isEmptyOrSpaces(this.state.centerId) &&\n                          this.props.roomList &&\n                          this.distinctRoom(\n                            this.props.roomList,\n                            this.state.centerId\n                          ).length > 0 ? (\n                            this.distinctRoom(\n                              this.props.roomList,\n                              this.state.centerId\n                            ).map((room, index) => (\n                              <option\n                                value={room.room_id}\n                                key={room.room_id + index + Math.random()}\n                                className={`${\n                                  room.room_name === \"0\" ? \"hidden\" : \"block\"\n                                }`}\n                              >\n                                {room.room_name}\n                              </option>\n                            ))\n                          ) : (\n                            <option value=\"\" disabled>\n                              No room found\n                            </option>\n                          )}\n                        </select>\n                        {this.state.formError &&\n                          this.state.formError.element === \"room_id\" && (\n                            <span className=\"text-red-500\">\n                              {this.state.formError.msg}\n                            </span>\n                          )}\n                      </div>\n                    )}\n\n                  <div className=\"flex justify-between 2xl:justify-start gap-2\">\n                    <button\n                      className=\"btn bg-gray-500 text-gray-50 focus:outline-none\"\n                      onClick={() => {\n                        this.props.setChangeRole(false);\n                        this.setFormError(null);\n                        this.setProvinceId(\"\");\n                        this.setDistrictId(\"\");\n                        this.setSchoolId(\"\");\n                        this.setCenterId(\"\");\n                        this.setRoomId(\"\");\n                      }}\n                      disabled={this.state.loadingRequest}\n                    >\n                      Back\n                    </button>\n                    <button\n                      className=\"btn btn-blue focus:outline-none\"\n                      // onClick={() => assignRoleToUser()}\n                      disabled={this.state.loadingRequest}\n                    >\n                      {this.state.loadingRequest ? \"Loading...\" : \"Save Change\"}\n                    </button>\n                  </div>\n                </div>\n              </form>\n            )}\n          </div>\n        </div>\n        {/* end left panel */}\n\n        {/* ------------------------------------------------------------ */}\n\n        {/* right panel */}\n        <div className=\"cols-span-1 md:col-span-2 bg-white w-full border rounded text-center p-2 hidden md:block\">\n          <div className=\"my-4\">\n            <span className=\"text-gray-600 font-semibold text-2xl\">\n              {this.state.selectedRole?.role}'s Default Access\n            </span>\n          </div>\n          {!this.state.loading && (\n            <div className=\"overflow-x-auto w-full\">\n              <Table\n                columns={[\n                  {\n                    columnTitle: \"Access Name\",\n                    alignText: \"left\",\n                    padding: \"p-3\",\n                  },\n                  { columnTitle: \"Create\", alignText: \"left\" },\n                  { columnTitle: \"View\", alignText: \"left\" },\n                  { columnTitle: \"Update\", alignText: \"left\" },\n                  { columnTitle: \"Delete\", alignText: \"left\" },\n                ]}\n                rows={this.tableData}\n                pagination={false}\n                search={false}\n                searchBG=\"bg-gray-50\"\n                thColor=\"gray\"\n                tableId=\"defaultAccess\"\n              />\n            </div>\n          )}\n        </div>\n        {/* end right panel */}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = ({\n  schoolLevels,\n}: StoreState): {\n  schoolLevels: schoolLevelsStoreInterface;\n} => {\n  return { schoolLevels };\n};\n\nexport default React.memo(\n  connect(mapStateToProps, {\n    assignRoleToUserAccess,\n    PushPopupAlert,\n  })(UserRole)\n);\n","export default __webpack_public_path__ + \"static/media/blank_profile.c3f94521.png\";","import axios from \"axios\";\nimport React, { Component } from \"react\";\nimport { BiRightArrowAlt } from \"react-icons/bi\";\nimport {\n  MdDelete,\n  MdEdit,\n  MdHighlightOff,\n  MdRemoveRedEye,\n  MdSettings,\n} from \"react-icons/md\";\nimport { SiAddthis } from \"react-icons/si\";\nimport { TiInputChecked } from \"react-icons/ti\";\nimport { connect } from \"react-redux\";\nimport { Redirect } from \"react-router-dom\";\nimport { PushPopupAlert } from \"../../actions\";\nimport { customizeUserAccess } from \"../../actions/users\";\nimport { PopupAlertData } from \"../../components/Alert/Popup\";\nimport Table from \"../../components/Table/Table\";\nimport { PopupAlertTheme } from \"../../interfaces/popupAlert\";\nimport {\n  UserInterface,\n  AccessTaskInterface,\n  CustomeAccessInterface,\n} from \"../../shared/interfaces\";\nimport { API } from \"../../utils/api\";\nimport { errorToText } from \"../../utils/errors\";\n\ninterface AppProps {\n  userInfo: UserInterface | undefined;\n  manageUserId: string;\n  setUserAccess: (value: AccessTaskInterface[] | null) => void;\n  userAccess: AccessTaskInterface[] | null;\n  setCurrentAccess: (value: AccessTaskInterface | null) => void;\n  currentAccess: AccessTaskInterface | null;\n  currentPage: number;\n\n  // REDUX ==============\n  PushPopupAlert: (alert: PopupAlertData) => void;\n  customizeUserAccess: Function;\n}\n\ninterface AppStates {\n  loading: boolean;\n  loadindRequest: boolean;\n  // currentAccess:AccessTaskInterface | null;\n  // userAccess:AccessTaskInterface[] | null;\n  createPermission: boolean;\n  viewPermission: boolean;\n  updatePermission: boolean;\n  deletePermission: boolean;\n}\n\nclass _UserAccess extends Component<AppProps, AppStates> {\n  constructor(props: AppProps) {\n    super(props);\n\n    this.state = {\n      loading: true,\n      loadindRequest: false,\n      // currentAccess:null,\n      // userAccess:null,\n      createPermission: false,\n      viewPermission: false,\n      updatePermission: false,\n      deletePermission: false,\n    };\n  }\n\n  setViewPermission = (value: boolean) => {\n    this.setState({ viewPermission: value });\n  };\n\n  setLoadindRequest = (value: boolean) => {\n    this.setState({ loadindRequest: value });\n  };\n\n  setCreatePermission = (value: boolean) => {\n    this.setState({ createPermission: value });\n  };\n\n  setUpdatePermission = (value: boolean) => {\n    this.setState({ updatePermission: value });\n  };\n\n  setDeletePermission = (value: boolean) => {\n    this.setState({ deletePermission: value });\n  };\n\n  setLoadind = (value: boolean) => {\n    this.setState({ loading: value });\n  };\n\n  overrideUserAccess = (\n    default_access: AccessTaskInterface[],\n    custome_access: AccessTaskInterface[]\n  ) => {\n    if (default_access && custome_access && custome_access.length > 0) {\n      let overideAccess: AccessTaskInterface[] = [];\n      for (const key in default_access) {\n        if (Object.prototype.hasOwnProperty.call(default_access, key)) {\n          const findCustom = custome_access.find(\n            (custom) => custom.id === default_access[key].id\n          );\n          if (findCustom) {\n            overideAccess.push(findCustom);\n          } else {\n            overideAccess.push(default_access[key]);\n          }\n        }\n      }\n      this.props.setUserAccess(overideAccess);\n    }\n  };\n\n  componentDidMount = () => {\n    if (this.props.userInfo && this.props.userInfo.custome_access) {\n      this.props.userInfo.default_access &&\n        this.overrideUserAccess(\n          this.props.userInfo.default_access.access,\n          this.props.userInfo.custome_access.access\n        );\n      this.setLoadind(false);\n    } else {\n      this.props.userInfo &&\n        this.props.userInfo.default_access &&\n        this.props.setUserAccess(this.props.userInfo.default_access.access);\n      this.setLoadind(false);\n    }\n  };\n\n  tableData = (): JSX.Element[] => {\n    if (!this.props.userAccess)\n      return [\n        <tr key={Math.random()}>\n          <td>No data</td>\n        </tr>,\n      ];\n    return this.props.userAccess.map((access: AccessTaskInterface, i) => (\n      <tr\n        key={i + access.id + Math.random()}\n        className={`text-left border-b border-gray-200 cursor-pointer hover:bg-gray-100 ${\n          this.props.currentAccess &&\n          this.props.currentAccess.id === access.id &&\n          \"bg-gray-200 border my-3 hover:bg-gray-100\"\n        }`}\n        onClick={() =>\n          this.props.currentAccess && this.props.currentAccess.id === access.id\n            ? (this.props.setCurrentAccess(null),\n              this.setCreatePermission(false),\n              this.setViewPermission(false),\n              this.setUpdatePermission(false),\n              this.setDeletePermission(false))\n            : (this.props.setCurrentAccess(access),\n              this.setCreatePermission(access.permitted.create),\n              this.setViewPermission(access.permitted.view),\n              this.setUpdatePermission(access.permitted.update),\n              this.setDeletePermission(access.permitted.delete))\n        }\n      >\n        <td className=\"px-2 py-1\">\n          <label className=\"inline-flex items-center\">\n            {/* <input\n              type=\"radio\"\n              name=\"taskAccess\"\n              value={access.id}\n              className=\"form-radio h-4 w-4 text-gray-600\"\n              onChange={() => {\n                currentAccess\n                  ? this.setState({ currentAccess: null })\n                  : this.setState({ currentAccess: access });\n              }}\n              checked={currentAccess ? true : false}\n            /> */}\n            <span className=\"text-gray-900 capitalize text-xl font-normal cursor-pointer\">\n              {access.task}\n            </span>\n          </label>\n        </td>\n        <td>\n          <div\n            className={`inline-flex items-center text-xl ${\n              access.permitted.create ? \"text-green-700\" : \"text-red-700\"\n            }`}\n          >\n            {access.permitted.create ? <TiInputChecked /> : <MdHighlightOff />}\n            {access.permitted.create ? \" Yes\" : \"No\"}\n          </div>\n        </td>\n        <td>\n          <div\n            className={`inline-flex items-center text-xl ${\n              access.permitted.view ? \"text-green-700\" : \"text-red-700\"\n            }`}\n          >\n            {access.permitted.view ? <TiInputChecked /> : <MdHighlightOff />}\n            {access.permitted.view ? \" Yes\" : \"No\"}\n          </div>\n        </td>\n        <td>\n          <div\n            className={`inline-flex items-center text-xl ${\n              access.permitted.update ? \"text-green-700\" : \"text-red-700\"\n            }`}\n          >\n            {access.permitted.update ? <TiInputChecked /> : <MdHighlightOff />}\n            {access.permitted.update ? \" Yes\" : \"No\"}\n          </div>\n        </td>\n        <td>\n          <div\n            className={`inline-flex items-center text-xl ${\n              access.permitted.delete ? \"text-green-700\" : \"text-red-700\"\n            }`}\n          >\n            {access.permitted.delete ? <TiInputChecked /> : <MdHighlightOff />}\n            {access.permitted.delete ? \" Yes\" : \"No\"}\n          </div>\n        </td>\n      </tr>\n    ));\n  };\n\n  handleCustomization = async (e: React.FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n    if (this.props.userInfo) {\n      this.setLoadindRequest(true);\n      let task: [] | CustomeAccessInterface | null = null;\n      task = this.props.userInfo.custome_access;\n      let index = -1;\n\n      try {\n        if (task && this.props.currentAccess) {\n          index = task.access.findIndex(\n            (access) => access.id === this.props.currentAccess!.id\n          );\n          if (index >= 0) {\n            task.access[index].permitted.create = this.state.createPermission;\n            task.access[index].permitted.view = this.state.viewPermission;\n            task.access[index].permitted.update = this.state.updatePermission;\n            task.access[index].permitted.delete = this.state.deletePermission;\n          } else {\n            task.access.push({\n              id: this.props.currentAccess.id,\n              task: this.props.currentAccess.task,\n              key: this.props.currentAccess.key,\n              permitted: {\n                create: this.state.createPermission,\n                view: this.state.viewPermission,\n                update: this.state.updatePermission,\n                delete: this.state.deletePermission,\n              },\n            });\n          }\n        } else if (this.props.currentAccess) {\n          task = {\n            access: [\n              {\n                id: this.props.currentAccess.id,\n                task: this.props.currentAccess.task,\n                key: this.props.currentAccess.key,\n                permitted: {\n                  create: this.state.createPermission,\n                  view: this.state.viewPermission,\n                  update: this.state.updatePermission,\n                  delete: this.state.deletePermission,\n                },\n              },\n            ],\n            user_id: this.props.userInfo.user_id,\n            custome_user_access_id: \"\",\n          };\n        }\n\n        if (task) {\n          let res;\n          if (this.props.userInfo.custome_access !== null) {\n            res = await axios.patch<{ data: CustomeAccessInterface }>(\n              `${API.AUTH}/custaccess`,\n              {\n                access: task.access,\n                user_id: this.props.userInfo.user_id,\n              }\n            );\n          } else {\n            res = await axios.post<{ data: CustomeAccessInterface }>(\n              `${API.AUTH}/custaccess`,\n              {\n                access: task.access,\n                user_id: this.props.userInfo.user_id,\n              }\n            );\n          }\n\n          if (res) {\n            task.custome_user_access_id = res.data.data.custome_user_access_id;\n\n            this.props.customizeUserAccess(task, this.props.currentPage);\n            task &&\n              this.props.userInfo.default_access &&\n              this.overrideUserAccess(\n                this.props.userInfo.default_access.access,\n                task.access\n              );\n            this.props.PushPopupAlert({\n              title: `Resetting User Access complete successfully`,\n              theme: PopupAlertTheme.info,\n            });\n\n            task = null;\n            this.props.setCurrentAccess(null);\n            this.setCreatePermission(false);\n            this.setViewPermission(false);\n            this.setUpdatePermission(false);\n            this.setDeletePermission(false);\n          }\n        }\n      } catch (error) {\n        console.error({ customize_access: error });\n        this.props.PushPopupAlert({\n          title: errorToText(error),\n          theme: PopupAlertTheme.danger,\n        });\n      }\n      this.setLoadindRequest(false);\n    }\n  };\n\n  render() {\n    if (this.props.userInfo === undefined) {\n      return <Redirect to=\"/users\" />;\n    }\n\n    if (this.state.loading || this.props.userInfo === null) {\n      return (\n        <div className=\"text-center py-7 font-bold text-4xl text-gray-400 animate-pulse\">\n          Loading User Access...\n        </div>\n      );\n    }\n\n    return (\n      <div>\n        <div className=\"grid grid-cols-1 md:grid-cols-5 gap-4 mx-1 my-2\">\n          <div\n            className={`col-span-1 md:col-span-3 bg-white w-full overflow-x-auto border rounded text-center p-2 ${\n              this.props.currentAccess ? \"hidden md:block\" : \"\"\n            }`}\n          >\n            <span className=\"text-gray-600 mt-2 font-semibold text-2xl\">\n              Settings\n            </span>\n            {!this.state.loading && (\n              <div className=\"overflow-x-auto w-full\">\n                <Table\n                  columns={[\n                    {\n                      columnTitle: \"Access Name\",\n                      alignText: \"left\",\n                      padding: \"p-3\",\n                    },\n                    { columnTitle: \"Create\", alignText: \"left\" },\n                    { columnTitle: \"View\", alignText: \"left\" },\n                    { columnTitle: \"Update\", alignText: \"left\" },\n                    { columnTitle: \"Delete\", alignText: \"left\" },\n                  ]}\n                  rows={this.tableData}\n                  pagination={false}\n                  search={true}\n                  searchBG=\"bg-gray-50\"\n                  thColor=\"gray\"\n                />\n              </div>\n            )}\n          </div>\n          <div className={`col-span-1 md:col-span-2`}>\n            {!this.props.currentAccess ? (\n              <div className=\"w-full hidden md:flex flex-col items-center text-gray-600 gap-1 py-3\">\n                <MdSettings className=\"w-20 h-20\" />\n                <span className=\"text-8 md:text-12\">\n                  Choose Access to Customize\n                </span>\n              </div>\n            ) : (\n              <div className={``}>\n                <h1 className=\"text-2xl md:text-3xl font-semibold text-center my-2 text-gray-900\">\n                  Customize User Access\n                </h1>\n                <div className=\"flex justify-center mb-3\">\n                  <h2 className=\"text-2xl font-semibold text-center text-gray-600 flex flex-row items-center\">\n                    <BiRightArrowAlt className=\"w-7 h-7\" />\n                    {this.props.currentAccess.task}\n                  </h2>\n                </div>\n\n                <div className=\"flex flex-col px-2 md:px-1\">\n                  <form\n                    className=\"flex flex-col items-center\"\n                    onSubmit={(e) => this.handleCustomization(e)}\n                  >\n                    <div className=\"inline-flex gap-2 items-center\">\n                      <SiAddthis className=\"w-7 h-7 text-gray-600\" />\n                      <div className=\"flex flex-col\">\n                        <h3 className=\"font-semibold text-xl\">Create</h3>\n                        <span className=\"text-gray-600 text-sm md:pr-1\">\n                          This permission gives the user the ability to create\n                        </span>\n                      </div>\n                      <input\n                        type=\"checkbox\"\n                        className=\"form-checkbox h-7 w-7 text-teal-600\"\n                        onChange={() =>\n                          this.setCreatePermission(!this.state.createPermission)\n                        }\n                        checked={this.state.createPermission}\n                        disabled={this.state.loadindRequest}\n                      />\n                    </div>\n                    <div className=\"inline-flex gap-2 items-center\">\n                      <MdRemoveRedEye className=\"w-7 h-7 text-gray-600\" />\n                      <div className=\"flex flex-col\">\n                        <h3 className=\"font-semibold text-xl\">View</h3>\n                        <span className=\"text-gray-600 text-sm md:pr-4\">\n                          This permission gives the user the ability to view\n                        </span>\n                      </div>\n                      <input\n                        type=\"checkbox\"\n                        className=\"form-checkbox h-7 w-7 text-teal-600\"\n                        onChange={() =>\n                          this.setViewPermission(!this.state.viewPermission)\n                        }\n                        checked={this.state.viewPermission}\n                        disabled={this.state.loadindRequest}\n                      />\n                    </div>\n                    <div className=\"inline-flex gap-2 items-center\">\n                      <MdEdit className=\"w-7 h-7 text-gray-600\" />\n                      <div className=\"flex flex-col\">\n                        <h3 className=\"font-semibold text-xl\">Update</h3>\n                        <span className=\"text-gray-600 text-sm\">\n                          This permission gives the user the ability to update\n                        </span>\n                      </div>\n                      <input\n                        type=\"checkbox\"\n                        className=\"form-checkbox h-7 w-7 text-teal-600\"\n                        onChange={() =>\n                          this.setUpdatePermission(!this.state.updatePermission)\n                        }\n                        checked={this.state.updatePermission}\n                        disabled={this.state.loadindRequest}\n                      />\n                    </div>\n                    <div className=\"inline-flex gap-2 items-center\">\n                      <MdDelete className=\"w-7 h-7 text-gray-600\" />\n                      <div className=\"flex flex-col\">\n                        <h3 className=\"font-semibold text-xl\">Delete</h3>\n                        <span className=\"text-gray-600 text-sm md:pr-1\">\n                          This permission gives the user the ability to delete\n                        </span>\n                      </div>\n                      <input\n                        type=\"checkbox\"\n                        className=\"form-checkbox h-7 w-7 text-teal-600\"\n                        onChange={() =>\n                          this.setDeletePermission(!this.state.deletePermission)\n                        }\n                        checked={this.state.deletePermission}\n                        disabled={this.state.loadindRequest}\n                      />\n                    </div>\n\n                    <div className=\"flex items-center justify-center w-full py-3 gap-2\">\n                      {/* <button className=\"btn btn-secondary bg-red-600\">Back</button> */}\n                      <button\n                        className=\"btn bg-gray-500 hover:bg-gray-700 focus:outline-none text-white\"\n                        disabled={this.state.loadindRequest}\n                        onClick={() => {\n                          this.props.setCurrentAccess(null);\n                          this.setCreatePermission(false);\n                          this.setViewPermission(false);\n                          this.setUpdatePermission(false);\n                          this.setDeletePermission(false);\n                        }}\n                      >\n                        Cancel\n                      </button>\n                      <button\n                        className=\"btn btn-blue\"\n                        disabled={this.state.loadindRequest}\n                      >\n                        {!this.state.loadindRequest\n                          ? \"Save Change\"\n                          : \"Processing..\"}\n                      </button>\n                    </div>\n                  </form>\n                </div>\n              </div>\n            )}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport const UserAccess = React.memo(\n  connect(null, {\n    customizeUserAccess,\n    PushPopupAlert,\n  })(_UserAccess)\n);\n","import React, { useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport {\n  FC_CreateDistrict,\n  FC_DeleteDistrict,\n  FC_UpdateDistrict,\n} from \"../../actions/location\";\nimport axios from \"axios\";\nimport { API } from \"../../utils/api\";\nimport {\n  DistrictInterface,\n  RoomLocationInterface,\n} from \"../../shared/interfaces\";\nimport { PushPopupAlert } from \"../../actions/system\";\nimport { PopupAlertData } from \"../../components/Alert/Popup\";\nimport { PopupAlertTheme } from \"../../interfaces/popupAlert\";\nimport { errorToText } from \"../../utils/errors\";\nimport NoResult, { NoResultThemes } from \"../../components/NoResult/NoResult\";\nimport Modal, { ModalSize, Themes } from \"../../components/Modal/Modal\";\nimport { isEmptyOrSpaces } from \"../../shared/dataTest\";\n\ninterface AppProps {\n  thisProvince: RoomLocationInterface;\n  thisDistrict: DistrictInterface | null;\n  loadingRequest: boolean;\n  actionTypes:\n    | \"CREATE_PROVINCE\"\n    | \"UPDATE_PROVINCE\"\n    | \"CREATE_DISTRICT\"\n    | \"UPDATE_DISTRICT\"\n    | \"CREATE_SECTOR\"\n    | \"UPDATE_SECTOR\"\n    | null;\n  setLoadingRequest: React.Dispatch<React.SetStateAction<boolean>>;\n  setThisDistrict: React.Dispatch<\n    React.SetStateAction<DistrictInterface | null>\n  >;\n  setActionTypes: React.Dispatch<\n    React.SetStateAction<\n      | \"CREATE_PROVINCE\"\n      | \"UPDATE_PROVINCE\"\n      | \"CREATE_DISTRICT\"\n      | \"UPDATE_DISTRICT\"\n      | \"CREATE_SECTOR\"\n      | \"UPDATE_SECTOR\"\n      | null\n    >\n  >;\n  FC_CreateDistrict: Function;\n  FC_UpdateDistrict: Function;\n  FC_DeleteDistrict: Function;\n  PushPopupAlert: (alert: PopupAlertData) => void;\n}\n\nconst ViewDistrict: React.FC<AppProps> = (props) => {\n  const [districtName, setDistrictName] = useState<string>(\"\");\n  const [districtCode, setDistrictCode] = useState<number>(0);\n  const [error, setError] = useState<{ element: string; msg: string } | null>(\n    null\n  );\n\n  const handleSubmit = async () => {\n    if (isEmptyOrSpaces(districtName)) {\n      return setError({\n        element: \"district_name\",\n        msg: \"District name is required\",\n      });\n    }\n\n    if (districtCode <= 0) {\n      return setError({\n        element: \"district_code\",\n        msg: \"Invalid district code, code must be greater than 0\",\n      });\n    }\n\n    props.setLoadingRequest(true);\n    try {\n      let res;\n      if (props.actionTypes === \"CREATE_DISTRICT\") {\n        res = await axios.post<{ data: DistrictInterface }>(\n          `${API.APPLICATION}/district`,\n          {\n            province_id: props.thisProvince._id,\n            province_code: props.thisProvince.province_code,\n            district_name: districtName,\n            district_code: districtCode,\n            centers: [],\n          }\n        );\n        if (res.data) {\n          console.log({\n            province_id: props.thisProvince._id,\n            data: res.data.data,\n            res,\n          });\n          props.FC_CreateDistrict({\n            province_id: props.thisProvince._id,\n            data: {\n              centers: res.data.data.centers,\n              sectors: res.data.data.sectors,\n              province_code: res.data.data.province_code,\n              province_id: res.data.data.province_id,\n              district_code: res.data.data.district_code,\n              district_name: res.data.data.district_name,\n              district_id: res.data.data._id,\n            },\n          });\n          props.PushPopupAlert({\n            title: \"New district created successfully\",\n            theme: PopupAlertTheme.success,\n          });\n          props.setLoadingRequest(false);\n          props.setActionTypes(null);\n          setDistrictName(\"\");\n          setDistrictCode(0);\n        }\n      } else if (\n        props.thisDistrict &&\n        props.actionTypes === \"UPDATE_DISTRICT\"\n      ) {\n        const centers: string[] = props.thisDistrict.centers.map(\n          (center) => center._id\n        );\n        res = await axios.patch<{ data: DistrictInterface }>(\n          `${API.APPLICATION}/district`,\n          {\n            district_id: props.thisDistrict._id,\n            province_code: props.thisProvince.province_code,\n            district_name: districtName,\n            district_code: districtCode,\n            centers,\n          }\n        );\n        if (res.data) {\n          props.FC_UpdateDistrict({\n            province_id: props.thisProvince._id,\n            district_id: props.thisDistrict._id,\n            district_name: districtName,\n          });\n          props.PushPopupAlert({\n            title: \"District updated successfully\",\n            theme: PopupAlertTheme.success,\n          });\n          props.setLoadingRequest(false);\n          props.setActionTypes(null);\n          setDistrictName(\"\");\n          props.setThisDistrict(null);\n        }\n      }\n    } catch (error) {\n      console.log({ doc_category_error: error });\n      props.PushPopupAlert({\n        title: errorToText(error),\n        theme: PopupAlertTheme.danger,\n      });\n      props.setLoadingRequest(false);\n    }\n  };\n\n  // const handleDelete = async (districtId: string) => {\n  //   try {\n  //     const res = await axios.delete<DistrictInterface>(\n  //       `${API.APPLICATION}/district/${districtId}`\n  //     );\n\n  //     if (res.data) {\n  //       props.FC_DeleteDistrict({\n  //         province_id: props.thisProvince._id,\n  //         district_id: districtId,\n  //       });\n  //       props.PushPopupAlert({\n  //         title: \"District deleted successfully\",\n  //         theme: PopupAlertTheme.success,\n  //       });\n  //       props.setLoadingRequest(false);\n  //       props.setActionTypes(null);\n  //     }\n  //   } catch (error) {\n  //     console.log({ district_error: error });\n  //     props.PushPopupAlert({\n  //       title: errorToText(error),\n  //       theme: PopupAlertTheme.danger,\n  //     });\n  //     props.setLoadingRequest(false);\n  //   }\n  // };\n\n  return (\n    <div className={`w-full p-2`}>\n      {props.thisProvince.districts.length > 0 ? (\n        <div className=\"rounded border border-gray-100 shadow-sm animate__animated animate__fadeIn\">\n          <table className=\"w-full z-0\">\n            <thead className=\"bg-gray-50\">\n              <tr className=\"text-left\">\n                <th className=\"px-3 py-3\">#</th>\n                <th>District name</th>\n                <th>District code</th>\n                <th>Sectors</th>\n                {/* <th>Status</th> */}\n              </tr>\n            </thead>\n            <tbody className=\"text-base\">\n              {props.thisProvince.districts.map((district, index) => (\n                <tr\n                  key={index + district._id}\n                  className={`text-left border-b border-gray-50`}\n                >\n                  <td className=\"px-3 py-1\">{index + 1}</td>\n                  <td>{district.district_name}</td>\n                  <td>{district.district_code}</td>\n                  <td>\n                    {district.sectors && district.sectors.length > 0\n                      ? district.sectors.length + \" Sector(s)\"\n                      : \"\"}\n                  </td>\n                  {/* <td>\n                    <div className=\"flex items-center gap-2\">\n                      <button\n                        title={\n                          props.thisDistrict &&\n                          props.thisDistrict._id === district._id\n                            ? \"Close Centers\"\n                            : \"View Centers\"\n                        }\n                        className={`${\n                          props.thisDistrict &&\n                          props.thisDistrict._id === district._id\n                            ? \"bg-gray-500 hover:bg-gray-600\"\n                            : \"bg-gray-400 hover:bg-gray-500\"\n                        } p-2 rounded-full shadow-md flex justify-center items-center focus:outline-none`}\n                        onClick={() =>\n                          !props.thisDistrict ||\n                          props.thisDistrict._id !== district._id\n                            ? props.setThisDistrict(district)\n                            : props.setThisDistrict(null)\n                        }\n                      >\n                        {props.thisDistrict &&\n                        props.thisDistrict._id === district._id ? (\n                          <IoMdEyeOff className=\"text-white w-4 h-4\" />\n                        ) : (\n                          <IoMdEye className=\"text-white w-4 h-4\" />\n                        )}\n                      </button>\n                      <button\n                        title=\"Update district\"\n                        className=\"bg-blue-500 hover:bg-blue-600 p-2 rounded-full shadow-md flex justify-center items-center focus:outline-none\"\n                        onClick={() => {\n                          props.setThisDistrict(district);\n                          setDistrictName(district.district_name);\n                          setDistrictCode(district.district_code);\n                          props.setActionTypes(\"UPDATE_DISTRICT\");\n                        }}\n                        disabled={\n                          props.loadingRequest || props.actionTypes !== null\n                        }\n                      >\n                        <MdCreate className=\"text-white w-4 h-4\" />\n                      </button>\n                      <button\n                        title=\"Delete Sub-Category\"\n                        className=\"bg-red-500 hover:bg-red-600 p-2 rounded-full shadow-md flex justify-center items-center focus:outline-none\"\n                        onClick={() => handleDelete(district._id)}\n                        disabled={props.loadingRequest}\n                      >\n                        <MdClear className=\"text-white w-4 h-4\" />\n                      </button>\n                    </div>\n                  </td> */}\n                </tr>\n              ))}\n            </tbody>\n          </table>\n        </div>\n      ) : (\n        <NoResult\n          theme={NoResultThemes.Dark}\n          value={\"No district found!\"}\n          component={\n            <div className=\"w-full mt-2 flex flex-row items-center justify-center\">\n              <ul className=\"text-sm py-2 text-blue-600 font-bold flex flex-row gap-2\">\n                <li\n                  onClick={() => props.setActionTypes(\"CREATE_DISTRICT\")}\n                  className=\"underline text-gray-500 cursor-pointer\"\n                >\n                  Add district\n                </li>\n              </ul>\n            </div>\n          }\n        />\n      )}\n\n      {/* modal for creating new categories or sub category */}\n      {props.actionTypes &&\n        (props.actionTypes === \"CREATE_DISTRICT\" ||\n          props.actionTypes === \"UPDATE_DISTRICT\") && (\n          <Modal\n            backDrop={true}\n            theme={Themes.default}\n            close={(): void => {\n              props.setActionTypes(null);\n              setDistrictName(\"\");\n              setDistrictCode(10);\n              setError(null);\n            }}\n            displayClose={false}\n            backDropClose={false}\n            title={\n              <div className=\"flex items-center space-x-5\">\n                <div className=\"block pl-2 font-semibold text-xl self-start text-gray-700\">\n                  {/* <p className=\"text-base text-gray-500 font-medium\">\n                    You are{\" \"}\n                    {actionType === \"CREATE_SUB\" || \"CREATE_CAT\"\n                      ? \"creating\"\n                      : \"updating\"}\n                  </p> */}\n                  <h2 className=\"uppercase text-back\">\n                    {props.actionTypes === \"CREATE_DISTRICT\"\n                      ? \"CREATING NEW DISTRICT\"\n                      : props.actionTypes === \"UPDATE_DISTRICT\" &&\n                        \"UPDATING EXISTING DISTRICT\"}\n                  </h2>\n                </div>\n              </div>\n            }\n            widthSizeClass={ModalSize.medium}\n            padding={{ title: true, body: false, footer: false }}\n          >\n            <div className=\"mx-5 mb-4\">\n              <div className=\"py-2 text-base leading-6 space-y-4 text-gray-700 sm:text-lg sm:leading-7\">\n                <div className=\"flex flex-col\">\n                  <label>District name</label>\n                  <input\n                    type=\"text\"\n                    className={`bg-white py-1 px-2 border-2 ${\n                      error && error.element === \"district_name\"\n                        ? \"border-red-700\"\n                        : \"border-gray-700\"\n                    } rounded focus:outline-none focus:bg-gray-100`}\n                    onChange={(e) => {\n                      error &&\n                        error.element === \"district_name\" &&\n                        setError(null);\n                      setDistrictName(e.target.value);\n                    }}\n                    value={districtName}\n                    disabled={props.loadingRequest}\n                  />\n                  {error && error.element === \"district_name\" && (\n                    <span className=\"text-red-700\">{error.msg}</span>\n                  )}\n                </div>\n                <div className=\"flex flex-col\">\n                  <label>District code</label>\n                  <input\n                    type=\"number\"\n                    className={`bg-white py-1 px-2 border-2 ${\n                      error && error.element === \"district_code\"\n                        ? \"border-red-700\"\n                        : \"border-gray-700\"\n                    } rounded focus:outline-none focus:bg-gray-100`}\n                    onChange={(e) => {\n                      error &&\n                        error.element === \"district_code\" &&\n                        setError(null);\n                      setDistrictCode(Number(e.target.value));\n                    }}\n                    value={districtCode}\n                    disabled={props.loadingRequest}\n                  />\n                  {error && error.element === \"district_code\" && (\n                    <span className=\"text-red-700\">{error.msg}</span>\n                  )}\n                </div>\n              </div>\n              <div className=\"pt-4 flex justify-between\">\n                <button\n                  onClick={() => {\n                    props.setActionTypes(null);\n                    setDistrictName(\"\");\n                    setDistrictCode(10);\n                    setError(null);\n                  }}\n                  className={`btn bg-gray-400 text-white hover:bg-gray-600`}\n                  type=\"button\"\n                  disabled={props.loadingRequest}\n                >\n                  Exit\n                </button>\n                <button\n                  className=\"btn bg-primary text-white hover:bg-blue-600\"\n                  type=\"button\"\n                  onClick={() => handleSubmit()}\n                  disabled={props.loadingRequest}\n                >\n                  {props.loadingRequest ? \"Loading...\" : \"Save\"}\n                </button>\n              </div>\n            </div>\n          </Modal>\n        )}\n      {/* end modal for creating new categories or sub category */}\n    </div>\n  );\n};\n\nexport default React.memo(connect(null, {\n  FC_CreateDistrict,\n  FC_UpdateDistrict,\n  FC_DeleteDistrict,\n  PushPopupAlert,\n})(ViewDistrict));\n","import React, { useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { IoMdEye, IoMdEyeOff } from \"react-icons/io\";\nimport {\n  FC_CreateProvince,\n  FC_DeleteProvince,\n  FC_UpdateProvince,\n} from \"../../actions/location\";\nimport axios from \"axios\";\nimport { API } from \"../../utils/api\";\nimport {\n  DistrictInterface,\n  RoomLocationInterface,\n} from \"../../shared/interfaces\";\nimport { PushPopupAlert } from \"../../actions/system\";\nimport { PopupAlertData } from \"../../components/Alert/Popup\";\nimport { PopupAlertTheme } from \"../../interfaces/popupAlert\";\nimport { errorToText } from \"../../utils/errors\";\nimport Modal, { ModalSize, Themes } from \"../../components/Modal/Modal\";\nimport NoResult, { NoResultThemes } from \"../../components/NoResult/NoResult\";\nimport { isEmptyOrSpaces } from \"../../shared/dataTest\";\n\ninterface AppProps {\n  thisProvince: RoomLocationInterface | null;\n  thisDistrict: DistrictInterface | null;\n  loadingRequest: boolean;\n  locations: RoomLocationInterface[];\n  actionTypes:\n    | \"CREATE_PROVINCE\"\n    | \"UPDATE_PROVINCE\"\n    | \"CREATE_DISTRICT\"\n    | \"UPDATE_DISTRICT\"\n    | \"CREATE_SECTOR\"\n    | \"UPDATE_SECTOR\"\n    | null;\n  setLoadingRequest: React.Dispatch<React.SetStateAction<boolean>>;\n  setThisProvince: React.Dispatch<\n    React.SetStateAction<RoomLocationInterface | null>\n  >;\n  setActionTypes: React.Dispatch<\n    React.SetStateAction<\n      | \"CREATE_PROVINCE\"\n      | \"UPDATE_PROVINCE\"\n      | \"CREATE_DISTRICT\"\n      | \"UPDATE_DISTRICT\"\n      | \"CREATE_SECTOR\"\n      | \"UPDATE_SECTOR\"\n      | null\n    >\n  >;\n  FC_CreateProvince: Function;\n  FC_UpdateProvince: Function;\n  FC_DeleteProvince: Function;\n  PushPopupAlert: (alert: PopupAlertData) => void;\n}\n\nconst ViewProvince: React.FC<AppProps> = (props) => {\n  const [provinceTitle, setProvinceTitle] = useState<string>(\"\");\n  const [provinceCode, setProvinceCode] = useState<number>(0);\n  const [error, setError] = useState<{ element: string; msg: string } | null>(\n    null\n  );\n\n  const handleSubmit = async () => {\n    if (isEmptyOrSpaces(provinceTitle)) {\n      return setError({\n        element: \"province_title\",\n        msg: \"Title of Province is required\",\n      });\n    }\n\n    if (provinceCode <= 0) {\n      return setError({\n        element: \"province_code\",\n        msg: \"Code of Province is required\",\n      });\n    }\n\n    props.setLoadingRequest(true);\n    try {\n      let res;\n      if (props.actionTypes === \"CREATE_PROVINCE\") {\n        res = await axios.post<{ data: RoomLocationInterface }>(\n          `${API.APPLICATION}/province`,\n          {\n            province_name: provinceTitle,\n            province_code: provinceCode,\n            districts: [],\n          }\n        );\n\n        if (res.data) {\n          props.FC_CreateProvince(res.data.data);\n          props.PushPopupAlert({\n            title: \"New Province created successfully\",\n            theme: PopupAlertTheme.success,\n          });\n          props.setLoadingRequest(false);\n          props.setActionTypes(null);\n          setProvinceTitle(\"\");\n        }\n      } else if (\n        props.thisProvince &&\n        props.actionTypes === \"UPDATE_PROVINCE\"\n      ) {\n        const districts: string[] = props.thisProvince.districts.map(\n          (district) => district._id\n        );\n        res = await axios.patch<{ updated: RoomLocationInterface }>(\n          `${API.APPLICATION}/province`,\n          {\n            province_id: props.thisProvince._id,\n            province_name: provinceTitle,\n            province_code: provinceCode,\n            districts,\n          }\n        );\n        if (res.data) {\n          console.log({ res: res.data.updated });\n          props.FC_UpdateProvince(res.data.updated);\n          props.PushPopupAlert({\n            title: \"Province updated successfully\",\n            theme: PopupAlertTheme.success,\n          });\n          props.setLoadingRequest(false);\n          props.setActionTypes(null);\n          setProvinceTitle(\"\");\n          props.setThisProvince(null);\n        }\n      }\n    } catch (error) {\n      console.error({ province_error: error });\n      props.PushPopupAlert({\n        title: errorToText(error),\n        theme: PopupAlertTheme.danger,\n      });\n      props.setLoadingRequest(false);\n    }\n  };\n\n  // const handleDelete = async (provinceId: string) => {\n  //   try {\n  //     const res = await axios.delete<RoomLocationInterface>(\n  //       `${API.APPLICATION}/province/${provinceId}`\n  //     );\n\n  //     if (res.data) {\n  //       console.log({ res });\n  //       props.FC_DeleteProvince(provinceId);\n  //       props.PushPopupAlert({\n  //         title: \"Province deleted successfully\",\n  //         theme: PopupAlertTheme.success,\n  //       });\n  //       props.setLoadingRequest(false);\n  //       props.setActionTypes(null);\n  //     }\n  //   } catch (error) {\n  //     console.log({ province_error: error });\n  //     props.PushPopupAlert({\n  //       title: errorToText(error),\n  //       theme: PopupAlertTheme.danger,\n  //     });\n  //     props.setLoadingRequest(false);\n  //   }\n  // };\n\n  return (\n    <div className={`w-full p-2`}>\n      {props.locations.length > 0 ? (\n        props.locations.map((province, index) => (\n          <div\n            key={index + province._id}\n            className=\"flex justify-between items-center p-2 mb-3 rounded border border-gray-100 shadow\"\n          >\n            <div className=\"flex items-center\">\n              <div className=\"ml-2\">\n                <div className=\"text-xl font-semibold text-gray-600\">\n                  {province.province_name}\n                </div>\n                <div className=\"text-sm font-light text-gray-500\">\n                  {province.districts.length > 0\n                    ? province.districts.length + \"District(s)\"\n                    : null}\n                </div>\n              </div>\n            </div>\n            <div className=\"flex items-center gap-2\">\n              <button\n                title={\n                  props.thisProvince &&\n                  props.thisProvince._id === province._id &&\n                  props.actionTypes !== \"UPDATE_PROVINCE\"\n                    ? \"Close Districts\"\n                    : \"View Districts\"\n                }\n                className={`${\n                  props.thisProvince &&\n                  props.thisProvince._id === province._id &&\n                  props.actionTypes !== \"UPDATE_PROVINCE\"\n                    ? \"bg-gray-500 hover:bg-gray-600\"\n                    : \"bg-gray-400 hover:bg-gray-500\"\n                } p-2 rounded-full shadow-md flex justify-center items-center focus:outline-none`}\n                onClick={() => {\n                  !props.thisProvince || props.thisProvince._id !== province._id\n                    ? props.setThisProvince(province)\n                    : props.setThisProvince(null);\n                  setProvinceTitle(\"\");\n                  props.setActionTypes(null);\n                }}\n              >\n                {props.thisProvince &&\n                props.thisProvince._id === province._id &&\n                props.actionTypes !== \"UPDATE_PROVINCE\" ? (\n                  <IoMdEyeOff className=\"text-white w-4 h-4\" />\n                ) : (\n                  <IoMdEye className=\"text-white w-4 h-4\" />\n                )}\n              </button>\n              {/* <button\n                title=\"Update Province\"\n                className=\"bg-blue-500 hover:bg-blue-600 p-2 rounded-full shadow-md flex justify-center items-center focus:outline-none\"\n                onClick={() => {\n                  props.setThisProvince(province);\n                  setProvinceTitle(province.province_name);\n                  setProvinceCode(province.province_code);\n                  props.setActionTypes(\"UPDATE_PROVINCE\");\n                }}\n                disabled={props.loadingRequest || props.actionTypes !== null}\n              >\n                <MdCreate className=\"text-white w-4 h-4\" />\n              </button>\n              <button\n                title=\"Delete Sub-Category\"\n                className=\"bg-red-500 hover:bg-red-600 p-2 rounded-full shadow-md flex justify-center items-center focus:outline-none\"\n                onClick={() => handleDelete(province._id)}\n                disabled={props.loadingRequest || props.actionTypes !== null}\n              >\n                <MdClear className=\"text-white w-4 h-4\" />\n              </button> */}\n            </div>\n          </div>\n        ))\n      ) : (\n        <NoResult\n          theme={NoResultThemes.Dark}\n          value=\"No province found!\"\n          component={\n            <div className=\"w-full mt-2 flex flex-row items-center justify-center\">\n              <ul className=\"text-sm py-2 text-blue-600 font-bold flex flex-row gap-2\">\n                <li\n                  onClick={() => props.setActionTypes(\"CREATE_PROVINCE\")}\n                  className=\"underline text-gray-500 cursor-pointer\"\n                >\n                  Add province\n                </li>\n              </ul>\n            </div>\n          }\n        />\n      )}\n\n      {/* modal for creating new categories or sub category */}\n      {props.actionTypes &&\n        (props.actionTypes === \"CREATE_PROVINCE\" ||\n          props.actionTypes === \"UPDATE_PROVINCE\") && (\n          <Modal\n            backDrop={true}\n            theme={Themes.default}\n            close={(): void => {\n              props.setActionTypes(null);\n              setProvinceTitle(\"\");\n              setProvinceCode(0);\n              setError(null);\n            }}\n            displayClose={false}\n            backDropClose={false}\n            title={\n              <div className=\"flex items-center space-x-5\">\n                <div className=\"block pl-2 font-semibold text-xl self-start text-gray-700\">\n                  <h2 className=\"uppercase text-back\">\n                    {props.actionTypes === \"CREATE_PROVINCE\"\n                      ? \"CREATING NEW PROVINCE\"\n                      : props.actionTypes === \"UPDATE_PROVINCE\" &&\n                        \"UPDATING EXISTING PROVINCE\"}\n                  </h2>\n                </div>\n              </div>\n            }\n            widthSizeClass={ModalSize.medium}\n            padding={{ title: true, body: false, footer: false }}\n          >\n            <div className=\"mx-5 mb-4\">\n              <div className=\"py-2 text-base leading-6 space-y-4 text-gray-700 sm:text-lg sm:leading-7\">\n                <div className=\"flex flex-col\">\n                  <label>Province name</label>\n                  <input\n                    type=\"text\"\n                    className={`bg-white py-1 px-2 border-2 ${\n                      error && error.element === \"province_title\"\n                        ? \"border-red-700\"\n                        : \"border-gray-700\"\n                    } rounded focus:outline-none focus:bg-gray-100`}\n                    onChange={(e) => {\n                      error &&\n                        error.element === \"province_title\" &&\n                        setError(null);\n                      setProvinceTitle(e.target.value);\n                    }}\n                    value={provinceTitle}\n                    disabled={props.loadingRequest}\n                  />\n                  {error && error.element === \"province_title\" && (\n                    <span className=\"text-red-700\">{error.msg}</span>\n                  )}\n                </div>\n                <div className=\"flex flex-col\">\n                  <label>Province code {props.loadingRequest && \"TRUE\"}</label>\n                  <input\n                    type=\"number\"\n                    className={`bg-white py-1 px-2 border-2 ${\n                      error && error.element === \"province_code\"\n                        ? \"border-red-700\"\n                        : \"border-gray-700\"\n                    } rounded focus:outline-none focus:bg-gray-100`}\n                    onChange={(e) => {\n                      error &&\n                        error.element === \"province_code\" &&\n                        setError(null);\n                      setProvinceCode(Number(e.target.value));\n                    }}\n                    value={provinceCode}\n                    disabled={props.loadingRequest}\n                  />\n                  {error && error.element === \"province_code\" && (\n                    <span className=\"text-red-700\">{error.msg}</span>\n                  )}\n                </div>\n              </div>\n              <div className=\"pt-4 flex justify-between\">\n                <button\n                  onClick={() => {\n                    props.setActionTypes(null);\n                    setProvinceTitle(\"\");\n                    setProvinceCode(0);\n                    setError(null);\n                  }}\n                  className={`btn bg-gray-400 text-white hover:bg-gray-600`}\n                  type=\"button\"\n                  disabled={props.loadingRequest}\n                >\n                  Exit\n                </button>\n                <button\n                  className=\"btn bg-primary text-white hover:bg-blue-600\"\n                  type=\"button\"\n                  onClick={() => handleSubmit()}\n                  disabled={props.loadingRequest}\n                >\n                  {props.loadingRequest ? \"Loading...\" : \"Save\"}\n                </button>\n              </div>\n            </div>\n          </Modal>\n        )}\n      {/* end modal for creating new categories or sub category */}\n    </div>\n  );\n};\n\nexport default React.memo(connect(null, {\n  FC_CreateProvince,\n  FC_UpdateProvince,\n  FC_DeleteProvince,\n  PushPopupAlert,\n})(ViewProvince));\n","import React, { useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { MdClear, MdCreate } from \"react-icons/md\";\nimport {\n  FC_CreateSector,\n  FC_DeleteSector,\n  FC_UpdateSector,\n} from \"../../actions/location\";\nimport axios from \"axios\";\nimport { API } from \"../../utils/api\";\nimport { DistrictInterface, SectorInterface } from \"../../shared/interfaces\";\nimport { PushPopupAlert } from \"../../actions/system\";\nimport { PopupAlertData } from \"../../components/Alert/Popup\";\nimport { PopupAlertTheme } from \"../../interfaces/popupAlert\";\nimport { errorToText } from \"../../utils/errors\";\nimport NoResult, { NoResultThemes } from \"../../components/NoResult/NoResult\";\nimport Modal, { ModalSize, Themes } from \"../../components/Modal/Modal\";\nimport { isEmptyOrSpaces } from \"../../shared/dataTest\";\n\ninterface AppProps {\n  thisDistrict: DistrictInterface;\n  thisSector: SectorInterface | null;\n  loadingRequest: boolean;\n  actionTypes:\n    | \"CREATE_PROVINCE\"\n    | \"UPDATE_PROVINCE\"\n    | \"CREATE_DISTRICT\"\n    | \"UPDATE_DISTRICT\"\n    | \"CREATE_SECTOR\"\n    | \"UPDATE_SECTOR\"\n    | null;\n  setLoadingRequest: React.Dispatch<React.SetStateAction<boolean>>;\n  setThisSector: React.Dispatch<React.SetStateAction<SectorInterface | null>>;\n  setActionTypes: React.Dispatch<\n    React.SetStateAction<\n      | \"CREATE_PROVINCE\"\n      | \"UPDATE_PROVINCE\"\n      | \"CREATE_DISTRICT\"\n      | \"UPDATE_DISTRICT\"\n      | \"CREATE_SECTOR\"\n      | \"UPDATE_SECTOR\"\n      | null\n    >\n  >;\n  FC_CreateSector: Function;\n  FC_UpdateSector: Function;\n  FC_DeleteSector: Function;\n  PushPopupAlert: (alert: PopupAlertData) => void;\n}\n\nconst ViewSectors: React.FC<AppProps> = (props) => {\n  const [sectorName, setSectorName] = useState<string>(\"\");\n  const [sectorCode, setSectorCode] = useState<number>(0);\n  const [error, setError] = useState<{ element: string; msg: string } | null>(\n    null\n  );\n\n  const handleSubmit = async () => {\n    if (isEmptyOrSpaces(sectorName)) {\n      return setError({\n        element: \"sector_name\",\n        msg: \"Sector name is required\",\n      });\n    }\n\n    if (sectorCode <= 0) {\n      return setError({\n        element: \"sector_code\",\n        msg: \"Invalid sector code, must be \",\n      });\n    }\n\n    props.setLoadingRequest(true);\n    try {\n      let res;\n      if (props.actionTypes === \"CREATE_SECTOR\") {\n        res = await axios.post<{ data: SectorInterface }>(\n          `${API.APPLICATION}/sector`,\n          {\n            district_id: props.thisDistrict._id,\n            district_code: props.thisDistrict.district_code,\n            sector_name: sectorName,\n            sector_code: sectorCode,\n          }\n        );\n        if (res.data) {\n          console.log({\n            district_id: props.thisDistrict._id,\n            data: res.data.data,\n            res,\n          });\n          props.FC_CreateSector({\n            province_id: props.thisDistrict.province_id,\n            district_id: props.thisDistrict._id,\n            data: {\n              district_id: res.data.data.district_id,\n              district_code: res.data.data.district_code,\n              sector_name: res.data.data.sector_name,\n              sector_code: res.data.data.sector_code,\n              sector_id: res.data.data.sector_id,\n            },\n          });\n          props.PushPopupAlert({\n            title: \"New sector created successfully\",\n            theme: PopupAlertTheme.success,\n          });\n          props.setLoadingRequest(false);\n          props.setActionTypes(null);\n          setSectorName(\"\");\n        }\n      } else if (props.thisSector && props.actionTypes === \"UPDATE_SECTOR\") {\n        res = await axios.patch<{ data: DistrictInterface }>(\n          `${API.APPLICATION}/sector`,\n          {\n            district_id: props.thisSector.district_id,\n            district_code: props.thisDistrict.district_code,\n            sector_id: props.thisSector.sector_id,\n            sector_name: sectorName,\n            sector_code: sectorCode,\n          }\n        );\n        if (res.data) {\n          props.FC_UpdateSector({\n            province_id: props.thisDistrict.province_id,\n            district_id: props.thisSector.district_id,\n            sector_id: props.thisSector.sector_id,\n            sector_name: sectorName,\n            sector_code: sectorCode,\n          });\n          props.PushPopupAlert({\n            title: \"Sector updated successfully\",\n            theme: PopupAlertTheme.success,\n          });\n          props.setLoadingRequest(false);\n          props.setActionTypes(null);\n          setSectorName(\"\");\n          props.setThisSector(null);\n        }\n      }\n    } catch (error) {\n      console.log({ sector_error: error });\n      props.PushPopupAlert({\n        title: errorToText(error),\n        theme: PopupAlertTheme.danger,\n      });\n      props.setLoadingRequest(false);\n    }\n  };\n\n  const handleDelete = async (sectorId: string) => {\n    try {\n      const res = await axios.delete<SectorInterface>(\n        `${API.APPLICATION}/sector/${sectorId}`\n      );\n\n      if (res.data) {\n        props.FC_DeleteSector({\n          province_id: props.thisDistrict.province_id,\n          district_id: props.thisDistrict._id,\n          sector_id: sectorId,\n        });\n        props.PushPopupAlert({\n          title: \"Sector deleted successfully\",\n          theme: PopupAlertTheme.success,\n        });\n        props.setLoadingRequest(false);\n        props.setActionTypes(null);\n      }\n    } catch (error) {\n      console.log({ district_error: error });\n      props.PushPopupAlert({\n        title: errorToText(error),\n        theme: PopupAlertTheme.danger,\n      });\n      props.setLoadingRequest(false);\n    }\n  };\n\n  return (\n    <div className={`w-full p-2`}>\n      {props.thisDistrict.sectors && props.thisDistrict.sectors.length > 0 ? (\n        <div className=\"rounded border border-gray-100 shadow-sm animate__animated animate__fadeIn\">\n          <table className=\"w-full z-0\">\n            <thead className=\"bg-gray-50\">\n              <tr className=\"text-left\">\n                <th className=\"px-3 py-3\">#</th>\n                <th>Sector name</th>\n                <th>Sector code</th>\n                <th>Status</th>\n              </tr>\n            </thead>\n            <tbody className=\"text-sm\">\n              {props.thisDistrict.sectors.map((sector, index) => (\n                <tr\n                  key={index + sector.district_id}\n                  className={`text-left border-b border-gray-50`}\n                >\n                  <td className=\"px-3 py-1\">{index + 1}</td>\n                  <td>{sector.sector_name}</td>\n                  <td>{sector.sector_name}</td>\n                  <td>\n                    <div className=\"flex items-center gap-2\">\n                      <button\n                        title=\"Update sector\"\n                        className=\"bg-blue-500 hover:bg-blue-600 p-2 rounded-full shadow-md flex justify-center items-center focus:outline-none\"\n                        onClick={() => {\n                          props.setThisSector(sector);\n                          setSectorName(sector.sector_name);\n                          setSectorCode(sector.sector_code);\n                          props.setActionTypes(\"UPDATE_SECTOR\");\n                        }}\n                        disabled={\n                          props.loadingRequest || props.actionTypes !== null\n                        }\n                      >\n                        <MdCreate className=\"text-white w-4 h-4\" />\n                      </button>\n                      <button\n                        title=\"Delete sector\"\n                        className=\"bg-red-500 hover:bg-red-600 p-2 rounded-full shadow-md flex justify-center items-center focus:outline-none\"\n                        onClick={() => handleDelete(sector.sector_id)}\n                        disabled={props.loadingRequest}\n                      >\n                        <MdClear className=\"text-white w-4 h-4\" />\n                      </button>\n                    </div>\n                  </td>\n                </tr>\n              ))}\n            </tbody>\n          </table>\n        </div>\n      ) : (\n        <NoResult\n          theme={NoResultThemes.Dark}\n          value={\"No sector found!\"}\n          component={\n            <div className=\"w-full mt-2 flex flex-row items-center justify-center\">\n              <ul className=\"text-sm py-2 text-blue-600 font-bold flex flex-row gap-2\">\n                <li\n                  onClick={() => props.setActionTypes(\"CREATE_SECTOR\")}\n                  className=\"underline text-gray-500 cursor-pointer\"\n                >\n                  Add sector\n                </li>\n              </ul>\n            </div>\n          }\n        />\n      )}\n\n      {/* modal for creating new categories or sub category */}\n      {props.actionTypes &&\n        (props.actionTypes === \"CREATE_SECTOR\" ||\n          props.actionTypes === \"UPDATE_SECTOR\") && (\n          <Modal\n            backDrop={true}\n            theme={Themes.default}\n            close={(): void => {\n              props.setActionTypes(null);\n              setSectorName(\"\");\n              setSectorCode(0);\n              setError(null);\n            }}\n            displayClose={false}\n            backDropClose={false}\n            title={\n              <div className=\"flex items-center space-x-5\">\n                <div className=\"block pl-2 font-semibold text-xl self-start text-gray-700\">\n                  {/* <p className=\"text-base text-gray-500 font-medium\">\n                    You are{\" \"}\n                    {actionType === \"CREATE_SUB\" || \"CREATE_CAT\"\n                      ? \"creating\"\n                      : \"updating\"}\n                  </p> */}\n                  <h2 className=\"uppercase text-back\">\n                    {props.actionTypes === \"CREATE_SECTOR\"\n                      ? \"CREATING NEW SECTOR\"\n                      : props.actionTypes === \"UPDATE_SECTOR\" &&\n                        \"UPDATING EXISTING SECTOR\"}\n                  </h2>\n                </div>\n              </div>\n            }\n            widthSizeClass={ModalSize.medium}\n            padding={{ title: true, body: false, footer: false }}\n          >\n            <div className=\"w-full px-5 mb-5\">\n              <div className=\"py-3 text-base leading-6 space-y-4 text-gray-700 sm:text-lg sm:leading-7\">\n                <div className=\"flex flex-col\">\n                  <label>Sector name</label>\n                  <input\n                    type=\"text\"\n                    className={`bg-white py-1 px-2 border-2 ${\n                      error && error.element === \"sector_name\"\n                        ? \"border-red-700\"\n                        : \"border-gray-700\"\n                    } rounded focus:outline-none focus:bg-gray-100`}\n                    onChange={(e) => {\n                      error &&\n                        error.element === \"sector_name\" &&\n                        setError(null);\n                      setSectorName(e.target.value);\n                    }}\n                    value={sectorName}\n                    disabled={props.loadingRequest}\n                  />\n                  {error && error.element === \"sector_name\" && (\n                    <span className=\"text-red-700\">{error.msg}</span>\n                  )}\n                </div>\n                <div className=\"flex flex-col\">\n                  <label>Sector code</label>\n                  <input\n                    type=\"number\"\n                    className={`bg-white py-1 px-2 border-2 ${\n                      error && error.element === \"sector_code\"\n                        ? \"border-red-700\"\n                        : \"border-gray-700\"\n                    } rounded focus:outline-none focus:bg-gray-100`}\n                    onChange={(e) => {\n                      error &&\n                        error.element === \"sector_code\" &&\n                        setError(null);\n                      setSectorCode(Number(e.target.value));\n                    }}\n                    value={sectorCode}\n                    disabled={props.loadingRequest}\n                  />\n                  {error && error.element === \"sector_code\" && (\n                    <span className=\"text-red-700\">{error.msg}</span>\n                  )}\n                </div>\n              </div>\n              <div className=\"pt-4 flex justify-between\">\n                <button\n                  onClick={() => {\n                    props.setActionTypes(null);\n                    setSectorName(\"\");\n                    setSectorCode(0);\n                    setError(null);\n                  }}\n                  className={`btn bg-gray-400 text-white hover:bg-gray-600`}\n                  type=\"button\"\n                  disabled={props.loadingRequest}\n                >\n                  Exit\n                </button>\n                <button\n                  className=\"btn bg-primary text-white hover:bg-blue-600\"\n                  type=\"button\"\n                  onClick={() => handleSubmit()}\n                  disabled={props.loadingRequest}\n                >\n                  {props.loadingRequest ? \"Loading...\" : \"Save\"}\n                </button>\n              </div>\n            </div>\n          </Modal>\n        )}\n      {/* end modal for creating new categories or sub category */}\n    </div>\n  );\n};\n\nexport default React.memo(\n  connect(null, {\n    FC_CreateSector,\n    FC_UpdateSector,\n    FC_DeleteSector,\n    PushPopupAlert,\n  })(ViewSectors)\n);\n","import React, { Fragment, useEffect, useState } from \"react\";\nimport { AiOutlineFilter } from \"react-icons/ai\";\nimport { BsCaretRightFill } from \"react-icons/bs\";\nimport { connect } from \"react-redux\";\nimport { getAllRoom } from \"../../actions/location\";\nimport { StoreState } from \"../../reducers\";\nimport {\n  DistrictInterface,\n  LocationRoomTableInterface,\n  RoomLocationInterface,\n  SectorInterface,\n} from \"../../shared/interfaces\";\nimport { LocationsInArray } from \"../UserManagement/UserList\";\nimport ViewDistricts from \"./ViewDistricts\";\nimport ViewProvince from \"./ViewProvince\";\nimport ViewSectors from \"./ViewSectors\";\n\nexport const distinctDistrict = (\n  rooms: RoomLocationInterface[],\n  province_id?: string\n): LocationRoomTableInterface[] => {\n  let ids: string[] = [],\n    result: LocationRoomTableInterface[] = [];\n\n  LocationsInArray(rooms).forEach((element) => {\n    if (!ids.includes(element.district_id)) {\n      if (province_id && element.province_id === province_id) {\n        ids.push(element.district_id);\n        result.push(element);\n      } else if (province_id === undefined) {\n        ids.push(element.district_id);\n        result.push(element);\n      }\n    }\n  });\n\n  return result;\n};\n\nexport const distinctCenter = (\n  rooms: RoomLocationInterface[],\n  district_id: string\n): LocationRoomTableInterface[] => {\n  let ids: string[] = [],\n    result: LocationRoomTableInterface[] = [];\n\n  LocationsInArray(rooms).forEach((element) => {\n    if (\n      !ids.includes(element.center_id) &&\n      element.district_id === district_id\n    ) {\n      ids.push(element.center_id);\n      result.push(element);\n    }\n  });\n  return result;\n};\n\nexport const distinctRoom = (\n  rooms: RoomLocationInterface[],\n  center_id: string\n): LocationRoomTableInterface[] => {\n  let ids: string[] = [],\n    result: LocationRoomTableInterface[] = [];\n\n  LocationsInArray(rooms).forEach((element) => {\n    if (!ids.includes(element.room_id) && element.center_id === center_id) {\n      ids.push(element.room_id);\n      result.push(element);\n    }\n  });\n  return result;\n};\n\ninterface AppProps {\n  locations: RoomLocationInterface[];\n  getAllRoom: Function;\n}\n\nconst _Locations: React.FC<AppProps> = (props) => {\n  const [actionTypes, setActionTypes] = useState<\n    | \"CREATE_PROVINCE\"\n    | \"UPDATE_PROVINCE\"\n    | \"CREATE_DISTRICT\"\n    | \"UPDATE_DISTRICT\"\n    | \"CREATE_SECTOR\"\n    | \"UPDATE_SECTOR\"\n    | null\n  >(null);\n  const [thisProvince, setThisProvince] =\n    useState<RoomLocationInterface | null>(null);\n  const [thisDistrict, setThisDistrict] = useState<DistrictInterface | null>(\n    null\n  );\n  const [thisSector, setThisSector] = useState<SectorInterface | null>(null);\n  const [loading, setLoading] = useState<boolean>(true);\n  const [loadingRequest, setLoadingRequest] = useState<boolean>(false);\n\n  useEffect(() => {\n    if (!props.locations.length && loading) {\n      props.getAllRoom((status: boolean, msg: string) => {\n        setLoading(status);\n        if (!status && msg.length > 0) {\n          console.log(msg);\n        }\n      });\n    } else if (loading) {\n      setLoading(false);\n    }\n  }, [loading, props]);\n\n  if (loading === true) {\n    return (\n      <div className=\"text-center mt-7 font-bold text-4xl text-gray-400 animate-pulse\">\n        Loading locations...\n      </div>\n    );\n  }\n\n  const displayTitle = () => {\n    if (\n      (!thisSector ||\n        (thisSector &&\n          (actionTypes === \"CREATE_SECTOR\" ||\n            actionTypes === \"UPDATE_SECTOR\"))) &&\n      thisDistrict &&\n      actionTypes !== \"CREATE_DISTRICT\" &&\n      actionTypes !== \"UPDATE_DISTRICT\"\n    ) {\n      return (\n        <div className=\"flex items-center gap-1\">\n          <span\n            className=\"cursor-pointer uppercase text-xl font-semibold text-gray-800\"\n            onClick={() => {\n              setThisProvince(null);\n            }}\n          >\n            province\n          </span>\n          <span>/</span>\n          <span\n            className=\"cursor-pointer uppercase text-xl font-semibold text-gray-800\"\n            onClick={() => {\n              setThisDistrict(null);\n            }}\n          >\n            district\n          </span>\n          <span>/</span>\n          <span className=\"text-xl text-gray-800\">\n            {thisDistrict.district_name}\n          </span>\n        </div>\n      );\n    } else if (\n      (!thisDistrict ||\n        (thisDistrict &&\n          (actionTypes === \"CREATE_DISTRICT\" ||\n            actionTypes === \"UPDATE_DISTRICT\"))) &&\n      thisProvince\n    ) {\n      return (\n        <div className=\"flex items-center gap-2\">\n          <span\n            className=\"cursor-pointer uppercase text-xl font-semibold text-gray-800\"\n            onClick={() => {\n              setThisProvince(null);\n            }}\n          >\n            province\n          </span>\n          <span>/</span>\n          <span className=\"text-xl text-gray-800\">\n            {thisProvince.province_name}\n          </span>\n        </div>\n      );\n    }\n\n    return (\n      <div className=\"flex items-center gap-1\">\n        <span className=\"uppercase text-xl font-semibold text-gray-800\">\n          province\n        </span>\n        <span>/</span>\n      </div>\n    );\n  };\n\n  return (\n    <Fragment>\n      <div className=\"w-full my-5\">\n        {/* header title */}\n        <div className=\"flex justify-between p-2 gap-1\">\n          <div className=\"flex flex-col\">\n            <span className=\"text-blue-600 text-2xl md:text-2xl lg:text-3xl font-bold\">\n              Locations Management\n            </span>\n\n            <div className=\"flex flex-row items-center md:gap-3 gap-2 mt-1\">\n              <AiOutlineFilter className=\"text-xl\" />\n              <div className=\"flex flex-row items-center gap-1\">\n                {thisProvince && (\n                  <span className=\"text-gray-700 text-base font-bold\">\n                    {thisProvince.province_name}\n                  </span>\n                )}\n                {thisDistrict && (\n                  <div className=\"flex flex-row items-center gap-1\">\n                    <BsCaretRightFill />\n                    <span className=\"text-blue-600 text-base font-bold underline\">\n                      {thisDistrict.district_name} district\n                    </span>\n                  </div>\n                )}\n              </div>\n            </div>\n          </div>\n        </div>\n        {/* end header title */}\n\n        <div className=\"w-full bg-white\">\n          <div className=\"border-b px-2 py-3 flex justify-between\">\n            {displayTitle()}\n\n            {/* CREATE NEW PROVINCE =====================================*/}\n            {/* {(!thisProvince ||\n              (thisProvince &&\n                (actionTypes === \"CREATE_PROVINCE\" ||\n                  actionTypes === \"UPDATE_PROVINCE\"))) && (\n              <button\n                type=\"button\"\n                className={`btn hover:bg-blue-500 mb-1 border-2 border-blue-500 bg-white\n        hover:text-white rounded-md flex items-center font-bold text-gray-700 focus:outline-none gap-1 ${\n          loadingRequest && \"cursor-wait\"\n        } ${actionTypes !== null && \"cursor-not-allowed\"}`}\n                onClick={() => setActionTypes(\"CREATE_PROVINCE\")}\n                disabled={actionTypes !== null || loadingRequest}\n              >\n                <MdAdd className=\"inline-block mr-1 text-xl font-bold\" />\n                New Province\n              </button>\n            )} */}\n            {/* CREATE NEW DISTRICT =====================================*/}\n            {/* {(!thisDistrict ||\n              (thisDistrict &&\n                (actionTypes === \"CREATE_DISTRICT\" ||\n                  actionTypes === \"UPDATE_DISTRICT\"))) &&\n              thisProvince && (\n                <button\n                  type=\"button\"\n                  className={`btn hover:bg-blue-500 mb-1 border-2 border-blue-500 bg-white\n        hover:text-white rounded-md flex items-center font-bold text-gray-700 focus:outline-none gap-1 ${\n          loadingRequest && \"cursor-wait\"\n        } ${actionTypes !== null && \"cursor-not-allowed\"}`}\n                  onClick={() => setActionTypes(\"CREATE_DISTRICT\")}\n                  disabled={actionTypes !== null || loadingRequest}\n                >\n                  <MdAdd className=\"inline-block mr-1 text-xl font-bold\" />\n                  New District\n                </button>\n              )} */}\n\n            {/* CREATE NEW SECTOR =====================================*/}\n            {/* {(!thisSector ||\n              (thisSector &&\n                (actionTypes === \"CREATE_SECTOR\" ||\n                  actionTypes === \"UPDATE_SECTOR\"))) &&\n              thisDistrict &&\n              actionTypes !== \"CREATE_DISTRICT\" &&\n              actionTypes !== \"UPDATE_DISTRICT\" && (\n                <button\n                  type=\"button\"\n                  className={`btn hover:bg-blue-500 mb-1 border-2 border-blue-500 bg-white\n        hover:text-white rounded-md flex items-center font-bold text-gray-700 focus:outline-none gap-1 ${\n          loadingRequest && \"cursor-wait\"\n        } ${actionTypes !== null && \"cursor-not-allowed\"}`}\n                  onClick={() => setActionTypes(\"CREATE_SECTOR\")}\n                  disabled={actionTypes !== null || loadingRequest}\n                >\n                  <MdAdd className=\"inline-block mr-1 text-xl font-bold\" />\n                  New Sector\n                </button>\n              )} */}\n          </div>\n\n          {(!thisProvince ||\n            (thisProvince &&\n              (actionTypes === \"CREATE_PROVINCE\" ||\n                actionTypes === \"UPDATE_PROVINCE\"))) && (\n            <ViewProvince\n              thisProvince={thisProvince}\n              thisDistrict={thisDistrict}\n              loadingRequest={loadingRequest}\n              locations={props.locations}\n              actionTypes={actionTypes}\n              setLoadingRequest={setLoadingRequest}\n              setThisProvince={setThisProvince}\n              setActionTypes={setActionTypes}\n            />\n          )}\n\n          {(!thisDistrict ||\n            (thisDistrict &&\n              (actionTypes === \"CREATE_DISTRICT\" ||\n                actionTypes === \"UPDATE_DISTRICT\"))) &&\n            thisProvince && (\n              <ViewDistricts\n                thisDistrict={thisDistrict}\n                loadingRequest={loadingRequest}\n                actionTypes={actionTypes}\n                setLoadingRequest={setLoadingRequest}\n                setActionTypes={setActionTypes}\n                thisProvince={thisProvince}\n                setThisDistrict={setThisDistrict}\n              />\n            )}\n\n          {(!thisSector ||\n            (thisSector &&\n              (actionTypes === \"CREATE_SECTOR\" ||\n                actionTypes === \"UPDATE_SECTOR\"))) &&\n            thisDistrict &&\n            actionTypes !== \"CREATE_DISTRICT\" &&\n            actionTypes !== \"UPDATE_DISTRICT\" && (\n              <ViewSectors\n                thisDistrict={thisDistrict}\n                thisSector={thisSector}\n                loadingRequest={loadingRequest}\n                actionTypes={actionTypes}\n                setLoadingRequest={setLoadingRequest}\n                setThisSector={setThisSector}\n                setActionTypes={setActionTypes}\n              />\n            )}\n        </div>\n      </div>\n    </Fragment>\n  );\n};\n\nconst mapStateToProps = ({\n  locations,\n}: StoreState): {\n  locations: RoomLocationInterface[];\n} => {\n  return { locations: locations.roomLocation };\n};\n\nexport const Locations = React.memo(connect(mapStateToProps, {\n  getAllRoom,\n})(_Locations));\n"],"sourceRoot":""}
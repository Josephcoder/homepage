{"version":3,"sources":["shared/dataTest.tsx","components/Table/Table.tsx","actions/users.ts","actions/session.ts","components/Navigation/SideNavigation.tsx","actions/document.ts","actions/settings.ts","shared/interfaces.tsx","containers/Claimings/Candidate/ChooseReason.tsx","containers/Claimings/Candidate/ExaminationFormView.tsx","containers/Claimings/Candidate/FormPlacementList.tsx","containers/Claimings/Candidate/ClaimForm.tsx","containers/Claimings/ClaimDocView.tsx","utils/ExportToExcel.tsx","utils/mineduc.png","components/DownloadPDF/rest.tsx","components/Loading/TableLoading.tsx","containers/SessionSettings/ChooseSession.tsx","containers/Positions/ViewRequirements.tsx","containers/Claimings/Candidate/FormExamList.tsx","containers/Claimings/Candidate/ApplicationFormView.tsx","containers/SessionSettings/SessionDetails.tsx","containers/Claimings/Admin/AdminFilterByType.tsx","containers/Claimings/ClaimHeaderTitle.tsx","containers/Claimings/Candidate/DocFormView.tsx","containers/Claimings/Candidate/FormApplicationList.tsx","containers/Claimings/Candidate/FormDocumentList.tsx","containers/Claimings/Candidate/index.tsx","containers/Claimings/ClaimApplView.tsx","containers/Claimings/ClaimExamView.tsx","containers/Claimings/ClaimPlacementView.tsx","containers/Claimings/Candidate/FilterByType.tsx","containers/Claimings/Admin/AdminClaimAppView.tsx","containers/Claimings/Admin/AdminClaimExamView.tsx","containers/Claimings/Admin/AdminClaimDocView.tsx","containers/Claimings/Admin/index.tsx","containers/Admin/Claiming/ClaimingReport.tsx"],"names":["data_school","school_id","school_title","district_id","number_of_females","number_of_males","isEmptyOrSpaces","str","match","getRoleById","roles","roleId","filter","role","system_user_role_id","getInstituteById","institutes","instituteId","find","item","education_institute_id","getPositionById","positions","position_id","console","log","data","position","toTwoDigit","value","dec","Math","floor","slice","toString","substr","toAnyDigit","padding","zeroes","Array","join","capitalizeFirstLetter","charAt","toUpperCase","Table","props","table","tr","tableId","length","result","characters","charactersLength","i","random","FC_makeID","useState","totalItems","setTotalItems","totalPages","setTotalPages","currentPage","setCurrentPage","pages","setPages","pageSize","setPageSize","startIndex","setStartIndex","endIndex","setEndIndex","useEffect","pagination","tablePagination","document","getElementById","getElementsByTagName","ceil","min","_pages","from","keys","map","style","display","className","tableSize","search","searchBG","type","placeholder","onChange","e","filterType","td","rows","cols","toLowerCase","columns","textContent","innerText","indexOf","filterTable","target","disabled","loading","Number","tableClass","rounded","id","hideColumns","thColor","column","index","alignText","isSortAllowed","onClick","switching","x","y","shouldSwitch","colIndex","dir","switchcount","innerHTML","parentNode","insertBefore","sortThisColumn","columnTitle","aria-label","page","pageIndex","documentValidationStatus","fetchUserAccess","dispatch","a","setAxiosToken","axios","get","API","AUTH","res","users_response","ActionTypes","FETCH_USERS_ACCESS","payload","users","error","user_error","blockUserToSystem","BLOCK_USER_TO_SYSTEM","unBlockUserToSystem","UNBLOCK_USER_TO_SYSTEM","assignRoleToUserAccess","ASSIGN_ROLE_TO_USER","customizeUserAccess","CUSTOMIZE_USER_ACCESS","resetUserAccess","RESET_USER_ACCESS","verifyAllDocument","VERIFY_ALL_DOCUMENT","GetPlansTypes","callback","CLAIMING","GET_PLANS_TYPES","plan_types","status","errorToText","setSelectedPlanType","thisType","SELECT_PLAN_TYPE","getActiveSessionPlan","GET_ACTIVE_SESSION_PLANS","session_plan","undefined","is_active","GetAllSessionPlans","GET_ALL_SESSION_PLANS","session_data","createSessionPlan","CREATE_SESSION_PLAN","updateSessionPlan","UPDATE_SESSION_PLAN","sessionActivation","SESSION_ACTIVATION","deleteSessionPlan","DELETE_SESSION_PLAN","_SideNavigation","componentDidMount","PageHasSubNav","componentWillUnmount","state","this","auth","isAuthenticated","navActive","system","navigation","children","React","Component","SideNavigation","connect","NavToogle","MainItem","title","icon","MdBrightness1","active","count","IconDefined","SubItemContainer","SubItem","getDocumentCategory","docCategory","GET_DOCUMENT_CATEGORY","createDocumentCategory","CREATE_DOCUMENT_CATEGORY","updateDocumentCategory","UPDATE_DOCUMENT_CATEGORY","deleteDocumentCategory","DELETE_DOCUMENT_CATEGORY","getDocumentSubCategory","docSubCategory","GET_DOCUMENT_SUB_CATEGORY","doc_SUB_category_error","createDocumentSubCategory","CREATE_DOCUMENT_SUB_CATEGORY","updateDocumentSubCategory","UPDATE_DOCUMENT_SUB_CATEGORY","deleteDocumentSubCategory","DELETE_DOCUMENT_SUB_CATEGORY","getDocumentFields","docFields","GET_DOCUMENT_FIELDS","createDocumentFields","CREATE_DOCUMENT_FIELDS","updateDocumentFields","reducer","UPDATE_DOCUMENT_FIELDS","deleteDocumentFields","DELETE_DOCUMENT_FIELDS","getCandidatesInInstitute","educatin_type_id","session_id","APPLICATION","newArray","element","GET_CANDIDATE_IN_INSTITUTE","verifyDocument","action_verify","VERIFY_DOCUMENT","getSystemSettings","GET_SYSTEM_SETTINGS","code_error","disableSystemSetting","DISABLE_SYSTEM_SETTINGS","GetTaskAccess","response","task","key","permitted","GET_TASK_ACCESS","getPositions","GET_POSTIONS","deletePosition","DELETE_POSITION","publishPosition","PUBLISH_POSITION","PostRequestStatusInterface","DocumentAttributesInterface","DocValidationStatusInterface","SESSION_PLAN_KEYS","DOCUMENT_VALIDATION","EXAMINATION","MARKS_PUBLICATION","PLACEMENT_TRANSFER","ChooseReason","setSearchInput","setState","searchInput","setChooseClaimReason","allClaimReasons","claimReason","setClaimReason","reason","userList","PushPopupAlert","thisAnswerSheet","course","setChooseClaimFile","setClaimFileId","answer_sheet_id","setViewThisFile","DATE","createdAt","questions","question","q","language","QuestionLanguage","Eng","description","answer","myPlacement","isClaimAllowed","myClaims","activeSession","session_plan_id","placed","_id","school","school_name","ClaimGetDocTitle","documentCategories","doc","DocCategory","DocSubCategory","DocField","DocTitle","sub_category_id","documentSubCategory","c","user_detail_subcategory_id","category_id","documentCategory","user_detail_category_id","category_subcategory_data","category_subcategory_Data_id","documentFields","category","sub_category","field","main","allClaim","period_id","claimOnId","claiming_on_id","ClaimForm","isDocumentIdValid","documents","doc_id","validated_by","validation_status","msg","alert","PopupAlertTheme","info","claiming","success","warning","isApplicationIdValid","applications","app_id","app","application_id","application_status","ApplicationStates","Rejected","setLoading","setLoadingForm","loadingForm","setFormError","formError","setAlertError","alertError","claimFileId","viewThisFile","chooseClaimFile","chooseClaimReason","setClaimComment","claimComment","isClaimTypeOpen","thisSession","PlansTypeKeys","plans","type_key","isPlanActive","isClaimBtnValid","file_id","claim_type","theme","setFormState","thisClaimType","thisClaimTypeId","formType","displayClaimType","claimType","isClaimsAllowed","thisPeriod","getMyClaims","user","user_id","danger","loadExamAnswers","activeSessionPlan","getMyAnswers","sessionPlan","_isClaimsAllowed","documentReducer","candidateApplications","getMyRejectedApplications","_isApplicationIdValid","candidateDocuments","getMyRejectedDocuments","_isDocumentIdValid","claimReasons","getClaimReasons","getMyPlacement","courses","loadCourses","getDocumentById","getApplicationById","getExamById","exams","getValidation","thisId","old_reason","old_status","old_evaluated_by","comment","override_by","cleanToClose","loadUserById","handleSubmit","preventDefault","toLocaleLowerCase","old_evaluator_email","old_evaluator_name","evaluator_email","evaluator_name","email","user_info","fname","lname","default_claim_resaons","post","createClaim","selectClaimType","thisClaim","generateChooseFileTitle","formState","Modal","backDrop","Themes","default","close","displayClose","backDropClose","widthSizeClass","ModalSize","extraLarge","medium","body","footer","onSubmit","Object","values","replace","position_title","myAnswer","getCourseIdBySheetId","getCourseById","course_name","FormDocumentList","FormApplicationList","FormExamList","candidateAnswers","resize","DocFormView","thisDoc","ApplicationFormView","thisApplication","GetClaimingTypes","isReclaimAllowed","claim_level","_thisClaim","claims","level","decision_taken_status","ClaimDecisionStatus","REJECTED","isClaimEvaluated","claim_status","ClaimStatus","EVALUATED","createReClaim","reClaimingMsg","setLoadingRequest","put","setReClaimingMsg","setReClaiming","setViewImage","viewImage","previous","evaluater","name","src","AUTH_FILES","files","alt","claim","showDate","timestampToDate","date_created","timeFR","evaluation_comment","reClaiming","last_claim_status","PENDING","DELETED","loadingRequest","ExportToExcel","fileData","fileName","btnName","showIcon","apiData","wb","Sheets","XLSX","json_to_sheet","SheetNames","excelBuffer","bookType","Blob","FileSaver","exportToCSV","require","addFooters","pageCount","internal","getNumberOfPages","setFont","setFontSize","setPage","text","String","width","align","generatePDF","reportSettings","callBack","orientation","lMargin","jsPDF","setTextColor","addImage","Logo","getWidth","institute","lines","splitTextToSize","subject","pdfInMM","subjectTitle","getTextWidth","addPage","period","autoTable","html","startY","margin","horizontal","cellPadding","rowHeight","bodyStyles","valign","columnStyles","cellWidth","tableWidth","finalY","lastAutoTable","doneBy","Date","save","returnPromise","then","TableLoading","displayCols","colsArray","push","isPlansActive","today","activePlans","plan","startDate","start_date","endDate","end_date","getTime","type_status","SessionPlanTypeStatus","OPEN","ChooseSession","searched","selectedPlan","setSelectedPlan","setSearch","allSession","chooseAll","currentSelected","setSelectSession","searchData","session_plan_name","itm","type_title","ViewRequirements","requirements","colSpan","subcategory_title","field_title","required","field_id","getFailedExam","allData","allCourses","forEach","total_marks","course_id","sheet_id","FC_ApplicationPositionDistinctCategory","thisPosition","PositionsTemp","DistinctCategoriesTemp","DistinctCategoriesIds","DistinctSubCategoriesTemp","DistinctSubCategoriesIds","req","thisRequirements","thisCategory","thisSubCategory","thisField","position_requirement","category_subcategory_data_id","category_title","subcategory_id","includes","showEvaluator","loadingUsers","setLoadingUsers","school_level_id","school_level_name","education_category_title","course_code","NoResultThemes","Dark","isActivationAllowed","thisPlans","getPlanTypeByKey","allPlanTypes","viewThisSession","thisPlan","planEndDate","planStartDate","CLOSED","SessionDetails","handlePlanActivation","session","newState","window","confirm","newData","updatedAt","prototype","hasOwnProperty","call","type_id","allowed_claim_level","history","setViewThisSession","filterClaimsByClaimType","claimList","setSelectedClaimType","getAllClaims","loadingClaimTypes","setLoadingClaimTypes","claimTypes","countClaims","allClaims","Fragment","loadingClaims","selectedClaimType","ClaimHeaderTitle","isLoading","loadingSession","periodChanged","headerTitle","sessions","application_sessions","selectPeriod","setThisPeriod","setLoadingSession","onPeriodChange","getRejectedApplicants","applicationData","objList","product","flag","prop","DocumentTitleData","documentData","documentTemp","company","end_year","names","phone_number","start_year","year","doc_title","getRejectedDocuments","rejected","ClaimTypesEnum","setViewPosition","viewPosition","NoResult","questionTypes","loadQuestionTypes","getAnswersByQuestion","question_id","thisExamSheet","user_answers","thisExam","findQuestionType","questionTypeElementsType","MultipleChoice","SingleMultiple","TrueFalse","indexAnswer","user_marks","SimpleCalculate","Matching","ShortAnswer","Numeric","CalculatedMultipleChoice","userDetails","district_name","loadingRejectedApplications","setLoadingRejectedApplications","loadingRejectedDocuments","setLoadingRejectedDocuments","COMPLETED","document_id","whichClaimType","application","exam","marks_publication","placement","whichClaimStatus","classes","getClaimById","claim_id","displayDocClaimTitle","displayClaimTitle","allCourse","thisAnswer","Index","setViewClaim","viewClaim","setPeriodChanged","setClaimForm","claimForm","setClaimId","claimId","loadClaims","setSession","isDeleteAllowed","thisCLaim","Light","ClaimApplView","ClaimExamView","CandidateClaim","allSessionPlans","viewTabs","FC_AdminApplicationPositionDistinctCategory","subcategory","evaluateClaim","reAssessApplication","actionTaken","setActionTaken","responseMsg","setResponseMsg","profile","selectedTab","setSelectedTab","handleVerify","subClaim","api_body","sub_claim_id","evaluated_by","evaluate_claim_res","ACCEPTED","overrideDecision","getReasonById","reason_id","patch","Shortlisted","systemPositions","FC_DocValidation","APPROVED","in_education","disability","api_redux","date","FC_shortListing","candidate_id","details","adminDisplayClaimTitle","commet","marks","setMarks","Loading","handleMarksAddition","DO_EXAM","sex","AdminClaimGetDocTitle","allApplications","setLoadingData","loadingData","setClaimType","setCandidateId","candidateId","setDefaultSession","loadsAllClaims","loadsApplications","loadsAlAnswers","getAllApplications","allAnswer","getAllAnswers","thisDocs","AdminFilterByType","ClaimTypesInterface","DOCUMENT","AdminClaim","system_settings","reportClaimType","defaultReportContent","claimReportContentKeyInterface","national_id","gender","phone","claim_session","education_category","decision","claim_title","ClaimingReport","schoolLevels","loadEducationCategories","thisLevel","setThisLevel","loadingPosition","setLoadingPosition","loadingApplications","setLoadingApplications","setLoadingClaims","loadingCourses","setLoadingCourses","loadingDocuments","setLoadingDocuments","loadingInstitutes","setLoadingInstitutes","loadingClarifications","setLoadingClarifications","loadingFields","setLoadingFields","downloading","setDownloading","claimToPrint","setClaimToPrint","sortProperty","setSortProperty","isSorted","setIsSorted","sortOrder","setSortOrder","generateReportModal","setGenerateReportModal","reportTitle","setReportTitle","reportContent","setReportContent","selectAll","setSelectAll","setSelectPeriod","thisEducation","setThisEducation","education_categories","getClaimInstitute","setSort","thisProperty","updateClaimToPrint","arrayNew","n","keyClaim","dataArray","n_id","FC_ClaimData","isChangeAllowed","FC_FilterClaims","claimLevel","output","PlansKey","ClaimTypes","selectedType","currentType","levels","ClaimLevels","reportType","querySelectorAll","FC_GeneratePDF","sortThisArray","findIndex","isSelectAllNeeded","updateReportContent","currentState","resetReportContent"],"mappings":"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","file":"static/js/25.83e912c2.chunk.js","sourcesContent":["import { NumberFormat } from \"xlsx\";\nimport { education_category } from \"../interfaces\";\nimport { PositionAPI } from \"../interfaces/position\";\nimport {\n  AccessTaskInterface,\n  CustomeAccessInterface,\n  PositionInterface,\n  PostSchoolInterface,\n  RoleToUserInterface,\n  SchoolInfoInterface,\n  SchoolLevelInterface,\n  SystemUserRoleInterface,\n} from \"./interfaces\";\n\nexport const data_tasks: AccessTaskInterface[] = [\n  {\n    id: \"11233242\",\n    task: \"Do Exam\",\n    key: \"do_exam\",\n    permitted: {\n      create: false,\n      view: false,\n      update: false,\n      delete: false,\n    },\n  },\n  {\n    id: \"1123382242\",\n    task: \"Do Application\",\n    key: \"do_application\",\n    permitted: {\n      create: false,\n      view: false,\n      update: false,\n      delete: false,\n    },\n  },\n];\n\nexport const data_school: SchoolInfoInterface[] = [\n  {\n    school_id: \"32762426329\",\n    school_title: \"G.S. De Gitega\",\n    district_id: \"234242\",\n    number_of_females: 10,\n    number_of_males: 12,\n  },\n  {\n    school_id: \"32762426329\",\n    school_title: \"G.S. De Gitega\",\n    district_id: \"7322342684\",\n  },\n  {\n    school_id: \"32762426329\",\n    school_title: \"Rucee De Kigali\",\n    district_id: \"234242\",\n    number_of_females: 10,\n    number_of_males: 12,\n  },\n  {\n    school_id: \"32762426329\",\n    school_title: \"G.S. De Gitega\",\n    district_id: \"73232432684\",\n    number_of_females: 10,\n    number_of_males: 12,\n  },\n];\n\nexport const data_school_level: SchoolLevelInterface[] = [\n  {\n    school_level_id: \"324234r2ee432\",\n    school_level_name: \"Ordinary Level\",\n    description: \"Ordinary Level description\",\n    education_institute: [\"6100449ceabcc3b4623752e2\"],\n    courses: [],\n  },\n  {\n    school_level_name: \"A level\",\n    description: \"A level description\",\n    education_institute: [\n      \"6100592f646ddb0771e8fc50\",\n      \"61005941646ddb0771e8fc51\",\n    ],\n    courses: [],\n    school_level_id: \"61005974646ddb0771e8fc52\",\n  },\n  {\n    school_level_name: \"O level\",\n    description: \"O level description\",\n    education_institute: [\"6100592f646ddb0771e8fc50\"],\n    courses: [],\n    school_level_id: \"61005989646ddb0771e8fc53\",\n  },\n  {\n    school_level_name: \"Primary\",\n    description: \"Primary description\",\n    education_institute: [\"6100592f646ddb0771e8fc50\"],\n    courses: [],\n    school_level_id: \"61005999646ddb0771e8fc54\",\n  },\n  {\n    school_level_name: \"Ordinary Level\",\n    description: \"Ordinary Level description\",\n    education_institute: [\"610045218bdc25b50cc8bcbc\"],\n    courses: [],\n    school_level_id: \"61065114ea5d9b48e9677606\",\n  },\n];\n\nexport const data_position: PositionInterface[] = [\n  {\n    courses: [\n      {\n        course_name: \"Physics\",\n        course_code: \"P21\",\n        description: \"description of P21\",\n        school_levels: [\"61005974646ddb0771e8fc52\"],\n        course_id: \"610252c47d84ba2313cf6148\",\n      },\n      {\n        course_name: \"Mathematics\",\n        course_code: \"m211\",\n        description: \"description of m211\",\n        school_levels: [\"61005974646ddb0771e8fc52\"],\n        course_id: \"610252fd7d84ba2313cf6149\",\n      },\n    ],\n    position_title: \"Teaching mathematics\",\n    description: \"Teaching mathematics\",\n    school_level_id: {\n      school_level_name: \"A level\",\n      description: \"A level description\",\n      education_institute: [\n        \"6100592f646ddb0771e8fc50\",\n        \"61005941646ddb0771e8fc51\",\n      ],\n      courses: [],\n      school_level_id: \"61005974646ddb0771e8fc52\",\n    },\n    education_institute_id: {\n      education_category_title: \"REB\",\n      school_levels: [],\n      description: \"REB\",\n      education_institute_id: \"6100592f646ddb0771e8fc50\",\n    },\n    requirements: [\n      {\n        user_detail_category_id: \"60fc4868f485d8dd91ed321e\",\n        title: \"Education\",\n        user_required_docs: [\n          {\n            user_detail_subcategory_id: \"60fc48dbf485d8dd91ed321f\",\n            title: \"A1\",\n          },\n        ],\n      },\n    ],\n    position_id: \"610254047d84ba2313cf614a\",\n  },\n  {\n    courses: [\n      {\n        course_name: \"Physics\",\n        course_code: \"P21\",\n        description: \"description of P21\",\n        school_levels: [\"61005974646ddb0771e8fc52\"],\n        course_id: \"610252c47d84ba2313cf6148\",\n      },\n      {\n        course_name: \"English\",\n        course_code: \"e213\",\n        description: \"description of e213\",\n        school_levels: [\"61005974646ddb0771e8fc52\"],\n        course_id: \"6102e72675cc702bbd1582e3\",\n      },\n    ],\n    position_title: \"Teaching Physics\",\n    description: \"Teaching Physics\",\n    school_level_id: {\n      school_level_name: \"A level\",\n      description: \"A level description\",\n      education_institute: [\n        \"6100592f646ddb0771e8fc50\",\n        \"61005941646ddb0771e8fc51\",\n      ],\n      courses: [],\n      school_level_id: \"61005974646ddb0771e8fc52\",\n    },\n    education_institute_id: {\n      education_category_title: \"REB\",\n      school_levels: [],\n      description: \"REB\",\n      education_institute_id: \"6100592f646ddb0771e8fc50\",\n    },\n    requirements: [\n      {\n        user_detail_category_id: \"60fc4868f485d8dd91ed321e\",\n        title: \"Education\",\n        user_required_docs: [\n          {\n            user_detail_subcategory_id: \"60fc48dbf485d8dd91ed321f\",\n            title: \"A1\",\n          },\n        ],\n      },\n      {\n        user_detail_category_id: \"60fc47dff485d8dd91ed3219\",\n        title: \"Language\",\n        user_required_docs: [\n          {\n            user_detail_subcategory_id: \"6102e7ec248f742b674c67ad\",\n            title: \"English\",\n          },\n        ],\n      },\n    ],\n    position_id: \"6102ea2975cc702bbd1582e5\",\n  },\n  {\n    courses: [\n      {\n        course_name: \"Biology\",\n        course_code: \"b213\",\n        description: \"description of b213\",\n        school_levels: [\"61005974646ddb0771e8fc52\"],\n        course_id: \"6103a37975cc702bbd1582e6\",\n      },\n      {\n        course_name: \"English\",\n        course_code: \"e213\",\n        description: \"description of e213\",\n        school_levels: [\"61005974646ddb0771e8fc52\"],\n        course_id: \"6102e72675cc702bbd1582e3\",\n      },\n    ],\n    position_title: \"Teaching Biology\",\n    description: \"Teaching Biology\",\n    school_level_id: {\n      school_level_name: \"A level\",\n      description: \"A level description\",\n      education_institute: [\n        \"6100592f646ddb0771e8fc50\",\n        \"61005941646ddb0771e8fc51\",\n      ],\n      courses: [],\n      school_level_id: \"61005974646ddb0771e8fc52\",\n    },\n    education_institute_id: {\n      education_category_title: \"REB\",\n      school_levels: [],\n      description: \"REB\",\n      education_institute_id: \"6100592f646ddb0771e8fc50\",\n    },\n    requirements: [\n      {\n        user_detail_category_id: \"60fc4868f485d8dd91ed321e\",\n        title: \"A0\",\n        user_required_docs: [\n          {\n            user_detail_subcategory_id: \"60fc48eff485d8dd91ed3221\",\n            title: \"A0\",\n          },\n        ],\n      },\n      {\n        user_detail_category_id: \"60fc47dff485d8dd91ed3219\",\n        title: \"Language\",\n        user_required_docs: [\n          {\n            user_detail_subcategory_id: \"6102e7ec248f742b674c67ad\",\n            title: \"English\",\n          },\n          {\n            user_detail_subcategory_id: \"6102e84c248f742b674c67af\",\n            title: \"Ikinyarwanda\",\n          },\n        ],\n      },\n    ],\n    position_id: \"6103a54075cc702bbd1582e8\",\n  },\n  {\n    courses: [\n      {\n        course_name: \"Biology\",\n        course_code: \"b213\",\n        description: \"description of b213\",\n        school_levels: [\"61005974646ddb0771e8fc52\"],\n        course_id: \"6103a37975cc702bbd1582e6\",\n      },\n      {\n        course_name: \"English\",\n        course_code: \"e213\",\n        description: \"description of e213\",\n        school_levels: [\"61005974646ddb0771e8fc52\"],\n        course_id: \"6102e72675cc702bbd1582e3\",\n      },\n    ],\n    position_title: \"Teaching basic Biology\",\n    description: \"Teaching basic Biology\",\n    school_level_id: {\n      school_level_name: \"O level\",\n      description: \"O level description\",\n      education_institute: [\"6100592f646ddb0771e8fc50\"],\n      courses: [],\n      school_level_id: \"61005989646ddb0771e8fc53\",\n    },\n    education_institute_id: {\n      education_category_title: \"REB\",\n      school_levels: [],\n      description: \"REB\",\n      education_institute_id: \"6100592f646ddb0771e8fc50\",\n    },\n    requirements: [\n      {\n        user_detail_category_id: \"60fc4868f485d8dd91ed321e\",\n        title: \"Education\",\n        user_required_docs: [\n          {\n            user_detail_subcategory_id: \"60fc48dbf485d8dd91ed321f\",\n            title: \"A1\",\n          },\n        ],\n      },\n      {\n        user_detail_category_id: \"60fc47dff485d8dd91ed3219\",\n        title: \"Language\",\n        user_required_docs: [\n          {\n            user_detail_subcategory_id: \"6102e7ec248f742b674c67ad\",\n            title: \"English\",\n          },\n          {\n            user_detail_subcategory_id: \"6102e84c248f742b674c67af\",\n            title: \"Ikinyarwanda\",\n          },\n        ],\n      },\n    ],\n    position_id: \"6103a6ca75cc702bbd1582e9\",\n  },\n  {\n    courses: [\n      {\n        course_name: \"Biology\",\n        course_code: \"b213\",\n        description: \"description of b213\",\n        school_levels: [\"61005974646ddb0771e8fc52\"],\n        course_id: \"6103a37975cc702bbd1582e6\",\n      },\n      {\n        course_name: \"English\",\n        course_code: \"e213\",\n        description: \"description of e213\",\n        school_levels: [\"61005974646ddb0771e8fc52\"],\n        course_id: \"6102e72675cc702bbd1582e3\",\n      },\n    ],\n    position_title: \"Teaching basic Biology\",\n    description: \"Teaching basic Biology\",\n    school_level_id: {\n      school_level_name: \"O level\",\n      description: \"O level description\",\n      education_institute: [\"6100592f646ddb0771e8fc50\"],\n      courses: [],\n      school_level_id: \"61005989646ddb0771e8fc53\",\n    },\n    education_institute_id: {\n      education_category_title: \"WDA\",\n      school_levels: [],\n      description: \"WDA\",\n      education_institute_id: \"61005941646ddb0771e8fc51\",\n    },\n    requirements: [\n      {\n        user_detail_category_id: \"60fc4868f485d8dd91ed321e\",\n        title: \"Education\",\n        user_required_docs: [\n          {\n            user_detail_subcategory_id: \"60fc48dbf485d8dd91ed321f\",\n            title: \"A1\",\n          },\n        ],\n      },\n      {\n        user_detail_category_id: \"60fc47dff485d8dd91ed3219\",\n        title: \"Language\",\n        user_required_docs: [\n          {\n            user_detail_subcategory_id: \"6102e7ec248f742b674c67ad\",\n            title: \"English\",\n          },\n          {\n            user_detail_subcategory_id: \"6102e84c248f742b674c67af\",\n            title: \"Ikinyarwanda\",\n          },\n        ],\n      },\n    ],\n    position_id: \"6103a78475cc702bbd1582ea\",\n  },\n  {\n    courses: [\n      {\n        course_name: \"Biology\",\n        course_code: \"b213\",\n        description: \"description of b213\",\n        school_levels: [\"61005974646ddb0771e8fc52\"],\n        course_id: \"6103a37975cc702bbd1582e6\",\n      },\n      {\n        course_name: \"English\",\n        course_code: \"e213\",\n        description: \"description of e213\",\n        school_levels: [\"61005974646ddb0771e8fc52\"],\n        course_id: \"6102e72675cc702bbd1582e3\",\n      },\n    ],\n    position_title: \"Teaching basic physics\",\n    description: \"Teaching basic physics\",\n    school_level_id: {\n      school_level_name: \"A level\",\n      description: \"A level description\",\n      education_institute: [\n        \"6100592f646ddb0771e8fc50\",\n        \"61005941646ddb0771e8fc51\",\n      ],\n      courses: [],\n      school_level_id: \"61005974646ddb0771e8fc52\",\n    },\n    education_institute_id: {\n      education_category_title: \"WDA\",\n      school_levels: [],\n      description: \"WDA\",\n      education_institute_id: \"61005941646ddb0771e8fc51\",\n    },\n    requirements: [\n      {\n        user_detail_category_id: \"60fc4868f485d8dd91ed321e\",\n        title: \"Education\",\n        user_required_docs: [\n          {\n            user_detail_subcategory_id: \"60fc48dbf485d8dd91ed321f\",\n            title: \"A1\",\n          },\n        ],\n      },\n      {\n        user_detail_category_id: \"60fc47dff485d8dd91ed3219\",\n        title: \"Language\",\n        user_required_docs: [\n          {\n            user_detail_subcategory_id: \"6102e7ec248f742b674c67ad\",\n            title: \"English\",\n          },\n          {\n            user_detail_subcategory_id: \"6102e84c248f742b674c67af\",\n            title: \"Ikinyarwanda\",\n          },\n        ],\n      },\n    ],\n    position_id: \"6103a7ec75cc702bbd1582eb\",\n  },\n];\n\nexport const data_posts_school: PostSchoolInterface[] = [];\n\nexport const isEmptyOrSpaces = (str: string): boolean => {\n  return str === null || str.match(/^ *$/) !== null;\n};\n\nexport const getUserTitle = (\n  accessRoles: SystemUserRoleInterface[],\n  roleId: string\n): string => {\n  const result = accessRoles.find((e) => e.system_user_role_id === roleId);\n  return result ? result.role : \"\";\n};\n\nexport const getRoleById = (\n  roles: SystemUserRoleInterface[],\n  roleId: string\n): SystemUserRoleInterface => {\n  return roles.filter((role) => role.system_user_role_id === roleId)[0];\n};\n\nexport const getInstituteById = (\n  institutes: education_category[],\n  instituteId: string\n): education_category | undefined => {\n  return institutes.find((item) => item.education_institute_id === instituteId);\n};\n\nexport const getPositionById_old = (\n  positions: PositionAPI[],\n  position_id: string\n): PositionAPI => {\n  console.log({\n    positions,\n    position_id,\n    data: positions.filter(\n      (position) => position.position_id === position_id\n    )[0],\n  });\n  return positions.filter(\n    (position) => position.position_id === position_id\n  )[0];\n};\n\nexport const getPositionById = (\n  positions: PositionAPI[],\n  position_id: string\n): PositionAPI | undefined => {\n  console.log({\n    positions,\n    position_id,\n    data: positions.filter(\n      (position) => position.position_id === position_id\n    )[0],\n  });\n  return positions.find((position) => position.position_id === position_id);\n};\n\nexport const getSchoolById = (\n  schools: SchoolInfoInterface[],\n  school_id: string\n): SchoolInfoInterface => {\n  return schools.filter((school) => school.school_id === school_id)[0];\n};\n\nexport const getPostById = (\n  posts: PostSchoolInterface[],\n  post_id: string\n): PostSchoolInterface => {\n  return posts.filter((post) => post.school_id === post_id)[0];\n};\n\nexport const getPostsBySchoolId = (\n  posts: PostSchoolInterface[],\n  school_id: string\n): PostSchoolInterface[] => {\n  return posts.filter((post) => post.school_id === school_id);\n};\n\nexport const getPostsByIds = (\n  posts: PostSchoolInterface[],\n  school_id: string,\n  position_id: string\n): PostSchoolInterface[] => {\n  return posts.filter(\n    (post) => post.school_id === school_id && post.position_id === position_id\n  );\n};\n\nexport const displayDate = (dateToDisplay: Date): string => {\n  return new Intl.DateTimeFormat(\"en-GB\", {\n    year: \"numeric\",\n    month: \"long\",\n    day: \"2-digit\",\n  }).format(dateToDisplay);\n};\n\nexport const userAccess = (\n  defaultAccess: RoleToUserInterface,\n  customAccess: CustomeAccessInterface\n): RoleToUserInterface => {\n  // const data = defaultAccess.access.map((default,index,customAccess)=>{\n  //   let data_custom = customAccess\n  //   if\n  // })\n  // return customAccess.filter((custom) => custom.id === accecc_id)[0];\n  return defaultAccess;\n};\n\n// export const groupBy = (list: [], keyGetter: Function) => {\n//   const map = new Map();\n//   list.forEach((item) => {\n//     const key = keyGetter(item);\n//     const collection = map.get(key);\n//     if (!collection) {\n//       map.set(key, [item]);\n//     } else {\n//       collection.push(item);\n//     }\n//   });\n//   return map;\n// };\n\nexport const toTwoDigit = (value: number): string => {\n  var dec = value - Math.floor(value);\n  value = value - dec;\n  return (\"0\" + value).slice(-2) + dec.toString().substr(1);\n};\n\nexport const toAnyDigit = (\n  value: NumberFormat,\n  padding: number = 3\n): string => {\n  var zeroes = new Array(padding + 1).join(\"0\");\n  return (zeroes + value).slice(-padding);\n};\n\nexport const choosenSchool = \"611fce914ce2093472232f5f\";\nexport const choosenDistrict = \"610bd1f3334bb2405fa5061e\";\n\nexport const capitalizeFirstLetter = (value: string): string => {\n  return value.charAt(0).toUpperCase() + value.slice(1);\n};\n\nexport const isDateExpiried = (paramDate: string) => {\n  const thisDate = new Date(paramDate);\n  const today = new Date();\n  if (thisDate.getTime() < today.getTime()) {\n    return true;\n  }\n\n  return false;\n};\n\nexport const exportData = [\n  {\n    userId: 1,\n    id: 1,\n    title:\n      \"sunt aut facere repellat provident occaecati excepturi optio reprehenderit\",\n    body: \"quia et suscipit\\nsuscipit recusandae consequuntur expedita et cum\\nreprehenderit molestiae ut ut quas totam\\nnostrum rerum est autem sunt rem eveniet architecto\",\n  },\n  {\n    userId: 1,\n    id: 2,\n    title: \"qui est esse\",\n    body: \"est rerum tempore vitae\\nsequi sint nihil reprehenderit dolor beatae ea dolores neque\\nfugiat blanditiis voluptate porro vel nihil molestiae ut reiciendis\\nqui aperiam non debitis possimus qui neque nisi nulla\",\n  },\n  {\n    userId: 1,\n    id: 3,\n    title: \"ea molestias quasi exercitationem repellat qui ipsa sit aut\",\n    body: \"et iusto sed quo iure\\nvoluptatem occaecati omnis eligendi aut ad\\nvoluptatem doloribus vel accusantium quis pariatur\\nmolestiae porro eius odio et labore et velit aut\",\n  },\n  {\n    userId: 1,\n    id: 4,\n    title: \"eum et est occaecati\",\n    body: \"ullam et saepe reiciendis voluptatem adipisci\\nsit amet autem assumenda provident rerum culpa\\nquis hic commodi nesciunt rem tenetur doloremque ipsam iure\\nquis sunt voluptatem rerum illo velit\",\n  },\n  {\n    userId: 1,\n    id: 5,\n    title: \"nesciunt quas odio\",\n    body: \"repudiandae veniam quaerat sunt sed\\nalias aut fugiat sit autem sed est\\nvoluptatem omnis possimus esse voluptatibus quis\\nest aut tenetur dolor neque\",\n  },\n  {\n    userId: 1,\n    id: 6,\n    title: \"dolorem eum magni eos aperiam quia\",\n    body: \"ut aspernatur corporis harum nihil quis provident sequi\\nmollitia nobis aliquid molestiae\\nperspiciatis et ea nemo ab reprehenderit accusantium quas\\nvoluptate dolores velit et doloremque molestiae\",\n  },\n  {\n    userId: 1,\n    id: 7,\n    title: \"magnam facilis autem\",\n    body: \"dolore placeat quibusdam ea quo vitae\\nmagni quis enim qui quis quo nemo aut saepe\\nquidem repellat excepturi ut quia\\nsunt ut sequi eos ea sed quas\",\n  },\n  {\n    userId: 1,\n    id: 8,\n    title: \"dolorem dolore est ipsam\",\n    body: \"dignissimos aperiam dolorem qui eum\\nfacilis quibusdam animi sint suscipit qui sint possimus cum\\nquaerat magni maiores excepturi\\nipsam ut commodi dolor voluptatum modi aut vitae\",\n  },\n  {\n    userId: 1,\n    id: 9,\n    title: \"nesciunt iure omnis dolorem tempora et accusantium\",\n    body: \"consectetur animi nesciunt iure dolore\\nenim quia ad\\nveniam autem ut quam aut nobis\\net est aut quod aut provident voluptas autem voluptas\",\n  },\n  {\n    userId: 1,\n    id: 10,\n    title: \"optio molestias id quia eum\",\n    body: \"quo et expedita modi cum officia vel magni\\ndoloribus qui repudiandae\\nvero nisi sit\\nquos veniam quod sed accusamus veritatis error\",\n  },\n  {\n    userId: 2,\n    id: 11,\n    title: \"et ea vero quia laudantium autem\",\n    body: \"delectus reiciendis molestiae occaecati non minima eveniet qui voluptatibus\\naccusamus in eum beatae sit\\nvel qui neque voluptates ut commodi qui incidunt\\nut animi commodi\",\n  },\n  {\n    userId: 2,\n    id: 12,\n    title: \"in quibusdam tempore odit est dolorem\",\n    body: \"itaque id aut magnam\\npraesentium quia et ea odit et ea voluptas et\\nsapiente quia nihil amet occaecati quia id voluptatem\\nincidunt ea est distinctio odio\",\n  },\n  {\n    userId: 2,\n    id: 13,\n    title: \"dolorum ut in voluptas mollitia et saepe quo animi\",\n    body: \"aut dicta possimus sint mollitia voluptas commodi quo doloremque\\niste corrupti reiciendis voluptatem eius rerum\\nsit cumque quod eligendi laborum minima\\nperferendis recusandae assumenda consectetur porro architecto ipsum ipsam\",\n  },\n  {\n    userId: 2,\n    id: 14,\n    title: \"voluptatem eligendi optio\",\n    body: \"fuga et accusamus dolorum perferendis illo voluptas\\nnon doloremque neque facere\\nad qui dolorum molestiae beatae\\nsed aut voluptas totam sit illum\",\n  },\n  {\n    userId: 2,\n    id: 15,\n    title: \"eveniet quod temporibus\",\n    body: \"reprehenderit quos placeat\\nvelit minima officia dolores impedit repudiandae molestiae nam\\nvoluptas recusandae quis delectus\\nofficiis harum fugiat vitae\",\n  },\n  {\n    userId: 2,\n    id: 16,\n    title:\n      \"sint suscipit perspiciatis velit dolorum rerum ipsa laboriosam odio\",\n    body: \"suscipit nam nisi quo aperiam aut\\nasperiores eos fugit maiores voluptatibus quia\\nvoluptatem quis ullam qui in alias quia est\\nconsequatur magni mollitia accusamus ea nisi voluptate dicta\",\n  },\n  {\n    userId: 2,\n    id: 17,\n    title: \"fugit voluptas sed molestias voluptatem provident\",\n    body: \"eos voluptas et aut odit natus earum\\naspernatur fuga molestiae ullam\\ndeserunt ratione qui eos\\nqui nihil ratione nemo velit ut aut id quo\",\n  },\n  {\n    userId: 2,\n    id: 18,\n    title: \"voluptate et itaque vero tempora molestiae\",\n    body: \"eveniet quo quis\\nlaborum totam consequatur non dolor\\nut et est repudiandae\\nest voluptatem vel debitis et magnam\",\n  },\n  {\n    userId: 2,\n    id: 19,\n    title: \"adipisci placeat illum aut reiciendis qui\",\n    body: \"illum quis cupiditate provident sit magnam\\nea sed aut omnis\\nveniam maiores ullam consequatur atque\\nadipisci quo iste expedita sit quos voluptas\",\n  },\n  {\n    userId: 2,\n    id: 20,\n    title: \"doloribus ad provident suscipit at\",\n    body: \"qui consequuntur ducimus possimus quisquam amet similique\\nsuscipit porro ipsam amet\\neos veritatis officiis exercitationem vel fugit aut necessitatibus totam\\nomnis rerum consequatur expedita quidem cumque explicabo\",\n  },\n  {\n    userId: 3,\n    id: 21,\n    title: \"asperiores ea ipsam voluptatibus modi minima quia sint\",\n    body: \"repellat aliquid praesentium dolorem quo\\nsed totam minus non itaque\\nnihil labore molestiae sunt dolor eveniet hic recusandae veniam\\ntempora et tenetur expedita sunt\",\n  },\n  {\n    userId: 3,\n    id: 22,\n    title: \"dolor sint quo a velit explicabo quia nam\",\n    body: \"eos qui et ipsum ipsam suscipit aut\\nsed omnis non odio\\nexpedita earum mollitia molestiae aut atque rem suscipit\\nnam impedit esse\",\n  },\n  {\n    userId: 3,\n    id: 23,\n    title: \"maxime id vitae nihil numquam\",\n    body: \"veritatis unde neque eligendi\\nquae quod architecto quo neque vitae\\nest illo sit tempora doloremque fugit quod\\net et vel beatae sequi ullam sed tenetur perspiciatis\",\n  },\n  {\n    userId: 3,\n    id: 24,\n    title: \"autem hic labore sunt dolores incidunt\",\n    body: \"enim et ex nulla\\nomnis voluptas quia qui\\nvoluptatem consequatur numquam aliquam sunt\\ntotam recusandae id dignissimos aut sed asperiores deserunt\",\n  },\n  {\n    userId: 3,\n    id: 25,\n    title: \"rem alias distinctio quo quis\",\n    body: \"ullam consequatur ut\\nomnis quis sit vel consequuntur\\nipsa eligendi ipsum molestiae et omnis error nostrum\\nmolestiae illo tempore quia et distinctio\",\n  },\n  {\n    userId: 3,\n    id: 26,\n    title: \"est et quae odit qui non\",\n    body: \"similique esse doloribus nihil accusamus\\nomnis dolorem fuga consequuntur reprehenderit fugit recusandae temporibus\\nperspiciatis cum ut laudantium\\nomnis aut molestiae vel vero\",\n  },\n  {\n    userId: 3,\n    id: 27,\n    title: \"quasi id et eos tenetur aut quo autem\",\n    body: \"eum sed dolores ipsam sint possimus debitis occaecati\\ndebitis qui qui et\\nut placeat enim earum aut odit facilis\\nconsequatur suscipit necessitatibus rerum sed inventore temporibus consequatur\",\n  },\n  {\n    userId: 3,\n    id: 28,\n    title: \"delectus ullam et corporis nulla voluptas sequi\",\n    body: \"non et quaerat ex quae ad maiores\\nmaiores recusandae totam aut blanditiis mollitia quas illo\\nut voluptatibus voluptatem\\nsimilique nostrum eum\",\n  },\n  {\n    userId: 3,\n    id: 29,\n    title: \"iusto eius quod necessitatibus culpa ea\",\n    body: \"odit magnam ut saepe sed non qui\\ntempora atque nihil\\naccusamus illum doloribus illo dolor\\neligendi repudiandae odit magni similique sed cum maiores\",\n  },\n  {\n    userId: 3,\n    id: 30,\n    title: \"a quo magni similique perferendis\",\n    body: \"alias dolor cumque\\nimpedit blanditiis non eveniet odio maxime\\nblanditiis amet eius quis tempora quia autem rem\\na provident perspiciatis quia\",\n  },\n  {\n    userId: 4,\n    id: 31,\n    title: \"ullam ut quidem id aut vel consequuntur\",\n    body: \"debitis eius sed quibusdam non quis consectetur vitae\\nimpedit ut qui consequatur sed aut in\\nquidem sit nostrum et maiores adipisci atque\\nquaerat voluptatem adipisci repudiandae\",\n  },\n  {\n    userId: 4,\n    id: 32,\n    title: \"doloremque illum aliquid sunt\",\n    body: \"deserunt eos nobis asperiores et hic\\nest debitis repellat molestiae optio\\nnihil ratione ut eos beatae quibusdam distinctio maiores\\nearum voluptates et aut adipisci ea maiores voluptas maxime\",\n  },\n  {\n    userId: 4,\n    id: 33,\n    title: \"qui explicabo molestiae dolorem\",\n    body: \"rerum ut et numquam laborum odit est sit\\nid qui sint in\\nquasi tenetur tempore aperiam et quaerat qui in\\nrerum officiis sequi cumque quod\",\n  },\n  {\n    userId: 4,\n    id: 34,\n    title: \"magnam ut rerum iure\",\n    body: \"ea velit perferendis earum ut voluptatem voluptate itaque iusto\\ntotam pariatur in\\nnemo voluptatem voluptatem autem magni tempora minima in\\nest distinctio qui assumenda accusamus dignissimos officia nesciunt nobis\",\n  },\n  {\n    userId: 4,\n    id: 35,\n    title: \"id nihil consequatur molestias animi provident\",\n    body: \"nisi error delectus possimus ut eligendi vitae\\nplaceat eos harum cupiditate facilis reprehenderit voluptatem beatae\\nmodi ducimus quo illum voluptas eligendi\\net nobis quia fugit\",\n  },\n  {\n    userId: 4,\n    id: 36,\n    title: \"fuga nam accusamus voluptas reiciendis itaque\",\n    body: \"ad mollitia et omnis minus architecto odit\\nvoluptas doloremque maxime aut non ipsa qui alias veniam\\nblanditiis culpa aut quia nihil cumque facere et occaecati\\nqui aspernatur quia eaque ut aperiam inventore\",\n  },\n  {\n    userId: 4,\n    id: 37,\n    title: \"provident vel ut sit ratione est\",\n    body: \"debitis et eaque non officia sed nesciunt pariatur vel\\nvoluptatem iste vero et ea\\nnumquam aut expedita ipsum nulla in\\nvoluptates omnis consequatur aut enim officiis in quam qui\",\n  },\n  {\n    userId: 4,\n    id: 38,\n    title: \"explicabo et eos deleniti nostrum ab id repellendus\",\n    body: \"animi esse sit aut sit nesciunt assumenda eum voluptas\\nquia voluptatibus provident quia necessitatibus ea\\nrerum repudiandae quia voluptatem delectus fugit aut id quia\\nratione optio eos iusto veniam iure\",\n  },\n  {\n    userId: 4,\n    id: 39,\n    title: \"eos dolorem iste accusantium est eaque quam\",\n    body: \"corporis rerum ducimus vel eum accusantium\\nmaxime aspernatur a porro possimus iste omnis\\nest in deleniti asperiores fuga aut\\nvoluptas sapiente vel dolore minus voluptatem incidunt ex\",\n  },\n  {\n    userId: 4,\n    id: 40,\n    title: \"enim quo cumque\",\n    body: \"ut voluptatum aliquid illo tenetur nemo sequi quo facilis\\nipsum rem optio mollitia quas\\nvoluptatem eum voluptas qui\\nunde omnis voluptatem iure quasi maxime voluptas nam\",\n  },\n  {\n    userId: 5,\n    id: 41,\n    title: \"non est facere\",\n    body: \"molestias id nostrum\\nexcepturi molestiae dolore omnis repellendus quaerat saepe\\nconsectetur iste quaerat tenetur asperiores accusamus ex ut\\nnam quidem est ducimus sunt debitis saepe\",\n  },\n  {\n    userId: 5,\n    id: 42,\n    title:\n      \"commodi ullam sint et excepturi error explicabo praesentium voluptas\",\n    body: \"odio fugit voluptatum ducimus earum autem est incidunt voluptatem\\nodit reiciendis aliquam sunt sequi nulla dolorem\\nnon facere repellendus voluptates quia\\nratione harum vitae ut\",\n  },\n  {\n    userId: 5,\n    id: 43,\n    title:\n      \"eligendi iste nostrum consequuntur adipisci praesentium sit beatae perferendis\",\n    body: \"similique fugit est\\nillum et dolorum harum et voluptate eaque quidem\\nexercitationem quos nam commodi possimus cum odio nihil nulla\\ndolorum exercitationem magnam ex et a et distinctio debitis\",\n  },\n  {\n    userId: 5,\n    id: 44,\n    title: \"optio dolor molestias sit\",\n    body: \"temporibus est consectetur dolore\\net libero debitis vel velit laboriosam quia\\nipsum quibusdam qui itaque fuga rem aut\\nea et iure quam sed maxime ut distinctio quae\",\n  },\n  {\n    userId: 5,\n    id: 45,\n    title: \"ut numquam possimus omnis eius suscipit laudantium iure\",\n    body: \"est natus reiciendis nihil possimus aut provident\\nex et dolor\\nrepellat pariatur est\\nnobis rerum repellendus dolorem autem\",\n  },\n  {\n    userId: 5,\n    id: 46,\n    title: \"aut quo modi neque nostrum ducimus\",\n    body: \"voluptatem quisquam iste\\nvoluptatibus natus officiis facilis dolorem\\nquis quas ipsam\\nvel et voluptatum in aliquid\",\n  },\n  {\n    userId: 5,\n    id: 47,\n    title: \"quibusdam cumque rem aut deserunt\",\n    body: \"voluptatem assumenda ut qui ut cupiditate aut impedit veniam\\noccaecati nemo illum voluptatem laudantium\\nmolestiae beatae rerum ea iure soluta nostrum\\neligendi et voluptate\",\n  },\n  {\n    userId: 5,\n    id: 48,\n    title: \"ut voluptatem illum ea doloribus itaque eos\",\n    body: \"voluptates quo voluptatem facilis iure occaecati\\nvel assumenda rerum officia et\\nillum perspiciatis ab deleniti\\nlaudantium repellat ad ut et autem reprehenderit\",\n  },\n  {\n    userId: 5,\n    id: 49,\n    title: \"laborum non sunt aut ut assumenda perspiciatis voluptas\",\n    body: \"inventore ab sint\\nnatus fugit id nulla sequi architecto nihil quaerat\\neos tenetur in in eum veritatis non\\nquibusdam officiis aspernatur cumque aut commodi aut\",\n  },\n  {\n    userId: 5,\n    id: 50,\n    title:\n      \"repellendus qui recusandae incidunt voluptates tenetur qui omnis exercitationem\",\n    body: \"error suscipit maxime adipisci consequuntur recusandae\\nvoluptas eligendi et est et voluptates\\nquia distinctio ab amet quaerat molestiae et vitae\\nadipisci impedit sequi nesciunt quis consectetur\",\n  },\n  {\n    userId: 6,\n    id: 51,\n    title: \"soluta aliquam aperiam consequatur illo quis voluptas\",\n    body: \"sunt dolores aut doloribus\\ndolore doloribus voluptates tempora et\\ndoloremque et quo\\ncum asperiores sit consectetur dolorem\",\n  },\n  {\n    userId: 6,\n    id: 52,\n    title: \"qui enim et consequuntur quia animi quis voluptate quibusdam\",\n    body: \"iusto est quibusdam fuga quas quaerat molestias\\na enim ut sit accusamus enim\\ntemporibus iusto accusantium provident architecto\\nsoluta esse reprehenderit qui laborum\",\n  },\n  {\n    userId: 6,\n    id: 53,\n    title: \"ut quo aut ducimus alias\",\n    body: \"minima harum praesentium eum rerum illo dolore\\nquasi exercitationem rerum nam\\nporro quis neque quo\\nconsequatur minus dolor quidem veritatis sunt non explicabo similique\",\n  },\n  {\n    userId: 6,\n    id: 54,\n    title: \"sit asperiores ipsam eveniet odio non quia\",\n    body: \"totam corporis dignissimos\\nvitae dolorem ut occaecati accusamus\\nex velit deserunt\\net exercitationem vero incidunt corrupti mollitia\",\n  },\n  {\n    userId: 6,\n    id: 55,\n    title: \"sit vel voluptatem et non libero\",\n    body: \"debitis excepturi ea perferendis harum libero optio\\neos accusamus cum fuga ut sapiente repudiandae\\net ut incidunt omnis molestiae\\nnihil ut eum odit\",\n  },\n  {\n    userId: 6,\n    id: 56,\n    title: \"qui et at rerum necessitatibus\",\n    body: \"aut est omnis dolores\\nneque rerum quod ea rerum velit pariatur beatae excepturi\\net provident voluptas corrupti\\ncorporis harum reprehenderit dolores eligendi\",\n  },\n  {\n    userId: 6,\n    id: 57,\n    title: \"sed ab est est\",\n    body: \"at pariatur consequuntur earum quidem\\nquo est laudantium soluta voluptatem\\nqui ullam et est\\net cum voluptas voluptatum repellat est\",\n  },\n  {\n    userId: 6,\n    id: 58,\n    title: \"voluptatum itaque dolores nisi et quasi\",\n    body: \"veniam voluptatum quae adipisci id\\net id quia eos ad et dolorem\\naliquam quo nisi sunt eos impedit error\\nad similique veniam\",\n  },\n  {\n    userId: 6,\n    id: 59,\n    title: \"qui commodi dolor at maiores et quis id accusantium\",\n    body: \"perspiciatis et quam ea autem temporibus non voluptatibus qui\\nbeatae a earum officia nesciunt dolores suscipit voluptas et\\nanimi doloribus cum rerum quas et magni\\net hic ut ut commodi expedita sunt\",\n  },\n  {\n    userId: 6,\n    id: 60,\n    title:\n      \"consequatur placeat omnis quisquam quia reprehenderit fugit veritatis facere\",\n    body: \"asperiores sunt ab assumenda cumque modi velit\\nqui esse omnis\\nvoluptate et fuga perferendis voluptas\\nillo ratione amet aut et omnis\",\n  },\n  {\n    userId: 7,\n    id: 61,\n    title: \"voluptatem doloribus consectetur est ut ducimus\",\n    body: \"ab nemo optio odio\\ndelectus tenetur corporis similique nobis repellendus rerum omnis facilis\\nvero blanditiis debitis in nesciunt doloribus dicta dolores\\nmagnam minus velit\",\n  },\n  {\n    userId: 7,\n    id: 62,\n    title: \"beatae enim quia vel\",\n    body: \"enim aspernatur illo distinctio quae praesentium\\nbeatae alias amet delectus qui voluptate distinctio\\nodit sint accusantium autem omnis\\nquo molestiae omnis ea eveniet optio\",\n  },\n  {\n    userId: 7,\n    id: 63,\n    title:\n      \"voluptas blanditiis repellendus animi ducimus error sapiente et suscipit\",\n    body: \"enim adipisci aspernatur nemo\\nnumquam omnis facere dolorem dolor ex quis temporibus incidunt\\nab delectus culpa quo reprehenderit blanditiis asperiores\\naccusantium ut quam in voluptatibus voluptas ipsam dicta\",\n  },\n  {\n    userId: 7,\n    id: 64,\n    title: \"et fugit quas eum in in aperiam quod\",\n    body: \"id velit blanditiis\\neum ea voluptatem\\nmolestiae sint occaecati est eos perspiciatis\\nincidunt a error provident eaque aut aut qui\",\n  },\n  {\n    userId: 7,\n    id: 65,\n    title: \"consequatur id enim sunt et et\",\n    body: \"voluptatibus ex esse\\nsint explicabo est aliquid cumque adipisci fuga repellat labore\\nmolestiae corrupti ex saepe at asperiores et perferendis\\nnatus id esse incidunt pariatur\",\n  },\n  {\n    userId: 7,\n    id: 66,\n    title: \"repudiandae ea animi iusto\",\n    body: \"officia veritatis tenetur vero qui itaque\\nsint non ratione\\nsed et ut asperiores iusto eos molestiae nostrum\\nveritatis quibusdam et nemo iusto saepe\",\n  },\n  {\n    userId: 7,\n    id: 67,\n    title: \"aliquid eos sed fuga est maxime repellendus\",\n    body: \"reprehenderit id nostrum\\nvoluptas doloremque pariatur sint et accusantium quia quod aspernatur\\net fugiat amet\\nnon sapiente et consequatur necessitatibus molestiae\",\n  },\n  {\n    userId: 7,\n    id: 68,\n    title: \"odio quis facere architecto reiciendis optio\",\n    body: \"magnam molestiae perferendis quisquam\\nqui cum reiciendis\\nquaerat animi amet hic inventore\\nea quia deleniti quidem saepe porro velit\",\n  },\n  {\n    userId: 7,\n    id: 69,\n    title: \"fugiat quod pariatur odit minima\",\n    body: \"officiis error culpa consequatur modi asperiores et\\ndolorum assumenda voluptas et vel qui aut vel rerum\\nvoluptatum quisquam perspiciatis quia rerum consequatur totam quas\\nsequi commodi repudiandae asperiores et saepe a\",\n  },\n  {\n    userId: 7,\n    id: 70,\n    title: \"voluptatem laborum magni\",\n    body: \"sunt repellendus quae\\nest asperiores aut deleniti esse accusamus repellendus quia aut\\nquia dolorem unde\\neum tempora esse dolore\",\n  },\n  {\n    userId: 8,\n    id: 71,\n    title: \"et iusto veniam et illum aut fuga\",\n    body: \"occaecati a doloribus\\niste saepe consectetur placeat eum voluptate dolorem et\\nqui quo quia voluptas\\nrerum ut id enim velit est perferendis\",\n  },\n  {\n    userId: 8,\n    id: 72,\n    title: \"sint hic doloribus consequatur eos non id\",\n    body: \"quam occaecati qui deleniti consectetur\\nconsequatur aut facere quas exercitationem aliquam hic voluptas\\nneque id sunt ut aut accusamus\\nsunt consectetur expedita inventore velit\",\n  },\n  {\n    userId: 8,\n    id: 73,\n    title: \"consequuntur deleniti eos quia temporibus ab aliquid at\",\n    body: \"voluptatem cumque tenetur consequatur expedita ipsum nemo quia explicabo\\naut eum minima consequatur\\ntempore cumque quae est et\\net in consequuntur voluptatem voluptates aut\",\n  },\n  {\n    userId: 8,\n    id: 74,\n    title: \"enim unde ratione doloribus quas enim ut sit sapiente\",\n    body: \"odit qui et et necessitatibus sint veniam\\nmollitia amet doloremque molestiae commodi similique magnam et quam\\nblanditiis est itaque\\nquo et tenetur ratione occaecati molestiae tempora\",\n  },\n  {\n    userId: 8,\n    id: 75,\n    title: \"dignissimos eum dolor ut enim et delectus in\",\n    body: \"commodi non non omnis et voluptas sit\\nautem aut nobis magnam et sapiente voluptatem\\net laborum repellat qui delectus facilis temporibus\\nrerum amet et nemo voluptate expedita adipisci error dolorem\",\n  },\n  {\n    userId: 8,\n    id: 76,\n    title: \"doloremque officiis ad et non perferendis\",\n    body: \"ut animi facere\\ntotam iusto tempore\\nmolestiae eum aut et dolorem aperiam\\nquaerat recusandae totam odio\",\n  },\n  {\n    userId: 8,\n    id: 77,\n    title: \"necessitatibus quasi exercitationem odio\",\n    body: \"modi ut in nulla repudiandae dolorum nostrum eos\\naut consequatur omnis\\nut incidunt est omnis iste et quam\\nvoluptates sapiente aliquam asperiores nobis amet corrupti repudiandae provident\",\n  },\n  {\n    userId: 8,\n    id: 78,\n    title: \"quam voluptatibus rerum veritatis\",\n    body: \"nobis facilis odit tempore cupiditate quia\\nassumenda doloribus rerum qui ea\\nillum et qui totam\\naut veniam repellendus\",\n  },\n  {\n    userId: 8,\n    id: 79,\n    title: \"pariatur consequatur quia magnam autem omnis non amet\",\n    body: \"libero accusantium et et facere incidunt sit dolorem\\nnon excepturi qui quia sed laudantium\\nquisquam molestiae ducimus est\\nofficiis esse molestiae iste et quos\",\n  },\n  {\n    userId: 8,\n    id: 80,\n    title: \"labore in ex et explicabo corporis aut quas\",\n    body: \"ex quod dolorem ea eum iure qui provident amet\\nquia qui facere excepturi et repudiandae\\nasperiores molestias provident\\nminus incidunt vero fugit rerum sint sunt excepturi provident\",\n  },\n  {\n    userId: 9,\n    id: 81,\n    title: \"tempora rem veritatis voluptas quo dolores vero\",\n    body: \"facere qui nesciunt est voluptatum voluptatem nisi\\nsequi eligendi necessitatibus ea at rerum itaque\\nharum non ratione velit laboriosam quis consequuntur\\nex officiis minima doloremque voluptas ut aut\",\n  },\n  {\n    userId: 9,\n    id: 82,\n    title: \"laudantium voluptate suscipit sunt enim enim\",\n    body: \"ut libero sit aut totam inventore sunt\\nporro sint qui sunt molestiae\\nconsequatur cupiditate qui iste ducimus adipisci\\ndolor enim assumenda soluta laboriosam amet iste delectus hic\",\n  },\n  {\n    userId: 9,\n    id: 83,\n    title: \"odit et voluptates doloribus alias odio et\",\n    body: \"est molestiae facilis quis tempora numquam nihil qui\\nvoluptate sapiente consequatur est qui\\nnecessitatibus autem aut ipsa aperiam modi dolore numquam\\nreprehenderit eius rem quibusdam\",\n  },\n  {\n    userId: 9,\n    id: 84,\n    title:\n      \"optio ipsam molestias necessitatibus occaecati facilis veritatis dolores aut\",\n    body: \"sint molestiae magni a et quos\\neaque et quasi\\nut rerum debitis similique veniam\\nrecusandae dignissimos dolor incidunt consequatur odio\",\n  },\n  {\n    userId: 9,\n    id: 85,\n    title: \"dolore veritatis porro provident adipisci blanditiis et sunt\",\n    body: \"similique sed nisi voluptas iusto omnis\\nmollitia et quo\\nassumenda suscipit officia magnam sint sed tempora\\nenim provident pariatur praesentium atque animi amet ratione\",\n  },\n  {\n    userId: 9,\n    id: 86,\n    title: \"placeat quia et porro iste\",\n    body: \"quasi excepturi consequatur iste autem temporibus sed molestiae beatae\\net quaerat et esse ut\\nvoluptatem occaecati et vel explicabo autem\\nasperiores pariatur deserunt optio\",\n  },\n  {\n    userId: 9,\n    id: 87,\n    title: \"nostrum quis quasi placeat\",\n    body: \"eos et molestiae\\nnesciunt ut a\\ndolores perspiciatis repellendus repellat aliquid\\nmagnam sint rem ipsum est\",\n  },\n  {\n    userId: 9,\n    id: 88,\n    title: \"sapiente omnis fugit eos\",\n    body: \"consequatur omnis est praesentium\\nducimus non iste\\nneque hic deserunt\\nvoluptatibus veniam cum et rerum sed\",\n  },\n  {\n    userId: 9,\n    id: 89,\n    title: \"sint soluta et vel magnam aut ut sed qui\",\n    body: \"repellat aut aperiam totam temporibus autem et\\narchitecto magnam ut\\nconsequatur qui cupiditate rerum quia soluta dignissimos nihil iure\\ntempore quas est\",\n  },\n  {\n    userId: 9,\n    id: 90,\n    title: \"ad iusto omnis odit dolor voluptatibus\",\n    body: \"minus omnis soluta quia\\nqui sed adipisci voluptates illum ipsam voluptatem\\neligendi officia ut in\\neos soluta similique molestias praesentium blanditiis\",\n  },\n  {\n    userId: 10,\n    id: 91,\n    title: \"aut amet sed\",\n    body: \"libero voluptate eveniet aperiam sed\\nsunt placeat suscipit molestias\\nsimilique fugit nam natus\\nexpedita consequatur consequatur dolores quia eos et placeat\",\n  },\n  {\n    userId: 10,\n    id: 92,\n    title: \"ratione ex tenetur perferendis\",\n    body: \"aut et excepturi dicta laudantium sint rerum nihil\\nlaudantium et at\\na neque minima officia et similique libero et\\ncommodi voluptate qui\",\n  },\n  {\n    userId: 10,\n    id: 93,\n    title: \"beatae soluta recusandae\",\n    body: \"dolorem quibusdam ducimus consequuntur dicta aut quo laboriosam\\nvoluptatem quis enim recusandae ut sed sunt\\nnostrum est odit totam\\nsit error sed sunt eveniet provident qui nulla\",\n  },\n  {\n    userId: 10,\n    id: 94,\n    title: \"qui qui voluptates illo iste minima\",\n    body: \"aspernatur expedita soluta quo ab ut similique\\nexpedita dolores amet\\nsed temporibus distinctio magnam saepe deleniti\\nomnis facilis nam ipsum natus sint similique omnis\",\n  },\n  {\n    userId: 10,\n    id: 95,\n    title: \"id minus libero illum nam ad officiis\",\n    body: \"earum voluptatem facere provident blanditiis velit laboriosam\\npariatur accusamus odio saepe\\ncumque dolor qui a dicta ab doloribus consequatur omnis\\ncorporis cupiditate eaque assumenda ad nesciunt\",\n  },\n  {\n    userId: 10,\n    id: 96,\n    title: \"quaerat velit veniam amet cupiditate aut numquam ut sequi\",\n    body: \"in non odio excepturi sint eum\\nlabore voluptates vitae quia qui et\\ninventore itaque rerum\\nveniam non exercitationem delectus aut\",\n  },\n  {\n    userId: 10,\n    id: 97,\n    title: \"quas fugiat ut perspiciatis vero provident\",\n    body: \"eum non blanditiis soluta porro quibusdam voluptas\\nvel voluptatem qui placeat dolores qui velit aut\\nvel inventore aut cumque culpa explicabo aliquid at\\nperspiciatis est et voluptatem dignissimos dolor itaque sit nam\",\n  },\n  {\n    userId: 10,\n    id: 98,\n    title: \"laboriosam dolor voluptates\",\n    body: \"doloremque ex facilis sit sint culpa\\nsoluta assumenda eligendi non ut eius\\nsequi ducimus vel quasi\\nveritatis est dolores\",\n  },\n  {\n    userId: 10,\n    id: 99,\n    title: \"temporibus sit alias delectus eligendi possimus magni\",\n    body: \"quo deleniti praesentium dicta non quod\\naut est molestias\\nmolestias et officia quis nihil\\nitaque dolorem quia\",\n  },\n  {\n    userId: 10,\n    id: 100,\n    title: \"at nam consequatur ea labore ea harum\",\n    body: \"cupiditate quo est a modi nesciunt soluta\\nipsa voluptas error itaque dicta in\\nautem qui minus magnam et distinctio eum\\naccusamus ratione error aut\",\n  },\n];\n","import React, { useEffect, useState } from \"react\";\nimport { BiSort } from \"react-icons/bi\";\nimport { MdNavigateBefore, MdNavigateNext, MdSearch } from \"react-icons/md\";\n\nconst FC_makeID = (length: number = 5): string => {\n  let result: string = \"\";\n  let characters: string =\n    \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\n  let charactersLength = characters.length;\n  for (let i: number = 0; i < length; i++) {\n    result += characters.charAt(Math.floor(Math.random() * charactersLength));\n  }\n  return result;\n};\n\nexport const sortThisColumn = (\n  tableId: string,\n  colIndex: number = 0,\n  dir: \"asc\" | \"desc\" = \"asc\"\n) => {\n  var table,\n    rows,\n    switching,\n    i,\n    x,\n    y,\n    shouldSwitch,\n    switchcount = 0;\n  table = document.getElementById(tableId) as HTMLTableElement;\n  switching = true;\n  /* Make a loop that will continue until\n  no switching has been done: */\n  if (table) {\n    while (switching) {\n      //start by saying: no switching is done:\n      switching = false;\n      rows = table.rows;\n      /*Loop through all table rows (except the\n    first, which contains table headers):*/\n      for (i = 1; i < rows.length - 1; i++) {\n        //start by saying there should be no switching:\n        shouldSwitch = false;\n        /*Get the two elements you want to compare,\n      one from current row and one from the next:*/\n        x = rows[i].getElementsByTagName(\"TD\")[colIndex];\n        y = rows[i + 1].getElementsByTagName(\"TD\")[colIndex];\n        /*check if the two rows should switch place,\n      based on the direction, asc or desc:*/\n        if (dir === \"asc\" && x && y) {\n          if (x.innerHTML.toLowerCase() > y.innerHTML.toLowerCase()) {\n            //if so, mark as a switch and break the loop:\n            shouldSwitch = true;\n            break;\n          }\n        } else if (dir === \"desc\" && x && y) {\n          if (x.innerHTML.toLowerCase() < y.innerHTML.toLowerCase()) {\n            //if so, mark as a switch and break the loop:\n            shouldSwitch = true;\n            break;\n          }\n        }\n      }\n      if (shouldSwitch && rows[i].parentNode) {\n        /*If a switch has been marked, make the switch\n      and mark that a switch has been done:*/\n        rows[i].parentNode!.insertBefore(rows[i + 1], rows[i]);\n        switching = true;\n        //Each time a switch is done, increase this count by 1:\n        switchcount++;\n      } else {\n        /*If no switching has been done AND the direction is \"asc\",\n      set the direction to \"desc\" and run the while loop again.*/\n        if (switchcount === 0 && dir === \"asc\") {\n          dir = \"desc\";\n          switching = true;\n        }\n      }\n      // if (i === 0) continue;\n      // rows.cells[i].style.backgroundColor = \"blue\";\n    }\n  }\n};\n\nexport interface TableColumnsInterface {\n  columnTitle: JSX.Element | string;\n  alignText: string;\n  padding?: string;\n  isSortAllowed?: boolean;\n}\n\ninterface TableProps {\n  columns: TableColumnsInterface[];\n  rows: Function;\n  hideColumns?: boolean;\n  pagination?: boolean;\n  search?: boolean;\n  tableSize?: string;\n  tableClass?: string;\n  tableId?: string;\n  rounded?: boolean;\n  searchBG?: string;\n  thColor?: string;\n  loading?: boolean;\n}\n\nconst Table: React.FC<TableProps> = (props) => {\n  const startPage = 1;\n  const tableId =\n    !props.tableId || props.tableId === \"myTable\" ? FC_makeID() : props.tableId;\n  let table: HTMLElement, tr: HTMLCollectionOf<HTMLTableRowElement>;\n  const [totalItems, setTotalItems] = useState<number>(0);\n  const [totalPages, setTotalPages] = useState<number>(1);\n  const [currentPage, setCurrentPage] = useState<number>(1);\n  const [pages, setPages] = useState<number[]>();\n  const [pageSize, setPageSize] = useState<number>(10);\n  const [startIndex, setStartIndex] = useState<number>(0);\n  const [endIndex, setEndIndex] = useState<number>(0);\n\n  useEffect(() => {\n    props.pagination && tablePagination();\n  });\n\n  const filterTable = (\n    data: string,\n    filterType?: \"default\" | \"field\"\n  ): void => {\n    var filter, tr, td, rows: number, cols: number, txtValue;\n    if (filterType === \"field\" && data === \"all\") data = \"\";\n    filter = data.toLowerCase();\n    table = document.getElementById(tableId!)!;\n    tr = table.getElementsByTagName(\"tr\");\n    for (rows = 0; rows < tr.length; rows++) {\n      for (cols = 0; cols < props.columns.length; cols++) {\n        td = tr[rows].getElementsByTagName(\"td\")[cols];\n        if (td) {\n          txtValue = td.textContent || td.innerText;\n          if (txtValue.toLowerCase().indexOf(filter) > -1) {\n            tr[rows].style.display = \"\";\n            break;\n          } else {\n            tr[rows].style.display = \"none\";\n          }\n        }\n      }\n    }\n  };\n\n  const tablePagination = (): void => {\n    table = document.getElementById(tableId)!;\n    tr = table.getElementsByTagName(\"tr\");\n    setTotalItems(tr.length);\n    setTotalPages(Math.ceil(totalItems / pageSize));\n\n    // calculate start and end item indexes on the current page\n    setStartIndex((currentPage - 1) * pageSize);\n    setEndIndex(Math.min(startIndex + pageSize - 1, totalItems - 1));\n\n    /**\n     * TODO!\n     * There is a problem with this condition\n     */\n    let _pages = Array.from(Array(totalPages + 1 - startPage).keys()).map(\n      (i) => startPage + i\n    );\n    if (!pages || _pages.length !== pages.length) {\n      setPages(_pages);\n    }\n\n    for (let i: number = 0; i < tr.length; i++) {\n      if (i >= startIndex && i <= endIndex) {\n        tr[i].style.display = \"\";\n      } else {\n        tr[i].style.display = \"none\";\n      }\n    }\n  };\n\n  return (\n    <div className={`${props.tableSize} overflow-x-auto`}>\n      {/* search box  */}\n      {props.search && (\n        <div className={`${props.searchBG} w-full mb-2`}>\n          {props.search && (\n            <div className=\"bg-white rounded flex items-center w-full p-2 border-2 border-gray-500\">\n              <MdSearch className=\"h-5 w-5 fill-current text-gray-400\" />\n              <input\n                type=\"search\"\n                placeholder=\"search\"\n                onChange={(e) => filterTable(e.target.value)}\n                className=\"w-full h-6 pl-4 text-sm outline-none focus:outline-none bg-white\"\n                disabled={props.loading}\n              />\n\n              {props.pagination && (\n                <div className=\"select\">\n                  <select\n                    className=\"text-base outline-none focus:outline-none bg-white\"\n                    onChange={(e) => setPageSize(Number(e.target.value))}\n                    disabled={props.loading}\n                  >\n                    <option value=\"10\">10</option>\n                    <option value=\"25\">25</option>\n                    <option value=\"50\">50</option>\n                    <option value=\"100\">100</option>\n                  </select>\n                </div>\n              )}\n            </div>\n          )}\n        </div>\n      )}\n      <div className=\"overflow-x-auto w-full\">\n        <table\n          className={\n            props.tableClass\n              ? props.tableClass\n              : `w-full shadow ${\n                  props.rounded && \"sm:rounded-lg\"\n                } table-auto order-table`\n          }\n          id={tableId}\n        >\n          {!props.hideColumns && (\n            <thead className=\"bg-white border-b-2 border-gray-300 text-gray-600 font-bold text-base\">\n              <tr\n                className={`text-left tracking-wide bg-${props.thColor}-100 border-b-2 border-${props.thColor}-500 text-${props.thColor}-600`}\n              >\n                {props.columns.map((column, index) => (\n                  <th\n                    key={index}\n                    className={`${column.padding} text-${\n                      column.alignText\n                    } px-3 py-2 ${column.isSortAllowed && \"cursor-pointer\"}`}\n                    onClick={() =>\n                      column.isSortAllowed && sortThisColumn(tableId, index)\n                    }\n                  >\n                    <div className=\"flex items-center gap-1\">\n                      {column.columnTitle}\n                      {column.isSortAllowed && <BiSort />}\n                    </div>\n                  </th>\n                ))}\n              </tr>\n            </thead>\n          )}\n          <tbody id=\"table-data\" className=\"bg-white text-black text-base\">\n            {props.rows()}\n          </tbody>\n        </table>\n        {props.pagination && (\n          <div className=\"sm:flex-1 sm:flex sm:items-center sm:justify-between mt-4 work-sans\">\n            <div>\n              <span className=\"text-xs xs:text-sm text-gray-900\">\n                Showing 1 to {pageSize} of {totalItems - 1} Entries\n              </span>\n            </div>\n            <div>\n              <nav className=\"inline-flex shadow-sm\">\n                <div>\n                  <button\n                    type=\"button\"\n                    className={`inline-flex items-center px-2 py-2 rounded-l-md border border-gray-300 text-sm font-medium text-gray-500 ${\n                      currentPage !== 1 && \"bg-white\"\n                    }`}\n                    aria-label=\"Previous\"\n                    disabled={currentPage === 1 || props.loading}\n                    onClick={() => setCurrentPage(currentPage - 1)}\n                  >\n                    <MdNavigateBefore className=\"h-5 w-5\" />\n                  </button>\n                </div>\n                <div>\n                  {pages &&\n                    pages.map((page, pageIndex) => (\n                      <button\n                        key={pageIndex}\n                        className={`-ml-px inline-flex items-center px-4 py-2 border border-gray-300 text-sm font-medium text-gray-700 ${\n                          page !== currentPage\n                            ? \"bg-white\"\n                            : \"bg-gray-100 cursor-default\"\n                        }`}\n                        disabled={page === currentPage || props.loading}\n                        onClick={() => setCurrentPage(page)}\n                      >\n                        {page}\n                      </button>\n                    ))}\n                </div>\n                <div>\n                  <button\n                    type=\"button\"\n                    className={`inline-flex items-center px-2 py-2 rounded-r-md border border-gray-300 text-sm leading-5 font-medium text-gray-500 ${\n                      currentPage !== totalPages && \"bg-white\"\n                    }`}\n                    aria-label=\"Next\"\n                    disabled={currentPage === totalPages || props.loading}\n                    onClick={() => setCurrentPage(currentPage + 1)}\n                  >\n                    <MdNavigateNext className=\"h-5 w-5\" />\n                  </button>\n                </div>\n              </nav>\n            </div>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default Table;\n","import axios from \"axios\";\nimport { Dispatch } from \"redux\";\nimport { ActionTypes } from \"./types\";\nimport {\n  AssignRoleToUserActionInterface,\n  CustomeAccessInterface,\n  UserInterface,\n} from \"../shared/interfaces\";\nimport { API } from \"../utils/api\";\nimport { setAxiosToken } from \"../utils/AxiosToken\";\n\n/**\n * * ****************************** INTERFACES *****************************\n */\n\ninterface FetchUsersAction {\n  type: ActionTypes.FETCH_USERS_ACCESS;\n  payload: UserInterface[];\n}\n\ninterface BlockUserToSystem {\n  type: ActionTypes.BLOCK_USER_TO_SYSTEM | ActionTypes.UNBLOCK_USER_TO_SYSTEM;\n  payload: string;\n}\n\ninterface AssignRoleToUserAction {\n  type: ActionTypes.ASSIGN_ROLE_TO_USER;\n  payload: AssignRoleToUserActionInterface;\n}\n\ninterface CustomizeUserAccessAction {\n  type: ActionTypes.CUSTOMIZE_USER_ACCESS;\n  payload: CustomeAccessInterface;\n}\n\ninterface ResetUserAccessAction {\n  type: ActionTypes.RESET_USER_ACCESS;\n  payload: string;\n}\n\ntype fetchUserAccessInterface = {\n  users: UserInterface[];\n  next: {\n    page: number;\n    limit: number;\n  } | null;\n  previous: {\n    page: number;\n    limit: number;\n  } | null;\n  total_users: number;\n};\n\nexport enum documentValidationStatus {\n  waiting = \"waiting\",\n  approved = \"approved\",\n  rejected = \"rejected\",\n}\n\nexport interface VerifyDocumentInterface {\n  user_id: string;\n  doc_id: string;\n  validation_status: \"waiting\" | \"approved\" | \"rejected\";\n  validated_by: {\n    user_id: string;\n    comment: string;\n    validation_status: \"waiting\" | \"approved\" | \"rejected\";\n    date?: string;\n  };\n  in_education: boolean;\n  disability: boolean;\n}\n\ninterface VerifyAllDocumentAction {\n  type: ActionTypes.VERIFY_ALL_DOCUMENT;\n  payload: VerifyDocumentInterface;\n}\n\nexport type AccessUserActionType =\n  | FetchUsersAction\n  | BlockUserToSystem\n  | AssignRoleToUserAction\n  | CustomizeUserAccessAction\n  | ResetUserAccessAction\n  | VerifyAllDocumentAction;\n\n/**\n * * ****************************** ACTIONS *****************************\n */\n\nexport const fetchUserAccess = () => {\n  return async (dispatch: Dispatch) => {\n    try {\n      setAxiosToken();\n      const res = await axios.get<fetchUserAccessInterface>(\n        `${API.AUTH}/users?page=1&limit=500`\n      );\n      console.log({ users_response: res });\n      dispatch<FetchUsersAction>({\n        type: ActionTypes.FETCH_USERS_ACCESS,\n        payload: res.data.users,\n      });\n    } catch (error) {\n      console.error({ user_error: error });\n    }\n  };\n};\n\nexport const blockUserToSystem = (data: string) => {\n  console.log({ data });\n  return async (dispatch: Dispatch) => {\n    dispatch<BlockUserToSystem>({\n      type: ActionTypes.BLOCK_USER_TO_SYSTEM,\n      payload: data,\n    });\n  };\n};\n\nexport const unBlockUserToSystem = (data: string) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<BlockUserToSystem>({\n      type: ActionTypes.UNBLOCK_USER_TO_SYSTEM,\n      payload: data,\n    });\n  };\n};\n\nexport const assignRoleToUserAccess = (\n  data: AssignRoleToUserActionInterface\n) => {\n  console.log({ data });\n  return async (dispatch: Dispatch) => {\n    dispatch<AssignRoleToUserAction>({\n      type: ActionTypes.ASSIGN_ROLE_TO_USER,\n      payload: data,\n      // payload: response.data,\n    });\n  };\n};\n\nexport const customizeUserAccess = (data: CustomeAccessInterface) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<CustomizeUserAccessAction>({\n      type: ActionTypes.CUSTOMIZE_USER_ACCESS,\n      payload: data,\n    });\n  };\n};\n\nexport const resetUserAccess = (data: string) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<ResetUserAccessAction>({\n      type: ActionTypes.RESET_USER_ACCESS,\n      payload: data,\n    });\n  };\n};\n\nexport const verifyAllDocument = (data: VerifyDocumentInterface) => {\n  console.log({ data });\n  return async (dispatch: Dispatch) => {\n    dispatch<VerifyAllDocumentAction>({\n      type: ActionTypes.VERIFY_ALL_DOCUMENT,\n      payload: data,\n    });\n  };\n};\n","import axios from \"axios\";\nimport { Dispatch } from \"redux\";\nimport { ActionTypes } from \"./types\";\nimport { API } from \"../utils/api\";\nimport { setAxiosToken } from \"../utils/AxiosToken\";\nimport { errorToText } from \"../utils/errors\";\nimport { PlansTypeInterface, SessionPlanInterface } from \"../interfaces\";\n\n/**\n * * ****************************** INTERFACES *****************************\n */\n\n// GET ACTIVE PLAN TYPES\nexport interface GetPlansTypesAction {\n  type: ActionTypes.GET_PLANS_TYPES;\n  payload: PlansTypeInterface[];\n}\n\n// GET INACTIVE PLAN TYPES\nexport interface GetDeletedPlansTypesAction {\n  type: ActionTypes.GET_DELETED_PLANS_TYPES;\n  payload: PlansTypeInterface[];\n}\n\n// CREATE PLAN TYPE\nexport interface CreatePlansTypeAction {\n  type: ActionTypes.CREATE_PLAN_TYPE;\n  payload: PlansTypeInterface;\n}\n\n// UPDATE PLAN TYPE\nexport interface UpdatePlansTypeAction {\n  type: ActionTypes.UPDATE_PLAN_TYPE;\n  payload: PlansTypeInterface;\n}\n\n// DELETE PLAN TYPE\nexport interface DeletePlansTypeAction {\n  type: ActionTypes.DELETE_PLAN_TYPE;\n  payload: PlansTypeInterface;\n}\n\n// SET PLAN TYPE =====================================\nexport interface setSelectedPlanTypeActions {\n  type: ActionTypes.SELECT_PLAN_TYPE;\n  payload: PlansTypeInterface | \"all\";\n}\n\n// GET ALL SESSION PLAN\nexport interface GetAllSessionPlansAction {\n  type: ActionTypes.GET_ALL_SESSION_PLANS;\n  payload: SessionPlanInterface[];\n}\n\n// GET ACTIVE SESSION PLAN\nexport interface GetActiveSessionPlanAction {\n  type: ActionTypes.GET_ACTIVE_SESSION_PLANS;\n  payload: SessionPlanInterface | \"none\";\n}\n\n// CREATE SESSION PLAN\nexport interface CreateSessionPlansAction {\n  type: ActionTypes.CREATE_SESSION_PLAN;\n  payload: SessionPlanInterface;\n}\n\n// UPDATE SESSION PLAN\nexport interface UpdateSessionPlansAction {\n  type: ActionTypes.UPDATE_SESSION_PLAN;\n  payload: SessionPlanInterface;\n}\n\n// ACTIVATE SESSION PLAN\nexport interface ActivateSessionPlansAction {\n  type: ActionTypes.SESSION_ACTIVATION;\n  payload: SessionPlanInterface;\n}\n\n// DELETE SESSION PLAN\nexport interface DeleteSessionPlanAction {\n  type: ActionTypes.DELETE_SESSION_PLAN;\n  payload: string;\n}\n\nexport type SessionActionType =\n  | GetPlansTypesAction\n  | GetDeletedPlansTypesAction\n  | CreatePlansTypeAction\n  | UpdatePlansTypeAction\n  | DeletePlansTypeAction\n  | GetAllSessionPlansAction\n  | GetActiveSessionPlanAction\n  | CreateSessionPlansAction\n  | UpdateSessionPlansAction\n  | ActivateSessionPlansAction\n  | DeleteSessionPlanAction\n  | setSelectedPlanTypeActions;\n\n/**\n * * ****************************** ACTIONS *****************************\n */\n\n// GET ACTIVE PLAN TYPES ==========================\nexport const GetPlansTypes = (callback: Function) => {\n  callback(true, \"\");\n  return async (dispatch: Dispatch) => {\n    try {\n      setAxiosToken();\n      const res = await axios.get<PlansTypeInterface[]>(\n        `${API.CLAIMING}/session-type`\n      );\n      console.log({ GET_PLANS_TYPES: res.data });\n      let plan_types: PlansTypeInterface[] = [];\n      if (res.status === 200) {\n        // setApplications(res.data);\n        if (res.data !== null && res.data.length > 0) {\n          plan_types = res.data;\n        }\n      }\n      dispatch<GetPlansTypesAction>({\n        type: ActionTypes.GET_PLANS_TYPES,\n        payload: plan_types,\n      });\n      callback(false, \"\");\n    } catch (error) {\n      console.error({ error: errorToText(error) });\n      callback(false, errorToText(error));\n    }\n  };\n};\n\n// GET ACTIVE PLAN TYPES ==========================\nexport const GetDeletedPlansTypes = (callback: Function) => {\n  callback(true, \"\");\n  return async (dispatch: Dispatch) => {\n    try {\n      setAxiosToken();\n      const res = await axios.get<PlansTypeInterface[]>(\n        `${API.CLAIMING}/session-type/deleted`\n      );\n      console.log({ GET_DELETED_PLANS_TYPES: res.data });\n      let plan_types: PlansTypeInterface[] = [];\n      if (res.status === 200) {\n        // setApplications(res.data);\n        if (res.data !== null && res.data.length > 0) {\n          plan_types = res.data;\n        }\n      }\n      dispatch<GetDeletedPlansTypesAction>({\n        type: ActionTypes.GET_DELETED_PLANS_TYPES,\n        payload: plan_types,\n      });\n      callback(false, \"\");\n    } catch (error) {\n      console.error({ error: errorToText(error) });\n      callback(false, errorToText(error));\n    }\n  };\n};\n\n// CREATE PLAN TYPE\nexport const createPlanType = (\n  data: PlansTypeInterface\n): CreatePlansTypeAction => {\n  return {\n    type: ActionTypes.CREATE_PLAN_TYPE,\n    payload: data,\n  };\n};\n\n// UPDATE PLAN TYPE\nexport const updatePlanType = (\n  data: PlansTypeInterface\n): UpdatePlansTypeAction => {\n  return {\n    type: ActionTypes.UPDATE_PLAN_TYPE,\n    payload: data,\n  };\n};\n\n// DELETE PLAN TYPE\nexport const deletePlanType = (\n  data: PlansTypeInterface\n): DeletePlansTypeAction => {\n  return {\n    type: ActionTypes.DELETE_PLAN_TYPE,\n    payload: data,\n  };\n};\n\n// SELECT PLAN TYPES ==========================\nexport const setSelectedPlanType = (\n  thisType: PlansTypeInterface | \"all\"\n): setSelectedPlanTypeActions => {\n  console.log({ thisType });\n  return {\n    type: ActionTypes.SELECT_PLAN_TYPE,\n    payload: thisType,\n  };\n};\n\n// GET ACTIVE PLAN TYPES ==========================\nexport const getActiveSessionPlan = (callback: Function) => {\n  callback(true, \"\");\n  return async (dispatch: Dispatch) => {\n    try {\n      setAxiosToken();\n      const res = await axios.get<SessionPlanInterface>(\n        `${API.CLAIMING}/session/active/`\n      );\n      console.log({ GET_ACTIVE_SESSION_PLANS: res.data });\n      let session_plan: SessionPlanInterface | undefined = undefined;\n      // if (res.status === 200) {\n      //   // setApplications(res.data);\n      // }\n      if (res.data && res.data.is_active !== undefined) {\n        session_plan = res.data;\n      }\n      console.log({ session_plan: res.data });\n\n      dispatch<GetActiveSessionPlanAction>({\n        type: ActionTypes.GET_ACTIVE_SESSION_PLANS,\n        payload: session_plan ? session_plan : \"none\",\n      });\n      callback(false, \"\", session_plan ? session_plan : \"none\");\n    } catch (error) {\n      console.error({ error: errorToText(error) });\n      callback(false, errorToText(error));\n    }\n  };\n};\n\n// GET ALL PLAN TYPES ==========================\nexport const GetAllSessionPlans = (callback: Function) => {\n  callback(true, \"\");\n  return async (dispatch: Dispatch) => {\n    try {\n      setAxiosToken();\n      const res = await axios.get<SessionPlanInterface[]>(\n        `${API.CLAIMING}/session/`\n      );\n      console.log({ GET_ALL_SESSION_PLANS: res.data });\n      let session_data: SessionPlanInterface[] = [];\n      if (res.status === 200) {\n        // setApplications(res.data);\n        if (res.data !== null && res.data.length > 0) {\n          session_data = res.data;\n        }\n      }\n      dispatch<GetAllSessionPlansAction>({\n        type: ActionTypes.GET_ALL_SESSION_PLANS,\n        payload: session_data,\n      });\n      callback(false, \"\", session_data);\n    } catch (error) {\n      console.error({ error: errorToText(error) });\n      callback(false, errorToText(error));\n    }\n  };\n};\n\n// CREATE SESSION PLAN\nexport const createSessionPlan = (\n  data: SessionPlanInterface\n): CreateSessionPlansAction => {\n  return {\n    type: ActionTypes.CREATE_SESSION_PLAN,\n    payload: data,\n  };\n};\n\n// UPDATE SESSION PLAN\nexport const updateSessionPlan = (\n  data: SessionPlanInterface\n): UpdateSessionPlansAction => {\n  return {\n    type: ActionTypes.UPDATE_SESSION_PLAN,\n    payload: data,\n  };\n};\n\n// ACTIVATE SESSION PLAN\nexport const sessionActivation = (\n  data: SessionPlanInterface\n): ActivateSessionPlansAction => {\n  return {\n    type: ActionTypes.SESSION_ACTIVATION,\n    payload: data,\n  };\n};\n\n// DELETE SESSION PLAN\nexport const deleteSessionPlan = (data: string): DeleteSessionPlanAction => {\n  return {\n    type: ActionTypes.DELETE_SESSION_PLAN,\n    payload: data,\n  };\n};\n","import React, { FC, ReactElement, ReactNode } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Auth, System } from \"../../actions\";\nimport { StoreState } from \"../../reducers\";\nimport { NavToogle, PageHasSubNav } from \"../../actions\";\nimport { MdBrightness1, MdSearch } from \"react-icons/md\";\n\n// props for the component\ninterface AppProps {\n  auth: Auth;\n  system: System;\n  PageHasSubNav: Function;\n  NavToogle: Function;\n  children: ReactNode;\n}\n//\ninterface AppState {\n  loading: boolean;\n}\n\nclass _SideNavigation extends React.Component<AppProps, AppState> {\n  constructor(props: AppProps) {\n    super(props);\n\n    this.state = {\n      loading: false,\n    };\n  }\n\n  componentDidMount = () => this.props.PageHasSubNav(true);\n  componentWillUnmount = () => this.props.PageHasSubNav(false);\n\n  render() {\n    const isAuthenticated = this.props.auth.isAuthenticated;\n\n    if (isAuthenticated === false) {\n      return null;\n    }\n\n    const navActive = this.props.system.navigation;\n    return (\n      <div\n        className={`fixed w-48 p-1 pr-2 pl-6 text-gray-700 bg-white ${\n          navActive === true ? \"lg:left-16  left-16\" : \" -left-72 lg:left-16\"\n        }  top-0 bottom-0 pt-20 z-30 shadow-lg  transition-all duration-500 ease-in-out overflow-y-auto`}\n      >\n        {this.props.children}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = ({\n  auth,\n  system,\n}: StoreState): { auth: Auth; system: System } => {\n  return { auth: auth, system: system };\n};\n\nexport const SideNavigation = connect(mapStateToProps, {\n  NavToogle,\n  PageHasSubNav,\n})(_SideNavigation);\n\n//************************************ FORM SEARCH **************************************** */\n\ntype SearchComponentInterface = {\n  data: any[];\n};\n\nexport const Search: FC<SearchComponentInterface> = ({\n  data,\n}): ReactElement => {\n  return (\n    <div className=\"m-1 rounded-md shadow-md border border-blue-400 bg-white p-1 flex \">\n      <label htmlFor=\"search-text\" className=\"inline-block text-2xl\">\n        <MdSearch className=\"inline-block text-blue-400\" />\n      </label>\n      <input\n        type=\"search\"\n        className=\"outline-none bg-transparent flex-1 pl-1\"\n        placeholder=\"Search\"\n        id=\"search-text\"\n      />\n    </div>\n  );\n};\n\n//************************************ FORM SEARCH **************************************** */\n\ntype MainItemComponentInterface = {\n  title: string;\n  icon?: any;\n  active?: boolean;\n  count?: number;\n};\n\n/**\n *\n * @param param0\n * @returns\n */\nexport const MainItem: FC<MainItemComponentInterface> = ({\n  title = \"\",\n  icon = MdBrightness1,\n  active = false,\n  count = 0,\n}): ReactElement => {\n  const IconDefined = icon;\n  return (\n    <section\n      className={`${\n        active === true\n          ? \"bg-blue-500 text-white font-bold\"\n          : \"bg-blue-100 text-blue-800\"\n      } mb-1 hover:font-bold py-1 hover:bg-blue-400 hover:text-white --font-bold  px-2 rounded-md flex cursor-pointer items-center`}\n    >\n      <section className=\"flex-1\">\n        <IconDefined className=\"inline-block mr-1 text-xs\" />\n        <span>{title}</span>\n      </section>\n\n      {count > 0 ? (\n        <span className=\"px-0.5 my-1 text-xs bg-blue-600 text-white rounded-full\">\n          {count}\n        </span>\n      ) : null}\n    </section>\n  );\n};\n\n//************************************ FORM SEARCH **************************************** */\n\ntype SubItemContainerComponentInterface = {\n  children: ReactNode;\n};\n\n/**\n *\n * @param param0\n * @returns\n */\nexport const SubItemContainer: FC<SubItemContainerComponentInterface> = ({\n  children,\n}): ReactElement => {\n  return (\n    <div className=\"ml-3 overflow-y-auto border-l-2 border-blue-200 -mt-1 pt-2 mb-2 pl-1 cursor-pointer\">\n      {children}\n    </div>\n  );\n};\n\n//************************************ FORM SEARCH **************************************** */\n\ntype SubItemComponentInterface = {\n  title: string;\n  icon?: any;\n  active?: boolean;\n  count?: number;\n};\n\n/**\n *\n * @param param0\n * @returns\n * @important Remenber to use these components inside the <SubItemContainer>...</SubItemContainer>\n */\nexport const SubItem: FC<SubItemComponentInterface> = ({\n  title = \"\",\n  icon = MdBrightness1,\n  active = false,\n  count = 0,\n}): ReactElement => {\n  const IconDefined = icon;\n\n  return (\n    <div\n      className={`animate__animated animate__zoomIn animate__faster ${\n        active === true ? \"bg-blue-500 text-white font-bold\" : \" text-blue-800\"\n      } text-blue-800 bg-blue-200 rounded-md px-1 mb-1 flex items-center py-1 font-bold`}\n    >\n      <IconDefined\n        className={`inline-block mr-0.1 text-xs ${\n          active === true ? \"text-white\" : \"\"\n        }`}\n      />\n      <span\n        className={`inline-block pl-1 ${active === true ? \"text-white\" : \"\"}`}\n      >\n        {title}\n      </span>\n      {count >= 1 ? (\n        <span\n          className={`text-sm fint-bold ${active === true ? \"text-white\" : \"\"}`}\n        >\n          {count}\n        </span>\n      ) : null}\n    </div>\n  );\n};\n","import axios from \"axios\";\nimport { Dispatch } from \"redux\";\nimport { ActionTypes } from \"./types\";\nimport {\n  CandidatesInterface,\n  DocumentCategoryInterface,\n  DocumentFieldsInterface,\n  DocumentSubCategoryInterface,\n} from \"../shared/interfaces\";\nimport { API } from \"../utils/api\";\nimport { setAxiosToken } from \"../utils/AxiosToken\";\nimport { errorToText } from \"../utils/errors\";\nimport { VerifyDocumentInterface } from \"./users\";\n\n/**\n * * ****************************** INTERFACES *****************************\n */\n\n// CATEGORY\nexport interface GetDocumentCategoryAction {\n  type: ActionTypes.GET_DOCUMENT_CATEGORY;\n  payload: DocumentCategoryInterface[];\n}\n\nexport interface CreateDocumentCategoryAction {\n  type: ActionTypes.CREATE_DOCUMENT_CATEGORY;\n  payload: DocumentCategoryInterface;\n}\n\nexport interface UpdateDocumentCategoryAction {\n  type: ActionTypes.UPDATE_DOCUMENT_CATEGORY;\n  payload: DocumentCategoryInterface;\n}\n\nexport interface DeleteDocumentCategoryAction {\n  type: ActionTypes.DELETE_DOCUMENT_CATEGORY;\n  payload: string;\n}\n\n// SUB CATEGORY\nexport interface GetDocumentSubCategoryAction {\n  type: ActionTypes.GET_DOCUMENT_SUB_CATEGORY;\n  payload: DocumentSubCategoryInterface[];\n}\n\nexport interface CreateDocumentSubCategoryAction {\n  type: ActionTypes.CREATE_DOCUMENT_SUB_CATEGORY;\n  payload: DocumentSubCategoryInterface;\n}\n\nexport interface UpdateDocumentSubCategoryAction {\n  type: ActionTypes.UPDATE_DOCUMENT_SUB_CATEGORY;\n  payload: DocumentSubCategoryInterface;\n}\n\nexport interface DeleteDocumentSubCategoryAction {\n  type: ActionTypes.DELETE_DOCUMENT_SUB_CATEGORY;\n  payload: string;\n}\n\n// FIELDS\nexport interface GetDocumentFieldsAction {\n  type: ActionTypes.GET_DOCUMENT_FIELDS;\n  payload: DocumentFieldsInterface[];\n}\n\nexport interface CreateDocumentFieldsAction {\n  type: ActionTypes.CREATE_DOCUMENT_FIELDS;\n  payload: DocumentFieldsInterface;\n}\n\nexport interface UpdateDocumentFieldsAction {\n  type: ActionTypes.UPDATE_DOCUMENT_FIELDS;\n  payload: DocumentFieldsInterface;\n}\n\nexport interface DeleteDocumentFieldsAction {\n  type: ActionTypes.DELETE_DOCUMENT_FIELDS;\n  payload: string;\n}\n\n// DOCUMENT CHECKING\nexport interface GetCandidatesInInstituteAtion {\n  type: ActionTypes.GET_CANDIDATE_IN_INSTITUTE;\n  payload: CandidatesInterface[];\n}\n\nexport interface VerifyDocumentAction {\n  type: ActionTypes.VERIFY_DOCUMENT;\n  payload: VerifyDocumentInterface;\n}\n\nexport type DocumentCategoryActionType =\n  | GetDocumentCategoryAction\n  | CreateDocumentCategoryAction\n  | UpdateDocumentCategoryAction\n  | DeleteDocumentCategoryAction\n  | GetDocumentSubCategoryAction\n  | CreateDocumentSubCategoryAction\n  | UpdateDocumentSubCategoryAction\n  | DeleteDocumentSubCategoryAction\n  | GetDocumentFieldsAction\n  | CreateDocumentFieldsAction\n  | UpdateDocumentFieldsAction\n  | DeleteDocumentFieldsAction\n  | GetCandidatesInInstituteAtion\n  | VerifyDocumentAction;\n\n/**\n * * ****************************** ACTIONS *****************************\n */\n\n// CATEGORY\n\nexport const getDocumentCategory = () => {\n  return async (dispatch: Dispatch) => {\n    try {\n      setAxiosToken();\n      const res = await axios.get(`${API.AUTH}/detailcategory`);\n      console.log({ docCategory: res });\n      dispatch<GetDocumentCategoryAction>({\n        type: ActionTypes.GET_DOCUMENT_CATEGORY,\n        payload: res.data,\n      });\n    } catch (error) {\n      console.error({ error: errorToText(error) });\n    }\n  };\n};\n\nexport const createDocumentCategory = (data: DocumentCategoryInterface) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<CreateDocumentCategoryAction>({\n      type: ActionTypes.CREATE_DOCUMENT_CATEGORY,\n      payload: data,\n    });\n  };\n};\n\nexport const updateDocumentCategory = (data: DocumentCategoryInterface) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<UpdateDocumentCategoryAction>({\n      type: ActionTypes.UPDATE_DOCUMENT_CATEGORY,\n      payload: data,\n    });\n  };\n};\n\nexport const deleteDocumentCategory = (data: string) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<DeleteDocumentCategoryAction>({\n      type: ActionTypes.DELETE_DOCUMENT_CATEGORY,\n      payload: data,\n    });\n  };\n};\n\n// SUB CATEGORY\nexport const getDocumentSubCategory = () => {\n  return async (dispatch: Dispatch) => {\n    try {\n      setAxiosToken();\n      const res = await axios.get<DocumentSubCategoryInterface[]>(\n        `${API.AUTH}/detailsubcategory`\n      );\n      console.log({ docSubCategory: res });\n      dispatch<GetDocumentSubCategoryAction>({\n        type: ActionTypes.GET_DOCUMENT_SUB_CATEGORY,\n        payload: res.data,\n        // payload: response.data,\n      });\n    } catch (error) {\n      console.log({ doc_SUB_category_error: error });\n    }\n  };\n};\n\nexport const createDocumentSubCategory = (\n  data: DocumentSubCategoryInterface\n) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<CreateDocumentSubCategoryAction>({\n      type: ActionTypes.CREATE_DOCUMENT_SUB_CATEGORY,\n      payload: data,\n    });\n  };\n};\n\nexport const updateDocumentSubCategory = (\n  data: DocumentSubCategoryInterface\n) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<UpdateDocumentSubCategoryAction>({\n      type: ActionTypes.UPDATE_DOCUMENT_SUB_CATEGORY,\n      payload: data,\n    });\n  };\n};\n\nexport const deleteDocumentSubCategory = (data: string) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<DeleteDocumentSubCategoryAction>({\n      type: ActionTypes.DELETE_DOCUMENT_SUB_CATEGORY,\n      payload: data,\n    });\n  };\n};\n\n// FIELDS\nexport const getDocumentFields = () => {\n  return async (dispatch: Dispatch) => {\n    try {\n      setAxiosToken();\n      const res = await axios.get<DocumentFieldsInterface[]>(\n        `${API.AUTH}/categorysubcatedata`\n      );\n      console.log({ docFields: res });\n      dispatch<GetDocumentFieldsAction>({\n        type: ActionTypes.GET_DOCUMENT_FIELDS,\n        payload: res.data,\n        // payload: response.data,\n      });\n    } catch (error) {\n      console.log({ doc_SUB_category_error: error });\n    }\n  };\n};\n\nexport const createDocumentFields = (data: DocumentFieldsInterface) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<CreateDocumentFieldsAction>({\n      type: ActionTypes.CREATE_DOCUMENT_FIELDS,\n      payload: data,\n    });\n  };\n};\n\nexport const updateDocumentFields = (data: DocumentFieldsInterface) => {\n  console.log({ reducer: data });\n  return async (dispatch: Dispatch) => {\n    dispatch<UpdateDocumentFieldsAction>({\n      type: ActionTypes.UPDATE_DOCUMENT_FIELDS,\n      payload: data,\n    });\n  };\n};\n\nexport const deleteDocumentFields = (data: string) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<DeleteDocumentFieldsAction>({\n      type: ActionTypes.DELETE_DOCUMENT_FIELDS,\n      payload: data,\n    });\n  };\n};\n\n// CANDIDATE IN EDUCATION CATEGORY\nexport const getCandidatesInInstitute = (\n  educatin_type_id: string,\n  session_id: string,\n  callback: Function\n) => {\n  return async (dispatch: Dispatch) => {\n    callback(true, \"\", null);\n    try {\n      setAxiosToken();\n      const res = await axios.get<CandidatesInterface[]>(\n        `${API.APPLICATION}/educationtypeuserdocs/${educatin_type_id}/${session_id}`\n      );\n      const newArray: CandidatesInterface[] = res.data.filter((element) => {\n        return element !== null && element !== undefined;\n      });\n      console.log(\"====================================\");\n      console.log({ getCandidatesInInstitute: res, newArray });\n      console.log(\"====================================\");\n      dispatch<GetCandidatesInInstituteAtion>({\n        type: ActionTypes.GET_CANDIDATE_IN_INSTITUTE,\n        payload: newArray,\n        // payload: response.data,\n      });\n      callback(false, \"\", newArray);\n    } catch (error) {\n      console.log({ getCandidatesInInstitute: error });\n      callback(false, errorToText(error), null);\n    }\n  };\n};\n\nexport const verifyDocument = (data: VerifyDocumentInterface) => {\n  console.log({ action_verify: data });\n  return async (dispatch: Dispatch) => {\n    dispatch<VerifyDocumentAction>({\n      type: ActionTypes.VERIFY_DOCUMENT,\n      payload: data,\n    });\n  };\n};\n","import axios from \"axios\";\nimport { Dispatch } from \"redux\";\nimport { ActionTypes } from \"./types\";\nimport {\n  AccessTaskInterface,\n  PermissionInterface,\n  SystemSettingsInterface,\n} from \"../shared/interfaces\";\nimport { API } from \"../utils/api\";\nimport { setAxiosToken } from \"../utils/AxiosToken\";\nimport { errorToText } from \"../utils/errors\";\nimport { PositionAPI } from \"../interfaces/position\";\n\n/**\n * * ****************************** INTERFACES *****************************\n */\n\n// SYSTEM SETTINGS  ==============\nexport interface GetSystemSettingsAction {\n  type: ActionTypes.GET_SYSTEM_SETTINGS;\n  payload: SystemSettingsInterface[];\n}\n\nexport interface DisableSystemSettingsAction {\n  type: ActionTypes.DISABLE_SYSTEM_SETTINGS;\n  payload: {\n    system_setting_id: string;\n    status: \"enabled\" | \"disabled\";\n  };\n}\n\n// ROLE TASKS ACCESS SETTINGS ===================================\nexport interface GetTaskAccessAction {\n  type: ActionTypes.GET_TASK_ACCESS;\n  payload: AccessTaskInterface[];\n}\n\n// POSITIONS SETTINGS ===================================\nexport interface PositionCreateInterface {\n  position_id?: string;\n  position_title: string;\n  description: string;\n  school_level_id: string;\n  education_institute_id: string;\n  courses: string[];\n  requirements: {\n    user_detail_category_id: string;\n    user_detail_subcategory_id: string;\n    position_requirement: {\n      category_subcategory_data_id: string;\n      required: boolean;\n    }[];\n    required: boolean;\n  }[];\n}\nexport interface GetPositionsAction {\n  type: ActionTypes.GET_POSTIONS;\n  payload: PositionAPI[];\n}\n\nexport interface CreatePositionsAction {\n  type: ActionTypes.CREATE_POSITION;\n  payload: PositionCreateInterface;\n}\n\nexport interface UpdatePositionsAction {\n  type: ActionTypes.UPDATE_POSITION;\n  payload: PositionCreateInterface;\n}\n\nexport interface DeletePositionSettingAction {\n  type: ActionTypes.DELETE_POSITION;\n  payload: string;\n}\n\nexport interface PublishPositionAction {\n  type: ActionTypes.PUBLISH_POSITION;\n  payload: {\n    position_id: string;\n    status: boolean;\n  };\n}\n\nexport type SystemActionType =\n  | GetSystemSettingsAction\n  | DisableSystemSettingsAction\n  | GetTaskAccessAction\n  | GetPositionsAction\n  | CreatePositionsAction\n  | UpdatePositionsAction\n  | DeletePositionSettingAction\n  | PublishPositionAction;\n\n/**\n * * ****************************** ACTIONS *****************************\n */\n\nexport const getSystemSettings = (callback: Function) => {\n  return async (dispatch: Dispatch) => {\n    callback(true, \"\");\n    try {\n      setAxiosToken();\n      const res = await axios.get<SystemSettingsInterface[]>(\n        `${API.AUTH}/settings`\n      );\n      dispatch<GetSystemSettingsAction>({\n        type: ActionTypes.GET_SYSTEM_SETTINGS,\n        payload: res.data,\n      });\n      callback(false, \"\");\n    } catch (error) {\n      console.log({ code_error: error });\n      callback(false, errorToText(error));\n    }\n  };\n};\n\nexport const disableSystemSetting = (data: {\n  system_setting_id: string;\n  status: \"enabled\" | \"disabled\";\n}) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<DisableSystemSettingsAction>({\n      type: ActionTypes.DISABLE_SYSTEM_SETTINGS,\n      payload: data,\n    });\n  };\n};\n\n// ============================ tasks access =======================\n\nexport const GetTaskAccess = (callback: Function) => {\n  return async (dispatch: Dispatch) => {\n    callback(true, \"\");\n    try {\n      setAxiosToken();\n      const res = await axios.get<\n        {\n          id: string;\n          title: string;\n          key: string;\n          permitted: PermissionInterface;\n        }[]\n      >(`${API.AUTH}/allroleaccess`);\n      let response: AccessTaskInterface[] = res.data.map((data) => ({\n        id: data.id,\n        task: data.title,\n        key: data.key,\n        permitted: data.permitted,\n      }));\n      dispatch<GetTaskAccessAction>({\n        type: ActionTypes.GET_TASK_ACCESS,\n        payload: response,\n      });\n      callback(false, \"\", response);\n    } catch (error) {\n      console.log({ code_error: error });\n      callback(false, errorToText(error));\n    }\n  };\n};\n\n// ============================ positions =======================\n\nexport const getPositions = (callback: Function) => {\n  return async (dispatch: Dispatch) => {\n    callback(true, \"\");\n    try {\n      setAxiosToken();\n      const res = await axios.get<PositionAPI[]>(`${API.APPLICATION}/position`);\n      dispatch<GetPositionsAction>({\n        type: ActionTypes.GET_POSTIONS,\n        payload: res.data,\n      });\n      callback(false, \"\");\n    } catch (error) {\n      console.log({ code_error: error });\n      callback(false, errorToText(error));\n    }\n  };\n};\n\nexport const createPosition = (data: PositionCreateInterface) => {\n  console.log({ createPosition: data });\n  return async (dispatch: Dispatch) => {\n    dispatch<CreatePositionsAction>({\n      type: ActionTypes.CREATE_POSITION,\n      payload: data,\n    });\n  };\n};\n\nexport const updatePosition = (data: PositionCreateInterface) => {\n  console.log({ updatePosition: data });\n  return async (dispatch: Dispatch) => {\n    dispatch<UpdatePositionsAction>({\n      type: ActionTypes.UPDATE_POSITION,\n      payload: data,\n    });\n  };\n};\n\nexport const deletePosition = (data: string) => {\n  console.log({ deletePosition: data });\n  return async (dispatch: Dispatch) => {\n    dispatch<DeletePositionSettingAction>({\n      type: ActionTypes.DELETE_POSITION,\n      payload: data,\n    });\n  };\n};\n\nexport const publishPosition = (data: {\n  position_id: string;\n  status: boolean;\n}) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<PublishPositionAction>({\n      type: ActionTypes.PUBLISH_POSITION,\n      payload: data,\n    });\n  };\n};\n","import {\n  ApplicationStates,\n  SESSION_PLAN_KEYS,\n} from \"../interfaces/application\";\n\nexport interface SystemSettingsInterface {\n  system_setting_id: string;\n  name: string;\n  key: string;\n  status: \"enabled\" | \"disabled\";\n}\n\nexport interface ApplicationSessionInterface {\n  is_active: boolean;\n  application_session_name: string;\n  period: string;\n  application_start_date: string;\n  application_end_date: string;\n  createdAt: string;\n  updatedAt: string;\n  application_session_id: string;\n}\n\nexport interface UserInfoInterface {\n  document_type?: string;\n  issue_number?: string;\n  date_of_issue?: string;\n  date_of_expiry?: string;\n  place_of_issue?: string;\n  application_number?: string;\n  fname: string;\n  lname: string;\n  sex: \"M\" | \"F\";\n  father_names: string;\n  mother_names: string;\n  date_of_birth: string;\n  place_of_birth?: string;\n  country_of_birth: string;\n  village_id: string;\n  village: string;\n  cell: string;\n  sector: string;\n  district: string;\n  province: string;\n  photo?: string;\n  civil_status?: string;\n  spouse?: any;\n  status?: string;\n}\n\nexport interface UserInterface {\n  user_id: string;\n  n_id?: string;\n  phone_number: string;\n  email: string;\n  password?: string;\n  user_info: UserInfoInterface;\n  details: UserDocumentsInterface[];\n  user_photo?: string;\n  default_access: RoleToUserInterface | null;\n  custome_access: CustomeAccessInterface | null;\n  is_active?: boolean;\n}\n\nexport interface CandidateDetailsInterface_old {\n  category_id: string;\n  sub_category_id: string;\n  category_subcategory_data: string;\n  title: string;\n  description: string;\n  files: string;\n  start_year: string;\n  end_year: string;\n  school: string;\n  email: string;\n  names: string;\n  phone_number: string;\n  company: string;\n  year: string;\n  doc_id: string;\n  validation_status: \"waiting\" | \"approved\" | \"rejected\";\n  validated_by: {\n    user_id: string;\n    comment: string;\n    validation_status: \"waiting\" | \"approved\" | \"rejected\";\n    date: string;\n  } | null;\n  doc_history_status: string;\n  get_in_date: string;\n  approved?: string;\n}\n\nexport interface CandidateDetailsInterface {\n  category_id: string;\n  sub_category_id: string;\n  category_subcategory_data: string;\n  title: string;\n  description: string;\n  files: string;\n  start_year: string;\n  end_year: string;\n  school: string;\n  email: string;\n  names: string;\n  phone_number: string;\n  company: string;\n  year: string;\n  doc_id: string;\n  validation_status: \"waiting\" | \"approved\" | \"rejected\";\n  validated_by: {\n    user_id: string;\n    comment: string;\n    validation_status: \"waiting\" | \"approved\" | \"rejected\";\n    date: string;\n  } | null;\n  doc_history_status: string;\n  get_in_date: string;\n  approved?: string;\n}\n\nexport interface DocInterface {\n  category_subcategory_data: string;\n  school: string;\n  category_id: string;\n  company: string;\n  description: string;\n  email: string;\n  end_year: string;\n  files: string;\n  names: string;\n  phone_number: string;\n  start_year: string;\n  sub_category_id: string;\n  title: string;\n  year: string;\n  approved: string;\n  doc_id: string;\n  validated_by: null;\n  validation_status: string;\n  doc_history_status: string;\n  get_in_date: string;\n  date_modefied: string;\n}\n\nexport interface CandidateRoleToUserInterface {\n  key: string;\n  status: number;\n  access: boolean;\n  assigned_date: string;\n}\n\nexport interface CandidatesInterface_old {\n  user_id: string;\n  n_id: string;\n  fname: string;\n  lname: string;\n  phone_number: string;\n  district: string;\n  email: string;\n  details: CandidateDetailsInterface[];\n}\n\nexport interface ApplicationExamsInterface {\n  course_id: string;\n  proctoring_type: string;\n  center_id: string;\n  room_id: string;\n}\n\nexport interface CandidatesInterface {\n  user_id: string;\n  n_id: string;\n  fname: string;\n  lname: string;\n  phone_number: string;\n  district: string;\n  email: string;\n  in_education?: boolean;\n  disability?: boolean;\n  details: CandidateDetailsInterface[];\n  exams: ApplicationExamsInterface[];\n}\n\nexport interface CustomeAccessInterface {\n  access: AccessTaskInterface[];\n  user_id: string;\n  custome_user_access_id: string;\n}\n\nexport interface UserDocumentsInterface {\n  category_id: string;\n  sub_category_id: string;\n  category_subcategory_data: string;\n  title: string;\n  description: string;\n  files: string;\n  start_year: string;\n  end_year: string;\n  school: { title: string; school_id: string | null };\n  email: string;\n  names: string;\n  phone_number: string;\n  company: string;\n  year: string;\n  approved: \"waiting\" | \"approved\" | \"rejected\";\n  doc_id: string;\n  validation_status: \"waiting\" | \"approved\" | \"rejected\";\n  validated_by: {\n    user_id: string;\n    commet: string;\n    validation_status: \"waiting\" | \"approved\" | \"rejected\";\n    date: string;\n  };\n}\n\nexport interface SystemUserRoleInterface {\n  system_user_role_id: string;\n  role: string;\n  status: boolean;\n  access: AccessTaskInterface[];\n  district_required?: boolean;\n  school_required?: boolean;\n  room_required?: boolean;\n  education_institution_required?: boolean;\n  school_id: string;\n  district_id: string;\n}\n\nexport interface CustomeUserAccessInterface {\n  user_id: string;\n  access?: [\n    {\n      id: string;\n      task: string;\n      key: string;\n      permitted: {\n        create: boolean;\n        delete: boolean;\n        update: boolean;\n        view: boolean;\n      };\n    }\n  ];\n}\n\nexport interface PermissionInterface {\n  create: boolean;\n  view: boolean;\n  update: boolean;\n  delete: boolean;\n}\n\nexport interface AccessTaskInterface {\n  id: string;\n  task: string;\n  key: string;\n  permitted: PermissionInterface;\n}\n\nexport interface RoleToUserInterface {\n  system_user_role_id: string;\n  role: string;\n  access: AccessTaskInterface[];\n  status?: number;\n  school_id: string;\n  district_id: string;\n  room_id: string;\n  education_institution_id: string;\n}\n\nexport interface RoomsInterface {\n  occupied: number;\n  isUsed: boolean;\n  room_type: string;\n  room_number: number;\n  capacity: number;\n  _id: string;\n}\n\nexport interface CentersInterface {\n  rooms: RoomsInterface[];\n  isUsed: boolean;\n  _id: string;\n  center_name: string;\n  center_code: number;\n  district_id: string;\n}\n\nexport interface SectorInterface {\n  district_code: number;\n  district_id: string;\n  sector_name: string;\n  sector_code: number;\n  sector_id: string;\n}\n\nexport interface DistrictInterface {\n  centers: CentersInterface[];\n  sectors: SectorInterface[];\n  province_code: number;\n  province_id: string;\n  district_name: string;\n  district_code: number;\n  _id: string;\n}\n\nexport interface RoomLocationInterface {\n  districts: DistrictInterface[];\n  province_name: string;\n  province_code: number;\n  _id: string;\n}\n\nexport interface AssignRoleToUserActionInterface {\n  user_id: string;\n  data: RoleToUserInterface;\n}\n\nexport interface AssignRoleToUserActionInterface {\n  user_id: string;\n  data: RoleToUserInterface;\n}\n\nexport enum PostRequestStatusInterface {\n  INITIATED = \"initiated\",\n  CONFIRMED = \"confirmed\",\n  RECEIVED = \"received\",\n}\n\nexport interface PostSchoolInterface_old {\n  post_at_school_id: string;\n  school_id: string;\n  position_id: string;\n  district_id: string;\n  needed_posts: number;\n  confirmed_posts?: number;\n  occupied_posts?: number;\n  requested_by: string;\n  confirmed_by?: string;\n  received_posts?: number;\n  request_date: Date;\n  approval_date?: Date;\n  post_at_school_status: PostRequestStatusInterface;\n}\n\nexport interface PostSchoolInterface {\n  requested_post_id: string;\n  school_id: string;\n  position_id: string;\n  district_id: string;\n  needed_posts: number;\n  male_number: number;\n  female_number: number;\n  description: string;\n  confirmed_posts?: number;\n  occupied_posts?: number;\n  requested_by: string;\n  confirmed_by?: string;\n  received_posts?: number;\n  request_date: Date;\n  approval_date?: Date;\n  requested_post_status: PostRequestStatusInterface;\n}\n\nexport interface SchoolInfoInterface {\n  school_id: string;\n  school_title: string;\n  district_id: string;\n  number_of_females?: number;\n  number_of_males?: number;\n}\n\nexport interface SchoolsInterface {\n  _id: string;\n  status: boolean;\n  school_name: string;\n  school_code: number;\n  province_id: string;\n  province_code: number;\n  district_id: string;\n  district_code: number;\n  sector_id: string;\n  sector_code: number;\n  education_category_id: string;\n}\n\nexport interface SchoolLevelInterface {\n  school_level_id: string;\n  school_level_name: string;\n  description: string;\n  education_institute: string[];\n  courses: [];\n}\n\nexport interface CourseInterface {\n  course_name: string;\n  course_code: string;\n  description: string;\n  school_levels: string[];\n  course_id: string;\n}\n\nexport interface EducationInstituteInterface {\n  education_category_title: string;\n  school_levels: [];\n  description: string;\n  education_institute_id: string;\n}\n\nexport interface PositionRequirementInterface {\n  user_detail_category_id: string;\n  title: string;\n  user_required_docs: {\n    user_detail_subcategory_id: string;\n    title: string;\n  }[];\n}\n\nexport interface PositionInterface {\n  courses: CourseInterface[];\n  position_title: string;\n  description: string;\n  school_level_id: SchoolLevelInterface;\n  education_institute_id: EducationInstituteInterface;\n  requirements: PositionRequirementInterface[];\n  position_id: string;\n}\n\nexport enum DocumentAttributesInterface {\n  \"Title\" = \"title\",\n  \"Description\" = \"description\",\n  \"Files\" = \"files\",\n  \"email\" = \"email\",\n  \"names\" = \"names\",\n  \"phone_number\" = \"phone_number\",\n  \"position\" = \"position\",\n  \"relation\" = \"relation\",\n  \"src\" = \"src\",\n  \"year\" = \"year\",\n  \"company\" = \"company\",\n  \"category_subcategory_data\" = \"category_subcategory_data\",\n  \"others\" = \"others\",\n  \"start_year\" = \"start_year\",\n  \"end_year\" = \"end_year\",\n  \"School\" = \"School\",\n}\n\nexport enum DocValidationStatusInterface {\n  APPROVED = \"approved\",\n  REJECTED = \"rejected\",\n}\n\nexport interface DocumentCategoryInterface {\n  user_detail_category_id: string;\n  title: string;\n  description: string;\n  fields: DocumentAttributesInterface[];\n}\n\nexport interface DocumentSubCategoryInterface {\n  category_id: string;\n  title: string;\n  description: string;\n  user_detail_subcategory_id: string;\n}\n\nexport interface DocumentFieldsInterface {\n  _id: string;\n  category_id: string;\n  subcategory_id: string | null;\n  title: string;\n  description: string;\n  others: [];\n}\n\nexport interface ApplicationAssessmentInterface {\n  application_id: string;\n  user_id: string;\n  application_session: string;\n  application_status: string;\n  n_id: string;\n  phone_number: string;\n  email: string;\n  fname: string;\n  lname: string;\n  sex: \"M\" | \"F\";\n  district: string;\n  position: PositionApplicationInterface;\n  details: CandidateDetailsInterface[];\n  createdAt: string;\n  updatedAt: string;\n}\n\nexport interface AdminApplicationsToPrintInterface {\n  application_id: number;\n  names: string;\n  gender?: string;\n  national_id?: string;\n  phone?: string;\n  email?: string;\n  position: string;\n  education_category?: string;\n  application_session?: string;\n  district?: string;\n  date?: string;\n  decision?: ApplicationStates;\n}\n\nexport interface PositionApplicationInterface {\n  courses: string[];\n  position_title: string;\n  description: string;\n  school_level_id: string;\n  education_institute_id: string;\n  requirements: PositionRequirementInterface[];\n  position_id: string;\n}\n\nexport interface PositionRequirementInterface {\n  user_detail_category_id: string;\n  title: string;\n  user_required_docs: {\n    user_detail_subcategory_id: string;\n    title: string;\n  }[];\n}\n\nexport interface ApplicationRequirementInterface {\n  user_detail_category_id: string;\n  title: string;\n  user_required_docs: {\n    user_detail_subcategory_id: string;\n    title: string;\n  }[];\n}\n\nexport interface PeriodInterface {\n  is_active: string;\n  application_session_name: string;\n  period: string;\n  application_start_date: string;\n  application_end_date: string;\n  createdAt: string;\n  updatedAt: string;\n  application_session_id: string;\n}\n\nexport interface LocationRoomTableInterface {\n  province_id: string;\n  province_name: string;\n  district_id: string;\n  district_name: string;\n  center_id: string;\n  center_name: string;\n  room_id: string;\n  room_name: string;\n  capacity: number;\n  occupied: number;\n}\n\nexport interface LocationSectorTableInterface {\n  province_id: string;\n  province_name: string;\n  province_code: number;\n  district_id: string;\n  district_name: string;\n  district_code: number;\n  sector_id: string;\n  sector_name: string;\n  sector_code: number;\n}\n\nexport interface PositionRequirementsFieldInterface {\n  category_id: string;\n  category_name: string;\n  sub_category_id: string;\n  sub_category_name: string;\n  field_id: string;\n  field_name: string;\n  required: boolean;\n}\n\nexport interface ApplicationPeriodInterface {\n  _id: string;\n  application_status: ApplicationStates;\n  user_id: string;\n  position: string;\n  application_session: string;\n  exams: ApplicationExamsInterface[];\n}\n\nexport const getDocCategoryById = (\n  subDocs: DocumentCategoryInterface[],\n  docId: string\n): DocumentCategoryInterface => {\n  return subDocs.filter((doc) => doc.user_detail_category_id === docId)[0];\n};\n\nexport const getSubDocCategoryById = (\n  subDocs: DocumentSubCategoryInterface[],\n  docId: string\n): DocumentSubCategoryInterface => {\n  return subDocs.filter((doc) => doc.user_detail_subcategory_id === docId)[0];\n};\n\nexport const SESSION_PLAN_TYPES: {\n  type_id: number;\n  type_title: string;\n  type_key: SESSION_PLAN_KEYS;\n}[] = [\n  {\n    type_id: 1,\n    type_title: \"Application\",\n    type_key: SESSION_PLAN_KEYS.APPLICATION,\n  },\n  {\n    type_id: 2,\n    type_title: \"Document Validation\",\n    type_key: SESSION_PLAN_KEYS.DOCUMENT_VALIDATION,\n  },\n  {\n    type_id: 3,\n    type_title: \"Examination\",\n    type_key: SESSION_PLAN_KEYS.EXAMINATION,\n  },\n  {\n    type_id: 4,\n    type_title: \"Marks Publication\",\n    type_key: SESSION_PLAN_KEYS.MARKS_PUBLICATION,\n  },\n  {\n    type_id: 5,\n    type_title: \"Placement and Transfer\",\n    type_key: SESSION_PLAN_KEYS.PLACEMENT_TRANSFER,\n  },\n];\n","import React, { Component } from \"react\";\nimport { MdSearch } from \"react-icons/md\";\nimport { claimReasonInterface } from \"../../../interfaces\";\nimport search from \"../../../utils/search\";\n\nexport const claimReasonsData = [\n  { key: 1, reason: \"Not placed (Sinahawe umwanya)\" },\n  {\n    key: 2,\n    reason:\n      \"Not placed with higher marks (Sinahawe umwanya kandi hari abo ndusha twakoze bimwe bawuhawe)\",\n  },\n  {\n    key: 3,\n    reason:\n      \"Want to change district of placement (Nifuza guhindurirwa akarere nahawemo umwanya)\",\n  },\n  {\n    key: 4,\n    reason: \"Rejected offer by mistake (Nibeshye nanga umwanya nahawe)\",\n  },\n  {\n    key: 0,\n    reason: \"None of the above (nta na kimwe muri ibyo byavuzwe haruguru)\",\n  },\n];\n\ntype ChooseReasonProps = {\n  claimReason: claimReasonInterface | null;\n  setClaimReason: (value: claimReasonInterface | null) => void;\n  setChooseClaimReason: (value: boolean) => void;\n  allClaimReasons: claimReasonInterface[];\n};\n\ntype ChooseReasonState = {\n  searchInput: string;\n};\n\nclass ChooseReason extends Component<ChooseReasonProps, ChooseReasonState> {\n  constructor(props: ChooseReasonProps) {\n    super(props);\n\n    this.state = {\n      searchInput: \"\",\n    };\n  }\n\n  setSearchInput = (value: string) => {\n    this.setState({ searchInput: value });\n  };\n\n  render() {\n    return (\n      <div>\n        {/* SEARCH PART */}\n        <div className=\"flex items-center w-full my-1\">\n          <MdSearch className=\"w-6 h-6 absolute ml-2\" />\n          <input\n            type=\"text\"\n            placeholder=\"Search\"\n            className=\"focus:border-2 h-7 ml-1 pl-9 mr-2 bg-gray-100 focus:border-gray-700 w-full rounded\"\n            onChange={(e) => this.setSearchInput(e.target.value)}\n            value={this.state.searchInput}\n          />\n          <button\n            className=\"bg-red-200 text-red-700 py-1 px-2 mr-1 rounded text-sm focus:outline-none\"\n            type=\"button\"\n            onClick={() => this.props.setChooseClaimReason(false)}\n          >\n            Cancel\n          </button>\n        </div>\n        {/* END SEARCH PART ///////////////// */}\n\n        <div className=\"w-full h-52 mt-2 overflow-y-auto divide-y divide-gray-300\">\n          {search(this.props.allClaimReasons, this.state.searchInput).map(\n            (item: claimReasonInterface, index) => (\n              <section key={index.toString() + item.id}>\n                <div\n                  className={`my-1 py-1 w-full px-2 hover:bg-gray-100 cursor-pointer ${\n                    this.props.claimReason &&\n                    this.props.claimReason.id === item.id &&\n                    \"border-l-2 border-blue-600\"\n                  }`}\n                  onClick={() => {\n                    this.props.setChooseClaimReason(false);\n                    this.props.setClaimReason(item);\n                  }}\n                >\n                  <p className=\"text-base text-black\">{item.reason}</p>\n                </div>\n              </section>\n            )\n          )}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default ChooseReason;\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { PushPopupAlert } from \"../../../actions\";\nimport { fetchUserAccess } from \"../../../actions/users\";\nimport {\n  claimApplicationsPositionInterface,\n  ClaimExamResultsDetails,\n  QuestionLanguage,\n} from \"../../../interfaces\";\nimport { StoreState } from \"../../../reducers\";\nimport { DocumentReducerInterface } from \"../../../reducers/document\";\nimport { UserInterface } from \"../../../shared/interfaces\";\nimport { DATE } from \"../../../utils/functions\";\nimport { PositionRequirementTableInterface } from \"../../Positions/ViewPosition\";\n\nexport const FC_ApplicationPositionDistinctCategory = (\n  thisPosition: claimApplicationsPositionInterface,\n  documentCategories: DocumentReducerInterface\n): {\n  PositionsTemp: PositionRequirementTableInterface[];\n  DistinctCategoriesTemp: PositionRequirementTableInterface[];\n  DistinctSubCategoriesTemp: PositionRequirementTableInterface[];\n} => {\n  let PositionsTemp: PositionRequirementTableInterface[] = [];\n  let DistinctCategoriesTemp: PositionRequirementTableInterface[] = [],\n    DistinctCategoriesIds: string[] = [];\n  let DistinctSubCategoriesTemp: PositionRequirementTableInterface[] = [],\n    DistinctSubCategoriesIds: string[] = [];\n  // GET REQUIREMENTS OF THE CURRENT POSITION ====================\n  let requirements = thisPosition.requirements;\n  // LOOP THROUGH CURRENT POSITION REQUIREMENTS ==========================\n  for (let req in requirements) {\n    let thisRequirements = requirements[req];\n    // GET DOC CATEGORY OF THE CURRENT POSITION REQUIREMENTS ====================\n    let thisCategory = documentCategories.documentCategory\n      ? documentCategories.documentCategory.find(\n          (item) =>\n            item.user_detail_category_id ===\n            thisRequirements.user_detail_category_id\n        ) && {\n          title: documentCategories.documentCategory.find(\n            (item) =>\n              item.user_detail_category_id ===\n              thisRequirements.user_detail_category_id\n          )!.title,\n          user_detail_category_id: documentCategories.documentCategory.find(\n            (item) =>\n              item.user_detail_category_id ===\n              thisRequirements.user_detail_category_id\n          )!.user_detail_category_id,\n        }\n      : {\n          title: \"\",\n          user_detail_category_id: thisRequirements.user_detail_category_id,\n        };\n    // GET DOC SUB CATEGORY OF THE CURRENT POSITION REQUIREMENTS ====================\n    let thisSubCategory = documentCategories.documentSubCategory\n      ? documentCategories.documentSubCategory.find(\n          (item) =>\n            item.user_detail_subcategory_id ===\n            thisRequirements.user_detail_subcategory_id\n        )\n        ? {\n            title: documentCategories.documentSubCategory.find(\n              (item) =>\n                item.user_detail_subcategory_id ===\n                thisRequirements.user_detail_subcategory_id\n            )!.title,\n            user_detail_subcategory_id:\n              documentCategories.documentSubCategory.find(\n                (item) =>\n                  item.user_detail_subcategory_id ===\n                  thisRequirements.user_detail_subcategory_id\n              )!.user_detail_subcategory_id,\n            category_id: documentCategories.documentSubCategory.find(\n              (item) =>\n                item.user_detail_subcategory_id ===\n                thisRequirements.user_detail_subcategory_id\n            )!.category_id,\n          }\n        : {\n            title: \"\",\n            user_detail_subcategory_id:\n              thisRequirements.user_detail_subcategory_id,\n            category_id: \"\",\n          }\n      : {\n          title: \"\",\n          user_detail_subcategory_id:\n            thisRequirements.user_detail_subcategory_id,\n          category_id: \"\",\n        };\n    // LOOP THROUGH FIELDS OF THE CURRENT POSITION REQUIREMENTS ==========================\n    if (thisCategory) {\n      for (let field in thisRequirements.position_requirement) {\n        // GET FIELDS OF THE CURRENT POSITION REQUIREMENTS ====================\n        let thisField = documentCategories.documentFields\n          ? documentCategories.documentFields.find(\n              (item) =>\n                item._id ===\n                thisRequirements.position_requirement[field]\n                  .category_subcategory_data_id\n            )\n            ? {\n                title: documentCategories.documentFields.find(\n                  (item) =>\n                    item._id ===\n                    thisRequirements.position_requirement[field]\n                      .category_subcategory_data_id\n                )!.title,\n                _id: documentCategories.documentFields.find(\n                  (item) =>\n                    item._id ===\n                    thisRequirements.position_requirement[field]\n                      .category_subcategory_data_id\n                )!._id,\n                required: thisRequirements.position_requirement[field].required,\n              }\n            : {\n                title: \"\",\n                _id: thisRequirements.user_detail_subcategory_id,\n                required: thisRequirements.position_requirement[field].required,\n              }\n          : {\n              title: \"\",\n              _id: thisRequirements.user_detail_subcategory_id,\n              required: thisRequirements.position_requirement[field].required,\n            };\n        // ADD CURRENT CATEGORY, SUB CATEGORY & FIELDS OF THE CURRENT POSITION REQUIREMENTS IN POSITIONS TEMP ====================\n        PositionsTemp.push({\n          category_id: thisCategory.user_detail_category_id,\n          category_title: thisCategory.title,\n          subcategory_id: thisSubCategory.user_detail_subcategory_id,\n          subcategory_title: thisSubCategory.title,\n          field_title: thisField.title,\n          field_id: thisField._id,\n          required: thisField.required,\n        });\n      }\n\n      // ADD CATEOGRY OF THE CURRENT POSITION REQUIREMENTS TO ARRAY ====================\n      if (\n        !DistinctCategoriesIds.includes(thisCategory.user_detail_category_id)\n      ) {\n        DistinctCategoriesIds.push(thisCategory.user_detail_category_id);\n        DistinctCategoriesTemp.push({\n          category_id: thisCategory.user_detail_category_id,\n          category_title: thisCategory.title,\n          subcategory_id: \"\",\n          subcategory_title: \"\",\n          field_title: \"\",\n          field_id: \"\",\n          required: false,\n        });\n      }\n\n      // ADD SUB CATEOGRY OF THE CURRENT POSITION REQUIREMENTS TO ARRAY ====================\n      if (\n        !DistinctSubCategoriesIds.includes(\n          thisSubCategory.user_detail_subcategory_id\n        )\n      ) {\n        DistinctSubCategoriesIds.push(\n          thisSubCategory.user_detail_subcategory_id\n        );\n        DistinctSubCategoriesTemp.push({\n          category_id: thisSubCategory.category_id,\n          category_title: \"\",\n          subcategory_id: thisSubCategory.user_detail_subcategory_id,\n          subcategory_title: thisSubCategory.title,\n          field_title: \"\",\n          field_id: \"\",\n          required: false,\n        });\n      }\n    }\n  }\n  // DistinctCategoriesIds.;\n\n  return { PositionsTemp, DistinctCategoriesTemp, DistinctSubCategoriesTemp };\n};\n\nexport const showEvaluator = (\n  userList: UserInterface[],\n  user_id: string\n): string => {\n  let result: string = \"\";\n  if (user_id === \"system\") {\n    result = \"System\";\n  } else {\n    // let user = getUserDocuments(userList, user_id);\n    // let user = undefined;\n    // if (user) {\n    //   result = user.user.user_info.fname + \" \" + user.user.user_info.lname;\n    // }\n  }\n  return result;\n};\n\ntype ExaminationFormViewProps = {\n  thisAnswerSheet: ClaimExamResultsDetails;\n  setViewThisFile: (value: string) => void;\n  setChooseClaimFile: (value: boolean) => void;\n  setClaimFileId: (value: string) => void;\n  fetchUserAccess: Function;\n  PushPopupAlert: Function;\n};\n\nconst ExaminationFormView: React.FC<ExaminationFormViewProps> = (props) => {\n  return (\n    <section className=\"\">\n      <div className=\"w-full bg-gray-100 px-4 py-1 animate__animated animate__fadeIn\">\n        <div className=\"flex flex-col mb-2\">\n          {/* APPLICATION TITLE ========== */}\n          <section className=\"flex items-center justify-between\">\n            <span className=\"text-blue-600 font-bold text-2xl\">\n              {props.thisAnswerSheet.course}\n            </span>\n            <button\n              type=\"button\"\n              className=\"btn btn-blue\"\n              onClick={() => {\n                props.setChooseClaimFile(false);\n                props.setClaimFileId(props.thisAnswerSheet.answer_sheet_id);\n                props.setViewThisFile(\"\");\n              }}\n            >\n              Choose\n            </button>\n          </section>\n          <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n            <span className={`italic`}>Date:</span>\n            <span className=\"font-bold text-gray-900 py-1\">\n              {DATE(props.thisAnswerSheet.createdAt)}\n            </span>\n          </div>\n        </div>\n        <div className=\"bg-white w-full rounded p-2 mb-2\">\n          <div className=\"text-gray-800 text-2xl font-bold my-2\">Questions</div>\n          {props.thisAnswerSheet.questions.map((item, index) => (\n            <div\n              key={index + item.id}\n              className=\"rounded border my-1 p-1 divide-y\"\n            >\n              <div className=\"flex flex-col gap-1 text-base text-gray-600\">\n                <span className={`font-semibold`}>\n                  {item.question.find(\n                    (q) => q.language === QuestionLanguage.Eng\n                  )\n                    ? item.question.find(\n                        (q) => q.language === QuestionLanguage.Eng\n                      )!.title\n                    : item.question[0].title}\n                  :\n                </span>\n                <span className=\"\">\n                  {item.question.find(\n                    (q) => q.language === QuestionLanguage.Eng\n                  )\n                    ? item.question.find(\n                        (q) => q.language === QuestionLanguage.Eng\n                      )!.description\n                    : item.question[0].description}\n                </span>\n                <div className=\"flex items-center gap-2\">\n                  <span className=\"text-medium\">Right answer</span>\n                  <span className=\"\">\n                    {item.question.find(\n                      (q) => q.language === QuestionLanguage.Eng\n                    )\n                      ? item.question.find(\n                          (q) => q.language === QuestionLanguage.Eng\n                        )!.description\n                      : item.question[0].answer}\n                  </span>\n                </div>\n              </div>\n            </div>\n          ))}\n        </div>\n      </div>\n    </section>\n  );\n};\n\nconst mapStateToProps = ({\n  users,\n}: StoreState): {\n  userList: UserInterface[];\n} => {\n  return {\n    userList: users,\n  };\n};\n\nexport default connect(mapStateToProps, { PushPopupAlert, fetchUserAccess })(\n  ExaminationFormView\n);\n","import React, { useState } from \"react\";\nimport { MdSearch } from \"react-icons/md\";\nimport { connect } from \"react-redux\";\nimport {\n  course,\n  CandidateClaimInterface,\n  claimApplicationsInterface,\n  ClaimExamResultsDetails,\n  SessionPlanInterface,\n} from \"../../../interfaces\";\nimport { candidatePlacementInterface } from \"../../../interfaces/placement\";\nimport { isClaimAllowed } from \"./ClaimForm\";\n\nexport const getCourseById = (courses: course[], course_id: string) => {\n  return courses.find((item) => item.course_id === course_id);\n};\n\nexport const getCourseIdBySheetId = (\n  allData: ClaimExamResultsDetails[],\n  sheet_id: string\n) => {\n  return allData.find((item) => item.answer_sheet_id === sheet_id);\n};\n\nexport const searchApplication = (\n  objList: claimApplicationsInterface[],\n  text: any\n): claimApplicationsInterface[] => {\n  if (undefined === text || text === \"\") return objList;\n  return objList.filter((product) => {\n    let flag;\n    // let dataKeys = product;\n\n    for (let prop in product) {\n      flag = false;\n      if (prop === \"position\") {\n        flag =\n          product.position.position_title\n            .toString()\n            .toLowerCase()\n            .indexOf(text.toLowerCase()) > -1;\n      }\n      if (flag) break;\n    }\n    return flag;\n  });\n  // return objList.filter((product) =>\n  //   product.position.position_title.includes(text)\n  // );\n};\n\ntype FormPlacementListProps = {\n  setChooseClaimFile: (value: boolean) => void;\n  setClaimFileId: (value: string) => void;\n  setViewThisFile: (value: string) => void;\n  viewThisFile: string;\n  myPlacement: candidatePlacementInterface | null;\n  myClaims: CandidateClaimInterface[];\n  activeSession: SessionPlanInterface;\n\n  // REDUX //////////////////////\n};\n\nconst FormPlacementList: React.FC<FormPlacementListProps> = (props) => {\n  const [searchInput, setSearchInput] = useState<string>(\"\");\n\n  return (\n    <section>\n      {/* SEARCH PART */}\n      <div className=\"flex items-center w-full my-1\">\n        <MdSearch className=\"w-6 h-6 absolute ml-2\" />\n        <input\n          type=\"text\"\n          placeholder=\"Search\"\n          className=\"focus:border-2 h-7 ml-1 pl-9 mr-2 bg-gray-100 focus:border-gray-700 w-full rounded\"\n          onChange={(e) => setSearchInput(e.target.value)}\n          value={searchInput}\n          disabled={\n            props.myPlacement === null ||\n            isClaimAllowed(\n              props.myClaims,\n              props.activeSession.session_plan_id,\n              props.myPlacement.placed._id\n            )\n              ? false\n              : true\n          }\n        />\n        <button\n          className=\"bg-red-200 text-red-700 py-1 px-2 mr-1 rounded text-sm focus:outline-none\"\n          type=\"button\"\n          onClick={() => {\n            props.setChooseClaimFile(false);\n            props.setViewThisFile(\"\");\n          }}\n        >\n          Cancel\n        </button>\n      </div>\n      {/* END SEARCH PART ///////////////// */}{\" \"}\n      {/* searchData(props.candidateAnswers, searchInput) */}\n      <div className=\"w-full h-52 mt-2 overflow-y-auto divide-y divide-gray-300\">\n        {props.myPlacement ? (\n          isClaimAllowed(\n            props.myClaims,\n            props.activeSession.session_plan_id,\n            props.myPlacement.placed._id\n          ) && (\n            <div className=\"group flex items-center justify-between my-1 hover:bg-gray-100\">\n              <div\n                className=\"p-1 w-full mr-2 cursor-pointer\"\n                onClick={() => {\n                  props.setChooseClaimFile(false);\n                  props.setClaimFileId(props.myPlacement!.placed._id);\n                }}\n              >\n                <p className=\"text-base font-medium text-black\">\n                  Placed on {props.myPlacement.placed.school.school_name}\n                </p>\n              </div>\n              <button\n                type=\"button\"\n                className=\"bg-blue-200 hover:bg-blue-300 text-blue-700 group-hover:text-blue-800 py-1 px-2 mr-1 rounded text-sm\"\n                onClick={() => {\n                  props.setViewThisFile(props.myPlacement!.placed._id);\n                }}\n              >\n                View\n              </button>\n            </div>\n          )\n        ) : (\n          <div className=\"text-center p-3\">\n            <p className=\"text-base font-medium text-black\">\n              No placement to claim on!\n            </p>\n          </div>\n        )}\n      </div>\n    </section>\n  );\n};\n\n// const mapStateToProps = ({\n//   course,\n// }: StoreState): {\n//   courses: course[] | null;\n// } => {\n//   return {\n//     courses: course.courses,\n//   };\n// };\nexport default connect(null, {})(FormPlacementList);\n","import axios from \"axios\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Auth, loadCourses, PushPopupAlert } from \"../../../actions\";\nimport {\n  createClaim,\n  DocumentClaimUser,\n  GetClaimingTypes,\n  getClaimReasons,\n  getMyAnswers,\n  getMyClaims,\n  getMyPlacement,\n  getMyRejectedApplications,\n  getMyRejectedDocuments,\n} from \"../../../actions/claiming\";\nimport {\n  getDocumentCategory,\n  getDocumentSubCategory,\n  getDocumentFields,\n} from \"../../../actions/document\";\nimport { getActiveSessionPlan } from \"../../../actions/session\";\nimport { PopupAlertData } from \"../../../components/Alert/Popup\";\nimport Modal, { ModalSize, Themes } from \"../../../components/Modal/Modal\";\nimport {\n  CandidateClaimInterface,\n  claimApplicationsInterface,\n  ClaimExamResultsDetails,\n  claimReasonInterface,\n  course,\n  PlansInterface,\n  PlansTypeKeys,\n  SessionPlanInterface,\n} from \"../../../interfaces\";\nimport { ApplicationStates } from \"../../../interfaces/application\";\nimport { candidatePlacementInterface } from \"../../../interfaces/placement\";\nimport { PopupAlertTheme } from \"../../../interfaces/popupAlert\";\nimport { StoreState } from \"../../../reducers\";\nimport { ClaimingReducerType } from \"../../../reducers/claiming\";\nimport { DocumentReducerInterface } from \"../../../reducers/document\";\nimport { SessionPlanReducerInterface } from \"../../../reducers/session\";\nimport {\n  capitalizeFirstLetter,\n  isEmptyOrSpaces,\n} from \"../../../shared/dataTest\";\nimport { UserInterface } from \"../../../shared/interfaces\";\nimport { API } from \"../../../utils/api\";\nimport { setAxiosToken } from \"../../../utils/AxiosToken\";\nimport { errorToText } from \"../../../utils/errors\";\nimport { isPlanActive } from \"../../SessionSettings/SessionDetails\";\nimport ApplicationFormView from \"./ApplicationFormView\";\nimport ChooseReason from \"./ChooseReason\";\nimport DocFormView from \"./DocFormView\";\nimport ExaminationFormView from \"./ExaminationFormView\";\nimport FormApplicationList from \"./FormApplicationList\";\nimport FormDocumentList from \"./FormDocumentList\";\nimport FormExamList, {\n  getCourseById,\n  getCourseIdBySheetId,\n} from \"./FormExamList\";\nimport FormPlacementList from \"./FormPlacementList\";\n\nexport const ClaimGetDocTitle = (\n  documentCategories: DocumentReducerInterface,\n  doc: DocumentClaimUser\n): { category: string; sub_category: string; field: string; main: string } => {\n  let DocCategory: string = \"\",\n    DocSubCategory: string = \"\",\n    DocField: string = \"\",\n    DocTitle: string = \"\";\n  if (\n    doc.sub_category_id.length > 0 &&\n    documentCategories.documentSubCategory\n  ) {\n    DocTitle = documentCategories.documentSubCategory.filter(\n      (c) => c.user_detail_subcategory_id === doc.sub_category_id\n    )[0].title;\n    DocSubCategory = DocTitle;\n  } else if (\n    doc.category_id.length > 0 &&\n    documentCategories.documentCategory\n  ) {\n    DocTitle = documentCategories.documentCategory.filter(\n      (c) => c.user_detail_category_id === doc.category_id\n    )[0].title;\n    DocCategory = DocTitle;\n  }\n  if (\n    doc.category_subcategory_data &&\n    doc.category_subcategory_data.category_subcategory_Data_id.length > 0 &&\n    documentCategories.documentFields\n  ) {\n    console.log({ doc });\n    DocField = documentCategories.documentFields.filter(\n      (c) =>\n        c._id === doc.category_subcategory_data?.category_subcategory_Data_id\n    )[0].title;\n    DocTitle += \" in \" + DocField;\n  }\n\n  return {\n    category: DocCategory,\n    sub_category: DocSubCategory,\n    field: DocField,\n    main: DocTitle,\n  };\n};\n\nexport const isClaimAllowed = (\n  allClaim: CandidateClaimInterface[],\n  period_id: string,\n  claimOnId: string\n): boolean => {\n  if (\n    allClaim.find(\n      (item) =>\n        item.period_id === period_id && item.claiming_on_id === claimOnId\n    )\n  ) {\n    return false;\n  }\n  return true;\n};\n\ntype ClaimFormProps = {\n  // FOR SHORTCUT BUTTONS CALL\n  claim_type?: PlansTypeKeys;\n  file_id?: string;\n  // REQUIRED PROPS\n  formState: boolean;\n  setFormState: (value: boolean, response?: boolean) => void;\n  auth: Auth;\n  sessionPlan: SessionPlanReducerInterface;\n  claiming: ClaimingReducerType;\n  documentReducer: DocumentReducerInterface;\n  courses: course[] | null;\n  loadCourses: Function;\n  getMyAnswers: Function;\n  getMyPlacement: Function;\n  getClaimReasons: Function;\n  getActiveSessionPlan: Function;\n  createClaim: Function;\n  GetClaimingTypes: Function;\n  getDocumentCategory: Function;\n  getDocumentSubCategory: Function;\n  getDocumentFields: Function;\n  getMyRejectedApplications: Function;\n  getMyRejectedDocuments: Function;\n  getMyClaims: Function;\n  PushPopupAlert: (alert: PopupAlertData) => void;\n};\n\ntype ClaimFormState = {\n  loading: boolean;\n  loadingForm: boolean;\n  formError: {\n    element: string;\n    msg: string;\n  } | null;\n  thisClaimType: PlansTypeKeys | null;\n  thisClaimTypeId: string;\n  claimComment: string;\n  claimFileId: string;\n  chooseClaimFile: boolean;\n  chooseClaimReason: boolean;\n  claimReason: claimReasonInterface | null;\n  myPlacement: candidatePlacementInterface | null;\n  viewThisFile: string;\n  formType: \"DEFAULT\" | \"PROPS\";\n  alertError: string | null;\n  activeSession: SessionPlanInterface | null;\n};\n\nclass ClaimForm extends Component<ClaimFormProps, ClaimFormState> {\n  constructor(props: ClaimFormProps) {\n    super(props);\n\n    this.state = {\n      loading: true,\n      loadingForm: false,\n      formError: null,\n      thisClaimType: null,\n      thisClaimTypeId: \"\",\n      claimComment: \"\",\n      claimFileId: \"\",\n      chooseClaimFile: false,\n      viewThisFile: \"\",\n      formType: \"DEFAULT\",\n      alertError: null,\n      activeSession: null,\n      myPlacement: this.props.claiming.myPlacement,\n      chooseClaimReason: false,\n      claimReason: null,\n    };\n  }\n\n  isDocumentIdValid = (\n    documents: DocumentClaimUser[],\n    doc_id: string\n  ): {\n    status: boolean;\n    msg: string;\n    alert: PopupAlertTheme;\n  } => {\n    let doc = documents.find((item) => item.doc_id === doc_id);\n    if (doc) {\n      // CHECK IF DOCUMENT HAS REJECTED STATUS\n      if (doc.validated_by.validation_status !== \"rejected\") {\n        return {\n          status: false,\n          msg: \"Only rejected document are allowed for claim\",\n          alert: PopupAlertTheme.info,\n        };\n      }\n      // CHECK IF DOCUMENT HAS ALREADY CLAIMED ON\n      if (\n        this.props.claiming.myClaims &&\n        this.state.activeSession &&\n        isClaimAllowed(\n          this.props.claiming.myClaims,\n          this.state.activeSession.session_plan_id,\n          doc_id\n        )\n      ) {\n        return {\n          status: false,\n          msg: \"This document already in claiming list!\",\n          alert: PopupAlertTheme.info,\n        };\n      }\n      return { status: true, msg: \"\", alert: PopupAlertTheme.success };\n    } else {\n      return {\n        status: false,\n        msg: \"Invalid document id\",\n        alert: PopupAlertTheme.warning,\n      };\n    }\n    // return {\n    //   status: false,\n    //   msg: \"No Documents, please try again\",\n    //   alert: PopupAlertTheme.info,\n    // };\n  };\n\n  isApplicationIdValid = (\n    applications: claimApplicationsInterface[],\n    app_id: string\n  ): {\n    status: boolean;\n    msg: string;\n    alert: PopupAlertTheme;\n  } => {\n    let app = applications.find((item) => item.application_id === app_id);\n    console.log(\"====================================\");\n    console.log({ app, app_id });\n    console.log(\"====================================\");\n    if (app) {\n      // CHECK IF DOCUMENT HAS REJECTED STATUS\n      if (app.application_status !== ApplicationStates.Rejected) {\n        return {\n          status: false,\n          msg: \"Only rejected application are allowed for claim\",\n          alert: PopupAlertTheme.info,\n        };\n      }\n      // CHECK IF DOCUMENT HAS ALREADY CLAIMED ON\n      if (\n        this.props.claiming.myClaims &&\n        this.state.activeSession &&\n        isClaimAllowed(\n          this.props.claiming.myClaims,\n          this.state.activeSession.session_plan_id,\n          app.application_id\n        )\n      ) {\n        return {\n          status: false,\n          msg: \"This application already in claiming list!\",\n          alert: PopupAlertTheme.info,\n        };\n      }\n      return { status: true, msg: \"\", alert: PopupAlertTheme.info };\n    } else {\n      return {\n        status: false,\n        msg: \"Invalid application id\",\n        alert: PopupAlertTheme.warning,\n      };\n    }\n    // return {\n    //   status: false,\n    //   msg: \"No Application, please try again!\",\n    //   alert: PopupAlertTheme.info,\n    // };\n  };\n\n  setLoading = (state: boolean) => {\n    this.setState({ loading: state });\n  };\n\n  setLoadingForm = (state: boolean) => {\n    this.setState({ loadingForm: state });\n  };\n\n  setFormError = (\n    data: {\n      element: string;\n      msg: string;\n    } | null\n  ) => {\n    this.setState({ formError: data });\n  };\n\n  setAlertError = (data: string | null) => {\n    this.setState({ alertError: data });\n  };\n\n  setClaimFileId = (data: string) => {\n    this.setState({ claimFileId: data });\n  };\n\n  setViewThisFile = (data: string) => {\n    this.setState({ viewThisFile: data });\n  };\n\n  setChooseClaimFile = (data: boolean) => {\n    this.setState({ chooseClaimFile: data });\n  };\n\n  setChooseClaimReason = (data: boolean) => {\n    this.setState({ chooseClaimReason: data });\n  };\n\n  setClaimReason = (value: claimReasonInterface | null) => {\n    this.setState({ claimReason: value });\n  };\n\n  setClaimComment = (data: string) => {\n    this.setState({ claimComment: data });\n  };\n\n  isClaimTypeOpen = (\n    thisSession: SessionPlanInterface,\n    thisType: PlansTypeKeys\n  ): boolean => {\n    let data: PlansInterface | undefined;\n    if (thisType === PlansTypeKeys.APPLICATION) {\n      data = thisSession.plans.find(\n        (item) => item.type_key === PlansTypeKeys.APPLICATION\n      );\n      if (data && isPlanActive(thisSession, data) === \"OPEN\") {\n        return true;\n      }\n    } else if (thisType === PlansTypeKeys.DOCUMENT_VALIDATION) {\n      data = thisSession.plans.find(\n        (item) => item.type_key === PlansTypeKeys.DOCUMENT_VALIDATION\n      );\n      if (data && isPlanActive(thisSession, data) === \"OPEN\") {\n        return true;\n      }\n    } else if (thisType === PlansTypeKeys.PLACEMENT_TRANSFER) {\n      data = thisSession.plans.find(\n        (item) => item.type_key === PlansTypeKeys.PLACEMENT_TRANSFER\n      );\n      if (data && isPlanActive(thisSession, data) === \"OPEN\") {\n        return true;\n      }\n    }\n    return false;\n  };\n\n  isClaimBtnValid = (thisSession: SessionPlanInterface) => {\n    if (this.props.file_id || this.props.claim_type) {\n      // CHECK IF CLAIM TYPE && CLAIM FILE PROPS ARE PASSED PROPS\n      if (!this.props.claim_type) {\n        this.props.PushPopupAlert({\n          title: \"Claim type is required!\",\n          theme: PopupAlertTheme.warning,\n        });\n        this.props.setFormState(false);\n        this.setState({\n          claimFileId: \"\",\n          thisClaimType: null,\n          thisClaimTypeId: \"\",\n          claimComment: \"\",\n          chooseClaimFile: false,\n          formType: \"DEFAULT\",\n          viewThisFile: \"\",\n          formError: null,\n        });\n      } else if (!this.props.file_id) {\n        this.props.PushPopupAlert({\n          title: \"Claim file is required!\",\n          theme: PopupAlertTheme.warning,\n        });\n        this.props.setFormState(false);\n        this.setState({\n          claimFileId: \"\",\n          thisClaimType: null,\n          thisClaimTypeId: \"\",\n          claimComment: \"\",\n          chooseClaimFile: false,\n          formType: \"DEFAULT\",\n          viewThisFile: \"\",\n          formError: null,\n        });\n      } else if (!this.isClaimTypeOpen(thisSession, this.props.claim_type)) {\n        // IF CLAIM TYPE && CLAIM FILE PROPS ARE PASSED PROPS\n        // CHECK IF CLAIM TYPE IS OPEN ================\n        this.props.PushPopupAlert({\n          title: \"Claim type is closed!\",\n          theme: PopupAlertTheme.warning,\n        });\n        this.props.setFormState(false);\n        this.setState({\n          claimFileId: \"\",\n          thisClaimType: null,\n          thisClaimTypeId: \"\",\n          claimComment: \"\",\n          chooseClaimFile: false,\n          formType: \"DEFAULT\",\n          viewThisFile: \"\",\n          formError: null,\n        });\n      }\n    }\n  };\n\n  displayClaimType = (claimType: PlansTypeKeys): string => {\n    let result: string = \"\";\n    switch (claimType) {\n      case PlansTypeKeys.APPLICATION:\n        result = \"application\";\n        break;\n      case PlansTypeKeys.DOCUMENT_VALIDATION:\n        result = \"document\";\n        break;\n      case PlansTypeKeys.EXAMINATION:\n        result = \"exam\";\n        break;\n      case PlansTypeKeys.MARKS_PUBLICATION:\n        result = \"marks publication\";\n        break;\n      case PlansTypeKeys.PLACEMENT_TRANSFER:\n        result = \"placement\";\n        break;\n      default:\n        result = \"\";\n        break;\n    }\n\n    return result;\n  };\n\n  isClaimsAllowed = (\n    thisPeriod: SessionPlanInterface\n  ): {\n    status: boolean;\n    msg: string;\n    alert: PopupAlertTheme;\n  } => {\n    // LOADING CLAIMING OF CURRENT CANDIDATES ================================\n    if (\n      this.props.claiming.myClaims === null &&\n      this.props.file_id &&\n      this.props.claim_type\n    ) {\n      this.props.getMyClaims(\n        this.props.auth.user.user_id,\n        thisPeriod.session_plan_id,\n        (status: boolean, msg: string, data?: CandidateClaimInterface[]) => {\n          // !status && setLoadingClaims(status);\n          this.setLoading(status);\n          if (!status && msg.length) {\n            this.props.PushPopupAlert({\n              title: msg,\n              theme: PopupAlertTheme.danger,\n            });\n          }\n          if (data) {\n            let claim = data.find(\n              (item) =>\n                item.claiming_on_id === this.props.file_id &&\n                item.period_id === thisPeriod.session_plan_id\n            );\n            if (claim) {\n              return {\n                status: false,\n                msg: `You have already claimed on this ${this.displayClaimType(\n                  this.props.claim_type!\n                )}`,\n                alert: PopupAlertTheme.info,\n              };\n            }\n          }\n        }\n      );\n    } else if (\n      this.props.claiming.myClaims &&\n      this.props.file_id &&\n      this.props.claim_type\n    ) {\n      let claim = this.props.claiming.myClaims.find(\n        (item) =>\n          item.claiming_on_id === this.props.file_id &&\n          item.period_id === thisPeriod.session_plan_id\n      );\n      if (claim) {\n        return {\n          status: false,\n          msg: `You have already claimed on this ${this.displayClaimType(\n            this.props.claim_type!\n          )}`,\n          alert: PopupAlertTheme.info,\n        };\n      }\n    }\n\n    return {\n      status: true,\n      msg: \"\",\n      alert: PopupAlertTheme.success,\n    };\n  };\n\n  loadExamAnswers = (\n    activeSessionPlan: SessionPlanInterface,\n    user_id: string\n  ) => {\n    this.props.getMyAnswers(\n      activeSessionPlan.session_plan_id,\n      user_id,\n      (status: boolean, msg: string, data: SessionPlanInterface | \"none\") => {\n        this.setLoading(status);\n        if (!status && msg.length) {\n          this.props.PushPopupAlert({\n            title: msg,\n            theme: PopupAlertTheme.danger,\n          });\n        }\n        if (data) {\n          console.log(\"====================================\");\n          console.log({ data });\n          console.log(\"====================================\");\n        }\n      }\n    );\n  };\n\n  componentDidMount = () => {\n    if (\n      this.props.sessionPlan.activeSessionPlan === null ||\n      this.props.sessionPlan.activeSessionPlan === \"none\"\n    ) {\n      this.props.getActiveSessionPlan(\n        (status: boolean, msg: string, data: SessionPlanInterface | \"none\") => {\n          this.setLoading(status);\n          if (!status && msg.length) {\n            this.props.PushPopupAlert({\n              title: msg,\n              theme: PopupAlertTheme.danger,\n            });\n          }\n          if (data && data === \"none\") {\n            this.props.PushPopupAlert({\n              title: \"No session active session\",\n              theme: PopupAlertTheme.danger,\n            });\n            this.props.setFormState(false);\n            this.setState({\n              claimFileId: \"\",\n              thisClaimType: null,\n              thisClaimTypeId: \"\",\n              claimComment: \"\",\n              chooseClaimFile: false,\n              formType: \"DEFAULT\",\n              viewThisFile: \"\",\n              formError: null,\n            });\n          } else if (data) {\n            let _isClaimsAllowed = this.isClaimsAllowed(data);\n            if (!_isClaimsAllowed.status) {\n              this.props.PushPopupAlert({\n                title: _isClaimsAllowed.msg,\n                theme: _isClaimsAllowed.alert,\n              });\n              this.props.setFormState(false);\n            }\n            this.setState({ activeSession: data });\n            this.loadExamAnswers(data, this.props.auth.user.user_id);\n            this.isClaimBtnValid(data);\n          }\n        }\n      );\n    } else {\n      this.setState({\n        activeSession: this.props.sessionPlan.activeSessionPlan,\n      });\n      this.isClaimBtnValid(this.props.sessionPlan.activeSessionPlan);\n      let _isClaimsAllowed = this.isClaimsAllowed(\n        this.props.sessionPlan.activeSessionPlan\n      );\n      if (!_isClaimsAllowed.status) {\n        this.props.PushPopupAlert({\n          title: _isClaimsAllowed.msg,\n          theme: _isClaimsAllowed.alert,\n        });\n        this.props.setFormState(false);\n      }\n      this.loadExamAnswers(\n        this.props.sessionPlan.activeSessionPlan,\n        this.props.auth.user.user_id\n      );\n      this.setLoading(false);\n    }\n\n    if (this.props.documentReducer.documentCategory === null) {\n      this.props.getDocumentCategory();\n    }\n    if (this.props.documentReducer.documentSubCategory === null) {\n      this.props.getDocumentSubCategory();\n    }\n    if (this.props.documentReducer.documentFields === null) {\n      this.props.getDocumentFields();\n    }\n\n    if (this.props.claiming.candidateApplications === null) {\n      this.props.getMyRejectedApplications(\n        this.props.auth.user.user_id,\n        (status: boolean, msg: string, data?: claimApplicationsInterface[]) => {\n          this.setLoading(status);\n          if (!status) {\n            if (msg.length > 0) {\n              this.props.PushPopupAlert({\n                title: msg,\n                theme: PopupAlertTheme.danger,\n              });\n            }\n            if (data) {\n              // PROPS VALIDATION PROCESS ###############\n              if (\n                this.props.claim_type &&\n                this.props.file_id &&\n                this.state.formType === \"DEFAULT\"\n              ) {\n                if (this.props.claim_type === PlansTypeKeys.APPLICATION) {\n                  let _isApplicationIdValid = this.isApplicationIdValid(\n                    data,\n                    this.props.file_id\n                  );\n                  if (!_isApplicationIdValid.status) {\n                    this.props.PushPopupAlert({\n                      title: _isApplicationIdValid.msg,\n                      theme: _isApplicationIdValid.alert,\n                    });\n                    this.props.setFormState(false);\n                  } else {\n                    this.setState({\n                      thisClaimType: this.props.claim_type,\n                      claimFileId: this.props.file_id,\n                      formType: \"PROPS\",\n                    });\n                  }\n                }\n              }\n            }\n          }\n        }\n      );\n    }\n\n    if (this.props.claiming.candidateDocuments === null) {\n      this.props.getMyRejectedDocuments(\n        (status: boolean, msg: string, data?: DocumentClaimUser[]) => {\n          this.setLoading(status);\n          if (!status) {\n            if (msg.length > 0) {\n              this.props.PushPopupAlert({\n                title: msg,\n                theme: PopupAlertTheme.danger,\n              });\n            }\n            if (data) {\n              // PROPS VALIDATION PROCESS ###############\n              if (\n                this.props.claim_type &&\n                this.props.file_id &&\n                this.state.formType === \"DEFAULT\"\n              ) {\n                if (\n                  this.props.claim_type === PlansTypeKeys.DOCUMENT_VALIDATION\n                ) {\n                  let _isDocumentIdValid = this.isDocumentIdValid(\n                    data,\n                    this.props.file_id\n                  );\n                  if (!_isDocumentIdValid.status) {\n                    this.props.PushPopupAlert({\n                      title: _isDocumentIdValid.msg,\n                      theme: _isDocumentIdValid.alert,\n                    });\n                    // setAlertError(_isDocumentIdValid.msg);\n                    this.props.setFormState(false);\n                  } else {\n                    this.setState({\n                      thisClaimType: this.props.claim_type,\n                      claimFileId: this.props.file_id,\n                      formType: \"PROPS\",\n                    });\n                  }\n                }\n              }\n            }\n          }\n        }\n      );\n    }\n\n    if (this.props.claiming.claimReasons === null) {\n      this.props.getClaimReasons((status: boolean, msg: string) => {\n        this.setLoading(status);\n        if (!status) {\n          if (msg.length > 0) {\n            this.props.PushPopupAlert({\n              title: msg,\n              theme: PopupAlertTheme.danger,\n            });\n          }\n        }\n      });\n    }\n\n    if (this.props.claiming.myPlacement === null) {\n      this.props.getMyPlacement(\n        this.props.auth.user.user_id,\n        (\n          status: boolean,\n          msg: string,\n          data?: candidatePlacementInterface | null\n        ) => {\n          this.setLoading(status);\n          if (!status) {\n            if (msg.length > 0) {\n              this.props.PushPopupAlert({\n                title: msg,\n                theme: PopupAlertTheme.danger,\n              });\n            }\n          }\n          if (data) {\n            this.setState({ myPlacement: data });\n          }\n        }\n      );\n    }\n\n    // PROPS VALIDATION PROCESS ###############\n    if (\n      this.props.claim_type &&\n      this.props.file_id &&\n      this.state.formType === \"DEFAULT\"\n    ) {\n      this.setState({ thisClaimType: this.props.claim_type });\n      if (\n        this.props.claim_type === PlansTypeKeys.DOCUMENT_VALIDATION &&\n        this.props.claiming.candidateDocuments\n      ) {\n        let _isDocumentIdValid = this.isDocumentIdValid(\n          this.props.claiming.candidateDocuments,\n          this.props.file_id\n        );\n        if (!_isDocumentIdValid.status) {\n          this.props.PushPopupAlert({\n            title: _isDocumentIdValid.msg,\n            theme: _isDocumentIdValid.alert,\n          });\n          // setAlertError(_isDocumentIdValid.msg);\n          this.props.setFormState(false);\n        } else {\n          this.setState({\n            thisClaimType: this.props.claim_type,\n            claimFileId: this.props.file_id,\n            formType: \"PROPS\",\n          });\n        }\n      }\n      if (\n        this.props.claim_type === PlansTypeKeys.APPLICATION &&\n        this.props.claiming.candidateApplications\n      ) {\n        let _isApplicationIdValid = this.isApplicationIdValid(\n          this.props.claiming.candidateApplications,\n          this.props.file_id\n        );\n        if (!_isApplicationIdValid.status) {\n          this.props.PushPopupAlert({\n            title: _isApplicationIdValid.msg,\n            theme: _isApplicationIdValid.alert,\n          });\n          this.props.setFormState(false);\n        } else {\n          this.setState({\n            thisClaimType: this.props.claim_type,\n            claimFileId: this.props.file_id,\n            formType: \"PROPS\",\n          });\n        }\n      }\n    }\n\n    if (\n      this.props.courses === null ||\n      (this.props.courses.length === 0 && this.state.loading)\n    ) {\n      this.props.loadCourses(this.setLoading);\n      this.setLoading(false);\n    } else {\n      this.setLoading(false);\n    }\n  };\n\n  getDocumentById = (\n    documents: DocumentClaimUser[],\n    doc_id: string\n  ): DocumentClaimUser => {\n    return documents.filter((item) => item.doc_id === doc_id)[0];\n  };\n\n  getApplicationById = (\n    applications: claimApplicationsInterface[],\n    application_id: string\n  ): claimApplicationsInterface => {\n    return applications.filter(\n      (item) => item.application_id === application_id\n    )[0];\n  };\n\n  getExamById = (\n    exams: ClaimExamResultsDetails[],\n    answer_sheet_id: string\n  ): ClaimExamResultsDetails | undefined => {\n    return exams.find((item) => item.answer_sheet_id === answer_sheet_id);\n  };\n\n  getValidation = (\n    thisId: string\n  ): {\n    old_reason: string;\n    old_status: string;\n    old_evaluated_by: string;\n  } => {\n    let result: {\n      old_reason: string;\n      old_status: string;\n      old_evaluated_by: string;\n    } = { old_reason: \"\", old_status: \"\", old_evaluated_by: \"\" };\n\n    if (\n      this.state.thisClaimType === PlansTypeKeys.DOCUMENT_VALIDATION &&\n      this.props.claiming.candidateDocuments\n    ) {\n      result = {\n        old_reason: this.getDocumentById(\n          this.props.claiming.candidateDocuments,\n          thisId\n        ).validated_by.comment,\n        old_status: this.getDocumentById(\n          this.props.claiming.candidateDocuments,\n          thisId\n        ).validated_by.validation_status,\n        old_evaluated_by: this.getDocumentById(\n          this.props.claiming.candidateDocuments,\n          thisId\n        ).validated_by.user_id,\n      };\n    } else if (\n      this.state.thisClaimType === PlansTypeKeys.APPLICATION &&\n      this.props.claiming.candidateApplications\n    ) {\n      result = {\n        old_reason: this.getApplicationById(\n          this.props.claiming.candidateApplications,\n          thisId\n        ).override_by.comment,\n        old_status: this.getApplicationById(\n          this.props.claiming.candidateApplications,\n          thisId\n        ).override_by.application_status,\n        old_evaluated_by: this.getApplicationById(\n          this.props.claiming.candidateApplications,\n          thisId\n        ).override_by.user_id,\n      };\n    }\n\n    return result;\n  };\n\n  cleanToClose = (response?: boolean) => {\n    if (this.state.formType === \"PROPS\" && response) {\n      this.props.setFormState(false, response);\n    } else {\n      this.props.setFormState(false);\n    }\n    this.setState({\n      claimFileId: \"\",\n      thisClaimType: null,\n      thisClaimTypeId: \"\",\n      claimComment: \"\",\n      chooseClaimFile: false,\n      formType: \"DEFAULT\",\n      viewThisFile: \"\",\n      formError: null,\n    });\n  };\n\n  loadUserById = async (user_id: string, callback: Function) => {\n    if (isEmptyOrSpaces(user_id)) {\n      return this.props.PushPopupAlert({\n        title: \"No user id provided\",\n        theme: PopupAlertTheme.danger,\n      });\n    }\n    try {\n      setAxiosToken();\n      const res = await axios.get<UserInterface>(\n        `${API.AUTH}/users/${user_id}`\n      );\n      console.log(\"====================================\");\n      console.log({ loadUserById: res });\n      console.log(\"====================================\");\n      if (res) {\n        callback(res.data);\n      }\n    } catch (error) {\n      console.error({ error });\n      this.props.PushPopupAlert({\n        title: errorToText(error),\n        theme: PopupAlertTheme.danger,\n      });\n    }\n  };\n\n  handleSubmit = async (e: React.FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n    if (!this.state.thisClaimType) {\n      return this.setFormError({\n        element: \"claim_type\",\n        msg: \"Claim type is required!\",\n      });\n    }\n    if (isEmptyOrSpaces(this.state.claimFileId)) {\n      return this.setFormError({\n        element: \"claim_file\",\n        msg: `Please select ${this.state.thisClaimType.toLocaleLowerCase()} you are claiming on!`,\n      });\n    }\n\n    if (!this.state.claimReason) {\n      return this.setFormError({\n        element: \"claim_reason\",\n        msg: `Please select the reason of your claim!`,\n      });\n    }\n\n    if (isEmptyOrSpaces(this.state.claimComment)) {\n      return this.setFormError({\n        element: \"claim_comment\",\n        msg: `Claim comment is required!`,\n      });\n    }\n\n    if (!this.state.activeSession) {\n      return this.setAlertError(`No active claiming session is available!`);\n    }\n\n    this.setLoadingForm(true);\n    let old_evaluator_email: string = \"info@system.com\";\n    let old_evaluator_name: string = \"System\";\n    let evaluator_email: string = \"\";\n    let evaluator_name: string = \"\";\n\n    if (this.state.thisClaimType !== PlansTypeKeys.EXAMINATION) {\n      await this.loadUserById(\n        this.getValidation(this.state.claimFileId).old_evaluated_by,\n        (data: UserInterface) => {\n          old_evaluator_email = data.email;\n          old_evaluator_name =\n            data.user_info.fname + \" \" + data.user_info.lname;\n        }\n      );\n    }\n\n    try {\n      console.log(\"====================================\");\n      console.log({\n        claiming_on_id: this.state.claimFileId,\n        type_key: this.state.thisClaimType,\n        user: this.props.auth.user.user_id,\n        period_id: this.state.activeSession.session_plan_id,\n        default_claim_resaons: this.state.claimReason.id,\n        reason: this.state.claimComment,\n        old_reason:\n          this.state.thisClaimType === PlansTypeKeys.EXAMINATION ||\n          this.state.thisClaimType === PlansTypeKeys.PLACEMENT_TRANSFER\n            ? \"System\"\n            : this.getValidation(this.state.claimFileId).old_reason,\n        old_status:\n          this.state.thisClaimType === PlansTypeKeys.EXAMINATION ||\n          this.state.thisClaimType === PlansTypeKeys.PLACEMENT_TRANSFER\n            ? \"Failed\"\n            : this.getValidation(this.state.claimFileId).old_status,\n        old_evaluated_by:\n          this.state.thisClaimType === PlansTypeKeys.EXAMINATION ||\n          this.state.thisClaimType === PlansTypeKeys.PLACEMENT_TRANSFER\n            ? \"\"\n            : this.getValidation(this.state.claimFileId).old_evaluated_by,\n        old_evaluator_email,\n        old_evaluator_name,\n        evaluator_email,\n        evaluator_name,\n      });\n      console.log(\"====================================\");\n\n      setAxiosToken();\n      const res = await axios.post<CandidateClaimInterface>(\n        `${API.CLAIMING}/user/create`,\n        {\n          claiming_on_id: this.state.claimFileId,\n          type_key: this.state.thisClaimType,\n          user: this.props.auth.user.user_id,\n          period_id: this.state.activeSession.session_plan_id,\n          default_claim_resaons: this.state.claimReason.id,\n          reason: this.state.claimComment,\n          old_reason:\n            this.state.thisClaimType === PlansTypeKeys.EXAMINATION ||\n            this.state.thisClaimType === PlansTypeKeys.PLACEMENT_TRANSFER\n              ? \"System\"\n              : this.getValidation(this.state.claimFileId).old_reason,\n          old_status:\n            this.state.thisClaimType === PlansTypeKeys.EXAMINATION ||\n            this.state.thisClaimType === PlansTypeKeys.PLACEMENT_TRANSFER\n              ? \"Failed\"\n              : this.getValidation(this.state.claimFileId).old_status,\n          old_evaluated_by:\n            this.state.thisClaimType === PlansTypeKeys.EXAMINATION ||\n            this.state.thisClaimType === PlansTypeKeys.PLACEMENT_TRANSFER\n              ? \"\"\n              : this.getValidation(this.state.claimFileId).old_evaluated_by,\n          old_evaluator_email,\n          old_evaluator_name,\n          evaluator_email,\n          evaluator_name,\n        }\n      );\n      console.log({ createClaim: res.data });\n      if (res.status === 201 || res.status === 200) {\n        this.props.createClaim(res.data);\n        this.props.PushPopupAlert({\n          title: \"Claim sent successful\",\n          theme: PopupAlertTheme.success,\n        });\n        this.cleanToClose(true);\n      }\n    } catch (error) {\n      console.error({ error });\n      this.props.PushPopupAlert({\n        title: errorToText(error),\n        theme: PopupAlertTheme.danger,\n      });\n    }\n    this.setLoadingForm(false);\n  };\n\n  selectClaimType = (thisClaim: string) => {\n    this.setState({\n      thisClaimType: isEmptyOrSpaces(thisClaim)\n        ? null\n        : (thisClaim as PlansTypeKeys),\n    });\n  };\n\n  generateChooseFileTitle = (thisClaimType: PlansTypeKeys | null): string => {\n    let result: string = \"\";\n\n    switch (thisClaimType) {\n      case PlansTypeKeys.APPLICATION:\n        result = `Select application you are claiming on?`;\n        break;\n      case PlansTypeKeys.DOCUMENT_VALIDATION:\n        result = `Select document you are claiming on?`;\n        break;\n      case PlansTypeKeys.EXAMINATION:\n        result = `Select exam you are claiming on?`;\n        break;\n      case PlansTypeKeys.MARKS_PUBLICATION:\n        result = `Select marks publication you are claiming on?`;\n        break;\n      case PlansTypeKeys.PLACEMENT_TRANSFER:\n        result = `Select placement you are claiming on?`;\n        break;\n      default:\n        result = \"Select file you are claiming on?\";\n        break;\n    }\n\n    return result;\n  };\n\n  render() {\n    if (\n      this.state.loading ||\n      this.state.activeSession === null ||\n      (this.props.claiming.myClaims === null &&\n        this.props.file_id &&\n        this.props.claim_type)\n    ) {\n      return null;\n    }\n\n    return (\n      <div className=\"pb-3\">\n        {this.props.formState && (\n          <Modal\n            backDrop={true}\n            theme={Themes.default}\n            close={(): void => {\n              !this.state.loadingForm &&\n                this.state.viewThisFile.length <= 0 &&\n                this.cleanToClose();\n              !this.state.loadingForm &&\n                this.state.viewThisFile.length > 0 &&\n                this.setViewThisFile(\"\");\n            }}\n            displayClose={true}\n            backDropClose={false}\n            title={\n              <div className=\"text-gray-900 font-bold text-xl md:ml-1\">\n                {this.state.viewThisFile.length <= 0 && \"Claiming form\"}\n                {this.state.viewThisFile.length > 0 &&\n                  this.state.thisClaimType ===\n                    PlansTypeKeys.DOCUMENT_VALIDATION &&\n                  \"Viewing document\"}\n                {this.state.viewThisFile.length > 0 &&\n                  this.state.thisClaimType === PlansTypeKeys.APPLICATION &&\n                  \"Viewing application\"}\n              </div>\n            }\n            widthSizeClass={\n              this.state.viewThisFile.length > 0\n                ? ModalSize.extraLarge\n                : ModalSize.medium\n            }\n            padding={{ title: true, body: false, footer: false }}\n          >\n            {/* CLAIM FORM ============================================== */}\n            {this.state.viewThisFile.length <= 0 && (\n              <form onSubmit={(e) => this.handleSubmit(e)}>\n                <div className=\"px-6 pb-3\">\n                  {this.state.alertError && (\n                    <div\n                      className=\"alert-warning cursor-pointer\"\n                      onClick={() => this.setAlertError(null)}\n                    >\n                      {this.state.alertError}\n                    </div>\n                  )}\n                  <div className=\"text-base text-gray-700 sm:text-lg\">\n                    {/* SELECT CLAIM TYPE ============================================== */}\n                    <div className=\"flex flex-col mb-2\">\n                      <label>Claim type</label>\n                      <select\n                        className={`rounded px-2 py-2 w-full bg-white focus:outline-none ${\n                          this.state.formType === \"PROPS\" &&\n                          \"cursor-not-allowed\"\n                        } ${\n                          this.state.formError &&\n                          this.state.formError.element === \"claim_type\"\n                            ? \"border-red-500\"\n                            : \"border-gray-500\"\n                        } border-2`}\n                        onChange={(e: React.ChangeEvent<HTMLSelectElement>) => {\n                          this.selectClaimType(e.target.value);\n                          this.setClaimFileId(\"\");\n                          this.state.formError &&\n                            this.state.formError.element === \"claim_type\" &&\n                            this.setFormError(null);\n                        }}\n                        value={\n                          this.state.thisClaimType\n                            ? this.state.thisClaimType\n                            : \"\"\n                        }\n                        disabled={\n                          this.state.loadingForm ||\n                          this.state.formType === \"PROPS\"\n                        }\n                      >\n                        <option value=\"\">Choose claim type</option>\n                        {Object.values(PlansTypeKeys).map((item, index) => (\n                          <option\n                            value={item}\n                            key={index + item}\n                            className={`${\n                              item === PlansTypeKeys.MARKS_PUBLICATION ||\n                              item === PlansTypeKeys.PLACEMENT_TRANSFER\n                                ? \"hidden\"\n                                : \"block\"\n                            }`}\n                          >\n                            {capitalizeFirstLetter(\n                              item.toLocaleLowerCase().replace(/_/g, \" \")\n                            )}\n                          </option>\n                        ))}\n                      </select>\n                      {this.state.formError &&\n                        this.state.formError.element === \"claim_type\" && (\n                          <span className=\"text-red-500\">\n                            {this.state.formError.msg}\n                          </span>\n                        )}\n                    </div>\n                    {/* END SELECT CLAIM TYPE ============================================== */}\n\n                    {/* SELECT FILE TO CLAIM ON ============================================== */}\n                    <div className=\"flex flex-col mb-2\">\n                      <label>\n                        {this.generateChooseFileTitle(this.state.thisClaimType)}\n                      </label>\n                      <div\n                        className={`text-left bg-white border-2 ${\n                          this.state.formType !== \"PROPS\"\n                            ? \"border-gray-700\"\n                            : \"border-gray-400 text-gray-500\"\n                        } rounded w-full ${\n                          this.state.chooseClaimFile ? \"h-64\" : \"h-10\"\n                        } ${\n                          this.state.formError &&\n                          this.state.formError.element === \"claim_file\"\n                            ? \"border-red-500\"\n                            : \"\"\n                        } border-2 ${\n                          this.state.thisClaimType &&\n                          !this.state.chooseClaimFile &&\n                          this.state.formType !== \"PROPS\"\n                            ? \"cursor-pointer\"\n                            : !this.state.chooseClaimFile &&\n                              \"cursor-not-allowed\"\n                        }`}\n                        title={\n                          !this.state.thisClaimType\n                            ? \"Choose claim type first!\"\n                            : \"\"\n                        }\n                        onClick={() => {\n                          this.state.formType === \"DEFAULT\" &&\n                            this.state.thisClaimType &&\n                            !this.state.chooseClaimFile &&\n                            this.setChooseClaimFile(true);\n                          this.state.formError &&\n                            this.state.formError.element === \"claim_file\" &&\n                            this.setFormError(null);\n                        }}\n                      >\n                        {/* DISPLAYING FILTERED SELECTING FILE ============================ */}\n                        {this.state.claimFileId.length > 0 &&\n                        !this.state.chooseClaimFile ? (\n                          <p className=\"my-1 mx-2\">\n                            {this.state.thisClaimType ===\n                              PlansTypeKeys.DOCUMENT_VALIDATION &&\n                              this.props.claiming.candidateDocuments &&\n                              ClaimGetDocTitle(\n                                this.props.documentReducer,\n                                this.getDocumentById(\n                                  this.props.claiming.candidateDocuments,\n                                  this.state.claimFileId\n                                )\n                              ).main}\n                            {this.state.thisClaimType ===\n                              PlansTypeKeys.APPLICATION &&\n                              this.props.claiming.candidateApplications &&\n                              this.getApplicationById(\n                                this.props.claiming.candidateApplications,\n                                this.state.claimFileId\n                              ).position.position_title}\n                            {this.state.thisClaimType ===\n                              PlansTypeKeys.EXAMINATION &&\n                              this.props.courses &&\n                              this.props.claiming.myAnswer &&\n                              getCourseIdBySheetId(\n                                this.props.claiming.myAnswer,\n                                this.state.claimFileId\n                              ) &&\n                              getCourseById(\n                                this.props.courses,\n                                getCourseIdBySheetId(\n                                  this.props.claiming.myAnswer,\n                                  this.state.claimFileId\n                                )!.course\n                              ) &&\n                              getCourseById(\n                                this.props.courses,\n                                getCourseIdBySheetId(\n                                  this.props.claiming.myAnswer,\n                                  this.state.claimFileId\n                                )!.course\n                              )!.course_name}\n\n                            {this.state.thisClaimType ===\n                              PlansTypeKeys.PLACEMENT_TRANSFER &&\n                              this.state.myPlacement &&\n                              !isEmptyOrSpaces(this.state.claimFileId) &&\n                              \"Placed on \" +\n                                this.state.myPlacement.placed.school\n                                  .school_name}\n                          </p>\n                        ) : (\n                          !this.state.chooseClaimFile && (\n                            <p className=\"my-1 mx-2\">\n                              Select Claim{\" \"}\n                              {this.state.thisClaimType &&\n                                this.state.thisClaimType\n                                  .toLocaleLowerCase()\n                                  .replace(/_/g, \" \")}\n                            </p>\n                          )\n                        )}\n                        {/* END DISPLAYING FILTERED SELECTING FILE ============================ */}\n\n                        {/* LISTING OF REJECTED DOCUMENTS ============================ */}\n                        {this.state.chooseClaimFile &&\n                          this.state.thisClaimType ===\n                            PlansTypeKeys.DOCUMENT_VALIDATION &&\n                          this.props.claiming.candidateDocuments &&\n                          this.props.claiming.myClaims &&\n                          this.props.sessionPlan.activeSessionPlan &&\n                          this.props.sessionPlan.activeSessionPlan !==\n                            \"none\" && (\n                            <FormDocumentList\n                              setChooseClaimFile={this.setChooseClaimFile}\n                              setClaimFileId={this.setClaimFileId}\n                              setViewThisFile={this.setViewThisFile}\n                              viewThisFile={this.state.viewThisFile}\n                              candidateDocuments={\n                                this.props.claiming.candidateDocuments\n                              }\n                              documentCategories={this.props.documentReducer}\n                              myClaims={this.props.claiming.myClaims}\n                              activeSession={\n                                this.props.sessionPlan.activeSessionPlan\n                              }\n                            />\n                          )}\n                        {/* END LISTING OF REJECTED DOCUMENTS ============================ */}\n                        {/* ---------------------------------------------------------- */}\n                        {/* LISTING OF REJECTED APPLICATION ============================ */}\n                        {this.state.chooseClaimFile &&\n                          this.state.thisClaimType ===\n                            PlansTypeKeys.APPLICATION &&\n                          this.props.claiming.candidateApplications &&\n                          this.props.claiming.myClaims &&\n                          this.props.sessionPlan.activeSessionPlan &&\n                          this.props.sessionPlan.activeSessionPlan !==\n                            \"none\" && (\n                            <FormApplicationList\n                              setChooseClaimFile={this.setChooseClaimFile}\n                              setClaimFileId={this.setClaimFileId}\n                              setViewThisFile={this.setViewThisFile}\n                              viewThisFile={this.state.viewThisFile}\n                              candidateApplications={\n                                this.props.claiming.candidateApplications\n                              }\n                              myClaims={this.props.claiming.myClaims}\n                              activeSession={\n                                this.props.sessionPlan.activeSessionPlan\n                              }\n                            />\n                          )}\n                        {/* END LISTING OF REJECTED APPLICATION ============================ */}\n                        {/* ---------------------------------------------------------- */}\n                        {/* LISTING OF FAILED EXAM ============================ */}\n                        {this.state.chooseClaimFile &&\n                          this.state.thisClaimType ===\n                            PlansTypeKeys.EXAMINATION &&\n                          this.props.claiming.myAnswer &&\n                          this.props.claiming.myClaims &&\n                          this.props.sessionPlan.activeSessionPlan &&\n                          this.props.sessionPlan.activeSessionPlan !==\n                            \"none\" && (\n                            <FormExamList\n                              setChooseClaimFile={this.setChooseClaimFile}\n                              setClaimFileId={this.setClaimFileId}\n                              setViewThisFile={this.setViewThisFile}\n                              viewThisFile={this.state.viewThisFile}\n                              candidateAnswers={this.props.claiming.myAnswer}\n                              myClaims={this.props.claiming.myClaims}\n                              activeSession={\n                                this.props.sessionPlan.activeSessionPlan\n                              }\n                            />\n                          )}\n                        {/* END LISTING OF FAILED EXAM ============================ */}\n                        {/* ---------------------------------------------------------- */}\n                        {/* PENDING PLACMENT ============================ */}\n                        {this.state.chooseClaimFile &&\n                          this.state.thisClaimType ===\n                            PlansTypeKeys.PLACEMENT_TRANSFER &&\n                          this.props.claiming.myClaims &&\n                          this.props.sessionPlan.activeSessionPlan &&\n                          this.props.sessionPlan.activeSessionPlan !==\n                            \"none\" && (\n                            <FormPlacementList\n                              setChooseClaimFile={this.setChooseClaimFile}\n                              setClaimFileId={this.setClaimFileId}\n                              setViewThisFile={this.setViewThisFile}\n                              viewThisFile={this.state.viewThisFile}\n                              myClaims={this.props.claiming.myClaims}\n                              activeSession={\n                                this.props.sessionPlan.activeSessionPlan\n                              }\n                              myPlacement={this.state.myPlacement}\n                            />\n                          )}\n                        {/* END LISTING OF FAILED EXAM ============================ */}\n                      </div>\n                      {this.state.formError &&\n                        this.state.formError.element === \"claim_file\" && (\n                          <span className=\"text-red-500\">\n                            {this.state.formError.msg}\n                          </span>\n                        )}\n                    </div>\n                    {/* END SELECT FILE TO CLAIM ON ============================================== */}\n\n                    {/* CLAIM REASONS ========================================== */}\n                    <div className=\"flex flex-col mb-2\">\n                      <label>Choose reason of your claim</label>\n                      <div\n                        className={`text-left bg-white border-2 border-gray-700 rounded w-full ${\n                          this.state.chooseClaimReason ? \"h-64\" : \"h-auto\"\n                        } ${\n                          this.state.formError &&\n                          this.state.formError.element === \"claim_reason\"\n                            ? \"border-red-500\"\n                            : \"\"\n                        } border-2 ${\n                          this.props.claiming.claimReasons === null\n                            ? \"cursor-wait\"\n                            : \"cursor-pointer\"\n                        }`}\n                        title=\"Choose the reason for your claim!\"\n                        onClick={() => {\n                          !this.state.chooseClaimReason &&\n                            this.setState({ chooseClaimReason: true });\n                          this.state.formError &&\n                            this.state.formError.element === \"claim_reason\" &&\n                            this.setFormError(null);\n                        }}\n                      >\n                        {/* DISPLAYING SELECTED REASON ============================ */}\n                        {this.state.claimReason &&\n                        !this.state.chooseClaimReason ? (\n                          <p className=\"my-1 mx-2\">\n                            {this.state.claimReason.reason}\n                          </p>\n                        ) : (\n                          !this.state.chooseClaimReason && (\n                            <p className=\"my-1 mx-2\">Select reason</p>\n                          )\n                        )}\n                        {/* END DISPLAYING SELECTED REASON ============================ */}\n\n                        {/* LISTING OF CLAIM REASONS ============================ */}\n                        {this.state.chooseClaimReason &&\n                          this.props.claiming.claimReasons && (\n                            <ChooseReason\n                              setChooseClaimReason={this.setChooseClaimReason}\n                              setClaimReason={this.setClaimReason}\n                              claimReason={this.state.claimReason}\n                              allClaimReasons={this.props.claiming.claimReasons}\n                            />\n                          )}\n                        {/* END LISTING OF CLAIM REASONS ============================ */}\n                      </div>\n                      {this.state.formError &&\n                        this.state.formError.element === \"claim_reason\" && (\n                          <span className=\"text-red-500\">\n                            {this.state.formError.msg}\n                          </span>\n                        )}\n                    </div>\n                    {/* END CLAIM REASONS ========================================== */}\n\n                    {/* CLAIM COMMENT ============================================== */}\n                    <div className=\"flex flex-col\">\n                      <label>Comment</label>\n                      <textarea\n                        className={`text-left input-white w-20 inline-block ${\n                          this.state.formError &&\n                          this.state.formError.element === \"claim_comment\"\n                            ? \"border-red-500\"\n                            : \"border-gray-500\"\n                        } border-2`}\n                        placeholder={`Claim comment`}\n                        style={{ resize: \"none\" }}\n                        value={this.state.claimComment}\n                        onChange={(e) => {\n                          this.setClaimComment(e.target.value);\n                          this.state.formError &&\n                            this.state.formError.element === \"claim_comment\" &&\n                            this.setFormError(null);\n                        }}\n                        rows={3}\n                        disabled={this.state.loadingForm}\n                      ></textarea>\n                      {this.state.formError &&\n                        this.state.formError.element === \"claim_comment\" && (\n                          <span className=\"text-red-500\">\n                            {this.state.formError.msg}\n                          </span>\n                        )}\n                    </div>\n                    {/* END CLAIM COMMENT ============================================== */}\n                  </div>\n\n                  <div className=\"pt-3 flex justify-between\">\n                    <button\n                      onClick={() => this.cleanToClose()}\n                      className={`btn bg-gray-400 text-white hover:bg-gray-600 focus:outline-none ${\n                        this.state.loadingForm && \"cursor-not-allowed\"\n                      }`}\n                      type=\"button\"\n                      disabled={this.state.loadingForm}\n                    >\n                      Exit\n                    </button>\n                    <button\n                      className={`btn bg-primary text-white hover:bg-blue-600 focus:outline-none ${\n                        this.state.loadingForm && \"cursor-wait\"\n                      }`}\n                      type=\"submit\"\n                      disabled={this.state.loadingForm}\n                    >\n                      {this.state.loadingForm ? \"Loading...\" : \"Claim\"}\n                    </button>\n                  </div>\n                </div>\n              </form>\n            )}\n            {/* END CLAIM FORM ============================================== */}\n\n            {/* CLAIM DOCUMENT VIEW ============================================== */}\n            {this.state.viewThisFile.length > 0 &&\n              this.props.claiming.candidateDocuments &&\n              this.state.thisClaimType ===\n                PlansTypeKeys.DOCUMENT_VALIDATION && (\n                <DocFormView\n                  thisDoc={this.getDocumentById(\n                    this.props.claiming.candidateDocuments,\n                    this.state.viewThisFile\n                  )}\n                  setViewThisFile={this.setViewThisFile}\n                  documentCategories={this.props.documentReducer}\n                  setChooseClaimFile={this.setChooseClaimFile}\n                  setClaimFileId={this.setClaimFileId}\n                />\n              )}\n            {/* END CLAIM DOCUMENT VIEW ============================================== */}\n            {/* ------------------------------------------------------------------------- */}\n            {/* CLAIM APPLICATION VIEW ============================================== */}\n            {this.state.viewThisFile.length > 0 &&\n              this.props.claiming.candidateApplications &&\n              this.state.thisClaimType === PlansTypeKeys.APPLICATION && (\n                <ApplicationFormView\n                  thisApplication={this.getApplicationById(\n                    this.props.claiming.candidateApplications,\n                    this.state.viewThisFile\n                  )}\n                  documentCategories={this.props.documentReducer}\n                  setChooseClaimFile={this.setChooseClaimFile}\n                  setClaimFileId={this.setClaimFileId}\n                  setViewThisFile={this.setViewThisFile}\n                />\n              )}\n            {/* END CLAIM APPLICATION VIEW ============================================== */}\n            {/* ------------------------------------------------------------------------- */}\n            {/* CLAIM EXAMINATION VIEW ============================================== */}\n            {this.state.viewThisFile.length > 0 &&\n              this.props.claiming.myAnswer &&\n              this.state.thisClaimType === PlansTypeKeys.EXAMINATION &&\n              this.getExamById(\n                this.props.claiming.myAnswer,\n                this.state.viewThisFile\n              ) && (\n                <ExaminationFormView\n                  thisAnswerSheet={\n                    this.getExamById(\n                      this.props.claiming.myAnswer,\n                      this.state.viewThisFile\n                    )!\n                  }\n                  setChooseClaimFile={this.setChooseClaimFile}\n                  setClaimFileId={this.setClaimFileId}\n                  setViewThisFile={this.setViewThisFile}\n                  // thisAnswerSheet={undefined}\n                  // setViewThisFile={undefined}\n                  // setChooseClaimFile={undefined}\n                  // setClaimFileId={undefined}\n                />\n              )}\n            {/* END CLAIM EXAMINATION VIEW ============================================== */}\n          </Modal>\n        )}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = ({\n  auth,\n  document,\n  claiming,\n  sessionPlan,\n  course,\n}: StoreState): {\n  auth: Auth;\n  sessionPlan: SessionPlanReducerInterface;\n  documentReducer: DocumentReducerInterface;\n  claiming: ClaimingReducerType;\n  courses: course[] | null;\n} => {\n  return {\n    auth: auth,\n    sessionPlan,\n    documentReducer: document,\n    claiming,\n    courses: course.courses,\n  };\n};\n\nexport default connect(mapStateToProps, {\n  getActiveSessionPlan,\n  loadCourses,\n  getMyClaims,\n  getClaimReasons,\n  getMyAnswers,\n  getMyPlacement,\n  createClaim,\n  GetClaimingTypes,\n  getMyRejectedApplications,\n  getMyRejectedDocuments,\n  getDocumentCategory,\n  getDocumentSubCategory,\n  getDocumentFields,\n  PushPopupAlert,\n})(ClaimForm);\n","import axios from \"axios\";\nimport React from \"react\";\nimport { FaRegCheckCircle } from \"react-icons/fa\";\nimport { RiArrowGoBackFill } from \"react-icons/ri\";\nimport { connect } from \"react-redux\";\nimport { PushPopupAlert } from \"../../actions\";\nimport { createReClaim, DocumentClaimUser } from \"../../actions/claiming\";\nimport {\n  CandidateClaimInterface,\n  ClaimDecisionStatus,\n  ClaimStatus,\n} from \"../../interfaces\";\nimport { PopupAlertTheme } from \"../../interfaces/popupAlert\";\nimport { DocumentReducerInterface } from \"../../reducers/document\";\nimport { capitalizeFirstLetter, isEmptyOrSpaces } from \"../../shared/dataTest\";\nimport { API } from \"../../utils/api\";\nimport { setAxiosToken } from \"../../utils/AxiosToken\";\nimport { errorToText, showDate, timestampToDate } from \"../../utils/functions\";\nimport { ClaimGetDocTitle } from \"./Candidate/ClaimForm\";\n\nconst isReclaimAllowed = (thisClaim: CandidateClaimInterface): boolean => {\n  if (thisClaim.claim_level === 1) {\n    const _thisClaim = thisClaim.claims.find((item) => item.level === 1);\n    if (_thisClaim) {\n      if (_thisClaim.decision_taken_status === ClaimDecisionStatus.REJECTED) {\n        return true;\n      }\n    }\n  }\n  return false;\n};\n\nexport const isClaimEvaluated = (\n  thisClaim: CandidateClaimInterface,\n  level: number\n): boolean => {\n  const _thisClaim = thisClaim.claims.find(\n    (item) =>\n      item.level === level && item.claim_status === ClaimStatus.EVALUATED\n  );\n  if (_thisClaim) {\n    return true;\n  }\n  return false;\n};\n\ntype ClaimDocViewProps = {\n  thisDoc: DocumentClaimUser;\n  // setViewThisFile: (value: string) => void;\n  documentCategories: DocumentReducerInterface;\n  thisClaim: CandidateClaimInterface;\n  viewImage: boolean;\n  setViewImage: (value: boolean) => void;\n  loadingRequest: boolean;\n  setLoadingRequest: (value: boolean) => void;\n  reClaiming: boolean;\n  setReClaiming: (value: boolean) => void;\n  reClaimingMsg: string;\n  setReClaimingMsg: (value: string) => void;\n  formError: {\n    element: string;\n    msg: string;\n  } | null;\n  setFormError: (\n    value: {\n      element: string;\n      msg: string;\n    } | null\n  ) => void;\n\n  // REDUX DATA =====================\n  createReClaim: Function;\n  PushPopupAlert: Function;\n};\n\nconst ClaimDocView: React.FC<ClaimDocViewProps> = (props) => {\n  const handleSubmit = async () => {\n    if (isEmptyOrSpaces(props.reClaimingMsg)) {\n      return props.setFormError({\n        element: \"comment\",\n        msg: \"Claim comment is required!\",\n      });\n    }\n    if (!props.thisClaim) {\n      return props.PushPopupAlert({\n        title: \"Claim sent successful\",\n        theme: PopupAlertTheme.warning,\n      });\n    }\n\n    props.setLoadingRequest(true);\n    try {\n      setAxiosToken();\n      const res = await axios.put<CandidateClaimInterface>(\n        `${API.CLAIMING}/user/reclaim/${props.thisClaim._id}`,\n        {\n          reason: props.reClaimingMsg,\n        }\n      );\n      console.log({ res: res.data });\n      if (res.status === 201 || res.status === 200) {\n        props.createReClaim(res.data);\n        props.PushPopupAlert({\n          title: \"Claim sent successful\",\n          theme: PopupAlertTheme.success,\n        });\n        props.setReClaimingMsg(\"\");\n        props.setReClaiming(false);\n      }\n    } catch (error) {\n      console.error({ error });\n      props.PushPopupAlert({\n        title: errorToText(error),\n        theme: PopupAlertTheme.danger,\n      });\n    }\n    props.setLoadingRequest(false);\n  };\n\n  return (\n    <section className=\"\">\n      <div className=\"w-full bg-white px-4 py-1 divide-y-2 space-y-2\">\n        {/* DOCUMENT DETAILS ==================================================== */}\n        <section className=\"flex flex-col\">\n          <div className=\"flex items-center justify-between\">\n            <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n              <span className={`italic`}>Title:</span>\n              <span className=\"text-gray-800 font-bold text-xl\">\n                {ClaimGetDocTitle(props.documentCategories, props.thisDoc).main}\n              </span>\n            </div>\n            <button\n              type=\"button\"\n              className=\"bg-blue-200 hover:bg-blue-300 text-blue-700 group-hover:text-blue-800 py-1 px-2 mr-1 rounded text-sm\"\n              onClick={() => props.setViewImage(!props.viewImage)}\n            >\n              {props.viewImage ? \"Hide\" : \"View\"}\n            </button>\n          </div>\n          <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n            <span className={`italic`}>Status:</span>\n            <span\n              className={`font-bold ${\n                props.thisDoc.validation_status === \"rejected\"\n                  ? \"text-yellow-900\"\n                  : \"text-blue-600\"\n              } rounded px-3 py-1`}\n            >\n              {capitalizeFirstLetter(props.thisDoc.validation_status)}\n            </span>\n          </div>\n          <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n            <span className={`italic`}>Evaluated by:</span>\n            <span className=\"font-semibold\">\n              {props.thisClaim.previous.evaluater.name}\n            </span>\n          </div>\n          <div className=\"flex items-start gap-2 text-sm text-gray-600\">\n            <span className={`italic`}>Reason:</span>\n            <span className=\"font-normal\">\n              {props.thisDoc.validated_by.comment}\n            </span>\n          </div>\n\n          {/* DISPLAY IMAGE ==================================================== */}\n          {props.viewImage && (\n            <div className=\"w-full my-1 animate__animated animate__fadeIn\">\n              <img\n                src={`${API.AUTH_FILES}/${props.thisDoc.files}`}\n                alt=\"doc file\"\n                className={`w-full animate__animated animate__fadeIn`}\n              />\n            </div>\n          )}\n          {/* END DISPLAY IMAGE ==================================================== */}\n        </section>\n        {/* END DOCUMENT DETAILS ==================================================== */}\n\n        {/* ################################################################################ */}\n\n        {/* CLAIM LEVELS DETAILS ==================================================== */}\n        {props.thisClaim.claims.length > 0 &&\n          props.thisClaim.claims.map((claim, index) => (\n            <section className=\"flex flex-col px-2 pt-3\" key={index + claim.id}>\n              {/* CLAIM COMMENT ==>> LEVEL 1 ==================================================== */}\n              <div className=\"flex flex-col items-start gap-2\">\n                <p>{claim.reason}</p>\n                <span className=\"text-gray-500 text-xs\">\n                  {showDate(claim.createdAt) +\n                    \" at \" +\n                    timestampToDate(claim.date_created).timeFR}\n                </span>\n              </div>\n\n              {/* RESPONSE OF LEVELS ======================================= */}\n              {isClaimEvaluated(props.thisClaim, claim.level) && (\n                <section className=\"mt-4\">\n                  <span className=\"text-gray-500 italic font-semibold\">\n                    Response (level {index + 1})\n                  </span>\n                  <div className=\"border-t-2\">\n                    <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n                      <span className={`italic`}>Status:</span>\n                      <span\n                        className={`font-bold ${\n                          claim.decision_taken_status ===\n                          ClaimDecisionStatus.REJECTED\n                            ? \"text-yellow-900\"\n                            : \"text-blue-600\"\n                        } rounded px-3 py-1`}\n                      >\n                        {capitalizeFirstLetter(\n                          claim.decision_taken_status.toLocaleLowerCase()\n                        )}\n                      </span>\n                    </div>\n                    <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n                      <span className={`italic`}>Evaluated by:</span>\n                      <span className=\"font-semibold\">\n                        {claim.evaluater.name}\n                      </span>\n                    </div>\n                    <div className=\"flex items-start gap-2 text-sm text-gray-600\">\n                      <span className={`italic`}>Reason:</span>\n                      <span className=\"font-normal\">\n                        {claim.evaluation_comment}\n                      </span>\n                    </div>\n                  </div>\n                </section>\n              )}\n              {/* CLAIM COMMENT ==>> LEVELS ==================================================== */}\n            </section>\n          ))}\n        {/* END CLAIM LEVELS DETAILS ==================================================== */}\n      </div>\n      <section>\n        {!props.reClaiming && (\n          <div className=\"mx-4 mb-5 mt-3 flex items-center justify-between\">\n            <span\n              className={`${\n                props.thisClaim.last_claim_status === ClaimStatus.PENDING\n                  ? \"text-yellow-700\"\n                  : props.thisClaim.last_claim_status === ClaimStatus.DELETED\n                  ? \"text-red-700\"\n                  : \"text-green-700\"\n              } italic font-semibold`}\n            >\n              {capitalizeFirstLetter(\n                props.thisClaim.last_claim_status.toLocaleLowerCase()\n              )}\n            </span>\n\n            {isReclaimAllowed(props.thisClaim) && (\n              <button\n                className=\"btn btn-blue\"\n                onClick={() => props.setReClaiming(true)}\n                disabled={props.loadingRequest}\n              >\n                Reclaim\n              </button>\n            )}\n          </div>\n        )}\n        {/* right part */}\n        {props.reClaiming && (\n          <div className=\"flex flex-col md:flex-row items-end md:items-start gap-1 w-full\">\n            <div className=\"w-full px-2\">\n              <textarea\n                placeholder={`Reason of your reclaim...`}\n                cols={50}\n                rows={3}\n                className={`border border-${\n                  props.formError && props.formError.element === \"comment\"\n                    ? \"red\"\n                    : \"gray\"\n                }-400 rounded px-3 py-1 w-full focus:outline-none`}\n                style={{ resize: \"none\" }}\n                value={props.reClaimingMsg}\n                onChange={(e) => {\n                  props.setReClaimingMsg(e.target.value);\n                  props.setFormError(null);\n                }}\n                disabled={props.loadingRequest}\n              ></textarea>\n              {props.formError && props.formError.element === \"comment\" && (\n                <p className=\"text-red-800\">{props.formError.msg}</p>\n              )}\n            </div>\n            <div className=\"flex flex-row md:flex-col gap-1 max-w-full px-2\">\n              <button\n                className=\"bg-gray-700 hover:bg-gray-800 px-4 py-2 font-semibold rounded text-white inline-flex items-center space-x-2 focus:outline-none\"\n                onClick={() => {\n                  props.setReClaimingMsg(\"\");\n                  props.setReClaiming(false);\n                  props.setFormError(null);\n                }}\n                disabled={props.loadingRequest}\n              >\n                <RiArrowGoBackFill className=\"w-5 h-5\" />\n                <span>Back</span>\n              </button>\n              <button\n                className=\"bg-blue-700 hover:bg-blue-800 px-4 py-2 font-semibold rounded text-white inline-flex items-center space-x-2 focus:outline-none\"\n                disabled={props.loadingRequest}\n                onClick={() => handleSubmit()}\n              >\n                {props.loadingRequest ? (\n                  <div className=\"\">Loading...</div>\n                ) : (\n                  <div className=\"inline-flex items-center space-x-2 gap-1\">\n                    <FaRegCheckCircle className=\"w-5 h-5\" />\n                    <span>Confirm</span>\n                  </div>\n                )}\n              </button>\n            </div>\n          </div>\n        )}\n        {/* end right part */}\n      </section>\n    </section>\n  );\n};\n\nexport default connect(null, {\n  createReClaim,\n  PushPopupAlert,\n})(ClaimDocView);\n","import React from \"react\";\nimport * as FileSaver from \"file-saver\";\nimport * as XLSX from \"xlsx\";\nimport { RiFileExcel2Fill } from \"react-icons/ri\";\n\ninterface ExportToExcelProps {\n  fileData: any[];\n  fileName: string;\n  btnName?: string;\n  className?: string;\n  showIcon?: boolean;\n}\n\nconst ExportToExcel: React.FC<ExportToExcelProps> = ({\n  fileData,\n  fileName,\n  btnName = \"Excel\",\n  className = \"flex items-center gap-1 px-4 py-1 rounded text-green-700 bg-white border hover:text-white hover:bg-green-700 border-green-700 font-bold\",\n  showIcon = true,\n}) => {\n  const fileType =\n    \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;charset=UTF-8\";\n  const fileExtension = \".xlsx\";\n\n  const exportToCSV = (apiData: any[], fileName: string) => {\n    const ws = XLSX.utils.json_to_sheet(apiData);\n    const wb = { Sheets: { data: ws }, SheetNames: [\"data\"] };\n    const excelBuffer = XLSX.write(wb, { bookType: \"xlsx\", type: \"array\" });\n    const data = new Blob([excelBuffer], { type: fileType });\n    FileSaver.saveAs(data, fileName + fileExtension);\n  };\n\n  return (\n    <button\n      onClick={(e) => exportToCSV(fileData, fileName)}\n      className={className}\n    >\n      {showIcon && <RiFileExcel2Fill />}\n      {btnName}\n    </button>\n  );\n};\n\nexport default ExportToExcel;\n","export default __webpack_public_path__ + \"static/media/mineduc.11a9ae1c.png\";","import jsPDF from \"jspdf\";\nimport { DATE } from \"../../utils/functions\";\nimport Logo from \"../../utils/mineduc.png\";\nrequire(\"jspdf-autotable\");\n\nexport const addFooters = (doc: any) => {\n  const pageCount = doc.internal.getNumberOfPages();\n\n  doc.setFont(\"helvetica\", \"italic\");\n  doc.setFontSize(8);\n  for (var i = 1; i <= pageCount; i++) {\n    doc.setPage(i);\n    doc.text(\n      \"Page \" + String(i) + \" of \" + String(pageCount),\n      doc.internal.pageSize.width / 2,\n      297,\n      {\n        align: \"center\",\n      }\n    );\n  }\n};\n\nexport type reportSettingsInterface = {\n  doneBy: string;\n  title: string;\n  subjectTitle: string;\n  subject: string;\n  institute: string;\n  period: string;\n  footer: string;\n  orientation?: \"p\" | \"l\";\n};\n\nexport const generatePDF = async (\n  reportSettings: reportSettingsInterface,\n  table: HTMLElement,\n  callBack: (status: boolean) => void\n) => {\n  callBack(true);\n  const orientation: \"p\" | \"l\" = reportSettings.orientation\n    ? reportSettings.orientation\n    : \"p\";\n  var lMargin: number = 20; //left margin in mm\n  var rMargin: number = 20; //right margin in mm\n  var pdfInMM: number = 185; // width of A4 in mm\n\n  //   var doc = new jsPDF(\"p\", \"mm\", \"a4\");\n  var doc: any = new jsPDF(orientation, \"mm\", \"a4\");\n\n  doc.setTextColor(95, 95, 95);\n  doc.setFontSize(28);\n  // doc.text(\n  //   this.props.reportTitle,\n  //   doc.internal.pageSize.getWidth() / 2,\n  //   30,\n  //   undefined,\n  //   \"center\"\n  // );\n  doc.addImage(Logo, \"png\", 20, 20, 10, 10);\n  doc.text(\"MINEDUC\", 32, 28.5, undefined, \"left\");\n  //   doc.setTextColor(19, 90, 152);\n  doc.setFontSize(26);\n  doc.text(\n    reportSettings.title,\n    doc.internal.pageSize.getWidth() / 2,\n    42.7,\n    undefined,\n    \"center\"\n  );\n\n  doc.setFontSize(20);\n  doc.text(\n    reportSettings.institute,\n    doc.internal.pageSize.getWidth() / 2,\n    53.7,\n    undefined,\n    \"center\"\n  );\n\n  var lines;\n  lines = doc.splitTextToSize(\n    reportSettings.subject,\n    pdfInMM - lMargin - rMargin\n  );\n  // if (reportSettings.position) {\n  // } else if (reportSettings.subject) {\n  //   lines = doc.splitTextToSize(\n  //     reportSettings.subject,\n  //     pdfInMM - lMargin - rMargin\n  //   );\n  // }\n\n  //   doc.setTextColor(0, 123, 255);\n  doc.setFontSize(16);\n  //   doc.text(lines, doc.internal.pageSize.getWidth() / 2, 45, {\n  //     maxWidth: 85,\n  //     align: \"center\",\n  //   });\n\n  var y = 63,\n    width;\n  doc.setTextColor(95, 95, 95);\n  doc.text(`${reportSettings.subjectTitle}: `, lMargin, y);\n  width = doc.getTextWidth(`${reportSettings.subjectTitle}: `);\n  // if (reportSettings.position) {\n  // } else if (reportSettings.position) {\n  //   doc.text(`Subject: `, lMargin, y);\n  //   width = doc.getTextWidth(\"Subject: \");\n  // }\n  // doc.setFontType(\"bold\");\n  doc.setTextColor(38, 38, 38);\n  for (var i = 0; i < lines.length; i++) {\n    if (y > 280) {\n      y = 10;\n      doc.addPage();\n    }\n    // doc.text(15, y, lines[i]);\n    doc.text(lines[i], lMargin + width, y);\n    y = y + 7;\n  }\n  doc.setTextColor(95, 95, 95);\n  doc.text(\"Period: \", lMargin, y + 3);\n  width = doc.getTextWidth(\"Period: \");\n  doc.setTextColor(38, 38, 38);\n  doc.text(reportSettings.period, lMargin + width, y + 3);\n\n  doc.autoTable({\n    html: table,\n    startY: 85,\n    margin: { horizontal: 20 },\n    cellPadding: 3, // Horizontal cell padding\n    // fontSize: 12,\n    rowHeight: 20,\n    // styles: { overflow: \"linebreak\" },\n    bodyStyles: { valign: \"top\" },\n    columnStyles: { email: { cellWidth: \"wrap\" } },\n    theme: \"striped\",\n    tableWidth: true,\n  });\n\n  doc.setFontSize(12);\n  let finalY = doc.lastAutoTable.finalY; // The y position on the page\n  doc.text(`Reported by: ${reportSettings.doneBy}`, lMargin, finalY + 15);\n  doc.text(\n    \"Report downloaded on \" + DATE(new Date().toString()),\n    lMargin,\n    finalY + 23\n  );\n\n  addFooters(doc);\n  await doc\n    .save(\n      `${\n        reportSettings.title +\n        \": \" +\n        reportSettings.subject +\n        \": \" +\n        reportSettings.period\n      }.pdf`,\n      { returnPromise: true }\n    )\n    .then(callBack(false));\n};\n","import React from \"react\";\n\ntype TableLoadingProps = {\n  cols: number;\n};\nconst TableLoading: React.FC<TableLoadingProps> = (props) => {\n  const displayCols = (): JSX.Element[] => {\n    let colsArray: number[] = [];\n    for (let index = 0; index < props.cols; index++) {\n      colsArray.push(index);\n    }\n    let result = colsArray.map((element) => {\n      return (\n        <td className=\"p-3 text-center whitespace-nowrap\" key={element}>\n          <div className=\"w-full h-4 rounded bg-gray-200 animate__animated animate__pulse animate__delay-5s animate__infinite\"></div>\n        </td>\n      );\n    });\n\n    return result;\n  };\n  return (\n    <>\n      <tr className=\"border-b border-gray-200\" key={228}>\n        {displayCols()}\n      </tr>\n      <tr className=\"border-b border-gray-200\" key={22648}>\n        {displayCols()}\n      </tr>\n      <tr className=\"border-b border-gray-200\" key={229768}>\n        {displayCols()}\n      </tr>\n    </>\n  );\n};\n\nexport default TableLoading;\n","import React, { useState } from \"react\";\nimport {\n  MdCheckCircle,\n  MdRadioButtonUnchecked,\n  MdSearch,\n} from \"react-icons/md\";\nimport Loading from \"../../components/Loading/Loading\";\nimport {\n  PlansInterface,\n  SessionPlanInterface,\n  SessionPlanTypeStatus,\n} from \"../../interfaces\";\nimport { DATE } from \"../../utils/functions\";\nimport searchData from \"../../utils/search\";\n\nexport const isPlansActive = (plans: PlansInterface[]): PlansInterface[] => {\n  let today = new Date();\n  let activePlans: PlansInterface[] = [];\n  for (let plan of plans) {\n    let startDate = new Date(plan.start_date);\n    let endDate = new Date(plan.end_date);\n    if (\n      startDate.getTime() <= today.getTime() &&\n      endDate.getTime() >= today.getTime() &&\n      plan.type_status === SessionPlanTypeStatus.OPEN\n    ) {\n      activePlans = [...activePlans, plan];\n    }\n  }\n  return activePlans;\n};\n\ninterface ChooseSessionProps {\n  allSession: SessionPlanInterface[] | null;\n  setSelectSession: (period: SessionPlanInterface | \"all\") => void;\n  currentSelected: SessionPlanInterface | \"all\";\n  chooseAll: boolean;\n}\n\nconst ChooseSession = (props: ChooseSessionProps) => {\n  const [selectedPlan, setSelectedPlan] = useState<SessionPlanInterface | null>(\n    null\n  );\n  const [search, setSearch] = useState<string>(\"\");\n  const getSearch = (\n    period: SessionPlanInterface[],\n    searched: string\n  ): SessionPlanInterface[] => {\n    return searchData(period, searched) as SessionPlanInterface[];\n  };\n\n  return (\n    <div className=\"\">\n      <div className=\"px-3\">\n        <input\n          onChange={(e: React.ChangeEvent<HTMLInputElement>) =>\n            setSearch(e.target.value)\n          }\n          type=\"text\"\n          className=\"py-3 px-4 w-full rounded border border-gray-400 mb-3\"\n          placeholder=\"Search by year, name\"\n          disabled={props.allSession === null || props.allSession.length === 0}\n        />\n      </div>\n\n      <div className=\"bg-gray-100 px-3 pt-3 pb-2 rounded-b\">\n        {props.allSession === null ? (\n          <Loading />\n        ) : props.allSession.length === 0 ? (\n          <div className=\"flex flex-col text-gray-400 items-center justify-center mb-2 bg-white py-4\">\n            <MdSearch className=\"text-6xl\" />\n            <div className=\"flex flex-col items-center justify-center\">\n              <span>No session found!</span>\n            </div>\n          </div>\n        ) : (\n          <section>\n            {props.chooseAll && (\n              <div\n                className={`rounded border ${\n                  props.currentSelected === \"all\"\n                    ? \"bg-blue-50 border-blue-300\"\n                    : \"bg-white border-white \"\n                } group hover:border-blue-500 px-2 py-2 mb-2 flex flex-col md:flex-row items-start md:items-center md:justify-between`}\n              >\n                <div className=\"flex flex-row items-center gap-3\">\n                  {props.currentSelected === \"all\" ? (\n                    <MdCheckCircle className={`text-blue-500 text-4xl`} />\n                  ) : (\n                    <MdRadioButtonUnchecked\n                      className={`text-gray-300 text-4xl`}\n                    />\n                  )}\n                  <div className=\"flex flex-col\">\n                    <div className={`text-gray-600 font-bold`}>All session</div>\n                  </div>\n                </div>\n                <div\n                  onClick={() => {\n                    props.setSelectSession(\"all\");\n                  }}\n                  className=\"bg-gray-50 group-hover:bg-blue-600 font-semibold text-gray-400 group-hover:text-white rounded px-3 py-2 cursor-pointer\"\n                >\n                  Select\n                </div>\n              </div>\n            )}\n            {getSearch(props.allSession, search).map((item, i) => (\n              <div\n                key={i + 1}\n                className={`rounded border ${\n                  props.currentSelected !== \"all\" &&\n                  props.currentSelected.session_plan_id === item.session_plan_id\n                    ? \"bg-blue-50 border-blue-300\"\n                    : \"bg-white border-white \"\n                } group hover:border-blue-500 px-2 py-2 mb-2`}\n              >\n                <div className=\"flex flex-col md:flex-row items-start md:items-center md:justify-between \">\n                  <div className=\"flex flex-row items-center gap-3\">\n                    {props.currentSelected !== \"all\" &&\n                    props.currentSelected.session_plan_id ===\n                      item.session_plan_id ? (\n                      <MdCheckCircle className={`text-blue-500 text-4xl`} />\n                    ) : (\n                      <MdRadioButtonUnchecked\n                        className={`text-gray-300 text-4xl`}\n                      />\n                    )}\n                    <div className=\"flex flex-col\">\n                      <div\n                        className={`${\n                          props.currentSelected !== \"all\" &&\n                          props.currentSelected.session_plan_id ===\n                            item.session_plan_id\n                            ? \"text-blue-600\"\n                            : \"text-gray-600\"\n                        } font-bold`}\n                      >\n                        {item.session_plan_name}\n                      </div>\n                      <div className=\"text-sm text-gray-500\">\n                        <span>Status: </span>\n                        <span\n                          className={`${\n                            item.is_active === true\n                              ? \"text-gray-900 font-bold underline\"\n                              : \"text-gray-500 italic\"\n                          }`}\n                        >\n                          {item.is_active === true ? \"Active\" : \"Expired\"}\n                        </span>\n                      </div>\n                    </div>\n                  </div>\n                  <div className=\"flex flex-row items-center gap-2\">\n                    {(selectedPlan === null ||\n                      selectedPlan.session_plan_id !==\n                        item.session_plan_id) && (\n                      <div\n                        onClick={() => setSelectedPlan(item)}\n                        className=\"bg-gray-50 group-hover:bg-blue-100 font-semibold text-gray-400 group-hover:text-blue-600 rounded px-3 py-2 cursor-pointer\"\n                      >\n                        Details\n                      </div>\n                    )}\n                    <div\n                      onClick={() => {\n                        props.setSelectSession(item);\n                      }}\n                      className=\"bg-gray-50 group-hover:bg-blue-600 font-semibold text-gray-400 group-hover:text-white rounded px-3 py-2 cursor-pointer\"\n                    >\n                      Select\n                    </div>\n                    {selectedPlan !== null &&\n                      selectedPlan.session_plan_id === item.session_plan_id && (\n                        <div\n                          onClick={() => setSelectedPlan(null)}\n                          className=\"bg-red-100 group-hover:bg-red-200 font-semibold text-red-600 group-hover:text-red-800 rounded px-3 py-2 cursor-pointer\"\n                        >\n                          Close\n                        </div>\n                      )}\n                  </div>\n                </div>\n                {selectedPlan !== null &&\n                  selectedPlan.session_plan_id === item.session_plan_id && (\n                    <div className=\"bg-white rounded border border-blue-50 mt-2 animate__animated animate__fadeIn\">\n                      <table className=\"w-full\">\n                        <thead className=\"bg-blue-50\">\n                          <tr className=\"text-left\">\n                            <th className=\"px-3 py-3\">#</th>\n                            <th>Plan</th>\n                            <th>Start date</th>\n                            <th>Ending date</th>\n                            <th>Status</th>\n                          </tr>\n                        </thead>\n                        <tbody className=\"text-sm\">\n                          {selectedPlan !== null &&\n                            selectedPlan.session_plan_id ===\n                              item.session_plan_id &&\n                            selectedPlan.plans.length > 0 &&\n                            item.plans.map((plan, i) => (\n                              <tr\n                                key={i + 1}\n                                className={`${\n                                  isPlansActive(item.plans).find(\n                                    (itm) => itm.type_key === plan.type_key\n                                  ) !== undefined\n                                    ? \"bg-blue-100 text-blue-600 font-bold\"\n                                    : \"\"\n                                } text-left border-b border-blue-50`}\n                              >\n                                <td className=\"px-3 py-1\">{i + 1}</td>\n                                <td>{plan.type_title}</td>\n                                <td>{DATE(plan.start_date, \"DD/MM/YYYY\")}</td>\n                                <td>{DATE(plan.end_date, \"DD/MM/YYYY\")}</td>\n                                <td>{plan.type_status}</td>\n                              </tr>\n                            ))}\n                        </tbody>\n                      </table>\n                    </div>\n                  )}\n              </div>\n            ))}\n          </section>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default ChooseSession;\n","import React from \"react\";\nimport Table from \"../../components/Table/Table\";\nimport { PositionRequirementTableInterface } from \"./ViewPosition\";\n\ninterface RequirementProps {\n  requirements: PositionRequirementTableInterface[];\n}\n\nconst ViewRequirements: React.FC<RequirementProps> = (props) => {\n  const tableData = (): JSX.Element[] => {\n    let data: PositionRequirementTableInterface[] = props.requirements;\n    // let data: PositionSubcategoryData[] =\n    //   props.position_requirement.position_requirement;\n    if (data.length === 0) {\n      return [\n        <tr key={153} className=\"border-b border-gray-200 hover:bg-gray-100\">\n          <td className=\"p-3 text-center\" colSpan={3}>\n            No Data Found\n          </td>\n        </tr>,\n      ];\n    }\n\n    return data.map((item, index) => (\n      <tr\n        key={index + item.field_id}\n        className=\"border-b border-gray-200 hover:bg-gray-100\"\n      >\n        <td className=\"p-3 text-left whitespace-nowrap\">{index + 1}</td>\n        <td className=\"p-3 text-left\">\n          <span>{item.subcategory_title + \" in \" + item.field_title}</span>\n        </td>\n        <td className=\"p-3 text-left text-lg italic\">\n          {item.required ? (\n            <span className=\"text-yellow-800\">Required</span>\n          ) : (\n            \"Optional\"\n          )}\n        </td>\n      </tr>\n    ));\n  };\n\n  return (\n    <div>\n      <Table\n        columns={[\n          { columnTitle: \"#\", alignText: \"left\", padding: \"p-3\" },\n          { columnTitle: \"Document\", alignText: \"left\", padding: \"p-3\" },\n          { columnTitle: \"Status\", alignText: \"left\", padding: \"p-3\" },\n          // { columnTitle: \"\", alignText: \"left\", padding: \"p-3\" },\n        ]}\n        rows={tableData}\n        pagination={false}\n        search={false}\n        thColor=\"gray\"\n      />\n    </div>\n  );\n};\n\nexport default ViewRequirements;\n","import React, { useState } from \"react\";\nimport { MdSearch } from \"react-icons/md\";\nimport { connect } from \"react-redux\";\nimport {\n  course,\n  CandidateClaimInterface,\n  claimApplicationsInterface,\n  ClaimExamResultsDetails,\n  SessionPlanInterface,\n} from \"../../../interfaces\";\nimport { StoreState } from \"../../../reducers\";\nimport { search } from \"../../../utils/functions\";\nimport { isClaimAllowed } from \"./ClaimForm\";\n\nconst getFailedExam = (\n  allData: ClaimExamResultsDetails[],\n  allCourses: course[]\n): ClaimExamResultsDetails[] => {\n  let result: ClaimExamResultsDetails[] = [];\n  allData.forEach((element) => {\n    if (element.total_marks <= 50) {\n      let data = element;\n      data.course_name = getCourseById(allCourses, element.course)\n        ? getCourseById(allCourses, element.course)!.course_name\n        : \"Unknown exam\";\n      result.push(data);\n    }\n  });\n\n  return result;\n};\n\nexport const getCourseById = (courses: course[], course_id: string) => {\n  return courses.find((item) => item.course_id === course_id);\n};\n\nexport const getCourseIdBySheetId = (\n  allData: ClaimExamResultsDetails[],\n  sheet_id: string\n) => {\n  return allData.find((item) => item.answer_sheet_id === sheet_id);\n};\n\nexport const searchApplication = (\n  objList: claimApplicationsInterface[],\n  text: any\n): claimApplicationsInterface[] => {\n  if (undefined === text || text === \"\") return objList;\n  return objList.filter((product) => {\n    let flag;\n    // let dataKeys = product;\n\n    for (let prop in product) {\n      flag = false;\n      if (prop === \"position\") {\n        flag =\n          product.position.position_title\n            .toString()\n            .toLowerCase()\n            .indexOf(text.toLowerCase()) > -1;\n      }\n      if (flag) break;\n    }\n    return flag;\n  });\n  // return objList.filter((product) =>\n  //   product.position.position_title.includes(text)\n  // );\n};\n\ntype FormExamListProps = {\n  setChooseClaimFile: (value: boolean) => void;\n  setClaimFileId: (value: string) => void;\n  setViewThisFile: (value: string) => void;\n  viewThisFile: string;\n  candidateAnswers: ClaimExamResultsDetails[];\n  myClaims: CandidateClaimInterface[];\n  activeSession: SessionPlanInterface;\n\n  // REDUX //////////////////////\n  courses: course[] | null;\n};\n\nconst FormExamList: React.FC<FormExamListProps> = (props) => {\n  const [searchInput, setSearchInput] = useState<string>(\"\");\n\n  return (\n    <section>\n      {/* SEARCH PART */}\n      <div className=\"flex items-center w-full my-1\">\n        <MdSearch className=\"w-6 h-6 absolute ml-2\" />\n        <input\n          type=\"text\"\n          placeholder=\"Search\"\n          className=\"focus:border-2 h-7 ml-1 pl-9 mr-2 bg-gray-100 focus:border-gray-700 w-full rounded\"\n          onChange={(e) => setSearchInput(e.target.value)}\n          value={searchInput}\n          disabled={\n            !props.courses ||\n            getFailedExam(props.candidateAnswers, props.courses).filter(\n              (item) =>\n                isClaimAllowed(\n                  props.myClaims,\n                  props.activeSession.session_plan_id,\n                  item.answer_sheet_id\n                )\n            ).length > 0\n              ? false\n              : true\n          }\n        />\n        <button\n          className=\"bg-red-200 text-red-700 py-1 px-2 mr-1 rounded text-sm focus:outline-none\"\n          type=\"button\"\n          onClick={() => {\n            props.setChooseClaimFile(false);\n            props.setViewThisFile(\"\");\n          }}\n        >\n          Cancel\n        </button>\n      </div>\n      {/* END SEARCH PART ///////////////// */}{\" \"}\n      {/* searchData(props.candidateAnswers, searchInput) */}\n      <div className=\"w-full h-52 mt-2 overflow-y-auto divide-y divide-gray-300\">\n        {props.courses &&\n        getFailedExam(props.candidateAnswers, props.courses).filter((item) =>\n          isClaimAllowed(\n            props.myClaims,\n            props.activeSession.session_plan_id,\n            item.answer_sheet_id\n          )\n        ).length > 0 ? (\n          search(\n            getFailedExam(props.candidateAnswers, props.courses).filter(\n              (item) =>\n                isClaimAllowed(\n                  props.myClaims,\n                  props.activeSession.session_plan_id,\n                  item.answer_sheet_id\n                )\n            ),\n            searchInput\n          ).map((item: ClaimExamResultsDetails, index: number) => (\n            <div\n              className=\"group flex items-center justify-between my-1 hover:bg-gray-100\"\n              key={index + item.answer_sheet_id}\n            >\n              <div\n                className=\"p-1 w-full mr-2 cursor-pointer\"\n                onClick={() => {\n                  props.setChooseClaimFile(false);\n                  props.setClaimFileId(item.answer_sheet_id);\n                }}\n              >\n                <p className=\"text-base font-medium text-black\">\n                  {item.course_name}\n                </p>\n              </div>\n              <button\n                type=\"button\"\n                className=\"bg-blue-200 hover:bg-blue-300 text-blue-700 group-hover:text-blue-800 py-1 px-2 mr-1 rounded text-sm\"\n                onClick={() => {\n                  props.setViewThisFile(item.answer_sheet_id);\n                }}\n              >\n                View\n              </button>\n            </div>\n          ))\n        ) : (\n          <div className=\"text-center p-3\">\n            <p className=\"text-base font-medium text-black\">\n              No failed exam available\n            </p>\n          </div>\n        )}\n      </div>\n    </section>\n  );\n};\n\nconst mapStateToProps = ({\n  course,\n}: StoreState): {\n  courses: course[] | null;\n} => {\n  return {\n    courses: course.courses,\n  };\n};\nexport default connect(mapStateToProps, {})(FormExamList);\n","import React, { useEffect, useState } from \"react\";\nimport { MdTurnedIn } from \"react-icons/md\";\nimport { connect } from \"react-redux\";\nimport { PushPopupAlert } from \"../../../actions\";\nimport { fetchUserAccess } from \"../../../actions/users\";\nimport NoResult, {\n  NoResultThemes,\n} from \"../../../components/NoResult/NoResult\";\nimport {\n  claimApplicationsInterface,\n  claimApplicationsPositionInterface,\n} from \"../../../interfaces\";\nimport { ApplicationStates } from \"../../../interfaces/application\";\nimport { StoreState } from \"../../../reducers\";\nimport { DocumentReducerInterface } from \"../../../reducers/document\";\nimport { capitalizeFirstLetter } from \"../../../shared/dataTest\";\nimport { UserInterface } from \"../../../shared/interfaces\";\nimport { DATE } from \"../../../utils/functions\";\nimport { PositionRequirementTableInterface } from \"../../Positions/ViewPosition\";\nimport ViewRequirements from \"../../Positions/ViewRequirements\";\n\nexport const FC_ApplicationPositionDistinctCategory = (\n  thisPosition: claimApplicationsPositionInterface,\n  documentCategories: DocumentReducerInterface\n): {\n  PositionsTemp: PositionRequirementTableInterface[];\n  DistinctCategoriesTemp: PositionRequirementTableInterface[];\n  DistinctSubCategoriesTemp: PositionRequirementTableInterface[];\n} => {\n  let PositionsTemp: PositionRequirementTableInterface[] = [];\n  let DistinctCategoriesTemp: PositionRequirementTableInterface[] = [],\n    DistinctCategoriesIds: string[] = [];\n  let DistinctSubCategoriesTemp: PositionRequirementTableInterface[] = [],\n    DistinctSubCategoriesIds: string[] = [];\n  // GET REQUIREMENTS OF THE CURRENT POSITION ====================\n  let requirements = thisPosition.requirements;\n  // LOOP THROUGH CURRENT POSITION REQUIREMENTS ==========================\n  for (let req in requirements) {\n    let thisRequirements = requirements[req];\n    // GET DOC CATEGORY OF THE CURRENT POSITION REQUIREMENTS ====================\n    let thisCategory = documentCategories.documentCategory\n      ? documentCategories.documentCategory.find(\n          (item) =>\n            item.user_detail_category_id ===\n            thisRequirements.user_detail_category_id\n        ) && {\n          title: documentCategories.documentCategory.find(\n            (item) =>\n              item.user_detail_category_id ===\n              thisRequirements.user_detail_category_id\n          )!.title,\n          user_detail_category_id: documentCategories.documentCategory.find(\n            (item) =>\n              item.user_detail_category_id ===\n              thisRequirements.user_detail_category_id\n          )!.user_detail_category_id,\n        }\n      : {\n          title: \"\",\n          user_detail_category_id: thisRequirements.user_detail_category_id,\n        };\n    // GET DOC SUB CATEGORY OF THE CURRENT POSITION REQUIREMENTS ====================\n    let thisSubCategory = documentCategories.documentSubCategory\n      ? documentCategories.documentSubCategory.find(\n          (item) =>\n            item.user_detail_subcategory_id ===\n            thisRequirements.user_detail_subcategory_id\n        )\n        ? {\n            title: documentCategories.documentSubCategory.find(\n              (item) =>\n                item.user_detail_subcategory_id ===\n                thisRequirements.user_detail_subcategory_id\n            )!.title,\n            user_detail_subcategory_id:\n              documentCategories.documentSubCategory.find(\n                (item) =>\n                  item.user_detail_subcategory_id ===\n                  thisRequirements.user_detail_subcategory_id\n              )!.user_detail_subcategory_id,\n            category_id: documentCategories.documentSubCategory.find(\n              (item) =>\n                item.user_detail_subcategory_id ===\n                thisRequirements.user_detail_subcategory_id\n            )!.category_id,\n          }\n        : {\n            title: \"\",\n            user_detail_subcategory_id:\n              thisRequirements.user_detail_subcategory_id,\n            category_id: \"\",\n          }\n      : {\n          title: \"\",\n          user_detail_subcategory_id:\n            thisRequirements.user_detail_subcategory_id,\n          category_id: \"\",\n        };\n    // LOOP THROUGH FIELDS OF THE CURRENT POSITION REQUIREMENTS ==========================\n    if (thisCategory) {\n      for (let field in thisRequirements.position_requirement) {\n        // GET FIELDS OF THE CURRENT POSITION REQUIREMENTS ====================\n        let thisField = documentCategories.documentFields\n          ? documentCategories.documentFields.find(\n              (item) =>\n                item._id ===\n                thisRequirements.position_requirement[field]\n                  .category_subcategory_data_id\n            )\n            ? {\n                title: documentCategories.documentFields.find(\n                  (item) =>\n                    item._id ===\n                    thisRequirements.position_requirement[field]\n                      .category_subcategory_data_id\n                )!.title,\n                _id: documentCategories.documentFields.find(\n                  (item) =>\n                    item._id ===\n                    thisRequirements.position_requirement[field]\n                      .category_subcategory_data_id\n                )!._id,\n                required: thisRequirements.position_requirement[field].required,\n              }\n            : {\n                title: \"\",\n                _id: thisRequirements.user_detail_subcategory_id,\n                required: thisRequirements.position_requirement[field].required,\n              }\n          : {\n              title: \"\",\n              _id: thisRequirements.user_detail_subcategory_id,\n              required: thisRequirements.position_requirement[field].required,\n            };\n        // ADD CURRENT CATEGORY, SUB CATEGORY & FIELDS OF THE CURRENT POSITION REQUIREMENTS IN POSITIONS TEMP ====================\n        PositionsTemp.push({\n          category_id: thisCategory.user_detail_category_id,\n          category_title: thisCategory.title,\n          subcategory_id: thisSubCategory.user_detail_subcategory_id,\n          subcategory_title: thisSubCategory.title,\n          field_title: thisField.title,\n          field_id: thisField._id,\n          required: thisField.required,\n        });\n      }\n\n      // ADD CATEOGRY OF THE CURRENT POSITION REQUIREMENTS TO ARRAY ====================\n      if (\n        !DistinctCategoriesIds.includes(thisCategory.user_detail_category_id)\n      ) {\n        DistinctCategoriesIds.push(thisCategory.user_detail_category_id);\n        DistinctCategoriesTemp.push({\n          category_id: thisCategory.user_detail_category_id,\n          category_title: thisCategory.title,\n          subcategory_id: \"\",\n          subcategory_title: \"\",\n          field_title: \"\",\n          field_id: \"\",\n          required: false,\n        });\n      }\n\n      // ADD SUB CATEOGRY OF THE CURRENT POSITION REQUIREMENTS TO ARRAY ====================\n      if (\n        !DistinctSubCategoriesIds.includes(\n          thisSubCategory.user_detail_subcategory_id\n        )\n      ) {\n        DistinctSubCategoriesIds.push(\n          thisSubCategory.user_detail_subcategory_id\n        );\n        DistinctSubCategoriesTemp.push({\n          category_id: thisSubCategory.category_id,\n          category_title: \"\",\n          subcategory_id: thisSubCategory.user_detail_subcategory_id,\n          subcategory_title: thisSubCategory.title,\n          field_title: \"\",\n          field_id: \"\",\n          required: false,\n        });\n      }\n    }\n  }\n  // DistinctCategoriesIds.;\n\n  return { PositionsTemp, DistinctCategoriesTemp, DistinctSubCategoriesTemp };\n};\n\nexport const showEvaluator = (\n  userList: UserInterface[],\n  user_id: string\n): string => {\n  let result: string = \"\";\n  if (user_id === \"system\") {\n    result = \"System\";\n  } else {\n    // let user = getUserDocuments(userList, user_id);\n    // let user = undefined;\n    // if (user) {\n    //   result = user.user.user_info.fname + \" \" + user.user.user_info.lname;\n    // }\n  }\n  return result;\n};\n\ntype ApplicationFormViewProps = {\n  thisApplication: claimApplicationsInterface;\n  setViewThisFile: (value: string) => void;\n  setChooseClaimFile: (value: boolean) => void;\n  setClaimFileId: (value: string) => void;\n  documentCategories: DocumentReducerInterface;\n  userList: UserInterface[];\n  fetchUserAccess: Function;\n  PushPopupAlert: Function;\n};\n\nconst ApplicationFormView: React.FC<ApplicationFormViewProps> = (props) => {\n  const [loadingUsers, setLoadingUsers] = useState(true);\n\n  useEffect(() => {\n    if (!props.userList.length && loadingUsers) {\n      setLoadingUsers(false);\n      props.fetchUserAccess();\n    } else if (loadingUsers) {\n      setLoadingUsers(false);\n    }\n  }, [loadingUsers, props]);\n\n  return (\n    <section className=\"\">\n      <div className=\"w-full bg-gray-100 px-4 py-1 animate__animated animate__fadeIn\">\n        <div className=\"flex flex-col mb-2\">\n          {/* APPLICATION TITLE ========== */}\n          <section className=\"flex items-center justify-between\">\n            <span className=\"text-blue-600 font-bold text-2xl\">\n              {props.thisApplication.position.position_title}\n            </span>\n            <button\n              type=\"button\"\n              className=\"btn btn-blue\"\n              onClick={() => {\n                props.setChooseClaimFile(false);\n                props.setClaimFileId(props.thisApplication.application_id);\n                props.setViewThisFile(\"\");\n              }}\n            >\n              Choose\n            </button>\n          </section>\n          <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n            <span className={`italic`}>Date:</span>\n            <span className=\"font-bold text-gray-900 py-1\">\n              {DATE(props.thisApplication.createdAt)}\n            </span>\n          </div>\n          {false && (\n            <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n              <span className={`italic`}>Session:</span>\n              <span className=\"font-bold text-gray-900 py-1\">\n                {\n                  props.thisApplication.application_session\n                    .application_session_name\n                }\n              </span>\n            </div>\n          )}\n          <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n            <span className={`italic`}>Status:</span>\n            <span\n              className={`font-bold ${\n                props.thisApplication.application_status ===\n                ApplicationStates.Rejected\n                  ? \"text-yellow-900\"\n                  : \"text-blue-600\"\n              } py-1`}\n            >\n              {capitalizeFirstLetter(props.thisApplication.application_status)}\n            </span>\n          </div>\n          <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n            <span className={`italic`}>Evaluated by:</span>\n            <span className=\"font-bold text-gray-900 py-1\">\n              {loadingUsers ? (\n                <div className=\"w-24 h-3 rounded bg-gray-200 animate__animated animate__pulse animate__delay-5s animate__infinite\"></div>\n              ) : (\n                showEvaluator(\n                  props.userList,\n                  props.thisApplication.override_by.user_id\n                )\n              )}\n            </span>\n          </div>\n          <div className=\"flex items-start gap-2 text-sm text-gray-600\">\n            <span className={`italic`}>Reason:</span>\n            <span className=\"font-semibold text-gray-900\">\n              {props.thisApplication.override_by.comment}\n            </span>\n          </div>\n        </div>\n        <div className=\"bg-white w-full rounded p-2 mb-2\">\n          <div className=\"text-gray-800 text-2xl font-bold my-2\">\n            Position Details\n          </div>\n          <div className=\"flex items-center gap-2 text-base text-gray-600\">\n            <span className={`italic`}>Desc:</span>\n            <span className=\"font-semibold\">\n              {props.thisApplication.position.description}\n            </span>\n          </div>\n          <div className=\"flex items-center gap-2 text-base text-gray-600\">\n            <span className={`italic`}>School level:</span>\n            <span className=\"font-semibold\">\n              {props.thisApplication.position.school_level_id.school_level_name}\n            </span>\n          </div>\n          <div className=\"flex items-center gap-2 text-base text-gray-600\">\n            <span className={`italic`}>Institute:</span>\n            <span className=\"font-semibold\">\n              {\n                props.thisApplication.position.education_institute_id\n                  .education_category_title\n              }\n            </span>\n          </div>\n          <div className=\"flex items-center gap-2 text-base text-gray-600\">\n            <span className={`italic`}>Courses:</span>\n            <span className=\"flex items-center gap-2\">\n              {props.thisApplication.position.courses.map((item, index) => (\n                <div\n                  key={index + item.course_id}\n                  className=\"flex items-center gap-1\"\n                >\n                  <span className=\"font-semibold\">{item.course_name}</span>\n                  <span className=\"text-gray-600\">({item.course_code})</span>\n                  {index !==\n                    props.thisApplication.position.courses.length - 1 && \",\"}\n                </div>\n              ))}\n            </span>\n          </div>\n\n          <div className=\"text-gray-800 text-2xl font-bold my-2\">\n            Position Requirements\n          </div>\n          {props.thisApplication.position.requirements.length > 0 ? (\n            FC_ApplicationPositionDistinctCategory(\n              props.thisApplication.position,\n              props.documentCategories\n            ).DistinctCategoriesTemp.map((item, index) => (\n              <div\n                className=\"bg-gray-100props.thisApplication.position rounded p-2\"\n                key={index + item.category_id}\n              >\n                <div className=\"flex items-center gap-2 text-2xl text-gray-500 font-bold\">\n                  <MdTurnedIn />\n                  <span>{item.category_title}</span>\n                </div>\n                <div className=\"border bg-white mt-1\">\n                  <ViewRequirements\n                    requirements={FC_ApplicationPositionDistinctCategory(\n                      props.thisApplication.position,\n                      props.documentCategories\n                    ).PositionsTemp.filter(\n                      (req) => req.category_id === item.category_id\n                    )}\n                  />\n                </div>\n              </div>\n            ))\n          ) : (\n            <NoResult\n              theme={NoResultThemes.Dark}\n              value={\"No requirements\"}\n            ></NoResult>\n          )}\n        </div>\n      </div>\n    </section>\n  );\n};\n\nconst mapStateToProps = ({\n  users,\n}: StoreState): {\n  userList: UserInterface[];\n} => {\n  return {\n    userList: users,\n  };\n};\n\nexport default connect(mapStateToProps, { PushPopupAlert, fetchUserAccess })(\n  ApplicationFormView\n);\n","import axios from \"axios\";\nimport React, { Component } from \"react\";\nimport { VscLoading } from \"react-icons/vsc\";\nimport { connect } from \"react-redux\";\nimport { PushPopupAlert } from \"../../actions\";\nimport { updateSessionPlan } from \"../../actions/session\";\nimport { PopupAlertData } from \"../../components/Alert/Popup\";\nimport {\n  allPlanTypes,\n  PlansInterface,\n  PlansTypeInterface,\n  PlansTypeKeys,\n  SessionPlanInterface,\n  SessionPlanTypeStatus,\n} from \"../../interfaces\";\nimport { PopupAlertTheme } from \"../../interfaces/popupAlert\";\nimport { capitalizeFirstLetter } from \"../../shared/dataTest\";\nimport { API } from \"../../utils/api\";\nimport { DATE, errorToText } from \"../../utils/functions\";\n\nexport const isActivationAllowed = (thisPlans: PlansInterface): boolean => {\n  let today: Date = new Date(),\n    end_date = new Date(thisPlans.end_date);\n  if (end_date.getTime() >= today.getTime()) {\n    return true;\n  }\n  return false;\n};\n\nexport const getPlanTypeByKey = (\n  type_key: PlansTypeKeys\n): PlansTypeInterface | undefined => {\n  return allPlanTypes.find((item) => item.type_key === type_key);\n};\n\nexport const isPlanActive = (\n  viewThisSession: SessionPlanInterface,\n  thisPlan: PlansInterface\n): \"OPEN\" | \"CLOSED\" | \"WAITING\" => {\n  if (viewThisSession.is_active) {\n    let today = new Date(),\n      planEndDate = new Date(thisPlan.end_date),\n      planStartDate = new Date(thisPlan.start_date);\n    if (\n      planEndDate.getTime() >= today.getTime() &&\n      planStartDate.getTime() <= today.getTime() &&\n      thisPlan.type_status !== SessionPlanTypeStatus.CLOSED\n    ) {\n      return \"OPEN\";\n    } else if (\n      planStartDate.getTime() > today.getTime() &&\n      thisPlan.type_status !== SessionPlanTypeStatus.CLOSED\n    ) {\n      return \"WAITING\";\n    }\n  }\n  return \"CLOSED\";\n};\n\ntype SessionDetailsProps = {\n  viewThisSession: SessionPlanInterface;\n  setViewThisSession: (data: SessionPlanInterface) => void;\n\n  // REDUX ----------------\n  updateSessionPlan: Function;\n  PushPopupAlert: (alert: PopupAlertData) => void;\n};\n\ntype SessionDetailsState = {\n  loadingRequest: string;\n};\n\nexport class SessionDetails extends Component<\n  SessionDetailsProps,\n  SessionDetailsState\n> {\n  constructor(props: SessionDetailsProps) {\n    super(props);\n\n    this.state = {\n      loadingRequest: \"\",\n    };\n  }\n\n  handlePlanActivation = async (\n    session: SessionPlanInterface,\n    thisPlan: PlansInterface\n  ) => {\n    const newState: \"open\" | \"close\" = session.is_active ? \"close\" : \"open\";\n\n    if (!window.confirm(`Are you sure you want to ${newState} this plan?`)) {\n      return true;\n    }\n\n    if (!isActivationAllowed(thisPlan)) {\n      this.props.PushPopupAlert({\n        title: `Opening/Closing plan which has been expired is not allowed!`,\n        theme: PopupAlertTheme.warning,\n      });\n    }\n\n    let newData: SessionPlanInterface = {\n      session_plan_name: session.session_plan_name,\n      period: session.period,\n      is_active: session.is_active,\n      plans: [],\n      createdAt: session.createdAt,\n      updatedAt: session.updatedAt,\n      session_plan_id: session.session_plan_id,\n    };\n    for (const key in session.plans) {\n      if (Object.prototype.hasOwnProperty.call(session.plans, key)) {\n        const element = session.plans[key];\n        if (thisPlan.type_key === element.type_key) {\n          if (thisPlan.type_status === SessionPlanTypeStatus.OPEN) {\n            newData.plans.push({\n              type_id: thisPlan.type_id,\n              type_title: thisPlan.type_title,\n              type_key: thisPlan.type_key,\n              type_status: SessionPlanTypeStatus.CLOSED,\n              start_date: thisPlan.start_date,\n              end_date: thisPlan.end_date,\n              allowed_claim_level: thisPlan.allowed_claim_level,\n              _id: thisPlan._id,\n              history: thisPlan.history,\n            });\n          } else {\n            newData.plans.push({\n              type_id: thisPlan.type_id,\n              type_title: thisPlan.type_title,\n              type_key: thisPlan.type_key,\n              type_status: SessionPlanTypeStatus.OPEN,\n              start_date: thisPlan.start_date,\n              end_date: thisPlan.end_date,\n              allowed_claim_level: thisPlan.allowed_claim_level,\n              _id: thisPlan._id,\n              history: thisPlan.history,\n            });\n          }\n        } else {\n          newData.plans.push(element);\n        }\n      }\n    }\n\n    console.log(\"====================================\");\n    console.log({ newData });\n    console.log(\"====================================\");\n\n    this.setState({ loadingRequest: thisPlan.type_key });\n    try {\n      const res = await axios.put<SessionPlanInterface>(\n        `${API.CLAIMING}/session/${session.session_plan_id}`,\n        newData\n      );\n      this.props.updateSessionPlan(res.data);\n      this.props.setViewThisSession(res.data);\n      this.props.PushPopupAlert({\n        title: `Session ${newState}d successfully`,\n        theme: PopupAlertTheme.info,\n      });\n      this.setState({ loadingRequest: \"\" });\n      console.log(\"updateSessionPlan: \", res);\n    } catch (error) {\n      console.error({ error: errorToText(error) });\n      this.props.PushPopupAlert({\n        title: errorToText(error),\n        theme: PopupAlertTheme.warning,\n      });\n    }\n  };\n\n  render() {\n    return (\n      <table className=\"w-full bg-white shadow p-5\" id=\"session_content\">\n        <thead className=\"bg-white border-b-2 border-gray-300 text-gray-600 font-bold text-sm\">\n          <tr>\n            <td className=\"p-2\">#</td>\n            <td className=\"p-2\">Plan Type</td>\n            <td className=\"p-2\">Start Date</td>\n            <td className=\"p-2\">End date</td>\n            {this.props.viewThisSession.is_active && (\n              <td className=\"p-2\" colSpan={2}>\n                Status\n              </td>\n            )}\n          </tr>\n        </thead>\n        <tbody>\n          {/* WHILE DATA FOUND ====================== */}\n          {this.props.viewThisSession.plans.map((item, index) => (\n            <tr\n              key={index + item._id}\n              className={`border-b border-gray-200 hover:bg-gray-100`}\n            >\n              <td className=\"p-2 text-left whitespace-nowrap\">{index + 1}</td>\n              <td className=\"p-2 text-left\">\n                <span className=\"text-lg\">\n                  {getPlanTypeByKey(item.type_key) &&\n                    capitalizeFirstLetter(\n                      getPlanTypeByKey(item.type_key)!.type_title\n                    )}\n                </span>\n              </td>\n              <td className=\"p-2 text-left\">{DATE(item.start_date)}</td>\n              <td className=\"p-2 text-left\">{DATE(item.end_date)}</td>\n              {this.props.viewThisSession.is_active && (\n                <td>\n                  {isPlanActive(this.props.viewThisSession, item) === \"OPEN\" ? (\n                    <span className={`px-2 py-1 font-semibold text-green-700`}>\n                      Open\n                    </span>\n                  ) : isPlanActive(this.props.viewThisSession, item) ===\n                    \"WAITING\" ? (\n                    <span className={`px-2 py-1 font-semibold text-gray-700`}>\n                      Waiting\n                    </span>\n                  ) : (\n                    <span className={`px-2 py-1 font-semibold text-red-700`}>\n                      Closed\n                    </span>\n                  )}\n                </td>\n              )}\n              {this.props.viewThisSession.is_active && (\n                <td>\n                  {isActivationAllowed(item) && (\n                    <div className=\"flex items-center justify-center gap-1\">\n                      <div\n                        className={`relative ${\n                          this.state.loadingRequest.length > 0\n                            ? \"cursor-not-allowed\"\n                            : \"cursor-pointer\"\n                        }`}\n                        title={\n                          item.type_status === SessionPlanTypeStatus.OPEN\n                            ? \"Deactivating session\"\n                            : \"Activating session\"\n                        }\n                        onClick={() =>\n                          this.state.loadingRequest.length <= 0 &&\n                          this.handlePlanActivation(\n                            this.props.viewThisSession,\n                            item\n                          )\n                        }\n                      >\n                        <span className=\"block w-14 h-8 bg-gray-100 rounded-full shadow-inner\"></span>\n                        <span\n                          className={`absolute block w-6 h-6 mt-1 ml-1 rounded-full shadow inset-y-0 left-0 focus-within:shadow-outline transition-transform duration-500 ease-in-out ${\n                            item.type_status === SessionPlanTypeStatus.CLOSED\n                              ? \"bg-red-500\"\n                              : \"bg-green-500 transform translate-x-full\"\n                          }`}\n                        ></span>\n                      </div>\n                      {this.state.loadingRequest === item.type_key && (\n                        <VscLoading className=\"animate__animated animate__rotateIn animate__infinite\" />\n                      )}\n                    </div>\n                  )}\n                </td>\n              )}\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    );\n  }\n}\n\nexport default connect(null, {\n  updateSessionPlan,\n  PushPopupAlert,\n})(SessionDetails);\n","import React, { useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Auth, PushPopupAlert } from \"../../../actions\";\nimport {\n  getAllClaims,\n  GetClaimingTypes,\n  setSelectedClaimType,\n} from \"../../../actions/claiming\";\nimport { PopupAlertData } from \"../../../components/Alert/Popup\";\nimport { MainItem } from \"../../../components/Navigation/SideNavigation\";\nimport {\n  CandidateClaimInterface,\n  ClaimStatus,\n  PlansTypeKeys,\n} from \"../../../interfaces\";\nimport { PopupAlertTheme } from \"../../../interfaces/popupAlert\";\nimport { StoreState } from \"../../../reducers\";\nimport { ClaimingReducerType } from \"../../../reducers/claiming\";\n\nexport const filterClaimsByClaimType = (\n  claimList: CandidateClaimInterface[],\n  claimType: PlansTypeKeys | \"all\"\n): CandidateClaimInterface[] => {\n  if (claimType === \"all\") {\n    return claimList;\n  }\n\n  return claimList.filter((item) => item.type_key === claimType);\n};\n\ntype AdminFilterByTypeProps = {\n  loadingClaims: boolean;\n  FC_CountByType?: Function;\n\n  // REDUX PROPS =======================================\n  auth: Auth;\n  claiming: ClaimingReducerType;\n  GetClaimingTypes: Function;\n  setSelectedClaimType: Function;\n  getAllClaims: Function;\n  PushPopupAlert: (alert: PopupAlertData) => void;\n};\n\nconst AdminFilterByType: React.FC<AdminFilterByTypeProps> = (props) => {\n  const [loading, setLoading] = useState<boolean>(true);\n  const [loadingClaimTypes, setLoadingClaimTypes] = useState<boolean>(true);\n\n  useEffect(() => {\n    if (props.claiming.claimTypes === null) {\n      props.GetClaimingTypes((status: boolean, msg: string) => {\n        if (status === false) {\n          if (msg.length > 0) {\n            props.PushPopupAlert({\n              title: msg,\n              theme: PopupAlertTheme.danger,\n            });\n          }\n          setLoadingClaimTypes(false);\n          setLoading(false);\n        }\n      });\n    } else if (loadingClaimTypes) {\n      setLoadingClaimTypes(false);\n      setLoading(false);\n    }\n  }, [loadingClaimTypes, props]);\n\n  const countClaims = (\n    claiming: ClaimingReducerType,\n    thisType: PlansTypeKeys | \"all\"\n  ): number => {\n    let result: number = 0;\n\n    if (claiming.allClaims && thisType === \"all\") {\n      result = claiming.allClaims.filter(\n        (item) => item.last_claim_status === ClaimStatus.PENDING\n      ).length;\n    }\n    if (claiming.allClaims && thisType !== \"all\") {\n      result = claiming.allClaims.filter(\n        (item) =>\n          item.type_key === thisType &&\n          item.last_claim_status === ClaimStatus.PENDING\n      ).length;\n    }\n\n    return result;\n  };\n\n  return (\n    <React.Fragment>\n      <span className=\"mt-2 text-sm\">Filter by claim type</span>\n      {/* WHILE LOADING DATA ================================== */}\n      {(loading || props.loadingClaims) && (\n        <section className=\"space-y-2\">\n          <div className=\"w-full h-7 rounded bg-gray-200 animate__animated animate__pulse animate__delay-5s animate__infinite\"></div>\n          <div className=\"w-full h-7 rounded bg-gray-200 animate__animated animate__pulse animate__delay-5s animate__infinite\"></div>\n          <div className=\"w-full h-7 rounded bg-gray-200 animate__animated animate__pulse animate__delay-5s animate__infinite\"></div>\n          <div className=\"w-full h-7 rounded bg-gray-200 animate__animated animate__pulse animate__delay-5s animate__infinite\"></div>\n        </section>\n      )}\n      {/* END WHILE LOADING DATA ================================== */}\n\n      {/* AFTER LOADING DATA ================================== */}\n      {!loading && !props.loadingClaims && props.claiming.claimTypes && (\n        <section>\n          {/* ALL ================================= */}\n          <div\n            className=\"mt-2\"\n            onClick={() => {\n              // props.setThisClaimType(\"ALL\");\n              props.setSelectedClaimType(\"all\");\n            }}\n          >\n            <MainItem\n              title=\"All\"\n              active={props.claiming.selectedClaimType === \"all\"}\n              count={countClaims(props.claiming, \"all\")}\n            />\n          </div>\n          {/* APPLICATION ================================= */}\n          <div\n            className=\"mt-2\"\n            onClick={() => {\n              // props.setThisClaimType(ClaimTypesInterface.DOCUMENT);\n              props.setSelectedClaimType(PlansTypeKeys.APPLICATION);\n            }}\n          >\n            <MainItem\n              title={\"Application\"}\n              active={\n                props.claiming.selectedClaimType !== \"all\" &&\n                props.claiming.selectedClaimType === PlansTypeKeys.APPLICATION\n              }\n              count={countClaims(props.claiming, PlansTypeKeys.APPLICATION)}\n            />\n          </div>\n          {/* DOCUMENT ================================= */}\n          <div\n            className=\"mt-2\"\n            onClick={() => {\n              props.setSelectedClaimType(PlansTypeKeys.DOCUMENT_VALIDATION);\n            }}\n          >\n            <MainItem\n              title={\"Document\"}\n              active={\n                props.claiming.selectedClaimType !== \"all\" &&\n                props.claiming.selectedClaimType ===\n                  PlansTypeKeys.DOCUMENT_VALIDATION\n              }\n              count={countClaims(\n                props.claiming,\n                PlansTypeKeys.DOCUMENT_VALIDATION\n              )}\n            />\n          </div>\n          {/* EXAMINATION ================================= */}\n          <div\n            className=\"mt-2\"\n            onClick={() => {\n              props.setSelectedClaimType(PlansTypeKeys.EXAMINATION);\n            }}\n          >\n            <MainItem\n              title={\"Exam\"}\n              active={\n                props.claiming.selectedClaimType !== \"all\" &&\n                props.claiming.selectedClaimType === PlansTypeKeys.EXAMINATION\n              }\n              count={countClaims(props.claiming, PlansTypeKeys.EXAMINATION)}\n            />\n          </div>\n          {false && (\n            <div\n              className=\"mt-2\"\n              onClick={() => {\n                props.setSelectedClaimType(PlansTypeKeys.PLACEMENT_TRANSFER);\n              }}\n            >\n              <MainItem\n                title={\"Placement\"}\n                active={\n                  props.claiming.selectedClaimType !== \"all\" &&\n                  props.claiming.selectedClaimType ===\n                    PlansTypeKeys.PLACEMENT_TRANSFER\n                }\n                count={countClaims(\n                  props.claiming,\n                  PlansTypeKeys.PLACEMENT_TRANSFER\n                )}\n              />\n            </div>\n          )}\n        </section>\n      )}\n      {/* END AFTER LOADING DATA ================================== */}\n    </React.Fragment>\n  );\n};\n\nconst mapStateToProps = ({\n  auth,\n  claiming,\n}: StoreState): { auth: Auth; claiming: ClaimingReducerType } => {\n  return { auth, claiming };\n};\n\nexport default connect(mapStateToProps, {\n  GetClaimingTypes,\n  setSelectedClaimType,\n  getAllClaims,\n  PushPopupAlert,\n})(AdminFilterByType);\n","import React from \"react\";\nimport { AiFillDashboard } from \"react-icons/ai\";\nimport { SessionPlanInterface } from \"../../interfaces\";\n\ntype ClaimHeaderTitleProps = {\n  headerTitle: string;\n  loading: boolean;\n  loadingSession: boolean;\n  periodChanged: boolean;\n  thisPeriod: SessionPlanInterface | null;\n  setThisPeriod: (state: SessionPlanInterface | null) => void;\n  setLoadingSession: (state: boolean) => void;\n  application_sessions: SessionPlanInterface[];\n  onPeriodChange: (period_id: string) => void;\n};\n\nconst selectPeriod = (\n  sessions: SessionPlanInterface[],\n  period_id: string,\n  setThisPeriod: (state: SessionPlanInterface | null) => void\n) => {\n  setThisPeriod(\n    sessions.filter((item) => item.session_plan_id === period_id)[0]\n  );\n};\n\nconst ClaimHeaderTitle: React.FC<ClaimHeaderTitleProps> = (props) => {\n  const isLoading = (): boolean => {\n    if (props.loading || props.loadingSession || props.periodChanged) {\n      return true;\n    }\n    return false;\n  };\n\n  return (\n    <div className=\"mt-3 rounded flex flex-col md:flex-row md:justify-between items-start\">\n      <div className=\"flex flex-row items-center gap-3 mb-2\">\n        <AiFillDashboard className=\"text-6xl text-blue-600 hidden md:block\" />\n        <div className=\"flex flex-col\">\n          <span className=\"text-blue-600 text-3xl font-bold\">\n            {props.headerTitle}\n          </span>\n        </div>\n      </div>\n\n      {/* FILTER SECTION PERIOD && EDUCATION */}\n      <section className=\"w-full md:w-auto my-2 md:my-0\">\n        <div>\n          <select\n            className={`bg-white text-gray-600 border border-gray-400 rounded p-2 focus:outline-none ${\n              isLoading() ? \"cursor-wait\" : \"cursor-default\"\n            }`}\n            value={props.thisPeriod ? props.thisPeriod.session_plan_id : \"\"}\n            disabled={isLoading()}\n            onChange={(e) => {\n              selectPeriod(\n                props.application_sessions,\n                e.target.value,\n                props.setThisPeriod\n              );\n              props.setLoadingSession(true);\n              props.onPeriodChange(e.target.value);\n            }}\n          >\n            {props.application_sessions.map((session, item) => (\n              <option\n                key={session.session_plan_id + item}\n                value={session.session_plan_id}\n              >\n                {session.session_plan_name}\n              </option>\n            ))}\n          </select>\n        </div>\n      </section>\n      {/* END FILTER SECTION PERIOD && EDUCATION */}\n    </div>\n  );\n};\n\nexport default ClaimHeaderTitle;\n","import React, { useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { PushPopupAlert } from \"../../../actions\";\nimport { DocumentClaimUser } from \"../../../actions/claiming\";\nimport { fetchUserAccess } from \"../../../actions/users\";\nimport { StoreState } from \"../../../reducers\";\nimport { DocumentReducerInterface } from \"../../../reducers/document\";\nimport { capitalizeFirstLetter } from \"../../../shared/dataTest\";\nimport { UserInterface } from \"../../../shared/interfaces\";\nimport { API } from \"../../../utils/api\";\nimport { ClaimGetDocTitle } from \"./ClaimForm\";\n\ntype DocFormViewProps = {\n  thisDoc: DocumentClaimUser;\n  setChooseClaimFile: (value: boolean) => void;\n  setClaimFileId: (value: string) => void;\n  setViewThisFile: (value: string) => void;\n  documentCategories: DocumentReducerInterface;\n  userList: UserInterface[];\n  fetchUserAccess: Function;\n  PushPopupAlert: Function;\n};\n\nconst DocFormView: React.FC<DocFormViewProps> = (props) => {\n  const [loadingUsers, setLoadingUsers] = useState(true);\n\n  useEffect(() => {\n    if (!props.userList.length && loadingUsers) {\n      setLoadingUsers(false);\n      props.fetchUserAccess();\n    } else if (loadingUsers) {\n      setLoadingUsers(false);\n    }\n  }, [loadingUsers, props]);\n\n  return (\n    <section className=\"\">\n      <div className=\"w-full bg-gray-100 px-4 py-1 animate__animated animate__fadeIn\">\n        <div className=\"flex flex-col mb-2\">\n          <div className=\"flex items-center justify-between\">\n            <span className=\"text-blue-600 font-bold text-xl\">\n              {ClaimGetDocTitle(props.documentCategories, props.thisDoc).main}\n            </span>\n            <button\n              type=\"button\"\n              className=\"btn btn-blue\"\n              onClick={() => {\n                props.setChooseClaimFile(false);\n                props.setClaimFileId(props.thisDoc.doc_id);\n                props.setViewThisFile(\"\");\n              }}\n            >\n              Choose\n            </button>\n          </div>\n          <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n            <span className={`italic`}>Status:</span>\n            <span className=\"font-bold text-yellow-900 rounded px-3 py-1\">\n              {capitalizeFirstLetter(props.thisDoc.validation_status)}\n            </span>\n          </div>\n          <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n            <span className={`italic`}>Evaluated by:</span>\n            <span className=\"font-semibold\">\n              ################\n              {/* {loadingUsers ? (\n                <div className=\"w-24 h-3 rounded bg-gray-200 animate__animated animate__pulse animate__delay-5s animate__infinite\"></div>\n              ) : getUserDocuments(\n                  props.userList,\n                  props.thisDoc.validated_by.user_id\n                ) ? (\n                getUserDocuments(\n                  props.userList,\n                  props.thisDoc.validated_by.user_id\n                )!.user.user_info.fname +\n                \" \" +\n                getUserDocuments(\n                  props.userList,\n                  props.thisDoc.validated_by.user_id\n                )!.user.user_info.lname\n              ) : (\n                \"-\"\n              )} */}\n            </span>\n          </div>\n          <div className=\"flex items-start gap-2 text-sm text-gray-600\">\n            <span className={`italic`}>Reason:</span>\n            <span className=\"font-normal\">\n              {props.thisDoc.validated_by.comment}\n            </span>\n          </div>\n          <div className=\"w-full my-1\">\n            <img\n              src={`${API.AUTH_FILES}/${props.thisDoc.files}`}\n              alt=\"doc file\"\n              className={`w-full`}\n            />\n          </div>\n        </div>\n      </div>\n    </section>\n  );\n};\n\nconst mapStateToProps = ({\n  users,\n}: StoreState): {\n  userList: UserInterface[];\n} => {\n  return {\n    userList: users,\n  };\n};\n\nexport default connect(mapStateToProps, { PushPopupAlert, fetchUserAccess })(\n  DocFormView\n);\n","import React, { useState } from \"react\";\nimport { MdSearch } from \"react-icons/md\";\nimport {\n  CandidateClaimInterface,\n  claimApplicationsInterface,\n  SessionPlanInterface,\n} from \"../../../interfaces\";\nimport { ApplicationStates } from \"../../../interfaces/application\";\nimport { isClaimAllowed } from \"./ClaimForm\";\n\nconst getRejectedApplicants = (\n  applicationData: claimApplicationsInterface[]\n): claimApplicationsInterface[] => {\n  return applicationData.filter(\n    (item) => item.application_status === ApplicationStates.Rejected\n  );\n};\n\nexport const searchApplication = (\n  objList: claimApplicationsInterface[],\n  text: any\n): claimApplicationsInterface[] => {\n  if (undefined === text || text === \"\") return objList;\n  return objList.filter((product) => {\n    let flag;\n    // let dataKeys = product;\n\n    for (let prop in product) {\n      flag = false;\n      if (prop === \"position\") {\n        flag =\n          product.position.position_title\n            .toString()\n            .toLowerCase()\n            .indexOf(text.toLowerCase()) > -1;\n      }\n      if (flag) break;\n    }\n    return flag;\n  });\n  // return objList.filter((product) =>\n  //   product.position.position_title.includes(text)\n  // );\n};\n\ntype FormApplicationListProps = {\n  setChooseClaimFile: (value: boolean) => void;\n  setClaimFileId: (value: string) => void;\n  setViewThisFile: (value: string) => void;\n  viewThisFile: string;\n  candidateApplications: claimApplicationsInterface[];\n  myClaims: CandidateClaimInterface[];\n  activeSession: SessionPlanInterface;\n};\n\nconst FormApplicationList: React.FC<FormApplicationListProps> = (props) => {\n  const [searchInput, setSearchInput] = useState<string>(\"\");\n  return (\n    <section>\n      {/* SEARCH PART */}\n      <div className=\"flex items-center w-full my-1\">\n        <MdSearch className=\"w-6 h-6 absolute ml-2\" />\n        <input\n          type=\"text\"\n          placeholder=\"Search\"\n          className=\"focus:border-2 h-7 ml-1 pl-9 mr-2 bg-gray-100 focus:border-gray-700 w-full rounded\"\n          onChange={(e) => setSearchInput(e.target.value)}\n          value={searchInput}\n          disabled={\n            getRejectedApplicants(props.candidateApplications).filter((item) =>\n              isClaimAllowed(\n                props.myClaims,\n                props.activeSession.session_plan_id,\n                item.application_id\n              )\n            ).length > 0\n              ? false\n              : true\n          }\n        />\n        <button\n          className=\"bg-red-200 text-red-700 py-1 px-2 mr-1 rounded text-sm focus:outline-none\"\n          type=\"button\"\n          onClick={() => {\n            props.setChooseClaimFile(false);\n            props.setViewThisFile(\"\");\n          }}\n        >\n          Cancel\n        </button>\n      </div>\n      {/* END SEARCH PART ///////////////// */}{\" \"}\n      {/* searchData(props.candidateApplications, searchInput) */}\n      <div className=\"w-full h-52 mt-2 overflow-y-auto divide-y divide-gray-300\">\n        {getRejectedApplicants(props.candidateApplications).filter((item) =>\n          isClaimAllowed(\n            props.myClaims,\n            props.activeSession.session_plan_id,\n            item.application_id\n          )\n        ).length > 0 ? (\n          searchApplication(\n            getRejectedApplicants(props.candidateApplications).filter((item) =>\n              isClaimAllowed(\n                props.myClaims,\n                props.activeSession.session_plan_id,\n                item.application_id\n              )\n            ),\n            searchInput\n          ).map((item, index) => (\n            <div\n              className=\"group flex items-center justify-between my-1 hover:bg-gray-100\"\n              key={index + item.application_id}\n            >\n              <div\n                className=\"p-1 w-full mr-2 cursor-pointer\"\n                onClick={() => {\n                  props.setChooseClaimFile(false);\n                  props.setClaimFileId(item.application_id);\n                }}\n              >\n                <p className=\"text-base font-medium text-black\">\n                  {item.position.position_title}\n                </p>\n              </div>\n              <button\n                type=\"button\"\n                className=\"bg-blue-200 hover:bg-blue-300 text-blue-700 group-hover:text-blue-800 py-1 px-2 mr-1 rounded text-sm\"\n                onClick={() => {\n                  props.setViewThisFile(item.application_id);\n                }}\n              >\n                View\n              </button>\n            </div>\n          ))\n        ) : (\n          <div className=\"text-center p-3\">\n            <p className=\"text-base font-medium text-black\">\n              No Rejected document available\n            </p>\n          </div>\n        )}\n      </div>\n    </section>\n  );\n};\n\nexport default FormApplicationList;\n","import React, { useState } from \"react\";\nimport { MdSearch } from \"react-icons/md\";\nimport { DocumentReducerInterface } from \"../../../reducers/document\";\nimport { ClaimGetDocTitle, isClaimAllowed } from \"./ClaimForm\";\nimport { DocumentClaimUser } from \"../../../actions/claiming\";\nimport { CategorySubcategoryData } from \"../../../interfaces/candidatesInterfaces\";\nimport {\n  CandidateClaimInterface,\n  SessionPlanInterface,\n} from \"../../../interfaces\";\n\nexport interface DocumentTitleInterface {\n  category_id: string;\n  company: string;\n  description: string;\n  email: string;\n  end_year: string;\n  files: string;\n  names: string;\n  phone_number: string;\n  school: {\n    school_name: string;\n    _id: string;\n    status: boolean;\n    education_category_id?: {\n      education_category_title: string;\n      _id: string;\n    };\n    district_id?: {\n      district_name: string;\n      _id: string;\n    };\n  } | null;\n  school_id: string;\n  start_year: string;\n  sub_category_id: string;\n  title: string;\n  year: string;\n  validation_status: string;\n  validated_by: {\n    user_id: string;\n    comment: string;\n    validation_status: string;\n    date: string;\n  };\n  doc_id: string;\n  doc_title: string;\n  category_subcategory_data: CategorySubcategoryData | null;\n}\n\nexport const DocumentTitleData = (\n  documentData: DocumentClaimUser[],\n  documentCategories: DocumentReducerInterface\n): DocumentTitleInterface[] | [] => {\n  let documentTemp: DocumentTitleInterface[] = [];\n  for (let i in documentData) {\n    documentTemp.push({\n      category_id: documentData[i].category_id,\n      company: documentData[i].company,\n      description: documentData[i].description,\n      email: documentData[i].email,\n      end_year: documentData[i].end_year,\n      files: documentData[i].files,\n      names: documentData[i].names,\n      phone_number: documentData[i].phone_number,\n      school: documentData[i].school,\n      school_id: documentData[i].school_id,\n      start_year: documentData[i].start_year,\n      sub_category_id: documentData[i].sub_category_id,\n      title: documentData[i].title,\n      year: documentData[i].year,\n      validation_status: documentData[i].validation_status,\n      validated_by: documentData[i].validated_by,\n      doc_id: documentData[i].doc_id,\n      doc_title: ClaimGetDocTitle(documentCategories, documentData[i]).main,\n      category_subcategory_data: documentData[i].category_subcategory_data,\n    });\n  }\n  return documentTemp;\n};\n\nconst getRejectedDocuments = (\n  documentData: DocumentClaimUser[]\n): DocumentClaimUser[] => {\n  console.log({\n    rejected: documentData.filter(\n      (item) => item.validation_status === \"rejected\"\n    ),\n  });\n  return documentData.filter((item) => item.validation_status === \"rejected\");\n};\n\nexport const searchDocuments = (\n  objList: DocumentTitleInterface[],\n  text: any\n): DocumentTitleInterface[] => {\n  if (undefined === text || text === \"\") return objList;\n  return objList.filter(\n    (product) =>\n      product.doc_title.toString().toLowerCase().indexOf(text.toLowerCase()) >\n      -1\n  );\n};\n\ntype FormDocumentListProps = {\n  setChooseClaimFile: (value: boolean) => void;\n  setClaimFileId: (value: string) => void;\n  setViewThisFile: (value: string) => void;\n  viewThisFile: string;\n  candidateDocuments: DocumentClaimUser[];\n  documentCategories: DocumentReducerInterface;\n  myClaims: CandidateClaimInterface[];\n  activeSession: SessionPlanInterface;\n};\n\nconst FormDocumentList: React.FC<FormDocumentListProps> = (props) => {\n  const [searchInput, setSearchInput] = useState<string>(\"\");\n  return (\n    <section>\n      {/* SEARCH PART */}\n      <div className=\"flex items-center w-full my-1\">\n        <MdSearch className=\"w-6 h-6 absolute ml-2\" />\n        <input\n          type=\"text\"\n          placeholder=\"Search\"\n          className=\"focus:border-2 h-7 ml-1 pl-9 mr-2 bg-gray-100 focus:border-gray-700 w-full rounded\"\n          onChange={(e) => setSearchInput(e.target.value)}\n          value={searchInput}\n          disabled={\n            DocumentTitleData(\n              getRejectedDocuments(props.candidateDocuments),\n              props.documentCategories\n            ).filter((item) =>\n              isClaimAllowed(\n                props.myClaims,\n                props.activeSession.session_plan_id,\n                item.doc_id\n              )\n            ).length > 0\n              ? false\n              : true\n          }\n        />\n        <button\n          className=\"bg-red-200 text-red-700 py-1 px-2 mr-1 rounded text-sm focus:outline-none\"\n          type=\"button\"\n          onClick={() => {\n            props.setChooseClaimFile(false);\n            props.setViewThisFile(\"\");\n          }}\n        >\n          Cancel\n        </button>\n      </div>\n      {/* END SEARCH PART ///////////////// */}\n      <div className=\"w-full h-52 mt-2 overflow-y-auto divide-y divide-gray-300\">\n        {props.candidateDocuments.filter((item) =>\n          isClaimAllowed(\n            props.myClaims,\n            props.activeSession.session_plan_id,\n            item.doc_id\n          )\n        ).length > 0 ? (\n          searchDocuments(\n            DocumentTitleData(\n              getRejectedDocuments(props.candidateDocuments),\n              props.documentCategories\n            ).filter((item) =>\n              isClaimAllowed(\n                props.myClaims,\n                props.activeSession.session_plan_id,\n                item.doc_id\n              )\n            ),\n            searchInput\n          ).map((doc, index) => (\n            <section key={index + doc.doc_id}>\n              <div className=\"group flex items-center justify-between my-1 hover:bg-gray-100\">\n                <div\n                  className=\"p-1 w-full mr-2 cursor-pointer\"\n                  onClick={() => {\n                    props.setChooseClaimFile(false);\n                    props.setClaimFileId(doc.doc_id);\n                  }}\n                >\n                  <p className=\"text-base font-medium text-black\">\n                    {ClaimGetDocTitle(props.documentCategories, doc).main}\n                  </p>\n                </div>\n                <button\n                  type=\"button\"\n                  className=\"bg-blue-200 hover:bg-blue-300 text-blue-700 group-hover:text-blue-800 py-1 px-2 mr-1 rounded text-sm\"\n                  onClick={() => {\n                    props.viewThisFile === doc.doc_id\n                      ? props.setViewThisFile(\"\")\n                      : props.setViewThisFile(doc.doc_id);\n                  }}\n                >\n                  {props.viewThisFile === doc.doc_id ? \"Close\" : \"View\"}\n                </button>\n              </div>\n            </section>\n          ))\n        ) : (\n          <div className=\"text-center p-3\">\n            <p className=\"text-base font-medium text-black\">\n              No Rejected document available\n            </p>\n          </div>\n        )}\n      </div>\n    </section>\n  );\n};\n\nexport default FormDocumentList;\n","import React, { Component } from \"react\";\nimport { MdAdd, MdArrowBack, MdDelete, MdInfoOutline } from \"react-icons/md\";\nimport { connect } from \"react-redux\";\nimport { Auth, loadCourses, PushPopupAlert } from \"../../../actions\";\nimport {\n  DocumentClaimUser,\n  getMyClaims,\n  getMyPlacement,\n} from \"../../../actions/claiming\";\nimport {\n  getDocumentCategory,\n  getDocumentSubCategory,\n  getDocumentFields,\n} from \"../../../actions/document\";\nimport { GetAllSessionPlans } from \"../../../actions/session\";\nimport { PopupAlertData } from \"../../../components/Alert/Popup\";\nimport { SideNavigation } from \"../../../components/Navigation/SideNavigation\";\nimport NoResult, {\n  NoResultThemes,\n} from \"../../../components/NoResult/NoResult\";\nimport {\n  CandidateClaimInterface,\n  claimApplicationsInterface,\n  ClaimStatus,\n  PlansTypeKeys,\n  SessionPlanInterface,\n  course,\n} from \"../../../interfaces\";\nimport { PopupAlertTheme } from \"../../../interfaces/popupAlert\";\nimport { StoreState } from \"../../../reducers\";\nimport { ClaimingReducerType } from \"../../../reducers/claiming\";\nimport { DocumentReducerInterface } from \"../../../reducers/document\";\nimport { capitalizeFirstLetter } from \"../../../shared/dataTest\";\nimport { filterClaimsByClaimType } from \"../Admin/AdminFilterByType\";\nimport ClaimApplView from \"../ClaimApplView\";\nimport ClaimDocView, { isClaimEvaluated } from \"../ClaimDocView\";\nimport ClaimExamView from \"../ClaimExamView\";\nimport ClaimHeaderTitle from \"../ClaimHeaderTitle\";\nimport ClaimPlacementView from \"../ClaimPlacementView\";\nimport ClaimForm, { ClaimGetDocTitle } from \"./ClaimForm\";\nimport FilterByType from \"./FilterByType\";\nimport { getCourseById, getCourseIdBySheetId } from \"./FormExamList\";\n\nexport enum ClaimTypesEnum {\n  application = \"application\",\n  document = \"document\",\n  exam = \"exam\",\n  marks_publication = \"marks publication\",\n  placement = \"placement\",\n}\n\nexport const getDocumentById = (\n  candidateDocuments: DocumentClaimUser[],\n  document_id: string\n): DocumentClaimUser | null => {\n  let result: DocumentClaimUser | undefined = candidateDocuments.find(\n    (item) => item.doc_id === document_id\n  );\n  return result ? result : null;\n};\n\nexport const whichClaimType = (\n  thisClaim: CandidateClaimInterface\n): ClaimTypesEnum | undefined => {\n  if (thisClaim.type_key === PlansTypeKeys.APPLICATION) {\n    return ClaimTypesEnum.application;\n  }\n  if (thisClaim.type_key === PlansTypeKeys.DOCUMENT_VALIDATION) {\n    return ClaimTypesEnum.document;\n  }\n  if (thisClaim.type_key === PlansTypeKeys.EXAMINATION) {\n    return ClaimTypesEnum.exam;\n  }\n  if (thisClaim.type_key === PlansTypeKeys.MARKS_PUBLICATION) {\n    return ClaimTypesEnum.marks_publication;\n  }\n  if (thisClaim.type_key === PlansTypeKeys.PLACEMENT_TRANSFER) {\n    return ClaimTypesEnum.placement;\n  }\n};\n\nexport const whichClaimStatus = (\n  thisClaim: CandidateClaimInterface\n): {\n  classes: string;\n  status: string;\n} => {\n  let classes: string, status: string;\n  switch (thisClaim.last_claim_status) {\n    case ClaimStatus.COMPLETED:\n      classes = \"text-blue-700 italic font-semiblod\";\n      status = capitalizeFirstLetter(ClaimStatus.COMPLETED.toLocaleLowerCase());\n      break;\n    case ClaimStatus.EVALUATED:\n      classes = \"text-green-700 italic font-semiblod\";\n      status = capitalizeFirstLetter(ClaimStatus.EVALUATED.toLocaleLowerCase());\n      break;\n\n    case ClaimStatus.DELETED:\n      classes = \"text-red-700 italic font-semiblod\";\n      status = capitalizeFirstLetter(ClaimStatus.DELETED.toLocaleLowerCase());\n      break;\n\n    default:\n      classes = \"text-yellow-700 italic font-semiblod\";\n      status = capitalizeFirstLetter(ClaimStatus.PENDING.toLocaleLowerCase());\n      break;\n  }\n\n  return { classes, status };\n};\n\nexport const getClaimById = (\n  claimList: CandidateClaimInterface[],\n  claim_id: string\n): CandidateClaimInterface | null => {\n  let result: CandidateClaimInterface | undefined = claimList.find(\n    (item) => item._id === claim_id\n  );\n  return result ? result : null;\n};\n\nexport const getApplicationById = (\n  candidateApplications: claimApplicationsInterface[],\n  application_id: string\n): claimApplicationsInterface | null => {\n  let result: claimApplicationsInterface | undefined =\n    candidateApplications.find(\n      (item) => item.application_id === application_id\n    );\n  return result ? result : null;\n};\n\nexport const displayDocClaimTitle = (\n  documentCategories: DocumentReducerInterface,\n  candidateDocuments: DocumentClaimUser[],\n  thisClaim: CandidateClaimInterface\n): string => {\n  let result: string = \"\";\n\n  // CHECK IF CLAIM IS FOR DOCUMENTS ===============================================\n  if (thisClaim.type_key === PlansTypeKeys.DOCUMENT_VALIDATION) {\n    let thisDoc = getDocumentById(candidateDocuments, thisClaim.claiming_on_id);\n    result = thisDoc\n      ? ClaimGetDocTitle(documentCategories, thisDoc).main\n      : \"Document not found\";\n  }\n  // END CHECK IF CLAIM IS FOR DOCUMENTS ===============================================\n  return result;\n};\n\nexport const displayClaimTitle = (\n  claiming: ClaimingReducerType,\n  documentReducer: DocumentReducerInterface,\n  allCourse: course[] | null,\n  thisClaim: CandidateClaimInterface\n): string => {\n  let result: string = thisClaim.claiming_on_id;\n\n  if (\n    thisClaim.type_key === PlansTypeKeys.DOCUMENT_VALIDATION &&\n    claiming.candidateDocuments\n  ) {\n    result = displayDocClaimTitle(\n      documentReducer,\n      claiming.candidateDocuments,\n      thisClaim\n    );\n  }\n  if (\n    thisClaim.type_key === PlansTypeKeys.APPLICATION &&\n    claiming.candidateApplications\n  ) {\n    let thisApplication = getApplicationById(\n      claiming.candidateApplications,\n      thisClaim.claiming_on_id\n    );\n    if (thisApplication) {\n      result = thisApplication.position.position_title;\n    } else {\n      result = \"Application not found\";\n    }\n  }\n\n  if (\n    thisClaim.type_key === PlansTypeKeys.EXAMINATION &&\n    allCourse &&\n    claiming.myAnswer\n  ) {\n    let thisAnswer = getCourseIdBySheetId(\n      claiming.myAnswer,\n      thisClaim.claiming_on_id\n    );\n    if (thisAnswer && getCourseById(allCourse, thisAnswer.course)) {\n      result = getCourseById(allCourse, thisAnswer.course)!.course_name;\n    } else {\n      result = \"Exam not found\";\n    }\n  }\n\n  if (thisClaim.type_key === PlansTypeKeys.PLACEMENT_TRANSFER) {\n    result = claiming.myPlacement\n      ? \"Placed on \" + claiming.myPlacement.placed.school.school_name\n      : \"Placement not found\";\n  }\n\n  return result;\n};\n\n// -------------------------------------------------------------------------\n\ntype AppProps = {\n  auth: Auth;\n  claiming: ClaimingReducerType;\n  application_sessions: SessionPlanInterface[] | null;\n  courses: course[] | null;\n  documentReducer: DocumentReducerInterface;\n  getMyPlacement: Function;\n  getMyClaims: Function;\n  loadCourses: Function;\n  GetAllSessionPlans: Function;\n  getDocumentCategory: Function;\n  getDocumentSubCategory: Function;\n  getDocumentFields: Function;\n  PushPopupAlert: (alert: PopupAlertData) => void;\n};\n\ntype AppState = {\n  loading: boolean;\n  loadingSession: boolean;\n  thisPeriod: SessionPlanInterface | null;\n  periodChanged: boolean;\n  viewClaim: boolean;\n  claimId: string | null;\n  claimForm: boolean;\n\n  // FOR FORM ================\n  viewImage: boolean;\n  loadingRequest: boolean;\n  reClaiming: boolean;\n  reClaimingMsg: string;\n  formError: {\n    element: string;\n    msg: string;\n  } | null;\n};\n\nclass Index extends Component<AppProps, AppState> {\n  constructor(props: AppProps) {\n    super(props);\n\n    this.state = {\n      loading: true,\n      loadingSession: true,\n      thisPeriod: null,\n      periodChanged: false,\n      viewClaim: false,\n      claimId: null,\n      claimForm: false,\n\n      // FOR FORM ================\n      viewImage: false,\n      loadingRequest: false,\n      reClaiming: false,\n      reClaimingMsg: \"\",\n      formError: null,\n    };\n  }\n\n  setLoading = (value: boolean) => {\n    this.setState({ loading: value });\n  };\n\n  setLoadingSession = (value: boolean) => {\n    this.setState({ loadingSession: value });\n  };\n\n  setViewClaim = (value: boolean) => {\n    this.setState({ viewClaim: value });\n  };\n\n  setPeriodChanged = (value: boolean) => {\n    this.setState({ periodChanged: value });\n  };\n\n  setClaimForm = (value: boolean) => {\n    this.setState({ claimForm: value });\n  };\n\n  setViewImage = (value: boolean) => {\n    this.setState({ viewImage: value });\n  };\n\n  setLoadingRequest = (value: boolean) => {\n    this.setState({ loadingRequest: value });\n  };\n\n  setReClaiming = (value: boolean) => {\n    this.setState({ reClaiming: value });\n  };\n\n  setFormError = (\n    value: {\n      element: string;\n      msg: string;\n    } | null\n  ) => {\n    this.setState({ formError: value });\n  };\n\n  setReClaimingMsg = (value: string) => {\n    this.setState({ reClaimingMsg: value });\n  };\n\n  setClaimId = (value: string | null) => {\n    this.setState({ claimId: value });\n  };\n\n  setThisPeriod = (value: SessionPlanInterface | null) => {\n    this.setState({ thisPeriod: value });\n  };\n\n  loadClaims = (thisPeriod: SessionPlanInterface) => {\n    // LOADING CLAIMING OF CURRENT CANDIDATES ================================\n    if (this.props.claiming.myClaims === null && thisPeriod !== null) {\n      this.props.getMyClaims(\n        this.props.auth.user.user_id,\n        thisPeriod.session_plan_id,\n        (status: boolean, msg: string) => {\n          !status && this.setLoading(status);\n          if (status === false && msg.length) {\n            this.props.PushPopupAlert({\n              title: msg,\n              theme: PopupAlertTheme.danger,\n            });\n          }\n        }\n      );\n    } else if (thisPeriod && this.state.loading) {\n      this.setLoading(false);\n    }\n  };\n\n  setSession = (sessions: SessionPlanInterface[]) => {\n    // SETTING ACTIVE SESSION ==========================\n    if (this.state.thisPeriod === null && sessions.length > 0) {\n      let thisSession = sessions.find((item) => item.is_active === true);\n      this.setThisPeriod(thisSession ? thisSession : sessions[0]);\n      this.loadClaims(thisSession ? thisSession : sessions[0]);\n    }\n  };\n\n  componentDidMount = () => {\n    if (\n      this.props.courses === null ||\n      (this.props.courses.length === 0 && this.state.loading)\n    ) {\n      this.props.loadCourses(this.setLoading);\n      this.setLoading(false);\n    } else {\n      this.setLoading(false);\n    }\n\n    // LOADING APPLICATION SESSION ====================================\n    if (this.props.application_sessions === null) {\n      this.props.GetAllSessionPlans(\n        (status: boolean, msg: string, data?: SessionPlanInterface[]) => {\n          if (!status) {\n            this.setLoadingSession(false);\n            if (msg.length) {\n              this.props.PushPopupAlert({\n                title: msg,\n                theme: PopupAlertTheme.danger,\n              });\n            }\n            if (data && data.length > 0) {\n              // SETTING ACTIVE SESSION ==========================\n              if (this.state.thisPeriod === null) {\n                this.setSession(data);\n              }\n            }\n          }\n        }\n      );\n    } else {\n      this.setSession(this.props.application_sessions);\n      this.setLoadingSession(false);\n    }\n\n    if (!this.props.documentReducer.documentCategory) {\n      this.props.getDocumentCategory();\n      this.setLoading(false);\n    } else if (this.state.loading) {\n      this.setLoading(false);\n    }\n    if (!this.props.documentReducer.documentSubCategory && this.state.loading) {\n      this.props.getDocumentSubCategory();\n      this.setLoading(false);\n    } else if (this.state.loading) {\n      this.setLoading(false);\n    }\n\n    if (!this.props.documentReducer.documentFields && this.state.loading) {\n      this.props.getDocumentFields();\n      this.setLoading(false);\n    } else if (this.state.loading) {\n      this.setLoading(false);\n    }\n\n    if (this.props.claiming.myPlacement === null) {\n      this.props.getMyPlacement(\n        this.props.auth.user.user_id,\n        (status: boolean, msg: string) => {\n          this.setLoading(status);\n          if (!status) {\n            if (msg.length) {\n              this.props.PushPopupAlert({\n                title: msg,\n                theme: PopupAlertTheme.danger,\n              });\n            }\n          }\n        }\n      );\n    }\n  };\n\n  isDeleteAllowed = (thisCLaim: CandidateClaimInterface): boolean => {\n    if (!isClaimEvaluated(thisCLaim, 1)) {\n      return true;\n    }\n    return false;\n  };\n\n  onPeriodChange = (period_id: string) => {\n    this.setPeriodChanged(true);\n    this.props.getMyClaims(\n      this.props.auth.user.user_id,\n      period_id,\n      (status: boolean, msg: string) => {\n        this.setLoadingRequest(status);\n        !status && this.setPeriodChanged(false);\n        if (status === false && msg.length) {\n          this.props.PushPopupAlert({\n            title: msg,\n            theme: PopupAlertTheme.danger,\n          });\n        }\n      }\n    );\n  };\n\n  render() {\n    if (this.props.application_sessions === null) {\n      return (\n        <div className=\"text-center mt-7 font-bold text-4xl text-gray-400 animate-pulse\">\n          Loading Data...\n        </div>\n      );\n    }\n\n    if (this.props.application_sessions.length === 0) {\n      return (\n        <div className=\"bg-yellow-100 rounded flex flex-col items-center justify-center p-6 my-8 text-yellow-900 border border-yellow-900\">\n          <MdInfoOutline className=\"text-6xl md:text-9xl\" />\n          <div className=\"text-center flex flex-col\">\n            <span className=\"text-2xl md:text-4xl font-extrabold\">\n              No active session\n            </span>\n            <span className=\"text-lg\">\n              Please Wait for the system to publish the sessions or contact the\n              administrator\n            </span>\n          </div>\n        </div>\n      );\n    }\n\n    if (this.props.claiming.myClaims === null) {\n      return (\n        <div className=\"text-center mt-7 font-bold text-4xl text-gray-400 animate-pulse\">\n          Loading Data...\n        </div>\n      );\n    }\n\n    return (\n      <div>\n        {/* SIDE NAVIGATION */}\n        {!this.state.viewClaim && (\n          <SideNavigation>\n            <button\n              className=\"btn mb-3 border-2 border-blue-500 hover:bg-blue-500 hover:text-white flex items-center flex-1 font-bold w-full focus:outline-none\"\n              onClick={() => this.setClaimForm(true)}\n              disabled={\n                this.state.viewClaim ||\n                this.state.loading ||\n                this.state.loadingRequest\n              }\n            >\n              <MdAdd className=\"inline-block mr-1 text-xl font-bold\" />\n              <span>Claiming</span>\n            </button>\n\n            {/* FILTER SECTION */}\n            <FilterByType loadingClaims={this.state.loadingRequest} />\n            {/* END FILTER SECTION */}\n          </SideNavigation>\n        )}\n        {/* END SIDE NAVIGATION */}\n\n        {/* ------------------------------------------------------------------- */}\n\n        {/* CLAIM TITLE ===================================== */}\n        {!this.state.viewClaim && (\n          <ClaimHeaderTitle\n            headerTitle={`${\n              this.props.claiming.selectedClaimType === \"all\"\n                ? \"All\"\n                : this.props.claiming.selectedClaimType ===\n                  PlansTypeKeys.DOCUMENT_VALIDATION\n                ? \"Documents\"\n                : this.props.claiming.selectedClaimType ===\n                  PlansTypeKeys.APPLICATION\n                ? \"Applications\"\n                : this.props.claiming.selectedClaimType ===\n                  PlansTypeKeys.EXAMINATION\n                ? \"Exam\"\n                : this.props.claiming.selectedClaimType ===\n                  PlansTypeKeys.MARKS_PUBLICATION\n                ? \"Marks publication\"\n                : this.props.claiming.selectedClaimType ===\n                  PlansTypeKeys.PLACEMENT_TRANSFER\n                ? \"Placements\"\n                : \"\"\n            } Claiming`}\n            loading={this.state.loading}\n            loadingSession={this.state.loadingSession}\n            thisPeriod={this.state.thisPeriod}\n            setThisPeriod={this.setThisPeriod}\n            setLoadingSession={this.setLoadingSession}\n            application_sessions={this.props.application_sessions}\n            onPeriodChange={this.onPeriodChange}\n            periodChanged={this.state.periodChanged}\n          />\n        )}\n        {/* END CLAIM TITLE ===================================== */}\n\n        {/* ----------------------------------------------------------------------- */}\n\n        {!this.state.viewClaim && (\n          <section className=\"bg-white w-full p-1\">\n            <table className=\"w-full shadow\" id=\"report_content\">\n              <thead className=\"bg-white border-b-2 border-gray-300 text-gray-600 font-bold text-sm\">\n                <tr>\n                  <td className=\"px-2 py-2\">#</td>\n                  <td className=\"px-2 py-2\">Claim title</td>\n                  {this.props.claiming.selectedClaimType === \"all\" && (\n                    <td className=\"px-2 py-2\">Claim type</td>\n                  )}\n                  <td className=\"px-2 py-2\">Claim status</td>\n                  <td className=\"px-2 py-2\"></td>\n                </tr>\n              </thead>\n              <tbody>\n                {filterClaimsByClaimType(\n                  this.props.claiming.myClaims,\n                  this.props.claiming.selectedClaimType\n                ).length <= 0 ? (\n                  <tr\n                    className=\"border-b border-gray-200 group hover:bg-gray-50 cursor-pointer\"\n                    key=\"key3201\"\n                  >\n                    <td className=\"px-3 py-1\" colSpan={4}>\n                      <NoResult\n                        theme={NoResultThemes.Light}\n                        value={\"No claim found!\"}\n                      />\n                    </td>\n                  </tr>\n                ) : (\n                  filterClaimsByClaimType(\n                    this.props.claiming.myClaims,\n                    this.props.claiming.selectedClaimType\n                  ).map((claim, index) => (\n                    <tr\n                      className=\"border-b border-gray-200 group hover:bg-gray-50 cursor-pointer\"\n                      key={index + claim._id}\n                      onClick={() => {\n                        this.setViewClaim(true);\n                        this.setClaimId(claim._id);\n                      }}\n                    >\n                      <td className=\"px-3 py-1 whitespace-nowrap\">\n                        {index + 1}\n                      </td>\n                      <td className=\"px-3 py-1 whitespace-nowrap\">\n                        {displayClaimTitle(\n                          this.props.claiming,\n                          this.props.documentReducer,\n                          this.props.courses,\n                          claim\n                        )}\n                      </td>\n                      {this.props.claiming.selectedClaimType === \"all\" && (\n                        <td className=\"px-3 py-1 whitespace-nowrap\">\n                          {whichClaimType(claim)\n                            ? capitalizeFirstLetter(whichClaimType(claim)!)\n                            : \"-\"}\n                        </td>\n                      )}\n                      <td className=\"px-3 py-1 whitespace-nowrap\">\n                        <span\n                          className={`inline-block rounded-full duration-300 text-xs font-semibold px-3 py-1 ${\n                            whichClaimStatus(claim).classes\n                          }`}\n                        >\n                          {whichClaimStatus(claim).status}\n                        </span>\n                      </td>\n                      <td className=\"px-3 py-1 text-center whitespace-nowrap\">\n                        <button className=\"btn bg-blue-500 text-white group-hover:bg-blue-600\">\n                          View\n                        </button>\n                      </td>\n                    </tr>\n                  ))\n                )}\n              </tbody>\n            </table>\n          </section>\n        )}\n\n        {/* ----------------------------------------------------------------------- */}\n\n        {this.state.viewClaim &&\n          this.props.claiming.myClaims &&\n          this.state.claimId &&\n          getClaimById(this.props.claiming.myClaims, this.state.claimId) && (\n            <section className=\"bg-white w-full p-1 my-4\">\n              {/* VIEW CLAIM HEADER =============================== */}\n              <section className=\"flex items-center gap-2 py-2 border-b\">\n                <button\n                  className={`ml-3 bg-gray-50 hover:bg-blue-100 rounded-full px-1 py-1 focus:outline-none ${\n                    this.state.loadingRequest\n                      ? \"cursor-not-allowed\"\n                      : \"cursor-pointer\"\n                  } animate__animated animate__fadeIn`}\n                  disabled={this.state.loadingRequest}\n                  onClick={() => {\n                    this.setViewClaim(false);\n                    this.setViewImage(false);\n                    this.setLoadingRequest(false);\n                    this.setFormError(null);\n                    this.setReClaiming(false);\n                    this.setReClaimingMsg(\"\");\n                  }}\n                >\n                  <MdArrowBack className=\"w-7 h-7\" />\n                </button>\n                {this.isDeleteAllowed(\n                  getClaimById(\n                    this.props.claiming.myClaims,\n                    this.state.claimId\n                  )!\n                ) && (\n                  <button\n                    className={`bg-gray-50 hover:bg-blue-100 rounded-full px-1 py-1 focus:outline-none ${\n                      this.state.loadingRequest\n                        ? \"cursor-not-allowed\"\n                        : \"cursor-pointer\"\n                    } animate__animated animate__fadeIn hidden`}\n                    disabled={this.state.loadingRequest}\n                    // onClick={() => {\n                    //   this.handleDelete();\n                    // }}\n                  >\n                    <MdDelete className=\"w-7 h-7\" />\n                  </button>\n                )}\n              </section>\n              {/* END VIEW CLAIM HEADER =============================== */}\n\n              <section className=\"my-2\">\n                {/* VIEWING CLAIM OF A DOCUMENT ===================== */}\n                {getClaimById(this.props.claiming.myClaims, this.state.claimId)!\n                  .type_key === PlansTypeKeys.DOCUMENT_VALIDATION &&\n                this.props.claiming.candidateDocuments &&\n                getDocumentById(\n                  this.props.claiming.candidateDocuments,\n                  getClaimById(\n                    this.props.claiming.myClaims,\n                    this.state.claimId\n                  )!.claiming_on_id\n                ) ? (\n                  <ClaimDocView\n                    thisDoc={\n                      getDocumentById(\n                        this.props.claiming.candidateDocuments,\n                        getClaimById(\n                          this.props.claiming.myClaims,\n                          this.state.claimId\n                        )!.claiming_on_id\n                      )!\n                    }\n                    documentCategories={this.props.documentReducer}\n                    thisClaim={\n                      getClaimById(\n                        this.props.claiming.myClaims,\n                        this.state.claimId\n                      )!\n                    }\n                    viewImage={this.state.viewImage}\n                    setViewImage={this.setViewImage}\n                    loadingRequest={this.state.loadingRequest}\n                    setLoadingRequest={this.setLoadingRequest}\n                    reClaiming={this.state.reClaiming}\n                    setReClaiming={this.setReClaiming}\n                    reClaimingMsg={this.state.reClaimingMsg}\n                    setReClaimingMsg={this.setReClaimingMsg}\n                    formError={this.state.formError}\n                    setFormError={this.setFormError}\n                  />\n                ) : (\n                  getClaimById(\n                    this.props.claiming.myClaims,\n                    this.state.claimId\n                  )!.type_key === PlansTypeKeys.DOCUMENT_VALIDATION && (\n                    <NoResult\n                      theme={NoResultThemes.Dark}\n                      value={\"Document not found\"}\n                    />\n                  )\n                )}\n                {/* END VIEWING CLAIM OF A DOCUMENT ===================== */}\n\n                {/* ############################################################### */}\n\n                {/* VIEWING CLAIM OF AN APPLICATION ===================== */}\n                {getClaimById(this.props.claiming.myClaims, this.state.claimId)!\n                  .type_key === PlansTypeKeys.APPLICATION &&\n                this.props.claiming.candidateApplications &&\n                getApplicationById(\n                  this.props.claiming.candidateApplications,\n                  getClaimById(\n                    this.props.claiming.myClaims,\n                    this.state.claimId\n                  )!.claiming_on_id\n                ) ? (\n                  <ClaimApplView\n                    thisApplication={\n                      getApplicationById(\n                        this.props.claiming.candidateApplications,\n                        getClaimById(\n                          this.props.claiming.myClaims,\n                          this.state.claimId\n                        )!.claiming_on_id\n                      )!\n                    }\n                    documentCategories={this.props.documentReducer}\n                    thisClaim={\n                      getClaimById(\n                        this.props.claiming.myClaims,\n                        this.state.claimId\n                      )!\n                    }\n                    viewPosition={this.state.viewImage}\n                    setViewPosition={this.setViewImage}\n                    loadingRequest={this.state.loadingRequest}\n                    setLoadingRequest={this.setLoadingRequest}\n                    reClaiming={this.state.reClaiming}\n                    setReClaiming={this.setReClaiming}\n                    reClaimingMsg={this.state.reClaimingMsg}\n                    setReClaimingMsg={this.setReClaimingMsg}\n                    formError={this.state.formError}\n                    setFormError={this.setFormError}\n                  />\n                ) : (\n                  getClaimById(\n                    this.props.claiming.myClaims,\n                    this.state.claimId\n                  )!.type_key === PlansTypeKeys.APPLICATION && (\n                    <NoResult\n                      theme={NoResultThemes.Dark}\n                      value={\"Application not found\"}\n                    />\n                  )\n                )}\n                {/* END VIEWING CLAIM OF AN APPLICATION ===================== */}\n\n                {/* VIEWING CLAIM OF AN EXAM ===================== */}\n                {getClaimById(this.props.claiming.myClaims, this.state.claimId)!\n                  .type_key === PlansTypeKeys.EXAMINATION &&\n                this.props.claiming.myAnswer &&\n                this.props.courses &&\n                getCourseIdBySheetId(\n                  this.props.claiming.myAnswer,\n                  getClaimById(\n                    this.props.claiming.myClaims,\n                    this.state.claimId\n                  )!.claiming_on_id\n                ) &&\n                getCourseById(\n                  this.props.courses,\n                  getCourseIdBySheetId(\n                    this.props.claiming.myAnswer,\n                    getClaimById(\n                      this.props.claiming.myClaims,\n                      this.state.claimId\n                    )!.claiming_on_id\n                  )!.course\n                ) ? (\n                  <ClaimExamView\n                    thisExam={\n                      getCourseById(\n                        this.props.courses,\n                        getCourseIdBySheetId(\n                          this.props.claiming.myAnswer,\n                          getClaimById(\n                            this.props.claiming.myClaims,\n                            this.state.claimId\n                          )!.claiming_on_id\n                        )!.course\n                      )!\n                    }\n                    thisClaim={\n                      getClaimById(\n                        this.props.claiming.myClaims,\n                        this.state.claimId\n                      )!\n                    }\n                    viewPosition={this.state.viewImage}\n                    setViewPosition={this.setViewImage}\n                    loadingRequest={this.state.loadingRequest}\n                    setLoadingRequest={this.setLoadingRequest}\n                    reClaiming={this.state.reClaiming}\n                    setReClaiming={this.setReClaiming}\n                    reClaimingMsg={this.state.reClaimingMsg}\n                    setReClaimingMsg={this.setReClaimingMsg}\n                    formError={this.state.formError}\n                    setFormError={this.setFormError}\n                    thisExamSheet={\n                      getCourseIdBySheetId(\n                        this.props.claiming.myAnswer,\n                        getClaimById(\n                          this.props.claiming.myClaims,\n                          this.state.claimId\n                        )!.claiming_on_id\n                      )!\n                    }\n                  />\n                ) : (\n                  getClaimById(\n                    this.props.claiming.myClaims,\n                    this.state.claimId\n                  )!.type_key === PlansTypeKeys.EXAMINATION && (\n                    <NoResult\n                      theme={NoResultThemes.Dark}\n                      value={\"Exam not found\"}\n                    />\n                  )\n                )}\n                {/* END VIEWING CLAIM OF AN EXAM ===================== */}\n\n                {/* ----------------------------------------------------------- */}\n                {/* VIEWING CLAIM OF A DOCUMENT ===================== */}\n                {getClaimById(this.props.claiming.myClaims, this.state.claimId)!\n                  .type_key === PlansTypeKeys.PLACEMENT_TRANSFER &&\n                this.props.claiming.myPlacement ? (\n                  <ClaimPlacementView\n                    thisClaim={\n                      getClaimById(\n                        this.props.claiming.myClaims,\n                        this.state.claimId\n                      )!\n                    }\n                    loadingRequest={this.state.loadingRequest}\n                    setLoadingRequest={this.setLoadingRequest}\n                    reClaiming={this.state.reClaiming}\n                    setReClaiming={this.setReClaiming}\n                    reClaimingMsg={this.state.reClaimingMsg}\n                    setReClaimingMsg={this.setReClaimingMsg}\n                    formError={this.state.formError}\n                    setFormError={this.setFormError}\n                    myPlacement={this.props.claiming.myPlacement}\n                  />\n                ) : (\n                  getClaimById(\n                    this.props.claiming.myClaims,\n                    this.state.claimId\n                  )!.type_key === PlansTypeKeys.DOCUMENT_VALIDATION && (\n                    <NoResult\n                      theme={NoResultThemes.Dark}\n                      value={\"Document not found\"}\n                    />\n                  )\n                )}\n                {/* END VIEWING CLAIM OF A DOCUMENT ===================== */}\n              </section>\n            </section>\n          )}\n        {/* end view claim */}\n\n        {/* ----------------------------------------------------------------------- */}\n        {/* CLAIM FORM  ################ */}\n        {this.state.claimForm && (\n          <ClaimForm\n            formState={this.state.claimForm}\n            setFormState={this.setClaimForm}\n          />\n        )}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = ({\n  auth,\n  sessionPlan,\n  claiming,\n  document,\n  course,\n}: StoreState): {\n  auth: Auth;\n  claiming: ClaimingReducerType;\n  application_sessions: SessionPlanInterface[] | null;\n  documentReducer: DocumentReducerInterface;\n  courses: course[] | null;\n} => {\n  return {\n    auth: auth,\n    claiming,\n    application_sessions: sessionPlan.allSessionPlans,\n    documentReducer: document,\n    courses: course.courses,\n  };\n};\n\nexport const CandidateClaim = connect(mapStateToProps, {\n  getMyClaims,\n  GetAllSessionPlans,\n  loadCourses,\n  getMyPlacement,\n  getDocumentCategory,\n  getDocumentSubCategory,\n  getDocumentFields,\n  PushPopupAlert,\n})(Index);\n","import axios from \"axios\";\nimport React from \"react\";\nimport { FaRegCheckCircle } from \"react-icons/fa\";\nimport { MdTurnedIn } from \"react-icons/md\";\nimport { RiArrowGoBackFill } from \"react-icons/ri\";\nimport { connect } from \"react-redux\";\nimport { PushPopupAlert } from \"../../actions\";\nimport { createReClaim } from \"../../actions/claiming\";\nimport NoResult, { NoResultThemes } from \"../../components/NoResult/NoResult\";\nimport {\n  CandidateClaimInterface,\n  claimApplicationsInterface,\n  ClaimDecisionStatus,\n  ClaimStatus,\n} from \"../../interfaces\";\nimport { ApplicationStates } from \"../../interfaces/application\";\nimport { PopupAlertTheme } from \"../../interfaces/popupAlert\";\nimport { DocumentReducerInterface } from \"../../reducers/document\";\nimport { capitalizeFirstLetter, isEmptyOrSpaces } from \"../../shared/dataTest\";\nimport { API } from \"../../utils/api\";\nimport { setAxiosToken } from \"../../utils/AxiosToken\";\nimport {\n  DATE,\n  errorToText,\n  showDate,\n  timestampToDate,\n} from \"../../utils/functions\";\nimport ViewRequirements from \"../Positions/ViewRequirements\";\nimport { FC_ApplicationPositionDistinctCategory } from \"./Candidate/ApplicationFormView\";\nimport { isClaimEvaluated } from \"./ClaimDocView\";\n\nconst isReclaimAllowed = (thisClaim: CandidateClaimInterface): boolean => {\n  if (thisClaim.claim_level === 1) {\n    const _thisClaim = thisClaim.claims.find((item) => item.level === 1);\n    if (_thisClaim) {\n      if (_thisClaim.decision_taken_status === ClaimDecisionStatus.REJECTED) {\n        return true;\n      }\n    }\n  }\n  return false;\n};\n\ntype ClaimDocViewProps = {\n  thisApplication: claimApplicationsInterface;\n  documentCategories: DocumentReducerInterface;\n  thisClaim: CandidateClaimInterface;\n  viewPosition: boolean;\n  setViewPosition: (value: boolean) => void;\n  loadingRequest: boolean;\n  setLoadingRequest: (value: boolean) => void;\n  reClaiming: boolean;\n  setReClaiming: (value: boolean) => void;\n  reClaimingMsg: string;\n  setReClaimingMsg: (value: string) => void;\n  formError: {\n    element: string;\n    msg: string;\n  } | null;\n  setFormError: (\n    value: {\n      element: string;\n      msg: string;\n    } | null\n  ) => void;\n\n  // REDUX DATA =====================\n  createReClaim: Function;\n  PushPopupAlert: Function;\n};\n\nconst ClaimDocView: React.FC<ClaimDocViewProps> = (props) => {\n  const handleSubmit = async () => {\n    if (isEmptyOrSpaces(props.reClaimingMsg)) {\n      return props.setFormError({\n        element: \"comment\",\n        msg: \"Claim comment is required!\",\n      });\n    }\n    if (!props.thisClaim) {\n      return props.PushPopupAlert({\n        title: \"Claim is required\",\n        theme: PopupAlertTheme.warning,\n      });\n    }\n\n    props.setLoadingRequest(true);\n    try {\n      setAxiosToken();\n      const res = await axios.put<CandidateClaimInterface>(\n        `${API.CLAIMING}/user/reclaim/${props.thisClaim._id}`,\n        {\n          reason: props.reClaimingMsg,\n        }\n      );\n      console.log({ res: res.data });\n      if (res.status === 201 || res.status === 200) {\n        props.createReClaim(res.data);\n        props.PushPopupAlert({\n          title: \"Claim sent successful\",\n          theme: PopupAlertTheme.success,\n        });\n        props.setReClaimingMsg(\"\");\n        props.setReClaiming(false);\n      }\n    } catch (error) {\n      console.error({ error });\n      props.PushPopupAlert({\n        title: errorToText(error),\n        theme: PopupAlertTheme.danger,\n      });\n    }\n    props.setLoadingRequest(false);\n  };\n\n  return (\n    <section className=\"\">\n      <div className=\"w-full bg-white px-4 py-1 divide-y-2 space-y-2\">\n        {/* DOCUMENT DETAILS ==================================================== */}\n        <section className=\"flex flex-col\">\n          <div className=\"flex items-center justify-between\">\n            <span className=\"text-blue-600 font-bold text-2xl\">\n              {props.thisApplication.position.position_title}\n            </span>\n            <button\n              type=\"button\"\n              className=\"bg-blue-200 hover:bg-blue-300 text-blue-700 group-hover:text-blue-800 py-1 px-2 mr-1 rounded text-sm\"\n              onClick={() => props.setViewPosition(!props.viewPosition)}\n            >\n              {props.viewPosition ? \"Hide\" : \"More\"}\n            </button>\n          </div>\n          <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n            <span className={`italic`}>Status:</span>\n            <span\n              className={`font-bold ${\n                props.thisClaim.previous.status === ApplicationStates.Rejected\n                  ? \"text-yellow-900\"\n                  : \"text-blue-600\"\n              } rounded px-3 py-1`}\n            >\n              {capitalizeFirstLetter(props.thisClaim.previous.status)}\n            </span>\n          </div>\n          <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n            <span className={`italic`}>Evaluated by:</span>\n            <span className=\"font-semibold\">\n              {props.thisClaim.previous.evaluater.name}\n            </span>\n          </div>\n          {false && (\n            <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n              <span className={`italic`}>Session:</span>\n              <span className=\"font-bold text-gray-900 py-1\">\n                {\n                  props.thisApplication.application_session\n                    .application_session_name\n                }\n              </span>\n            </div>\n          )}\n          <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n            <span className={`italic`}>Date:</span>\n            <span className=\"font-bold text-gray-900 py-1\">\n              {DATE(props.thisApplication.createdAt)}\n            </span>\n          </div>\n          <div className=\"flex items-start gap-2 text-sm text-gray-600\">\n            <span className={`italic`}>Reason:</span>\n            <span className=\"font-normal\">\n              {props.thisClaim.previous.reason}\n            </span>\n          </div>\n\n          {/* DISPLAY POSITION ==================================================== */}\n          {props.viewPosition && (\n            <div className=\"w-full my-1 animate__animated animate__fadeIn rounded\">\n              <div className=\"bg-white w-full\">\n                <div className=\"text-gray-800 text-2xl font-bold my-2\">\n                  Position Details\n                </div>\n                <div className=\"flex items-center gap-2 text-base text-gray-600\">\n                  <span className={`italic`}>Desc:</span>\n                  <span className=\"font-semibold\">\n                    {props.thisApplication.position.description}\n                  </span>\n                </div>\n                <div className=\"flex items-center gap-2 text-base text-gray-600\">\n                  <span className={`italic`}>School level:</span>\n                  <span className=\"font-semibold\">\n                    {\n                      props.thisApplication.position.school_level_id\n                        .school_level_name\n                    }\n                  </span>\n                </div>\n                <div className=\"flex items-center gap-2 text-base text-gray-600\">\n                  <span className={`italic`}>Institute:</span>\n                  <span className=\"font-semibold\">\n                    {\n                      props.thisApplication.position.education_institute_id\n                        .education_category_title\n                    }\n                  </span>\n                </div>\n                <div className=\"flex items-center gap-2 text-base text-gray-600\">\n                  <span className={`italic`}>Courses:</span>\n                  <span className=\"flex items-center gap-2\">\n                    {props.thisApplication.position.courses.map(\n                      (item, index) => (\n                        <div\n                          key={index + item.course_id}\n                          className=\"flex items-center gap-1\"\n                        >\n                          <span className=\"font-semibold\">\n                            {item.course_name}\n                          </span>\n                          <span className=\"text-gray-600\">\n                            ({item.course_code})\n                          </span>\n                          {index !==\n                            props.thisApplication.position.courses.length - 1 &&\n                            \",\"}\n                        </div>\n                      )\n                    )}\n                  </span>\n                </div>\n\n                <div className=\"text-gray-800 text-2xl font-bold my-2\">\n                  Position Requirements\n                </div>\n                {props.thisApplication.position.requirements.length > 0 ? (\n                  FC_ApplicationPositionDistinctCategory(\n                    props.thisApplication.position,\n                    props.documentCategories\n                  ).DistinctCategoriesTemp.map((item, index) => (\n                    <div\n                      className=\"bg-gray-100props.thisApplication.position rounded p-2\"\n                      key={index + item.category_id}\n                    >\n                      <div className=\"flex items-center gap-2 text-2xl text-gray-500 font-bold\">\n                        <MdTurnedIn />\n                        <span>{item.category_title}</span>\n                      </div>\n                      <div className=\"border bg-white mt-1\">\n                        <ViewRequirements\n                          requirements={FC_ApplicationPositionDistinctCategory(\n                            props.thisApplication.position,\n                            props.documentCategories\n                          ).PositionsTemp.filter(\n                            (req) => req.category_id === item.category_id\n                          )}\n                        />\n                      </div>\n                    </div>\n                  ))\n                ) : (\n                  <NoResult\n                    theme={NoResultThemes.Dark}\n                    value={\"No requirements\"}\n                  ></NoResult>\n                )}\n              </div>\n            </div>\n          )}\n          {/* END DISPLAY POSITION ==================================================== */}\n        </section>\n        {/* END DOCUMENT DETAILS ==================================================== */}\n\n        {/* ################################################################################ */}\n\n        {/* CLAIM LEVELS DETAILS ==================================================== */}\n        {props.thisClaim.claims.length > 0 &&\n          props.thisClaim.claims.map((claim, index) => (\n            <section className=\"flex flex-col px-2 pt-3\" key={index + claim.id}>\n              {/* CLAIM COMMENT ==>> LEVEL 1 ==================================================== */}\n              <div className=\"flex flex-col items-start gap-2\">\n                <p>{claim.reason}</p>\n                <span className=\"text-gray-500 text-xs\">\n                  {showDate(claim.createdAt) +\n                    \" at \" +\n                    timestampToDate(claim.date_created).timeFR}\n                </span>\n              </div>\n\n              {/* RESPONSE OF LEVELS ======================================= */}\n              {isClaimEvaluated(props.thisClaim, claim.level) && (\n                <section className=\"mt-4\">\n                  <span className=\"text-gray-500 italic font-semibold\">\n                    Response (level {index + 1})\n                  </span>\n                  <div className=\"border-t-2\">\n                    <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n                      <span className={`italic`}>Status:</span>\n                      <span\n                        className={`font-bold ${\n                          claim.decision_taken_status ===\n                          ClaimDecisionStatus.REJECTED\n                            ? \"text-yellow-900\"\n                            : \"text-blue-600\"\n                        } rounded px-3 py-1`}\n                      >\n                        {capitalizeFirstLetter(\n                          claim.decision_taken_status.toLocaleLowerCase()\n                        )}\n                      </span>\n                    </div>\n                    <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n                      <span className={`italic`}>Evaluated by:</span>\n                      <span className=\"font-semibold\">\n                        {claim.evaluater.name}\n                      </span>\n                    </div>\n                    <div className=\"flex items-start gap-2 text-sm text-gray-600\">\n                      <span className={`italic`}>Reason:</span>\n                      <span className=\"font-normal\">\n                        {claim.evaluation_comment}\n                      </span>\n                    </div>\n                  </div>\n                </section>\n              )}\n              {/* CLAIM COMMENT ==>> LEVELS ==================================================== */}\n            </section>\n          ))}\n        {/* END CLAIM LEVELS DETAILS ==================================================== */}\n      </div>\n      <section>\n        {!props.reClaiming && (\n          <div className=\"mx-4 mb-5 mt-3 flex items-center justify-between\">\n            <span\n              className={`${\n                props.thisClaim.last_claim_status === ClaimStatus.PENDING\n                  ? \"text-yellow-700\"\n                  : props.thisClaim.last_claim_status === ClaimStatus.DELETED\n                  ? \"text-red-700\"\n                  : \"text-green-700\"\n              } italic font-semibold`}\n            >\n              {capitalizeFirstLetter(\n                props.thisClaim.last_claim_status.toLocaleLowerCase()\n              )}\n            </span>\n\n            {isReclaimAllowed(props.thisClaim) && (\n              <button\n                className=\"btn btn-blue\"\n                onClick={() => props.setReClaiming(true)}\n                disabled={props.loadingRequest}\n              >\n                Reclaim\n              </button>\n            )}\n          </div>\n        )}\n        {/* right part */}\n        {props.reClaiming && (\n          <div className=\"flex flex-col md:flex-row items-end md:items-start gap-1 w-full\">\n            <div className=\"w-full px-2\">\n              <textarea\n                placeholder={`Reason of your reclaim...`}\n                cols={50}\n                rows={3}\n                className={`border border-${\n                  props.formError && props.formError.element === \"comment\"\n                    ? \"red\"\n                    : \"gray\"\n                }-400 rounded px-3 py-1 w-full focus:outline-none`}\n                style={{ resize: \"none\" }}\n                value={props.reClaimingMsg}\n                onChange={(e) => {\n                  props.setReClaimingMsg(e.target.value);\n                  props.setFormError(null);\n                }}\n                disabled={props.loadingRequest}\n              ></textarea>\n              {props.formError && props.formError.element === \"comment\" && (\n                <p className=\"text-red-800\">{props.formError.msg}</p>\n              )}\n            </div>\n            <div className=\"flex flex-row md:flex-col gap-1 max-w-full px-2\">\n              <button\n                className=\"bg-gray-700 hover:bg-gray-800 px-4 py-2 font-semibold rounded text-white inline-flex items-center space-x-2 focus:outline-none\"\n                onClick={() => {\n                  props.setReClaimingMsg(\"\");\n                  props.setReClaiming(false);\n                  props.setFormError(null);\n                }}\n                disabled={props.loadingRequest}\n              >\n                <RiArrowGoBackFill className=\"w-5 h-5\" />\n                <span>Back</span>\n              </button>\n              <button\n                className=\"bg-blue-700 hover:bg-blue-800 px-4 py-2 font-semibold rounded text-white inline-flex items-center space-x-2 focus:outline-none\"\n                disabled={props.loadingRequest}\n                onClick={() => handleSubmit()}\n              >\n                {props.loadingRequest ? (\n                  <div className=\"\">Loading...</div>\n                ) : (\n                  <div className=\"inline-flex items-center space-x-2 gap-1\">\n                    <FaRegCheckCircle className=\"w-5 h-5\" />\n                    <span>Confirm</span>\n                  </div>\n                )}\n              </button>\n            </div>\n          </div>\n        )}\n        {/* end right part */}\n      </section>\n    </section>\n  );\n};\n\nexport default connect(null, {\n  createReClaim,\n  PushPopupAlert,\n})(ClaimDocView);\n","import axios from \"axios\";\nimport React, { useEffect, useState } from \"react\";\nimport { FaRegCheckCircle } from \"react-icons/fa\";\nimport { ImInfo, ImRadioChecked, ImRadioUnchecked } from \"react-icons/im\";\nimport { MdSwapHoriz } from \"react-icons/md\";\nimport { RiArrowGoBackFill } from \"react-icons/ri\";\nimport { connect } from \"react-redux\";\nimport {\n  loadQuestionTypes,\n  PushPopupAlert,\n  questionTypesStoreInterface,\n} from \"../../actions\";\nimport { createReClaim } from \"../../actions/claiming\";\nimport {\n  CalculatedMultipleChoiceInterface,\n  CandidateClaimInterface,\n  ClaimDecisionStatus,\n  ClaimExamResultsDetails,\n  ClaimGetUserAnswers,\n  ClaimStatus,\n  course,\n  matchingAnswerInterface,\n  multipleChoiceAnswerInterface,\n  questionTypeElementsType,\n} from \"../../interfaces\";\nimport { PopupAlertTheme } from \"../../interfaces/popupAlert\";\nimport { StoreState } from \"../../reducers\";\nimport { capitalizeFirstLetter, isEmptyOrSpaces } from \"../../shared/dataTest\";\nimport { API } from \"../../utils/api\";\nimport { setAxiosToken } from \"../../utils/AxiosToken\";\nimport { errorToText, showDate, timestampToDate } from \"../../utils/functions\";\nimport { findQuestionType } from \"../DoExam/utils/utils\";\nimport { isClaimEvaluated } from \"./ClaimDocView\";\n\nconst isReclaimAllowed = (thisClaim: CandidateClaimInterface): boolean => {\n  if (thisClaim.claim_level === 1) {\n    const _thisClaim = thisClaim.claims.find((item) => item.level === 1);\n    if (_thisClaim) {\n      if (_thisClaim.decision_taken_status === ClaimDecisionStatus.REJECTED) {\n        return true;\n      }\n    }\n  }\n  return false;\n};\n\ntype ClaimDocViewProps = {\n  thisExam: course;\n  thisExamSheet: ClaimExamResultsDetails;\n  thisClaim: CandidateClaimInterface;\n  viewPosition: boolean;\n  setViewPosition: (value: boolean) => void;\n  loadingRequest: boolean;\n  setLoadingRequest: (value: boolean) => void;\n  reClaiming: boolean;\n  setReClaiming: (value: boolean) => void;\n  reClaimingMsg: string;\n  setReClaimingMsg: (value: string) => void;\n  formError: {\n    element: string;\n    msg: string;\n  } | null;\n  setFormError: (\n    value: {\n      element: string;\n      msg: string;\n    } | null\n  ) => void;\n\n  // REDUX DATA =====================\n  questionTypes: questionTypesStoreInterface;\n  loadQuestionTypes: (callback: (loading: boolean) => void) => void;\n  createReClaim: Function;\n  PushPopupAlert: Function;\n};\n\nconst ClaimDocView: React.FC<ClaimDocViewProps> = (props) => {\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    if (\n      props.questionTypes.questionTypes === null ||\n      (props.questionTypes.questionTypes.length === 0 && loading)\n    ) {\n      props.loadQuestionTypes(setLoading);\n    }\n  }, [loading, props]);\n\n  const handleSubmit = async () => {\n    if (isEmptyOrSpaces(props.reClaimingMsg)) {\n      return props.setFormError({\n        element: \"comment\",\n        msg: \"Claim comment is required!\",\n      });\n    }\n    if (!props.thisClaim) {\n      return props.PushPopupAlert({\n        title: \"Claim is required\",\n        theme: PopupAlertTheme.warning,\n      });\n    }\n\n    props.setLoadingRequest(true);\n    try {\n      setAxiosToken();\n      const res = await axios.put<CandidateClaimInterface>(\n        `${API.CLAIMING}/user/reclaim/${props.thisClaim._id}`,\n        {\n          reason: props.reClaimingMsg,\n        }\n      );\n      console.log({ res: res.data });\n      if (res.status === 201 || res.status === 200) {\n        props.createReClaim(res.data);\n        props.PushPopupAlert({\n          title: \"Claim sent successful\",\n          theme: PopupAlertTheme.success,\n        });\n        props.setReClaimingMsg(\"\");\n        props.setReClaiming(false);\n      }\n    } catch (error) {\n      console.error({ error });\n      props.PushPopupAlert({\n        title: errorToText(error),\n        theme: PopupAlertTheme.danger,\n      });\n    }\n    props.setLoadingRequest(false);\n  };\n\n  const getAnswersByQuestion = (question_id: string): ClaimGetUserAnswers[] => {\n    return props.thisExamSheet.user_answers.filter(\n      (item) => item.question === question_id\n    );\n  };\n\n  return (\n    <section className=\"\">\n      <div className=\"w-full bg-white px-4 py-1 divide-y-2 space-y-2\">\n        {/* DOCUMENT DETAILS ==================================================== */}\n        <section className=\"flex flex-col\">\n          <div className=\"flex items-center justify-between\">\n            <span className=\"text-blue-600 font-bold text-2xl\">\n              Exam of {props.thisExam.course_name}{\" \"}\n            </span>\n            <button\n              type=\"button\"\n              className=\"bg-blue-200 hover:bg-blue-300 text-blue-700 group-hover:text-blue-800 py-1 px-2 mr-1 rounded text-sm\"\n              onClick={() => props.setViewPosition(!props.viewPosition)}\n            >\n              {props.viewPosition ? \"Hide\" : \"More\"}\n            </button>\n          </div>\n\n          {/* DISPLAY EXAM SHEET ==================================================== */}\n          {props.viewPosition && (\n            <div className=\"bg-white w-full rounded p-2 mb-2\">\n              <div className=\"text-gray-800 text-2xl font-bold my-2\">\n                Questions\n              </div>\n              {props.thisExamSheet.questions.map((item, index) => (\n                <div\n                  key={index + item.id}\n                  className=\"rounded border my-2 p-1 shadow divide-y\"\n                >\n                  {/* SINGLE & MULTIPLE && TRUE+FALSE QUESTIONS ===================================== */}\n                  {findQuestionType(\n                    item.type,\n                    props.questionTypes.questionTypes\n                  ) &&\n                    (findQuestionType(\n                      item.type,\n                      props.questionTypes.questionTypes\n                    )! === questionTypeElementsType.MultipleChoice ||\n                      findQuestionType(\n                        item.type,\n                        props.questionTypes.questionTypes\n                      )! === questionTypeElementsType.SingleMultiple ||\n                      findQuestionType(\n                        item.type,\n                        props.questionTypes.questionTypes\n                      )! === questionTypeElementsType.TrueFalse) && (\n                      <div className=\"flex flex-col gap-1 px-2 text-base text-gray-600\">\n                        <span className={`font-semibold`}>\n                          {item.question[0].title}:\n                        </span>\n                        <span className=\"\">{item.question[0].description}</span>\n                        <div className=\"grid grid-cols-2 gap-4 mt-2 mb-1 pt-2 divide-x border bg-gray-50\">\n                          <div className=\"px-4\">\n                            <p className=\"text-md font-medium\">\n                              Expected answer :\n                            </p>\n                            <ul className=\"text-sm w-full my-2\">\n                              {item.question[0].answer.map(\n                                (\n                                  question: multipleChoiceAnswerInterface,\n                                  index\n                                ) => (\n                                  <li\n                                    className={`mb-1 flex items-center`}\n                                    key={index + question.id}\n                                  >\n                                    {question.status ? (\n                                      <ImRadioChecked className=\"h-6 w-6 mr-2\" />\n                                    ) : (\n                                      <ImRadioUnchecked className=\"h-6 w-6 mr-2\" />\n                                    )}\n                                    {question.value}\n                                  </li>\n                                )\n                              )}\n                            </ul>\n                          </div>\n\n                          <div className=\"px-4\">\n                            <p className=\"text-md font-medium\">\n                              Given answers :\n                            </p>\n                            <ul className=\"text-sm w-full my-2\">\n                              {getAnswersByQuestion(item.question_id).length >\n                              0 ? (\n                                getAnswersByQuestion(\n                                  item.question_id\n                                )[0].answer.map(\n                                  (\n                                    answer: multipleChoiceAnswerInterface,\n                                    indexAnswer\n                                  ) => (\n                                    <li\n                                      className=\"mb-3 flex items-center\"\n                                      key={indexAnswer}\n                                    >\n                                      {answer.status ? (\n                                        <ImRadioChecked className=\"h-6 w-6 mr-2\" />\n                                      ) : (\n                                        <ImRadioUnchecked className=\"h-6 w-6 mr-2\" />\n                                      )}\n                                      {answer.value}\n                                    </li>\n                                  )\n                                )\n                              ) : (\n                                <li className=\"mb-3 flex items-center\">\n                                  <ImInfo className=\"h-6 w-6 mr-2\" />\n                                  No Answer provided\n                                </li>\n                              )}\n                            </ul>\n                          </div>\n                        </div>\n                        <div className=\"flex items-center px-4 mb-2\">\n                          <p className=\"text-md font-medium\">Marks :</p>\n                          <span>\n                            {getAnswersByQuestion(item.question_id) &&\n                            getAnswersByQuestion(item.question_id).length > 0\n                              ? getAnswersByQuestion(item.question_id)[0]\n                                  .user_marks\n                              : \"\"}\n                          </span>\n                        </div>\n                      </div>\n                    )}\n\n                  {/* Simple Calculate QUESTIONS ===================================== */}\n                  {findQuestionType(\n                    item.type,\n                    props.questionTypes.questionTypes\n                  ) &&\n                    findQuestionType(\n                      item.type,\n                      props.questionTypes.questionTypes\n                    )! === questionTypeElementsType.SimpleCalculate && (\n                      <div className=\"flex flex-col gap-1 px-2 text-base text-gray-600\">\n                        <span className={`font-semibold`}>\n                          {item.question[0].title}:\n                        </span>\n                        <span className=\"\">{item.question[0].description}</span>\n                        <div className=\"mt-2 mb-1 py-1 divide-x border bg-gray-50\">\n                          <div className=\"px-4 flex items-center gap-2\">\n                            <p className=\"text-md font-medium\">\n                              Expected answer :\n                            </p>\n                            <span>\n                              Between {item.question[0].answer[0].value[0]} + \"\n                              and \"+{item.question[0].answer[0].value[1]}\n                            </span>\n                          </div>\n\n                          <div className=\"px-4 flex items-center gap-2\">\n                            <p className=\"text-md font-medium\">\n                              Given answers :\n                            </p>\n                            {getAnswersByQuestion(item.question_id).length >\n                            0 ? (\n                              getAnswersByQuestion(\n                                item.question_id\n                              )[0].answer.map(\n                                (\n                                  answer: multipleChoiceAnswerInterface,\n                                  indexAnswer\n                                ) => (\n                                  <span key={indexAnswer}>{answer.value}</span>\n                                )\n                              )\n                            ) : (\n                              <span>No Answer provided</span>\n                            )}\n                          </div>\n                        </div>\n                        <div className=\"flex items-center px-4 mb-2\">\n                          <p className=\"text-md font-medium\">Marks :</p>\n                          <span>\n                            {getAnswersByQuestion(item.question_id) &&\n                            getAnswersByQuestion(item.question_id).length > 0\n                              ? getAnswersByQuestion(item.question_id)[0]\n                                  .user_marks\n                              : \"\"}\n                          </span>\n                        </div>\n                      </div>\n                    )}\n\n                  {/* MATCHING QUESTIONS ===================================== */}\n                  {findQuestionType(\n                    item.type,\n                    props.questionTypes.questionTypes\n                  ) &&\n                    findQuestionType(\n                      item.type,\n                      props.questionTypes.questionTypes\n                    )! === questionTypeElementsType.Matching && (\n                      <div className=\"flex flex-col gap-1 px-2 text-base text-gray-600\">\n                        <span className={`font-semibold`}>\n                          {item.question[0].title}:\n                        </span>\n                        <span className=\"\">{item.question[0].description}</span>\n                        <div className=\"mt-2 mb-1 py-1 divide-x border bg-gray-50\">\n                          <div className=\"grid grid-cols-2 gap-4 mt-2 mb-1 pt-2 divide-x border bg-gray-50\">\n                            <div className=\"px-4\">\n                              <p className=\"text-md font-medium\">\n                                Expected answer :\n                              </p>\n                              <ul className=\"text-sm w-full my-2\">\n                                {item.question[0].answer.map(\n                                  (\n                                    question: matchingAnswerInterface,\n                                    index\n                                  ) => (\n                                    <li\n                                      className={`mb-1 flex items-center gap-2 text-lg`}\n                                      key={index + question.id}\n                                    >\n                                      {question.value}\n                                      <MdSwapHoriz className=\"\" />\n                                      {question.status}\n                                    </li>\n                                  )\n                                )}\n                              </ul>\n                            </div>\n\n                            <div className=\"px-4\">\n                              <p className=\"text-md font-medium\">\n                                Given answers :\n                              </p>\n                              <ul className=\"text-sm w-full my-2\">\n                                {getAnswersByQuestion(item.question_id).length >\n                                0 ? (\n                                  getAnswersByQuestion(\n                                    item.question_id\n                                  )[0].answer.map(\n                                    (\n                                      answer: multipleChoiceAnswerInterface,\n                                      indexAnswer\n                                    ) => (\n                                      <li\n                                        className=\"mb-3 flex items-center\"\n                                        key={indexAnswer}\n                                      >\n                                        {answer.status ? (\n                                          <ImRadioChecked className=\"h-6 w-6 mr-2\" />\n                                        ) : (\n                                          <ImRadioUnchecked className=\"h-6 w-6 mr-2\" />\n                                        )}\n                                        {answer.value}\n                                      </li>\n                                    )\n                                  )\n                                ) : (\n                                  <li className=\"mb-3 flex items-center\">\n                                    <ImInfo className=\"h-6 w-6 mr-2\" />\n                                    No Answer provided\n                                  </li>\n                                )}\n                              </ul>\n                            </div>\n                          </div>\n                          <div className=\"flex items-center px-4 mb-2\">\n                            <p className=\"text-md font-medium\">Marks :</p>\n                            <span>\n                              {getAnswersByQuestion(item.question_id) &&\n                              getAnswersByQuestion(item.question_id).length > 0\n                                ? getAnswersByQuestion(item.question_id)[0]\n                                    .user_marks\n                                : \"\"}\n                            </span>\n                          </div>\n                        </div>\n                      </div>\n                    )}\n\n                  {/* Short Answer QUESTIONS ===================================== */}\n                  {findQuestionType(\n                    item.type,\n                    props.questionTypes.questionTypes\n                  ) &&\n                    findQuestionType(\n                      item.type,\n                      props.questionTypes.questionTypes\n                    )! === questionTypeElementsType.ShortAnswer && (\n                      <div className=\"flex flex-col gap-1 px-2 text-base text-gray-600\">\n                        <span className={`font-semibold`}>\n                          {item.question[0].title}:\n                        </span>\n                        <span className=\"\">{item.question[0].description}</span>\n\n                        <div className=\"mt-2 mb-1 py-1 divide-x border bg-gray-50\">\n                          <div className=\"px-4 flex items-center gap-2\">\n                            <p className=\"text-md font-medium\">\n                              Expected answer :\n                            </p>\n                            <span>\n                              {capitalizeFirstLetter(\n                                item.question[0].answer[0].value\n                              )}\n                            </span>\n                          </div>\n\n                          <div className=\"px-4 flex items-center gap-2\">\n                            <p className=\"text-md font-medium\">\n                              Given answers :\n                            </p>\n                            {getAnswersByQuestion(item.question_id).length >\n                            0 ? (\n                              getAnswersByQuestion(\n                                item.question_id\n                              )[0].answer.map(\n                                (\n                                  answer: multipleChoiceAnswerInterface,\n                                  indexAnswer\n                                ) => (\n                                  <span key={indexAnswer}>{answer.value}</span>\n                                )\n                              )\n                            ) : (\n                              <span>No Answer provided</span>\n                            )}\n                          </div>\n                        </div>\n                        <div className=\"flex items-center px-4 mb-2\">\n                          <p className=\"text-md font-medium\">Marks :</p>\n                          <span>\n                            {getAnswersByQuestion(item.question_id) &&\n                            getAnswersByQuestion(item.question_id).length > 0\n                              ? getAnswersByQuestion(item.question_id)[0]\n                                  .user_marks\n                              : \"\"}\n                          </span>\n                        </div>\n                      </div>\n                    )}\n\n                  {/* Numeric QUESTIONS ===================================== */}\n                  {findQuestionType(\n                    item.type,\n                    props.questionTypes.questionTypes\n                  ) &&\n                    findQuestionType(\n                      item.type,\n                      props.questionTypes.questionTypes\n                    )! === questionTypeElementsType.Numeric && (\n                      <div className=\"flex flex-col gap-1 px-2 text-base text-gray-600\">\n                        <span className={`font-semibold`}>\n                          {item.question[0].title}:\n                        </span>\n                        <span className=\"\">{item.question[0].description}</span>\n                        <div className=\"mt-2 mb-1 py-1 divide-x border bg-gray-50\">\n                          <div className=\"px-4 flex items-center gap-2\">\n                            <p className=\"text-md font-medium\">\n                              Expected answer :\n                            </p>\n                            <span>{item.question[0].answer[0].value[0]}</span>\n                          </div>\n\n                          <div className=\"px-4 flex items-center gap-2\">\n                            <p className=\"text-md font-medium\">\n                              Given answers :\n                            </p>\n                            {getAnswersByQuestion(item.question_id).length >\n                            0 ? (\n                              getAnswersByQuestion(\n                                item.question_id\n                              )[0].answer.map(\n                                (\n                                  answer: multipleChoiceAnswerInterface,\n                                  indexAnswer\n                                ) => (\n                                  <span key={indexAnswer}>{answer.value}</span>\n                                )\n                              )\n                            ) : (\n                              <span>No Answer provided</span>\n                            )}\n                          </div>\n                        </div>\n                        <div className=\"flex items-center px-4 mb-2\">\n                          <p className=\"text-md font-medium\">Marks :</p>\n                          <span>\n                            {getAnswersByQuestion(item.question_id) &&\n                            getAnswersByQuestion(item.question_id).length > 0\n                              ? getAnswersByQuestion(item.question_id)[0]\n                                  .user_marks\n                              : \"\"}\n                          </span>\n                        </div>\n                      </div>\n                    )}\n\n                  {/* Calculated Multiple Choice QUESTIONS ===================================== */}\n                  {findQuestionType(\n                    item.type,\n                    props.questionTypes.questionTypes\n                  ) &&\n                    findQuestionType(\n                      item.type,\n                      props.questionTypes.questionTypes\n                    )! ===\n                      questionTypeElementsType.CalculatedMultipleChoice && (\n                      <div className=\"flex flex-col gap-1 px-2 text-base text-gray-600\">\n                        <span className={`font-semibold`}>\n                          {item.question[0].title}:\n                        </span>\n                        <span className=\"\">{item.question[0].description}</span>\n                        <div className=\"grid grid-cols-2 gap-4 mt-2 mb-1 pt-2 divide-x border bg-gray-50\">\n                          <div className=\"px-4\">\n                            <p className=\"text-md font-medium\">\n                              Expected answer :\n                            </p>\n                            <ul className=\"text-sm w-full my-2\">\n                              {item.question[0].answer.map(\n                                (\n                                  question: CalculatedMultipleChoiceInterface,\n                                  index\n                                ) => (\n                                  <li\n                                    className={`mb-1 flex items-center`}\n                                    key={index + question.id}\n                                  >\n                                    {question.status ? (\n                                      <ImRadioChecked className=\"h-6 w-6 mr-2\" />\n                                    ) : (\n                                      <ImRadioUnchecked className=\"h-6 w-6 mr-2\" />\n                                    )}\n                                    {question.value}\n                                  </li>\n                                )\n                              )}\n                            </ul>\n                          </div>\n\n                          <div className=\"px-4\">\n                            <p className=\"text-md font-medium\">\n                              Given answers :\n                            </p>\n                            <ul className=\"text-sm w-full my-2\">\n                              {getAnswersByQuestion(item.question_id).length >\n                              0 ? (\n                                getAnswersByQuestion(\n                                  item.question_id\n                                )[0].answer.map(\n                                  (\n                                    answer: multipleChoiceAnswerInterface,\n                                    indexAnswer\n                                  ) => (\n                                    <li\n                                      className=\"mb-3 flex items-center\"\n                                      key={indexAnswer}\n                                    >\n                                      {answer.status ? (\n                                        <ImRadioChecked className=\"h-6 w-6 mr-2\" />\n                                      ) : (\n                                        <ImRadioUnchecked className=\"h-6 w-6 mr-2\" />\n                                      )}\n                                      {answer.value}\n                                    </li>\n                                  )\n                                )\n                              ) : (\n                                <li className=\"mb-3 flex items-center\">\n                                  <ImInfo className=\"h-6 w-6 mr-2\" />\n                                  No Answer provided\n                                </li>\n                              )}\n                            </ul>\n                          </div>\n                        </div>\n                        <div className=\"flex items-center px-4 mb-2\">\n                          <p className=\"text-md font-medium\">Marks :</p>\n                          <span>\n                            {getAnswersByQuestion(item.question_id) &&\n                            getAnswersByQuestion(item.question_id).length > 0\n                              ? getAnswersByQuestion(item.question_id)[0]\n                                  .user_marks\n                              : \"\"}\n                          </span>\n                        </div>\n                      </div>\n                    )}\n                </div>\n              ))}\n            </div>\n          )}\n          {/* END DISPLAY POSITION ==================================================== */}\n        </section>\n        {/* END DOCUMENT DETAILS ==================================================== */}\n\n        {/* ################################################################################ */}\n\n        {/* CLAIM LEVELS DETAILS ==================================================== */}\n        {props.thisClaim.claims.length > 0 &&\n          props.thisClaim.claims.map((claim, index) => (\n            <section className=\"flex flex-col px-2 pt-3\" key={index + claim.id}>\n              {/* CLAIM COMMENT ==>> LEVEL 1 ==================================================== */}\n              <div className=\"flex flex-col items-start gap-2\">\n                <p>{claim.reason}</p>\n                <span className=\"text-gray-500 text-xs\">\n                  {showDate(claim.createdAt) +\n                    \" at \" +\n                    timestampToDate(claim.date_created).timeFR}\n                </span>\n              </div>\n\n              {/* RESPONSE OF LEVELS ======================================= */}\n              {isClaimEvaluated(props.thisClaim, claim.level) && (\n                <section className=\"mt-4\">\n                  <span className=\"text-gray-500 italic font-semibold\">\n                    Response (level {index + 1})\n                  </span>\n                  <div className=\"border-t-2\">\n                    <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n                      <span className={`italic`}>Status:</span>\n                      <span\n                        className={`font-bold ${\n                          claim.decision_taken_status ===\n                          ClaimDecisionStatus.REJECTED\n                            ? \"text-yellow-900\"\n                            : \"text-blue-600\"\n                        } rounded px-3 py-1`}\n                      >\n                        {capitalizeFirstLetter(\n                          claim.decision_taken_status.toLocaleLowerCase()\n                        )}\n                      </span>\n                    </div>\n                    <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n                      <span className={`italic`}>Evaluated by:</span>\n                      <span className=\"font-semibold\">\n                        {loading ? (\n                          <div className=\"w-24 h-3 rounded bg-gray-200 animate__animated animate__pulse animate__delay-5s animate__infinite\"></div>\n                        ) : (\n                          props.thisClaim.userDetails.user_info.fname +\n                          \" \" +\n                          props.thisClaim.userDetails.user_info.lname\n                        )}\n                      </span>\n                    </div>\n                    <div className=\"flex items-start gap-2 text-sm text-gray-600\">\n                      <span className={`italic`}>Reason:</span>\n                      <span className=\"font-normal\">\n                        {claim.evaluation_comment}\n                      </span>\n                    </div>\n                  </div>\n                </section>\n              )}\n              {/* CLAIM COMMENT ==>> LEVELS ==================================================== */}\n            </section>\n          ))}\n        {/* END CLAIM LEVELS DETAILS ==================================================== */}\n      </div>\n      <section>\n        {!props.reClaiming && (\n          <div className=\"mx-4 mb-5 mt-3 flex items-center justify-between\">\n            <span\n              className={`${\n                props.thisClaim.last_claim_status === ClaimStatus.PENDING\n                  ? \"text-yellow-700\"\n                  : props.thisClaim.last_claim_status === ClaimStatus.DELETED\n                  ? \"text-red-700\"\n                  : \"text-green-700\"\n              } italic font-semibold`}\n            >\n              {capitalizeFirstLetter(\n                props.thisClaim.last_claim_status.toLocaleLowerCase()\n              )}\n            </span>\n\n            {isReclaimAllowed(props.thisClaim) && (\n              <button\n                className=\"btn btn-blue\"\n                onClick={() => props.setReClaiming(true)}\n                disabled={props.loadingRequest}\n              >\n                Reclaim\n              </button>\n            )}\n          </div>\n        )}\n        {/* right part */}\n        {props.reClaiming && (\n          <div className=\"flex flex-col md:flex-row items-end md:items-start gap-1 w-full\">\n            <div className=\"w-full px-2\">\n              <textarea\n                placeholder={`Reason of your reclaim...`}\n                cols={50}\n                rows={3}\n                className={`border border-${\n                  props.formError && props.formError.element === \"comment\"\n                    ? \"red\"\n                    : \"gray\"\n                }-400 rounded px-3 py-1 w-full focus:outline-none`}\n                style={{ resize: \"none\" }}\n                value={props.reClaimingMsg}\n                onChange={(e) => {\n                  props.setReClaimingMsg(e.target.value);\n                  props.setFormError(null);\n                }}\n                disabled={props.loadingRequest}\n              ></textarea>\n              {props.formError && props.formError.element === \"comment\" && (\n                <p className=\"text-red-800\">{props.formError.msg}</p>\n              )}\n            </div>\n            <div className=\"flex flex-row md:flex-col gap-1 max-w-full px-2\">\n              <button\n                className=\"bg-gray-700 hover:bg-gray-800 px-4 py-2 font-semibold rounded text-white inline-flex items-center space-x-2 focus:outline-none\"\n                onClick={() => {\n                  props.setReClaimingMsg(\"\");\n                  props.setReClaiming(false);\n                  props.setFormError(null);\n                }}\n                disabled={props.loadingRequest}\n              >\n                <RiArrowGoBackFill className=\"w-5 h-5\" />\n                <span>Back</span>\n              </button>\n              <button\n                className=\"bg-blue-700 hover:bg-blue-800 px-4 py-2 font-semibold rounded text-white inline-flex items-center space-x-2 focus:outline-none\"\n                disabled={props.loadingRequest}\n                onClick={() => handleSubmit()}\n              >\n                {props.loadingRequest ? (\n                  <div className=\"\">Loading...</div>\n                ) : (\n                  <div className=\"inline-flex items-center space-x-2 gap-1\">\n                    <FaRegCheckCircle className=\"w-5 h-5\" />\n                    <span>Confirm</span>\n                  </div>\n                )}\n              </button>\n            </div>\n          </div>\n        )}\n        {/* end right part */}\n      </section>\n    </section>\n  );\n};\n\nconst mapStateToProps = ({\n  questionTypes,\n}: StoreState): {\n  questionTypes: questionTypesStoreInterface;\n} => {\n  return { questionTypes: questionTypes };\n};\n\nexport default connect(mapStateToProps, {\n  loadQuestionTypes,\n  createReClaim,\n  PushPopupAlert,\n})(ClaimDocView);\n","import axios from \"axios\";\nimport React from \"react\";\nimport { FaRegCheckCircle } from \"react-icons/fa\";\nimport { RiArrowGoBackFill } from \"react-icons/ri\";\nimport { connect } from \"react-redux\";\nimport { PushPopupAlert } from \"../../actions\";\nimport { createReClaim } from \"../../actions/claiming\";\nimport {\n  CandidateClaimInterface,\n  ClaimDecisionStatus,\n  ClaimStatus,\n} from \"../../interfaces\";\nimport { candidatePlacementInterface } from \"../../interfaces/placement\";\nimport { PopupAlertTheme } from \"../../interfaces/popupAlert\";\nimport { capitalizeFirstLetter, isEmptyOrSpaces } from \"../../shared/dataTest\";\nimport { API } from \"../../utils/api\";\nimport { setAxiosToken } from \"../../utils/AxiosToken\";\nimport { errorToText, showDate, timestampToDate } from \"../../utils/functions\";\n\nconst isReclaimAllowed = (thisClaim: CandidateClaimInterface): boolean => {\n  if (thisClaim.claim_level === 1) {\n    const _thisClaim = thisClaim.claims.find((item) => item.level === 1);\n    if (_thisClaim) {\n      if (_thisClaim.decision_taken_status === ClaimDecisionStatus.REJECTED) {\n        return true;\n      }\n    }\n  }\n  return false;\n};\n\nexport const isClaimEvaluated = (\n  thisClaim: CandidateClaimInterface,\n  level: number\n): boolean => {\n  const _thisClaim = thisClaim.claims.find(\n    (item) =>\n      item.level === level && item.claim_status === ClaimStatus.EVALUATED\n  );\n  if (_thisClaim) {\n    return true;\n  }\n  return false;\n};\n\ntype ClaimPlacementViewProps = {\n  myPlacement: candidatePlacementInterface;\n  thisClaim: CandidateClaimInterface;\n  loadingRequest: boolean;\n  setLoadingRequest: (value: boolean) => void;\n  reClaiming: boolean;\n  setReClaiming: (value: boolean) => void;\n  reClaimingMsg: string;\n  setReClaimingMsg: (value: string) => void;\n  formError: {\n    element: string;\n    msg: string;\n  } | null;\n  setFormError: (\n    value: {\n      element: string;\n      msg: string;\n    } | null\n  ) => void;\n\n  // REDUX DATA =====================\n  createReClaim: Function;\n  PushPopupAlert: Function;\n};\n\nconst ClaimPlacementView: React.FC<ClaimPlacementViewProps> = (props) => {\n  const handleSubmit = async () => {\n    if (isEmptyOrSpaces(props.reClaimingMsg)) {\n      return props.setFormError({\n        element: \"comment\",\n        msg: \"Claim comment is required!\",\n      });\n    }\n    if (!props.thisClaim) {\n      return props.PushPopupAlert({\n        title: \"Claim sent successful\",\n        theme: PopupAlertTheme.warning,\n      });\n    }\n\n    props.setLoadingRequest(true);\n    try {\n      setAxiosToken();\n      const res = await axios.put<CandidateClaimInterface>(\n        `${API.CLAIMING}/user/reclaim/${props.thisClaim._id}`,\n        {\n          reason: props.reClaimingMsg,\n        }\n      );\n      console.log({ res: res.data });\n      if (res.status === 201 || res.status === 200) {\n        props.createReClaim(res.data);\n        props.PushPopupAlert({\n          title: \"Claim sent successful\",\n          theme: PopupAlertTheme.success,\n        });\n        props.setReClaimingMsg(\"\");\n        props.setReClaiming(false);\n      }\n    } catch (error) {\n      console.error({ error });\n      props.PushPopupAlert({\n        title: errorToText(error),\n        theme: PopupAlertTheme.danger,\n      });\n    }\n    props.setLoadingRequest(false);\n  };\n\n  return (\n    <section className=\"\">\n      <div className=\"w-full bg-white px-4 py-1 divide-y-2 space-y-2\">\n        {/* DOCUMENT DETAILS ==================================================== */}\n        <section className=\"flex flex-col\">\n          <div className=\"flex items-center justify-between\">\n            <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n              <span className={`italic`}>School:</span>\n              <span className=\"text-gray-800 font-bold text-xl\">\n                {props.myPlacement.placed.school.school_name}\n              </span>\n            </div>\n          </div>\n          {/* <div className=\"flex items-center\">\n            <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n              <span className={`italic`}>Position:</span>\n              <span className=\"text-gray-800 font-bold text-xl\">\n                {props.myPlacement.placed.school.school_name}\n              </span>\n            </div>\n          </div> */}\n          <div className=\"flex items-center\">\n            <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n              <span className={`italic`}>District:</span>\n              <span className=\"text-gray-800 font-bold text-xl\">\n                {props.myPlacement.placed.school.district_id.district_name}\n              </span>\n            </div>\n          </div>\n        </section>\n        {/* END DOCUMENT DETAILS ==================================================== */}\n\n        {/* ################################################################################ */}\n\n        {/* CLAIM LEVELS DETAILS ==================================================== */}\n        {props.thisClaim.claims.length > 0 &&\n          props.thisClaim.claims.map((claim, index) => (\n            <section className=\"flex flex-col px-2 pt-3\" key={index + claim.id}>\n              {/* CLAIM COMMENT ==>> LEVEL 1 ==================================================== */}\n              <div className=\"flex flex-col items-start gap-2\">\n                <p>{claim.reason}</p>\n                <span className=\"text-gray-500 text-xs\">\n                  {showDate(claim.createdAt) +\n                    \" at \" +\n                    timestampToDate(claim.date_created).timeFR}\n                </span>\n              </div>\n\n              {/* RESPONSE OF LEVELS ======================================= */}\n              {isClaimEvaluated(props.thisClaim, claim.level) && (\n                <section className=\"mt-4\">\n                  <span className=\"text-gray-500 italic font-semibold\">\n                    Response (level {index + 1})\n                  </span>\n                  <div className=\"border-t-2\">\n                    <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n                      <span className={`italic`}>Status:</span>\n                      <span\n                        className={`font-bold ${\n                          claim.decision_taken_status ===\n                          ClaimDecisionStatus.REJECTED\n                            ? \"text-yellow-900\"\n                            : \"text-blue-600\"\n                        } rounded px-3 py-1`}\n                      >\n                        {capitalizeFirstLetter(\n                          claim.decision_taken_status.toLocaleLowerCase()\n                        )}\n                      </span>\n                    </div>\n                    <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n                      <span className={`italic`}>Evaluated by:</span>\n                      <span className=\"font-semibold\">\n                        {claim.evaluater.name}\n                      </span>\n                    </div>\n                    <div className=\"flex items-start gap-2 text-sm text-gray-600\">\n                      <span className={`italic`}>Reason:</span>\n                      <span className=\"font-normal\">\n                        {claim.evaluation_comment}\n                      </span>\n                    </div>\n                  </div>\n                </section>\n              )}\n              {/* CLAIM COMMENT ==>> LEVELS ==================================================== */}\n            </section>\n          ))}\n        {/* END CLAIM LEVELS DETAILS ==================================================== */}\n      </div>\n      <section>\n        {!props.reClaiming && (\n          <div className=\"mx-4 mb-5 mt-3 flex items-center justify-between\">\n            <span\n              className={`${\n                props.thisClaim.last_claim_status === ClaimStatus.PENDING\n                  ? \"text-yellow-700\"\n                  : props.thisClaim.last_claim_status === ClaimStatus.DELETED\n                  ? \"text-red-700\"\n                  : \"text-green-700\"\n              } italic font-semibold`}\n            >\n              {capitalizeFirstLetter(\n                props.thisClaim.last_claim_status.toLocaleLowerCase()\n              )}\n            </span>\n\n            {isReclaimAllowed(props.thisClaim) && (\n              <button\n                className=\"btn btn-blue\"\n                onClick={() => props.setReClaiming(true)}\n                disabled={props.loadingRequest}\n              >\n                Reclaim\n              </button>\n            )}\n          </div>\n        )}\n        {/* right part */}\n        {props.reClaiming && (\n          <div className=\"flex flex-col md:flex-row items-end md:items-start gap-1 w-full\">\n            <div className=\"w-full px-2\">\n              <textarea\n                placeholder={`Reason of your reclaim...`}\n                cols={50}\n                rows={3}\n                className={`border border-${\n                  props.formError && props.formError.element === \"comment\"\n                    ? \"red\"\n                    : \"gray\"\n                }-400 rounded px-3 py-1 w-full focus:outline-none`}\n                style={{ resize: \"none\" }}\n                value={props.reClaimingMsg}\n                onChange={(e) => {\n                  props.setReClaimingMsg(e.target.value);\n                  props.setFormError(null);\n                }}\n                disabled={props.loadingRequest}\n              ></textarea>\n              {props.formError && props.formError.element === \"comment\" && (\n                <p className=\"text-red-800\">{props.formError.msg}</p>\n              )}\n            </div>\n            <div className=\"flex flex-row md:flex-col gap-1 max-w-full px-2\">\n              <button\n                className=\"bg-gray-700 hover:bg-gray-800 px-4 py-2 font-semibold rounded text-white inline-flex items-center space-x-2 focus:outline-none\"\n                onClick={() => {\n                  props.setReClaimingMsg(\"\");\n                  props.setReClaiming(false);\n                  props.setFormError(null);\n                }}\n                disabled={props.loadingRequest}\n              >\n                <RiArrowGoBackFill className=\"w-5 h-5\" />\n                <span>Back</span>\n              </button>\n              <button\n                className=\"bg-blue-700 hover:bg-blue-800 px-4 py-2 font-semibold rounded text-white inline-flex items-center space-x-2 focus:outline-none\"\n                disabled={props.loadingRequest}\n                onClick={() => handleSubmit()}\n              >\n                {props.loadingRequest ? (\n                  <div className=\"\">Loading...</div>\n                ) : (\n                  <div className=\"inline-flex items-center space-x-2 gap-1\">\n                    <FaRegCheckCircle className=\"w-5 h-5\" />\n                    <span>Confirm</span>\n                  </div>\n                )}\n              </button>\n            </div>\n          </div>\n        )}\n        {/* end right part */}\n      </section>\n    </section>\n  );\n};\n\nexport default connect(null, {\n  createReClaim,\n  PushPopupAlert,\n})(ClaimPlacementView);\n","import React, { useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Auth, PushPopupAlert } from \"../../../actions\";\nimport {\n  GetClaimingTypes,\n  getMyRejectedApplications,\n  getMyRejectedDocuments,\n  setSelectedClaimType,\n} from \"../../../actions/claiming\";\nimport { PopupAlertData } from \"../../../components/Alert/Popup\";\nimport { MainItem } from \"../../../components/Navigation/SideNavigation\";\nimport { ClaimStatus, PlansTypeKeys } from \"../../../interfaces\";\nimport { PopupAlertTheme } from \"../../../interfaces/popupAlert\";\nimport { StoreState } from \"../../../reducers\";\nimport { ClaimingReducerType } from \"../../../reducers/claiming\";\n\ntype FilterByTypeProps = {\n  // thisClaimType: ClaimTypesInterface | \"ALL\";\n  // setThisClaimType: React.Dispatch<\n  //   React.SetStateAction<ClaimTypesInterface | \"ALL\">\n  // >;\n  loadingClaims: boolean;\n  FC_CountByType?: Function;\n\n  // REDUX PROPS =======================================\n  auth: Auth;\n  claiming: ClaimingReducerType;\n  GetClaimingTypes: Function;\n  setSelectedClaimType: Function;\n  getMyRejectedApplications: Function;\n  getMyRejectedDocuments: Function;\n  PushPopupAlert: (alert: PopupAlertData) => void;\n};\n\nconst FilterByType: React.FC<FilterByTypeProps> = (props) => {\n  const [loading, setLoading] = useState<boolean>(true);\n  const [loadingRejectedApplications, setLoadingRejectedApplications] =\n    useState<boolean>(true);\n  const [loadingRejectedDocuments, setLoadingRejectedDocuments] =\n    useState<boolean>(true);\n  const [loadingClaimTypes, setLoadingClaimTypes] = useState<boolean>(true);\n\n  useEffect(() => {\n    if (props.claiming.candidateApplications === null) {\n      props.getMyRejectedApplications(\n        props.auth.user.user_id,\n        (status: boolean, msg: string) => {\n          if (status === false) {\n            if (msg.length > 0) {\n              props.PushPopupAlert({\n                title: msg,\n                theme: PopupAlertTheme.danger,\n              });\n            }\n            setLoadingRejectedApplications(false);\n          }\n        }\n      );\n    } else if (loadingRejectedApplications) {\n      setLoadingRejectedApplications(false);\n    }\n\n    if (props.claiming.candidateDocuments === null) {\n      console.log(\"filterrrrrrrrrrrrrrrrrrrr loadingRejectedDocuments\");\n      props.getMyRejectedDocuments((status: boolean, msg: string) => {\n        if (status === false) {\n          if (msg.length > 0) {\n            props.PushPopupAlert({\n              title: msg,\n              theme: PopupAlertTheme.danger,\n            });\n          }\n          setLoadingRejectedDocuments(false);\n        }\n      });\n    } else if (loadingRejectedDocuments) {\n      setLoadingRejectedDocuments(false);\n    }\n\n    if (props.claiming.claimTypes === null) {\n      props.GetClaimingTypes((status: boolean, msg: string) => {\n        if (status === false) {\n          if (msg.length > 0) {\n            props.PushPopupAlert({\n              title: msg,\n              theme: PopupAlertTheme.danger,\n            });\n          }\n          setLoadingClaimTypes(false);\n        }\n      });\n    } else if (loadingClaimTypes) {\n      setLoadingClaimTypes(false);\n    }\n\n    if (\n      !loadingRejectedApplications &&\n      !loadingRejectedDocuments &&\n      !loadingClaimTypes &&\n      loading\n    ) {\n      setLoading(false);\n    }\n  }, [\n    loading,\n    loadingClaimTypes,\n    loadingRejectedApplications,\n    loadingRejectedDocuments,\n    props,\n  ]);\n\n  const countClaims = (\n    claiming: ClaimingReducerType,\n    thisType: PlansTypeKeys | \"all\"\n  ): number => {\n    let result: number = 0;\n\n    if (claiming.myClaims && thisType === \"all\") {\n      result = claiming.myClaims.filter(\n        (item) =>\n          item.last_claim_status !== ClaimStatus.DELETED &&\n          item.last_claim_status !== ClaimStatus.COMPLETED\n      ).length;\n    }\n    if (claiming.myClaims && thisType !== \"all\") {\n      result = claiming.myClaims.filter(\n        (item) =>\n          item.type_key === thisType &&\n          item.last_claim_status !== ClaimStatus.DELETED &&\n          item.last_claim_status !== ClaimStatus.COMPLETED\n      ).length;\n    }\n\n    return result;\n  };\n\n  return (\n    <React.Fragment>\n      <span className=\"mt-2 text-sm\">Filter by claim type</span>\n      {/* WHILE LOADING DATA ================================== */}\n      {(loading || props.loadingClaims) && (\n        <section className=\"space-y-2\">\n          <div className=\"w-full h-7 rounded bg-gray-200 animate__animated animate__pulse animate__delay-5s animate__infinite\"></div>\n          <div className=\"w-full h-7 rounded bg-gray-200 animate__animated animate__pulse animate__delay-5s animate__infinite\"></div>\n          <div className=\"w-full h-7 rounded bg-gray-200 animate__animated animate__pulse animate__delay-5s animate__infinite\"></div>\n          <div className=\"w-full h-7 rounded bg-gray-200 animate__animated animate__pulse animate__delay-5s animate__infinite\"></div>\n        </section>\n      )}\n      {/* END WHILE LOADING DATA ================================== */}\n\n      {/* AFTER LOADING DATA ================================== */}\n      {!loading && !props.loadingClaims && (\n        <section>\n          {/* ALL ================================= */}\n          <div\n            className=\"mt-2\"\n            onClick={() => {\n              // props.setThisClaimType(\"ALL\");\n              props.setSelectedClaimType(\"all\");\n            }}\n          >\n            <MainItem\n              title=\"All\"\n              active={props.claiming.selectedClaimType === \"all\"}\n              count={countClaims(props.claiming, \"all\")}\n            />\n          </div>\n          {/* APPLICATION ================================= */}\n          <div\n            className=\"mt-2\"\n            onClick={() => {\n              // props.setThisClaimType(ClaimTypesInterface.DOCUMENT);\n              props.setSelectedClaimType(PlansTypeKeys.APPLICATION);\n            }}\n          >\n            <MainItem\n              title={\"Application\"}\n              active={\n                props.claiming.selectedClaimType !== \"all\" &&\n                props.claiming.selectedClaimType === PlansTypeKeys.APPLICATION\n              }\n              count={countClaims(props.claiming, PlansTypeKeys.APPLICATION)}\n            />\n          </div>\n          {/* DOCUMENT ================================= */}\n          <div\n            className=\"mt-2\"\n            onClick={() => {\n              props.setSelectedClaimType(PlansTypeKeys.DOCUMENT_VALIDATION);\n            }}\n          >\n            <MainItem\n              title={\"Document\"}\n              active={\n                props.claiming.selectedClaimType !== \"all\" &&\n                props.claiming.selectedClaimType ===\n                  PlansTypeKeys.DOCUMENT_VALIDATION\n              }\n              count={countClaims(\n                props.claiming,\n                PlansTypeKeys.DOCUMENT_VALIDATION\n              )}\n            />\n          </div>\n          {/* EXAMINATION ================================= */}\n          <div\n            className=\"mt-2\"\n            onClick={() => {\n              props.setSelectedClaimType(PlansTypeKeys.EXAMINATION);\n            }}\n          >\n            <MainItem\n              title={\"Exam\"}\n              active={\n                props.claiming.selectedClaimType !== \"all\" &&\n                props.claiming.selectedClaimType === PlansTypeKeys.EXAMINATION\n              }\n              count={countClaims(props.claiming, PlansTypeKeys.EXAMINATION)}\n            />\n          </div>\n          {/* PLACEMENT TRANSFER ================================= */}\n          {false && (\n            <div\n              className=\"mt-2\"\n              onClick={() => {\n                props.setSelectedClaimType(PlansTypeKeys.PLACEMENT_TRANSFER);\n              }}\n            >\n              <MainItem\n                title={\"Placement\"}\n                active={\n                  props.claiming.selectedClaimType !== \"all\" &&\n                  props.claiming.selectedClaimType ===\n                    PlansTypeKeys.PLACEMENT_TRANSFER\n                }\n                count={countClaims(\n                  props.claiming,\n                  PlansTypeKeys.PLACEMENT_TRANSFER\n                )}\n              />\n            </div>\n          )}\n          {/* <div\n            className=\"mt-2\"\n            onClick={() => {\n              props.setThisClaimType(ClaimTypesInterface.APPLICATION);\n            }}\n          >\n            <MainItem\n              title={capitalizeFirstLetter(ClaimTypesInterface.APPLICATION)}\n              active={props.thisClaimType === ClaimTypesInterface.APPLICATION}\n              count={countClaims(props.claiming).applications}\n            />\n          </div>\n          <div\n            className=\"mt-2\"\n            onClick={() => {\n              props.setThisClaimType(ClaimTypesInterface.PLACEMENT);\n            }}\n          >\n            <MainItem\n              title={capitalizeFirstLetter(ClaimTypesInterface.PLACEMENT)}\n              active={props.thisClaimType === ClaimTypesInterface.PLACEMENT}\n              count={countClaims(props.claiming).placement}\n            />\n          </div> */}\n        </section>\n      )}\n      {/* END AFTER LOADING DATA ================================== */}\n    </React.Fragment>\n  );\n};\n\nconst mapStateToProps = ({\n  auth,\n  claiming,\n}: StoreState): { auth: Auth; claiming: ClaimingReducerType } => {\n  return { auth, claiming };\n};\n\nexport default connect(mapStateToProps, {\n  GetClaimingTypes,\n  setSelectedClaimType,\n  getMyRejectedApplications,\n  getMyRejectedDocuments,\n  PushPopupAlert,\n})(FilterByType);\n","import axios from \"axios\";\nimport React, { useState } from \"react\";\nimport { FaRegCheckCircle } from \"react-icons/fa\";\nimport { MdCancel, MdInfoOutline, MdTurnedIn } from \"react-icons/md\";\nimport { RiArrowGoBackFill } from \"react-icons/ri\";\nimport { connect } from \"react-redux\";\nimport { Auth, PushPopupAlert, reAssessApplication } from \"../../../actions\";\nimport { evaluateClaim } from \"../../../actions/claiming\";\nimport NoResult, {\n  NoResultThemes,\n} from \"../../../components/NoResult/NoResult\";\nimport {\n  allClaimApplicationInterface,\n  CandidateClaimInterface,\n  ClaimDecisionStatus,\n  claimReasonInterface,\n  ClaimStatus,\n  ClaimTypesInterfaceAPI,\n  PositionAPI,\n} from \"../../../interfaces\";\nimport { ApplicationStates } from \"../../../interfaces/application\";\nimport { PopupAlertTheme } from \"../../../interfaces/popupAlert\";\nimport { StoreState } from \"../../../reducers\";\nimport { DocumentReducerInterface } from \"../../../reducers/document\";\nimport {\n  capitalizeFirstLetter,\n  isEmptyOrSpaces,\n} from \"../../../shared/dataTest\";\nimport { API } from \"../../../utils/api\";\nimport { errorToText } from \"../../../utils/errors\";\nimport { DATE, showDate } from \"../../../utils/functions\";\nimport { PositionRequirementTableInterface } from \"../../Positions/ViewPosition\";\nimport ViewRequirements from \"../../Positions/ViewRequirements\";\nimport { isClaimEvaluated } from \"../ClaimDocView\";\n\nexport const FC_AdminApplicationPositionDistinctCategory = (\n  thisPosition: PositionAPI,\n  documentCategories: DocumentReducerInterface\n): {\n  PositionsTemp: PositionRequirementTableInterface[];\n  DistinctCategoriesTemp: PositionRequirementTableInterface[];\n  DistinctSubCategoriesTemp: PositionRequirementTableInterface[];\n} => {\n  let PositionsTemp: PositionRequirementTableInterface[] = [];\n  let DistinctCategoriesTemp: PositionRequirementTableInterface[] = [],\n    DistinctCategoriesIds: string[] = [];\n  let DistinctSubCategoriesTemp: PositionRequirementTableInterface[] = [],\n    DistinctSubCategoriesIds: string[] = [];\n  // GET REQUIREMENTS OF THE CURRENT POSITION ====================\n  let requirements = thisPosition.requirements;\n  // LOOP THROUGH CURRENT POSITION REQUIREMENTS ==========================\n  for (let req in requirements) {\n    let thisRequirements = requirements[req];\n    // GET DOC CATEGORY OF THE CURRENT POSITION REQUIREMENTS ====================\n    let thisCategory = documentCategories.documentCategory\n      ? documentCategories.documentCategory.find(\n          (item) =>\n            item.user_detail_category_id ===\n            thisRequirements.category.user_detail_category_id\n        ) && {\n          title: documentCategories.documentCategory.find(\n            (item) =>\n              item.user_detail_category_id ===\n              thisRequirements.category.user_detail_category_id\n          )!.title,\n          user_detail_category_id: documentCategories.documentCategory.find(\n            (item) =>\n              item.user_detail_category_id ===\n              thisRequirements.category.user_detail_category_id\n          )!.user_detail_category_id,\n        }\n      : {\n          title: \"\",\n          user_detail_category_id:\n            thisRequirements.category.user_detail_category_id,\n        };\n    // GET DOC SUB CATEGORY OF THE CURRENT POSITION REQUIREMENTS ====================\n    let thisSubCategory = documentCategories.documentSubCategory\n      ? documentCategories.documentSubCategory.find(\n          (item) =>\n            item.user_detail_subcategory_id ===\n            thisRequirements.subcategory.user_detail_subcategory_id\n        )\n        ? {\n            title: documentCategories.documentSubCategory.find(\n              (item) =>\n                item.user_detail_subcategory_id ===\n                thisRequirements.subcategory.user_detail_subcategory_id\n            )!.title,\n            user_detail_subcategory_id:\n              documentCategories.documentSubCategory.find(\n                (item) =>\n                  item.user_detail_subcategory_id ===\n                  thisRequirements.subcategory.user_detail_subcategory_id\n              )!.user_detail_subcategory_id,\n            category_id: documentCategories.documentSubCategory.find(\n              (item) =>\n                item.user_detail_subcategory_id ===\n                thisRequirements.subcategory.user_detail_subcategory_id\n            )!.category_id,\n          }\n        : {\n            title: \"\",\n            user_detail_subcategory_id:\n              thisRequirements.subcategory.user_detail_subcategory_id,\n            category_id: \"\",\n          }\n      : {\n          title: \"\",\n          user_detail_subcategory_id:\n            thisRequirements.subcategory.user_detail_subcategory_id,\n          category_id: \"\",\n        };\n    // LOOP THROUGH FIELDS OF THE CURRENT POSITION REQUIREMENTS ==========================\n    if (thisCategory) {\n      for (let field in thisRequirements.position_requirement) {\n        // GET FIELDS OF THE CURRENT POSITION REQUIREMENTS ====================\n        let thisField = documentCategories.documentFields\n          ? documentCategories.documentFields.find(\n              (item) =>\n                item._id === thisRequirements.position_requirement[field]._id\n            )\n            ? {\n                title: documentCategories.documentFields.find(\n                  (item) =>\n                    item._id ===\n                    thisRequirements.position_requirement[field]._id\n                )!.title,\n                _id: documentCategories.documentFields.find(\n                  (item) =>\n                    item._id ===\n                    thisRequirements.position_requirement[field]._id\n                )!._id,\n                required: thisRequirements.position_requirement[field].required,\n              }\n            : {\n                title: \"\",\n                _id: thisRequirements.position_requirement[field]._id,\n                required: thisRequirements.position_requirement[field].required,\n              }\n          : {\n              title: \"\",\n              _id: thisRequirements.position_requirement[field]._id,\n              required: thisRequirements.position_requirement[field].required,\n            };\n        // ADD CURRENT CATEGORY, SUB CATEGORY & FIELDS OF THE CURRENT POSITION REQUIREMENTS IN POSITIONS TEMP ====================\n        PositionsTemp.push({\n          category_id: thisCategory.user_detail_category_id,\n          category_title: thisCategory.title,\n          subcategory_id: thisSubCategory.user_detail_subcategory_id,\n          subcategory_title: thisSubCategory.title,\n          field_title: thisField.title,\n          field_id: thisField._id,\n          required: thisField.required,\n        });\n      }\n\n      // ADD CATEOGRY OF THE CURRENT POSITION REQUIREMENTS TO ARRAY ====================\n      if (\n        !DistinctCategoriesIds.includes(thisCategory.user_detail_category_id)\n      ) {\n        DistinctCategoriesIds.push(thisCategory.user_detail_category_id);\n        DistinctCategoriesTemp.push({\n          category_id: thisCategory.user_detail_category_id,\n          category_title: thisCategory.title,\n          subcategory_id: \"\",\n          subcategory_title: \"\",\n          field_title: \"\",\n          field_id: \"\",\n          required: false,\n        });\n      }\n\n      // ADD SUB CATEOGRY OF THE CURRENT POSITION REQUIREMENTS TO ARRAY ====================\n      if (\n        !DistinctSubCategoriesIds.includes(\n          thisSubCategory.user_detail_subcategory_id\n        )\n      ) {\n        DistinctSubCategoriesIds.push(\n          thisSubCategory.user_detail_subcategory_id\n        );\n        DistinctSubCategoriesTemp.push({\n          category_id: thisSubCategory.category_id,\n          category_title: \"\",\n          subcategory_id: thisSubCategory.user_detail_subcategory_id,\n          subcategory_title: thisSubCategory.title,\n          field_title: \"\",\n          field_id: \"\",\n          required: false,\n        });\n      }\n    }\n  }\n  // DistinctCategoriesIds.;\n\n  return { PositionsTemp, DistinctCategoriesTemp, DistinctSubCategoriesTemp };\n};\n\nenum viewTabs {\n  profile = \"Applicant Profile\",\n  application = \"Application Details\",\n}\n\ntype AdminClaimAppViewProps = {\n  thisApplication: allClaimApplicationInterface;\n  thisPosition: PositionAPI;\n  documentCategories: DocumentReducerInterface;\n  thisClaim: CandidateClaimInterface;\n  claimTypes: ClaimTypesInterfaceAPI[];\n  systemPositions: PositionAPI[];\n  claimReasons: claimReasonInterface[] | null;\n\n  // REDUX ==================\n  auth: Auth;\n  reAssessApplication: Function;\n  evaluateClaim: Function;\n  PushPopupAlert: Function;\n};\n\nconst AdminClaimAppView: React.FC<AdminClaimAppViewProps> = (props) => {\n  const [viewPosition, setViewPosition] = useState<boolean>(true);\n  const [loadingRequest, setLoadingRequest] = useState<boolean>(false);\n  const [actionTaken, setActionTaken] = useState<ClaimDecisionStatus | null>(\n    null\n  );\n  const [formError, setFormError] = useState<{\n    element: string;\n    msg: string;\n  } | null>(null);\n  const [responseMsg, setResponseMsg] = useState<string>(\"\");\n  const [selectedTab, setSelectedTab] = useState<viewTabs>(viewTabs.profile);\n\n  const handleVerify = async () => {\n    if (!actionTaken) {\n      setFormError({\n        element: \"action\",\n        msg: \"Action is required!\",\n      });\n      return setLoadingRequest(false);\n    }\n\n    if (isEmptyOrSpaces(responseMsg)) {\n      setFormError({\n        element: \"comment\",\n        msg: \"Reason of rejection is required\",\n      });\n      return setLoadingRequest(false);\n    }\n\n    let subClaim = props.thisClaim.claims.find(\n      (item) => item.level === props.thisClaim.claim_level\n    );\n\n    if (subClaim) {\n      setLoadingRequest(true);\n      const api_body: {\n        sub_claim_id: string;\n        evaluation_comment: string;\n        evaluated_by: string;\n        decision_taken_status: ClaimDecisionStatus;\n      } = {\n        sub_claim_id: subClaim.id,\n        evaluation_comment: responseMsg,\n        evaluated_by: props.auth.user.user_id,\n        decision_taken_status: actionTaken,\n      };\n\n      try {\n        const res = await axios.put<CandidateClaimInterface>(\n          `${API.CLAIMING}/user/evaluate/${props.thisClaim._id}`,\n          api_body\n        );\n        if (res) {\n          console.log({ evaluate_claim_res: res });\n          props.evaluateClaim(res.data);\n          // REVALIDATED DOCUMENT IF IT IS APPROVED =========================\n          if (actionTaken === ClaimDecisionStatus.ACCEPTED) {\n            await overrideDecision();\n          }\n          props.PushPopupAlert({\n            title: `Claim responded successfully!`,\n            theme: PopupAlertTheme.success,\n          });\n          // setDocumentId(\"null\");\n          setResponseMsg(\"\");\n          setActionTaken(null);\n        }\n      } catch (error) {\n        console.error(error);\n        props.PushPopupAlert({\n          title: errorToText(error),\n          theme: PopupAlertTheme.danger,\n        });\n      }\n      setLoadingRequest(false);\n    }\n  };\n\n  const getReasonById = (\n    reason_id: string\n  ): claimReasonInterface | undefined => {\n    if (props.claimReasons) {\n      return props.claimReasons.find((item) => item.id === reason_id);\n    }\n    return undefined;\n  };\n\n  const overrideDecision = async () => {\n    try {\n      const res = await axios.patch(\n        `${API.APPLICATION}/tolerateappl/${props.thisClaim.claiming_on_id}`,\n        {\n          user_id: props.auth.user.user_id,\n          comment: responseMsg,\n          application_status: ApplicationStates.Shortlisted,\n        }\n      );\n\n      res.data &&\n        props.reAssessApplication({\n          application_id: props.thisClaim.claiming_on_id,\n          application_status: ApplicationStates.Shortlisted,\n        });\n    } catch (error) {\n      console.error({ code_error: error });\n      PushPopupAlert({\n        title: errorToText(error),\n        theme: PopupAlertTheme.danger,\n      });\n      // errorToText(error);\n    }\n    setLoadingRequest(false);\n  };\n\n  const getPositionById = (position_id: string): PositionAPI | undefined => {\n    let result = props.systemPositions.find(\n      (item) => item.position_id === position_id\n    );\n\n    return result;\n  };\n\n  return (\n    <section className=\"\">\n      {/* #################### VIEW TABS ################################## */}\n      <div className=\"flex flex-row items-center mx-4\">\n        {Object.values(viewTabs).map((item, i) => (\n          <div\n            key={i}\n            onClick={() => setSelectedTab(item)}\n            className={`animate__animated ${\n              selectedTab === item\n                ? \"bg-blue-100 border-blue-600 text-blue-600 animate__zoomIn\"\n                : \"bg-white border-white text-gray-600\"\n            } hover:bg-blue-100 px-4 py-2 cursor-pointer font-bold border-b-4 hover:border-blue-600 hover:text-blue-600 rounded-t mt-1 mr-1`}\n          >\n            {item}\n          </div>\n        ))}\n      </div>\n      {/* #################### END VIEW TABS ################################## */}\n      <div className=\"w-full bg-white px-4 py-1 divide-y-2 space-y-2\">\n        {/* DOCUMENT DETAILS ==================================================== */}\n        <section className=\"flex flex-col\">\n          {/* DISPLAY POSITION ==================================================== */}\n          {selectedTab === viewTabs.application && (\n            <section className=\"w-full my-1 animate__animated animate__fadeIn rounded\">\n              <div className=\"bg-white w-full\">\n                <div className=\"text-gray-800 text-2xl font-bold my-2\">\n                  Position Details\n                </div>\n                <div className=\"flex items-center\">\n                  <div className=\"flex items-center gap-2\">\n                    <span className={`italic text-gray-600`}>Name:</span>\n                    <span className=\"text-gray-800 font-bold text-2xl\">\n                      {getPositionById(props.thisApplication.position)\n                        ? getPositionById(props.thisApplication.position)!\n                            .position_title\n                        : \"Position not found\"}\n                    </span>\n                  </div>\n                </div>\n                <div className=\"flex items-center gap-2 text-base text-gray-600\">\n                  <span className={`italic`}>Desc:</span>\n                  <span className=\"font-semibold\">\n                    {getPositionById(props.thisApplication.position)\n                      ? getPositionById(props.thisApplication.position)!\n                          .description\n                      : \"\"}\n                  </span>\n                </div>\n                <div className=\"flex items-center gap-2 text-base text-gray-600\">\n                  <span className={`italic`}>School level:</span>\n                  <span className=\"font-semibold\">\n                    {getPositionById(props.thisApplication.position)\n                      ? getPositionById(props.thisApplication.position)!\n                          .school_level_id.school_level_name\n                      : \"\"}\n                  </span>\n                </div>\n                <div className=\"flex items-center gap-2 text-base text-gray-600\">\n                  <span className={`italic`}>Institute:</span>\n                  <span className=\"font-semibold\">\n                    {getPositionById(props.thisApplication.position)\n                      ? getPositionById(props.thisApplication.position)!\n                          .education_institute_id.education_category_title\n                      : \"\"}\n                  </span>\n                </div>\n                <div className=\"flex items-center gap-2 text-base text-gray-600\">\n                  <span className={`italic`}>Courses:</span>\n                  <span className=\"flex items-center gap-2\">\n                    {getPositionById(props.thisApplication.position) ? (\n                      getPositionById(\n                        props.thisApplication.position\n                      )!.courses.map((item, index) => (\n                        <div\n                          key={index + item.course_id}\n                          className=\"flex items-center gap-1\"\n                        >\n                          <span className=\"font-semibold\">\n                            {item.course_name}\n                          </span>\n                          <span className=\"text-gray-600\">\n                            ({item.course_code})\n                          </span>\n                          {index !==\n                            getPositionById(props.thisApplication.position)!\n                              .courses.length -\n                              1 && \",\"}\n                        </div>\n                      ))\n                    ) : (\n                      <NoResult\n                        theme={NoResultThemes.Dark}\n                        value={\"No courses found\"}\n                      />\n                    )}\n                  </span>\n                </div>\n\n                <div className=\"text-gray-800 text-2xl font-bold my-2\">\n                  Position Requirements\n                </div>\n                {getPositionById(props.thisApplication.position) ? (\n                  getPositionById(props.thisApplication.position)!.requirements\n                    .length > 0 ? (\n                    FC_AdminApplicationPositionDistinctCategory(\n                      getPositionById(props.thisApplication.position)!,\n                      props.documentCategories\n                    ).DistinctCategoriesTemp.map((item, index) => (\n                      <div\n                        className=\"bg-gray-100props.thisApplication.position rounded p-2\"\n                        key={index + item.category_id}\n                      >\n                        <div className=\"flex items-center gap-2 text-2xl text-gray-500 font-bold\">\n                          <MdTurnedIn />\n                          <span>{item.category_title}</span>\n                        </div>\n                        <div className=\"border bg-white mt-1\">\n                          <ViewRequirements\n                            requirements={FC_AdminApplicationPositionDistinctCategory(\n                              getPositionById(props.thisApplication.position)!,\n                              props.documentCategories\n                            ).PositionsTemp.filter(\n                              (req) => req.category_id === item.category_id\n                            )}\n                          />\n                        </div>\n                      </div>\n                    ))\n                  ) : (\n                    <NoResult\n                      theme={NoResultThemes.Dark}\n                      value={\"No requirements\"}\n                    ></NoResult>\n                  )\n                ) : (\n                  <NoResult\n                    theme={NoResultThemes.Dark}\n                    value={\"No requirements\"}\n                  ></NoResult>\n                )}\n              </div>\n            </section>\n          )}\n          {/* END DISPLAY POSITION ==================================================== */}\n          {/* -------------------------------------------------------------------------------- */}\n          {/* DISPLAY PROFILE ==================================================== */}\n          {selectedTab === viewTabs.profile && (\n            <section className=\"w-full my-2 animate__animated animate__fadeIn rounded\">\n              <div className=\"flex items-center justify-between\">\n                <div className=\"flex items-center gap-2\">\n                  <span className={`italic text-gray-600`}>Names:</span>\n                  <span className=\"text-gray-800 font-bold text-xl\">\n                    {props.thisClaim.previous.evaluater.name}\n                  </span>\n                </div>\n                {false && (\n                  <button\n                    type=\"button\"\n                    className=\"bg-blue-200 hover:bg-blue-300 text-blue-700 group-hover:text-blue-800 py-1 px-2 mr-1 rounded text-sm\"\n                    onClick={() => setViewPosition(!viewPosition)}\n                  >\n                    {viewPosition ? \"Hide\" : \"More\"}\n                  </button>\n                )}\n              </div>\n            </section>\n          )}\n          {/* END DISPLAY PROFILE ==================================================== */}\n          {selectedTab === viewTabs.profile && (\n            <div className=\"flex items-center\">\n              <div className=\"flex items-center gap-2\">\n                <span className={`italic text-gray-600`}>Position name:</span>\n                <span className=\"text-gray-800 font-bold text-2xl\">\n                  {getPositionById(props.thisApplication.position)\n                    ? getPositionById(props.thisApplication.position)!\n                        .position_title\n                    : \"Position not found\"}\n                </span>\n              </div>\n            </div>\n          )}\n          <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n            <span className={`italic`}>Status:</span>\n            <span\n              className={`font-bold ${\n                props.thisClaim.previous\n                  ? props.thisClaim.previous.status ===\n                    ApplicationStates.Rejected\n                  : props.thisApplication.application_status ===\n                    ApplicationStates.Rejected\n                  ? \"text-yellow-900\"\n                  : \"text-blue-600\"\n              } rounded px-3 py-1`}\n            >\n              {props.thisClaim.previous\n                ? capitalizeFirstLetter(props.thisClaim.previous.status)\n                : capitalizeFirstLetter(\n                    props.thisApplication.application_status\n                  )}\n            </span>\n          </div>\n          <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n            <span className={`italic`}>Evaluated by:</span>\n            <span className=\"font-semibold\">\n              {props.thisClaim.previous.evaluater.name}\n            </span>\n          </div>\n          {false && (\n            <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n              <span className={`italic`}>Session:</span>\n              <span className=\"font-bold text-gray-900 py-1\">\n                {props.thisApplication.application_session}\n              </span>\n            </div>\n          )}\n          <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n            <span className={`italic`}>Date:</span>\n            <span className=\"font-bold text-gray-900 py-1\">\n              {DATE(props.thisApplication.createdAt)}\n            </span>\n          </div>\n          <div className=\"flex items-start gap-2 text-sm text-gray-600\">\n            <span className={`italic`}>Reason:</span>\n            <span className=\"font-normal\">\n              {props.thisClaim.previous\n                ? props.thisClaim.previous.reason\n                : props.thisApplication.override_by.comment}\n            </span>\n          </div>\n        </section>\n        {/* END DOCUMENT DETAILS ==================================================== */}\n\n        {/* ################################################################################ */}\n\n        {/* CLAIM LEVEL 1 DETAILS ==================================================== */}\n        {props.thisClaim.claims.length > 0 &&\n          props.thisClaim.claims.map((claim, index) => (\n            <section className=\"flex flex-col px-2 pt-3\" key={index + claim.id}>\n              <div className=\"text-gray-700 italic font-bold\">\n                Claim Comment (level {index + 1})\n              </div>\n              {/* CLAIM COMMENT ==>> LEVEL 1 ==================================================== */}\n              <div className=\"flex flex-col items-start gap-2 mt-1 border rounded px-4 py-1 bg-gray-50\">\n                <div className=\"flex items-center gap-2 bg-blue-100 rounded py-1 px-2\">\n                  <MdInfoOutline />\n                  {getReasonById(props.thisClaim.default_claim_resaons)\n                    ? getReasonById(props.thisClaim.default_claim_resaons)!\n                        .reason\n                    : \"\"}\n                </div>\n                <p>{claim.reason}</p>\n                <span className=\"text-gray-600 text-xs\">\n                  {showDate(claim.createdAt)}\n                  {/* {showDate(claim.createdAt) +\n                    \" at \" +\n                    moment.unix(claim.date_created).format(\"MM/DD/YYYY\")} */}\n                </span>\n              </div>\n              {/* CLAIM COMMENT ==>> LEVEL 1 ==================================================== */}\n\n              {isClaimEvaluated(props.thisClaim, claim.level) && (\n                <section className=\"mt-4\">\n                  <span className=\"text-gray-700 italic font-semibold\">\n                    Response (level {index + 1})\n                  </span>\n                  <div className=\"border-t-2\">\n                    <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n                      <span className={`italic`}>Status:</span>\n                      <span\n                        className={`font-bold ${\n                          claim.decision_taken_status ===\n                          ClaimDecisionStatus.REJECTED\n                            ? \"text-yellow-900\"\n                            : \"text-blue-600\"\n                        } rounded px-3 py-1`}\n                      >\n                        {capitalizeFirstLetter(\n                          claim.decision_taken_status.toLocaleLowerCase()\n                        )}\n                      </span>\n                    </div>\n                    <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n                      <span className={`italic`}>Evaluated by:</span>\n                      <span className=\"font-semibold\">\n                        {claim.evaluater.name}\n                      </span>\n                    </div>\n                    <div className=\"flex items-start gap-2 text-sm text-gray-600\">\n                      <span className={`italic`}>Reason:</span>\n                      <span className=\"font-normal\">\n                        {claim.evaluation_comment}\n                      </span>\n                    </div>\n                  </div>\n                </section>\n              )}\n            </section>\n          ))}\n        {/* END CLAIM LEVEL 1 DETAILS ==================================================== */}\n      </div>\n\n      {/* FOOTER INITIAL ========================================== */}\n      {!actionTaken && (\n        <section className=\"flex items-center justify-between\">\n          {/* SHOWING STATUS ===================================== */}\n          <div className=\"mx-4 mb-5 mt-3\">\n            <span\n              className={`${\n                props.thisClaim.last_claim_status === ClaimStatus.PENDING\n                  ? \"text-yellow-700\"\n                  : props.thisClaim.last_claim_status === ClaimStatus.DELETED\n                  ? \"text-red-700\"\n                  : \"text-green-700\"\n              } italic font-semibold`}\n            >\n              {capitalizeFirstLetter(\n                props.thisClaim.last_claim_status.toLocaleLowerCase()\n              )}\n            </span>\n          </div>\n\n          {props.thisClaim.last_claim_status === ClaimStatus.PENDING && (\n            <div className=\"flex items-center gap-2 px-2\">\n              <button\n                className={`px-4 py-2 font-semibold text-red-50 rounded inline-flex items-center space-x-2 focus:outline-none bg-red-700 hover:bg-red-800`}\n                onClick={() => {\n                  setActionTaken(ClaimDecisionStatus.REJECTED);\n                }}\n              >\n                <MdCancel className=\"w-5 h-5\" />\n                <span>Reject</span>\n              </button>\n              <button\n                className={`px-4 py-2 font-semibold text-blue-50 rounded inline-flex items-center space-x-2 focus:outline-none bg-blue-700 hover:bg-blue-800`}\n                onClick={() => {\n                  setActionTaken(ClaimDecisionStatus.ACCEPTED);\n                }}\n              >\n                <FaRegCheckCircle className=\"w-5 h-5\" />\n                <span>Accept</span>\n              </button>\n            </div>\n          )}\n        </section>\n      )}\n      {/* END FOOTER INITIAL ========================================== */}\n\n      {/* ======================================================== */}\n      {/* FOOTER RESPONSE ========================================== */}\n      {actionTaken && (\n        <section className=\"my-5 overflow-x-auto\">\n          <div className=\"italic text-gray-700 text-base my-1 mx-2\">\n            Selected decision:{\" \"}\n            <span\n              className={`font-semibold text-lg ${\n                actionTaken === ClaimDecisionStatus.ACCEPTED\n                  ? \"text-blue-700\"\n                  : \"text-yellow-800\"\n              }`}\n            >\n              {actionTaken === ClaimDecisionStatus.ACCEPTED\n                ? \"Approved\"\n                : \"Rejected\"}\n            </span>\n          </div>\n          {/* right part */}\n          <div className=\"flex flex-col md:flex-row items-end md:items-start gap-1 w-full\">\n            <div className=\"w-full px-2\">\n              <textarea\n                placeholder={`Reason of your decision...`}\n                cols={50}\n                rows={3}\n                className={`border border-${\n                  formError && formError.element === \"comment\" ? \"red\" : \"gray\"\n                }-400 rounded px-3 py-1 w-full focus:outline-none`}\n                style={{ resize: \"none\" }}\n                value={responseMsg}\n                onChange={(e) => {\n                  setResponseMsg(e.target.value);\n                  setFormError(null);\n                }}\n                disabled={loadingRequest}\n              ></textarea>\n              {formError && formError.element === \"comment\" && (\n                <p className=\"text-red-800\">{formError.msg}</p>\n              )}\n            </div>\n            <div className=\"flex flex-row md:flex-col gap-1 max-w-full px-2\">\n              <button\n                className=\"bg-gray-700 hover:bg-gray-800 px-4 py-2 font-semibold rounded text-white inline-flex items-center space-x-2 focus:outline-none\"\n                onClick={() => {\n                  setResponseMsg(\"\");\n                  setActionTaken(null);\n                  setFormError(null);\n                }}\n                disabled={loadingRequest}\n              >\n                <RiArrowGoBackFill className=\"w-5 h-5\" />\n                <span>Back</span>\n              </button>\n              <button\n                className=\"bg-blue-700 hover:bg-blue-800 px-4 py-2 font-semibold rounded text-white inline-flex items-center space-x-2 focus:outline-none\"\n                disabled={loadingRequest}\n                onClick={() =>\n                  window.confirm(\n                    `Are you sure you want to ${\n                      actionTaken === ClaimDecisionStatus.ACCEPTED\n                        ? \"approve\"\n                        : \"rejected\"\n                    } this document?`\n                  ) && handleVerify()\n                }\n              >\n                {loadingRequest ? (\n                  <div className=\"\">Loading...</div>\n                ) : (\n                  <div className=\"inline-flex items-center space-x-2 gap-1\">\n                    <FaRegCheckCircle className=\"w-5 h-5\" />\n                    <span>Confirm</span>\n                  </div>\n                )}\n              </button>\n            </div>\n          </div>\n          {/* end right part */}\n        </section>\n      )}\n      {/* END FOOTER RESPONSE ========================================== */}\n    </section>\n  );\n};\n\nconst mapStateToProps = ({\n  auth,\n}: StoreState): {\n  auth: Auth;\n} => {\n  return {\n    auth: auth,\n  };\n};\n\nexport default connect(mapStateToProps, {\n  evaluateClaim,\n  reAssessApplication,\n  PushPopupAlert,\n})(AdminClaimAppView);\n","import axios from \"axios\";\nimport React, { useEffect, useState } from \"react\";\nimport { FaRegCheckCircle } from \"react-icons/fa\";\nimport { ImRadioChecked, ImRadioUnchecked, ImInfo } from \"react-icons/im\";\nimport { MdCancel, MdInfoOutline, MdSwapHoriz } from \"react-icons/md\";\nimport { RiArrowGoBackFill } from \"react-icons/ri\";\nimport { connect } from \"react-redux\";\nimport {\n  Auth,\n  loadQuestionTypes,\n  PushPopupAlert,\n  questionTypesStoreInterface,\n} from \"../../../actions\";\nimport { evaluateClaim } from \"../../../actions/claiming\";\nimport Loading from \"../../../components/Loading/Loading\";\nimport {\n  CalculatedMultipleChoiceInterface,\n  CandidateClaimInterface,\n  ClaimDecisionStatus,\n  ClaimExamResultsDetails,\n  ClaimGetUserAnswers,\n  claimReasonInterface,\n  ClaimStatus,\n  ClaimTypesInterfaceAPI,\n  course,\n  matchingAnswerInterface,\n  multipleChoiceAnswerInterface,\n  questionTypeElementsType,\n} from \"../../../interfaces\";\nimport { PopupAlertTheme } from \"../../../interfaces/popupAlert\";\nimport { StoreState } from \"../../../reducers\";\nimport {\n  capitalizeFirstLetter,\n  isEmptyOrSpaces,\n} from \"../../../shared/dataTest\";\nimport { API } from \"../../../utils/api\";\nimport { errorToText } from \"../../../utils/errors\";\nimport { showDate } from \"../../../utils/functions\";\nimport { findQuestionType } from \"../../DoExam/utils/utils\";\nimport { isClaimEvaluated } from \"../ClaimDocView\";\n\nenum viewTabs {\n  profile = \"Applicant Profile\",\n  exam = \"Exam Details\",\n}\n\ntype AdminClaimExamViewProps = {\n  thisExamSheet: ClaimExamResultsDetails;\n  thisExam: course;\n  thisClaim: CandidateClaimInterface;\n  claimTypes: ClaimTypesInterfaceAPI[];\n  claimReasons: claimReasonInterface[] | null;\n\n  // REDUX ==================\n  auth: Auth;\n  questionTypes: questionTypesStoreInterface;\n  evaluateClaim: Function;\n  loadQuestionTypes: (callback: (loading: boolean) => void) => void;\n  PushPopupAlert: Function;\n};\n\nconst AdminClaimExamView: React.FC<AdminClaimExamViewProps> = (props) => {\n  const [loadingRequest, setLoadingRequest] = useState<boolean>(false);\n  const [loading, setLoading] = useState(true);\n  const [actionTaken, setActionTaken] = useState<ClaimDecisionStatus | null>(\n    null\n  );\n  const [formError, setFormError] = useState<{\n    element: string;\n    msg: string;\n  } | null>(null);\n  const [responseMsg, setResponseMsg] = useState<string>(\"\");\n  const [marks, setMarks] = useState<number>(0);\n  const [selectedTab, setSelectedTab] = useState<viewTabs>(viewTabs.profile);\n\n  useEffect(() => {\n    if (\n      props.questionTypes.questionTypes === null ||\n      (props.questionTypes.questionTypes.length === 0 && loading)\n    ) {\n      props.loadQuestionTypes(setLoading);\n    } else if (loading) {\n      setLoading(false);\n    }\n  }, [loading, props]);\n\n  if (loading || props.questionTypes.questionTypes === null) {\n    return <Loading />;\n  }\n\n  const handleVerify = async () => {\n    if (!actionTaken) {\n      setFormError({\n        element: \"action\",\n        msg: \"Action is required!\",\n      });\n      return setLoadingRequest(false);\n    }\n\n    if (\n      actionTaken === ClaimDecisionStatus.ACCEPTED &&\n      (marks <= 0 || marks > 100)\n    ) {\n      setFormError({\n        element: \"marks\",\n        msg: \"Invalid marks, marks must be between 1 and 10\",\n      });\n\n      return setLoadingRequest(false);\n    }\n\n    if (isEmptyOrSpaces(responseMsg)) {\n      setFormError({\n        element: \"comment\",\n        msg: \"Reason of rejection is required\",\n      });\n      return setLoadingRequest(false);\n    }\n\n    let subClaim = props.thisClaim.claims.find(\n      (item) => item.level === props.thisClaim.claim_level\n    );\n\n    if (subClaim) {\n      setLoadingRequest(true);\n      const api_body: {\n        sub_claim_id: string;\n        evaluation_comment: string;\n        evaluated_by: string;\n        evaluator_name: string;\n        evaluator_email: string;\n        decision_taken_status: ClaimDecisionStatus;\n      } = {\n        sub_claim_id: subClaim.id,\n        evaluation_comment: responseMsg,\n        evaluated_by: props.auth.user.user_id,\n        decision_taken_status: actionTaken,\n        evaluator_name: props.auth.user.fname + \" \" + props.auth.user.lname,\n        evaluator_email: props.auth.user.email,\n      };\n\n      try {\n        const res = await axios.put<CandidateClaimInterface>(\n          `${API.CLAIMING}/user/evaluate/${props.thisClaim._id}`,\n          api_body\n        );\n        if (res) {\n          console.log({ evaluate_claim_res: res });\n          props.evaluateClaim(res.data);\n          // REVALIDATED DOCUMENT IF IT IS APPROVED =========================\n          if (actionTaken === ClaimDecisionStatus.ACCEPTED) {\n            await handleMarksAddition();\n          }\n          props.PushPopupAlert({\n            title: `Claim responded successfully!`,\n            theme: PopupAlertTheme.success,\n          });\n          // setDocumentId(\"null\");\n          setResponseMsg(\"\");\n          setActionTaken(null);\n        }\n      } catch (error) {\n        console.error(error);\n        props.PushPopupAlert({\n          title: errorToText(error),\n          theme: PopupAlertTheme.danger,\n        });\n      }\n      setLoadingRequest(false);\n    }\n  };\n\n  const handleMarksAddition = async () => {\n    try {\n      await axios.put(`${API.DO_EXAM}/answersheet/user/marks/update`, {\n        answer_sheet_id: props.thisClaim.claiming_on_id,\n        marks: marks,\n      });\n    } catch (error) {\n      console.error(error);\n      props.PushPopupAlert({\n        title: errorToText(error),\n        theme: PopupAlertTheme.danger,\n      });\n    }\n  };\n\n  const getReasonById = (\n    reason_id: string\n  ): claimReasonInterface | undefined => {\n    if (props.claimReasons) {\n      return props.claimReasons.find((item) => item.id === reason_id);\n    }\n    return undefined;\n  };\n\n  const getAnswersByQuestion = (question_id: string): ClaimGetUserAnswers[] => {\n    return props.thisExamSheet.user_answers.filter(\n      (item) => item.question === question_id\n    );\n  };\n\n  return (\n    <section className=\"\">\n      {/* #################### VIEW TABS ################################## */}\n      <div className=\"flex flex-row items-center mx-4\">\n        {Object.values(viewTabs).map((item, i) => (\n          <div\n            key={i}\n            onClick={() => setSelectedTab(item)}\n            className={`animate__animated ${\n              selectedTab === item\n                ? \"bg-blue-100 border-blue-600 text-blue-600 animate__zoomIn\"\n                : \"bg-white border-white text-gray-600\"\n            } hover:bg-blue-100 px-4 py-2 cursor-pointer font-bold border-b-4 hover:border-blue-600 hover:text-blue-600 rounded-t mt-1 mr-1`}\n          >\n            {item}\n          </div>\n        ))}\n      </div>\n      {/* #################### END VIEW TABS ################################## */}\n      <div className=\"w-full bg-white px-4 py-1 divide-y-2 space-y-2\">\n        {/* DOCUMENT DETAILS ==================================================== */}\n        <section className=\"flex flex-col\">\n          {/* DISPLAY POSITION ==================================================== */}\n          {selectedTab === viewTabs.exam && (\n            <section className=\"w-full my-1 animate__animated animate__fadeIn rounded\">\n              <div className=\"bg-white w-full rounded p-2 mb-2\">\n                <div className=\"text-gray-800 text-2xl font-bold my-2\">\n                  Questions\n                </div>\n                {props.thisExamSheet.questions.map((item, index) => (\n                  <div\n                    key={index + item.id}\n                    className=\"rounded border my-2 p-1 shadow divide-y\"\n                  >\n                    {/* SINGLE & MULTIPLE && TRUE+FALSE QUESTIONS ===================================== */}\n                    {findQuestionType(\n                      item.type,\n                      props.questionTypes.questionTypes\n                    ) &&\n                      (findQuestionType(\n                        item.type,\n                        props.questionTypes.questionTypes\n                      )! === questionTypeElementsType.MultipleChoice ||\n                        findQuestionType(\n                          item.type,\n                          props.questionTypes.questionTypes\n                        )! === questionTypeElementsType.SingleMultiple ||\n                        findQuestionType(\n                          item.type,\n                          props.questionTypes.questionTypes\n                        )! === questionTypeElementsType.TrueFalse) && (\n                        <div className=\"flex flex-col gap-1 px-2 text-base text-gray-600\">\n                          <span className={`font-semibold`}>\n                            {item.question[0].title}:\n                          </span>\n                          <span className=\"\">\n                            {item.question[0].description}\n                          </span>\n                          <div className=\"grid grid-cols-2 gap-4 mt-2 mb-1 pt-2 divide-x border bg-gray-50\">\n                            <div className=\"px-4\">\n                              <p className=\"text-md font-medium\">\n                                Expected answer :\n                              </p>\n                              <ul className=\"text-sm w-full my-2\">\n                                {item.question[0].answer.map(\n                                  (\n                                    question: multipleChoiceAnswerInterface,\n                                    index\n                                  ) => (\n                                    <li\n                                      className={`mb-1 flex items-center`}\n                                      key={index + question.id}\n                                    >\n                                      {question.status ? (\n                                        <ImRadioChecked className=\"h-6 w-6 mr-2\" />\n                                      ) : (\n                                        <ImRadioUnchecked className=\"h-6 w-6 mr-2\" />\n                                      )}\n                                      {question.value}\n                                    </li>\n                                  )\n                                )}\n                              </ul>\n                            </div>\n\n                            <div className=\"px-4\">\n                              <p className=\"text-md font-medium\">\n                                Given answers :\n                              </p>\n                              <ul className=\"text-sm w-full my-2\">\n                                {getAnswersByQuestion(item.question_id).length >\n                                0 ? (\n                                  getAnswersByQuestion(\n                                    item.question_id\n                                  )[0].answer.map(\n                                    (\n                                      answer: multipleChoiceAnswerInterface,\n                                      indexAnswer\n                                    ) => (\n                                      <li\n                                        className=\"mb-3 flex items-center\"\n                                        key={indexAnswer}\n                                      >\n                                        {answer.status ? (\n                                          <ImRadioChecked className=\"h-6 w-6 mr-2\" />\n                                        ) : (\n                                          <ImRadioUnchecked className=\"h-6 w-6 mr-2\" />\n                                        )}\n                                        {answer.value}\n                                      </li>\n                                    )\n                                  )\n                                ) : (\n                                  <li className=\"mb-3 flex items-center\">\n                                    <ImInfo className=\"h-6 w-6 mr-2\" />\n                                    No Answer provided\n                                  </li>\n                                )}\n                              </ul>\n                            </div>\n                          </div>\n                          <div className=\"flex items-center px-4 mb-2\">\n                            <p className=\"text-md font-medium\">Marks :</p>\n                            <span>\n                              {getAnswersByQuestion(item.question_id) &&\n                              getAnswersByQuestion(item.question_id).length > 0\n                                ? getAnswersByQuestion(item.question_id)[0]\n                                    .user_marks\n                                : \"\"}\n                            </span>\n                          </div>\n                        </div>\n                      )}\n\n                    {/* Simple Calculate QUESTIONS ===================================== */}\n                    {findQuestionType(\n                      item.type,\n                      props.questionTypes.questionTypes\n                    ) &&\n                      findQuestionType(\n                        item.type,\n                        props.questionTypes.questionTypes\n                      )! === questionTypeElementsType.SimpleCalculate && (\n                        <div className=\"flex flex-col gap-1 px-2 text-base text-gray-600\">\n                          <span className={`font-semibold`}>\n                            {item.question[0].title}:\n                          </span>\n                          <span className=\"\">\n                            {item.question[0].description}\n                          </span>\n                          <div className=\"mt-2 mb-1 py-1 divide-x border bg-gray-50\">\n                            <div className=\"px-4 flex items-center gap-2\">\n                              <p className=\"text-md font-medium\">\n                                Expected answer :\n                              </p>\n                              <span>\n                                Between {item.question[0].answer[0].value[0]} +\n                                \" and \"+{item.question[0].answer[0].value[1]}\n                              </span>\n                            </div>\n\n                            <div className=\"px-4 flex items-center gap-2\">\n                              <p className=\"text-md font-medium\">\n                                Given answers :\n                              </p>\n                              {getAnswersByQuestion(item.question_id).length >\n                              0 ? (\n                                getAnswersByQuestion(\n                                  item.question_id\n                                )[0].answer.map(\n                                  (\n                                    answer: multipleChoiceAnswerInterface,\n                                    indexAnswer\n                                  ) => (\n                                    <span key={indexAnswer}>\n                                      {answer.value}\n                                    </span>\n                                  )\n                                )\n                              ) : (\n                                <span>No Answer provided</span>\n                              )}\n                            </div>\n                          </div>\n                          <div className=\"flex items-center px-4 mb-2\">\n                            <p className=\"text-md font-medium\">Marks :</p>\n                            <span>\n                              {getAnswersByQuestion(item.question_id) &&\n                              getAnswersByQuestion(item.question_id).length > 0\n                                ? getAnswersByQuestion(item.question_id)[0]\n                                    .user_marks\n                                : \"\"}\n                            </span>\n                          </div>\n                        </div>\n                      )}\n\n                    {/* MATCHING QUESTIONS ===================================== */}\n                    {findQuestionType(\n                      item.type,\n                      props.questionTypes.questionTypes\n                    ) &&\n                      findQuestionType(\n                        item.type,\n                        props.questionTypes.questionTypes\n                      )! === questionTypeElementsType.Matching && (\n                        <div className=\"flex flex-col gap-1 px-2 text-base text-gray-600\">\n                          <span className={`font-semibold`}>\n                            {item.question[0].title}:\n                          </span>\n                          <span className=\"\">\n                            {item.question[0].description}\n                          </span>\n                          <div className=\"mt-2 mb-1 py-1 divide-x border bg-gray-50\">\n                            <div className=\"grid grid-cols-2 gap-4 mt-2 mb-1 pt-2 divide-x border bg-gray-50\">\n                              <div className=\"px-4\">\n                                <p className=\"text-md font-medium\">\n                                  Expected answer :\n                                </p>\n                                <ul className=\"text-sm w-full my-2\">\n                                  {item.question[0].answer.map(\n                                    (\n                                      question: matchingAnswerInterface,\n                                      index\n                                    ) => (\n                                      <li\n                                        className={`mb-1 flex items-center gap-2 text-lg`}\n                                        key={index + question.id}\n                                      >\n                                        {question.value}\n                                        <MdSwapHoriz className=\"\" />\n                                        {question.status}\n                                      </li>\n                                    )\n                                  )}\n                                </ul>\n                              </div>\n\n                              <div className=\"px-4\">\n                                <p className=\"text-md font-medium\">\n                                  Given answers :\n                                </p>\n                                <ul className=\"text-sm w-full my-2\">\n                                  {getAnswersByQuestion(item.question_id)\n                                    .length > 0 ? (\n                                    getAnswersByQuestion(\n                                      item.question_id\n                                    )[0].answer.map(\n                                      (\n                                        answer: multipleChoiceAnswerInterface,\n                                        indexAnswer\n                                      ) => (\n                                        <li\n                                          className=\"mb-3 flex items-center\"\n                                          key={indexAnswer}\n                                        >\n                                          {answer.status ? (\n                                            <ImRadioChecked className=\"h-6 w-6 mr-2\" />\n                                          ) : (\n                                            <ImRadioUnchecked className=\"h-6 w-6 mr-2\" />\n                                          )}\n                                          {answer.value}\n                                        </li>\n                                      )\n                                    )\n                                  ) : (\n                                    <li className=\"mb-3 flex items-center\">\n                                      <ImInfo className=\"h-6 w-6 mr-2\" />\n                                      No Answer provided\n                                    </li>\n                                  )}\n                                </ul>\n                              </div>\n                            </div>\n                            <div className=\"flex items-center px-4 mb-2\">\n                              <p className=\"text-md font-medium\">Marks :</p>\n                              <span>\n                                {getAnswersByQuestion(item.question_id) &&\n                                getAnswersByQuestion(item.question_id).length >\n                                  0\n                                  ? getAnswersByQuestion(item.question_id)[0]\n                                      .user_marks\n                                  : \"\"}\n                              </span>\n                            </div>\n                          </div>\n                        </div>\n                      )}\n\n                    {/* Short Answer QUESTIONS ===================================== */}\n                    {findQuestionType(\n                      item.type,\n                      props.questionTypes.questionTypes\n                    ) &&\n                      findQuestionType(\n                        item.type,\n                        props.questionTypes.questionTypes\n                      )! === questionTypeElementsType.ShortAnswer && (\n                        <div className=\"flex flex-col gap-1 px-2 text-base text-gray-600\">\n                          <span className={`font-semibold`}>\n                            {item.question[0].title}:\n                          </span>\n                          <span className=\"\">\n                            {item.question[0].description}\n                          </span>\n\n                          <div className=\"mt-2 mb-1 py-1 divide-x border bg-gray-50\">\n                            <div className=\"px-4 flex items-center gap-2\">\n                              <p className=\"text-md font-medium\">\n                                Expected answer :\n                              </p>\n                              <span>\n                                {capitalizeFirstLetter(\n                                  item.question[0].answer[0].value\n                                )}\n                              </span>\n                            </div>\n\n                            <div className=\"px-4 flex items-center gap-2\">\n                              <p className=\"text-md font-medium\">\n                                Given answers :\n                              </p>\n                              {getAnswersByQuestion(item.question_id).length >\n                              0 ? (\n                                getAnswersByQuestion(\n                                  item.question_id\n                                )[0].answer.map(\n                                  (\n                                    answer: multipleChoiceAnswerInterface,\n                                    indexAnswer\n                                  ) => (\n                                    <span key={indexAnswer}>\n                                      {answer.value}\n                                    </span>\n                                  )\n                                )\n                              ) : (\n                                <span>No Answer provided</span>\n                              )}\n                            </div>\n                          </div>\n                          <div className=\"flex items-center px-4 mb-2\">\n                            <p className=\"text-md font-medium\">Marks :</p>\n                            <span>\n                              {getAnswersByQuestion(item.question_id) &&\n                              getAnswersByQuestion(item.question_id).length > 0\n                                ? getAnswersByQuestion(item.question_id)[0]\n                                    .user_marks\n                                : \"\"}\n                            </span>\n                          </div>\n                        </div>\n                      )}\n\n                    {/* Numeric QUESTIONS ===================================== */}\n                    {findQuestionType(\n                      item.type,\n                      props.questionTypes.questionTypes\n                    ) &&\n                      findQuestionType(\n                        item.type,\n                        props.questionTypes.questionTypes\n                      )! === questionTypeElementsType.Numeric && (\n                        <div className=\"flex flex-col gap-1 px-2 text-base text-gray-600\">\n                          <span className={`font-semibold`}>\n                            {item.question[0].title}:\n                          </span>\n                          <span className=\"\">\n                            {item.question[0].description}\n                          </span>\n                          <div className=\"mt-2 mb-1 py-1 divide-x border bg-gray-50\">\n                            <div className=\"px-4 flex items-center gap-2\">\n                              <p className=\"text-md font-medium\">\n                                Expected answer :\n                              </p>\n                              <span>{item.question[0].answer[0].value[0]}</span>\n                            </div>\n\n                            <div className=\"px-4 flex items-center gap-2\">\n                              <p className=\"text-md font-medium\">\n                                Given answers :\n                              </p>\n                              {getAnswersByQuestion(item.question_id).length >\n                              0 ? (\n                                getAnswersByQuestion(\n                                  item.question_id\n                                )[0].answer.map(\n                                  (\n                                    answer: multipleChoiceAnswerInterface,\n                                    indexAnswer\n                                  ) => (\n                                    <span key={indexAnswer}>\n                                      {answer.value}\n                                    </span>\n                                  )\n                                )\n                              ) : (\n                                <span>No Answer provided</span>\n                              )}\n                            </div>\n                          </div>\n                          <div className=\"flex items-center px-4 mb-2\">\n                            <p className=\"text-md font-medium\">Marks :</p>\n                            <span>\n                              {getAnswersByQuestion(item.question_id) &&\n                              getAnswersByQuestion(item.question_id).length > 0\n                                ? getAnswersByQuestion(item.question_id)[0]\n                                    .user_marks\n                                : \"\"}\n                            </span>\n                          </div>\n                        </div>\n                      )}\n\n                    {/* Calculated Multiple Choice QUESTIONS ===================================== */}\n                    {findQuestionType(\n                      item.type,\n                      props.questionTypes.questionTypes\n                    ) &&\n                      findQuestionType(\n                        item.type,\n                        props.questionTypes.questionTypes\n                      )! ===\n                        questionTypeElementsType.CalculatedMultipleChoice && (\n                        <div className=\"flex flex-col gap-1 px-2 text-base text-gray-600\">\n                          <span className={`font-semibold`}>\n                            {item.question[0].title}:\n                          </span>\n                          <span className=\"\">\n                            {item.question[0].description}\n                          </span>\n                          <div className=\"grid grid-cols-2 gap-4 mt-2 mb-1 pt-2 divide-x border bg-gray-50\">\n                            <div className=\"px-4\">\n                              <p className=\"text-md font-medium\">\n                                Expected answer :\n                              </p>\n                              <ul className=\"text-sm w-full my-2\">\n                                {item.question[0].answer.map(\n                                  (\n                                    question: CalculatedMultipleChoiceInterface,\n                                    index\n                                  ) => (\n                                    <li\n                                      className={`mb-1 flex items-center`}\n                                      key={index + question.id}\n                                    >\n                                      {question.status ? (\n                                        <ImRadioChecked className=\"h-6 w-6 mr-2\" />\n                                      ) : (\n                                        <ImRadioUnchecked className=\"h-6 w-6 mr-2\" />\n                                      )}\n                                      {question.value}\n                                    </li>\n                                  )\n                                )}\n                              </ul>\n                            </div>\n\n                            <div className=\"px-4\">\n                              <p className=\"text-md font-medium\">\n                                Given answers :\n                              </p>\n                              <ul className=\"text-sm w-full my-2\">\n                                {getAnswersByQuestion(item.question_id).length >\n                                0 ? (\n                                  getAnswersByQuestion(\n                                    item.question_id\n                                  )[0].answer.map(\n                                    (\n                                      answer: multipleChoiceAnswerInterface,\n                                      indexAnswer\n                                    ) => (\n                                      <li\n                                        className=\"mb-3 flex items-center\"\n                                        key={indexAnswer}\n                                      >\n                                        {answer.status ? (\n                                          <ImRadioChecked className=\"h-6 w-6 mr-2\" />\n                                        ) : (\n                                          <ImRadioUnchecked className=\"h-6 w-6 mr-2\" />\n                                        )}\n                                        {answer.value}\n                                      </li>\n                                    )\n                                  )\n                                ) : (\n                                  <li className=\"mb-3 flex items-center\">\n                                    <ImInfo className=\"h-6 w-6 mr-2\" />\n                                    No Answer provided\n                                  </li>\n                                )}\n                              </ul>\n                            </div>\n                          </div>\n                          <div className=\"flex items-center px-4 mb-2\">\n                            <p className=\"text-md font-medium\">Marks :</p>\n                            <span>\n                              {getAnswersByQuestion(item.question_id) &&\n                              getAnswersByQuestion(item.question_id).length > 0\n                                ? getAnswersByQuestion(item.question_id)[0]\n                                    .user_marks\n                                : \"\"}\n                            </span>\n                          </div>\n                        </div>\n                      )}\n                  </div>\n                ))}\n              </div>\n            </section>\n          )}\n          {/* END DISPLAY POSITION ==================================================== */}\n          {/* -------------------------------------------------------------------------------- */}\n          {/* DISPLAY PROFILE ==================================================== */}\n          {selectedTab === viewTabs.profile && (\n            <section className=\"w-full my-2 animate__animated animate__fadeIn rounded\">\n              <div className=\"flex items-center justify-between\">\n                <div className=\"flex items-center gap-2\">\n                  <span className={`italic text-gray-600`}>Names:</span>\n                  <span className=\"text-gray-800 font-bold text-xl\">\n                    {props.thisClaim.userDetails.user_info.fname +\n                      \" \" +\n                      props.thisClaim.userDetails.user_info.lname}\n                  </span>\n                </div>\n              </div>\n            </section>\n          )}\n          {/* END DISPLAY PROFILE ==================================================== */}\n          {selectedTab === viewTabs.profile && (\n            <div className=\"\">\n              <div className=\"flex items-center gap-2\">\n                <span className={`italic text-gray-600`}>Email:</span>\n                <span className=\"text-gray-800 font-bold text-lg\">\n                  {props.thisClaim.userDetails.email}\n                </span>\n              </div>\n              <div className=\"flex items-center gap-2\">\n                <span className={`italic text-gray-600`}>Phone:</span>\n                <span className=\"text-gray-800 font-bold text-lg\">\n                  {props.thisClaim.userDetails.phone_number}\n                </span>\n              </div>\n              <div className=\"flex items-center gap-2\">\n                <span className={`italic text-gray-600`}>Gender:</span>\n                <span className=\"text-gray-800 font-bold text-lg\">\n                  {props.thisClaim.userDetails.user_info.sex === \"M\"\n                    ? \"Male\"\n                    : \"Female\"}\n                </span>\n              </div>\n            </div>\n          )}\n        </section>\n        {/* END DOCUMENT DETAILS ==================================================== */}\n\n        {/* ################################################################################ */}\n\n        {/* CLAIM LEVEL 1 DETAILS ==================================================== */}\n        {props.thisClaim.claims.length > 0 &&\n          props.thisClaim.claims.map((claim, index) => (\n            <section className=\"flex flex-col px-2 pt-3\" key={index + claim.id}>\n              <div className=\"text-gray-700 italic font-bold\">\n                Claim Comment (level {index + 1})\n              </div>\n              {/* CLAIM COMMENT ==>> LEVEL 1 ==================================================== */}\n              <div className=\"flex flex-col items-start gap-2 mt-1 border rounded px-2 py-1 bg-gray-50\">\n                <div className=\"flex items-center gap-2 bg-blue-100 rounded py-1 px-2\">\n                  <MdInfoOutline />\n                  {getReasonById(props.thisClaim.default_claim_resaons)\n                    ? getReasonById(props.thisClaim.default_claim_resaons)!\n                        .reason\n                    : \"\"}\n                </div>\n                <p>{claim.reason}</p>\n                <span className=\"text-gray-600 text-xs\">\n                  {showDate(claim.createdAt)}\n                  {/* {showDate(claim.createdAt) +\n                    \" at \" +\n                    moment.unix(claim.date_created).format(\"MM/DD/YYYY\")} */}\n                </span>\n              </div>\n              {/* CLAIM COMMENT ==>> LEVEL 1 ==================================================== */}\n\n              {isClaimEvaluated(props.thisClaim, claim.level) && (\n                <section className=\"mt-4\">\n                  <span className=\"text-gray-700 italic font-semibold\">\n                    Response (level {index + 1})\n                  </span>\n                  <div className=\"border-t-2\">\n                    <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n                      <span className={`italic`}>Status:</span>\n                      <span\n                        className={`font-bold ${\n                          claim.decision_taken_status ===\n                          ClaimDecisionStatus.REJECTED\n                            ? \"text-yellow-900\"\n                            : \"text-blue-600\"\n                        } rounded px-3 py-1`}\n                      >\n                        {capitalizeFirstLetter(\n                          claim.decision_taken_status.toLocaleLowerCase()\n                        )}\n                      </span>\n                    </div>\n                    <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n                      <span className={`italic`}>Evaluated by:</span>\n                      <span className=\"font-semibold\">\n                        {claim.evaluater.name}\n                      </span>\n                    </div>\n                    <div className=\"flex items-start gap-2 text-sm text-gray-600\">\n                      <span className={`italic`}>Reason:</span>\n                      <span className=\"font-normal\">\n                        {claim.evaluation_comment}\n                      </span>\n                    </div>\n                  </div>\n                </section>\n              )}\n            </section>\n          ))}\n        {/* END CLAIM LEVEL 1 DETAILS ==================================================== */}\n      </div>\n\n      {/* FOOTER INITIAL ========================================== */}\n      {!actionTaken && (\n        <section className=\"flex items-center justify-between\">\n          {/* SHOWING STATUS ===================================== */}\n          <div className=\"mx-4 mb-5 mt-3\">\n            <span\n              className={`${\n                props.thisClaim.last_claim_status === ClaimStatus.PENDING\n                  ? \"text-yellow-700\"\n                  : props.thisClaim.last_claim_status === ClaimStatus.DELETED\n                  ? \"text-red-700\"\n                  : \"text-green-700\"\n              } italic font-semibold`}\n            >\n              {capitalizeFirstLetter(\n                props.thisClaim.last_claim_status.toLocaleLowerCase()\n              )}\n            </span>\n          </div>\n\n          {props.thisClaim.last_claim_status === ClaimStatus.PENDING && (\n            <div className=\"flex items-center gap-2 px-2\">\n              <button\n                className={`px-4 py-2 font-semibold text-red-50 rounded inline-flex items-center space-x-2 focus:outline-none bg-red-700 hover:bg-red-800`}\n                onClick={() => {\n                  setActionTaken(ClaimDecisionStatus.REJECTED);\n                }}\n              >\n                <MdCancel className=\"w-5 h-5\" />\n                <span>Reject</span>\n              </button>\n              <button\n                className={`px-4 py-2 font-semibold text-blue-50 rounded inline-flex items-center space-x-2 focus:outline-none bg-blue-700 hover:bg-blue-800`}\n                onClick={() => {\n                  setActionTaken(ClaimDecisionStatus.ACCEPTED);\n                }}\n              >\n                <FaRegCheckCircle className=\"w-5 h-5\" />\n                <span>Accept</span>\n              </button>\n            </div>\n          )}\n        </section>\n      )}\n      {/* END FOOTER INITIAL ========================================== */}\n\n      {/* ======================================================== */}\n      {/* FOOTER RESPONSE ========================================== */}\n      {actionTaken && (\n        <section className=\"my-5 overflow-x-auto\">\n          <div className=\"italic text-gray-700 text-base my-1 mx-2\">\n            Selected decision:{\" \"}\n            <span\n              className={`font-semibold text-lg ${\n                actionTaken === ClaimDecisionStatus.ACCEPTED\n                  ? \"text-blue-700\"\n                  : \"text-yellow-800\"\n              }`}\n            >\n              {actionTaken === ClaimDecisionStatus.ACCEPTED\n                ? \"Approved\"\n                : \"Rejected\"}\n            </span>\n          </div>\n          {/* right part */}\n          <div className=\"flex flex-col md:flex-row items-end md:items-start gap-1 w-full\">\n            <div className=\"w-full space-y-1\">\n              {actionTaken === ClaimDecisionStatus.ACCEPTED && (\n                <div className=\"flex items-center justify-end w-full gap-2\">\n                  <span className=\"font-semibold\">Addition marks</span>\n                  <div className=\"px-2\">\n                    <input\n                      placeholder={`Addition marks`}\n                      className={`border border-${\n                        formError && formError.element === \"marks\"\n                          ? \"red\"\n                          : \"gray\"\n                      }-400 rounded px-3 py-1 w-auto focus:outline-none`}\n                      value={marks}\n                      onChange={(e) => {\n                        setMarks(Number(e.target.value));\n                        setFormError(null);\n                      }}\n                      disabled={loadingRequest}\n                    />\n                    {formError && formError.element === \"marks\" && (\n                      <p className=\"text-red-800\">{formError.msg}</p>\n                    )}\n                  </div>\n                </div>\n              )}\n              <div className=\"w-full px-2\">\n                <textarea\n                  placeholder={`Reason of your decision...`}\n                  cols={50}\n                  rows={actionTaken === ClaimDecisionStatus.ACCEPTED ? 2 : 3}\n                  className={`border border-${\n                    formError && formError.element === \"comment\"\n                      ? \"red\"\n                      : \"gray\"\n                  }-400 rounded px-3 py-1 w-full focus:outline-none`}\n                  style={{ resize: \"none\" }}\n                  value={responseMsg}\n                  onChange={(e) => {\n                    setResponseMsg(e.target.value);\n                    setFormError(null);\n                  }}\n                  disabled={loadingRequest}\n                ></textarea>\n                {formError && formError.element === \"comment\" && (\n                  <p className=\"text-red-800\">{formError.msg}</p>\n                )}\n              </div>\n            </div>\n            <div className=\"flex flex-row md:flex-col gap-1 max-w-full px-2\">\n              <button\n                className=\"bg-gray-700 hover:bg-gray-800 px-4 py-2 font-semibold rounded text-white inline-flex items-center space-x-2 focus:outline-none\"\n                onClick={() => {\n                  setResponseMsg(\"\");\n                  setActionTaken(null);\n                  setFormError(null);\n                }}\n                disabled={loadingRequest}\n              >\n                <RiArrowGoBackFill className=\"w-5 h-5\" />\n                <span>Back</span>\n              </button>\n              <button\n                className=\"bg-blue-700 hover:bg-blue-800 px-4 py-2 font-semibold rounded text-white inline-flex items-center space-x-2 focus:outline-none\"\n                disabled={loadingRequest}\n                onClick={() =>\n                  window.confirm(\n                    `Are you sure you want to ${\n                      actionTaken === ClaimDecisionStatus.ACCEPTED\n                        ? \"approve\"\n                        : \"rejected\"\n                    } this document?`\n                  ) && handleVerify()\n                }\n              >\n                {loadingRequest ? (\n                  <div className=\"\">Loading...</div>\n                ) : (\n                  <div className=\"inline-flex items-center space-x-2 gap-1\">\n                    <FaRegCheckCircle className=\"w-5 h-5\" />\n                    <span>Confirm</span>\n                  </div>\n                )}\n              </button>\n            </div>\n          </div>\n          {/* end right part */}\n        </section>\n      )}\n      {/* END FOOTER RESPONSE ========================================== */}\n    </section>\n  );\n};\n\nconst mapStateToProps = ({\n  auth,\n  questionTypes,\n}: StoreState): {\n  auth: Auth;\n  questionTypes: questionTypesStoreInterface;\n} => {\n  return {\n    auth,\n    questionTypes,\n  };\n};\n\nexport default connect(mapStateToProps, {\n  loadQuestionTypes,\n  evaluateClaim,\n  PushPopupAlert,\n})(AdminClaimExamView);\n","import axios from \"axios\";\nimport React from \"react\";\nimport { FaRegCheckCircle } from \"react-icons/fa\";\nimport { MdCancel, MdInfoOutline } from \"react-icons/md\";\nimport { RiArrowGoBackFill } from \"react-icons/ri\";\nimport { connect } from \"react-redux\";\nimport { adminDisplayClaimTitle } from \".\";\nimport { Auth, PushPopupAlert } from \"../../../actions\";\nimport { evaluateClaim } from \"../../../actions/claiming\";\nimport { verifyDocument } from \"../../../actions/document\";\nimport { VerifyDocumentInterface } from \"../../../actions/users\";\nimport {\n  CandidateClaimInterface,\n  ClaimDecisionStatus,\n  claimReasonInterface,\n  ClaimStatus,\n  ClaimTypesInterfaceAPI,\n} from \"../../../interfaces\";\nimport { PopupAlertTheme } from \"../../../interfaces/popupAlert\";\nimport { StoreState } from \"../../../reducers\";\nimport { DocumentReducerInterface } from \"../../../reducers/document\";\nimport {\n  capitalizeFirstLetter,\n  isEmptyOrSpaces,\n} from \"../../../shared/dataTest\";\nimport {\n  DocValidationStatusInterface,\n  UserDocumentsInterface,\n} from \"../../../shared/interfaces\";\nimport { API } from \"../../../utils/api\";\nimport { errorToText } from \"../../../utils/errors\";\nimport { showDate, timestampToDate } from \"../../../utils/functions\";\nimport { isClaimEvaluated } from \"../ClaimDocView\";\n\ntype AdminClaimDocViewProps = {\n  thisDoc: UserDocumentsInterface;\n  documentCategories: DocumentReducerInterface;\n  thisClaim: CandidateClaimInterface;\n  claimReasons: claimReasonInterface[] | null;\n  candidateId: string;\n  claimTypes: ClaimTypesInterfaceAPI[];\n  viewImage: boolean;\n  setViewImage: (value: boolean) => void;\n  loadingRequest: boolean;\n  setLoadingRequest: (value: boolean) => void;\n  actionTaken: ClaimDecisionStatus | null;\n  setActionTaken: (value: ClaimDecisionStatus | null) => void;\n  responseMsg: string;\n  setResponseMsg: (value: string) => void;\n  formError: {\n    element: string;\n    msg: string;\n  } | null;\n  setFormError: (\n    value: {\n      element: string;\n      msg: string;\n    } | null\n  ) => void;\n\n  // REDUX ==================\n  auth: Auth;\n  verifyDocument: Function;\n  evaluateClaim: Function;\n  PushPopupAlert: Function;\n};\n\nconst AdminClaimDocView: React.FC<AdminClaimDocViewProps> = (props) => {\n  const handleVerify = async () => {\n    if (!props.actionTaken) {\n      props.setFormError({\n        element: \"action\",\n        msg: \"Action is required!\",\n      });\n      return props.setLoadingRequest(false);\n    }\n\n    if (isEmptyOrSpaces(props.responseMsg)) {\n      props.setFormError({\n        element: \"comment\",\n        msg: \"Reason of rejection is required\",\n      });\n      return props.setLoadingRequest(false);\n    }\n\n    let subClaim = props.thisClaim.claims.find(\n      (item) => item.level === props.thisClaim.claim_level\n    );\n\n    if (subClaim) {\n      props.setLoadingRequest(true);\n      const api_body: {\n        sub_claim_id: string;\n        evaluation_comment: string;\n        evaluated_by: string;\n        evaluator_name: string;\n        evaluator_email: string;\n        decision_taken_status: ClaimDecisionStatus;\n      } = {\n        sub_claim_id: subClaim.id,\n        evaluation_comment: props.responseMsg,\n        evaluated_by: props.auth.user.user_id,\n        decision_taken_status: props.actionTaken,\n        evaluator_name: props.auth.user.fname + \" \" + props.auth.user.lname,\n        evaluator_email: props.auth.user.email,\n      };\n\n      try {\n        const res = await axios.put<CandidateClaimInterface>(\n          `${API.CLAIMING}/user/evaluate/${props.thisClaim._id}`,\n          api_body\n        );\n        if (res) {\n          console.log({ evaluate_claim_res: res });\n          props.evaluateClaim(res.data);\n          // REVALIDATED DOCUMENT IF IT IS APPROVED =========================\n          if (props.actionTaken === ClaimDecisionStatus.ACCEPTED) {\n            await FC_DocValidation();\n          }\n          props.PushPopupAlert({\n            title: `Claim responded successfully!`,\n            theme: PopupAlertTheme.success,\n          });\n          // setDocumentId(\"null\");\n          props.setResponseMsg(\"\");\n          props.setActionTaken(null);\n        }\n      } catch (error) {\n        console.error(error);\n        props.PushPopupAlert({\n          title: errorToText(error),\n          theme: PopupAlertTheme.danger,\n        });\n      }\n      props.setLoadingRequest(false);\n    }\n  };\n\n  const FC_DocValidation = async () => {\n    const api_body: VerifyDocumentInterface = {\n      user_id: props.thisClaim.user,\n      doc_id: props.thisClaim.claiming_on_id,\n      validation_status:\n        props.actionTaken === ClaimDecisionStatus.ACCEPTED\n          ? DocValidationStatusInterface.APPROVED\n          : DocValidationStatusInterface.REJECTED,\n      validated_by: {\n        user_id: props.auth.user.user_id,\n        comment: props.responseMsg,\n        validation_status:\n          props.actionTaken === ClaimDecisionStatus.ACCEPTED\n            ? DocValidationStatusInterface.APPROVED\n            : DocValidationStatusInterface.REJECTED,\n      },\n      in_education: false,\n      disability: false,\n    };\n    const api_redux: VerifyDocumentInterface = {\n      user_id: props.thisClaim.user,\n      doc_id: props.thisClaim.claiming_on_id,\n      validation_status:\n        props.actionTaken === ClaimDecisionStatus.ACCEPTED\n          ? DocValidationStatusInterface.APPROVED\n          : DocValidationStatusInterface.REJECTED,\n      validated_by: {\n        user_id: props.auth.user.user_id,\n        comment: props.responseMsg,\n        validation_status:\n          props.actionTaken === ClaimDecisionStatus.ACCEPTED\n            ? DocValidationStatusInterface.APPROVED\n            : DocValidationStatusInterface.REJECTED,\n        date: \"\",\n      },\n      in_education: false,\n      disability: false,\n    };\n\n    try {\n      const res = await axios.post<VerifyDocumentInterface>(\n        `${API.AUTH}/validateuserdoc`,\n        api_body\n      );\n      if (res) {\n        props.verifyDocument(api_redux);\n        await FC_shortListing(props.thisClaim.user);\n        // setDocumentId(\"null\");\n      }\n    } catch (error) {\n      console.error(error);\n      props.PushPopupAlert({\n        title: errorToText(error),\n        theme: PopupAlertTheme.danger,\n      });\n    }\n  };\n\n  const FC_shortListing = async (candidate_id: string) => {\n    try {\n      const res = await axios.patch(\n        `${API.APPLICATION}/doccheckshortlist/${candidate_id}`\n      );\n      console.log({ res });\n    } catch (error) {\n      console.error({ error });\n      props.PushPopupAlert({\n        title: errorToText(error),\n        theme: PopupAlertTheme.danger,\n      });\n    }\n  };\n\n  const getReasonById = (\n    reason_id: string\n  ): claimReasonInterface | undefined => {\n    if (props.claimReasons) {\n      return props.claimReasons.find((item) => item.id === reason_id);\n    }\n    return undefined;\n  };\n\n  return (\n    <section className=\"\">\n      <div className=\"w-full bg-white px-4 py-1 divide-y-2 space-y-2\">\n        {/* DOCUMENT DETAILS ==================================================== */}\n        <section className=\"flex flex-col\">\n          <div className=\"flex items-center justify-between\">\n            <div className=\"flex items-center gap-2\">\n              <span className={`italic text-gray-600`}>Names:</span>\n              <span className=\"text-gray-800 font-bold text-xl\">\n                {props.thisClaim.userDetails.user_info.fname +\n                  \" \" +\n                  props.thisClaim.userDetails.user_info.lname}\n              </span>\n            </div>\n            <button\n              type=\"button\"\n              className=\"bg-blue-200 hover:bg-blue-300 text-blue-700 group-hover:text-blue-800 py-1 px-2 mr-1 rounded text-sm\"\n              onClick={() => props.setViewImage(!props.viewImage)}\n            >\n              {props.viewImage ? \"Hide\" : \"View\"}\n            </button>\n          </div>\n          <div className=\"flex items-center gap-2\">\n            <span className={`italic text-gray-600`}>Title:</span>\n            <span className=\"text-gray-800 font-bold text-2xl\">\n              {/* {ClaimGetDocTitle(props.documentCategories, props.thisDoc).main} */}\n              {props.thisClaim.userDetails.details.filter(\n                (item) => item.validation_status !== \"waiting\"\n              ).length > 0\n                ? adminDisplayClaimTitle(\n                    props.documentCategories,\n                    props.thisClaim.userDetails.details.filter(\n                      (item) => item.validation_status !== \"waiting\"\n                    ),\n                    props.thisClaim\n                  )\n                : \"-\"}\n            </span>\n          </div>\n          <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n            <span className={`italic`}>Status:</span>\n            <span className=\"font-bold text-yellow-900 rounded px-3 py-1\">\n              {props.thisClaim.previous\n                ? capitalizeFirstLetter(props.thisClaim.previous.status)\n                : capitalizeFirstLetter(props.thisDoc.validation_status)}\n            </span>\n          </div>\n          <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n            <span className={`italic`}>Evaluated by:</span>\n            <span className=\"font-semibold\">\n              {props.thisClaim.previous.evaluater.name}\n            </span>\n          </div>\n          <div className=\"flex items-start gap-2 text-sm text-gray-600\">\n            <span className={`italic`}>Reason:</span>\n            <span className=\"font-normal\">\n              {props.thisClaim.previous\n                ? props.thisClaim.previous.reason\n                : props.thisDoc.validated_by.commet}\n            </span>\n          </div>\n\n          {/* DISPLAY IMAGE ==================================================== */}\n          {props.viewImage && (\n            <div className=\"w-full my-1 animate__animated animate__fadeIn\">\n              <img\n                src={`${API.AUTH_FILES}/${props.thisDoc.files}`}\n                alt=\"doc file\"\n                className={`w-full animate__animated animate__fadeIn`}\n              />\n            </div>\n          )}\n          {/* END DISPLAY IMAGE ==================================================== */}\n        </section>\n        {/* END DOCUMENT DETAILS ==================================================== */}\n\n        {/* ################################################################################ */}\n\n        {/* CLAIM LEVEL 1 DETAILS ==================================================== */}\n        {props.thisClaim.claims.length > 0 &&\n          props.thisClaim.claims.map((claim, index) => (\n            <section className=\"flex flex-col px-2 pt-3\" key={index + claim.id}>\n              <div className=\"text-gray-700 italic font-bold\">\n                Claim Comment (level {index + 1})\n              </div>\n              {/* CLAIM COMMENT ==>> LEVEL 1 ==================================================== */}\n              <div className=\"flex flex-col items-start gap-2 mt-1 border rounded px-4 py-1 bg-gray-50\">\n                <div className=\"flex items-center gap-2 bg-blue-100 rounded py-1 px-2\">\n                  <MdInfoOutline />\n                  {getReasonById(props.thisClaim.default_claim_resaons)\n                    ? getReasonById(props.thisClaim.default_claim_resaons)!\n                        .reason\n                    : \"\"}\n                </div>\n                <p>{claim.reason}</p>\n                <span className=\"text-gray-500 text-xs\">\n                  {showDate(claim.createdAt) +\n                    \" at \" +\n                    timestampToDate(claim.date_created).timeFR}\n                </span>\n              </div>\n              {/* CLAIM COMMENT ==>> LEVEL 1 ==================================================== */}\n\n              {isClaimEvaluated(props.thisClaim, claim.level) && (\n                <section className=\"mt-4\">\n                  <span className=\"text-gray-700 italic font-semibold\">\n                    Response (level {index + 1})\n                  </span>\n                  <div className=\"border-t-2\">\n                    <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n                      <span className={`italic`}>Status:</span>\n                      <span\n                        className={`font-bold ${\n                          claim.decision_taken_status ===\n                          ClaimDecisionStatus.REJECTED\n                            ? \"text-yellow-900\"\n                            : \"text-blue-600\"\n                        } rounded px-3 py-1`}\n                      >\n                        {capitalizeFirstLetter(\n                          claim.decision_taken_status.toLocaleLowerCase()\n                        )}\n                      </span>\n                    </div>\n                    <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n                      <span className={`italic`}>Evaluated by:</span>\n                      <span className=\"font-semibold\">\n                        {claim.evaluater.name}\n                      </span>\n                    </div>\n                    <div className=\"flex items-start gap-2 text-sm text-gray-600\">\n                      <span className={`italic`}>Reason:</span>\n                      <span className=\"font-normal\">\n                        {claim.evaluation_comment}\n                      </span>\n                    </div>\n                  </div>\n                </section>\n              )}\n            </section>\n          ))}\n        {/* END CLAIM LEVEL 1 DETAILS ==================================================== */}\n      </div>\n\n      {/* FOOTER INITIAL ========================================== */}\n      {!props.actionTaken && (\n        <section className=\"flex items-center justify-between\">\n          {/* SHOWING STATUS ===================================== */}\n          <div className=\"mx-4 mb-5 mt-3\">\n            <span\n              className={`${\n                props.thisClaim.last_claim_status === ClaimStatus.PENDING\n                  ? \"text-yellow-700\"\n                  : props.thisClaim.last_claim_status === ClaimStatus.DELETED\n                  ? \"text-red-700\"\n                  : \"text-green-700\"\n              } italic font-semibold`}\n            >\n              {capitalizeFirstLetter(\n                props.thisClaim.last_claim_status.toLocaleLowerCase()\n              )}\n            </span>\n          </div>\n\n          {props.thisClaim.last_claim_status === ClaimStatus.PENDING && (\n            <div className=\"flex items-center gap-2 px-2\">\n              <button\n                className={`px-4 py-2 font-semibold text-red-50 rounded inline-flex items-center space-x-2 focus:outline-none bg-red-700 hover:bg-red-800`}\n                onClick={() => {\n                  props.setActionTaken(ClaimDecisionStatus.REJECTED);\n                }}\n              >\n                <MdCancel className=\"w-5 h-5\" />\n                <span>Reject</span>\n              </button>\n              <button\n                className={`px-4 py-2 font-semibold text-blue-50 rounded inline-flex items-center space-x-2 focus:outline-none bg-blue-700 hover:bg-blue-800`}\n                onClick={() => {\n                  props.setActionTaken(ClaimDecisionStatus.ACCEPTED);\n                }}\n              >\n                <FaRegCheckCircle className=\"w-5 h-5\" />\n                <span>Accept</span>\n              </button>\n            </div>\n          )}\n        </section>\n      )}\n      {/* END FOOTER INITIAL ========================================== */}\n\n      {/* ======================================================== */}\n      {/* FOOTER RESPONSE ========================================== */}\n      {props.actionTaken && (\n        <section className=\"my-5 overflow-x-auto\">\n          <div className=\"italic text-gray-700 text-base my-1 mx-2\">\n            Selected decision:{\" \"}\n            <span\n              className={`font-semibold text-lg ${\n                props.actionTaken === ClaimDecisionStatus.ACCEPTED\n                  ? \"text-blue-700\"\n                  : \"text-yellow-800\"\n              }`}\n            >\n              {props.actionTaken === ClaimDecisionStatus.ACCEPTED\n                ? \"Approved\"\n                : \"Rejected\"}\n            </span>\n          </div>\n          {/* right part */}\n          <div className=\"flex flex-col md:flex-row items-end md:items-start gap-1 w-full\">\n            <div className=\"w-full px-2\">\n              <textarea\n                placeholder={`Reason of your decision...`}\n                cols={50}\n                rows={3}\n                className={`border border-${\n                  props.formError && props.formError.element === \"comment\"\n                    ? \"red\"\n                    : \"gray\"\n                }-400 rounded px-3 py-1 w-full focus:outline-none`}\n                style={{ resize: \"none\" }}\n                value={props.responseMsg}\n                onChange={(e) => {\n                  props.setResponseMsg(e.target.value);\n                  props.setFormError(null);\n                }}\n                disabled={props.loadingRequest}\n              ></textarea>\n              {props.formError && props.formError.element === \"comment\" && (\n                <p className=\"text-red-800\">{props.formError.msg}</p>\n              )}\n            </div>\n            <div className=\"flex flex-row md:flex-col gap-1 max-w-full px-2\">\n              <button\n                className=\"bg-gray-700 hover:bg-gray-800 px-4 py-2 font-semibold rounded text-white inline-flex items-center space-x-2 focus:outline-none\"\n                onClick={() => {\n                  props.setResponseMsg(\"\");\n                  props.setActionTaken(null);\n                  props.setFormError(null);\n                }}\n                disabled={props.loadingRequest}\n              >\n                <RiArrowGoBackFill className=\"w-5 h-5\" />\n                <span>Back</span>\n              </button>\n              <button\n                className=\"bg-blue-700 hover:bg-blue-800 px-4 py-2 font-semibold rounded text-white inline-flex items-center space-x-2 focus:outline-none\"\n                disabled={props.loadingRequest}\n                onClick={() =>\n                  window.confirm(\n                    `Are you sure you want to ${\n                      props.actionTaken === ClaimDecisionStatus.ACCEPTED\n                        ? \"approve\"\n                        : \"rejected\"\n                    } this document?`\n                  ) && handleVerify()\n                }\n              >\n                {props.loadingRequest ? (\n                  <div className=\"\">Loading...</div>\n                ) : (\n                  <div className=\"inline-flex items-center space-x-2 gap-1\">\n                    <FaRegCheckCircle className=\"w-5 h-5\" />\n                    <span>Confirm</span>\n                  </div>\n                )}\n              </button>\n            </div>\n          </div>\n          {/* end right part */}\n        </section>\n      )}\n      {/* END FOOTER RESPONSE ========================================== */}\n    </section>\n  );\n};\n\nconst mapStateToProps = ({\n  auth,\n}: StoreState): {\n  auth: Auth;\n} => {\n  return {\n    auth: auth,\n  };\n};\n\nexport default connect(mapStateToProps, {\n  evaluateClaim,\n  verifyDocument,\n  PushPopupAlert,\n})(AdminClaimDocView);\n","import React, { Component } from \"react\";\nimport { MdArrowBack, MdInfoOutline } from \"react-icons/md\";\nimport { connect } from \"react-redux\";\nimport { Auth, loadCourses, PushPopupAlert } from \"../../../actions\";\nimport {\n  getAllClaims,\n  getAllApplications,\n  getClaimReasons,\n  getAllAnswers,\n} from \"../../../actions/claiming\";\nimport {\n  getDocumentCategory,\n  getDocumentSubCategory,\n  getDocumentFields,\n} from \"../../../actions/document\";\nimport { GetAllSessionPlans } from \"../../../actions/session\";\nimport { getPositions } from \"../../../actions/settings\";\nimport { verifyAllDocument, fetchUserAccess } from \"../../../actions/users\";\nimport { PopupAlertData } from \"../../../components/Alert/Popup\";\nimport TableLoading from \"../../../components/Loading/TableLoading\";\nimport { SideNavigation } from \"../../../components/Navigation/SideNavigation\";\nimport NoResult, {\n  NoResultThemes,\n} from \"../../../components/NoResult/NoResult\";\nimport {\n  SessionPlanInterface,\n  PositionAPI,\n  allClaimApplicationInterface,\n  CandidateClaimInterface,\n  PlansTypeKeys,\n  ClaimDecisionStatus,\n  ClaimTypesInterface,\n  course,\n} from \"../../../interfaces\";\nimport { PopupAlertTheme } from \"../../../interfaces/popupAlert\";\nimport { StoreState } from \"../../../reducers\";\nimport { ClaimingReducerType } from \"../../../reducers/claiming\";\nimport { DocumentReducerInterface } from \"../../../reducers/document\";\nimport { capitalizeFirstLetter } from \"../../../shared/dataTest\";\nimport { UserDocumentsInterface } from \"../../../shared/interfaces\";\nimport { getClaimById, whichClaimStatus, whichClaimType } from \"../Candidate\";\nimport { getCourseById, getCourseIdBySheetId } from \"../Candidate/FormExamList\";\nimport ClaimHeaderTitle from \"../ClaimHeaderTitle\";\nimport AdminClaimAppView from \"./AdminClaimAppView\";\nimport AdminClaimDocView from \"./AdminClaimDocView\";\nimport AdminClaimExamView from \"./AdminClaimExamView\";\nimport AdminFilterByType, {\n  filterClaimsByClaimType,\n} from \"./AdminFilterByType\";\n\n// export const getUserDocuments = (\n//   userList: UserInterface[],\n//   user_id: String\n// ): { user: UserInterface; document: UserDocumentsInterface[] } | null => {\n//   const thisUser = userList.find((item) => item.user_id === user_id);\n//   if (thisUser) {\n//     const thisDoc = thisUser.details.filter(\n//       (item) => item.validation_status !== \"waiting\"\n//     );\n//     return { user: thisUser, document: thisDoc };\n//   }\n//   return null;\n// };\n\nexport const adminDisplayClaimTitle = (\n  documentCategories: DocumentReducerInterface,\n  candidateDocuments: UserDocumentsInterface[],\n  thisClaim: CandidateClaimInterface\n): string => {\n  let result: string = \"\";\n\n  // CHECK IF CLAIM IS FOR DOCUMENTS ===============================================\n  if (thisClaim.type_key === PlansTypeKeys.DOCUMENT_VALIDATION) {\n    let thisDoc = candidateDocuments.find(\n      (item) => item.doc_id === thisClaim.claiming_on_id\n    );\n    result = thisDoc\n      ? AdminClaimGetDocTitle(documentCategories, thisDoc).main\n      : \"Document not found\";\n  }\n  // END CHECK IF CLAIM IS FOR DOCUMENTS ===============================================\n\n  return result;\n};\n\nexport const AdminClaimGetDocTitle = (\n  documentCategories: DocumentReducerInterface,\n  doc: UserDocumentsInterface\n): { category: string; sub_category: string; field: string; main: string } => {\n  let DocCategory: string = \"\",\n    DocSubCategory: string = \"\",\n    DocField: string = \"\",\n    DocTitle: string = \"\";\n  if (\n    doc.sub_category_id &&\n    doc.sub_category_id.length > 0 &&\n    documentCategories.documentSubCategory\n  ) {\n    DocTitle = documentCategories.documentSubCategory.filter(\n      (c) => c.user_detail_subcategory_id === doc.sub_category_id\n    )[0].title;\n    DocSubCategory = DocTitle;\n  } else if (\n    doc.category_id.length > 0 &&\n    documentCategories.documentCategory\n  ) {\n    DocTitle = documentCategories.documentCategory.filter(\n      (c) => c.user_detail_category_id === doc.category_id\n    )[0].title;\n    DocCategory = DocTitle;\n  }\n  if (\n    doc.category_subcategory_data.length > 0 &&\n    documentCategories.documentFields\n  ) {\n    DocField = documentCategories.documentFields.filter(\n      (c) => c._id === doc.category_subcategory_data\n    )[0].title;\n    DocTitle += \" in \" + DocField;\n  }\n\n  return {\n    category: DocCategory,\n    sub_category: DocSubCategory,\n    field: DocField,\n    main: DocTitle,\n  };\n};\n\nexport const getApplicationById = (\n  allApplications: allClaimApplicationInterface[] | null,\n  systemPositions: PositionAPI[] | null,\n  application_id: String\n): {\n  application: allClaimApplicationInterface;\n  position: PositionAPI;\n} | null => {\n  if (allApplications) {\n    let thisApplication = allApplications.find(\n      (item) => item._id === application_id\n    );\n    if (thisApplication && systemPositions) {\n      let thisPosition = systemPositions.find(\n        (item) => item.position_id === thisApplication!.position\n      );\n      if (thisPosition) {\n        return { application: thisApplication, position: thisPosition };\n      }\n    }\n  }\n  return null;\n};\n\ntype AppProps = {\n  auth: Auth;\n  application_sessions: SessionPlanInterface[] | null;\n  claiming: ClaimingReducerType;\n  documentReducer: DocumentReducerInterface;\n  systemPositions: PositionAPI[] | null;\n  courses: course[] | null;\n  loadCourses: Function;\n  getPositions: Function;\n  getClaimReasons: Function;\n  getAllApplications: Function;\n  getAllClaims: Function;\n  getAllAnswers: Function;\n  GetAllSessionPlans: Function;\n  getDocumentCategory: Function;\n  getDocumentSubCategory: Function;\n  getDocumentFields: Function;\n  verifyAllDocument: Function;\n  fetchUserAccess: Function;\n  PushPopupAlert: (alert: PopupAlertData) => void;\n};\n\ntype AppState = {\n  loading: boolean;\n  loadingData: boolean;\n  thisPeriod: SessionPlanInterface | null;\n  viewClaim: boolean;\n  periodChanged: boolean;\n  claimId: string | null;\n  claimType: string | null;\n  candidateId: string | null;\n\n  // FOR FORM ================\n  viewImage: boolean;\n  loadingRequest: boolean;\n  actionTaken: ClaimDecisionStatus | null;\n  responseMsg: string;\n  formError: {\n    element: string;\n    msg: string;\n  } | null;\n};\n\nclass Index extends Component<AppProps, AppState> {\n  constructor(props: AppProps) {\n    super(props);\n\n    this.state = {\n      loading: true,\n      loadingData: false,\n      thisPeriod: null,\n      viewClaim: false,\n      periodChanged: false,\n      claimId: null,\n      claimType: null,\n      candidateId: null,\n\n      // FOR FORM ================\n      viewImage: false,\n      loadingRequest: false,\n      actionTaken: null,\n      responseMsg: \"\",\n      formError: null,\n    };\n  }\n\n  setLoading = (value: boolean) => {\n    this.setState({ loading: value });\n  };\n\n  setLoadingData = (value: boolean) => {\n    this.setState({ loadingData: value });\n  };\n\n  setPeriodChanged = (value: boolean) => {\n    this.setState({ periodChanged: value });\n  };\n\n  setThisPeriod = (value: SessionPlanInterface | null) => {\n    this.setState({ thisPeriod: value });\n  };\n\n  setViewClaim = (value: boolean) => {\n    this.setState({ viewClaim: value });\n  };\n\n  // ------------------------------\n  setClaimId = (value: string | null) => {\n    this.setState({ claimId: value });\n  };\n  setClaimType = (value: string | null) => {\n    this.setState({ claimType: value });\n  };\n  setCandidateId = (value: string | null) => {\n    this.setState({ candidateId: value });\n  };\n  setViewImage = (value: boolean) => {\n    this.setState({ viewImage: value });\n  };\n  setLoadingRequest = (value: boolean) => {\n    this.setState({ loadingRequest: value });\n  };\n\n  setActionTaken = (value: ClaimDecisionStatus | null) => {\n    this.setState({ actionTaken: value });\n  };\n  setResponseMsg = (value: string) => {\n    this.setState({ responseMsg: value });\n  };\n  setFormError = (\n    value: {\n      element: string;\n      msg: string;\n    } | null\n  ) => {\n    this.setState({ formError: value });\n  };\n\n  setDefaultSession = (sessions: SessionPlanInterface[]) => {\n    // SETTING ACTIVE SESSION ==========================\n    if (this.state.thisPeriod === null) {\n      let thisSession = sessions.find((item) => item.is_active === true);\n      this.setThisPeriod(thisSession ? thisSession : sessions[0]);\n      this.loadsAllClaims(thisSession ? thisSession : sessions[0]);\n      this.loadsApplications(thisSession ? thisSession : sessions[0]);\n      this.loadsAlAnswers(thisSession ? thisSession : sessions[0]);\n    }\n  };\n\n  loadsAllClaims = (thisSession: SessionPlanInterface) => {\n    // LOADING CLAIMING OF CURRENT CANDIDATES ================================\n    if (this.props.claiming.allClaims === null) {\n      this.props.getAllClaims(\n        2,\n        thisSession.session_plan_id,\n        (status: boolean, msg: string) => {\n          this.setLoading(status);\n          if (!status && msg.length) {\n            this.props.PushPopupAlert({\n              title: msg,\n              theme: PopupAlertTheme.danger,\n            });\n          }\n        }\n      );\n    }\n  };\n\n  loadsApplications = (thisSession: SessionPlanInterface) => {\n    // LOADING CLAIMING OF CURRENT CANDIDATES ================================\n    if (this.props.claiming.allApplications === null) {\n      this.props.getAllApplications(\n        thisSession.session_plan_id,\n        (status: boolean, msg: string) => {\n          this.setLoading(status);\n          if (!status && msg.length) {\n            this.props.PushPopupAlert({\n              title: msg,\n              theme: PopupAlertTheme.danger,\n            });\n          }\n        }\n      );\n    }\n  };\n\n  loadsAlAnswers = (thisSession: SessionPlanInterface) => {\n    // LOADING CLAIMING OF CURRENT CANDIDATES ================================\n    if (this.props.claiming.allAnswer === null) {\n      this.props.getAllAnswers(\n        thisSession.session_plan_id,\n        (status: boolean, msg: string) => {\n          this.setLoading(status);\n          if (!status && msg.length) {\n            this.props.PushPopupAlert({\n              title: msg,\n              theme: PopupAlertTheme.danger,\n            });\n          }\n        }\n      );\n    }\n  };\n\n  componentDidMount = () => {\n    // LOADING APPLICATION SESSION ====================================\n    if (this.props.application_sessions === null) {\n      this.props.GetAllSessionPlans(\n        (status: boolean, msg: string, data?: SessionPlanInterface[]) => {\n          this.setLoading(status);\n          if (!status) {\n            if (msg.length) {\n              this.props.PushPopupAlert({\n                title: msg,\n                theme: PopupAlertTheme.danger,\n              });\n            }\n            if (data && data.length > 0) {\n              this.setDefaultSession(data);\n            }\n          }\n        }\n      );\n    } else if (this.props.application_sessions.length > 0) {\n      this.setDefaultSession(this.props.application_sessions);\n    }\n\n    // LOADING DOCUMENT CATEGORIES ==========================\n    if (!this.props.documentReducer.documentCategory) {\n      this.props.getDocumentCategory();\n      this.setLoading(false);\n    }\n\n    // LOADING DOCUMENT CLARIFICATIONS ==========================\n    if (!this.props.documentReducer.documentSubCategory) {\n      this.props.getDocumentSubCategory();\n      this.setLoading(false);\n    }\n\n    // LOADING DOCUMENT FIELDS ==========================\n    if (!this.props.documentReducer.documentFields) {\n      this.props.getDocumentFields();\n      this.setLoading(false);\n    }\n\n    if (this.props.systemPositions === null) {\n      this.props.getPositions((status: boolean, msg: string) => {\n        this.setLoading(status);\n        console.log({ status: status, msg: msg });\n        if (msg.length) {\n          this.props.PushPopupAlert({\n            title: msg,\n            theme: PopupAlertTheme.danger,\n          });\n        }\n      });\n    } else if (this.state.loading) {\n      this.setLoading(false);\n    }\n\n    if (this.props.claiming.claimReasons === null) {\n      this.props.getClaimReasons((status: boolean, msg: string) => {\n        this.setLoading(status);\n        if (!status) {\n          if (msg.length > 0) {\n            this.props.PushPopupAlert({\n              title: msg,\n              theme: PopupAlertTheme.danger,\n            });\n          }\n        }\n      });\n    }\n\n    if (\n      this.props.courses === null ||\n      (this.props.courses.length === 0 && this.state.loading)\n    ) {\n      this.props.loadCourses(this.setLoading);\n      this.setLoading(false);\n    } else {\n      this.setLoading(false);\n    }\n  };\n\n  displayClaimTitle = (\n    thisClaim: CandidateClaimInterface\n  ): string | JSX.Element => {\n    let result: string = thisClaim.claiming_on_id;\n    if (thisClaim.type_key === PlansTypeKeys.DOCUMENT_VALIDATION) {\n      let thisDocs = thisClaim.userDetails.details.filter(\n        (item) => item.validation_status !== \"waiting\"\n      );\n      result =\n        thisDocs.length > 0\n          ? adminDisplayClaimTitle(\n              this.props.documentReducer,\n              thisDocs,\n              thisClaim\n            )\n          : \"Document not found\";\n    }\n    if (thisClaim.type_key === PlansTypeKeys.APPLICATION) {\n      if (this.props.claiming.allApplications) {\n        let thisApplication = this.props.claiming.allApplications.find(\n          (item) => item._id === thisClaim.claiming_on_id\n        );\n        if (\n          thisApplication &&\n          this.props.claiming.allApplications &&\n          this.props.systemPositions\n        ) {\n          let thisPosition = this.props.systemPositions.find(\n            (item) => item.position_id === thisApplication!.position\n          );\n          if (thisPosition) {\n            result = thisPosition.position_title;\n          } else {\n            result = \"Application not found\";\n          }\n        }\n      }\n    }\n\n    if (\n      thisClaim.type_key === PlansTypeKeys.EXAMINATION &&\n      this.props.courses &&\n      this.props.claiming.allAnswer\n    ) {\n      let thisAnswer = getCourseIdBySheetId(\n        this.props.claiming.allAnswer,\n        thisClaim.claiming_on_id\n      );\n      if (thisAnswer && getCourseById(this.props.courses, thisAnswer.course)) {\n        result =\n          \"Exam of \" +\n          getCourseById(this.props.courses, thisAnswer.course)!.course_name;\n      } else {\n        result = \"Unknown exam\";\n      }\n    }\n\n    return result;\n  };\n\n  onPeriodChange = (period_id: string) => {\n    this.setPeriodChanged(true);\n    this.props.getAllClaims(2, period_id, (status: boolean, msg: string) => {\n      !status && this.setPeriodChanged(false);\n      this.setLoadingData(status);\n      if (status === false && msg.length) {\n        this.props.PushPopupAlert({\n          title: msg,\n          theme: PopupAlertTheme.danger,\n        });\n      }\n    });\n  };\n\n  render() {\n    if (this.props.application_sessions === null) {\n      return (\n        <div className=\"text-center mt-7 font-bold text-4xl text-gray-400 animate-pulse\">\n          Loading Data...\n        </div>\n      );\n    }\n\n    if (this.props.application_sessions.length === 0) {\n      return (\n        <div className=\"bg-yellow-100 rounded flex flex-col items-center justify-center p-6 my-8 text-yellow-900 border border-yellow-900\">\n          <MdInfoOutline className=\"text-6xl md:text-9xl\" />\n          <div className=\"text-center flex flex-col\">\n            <span className=\"text-2xl md:text-4xl font-extrabold\">\n              No active session\n            </span>\n            <span className=\"text-lg\">\n              Please Wait for the system to publish the sessions or contact the\n              administrator\n            </span>\n          </div>\n        </div>\n      );\n    }\n\n    if (this.props.claiming.allClaims === null) {\n      return (\n        <div className=\"text-center mt-7 font-bold text-4xl text-gray-400 animate-pulse\">\n          Loading Data...\n        </div>\n      );\n    }\n\n    return (\n      <div>\n        {/* SIDE NAVIGATION */}\n        {!this.state.viewClaim && (\n          <SideNavigation>\n            {/* FILTER SECTION */}\n            <AdminFilterByType loadingClaims={this.state.loadingData} />\n            {/* END FILTER SECTION */}\n          </SideNavigation>\n        )}\n        {/* END SIDE NAVIGATION */}\n\n        {/* 00000000000000000000000000000000000 */}\n\n        {/* CLAIM TITLE ===================================== */}\n        {!this.state.viewClaim && (\n          <ClaimHeaderTitle\n            headerTitle={`${\n              this.props.claiming.selectedClaimType === \"all\"\n                ? \"All\"\n                : this.props.claiming.selectedClaimType ===\n                  PlansTypeKeys.DOCUMENT_VALIDATION\n                ? \"Documents\"\n                : this.props.claiming.selectedClaimType ===\n                  PlansTypeKeys.APPLICATION\n                ? \"Applications\"\n                : this.props.claiming.selectedClaimType ===\n                  PlansTypeKeys.EXAMINATION\n                ? \"Exam\"\n                : this.props.claiming.selectedClaimType ===\n                  PlansTypeKeys.MARKS_PUBLICATION\n                ? \"Marks publication\"\n                : this.props.claiming.selectedClaimType ===\n                  PlansTypeKeys.PLACEMENT_TRANSFER\n                ? \"Placements\"\n                : \"\"\n            } Claiming`}\n            loading={this.state.loadingData}\n            loadingSession={this.state.loading}\n            thisPeriod={this.state.thisPeriod}\n            setThisPeriod={this.setThisPeriod}\n            setLoadingSession={this.setLoadingData}\n            application_sessions={this.props.application_sessions}\n            onPeriodChange={this.onPeriodChange}\n            periodChanged={this.state.periodChanged}\n          />\n        )}\n        {/* END CLAIM TITLE ===================================== */}\n\n        {/* 00000000000000000000000000000000000 */}\n\n        {/* CLAIM CONTENT LIST ===================================== */}\n        {!this.state.viewClaim && (\n          <section className=\"bg-white w-full p-1\">\n            <table className=\"w-full shadow\" id=\"report_content\">\n              <thead className=\"bg-white border-b-2 border-gray-300 text-gray-600 font-bold text-sm\">\n                <tr>\n                  <td className=\"px-2 py-2\">#</td>\n                  <td className=\"px-2 py-2\">Applicant names</td>\n                  <td className=\"px-2 py-2\">Claim title</td>\n                  {this.props.claiming.selectedClaimType === \"all\" && (\n                    <td className=\"px-2 py-2\">Claim type</td>\n                  )}\n                  <td className=\"px-2 py-2\">Claim status</td>\n                  <td className=\"px-2 py-2\"></td>\n                </tr>\n              </thead>\n              <tbody>\n                {!this.props.claiming.allClaims ||\n                !this.props.claiming.claimTypes ||\n                !this.props.claiming.allApplications ||\n                !this.props.systemPositions ||\n                this.state.loadingData ? (\n                  <TableLoading\n                    cols={\n                      this.props.claiming.selectedClaimType === \"all\" ? 6 : 5\n                    }\n                  />\n                ) : filterClaimsByClaimType(\n                    this.props.claiming.allClaims,\n                    this.props.claiming.selectedClaimType\n                  ).length <= 0 ? (\n                  <tr\n                    className=\"border-b border-gray-200 group hover:bg-gray-50 cursor-pointer\"\n                    key=\"key3201\"\n                  >\n                    <td className=\"px-3 py-1\" colSpan={6}>\n                      <NoResult\n                        theme={NoResultThemes.Light}\n                        value={\"No claim found!\"}\n                      />\n                    </td>\n                  </tr>\n                ) : (\n                  filterClaimsByClaimType(\n                    this.props.claiming.allClaims,\n                    this.props.claiming.selectedClaimType\n                  ).map((claim, index) => (\n                    <tr\n                      className=\"border-b border-gray-200 group hover:bg-gray-50 cursor-pointer\"\n                      key={index + claim._id}\n                      onClick={() => {\n                        this.setViewClaim(true);\n                        this.setClaimId(claim._id);\n                        this.setCandidateId(claim.user);\n                        this.setClaimType(\n                          whichClaimType(claim) ? whichClaimType(claim)! : null\n                        );\n                      }}\n                    >\n                      <td className=\"px-3 py-1\">{index + 1}</td>\n                      <td className=\"px-3 py-1 whitespace-nowrap\">\n                        {claim.userDetails.user_info.fname +\n                          \" \" +\n                          claim.userDetails.user_info.lname}\n                      </td>\n                      <td className=\"px-3 py-1 whitespace-nowrap\">\n                        {this.displayClaimTitle(claim)}\n                      </td>\n                      {this.props.claiming.selectedClaimType === \"all\" && (\n                        <td className=\"px-3 py-1 whitespace-nowrap\">\n                          {whichClaimType(claim)\n                            ? capitalizeFirstLetter(whichClaimType(claim)!)\n                            : \"-\"}\n                        </td>\n                      )}\n                      <td className=\"px-3 py-1 whitespace-nowrap\">\n                        <span\n                          className={`inline-block rounded-full duration-300 text-xs font-semibold px-3 py-1 ${\n                            whichClaimStatus(claim).classes\n                          }`}\n                        >\n                          {whichClaimStatus(claim).status}\n                        </span>\n                      </td>\n                      <td className=\"px-3 py-1 text-center whitespace-nowrap\">\n                        <button className=\"btn bg-blue-500 text-white group-hover:bg-blue-600\">\n                          View\n                        </button>\n                      </td>\n                    </tr>\n                  ))\n                )}\n              </tbody>\n            </table>\n          </section>\n        )}\n        {/* END CLAIM CONTENT LIST ===================================== */}\n\n        {/* 00000000000000000000000000000000000 */}\n\n        {/* view claim */}\n        {this.state.viewClaim &&\n          this.state.candidateId &&\n          this.props.claiming.allClaims &&\n          this.state.claimId &&\n          getClaimById(this.props.claiming.allClaims, this.state.claimId) &&\n          this.props.claiming.claimTypes && (\n            <section className=\"bg-white w-full p-1 my-4\">\n              {/* VIEW CLAIM HEADER =============================== */}\n              <section className=\"flex items-center gap-2 py-2 border-b\">\n                <button\n                  className={`ml-3 bg-gray-50 hover:bg-blue-100 rounded-full px-1 py-1 focus:outline-none ${\n                    this.state.loadingRequest\n                      ? \"cursor-not-allowed\"\n                      : \"cursor-pointer\"\n                  } animate__animated animate__fadeIn`}\n                  disabled={this.state.loadingRequest}\n                  onClick={() => {\n                    this.setViewClaim(false);\n                    this.setViewImage(true);\n                    this.setLoadingRequest(false);\n                    this.setActionTaken(null);\n                    this.setResponseMsg(\"\");\n                    this.setFormError(null);\n                  }}\n                >\n                  <MdArrowBack className=\"w-7 h-7\" />\n                </button>\n                <div className={`text-gray-600 font-extrabold text-2xl px-2`}>\n                  Viewing claim\n                </div>\n              </section>\n              {/* END VIEW CLAIM HEADER =============================== */}\n\n              <section className=\"my-2\">\n                {/* FOR DOCUMENT ========================== */}\n                {this.state.claimType &&\n                  this.state.claimType.toLocaleLowerCase() ===\n                    ClaimTypesInterface.DOCUMENT.toLocaleLowerCase() && (\n                    <div>\n                      {getClaimById(\n                        this.props.claiming.allClaims!,\n                        this.state.claimId!\n                      )!.userDetails.details.find(\n                        (item) =>\n                          item.doc_id ===\n                          getClaimById(\n                            this.props.claiming.allClaims!,\n                            this.state.claimId!\n                          )!.claiming_on_id\n                      ) ? (\n                        <AdminClaimDocView\n                          thisDoc={\n                            getClaimById(\n                              this.props.claiming.allClaims!,\n                              this.state.claimId!\n                            )!.userDetails.details.find(\n                              (item) =>\n                                item.doc_id ===\n                                getClaimById(\n                                  this.props.claiming.allClaims!,\n                                  this.state.claimId!\n                                )!.claiming_on_id\n                            )!\n                          }\n                          documentCategories={this.props.documentReducer}\n                          thisClaim={\n                            getClaimById(\n                              this.props.claiming.allClaims,\n                              this.state.claimId\n                            )!\n                          }\n                          claimTypes={this.props.claiming.claimTypes}\n                          viewImage={this.state.viewImage}\n                          setViewImage={this.setViewImage}\n                          loadingRequest={this.state.loadingRequest}\n                          setLoadingRequest={this.setLoadingRequest}\n                          actionTaken={this.state.actionTaken}\n                          setActionTaken={this.setActionTaken}\n                          responseMsg={this.state.responseMsg}\n                          setResponseMsg={this.setResponseMsg}\n                          formError={this.state.formError}\n                          setFormError={this.setFormError}\n                          candidateId={this.state.candidateId}\n                          claimReasons={this.props.claiming.claimReasons}\n                        />\n                      ) : (\n                        <NoResult\n                          theme={NoResultThemes.Dark}\n                          value={\"Document not found\"}\n                        />\n                      )}\n                    </div>\n                  )}\n\n                {/* FOR APPLICATION ========================== */}\n                {this.state.claimType &&\n                  this.state.claimType.toLocaleLowerCase() ===\n                    ClaimTypesInterface.APPLICATION.toLocaleLowerCase() && (\n                    <div>\n                      {getApplicationById(\n                        this.props.claiming.allApplications,\n                        this.props.systemPositions,\n                        getClaimById(\n                          this.props.claiming.allClaims,\n                          this.state.claimId\n                        )!.claiming_on_id\n                      ) ? (\n                        this.props.systemPositions && (\n                          <AdminClaimAppView\n                            thisApplication={\n                              getApplicationById(\n                                this.props.claiming.allApplications,\n                                this.props.systemPositions,\n                                getClaimById(\n                                  this.props.claiming.allClaims,\n                                  this.state.claimId\n                                )!.claiming_on_id\n                              )!.application\n                            }\n                            thisPosition={\n                              getApplicationById(\n                                this.props.claiming.allApplications,\n                                this.props.systemPositions,\n                                getClaimById(\n                                  this.props.claiming.allClaims,\n                                  this.state.claimId\n                                )!.claiming_on_id\n                              )!.position\n                            }\n                            documentCategories={this.props.documentReducer}\n                            thisClaim={\n                              getClaimById(\n                                this.props.claiming.allClaims,\n                                this.state.claimId\n                              )!\n                            }\n                            claimTypes={this.props.claiming.claimTypes}\n                            systemPositions={this.props.systemPositions}\n                            claimReasons={this.props.claiming.claimReasons}\n                          />\n                        )\n                      ) : (\n                        <NoResult\n                          theme={NoResultThemes.Dark}\n                          value={\"Application not found\"}\n                        />\n                      )}\n                    </div>\n                  )}\n\n                {/* FOR EXAMINATION ========================== */}\n                {this.state.claimType &&\n                  this.state.claimType.toLocaleLowerCase() ===\n                    ClaimTypesInterface.EXAMINATION.toLocaleLowerCase() && (\n                    <div>\n                      {this.props.claiming.allAnswer &&\n                      this.props.courses &&\n                      getCourseIdBySheetId(\n                        this.props.claiming.allAnswer,\n                        getClaimById(\n                          this.props.claiming.allClaims,\n                          this.state.claimId\n                        )!.claiming_on_id\n                      ) &&\n                      getCourseById(\n                        this.props.courses,\n                        getCourseIdBySheetId(\n                          this.props.claiming.allAnswer,\n                          getClaimById(\n                            this.props.claiming.allClaims,\n                            this.state.claimId\n                          )!.claiming_on_id\n                        )!.course\n                      ) ? (\n                        <AdminClaimExamView\n                          thisExamSheet={\n                            getCourseIdBySheetId(\n                              this.props.claiming.allAnswer,\n                              getClaimById(\n                                this.props.claiming.allClaims,\n                                this.state.claimId\n                              )!.claiming_on_id\n                            )!\n                          }\n                          thisExam={\n                            getCourseById(\n                              this.props.courses,\n                              getCourseIdBySheetId(\n                                this.props.claiming.allAnswer,\n                                getClaimById(\n                                  this.props.claiming.allClaims,\n                                  this.state.claimId\n                                )!.claiming_on_id\n                              )!.course\n                            )!\n                          }\n                          thisClaim={\n                            getClaimById(\n                              this.props.claiming.allClaims,\n                              this.state.claimId\n                            )!\n                          }\n                          claimTypes={this.props.claiming.claimTypes}\n                          claimReasons={this.props.claiming.claimReasons}\n                        />\n                      ) : (\n                        <NoResult\n                          theme={NoResultThemes.Dark}\n                          value={\"Application not found\"}\n                        />\n                      )}\n                    </div>\n                  )}\n              </section>\n            </section>\n          )}\n        {/* end view claim */}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = ({\n  auth,\n  system_settings,\n  sessionPlan,\n  claiming,\n  document,\n  course,\n}: StoreState): {\n  auth: Auth;\n  application_sessions: SessionPlanInterface[] | null;\n  systemPositions: PositionAPI[] | null;\n  claiming: ClaimingReducerType;\n  documentReducer: DocumentReducerInterface;\n  courses: course[] | null;\n} => {\n  return {\n    auth: auth,\n    application_sessions: sessionPlan.allSessionPlans,\n    systemPositions: system_settings.systemPositions,\n    claiming,\n    documentReducer: document,\n    courses: course.courses,\n  };\n};\n\nexport const AdminClaim = connect(mapStateToProps, {\n  getAllClaims,\n  loadCourses,\n  getAllAnswers,\n  getClaimReasons,\n  getAllApplications,\n  GetAllSessionPlans,\n  getDocumentCategory,\n  getDocumentSubCategory,\n  getDocumentFields,\n  verifyAllDocument,\n  fetchUserAccess,\n  getPositions,\n  PushPopupAlert,\n})(Index);\n","import React, { Fragment, useEffect, useState } from \"react\";\nimport { BiExport, BiSort } from \"react-icons/bi\";\nimport { FiEdit } from \"react-icons/fi\";\nimport { ImFilesEmpty } from \"react-icons/im\";\nimport {\n  MdCheckBox,\n  MdCheckBoxOutlineBlank,\n  MdHistory,\n  MdRadioButtonChecked,\n  MdRadioButtonUnchecked,\n} from \"react-icons/md\";\nimport { connect } from \"react-redux\";\nimport {\n  Auth,\n  loadCourses,\n  loadEducationCategories,\n  PushPopupAlert,\n  schoolLevelsStoreInterface,\n} from \"../../../actions\";\nimport {\n  getAllClaims,\n  getAllApplications,\n  setSelectedClaimType,\n  GetClaimingTypes,\n  getAllAnswers,\n} from \"../../../actions/claiming\";\nimport {\n  getDocumentCategory,\n  getDocumentSubCategory,\n  getDocumentFields,\n} from \"../../../actions/document\";\nimport { getPositions } from \"../../../actions/settings\";\nimport { PopupAlertData } from \"../../../components/Alert/Popup\";\nimport {\n  generatePDF,\n  reportSettingsInterface,\n} from \"../../../components/DownloadPDF/rest\";\nimport Loading from \"../../../components/Loading/Loading\";\nimport Modal, { ModalSize, Themes } from \"../../../components/Modal/Modal\";\nimport {\n  SideNavigation,\n  MainItem,\n} from \"../../../components/Navigation/SideNavigation\";\nimport {\n  CandidateClaimInterface,\n  claimReportContentInterface,\n  claimReportContentKeyInterface,\n  ClaimToPrintInterface,\n} from \"../../../interfaces/claimings\";\nimport { PopupAlertTheme } from \"../../../interfaces/popupAlert\";\nimport { PositionAPI } from \"../../../interfaces/position\";\nimport { StoreState } from \"../../../reducers\";\nimport { ClaimingReducerType } from \"../../../reducers/claiming\";\nimport { DocumentReducerInterface } from \"../../../reducers/document\";\nimport ExportToExcel from \"../../../utils/ExportToExcel\";\nimport { DATE, sortThisArray } from \"../../../utils/functions\";\nimport { adminDisplayClaimTitle } from \"../../Claimings/Admin\";\nimport { ClaimTypesEnum, whichClaimType } from \"../../Claimings/Candidate\";\nimport TableLoading from \"../../../components/Loading/TableLoading\";\nimport {\n  education_category,\n  PlansTypeKeys,\n  SessionPlanInterface,\n  course,\n} from \"../../../interfaces\";\nimport { GetAllSessionPlans } from \"../../../actions/session\";\nimport { capitalizeFirstLetter } from \"../../../shared/dataTest\";\nimport ChooseSession from \"../../SessionSettings/ChooseSession\";\nimport {\n  getCourseIdBySheetId,\n  getCourseById,\n} from \"../../Claimings/Candidate/FormExamList\";\n\nexport const reportClaimType = (\n  type: PlansTypeKeys | \"all\"\n): ClaimTypesEnum | \"all\" => {\n  let result: ClaimTypesEnum | \"all\" = \"all\";\n  switch (type) {\n    case PlansTypeKeys.APPLICATION:\n      result = ClaimTypesEnum.application;\n      break;\n    case PlansTypeKeys.DOCUMENT_VALIDATION:\n      result = ClaimTypesEnum.document;\n      break;\n    case PlansTypeKeys.EXAMINATION:\n      result = ClaimTypesEnum.exam;\n      break;\n    case PlansTypeKeys.MARKS_PUBLICATION:\n      result = ClaimTypesEnum.marks_publication;\n      break;\n    case PlansTypeKeys.PLACEMENT_TRANSFER:\n      result = ClaimTypesEnum.placement;\n      break;\n    default:\n      result = \"all\";\n      break;\n  }\n\n  return result;\n};\n\nconst searchData = (\n  objList: ClaimToPrintInterface[],\n  text: string\n): ClaimToPrintInterface[] => {\n  if (undefined === text || text === \"\") return objList;\n  return objList.filter((product) => {\n    let flag;\n    // let dataKeys = product;\n\n    for (let prop in product) {\n      flag = false;\n      if (\n        prop === \"names\" ||\n        prop === \"gender\" ||\n        prop === \"national_id\" ||\n        prop === \"phone\" ||\n        prop === \"email\" ||\n        prop === \"claim_title\" ||\n        prop === \"claim_type\" ||\n        prop === \"claim_level\" ||\n        prop === \"education_category\" ||\n        prop === \"claim_session\" ||\n        prop === \"date\" ||\n        prop === \"decision\"\n      ) {\n        if (product[prop]) {\n          flag =\n            product[prop]!.toString()\n              .toLowerCase()\n              .indexOf(text.toLowerCase()) > -1;\n        }\n      }\n      if (flag) break;\n    }\n    return flag;\n  });\n};\n\nconst defaultReportContent: claimReportContentInterface[] = [\n  {\n    key: claimReportContentKeyInterface.names,\n    title: \"Applicant Names\",\n    status: true,\n  },\n  {\n    key: claimReportContentKeyInterface.national_id,\n    title: \"National ID\",\n    status: true,\n  },\n  { key: claimReportContentKeyInterface.gender, title: \"Gender\", status: true },\n  { key: claimReportContentKeyInterface.phone, title: \"Phone\", status: true },\n  {\n    key: claimReportContentKeyInterface.claim_session,\n    title: \"Claim Session\",\n    status: true,\n  },\n  {\n    key: claimReportContentKeyInterface.education_category,\n    title: \"Education Institute\",\n    status: true,\n  },\n  {\n    key: claimReportContentKeyInterface.date,\n    title: \"Claim Date\",\n    status: true,\n  },\n  {\n    key: claimReportContentKeyInterface.decision,\n    title: \"Decision\",\n    status: true,\n  },\n  {\n    key: claimReportContentKeyInterface.claim_title,\n    title: \"Claim Title\",\n    status: true,\n  },\n  {\n    key: claimReportContentKeyInterface.claim_type,\n    title: \"Claim Type\",\n    status: true,\n  },\n  {\n    key: claimReportContentKeyInterface.claim_level,\n    title: \"Claim Level\",\n    status: true,\n  },\n];\n\ntype AppProps = {\n  auth: Auth;\n  application_sessions: SessionPlanInterface[] | null;\n  claiming: ClaimingReducerType;\n  documentReducer: DocumentReducerInterface;\n  systemPositions: PositionAPI[] | null;\n  courses: course[] | null;\n  schoolLevels: schoolLevelsStoreInterface;\n  loadEducationCategories: (callback: (loading: boolean) => void) => void;\n  loadCourses: Function;\n  getAllAnswers: Function;\n  setSelectedClaimType: Function;\n  getPositions: Function;\n  getAllClaims: Function;\n  GetClaimingTypes: Function;\n  getAllApplications: Function;\n  GetAllSessionPlans: Function;\n  getDocumentCategory: Function;\n  getDocumentSubCategory: Function;\n  getDocumentFields: Function;\n  PushPopupAlert: (alert: PopupAlertData) => void;\n};\n\nconst _ClaimingReport: React.FC<AppProps> = (props) => {\n  const [thisPeriod, setThisPeriod] = useState<SessionPlanInterface | null>(\n    null\n  );\n  const [thisLevel, setThisLevel] = useState<number | \"all\">(\"all\");\n  const [loading, setLoading] = useState<boolean>(true);\n  const [loadingSession, setLoadingSession] = useState<boolean>(true);\n  const [periodChanged, setPeriodChanged] = useState<boolean>(false);\n  const [loadingPosition, setLoadingPosition] = useState<boolean>(true);\n  const [loadingApplications, setLoadingApplications] = useState<boolean>(true);\n  const [loadingClaims, setLoadingClaims] = useState<boolean>(true);\n  const [loadingCourses, setLoadingCourses] = useState<boolean>(true);\n  const [loadingDocuments, setLoadingDocuments] = useState<boolean>(true);\n  const [loadingInstitutes, setLoadingInstitutes] = useState<boolean>(true);\n  const [loadingClarifications, setLoadingClarifications] =\n    useState<boolean>(true);\n  const [loadingFields, setLoadingFields] = useState<boolean>(true);\n  const [downloading, setDownloading] = useState<boolean>(false);\n  const [claimToPrint, setClaimToPrint] = useState<\n    ClaimToPrintInterface[] | null\n  >();\n\n  const [sortProperty, setSortProperty] = useState<string>(\"\");\n  const [isSorted, setIsSorted] = useState<boolean>(false);\n  const [sortOrder, setSortOrder] = useState<\"ASC\" | \"DESC\">(\"ASC\");\n  const [searchInput, setSearchInput] = useState<string>(\"\");\n  const [generateReportModal, setGenerateReportModal] = useState<{\n    reportType: \"EXCEL\" | \"PDF\";\n    status: boolean;\n  } | null>(null);\n  const [reportTitle, setReportTitle] = useState<string>(\"\");\n  const [reportContent, setReportContent] =\n    useState<claimReportContentInterface[]>(defaultReportContent);\n  const [selectAll, setSelectAll] = useState<boolean>(true);\n  const [formError, setFormError] = useState<{\n    element: string;\n    msg: string;\n  } | null>(null);\n  const [selectPeriod, setSelectPeriod] = useState<boolean>(false);\n  const [thisEducation, setThisEducation] = useState<\n    education_category | \"all\"\n  >(\"all\");\n\n  useEffect(() => {\n    // LOADING EDUCATION CATEGORY =================================\n    if (\n      props.schoolLevels.education_categories === null ||\n      props.schoolLevels.education_categories.length === 0\n    ) {\n      props.loadEducationCategories(setLoadingInstitutes);\n    } else {\n      setLoadingInstitutes(false);\n    }\n    // END LOADING EDUCATION CATEGORY =================================\n    // LOADING CLAIM TYPES ========================================\n    if (props.claiming.claimTypes === null) {\n      props.GetClaimingTypes((status: boolean, msg: string) => {\n        if (status === false) {\n          if (msg.length > 0) {\n            props.PushPopupAlert({\n              title: msg,\n              theme: PopupAlertTheme.danger,\n            });\n          }\n        }\n      });\n    }\n    // END LOADING CLAIM TYPES ========================================\n    // LOADING APPLICATION SESSION ====================================\n    if (props.application_sessions === null) {\n      props.GetAllSessionPlans((status: boolean, msg: string) => {\n        if (!status) {\n          setLoadingSession(false);\n          setLoading(false);\n          if (msg.length) {\n            props.PushPopupAlert({\n              title: msg,\n              theme: PopupAlertTheme.danger,\n            });\n          }\n        }\n      });\n    } else if (loadingSession) {\n      setLoading(false);\n      setLoadingSession(false);\n    }\n\n    // SETTING ACTIVE SESSION ==========================\n    if (\n      thisPeriod === null &&\n      !loadingSession &&\n      props.application_sessions &&\n      props.application_sessions.length > 0\n    ) {\n      let thisSession = props.application_sessions.find(\n        (item) => item.is_active === true\n      );\n      setThisPeriod(thisSession ? thisSession : props.application_sessions[0]);\n      if (props.claiming.allAnswer === null) {\n        props.getAllAnswers(\n          thisSession\n            ? thisSession.session_plan_id\n            : props.application_sessions[0].session_plan_id,\n          (status: boolean, msg: string) => {\n            setLoading(status);\n            if (!status && msg.length) {\n              props.PushPopupAlert({\n                title: msg,\n                theme: PopupAlertTheme.danger,\n              });\n            }\n          }\n        );\n      }\n    }\n\n    // LOADING DOCUMENT CATEGORIES ==========================\n    if (!props.documentReducer.documentCategory && loadingDocuments) {\n      props.getDocumentCategory();\n      setLoadingDocuments(false);\n    } else if (loadingDocuments) {\n      setLoadingDocuments(false);\n    }\n    // LOADING DOCUMENT CLARIFICATIONS ==========================\n    if (!props.documentReducer.documentSubCategory && loadingClarifications) {\n      props.getDocumentSubCategory();\n      setLoadingClarifications(false);\n    } else if (loadingClarifications) {\n      setLoadingClarifications(false);\n    }\n    // LOADING DOCUMENT FIELDS ==========================\n    if (!props.documentReducer.documentFields && loadingFields) {\n      props.getDocumentFields();\n      setLoadingFields(false);\n    } else if (loadingFields) {\n      setLoadingFields(false);\n    }\n\n    // LOADING CLAIMING OF CURRENT CANDIDATES ================================\n    if (props.claiming.allClaims === null && thisPeriod !== null) {\n      props.getAllClaims(\n        2,\n        thisPeriod.session_plan_id,\n        (status: boolean, msg: string) => {\n          !status && setLoadingClaims(status);\n          if (status === false && msg.length) {\n            props.PushPopupAlert({\n              title: msg,\n              theme: PopupAlertTheme.danger,\n            });\n          }\n        }\n      );\n    } else if (thisPeriod && loadingClaims) {\n      setLoadingClaims(false);\n    }\n\n    // LOADING CLAIMING OF CURRENT CANDIDATES ================================\n    if (props.claiming.allApplications === null && thisPeriod !== null) {\n      props.getAllApplications(\n        thisPeriod.session_plan_id,\n        (status: boolean, msg: string) => {\n          !status && setLoadingApplications(status);\n          if (status === false && msg.length) {\n            props.PushPopupAlert({\n              title: msg,\n              theme: PopupAlertTheme.danger,\n            });\n          }\n        }\n      );\n    } else if (thisPeriod && loadingApplications) {\n      setLoadingApplications(false);\n    }\n\n    if (props.systemPositions === null) {\n      props.getPositions((status: boolean, msg: string) => {\n        setLoadingPosition(status);\n        console.log({ status: status, msg: msg });\n        if (msg.length) {\n          props.PushPopupAlert({\n            title: msg,\n            theme: PopupAlertTheme.danger,\n          });\n        }\n      });\n    } else if (loadingPosition) {\n      setLoadingPosition(false);\n    }\n\n    // LOADING COURSE ====================================\n    if (\n      props.courses === null ||\n      (props.courses.length === 0 && loadingCourses)\n    ) {\n      props.loadCourses(setLoadingCourses);\n    } else if (loadingCourses) {\n      setLoadingCourses(false);\n    }\n  }, [\n    loadingApplications,\n    loadingClaims,\n    loadingClarifications,\n    loadingCourses,\n    loadingDocuments,\n    loadingFields,\n    loadingPosition,\n    loadingSession,\n    props,\n    thisPeriod,\n  ]);\n\n  if (\n    loading === true ||\n    props.courses === null ||\n    props.systemPositions === null\n  ) {\n    return (\n      <div className=\"text-center mt-7 font-bold text-4xl text-gray-400 animate-pulse\">\n        Loading Data...\n      </div>\n    );\n  }\n\n  const displayClaimTitle = (thisClaim: CandidateClaimInterface): string => {\n    let result: string = thisClaim.claiming_on_id;\n    if (thisClaim.type_key === PlansTypeKeys.DOCUMENT_VALIDATION) {\n      result =\n        thisClaim.userDetails.details.filter(\n          (item) => item.validation_status !== \"waiting\"\n        ).length > 0\n          ? adminDisplayClaimTitle(\n              props.documentReducer,\n              thisClaim.userDetails.details.filter(\n                (item) => item.validation_status !== \"waiting\"\n              ),\n              thisClaim\n            )\n          : \"Document not found\";\n    }\n    if (thisClaim.type_key === PlansTypeKeys.APPLICATION) {\n      if (props.claiming.allApplications) {\n        let thisApplication = props.claiming.allApplications.find(\n          (item) => item._id === thisClaim.claiming_on_id\n        );\n        if (\n          thisApplication &&\n          props.claiming.allApplications &&\n          props.systemPositions\n        ) {\n          let thisPosition = props.systemPositions.find(\n            (item) => item.position_id === thisApplication!.position\n          );\n          if (thisPosition) {\n            result = thisPosition.position_title;\n          } else {\n            result = \"Application not found\";\n          }\n        }\n      }\n    }\n\n    if (\n      thisClaim.type_key === PlansTypeKeys.EXAMINATION &&\n      props.courses &&\n      props.claiming.allAnswer\n    ) {\n      let thisAnswer = getCourseIdBySheetId(\n        props.claiming.allAnswer,\n        thisClaim.claiming_on_id\n      );\n      if (thisAnswer && getCourseById(props.courses, thisAnswer.course)) {\n        result =\n          \"Exam of \" +\n          getCourseById(props.courses, thisAnswer.course)!.course_name;\n      } else {\n        result = \"Unknown exam\";\n      }\n    }\n\n    return result;\n  };\n\n  const getClaimInstitute = (\n    thisClaim: CandidateClaimInterface\n  ): string | null => {\n    if (thisClaim.type_key === PlansTypeKeys.DOCUMENT_VALIDATION) {\n      return null;\n    }\n    if (thisClaim.type_key === PlansTypeKeys.APPLICATION) {\n      if (props.claiming.allApplications) {\n        let thisApplication = props.claiming.allApplications.find(\n          (item) => item._id === thisClaim.claiming_on_id\n        );\n        if (\n          thisApplication &&\n          props.claiming.allApplications &&\n          props.systemPositions\n        ) {\n          // return thisApplication.\n          let thisPosition = props.systemPositions.find(\n            (item) => item.position_id === thisApplication!.position\n          );\n          if (thisPosition) {\n            return thisPosition.education_institute_id.education_institute_id;\n          }\n        }\n      }\n    }\n\n    return null;\n  };\n\n  const onPeriodChange = (period_id: string) => {\n    setPeriodChanged(true);\n    props.getAllClaims(2, period_id, (status: boolean, msg: string) => {\n      !status && setPeriodChanged(false);\n      if (status === false && msg.length) {\n        props.PushPopupAlert({\n          title: msg,\n          theme: PopupAlertTheme.danger,\n        });\n      }\n    });\n  };\n\n  const isClaimTypeActive = (\n    selectedType: PlansTypeKeys | \"all\",\n    currentType: PlansTypeKeys | \"all\"\n  ): boolean => {\n    if (currentType === \"all\" && selectedType === \"all\") {\n      return true;\n    } else if (currentType !== \"all\" && selectedType !== \"all\") {\n      if (currentType === selectedType) {\n        return true;\n      }\n    }\n    return false;\n  };\n\n  const setSort = (thisProperty: string) => {\n    if (sortProperty === thisProperty && sortOrder === \"ASC\") {\n      setSortOrder(\"DESC\");\n    } else {\n      setSortOrder(\"ASC\");\n    }\n    setSortProperty(thisProperty);\n    setIsSorted(true);\n  };\n\n  const ClaimTypes = (\n    claims: ClaimToPrintInterface[]\n  ): {\n    title: string;\n    count: number;\n    type: PlansTypeKeys | \"all\";\n  }[] => {\n    let output: {\n      title: string;\n      count: number;\n      type: PlansTypeKeys | \"all\";\n    }[] = [{ title: \"All types\", count: claims.length, type: \"all\" }];\n\n    Object.values(PlansTypeKeys).forEach((PlansKey) => {\n      if (PlansKey !== PlansTypeKeys.MARKS_PUBLICATION) {\n        output.push({\n          title: capitalizeFirstLetter(reportClaimType(PlansKey)),\n          count:\n            claims.length > 0\n              ? claims.filter(\n                  (itm) => itm.claim_type === reportClaimType(PlansKey)\n                ).length\n              : 0,\n          type: PlansKey,\n        });\n      }\n    });\n\n    return output;\n  };\n\n  const ClaimLevels = (\n    claims: ClaimToPrintInterface[]\n  ): {\n    title: string;\n    count: number;\n    level: number | \"all\";\n  }[] => {\n    let output: {\n        title: string;\n        count: number;\n        level: number | \"all\";\n      }[] = [{ title: \"All levels\", count: claims.length, level: \"all\" }],\n      levels: number[] = [1, 2];\n    for (let i in levels) {\n      output.push({\n        title: \"Level \" + levels[i],\n        count: claims.filter((itm) => itm.claim_level === levels[i]).length,\n        level: levels[i],\n      });\n    }\n    return output;\n  };\n\n  const updateReportContent = (key: claimReportContentKeyInterface) => {\n    let index: number = reportContent.findIndex((item) => item.key === key);\n    let newArray: claimReportContentInterface[] = reportContent;\n    newArray[index].status = !newArray[index].status;\n    setReportContent(newArray);\n    let isSelectAllNeeded = newArray.find((item) => item.status === false);\n    if (isSelectAllNeeded) {\n      setSelectAll(false);\n    } else {\n      setSelectAll(true);\n    }\n\n    // UPDATE APPLICATION LIST FOR UPDATE ==============================\n    updateClaimToPrint();\n  };\n\n  const updateClaimToPrint = () => {\n    // UPDATE REPORT TITLE ========================\n    if (thisPeriod) {\n      let title = \"Claim Report \" + thisPeriod.session_plan_name;\n      // if (thisLevel!==\"all\") {\n      //   title = \"Claim Report - Level \"+thisLevel + thisPeriod.session_plan_name;\n      // }\n      setReportTitle(title);\n    }\n    // UPDATE CONTENT =============================\n    if (props.claiming.allClaims && props.claiming.claimTypes) {\n      let arrayNew: ClaimToPrintInterface[] = [];\n      let n: number = 1;\n      for (const key in props.claiming.allClaims) {\n        if (\n          Object.prototype.hasOwnProperty.call(props.claiming.allClaims, key)\n        ) {\n          for (const keyClaim in props.claiming.allClaims[key].claims) {\n            if (\n              Object.prototype.hasOwnProperty.call(\n                props.claiming.allClaims[key].claims,\n                keyClaim\n              )\n            ) {\n              const element = props.claiming.allClaims[key].claims[keyClaim];\n              const thisType = whichClaimType(props.claiming.allClaims[key]);\n              let dataArray: ClaimToPrintInterface = {\n                claim_id: n,\n                names:\n                  props.claiming.allClaims[key].userDetails.user_info.fname +\n                  \" \" +\n                  props.claiming.allClaims[key].userDetails.user_info.lname,\n                gender: props.claiming.allClaims[key].userDetails.user_info.sex\n                  ? \"Male\"\n                  : \"Female\",\n                national_id: props.claiming.allClaims[key].userDetails.n_id!,\n                phone: props.claiming.allClaims[key].userDetails.phone_number,\n                email: props.claiming.allClaims[key].userDetails.email,\n                claim_type: thisType ? thisType : \"\",\n                claim_level: element.level,\n                education_category: \"\",\n                claim_session: thisPeriod ? thisPeriod.session_plan_name : \"\",\n                date: DATE(element.createdAt),\n                decision: element.decision_taken_status\n                  ? element.decision_taken_status\n                  : \"PENDING\",\n                claim_title: displayClaimTitle(props.claiming.allClaims[key]),\n              };\n              for (const key in reportContent) {\n                if (Object.prototype.hasOwnProperty.call(reportContent, key)) {\n                  if (!reportContent[key].status) {\n                    delete dataArray[reportContent[key].key];\n                  }\n                }\n              }\n              arrayNew.push(dataArray);\n              n++;\n            }\n          }\n        }\n      }\n      setClaimToPrint(arrayNew);\n      arrayNew = [];\n      n = 1;\n    }\n  };\n\n  const FC_ClaimData = (\n    allClaims: CandidateClaimInterface[] | null\n  ): ClaimToPrintInterface[] | null => {\n    if (allClaims === null) return null;\n    let arrayNew: ClaimToPrintInterface[] = [];\n    let n: number = 1;\n    // LOOP IN ALL CLAIM ONE BY ONE ###########################\n    for (const key in allClaims) {\n      if (Object.prototype.hasOwnProperty.call(allClaims, key)) {\n        // LOOP IN ALL CLAIM OF ONE FILE ONE BY ONE ===========================\n        for (const keyClaim in allClaims[key].claims) {\n          if (\n            Object.prototype.hasOwnProperty.call(\n              allClaims[key].claims,\n              keyClaim\n            )\n          ) {\n            const element = allClaims[key].claims[keyClaim];\n            const thisType = whichClaimType(allClaims[key]);\n            let dataArray: ClaimToPrintInterface = {\n              claim_id: n,\n              names:\n                allClaims[key].userDetails.user_info.fname +\n                \" \" +\n                allClaims[key].userDetails.user_info.lname,\n              gender: allClaims[key].userDetails.user_info.sex\n                ? \"Male\"\n                : \"Female\",\n              national_id: allClaims[key].userDetails.n_id!,\n              phone: allClaims[key].userDetails.phone_number,\n              email: allClaims[key].userDetails.email,\n              claim_type: thisType ? thisType : \"\",\n              claim_level: element.level,\n              education_category: getClaimInstitute(allClaims[key]),\n              claim_session: thisPeriod ? thisPeriod.session_plan_name : \"\",\n              date: DATE(element.createdAt),\n              decision: element.decision_taken_status\n                ? element.decision_taken_status\n                : \"PENDING\",\n              claim_title: displayClaimTitle(allClaims[key]),\n            };\n            // for (const key in reportContent) {\n            //   if (Object.prototype.hasOwnProperty.call(reportContent, key)) {\n            //     if (!reportContent[key].status) {\n            //       delete dataArray[reportContent[key].key];\n            //     }\n            //   }\n            // }\n            arrayNew.push(dataArray);\n            n++;\n          }\n        }\n      }\n    }\n    return arrayNew;\n  };\n\n  const resetReportContent = (currentState: boolean) => {\n    let newArray: claimReportContentInterface[] = reportContent;\n    for (const key in newArray) {\n      if (isChangeAllowed(newArray[key].key)) {\n        newArray[key].status = !currentState;\n      }\n    }\n\n    setReportContent(newArray);\n    setSelectAll(!currentState);\n    updateClaimToPrint();\n  };\n\n  const isChangeAllowed = (key: claimReportContentKeyInterface): boolean => {\n    if (\n      key === claimReportContentKeyInterface.names ||\n      key === claimReportContentKeyInterface.decision ||\n      key === claimReportContentKeyInterface.claim_session ||\n      key === claimReportContentKeyInterface.claim_type ||\n      key === claimReportContentKeyInterface.date\n    ) {\n      return false;\n    }\n    return true;\n  };\n\n  const FC_GeneratePDF = () => {\n    if (!document.querySelectorAll(\"#report_content tbody tr\").length) {\n      props.PushPopupAlert({\n        title: `Can't generate Report of empty Data`,\n        theme: PopupAlertTheme.warning,\n      });\n      return;\n    }\n\n    if (thisPeriod) {\n      const table: HTMLElement | null =\n        document.getElementById(\"report_content\");\n      const reportSettings: reportSettingsInterface = {\n        doneBy: props.auth.user.fname + \" \" + props.auth.user.lname,\n        title: \"Claim Report\",\n        subjectTitle: \"Claim type\",\n        subject:\n          props.claiming.selectedClaimType === \"all\"\n            ? \"All Types\"\n            : props.claiming.selectedClaimType,\n        period: thisPeriod.session_plan_name,\n        footer: \"Online Recruitment\",\n        institute:\n          thisEducation === \"all\"\n            ? \"All institute\"\n            : thisEducation.education_category_title,\n      };\n      table && generatePDF(reportSettings, table, setDownloading);\n    }\n  };\n\n  const FC_FilterClaims = (\n    allClaims: ClaimToPrintInterface[],\n    claimType: PlansTypeKeys | \"all\",\n    claimLevel: number | \"all\",\n    institute: education_category | \"all\"\n  ): ClaimToPrintInterface[] => {\n    let result: ClaimToPrintInterface[] = allClaims;\n    if (claimType !== \"all\") {\n      result = result.filter((item) => item.claim_type === claimType);\n    }\n    if (claimLevel !== \"all\") {\n      result = result.filter((item) => item.claim_level === claimLevel);\n    }\n\n    if (institute !== \"all\") {\n      result = result.filter(\n        (item) =>\n          item.education_category === null ||\n          item.education_category === institute.education_institute_id\n      );\n    }\n\n    return result;\n  };\n\n  return (\n    <Fragment>\n      <SideNavigation>\n        <div className=\"flex flex-col mb-4\">\n          <span className=\"text-sm text-gray-600 mb-2\">\n            Education categories:\n          </span>\n          {props.schoolLevels.education_categories === null ||\n          loadingInstitutes ? (\n            <Loading />\n          ) : props.schoolLevels.education_categories.length === 0 ? (\n            <span>No result found</span>\n          ) : (\n            <Fragment>\n              <div\n                onClick={() => setThisEducation(\"all\")}\n                className={`border rounded px-2 py-2 mb-2 cursor-pointer ${\n                  thisEducation === \"all\"\n                    ? \"bg-blue-600 text-white hover:bg-blue-100 hover:text-blue-600 hover:border-blue-500\"\n                    : \"hover:bg-blue-100 hover:text-blue-600 hover:border-blue-500\"\n                } font-bold flex flex-row items-center gap-2`}\n              >\n                {thisEducation === \"all\" ? (\n                  <MdRadioButtonChecked />\n                ) : (\n                  <MdRadioButtonUnchecked />\n                )}\n                <span>All</span>\n              </div>\n              {props.schoolLevels.education_categories.map((item, i) => (\n                <div\n                  onClick={() => setThisEducation(item)}\n                  key={i + 1}\n                  className={`border rounded px-2 py-2 mb-2 cursor-pointer ${\n                    thisEducation !== \"all\" &&\n                    thisEducation.education_institute_id ===\n                      item.education_institute_id\n                      ? \"bg-blue-600 text-white hover:bg-blue-100 hover:text-blue-600 hover:border-blue-500\"\n                      : \"hover:bg-blue-100 hover:text-blue-600 hover:border-blue-500\"\n                  } font-bold flex flex-row items-center gap-2`}\n                >\n                  {thisEducation !== \"all\" &&\n                  thisEducation.education_institute_id ===\n                    item.education_institute_id ? (\n                    <MdRadioButtonChecked />\n                  ) : (\n                    <MdRadioButtonUnchecked />\n                  )}\n                  <span>{item.education_category_title}</span>\n                </div>\n              ))}\n            </Fragment>\n          )}\n        </div>\n        <div className=\"\">\n          <div className=\"text-gray-600 text-sm mb-2\">Selected period:</div>\n          <div\n            onClick={() => setSelectPeriod(true)}\n            className=\"font-bold bg-blue-50 border border-blue-200 rounded py-2 cursor-pointer text-xs px-2 hover:underline  text-blue-600  mb-4 w-full flex flex-row items-center animate__animated animate__zoomIn\"\n          >\n            {thisPeriod !== null\n              ? `${thisPeriod.session_plan_name} - ${thisPeriod.period}`\n              : \"Filter by period\"}\n            <FiEdit className=\"text-3xl text-blue-600\" />\n          </div>\n        </div>\n        <div className=\"pt-1\">\n          <div className=\"text-sm text-gray-700 pb-2 pt-2\">Claim types:</div>\n          {props.claiming.claimTypes === null ||\n          FC_ClaimData(props.claiming.allClaims) === null ? (\n            <Loading />\n          ) : (\n            ClaimTypes(FC_ClaimData(props.claiming.allClaims)!).map(\n              (item, index: number) => (\n                <div\n                  onClick={() =>\n                    props.setSelectedClaimType(reportClaimType(item.type))\n                  }\n                  key={item.title + index}\n                >\n                  <MainItem\n                    title={item.title}\n                    count={item.count}\n                    active={isClaimTypeActive(\n                      props.claiming.selectedClaimType,\n                      item.type\n                    )}\n                  />\n                </div>\n              )\n            )\n          )}\n        </div>\n        <div className=\"pt-1\">\n          <div className=\"text-sm text-gray-700 pb-2 pt-2\">Claim level:</div>\n          {props.claiming.claimTypes === null ||\n          FC_ClaimData(props.claiming.allClaims) === null ? (\n            <Loading />\n          ) : (\n            ClaimLevels(FC_ClaimData(props.claiming.allClaims)!).map(\n              (item, index: number) => (\n                <div\n                  onClick={() => setThisLevel(item.level)}\n                  key={item.title + index}\n                >\n                  <MainItem\n                    title={item.title}\n                    count={item.count}\n                    active={item.level === thisLevel}\n                  />\n                </div>\n              )\n            )\n          )}\n        </div>\n      </SideNavigation>\n      <section>\n        {/* REPORT TITLE ============================================ */}\n        <div className=\"grid md:grid-cols-12\">\n          <div className=\"col-span-8\">\n            <div className=\"mt-4 mx-4 flex flex-col gap-1\">\n              <span className=\"text-3xl font-bold text-gray-700\">\n                Claim report\n              </span>\n            </div>\n          </div>\n          <div className=\"col-span-4\">\n            <div className=\"float-right mt-2\">\n              {props.claiming.allClaims && props.claiming.allClaims.length > 0 && (\n                <div className=\"flex flex-row items-center justify-end font-bold mb-2\">\n                  <BiExport className=\"text-2xl text-gray-500\" />\n                  <span className=\"text-gray-500\">Export as</span>\n                  <button\n                    className=\"px-4 py-1 ml-1 rounded bg-white border hover:text-blue-600 font-bold hover:bg-blue-50 border-gray-200\"\n                    disabled={loading}\n                    onClick={() => {\n                      updateClaimToPrint();\n                      setGenerateReportModal({\n                        reportType: \"EXCEL\",\n                        status: true,\n                      });\n                    }}\n                  >\n                    EXCEL\n                  </button>\n                  <button\n                    className={`px-4 py-1 ml-1 rounded bg-white border hover:text-blue-600 font-bold hover:bg-blue-50 border-gray-200 ${\n                      downloading && \"cursor-wait\"\n                    }`}\n                    onClick={() => FC_GeneratePDF()}\n                    disabled={loading || downloading}\n                  >\n                    PDF\n                  </button>\n                </div>\n              )}\n            </div>\n          </div>\n        </div>\n        {/* END REPORT TITLE ============================================ */}\n        <div className=\"bg-white my-4\">\n          <div className=\"w-full px-2 py-2\">\n            <input\n              onChange={(e) => setSearchInput(e.target.value)}\n              type=\"text\"\n              value={searchInput}\n              placeholder=\"Search...\"\n              className=\"w-full bg-gray-100 py-2 px-3 rounded focus:border-gray-800\"\n              disabled={\n                props.claiming.allClaims === null ||\n                props.claiming.claimTypes === null ||\n                FC_ClaimData(props.claiming.allClaims) === null ||\n                periodChanged\n              }\n            />\n          </div>\n          <table className=\"w-full shadow\" id=\"report_content\">\n            <thead className=\"bg-white border-b-2 border-gray-300 text-gray-600 font-bold text-sm\">\n              <tr>\n                <td className=\"px-2 py-2\">#</td>\n                <td\n                  className=\"px-2 py-2 cursor-pointer\"\n                  onClick={() => setSort(\"names\")}\n                >\n                  <div className=\"flex items-center gap-1\">\n                    Applicant names <BiSort />\n                  </div>\n                </td>\n                <td className=\"px-2 py-2\">National ID</td>\n                <td\n                  className=\"px-2 py-2 cursor-pointer\"\n                  onClick={() => setSort(\"gender\")}\n                >\n                  <div className=\"flex items-center gap-1\">\n                    Gender <BiSort />\n                  </div>\n                </td>\n                <td className=\"px-2 py-2\">Phone</td>\n                <td\n                  className=\"px-2 py-2 cursor-pointer\"\n                  onClick={() => setSort(\"claim_title\")}\n                >\n                  <div className=\"flex items-center gap-1\">\n                    Claim Title <BiSort />\n                  </div>\n                </td>\n                <td\n                  className=\"px-2 py-2 cursor-pointer\"\n                  onClick={() => setSort(\"claim_type\")}\n                >\n                  <div className=\"flex items-center gap-1\">\n                    Claim Type <BiSort />\n                  </div>\n                </td>\n                <td\n                  className=\"px-2 py-2 cursor-pointer\"\n                  onClick={() => setSort(\"claim_level\")}\n                >\n                  <div className=\"flex items-center gap-1\">\n                    Claim Level <BiSort />\n                  </div>\n                </td>\n                <td\n                  className=\"px-2 py-2 cursor-pointer\"\n                  onClick={() => setSort(\"decision\")}\n                >\n                  <div className=\"flex items-center gap-1\">\n                    Status <BiSort />\n                  </div>\n                </td>\n                <td\n                  className=\"px-2 py-2 cursor-pointer\"\n                  onClick={() => setSort(\"date\")}\n                >\n                  <div className=\"flex items-center gap-1\">\n                    Date <BiSort />\n                  </div>\n                </td>\n              </tr>\n            </thead>\n            <tbody>\n              {props.claiming.allClaims === null ||\n              props.claiming.claimTypes === null ||\n              periodChanged ? (\n                <TableLoading cols={10} />\n              ) : FC_ClaimData(props.claiming.allClaims) === null ? (\n                <TableLoading cols={10} />\n              ) : FC_FilterClaims(\n                  FC_ClaimData(props.claiming.allClaims)!,\n                  props.claiming.selectedClaimType,\n                  thisLevel,\n                  thisEducation\n                ).length === 0 ? (\n                <tr>\n                  <td colSpan={10} className=\"px-2 py-2\">\n                    <div className=\"flex flex-col text-gray-400 items-center justify-center bg-gray-100 rounded py-10\">\n                      <ImFilesEmpty className=\"text-8xl text-gray-400 mb-2 animate__animated animate__shakeX\" />\n                      <span className=\"text-sm font-bold\">\n                        No result found! Please try to search again\n                      </span>\n                      <div className=\"w-full mt-2 flex flex-row items-center justify-center\">\n                        <ul className=\"text-sm py-2 text-blue-600 font-bold flex flex-row gap-2\">\n                          <li\n                            onClick={() => setSelectPeriod(true)}\n                            className=\"underline text-gray-500 cursor-pointer\"\n                          >\n                            Filter by period\n                          </li>\n                          <li className=\"text-gray-400 italic\">or</li>\n                          <li className=\"text-gray-500\">\n                            Filter by Claim type\n                          </li>\n                          <li className=\"text-gray-400 italic\">or</li>\n                          <li className=\"text-gray-500\">\n                            Filter by Claim Level\n                          </li>\n                        </ul>\n                      </div>\n                    </div>\n                  </td>\n                </tr>\n              ) : (\n                sortThisArray(\n                  isSorted,\n                  searchData(\n                    FC_FilterClaims(\n                      FC_ClaimData(props.claiming.allClaims)!,\n                      props.claiming.selectedClaimType,\n                      thisLevel,\n                      thisEducation\n                    ),\n                    searchInput\n                  ),\n                  sortProperty,\n                  sortOrder\n                ).map((item, i) => (\n                  <tr\n                    key={i + 1}\n                    className={`${\n                      i % 2 !== 0 ? \"bg-gray-100\" : \"bg-white\"\n                    } text-gray-600 hover:bg-blue-100 hover:text-blue-700 border-b border-gray-300 hover:border-blue-500 text-sm`}\n                  >\n                    <td className=\"px-2 py-2\">{i + 1}</td>\n                    <td className=\"px-2 py-2\">{item.names}</td>\n                    <td className=\"px-2 py-2\">{item.national_id}</td>\n                    <td className=\"px-2 py-2\">{item.gender}</td>\n                    <td className=\"px-2 py-2\">{item.phone}</td>\n                    <td className=\"px-2 py-2\">{item.claim_title}</td>\n                    <td className=\"px-2 py-2\">{item.claim_type}</td>\n                    <td className=\"px-2 py-2\">{\"Level \" + item.claim_level}</td>\n                    <td className=\"px-2 py-2\">\n                      {item.decision}\n                      {/* {capitalizeFirstLetter(item.decision)} */}\n                    </td>\n                    <td className=\"px-2 py-2\">{item.date}</td>\n                  </tr>\n                ))\n              )}\n            </tbody>\n          </table>\n        </div>\n      </section>\n      {/* GENERATE DYNAMIC REPORT CONTENT MODAL */}\n      {generateReportModal !== null && generateReportModal.status === true && (\n        <Modal\n          title={\n            <div className=\"flex flex-row gap-4 items-center\">\n              {/* <IoBriefcase className=\"text-5xl text-gray-500\" /> */}\n              <div className=\"flex flex-col\">\n                <span className=\"font-bold text-2xl text-gray-500\">\n                  Generating Report contents\n                </span>\n                <span className=\"text-sm text-blue-600 font-normal\">\n                  Generating {generateReportModal.reportType} Report\n                </span>\n              </div>\n            </div>\n          }\n          backDrop={true}\n          theme={Themes.default}\n          close={() => setGenerateReportModal(null)}\n          backDropClose={false}\n          widthSizeClass={ModalSize.medium}\n          displayClose={true}\n          padding={{ title: true }}\n        >\n          <div className=\"px-6\">\n            <div className=\"my-2 text-base text-gray-700 sm:text-lg\">\n              <div className=\"flex flex-col\">\n                <label>Title</label>\n                <input\n                  type=\"text\"\n                  className={`text-left input-white w-20 inline-block ${\n                    formError && formError.element === \"report_title\"\n                      ? \"border-red-500\"\n                      : \"border-gray-500\"\n                  } border-2`}\n                  placeholder=\"Sub Category Title\"\n                  value={reportTitle}\n                  onChange={(e) => {\n                    setFormError(null);\n                    setReportTitle(e.target.value);\n                  }}\n                  disabled={loading}\n                />\n                {formError && formError.element === \"report_title\" && (\n                  <span className=\"text-red-500\">{formError.msg}</span>\n                )}\n              </div>\n              <div className=\"flex flex-col mt-2\">\n                <label>Report content</label>\n                <div className=\"grid grid-cols-2 md:grid-cols-3 items-center gap-2 mt-2\">\n                  {reportContent.map((item, index) => (\n                    <div\n                      key={index}\n                      className={`flex items-center gap-1 ${\n                        isChangeAllowed(item.key)\n                          ? \"cursor-pointer\"\n                          : \"cursor-not-allowed\"\n                      }`}\n                      onClick={() =>\n                        isChangeAllowed(item.key) &&\n                        updateReportContent(item.key)\n                      }\n                      title={\n                        !isChangeAllowed(item.key)\n                          ? \"Required for every report!\"\n                          : \"\"\n                      }\n                    >\n                      {item.status ? (\n                        <MdCheckBox className=\"w-6 h-6 text-blue-700\" />\n                      ) : (\n                        <MdCheckBoxOutlineBlank className=\"w-6 h-6\" />\n                      )}\n                      <span>{item.title}</span>\n                    </div>\n                  ))}\n                </div>\n                {formError && formError.element === \"report_content\" && (\n                  <span className=\"text-red-500\">{formError.msg}</span>\n                )}\n              </div>\n            </div>\n            <div className=\"flex justify-between mb-2 mt-4\">\n              <div\n                className={`flex items-center gap-1 cursor-pointer`}\n                onClick={() => resetReportContent(selectAll)}\n              >\n                {selectAll ? (\n                  <MdCheckBox className=\"w-6 h-6 text-blue-700\" />\n                ) : (\n                  <MdCheckBoxOutlineBlank className=\"w-6 h-6\" />\n                )}\n                <span>Select all</span>\n              </div>\n\n              {claimToPrint && !loading && (\n                <ExportToExcel\n                  fileData={claimToPrint}\n                  fileName={reportTitle}\n                  btnName=\"Generate\"\n                />\n              )}\n            </div>\n          </div>\n        </Modal>\n      )}\n      {/* END GENERATE DYNAMIC REPORT CONTENT MODAL */}\n      {selectPeriod && (\n        <Modal\n          title={\n            <div className=\"flex flex-row gap-4 items-center\">\n              <MdHistory className=\"text-5xl text-blue-600\" />\n              <span className=\"flex flex-col\">Choose a period</span>\n            </div>\n          }\n          backDrop={true}\n          theme={Themes.default}\n          close={() => thisPeriod !== null && setSelectPeriod(false)}\n          backDropClose={true}\n          widthSizeClass={ModalSize.extraLarge}\n          displayClose={true}\n          padding={{ title: true }}\n        >\n          <ChooseSession\n            allSession={props.application_sessions}\n            setSelectSession={(value: SessionPlanInterface | \"all\") => {\n              value !== \"all\" && setThisPeriod(value);\n              value !== \"all\" && onPeriodChange(value.session_plan_id);\n              value !== \"all\" && setSelectPeriod(false);\n            }}\n            chooseAll={false}\n            currentSelected={thisPeriod ? thisPeriod : \"all\"}\n          />\n        </Modal>\n      )}\n    </Fragment>\n  );\n};\n\nconst mapStateToProps = ({\n  auth,\n  system_settings,\n  sessionPlan,\n  claiming,\n  document,\n  course,\n  schoolLevels,\n}: StoreState): {\n  auth: Auth;\n  courses: course[] | null;\n  application_sessions: SessionPlanInterface[] | null;\n  systemPositions: PositionAPI[] | null;\n  claiming: ClaimingReducerType;\n  documentReducer: DocumentReducerInterface;\n  schoolLevels: schoolLevelsStoreInterface;\n} => {\n  return {\n    auth: auth,\n    application_sessions: sessionPlan.allSessionPlans,\n    systemPositions: system_settings.systemPositions,\n    claiming,\n    courses: course.courses,\n    documentReducer: document,\n    schoolLevels,\n  };\n};\n\nexport const ClaimingReport = connect(mapStateToProps, {\n  getAllClaims,\n  getAllAnswers,\n  GetClaimingTypes,\n  loadCourses,\n  getAllApplications,\n  GetAllSessionPlans,\n  loadEducationCategories,\n  getDocumentCategory,\n  getDocumentSubCategory,\n  getDocumentFields,\n  setSelectedClaimType,\n  getPositions,\n  PushPopupAlert,\n})(_ClaimingReport);\n"],"sourceRoot":""}
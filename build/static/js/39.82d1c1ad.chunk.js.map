{"version":3,"sources":["components/Table/Table.tsx","actions/settings.ts","shared/interfaces.tsx","containers/Positions/ViewRequirements.tsx","actions/schools.ts","interfaces/marks_publication.ts","containers/Positions/ViewPosition.tsx","containers/HeadTeacher/ReceivePost.tsx","containers/HeadTeacher/ViewRequest.tsx","containers/HeadTeacher/RequestList.tsx","containers/HeadTeacher/StepsHeader.tsx","containers/HeadTeacher/RequestPostForm.tsx","containers/HeadTeacher/RequestTeacher.tsx"],"names":["Table","props","table","tr","tableId","length","result","characters","charactersLength","i","charAt","Math","floor","random","FC_makeID","useState","totalItems","setTotalItems","totalPages","setTotalPages","currentPage","setCurrentPage","pages","setPages","pageSize","setPageSize","startIndex","setStartIndex","endIndex","setEndIndex","useEffect","pagination","tablePagination","document","getElementById","getElementsByTagName","ceil","min","_pages","Array","from","keys","map","style","display","className","tableSize","search","searchBG","type","placeholder","onChange","e","data","filterType","filter","td","rows","cols","toLowerCase","columns","textContent","innerText","indexOf","filterTable","target","value","disabled","loading","Number","tableClass","rounded","id","hideColumns","thColor","column","index","padding","alignText","isSortAllowed","onClick","switching","x","y","shouldSwitch","colIndex","dir","switchcount","innerHTML","parentNode","insertBefore","sortThisColumn","columnTitle","aria-label","page","pageIndex","getSystemSettings","callback","dispatch","a","setAxiosToken","axios","get","API","AUTH","res","ActionTypes","GET_SYSTEM_SETTINGS","payload","console","log","code_error","errorToText","disableSystemSetting","DISABLE_SYSTEM_SETTINGS","GetTaskAccess","response","task","title","key","permitted","GET_TASK_ACCESS","getPositions","APPLICATION","GET_POSTIONS","deletePosition","DELETE_POSITION","publishPosition","PUBLISH_POSITION","PostRequestStatusInterface","DocumentAttributesInterface","DocValidationStatusInterface","SESSION_PLAN_KEYS","DOCUMENT_VALIDATION","EXAMINATION","MARKS_PUBLICATION","PLACEMENT_TRANSFER","ViewRequirements","requirements","colSpan","item","subcategory_title","field_title","required","field_id","getSchools","GET_SCHOOLS","createSchool","schools","CREATE_SCHOOL","updateSchool","UPDATE_SCHOOL","deleteSchool","DELETE_SCHOOL","fetchSchoolPosts","school_id","PLACEMENT","schoolPosts","FETCH_SCHOOL_POSTS","getSchoolPlacement","GET_SCHOOL_PLACEMENT","createSchoolPost","CREATE_SCHOOL_POST","updateSchoolPost","TYPE","UPDATE_SCHOOL_POST","fetchDistrictPosts","district_id","districtPosts","FETCH_DISTRICT_POSTS","getDistrictPlacement","GET_DISTRICT_PLACEMENT","MarksPublicationCandidateStatus","marksPublicationCandidateReportContentKeyInterface","PlacedCandidateStatus","placementReportContentKeyInterface","FC_PositionDistinctCategory","PositionData","PositionsTemp","DistinctCategoriesTemp","DistinctCategoriesIds","DistinctSubCategoriesTemp","DistinctSubCategoriesIds","pos","req","thisRequirements","thisCategory","category","thisSubCategory","subcategory","field","position_requirement","thisField","push","category_id","user_detail_category_id","category_title","subcategory_id","user_detail_subcategory_id","_id","includes","connect","PushPopupAlert","loadingRequest","setLoadingRequest","position_id","status","name","window","confirm","patch","isPublished","theme","PopupAlertTheme","info","thisPositionCopy","thisPosition","setThisPosition","error","danger","position_title","description","school_level_id","school_level_name","education_institute_id","education_category_title","courses","course_name","course_code","course_id","isGuest","NoResultThemes","Dark","ReceivePost","submitRequest","thisPlacement","action","isEmptyOrSpaces","state","comment","setFormError","element","msg","received","thisPost","received_posts","requested_post_id","confirmed_posts","confirmed_by","auth","user","user_id","approval_date","needed_posts","male_number","female_number","occupied_posts","requested_by","requested_post_status","RECEIVED","confirmPlacement","role_error","post","placedStatus","waiting_list_id","placed_candidate_id","REJECTED","PLACED","user_access","message","loadingPost","setLoadingPost","getSchoolPlacementError","setState","placement_id","viewPost","setThisPost","setReceivedPosts","setModalState","this","getPositionById","systemPositions","CONFIRMED","getPlacementByRequest","placementList","INITIATED","capitalizeFirstLetter","src","AUTH_FILES","user_info","photo","alt","fname","lname","phone_number","email","formError","resize","Component","ViewRequest","Modal","backDrop","Themes","default","close","setViewPost","displayClose","backDropClose","widthSizeClass","ModalSize","large","body","footer","schoolPlacements","setPostId","setPositionId","setRequestedPosts","setRequestExplanation","setFemaleOnPosition","setMaleOnPosition","setFormSteps","ONE","TWO","setStepState","RequestList","setSearchInput","searchInput","setFilterByPosition","filterByPosition","position","schoolPost","NoResult","modalState","StepsHeader","currentStep","stepState","RequestPostForm","GetAllowedPositions","postPositionIds","Object","prototype","hasOwnProperty","call","preventDefault","requestedPosts","requestExplanation","thisSchool","find","positionId","maleOnPosition","femaleOnPosition","success","setSchoolLevel","selectedLevel","getPositionByLevelId","allPosition","levelId","formSteps","schoolLevels","school_levels","ViewPosition","onSubmit","htmlFor","system_settings","placements","request","PENDING","request_id","RequestTeacher","setLoading","postId","receivedPosts","componentDidMount","to","loadingCandidatesError","loadSchoolLevels","PostRequest"],"mappings":"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","file":"static/js/39.82d1c1ad.chunk.js","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { BiSort } from \"react-icons/bi\";\nimport { MdNavigateBefore, MdNavigateNext, MdSearch } from \"react-icons/md\";\n\nconst FC_makeID = (length: number = 5): string => {\n  let result: string = \"\";\n  let characters: string =\n    \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\n  let charactersLength = characters.length;\n  for (let i: number = 0; i < length; i++) {\n    result += characters.charAt(Math.floor(Math.random() * charactersLength));\n  }\n  return result;\n};\n\nexport const sortThisColumn = (\n  tableId: string,\n  colIndex: number = 0,\n  dir: \"asc\" | \"desc\" = \"asc\"\n) => {\n  var table,\n    rows,\n    switching,\n    i,\n    x,\n    y,\n    shouldSwitch,\n    switchcount = 0;\n  table = document.getElementById(tableId) as HTMLTableElement;\n  switching = true;\n  /* Make a loop that will continue until\n  no switching has been done: */\n  if (table) {\n    while (switching) {\n      //start by saying: no switching is done:\n      switching = false;\n      rows = table.rows;\n      /*Loop through all table rows (except the\n    first, which contains table headers):*/\n      for (i = 1; i < rows.length - 1; i++) {\n        //start by saying there should be no switching:\n        shouldSwitch = false;\n        /*Get the two elements you want to compare,\n      one from current row and one from the next:*/\n        x = rows[i].getElementsByTagName(\"TD\")[colIndex];\n        y = rows[i + 1].getElementsByTagName(\"TD\")[colIndex];\n        /*check if the two rows should switch place,\n      based on the direction, asc or desc:*/\n        if (dir === \"asc\" && x && y) {\n          if (x.innerHTML.toLowerCase() > y.innerHTML.toLowerCase()) {\n            //if so, mark as a switch and break the loop:\n            shouldSwitch = true;\n            break;\n          }\n        } else if (dir === \"desc\" && x && y) {\n          if (x.innerHTML.toLowerCase() < y.innerHTML.toLowerCase()) {\n            //if so, mark as a switch and break the loop:\n            shouldSwitch = true;\n            break;\n          }\n        }\n      }\n      if (shouldSwitch && rows[i].parentNode) {\n        /*If a switch has been marked, make the switch\n      and mark that a switch has been done:*/\n        rows[i].parentNode!.insertBefore(rows[i + 1], rows[i]);\n        switching = true;\n        //Each time a switch is done, increase this count by 1:\n        switchcount++;\n      } else {\n        /*If no switching has been done AND the direction is \"asc\",\n      set the direction to \"desc\" and run the while loop again.*/\n        if (switchcount === 0 && dir === \"asc\") {\n          dir = \"desc\";\n          switching = true;\n        }\n      }\n      // if (i === 0) continue;\n      // rows.cells[i].style.backgroundColor = \"blue\";\n    }\n  }\n};\n\nexport interface TableColumnsInterface {\n  columnTitle: JSX.Element | string;\n  alignText: string;\n  padding?: string;\n  isSortAllowed?: boolean;\n}\n\ninterface TableProps {\n  columns: TableColumnsInterface[];\n  rows: Function;\n  hideColumns?: boolean;\n  pagination?: boolean;\n  search?: boolean;\n  tableSize?: string;\n  tableClass?: string;\n  tableId?: string;\n  rounded?: boolean;\n  searchBG?: string;\n  thColor?: string;\n  loading?: boolean;\n}\n\nconst Table: React.FC<TableProps> = (props) => {\n  const startPage = 1;\n  const tableId =\n    !props.tableId || props.tableId === \"myTable\" ? FC_makeID() : props.tableId;\n  let table: HTMLElement, tr: HTMLCollectionOf<HTMLTableRowElement>;\n  const [totalItems, setTotalItems] = useState<number>(0);\n  const [totalPages, setTotalPages] = useState<number>(1);\n  const [currentPage, setCurrentPage] = useState<number>(1);\n  const [pages, setPages] = useState<number[]>();\n  const [pageSize, setPageSize] = useState<number>(10);\n  const [startIndex, setStartIndex] = useState<number>(0);\n  const [endIndex, setEndIndex] = useState<number>(0);\n\n  useEffect(() => {\n    props.pagination && tablePagination();\n  });\n\n  const filterTable = (\n    data: string,\n    filterType?: \"default\" | \"field\"\n  ): void => {\n    var filter, tr, td, rows: number, cols: number, txtValue;\n    if (filterType === \"field\" && data === \"all\") data = \"\";\n    filter = data.toLowerCase();\n    table = document.getElementById(tableId!)!;\n    tr = table.getElementsByTagName(\"tr\");\n    for (rows = 0; rows < tr.length; rows++) {\n      for (cols = 0; cols < props.columns.length; cols++) {\n        td = tr[rows].getElementsByTagName(\"td\")[cols];\n        if (td) {\n          txtValue = td.textContent || td.innerText;\n          if (txtValue.toLowerCase().indexOf(filter) > -1) {\n            tr[rows].style.display = \"\";\n            break;\n          } else {\n            tr[rows].style.display = \"none\";\n          }\n        }\n      }\n    }\n  };\n\n  const tablePagination = (): void => {\n    table = document.getElementById(tableId)!;\n    tr = table.getElementsByTagName(\"tr\");\n    setTotalItems(tr.length);\n    setTotalPages(Math.ceil(totalItems / pageSize));\n\n    // calculate start and end item indexes on the current page\n    setStartIndex((currentPage - 1) * pageSize);\n    setEndIndex(Math.min(startIndex + pageSize - 1, totalItems - 1));\n\n    /**\n     * TODO!\n     * There is a problem with this condition\n     */\n    let _pages = Array.from(Array(totalPages + 1 - startPage).keys()).map(\n      (i) => startPage + i\n    );\n    if (!pages || _pages.length !== pages.length) {\n      setPages(_pages);\n    }\n\n    for (let i: number = 0; i < tr.length; i++) {\n      if (i >= startIndex && i <= endIndex) {\n        tr[i].style.display = \"\";\n      } else {\n        tr[i].style.display = \"none\";\n      }\n    }\n  };\n\n  return (\n    <div className={`${props.tableSize} overflow-x-auto`}>\n      {/* search box  */}\n      {props.search && (\n        <div className={`${props.searchBG} w-full mb-2`}>\n          {props.search && (\n            <div className=\"bg-white rounded flex items-center w-full p-2 border-2 border-gray-500\">\n              <MdSearch className=\"h-5 w-5 fill-current text-gray-400\" />\n              <input\n                type=\"search\"\n                placeholder=\"search\"\n                onChange={(e) => filterTable(e.target.value)}\n                className=\"w-full h-6 pl-4 text-sm outline-none focus:outline-none bg-white\"\n                disabled={props.loading}\n              />\n\n              {props.pagination && (\n                <div className=\"select\">\n                  <select\n                    className=\"text-base outline-none focus:outline-none bg-white\"\n                    onChange={(e) => setPageSize(Number(e.target.value))}\n                    disabled={props.loading}\n                  >\n                    <option value=\"10\">10</option>\n                    <option value=\"25\">25</option>\n                    <option value=\"50\">50</option>\n                    <option value=\"100\">100</option>\n                  </select>\n                </div>\n              )}\n            </div>\n          )}\n        </div>\n      )}\n      <div className=\"overflow-x-auto w-full\">\n        <table\n          className={\n            props.tableClass\n              ? props.tableClass\n              : `w-full shadow ${\n                  props.rounded && \"sm:rounded-lg\"\n                } table-auto order-table`\n          }\n          id={tableId}\n        >\n          {!props.hideColumns && (\n            <thead className=\"bg-white border-b-2 border-gray-300 text-gray-600 font-bold text-base\">\n              <tr\n                className={`text-left tracking-wide bg-${props.thColor}-100 border-b-2 border-${props.thColor}-500 text-${props.thColor}-600`}\n              >\n                {props.columns.map((column, index) => (\n                  <th\n                    key={index}\n                    className={`${column.padding} text-${\n                      column.alignText\n                    } px-3 py-2 ${column.isSortAllowed && \"cursor-pointer\"}`}\n                    onClick={() =>\n                      column.isSortAllowed && sortThisColumn(tableId, index)\n                    }\n                  >\n                    <div className=\"flex items-center gap-1\">\n                      {column.columnTitle}\n                      {column.isSortAllowed && <BiSort />}\n                    </div>\n                  </th>\n                ))}\n              </tr>\n            </thead>\n          )}\n          <tbody id=\"table-data\" className=\"bg-white text-black text-base\">\n            {props.rows()}\n          </tbody>\n        </table>\n        {props.pagination && (\n          <div className=\"sm:flex-1 sm:flex sm:items-center sm:justify-between mt-4 work-sans\">\n            <div>\n              <span className=\"text-xs xs:text-sm text-gray-900\">\n                Showing 1 to {pageSize} of {totalItems - 1} Entries\n              </span>\n            </div>\n            <div>\n              <nav className=\"inline-flex shadow-sm\">\n                <div>\n                  <button\n                    type=\"button\"\n                    className={`inline-flex items-center px-2 py-2 rounded-l-md border border-gray-300 text-sm font-medium text-gray-500 ${\n                      currentPage !== 1 && \"bg-white\"\n                    }`}\n                    aria-label=\"Previous\"\n                    disabled={currentPage === 1 || props.loading}\n                    onClick={() => setCurrentPage(currentPage - 1)}\n                  >\n                    <MdNavigateBefore className=\"h-5 w-5\" />\n                  </button>\n                </div>\n                <div>\n                  {pages &&\n                    pages.map((page, pageIndex) => (\n                      <button\n                        key={pageIndex}\n                        className={`-ml-px inline-flex items-center px-4 py-2 border border-gray-300 text-sm font-medium text-gray-700 ${\n                          page !== currentPage\n                            ? \"bg-white\"\n                            : \"bg-gray-100 cursor-default\"\n                        }`}\n                        disabled={page === currentPage || props.loading}\n                        onClick={() => setCurrentPage(page)}\n                      >\n                        {page}\n                      </button>\n                    ))}\n                </div>\n                <div>\n                  <button\n                    type=\"button\"\n                    className={`inline-flex items-center px-2 py-2 rounded-r-md border border-gray-300 text-sm leading-5 font-medium text-gray-500 ${\n                      currentPage !== totalPages && \"bg-white\"\n                    }`}\n                    aria-label=\"Next\"\n                    disabled={currentPage === totalPages || props.loading}\n                    onClick={() => setCurrentPage(currentPage + 1)}\n                  >\n                    <MdNavigateNext className=\"h-5 w-5\" />\n                  </button>\n                </div>\n              </nav>\n            </div>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default Table;\n","import axios from \"axios\";\nimport { Dispatch } from \"redux\";\nimport { ActionTypes } from \"./types\";\nimport {\n  AccessTaskInterface,\n  PermissionInterface,\n  SystemSettingsInterface,\n} from \"../shared/interfaces\";\nimport { API } from \"../utils/api\";\nimport { setAxiosToken } from \"../utils/AxiosToken\";\nimport { errorToText } from \"../utils/errors\";\nimport { PositionAPI } from \"../interfaces/position\";\n\n/**\n * * ****************************** INTERFACES *****************************\n */\n\n// SYSTEM SETTINGS  ==============\nexport interface GetSystemSettingsAction {\n  type: ActionTypes.GET_SYSTEM_SETTINGS;\n  payload: SystemSettingsInterface[];\n}\n\nexport interface DisableSystemSettingsAction {\n  type: ActionTypes.DISABLE_SYSTEM_SETTINGS;\n  payload: {\n    system_setting_id: string;\n    status: \"enabled\" | \"disabled\";\n  };\n}\n\n// ROLE TASKS ACCESS SETTINGS ===================================\nexport interface GetTaskAccessAction {\n  type: ActionTypes.GET_TASK_ACCESS;\n  payload: AccessTaskInterface[];\n}\n\n// POSITIONS SETTINGS ===================================\nexport interface PositionCreateInterface {\n  position_id?: string;\n  position_title: string;\n  description: string;\n  school_level_id: string;\n  education_institute_id: string;\n  courses: string[];\n  requirements: {\n    user_detail_category_id: string;\n    user_detail_subcategory_id: string;\n    position_requirement: {\n      category_subcategory_data_id: string;\n      required: boolean;\n    }[];\n    required: boolean;\n  }[];\n}\nexport interface GetPositionsAction {\n  type: ActionTypes.GET_POSTIONS;\n  payload: PositionAPI[];\n}\n\nexport interface CreatePositionsAction {\n  type: ActionTypes.CREATE_POSITION;\n  payload: PositionCreateInterface;\n}\n\nexport interface UpdatePositionsAction {\n  type: ActionTypes.UPDATE_POSITION;\n  payload: PositionCreateInterface;\n}\n\nexport interface DeletePositionSettingAction {\n  type: ActionTypes.DELETE_POSITION;\n  payload: string;\n}\n\nexport interface PublishPositionAction {\n  type: ActionTypes.PUBLISH_POSITION;\n  payload: {\n    position_id: string;\n    status: boolean;\n  };\n}\n\nexport type SystemActionType =\n  | GetSystemSettingsAction\n  | DisableSystemSettingsAction\n  | GetTaskAccessAction\n  | GetPositionsAction\n  | CreatePositionsAction\n  | UpdatePositionsAction\n  | DeletePositionSettingAction\n  | PublishPositionAction;\n\n/**\n * * ****************************** ACTIONS *****************************\n */\n\nexport const getSystemSettings = (callback: Function) => {\n  return async (dispatch: Dispatch) => {\n    callback(true, \"\");\n    try {\n      setAxiosToken();\n      const res = await axios.get<SystemSettingsInterface[]>(\n        `${API.AUTH}/settings`\n      );\n      dispatch<GetSystemSettingsAction>({\n        type: ActionTypes.GET_SYSTEM_SETTINGS,\n        payload: res.data,\n      });\n      callback(false, \"\");\n    } catch (error) {\n      console.log({ code_error: error });\n      callback(false, errorToText(error));\n    }\n  };\n};\n\nexport const disableSystemSetting = (data: {\n  system_setting_id: string;\n  status: \"enabled\" | \"disabled\";\n}) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<DisableSystemSettingsAction>({\n      type: ActionTypes.DISABLE_SYSTEM_SETTINGS,\n      payload: data,\n    });\n  };\n};\n\n// ============================ tasks access =======================\n\nexport const GetTaskAccess = (callback: Function) => {\n  return async (dispatch: Dispatch) => {\n    callback(true, \"\");\n    try {\n      setAxiosToken();\n      const res = await axios.get<\n        {\n          id: string;\n          title: string;\n          key: string;\n          permitted: PermissionInterface;\n        }[]\n      >(`${API.AUTH}/allroleaccess`);\n      let response: AccessTaskInterface[] = res.data.map((data) => ({\n        id: data.id,\n        task: data.title,\n        key: data.key,\n        permitted: data.permitted,\n      }));\n      dispatch<GetTaskAccessAction>({\n        type: ActionTypes.GET_TASK_ACCESS,\n        payload: response,\n      });\n      callback(false, \"\", response);\n    } catch (error) {\n      console.log({ code_error: error });\n      callback(false, errorToText(error));\n    }\n  };\n};\n\n// ============================ positions =======================\n\nexport const getPositions = (callback: Function) => {\n  return async (dispatch: Dispatch) => {\n    callback(true, \"\");\n    try {\n      setAxiosToken();\n      const res = await axios.get<PositionAPI[]>(`${API.APPLICATION}/position`);\n      dispatch<GetPositionsAction>({\n        type: ActionTypes.GET_POSTIONS,\n        payload: res.data,\n      });\n      callback(false, \"\");\n    } catch (error) {\n      console.log({ code_error: error });\n      callback(false, errorToText(error));\n    }\n  };\n};\n\nexport const createPosition = (data: PositionCreateInterface) => {\n  console.log({ createPosition: data });\n  return async (dispatch: Dispatch) => {\n    dispatch<CreatePositionsAction>({\n      type: ActionTypes.CREATE_POSITION,\n      payload: data,\n    });\n  };\n};\n\nexport const updatePosition = (data: PositionCreateInterface) => {\n  console.log({ updatePosition: data });\n  return async (dispatch: Dispatch) => {\n    dispatch<UpdatePositionsAction>({\n      type: ActionTypes.UPDATE_POSITION,\n      payload: data,\n    });\n  };\n};\n\nexport const deletePosition = (data: string) => {\n  console.log({ deletePosition: data });\n  return async (dispatch: Dispatch) => {\n    dispatch<DeletePositionSettingAction>({\n      type: ActionTypes.DELETE_POSITION,\n      payload: data,\n    });\n  };\n};\n\nexport const publishPosition = (data: {\n  position_id: string;\n  status: boolean;\n}) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<PublishPositionAction>({\n      type: ActionTypes.PUBLISH_POSITION,\n      payload: data,\n    });\n  };\n};\n","import {\n  ApplicationStates,\n  SESSION_PLAN_KEYS,\n} from \"../interfaces/application\";\n\nexport interface SystemSettingsInterface {\n  system_setting_id: string;\n  name: string;\n  key: string;\n  status: \"enabled\" | \"disabled\";\n}\n\nexport interface ApplicationSessionInterface {\n  is_active: boolean;\n  application_session_name: string;\n  period: string;\n  application_start_date: string;\n  application_end_date: string;\n  createdAt: string;\n  updatedAt: string;\n  application_session_id: string;\n}\n\nexport interface UserInfoInterface {\n  document_type?: string;\n  issue_number?: string;\n  date_of_issue?: string;\n  date_of_expiry?: string;\n  place_of_issue?: string;\n  application_number?: string;\n  fname: string;\n  lname: string;\n  sex: \"M\" | \"F\";\n  father_names: string;\n  mother_names: string;\n  date_of_birth: string;\n  place_of_birth?: string;\n  country_of_birth: string;\n  village_id: string;\n  village: string;\n  cell: string;\n  sector: string;\n  district: string;\n  province: string;\n  photo?: string;\n  civil_status?: string;\n  spouse?: any;\n  status?: string;\n}\n\nexport interface UserInterface {\n  user_id: string;\n  n_id?: string;\n  phone_number: string;\n  email: string;\n  password?: string;\n  user_info: UserInfoInterface;\n  details: UserDocumentsInterface[];\n  user_photo?: string;\n  default_access: RoleToUserInterface | null;\n  custome_access: CustomeAccessInterface | null;\n  is_active?: boolean;\n}\n\nexport interface CandidateDetailsInterface_old {\n  category_id: string;\n  sub_category_id: string;\n  category_subcategory_data: string;\n  title: string;\n  description: string;\n  files: string;\n  start_year: string;\n  end_year: string;\n  school: string;\n  email: string;\n  names: string;\n  phone_number: string;\n  company: string;\n  year: string;\n  doc_id: string;\n  validation_status: \"waiting\" | \"approved\" | \"rejected\";\n  validated_by: {\n    user_id: string;\n    comment: string;\n    validation_status: \"waiting\" | \"approved\" | \"rejected\";\n    date: string;\n  } | null;\n  doc_history_status: string;\n  get_in_date: string;\n  approved?: string;\n}\n\nexport interface CandidateDetailsInterface {\n  category_id: string;\n  sub_category_id: string;\n  category_subcategory_data: string;\n  title: string;\n  description: string;\n  files: string;\n  start_year: string;\n  end_year: string;\n  school: string;\n  email: string;\n  names: string;\n  phone_number: string;\n  company: string;\n  year: string;\n  doc_id: string;\n  validation_status: \"waiting\" | \"approved\" | \"rejected\";\n  validated_by: {\n    user_id: string;\n    comment: string;\n    validation_status: \"waiting\" | \"approved\" | \"rejected\";\n    date: string;\n  } | null;\n  doc_history_status: string;\n  get_in_date: string;\n  approved?: string;\n}\n\nexport interface DocInterface {\n  category_subcategory_data: string;\n  school: string;\n  category_id: string;\n  company: string;\n  description: string;\n  email: string;\n  end_year: string;\n  files: string;\n  names: string;\n  phone_number: string;\n  start_year: string;\n  sub_category_id: string;\n  title: string;\n  year: string;\n  approved: string;\n  doc_id: string;\n  validated_by: null;\n  validation_status: string;\n  doc_history_status: string;\n  get_in_date: string;\n  date_modefied: string;\n}\n\nexport interface CandidateRoleToUserInterface {\n  key: string;\n  status: number;\n  access: boolean;\n  assigned_date: string;\n}\n\nexport interface CandidatesInterface_old {\n  user_id: string;\n  n_id: string;\n  fname: string;\n  lname: string;\n  phone_number: string;\n  district: string;\n  email: string;\n  details: CandidateDetailsInterface[];\n}\n\nexport interface ApplicationExamsInterface {\n  course_id: string;\n  proctoring_type: string;\n  center_id: string;\n  room_id: string;\n}\n\nexport interface CandidatesInterface {\n  user_id: string;\n  n_id: string;\n  fname: string;\n  lname: string;\n  phone_number: string;\n  district: string;\n  email: string;\n  in_education?: boolean;\n  disability?: boolean;\n  details: CandidateDetailsInterface[];\n  exams: ApplicationExamsInterface[];\n}\n\nexport interface CustomeAccessInterface {\n  access: AccessTaskInterface[];\n  user_id: string;\n  custome_user_access_id: string;\n}\n\nexport interface UserDocumentsInterface {\n  category_id: string;\n  sub_category_id: string;\n  category_subcategory_data: string;\n  title: string;\n  description: string;\n  files: string;\n  start_year: string;\n  end_year: string;\n  school: { title: string; school_id: string | null };\n  email: string;\n  names: string;\n  phone_number: string;\n  company: string;\n  year: string;\n  approved: \"waiting\" | \"approved\" | \"rejected\";\n  doc_id: string;\n  validation_status: \"waiting\" | \"approved\" | \"rejected\";\n  validated_by: {\n    user_id: string;\n    commet: string;\n    validation_status: \"waiting\" | \"approved\" | \"rejected\";\n    date: string;\n  };\n}\n\nexport interface SystemUserRoleInterface {\n  system_user_role_id: string;\n  role: string;\n  status: boolean;\n  access: AccessTaskInterface[];\n  district_required?: boolean;\n  school_required?: boolean;\n  room_required?: boolean;\n  education_institution_required?: boolean;\n  school_id: string;\n  district_id: string;\n}\n\nexport interface CustomeUserAccessInterface {\n  user_id: string;\n  access?: [\n    {\n      id: string;\n      task: string;\n      key: string;\n      permitted: {\n        create: boolean;\n        delete: boolean;\n        update: boolean;\n        view: boolean;\n      };\n    }\n  ];\n}\n\nexport interface PermissionInterface {\n  create: boolean;\n  view: boolean;\n  update: boolean;\n  delete: boolean;\n}\n\nexport interface AccessTaskInterface {\n  id: string;\n  task: string;\n  key: string;\n  permitted: PermissionInterface;\n}\n\nexport interface RoleToUserInterface {\n  system_user_role_id: string;\n  role: string;\n  access: AccessTaskInterface[];\n  status?: number;\n  school_id: string;\n  district_id: string;\n  room_id: string;\n  education_institution_id: string;\n}\n\nexport interface RoomsInterface {\n  occupied: number;\n  isUsed: boolean;\n  room_type: string;\n  room_number: number;\n  capacity: number;\n  _id: string;\n}\n\nexport interface CentersInterface {\n  rooms: RoomsInterface[];\n  isUsed: boolean;\n  _id: string;\n  center_name: string;\n  center_code: number;\n  district_id: string;\n}\n\nexport interface SectorInterface {\n  district_code: number;\n  district_id: string;\n  sector_name: string;\n  sector_code: number;\n  sector_id: string;\n}\n\nexport interface DistrictInterface {\n  centers: CentersInterface[];\n  sectors: SectorInterface[];\n  province_code: number;\n  province_id: string;\n  district_name: string;\n  district_code: number;\n  _id: string;\n}\n\nexport interface RoomLocationInterface {\n  districts: DistrictInterface[];\n  province_name: string;\n  province_code: number;\n  _id: string;\n}\n\nexport interface AssignRoleToUserActionInterface {\n  user_id: string;\n  data: RoleToUserInterface;\n}\n\nexport interface AssignRoleToUserActionInterface {\n  user_id: string;\n  data: RoleToUserInterface;\n}\n\nexport enum PostRequestStatusInterface {\n  INITIATED = \"initiated\",\n  CONFIRMED = \"confirmed\",\n  RECEIVED = \"received\",\n}\n\nexport interface PostSchoolInterface_old {\n  post_at_school_id: string;\n  school_id: string;\n  position_id: string;\n  district_id: string;\n  needed_posts: number;\n  confirmed_posts?: number;\n  occupied_posts?: number;\n  requested_by: string;\n  confirmed_by?: string;\n  received_posts?: number;\n  request_date: Date;\n  approval_date?: Date;\n  post_at_school_status: PostRequestStatusInterface;\n}\n\nexport interface PostSchoolInterface {\n  requested_post_id: string;\n  school_id: string;\n  position_id: string;\n  district_id: string;\n  needed_posts: number;\n  male_number: number;\n  female_number: number;\n  description: string;\n  confirmed_posts?: number;\n  occupied_posts?: number;\n  requested_by: string;\n  confirmed_by?: string;\n  received_posts?: number;\n  request_date: Date;\n  approval_date?: Date;\n  requested_post_status: PostRequestStatusInterface;\n}\n\nexport interface SchoolInfoInterface {\n  school_id: string;\n  school_title: string;\n  district_id: string;\n  number_of_females?: number;\n  number_of_males?: number;\n}\n\nexport interface SchoolsInterface {\n  _id: string;\n  status: boolean;\n  school_name: string;\n  school_code: number;\n  province_id: string;\n  province_code: number;\n  district_id: string;\n  district_code: number;\n  sector_id: string;\n  sector_code: number;\n  education_category_id: string;\n}\n\nexport interface SchoolLevelInterface {\n  school_level_id: string;\n  school_level_name: string;\n  description: string;\n  education_institute: string[];\n  courses: [];\n}\n\nexport interface CourseInterface {\n  course_name: string;\n  course_code: string;\n  description: string;\n  school_levels: string[];\n  course_id: string;\n}\n\nexport interface EducationInstituteInterface {\n  education_category_title: string;\n  school_levels: [];\n  description: string;\n  education_institute_id: string;\n}\n\nexport interface PositionRequirementInterface {\n  user_detail_category_id: string;\n  title: string;\n  user_required_docs: {\n    user_detail_subcategory_id: string;\n    title: string;\n  }[];\n}\n\nexport interface PositionInterface {\n  courses: CourseInterface[];\n  position_title: string;\n  description: string;\n  school_level_id: SchoolLevelInterface;\n  education_institute_id: EducationInstituteInterface;\n  requirements: PositionRequirementInterface[];\n  position_id: string;\n}\n\nexport enum DocumentAttributesInterface {\n  \"Title\" = \"title\",\n  \"Description\" = \"description\",\n  \"Files\" = \"files\",\n  \"email\" = \"email\",\n  \"names\" = \"names\",\n  \"phone_number\" = \"phone_number\",\n  \"position\" = \"position\",\n  \"relation\" = \"relation\",\n  \"src\" = \"src\",\n  \"year\" = \"year\",\n  \"company\" = \"company\",\n  \"category_subcategory_data\" = \"category_subcategory_data\",\n  \"others\" = \"others\",\n  \"start_year\" = \"start_year\",\n  \"end_year\" = \"end_year\",\n  \"School\" = \"School\",\n}\n\nexport enum DocValidationStatusInterface {\n  APPROVED = \"approved\",\n  REJECTED = \"rejected\",\n}\n\nexport interface DocumentCategoryInterface {\n  user_detail_category_id: string;\n  title: string;\n  description: string;\n  fields: DocumentAttributesInterface[];\n}\n\nexport interface DocumentSubCategoryInterface {\n  category_id: string;\n  title: string;\n  description: string;\n  user_detail_subcategory_id: string;\n}\n\nexport interface DocumentFieldsInterface {\n  _id: string;\n  category_id: string;\n  subcategory_id: string | null;\n  title: string;\n  description: string;\n  others: [];\n}\n\nexport interface ApplicationAssessmentInterface {\n  application_id: string;\n  user_id: string;\n  application_session: string;\n  application_status: string;\n  n_id: string;\n  phone_number: string;\n  email: string;\n  fname: string;\n  lname: string;\n  sex: \"M\" | \"F\";\n  district: string;\n  position: PositionApplicationInterface;\n  details: CandidateDetailsInterface[];\n  createdAt: string;\n  updatedAt: string;\n}\n\nexport interface AdminApplicationsToPrintInterface {\n  application_id: number;\n  names: string;\n  gender?: string;\n  national_id?: string;\n  phone?: string;\n  email?: string;\n  position: string;\n  education_category?: string;\n  application_session?: string;\n  district?: string;\n  date?: string;\n  decision?: ApplicationStates;\n}\n\nexport interface PositionApplicationInterface {\n  courses: string[];\n  position_title: string;\n  description: string;\n  school_level_id: string;\n  education_institute_id: string;\n  requirements: PositionRequirementInterface[];\n  position_id: string;\n}\n\nexport interface PositionRequirementInterface {\n  user_detail_category_id: string;\n  title: string;\n  user_required_docs: {\n    user_detail_subcategory_id: string;\n    title: string;\n  }[];\n}\n\nexport interface ApplicationRequirementInterface {\n  user_detail_category_id: string;\n  title: string;\n  user_required_docs: {\n    user_detail_subcategory_id: string;\n    title: string;\n  }[];\n}\n\nexport interface PeriodInterface {\n  is_active: string;\n  application_session_name: string;\n  period: string;\n  application_start_date: string;\n  application_end_date: string;\n  createdAt: string;\n  updatedAt: string;\n  application_session_id: string;\n}\n\nexport interface LocationRoomTableInterface {\n  province_id: string;\n  province_name: string;\n  district_id: string;\n  district_name: string;\n  center_id: string;\n  center_name: string;\n  room_id: string;\n  room_name: string;\n  capacity: number;\n  occupied: number;\n}\n\nexport interface LocationSectorTableInterface {\n  province_id: string;\n  province_name: string;\n  province_code: number;\n  district_id: string;\n  district_name: string;\n  district_code: number;\n  sector_id: string;\n  sector_name: string;\n  sector_code: number;\n}\n\nexport interface PositionRequirementsFieldInterface {\n  category_id: string;\n  category_name: string;\n  sub_category_id: string;\n  sub_category_name: string;\n  field_id: string;\n  field_name: string;\n  required: boolean;\n}\n\nexport interface ApplicationPeriodInterface {\n  _id: string;\n  application_status: ApplicationStates;\n  user_id: string;\n  position: string;\n  application_session: string;\n  exams: ApplicationExamsInterface[];\n}\n\nexport const getDocCategoryById = (\n  subDocs: DocumentCategoryInterface[],\n  docId: string\n): DocumentCategoryInterface => {\n  return subDocs.filter((doc) => doc.user_detail_category_id === docId)[0];\n};\n\nexport const getSubDocCategoryById = (\n  subDocs: DocumentSubCategoryInterface[],\n  docId: string\n): DocumentSubCategoryInterface => {\n  return subDocs.filter((doc) => doc.user_detail_subcategory_id === docId)[0];\n};\n\nexport const SESSION_PLAN_TYPES: {\n  type_id: number;\n  type_title: string;\n  type_key: SESSION_PLAN_KEYS;\n}[] = [\n  {\n    type_id: 1,\n    type_title: \"Application\",\n    type_key: SESSION_PLAN_KEYS.APPLICATION,\n  },\n  {\n    type_id: 2,\n    type_title: \"Document Validation\",\n    type_key: SESSION_PLAN_KEYS.DOCUMENT_VALIDATION,\n  },\n  {\n    type_id: 3,\n    type_title: \"Examination\",\n    type_key: SESSION_PLAN_KEYS.EXAMINATION,\n  },\n  {\n    type_id: 4,\n    type_title: \"Marks Publication\",\n    type_key: SESSION_PLAN_KEYS.MARKS_PUBLICATION,\n  },\n  {\n    type_id: 5,\n    type_title: \"Placement and Transfer\",\n    type_key: SESSION_PLAN_KEYS.PLACEMENT_TRANSFER,\n  },\n];\n","import React from \"react\";\nimport Table from \"../../components/Table/Table\";\nimport { PositionRequirementTableInterface } from \"./ViewPosition\";\n\ninterface RequirementProps {\n  requirements: PositionRequirementTableInterface[];\n}\n\nconst ViewRequirements: React.FC<RequirementProps> = (props) => {\n  const tableData = (): JSX.Element[] => {\n    let data: PositionRequirementTableInterface[] = props.requirements;\n    // let data: PositionSubcategoryData[] =\n    //   props.position_requirement.position_requirement;\n    if (data.length === 0) {\n      return [\n        <tr key={153} className=\"border-b border-gray-200 hover:bg-gray-100\">\n          <td className=\"p-3 text-center\" colSpan={3}>\n            No Data Found\n          </td>\n        </tr>,\n      ];\n    }\n\n    return data.map((item, index) => (\n      <tr\n        key={index + item.field_id}\n        className=\"border-b border-gray-200 hover:bg-gray-100\"\n      >\n        <td className=\"p-3 text-left whitespace-nowrap\">{index + 1}</td>\n        <td className=\"p-3 text-left\">\n          <span>{item.subcategory_title + \" in \" + item.field_title}</span>\n        </td>\n        <td className=\"p-3 text-left text-lg italic\">\n          {item.required ? (\n            <span className=\"text-yellow-800\">Required</span>\n          ) : (\n            \"Optional\"\n          )}\n        </td>\n      </tr>\n    ));\n  };\n\n  return (\n    <div>\n      <Table\n        columns={[\n          { columnTitle: \"#\", alignText: \"left\", padding: \"p-3\" },\n          { columnTitle: \"Document\", alignText: \"left\", padding: \"p-3\" },\n          { columnTitle: \"Status\", alignText: \"left\", padding: \"p-3\" },\n          // { columnTitle: \"\", alignText: \"left\", padding: \"p-3\" },\n        ]}\n        rows={tableData}\n        pagination={false}\n        search={false}\n        thColor=\"gray\"\n      />\n    </div>\n  );\n};\n\nexport default ViewRequirements;\n","import { Dispatch } from \"redux\";\nimport { ActionTypes } from \"./types\";\nimport { data_school } from \"../shared/dataTest\";\nimport {\n  PostSchoolInterface,\n  SchoolInfoInterface,\n  SchoolsInterface,\n} from \"../shared/interfaces\";\nimport { setAxiosToken } from \"../utils/AxiosToken\";\nimport axios from \"axios\";\nimport { API } from \"../utils/api\";\nimport { errorToText } from \"../utils/errors\";\nimport { placedCandidateInterface } from \"../interfaces/marks_publication\";\n\n/**\n * * ****************************** INTERFACES *****************************\n */\n\nexport interface GetSchoolsAction {\n  type: ActionTypes.GET_SCHOOLS;\n  payload: SchoolsInterface[];\n}\n\nexport interface GetSchoolsInfoAction {\n  type: ActionTypes.GET_SCHOOLS_INFO;\n  payload: SchoolInfoInterface[];\n}\n\nexport interface CreateSchoolAction {\n  type: ActionTypes.CREATE_SCHOOL;\n  payload: SchoolsInterface;\n}\n\nexport interface UpdateSchoolAction {\n  type: ActionTypes.UPDATE_SCHOOL;\n  payload: SchoolsInterface;\n}\n\nexport interface DeleteSchoolAction {\n  type: ActionTypes.DELETE_SCHOOL;\n  payload: string;\n}\n\n// School Posts interfaces\nexport interface FetchSchoolPostsAction {\n  type: ActionTypes.FETCH_SCHOOL_POSTS;\n  payload: PostSchoolInterface[];\n}\n\n// School Placements interfaces\nexport interface GetSchoolPlacementAction {\n  type: ActionTypes.GET_SCHOOL_PLACEMENT;\n  payload: placedCandidateInterface[];\n}\n\n// District School Placements interfaces\nexport interface GetDistrictPlacementAction {\n  type: ActionTypes.GET_DISTRICT_PLACEMENT;\n  payload: placedCandidateInterface[];\n}\n\n// District School Placements interfaces\nexport interface GetSessionPlacementAction {\n  type: ActionTypes.GET_SESSION_PLACEMENT;\n  payload: placedCandidateInterface[];\n}\n\nexport interface FetchDistrictPostsAction {\n  type: ActionTypes.FETCH_DISTRICT_POSTS;\n  payload: PostSchoolInterface[];\n}\n\nexport interface CreateSchoolPostAction {\n  type: ActionTypes.CREATE_SCHOOL_POST;\n  payload: PostSchoolInterface;\n}\n\nexport interface UpdateSchoolPostAction {\n  type: ActionTypes.UPDATE_SCHOOL_POST;\n  payload: {\n    TYPE: \"DISTRICT\" | \"SCHOOL\" | \"RECEIVED\";\n    data: PostSchoolInterface;\n  };\n}\n\nexport interface DeleteSchoolPostAction {\n  type: ActionTypes.DELETE_SCHOOL_POST;\n  payload: PostSchoolInterface[];\n}\n\nexport type SchoolActionType =\n  | GetSchoolsAction\n  | GetSchoolsInfoAction\n  | CreateSchoolAction\n  | UpdateSchoolAction\n  | DeleteSchoolAction\n  | FetchSchoolPostsAction\n  | GetSchoolPlacementAction\n  | FetchDistrictPostsAction\n  | CreateSchoolPostAction\n  | UpdateSchoolPostAction\n  | DeleteSchoolPostAction\n  | GetDistrictPlacementAction\n  | GetSessionPlacementAction;\n\n/**\n * * ****************************** ACTIONS *****************************\n */\n\nexport const getSchools = (callback: Function) => {\n  return async (dispatch: Dispatch) => {\n    callback(true, \"\");\n    try {\n      const res = await axios.get<SchoolsInterface[]>(\n        `${API.APPLICATION}/schools`\n      );\n      dispatch<GetSchoolsAction>({\n        type: ActionTypes.GET_SCHOOLS,\n        payload: res.data,\n      });\n      callback(false, \"\", res.data);\n    } catch (error) {\n      console.log(\"Err: \", error);\n      callback(false, errorToText(error));\n    }\n  };\n};\n\nexport const getSchoolsInfo = () => {\n  return async (dispatch: Dispatch) => {\n    setAxiosToken();\n    // const response = await axios.get<AccessRoleType[]>(url);\n\n    dispatch<GetSchoolsInfoAction>({\n      type: ActionTypes.GET_SCHOOLS_INFO,\n      payload: data_school,\n      // payload: response.data,\n    });\n  };\n};\n\nexport const createSchool = (data: SchoolsInterface) => {\n  console.log({ schools: data });\n  return async (dispatch: Dispatch) => {\n    dispatch<CreateSchoolAction>({\n      type: ActionTypes.CREATE_SCHOOL,\n      payload: data,\n    });\n  };\n};\n\nexport const updateSchool = (data: SchoolsInterface) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<UpdateSchoolAction>({\n      type: ActionTypes.UPDATE_SCHOOL,\n      payload: data,\n    });\n  };\n};\n\nexport const deleteSchool = (data: string) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<DeleteSchoolAction>({\n      type: ActionTypes.DELETE_SCHOOL,\n      payload: data,\n    });\n  };\n};\n\nexport const fetchSchoolPosts = (school_id: string, callback: Function) => {\n  return async (dispatch: Dispatch) => {\n    callback(true, \"\");\n    try {\n      const res = await axios.get<PostSchoolInterface[]>(\n        `${API.PLACEMENT}/requestpost/school/${school_id}`\n      );\n\n      console.log({ schoolPosts: res.data });\n\n      dispatch<FetchSchoolPostsAction>({\n        type: ActionTypes.FETCH_SCHOOL_POSTS,\n        payload: res.data,\n      });\n      callback(false, \"\");\n    } catch (error) {\n      console.log(\"Err: \", error);\n      callback(false, errorToText(error));\n    }\n  };\n};\n\nexport const getSchoolPlacement = (school_id: string, callback: Function) => {\n  return async (dispatch: Dispatch) => {\n    callback(true, \"\");\n    try {\n      const res = await axios.get<placedCandidateInterface[]>(\n        `${API.PLACEMENT}/placedcandidate/school/${school_id}`\n      );\n\n      console.log({ getSchoolPlacement: res.data });\n\n      dispatch<GetSchoolPlacementAction>({\n        type: ActionTypes.GET_SCHOOL_PLACEMENT,\n        payload: res.data,\n      });\n      callback(false, \"\", res.data);\n    } catch (error) {\n      console.log(\"Err: \", error);\n      callback(false, errorToText(error));\n    }\n  };\n};\n\nexport const createSchoolPost = (data: PostSchoolInterface) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<CreateSchoolPostAction>({\n      type: ActionTypes.CREATE_SCHOOL_POST,\n      payload: data,\n    });\n  };\n};\n\nexport const updateSchoolPost = (\n  TYPE: \"DISTRICT\" | \"SCHOOL\" | \"RECEIVED\",\n  data: PostSchoolInterface\n) => {\n  console.log({ TYPE, data });\n  return async (dispatch: Dispatch) => {\n    dispatch<UpdateSchoolPostAction>({\n      type: ActionTypes.UPDATE_SCHOOL_POST,\n      payload: { TYPE, data },\n    });\n  };\n};\n\nexport const deleteSchoolPost = (data: PostSchoolInterface[]) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<DeleteSchoolPostAction>({\n      type: ActionTypes.DELETE_SCHOOL_POST,\n      payload: data,\n    });\n  };\n};\n\nexport const fetchDistrictPosts = (district_id: string, callback: Function) => {\n  return async (dispatch: Dispatch) => {\n    callback(true, \"\");\n    try {\n      const res = await axios.get<PostSchoolInterface[]>(\n        `${API.PLACEMENT}/requestpost/district/${district_id}`\n      );\n\n      console.log({ districtPosts: res });\n\n      dispatch<FetchDistrictPostsAction>({\n        type: ActionTypes.FETCH_DISTRICT_POSTS,\n        payload: res.data,\n      });\n      callback(false, \"\");\n    } catch (error) {\n      console.log(\"Err: \", error);\n      callback(false, errorToText(error));\n    }\n  };\n};\n\nexport const getDistrictPlacement = (\n  district_id: string,\n  callback: Function\n) => {\n  return async (dispatch: Dispatch) => {\n    callback(true, \"\");\n    try {\n      const res = await axios.get<placedCandidateInterface[]>(\n        `${API.PLACEMENT}/placedcandidate/district/${district_id}`\n      );\n\n      console.log(\"====================================\");\n      console.log({ getDistrictPlacement: res.data });\n      console.log(\"====================================\");\n\n      dispatch<GetDistrictPlacementAction>({\n        type: ActionTypes.GET_DISTRICT_PLACEMENT,\n        payload: res.data,\n      });\n      callback(false, \"\", res.data);\n    } catch (error) {\n      console.log(\"Err: \", error);\n      callback(false, errorToText(error));\n    }\n  };\n};\nexport const getSessionPlacement = (session_id: string, callback: Function) => {\n  return async (dispatch: Dispatch) => {\n    callback(true, \"\");\n    try {\n      const res = await axios.get<placedCandidateInterface[]>(\n        `${API.PLACEMENT}/placedcandidate/session/${session_id}`\n      );\n\n      console.log(\"====================================\");\n      console.log({ getSessionPlacement: res.data });\n      console.log(\"====================================\");\n\n      dispatch<GetSessionPlacementAction>({\n        type: ActionTypes.GET_SESSION_PLACEMENT,\n        payload: res.data,\n      });\n      callback(false, \"\", res.data);\n    } catch (error) {\n      console.log(\"Err: \", error);\n      callback(false, errorToText(error));\n    }\n  };\n};\n","export interface marksPublicationInterface {\n  publication_id: string;\n  session: string;\n  doneby: string;\n  created_date: string;\n  publication_status: \"PENDING\" | \"PUBLISHED\";\n  status: number;\n  publication_position_marks: publicationInterface[];\n  createdAt: string;\n  updatedAt: string;\n}\n\nexport interface publicationInterface {\n  _id: string;\n  position: string;\n  marks: number;\n  comment: string;\n}\n\nexport interface marksPublicationFormInterface {\n  session: string;\n  doneby: string;\n  created_date: string;\n  publication_position_marks: publicationFormInterface[];\n}\n\nexport interface publicationFormInterface {\n  position: string;\n  marks: number;\n  comment: string;\n}\n\nexport enum MarksPublicationCandidateStatus {\n  Failed = \"Failed\",\n  Passed = \"Passed\",\n}\n\nexport interface MarksPublicationCandidate {\n  user: {\n    in_eduction: boolean;\n    disability: boolean;\n    is_active: boolean;\n    n_id: string;\n    phone_number: string;\n    email: string;\n    createdAt: string;\n    updatedAt: string;\n    user_id: string;\n    user_info: placedCandidateUserInfo;\n  };\n  period: string;\n  position: string;\n  courses: {\n    id: string;\n    marks: number;\n    _id: string;\n  }[];\n  waiting_status: MarksPublicationCandidateStatus;\n  status: number;\n  user_position_marks: number;\n  createdAt: string;\n  updatedAt: string;\n  disability: boolean;\n  gender: string;\n  in_education: boolean;\n  id: string;\n}\n\nexport interface MarksPublicationCandidateToPrintInterface {\n  no: number;\n  names: string;\n  national_id: string;\n  phone: string;\n  email: string;\n  gender: string;\n  position_name: string;\n  marks: number;\n  status: MarksPublicationCandidateStatus;\n}\n\nexport enum marksPublicationCandidateReportContentKeyInterface {\n  applicant_name = \"names\",\n  national_id = \"national_id\",\n  phone_number = \"phone\",\n  email = \"email\",\n  gender = \"gender\",\n  position_name = \"position_name\",\n  marks = \"marks\",\n  status = \"status\",\n}\n\nexport interface marksPublicationReportContentInterface {\n  key: marksPublicationCandidateReportContentKeyInterface;\n  title: string;\n  status: boolean;\n}\n// ---------------------------------------------------------------------------------------------\n\nexport interface placedCandidateInterface {\n  _id: string;\n  status: PlacedCandidateStatus;\n  user_id: string;\n  school_id: string;\n  position_id: string;\n  waiting_list_id: string;\n  request_id: string;\n  createdAt: string;\n  comment: string;\n  updatedAt: string;\n  __v: number;\n  n_id: string;\n  phone_number: string;\n  email: string;\n  user_info: placedCandidateUserInfo;\n}\n\nexport interface placedCandidateUserInfo {\n  document_type: string;\n  issue_number: string;\n  date_of_issue: string;\n  date_of_expiry: string;\n  place_of_issue: string;\n  application_number: string;\n  fname: string;\n  lname: string;\n  father_names: string;\n  mother_names: string;\n  sex: string;\n  date_of_birth: string;\n  place_of_birth: string;\n  country_of_birth: string;\n  village_id: string;\n  village: string;\n  cell: string;\n  sector: string;\n  district: string;\n  province: string;\n  civil_status: string;\n  spouse: null;\n  status: string;\n  photo: string;\n}\n\nexport enum PlacedCandidateStatus {\n  PENDING = \"pending\",\n  PLACED = \"placed\",\n  REJECTED = \"rejected\",\n}\n\nexport interface PlacementToPrintInterface {\n  no: number;\n  names: string;\n  national_id: string;\n  phone: string;\n  email: string;\n  school_name: string;\n  position_name: string;\n  status: PlacedCandidateStatus;\n}\n\nexport enum placementReportContentKeyInterface {\n  applicant_name = \"names\",\n  national_id = \"national_id\",\n  phone_number = \"phone\",\n  email = \"email\",\n  school_name = \"school_name\",\n  position_name = \"position_name\",\n  status = \"status\",\n}\n\nexport interface placementReportContentInterface {\n  key: placementReportContentKeyInterface;\n  title: string;\n  status: boolean;\n}\n","import axios from \"axios\";\nimport React, { useState } from \"react\";\nimport { MdTurnedIn } from \"react-icons/md\";\nimport { VscLoading } from \"react-icons/vsc\";\nimport { connect } from \"react-redux\";\nimport { PushPopupAlert } from \"../../actions\";\nimport { publishPosition } from \"../../actions/settings\";\nimport { PopupAlertData } from \"../../components/Alert/Popup\";\nimport NoResult, { NoResultThemes } from \"../../components/NoResult/NoResult\";\nimport { PopupAlertTheme } from \"../../interfaces/popupAlert\";\nimport { PositionAPI } from \"../../interfaces/position\";\nimport { API } from \"../../utils/api\";\nimport { errorToText } from \"../../utils/functions\";\nimport ViewRequirements from \"./ViewRequirements\";\n\nexport interface PositionRequirementTableInterface {\n  category_id: string;\n  category_title: string;\n  subcategory_id: string;\n  subcategory_title: string;\n  field_title: string;\n  field_id: string;\n  // _id: string;\n  required: boolean;\n}\n\nexport const FC_PositionDistinctCategory = (\n  PositionData: PositionAPI[]\n): {\n  PositionsTemp: PositionRequirementTableInterface[];\n  DistinctCategoriesTemp: PositionRequirementTableInterface[];\n  DistinctSubCategoriesTemp: PositionRequirementTableInterface[];\n} => {\n  let PositionsTemp: PositionRequirementTableInterface[] = [];\n  let DistinctCategoriesTemp: PositionRequirementTableInterface[] = [],\n    DistinctCategoriesIds: string[] = [];\n  let DistinctSubCategoriesTemp: PositionRequirementTableInterface[] = [],\n    DistinctSubCategoriesIds: string[] = [];\n  // LOOP IN ALL POSITIONS ==========================\n  for (let pos in PositionData) {\n    // GET CURRENT POSITION ====================\n    let thisPosition = PositionData[pos];\n    // GET REQUIREMENTS OF THE CURRENT POSITION ====================\n    let requirements = thisPosition.requirements;\n    // LOOP THROUGH CURRENT POSITION REQUIREMENTS ==========================\n    for (let req in requirements) {\n      let thisRequirements = requirements[req];\n      // GET DOC CATEGORY OF THE CURRENT POSITION REQUIREMENTS ====================\n      let thisCategory = thisRequirements.category;\n      // GET DOC SUB CATEGORY OF THE CURRENT POSITION REQUIREMENTS ====================\n      let thisSubCategory = thisRequirements.subcategory;\n      // LOOP THROUGH FIELDS OF THE CURRENT POSITION REQUIREMENTS ==========================\n      if (thisCategory) {\n        for (let field in thisRequirements.position_requirement) {\n          // GET FIELDS OF THE CURRENT POSITION REQUIREMENTS ====================\n          let thisField = thisRequirements.position_requirement[field];\n          // ADD CURRENT CATEGORY, SUB CATEGORY & FIELDS OF THE CURRENT POSITION REQUIREMENTS IN POSITIONS TEMP ====================\n          PositionsTemp.push({\n            category_id: thisCategory.user_detail_category_id,\n            category_title: thisCategory.title,\n            subcategory_id: thisSubCategory.user_detail_subcategory_id,\n            subcategory_title: thisSubCategory.title,\n            field_title: thisField.title,\n            field_id: thisField._id,\n            required: thisField.required,\n          });\n        }\n\n        // ADD CATEOGRY OF THE CURRENT POSITION REQUIREMENTS TO ARRAY ====================\n        if (\n          !DistinctCategoriesIds.includes(thisCategory.user_detail_category_id)\n        ) {\n          DistinctCategoriesIds.push(thisCategory.user_detail_category_id);\n          DistinctCategoriesTemp.push({\n            category_id: thisCategory.user_detail_category_id,\n            category_title: thisCategory.title,\n            subcategory_id: \"\",\n            subcategory_title: \"\",\n            field_title: \"\",\n            field_id: \"\",\n            required: false,\n          });\n        }\n\n        // ADD SUB CATEOGRY OF THE CURRENT POSITION REQUIREMENTS TO ARRAY ====================\n        if (\n          !DistinctSubCategoriesIds.includes(\n            thisSubCategory.user_detail_subcategory_id\n          )\n        ) {\n          DistinctSubCategoriesIds.push(\n            thisSubCategory.user_detail_subcategory_id\n          );\n          DistinctSubCategoriesTemp.push({\n            category_id: thisSubCategory.category_id,\n            category_title: \"\",\n            subcategory_id: thisSubCategory.user_detail_subcategory_id,\n            subcategory_title: thisSubCategory.title,\n            field_title: \"\",\n            field_id: \"\",\n            required: false,\n          });\n        }\n      }\n    }\n    // DistinctCategoriesIds.;\n  }\n\n  return { PositionsTemp, DistinctCategoriesTemp, DistinctSubCategoriesTemp };\n};\n\nexport interface ViewPositionProps {\n  thisPosition: PositionAPI;\n  setThisPosition?: (value: PositionAPI | null) => void;\n  publishPosition: Function;\n  isGuest?: boolean;\n  PushPopupAlert: (alert: PopupAlertData) => void;\n}\n\nconst ViewPosition = (props: ViewPositionProps) => {\n  const [loadingRequest, setLoadingRequest] = useState<string>(\"\");\n\n  const publishPosition = async (\n    position_id: string,\n    status: boolean,\n    name: string\n  ) => {\n    if (\n      window.confirm(\n        `Are you sure do you want to ${\n          status ? \"publish\" : \"unpublish\"\n        } this position?`\n      )\n    ) {\n      setLoadingRequest(position_id);\n      try {\n        const res = await axios.patch(\n          `${API.APPLICATION}/publishposition/${position_id}`,\n          {\n            isPublished: status,\n          }\n        );\n        props.publishPosition({ position_id, status });\n        props.PushPopupAlert({\n          title: `${name} ${\n            status ? \" published\" : \" stopped on application\"\n          } successfully`,\n          theme: PopupAlertTheme.info,\n        });\n        let thisPositionCopy = { ...props.thisPosition };\n        thisPositionCopy.isPublished = status;\n        props.setThisPosition && props.setThisPosition(thisPositionCopy);\n        console.log(\"Position publish: \", res);\n      } catch (error) {\n        console.error(\"err: \", error);\n        props.PushPopupAlert({\n          title: errorToText(error),\n          theme: PopupAlertTheme.danger,\n        });\n      }\n      setLoadingRequest(\"\");\n    }\n  };\n\n  return (\n    <div className=\"w-full\">\n      <div className=\"w-full bg-gray-100 px-4 py-1 animate__animated animate__fadeIn\">\n        <div className=\"flex flex-col mb-2\">\n          <span className=\"text-blue-600 font-bold text-2xl\">\n            {props.thisPosition.position_title}\n          </span>\n          <div className=\"flex items-center gap-2 text-base text-gray-600\">\n            <span className={`italic`}>Desc:</span>\n            <span className=\"font-semibold\">\n              {props.thisPosition.description}\n            </span>\n          </div>\n          <div className=\"flex items-center gap-2 text-base text-gray-600\">\n            <span className={`italic`}>School level:</span>\n            <span className=\"font-semibold\">\n              {props.thisPosition.school_level_id.school_level_name}\n            </span>\n          </div>\n          <div className=\"flex items-center gap-2 text-base text-gray-600\">\n            <span className={`italic`}>Institute:</span>\n            <span className=\"font-semibold\">\n              {\n                props.thisPosition.education_institute_id\n                  .education_category_title\n              }\n            </span>\n          </div>\n          <div className=\"flex items-center gap-2 text-base text-gray-600\">\n            <span className={`italic`}>Courses:</span>\n            <span className=\"flex items-center gap-2\">\n              {props.thisPosition.courses.map((item, index) => (\n                <div\n                  key={index + item.course_id}\n                  className=\"flex items-center gap-1\"\n                >\n                  <span className=\"font-semibold\">{item.course_name}</span>\n                  <span className=\"text-gray-600\">({item.course_code})</span>\n                  {index !== props.thisPosition.courses.length - 1 && \",\"}\n                </div>\n              ))}\n            </span>\n          </div>\n          <div className=\"flex items-center gap-2 text-base text-gray-600\">\n            <span className={`italic`}>Status:</span>\n\n            <div className=\"flex flex-row items-center gap-2 mt-1\">\n              {!props.isGuest ? (\n                <div\n                  className={`relative ${\n                    loadingRequest.length > 0\n                      ? \"cursor-not-allowed\"\n                      : \"cursor-pointer\"\n                  } flex items-center gap-1`}\n                  onClick={() =>\n                    !loadingRequest.length &&\n                    !props.isGuest &&\n                    publishPosition(\n                      props.thisPosition.position_id,\n                      !props.thisPosition.isPublished,\n                      props.thisPosition.position_title\n                    )\n                  }\n                >\n                  <span className=\"block w-14 h-8 bg-gray-100 hover:border-gray-100 rounded-full shadow-inner\"></span>\n                  <span\n                    className={`absolute block w-6 h-6 mt-1 ml-1 rounded-full shadow inset-y-0 left-0 focus-within:shadow-outline transition-transform duration-500 ease-in-out ${\n                      !props.thisPosition.isPublished\n                        ? \"bg-yellow-500\"\n                        : \"bg-green-500 transform translate-x-full\"\n                    }`}\n                  ></span>\n                  {loadingRequest === props.thisPosition.position_id ? (\n                    <VscLoading className=\"animate__animated animate__rotateIn animate__infinite\" />\n                  ) : (\n                    <span className=\"font-medium\">\n                      {props.thisPosition.isPublished\n                        ? \"Published\"\n                        : \"Unpublished\"}\n                    </span>\n                  )}\n                </div>\n              ) : props.thisPosition.isPublished ? (\n                <span className=\"text-green-600 font-semibold text-xl italic\">\n                  Published\n                </span>\n              ) : (\n                <span className=\"text-yellow-600 font-semibold text-xl italic\">\n                  Not Published\n                </span>\n              )}\n            </div>\n          </div>\n        </div>\n        <div className=\"bg-white w-full rounded p-2 mb-2\">\n          <div className=\"text-blue-500 text-2xl font-bold my-2\">\n            Position Requirements\n          </div>\n          {props.thisPosition.requirements.length > 0 ? (\n            FC_PositionDistinctCategory([\n              props.thisPosition,\n            ]).DistinctCategoriesTemp.map((item, index) => (\n              <div\n                className=\"bg-gray-100 rounded p-2\"\n                key={index + item.category_id}\n              >\n                <div className=\"flex items-center gap-2 text-2xl text-gray-500 font-bold\">\n                  <MdTurnedIn />\n                  <span>{item.category_title}</span>\n                </div>\n                <div className=\"border bg-white mt-1\">\n                  <ViewRequirements\n                    requirements={FC_PositionDistinctCategory([\n                      props.thisPosition,\n                    ]).PositionsTemp.filter(\n                      (req) => req.category_id === item.category_id\n                    )}\n                  />\n                </div>\n              </div>\n            ))\n          ) : (\n            <NoResult\n              theme={NoResultThemes.Dark}\n              value={\"No requirements\"}\n            ></NoResult>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default connect(null, { publishPosition, PushPopupAlert })(ViewPosition);\n","import axios from \"axios\";\nimport React, { Component } from \"react\";\nimport {\n  MdArrowBack,\n  MdErrorOutline,\n  MdMail,\n  MdSmartphone,\n  MdTaskAlt,\n} from \"react-icons/md\";\nimport { connect } from \"react-redux\";\nimport { Auth, PushPopupAlert } from \"../../actions\";\nimport { fetchSchoolPosts, getSchoolPlacement } from \"../../actions/schools\";\nimport { PopupAlertData } from \"../../components/Alert/Popup\";\nimport { PositionAPI } from \"../../interfaces\";\nimport {\n  placedCandidateInterface,\n  PlacedCandidateStatus,\n} from \"../../interfaces/marks_publication\";\nimport { PopupAlertTheme } from \"../../interfaces/popupAlert\";\nimport { StoreState } from \"../../reducers\";\nimport {\n  capitalizeFirstLetter,\n  getPositionById,\n  isEmptyOrSpaces,\n} from \"../../shared/dataTest\";\nimport {\n  PostSchoolInterface,\n  PostRequestStatusInterface,\n} from \"../../shared/interfaces\";\nimport { API } from \"../../utils/api\";\nimport { errorToText } from \"../../utils/errors\";\nimport { getPlacementByRequest } from \"./RequestTeacher\";\n\ntype ReceivePostProps = {\n  viewPost: boolean;\n  placementList: placedCandidateInterface[];\n  thisPost: PostSchoolInterface;\n  setThisPost: (value: PostSchoolInterface | null) => void;\n  setModalState: (value: \"CREATE\" | \"UPDATE\" | \"RECEIVE\" | null) => void;\n  formError: {\n    element: string;\n    msg: string;\n  } | null;\n  setFormError: (\n    value: {\n      element: string;\n      msg: string;\n    } | null\n  ) => void;\n  receivedPosts: number;\n  setReceivedPosts: (value: number) => void;\n  loadingRequest: boolean;\n  setLoadingRequest: (value: boolean) => void;\n  loadingPost: boolean;\n  setLoadingPost: (value: boolean) => void;\n  positionId: string;\n  systemPositions: PositionAPI[];\n\n  // REDUX ==========\n  auth: Auth;\n  fetchSchoolPosts: Function;\n  getSchoolPlacement: Function;\n  PushPopupAlert: (alert: PopupAlertData) => void;\n};\n\ntype ReceivePostState = {\n  placement_id: string;\n  action: \"RECEIVED\" | \"NOT_RECEIVED\" | null;\n  comment: string;\n};\n\nclass ReceivePost extends Component<ReceivePostProps, ReceivePostState> {\n  constructor(props: ReceivePostProps) {\n    super(props);\n\n    this.state = {\n      placement_id: \"\",\n      action: null,\n      comment: \"\",\n    };\n  }\n  submitRequest = async (\n    thisPlacement: placedCandidateInterface,\n    action: \"RECEIVED\" | \"NOT_RECEIVED\"\n  ) => {\n    if (action === \"NOT_RECEIVED\" && isEmptyOrSpaces(this.state.comment)) {\n      return this.props.setFormError({\n        element: \"received_comment\",\n        msg: \"Reason of your decision is required!\",\n      });\n    }\n\n    let received: number = 0;\n    if (action === \"NOT_RECEIVED\") {\n      received = this.props.thisPost.received_posts\n        ? this.props.thisPost.received_posts\n        : 0;\n    } else {\n      received = this.props.thisPost.received_posts\n        ? this.props.thisPost.received_posts + 1\n        : 1;\n    }\n\n    this.props.setLoadingRequest(true);\n    try {\n      if (this.props.thisPost) {\n        const res = await axios.patch<{ data: PostSchoolInterface }>(\n          `${API.PLACEMENT}/requestpost/${this.props.thisPost.requested_post_id}`,\n          {\n            confirmed_posts: this.props.thisPost.confirmed_posts,\n            confirmed_by: this.props.auth.user.user_id,\n            received_posts: received,\n            approval_date: this.props.thisPost.approval_date,\n            school_id: this.props.thisPost.school_id,\n            position_id: this.props.thisPost.position_id,\n            district_id: this.props.thisPost.district_id,\n            needed_posts: this.props.thisPost.needed_posts,\n            male_number: this.props.thisPost.male_number,\n            female_number: this.props.thisPost.female_number,\n            description: this.props.thisPost.description,\n            occupied_posts: this.props.thisPost.occupied_posts,\n            requested_by: this.props.auth.user.user_id,\n            requested_post_status: PostRequestStatusInterface.RECEIVED,\n          }\n        );\n        if (res) {\n          // props.updateSchoolPost(\"SCHOOL\", res.data.data);\n          this.confirmPlacement(thisPlacement);\n\n          // !this.props.viewPost && this.props.setThisPost(null);\n          // this.props.setReceivedPosts(0);\n          // this.props.setModalState(null);\n          // this.props.PushPopupAlert({\n          //   title: `Post request has been received!`,\n          //   theme: PopupAlertTheme.info,\n          // });\n        }\n      }\n    } catch (error) {\n      console.error({ role_error: error });\n      this.props.PushPopupAlert({\n        title: errorToText(error),\n        theme: PopupAlertTheme.danger,\n      });\n    }\n    this.props.setLoadingRequest(false);\n  };\n\n  confirmPlacement = async (thisPlacement: placedCandidateInterface) => {\n    this.props.setLoadingRequest(true);\n    try {\n      if (this.props.thisPost) {\n        const res = await axios.post<{ data: PostSchoolInterface }>(\n          `${API.PLACEMENT}/confirmreceived`,\n          {\n            placedStatus: [\n              {\n                waiting_list_id: thisPlacement.waiting_list_id,\n                placed_candidate_id: thisPlacement._id,\n                status:\n                  this.state.action === \"NOT_RECEIVED\"\n                    ? PlacedCandidateStatus.REJECTED\n                    : PlacedCandidateStatus.PLACED,\n              },\n            ],\n          }\n        );\n        if (res) {\n          this.props.fetchSchoolPosts(\n            this.props.auth.user_access.school_id,\n            (status: boolean, message: string) => {\n              if (!status) {\n                if (message.length > 0 && this.props.loadingPost) {\n                  console.error(\"error loading school post: \", message);\n                  this.props.PushPopupAlert({\n                    title: message,\n                    theme: PopupAlertTheme.danger,\n                  });\n                }\n                this.props.setLoadingPost(false);\n              }\n            }\n          );\n\n          this.props.getSchoolPlacement(\n            this.props.auth.user_access.school_id,\n            (\n              status: boolean,\n              msg: string,\n              data?: placedCandidateInterface[]\n            ) => {\n              this.props.setLoadingPost(status);\n              if (!status && msg.length > 0) {\n                console.error({ getSchoolPlacementError: msg });\n                this.props.PushPopupAlert({\n                  title: msg,\n                  theme: PopupAlertTheme.danger,\n                });\n              }\n            }\n          );\n\n          this.props.setFormError(null);\n          this.setState({ comment: \"\", placement_id: \"\", action: null });\n          !this.props.viewPost && this.props.setThisPost(null);\n          this.props.setReceivedPosts(0);\n          this.props.setModalState(null);\n          this.props.PushPopupAlert({\n            title: `Request has been done completely!`,\n            theme: PopupAlertTheme.info,\n          });\n        }\n      }\n    } catch (error) {\n      console.error({ role_error: error });\n      this.props.PushPopupAlert({\n        title: errorToText(error),\n        theme: PopupAlertTheme.danger,\n      });\n    }\n    this.props.setLoadingRequest(false);\n  };\n\n  render() {\n    return (\n      <section>\n        <div className=\"border-b-2 border-gray-200 mb-2 pb-1 flex items-center gap-3\">\n          <button\n            className={`ml-3 bg-gray-100 hover:bg-blue-100 rounded-full px-1 py-1 focus:outline-none ${\n              this.props.loadingRequest ? \"cursor-wait\" : \"cursor-pointer\"\n            } animate__animated animate__fadeIn`}\n            disabled={this.props.loadingRequest}\n            onClick={() => {\n              this.props.setThisPost(null);\n              this.props.setReceivedPosts(0);\n              this.props.setModalState(null);\n            }}\n          >\n            <MdArrowBack className=\"text-4xl\" />\n          </button>\n\n          <span className=\"font-bold text-2xl md:text-3xl text-gray-700\">\n            Confirm teacher arrival\n          </span>\n        </div>\n\n        <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4 divide-x-0 divide-y md:divide-x md:divide-y-0\">\n          <div className=\"px-1 mb-4 mt-3\">\n            <div className=\"text-base leading-6 space-y-4 text-gray-700 sm:text-lg sm:leading-7\">\n              <div className=\"flex flex-row item-center justify-left gap-3 mb-2\">\n                <span className=\"text-gray-500 italic\">Position: </span>\n                <span className=\"font-bold\">\n                  {getPositionById(\n                    this.props.systemPositions,\n                    this.props.thisPost.position_id\n                  )\n                    ? getPositionById(\n                        this.props.systemPositions,\n                        this.props.thisPost.position_id\n                      )!.position_title\n                    : \"Unknown position\"}\n                </span>\n              </div>\n\n              <table className=\"w-full shadow\" id=\"report_content\">\n                <thead className=\"bg-blue-50 border-b-2 border-gray-300 text-gray-600 font-bold text-sm\">\n                  <tr>\n                    <td className=\"px-2 py-2\">Requested posts</td>\n                    <td className=\"px-2 py-2\">Approved posts</td>\n                    <td className=\"px-2 py-2\">Post posts</td>\n                    <td className=\"px-2 py-2\">Received posts</td>\n                    <td className=\"px-2 py-2\">Occupation</td>\n                    <td className=\"px-2 py-2\">Status</td>\n                  </tr>\n                </thead>\n                <tbody>\n                  <tr>\n                    <td className=\"px-2 py-2\">\n                      {this.props.thisPost.needed_posts}\n                    </td>\n                    <td className=\"px-2 py-2\">\n                      {this.props.thisPost.requested_post_status ===\n                      PostRequestStatusInterface.CONFIRMED ? (\n                        <div className=\"flex items-center gap-1\">\n                          {this.props.thisPost.confirmed_posts}\n                        </div>\n                      ) : (\n                        \"-\"\n                      )}\n                    </td>\n                    <td className=\"px-2 py-2\">\n                      {this.props.thisPost.requested_post_status ===\n                      PostRequestStatusInterface.CONFIRMED ? (\n                        <span>\n                          {\n                            getPlacementByRequest(\n                              this.props.placementList,\n                              this.props.thisPost.requested_post_id\n                            ).length\n                          }\n                        </span>\n                      ) : (\n                        \"-\"\n                      )}\n                    </td>\n                    <td className=\"px-2 py-2\">\n                      {this.props.thisPost.requested_post_status ===\n                      PostRequestStatusInterface.RECEIVED\n                        ? this.props.thisPost.received_posts\n                        : \"-\"}\n                    </td>\n                    <td className=\"px-2 py-2\">\n                      {this.props.thisPost.female_number +\n                        this.props.thisPost.male_number}\n                    </td>\n\n                    <td className=\"px-2 py-2\">\n                      <span\n                        className={`px-2 py-1 mx-1 font-semibold rounded ${\n                          this.props.thisPost.requested_post_status ===\n                          PostRequestStatusInterface.INITIATED\n                            ? \"text-gray-700 bg-gray-100 dark:bg-gray-700 dark:text-gray-100\"\n                            : this.props.thisPost.requested_post_status ===\n                              PostRequestStatusInterface.CONFIRMED\n                            ? \"text-blue-700 bg-blue-100 dark:bg-blue-700 dark:text-blue-100\"\n                            : \"text-green-800 bg-green-100 dark:bg-green-800 dark:text-green-100\"\n                        }`}\n                      >\n                        {this.props.thisPost.requested_post_status ===\n                        PostRequestStatusInterface.INITIATED\n                          ? \"Pending\"\n                          : capitalizeFirstLetter(\n                              this.props.thisPost.requested_post_status\n                            )}\n                      </span>\n                    </td>\n                  </tr>\n                </tbody>\n              </table>\n            </div>\n          </div>\n\n          <div className=\"px-4 mt-3 mb-4\">\n            {getPlacementByRequest(\n              this.props.placementList,\n              this.props.thisPost.requested_post_id\n            ).map((item, index) => (\n              <div\n                className=\"relative grid grid-cols-1 gap-4 px-4 py-1 mb-8 border rounded bg-white shadow\"\n                key={index + item._id}\n              >\n                <div className=\"relative flex gap-4\">\n                  {/* IMG ================== */}\n                  <img\n                    src={API.AUTH_FILES + \"/\" + item.user_info.photo}\n                    className=\"object-center object-cover relative rounded-lg -top-4 -mb-3 bg-white border h-20 w-20\"\n                    alt=\"\"\n                    loading=\"lazy\"\n                  />\n                  <div className=\"flex flex-col w-full\">\n                    <div className=\"flex flex-row justify-between\">\n                      <p className=\"relative text-xl whitespace-nowrap truncate overflow-hidden\">\n                        {item.user_info.fname + \" \" + item.user_info.lname}\n                      </p>\n                    </div>\n                    <p className=\"text-gray-500 text-sm flex items-center gap-1\">\n                      <MdSmartphone /> {item.phone_number}\n                    </p>\n                    <p className=\"text-gray-500 text-sm flex items-center gap-1\">\n                      <MdMail /> {item.email}\n                    </p>\n                  </div>\n                </div>\n                <div className=\"-mt-3\">\n                  {this.state.action !== \"NOT_RECEIVED\" && (\n                    <div className=\"flex flex-row-reverse gap-2\">\n                      <div className=\"flex-initial\">\n                        <button\n                          type=\"button\"\n                          className=\"btn btn-blue flex items-center font-medium tracking-wide capitalize transition duration-300 transform active:scale-95 ease-in-out\"\n                          disabled={this.props.loadingRequest}\n                          onClick={() => {\n                            this.setState({\n                              placement_id: item._id,\n                              action: \"RECEIVED\",\n                            });\n                            this.submitRequest(item, \"RECEIVED\");\n                          }}\n                        >\n                          <MdTaskAlt />\n                          <span className=\"pl-2 mx-1\">\n                            {this.props.loadingRequest\n                              ? \"Loading...\"\n                              : \"Received\"}\n                          </span>\n                        </button>\n                      </div>\n                      <div className=\"flex-initial\">\n                        <button\n                          type=\"button\"\n                          className=\"btn flex items-center px-5 py-2.5 font-medium tracking-wide text-black capitalize hover:bg-red-200 hover:fill-current hover:text-red-600 focus:outline-none transition duration-300 transform active:scale-95 ease-in-out\"\n                          disabled={this.props.loadingRequest}\n                          onClick={() =>\n                            this.setState({\n                              placement_id: item._id,\n                              action: \"NOT_RECEIVED\",\n                            })\n                          }\n                        >\n                          <MdErrorOutline />\n                          <span className=\"pl-2 mx-1\">Not received</span>\n                        </button>\n                      </div>\n                    </div>\n                  )}\n                  {this.state.action === \"NOT_RECEIVED\" &&\n                    this.state.placement_id === item._id && (\n                      <div className=\"flex flex-col md:flex-row items-end md:items-start gap-2 animate__animated animate__fadeInRight animate__faster mt-2\">\n                        <div className=\"w-full\">\n                          <textarea\n                            className={`border-2 rounded p-2 md:text-base w-full ${\n                              this.props.formError &&\n                              this.props.formError.element ===\n                                \"received_comment\"\n                                ? \"border-red-500\"\n                                : \"border-gray-300\"\n                            } focus:border-gray-500`}\n                            placeholder=\"comment\"\n                            onChange={(e) => {\n                              this.setState({ comment: e.target.value });\n                              this.props.formError &&\n                                this.props.formError.element ===\n                                  \"received_comment\" &&\n                                this.props.setFormError(null);\n                            }}\n                            value={this.state.comment}\n                            style={{ resize: \"none\" }}\n                          ></textarea>\n                          {this.props.formError &&\n                            this.props.formError.element ===\n                              \"received_comment\" && (\n                              <span className=\"text-red-700 text-sm\">\n                                {this.props.formError.msg}\n                              </span>\n                            )}\n                        </div>\n\n                        <button\n                          type=\"button\"\n                          className=\"btn bg-gray-100 hover:bg-gray-400 font-medium tracking-wide capitalize transition duration-300 transform active:scale-95 ease-in-out\"\n                          disabled={this.props.loadingRequest}\n                          onClick={() =>\n                            this.submitRequest(item, \"NOT_RECEIVED\")\n                          }\n                        >\n                          {this.props.loadingRequest ? \"Loading...\" : \"Confirm\"}\n                        </button>\n                      </div>\n                    )}\n                </div>\n              </div>\n            ))}\n          </div>\n        </div>\n      </section>\n    );\n  }\n}\n\nconst mapStateToProps = ({\n  auth,\n}: StoreState): {\n  auth: Auth;\n} => {\n  return {\n    auth: auth,\n  };\n};\nexport default connect(mapStateToProps, {\n  fetchSchoolPosts,\n  getSchoolPlacement,\n  PushPopupAlert,\n})(ReceivePost);\n","import React, { Component } from \"react\";\nimport { BiReply } from \"react-icons/bi\";\nimport Modal, { ModalSize, Themes } from \"../../components/Modal/Modal\";\nimport { PositionAPI } from \"../../interfaces\";\nimport { placedCandidateInterface } from \"../../interfaces/marks_publication\";\nimport { capitalizeFirstLetter, getPositionById } from \"../../shared/dataTest\";\nimport {\n  PostRequestStatusInterface,\n  PostSchoolInterface,\n} from \"../../shared/interfaces\";\nimport { getPlacementByRequest } from \"./RequestTeacher\";\n\ninterface ViewRequestProps {\n  thisPost: PostSchoolInterface;\n  setThisPost: (value: PostSchoolInterface | null) => void;\n  setViewPost: (value: boolean) => void;\n  systemPositions: PositionAPI[];\n  schoolPlacements: placedCandidateInterface[];\n  setPostId: (value: string) => void;\n  setModalState: (value: \"CREATE\" | \"UPDATE\" | \"RECEIVE\" | null) => void;\n  setPositionId: (value: string) => void;\n  setRequestedPosts: (value: number) => void;\n  setRequestExplanation: (value: string) => void;\n  setFemaleOnPosition: (value: number) => void;\n  setMaleOnPosition: (value: number) => void;\n  setFormSteps: (value: { ONE: boolean; TWO: boolean }) => void;\n  setStepState: (value: { ONE: boolean; TWO: boolean }) => void;\n}\n\nexport class ViewRequest extends Component<ViewRequestProps> {\n  render() {\n    return (\n      <Modal\n        backDrop={true}\n        theme={Themes.default}\n        close={(): void => {\n          this.props.setThisPost(null);\n          this.props.setViewPost(false);\n        }}\n        displayClose={true}\n        backDropClose={false}\n        title={\n          <div className=\"flex flex-row gap-4 items-center\">\n            <div className=\"flex flex-col\">\n              <span className=\"font-bold text-2xl text-gray-500\">\n                Viewing Post Request\n              </span>\n            </div>\n          </div>\n        }\n        widthSizeClass={ModalSize.large}\n        padding={{ title: true, body: false, footer: false }}\n      >\n        <section className=\"px-4 mx-auto mb-4 mt-3 flex items-start\">\n          <section className=\"w-full\">\n            <div className=\"flex flex-row item-center justify-left gap-3 mb-2\">\n              <span className=\"text-gray-500 italic\">Position: </span>\n              <span className=\"font-bold\">\n                {getPositionById(\n                  this.props.systemPositions,\n                  this.props.thisPost.position_id\n                )\n                  ? getPositionById(\n                      this.props.systemPositions,\n                      this.props.thisPost.position_id\n                    )!.position_title\n                  : \"Unknown position\"}\n              </span>\n            </div>\n            <div className=\"flex flex-row item-center justify-left gap-3 mb-2\">\n              <span className=\"text-gray-500 italic\">Requested posts: </span>\n              <span className=\"font-bold text-xl\">\n                {this.props.thisPost.needed_posts}\n              </span>\n            </div>\n            <div className=\"flex flex-row item-center justify-left gap-3 mb-2\">\n              <span className=\"text-gray-500 italic\">Approved posts: </span>\n              <span className=\"font-bold text-xl\">\n                {this.props.thisPost.requested_post_status !==\n                PostRequestStatusInterface.INITIATED ? (\n                  <div\n                    className=\"flex items-center gap-1 cursor-pointer\"\n                    onClick={() => this.props.setModalState(\"RECEIVE\")}\n                  >\n                    {this.props.thisPost.confirmed_posts}\n                    {getPlacementByRequest(\n                      this.props.schoolPlacements,\n                      this.props.thisPost.requested_post_id\n                    ).length > 0 && (\n                      <BiReply className=\"bg-yellow-600 w-5 h-5 text-white\" />\n                    )}\n                  </div>\n                ) : (\n                  \"-\"\n                )}\n              </span>\n            </div>\n            <div className=\"flex flex-row item-center justify-left gap-3 mb-2\">\n              <span className=\"text-gray-500 italic\">Placed posts: </span>\n              <span className=\"font-bold text-xl\">\n                {this.props.thisPost.requested_post_status !==\n                PostRequestStatusInterface.INITIATED ? (\n                  <div\n                    className=\"flex items-center gap-1 cursor-pointer\"\n                    onClick={() => this.props.setModalState(\"RECEIVE\")}\n                  >\n                    {\n                      getPlacementByRequest(\n                        this.props.schoolPlacements,\n                        this.props.thisPost.requested_post_id\n                      ).length\n                    }\n                    {getPlacementByRequest(\n                      this.props.schoolPlacements,\n                      this.props.thisPost.requested_post_id\n                    ).length > 0 && (\n                      <BiReply className=\"bg-yellow-600 w-5 h-5 text-white\" />\n                    )}\n                  </div>\n                ) : (\n                  \"-\"\n                )}\n              </span>\n            </div>\n            <div className=\"flex flex-row item-center justify-left gap-3 mb-2\">\n              <span className=\"text-gray-500 italic\">Received posts: </span>\n              <span className=\"font-bold text-xl\">\n                {this.props.thisPost.requested_post_status ===\n                PostRequestStatusInterface.RECEIVED\n                  ? this.props.thisPost.received_posts\n                  : \"-\"}\n              </span>\n            </div>\n            <div className=\"flex flex-row item-center justify-left gap-3 mb-2\">\n              <span className=\"text-gray-500 italic\">Number of female: </span>\n              <span className=\"font-bold text-xl\">\n                {this.props.thisPost.female_number}\n              </span>\n            </div>\n            <div className=\"flex flex-row item-center justify-left gap-3 mb-2\">\n              <span className=\"text-gray-500 italic\">Number of male: </span>\n              <span className=\"font-bold text-xl\">\n                {this.props.thisPost.male_number}\n              </span>\n            </div>\n            <div className=\"flex flex-row item-center justify-left gap-3 mb-2\">\n              <span className=\"text-gray-500 italic\">Request reason: </span>\n              <span className=\"font-bold text-xl\">\n                {this.props.thisPost.description}\n              </span>\n            </div>\n            <div className=\"flex flex-row item-center justify-left gap-3 mb-2\">\n              <span className=\"text-gray-500 italic\">Status: </span>\n              <span\n                className={`px-2 py-1 mx-1 font-semibold rounded ${\n                  this.props.thisPost.requested_post_status ===\n                  PostRequestStatusInterface.INITIATED\n                    ? \"text-gray-700 bg-gray-100 dark:bg-gray-700 dark:text-gray-100\"\n                    : this.props.thisPost.requested_post_status ===\n                      PostRequestStatusInterface.CONFIRMED\n                    ? \"text-blue-700 bg-blue-100 dark:bg-blue-700 dark:text-blue-100\"\n                    : \"text-green-800 bg-green-100 dark:bg-green-800 dark:text-green-100\"\n                }`}\n              >\n                {this.props.thisPost.requested_post_status ===\n                PostRequestStatusInterface.INITIATED\n                  ? \"Pending\"\n                  : capitalizeFirstLetter(\n                      this.props.thisPost.requested_post_status\n                    )}\n              </span>\n            </div>\n          </section>\n          <div className=\"mb-3 flex items-center justify-end gap-2\">\n            {this.props.thisPost.requested_post_status ===\n              PostRequestStatusInterface.INITIATED && (\n              <button\n                className=\"font-bold py-1 px-4 rounded bg-gray-500 text-white hover:bg-gray-700\"\n                onClick={() => {\n                  this.props.setModalState(\"UPDATE\");\n                  this.props.setPostId(this.props.thisPost.requested_post_id);\n                  this.props.setPositionId(this.props.thisPost.position_id);\n                  this.props.setRequestedPosts(\n                    this.props.thisPost.needed_posts\n                  );\n                  this.props.setRequestExplanation(\n                    this.props.thisPost.description\n                  );\n                  this.props.setFemaleOnPosition(\n                    this.props.thisPost.female_number\n                  );\n                  this.props.setMaleOnPosition(this.props.thisPost.male_number);\n                  this.props.setFormSteps({ ONE: true, TWO: false });\n                  this.props.setStepState({ ONE: false, TWO: false });\n                }}\n                disabled={\n                  this.props.thisPost.requested_post_status !==\n                  PostRequestStatusInterface.INITIATED\n                }\n              >\n                Edit\n              </button>\n            )}\n            {this.props.thisPost.requested_post_status !==\n              PostRequestStatusInterface.INITIATED &&\n              getPlacementByRequest(\n                this.props.schoolPlacements,\n                this.props.thisPost.requested_post_id\n              ).length > 0 && (\n                <button\n                  className=\"font-bold py-1 px-2 rounded bg-gray-500 text-white hover:bg-gray-700\"\n                  onClick={() => this.props.setModalState(\"RECEIVE\")}\n                >\n                  Receive\n                </button>\n              )}\n          </div>\n        </section>\n      </Modal>\n    );\n  }\n}\n\nexport default ViewRequest;\n","import React, { Component } from \"react\";\nimport { BiReply } from \"react-icons/bi\";\nimport NoResult, { NoResultThemes } from \"../../components/NoResult/NoResult\";\nimport { PositionAPI } from \"../../interfaces\";\nimport { placedCandidateInterface } from \"../../interfaces/marks_publication\";\nimport { capitalizeFirstLetter, getPositionById } from \"../../shared/dataTest\";\nimport {\n  PostRequestStatusInterface,\n  PostSchoolInterface,\n} from \"../../shared/interfaces\";\nimport { getPlacementByRequest } from \"./RequestTeacher\";\nimport ViewRequest from \"./ViewRequest\";\n\ninterface RequestListProps {\n  schoolPosts: PostSchoolInterface[];\n  systemPositions: PositionAPI[] | null;\n  setModalState: (value: \"CREATE\" | \"UPDATE\" | \"RECEIVE\" | null) => void;\n  loadingRequest: boolean;\n  filterByPosition: string;\n  setFilterByPosition: (value: string) => void;\n  setThisPost: (value: PostSchoolInterface | null) => void;\n  setViewPost: (value: boolean) => void;\n\n  schoolPlacements: placedCandidateInterface[];\n\n  thisPost: PostSchoolInterface | null;\n  setPostId: (value: string) => void;\n  setPositionId: (value: string) => void;\n  setRequestedPosts: (value: number) => void;\n  setRequestExplanation: (value: string) => void;\n  setFemaleOnPosition: (value: number) => void;\n  setMaleOnPosition: (value: number) => void;\n  setFormSteps: (value: { ONE: boolean; TWO: boolean }) => void;\n  setStepState: (value: { ONE: boolean; TWO: boolean }) => void;\n  viewPost: boolean;\n  modalState: \"CREATE\" | \"UPDATE\" | \"RECEIVE\" | null;\n}\n\ninterface RequestListState {\n  searchInput: string;\n}\n\nclass RequestList extends Component<RequestListProps, RequestListState> {\n  constructor(props: RequestListProps) {\n    super(props);\n\n    this.state = {\n      searchInput: \"\",\n    };\n  }\n\n  setSearchInput = (value: string) => {\n    this.setState({ searchInput: value });\n  };\n\n  render() {\n    return (\n      <div>\n        <div className=\"my-2 flex sm:flex-row flex-col justify-between\">\n          <div className=\"flex flex-col md:flex-row\">\n            <select\n              className=\"border-2 border-gray-700 bg-white p-2 rounded focus:outline-none\"\n              onChange={(e) => this.props.setFilterByPosition(e.target.value)}\n              value={this.props.filterByPosition}\n            >\n              <option value=\"all\">All Position</option>\n              {this.props.systemPositions &&\n              this.props.systemPositions.length > 0 ? (\n                this.props.systemPositions.map((position, index) => (\n                  <option key={index + 1} value={position.position_id}>\n                    {position.position_title}\n                  </option>\n                ))\n              ) : (\n                <option value=\"\">No Position found</option>\n              )}\n            </select>\n          </div>\n          <div className=\"block relative\">\n            <div className=\"pt-6 md:pt-0 md:pl-6\">\n              <button\n                className=\"btn bg-primary text-white hover:bg-blue-600\"\n                onClick={() => this.props.setModalState(\"CREATE\")}\n                disabled={this.props.loadingRequest}\n              >\n                Request Teacher\n              </button>\n            </div>\n          </div>\n        </div>\n\n        <div className=\"w-full py-2\">\n          <input\n            onChange={(e) => this.setSearchInput(e.target.value)}\n            type=\"text\"\n            value={this.state.searchInput}\n            placeholder=\"Search...\"\n            className=\"w-full bg-gray-50 border-2 border-gray-400 py-2 px-3 rounded focus:border-gray-800\"\n            disabled={\n              this.props.schoolPosts.length <= 0 || this.props.loadingRequest\n            }\n          />\n        </div>\n\n        <table className=\"w-full shadow\" id=\"report_content\">\n          <thead className=\"bg-white border-b-2 border-gray-300 text-gray-600 font-bold text-sm\">\n            <tr>\n              <td className=\"px-2 py-2\">#</td>\n              <td className=\"px-2 py-2\">Position</td>\n              <td className=\"px-2 py-2\">Request</td>\n              <td className=\"px-2 py-2\">Approved</td>\n              <td className=\"px-2 py-2\">Placed</td>\n              <td className=\"px-2 py-2\">Occupied</td>\n              <td className=\"px-2 py-2\">Vacant</td>\n              <td className=\"px-2 py-2\">Status</td>\n            </tr>\n          </thead>\n          <tbody>\n            {this.props.schoolPosts.length > 0 ? (\n              this.props.schoolPosts.map((schoolPost, index) => (\n                <tr\n                  key={index + schoolPost.requested_post_id}\n                  className=\"border-b border-gray-200 hover:bg-gray-100\"\n                >\n                  <td className=\"px-2 py-3 text-left font-medium\">\n                    {index + 1}\n                  </td>\n                  <td className=\"py-3 px-1 text-left font-medium\">\n                    {this.props.systemPositions &&\n                    getPositionById(\n                      this.props.systemPositions,\n                      schoolPost.position_id\n                    )\n                      ? getPositionById(\n                          this.props.systemPositions,\n                          schoolPost.position_id\n                        )!.position_title\n                      : \"Unknown position\"}\n                  </td>\n                  <td className=\"py-3 px-2 text-left text-base font-medium\">\n                    {schoolPost.needed_posts}\n                  </td>\n                  <td className=\"py-3 px-2 text-left text-base font-medium\">\n                    {schoolPost.requested_post_status !==\n                    PostRequestStatusInterface.INITIATED ? (\n                      <div className=\"flex items-center gap-1\">\n                        {schoolPost.confirmed_posts}\n                        {getPlacementByRequest(\n                          this.props.schoolPlacements,\n                          schoolPost.requested_post_id\n                        ).length > 0 && (\n                          <BiReply\n                            className=\"bg-yellow-600 w-5 h-5 text-white cursor-pointer\"\n                            onClick={() => {\n                              this.props.setModalState(\"RECEIVE\");\n                              this.props.setThisPost(schoolPost);\n                            }}\n                          />\n                        )}\n                      </div>\n                    ) : (\n                      \"-\"\n                    )}\n                  </td>\n                  <td className=\"py-3 px-2 text-left text-base font-medium\">\n                    {schoolPost.requested_post_status !==\n                    PostRequestStatusInterface.INITIATED ? (\n                      <div className=\"flex items-center gap-1\">\n                        {\n                          getPlacementByRequest(\n                            this.props.schoolPlacements,\n                            schoolPost.requested_post_id\n                          ).length\n                        }\n                        {getPlacementByRequest(\n                          this.props.schoolPlacements,\n                          schoolPost.requested_post_id\n                        ).length > 0 && (\n                          <BiReply\n                            className=\"bg-yellow-600 w-5 h-5 text-white cursor-pointer\"\n                            onClick={() => {\n                              this.props.setModalState(\"RECEIVE\");\n                              this.props.setThisPost(schoolPost);\n                            }}\n                          />\n                        )}\n                      </div>\n                    ) : (\n                      \"-\"\n                    )}\n                  </td>\n                  <td className=\"py-3 px-2 text-left text-base font-medium\">\n                    {schoolPost.occupied_posts\n                      ? schoolPost.occupied_posts +\n                        (schoolPost.received_posts\n                          ? schoolPost.received_posts\n                          : 0)\n                      : \"-\"}\n                  </td>\n                  <td className=\"py-3 px-2 text-left text-base font-medium\">\n                    {schoolPost.requested_post_status ===\n                    PostRequestStatusInterface.RECEIVED\n                      ? (schoolPost.confirmed_posts\n                          ? schoolPost.confirmed_posts\n                          : 0) -\n                        (schoolPost.received_posts\n                          ? schoolPost.received_posts\n                          : 0)\n                      : \"-\"}\n                  </td>\n                  <td>\n                    <span\n                      className={`px-2 py-1 font-semibold rounded ${\n                        schoolPost.requested_post_status ===\n                        PostRequestStatusInterface.INITIATED\n                          ? \"text-gray-700 bg-gray-100 dark:bg-gray-700 dark:text-gray-100\"\n                          : schoolPost.requested_post_status ===\n                            PostRequestStatusInterface.CONFIRMED\n                          ? \"text-blue-700 bg-blue-100 dark:bg-blue-700 dark:text-blue-100\"\n                          : \"text-green-800 bg-green-100 dark:bg-green-800 dark:text-green-100\"\n                      }`}\n                    >\n                      {schoolPost.requested_post_status ===\n                      PostRequestStatusInterface.INITIATED\n                        ? \"Pending\"\n                        : capitalizeFirstLetter(\n                            schoolPost.requested_post_status\n                          )}\n                    </span>\n                  </td>\n                  <td className=\"py- text-left\">\n                    <div className=\"flex item-center justify-end gap-1\">\n                      <button\n                        className=\"btn btn-blue transition ease-out duration-500 flex items-center\"\n                        title=\"View User Profile\"\n                        onClick={() => {\n                          this.props.setThisPost(schoolPost);\n                          this.props.setViewPost(true);\n                        }}\n                      >\n                        Details\n                      </button>\n                      {schoolPost.requested_post_status ===\n                        PostRequestStatusInterface.INITIATED && (\n                        <button\n                          className=\"btn bg-gray-500 text-white hover:bg-gray-700\"\n                          onClick={() => {\n                            this.props.setModalState(\"UPDATE\");\n                            this.props.setPostId(schoolPost.requested_post_id);\n                            this.props.setPositionId(schoolPost.position_id);\n                            this.props.setRequestedPosts(\n                              schoolPost.needed_posts\n                            );\n                            this.props.setRequestExplanation(\n                              schoolPost.description\n                            );\n                            this.props.setFemaleOnPosition(\n                              schoolPost.female_number\n                            );\n                            this.props.setMaleOnPosition(\n                              schoolPost.male_number\n                            );\n                            this.props.setFormSteps({ ONE: true, TWO: false });\n                            this.props.setStepState({ ONE: false, TWO: false });\n                          }}\n                          disabled={this.props.loadingRequest}\n                        >\n                          Edit\n                        </button>\n                      )}\n                    </div>\n                  </td>\n                </tr>\n              ))\n            ) : (\n              <tr>\n                <td colSpan={8}>\n                  <NoResult\n                    theme={NoResultThemes.Dark}\n                    value={\"No request have been made!\"}\n                  />\n                </td>\n              </tr>\n            )}\n          </tbody>\n        </table>\n\n        {this.props.viewPost &&\n          this.props.modalState === null &&\n          this.props.thisPost &&\n          this.props.systemPositions && (\n            <ViewRequest\n              thisPost={this.props.thisPost}\n              setThisPost={this.props.setThisPost}\n              setViewPost={this.props.setViewPost}\n              systemPositions={this.props.systemPositions}\n              schoolPlacements={this.props.schoolPlacements}\n              setPostId={this.props.setPostId}\n              setModalState={this.props.setModalState}\n              setPositionId={this.props.setPositionId}\n              setRequestedPosts={this.props.setRequestedPosts}\n              setRequestExplanation={this.props.setRequestExplanation}\n              setFemaleOnPosition={this.props.setFemaleOnPosition}\n              setMaleOnPosition={this.props.setMaleOnPosition}\n              setFormSteps={this.props.setFormSteps}\n              setStepState={this.props.setStepState}\n            />\n          )}\n      </div>\n    );\n  }\n}\n\nexport default RequestList;\n","import React, { Fragment } from \"react\";\nimport { FaSchool } from \"react-icons/fa\";\nimport { VscOpenPreview } from \"react-icons/vsc\";\n\ninterface StepsHeaderProps {\n  currentStep: number;\n  stepState: {\n    ONE: boolean;\n    TWO: boolean;\n  };\n  setFormSteps: (value: { ONE: boolean; TWO: boolean }) => void;\n}\n\nconst StepsHeader: React.FC<StepsHeaderProps> = (props) => {\n  return (\n    <Fragment>\n      <div className=\"p-5\">\n        <div className=\"mx-4 p-4\">\n          <div className=\"flex items-center\">\n            {/* STEP ONE ================================== */}\n            <div\n              className={`flex items-center ${\n                props.currentStep === 1\n                  ? \"text-white\"\n                  : props.stepState.ONE\n                  ? \"text-blue-500 cursor-pointer\"\n                  : \"text-gray-500\"\n              } relative`}\n              onClick={() =>\n                props.stepState.ONE &&\n                props.setFormSteps({\n                  ONE: true,\n                  TWO: false,\n                })\n              }\n            >\n              <div\n                className={`rounded-full transition duration-500 ease-in-out h-12 w-12 py-3 border-2 ${\n                  props.currentStep === 1\n                    ? \"border-blue-500 bg-blue-500\"\n                    : props.stepState.ONE\n                    ? \"border-blue-500 cursor-pointer\"\n                    : \"border-gray-500\"\n                }`}\n              >\n                <FaSchool className=\"feather feather-bookmark w-full h-full\" />\n              </div>\n              <div\n                className={`absolute top-0 -ml-10 text-center mt-16 w-32 text-xs font-semibold uppercase ${\n                  props.currentStep === 1\n                    ? \"text-blue-500\"\n                    : props.stepState.ONE\n                    ? \"text-blue-500 cursor-pointer\"\n                    : \"text-gray-500\"\n                }`}\n              >\n                Position\n              </div>\n            </div>\n            <div\n              className={`flex-auto border-t-2 transition duration-500 ease-in-out ${\n                props.stepState.ONE ? \"border-blue-500\" : \"border-gray-300\"\n              }`}\n            ></div>\n\n            {/* STEP TWO ================================== */}\n            <div\n              className={`flex items-center ${\n                props.currentStep === 4\n                  ? \"text-white\"\n                  : props.stepState.TWO\n                  ? \"text-blue-500 cursor-pointer\"\n                  : \"text-gray-500\"\n              } relative`}\n              onClick={() =>\n                props.stepState.TWO &&\n                props.setFormSteps({\n                  ONE: false,\n                  TWO: false,\n                })\n              }\n            >\n              <div\n                className={`rounded-full transition duration-500 ease-in-out h-12 w-12 py-3 border-2 ${\n                  props.currentStep === 4\n                    ? \"border-blue-500 bg-blue-500\"\n                    : props.stepState.TWO\n                    ? \"border-blue-500 cursor-pointer\"\n                    : \"border-gray-500\"\n                }`}\n              >\n                <VscOpenPreview className=\"feather feather-database w-full h-full\" />\n              </div>\n              <div\n                className={`absolute top-0 -ml-10 text-center mt-16 w-32 text-xs font-semibold uppercase ${\n                  props.currentStep === 4\n                    ? \"text-blue-500\"\n                    : props.stepState.TWO\n                    ? \"text-blue-500\"\n                    : \"text-gray-500\"\n                }`}\n              >\n                Description\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </Fragment>\n  );\n};\n\nexport default StepsHeader;\n","import axios from \"axios\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport {\n  Auth,\n  PushPopupAlert,\n  schoolLevelsStoreInterface,\n} from \"../../actions\";\nimport { createSchoolPost } from \"../../actions/schools\";\nimport { PopupAlertData } from \"../../components/Alert/Popup\";\nimport { PositionAPI } from \"../../interfaces\";\nimport { PopupAlertTheme } from \"../../interfaces/popupAlert\";\nimport { StoreState } from \"../../reducers\";\nimport { getPositionById, isEmptyOrSpaces } from \"../../shared/dataTest\";\nimport {\n  PostRequestStatusInterface,\n  PostSchoolInterface,\n  SchoolsInterface,\n} from \"../../shared/interfaces\";\nimport { API } from \"../../utils/api\";\nimport { errorToText } from \"../../utils/errors\";\nimport ViewPosition from \"../Positions/ViewPosition\";\nimport StepsHeader from \"./StepsHeader\";\n\ninterface RequestPostFormProps {\n  loadingRequest: boolean;\n  setLoadingRequest: (value: boolean) => void;\n  formSteps: {\n    ONE: boolean;\n    TWO: boolean;\n  };\n  setFormSteps: (value: { ONE: boolean; TWO: boolean }) => void;\n  stepState: {\n    ONE: boolean;\n    TWO: boolean;\n  };\n  setStepState: (value: { ONE: boolean; TWO: boolean }) => void;\n  positionId: string;\n  setPositionId: (value: string) => void;\n  setRequestedPosts: (value: number) => void;\n  requestedPosts: number;\n  maleOnPosition: number;\n  femaleOnPosition: number;\n  setFemaleOnPosition: (value: number) => void;\n  setMaleOnPosition: (value: number) => void;\n  requestExplanation: string;\n  setRequestExplanation: (value: string) => void;\n  modalState: \"CREATE\" | \"UPDATE\" | \"RECEIVE\" | null;\n  setModalState: (value: \"CREATE\" | \"UPDATE\" | \"RECEIVE\" | null) => void;\n  formError: {\n    element: string;\n    msg: string;\n  } | null;\n  setFormError: (\n    value: {\n      element: string;\n      msg: string;\n    } | null\n  ) => void;\n\n  //   REDUX =================\n  auth: Auth;\n  schools: SchoolsInterface[];\n  schoolPosts: PostSchoolInterface[];\n  schoolLevels: schoolLevelsStoreInterface;\n  systemPositions: PositionAPI[] | null;\n  createSchoolPost: Function;\n  PushPopupAlert: (alert: PopupAlertData) => void;\n}\n\ninterface RequestPostFormState {\n  selectedLevel: string;\n}\n\nexport class RequestPostForm extends Component<\n  RequestPostFormProps,\n  RequestPostFormState\n> {\n  constructor(props: RequestPostFormProps) {\n    super(props);\n\n    this.state = {\n      selectedLevel: \"\",\n    };\n  }\n\n  GetAllowedPositions = (position_id?: string): PositionAPI[] => {\n    if (this.props.systemPositions) {\n      if (this.props.schoolPosts.length > 0) {\n        let postPositionIds: string[] = [];\n        for (const key in this.props.schoolPosts) {\n          if (\n            Object.prototype.hasOwnProperty.call(this.props.schoolPosts, key)\n          ) {\n            if (\n              this.props.schoolPosts[key].requested_post_status !==\n                PostRequestStatusInterface.RECEIVED ||\n              (this.props.schoolPosts[key].requested_post_status !==\n                PostRequestStatusInterface.CONFIRMED &&\n                this.props.schoolPosts[key].confirmed_posts &&\n                this.props.schoolPosts[key].confirmed_posts === 0)\n            ) {\n              if (\n                !position_id ||\n                position_id !== this.props.schoolPosts[key].position_id\n              ) {\n                postPositionIds.push(this.props.schoolPosts[key].position_id);\n              }\n            }\n          }\n        }\n        if (position_id) {\n          postPositionIds = postPositionIds.filter(\n            (item) => item !== position_id\n          );\n        }\n        return this.props.systemPositions.filter(\n          (item) => !postPositionIds.includes(item.position_id)\n        );\n      }\n      return this.props.systemPositions;\n    }\n    return [];\n  };\n\n  submitRequest = async (e: React.FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n    // if (this.props.modalState === \"RECEIVE\" && this.props.receivedPosts < 0) {\n    //   return this.props.setFormError({\n    //     element: \"received_posts\",\n    //     msg: \"Invalid number of received post\",\n    //   });\n    // }\n    // if (\n    //   this.props.modalState === \"RECEIVE\" &&\n    //   this.props.thisPost &&\n    //   this.props.receivedPosts > this.props.thisPost.needed_posts\n    // ) {\n    //   return this.props.setFormError({\n    //     element: \"received_posts\",\n    //     msg: \"Invalid number of received post\",\n    //   });\n    // }\n\n    if (this.props.requestedPosts <= 0) {\n      return this.props.setFormError({\n        element: \"requested_posts\",\n        msg: \"Needed post must be greater than 0\",\n      });\n    }\n\n    if (isEmptyOrSpaces(this.props.requestExplanation)) {\n      return this.props.setFormError({\n        element: \"comment\",\n        msg: \"Explanation is required!\",\n      });\n    }\n\n    const thisSchool = this.props.schools.find(\n      (item) => item._id === this.props.auth.user_access.school_id\n    );\n\n    if (!thisSchool) {\n      return this.props.PushPopupAlert({\n        title: \"No district id found\",\n        theme: PopupAlertTheme.danger,\n      });\n    }\n\n    this.props.setLoadingRequest(true);\n    try {\n      if (this.props.modalState === \"CREATE\") {\n        const res = await axios.post<{ data: PostSchoolInterface }>(\n          `${API.PLACEMENT}/requestpost`,\n          {\n            school_id: this.props.auth.user_access.school_id,\n            position_id: this.props.positionId,\n            district_id: thisSchool.district_id,\n            needed_posts: this.props.requestedPosts,\n            male_number: this.props.maleOnPosition,\n            female_number: this.props.femaleOnPosition,\n            // description: 44,\n            description: this.props.requestExplanation,\n            occupied_posts:\n              Number(this.props.maleOnPosition) +\n              Number(this.props.femaleOnPosition),\n            requested_by: this.props.auth.user.user_id,\n          }\n        );\n        if (res) {\n          this.props.createSchoolPost(res.data.data);\n          this.props.setPositionId(\"\");\n          this.props.setRequestedPosts(0);\n          this.props.setFemaleOnPosition(0);\n          this.props.setMaleOnPosition(0);\n          this.props.setRequestExplanation(\"\");\n          this.props.setFormSteps({ ONE: true, TWO: false });\n          this.props.setStepState({ ONE: false, TWO: false });\n          this.props.PushPopupAlert({\n            title: `Post(s) has been requested!`,\n            theme: PopupAlertTheme.success,\n          });\n        }\n      }\n    } catch (error) {\n      console.error({ role_error: error });\n      this.props.PushPopupAlert({\n        title: errorToText(error),\n        theme: PopupAlertTheme.danger,\n      });\n    }\n    this.props.setLoadingRequest(false);\n  };\n\n  setSchoolLevel = (value: string) => {\n    this.setState({ selectedLevel: value });\n  };\n\n  getPositionByLevelId = (\n    allPosition: PositionAPI[],\n    levelId: string\n  ): PositionAPI[] => {\n    if (isEmptyOrSpaces(levelId)) {\n      return allPosition;\n    }\n    return allPosition.filter(\n      (item) => item.school_level_id.school_level_id === levelId\n    );\n  };\n\n  render() {\n    return (\n      <div>\n        <StepsHeader\n          currentStep={this.props.formSteps.TWO ? 2 : 1}\n          stepState={this.props.stepState}\n          setFormSteps={this.props.setFormSteps}\n        />\n        <div className=\"px-4 mx-auto mb-4 mt-3\">\n          {this.props.formSteps.ONE && (\n            <section>\n              <div className=\"flex flex-col mb-4\">\n                <label>School level</label>\n                <select\n                  className=\"border-2 border-gray-700 bg-white p-2 rounded focus:outline-none focus:bg-gray-100\"\n                  value={this.state.selectedLevel}\n                  onChange={(e) => {\n                    this.setSchoolLevel(e.target.value);\n                  }}\n                >\n                  <option value=\"\">Choose level</option>\n                  {this.props.schoolLevels.school_levels &&\n                  this.props.schoolLevels.school_levels.length > 0 ? (\n                    this.props.schoolLevels.school_levels.map((item, index) => (\n                      <option key={index + 11} value={item.school_level_id}>\n                        {item.school_level_name}\n                      </option>\n                    ))\n                  ) : (\n                    <option>No school level found</option>\n                  )}\n                </select>\n              </div>\n\n              <div className=\"flex flex-col\">\n                <label>Select Position</label>\n                <select\n                  className=\"border-2 border-gray-700 bg-white p-2 rounded focus:outline-none focus:bg-gray-100\"\n                  value={this.props.positionId}\n                  onChange={(e) => {\n                    this.props.setPositionId(e.target.value);\n                  }}\n                >\n                  <option value=\"\">Choose Position</option>\n                  {this.props.systemPositions &&\n                  this.getPositionByLevelId(\n                    this.GetAllowedPositions(\n                      this.props.positionId.length > 0\n                        ? this.props.positionId\n                        : \"\"\n                    ),\n                    this.state.selectedLevel\n                  ).length > 0 ? (\n                    this.getPositionByLevelId(\n                      this.GetAllowedPositions(\n                        this.props.positionId.length > 0\n                          ? this.props.positionId\n                          : \"\"\n                      ),\n                      this.state.selectedLevel\n                    ).map((position, index) => (\n                      <option key={index + 11} value={position.position_id}>\n                        {position.position_title}\n                      </option>\n                    ))\n                  ) : (\n                    <option>No position found</option>\n                  )}\n                </select>\n              </div>\n              {this.props.positionId.length > 0 &&\n                this.props.systemPositions &&\n                getPositionById(\n                  this.props.systemPositions,\n                  this.props.positionId\n                ) && (\n                  <div className=\"my-2 rounded border\">\n                    <ViewPosition\n                      thisPosition={\n                        getPositionById(\n                          this.props.systemPositions,\n                          this.props.positionId\n                        )!\n                      }\n                      isGuest={true}\n                    />\n                  </div>\n                )}\n              <div className=\"bg-white w-full flex justify-end\">\n                {this.props.positionId.length > 0 && (\n                  <button\n                    className=\"btn btn-blue m-1 mr-2 mb-2 animate__animated animate__fadeIn focus:outline-none\"\n                    onClick={() => {\n                      this.props.setFormSteps({\n                        ONE: false,\n                        TWO: true,\n                      });\n                      this.props.setStepState({\n                        ONE: true,\n                        TWO: false,\n                      });\n                    }}\n                  >\n                    Continue\n                  </button>\n                )}\n              </div>\n            </section>\n          )}\n          <form onSubmit={this.submitRequest}>\n            <div className=\"bg-white\">\n              {this.props.formSteps.TWO && (\n                <div className=\"text-base leading-6 space-y-4 text-gray-700 sm:text-lg sm:leading-7\">\n                  <div className=\"mb-4 md:flex md:justify-between\">\n                    <div className=\"mb-4 md:mr-2 md:mb-0 w-full\">\n                      <label\n                        className=\"block mb-2 text-sm font-bold text-gray-700\"\n                        htmlFor=\"female\"\n                      >\n                        Current number of Female on this position\n                      </label>\n                      <input\n                        className=\"appearance-none rounded w-full py-1 px-4 border-2 border-gray-700 bg-white focus:outline-none focus:bg-gray-100\"\n                        id=\"female\"\n                        type=\"number\"\n                        min={0}\n                        value={this.props.femaleOnPosition}\n                        onChange={(e) =>\n                          this.props.setFemaleOnPosition(Number(e.target.value))\n                        }\n                        placeholder=\"Current number of Female on this position\"\n                      />\n                      {/* <p className=\"text-xs italic text-red-500\">\n                          Please choose a password.\n                        </p> */}\n                    </div>\n                    <div className=\"md:ml-2 w-full\">\n                      <label\n                        className=\"block mb-2 text-sm font-bold text-gray-700\"\n                        htmlFor=\"male\"\n                      >\n                        Current number of Male on this position\n                      </label>\n                      <input\n                        className=\"appearance-none rounded w-full py-1 px-4 border-2 border-gray-700 bg-white focus:outline-none focus:bg-gray-100\"\n                        id=\"male\"\n                        type=\"number\"\n                        min={0}\n                        value={this.props.maleOnPosition}\n                        onChange={(e) =>\n                          this.props.setMaleOnPosition(Number(e.target.value))\n                        }\n                        placeholder=\"Current number of Male on this post\"\n                      />\n                    </div>\n                  </div>\n                  <div className=\"flex flex-col\">\n                    <label>Needed posts (number)</label>\n                    <input\n                      type=\"number\"\n                      className={`appearance-none rounded w-full py-1 px-4 border-2 bg-white focus:outline-none focus:bg-gray-100 ${\n                        this.props.formError &&\n                        this.props.formError.element === \"requested_posts\"\n                          ? \"border-red-700\"\n                          : \"border-gray-700\"\n                      }`}\n                      value={this.props.requestedPosts}\n                      onChange={(e) => {\n                        this.props.setRequestedPosts(Number(e.target.value));\n                        this.props.formError &&\n                          this.props.formError.element === \"requested_posts\" &&\n                          this.props.setFormError(null);\n                      }}\n                      placeholder=\"1\"\n                    />\n                    {this.props.formError &&\n                      this.props.formError.element === \"requested_posts\" && (\n                        <span className=\"text-xs italic text-red-700 mt-1\">\n                          {this.props.formError.msg}\n                        </span>\n                      )}\n                  </div>\n                  <div className=\"flex flex-col\">\n                    <label>Explanation</label>\n                    <textarea\n                      name=\"description\"\n                      className={`appearance-none rounded w-full py-1 px-4 border-2 bg-white focus:outline-none focus:bg-gray-100 ${\n                        this.props.formError &&\n                        this.props.formError.element === \"comment\"\n                          ? \"border-red-700\"\n                          : \"border-gray-700\"\n                      }`}\n                      id=\"description\"\n                      placeholder=\"Explanation\"\n                      value={this.props.requestExplanation}\n                      onChange={(e) => {\n                        this.props.setRequestExplanation(e.target.value);\n                        this.props.formError &&\n                          this.props.formError.element === \"comment\" &&\n                          this.props.setFormError(null);\n                      }}\n                      rows={2}\n                    ></textarea>\n                    {this.props.formError &&\n                      this.props.formError.element === \"comment\" && (\n                        <span className=\"text-xs italic text-red-700 mt-1\">\n                          {this.props.formError.msg}\n                        </span>\n                      )}\n                  </div>\n                </div>\n              )}\n              <div className=\"pt-4 flex justify-between\">\n                <button\n                  className=\"btn bg-gray-400 text-white hover:bg-gray-600\"\n                  onClick={() => {\n                    this.props.setPositionId(\"\");\n                    this.props.setRequestedPosts(0);\n                    this.props.setFemaleOnPosition(0);\n                    this.props.setMaleOnPosition(0);\n                    this.props.setRequestExplanation(\"\");\n                    this.props.setModalState(null);\n                    this.props.setFormError(null);\n                    this.props.setFormSteps({ ONE: true, TWO: false });\n                    this.props.setStepState({ ONE: false, TWO: false });\n                  }}\n                >\n                  Exit\n                </button>\n                {this.props.formSteps.TWO && (\n                  <button\n                    className=\"btn bg-primary text-white hover:bg-blue-600\"\n                    disabled={this.props.loadingRequest}\n                  >\n                    {this.props.loadingRequest ? \"Loading...\" : \"Request\"}\n                  </button>\n                )}\n              </div>\n            </div>\n          </form>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = ({\n  auth,\n  schools,\n  system_settings,\n  schoolLevels,\n}: StoreState): {\n  auth: Auth;\n  schools: SchoolsInterface[];\n  schoolPosts: PostSchoolInterface[];\n  schoolLevels: schoolLevelsStoreInterface;\n  systemPositions: PositionAPI[] | null;\n} => {\n  return {\n    auth: auth,\n    schools: schools.schools,\n    schoolPosts: schools.schoolPosts,\n    schoolLevels,\n    systemPositions: system_settings.systemPositions,\n  };\n};\n\nexport default connect(mapStateToProps, {\n  createSchoolPost,\n  PushPopupAlert,\n})(RequestPostForm);\n","import React, { Component } from \"react\";\nimport { GiTeacher } from \"react-icons/gi\";\nimport { connect } from \"react-redux\";\nimport { Redirect } from \"react-router-dom\";\nimport {\n  Auth,\n  loadSchoolLevels,\n  PushPopupAlert,\n  schoolLevelsStoreInterface,\n} from \"../../actions\";\nimport {\n  getSchools,\n  fetchSchoolPosts,\n  createSchoolPost,\n  updateSchoolPost,\n  getSchoolPlacement,\n} from \"../../actions/schools\";\nimport { getPositions } from \"../../actions/settings\";\nimport { PopupAlertData } from \"../../components/Alert/Popup\";\nimport { PositionAPI } from \"../../interfaces\";\nimport {\n  placedCandidateInterface,\n  PlacedCandidateStatus,\n} from \"../../interfaces/marks_publication\";\nimport { PopupAlertTheme } from \"../../interfaces/popupAlert\";\nimport { StoreState } from \"../../reducers\";\nimport { SchoolsInterface, PostSchoolInterface } from \"../../shared/interfaces\";\nimport ReceivePost from \"./ReceivePost\";\nimport RequestList from \"./RequestList\";\nimport RequestPostForm from \"./RequestPostForm\";\n\nexport const getPlacementByRequest = (\n  placements: placedCandidateInterface[],\n  request: string,\n  status: PlacedCandidateStatus = PlacedCandidateStatus.PENDING\n): placedCandidateInterface[] => {\n  // position id must be replaced with request id\n  return placements.filter(\n    (item) => item.request_id === request && item.status === status\n  );\n};\n\ninterface RequestTeacherProps {\n  auth: Auth;\n  schools: SchoolsInterface[];\n  schoolLevels: schoolLevelsStoreInterface;\n  systemPositions: PositionAPI[] | null;\n  schoolPosts: PostSchoolInterface[];\n  schoolPlacements: placedCandidateInterface[] | null;\n  getPositions: Function;\n  fetchSchoolPosts: Function;\n  getSchoolPlacement: Function;\n  createSchoolPost: Function;\n  updateSchoolPost: Function;\n  getSchools: Function;\n  loadSchoolLevels: (callback: (loading: boolean) => void) => void;\n  PushPopupAlert: (alert: PopupAlertData) => void;\n}\n\ninterface RequestTeacherState {\n  loading: boolean;\n  loadingPost: boolean;\n  loadingRequest: boolean;\n  modalState: \"CREATE\" | \"UPDATE\" | \"RECEIVE\" | null;\n  filterByPosition: string;\n  positionId: string;\n  requestedPosts: number;\n  femaleOnPosition: number;\n  maleOnPosition: number;\n  requestExplanation: string;\n  formSteps: {\n    ONE: boolean;\n    TWO: boolean;\n  };\n  stepState: {\n    ONE: boolean;\n    TWO: boolean;\n  };\n  thisPost: PostSchoolInterface | null;\n  viewPost: boolean;\n  postId: string;\n  receivedPosts: number;\n  formError: {\n    element: string;\n    msg: string;\n  } | null;\n}\nclass RequestTeacher extends Component<\n  RequestTeacherProps,\n  RequestTeacherState\n> {\n  constructor(props: RequestTeacherProps) {\n    super(props);\n\n    this.state = {\n      loading: true,\n      loadingPost: true,\n      loadingRequest: false,\n      modalState: null,\n      filterByPosition: \"\",\n      positionId: \"\",\n      requestedPosts: 0,\n      femaleOnPosition: 0,\n      maleOnPosition: 0,\n      requestExplanation: \"\",\n      formSteps: { ONE: true, TWO: false },\n      stepState: { ONE: false, TWO: false },\n      thisPost: null,\n      viewPost: false,\n      postId: \"\",\n      receivedPosts: 0,\n      formError: null,\n    };\n  }\n\n  setLoading = (value: boolean) => {\n    this.setState({ loading: value });\n  };\n\n  setLoadingRequest = (value: boolean) => {\n    this.setState({ loadingRequest: value });\n  };\n\n  setLoadingPost = (value: boolean) => {\n    this.setState({ loadingPost: value });\n  };\n\n  setViewPost = (value: boolean) => {\n    this.setState({ viewPost: value });\n  };\n\n  setPostId = (value: string) => {\n    this.setState({ postId: value });\n  };\n\n  setFormError = (\n    value: {\n      element: string;\n      msg: string;\n    } | null\n  ) => {\n    this.setState({ formError: value });\n  };\n\n  setPositionId = (value: string) => {\n    this.setState({ positionId: value });\n  };\n  setRequestedPosts = (value: number) => {\n    this.setState({ requestedPosts: value });\n  };\n  setFemaleOnPosition = (value: number) => {\n    this.setState({ femaleOnPosition: value });\n  };\n  setMaleOnPosition = (value: number) => {\n    this.setState({ maleOnPosition: value });\n  };\n  setRequestExplanation = (value: string) => {\n    this.setState({ requestExplanation: value });\n  };\n  setFormSteps = (value: { ONE: boolean; TWO: boolean }) => {\n    this.setState({ formSteps: value });\n  };\n  setStepState = (value: { ONE: boolean; TWO: boolean }) => {\n    this.setState({ stepState: value });\n  };\n  setFilterByPosition = (value: string) => {\n    this.setState({ filterByPosition: value });\n  };\n\n  setThisPost = (value: PostSchoolInterface | null) => {\n    this.setState({ thisPost: value });\n  };\n\n  setModalState = (value: \"CREATE\" | \"UPDATE\" | \"RECEIVE\" | null) => {\n    this.setState({ modalState: value });\n  };\n\n  setReceivedPosts = (value: number) => {\n    this.setState({ receivedPosts: value });\n  };\n\n  componentDidMount = () => {\n    if (this.props.auth.user_access.school_id.length <= 0) {\n      return <Redirect to=\"/apps-page\" />;\n    }\n    if (!this.props.schools.length && this.state.loading) {\n      this.props.getSchools((status: boolean, msg: string) => {\n        this.setLoading(status);\n        if (msg.length > 0) {\n          console.error({ loadingCandidatesError: msg });\n          this.setLoading(false);\n        }\n      });\n    } else {\n      this.setLoading(false);\n    }\n\n    if (!this.props.schoolPlacements) {\n      this.props.getSchoolPlacement(\n        this.props.auth.user_access.school_id,\n        (status: boolean, msg: string, data?: placedCandidateInterface[]) => {\n          this.setLoading(status);\n          if (!status && msg.length > 0) {\n            console.error({ getSchoolPlacementError: msg });\n          }\n        }\n      );\n    } else {\n      this.setLoading(false);\n    }\n\n    if (\n      this.props.systemPositions === null ||\n      (this.props.systemPositions.length === 0 && this.state.loading)\n    ) {\n      this.setLoading(true);\n      this.props.getPositions((status: boolean, msg: string) => {\n        this.setLoading(status);\n        console.log({ status: status, msg: msg });\n        if (msg.length) {\n          this.props.PushPopupAlert({\n            title: msg,\n            theme: PopupAlertTheme.danger,\n          });\n        }\n      });\n    } else {\n      this.setLoading(false);\n    }\n\n    if (\n      this.props.schoolLevels.school_levels === null ||\n      (this.props.schoolLevels.school_levels.length === 0 && this.state.loading)\n    ) {\n      this.props.loadSchoolLevels(this.setLoading);\n    }\n\n    if (!this.props.schoolPosts.length && this.state.loadingPost) {\n      this.props.fetchSchoolPosts(\n        this.props.auth.user_access.school_id,\n        (status: boolean, message: string) => {\n          if (!status) {\n            if (message.length > 0 && this.state.loadingPost) {\n              console.error(\"error loading school post: \", message);\n              this.props.PushPopupAlert({\n                title: message,\n                theme: PopupAlertTheme.danger,\n              });\n            }\n            this.setState({ loadingPost: false });\n          }\n        }\n      );\n    } else {\n      this.setState({ loadingPost: false });\n    }\n  };\n\n  getPositionById = (\n    systemPositions: PositionAPI[],\n    positionId: string\n  ): PositionAPI | undefined => {\n    return systemPositions.find((item) => item.position_id === positionId);\n  };\n\n  render() {\n    if (this.state.loading) {\n      return (\n        <div className=\"text-center mt-7 font-bold text-4xl text-gray-400 animate-pulse\">\n          Loading data...\n        </div>\n      );\n    }\n\n    return (\n      <div>\n        {/* header title */}\n        <div className=\"flex flex-row items-start gap-3 my-2\">\n          <GiTeacher className=\"text-blue-700 w-10 h-10 md:block hidden\" />\n          <div className=\"w-full\">\n            <div className=\"flex justify-between w-full\">\n              <div className=\"flex flex-col gap-1 justify-between\">\n                <h1 className=\"md:text-4xl text-3xl font-semibold\">\n                  Teacher Request\n                </h1>\n\n                <div className=\"flex-row items-center md:gap-3 gap-2 hidden\">\n                  <div className=\"flex flex-row items-center mt-1 gap-1\">\n                    <span className=\"text-gray-600 text-xl\">level:</span>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n        {/* end header title */}\n\n        <div className=\"bg-white shadow p-2 rounded\">\n          {!this.state.modalState && this.props.schoolPlacements && (\n            <RequestList\n              systemPositions={this.props.systemPositions}\n              setModalState={this.setModalState}\n              loadingRequest={this.state.loadingRequest}\n              setFilterByPosition={this.setFilterByPosition}\n              schoolPosts={this.props.schoolPosts}\n              setThisPost={this.setThisPost}\n              setViewPost={this.setViewPost}\n              setPostId={this.setPostId}\n              setPositionId={this.setPositionId}\n              setRequestedPosts={this.setRequestedPosts}\n              setRequestExplanation={this.setRequestExplanation}\n              setFemaleOnPosition={this.setFemaleOnPosition}\n              setMaleOnPosition={this.setMaleOnPosition}\n              setFormSteps={this.setFormSteps}\n              setStepState={this.setStepState}\n              thisPost={this.state.thisPost}\n              viewPost={this.state.viewPost}\n              modalState={this.state.modalState}\n              schoolPlacements={this.props.schoolPlacements}\n              filterByPosition={this.state.filterByPosition}\n            />\n          )}\n\n          {(this.state.modalState === \"CREATE\" ||\n            this.state.modalState === \"UPDATE\") && (\n            <RequestPostForm\n              loadingRequest={this.state.loadingRequest}\n              setLoadingRequest={this.setLoadingRequest}\n              formSteps={this.state.formSteps}\n              setFormSteps={this.setFormSteps}\n              stepState={this.state.stepState}\n              setStepState={this.setStepState}\n              positionId={this.state.positionId}\n              setPositionId={this.setPositionId}\n              setRequestedPosts={this.setRequestedPosts}\n              requestedPosts={this.state.requestedPosts}\n              maleOnPosition={this.state.maleOnPosition}\n              femaleOnPosition={this.state.femaleOnPosition}\n              setFemaleOnPosition={this.setFemaleOnPosition}\n              setMaleOnPosition={this.setMaleOnPosition}\n              requestExplanation={this.state.requestExplanation}\n              setRequestExplanation={this.setRequestExplanation}\n              modalState={this.state.modalState}\n              setModalState={this.setModalState}\n              formError={this.state.formError}\n              setFormError={this.setFormError}\n            />\n          )}\n\n          {this.state.modalState === \"RECEIVE\" &&\n            this.state.thisPost &&\n            this.props.systemPositions &&\n            this.props.schoolPlacements && (\n              <ReceivePost\n                loadingPost={this.state.loadingPost}\n                loadingRequest={this.state.loadingRequest}\n                positionId={this.state.positionId}\n                thisPost={this.state.thisPost}\n                viewPost={this.state.viewPost}\n                receivedPosts={this.state.receivedPosts}\n                formError={this.state.formError}\n                systemPositions={this.props.systemPositions}\n                setThisPost={this.setThisPost}\n                setModalState={this.setModalState}\n                setFormError={this.setFormError}\n                setReceivedPosts={this.setReceivedPosts}\n                setLoadingRequest={this.setLoadingRequest}\n                setLoadingPost={this.setLoadingPost}\n                placementList={this.props.schoolPlacements}\n              />\n            )}\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = ({\n  auth,\n  schools,\n  system_settings,\n  schoolLevels,\n}: StoreState): {\n  auth: Auth;\n  schools: SchoolsInterface[];\n  schoolPosts: PostSchoolInterface[];\n  schoolPlacements: placedCandidateInterface[] | null;\n  schoolLevels: schoolLevelsStoreInterface;\n  systemPositions: PositionAPI[] | null;\n} => {\n  return {\n    auth: auth,\n    schools: schools.schools,\n    schoolPosts: schools.schoolPosts,\n    schoolPlacements: schools.schoolPlacements,\n    schoolLevels,\n    systemPositions: system_settings.systemPositions,\n  };\n};\n\nexport const PostRequest = connect(mapStateToProps, {\n  loadSchoolLevels,\n  getPositions,\n  getSchools,\n  fetchSchoolPosts,\n  getSchoolPlacement,\n  createSchoolPost,\n  updateSchoolPost,\n  PushPopupAlert,\n})(RequestTeacher);\n"],"sourceRoot":""}
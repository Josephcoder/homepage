{"version":3,"sources":["containers/ProctoringCenter/ProctoringCenter.tsx"],"names":["_ProctoringCenter","props","componentDidMount","auth","user_access","room_id","length","FC_RoomDetails","status","errorMsg","setState","error","state","this","proctoring","room","loaded","className","room_number","center_name","center_id","district_name","district_id","province_name","province_id","room_exams","map","key","position_title","course_name","course_code","React","Component","ProctoringCenter","connect"],"mappings":"0SAqBMA,E,kDACJ,WAAYC,GAAkB,IAAD,8BAC3B,cAAMA,IAQRC,kBAAoB,WACd,EAAKD,MAAME,KAAKC,YAAYC,QAAQC,QAAU,GAChD,EAAKL,MAAMM,eACT,EAAKN,MAAME,KAAKC,YAAYC,SAC5B,SAACG,EAAiBC,IACD,IAAXD,GACF,EAAKE,SAAS,CACZC,OAAO,EACPF,SAAUA,QAdpB,EAAKG,MAAQ,CACXD,OAAO,EACPF,SAAU,IALe,E,0CAyB7B,WACE,IACuB,IAArBI,KAAKD,MAAMD,QAC2B,IAAtCE,KAAKZ,MAAMa,WAAWC,KAAKC,OAE3B,OACE,qBAAKC,UAAU,kBAAf,SACE,oBAAIA,UAAU,4EAAd,oCAON,MAUIJ,KAAKZ,MAAMa,WAAWC,KARxBG,GAFF,EACEb,QADF,EAEEa,aAEAC,GAJF,EAGEC,UAHF,EAIED,aAEAE,GANF,EAKEC,YALF,EAMED,eAEAE,GARF,EAOEC,YAPF,EAQED,eARF,EASEP,OAEF,OACE,cAAC,WAAD,UACE,sBAAKC,UAAU,OAAf,UACE,sBAAKA,UAAU,6BAAf,UACE,oBAAIA,UAAU,6DAAd,0BAGA,sBAAKA,UAAU,4BAAf,UACE,sBAAKA,UAAU,2BAAf,UACE,qBAAKA,UAAU,MAAf,SACE,cAAC,IAAD,CAAcA,UAAU,eAE1B,sBAAKA,UAAU,kBAAf,UACE,sBAAKA,UAAU,OAAf,UACE,sBAAMA,UAAU,gBAAhB,uBAAiD,IACjD,kCAAKM,QAEP,sBAAKN,UAAU,OAAf,UACE,sBAAMA,UAAU,gBAAhB,uBAAiD,IACjD,kCAAKI,cAIX,sBAAKJ,UAAU,2BAAf,UACE,qBAAKA,UAAU,MAAf,SACE,cAAC,IAAD,CAAUA,UAAU,eAEtB,sBAAKA,UAAU,aAAf,UACE,sBAAKA,UAAU,OAAf,UACE,sBAAMA,UAAU,gBAAhB,0BAAoD,IACpD,kCAAKE,QAGP,sBAAKF,UAAU,OAAf,UACE,sBAAMA,UAAU,gBAAhB,0BAAoD,IACpD,kCAAKC,iBAIN,OAGT,oBAAID,UAAU,wCAAd,gCAGA,qBAAKA,UAAU,+BAAf,SACGJ,KAAKZ,MAAMa,WAAWW,WAAWnB,QAAU,EAC1C,qBAAKW,UAAU,kBAAf,4CAIA,wBAAOA,UAAU,mBAAjB,UACE,uBAAOA,UAAU,yBAAjB,SACE,+BACE,oBAAIA,UAAU,MAAd,eACA,oBAAIA,UAAU,MAAd,sBACA,oBAAIA,UAAU,MAAd,oBACA,oBAAIA,UAAU,MAAd,kBACA,oBAAIA,UAAU,MAAd,kBACA,oBAAIA,UAAU,MAAd,uBAGJ,gCACGJ,KAAKZ,MAAMa,WAAWW,WAAWC,KAAI,SAACX,EAAMY,GAAP,OACpC,qBAAIV,UAAU,eAAd,UACE,oBAAIA,UAAU,MAAd,SAAqBU,EAAM,IAC3B,oBAAIV,UAAU,MAAd,SAAqBF,EAAKa,iBAC1B,oBAAIX,UAAU,MAAd,SAAqBF,EAAKc,cAC1B,oBAAIZ,UAAU,MAAd,SAAqBF,EAAKe,cAC1B,oBAAIb,UAAU,MAAd,wBACA,oBAAIA,UAAU,MAAd,SACE,8CAP8BU,sB,GAnHtBI,IAAMC,WA+IzBC,EAAmBC,aAPR,SAAC,GAIvB,MAAO,CAAE/B,KAD+C,EAFxDA,KAGeW,WADyC,EADxDA,cAKuD,CAAEP,oBAA3B2B,CAC9BlC","file":"static/js/17.de5b7c5c.chunk.js","sourcesContent":["import React, { Fragment } from \"react\";\nimport { FaSchool } from \"react-icons/fa\";\nimport { MdLocationOn } from \"react-icons/md\";\nimport { connect } from \"react-redux\";\nimport { Auth, FC_RoomDetails, Proctoring } from \"../../actions\";\nimport { StoreState } from \"../../reducers\";\n\n// ProctoringOnlineSupervisor\n\n// props for the component\ninterface AppProps {\n  auth: Auth;\n  proctoring: Proctoring;\n  FC_RoomDetails: Function;\n}\n\ninterface AppState {\n  error: boolean;\n  errorMsg: string;\n}\n\nclass _ProctoringCenter extends React.Component<AppProps, AppState> {\n  constructor(props: AppProps) {\n    super(props);\n\n    this.state = {\n      error: false,\n      errorMsg: \"\",\n    };\n  }\n\n  componentDidMount = () => {\n    if (this.props.auth.user_access.room_id.length >= 3) {\n      this.props.FC_RoomDetails(\n        this.props.auth.user_access.room_id,\n        (status: boolean, errorMsg: string) => {\n          if (status === false) {\n            this.setState({\n              error: true,\n              errorMsg: errorMsg,\n            });\n          }\n        }\n      );\n    }\n  };\n\n  render() {\n    if (\n      this.state.error === false &&\n      this.props.proctoring.room.loaded === false\n    ) {\n      return (\n        <div className=\"m-5 text-center\">\n          <h5 className=\"text-gray-400 animate__animated animate__fadeIn animate__infinite text-xl\">\n            Loading room details\n          </h5>\n        </div>\n      );\n    }\n\n    const {\n      room_id,\n      room_number,\n      center_id,\n      center_name,\n      district_id,\n      district_name,\n      province_id,\n      province_name,\n      loaded,\n    } = this.props.proctoring.room;\n    return (\n      <Fragment>\n        <div className=\"mr-2\">\n          <div className=\"p-5 bg-white rounded-b-md \">\n            <h2 className=\"text-2xl text-gray-600 font-bold text-center border-b pb-2\">\n              Room details\n            </h2>\n            <div className=\"flex flex-col md:flex-row\">\n              <div className=\"flex flex-1 items-center\">\n                <div className=\"p-4\">\n                  <MdLocationOn className=\"text-4xl\" />\n                </div>\n                <div className=\"p-2 pt-3 flex-1\">\n                  <div className=\"mb-1\">\n                    <span className=\"text-gray-400\">Province:</span>{\" \"}\n                    <b> {province_name}</b>\n                  </div>\n                  <div className=\"mb-1\">\n                    <span className=\"text-gray-400\">District:</span>{\" \"}\n                    <b> {district_name}</b>\n                  </div>\n                </div>\n              </div>\n              <div className=\"flex flex-1 items-center\">\n                <div className=\"p-4\">\n                  <FaSchool className=\"text-4xl\" />\n                </div>\n                <div className=\"p-2 flex-1\">\n                  <div className=\"mb-1\">\n                    <span className=\"text-gray-400\">Center name:</span>{\" \"}\n                    <b> {center_name}</b>\n                  </div>\n\n                  <div className=\"mb-1\">\n                    <span className=\"text-gray-400\">Room Number:</span>{\" \"}\n                    <b> {room_number}</b>\n                  </div>\n                </div>\n              </div>\n            </div>{\" \"}\n          </div>\n\n          <h2 className=\"mt-5 text-2xl font-bold text-gray-500\">\n            Exams on this room\n          </h2>\n          <div className=\"mt-2 p-2 bg-white rounded-md\">\n            {this.props.proctoring.room_exams.length <= 0 ? (\n              <div className=\"p-5 text-center\">\n                No exams assigned to this room\n              </div>\n            ) : (\n              <table className=\"w-full text-left\">\n                <thead className=\"bg-gray-100 rounded-md\">\n                  <tr>\n                    <th className=\"p-2\">#</th>\n                    <th className=\"p-2\">Position</th>\n                    <th className=\"p-2\">Course</th>\n                    <th className=\"p-2\">Code</th>\n                    <th className=\"p-2\">Date</th>\n                    <th className=\"p-2\">Open</th>\n                  </tr>\n                </thead>\n                <tbody>\n                  {this.props.proctoring.room_exams.map((room, key) => (\n                    <tr className=\"p-2 border-t\" key={key}>\n                      <td className=\"p-2\">{key + 1}</td>\n                      <td className=\"p-2\">{room.position_title}</td>\n                      <td className=\"p-2\">{room.course_name}</td>\n                      <td className=\"p-2\">{room.course_code}</td>\n                      <td className=\"p-2\">12-12-2021</td>\n                      <td className=\"p-2\">\n                        <button>Open</button>\n                      </td>\n                    </tr>\n                  ))}\n                </tbody>\n              </table>\n            )}\n          </div>\n        </div>\n      </Fragment>\n    );\n  }\n}\n\nconst mapStateToProps = ({\n  auth,\n  proctoring,\n}: StoreState): { auth: Auth; proctoring: Proctoring } => {\n  return { auth, proctoring };\n};\n\nexport const ProctoringCenter = connect(mapStateToProps, { FC_RoomDetails })(\n  _ProctoringCenter\n);\n"],"sourceRoot":""}
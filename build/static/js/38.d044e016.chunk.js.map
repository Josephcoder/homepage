{"version":3,"sources":["components/Table/Table.tsx","components/Navigation/SideNavigation.tsx","actions/settings.ts","shared/interfaces.tsx","actions/location.ts","actions/schools.ts","containers/district/Schools/index.tsx","containers/district/index.tsx"],"names":["Table","table","tr","rows","columns","hideColumns","pagination","search","tableSize","tableClass","tableId","rounded","searchBG","thColor","loading","length","result","characters","charactersLength","i","charAt","Math","floor","random","FC_makeID","useState","totalItems","setTotalItems","totalPages","setTotalPages","currentPage","setCurrentPage","pages","setPages","pageSize","setPageSize","startIndex","setStartIndex","endIndex","setEndIndex","useEffect","tablePagination","document","getElementById","getElementsByTagName","ceil","min","_pages","Array","from","keys","map","style","display","className","type","placeholder","onChange","e","data","filterType","filter","td","cols","toLowerCase","textContent","innerText","indexOf","filterTable","target","value","disabled","Number","id","column","index","padding","alignText","isSortAllowed","onClick","switching","x","y","shouldSwitch","colIndex","dir","switchcount","innerHTML","parentNode","insertBefore","sortThisColumn","columnTitle","aria-label","page","pageIndex","_SideNavigation","props","componentDidMount","PageHasSubNav","componentWillUnmount","state","this","auth","isAuthenticated","navActive","system","navigation","children","React","Component","SideNavigation","connect","NavToogle","MainItem","title","icon","MdBrightness1","active","count","IconDefined","SubItemContainer","SubItem","getSystemSettings","callback","dispatch","a","setAxiosToken","axios","get","API","AUTH","res","ActionTypes","GET_SYSTEM_SETTINGS","payload","console","log","code_error","errorToText","disableSystemSetting","DISABLE_SYSTEM_SETTINGS","getApplicationSessions","APPLICATION","GET_APPLICATION_SESSIONS","createAplicationSession","CREATE_APPLICATION_SESSIONS","updateAplicationSession","check","UPDATE_APPLICATION_SESSIONS","disableApplicationSession","DISABLE_APPLICATION_SESSION","getPositions","GET_POSTIONS","deletePosition","DELETE_POSITION","publishPosition","PUBLISH_POSITION","PostRequestStatusInterface","DocumentAttributesInterface","DocValidationStatusInterface","SESSION_PLAN_KEYS","DOCUMENT_VALIDATION","EXAMINATION","MARKS_PUBLICATION","PLACEMENT_TRANSFER","getAllRoom","GET_ALL_ROOM","error","FC_CreateCenter","CREATE_CENTER","FC_UpdateCenter","UPDATE_CENTER","FC_DeleteCenter","DELETE_CENTER","FC_CreateRoom","CREATE_ROOM","FC_UpdateRoom","UPDATE_ROOM","FC_DeleteRoom","delete_room","DELETE_ROOM","getSchools","GET_SCHOOLS","createSchool","schools","CREATE_SCHOOL","updateSchool","UPDATE_SCHOOL","deleteSchool","DELETE_SCHOOL","fetchSchoolPosts","school_id","PLACEMENT","schoolPosts","FETCH_SCHOOL_POSTS","createSchoolPost","CREATE_SCHOOL_POST","updateSchoolPost","TYPE","UPDATE_SCHOOL_POST","fetchDistrictPosts","district_id","districtPosts","FETCH_DISTRICT_POSTS","getSchoolById","school","_id","setLoading","setState","setLoadingRequest","loadingRequest","setError","loadDistrict","district","PushPopupAlert","theme","PopupAlertTheme","danger","education_categories","loadEducationCategories","allRoom","status","msg","loadingCandidatesError","schoolList","tableData","school_name","edication","education_institute_id","education_category_id","education_category_title","district_name","modalState","thisSchool","schoolName","instituteId","districtId","provinceId","find","item","districts","d","province_id","handleDelete","colSpan","handleSubmit","preventDefault","element","post","shool_id","success","patch","doc_category_error","schoolId","window","confirm","delete","province_error","filterSchools","FILTER_TYPE","FILTER_VALUE","IGNORE_DISTRICT","newArray","thisDistrict","thisEdication","countSchool","counts","toTwoDigit","districtFilterStatus","edicationCategoryFilterStatus","provinceFilterStatus","thisProvince","Fragment","MdLabel","province_name","province","education","backDrop","Themes","default","close","displayClose","backDropClose","widthSizeClass","ModalSize","medium","body","footer","onSubmit","institute","Schools","schoolLevels","locations","roomLocation","District","system_settings","systemPositions","loadingPosition","setLoadingPosition","loadingPost","setLoadingPost","setModalState","filterByPosition","setFilterByPosition","thisPost","setThisPost","viewPost","setViewPost","approvedPosts","setApprovedPosts","formError","setFormError","user_access","message","getPositionById","positionId","position_id","to","submitRequest","needed_posts","requested_post_id","confirmed_posts","confirmed_by","user","user_id","received_posts","approval_date","Date","male_number","female_number","description","occupied_posts","requested_by","requested_post_status","CONFIRMED","info","post_relpy","position","position_title","schoolPost","INITIATED","RECEIVED","capitalizeFirstLetter","DATE","request_date","toString","max","large"],"mappings":"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","file":"static/js/38.d044e016.chunk.js","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { BiSort } from \"react-icons/bi\";\nimport { MdNavigateBefore, MdNavigateNext, MdSearch } from \"react-icons/md\";\n\nconst FC_makeID = (length: number = 5): string => {\n  let result: string = \"\";\n  let characters: string =\n    \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\n  let charactersLength = characters.length;\n  for (let i: number = 0; i < length; i++) {\n    result += characters.charAt(Math.floor(Math.random() * charactersLength));\n  }\n  return result;\n};\n\nexport const sortThisColumn = (\n  tableId: string,\n  colIndex: number = 0,\n  dir: \"asc\" | \"desc\" = \"asc\"\n) => {\n  var table,\n    rows,\n    switching,\n    i,\n    x,\n    y,\n    shouldSwitch,\n    switchcount = 0;\n  table = document.getElementById(tableId) as HTMLTableElement;\n  switching = true;\n  /* Make a loop that will continue until\n  no switching has been done: */\n  if (table) {\n    while (switching) {\n      //start by saying: no switching is done:\n      switching = false;\n      rows = table.rows;\n      /*Loop through all table rows (except the\n    first, which contains table headers):*/\n      for (i = 1; i < rows.length - 1; i++) {\n        //start by saying there should be no switching:\n        shouldSwitch = false;\n        /*Get the two elements you want to compare,\n      one from current row and one from the next:*/\n        x = rows[i].getElementsByTagName(\"TD\")[colIndex];\n        y = rows[i + 1].getElementsByTagName(\"TD\")[colIndex];\n        /*check if the two rows should switch place,\n      based on the direction, asc or desc:*/\n        if (dir === \"asc\" && x && y) {\n          if (x.innerHTML.toLowerCase() > y.innerHTML.toLowerCase()) {\n            //if so, mark as a switch and break the loop:\n            shouldSwitch = true;\n            break;\n          }\n        } else if (dir === \"desc\" && x && y) {\n          if (x.innerHTML.toLowerCase() < y.innerHTML.toLowerCase()) {\n            //if so, mark as a switch and break the loop:\n            shouldSwitch = true;\n            break;\n          }\n        }\n      }\n      if (shouldSwitch && rows[i].parentNode) {\n        /*If a switch has been marked, make the switch\n      and mark that a switch has been done:*/\n        rows[i].parentNode!.insertBefore(rows[i + 1], rows[i]);\n        switching = true;\n        //Each time a switch is done, increase this count by 1:\n        switchcount++;\n      } else {\n        /*If no switching has been done AND the direction is \"asc\",\n      set the direction to \"desc\" and run the while loop again.*/\n        if (switchcount === 0 && dir === \"asc\") {\n          dir = \"desc\";\n          switching = true;\n        }\n      }\n      // if (i === 0) continue;\n      // rows.cells[i].style.backgroundColor = \"blue\";\n    }\n  }\n};\n\nexport interface TableColumnsInterface {\n  columnTitle: JSX.Element | string;\n  alignText: string;\n  padding?: string;\n  isSortAllowed?: boolean;\n}\n\ninterface TableProps {\n  columns: TableColumnsInterface[];\n  rows: Function;\n  hideColumns?: boolean;\n  pagination?: boolean;\n  search?: boolean;\n  tableSize?: string;\n  tableClass?: string;\n  tableId?: string;\n  rounded?: boolean;\n  searchBG?: string;\n  thColor?: string;\n  loading?: boolean;\n}\n\nconst Table: React.FC<TableProps> = ({\n  rows,\n  columns,\n  hideColumns = false,\n  pagination = false,\n  search = false,\n  tableSize = \"w-full\",\n  tableClass,\n  tableId = \"myTable\",\n  rounded = false,\n  searchBG = \"bg-gray-200\",\n  thColor = \"blue\",\n  loading = false,\n}) => {\n  const startPage = 1;\n  tableId = tableId === \"myTable\" ? FC_makeID() : tableId;\n  let table: HTMLElement, tr: HTMLCollectionOf<HTMLTableRowElement>;\n  const [totalItems, setTotalItems] = useState<number>(0);\n  const [totalPages, setTotalPages] = useState<number>(1);\n  const [currentPage, setCurrentPage] = useState<number>(1);\n  const [pages, setPages] = useState<number[]>();\n  const [pageSize, setPageSize] = useState<number>(10);\n  const [startIndex, setStartIndex] = useState<number>(0);\n  const [endIndex, setEndIndex] = useState<number>(0);\n\n  useEffect(() => {\n    pagination && tablePagination();\n  });\n\n  const filterTable = (\n    data: string,\n    filterType?: \"default\" | \"field\"\n  ): void => {\n    var filter, tr, td, rows: number, cols: number, txtValue;\n    if (filterType === \"field\" && data === \"all\") data = \"\";\n    filter = data.toLowerCase();\n    table = document.getElementById(tableId)!;\n    tr = table.getElementsByTagName(\"tr\");\n    for (rows = 0; rows < tr.length; rows++) {\n      for (cols = 0; cols < columns.length; cols++) {\n        td = tr[rows].getElementsByTagName(\"td\")[cols];\n        if (td) {\n          txtValue = td.textContent || td.innerText;\n          if (txtValue.toLowerCase().indexOf(filter) > -1) {\n            tr[rows].style.display = \"\";\n            break;\n          } else {\n            tr[rows].style.display = \"none\";\n          }\n        }\n      }\n    }\n  };\n\n  const tablePagination = (): void => {\n    table = document.getElementById(tableId)!;\n    tr = table.getElementsByTagName(\"tr\");\n    setTotalItems(tr.length);\n    setTotalPages(Math.ceil(totalItems / pageSize));\n\n    // calculate start and end item indexes on the current page\n    setStartIndex((currentPage - 1) * pageSize);\n    setEndIndex(Math.min(startIndex + pageSize - 1, totalItems - 1));\n\n    /**\n     * TODO!\n     * There is a problem with this condition\n     */\n    let _pages = Array.from(Array(totalPages + 1 - startPage).keys()).map(\n      (i) => startPage + i\n    );\n    if (!pages || _pages.length !== pages.length) {\n      setPages(_pages);\n    }\n\n    for (let i: number = 0; i < tr.length; i++) {\n      if (i >= startIndex && i <= endIndex) {\n        tr[i].style.display = \"\";\n      } else {\n        tr[i].style.display = \"none\";\n      }\n    }\n  };\n\n  return (\n    <div className={`${tableSize}`}>\n      {/* search box  */}\n      {search && (\n        <div className={`${searchBG} w-full mb-2`}>\n          {search && (\n            <div className=\"bg-white rounded flex items-center w-full p-2 border-2 border-gray-500\">\n              <MdSearch className=\"h-5 w-5 fill-current text-gray-400\" />\n              <input\n                type=\"search\"\n                placeholder=\"search\"\n                onChange={(e) => filterTable(e.target.value)}\n                className=\"w-full h-6 pl-4 text-sm outline-none focus:outline-none bg-white\"\n                disabled={loading}\n              />\n\n              {pagination && (\n                <div className=\"select\">\n                  <select\n                    className=\"text-base outline-none focus:outline-none bg-white\"\n                    onChange={(e) => setPageSize(Number(e.target.value))}\n                    disabled={loading}\n                  >\n                    <option value=\"10\">10</option>\n                    <option value=\"25\">25</option>\n                    <option value=\"50\">50</option>\n                    <option value=\"100\">100</option>\n                  </select>\n                </div>\n              )}\n            </div>\n          )}\n        </div>\n      )}\n      <table\n        className={\n          tableClass\n            ? tableClass\n            : `w-full shadow ${\n                rounded && \"sm:rounded-lg\"\n              } table-auto order-table`\n        }\n        id={tableId}\n      >\n        {!hideColumns && (\n          <thead className=\"bg-white border-b-2 border-gray-300 text-gray-600 font-bold text-base\">\n            <tr\n              className={`text-left tracking-wide bg-${thColor}-100 border-b-2 border-${thColor}-500 text-${thColor}-600`}\n            >\n              {columns.map((column, index) => (\n                <th\n                  key={index}\n                  className={`${column.padding} text-${\n                    column.alignText\n                  } px-3 py-2 ${column.isSortAllowed && \"cursor-pointer\"}`}\n                  onClick={() =>\n                    column.isSortAllowed && sortThisColumn(tableId, index)\n                  }\n                >\n                  <div className=\"flex items-center gap-1\">\n                    {column.columnTitle}\n                    {column.isSortAllowed && <BiSort />}\n                  </div>\n                </th>\n              ))}\n            </tr>\n          </thead>\n        )}\n        <tbody id=\"table-data\" className=\"bg-white text-black text-base\">\n          {rows()}\n        </tbody>\n      </table>\n      {pagination && (\n        <div className=\"sm:flex-1 sm:flex sm:items-center sm:justify-between mt-4 work-sans\">\n          <div>\n            <span className=\"text-xs xs:text-sm text-gray-900\">\n              Showing 1 to {pageSize} of {totalItems - 1} Entries\n            </span>\n          </div>\n          <div>\n            <nav className=\"inline-flex shadow-sm\">\n              <div>\n                <button\n                  type=\"button\"\n                  className={`inline-flex items-center px-2 py-2 rounded-l-md border border-gray-300 text-sm font-medium text-gray-500 ${\n                    currentPage !== 1 && \"bg-white\"\n                  }`}\n                  aria-label=\"Previous\"\n                  disabled={currentPage === 1 || loading}\n                  onClick={() => setCurrentPage(currentPage - 1)}\n                >\n                  <MdNavigateBefore className=\"h-5 w-5\" />\n                </button>\n              </div>\n              <div>\n                {pages &&\n                  pages.map((page, pageIndex) => (\n                    <button\n                      key={pageIndex}\n                      className={`-ml-px inline-flex items-center px-4 py-2 border border-gray-300 text-sm font-medium text-gray-700 ${\n                        page !== currentPage\n                          ? \"bg-white\"\n                          : \"bg-gray-100 cursor-default\"\n                      }`}\n                      disabled={page === currentPage || loading}\n                      onClick={() => setCurrentPage(page)}\n                    >\n                      {page}\n                    </button>\n                  ))}\n              </div>\n              <div>\n                <button\n                  type=\"button\"\n                  className={`inline-flex items-center px-2 py-2 rounded-r-md border border-gray-300 text-sm leading-5 font-medium text-gray-500 ${\n                    currentPage !== totalPages && \"bg-white\"\n                  }`}\n                  aria-label=\"Next\"\n                  disabled={currentPage === totalPages || loading}\n                  onClick={() => setCurrentPage(currentPage + 1)}\n                >\n                  <MdNavigateNext className=\"h-5 w-5\" />\n                </button>\n              </div>\n            </nav>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default Table;\n","import React, { FC, ReactElement, ReactNode } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Auth, System } from \"../../actions\";\nimport { StoreState } from \"../../reducers\";\nimport { NavToogle, PageHasSubNav } from \"../../actions\";\nimport { MdBrightness1, MdSearch } from \"react-icons/md\";\n\n// props for the component\ninterface AppProps {\n  auth: Auth;\n  system: System;\n  PageHasSubNav: Function;\n  NavToogle: Function;\n  children: ReactNode;\n}\n//\ninterface AppState {\n  loading: boolean;\n}\n\nclass _SideNavigation extends React.Component<AppProps, AppState> {\n  constructor(props: AppProps) {\n    super(props);\n\n    this.state = {\n      loading: false,\n    };\n  }\n\n  componentDidMount = () => this.props.PageHasSubNav(true);\n  componentWillUnmount = () => this.props.PageHasSubNav(false);\n\n  render() {\n    const isAuthenticated = this.props.auth.isAuthenticated;\n\n    if (isAuthenticated === false) {\n      return null;\n    }\n\n    const navActive = this.props.system.navigation;\n    return (\n      <div\n        className={`fixed w-48 p-1 pr-2 pl-6 text-gray-700 bg-white ${\n          navActive === true ? \"lg:left-16  left-16\" : \" -left-72 lg:left-16\"\n        }  top-0 bottom-0 pt-20 z-30 shadow-lg  transition-all duration-500 ease-in-out overflow-y-auto`}\n      >\n        {this.props.children}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = ({\n  auth,\n  system,\n}: StoreState): { auth: Auth; system: System } => {\n  return { auth: auth, system: system };\n};\n\nexport const SideNavigation = connect(mapStateToProps, {\n  NavToogle,\n  PageHasSubNav,\n})(_SideNavigation);\n\n//************************************ FORM SEARCH **************************************** */\n\ntype SearchComponentInterface = {\n  data: any[];\n};\n\nexport const Search: FC<SearchComponentInterface> = ({\n  data,\n}): ReactElement => {\n  return (\n    <div className=\"m-1 rounded-md shadow-md border border-blue-400 bg-white p-1 flex \">\n      <label htmlFor=\"search-text\" className=\"inline-block text-2xl\">\n        <MdSearch className=\"inline-block text-blue-400\" />\n      </label>\n      <input\n        type=\"search\"\n        className=\"outline-none bg-transparent flex-1 pl-1\"\n        placeholder=\"Search\"\n        id=\"search-text\"\n      />\n    </div>\n  );\n};\n\n//************************************ FORM SEARCH **************************************** */\n\ntype MainItemComponentInterface = {\n  title: string;\n  icon?: any;\n  active?: boolean;\n  count?: number;\n};\n\n/**\n *\n * @param param0\n * @returns\n */\nexport const MainItem: FC<MainItemComponentInterface> = ({\n  title = \"\",\n  icon = MdBrightness1,\n  active = false,\n  count = 0,\n}): ReactElement => {\n  const IconDefined = icon;\n  return (\n    <section\n      className={`${\n        active === true\n          ? \"bg-blue-500 text-white font-bold\"\n          : \"bg-blue-100 text-blue-800\"\n      } mb-1 hover:font-bold py-1 hover:bg-blue-400 hover:text-white --font-bold  px-2 rounded-md flex cursor-pointer items-center`}\n    >\n      <section className=\"flex-1\">\n        <IconDefined className=\"inline-block mr-1 text-xs\" />\n        <span>{title}</span>\n      </section>\n\n      {count > 0 ? (\n        <span className=\"px-0.5 my-1 text-xs bg-blue-600 text-white rounded-full\">\n          {count}\n        </span>\n      ) : null}\n    </section>\n  );\n};\n\n//************************************ FORM SEARCH **************************************** */\n\ntype SubItemContainerComponentInterface = {\n  children: ReactNode;\n};\n\n/**\n *\n * @param param0\n * @returns\n */\nexport const SubItemContainer: FC<SubItemContainerComponentInterface> = ({\n  children,\n}): ReactElement => {\n  return (\n    <div className=\"ml-3 overflow-y-auto border-l-2 border-blue-200 -mt-1 pt-2 mb-2 pl-1 cursor-pointer\">\n      {children}\n    </div>\n  );\n};\n\n//************************************ FORM SEARCH **************************************** */\n\ntype SubItemComponentInterface = {\n  title: string;\n  icon?: any;\n  active?: boolean;\n  count?: number;\n};\n\n/**\n *\n * @param param0\n * @returns\n * @important Remenber to use these components inside the <SubItemContainer>...</SubItemContainer>\n */\nexport const SubItem: FC<SubItemComponentInterface> = ({\n  title = \"\",\n  icon = MdBrightness1,\n  active = false,\n  count = 0,\n}): ReactElement => {\n  const IconDefined = icon;\n\n  return (\n    <div\n      className={`animate__animated animate__zoomIn animate__faster ${\n        active === true ? \"bg-blue-500 text-white font-bold\" : \" text-blue-800\"\n      } text-blue-800 bg-blue-200 rounded-md px-1 mb-1 flex items-center py-1 font-bold`}\n    >\n      <IconDefined\n        className={`inline-block mr-0.1 text-xs ${\n          active === true ? \"text-white\" : \"\"\n        }`}\n      />\n      <span\n        className={`inline-block pl-1 ${active === true ? \"text-white\" : \"\"}`}\n      >\n        {title}\n      </span>\n      {count >= 1 ? (\n        <span\n          className={`text-sm fint-bold ${active === true ? \"text-white\" : \"\"}`}\n        >\n          {count}\n        </span>\n      ) : null}\n    </div>\n  );\n};\n","import axios from \"axios\";\nimport { Dispatch } from \"redux\";\nimport { ActionTypes } from \"./types\";\nimport {\n  ApplicationSessionInterface,\n  SystemSettingsInterface,\n} from \"../shared/interfaces\";\nimport { API } from \"../utils/api\";\nimport { setAxiosToken } from \"../utils/AxiosToken\";\nimport { errorToText } from \"../utils/errors\";\nimport { PositionAPI } from \"../interfaces/position\";\n\n/**\n * * ****************************** INTERFACES *****************************\n */\n\n// SYSTEM SETTINGS  ==============\nexport interface GetSystemSettingsAction {\n  type: ActionTypes.GET_SYSTEM_SETTINGS;\n  payload: SystemSettingsInterface[];\n}\n\nexport interface DisableSystemSettingsAction {\n  type: ActionTypes.DISABLE_SYSTEM_SETTINGS;\n  payload: {\n    system_setting_id: string;\n    status: \"enabled\" | \"disabled\";\n  };\n}\n\n// APPLICATION SETTINGS ===================================\nexport interface GetApplicationSessionAction {\n  type: ActionTypes.GET_APPLICATION_SESSIONS;\n  payload: ApplicationSessionInterface[];\n}\n\nexport interface CreateApplicationSessionAction {\n  type: ActionTypes.CREATE_APPLICATION_SESSIONS;\n  payload: ApplicationSessionInterface;\n}\n\nexport interface UpdateApplicationSessionAction {\n  type: ActionTypes.UPDATE_APPLICATION_SESSIONS;\n  payload: ApplicationSessionInterface;\n}\n\nexport interface DisableApplicationSessionAction {\n  type: ActionTypes.DISABLE_APPLICATION_SESSION;\n  payload: {\n    application_session_id: string;\n    status: boolean;\n  };\n}\n\n// POSITIONS SETTINGS ===================================\nexport interface PositionCreateInterface {\n  position_id?: string;\n  position_title: string;\n  description: string;\n  school_level_id: string;\n  education_institute_id: string;\n  courses: string[];\n  requirements: {\n    user_detail_category_id: string;\n    user_detail_subcategory_id: string;\n    position_requirement: {\n      category_subcategory_data_id: string;\n      required: boolean;\n    }[];\n    required: boolean;\n  }[];\n}\nexport interface GetPositionsAction {\n  type: ActionTypes.GET_POSTIONS;\n  payload: PositionAPI[];\n}\n\nexport interface CreatePositionsAction {\n  type: ActionTypes.CREATE_POSITION;\n  payload: PositionCreateInterface;\n}\n\nexport interface UpdatePositionsAction {\n  type: ActionTypes.UPDATE_POSITION;\n  payload: PositionCreateInterface;\n}\n\nexport interface DeletePositionAction {\n  type: ActionTypes.DELETE_POSITION;\n  payload: string;\n}\n\nexport interface PublishPositionAction {\n  type: ActionTypes.PUBLISH_POSITION;\n  payload: {\n    position_id: string;\n    status: boolean;\n  };\n}\n\nexport type SystemActionType =\n  | GetSystemSettingsAction\n  | DisableSystemSettingsAction\n  | GetApplicationSessionAction\n  | CreateApplicationSessionAction\n  | UpdateApplicationSessionAction\n  | DisableApplicationSessionAction\n  | GetPositionsAction\n  | CreatePositionsAction\n  | UpdatePositionsAction\n  | DeletePositionAction\n  | PublishPositionAction;\n\n/**\n * * ****************************** ACTIONS *****************************\n */\n\nexport const getSystemSettings = (callback: Function) => {\n  return async (dispatch: Dispatch) => {\n    callback(true, \"\");\n    try {\n      setAxiosToken();\n      const res = await axios.get<SystemSettingsInterface[]>(\n        `${API.AUTH}/settings`\n      );\n      dispatch<GetSystemSettingsAction>({\n        type: ActionTypes.GET_SYSTEM_SETTINGS,\n        payload: res.data,\n      });\n      callback(false, \"\");\n    } catch (error) {\n      console.log({ code_error: error });\n      callback(false, errorToText(error));\n    }\n  };\n};\n\nexport const disableSystemSetting = (data: {\n  system_setting_id: string;\n  status: \"enabled\" | \"disabled\";\n}) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<DisableSystemSettingsAction>({\n      type: ActionTypes.DISABLE_SYSTEM_SETTINGS,\n      payload: data,\n    });\n  };\n};\n\n// ============================ PERIODS =======================\n\nexport const getApplicationSessions = (callback: Function) => {\n  return async (dispatch: Dispatch) => {\n    callback(true, \"\");\n    try {\n      setAxiosToken();\n      const res = await axios.get<ApplicationSessionInterface[]>(\n        `${API.APPLICATION}/applicationsesion`\n      );\n      dispatch<GetApplicationSessionAction>({\n        type: ActionTypes.GET_APPLICATION_SESSIONS,\n        payload: res.data,\n      });\n      callback(false, \"\");\n    } catch (error) {\n      console.log({ code_error: error });\n      callback(false, errorToText(error));\n    }\n  };\n};\n\nexport const createAplicationSession = (data: ApplicationSessionInterface) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<CreateApplicationSessionAction>({\n      type: ActionTypes.CREATE_APPLICATION_SESSIONS,\n      payload: data,\n    });\n  };\n};\n\nexport const updateAplicationSession = (data: ApplicationSessionInterface) => {\n  console.log({ check: data });\n  return async (dispatch: Dispatch) => {\n    dispatch<UpdateApplicationSessionAction>({\n      type: ActionTypes.UPDATE_APPLICATION_SESSIONS,\n      payload: data,\n    });\n  };\n};\n\nexport const disableApplicationSession = (data: {\n  application_session_id: string;\n  status: boolean;\n}) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<DisableApplicationSessionAction>({\n      type: ActionTypes.DISABLE_APPLICATION_SESSION,\n      payload: data,\n    });\n  };\n};\n\nexport const getPositions = (callback: Function) => {\n  return async (dispatch: Dispatch) => {\n    callback(true, \"\");\n    try {\n      setAxiosToken();\n      const res = await axios.get<PositionAPI[]>(`${API.APPLICATION}/position`);\n      dispatch<GetPositionsAction>({\n        type: ActionTypes.GET_POSTIONS,\n        payload: res.data,\n      });\n      callback(false, \"\");\n    } catch (error) {\n      console.log({ code_error: error });\n      callback(false, errorToText(error));\n    }\n  };\n};\n\nexport const createPosition = (data: PositionCreateInterface) => {\n  console.log({ createPosition: data });\n  return async (dispatch: Dispatch) => {\n    dispatch<CreatePositionsAction>({\n      type: ActionTypes.CREATE_POSITION,\n      payload: data,\n    });\n  };\n};\n\nexport const updatePosition = (data: PositionCreateInterface) => {\n  console.log({ updatePosition: data });\n  return async (dispatch: Dispatch) => {\n    dispatch<UpdatePositionsAction>({\n      type: ActionTypes.UPDATE_POSITION,\n      payload: data,\n    });\n  };\n};\n\nexport const deletePosition = (data: string) => {\n  console.log({ deletePosition: data });\n  return async (dispatch: Dispatch) => {\n    dispatch<DeletePositionAction>({\n      type: ActionTypes.DELETE_POSITION,\n      payload: data,\n    });\n  };\n};\n\nexport const publishPosition = (data: {\n  position_id: string;\n  status: boolean;\n}) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<PublishPositionAction>({\n      type: ActionTypes.PUBLISH_POSITION,\n      payload: data,\n    });\n  };\n};\n","import {\n  ApplicationStates,\n  SESSION_PLAN_KEYS,\n} from \"../interfaces/application\";\n\nexport interface SystemSettingsInterface {\n  system_setting_id: string;\n  name: string;\n  key: string;\n  status: \"enabled\" | \"disabled\";\n}\n\nexport interface ApplicationSessionInterface {\n  is_active: boolean;\n  application_session_name: string;\n  period: string;\n  application_start_date: string;\n  application_end_date: string;\n  createdAt: string;\n  updatedAt: string;\n  application_session_id: string;\n}\n\nexport interface UserInfoInterface {\n  document_type?: string;\n  issue_number?: string;\n  date_of_issue?: string;\n  date_of_expiry?: string;\n  place_of_issue?: string;\n  application_number?: string;\n  fname: string;\n  lname: string;\n  sex: \"M\" | \"F\";\n  father_names: string;\n  mother_names: string;\n  date_of_birth: string;\n  place_of_birth?: string;\n  country_of_birth: string;\n  village_id: string;\n  village: string;\n  cell: string;\n  sector: string;\n  district: string;\n  province: string;\n  photo?: string;\n  civil_status?: string;\n  spouse?: any;\n  status?: string;\n}\n\nexport interface UserInterface {\n  user_id: string;\n  n_id?: string;\n  phone_number: string;\n  email: string;\n  password?: string;\n  user_info: UserInfoInterface;\n  details: UserDocumentsInterface[];\n  user_photo?: string;\n  default_access: RoleToUserInterface | null;\n  custome_access: CustomeAccessInterface | null;\n  is_active?: boolean;\n}\n\nexport interface CandidateDetailsInterface_old {\n  category_id: string;\n  sub_category_id: string;\n  category_subcategory_data: string;\n  title: string;\n  description: string;\n  files: string;\n  start_year: string;\n  end_year: string;\n  school: string;\n  email: string;\n  names: string;\n  phone_number: string;\n  company: string;\n  year: string;\n  doc_id: string;\n  validation_status: \"waiting\" | \"approved\" | \"rejected\";\n  validated_by: {\n    user_id: string;\n    comment: string;\n    validation_status: \"waiting\" | \"approved\" | \"rejected\";\n    date: string;\n  } | null;\n  doc_history_status: string;\n  get_in_date: string;\n  approved?: string;\n}\n\nexport interface CandidateDetailsInterface {\n  category_id: string;\n  sub_category_id: string;\n  category_subcategory_data: string;\n  title: string;\n  description: string;\n  files: string;\n  start_year: string;\n  end_year: string;\n  school: string;\n  email: string;\n  names: string;\n  phone_number: string;\n  company: string;\n  year: string;\n  doc_id: string;\n  validation_status: \"waiting\" | \"approved\" | \"rejected\";\n  validated_by: {\n    user_id: string;\n    comment: string;\n    validation_status: \"waiting\" | \"approved\" | \"rejected\";\n    date: string;\n  } | null;\n  doc_history_status: string;\n  get_in_date: string;\n  approved?: string;\n}\n\nexport interface DocInterface {\n  category_subcategory_data: string;\n  school: string;\n  category_id: string;\n  company: string;\n  description: string;\n  email: string;\n  end_year: string;\n  files: string;\n  names: string;\n  phone_number: string;\n  start_year: string;\n  sub_category_id: string;\n  title: string;\n  year: string;\n  approved: string;\n  doc_id: string;\n  validated_by: null;\n  validation_status: string;\n  doc_history_status: string;\n  get_in_date: string;\n  date_modefied: string;\n}\n\nexport interface CandidateRoleToUserInterface {\n  key: string;\n  status: number;\n  access: boolean;\n  assigned_date: string;\n}\n\nexport interface CandidatesInterface_old {\n  user_id: string;\n  n_id: string;\n  fname: string;\n  lname: string;\n  phone_number: string;\n  district: string;\n  email: string;\n  details: CandidateDetailsInterface[];\n}\n\nexport interface ApplicationExamsInterface {\n  course_id: string;\n  proctoring_type: string;\n  center_id: string;\n  room_id: string;\n}\n\nexport interface CandidatesInterface {\n  user_id: string;\n  n_id: string;\n  fname: string;\n  lname: string;\n  phone_number: string;\n  district: string;\n  email: string;\n  details: CandidateDetailsInterface[];\n  exams: ApplicationExamsInterface[];\n}\n\nexport interface CustomeAccessInterface {\n  access: AccessTaskInterface[];\n  user_id: string;\n  custome_user_access_id: string;\n}\n\nexport interface UserDocumentsInterface {\n  category_id: string;\n  sub_category_id: string;\n  category_subcategory_data: string;\n  title: string;\n  description: string;\n  files: string;\n  start_year: string;\n  end_year: string;\n  school: { title: string; school_id: string | null };\n  email: string;\n  names: string;\n  phone_number: string;\n  company: string;\n  year: string;\n  approved: \"waiting\" | \"approved\" | \"rejected\";\n  doc_id: string;\n  validation_status: \"waiting\" | \"approved\" | \"rejected\";\n  validated_by: {\n    user_id: string;\n    commet: string;\n    validation_status: \"waiting\" | \"approved\" | \"rejected\";\n    date: string;\n  };\n}\n\nexport interface SystemUserRoleInterface {\n  system_user_role_id: string;\n  role: string;\n  status: boolean;\n  access: AccessTaskInterface[];\n  district_required?: boolean;\n  school_required?: boolean;\n  room_required?: boolean;\n  education_institution_required?: boolean;\n  school_id: string;\n  district_id: string;\n}\n\nexport interface CustomeUserAccessInterface {\n  user_id: string;\n  access?: [\n    {\n      id: string;\n      task: string;\n      key: string;\n      permitted: {\n        create: boolean;\n        delete: boolean;\n        update: boolean;\n        view: boolean;\n      };\n    }\n  ];\n}\n\nexport interface PermissionInterface {\n  create: boolean;\n  view: boolean;\n  update: boolean;\n  delete: boolean;\n}\n\nexport interface AccessTaskInterface {\n  id: string;\n  task: string;\n  key: string;\n  permitted: PermissionInterface;\n}\n\nexport interface RoleToUserInterface {\n  system_user_role_id: string;\n  role: string;\n  access: AccessTaskInterface[];\n  status?: number;\n  school_id: string;\n  district_id: string;\n  room_id: string;\n  education_institution_id: string;\n}\n\nexport interface RoomsInterface {\n  occupied: number;\n  isUsed: string;\n  room_type: string;\n  room_number: number;\n  capacity: number;\n  examination_center_room_id: string;\n}\n\nexport interface CentersInterface {\n  rooms: RoomsInterface[];\n  isUsed: boolean;\n  examination_center_id: string;\n  center_name: string;\n}\n\nexport interface DistrictInterface {\n  centers: CentersInterface[];\n  district_name: string;\n  district_id: string;\n}\n\nexport interface RoomLocationInterface {\n  districts: DistrictInterface[];\n  province_name: string;\n  province_id: string;\n}\n\nexport interface AssignRoleToUserActionInterface {\n  user_id: string;\n  data: RoleToUserInterface;\n}\n\nexport interface AssignRoleToUserActionInterface {\n  user_id: string;\n  data: RoleToUserInterface;\n}\n\nexport enum PostRequestStatusInterface {\n  INITIATED = \"initiated\",\n  CONFIRMED = \"confirmed\",\n  RECEIVED = \"received\",\n}\n\nexport interface PostSchoolInterface_old {\n  post_at_school_id: string;\n  school_id: string;\n  position_id: string;\n  district_id: string;\n  needed_posts: number;\n  confirmed_posts?: number;\n  occupied_posts?: number;\n  requested_by: string;\n  confirmed_by?: string;\n  received_posts?: number;\n  request_date: Date;\n  approval_date?: Date;\n  post_at_school_status: PostRequestStatusInterface;\n}\n\nexport interface PostSchoolInterface {\n  requested_post_id: string;\n  school_id: string;\n  position_id: string;\n  district_id: string;\n  needed_posts: number;\n  male_number: number;\n  female_number: number;\n  description: string;\n  confirmed_posts?: number;\n  occupied_posts?: number;\n  requested_by: string;\n  confirmed_by?: string;\n  received_posts?: number;\n  request_date: Date;\n  approval_date?: Date;\n  requested_post_status: PostRequestStatusInterface;\n}\n\nexport interface SchoolInfoInterface {\n  school_id: string;\n  school_title: string;\n  district_id: string;\n  number_of_females?: number;\n  number_of_males?: number;\n}\n\nexport interface SchoolsInterface {\n  _id: string;\n  status: boolean;\n  school_name: string;\n  district_id: string;\n  education_category_id: string;\n}\n\nexport interface SchoolLevelInterface {\n  school_level_id: string;\n  school_level_name: string;\n  description: string;\n  education_institute: string[];\n  courses: [];\n}\n\nexport interface CourseInterface {\n  course_name: string;\n  course_code: string;\n  description: string;\n  school_levels: string[];\n  course_id: string;\n}\n\nexport interface EducationInstituteInterface {\n  education_category_title: string;\n  school_levels: [];\n  description: string;\n  education_institute_id: string;\n}\n\nexport interface PositionRequirementInterface {\n  user_detail_category_id: string;\n  title: string;\n  user_required_docs: {\n    user_detail_subcategory_id: string;\n    title: string;\n  }[];\n}\n\nexport interface PositionInterface {\n  courses: CourseInterface[];\n  position_title: string;\n  description: string;\n  school_level_id: SchoolLevelInterface;\n  education_institute_id: EducationInstituteInterface;\n  requirements: PositionRequirementInterface[];\n  position_id: string;\n}\n\nexport enum DocumentAttributesInterface {\n  \"Title\" = \"title\",\n  \"Description\" = \"description\",\n  \"Files\" = \"files\",\n  \"email\" = \"email\",\n  \"names\" = \"names\",\n  \"phone_number\" = \"phone_number\",\n  \"position\" = \"position\",\n  \"relation\" = \"relation\",\n  \"src\" = \"src\",\n  \"year\" = \"year\",\n  \"company\" = \"company\",\n  \"category_subcategory_data\" = \"category_subcategory_data\",\n  \"others\" = \"others\",\n  \"start_year\" = \"start_year\",\n  \"end_year\" = \"end_year\",\n  \"School\" = \"School\",\n}\n\nexport enum DocValidationStatusInterface {\n  APPROVED = \"approved\",\n  REJECTED = \"rejected\",\n}\n\nexport interface DocumentCategoryInterface {\n  user_detail_category_id: string;\n  title: string;\n  description: string;\n  fields: DocumentAttributesInterface[];\n}\n\nexport interface DocumentSubCategoryInterface {\n  category_id: string;\n  title: string;\n  description: string;\n  user_detail_subcategory_id: string;\n}\n\nexport interface DocumentFieldsInterface {\n  _id: string;\n  category_id: string;\n  subcategory_id: string | null;\n  title: string;\n  description: string;\n  others: [];\n}\n\n// export interface DistrictInterface {\n//   centers: string[];\n//   district_name: string;\n//   district_id: string;\n// }\n\nexport interface ApplicationAssessmentInterface {\n  application_id: string;\n  user_id: string;\n  application_session: string;\n  application_status: string;\n  n_id: string;\n  phone_number: string;\n  email: string;\n  fname: string;\n  lname: string;\n  sex: \"M\" | \"F\";\n  district: string;\n  position: PositionApplicationInterface;\n  details: CandidateDetailsInterface[];\n  createdAt: string;\n  updatedAt: string;\n}\n\nexport interface AdminApplicationsToPrintInterface {\n  application_id: number;\n  names: string;\n  gender?: string;\n  national_id?: string;\n  phone?: string;\n  email?: string;\n  position: string;\n  education_category?: string;\n  application_session?: string;\n  district?: string;\n  date?: string;\n  decision?: ApplicationStates;\n}\n\nexport interface PositionApplicationInterface {\n  courses: string[];\n  position_title: string;\n  description: string;\n  school_level_id: string;\n  education_institute_id: string;\n  requirements: PositionRequirementInterface[];\n  position_id: string;\n}\n\nexport interface PositionRequirementInterface {\n  user_detail_category_id: string;\n  title: string;\n  user_required_docs: {\n    user_detail_subcategory_id: string;\n    title: string;\n  }[];\n}\n\nexport interface ApplicationRequirementInterface {\n  user_detail_category_id: string;\n  title: string;\n  user_required_docs: {\n    user_detail_subcategory_id: string;\n    title: string;\n  }[];\n}\n\n// [\n//   {\n//     user_detail_category_id: \"60fc4868f485d8dd91ed321e\",\n//     user_detail_subcategory_id: \"60fc48e8f485d8dd91ed3220\",\n//     position_requirement: [\n//       {\n//         category_subcategory_data_id: \"61277ec70ea9aba1b3661643\",\n//         required: true,\n//       },\n//     ],\n//     required: true,\n//   },\n// ];\n\nexport interface PeriodInterface {\n  is_active: string;\n  application_session_name: string;\n  period: string;\n  application_start_date: string;\n  application_end_date: string;\n  createdAt: string;\n  updatedAt: string;\n  application_session_id: string;\n}\n\nexport interface LocationRoomTableInterface {\n  province_id: string;\n  province_name: string;\n  district_id: string;\n  district_name: string;\n  center_id: string;\n  center_name: string;\n  room_id: string;\n  room_name: string;\n  capacity: number;\n  occupied: number;\n}\n\nexport interface PositionRequirementsFieldInterface {\n  category_id: string;\n  category_name: string;\n  sub_category_id: string;\n  sub_category_name: string;\n  field_id: string;\n  field_name: string;\n  required: boolean;\n}\n\nexport interface ApplicationPeriodInterface {\n  _id: string;\n  application_status: ApplicationStates;\n  user_id: string;\n  position: string;\n  application_session: string;\n  exams: ApplicationExamsInterface[];\n}\n\nexport const getDocCategoryById = (\n  subDocs: DocumentCategoryInterface[],\n  docId: string\n): DocumentCategoryInterface => {\n  return subDocs.filter((doc) => doc.user_detail_category_id === docId)[0];\n};\n\nexport const getSubDocCategoryById = (\n  subDocs: DocumentSubCategoryInterface[],\n  docId: string\n): DocumentSubCategoryInterface => {\n  return subDocs.filter((doc) => doc.user_detail_subcategory_id === docId)[0];\n};\n\nexport const SESSION_PLAN_TYPES: {\n  type_id: number;\n  type_title: string;\n  type_key: SESSION_PLAN_KEYS;\n}[] = [\n  {\n    type_id: 1,\n    type_title: \"Application\",\n    type_key: SESSION_PLAN_KEYS.APPLICATION,\n  },\n  {\n    type_id: 2,\n    type_title: \"Document Validation\",\n    type_key: SESSION_PLAN_KEYS.DOCUMENT_VALIDATION,\n  },\n  {\n    type_id: 3,\n    type_title: \"Examination\",\n    type_key: SESSION_PLAN_KEYS.EXAMINATION,\n  },\n  {\n    type_id: 4,\n    type_title: \"Marks Publication\",\n    type_key: SESSION_PLAN_KEYS.MARKS_PUBLICATION,\n  },\n  {\n    type_id: 5,\n    type_title: \"Placement and Transfer\",\n    type_key: SESSION_PLAN_KEYS.PLACEMENT_TRANSFER,\n  },\n];\n","import axios from \"axios\";\nimport { Dispatch } from \"redux\";\nimport { ActionTypes } from \"./types\";\nimport { API } from \"../utils/api\";\nimport {\n  CentersInterface,\n  DistrictInterface,\n  RoomLocationInterface,\n  RoomsInterface,\n} from \"../shared/interfaces\";\nimport { errorToText } from \"../utils/errors\";\n\n/**\n * * ****************************** INTERFACES *****************************\n */\n\nexport interface getAllRoomActions {\n  type: ActionTypes.GET_ALL_ROOM;\n  payload: RoomLocationInterface[];\n}\n\nexport interface createProvinceActions {\n  type: ActionTypes.CREATE_PROVINCE;\n  payload: RoomLocationInterface;\n}\n\nexport interface updateProvinceActions {\n  type: ActionTypes.UPDATE_PROVINCE;\n  payload: {\n    province_id: string;\n    province_name: string;\n  };\n}\n\nexport interface deleteProvinceActions {\n  type: ActionTypes.DELETE_PROVINCE;\n  payload: string;\n}\n\n// ============ DISTRICT =================\nexport interface createDistrictActions {\n  type: ActionTypes.CREATE_DISTRICT;\n  payload: { province_id: string; data: DistrictInterface };\n}\n\nexport interface updateDistrictActions {\n  type: ActionTypes.UPDATE_DISTRICT;\n  payload: {\n    province_id: string;\n    district_id: string;\n    district_name: string;\n  };\n}\n\nexport interface deleteDistrictActions {\n  type: ActionTypes.DELETE_DISTRICT;\n  payload: { province_id: string; district_id: string };\n}\n\n// ============ CENTERS =================\nexport interface createCenterActions {\n  type: ActionTypes.CREATE_CENTER;\n  payload: {\n    province_id: string;\n    district_id: string;\n    data: CentersInterface;\n  };\n}\n\nexport interface updateCenterActions {\n  type: ActionTypes.UPDATE_CENTER;\n  payload: {\n    province_id: string;\n    district_id: string;\n    examination_center_id: string;\n    center_name: string;\n  };\n}\n\nexport interface deleteCenterActions {\n  type: ActionTypes.DELETE_CENTER;\n  payload: { province_id: string; district_id: string; center_id: string };\n}\n\n// ============ ROOMS =================\nexport interface createRoomActions {\n  type: ActionTypes.CREATE_ROOM;\n  payload: {\n    province_id: string;\n    district_id: string;\n    center_id: string;\n    data: RoomsInterface;\n  };\n}\n\nexport interface updateRoomActions {\n  type: ActionTypes.UPDATE_ROOM;\n  payload: {\n    province_id: string;\n    district_id: string;\n    center_id: string;\n    room_id: string;\n    room_number: number;\n    capacity: number;\n  };\n}\n\nexport interface deleteRoomActions {\n  type: ActionTypes.DELETE_ROOM;\n  payload: {\n    province_id: string;\n    district_id: string;\n    center_id: string;\n    room_id: string;\n  };\n}\n\nexport type RoomActionType =\n  | getAllRoomActions\n  | createProvinceActions\n  | updateProvinceActions\n  | deleteProvinceActions\n  | createDistrictActions\n  | updateDistrictActions\n  | deleteDistrictActions\n  | createCenterActions\n  | updateCenterActions\n  | deleteCenterActions\n  | createRoomActions\n  | updateRoomActions\n  | deleteRoomActions;\n\n/**\n * * ****************************** ACTIONS *****************************\n */\n\nexport const getAllRoom = (callback: Function) => {\n  return async (dispatch: Dispatch) => {\n    callback(true, \"\");\n    try {\n      const res = await axios.get<RoomLocationInterface[]>(\n        `${API.APPLICATION}/roomlocation`\n      );\n      dispatch<getAllRoomActions>({\n        type: ActionTypes.GET_ALL_ROOM,\n        payload: res.data,\n      });\n      callback(false, \"\");\n    } catch (error) {\n      console.error(\"Err: \", error);\n      callback(false, errorToText(error));\n    }\n  };\n};\n\nexport const FC_CreateProvince = (data: RoomLocationInterface) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<createProvinceActions>({\n      type: ActionTypes.CREATE_PROVINCE,\n      payload: data,\n    });\n  };\n};\n\nexport const FC_UpdateProvince = (data: {\n  province_id: string;\n  province_name: string;\n}) => {\n  console.log({ data });\n  return async (dispatch: Dispatch) => {\n    dispatch<updateProvinceActions>({\n      type: ActionTypes.UPDATE_PROVINCE,\n      payload: data,\n    });\n  };\n};\n\nexport const FC_DeleteProvince = (data: string) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<deleteProvinceActions>({\n      type: ActionTypes.DELETE_PROVINCE,\n      payload: data,\n    });\n  };\n};\n\n// DISTRICT =================\nexport const FC_CreateDistrict = (data: {\n  province_id: string;\n  data: DistrictInterface;\n}) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<createDistrictActions>({\n      type: ActionTypes.CREATE_DISTRICT,\n      payload: data,\n    });\n  };\n};\n\nexport const FC_UpdateDistrict = (data: {\n  province_id: string;\n  district_id: string;\n  district_name: string;\n}) => {\n  console.log({ data });\n  return async (dispatch: Dispatch) => {\n    dispatch<updateDistrictActions>({\n      type: ActionTypes.UPDATE_DISTRICT,\n      payload: data,\n    });\n  };\n};\n\nexport const FC_DeleteDistrict = (data: {\n  province_id: string;\n  district_id: string;\n}) => {\n  console.log({ data });\n  return async (dispatch: Dispatch) => {\n    dispatch<deleteDistrictActions>({\n      type: ActionTypes.DELETE_DISTRICT,\n      payload: data,\n    });\n  };\n};\n\n// CENTERS =================\nexport const FC_CreateCenter = (data: {\n  province_id: string;\n  district_id: string;\n  data: CentersInterface;\n}) => {\n  console.log({ data });\n  return async (dispatch: Dispatch) => {\n    dispatch<createCenterActions>({\n      type: ActionTypes.CREATE_CENTER,\n      payload: data,\n    });\n  };\n};\n\nexport const FC_UpdateCenter = (data: {\n  province_id: string;\n  district_id: string;\n  examination_center_id: string;\n  center_name: string;\n}) => {\n  console.log({ data });\n  return async (dispatch: Dispatch) => {\n    dispatch<updateCenterActions>({\n      type: ActionTypes.UPDATE_CENTER,\n      payload: data,\n    });\n  };\n};\n\nexport const FC_DeleteCenter = (data: {\n  province_id: string;\n  district_id: string;\n  center_id: string;\n}) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<deleteCenterActions>({\n      type: ActionTypes.DELETE_CENTER,\n      payload: data,\n    });\n  };\n};\n\n// ROOM =================\nexport const FC_CreateRoom = (data: {\n  province_id: string;\n  district_id: string;\n  center_id: string;\n  data: RoomsInterface;\n}) => {\n  console.log({ data });\n  return async (dispatch: Dispatch) => {\n    dispatch<createRoomActions>({\n      type: ActionTypes.CREATE_ROOM,\n      payload: data,\n    });\n  };\n};\n\nexport const FC_UpdateRoom = (data: {\n  province_id: string;\n  district_id: string;\n  center_id: string;\n  room_id: string;\n  room_number: number;\n  capacity: number;\n}) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<updateRoomActions>({\n      type: ActionTypes.UPDATE_ROOM,\n      payload: data,\n    });\n  };\n};\n\nexport const FC_DeleteRoom = (data: {\n  province_id: string;\n  district_id: string;\n  center_id: string;\n  room_id: string;\n}) => {\n  console.log({ delete_room: data });\n  return async (dispatch: Dispatch) => {\n    dispatch<deleteRoomActions>({\n      type: ActionTypes.DELETE_ROOM,\n      payload: data,\n    });\n  };\n};\n","import { Dispatch } from \"redux\";\nimport { ActionTypes } from \"./types\";\nimport { data_school } from \"../shared/dataTest\";\nimport {\n  PostSchoolInterface,\n  SchoolInfoInterface,\n  SchoolsInterface,\n} from \"../shared/interfaces\";\nimport { setAxiosToken } from \"../utils/AxiosToken\";\nimport axios from \"axios\";\nimport { API } from \"../utils/api\";\nimport { errorToText } from \"../utils/errors\";\n\n/**\n * * ****************************** INTERFACES *****************************\n */\n\nexport interface GetSchoolsAction {\n  type: ActionTypes.GET_SCHOOLS;\n  payload: SchoolsInterface[];\n}\n\nexport interface GetSchoolsInfoAction {\n  type: ActionTypes.GET_SCHOOLS_INFO;\n  payload: SchoolInfoInterface[];\n}\n\nexport interface CreateSchoolAction {\n  type: ActionTypes.CREATE_SCHOOL;\n  payload: SchoolsInterface;\n}\n\nexport interface UpdateSchoolAction {\n  type: ActionTypes.UPDATE_SCHOOL;\n  payload: SchoolsInterface;\n}\n\nexport interface DeleteSchoolAction {\n  type: ActionTypes.DELETE_SCHOOL;\n  payload: string;\n}\n\n// School Posts interfaces\nexport interface FetchSchoolPostsAction {\n  type: ActionTypes.FETCH_SCHOOL_POSTS;\n  payload: PostSchoolInterface[];\n}\n\nexport interface FetchDistrictPostsAction {\n  type: ActionTypes.FETCH_DISTRICT_POSTS;\n  payload: PostSchoolInterface[];\n}\n\nexport interface CreateSchoolPostAction {\n  type: ActionTypes.CREATE_SCHOOL_POST;\n  payload: PostSchoolInterface;\n}\n\nexport interface UpdateSchoolPostAction {\n  type: ActionTypes.UPDATE_SCHOOL_POST;\n  payload: {\n    TYPE: \"DISTRICT\" | \"SCHOOL\" | \"RECEIVED\";\n    data: PostSchoolInterface;\n  };\n}\n\nexport interface DeleteSchoolPostAction {\n  type: ActionTypes.DELETE_SCHOOL_POST;\n  payload: PostSchoolInterface[];\n}\n\nexport type SchoolActionType =\n  | GetSchoolsAction\n  | GetSchoolsInfoAction\n  | CreateSchoolAction\n  | UpdateSchoolAction\n  | DeleteSchoolAction\n  | FetchSchoolPostsAction\n  | FetchDistrictPostsAction\n  | CreateSchoolPostAction\n  | UpdateSchoolPostAction\n  | DeleteSchoolPostAction;\n\n/**\n * * ****************************** ACTIONS *****************************\n */\n\nexport const getSchools = (callback: Function) => {\n  return async (dispatch: Dispatch) => {\n    callback(true, \"\");\n    try {\n      const res = await axios.get<SchoolsInterface[]>(\n        `${API.APPLICATION}/schools`\n      );\n      dispatch<GetSchoolsAction>({\n        type: ActionTypes.GET_SCHOOLS,\n        payload: res.data,\n      });\n      callback(false, \"\");\n    } catch (error) {\n      console.log(\"Err: \", error);\n      callback(false, errorToText(error));\n    }\n  };\n};\n\nexport const getSchoolsInfo = () => {\n  return async (dispatch: Dispatch) => {\n    setAxiosToken();\n    // const response = await axios.get<AccessRoleType[]>(url);\n\n    dispatch<GetSchoolsInfoAction>({\n      type: ActionTypes.GET_SCHOOLS_INFO,\n      payload: data_school,\n      // payload: response.data,\n    });\n  };\n};\n\nexport const createSchool = (data: SchoolsInterface) => {\n  console.log({ schools: data });\n  return async (dispatch: Dispatch) => {\n    dispatch<CreateSchoolAction>({\n      type: ActionTypes.CREATE_SCHOOL,\n      payload: data,\n    });\n  };\n};\n\nexport const updateSchool = (data: SchoolsInterface) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<UpdateSchoolAction>({\n      type: ActionTypes.UPDATE_SCHOOL,\n      payload: data,\n    });\n  };\n};\n\nexport const deleteSchool = (data: string) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<DeleteSchoolAction>({\n      type: ActionTypes.DELETE_SCHOOL,\n      payload: data,\n    });\n  };\n};\n\nexport const fetchSchoolPosts = (school_id: string, callback: Function) => {\n  return async (dispatch: Dispatch) => {\n    callback(true, \"\");\n    try {\n      const res = await axios.get<PostSchoolInterface[]>(\n        `${API.PLACEMENT}/requestpost/school/${school_id}`\n      );\n\n      console.log({ schoolPosts: res.data });\n\n      dispatch<FetchSchoolPostsAction>({\n        type: ActionTypes.FETCH_SCHOOL_POSTS,\n        payload: res.data,\n      });\n      callback(false, \"\");\n    } catch (error) {\n      console.log(\"Err: \", error);\n      callback(false, errorToText(error));\n    }\n  };\n};\n\nexport const createSchoolPost = (data: PostSchoolInterface) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<CreateSchoolPostAction>({\n      type: ActionTypes.CREATE_SCHOOL_POST,\n      payload: data,\n    });\n  };\n};\n\nexport const updateSchoolPost = (\n  TYPE: \"DISTRICT\" | \"SCHOOL\" | \"RECEIVED\",\n  data: PostSchoolInterface\n) => {\n  console.log({ TYPE, data });\n  return async (dispatch: Dispatch) => {\n    dispatch<UpdateSchoolPostAction>({\n      type: ActionTypes.UPDATE_SCHOOL_POST,\n      payload: { TYPE, data },\n    });\n  };\n};\n\nexport const deleteSchoolPost = (data: PostSchoolInterface[]) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<DeleteSchoolPostAction>({\n      type: ActionTypes.DELETE_SCHOOL_POST,\n      payload: data,\n    });\n  };\n};\n\nexport const fetchDistrictPosts = (district_id: string, callback: Function) => {\n  return async (dispatch: Dispatch) => {\n    callback(true, \"\");\n    try {\n      const res = await axios.get<PostSchoolInterface[]>(\n        `${API.PLACEMENT}/requestpost/district/${district_id}`\n      );\n\n      console.log({ districtPosts: res });\n\n      dispatch<FetchDistrictPostsAction>({\n        type: ActionTypes.FETCH_DISTRICT_POSTS,\n        payload: res.data,\n      });\n      callback(false, \"\");\n    } catch (error) {\n      console.log(\"Err: \", error);\n      callback(false, errorToText(error));\n    }\n  };\n};\n","import axios from \"axios\";\nimport React, { Component } from \"react\";\nimport { AiOutlineCaretRight } from \"react-icons/ai\";\nimport { BiBuildingHouse } from \"react-icons/bi\";\nimport { IoIosClose } from \"react-icons/io\";\nimport { MdFilterList, MdLabel, MdModeEdit, MdSave } from \"react-icons/md\";\nimport { connect } from \"react-redux\";\nimport {\n  Auth,\n  loadEducationCategories,\n  PushPopupAlert,\n} from \"../../../actions\";\nimport { getAllRoom } from \"../../../actions/location\";\nimport {\n  createSchool,\n  getSchools,\n  updateSchool,\n  deleteSchool,\n} from \"../../../actions/schools\";\nimport { PopupAlertData } from \"../../../components/Alert/Popup\";\nimport Modal, { ModalSize, Themes } from \"../../../components/Modal/Modal\";\nimport {\n  MainItem,\n  SideNavigation,\n  SubItem,\n  SubItemContainer,\n} from \"../../../components/Navigation/SideNavigation\";\nimport Table from \"../../../components/Table/Table\";\nimport { education_category } from \"../../../interfaces\";\nimport { PopupAlertTheme } from \"../../../interfaces/popupAlert\";\nimport { StoreState } from \"../../../reducers\";\nimport { toTwoDigit } from \"../../../shared/dataTest\";\nimport {\n  SchoolsInterface,\n  RoomLocationInterface,\n  DistrictInterface,\n} from \"../../../shared/interfaces\";\nimport { API } from \"../../../utils/api\";\nimport { errorToText } from \"../../../utils/errors\";\n\nexport const getSchoolById = (\n  schools: SchoolsInterface[],\n  school_id: string\n): SchoolsInterface => {\n  return schools.filter((school) => school._id === school_id)[0];\n};\ninterface AppProps {\n  auth: Auth;\n  education_categories: education_category[] | null;\n  allRoom: RoomLocationInterface[];\n  schools: SchoolsInterface[];\n  getSchools: Function;\n  loadEducationCategories: (callback: (loading: boolean) => void) => void;\n  createSchool: Function;\n  getAllRoom: Function;\n  updateSchool: Function;\n  deleteSchool: Function;\n  PushPopupAlert: (alert: PopupAlertData) => void;\n}\n\ninterface AppState {\n  loading: boolean;\n  loadingRequest: boolean;\n  districtFilterStatus: boolean;\n  edicationCategoryFilterStatus: boolean;\n  provinceFilterStatus: boolean;\n  thisEdication: education_category | null;\n  thisProvince: RoomLocationInterface | null;\n  thisDistrict: DistrictInterface | null;\n  district: DistrictInterface[];\n  schoolList: SchoolsInterface[];\n  modalState: \"\" | \"CREATE\" | \"UPDATE\";\n  error: { element: string; msg: string } | null;\n  schoolName: string;\n  thisSchool: SchoolsInterface | null;\n  instituteId: string;\n  provinceId: string;\n  districtId: string;\n}\n\nclass index extends Component<AppProps, AppState> {\n  constructor(props: AppProps) {\n    super(props);\n\n    this.state = {\n      loading: true,\n      loadingRequest: false,\n      districtFilterStatus: false,\n      edicationCategoryFilterStatus: false,\n      provinceFilterStatus: false,\n      thisEdication: null,\n      thisProvince: null,\n      thisDistrict: null,\n      district: [],\n      schoolList: this.props.schools,\n      modalState: \"\",\n      error: null,\n      schoolName: \"\",\n      thisSchool: null,\n      instituteId: \"\",\n      provinceId: \"\",\n      districtId: \"\",\n    };\n  }\n\n  setLoading = (state: boolean) => {\n    this.setState({ loading: state });\n  };\n\n  setLoadingRequest = (state: boolean) => {\n    this.setState({ loadingRequest: state });\n  };\n\n  setError = (\n    data: {\n      element: string;\n      msg: string;\n    } | null\n  ) => {\n    this.setState({ error: data });\n  };\n\n  loadDistrict = async () => {\n    try {\n      const res = await axios.get<DistrictInterface[]>(\n        `${API.APPLICATION}/district`\n      );\n      this.setState({ district: res.data });\n    } catch (error) {\n      console.error({ code_error: error });\n      this.props.PushPopupAlert({\n        title: errorToText(error),\n        theme: PopupAlertTheme.danger,\n      });\n    }\n  };\n\n  componentDidMount = () => {\n    if (\n      this.props.education_categories === null ||\n      this.props.education_categories.length === 0\n    ) {\n      this.props.loadEducationCategories(this.setLoading);\n    }\n    if (!this.props.allRoom.length) {\n      this.props.getAllRoom((status: boolean, msg: string) => {\n        if (!status && msg.length > 0) console.log(msg);\n      });\n    }\n    if (!this.props.schools.length && this.state.loading) {\n      this.props.getSchools((status: boolean, msg: string) => {\n        console.log(status, msg);\n        this.setLoading(status);\n        if (msg.length > 0) {\n          console.error({ loadingCandidatesError: msg });\n        }\n      });\n    }\n    if (!this.state.district.length) {\n      this.loadDistrict();\n    }\n    if (this.props.schools.length) {\n      this.setState({ schoolList: this.props.schools });\n      this.setLoading(false);\n    }\n  };\n\n  tableData = (): JSX.Element[] => {\n    if (!this.state.schoolList.length) {\n      return [\n        <tr key={1} className=\"border-b border-gray-200 hover:bg-gray-100\">\n          <td className=\"p-3 text-center\" colSpan={5}>\n            No School Found\n          </td>\n        </tr>,\n      ];\n    }\n\n    return this.state.schoolList.map((school, index) => (\n      <tr\n        key={index + school._id}\n        className=\"border-b border-gray-200 hover:bg-gray-100\"\n      >\n        <td className=\"p-3 text-left whitespace-nowrap\">{index + 1}</td>\n        <td className=\"p-3 text-left\">{school.school_name}</td>\n        <td className=\"py-3 px-5 text-left\">\n          {this.props.education_categories &&\n          this.props.education_categories.filter(\n            (edication) =>\n              edication.education_institute_id === school.education_category_id\n          ).length > 0\n            ? this.props.education_categories.filter(\n                (edication) =>\n                  edication.education_institute_id ===\n                  school.education_category_id\n              )[0].education_category_title\n            : \"No Institute\"}\n        </td>\n        <td className=\"py-3 px-5 text-left\">\n          {this.state.district &&\n          this.state.district.filter(\n            (district) => district.district_id === school.district_id\n          ).length > 0\n            ? this.state.district.filter(\n                (district) => district.district_id === school.district_id\n              )[0].district_name\n            : \"No district\"}\n        </td>\n        <td className=\"px-3\">\n          <div className=\"flex items-center gap-2 float-right\">\n            <button\n              className={`bg-blue-600 text-white font-bold py-1 px-2 flex items-center rounded focus:outline-none ${\n                this.state.loadingRequest ? \"cursor-not-allowed\" : null\n              }`}\n              title=\"Edit School\"\n              disabled={this.state.loadingRequest}\n              onClick={() => {\n                this.setState({\n                  modalState: \"UPDATE\",\n                  thisSchool: school,\n                  schoolName: school.school_name,\n                  instituteId: school.education_category_id,\n                  districtId: school.district_id,\n                  provinceId: this.props.allRoom.find((item) =>\n                    item.districts.find(\n                      (d) => d.district_id === school.district_id\n                    )\n                  )\n                    ? this.props.allRoom.find((item) =>\n                        item.districts.find(\n                          (d) => d.district_id === school.district_id\n                        )\n                      )!.province_id\n                    : \"\",\n                });\n              }}\n            >\n              <MdModeEdit className=\"w-4 h-4\" />\n              Edit\n            </button>\n            <button\n              className={`bg-red-700 text-white font-bold py-1 px-2 flex items-center rounded focus:outline-none ${\n                this.state.loadingRequest ? \"cursor-not-allowed\" : null\n              }`}\n              title=\"Delete\"\n              disabled={this.state.loadingRequest}\n              onClick={() => this.handleDelete(school._id)}\n            >\n              <MdModeEdit className=\"w-4 h-4\" />\n              Delete\n            </button>\n          </div>\n        </td>\n      </tr>\n    ));\n  };\n\n  handleSubmit = async (e: React.FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n    if (!this.state.schoolName.length) {\n      return this.setError({\n        element: \"school_name\",\n        msg: \"School name is required\",\n      });\n    }\n    if (!this.state.instituteId.length) {\n      return this.setError({\n        element: \"edication_id\",\n        msg: \"Education Institute is required\",\n      });\n    }\n\n    if (!this.state.districtId.length) {\n      return this.setError({\n        element: \"districtId_id\",\n        msg: \"District is required\",\n      });\n    }\n\n    this.setLoadingRequest(true);\n    try {\n      let res;\n      if (this.state.modalState === \"CREATE\") {\n        res = await axios.post<{\n          data: {\n            status: boolean;\n            school_name: string;\n            district_id: string;\n            education_category_id: string;\n            shool_id: string;\n          };\n        }>(`${API.APPLICATION}/schools`, {\n          school_name: this.state.schoolName,\n          district_id: this.state.districtId,\n          education_category_id: this.state.instituteId,\n        });\n        if (res.data) {\n          console.log({ res });\n          this.setState({\n            schoolList: [\n              ...this.state.schoolList,\n              {\n                _id: res.data.data.shool_id,\n                status: res.data.data.status,\n                school_name: res.data.data.school_name,\n                district_id: res.data.data.district_id,\n                education_category_id: res.data.data.education_category_id,\n              },\n            ],\n          });\n          this.props.createSchool({\n            _id: res.data.data.shool_id,\n            status: res.data.data.status,\n            school_name: res.data.data.school_name,\n            district_id: res.data.data.district_id,\n            education_category_id: res.data.data.education_category_id,\n          });\n          this.props.PushPopupAlert({\n            title: \"New School created successfully\",\n            theme: PopupAlertTheme.success,\n          });\n          this.setLoadingRequest(false);\n          this.setState({\n            schoolName: \"\",\n            districtId: \"\",\n            instituteId: \"\",\n            provinceId: \"\",\n          });\n        }\n      } else if (this.state.thisSchool && this.state.modalState === \"UPDATE\") {\n        res = await axios.patch<{ update: SchoolsInterface }>(\n          `${API.APPLICATION}/schools`,\n          {\n            school_id: this.state.thisSchool._id,\n            school_name: this.state.schoolName,\n            district_id: this.state.districtId,\n            education_category_id: this.state.instituteId,\n          }\n        );\n        if (res.data) {\n          console.log({ res });\n          this.props.updateSchool({\n            _id: this.state.thisSchool._id,\n            status: true,\n            school_name: this.state.schoolName,\n            district_id: this.state.districtId,\n            education_category_id: this.state.instituteId,\n          });\n          this.props.PushPopupAlert({\n            title: \"School updated successfully\",\n            theme: PopupAlertTheme.success,\n          });\n          this.setLoadingRequest(false);\n          this.setState({\n            schoolName: \"\",\n            districtId: \"\",\n            instituteId: \"\",\n            provinceId: \"\",\n            thisSchool: null,\n            modalState: \"\",\n          });\n        }\n      }\n    } catch (error) {\n      console.log({ doc_category_error: error });\n      this.props.PushPopupAlert({\n        title: errorToText(error),\n        theme: PopupAlertTheme.danger,\n      });\n      this.setLoadingRequest(false);\n    }\n  };\n\n  handleDelete = async (schoolId: string) => {\n    if (window.confirm(\"Are you sure do you want to delete this room?\")) {\n      this.setLoadingRequest(true);\n      try {\n        const res = await axios.delete<SchoolsInterface>(\n          `${API.APPLICATION}/schools/${schoolId}`\n        );\n\n        if (res.data) {\n          console.log({ res });\n          this.props.deleteSchool(schoolId);\n          this.props.PushPopupAlert({\n            title: \"School deleted successfully\",\n            theme: PopupAlertTheme.success,\n          });\n        }\n      } catch (error) {\n        console.log({ province_error: error });\n        this.props.PushPopupAlert({\n          title: errorToText(error),\n          theme: PopupAlertTheme.danger,\n        });\n      }\n      this.setLoadingRequest(false);\n    }\n  };\n\n  filterSchools = (\n    FILTER_TYPE: \"INSTITUTE\" | \"DISTRICT\",\n    FILTER_VALUE: string,\n    IGNORE_DISTRICT: boolean = false\n  ) => {\n    var newArray: SchoolsInterface[] = [];\n    if (FILTER_TYPE === \"INSTITUTE\") {\n      if (this.state.thisDistrict && !IGNORE_DISTRICT) {\n        if (FILTER_VALUE === \"ALL\") {\n          newArray = this.props.schools.filter(\n            (edication) =>\n              edication.district_id === this.state.thisDistrict!.district_id\n          );\n        } else {\n          newArray = this.props.schools.filter(\n            (edication) =>\n              edication.education_category_id === FILTER_VALUE &&\n              edication.district_id === this.state.thisDistrict!.district_id\n          );\n        }\n      } else {\n        if (FILTER_VALUE === \"ALL\") {\n          newArray = this.props.schools;\n        } else {\n          newArray = this.props.schools.filter(\n            (edication) => edication.education_category_id === FILTER_VALUE\n          );\n        }\n      }\n    }\n    if (FILTER_TYPE === \"DISTRICT\") {\n      if (this.state.thisEdication) {\n        if (FILTER_VALUE === \"ALL\") {\n          newArray = this.props.schools.filter(\n            (edication) =>\n              edication.education_category_id ===\n              this.state.thisEdication!.education_institute_id\n          );\n        } else {\n          newArray = this.props.schools.filter(\n            (edication) =>\n              edication.district_id === FILTER_VALUE &&\n              edication.education_category_id ===\n                this.state.thisEdication!.education_institute_id\n          );\n        }\n      } else {\n        if (FILTER_VALUE === \"ALL\") {\n          newArray = this.props.schools;\n        } else {\n          newArray = this.props.schools.filter(\n            (edication) => edication.district_id === FILTER_VALUE\n          );\n        }\n      }\n    }\n    this.setState({ schoolList: newArray });\n  };\n\n  countSchool = (\n    FILTER_TYPE: \"DEFAULT\" | \"EDUCATION\" | \"DISTRICT\" = \"DEFAULT\",\n    FILTER_VALUE: string = \"ALL\"\n  ): string => {\n    let counts: number = 0;\n    if (FILTER_TYPE === \"DEFAULT\") {\n      counts = this.state.schoolList.length;\n    } else if (FILTER_TYPE === \"EDUCATION\") {\n      counts = this.state.schoolList.filter(\n        (item) => item.education_category_id === FILTER_VALUE\n      ).length;\n    } else if (FILTER_TYPE === \"DISTRICT\") {\n      counts = this.state.schoolList.filter(\n        (item) => item.district_id === FILTER_VALUE\n      ).length;\n    }\n    return toTwoDigit(counts);\n  };\n\n  render() {\n    if (this.state.loading === true) {\n      return (\n        <div className=\"text-center mt-7 font-bold text-4xl text-gray-400 animate-pulse\">\n          Loading schools...\n        </div>\n      );\n    }\n    return (\n      <React.Fragment>\n        <SideNavigation>\n          {this.state.loading ? (\n            <section className=\"animate-pulse\">\n              <div className=\"bg-gray-400 font-bold mb-2 h-7 px-2 rounded-md cursor-wait\"></div>\n              <div className=\"bg-gray-400 font-bold mb-2 h-7 px-2 rounded-md cursor-wait\"></div>\n              <div className=\"bg-gray-400 font-bold mb-2 h-7 px-2 rounded-md cursor-wait\"></div>\n            </section>\n          ) : (\n            <React.Fragment>\n              {/* EDUCATION CATEGORY sections */}\n              <span className=\"font-semibold text-lg text-gray-500\">\n                Filter by Institute\n              </span>\n              <section\n                className={`mt-2 ${\n                  this.state.loadingRequest && \"cursor-pointer\"\n                }`}\n                onClick={() =>\n                  !this.state.loadingRequest &&\n                  this.setState({\n                    edicationCategoryFilterStatus:\n                      !this.state.edicationCategoryFilterStatus,\n                  })\n                }\n              >\n                <MainItem\n                  title={\n                    !this.state.thisEdication\n                      ? \"Choose Education Institute\"\n                      : this.state.thisEdication.education_category_title\n                  }\n                  active={\n                    this.state.edicationCategoryFilterStatus ||\n                    this.state.thisEdication !== null\n                      ? true\n                      : false\n                  }\n                />\n              </section>\n              {this.state.edicationCategoryFilterStatus &&\n                this.props.education_categories &&\n                this.props.education_categories.length > 0 && (\n                  <SubItemContainer>\n                    {this.props.education_categories &&\n                      this.props.education_categories.map(\n                        (edication, index) => (\n                          <section\n                            key={edication.education_institute_id + index}\n                            onClick={() =>\n                              !this.state.loadingRequest &&\n                              (this.setState({\n                                thisEdication: edication,\n                                edicationCategoryFilterStatus: false,\n                              }),\n                              this.filterSchools(\n                                \"INSTITUTE\",\n                                edication.education_institute_id\n                              ))\n                            }\n                          >\n                            <SubItem\n                              title={edication.education_category_title}\n                              icon={MdLabel}\n                              active={\n                                this.state.thisEdication\n                                  ? edication.education_institute_id ===\n                                    this.state.thisEdication\n                                      .education_institute_id\n                                  : false\n                              }\n                            />\n                          </section>\n                        )\n                      )}\n                  </SubItemContainer>\n                )}\n              {/* end EDUCATION CATEGORY sections */}\n\n              {/* province sections */}\n              <section>\n                <span className=\"font-semibold text-lg text-gray-500\">\n                  Filter by District\n                </span>\n                <section\n                  className=\"mt-2\"\n                  onClick={() =>\n                    !this.state.loadingRequest &&\n                    this.setState({\n                      provinceFilterStatus: !this.state.provinceFilterStatus,\n                      edicationCategoryFilterStatus: false,\n                      districtFilterStatus: false,\n                    })\n                  }\n                >\n                  <MainItem\n                    title={\n                      !this.state.thisProvince\n                        ? \"Choose Province\"\n                        : this.state.thisProvince.province_name\n                    }\n                    active={\n                      this.state.provinceFilterStatus ||\n                      this.state.thisProvince !== null\n                        ? true\n                        : false\n                    }\n                  />\n                </section>\n              </section>\n              {this.state.provinceFilterStatus &&\n                this.props.allRoom &&\n                this.props.allRoom.length > 0 && (\n                  <SubItemContainer>\n                    {this.props.allRoom &&\n                      this.props.allRoom.map((province, index) => (\n                        <section\n                          key={province.province_id + index}\n                          onClick={() =>\n                            !this.state.loadingRequest &&\n                            (this.setState({\n                              provinceFilterStatus: false,\n                              thisProvince: province,\n                              thisDistrict: null,\n                            }),\n                            this.state.thisEdication &&\n                              this.filterSchools(\n                                \"INSTITUTE\",\n                                this.state.thisEdication.education_institute_id,\n                                true\n                              ))\n                          }\n                        >\n                          <SubItem\n                            title={province.province_name}\n                            icon={MdLabel}\n                            active={\n                              this.state.thisProvince\n                                ? province.province_id ===\n                                  this.state.thisProvince.province_id\n                                : false\n                            }\n                          />\n                        </section>\n                      ))}\n                  </SubItemContainer>\n                )}\n              {/* end province sections */}\n\n              {/* DISTRICT sections */}\n              {this.state.thisProvince && (\n                <section\n                  className=\"mt-2\"\n                  onClick={() =>\n                    !this.state.loadingRequest &&\n                    this.setState({\n                      edicationCategoryFilterStatus: false,\n                      provinceFilterStatus: false,\n                      districtFilterStatus: !this.state.districtFilterStatus,\n                    })\n                  }\n                >\n                  <MainItem\n                    title={\n                      !this.state.thisDistrict\n                        ? \"Choose District\"\n                        : this.state.thisDistrict.district_name\n                    }\n                    active={\n                      this.state.districtFilterStatus ||\n                      this.state.thisDistrict !== null\n                        ? true\n                        : false\n                    }\n                  />\n                </section>\n              )}\n              {this.state.districtFilterStatus &&\n                this.state.thisProvince &&\n                this.state.thisProvince.districts.length > 0 && (\n                  <SubItemContainer>\n                    {this.state.thisProvince &&\n                      this.state.thisProvince.districts.map(\n                        (district, index) => (\n                          <section\n                            key={district.district_id + index}\n                            onClick={() =>\n                              !this.state.loadingRequest &&\n                              (this.setState({\n                                thisDistrict: district,\n                                districtFilterStatus: false,\n                              }),\n                              this.filterSchools(\n                                \"DISTRICT\",\n                                district.district_id\n                              ))\n                            }\n                          >\n                            <SubItem\n                              title={district.district_name}\n                              icon={MdLabel}\n                              active={\n                                this.state.thisDistrict\n                                  ? district.district_id ===\n                                    this.state.thisDistrict.district_id\n                                  : false\n                              }\n                            />\n                          </section>\n                        )\n                      )}\n                  </SubItemContainer>\n                )}\n              {/* end DISTRICT sections */}\n            </React.Fragment>\n          )}\n        </SideNavigation>\n\n        {/* BODY =================================== */}\n        <div className=\"w-full my-5 px-1\">\n          {/* header title */}\n          <div className=\"flex items-start justify-between\">\n            <div className=\"flex flex-row items-center\">\n              <BiBuildingHouse className=\"text-blue-500 w-28 h-28\" />\n              <div className=\"flex flex-col\">\n                <h1 className=\"text-3xl font-semibold\">Schools Management</h1>\n                <div className=\"flex flex-row items-center mx-2 md:gap-3 gap-2\">\n                  <div className=\"flex flex-col mt-1\">\n                    <span className=\"text-gray-600 text-base\">\n                      All School(s)\n                    </span>\n                    <span className=\"text-gray-600 text-2xl font-bold\">\n                      {this.countSchool()}\n                    </span>\n                  </div>\n                  {this.props.education_categories &&\n                    this.props.education_categories.length > 0 &&\n                    this.props.education_categories.map((education, index) => (\n                      <div\n                        className=\"flex flex-col mt-1\"\n                        key={index + education.education_institute_id}\n                      >\n                        <span className=\"text-gray-600 text-base\">\n                          {education.education_category_title}\n                        </span>\n                        <span className=\"text-gray-600 text-2xl font-bold\">\n                          {this.countSchool(\n                            \"EDUCATION\",\n                            education.education_institute_id\n                          )}\n                        </span>\n                      </div>\n                    ))}\n                  {/* {userTabs !== TabTypes.Blocked_Users && ( */}\n                  {/* <div className=\"flex flex-col mt-1\">\n                  <span className=\"text-gray-600 text-base\">\n                    Vaccant Position(s)\n                  </span>\n                  <span className=\"text-gray-600 text-2xl font-bold\">\n                    {labelCounts.activeUser}\n                    07\n                  </span>\n                </div> */}\n                  {/* )}\n                {/* <div className=\"flex flex-col mt-1\">\n                  <span className=\"text-gray-600 text-base\">\n                    Blocked User(s)\n                  </span>\n                  <span className=\"text-gray-600 text-2xl font-bold\">\n                    12\n                  </span>\n                </div> */}\n                </div>\n              </div>\n            </div>\n            {/* <div className=\"flex items-center gap-2 mt-2\">\n            <label className=\"font-semibold text-gray-600 py-2\">\n              Academic period\n            </label>\n            <select\n              className=\"bg-white border border-gray-700 p-1 focus:outline-none focus:bg-gray-100\"\n              required\n            >\n              <option value=\"\">2020 - 2021</option>\n            </select>\n          </div> */}\n          </div>\n          {/* end header title */}\n\n          <div className=\"md:w-98 bg-white mx-auto md:p-2\">\n            <div className=\"flex items-start justify-between\">\n              <div>\n                {this.state.thisEdication && (\n                  <div className=\"flex\">\n                    <div className=\"flex items-center gap-1 mx-1\">\n                      <MdFilterList className=\"text-gray-600\" />\n                      <span className=\"font-semibold text-gray-500\">\n                        Institute:\n                      </span>\n                      <span className=\"font-semibold text-blue-700\">\n                        {this.state.thisEdication.education_category_title}\n                      </span>\n                    </div>\n                    <IoIosClose\n                      className=\"cursor-pointer rounded-full hover:bg-red-500 hover:text-white\"\n                      onClick={() =>\n                        !this.state.loading &&\n                        (this.setState({ thisEdication: null }),\n                        this.filterSchools(\"INSTITUTE\", \"ALL\"))\n                      }\n                      title=\"Clean Education Institute filter\"\n                    />\n                  </div>\n                )}\n                {this.state.thisProvince && (\n                  <div className=\"flex\">\n                    <div className=\"flex items-center gap-1 mx-1\">\n                      <MdFilterList className=\"text-gray-600\" />\n                      <span className=\"font-semibold text-gray-500\">\n                        Location:\n                      </span>\n                      <span\n                        className={`font-semibold ${\n                          this.state.thisDistrict\n                            ? \"text-black cursor-pointer\"\n                            : \"text-blue-700\"\n                        }`}\n                      >\n                        {this.state.thisProvince.province_name}\n                      </span>\n                      {this.state.thisDistrict && (\n                        <div className=\"flex items-center\">\n                          <AiOutlineCaretRight />\n                          <span className=\"text-blue-700 font-semibold\">\n                            {this.state.thisDistrict.district_name}\n                          </span>\n                        </div>\n                      )}\n                    </div>\n                    <IoIosClose\n                      className=\"cursor-pointer rounded-full hover:bg-red-500 hover:text-white\"\n                      onClick={() =>\n                        !this.state.loading &&\n                        (this.setState({\n                          thisDistrict: null,\n                          thisProvince: null,\n                        }),\n                        this.filterSchools(\"DISTRICT\", \"ALL\"))\n                      }\n                      title=\"Clean location filter\"\n                    />\n                  </div>\n                )}\n              </div>\n              <button\n                type=\"button\"\n                className=\"btn btn-blue flex my-1\"\n                onClick={() => this.setState({ modalState: \"CREATE\" })}\n                disabled={this.state.loadingRequest}\n              >\n                <MdSave className=\"h-6 w-6\" />\n                <span className=\"ml-2\">Add School</span>\n              </button>\n              {/* <DownloadPDF reportTitle=\"Testing PDF\" /> */}\n            </div>\n            <Table\n              columns={[\n                { columnTitle: \"#\", alignText: \"left\", padding: \"p-3\" },\n                { columnTitle: \"School\", alignText: \"left\", padding: \"p-3\" },\n                { columnTitle: \"Institute\", alignText: \"left\", padding: \"p-3\" },\n                { columnTitle: \"District\", alignText: \"left\", padding: \"p-3\" },\n                { columnTitle: \"\", alignText: \"left\", padding: \"p-3\" },\n              ]}\n              rows={this.tableData}\n              pagination={true}\n              search={true}\n              thColor=\"gray\"\n            />\n          </div>\n        </div>\n\n        {/* modal control */}\n        {this.state.modalState && (\n          <Modal\n            backDrop={true}\n            theme={Themes.default}\n            close={(): void =>\n              this.setState({\n                modalState: \"\",\n                thisSchool: null,\n                schoolName: \"\",\n                instituteId: \"\",\n                districtId: \"\",\n                provinceId: \"\",\n              })\n            }\n            displayClose={true}\n            backDropClose={false}\n            title={\n              <div className=\"text-gray-600 font-bold text-3xl md:ml-4 inline-flex items-center gap-2\">\n                <BiBuildingHouse className=\"w-11 h-11 text-gray-500 hover:bg-gray-500 hover:text-gray-50 rounded-full p-0 foucs:outline-none\" />\n                {this.state.modalState === \"CREATE\" ? \"CREATE \" : \"UPDATE \"}{\" \"}\n                SCHOOL\n              </div>\n            }\n            widthSizeClass={ModalSize.medium}\n            padding={{ title: true, body: false, footer: false }}\n          >\n            <div className=\"mx-8 mb-8\">\n              <form onSubmit={(e) => this.handleSubmit(e)}>\n                <div className=\"py-4 text-base leading-6 space-y-4 text-gray-700 sm:text-lg sm:leading-7\">\n                  <div className=\"flex flex-col\">\n                    <label>School name</label>\n                    <input\n                      type=\"text\"\n                      className={`text-left input-white w-20 inline-block border-2 ${\n                        this.state.error &&\n                        this.state.error.element === \"school_name\"\n                          ? \"border-red-700\"\n                          : \"border-gray-500\"\n                      }`}\n                      placeholder=\"School name\"\n                      value={this.state.schoolName}\n                      onChange={(e) => {\n                        this.setError(null);\n                        this.setState({ schoolName: e.target.value });\n                      }}\n                      disabled={this.state.loadingRequest}\n                    />\n                    {this.state.error &&\n                      this.state.error.element === \"school_name\" && (\n                        <span className=\"text-red-700\">\n                          {this.state.error.msg}\n                        </span>\n                      )}\n                  </div>\n\n                  {/* INSTITUTES ================= */}\n                  <div className=\"flex flex-col\">\n                    <label>Institutes</label>\n                    {/* block appearance-none w-full bg-grey-lighter border\n                  border-grey-lighter text-grey-darker py-3 px-4 pr-8 rounded */}\n                    <select\n                      className={`text-left input-white w-full block border-2 py-3 px-4 pr-8 ${\n                        this.state.error &&\n                        this.state.error.element === \"edication_id\"\n                          ? \"border-red-700\"\n                          : \"border-gray-500\"\n                      }`}\n                      value={this.state.instituteId}\n                      onChange={(e) =>\n                        this.setState({\n                          instituteId: e.target.value,\n                        })\n                      }\n                      disabled={this.state.loadingRequest}\n                    >\n                      <option value=\"\" disabled>\n                        Choose Institute\n                      </option>\n                      {this.props.education_categories &&\n                        this.props.education_categories.map(\n                          (institute, index) => (\n                            <option\n                              value={institute.education_institute_id}\n                              key={index + institute.education_institute_id}\n                            >\n                              {institute.education_category_title}\n                            </option>\n                          )\n                        )}\n                    </select>\n                    {this.state.error &&\n                      this.state.error.element === \"edication_id\" && (\n                        <span className=\"text-red-700\">\n                          {this.state.error.msg}\n                        </span>\n                      )}\n                  </div>\n\n                  {/* PROVINCE ================= */}\n                  <div className=\"flex flex-col\">\n                    <label>Province</label>\n                    <select\n                      className={`text-left input-white w-20 inline-block border-2 border-gray-500`}\n                      value={this.state.provinceId}\n                      onChange={(e) =>\n                        this.setState({ provinceId: e.target.value })\n                      }\n                      disabled={this.state.loadingRequest}\n                    >\n                      <option value=\"\" disabled>\n                        Choose province\n                      </option>\n                      {this.props.allRoom &&\n                        this.props.allRoom.map((province, index) => (\n                          <option\n                            value={province.province_id}\n                            key={index + province.province_id}\n                          >\n                            {province.province_name}\n                          </option>\n                        ))}\n                    </select>\n                  </div>\n\n                  {/* DISTRICT ================= */}\n                  {this.state.provinceId && (\n                    <div className=\"flex flex-col\">\n                      <label>District</label>\n                      <select\n                        className={`text-left input-white w-20 inline-block border-2 ${\n                          this.state.error &&\n                          this.state.error.element === \"districtId_id\"\n                            ? \"border-red-700\"\n                            : \"border-gray-500\"\n                        }`}\n                        value={this.state.districtId}\n                        onChange={(e) =>\n                          this.setState({ districtId: e.target.value })\n                        }\n                        disabled={this.state.loadingRequest}\n                      >\n                        <option value=\"\" disabled>\n                          Choose district\n                        </option>\n                        {this.props.allRoom &&\n                        this.props.allRoom.filter(\n                          (province) =>\n                            province.province_id === this.state.provinceId\n                        )[0].districts.length > 0 ? (\n                          this.props.allRoom\n                            .filter(\n                              (province) =>\n                                province.province_id === this.state.provinceId\n                            )[0]\n                            .districts.map((district, index) => (\n                              <option\n                                value={district.district_id}\n                                key={index + district.district_id}\n                              >\n                                {district.district_name}\n                              </option>\n                            ))\n                        ) : (\n                          <option key={702} disabled={true}>\n                            No District Found\n                          </option>\n                        )}\n                      </select>\n                      {this.state.error &&\n                        this.state.error.element === \"districtId_id\" && (\n                          <span className=\"text-red-700\">\n                            {this.state.error.msg}\n                          </span>\n                        )}\n                    </div>\n                  )}\n                </div>\n                <div className=\"pt-4 flex justify-between\">\n                  <button\n                    onClick={() =>\n                      this.setState({\n                        modalState: \"\",\n                        thisSchool: null,\n                        schoolName: \"\",\n                        instituteId: \"\",\n                        districtId: \"\",\n                        provinceId: \"\",\n                      })\n                    }\n                    className={`btn bg-gray-400 text-white hover:bg-gray-600 focus:outline-none`}\n                    type=\"button\"\n                    disabled={this.state.loadingRequest}\n                  >\n                    Exit\n                  </button>\n                  <button\n                    className={`btn bg-primary text-white hover:bg-blue-600 focus:outline-none ${\n                      this.state.loadingRequest ? \"animate-pulse\" : null\n                    }`}\n                    type=\"submit\"\n                    disabled={this.state.loadingRequest}\n                  >\n                    {this.state.loadingRequest ? \"Loading...\" : \"Save\"}\n                  </button>\n                </div>\n              </form>\n            </div>\n          </Modal>\n        )}\n      </React.Fragment>\n    );\n  }\n}\n\nconst mapStateToProps = ({\n  auth,\n  schools,\n  schoolLevels,\n  locations,\n}: StoreState): {\n  auth: Auth;\n  schools: SchoolsInterface[];\n  education_categories: education_category[] | null;\n  allRoom: RoomLocationInterface[];\n} => {\n  return {\n    auth: auth,\n    schools: schools.schools,\n    education_categories: schoolLevels.education_categories,\n    allRoom: locations.roomLocation,\n  };\n};\n\nexport const Schools = connect(mapStateToProps, {\n  createSchool,\n  getSchools,\n  updateSchool,\n  getAllRoom,\n  deleteSchool,\n  loadEducationCategories,\n  PushPopupAlert,\n})(index);\n","import React, { useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Redirect } from \"react-router-dom\";\nimport Modal, { ModalSize, Themes } from \"../../components/Modal/Modal\";\nimport Table from \"../../components/Table/Table\";\nimport { StoreState } from \"../../reducers\";\nimport {\n  PostRequestStatusInterface,\n  PostSchoolInterface,\n  SchoolsInterface,\n} from \"../../shared/interfaces\";\nimport {\n  fetchDistrictPosts,\n  createSchoolPost,\n  getSchools,\n  updateSchoolPost,\n} from \"../../actions/schools\";\nimport { capitalizeFirstLetter } from \"../../shared/dataTest\";\nimport { GiTeacher } from \"react-icons/gi\";\nimport { Auth, PushPopupAlert } from \"../../actions\";\nimport { PopupAlertData } from \"../../components/Alert/Popup\";\nimport { PopupAlertTheme } from \"../../interfaces/popupAlert\";\nimport { PositionAPI } from \"../../interfaces\";\nimport { getPositions } from \"../../actions/settings\";\nimport axios from \"axios\";\nimport { API } from \"../../utils/api\";\nimport { errorToText } from \"../../utils/errors\";\nimport { getSchoolById } from \"../district/Schools\";\nimport { BiReply } from \"react-icons/bi\";\nimport { DATE } from \"../../utils/functions\";\n\ninterface AppProps {\n  auth: Auth;\n  schools: SchoolsInterface[];\n  systemPositions: PositionAPI[] | null;\n  districtPosts: PostSchoolInterface[];\n  getPositions: Function;\n  fetchDistrictPosts: Function;\n  createSchoolPost: Function;\n  updateSchoolPost: Function;\n  getSchools: Function;\n  PushPopupAlert: (alert: PopupAlertData) => void;\n}\n\nconst _District: React.FC<AppProps> = (props) => {\n  const [loadingPosition, setLoadingPosition] = useState<boolean>(false);\n  const [loadingPost, setLoadingPost] = useState<boolean>(true);\n  const [modalState, setModalState] = useState<\"CONFIRM\" | \"UPDATE\" | null>(\n    null\n  );\n  const [filterByPosition, setFilterByPosition] = useState<string>(\"all\");\n  const [loadingRequest, setLoadingRequest] = useState<boolean>(false);\n  const [loading, setLoading] = useState<boolean>(true);\n  const [thisPost, setThisPost] = useState<PostSchoolInterface | null>(null);\n  const [viewPost, setViewPost] = useState<boolean>(false);\n  const [approvedPosts, setApprovedPosts] = useState<number>(0);\n  const [formError, setFormError] = useState<{\n    element: string;\n    msg: string;\n  } | null>(null);\n\n  useEffect(() => {\n    if (!props.schools.length) {\n      props.getSchools((status: boolean, msg: string) => {\n        setLoading(status);\n        if (msg.length > 0) {\n          console.error({ loadingCandidatesError: msg });\n        }\n      });\n    } else {\n      setLoading(false);\n      loadingPosition && setLoadingPosition(false);\n    }\n\n    if (props.systemPositions === null) {\n      setLoadingPosition(true);\n      props.getPositions((status: boolean, msg: string) => {\n        setLoadingPosition(status);\n        console.log({ status: status, msg: msg });\n        if (msg.length) {\n          props.PushPopupAlert({\n            title: msg,\n            theme: PopupAlertTheme.danger,\n          });\n        }\n      });\n    }\n    if (!props.districtPosts.length && loadingPost) {\n      props.fetchDistrictPosts(\n        props.auth.user_access.district_id,\n        (status: boolean, message: string) => {\n          if (!status) {\n            if (message.length > 0 && loadingPost) {\n              console.error(\"error loading school post: \", message);\n              props.PushPopupAlert({\n                title: message,\n                theme: PopupAlertTheme.danger,\n              });\n            }\n            setLoadingPost(false);\n          }\n        }\n      );\n    } else {\n      setLoadingPost(false);\n    }\n  }, [loadingPosition, loadingPost, props]);\n\n  const getPositionById = (\n    systemPositions: PositionAPI[],\n    positionId: string\n  ): PositionAPI => {\n    return systemPositions.filter((item) => item.position_id === positionId)[0];\n  };\n\n  if (props.auth.user_access.district_id.length <= 0) {\n    return <Redirect to=\"/\" />;\n  }\n\n  if (loading === true) {\n    return (\n      <div className=\"text-center mt-7 font-bold text-4xl text-gray-400 animate-pulse\">\n        Loading data...\n      </div>\n    );\n  }\n\n  const tableData = (): JSX.Element[] => {\n    if (loadingPost) {\n      return [\n        <tr key={1} className=\"border-b border-gray-200 hover:bg-gray-100\">\n          <td className=\"p-3 text-center\" colSpan={8}>\n            Loading post request(s)\n          </td>\n        </tr>,\n      ];\n    }\n\n    let data = props.districtPosts;\n\n    data =\n      filterByPosition !== \"\" && filterByPosition !== \"all\"\n        ? data.filter(\n            (schoolPost) => schoolPost.position_id === filterByPosition\n          )\n        : data;\n\n    if (data.length === 0) {\n      return [\n        <tr key={1} className=\"border-b border-gray-200 hover:bg-gray-100\">\n          <td className=\"p-3 text-center\" colSpan={8}>\n            No Data Found\n          </td>\n        </tr>,\n      ];\n    }\n\n    return data.map((schoolPost, index) => (\n      <tr\n        key={index + 1}\n        className=\"border-b border-gray-200 hover:bg-gray-100\"\n      >\n        <td className=\"py-3 px-4 text-left\">\n          {getSchoolById(props.schools, schoolPost.school_id)?.school_name}\n        </td>\n        <td className=\"py-3 px-4 text-left\">\n          {props.systemPositions &&\n            getPositionById(props.systemPositions, schoolPost.position_id)\n              .position_title}\n        </td>\n        <td className=\"py-3 px-4 text-left text-base font-bold\">\n          {schoolPost.needed_posts}\n        </td>\n        <td className=\"py-3 px-4 text-left text-base font-medium\">\n          {schoolPost.requested_post_status !==\n          PostRequestStatusInterface.INITIATED\n            ? schoolPost.confirmed_posts\n            : \"-\"}\n        </td>\n        <td className=\"py-3 px-4 text-left text-base font-medium\">\n          {schoolPost.occupied_posts ? schoolPost.occupied_posts : \"-\"}\n        </td>\n        <td className=\"py-3 px-4 text-left text-base font-medium\">\n          {schoolPost.requested_post_status ===\n          PostRequestStatusInterface.RECEIVED\n            ? schoolPost.received_posts\n            : \"-\"}\n        </td>\n        <td>\n          <span\n            className={`px-2 py-1 font-semibold rounded ${\n              schoolPost.requested_post_status ===\n              PostRequestStatusInterface.INITIATED\n                ? \"text-gray-700 bg-gray-100 dark:bg-gray-700 dark:text-gray-100\"\n                : schoolPost.requested_post_status ===\n                  PostRequestStatusInterface.CONFIRMED\n                ? \"text-blue-700 bg-blue-100 dark:bg-blue-700 dark:text-blue-100\"\n                : \"text-green-800 bg-green-100 dark:bg-green-800 dark:text-green-100\"\n            }`}\n          >\n            {schoolPost.requested_post_status ===\n            PostRequestStatusInterface.INITIATED\n              ? \"Pending\"\n              : capitalizeFirstLetter(schoolPost.requested_post_status)}\n          </span>\n        </td>\n        <td className=\"py- text-left\">\n          <div className=\"flex item-center justify-end gap-1\">\n            <button\n              className=\"\n                btn\n                btn-blue\n                transition\n                ease-out\n                duration-500\n                flex items-center\n              \"\n              title=\"View User Profile\"\n              onClick={() => {\n                setThisPost(schoolPost);\n                setModalState(\"CONFIRM\");\n              }}\n            >\n              Reply\n            </button>\n            <button\n              className=\"\n                btn\n                btn-blue\n                transition\n                ease-out\n                duration-500\n                flex items-center\n              \"\n              title=\"View User Profile\"\n              onClick={() => {\n                setThisPost(schoolPost);\n                setViewPost(true);\n              }}\n            >\n              Details\n            </button>\n            {schoolPost.requested_post_status ===\n              PostRequestStatusInterface.INITIATED && (\n              <button\n                className=\"btn bg-gray-500 text-white hover:bg-gray-700\"\n                onClick={() => {\n                  setModalState(\"UPDATE\");\n                }}\n                disabled={loadingRequest}\n              >\n                Edit\n              </button>\n            )}\n          </div>\n        </td>\n      </tr>\n    ));\n  };\n\n  const submitRequest = async (e: React.FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n    if (approvedPosts < 0) {\n      return setFormError({\n        element: \"approved_posts\",\n        msg: \"Invalid number of approved post\",\n      });\n    } else if (thisPost && approvedPosts > thisPost.needed_posts) {\n      return setFormError({\n        element: \"approved_posts\",\n        msg: \"Invalid number of approved post\",\n      });\n    }\n\n    setLoadingRequest(true);\n    try {\n      if (modalState === \"CONFIRM\" && thisPost) {\n        const res = await axios.patch<{ data: PostSchoolInterface }>(\n          `${API.PLACEMENT}/requestpost/${thisPost.requested_post_id}`,\n          {\n            confirmed_posts: approvedPosts,\n            confirmed_by: props.auth.user.user_id,\n            received_posts: 0,\n            approval_date: new Date(),\n            school_id: thisPost.school_id,\n            position_id: thisPost.position_id,\n            district_id: thisPost.district_id,\n            needed_posts: thisPost.needed_posts,\n            male_number: thisPost.male_number,\n            female_number: thisPost.female_number,\n            description: thisPost.description,\n            occupied_posts: thisPost.occupied_posts,\n            requested_by: props.auth.user.user_id,\n            requested_post_status: PostRequestStatusInterface.CONFIRMED,\n          }\n        );\n        if (res) {\n          // props.updateSchoolPost(\"SCHOOL\", res.data.data);\n          props.fetchDistrictPosts(\n            props.auth.user_access.district_id,\n            (status: boolean, message: string) => {\n              if (!status) {\n                if (message.length > 0 && loadingPost) {\n                  console.error(\"error loading school post: \", message);\n                  props.PushPopupAlert({\n                    title: message,\n                    theme: PopupAlertTheme.danger,\n                  });\n                }\n                setLoadingPost(false);\n              }\n            }\n          );\n\n          setThisPost(null);\n          setApprovedPosts(0);\n          setModalState(null);\n          props.PushPopupAlert({\n            title: `Post request has been responded!`,\n            theme: PopupAlertTheme.info,\n          });\n        }\n      }\n    } catch (error) {\n      console.error({ post_relpy: error });\n      props.PushPopupAlert({\n        title: errorToText(error),\n        theme: PopupAlertTheme.danger,\n      });\n    }\n    setLoadingRequest(false);\n  };\n\n  return (\n    <React.Fragment>\n      {/* <div className=\"bg-hero my-5 rounded p-4 flex justify-between items-center relative\">\n        <div className=\"flex flex-col\">\n          <span className=\"text-white text-4xl\">User Management</span>\n        </div>\n      </div> */}\n      {/* header title */}\n      <div className=\"flex flex-row items-start gap-4 my-2\">\n        <GiTeacher className=\"text-blue-700 w-12 h-12 md:block hidden\" />\n        <div className=\"w-full\">\n          <div className=\"flex justify-between w-full\">\n            <div className=\"flex flex-col gap-1 justify-between\">\n              <h1 className=\"md:text-4xl text-3xl font-semibold\">\n                Teacher Request\n              </h1>\n\n              <div className=\"flex-row items-center md:gap-3 gap-2 hidden\">\n                <div className=\"flex flex-row items-center mt-1 gap-1\">\n                  <span className=\"text-gray-600 text-xl\">level:</span>\n                  {/* <span\n                    className={`${\n                      thisEducation ? \"text-blue-600\" : \"text-gray-600\"\n                    } text-xl font-bold`}\n                  >\n                    {thisEducation\n                      ? thisEducation.education_category_title\n                      : \"-\"}\n                  </span> */}\n                  {/* {thisRoom && (\n                      <div className=\"flex flex-row items-center gap-1\">\n                        <MdKeyboardArrowRight />\n                        <span className={`text-blue-600 text-lg font-bold`}>\n                          {thisRoom.room_name}\n                        </span>\n                      </div>\n                    )} */}\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      {/* end header title */}\n      <div className=\"grid md:grid-cols-5 gap-2 bg-white shadow-md p-2\">\n        <div className={`md:col-span-5 rounded`}>\n          <div className=\"my-2 flex sm:flex-row flex-col justify-between\">\n            <div className=\"flex flex-col md:flex-row\">\n              <select\n                className=\"border-2 border-gray-700 bg-white p-2 rounded focus:outline-none\"\n                onChange={(e) => setFilterByPosition(e.target.value)}\n              >\n                <option value=\"all\">All Position</option>\n                {props.systemPositions && props.systemPositions.length > 0 ? (\n                  props.systemPositions.map((position, index) => (\n                    <option key={index + 1} value={position.position_id}>\n                      {position.position_title}\n                    </option>\n                  ))\n                ) : (\n                  <option value=\"\">No Position found</option>\n                )}\n              </select>\n            </div>\n          </div>\n          <Table\n            columns={[\n              { columnTitle: \"SCHOOL\", alignText: \"left\", padding: \"p-3\" },\n              { columnTitle: \"POSITION\", alignText: \"left\", padding: \"p-3\" },\n              { columnTitle: \"REQUEST\", alignText: \"left\", padding: \"p-3\" },\n              { columnTitle: \"APPROVED\", alignText: \"left\", padding: \"p-3\" },\n              { columnTitle: \"OCCUPIED\", alignText: \"left\", padding: \"p-3\" },\n              { columnTitle: \"VACCANTS\", alignText: \"left\", padding: \"p-3\" },\n              { columnTitle: \"STATUS\", alignText: \"left\", padding: \"p-3\" },\n              { columnTitle: \"\", alignText: \"left\", padding: \"p-3\" },\n            ]}\n            rows={tableData}\n            pagination={true}\n            search={true}\n            thColor=\"gray\"\n          />\n        </div>\n      </div>\n\n      {/* Upload Modal */}\n      {modalState && thisPost && props.systemPositions && (\n        <Modal\n          backDrop={true}\n          theme={Themes.default}\n          close={(): void => {\n            setThisPost(null);\n            setModalState(null);\n          }}\n          displayClose={true}\n          backDropClose={false}\n          title={\n            <div className=\"flex flex-row gap-4 items-center\">\n              {/* <IoBriefcase className=\"text-5xl text-gray-500\" /> */}\n              <div className=\"flex flex-col\">\n                <span className=\"font-bold text-2xl text-gray-500\">\n                  Responding to Requesting Teachers\n                </span>\n              </div>\n            </div>\n          }\n          widthSizeClass={ModalSize.medium}\n          padding={{ title: true, body: false, footer: false }}\n        >\n          <div className=\"px-4 mx-auto mb-4 mt-3\">\n            <form onSubmit={submitRequest}>\n              <div className=\"bg-white\">\n                <div className=\"text-base leading-6 space-y-4 text-gray-700 sm:text-lg sm:leading-7\">\n                  <div className=\"flex flex-col\">\n                    <label>School</label>\n                    <input\n                      type=\"text\"\n                      className=\"appearance-none rounded w-full py-1 px-4 border-2 border-gray-700 bg-white focus:outline-none focus:bg-gray-100\"\n                      value={\n                        getSchoolById(props.schools, thisPost.school_id)\n                          ?.school_name\n                      }\n                      placeholder=\"school name\"\n                      disabled\n                    />\n                  </div>\n                  <div className=\"flex flex-col\">\n                    <label>Position</label>\n                    <input\n                      type=\"text\"\n                      className=\"appearance-none rounded w-full py-1 px-4 border-2 border-gray-700 bg-white focus:outline-none focus:bg-gray-100\"\n                      value={\n                        getPositionById(\n                          props.systemPositions,\n                          thisPost.position_id\n                        ).position_title\n                      }\n                      placeholder=\"position title\"\n                      disabled\n                    />\n                  </div>\n                  <div className=\"flex flex-col\">\n                    <label>Needed posts (number)</label>\n                    <input\n                      type=\"number\"\n                      className=\"appearance-none rounded w-full py-1 px-4 border-2 border-gray-700 bg-white focus:outline-none focus:bg-gray-100\"\n                      value={thisPost.needed_posts}\n                      min={1}\n                      placeholder=\"1\"\n                      disabled\n                    />\n                  </div>\n                  <div className=\"flex flex-col\">\n                    <label>Occupation (number)</label>\n                    <input\n                      type=\"number\"\n                      className=\"appearance-none rounded w-full py-1 px-4 border-2 border-gray-700 bg-white focus:outline-none focus:bg-gray-100\"\n                      value={thisPost.occupied_posts}\n                      min={1}\n                      placeholder=\"1\"\n                      disabled\n                    />\n                  </div>\n                  <div className=\"flex flex-col\">\n                    <label>Explanation</label>\n                    <textarea\n                      className=\"appearance-none rounded w-full py-1 px-4 border-2 border-gray-700 bg-white focus:outline-none focus:bg-gray-100\"\n                      placeholder=\"Explanation\"\n                      value={thisPost.description}\n                      rows={2}\n                      disabled\n                    ></textarea>\n                  </div>\n                  <div className=\"flex flex-col\">\n                    <label>Requested date</label>\n                    <input\n                      type=\"text\"\n                      className=\"appearance-none rounded w-full py-1 px-4 border-2 border-gray-700 bg-white focus:outline-none focus:bg-gray-100\"\n                      value={DATE(thisPost.request_date.toString())}\n                      placeholder=\"YYYY/MM/DD\"\n                      disabled\n                    />\n                  </div>\n\n                  <div className=\"flex flex-col\">\n                    <label>Approved posts (number)</label>\n                    <input\n                      type=\"number\"\n                      className={`appearance-none rounded w-full py-1 px-4 border-2 bg-white focus:outline-none focus:bg-gray-100 ${\n                        formError !== null &&\n                        formError.element === \"approved_posts\"\n                          ? \"border-red-500\"\n                          : \"border-gray-700\"\n                      }`}\n                      value={approvedPosts}\n                      onChange={(e) => {\n                        setApprovedPosts(Number(e.target.value));\n                      }}\n                      min={0}\n                      max={thisPost.needed_posts}\n                      placeholder=\"1\"\n                      disabled={loadingRequest}\n                    />\n                    {formError !== null &&\n                      formError.element === \"approved_posts\" && (\n                        <span className=\"text-red-600 font-bold text-xs\">\n                          {formError.msg}\n                        </span>\n                      )}\n                  </div>\n                </div>\n                <div className=\"pt-4 flex justify-between\">\n                  <button\n                    className=\"btn bg-gray-400 text-white hover:bg-gray-600\"\n                    onClick={() => {\n                      setThisPost(null);\n                      setApprovedPosts(0);\n                      setModalState(null);\n                    }}\n                  >\n                    Exit\n                  </button>\n                  <button\n                    className=\"btn bg-primary text-white hover:bg-blue-600\"\n                    disabled={loadingRequest}\n                  >\n                    {loadingRequest ? \"Loading...\" : \"Request\"}\n                  </button>\n                </div>\n              </div>\n            </form>\n          </div>\n        </Modal>\n      )}\n      {/* End of Upload Modal */}\n\n      {viewPost && modalState === null && thisPost && props.systemPositions && (\n        <Modal\n          backDrop={true}\n          theme={Themes.default}\n          close={(): void => {\n            setThisPost(null);\n            setViewPost(false);\n          }}\n          displayClose={true}\n          backDropClose={false}\n          title={\n            <div className=\"flex flex-row gap-4 items-center\">\n              {/* <IoBriefcase className=\"text-5xl text-gray-500\" /> */}\n              <div className=\"flex flex-col\">\n                <span className=\"font-bold text-2xl text-gray-500\">\n                  Viewing Post Request\n                  {/* on{\" \"}\n                  {\n                    getPositionById(props.systemPositions, thisPost.position_id)\n                      .position_title\n                  } */}\n                </span>\n              </div>\n            </div>\n          }\n          widthSizeClass={ModalSize.large}\n          padding={{ title: true, body: false, footer: false }}\n        >\n          <section className=\"px-4 mx-auto mb-4 mt-3 flex items-start\">\n            <section className=\"w-full\">\n              <div className=\"flex flex-row item-center justify-left gap-3 mb-2\">\n                <span className=\"text-gray-500 italic\">Position: </span>\n                <span className=\"font-bold\">\n                  {\n                    getPositionById(props.systemPositions, thisPost.position_id)\n                      .position_title\n                  }\n                </span>\n                <button className=\"rounded-full border-2 px-3 border-blue-500 hover:bg-blue-50\">\n                  more\n                </button>\n              </div>\n              <div className=\"flex flex-row item-center justify-left gap-3 mb-2\">\n                <span className=\"text-gray-500 italic\">Requested posts: </span>\n                <span className=\"font-bold text-xl\">\n                  {thisPost.needed_posts}\n                </span>\n              </div>\n              <div className=\"flex flex-row item-center justify-left gap-3 mb-2\">\n                <span className=\"text-gray-500 italic\">Confirmed posts: </span>\n                <span className=\"font-bold text-xl\">\n                  {thisPost.requested_post_status !==\n                  PostRequestStatusInterface.INITIATED ? (\n                    <div className=\"flex items-center gap-1\">\n                      {thisPost.confirmed_posts}\n                      <BiReply className=\"bg-yellow-600 w-5 h-5 text-white cursor-pointer\" />\n                    </div>\n                  ) : (\n                    \"-\"\n                  )}\n                </span>\n              </div>\n              <div className=\"flex flex-row item-center justify-left gap-3 mb-2\">\n                <span className=\"text-gray-500 italic\">Received posts: </span>\n                <span className=\"font-bold text-xl\">\n                  {thisPost.requested_post_status ===\n                  PostRequestStatusInterface.RECEIVED\n                    ? thisPost.received_posts\n                    : \"-\"}\n                </span>\n              </div>\n              <div className=\"flex flex-row item-center justify-left gap-3 mb-2\">\n                <span className=\"text-gray-500 italic\">Number of female: </span>\n                <span className=\"font-bold text-xl\">\n                  {thisPost.female_number}\n                </span>\n              </div>\n              <div className=\"flex flex-row item-center justify-left gap-3 mb-2\">\n                <span className=\"text-gray-500 italic\">Number of male: </span>\n                <span className=\"font-bold text-xl\">\n                  {thisPost.male_number}\n                </span>\n              </div>\n              <div className=\"flex flex-row item-center justify-left gap-3 mb-2\">\n                <span className=\"text-gray-500 italic\">Request reason: </span>\n                <span className=\"font-bold text-xl\">\n                  {thisPost.description}\n                </span>\n              </div>\n              <div className=\"flex flex-row item-center justify-left gap-3 mb-2\">\n                <span className=\"text-gray-500 italic\">Status: </span>\n                <span\n                  className={`px-2 py-1 mx-1 font-semibold rounded ${\n                    thisPost.requested_post_status ===\n                    PostRequestStatusInterface.INITIATED\n                      ? \"text-gray-700 bg-gray-100 dark:bg-gray-700 dark:text-gray-100\"\n                      : thisPost.requested_post_status ===\n                        PostRequestStatusInterface.CONFIRMED\n                      ? \"text-blue-700 bg-blue-100 dark:bg-blue-700 dark:text-blue-100\"\n                      : \"text-green-800 bg-green-100 dark:bg-green-800 dark:text-green-100\"\n                  }`}\n                >\n                  {thisPost.requested_post_status ===\n                  PostRequestStatusInterface.INITIATED\n                    ? \"Pending\"\n                    : capitalizeFirstLetter(thisPost.requested_post_status)}\n                </span>\n              </div>\n            </section>\n            <div className=\"mb-3 flex items-center justify-end gap-2\">\n              <button\n                className=\"font-bold py-1 px-4 rounded bg-gray-500 text-white hover:bg-gray-700\"\n                onClick={() => {\n                  setModalState(\"UPDATE\");\n                }}\n                disabled={\n                  thisPost.requested_post_status !==\n                  PostRequestStatusInterface.INITIATED\n                }\n              >\n                Edit\n              </button>\n            </div>\n          </section>\n        </Modal>\n      )}\n    </React.Fragment>\n  );\n};\n\nconst mapStateToProps = ({\n  auth,\n  schools,\n  system_settings,\n}: StoreState): {\n  auth: Auth;\n  schools: SchoolsInterface[];\n  districtPosts: PostSchoolInterface[];\n  systemPositions: PositionAPI[] | null;\n} => {\n  return {\n    auth: auth,\n    schools: schools.schools,\n    districtPosts: schools.districtPosts,\n    systemPositions: system_settings.systemPositions,\n  };\n};\n\nexport const District = connect(mapStateToProps, {\n  getPositions,\n  getSchools,\n  fetchDistrictPosts,\n  createSchoolPost,\n  updateSchoolPost,\n  PushPopupAlert,\n})(_District);\n"],"sourceRoot":""}
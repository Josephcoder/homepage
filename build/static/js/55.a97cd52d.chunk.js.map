{"version":3,"sources":["containers/Claimings/Admin/ClaimReport.tsx"],"names":["_ClaimReport","props","setLoading","status","setState","loading","GetClaims","level","session_id","a","axios","post","API","CLAIMING","period_id","res","data","console","log","GetSummaryFilter","response","item","test","find","itm","position_title","undefined","filter","push","total","pending","ClaimStatus","PENDING","validated","EVALUATED","GetSummary","res_data","type_key","state","selected_claim_type","title","claims","selected_level","claim_status","sort","b","GetSummaryCounts","componentDidMount","schoolLevels","selectedEducationCategory","education_categories","education_institute_id","auth","education_institution_id","setSelectedEducationCategory","session_plan","_id","error","success","PlansTypeKeys","APPLICATION","selected_institution","this","className","capitalizeFirstLetter","toString","onChange","e","selected_type","target","value","DOCUMENT_VALIDATION","EXAMINATION","parseInt","displayNumbers","length","colSpan","map","i","Component","ClaimReport","connect","system","positions","loadAllPositionsByInstitute"],"mappings":"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","file":"static/js/55.a97cd52d.chunk.js","sourcesContent":["import axios from \"axios\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport {\n  Auth,\n  positionsStoreInterface,\n  schoolLevelsStoreInterface,\n  System,\n  setSelectedEducationCategory,\n  loadAllPositionsByInstitute,\n} from \"../../../actions\";\nimport Loading from \"../../../components/Loading/Loading\";\nimport {\n  ClaimStatus,\n  education_category,\n  PlansTypeKeys,\n} from \"../../../interfaces\";\nimport { StoreState } from \"../../../reducers\";\nimport { capitalizeFirstLetter } from \"../../../shared/dataTest\";\nimport { API } from \"../../../utils/api\";\nimport { displayNumbers } from \"../../../utils/functions\";\n\ninterface GetClaimsReportInterface {\n  _id: string;\n  previous: {\n    evaluater: {\n      email: string;\n      name: string;\n    };\n    reason: string;\n    status: string;\n  };\n  title: string;\n  last_claim_status: ClaimStatus;\n  claiming_on_id: string;\n  type_key: PlansTypeKeys;\n  default_claim_resaons: string;\n  user: string;\n  period_id: string;\n  claim_level: number;\n  claims: [\n    {\n      claim_status: ClaimStatus;\n      _id: string;\n      level: number;\n      reason: string;\n      date_created: string;\n      createdAt: string;\n      updatedAt: string;\n    }\n  ];\n  createdAt: string;\n  updatedAt: string;\n  __v: 0;\n}\n\ninterface PositionSummaryInterface {\n  position_title: string;\n  total: number;\n  status: ClaimStatus;\n}\n\ninterface ClaimReportProps {\n  auth: Auth;\n  system: System;\n  positions: positionsStoreInterface;\n  schoolLevels: schoolLevelsStoreInterface;\n  setSelectedEducationCategory: (data: education_category) => void;\n  loadAllPositionsByInstitute: (\n    institution_id: string,\n    callback: (loading: boolean) => void\n  ) => void;\n}\ninterface ClaimReportState {\n  error: string;\n  success: string;\n  loading: boolean;\n  data: GetClaimsReportInterface[] | null;\n  selected_level: number;\n  selected_claim_type: PlansTypeKeys;\n}\n\nclass _ClaimReport extends Component<ClaimReportProps, ClaimReportState> {\n  constructor(props: ClaimReportProps) {\n    super(props);\n\n    this.state = {\n      loading: true,\n      error: \"\",\n      success: \"\",\n      data: null,\n      selected_level: 1,\n      selected_claim_type: PlansTypeKeys.APPLICATION,\n    };\n  }\n  setLoading = (status: boolean) => this.setState({ loading: status });\n  GetClaims = async (level: number, session_id: string) => {\n    this.setLoading(true);\n    try {\n      const res = await axios.post<GetClaimsReportInterface[]>(\n        `${API.CLAIMING}/user/level/${level}`,\n        {\n          period_id: session_id,\n        }\n      );\n      if (res.data) {\n        this.setState({\n          data: res.data,\n        });\n      }\n      console.log(\"Response: \", res.data);\n      this.setLoading(false);\n    } catch (error: any) {\n      console.log(\"Error: \", { ...error });\n      this.setLoading(false);\n    }\n  };\n\n  GetSummaryFilter = (data: PositionSummaryInterface[]) => {\n    let response: {\n      position_title: string;\n      total: number;\n      pending: number;\n      validated: number;\n    }[] = [];\n    for (const item of data) {\n      const test = response.find(\n        (itm) => itm.position_title === item.position_title\n      );\n      if (test !== undefined) {\n        response = response.filter(\n          (itm) => itm.position_title !== test.position_title\n        );\n        response.push({\n          position_title: test.position_title,\n          total: test.total + 1,\n          pending:\n            item.status === ClaimStatus.PENDING\n              ? test.pending + 1\n              : test.pending,\n          validated:\n            item.status === ClaimStatus.EVALUATED\n              ? test.validated + 1\n              : test.validated,\n        });\n      } else {\n        response.push({\n          position_title: item.position_title,\n          total: item.total,\n          pending: item.status === ClaimStatus.PENDING ? 1 : 0,\n          validated: item.status === ClaimStatus.EVALUATED ? 1 : 0,\n        });\n      }\n    }\n    return response;\n  };\n\n  GetSummary = (\n    data: GetClaimsReportInterface[]\n  ): {\n    position_title: string;\n    total: number;\n    pending: number;\n    validated: number;\n  }[] => {\n    let response: PositionSummaryInterface[] = [];\n    const res_data = data.filter(\n      (itm) => itm.type_key === this.state.selected_claim_type\n    );\n    for (const item of res_data) {\n      response.push({\n        position_title: item.title,\n        total: 1,\n        status: item.claims.filter(\n          (itm) => itm.level === this.state.selected_level\n        )[0].claim_status,\n      });\n    }\n    return this.GetSummaryFilter(response).sort((a, b) =>\n      a.pending < b.pending ? 1 : b.pending < a.pending ? -1 : 0\n    );\n  };\n\n  GetSummaryCounts = (\n    data: {\n      position_title: string;\n      total: number;\n      pending: number;\n      validated: number;\n    }[]\n  ): {\n    pending: number;\n    validated: number;\n    total: number;\n  } => {\n    let res: {\n      pending: number;\n      validated: number;\n      total: number;\n    } = {\n      pending: 0,\n      validated: 0,\n      total: 0,\n    };\n    let pending: number = 0;\n    let validated: number = 0;\n    let total: number = 0;\n    for (const item of data) {\n      pending = pending + item.pending;\n      validated = validated + item.validated;\n      total = total + item.total;\n    }\n    res = {\n      pending: pending,\n      validated: validated,\n      total: total,\n    };\n    return res;\n  };\n\n  componentDidMount = () => {\n    if (this.props.schoolLevels.selectedEducationCategory === null) {\n      if (this.props.schoolLevels.education_categories !== null) {\n        const test = this.props.schoolLevels.education_categories.find(\n          (itm) =>\n            itm.education_institute_id ===\n            this.props.auth.education_institution_id\n        );\n        if (test !== undefined) {\n          this.props.setSelectedEducationCategory(test);\n          if (test.session_plan !== null) {\n            this.GetClaims(this.state.selected_level, test.session_plan._id);\n          }\n        }\n      }\n    } else {\n      if (\n        this.props.schoolLevels.selectedEducationCategory.session_plan !== null\n      ) {\n        this.GetClaims(\n          this.state.selected_level,\n          this.props.schoolLevels.selectedEducationCategory.session_plan._id\n        );\n      }\n    }\n  };\n  render() {\n    const selected_institution =\n      this.props.schoolLevels.education_categories?.find(\n        (itm) =>\n          itm.education_institute_id ===\n          this.props.auth.education_institution_id\n      );\n    if (selected_institution === undefined) {\n      return (\n        <div>\n          <div className=\"rounded-xl border-2 border-gray-600 flex flex-col items-center justify-center p-7 text-center w-full mt-5 bg-white\">\n            <span className=\"font-extrabold text-3xl text-gray-600\">\n              Your institute is not yet defined\n            </span>\n            <span>\n              If you have an institute assigned to you, please refresh your page\n              or wait a moment... your page...\n              {/* You are not allowed to view shortlisting report because you have\n              no access for this report. please contact your administrator */}\n            </span>\n          </div>\n        </div>\n      );\n    }\n    if (\n      this.state.loading === true ||\n      this.props.schoolLevels.selectedEducationCategory === null ||\n      this.state.data === null\n    ) {\n      return (\n        <div className=\"bg-white rounded p-5 mt-5\">\n          <Loading />\n          <div className=\"-mt-5 ml-5\">Loading report, please wait...</div>\n        </div>\n      );\n    }\n    if (this.state.error !== \"\") {\n      <div onClick={() => this.setState({ error: \"\" })}>\n        <div className=\"cursor-pointer rounded-xl border-2 border-yellow-600 flex flex-col items-center justify-center p-7 text-center w-full mt-5 bg-yellow-100\">\n          <span className=\"font-extrabold text-3xl text-yellow-800\">\n            Error occurred!\n          </span>\n          <span>{this.state.error}</span>\n        </div>\n      </div>;\n    }\n    return (\n      <div>\n        <div className=\"mt-4 bg-white rounded\">\n          <div className=\"p-4 flex flex-row items-center gap-3 justify-between\">\n            <div>\n              <div className=\"text-3xl font-extrabold\">\n                Claiming report (\n                <span className=\"text-blue-600 lowercase\">\n                  {capitalizeFirstLetter(\n                    this.state.selected_claim_type.toString()\n                  )}\n                </span>\n                )\n              </div>\n              <div className=\"flex flex-row items-center gap-2 ml-2\">\n                <div className=\"flex flex-col\">\n                  <span className=\"text-sm font-bold\">Choose claim type</span>\n                  <select\n                    onChange={(e) => {\n                      const selected_type = e.target.value as PlansTypeKeys;\n                      this.setState({\n                        selected_claim_type: selected_type,\n                      });\n                    }}\n                    value={this.state.selected_claim_type}\n                    className=\"px-3 py-2 rounded border border-gray-500\"\n                  >\n                    <option value={PlansTypeKeys.APPLICATION}>\n                      Applications\n                    </option>\n                    <option value={PlansTypeKeys.DOCUMENT_VALIDATION}>\n                      Document validation\n                    </option>\n                    <option value={PlansTypeKeys.EXAMINATION}>\n                      Examinations\n                    </option>\n                  </select>\n                </div>\n                <div className=\"flex flex-col\">\n                  <span className=\"text-sm font-bold\">Choose claim level</span>\n                  <select\n                    value={this.state.selected_level}\n                    onChange={(e) => {\n                      if (selected_institution.session_plan !== null) {\n                        const selected_level = parseInt(e.target.value);\n                        this.setState({\n                          selected_level: selected_level,\n                        });\n                        this.setLoading(true);\n                        this.GetClaims(\n                          selected_level,\n                          selected_institution.session_plan._id\n                        );\n                      }\n                    }}\n                    className=\"px-3 py-2 rounded border border-gray-500\"\n                  >\n                    <option value={1}>Level 1</option>\n                    <option value={2}>Public Service Commission Level</option>\n                  </select>\n                </div>\n              </div>\n            </div>\n            <div className=\"flex flex-row items-center gap-3\">\n              <div className=\"flex flex-col rounded bg-blue-100 p-2 text-right\">\n                <span className=\"text-3xl font-extrabold\">\n                  {displayNumbers(\n                    this.GetSummaryCounts(this.GetSummary(this.state.data))\n                      .total\n                  )}\n                </span>\n                <span className=\"font-normal text-sm text-blue-900\">\n                  Total claims\n                </span>\n              </div>\n              <div className=\"flex flex-col rounded bg-blue-100 p-2 text-right\">\n                <span className=\"text-3xl font-extrabold\">\n                  {displayNumbers(\n                    this.GetSummaryCounts(this.GetSummary(this.state.data))\n                      .pending\n                  )}\n                </span>\n                <span className=\"font-normal text-sm text-blue-900\">\n                  Waiting claims\n                </span>\n              </div>\n              <div className=\"flex flex-col rounded bg-green-100 p-2 text-right\">\n                <span className=\"text-3xl font-extrabold text-green-900\">\n                  {displayNumbers(\n                    this.GetSummaryCounts(this.GetSummary(this.state.data))\n                      .validated\n                  )}\n                </span>\n                <span className=\"font-normal text-sm text-green-900\">\n                  Validated claims\n                </span>\n              </div>\n            </div>\n          </div>\n          <div className=\"border-t border-gray-400 p-4\">\n            <table className=\"w-full\">\n              <thead className=\"bg-blue-100 \">\n                <tr className=\"\">\n                  <th className=\"px-3 py-1 text-center\">#</th>\n                  <th className=\"px-3 py-1 text-left\">Position</th>\n                  <th className=\"px-3 py-1 text-center\">Total claims</th>\n                  <th className=\"px-3 py-1 text-center\">Waiting claims</th>\n                  <th className=\"px-3 py-1 text-center\">Validated claims</th>\n                </tr>\n              </thead>\n              <tbody>\n                {this.GetSummary(this.state.data).length === 0 ? (\n                  <tr>\n                    <td\n                      colSpan={5}\n                      className=\"text-center p-3 text-3xl font-light bg-gray-100 border border-gray-500 rounded\"\n                    >\n                      No result found!\n                    </td>\n                  </tr>\n                ) : (\n                  this.GetSummary(this.state.data).map((item, i) => (\n                    <tr\n                      key={i + 1}\n                      className={`${i % 2 !== 0 ? \"bg-gray-100\" : \"bg-white\"} ${\n                        item.total === item.validated\n                          ? \"text-green-900 font-light\"\n                          : item.validated === 0\n                          ? \"text-yellow-900 font-bold\"\n                          : \"text-black font-light\"\n                      }`}\n                    >\n                      <td className=\"px-3 py-1 text-center\">{i + 1}</td>\n                      <td className=\"px-3 py-1 text-left\">\n                        {item.position_title}\n                      </td>\n                      <td className=\"px-3 py-1 text-center\">\n                        {displayNumbers(item.total)}\n                      </td>\n                      <td className=\"px-3 py-1 text-center\">\n                        {displayNumbers(item.pending)}\n                      </td>\n                      <td className=\"px-3 py-1 text-center\">\n                        {displayNumbers(item.validated)}\n                      </td>\n                    </tr>\n                  ))\n                )}\n              </tbody>\n            </table>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = ({\n  auth,\n  system,\n  positions,\n  schoolLevels,\n}: StoreState): {\n  auth: Auth;\n  system: System;\n  positions: positionsStoreInterface;\n  schoolLevels: schoolLevelsStoreInterface;\n} => {\n  return {\n    auth: auth,\n    system: system,\n    positions: positions,\n    schoolLevels,\n  };\n};\n\nexport const ClaimReport = connect(mapStateToProps, {\n  setSelectedEducationCategory,\n  loadAllPositionsByInstitute,\n})(_ClaimReport);\n"],"sourceRoot":""}
{"version":3,"sources":["containers/ApplicationsDashboard/ApplicationHistory/ApplicationHistory.tsx","containers/ApplicationsDashboard/ExamDetails/ExamDetails.tsx","containers/ApplicationsDashboard/ExamStatus/PreparedExams.tsx","containers/ApplicationsDashboard/ExamStatus/ActiveExams.tsx","containers/ApplicationsDashboard/ExamStatus/ExamsDone.tsx","containers/ApplicationsDashboard/Exams.tsx","components/CandidatePlacementCheck/CandidatePlacementCheck.tsx","containers/ApplicationsDashboard/ApplicationsDashboard.tsx","utils/question_bank.ts","components/Table/Table.tsx","actions/session.ts","actions/document.ts","components/Navigation/SideNavigation.tsx","containers/Claimings/Candidate/FormPlacementList.tsx","containers/Claimings/Candidate/ClaimForm.tsx","containers/Positions/ViewRequirements.tsx","containers/Claimings/Candidate/FormExamList.tsx","containers/Claimings/Candidate/ApplicationFormView.tsx","components/AnswersDetails/AnswersDetails.tsx","containers/Claimings/Candidate/ExaminationFormView.tsx","components/AnswersDetails/CandidateAnswersDetails.tsx","containers/DoExam/DoExamTitle/FindAnswer.tsx","containers/Claimings/Candidate/ChooseReason.tsx","containers/Claimings/Candidate/DocFormView.tsx","containers/Claimings/Candidate/FormApplicationList.tsx","containers/Claimings/Candidate/FormDocumentList.tsx","containers/SessionSettings/ApplicationSession/SessionDetails.tsx","containers/CandidateExams/CandidateExams.tsx","containers/DoExam/DoExamTitle/FindAnswerHybrid.tsx","components/ClaimForm/ClaimFormComponent.tsx"],"names":["ApplicationHistory","props","className","undefined","applicationHistory","length","map","item","i","DATE","date","comment","ApplicationStatesDescription","find","itm","key","application_status","caption","ExamDetails","setLoading","status","setState","loading","componentDidMount","locationsData","Locations_list","loadAllLocationsData","loadApplicationPeriods","state","this","candidateExam","selected_exam_id","to","examDetails","locationDetails","Loading","type","LoadingType","dark","onClick","setSelectedCandidateExam","id","exam_date","start_time","duration","discription","dangerouslySetInnerHTML","__html","termes","center_id","province_name","district_name","center_name","room_number","proctoring_type","Component","PreparedExams","NotPreparedExamsFilter","selectedPosition","courses","filter","user_exams_done","ex","course","course_id","findExam","PreparedExamsFilter","AllPendingExams","totalPending","selectedExams","loadingExams","course_name","validateExamDate","end_time","ExamTimeStatus","Online","Expired","loadingExamsDone","Waiting","changeLocation","user_status","UserExamStatus","Editing","selectedApplicationDetails","ApplicationStates","Shortlisted","setSelectedCourse","appointmentDetailsModal","periods","selected_period","is_active","positions","selected_position","position_id","setSelectedPosition","Initiated","total_marks","toFixed","ActiveExams","ActiveExamsFilter","exam_start_time","exam_end_time","check","Paused","Done","Removed","x","selectedCourse","centersModal","setMaxExamModal","ExamsDone","viewMarksDetailsFn","Exam","examTest","user_exams_temp","period","courseSelected","viewMarksDetails","rules","ExamsDoneFilter","_PostExams","renderExam","user_id","exam","examStatus","loadExam","redirect","setClaim","claim","closeModal","updateLocationFunction","exams","selected_application","updateLocation","setLoadingExams","setLoadingExamsDone","numberOfIncomplete","count","findLocation","course_code","location","exam_id","district_id","courseId","current_temp","testDone","findCourse","pendingCourses","InitializationFn","loadExamsDone","session_plan_id","auth","user","InitializeExamDetails","room_id","loadCourses","doExam","exam_answers","claiming","myClaims","getMyClaims","msg","data","alert","displayResults","selectedLocation","applicationHistoryState","selectedExamDetails","CandidateAnswersDetails","showAnswers","applicationPeriods","setSelectedLocationData","ChooseExamCenter","positionCourses","addLocation","parseInt","findTotalMarks","Rejected","CheckIfExamDone","isClaimAllowed","deleteApplication","ClaimFormComponent","setFormState","claim_type","PlansTypeKeys","APPLICATION","file_id","PostExams","connect","prepareExam","loadExamsList","setSelectedPeriod","CandidatePlacementCheck","_ApplicationsDashboard","filteredApplications","applications","Status","searchPeriod","appl","application_session","closeApplicationDetails","displayDetailsModal","setDisplayDetailsModal","applicationStatuses","application","output","push","title","maxExamModal","LoadApplications","a","loadingErr","number_of_incomplete","response","candidateApplications","candidate_applications","axios","get","API","res","AddUserApplication","console","log","position","InitializeExamsDone","Incomplete","application_id","incrementIncomplete","LoadCandidateApplications","applicationError","post","noRoomsApplication","PushPopupAlert","description","theme","PopupAlertTheme","success","errors","field","newArr","removeLocation","message","danger","changeLoadingState","window","confirm","delete","RemoveUserApplication","warning","setShowFilterStatus","showPeriodFilter","loadAllPositions","apply","currentStep","ApplicationStepsTypes","Step3","initiateApplication","Step1","doTestStatus","applicationDetails","selectedApplicationStatus","viewSchools","FC_Access","UserAccessList","MY_APPLICATION","view","position_title","session_plan_name","Pass","checkApplication","SelectUserApplication","Exams","changeLocationError","application_history","SideNavigation","positions_list","active","LoadingV2","NoResult","NoResultThemes","Dark","value","component","createdAt","Modal","backDrop","Themes","default","close","backDropClose","widthSizeClass","ModalSize","extraLarge","displayClose","padding","body","ApplicationPeriods","ApplicationsDashboard","system","today","moment","tz","TimeZone","getQuestionType","question_types","type_id","check_type","questionTypeElements","element","results","sum","test","validateCalculatedFormula","formula","characters","el","nextCharacter","convertFromStringToDate","responseDate","dateComponents","split","datePieces","timePieces","Date","toDay","toString","examDate","startTime","getDate","getMonth","getFullYear","endTime","getTime","proctoringDefaultRules","rule","Table","table","tr","tableId","result","charactersLength","charAt","Math","floor","random","FC_makeID","useState","totalItems","setTotalItems","totalPages","setTotalPages","currentPage","setCurrentPage","pages","setPages","pageSize","setPageSize","startIndex","setStartIndex","endIndex","setEndIndex","useEffect","pagination","tablePagination","document","getElementById","getElementsByTagName","ceil","min","_pages","Array","from","keys","style","display","tableSize","search","searchBG","placeholder","onChange","e","filterType","td","rows","cols","toLowerCase","columns","textContent","innerText","indexOf","filterTable","target","disabled","Number","tableClass","rounded","hideColumns","thColor","column","index","alignText","isSortAllowed","switching","y","shouldSwitch","colIndex","dir","switchcount","innerHTML","parentNode","insertBefore","sortThisColumn","columnTitle","aria-label","page","pageIndex","GetPlansTypes","callback","dispatch","setAxiosToken","CLAIMING","GET_PLANS_TYPES","plan_types","ActionTypes","payload","error","errorToText","setSelectedPlanType","thisType","SELECT_PLAN_TYPE","getActiveSessionPlan","GET_ACTIVE_SESSION_PLANS","session_plan","GetAllSessionPlans","GET_ALL_SESSION_PLANS","session_data","createSessionPlan","CREATE_SESSION_PLAN","updateSessionPlan","UPDATE_SESSION_PLAN","sessionActivation","SESSION_ACTIVATION","deleteSessionPlan","DELETE_SESSION_PLAN","createAcademicSession","CREATE_ACADEMIC_SESSION","GetAllAcademicSession","PLACEMENT","GET_ALL_ACADEMIC_SESSION","updateAcademicSession","UPDATE_ACADEMIC_SESSION","academicSessionActivation","ACADEMIC_SESSION_ACTIVATION","deleteAcademicSession","DELETE_ACADEMIC_SESSION","getActiveAcademicSession","GET_ACTIVE_ACADEMIC_SESSION","getDocumentCategory","AUTH","docCategory","GET_DOCUMENT_CATEGORY","createDocumentCategory","CREATE_DOCUMENT_CATEGORY","updateDocumentCategory","UPDATE_DOCUMENT_CATEGORY","deleteDocumentCategory","DELETE_DOCUMENT_CATEGORY","getDocumentSubCategory","docSubCategory","GET_DOCUMENT_SUB_CATEGORY","doc_SUB_category_error","createDocumentSubCategory","CREATE_DOCUMENT_SUB_CATEGORY","updateDocumentSubCategory","UPDATE_DOCUMENT_SUB_CATEGORY","deleteDocumentSubCategory","DELETE_DOCUMENT_SUB_CATEGORY","getDocumentFields","docFields","GET_DOCUMENT_FIELDS","createDocumentFields","CREATE_DOCUMENT_FIELDS","updateDocumentFields","reducer","UPDATE_DOCUMENT_FIELDS","deleteDocumentFields","DELETE_DOCUMENT_FIELDS","distinctCandidates","candidatesData","user_ids","candidate","forEach","includes","getCandidatesInInstitute","educatin_type_id","session_id","GET_CANDIDATE_IN_INSTITUTE","verifyDocument","VERIFY_DOCUMENT","_SideNavigation","PageHasSubNav","componentWillUnmount","isAuthenticated","navActive","navigation","children","React","NavToogle","MainItem","icon","MdBrightness1","IconDefined","searchInput","setSearchInput","myPlacement","activeSession","placed","_id","setChooseClaimFile","setViewThisFile","setClaimFileId","school","school_name","ClaimGetDocTitle","documentCategories","doc","DocCategory","DocSubCategory","DocField","DocTitle","sub_category_id","documentSubCategory","c","user_detail_subcategory_id","category_id","documentCategory","user_detail_category_id","category_subcategory_data","category_subcategory_Data_id","documentFields","category","sub_category","main","allClaim","period_id","claimOnId","claiming_on_id","ClaimForm","setLoadingForm","loadingForm","setFormError","formError","setAlertError","alertError","claimFileId","viewThisFile","chooseClaimFile","setChooseClaimReason","chooseClaimReason","setClaimReason","claimReason","setClaimComment","claimComment","isClaimTypeOpen","thisSession","plans","type_key","isPlanActive","DOCUMENT_VALIDATION","PLACEMENT_TRANSFER","displayClaimType","claimType","EXAMINATION","MARKS_PUBLICATION","loadExamAnswers","activeSessionPlan","getMyAnswers","thisClaimType","thisClaimTypeId","formType","documentReducer","claimReasons","getClaimReasons","getDocumentById","documents","doc_id","getApplicationById","getExamById","answer_sheet_id","getValidation","thisId","old_reason","old_status","old_evaluated_by","candidateDocuments","validated_by","validation_status","override_by","cleanToClose","loadUserById","isEmptyOrSpaces","getClaimTitle","myAnswer","getCourseIdBySheetId","getCourseById","getClaimInstitute","education_institute_id","handleSubmit","preventDefault","toLocaleLowerCase","old_evaluator_email","old_evaluator_name","evaluator_email","evaluator_name","institute_id","email","user_info","fname","lname","default_claim_resaons","reason","createClaim","selectClaimType","thisClaim","getMyRejectedApplications","getMyRejectedDocuments","getMyPlacement","generateChooseFileTitle","formState","medium","footer","onSubmit","Object","values","capitalizeFirstLetter","replace","FormDocumentList","FormApplicationList","FormExamList","candidateAnswers","ChooseReason","allClaimReasons","resize","DocFormView","thisDoc","ApplicationFormView","thisApplication","ExaminationFormView","thisAnswerSheet","GetClaimingTypes","ViewRequirements","requirements","colSpan","subcategory_title","field_id","field_title","subcategory_required","required","getFailedExam","allData","allCourses","sheet_id","FC_ApplicationPositionDistinctCategory","thisPosition","PositionsTemp","DistinctCategoriesTemp","DistinctCategoriesIds","DistinctSubCategoriesTemp","DistinctSubCategoriesIds","req","thisRequirements","thisCategory","thisSubCategory","thisField","position_requirement","category_subcategory_data_id","category_title","subcategory_id","school_level_id","school_level_name","education_category_title","_AnswersDetails","setLoadingStatus","loadingStatus","questionTypes","loadQuestionTypes","allAnswers","exam_paper","requestUserAnswers","userAnswersTotalMarks","user_answers","total","user_marks","user_exam_details","questions","question_id","question","language","selectedLanguage","is_deleted","chapters","customNumber","marks","answers","answersList","showCorrectAnswer","exam_total_marks","AnswersDetails","FC_GetProfileDetails","claimShowAnswer","answer","right_click_enabled","copy_enabled","paste_enabled","stop_candidate_when_comeback","allow_to_leave_browser","tomorrow","setDate","compareWithToday","resultDiv","question_answers","subQuestionType","findQuestionType","questionTypeElementsType","MultipleChoice","userAnswer","toMultipleChoice","SingleMultiple","userAnswerSingle","CalculatedMultipleChoice","userAnswer1","toCalculatedMultipleChoice","Matching","userAnswerMatch","toMatching","TrueFalse","userAnswerTureFalse","toTrueFalse","Numeric","userAnswerNumerical","toNumerical","SimpleCalculate","userAnswerSimpleCalculate","toSimpleCalculated","ShortAnswer","userAnswerShortAnswer","toShortAnswer","Essay","userAnswerEssay","toEssay","Embedded","Hybrid","FindAnswer","UserAnswersSel","SubQ","sub_question","findQType","typeShort","reference","user_answer","testQ","src","AUTH_FILES","files","alt","getRejectedApplicants","applicationData","objList","text","product","flag","prop","DocumentTitleData","documentData","documentTemp","company","end_year","names","phone_number","school_id","start_year","year","doc_title","getRejectedDocuments","rejected","isActivationAllowed","thisPlans","end_date","getPlanTypeByKey","allPlanTypes","viewThisSession","thisPlan","planEndDate","planStartDate","start_date","type_status","SessionPlanTypeStatus","CLOSED","SessionDetails","handlePlanActivation","session","newState","newData","updatedAt","prototype","hasOwnProperty","call","OPEN","type_title","allowed_claim_level","history","loadingRequest","put","setViewThisSession","info","tooday","myDate","todayConverted","ChangeLocationComponent","setDisplay","_CandidateExams","setloadingExamsDone","loadCandidateExams","QBank","candidateExams","loadUserProfileDetails","loadUserApplications","successMessage","sex","removeDuplicatesExams","temp","removeDuplicatesNotPreparedExams","setTimeOut","temps","activeExams","selectApplication","selectedExam","preparedExam","school_levels","found","duration_min","getMinutesFromTwoDates","timeout","returnString","labels","days","notPreparedExam","CandidateExams","changed","QuestionForHybrid","Calculated","FindAnswerHybrid","submitQuestionAnswer","maxHeight","wholeQuestion","stri","String","fromCharCode","charCodeAt","EmbeddedQuestion","setThisClaim","isDocumentIdValid","claimFound","isApplicationIdValid","app_id","app","isExamIdValid","_isApplicationIdValid","_isDocumentIdValid","_isExamIdValid","claims","evaluation_comment","decision_taken_status"],"mappings":"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","file":"static/js/29.ef70cbd0.chunk.js","sourcesContent":["import React from 'react'\nimport { applicationHistory, ApplicationStatesDescription } from '../../../interfaces/application'\nimport { DATE } from '../../../utils/functions'\n\ninterface ApplicationHistoryProps {\n  applicationHistory: applicationHistory[];\n}\n\nconst ApplicationHistory = (props: ApplicationHistoryProps) => {\n  return (\n    <div className=\"flex flex-col justify-between items-start gap-1 bg-white px-3 py-2\">\n      {/* <span className=\"text-sm text-blue-800 font-bold\">Application status history</span> */}\n      <hr className=\"bg-blue-600\" />\n      <div className=\"grid md:grid-cols-2 lg:grid-cols-3 gap-3\">\n      {props.applicationHistory !== undefined &&\n        props.applicationHistory.length > 0 && \n        props.applicationHistory.map((item, i) => (\n          <div key={i + 1} className=\"col-span-1 flex flex-col border border-blue-500 rounded px-3 py-2\">\n            <div className=\"flex flex-row gap-2 justify-start items-center text-xs\">\n              <span className=\"text-gray-500\">Date:</span>\n              <span className=\"font-bold\">{DATE(item.date, \"DD/MM/YYYY\")}</span>\n            </div>\n            <div className=\"flex flex-row gap-2 justify-start items-center text-xs\">\n              <span className=\"text-gray-500\">Action:</span>\n              <span className=\"font-bold\">{item.comment}</span>\n            </div>\n            <div className=\"flex flex-row gap-2 justify-start items-center text-xs\">\n              <span className=\"text-gray-500\">Application status:</span>\n              <span className=\"font-bold\">{ApplicationStatesDescription.find(itm => itm.key === item.application_status)?.caption}</span>\n            </div>\n          </div>\n        ))}\n      </div> \n    </div>\n  )\n}\n\nexport default ApplicationHistory\n","import React, { Component } from \"react\";\nimport { MdInfo, MdLocationOn } from \"react-icons/md\";\nimport { Redirect } from \"react-router-dom\";\nimport { applicationPeriodsStoreInterface } from \"../../../actions/application_periods\";\nimport {\n  candidateExamStoreInterface,\n  InitialExamDetails,\n} from \"../../../actions/candidate_exam\";\nimport { LocationsDataStoreInterface } from \"../../../actions/locations_data\";\nimport Loading from \"../../../components/Loading/Loading\";\nimport { LoadingType } from \"../../../components/Loading/LoadingV2\";\nimport { applicationExamAPI } from \"../../../interfaces/application\";\nimport { DATE } from \"../../../utils/functions\";\nimport { LocationTableInterface } from \"../../Application/ExamCenter/ChooseExamCenter\";\n\ninterface ExamDetailsProps {\n  locationDetails: applicationExamAPI | undefined;\n  examDetails: InitialExamDetails | null;\n  locationsData: LocationsDataStoreInterface;\n  loadAllLocationsData: (callback: (loading: boolean) => void) => void;\n  setSelectedLocationData: (locationData: LocationTableInterface) => void;\n  periods: applicationPeriodsStoreInterface;\n  loadApplicationPeriods: (callback: (loading: boolean) => void) => void;\n  candidateExam: candidateExamStoreInterface;\n  setSelectedCandidateExam: (exam_id: string) => void;\n  // selectedCourse: course;\n}\ninterface ExamDetailsState {\n  loading: boolean;\n}\n\nclass ExamDetails extends Component<ExamDetailsProps, ExamDetailsState> {\n  constructor(props: ExamDetailsProps) {\n    super(props);\n\n    this.state = {\n      loading: false,\n    };\n  }\n  setLoading = (status: boolean) => {\n    this.setState({ loading: status });\n  };\n  componentDidMount = () => {\n    if (\n      this.props.locationsData.Locations_list === null ||\n      this.props.locationsData.Locations_list.length === 0\n    ) {\n      this.props.loadAllLocationsData(this.setLoading);\n    }\n    // if (this.props.periods.applicationPeriods === null || this.props.periods.applicationPeriods.length === 0 || this.props.periods.selected_period === null) {\n    this.props.loadApplicationPeriods(this.setLoading);\n    // }\n  };\n  render() {\n    if (this.props.candidateExam.selected_exam_id !== null) {\n      return <Redirect to=\"/do-exam\" />;\n    }\n    if (this.props.examDetails === null) {\n      return (\n        <div className=\"bg-yellow-50 text-yellow-800 font-bold rounded px-2 py-4 text-center text-3xl border border-yellow-600 mx-4 my-4\">\n          No Exam details found!\n        </div>\n      );\n    }\n    if (this.props.locationDetails === undefined) {\n      return (\n        <div className=\"bg-yellow-50 text-yellow-800 font-bold rounded px-2 py-4 text-center text-3xl border border-yellow-600 mx-4 my-4\">\n          No exam location details found!\n        </div>\n      );\n    }\n    return (\n      <div>\n        {this.state.loading === true ? (\n          <div className=\"px-4 py-4 rounded bg-gray-100\">\n            <Loading type={LoadingType.dark} />\n          </div>\n        ) : (\n          <div>\n            <div className=\"bg-gray-100 rounded mx-2 mb-2 px-2 py-2\">\n              <div className=\"font-bold text-xl text-blue-600 mb-4 flex flex-row items-center justify-between gap-2 bg-white py-2 px-2 rounded\">\n                <div className=\"flex flex-row items-center gap-2\">\n                  <MdInfo className=\"text-4xl text-blue-600\" />\n                  Exam information\n                </div>\n                <button\n                  onClick={() => {\n                    // this.props.setSelectedCourse(this.props.selectedCourse);\n                    this.props.examDetails &&\n                      this.props.setSelectedCandidateExam(\n                        this.props.examDetails.id\n                      );\n                  }}\n                  type=\"button\"\n                  className={`btn ${\n                    this.props.candidateExam.selected_exam_id !== null\n                      ? \"bg-yellow-700 hover:bg-yellow-900\"\n                      : \"bg-blue-600 hover:bg-blue-700\"\n                  } text-white cursor-pointer text-base`}\n                >\n                  {this.props.candidateExam.selected_exam_id !== null\n                    ? \"Return to Exam\"\n                    : \"Start Exam\"}\n                </button>\n              </div>\n              <div className=\"grid md:grid-cols-3 gap-4\">\n                <div className=\"col-span-1\">\n                  <div className=\"flex flex-col pl-2 border-gray-300 pb-2\">\n                    <span className=\"text-gray-500 text-sm italic\">\n                      Exam date:\n                    </span>\n                    <span className=\"text-gray-700 font-bold\">\n                      {DATE(this.props.examDetails.exam_date, \"DD/MM/YYYY\")}\n                    </span>\n                  </div>\n                </div>\n                <div className=\"col-span-1\">\n                  <div className=\"flex flex-col pl-2 border-gray-300 pb-2\">\n                    <span className=\"text-gray-500 text-sm italic\">\n                      Exam start time:\n                    </span>\n                    <span className=\"text-gray-700 font-bold\">\n                      {this.props.examDetails.start_time}\n                    </span>\n                  </div>\n                </div>\n                <div className=\"col-span-1\">\n                  <div className=\"flex flex-col pl-2 border-gray-300 pb-2\">\n                    <span className=\"text-gray-500 text-sm italic\">\n                      Exam duration:\n                    </span>\n                    <span className=\"text-gray-700 font-bold\">\n                      {this.props.examDetails.duration / 60} hours{\" \"}\n                      {this.props.examDetails.duration % 60 > 0 && (\n                        <div>{this.props.examDetails.duration % 60} mins</div>\n                      )}\n                    </span>\n                  </div>\n                </div>\n                <div className=\"col-span-3\">\n                  <div className=\"flex flex-col px-2 pb-2\">\n                    <span className=\"text-gray-500 text-sm italic\">\n                      Exam description:\n                    </span>\n                    <span className=\"text-gray-700 font-bold px-2 py-2 rounded bg-white mt-2\">\n                      {this.props.examDetails.discription}\n                    </span>\n                  </div>\n                </div>\n                <div className=\"col-span-3\">\n                  <div className=\"flex flex-col px-2 pb-2\">\n                    <span className=\"text-gray-500 text-sm italic\">\n                      Terms and conditions / Rules:\n                    </span>\n                    <div\n                      className=\"px-2 py-2 rounded bg-white mt-2\"\n                      dangerouslySetInnerHTML={{\n                        __html: this.props.examDetails.termes,\n                      }}\n                    ></div>\n                  </div>\n                </div>\n              </div>\n            </div>\n            <div className=\"bg-gray-100 rounded mx-2 mb-2 px-2 py-2\">\n              <div className=\"font-bold text-xl text-blue-600 mb-4 flex flex-row items-center justify-between gap-2 bg-white py-2 px-2 rounded\">\n                <div className=\"flex flex-row items-center gap-2\">\n                  <MdLocationOn className=\"text-4xl text-blue-600\" />\n                  Examination location\n                </div>\n              </div>\n              <div className=\"grid md:grid-cols-3 gap-4 px-2\">\n                <div className=\"col-span-1\">\n                  <div className=\"flex flex-col border-b border-gray-300 pb-2\">\n                    <span className=\"text-gray-500 text-sm italic\">\n                      Province:\n                    </span>\n                    <span className=\"text-gray-700 font-bold\">\n                      {this.props.locationsData.Locations_list &&\n                        this.props.locationsData.Locations_list.find(\n                          (itm) =>\n                            this.props.locationDetails !== undefined &&\n                            itm.center_id ===\n                              this.props.locationDetails.center_id\n                        )?.province_name}\n                    </span>\n                  </div>\n                </div>\n                <div className=\"col-span-1\">\n                  <div className=\"flex flex-col border-b border-gray-300 pb-2\">\n                    <span className=\"text-gray-500 text-sm italic\">\n                      District:\n                    </span>\n                    <span className=\"text-gray-700 font-bold\">\n                      {this.props.locationsData.Locations_list &&\n                        this.props.locationsData.Locations_list.find(\n                          (itm) =>\n                            this.props.locationDetails !== undefined &&\n                            itm.center_id ===\n                              this.props.locationDetails.center_id\n                        )?.district_name}\n                    </span>\n                  </div>\n                </div>\n                <div className=\"col-span-1\">\n                  <div className=\"flex flex-col border-b border-gray-300 pb-2\">\n                    <span className=\"text-gray-500 text-sm italic\">\n                      Center:{\" \"}\n                    </span>\n                    <span className=\"text-gray-700 font-bold\">\n                      {this.props.locationDetails.center_name}\n                    </span>\n                  </div>\n                </div>\n                <div className=\"col-span-1\">\n                  <div className=\"flex flex-col border-b border-gray-300 pb-2\">\n                    <span className=\"text-gray-500 text-sm italic\">\n                      Room number:{\" \"}\n                    </span>\n                    <span className=\"text-gray-700 font-bold\">\n                      {this.props.locationDetails.room_number}\n                    </span>\n                  </div>\n                </div>\n                <div className=\"col-span-1\">\n                  <div className=\"flex flex-col border-b border-gray-300 pb-2\">\n                    <span className=\"text-gray-500 text-sm italic\">\n                      Proctoring type\n                    </span>\n                    <span className=\"text-gray-700 font-bold\">\n                      {this.props.locationDetails.proctoring_type}\n                    </span>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default ExamDetails;\n","import React, { Component } from \"react\";\nimport { CgCheckO } from \"react-icons/cg\";\nimport { IoMdInformationCircleOutline } from \"react-icons/io\";\nimport { RiCheckboxBlankCircleFill, RiErrorWarningLine } from \"react-icons/ri\";\nimport { applicationPeriodsStoreInterface } from \"../../../actions/application_periods\";\nimport {\n  candidateExamStoreInterface,\n  InitialExamDetails,\n} from \"../../../actions/candidate_exam\";\nimport { courseStoreInterface } from \"../../../actions/course\";\nimport { positionsStoreInterface } from \"../../../actions/positions\";\nimport Loading from \"../../../components/Loading/Loading\";\nimport {\n  applicationExamAPI,\n  ApplicationStates,\n  GetApplicationsAPI,\n} from \"../../../interfaces/application\";\nimport { course } from \"../../../interfaces/course\";\nimport { UserExamStatus } from \"../../../interfaces/exam\";\nimport { PositionAPI, PositionAPICourse } from \"../../../interfaces/position\";\nimport { DATE } from \"../../../utils/functions\";\nimport { ExamTimeStatus, validateExamDate } from \"../../../utils/question_bank\";\n\ninterface PreparedExamsProps {\n  selectedPosition: PositionAPI;\n  selectedExams: applicationExamAPI[] | null;\n  findExam: (courseId: string) => InitialExamDetails | null;\n  loadingExams: boolean;\n  loadingExamsDone: boolean;\n  setMaxExamModal: (status: boolean) => void;\n  course: courseStoreInterface;\n  setSelectedCourse: (course: course | null) => void;\n  candidateExam: candidateExamStoreInterface;\n  positions: positionsStoreInterface;\n  periods: applicationPeriodsStoreInterface;\n  setSelectedPosition: (position: PositionAPI) => void;\n  setSelectedCandidateExam: (exam_id: string) => void;\n  changeLocation: (item: PositionAPICourse) => void;\n  selectedApplicationDetails: GetApplicationsAPI;\n}\ninterface PreparedExamsState {}\n\nexport class PreparedExams extends Component<\n  PreparedExamsProps,\n  PreparedExamsState\n> {\n  render() {\n    let NotPreparedExamsFilter = this.props.selectedPosition.courses.filter(\n      (itm) =>\n        this.props.candidateExam.user_exams_done.filter(\n          (ex) => ex.course === itm.course_id\n        ).length === 0 && this.props.findExam(itm.course_id) === null\n    );\n    let PreparedExamsFilter = this.props.selectedPosition.courses.filter(\n      (itm) =>\n        this.props.candidateExam.user_exams_done.filter(\n          (ex) => ex.course === itm.course_id\n        ).length === 0 && this.props.findExam(itm.course_id) !== null\n    );\n    let AllPendingExams = [...PreparedExamsFilter, ...NotPreparedExamsFilter];\n    let totalPending =\n      NotPreparedExamsFilter.length + PreparedExamsFilter.length;\n    return (\n      <div className=\"bg-white px-2 py-2\">\n        <div className=\"bg-gray-100 rounded px-2 py-2\">\n          <div className=\"flex flex-row items-center justify-between text-xl mb-3 mx-2\">\n            <span className=\"font-bold \">Waiting exams</span>\n            <span className=\"font-bold bg-white text-blue-600 rounded-full px-2 text-base border border-blue-200\">\n              {this.props.selectedPosition !== null &&\n                this.props.selectedExams !== null &&\n                this.props.loadingExams === false &&\n                totalPending}\n            </span>\n          </div>\n          <div className=\"flex flex-col gap-2\">\n            {this.props.selectedPosition === null ||\n            this.props.selectedExams === null ||\n            this.props.loadingExams === true ? (\n              <Loading />\n            ) : AllPendingExams.length === 0 ? (\n              <div className=\"border border-gray-200 text-gray-400 font-bold rounded-md px-3 py-3 text-center\">\n                <div className=\"flex justify-center items-center w-full text-4xl\">\n                  <IoMdInformationCircleOutline />\n                </div>\n                <div className=\"text-gray-500\">No exams found!</div>\n              </div>\n            ) : (\n              AllPendingExams.map((item, i) => (\n                <div\n                  key={i + 1}\n                  className={`px-3 py-2 rounded group bg-white border`}\n                >\n                  <div className=\"grid md:grid-cols-12 gap-2\">\n                    {/* First col */}\n                    <div className=\"col-span-12 md:col-span-6 lg:col-span-4 flex fex-row items-center gap-3\">\n                      <div className=\"flex flex-row gap-2 items-center\">\n                        <div\n                          className={`text-gray-300 group-hover:text-white flex flex-row items-center gap-2 text-right ml-2`}\n                        >\n                          {this.props.findExam(item.course_id) !== null ? (\n                            <CgCheckO className=\"text-4xl text-blue-600\" />\n                          ) : (\n                            <RiCheckboxBlankCircleFill className=\"text-4xl text-blue-100\" />\n                          )}\n                        </div>\n                      </div>\n                      <div className=\"flex flex-col\">\n                        <div className={`font-bold text-gray-600 truncate`}>\n                          {item.course_name}\n                        </div>\n                        <div className=\"flex flex-row justify-start items-center gap-2\">\n                          <span className=\"text-gray-500 text-xs\">\n                            Exam date:{\" \"}\n                          </span>\n                          {this.props.findExam(item.course_id) !== null ? (\n                            <div className=\"flex flex-row items-center gap-2\">\n                              {validateExamDate(\n                                this.props.findExam(item.course_id)!.exam_date,\n                                this.props.findExam(item.course_id)!.start_time,\n                                this.props.findExam(item.course_id)!.end_time\n                              ) === ExamTimeStatus.Online ? (\n                                <span className=\"bg-blue-100 text-blue-600 font-bold px-2 rounded-full\">\n                                  {validateExamDate(\n                                    this.props.findExam(item.course_id)!\n                                      .exam_date,\n                                    this.props.findExam(item.course_id)!\n                                      .start_time,\n                                    this.props.findExam(item.course_id)!\n                                      .end_time\n                                  )}\n                                </span>\n                              ) : validateExamDate(\n                                  this.props.findExam(item.course_id)!\n                                    .exam_date,\n                                  this.props.findExam(item.course_id)!\n                                    .start_time,\n                                  this.props.findExam(item.course_id)!.end_time\n                                ) === ExamTimeStatus.Expired ? (\n                                <span className=\"italic text-yellow-700 underline\">\n                                  {validateExamDate(\n                                    this.props.findExam(item.course_id)!\n                                      .exam_date,\n                                    this.props.findExam(item.course_id)!\n                                      .start_time,\n                                    this.props.findExam(item.course_id)!\n                                      .end_time\n                                  )}\n                                </span>\n                              ) : (\n                                <span className=\"italic\">\n                                  {validateExamDate(\n                                    this.props.findExam(item.course_id)!\n                                      .exam_date,\n                                    this.props.findExam(item.course_id)!\n                                      .start_time,\n                                    this.props.findExam(item.course_id)!\n                                      .end_time\n                                  )}\n                                </span>\n                              )}\n                              <span className=\"font-bold text-blue-600 text-sm\">\n                                {DATE(\n                                  this.props.findExam(item.course_id)!\n                                    .exam_date,\n                                  \"DD/MM/YYYY\"\n                                )}\n                              </span>\n                              <span\n                                className={`bg-blue-100 text-blue-600 font-bold px-2 py-1 rounded-full text-sm`}\n                              >\n                                {\n                                  this.props.findExam(item.course_id)!\n                                    .start_time\n                                }\n                              </span>\n                            </div>\n                          ) : (\n                            <span className=\"text-gray-500 text-sm\">\n                              Waiting for preparation\n                            </span>\n                          )}\n                        </div>\n                      </div>\n                    </div>\n                    {/* Second col */}\n                    <div className=\"col-span-12 md:col-span-6 lg:col-span-4 flex flex-col items-start justify-center\">\n                      {this.props.selectedExams === null ? (\n                        \"\"\n                      ) : this.props.selectedExams.find(\n                          (itm) => itm.course_id === item.course_id\n                        ) !== undefined ? (\n                        <>\n                          <div className=\"flex flex-row justify-start items-center gap-2\">\n                            <span className=\"text-gray-500 text-xs\">\n                              Proctoring type:{\" \"}\n                            </span>\n                            <span className=\"text-gray-700 font-bold text-sm\">\n                              {this.props.selectedExams === null\n                                ? \"\"\n                                : this.props.selectedExams.find(\n                                    (itm) => itm.course_id === item.course_id\n                                  ) !== undefined &&\n                                  this.props.selectedExams.find(\n                                    (itm) => itm.course_id === item.course_id\n                                  )?.proctoring_type}\n                            </span>\n                          </div>\n                          <div className=\"flex flex-col justify-center items-start gap-2\">\n                            {/* <span className=\"text-gray-500 text-xs\">\n                              Exam location:{\" \"}\n                            </span> */}\n                            <span className={`text-gray-700 font-bold text-sm`}>\n                              Center:{\" \"}\n                              {this.props.selectedExams === null ? (\n                                \"\"\n                              ) : this.props.selectedExams.find(\n                                  (itm) => itm.course_id === item.course_id\n                                ) !== undefined ? (\n                                this.props.selectedExams.find(\n                                  (itm) => itm.course_id === item.course_id\n                                )?.center_name\n                              ) : (\n                                <span className=\"italic text-xs\">\n                                  No location selected\n                                </span>\n                              )}\n                            </span>\n                            <span className={`text-gray-700 font-bold text-sm`}>\n                              Room:{\" \"}\n                              {this.props.selectedExams === null ? (\n                                \"\"\n                              ) : this.props.selectedExams.find(\n                                  (itm) => itm.course_id === item.course_id\n                                ) !== undefined ? (\n                                this.props.selectedExams.find(\n                                  (itm) => itm.course_id === item.course_id\n                                )?.room_number === 0 ? (\n                                  <span className=\"bg-yellow-100 text-yellow-700 font-bold px-2 py-1 rounded\">\n                                    Waiting room, you are advised to choose\n                                    another center\n                                  </span>\n                                ) : (\n                                  <span className=\"text-blue-600 bg-blue-100 px-2 py-1 rounded\">\n                                    No:{\" \"}\n                                    {\n                                      this.props.selectedExams.find(\n                                        (itm) =>\n                                          itm.course_id === item.course_id\n                                      )?.room_number\n                                    }\n                                  </span>\n                                )\n                              ) : (\n                                <span className=\"italic text-xs\">\n                                  No location selected\n                                </span>\n                              )}\n                            </span>\n                          </div>\n                        </>\n                      ) : (\n                        <div className=\"flex flex-row gap-2 items-center justify-start\">\n                          <RiErrorWarningLine className=\"text-xl text-yellow-700\" />\n                          <span className=\"text-yellow-700 italic text-sm\">\n                            No location selected\n                          </span>\n                        </div>\n                      )}\n                    </div>\n                    {/* Third col */}\n                    <div className=\"col-span-12 md:col-span-12 lg:col-span-4 flex items-center justify-start lg:justify-end\">\n                      {this.props.selectedExams === null ? (\n                        \"\"\n                      ) : this.props.selectedExams.find(\n                          (itm) => itm.course_id === item.course_id\n                        ) !== undefined ? (\n                        <div className=\"flex flex-row justify-start md:justify-end items-center gap-2\">\n                          {this.props.loadingExams === true ||\n                          this.props.loadingExamsDone === true ? (\n                            <div className=\"text-gray-500 font-bold bg-gray-100 text-sm rounded px-3 py-2\">\n                              Checking...\n                            </div>\n                          ) : (\n                            ((this.props.candidateExam.user_exams_done.find(\n                              (itm) => itm.course === item.course_id\n                            ) === undefined &&\n                              this.props.findExam(item.course_id) !== null &&\n                              validateExamDate(\n                                this.props.findExam(item.course_id)!.exam_date,\n                                this.props.findExam(item.course_id)!.start_time,\n                                this.props.findExam(item.course_id)!.end_time\n                              ) === ExamTimeStatus.Waiting) ||\n                              this.props.findExam(item.course_id) === null) && (\n                              <div\n                                onClick={() => this.props.changeLocation(item)}\n                                className=\"btn text-blue-600 border border-white cursor-pointer group-hover:bg-blue-600 hover:bg-blue-800 group-hover:text-white bg-blue-100 text-sm w-40 text-center\"\n                              >\n                                Change location\n                              </div>\n                            )\n                          )}\n                          {this.props.loadingExams === true ||\n                          this.props.loadingExamsDone === true ? (\n                            <div className=\"text-gray-500 font-bold bg-gray-100 text-sm rounded px-3 py-2\">\n                              Checking...\n                            </div>\n                          ) : (\n                            this.props.findExam(item.course_id) !== null &&\n                            this.props.findExam(item.course_id)?.course !==\n                              undefined &&\n                            this.props.candidateExam.user_exams_done.find(\n                              (itm) => itm.course === item.course_id\n                            )?.user_status !== UserExamStatus.Editing &&\n                            validateExamDate(\n                              this.props.findExam(item.course_id)!.exam_date,\n                              this.props.findExam(item.course_id)!.start_time,\n                              this.props.findExam(item.course_id)!.end_time\n                            ) === ExamTimeStatus.Online &&\n                            this.props.selectedApplicationDetails\n                              .application_status ===\n                              ApplicationStates.Shortlisted && (\n                              <div\n                                onClick={() => {\n                                  this.props.course.courses &&\n                                    this.props.setSelectedCourse(\n                                      this.props.course.courses.find(\n                                        (itm) =>\n                                          itm.course_id === item.course_id\n                                      )!\n                                    );\n                                  this.props.findExam(item.course_id) !==\n                                    null &&\n                                    this.setState({\n                                      appointmentDetailsModal: {\n                                        status: true,\n                                        item: this.props.findExam(\n                                          item.course_id\n                                        ),\n                                      },\n                                    });\n                                }}\n                                className=\"hidden btn border border-blue-500 text-blue-600 cursor-pointer hover:bg-blue-600 hover:text-white text-sm text-center\"\n                              >\n                                Details\n                              </div>\n                            )\n                          )}\n                          {this.props.loadingExams === true ||\n                          this.props.loadingExamsDone === true ? (\n                            <div className=\"text-gray-500 font-bold bg-gray-100 text-sm rounded px-3 py-2\">\n                              Checking...\n                            </div>\n                          ) : (\n                            this.props.periods.selected_period !== null &&\n                            this.props.periods.selected_period.is_active ===\n                              true &&\n                            this.props.findExam(item.course_id) !== null &&\n                            this.props.findExam(item.course_id)?.id !==\n                              undefined &&\n                            validateExamDate(\n                              this.props.findExam(item.course_id)!.exam_date,\n                              this.props.findExam(item.course_id)!.start_time,\n                              this.props.findExam(item.course_id)!.end_time\n                            ) === ExamTimeStatus.Online &&\n                            this.props.selectedApplicationDetails\n                              .application_status ===\n                              ApplicationStates.Shortlisted && (\n                              <div\n                                onClick={() => {\n                                  if (this.props.selectedPosition !== null) {\n                                    if (\n                                      this.props.positions.selected_position ===\n                                        null ||\n                                      this.props.positions.selected_position\n                                        .position_id !==\n                                        this.props.selectedPosition.position_id\n                                    ) {\n                                      this.props.setSelectedPosition(\n                                        this.props.selectedPosition\n                                      );\n                                    }\n                                    this.props.selectedExams !== null &&\n                                      this.props.course.courses &&\n                                      this.props.setSelectedCourse(\n                                        this.props.course.courses.find(\n                                          (itm) =>\n                                            itm.course_id === item.course_id\n                                        )!\n                                      );\n                                    this.props.selectedExams !== null &&\n                                      this.props.findExam(item.course_id) !==\n                                        null &&\n                                      this.props.setSelectedCandidateExam(\n                                        this.props.findExam(item.course_id)!.id\n                                      );\n                                  }\n                                }}\n                                className={`btn border ${\n                                  this.props.candidateExam.user_exams_done.find(\n                                    (itm) => itm.course === item.course_id\n                                  )?.user_status !== UserExamStatus.Editing\n                                    ? \"border-blue-500 bg-blue-600 hover:text-blue-600\"\n                                    : \"border-green-500 bg-green-600 hover:text-green-600\"\n                                } text-white cursor-pointer hover:bg-white text-sm w-max text-center`}\n                              >\n                                {this.props.candidateExam.user_exams_done.find(\n                                  (itm) => itm.course === item.course_id\n                                )?.user_status !== UserExamStatus.Editing\n                                  ? \"Start exam\"\n                                  : \"Back to Exam\"}\n                              </div>\n                            )\n                          )}\n                          {this.props.selectedApplicationDetails\n                            .application_status ===\n                            ApplicationStates.Initiated && (\n                            <div className=\"font-semibold text-yellow-800 bg-yellow-50 py-2 px-4 text-base\">\n                              Waiting for shortlisting\n                            </div>\n                          )}\n                        </div>\n                      ) : (\n                        <div className=\"flex flex-row justify-start md:justify-end items-center gap-2\">\n                          {this.props.candidateExam.user_exams_done.find(\n                            (itm) => itm.course === item.course_id\n                          ) === undefined && (\n                            <div\n                              onClick={() => this.props.changeLocation(item)}\n                              className=\"btn cursor-pointer bg-yellow-700 hover:bg-yellow-50 border border-yellow-700 hover:text-yellow-700 text-white text-sm w-36 text-center\"\n                            >\n                              Choose location\n                            </div>\n                          )}\n                        </div>\n                      )}\n                      {this.props.candidateExam.user_exams_done.find(\n                        (itm) => itm.course === item.course_id\n                      ) !== undefined &&\n                        this.props.candidateExam.user_exams_done.find(\n                          (itm) => itm.course === item.course_id\n                        )?.user_status !== UserExamStatus.Editing && (\n                          <div className=\"flex flex-row gap-2 items-center\">\n                            <div\n                              className={`text-blue-600 flex flex-row items-center gap-2 text-right ml-2`}\n                            >\n                              <div className=\"flex flex-col gap-0\">\n                                <span className=\"text-sm\">Marks</span>\n                                <span className=\"text-lg font-bold -mt-1\">\n                                  {this.props.candidateExam.user_exams_done\n                                    .find(\n                                      (itm) => itm.course === item.course_id\n                                    )\n                                    ?.total_marks.toFixed(2)}\n                                  %\n                                </span>\n                              </div>\n                            </div>\n                          </div>\n                        )}\n                    </div>\n                  </div>\n                </div>\n              ))\n            )}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default PreparedExams;\n","import React, { Component } from \"react\";\nimport { HiInformationCircle } from \"react-icons/hi\";\nimport { IoMdInformationCircleOutline } from \"react-icons/io\";\nimport { MdCheckCircle, MdPauseCircleFilled } from \"react-icons/md\";\nimport { RiCheckboxBlankCircleFill, RiErrorWarningLine } from \"react-icons/ri\";\nimport { applicationPeriodsStoreInterface } from \"../../../actions/application_periods\";\nimport {\n  candidateExamStoreInterface,\n  InitialExamDetails,\n} from \"../../../actions/candidate_exam\";\nimport { courseStoreInterface } from \"../../../actions/course\";\nimport { positionsStoreInterface } from \"../../../actions/positions\";\nimport Loading from \"../../../components/Loading/Loading\";\nimport {\n  applicationExamAPI,\n  ApplicationStates,\n  GetApplicationsAPI,\n} from \"../../../interfaces/application\";\nimport { course } from \"../../../interfaces/course\";\nimport { UserExamStatus } from \"../../../interfaces/exam\";\nimport { PositionAPI } from \"../../../interfaces/position\";\nimport { DATE } from \"../../../utils/functions\";\nimport { ExamTimeStatus, validateExamDate } from \"../../../utils/question_bank\";\n\ninterface ActiveExamsProps {\n  selectedPosition: PositionAPI;\n  selectedExams: applicationExamAPI[] | null;\n  findExam: (courseId: string) => InitialExamDetails | null;\n  loadingExams: boolean;\n  loadingExamsDone: boolean;\n  setMaxExamModal: (status: boolean) => void;\n  course: courseStoreInterface;\n  setSelectedCourse: (course: course | null) => void;\n  candidateExam: candidateExamStoreInterface;\n  positions: positionsStoreInterface;\n  periods: applicationPeriodsStoreInterface;\n  setSelectedPosition: (position: PositionAPI) => void;\n  setSelectedCandidateExam: (exam_id: string) => void;\n  selectedApplicationDetails: GetApplicationsAPI;\n}\ninterface ActiveExamsState {}\n\nexport class ActiveExams extends Component<ActiveExamsProps, ActiveExamsState> {\n  render() {\n    let ExamsDoneFilterTemp = this.props.selectedPosition.courses.filter(\n      (itm) =>\n        this.props.findExam(itm.course_id) !== null &&\n        this.props.candidateExam.user_exams_done.filter(\n          (ex) =>\n            ex.course === itm.course_id &&\n            validateExamDate(\n              ex.exam_date,\n              ex.exam_start_time,\n              ex.exam_end_time\n            ) === ExamTimeStatus.Online\n        ).length > 0\n    );\n    let ActiveExamsFilter = ExamsDoneFilterTemp.filter(\n      (check) =>\n        this.props.candidateExam.user_exams_done.filter(\n          (itm) => itm.course === check.course_id\n        ) !== undefined &&\n        (this.props.candidateExam.user_exams_done.find(\n          (itm) => itm.course === check.course_id\n        )?.user_status === UserExamStatus.Editing ||\n          this.props.candidateExam.user_exams_done.find(\n            (itm) => itm.course === check.course_id\n          )?.user_status === UserExamStatus.Paused)\n    );\n    return (\n      <>\n        {ActiveExamsFilter.length > 0 ? (\n          <div className=\"bg-white px-2 py-2\">\n            <div className=\"bg-gray-100 rounded px-2 py-2\">\n              <div className=\"flex flex-row items-center justify-between text-xl mb-3 mx-2\">\n                <span className=\"font-bold \">Active exam</span>\n                <span className=\"font-bold bg-white text-green-600 rounded-full px-2 text-base border border-gray-200\">\n                  {this.props.selectedPosition !== null &&\n                    this.props.selectedExams !== null &&\n                    this.props.loadingExams === false &&\n                    ActiveExamsFilter.length}\n                </span>\n              </div>\n              <div className=\"flex flex-col gap-2\">\n                {this.props.selectedPosition === null ||\n                this.props.selectedExams === null ||\n                this.props.loadingExams === true ? (\n                  <Loading />\n                ) : ActiveExamsFilter.length === 0 ? (\n                  <div className=\"border border-gray-200 text-gray-400 font-bold rounded-md px-3 py-3 text-center\">\n                    <div className=\"flex justify-center items-center w-full text-4xl\">\n                      <IoMdInformationCircleOutline />\n                    </div>\n                    <div className=\"text-gray-500\">No exams found!</div>\n                  </div>\n                ) : (\n                  ActiveExamsFilter.map((item, i) => (\n                    <div\n                      key={i + 1}\n                      className={`px-3 py-2 rounded group bg-white border-2 border-green-600 hover:bg-green-50`}\n                    >\n                      <div className=\"grid md:grid-cols-12 gap-2\">\n                        {/* First col */}\n                        <div className=\"col-span-12 md:col-span-6 lg:col-span-4 flex fex-row items-center gap-3\">\n                          {this.props.candidateExam.user_exams_done.find(\n                            (itm) => itm.course === item.course_id\n                          ) !== undefined &&\n                            this.props.candidateExam.user_exams_done.find(\n                              (itm) => itm.course === item.course_id\n                            )?.user_status === UserExamStatus.Editing && (\n                              <div className=\"flex flex-row gap-2 items-center\">\n                                <div\n                                  className={`text-green-600 flex flex-row items-center gap-2 text-right ml-2`}\n                                >\n                                  <HiInformationCircle className=\"text-4xl\" />\n                                </div>\n                              </div>\n                            )}\n                          {this.props.candidateExam.user_exams_done.find(\n                            (itm) => itm.course === item.course_id\n                          ) !== undefined &&\n                            this.props.candidateExam.user_exams_done.find(\n                              (itm) => itm.course === item.course_id\n                            )?.user_status === UserExamStatus.Done && (\n                              <div className=\"flex flex-row gap-2 items-center\">\n                                <div\n                                  className={`text-blue-600 flex flex-row items-center gap-2 text-right ml-2`}\n                                >\n                                  <MdCheckCircle className=\"text-4xl\" />\n                                </div>\n                              </div>\n                            )}\n                          {this.props.candidateExam.user_exams_done.find(\n                            (itm) => itm.course === item.course_id\n                          ) !== undefined &&\n                            this.props.candidateExam.user_exams_done.find(\n                              (itm) => itm.course === item.course_id\n                            )?.user_status === UserExamStatus.Removed && (\n                              <div className=\"flex flex-row gap-2 items-center\">\n                                <div\n                                  className={`text-yellow-800 flex flex-row items-center gap-2 text-right ml-2`}\n                                >\n                                  <MdCheckCircle className=\"text-4xl\" />\n                                </div>\n                              </div>\n                            )}\n                          {this.props.candidateExam.user_exams_done.find(\n                            (itm) => itm.course === item.course_id\n                          ) !== undefined &&\n                            this.props.candidateExam.user_exams_done.find(\n                              (itm) => itm.course === item.course_id\n                            )?.user_status === UserExamStatus.Paused && (\n                              <div className=\"flex flex-row gap-2 items-center\">\n                                <div\n                                  className={`text-green-500 flex flex-row items-center gap-2 text-right ml-2`}\n                                >\n                                  <MdPauseCircleFilled className=\"text-4xl\" />\n                                </div>\n                              </div>\n                            )}\n                          {this.props.candidateExam.user_exams_done.find(\n                            (itm) => itm.course === item.course_id\n                          ) === undefined &&\n                            this.props.findExam(item.course_id) !== null &&\n                            this.props.findExam(item.course_id)?.id !==\n                              undefined && (\n                              <div className=\"flex flex-row gap-2 items-center\">\n                                <div\n                                  className={`text-blue-600 flex flex-row items-center gap-2 text-right ml-2 animate-ping`}\n                                >\n                                  <HiInformationCircle className=\"text-4xl\" />\n                                </div>\n                              </div>\n                            )}\n                          {this.props.candidateExam.user_exams_done.find(\n                            (itm) => itm.course === item.course_id\n                          ) === undefined &&\n                            (this.props.findExam(item.course_id) === null ||\n                              this.props.findExam(item.course_id)?.id ===\n                                undefined) && (\n                              <div className=\"flex flex-row gap-2 items-center\">\n                                <div\n                                  className={`text-gray-300 group-hover:text-white flex flex-row items-center gap-2 text-right ml-2`}\n                                >\n                                  <RiCheckboxBlankCircleFill className=\"text-4xl\" />\n                                </div>\n                              </div>\n                            )}\n                          <div className=\"flex flex-col\">\n                            <div className={`font-bold text-gray-600 truncate`}>\n                              {item.course_name}\n                            </div>\n                            <div className=\"flex flex-row justify-start items-center gap-2\">\n                              <span className=\"text-gray-500 text-xs\">\n                                Exam date:{\" \"}\n                              </span>\n                              <div className=\"flex flex-row items-center gap-2\">\n                                <span className=\"font-bold text-green-600 text-sm\">\n                                  {DATE(\n                                    this.props.findExam(item.course_id)!\n                                      .exam_date,\n                                    \"DD/MM/YYYY\"\n                                  )}\n                                </span>\n                                <span\n                                  className={`bg-gray-100 text-green-600 font-bold px-2 py-1 rounded-full text-sm`}\n                                >\n                                  {\n                                    this.props.findExam(item.course_id)!\n                                      .start_time\n                                  }\n                                </span>\n                                <span\n                                  className={`bg-gray-100 text-gray-800 font-bold px-2 py-1 rounded-full text-sm underline`}\n                                >\n                                  {\n                                    this.props.candidateExam.user_exams_done.find(\n                                      (x) => x.course === item.course_id\n                                    )?.user_status\n                                  }\n                                </span>\n                              </div>\n                            </div>\n                          </div>\n                        </div>\n                        {/* Second col */}\n                        <div className=\"col-span-12 md:col-span-6 lg:col-span-4 flex flex-col items-start justify-center\">\n                          {this.props.selectedExams === null ? (\n                            \"\"\n                          ) : this.props.selectedExams.find(\n                              (itm) => itm.course_id === item.course_id\n                            ) !== undefined ? (\n                            <>\n                              <div className=\"flex flex-row justify-start items-center gap-2\">\n                                <span className=\"text-gray-500 text-xs\">\n                                  Proctoring type:{\" \"}\n                                </span>\n                                <span className=\"text-gray-700 font-bold text-sm\">\n                                  {this.props.selectedExams === null\n                                    ? \"\"\n                                    : this.props.selectedExams.find(\n                                        (itm) =>\n                                          itm.course_id === item.course_id\n                                      ) !== undefined &&\n                                      this.props.selectedExams.find(\n                                        (itm) =>\n                                          itm.course_id === item.course_id\n                                      )?.proctoring_type}\n                                </span>\n                              </div>\n                              <div className=\"flex flex-col justify-center items-start gap-2\">\n                                {/* <span className=\"text-gray-500 text-xs\">\n                                  Exam location:{\" \"}\n                                </span> */}\n                                <span\n                                  className={`text-gray-700 font-bold text-sm`}\n                                >\n                                  Center:{\" \"}\n                                  {this.props.selectedExams === null ? (\n                                    \"\"\n                                  ) : this.props.selectedExams.find(\n                                      (itm) => itm.course_id === item.course_id\n                                    ) !== undefined ? (\n                                    this.props.selectedExams.find(\n                                      (itm) => itm.course_id === item.course_id\n                                    )?.center_name\n                                  ) : (\n                                    <span className=\"italic text-xs\">\n                                      No location selected\n                                    </span>\n                                  )}\n                                </span>\n                                <span\n                                  className={`text-gray-700 font-bold text-sm`}\n                                >\n                                  Room:{\" \"}\n                                  {this.props.selectedExams === null ? (\n                                    \"\"\n                                  ) : this.props.selectedExams.find(\n                                      (itm) => itm.course_id === item.course_id\n                                    ) !== undefined ? (\n                                    this.props.selectedExams.find(\n                                      (itm) => itm.course_id === item.course_id\n                                    )?.room_number === 0 ? (\n                                      <span className=\"bg-yellow-100 text-yellow-700 font-bold px-2 py-1 rounded\">\n                                        Waiting room, you are advised to choose\n                                        another center\n                                      </span>\n                                    ) : (\n                                      <span className=\"text-blue-600 bg-blue-100 px-2 py-1 rounded\">\n                                        No:{\" \"}\n                                        {\n                                          this.props.selectedExams.find(\n                                            (itm) =>\n                                              itm.course_id === item.course_id\n                                          )?.room_number\n                                        }\n                                      </span>\n                                    )\n                                  ) : (\n                                    <span className=\"italic text-xs\">\n                                      No location selected\n                                    </span>\n                                  )}\n                                </span>\n                              </div>\n                            </>\n                          ) : (\n                            <div className=\"flex flex-row gap-2 items-center justify-start\">\n                              <RiErrorWarningLine className=\"text-xl text-yellow-700\" />\n                              <span className=\"text-yellow-700 italic text-sm\">\n                                No location selected\n                              </span>\n                            </div>\n                          )}\n                        </div>\n                        {/* Third col */}\n                        <div className=\"col-span-12 md:col-span-12 lg:col-span-4 flex items-center justify-start lg:justify-end\">\n                          {this.props.selectedExams === null ? (\n                            \"\"\n                          ) : this.props.selectedExams.find(\n                              (itm) => itm.course_id === item.course_id\n                            ) !== undefined ? (\n                            <div className=\"flex flex-row justify-start md:justify-end items-center gap-2\">\n                              {this.props.loadingExams === true ||\n                              this.props.loadingExamsDone === true ? (\n                                <div className=\"text-gray-500 font-bold bg-gray-100 text-sm rounded px-3 py-2\">\n                                  Checking...\n                                </div>\n                              ) : (\n                                this.props.candidateExam.user_exams_done.find(\n                                  (itm) => itm.course === item.course_id\n                                ) === undefined && (\n                                  <div\n                                    onClick={() => {\n                                      this.setState({\n                                        selectedCourse: item,\n                                        centersModal: true,\n                                      });\n                                      this.props.setMaxExamModal(true);\n                                    }}\n                                    className=\"btn text-blue-600 border border-white cursor-pointer group-hover:bg-blue-600 hover:bg-blue-800 group-hover:text-white bg-blue-100 text-sm w-40 text-center\"\n                                  >\n                                    Change location\n                                  </div>\n                                )\n                              )}\n                              {this.props.loadingExams === true ||\n                              this.props.loadingExamsDone === true ? (\n                                <div className=\"text-gray-500 font-bold bg-gray-100 text-sm rounded px-3 py-2\">\n                                  Checking...\n                                </div>\n                              ) : (\n                                this.props.periods.selected_period !== null &&\n                                this.props.periods.selected_period.is_active ===\n                                  true &&\n                                this.props.findExam(item.course_id) !== null &&\n                                this.props.findExam(item.course_id)?.id !==\n                                  undefined &&\n                                this.props.selectedApplicationDetails\n                                  .application_status ===\n                                  ApplicationStates.Shortlisted && (\n                                  <div\n                                    onClick={() => {\n                                      if (\n                                        this.props.selectedPosition !== null\n                                      ) {\n                                        if (\n                                          this.props.positions\n                                            .selected_position === null ||\n                                          this.props.positions.selected_position\n                                            .position_id !==\n                                            this.props.selectedPosition\n                                              .position_id\n                                        ) {\n                                          this.props.setSelectedPosition(\n                                            this.props.selectedPosition\n                                          );\n                                        }\n                                        this.props.selectedExams !== null &&\n                                          this.props.course.courses &&\n                                          this.props.setSelectedCourse(\n                                            this.props.course.courses.find(\n                                              (itm) =>\n                                                itm.course_id === item.course_id\n                                            )!\n                                          );\n                                        this.props.selectedExams !== null &&\n                                          this.props.findExam(\n                                            item.course_id\n                                          ) !== null &&\n                                          this.props.setSelectedCandidateExam(\n                                            this.props.findExam(item.course_id)!\n                                              .id\n                                          );\n                                      }\n                                    }}\n                                    className={`btn border border-green-500 bg-green-600 hover:text-green-600 text-white cursor-pointer hover:bg-white text-sm w-max text-center`}\n                                  >\n                                    Back to exam\n                                  </div>\n                                )\n                              )}\n                            </div>\n                          ) : (\n                            <div className=\"flex flex-row justify-start md:justify-end items-center gap-2\">\n                              {this.props.candidateExam.user_exams_done.find(\n                                (itm) => itm.course === item.course_id\n                              ) === undefined && (\n                                <div\n                                  onClick={() =>\n                                    this.setState({\n                                      selectedCourse: item,\n                                      centersModal: true,\n                                    })\n                                  }\n                                  className=\"btn cursor-pointer bg-yellow-700 hover:bg-yellow-50 border border-yellow-700 hover:text-yellow-700 text-white text-sm w-36 text-center\"\n                                >\n                                  Choose location\n                                </div>\n                              )}\n                            </div>\n                          )}\n                        </div>\n                      </div>\n                    </div>\n                  ))\n                )}\n              </div>\n            </div>\n          </div>\n        ) : (\n          <div></div>\n        )}\n      </>\n    );\n  }\n}\n\nexport default ActiveExams;\n","import React, { Component } from \"react\";\nimport { HiInformationCircle } from \"react-icons/hi\";\nimport { IoMdInformationCircleOutline } from \"react-icons/io\";\nimport { MdCheckCircle, MdPauseCircleFilled } from \"react-icons/md\";\nimport { RiCheckboxBlankCircleFill, RiErrorWarningLine } from \"react-icons/ri\";\nimport { applicationPeriodsStoreInterface } from \"../../../actions/application_periods\";\nimport {\n  candidateExamStoreInterface,\n  InitialExamDetails,\n} from \"../../../actions/candidate_exam\";\nimport { courseStoreInterface } from \"../../../actions/course\";\nimport { positionsStoreInterface } from \"../../../actions/positions\";\nimport Loading from \"../../../components/Loading/Loading\";\nimport { applicationExamAPI } from \"../../../interfaces/application\";\nimport { course } from \"../../../interfaces/course\";\nimport { ExamAnswerSheetDone, UserExamStatus } from \"../../../interfaces/exam\";\nimport { PositionAPI, PositionAPICourse } from \"../../../interfaces/position\";\nimport { DATE } from \"../../../utils/functions\";\nimport { ExamTimeStatus, validateExamDate } from \"../../../utils/question_bank\";\nimport { ExamDoneDetailsAnswers } from \"../../CandidateExams/CandidateExams\";\n\ninterface ExamsDoneProps {\n  selectedPosition: PositionAPI;\n  selectedExams: applicationExamAPI[] | null;\n  findExam: (courseId: string) => InitialExamDetails | null;\n  loadingExams: boolean;\n  loadingExamsDone: boolean;\n  setMaxExamModal: (status: boolean) => void;\n  course: courseStoreInterface;\n  setSelectedCourse: (course: course | null) => void;\n  candidateExam: candidateExamStoreInterface;\n  positions: positionsStoreInterface;\n  periods: applicationPeriodsStoreInterface;\n  setSelectedPosition: (position: PositionAPI) => void;\n  setSelectedCandidateExam: (exam_id: string) => void;\n  viewMarksDetails: (selectedExamDetails: ExamDoneDetailsAnswers) => void;\n}\ninterface ExamsDoneState {\n  loading: boolean;\n  selectedCourse: PositionAPICourse | null;\n  centersModal: boolean;\n}\n\nexport class ExamsDone extends Component<ExamsDoneProps, ExamsDoneState> {\n  constructor(props: ExamsDoneProps) {\n    super(props);\n\n    this.state = {\n      loading: false,\n      centersModal: false,\n      selectedCourse: null,\n    };\n  }\n  viewMarksDetailsFn = (Exam: ExamAnswerSheetDone) => {\n    const examTest = this.props.candidateExam.user_exams_temp.find(\n      (itm) => itm.course === Exam.course && itm.period === Exam.period\n    );\n    if (examTest !== undefined) {\n      let courseSelected = this.props.selectedPosition.courses.find(\n        (itm) => itm.course_id === examTest.course\n      );\n      if (courseSelected !== undefined) {\n        this.props.viewMarksDetails({\n          course: examTest.course,\n          course_name: courseSelected.course_name,\n          discription: examTest.discription,\n          termes: examTest.termes,\n          rules: examTest.rules,\n          period: Exam.period,\n          exam_date: Exam.exam_date,\n        });\n      }\n    }\n  };\n  render() {\n    let ExamsDoneFilter = this.props.selectedPosition.courses.filter(\n      (itm) =>\n        this.props.findExam(itm.course_id) !== null &&\n        this.props.candidateExam.user_exams_done.filter(\n          (ex) =>\n            ex.course === itm.course_id &&\n            (ex.user_status === UserExamStatus.Done ||\n              ex.user_status === UserExamStatus.Removed ||\n              validateExamDate(\n                ex.exam_date,\n                ex.exam_start_time,\n                ex.exam_end_time\n              ) === ExamTimeStatus.Expired)\n        ).length > 0\n    );\n    // console.log(\"Done ex: \", ExamsDoneFilter);\n    return (\n      <div className=\"bg-white px-2 py-2\">\n        <div className=\"bg-gray-100 rounded px-2 py-2\">\n          <div className=\"flex flex-row items-center justify-between text-xl mb-3 mx-2\">\n            <span className=\"font-bold \">Completed exams</span>\n            <span className=\"font-bold bg-white text-gray-600 rounded-full px-2 text-base border border-gray-200\">\n              {this.props.selectedPosition !== null &&\n                this.props.selectedExams !== null &&\n                this.props.loadingExams === false &&\n                ExamsDoneFilter.length}\n            </span>\n          </div>\n          <div className=\"flex flex-col gap-2\">\n            {this.props.selectedPosition === null ||\n            this.props.selectedExams === null ||\n            this.props.loadingExams === true ? (\n              <Loading />\n            ) : ExamsDoneFilter.length === 0 ? (\n              <div className=\"border border-gray-200 text-gray-400 font-bold rounded-md px-3 py-3 text-center\">\n                <div className=\"flex justify-center items-center w-full text-4xl\">\n                  <IoMdInformationCircleOutline />\n                </div>\n                <div className=\"text-gray-500\">No exams found!</div>\n              </div>\n            ) : (\n              ExamsDoneFilter.map((item, i) => (\n                <div key={i + 1} className={`px-3 py-2 rounded group bg-white`}>\n                  <div className=\"grid md:grid-cols-12 gap-2\">\n                    {/* First col */}\n                    <div className=\"col-span-12 md:col-span-6 lg:col-span-4 flex fex-row items-center gap-3\">\n                      {this.props.candidateExam.user_exams_done.find(\n                        (itm) => itm.course === item.course_id\n                      ) !== undefined &&\n                        this.props.candidateExam.user_exams_done.find(\n                          (itm) => itm.course === item.course_id\n                        )?.user_status === UserExamStatus.Editing && (\n                          <div className=\"flex flex-row gap-2 items-center\">\n                            <div\n                              className={`text-gray-300 flex flex-row items-center gap-2 text-right ml-2`}\n                            >\n                              <HiInformationCircle className=\"text-4xl\" />\n                            </div>\n                          </div>\n                        )}\n                      {this.props.candidateExam.user_exams_done.find(\n                        (itm) => itm.course === item.course_id\n                      ) !== undefined &&\n                        this.props.candidateExam.user_exams_done.find(\n                          (itm) => itm.course === item.course_id\n                        )?.user_status === UserExamStatus.Done && (\n                          <div className=\"flex flex-row gap-2 items-center\">\n                            <div\n                              className={`text-blue-600 flex flex-row items-center gap-2 text-right ml-2`}\n                            >\n                              <MdCheckCircle className=\"text-4xl\" />\n                            </div>\n                          </div>\n                        )}\n                      {this.props.candidateExam.user_exams_done.find(\n                        (itm) => itm.course === item.course_id\n                      ) !== undefined &&\n                        this.props.candidateExam.user_exams_done.find(\n                          (itm) => itm.course === item.course_id\n                        )?.user_status === UserExamStatus.Removed && (\n                          <div className=\"flex flex-row gap-2 items-center\">\n                            <div\n                              className={`text-gray-300 flex flex-row items-center gap-2 text-right ml-2`}\n                            >\n                              <MdCheckCircle className=\"text-4xl\" />\n                            </div>\n                          </div>\n                        )}\n                      {this.props.candidateExam.user_exams_done.find(\n                        (itm) => itm.course === item.course_id\n                      ) !== undefined &&\n                        this.props.candidateExam.user_exams_done.find(\n                          (itm) => itm.course === item.course_id\n                        )?.user_status === UserExamStatus.Paused && (\n                          <div className=\"flex flex-row gap-2 items-center\">\n                            <div\n                              className={`text-gray-300 flex flex-row items-center gap-2 text-right ml-2`}\n                            >\n                              <MdPauseCircleFilled className=\"text-4xl\" />\n                            </div>\n                          </div>\n                        )}\n                      {this.props.candidateExam.user_exams_done.find(\n                        (itm) => itm.course === item.course_id\n                      ) === undefined &&\n                        this.props.findExam(item.course_id) !== null &&\n                        this.props.findExam(item.course_id)?.id !==\n                          undefined && (\n                          <div className=\"flex flex-row gap-2 items-center\">\n                            <div\n                              className={`text-blue-600 flex flex-row items-center gap-2 text-right ml-2 animate-ping`}\n                            >\n                              <HiInformationCircle className=\"text-4xl\" />\n                            </div>\n                          </div>\n                        )}\n                      {this.props.candidateExam.user_exams_done.find(\n                        (itm) => itm.course === item.course_id\n                      ) === undefined &&\n                        (this.props.findExam(item.course_id) === null ||\n                          this.props.findExam(item.course_id)?.id ===\n                            undefined) && (\n                          <div className=\"flex flex-row gap-2 items-center\">\n                            <div\n                              className={`text-gray-300 group-hover:text-white flex flex-row items-center gap-2 text-right ml-2`}\n                            >\n                              <RiCheckboxBlankCircleFill className=\"text-4xl\" />\n                            </div>\n                          </div>\n                        )}\n                      <div className=\"flex flex-col\">\n                        <div className={`font-bold text-gray-600 truncate`}>\n                          {item.course_name}\n                        </div>\n                        <div className=\"flex flex-row justify-start items-center gap-2\">\n                          <span className=\"text-gray-500 text-xs\">\n                            Exam date:{\" \"}\n                          </span>\n                          <div className=\"flex flex-row items-center gap-2\">\n                            <span className=\"font-bold text-gray-800 text-sm\">\n                              {DATE(\n                                this.props.findExam(item.course_id)!.exam_date,\n                                \"DD/MM/YYYY\"\n                              )}\n                            </span>\n                            <span\n                              className={`bg-gray-100 text-gray-800 font-bold px-2 py-1 rounded-full text-sm`}\n                            >\n                              {this.props.findExam(item.course_id)!.start_time}\n                            </span>\n                            <span\n                              className={`bg-gray-100 text-gray-800 font-bold px-2 py-1 rounded-full text-sm underline`}\n                            >\n                              {this.props.candidateExam.user_exams_done.find(\n                                (x) => x.course === item.course_id\n                              ) !== undefined\n                                ? validateExamDate(\n                                    this.props.candidateExam.user_exams_done.find(\n                                      (x) => x.course === item.course_id\n                                    )!.exam_date,\n                                    this.props.candidateExam.user_exams_done.find(\n                                      (x) => x.course === item.course_id\n                                    )!.exam_start_time,\n                                    this.props.candidateExam.user_exams_done.find(\n                                      (x) => x.course === item.course_id\n                                    )!.exam_end_time\n                                  ) === ExamTimeStatus.Expired &&\n                                  (this.props.candidateExam.user_exams_done.find(\n                                    (x) => x.course === item.course_id\n                                  )?.user_status === UserExamStatus.Editing\n                                    ? \"Not submitted\"\n                                    : this.props.candidateExam.user_exams_done.find(\n                                        (x) => x.course === item.course_id\n                                      )?.user_status === UserExamStatus.Paused)\n                                  ? \"Paused\"\n                                  : this.props.candidateExam.user_exams_done.find(\n                                      (x) => x.course === item.course_id\n                                    )?.user_status\n                                : \"\"}\n                            </span>\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                    {/* Second col */}\n                    <div className=\"col-span-12 md:col-span-6 lg:col-span-4 flex flex-col items-start justify-center\">\n                      {this.props.selectedExams === null ? (\n                        \"\"\n                      ) : this.props.selectedExams.find(\n                          (itm) => itm.course_id === item.course_id\n                        ) !== undefined ? (\n                        <>\n                          <div className=\"flex flex-row justify-start items-center gap-2\">\n                            <span className=\"text-gray-500 text-xs\">\n                              Proctoring type:{\" \"}\n                            </span>\n                            <span className=\"text-gray-700 font-bold text-sm\">\n                              {this.props.selectedExams === null\n                                ? \"\"\n                                : this.props.selectedExams.find(\n                                    (itm) => itm.course_id === item.course_id\n                                  ) !== undefined &&\n                                  this.props.selectedExams.find(\n                                    (itm) => itm.course_id === item.course_id\n                                  )?.proctoring_type}\n                            </span>\n                          </div>\n                          <div className=\"flex flex-col justify-center items-start gap-2\">\n                            {/* <span className=\"text-gray-500 text-xs\">\n                              Exam location:{\" \"}\n                            </span> */}\n                            <span className={`text-gray-700 font-bold text-sm`}>\n                              Center:{\" \"}\n                              {this.props.selectedExams === null ? (\n                                \"\"\n                              ) : this.props.selectedExams.find(\n                                  (itm) => itm.course_id === item.course_id\n                                ) !== undefined ? (\n                                this.props.selectedExams.find(\n                                  (itm) => itm.course_id === item.course_id\n                                )?.center_name\n                              ) : (\n                                <span className=\"italic text-xs\">\n                                  No location selected\n                                </span>\n                              )}\n                            </span>\n                            <span className={`text-gray-700 font-bold text-sm`}>\n                              Room:{\" \"}\n                              {this.props.selectedExams === null ? (\n                                \"\"\n                              ) : this.props.selectedExams.find(\n                                  (itm) => itm.course_id === item.course_id\n                                ) !== undefined ? (\n                                this.props.selectedExams.find(\n                                  (itm) => itm.course_id === item.course_id\n                                )?.room_number === 0 ? (\n                                  <span className=\"bg-yellow-100 text-yellow-700 font-bold px-2 py-1 rounded\">\n                                    Waiting room, you are advised to choose\n                                    another center\n                                  </span>\n                                ) : (\n                                  <span className=\"text-blue-600 bg-blue-100 px-2 py-1 rounded\">\n                                    No:{\" \"}\n                                    {\n                                      this.props.selectedExams.find(\n                                        (itm) =>\n                                          itm.course_id === item.course_id\n                                      )?.room_number\n                                    }\n                                  </span>\n                                )\n                              ) : (\n                                <span className=\"italic text-xs\">\n                                  No location selected\n                                </span>\n                              )}\n                            </span>\n                          </div>\n                        </>\n                      ) : (\n                        <div className=\"flex flex-row gap-2 items-center justify-start\">\n                          <RiErrorWarningLine className=\"text-xl text-yellow-700\" />\n                          <span className=\"text-yellow-700 italic text-sm\">\n                            No location selected\n                          </span>\n                        </div>\n                      )}\n                    </div>\n                    {/* Third col */}\n                    <div className=\"col-span-12 md:col-span-12 lg:col-span-4 items-center justify-start lg:justify-end\">\n                      {this.props.selectedExams === null ? (\n                        \"\"\n                      ) : this.props.selectedExams.find(\n                          (itm) => itm.course_id === item.course_id\n                        ) !== undefined ? (\n                        <div className=\"flex flex-row justify-start md:justify-end items-center gap-2\">\n                          {this.props.loadingExams === true ||\n                          this.props.loadingExamsDone === true ? (\n                            <div className=\"text-gray-500 font-bold bg-gray-100 text-sm rounded px-3 py-2\">\n                              Checking...\n                            </div>\n                          ) : (\n                            this.props.candidateExam.user_exams_done.find(\n                              (itm) => itm.course === item.course_id\n                            ) === undefined && (\n                              <div\n                                onClick={() => {\n                                  this.setState({\n                                    selectedCourse: item,\n                                    centersModal: true,\n                                  });\n                                  this.props.setMaxExamModal(true);\n                                }}\n                                className=\"btn text-blue-600 border border-white cursor-pointer group-hover:bg-blue-600 hover:bg-blue-800 group-hover:text-white bg-blue-100 text-sm w-40 text-center\"\n                              >\n                                Change location\n                              </div>\n                            )\n                          )}\n                        </div>\n                      ) : (\n                        <div className=\"flex flex-row justify-start md:justify-end items-center gap-2\">\n                          {this.props.candidateExam.user_exams_done.find(\n                            (itm) => itm.course === item.course_id\n                          ) === undefined && (\n                            <div\n                              onClick={() =>\n                                this.setState({\n                                  selectedCourse: item,\n                                  centersModal: true,\n                                })\n                              }\n                              className=\"btn cursor-pointer bg-yellow-700 hover:bg-yellow-50 border border-yellow-700 hover:text-yellow-700 text-white text-sm w-36 text-center\"\n                            >\n                              Choose location\n                            </div>\n                          )}\n                        </div>\n                      )}\n                      {this.props.candidateExam.user_exams_done.find(\n                        (itm) => itm.course === item.course_id\n                      ) !== undefined && (\n                        // this.props.candidateExam.user_exams_done.find(\n                        //   (itm) => itm.course === item.course_id\n                        // )?.user_status !== UserExamStatus.Editing &&\n                        <div className=\"flex flex-row gap-2 items-center justify-end h-full\">\n                          <div\n                            className={`text-blue-600 flex flex-row items-center gap-2 text-right ml-2`}\n                          >\n                            <div className=\"flex flex-col gap-0\">\n                              <span className=\"text-sm\">Marks</span>\n                              <span className=\"text-lg font-bold -mt-1\">\n                                {this.props.candidateExam.user_exams_done\n                                  .find((itm) => itm.course === item.course_id)\n                                  ?.total_marks.toFixed(2)}\n                                %\n                              </span>\n                            </div>\n                            <div\n                              onClick={() =>\n                                this.viewMarksDetailsFn(\n                                  this.props.candidateExam.user_exams_done.find(\n                                    (itm) => itm.course === item.course_id\n                                  )!\n                                )\n                              }\n                              className=\"btn bg-blue-100 hover:bg-blue-200 cursor-pointer text-blue-700 hover:text-blue-900\"\n                            >\n                              Details\n                            </div>\n                          </div>\n                        </div>\n                      )}\n                    </div>\n                  </div>\n                </div>\n              ))\n            )}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default ExamsDone;\n","import React, { Component } from \"react\";\n\nimport { Fragment } from \"react\";\nimport { MdClose, MdHistory } from \"react-icons/md\";\nimport { Link, Redirect } from \"react-router-dom\";\nimport ChooseExamCenter, {\n  LocationTableInterface,\n} from \"../Application/ExamCenter/ChooseExamCenter\";\nimport { connect } from \"react-redux\";\nimport {\n  Auth,\n  loadExam,\n  examDataInterface,\n  PrepareExamsStoreInterface,\n  loadExamsList,\n  LocationsDataStoreInterface,\n  loadAllLocationsData,\n  setSelectedLocationData,\n  applicationPeriodsStoreInterface,\n  loadApplicationPeriods,\n  candidateExamStoreInterface,\n  setSelectedCandidateExam,\n  courseStoreInterface,\n  loadCourses,\n  setSelectedCourse,\n  InitializeExamDetails,\n  InitialExamDetails,\n  setSelectedPeriod,\n  setSelectedPosition,\n  positionsStoreInterface,\n  loadExamsDone,\n} from \"../../actions\";\nimport { StoreState } from \"../../reducers\";\nimport Loading from \"../../components/Loading/Loading\";\nimport {\n  ExamInterface,\n  examStatus,\n  UserExamStatus,\n} from \"../../interfaces/exam\";\nimport {\n  CandidateClaimInterface,\n  course,\n  PlansTypeKeys,\n  PositionAPI,\n  PositionAPICourse,\n} from \"../../interfaces/index\";\nimport {\n  applicationExamAPI,\n  applicationHistory,\n  ApplicationPeriodGet,\n  ApplicationStates,\n  GetApplicationsAPI,\n} from \"../../interfaces/application\";\nimport { sentExamInterface } from \"../Application/ExamCenter/ExamCenter\";\nimport { BsFileEarmarkText } from \"react-icons/bs\";\nimport { IoMdTrash } from \"react-icons/io\";\nimport ApplicationHistory from \"./ApplicationHistory/ApplicationHistory\";\nimport ExamDetails from \"./ExamDetails/ExamDetails\";\nimport { CheckIfExamDone, findTotalMarks } from \"../../utils/question_bank\";\nimport PreparedExams from \"./ExamStatus/PreparedExams\";\nimport ActiveExams from \"./ExamStatus/ActiveExams\";\nimport ExamsDone from \"./ExamStatus/ExamsDone\";\nimport { IoHandLeftSharp } from \"react-icons/io5\";\nimport { isClaimAllowed } from \"../Claimings/Candidate/ClaimForm\";\nimport ClaimFormComponent from \"../../components/ClaimForm/ClaimFormComponent\";\nimport { ClaimingReducerType } from \"../../reducers/claiming\";\nimport { getMyClaims } from \"../../actions/claiming\";\nimport { ExamDoneDetailsAnswers } from \"../CandidateExams/CandidateExams\";\nimport CandidateAnswersDetails from \"../../components/AnswersDetails/CandidateAnswersDetails\";\n\ninterface PostExamsProps {\n  doExam: examDataInterface;\n  auth: Auth;\n  loadExam: (user_id: string, exam: ExamInterface) => void;\n  selectedPosition: PositionAPI;\n  selectedExams: applicationExamAPI[] | null;\n  selected_application: string | null;\n  updateLocation: (application_id: string, exams: sentExamInterface[]) => void;\n  changeLocationError: string | null;\n  loading: boolean;\n  incrementIncomplete: () => void;\n  applicationHistory: applicationHistory[] | undefined;\n  deleteApplication: (id: string) => void;\n  selectedApplicationDetails: GetApplicationsAPI | null;\n  locationsData: LocationsDataStoreInterface;\n  loadAllLocationsData: (callback: (loading: boolean) => void) => void;\n  setSelectedLocationData: (locationData: LocationTableInterface) => void;\n  periods: applicationPeriodsStoreInterface;\n  loadApplicationPeriods: (callback: (loading: boolean) => void) => void;\n  candidateExam: candidateExamStoreInterface;\n  setSelectedCandidateExam: (exam_id: string) => void;\n  course: courseStoreInterface;\n  loadCourses: (callback: (loading: boolean) => void) => void;\n  setSelectedCourse: (course: course | null) => void;\n  InitializeExamDetails: (\n    periodId: string,\n    courseId: string,\n    district_id: string,\n    center_id: string,\n    room_id: string,\n    position_id: string,\n    callback: (loading: boolean) => void\n  ) => void;\n  setSelectedPeriod: (period: ApplicationPeriodGet) => void;\n  positions: positionsStoreInterface;\n  setSelectedPosition: (position: PositionAPI) => void;\n  loadExamsDone: (\n    periodId: string,\n    userId: string,\n    callback: (loading: boolean) => void\n  ) => void;\n  setMaxExamModal: (status: boolean) => void;\n  setDisplayDetailsModal: (status: boolean) => void;\n  claiming: ClaimingReducerType;\n  getMyClaims: Function;\n}\ninterface PostExamsState {\n  appointmentDetailsModal: {\n    status: boolean;\n    item: InitialExamDetails | null;\n  };\n  redirect: boolean;\n  displayResults: boolean;\n  changeLocation: {\n    status: boolean;\n    location: ExamInterface | null;\n  };\n  centersModal: boolean;\n  selectedCourse: course | null;\n  selectedLocation: applicationExamAPI | null;\n  applicationHistoryState: boolean;\n  loading: boolean;\n  loadingExams: boolean;\n  loadingExamsDone: boolean;\n  claim: boolean;\n  selectedExamDetails: ExamDoneDetailsAnswers | null;\n}\n\nclass _PostExams extends Component<PostExamsProps, PostExamsState> {\n  constructor(props: PostExamsProps) {\n    super(props);\n\n    this.state = {\n      appointmentDetailsModal: {\n        status: false,\n        item: null,\n      },\n      redirect: false,\n      displayResults: false,\n      changeLocation: {\n        status: false,\n        location: null,\n      },\n      centersModal: false,\n      selectedCourse: null,\n      selectedLocation: null,\n      applicationHistoryState: false,\n      loading: false,\n      loadingExams: false,\n      loadingExamsDone: true,\n      claim: false,\n      selectedExamDetails: null,\n    };\n  }\n\n  renderExam = (user_id: string, exam: ExamInterface) => {\n    exam.status = examStatus.Editing;\n    this.props.loadExam(user_id, exam);\n    this.setState({ redirect: true });\n  };\n\n  setClaim = (status: boolean) => {\n    this.setState({ claim: status });\n  };\n\n  closeModal = () => {\n    this.setState({ centersModal: false });\n    this.props.setMaxExamModal(false);\n  };\n\n  updateLocationFunction = (exams: sentExamInterface[]) => {\n    if (this.props.selected_application !== null) {\n      this.props.updateLocation(this.props.selected_application, exams);\n    }\n  };\n\n  setLoading = (status: boolean) => {\n    this.setState({ loading: status });\n  };\n  setLoadingExams = (status: boolean) => {\n    this.setState({ loadingExams: status });\n  };\n  setLoadingExamsDone = (status: boolean) => {\n    this.setState({ loadingExamsDone: status });\n  };\n\n  numberOfIncomplete = (\n    exams: sentExamInterface[],\n    courses: {\n      course_name: string;\n      course_code: string;\n      description: string;\n      school_levels: string[];\n      course_id: string;\n    }[]\n  ) => {\n    let count: number = 0;\n    for (let i in courses) {\n      if (\n        exams.filter((item) => item.course_id === courses[i].course_id)\n          .length === 0\n      ) {\n        count = count + 1;\n      }\n    }\n    return count;\n  };\n\n  findLocation = (\n    course_id: string,\n    course_name: string,\n    course_code: string,\n    location: LocationTableInterface,\n    exam_id: string\n  ) => {\n    return this.updateLocationFunction([\n      {\n        course_id: course_id,\n        proctoring_type: \"Center\",\n        center_id: location.center_id,\n        district_id: location.district_id,\n      },\n    ]);\n  };\n\n  findExam = (courseId: string) => {\n    if (this.props.candidateExam.user_exams_temp !== null) {\n      let current_temp = this.props.candidateExam.user_exams_temp.find(\n        (itm) => itm.course === courseId\n      );\n      let testDone = this.props.candidateExam.user_exams_done.find(\n        (itm) => itm.course === courseId\n      );\n      if (\n        current_temp !== undefined &&\n        (testDone === undefined ||\n          testDone.user_status === UserExamStatus.Editing ||\n          testDone.user_status === UserExamStatus.Paused ||\n          testDone.user_status === UserExamStatus.Done ||\n          testDone.user_status === UserExamStatus.Removed)\n      ) {\n        return current_temp;\n      }\n    }\n    return null;\n  };\n\n  findCourse = (course_id: string): applicationExamAPI | null => {\n    if (this.props.selectedExams !== null) {\n      let x: applicationExamAPI | null | undefined =\n        this.props.selectedExams.find(\n          (itm) =>\n            this.state.appointmentDetailsModal && itm.course_id === course_id\n        );\n      if (x !== undefined && x !== null) {\n        return x;\n      }\n    }\n    return null;\n  };\n\n  pendingCourses = () => {\n    let count = 0;\n    for (let course of this.props.selectedPosition.courses) {\n      if (this.props.candidateExam.user_exams_temp !== null) {\n        // let current_temp = this.props.candidateExam.user_exams_temp.find(itm => itm.course === course.course_id);\n        let testDone = this.props.candidateExam.user_exams_done.find(\n          (itm) => itm.course === course.course_id\n        );\n        if (testDone === undefined) {\n          count = count + 1;\n        }\n      }\n    }\n    return count;\n  };\n\n  changeLocation = (item: PositionAPICourse) => {\n    this.setState({ selectedCourse: item, centersModal: true });\n    this.props.setMaxExamModal(true);\n  };\n\n  InitializationFn = () => {\n    if (\n      this.props.periods.selected_period !== null &&\n      this.props.selectedPosition !== null\n    ) {\n      this.props.loadExamsDone(\n        this.props.periods.selected_period.session_plan_id,\n        this.props.auth.user.user_id,\n        this.setLoadingExamsDone\n      );\n      // if (this.state.loadingExamsDone === false) {\n      for (let course of this.props.selectedPosition.courses) {\n        let testDone = this.props.candidateExam.user_exams_temp.find(\n          (itm) => itm.course === course.course_id\n        );\n        if (testDone === undefined) {\n          let center_id = this.props.selectedExams?.find(\n            (itm) => itm.course_id === course.course_id\n          );\n          if (center_id !== undefined) {\n            this.props.InitializeExamDetails(\n              this.props.periods.selected_period.session_plan_id,\n              course.course_id,\n              center_id.district_id,\n              center_id.center_id,\n              center_id.room_id,\n              this.props.selectedPosition.position_id,\n              this.setLoadingExams\n            );\n          }\n        }\n      }\n      // }\n    }\n  };\n\n  componentDidMount = () => {\n    this.props.loadApplicationPeriods(this.setLoading);\n    if (\n      this.props.course.courses === null ||\n      this.props.course.courses.length === 0\n    ) {\n      this.props.loadCourses(this.setLoading);\n    }\n    this.InitializationFn();\n    if (this.props.doExam.exam_answers) {\n      if (this.props.doExam.exam_answers.status === examStatus.Editing) {\n        this.setState({ redirect: true });\n      }\n    }\n    if (\n      this.props.claiming.myClaims === null &&\n      this.props.periods.selected_period !== null\n    ) {\n      this.props.getMyClaims(\n        this.props.auth.user.user_id,\n        this.props.periods.selected_period.session_plan_id,\n        (status: boolean, msg: string, data?: CandidateClaimInterface[]) => {\n          this.setState({ loading: status });\n          if (msg !== \"\") {\n            alert(msg);\n          }\n        }\n      );\n    }\n  };\n\n  render() {\n    if (this.props.candidateExam.selected_exam_id !== null) {\n      return <Redirect to=\"/do-exam\" />;\n    }\n    if (this.state.redirect === true) {\n      return <Redirect to=\"/do-exam\" />;\n    }\n    if (\n      this.props.loading === true ||\n      this.state.loadingExams === true ||\n      this.state.loadingExamsDone === true\n    ) {\n      return (\n        <div className=\"bg-white border my-4 mx-4 rounded px-4 py-4 flex flex-col\">\n          <span className=\"mx-4 animate-pulse\">Loading, Please wait...</span>\n          <Loading />\n        </div>\n      );\n    }\n    return this.props.selectedExams === null ? (\n      \"No result found!\"\n    ) : (\n      <Fragment>\n        {this.state.selectedExamDetails !== null ? (\n          <>\n            <div className=\"animate__animated animate__fadeInUp animate__faster mt-2 mx-2 rounded-t-md border border-blue-300\">\n              <div className=\"flex flex-row gap-4 items-center justify-between bg-blue-100 py-2 px-2 mb-2\">\n                <div className=\"flex flex-col w-full\">\n                  <div className=\"flex flex-row gap-2 items-center justify-between w-full pl-2\">\n                    <span className=\"font-bold text-xl text-gray-800\">\n                      Exam answers details\n                    </span>\n                    <div className=\"bg-white hover:text-yellow-700 hover:bg-white rounded-full p-1 h-10 w-10 border-2 border-white hover:border-yellow-600 flex items-center justify-center\">\n                      <MdClose\n                        className=\"cursor-pointer font-extrabold text-3xl\"\n                        onClick={() => {\n                          this.setState({\n                            selectedExamDetails: null,\n                          });\n                        }}\n                      />\n                    </div>\n                  </div>\n                </div>\n              </div>\n              <CandidateAnswersDetails\n                exam_id={this.state.selectedExamDetails}\n                showAnswers={false}\n              />\n            </div>\n          </>\n        ) : this.state.appointmentDetailsModal.status === true &&\n          this.state.appointmentDetailsModal.item !== null ? (\n          <>\n            <div className=\"animate__animated animate__fadeInUp animate__faster mt-2 mx-2 rounded-t-md border border-blue-300\">\n              <div className=\"flex flex-row gap-4 items-center justify-between bg-blue-100 py-2 px-2 mb-2\">\n                <div className=\"flex flex-row gap-2 items-center justify-between w-full pl-2\">\n                  <span className=\"font-bold text-xl text-gray-800\">\n                    Exam:{\" \"}\n                    {this.state.appointmentDetailsModal.item !== null && (\n                      <>\n                        {\n                          this.findCourse(\n                            this.state.appointmentDetailsModal.item!.course\n                          )?.course_name\n                        }\n                      </>\n                    )}\n                  </span>\n                  <div className=\"bg-white hover:text-yellow-700 hover:bg-white rounded-full p-1 h-10 w-10 border-2 border-white hover:border-yellow-600 flex items-center justify-center\">\n                    <MdClose\n                      className=\"cursor-pointer font-extrabold text-3xl\"\n                      onClick={() =>\n                        this.setState({\n                          appointmentDetailsModal: {\n                            status: false,\n                            item: null,\n                          },\n                          displayResults: false,\n                        })\n                      }\n                    />\n                  </div>\n                </div>\n              </div>\n              {this.findExam(this.state.appointmentDetailsModal.item.course) ===\n              null ? (\n                <div className=\"text-yellow-700 font-bold text-center text-3xl bg-yellow-50 border border-yellow-200 rounded px-4 py-4 mx-4 my-4\">\n                  No exam found for selected course\n                </div>\n              ) : this.props.periods.applicationPeriods &&\n                (this.props.periods.applicationPeriods.find(\n                  (itm) =>\n                    this.state.appointmentDetailsModal.item &&\n                    itm.session_plan_id ===\n                      this.state.appointmentDetailsModal.item.period\n                )?.is_active === false ||\n                  this.props.periods.applicationPeriods.find(\n                    (itm) =>\n                      this.state.appointmentDetailsModal.item &&\n                      itm.session_plan_id ===\n                        this.state.appointmentDetailsModal.item.period\n                  )?.is_active === undefined) ? (\n                <div className=\"text-yellow-700 font-bold text-center text-3xl bg-yellow-50 border border-yellow-200 rounded px-4 py-4 mx-4 my-4 flex flex-col items-center\">\n                  <div>No exam for the selected period</div>\n                  <div\n                    onClick={() =>\n                      this.props.loadApplicationPeriods(this.setLoading)\n                    }\n                    className=\"btn bg-white text-gray-700 w-max text-base border border-gray-700 mt-4 cursor-pointer\"\n                  >\n                    Reload\n                  </div>\n                </div>\n              ) : (\n                <ExamDetails\n                  locationDetails={this.props.selectedExams.find(\n                    (itm) =>\n                      this.state.appointmentDetailsModal.item &&\n                      itm.course_id ===\n                        this.state.appointmentDetailsModal.item.course\n                  )}\n                  examDetails={this.findExam(\n                    this.state.appointmentDetailsModal.item.course\n                  )}\n                  locationsData={this.props.locationsData}\n                  loadAllLocationsData={this.props.loadAllLocationsData}\n                  setSelectedLocationData={this.props.setSelectedLocationData}\n                  periods={this.props.periods}\n                  loadApplicationPeriods={this.props.loadApplicationPeriods}\n                  candidateExam={this.props.candidateExam}\n                  setSelectedCandidateExam={this.props.setSelectedCandidateExam}\n                />\n              )}\n            </div>\n          </>\n        ) : this.state.centersModal === true &&\n          this.state.selectedCourse !== null ? (\n          <div className=\"animate__animated animate__fadeInUp animate__faster mt-2 mx-2 rounded-t-md border border-blue-300\">\n            <div className=\"flex flex-row gap-4 items-center justify-between bg-blue-100 py-2 px-2 mb-2\">\n              <div className=\"flex flex-col w-full\">\n                <div className=\"flex flex-row gap-2 items-center justify-between w-full pl-2\">\n                  <span className=\"font-bold text-xl text-gray-800\">\n                    Change exam location\n                  </span>\n                  <div className=\"bg-white hover:text-yellow-700 hover:bg-white rounded-full p-1 h-10 w-10 border-2 border-white hover:border-yellow-600 flex items-center justify-center\">\n                    <MdClose\n                      className=\"cursor-pointer font-extrabold text-3xl\"\n                      onClick={() => {\n                        this.setState({\n                          centersModal: false,\n                          selectedCourse: null,\n                        });\n                      }}\n                    />\n                  </div>\n                </div>\n              </div>\n            </div>\n            <ChooseExamCenter\n              positionCourses={this.state.selectedCourse}\n              addLocation={this.findLocation}\n              closeModal={this.closeModal}\n            />\n          </div>\n        ) : this.state.applicationHistoryState === true ? (\n          this.props.applicationHistory === undefined ? (\n            <div className=\"text-yellow-700 font-bold text-2xl text-center\">\n              No application history found!\n            </div>\n          ) : (\n            <div className=\"animate__animated animate__fadeInUp animate__faster bg-white mt-2 mx-2 rounded-t-md border border-blue-300\">\n              <div className=\"flex flex-row gap-4 items-center justify-between bg-blue-100 py-2 px-2\">\n                <div className=\"flex flex-row gap-2 items-center justify-between w-full pl-2\">\n                  <span className=\"font-bold text-xl text-gray-800\">\n                    Application history\n                  </span>\n                  <div className=\"bg-white hover:text-yellow-700 hover:bg-white rounded-full p-1 h-10 w-10 border-2 border-white hover:border-yellow-600 flex items-center justify-center\">\n                    <MdClose\n                      className=\"cursor-pointer font-extrabold text-3xl\"\n                      onClick={() =>\n                        this.setState({ applicationHistoryState: false })\n                      }\n                    />\n                  </div>\n                </div>\n              </div>\n              <ApplicationHistory\n                applicationHistory={this.props.applicationHistory}\n              />\n            </div>\n          )\n        ) : (\n          <div className=\"\">\n            <div className=\"px-2 md:py-2\">\n              <div className=\"flex flex-col md:flex-row justify-between items-center md:items-center\">\n                <div className=\"flex flex-row items-center gap-3 mb-3 pt-4 lg:pt-0\">\n                  <span className=\"bg-blue-50  text-gray-600 font-base rounded-md px-3 py-1 mt-0\">\n                    Status:{\" \"}\n                    <span className=\"font-extrabold text-blue-700 underline\">\n                      {\n                        this.props.selectedApplicationDetails\n                          ?.application_status\n                      }\n                    </span>\n                  </span>\n                  <div\n                    onClick={() =>\n                      this.setState({ applicationHistoryState: true })\n                    }\n                    className=\"btn bg-gray-100 text-gray-600 border border-gray-300 text-sm flex flex-row items-center gap-2 cursor-pointer hover:border-blue-500 hover:bg-blue-50 hover:text-blue-600 md:mt-0\"\n                  >\n                    <MdHistory className=\"text-xl\" />\n                    <span>View application history</span>\n                  </div>\n                </div>\n                <div\n                  className={`grid ${\n                    this.pendingCourses() > 0 ? \"grid-cols-3\" : \"grid-cols-2\"\n                  } gap-4 w-full md:w-max bg-gray-100 md:bg-white p-2 md:p-0 rounded mb-2 md:mb-0`}\n                >\n                  <div className=\"col-span-1 flex justify-start md:justify-end\">\n                    <div className=\"flex flex-row items-center\">\n                      <div className=\"flex flex-col\">\n                        <span className=\"text-xs md:text-md text-gray-500 font-bold text-left md:text-right\">\n                          Total\n                        </span>\n                        <span className=\"text-xl md:text-xl font-bold text-gray-700 text-left md:text-right\">\n                          {this.props.selectedExams.length}\n                        </span>\n                      </div>\n                    </div>\n                  </div>\n                  {this.pendingCourses() > 0 && (\n                    <div className=\"col-span-1 flex justify-start md:justify-end\">\n                      <div className=\"flex flex-row items-center\">\n                        <div className=\"flex flex-col\">\n                          <span className=\"text-xs md:text-md text-gray-500 font-bold text-left md:text-right\">\n                            Pending\n                          </span>\n                          <span className=\"text-xl md:text-xl font-bold text-gray-700 text-left md:text-right\">\n                            {this.props.selectedPosition !== null &&\n                              this.pendingCourses()}\n                          </span>\n                        </div>\n                      </div>\n                    </div>\n                  )}\n                  <div className=\"col-span-1 flex justify-start md:justify-end\">\n                    <div className=\"flex flex-row items-center\">\n                      <div className=\"flex flex-col\">\n                        <span className=\"text-xs md:text-md text-gray-500 font-bold text-left md:text-right\">\n                          Total marks\n                        </span>\n                        {\n                          // this.state.loadingExams === true || this.state.loadingExamsDone === true ? <span>Wait...</span> :\n                          <span className=\"text-xl md:text-xl font-bold text-gray-700 text-left md:text-right\">\n                            {parseInt(\n                              findTotalMarks(\n                                this.props.selectedPosition.courses,\n                                this.props.candidateExam.user_exams_done\n                              )\n                            ) > 0\n                              ? (\n                                  parseInt(\n                                    findTotalMarks(\n                                      this.props.selectedPosition.courses,\n                                      this.props.candidateExam.user_exams_done\n                                    )\n                                  ) / this.props.selectedPosition.courses.length\n                                ).toFixed(2)\n                              : 0}\n                            %\n                          </span>\n                        }\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n              <div className=\"font-bold flex flex-col md:flex-row items-start md:items-center justify-start md:justify-between gap-2\">\n                {this.props.selectedApplicationDetails &&\n                this.props.selectedApplicationDetails.application_status !==\n                  ApplicationStates.Rejected ? (\n                  <div className=\"text-xl flex flex-row items-center gap-2\">\n                    <BsFileEarmarkText className=\"text-2xl\" />\n                    <span>Exams list: </span>\n                  </div>\n                ) : (\n                  <div>\n                    {this.state.loadingExams === false &&\n                    this.state.loadingExamsDone === false &&\n                    CheckIfExamDone(\n                      this.props.selectedPosition.courses,\n                      this.props.candidateExam.user_exams_done\n                    ) === false &&\n                    this.props.periods.selected_period &&\n                    this.props.selected_application &&\n                    this.props.claiming.myClaims &&\n                    isClaimAllowed(\n                      this.props.claiming.myClaims,\n                      this.props.periods.selected_period.session_plan_id,\n                      this.props.selected_application\n                    ) === true ? (\n                      <div\n                        onClick={() => this.setClaim(!this.state.claim)}\n                        className=\"btn hidden flex-row gap-2 items-center text-green-700 bg-green-50 cursor-pointer hover:bg-green-100 hover:text-green-900 border border-green-600 hover:border-green-800\"\n                      >\n                        <IoHandLeftSharp className=\"text-xl \" />\n                        <span className=\"text-sm\">Claim now</span>\n                      </div>\n                    ) : this.props.claiming.myClaims === null ? (\n                      <div>Loading...</div>\n                    ) : (\n                      this.props.claiming.myClaims.length > 0 && (\n                        <Link\n                          to=\"claiming-candidate\"\n                          className=\"text-lg font-bold text-blue-600 bg-white hover:bg-blue-100 border border-blue-600 rounded px-3 py-2\"\n                        >\n                          Go to claims list\n                        </Link>\n                      )\n                    )}\n                  </div>\n                )}\n                {this.state.loadingExams === false &&\n                  this.state.loadingExamsDone === false &&\n                  CheckIfExamDone(\n                    this.props.selectedPosition.courses,\n                    this.props.candidateExam.user_exams_done\n                  ) === false && (\n                    <div\n                      onClick={() =>\n                        this.props.selected_application &&\n                        this.props.deleteApplication(\n                          this.props.selected_application\n                        )\n                      }\n                      className=\"btn flex flex-row gap-2 items-center text-red-700 bg-red-50 cursor-pointer hover:bg-red-100 hover:text-red-900\"\n                    >\n                      <IoMdTrash className=\"text-xl \" />\n                      <span className=\"text-sm\">Remove application</span>\n                    </div>\n                  )}\n              </div>\n              {this.state.claim === true &&\n                this.props.selected_application !== null && (\n                  <div className=\"bg-gray-100 mt-4 pt-2 rounded\">\n                    <div className=\"font-bold text-xl px-3 pb-2\">\n                      Submit application claim\n                    </div>\n                    <ClaimFormComponent\n                      setFormState={this.setClaim}\n                      claim_type={PlansTypeKeys.APPLICATION}\n                      file_id={this.props.selected_application}\n                    />\n                  </div>\n                )}\n            </div>\n            {this.props.selectedApplicationDetails &&\n              this.props.selectedApplicationDetails.application_status !==\n                ApplicationStates.Rejected && (\n                <>\n                  <ActiveExams\n                    selectedPosition={this.props.selectedPosition}\n                    selectedExams={this.props.selectedExams}\n                    findExam={this.findExam}\n                    loadingExams={this.state.loadingExams}\n                    loadingExamsDone={this.state.loadingExamsDone}\n                    setMaxExamModal={this.props.setMaxExamModal}\n                    course={this.props.course}\n                    setSelectedCourse={this.props.setSelectedCourse}\n                    candidateExam={this.props.candidateExam}\n                    positions={this.props.positions}\n                    periods={this.props.periods}\n                    setSelectedPosition={this.props.setSelectedPosition}\n                    setSelectedCandidateExam={\n                      this.props.setSelectedCandidateExam\n                    }\n                    selectedApplicationDetails={\n                      this.props.selectedApplicationDetails\n                    }\n                  />\n                  <PreparedExams\n                    selectedPosition={this.props.selectedPosition}\n                    selectedExams={this.props.selectedExams}\n                    findExam={this.findExam}\n                    loadingExams={this.state.loadingExams}\n                    loadingExamsDone={this.state.loadingExamsDone}\n                    setMaxExamModal={this.props.setMaxExamModal}\n                    course={this.props.course}\n                    setSelectedCourse={this.props.setSelectedCourse}\n                    candidateExam={this.props.candidateExam}\n                    positions={this.props.positions}\n                    periods={this.props.periods}\n                    setSelectedPosition={this.props.setSelectedPosition}\n                    setSelectedCandidateExam={\n                      this.props.setSelectedCandidateExam\n                    }\n                    changeLocation={this.changeLocation}\n                    selectedApplicationDetails={\n                      this.props.selectedApplicationDetails\n                    }\n                  />\n                  <ExamsDone\n                    selectedPosition={this.props.selectedPosition}\n                    selectedExams={this.props.selectedExams}\n                    findExam={this.findExam}\n                    loadingExams={this.state.loadingExams}\n                    loadingExamsDone={this.state.loadingExamsDone}\n                    setMaxExamModal={this.props.setMaxExamModal}\n                    course={this.props.course}\n                    setSelectedCourse={this.props.setSelectedCourse}\n                    candidateExam={this.props.candidateExam}\n                    positions={this.props.positions}\n                    periods={this.props.periods}\n                    setSelectedPosition={this.props.setSelectedPosition}\n                    setSelectedCandidateExam={\n                      this.props.setSelectedCandidateExam\n                    }\n                    viewMarksDetails={(\n                      selectedExamDetails: ExamDoneDetailsAnswers\n                    ) => {\n                      this.setState({\n                        selectedExamDetails: selectedExamDetails,\n                      });\n                    }}\n                  />\n                </>\n              )}\n          </div>\n        )}\n      </Fragment>\n    );\n  }\n}\n\nconst mapStateToProps = ({\n  auth,\n  doExam,\n  prepareExam,\n  locationsData,\n  periods,\n  candidateExam,\n  course,\n  positions,\n  claiming,\n}: StoreState): {\n  auth: Auth;\n  doExam: examDataInterface;\n  prepareExam: PrepareExamsStoreInterface;\n  locationsData: LocationsDataStoreInterface;\n  periods: applicationPeriodsStoreInterface;\n  candidateExam: candidateExamStoreInterface;\n  course: courseStoreInterface;\n  positions: positionsStoreInterface;\n  claiming: ClaimingReducerType;\n} => {\n  return {\n    auth: auth,\n    doExam: doExam,\n    prepareExam: prepareExam,\n    locationsData: locationsData,\n    periods: periods,\n    candidateExam: candidateExam,\n    course: course,\n    positions: positions,\n    claiming: claiming,\n  };\n};\n\nconst PostExams = connect(mapStateToProps, {\n  loadExam,\n  loadExamsList,\n  loadAllLocationsData,\n  setSelectedLocationData,\n  loadApplicationPeriods,\n  setSelectedCandidateExam,\n  loadCourses,\n  setSelectedCourse,\n  InitializeExamDetails,\n  setSelectedPeriod,\n  setSelectedPosition,\n  loadExamsDone,\n  getMyClaims,\n})(_PostExams);\n\nexport default PostExams;\n","import React, { Component } from \"react\";\nimport { GetApplicationsAPI } from \"../../interfaces/application\";\nimport { CandidateInterface } from \"../../interfaces/candidatesInterfaces\";\nimport { PlacedCandidateStatus } from \"../../interfaces/marks_publication\";\nimport { UserInfoInterface } from \"../../shared/interfaces\";\n\ninterface CandidatePlacementCheckProps {\n  position: GetApplicationsAPI;\n  user: CandidateInterface;\n}\ninterface CandidatePlacementCheckState {\n  loading: boolean;\n}\ninterface SchoolItemPlacement {\n  _id: string;\n  school_name: string;\n  school_code: string;\n  province_id: string;\n  province_code: string;\n  district_id: {\n    _id: string;\n    district_name: string;\n  };\n  district_code: string;\n  sector_code: string;\n  sector_id: string;\n  school_status: string;\n  status: number;\n  createdAt: string;\n  updatedAt: string;\n}\nexport interface SchoolPlacementInterface {\n  n_id: string;\n  phone_number: string;\n  email: string;\n  user_info: UserInfoInterface;\n  placed: {\n    _id: string;\n    comment: string;\n    status: PlacedCandidateStatus;\n    waiting_list_id: string;\n    user_id: string;\n    school_id: string;\n    district_id: string;\n    position_id: string;\n    request_id: string;\n    createdAt: string;\n    updatedAt: string;\n    school: SchoolItemPlacement;\n    __v: number;\n  };\n}\n\n// interface CandidatePlacementSchool {}\n\nexport class CandidatePlacementCheck extends Component<\n  CandidatePlacementCheckProps,\n  CandidatePlacementCheckState\n> {\n  constructor(props: CandidatePlacementCheckProps) {\n    super(props);\n\n    this.state = {\n      loading: false,\n    };\n  }\n  setLoading = (state: boolean) => {\n    this.setState({ loading: state });\n  };\n\n  render() {\n    return <div>Candidate Placement check</div>;\n  }\n}\n\nexport default CandidatePlacementCheck;\n","import React, { Component, Fragment } from \"react\";\nimport { MdAdd } from \"react-icons/md\";\nimport { Link, Redirect } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport {\n  Auth,\n  initiateApplication,\n  removeLocation,\n  loadApplicationPeriods,\n  applicationPeriodsStoreInterface,\n  setSelectedPeriod,\n  System,\n  PushPopupAlert,\n  positionsStoreInterface,\n  loadAllPositions,\n  FC_Access,\n  CandidateApplicationsStoreInterface,\n  LoadCandidateApplications,\n  candidateExamStoreInterface,\n  InitializeExamDetails,\n  loadExamsDone,\n  setSelectedPosition,\n  setSelectedCourse,\n  courseStoreInterface,\n  setSelectedCandidateExam,\n  examDataInterface,\n  AddUserApplication,\n  RemoveUserApplication,\n  SelectUserApplication,\n} from \"../../actions\";\nimport { StoreState } from \"../../reducers\";\nimport {\n  applicationStoreInterface,\n  initialApplicationInterface,\n} from \"../../actions/application\";\nimport { ApplicationStepsTypes } from \"../Application/ApplicationSteps/ApplicationSteps\";\nimport {\n  applicationExamAPI,\n  ApplicationPeriodGet,\n  ApplicationStates,\n  ApplicationStatesDescription,\n  GetApplicationsAPI,\n  NoRoomsInterface,\n} from \"../../interfaces/application\";\nimport Exams from \"./Exams\";\nimport { course, PositionAPI } from \"../../interfaces/index\";\nimport axios from \"axios\";\nimport { API } from \"../../utils/api\";\nimport { sentExamInterface } from \"../Application/ExamCenter/ExamCenter\";\nimport Loading from \"../../components/Loading/Loading\";\nimport { AiOutlineFilter } from \"react-icons/ai\";\nimport { IoBriefcase, IoBriefcaseOutline } from \"react-icons/io5\";\nimport Modal, { ModalSize, Themes } from \"../../components/Modal/Modal\";\nimport {\n  SideNavigation,\n  MainItem,\n} from \"../../components/Navigation/SideNavigation\";\nimport { BsCaretRightFill } from \"react-icons/bs\";\nimport LoadingV2, { LoadingType } from \"../../components/Loading/LoadingV2\";\nimport { PopupAlertData } from \"../../components/Alert/Popup\";\nimport { PopupAlertTheme } from \"../../interfaces/popupAlert\";\nimport { RiFileForbidLine } from \"react-icons/ri\";\nimport { IoMdList } from \"react-icons/io\";\nimport NoResult, { NoResultThemes } from \"../../components/NoResult/NoResult\";\nimport ApplicationPeriods from \"../../components/ApplicationPeriods/ApplicationPeriods\";\nimport { DATE } from \"../../utils/functions\";\nimport { UserAccessList } from \"../../utils/auth_access\";\nimport { BiArrowBack } from \"react-icons/bi\";\nimport { InitializeExamsDone } from \"../../utils/question_bank\";\nimport { examStatus } from \"../../interfaces/exam\";\nimport CandidatePlacementCheck from \"../../components/CandidatePlacementCheck/CandidatePlacementCheck\";\n\ninterface ApplicationsDashboardState {\n  selectedPosition: PositionAPI | null;\n  selectedExams: applicationExamAPI[] | null;\n  applications: GetApplicationsAPI[] | [] | null;\n  selected_application: string | null;\n  noRoomsApplication: NoRoomsInterface[] | null | [];\n  loading: boolean;\n  applicationError: string | null;\n  number_of_incomplete: number;\n  applicationDetails: boolean;\n  selectedApplicationStatus: ApplicationStates | null;\n  showPeriodFilter: boolean;\n  maxExamModal: boolean;\n  loadingErr: string;\n  displayDetailsModal: boolean;\n  viewSchools: GetApplicationsAPI | null;\n}\ninterface ApplicationsDashboardProps {\n  auth: Auth;\n  application: applicationStoreInterface;\n  periods: applicationPeriodsStoreInterface;\n  initiateApplication: (initial: initialApplicationInterface) => void;\n  removeLocation: (course_id: string) => void;\n  loadApplicationPeriods: (callback: (loading: boolean) => void) => void;\n  setSelectedPeriod: (period: ApplicationPeriodGet) => void;\n  system: System;\n  PushPopupAlert: (alert: PopupAlertData) => void;\n  positions: positionsStoreInterface;\n  loadAllPositions: (callback: (loading: boolean) => void) => void;\n  FC_Access: Function;\n  candidateApplications: CandidateApplicationsStoreInterface;\n  LoadCandidateApplications: (\n    user_id: string,\n    callback: (loading: boolean) => void\n  ) => void;\n  InitializeExamDetails: (\n    periodId: string,\n    courseId: string,\n    district_id: string,\n    center_id: string,\n    room_id: string,\n    position_id: string,\n    callback: (loading: boolean) => void\n  ) => void;\n  loadExamsDone: (\n    periodId: string,\n    userId: string,\n    callback: (loading: boolean) => void\n  ) => void;\n  candidateExam: candidateExamStoreInterface;\n  setSelectedPosition: (position: PositionAPI) => void;\n  course: courseStoreInterface;\n  setSelectedCourse: (course: course | null) => void;\n  setSelectedCandidateExam: (exam_id: string) => void;\n  doExam: examDataInterface;\n  AddUserApplication: (application: GetApplicationsAPI) => void;\n  RemoveUserApplication: (application_id: string) => void;\n  SelectUserApplication: (application: GetApplicationsAPI | null) => void;\n}\n\nclass _ApplicationsDashboard extends Component<\n  ApplicationsDashboardProps,\n  ApplicationsDashboardState\n> {\n  constructor(props: ApplicationsDashboardProps) {\n    super(props);\n\n    this.state = {\n      selectedPosition: null,\n      selectedExams: null,\n      applications: null,\n      selected_application: null,\n      noRoomsApplication: null,\n      loading: false,\n      applicationError: null,\n      number_of_incomplete: 0,\n      applicationDetails: false,\n      selectedApplicationStatus: null,\n      showPeriodFilter: false,\n      maxExamModal: false,\n      loadingErr: \"\",\n      displayDetailsModal: false,\n      viewSchools: null,\n    };\n  }\n\n  setLoading = (state: boolean) => {\n    this.setState({ loading: state });\n  };\n\n  filteredApplications = (\n    applications: GetApplicationsAPI[],\n    Status: ApplicationStates | null,\n    searchPeriod?: ApplicationPeriodGet | null\n  ) => {\n    let appl: GetApplicationsAPI[];\n    if (searchPeriod !== undefined && searchPeriod !== null) {\n      appl = applications.filter(\n        (itm) =>\n          itm.application_session.session_plan_id ===\n          searchPeriod.session_plan_id\n      );\n    } else {\n      appl = applications;\n    }\n    if (Status === null) {\n      return appl;\n    } else {\n      return appl.filter((item) => item.application_status === Status);\n    }\n  };\n\n  closeApplicationDetails = () => {\n    this.setState({ selected_application: null });\n    this.setState({ selectedPosition: null, selected_application: null });\n    this.setState({ selectedExams: null });\n    this.setState({ displayDetailsModal: false });\n  };\n\n  setDisplayDetailsModal = (status: boolean) => {\n    this.setState({ displayDetailsModal: status });\n  };\n\n  applicationStatuses = (\n    application: GetApplicationsAPI[]\n  ): { title: string; count: number; status: ApplicationStates }[] => {\n    let output: { title: string; count: number; status: ApplicationStates }[] =\n      [];\n    for (let i in ApplicationStatesDescription) {\n      output.push({\n        title: ApplicationStatesDescription[i].caption,\n        count: application.filter(\n          (itm) =>\n            itm.application_status === ApplicationStatesDescription[i].key\n        ).length,\n        status: ApplicationStatesDescription[i].key,\n      });\n    }\n    return output;\n  };\n\n  setMaxExamModal = (status: boolean) => {\n    this.setState({ maxExamModal: status });\n  };\n\n  LoadApplications = async () => {\n    this.setState({ loadingErr: \"\" });\n    this.setState({ number_of_incomplete: 0 });\n    if (this.props.auth.user.user_id) {\n      const selected_position = this.state.selectedPosition;\n      this.setState({ applications: null });\n      this.setState({ selectedPosition: null });\n      this.setState({ selectedExams: null });\n      let response: GetApplicationsAPI[] | null = null;\n      if (\n        this.props.candidateApplications.candidate_applications === null &&\n        this.props.auth.user\n      ) {\n        try {\n          const res = await axios.get<GetApplicationsAPI[]>(\n            `${API.APPLICATION}/application/${this.props.auth.user.user_id}`\n          );\n          // console.log(\"Applications list: \", res.data);\n          if (res.status === 200) {\n            response = res.data;\n            if (res.data.length === 0) {\n              response = [];\n            } else {\n              for (let application of response) {\n                this.props.AddUserApplication(application);\n              }\n            }\n          } else {\n            response = [];\n          }\n        } catch (error: any) {\n          response = [];\n          console.log(\"Appl Err: \", { ...error });\n        }\n      } else {\n        response = this.props.candidateApplications.candidate_applications;\n      }\n      this.setState({ applications: response });\n      if (response !== null) {\n        if (response.length > 0) {\n          // let done = false;\n          for (let i in response) {\n            let courses = response[i].position.courses;\n            let exams = response[i].exams;\n            if (\n              response[i].position.position_id ===\n              selected_position?.position_id\n            ) {\n              this.setState({ selectedPosition: response[i].position });\n              this.setState({ selectedExams: exams });\n            }\n            // Load Exams done\n            InitializeExamsDone(\n              this.props.periods.selected_period,\n              response[i].position,\n              this.props.candidateExam,\n              this.props.loadExamsDone,\n              this.props.auth.user.user_id,\n              this.setLoading,\n              response[i].exams,\n              this.props.InitializeExamDetails,\n              this.setLoading\n            );\n            for (let x in courses) {\n              if (\n                exams.filter((itm) => itm.course_id === courses[x].course_id)\n                  .length === 0 &&\n                response[i].application_status === ApplicationStates.Incomplete\n              ) {\n                this.setState({\n                  selected_application: response[i].application_id,\n                });\n                this.setState({\n                  selectedPosition: response[i].position,\n                  selected_application: response[i].application_id,\n                });\n                this.setState({ selectedExams: response[i].exams });\n                this.setState({ displayDetailsModal: true });\n                this.incrementIncomplete();\n              }\n            }\n          }\n        } else {\n          this.props.LoadCandidateApplications(\n            this.props.auth.user.user_id,\n            this.setLoading\n          );\n        }\n      }\n    }\n  };\n\n  updateLocation = async (\n    application_id: string,\n    exams: sentExamInterface[]\n  ) => {\n    this.setState({ loading: true });\n    this.setState({ applicationError: null });\n    console.log(application_id);\n    for (let i in exams) {\n      try {\n        const res = await axios.post(\n          `${API.APPLICATION}/application/updatemissed`,\n          {\n            application_id: application_id,\n            exams: exams[i],\n          }\n        );\n        if (res.status === 200 && this.state.noRoomsApplication !== null) {\n          this.setState({\n            noRoomsApplication: this.state.noRoomsApplication?.filter(\n              (itm) => itm.course_id !== exams[i].course_id\n            ),\n          });\n        }\n        if (res.status === 200) {\n          this.props.LoadCandidateApplications(\n            this.props.auth.user.user_id,\n            this.setLoading\n          );\n          this.LoadApplications();\n          this.setState({ displayDetailsModal: false });\n          this.setState({ selectedPosition: null, selected_application: null });\n          this.setState({ selectedExams: null });\n          this.props.PushPopupAlert({\n            title: `Location updated successfully`,\n            description:\n              \"Location has updated successfully! You can continue to update before starting of the examination!\",\n            theme: PopupAlertTheme.success,\n          });\n        }\n      } catch (error: any) {\n        if (error.response) {\n          if (error.response.data) {\n            if (error.response.data.errors !== undefined) {\n              if (error.response.data.errors.length > 0) {\n                if (this.state.noRoomsApplication) {\n                  let newArr: sentExamInterface[];\n                  if (error.response.data.errors[0].field !== undefined) {\n                    newArr = this.state.noRoomsApplication?.filter(\n                      (itm) =>\n                        itm.course_id ===\n                        error.response.data.errors[0].field.course_id\n                    );\n                    if (newArr !== undefined) {\n                      for (let i in newArr) {\n                        this.props.removeLocation(newArr[i].course_id);\n                      }\n                    }\n                  }\n                }\n                this.setState({\n                  applicationError: error.response.data.errors[0].message,\n                });\n                this.props.PushPopupAlert({\n                  title: error.response.data.errors[0].message,\n                  theme: PopupAlertTheme.danger,\n                });\n              }\n            } else {\n              this.props.PushPopupAlert({\n                title: \"Something went wrong! Please try again\",\n                theme: PopupAlertTheme.danger,\n              });\n              this.setState({\n                applicationError: \"Something went wrong! Please try again\",\n              });\n            }\n          }\n        }\n        console.log(\"Change error: \", { ...error });\n      }\n    }\n    if (this.state.selectedPosition) {\n      this.setState({ selectedPosition: this.state.selectedPosition });\n    }\n    this.setState({ selected_application: application_id });\n    this.setState({ loading: false });\n  };\n\n  incrementIncomplete = () => {\n    this.setState({\n      number_of_incomplete: this.state.number_of_incomplete + 1,\n    });\n  };\n\n  changeLoadingState = (state: boolean) => {\n    this.setState({ loading: state });\n  };\n\n  deleteApplication = async (id: string) => {\n    if (\n      window.confirm(\"Are you sure do you want to delete this application?\") &&\n      id\n    ) {\n      this.changeLoadingState(true);\n      try {\n        await axios.delete(`${API.APPLICATION}/application/${id}`);\n        this.props.RemoveUserApplication(id);\n        this.LoadApplications();\n        this.props.PushPopupAlert({\n          title: `Application deleted successfully!`,\n          theme: PopupAlertTheme.success,\n        });\n        this.setState({ selectedExams: null });\n      } catch (error: any) {\n        this.props.PushPopupAlert({\n          title: `Failed to delete application!`,\n          theme: PopupAlertTheme.warning,\n        });\n      }\n      this.changeLoadingState(false);\n    }\n  };\n\n  setShowFilterStatus = (status: boolean) => {\n    this.setState({ showPeriodFilter: status });\n  };\n\n  componentDidMount = () => {\n    this.props.loadApplicationPeriods(this.changeLoadingState);\n    this.LoadApplications();\n    this.props.loadAllPositions(this.changeLoadingState);\n    if (\n      this.props.application.apply === undefined ||\n      this.props.application.apply.currentStep === ApplicationStepsTypes.Step3\n    ) {\n      this.props.initiateApplication({\n        user_id: this.props.auth.user.user_id,\n        selectedPosition: null,\n        currentStep: ApplicationStepsTypes.Step1,\n        positions: null,\n        doTestStatus: {\n          status: false,\n        },\n        selectedLocation: [],\n      });\n    }\n    // if (this.props.candidateApplications.candidate_applications !== null) {\n    //   if (this.props.candidateApplications.candidate_applications.length > 0) {\n    //     if (this.state.selectedPosition === null) {\n    //       this.setState({ selectedPosition: this.props.candidateApplications.candidate_applications[0].position, selected_application: this.props.candidateApplications.candidate_applications[0].application_id })\n    //     }\n    //     if (this.state.selectedExams === null) {\n    //       this.setState({ selectedExams: this.props.candidateApplications.candidate_applications[0].exams })\n    //     }\n    //   }\n    // }\n  };\n  render() {\n    if (!FC_Access(this.props.auth, UserAccessList.MY_APPLICATION).view) {\n      return <Redirect to=\"/\" />;\n    }\n    if (this.props.candidateExam.selected_exam_id !== null) {\n      return <Redirect to=\"/do-exam\" />;\n    }\n    if (this.props.doExam.exam_answers) {\n      if (\n        this.props.doExam.exam_answers.status === examStatus.Editing ||\n        this.props.doExam.exam_answers.status === examStatus.Paused\n      ) {\n        return <Redirect to=\"/do-exam\" />;\n      }\n    }\n    return (\n      <Fragment>\n        {this.state.selectedPosition !== null &&\n        this.state.selectedExams !== null &&\n        this.state.displayDetailsModal === true ? (\n          <div className=\"border-t border-gray-200 my-2 pb-2 bg-white rounded animate__animated animate__fadeInUp animate__faster -ml-2 mr-1\">\n            <div className=\"flex flex-col md:flex-row gap-4 items-center md:justify-between bg-blue-600 rounded-t py-2 px-2\">\n              <div className=\"flex flex-row gap-4 w-full\">\n                <div>\n                  <div className=\"h-12 w-12 rounded-full bg-blue-500 hover:bg-blue-700 cursor-pointer flex items-center justify-center\">\n                    <BiArrowBack\n                      className=\"text-3xl text-white\"\n                      onClick={() => this.closeApplicationDetails()}\n                    />\n                  </div>\n                </div>\n                <div className=\"flex flex-col w-full\">\n                  <span className=\"font-bold text-xl text-white\">\n                    {this.state.selectedPosition.position_title}\n                  </span>\n                  <span className=\"text-sm text-gray-100 font-normal pl-1\">\n                    {this.props.candidateApplications.candidate_applications &&\n                      this.state.selectedPosition !== null &&\n                      this.props.candidateApplications.candidate_applications.find(\n                        (itm) =>\n                          itm.position.position_id ===\n                          this.state.selectedPosition?.position_id\n                      )?.application_session.session_plan_name}{\" \"}\n                    -{\" \"}\n                    {this.props.candidateApplications.candidate_applications !==\n                      null &&\n                      this.state.selectedPosition !== null &&\n                      this.props.candidateApplications.candidate_applications.find(\n                        (itm) =>\n                          itm.position.position_id ===\n                          this.state.selectedPosition?.position_id\n                      )?.application_session.period}\n                  </span>\n                </div>\n              </div>\n              {this.props.candidateApplications.candidate_applications !==\n                null &&\n              this.props.candidateApplications.candidate_applications.find(\n                (itm) =>\n                  itm.application_id === this.state.selected_application &&\n                  (itm.application_status === ApplicationStates.Shortlisted ||\n                    itm.application_status === ApplicationStates.Pass)\n              ) !== undefined ? (\n                <div\n                  title=\"Choose the Province, Choose the District, etc.\"\n                  className=\"mb-3 md:mb-0\"\n                  onClick={() => {\n                    if (\n                      this.props.candidateApplications\n                        .candidate_applications !== null\n                    ) {\n                      let checkApplication =\n                        this.props.candidateApplications.candidate_applications.find(\n                          (itm) =>\n                            itm.application_id ===\n                            this.state.selected_application\n                        );\n                      if (checkApplication !== undefined) {\n                        this.props.SelectUserApplication(checkApplication);\n                      }\n                    }\n                  }}\n                >\n                  <Link\n                    to=\"/placement-contract\"\n                    className=\"bg-blue-500 px-4 py-3 font-bold rounded-md border-2 border-white text-white hover:bg-blue-800\"\n                  >\n                    Placement\n                  </Link>\n                </div>\n              ) : (\n                <div\n                  title=\"Wait for being shortlisted to fill placement agreement\"\n                  className=\"bg-blue-500 text-blue-300 rounded px-3 py-2 cursor-not-allowed hidden md:block\"\n                >\n                  Placement\n                </div>\n              )}\n            </div>\n            {/* Check application */}\n            <div className=\"bg-gray-100\"></div>\n            <Exams\n              selectedExams={this.state.selectedExams}\n              selectedPosition={this.state.selectedPosition}\n              selected_application={this.state.selected_application}\n              updateLocation={this.updateLocation}\n              changeLocationError={this.state.applicationError}\n              loading={this.state.loading}\n              incrementIncomplete={this.incrementIncomplete}\n              applicationHistory={\n                this.props.candidateApplications.candidate_applications !==\n                  null && this.state.selectedPosition !== null\n                  ? this.props.candidateApplications.candidate_applications.find(\n                      (itm) =>\n                        itm.position.position_id ===\n                        this.state.selectedPosition?.position_id\n                    )?.application_history\n                  : undefined\n              }\n              deleteApplication={this.deleteApplication}\n              selectedApplicationDetails={\n                this.props.candidateApplications.candidate_applications &&\n                this.props.candidateApplications.candidate_applications.find(\n                  (itm) =>\n                    itm.application_id === this.state.selected_application\n                )!\n              }\n              setMaxExamModal={this.setMaxExamModal}\n              setDisplayDetailsModal={this.setDisplayDetailsModal}\n            />\n          </div>\n        ) : (\n          <>\n            <SideNavigation>\n              {this.props.positions.positions_list === null ? (\n                <div className=\"btn bg-gray-500 text-white mb-4 w-full flex flex-row items-center gap-3 cursor-not-allowed animate__animated animate__zoomIn\">\n                  <RiFileForbidLine className=\"text-2xl text-white\" /> Please\n                  wait...\n                </div>\n              ) : this.props.positions.positions_list.length > 0 &&\n                this.props.periods.applicationPeriods &&\n                this.props.periods.applicationPeriods.filter(\n                  (itm) => itm.is_active === true\n                ).length !== 0 ? (\n                <Link to=\"/apply\">\n                  <div className=\"btn btn-blue text-white mb-4 w-full flex flex-row items-center gap-3 animate__animated animate__zoomIn\">\n                    <MdAdd className=\"text-2xl text-white\" /> Apply\n                  </div>\n                </Link>\n              ) : (\n                <div className=\"btn bg-gray-200 cursor-not-allowed text-gray-500 mb-4 w-full flex flex-row items-center animate__animated animate__zoomIn\">\n                  No vacancies!\n                </div>\n              )}\n              {/* <div className=\"mb-6\"></div> */}\n              {/* <Search data={[1, 2, 3]} /> */}\n              <div\n                onClick={() =>\n                  this.setState({ selectedApplicationStatus: null })\n                }\n                className={`cursor-pointer ${\n                  this.state.selectedApplicationStatus !== null\n                    ? \"text-gray-600 hover:text-blue-600 border border-gray-200 hover:border-blue-600 hover:bg-blue-100 bg-white\"\n                    : \"text-blue-600 border border-blue-600 hover:bg-blue-100 bg-blue-100\"\n                } flex flex-row items-center gap-2 px-2 py-1 rounded font-bold`}\n              >\n                <IoMdList className=\"text-xl\" />\n                <span>\n                  View all (\n                  {this.props.candidateApplications.candidate_applications ===\n                  null\n                    ? 0\n                    : this.props.candidateApplications.candidate_applications.filter(\n                        (itm) =>\n                          itm.application_session.session_plan_id ===\n                          this.props.periods.selected_period?.session_plan_id\n                      ).length}\n                  )\n                </span>\n              </div>\n              <div className=\"pt-1\">\n                {this.props.candidateApplications.candidate_applications &&\n                this.filteredApplications(\n                  this.props.candidateApplications.candidate_applications,\n                  null,\n                  this.props.periods.selected_period\n                ) === null ? (\n                  <Loading />\n                ) : (\n                  this.props.candidateApplications.candidate_applications &&\n                  this.applicationStatuses(\n                    this.filteredApplications(\n                      this.props.candidateApplications.candidate_applications,\n                      null,\n                      this.props.periods.selected_period\n                    )\n                  ).map(\n                    (\n                      itm: {\n                        title: string;\n                        count: number;\n                        status: ApplicationStates;\n                      },\n                      i: number\n                    ) =>\n                      itm.count > 0 && (\n                        <Fragment key={itm.title}>\n                          <div\n                            onClick={() =>\n                              this.setState({\n                                selectedApplicationStatus: itm.status,\n                              })\n                            }\n                          >\n                            <MainItem\n                              title={itm.title}\n                              count={itm.count}\n                              active={\n                                this.state.selectedApplicationStatus ===\n                                itm.status\n                                  ? true\n                                  : false\n                              }\n                            />\n                          </div>\n                        </Fragment>\n                      )\n                  )\n                )}\n              </div>\n            </SideNavigation>\n            <div className=\"px-2 -ml-2 lg:ml-0\">\n              <div className=\"mt-2 rounded px-2 md:px-0 py-3 md:py-3\">\n                <div className=\"flex flex-col\">\n                  <div className=\"flex flex-col md:flex-row justify-between md:items-center\">\n                    <div className=\"flex flex-col\">\n                      <span className=\"text-blue-600 text-2xl md:text-2xl lg:text-3xl font-bold\">\n                        My Applications{\" \"}\n                        <span className=\"md:hidden\">\n                          (\n                          {this.props.candidateApplications\n                            .candidate_applications &&\n                          this.filteredApplications(\n                            this.props.candidateApplications\n                              .candidate_applications,\n                            this.state.selectedApplicationStatus,\n                            this.props.periods.selected_period\n                          )\n                            ? this.filteredApplications(\n                                this.props.candidateApplications\n                                  .candidate_applications,\n                                this.state.selectedApplicationStatus,\n                                this.props.periods.selected_period\n                              ).length\n                            : 0}\n                          )\n                        </span>\n                      </span>\n                      <div className=\"text-gray-700 font-bold text-xs md:text-sm lg:text-md flex flex-row gap-1 items-center\">\n                        <AiOutlineFilter className=\"text-2xl\" /> Selected period{\" \"}\n                        <span\n                          onClick={() =>\n                            this.setState({ showPeriodFilter: true })\n                          }\n                          className={`px-2 ${\n                            this.props.periods.selected_period !== null\n                              ? \"text-blue-600 hover:bg-blue-100 border-2 border-gray-200 hover:border-blue-600 underline\"\n                              : \"bg-white text-gray-600 hover:bg-gray-100 border border-gray-300\"\n                          }  rounded-full py-1 flex flex-row justify-center items-center font-bold cursor-pointer`}\n                        >\n                          {this.props.periods.selected_period !== null ? (\n                            <>\n                              <BsCaretRightFill className=\"mr-3\" />\n                              {\n                                this.props.periods.selected_period\n                                  .session_plan_name\n                              }\n                            </>\n                          ) : (\n                            \"Choose period\"\n                          )}\n                        </span>\n                      </div>\n                    </div>\n                    <div>\n                      <div\n                        onClick={() =>\n                          this.setState({ showPeriodFilter: true })\n                        }\n                        className=\"bg-white border border-white hover:border-blue-600 text-blue-600 font-bold items-center btn w-max cursor-pointer hover:bg-blue-100 my-2 md:my-0\"\n                      >\n                        {this.props.periods.selected_period === null\n                          ? \"Choose period\"\n                          : \"Change period\"}\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n              {this.state.loadingErr !== \"\" && (\n                <div className=\"bg-yellow-100 text-yellow-700 font-extrabold text-2xl mx-4 px-3 py-3 rounded\">\n                  {this.state.loadingErr}\n                </div>\n              )}\n              <div className=\"mb-2\">\n                <div className=\"grid grid-cols-12 gap-3\">\n                  <div className=\"col-span-12\">\n                    <div className={`grid md:grid-cols-1 lg:grid-cols-1 gap-2`}>\n                      <div className=\"-my-2 md:hidden lg:hidden xl:hidden\">\n                        {this.props.positions.positions_list === null ? (\n                          <div className=\"btn bg-gray-500 text-white mb-4 w-full flex flex-row items-center gap-3 animate__animated animate__zoomIn justify-center\">\n                            <RiFileForbidLine className=\"text-2xl text-white\" />{\" \"}\n                            Please wait...\n                          </div>\n                        ) : this.props.positions.positions_list.length > 0 ? (\n                          <Link to=\"/apply\">\n                            <div className=\"btn btn-blue text-white mb-4 w-full flex flex-row items-center gap-3 animate__animated animate__zoomIn justify-center\">\n                              <MdAdd className=\"text-2xl text-white\" /> Create\n                              application\n                            </div>\n                          </Link>\n                        ) : (\n                          <div className=\"btn bg-gray-400 text-white mb-4 w-full flex flex-row items-center gap-3 animate__animated animate__zoomIn justify-center\">\n                            <RiFileForbidLine className=\"text-2xl text-white\" />{\" \"}\n                            No vacancies!\n                          </div>\n                        )}\n                      </div>\n                      {this.props.candidateApplications\n                        .candidate_applications === null ? (\n                        <LoadingV2 type={LoadingType.dark} />\n                      ) : this.filteredApplications(\n                          this.props.candidateApplications\n                            .candidate_applications,\n                          this.state.selectedApplicationStatus,\n                          this.props.periods.selected_period\n                        ).length === 0 ? (\n                        <div className=\"\">\n                          <NoResult\n                            theme={NoResultThemes.Dark}\n                            value=\"No Applications found!\"\n                            component={\n                              <div className=\"-my-2 hidden md:block\">\n                                {this.props.positions.positions_list !== null &&\n                                  this.props.positions.positions_list.length >\n                                    0 &&\n                                  this.props.periods.applicationPeriods &&\n                                  this.props.periods.applicationPeriods.filter(\n                                    (itm) => itm.is_active === true\n                                  ).length !== 0 && (\n                                    <Link to=\"/apply\">\n                                      <div className=\"text-blue-600 font-bold underline mb-2 hover:text-blue-800 animate__animated animate__zoomIn\">\n                                        Click here to create new application\n                                      </div>\n                                    </Link>\n                                  )}\n                              </div>\n                            }\n                          />\n                        </div>\n                      ) : (\n                        this.filteredApplications(\n                          this.props.candidateApplications\n                            .candidate_applications,\n                          this.state.selectedApplicationStatus,\n                          this.props.periods.selected_period\n                        ).map((item, i) => (\n                          <div\n                            key={i + 1}\n                            onClick={() => {\n                              this.setState({\n                                selectedPosition: item.position,\n                                selected_application: item.application_id,\n                              });\n                              this.setState({ selectedExams: item.exams });\n                              this.setState({ displayDetailsModal: true });\n                            }}\n                            className={`bg-white rounded-md animate__animated animate__fadeIn animate__faster\n                      ${\n                        this.state.selectedPosition?.position_id ===\n                        item.position.position_id\n                          ? \"border-2 border-blue-600 shadow\"\n                          : item.application_status ===\n                            ApplicationStates.Initiated\n                          ? \"border-gray-200 bg-gray-50 hover:border-gray-600\"\n                          : item.application_status ===\n                            ApplicationStates.Rejected\n                          ? \"bg-white border-white\"\n                          : item.application_status ===\n                            ApplicationStates.Shortlisted\n                          ? \"border-gray-200 bg-white hover:border-blue-600\"\n                          : \"bg-white border-yellow-600 hover:border-yellow-500\"\n                      } flex flex-col cursor-pointer font-normal hover:font-bold border-2`}\n                          >\n                            <div\n                              className={`grid md:grid-cols-12 group px-3 py-3 rounded-md gap-2 ${\n                                this.state.selectedPosition?.position_id ===\n                                item.position.position_id\n                                  ? \"bg-gray-100 rounded-t\"\n                                  : \"bg-white\"\n                              }`}\n                            >\n                              <div className=\"col-span-1 flex items-center justify-center\">\n                                {item.application_status ===\n                                ApplicationStates.Initiated ? (\n                                  <IoBriefcaseOutline className=\"text-5xl text-gray-400 group-hover:text-blue-600\" />\n                                ) : item.application_status ===\n                                  ApplicationStates.Rejected ? (\n                                  <IoBriefcase className=\"text-5xl text-gray-400 group-hover:text-gray-700\" />\n                                ) : item.application_status ===\n                                  ApplicationStates.Shortlisted ? (\n                                  <IoBriefcaseOutline className=\"text-5xl text-gray-400 group-hover:text-blue-600\" />\n                                ) : item.application_status ===\n                                  ApplicationStates.Incomplete ? (\n                                  <IoBriefcaseOutline className=\"text-5xl text-gray-400 group-hover:text-yellow-800\" />\n                                ) : (\n                                  <IoBriefcase className=\"text-5xl text-gray-400 group-hover:text-blue-600\" />\n                                )}\n                              </div>\n                              <div className=\"col-span-7\">\n                                <span\n                                  className={`font-extrabold \n                          ${\n                            item.application_status !==\n                            ApplicationStates.Initiated\n                              ? item.application_status ===\n                                ApplicationStates.Rejected\n                                ? \"text-gray-900 group-hover:text-gray-900\"\n                                : item.application_status ===\n                                  ApplicationStates.Shortlisted\n                                ? \"text-gray-900 group-hover:text-blue-600\"\n                                : item.application_status ===\n                                  ApplicationStates.Incomplete\n                                ? \"text-gray-900 group-hover:text-yellow-800\"\n                                : \"text-gray-900 group-hover:text-blue-600\"\n                              : \"text-gray-900 group-hover:text-blue-600\"\n                          }`}\n                                >\n                                  {item.position.position_title}\n                                </span>\n                                <div className=\"flex flex-col text-xs text-gray-600\">\n                                  <div className=\"flex flex-row gap-2\">\n                                    <div>\n                                      <div className=\"flex flex-col float-left text-sm md:justify-end pt-2\">\n                                        <span\n                                          className={`${\n                                            item.application_status ===\n                                            ApplicationStates.Rejected\n                                              ? \"text-yellow-700\"\n                                              : \"text-gray-500\"\n                                          } md:text-right`}\n                                        >\n                                          {/* Status */}\n                                        </span>\n                                        {item.application_status ===\n                                        ApplicationStates.Initiated ? (\n                                          <span\n                                            className={`font-bold ${\n                                              this.state.selectedPosition\n                                                ?.position_id ===\n                                              item.position.position_id\n                                                ? \"bg-gray-600 text-gray-100 border border-gray-500 rounded-full\"\n                                                : \"bg-gray-50 text-gray-800 rounded\"\n                                            } px-3 py-1`}\n                                          >\n                                            {\n                                              ApplicationStatesDescription.find(\n                                                (itm) =>\n                                                  itm.key ===\n                                                  item.application_status\n                                              )?.caption\n                                            }\n                                          </span>\n                                        ) : item.application_status ===\n                                          ApplicationStates.Rejected ? (\n                                          <span\n                                            className={`font-bold ${\n                                              this.state.selectedPosition\n                                                ?.position_id ===\n                                              item.position.position_id\n                                                ? \"bg-yellow-900 text-yellow-100 border border-yellow-700 rounded-full\"\n                                                : \"bg-yellow-100 text-yellow-900 rounded\"\n                                            } px-3 py-1`}\n                                          >\n                                            {\n                                              ApplicationStatesDescription.find(\n                                                (itm) =>\n                                                  itm.key ===\n                                                  item.application_status\n                                              )?.caption\n                                            }\n                                          </span>\n                                        ) : item.application_status ===\n                                          ApplicationStates.Shortlisted ? (\n                                          <span\n                                            className={`font-bold ${\n                                              this.state.selectedPosition\n                                                ?.position_id ===\n                                              item.position.position_id\n                                                ? \"bg-blue-900 text-blue-100 border border-blue-700 rounded-full\"\n                                                : \"bg-blue-100 text-blue-900 rounded\"\n                                            } px-3 py-1`}\n                                          >\n                                            {\n                                              ApplicationStatesDescription.find(\n                                                (itm) =>\n                                                  itm.key ===\n                                                  item.application_status\n                                              )?.caption\n                                            }\n                                          </span>\n                                        ) : (\n                                          <span\n                                            className={`font-bold ${\n                                              this.state.selectedPosition\n                                                ?.position_id ===\n                                              item.position.position_id\n                                                ? \"bg-yellow-600 text-yellow-100 border border-yellow-500 rounded-full\"\n                                                : \"bg-yellow-100 text-yellow-700 rounded\"\n                                            } px-3 py-1`}\n                                          >\n                                            {\n                                              ApplicationStatesDescription.find(\n                                                (itm) =>\n                                                  itm.key ===\n                                                  item.application_status\n                                              )?.caption\n                                            }\n                                          </span>\n                                        )}\n                                      </div>\n                                    </div>\n                                    <div className=\"flex flex-col\">\n                                      <span\n                                        className={`${\n                                          item.application_status !==\n                                          ApplicationStates.Initiated\n                                            ? item.application_status ===\n                                              ApplicationStates.Rejected\n                                              ? \"text-gray-500\"\n                                              : item.application_status ===\n                                                ApplicationStates.Shortlisted\n                                              ? \"text-gray-500\"\n                                              : \"text-gray-500\"\n                                            : \"text-gray-500\"\n                                        }`}\n                                      >\n                                        {/* Application period: */}\n                                      </span>\n                                      <span\n                                        className={`${\n                                          item.application_status !==\n                                          ApplicationStates.Initiated\n                                            ? item.application_status ===\n                                              ApplicationStates.Rejected\n                                              ? \"text-gray-800\"\n                                              : item.application_status ===\n                                                ApplicationStates.Shortlisted\n                                              ? \"text-gray-800\"\n                                              : \"text-gray-800\"\n                                            : \"text-black\"\n                                        } font-bold`}\n                                      >\n                                        {item.application_session &&\n                                          item.application_session\n                                            .session_plan_name}{\" \"}\n                                        -{\" \"}\n                                        {item.application_session &&\n                                          item.application_session.period}\n                                      </span>\n                                      <div className=\"flex flex-row gap-2\">\n                                        <span\n                                          className={`${\n                                            item.application_status !==\n                                            ApplicationStates.Initiated\n                                              ? item.application_status ===\n                                                ApplicationStates.Rejected\n                                                ? \"text-gray-500\"\n                                                : item.application_status ===\n                                                  ApplicationStates.Shortlisted\n                                                ? \"text-gray-500\"\n                                                : \"text-gray-500\"\n                                              : \"text-gray-500\"\n                                          }`}\n                                        >\n                                          Date:\n                                        </span>\n                                        <span\n                                          className={`${\n                                            item.application_status !==\n                                            ApplicationStates.Initiated\n                                              ? item.application_status ===\n                                                ApplicationStates.Rejected\n                                                ? \"text-gray-800\"\n                                                : item.application_status ===\n                                                  ApplicationStates.Shortlisted\n                                                ? \"text-gray-800\"\n                                                : \"text-gray-800\"\n                                              : \"text-black\"\n                                          } font-bold`}\n                                        >\n                                          {DATE(item.createdAt, \"DD/MM/YYYY\")}\n                                        </span>\n                                      </div>\n                                    </div>\n                                  </div>\n                                </div>\n                              </div>\n                              <div className=\"col-span-12 md:col-span-4 flex md:justify-end items-center\">\n                                {/* Action */}\n                                <div className=\"flex flex-row items-center justify-end gap-2 w-full\">\n                                  {/* <div className=\"btn bg-gray-100 text-gray-600\">\n                                    Details\n                                  </div> */}\n                                  {item.application_status ===\n                                    ApplicationStates.Shortlisted && (\n                                    <div\n                                      className=\"mt-2 md:mt-0\"\n                                      title=\"Choose the Province, Choose the District, etc.\"\n                                      onClick={() => {\n                                        this.props.SelectUserApplication(item);\n                                      }}\n                                    >\n                                      <Link to=\"/placement-contract\">\n                                        <div className=\"rounded px-2 py-1 font-bold bg-blue-50 text-blue-600 group-hover:bg-blue-600 group-hover:text-white\">\n                                          <span>Placement agreement</span>\n                                        </div>\n                                      </Link>\n                                    </div>\n                                  )}\n                                  <div className=\"rounded px-2 py-1 bg-gray-100 hover:bg-gray-200 text-gray-600 cursor-pointer mt-2 md:mt-0 font-bold\">\n                                    Details\n                                  </div>\n                                </div>\n                              </div>\n                            </div>\n                          </div>\n                        ))\n                      )}\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </>\n        )}\n\n        {this.state.showPeriodFilter === true && (\n          <Modal\n            title={<div className=\"text-2xl\">Choose a period</div>}\n            backDrop={true}\n            theme={Themes.default}\n            close={() => this.setState({ showPeriodFilter: false })}\n            backDropClose={true}\n            widthSizeClass={ModalSize.extraLarge}\n            displayClose={true}\n            padding={{ title: true, body: false }}\n          >\n            <ApplicationPeriods\n              applicationPeriods={this.props.periods.applicationPeriods}\n              setSelectedPeriod={this.props.setSelectedPeriod}\n              showPeriodFilter={this.setShowFilterStatus}\n            />\n          </Modal>\n        )}\n        {this.state.viewSchools !== null && (\n          <Modal\n            title={\n              <div className=\"flex flex-col\">\n                <span className=\"text-4xl font-extrabold text-blue-600\">\n                  {this.state.viewSchools.position.position_title}\n                </span>\n                <span className=\"text-base\">View placement schools</span>\n              </div>\n            }\n            backDrop={true}\n            theme={Themes.default}\n            close={() => this.setState({ viewSchools: null })}\n            backDropClose={true}\n            widthSizeClass={ModalSize.extraLarge}\n            displayClose={true}\n            padding={{ title: true, body: false }}\n          >\n            <CandidatePlacementCheck\n              position={this.state.viewSchools}\n              user={this.props.auth.user}\n            />\n          </Modal>\n        )}\n      </Fragment>\n    );\n  }\n}\n\nconst mapStateToProps = ({\n  auth,\n  application,\n  periods,\n  system,\n  positions,\n  candidateApplications,\n  candidateExam,\n  course,\n  doExam,\n}: StoreState): {\n  auth: Auth;\n  application: applicationStoreInterface;\n  periods: applicationPeriodsStoreInterface;\n  system: System;\n  positions: positionsStoreInterface;\n  candidateApplications: CandidateApplicationsStoreInterface;\n  candidateExam: candidateExamStoreInterface;\n  course: courseStoreInterface;\n  doExam: examDataInterface;\n} => {\n  return {\n    auth: auth,\n    application: application,\n    periods,\n    system: system,\n    positions: positions,\n    candidateApplications: candidateApplications,\n    candidateExam: candidateExam,\n    course: course,\n    doExam: doExam,\n  };\n};\n\nexport const ApplicationsDashboard = connect(mapStateToProps, {\n  initiateApplication,\n  removeLocation,\n  loadApplicationPeriods,\n  setSelectedPeriod,\n  PushPopupAlert,\n  loadAllPositions,\n  FC_Access,\n  LoadCandidateApplications,\n  InitializeExamDetails,\n  loadExamsDone,\n  setSelectedPosition,\n  setSelectedCourse,\n  setSelectedCandidateExam,\n  AddUserApplication,\n  RemoveUserApplication,\n  SelectUserApplication,\n})(_ApplicationsDashboard);\n","import { candidateExamStoreInterface } from \"../actions/candidate_exam\";\nimport {\n  applicationExamAPI,\n  ApplicationPeriodGet,\n} from \"../interfaces/application\";\nimport { ExamAnswerSheetDone } from \"../interfaces/exam\";\nimport { PositionAPI, PositionAPICourse } from \"../interfaces/position\";\nimport { questionType, questionTypeElements } from \"../interfaces/question\";\nimport moment from \"moment-timezone\";\nimport { TimeZone } from \"./app.config\";\nimport { questionTypeElementsType } from \"@mastrecruit/common\";\n\nconst today = moment().tz(TimeZone);\n\nexport const getQuestionType = (\n  question_types: questionType[] | null,\n  type_id: string\n) => {\n  let type: questionTypeElementsType | null = null;\n  if (question_types !== null) {\n    let check = question_types.find((itm) => itm.id === type_id);\n    if (check !== undefined) {\n      let check_type = questionTypeElements.find(\n        (itm) => check && itm.key === check.element\n      );\n      if (check_type !== undefined) {\n        type = check_type.key;\n      }\n    }\n  }\n  return type;\n};\n\nexport const findTotalMarks = (\n  courses: PositionAPICourse[],\n  results: ExamAnswerSheetDone[] | null\n) => {\n  if (results !== null) {\n    let sum: number = 0;\n    for (let course of courses) {\n      let test = results.find((itm) => itm.course === course.course_id);\n      if (test !== undefined) {\n        sum = sum + test.total_marks;\n      }\n    }\n    return sum.toFixed(2);\n  } else {\n    return \"Wait...\";\n  }\n};\n\nexport const CheckIfExamDone = (\n  courses: PositionAPICourse[],\n  results: ExamAnswerSheetDone[] | null\n) => {\n  let res: boolean = false;\n  if (results !== null) {\n    for (let course of courses) {\n      let test = results.find((itm) => itm.course === course.course_id);\n      if (test !== undefined) {\n        res = true;\n      }\n    }\n  }\n  return res;\n};\n\nexport const validateCalculatedFormula = (\n  formula: string\n): { status: boolean; msg: string } => {\n  let characters: string[] = [];\n  if (\n    formula === undefined ||\n    formula === \"\" ||\n    formula.length === undefined ||\n    formula.length === 0\n  ) {\n    return {\n      status: false,\n      msg: `Please type a formula`,\n    };\n  }\n  if (formula.length < 3) {\n    return {\n      status: false,\n      msg: `The formula in not valid, it is not complete!`,\n    };\n  }\n  for (let el of formula) {\n    characters = [...characters, el];\n  }\n  if (characters[0] !== `\"`) {\n    return {\n      status: false,\n      msg: `Formula should start with (\") character`,\n    };\n  }\n  if (characters.filter((itm) => itm === `\"`).length < 2) {\n    return {\n      status: false,\n      msg: `Formula is missing closing (\") character`,\n    };\n  }\n  if (characters.filter((itm) => itm === `\"`).length > 2) {\n    return {\n      status: false,\n      msg: `Formula is invalid, because it has many (\") characters (${\n        characters.filter((itm) => itm === `\"`).length\n      })`,\n    };\n  }\n  if (\n    characters[characters.length - 1] !== `\"` &&\n    characters.filter((itm) => itm === `\"`).length === 2\n  ) {\n    let nextCharacter: string = \"\";\n    for (let i = 0; i < characters.length; i++) {\n      if (characters[i] === `\"` && i !== 0) {\n        nextCharacter = characters[i + 1];\n      }\n    }\n    if (nextCharacter !== `;`) {\n      return {\n        status: false,\n        msg: `Formula is missing separation character (;) between formula and error`,\n      };\n    }\n    if (characters[characters.length - 1] === `;`) {\n      return {\n        status: false,\n        msg: `Formula is missing error after (;) character`,\n      };\n    }\n  }\n  return {\n    status: true,\n    msg: `Formula is valid`,\n  };\n};\n\nexport function convertFromStringToDate(responseDate: string) {\n  let dateComponents = responseDate.split(\"T\");\n  let datePieces = dateComponents[0].split(\"-\");\n  let timePieces = dateComponents[1].split(\":\");\n  return new Date(\n    parseInt(datePieces[2]),\n    parseInt(datePieces[1]) - 1,\n    parseInt(datePieces[0]),\n    parseInt(timePieces[0]),\n    parseInt(timePieces[1]),\n    parseInt(timePieces[2])\n  );\n}\n\nexport enum ExamTimeStatus {\n  Waiting = \"Waiting\",\n  Online = \"Online\",\n  Expired = \"Expired\",\n}\n\nexport const validateExamDate = (\n  exam_date: string,\n  start_time: string,\n  end_time: string\n) => {\n  let status: ExamTimeStatus = ExamTimeStatus.Expired;\n  // Dates\n  const toDay: Date = new Date(today.toString());\n  const examDate = new Date(exam_date);\n\n  // Time\n  const startTime = convertFromStringToDate(\n    examDate.getDate() +\n      \"-\" +\n      (examDate.getMonth() + 1) +\n      \"-\" +\n      examDate.getFullYear() +\n      \"T\" +\n      start_time +\n      \":0\"\n  );\n  const endTime = convertFromStringToDate(\n    examDate.getDate() +\n      \"-\" +\n      (examDate.getMonth() + 1) +\n      \"-\" +\n      examDate.getFullYear() +\n      \"T\" +\n      end_time +\n      \":0\"\n  );\n\n  // check exam date\n  if (\n    examDate.getDate() > toDay.getDate() ||\n    examDate.getMonth() > toDay.getMonth() ||\n    examDate.getFullYear() > toDay.getFullYear()\n  ) {\n    status = ExamTimeStatus.Waiting;\n  }\n\n  if (\n    examDate.getDate() < toDay.getDate() ||\n    examDate.getMonth() < toDay.getMonth() ||\n    examDate.getFullYear() < toDay.getFullYear()\n  ) {\n    status = ExamTimeStatus.Expired;\n  }\n\n  if (\n    examDate.getDate() === toDay.getDate() &&\n    examDate.getMonth() === toDay.getMonth() &&\n    examDate.getFullYear() === toDay.getFullYear()\n  ) {\n    if (startTime.getTime() > toDay.getTime()) {\n      status = ExamTimeStatus.Waiting;\n    } else if (\n      startTime.getTime() <= toDay.getTime() &&\n      endTime.getTime() >= toDay.getTime()\n    ) {\n      status = ExamTimeStatus.Online;\n    } else {\n      status = ExamTimeStatus.Expired;\n    }\n  }\n  // console.log(\n  //   \"Dates comparison: \" + examDate.getDate() + \"=>\" + toDay.getDate()\n  // );\n  // console.log(\"Exam Status: \", status);\n  return status;\n};\n\nexport const InitializeExamsDone = (\n  selected_period: ApplicationPeriodGet | null,\n  selectedPosition: PositionAPI | null,\n  candidateExam: candidateExamStoreInterface,\n  loadExamsDone: (\n    periodId: string,\n    userId: string,\n    callback: (loading: boolean) => void\n  ) => void,\n  user_id: string,\n  setLoadingExamsDone: (status: boolean) => void,\n  selectedExams: applicationExamAPI[] | null,\n  InitializeExamDetails: (\n    periodId: string,\n    courseId: string,\n    district_id: string,\n    center_id: string,\n    room_id: string,\n    position_id: string,\n    callback: (loading: boolean) => void\n  ) => void,\n  setLoadingExams: (status: boolean) => void\n) => {\n  if (selected_period !== null && selectedPosition !== null) {\n    loadExamsDone(\n      selected_period.session_plan_id,\n      user_id,\n      setLoadingExamsDone\n    );\n    for (let course of selectedPosition.courses) {\n      let testDone = candidateExam.user_exams_temp.find(\n        (itm) => itm.course === course.course_id\n      );\n      if (testDone === undefined) {\n        let center_id = selectedExams?.find(\n          (itm) => itm.course_id === course.course_id\n        );\n        if (center_id !== undefined) {\n          InitializeExamDetails(\n            selected_period.session_plan_id,\n            course.course_id,\n            center_id.district_id,\n            center_id.center_id,\n            center_id.room_id,\n            selectedPosition.position_id,\n            setLoadingExams\n          );\n        }\n      }\n    }\n  }\n};\n\nexport const getActiveExam = (\n  candidateExam: candidateExamStoreInterface\n): ExamAnswerSheetDone | null => {\n  if (candidateExam.user_exams_done.length > 0) {\n    for (let exam of candidateExam.user_exams_done) {\n      if (\n        validateExamDate(\n          exam.exam_date,\n          exam.exam_start_time,\n          exam.exam_end_time\n        ) === ExamTimeStatus.Online\n      ) {\n        return exam;\n      }\n    }\n  }\n  return null;\n};\n\nexport const proctoringDefaultRules: {\n  rule: string;\n  status: boolean;\n  caption: string;\n}[] = [\n  {\n    rule: \"right_click_enabled\",\n    status: false,\n    caption: \"Enable right click\",\n  },\n  {\n    rule: \"copy_enabled\",\n    status: false,\n    caption: \"Enable copy\",\n  },\n  {\n    rule: \"paste_enabled\",\n    status: false,\n    caption: \"Enable paste\",\n  },\n  {\n    rule: \"stop_candidate_when_comeback\",\n    status: false,\n    caption: \"Enable Candidate when coming back\",\n  },\n  {\n    rule: \"allow_to_leave_browser\",\n    status: false,\n    caption: \"Enable to leave browser\",\n  },\n];\n","import React, { useEffect, useState } from \"react\";\nimport { BiSort } from \"react-icons/bi\";\nimport { MdNavigateBefore, MdNavigateNext, MdSearch } from \"react-icons/md\";\n\nconst FC_makeID = (length: number = 5): string => {\n  let result: string = \"\";\n  let characters: string =\n    \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\n  let charactersLength = characters.length;\n  for (let i: number = 0; i < length; i++) {\n    result += characters.charAt(Math.floor(Math.random() * charactersLength));\n  }\n  return result;\n};\n\nexport const sortThisColumn = (\n  tableId: string,\n  colIndex: number = 0,\n  dir: \"asc\" | \"desc\" = \"asc\"\n) => {\n  var table,\n    rows,\n    switching,\n    i,\n    x,\n    y,\n    shouldSwitch,\n    switchcount = 0;\n  table = document.getElementById(tableId) as HTMLTableElement;\n  switching = true;\n  /* Make a loop that will continue until\n  no switching has been done: */\n  if (table) {\n    while (switching) {\n      //start by saying: no switching is done:\n      switching = false;\n      rows = table.rows;\n      /*Loop through all table rows (except the\n    first, which contains table headers):*/\n      for (i = 1; i < rows.length - 1; i++) {\n        //start by saying there should be no switching:\n        shouldSwitch = false;\n        /*Get the two elements you want to compare,\n      one from current row and one from the next:*/\n        x = rows[i].getElementsByTagName(\"TD\")[colIndex];\n        y = rows[i + 1].getElementsByTagName(\"TD\")[colIndex];\n        /*check if the two rows should switch place,\n      based on the direction, asc or desc:*/\n        if (dir === \"asc\" && x && y) {\n          if (x.innerHTML.toLowerCase() > y.innerHTML.toLowerCase()) {\n            //if so, mark as a switch and break the loop:\n            shouldSwitch = true;\n            break;\n          }\n        } else if (dir === \"desc\" && x && y) {\n          if (x.innerHTML.toLowerCase() < y.innerHTML.toLowerCase()) {\n            //if so, mark as a switch and break the loop:\n            shouldSwitch = true;\n            break;\n          }\n        }\n      }\n      if (shouldSwitch && rows[i].parentNode) {\n        /*If a switch has been marked, make the switch\n      and mark that a switch has been done:*/\n        rows[i].parentNode!.insertBefore(rows[i + 1], rows[i]);\n        switching = true;\n        //Each time a switch is done, increase this count by 1:\n        switchcount++;\n      } else {\n        /*If no switching has been done AND the direction is \"asc\",\n      set the direction to \"desc\" and run the while loop again.*/\n        if (switchcount === 0 && dir === \"asc\") {\n          dir = \"desc\";\n          switching = true;\n        }\n      }\n      // if (i === 0) continue;\n      // rows.cells[i].style.backgroundColor = \"blue\";\n    }\n  }\n};\n\nexport interface TableColumnsInterface {\n  columnTitle: JSX.Element | string;\n  alignText: string;\n  padding?: string;\n  isSortAllowed?: boolean;\n}\n\ninterface TableProps {\n  columns: TableColumnsInterface[];\n  rows: Function;\n  hideColumns?: boolean;\n  pagination?: boolean;\n  search?: boolean;\n  tableSize?: string;\n  tableClass?: string;\n  tableId?: string;\n  rounded?: boolean;\n  searchBG?: string;\n  thColor?: string;\n  loading?: boolean;\n}\n\nconst Table: React.FC<TableProps> = (props) => {\n  const startPage = 1;\n  const tableId =\n    !props.tableId || props.tableId === \"myTable\" ? FC_makeID() : props.tableId;\n  let table: HTMLElement, tr: HTMLCollectionOf<HTMLTableRowElement>;\n  const [totalItems, setTotalItems] = useState<number>(0);\n  const [totalPages, setTotalPages] = useState<number>(1);\n  const [currentPage, setCurrentPage] = useState<number>(1);\n  const [pages, setPages] = useState<number[]>();\n  const [pageSize, setPageSize] = useState<number>(10);\n  const [startIndex, setStartIndex] = useState<number>(0);\n  const [endIndex, setEndIndex] = useState<number>(0);\n\n  useEffect(() => {\n    props.pagination && tablePagination();\n  });\n\n  const filterTable = (\n    data: string,\n    filterType?: \"default\" | \"field\"\n  ): void => {\n    var filter, tr, td, rows: number, cols: number, txtValue;\n    if (filterType === \"field\" && data === \"all\") data = \"\";\n    filter = data.toLowerCase();\n    table = document.getElementById(tableId!)!;\n    tr = table.getElementsByTagName(\"tr\");\n    for (rows = 0; rows < tr.length; rows++) {\n      for (cols = 0; cols < props.columns.length; cols++) {\n        td = tr[rows].getElementsByTagName(\"td\")[cols];\n        if (td) {\n          txtValue = td.textContent || td.innerText;\n          if (txtValue.toLowerCase().indexOf(filter) > -1) {\n            tr[rows].style.display = \"\";\n            break;\n          } else {\n            tr[rows].style.display = \"none\";\n          }\n        }\n      }\n    }\n  };\n\n  const tablePagination = (): void => {\n    table = document.getElementById(tableId)!;\n    tr = table.getElementsByTagName(\"tr\");\n    setTotalItems(tr.length);\n    setTotalPages(Math.ceil(totalItems / pageSize));\n\n    // calculate start and end item indexes on the current page\n    setStartIndex((currentPage - 1) * pageSize);\n    setEndIndex(Math.min(startIndex + pageSize - 1, totalItems - 1));\n\n    /**\n     * TODO!\n     * There is a problem with this condition\n     */\n    let _pages = Array.from(Array(totalPages + 1 - startPage).keys()).map(\n      (i) => startPage + i\n    );\n    if (!pages || _pages.length !== pages.length) {\n      setPages(_pages);\n    }\n\n    for (let i: number = 0; i < tr.length; i++) {\n      if (i >= startIndex && i <= endIndex) {\n        tr[i].style.display = \"\";\n      } else {\n        tr[i].style.display = \"none\";\n      }\n    }\n  };\n\n  return (\n    <div className={`${props.tableSize} overflow-x-auto`}>\n      {/* search box  */}\n      {props.search && (\n        <div className={`${props.searchBG} w-full mb-2`}>\n          {props.search && (\n            <div className=\"bg-white rounded flex items-center w-full p-2 border-2 border-gray-500\">\n              <MdSearch className=\"h-5 w-5 fill-current text-gray-400\" />\n              <input\n                type=\"search\"\n                placeholder=\"search\"\n                onChange={(e) => filterTable(e.target.value)}\n                className=\"w-full h-6 pl-4 text-sm outline-none focus:outline-none bg-white\"\n                disabled={props.loading}\n              />\n\n              {props.pagination && (\n                <div className=\"select\">\n                  <select\n                    className=\"text-base outline-none focus:outline-none bg-white\"\n                    onChange={(e) => setPageSize(Number(e.target.value))}\n                    disabled={props.loading}\n                  >\n                    <option value=\"10\">10</option>\n                    <option value=\"25\">25</option>\n                    <option value=\"50\">50</option>\n                    <option value=\"100\">100</option>\n                  </select>\n                </div>\n              )}\n            </div>\n          )}\n        </div>\n      )}\n      <div className=\"overflow-x-auto w-full\">\n        <table\n          className={\n            props.tableClass\n              ? props.tableClass\n              : `w-full shadow ${\n                  props.rounded && \"sm:rounded-lg\"\n                } table-auto order-table`\n          }\n          id={tableId}\n        >\n          {!props.hideColumns && (\n            <thead className=\"bg-white border-b-2 border-gray-300 text-gray-600 font-bold text-base\">\n              <tr\n                className={`text-left tracking-wide bg-${props.thColor}-100 border-b-2 border-${props.thColor}-500 text-${props.thColor}-600`}\n              >\n                {props.columns.map((column, index) => (\n                  <th\n                    key={index}\n                    className={`${column.padding} text-${\n                      column.alignText\n                    } px-3 py-2 ${column.isSortAllowed && \"cursor-pointer\"}`}\n                    onClick={() =>\n                      column.isSortAllowed && sortThisColumn(tableId, index)\n                    }\n                  >\n                    <div className=\"flex items-center gap-1\">\n                      {column.columnTitle}\n                      {column.isSortAllowed && <BiSort />}\n                    </div>\n                  </th>\n                ))}\n              </tr>\n            </thead>\n          )}\n          <tbody id=\"table-data\" className=\"bg-white text-black text-base\">\n            {props.rows()}\n          </tbody>\n        </table>\n        {props.pagination && (\n          <div className=\"sm:flex-1 sm:flex sm:items-center sm:justify-between mt-4 work-sans\">\n            <div>\n              <span className=\"text-xs xs:text-sm text-gray-900\">\n                Showing 1 to {pageSize} of {totalItems - 1} Entries\n              </span>\n            </div>\n            <div>\n              <nav className=\"inline-flex shadow-sm\">\n                <div>\n                  <button\n                    type=\"button\"\n                    className={`inline-flex items-center px-2 py-2 rounded-l-md border border-gray-300 text-sm font-medium text-gray-500 ${\n                      currentPage !== 1 && \"bg-white\"\n                    }`}\n                    aria-label=\"Previous\"\n                    disabled={currentPage === 1 || props.loading}\n                    onClick={() => setCurrentPage(currentPage - 1)}\n                  >\n                    <MdNavigateBefore className=\"h-5 w-5\" />\n                  </button>\n                </div>\n                <div>\n                  {pages &&\n                    pages.map((page, pageIndex) => (\n                      <button\n                        key={pageIndex}\n                        className={`-ml-px inline-flex items-center px-4 py-2 border border-gray-300 text-sm font-medium text-gray-700 ${\n                          page !== currentPage\n                            ? \"bg-white\"\n                            : \"bg-gray-100 cursor-default\"\n                        }`}\n                        disabled={page === currentPage || props.loading}\n                        onClick={() => setCurrentPage(page)}\n                      >\n                        {page}\n                      </button>\n                    ))}\n                </div>\n                <div>\n                  <button\n                    type=\"button\"\n                    className={`inline-flex items-center px-2 py-2 rounded-r-md border border-gray-300 text-sm leading-5 font-medium text-gray-500 ${\n                      currentPage !== totalPages && \"bg-white\"\n                    }`}\n                    aria-label=\"Next\"\n                    disabled={currentPage === totalPages || props.loading}\n                    onClick={() => setCurrentPage(currentPage + 1)}\n                  >\n                    <MdNavigateNext className=\"h-5 w-5\" />\n                  </button>\n                </div>\n              </nav>\n            </div>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default Table;\n","import axios from \"axios\";\nimport { Dispatch } from \"redux\";\nimport { ActionTypes } from \"./types\";\nimport { API } from \"../utils/api\";\nimport { setAxiosToken } from \"../utils/AxiosToken\";\nimport { errorToText } from \"../utils/errors\";\nimport {\n  AcademicSessionInterface,\n  PlansTypeInterface,\n  SessionPlanInterface,\n} from \"../interfaces\";\n\n/**\n * * ****************************** INTERFACES *****************************\n */\n\n// GET ACTIVE PLAN TYPES\nexport interface GetPlansTypesAction {\n  type: ActionTypes.GET_PLANS_TYPES;\n  payload: PlansTypeInterface[];\n}\n\n// GET INACTIVE PLAN TYPES\nexport interface GetDeletedPlansTypesAction {\n  type: ActionTypes.GET_DELETED_PLANS_TYPES;\n  payload: PlansTypeInterface[];\n}\n\n// CREATE PLAN TYPE\nexport interface CreatePlansTypeAction {\n  type: ActionTypes.CREATE_PLAN_TYPE;\n  payload: PlansTypeInterface;\n}\n\n// UPDATE PLAN TYPE\nexport interface UpdatePlansTypeAction {\n  type: ActionTypes.UPDATE_PLAN_TYPE;\n  payload: PlansTypeInterface;\n}\n\n// DELETE PLAN TYPE\nexport interface DeletePlansTypeAction {\n  type: ActionTypes.DELETE_PLAN_TYPE;\n  payload: PlansTypeInterface;\n}\n\n// SET PLAN TYPE =====================================\nexport interface setSelectedPlanTypeActions {\n  type: ActionTypes.SELECT_PLAN_TYPE;\n  payload: PlansTypeInterface | \"all\";\n}\n\n// GET ALL SESSION PLAN\nexport interface GetAllSessionPlansAction {\n  type: ActionTypes.GET_ALL_SESSION_PLANS;\n  payload: SessionPlanInterface[];\n}\n\n// GET ACTIVE SESSION PLAN\nexport interface GetActiveSessionPlanAction {\n  type: ActionTypes.GET_ACTIVE_SESSION_PLANS;\n  payload: SessionPlanInterface | \"none\";\n}\n\n// CREATE SESSION PLAN\nexport interface CreateSessionPlansAction {\n  type: ActionTypes.CREATE_SESSION_PLAN;\n  payload: SessionPlanInterface;\n}\n\n// UPDATE SESSION PLAN\nexport interface UpdateSessionPlansAction {\n  type: ActionTypes.UPDATE_SESSION_PLAN;\n  payload: SessionPlanInterface;\n}\n\n// ACTIVATE SESSION PLAN\nexport interface ActivateSessionPlansAction {\n  type: ActionTypes.SESSION_ACTIVATION;\n  payload: SessionPlanInterface;\n}\n\n// DELETE SESSION PLAN\nexport interface DeleteSessionPlanAction {\n  type: ActionTypes.DELETE_SESSION_PLAN;\n  payload: string;\n}\n\n// GET ALL ACADEMIC SESSION\nexport interface GetAllAcademicSessionAction {\n  type: ActionTypes.GET_ALL_ACADEMIC_SESSION;\n  payload: AcademicSessionInterface[];\n}\n\n// CREATE ACADEMIC SESSION\nexport interface CreateAcademicSessionAction {\n  type: ActionTypes.CREATE_ACADEMIC_SESSION;\n  payload: AcademicSessionInterface;\n}\n\n// UPDATE ACADEMIC SESSION\nexport interface UpdateAcademicSessionAction {\n  type: ActionTypes.UPDATE_ACADEMIC_SESSION;\n  payload: AcademicSessionInterface;\n}\n\n// ACTIVATE ACADEMIC SESSION\nexport interface ActivateAcademicSessionAction {\n  type: ActionTypes.ACADEMIC_SESSION_ACTIVATION;\n  payload: AcademicSessionInterface;\n}\n\n// DELETE ACADEMIC SESSION\nexport interface DeleteAcademicSessionAction {\n  type: ActionTypes.DELETE_ACADEMIC_SESSION;\n  payload: string;\n}\n\n// GET ACTIVE ACADEMIC SESSION\nexport interface GetActiveAcademicSessionAction {\n  type: ActionTypes.GET_ACTIVE_ACADEMIC_SESSION;\n  payload: AcademicSessionInterface | \"none\";\n}\n\nexport type SessionActionType =\n  | GetPlansTypesAction\n  | GetDeletedPlansTypesAction\n  | CreatePlansTypeAction\n  | UpdatePlansTypeAction\n  | DeletePlansTypeAction\n  | GetAllSessionPlansAction\n  | GetActiveSessionPlanAction\n  | CreateSessionPlansAction\n  | UpdateSessionPlansAction\n  | ActivateSessionPlansAction\n  | DeleteSessionPlanAction\n  | setSelectedPlanTypeActions\n  | GetAllAcademicSessionAction\n  | CreateAcademicSessionAction\n  | UpdateAcademicSessionAction\n  | ActivateAcademicSessionAction\n  | DeleteAcademicSessionAction\n  | GetActiveAcademicSessionAction;\n\n/**\n * * ****************************** ACTIONS *****************************\n */\n\n// GET ACTIVE PLAN TYPES ==========================\nexport const GetPlansTypes = (callback: Function) => {\n  callback(true, \"\");\n  return async (dispatch: Dispatch) => {\n    try {\n      setAxiosToken();\n      const res = await axios.get<PlansTypeInterface[]>(\n        `${API.CLAIMING}/session-type`\n      );\n      console.log({ GET_PLANS_TYPES: res.data });\n      let plan_types: PlansTypeInterface[] = [];\n      if (res.status === 200) {\n        // setApplications(res.data);\n        if (res.data !== null && res.data.length > 0) {\n          plan_types = res.data;\n        }\n      }\n      dispatch<GetPlansTypesAction>({\n        type: ActionTypes.GET_PLANS_TYPES,\n        payload: plan_types,\n      });\n      callback(false, \"\");\n    } catch (error) {\n      console.error({ error: errorToText(error) });\n      callback(false, errorToText(error));\n    }\n  };\n};\n\n// GET ACTIVE PLAN TYPES ==========================\nexport const GetDeletedPlansTypes = (callback: Function) => {\n  callback(true, \"\");\n  return async (dispatch: Dispatch) => {\n    try {\n      setAxiosToken();\n      const res = await axios.get<PlansTypeInterface[]>(\n        `${API.CLAIMING}/session-type/deleted`\n      );\n      console.log({ GET_DELETED_PLANS_TYPES: res.data });\n      let plan_types: PlansTypeInterface[] = [];\n      if (res.status === 200) {\n        // setApplications(res.data);\n        if (res.data !== null && res.data.length > 0) {\n          plan_types = res.data;\n        }\n      }\n      dispatch<GetDeletedPlansTypesAction>({\n        type: ActionTypes.GET_DELETED_PLANS_TYPES,\n        payload: plan_types,\n      });\n      callback(false, \"\");\n    } catch (error) {\n      console.error({ error: errorToText(error) });\n      callback(false, errorToText(error));\n    }\n  };\n};\n\n// CREATE PLAN TYPE\nexport const createPlanType = (\n  data: PlansTypeInterface\n): CreatePlansTypeAction => {\n  return {\n    type: ActionTypes.CREATE_PLAN_TYPE,\n    payload: data,\n  };\n};\n\n// UPDATE PLAN TYPE\nexport const updatePlanType = (\n  data: PlansTypeInterface\n): UpdatePlansTypeAction => {\n  return {\n    type: ActionTypes.UPDATE_PLAN_TYPE,\n    payload: data,\n  };\n};\n\n// DELETE PLAN TYPE\nexport const deletePlanType = (\n  data: PlansTypeInterface\n): DeletePlansTypeAction => {\n  return {\n    type: ActionTypes.DELETE_PLAN_TYPE,\n    payload: data,\n  };\n};\n\n// SELECT PLAN TYPES ==========================\nexport const setSelectedPlanType = (\n  thisType: PlansTypeInterface | \"all\"\n): setSelectedPlanTypeActions => {\n  console.log({ thisType });\n  return {\n    type: ActionTypes.SELECT_PLAN_TYPE,\n    payload: thisType,\n  };\n};\n\n// GET ACTIVE PLAN TYPES ==========================\nexport const getActiveSessionPlan = (callback: Function) => {\n  callback(true, \"\");\n  return async (dispatch: Dispatch) => {\n    try {\n      setAxiosToken();\n      const res = await axios.get<SessionPlanInterface>(\n        `${API.CLAIMING}/session/active/`\n      );\n      console.log({ GET_ACTIVE_SESSION_PLANS: res.data });\n      let session_plan: SessionPlanInterface | undefined = undefined;\n      // if (res.status === 200) {\n      //   // setApplications(res.data);\n      // }\n      if (res.data && res.data.is_active !== undefined) {\n        session_plan = res.data;\n      }\n      console.log({ session_plan: res.data });\n\n      dispatch<GetActiveSessionPlanAction>({\n        type: ActionTypes.GET_ACTIVE_SESSION_PLANS,\n        payload: session_plan ? session_plan : \"none\",\n      });\n      callback(false, \"\", session_plan ? session_plan : \"none\");\n    } catch (error) {\n      console.error({ error: errorToText(error) });\n      callback(false, errorToText(error));\n    }\n  };\n};\n\n// GET ALL PLAN TYPES ==========================\nexport const GetAllSessionPlans = (callback: Function) => {\n  callback(true, \"\");\n  return async (dispatch: Dispatch) => {\n    try {\n      setAxiosToken();\n      const res = await axios.get<SessionPlanInterface[]>(\n        `${API.CLAIMING}/session/`\n      );\n      console.log({ GET_ALL_SESSION_PLANS: res.data });\n      let session_data: SessionPlanInterface[] = [];\n      if (res.status === 200) {\n        // setApplications(res.data);\n        if (res.data !== null && res.data.length > 0) {\n          session_data = res.data;\n        }\n      }\n      dispatch<GetAllSessionPlansAction>({\n        type: ActionTypes.GET_ALL_SESSION_PLANS,\n        payload: session_data,\n      });\n      callback(false, \"\", session_data);\n    } catch (error) {\n      console.error({ error: errorToText(error) });\n      callback(false, errorToText(error));\n    }\n  };\n};\n\n// CREATE SESSION PLAN\nexport const createSessionPlan = (\n  data: SessionPlanInterface\n): CreateSessionPlansAction => {\n  return {\n    type: ActionTypes.CREATE_SESSION_PLAN,\n    payload: data,\n  };\n};\n\n// UPDATE SESSION PLAN\nexport const updateSessionPlan = (\n  data: SessionPlanInterface\n): UpdateSessionPlansAction => {\n  return {\n    type: ActionTypes.UPDATE_SESSION_PLAN,\n    payload: data,\n  };\n};\n\n// ACTIVATE SESSION PLAN\nexport const sessionActivation = (\n  data: SessionPlanInterface\n): ActivateSessionPlansAction => {\n  return {\n    type: ActionTypes.SESSION_ACTIVATION,\n    payload: data,\n  };\n};\n\n// DELETE SESSION PLAN\nexport const deleteSessionPlan = (data: string): DeleteSessionPlanAction => {\n  return {\n    type: ActionTypes.DELETE_SESSION_PLAN,\n    payload: data,\n  };\n};\n\n// CREATE ACADEMIC SESSION\nexport const createAcademicSession = (\n  data: AcademicSessionInterface\n): CreateAcademicSessionAction => {\n  return {\n    type: ActionTypes.CREATE_ACADEMIC_SESSION,\n    payload: data,\n  };\n};\n\n// GET ALL ACADEMIC SESSION ==========================\nexport const GetAllAcademicSession = (callback: Function) => {\n  callback(true, \"\");\n  return async (dispatch: Dispatch) => {\n    try {\n      setAxiosToken();\n      const res = await axios.get<AcademicSessionInterface[]>(\n        `${API.PLACEMENT}/postrequestperiod/`\n      );\n      console.log({ GET_ALL_SESSION_PLANS: res.data });\n      let session_data: AcademicSessionInterface[] = [];\n      if (res.status === 200) {\n        // setApplications(res.data);\n        if (res.data !== null && res.data.length > 0) {\n          session_data = res.data;\n        }\n      }\n      console.log(\"====================================\");\n      console.log({ GetAllAcademicSession: res });\n      console.log(\"====================================\");\n      dispatch<GetAllAcademicSessionAction>({\n        type: ActionTypes.GET_ALL_ACADEMIC_SESSION,\n        payload: session_data,\n      });\n      callback(false, \"\", session_data);\n    } catch (error) {\n      console.error({ error: errorToText(error) });\n      callback(false, errorToText(error));\n    }\n  };\n};\n\n// UPDATE ACADEMIC SESSION\nexport const updateAcademicSession = (\n  data: AcademicSessionInterface\n): UpdateAcademicSessionAction => {\n  return {\n    type: ActionTypes.UPDATE_ACADEMIC_SESSION,\n    payload: data,\n  };\n};\n\n// ACTIVATE ACADEMIC SESSION\nexport const academicSessionActivation = (\n  data: AcademicSessionInterface\n): ActivateAcademicSessionAction => {\n  return {\n    type: ActionTypes.ACADEMIC_SESSION_ACTIVATION,\n    payload: data,\n  };\n};\n\n// DELETE ACADEMIC SESSION\nexport const deleteAcademicSession = (\n  data: string\n): DeleteAcademicSessionAction => {\n  return {\n    type: ActionTypes.DELETE_ACADEMIC_SESSION,\n    payload: data,\n  };\n};\n\n// GET ACTIVE PLAN TYPES ==========================\nexport const getActiveAcademicSession = (callback: Function) => {\n  callback(true, \"\");\n  return async (dispatch: Dispatch) => {\n    try {\n      setAxiosToken();\n      const res = await axios.get<AcademicSessionInterface>(\n        `${API.PLACEMENT}/postrequestperiod/one`\n      );\n      console.log({ GET_ACTIVE_ACADEMIC_SESSION: res.data });\n      let session_plan: AcademicSessionInterface | undefined = undefined;\n      // if (res.status === 200) {\n      //   // setApplications(res.data);\n      // }\n      if (res.data) {\n        session_plan = res.data;\n      }\n      console.log({ session_plan: res.data });\n\n      dispatch<GetActiveAcademicSessionAction>({\n        type: ActionTypes.GET_ACTIVE_ACADEMIC_SESSION,\n        payload: session_plan ? session_plan : \"none\",\n      });\n      callback(false, \"\", session_plan ? session_plan : \"none\");\n    } catch (error) {\n      console.error({ error: errorToText(error) });\n      callback(false, errorToText(error));\n    }\n  };\n};\n","import axios from \"axios\";\nimport { Dispatch } from \"redux\";\nimport { ActionTypes } from \"./types\";\nimport {\n  CandidatesInterface,\n  DocumentCategoryInterface,\n  DocumentFieldsInterface,\n  DocumentSubCategoryInterface,\n} from \"../shared/interfaces\";\nimport { API } from \"../utils/api\";\nimport { setAxiosToken } from \"../utils/AxiosToken\";\nimport { errorToText } from \"../utils/errors\";\nimport { VerifyDocumentInterface } from \"./users\";\n\n/**\n * * ****************************** INTERFACES *****************************\n */\n\n// CATEGORY\nexport interface GetDocumentCategoryAction {\n  type: ActionTypes.GET_DOCUMENT_CATEGORY;\n  payload: DocumentCategoryInterface[];\n}\n\nexport interface CreateDocumentCategoryAction {\n  type: ActionTypes.CREATE_DOCUMENT_CATEGORY;\n  payload: DocumentCategoryInterface;\n}\n\nexport interface UpdateDocumentCategoryAction {\n  type: ActionTypes.UPDATE_DOCUMENT_CATEGORY;\n  payload: DocumentCategoryInterface;\n}\n\nexport interface DeleteDocumentCategoryAction {\n  type: ActionTypes.DELETE_DOCUMENT_CATEGORY;\n  payload: string;\n}\n\n// SUB CATEGORY\nexport interface GetDocumentSubCategoryAction {\n  type: ActionTypes.GET_DOCUMENT_SUB_CATEGORY;\n  payload: DocumentSubCategoryInterface[];\n}\n\nexport interface CreateDocumentSubCategoryAction {\n  type: ActionTypes.CREATE_DOCUMENT_SUB_CATEGORY;\n  payload: DocumentSubCategoryInterface;\n}\n\nexport interface UpdateDocumentSubCategoryAction {\n  type: ActionTypes.UPDATE_DOCUMENT_SUB_CATEGORY;\n  payload: DocumentSubCategoryInterface;\n}\n\nexport interface DeleteDocumentSubCategoryAction {\n  type: ActionTypes.DELETE_DOCUMENT_SUB_CATEGORY;\n  payload: string;\n}\n\n// FIELDS\nexport interface GetDocumentFieldsAction {\n  type: ActionTypes.GET_DOCUMENT_FIELDS;\n  payload: DocumentFieldsInterface[];\n}\n\nexport interface CreateDocumentFieldsAction {\n  type: ActionTypes.CREATE_DOCUMENT_FIELDS;\n  payload: DocumentFieldsInterface;\n}\n\nexport interface UpdateDocumentFieldsAction {\n  type: ActionTypes.UPDATE_DOCUMENT_FIELDS;\n  payload: DocumentFieldsInterface;\n}\n\nexport interface DeleteDocumentFieldsAction {\n  type: ActionTypes.DELETE_DOCUMENT_FIELDS;\n  payload: string;\n}\n\n// DOCUMENT CHECKING\nexport interface GetCandidatesInInstituteAtion {\n  type: ActionTypes.GET_CANDIDATE_IN_INSTITUTE;\n  payload: CandidatesInterface[];\n}\n\nexport interface VerifyDocumentAction {\n  type: ActionTypes.VERIFY_DOCUMENT;\n  payload: VerifyDocumentInterface;\n}\n\nexport type DocumentCategoryActionType =\n  | GetDocumentCategoryAction\n  | CreateDocumentCategoryAction\n  | UpdateDocumentCategoryAction\n  | DeleteDocumentCategoryAction\n  | GetDocumentSubCategoryAction\n  | CreateDocumentSubCategoryAction\n  | UpdateDocumentSubCategoryAction\n  | DeleteDocumentSubCategoryAction\n  | GetDocumentFieldsAction\n  | CreateDocumentFieldsAction\n  | UpdateDocumentFieldsAction\n  | DeleteDocumentFieldsAction\n  | GetCandidatesInInstituteAtion\n  | VerifyDocumentAction;\n\n/**\n * * ****************************** ACTIONS *****************************\n */\n\n// CATEGORY\n\nexport const getDocumentCategory = () => {\n  return async (dispatch: Dispatch) => {\n    try {\n      setAxiosToken();\n      const res = await axios.get(`${API.AUTH}/detailcategory`);\n      console.log({ docCategory: res });\n      dispatch<GetDocumentCategoryAction>({\n        type: ActionTypes.GET_DOCUMENT_CATEGORY,\n        payload: res.data,\n      });\n    } catch (error) {\n      console.error({ error: errorToText(error) });\n    }\n  };\n};\n\nexport const createDocumentCategory = (data: DocumentCategoryInterface) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<CreateDocumentCategoryAction>({\n      type: ActionTypes.CREATE_DOCUMENT_CATEGORY,\n      payload: data,\n    });\n  };\n};\n\nexport const updateDocumentCategory = (data: DocumentCategoryInterface) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<UpdateDocumentCategoryAction>({\n      type: ActionTypes.UPDATE_DOCUMENT_CATEGORY,\n      payload: data,\n    });\n  };\n};\n\nexport const deleteDocumentCategory = (data: string) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<DeleteDocumentCategoryAction>({\n      type: ActionTypes.DELETE_DOCUMENT_CATEGORY,\n      payload: data,\n    });\n  };\n};\n\n// SUB CATEGORY\nexport const getDocumentSubCategory = () => {\n  return async (dispatch: Dispatch) => {\n    try {\n      setAxiosToken();\n      const res = await axios.get<DocumentSubCategoryInterface[]>(\n        `${API.AUTH}/detailsubcategory`\n      );\n      console.log({ docSubCategory: res });\n      dispatch<GetDocumentSubCategoryAction>({\n        type: ActionTypes.GET_DOCUMENT_SUB_CATEGORY,\n        payload: res.data,\n        // payload: response.data,\n      });\n    } catch (error) {\n      console.log({ doc_SUB_category_error: error });\n    }\n  };\n};\n\nexport const createDocumentSubCategory = (\n  data: DocumentSubCategoryInterface\n) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<CreateDocumentSubCategoryAction>({\n      type: ActionTypes.CREATE_DOCUMENT_SUB_CATEGORY,\n      payload: data,\n    });\n  };\n};\n\nexport const updateDocumentSubCategory = (\n  data: DocumentSubCategoryInterface\n) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<UpdateDocumentSubCategoryAction>({\n      type: ActionTypes.UPDATE_DOCUMENT_SUB_CATEGORY,\n      payload: data,\n    });\n  };\n};\n\nexport const deleteDocumentSubCategory = (data: string) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<DeleteDocumentSubCategoryAction>({\n      type: ActionTypes.DELETE_DOCUMENT_SUB_CATEGORY,\n      payload: data,\n    });\n  };\n};\n\n// FIELDS\nexport const getDocumentFields = () => {\n  return async (dispatch: Dispatch) => {\n    try {\n      setAxiosToken();\n      const res = await axios.get<DocumentFieldsInterface[]>(\n        `${API.AUTH}/categorysubcatedata`\n      );\n      console.log({ docFields: res });\n      dispatch<GetDocumentFieldsAction>({\n        type: ActionTypes.GET_DOCUMENT_FIELDS,\n        payload: res.data,\n        // payload: response.data,\n      });\n    } catch (error) {\n      console.log({ doc_SUB_category_error: error });\n    }\n  };\n};\n\nexport const createDocumentFields = (data: DocumentFieldsInterface) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<CreateDocumentFieldsAction>({\n      type: ActionTypes.CREATE_DOCUMENT_FIELDS,\n      payload: data,\n    });\n  };\n};\n\nexport const updateDocumentFields = (data: DocumentFieldsInterface) => {\n  console.log({ reducer: data });\n  return async (dispatch: Dispatch) => {\n    dispatch<UpdateDocumentFieldsAction>({\n      type: ActionTypes.UPDATE_DOCUMENT_FIELDS,\n      payload: data,\n    });\n  };\n};\n\nexport const deleteDocumentFields = (data: string) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<DeleteDocumentFieldsAction>({\n      type: ActionTypes.DELETE_DOCUMENT_FIELDS,\n      payload: data,\n    });\n  };\n};\n\n// REMOVE DUPLICATION IN CANDIDATES IN EDUCATION CATEGORY PER SESSION\nconst distinctCandidates = (\n  candidatesData: CandidatesInterface[]\n): CandidatesInterface[] => {\n  let result: CandidatesInterface[] = [];\n  let user_ids: string[] = [];\n  const newArray: CandidatesInterface[] = candidatesData.filter((candidate) => {\n    return candidate !== null && candidate !== undefined;\n  });\n  newArray.forEach((candidate) => {\n    if (!user_ids.includes(candidate.user_id)) {\n      result.push(candidate);\n      user_ids.push(candidate.user_id);\n    }\n  });\n  return result;\n};\n// CANDIDATE IN EDUCATION CATEGORY PER SESSION\nexport const getCandidatesInInstitute = (\n  educatin_type_id: string,\n  session_id: string,\n  callback: Function\n) => {\n  return async (dispatch: Dispatch) => {\n    callback(true, \"\", null);\n    try {\n      setAxiosToken();\n      const res = await axios.get<CandidatesInterface[]>(\n        `${API.APPLICATION}/educationtypeuserdocs/${educatin_type_id}/${session_id}`\n      );\n\n      console.log(\"====================================\");\n      console.log({\n        getCandidatesInInstitute: res,\n        distinctCandidates: distinctCandidates(res.data),\n      });\n      console.log(\"====================================\");\n      dispatch<GetCandidatesInInstituteAtion>({\n        type: ActionTypes.GET_CANDIDATE_IN_INSTITUTE,\n        payload: distinctCandidates(res.data),\n        // payload: response.data,\n      });\n      callback(false, \"\", distinctCandidates(res.data));\n    } catch (error) {\n      console.log({ getCandidatesInInstitute: error });\n      callback(false, errorToText(error), null);\n    }\n  };\n};\n\nexport const verifyDocument = (data: VerifyDocumentInterface) => {\n  console.log(\"====================================\");\n  console.log({ verifyDocument: data });\n  console.log(\"====================================\");\n  return async (dispatch: Dispatch) => {\n    dispatch<VerifyDocumentAction>({\n      type: ActionTypes.VERIFY_DOCUMENT,\n      payload: data,\n    });\n  };\n};\n","import React, { FC, ReactElement, ReactNode } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Auth, System } from \"../../actions\";\nimport { StoreState } from \"../../reducers\";\nimport { NavToogle, PageHasSubNav } from \"../../actions\";\nimport { MdBrightness1, MdSearch } from \"react-icons/md\";\n\n// props for the component\ninterface AppProps {\n  auth: Auth;\n  system: System;\n  PageHasSubNav: Function;\n  NavToogle: Function;\n  children: ReactNode;\n}\n//\ninterface AppState {\n  loading: boolean;\n}\n\nclass _SideNavigation extends React.Component<AppProps, AppState> {\n  constructor(props: AppProps) {\n    super(props);\n\n    this.state = {\n      loading: false,\n    };\n  }\n\n  componentDidMount = () => this.props.PageHasSubNav(true);\n  componentWillUnmount = () => this.props.PageHasSubNav(false);\n\n  render() {\n    const isAuthenticated = this.props.auth.isAuthenticated;\n\n    if (isAuthenticated === false) {\n      return null;\n    }\n\n    const navActive = this.props.system.navigation;\n    return (\n      <div\n        className={`fixed w-48 p-1 pr-2 pl-6 text-gray-700 bg-white ${\n          navActive === true ? \"lg:left-16  left-16\" : \" -left-72 lg:left-16\"\n        }  top-0 bottom-0 pt-20 z-30 shadow-lg  transition-all duration-500 ease-in-out overflow-y-auto`}\n      >\n        {this.props.children}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = ({\n  auth,\n  system,\n}: StoreState): { auth: Auth; system: System } => {\n  return { auth: auth, system: system };\n};\n\nexport const SideNavigation = connect(mapStateToProps, {\n  NavToogle,\n  PageHasSubNav,\n})(_SideNavigation);\n\n//************************************ FORM SEARCH **************************************** */\n\ntype SearchComponentInterface = {\n  data: any[];\n};\n\nexport const Search: FC<SearchComponentInterface> = ({\n  data,\n}): ReactElement => {\n  return (\n    <div className=\"m-1 rounded-md shadow-md border border-blue-400 bg-white p-1 flex \">\n      <label htmlFor=\"search-text\" className=\"inline-block text-2xl\">\n        <MdSearch className=\"inline-block text-blue-400\" />\n      </label>\n      <input\n        type=\"search\"\n        className=\"outline-none bg-transparent flex-1 pl-1\"\n        placeholder=\"Search\"\n        id=\"search-text\"\n      />\n    </div>\n  );\n};\n\n//************************************ FORM SEARCH **************************************** */\n\ntype MainItemComponentInterface = {\n  title: string;\n  icon?: any;\n  active?: boolean;\n  count?: number;\n};\n\n/**\n *\n * @param param0\n * @returns\n */\nexport const MainItem: FC<MainItemComponentInterface> = ({\n  title = \"\",\n  icon = MdBrightness1,\n  active = false,\n  count = 0,\n}): ReactElement => {\n  const IconDefined = icon;\n  return (\n    <section\n      className={`${\n        active === true\n          ? \"bg-blue-500 text-white font-bold\"\n          : \"bg-blue-100 text-blue-800\"\n      } mb-1 hover:font-bold py-1 hover:bg-blue-400 hover:text-white --font-bold  px-2 rounded-md flex cursor-pointer items-center`}\n    >\n      <section className=\"flex-1\">\n        <IconDefined className=\"inline-block mr-1 text-xs\" />\n        <span>{title}</span>\n      </section>\n\n      {count > 0 ? (\n        <span className=\"px-0.5 my-1 text-xs bg-blue-600 text-white rounded-full\">\n          {count}\n        </span>\n      ) : null}\n    </section>\n  );\n};\n\n//************************************ FORM SEARCH **************************************** */\n\ntype SubItemContainerComponentInterface = {\n  children: ReactNode;\n};\n\n/**\n *\n * @param param0\n * @returns\n */\nexport const SubItemContainer: FC<SubItemContainerComponentInterface> = ({\n  children,\n}): ReactElement => {\n  return (\n    <div className=\"ml-3 overflow-y-auto border-l-2 border-blue-200 -mt-1 pt-2 mb-2 pl-1 cursor-pointer\">\n      {children}\n    </div>\n  );\n};\n\n//************************************ FORM SEARCH **************************************** */\n\ntype SubItemComponentInterface = {\n  title: string;\n  icon?: any;\n  active?: boolean;\n  count?: number;\n};\n\n/**\n *\n * @param param0\n * @returns\n * @important Remenber to use these components inside the <SubItemContainer>...</SubItemContainer>\n */\nexport const SubItem: FC<SubItemComponentInterface> = ({\n  title = \"\",\n  icon = MdBrightness1,\n  active = false,\n  count = 0,\n}): ReactElement => {\n  const IconDefined = icon;\n\n  return (\n    <div\n      className={`animate__animated animate__zoomIn animate__faster ${\n        active === true ? \"bg-blue-500 text-white font-bold\" : \" text-blue-800\"\n      } text-blue-800 bg-blue-200 rounded-md px-1 mb-1 flex items-center py-1 font-bold`}\n    >\n      <IconDefined\n        className={`inline-block mr-0.1 text-xs ${\n          active === true ? \"text-white\" : \"\"\n        }`}\n      />\n      <span\n        className={`inline-block pl-1 ${active === true ? \"text-white\" : \"\"}`}\n      >\n        {title}\n      </span>\n      {count >= 1 ? (\n        <span\n          className={`text-sm fint-bold ${active === true ? \"text-white\" : \"\"}`}\n        >\n          {count}\n        </span>\n      ) : null}\n    </div>\n  );\n};\n","import React, { useState } from \"react\";\nimport { MdSearch } from \"react-icons/md\";\nimport { connect } from \"react-redux\";\nimport { ApplicationSession } from \"../../../actions\";\nimport {\n  course,\n  CandidateClaimInterface,\n  claimApplicationsInterface,\n  ClaimExamResultsDetails,\n} from \"../../../interfaces\";\nimport { candidatePlacementInterface } from \"../../../interfaces/placement\";\nimport { isClaimAllowed } from \"./ClaimForm\";\n\nexport const getCourseById = (courses: course[], course_id: string) => {\n  return courses.find((item) => item.course_id === course_id);\n};\n\nexport const getCourseIdBySheetId = (\n  allData: ClaimExamResultsDetails[],\n  sheet_id: string\n) => {\n  return allData.find((item) => item.answer_sheet_id === sheet_id);\n};\n\nexport const searchApplication = (\n  objList: claimApplicationsInterface[],\n  text: any\n): claimApplicationsInterface[] => {\n  if (undefined === text || text === \"\") return objList;\n  return objList.filter((product) => {\n    let flag;\n    // let dataKeys = product;\n\n    for (let prop in product) {\n      flag = false;\n      if (prop === \"position\") {\n        flag =\n          product.position.position_title\n            .toString()\n            .toLowerCase()\n            .indexOf(text.toLowerCase()) > -1;\n      }\n      if (flag) break;\n    }\n    return flag;\n  });\n  // return objList.filter((product) =>\n  //   product.position.position_title.includes(text)\n  // );\n};\n\ntype FormPlacementListProps = {\n  setChooseClaimFile: (value: boolean) => void;\n  setClaimFileId: (value: string) => void;\n  setViewThisFile: (value: string) => void;\n  claimFileId: string;\n  viewThisFile: string;\n  myPlacement: candidatePlacementInterface | null;\n  myClaims: CandidateClaimInterface[];\n  activeSession: ApplicationSession;\n\n  // REDUX //////////////////////\n};\n\nconst FormPlacementList: React.FC<FormPlacementListProps> = (props) => {\n  const [searchInput, setSearchInput] = useState<string>(\"\");\n\n  return (\n    <section>\n      {/* SEARCH PART */}\n      <div className=\"flex items-center w-full my-1\">\n        <MdSearch className=\"w-6 h-6 absolute ml-2\" />\n        <input\n          type=\"text\"\n          placeholder=\"Search\"\n          className=\"focus:border-2 h-7 ml-1 pl-9 mr-2 bg-gray-100 focus:border-gray-700 w-full rounded\"\n          onChange={(e) => setSearchInput(e.target.value)}\n          value={searchInput}\n          disabled={\n            props.myPlacement === null ||\n            isClaimAllowed(\n              props.myClaims,\n              props.activeSession.session_plan_id,\n              props.myPlacement.placed._id\n            )\n              ? false\n              : true\n          }\n        />\n        <button\n          className=\"bg-red-200 text-red-700 py-1 px-2 mr-1 rounded text-sm focus:outline-none\"\n          type=\"button\"\n          onClick={() => {\n            props.setChooseClaimFile(false);\n            props.setViewThisFile(\"\");\n          }}\n        >\n          Close\n        </button>\n      </div>\n      {/* END SEARCH PART ///////////////// */}{\" \"}\n      {/* searchData(props.candidateAnswers, searchInput) */}\n      <div className=\"w-full h-52 mt-2 overflow-y-auto divide-y divide-gray-300\">\n        {props.myPlacement ? (\n          isClaimAllowed(\n            props.myClaims,\n            props.activeSession.session_plan_id,\n            props.myPlacement.placed._id\n          ) && (\n            <div className=\"group flex items-center justify-between my-1 hover:bg-gray-100\">\n              <div\n                className=\"p-1 w-full mr-2 cursor-pointer\"\n                onClick={() => {\n                  props.setChooseClaimFile(false);\n                  props.setClaimFileId(props.myPlacement!.placed._id);\n                }}\n              >\n                <p className=\"text-base font-medium text-black\">\n                  Placed on {props.myPlacement.placed.school.school_name}\n                </p>\n              </div>\n              <button\n                type=\"button\"\n                className=\"bg-blue-200 hover:bg-blue-300 text-blue-700 group-hover:text-blue-800 py-1 px-2 mr-1 rounded text-sm\"\n                onClick={() => {\n                  props.setViewThisFile(props.myPlacement!.placed._id);\n                }}\n              >\n                View\n              </button>\n            </div>\n          )\n        ) : (\n          <div className=\"text-center p-3\">\n            <p className=\"text-base font-medium text-black\">\n              No placement to claim on!\n            </p>\n          </div>\n        )}\n      </div>\n    </section>\n  );\n};\n\n// const mapStateToProps = ({\n//   course,\n// }: StoreState): {\n//   courses: course[] | null;\n// } => {\n//   return {\n//     courses: course.courses,\n//   };\n// };\nexport default connect(null, {})(FormPlacementList);\n","import axios from \"axios\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Auth, loadCourses, PushPopupAlert } from \"../../../actions\";\nimport {\n  createClaim,\n  DocumentClaimUser,\n  GetClaimingTypes,\n  getClaimReasons,\n  getMyAnswers,\n  getMyClaims,\n  getMyPlacement,\n  getMyRejectedApplications,\n  getMyRejectedDocuments,\n} from \"../../../actions/claiming\";\nimport {\n  getDocumentCategory,\n  getDocumentSubCategory,\n  getDocumentFields,\n} from \"../../../actions/document\";\nimport { PopupAlertData } from \"../../../components/Alert/Popup\";\nimport Modal, { ModalSize, Themes } from \"../../../components/Modal/Modal\";\nimport {\n  CandidateClaimInterface,\n  claimApplicationsInterface,\n  ClaimExamResultsDetails,\n  claimReasonInterface,\n  course,\n  PlansInterface,\n  PlansTypeKeys,\n  SessionPlanInterface,\n} from \"../../../interfaces\";\nimport { candidatePlacementInterface } from \"../../../interfaces/placement\";\nimport { PopupAlertTheme } from \"../../../interfaces/popupAlert\";\nimport { StoreState } from \"../../../reducers\";\nimport { ClaimingReducerType } from \"../../../reducers/claiming\";\nimport { DocumentReducerInterface } from \"../../../reducers/document\";\nimport {\n  capitalizeFirstLetter,\n  isEmptyOrSpaces,\n} from \"../../../shared/dataTest\";\nimport { UserInterface } from \"../../../shared/interfaces\";\nimport { API } from \"../../../utils/api\";\nimport { setAxiosToken } from \"../../../utils/AxiosToken\";\nimport { errorToText } from \"../../../utils/errors\";\nimport { isPlanActive } from \"../../SessionSettings/ApplicationSession/SessionDetails\";\nimport ApplicationFormView from \"./ApplicationFormView\";\nimport ChooseReason from \"./ChooseReason\";\nimport DocFormView from \"./DocFormView\";\nimport ExaminationFormView from \"./ExaminationFormView\";\nimport FormApplicationList from \"./FormApplicationList\";\nimport FormDocumentList from \"./FormDocumentList\";\nimport FormExamList, {\n  getCourseById,\n  getCourseIdBySheetId,\n} from \"./FormExamList\";\nimport FormPlacementList from \"./FormPlacementList\";\n\nexport const ClaimGetDocTitle = (\n  documentCategories: DocumentReducerInterface,\n  doc: DocumentClaimUser\n): { category: string; sub_category: string; field: string; main: string } => {\n  let DocCategory: string = \"\",\n    DocSubCategory: string = \"\",\n    DocField: string = \"\",\n    DocTitle: string = \"\";\n  if (\n    doc.sub_category_id.length > 0 &&\n    documentCategories.documentSubCategory\n  ) {\n    DocTitle = documentCategories.documentSubCategory.filter(\n      (c) => c.user_detail_subcategory_id === doc.sub_category_id\n    )[0].title;\n    DocSubCategory = DocTitle;\n  } else if (\n    doc.category_id.length > 0 &&\n    documentCategories.documentCategory\n  ) {\n    DocTitle = documentCategories.documentCategory.filter(\n      (c) => c.user_detail_category_id === doc.category_id\n    )[0].title;\n    DocCategory = DocTitle;\n  }\n  if (\n    doc.category_subcategory_data &&\n    doc.category_subcategory_data.category_subcategory_Data_id.length > 0 &&\n    documentCategories.documentFields\n  ) {\n    console.log({ doc });\n    DocField = documentCategories.documentFields.filter(\n      (c) =>\n        c._id === doc.category_subcategory_data?.category_subcategory_Data_id\n    )[0].title;\n    DocTitle += \" in \" + DocField;\n  }\n\n  return {\n    category: DocCategory,\n    sub_category: DocSubCategory,\n    field: DocField,\n    main: DocTitle,\n  };\n};\n\nexport const isClaimAllowed = (\n  allClaim: CandidateClaimInterface[],\n  period_id: string,\n  claimOnId: string\n): boolean => {\n  if (\n    allClaim.find(\n      (item) =>\n        item.period_id === period_id && item.claiming_on_id === claimOnId\n    )\n  ) {\n    return false;\n  }\n  return true;\n};\n\ntype ClaimFormProps = {\n  // REQUIRED PROPS\n  formState: boolean;\n  setFormState: (value: boolean, response?: boolean) => void;\n  auth: Auth;\n  claiming: ClaimingReducerType;\n  documentReducer: DocumentReducerInterface;\n  courses: course[] | null;\n  loadCourses: Function;\n  getMyAnswers: Function;\n  getMyPlacement: Function;\n  getClaimReasons: Function;\n  createClaim: Function;\n  GetClaimingTypes: Function;\n  getDocumentCategory: Function;\n  getDocumentSubCategory: Function;\n  getDocumentFields: Function;\n  getMyRejectedApplications: Function;\n  getMyRejectedDocuments: Function;\n  getMyClaims: Function;\n  PushPopupAlert: (alert: PopupAlertData) => void;\n};\n\ntype ClaimFormState = {\n  loading: boolean;\n  loadingForm: boolean;\n  formError: {\n    element: string;\n    msg: string;\n  } | null;\n  thisClaimType: PlansTypeKeys | null;\n  thisClaimTypeId: string;\n  claimComment: string;\n  claimFileId: string;\n  chooseClaimFile: boolean;\n  chooseClaimReason: boolean;\n  claimReason: claimReasonInterface | null;\n  myPlacement: candidatePlacementInterface | null;\n  viewThisFile: string;\n  formType: \"DEFAULT\" | \"PROPS\";\n  alertError: string | null;\n};\n\nclass ClaimForm extends Component<ClaimFormProps, ClaimFormState> {\n  constructor(props: ClaimFormProps) {\n    super(props);\n\n    this.state = {\n      loading: false,\n      loadingForm: false,\n      formError: null,\n      thisClaimType: null,\n      thisClaimTypeId: \"\",\n      claimComment: \"\",\n      claimFileId: \"\",\n      chooseClaimFile: false,\n      viewThisFile: \"\",\n      formType: \"DEFAULT\",\n      alertError: null,\n      myPlacement: this.props.claiming.myPlacement,\n      chooseClaimReason: false,\n      claimReason: null,\n    };\n  }\n\n  setLoading = (state: boolean) => {\n    this.setState({ loading: state });\n  };\n\n  setLoadingForm = (state: boolean) => {\n    this.setState({ loadingForm: state });\n  };\n\n  setFormError = (\n    data: {\n      element: string;\n      msg: string;\n    } | null\n  ) => {\n    this.setState({ formError: data });\n  };\n\n  setAlertError = (data: string | null) => {\n    this.setState({ alertError: data });\n  };\n\n  setClaimFileId = (data: string) => {\n    this.setState({ claimFileId: data });\n  };\n\n  setViewThisFile = (data: string) => {\n    this.setState({ viewThisFile: data });\n  };\n\n  setChooseClaimFile = (data: boolean) => {\n    this.setState({ chooseClaimFile: data });\n  };\n\n  setChooseClaimReason = (data: boolean) => {\n    this.setState({ chooseClaimReason: data });\n  };\n\n  setClaimReason = (value: claimReasonInterface | null) => {\n    this.setState({ claimReason: value });\n  };\n\n  setClaimComment = (data: string) => {\n    this.setState({ claimComment: data });\n  };\n\n  isClaimTypeOpen = (\n    thisSession: SessionPlanInterface,\n    thisType: PlansTypeKeys\n  ): boolean => {\n    let data: PlansInterface | undefined;\n    if (thisType === PlansTypeKeys.APPLICATION) {\n      data = thisSession.plans.find(\n        (item) => item.type_key === PlansTypeKeys.APPLICATION\n      );\n      if (data && isPlanActive(thisSession, data) === \"OPEN\") {\n        return true;\n      }\n    } else if (thisType === PlansTypeKeys.DOCUMENT_VALIDATION) {\n      data = thisSession.plans.find(\n        (item) => item.type_key === PlansTypeKeys.DOCUMENT_VALIDATION\n      );\n      if (data && isPlanActive(thisSession, data) === \"OPEN\") {\n        return true;\n      }\n    } else if (thisType === PlansTypeKeys.PLACEMENT_TRANSFER) {\n      data = thisSession.plans.find(\n        (item) => item.type_key === PlansTypeKeys.PLACEMENT_TRANSFER\n      );\n      if (data && isPlanActive(thisSession, data) === \"OPEN\") {\n        return true;\n      }\n    }\n    return false;\n  };\n\n  displayClaimType = (claimType: PlansTypeKeys): string => {\n    let result: string = \"\";\n    switch (claimType) {\n      case PlansTypeKeys.APPLICATION:\n        result = \"application\";\n        break;\n      case PlansTypeKeys.DOCUMENT_VALIDATION:\n        result = \"document\";\n        break;\n      case PlansTypeKeys.EXAMINATION:\n        result = \"exam\";\n        break;\n      case PlansTypeKeys.MARKS_PUBLICATION:\n        result = \"marks publication\";\n        break;\n      case PlansTypeKeys.PLACEMENT_TRANSFER:\n        result = \"placement\";\n        break;\n      default:\n        result = \"\";\n        break;\n    }\n\n    return result;\n  };\n\n  loadExamAnswers = (\n    activeSessionPlan: SessionPlanInterface,\n    user_id: string\n  ) => {\n    this.props.getMyAnswers(\n      activeSessionPlan.session_plan_id,\n      user_id,\n      (status: boolean, msg: string, data: ClaimExamResultsDetails[]) => {\n        this.setLoading(status);\n        if (!status && msg.length) {\n          this.props.PushPopupAlert({\n            title: msg,\n            theme: PopupAlertTheme.danger,\n          });\n        }\n        if (data) {\n          console.log(\"====================================\");\n          console.log({ loadExamAnswers: data });\n          console.log(\"====================================\");\n        }\n      }\n    );\n  };\n\n  componentDidMount = () => {\n    if (this.props.auth.application_session === null) {\n      this.props.PushPopupAlert({\n        title: \"No session active session\",\n        theme: PopupAlertTheme.danger,\n      });\n      this.props.setFormState(false);\n      this.setState({\n        claimFileId: \"\",\n        thisClaimType: null,\n        thisClaimTypeId: \"\",\n        claimComment: \"\",\n        chooseClaimFile: false,\n        formType: \"DEFAULT\",\n        viewThisFile: \"\",\n        formError: null,\n      });\n    } else {\n      if (this.props.documentReducer.documentCategory === null) {\n        this.props.getDocumentCategory();\n      }\n      if (this.props.documentReducer.documentSubCategory === null) {\n        this.props.getDocumentSubCategory();\n      }\n      if (this.props.documentReducer.documentFields === null) {\n        this.props.getDocumentFields();\n      }\n      if (this.props.claiming.claimReasons === null) {\n        this.props.getClaimReasons((status: boolean, msg: string) => {\n          this.setLoading(status);\n          if (!status) {\n            if (msg.length > 0) {\n              this.props.PushPopupAlert({\n                title: msg,\n                theme: PopupAlertTheme.danger,\n              });\n            }\n          }\n        });\n      }\n    }\n  };\n\n  getDocumentById = (\n    documents: DocumentClaimUser[],\n    doc_id: string\n  ): DocumentClaimUser => {\n    return documents.filter((item) => item.doc_id === doc_id)[0];\n  };\n\n  getApplicationById = (\n    applications: claimApplicationsInterface[],\n    application_id: string\n  ): claimApplicationsInterface => {\n    return applications.filter(\n      (item) => item.application_id === application_id\n    )[0];\n  };\n\n  getExamById = (\n    exams: ClaimExamResultsDetails[],\n    answer_sheet_id: string\n  ): ClaimExamResultsDetails | undefined => {\n    return exams.find((item) => item.answer_sheet_id === answer_sheet_id);\n  };\n\n  getValidation = (\n    thisId: string\n  ): {\n    old_reason: string;\n    old_status: string;\n    old_evaluated_by: string;\n  } => {\n    let result: {\n      old_reason: string;\n      old_status: string;\n      old_evaluated_by: string;\n    } = { old_reason: \"\", old_status: \"\", old_evaluated_by: \"\" };\n\n    if (\n      this.state.thisClaimType === PlansTypeKeys.DOCUMENT_VALIDATION &&\n      this.props.claiming.candidateDocuments\n    ) {\n      result = {\n        old_reason: this.getDocumentById(\n          this.props.claiming.candidateDocuments,\n          thisId\n        ).validated_by.comment,\n        old_status: this.getDocumentById(\n          this.props.claiming.candidateDocuments,\n          thisId\n        ).validated_by.validation_status,\n        old_evaluated_by: this.getDocumentById(\n          this.props.claiming.candidateDocuments,\n          thisId\n        ).validated_by.user_id,\n      };\n    } else if (\n      this.state.thisClaimType === PlansTypeKeys.APPLICATION &&\n      this.props.claiming.candidateApplications\n    ) {\n      result = {\n        old_reason: this.getApplicationById(\n          this.props.claiming.candidateApplications,\n          thisId\n        ).override_by.comment,\n        old_status: this.getApplicationById(\n          this.props.claiming.candidateApplications,\n          thisId\n        ).override_by.application_status,\n        old_evaluated_by: this.getApplicationById(\n          this.props.claiming.candidateApplications,\n          thisId\n        ).override_by.user_id,\n      };\n    }\n\n    return result;\n  };\n\n  cleanToClose = (response?: boolean) => {\n    this.props.setFormState(false);\n    this.setState({\n      claimFileId: \"\",\n      thisClaimType: null,\n      thisClaimTypeId: \"\",\n      claimComment: \"\",\n      chooseClaimFile: false,\n      formType: \"DEFAULT\",\n      viewThisFile: \"\",\n      formError: null,\n    });\n  };\n\n  loadUserById = async (user_id: string, callback: Function) => {\n    if (isEmptyOrSpaces(user_id)) {\n      return this.props.PushPopupAlert({\n        title: \"No user id provided\",\n        theme: PopupAlertTheme.danger,\n      });\n    }\n    try {\n      setAxiosToken();\n      const res = await axios.get<UserInterface>(\n        `${API.AUTH}/users/${user_id}`\n      );\n      console.log(\"====================================\");\n      console.log({ loadUserById: res });\n      console.log(\"====================================\");\n      if (res) {\n        callback(res.data);\n      }\n    } catch (error) {\n      console.error({ error });\n      this.props.PushPopupAlert({\n        title: errorToText(error),\n        theme: PopupAlertTheme.danger,\n      });\n    }\n  };\n\n  getClaimTitle = (claimType: PlansTypeKeys): string => {\n    let result: string = \"\";\n    if (\n      claimType === PlansTypeKeys.DOCUMENT_VALIDATION &&\n      this.props.claiming.candidateDocuments\n    ) {\n      result = ClaimGetDocTitle(\n        this.props.documentReducer,\n        this.getDocumentById(\n          this.props.claiming.candidateDocuments,\n          this.state.claimFileId\n        )\n      ).main;\n    }\n    if (\n      claimType === PlansTypeKeys.APPLICATION &&\n      this.props.claiming.candidateApplications\n    ) {\n      result = this.getApplicationById(\n        this.props.claiming.candidateApplications,\n        this.state.claimFileId\n      ).position.position_title;\n    }\n    if (\n      claimType === PlansTypeKeys.EXAMINATION &&\n      this.props.courses &&\n      this.props.claiming.myAnswer &&\n      getCourseIdBySheetId(\n        this.props.claiming.myAnswer,\n        this.state.claimFileId\n      ) &&\n      getCourseById(\n        this.props.courses,\n        getCourseIdBySheetId(\n          this.props.claiming.myAnswer,\n          this.state.claimFileId\n        )!.course\n      )\n    ) {\n      result = getCourseById(\n        this.props.courses,\n        getCourseIdBySheetId(\n          this.props.claiming.myAnswer,\n          this.state.claimFileId\n        )!.course\n      )!.course_name;\n    }\n    if (\n      claimType === PlansTypeKeys.PLACEMENT_TRANSFER &&\n      this.state.myPlacement\n    ) {\n      result = \"Placed on \" + this.state.myPlacement.placed.school.school_name;\n    }\n\n    return result;\n  };\n\n  getClaimInstitute = (claimType: PlansTypeKeys): string => {\n    let result: string = \"\";\n    if (\n      claimType === PlansTypeKeys.APPLICATION &&\n      this.props.claiming.candidateApplications\n    ) {\n      result = this.getApplicationById(\n        this.props.claiming.candidateApplications,\n        this.state.claimFileId\n      ).position.education_institute_id.education_institute_id;\n    }\n\n    return result;\n  };\n\n  handleSubmit = async (e: React.FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n    if (!this.state.thisClaimType) {\n      return this.setFormError({\n        element: \"claim_type\",\n        msg: \"Claim type is required!\",\n      });\n    }\n    if (isEmptyOrSpaces(this.state.claimFileId)) {\n      return this.setFormError({\n        element: \"claim_file\",\n        msg: `Please select ${this.state.thisClaimType.toLocaleLowerCase()} you are claiming on!`,\n      });\n    }\n\n    if (!this.state.claimReason) {\n      return this.setFormError({\n        element: \"claim_reason\",\n        msg: `Please select the reason of your claim!`,\n      });\n    }\n\n    if (isEmptyOrSpaces(this.state.claimComment)) {\n      return this.setFormError({\n        element: \"claim_comment\",\n        msg: `Claim comment is required!`,\n      });\n    }\n\n    if (!this.props.auth.application_session) {\n      return this.setAlertError(`No active claiming session is available!`);\n    }\n\n    this.setLoadingForm(true);\n    let old_evaluator_email: string = \"info@system.com\";\n    let old_evaluator_name: string = \"System\";\n    let evaluator_email: string = \"\";\n    let evaluator_name: string = \"\";\n    let title: string = this.getClaimTitle(this.state.thisClaimType);\n    let institute_id: string = this.getClaimInstitute(this.state.thisClaimType);\n\n    if (\n      this.state.thisClaimType !== PlansTypeKeys.EXAMINATION &&\n      this.getValidation(this.state.claimFileId).old_evaluated_by !== \"system\"\n    ) {\n      await this.loadUserById(\n        this.getValidation(this.state.claimFileId).old_evaluated_by,\n        (data: UserInterface) => {\n          old_evaluator_email = data.email;\n          old_evaluator_name =\n            data.user_info.fname + \" \" + data.user_info.lname;\n        }\n      );\n    }\n\n    if (this.state.thisClaimType === PlansTypeKeys.EXAMINATION) {\n    }\n\n    try {\n      // console.log(\"====================================\");\n      // console.log({\n      //   claiming_on_id: this.state.claimFileId,\n      //   type_key: this.state.thisClaimType,\n      //   user: this.props.auth.user.user_id,\n      //   period_id: this.props.auth.application_session.session_plan_id,\n      //   default_claim_resaons: this.state.claimReason.id,\n      //   reason: this.state.claimComment,\n      //   old_reason:\n      //     this.state.thisClaimType === PlansTypeKeys.EXAMINATION ||\n      //     this.state.thisClaimType === PlansTypeKeys.PLACEMENT_TRANSFER\n      //       ? \"System\"\n      //       : this.getValidation(this.state.claimFileId).old_reason,\n      //   old_status:\n      //     this.state.thisClaimType === PlansTypeKeys.EXAMINATION ||\n      //     this.state.thisClaimType === PlansTypeKeys.PLACEMENT_TRANSFER\n      //       ? \"Failed\"\n      //       : this.getValidation(this.state.claimFileId).old_status,\n      //   old_evaluated_by:\n      //     this.state.thisClaimType === PlansTypeKeys.EXAMINATION ||\n      //     this.state.thisClaimType === PlansTypeKeys.PLACEMENT_TRANSFER\n      //       ? \"\"\n      //       : this.getValidation(this.state.claimFileId).old_evaluated_by,\n      //   old_evaluator_email,\n      //   old_evaluator_name,\n      //   evaluator_email,\n      //   evaluator_name,\n      //   title,\n      // });\n      // console.log(\"====================================\");\n\n      setAxiosToken();\n      const res = await axios.post<CandidateClaimInterface>(\n        `${API.CLAIMING}/user/create`,\n        {\n          claiming_on_id: this.state.claimFileId,\n          type_key: this.state.thisClaimType,\n          user: this.props.auth.user.user_id,\n          period_id: this.props.auth.application_session.session_plan_id,\n          default_claim_resaons: this.state.claimReason.id,\n          reason: this.state.claimComment,\n          old_reason:\n            this.state.thisClaimType === PlansTypeKeys.EXAMINATION ||\n            this.state.thisClaimType === PlansTypeKeys.PLACEMENT_TRANSFER\n              ? \"System\"\n              : this.getValidation(this.state.claimFileId).old_reason,\n          old_status:\n            this.state.thisClaimType === PlansTypeKeys.EXAMINATION ||\n            this.state.thisClaimType === PlansTypeKeys.PLACEMENT_TRANSFER\n              ? \"Failed\"\n              : this.getValidation(this.state.claimFileId).old_status,\n          old_evaluated_by:\n            this.state.thisClaimType === PlansTypeKeys.EXAMINATION ||\n            this.state.thisClaimType === PlansTypeKeys.PLACEMENT_TRANSFER\n              ? \"\"\n              : this.getValidation(this.state.claimFileId).old_evaluated_by,\n          old_evaluator_email,\n          old_evaluator_name,\n          evaluator_email,\n          evaluator_name,\n          title,\n          institute_id,\n        }\n      );\n      console.log({ createClaim: res });\n      if (res.status === 201 || res.status === 200) {\n        this.props.createClaim(res.data);\n        this.props.PushPopupAlert({\n          title: \"Claim sent successful\",\n          theme: PopupAlertTheme.success,\n        });\n        this.cleanToClose(true);\n      }\n    } catch (error) {\n      console.error({ error });\n      this.props.PushPopupAlert({\n        title: errorToText(error),\n        theme: PopupAlertTheme.danger,\n      });\n    }\n    this.setLoadingForm(false);\n  };\n\n  selectClaimType = (thisClaim: string) => {\n    this.setState({\n      thisClaimType: isEmptyOrSpaces(thisClaim)\n        ? null\n        : (thisClaim as PlansTypeKeys),\n    });\n\n    if ((thisClaim as PlansTypeKeys) === PlansTypeKeys.APPLICATION) {\n      if (this.props.claiming.candidateApplications === null) {\n        this.props.getMyRejectedApplications(\n          this.props.auth.user.user_id,\n          (\n            status: boolean,\n            msg: string,\n            data?: claimApplicationsInterface[]\n          ) => {\n            this.setLoading(status);\n            if (!status) {\n              if (msg.length > 0) {\n                this.props.PushPopupAlert({\n                  title: msg,\n                  theme: PopupAlertTheme.danger,\n                });\n              }\n            }\n          }\n        );\n      }\n      if (\n        this.props.courses === null ||\n        (this.props.courses.length === 0 && this.state.loading)\n      ) {\n        this.props.loadCourses(this.setLoading);\n        this.setLoading(false);\n      } else {\n        this.setLoading(false);\n      }\n    } else if ((thisClaim as PlansTypeKeys) === PlansTypeKeys.EXAMINATION) {\n      if (\n        this.props.courses === null ||\n        (this.props.courses.length === 0 && this.state.loading)\n      ) {\n        this.props.loadCourses(this.setLoading);\n        this.setLoading(false);\n      } else {\n        this.setLoading(false);\n      }\n    } else if (\n      (thisClaim as PlansTypeKeys) === PlansTypeKeys.DOCUMENT_VALIDATION\n    ) {\n      if (this.props.claiming.candidateDocuments === null) {\n        this.props.getMyRejectedDocuments(\n          (status: boolean, msg: string, data?: DocumentClaimUser[]) => {\n            this.setLoading(status);\n            if (!status) {\n              if (msg.length > 0) {\n                this.props.PushPopupAlert({\n                  title: msg,\n                  theme: PopupAlertTheme.danger,\n                });\n              }\n            }\n          }\n        );\n      }\n    } else if (\n      (thisClaim as PlansTypeKeys) === PlansTypeKeys.PLACEMENT_TRANSFER\n    ) {\n      if (this.props.claiming.myPlacement === null) {\n        this.props.getMyPlacement(\n          this.props.auth.user.user_id,\n          (\n            status: boolean,\n            msg: string,\n            data?: candidatePlacementInterface | null\n          ) => {\n            this.setLoading(status);\n            if (!status) {\n              if (msg.length > 0) {\n                this.props.PushPopupAlert({\n                  title: msg,\n                  theme: PopupAlertTheme.danger,\n                });\n              }\n            }\n            if (data) {\n              this.setState({ myPlacement: data });\n            }\n          }\n        );\n      }\n    }\n  };\n\n  generateChooseFileTitle = (thisClaimType: PlansTypeKeys | null): string => {\n    let result: string = \"\";\n\n    switch (thisClaimType) {\n      case PlansTypeKeys.APPLICATION:\n        result = `Select application you are claiming on?`;\n        break;\n      case PlansTypeKeys.DOCUMENT_VALIDATION:\n        result = `Select document you are claiming on?`;\n        break;\n      case PlansTypeKeys.EXAMINATION:\n        result = `Select exam you are claiming on?`;\n        break;\n      case PlansTypeKeys.MARKS_PUBLICATION:\n        result = `Select marks publication you are claiming on?`;\n        break;\n      case PlansTypeKeys.PLACEMENT_TRANSFER:\n        result = `Select placement you are claiming on?`;\n        break;\n      default:\n        result = \"Select file you are claiming on?\";\n        break;\n    }\n\n    return result;\n  };\n\n  render() {\n    if (\n      this.props.auth.application_session === null ||\n      this.props.claiming.myClaims === null\n    ) {\n      return null;\n    }\n\n    return (\n      <div className=\"pb-3\">\n        {this.props.formState && (\n          <Modal\n            backDrop={true}\n            theme={Themes.default}\n            close={(): void => {\n              !this.state.loadingForm &&\n                this.state.viewThisFile.length <= 0 &&\n                this.cleanToClose();\n              !this.state.loadingForm &&\n                this.state.viewThisFile.length > 0 &&\n                this.setViewThisFile(\"\");\n            }}\n            displayClose={true}\n            backDropClose={false}\n            title={\n              <div className=\"text-gray-900 font-bold text-xl md:ml-1\">\n                {this.state.viewThisFile.length <= 0 && \"Claiming form\"}\n                {this.state.viewThisFile.length > 0 &&\n                  this.state.thisClaimType ===\n                    PlansTypeKeys.DOCUMENT_VALIDATION &&\n                  \"Viewing document\"}\n                {this.state.viewThisFile.length > 0 &&\n                  this.state.thisClaimType === PlansTypeKeys.APPLICATION &&\n                  \"Viewing application\"}\n              </div>\n            }\n            widthSizeClass={\n              this.state.viewThisFile.length > 0\n                ? ModalSize.extraLarge\n                : ModalSize.medium\n            }\n            padding={{ title: true, body: false, footer: false }}\n          >\n            {/* CLAIM FORM ============================================== */}\n            {this.state.viewThisFile.length <= 0 && (\n              <form onSubmit={(e) => this.handleSubmit(e)}>\n                <div className=\"px-6 pb-3\">\n                  {this.state.alertError && (\n                    <div\n                      className=\"alert-warning cursor-pointer\"\n                      onClick={() => this.setAlertError(null)}\n                    >\n                      {this.state.alertError}\n                    </div>\n                  )}\n                  <div className=\"text-base text-gray-700 sm:text-lg\">\n                    {/* SELECT CLAIM TYPE ============================================== */}\n                    <div className=\"flex flex-col mb-2\">\n                      <label>Claim type</label>\n                      <select\n                        className={`rounded px-2 py-2 w-full bg-white focus:outline-none ${\n                          this.state.formType === \"PROPS\" &&\n                          \"cursor-not-allowed\"\n                        } ${\n                          this.state.formError &&\n                          this.state.formError.element === \"claim_type\"\n                            ? \"border-red-500\"\n                            : \"border-gray-500\"\n                        } border-2`}\n                        onChange={(e: React.ChangeEvent<HTMLSelectElement>) => {\n                          this.selectClaimType(e.target.value);\n                          this.setClaimFileId(\"\");\n                          this.state.formError &&\n                            this.state.formError.element === \"claim_type\" &&\n                            this.setFormError(null);\n                        }}\n                        value={\n                          this.state.thisClaimType\n                            ? this.state.thisClaimType\n                            : \"\"\n                        }\n                        disabled={\n                          this.state.loadingForm ||\n                          this.state.formType === \"PROPS\"\n                        }\n                      >\n                        <option value=\"\">Choose claim type</option>\n                        {Object.values(PlansTypeKeys).map((item, index) => (\n                          <option\n                            value={item}\n                            key={index + item}\n                            className={`${\n                              item === PlansTypeKeys.MARKS_PUBLICATION ||\n                              item === PlansTypeKeys.PLACEMENT_TRANSFER\n                                ? \"hidden\"\n                                : \"block\"\n                            }`}\n                          >\n                            {capitalizeFirstLetter(\n                              item.toLocaleLowerCase().replace(/_/g, \" \")\n                            )}\n                          </option>\n                        ))}\n                      </select>\n                      {this.state.formError &&\n                        this.state.formError.element === \"claim_type\" && (\n                          <span className=\"text-red-500\">\n                            {this.state.formError.msg}\n                          </span>\n                        )}\n                    </div>\n                    {/* END SELECT CLAIM TYPE ============================================== */}\n\n                    {/* SELECT FILE TO CLAIM ON ============================================== */}\n                    <div className=\"flex flex-col mb-2\">\n                      <label>\n                        {this.generateChooseFileTitle(this.state.thisClaimType)}\n                      </label>\n                      <div\n                        className={`text-left bg-white border-2 ${\n                          this.state.formType !== \"PROPS\"\n                            ? \"border-gray-700\"\n                            : \"border-gray-400 text-gray-500\"\n                        } rounded w-full ${\n                          this.state.chooseClaimFile ? \"h-64\" : \"h-10\"\n                        } ${\n                          this.state.formError &&\n                          this.state.formError.element === \"claim_file\"\n                            ? \"border-red-500\"\n                            : \"\"\n                        } border-2 ${\n                          this.state.loading\n                            ? \"cursor-waiting\"\n                            : this.state.thisClaimType &&\n                              !this.state.chooseClaimFile &&\n                              this.state.formType !== \"PROPS\"\n                            ? \"cursor-pointer\"\n                            : !this.state.chooseClaimFile &&\n                              \"cursor-not-allowed\"\n                        }`}\n                        title={\n                          !this.state.thisClaimType\n                            ? \"Choose claim type first!\"\n                            : \"\"\n                        }\n                        onClick={() => {\n                          !this.state.loading &&\n                            this.state.formType === \"DEFAULT\" &&\n                            this.state.thisClaimType &&\n                            !this.state.chooseClaimFile &&\n                            this.setChooseClaimFile(true);\n                          !this.state.loading &&\n                            this.state.formError &&\n                            this.state.formError.element === \"claim_file\" &&\n                            this.setFormError(null);\n                        }}\n                      >\n                        {/* DISPLAYING FILTERED SELECTING FILE ============================ */}\n                        {this.state.claimFileId.length > 0 &&\n                        this.state.thisClaimType &&\n                        !this.state.chooseClaimFile ? (\n                          <p className=\"my-1 mx-2\">\n                            {this.getClaimTitle(this.state.thisClaimType)}\n                          </p>\n                        ) : (\n                          !this.state.chooseClaimFile && (\n                            <p className=\"my-1 mx-2\">\n                              Select Claim{\" \"}\n                              {this.state.thisClaimType &&\n                                this.state.thisClaimType\n                                  .toLocaleLowerCase()\n                                  .replace(/_/g, \" \")}\n                            </p>\n                          )\n                        )}\n                        {/* END DISPLAYING FILTERED SELECTING FILE ============================ */}\n\n                        {/* LISTING OF REJECTED DOCUMENTS ============================ */}\n                        {this.state.chooseClaimFile &&\n                          this.state.thisClaimType ===\n                            PlansTypeKeys.DOCUMENT_VALIDATION &&\n                          this.props.claiming.candidateDocuments &&\n                          this.props.claiming.myClaims &&\n                          this.props.auth.application_session && (\n                            <FormDocumentList\n                              setChooseClaimFile={this.setChooseClaimFile}\n                              setClaimFileId={this.setClaimFileId}\n                              setViewThisFile={this.setViewThisFile}\n                              claimFileId={this.state.claimFileId}\n                              viewThisFile={this.state.viewThisFile}\n                              candidateDocuments={\n                                this.props.claiming.candidateDocuments\n                              }\n                              documentCategories={this.props.documentReducer}\n                              myClaims={this.props.claiming.myClaims}\n                              activeSession={\n                                this.props.auth.application_session\n                              }\n                            />\n                          )}\n                        {/* END LISTING OF REJECTED DOCUMENTS ============================ */}\n                        {/* ---------------------------------------------------------- */}\n                        {/* LISTING OF REJECTED APPLICATION ============================ */}\n                        {this.state.chooseClaimFile &&\n                          this.state.thisClaimType ===\n                            PlansTypeKeys.APPLICATION &&\n                          this.props.claiming.candidateApplications &&\n                          this.props.claiming.myClaims &&\n                          this.props.auth.application_session && (\n                            <FormApplicationList\n                              setChooseClaimFile={this.setChooseClaimFile}\n                              setClaimFileId={this.setClaimFileId}\n                              setViewThisFile={this.setViewThisFile}\n                              claimFileId={this.state.claimFileId}\n                              viewThisFile={this.state.viewThisFile}\n                              candidateApplications={\n                                this.props.claiming.candidateApplications\n                              }\n                              myClaims={this.props.claiming.myClaims}\n                              activeSession={\n                                this.props.auth.application_session\n                              }\n                            />\n                          )}\n                        {/* END LISTING OF REJECTED APPLICATION ============================ */}\n                        {/* ---------------------------------------------------------- */}\n                        {/* LISTING OF FAILED EXAM ============================ */}\n                        {this.state.chooseClaimFile &&\n                          this.state.thisClaimType ===\n                            PlansTypeKeys.EXAMINATION &&\n                          this.props.claiming.myAnswer &&\n                          this.props.claiming.myClaims &&\n                          this.props.auth.application_session && (\n                            <FormExamList\n                              setChooseClaimFile={this.setChooseClaimFile}\n                              setClaimFileId={this.setClaimFileId}\n                              setViewThisFile={this.setViewThisFile}\n                              claimFileId={this.state.claimFileId}\n                              viewThisFile={this.state.viewThisFile}\n                              candidateAnswers={this.props.claiming.myAnswer}\n                              myClaims={this.props.claiming.myClaims}\n                              activeSession={\n                                this.props.auth.application_session\n                              }\n                            />\n                          )}\n                        {/* END LISTING OF FAILED EXAM ============================ */}\n                        {/* ---------------------------------------------------------- */}\n                        {/* PENDING PLACEMENT ============================ */}\n                        {this.state.chooseClaimFile &&\n                          this.state.thisClaimType ===\n                            PlansTypeKeys.PLACEMENT_TRANSFER &&\n                          this.props.claiming.myClaims &&\n                          this.props.auth.application_session && (\n                            <FormPlacementList\n                              setChooseClaimFile={this.setChooseClaimFile}\n                              setClaimFileId={this.setClaimFileId}\n                              setViewThisFile={this.setViewThisFile}\n                              claimFileId={this.state.claimFileId}\n                              viewThisFile={this.state.viewThisFile}\n                              myClaims={this.props.claiming.myClaims}\n                              activeSession={\n                                this.props.auth.application_session\n                              }\n                              myPlacement={this.state.myPlacement}\n                            />\n                          )}\n                        {/* END LISTING OF FAILED Placement ============================ */}\n                      </div>\n                      {this.state.formError &&\n                        this.state.formError.element === \"claim_file\" && (\n                          <span className=\"text-red-500\">\n                            {this.state.formError.msg}\n                          </span>\n                        )}\n                    </div>\n                    {/* END SELECT FILE TO CLAIM ON ============================================== */}\n\n                    {/* CLAIM REASONS ========================================== */}\n                    <div className=\"flex flex-col mb-2\">\n                      <label>Choose reason of your claim</label>\n                      <div\n                        className={`text-left bg-white border-2 border-gray-700 rounded w-full ${\n                          this.state.chooseClaimReason ? \"h-64\" : \"h-auto\"\n                        } ${\n                          this.state.formError &&\n                          this.state.formError.element === \"claim_reason\"\n                            ? \"border-red-500\"\n                            : \"\"\n                        } border-2 ${\n                          this.props.claiming.claimReasons === null\n                            ? \"cursor-wait\"\n                            : \"cursor-pointer\"\n                        }`}\n                        title=\"Choose the reason for your claim!\"\n                        onClick={() => {\n                          !this.state.chooseClaimReason &&\n                            this.setState({ chooseClaimReason: true });\n                          this.state.formError &&\n                            this.state.formError.element === \"claim_reason\" &&\n                            this.setFormError(null);\n                        }}\n                      >\n                        {/* DISPLAYING SELECTED REASON ============================ */}\n                        {this.state.claimReason &&\n                        !this.state.chooseClaimReason ? (\n                          <p className=\"my-1 mx-2\">\n                            {this.state.claimReason.reason}\n                          </p>\n                        ) : (\n                          !this.state.chooseClaimReason && (\n                            <p className=\"my-1 mx-2\">Select reason</p>\n                          )\n                        )}\n                        {/* END DISPLAYING SELECTED REASON ============================ */}\n\n                        {/* LISTING OF CLAIM REASONS ============================ */}\n                        {this.state.chooseClaimReason &&\n                          this.props.claiming.claimReasons && (\n                            <ChooseReason\n                              setChooseClaimReason={this.setChooseClaimReason}\n                              setClaimReason={this.setClaimReason}\n                              claimReason={this.state.claimReason}\n                              allClaimReasons={this.props.claiming.claimReasons}\n                            />\n                          )}\n                        {/* END LISTING OF CLAIM REASONS ============================ */}\n                      </div>\n                      {this.state.formError &&\n                        this.state.formError.element === \"claim_reason\" && (\n                          <span className=\"text-red-500\">\n                            {this.state.formError.msg}\n                          </span>\n                        )}\n                    </div>\n                    {/* END CLAIM REASONS ========================================== */}\n\n                    {/* CLAIM COMMENT ============================================== */}\n                    <div className=\"flex flex-col\">\n                      <label>Comment</label>\n                      <textarea\n                        className={`text-left input-white w-20 inline-block ${\n                          this.state.formError &&\n                          this.state.formError.element === \"claim_comment\"\n                            ? \"border-red-500\"\n                            : \"border-gray-500\"\n                        } border-2`}\n                        placeholder={`Claim comment`}\n                        style={{ resize: \"none\" }}\n                        value={this.state.claimComment}\n                        onChange={(e) => {\n                          this.setClaimComment(e.target.value);\n                          this.state.formError &&\n                            this.state.formError.element === \"claim_comment\" &&\n                            this.setFormError(null);\n                        }}\n                        rows={3}\n                        disabled={this.state.loadingForm}\n                      ></textarea>\n                      {this.state.formError &&\n                        this.state.formError.element === \"claim_comment\" && (\n                          <span className=\"text-red-500\">\n                            {this.state.formError.msg}\n                          </span>\n                        )}\n                    </div>\n                    {/* END CLAIM COMMENT ============================================== */}\n                  </div>\n\n                  <div className=\"pt-3 flex justify-between\">\n                    <button\n                      onClick={() => this.cleanToClose()}\n                      className={`btn bg-gray-400 text-white hover:bg-gray-600 focus:outline-none ${\n                        this.state.loadingForm && \"cursor-not-allowed\"\n                      }`}\n                      type=\"button\"\n                      disabled={this.state.loadingForm || this.state.loading}\n                    >\n                      Exit\n                    </button>\n                    <button\n                      className={`btn bg-primary text-white hover:bg-blue-600 focus:outline-none ${\n                        this.state.loadingForm && \"cursor-wait\"\n                      }`}\n                      type=\"submit\"\n                      disabled={this.state.loadingForm || this.state.loading}\n                    >\n                      {this.state.loadingForm ? \"Loading...\" : \"Claim\"}\n                    </button>\n                  </div>\n                </div>\n              </form>\n            )}\n            {/* END CLAIM FORM ============================================== */}\n\n            {/* CLAIM DOCUMENT VIEW ============================================== */}\n            {this.state.viewThisFile.length > 0 &&\n              this.props.claiming.candidateDocuments &&\n              this.state.thisClaimType ===\n                PlansTypeKeys.DOCUMENT_VALIDATION && (\n                <DocFormView\n                  thisDoc={this.getDocumentById(\n                    this.props.claiming.candidateDocuments,\n                    this.state.viewThisFile\n                  )}\n                  setViewThisFile={this.setViewThisFile}\n                  documentCategories={this.props.documentReducer}\n                  setChooseClaimFile={this.setChooseClaimFile}\n                  setClaimFileId={this.setClaimFileId}\n                />\n              )}\n            {/* END CLAIM DOCUMENT VIEW ============================================== */}\n            {/* ------------------------------------------------------------------------- */}\n            {/* CLAIM APPLICATION VIEW ============================================== */}\n            {this.state.viewThisFile.length > 0 &&\n              this.props.claiming.candidateApplications &&\n              this.state.thisClaimType === PlansTypeKeys.APPLICATION && (\n                <ApplicationFormView\n                  thisApplication={this.getApplicationById(\n                    this.props.claiming.candidateApplications,\n                    this.state.viewThisFile\n                  )}\n                  documentCategories={this.props.documentReducer}\n                  setChooseClaimFile={this.setChooseClaimFile}\n                  setClaimFileId={this.setClaimFileId}\n                  setViewThisFile={this.setViewThisFile}\n                />\n              )}\n            {/* END CLAIM APPLICATION VIEW ============================================== */}\n            {/* ------------------------------------------------------------------------- */}\n            {/* CLAIM EXAMINATION VIEW ============================================== */}\n            {this.state.viewThisFile.length > 0 &&\n              this.props.claiming.myAnswer &&\n              this.state.thisClaimType === PlansTypeKeys.EXAMINATION &&\n              this.getExamById(\n                this.props.claiming.myAnswer,\n                this.state.viewThisFile\n              ) && (\n                <ExaminationFormView\n                  thisAnswerSheet={\n                    this.getExamById(\n                      this.props.claiming.myAnswer,\n                      this.state.viewThisFile\n                    )!\n                  }\n                  setChooseClaimFile={this.setChooseClaimFile}\n                  setClaimFileId={this.setClaimFileId}\n                  setViewThisFile={this.setViewThisFile}\n                  // thisAnswerSheet={undefined}\n                  // setViewThisFile={undefined}\n                  // setChooseClaimFile={undefined}\n                  // setClaimFileId={undefined}\n                />\n              )}\n            {/* END CLAIM EXAMINATION VIEW ============================================== */}\n          </Modal>\n        )}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = ({\n  auth,\n  document,\n  claiming,\n  course,\n}: StoreState): {\n  auth: Auth;\n  documentReducer: DocumentReducerInterface;\n  claiming: ClaimingReducerType;\n  courses: course[] | null;\n} => {\n  return {\n    auth: auth,\n    documentReducer: document,\n    claiming,\n    courses: course.courses,\n  };\n};\n\nexport default connect(mapStateToProps, {\n  loadCourses,\n  getMyClaims,\n  getClaimReasons,\n  getMyAnswers,\n  getMyPlacement,\n  createClaim,\n  GetClaimingTypes,\n  getMyRejectedApplications,\n  getMyRejectedDocuments,\n  getDocumentCategory,\n  getDocumentSubCategory,\n  getDocumentFields,\n  PushPopupAlert,\n})(ClaimForm);\n","import React from \"react\";\nimport Table from \"../../components/Table/Table\";\nimport { isEmptyOrSpaces } from \"../../shared/dataTest\";\nimport { PositionRequirementTableInterface } from \"./ViewPosition\";\n\ninterface RequirementProps {\n  requirements: PositionRequirementTableInterface[];\n}\n\nconst ViewRequirements: React.FC<RequirementProps> = (props) => {\n  const tableData = (): JSX.Element[] => {\n    let data: PositionRequirementTableInterface[] = props.requirements;\n    // let data: PositionSubcategoryData[] =\n    //   props.position_requirement.position_requirement;\n    if (data.length === 0) {\n      return [\n        <tr key={153} className=\"border-b border-gray-200 hover:bg-gray-100\">\n          <td className=\"p-3 text-center\" colSpan={3}>\n            No Data Found\n          </td>\n        </tr>,\n      ];\n    }\n\n    return data.map((item, index) => (\n      <tr\n        key={index + item.field_id}\n        className=\"border-b border-gray-200 hover:bg-gray-100\"\n      >\n        <td className=\"p-3 text-left whitespace-nowrap\">{index + 1}</td>\n        <td className=\"p-3 text-left\">\n          <span>{item.subcategory_title}</span>\n        </td>\n        <td className=\"p-3 text-left\">\n          <span>\n            {isEmptyOrSpaces(item.field_id) ? \"Any document\" : item.field_title}\n          </span>\n        </td>\n        <td className=\"p-3 text-left text-lg italic\">\n          {isEmptyOrSpaces(item.field_id) ? (\n            item.subcategory_required ? (\n              <span className=\"text-yellow-800\">Required</span>\n            ) : (\n              \"Optional\"\n            )\n          ) : item.required ? (\n            <span className=\"text-yellow-800\">Required</span>\n          ) : (\n            \"Optional\"\n          )}\n        </td>\n      </tr>\n    ));\n  };\n\n  return (\n    <div>\n      <Table\n        columns={[\n          { columnTitle: \"#\", alignText: \"left\", padding: \"p-3\" },\n          { columnTitle: \"Qualification\", alignText: \"left\", padding: \"p-3\" },\n          // {\n          //   columnTitle: \"Qualification Status\",\n          //   alignText: \"left\",\n          //   padding: \"p-3\",\n          // },\n          { columnTitle: \"Document\", alignText: \"left\", padding: \"p-3\" },\n          { columnTitle: \"Status\", alignText: \"left\", padding: \"p-3\" },\n          // { columnTitle: \"\", alignText: \"left\", padding: \"p-3\" },\n        ]}\n        rows={tableData}\n        pagination={false}\n        search={false}\n        thColor=\"gray\"\n      />\n    </div>\n  );\n};\n\nexport default ViewRequirements;\n","import React, { useState } from \"react\";\nimport { MdSearch } from \"react-icons/md\";\nimport { connect } from \"react-redux\";\nimport { ApplicationSession } from \"../../../actions\";\nimport {\n  course,\n  CandidateClaimInterface,\n  claimApplicationsInterface,\n  ClaimExamResultsDetails,\n} from \"../../../interfaces\";\nimport { StoreState } from \"../../../reducers\";\nimport { search } from \"../../../utils/functions\";\nimport { isClaimAllowed } from \"./ClaimForm\";\n\nconst getFailedExam = (\n  allData: ClaimExamResultsDetails[],\n  allCourses: course[]\n): ClaimExamResultsDetails[] => {\n  let result: ClaimExamResultsDetails[] = [];\n  allData.forEach((element) => {\n    if (element.total_marks < 100) {\n      let data = element;\n      data.course_name = getCourseById(allCourses, element.course)\n        ? getCourseById(allCourses, element.course)!.course_name\n        : \"Unknown exam\";\n      result.push(data);\n    }\n  });\n\n  return result;\n};\n\nexport const getCourseById = (courses: course[], course_id: string) => {\n  return courses.find((item) => item.course_id === course_id);\n};\n\nexport const getCourseIdBySheetId = (\n  allData: ClaimExamResultsDetails[],\n  sheet_id: string\n) => {\n  return allData.find((item) => item.answer_sheet_id === sheet_id);\n};\n\nexport const searchApplication = (\n  objList: claimApplicationsInterface[],\n  text: any\n): claimApplicationsInterface[] => {\n  if (undefined === text || text === \"\") return objList;\n  return objList.filter((product) => {\n    let flag;\n    // let dataKeys = product;\n\n    for (let prop in product) {\n      flag = false;\n      if (prop === \"position\") {\n        flag =\n          product.position.position_title\n            .toString()\n            .toLowerCase()\n            .indexOf(text.toLowerCase()) > -1;\n      }\n      if (flag) break;\n    }\n    return flag;\n  });\n  // return objList.filter((product) =>\n  //   product.position.position_title.includes(text)\n  // );\n};\n\ntype FormExamListProps = {\n  setChooseClaimFile: (value: boolean) => void;\n  setClaimFileId: (value: string) => void;\n  setViewThisFile: (value: string) => void;\n  claimFileId: string;\n  viewThisFile: string;\n  candidateAnswers: ClaimExamResultsDetails[];\n  myClaims: CandidateClaimInterface[];\n  activeSession: ApplicationSession;\n\n  // REDUX //////////////////////\n  courses: course[] | null;\n};\n\nconst FormExamList: React.FC<FormExamListProps> = (props) => {\n  const [searchInput, setSearchInput] = useState<string>(\"\");\n\n  return (\n    <section>\n      {/* SEARCH PART */}\n      <div className=\"flex items-center w-full my-1\">\n        <MdSearch className=\"w-6 h-6 absolute ml-2\" />\n        <input\n          type=\"text\"\n          placeholder=\"Search\"\n          className=\"focus:border-2 h-7 ml-1 pl-9 mr-2 bg-gray-100 focus:border-gray-700 w-full rounded\"\n          onChange={(e) => setSearchInput(e.target.value)}\n          value={searchInput}\n          disabled={\n            !props.courses ||\n            getFailedExam(props.candidateAnswers, props.courses).filter(\n              (item) =>\n                isClaimAllowed(\n                  props.myClaims,\n                  props.activeSession.session_plan_id,\n                  item.answer_sheet_id\n                )\n            ).length > 0\n              ? false\n              : true\n          }\n        />\n        <button\n          className=\"bg-red-200 text-red-700 py-1 px-2 mr-1 rounded text-sm focus:outline-none\"\n          type=\"button\"\n          onClick={() => {\n            props.setChooseClaimFile(false);\n            props.setViewThisFile(\"\");\n          }}\n        >\n          Close\n        </button>\n      </div>\n      {/* END SEARCH PART ///////////////// */}{\" \"}\n      {/* searchData(props.candidateAnswers, searchInput) */}\n      <div className=\"w-full h-52 mt-2 overflow-y-auto divide-y divide-gray-300\">\n        {props.courses &&\n        getFailedExam(props.candidateAnswers, props.courses).filter((item) =>\n          isClaimAllowed(\n            props.myClaims,\n            props.activeSession.session_plan_id,\n            item.answer_sheet_id\n          )\n        ).length > 0 ? (\n          search(\n            getFailedExam(props.candidateAnswers, props.courses).filter(\n              (item) =>\n                isClaimAllowed(\n                  props.myClaims,\n                  props.activeSession.session_plan_id,\n                  item.answer_sheet_id\n                )\n            ),\n            searchInput\n          ).map((item: ClaimExamResultsDetails, index: number) => (\n            <div\n              className={`group flex items-center justify-between my-1 hover:bg-gray-100 ${\n                props.claimFileId === item.answer_sheet_id &&\n                \"bg-blue-50 border-l-4 border-blue-500\"\n              }`}\n              key={index + item.answer_sheet_id}\n            >\n              <div\n                className=\"p-1 w-full mr-2 cursor-pointer\"\n                onClick={() => {\n                  props.setChooseClaimFile(false);\n                  props.setClaimFileId(item.answer_sheet_id);\n                }}\n              >\n                <p className=\"text-base font-medium text-black\">\n                  {item.course_name}\n                </p>\n              </div>\n              <button\n                type=\"button\"\n                className=\"bg-blue-200 hover:bg-blue-300 text-blue-700 group-hover:text-blue-800 py-1 px-2 mr-1 rounded text-sm\"\n                onClick={() => {\n                  props.setViewThisFile(item.answer_sheet_id);\n                }}\n              >\n                View\n              </button>\n            </div>\n          ))\n        ) : (\n          <div className=\"text-center p-3\">\n            <p className=\"text-base font-medium text-black\">\n              No failed exam available\n            </p>\n          </div>\n        )}\n      </div>\n    </section>\n  );\n};\n\nconst mapStateToProps = ({\n  course,\n}: StoreState): {\n  courses: course[] | null;\n} => {\n  return {\n    courses: course.courses,\n  };\n};\nexport default connect(mapStateToProps, {})(FormExamList);\n","import React from \"react\";\nimport { MdTurnedIn } from \"react-icons/md\";\nimport { connect } from \"react-redux\";\nimport { PushPopupAlert } from \"../../../actions\";\nimport NoResult, {\n  NoResultThemes,\n} from \"../../../components/NoResult/NoResult\";\nimport {\n  claimApplicationsInterface,\n  claimApplicationsPositionInterface,\n} from \"../../../interfaces\";\nimport { ApplicationStates } from \"../../../interfaces/application\";\nimport { DocumentReducerInterface } from \"../../../reducers/document\";\nimport { capitalizeFirstLetter } from \"../../../shared/dataTest\";\nimport { UserInterface } from \"../../../shared/interfaces\";\nimport { DATE } from \"../../../utils/functions\";\nimport { PositionRequirementTableInterface } from \"../../Positions/ViewPosition\";\nimport ViewRequirements from \"../../Positions/ViewRequirements\";\n\nexport const FC_ApplicationPositionDistinctCategory = (\n  thisPosition: claimApplicationsPositionInterface,\n  documentCategories: DocumentReducerInterface\n): {\n  PositionsTemp: PositionRequirementTableInterface[];\n  DistinctCategoriesTemp: PositionRequirementTableInterface[];\n  DistinctSubCategoriesTemp: PositionRequirementTableInterface[];\n} => {\n  let PositionsTemp: PositionRequirementTableInterface[] = [];\n  let DistinctCategoriesTemp: PositionRequirementTableInterface[] = [],\n    DistinctCategoriesIds: string[] = [];\n  let DistinctSubCategoriesTemp: PositionRequirementTableInterface[] = [],\n    DistinctSubCategoriesIds: string[] = [];\n  // GET REQUIREMENTS OF THE CURRENT POSITION ====================\n  let requirements = thisPosition.requirements;\n  // LOOP THROUGH CURRENT POSITION REQUIREMENTS ==========================\n  for (let req in requirements) {\n    let thisRequirements = requirements[req];\n    // GET DOC CATEGORY OF THE CURRENT POSITION REQUIREMENTS ====================\n    let thisCategory = documentCategories.documentCategory\n      ? documentCategories.documentCategory.find(\n          (item) =>\n            item.user_detail_category_id ===\n            thisRequirements.user_detail_category_id\n        ) && {\n          title: documentCategories.documentCategory.find(\n            (item) =>\n              item.user_detail_category_id ===\n              thisRequirements.user_detail_category_id\n          )!.title,\n          user_detail_category_id: documentCategories.documentCategory.find(\n            (item) =>\n              item.user_detail_category_id ===\n              thisRequirements.user_detail_category_id\n          )!.user_detail_category_id,\n        }\n      : {\n          title: \"\",\n          user_detail_category_id: thisRequirements.user_detail_category_id,\n        };\n    // GET DOC SUB CATEGORY OF THE CURRENT POSITION REQUIREMENTS ====================\n    let thisSubCategory = documentCategories.documentSubCategory\n      ? documentCategories.documentSubCategory.find(\n          (item) =>\n            item.user_detail_subcategory_id ===\n            thisRequirements.user_detail_subcategory_id\n        )\n        ? {\n            title: documentCategories.documentSubCategory.find(\n              (item) =>\n                item.user_detail_subcategory_id ===\n                thisRequirements.user_detail_subcategory_id\n            )!.title,\n            user_detail_subcategory_id:\n              documentCategories.documentSubCategory.find(\n                (item) =>\n                  item.user_detail_subcategory_id ===\n                  thisRequirements.user_detail_subcategory_id\n              )!.user_detail_subcategory_id,\n            category_id: documentCategories.documentSubCategory.find(\n              (item) =>\n                item.user_detail_subcategory_id ===\n                thisRequirements.user_detail_subcategory_id\n            )!.category_id,\n          }\n        : {\n            title: \"\",\n            user_detail_subcategory_id:\n              thisRequirements.user_detail_subcategory_id,\n            category_id: \"\",\n          }\n      : {\n          title: \"\",\n          user_detail_subcategory_id:\n            thisRequirements.user_detail_subcategory_id,\n          category_id: \"\",\n        };\n    // LOOP THROUGH FIELDS OF THE CURRENT POSITION REQUIREMENTS ==========================\n    if (thisCategory) {\n      for (let field in thisRequirements.position_requirement) {\n        // GET FIELDS OF THE CURRENT POSITION REQUIREMENTS ====================\n        let thisField = documentCategories.documentFields\n          ? documentCategories.documentFields.find(\n              (item) =>\n                item._id ===\n                thisRequirements.position_requirement[field]\n                  .category_subcategory_data_id\n            )\n            ? {\n                title: documentCategories.documentFields.find(\n                  (item) =>\n                    item._id ===\n                    thisRequirements.position_requirement[field]\n                      .category_subcategory_data_id\n                )!.title,\n                _id: documentCategories.documentFields.find(\n                  (item) =>\n                    item._id ===\n                    thisRequirements.position_requirement[field]\n                      .category_subcategory_data_id\n                )!._id,\n                required: thisRequirements.position_requirement[field].required,\n              }\n            : {\n                title: \"\",\n                _id: thisRequirements.user_detail_subcategory_id,\n                required: thisRequirements.position_requirement[field].required,\n              }\n          : {\n              title: \"\",\n              _id: thisRequirements.user_detail_subcategory_id,\n              required: thisRequirements.position_requirement[field].required,\n            };\n        // ADD CURRENT CATEGORY, SUB CATEGORY & FIELDS OF THE CURRENT POSITION REQUIREMENTS IN POSITIONS TEMP ====================\n        PositionsTemp.push({\n          category_id: thisCategory.user_detail_category_id,\n          category_title: thisCategory.title,\n          subcategory_id: thisSubCategory.user_detail_subcategory_id,\n          subcategory_title: thisSubCategory.title,\n          subcategory_required: thisRequirements.required,\n          field_title: thisField.title,\n          field_id: thisField._id,\n          required: thisField.required,\n        });\n      }\n\n      // ADD CATEOGRY OF THE CURRENT POSITION REQUIREMENTS TO ARRAY ====================\n      if (\n        !DistinctCategoriesIds.includes(thisCategory.user_detail_category_id)\n      ) {\n        DistinctCategoriesIds.push(thisCategory.user_detail_category_id);\n        DistinctCategoriesTemp.push({\n          category_id: thisCategory.user_detail_category_id,\n          category_title: thisCategory.title,\n          subcategory_id: \"\",\n          subcategory_title: \"\",\n          subcategory_required: thisRequirements.required,\n          field_title: \"\",\n          field_id: \"\",\n          required: false,\n        });\n      }\n\n      // ADD SUB CATEOGRY OF THE CURRENT POSITION REQUIREMENTS TO ARRAY ====================\n      if (\n        !DistinctSubCategoriesIds.includes(\n          thisSubCategory.user_detail_subcategory_id\n        )\n      ) {\n        DistinctSubCategoriesIds.push(\n          thisSubCategory.user_detail_subcategory_id\n        );\n        DistinctSubCategoriesTemp.push({\n          category_id: thisSubCategory.category_id,\n          category_title: \"\",\n          subcategory_id: thisSubCategory.user_detail_subcategory_id,\n          subcategory_title: thisSubCategory.title,\n          subcategory_required: thisRequirements.required,\n          field_title: \"\",\n          field_id: \"\",\n          required: false,\n        });\n      }\n    }\n  }\n  // DistinctCategoriesIds.;\n\n  return { PositionsTemp, DistinctCategoriesTemp, DistinctSubCategoriesTemp };\n};\n\nexport const showEvaluator = (\n  userList: UserInterface[],\n  user_id: string\n): string => {\n  let result: string = \"\";\n  if (user_id === \"system\") {\n    result = \"System\";\n  } else {\n    // let user = getUserDocuments(userList, user_id);\n    // let user = undefined;\n    // if (user) {\n    //   result = user.user.user_info.fname + \" \" + user.user.user_info.lname;\n    // }\n  }\n  return result;\n};\n\ntype ApplicationFormViewProps = {\n  thisApplication: claimApplicationsInterface;\n  setViewThisFile: (value: string) => void;\n  setChooseClaimFile: (value: boolean) => void;\n  setClaimFileId: (value: string) => void;\n  documentCategories: DocumentReducerInterface;\n  PushPopupAlert: Function;\n};\n\nconst ApplicationFormView: React.FC<ApplicationFormViewProps> = (props) => {\n  return (\n    <section className=\"\">\n      <div className=\"w-full bg-gray-100 px-4 py-1 animate__animated animate__fadeIn\">\n        <div className=\"flex flex-col mb-2\">\n          {/* APPLICATION TITLE ========== */}\n          <section className=\"flex items-center justify-between\">\n            <span className=\"text-blue-600 font-bold text-2xl\">\n              {props.thisApplication.position.position_title}\n            </span>\n            <button\n              type=\"button\"\n              className=\"btn btn-blue\"\n              onClick={() => {\n                props.setChooseClaimFile(false);\n                props.setClaimFileId(props.thisApplication.application_id);\n                props.setViewThisFile(\"\");\n              }}\n            >\n              Choose\n            </button>\n          </section>\n          <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n            <span className={`italic`}>Date:</span>\n            <span className=\"font-bold text-gray-900 py-1\">\n              {DATE(props.thisApplication.createdAt)}\n            </span>\n          </div>\n          {false && (\n            <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n              <span className={`italic`}>Session:</span>\n              <span className=\"font-bold text-gray-900 py-1\">\n                {\n                  props.thisApplication.application_session\n                    .application_session_name\n                }\n              </span>\n            </div>\n          )}\n          <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n            <span className={`italic`}>Status:</span>\n            <span\n              className={`font-bold ${\n                props.thisApplication.application_status ===\n                ApplicationStates.Rejected\n                  ? \"text-yellow-900\"\n                  : \"text-blue-600\"\n              } py-1`}\n            >\n              {capitalizeFirstLetter(props.thisApplication.application_status)}\n            </span>\n          </div>\n          {/* <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n            <span className={`italic`}>Evaluated by:</span>\n            <span className=\"font-bold text-gray-900 py-1\">\n              {props.thisApplication.}\n            </span>\n          </div> */}\n          <div className=\"flex items-start gap-2 text-sm text-gray-600\">\n            <span className={`italic`}>Reason:</span>\n            <span className=\"font-semibold text-gray-900\">\n              {props.thisApplication.override_by.comment}\n            </span>\n          </div>\n        </div>\n        <div className=\"bg-white w-full rounded p-2 mb-2\">\n          <div className=\"text-gray-800 text-2xl font-bold my-2\">\n            Position Details\n          </div>\n          <div className=\"flex items-center gap-2 text-base text-gray-600\">\n            <span className={`italic`}>Desc:</span>\n            <span className=\"font-semibold\">\n              {props.thisApplication.position.description}\n            </span>\n          </div>\n          <div className=\"flex items-center gap-2 text-base text-gray-600\">\n            <span className={`italic`}>School level:</span>\n            <span className=\"font-semibold\">\n              {props.thisApplication.position.school_level_id.school_level_name}\n            </span>\n          </div>\n          <div className=\"flex items-center gap-2 text-base text-gray-600\">\n            <span className={`italic`}>Institute:</span>\n            <span className=\"font-semibold\">\n              {\n                props.thisApplication.position.education_institute_id\n                  .education_category_title\n              }\n            </span>\n          </div>\n          <div className=\"flex items-center gap-2 text-base text-gray-600\">\n            <span className={`italic`}>Courses:</span>\n            <span className=\"flex items-center gap-2\">\n              {props.thisApplication.position.courses.map((item, index) => (\n                <div\n                  key={index + item.course_id}\n                  className=\"flex items-center gap-1\"\n                >\n                  <span className=\"font-semibold\">{item.course_name}</span>\n                  <span className=\"text-gray-600\">({item.course_code})</span>\n                  {index !==\n                    props.thisApplication.position.courses.length - 1 && \",\"}\n                </div>\n              ))}\n            </span>\n          </div>\n\n          <div className=\"text-gray-800 text-2xl font-bold my-2\">\n            Position Requirements\n          </div>\n          {props.thisApplication.position.requirements.length > 0 ? (\n            FC_ApplicationPositionDistinctCategory(\n              props.thisApplication.position,\n              props.documentCategories\n            ).DistinctCategoriesTemp.map((item, index) => (\n              <div\n                className=\"bg-gray-100props.thisApplication.position rounded p-2\"\n                key={index + item.category_id}\n              >\n                <div className=\"flex items-center gap-2 text-2xl text-gray-500 font-bold\">\n                  <MdTurnedIn />\n                  <span>{item.category_title}</span>\n                </div>\n                <div className=\"border bg-white mt-1\">\n                  <ViewRequirements\n                    requirements={FC_ApplicationPositionDistinctCategory(\n                      props.thisApplication.position,\n                      props.documentCategories\n                    ).PositionsTemp.filter(\n                      (req) => req.category_id === item.category_id\n                    )}\n                  />\n                </div>\n              </div>\n            ))\n          ) : (\n            <NoResult\n              theme={NoResultThemes.Dark}\n              value={\"No requirements\"}\n            ></NoResult>\n          )}\n        </div>\n      </div>\n    </section>\n  );\n};\n\nexport default connect(null, { PushPopupAlert })(ApplicationFormView);\n","import React, { Component } from \"react\";\nimport FindAnswer from \"../../containers/DoExam/DoExamTitle/FindAnswer\";\nimport { ExamAnswerSheetDone } from \"../../interfaces/exam\";\nimport { connect } from \"react-redux\";\nimport {\n  Auth,\n  CandidateApplicationsStoreInterface,\n  candidateExamStoreInterface,\n  FC_GetProfileDetails,\n  LoadCandidateApplications,\n  setSelectedCandidateExam,\n  setSelectedCourse,\n  setSelectedPosition,\n  InitializeExamDetails,\n  loadExamsDone,\n  AddUserApplication,\n  loadApplicationPeriods,\n  requestUserAnswers,\n  loadQuestionTypes,\n  questionTypesStoreInterface,\n} from \"../../actions\";\nimport { StoreState } from \"../../reducers\";\nimport { DATE } from \"../../utils/functions\";\nimport { AiOutlineFileText } from \"react-icons/ai\";\nimport { ExamDoneDetailsAnswers } from \"../../containers/CandidateExams/CandidateExams\";\nimport Loading from \"../Loading/Loading\";\n\ninterface AnswersDetailsProps {\n  exam_id: ExamDoneDetailsAnswers;\n  showAnswers: boolean;\n  allAnswers?: ExamAnswerSheetDone[];\n  user_id?: string;\n  questionTypes: questionTypesStoreInterface;\n  requestUserAnswers: (\n    exam_id: string,\n    user_id: string,\n    callback: (loading: boolean) => void\n  ) => void;\n  FC_GetProfileDetails: Function;\n  auth: Auth;\n  candidateExam: candidateExamStoreInterface;\n  loadQuestionTypes: (callback: (loading: boolean) => void) => void;\n  loadExamsDone: (\n    periodId: string,\n    userId: string,\n    callback: (loading: boolean) => void\n  ) => void;\n}\ninterface AnswersDetailsState {\n  loading: boolean;\n  loadingStatus: boolean;\n}\n\nexport class _AnswersDetails extends Component<\n  AnswersDetailsProps,\n  AnswersDetailsState\n> {\n  constructor(props: AnswersDetailsProps) {\n    super(props);\n\n    this.state = {\n      loading: false,\n      loadingStatus: false,\n    };\n  }\n  setLoading = (status: boolean) => {\n    this.setState({ loading: status });\n  };\n  setLoadingStatus = (status: boolean) => {\n    this.setState({ loadingStatus: status });\n  };\n  componentDidMount = () => {\n    if (\n      this.props.questionTypes.questionTypes === null ||\n      this.props.questionTypes.questionTypes.length === 0\n    ) {\n      this.props.loadQuestionTypes(this.setLoading);\n    }\n    if (this.props.exam_id) {\n      let check = this.props.candidateExam.user_exams_done.find(\n        (itm) =>\n          itm.course === this.props.exam_id.course &&\n          itm.period === this.props.exam_id.period &&\n          DATE(itm.exam_date) === DATE(this.props.exam_id.exam_date)\n      );\n      // Check if user exams loaded\n      if (\n        (this.props.candidateExam.user_exams_done.length === 0 ||\n          check === undefined) &&\n        this.props.allAnswers === undefined\n      ) {\n        this.props.loadExamsDone(\n          this.props.exam_id.period,\n          this.props.auth.user.user_id,\n          this.setLoadingStatus\n        );\n      }\n      if (check !== undefined) {\n        if (\n          this.props.candidateExam.user_exams_done.find(\n            (item) => item.exam_paper === check?.exam_paper\n          ) === undefined\n        ) {\n          this.props.requestUserAnswers(\n            check.exam_paper,\n            this.props.user_id === undefined\n              ? this.props.auth.user.user_id\n              : this.props.user_id,\n            this.setLoading\n          );\n        }\n      }\n    }\n  };\n  userAnswersTotalMarks = (user_answers: ExamAnswerSheetDone) => {\n    let total: number = 0;\n    for (let item of user_answers.user_answers) {\n      total += item.user_marks;\n    }\n    return total;\n  };\n  render() {\n    let user_exam_details: ExamAnswerSheetDone | undefined =\n      this.props.allAnswers === undefined\n        ? this.props.candidateExam.user_exams_done.find(\n            (itm) =>\n              itm.course === this.props.exam_id.course &&\n              itm.period === this.props.exam_id.period &&\n              DATE(itm.exam_date) === DATE(this.props.exam_id.exam_date)\n          )\n        : this.props.allAnswers.find(\n            (itm) =>\n              itm.course === this.props.exam_id.course &&\n              itm.period === this.props.exam_id.period &&\n              DATE(itm.exam_date) === DATE(this.props.exam_id.exam_date)\n          );\n    if (this.state.loading === true || this.state.loadingStatus === true) {\n      return (\n        <div className=\"my-6 rounded bg-white p-3\">\n          <Loading />\n        </div>\n      );\n    }\n    if (user_exam_details === undefined) {\n      return (\n        <div className=\"my-6 rounded bg-white p-3\">\n          <span className=\"text-4xl font-bold\">Exam details not found!</span>\n        </div>\n      );\n    }\n    return (\n      <div className=\"p-2 bg-gray-100\">\n        <div className=\"mb-5 -mt-5\">\n          {user_exam_details !== undefined && (\n            <div className=\"mt-5\">\n              <div className=\"px-3 mb-2 flex flex-row items-center gap-3\">\n                <div>\n                  <AiOutlineFileText className=\"text-5xl text-gray-500\" />\n                </div>\n                <div\n                  className=\"text-2xl font-extrabold\"\n                  dangerouslySetInnerHTML={{\n                    __html: \"Exam for \" + this.props.exam_id.course_name,\n                  }}\n                ></div>\n              </div>\n              <div className=\" p-3 bg-white rounded-t mb-0 border-b\">\n                <div className=\"text-sm text-gray-500 font-bold\">\n                  Exam date:\n                </div>\n                <div\n                  className=\"text-base font-bold\"\n                  dangerouslySetInnerHTML={{\n                    __html: DATE(this.props.exam_id.exam_date),\n                  }}\n                ></div>\n              </div>\n              <div className=\" p-3 bg-white mb-0 border-b\">\n                <div className=\"text-sm text-gray-500 font-bold\">\n                  Exam description:\n                </div>\n                <div\n                  className=\"text-base font-bold\"\n                  dangerouslySetInnerHTML={{\n                    __html: this.props.exam_id.discription,\n                  }}\n                ></div>\n              </div>\n              <div className=\" p-3 bg-white rounded-b mb-0\">\n                <div className=\"text-sm text-gray-500 font-bold\">\n                  Exam terms and conditions:\n                </div>\n                <div\n                  className=\"text-base font-bold\"\n                  dangerouslySetInnerHTML={{\n                    __html: this.props.exam_id.termes,\n                  }}\n                ></div>\n              </div>\n            </div>\n          )}\n        </div>\n        <div className=\"text-2xl font-extrabold text-blue-600 px-2 mb-3\">\n          Exam answers & marks\n        </div>\n        {user_exam_details === undefined\n          ? \"Not Found\"\n          : user_exam_details.user_answers.map((item, i) => (\n              <div\n                key={i + 1}\n                className=\"bg-white hover:bg-white border border-white hover:border-blue-400 px-2 py-2 rounded  animate__animated animate__fadeIn animate__fast group mb-2\"\n              >\n                <div className=\"grid md:grid-cols-11 w-full\">\n                  <div className=\"col-span-12 flex flex-row items-center gap-3\">\n                    <div\n                      key={i + 1}\n                      className=\"w-6 h-6 p-2 rounded-full bg-gray-600 flex justify-center items-center font-bold text-lg text-white cursor-pointer\"\n                    >\n                      {i + 1}\n                    </div>\n                    {user_exam_details &&\n                      user_exam_details.questions.find(\n                        (itm) => itm.question_id === item.question\n                      ) !== undefined && (\n                        <div className=\"text-sm w-full\">\n                          <div\n                            className=\"font-bold text-gray-700 text-base\"\n                            dangerouslySetInnerHTML={{\n                              __html: user_exam_details.questions\n                                .find(\n                                  (itm) => itm.question_id === item.question\n                                )!\n                                .question.find(\n                                  (test) => test.language === item.language\n                                )!.description,\n                            }}\n                          ></div>\n                          <div className=\"text-blue-700 font-bold text-sm w-full\">\n                            Answer:&nbsp;{\" \"}\n                            {this.props.questionTypes.questionTypes !== null &&\n                              user_exam_details.user_answers.find(\n                                (itm) => itm.question === item.question\n                              ) && (\n                                <div className=\"mb-2\">\n                                  <FindAnswer\n                                    selectedLanguage={item.language}\n                                    question={{\n                                      is_deleted:\n                                        user_exam_details.questions.find(\n                                          (itm) =>\n                                            itm.question_id === item.question\n                                        )!.is_deleted,\n                                      question_id: item.question,\n                                      course: user_exam_details.questions.find(\n                                        (itm) =>\n                                          itm.question_id === item.question\n                                      )!.course,\n                                      question:\n                                        user_exam_details.questions.find(\n                                          (itm) =>\n                                            itm.question_id === item.question\n                                        )!.question,\n                                      type: user_exam_details.questions.find(\n                                        (itm) =>\n                                          itm.question_id === item.question\n                                      )!.type,\n                                      chapters:\n                                        user_exam_details.questions.find(\n                                          (itm) =>\n                                            itm.question_id === item.question\n                                        )!.chapters,\n                                      customNumber:\n                                        user_exam_details.questions.find(\n                                          (itm) =>\n                                            itm.question_id === item.question\n                                        )!.customNumber,\n                                      marks: user_exam_details.questions.find(\n                                        (itm) =>\n                                          itm.question_id === item.question\n                                      )!.marks,\n                                      answers: user_exam_details.questions.find(\n                                        (itm) =>\n                                          itm.question_id === item.question\n                                      )!.answers,\n                                    }}\n                                    answersList={[\n                                      {\n                                        question_id: item.question,\n                                        status: true,\n                                        answers:\n                                          user_exam_details.user_answers.find(\n                                            (itm) =>\n                                              itm.question === item.question\n                                          )!.answers,\n                                      },\n                                    ]}\n                                    questionTypes={\n                                      this.props.questionTypes.questionTypes\n                                    }\n                                    showCorrectAnswer={this.props.showAnswers}\n                                    onClick={() => {}}\n                                  />\n                                </div>\n                              )}\n                          </div>\n                        </div>\n                      )}\n                  </div>\n                </div>\n                <div className=\"col-span-1 flex items-center justify-between\">\n                  <div></div>\n\n                  <div className=\"w-max flex flex-col items-end justify-center bg-blue-50 rounded-md px-3 py-1 group-hover:bg-blue-100\">\n                    <div className=\"text-sm font-semibold text-gray-700\">\n                      Marks\n                    </div>\n                    <div className=\"text-sm font-extrabold text-gray-900 -mt-1\">\n                      <span className=\"text-blue-500\">\n                        {item.user_marks.toFixed(2)}\n                      </span>{\" \"}\n                      /{\" \"}\n                      {user_exam_details &&\n                        user_exam_details.questions.find(\n                          (itm) => itm.question_id === item.question\n                        )?.marks}\n                    </div>\n                  </div>\n                </div>\n              </div>\n            ))}\n        <div className=\"flex flex-row items-center justify-between gap-3 mb-10\">\n          <div className=\"bg-blue-100 p-3 pr-3 text-blue-700 flex flex-col items-start justify-center rounded-lg border-2 border-white\">\n            <span className=\"text-gray-700\">Total marks percentage</span>\n            <span className=\"text-3xl font-extrabold\">\n              {user_exam_details && user_exam_details.total_marks.toFixed(2)}%\n            </span>\n          </div>\n          <div>\n            <div className=\"bg-white rounded-lg p-3\">\n              <div className=\"text-gray-500 font-bold text-base text-right\">\n                Exam total marks\n              </div>\n              {user_exam_details !== undefined && (\n                <div className=\"font-extrabold text-3xl text-gray-900 text-right\">\n                  {this.userAnswersTotalMarks(user_exam_details).toFixed(2)} /{\" \"}\n                  {user_exam_details.exam_total_marks}\n                </div>\n              )}\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = ({\n  auth,\n  candidateExam,\n  candidateApplications,\n  questionTypes,\n}: StoreState): {\n  auth: Auth;\n  candidateExam: candidateExamStoreInterface;\n  candidateApplications: CandidateApplicationsStoreInterface;\n  questionTypes: questionTypesStoreInterface;\n} => {\n  return {\n    auth: auth,\n    candidateExam: candidateExam,\n    candidateApplications: candidateApplications,\n    questionTypes: questionTypes,\n  };\n};\n\nexport const AnswersDetails = connect(mapStateToProps, {\n  FC_GetProfileDetails,\n  LoadCandidateApplications,\n  setSelectedCandidateExam,\n  setSelectedCourse,\n  setSelectedPosition,\n  InitializeExamDetails,\n  loadExamsDone,\n  AddUserApplication,\n  loadApplicationPeriods,\n  requestUserAnswers,\n  loadQuestionTypes,\n})(_AnswersDetails);\n","import React from \"react\";\nimport { AnswersDetails } from \"../../../components/AnswersDetails/AnswersDetails\";\nimport {\n  claimApplicationsPositionInterface,\n  ClaimExamResultsDetails,\n} from \"../../../interfaces\";\nimport { DocumentReducerInterface } from \"../../../reducers/document\";\nimport { UserInterface } from \"../../../shared/interfaces\";\nimport { DATE } from \"../../../utils/functions\";\nimport { ExamDoneDetailsAnswers } from \"../../CandidateExams/CandidateExams\";\nimport { PositionRequirementTableInterface } from \"../../Positions/ViewPosition\";\n\nexport const FC_ApplicationPositionDistinctCategory = (\n  thisPosition: claimApplicationsPositionInterface,\n  documentCategories: DocumentReducerInterface\n): {\n  PositionsTemp: PositionRequirementTableInterface[];\n  DistinctCategoriesTemp: PositionRequirementTableInterface[];\n  DistinctSubCategoriesTemp: PositionRequirementTableInterface[];\n} => {\n  let PositionsTemp: PositionRequirementTableInterface[] = [];\n  let DistinctCategoriesTemp: PositionRequirementTableInterface[] = [],\n    DistinctCategoriesIds: string[] = [];\n  let DistinctSubCategoriesTemp: PositionRequirementTableInterface[] = [],\n    DistinctSubCategoriesIds: string[] = [];\n  // GET REQUIREMENTS OF THE CURRENT POSITION ====================\n  let requirements = thisPosition.requirements;\n  // LOOP THROUGH CURRENT POSITION REQUIREMENTS ==========================\n  for (let req in requirements) {\n    let thisRequirements = requirements[req];\n    // GET DOC CATEGORY OF THE CURRENT POSITION REQUIREMENTS ====================\n    let thisCategory = documentCategories.documentCategory\n      ? documentCategories.documentCategory.find(\n          (item) =>\n            item.user_detail_category_id ===\n            thisRequirements.user_detail_category_id\n        ) && {\n          title: documentCategories.documentCategory.find(\n            (item) =>\n              item.user_detail_category_id ===\n              thisRequirements.user_detail_category_id\n          )!.title,\n          user_detail_category_id: documentCategories.documentCategory.find(\n            (item) =>\n              item.user_detail_category_id ===\n              thisRequirements.user_detail_category_id\n          )!.user_detail_category_id,\n        }\n      : {\n          title: \"\",\n          user_detail_category_id: thisRequirements.user_detail_category_id,\n        };\n    // GET DOC SUB CATEGORY OF THE CURRENT POSITION REQUIREMENTS ====================\n    let thisSubCategory = documentCategories.documentSubCategory\n      ? documentCategories.documentSubCategory.find(\n          (item) =>\n            item.user_detail_subcategory_id ===\n            thisRequirements.user_detail_subcategory_id\n        )\n        ? {\n            title: documentCategories.documentSubCategory.find(\n              (item) =>\n                item.user_detail_subcategory_id ===\n                thisRequirements.user_detail_subcategory_id\n            )!.title,\n            user_detail_subcategory_id:\n              documentCategories.documentSubCategory.find(\n                (item) =>\n                  item.user_detail_subcategory_id ===\n                  thisRequirements.user_detail_subcategory_id\n              )!.user_detail_subcategory_id,\n            category_id: documentCategories.documentSubCategory.find(\n              (item) =>\n                item.user_detail_subcategory_id ===\n                thisRequirements.user_detail_subcategory_id\n            )!.category_id,\n          }\n        : {\n            title: \"\",\n            user_detail_subcategory_id:\n              thisRequirements.user_detail_subcategory_id,\n            category_id: \"\",\n          }\n      : {\n          title: \"\",\n          user_detail_subcategory_id:\n            thisRequirements.user_detail_subcategory_id,\n          category_id: \"\",\n        };\n    // LOOP THROUGH FIELDS OF THE CURRENT POSITION REQUIREMENTS ==========================\n    if (thisCategory) {\n      for (let field in thisRequirements.position_requirement) {\n        // GET FIELDS OF THE CURRENT POSITION REQUIREMENTS ====================\n        let thisField = documentCategories.documentFields\n          ? documentCategories.documentFields.find(\n              (item) =>\n                item._id ===\n                thisRequirements.position_requirement[field]\n                  .category_subcategory_data_id\n            )\n            ? {\n                title: documentCategories.documentFields.find(\n                  (item) =>\n                    item._id ===\n                    thisRequirements.position_requirement[field]\n                      .category_subcategory_data_id\n                )!.title,\n                _id: documentCategories.documentFields.find(\n                  (item) =>\n                    item._id ===\n                    thisRequirements.position_requirement[field]\n                      .category_subcategory_data_id\n                )!._id,\n                required: thisRequirements.position_requirement[field].required,\n              }\n            : {\n                title: \"\",\n                _id: thisRequirements.user_detail_subcategory_id,\n                required: thisRequirements.position_requirement[field].required,\n              }\n          : {\n              title: \"\",\n              _id: thisRequirements.user_detail_subcategory_id,\n              required: thisRequirements.position_requirement[field].required,\n            };\n        // ADD CURRENT CATEGORY, SUB CATEGORY & FIELDS OF THE CURRENT POSITION REQUIREMENTS IN POSITIONS TEMP ====================\n        PositionsTemp.push({\n          category_id: thisCategory.user_detail_category_id,\n          category_title: thisCategory.title,\n          subcategory_id: thisSubCategory.user_detail_subcategory_id,\n          subcategory_title: thisSubCategory.title,\n          subcategory_required: thisRequirements.required,\n          field_title: thisField.title,\n          field_id: thisField._id,\n          required: thisField.required,\n        });\n      }\n\n      // ADD CATEOGRY OF THE CURRENT POSITION REQUIREMENTS TO ARRAY ====================\n      if (\n        !DistinctCategoriesIds.includes(thisCategory.user_detail_category_id)\n      ) {\n        DistinctCategoriesIds.push(thisCategory.user_detail_category_id);\n        DistinctCategoriesTemp.push({\n          category_id: thisCategory.user_detail_category_id,\n          category_title: thisCategory.title,\n          subcategory_id: \"\",\n          subcategory_title: \"\",\n          subcategory_required: thisRequirements.required,\n          field_title: \"\",\n          field_id: \"\",\n          required: false,\n        });\n      }\n\n      // ADD SUB CATEOGRY OF THE CURRENT POSITION REQUIREMENTS TO ARRAY ====================\n      if (\n        !DistinctSubCategoriesIds.includes(\n          thisSubCategory.user_detail_subcategory_id\n        )\n      ) {\n        DistinctSubCategoriesIds.push(\n          thisSubCategory.user_detail_subcategory_id\n        );\n        DistinctSubCategoriesTemp.push({\n          category_id: thisSubCategory.category_id,\n          category_title: \"\",\n          subcategory_id: thisSubCategory.user_detail_subcategory_id,\n          subcategory_title: thisSubCategory.title,\n          subcategory_required: thisRequirements.required,\n          field_title: \"\",\n          field_id: \"\",\n          required: false,\n        });\n      }\n    }\n  }\n  // DistinctCategoriesIds.;\n\n  return { PositionsTemp, DistinctCategoriesTemp, DistinctSubCategoriesTemp };\n};\n\nexport const showEvaluator = (\n  userList: UserInterface[],\n  user_id: string\n): string => {\n  let result: string = \"\";\n  if (user_id === \"system\") {\n    result = \"System\";\n  } else {\n    // let user = getUserDocuments(userList, user_id);\n    // let user = undefined;\n    // if (user) {\n    //   result = user.user.user_info.fname + \" \" + user.user.user_info.lname;\n    // }\n  }\n  return result;\n};\n\nexport const claimShowAnswer = (\n  answer: ClaimExamResultsDetails,\n  course_name: string\n): ExamDoneDetailsAnswers => {\n  const result: ExamDoneDetailsAnswers = {\n    course: answer.course,\n    course_name: course_name,\n    discription: answer.discription,\n    termes: answer.termes,\n    rules: {\n      right_click_enabled: false,\n      copy_enabled: false,\n      paste_enabled: false,\n      stop_candidate_when_comeback: false,\n      allow_to_leave_browser: false,\n    },\n    period: answer.period,\n    exam_date: answer.exam_date,\n  };\n  return result;\n};\n\ntype ExaminationFormViewProps = {\n  thisAnswerSheet: ClaimExamResultsDetails;\n  setViewThisFile: (value: string) => void;\n  setChooseClaimFile: (value: boolean) => void;\n  setClaimFileId: (value: string) => void;\n};\n\nconst ExaminationFormView: React.FC<ExaminationFormViewProps> = (props) => {\n  return (\n    <section className=\"\">\n      <div className=\"w-full bg-gray-100 px-4 py-1 animate__animated animate__fadeIn\">\n        <div className=\"flex flex-col mb-2\">\n          {/* APPLICATION TITLE ========== */}\n          <section className=\"flex items-center justify-between\">\n            <span className=\"text-blue-600 font-bold text-2xl\">\n              {props.thisAnswerSheet.course_name}\n            </span>\n            <button\n              type=\"button\"\n              className=\"btn btn-blue\"\n              onClick={() => {\n                props.setChooseClaimFile(false);\n                props.setClaimFileId(props.thisAnswerSheet.answer_sheet_id);\n                props.setViewThisFile(\"\");\n              }}\n            >\n              Choose\n            </button>\n          </section>\n\n          <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n            <span className={`italic`}>Date:</span>\n            <span className=\"font-bold text-gray-900 py-1\">\n              {DATE(props.thisAnswerSheet.createdAt)}\n            </span>\n          </div>\n        </div>\n        {/* QUESTIONS ----------------------------- */}\n        <AnswersDetails\n          showAnswers={false}\n          exam_id={claimShowAnswer(\n            props.thisAnswerSheet,\n            props.thisAnswerSheet.course_name\n          )}\n        />\n        {/* END QUESTIONS ----------------------------- */}\n      </div>\n    </section>\n  );\n};\n\nexport default ExaminationFormView;\n","import moment from \"moment\";\nimport React from \"react\";\nimport {\n  compareWithToday,\n  ExamDoneDetailsAnswers,\n} from \"../../containers/CandidateExams/CandidateExams\";\nimport { TimeZone } from \"../../utils/app.config\";\nimport { DATE } from \"../../utils/functions\";\nimport { AnswersDetails } from \"./AnswersDetails\";\n\ninterface CandidateAnswersDetailsProps {\n  exam_id: ExamDoneDetailsAnswers;\n  showAnswers: boolean;\n}\n\nconst CandidateAnswersDetails = (props: CandidateAnswersDetailsProps) => {\n  const today = moment().tz(TimeZone);\n  let tomorrow = new Date();\n  tomorrow.setDate(today.date() + 1);\n  return (\n    <div>\n      {/* Check if period is open for claims */}\n      {compareWithToday(today, props.exam_id.exam_date) === false ? (\n        <div className=\"bg-yellow-100 text-yellow-800 font-extrabold text-center flex flex-col items-center justify-center text-lg px-2 py-6\">\n          <div className=\"mb-5 text-3xl\">\n            Please wait, the exam details will be visible soon!\n          </div>\n          <div className=\"text-gray-600\">Exam details will be visible from</div>\n          <div className=\"bg-white rounded-full px-3 py-1 text-gray-700\">\n            {DATE(tomorrow.toString())}\n          </div>\n        </div>\n      ) : (\n        <AnswersDetails\n          exam_id={props.exam_id}\n          showAnswers={props.showAnswers}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default CandidateAnswersDetails;\n","import React from \"react\";\nimport {\n  BsCheckSquareFill,\n  BsCheckCircleFill,\n  BsArrowRightSquareFill,\n  BsArrowRightCircleFill,\n} from \"react-icons/bs\";\nimport { QuestionAnswersStore } from \"../../../actions\";\nimport {\n  CalculatedMultipleChoiceQuestionAnswerInterface,\n  MatchingQuestionAnswerInterface,\n  MultipleChoiceQuestionAnswerInterface,\n  QuestionInterface,\n  questionType,\n  TrueFalseQuestionAnswerInterface,\n  NumericalQuestionAnswerInterface,\n  ShortAnswerQuestionAnswerInterface,\n  SimpleCalculatedQuestionAnswerInterface,\n  QuestionLanguage,\n  LanguageInterface,\n  EssayQuestionAnswerInterface,\n  QuestionAnswerInterface,\n  QuestionAnswerFormat,\n} from \"../../../interfaces\";\nimport {\n  toCalculatedMultipleChoice,\n  toEssay,\n  toMatching,\n  toMultipleChoice,\n  toNumerical,\n  toShortAnswer,\n  toSimpleCalculated,\n  toTrueFalse,\n} from \"../QuestionDetails/ConvertingAnswers\";\nimport { findQuestionType } from \"../utils/utils\";\nimport {\n  QuestionForHybrid,\n  questionTypeElementsType,\n} from \"@mastrecruit/common\";\nimport { findQType } from \"./FindAnswerHybrid\";\n\ninterface FindAnswerProps {\n  question: QuestionInterface;\n  answersList: QuestionAnswersStore[];\n  selectedLanguage: QuestionLanguage | LanguageInterface;\n  questionTypes: questionType[];\n  showCorrectAnswer: boolean;\n  subQuestionType?: questionTypeElementsType;\n  reference?: number;\n  onClick: () => void;\n}\n\nconst resultDiv = (\n  user_answers: QuestionAnswerFormat[],\n  question_answers: QuestionAnswerFormat[],\n  props: FindAnswerProps\n): JSX.Element => {\n  switch (\n    props.subQuestionType === undefined\n      ? findQuestionType(props.question.type, props.questionTypes)\n      : props.subQuestionType\n  ) {\n    case questionTypeElementsType.MultipleChoice:\n      const userAnswer: MultipleChoiceQuestionAnswerInterface[] =\n        toMultipleChoice(user_answers);\n      return (\n        <div className=\"w-full\">\n          {userAnswer\n            .filter((itm) => itm.status === true)\n            .map((item, i) => (\n              <div\n                key={i + 1}\n                onClick={props.onClick}\n                className=\"bg-gray-100 rounded px-3 cursor-pointer flex flex-row items-center gap-3 text-gray-600 hover:text-blue-600 mb-1 py-3 font-bold\"\n              >\n                <div className=\"text-xl text-blue-600\">\n                  <BsCheckSquareFill />\n                </div>\n                <div dangerouslySetInnerHTML={{ __html: item.value }}></div>\n              </div>\n            ))}\n          {/* Correct answers */}\n          {props.showCorrectAnswer === true && (\n            <div className=\"border-l-4 rounded-xl border-blue-600 bg-white p-3\">\n              <div className=\"font-extrabold text-lg\">Correct answer</div>\n              <div>\n                {question_answers\n                  .filter((itm) => itm.status === true)\n                  .map((item, i) => (\n                    <div\n                      key={i + 1}\n                      onClick={props.onClick}\n                      className=\"bg-blue-50 rounded px-3 cursor-pointer flex flex-row items-center gap-3 text-gray-600 hover:text-blue-600 mb-1 py-3 font-bold\"\n                    >\n                      <div className=\"text-xl text-blue-600\">\n                        <BsCheckSquareFill />\n                      </div>\n                      <div\n                        dangerouslySetInnerHTML={{ __html: item.value }}\n                      ></div>\n                    </div>\n                  ))}\n              </div>\n            </div>\n          )}\n        </div>\n      );\n    case questionTypeElementsType.SingleMultiple:\n      const userAnswerSingle: MultipleChoiceQuestionAnswerInterface[] =\n        toMultipleChoice(user_answers);\n      return (\n        <div className=\"w-full\">\n          {userAnswerSingle\n            .filter((itm) => itm.status === true)\n            .map((item, i) => (\n              <div\n                key={i + 1}\n                onClick={props.onClick}\n                className=\"bg-gray-100 rounded px-3 cursor-pointer flex flex-row items-center gap-3 text-gray-600 hover:text-blue-600 mb-1 py-3 font-bold\"\n              >\n                <div className=\"text-xl text-blue-600\">\n                  <BsCheckCircleFill />\n                </div>\n                <div dangerouslySetInnerHTML={{ __html: item.value }}></div>\n              </div>\n            ))}\n          {/* Correct answers */}\n          {props.showCorrectAnswer === true && (\n            <div className=\"border-l-4 rounded-xl border-blue-600 bg-white p-3\">\n              <div className=\"font-extrabold text-lg\">Correct answer</div>\n              <div>\n                {question_answers\n                  .filter((itm) => itm.status === true)\n                  .map((item, i) => (\n                    <div\n                      key={i + 1}\n                      onClick={props.onClick}\n                      className=\"bg-blue-50 rounded px-3 cursor-pointer flex flex-row items-center gap-3 text-gray-600 hover:text-blue-600 mb-1 py-3 font-bold\"\n                    >\n                      <div className=\"text-xl text-blue-600\">\n                        <BsCheckCircleFill />\n                      </div>\n                      <div\n                        dangerouslySetInnerHTML={{ __html: item.value }}\n                      ></div>\n                    </div>\n                  ))}\n              </div>\n            </div>\n          )}\n        </div>\n      );\n\n    case questionTypeElementsType.CalculatedMultipleChoice:\n      const userAnswer1: CalculatedMultipleChoiceQuestionAnswerInterface[] =\n        toCalculatedMultipleChoice(user_answers);\n      return (\n        <div className=\"w-full\">\n          {userAnswer1\n            .filter((itm) => itm.status === true)\n            .map((item, i) => (\n              <div\n                key={i + 1}\n                onClick={props.onClick}\n                className=\"bg-gray-100 rounded px-3 cursor-pointer flex flex-row items-center gap-3 text-gray-600 hover:text-blue-600 mb-1 py-3 font-bold\"\n              >\n                <div className=\"text-xl text-blue-600\">\n                  <BsCheckSquareFill />\n                </div>\n                <div className=\"text-base font-normal text-gray-500\">\n                  {item.value.length > 1 ? (\n                    <>\n                      Between{\" \"}\n                      <span className=\"underline text-gray-600 font-extrabold\">\n                        {item.value[0]}\n                      </span>{\" \"}\n                      and{\" \"}\n                      <span className=\"underline text-gray-600 font-extrabold\">\n                        {item.value[1]}\n                      </span>\n                    </>\n                  ) : (\n                    <span className=\"text-gray-700\">\n                      {item.value[0].toString()}\n                    </span>\n                  )}\n                </div>\n              </div>\n            ))}\n          {/* Correct answers */}\n          {props.showCorrectAnswer === true && (\n            <div className=\"border-l-4 rounded-xl border-blue-600 bg-white p-3\">\n              <div className=\"font-extrabold text-lg\">Correct answer</div>\n              <div>\n                {question_answers\n                  .filter((itm) => itm.status === true)\n                  .map((item, i) => (\n                    <div\n                      key={i + 1}\n                      onClick={props.onClick}\n                      className=\"bg-blue-50 rounded px-3 cursor-pointer flex flex-row items-center gap-3 text-gray-600 mb-1 py-3 font-bold\"\n                    >\n                      <div className=\"text-xl text-blue-600\">\n                        <BsCheckSquareFill />\n                      </div>\n                      <div className=\"text-base font-normal text-gray-500\">\n                        {item.value.length > 1 ? (\n                          <>\n                            Between{\" \"}\n                            <span className=\"underline text-blue-600 font-extrabold\">\n                              {item.value[0]}\n                            </span>{\" \"}\n                            and{\" \"}\n                            <span className=\"underline text-blue-600 font-extrabold\">\n                              {item.value[1]}\n                            </span>\n                          </>\n                        ) : (\n                          <span className=\"text-blue-600\">\n                            {item.value[0].toString()}\n                          </span>\n                        )}\n                      </div>\n                    </div>\n                  ))}\n              </div>\n            </div>\n          )}\n        </div>\n      );\n\n    case questionTypeElementsType.Matching:\n      const userAnswerMatch: MatchingQuestionAnswerInterface[] =\n        toMatching(user_answers);\n      return (\n        <div className=\"w-full\">\n          {userAnswerMatch.map((item, i) => (\n            <div\n              key={i + 1}\n              onClick={props.onClick}\n              className=\"bg-gray-100 rounded cursor-pointer flex flex-row items-center gap-3 text-gray-600 hover:text-blue-600 mb-1 font-bold border border-blue-300\"\n            >\n              <div className=\"text-xl text-blue-600 font-bold p-3 pr-1 md:pr-3\">\n                <div className=\"h-8 w-8 p-3 bg-blue-100 rounded-full flex items-center justify-center\">\n                  {i + 1}\n                </div>\n              </div>\n              <div className=\"flex flex-col lg:flex-row items-center gap-3 w-full h-full truncate\">\n                <div\n                  className=\"w-full mt-3 lg:mb-0\"\n                  dangerouslySetInnerHTML={{ __html: item.value }}\n                ></div>\n                <div className=\"flex flex-row items-center gap-3 w-full mb-3 lg:mb-0\">\n                  <div className=\"text-3xl text-gray-500 group-hover:text-blue-600\">\n                    <BsArrowRightSquareFill />\n                  </div>\n                  <div\n                    className=\"w-full mr-2\"\n                    dangerouslySetInnerHTML={{ __html: item.status }}\n                  ></div>\n                </div>\n              </div>\n            </div>\n          ))}\n          {/* Correct answers */}\n          {props.showCorrectAnswer === true && (\n            <div className=\"border-l-4 rounded-xl border-blue-600 bg-white p-3\">\n              <div className=\"font-extrabold text-lg\">Correct answer</div>\n              <div>\n                {question_answers.map((item, i) => (\n                  <div\n                    key={i + 1}\n                    onClick={props.onClick}\n                    className=\"bg-blue-50 rounded cursor-pointer flex flex-row items-center gap-3 text-gray-600 hover:text-blue-600 mb-1 font-bold border border-blue-300\"\n                  >\n                    <div className=\"text-xl text-blue-600 font-bold p-3 pr-1 md:pr-3\">\n                      <div className=\"h-8 w-8 p-3 bg-blue-100 rounded-full flex items-center justify-center\">\n                        {i + 1}\n                      </div>\n                    </div>\n                    <div className=\"flex flex-col lg:flex-row items-center gap-3 w-full h-full truncate\">\n                      <div\n                        className=\"w-full mt-3 lg:mb-0\"\n                        dangerouslySetInnerHTML={{ __html: item.value }}\n                      ></div>\n                      <div className=\"flex flex-row items-center gap-3 w-full mb-3 lg:mb-0\">\n                        <div className=\"text-3xl text-gray-500 group-hover:text-blue-600\">\n                          <BsArrowRightSquareFill />\n                        </div>\n                        <div\n                          className=\"w-full mr-2\"\n                          dangerouslySetInnerHTML={{ __html: item.status }}\n                        ></div>\n                      </div>\n                    </div>\n                  </div>\n                ))}\n              </div>\n            </div>\n          )}\n        </div>\n      );\n    case questionTypeElementsType.TrueFalse:\n      const userAnswerTureFalse: TrueFalseQuestionAnswerInterface[] =\n        toTrueFalse(user_answers);\n      return (\n        <div className=\"w-full\">\n          {userAnswerTureFalse\n            .filter((itm) => itm.status === true)\n            .map((item, i) => (\n              <div\n                key={i + 1}\n                onClick={props.onClick}\n                className=\"bg-gray-100 rounded px-3 cursor-pointer flex flex-row items-center gap-3 text-gray-600 hover:text-blue-600 mb-1 py-3 font-bold\"\n              >\n                <div className=\"text-xl\">\n                  <BsArrowRightCircleFill />\n                </div>\n                <div dangerouslySetInnerHTML={{ __html: item.value }}></div>\n              </div>\n            ))}\n          {/* Correct answers */}\n          {props.showCorrectAnswer === true && (\n            <div className=\"border-l-4 rounded-xl border-blue-600 bg-white p-3\">\n              <div className=\"font-extrabold text-lg\">Correct answer</div>\n              <div>\n                {question_answers\n                  .filter((itm) => itm.status === true)\n                  .map((item, i) => (\n                    <div\n                      key={i + 1}\n                      onClick={props.onClick}\n                      className=\"bg-blue-50 rounded px-3 cursor-pointer flex flex-row items-center gap-3 text-blue-600 hover:text-blue-600 mb-1 py-3 font-bold\"\n                    >\n                      <div className=\"text-xl\">\n                        <BsArrowRightCircleFill />\n                      </div>\n                      <div\n                        dangerouslySetInnerHTML={{ __html: item.value }}\n                      ></div>\n                    </div>\n                  ))}\n              </div>\n            </div>\n          )}\n        </div>\n      );\n    case questionTypeElementsType.Numeric:\n      const userAnswerNumerical: NumericalQuestionAnswerInterface[] =\n        toNumerical(user_answers);\n      return (\n        <div className=\"w-full\">\n          {userAnswerNumerical.map((item, i) => (\n            <div\n              key={i + 1}\n              onClick={props.onClick}\n              className=\"bg-gray-100 rounded px-3 cursor-pointer flex flex-row items-center gap-3 text-gray-600 hover:text-blue-600 mb-1 py-3 font-bold\"\n            >\n              <div className=\"text-xl\">\n                <BsArrowRightCircleFill />\n              </div>\n              <div className=\"text-gray-600 text-base font-normal\">\n                {item.value.length > 1 ? (\n                  <>\n                    Between{\" \"}\n                    <span className=\"underline text-gray-600 font-extrabold\">\n                      {item.value[0]}\n                    </span>{\" \"}\n                    and{\" \"}\n                    <span className=\"underline text-gray-600 font-extrabold\">\n                      {item.value[1]}\n                    </span>\n                  </>\n                ) : (\n                  item.value.length > 0 && (\n                    <span className=\"text-gray-700\">\n                      {item.value[0].toString()}\n                    </span>\n                  )\n                )}\n              </div>\n            </div>\n          ))}\n          {/* Correct answers */}\n          {props.showCorrectAnswer === true && (\n            <div className=\"border-l-4 rounded-xl border-blue-600 bg-white p-3\">\n              <div className=\"font-extrabold text-lg\">Correct answer</div>\n              <div>\n                {question_answers.map((item, i) => (\n                  <div\n                    key={i + 1}\n                    onClick={props.onClick}\n                    className=\"bg-blue-50 rounded px-3 cursor-pointer flex flex-row items-center gap-3 text-blue-600 hover:text-blue-600 mb-1 py-3 font-bold\"\n                  >\n                    <div className=\"text-xl\">\n                      <BsArrowRightCircleFill />\n                    </div>\n                    <div className=\"text-gray-600 text-base font-normal\">\n                      {item.value.length > 1 ? (\n                        <>\n                          Between{\" \"}\n                          <span className=\"underline text-blue-600 font-extrabold\">\n                            {item.value[0] - item.value[1]}\n                          </span>{\" \"}\n                          and{\" \"}\n                          <span className=\"underline text-blue-600 font-extrabold\">\n                            {item.value[0] + item.value[1]}\n                          </span>\n                        </>\n                      ) : (\n                        item.value.length > 0 && (\n                          <span className=\"text-blue-700\">\n                            {item.value[0].toString()}\n                          </span>\n                        )\n                      )}\n                    </div>\n                  </div>\n                ))}\n              </div>\n            </div>\n          )}\n        </div>\n      );\n    case questionTypeElementsType.SimpleCalculate:\n      const userAnswerSimpleCalculate: SimpleCalculatedQuestionAnswerInterface[] =\n        toSimpleCalculated(user_answers);\n      return (\n        <div className=\"w-full\">\n          {userAnswerSimpleCalculate.map((item, i) => (\n            <div\n              key={i + 1}\n              onClick={props.onClick}\n              className=\"bg-gray-100 rounded px-3 cursor-pointer flex flex-row items-center gap-3 text-gray-600 hover:text-blue-600 mb-1 py-3 font-bold\"\n            >\n              <div className=\"text-xl\">\n                <BsArrowRightCircleFill />\n              </div>\n              <div className=\"text-gray-600 text-base font-normal\">\n                {item.value.length > 1 ? (\n                  <>\n                    Between{\" \"}\n                    <span className=\"underline text-gray-600 font-extrabold\">\n                      {item.value[0]}\n                    </span>{\" \"}\n                    and{\" \"}\n                    <span className=\"underline text-gray-600 font-extrabold\">\n                      {item.value[1]}\n                    </span>\n                  </>\n                ) : (\n                  item.value.length > 0 && (\n                    <span className=\"text-gray-700\">\n                      {item.value[0].toString()}\n                    </span>\n                  )\n                )}\n              </div>\n            </div>\n          ))}\n          {/* Correct answers */}\n          {props.showCorrectAnswer === true && (\n            <div className=\"border-l-4 rounded-xl border-blue-600 bg-white p-3\">\n              <div className=\"font-extrabold text-lg\">Correct answer</div>\n              <div>\n                {question_answers.map((item, i) => (\n                  <div\n                    key={i + 1}\n                    onClick={props.onClick}\n                    className=\"bg-blue-50 rounded px-3 cursor-pointer flex flex-row items-center gap-3 text-blue-600 hover:text-blue-600 mb-1 py-3 font-bold\"\n                  >\n                    <div className=\"text-xl\">\n                      <BsArrowRightCircleFill />\n                    </div>\n                    <div className=\"text-gray-600 text-base font-normal\">\n                      {item.value.length > 1 ? (\n                        <>\n                          Between{\" \"}\n                          <span className=\"underline text-blue-600 font-extrabold\">\n                            {item.value[0]}\n                          </span>{\" \"}\n                          and{\" \"}\n                          <span className=\"underline text-blue-600 font-extrabold\">\n                            {item.value[1]}\n                          </span>\n                        </>\n                      ) : (\n                        item.value.length > 0 && (\n                          <span className=\"text-blue-700\">\n                            {item.value[0].toString()}\n                          </span>\n                        )\n                      )}\n                    </div>\n                  </div>\n                ))}\n              </div>\n            </div>\n          )}\n        </div>\n      );\n    case questionTypeElementsType.ShortAnswer:\n      const userAnswerShortAnswer: ShortAnswerQuestionAnswerInterface[] =\n        toShortAnswer(user_answers);\n      return (\n        <div className=\"w-full\">\n          {userAnswerShortAnswer.map((item, i) => (\n            <div\n              key={i + 1}\n              onClick={props.onClick}\n              className=\"bg-gray-100 rounded px-3 cursor-pointer flex flex-row items-center gap-3 text-gray-600 hover:text-blue-600 mb-1 py-3 font-bold\"\n            >\n              <div className=\"text-xl\">\n                <BsArrowRightCircleFill />\n              </div>\n              <div\n                dangerouslySetInnerHTML={{\n                  __html: item.value,\n                }}\n              ></div>\n            </div>\n          ))}\n          {/* Correct answers */}\n          {props.showCorrectAnswer === true && (\n            <div className=\"border-l-4 rounded-xl border-blue-600 bg-white p-3\">\n              <div className=\"font-extrabold text-lg\">Correct answer</div>\n              <div>\n                {question_answers.map((item, i) => (\n                  <div\n                    key={i + 1}\n                    onClick={props.onClick}\n                    className=\"bg-blue-50 rounded px-3 cursor-pointer flex flex-row items-center gap-3 text-blue-600 hover:text-blue-600 mb-1 py-3 font-bold\"\n                  >\n                    <div className=\"text-xl\">\n                      <BsArrowRightCircleFill />\n                    </div>\n                    <div\n                      dangerouslySetInnerHTML={{\n                        __html: item.value,\n                      }}\n                    ></div>\n                  </div>\n                ))}\n              </div>\n            </div>\n          )}\n        </div>\n      );\n    // Essay\n    case questionTypeElementsType.Essay:\n      const userAnswerEssay: EssayQuestionAnswerInterface[] =\n        toEssay(user_answers);\n      return (\n        <div className=\"w-full\">\n          {userAnswerEssay.map((item, i) => (\n            <div\n              key={i + 1}\n              onClick={props.onClick}\n              className=\"bg-gray-100 rounded px-3 cursor-pointer flex flex-row items-center gap-3 text-gray-600 hover:text-blue-600 mb-1 py-3 font-bold\"\n            >\n              <div className=\"text-xl\">\n                <BsArrowRightCircleFill />\n              </div>\n              <div\n                dangerouslySetInnerHTML={{\n                  __html: item.value,\n                }}\n              ></div>\n            </div>\n          ))}\n          {/* Correct answers */}\n          {props.showCorrectAnswer === true && (\n            <div className=\"border-l-4 rounded-xl border-blue-600 bg-white p-3\">\n              <div className=\"font-extrabold text-lg\">Correct answer</div>\n              <div>\n                {question_answers.map((item, i) => (\n                  <div\n                    key={i + 1}\n                    onClick={props.onClick}\n                    className=\"bg-blue-50 rounded px-3 cursor-pointer flex flex-row items-center gap-3 text-blue-600 hover:text-blue-600 mb-1 py-3 font-bold\"\n                  >\n                    <div className=\"text-xl\">\n                      <BsArrowRightCircleFill />\n                    </div>\n                    <div\n                      dangerouslySetInnerHTML={{\n                        __html: item.value,\n                      }}\n                    ></div>\n                  </div>\n                ))}\n              </div>\n            </div>\n          )}\n        </div>\n      );\n    case questionTypeElementsType.Embedded:\n      return <div></div>;\n    case questionTypeElementsType.Hybrid:\n      return <div></div>;\n    default:\n      return <div className=\"text-blue-600 font-extrabold\">Answer added</div>;\n  }\n};\n\nconst FindAnswer = (props: FindAnswerProps) => {\n  const answer = props.answersList.find(\n    (item) => item.question_id === props.question.question_id\n  );\n  let UserAnswersSel = props.question.question.find(\n    (itm) => itm.language === props.selectedLanguage\n  );\n  if (UserAnswersSel === undefined && props.question.question.length > 0) {\n    UserAnswersSel =\n      props.question.question.find(\n        (itm) => itm.language === props.selectedLanguage\n      ) === undefined\n        ? props.question.question[0]\n        : props.question.question.find(\n            (itm) => itm.language === props.selectedLanguage\n          )!;\n  }\n  if (answer === undefined || UserAnswersSel === undefined) {\n    return (\n      <div className=\"text-yellow-600 font-extrabold text-2xl text-center\">\n        No answer found!\n      </div>\n    );\n  } else {\n    let SubQ = UserAnswersSel.sub_question.find(\n      (itm) => findQType(itm.typeShort) === props.subQuestionType\n    );\n\n    return (\n      <div>\n        {SubQ === undefined\n          ? resultDiv(\n              answer.answers[0].answer,\n              UserAnswersSel.answers[0].answer,\n              props\n            )\n          : answer.answers\n              .filter((itm) => SubQ && itm.reference === SubQ.reference)\n              .map((user_answer) => {\n                const testQ = UserAnswersSel!.answers.find(\n                  (itm) =>\n                    itm._id === user_answer._id &&\n                    itm.reference === user_answer.reference\n                );\n                if (testQ !== undefined) {\n                  return resultDiv(user_answer.answer, testQ.answer, props);\n                } else {\n                  return <div></div>;\n                }\n              })}\n      </div>\n    );\n  }\n};\n\nexport default FindAnswer;\n","import React, { Component } from \"react\";\nimport { MdSearch } from \"react-icons/md\";\nimport { claimReasonInterface } from \"../../../interfaces\";\nimport search from \"../../../utils/search\";\n\nexport const claimReasonsData = [\n  { key: 1, reason: \"Not placed (Sinahawe umwanya)\" },\n  {\n    key: 2,\n    reason:\n      \"Not placed with higher marks (Sinahawe umwanya kandi hari abo ndusha twakoze bimwe bawuhawe)\",\n  },\n  {\n    key: 3,\n    reason:\n      \"Want to change district of placement (Nifuza guhindurirwa akarere nahawemo umwanya)\",\n  },\n  {\n    key: 4,\n    reason: \"Rejected offer by mistake (Nibeshye nanga umwanya nahawe)\",\n  },\n  {\n    key: 0,\n    reason: \"None of the above (nta na kimwe muri ibyo byavuzwe haruguru)\",\n  },\n];\n\ntype ChooseReasonProps = {\n  claimReason: claimReasonInterface | null;\n  setClaimReason: (value: claimReasonInterface | null) => void;\n  setChooseClaimReason: (value: boolean) => void;\n  allClaimReasons: claimReasonInterface[];\n};\n\ntype ChooseReasonState = {\n  searchInput: string;\n};\n\nclass ChooseReason extends Component<ChooseReasonProps, ChooseReasonState> {\n  constructor(props: ChooseReasonProps) {\n    super(props);\n\n    this.state = {\n      searchInput: \"\",\n    };\n  }\n\n  setSearchInput = (value: string) => {\n    this.setState({ searchInput: value });\n  };\n\n  render() {\n    return (\n      <div>\n        {/* SEARCH PART */}\n        <div className=\"flex items-center w-full my-1\">\n          <MdSearch className=\"w-6 h-6 absolute ml-2\" />\n          <input\n            type=\"text\"\n            placeholder=\"Search\"\n            className=\"focus:border-2 h-7 ml-1 pl-9 mr-2 bg-gray-100 focus:border-gray-700 w-full rounded\"\n            onChange={(e) => this.setSearchInput(e.target.value)}\n            value={this.state.searchInput}\n          />\n          <button\n            className=\"bg-red-200 text-red-700 py-1 px-2 mr-1 rounded text-sm focus:outline-none\"\n            type=\"button\"\n            onClick={() => this.props.setChooseClaimReason(false)}\n          >\n            Close\n          </button>\n        </div>\n        {/* END SEARCH PART ///////////////// */}\n\n        <div className=\"w-full h-52 mt-2 overflow-y-auto divide-y divide-gray-300\">\n          {search(this.props.allClaimReasons, this.state.searchInput).map(\n            (item: claimReasonInterface, index) => (\n              <section key={index.toString() + item.id}>\n                <div\n                  className={`py-1 w-full px-2 hover:bg-gray-100 cursor-pointer ${\n                    this.props.claimReason &&\n                    this.props.claimReason.id === item.id\n                      ? \"border-l-4 border-blue-500 bg-blue-50\"\n                      : \"my-1\"\n                  }`}\n                  onClick={() => {\n                    this.props.setChooseClaimReason(false);\n                    this.props.setClaimReason(item);\n                  }}\n                >\n                  <p className=\"text-base text-black\">{item.reason}</p>\n                </div>\n              </section>\n            )\n          )}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default ChooseReason;\n","import React from \"react\";\nimport { DocumentClaimUser } from \"../../../actions/claiming\";\nimport { DocumentReducerInterface } from \"../../../reducers/document\";\nimport { capitalizeFirstLetter } from \"../../../shared/dataTest\";\nimport { API } from \"../../../utils/api\";\nimport { ClaimGetDocTitle } from \"./ClaimForm\";\n\ntype DocFormViewProps = {\n  thisDoc: DocumentClaimUser;\n  setChooseClaimFile: (value: boolean) => void;\n  setClaimFileId: (value: string) => void;\n  setViewThisFile: (value: string) => void;\n  documentCategories: DocumentReducerInterface;\n};\n\nconst DocFormView: React.FC<DocFormViewProps> = (props) => {\n  return (\n    <section className=\"\">\n      <div className=\"w-full bg-gray-100 px-4 py-1 animate__animated animate__fadeIn\">\n        <div className=\"flex flex-col mb-2\">\n          <div className=\"flex items-center justify-between\">\n            <span className=\"text-blue-600 font-bold text-xl\">\n              {ClaimGetDocTitle(props.documentCategories, props.thisDoc).main}\n            </span>\n            <button\n              type=\"button\"\n              className=\"btn btn-blue\"\n              onClick={() => {\n                props.setChooseClaimFile(false);\n                props.setClaimFileId(props.thisDoc.doc_id);\n                props.setViewThisFile(\"\");\n              }}\n            >\n              Choose\n            </button>\n          </div>\n          <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n            <span className={`italic`}>Status:</span>\n            <span className=\"font-bold text-yellow-900 rounded px-3 py-1\">\n              {capitalizeFirstLetter(props.thisDoc.validation_status)}\n            </span>\n          </div>\n          <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n            <span className={`italic`}>Evaluated by:</span>\n            <span className=\"font-semibold\">\n              ################\n              {/* {loadingUsers ? (\n                <div className=\"w-24 h-3 rounded bg-gray-200 animate__animated animate__pulse animate__delay-5s animate__infinite\"></div>\n              ) : getUserDocuments(\n                  props.userList,\n                  props.thisDoc.validated_by.user_id\n                ) ? (\n                getUserDocuments(\n                  props.userList,\n                  props.thisDoc.validated_by.user_id\n                )!.user.user_info.fname +\n                \" \" +\n                getUserDocuments(\n                  props.userList,\n                  props.thisDoc.validated_by.user_id\n                )!.user.user_info.lname\n              ) : (\n                \"-\"\n              )} */}\n            </span>\n          </div>\n          <div className=\"flex items-start gap-2 text-sm text-gray-600\">\n            <span className={`italic`}>Reason:</span>\n            <span className=\"font-normal\">\n              {props.thisDoc.validated_by.comment}\n            </span>\n          </div>\n          <div className=\"w-full my-1\">\n            <img\n              src={`${API.AUTH_FILES}/${props.thisDoc.files}`}\n              alt=\"doc file\"\n              className={`w-full`}\n            />\n          </div>\n        </div>\n      </div>\n    </section>\n  );\n};\n\nexport default DocFormView;\n","import React, { useState } from \"react\";\nimport { MdSearch } from \"react-icons/md\";\nimport { ApplicationSession } from \"../../../actions\";\nimport {\n  CandidateClaimInterface,\n  claimApplicationsInterface,\n} from \"../../../interfaces\";\nimport { ApplicationStates } from \"../../../interfaces/application\";\nimport { isClaimAllowed } from \"./ClaimForm\";\n\nconst getRejectedApplicants = (\n  applicationData: claimApplicationsInterface[]\n): claimApplicationsInterface[] => {\n  return applicationData.filter(\n    (item) => item.application_status === ApplicationStates.Rejected\n  );\n};\n\nexport const searchApplication = (\n  objList: claimApplicationsInterface[],\n  text: any\n): claimApplicationsInterface[] => {\n  if (undefined === text || text === \"\") return objList;\n  return objList.filter((product) => {\n    let flag;\n    // let dataKeys = product;\n\n    for (let prop in product) {\n      flag = false;\n      if (prop === \"position\") {\n        flag =\n          product.position.position_title\n            .toString()\n            .toLowerCase()\n            .indexOf(text.toLowerCase()) > -1;\n      }\n      if (flag) break;\n    }\n    return flag;\n  });\n  // return objList.filter((product) =>\n  //   product.position.position_title.includes(text)\n  // );\n};\n\ntype FormApplicationListProps = {\n  setChooseClaimFile: (value: boolean) => void;\n  setClaimFileId: (value: string) => void;\n  setViewThisFile: (value: string) => void;\n  claimFileId: string;\n  viewThisFile: string;\n  candidateApplications: claimApplicationsInterface[];\n  myClaims: CandidateClaimInterface[];\n  activeSession: ApplicationSession;\n};\n\nconst FormApplicationList: React.FC<FormApplicationListProps> = (props) => {\n  const [searchInput, setSearchInput] = useState<string>(\"\");\n  return (\n    <section>\n      {/* SEARCH PART */}\n      <div className=\"flex items-center w-full my-1\">\n        <MdSearch className=\"w-6 h-6 absolute ml-2\" />\n        <input\n          type=\"text\"\n          placeholder=\"Search\"\n          className=\"focus:border-2 h-7 ml-1 pl-9 mr-2 bg-gray-100 focus:border-gray-700 w-full rounded\"\n          onChange={(e) => setSearchInput(e.target.value)}\n          value={searchInput}\n          disabled={\n            getRejectedApplicants(props.candidateApplications).filter((item) =>\n              isClaimAllowed(\n                props.myClaims,\n                props.activeSession.session_plan_id,\n                item.application_id\n              )\n            ).length > 0\n              ? false\n              : true\n          }\n        />\n        <button\n          className=\"bg-red-200 text-red-700 py-1 px-2 mr-1 rounded text-sm focus:outline-none\"\n          type=\"button\"\n          onClick={() => {\n            props.setChooseClaimFile(false);\n            props.setViewThisFile(\"\");\n          }}\n        >\n          Close\n        </button>\n      </div>\n      {/* END SEARCH PART ///////////////// */}{\" \"}\n      {/* searchData(props.candidateApplications, searchInput) */}\n      <div className=\"w-full h-52 mt-2 overflow-y-auto divide-y divide-gray-300\">\n        {getRejectedApplicants(props.candidateApplications).filter((item) =>\n          isClaimAllowed(\n            props.myClaims,\n            props.activeSession.session_plan_id,\n            item.application_id\n          )\n        ).length > 0 ? (\n          searchApplication(\n            getRejectedApplicants(props.candidateApplications).filter((item) =>\n              isClaimAllowed(\n                props.myClaims,\n                props.activeSession.session_plan_id,\n                item.application_id\n              )\n            ),\n            searchInput\n          ).map((item, index) => (\n            <div\n              className={`group flex items-center justify-between my-1 hover:bg-gray-100 ${\n                props.claimFileId === item.application_id &&\n                \"bg-blue-50 border-l-4 border-blue-500\"\n              }`}\n              key={index + item.application_id}\n            >\n              <div\n                className=\"p-1 w-full mr-2 cursor-pointer\"\n                onClick={() => {\n                  props.setChooseClaimFile(false);\n                  props.setClaimFileId(item.application_id);\n                }}\n              >\n                <p className=\"text-base font-medium text-black\">\n                  {item.position.position_title}\n                </p>\n              </div>\n              <button\n                type=\"button\"\n                className=\"bg-blue-200 hover:bg-blue-300 text-blue-700 group-hover:text-blue-800 py-1 px-2 mr-1 rounded text-sm\"\n                onClick={() => {\n                  props.setViewThisFile(item.application_id);\n                }}\n              >\n                View\n              </button>\n            </div>\n          ))\n        ) : (\n          <div className=\"text-center p-3\">\n            <p className=\"text-base font-medium text-black\">\n              No Rejected document available\n            </p>\n          </div>\n        )}\n      </div>\n    </section>\n  );\n};\n\nexport default FormApplicationList;\n","import React, { useState } from \"react\";\nimport { MdSearch } from \"react-icons/md\";\nimport { DocumentReducerInterface } from \"../../../reducers/document\";\nimport { ClaimGetDocTitle, isClaimAllowed } from \"./ClaimForm\";\nimport { DocumentClaimUser } from \"../../../actions/claiming\";\nimport { CategorySubcategoryData } from \"../../../interfaces/candidatesInterfaces\";\nimport { CandidateClaimInterface } from \"../../../interfaces\";\nimport { ApplicationSession } from \"../../../actions\";\n\nexport interface DocumentTitleInterface {\n  category_id: string;\n  company: string;\n  description: string;\n  email: string;\n  end_year: string;\n  files: string;\n  names: string;\n  phone_number: string;\n  school: {\n    school_name: string;\n    _id: string;\n    status: boolean;\n    education_category_id?: {\n      education_category_title: string;\n      _id: string;\n    };\n    district_id?: {\n      district_name: string;\n      _id: string;\n    };\n  } | null;\n  school_id: string;\n  start_year: string;\n  sub_category_id: string;\n  title: string;\n  year: string;\n  validation_status: string;\n  validated_by: {\n    user_id: string;\n    comment: string;\n    validation_status: string;\n    date: string;\n  };\n  doc_id: string;\n  doc_title: string;\n  category_subcategory_data: CategorySubcategoryData | null;\n}\n\nexport const DocumentTitleData = (\n  documentData: DocumentClaimUser[],\n  documentCategories: DocumentReducerInterface\n): DocumentTitleInterface[] | [] => {\n  let documentTemp: DocumentTitleInterface[] = [];\n  for (let i in documentData) {\n    documentTemp.push({\n      category_id: documentData[i].category_id,\n      company: documentData[i].company,\n      description: documentData[i].description,\n      email: documentData[i].email,\n      end_year: documentData[i].end_year,\n      files: documentData[i].files,\n      names: documentData[i].names,\n      phone_number: documentData[i].phone_number,\n      school: documentData[i].school,\n      school_id: documentData[i].school_id,\n      start_year: documentData[i].start_year,\n      sub_category_id: documentData[i].sub_category_id,\n      title: documentData[i].title,\n      year: documentData[i].year,\n      validation_status: documentData[i].validation_status,\n      validated_by: documentData[i].validated_by,\n      doc_id: documentData[i].doc_id,\n      doc_title: ClaimGetDocTitle(documentCategories, documentData[i]).main,\n      category_subcategory_data: documentData[i].category_subcategory_data,\n    });\n  }\n  return documentTemp;\n};\n\nconst getRejectedDocuments = (\n  documentData: DocumentClaimUser[]\n): DocumentClaimUser[] => {\n  console.log({\n    rejected: documentData.filter(\n      (item) => item.validation_status === \"rejected\"\n    ),\n  });\n  return documentData.filter((item) => item.validation_status === \"rejected\");\n};\n\nexport const searchDocuments = (\n  objList: DocumentTitleInterface[],\n  text: any\n): DocumentTitleInterface[] => {\n  if (undefined === text || text === \"\") return objList;\n  return objList.filter(\n    (product) =>\n      product.doc_title.toString().toLowerCase().indexOf(text.toLowerCase()) >\n      -1\n  );\n};\n\ntype FormDocumentListProps = {\n  setChooseClaimFile: (value: boolean) => void;\n  setClaimFileId: (value: string) => void;\n  setViewThisFile: (value: string) => void;\n  claimFileId: string;\n  viewThisFile: string;\n  candidateDocuments: DocumentClaimUser[];\n  documentCategories: DocumentReducerInterface;\n  myClaims: CandidateClaimInterface[];\n  activeSession: ApplicationSession;\n};\n\nconst FormDocumentList: React.FC<FormDocumentListProps> = (props) => {\n  const [searchInput, setSearchInput] = useState<string>(\"\");\n  return (\n    <section>\n      {/* SEARCH PART */}\n      <div className=\"flex items-center w-full my-1\">\n        <MdSearch className=\"w-6 h-6 absolute ml-2\" />\n        <input\n          type=\"text\"\n          placeholder=\"Search\"\n          className=\"focus:border-2 h-7 ml-1 pl-9 mr-2 bg-gray-100 focus:border-gray-700 w-full rounded\"\n          onChange={(e) => setSearchInput(e.target.value)}\n          value={searchInput}\n          disabled={\n            DocumentTitleData(\n              getRejectedDocuments(props.candidateDocuments),\n              props.documentCategories\n            ).filter((item) =>\n              isClaimAllowed(\n                props.myClaims,\n                props.activeSession.session_plan_id,\n                item.doc_id\n              )\n            ).length > 0\n              ? false\n              : true\n          }\n        />\n        <button\n          className=\"bg-red-200 text-red-700 py-1 px-2 mr-1 rounded text-sm focus:outline-none\"\n          type=\"button\"\n          onClick={() => {\n            props.setChooseClaimFile(false);\n            props.setViewThisFile(\"\");\n          }}\n        >\n          Close\n        </button>\n      </div>\n      {/* END SEARCH PART ///////////////// */}\n      <div className=\"w-full h-52 mt-2 overflow-y-auto divide-y divide-gray-300\">\n        {props.candidateDocuments.filter((item) =>\n          isClaimAllowed(\n            props.myClaims,\n            props.activeSession.session_plan_id,\n            item.doc_id\n          )\n        ).length > 0 ? (\n          searchDocuments(\n            DocumentTitleData(\n              getRejectedDocuments(props.candidateDocuments),\n              props.documentCategories\n            ).filter((item) =>\n              isClaimAllowed(\n                props.myClaims,\n                props.activeSession.session_plan_id,\n                item.doc_id\n              )\n            ),\n            searchInput\n          ).map((doc, index) => (\n            <section key={index + doc.doc_id}>\n              <div\n                className={`group flex items-center justify-between my-1 hover:bg-gray-100 ${\n                  props.claimFileId === doc.doc_id &&\n                  \"bg-blue-50 border-l-4 border-blue-500\"\n                }`}\n              >\n                <div\n                  className=\"p-1 w-full mr-2 cursor-pointer\"\n                  onClick={() => {\n                    props.setChooseClaimFile(false);\n                    props.setClaimFileId(doc.doc_id);\n                  }}\n                >\n                  <p className=\"text-base font-medium text-black\">\n                    {ClaimGetDocTitle(props.documentCategories, doc).main}\n                  </p>\n                </div>\n                <button\n                  type=\"button\"\n                  className=\"bg-blue-200 hover:bg-blue-300 text-blue-700 group-hover:text-blue-800 py-1 px-2 mr-1 rounded text-sm\"\n                  onClick={() => {\n                    props.viewThisFile === doc.doc_id\n                      ? props.setViewThisFile(\"\")\n                      : props.setViewThisFile(doc.doc_id);\n                  }}\n                >\n                  {props.viewThisFile === doc.doc_id ? \"Close\" : \"View\"}\n                </button>\n              </div>\n            </section>\n          ))\n        ) : (\n          <div className=\"text-center p-3\">\n            <p className=\"text-base font-medium text-black\">\n              No Rejected document available\n            </p>\n          </div>\n        )}\n      </div>\n    </section>\n  );\n};\n\nexport default FormDocumentList;\n","import axios from \"axios\";\nimport React, { Component } from \"react\";\nimport { VscLoading } from \"react-icons/vsc\";\nimport { connect } from \"react-redux\";\nimport { PushPopupAlert } from \"../../../actions\";\nimport { updateSessionPlan } from \"../../../actions/session\";\nimport { PopupAlertData } from \"../../../components/Alert/Popup\";\nimport {\n  allPlanTypes,\n  PlansInterface,\n  PlansTypeInterface,\n  PlansTypeKeys,\n  SessionPlanInterface,\n  SessionPlanTypeStatus,\n} from \"../../../interfaces\";\nimport { PopupAlertTheme } from \"../../../interfaces/popupAlert\";\nimport { capitalizeFirstLetter } from \"../../../shared/dataTest\";\nimport { API } from \"../../../utils/api\";\nimport { DATE, errorToText } from \"../../../utils/functions\";\n\nexport const isActivationAllowed = (thisPlans: PlansInterface): boolean => {\n  let today: Date = new Date(),\n    end_date = new Date(thisPlans.end_date);\n  if (end_date.getTime() >= today.getTime()) {\n    return true;\n  }\n  return false;\n};\n\nexport const getPlanTypeByKey = (\n  type_key: PlansTypeKeys\n): PlansTypeInterface | undefined => {\n  return allPlanTypes.find((item) => item.type_key === type_key);\n};\n\nexport const isPlanActive = (\n  viewThisSession: SessionPlanInterface,\n  thisPlan: PlansInterface\n): \"OPEN\" | \"CLOSED\" | \"WAITING\" => {\n  if (viewThisSession.is_active) {\n    let today = new Date(),\n      planEndDate = new Date(thisPlan.end_date),\n      planStartDate = new Date(thisPlan.start_date);\n    if (\n      planEndDate.getTime() >= today.getTime() &&\n      planStartDate.getTime() <= today.getTime() &&\n      thisPlan.type_status !== SessionPlanTypeStatus.CLOSED\n    ) {\n      return \"OPEN\";\n    } else if (\n      planStartDate.getTime() > today.getTime() &&\n      thisPlan.type_status !== SessionPlanTypeStatus.CLOSED\n    ) {\n      return \"WAITING\";\n    }\n  }\n  return \"CLOSED\";\n};\n\ntype SessionDetailsProps = {\n  viewThisSession: SessionPlanInterface;\n  setViewThisSession: (data: SessionPlanInterface) => void;\n\n  // REDUX ----------------\n  updateSessionPlan: Function;\n  PushPopupAlert: (alert: PopupAlertData) => void;\n};\n\ntype SessionDetailsState = {\n  loadingRequest: string;\n};\n\nexport class SessionDetails extends Component<\n  SessionDetailsProps,\n  SessionDetailsState\n> {\n  constructor(props: SessionDetailsProps) {\n    super(props);\n\n    this.state = {\n      loadingRequest: \"\",\n    };\n  }\n\n  handlePlanActivation = async (\n    session: SessionPlanInterface,\n    thisPlan: PlansInterface\n  ) => {\n    const newState: \"open\" | \"close\" = session.is_active ? \"close\" : \"open\";\n\n    if (!window.confirm(`Are you sure you want to ${newState} this plan?`)) {\n      return true;\n    }\n\n    if (!isActivationAllowed(thisPlan)) {\n      this.props.PushPopupAlert({\n        title: `Opening/Closing plan which has been expired is not allowed!`,\n        theme: PopupAlertTheme.warning,\n      });\n    }\n\n    let newData: SessionPlanInterface = {\n      session_plan_name: session.session_plan_name,\n      period: session.period,\n      is_active: session.is_active,\n      plans: [],\n      createdAt: session.createdAt,\n      updatedAt: session.updatedAt,\n      session_plan_id: session.session_plan_id,\n    };\n    for (const key in session.plans) {\n      if (Object.prototype.hasOwnProperty.call(session.plans, key)) {\n        const element = session.plans[key];\n        if (thisPlan.type_key === element.type_key) {\n          if (thisPlan.type_status === SessionPlanTypeStatus.OPEN) {\n            newData.plans.push({\n              type_id: thisPlan.type_id,\n              type_title: thisPlan.type_title,\n              type_key: thisPlan.type_key,\n              type_status: SessionPlanTypeStatus.CLOSED,\n              start_date: thisPlan.start_date,\n              end_date: thisPlan.end_date,\n              allowed_claim_level: thisPlan.allowed_claim_level,\n              _id: thisPlan._id,\n              history: thisPlan.history,\n            });\n          } else {\n            newData.plans.push({\n              type_id: thisPlan.type_id,\n              type_title: thisPlan.type_title,\n              type_key: thisPlan.type_key,\n              type_status: SessionPlanTypeStatus.OPEN,\n              start_date: thisPlan.start_date,\n              end_date: thisPlan.end_date,\n              allowed_claim_level: thisPlan.allowed_claim_level,\n              _id: thisPlan._id,\n              history: thisPlan.history,\n            });\n          }\n        } else {\n          newData.plans.push(element);\n        }\n      }\n    }\n\n    console.log(\"====================================\");\n    console.log({ newData });\n    console.log(\"====================================\");\n\n    this.setState({ loadingRequest: thisPlan.type_key });\n    try {\n      const res = await axios.put<SessionPlanInterface>(\n        `${API.CLAIMING}/session/${session.session_plan_id}`,\n        newData\n      );\n      this.props.updateSessionPlan(res.data);\n      this.props.setViewThisSession(res.data);\n      this.props.PushPopupAlert({\n        title: `Session ${newState}d successfully`,\n        theme: PopupAlertTheme.info,\n      });\n      this.setState({ loadingRequest: \"\" });\n      console.log(\"updateSessionPlan: \", res);\n    } catch (error) {\n      console.error({ error: errorToText(error) });\n      this.props.PushPopupAlert({\n        title: errorToText(error),\n        theme: PopupAlertTheme.warning,\n      });\n    }\n  };\n\n  render() {\n    return (\n      <table className=\"w-full bg-white shadow p-5\" id=\"session_content\">\n        <thead className=\"bg-white border-b-2 border-gray-300 text-gray-600 font-bold text-sm\">\n          <tr>\n            <td className=\"p-2\">#</td>\n            <td className=\"p-2\">Plan Type</td>\n            <td className=\"p-2\">Start Date</td>\n            <td className=\"p-2\">End date</td>\n            {this.props.viewThisSession.is_active && (\n              <td className=\"p-2\" colSpan={2}>\n                Status\n              </td>\n            )}\n          </tr>\n        </thead>\n        <tbody>\n          {/* WHILE DATA FOUND ====================== */}\n          {this.props.viewThisSession.plans.map((item, index) => (\n            <tr\n              key={index + item._id}\n              className={`border-b border-gray-200 hover:bg-gray-100`}\n            >\n              <td className=\"p-2 text-left whitespace-nowrap\">{index + 1}</td>\n              <td className=\"p-2 text-left\">\n                <span className=\"text-lg\">\n                  {getPlanTypeByKey(item.type_key) &&\n                    capitalizeFirstLetter(\n                      getPlanTypeByKey(item.type_key)!.type_title\n                    )}\n                </span>\n              </td>\n              <td className=\"p-2 text-left\">{DATE(item.start_date)}</td>\n              <td className=\"p-2 text-left\">{DATE(item.end_date)}</td>\n              {this.props.viewThisSession.is_active && (\n                <td>\n                  {isPlanActive(this.props.viewThisSession, item) === \"OPEN\" ? (\n                    <span className={`px-2 py-1 font-semibold text-green-700`}>\n                      Open\n                    </span>\n                  ) : isPlanActive(this.props.viewThisSession, item) ===\n                    \"WAITING\" ? (\n                    <span className={`px-2 py-1 font-semibold text-gray-700`}>\n                      Waiting\n                    </span>\n                  ) : (\n                    <span className={`px-2 py-1 font-semibold text-red-700`}>\n                      Closed\n                    </span>\n                  )}\n                </td>\n              )}\n              {this.props.viewThisSession.is_active && (\n                <td>\n                  {isActivationAllowed(item) && (\n                    <div className=\"flex items-center justify-center gap-1\">\n                      <div\n                        className={`relative ${\n                          this.state.loadingRequest.length > 0\n                            ? \"cursor-not-allowed\"\n                            : \"cursor-pointer\"\n                        }`}\n                        title={\n                          item.type_status === SessionPlanTypeStatus.OPEN\n                            ? \"Deactivating session\"\n                            : \"Activating session\"\n                        }\n                        onClick={() =>\n                          this.state.loadingRequest.length <= 0 &&\n                          this.handlePlanActivation(\n                            this.props.viewThisSession,\n                            item\n                          )\n                        }\n                      >\n                        <span className=\"block w-14 h-8 bg-gray-100 rounded-full shadow-inner\"></span>\n                        <span\n                          className={`absolute block w-6 h-6 mt-1 ml-1 rounded-full shadow inset-y-0 left-0 focus-within:shadow-outline transition-transform duration-500 ease-in-out ${\n                            item.type_status === SessionPlanTypeStatus.CLOSED\n                              ? \"bg-red-500\"\n                              : \"bg-green-500 transform translate-x-full\"\n                          }`}\n                        ></span>\n                      </div>\n                      {this.state.loadingRequest === item.type_key && (\n                        <VscLoading className=\"animate__animated animate__rotateIn animate__infinite\" />\n                      )}\n                    </div>\n                  )}\n                </td>\n              )}\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    );\n  }\n}\n\nexport default connect(null, {\n  updateSessionPlan,\n  PushPopupAlert,\n})(SessionDetails);\n","import React, { Component, Fragment, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { BiArrowBack } from \"react-icons/bi\";\nimport { BsFillFileEarmarkTextFill } from \"react-icons/bs\";\nimport axios from \"axios\";\nimport { API } from \"../../utils/api\";\nimport { errorToText } from \"../../utils/errors\";\nimport { setAxiosToken } from \"../../utils/AxiosToken\";\nimport { connect } from \"react-redux\";\nimport moment from \"moment-timezone\";\nimport { TimeZone } from \"../../utils/app.config\";\nimport { Redirect } from \"react-router-dom\";\nimport {\n  Auth,\n  CandidateApplicationsStoreInterface,\n  candidateExamStoreInterface,\n  FC_Access,\n  FC_GetProfileDetails,\n  LoadCandidateApplications,\n  setSelectedCandidateExam,\n  setSelectedCourse,\n  setSelectedPosition,\n  InitializeExamDetails,\n  loadExamsDone,\n  AddUserApplication,\n  loadApplicationPeriods,\n  applicationPeriodsStoreInterface,\n} from \"../../actions\";\nimport { StoreState } from \"../../reducers\";\nimport { UserExamStatus, UserExamsListInterface } from \"../../interfaces/exam\";\nimport Loading from \"../../components/Loading/Loading\";\nimport { DATE, getMinutesFromTwoDates } from \"../../utils/functions\";\nimport { CountDown } from \"../../components/CountDown/CountDown\";\nimport { ExamTimeStatus, validateExamDate } from \"../../utils/question_bank\";\nimport { course, PositionAPI, PositionAPICourse } from \"../../interfaces\";\nimport {\n  ApplicationStates,\n  GetApplicationsAPI,\n} from \"../../interfaces/application\";\nimport { UserAccessList } from \"../../utils/auth_access\";\nimport { MdClose } from \"react-icons/md\";\nimport ChooseExamCenter, {\n  LocationTableInterface,\n} from \"../Application/ExamCenter/ChooseExamCenter\";\nimport { sentExamInterface } from \"../Application/ExamCenter/ExamCenter\";\nimport Modal, { ModalSize, Themes } from \"../../components/Modal/Modal\";\nimport CandidateAnswersDetails from \"../../components/AnswersDetails/CandidateAnswersDetails\";\n\nexport const compareWithToday = (tooday: moment.Moment, date: string) => {\n  const myDate = DATE(date, \"MM/DD/YYYY\");\n  let todayConverted =\n    (tooday.get(\"month\") < 9 ? \"0\" : \"\") +\n    (tooday.get(\"month\") + 1).toString() +\n    \"/\" +\n    tooday.get(\"date\") +\n    \"/\" +\n    tooday.get(\"year\");\n  if (new Date(myDate).getTime() < new Date(todayConverted).getTime()) {\n    return true;\n  }\n  return false;\n};\n\nexport interface ExamDoneDetailsAnswers {\n  course: string;\n  course_name: string;\n  discription: string;\n  termes: string;\n  rules: {\n    right_click_enabled: boolean;\n    copy_enabled: boolean;\n    paste_enabled: boolean;\n    stop_candidate_when_comeback: boolean;\n    allow_to_leave_browser: boolean;\n  };\n  period: string;\n  exam_date: string;\n}\n\ninterface NotPreparedExam {\n  course: string;\n  course_name: string;\n  course_code: string;\n  position: string;\n}\ninterface changeLocProps {\n  changeLocation: () => void;\n}\ninterface CandidateExamsProps {\n  FC_GetProfileDetails: Function;\n  auth: Auth;\n  candidateExam: candidateExamStoreInterface;\n  candidateApplications: CandidateApplicationsStoreInterface;\n  LoadCandidateApplications: (\n    user_id: string,\n    callback: (loading: boolean) => void\n  ) => void;\n  setSelectedCandidateExam: (exam_id: string) => void;\n  setSelectedCourse: (course: course | null) => void;\n  setSelectedPosition: (position: PositionAPI) => void;\n  InitializeExamDetails: (\n    periodId: string,\n    courseId: string,\n    district_id: string,\n    center_id: string,\n    room_id: string,\n    position_id: string,\n    callback: (loading: boolean) => void\n  ) => void;\n  loadExamsDone: (\n    periodId: string,\n    userId: string,\n    callback: (loading: boolean) => void\n  ) => void;\n  AddUserApplication: (application: GetApplicationsAPI) => void;\n  periods: applicationPeriodsStoreInterface;\n  loadApplicationPeriods: (callback: (loading: boolean) => void) => void;\n}\n\nconst ChangeLocationComponent = (props: changeLocProps): JSX.Element => {\n  const [display, setDisplay] = useState<boolean>(true);\n  if (display === false) {\n    return <div></div>;\n  }\n  return (\n    <div className=\"absolute right-2 left-2 md:right-1/4 md:left-1/4 lg:left-1/2 lg:right-auto bg-yellow-50 shadow-xl rounded py-1 px-1 flex flex-row justify-between items-center gap-2 text-yellow-800 -mt-5 lg:-mt-8\">\n      <div className=\"flex flex-row gap-2 items-center justify-between w-full pl-1\">\n        <span className=\"font-bold\">You are advised to change location</span>\n        <div\n          onClick={props.changeLocation}\n          className=\"px-2 py-1 rounded bg-blue-100 text-blue-600 w-max cursor-pointer\"\n        >\n          Change\n        </div>\n      </div>\n      <div\n        onClick={() => setDisplay(false)}\n        className=\"bg-yellow-100 text-yellow-600 rounded-full flex items-center justify-center p-1 h-8 w-8 cursor-pointer\"\n      >\n        <MdClose className=\"text-4xl\" />\n      </div>\n    </div>\n  );\n};\n\ninterface candidatePendingExamsList {\n  preparedExam: UserExamsListInterface[];\n  notPreparedExam: NotPreparedExam[];\n}\ninterface CandidateExamsState {\n  loading: boolean;\n  loadingExamsDone: boolean;\n  candidateExams: candidatePendingExamsList | null;\n  activeExams: string[];\n  candidateApplications: GetApplicationsAPI[] | null;\n  selectedCourse: course | null;\n  centersModal: boolean;\n  maxExamModal: boolean;\n  selectedPosition: string;\n  successMessage: string;\n  selectedExam: ExamDoneDetailsAnswers | null;\n}\n\nexport class _CandidateExams extends Component<\n  CandidateExamsProps,\n  CandidateExamsState\n> {\n  constructor(props: CandidateExamsProps) {\n    super(props);\n\n    this.state = {\n      loading: false,\n      loadingExamsDone: false,\n      candidateExams: null,\n      activeExams: [],\n      candidateApplications: null,\n      selectedCourse: null,\n      centersModal: false,\n      maxExamModal: false,\n      selectedPosition: \"\",\n      successMessage: \"\",\n      selectedExam: null,\n    };\n  }\n  setLoading = (status: boolean) => {\n    this.setState({ loading: status });\n  };\n  setloadingExamsDone = (status: boolean) => {\n    this.setState({ loadingExamsDone: status });\n  };\n  loadCandidateExams = async (user: string, period: string) => {\n    this.setLoading(true);\n    setAxiosToken();\n    try {\n      const res = await axios.get<candidatePendingExamsList>(\n        `${API.QBank}/exam/user/${user}/${period}`\n      );\n      this.setState({ candidateExams: res.data });\n      // console.log(\"My exams list: \", res.data);\n    } catch (error: any) {\n      console.log(\"My exams error: \", { ...error });\n      alert(errorToText(error));\n    }\n    this.setLoading(false);\n  };\n  loadUserProfileDetails = () => {\n    this.setState({\n      loading: true,\n    });\n    this.props.FC_GetProfileDetails(\n      this.props.auth.user.user_id,\n      (status: boolean, msg: string) => {\n        if (status === true) {\n          this.setState({\n            loading: false,\n          });\n        } else {\n          this.setState({\n            loading: false,\n          });\n        }\n      }\n    );\n    this.setState({\n      loading: false,\n    });\n  };\n\n  InitializationFn = (application: GetApplicationsAPI) => {\n    if (this.props.candidateExam.user_exams_done.length === 0) {\n      this.props.loadExamsDone(\n        application.application_session.session_plan_id,\n        this.props.auth.user.user_id,\n        this.setloadingExamsDone\n      );\n    }\n    for (let course of application.position.courses) {\n      let testDone = this.props.candidateExam.user_exams_temp.find(\n        (itm) => itm.course === course.course_id\n      );\n      if (testDone === undefined) {\n        let center_id = application.exams.find(\n          (itm) => itm.course_id === course.course_id\n        );\n        if (center_id !== undefined) {\n          this.props.InitializeExamDetails(\n            application.application_session.session_plan_id,\n            course.course_id,\n            center_id.district_id,\n            center_id.center_id,\n            center_id.room_id,\n            application.position.position_id,\n            this.setLoading\n          );\n        }\n      }\n    }\n  };\n  loadUserApplications = async () => {\n    this.setLoading(true);\n    try {\n      const res = await axios.get<GetApplicationsAPI[]>(\n        `${API.APPLICATION}/application/${this.props.auth.user.user_id}`\n      );\n      if (res.status === 200) {\n        this.setState({ candidateApplications: res.data });\n        for (let application of res.data) {\n          this.InitializationFn(application);\n        }\n        if (\n          this.props.candidateApplications.candidate_applications === null ||\n          this.props.candidateApplications.candidate_applications.length === 0\n        ) {\n          for (let application of res.data) {\n            this.props.AddUserApplication(application);\n          }\n        }\n      }\n    } catch (error: any) {\n      console.log(\"Appl ex Err: \", { ...error });\n    }\n    this.setLoading(false);\n  };\n  findLocation = (position_id: string, course_id: string) => {\n    if (this.state.candidateApplications !== null) {\n      const test = this.state.candidateApplications.find(\n        (item) =>\n          item.position.position_id === position_id &&\n          item.exams.filter((itm) => itm.course_id === course_id)\n      );\n      if (test !== undefined) {\n        let course = test.exams.find((itm) => itm.course_id === course_id);\n        if (course !== undefined) {\n          return course;\n        }\n      }\n    }\n    return null;\n  };\n  updateLocation = async (\n    application_id: string,\n    exams: sentExamInterface[]\n  ) => {\n    this.setState({ loading: true });\n    for (let i in exams) {\n      try {\n        const res = await axios.post(\n          `${API.APPLICATION}/application/updatemissed`,\n          {\n            application_id: application_id,\n            exams: exams[i],\n          }\n        );\n        if (res.status === 200) {\n          this.setState({\n            selectedCourse: null,\n            centersModal: false,\n            maxExamModal: false,\n            selectedPosition: \"\",\n            successMessage: \"Location updated successfully!\",\n          });\n          this.loadUserApplications();\n        }\n      } catch (error: any) {\n        console.log(\"Update loc err: \", { ...error });\n      }\n    }\n  };\n  updateLocationFunction = (exams: sentExamInterface[]) => {\n    if (this.state.candidateApplications !== null) {\n      let application = this.state.candidateApplications.find(\n        (item) => item.position.position_id === this.state.selectedPosition\n      );\n      if (application !== undefined) {\n        this.updateLocation(application.application_id, exams);\n      } else {\n        alert(\"Invalid application\");\n      }\n    } else {\n      alert(\"Missing application\");\n    }\n  };\n  addLocation = (\n    course_id: string,\n    course_name: string,\n    course_code: string,\n    location: LocationTableInterface,\n    exam_id: string\n  ) => {\n    return this.updateLocationFunction([\n      {\n        course_id: course_id,\n        proctoring_type: \"Center\",\n        center_id: location.center_id,\n        district_id: location.district_id,\n      },\n    ]);\n  };\n  componentDidMount = () => {\n    this.props.loadApplicationPeriods(this.setLoading);\n\n    if (\n      this.props.auth.user.sex === \"\" ||\n      this.props.auth.user.sex.length === 0\n    ) {\n      this.loadUserProfileDetails();\n    }\n    this.loadUserApplications();\n    if (this.props.auth.application_session !== null) {\n      this.loadCandidateExams(\n        this.props.auth.user.user_id,\n        this.props.auth.application_session.session_plan_id\n      );\n    }\n    if (this.props.auth.application_session !== null) {\n      this.props.loadExamsDone(\n        this.props.auth.application_session.session_plan_id,\n        this.props.auth.user.user_id,\n        this.setloadingExamsDone\n      );\n    }\n  };\n\n  removeDuplicatesExams = (\n    exams: UserExamsListInterface[]\n  ): UserExamsListInterface[] => {\n    let temp: UserExamsListInterface[] = [];\n    if (this.state.candidateApplications !== null) {\n      for (let item of exams) {\n        if (\n          this.state.candidateApplications.find(\n            (test) => test.position.position_id === item.position\n          ) !== undefined\n        ) {\n          if (temp.find((itm) => itm._id === item._id) === undefined) {\n            temp = [...temp, item];\n          }\n        }\n      }\n    }\n    return temp;\n  };\n\n  removeDuplicatesNotPreparedExams = (\n    exams: NotPreparedExam[]\n  ): NotPreparedExam[] => {\n    let temp: NotPreparedExam[] = [];\n    if (this.state.candidateApplications !== null) {\n      for (let item of exams) {\n        if (\n          this.state.candidateApplications.find(\n            (test) => test.position.position_id === item.position\n          ) !== undefined\n        ) {\n          if (temp.find((itm) => itm.course === item.course) === undefined) {\n            temp = [...temp, item];\n          }\n        }\n      }\n    }\n    return temp;\n  };\n  setTimeOut = (exam_id: string) => {\n    let temps: string[] = this.state.activeExams;\n    this.setState({\n      activeExams: [...temps, exam_id],\n    });\n  };\n  selectApplication = (\n    applications: GetApplicationsAPI[] | null,\n    position_id: string,\n    course_id: string\n  ): GetApplicationsAPI | null => {\n    if (applications !== null) {\n      let temp = applications.find(\n        (item) => item.position.position_id === position_id\n      );\n      if (temp !== undefined) {\n        if (\n          temp.position.courses.find((itm) => itm.course_id === course_id) !==\n          undefined\n        ) {\n          return temp;\n        }\n      }\n    }\n    return null;\n  };\n  setMaxExamModal = (status: boolean) => {\n    this.setState({ maxExamModal: status });\n  };\n\n  changeLocation = (item: PositionAPICourse) => {\n    this.setState({ selectedCourse: item, centersModal: true });\n    this.setMaxExamModal(true);\n  };\n\n  closeModal = () => {\n    this.setState({ centersModal: false });\n    this.setMaxExamModal(false);\n  };\n\n  render() {\n    const today = moment().tz(TimeZone);\n    // console.log(\"TODAY: \", today.get(\"days\"));\n    if (!FC_Access(this.props.auth, UserAccessList.MY_APPLICATION).view) {\n      return <Redirect to=\"/\" />;\n    }\n    if (this.props.candidateExam.selected_exam_id !== null) {\n      return <Redirect to=\"/do-exam\" />;\n    }\n    return (\n      <Fragment>\n        {this.state.selectedCourse === null ? (\n          <div className=\"mt-2 -ml-2 mr-3 pb-5\">\n            <div className=\"rounded mt-2\">\n              <div className=\"flex flex-row items-center gap-3\">\n                <Link\n                  to=\"/apps-page\"\n                  title=\"Back to menus\"\n                  className=\"bg-white group hover:bg-blue-50 h-10 w-10 flex items-center justify-center rounded-full cursor-pointer\"\n                >\n                  <BiArrowBack className=\"text-3xl text-blue-600 group-hover:text-blue-800\" />\n                </Link>\n                <div className=\"flex flex-col\">\n                  <span className=\"font-extrabold text-3xl\">My exams</span>\n                  <span className=\"text-gray-600 text-sm\">\n                    List of exams that are assigned to me\n                  </span>\n                </div>\n              </div>\n            </div>\n            {this.state.successMessage !== \"\" && (\n              <div\n                title=\"Click to close the message\"\n                onClick={() => this.setState({ successMessage: \"\" })}\n                className=\"animate__animated animate__zoomIn px-3 py-2 bg-green-500 text-white my-2 rounded cursor-pointer\"\n              >\n                {this.state.successMessage}\n              </div>\n            )}\n            {this.state.loading === true ||\n            this.state.loadingExamsDone === true ||\n            this.state.candidateExams === null ||\n            this.state.candidateApplications == null ? (\n              <div className=\"px-4 pt-5 pb-1 bg-white mt-2 rounded\">\n                <Loading />\n              </div>\n            ) : this.removeDuplicatesExams(\n                this.state.candidateExams.preparedExam\n              ).length === 0 ? (\n              <div className=\"bg-gray-50 rounded px-4 py-5 text-center font-bold mt-2 text-2xl text-gray-400\">\n                No exams found\n              </div>\n            ) : (\n              this.removeDuplicatesExams(\n                this.state.candidateExams.preparedExam\n              ).map((item, i) => (\n                <div key={i + 1} className=\"my-2 rounded bg-white p-2 group\">\n                  <div className=\"flex flex-col md:flex-row items-center justify-between\">\n                    <div className=\"flex flex-col md:flex-row items-center gap-2 w-full\">\n                      <div>\n                        <BsFillFileEarmarkTextFill className=\"hidden md:block text-4xl text-gray-300 group-hover:text-blue-600\" />\n                      </div>\n                      <div className=\"flex flex-col w-full\">\n                        <span className=\"text-base text-gray-800 font-extrabold group-hover:text-blue-600\">\n                          {item.course_name}\n                        </span>\n                        <div className=\"flex flex-row items-center justify-start w-full gap-3 -mt-1\">\n                          <div className=\"text-sm text-gray-500 group-hover:text-blue-600\">\n                            Date: {DATE(item.exam_date, \"DD/MM/YYYY\")}\n                          </div>\n                          <div className=\"hidden md:block text-sm bg-gray-100 underline text-gray-500  font-bold rounded-full px-2\">\n                            Start time: {item.start_time}\n                          </div>\n                          <div className=\"hidden md:block text-sm bg-blue-100 text-blue-900  font-bold rounded-full px-2\">\n                            Status: {item.user_status}\n                          </div>\n                        </div>\n                        {this.findLocation(item.position, item.course) !==\n                          null && (\n                          <div className=\"flex flex-row items-center gap-2 mt-2\">\n                            <div>\n                              Exam center:{\" \"}\n                              <span className=\"text-sm bg-gray-100 text-blue-900 group-hover:text-blue-600 font-bold rounded-full px-2 w-max\">\n                                {\n                                  this.findLocation(item.position, item.course)\n                                    ?.center_name\n                                }\n                              </span>\n                            </div>\n                            <div className=\"w-max flex flex-col md:flex-row\">\n                              Room number:{\" \"}\n                              {this.findLocation(item.position, item.course)\n                                ?.room_number === 0 ? (\n                                <span className=\"text-sm bg-yellow-100 text-yellow-900 group-hover:text-yellow-800 font-bold rounded-full px-2 w-max flex items-center justify-center\">\n                                  Waiting room\n                                </span>\n                              ) : (\n                                <span className=\"text-sm bg-gray-100 text-blue-900 group-hover:text-blue-600 font-bold rounded-full px-2 w-max\">\n                                  {\n                                    this.findLocation(\n                                      item.position,\n                                      item.course\n                                    )?.room_number\n                                  }\n                                </span>\n                              )}\n                              {/* Change loc */}\n                              {this.findLocation(item.position, item.course)\n                                ?.room_number === 0 &&\n                                validateExamDate(\n                                  item.exam_date,\n                                  item.start_time,\n                                  item.end_time\n                                ) !== ExamTimeStatus.Expired && (\n                                  <ChangeLocationComponent\n                                    changeLocation={() => {\n                                      this.setState({\n                                        selectedCourse: {\n                                          course_name: item.course_name,\n                                          course_code: item.course_code,\n                                          description: item.course_name,\n                                          school_levels: [],\n                                          course_id: item.course,\n                                        },\n                                        selectedPosition: item.position,\n                                        centersModal: true,\n                                      });\n                                      this.setMaxExamModal(true);\n                                    }}\n                                  />\n                                )}\n                            </div>\n                          </div>\n                        )}\n                      </div>\n                    </div>\n                    <div className=\"lg:w-full flex flex-row items-center justify-end\">\n                      {this.state.activeExams.find(\n                        (itm) => itm === item._id\n                      ) !== undefined ||\n                      item.user_status === UserExamStatus.Editing ||\n                      item.user_status === UserExamStatus.Paused ? (\n                        validateExamDate(\n                          item.exam_date,\n                          item.start_time,\n                          item.end_time\n                        ) !== ExamTimeStatus.Expired ? (\n                          this.selectApplication(\n                            this.state.candidateApplications,\n                            item.position,\n                            item.course\n                          )?.application_status !==\n                          ApplicationStates.Shortlisted ? (\n                            <div className=\"text-yellow-800 font-extrabold text-base bg-yellow-100 rounded px-3 py-1 cursor-not-allowed\">\n                              Not shortlisted\n                            </div>\n                          ) : (\n                            <div\n                              onClick={() => {\n                                let application = this.selectApplication(\n                                  this.state.candidateApplications,\n                                  item.position,\n                                  item.course\n                                );\n                                if (application !== null) {\n                                  if (\n                                    application.application_status ===\n                                    ApplicationStates.Shortlisted\n                                  ) {\n                                    // Select exam\n                                    this.props.setSelectedPosition(\n                                      application.position\n                                    );\n                                    this.props.setSelectedCourse(\n                                      application.position.courses.find(\n                                        (itm) => itm.course_id === item.course\n                                      )!\n                                    );\n                                    this.props.setSelectedCandidateExam(\n                                      item._id\n                                    );\n                                  } else {\n                                    alert(\n                                      \"Corresponding application is not shortlisted!\"\n                                    );\n                                  }\n                                } else {\n                                  alert(\"Invalid exam!\");\n                                }\n                              }}\n                              className={`${\n                                item.user_status === UserExamStatus.Editing ||\n                                item.user_status === UserExamStatus.Paused\n                                  ? \"bg-green-600 group-hover:bg-green-800\"\n                                  : \"bg-blue-600 group-hover:bg-blue-800\"\n                              } btn  text-white cursor-pointer w-max`}\n                            >\n                              {item.user_status === UserExamStatus.Editing\n                                ? \"Back to Exam\"\n                                : item.user_status === UserExamStatus.Paused\n                                ? \"Paused, back to exam\"\n                                : \"Start Exam\"}\n                            </div>\n                          )\n                        ) : item.user_status === UserExamStatus.Editing ||\n                          item.user_status === UserExamStatus.Done ||\n                          item.user_status === UserExamStatus.Paused ||\n                          item.user_status === UserExamStatus.Removed ? (\n                          <div className=\"text-blue-700 flex flex-col items-end justify-center w-max\">\n                            <span>Marks</span>\n                            <span className=\"text-2xl font-extrabold -mt-2\">\n                              {item.user_marks.toFixed(2)}%\n                            </span>\n                            <div\n                              onClick={() =>\n                                this.setState({\n                                  selectedExam: {\n                                    course: item.course,\n                                    course_name: item.course_name,\n                                    discription: item.discription,\n                                    termes: item.termes,\n                                    rules: item.rules,\n                                    period: item.period,\n                                    exam_date: item.exam_date,\n                                  },\n                                })\n                              }\n                              className=\"btn bg-blue-100 text-blue-700 cursor-pointer\"\n                            >\n                              Check details\n                            </div>\n                          </div>\n                        ) : (\n                          <div className=\"bg-yellow-100 text-yellow-700 font-extrabold text-base px-3 py-1 rounded-md w-max\">\n                            Expired\n                          </div>\n                        )\n                      ) : item.found === false ? (\n                        <div\n                          title=\"Please wait for the exam time\"\n                          className=\"text-lg lg:text-xl font-extrabold bg-green-100 text-green-700 px-3 py-1 rounded cursor-not-allowed w-max\"\n                        >\n                          <CountDown\n                            start_time={new Date(today.toString()).toString()}\n                            duration_min={getMinutesFromTwoDates(\n                              new Date(today.toString()),\n                              new Date(\n                                DATE(item.exam_date, \"MM/DD/YYYY\") +\n                                  \" \" +\n                                  item.start_time\n                              )\n                            )}\n                            timeout={() => this.setTimeOut(item._id)}\n                            returnString={true}\n                            labels={true}\n                            days\n                          />\n                        </div>\n                      ) : (\n                        <div className=\"text-blue-700 flex flex-col items-end justify-center w-max\">\n                          <span>Marks</span>\n                          <span className=\"text-2xl font-extrabold -mt-2\">\n                            {item.user_marks.toFixed(2)}%\n                          </span>\n                          <div\n                            onClick={() =>\n                              this.setState({\n                                selectedExam: {\n                                  course: item.course,\n                                  course_name: item.course_name,\n                                  discription: item.discription,\n                                  termes: item.termes,\n                                  rules: item.rules,\n                                  period: item.period,\n                                  exam_date: item.exam_date,\n                                },\n                              })\n                            }\n                            className=\"btn bg-blue-100 text-blue-700 cursor-pointer\"\n                          >\n                            Check details\n                          </div>\n                        </div>\n                      )}\n                    </div>\n                  </div>\n                </div>\n              ))\n            )}\n            {/* Not prepared exams */}\n            {this.state.candidateExams !== null &&\n              this.state.loading !== true &&\n              this.removeDuplicatesNotPreparedExams(\n                this.state.candidateExams.notPreparedExam\n              ).length > 0 &&\n              this.removeDuplicatesNotPreparedExams(\n                this.state.candidateExams.notPreparedExam\n              ).map((item, i) => (\n                <div\n                  key={i + 1}\n                  className=\"my-2 rounded bg-white p-2 py-3 group\"\n                >\n                  <div className=\"flex flex-col md:flex-row items-center justify-between\">\n                    <div className=\"flex flex-col md:flex-row items-center gap-2 w-full\">\n                      <div className=\"\">\n                        <BsFillFileEarmarkTextFill className=\"hidden md:block text-4xl text-gray-300 group-hover:text-blue-600\" />\n                      </div>\n                      <div className=\"flex flex-col\">\n                        <span className=\"text-base text-gray-600 font-bold group-hover:text-blue-600\">\n                          {item.course_name}\n                        </span>\n                        <div className=\"flex flex-row items-center gap-3 -mt-1\">\n                          {this.findLocation(item.position, item.course) !==\n                            null && (\n                            <div className=\"flex flex-row items-center gap-2 mt-2\">\n                              <div className=\"flex flex-col md:flex-row md:items-center\">\n                                Exam center:{\" \"}\n                                <span className=\"text-sm bg-gray-100 text-blue-900 group-hover:text-blue-600 font-bold rounded-full px-2 w-max\">\n                                  {\n                                    this.findLocation(\n                                      item.position,\n                                      item.course\n                                    )?.center_name\n                                  }\n                                </span>\n                              </div>\n                              <div className=\"w-max flex flex-col md:flex-row md:items-center\">\n                                Room number:{\" \"}\n                                {this.findLocation(item.position, item.course)\n                                  ?.room_number === 0 ? (\n                                  <span className=\"text-sm bg-yellow-100 text-yellow-900 group-hover:text-yellow-800 font-bold rounded-full px-2 w-max flex items-center justify-center\">\n                                    Waiting room\n                                  </span>\n                                ) : (\n                                  <span className=\"text-sm bg-gray-100 text-blue-900 group-hover:text-blue-600 font-bold rounded-full px-2 w-max\">\n                                    {\n                                      this.findLocation(\n                                        item.position,\n                                        item.course\n                                      )?.room_number\n                                    }\n                                  </span>\n                                )}\n                                {/* Change loc */}\n                                {this.findLocation(item.position, item.course)\n                                  ?.room_number === 0 && (\n                                  <ChangeLocationComponent\n                                    changeLocation={() => {\n                                      this.setState({\n                                        selectedCourse: {\n                                          course_name: item.course_name,\n                                          course_code: item.course_code,\n                                          description: item.course_name,\n                                          school_levels: [],\n                                          course_id: item.course,\n                                        },\n                                        selectedPosition: item.position,\n                                        centersModal: true,\n                                      });\n                                      this.setMaxExamModal(true);\n                                    }}\n                                  />\n                                )}\n                              </div>\n                            </div>\n                          )}\n                        </div>\n                      </div>\n                    </div>\n                    <div className=\"bg-gray-100 text-gray-600 font-extrabold text-base px-3 py-1 rounded-md\">\n                      Not prepared\n                    </div>\n                  </div>\n                </div>\n              ))}\n          </div>\n        ) : this.state.loading === true ? (\n          <div className=\"px-4 pt-5 pb-1 bg-white mt-2 rounded\">\n            <Loading />\n          </div>\n        ) : (\n          <div className=\"animate__animated animate__fadeInUp animate__faster mt-2 mr-1 -ml-3 rounded-t-md bg-white shadow-md pb-5\">\n            <div className=\"flex flex-row gap-4 items-center justify-between bg-blue-100 py-2 px-2 mb-2\">\n              <div className=\"flex flex-col w-full\">\n                <div className=\"flex flex-row gap-2 items-center justify-between w-full pl-2\">\n                  <span className=\"font-bold text-xl text-gray-800\">\n                    Change exam location\n                  </span>\n                  <div className=\"bg-white hover:text-yellow-700 hover:bg-white rounded-full p-1 h-10 w-10 border-2 border-white hover:border-yellow-600 flex items-center justify-center\">\n                    <MdClose\n                      className=\"cursor-pointer font-extrabold text-3xl\"\n                      onClick={() => {\n                        this.setState({\n                          centersModal: false,\n                          selectedCourse: null,\n                        });\n                      }}\n                    />\n                  </div>\n                </div>\n              </div>\n            </div>\n            <ChooseExamCenter\n              positionCourses={this.state.selectedCourse}\n              addLocation={this.addLocation}\n              closeModal={this.closeModal}\n            />\n          </div>\n        )}\n        {this.state.selectedExam !== null && (\n          <Modal\n            title={\n              <div className=\"text-2xl font-extrabold text-blue-600 px-2\">\n                Exam result details\n              </div>\n            }\n            backDrop={true}\n            theme={Themes.default}\n            close={() => this.setState({ selectedExam: null })}\n            backDropClose={true}\n            widthSizeClass={ModalSize.extraLarge}\n            displayClose={true}\n            padding={{ title: true }}\n          >\n            <CandidateAnswersDetails\n              exam_id={this.state.selectedExam}\n              showAnswers={false}\n            />\n          </Modal>\n        )}\n      </Fragment>\n    );\n  }\n}\n\nconst mapStateToProps = ({\n  auth,\n  candidateExam,\n  candidateApplications,\n  periods,\n}: StoreState): {\n  auth: Auth;\n  candidateExam: candidateExamStoreInterface;\n  candidateApplications: CandidateApplicationsStoreInterface;\n  periods: applicationPeriodsStoreInterface;\n} => {\n  return {\n    auth: auth,\n    candidateExam: candidateExam,\n    candidateApplications: candidateApplications,\n    periods: periods,\n  };\n};\n\nexport const CandidateExams = connect(mapStateToProps, {\n  FC_GetProfileDetails,\n  LoadCandidateApplications,\n  setSelectedCandidateExam,\n  setSelectedCourse,\n  setSelectedPosition,\n  InitializeExamDetails,\n  loadExamsDone,\n  AddUserApplication,\n  loadApplicationPeriods,\n})(_CandidateExams);\n","import {\n  QuestionForEmbedded,\n  QuestionForHybrid,\n  questionShortElementsType,\n  questionTypeElementsType,\n} from \"@mastrecruit/common\";\nimport React from \"react\";\nimport { MdCheckCircle, MdClose } from \"react-icons/md\";\nimport { Auth } from \"../../../actions/auth\";\nimport { candidateExamStoreInterface } from \"../../../actions/candidate_exam\";\nimport { questionTypesStoreInterface } from \"../../../actions/questionTypes\";\nimport { System } from \"../../../actions/system\";\nimport Loading from \"../../../components/Loading/Loading\";\nimport { EmbeddedQuestion } from \"../../../components/QuestionPreview/QuestionPreview\";\nimport { course } from \"../../../interfaces/course\";\nimport {\n  QuestionAnswerInterface,\n  QuestionInterface,\n  QuestionLanguage,\n} from \"../../../interfaces/question\";\nimport {\n  ExamAnsweredQuestions,\n  ExamPendingQuestions,\n  findQuestionType,\n} from \"../utils/utils\";\nimport FindAnswer from \"./FindAnswer\";\n\ninterface QuestionsReviewProps {\n  auth: Auth;\n  candidateExam: candidateExamStoreInterface;\n  system: System;\n  setSelectedExamQuestion: (\n    exam_id: string,\n    question_id: string | null\n  ) => void;\n  submitQuestionAnswer: boolean;\n  questionTypes: questionTypesStoreInterface;\n  loadQuestionTypes: (callback: (loading: boolean) => void) => void;\n  submitExam: () => void;\n  selectedExam: course | null;\n  setSubmitModal: (status: boolean) => void;\n  selectedLanguage: QuestionLanguage;\n  wholeQuestion: QuestionInterface;\n}\n\nexport const findQType = (\n  typeShort: questionShortElementsType | QuestionForEmbedded | QuestionForHybrid\n): questionTypeElementsType => {\n  let changed: questionTypeElementsType = questionTypeElementsType.Hybrid;\n  switch (typeShort) {\n    case QuestionForHybrid.Calculated:\n      changed = questionTypeElementsType.Calculated;\n      break;\n    case QuestionForHybrid.CalculatedMultipleChoice:\n      changed = questionTypeElementsType.CalculatedMultipleChoice;\n      break;\n    case QuestionForHybrid.Essay:\n      changed = questionTypeElementsType.Essay;\n      break;\n    case QuestionForHybrid.Matching:\n      changed = questionTypeElementsType.Matching;\n      break;\n    case QuestionForHybrid.MultipleChoice:\n      changed = questionTypeElementsType.MultipleChoice;\n      break;\n    case QuestionForHybrid.Numeric:\n      changed = questionTypeElementsType.Numeric;\n      break;\n    case QuestionForHybrid.ShortAnswer:\n      changed = questionTypeElementsType.ShortAnswer;\n      break;\n    case QuestionForHybrid.SimpleCalculate:\n      changed = questionTypeElementsType.SimpleCalculate;\n      break;\n    case QuestionForHybrid.SingleMultiple:\n      changed = questionTypeElementsType.SingleMultiple;\n      break;\n    case QuestionForHybrid.TrueFalse:\n      changed = questionTypeElementsType.TrueFalse;\n      break;\n  }\n  return changed;\n};\n\nconst FindAnswerHybrid = (props: QuestionsReviewProps) => {\n  let str = \"a\";\n  if (props.submitQuestionAnswer === true) {\n    return (\n      <div className=\"bg-white rounded mx-4 my-4\">\n        <div className=\"text-gray-600 mx-4\">Saving changes, Please wait...</div>\n        <Loading />\n      </div>\n    );\n  }\n  return (\n    <div className={`pt-4 border-t border-gray-300 bg-white`}>\n      <div className=\"px-4 pb-2\">\n        <div className=\"my-2\">\n          <div\n            className=\"flex flex-col gap-3 overflow-y-auto\"\n            style={{ maxHeight: \"100%\" }}\n          >\n            {console.log(\"Whole: \", props.wholeQuestion)}\n            <div>\n              {findQuestionType(\n                props.wholeQuestion.type,\n                props.questionTypes.questionTypes\n              ) === questionTypeElementsType.Hybrid &&\n                props.wholeQuestion.question.find(\n                  (test) => test.language === props.selectedLanguage\n                ) !== undefined &&\n                props.wholeQuestion.question\n                  .find((test) => test.language === props.selectedLanguage)!\n                  .sub_question.map((item, i) => {\n                    let stri = String.fromCharCode(\n                      str.charCodeAt(str.length - 1) + i\n                    );\n                    return (\n                      <div\n                        key={i + 1}\n                        className=\"bg-white hover:bg-white border border-white hover:border-blue-400 px-2 py-2 rounded  animate__animated animate__fadeIn animate__fast group\"\n                      >\n                        <div className=\"grid md:grid-cols-12 w-full\">\n                          <div className=\"col-span-12 flex flex-row items-center gap-3\">\n                            <div\n                              key={i + 1}\n                              className=\"w-6 h-6 p-2 rounded-full bg-blue-100 flex justify-center items-center font-bold text-lg text-blue-600 cursor-pointer\"\n                            >\n                              {stri}\n                            </div>\n                            <div className=\"text-sm w-full\">\n                              {props.wholeQuestion.question.find(\n                                (test) =>\n                                  test.language === props.selectedLanguage\n                              ) !== undefined ? (\n                                findQuestionType(\n                                  item.type,\n                                  props.questionTypes.questionTypes\n                                ) === questionTypeElementsType.Embedded ? (\n                                  EmbeddedQuestion(\n                                    props.wholeQuestion!,\n                                    props.questionTypes.questionTypes,\n                                    props.selectedLanguage,\n                                    props.candidateExam.question_answers,\n                                    (data: QuestionAnswerInterface) => {}\n                                  )\n                                ) : (\n                                  <div\n                                    className=\"font-bold text-gray-700 text-base\"\n                                    dangerouslySetInnerHTML={{\n                                      __html: item.description,\n                                    }}\n                                  ></div>\n                                )\n                              ) : (\n                                props.wholeQuestion.question.length > 0 && (\n                                  <div\n                                    className=\"font-bold text-gray-700 text-base max-h-20 truncate\"\n                                    dangerouslySetInnerHTML={{\n                                      __html: item.description,\n                                    }}\n                                  ></div>\n                                )\n                              )}\n                              <div className=\"text-blue-700 font-bold text-sm w-full\">\n                                Answer: &nbsp;\n                                {props.questionTypes.questionTypes !== null && (\n                                  <FindAnswer\n                                    selectedLanguage={props.selectedLanguage}\n                                    question={props.wholeQuestion}\n                                    answersList={props.candidateExam.question_answers.filter(\n                                      (itm) =>\n                                        itm.question_id ===\n                                        props.wholeQuestion.question_id\n                                    )}\n                                    questionTypes={\n                                      props.questionTypes.questionTypes\n                                    }\n                                    onClick={() => {}}\n                                    showCorrectAnswer={false}\n                                    subQuestionType={findQType(item.typeShort)}\n                                    reference={item.reference}\n                                  />\n                                )}\n                              </div>\n                            </div>\n                          </div>\n                        </div>\n                      </div>\n                    );\n                  })}\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default FindAnswerHybrid;\n","import axios from \"axios\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport {\n  Auth,\n  getMyClaims,\n  createClaim,\n  GetClaimingTypes,\n  getMyRejectedApplications,\n  getMyRejectedDocuments,\n  PushPopupAlert,\n  DocumentClaimUser,\n  getMyAnswers,\n  getClaimReasons,\n} from \"../../actions\";\nimport {\n  getDocumentCategory,\n  getDocumentSubCategory,\n  getDocumentFields,\n} from \"../../actions/document\";\nimport ApplicationFormView from \"../../containers/Claimings/Candidate/ApplicationFormView\";\nimport ChooseReason from \"../../containers/Claimings/Candidate/ChooseReason\";\nimport {\n  ClaimGetDocTitle,\n  isClaimAllowed,\n} from \"../../containers/Claimings/Candidate/ClaimForm\";\nimport DocFormView from \"../../containers/Claimings/Candidate/DocFormView\";\nimport FormApplicationList from \"../../containers/Claimings/Candidate/FormApplicationList\";\nimport FormDocumentList from \"../../containers/Claimings/Candidate/FormDocumentList\";\nimport { getCourseIdBySheetId } from \"../../containers/Claimings/Candidate/FormExamList\";\nimport {\n  PlansTypeKeys,\n  CandidateClaimInterface,\n  claimApplicationsInterface,\n  ClaimExamResultsDetails,\n  claimReasonInterface,\n} from \"../../interfaces\";\nimport { ApplicationStates } from \"../../interfaces/application\";\nimport { PopupAlertTheme } from \"../../interfaces/popupAlert\";\nimport { StoreState } from \"../../reducers\";\nimport { ClaimingReducerType } from \"../../reducers/claiming\";\nimport { DocumentReducerInterface } from \"../../reducers/document\";\nimport { capitalizeFirstLetter, isEmptyOrSpaces } from \"../../shared/dataTest\";\nimport { UserInterface } from \"../../shared/interfaces\";\nimport { API } from \"../../utils/api\";\nimport { setAxiosToken } from \"../../utils/AxiosToken\";\nimport { errorToText } from \"../../utils/errors\";\nimport { DATE } from \"../../utils/functions\";\nimport { PopupAlertData } from \"../Alert/Popup\";\nimport Loading from \"../Loading/Loading\";\n\ntype ClaimFormProps = {\n  claim_type: PlansTypeKeys;\n  file_id: string;\n  setFormState: (value: boolean, response?: boolean) => void;\n  auth: Auth;\n  claiming: ClaimingReducerType;\n  documentReducer: DocumentReducerInterface;\n  createClaim: Function;\n  GetClaimingTypes: Function;\n  getDocumentCategory: Function;\n  getDocumentSubCategory: Function;\n  getDocumentFields: Function;\n  getMyRejectedApplications: Function;\n  getMyRejectedDocuments: Function;\n  getMyClaims: Function;\n  getMyAnswers: Function;\n  getClaimReasons: Function;\n  PushPopupAlert: (alert: PopupAlertData) => void;\n\n  // DEFAULT DATA ==========\n  candidateDocuments?: DocumentClaimUser[];\n  candidateAnswers?: ClaimExamResultsDetails[];\n  candidateApplications?: claimApplicationsInterface[];\n};\n\ntype ClaimFormState = {\n  loading: boolean;\n  loadingForm: boolean;\n  formError: {\n    element: string;\n    msg: string;\n  } | null;\n  thisClaimType: PlansTypeKeys | null;\n  thisClaimTypeId: string;\n  claimComment: string;\n  claimFileId: string;\n  chooseClaimFile: boolean;\n  chooseClaimReason: boolean;\n  claimReason: claimReasonInterface | null;\n  viewThisFile: string;\n  formType: \"DEFAULT\" | \"PROPS\";\n  alertError: string | null;\n  thisClaim: CandidateClaimInterface | null;\n};\n\nexport class ClaimFormComponent extends Component<\n  ClaimFormProps,\n  ClaimFormState\n> {\n  constructor(props: ClaimFormProps) {\n    super(props);\n\n    this.state = {\n      loading: true,\n      loadingForm: false,\n      formError: null,\n      thisClaimType: null,\n      thisClaimTypeId: \"\",\n      claimComment: \"\",\n      claimFileId: \"\",\n      chooseClaimFile: false,\n      viewThisFile: \"\",\n      formType: \"DEFAULT\",\n      alertError: null,\n      thisClaim: null,\n      chooseClaimReason: false,\n      claimReason: null,\n    };\n  }\n\n  // GENERATE SET STATES FUNCTIONS\n  setLoading = (state: boolean) => {\n    this.setState({ loading: state });\n  };\n\n  setLoadingForm = (state: boolean) => {\n    this.setState({ loadingForm: state });\n  };\n\n  setFormError = (\n    data: {\n      element: string;\n      msg: string;\n    } | null\n  ) => {\n    this.setState({ formError: data });\n  };\n\n  setAlertError = (data: string | null) => {\n    this.setState({ alertError: data });\n  };\n\n  setClaimFileId = (data: string) => {\n    this.setState({ claimFileId: data });\n  };\n\n  setViewThisFile = (data: string) => {\n    this.setState({ viewThisFile: data });\n  };\n\n  setChooseClaimFile = (data: boolean) => {\n    this.setState({ chooseClaimFile: data });\n  };\n\n  setClaimComment = (data: string) => {\n    this.setState({ claimComment: data });\n  };\n\n  setThisClaim = (data: CandidateClaimInterface | null) => {\n    this.setState({ thisClaim: data });\n  };\n\n  setChooseClaimReason = (value: boolean) => {\n    this.setState({ chooseClaimReason: value });\n  };\n\n  setClaimReason = (value: claimReasonInterface | null) => {\n    this.setState({ claimReason: value });\n  };\n\n  // CHECK IF PASSED ID IS VALID\n  isDocumentIdValid = (\n    documents: DocumentClaimUser[],\n    doc_id: string\n  ): {\n    status: boolean;\n    msg: string;\n    alert: PopupAlertTheme;\n  } => {\n    let doc = documents.find((item) => item.doc_id === doc_id);\n    if (doc) {\n      // CHECK IF DOCUMENT HAS REJECTED STATUS\n      if (doc.validated_by.validation_status !== \"rejected\") {\n        return {\n          status: false,\n          msg: \"Only rejected document are allowed for claim\",\n          alert: PopupAlertTheme.info,\n        };\n      }\n      // CHECK IF DOCUMENT HAS ALREADY CLAIMED ON\n      if (this.props.claiming.myClaims && this.props.auth.application_session) {\n        const claimFound = this.props.claiming.myClaims.find(\n          (item) =>\n            item.period_id ===\n              this.props.auth.application_session!.session_plan_id &&\n            item.claiming_on_id === doc_id\n        );\n        this.setThisClaim(claimFound ? claimFound : null);\n      }\n      return { status: true, msg: \"\", alert: PopupAlertTheme.success };\n    } else {\n      return {\n        status: false,\n        msg: \"Invalid document id\",\n        alert: PopupAlertTheme.warning,\n      };\n    }\n  };\n\n  isApplicationIdValid = (\n    applications: claimApplicationsInterface[],\n    app_id: string\n  ): {\n    status: boolean;\n    msg: string;\n    alert: PopupAlertTheme;\n  } => {\n    const app = applications.find((item) => item.application_id === app_id);\n    if (app) {\n      // CHECK IF DOCUMENT HAS REJECTED STATUS\n      if (app.application_status !== ApplicationStates.Rejected) {\n        return {\n          status: false,\n          msg: \"Only rejected application are allowed for claim\",\n          alert: PopupAlertTheme.info,\n        };\n      }\n      // CHECK IF DOCUMENT HAS ALREADY CLAIMED ON\n      if (\n        this.props.claiming.myClaims &&\n        this.props.auth.application_session &&\n        isClaimAllowed(\n          this.props.claiming.myClaims,\n          this.props.auth.application_session.session_plan_id,\n          app.application_id\n        )\n      ) {\n        const claimFound = this.props.claiming.myClaims.find(\n          (item) =>\n            item.period_id ===\n              this.props.auth.application_session!.session_plan_id &&\n            item.claiming_on_id === app.application_id\n        );\n        this.setThisClaim(claimFound ? claimFound : null);\n      }\n      return { status: true, msg: \"\", alert: PopupAlertTheme.info };\n    } else {\n      return {\n        status: false,\n        msg: \"Invalid application id\",\n        alert: PopupAlertTheme.warning,\n      };\n    }\n  };\n\n  isExamIdValid = (\n    exams: ClaimExamResultsDetails[],\n    exam_id: string\n  ): {\n    status: boolean;\n    msg: string;\n    alert: PopupAlertTheme;\n  } => {\n    const exam = exams.find((item) => item.answer_sheet_id === exam_id);\n    if (exam) {\n      // CHECK IF DOCUMENT HAS REJECTED STATUS\n      if (exam.total_marks === 100) {\n        return {\n          status: false,\n          msg: \"You can't claim on exam which you have 100%\",\n          alert: PopupAlertTheme.info,\n        };\n      }\n      // CHECK IF DOCUMENT HAS ALREADY CLAIMED ON\n      if (\n        this.props.claiming.myClaims &&\n        this.props.auth.application_session &&\n        isClaimAllowed(\n          this.props.claiming.myClaims,\n          this.props.auth.application_session.session_plan_id,\n          exam.answer_sheet_id\n        )\n      ) {\n        const claimFound = this.props.claiming.myClaims.find(\n          (item) =>\n            item.period_id ===\n              this.props.auth.application_session!.session_plan_id &&\n            item.claiming_on_id === exam.answer_sheet_id\n        );\n        this.setThisClaim(claimFound ? claimFound : null);\n        // return {\n        //   status: false,\n        //   msg: \"This application already in claiming list!\",\n        //   alert: PopupAlertTheme.info,\n        // };\n      }\n      return { status: true, msg: \"\", alert: PopupAlertTheme.info };\n    } else {\n      return {\n        status: false,\n        msg: \"Invalid answer sheet id\",\n        alert: PopupAlertTheme.warning,\n      };\n    }\n    // return {\n    //   status: false,\n    //   msg: \"No Application, please try again!\",\n    //   alert: PopupAlertTheme.info,\n    // };\n  };\n\n  componentDidMount = () => {\n    if (this.props.auth.application_session === null) {\n      this.props.PushPopupAlert({\n        title: \"No session active session\",\n        theme: PopupAlertTheme.danger,\n      });\n      this.props.setFormState(false);\n      this.setState({\n        claimFileId: \"\",\n        thisClaimType: null,\n        thisClaimTypeId: \"\",\n        claimComment: \"\",\n        chooseClaimFile: false,\n        formType: \"DEFAULT\",\n        viewThisFile: \"\",\n        formError: null,\n      });\n    } else {\n      if (\n        this.props.documentReducer.documentCategory === null &&\n        this.props.claim_type === PlansTypeKeys.DOCUMENT_VALIDATION\n      ) {\n        this.props.getDocumentCategory();\n      }\n      if (\n        this.props.documentReducer.documentSubCategory === null &&\n        this.props.claim_type === PlansTypeKeys.DOCUMENT_VALIDATION\n      ) {\n        this.props.getDocumentSubCategory();\n      }\n      if (\n        this.props.documentReducer.documentFields === null &&\n        this.props.claim_type === PlansTypeKeys.DOCUMENT_VALIDATION\n      ) {\n        this.props.getDocumentFields();\n      }\n      if (\n        this.props.claiming.candidateApplications === null &&\n        this.props.claim_type === PlansTypeKeys.APPLICATION\n      ) {\n        this.props.getMyRejectedApplications(\n          this.props.auth.user.user_id,\n          (\n            status: boolean,\n            msg: string,\n            data?: claimApplicationsInterface[]\n          ) => {\n            this.setLoading(status);\n            if (!status) {\n              if (msg.length > 0) {\n                this.props.PushPopupAlert({\n                  title: msg,\n                  theme: PopupAlertTheme.danger,\n                });\n              }\n              if (data) {\n                // PROPS VALIDATION PROCESS ###############\n                if (\n                  this.props.claim_type &&\n                  this.props.file_id &&\n                  this.state.formType === \"DEFAULT\"\n                ) {\n                  if (this.props.claim_type === PlansTypeKeys.APPLICATION) {\n                    let _isApplicationIdValid = this.isApplicationIdValid(\n                      data,\n                      this.props.file_id\n                    );\n                    if (!_isApplicationIdValid.status) {\n                      this.props.PushPopupAlert({\n                        title: _isApplicationIdValid.msg,\n                        theme: _isApplicationIdValid.alert,\n                      });\n                      this.props.setFormState(false);\n                    } else {\n                      this.setState({\n                        thisClaimType: this.props.claim_type,\n                        claimFileId: this.props.file_id,\n                        formType: \"PROPS\",\n                      });\n                    }\n                  }\n                }\n              }\n            }\n          }\n        );\n      } else this.setLoading(false);\n\n      if (\n        this.props.claiming.candidateDocuments === null &&\n        this.props.claim_type === PlansTypeKeys.DOCUMENT_VALIDATION\n      ) {\n        this.props.getMyRejectedDocuments(\n          (status: boolean, msg: string, data?: DocumentClaimUser[]) => {\n            this.setLoading(status);\n            if (!status) {\n              if (msg.length > 0) {\n                this.props.PushPopupAlert({\n                  title: msg,\n                  theme: PopupAlertTheme.danger,\n                });\n              }\n              if (data) {\n                // PROPS VALIDATION PROCESS ###############\n                if (\n                  this.props.claim_type &&\n                  this.props.file_id &&\n                  this.state.formType === \"DEFAULT\"\n                ) {\n                  if (\n                    this.props.claim_type === PlansTypeKeys.DOCUMENT_VALIDATION\n                  ) {\n                    let _isDocumentIdValid = this.isDocumentIdValid(\n                      data,\n                      this.props.file_id\n                    );\n                    if (!_isDocumentIdValid.status) {\n                      this.props.PushPopupAlert({\n                        title: _isDocumentIdValid.msg,\n                        theme: _isDocumentIdValid.alert,\n                      });\n                      // setAlertError(_isDocumentIdValid.msg);\n                      this.props.setFormState(false);\n                    } else {\n                      this.setState({\n                        thisClaimType: this.props.claim_type,\n                        claimFileId: this.props.file_id,\n                        formType: \"PROPS\",\n                      });\n                    }\n                  }\n                }\n              }\n            }\n          }\n        );\n      } else this.setLoading(false);\n\n      if (\n        this.props.claiming.myAnswer === null &&\n        this.props.claim_type === PlansTypeKeys.EXAMINATION\n      ) {\n        this.props.getMyAnswers(\n          this.props.auth.application_session.session_plan_id,\n          this.props.auth.user.user_id,\n          (status: boolean, msg: string, data: ClaimExamResultsDetails[]) => {\n            this.setLoading(status);\n            if (!status && msg.length) {\n              this.props.PushPopupAlert({\n                title: msg,\n                theme: PopupAlertTheme.danger,\n              });\n            }\n            if (data) {\n              console.log(\"====================================\");\n              console.log({ loadExamAnswers: data });\n              console.log(\"====================================\");\n            }\n          }\n        );\n      }\n\n      if (this.props.claiming.claimReasons === null) {\n        this.props.getClaimReasons((status: boolean, msg: string) => {\n          this.setLoading(status);\n          if (!status) {\n            if (msg.length > 0) {\n              this.props.PushPopupAlert({\n                title: msg,\n                theme: PopupAlertTheme.danger,\n              });\n            }\n          }\n        });\n      }\n\n      if (this.props.claiming.myClaims === null) {\n        this.props.getMyClaims(\n          this.props.auth.user.user_id,\n          this.props.auth.application_session.session_plan_id,\n          (status: boolean, msg: string) => {\n            this.setLoading(status);\n            if (status === false && msg.length) {\n              this.props.PushPopupAlert({\n                title: msg,\n                theme: PopupAlertTheme.danger,\n              });\n            }\n          }\n        );\n      } else this.setLoading(false);\n\n      // PROPS VALIDATION PROCESS ###############\n      if (\n        !isEmptyOrSpaces(this.props.claim_type) &&\n        !isEmptyOrSpaces(this.props.file_id) &&\n        this.state.formType === \"DEFAULT\"\n      ) {\n        this.setState({ thisClaimType: this.props.claim_type });\n        if (\n          this.props.claim_type === PlansTypeKeys.DOCUMENT_VALIDATION &&\n          this.props.claiming.candidateDocuments\n        ) {\n          let _isDocumentIdValid = this.isDocumentIdValid(\n            this.props.claiming.candidateDocuments,\n            this.props.file_id\n          );\n          if (!_isDocumentIdValid.status) {\n            this.props.PushPopupAlert({\n              title: _isDocumentIdValid.msg,\n              theme: _isDocumentIdValid.alert,\n            });\n            // setAlertError(_isDocumentIdValid.msg);\n            this.props.setFormState(false);\n          } else {\n            this.setState({\n              thisClaimType: this.props.claim_type,\n              claimFileId: this.props.file_id,\n              formType: \"PROPS\",\n            });\n          }\n        }\n        if (\n          this.props.claim_type === PlansTypeKeys.APPLICATION &&\n          this.props.claiming.candidateApplications\n        ) {\n          let _isApplicationIdValid = this.isApplicationIdValid(\n            this.props.claiming.candidateApplications,\n            this.props.file_id\n          );\n          if (!_isApplicationIdValid.status) {\n            this.props.PushPopupAlert({\n              title: _isApplicationIdValid.msg,\n              theme: _isApplicationIdValid.alert,\n            });\n            this.props.setFormState(false);\n          } else {\n            this.setState({\n              thisClaimType: this.props.claim_type,\n              claimFileId: this.props.file_id,\n              formType: \"PROPS\",\n            });\n          }\n        }\n\n        if (\n          this.props.claim_type === PlansTypeKeys.EXAMINATION &&\n          this.props.claiming.myAnswer\n        ) {\n          let _isExamIdValid = this.isExamIdValid(\n            this.props.claiming.myAnswer,\n            this.props.file_id\n          );\n          if (!_isExamIdValid.status) {\n            this.props.PushPopupAlert({\n              title: _isExamIdValid.msg,\n              theme: _isExamIdValid.alert,\n            });\n            this.props.setFormState(false);\n          } else {\n            this.setState({\n              thisClaimType: this.props.claim_type,\n              claimFileId: this.props.file_id,\n              formType: \"PROPS\",\n            });\n          }\n        }\n      }\n    }\n  };\n\n  getDocumentById = (\n    documents: DocumentClaimUser[],\n    doc_id: string\n  ): DocumentClaimUser => {\n    return documents.filter((item) => item.doc_id === doc_id)[0];\n  };\n\n  getApplicationById = (\n    applications: claimApplicationsInterface[],\n    application_id: string\n  ): claimApplicationsInterface => {\n    return applications.filter(\n      (item) => item.application_id === application_id\n    )[0];\n  };\n\n  getValidation = (\n    thisId: string\n  ): {\n    old_reason: string;\n    old_status: string;\n    old_evaluated_by: string;\n  } => {\n    let result: {\n      old_reason: string;\n      old_status: string;\n      old_evaluated_by: string;\n    } = { old_reason: \"\", old_status: \"\", old_evaluated_by: \"\" };\n\n    if (\n      this.state.thisClaimType === PlansTypeKeys.DOCUMENT_VALIDATION &&\n      this.props.claiming.candidateDocuments\n    ) {\n      result = {\n        old_reason: this.getDocumentById(\n          this.props.claiming.candidateDocuments,\n          thisId\n        ).validated_by.comment,\n        old_status: this.getDocumentById(\n          this.props.claiming.candidateDocuments,\n          thisId\n        ).validated_by.validation_status,\n        old_evaluated_by: this.getDocumentById(\n          this.props.claiming.candidateDocuments,\n          thisId\n        ).validated_by.user_id,\n      };\n    } else if (\n      this.state.thisClaimType === PlansTypeKeys.APPLICATION &&\n      this.props.claiming.candidateApplications\n    ) {\n      result = {\n        old_reason: this.getApplicationById(\n          this.props.claiming.candidateApplications,\n          thisId\n        ).override_by.comment,\n        old_status: this.getApplicationById(\n          this.props.claiming.candidateApplications,\n          thisId\n        ).override_by.application_status,\n        old_evaluated_by: this.getApplicationById(\n          this.props.claiming.candidateApplications,\n          thisId\n        ).override_by.user_id,\n      };\n    }\n\n    return result;\n  };\n\n  loadUserById = async (user_id: string, callback: Function) => {\n    if (isEmptyOrSpaces(user_id)) {\n      return this.props.PushPopupAlert({\n        title: \"No user id provided\",\n        theme: PopupAlertTheme.danger,\n      });\n    }\n    try {\n      setAxiosToken();\n      const res = await axios.get<UserInterface>(\n        `${API.AUTH}/users/${user_id}`\n      );\n      console.log(\"====================================\");\n      console.log({ loadUserById: res });\n      console.log(\"====================================\");\n      if (res) {\n        callback(res.data);\n      }\n    } catch (error) {\n      console.error({ error });\n      this.props.PushPopupAlert({\n        title: errorToText(error),\n        theme: PopupAlertTheme.danger,\n      });\n    }\n  };\n\n  getClaimTitle = (claimType: PlansTypeKeys): string => {\n    let result: string = \"\";\n    if (\n      claimType === PlansTypeKeys.DOCUMENT_VALIDATION &&\n      this.props.claiming.candidateDocuments\n    ) {\n      result = ClaimGetDocTitle(\n        this.props.documentReducer,\n        this.getDocumentById(\n          this.props.claiming.candidateDocuments,\n          this.state.claimFileId\n        )\n      ).main;\n    }\n    if (\n      claimType === PlansTypeKeys.APPLICATION &&\n      this.props.claiming.candidateApplications\n    ) {\n      result = this.getApplicationById(\n        this.props.claiming.candidateApplications,\n        this.state.claimFileId\n      ).position.position_title;\n    }\n    if (\n      claimType === PlansTypeKeys.EXAMINATION &&\n      this.props.claiming.myAnswer &&\n      getCourseIdBySheetId(this.props.claiming.myAnswer, this.state.claimFileId)\n    ) {\n      result = getCourseIdBySheetId(\n        this.props.claiming.myAnswer,\n        this.state.claimFileId\n      )!.course_name;\n    }\n    // if (\n    //   claimType === PlansTypeKeys.PLACEMENT_TRANSFER &&\n    //   this.state.myPlacement\n    // ) {\n    //   result = \"Placed on \" + this.state.myPlacement.placed.school.school_name;\n    // }\n\n    return result;\n  };\n\n  cleanToClose = () => {\n    this.props.setFormState(false);\n    this.setState({\n      claimFileId: \"\",\n      thisClaimType: null,\n      thisClaimTypeId: \"\",\n      claimComment: \"\",\n      chooseClaimFile: false,\n      formType: \"DEFAULT\",\n      viewThisFile: \"\",\n      formError: null,\n    });\n  };\n\n  handleSubmit = async (e: React.FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n    if (!this.state.thisClaimType) {\n      return this.setFormError({\n        element: \"claim_type\",\n        msg: \"Claim type is required!\",\n      });\n    }\n    if (isEmptyOrSpaces(this.state.claimFileId)) {\n      return this.setFormError({\n        element: \"claim_file\",\n        msg: `Please select ${this.state.thisClaimType.toLocaleLowerCase()} you are claiming on!`,\n      });\n    }\n\n    if (!this.state.claimReason) {\n      return this.setFormError({\n        element: \"claim_reason\",\n        msg: `Please select the reason of your claim!`,\n      });\n    }\n\n    if (isEmptyOrSpaces(this.state.claimComment)) {\n      return this.setFormError({\n        element: \"claim_comment\",\n        msg: `Claim comment is required!`,\n      });\n    }\n\n    if (!this.props.auth.application_session) {\n      return this.setAlertError(`No active claiming session is available!`);\n    }\n    let old_evaluator_email: string = \"info@system.com\";\n    let old_evaluator_name: string = \"System\";\n    let evaluator_email: string = \"\";\n    let evaluator_name: string = \"\";\n    let title: string = this.getClaimTitle(this.state.thisClaimType);\n\n    if (\n      this.state.thisClaimType !== PlansTypeKeys.EXAMINATION &&\n      this.getValidation(this.state.claimFileId).old_evaluated_by !== \"system\"\n    ) {\n      await this.loadUserById(\n        this.getValidation(this.state.claimFileId).old_evaluated_by,\n        (data: UserInterface) => {\n          old_evaluator_email = data.email;\n          old_evaluator_name =\n            data.user_info.fname + \" \" + data.user_info.lname;\n        }\n      );\n    }\n    this.setLoadingForm(true);\n    try {\n      setAxiosToken();\n      const res = await axios.post<CandidateClaimInterface>(\n        `${API.CLAIMING}/user/create`,\n        {\n          claiming_on_id: this.state.claimFileId,\n          type_key: this.state.thisClaimType,\n          user: this.props.auth.user.user_id,\n          period_id: this.props.auth.application_session.session_plan_id,\n          default_claim_resaons: this.state.claimReason.id,\n          reason: this.state.claimComment,\n          // old_reason: this.getValidation(this.state.claimFileId).old_reason,\n          // old_status: this.getValidation(this.state.claimFileId).old_status,\n          // old_evaluated_by: this.getValidation(this.state.claimFileId)\n          //   .old_evaluated_by,\n          old_reason:\n            this.state.thisClaimType === PlansTypeKeys.EXAMINATION ||\n            this.state.thisClaimType === PlansTypeKeys.PLACEMENT_TRANSFER\n              ? \"System\"\n              : this.getValidation(this.state.claimFileId).old_reason,\n          old_status:\n            this.state.thisClaimType === PlansTypeKeys.EXAMINATION ||\n            this.state.thisClaimType === PlansTypeKeys.PLACEMENT_TRANSFER\n              ? \"Failed\"\n              : this.getValidation(this.state.claimFileId).old_status,\n          old_evaluated_by:\n            this.state.thisClaimType === PlansTypeKeys.EXAMINATION ||\n            this.state.thisClaimType === PlansTypeKeys.PLACEMENT_TRANSFER\n              ? \"\"\n              : this.getValidation(this.state.claimFileId).old_evaluated_by,\n          old_evaluator_email,\n          old_evaluator_name,\n          evaluator_email,\n          evaluator_name,\n          title,\n        }\n      );\n      console.log({ createClaim: res.data });\n      if (res.status === 201 || res.status === 200) {\n        this.props.createClaim(res.data);\n        this.props.PushPopupAlert({\n          title: \"Claim sent successful\",\n          theme: PopupAlertTheme.success,\n        });\n        this.cleanToClose();\n        this.props.setFormState(false);\n      }\n    } catch (error) {\n      console.error({ error });\n      this.props.PushPopupAlert({\n        title: errorToText(error),\n        theme: PopupAlertTheme.danger,\n      });\n    }\n    this.props.setFormState(false);\n    this.setLoadingForm(false);\n  };\n\n  displayClaimType = (claimType: PlansTypeKeys): string => {\n    let result: string = \"\";\n    switch (claimType) {\n      case PlansTypeKeys.APPLICATION:\n        result = \"application\";\n        break;\n      case PlansTypeKeys.DOCUMENT_VALIDATION:\n        result = \"document\";\n        break;\n      case PlansTypeKeys.EXAMINATION:\n        result = \"exam\";\n        break;\n      case PlansTypeKeys.MARKS_PUBLICATION:\n        result = \"marks publication\";\n        break;\n      case PlansTypeKeys.PLACEMENT_TRANSFER:\n        result = \"placement\";\n        break;\n      default:\n        result = \"\";\n        break;\n    }\n\n    return result;\n  };\n\n  selectClaimType = (thisClaim: string) => {\n    this.setState({\n      thisClaimType: isEmptyOrSpaces(thisClaim)\n        ? null\n        : (thisClaim as PlansTypeKeys),\n    });\n  };\n\n  generateChooseFileTitle = (thisClaimType: PlansTypeKeys | null): string => {\n    let result: string = \"\";\n\n    switch (thisClaimType) {\n      case PlansTypeKeys.APPLICATION:\n        result = `Select application you are claiming on?`;\n        break;\n      case PlansTypeKeys.DOCUMENT_VALIDATION:\n        result = `Select document you are claiming on?`;\n        break;\n      case PlansTypeKeys.EXAMINATION:\n        result = `Select exam you are claiming on?`;\n        break;\n      case PlansTypeKeys.MARKS_PUBLICATION:\n        result = `Select marks publication you are claiming on?`;\n        break;\n      case PlansTypeKeys.PLACEMENT_TRANSFER:\n        result = `Select placement you are claiming on?`;\n        break;\n      default:\n        result = \"Select file you are claiming on?\";\n        break;\n    }\n\n    return result;\n  };\n\n  render() {\n    // CHECK IF STILL LOADING DATA ===============\n    if (\n      this.props.auth.application_session !== null &&\n      (this.state.loading ||\n        (this.props.claiming.myClaims === null &&\n          !isEmptyOrSpaces(this.props.file_id) &&\n          !isEmptyOrSpaces(this.props.claim_type)))\n    ) {\n      return <Loading />;\n    }\n\n    if (this.state.thisClaim !== null) {\n      return (\n        <div>\n          <h2 className=\"text-center text-2xl font-bold p-3 text-gray-500\">\n            Claims on this {this.displayClaimType(this.props.claim_type!)}\n          </h2>\n          {this.state.thisClaim.claims.length >= 1 ? (\n            <div>\n              {this.state.thisClaim.claims.map((itm) => (\n                <div className=\"p-2 border rounded mb-2\">\n                  <div className=\"p-1 border-b\">\n                    <span className=\"text-gray-400\">Created date:</span>{\" \"}\n                    <b>{DATE(itm.createdAt)}</b>\n                  </div>\n                  <div className=\"p-1 border-b\">\n                    <span className=\"text-gray-400\">Reason:</span>{\" \"}\n                    <p>{itm.reason}</p>\n                  </div>\n                  <div className=\"p-1 border-b\">\n                    <span className=\"text-gray-400\">Evaluation comment:</span>{\" \"}\n                    <p>{itm.evaluation_comment}</p>\n                  </div>\n                  <div className=\"p-1\">\n                    <span className=\"text-gray-400 block\">decision:</span>{\" \"}\n                    <h3 className=\"text-xl font-bold\">\n                      {itm.decision_taken_status}\n                    </h3>\n                  </div>\n                </div>\n              ))}\n            </div>\n          ) : (\n            <div>No claims found!</div>\n          )}\n        </div>\n      );\n    }\n\n    return (\n      <div className=\"pb-3\">\n        {/* CLAIM FORM ============================================== */}\n        {this.state.viewThisFile.length <= 0 && (\n          <form onSubmit={(e) => this.handleSubmit(e)}>\n            <div className=\"px-6 pb-3\">\n              {this.state.alertError && (\n                <div\n                  className=\"alert-warning cursor-pointer\"\n                  onClick={() => this.setAlertError(null)}\n                >\n                  {this.state.alertError}\n                </div>\n              )}\n              <div className=\"text-base text-gray-700 sm:text-lg\">\n                {/* SELECT CLAIM TYPE ============================================== */}\n                <div className=\"flex flex-col mb-2\">\n                  <label>Claim type</label>\n                  <select\n                    className={`rounded px-2 py-2 w-full bg-white focus:outline-none ${\n                      this.state.formType === \"PROPS\" && \"cursor-not-allowed\"\n                    } ${\n                      this.state.formError &&\n                      this.state.formError.element === \"claim_type\"\n                        ? \"border-red-500\"\n                        : \"border-gray-500\"\n                    } border-2`}\n                    onChange={(e: React.ChangeEvent<HTMLSelectElement>) => {\n                      this.selectClaimType(e.target.value);\n                      this.setClaimFileId(\"\");\n                      this.state.formError &&\n                        this.state.formError.element === \"claim_type\" &&\n                        this.setFormError(null);\n                    }}\n                    value={\n                      this.state.thisClaimType ? this.state.thisClaimType : \"\"\n                    }\n                    disabled={\n                      this.state.loadingForm || this.state.formType === \"PROPS\"\n                    }\n                  >\n                    <option value=\"\">Choose claim type</option>\n                    {Object.values(PlansTypeKeys).map((item, index) => (\n                      <option value={item} key={index + item}>\n                        {capitalizeFirstLetter(\n                          item.toLocaleLowerCase().replace(/_/g, \" \")\n                        )}\n                      </option>\n                    ))}\n                  </select>\n                  {this.state.formError &&\n                    this.state.formError.element === \"claim_type\" && (\n                      <span className=\"text-red-500\">\n                        {this.state.formError.msg}\n                      </span>\n                    )}\n                </div>\n                {/* END SELECT CLAIM TYPE ============================================== */}\n\n                {/* SELECT FILE TO CLAIM ON ============================================== */}\n                <div className=\"flex flex-col mb-2\">\n                  <label>\n                    {this.generateChooseFileTitle(this.state.thisClaimType)}\n                  </label>\n                  <div\n                    className={`text-left bg-white border-2 ${\n                      this.state.formType !== \"PROPS\"\n                        ? \"border-gray-700\"\n                        : \"border-gray-400 text-gray-500\"\n                    } rounded w-full ${\n                      this.state.chooseClaimFile ? \"h-64\" : \"h-10\"\n                    } ${\n                      this.state.formError &&\n                      this.state.formError.element === \"claim_file\"\n                        ? \"border-red-500\"\n                        : \"\"\n                    } border-2 ${\n                      this.state.thisClaimType &&\n                      !this.state.chooseClaimFile &&\n                      this.state.formType !== \"PROPS\"\n                        ? \"cursor-pointer\"\n                        : !this.state.chooseClaimFile && \"cursor-not-allowed\"\n                    }`}\n                    title={\n                      !this.state.thisClaimType\n                        ? \"Choose claim type first!\"\n                        : \"\"\n                    }\n                    onClick={() => {\n                      this.state.formType === \"DEFAULT\" &&\n                        this.state.thisClaimType &&\n                        !this.state.chooseClaimFile &&\n                        this.setChooseClaimFile(true);\n                      this.state.formError &&\n                        this.state.formError.element === \"claim_file\" &&\n                        this.setFormError(null);\n                    }}\n                  >\n                    {/* DISPLAYING FILTERED SELECTING FILE ============================ */}\n                    {this.state.claimFileId.length > 0 &&\n                    !this.state.chooseClaimFile ? (\n                      <p className=\"my-1 mx-2\">\n                        {this.state.thisClaimType ===\n                          PlansTypeKeys.DOCUMENT_VALIDATION &&\n                          this.props.claiming.candidateDocuments &&\n                          ClaimGetDocTitle(\n                            this.props.documentReducer,\n                            this.getDocumentById(\n                              this.props.claiming.candidateDocuments,\n                              this.state.claimFileId\n                            )\n                          ).main}\n                        {this.state.thisClaimType ===\n                          PlansTypeKeys.APPLICATION &&\n                          this.props.claiming.candidateApplications &&\n                          this.getApplicationById(\n                            this.props.claiming.candidateApplications,\n                            this.state.claimFileId\n                          ).position.position_title}\n                      </p>\n                    ) : (\n                      !this.state.chooseClaimFile && (\n                        <p className=\"my-1 mx-2\">\n                          Select Claim{\" \"}\n                          {this.state.thisClaimType &&\n                            this.state.thisClaimType\n                              .toLocaleLowerCase()\n                              .replace(/_/g, \" \")}\n                        </p>\n                      )\n                    )}\n                    {/* END DISPLAYING FILTERED SELECTING FILE ============================ */}\n\n                    {/* LISTING OF REJECTED DOCUMENTS ============================ */}\n                    {this.state.chooseClaimFile &&\n                      this.state.thisClaimType ===\n                        PlansTypeKeys.DOCUMENT_VALIDATION &&\n                      this.props.claiming.candidateDocuments &&\n                      this.props.claiming.myClaims &&\n                      this.props.auth.application_session && (\n                        <FormDocumentList\n                          setChooseClaimFile={this.setChooseClaimFile}\n                          setClaimFileId={this.setClaimFileId}\n                          setViewThisFile={this.setViewThisFile}\n                          claimFileId={this.state.claimFileId}\n                          viewThisFile={this.state.viewThisFile}\n                          candidateDocuments={\n                            this.props.claiming.candidateDocuments\n                          }\n                          documentCategories={this.props.documentReducer}\n                          myClaims={this.props.claiming.myClaims}\n                          activeSession={this.props.auth.application_session}\n                        />\n                      )}\n                    {/* END LISTING OF REJECTED DOCUMENTS ============================ */}\n                    {/* LISTING OF REJECTED APPLICATION ============================ */}\n                    {this.state.chooseClaimFile &&\n                      this.state.thisClaimType === PlansTypeKeys.APPLICATION &&\n                      this.props.claiming.candidateApplications &&\n                      this.props.claiming.myClaims &&\n                      this.props.auth.application_session && (\n                        <FormApplicationList\n                          setChooseClaimFile={this.setChooseClaimFile}\n                          setClaimFileId={this.setClaimFileId}\n                          setViewThisFile={this.setViewThisFile}\n                          claimFileId={this.state.claimFileId}\n                          viewThisFile={this.state.viewThisFile}\n                          candidateApplications={\n                            this.props.claiming.candidateApplications\n                          }\n                          myClaims={this.props.claiming.myClaims}\n                          activeSession={this.props.auth.application_session}\n                        />\n                      )}\n                    {/* END LISTING OF REJECTED APPLICATION ============================ */}\n                  </div>\n                  {this.state.formError &&\n                    this.state.formError.element === \"claim_file\" && (\n                      <span className=\"text-red-500\">\n                        {this.state.formError.msg}\n                      </span>\n                    )}\n                </div>\n                {/* END SELECT FILE TO CLAIM ON ============================================== */}\n\n                {/* CLAIM REASONS ========================================== */}\n                <div className=\"flex flex-col mb-2\">\n                  <label>Choose reason of your claim</label>\n                  <div\n                    className={`text-left bg-white border-2 border-gray-700 rounded w-full ${\n                      this.state.chooseClaimReason ? \"h-64\" : \"h-auto\"\n                    } ${\n                      this.state.formError &&\n                      this.state.formError.element === \"claim_reason\"\n                        ? \"border-red-500\"\n                        : \"\"\n                    } border-2 ${\n                      this.props.claiming.claimReasons === null\n                        ? \"cursor-wait\"\n                        : \"cursor-pointer\"\n                    }`}\n                    title=\"Choose the reason for your claim!\"\n                    onClick={() => {\n                      !this.state.chooseClaimReason &&\n                        this.setState({ chooseClaimReason: true });\n                      this.state.formError &&\n                        this.state.formError.element === \"claim_reason\" &&\n                        this.setFormError(null);\n                    }}\n                  >\n                    {/* DISPLAYING SELECTED REASON ============================ */}\n                    {this.state.claimReason && !this.state.chooseClaimReason ? (\n                      <p className=\"my-1 mx-2\">\n                        {this.state.claimReason.reason}\n                      </p>\n                    ) : (\n                      !this.state.chooseClaimReason && (\n                        <p className=\"my-1 mx-2\">Select reason</p>\n                      )\n                    )}\n                    {/* END DISPLAYING SELECTED REASON ============================ */}\n\n                    {/* LISTING OF CLAIM REASONS ============================ */}\n                    {this.state.chooseClaimReason &&\n                      this.props.claiming.claimReasons && (\n                        <ChooseReason\n                          setChooseClaimReason={this.setChooseClaimReason}\n                          setClaimReason={this.setClaimReason}\n                          claimReason={this.state.claimReason}\n                          allClaimReasons={this.props.claiming.claimReasons}\n                        />\n                      )}\n                    {/* END LISTING OF CLAIM REASONS ============================ */}\n                  </div>\n                  {this.state.formError &&\n                    this.state.formError.element === \"claim_reason\" && (\n                      <span className=\"text-red-500\">\n                        {this.state.formError.msg}\n                      </span>\n                    )}\n                </div>\n                {/* END CLAIM REASONS ========================================== */}\n\n                {/* CLAIM COMMENT ============================================== */}\n                <div className=\"flex flex-col\">\n                  <label>Comment</label>\n                  <textarea\n                    className={`text-left input-white w-20 inline-block ${\n                      this.state.formError &&\n                      this.state.formError.element === \"claim_comment\"\n                        ? \"border-red-500\"\n                        : \"border-gray-500\"\n                    } border-2`}\n                    placeholder={`Claim comment`}\n                    style={{ resize: \"none\" }}\n                    value={this.state.claimComment}\n                    onChange={(e) => {\n                      this.setClaimComment(e.target.value);\n                      this.state.formError &&\n                        this.state.formError.element === \"claim_comment\" &&\n                        this.setFormError(null);\n                    }}\n                    rows={3}\n                    disabled={this.state.loadingForm}\n                  ></textarea>\n                  {this.state.formError &&\n                    this.state.formError.element === \"claim_comment\" && (\n                      <span className=\"text-red-500\">\n                        {this.state.formError.msg}\n                      </span>\n                    )}\n                </div>\n                {/* END CLAIM COMMENT ============================================== */}\n              </div>\n              <div className=\"pt-3 flex justify-between\">\n                <button\n                  onClick={() => this.cleanToClose()}\n                  className={`btn bg-gray-400 text-white hover:bg-gray-600 focus:outline-none ${\n                    this.state.loadingForm && \"cursor-not-allowed\"\n                  }`}\n                  type=\"button\"\n                  disabled={this.state.loadingForm}\n                >\n                  Exit\n                </button>\n                <button\n                  className={`btn bg-primary text-white hover:bg-blue-600 focus:outline-none ${\n                    this.state.loadingForm && \"cursor-wait\"\n                  }`}\n                  type=\"submit\"\n                  disabled={this.state.loadingForm}\n                >\n                  {this.state.loadingForm ? \"Loading...\" : \"Claim\"}\n                </button>\n              </div>\n            </div>\n          </form>\n        )}\n        {/* END CLAIM FORM ============================================== */}\n\n        {/* CLAIM DOCUMENT VIEW ============================================== */}\n        {this.state.viewThisFile.length > 0 &&\n          this.props.claiming.candidateDocuments &&\n          this.state.thisClaimType === PlansTypeKeys.DOCUMENT_VALIDATION && (\n            <DocFormView\n              thisDoc={this.getDocumentById(\n                this.props.claiming.candidateDocuments,\n                this.state.viewThisFile\n              )}\n              setViewThisFile={this.setViewThisFile}\n              documentCategories={this.props.documentReducer}\n              setChooseClaimFile={this.setChooseClaimFile}\n              setClaimFileId={this.setClaimFileId}\n            />\n          )}\n        {/* END CLAIM DOCUMENT VIEW ============================================== */}\n        {/* CLAIM APPLICATION VIEW ============================================== */}\n        {this.state.viewThisFile.length > 0 &&\n          this.props.claiming.candidateApplications &&\n          this.state.thisClaimType === PlansTypeKeys.APPLICATION && (\n            <ApplicationFormView\n              thisApplication={this.getApplicationById(\n                this.props.claiming.candidateApplications,\n                this.state.viewThisFile\n              )}\n              documentCategories={this.props.documentReducer}\n              setChooseClaimFile={this.setChooseClaimFile}\n              setClaimFileId={this.setClaimFileId}\n              setViewThisFile={this.setViewThisFile}\n            />\n          )}\n        {/* END CLAIM APPLICATION VIEW ============================================== */}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = ({\n  auth,\n  document,\n  claiming,\n}: StoreState): {\n  auth: Auth;\n  documentReducer: DocumentReducerInterface;\n  claiming: ClaimingReducerType;\n} => {\n  return {\n    auth: auth,\n    documentReducer: document,\n    claiming,\n  };\n};\n\nexport default connect(mapStateToProps, {\n  getMyClaims,\n  getMyAnswers,\n  getClaimReasons,\n  createClaim,\n  GetClaimingTypes,\n  getMyRejectedApplications,\n  getMyRejectedDocuments,\n  getDocumentCategory,\n  getDocumentSubCategory,\n  getDocumentFields,\n  PushPopupAlert,\n})(ClaimFormComponent);\n"],"sourceRoot":""}
{"version":3,"sources":["containers/PlacementAlgorithm/Districts/Districts.tsx","components/ExcelExport/ExcelExport.tsx","components/ExcelExport/ExportCSV.tsx","containers/PlacementAlgorithm/PlacementReport/PlacementReport.tsx","containers/PlacementAlgorithm/Positions/Positions.tsx","containers/PlacementAlgorithm/PostsRequests/PostsRequests.tsx","containers/PlacementAlgorithm/PlacementAlgorithm.tsx","actions/settings.ts"],"names":["Districts","props","state","loading","searchValue","className","placeholder","type","value","this","onChange","e","setState","target","search","districts","length","colSpan","map","item","i","onClick","selectDistrict","district_code","selected_district_code","district_name","Component","ExcelExport","TableDetails","data","index","rowFormat","tableHead","thead","ExportCSV","Heading","headerFormat","csvData","fileName","wscols","ws","utils","json_to_sheet","header","headers","skipHeader","sheet_add_json","origin","wb","Sheets","SheetNames","excelBuffer","write","bookType","Blob","FileSaver","saveAs","exportToCSV","buttonColor","buttonTitle","ExportExcelReport","placementReport","id","toString","names","fname","lname","phone_number","email","position","position_name","position_code","marks","gender","disability","in_education","requested_district","values","val","GetDistrictName","strict","district","sector","school_name","wch","Math","max","editSearchValue","selectedDistrict","selectedPosition","position_title","DATE","Date","parseInt","PlacementReport","view_all","GetPlacementReport","chooseDistrict","Loading","commaFy","Positions","positions","selectPosition","selected_position_code","PostsRequests","postRequests","_id","totalRequestedTeacher","totalPlacedTeachers","_PlacementAlgorithm","find","itm","undefined","GetDistrictsPostsRequests","a","axios","get","API","PLACEMENT","res","console","log","posts_requests","error","success","errorToText","GetDistrictPlacementReport","GetPositionPlacementReport","componentDidMount","FC_getLocations","locations","msg","auth","education_institution_id","FC_GetPositionsByInstitution","status","documentType","choosePosition","select_district_modal","Modal","backDrop","theme","Themes","default","close","backDropClose","widthSizeClass","ModalSize","large","displayClose","padding","title","body","medium","PlacementAlgorithm","connect","periods","url","AUTH","getSystemSettings","callback","dispatch","setAxiosToken","ActionTypes","GET_SYSTEM_SETTINGS","payload","code_error","disableSystemSetting","DISABLE_SYSTEM_SETTINGS","GetTaskAccess","response","task","key","permitted","GET_TASK_ACCESS","getPositions","APPLICATION","GET_POSTIONS","deletePosition","DELETE_POSITION","publishPosition","PUBLISH_POSITION","institution_id"],"mappings":"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","file":"static/js/35.73b88716.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport { DistrictLocationItem, LocationAPI } from \"../../../actions\";\nimport { search } from \"../../../utils/functions\";\n\ninterface DistrictsProps {\n  districts: LocationAPI;\n  selected_district_code: string;\n  selectDistrict: (district_code: string) => void;\n}\ninterface DistrictsState {\n  loading: boolean;\n  searchValue: string;\n}\n\nexport class Districts extends Component<DistrictsProps, DistrictsState> {\n  constructor(props: DistrictsProps) {\n    super(props);\n\n    this.state = {\n      loading: false,\n      searchValue: \"\",\n    };\n  }\n  render() {\n    return (\n      <div className=\"bg-white\">\n        <div className=\"my-3\">\n          <input\n            placeholder=\"Search by district name\"\n            type=\"text\"\n            value={this.state.searchValue}\n            onChange={(e) => this.setState({ searchValue: e.target.value })}\n            className=\"px-3 py-2 rounded border border-gray-400 w-full\"\n          />\n        </div>\n        <div>\n          <table className=\"w-full text-left text-sm\">\n            <thead>\n              <tr className=\"bg-blue-600 text-white\">\n                <th className=\"px-3 py-2\">#</th>\n                <th className=\"px-3 py-2\">Code</th>\n                <th className=\"px-3 py-2\">District name</th>\n                <th className=\"px-3 py-2\"></th>\n              </tr>\n            </thead>\n            <tbody>\n              {search(this.props.districts.districts, this.state.searchValue)\n                .length === 0 ? (\n                <tr>\n                  <td\n                    colSpan={4}\n                    className=\"py-6 text-center font-extralight text-2xl\"\n                  >\n                    No result found!\n                  </td>\n                </tr>\n              ) : (\n                (\n                  search(\n                    this.props.districts.districts,\n                    this.state.searchValue\n                  ) as DistrictLocationItem[]\n                ).map((item, i) => (\n                  <tr\n                    onClick={() =>\n                      this.props.selectDistrict(item.district_code)\n                    }\n                    className={`group ${\n                      item.district_code === this.props.selected_district_code\n                        ? \"bg-blue-100 font-bold text-blue-600\"\n                        : i % 2 !== 0\n                        ? \"bg-gray-100\"\n                        : \"bg-white\"\n                    } hover:bg-blue-100 hover:text-blue-600 cursor-pointer`}\n                  >\n                    <td className=\"px-3 py-2\">{i + 1}</td>\n                    <td className=\"px-3 py-2\">{item.district_code}</td>\n                    <td className=\"px-3 py-2\">{item.district_name}</td>\n                    <td className=\"p-1 flex flex-row items-center justify-end\">\n                      {item.district_code !==\n                        this.props.selected_district_code && (\n                        <div className=\"cursor-pointer rounded bg-blue-100 group-hover:bg-blue-600 group-hover:text-white px-2 py-1\">\n                          Choose\n                        </div>\n                      )}\n                    </td>\n                  </tr>\n                ))\n              )}\n            </tbody>\n          </table>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Districts;\n","import React from \"react\";\n\n// 3. create customers table component\ninterface TableProps {\n  thead: React.DetailedHTMLProps<\n    React.HTMLAttributes<HTMLTableSectionElement>,\n    HTMLTableSectionElement\n  >;\n  rowFormat: (item: any, index: number) => JSX.Element;\n  data: any[];\n  tableHead?: JSX.Element;\n}\nconst ExcelExport = (props: TableProps) => {\n  const TableDetails = props.data.map((item, index) =>\n    props.rowFormat(item, index)\n  );\n\n  return (\n    <div>\n      {props.tableHead}\n      <table className=\"w-full text-left mt-3 text-sm animate__animated animate__fadeIn\">\n        {props.thead}\n        <tbody>{TableDetails}</tbody>\n      </table>\n    </div>\n  );\n};\n\nexport default ExcelExport;\n","import React from \"react\";\nimport FileSaver from \"file-saver\";\nimport { ColInfo, utils, write } from \"xlsx\";\nimport { RiFileExcel2Fill } from \"react-icons/ri\";\n\ninterface FileInterfaceProps {\n  headers: string[];\n  csvData: any[];\n  fileName: string;\n  wscols: ColInfo[] | undefined;\n  headerFormat: any;\n  buttonTitle: string;\n  buttonColor: \"blue\" | \"green\";\n}\n\nconst ExportCSV = (props: FileInterfaceProps) => {\n  // ******** XLSX with object key as header *************\n  // const fileType =\n  //   \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;charset=UTF-8\";\n  // const fileExtension = \".xlsx\";\n\n  // const exportToCSV = (csvData, fileName) => {\n  //   const ws = XLSX.utils.json_to_sheet(csvData);\n  //   const wb = { Sheets: { data: ws }, SheetNames: [\"data\"] };\n  //   const excelBuffer = XLSX.write(wb, { bookType: \"xlsx\", type: \"array\" });\n  //   const data = new Blob([excelBuffer], { type: fileType });\n  //   FileSaver.saveAs(data, fileName + fileExtension);\n  // };\n\n  // ******** XLSX with new header *************\n  const fileType =\n    \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;charset=UTF-8\";\n  const fileExtension = \".xlsx\";\n\n  const Heading = [props.headerFormat];\n\n  const exportToCSV = (\n    csvData: any[],\n    fileName: string,\n    wscols: ColInfo[] | undefined\n  ) => {\n    const ws = utils.json_to_sheet(Heading, {\n      header: props.headers,\n      skipHeader: true,\n    });\n    ws[\"!cols\"] = wscols;\n    utils.sheet_add_json(ws, csvData, {\n      header: props.headers,\n      skipHeader: true,\n      origin: -1, //ok\n    });\n    const wb = { Sheets: { data: ws }, SheetNames: [\"data\"] };\n    const excelBuffer = write(wb, { bookType: \"xlsx\", type: \"array\" });\n    const data = new Blob([excelBuffer], { type: fileType });\n    FileSaver.saveAs(data, fileName + fileExtension);\n  };\n\n  return (\n    <div\n      onClick={(e) => exportToCSV(props.csvData, props.fileName, props.wscols)}\n      className={`flex flex-row items-center gap-2 w-max bg-${props.buttonColor}-600 hover:bg-${props.buttonColor}-800 text-white rounded cursor-pointer px-3 py-2 animate__animated animate__zoomIn`}\n    >\n      <div>\n        <RiFileExcel2Fill className=\"text-2xl\" />\n      </div>\n      <span>{props.buttonTitle}</span>\n    </div>\n  );\n};\n\nexport default ExportCSV;\n\n// This component is a presentational component which takes the data to download and file name as props. The exportToCSV method is invoked when the export button is clicked on line 20.\n","import React, { Component } from \"react\";\nimport { MdAssignmentTurnedIn, MdInfoOutline } from \"react-icons/md\";\nimport { RiFileExcel2Fill } from \"react-icons/ri\";\nimport { DistrictLocationItem } from \"../../../actions\";\nimport ExcelExport from \"../../../components/ExcelExport/ExcelExport\";\nimport ExportCSV from \"../../../components/ExcelExport/ExportCSV\";\nimport Loading from \"../../../components/Loading/Loading\";\nimport { PositionAPI } from \"../../../interfaces\";\nimport { commaFy, DATE, search } from \"../../../utils/functions\";\nimport { PlacementReportInterface } from \"../PlacementAlgorithm\";\n\ninterface PlacementReportProps {\n  selectedDistrict: DistrictLocationItem | null;\n  selectedPosition: PositionAPI;\n  chooseDistrict: () => void;\n  placementReport: PlacementReportInterface[] | null;\n  GetPlacementReport: (position_code: string, district_code: string) => void;\n  GetDistrictName: (district_code: string) => string;\n  view_all: boolean;\n}\ninterface PlacementReportState {\n  loading: boolean;\n  searchValue: string;\n}\n\ninterface ExportExcelReportProps {\n  placementReport: PlacementReportInterface[];\n  GetDistrictName: (district_code: string) => string;\n  selectedDistrict: DistrictLocationItem | null;\n  selectedPosition: PositionAPI;\n  searchValue: string;\n  editSearchValue: (value: string) => void;\n}\n\nconst ExportExcelReport = (props: ExportExcelReportProps): JSX.Element => {\n  const data = (\n    search(\n      props.placementReport,\n      props.searchValue\n    ) as PlacementReportInterface[]\n  ).map((item, i) => ({\n    id: (i + 1).toString(),\n    names: `${item.fname} ${item.lname}`,\n    phone_number: item.phone_number,\n    email: item.email,\n    position: `${item.position_name}(${item.position_code})`,\n    marks: `${item.marks}`,\n    gender: item.gender,\n    disability: item.disability === true ? \"Yes\" : \"No\",\n    in_education: item.in_education === true ? \"Yes\" : \"No\",\n    requested_district: `${\n      item.requested_district.values.length === 0\n        ? \"All districts\"\n        : item.requested_district.values.map(\n            (val) =>\n              ` ${props.GetDistrictName(val.toString())}${\n                item.requested_district.values.length > 0 &&\n                item.requested_district.values[\n                  item.requested_district.values.length - 1\n                ] === val\n                  ? item.requested_district.strict === false\n                    ? \" and other districts\"\n                    : \"\"\n                  : \"\"\n              }`\n          )\n    }`,\n    district: props.GetDistrictName(item.district_code.toString()),\n    sector: item.sector,\n    school_name: item.school_name,\n  }));\n\n  const wscols = [\n    { wch: Math.max(...data.map((item) => item.id.length)) },\n    { wch: Math.max(...data.map((item) => item.names.length)) },\n    { wch: Math.max(...data.map((item) => item.phone_number.length)) },\n    { wch: Math.max(...data.map((item) => item.email.length)) },\n    { wch: Math.max(...data.map((item) => item.position.length)) },\n    { wch: Math.max(...data.map((item) => item.marks.length)) },\n    { wch: Math.max(...data.map((item) => item.gender.length)) },\n    { wch: Math.max(...data.map((item) => item.disability.length)) },\n    { wch: Math.max(...data.map((item) => item.in_education.length)) },\n    { wch: Math.max(...data.map((item) => item.requested_district.length)) },\n    { wch: Math.max(...data.map((item) => item.district.length)) },\n    { wch: Math.max(...data.map((item) => item.sector.length)) },\n    { wch: Math.max(...data.map((item) => item.school_name.length)) },\n  ];\n\n  const headers = [\n    { label: \"#\", key: \"id\" },\n    { label: \"Names\", key: \"Names\" },\n    { label: \"Phone number\", key: \"Phone_number\" },\n    { label: \"Email\", key: \"Email\" },\n    { label: \"Position\", key: \"Position\" },\n    { label: \"Marks\", key: \"Marks\" },\n    { label: \"Gender\", key: \"Gender\" },\n    { label: \"Disability\", key: \"Disability\" },\n    { label: \"In Education\", key: \"In_Education\" },\n    { label: \"Preferences\", key: \"Preferences\" },\n    { label: \"Placed District\", key: \"Placed_District\" },\n    { label: \"Placed Sector\", key: \"Placed_Sector\" },\n    { label: \"Placed School\", key: \"Placed_School\" },\n  ];\n\n  return (\n    <div>\n      {/* Filter */}\n      <div className=\"mt-2 flex flex-row items-center gap-2 w-full\">\n        <input\n          placeholder=\"Search by teacher name or school name\"\n          type=\"text\"\n          value={props.searchValue}\n          onChange={(e) => props.editSearchValue(e.target.value)}\n          className=\"px-3 py-2 rounded border border-gray-400 w-full\"\n        />\n        <div>\n          <ExportCSV\n            csvData={data}\n            fileName={`${props.selectedDistrict?.district_name}(${\n              props.selectedDistrict?.district_code\n            }) - ${props.selectedPosition.position_title}(${\n              props.selectedPosition.position_code\n            }) TRS Placement Report on ${DATE(new Date().toString())}`}\n            wscols={wscols}\n            headers={[\n              \"id\",\n              \"names\",\n              \"phone_number\",\n              \"email\",\n              \"position\",\n              \"marks\",\n              \"gender\",\n              \"disability\",\n              \"in_education\",\n              \"requested_district\",\n              \"district\",\n              \"sector\",\n              \"school_name\",\n            ]}\n            headerFormat={{\n              id: \"#\",\n              names: \"Names\",\n              phone_number: \"Phone number\",\n              email: \"Email\",\n              position: \"Position\",\n              marks: \"Marks\",\n              gender: \"Gender\",\n              disability: \"Disability\",\n              in_education: \"In Education\",\n              requested_district: \"Preferences\",\n              district: \"Placed District\",\n              sector: \"Placed Sector\",\n              school_name: \"Placed School\",\n            }}\n            buttonTitle={\"Export Excel\"}\n            buttonColor={\"blue\"}\n          />\n        </div>\n      </div>\n      <div className=\"w-full overflow-x-auto\">\n        {/* TABLE DATA */}\n        <ExcelExport\n          thead={\n            <thead className=\"bg-blue-50 text-sm font-bold\">\n              <tr>\n                <th className=\"px-2 py-2 border border-blue-300\">#</th>\n                <th className=\"px-2 py-2 border border-blue-300\">Names</th>\n                <th className=\"px-2 py-2 border border-blue-300\">\n                  Phone number\n                </th>\n                <th className=\"px-2 py-2 border border-blue-300\">Email</th>\n                <th className=\"px-2 py-2 border border-blue-300\">Position</th>\n                <th className=\"px-2 py-2 border border-blue-300\">Marks</th>\n                <th className=\"px-2 py-2 border border-blue-300\">Gender</th>\n                <th className=\"px-2 py-2 border border-blue-300\">Disability</th>\n                <th className=\"px-2 py-2 border border-blue-300\">\n                  In Education\n                </th>\n                <th className=\"px-2 py-2 border border-blue-300\">\n                  Preferences\n                </th>\n                <th className=\"px-2 py-2 border border-blue-300\">\n                  Placed District\n                </th>\n                <th className=\"px-2 py-2 border border-blue-300\">\n                  Placed Sector\n                </th>\n                <th className=\"px-2 py-2 border border-blue-300\">\n                  Placed School\n                </th>\n              </tr>\n            </thead>\n          }\n          rowFormat={(item: {\n            id: string;\n            names: string;\n            phone_number: string;\n            email: string;\n            position: string;\n            marks: string;\n            gender: string;\n            disability: string;\n            in_education: string;\n            requested_district: string;\n            district: string;\n            sector: string;\n            school_name: string;\n          }): JSX.Element => {\n            return (\n              <tr\n                key={item.id}\n                className={`${\n                  parseInt(item.id) % 2 === 0 ? \"bg-gray-100\" : \"\"\n                } hover:bg-blue-100 hover:text-blue-700 group`}\n              >\n                <td className=\"px-2 py-2 border border-gray-300 group-hover:border-blue-400\">\n                  {item.id}\n                </td>\n                <td className=\"px-2 py-2 border border-gray-300 group-hover:border-blue-400\">\n                  <div className=\"w-48\">{item.names}</div>\n                </td>\n                <td className=\"px-2 py-2 border border-gray-300 group-hover:border-blue-400\">\n                  <div className=\"w-24\">{item.phone_number}</div>\n                </td>\n                <td className=\"px-2 py-2 border border-gray-300 group-hover:border-blue-400\">\n                  {item.email}\n                </td>\n                <td className=\"px-2 py-2 border border-gray-300 group-hover:border-blue-400\">\n                  {item.position})\n                </td>\n                <td className=\"px-2 py-2 border border-gray-300 group-hover:border-blue-400\">\n                  {item.marks}\n                </td>\n                <td className=\"px-2 py-2 border border-gray-300 group-hover:border-blue-400\">\n                  {item.gender}\n                </td>\n                <td className=\"px-2 py-2 border border-gray-300 group-hover:border-blue-400\">\n                  {item.disability}\n                </td>\n                <td className=\"px-2 py-2 border border-gray-300 group-hover:border-blue-400\">\n                  {item.in_education}\n                </td>\n                <td className=\"px-2 py-2 border border-gray-300 group-hover:border-blue-400\">\n                  <div className=\"w-48\">{item.requested_district}</div>\n                </td>\n                <td className=\"px-2 py-2 border border-gray-300 group-hover:border-blue-400\">\n                  {item.district}\n                </td>\n                <td className=\"px-2 py-2 border border-gray-300 group-hover:border-blue-400\">\n                  {item.sector}\n                </td>\n                <td className=\"px-2 py-2 border border-gray-300 group-hover:border-blue-400\">\n                  <div className=\"truncate\">{item.school_name}</div>\n                </td>\n              </tr>\n            );\n          }}\n          data={data}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport class PlacementReport extends Component<\n  PlacementReportProps,\n  PlacementReportState\n> {\n  constructor(props: PlacementReportProps) {\n    super(props);\n\n    this.state = {\n      loading: false,\n      searchValue: \"\",\n    };\n  }\n  render() {\n    if (this.props.selectedDistrict === null) {\n      if (this.props.view_all === true && this.props.placementReport === null) {\n        return (\n          <div className=\"bg-white rounded p-4 flex flex-col items-center justify-center gap-3\">\n            <div>\n              <MdInfoOutline className=\"text-7xl\" />\n            </div>\n\n            <div className=\"text-center text-xl font-light\">\n              No report found, please click the button to reload data\n            </div>\n            <div className=\"mt-4 flex flex-row items-center justify-center gap-3 w-full\">\n              {this.props.selectedPosition.position_code === null ? (\n                \"Position not selected!\"\n              ) : (\n                <div\n                  onClick={() =>\n                    this.props.GetPlacementReport(\n                      this.props.selectedPosition.position_code!,\n                      \"\"\n                    )\n                  } //Replace here\n                  className=\"btn bg-blue-500 text-white cursor-pointer hover:bg-blue-700\"\n                >\n                  Load position report\n                </div>\n              )}\n            </div>\n          </div>\n        );\n      }\n      if (this.props.view_all === false) {\n        return (\n          <div className=\"bg-white rounded p-4 flex flex-col items-center justify-center gap-3\">\n            <div>\n              <MdInfoOutline className=\"text-7xl\" />\n            </div>\n\n            <div className=\"text-center text-xl font-light\">\n              No district select, please you are required to choose district\n            </div>\n            <div className=\"mt-4 flex flex-row items-center justify-center gap-3 w-full\">\n              <div\n                onClick={() => this.props.chooseDistrict()}\n                className=\"btn bg-blue-500 text-white cursor-pointer hover:bg-blue-700\"\n              >\n                Choose a district\n              </div>\n              {this.props.selectedPosition.position_code !== null && (\n                <div\n                  onClick={() =>\n                    this.props.GetPlacementReport(\n                      this.props.selectedPosition.position_code!,\n                      \"\"\n                    )\n                  }\n                  className=\"btn bg-blue-500 text-white cursor-pointer hover:bg-blue-700\"\n                >\n                  Report by position\n                </div>\n              )}\n            </div>\n          </div>\n        );\n      }\n    }\n    if (this.props.placementReport === null) {\n      return (\n        <div className=\"bg-white rounded p-4 pt-10 mt-5\">\n          <Loading />\n          <div className=\"ml-4 -mt-5 text-xl font-light\">\n            Loading, please wait...\n          </div>\n        </div>\n      );\n    }\n    return (\n      <div className=\"bg-white p-3\">\n        <div className=\"flex flex-row items-center gap-4 justify-between\">\n          <div className=\"\">\n            <div className=\"flex flex-row items-center gap-2 text-black\">\n              <div>\n                <MdAssignmentTurnedIn className=\"text-5xl animate__animated animate__zoomIn\" />\n              </div>\n              <div>\n                <div className=\"text-2xl font-bold flex flex-row items-center gap-3\">\n                  <span>Placement report</span>\n                  <div className=\"rounded-full bg-blue-600 text-white font-extrabold text-xl px-2\">\n                    {commaFy(this.props.placementReport.length)} teachers\n                  </div>\n                </div>\n                <div className=\"text-sm font-light text-black\">\n                  This the placement report, it is generated on the district\n                  level. choose a district where you want the report\n                </div>\n                <div className=\"flex flex-row items-center gap-2 mt-1\">\n                  <div className=\"bg-blue-100 rounded-full px-2 text-sm text-blue-800\">\n                    Position: {this.props.selectedPosition.position_title}\n                  </div>\n                  {this.props.selectedDistrict !== null && (\n                    <div className=\"bg-blue-100 rounded-full px-2 text-sm text-blue-800\">\n                      District: {this.props.selectedDistrict?.district_name}\n                    </div>\n                  )}\n                </div>\n              </div>\n            </div>\n          </div>\n          <div>\n            <div className=\"font-normal text-sm\">\n              Position: {this.props.selectedPosition.position_title}\n            </div>\n            <div className=\"font-normal text-sm\">\n              District: {this.props.selectedDistrict?.district_name}\n            </div>\n            <div\n              className=\"px-2 py-1 text-blue-700 border-2 border-blue-600 rounded bg-blue-100 hover:bg-blue-600 hover:text-white w-max cursor-pointer\"\n              onClick={() => this.props.chooseDistrict()}\n            >\n              {this.props.selectedDistrict === null\n                ? \"Choose\"\n                : `${this.props.selectedDistrict.district_name} - Change`}{\" \"}\n              district\n            </div>\n          </div>\n        </div>\n        {/* table data */}\n        {\n          <ExportExcelReport\n            placementReport={this.props.placementReport}\n            GetDistrictName={this.props.GetDistrictName}\n            selectedDistrict={this.props.selectedDistrict}\n            selectedPosition={this.props.selectedPosition}\n            searchValue={this.state.searchValue}\n            editSearchValue={(value: string) => {\n              this.setState({ searchValue: value });\n            }}\n          />\n        }\n      </div>\n    );\n  }\n}\n\nexport default PlacementReport;\n","import React, { Component } from \"react\";\nimport { PositionAPI } from \"../../../interfaces\";\nimport { search } from \"../../../utils/functions\";\n\ninterface PositionsProps {\n  positions: PositionAPI[];\n  selectPosition: (position: PositionAPI) => void;\n  selected_position_code: string;\n}\ninterface PositionsState {\n  loading: boolean;\n  searchValue: string;\n}\n\nexport class Positions extends Component<PositionsProps, PositionsState> {\n  constructor(props: PositionsProps) {\n    super(props);\n\n    this.state = {\n      loading: false,\n      searchValue: \"\",\n    };\n  }\n  render() {\n    return (\n      <div className=\"-mt-5\">\n        <div className=\"flex flex-col\">\n          <span>Search by position name</span>\n          <input\n            type=\"text\"\n            value={this.state.searchValue}\n            onChange={(e) => {\n              this.setState({ searchValue: e.target.value });\n            }}\n            className=\"px-3 py-2 rounded border-2 border-blue-600 w-full\"\n          />\n        </div>\n        <div>\n          <table className=\"w-full text-left mt-2\">\n            <thead className=\"bg-blue-50\">\n              <tr>\n                <th className=\"px-3 py-2\">#</th>\n                <th className=\"px-3 py-2\">Code</th>\n                <th className=\"px-3 py-2\">Name</th>\n                <th className=\"px-3 py-2\"></th>\n              </tr>\n            </thead>\n            <tbody>\n              {search(this.props.positions, this.state.searchValue).length ===\n              0 ? (\n                <tr>\n                  <td\n                    colSpan={4}\n                    className=\"text-xl font-light text-center py-5\"\n                  >\n                    No result found!\n                  </td>\n                </tr>\n              ) : (\n                (\n                  search(\n                    this.props.positions,\n                    this.state.searchValue\n                  ) as PositionAPI[]\n                ).map((item, i) => (\n                  <tr\n                    key={i + 1}\n                    onClick={() => this.props.selectPosition(item)}\n                    className={`${\n                      this.props.selected_position_code === item.position_code\n                        ? \"bg-blue-200 font-bold text-blue-700\"\n                        : i % 2 !== 0\n                        ? \"bg-gray-100\"\n                        : \"bg-white\"\n                    } group hover:text-blue-800 hover:bg-blue-100 cursor-pointer`}\n                  >\n                    <td className=\"px-3 py-2\">{i + 1}</td>\n                    <td className=\"px-3 py-2\">{item.position_code}</td>\n                    <td className=\"px-3 py-2\">{item.position_title}</td>\n                    <td className=\"flex flex-row items-center justify-end py-2 px-1\">\n                      {this.props.selected_position_code !==\n                        item.position_code && (\n                        <div className=\"rounded px-2 py-1 text-base font-light bg-blue-100 text-black group-hover:bg-blue-600 group-hover:text-white cursor-pointer\">\n                          Choose\n                        </div>\n                      )}\n                    </td>\n                  </tr>\n                ))\n              )}\n              <tr></tr>\n            </tbody>\n          </table>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Positions;\n","import React, { Component } from \"react\";\nimport { commaFy } from \"../../../utils/functions\";\nimport { DistrictPostsRequests } from \"../PlacementAlgorithm\";\n\ninterface PostsRequestsProps {\n  postRequests: DistrictPostsRequests[];\n  GetDistrictName: (district_code: string) => string;\n}\ninterface PostsRequestsState {\n  searchValue: string;\n  loading: boolean;\n}\nexport class PostsRequests extends Component<\n  PostsRequestsProps,\n  PostsRequestsState\n> {\n  constructor(props: PostsRequestsProps) {\n    super(props);\n\n    this.state = {\n      loading: false,\n      searchValue: \"\",\n    };\n  }\n  render() {\n    return (\n      <div className=\"p-0 border border-white text-left bg-white\">\n        <div className=\"my-3 mx-3\">\n          <input\n            type=\"text\"\n            placeholder=\"Search by district name\"\n            className=\"px-3 py-2 rounded border border-gray-400 w-full\"\n          />\n        </div>\n        <table className=\"w-full\">\n          <thead>\n            <tr className=\"bg-blue-50\">\n              <th className=\"px-3 py-2\">#</th>\n              <th className=\"px-3 py-2\">District code</th>\n              <th className=\"px-3 py-2\">District name</th>\n              <th className=\"px-3 py-2\">Total requests</th>\n              <th className=\"px-3 py-2\">Total placed</th>\n              <th className=\"px-3 py-2\"></th>\n            </tr>\n          </thead>\n          <tbody>\n            {this.props.postRequests.length === 0 ? (\n              <tr>\n                <td\n                  colSpan={6}\n                  className=\"py-6 text-center text-2xl font-extralight\"\n                >\n                  No result found!\n                </td>\n              </tr>\n            ) : (\n              this.props.postRequests.map((item, i) => (\n                <tr className={`${i % 2 !== 0 ? \"bg-gray-100\" : \"bg-white\"}`}>\n                  <td className=\"px-3 py-1\">{i + 1}</td>\n                  <td className=\"px-3 py-1\">{item._id}</td>\n                  <td className=\"px-3 py-1\">\n                    {this.props.GetDistrictName(item._id)}\n                  </td>\n                  <td className=\"px-3 py-1\">\n                    {commaFy(item.totalRequestedTeacher)}\n                  </td>\n                  <td className=\"px-3 py-1\">\n                    {commaFy(item.totalPlacedTeachers)}\n                  </td>\n                  <td className=\"px-1 py-1 flex flex-row items-center justify-end\">\n                    <div className=\"bg-blue-100 px-2 py-1 text-center w-max\">\n                      Action\n                    </div>\n                  </td>\n                </tr>\n              ))\n            )}\n          </tbody>\n        </table>\n      </div>\n    );\n  }\n}\n","import axios from \"axios\";\nimport React, { Component, Fragment } from \"react\";\nimport { BiErrorAlt } from \"react-icons/bi\";\nimport {\n  MdChangeCircle,\n  MdCheckCircle,\n  MdInfoOutline,\n  MdSelectAll,\n  MdWarning,\n} from \"react-icons/md\";\nimport { connect } from \"react-redux\";\nimport {\n  applicationPeriodsStoreInterface,\n  Auth,\n  positionsStoreInterface,\n  FC_getLocations,\n  LocationAPI,\n} from \"../../actions\";\nimport { FC_GetPositionsByInstitution } from \"../../actions/settings\";\nimport Loading from \"../../components/Loading/Loading\";\nimport Modal, { ModalSize, Themes } from \"../../components/Modal/Modal\";\nimport { PositionAPI } from \"../../interfaces\";\nimport { StoreState } from \"../../reducers\";\nimport { API } from \"../../utils/api\";\nimport { errorToText } from \"../../utils/functions\";\nimport Districts from \"./Districts/Districts\";\nimport PlacementReport from \"./PlacementReport/PlacementReport\";\nimport { Positions } from \"./Positions/Positions\";\nimport { PostsRequests } from \"./PostsRequests/PostsRequests\";\n\nexport interface PlacementReportInterface {\n  _id: string;\n  requested_district: {\n    values: number[];\n    strict: boolean;\n  };\n  status: number;\n  request_id: string;\n  district_code: number;\n  district: string;\n  sector_code: string;\n  sector: string;\n  school_code: string;\n  school_name: string;\n  position_code: string;\n  position_name: string;\n  user_id: string;\n  email: string;\n  phone_number: string;\n  fname: string;\n  lname: string;\n  gender: string;\n  session_id: string;\n  marks: number;\n  in_education: boolean;\n  disability: boolean;\n  createdAt: string;\n  updatedAt: string;\n}\n\nexport interface SchoolPostsRequests {\n  _id: string;\n  district_code: string;\n  district: string;\n  sector_code: string;\n  sector: string;\n  school_code: string;\n  school_name: string;\n  position_code: string;\n  position_name: string;\n  requested_teacher: number;\n  placed_teachers: number;\n  academic_year_id: string;\n}\n\nexport interface DistrictPostsRequests {\n  _id: string;\n  totalRequestedTeacher: number;\n  totalPlacedTeachers: number;\n}\n\ninterface PlacementAlgorithmProps {\n  auth: Auth;\n  periods: applicationPeriodsStoreInterface;\n  FC_GetPositionsByInstitution: (\n    institution_id: string,\n    callback: (status: boolean, msg: string, data?: PositionAPI[]) => void\n  ) => void;\n}\ninterface PlacementAlgorithmState {\n  loading: boolean;\n  documentType: \"PostRequests\" | \"PlacementReport\" | \"GeneralReport\";\n  posts_requests: DistrictPostsRequests[] | null;\n  error: string;\n  success: string;\n  selectedPosition: PositionAPI | null;\n  choosePosition: boolean;\n  placementReport: PlacementReportInterface[] | null;\n  districts: LocationAPI | null;\n  selected_district_code: string;\n  select_district_modal: boolean;\n  positions: PositionAPI[] | null;\n  view_all: boolean;\n}\n\nclass _PlacementAlgorithm extends Component<\n  PlacementAlgorithmProps,\n  PlacementAlgorithmState\n> {\n  constructor(props: PlacementAlgorithmProps) {\n    super(props);\n\n    this.state = {\n      loading: false,\n      documentType: \"PlacementReport\",\n      posts_requests: null,\n      error: \"\",\n      success: \"\",\n      selectedPosition: null,\n      choosePosition: false,\n      placementReport: null,\n      districts: null,\n      selected_district_code: \"\",\n      select_district_modal: false,\n      positions: null,\n      view_all: false,\n    };\n  }\n\n  GetDistrictName = (district_code: string): string => {\n    let district = this.state.districts?.districts.find(\n      (itm) => itm.district_code === district_code\n    );\n    if (district === undefined) {\n      return \"\";\n    } else {\n      return district.district_name;\n    }\n  };\n\n  GetDistrictsPostsRequests = async (position_code: string) => {\n    this.setState({ loading: true });\n    try {\n      const res = await axios.get<DistrictPostsRequests[]>(\n        `${API.PLACEMENT}/schoolrequest/district/position/summary/${position_code}`\n      );\n      if (res) {\n        console.log(\"Res: \", res.data);\n        this.setState({\n          loading: false,\n          posts_requests: res.data,\n          error: \"\",\n          success: \"\",\n        });\n      }\n    } catch (error: any) {\n      this.setState({ error: errorToText(error), loading: false });\n      console.log(\"Error: \", { ...error });\n    }\n  };\n\n  GetDistrictPlacementReport = async (\n    position_code: string,\n    district_code: string\n  ) => {\n    this.setState({ loading: true });\n    try {\n      const res = await axios.get<PlacementReportInterface[]>(\n        `${API.PLACEMENT}/placedcandidate/district/position/${district_code}/${position_code}`\n      );\n      if (res) {\n        console.log(\"Res: \", res.data);\n        this.setState({\n          loading: false,\n          placementReport: res.data,\n          error: \"\",\n          success: \"\",\n        });\n      }\n    } catch (error: any) {\n      this.setState({ error: errorToText(error), loading: false });\n      console.log(\"Error: \", { ...error });\n    }\n  };\n\n  GetPositionPlacementReport = async (position_code: string) => {\n    this.setState({ loading: true });\n    try {\n      const res = await axios.get<PlacementReportInterface[]>(\n        `${API.PLACEMENT}/placedcandidate/position/${position_code}`\n      );\n      if (res) {\n        console.log(\"Res: \", res.data);\n        this.setState({\n          loading: false,\n          placementReport: res.data,\n          error: \"\",\n          success: \"\",\n        });\n      }\n    } catch (error: any) {\n      this.setState({ error: errorToText(error), loading: false });\n      console.log(\"Error: \", { ...error });\n    }\n  };\n\n  componentDidMount = () => {\n    // Load districts\n    if (this.state.districts === null) {\n      this.setState({ loading: true });\n      FC_getLocations(\n        (error: boolean, locations: LocationAPI | null, msg: string) => {\n          if (locations !== null) {\n            this.setState({\n              districts: locations,\n              loading: false,\n              error: \"\",\n            });\n          } else {\n            if (error === false) {\n              this.setState({ error: msg, loading: false, districts: null });\n            }\n          }\n        }\n      );\n    }\n    // Load positions\n    if (\n      this.state.positions === null &&\n      this.props.auth.education_institution_id !== null\n    ) {\n      this.setState({ loading: true });\n      this.props.FC_GetPositionsByInstitution(\n        this.props.auth.education_institution_id,\n        (status: boolean, msg: string, data?: PositionAPI[]) => {\n          this.setState({ loading: status });\n          if (status === false && data !== undefined) {\n            this.setState({ positions: data, loading: false });\n          }\n          if (status === false && msg !== \"\") {\n            this.setState({ error: msg, loading: false });\n          }\n        }\n      );\n    }\n  };\n\n  render() {\n    if (this.state.loading === true) {\n      return (\n        <div className=\"bg-white rounded p-4 pt-10 mt-5\">\n          <Loading />\n          <div className=\"ml-4 -mt-5 text-xl font-light\">\n            Loading, please wait...\n          </div>\n        </div>\n      );\n    }\n    return (\n      <Fragment>\n        {this.state.selectedPosition === null ? (\n          <div className=\"bg-white rounded p-4 mt-5 flex flex-col items-center justify-center gap-3\">\n            <div>\n              <MdInfoOutline className=\"text-7xl\" />\n            </div>\n\n            <div className=\"text-center text-xl font-light\">\n              No position select, please you are required to choose position\n            </div>\n            <div className=\"mt-4 flex flex-row items-center justify-center gap-3 w-full\">\n              <div\n                onClick={() => this.setState({ choosePosition: true })}\n                className=\"btn bg-blue-500 text-white cursor-pointer hover:bg-blue-700\"\n              >\n                Choose a position\n              </div>\n            </div>\n          </div>\n        ) : (\n          <div className=\"pr-2 -ml-2 lg:ml-0\">\n            <div className=\"flex flex-row items-baseline justify-between w-full mt-3\">\n              <div className=\"flex flex-col\">\n                <div className=\"font-extrabold text-3xl\">\n                  Candidate Placements\n                </div>\n                <div className=\"text-base flex flex-row items-center bg-white mt-3 rounded-t-md overflow-hidden\">\n                  <div\n                    onClick={() => {\n                      if (this.state.documentType !== \"PostRequests\") {\n                        if (\n                          this.state.posts_requests === null &&\n                          this.state.selectedPosition !== null\n                        ) {\n                          // Request\n                          this.GetDistrictsPostsRequests(\n                            this.state.selectedPosition.position_code!\n                          );\n                        }\n                        this.setState({ documentType: \"PostRequests\" });\n                      }\n                    }}\n                    className={`border-b-4 ${\n                      this.state.documentType === \"PostRequests\"\n                        ? \"border-blue-600 font-bold text-blue-600 cursor-not-allowed\"\n                        : \"border-white cursor-pointer hover:border-blue-500 hover:text-blue-600\"\n                    } text-center w-max px-4 py-2 pt-3`}\n                  >\n                    Posts Requests\n                  </div>\n                  <div\n                    onClick={() => {\n                      if (this.state.documentType !== \"PlacementReport\") {\n                        this.setState({ documentType: \"PlacementReport\" });\n                        if (\n                          this.state.placementReport === null &&\n                          this.state.selectedPosition !== null &&\n                          this.state.selectedPosition.position_code !== null\n                        ) {\n                          if (this.state.view_all === false) {\n                            this.GetDistrictPlacementReport(\n                              this.state.selectedPosition.position_code!,\n                              this.state.selected_district_code\n                            );\n                          } else {\n                            this.GetPositionPlacementReport(\n                              this.state.selectedPosition.position_code!\n                            );\n                          }\n                        }\n                      }\n                    }}\n                    className={`border-b-4 ${\n                      this.state.documentType === \"PlacementReport\"\n                        ? \"border-blue-600 font-bold text-blue-600 cursor-not-allowed\"\n                        : \"border-white cursor-pointer hover:border-blue-500 hover:text-blue-600\"\n                    } text-center w-max px-4 py-2 pt-3`}\n                  >\n                    Placement Report\n                  </div>\n                  <div\n                    onClick={() => {\n                      if (this.state.documentType !== \"GeneralReport\") {\n                        this.setState({ documentType: \"GeneralReport\" });\n                      }\n                    }}\n                    className={`border-b-4 ${\n                      this.state.documentType === \"GeneralReport\"\n                        ? \"border-blue-600 font-bold text-blue-600 cursor-not-allowed\"\n                        : \"border-white cursor-pointer hover:border-blue-500 hover:text-blue-600\"\n                    } text-center w-max px-4 py-2 pt-3`}\n                  >\n                    General Report\n                  </div>\n                </div>\n              </div>\n              <div className=\"flex flex-row items-center gap-2\">\n                {this.state.view_all === false ? (\n                  <div\n                    onClick={() => {\n                      if (\n                        this.state.selectedPosition !== null &&\n                        this.state.selectedPosition.position_code !== null\n                      ) {\n                        this.setState({\n                          view_all: true,\n                          selected_district_code: \"\",\n                        });\n                        this.GetPositionPlacementReport(\n                          this.state.selectedPosition.position_code\n                        );\n                      }\n                    }}\n                    className={`px-3 py-2 flex flex-row items-center gap-2 \n                      bg-blue-500 animate__animated animate__zoomIn\n                  } rounded-md cursor-pointer hover:bg-blue-700 text-white h-full`}\n                  >\n                    <div>\n                      <MdSelectAll className=\"text-3xl\" />\n                    </div>\n                    <span>View all</span>\n                  </div>\n                ) : (\n                  <div\n                    onClick={() => {\n                      if (\n                        this.state.selectedPosition !== null &&\n                        this.state.selectedPosition.position_code !== null\n                      ) {\n                        this.setState({\n                          placementReport: null,\n                          view_all: false,\n                          selected_district_code: \"\",\n                        });\n                      }\n                    }}\n                    className={`px-3 py-2 flex flex-row items-center gap-2 \n                    bg-gray-500 hover:bg-gray-600 animate__animated animate__zoomIn\n                } rounded-md cursor-pointer hover:bg-blue-700 text-white h-full`}\n                  >\n                    <div>\n                      <MdSelectAll className=\"text-3xl\" />\n                    </div>\n                    <span>Hide all</span>\n                  </div>\n                )}\n                <div\n                  onClick={() => this.setState({ choosePosition: true })}\n                  className=\"bg-blue-100 text-blue-800 px-3 pr-2 py-1 rounded border-2 border-white hover:border-blue-600 flex flex-row items-center gap-3 cursor-pointer group\"\n                >\n                  <div className=\"flex flex-col\">\n                    <div className=\"font-light text-lg\">Selected position</div>\n                    <div className=\"text-light font-extrabold -mt-1\">\n                      {this.state.selectedPosition.position_title}\n                    </div>\n                  </div>\n                  <div>\n                    <MdChangeCircle className={`text-4xl`} />\n                  </div>\n                </div>\n              </div>\n            </div>\n            {this.state.error !== \"\" && (\n              <div className=\"flex flex-row items-center gap-3 rounded px-3 py-2 w-full cursor-pointer my-2 bg-white border border-red-600\">\n                <div>\n                  <BiErrorAlt className=\"text-3xl text-red-600\" />\n                </div>\n                <div className=\"flex flex-col\">\n                  <span className=\"font-bold text-lg text-red-600\">\n                    {this.state.error}\n                  </span>\n                </div>\n              </div>\n            )}\n            {this.state.success !== \"\" && (\n              <div className=\"flex flex-row items-center gap-3 rounded-lg px-3 py-2 w-full cursor-pointer my-2 bg-white border border-green-600\">\n                <div>\n                  <MdCheckCircle className=\"text-3xl text-green-600\" />\n                </div>\n                <div className=\"flex flex-col\">\n                  <span className=\"font-bold text-lg text-green-600\">\n                    {this.state.success}\n                  </span>\n                </div>\n              </div>\n            )}\n            {this.state.documentType === \"PostRequests\" &&\n              this.state.posts_requests !== null && (\n                <PostsRequests\n                  postRequests={this.state.posts_requests}\n                  GetDistrictName={this.GetDistrictName}\n                />\n              )}\n            {this.state.documentType === \"PlacementReport\" && (\n              <PlacementReport\n                selectedDistrict={\n                  this.state.districts === null\n                    ? null\n                    : this.state.districts.districts.find(\n                        (itm) =>\n                          itm.district_code ===\n                          this.state.selected_district_code\n                      ) === undefined\n                    ? null\n                    : this.state.districts.districts.find(\n                        (itm) =>\n                          itm.district_code ===\n                          this.state.selected_district_code\n                      )!\n                }\n                placementReport={this.state.placementReport}\n                selectedPosition={this.state.selectedPosition}\n                chooseDistrict={() =>\n                  this.setState({ select_district_modal: true })\n                }\n                GetPlacementReport={(\n                  position_code: string,\n                  district_code: string\n                ) => {\n                  if (this.state.view_all === false && district_code !== \"\") {\n                    this.GetDistrictPlacementReport(\n                      position_code,\n                      district_code\n                    );\n                  } else {\n                    this.GetPositionPlacementReport(position_code);\n                    this.setState({ view_all: true });\n                  }\n                }}\n                GetDistrictName={this.GetDistrictName}\n                view_all={this.state.view_all}\n              />\n            )}\n          </div>\n        )}\n        {this.state.choosePosition === true && this.state.positions !== null && (\n          <Modal\n            backDrop={true}\n            theme={Themes.default}\n            close={() => {\n              this.setState({ choosePosition: false });\n            }}\n            backDropClose={true}\n            widthSizeClass={ModalSize.large}\n            displayClose={true}\n            padding={{\n              title: true,\n              body: true,\n            }}\n            title={<div className=\"text-2xl font-bold\">Choose position</div>}\n          >\n            <Positions\n              selectPosition={(position: PositionAPI) => {\n                if (position.position_code !== null) {\n                  this.state.documentType === \"PostRequests\" &&\n                    this.GetDistrictsPostsRequests(position.position_code);\n                  if (this.state.view_all === true) {\n                    this.state.documentType === \"PlacementReport\" &&\n                      this.state.selected_district_code !== \"\" &&\n                      this.GetDistrictPlacementReport(\n                        position.position_code,\n                        this.state.selected_district_code\n                      );\n                    this.setState({\n                      view_all: false,\n                      selected_district_code: \"\",\n                    });\n                  } else {\n                    if (\n                      this.state.documentType === \"PlacementReport\" &&\n                      this.state.selected_district_code !== \"\"\n                    ) {\n                      this.setState({\n                        view_all: true,\n                        selected_district_code: \"\",\n                      });\n                      this.GetPositionPlacementReport(position.position_code);\n                    }\n                  }\n                }\n                position.position_code !== null &&\n                  this.setState({\n                    selectedPosition: position,\n                    choosePosition: false,\n                  });\n              }}\n              positions={this.state.positions}\n              selected_position_code={\n                this.state.selectedPosition === null\n                  ? \"\"\n                  : this.state.selectedPosition.position_code!\n              }\n            />\n          </Modal>\n        )}\n        {this.state.select_district_modal === true && (\n          <Modal\n            backDrop={true}\n            theme={Themes.default}\n            close={() => this.setState({ select_district_modal: false })}\n            backDropClose={true}\n            widthSizeClass={ModalSize.medium}\n            displayClose={true}\n            padding={{\n              title: true,\n              body: true,\n            }}\n            title={<div className=\"text-2xl\">Filter by district</div>}\n          >\n            {this.state.districts === null ? (\n              <div>Loading...</div>\n            ) : (\n              this.state.selectedPosition !== null &&\n              this.state.selectedPosition.position_code !== null && (\n                <div className=\"-mt-5\">\n                  <Districts\n                    districts={this.state.districts}\n                    selected_district_code={this.state.selected_district_code}\n                    selectDistrict={(district_code: string) => {\n                      this.setState({\n                        selected_district_code: district_code,\n                        select_district_modal: false,\n                        view_all: false,\n                      });\n                      this.GetDistrictPlacementReport(\n                        this.state.selectedPosition!.position_code!,\n                        district_code\n                      );\n                    }}\n                  />\n                </div>\n              )\n            )}\n          </Modal>\n        )}\n      </Fragment>\n    );\n  }\n}\nconst mapStateToProps = ({\n  auth,\n  periods,\n}: StoreState): {\n  auth: Auth;\n  periods: applicationPeriodsStoreInterface;\n} => {\n  return {\n    auth: auth,\n    periods: periods,\n  };\n};\n\nexport const PlacementAlgorithm = connect(mapStateToProps, {\n  FC_GetPositionsByInstitution,\n})(_PlacementAlgorithm);\n","import axios from \"axios\";\nimport { Dispatch } from \"redux\";\nimport { ActionTypes } from \"./types\";\nimport {\n  AccessTaskInterface,\n  PermissionInterface,\n  SystemSettingsInterface,\n} from \"../shared/interfaces\";\nimport { API } from \"../utils/api\";\nimport { setAxiosToken } from \"../utils/AxiosToken\";\nimport { errorToText } from \"../utils/errors\";\nimport { PositionAPI } from \"../interfaces/position\";\n\nconst url = `${API.AUTH}/auth/user/access`;\n\n/**\n * * ****************************** INTERFACES *****************************\n */\n\n// SYSTEM SETTINGS  ==============\nexport interface GetSystemSettingsAction {\n  type: ActionTypes.GET_SYSTEM_SETTINGS;\n  payload: SystemSettingsInterface[];\n}\n\nexport interface DisableSystemSettingsAction {\n  type: ActionTypes.DISABLE_SYSTEM_SETTINGS;\n  payload: {\n    system_setting_id: string;\n    status: \"enabled\" | \"disabled\";\n  };\n}\n\n// ROLE TASKS ACCESS SETTINGS ===================================\nexport interface GetTaskAccessAction {\n  type: ActionTypes.GET_TASK_ACCESS;\n  payload: AccessTaskInterface[];\n}\n\n// POSITIONS SETTINGS ===================================\nexport interface PositionCreateInterface {\n  position_id?: string;\n  position_title: string;\n  position_code: string;\n  description: string;\n  school_level_id: string;\n  subcategory_id: string;\n  education_institute_id: string;\n  courses: string[];\n  requirements: {\n    user_detail_category_id: string;\n    user_detail_subcategory_id: string;\n    position_requirement: {\n      category_subcategory_data_id: string;\n      required: boolean;\n    }[];\n    required: boolean;\n  }[];\n}\nexport interface GetPositionsAction {\n  type: ActionTypes.GET_POSTIONS;\n  payload: PositionAPI[];\n}\n\nexport interface CreatePositionsAction {\n  type: ActionTypes.CREATE_POSITION;\n  payload: PositionCreateInterface;\n}\n\nexport interface UpdatePositionsAction {\n  type: ActionTypes.UPDATE_POSITION;\n  payload: PositionCreateInterface;\n}\n\nexport interface DeletePositionSettingAction {\n  type: ActionTypes.DELETE_POSITION;\n  payload: string;\n}\n\nexport interface PublishPositionAction {\n  type: ActionTypes.PUBLISH_POSITION;\n  payload: {\n    position_id: string;\n    status: boolean;\n  };\n}\n\nexport type SystemActionType =\n  | GetSystemSettingsAction\n  | DisableSystemSettingsAction\n  | GetTaskAccessAction\n  | GetPositionsAction\n  | CreatePositionsAction\n  | UpdatePositionsAction\n  | DeletePositionSettingAction\n  | PublishPositionAction;\n\n/**\n * * ****************************** ACTIONS *****************************\n */\n\nexport const getSystemSettings = (callback: Function) => {\n  return async (dispatch: Dispatch) => {\n    callback(true, \"\");\n    try {\n      setAxiosToken();\n      const res = await axios.get<SystemSettingsInterface[]>(\n        `${API.AUTH}/system/setting`\n      );\n      console.log(\"=================getSystemSettings===================\");\n      console.log(res);\n      console.log(\"=================getSystemSettings===================\");\n      dispatch<GetSystemSettingsAction>({\n        type: ActionTypes.GET_SYSTEM_SETTINGS,\n        payload: res.data,\n      });\n      callback(false, \"\");\n    } catch (error) {\n      console.log({ code_error: error });\n      callback(false, errorToText(error));\n    }\n  };\n};\n\nexport const disableSystemSetting = (data: {\n  system_setting_id: string;\n  status: \"enabled\" | \"disabled\";\n}) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<DisableSystemSettingsAction>({\n      type: ActionTypes.DISABLE_SYSTEM_SETTINGS,\n      payload: data,\n    });\n  };\n};\n\n// ============================ tasks access =======================\n\nexport const GetTaskAccess = (callback: Function) => {\n  return async (dispatch: Dispatch) => {\n    callback(true, \"\");\n    try {\n      setAxiosToken();\n      const res = await axios.get<\n        {\n          id: string;\n          title: string;\n          key: string;\n          permitted: PermissionInterface;\n        }[]\n      >(`${url}/roleaccess`);\n      let response: AccessTaskInterface[] = res.data.map((data) => ({\n        id: data.id,\n        task: data.title,\n        key: data.key,\n        permitted: data.permitted,\n      }));\n      dispatch<GetTaskAccessAction>({\n        type: ActionTypes.GET_TASK_ACCESS,\n        payload: response,\n      });\n      callback(false, \"\", response);\n    } catch (error) {\n      console.log({ code_error: error });\n      callback(false, errorToText(error));\n    }\n  };\n};\n\n// ============================ positions =======================\n\nexport const getPositions = (callback: Function) => {\n  return async (dispatch: Dispatch) => {\n    callback(true, \"\");\n    try {\n      setAxiosToken();\n      const res = await axios.get<PositionAPI[]>(`${API.APPLICATION}/position`);\n      dispatch<GetPositionsAction>({\n        type: ActionTypes.GET_POSTIONS,\n        payload: res.data,\n      });\n      callback(false, \"\");\n    } catch (error) {\n      console.log({ code_error: error });\n      callback(false, errorToText(error));\n    }\n  };\n};\n\nexport const createPosition = (data: PositionCreateInterface) => {\n  console.log({ createPosition: data });\n  return async (dispatch: Dispatch) => {\n    dispatch<CreatePositionsAction>({\n      type: ActionTypes.CREATE_POSITION,\n      payload: data,\n    });\n  };\n};\n\nexport const updatePosition = (data: PositionCreateInterface) => {\n  console.log({ updatePosition: data });\n  return async (dispatch: Dispatch) => {\n    dispatch<UpdatePositionsAction>({\n      type: ActionTypes.UPDATE_POSITION,\n      payload: data,\n    });\n  };\n};\n\nexport const deletePosition = (data: string) => {\n  console.log({ deletePosition: data });\n  return async (dispatch: Dispatch) => {\n    dispatch<DeletePositionSettingAction>({\n      type: ActionTypes.DELETE_POSITION,\n      payload: data,\n    });\n  };\n};\n\nexport const publishPosition = (data: {\n  position_id: string;\n  status: boolean;\n}) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<PublishPositionAction>({\n      type: ActionTypes.PUBLISH_POSITION,\n      payload: data,\n    });\n  };\n};\n\nexport const FC_GetPositionsByInstitution = (\n  institution_id: string,\n  callback: (status: boolean, msg: string, data?: PositionAPI[]) => void\n) => {\n  return async (dispatch: Dispatch) => {\n    callback(true, \"\");\n    try {\n      setAxiosToken();\n      const res = await axios.get<PositionAPI[]>(\n        `${API.APPLICATION}/position/instituteposition/${institution_id}`\n      );\n      dispatch<GetPositionsAction>({\n        type: ActionTypes.GET_POSTIONS,\n        payload: res.data,\n      });\n      callback(false, \"\", res.data);\n    } catch (error) {\n      console.log({ code_error: error });\n      callback(false, errorToText(error));\n    }\n  };\n};\n"],"sourceRoot":""}
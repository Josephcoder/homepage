{"version":3,"sources":["components/ClaimReportTools/ClaimReportAnalytic.tsx","containers/Claimings/Admin/ClaimReport.tsx"],"names":["ClaimReportAnalytic","props","setLoading","status","setState","loading","state","className","Component","_ClaimReport","GetClaims","level","session_id","a","axios","post","API","CLAIMING","period_id","res","data","console","log","GetSummaryFilter","response","item","test","find","itm","position_title","undefined","filter","push","total","pending","ClaimStatus","PENDING","validated","EVALUATED","GetSummary","res_data","type_key","selected_claim_type","title","claims","selected_level","claim_status","sort","b","GetSummaryCounts","componentDidMount","schoolLevels","selectedEducationCategory","education_categories","education_institute_id","auth","education_institution_id","setSelectedEducationCategory","session_plan","_id","error","success","PlansTypeKeys","APPLICATION","view_type","selected_institution","this","Loading","capitalizeFirstLetter","toString","onChange","e","selected_type","target","value","DOCUMENT_VALIDATION","EXAMINATION","parseInt","displayNumbers","onClick","length","colSpan","map","i","general_summary","summary_details","ClaimReport","connect","system","positions","loadAllPositionsByInstitute"],"mappings":"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","file":"static/js/55.5bfd7f61.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport ReactApexChart from \"react-apexcharts\";\n\ninterface ClaimReportAnalyticProps {\n  general_summary: {\n    pending: number;\n    validated: number;\n    total: number;\n  };\n  summary_details: {\n    position_title: string;\n    total: number;\n    pending: number;\n    validated: number;\n  }[];\n}\ninterface ClaimReportAnalyticState {\n  loading: boolean;\n}\n\nexport class ClaimReportAnalytic extends Component<\n  ClaimReportAnalyticProps,\n  ClaimReportAnalyticState\n> {\n  constructor(props: ClaimReportAnalyticProps) {\n    super(props);\n\n    this.state = {\n      loading: true,\n    };\n  }\n  setLoading = (status: boolean) => this.setState({ loading: status });\n  render() {\n    return (\n      <div className=\"animate__animated animate__fadeIn\">\n        <div className=\"grid grid-cols-12\">\n          <div className=\"col-span-4 bg-gray-100 rounded p-4\">sdf</div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default ClaimReportAnalytic;\n","import axios from \"axios\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport {\n  Auth,\n  positionsStoreInterface,\n  schoolLevelsStoreInterface,\n  System,\n  setSelectedEducationCategory,\n  loadAllPositionsByInstitute,\n} from \"../../../actions\";\nimport ClaimReportAnalytic from \"../../../components/ClaimReportTools/ClaimReportAnalytic\";\nimport Loading from \"../../../components/Loading/Loading\";\nimport {\n  ClaimStatus,\n  education_category,\n  PlansTypeKeys,\n} from \"../../../interfaces\";\nimport { StoreState } from \"../../../reducers\";\nimport { capitalizeFirstLetter } from \"../../../shared/dataTest\";\nimport { API } from \"../../../utils/api\";\nimport { displayNumbers } from \"../../../utils/functions\";\n\ninterface GetClaimsReportInterface {\n  _id: string;\n  previous: {\n    evaluater: {\n      email: string;\n      name: string;\n    };\n    reason: string;\n    status: string;\n  };\n  title: string;\n  last_claim_status: ClaimStatus;\n  claiming_on_id: string;\n  type_key: PlansTypeKeys;\n  default_claim_resaons: string;\n  user: string;\n  period_id: string;\n  claim_level: number;\n  claims: [\n    {\n      claim_status: ClaimStatus;\n      _id: string;\n      level: number;\n      reason: string;\n      date_created: string;\n      createdAt: string;\n      updatedAt: string;\n    }\n  ];\n  createdAt: string;\n  updatedAt: string;\n  __v: 0;\n}\n\ninterface PositionSummaryInterface {\n  position_title: string;\n  total: number;\n  status: ClaimStatus;\n}\n\ninterface ClaimReportProps {\n  auth: Auth;\n  system: System;\n  positions: positionsStoreInterface;\n  schoolLevels: schoolLevelsStoreInterface;\n  setSelectedEducationCategory: (data: education_category) => void;\n  loadAllPositionsByInstitute: (\n    institution_id: string,\n    callback: (loading: boolean) => void\n  ) => void;\n}\ninterface ClaimReportState {\n  error: string;\n  success: string;\n  loading: boolean;\n  data: GetClaimsReportInterface[] | null;\n  selected_level: number;\n  selected_claim_type: PlansTypeKeys;\n  view_type: \"Table\" | \"Analytical\";\n}\n\nclass _ClaimReport extends Component<ClaimReportProps, ClaimReportState> {\n  constructor(props: ClaimReportProps) {\n    super(props);\n\n    this.state = {\n      loading: true,\n      error: \"\",\n      success: \"\",\n      data: null,\n      selected_level: 1,\n      selected_claim_type: PlansTypeKeys.APPLICATION,\n      view_type: \"Table\",\n    };\n  }\n  setLoading = (status: boolean) => this.setState({ loading: status });\n  GetClaims = async (level: number, session_id: string) => {\n    this.setLoading(true);\n    try {\n      const res = await axios.post<GetClaimsReportInterface[]>(\n        `${API.CLAIMING}/user/level/${level}`,\n        {\n          period_id: session_id,\n        }\n      );\n      if (res.data) {\n        this.setState({\n          data: res.data,\n        });\n      }\n      console.log(\"Response: \", res.data);\n      this.setLoading(false);\n    } catch (error: any) {\n      console.log(\"Error: \", { ...error });\n      this.setLoading(false);\n    }\n  };\n\n  GetSummaryFilter = (data: PositionSummaryInterface[]) => {\n    let response: {\n      position_title: string;\n      total: number;\n      pending: number;\n      validated: number;\n    }[] = [];\n    for (const item of data) {\n      const test = response.find(\n        (itm) => itm.position_title === item.position_title\n      );\n      if (test !== undefined) {\n        response = response.filter(\n          (itm) => itm.position_title !== test.position_title\n        );\n        response.push({\n          position_title: test.position_title,\n          total: test.total + 1,\n          pending:\n            item.status === ClaimStatus.PENDING\n              ? test.pending + 1\n              : test.pending,\n          validated:\n            item.status === ClaimStatus.EVALUATED\n              ? test.validated + 1\n              : test.validated,\n        });\n      } else {\n        response.push({\n          position_title: item.position_title,\n          total: item.total,\n          pending: item.status === ClaimStatus.PENDING ? 1 : 0,\n          validated: item.status === ClaimStatus.EVALUATED ? 1 : 0,\n        });\n      }\n    }\n    return response;\n  };\n\n  GetSummary = (\n    data: GetClaimsReportInterface[]\n  ): {\n    position_title: string;\n    total: number;\n    pending: number;\n    validated: number;\n  }[] => {\n    let response: PositionSummaryInterface[] = [];\n    const res_data = data.filter(\n      (itm) => itm.type_key === this.state.selected_claim_type\n    );\n    for (const item of res_data) {\n      response.push({\n        position_title: item.title,\n        total: 1,\n        status: item.claims.filter(\n          (itm) => itm.level === this.state.selected_level\n        )[0].claim_status,\n      });\n    }\n    return this.GetSummaryFilter(response).sort((a, b) =>\n      a.pending < b.pending ? 1 : b.pending < a.pending ? -1 : 0\n    );\n  };\n\n  GetSummaryCounts = (\n    data: {\n      position_title: string;\n      total: number;\n      pending: number;\n      validated: number;\n    }[]\n  ): {\n    pending: number;\n    validated: number;\n    total: number;\n  } => {\n    let res: {\n      pending: number;\n      validated: number;\n      total: number;\n    } = {\n      pending: 0,\n      validated: 0,\n      total: 0,\n    };\n    let pending: number = 0;\n    let validated: number = 0;\n    let total: number = 0;\n    for (const item of data) {\n      pending = pending + item.pending;\n      validated = validated + item.validated;\n      total = total + item.total;\n    }\n    res = {\n      pending: pending,\n      validated: validated,\n      total: total,\n    };\n    return res;\n  };\n\n  componentDidMount = () => {\n    if (this.props.schoolLevels.selectedEducationCategory === null) {\n      if (this.props.schoolLevels.education_categories !== null) {\n        const test = this.props.schoolLevels.education_categories.find(\n          (itm) =>\n            itm.education_institute_id ===\n            this.props.auth.education_institution_id\n        );\n        if (test !== undefined) {\n          this.props.setSelectedEducationCategory(test);\n          if (test.session_plan !== null) {\n            this.GetClaims(this.state.selected_level, test.session_plan._id);\n          }\n        }\n      }\n    } else {\n      if (\n        this.props.schoolLevels.selectedEducationCategory.session_plan !== null\n      ) {\n        this.GetClaims(\n          this.state.selected_level,\n          this.props.schoolLevels.selectedEducationCategory.session_plan._id\n        );\n      }\n    }\n  };\n  render() {\n    const selected_institution =\n      this.props.schoolLevels.education_categories?.find(\n        (itm) =>\n          itm.education_institute_id ===\n          this.props.auth.education_institution_id\n      );\n    if (selected_institution === undefined) {\n      return (\n        <div>\n          <div className=\"rounded-xl border-2 border-gray-600 flex flex-col items-center justify-center p-7 text-center w-full mt-5 bg-white\">\n            <span className=\"font-extrabold text-3xl text-gray-600\">\n              Your institute is not yet defined\n            </span>\n            <span>\n              If you have an institute assigned to you, please refresh your page\n              or wait a moment... your page...\n              {/* You are not allowed to view shortlisting report because you have\n              no access for this report. please contact your administrator */}\n            </span>\n          </div>\n        </div>\n      );\n    }\n    if (\n      this.state.loading === true ||\n      this.props.schoolLevels.selectedEducationCategory === null ||\n      this.state.data === null\n    ) {\n      return (\n        <div className=\"bg-white rounded p-5 mt-5\">\n          <Loading />\n          <div className=\"-mt-5 ml-5\">Loading report, please wait...</div>\n        </div>\n      );\n    }\n    if (this.state.error !== \"\") {\n      <div onClick={() => this.setState({ error: \"\" })}>\n        <div className=\"cursor-pointer rounded-xl border-2 border-yellow-600 flex flex-col items-center justify-center p-7 text-center w-full mt-5 bg-yellow-100\">\n          <span className=\"font-extrabold text-3xl text-yellow-800\">\n            Error occurred!\n          </span>\n          <span>{this.state.error}</span>\n        </div>\n      </div>;\n    }\n    return (\n      <div>\n        <div className=\"mt-4 bg-white rounded\">\n          <div className=\"p-4 flex flex-row items-center gap-3 justify-between\">\n            <div>\n              <div className=\"text-3xl font-extrabold\">\n                Claiming report (\n                <span className=\"text-blue-600 lowercase\">\n                  {capitalizeFirstLetter(\n                    this.state.selected_claim_type.toString()\n                  )}\n                </span>\n                )\n              </div>\n              <div className=\"flex flex-row items-center gap-2 ml-2\">\n                <div className=\"flex flex-col\">\n                  <span className=\"text-sm font-bold\">Choose claim type</span>\n                  <select\n                    onChange={(e) => {\n                      const selected_type = e.target.value as PlansTypeKeys;\n                      this.setState({\n                        selected_claim_type: selected_type,\n                      });\n                    }}\n                    value={this.state.selected_claim_type}\n                    className=\"px-3 py-2 rounded border border-gray-500\"\n                  >\n                    <option value={PlansTypeKeys.APPLICATION}>\n                      Applications\n                    </option>\n                    <option value={PlansTypeKeys.DOCUMENT_VALIDATION}>\n                      Document validation\n                    </option>\n                    <option value={PlansTypeKeys.EXAMINATION}>\n                      Examinations\n                    </option>\n                  </select>\n                </div>\n                <div className=\"flex flex-col\">\n                  <span className=\"text-sm font-bold\">Choose claim level</span>\n                  <select\n                    value={this.state.selected_level}\n                    onChange={(e) => {\n                      if (selected_institution.session_plan !== null) {\n                        const selected_level = parseInt(e.target.value);\n                        this.setState({\n                          selected_level: selected_level,\n                        });\n                        this.setLoading(true);\n                        this.GetClaims(\n                          selected_level,\n                          selected_institution.session_plan._id\n                        );\n                      }\n                    }}\n                    className=\"px-3 py-2 rounded border border-gray-500\"\n                  >\n                    <option value={1}>Level 1</option>\n                    <option value={2}>Public Service Commission Level</option>\n                  </select>\n                </div>\n              </div>\n            </div>\n            <div className=\"flex flex-row items-center gap-3\">\n              <div className=\"flex flex-col rounded bg-blue-100 p-2 text-right\">\n                <span className=\"text-3xl font-extrabold\">\n                  {displayNumbers(\n                    this.GetSummaryCounts(this.GetSummary(this.state.data))\n                      .total\n                  )}\n                </span>\n                <span className=\"font-normal text-sm text-blue-900\">\n                  Total claims\n                </span>\n              </div>\n              <div className=\"flex flex-col rounded bg-blue-100 p-2 text-right\">\n                <span className=\"text-3xl font-extrabold\">\n                  {displayNumbers(\n                    this.GetSummaryCounts(this.GetSummary(this.state.data))\n                      .pending\n                  )}\n                </span>\n                <span className=\"font-normal text-sm text-blue-900\">\n                  Waiting claims\n                </span>\n              </div>\n              <div className=\"flex flex-col rounded bg-green-100 p-2 text-right\">\n                <span className=\"text-3xl font-extrabold text-green-900\">\n                  {displayNumbers(\n                    this.GetSummaryCounts(this.GetSummary(this.state.data))\n                      .validated\n                  )}\n                </span>\n                <span className=\"font-normal text-sm text-green-900\">\n                  Validated claims\n                </span>\n              </div>\n            </div>\n          </div>\n          <div className=\"border-t border-gray-400 p-4\">\n            <div className=\"flex flex-row items-center rounded mb-3\">\n              <div\n                onClick={() => this.setState({ view_type: \"Table\" })}\n                className={`px-3 py-2 ${\n                  this.state.view_type === \"Table\"\n                    ? \"bg-white font-bold text-blue-800 border-b-4 border-blue-600 rounded-t-md animate__animated animate__fadeIn\"\n                    : \"bg-white font-light  border-b-4 border-gray-200 hover:bg-blue-100 hover:text-blue-800 hover:border-blue-600\"\n                } cursor-pointer`}\n              >\n                Table view\n              </div>\n              <div\n                onClick={() => this.setState({ view_type: \"Analytical\" })}\n                className={`px-3 py-2 ${\n                  this.state.view_type === \"Analytical\"\n                    ? \"bg-white font-bold text-blue-800 border-b-4 border-blue-600 rounded-t-md animate__animated animate__fadeIn\"\n                    : \"bg-white font-light  border-b-4 border-gray-200 hover:bg-blue-100 hover:text-blue-800 hover:border-blue-600\"\n                } cursor-pointer`}\n              >\n                Analytical view\n              </div>\n            </div>\n            {this.state.view_type === \"Table\" ? (\n              <table className=\"w-full animate__animated animate__fadeIn\">\n                <thead className=\"bg-blue-100 \">\n                  <tr className=\"\">\n                    <th className=\"px-3 py-1 text-center\">#</th>\n                    <th className=\"px-3 py-1 text-left\">Position</th>\n                    <th className=\"px-3 py-1 text-center\">Total claims</th>\n                    <th className=\"px-3 py-1 text-center\">Waiting claims</th>\n                    <th className=\"px-3 py-1 text-center\">Validated claims</th>\n                  </tr>\n                </thead>\n                <tbody>\n                  {this.GetSummary(this.state.data).length === 0 ? (\n                    <tr>\n                      <td\n                        colSpan={5}\n                        className=\"text-center p-3 text-3xl font-light bg-gray-100 border border-gray-500 rounded\"\n                      >\n                        No result found!\n                      </td>\n                    </tr>\n                  ) : (\n                    this.GetSummary(this.state.data).map((item, i) => (\n                      <tr\n                        key={i + 1}\n                        className={`${\n                          i % 2 !== 0 ? \"bg-gray-100\" : \"bg-white\"\n                        } ${\n                          item.total === item.validated\n                            ? \"text-green-900 font-light\"\n                            : item.validated === 0\n                            ? \"text-yellow-900 font-bold\"\n                            : \"text-black font-light\"\n                        }`}\n                      >\n                        <td className=\"px-3 py-1 text-center\">{i + 1}</td>\n                        <td className=\"px-3 py-1 text-left\">\n                          {item.position_title}\n                        </td>\n                        <td className=\"px-3 py-1 text-center\">\n                          {displayNumbers(item.total)}\n                        </td>\n                        <td className=\"px-3 py-1 text-center\">\n                          {displayNumbers(item.pending)}\n                        </td>\n                        <td className=\"px-3 py-1 text-center\">\n                          {displayNumbers(item.validated)}\n                        </td>\n                      </tr>\n                    ))\n                  )}\n                </tbody>\n              </table>\n            ) : (\n              <ClaimReportAnalytic\n                general_summary={this.GetSummaryCounts(\n                  this.GetSummary(this.state.data)\n                )}\n                summary_details={this.GetSummary(this.state.data)}\n              />\n            )}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = ({\n  auth,\n  system,\n  positions,\n  schoolLevels,\n}: StoreState): {\n  auth: Auth;\n  system: System;\n  positions: positionsStoreInterface;\n  schoolLevels: schoolLevelsStoreInterface;\n} => {\n  return {\n    auth: auth,\n    system: system,\n    positions: positions,\n    schoolLevels,\n  };\n};\n\nexport const ClaimReport = connect(mapStateToProps, {\n  setSelectedEducationCategory,\n  loadAllPositionsByInstitute,\n})(_ClaimReport);\n"],"sourceRoot":""}
{"version":3,"sources":["containers/AdminDashboard/ClaimDashboard/AllClaimChart.tsx","containers/AdminDashboard/ClaimDashboard/ClaimDashBoardTitle.tsx","containers/AdminDashboard/ClaimDashboard/ClaimDashboard.tsx","shared/dataTest.tsx","utils/question_bank.ts","components/Navigation/SideNavigation.tsx","components/Table/Table.tsx","actions/session.ts","actions/document.ts","actions/settings.ts","containers/SessionSettings/NoSession.tsx","components/Loading/TableLoading.tsx","shared/interfaces.tsx","containers/AdminDashboard/ChartComponents/VBarChart.tsx","utils/ExportToExcel.tsx","utils/mineduc.png","components/DownloadPDF/rest.tsx","containers/Claimings/ClaimDocView.tsx","containers/Claimings/Candidate/FormPlacementList.tsx","containers/Claimings/Candidate/ClaimForm.tsx","containers/SessionSettings/ChooseSession.tsx","components/AnswersDetails/CandidateAnswersDetails.tsx","containers/AdminDashboard/ChartComponents/PieChart.tsx","containers/AdminDashboard/DashboardLabelItem.tsx","containers/AdminDashboard/ExamDashboard/ExamDashboardLabels.tsx","containers/Claimings/Candidate/ApplicationFormView.tsx","containers/Positions/ViewRequirements.tsx","containers/Claimings/Candidate/ExaminationFormView.tsx","containers/Claimings/Candidate/FormExamList.tsx","containers/Claimings/Admin/AdminFilterByType.tsx","containers/Claimings/ClaimHeaderTitle.tsx","containers/DoExam/DoExamTitle/FindAnswerHybrid.tsx","containers/DoExam/DoExamTitle/FindAnswer.tsx","components/AnswersDetails/AnswersDetails.tsx","components/ClaimForm/ClaimFormComponent.tsx","containers/CandidateExams/CandidateExams.tsx","containers/Claimings/Candidate/index.tsx","containers/Claimings/ClaimApplView.tsx","containers/Claimings/ClaimExamView.tsx","containers/Claimings/ClaimPlacementView.tsx","containers/Claimings/Candidate/FilterByType.tsx","components/ViewPDF/ViewPDF.tsx","containers/Claimings/Candidate/ChooseReason.tsx","containers/SessionSettings/ApplicationSession/SessionDetails.tsx","containers/Claimings/Candidate/DocFormView.tsx","containers/Claimings/Candidate/FormApplicationList.tsx","containers/Claimings/Candidate/FormDocumentList.tsx","containers/Admin/Claiming/ClaimingReport.tsx","containers/Claimings/Admin/AdminClaimExamView.tsx","containers/Positions/ViewDocRequirements.tsx","containers/Claimings/Admin/AdminClaimAppView.tsx","containers/Claimings/Admin/AdminClaimDocView.tsx","containers/Claimings/Admin/index.tsx"],"names":["AllClaimChart","props","FC_GetAllClaimChartData","acceptedArray","rejectedArray","activeArray","labelArray","typeKey","ClaimTypes","type","push","count","accepted","rejected","pending","replace","active","labels","className","VBarChart","categoriesLabel","dataLabels","yaxisText","tooltipText","series","name","data","colors","defaultBar","borderRadius","horizontal","columnWidth","endingShape","stacked","React","memo","ClaimDashBoardTitle","reportTitle","education_categories","length","allEducation","loading","loadingApplications","loadingEducation","periodChanged","thisEducation","onClick","setThisEducation","map","education","index","education_institute_id","education_category_title","value","thisPeriod","disabled","onChange","e","setThisPeriod","target","onPeriodChange","application_sessions","session","item","session_plan_id","session_plan_name","_ClaimDashboard","setLoadingInstitutes","setState","loadingInstitutes","setLoading","setLoadingSession","loadingSession","setPeriodChanged","setLoadingPosition","loadingPosition","setLoadingApplications","setLoadingClaims","loadingClaims","setLoadingDocuments","loadingDocuments","setLoadingClarifications","loadingClarifications","setLoadingFields","loadingFields","setThisLabel","thisLabel","componentDidMount","schoolLevels","loadEducationCategories","GetAllSessionPlans","status","msg","PushPopupAlert","title","theme","PopupAlertTheme","danger","thisSession","find","is_active","state","isEmptyOrSpaces","documentReducer","documentCategory","getDocumentCategory","documentSubCategory","getDocumentSubCategory","documentFields","getDocumentFields","systemPositions","getPositions","console","log","period_id","getAllClaims","getAllApplications","getClaimInstitute","thisClaim","type_key","PlansTypeKeys","DOCUMENT_VALIDATION","APPLICATION","claiming","allApplications","thisApplication","_id","claiming_on_id","thisPosition","position_id","position","displayClaimTitle","result","userDetails","details","filter","validation_status","adminDisplayClaimTitle","position_title","claims","output","all","decision","ClaimDecisionStatus","ACCEPTED","REJECTED","Object","values","forEach","PlansKey","capitalizeFirstLetter","reportClaimType","itm","claim_type","FC_ClaimData","allClaims","arrayNew","n","key","prototype","hasOwnProperty","call","keyClaim","element","dataArray","claim_id","names","user_info","fname","lname","gender","sex","national_id","n_id","phone","phone_number","email","claim_level","level","education_category","claim_session","date","DATE","createdAt","decision_taken_status","claim_title","getClaimDataByTitle","allData","this","NoSession","toLocaleLowerCase","ExamDashboardLabels","icon","FaBookOpen","iconColor","labelsOnRow","PieChart","options","legend","show","horizontalAlign","fontSize","itemMargin","vertical","plotOptions","pie","donut","color","offsetY","fontFamily","formatter","val","total","label","w","globals","seriesTotals","reduce","a","b","width","Component","ClaimDashboard","connect","auth","system_settings","sessionPlan","document","allSessionPlans","GetClaimingTypes","setSelectedClaimType","str","match","getRoleById","roles","roleId","role","system_user_role_id","getInstituteById","institutes","instituteId","getPositionById","positions","toTwoDigit","dec","Math","floor","slice","toString","substr","toAnyDigit","padding","zeroes","Array","join","charAt","toUpperCase","ExamTimeStatus","today","moment","tz","TimeZone","getQuestionType","question_types","type_id","check","id","undefined","check_type","questionTypeElements","findTotalMarks","courses","results","sum","course","test","course_id","total_marks","toFixed","CheckIfExamDone","res","validateCalculatedFormula","formula","characters","el","nextCharacter","i","convertFromStringToDate","responseDate","dateComponents","split","datePieces","timePieces","Date","parseInt","validateExamDate","exam_date","start_time","end_time","Expired","toDay","examDate","startTime","getDate","getMonth","getFullYear","endTime","Waiting","getTime","Online","proctoringDefaultRules","rule","caption","_SideNavigation","PageHasSubNav","componentWillUnmount","isAuthenticated","navActive","system","navigation","children","SideNavigation","NavToogle","MainItem","MdBrightness1","IconDefined","Table","table","tr","tableId","charactersLength","random","FC_makeID","useState","totalItems","setTotalItems","totalPages","setTotalPages","currentPage","setCurrentPage","pages","setPages","pageSize","setPageSize","startIndex","setStartIndex","endIndex","setEndIndex","useEffect","pagination","tablePagination","getElementById","getElementsByTagName","ceil","min","_pages","from","keys","style","display","tableSize","search","searchBG","placeholder","filterType","td","rows","cols","toLowerCase","columns","textContent","innerText","indexOf","filterTable","Number","tableClass","rounded","hideColumns","thColor","column","alignText","isSortAllowed","switching","x","y","shouldSwitch","colIndex","dir","switchcount","innerHTML","parentNode","insertBefore","sortThisColumn","columnTitle","aria-label","page","pageIndex","GetPlansTypes","callback","dispatch","setAxiosToken","axios","get","API","CLAIMING","GET_PLANS_TYPES","plan_types","ActionTypes","payload","error","errorToText","setSelectedPlanType","thisType","SELECT_PLAN_TYPE","getActiveSessionPlan","GET_ACTIVE_SESSION_PLANS","session_plan","GET_ALL_SESSION_PLANS","session_data","createSessionPlan","CREATE_SESSION_PLAN","updateSessionPlan","UPDATE_SESSION_PLAN","sessionActivation","SESSION_ACTIVATION","deleteSessionPlan","DELETE_SESSION_PLAN","createAcademicSession","CREATE_ACADEMIC_SESSION","GetAllAcademicSession","PLACEMENT","GET_ALL_ACADEMIC_SESSION","updateAcademicSession","UPDATE_ACADEMIC_SESSION","academicSessionActivation","ACADEMIC_SESSION_ACTIVATION","deleteAcademicSession","DELETE_ACADEMIC_SESSION","getActiveAcademicSession","GET_ACTIVE_ACADEMIC_SESSION","AUTH","docCategory","GET_DOCUMENT_CATEGORY","createDocumentCategory","CREATE_DOCUMENT_CATEGORY","updateDocumentCategory","UPDATE_DOCUMENT_CATEGORY","deleteDocumentCategory","DELETE_DOCUMENT_CATEGORY","docSubCategory","GET_DOCUMENT_SUB_CATEGORY","doc_SUB_category_error","createDocumentSubCategory","CREATE_DOCUMENT_SUB_CATEGORY","updateDocumentSubCategory","UPDATE_DOCUMENT_SUB_CATEGORY","deleteDocumentSubCategory","DELETE_DOCUMENT_SUB_CATEGORY","docFields","GET_DOCUMENT_FIELDS","createDocumentFields","CREATE_DOCUMENT_FIELDS","updateDocumentFields","reducer","UPDATE_DOCUMENT_FIELDS","deleteDocumentFields","DELETE_DOCUMENT_FIELDS","distinctCandidates","candidatesData","user_ids","candidate","includes","user_id","getCandidatesInInstitute","educatin_type_id","session_id","GET_CANDIDATE_IN_INSTITUTE","verifyDocument","VERIFY_DOCUMENT","getSystemSettings","GET_SYSTEM_SETTINGS","code_error","disableSystemSetting","DISABLE_SYSTEM_SETTINGS","GetTaskAccess","response","task","permitted","GET_TASK_ACCESS","GET_POSTIONS","deletePosition","DELETE_POSITION","publishPosition","PUBLISH_POSITION","TableLoading","displayCols","colsArray","RoomType","PostRequestStatusInterface","DocumentAttributesInterface","DocValidationStatusInterface","SESSION_PLAN_KEYS","EXAMINATION","MARKS_PUBLICATION","PLACEMENT_TRANSFER","chart","events","dataPointSelection","event","chartContext","config","labelClicked","dataPointIndex","FC_LoadSelected","seriesIndex","bar","enabled","xaxis","rotate","categories","tickPlacement","yaxis","text","fill","opacity","tooltip","grid","left","right","noData","align","verticalAlign","setOptions","chartClicked","zoom","autoScaleYaxis","height","chartHeight","ExportToExcel","fileData","fileName","btnName","showIcon","apiData","wb","Sheets","XLSX","json_to_sheet","SheetNames","excelBuffer","bookType","Blob","FileSaver","exportToCSV","require","addFooters","doc","pageCount","internal","getNumberOfPages","setFont","setFontSize","setPage","String","generatePDF","reportSettings","callBack","orientation","lMargin","jsPDF","setTextColor","addImage","Logo","getWidth","institute","lines","splitTextToSize","subject","pdfInMM","subjectTitle","getTextWidth","addPage","period","autoTable","html","startY","margin","cellPadding","rowHeight","bodyStyles","valign","columnStyles","cellWidth","tableWidth","finalY","lastAutoTable","doneBy","save","returnPromise","then","isReclaimAllowed","_thisClaim","isClaimEvaluated","claim_status","ClaimStatus","EVALUATED","createReClaim","handleSubmit","reClaimingMsg","setFormError","warning","setLoadingRequest","put","reason","success","setReClaimingMsg","setReClaiming","getReasonById","reason_id","claimReasons","ClaimGetDocTitle","documentCategories","thisDoc","main","setViewImage","viewImage","previous","evaluater","validated_by","comment","src","AUTH_FILES","files","alt","claim","default_claim_resaons","showDate","evaluation_comment","reClaiming","last_claim_status","PENDING","DELETED","loadingRequest","formError","resize","searchInput","setSearchInput","myPlacement","isClaimAllowed","myClaims","activeSession","placed","setChooseClaimFile","setViewThisFile","setClaimFileId","school","school_name","DocCategory","DocSubCategory","DocField","DocTitle","sub_category_id","c","user_detail_subcategory_id","category_id","user_detail_category_id","category_subcategory_data","category_subcategory_Data_id","category","sub_category","field","allClaim","claimOnId","ClaimForm","setLoadingForm","loadingForm","setAlertError","alertError","claimFileId","viewThisFile","chooseClaimFile","setChooseClaimReason","chooseClaimReason","setClaimReason","claimReason","setClaimComment","claimComment","isClaimTypeOpen","plans","isPlanActive","displayClaimType","claimType","loadExamAnswers","activeSessionPlan","getMyAnswers","application_session","setFormState","thisClaimType","thisClaimTypeId","formType","getClaimReasons","getDocumentById","documents","doc_id","getApplicationById","applications","application_id","getExamById","exams","answer_sheet_id","getValidation","thisId","old_reason","old_status","old_evaluated_by","candidateDocuments","candidateApplications","override_by","application_status","cleanToClose","loadUserById","getClaimTitle","myAnswer","getCourseIdBySheetId","getCourseById","course_name","preventDefault","old_evaluator_email","old_evaluator_name","evaluator_email","evaluator_name","institute_id","post","user","createClaim","selectClaimType","getMyRejectedApplications","loadCourses","getMyRejectedDocuments","getMyPlacement","generateChooseFileTitle","formState","Modal","backDrop","Themes","default","close","displayClose","backDropClose","widthSizeClass","ModalSize","extraLarge","medium","body","footer","onSubmit","FormDocumentList","FormApplicationList","FormExamList","candidateAnswers","ChooseReason","allClaimReasons","DocFormView","ApplicationFormView","ExaminationFormView","thisAnswerSheet","getMyClaims","isPlansActive","activePlans","plan","startDate","start_date","endDate","end_date","type_status","SessionPlanTypeStatus","OPEN","ChooseSession","searched","selectedPlan","setSelectedPlan","setSearch","allSession","chooseAll","currentSelected","setSelectSession","searchData","type_title","CandidateAnswersDetails","tomorrow","setDate","setClaim","compareWithToday","exam_id","showAnswers","file_id","DashboardLabelItem","FaUsers","countOver","numCols","childrenPosition","FC_ApplicationPositionDistinctCategory","PositionsTemp","DistinctCategoriesTemp","DistinctCategoriesIds","DistinctSubCategoriesTemp","DistinctSubCategoriesIds","requirements","req","thisRequirements","thisCategory","thisSubCategory","subcategory","thisField","position_requirement","required","category_title","subcategory_id","subcategory_title","subcategory_required","field_title","field_id","ApplicationStates","Rejected","dangerouslySetInnerHTML","__html","description","school_level_id","school_level_name","course_code","NoResultThemes","Dark","ViewRequirements","colSpan","claimShowAnswer","answer","discription","termes","rules","right_click_enabled","copy_enabled","paste_enabled","stop_candidate_when_comeback","allow_to_leave_browser","getFailedExam","allCourses","sheet_id","filterClaimsByClaimType","claimList","loadingClaimTypes","setLoadingClaimTypes","claimTypes","countClaims","Fragment","selectedClaimType","ClaimHeaderTitle","isLoading","headerTitle","sessions","selectPeriod","findQType","typeShort","changed","questionTypeElementsType","Hybrid","QuestionForHybrid","Calculated","CalculatedMultipleChoice","Essay","Matching","MultipleChoice","Numeric","ShortAnswer","SimpleCalculate","SingleMultiple","TrueFalse","FindAnswerHybrid","submitQuestionAnswer","Loading","maxHeight","wholeQuestion","selectedLanguage","findQuestionType","questionTypes","question","language","sub_question","stri","fromCharCode","charCodeAt","Embedded","EmbeddedQuestion","candidateExam","question_answers","answersList","showCorrectAnswer","subQuestionType","reference","resultDiv","user_answers","userAnswer","toMultipleChoice","userAnswerSingle","userAnswer1","toCalculatedMultipleChoice","userAnswerMatch","toMatching","userAnswerTureFalse","toTrueFalse","userAnswerNumerical","toNumerical","userAnswerSimpleCalculate","toSimpleCalculated","userAnswerShortAnswer","toShortAnswer","userAnswerEssay","toEssay","FindAnswer","question_id","UserAnswersSel","SubQ","answers","user_answer","testQ","_AnswersDetails","setLoadingStatus","loadingStatus","loadQuestionTypes","user_exams_done","allAnswers","loadExamsDone","exam_paper","requestUserAnswers","userAnswersTotalMarks","user_marks","user_exam_details","questions","setSelectedExamQuestion","submitExam","selectedExam","setSubmitModal","is_deleted","chapters","customNumber","marks","exam_total_marks","AnswersDetails","FC_GetProfileDetails","LoadCandidateApplications","setSelectedCandidateExam","setSelectedCourse","setSelectedPosition","InitializeExamDetails","AddUserApplication","loadApplicationPeriods","ClaimFormComponent","isDocumentIdValid","alert","info","isApplicationIdValid","app_id","app","isExamIdValid","exam","candidate_applications","_isDocumentIdValid","_isApplicationIdValid","_isExamIdValid","application_period","updatedAt","application_history","getClaimById","fileId","sessionId","tooday","myDate","todayConverted","ChangeLocationComponent","setDisplay","changeLocation","_CandidateExams","setloadingExamsDone","loadingExamsDone","loadCandidateExams","QBank","candidateExams","loadUserProfileDetails","InitializationFn","application","user_exams_temp","center_id","Shortlisted","doing_exam","periods","selected_period","district_id","room_id","loadUserApplications","findLocation","updateLocation","selectedCourse","centersModal","maxExamModal","selectedPosition","successMessage","updateLocationFunction","addLocation","location","proctoring_type","rooms","room_type","Virtual","Physical","applicationPeriods","removeDuplicatesExams","temp","removeDuplicatesNotPreparedExams","setTimeOut","temps","activeExams","selectApplication","setMaxExamModal","closeModal","selPeriod","FC_Access","UserAccessList","MY_APPLICATION","view","selected_exam_id","selected_exam_details","to","preparedExam","user_status","center_name","room_number","school_levels","UserExamStatus","Editing","Paused","Done","Removed","found","duration_min","getMinutesFromTwoDates","timeout","returnString","days","notPreparedExam","positionCourses","changeProctoring","CandidateExams","ClaimTypesEnum","setViewPosition","viewPosition","NoResult","thisExam","thisExamSheet","district_name","loadingRejectedApplications","setLoadingRejectedApplications","loadingRejectedDocuments","setLoadingRejectedDocuments","COMPLETED","document_id","whichClaimType","marks_publication","placement","whichClaimStatus","classes","displayDocClaimTitle","allCourse","thisAnswer","Index","setViewClaim","viewClaim","setClaimForm","claimForm","setClaimId","claimId","setSearchClaim","searchClaim","loadClaims","setSession","isDeleteAllowed","thisCLaim","Light","ClaimApplView","ClaimExamView","CandidateClaim","ViewPDF","setError","file_url","class_name","onLoad","setLoadingFile","frame_title","isActivationAllowed","thisPlans","getPlanTypeByKey","allPlanTypes","viewThisSession","thisPlan","planEndDate","planStartDate","CLOSED","SessionDetails","handlePlanActivation","newState","window","confirm","newData","allowed_claim_level","history","setViewThisSession","getRejectedApplicants","applicationData","objList","product","flag","prop","DocumentTitleData","documentData","documentTemp","company","end_year","school_id","start_year","year","doc_title","getRejectedDocuments","defaultReportContent","claimReportContentKeyInterface","ClaimingReport","thisLevel","setThisLevel","downloading","setDownloading","claimToPrint","setClaimToPrint","sortProperty","setSortProperty","isSorted","setIsSorted","sortOrder","setSortOrder","generateReportModal","setGenerateReportModal","setReportTitle","reportContent","setReportContent","selectAll","setSelectAll","setSelectPeriod","setSort","thisProperty","updateClaimToPrint","isChangeAllowed","FC_FilterClaims","claimLevel","selectedType","currentType","levels","ClaimLevels","reportType","querySelectorAll","FC_GeneratePDF","sortThisArray","findIndex","newArray","isSelectAllNeeded","updateReportContent","currentState","resetReportContent","viewTabs","ViewDocRequirements","viewDoc","setViewDoc","loadingImage","setLoadingImage","isFullscreen","setSetFullscreen","isDocumentExist","userDocs","isFileImage","getFileType","onDoubleClick","fullScreen","FC_AdminApplicationPositionDistinctCategory","evaluateClaim","reAssessApplication","actionTaken","setActionTaken","responseMsg","setResponseMsg","handleVerify","subClaim","api_body","sub_claim_id","evaluated_by","evaluate_claim_res","overrideDecision","patch","FC_DocValidation","APPROVED","in_education","disability","api_redux","FC_shortListing","candidate_id","commet","setMarks","profile","selectedTab","setSelectedTab","handleMarksAddition","DO_EXAM","exam_location","used_duration","number_of_question_answered","exam_start_time","exam_end_time","AdminClaimGetDocTitle","setLoadingData","loadingData","setClaimType","setCandidateId","candidateId","setDefaultSession","loadsAllClaims","loadsApplications","loadsController","loadsAlAnswers","answersheet_id","allAnswer","getAllAnswers","thisDocs","getLastClaimDate","claimsLength","AdminFilterByType","ClaimTypesInterface","DOCUMENT","AdminClaim"],"mappings":"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","file":"static/js/20.44a49f72.chunk.js","sourcesContent":["import React from \"react\";\nimport VBarChart from \"../ChartComponents/VBarChart\";\n\ntype AllClaimChartProps = {\n  ClaimTypes: {\n    title: string;\n    count: {\n      all: number;\n      accepted: number;\n      rejected: number;\n      pending: number;\n    };\n    type: string | \"all\";\n  }[];\n};\n\nconst AllClaimChart: React.FC<AllClaimChartProps> = (props) => {\n  const FC_GetAllClaimChartData = (): {\n    accepted: number[];\n    rejected: number[];\n    active: number[];\n    labels: string[];\n  } => {\n    let acceptedArray: number[] = [],\n      rejectedArray: number[] = [],\n      activeArray: number[] = [],\n      labelArray: string[] = [];\n\n    for (const typeKey in props.ClaimTypes) {\n      if (props.ClaimTypes[typeKey].type !== \"all\") {\n        acceptedArray.push(props.ClaimTypes[typeKey].count.accepted);\n        rejectedArray.push(props.ClaimTypes[typeKey].count.rejected);\n        activeArray.push(props.ClaimTypes[typeKey].count.pending);\n        labelArray.push(props.ClaimTypes[typeKey].type.replace(/_/g, \" \"));\n      }\n    }\n    return {\n      accepted: acceptedArray,\n      rejected: rejectedArray,\n      active: activeArray,\n      labels: labelArray,\n    };\n  };\n\n  return (\n    <section className=\"my-3 max-w-full bg-white\">\n      <div className=\"flex items-center justify-between px-3\">\n        <span className=\"text-gray-600 font-semibold text-xl py-4 px-0\">\n          Claim chart on country level\n        </span>\n      </div>\n      <div className=\"mb-4 pb-2 px-3\">\n        <VBarChart\n          labels={FC_GetAllClaimChartData().labels}\n          categoriesLabel={FC_GetAllClaimChartData().labels}\n          dataLabels={false}\n          yaxisText=\"(Applicants)\"\n          tooltipText=\"Claims\"\n          series={[\n            {\n              name: \"Pending Claim\",\n              data: FC_GetAllClaimChartData().active,\n            },\n            {\n              name: \"Accepted Claim\",\n              data: FC_GetAllClaimChartData().accepted,\n            },\n            {\n              name: \"Rejected Claim\",\n              data: FC_GetAllClaimChartData().rejected,\n            },\n          ]}\n          colors={[\"#4b5563\", \"#469769\", \"#d97724\"]}\n          defaultBar={{\n            borderRadius: 4,\n            horizontal: false,\n            columnWidth: \"95%\",\n            endingShape: \"rounded\",\n          }}\n          stacked={true}\n        />\n      </div>\n    </section>\n  );\n};\n\nexport default React.memo(AllClaimChart);\n","import React from \"react\";\nimport { AiFillDashboard } from \"react-icons/ai\";\nimport { MdBrightness1 } from \"react-icons/md\";\nimport { SessionPlanInterface } from \"../../../interfaces\";\nimport { education_category } from \"../../../interfaces/education_category\";\n\ntype ClaimDashBoardTitleProps = {\n  reportTitle: string;\n  education_categories: education_category[] | null;\n  loading: boolean;\n  loadingApplications: boolean;\n  loadingEducation: boolean;\n  thisEducation: education_category | null;\n  allEducation: boolean;\n  periodChanged: boolean;\n  setThisEducation: (value: education_category | null) => void;\n  thisPeriod: string;\n  setThisPeriod: (value: string) => void;\n  application_sessions: SessionPlanInterface[];\n  onPeriodChange: (period_id: string) => void;\n};\n\nconst ClaimDashBoardTitle: React.FC<ClaimDashBoardTitleProps> = (props) => {\n  return (\n    <div className=\"mt-3 rounded flex flex-col md:flex-row md:justify-between items-start\">\n      <div className=\"flex flex-row items-center gap-3 mb-2\">\n        <AiFillDashboard className=\"text-6xl text-blue-600 hidden md:block\" />\n        <div className=\"flex flex-col\">\n          <span className=\"text-blue-600 text-3xl font-bold\">\n            {props.reportTitle}\n          </span>\n        </div>\n      </div>\n\n      {/* FILTER SECTION PERIOD && EDUCATION */}\n      <section className=\"w-full md:w-auto my-2 md:my-0\">\n        {/* EDUCATION CATEGORY sections */}\n        <section>\n          {props.education_categories && props.education_categories.length > 0 && (\n            <div className=\"flex items-start md:items-center justify-start md:justify-end gap-2\">\n              {props.allEducation && (\n                <div\n                  className={`w-auto ${\n                    props.loading ||\n                    props.loadingApplications ||\n                    props.loadingEducation ||\n                    props.periodChanged\n                      ? \"cursor-not-allowed\"\n                      : \"cursor-pointer\"\n                  } ${\n                    props.thisEducation === null\n                      ? \"bg-blue-500 text-white font-bold\"\n                      : \"bg-gray-100 text-blue-800\"\n                  } mb-1 hover:font-bold py-1 hover:bg-blue-400 hover:text-white --font-bold  px-2 rounded-md flex items-center animate__animated animate__zoomIn`}\n                  onClick={() =>\n                    !props.loading &&\n                    !props.loadingEducation &&\n                    props.setThisEducation(null)\n                  }\n                >\n                  <section className=\"flex-1\">\n                    <MdBrightness1 className=\"inline-block mr-1 text-xs\" />\n                    <span>All</span>\n                  </section>\n                </div>\n              )}\n              {props.education_categories.map((education, index) => (\n                <div\n                  key={education.education_institute_id + index}\n                  className={`w-auto ${\n                    props.loading ||\n                    props.loadingApplications ||\n                    props.loadingEducation\n                      ? \"cursor-not-allowed\"\n                      : \"cursor-pointer\"\n                  } ${\n                    props.thisEducation &&\n                    education.education_institute_id ===\n                      props.thisEducation.education_institute_id\n                      ? \"bg-blue-500 text-white font-bold\"\n                      : \"bg-gray-100 text-blue-800\"\n                  } mb-1 hover:font-bold py-1 hover:bg-blue-400 hover:text-white --font-bold  px-2 rounded-md flex items-center animate__animated animate__zoomIn`}\n                  onClick={() =>\n                    !props.loading &&\n                    !props.loadingApplications &&\n                    !props.loadingEducation &&\n                    props.setThisEducation(education)\n                  }\n                >\n                  <div className=\"flex-1\">\n                    <MdBrightness1 className=\"inline-block mr-1 text-xs\" />\n                    <span>{education.education_category_title}</span>\n                  </div>\n                </div>\n              ))}\n            </div>\n          )}\n        </section>\n        {/* end EDUCATION CATEGORY sections */}\n        <div>\n          <select\n            className={`bg-white text-gray-600 border border-gray-400 rounded p-2 focus:outline-none ${\n              props.loadingApplications && \"cursor-wait\"\n            }`}\n            value={props.thisPeriod}\n            disabled={\n              props.loading ||\n              props.loadingApplications ||\n              props.loadingEducation ||\n              props.periodChanged\n            }\n            onChange={(e) => {\n              props.setThisPeriod(e.target.value);\n              props.onPeriodChange(e.target.value);\n            }}\n          >\n            {props.application_sessions.map((session, item) => (\n              <option\n                key={session.session_plan_id + item}\n                value={session.session_plan_id}\n              >\n                {session.session_plan_name}\n              </option>\n            ))}\n          </select>\n        </div>\n      </section>\n      {/* END FILTER SECTION PERIOD && EDUCATION */}\n    </div>\n  );\n};\n\nexport default React.memo(ClaimDashBoardTitle);\n","import React, { Component } from \"react\";\nimport { FaBookOpen } from \"react-icons/fa\";\nimport { connect } from \"react-redux\";\nimport {\n  Auth,\n  schoolLevelsStoreInterface,\n  getAllClaims,\n  GetClaimingTypes,\n  getAllApplications,\n  loadEducationCategories,\n  setSelectedClaimType,\n  PushPopupAlert,\n} from \"../../../actions\";\nimport {\n  getDocumentCategory,\n  getDocumentSubCategory,\n  getDocumentFields,\n} from \"../../../actions/document\";\nimport { GetAllSessionPlans } from \"../../../actions/session\";\nimport { getPositions } from \"../../../actions/settings\";\nimport { PopupAlertData } from \"../../../components/Alert/Popup\";\nimport {\n  SessionPlanInterface,\n  PositionAPI,\n  education_category,\n  PlansTypeKeys,\n  CandidateClaimInterface,\n  ClaimToPrintInterface,\n  ClaimDecisionStatus,\n} from \"../../../interfaces\";\nimport { PopupAlertTheme } from \"../../../interfaces/popupAlert\";\nimport { StoreState } from \"../../../reducers\";\nimport { ClaimingReducerType } from \"../../../reducers/claiming\";\nimport { DocumentReducerInterface } from \"../../../reducers/document\";\nimport {\n  capitalizeFirstLetter,\n  isEmptyOrSpaces,\n} from \"../../../shared/dataTest\";\nimport { DATE } from \"../../../utils/functions\";\nimport { reportClaimType } from \"../../Admin/Claiming/ClaimingReport\";\nimport { adminDisplayClaimTitle } from \"../../Claimings/Admin\";\nimport NoSession from \"../../SessionSettings/NoSession\";\nimport PieChart from \"../ChartComponents/PieChart\";\nimport ExamDashboardLabels from \"../ExamDashboard/ExamDashboardLabels\";\nimport AllClaimChart from \"./AllClaimChart\";\nimport ClaimDashBoardTitle from \"./ClaimDashBoardTitle\";\n\ninterface WaitingListDashboardProps {\n  auth: Auth;\n  application_sessions: SessionPlanInterface[] | null;\n  claiming: ClaimingReducerType;\n  documentReducer: DocumentReducerInterface;\n  systemPositions: PositionAPI[] | null;\n  schoolLevels: schoolLevelsStoreInterface;\n  loadEducationCategories: (callback: (loading: boolean) => void) => void;\n  setSelectedClaimType: Function;\n  getPositions: Function;\n  getAllClaims: Function;\n  GetClaimingTypes: Function;\n  getAllApplications: Function;\n  GetAllSessionPlans: Function;\n  getDocumentCategory: Function;\n  getDocumentSubCategory: Function;\n  getDocumentFields: Function;\n  PushPopupAlert: (alert: PopupAlertData) => void;\n}\n\ninterface WaitingListDashboardStates {\n  thisPeriod: string;\n  loading: boolean;\n  loadingSession: boolean;\n  periodChanged: boolean;\n  loadingPosition: boolean;\n  loadingApplications: boolean;\n  loadingClaims: boolean;\n  loadingDocuments: boolean;\n  loadingInstitutes: boolean;\n  loadingClarifications: boolean;\n  loadingFields: boolean;\n  thisEducation: education_category | null;\n  thisLabel: PlansTypeKeys | \"all\";\n}\nclass _ClaimDashboard extends Component<\n  WaitingListDashboardProps,\n  WaitingListDashboardStates\n> {\n  constructor(props: WaitingListDashboardProps) {\n    super(props);\n\n    this.state = {\n      thisPeriod: \"\",\n      loading: true,\n      loadingSession: true,\n      periodChanged: false,\n      loadingPosition: true,\n      loadingApplications: true,\n      loadingClaims: true,\n      loadingDocuments: true,\n      loadingInstitutes: true,\n      loadingClarifications: true,\n      loadingFields: true,\n      thisEducation: null,\n      thisLabel: \"all\",\n    };\n  }\n\n  setLoadingInstitutes = (value: boolean) => {\n    this.setState({ loadingInstitutes: value });\n  };\n\n  setLoading = (value: boolean) => {\n    this.setState({ loading: value });\n  };\n\n  setLoadingSession = (value: boolean) => {\n    this.setState({ loadingSession: value });\n  };\n\n  setPeriodChanged = (value: boolean) => {\n    this.setState({ periodChanged: value });\n  };\n\n  setLoadingPosition = (value: boolean) => {\n    this.setState({ loadingPosition: value });\n  };\n\n  setLoadingApplications = (value: boolean) => {\n    this.setState({ loadingApplications: value });\n  };\n\n  setLoadingClaims = (value: boolean) => {\n    this.setState({ loadingClaims: value });\n  };\n  setLoadingDocuments = (value: boolean) => {\n    this.setState({ loadingDocuments: value });\n  };\n\n  setLoadingClarifications = (value: boolean) => {\n    this.setState({ loadingClarifications: value });\n  };\n\n  setLoadingFields = (value: boolean) => {\n    this.setState({ loadingFields: value });\n  };\n\n  setThisEducation = (value: education_category | null) => {\n    this.setState({ thisEducation: value });\n  };\n\n  setThisLabel = (value: PlansTypeKeys | \"all\") => {\n    this.setState({ thisLabel: value });\n  };\n\n  setThisPeriod = (value: string) => {\n    this.setState({ thisPeriod: value });\n  };\n\n  componentDidMount = () => {\n    // LOADING EDUCATION CATEGORY =================================\n    if (\n      this.props.schoolLevels.education_categories === null ||\n      this.props.schoolLevels.education_categories.length === 0\n    ) {\n      this.props.loadEducationCategories(this.setLoadingInstitutes);\n    } else {\n      this.setLoadingInstitutes(false);\n    }\n    // END LOADING EDUCATION CATEGORY =================================\n\n    // LOADING APPLICATION SESSION ====================================\n    if (\n      this.props.application_sessions === null ||\n      this.props.application_sessions.length === 0\n    ) {\n      this.props.GetAllSessionPlans(\n        (status: boolean, msg: string, data?: SessionPlanInterface[]) => {\n          if (!status) {\n            this.setLoadingSession(false);\n            this.setLoading(false);\n            if (msg.length) {\n              this.props.PushPopupAlert({\n                title: msg,\n                theme: PopupAlertTheme.danger,\n              });\n            }\n            if (data && data.length > 0) {\n              let thisSession = data.find((item) => item.is_active === true);\n              this.setThisPeriod(\n                thisSession\n                  ? thisSession.session_plan_id\n                  : data[data.length - 1].session_plan_id\n              );\n              this.onPeriodChange(\n                thisSession\n                  ? thisSession.session_plan_id\n                  : data[data.length - 1].session_plan_id\n              );\n            }\n          }\n        }\n      );\n    } else if (this.state.loadingSession) {\n      this.setLoading(false);\n      this.setLoadingSession(false);\n    }\n\n    // SETTING ACTIVE SESSION ==========================\n    if (\n      isEmptyOrSpaces(this.state.thisPeriod) &&\n      !this.state.loadingSession &&\n      this.props.application_sessions &&\n      this.props.application_sessions.length > 0\n    ) {\n      let thisSession = this.props.application_sessions.find(\n        (item) => item.is_active === true\n      );\n      this.setThisPeriod(\n        thisSession\n          ? thisSession.session_plan_id\n          : this.props.application_sessions[\n              this.props.application_sessions.length - 1\n            ].session_plan_id\n      );\n      this.onPeriodChange(\n        thisSession\n          ? thisSession.session_plan_id\n          : this.props.application_sessions[\n              this.props.application_sessions.length - 1\n            ].session_plan_id\n      );\n    }\n\n    // LOADING DOCUMENT CATEGORIES ==========================\n    if (\n      !this.props.documentReducer.documentCategory &&\n      this.state.loadingDocuments\n    ) {\n      this.props.getDocumentCategory();\n      this.setLoadingDocuments(false);\n    } else if (this.state.loadingDocuments) {\n      this.setLoadingDocuments(false);\n    }\n    // LOADING DOCUMENT CLARIFICATIONS ==========================\n    if (\n      !this.props.documentReducer.documentSubCategory &&\n      this.state.loadingClarifications\n    ) {\n      this.props.getDocumentSubCategory();\n      this.setLoadingClarifications(false);\n    } else if (this.state.loadingClarifications) {\n      this.setLoadingClarifications(false);\n    }\n    // LOADING DOCUMENT FIELDS ==========================\n    if (\n      !this.props.documentReducer.documentFields &&\n      this.state.loadingFields\n    ) {\n      this.props.getDocumentFields();\n      this.setLoadingFields(false);\n    } else if (this.state.loadingFields) {\n      this.setLoadingFields(false);\n    }\n\n    // LOADING CLAIMING OF CURRENT CANDIDATES ================================\n\n    // LOADING POSITIONS ==============================================\n    if (this.props.systemPositions === null) {\n      this.props.getPositions((status: boolean, msg: string) => {\n        this.setLoadingPosition(status);\n        console.log({ status: status, msg: msg });\n        if (msg.length) {\n          this.props.PushPopupAlert({\n            title: msg,\n            theme: PopupAlertTheme.danger,\n          });\n        }\n      });\n    } else if (this.state.loadingPosition) {\n      this.setLoadingPosition(false);\n    }\n  };\n\n  onPeriodChange = (period_id: string) => {\n    this.setPeriodChanged(true);\n    this.props.getAllClaims(2, period_id, (status: boolean, msg: string) => {\n      !status && this.setPeriodChanged(false);\n      if (status === false && msg.length) {\n        this.props.PushPopupAlert({\n          title: msg,\n          theme: PopupAlertTheme.danger,\n        });\n      }\n    });\n\n    this.props.getAllApplications(period_id, (status: boolean, msg: string) => {\n      !status && this.setLoadingApplications(status);\n      if (status === false && msg.length) {\n        this.props.PushPopupAlert({\n          title: msg,\n          theme: PopupAlertTheme.danger,\n        });\n      }\n    });\n  };\n\n  getClaimInstitute = (thisClaim: CandidateClaimInterface): string | null => {\n    if (thisClaim.type_key === PlansTypeKeys.DOCUMENT_VALIDATION) {\n      return null;\n    }\n    if (thisClaim.type_key === PlansTypeKeys.APPLICATION) {\n      if (this.props.claiming.allApplications) {\n        let thisApplication = this.props.claiming.allApplications.find(\n          (item) => item._id === thisClaim.claiming_on_id\n        );\n        if (\n          thisApplication &&\n          this.props.claiming.allApplications &&\n          this.props.systemPositions\n        ) {\n          // return thisApplication.\n          let thisPosition = this.props.systemPositions.find(\n            (item) => item.position_id === thisApplication!.position\n          );\n          if (thisPosition) {\n            return thisPosition.education_institute_id.education_institute_id;\n          }\n        }\n      }\n    }\n\n    return null;\n  };\n\n  displayClaimTitle = (thisClaim: CandidateClaimInterface): string => {\n    let result: string = thisClaim.claiming_on_id;\n    if (thisClaim.type_key === PlansTypeKeys.DOCUMENT_VALIDATION) {\n      result =\n        thisClaim.userDetails.details.filter(\n          (item) => item.validation_status !== \"waiting\"\n        ).length > 0\n          ? adminDisplayClaimTitle(\n              this.props.documentReducer,\n              thisClaim.userDetails.details.filter(\n                (item) => item.validation_status !== \"waiting\"\n              ),\n              thisClaim\n            )\n          : \"Document not found\";\n    }\n    if (thisClaim.type_key === PlansTypeKeys.APPLICATION) {\n      if (this.props.claiming.allApplications) {\n        let thisApplication = this.props.claiming.allApplications.find(\n          (item) => item._id === thisClaim.claiming_on_id\n        );\n        if (\n          thisApplication &&\n          this.props.claiming.allApplications &&\n          this.props.systemPositions\n        ) {\n          let thisPosition = this.props.systemPositions.find(\n            (item) => item.position_id === thisApplication!.position\n          );\n          if (thisPosition) {\n            result = thisPosition.position_title;\n          } else {\n            result = \"Application not found\";\n          }\n        }\n      }\n    }\n\n    return result;\n  };\n\n  ClaimTypes = (\n    claims: ClaimToPrintInterface[]\n  ): {\n    title: string;\n    count: {\n      all: number;\n      accepted: number;\n      rejected: number;\n      pending: number;\n    };\n    type: PlansTypeKeys | \"all\";\n  }[] => {\n    let output: {\n      title: string;\n      count: {\n        all: number;\n        accepted: number;\n        rejected: number;\n        pending: number;\n      };\n      type: PlansTypeKeys | \"all\";\n    }[] = [\n      {\n        title: \"All claim types\",\n        count: {\n          all: claims.length,\n          accepted: claims.filter(\n            (item) => item.decision === ClaimDecisionStatus.ACCEPTED\n          ).length,\n          rejected: claims.filter(\n            (item) => item.decision === ClaimDecisionStatus.REJECTED\n          ).length,\n          pending: claims.filter((item) => item.decision === \"PENDING\").length,\n        },\n        type: \"all\",\n      },\n    ];\n\n    Object.values(PlansTypeKeys).forEach((PlansKey) => {\n      output.push({\n        title: capitalizeFirstLetter(reportClaimType(PlansKey)),\n        count: {\n          all: claims.filter((itm) => itm.claim_type === PlansKey).length,\n          accepted: claims.filter(\n            (itm) =>\n              itm.claim_type === PlansKey &&\n              itm.decision === ClaimDecisionStatus.ACCEPTED\n          ).length,\n          rejected: claims.filter(\n            (itm) =>\n              itm.claim_type === PlansKey &&\n              itm.decision === ClaimDecisionStatus.REJECTED\n          ).length,\n          pending: claims.filter(\n            (itm) => itm.claim_type === PlansKey && itm.decision === \"PENDING\"\n          ).length,\n        },\n        type: PlansKey,\n      });\n    });\n    return output;\n  };\n\n  FC_ClaimData = (\n    allClaims: CandidateClaimInterface[] | null\n  ): ClaimToPrintInterface[] => {\n    if (allClaims === null || allClaims.length <= 0) return [];\n    let arrayNew: ClaimToPrintInterface[] = [];\n    let n: number = 1;\n    // LOOP IN ALL CLAIM ONE BY ONE ###########################\n    for (const key in allClaims) {\n      if (Object.prototype.hasOwnProperty.call(allClaims, key)) {\n        // LOOP IN ALL CLAIM OF ONE FILE ONE BY ONE ===========================\n        for (const keyClaim in allClaims[key].claims) {\n          if (\n            Object.prototype.hasOwnProperty.call(\n              allClaims[key].claims,\n              keyClaim\n            )\n          ) {\n            const element = allClaims[key].claims[keyClaim];\n            let dataArray: ClaimToPrintInterface = {\n              claim_id: n,\n              names:\n                allClaims[key].userDetails.user_info.fname +\n                \" \" +\n                allClaims[key].userDetails.user_info.lname,\n              gender: allClaims[key].userDetails.user_info.sex\n                ? \"Male\"\n                : \"Female\",\n              national_id: allClaims[key].userDetails.n_id,\n              phone: allClaims[key].userDetails.phone_number,\n              email: allClaims[key].userDetails.email,\n              claim_type: allClaims[key].type_key,\n              claim_level: element.level,\n              education_category: this.getClaimInstitute(allClaims[key]),\n              claim_session: this.state.thisPeriod,\n              date: DATE(element.createdAt),\n              decision: element.decision_taken_status\n                ? element.decision_taken_status\n                : \"PENDING\",\n              claim_title: this.displayClaimTitle(allClaims[key]),\n            };\n            arrayNew.push(dataArray);\n            n++;\n          }\n        }\n      }\n    }\n    return arrayNew;\n  };\n\n  getClaimDataByTitle = (\n    allData: {\n      title: string;\n      count: {\n        all: number;\n        accepted: number;\n        rejected: number;\n        pending: number;\n      };\n      type: PlansTypeKeys | \"all\";\n    }[]\n  ):\n    | {\n        title: string;\n        count: {\n          all: number;\n          accepted: number;\n          rejected: number;\n          pending: number;\n        };\n        type: PlansTypeKeys | \"all\";\n      }\n    | undefined => {\n    return allData.find((item) => item.type === this.state.thisLabel);\n  };\n\n  render() {\n    if (\n      this.props.application_sessions &&\n      this.props.application_sessions.length === 0\n    ) {\n      return <NoSession />;\n    }\n\n    if (\n      this.state.loading ||\n      this.props.application_sessions === null ||\n      this.props.claiming.allClaims === null\n    ) {\n      return (\n        <div className=\"text-center mt-7 font-bold text-4xl text-gray-400 animate-pulse\">\n          Loading Data...\n        </div>\n      );\n    }\n\n    return (\n      <div>\n        {/* HEADER TITLE */}\n        <ClaimDashBoardTitle\n          education_categories={this.props.schoolLevels.education_categories}\n          loading={this.state.loading}\n          loadingApplications={this.state.loadingApplications}\n          loadingEducation={this.state.loadingInstitutes}\n          thisEducation={this.state.thisEducation}\n          setThisEducation={this.setThisEducation}\n          thisPeriod={this.state.thisPeriod}\n          setThisPeriod={this.setThisPeriod}\n          application_sessions={this.props.application_sessions}\n          reportTitle={\"Claim Dashboard\"}\n          allEducation={true}\n          periodChanged={this.state.periodChanged}\n          onPeriodChange={this.onPeriodChange}\n        />\n        {/* END HEADER TITLE */}\n\n        {/* ===================================================================================== */}\n\n        {/* CLAIM ALL STATUS LABELS ======================================= */}\n        <section className=\"my-2\">\n          <div className=\"text-2xl font-semibold text-gray-600\">\n            Claim type:\n            <select\n              className={`bg-white text-gray-600 border-2 border-blue-600 rounded-lg px-2 py-1 focus:outline-none`}\n              value={this.state.thisLabel}\n              onChange={(e) =>\n                this.setThisLabel(e.target.value as PlansTypeKeys | \"all\")\n              }\n            >\n              {this.ClaimTypes(\n                this.FC_ClaimData(this.props.claiming.allClaims)!\n              ).map((item, index: number) => (\n                <option key={item.type + index} value={item.type}>\n                  {capitalizeFirstLetter(item.title.toLocaleLowerCase())}\n                </option>\n              ))}\n            </select>\n          </div>\n          {this.getClaimDataByTitle(\n            this.ClaimTypes(this.FC_ClaimData(this.props.claiming.allClaims)!)\n          ) && (\n            <ExamDashboardLabels\n              dataLabels={[\n                {\n                  title: \"Total claim\",\n                  icon: FaBookOpen,\n                  iconColor: \"blue\",\n                  count: this.getClaimDataByTitle(\n                    this.ClaimTypes(\n                      this.FC_ClaimData(this.props.claiming.allClaims)!\n                    )\n                  )!.count.all,\n                },\n                {\n                  title: \"Accepted Claim\",\n                  icon: FaBookOpen,\n                  iconColor: \"green\",\n                  count: this.getClaimDataByTitle(\n                    this.ClaimTypes(\n                      this.FC_ClaimData(this.props.claiming.allClaims)!\n                    )\n                  )!.count.accepted,\n                },\n                {\n                  title: \"Rejected Claim\",\n                  icon: FaBookOpen,\n                  iconColor: \"yellow\",\n                  count: this.getClaimDataByTitle(\n                    this.ClaimTypes(\n                      this.FC_ClaimData(this.props.claiming.allClaims)!\n                    )\n                  )!.count.rejected,\n                },\n                {\n                  title: \"Pending Claim\",\n                  icon: FaBookOpen,\n                  iconColor: \"gray\",\n                  count: this.getClaimDataByTitle(\n                    this.ClaimTypes(\n                      this.FC_ClaimData(this.props.claiming.allClaims)!\n                    )\n                  )!.count.pending,\n                },\n              ]}\n              labelsOnRow={5}\n            >\n              <div className=\"flex justify-center\">\n                <PieChart\n                  options={{\n                    labels: [\"Accepted\", \"Rejected\", \"Pending\"],\n                    legend: {\n                      show: false,\n                      position: \"bottom\",\n                      horizontalAlign: \"center\",\n                      fontSize: \"16px\",\n                      itemMargin: {\n                        horizontal: 3,\n                        vertical: 0,\n                      },\n                    },\n                    plotOptions: {\n                      pie: {\n                        donut: {\n                          labels: {\n                            show: true,\n                            name: {\n                              show: true,\n                              fontSize: \"16px\",\n                              //   fontFamily: \"Rubik\",\n                              color: \"#2564eb\",\n                              offsetY: -10,\n                            },\n                            value: {\n                              show: true,\n                              fontSize: \"20px\",\n                              fontFamily: \"Helvetica, Arial, sans-serif\",\n                              color: \"#2564eb\",\n                              offsetY: 10,\n                              formatter: function (val) {\n                                return val;\n                              },\n                            },\n                            total: {\n                              show: true,\n                              label: \"Total\",\n                              color: \"#2564eb\",\n                              formatter: function (w) {\n                                return w.globals.seriesTotals.reduce(\n                                  (a: number, b: number) => {\n                                    return a + b;\n                                  },\n                                  0\n                                );\n                              },\n                            },\n                          },\n                        },\n                      },\n                    },\n                    colors: [\"#469769\", \"#d97724\", \"#4b5563\"],\n                  }}\n                  series={[\n                    this.getClaimDataByTitle(\n                      this.ClaimTypes(\n                        this.FC_ClaimData(this.props.claiming.allClaims)!\n                      )\n                    )!.count.accepted,\n                    this.getClaimDataByTitle(\n                      this.ClaimTypes(\n                        this.FC_ClaimData(this.props.claiming.allClaims)!\n                      )\n                    )!.count.rejected,\n                    this.getClaimDataByTitle(\n                      this.ClaimTypes(\n                        this.FC_ClaimData(this.props.claiming.allClaims)!\n                      )\n                    )!.count.pending,\n                  ]}\n                  width={210}\n                />\n              </div>\n            </ExamDashboardLabels>\n          )}\n        </section>\n        {/* CLAIM STATUS ON COUNTRY LEVEL LABELS ======================================= */}\n\n        {/* ===================================================================================== */}\n\n        {/* EXAM PERFORMANCE ON COUNTRY CHART ======================================= */}\n        <AllClaimChart\n          ClaimTypes={this.ClaimTypes(\n            this.FC_ClaimData(this.props.claiming.allClaims)\n          )}\n        />\n        {/* END EXAM PERFORMANCE ON COUNTRY CHART ======================================= */}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = ({\n  auth,\n  system_settings,\n  sessionPlan,\n  claiming,\n  document,\n  schoolLevels,\n}: StoreState): {\n  auth: Auth;\n  application_sessions: SessionPlanInterface[] | null;\n  systemPositions: PositionAPI[] | null;\n  claiming: ClaimingReducerType;\n  documentReducer: DocumentReducerInterface;\n  schoolLevels: schoolLevelsStoreInterface;\n} => {\n  return {\n    auth: auth,\n    application_sessions: sessionPlan.allSessionPlans,\n    systemPositions: system_settings.systemPositions,\n    claiming,\n    documentReducer: document,\n    schoolLevels,\n  };\n};\n\nexport const ClaimDashboard = connect(mapStateToProps, {\n  getAllClaims,\n  GetClaimingTypes,\n  getAllApplications,\n  GetAllSessionPlans,\n  loadEducationCategories,\n  getDocumentCategory,\n  getDocumentSubCategory,\n  getDocumentFields,\n  setSelectedClaimType,\n  getPositions,\n  PushPopupAlert,\n})(_ClaimDashboard);\n","import { education_category } from \"../interfaces\";\nimport { PositionAPI } from \"../interfaces/position\";\nimport {\n  CustomeAccessInterface,\n  PostSchoolInterface,\n  RoleToUserInterface,\n  SchoolInfoInterface,\n  SystemUserRoleInterface,\n} from \"./interfaces\";\n\nexport const data_posts_school: PostSchoolInterface[] = [];\n\nexport const isEmptyOrSpaces = (str: string): boolean => {\n  return str === null || str.match(/^ *$/) !== null;\n};\n\nexport const getUserTitle = (\n  accessRoles: SystemUserRoleInterface[],\n  roleId: string\n): string => {\n  const result = accessRoles.find((e) => e.system_user_role_id === roleId);\n  return result ? result.role : \"\";\n};\n\nexport const getRoleById = (\n  roles: SystemUserRoleInterface[],\n  roleId: string\n): SystemUserRoleInterface => {\n  return roles.filter((role) => role.system_user_role_id === roleId)[0];\n};\n\nexport const getInstituteById = (\n  institutes: education_category[],\n  instituteId: string\n): education_category | undefined => {\n  return institutes.find((item) => item.education_institute_id === instituteId);\n};\n\nexport const getPositionById_old = (\n  positions: PositionAPI[],\n  position_id: string\n): PositionAPI => {\n  console.log({\n    positions,\n    position_id,\n    data: positions.filter(\n      (position) => position.position_id === position_id\n    )[0],\n  });\n  return positions.filter(\n    (position) => position.position_id === position_id\n  )[0];\n};\n\nexport const getPositionById = (\n  positions: PositionAPI[],\n  position_id: string\n): PositionAPI | undefined => {\n  return positions.find((position) => position.position_id === position_id);\n};\n\nexport const getSchoolById = (\n  schools: SchoolInfoInterface[],\n  school_id: string\n): SchoolInfoInterface => {\n  return schools.filter((school) => school.school_id === school_id)[0];\n};\n\nexport const getPostById = (\n  posts: PostSchoolInterface[],\n  post_id: string\n): PostSchoolInterface => {\n  return posts.filter((post) => post.school_id === post_id)[0];\n};\n\nexport const getPostsBySchoolId = (\n  posts: PostSchoolInterface[],\n  school_id: string\n): PostSchoolInterface[] => {\n  return posts.filter((post) => post.school_id === school_id);\n};\n\nexport const getPostsByIds = (\n  posts: PostSchoolInterface[],\n  school_id: string,\n  position_id: string\n): PostSchoolInterface[] => {\n  return posts.filter(\n    (post) => post.school_id === school_id && post.position_id === position_id\n  );\n};\n\nexport const displayDate = (dateToDisplay: Date): string => {\n  return new Intl.DateTimeFormat(\"en-GB\", {\n    year: \"numeric\",\n    month: \"long\",\n    day: \"2-digit\",\n  }).format(dateToDisplay);\n};\n\nexport const userAccess = (\n  defaultAccess: RoleToUserInterface,\n  customAccess: CustomeAccessInterface\n): RoleToUserInterface => {\n  // const data = defaultAccess.access.map((default,index,customAccess)=>{\n  //   let data_custom = customAccess\n  //   if\n  // })\n  // return customAccess.filter((custom) => custom.id === accecc_id)[0];\n  return defaultAccess;\n};\n\n// export const groupBy = (list: [], keyGetter: Function) => {\n//   const map = new Map();\n//   list.forEach((item) => {\n//     const key = keyGetter(item);\n//     const collection = map.get(key);\n//     if (!collection) {\n//       map.set(key, [item]);\n//     } else {\n//       collection.push(item);\n//     }\n//   });\n//   return map;\n// };\n\nexport const toTwoDigit = (value: number): string => {\n  var dec = value - Math.floor(value);\n  value = value - dec;\n  return (\"0\" + value).slice(-2) + dec.toString().substr(1);\n};\n\nexport const toAnyDigit = (\n  value: string | number,\n  padding: number = 3\n): string => {\n  var zeroes = new Array(padding + 1).join(\"0\");\n  return (zeroes + value).slice(-padding);\n};\n\nexport const capitalizeFirstLetter = (value: string): string => {\n  return value.charAt(0).toUpperCase() + value.slice(1);\n};\n\nexport const isDateExpiried = (paramDate: string) => {\n  const thisDate = new Date(paramDate);\n  const today = new Date();\n  if (thisDate.getTime() < today.getTime()) {\n    return true;\n  }\n\n  return false;\n};\n","import { candidateExamStoreInterface } from \"../actions/candidate_exam\";\nimport {\n  applicationExamAPI,\n  ApplicationPeriodGet,\n} from \"../interfaces/application\";\nimport { ExamAnswerSheetDone } from \"../interfaces/exam\";\nimport { PositionAPI, PositionAPICourse } from \"../interfaces/position\";\nimport { questionType, questionTypeElements } from \"../interfaces/question\";\nimport moment from \"moment-timezone\";\nimport { TimeZone } from \"./app.config\";\nimport { questionTypeElementsType } from \"@mastrecruit/common\";\n\nconst today = moment().tz(TimeZone);\n\nexport const getQuestionType = (\n  question_types: questionType[] | null,\n  type_id: string\n) => {\n  let type: questionTypeElementsType | null = null;\n  if (question_types !== null) {\n    let check = question_types.find((itm) => itm.id === type_id);\n    if (check !== undefined) {\n      let check_type = questionTypeElements.find(\n        (itm) => check && itm.key === check.element\n      );\n      if (check_type !== undefined) {\n        type = check_type.key;\n      }\n    }\n  }\n  return type;\n};\n\nexport const findTotalMarks = (\n  courses: PositionAPICourse[],\n  results: ExamAnswerSheetDone[] | null\n) => {\n  if (results !== null) {\n    let sum: number = 0;\n    for (let course of courses) {\n      let test = results.find((itm) => itm.course === course.course_id);\n      if (test !== undefined) {\n        sum = sum + test.total_marks;\n      }\n    }\n    return sum.toFixed(2);\n  } else {\n    return \"Wait...\";\n  }\n};\n\nexport const CheckIfExamDone = (\n  courses: PositionAPICourse[],\n  results: ExamAnswerSheetDone[] | null\n) => {\n  let res: boolean = false;\n  if (results !== null) {\n    for (let course of courses) {\n      let test = results.find((itm) => itm.course === course.course_id);\n      if (test !== undefined) {\n        res = true;\n      }\n    }\n  }\n  return res;\n};\n\nexport const CheckIfNoPendingExam = (\n  //NOT COMPLETE --> TO BE DONE\n  courses: PositionAPICourse[],\n  results: ExamAnswerSheetDone[] | null\n) => {\n  let res: boolean = false;\n  if (results !== null) {\n    for (let course of courses) {\n      let test = results.find((itm) => itm.course === course.course_id);\n      if (test !== undefined) {\n        res = true;\n      }\n    }\n  }\n  return res;\n};\n\nexport const validateCalculatedFormula = (\n  formula: string\n): { status: boolean; msg: string } => {\n  let characters: string[] = [];\n  if (\n    formula === undefined ||\n    formula === \"\" ||\n    formula.length === undefined ||\n    formula.length === 0\n  ) {\n    return {\n      status: false,\n      msg: `Please type a formula`,\n    };\n  }\n  if (formula.length < 3) {\n    return {\n      status: false,\n      msg: `The formula in not valid, it is not complete!`,\n    };\n  }\n  for (let el of formula) {\n    characters = [...characters, el];\n  }\n  if (characters[0] !== `\"`) {\n    return {\n      status: false,\n      msg: `Formula should start with (\") character`,\n    };\n  }\n  if (characters.filter((itm) => itm === `\"`).length < 2) {\n    return {\n      status: false,\n      msg: `Formula is missing closing (\") character`,\n    };\n  }\n  if (characters.filter((itm) => itm === `\"`).length > 2) {\n    return {\n      status: false,\n      msg: `Formula is invalid, because it has many (\") characters (${\n        characters.filter((itm) => itm === `\"`).length\n      })`,\n    };\n  }\n  if (\n    characters[characters.length - 1] !== `\"` &&\n    characters.filter((itm) => itm === `\"`).length === 2\n  ) {\n    let nextCharacter: string = \"\";\n    for (let i = 0; i < characters.length; i++) {\n      if (characters[i] === `\"` && i !== 0) {\n        nextCharacter = characters[i + 1];\n      }\n    }\n    if (nextCharacter !== `;`) {\n      return {\n        status: false,\n        msg: `Formula is missing separation character (;) between formula and error`,\n      };\n    }\n    if (characters[characters.length - 1] === `;`) {\n      return {\n        status: false,\n        msg: `Formula is missing error after (;) character`,\n      };\n    }\n  }\n  return {\n    status: true,\n    msg: `Formula is valid`,\n  };\n};\n\nexport function convertFromStringToDate(responseDate: string) {\n  let dateComponents = responseDate.split(\"T\");\n  let datePieces = dateComponents[0].split(\"-\");\n  let timePieces = dateComponents[1].split(\":\");\n  return new Date(\n    parseInt(datePieces[2]),\n    parseInt(datePieces[1]) - 1,\n    parseInt(datePieces[0]),\n    parseInt(timePieces[0]),\n    parseInt(timePieces[1]),\n    parseInt(timePieces[2])\n  );\n}\n\nexport enum ExamTimeStatus {\n  Waiting = \"Waiting\",\n  Online = \"Online\",\n  Expired = \"Expired\",\n}\n\nexport const validateExamDate = (\n  exam_date: string,\n  start_time: string,\n  end_time: string\n) => {\n  let status: ExamTimeStatus = ExamTimeStatus.Expired;\n  // Dates\n  const toDay: Date = new Date(today.toString());\n  const examDate = new Date(exam_date);\n\n  // Time\n  const startTime = convertFromStringToDate(\n    examDate.getDate() +\n      \"-\" +\n      (examDate.getMonth() + 1) +\n      \"-\" +\n      examDate.getFullYear() +\n      \"T\" +\n      start_time +\n      \":0\"\n  );\n  const endTime = convertFromStringToDate(\n    examDate.getDate() +\n      \"-\" +\n      (examDate.getMonth() + 1) +\n      \"-\" +\n      examDate.getFullYear() +\n      \"T\" +\n      end_time +\n      \":0\"\n  );\n\n  // check exam date\n  if (\n    examDate.getDate() > toDay.getDate() ||\n    examDate.getMonth() > toDay.getMonth() ||\n    examDate.getFullYear() > toDay.getFullYear()\n  ) {\n    status = ExamTimeStatus.Waiting;\n  }\n\n  if (\n    examDate.getDate() < toDay.getDate() ||\n    examDate.getMonth() < toDay.getMonth() ||\n    examDate.getFullYear() < toDay.getFullYear()\n  ) {\n    status = ExamTimeStatus.Expired;\n  }\n\n  if (\n    examDate.getDate() === toDay.getDate() &&\n    examDate.getMonth() === toDay.getMonth() &&\n    examDate.getFullYear() === toDay.getFullYear()\n  ) {\n    if (startTime.getTime() > toDay.getTime()) {\n      status = ExamTimeStatus.Waiting;\n    } else if (\n      startTime.getTime() <= toDay.getTime() &&\n      endTime.getTime() >= toDay.getTime()\n    ) {\n      status = ExamTimeStatus.Online;\n    } else {\n      status = ExamTimeStatus.Expired;\n    }\n  }\n  // console.log(\n  //   \"Dates comparison: \" + examDate.getDate() + \"=>\" + toDay.getDate()\n  // );\n  // console.log(\"Exam Status: \", status);\n  return status;\n};\n\nexport const InitializeExamsDone = (\n  selected_period: ApplicationPeriodGet | null,\n  selectedPosition: PositionAPI | null,\n  candidateExam: candidateExamStoreInterface,\n  loadExamsDone: (\n    periodId: string,\n    userId: string,\n    callback: (loading: boolean) => void\n  ) => void,\n  user_id: string,\n  setLoadingExamsDone: (status: boolean) => void,\n  selectedExams: applicationExamAPI[] | null,\n  InitializeExamDetails: (\n    periodId: string,\n    courseId: string,\n    district_id: string,\n    center_id: string,\n    room_id: string,\n    position: PositionAPI,\n    start_exam: boolean,\n    callback: (loading: boolean) => void\n  ) => void,\n  setLoadingExams: (status: boolean) => void\n) => {\n  if (selected_period !== null && selectedPosition !== null) {\n    loadExamsDone(\n      selected_period.session_plan_id,\n      user_id,\n      setLoadingExamsDone\n    );\n    for (let course of selectedPosition.courses) {\n      let testDone = candidateExam.user_exams_temp.find(\n        (itm) => itm.course === course.course_id\n      );\n      if (testDone === undefined) {\n        let center_id = selectedExams?.find(\n          (itm) => itm.course_id === course.course_id\n        );\n        if (center_id !== undefined) {\n          InitializeExamDetails(\n            selected_period.session_plan_id,\n            course.course_id,\n            center_id.district_id,\n            center_id.center_id,\n            center_id.room_id,\n            selectedPosition,\n            false,\n            setLoadingExams\n          );\n        }\n      }\n    }\n  }\n};\n\nexport const getActiveExam = (\n  candidateExam: candidateExamStoreInterface\n): ExamAnswerSheetDone | null => {\n  if (candidateExam.user_exams_done.length > 0) {\n    for (let exam of candidateExam.user_exams_done) {\n      if (\n        validateExamDate(\n          exam.exam_date,\n          exam.exam_start_time,\n          exam.exam_end_time\n        ) === ExamTimeStatus.Online\n      ) {\n        return exam;\n      }\n    }\n  }\n  return null;\n};\n\nexport const proctoringDefaultRules: {\n  rule: string;\n  status: boolean;\n  caption: string;\n}[] = [\n  {\n    rule: \"right_click_enabled\",\n    status: false,\n    caption: \"Enable right click\",\n  },\n  {\n    rule: \"copy_enabled\",\n    status: false,\n    caption: \"Enable copy\",\n  },\n  {\n    rule: \"paste_enabled\",\n    status: false,\n    caption: \"Enable paste\",\n  },\n  {\n    rule: \"stop_candidate_when_comeback\",\n    status: false,\n    caption: \"Enable Candidate when coming back\",\n  },\n  {\n    rule: \"allow_to_leave_browser\",\n    status: false,\n    caption: \"Enable to leave browser\",\n  },\n];\n","import React, { FC, ReactElement, ReactNode } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Auth, System } from \"../../actions\";\nimport { StoreState } from \"../../reducers\";\nimport { NavToogle, PageHasSubNav } from \"../../actions\";\nimport { MdBrightness1, MdSearch } from \"react-icons/md\";\n\n// props for the component\ninterface AppProps {\n  auth: Auth;\n  system: System;\n  PageHasSubNav: Function;\n  NavToogle: Function;\n  children: ReactNode;\n}\n//\ninterface AppState {\n  loading: boolean;\n}\n\nclass _SideNavigation extends React.Component<AppProps, AppState> {\n  constructor(props: AppProps) {\n    super(props);\n\n    this.state = {\n      loading: false,\n    };\n  }\n\n  componentDidMount = () => this.props.PageHasSubNav(true);\n  componentWillUnmount = () => this.props.PageHasSubNav(false);\n\n  render() {\n    const isAuthenticated = this.props.auth.isAuthenticated;\n\n    if (isAuthenticated === false) {\n      return null;\n    }\n\n    const navActive = this.props.system.navigation;\n    return (\n      <div\n        className={`fixed w-48 p-1 pr-2 pl-6 text-gray-700 bg-white ${\n          navActive === true ? \"lg:left-16  left-16\" : \" -left-72 lg:left-16\"\n        }  top-0 bottom-0 pt-20 z-30 shadow-lg  transition-all duration-500 ease-in-out overflow-y-auto`}\n      >\n        {this.props.children}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = ({\n  auth,\n  system,\n}: StoreState): { auth: Auth; system: System } => {\n  return { auth: auth, system: system };\n};\n\nexport const SideNavigation = connect(mapStateToProps, {\n  NavToogle,\n  PageHasSubNav,\n})(_SideNavigation);\n\n//************************************ FORM SEARCH **************************************** */\n\ntype SearchComponentInterface = {\n  data: any[];\n};\n\nexport const Search: FC<SearchComponentInterface> = ({\n  data,\n}): ReactElement => {\n  return (\n    <div className=\"m-1 rounded-md shadow-md border border-blue-400 bg-white p-1 flex \">\n      <label htmlFor=\"search-text\" className=\"inline-block text-2xl\">\n        <MdSearch className=\"inline-block text-blue-400\" />\n      </label>\n      <input\n        type=\"search\"\n        className=\"outline-none bg-transparent flex-1 pl-1\"\n        placeholder=\"Search\"\n        id=\"search-text\"\n      />\n    </div>\n  );\n};\n\n//************************************ FORM SEARCH **************************************** */\n\ntype MainItemComponentInterface = {\n  title: string;\n  icon?: any;\n  active?: boolean;\n  count?: number;\n};\n\n/**\n *\n * @param param0\n * @returns\n */\nexport const MainItem: FC<MainItemComponentInterface> = ({\n  title = \"\",\n  icon = MdBrightness1,\n  active = false,\n  count = 0,\n}): ReactElement => {\n  const IconDefined = icon;\n  return (\n    <section\n      className={`${\n        active === true\n          ? \"bg-blue-500 text-white font-bold\"\n          : \"bg-blue-100 text-blue-800\"\n      } mb-1 hover:font-bold py-1 hover:bg-blue-400 hover:text-white --font-bold  px-2 rounded-md flex cursor-pointer items-center`}\n    >\n      <section className=\"flex-1\">\n        <IconDefined className=\"inline-block mr-1 text-xs\" />\n        <span>{title}</span>\n      </section>\n\n      {count > 0 ? (\n        <span className=\"px-0.5 my-1 text-xs bg-blue-600 text-white rounded-full\">\n          {count}\n        </span>\n      ) : null}\n    </section>\n  );\n};\n\n//************************************ FORM SEARCH **************************************** */\n\ntype SubItemContainerComponentInterface = {\n  children: ReactNode;\n};\n\n/**\n *\n * @param param0\n * @returns\n */\nexport const SubItemContainer: FC<SubItemContainerComponentInterface> = ({\n  children,\n}): ReactElement => {\n  return (\n    <div className=\"ml-3 overflow-y-auto border-l-2 border-blue-200 -mt-1 pt-2 mb-2 pl-1 cursor-pointer\">\n      {children}\n    </div>\n  );\n};\n\n//************************************ FORM SEARCH **************************************** */\n\ntype SubItemComponentInterface = {\n  title: string;\n  icon?: any;\n  active?: boolean;\n  count?: number;\n};\n\n/**\n *\n * @param param0\n * @returns\n * @important Remenber to use these components inside the <SubItemContainer>...</SubItemContainer>\n */\nexport const SubItem: FC<SubItemComponentInterface> = ({\n  title = \"\",\n  icon = MdBrightness1,\n  active = false,\n  count = 0,\n}): ReactElement => {\n  const IconDefined = icon;\n\n  return (\n    <div\n      className={`animate__animated animate__zoomIn animate__faster ${\n        active === true ? \"bg-blue-500 text-white font-bold\" : \" text-blue-800\"\n      } text-blue-800 bg-blue-200 rounded-md px-1 mb-1 flex items-center py-1 font-bold`}\n    >\n      <IconDefined\n        className={`inline-block mr-0.1 text-xs ${\n          active === true ? \"text-white\" : \"\"\n        }`}\n      />\n      <span\n        className={`inline-block pl-1 ${active === true ? \"text-white\" : \"\"}`}\n      >\n        {title}\n      </span>\n      {count >= 1 ? (\n        <span\n          className={`text-sm fint-bold ${active === true ? \"text-white\" : \"\"}`}\n        >\n          {count}\n        </span>\n      ) : null}\n    </div>\n  );\n};\n","import React, { useEffect, useState } from \"react\";\nimport { BiSort } from \"react-icons/bi\";\nimport { MdNavigateBefore, MdNavigateNext, MdSearch } from \"react-icons/md\";\n\nconst FC_makeID = (length: number = 5): string => {\n  let result: string = \"\";\n  let characters: string =\n    \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\n  let charactersLength = characters.length;\n  for (let i: number = 0; i < length; i++) {\n    result += characters.charAt(Math.floor(Math.random() * charactersLength));\n  }\n  return result;\n};\n\nexport const sortThisColumn = (\n  tableId: string,\n  colIndex: number = 0,\n  dir: \"asc\" | \"desc\" = \"asc\"\n) => {\n  var table,\n    rows,\n    switching,\n    i,\n    x,\n    y,\n    shouldSwitch,\n    switchcount = 0;\n  table = document.getElementById(tableId) as HTMLTableElement;\n  switching = true;\n  /* Make a loop that will continue until\n  no switching has been done: */\n  if (table) {\n    while (switching) {\n      //start by saying: no switching is done:\n      switching = false;\n      rows = table.rows;\n      /*Loop through all table rows (except the\n    first, which contains table headers):*/\n      for (i = 1; i < rows.length - 1; i++) {\n        //start by saying there should be no switching:\n        shouldSwitch = false;\n        /*Get the two elements you want to compare,\n      one from current row and one from the next:*/\n        x = rows[i].getElementsByTagName(\"TD\")[colIndex];\n        y = rows[i + 1].getElementsByTagName(\"TD\")[colIndex];\n        /*check if the two rows should switch place,\n      based on the direction, asc or desc:*/\n        if (dir === \"asc\" && x && y) {\n          if (x.innerHTML.toLowerCase() > y.innerHTML.toLowerCase()) {\n            //if so, mark as a switch and break the loop:\n            shouldSwitch = true;\n            break;\n          }\n        } else if (dir === \"desc\" && x && y) {\n          if (x.innerHTML.toLowerCase() < y.innerHTML.toLowerCase()) {\n            //if so, mark as a switch and break the loop:\n            shouldSwitch = true;\n            break;\n          }\n        }\n      }\n      if (shouldSwitch && rows[i].parentNode) {\n        /*If a switch has been marked, make the switch\n      and mark that a switch has been done:*/\n        rows[i].parentNode!.insertBefore(rows[i + 1], rows[i]);\n        switching = true;\n        //Each time a switch is done, increase this count by 1:\n        switchcount++;\n      } else {\n        /*If no switching has been done AND the direction is \"asc\",\n      set the direction to \"desc\" and run the while loop again.*/\n        if (switchcount === 0 && dir === \"asc\") {\n          dir = \"desc\";\n          switching = true;\n        }\n      }\n      // if (i === 0) continue;\n      // rows.cells[i].style.backgroundColor = \"blue\";\n    }\n  }\n};\n\nexport interface TableColumnsInterface {\n  columnTitle: JSX.Element | string;\n  alignText: string;\n  padding?: string;\n  isSortAllowed?: boolean;\n}\n\ninterface TableProps {\n  columns: TableColumnsInterface[];\n  rows: Function;\n  hideColumns?: boolean;\n  pagination?: boolean;\n  search?: boolean;\n  tableSize?: string;\n  tableClass?: string;\n  tableId?: string;\n  rounded?: boolean;\n  searchBG?: string;\n  thColor?: string;\n  loading?: boolean;\n}\n\nconst Table: React.FC<TableProps> = (props) => {\n  const startPage = 1;\n  const tableId =\n    !props.tableId || props.tableId === \"myTable\" ? FC_makeID() : props.tableId;\n  let table: HTMLElement, tr: HTMLCollectionOf<HTMLTableRowElement>;\n  const [totalItems, setTotalItems] = useState<number>(0);\n  const [totalPages, setTotalPages] = useState<number>(1);\n  const [currentPage, setCurrentPage] = useState<number>(1);\n  const [pages, setPages] = useState<number[]>();\n  const [pageSize, setPageSize] = useState<number>(10);\n  const [startIndex, setStartIndex] = useState<number>(0);\n  const [endIndex, setEndIndex] = useState<number>(0);\n\n  useEffect(() => {\n    props.pagination && tablePagination();\n  });\n\n  const filterTable = (\n    data: string,\n    filterType?: \"default\" | \"field\"\n  ): void => {\n    var filter, tr, td, rows: number, cols: number, txtValue;\n    if (filterType === \"field\" && data === \"all\") data = \"\";\n    filter = data.toLowerCase();\n    table = document.getElementById(tableId!)!;\n    tr = table.getElementsByTagName(\"tr\");\n    for (rows = 0; rows < tr.length; rows++) {\n      for (cols = 0; cols < props.columns.length; cols++) {\n        td = tr[rows].getElementsByTagName(\"td\")[cols];\n        if (td) {\n          txtValue = td.textContent || td.innerText;\n          if (txtValue.toLowerCase().indexOf(filter) > -1) {\n            tr[rows].style.display = \"\";\n            break;\n          } else {\n            tr[rows].style.display = \"none\";\n          }\n        }\n      }\n    }\n  };\n\n  const tablePagination = (): void => {\n    table = document.getElementById(tableId)!;\n    tr = table.getElementsByTagName(\"tr\");\n    setTotalItems(tr.length);\n    setTotalPages(Math.ceil(totalItems / pageSize));\n\n    // calculate start and end item indexes on the current page\n    setStartIndex((currentPage - 1) * pageSize);\n    setEndIndex(Math.min(startIndex + pageSize - 1, totalItems - 1));\n\n    /**\n     * TODO!\n     * There is a problem with this condition\n     */\n    let _pages = Array.from(Array(totalPages + 1 - startPage).keys()).map(\n      (i) => startPage + i\n    );\n    if (!pages || _pages.length !== pages.length) {\n      setPages(_pages);\n    }\n\n    for (let i: number = 0; i < tr.length; i++) {\n      if (i >= startIndex && i <= endIndex) {\n        tr[i].style.display = \"\";\n      } else {\n        tr[i].style.display = \"none\";\n      }\n    }\n  };\n\n  return (\n    <div className={`${props.tableSize} overflow-x-auto`}>\n      {/* search box  */}\n      {props.search && (\n        <div className={`${props.searchBG} w-full mb-2`}>\n          {props.search && (\n            <div className=\"bg-white rounded flex items-center w-full p-2 border-2 border-gray-500\">\n              <MdSearch className=\"h-5 w-5 fill-current text-gray-400\" />\n              <input\n                type=\"search\"\n                placeholder=\"search\"\n                onChange={(e) => filterTable(e.target.value)}\n                className=\"w-full h-6 pl-4 text-sm outline-none focus:outline-none bg-white\"\n                disabled={props.loading}\n              />\n\n              {props.pagination && (\n                <div className=\"select\">\n                  <select\n                    className=\"text-base outline-none focus:outline-none bg-white\"\n                    onChange={(e) => setPageSize(Number(e.target.value))}\n                    disabled={props.loading}\n                  >\n                    <option value=\"10\">10</option>\n                    <option value=\"25\">25</option>\n                    <option value=\"50\">50</option>\n                    <option value=\"100\">100</option>\n                  </select>\n                </div>\n              )}\n            </div>\n          )}\n        </div>\n      )}\n      <div className=\"overflow-x-auto w-full\">\n        <table\n          className={\n            props.tableClass\n              ? props.tableClass\n              : `w-full shadow ${\n                  props.rounded && \"sm:rounded-lg\"\n                } table-auto order-table`\n          }\n          id={tableId}\n        >\n          {!props.hideColumns && (\n            <thead className=\"bg-white border-b-2 border-gray-300 text-gray-600 font-bold text-base\">\n              <tr\n                className={`text-left tracking-wide bg-${props.thColor}-100 border-b-2 border-${props.thColor}-500 text-${props.thColor}-600`}\n              >\n                {props.columns.map((column, index) => (\n                  <th\n                    key={index}\n                    className={`${column.padding} text-${\n                      column.alignText\n                    } px-3 py-2 ${column.isSortAllowed && \"cursor-pointer\"}`}\n                    onClick={() =>\n                      column.isSortAllowed && sortThisColumn(tableId, index)\n                    }\n                  >\n                    <div className=\"flex items-center gap-1\">\n                      {column.columnTitle}\n                      {column.isSortAllowed && <BiSort />}\n                    </div>\n                  </th>\n                ))}\n              </tr>\n            </thead>\n          )}\n          <tbody id=\"table-data\" className=\"bg-white text-black text-base\">\n            {props.rows()}\n          </tbody>\n        </table>\n        {props.pagination && (\n          <div className=\"sm:flex-1 sm:flex sm:items-center sm:justify-between mt-4 work-sans\">\n            <div>\n              <span className=\"text-xs xs:text-sm text-gray-900\">\n                Showing 1 to {pageSize} of {totalItems - 1} Entries\n              </span>\n            </div>\n            <div>\n              <nav className=\"inline-flex shadow-sm\">\n                <div>\n                  <button\n                    type=\"button\"\n                    className={`inline-flex items-center px-2 py-2 rounded-l-md border border-gray-300 text-sm font-medium text-gray-500 ${\n                      currentPage !== 1 && \"bg-white\"\n                    }`}\n                    aria-label=\"Previous\"\n                    disabled={currentPage === 1 || props.loading}\n                    onClick={() => setCurrentPage(currentPage - 1)}\n                  >\n                    <MdNavigateBefore className=\"h-5 w-5\" />\n                  </button>\n                </div>\n                <div>\n                  {pages &&\n                    pages.map((page, pageIndex) => (\n                      <button\n                        key={pageIndex}\n                        className={`-ml-px inline-flex items-center px-4 py-2 border border-gray-300 text-sm font-medium text-gray-700 ${\n                          page !== currentPage\n                            ? \"bg-white\"\n                            : \"bg-gray-100 cursor-default\"\n                        }`}\n                        disabled={page === currentPage || props.loading}\n                        onClick={() => setCurrentPage(page)}\n                      >\n                        {page}\n                      </button>\n                    ))}\n                </div>\n                <div>\n                  <button\n                    type=\"button\"\n                    className={`inline-flex items-center px-2 py-2 rounded-r-md border border-gray-300 text-sm leading-5 font-medium text-gray-500 ${\n                      currentPage !== totalPages && \"bg-white\"\n                    }`}\n                    aria-label=\"Next\"\n                    disabled={currentPage === totalPages || props.loading}\n                    onClick={() => setCurrentPage(currentPage + 1)}\n                  >\n                    <MdNavigateNext className=\"h-5 w-5\" />\n                  </button>\n                </div>\n              </nav>\n            </div>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default Table;\n","import axios from \"axios\";\nimport { Dispatch } from \"redux\";\nimport { ActionTypes } from \"./types\";\nimport { API } from \"../utils/api\";\nimport { setAxiosToken } from \"../utils/AxiosToken\";\nimport { errorToText } from \"../utils/errors\";\nimport {\n  AcademicSessionInterface,\n  PlansTypeInterface,\n  SessionPlanInterface,\n} from \"../interfaces\";\n\n/**\n * * ****************************** INTERFACES *****************************\n */\n\n// GET ACTIVE PLAN TYPES\nexport interface GetPlansTypesAction {\n  type: ActionTypes.GET_PLANS_TYPES;\n  payload: PlansTypeInterface[];\n}\n\n// GET INACTIVE PLAN TYPES\nexport interface GetDeletedPlansTypesAction {\n  type: ActionTypes.GET_DELETED_PLANS_TYPES;\n  payload: PlansTypeInterface[];\n}\n\n// CREATE PLAN TYPE\nexport interface CreatePlansTypeAction {\n  type: ActionTypes.CREATE_PLAN_TYPE;\n  payload: PlansTypeInterface;\n}\n\n// UPDATE PLAN TYPE\nexport interface UpdatePlansTypeAction {\n  type: ActionTypes.UPDATE_PLAN_TYPE;\n  payload: PlansTypeInterface;\n}\n\n// DELETE PLAN TYPE\nexport interface DeletePlansTypeAction {\n  type: ActionTypes.DELETE_PLAN_TYPE;\n  payload: PlansTypeInterface;\n}\n\n// SET PLAN TYPE =====================================\nexport interface setSelectedPlanTypeActions {\n  type: ActionTypes.SELECT_PLAN_TYPE;\n  payload: PlansTypeInterface | \"all\";\n}\n\n// GET ALL SESSION PLAN\nexport interface GetAllSessionPlansAction {\n  type: ActionTypes.GET_ALL_SESSION_PLANS;\n  payload: SessionPlanInterface[];\n}\n\n// GET ACTIVE SESSION PLAN\nexport interface GetActiveSessionPlanAction {\n  type: ActionTypes.GET_ACTIVE_SESSION_PLANS;\n  payload: SessionPlanInterface | \"none\";\n}\n\n// CREATE SESSION PLAN\nexport interface CreateSessionPlansAction {\n  type: ActionTypes.CREATE_SESSION_PLAN;\n  payload: SessionPlanInterface;\n}\n\n// UPDATE SESSION PLAN\nexport interface UpdateSessionPlansAction {\n  type: ActionTypes.UPDATE_SESSION_PLAN;\n  payload: SessionPlanInterface;\n}\n\n// ACTIVATE SESSION PLAN\nexport interface ActivateSessionPlansAction {\n  type: ActionTypes.SESSION_ACTIVATION;\n  payload: SessionPlanInterface;\n}\n\n// DELETE SESSION PLAN\nexport interface DeleteSessionPlanAction {\n  type: ActionTypes.DELETE_SESSION_PLAN;\n  payload: string;\n}\n\n// GET ALL ACADEMIC SESSION\nexport interface GetAllAcademicSessionAction {\n  type: ActionTypes.GET_ALL_ACADEMIC_SESSION;\n  payload: AcademicSessionInterface[];\n}\n\n// CREATE ACADEMIC SESSION\nexport interface CreateAcademicSessionAction {\n  type: ActionTypes.CREATE_ACADEMIC_SESSION;\n  payload: AcademicSessionInterface;\n}\n\n// UPDATE ACADEMIC SESSION\nexport interface UpdateAcademicSessionAction {\n  type: ActionTypes.UPDATE_ACADEMIC_SESSION;\n  payload: AcademicSessionInterface;\n}\n\n// ACTIVATE ACADEMIC SESSION\nexport interface ActivateAcademicSessionAction {\n  type: ActionTypes.ACADEMIC_SESSION_ACTIVATION;\n  payload: AcademicSessionInterface;\n}\n\n// DELETE ACADEMIC SESSION\nexport interface DeleteAcademicSessionAction {\n  type: ActionTypes.DELETE_ACADEMIC_SESSION;\n  payload: string;\n}\n\n// GET ACTIVE ACADEMIC SESSION\nexport interface GetActiveAcademicSessionAction {\n  type: ActionTypes.GET_ACTIVE_ACADEMIC_SESSION;\n  payload: AcademicSessionInterface | \"none\";\n}\n\nexport type SessionActionType =\n  | GetPlansTypesAction\n  | GetDeletedPlansTypesAction\n  | CreatePlansTypeAction\n  | UpdatePlansTypeAction\n  | DeletePlansTypeAction\n  | GetAllSessionPlansAction\n  | GetActiveSessionPlanAction\n  | CreateSessionPlansAction\n  | UpdateSessionPlansAction\n  | ActivateSessionPlansAction\n  | DeleteSessionPlanAction\n  | setSelectedPlanTypeActions\n  | GetAllAcademicSessionAction\n  | CreateAcademicSessionAction\n  | UpdateAcademicSessionAction\n  | ActivateAcademicSessionAction\n  | DeleteAcademicSessionAction\n  | GetActiveAcademicSessionAction;\n\n/**\n * * ****************************** ACTIONS *****************************\n */\n\n// GET ACTIVE PLAN TYPES ==========================\nexport const GetPlansTypes = (callback: Function) => {\n  callback(true, \"\");\n  return async (dispatch: Dispatch) => {\n    try {\n      setAxiosToken();\n      const res = await axios.get<PlansTypeInterface[]>(\n        `${API.CLAIMING}/session-type`\n      );\n      console.log({ GET_PLANS_TYPES: res.data });\n      let plan_types: PlansTypeInterface[] = [];\n      if (res.status === 200) {\n        // setApplications(res.data);\n        if (res.data !== null && res.data.length > 0) {\n          plan_types = res.data;\n        }\n      }\n      dispatch<GetPlansTypesAction>({\n        type: ActionTypes.GET_PLANS_TYPES,\n        payload: plan_types,\n      });\n      callback(false, \"\");\n    } catch (error) {\n      console.error({ error: errorToText(error) });\n      callback(false, errorToText(error));\n    }\n  };\n};\n\n// GET ACTIVE PLAN TYPES ==========================\nexport const GetDeletedPlansTypes = (callback: Function) => {\n  callback(true, \"\");\n  return async (dispatch: Dispatch) => {\n    try {\n      setAxiosToken();\n      const res = await axios.get<PlansTypeInterface[]>(\n        `${API.CLAIMING}/session-type/deleted`\n      );\n      console.log({ GET_DELETED_PLANS_TYPES: res.data });\n      let plan_types: PlansTypeInterface[] = [];\n      if (res.status === 200) {\n        // setApplications(res.data);\n        if (res.data !== null && res.data.length > 0) {\n          plan_types = res.data;\n        }\n      }\n      dispatch<GetDeletedPlansTypesAction>({\n        type: ActionTypes.GET_DELETED_PLANS_TYPES,\n        payload: plan_types,\n      });\n      callback(false, \"\");\n    } catch (error) {\n      console.error({ error: errorToText(error) });\n      callback(false, errorToText(error));\n    }\n  };\n};\n\n// CREATE PLAN TYPE\nexport const createPlanType = (\n  data: PlansTypeInterface\n): CreatePlansTypeAction => {\n  return {\n    type: ActionTypes.CREATE_PLAN_TYPE,\n    payload: data,\n  };\n};\n\n// UPDATE PLAN TYPE\nexport const updatePlanType = (\n  data: PlansTypeInterface\n): UpdatePlansTypeAction => {\n  return {\n    type: ActionTypes.UPDATE_PLAN_TYPE,\n    payload: data,\n  };\n};\n\n// DELETE PLAN TYPE\nexport const deletePlanType = (\n  data: PlansTypeInterface\n): DeletePlansTypeAction => {\n  return {\n    type: ActionTypes.DELETE_PLAN_TYPE,\n    payload: data,\n  };\n};\n\n// SELECT PLAN TYPES ==========================\nexport const setSelectedPlanType = (\n  thisType: PlansTypeInterface | \"all\"\n): setSelectedPlanTypeActions => {\n  console.log({ thisType });\n  return {\n    type: ActionTypes.SELECT_PLAN_TYPE,\n    payload: thisType,\n  };\n};\n\n// GET ACTIVE PLAN TYPES ==========================\nexport const getActiveSessionPlan = (callback: Function) => {\n  callback(true, \"\");\n  return async (dispatch: Dispatch) => {\n    try {\n      setAxiosToken();\n      const res = await axios.get<SessionPlanInterface>(\n        `${API.CLAIMING}/session/active/`\n      );\n      console.log({ GET_ACTIVE_SESSION_PLANS: res.data });\n      let session_plan: SessionPlanInterface | undefined = undefined;\n      // if (res.status === 200) {\n      //   // setApplications(res.data);\n      // }\n      if (res.data && res.data.is_active !== undefined) {\n        session_plan = res.data;\n      }\n      console.log({ session_plan: res.data });\n\n      dispatch<GetActiveSessionPlanAction>({\n        type: ActionTypes.GET_ACTIVE_SESSION_PLANS,\n        payload: session_plan ? session_plan : \"none\",\n      });\n      callback(false, \"\", session_plan ? session_plan : \"none\");\n    } catch (error) {\n      console.error({ error: errorToText(error) });\n      callback(false, errorToText(error));\n    }\n  };\n};\n\n// GET ALL PLAN TYPES ==========================\nexport const GetAllSessionPlans = (callback: Function) => {\n  callback(true, \"\");\n  return async (dispatch: Dispatch) => {\n    try {\n      setAxiosToken();\n      const res = await axios.get<SessionPlanInterface[]>(\n        `${API.CLAIMING}/session/`\n      );\n      console.log({ GET_ALL_SESSION_PLANS: res.data });\n      let session_data: SessionPlanInterface[] = [];\n      if (res.status === 200) {\n        // setApplications(res.data);\n        if (res.data !== null && res.data.length > 0) {\n          session_data = res.data;\n        }\n      }\n      dispatch<GetAllSessionPlansAction>({\n        type: ActionTypes.GET_ALL_SESSION_PLANS,\n        payload: session_data,\n      });\n      callback(false, \"\", session_data);\n    } catch (error) {\n      console.error({ error: errorToText(error) });\n      callback(false, errorToText(error));\n    }\n  };\n};\n\n// CREATE SESSION PLAN\nexport const createSessionPlan = (\n  data: SessionPlanInterface\n): CreateSessionPlansAction => {\n  return {\n    type: ActionTypes.CREATE_SESSION_PLAN,\n    payload: data,\n  };\n};\n\n// UPDATE SESSION PLAN\nexport const updateSessionPlan = (\n  data: SessionPlanInterface\n): UpdateSessionPlansAction => {\n  return {\n    type: ActionTypes.UPDATE_SESSION_PLAN,\n    payload: data,\n  };\n};\n\n// ACTIVATE SESSION PLAN\nexport const sessionActivation = (\n  data: SessionPlanInterface\n): ActivateSessionPlansAction => {\n  return {\n    type: ActionTypes.SESSION_ACTIVATION,\n    payload: data,\n  };\n};\n\n// DELETE SESSION PLAN\nexport const deleteSessionPlan = (data: string): DeleteSessionPlanAction => {\n  return {\n    type: ActionTypes.DELETE_SESSION_PLAN,\n    payload: data,\n  };\n};\n\n// CREATE ACADEMIC SESSION\nexport const createAcademicSession = (\n  data: AcademicSessionInterface\n): CreateAcademicSessionAction => {\n  return {\n    type: ActionTypes.CREATE_ACADEMIC_SESSION,\n    payload: data,\n  };\n};\n\n// GET ALL ACADEMIC SESSION ==========================\nexport const GetAllAcademicSession = (callback: Function) => {\n  callback(true, \"\");\n  return async (dispatch: Dispatch) => {\n    try {\n      setAxiosToken();\n      const res = await axios.get<AcademicSessionInterface[]>(\n        `${API.PLACEMENT}/postrequestperiod/`\n      );\n      console.log({ GET_ALL_SESSION_PLANS: res.data });\n      let session_data: AcademicSessionInterface[] = [];\n      if (res.status === 200) {\n        // setApplications(res.data);\n        if (res.data !== null && res.data.length > 0) {\n          session_data = res.data;\n        }\n      }\n      console.log(\"====================================\");\n      console.log({ GetAllAcademicSession: res });\n      console.log(\"====================================\");\n      dispatch<GetAllAcademicSessionAction>({\n        type: ActionTypes.GET_ALL_ACADEMIC_SESSION,\n        payload: session_data,\n      });\n      callback(false, \"\", session_data);\n    } catch (error) {\n      console.error({ error: errorToText(error) });\n      callback(false, errorToText(error));\n    }\n  };\n};\n\n// UPDATE ACADEMIC SESSION\nexport const updateAcademicSession = (\n  data: AcademicSessionInterface\n): UpdateAcademicSessionAction => {\n  return {\n    type: ActionTypes.UPDATE_ACADEMIC_SESSION,\n    payload: data,\n  };\n};\n\n// ACTIVATE ACADEMIC SESSION\nexport const academicSessionActivation = (\n  data: AcademicSessionInterface\n): ActivateAcademicSessionAction => {\n  return {\n    type: ActionTypes.ACADEMIC_SESSION_ACTIVATION,\n    payload: data,\n  };\n};\n\n// DELETE ACADEMIC SESSION\nexport const deleteAcademicSession = (\n  data: string\n): DeleteAcademicSessionAction => {\n  return {\n    type: ActionTypes.DELETE_ACADEMIC_SESSION,\n    payload: data,\n  };\n};\n\n// GET ACTIVE PLAN TYPES ==========================\nexport const getActiveAcademicSession = (callback: Function) => {\n  callback(true, \"\");\n  return async (dispatch: Dispatch) => {\n    try {\n      setAxiosToken();\n      const res = await axios.get<AcademicSessionInterface>(\n        `${API.PLACEMENT}/postrequestperiod/one`\n      );\n      console.log({ GET_ACTIVE_ACADEMIC_SESSION: res.data });\n      let session_plan: AcademicSessionInterface | undefined = undefined;\n      // if (res.status === 200) {\n      //   // setApplications(res.data);\n      // }\n      if (res.data) {\n        session_plan = res.data;\n      }\n      console.log({ session_plan: res.data });\n\n      dispatch<GetActiveAcademicSessionAction>({\n        type: ActionTypes.GET_ACTIVE_ACADEMIC_SESSION,\n        payload: session_plan ? session_plan : \"none\",\n      });\n      callback(false, \"\", session_plan ? session_plan : \"none\");\n    } catch (error) {\n      console.error({ error: errorToText(error) });\n      callback(false, errorToText(error));\n    }\n  };\n};\n","import axios from \"axios\";\nimport { Dispatch } from \"redux\";\nimport { ActionTypes } from \"./types\";\nimport {\n  CandidatesInterface,\n  DocumentCategoryInterface,\n  DocumentFieldsInterface,\n  DocumentSubCategoryInterface,\n} from \"../shared/interfaces\";\nimport { API } from \"../utils/api\";\nimport { setAxiosToken } from \"../utils/AxiosToken\";\nimport { errorToText } from \"../utils/errors\";\nimport { VerifyDocumentInterface } from \"./users\";\n\n/**\n * * ****************************** INTERFACES *****************************\n */\n\n// CATEGORY\nexport interface GetDocumentCategoryAction {\n  type: ActionTypes.GET_DOCUMENT_CATEGORY;\n  payload: DocumentCategoryInterface[];\n}\n\nexport interface CreateDocumentCategoryAction {\n  type: ActionTypes.CREATE_DOCUMENT_CATEGORY;\n  payload: DocumentCategoryInterface;\n}\n\nexport interface UpdateDocumentCategoryAction {\n  type: ActionTypes.UPDATE_DOCUMENT_CATEGORY;\n  payload: DocumentCategoryInterface;\n}\n\nexport interface DeleteDocumentCategoryAction {\n  type: ActionTypes.DELETE_DOCUMENT_CATEGORY;\n  payload: string;\n}\n\n// SUB CATEGORY\nexport interface GetDocumentSubCategoryAction {\n  type: ActionTypes.GET_DOCUMENT_SUB_CATEGORY;\n  payload: DocumentSubCategoryInterface[];\n}\n\nexport interface CreateDocumentSubCategoryAction {\n  type: ActionTypes.CREATE_DOCUMENT_SUB_CATEGORY;\n  payload: DocumentSubCategoryInterface;\n}\n\nexport interface UpdateDocumentSubCategoryAction {\n  type: ActionTypes.UPDATE_DOCUMENT_SUB_CATEGORY;\n  payload: DocumentSubCategoryInterface;\n}\n\nexport interface DeleteDocumentSubCategoryAction {\n  type: ActionTypes.DELETE_DOCUMENT_SUB_CATEGORY;\n  payload: string;\n}\n\n// FIELDS\nexport interface GetDocumentFieldsAction {\n  type: ActionTypes.GET_DOCUMENT_FIELDS;\n  payload: DocumentFieldsInterface[];\n}\n\nexport interface CreateDocumentFieldsAction {\n  type: ActionTypes.CREATE_DOCUMENT_FIELDS;\n  payload: DocumentFieldsInterface;\n}\n\nexport interface UpdateDocumentFieldsAction {\n  type: ActionTypes.UPDATE_DOCUMENT_FIELDS;\n  payload: DocumentFieldsInterface;\n}\n\nexport interface DeleteDocumentFieldsAction {\n  type: ActionTypes.DELETE_DOCUMENT_FIELDS;\n  payload: string;\n}\n\n// DOCUMENT CHECKING\nexport interface GetCandidatesInInstituteAtion {\n  type: ActionTypes.GET_CANDIDATE_IN_INSTITUTE;\n  payload: CandidatesInterface[];\n}\n\nexport interface VerifyDocumentAction {\n  type: ActionTypes.VERIFY_DOCUMENT;\n  payload: VerifyDocumentInterface;\n}\n\nexport type DocumentCategoryActionType =\n  | GetDocumentCategoryAction\n  | CreateDocumentCategoryAction\n  | UpdateDocumentCategoryAction\n  | DeleteDocumentCategoryAction\n  | GetDocumentSubCategoryAction\n  | CreateDocumentSubCategoryAction\n  | UpdateDocumentSubCategoryAction\n  | DeleteDocumentSubCategoryAction\n  | GetDocumentFieldsAction\n  | CreateDocumentFieldsAction\n  | UpdateDocumentFieldsAction\n  | DeleteDocumentFieldsAction\n  | GetCandidatesInInstituteAtion\n  | VerifyDocumentAction;\n\n/**\n * * ****************************** ACTIONS *****************************\n */\n\n// CATEGORY\n\nexport const getDocumentCategory = () => {\n  return async (dispatch: Dispatch) => {\n    try {\n      setAxiosToken();\n      const res = await axios.get(`${API.AUTH}/detailcategory`);\n      console.log({ docCategory: res });\n      dispatch<GetDocumentCategoryAction>({\n        type: ActionTypes.GET_DOCUMENT_CATEGORY,\n        payload: res.data,\n      });\n    } catch (error) {\n      console.error({ error: errorToText(error) });\n    }\n  };\n};\n\nexport const createDocumentCategory = (data: DocumentCategoryInterface) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<CreateDocumentCategoryAction>({\n      type: ActionTypes.CREATE_DOCUMENT_CATEGORY,\n      payload: data,\n    });\n  };\n};\n\nexport const updateDocumentCategory = (data: DocumentCategoryInterface) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<UpdateDocumentCategoryAction>({\n      type: ActionTypes.UPDATE_DOCUMENT_CATEGORY,\n      payload: data,\n    });\n  };\n};\n\nexport const deleteDocumentCategory = (data: string) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<DeleteDocumentCategoryAction>({\n      type: ActionTypes.DELETE_DOCUMENT_CATEGORY,\n      payload: data,\n    });\n  };\n};\n\n// SUB CATEGORY\nexport const getDocumentSubCategory = () => {\n  return async (dispatch: Dispatch) => {\n    try {\n      setAxiosToken();\n      const res = await axios.get<DocumentSubCategoryInterface[]>(\n        `${API.AUTH}/detailsubcategory`\n      );\n      console.log({ docSubCategory: res });\n      dispatch<GetDocumentSubCategoryAction>({\n        type: ActionTypes.GET_DOCUMENT_SUB_CATEGORY,\n        payload: res.data,\n        // payload: response.data,\n      });\n    } catch (error) {\n      console.log({ doc_SUB_category_error: error });\n    }\n  };\n};\n\nexport const createDocumentSubCategory = (\n  data: DocumentSubCategoryInterface\n) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<CreateDocumentSubCategoryAction>({\n      type: ActionTypes.CREATE_DOCUMENT_SUB_CATEGORY,\n      payload: data,\n    });\n  };\n};\n\nexport const updateDocumentSubCategory = (\n  data: DocumentSubCategoryInterface\n) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<UpdateDocumentSubCategoryAction>({\n      type: ActionTypes.UPDATE_DOCUMENT_SUB_CATEGORY,\n      payload: data,\n    });\n  };\n};\n\nexport const deleteDocumentSubCategory = (data: string) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<DeleteDocumentSubCategoryAction>({\n      type: ActionTypes.DELETE_DOCUMENT_SUB_CATEGORY,\n      payload: data,\n    });\n  };\n};\n\n// FIELDS\nexport const getDocumentFields = () => {\n  return async (dispatch: Dispatch) => {\n    try {\n      setAxiosToken();\n      const res = await axios.get<DocumentFieldsInterface[]>(\n        `${API.AUTH}/categorysubcatedata`\n      );\n      console.log({ docFields: res });\n      dispatch<GetDocumentFieldsAction>({\n        type: ActionTypes.GET_DOCUMENT_FIELDS,\n        payload: res.data,\n        // payload: response.data,\n      });\n    } catch (error) {\n      console.log({ doc_SUB_category_error: error });\n    }\n  };\n};\n\nexport const createDocumentFields = (data: DocumentFieldsInterface) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<CreateDocumentFieldsAction>({\n      type: ActionTypes.CREATE_DOCUMENT_FIELDS,\n      payload: data,\n    });\n  };\n};\n\nexport const updateDocumentFields = (data: DocumentFieldsInterface) => {\n  console.log({ reducer: data });\n  return async (dispatch: Dispatch) => {\n    dispatch<UpdateDocumentFieldsAction>({\n      type: ActionTypes.UPDATE_DOCUMENT_FIELDS,\n      payload: data,\n    });\n  };\n};\n\nexport const deleteDocumentFields = (data: string) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<DeleteDocumentFieldsAction>({\n      type: ActionTypes.DELETE_DOCUMENT_FIELDS,\n      payload: data,\n    });\n  };\n};\n\n// REMOVE DUPLICATION IN CANDIDATES IN EDUCATION CATEGORY PER SESSION\nconst distinctCandidates = (\n  candidatesData: CandidatesInterface[]\n): CandidatesInterface[] => {\n  let result: CandidatesInterface[] = [];\n  let user_ids: string[] = [];\n  const newArray: CandidatesInterface[] = candidatesData.filter((candidate) => {\n    return candidate !== null && candidate !== undefined;\n  });\n  newArray.forEach((candidate) => {\n    if (!user_ids.includes(candidate.user_id)) {\n      result.push(candidate);\n      user_ids.push(candidate.user_id);\n    }\n  });\n  return result;\n};\n// CANDIDATE IN EDUCATION CATEGORY PER SESSION\nexport const getCandidatesInInstitute = (\n  educatin_type_id: string,\n  session_id: string,\n  callback: Function\n) => {\n  return async (dispatch: Dispatch) => {\n    callback(true, \"\", null);\n    try {\n      setAxiosToken();\n      const res = await axios.get<CandidatesInterface[]>(\n        `${API.APPLICATION}/educationtypeuserdocs/${educatin_type_id}/${session_id}`\n      );\n\n      console.log(\"====================================\");\n      console.log({\n        getCandidatesInInstitute: res,\n        distinctCandidates: distinctCandidates(res.data),\n      });\n      console.log(\"====================================\");\n      dispatch<GetCandidatesInInstituteAtion>({\n        type: ActionTypes.GET_CANDIDATE_IN_INSTITUTE,\n        payload: distinctCandidates(res.data),\n        // payload: response.data,\n      });\n      callback(false, \"\", distinctCandidates(res.data));\n    } catch (error) {\n      console.log({ getCandidatesInInstitute: error });\n      callback(false, errorToText(error), null);\n    }\n  };\n};\n\nexport const verifyDocument = (data: VerifyDocumentInterface) => {\n  console.log(\"================verifyDocument====================\");\n  console.log({ verifyDocument: data });\n  console.log(\"================verifyDocument====================\");\n  return async (dispatch: Dispatch) => {\n    dispatch<VerifyDocumentAction>({\n      type: ActionTypes.VERIFY_DOCUMENT,\n      payload: data,\n    });\n  };\n};\n","import axios from \"axios\";\nimport { Dispatch } from \"redux\";\nimport { ActionTypes } from \"./types\";\nimport {\n  AccessTaskInterface,\n  PermissionInterface,\n  SystemSettingsInterface,\n} from \"../shared/interfaces\";\nimport { API } from \"../utils/api\";\nimport { setAxiosToken } from \"../utils/AxiosToken\";\nimport { errorToText } from \"../utils/errors\";\nimport { PositionAPI } from \"../interfaces/position\";\n\n/**\n * * ****************************** INTERFACES *****************************\n */\n\n// SYSTEM SETTINGS  ==============\nexport interface GetSystemSettingsAction {\n  type: ActionTypes.GET_SYSTEM_SETTINGS;\n  payload: SystemSettingsInterface[];\n}\n\nexport interface DisableSystemSettingsAction {\n  type: ActionTypes.DISABLE_SYSTEM_SETTINGS;\n  payload: {\n    system_setting_id: string;\n    status: \"enabled\" | \"disabled\";\n  };\n}\n\n// ROLE TASKS ACCESS SETTINGS ===================================\nexport interface GetTaskAccessAction {\n  type: ActionTypes.GET_TASK_ACCESS;\n  payload: AccessTaskInterface[];\n}\n\n// POSITIONS SETTINGS ===================================\nexport interface PositionCreateInterface {\n  position_id?: string;\n  position_title: string;\n  position_code: string;\n  description: string;\n  school_level_id: string;\n  subcategory_id: string;\n  education_institute_id: string;\n  courses: string[];\n  requirements: {\n    user_detail_category_id: string;\n    user_detail_subcategory_id: string;\n    position_requirement: {\n      category_subcategory_data_id: string;\n      required: boolean;\n    }[];\n    required: boolean;\n  }[];\n}\nexport interface GetPositionsAction {\n  type: ActionTypes.GET_POSTIONS;\n  payload: PositionAPI[];\n}\n\nexport interface CreatePositionsAction {\n  type: ActionTypes.CREATE_POSITION;\n  payload: PositionCreateInterface;\n}\n\nexport interface UpdatePositionsAction {\n  type: ActionTypes.UPDATE_POSITION;\n  payload: PositionCreateInterface;\n}\n\nexport interface DeletePositionSettingAction {\n  type: ActionTypes.DELETE_POSITION;\n  payload: string;\n}\n\nexport interface PublishPositionAction {\n  type: ActionTypes.PUBLISH_POSITION;\n  payload: {\n    position_id: string;\n    status: boolean;\n  };\n}\n\nexport type SystemActionType =\n  | GetSystemSettingsAction\n  | DisableSystemSettingsAction\n  | GetTaskAccessAction\n  | GetPositionsAction\n  | CreatePositionsAction\n  | UpdatePositionsAction\n  | DeletePositionSettingAction\n  | PublishPositionAction;\n\n/**\n * * ****************************** ACTIONS *****************************\n */\n\nexport const getSystemSettings = (callback: Function) => {\n  return async (dispatch: Dispatch) => {\n    callback(true, \"\");\n    try {\n      setAxiosToken();\n      const res = await axios.get<SystemSettingsInterface[]>(\n        `${API.AUTH}/settings`\n      );\n      dispatch<GetSystemSettingsAction>({\n        type: ActionTypes.GET_SYSTEM_SETTINGS,\n        payload: res.data,\n      });\n      callback(false, \"\");\n    } catch (error) {\n      console.log({ code_error: error });\n      callback(false, errorToText(error));\n    }\n  };\n};\n\nexport const disableSystemSetting = (data: {\n  system_setting_id: string;\n  status: \"enabled\" | \"disabled\";\n}) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<DisableSystemSettingsAction>({\n      type: ActionTypes.DISABLE_SYSTEM_SETTINGS,\n      payload: data,\n    });\n  };\n};\n\n// ============================ tasks access =======================\n\nexport const GetTaskAccess = (callback: Function) => {\n  return async (dispatch: Dispatch) => {\n    callback(true, \"\");\n    try {\n      setAxiosToken();\n      const res = await axios.get<\n        {\n          id: string;\n          title: string;\n          key: string;\n          permitted: PermissionInterface;\n        }[]\n      >(`${API.AUTH}/allroleaccess`);\n      let response: AccessTaskInterface[] = res.data.map((data) => ({\n        id: data.id,\n        task: data.title,\n        key: data.key,\n        permitted: data.permitted,\n      }));\n      dispatch<GetTaskAccessAction>({\n        type: ActionTypes.GET_TASK_ACCESS,\n        payload: response,\n      });\n      callback(false, \"\", response);\n    } catch (error) {\n      console.log({ code_error: error });\n      callback(false, errorToText(error));\n    }\n  };\n};\n\n// ============================ positions =======================\n\nexport const getPositions = (callback: Function) => {\n  return async (dispatch: Dispatch) => {\n    callback(true, \"\");\n    try {\n      setAxiosToken();\n      const res = await axios.get<PositionAPI[]>(`${API.APPLICATION}/position`);\n      dispatch<GetPositionsAction>({\n        type: ActionTypes.GET_POSTIONS,\n        payload: res.data,\n      });\n      callback(false, \"\");\n    } catch (error) {\n      console.log({ code_error: error });\n      callback(false, errorToText(error));\n    }\n  };\n};\n\nexport const createPosition = (data: PositionCreateInterface) => {\n  console.log({ createPosition: data });\n  return async (dispatch: Dispatch) => {\n    dispatch<CreatePositionsAction>({\n      type: ActionTypes.CREATE_POSITION,\n      payload: data,\n    });\n  };\n};\n\nexport const updatePosition = (data: PositionCreateInterface) => {\n  console.log({ updatePosition: data });\n  return async (dispatch: Dispatch) => {\n    dispatch<UpdatePositionsAction>({\n      type: ActionTypes.UPDATE_POSITION,\n      payload: data,\n    });\n  };\n};\n\nexport const deletePosition = (data: string) => {\n  console.log({ deletePosition: data });\n  return async (dispatch: Dispatch) => {\n    dispatch<DeletePositionSettingAction>({\n      type: ActionTypes.DELETE_POSITION,\n      payload: data,\n    });\n  };\n};\n\nexport const publishPosition = (data: {\n  position_id: string;\n  status: boolean;\n}) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<PublishPositionAction>({\n      type: ActionTypes.PUBLISH_POSITION,\n      payload: data,\n    });\n  };\n};\n","import React from \"react\";\nimport { MdInfoOutline } from \"react-icons/md\";\n\nconst NoSession = () => {\n  return (\n    <div className=\"my-5\">\n      <div className=\"bg-yellow-100 rounded flex flex-col items-center justify-center p-6 my-8 text-yellow-900 border border-yellow-900\">\n        <MdInfoOutline className=\"text-6xl md:text-9xl\" />\n        <div className=\"text-center flex flex-col\">\n          <span className=\"text-2xl md:text-4xl font-extrabold\">\n            No session available\n          </span>\n          <span className=\"text-lg\">\n            Please Wait for the system to publish the sessions or contact the\n            administrator\n          </span>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default NoSession;\n","import React from \"react\";\n\ntype TableLoadingProps = {\n  cols: number;\n};\nconst TableLoading: React.FC<TableLoadingProps> = (props) => {\n  const displayCols = (): JSX.Element[] => {\n    let colsArray: number[] = [];\n    for (let index = 0; index < props.cols; index++) {\n      colsArray.push(index);\n    }\n    let result = colsArray.map((element) => {\n      return (\n        <td className=\"p-3 text-center whitespace-nowrap\" key={element}>\n          <div className=\"w-full h-4 rounded bg-gray-200 animate__animated animate__pulse animate__delay-5s animate__infinite\"></div>\n        </td>\n      );\n    });\n\n    return result;\n  };\n  return (\n    <>\n      <tr className=\"border-b border-gray-200\" key={228}>\n        {displayCols()}\n      </tr>\n      <tr className=\"border-b border-gray-200\" key={22648}>\n        {displayCols()}\n      </tr>\n      <tr className=\"border-b border-gray-200\" key={229768}>\n        {displayCols()}\n      </tr>\n    </>\n  );\n};\n\nexport default TableLoading;\n","import {\n  ApplicationStates,\n  SESSION_PLAN_KEYS,\n} from \"../interfaces/application\";\n\nexport interface SystemSettingsInterface {\n  system_setting_id: string;\n  name: string;\n  key: string;\n  status: \"enabled\" | \"disabled\";\n}\n\nexport interface ApplicationSessionInterface {\n  is_active: boolean;\n  application_session_name: string;\n  period: string;\n  application_start_date: string;\n  application_end_date: string;\n  createdAt: string;\n  updatedAt: string;\n  application_session_id: string;\n}\n\nexport interface UserInfoInterface {\n  document_type?: string;\n  issue_number?: string;\n  date_of_issue?: string;\n  date_of_expiry?: string;\n  place_of_issue?: string;\n  application_number?: string;\n  fname: string;\n  lname: string;\n  sex: \"M\" | \"F\";\n  father_names: string;\n  mother_names: string;\n  date_of_birth: string;\n  place_of_birth?: string;\n  country_of_birth: string;\n  village_id: string;\n  village: string;\n  cell: string;\n  sector: string;\n  district: string;\n  province: string;\n  photo?: string;\n  civil_status?: string;\n  spouse?: any;\n  status?: string;\n}\n\nexport interface MySchoolInterface {\n  _id: string;\n  school_name: string;\n  school_code: string;\n  province_id: string;\n  province_code: string;\n  district_id: {\n    _id: string;\n    district_name: string;\n  };\n  district_code: string;\n  sector_code: string;\n  sector_id: string;\n  school_status: string;\n  status: number;\n  createdAt: string;\n  updatedAt: string;\n}\n\nexport interface UserInterface {\n  user_id: string;\n  _id?: string;\n  n_id?: string;\n  phone_number: string;\n  email: string;\n  password?: string;\n  user_info: UserInfoInterface;\n  details: UserDocumentsInterface[];\n  user_photo?: string;\n  default_access: RoleToUserInterface | null;\n  custome_access: CustomeAccessInterface | null;\n  is_active: boolean;\n  disability: boolean;\n  in_education: boolean;\n}\n\nexport interface CandidateDetailsInterface_old {\n  category_id: string;\n  sub_category_id: string;\n  category_subcategory_data: string;\n  title: string;\n  description: string;\n  files: string;\n  start_year: string;\n  end_year: string;\n  school: string;\n  email: string;\n  names: string;\n  phone_number: string;\n  company: string;\n  year: string;\n  doc_id: string;\n  validation_status: \"waiting\" | \"approved\" | \"rejected\";\n  validated_by: {\n    user_id: string;\n    comment: string;\n    validation_status: \"waiting\" | \"approved\" | \"rejected\";\n    date: string;\n  } | null;\n  doc_history_status: string;\n  get_in_date: string;\n  approved?: string;\n}\n\nexport interface CandidateDetailsInterface {\n  category_id: string;\n  sub_category_id: string;\n  category_subcategory_data: string;\n  title: string;\n  description: string;\n  files: string;\n  start_year: string;\n  end_year: string;\n  school: string;\n  email: string;\n  names: string;\n  phone_number: string;\n  company: string;\n  year: string;\n  doc_id: string;\n  validation_status: \"waiting\" | \"approved\" | \"rejected\";\n  validated_by: {\n    user_id: string;\n    comment: string;\n    validation_status: \"waiting\" | \"approved\" | \"rejected\";\n    date: string;\n  } | null;\n  doc_history_status: string;\n  get_in_date: string;\n  approved?: string;\n}\n\nexport interface DocInterface {\n  category_subcategory_data: string;\n  school: string;\n  category_id: string;\n  company: string;\n  description: string;\n  email: string;\n  end_year: string;\n  files: string;\n  names: string;\n  phone_number: string;\n  start_year: string;\n  sub_category_id: string;\n  title: string;\n  year: string;\n  approved: string;\n  doc_id: string;\n  validated_by: null;\n  validation_status: string;\n  doc_history_status: string;\n  get_in_date: string;\n  date_modefied: string;\n}\n\nexport interface CandidateRoleToUserInterface {\n  key: string;\n  status: number;\n  access: boolean;\n  assigned_date: string;\n}\n\nexport interface CandidatesInterface_old {\n  user_id: string;\n  n_id: string;\n  fname: string;\n  lname: string;\n  phone_number: string;\n  district: string;\n  email: string;\n  details: CandidateDetailsInterface[];\n}\n\nexport interface ApplicationExamsInterface {\n  course_id: string;\n  proctoring_type: string;\n  center_id: string;\n  room_id: string;\n}\n\nexport interface CandidatesInterface {\n  user_id: string;\n  n_id: string;\n  fname: string;\n  lname: string;\n  phone_number: string;\n  district: string;\n  email: string;\n  in_education: boolean;\n  disability: boolean;\n  residence: {\n    province_id: string;\n    province_name: string;\n    district_id: string;\n    district_name: string;\n    sector_id: string;\n    sector_name: string;\n  };\n  details: CandidateDetailsInterface[];\n  exams: ApplicationExamsInterface[];\n}\n\nexport interface CustomeAccessInterface {\n  access: AccessTaskInterface[];\n  user_id: string;\n  custome_user_access_id: string;\n}\n\nexport interface UserDocumentsInterface {\n  category_id: string;\n  sub_category_id: string;\n  category_subcategory_data: string;\n  title: string;\n  description: string;\n  files: string;\n  start_year: string;\n  end_year: string;\n  school: { title: string; school_id: string | null };\n  email: string;\n  names: string;\n  phone_number: string;\n  company: string;\n  year: string;\n  approved: \"waiting\" | \"approved\" | \"rejected\";\n  doc_id: string;\n  validation_status: \"waiting\" | \"approved\" | \"rejected\";\n  validated_by: {\n    user_id: string;\n    commet: string;\n    validation_status: \"waiting\" | \"approved\" | \"rejected\";\n    date: string;\n  };\n}\n\nexport interface SystemUserRoleInterface {\n  system_user_role_id: string;\n  role: string;\n  status: boolean;\n  access: AccessTaskInterface[];\n  district_required?: boolean;\n  school_required?: boolean;\n  room_required?: boolean;\n  education_institution_required?: boolean;\n  school_id: string;\n  district_id: string;\n}\n\nexport interface CustomeUserAccessInterface {\n  user_id: string;\n  access?: [\n    {\n      id: string;\n      task: string;\n      key: string;\n      permitted: {\n        create: boolean;\n        delete: boolean;\n        update: boolean;\n        view: boolean;\n      };\n    }\n  ];\n}\n\nexport interface PermissionInterface {\n  create: boolean;\n  view: boolean;\n  update: boolean;\n  delete: boolean;\n}\n\nexport interface AccessTaskInterface {\n  id: string;\n  task: string;\n  key: string;\n  permitted: PermissionInterface;\n}\n\nexport interface RoleToUserInterface {\n  system_user_role_id: string;\n  role: string;\n  access: AccessTaskInterface[];\n  status?: number;\n  school_id: string;\n  district_id: string;\n  room_id: string;\n  education_institution_id: string;\n}\n\nexport enum RoomType {\n  Physical = \"Physical\",\n  Virtual = \"Virtual\",\n  Default = \"Default\",\n}\n\nexport interface RoomsInterface {\n  occupied: number;\n  isUsed: boolean;\n  room_type: RoomType;\n  room_number: number;\n  capacity: number;\n  _id: string;\n}\n\nexport interface CentersInterface {\n  rooms: RoomsInterface[];\n  isUsed: boolean;\n  _id: string;\n  center_name: string;\n  center_code: number;\n  district_id: string;\n}\n\nexport interface SectorInterface {\n  district_code: number;\n  district_id: string;\n  sector_name: string;\n  sector_code: number;\n  sector_id: string;\n}\n\nexport interface AllDistrictInterface {\n  sectors: string[];\n  centers: string[];\n  district_name: string;\n  district_code: string;\n  province_code: string;\n  province_id: string;\n  status: number;\n  createdAt: string;\n  updatedAt: string;\n  district_id: string;\n}\nexport interface DistrictInterface {\n  centers: CentersInterface[];\n  sectors: SectorInterface[];\n  province_code: number;\n  province_id: string;\n  district_name: string;\n  district_code: number;\n  _id: string;\n}\n\nexport interface RoomLocationInterface {\n  districts: DistrictInterface[];\n  province_name: string;\n  province_code: number;\n  _id: string;\n}\n\nexport interface AssignRoleToUserActionInterface {\n  user_id: string;\n  data: RoleToUserInterface;\n}\n\nexport interface AssignRoleToUserActionInterface {\n  user_id: string;\n  data: RoleToUserInterface;\n}\n\nexport enum PostRequestStatusInterface {\n  INITIATED = \"initiated\",\n  CONFIRMED = \"confirmed\",\n  RECEIVED = \"received\",\n}\n\nexport interface PostSchoolInterface_old {\n  post_at_school_id: string;\n  school_id: string;\n  position_id: string;\n  district_id: string;\n  needed_posts: number;\n  confirmed_posts?: number;\n  occupied_posts?: number;\n  requested_by: string;\n  confirmed_by?: string;\n  received_posts?: number;\n  request_date: Date;\n  approval_date?: Date;\n  post_at_school_status: PostRequestStatusInterface;\n}\n\nexport interface PostSchoolInterface {\n  _id: string;\n  school_id: string;\n  position_id: string;\n  district_id: string;\n  needed_posts: number;\n  male_number: number;\n  female_number: number;\n  description: string;\n  confirmed_posts?: number;\n  occupied_posts?: number;\n  requested_by: string;\n  confirmed_by?: string;\n  received_posts?: number;\n  request_date: Date;\n  approval_date?: Date;\n  requested_post_status: PostRequestStatusInterface;\n  school: {\n    _id: string;\n    school_name: string;\n    school_code: string;\n    province_id: string;\n    province_code: string;\n    district_id: {\n      _id: string;\n      district_name: string;\n    };\n    district_code: string;\n    sector_code: string;\n    sector_id: string;\n    school_status: string;\n    status: number;\n    createdAt: string;\n    updatedAt: string;\n  };\n  post_request_session_id: string;\n}\n\nexport interface SchoolInfoInterface {\n  school_id: string;\n  school_title: string;\n  district_id: string;\n  number_of_females?: number;\n  number_of_males?: number;\n}\n\nexport interface SchoolsInterface {\n  _id: string;\n  status: boolean;\n  school_name: string;\n  school_code: number;\n  province_id: string;\n  province_code: number;\n  district_id: string;\n  district_code: number;\n  sector_id: string;\n  sector_code: number;\n  education_category_id: string;\n}\n\nexport interface MySchoolInterface {\n  _id: string;\n  school_name: string;\n  school_code: string;\n  province_id: string;\n  province_code: string;\n  district_id: {\n    _id: string;\n    district_name: string;\n  };\n  district_code: string;\n  sector_code: string;\n  sector_id: string;\n  school_status: string;\n  status: number;\n  createdAt: string;\n  updatedAt: string;\n}\n\nexport interface SchoolLevelInterface {\n  school_level_id: string;\n  school_level_name: string;\n  description: string;\n  education_institute: string[];\n  courses: [];\n}\n\nexport interface CourseInterface {\n  course_name: string;\n  course_code: string;\n  description: string;\n  school_levels: string[];\n  course_id: string;\n}\n\nexport interface EducationInstituteInterface {\n  education_category_title: string;\n  school_levels: [];\n  description: string;\n  education_institute_id: string;\n}\n\nexport interface PositionRequirementInterface {\n  user_detail_category_id: string;\n  title: string;\n  user_required_docs: {\n    user_detail_subcategory_id: string;\n    title: string;\n  }[];\n}\n\nexport interface PositionInterface {\n  courses: CourseInterface[];\n  position_title: string;\n  description: string;\n  school_level_id: SchoolLevelInterface;\n  education_institute_id: EducationInstituteInterface;\n  requirements: PositionRequirementInterface[];\n  position_id: string;\n}\n\nexport enum DocumentAttributesInterface {\n  \"Title\" = \"title\",\n  \"Description\" = \"description\",\n  \"Files\" = \"files\",\n  \"email\" = \"email\",\n  \"names\" = \"names\",\n  \"phone_number\" = \"phone_number\",\n  \"position\" = \"position\",\n  \"relation\" = \"relation\",\n  \"src\" = \"src\",\n  \"year\" = \"year\",\n  \"company\" = \"company\",\n  \"category_subcategory_data\" = \"category_subcategory_data\",\n  \"others\" = \"others\",\n  \"start_year\" = \"start_year\",\n  \"end_year\" = \"end_year\",\n  \"School\" = \"School\",\n}\n\nexport enum DocValidationStatusInterface {\n  APPROVED = \"approved\",\n  REJECTED = \"rejected\",\n}\n\nexport interface DocumentCategoryInterface {\n  user_detail_category_id: string;\n  title: string;\n  description: string;\n  fields: DocumentAttributesInterface[];\n}\n\nexport interface DocumentSubCategoryInterface {\n  category_id: string;\n  title: string;\n  description: string;\n  user_detail_subcategory_id: string;\n}\n\nexport interface DocumentFieldsInterface {\n  _id: string;\n  category_id: string;\n  subcategory_id: string | null;\n  title: string;\n  description: string;\n  others: [];\n}\n\nexport interface ApplicationAssessmentInterface {\n  application_id: string;\n  user_id: string;\n  application_session: string;\n  application_status: string;\n  n_id: string;\n  phone_number: string;\n  email: string;\n  fname: string;\n  lname: string;\n  sex: \"M\" | \"F\";\n  district: string;\n  position: PositionApplicationInterface;\n  details: CandidateDetailsInterface[];\n  createdAt: string;\n  updatedAt: string;\n}\n\nexport interface AdminApplicationsToPrintInterface {\n  application_id: number;\n  names: string;\n  gender?: string;\n  national_id?: string;\n  phone?: string;\n  email?: string;\n  position: string;\n  education_category?: string;\n  application_session?: string;\n  district?: string;\n  date?: string;\n  decision?: ApplicationStates;\n}\n\nexport interface PositionApplicationInterface {\n  courses: string[];\n  position_title: string;\n  description: string;\n  school_level_id: string;\n  education_institute_id: string;\n  requirements: PositionRequirementInterface[];\n  position_id: string;\n}\n\nexport interface PositionRequirementInterface {\n  user_detail_category_id: string;\n  title: string;\n  user_required_docs: {\n    user_detail_subcategory_id: string;\n    title: string;\n  }[];\n}\n\nexport interface ApplicationRequirementInterface {\n  user_detail_category_id: string;\n  title: string;\n  user_required_docs: {\n    user_detail_subcategory_id: string;\n    title: string;\n  }[];\n}\n\nexport interface PeriodInterface {\n  is_active: string;\n  application_session_name: string;\n  period: string;\n  application_start_date: string;\n  application_end_date: string;\n  createdAt: string;\n  updatedAt: string;\n  application_session_id: string;\n}\n\nexport interface LocationRoomTableInterface {\n  province_id: string;\n  province_name: string;\n  district_id: string;\n  district_name: string;\n  center_id: string;\n  center_name: string;\n  room_id: string;\n  room_name: string;\n  capacity: number;\n  occupied: number;\n}\n\nexport interface LocationSectorTableInterface {\n  province_id: string;\n  province_name: string;\n  province_code: number;\n  district_id: string;\n  district_name: string;\n  district_code: number;\n  sector_id: string;\n  sector_name: string;\n  sector_code: number;\n}\n\nexport interface PositionRequirementsFieldInterface {\n  category_id: string;\n  category_name: string;\n  sub_category_id: string;\n  sub_category_name: string;\n  field_id: string;\n  field_name: string;\n  sub_category_required: boolean;\n  required: boolean;\n  isAnyField: boolean;\n}\n\nexport interface PositionRequirementsQualificationInterface {\n  category_id: string;\n  category_name: string;\n  sub_category_id: string;\n  sub_category_name: string;\n  fields: DocumentFieldsInterface[];\n  required: boolean;\n}\n\nexport interface ApplicationPeriodInterface {\n  _id: string;\n  application_status: ApplicationStates;\n  userInfo: {\n    n_id: string;\n    phone_number: string;\n    email: string;\n    user_info: {\n      document_type: string;\n      issue_number: string;\n      date_of_issue: string;\n      date_of_expiry: string;\n      place_of_issue: string;\n      application_number: string;\n      fname: string;\n      lname: string;\n      father_names: string;\n      mother_names: string;\n      sex: string;\n      date_of_birth: string;\n      place_of_birth: string;\n      country_of_birth: string;\n      village_id: string;\n      village: string;\n      cell: string;\n      sector: string;\n      district: string;\n      province: string;\n      civil_status: string;\n      spouse: null;\n      status: string;\n      photo: string;\n    };\n  };\n  user_id: string;\n  position: string;\n  application_session: string;\n  exams: ApplicationExamsInterface[];\n}\n\nexport const getDocCategoryById = (\n  subDocs: DocumentCategoryInterface[],\n  docId: string\n): DocumentCategoryInterface => {\n  return subDocs.filter((doc) => doc.user_detail_category_id === docId)[0];\n};\n\nexport const getSubDocCategoryById = (\n  subDocs: DocumentSubCategoryInterface[],\n  docId: string\n): DocumentSubCategoryInterface => {\n  return subDocs.filter((doc) => doc.user_detail_subcategory_id === docId)[0];\n};\n\nexport const SESSION_PLAN_TYPES: {\n  type_id: number;\n  type_title: string;\n  type_key: SESSION_PLAN_KEYS;\n}[] = [\n  {\n    type_id: 1,\n    type_title: \"Application\",\n    type_key: SESSION_PLAN_KEYS.APPLICATION,\n  },\n  {\n    type_id: 2,\n    type_title: \"Document Validation\",\n    type_key: SESSION_PLAN_KEYS.DOCUMENT_VALIDATION,\n  },\n  {\n    type_id: 3,\n    type_title: \"Examination\",\n    type_key: SESSION_PLAN_KEYS.EXAMINATION,\n  },\n  {\n    type_id: 4,\n    type_title: \"Marks Publication\",\n    type_key: SESSION_PLAN_KEYS.MARKS_PUBLICATION,\n  },\n  {\n    type_id: 5,\n    type_title: \"Placement and Transfer\",\n    type_key: SESSION_PLAN_KEYS.PLACEMENT_TRANSFER,\n  },\n];\n","import { ApexOptions } from \"apexcharts\";\nimport React, { useEffect, useState } from \"react\";\nimport Chart from \"react-apexcharts\";\n\ntype VBarCharPropstInterface = {\n  labels: string[];\n  categoriesLabel: any;\n  bar?: {\n    borderRadius: number;\n    horizontal: boolean;\n    columnWidth: string;\n    endingShape: string;\n  };\n  dataLabels: boolean;\n  yaxisText: string;\n  tooltipText: string;\n  series: {\n    name: string;\n    data: number[];\n  }[];\n  defaultBar?: {\n    borderRadius: number;\n    horizontal: boolean;\n    columnWidth: string;\n    endingShape: string;\n  };\n  colors?: any[];\n  title?: {\n    text: string;\n    align: string;\n    margin: number;\n    offestY: number;\n    style: {\n      fontSize: string;\n    };\n  };\n  stacked?: boolean;\n  FC_LoadSelected?: (labelIndex: number, seriesIndex: number) => void;\n  chartHeight?: number;\n};\n\nconst defaultBar = {\n  borderRadius: 4,\n  horizontal: false,\n  columnWidth: \"95%\",\n  endingShape: \"rounded\",\n};\n\nconst VBarChart: React.FC<VBarCharPropstInterface> = (props) => {\n  const [loading, setLoading] = useState<boolean>(true);\n  const [options, setOptions] = useState<ApexOptions>({\n    chart: {\n      events: {\n        dataPointSelection: (event, chartContext, config) => {\n          console.log({\n            labelClicked: config.w.config.labels[config.dataPointIndex],\n            // seriesClicked: config.w.config.series[config.dataPointIndex],\n          });\n          if (props.FC_LoadSelected) {\n            props.FC_LoadSelected(config.dataPointIndex, config.seriesIndex);\n          }\n          // console.log(config.seriesIndex);\n          // console.log(config.dataPointIndex);\n        },\n      },\n      stacked: props.stacked ? props.stacked : false,\n    },\n    plotOptions: {\n      bar: props.defaultBar ? props.defaultBar : defaultBar,\n    },\n    labels: props.labels,\n    dataLabels: {\n      enabled: true,\n    },\n    xaxis: {\n      labels: {\n        rotate: -45,\n      },\n      categories: props.categoriesLabel,\n      tickPlacement: \"on\",\n    },\n    yaxis: {\n      title: {\n        text: props.yaxisText,\n      },\n    },\n    fill: {\n      opacity: 1,\n    },\n    tooltip: {\n      y: {\n        formatter: function (val: number) {\n          return val + \" \" + props.tooltipText;\n        },\n      },\n    },\n    grid: {\n      padding: {\n        left: 30, // or whatever value that works\n        right: 30, // or whatever value that works\n      },\n    },\n    noData: {\n      text: \"No data found\",\n      align: \"center\",\n      verticalAlign: \"middle\",\n    },\n  });\n\n  useEffect(() => {\n    if (props.colors && props.colors.length > 0 && loading) {\n      setOptions({\n        chart: {\n          stacked: props.stacked ? props.stacked : false,\n          events: {\n            dataPointSelection: (event, chartContext, config) => {\n              console.log({\n                chartClicked: config.w.config.labels[config.dataPointIndex],\n              });\n              if (props.FC_LoadSelected) {\n                props.FC_LoadSelected(\n                  config.dataPointIndex,\n                  config.seriesIndex\n                );\n              }\n            },\n          },\n          zoom: {\n            enabled: true,\n            autoScaleYaxis: true,\n          },\n        },\n        plotOptions: {\n          bar: props.defaultBar ? props.defaultBar : defaultBar,\n        },\n        labels: props.labels,\n        dataLabels: {\n          enabled: true,\n        },\n        xaxis: {\n          labels: {\n            rotate: -45,\n          },\n          categories: props.categoriesLabel,\n          tickPlacement: \"on\",\n        },\n        yaxis: {\n          title: {\n            text: props.yaxisText,\n          },\n        },\n        fill: {\n          opacity: 1,\n        },\n        tooltip: {\n          y: {\n            formatter: function (val: number) {\n              return val + \" \" + props.tooltipText;\n            },\n          },\n        },\n        grid: {\n          padding: {\n            left: 30, // or whatever value that works\n            right: 30, // or whatever value that works\n          },\n        },\n        noData: {\n          text: \"No data found\",\n          align: \"center\",\n          verticalAlign: \"middle\",\n        },\n        colors: props.colors,\n      });\n    } else if (loading) {\n      setOptions({\n        chart: {\n          stacked: props.stacked ? props.stacked : false,\n          events: {\n            dataPointSelection: (event, chartContext, config) => {\n              console.log({\n                labelClicked: config.w.config.labels[config.dataPointIndex],\n                // seriesClicked: config.w.config.series[config.dataPointIndex],\n              });\n              if (props.FC_LoadSelected) {\n                props.FC_LoadSelected(\n                  config.dataPointIndex,\n                  config.seriesIndex\n                );\n              }\n              // console.log(config.seriesIndex);\n              // console.log(config.dataPointIndex);\n            },\n          },\n          zoom: {\n            enabled: true,\n            autoScaleYaxis: true,\n          },\n        },\n        plotOptions: {\n          bar: props.defaultBar ? props.defaultBar : defaultBar,\n        },\n        labels: props.labels,\n        dataLabels: {\n          enabled: true,\n        },\n        xaxis: {\n          labels: {\n            rotate: -45,\n          },\n          categories: props.categoriesLabel,\n          tickPlacement: \"on\",\n        },\n        yaxis: {\n          title: {\n            text: props.yaxisText,\n          },\n        },\n        fill: {\n          opacity: 1,\n        },\n        tooltip: {\n          y: {\n            formatter: function (val: number) {\n              return val + \" \" + props.tooltipText;\n            },\n          },\n        },\n        grid: {\n          padding: {\n            left: 30, // or whatever value that works\n            right: 30, // or whatever value that works\n          },\n        },\n        noData: {\n          text: \"No data found\",\n          align: \"center\",\n          verticalAlign: \"middle\",\n        },\n      });\n    }\n    setLoading(false);\n  }, [loading, options, props]);\n\n  if (loading) {\n    return (\n      <div className=\"text-center mt-7 font-bold text-4xl text-gray-400 animate-pulse\">\n        Loading Data...\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"w-full\">\n      <Chart\n        options={options}\n        series={props.series}\n        type=\"bar\"\n        width=\"100%\"\n        height={props.chartHeight ? props.chartHeight : undefined}\n      />\n    </div>\n  );\n};\n\nexport default React.memo(VBarChart);\n","import React from \"react\";\nimport * as FileSaver from \"file-saver\";\nimport * as XLSX from \"xlsx\";\nimport { RiFileExcel2Fill } from \"react-icons/ri\";\n\ninterface ExportToExcelProps {\n  fileData: any[];\n  fileName: string;\n  btnName?: string;\n  className?: string;\n  showIcon?: boolean;\n}\n\nconst ExportToExcel: React.FC<ExportToExcelProps> = ({\n  fileData,\n  fileName,\n  btnName = \"Excel\",\n  className = \"flex items-center gap-1 px-4 py-1 rounded text-green-700 bg-white border hover:text-white hover:bg-green-700 border-green-700 font-bold\",\n  showIcon = true,\n}) => {\n  const fileType =\n    \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;charset=UTF-8\";\n  const fileExtension = \".xlsx\";\n\n  const exportToCSV = (apiData: any[], fileName: string) => {\n    const ws = XLSX.utils.json_to_sheet(apiData);\n    const wb = { Sheets: { data: ws }, SheetNames: [\"data\"] };\n    const excelBuffer = XLSX.write(wb, { bookType: \"xlsx\", type: \"array\" });\n    const data = new Blob([excelBuffer], { type: fileType });\n    FileSaver.saveAs(data, fileName + fileExtension);\n  };\n\n  return (\n    <button\n      onClick={(e) => exportToCSV(fileData, fileName)}\n      className={className}\n    >\n      {showIcon && <RiFileExcel2Fill />}\n      {btnName}\n    </button>\n  );\n};\n\nexport default ExportToExcel;\n","export default __webpack_public_path__ + \"static/media/mineduc.11a9ae1c.png\";","import jsPDF from \"jspdf\";\nimport { DATE } from \"../../utils/functions\";\nimport Logo from \"../../utils/mineduc.png\";\nrequire(\"jspdf-autotable\");\n\nexport const addFooters = (doc: any) => {\n  const pageCount = doc.internal.getNumberOfPages();\n\n  doc.setFont(\"helvetica\", \"italic\");\n  doc.setFontSize(8);\n  for (var i = 1; i <= pageCount; i++) {\n    doc.setPage(i);\n    doc.text(\n      \"Page \" + String(i) + \" of \" + String(pageCount),\n      doc.internal.pageSize.width / 2,\n      297,\n      {\n        align: \"center\",\n      }\n    );\n  }\n};\n\nexport type reportSettingsInterface = {\n  doneBy: string;\n  title: string;\n  subjectTitle: string;\n  subject: string;\n  institute: string;\n  period: string;\n  footer: string;\n  orientation?: \"p\" | \"l\";\n};\n\nexport const generatePDF = async (\n  reportSettings: reportSettingsInterface,\n  table: HTMLElement,\n  callBack: (status: boolean) => void\n) => {\n  callBack(true);\n  const orientation: \"p\" | \"l\" = reportSettings.orientation\n    ? reportSettings.orientation\n    : \"p\";\n  var lMargin: number = 20; //left margin in mm\n  var rMargin: number = 20; //right margin in mm\n  var pdfInMM: number = 185; // width of A4 in mm\n\n  //   var doc = new jsPDF(\"p\", \"mm\", \"a4\");\n  var doc: any = new jsPDF(orientation, \"mm\", \"a4\");\n\n  doc.setTextColor(95, 95, 95);\n  doc.setFontSize(28);\n  // doc.text(\n  //   this.props.reportTitle,\n  //   doc.internal.pageSize.getWidth() / 2,\n  //   30,\n  //   undefined,\n  //   \"center\"\n  // );\n  doc.addImage(Logo, \"png\", 20, 20, 10, 10);\n  doc.text(\"MINEDUC\", 32, 28.5, undefined, \"left\");\n  //   doc.setTextColor(19, 90, 152);\n  doc.setFontSize(26);\n  doc.text(\n    reportSettings.title,\n    doc.internal.pageSize.getWidth() / 2,\n    42.7,\n    undefined,\n    \"center\"\n  );\n\n  doc.setFontSize(20);\n  doc.text(\n    reportSettings.institute,\n    doc.internal.pageSize.getWidth() / 2,\n    53.7,\n    undefined,\n    \"center\"\n  );\n\n  var lines;\n  lines = doc.splitTextToSize(\n    reportSettings.subject,\n    pdfInMM - lMargin - rMargin\n  );\n  // if (reportSettings.position) {\n  // } else if (reportSettings.subject) {\n  //   lines = doc.splitTextToSize(\n  //     reportSettings.subject,\n  //     pdfInMM - lMargin - rMargin\n  //   );\n  // }\n\n  //   doc.setTextColor(0, 123, 255);\n  doc.setFontSize(16);\n  //   doc.text(lines, doc.internal.pageSize.getWidth() / 2, 45, {\n  //     maxWidth: 85,\n  //     align: \"center\",\n  //   });\n\n  var y = 63,\n    width;\n  doc.setTextColor(95, 95, 95);\n  doc.text(`${reportSettings.subjectTitle}: `, lMargin, y);\n  width = doc.getTextWidth(`${reportSettings.subjectTitle}: `);\n  // if (reportSettings.position) {\n  // } else if (reportSettings.position) {\n  //   doc.text(`Subject: `, lMargin, y);\n  //   width = doc.getTextWidth(\"Subject: \");\n  // }\n  // doc.setFontType(\"bold\");\n  doc.setTextColor(38, 38, 38);\n  for (var i = 0; i < lines.length; i++) {\n    if (y > 280) {\n      y = 10;\n      doc.addPage();\n    }\n    // doc.text(15, y, lines[i]);\n    doc.text(lines[i], lMargin + width, y);\n    y = y + 7;\n  }\n  doc.setTextColor(95, 95, 95);\n  doc.text(\"Period: \", lMargin, y + 3);\n  width = doc.getTextWidth(\"Period: \");\n  doc.setTextColor(38, 38, 38);\n  doc.text(reportSettings.period, lMargin + width, y + 3);\n\n  doc.autoTable({\n    html: table,\n    startY: 85,\n    margin: { horizontal: 20 },\n    cellPadding: 3, // Horizontal cell padding\n    // fontSize: 12,\n    rowHeight: 20,\n    // styles: { overflow: \"linebreak\" },\n    bodyStyles: { valign: \"top\" },\n    columnStyles: { email: { cellWidth: \"wrap\" } },\n    theme: \"striped\",\n    tableWidth: true,\n  });\n\n  doc.setFontSize(12);\n  let finalY = doc.lastAutoTable.finalY; // The y position on the page\n  doc.text(`Reported by: ${reportSettings.doneBy}`, lMargin, finalY + 15);\n  doc.text(\n    \"Report downloaded on \" + DATE(new Date().toString()),\n    lMargin,\n    finalY + 23\n  );\n\n  addFooters(doc);\n  await doc\n    .save(\n      `${\n        reportSettings.title +\n        \": \" +\n        reportSettings.subject +\n        \": \" +\n        reportSettings.period\n      }.pdf`,\n      { returnPromise: true }\n    )\n    .then(callBack(false));\n};\n","import axios from \"axios\";\nimport React from \"react\";\nimport { FaRegCheckCircle } from \"react-icons/fa\";\nimport { MdInfoOutline } from \"react-icons/md\";\nimport { RiArrowGoBackFill } from \"react-icons/ri\";\nimport { connect } from \"react-redux\";\nimport { PushPopupAlert } from \"../../actions\";\nimport { createReClaim, DocumentClaimUser } from \"../../actions/claiming\";\nimport {\n  CandidateClaimInterface,\n  ClaimDecisionStatus,\n  claimReasonInterface,\n  ClaimStatus,\n} from \"../../interfaces\";\nimport { PopupAlertTheme } from \"../../interfaces/popupAlert\";\nimport { DocumentReducerInterface } from \"../../reducers/document\";\nimport { capitalizeFirstLetter, isEmptyOrSpaces } from \"../../shared/dataTest\";\nimport { API } from \"../../utils/api\";\nimport { setAxiosToken } from \"../../utils/AxiosToken\";\nimport { errorToText, showDate } from \"../../utils/functions\";\nimport { ClaimGetDocTitle } from \"./Candidate/ClaimForm\";\n\nconst isReclaimAllowed = (thisClaim: CandidateClaimInterface): boolean => {\n  if (thisClaim.claim_level === 1) {\n    const _thisClaim = thisClaim.claims.find((item) => item.level === 1);\n    if (_thisClaim) {\n      if (_thisClaim.decision_taken_status === ClaimDecisionStatus.REJECTED) {\n        return true;\n      }\n    }\n  }\n  return false;\n};\n\nexport const isClaimEvaluated = (\n  thisClaim: CandidateClaimInterface,\n  level: number\n): boolean => {\n  const _thisClaim = thisClaim.claims.find(\n    (item) =>\n      item.level === level && item.claim_status === ClaimStatus.EVALUATED\n  );\n  if (_thisClaim) {\n    return true;\n  }\n  return false;\n};\n\ntype ClaimDocViewProps = {\n  thisDoc: DocumentClaimUser;\n  // setViewThisFile: (value: string) => void;\n  documentCategories: DocumentReducerInterface;\n  claimReasons: claimReasonInterface[] | null;\n  thisClaim: CandidateClaimInterface;\n  viewImage: boolean;\n  setViewImage: (value: boolean) => void;\n  loadingRequest: boolean;\n  setLoadingRequest: (value: boolean) => void;\n  reClaiming: boolean;\n  setReClaiming: (value: boolean) => void;\n  reClaimingMsg: string;\n  setReClaimingMsg: (value: string) => void;\n  formError: {\n    element: string;\n    msg: string;\n  } | null;\n  setFormError: (\n    value: {\n      element: string;\n      msg: string;\n    } | null\n  ) => void;\n\n  // REDUX DATA =====================\n  createReClaim: Function;\n  PushPopupAlert: Function;\n};\n\nconst ClaimDocView: React.FC<ClaimDocViewProps> = (props) => {\n  const handleSubmit = async () => {\n    if (isEmptyOrSpaces(props.reClaimingMsg)) {\n      return props.setFormError({\n        element: \"comment\",\n        msg: \"Claim comment is required!\",\n      });\n    }\n    if (!props.thisClaim) {\n      return props.PushPopupAlert({\n        title: \"Claim sent successful\",\n        theme: PopupAlertTheme.warning,\n      });\n    }\n\n    props.setLoadingRequest(true);\n    try {\n      setAxiosToken();\n      const res = await axios.put<CandidateClaimInterface>(\n        `${API.CLAIMING}/user/reclaim/${props.thisClaim._id}`,\n        {\n          reason: props.reClaimingMsg,\n        }\n      );\n      console.log({ res: res.data });\n      if (res.status === 201 || res.status === 200) {\n        props.createReClaim(res.data);\n        props.PushPopupAlert({\n          title: \"Claim sent successful\",\n          theme: PopupAlertTheme.success,\n        });\n        props.setReClaimingMsg(\"\");\n        props.setReClaiming(false);\n      }\n    } catch (error) {\n      console.error({ error });\n      props.PushPopupAlert({\n        title: errorToText(error),\n        theme: PopupAlertTheme.danger,\n      });\n    }\n    props.setLoadingRequest(false);\n  };\n\n  const getReasonById = (\n    reason_id: string\n  ): claimReasonInterface | undefined => {\n    if (props.claimReasons) {\n      return props.claimReasons.find((item) => item.id === reason_id);\n    }\n    return undefined;\n  };\n\n  return (\n    <section className=\"\">\n      <div className=\"w-full bg-white px-4 py-1 divide-y-2 space-y-2\">\n        {/* DOCUMENT DETAILS ==================================================== */}\n        <section className=\"flex flex-col\">\n          <div className=\"flex items-center justify-between\">\n            <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n              <span className={`italic`}>Title:</span>\n              <span className=\"text-gray-800 font-bold text-xl\">\n                {ClaimGetDocTitle(props.documentCategories, props.thisDoc).main}\n              </span>\n            </div>\n            <button\n              type=\"button\"\n              className=\"bg-blue-200 hover:bg-blue-300 text-blue-700 group-hover:text-blue-800 py-1 px-2 mr-1 rounded text-sm\"\n              onClick={() => props.setViewImage(!props.viewImage)}\n            >\n              {props.viewImage ? \"Hide\" : \"View\"}\n            </button>\n          </div>\n          <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n            <span className={`italic`}>Status:</span>\n            <span\n              className={`font-bold ${\n                props.thisDoc.validation_status === \"rejected\"\n                  ? \"text-yellow-900\"\n                  : \"text-blue-600\"\n              } rounded px-3 py-1`}\n            >\n              {capitalizeFirstLetter(props.thisDoc.validation_status)}\n            </span>\n          </div>\n          <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n            <span className={`italic`}>Evaluated by:</span>\n            <span className=\"font-semibold\">\n              {props.thisClaim.previous.evaluater.name}\n            </span>\n          </div>\n          <div className=\"flex items-start gap-2 text-sm text-gray-600\">\n            <span className={`italic`}>Reason:</span>\n            <span className=\"font-normal\">\n              {props.thisDoc.validated_by.comment}\n            </span>\n          </div>\n\n          {/* DISPLAY IMAGE ==================================================== */}\n          {props.viewImage && (\n            <div className=\"w-full my-1 animate__animated animate__fadeIn\">\n              <img\n                src={`${API.AUTH_FILES}/${props.thisDoc.files}`}\n                alt=\"doc file\"\n                className={`w-full animate__animated animate__fadeIn`}\n              />\n            </div>\n          )}\n          {/* END DISPLAY IMAGE ==================================================== */}\n        </section>\n        {/* END DOCUMENT DETAILS ==================================================== */}\n\n        {/* ################################################################################ */}\n\n        {/* CLAIM LEVELS DETAILS ==================================================== */}\n        {props.thisClaim.claims.length > 0 &&\n          props.thisClaim.claims.map((claim, index) => (\n            <section className=\"flex flex-col px-2 pt-3\" key={index + claim.id}>\n              {/* CLAIM COMMENT ==>> LEVEL 1 ==================================================== */}\n              <div className=\"flex flex-col items-start gap-2\">\n                <div className=\"flex items-center gap-2 bg-blue-100 rounded py-1 px-2\">\n                  <MdInfoOutline />\n                  {getReasonById(props.thisClaim.default_claim_resaons)\n                    ? getReasonById(props.thisClaim.default_claim_resaons)!\n                        .reason\n                    : \"\"}\n                </div>\n                <p>{claim.reason}</p>\n                <span className=\"text-gray-500 text-xs\">\n                  {showDate(claim.createdAt)}\n                </span>\n              </div>\n\n              {/* RESPONSE OF LEVELS ======================================= */}\n              {isClaimEvaluated(props.thisClaim, claim.level) && (\n                <section className=\"mt-4\">\n                  <span className=\"text-gray-500 italic font-semibold\">\n                    Response (level {index + 1})\n                  </span>\n                  <div className=\"border-t-2\">\n                    <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n                      <span className={`italic`}>Status:</span>\n                      <span\n                        className={`font-bold ${\n                          claim.decision_taken_status ===\n                          ClaimDecisionStatus.REJECTED\n                            ? \"text-yellow-900\"\n                            : \"text-blue-600\"\n                        } rounded px-3 py-1`}\n                      >\n                        {capitalizeFirstLetter(\n                          claim.decision_taken_status.toLocaleLowerCase()\n                        )}\n                      </span>\n                    </div>\n                    <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n                      <span className={`italic`}>Evaluated by:</span>\n                      <span className=\"font-semibold\">\n                        {claim.evaluater.name}\n                      </span>\n                    </div>\n                    <div className=\"flex items-start gap-2 text-sm text-gray-600\">\n                      <span className={`italic`}>Reason:</span>\n                      <span className=\"font-normal\">\n                        {claim.evaluation_comment}\n                      </span>\n                    </div>\n                  </div>\n                </section>\n              )}\n              {/* CLAIM COMMENT ==>> LEVELS ==================================================== */}\n            </section>\n          ))}\n        {/* END CLAIM LEVELS DETAILS ==================================================== */}\n      </div>\n      <section>\n        {!props.reClaiming && (\n          <div className=\"mx-4 mb-5 mt-3 flex items-center justify-between\">\n            <span\n              className={`${\n                props.thisClaim.last_claim_status === ClaimStatus.PENDING\n                  ? \"text-yellow-700\"\n                  : props.thisClaim.last_claim_status === ClaimStatus.DELETED\n                  ? \"text-red-700\"\n                  : \"text-green-700\"\n              } italic font-semibold`}\n            >\n              {capitalizeFirstLetter(\n                props.thisClaim.last_claim_status.toLocaleLowerCase()\n              )}\n            </span>\n\n            {isReclaimAllowed(props.thisClaim) && (\n              <button\n                className=\"btn btn-blue\"\n                onClick={() => props.setReClaiming(true)}\n                disabled={props.loadingRequest}\n              >\n                Reclaim\n              </button>\n            )}\n          </div>\n        )}\n        {/* right part */}\n        {props.reClaiming && (\n          <div className=\"flex flex-col md:flex-row items-end md:items-start gap-1 w-full\">\n            <div className=\"w-full px-2\">\n              <textarea\n                placeholder={`Reason of your reclaim...`}\n                cols={50}\n                rows={3}\n                className={`border border-${\n                  props.formError && props.formError.element === \"comment\"\n                    ? \"red\"\n                    : \"gray\"\n                }-400 rounded px-3 py-1 w-full focus:outline-none`}\n                style={{ resize: \"none\" }}\n                value={props.reClaimingMsg}\n                onChange={(e) => {\n                  props.setReClaimingMsg(e.target.value);\n                  props.setFormError(null);\n                }}\n                disabled={props.loadingRequest}\n              ></textarea>\n              {props.formError && props.formError.element === \"comment\" && (\n                <p className=\"text-red-800\">{props.formError.msg}</p>\n              )}\n            </div>\n            <div className=\"flex flex-row md:flex-col gap-1 max-w-full px-2\">\n              <button\n                className=\"bg-gray-700 hover:bg-gray-800 px-4 py-2 font-semibold rounded text-white inline-flex items-center space-x-2 focus:outline-none\"\n                onClick={() => {\n                  props.setReClaimingMsg(\"\");\n                  props.setReClaiming(false);\n                  props.setFormError(null);\n                }}\n                disabled={props.loadingRequest}\n              >\n                <RiArrowGoBackFill className=\"w-5 h-5\" />\n                <span>Back</span>\n              </button>\n              <button\n                className=\"bg-blue-700 hover:bg-blue-800 px-4 py-2 font-semibold rounded text-white inline-flex items-center space-x-2 focus:outline-none\"\n                disabled={props.loadingRequest}\n                onClick={() => handleSubmit()}\n              >\n                {props.loadingRequest ? (\n                  <div className=\"\">Loading...</div>\n                ) : (\n                  <div className=\"inline-flex items-center space-x-2 gap-1\">\n                    <FaRegCheckCircle className=\"w-5 h-5\" />\n                    <span>Confirm</span>\n                  </div>\n                )}\n              </button>\n            </div>\n          </div>\n        )}\n        {/* end right part */}\n      </section>\n    </section>\n  );\n};\n\nexport default React.memo(connect(null, {\n  createReClaim,\n  PushPopupAlert,\n})(ClaimDocView));\n","import React, { useState } from \"react\";\nimport { MdSearch } from \"react-icons/md\";\nimport { connect } from \"react-redux\";\nimport { ApplicationSession } from \"../../../actions\";\nimport {\n  course,\n  CandidateClaimInterface,\n  claimApplicationsInterface,\n  ClaimExamResultsDetails,\n} from \"../../../interfaces\";\nimport { candidatePlacementInterface } from \"../../../interfaces/placement\";\nimport { isClaimAllowed } from \"./ClaimForm\";\n\nexport const getCourseById = (courses: course[], course_id: string) => {\n  return courses.find((item) => item.course_id === course_id);\n};\n\nexport const getCourseIdBySheetId = (\n  allData: ClaimExamResultsDetails[],\n  sheet_id: string\n) => {\n  return allData.find((item) => item.answer_sheet_id === sheet_id);\n};\n\nexport const searchApplication = (\n  objList: claimApplicationsInterface[],\n  text: any\n): claimApplicationsInterface[] => {\n  if (undefined === text || text === \"\") return objList;\n  return objList.filter((product) => {\n    let flag;\n    // let dataKeys = product;\n\n    for (let prop in product) {\n      flag = false;\n      if (prop === \"position\") {\n        flag =\n          product.position.position_title\n            .toString()\n            .toLowerCase()\n            .indexOf(text.toLowerCase()) > -1;\n      }\n      if (flag) break;\n    }\n    return flag;\n  });\n  // return objList.filter((product) =>\n  //   product.position.position_title.includes(text)\n  // );\n};\n\ntype FormPlacementListProps = {\n  setChooseClaimFile: (value: boolean) => void;\n  setClaimFileId: (value: string) => void;\n  setViewThisFile: (value: string) => void;\n  claimFileId: string;\n  viewThisFile: string;\n  myPlacement: candidatePlacementInterface | null;\n  myClaims: CandidateClaimInterface[];\n  activeSession: ApplicationSession;\n\n  // REDUX //////////////////////\n};\n\nconst FormPlacementList: React.FC<FormPlacementListProps> = (props) => {\n  const [searchInput, setSearchInput] = useState<string>(\"\");\n\n  return (\n    <section>\n      {/* SEARCH PART */}\n      <div className=\"flex items-center w-full my-1\">\n        <MdSearch className=\"w-6 h-6 absolute ml-2\" />\n        <input\n          type=\"text\"\n          placeholder=\"Search\"\n          className=\"focus:border-2 h-7 ml-1 pl-9 mr-2 bg-gray-100 focus:border-gray-700 w-full rounded\"\n          onChange={(e) => setSearchInput(e.target.value)}\n          value={searchInput}\n          disabled={\n            props.myPlacement === null ||\n            isClaimAllowed(\n              props.myClaims,\n              props.activeSession.session_plan_id,\n              props.myPlacement.placed._id\n            )\n              ? false\n              : true\n          }\n        />\n        <button\n          className=\"bg-red-200 text-red-700 py-1 px-2 mr-1 rounded text-sm focus:outline-none\"\n          type=\"button\"\n          onClick={() => {\n            props.setChooseClaimFile(false);\n            props.setViewThisFile(\"\");\n          }}\n        >\n          Close\n        </button>\n      </div>\n      {/* END SEARCH PART ///////////////// */}{\" \"}\n      {/* searchData(props.candidateAnswers, searchInput) */}\n      <div className=\"w-full h-52 mt-2 overflow-y-auto divide-y divide-gray-300\">\n        {props.myPlacement ? (\n          isClaimAllowed(\n            props.myClaims,\n            props.activeSession.session_plan_id,\n            props.myPlacement.placed._id\n          ) && (\n            <div className=\"group flex items-center justify-between my-1 hover:bg-gray-100\">\n              <div\n                className=\"p-1 w-full mr-2 cursor-pointer\"\n                onClick={() => {\n                  props.setChooseClaimFile(false);\n                  props.setClaimFileId(props.myPlacement!.placed._id);\n                }}\n              >\n                <p className=\"text-base font-medium text-black\">\n                  Placed on {props.myPlacement.placed.school.school_name}\n                </p>\n              </div>\n              <button\n                type=\"button\"\n                className=\"bg-blue-200 hover:bg-blue-300 text-blue-700 group-hover:text-blue-800 py-1 px-2 mr-1 rounded text-sm\"\n                onClick={() => {\n                  props.setViewThisFile(props.myPlacement!.placed._id);\n                }}\n              >\n                View\n              </button>\n            </div>\n          )\n        ) : (\n          <div className=\"text-center p-3\">\n            <p className=\"text-base font-medium text-black\">\n              No placement to claim on!\n            </p>\n          </div>\n        )}\n      </div>\n    </section>\n  );\n};\n\n// const mapStateToProps = ({\n//   course,\n// }: StoreState): {\n//   courses: course[] | null;\n// } => {\n//   return {\n//     courses: course.courses,\n//   };\n// };\nexport default React.memo(connect(null, {})(FormPlacementList));\n","import axios from \"axios\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Auth, loadCourses, PushPopupAlert } from \"../../../actions\";\nimport {\n  createClaim,\n  DocumentClaimUser,\n  GetClaimingTypes,\n  getClaimReasons,\n  getMyAnswers,\n  getMyClaims,\n  getMyPlacement,\n  getMyRejectedApplications,\n  getMyRejectedDocuments,\n} from \"../../../actions/claiming\";\nimport {\n  getDocumentCategory,\n  getDocumentSubCategory,\n  getDocumentFields,\n} from \"../../../actions/document\";\nimport { PopupAlertData } from \"../../../components/Alert/Popup\";\nimport Modal, { ModalSize, Themes } from \"../../../components/Modal/Modal\";\nimport {\n  CandidateClaimInterface,\n  claimApplicationsInterface,\n  ClaimExamResultsDetails,\n  claimReasonInterface,\n  course,\n  PlansInterface,\n  PlansTypeKeys,\n  SessionPlanInterface,\n} from \"../../../interfaces\";\nimport { candidatePlacementInterface } from \"../../../interfaces/placement\";\nimport { PopupAlertTheme } from \"../../../interfaces/popupAlert\";\nimport { StoreState } from \"../../../reducers\";\nimport { ClaimingReducerType } from \"../../../reducers/claiming\";\nimport { DocumentReducerInterface } from \"../../../reducers/document\";\nimport {\n  capitalizeFirstLetter,\n  isEmptyOrSpaces,\n} from \"../../../shared/dataTest\";\nimport { UserInterface } from \"../../../shared/interfaces\";\nimport { API } from \"../../../utils/api\";\nimport { setAxiosToken } from \"../../../utils/AxiosToken\";\nimport { errorToText } from \"../../../utils/errors\";\nimport { isPlanActive } from \"../../SessionSettings/ApplicationSession/SessionDetails\";\nimport ApplicationFormView from \"./ApplicationFormView\";\nimport ChooseReason from \"./ChooseReason\";\nimport DocFormView from \"./DocFormView\";\nimport ExaminationFormView from \"./ExaminationFormView\";\nimport FormApplicationList from \"./FormApplicationList\";\nimport FormDocumentList from \"./FormDocumentList\";\nimport FormExamList, {\n  getCourseById,\n  getCourseIdBySheetId,\n} from \"./FormExamList\";\nimport FormPlacementList from \"./FormPlacementList\";\n\nexport const ClaimGetDocTitle = (\n  documentCategories: DocumentReducerInterface,\n  doc: DocumentClaimUser\n): { category: string; sub_category: string; field: string; main: string } => {\n  let DocCategory: string = \"\",\n    DocSubCategory: string = \"\",\n    DocField: string = \"\",\n    DocTitle: string = \"\";\n  if (\n    doc.sub_category_id.length > 0 &&\n    documentCategories.documentSubCategory\n  ) {\n    DocTitle = documentCategories.documentSubCategory.filter(\n      (c) => c.user_detail_subcategory_id === doc.sub_category_id\n    )[0].title;\n    DocSubCategory = DocTitle;\n  } else if (\n    doc.category_id.length > 0 &&\n    documentCategories.documentCategory\n  ) {\n    DocTitle = documentCategories.documentCategory.filter(\n      (c) => c.user_detail_category_id === doc.category_id\n    )[0].title;\n    DocCategory = DocTitle;\n  }\n  if (\n    doc.category_subcategory_data &&\n    doc.category_subcategory_data.category_subcategory_Data_id.length > 0 &&\n    documentCategories.documentFields\n  ) {\n    console.log({ doc });\n    DocField = documentCategories.documentFields.filter(\n      (c) =>\n        c._id === doc.category_subcategory_data?.category_subcategory_Data_id\n    )[0].title;\n    DocTitle += \" in \" + DocField;\n  }\n\n  return {\n    category: DocCategory,\n    sub_category: DocSubCategory,\n    field: DocField,\n    main: DocTitle,\n  };\n};\n\nexport const isClaimAllowed = (\n  allClaim: CandidateClaimInterface[],\n  period_id: string,\n  claimOnId: string\n): boolean => {\n  if (\n    allClaim.find(\n      (item) =>\n        item.period_id === period_id && item.claiming_on_id === claimOnId\n    )\n  ) {\n    return false;\n  }\n  return true;\n};\n\ntype ClaimFormProps = {\n  // REQUIRED PROPS\n  formState: boolean;\n  setFormState: (value: boolean, response?: boolean) => void;\n  auth: Auth;\n  claiming: ClaimingReducerType;\n  documentReducer: DocumentReducerInterface;\n  courses: course[] | null;\n  loadCourses: Function;\n  getMyAnswers: Function;\n  getMyPlacement: Function;\n  getClaimReasons: Function;\n  createClaim: Function;\n  GetClaimingTypes: Function;\n  getDocumentCategory: Function;\n  getDocumentSubCategory: Function;\n  getDocumentFields: Function;\n  getMyRejectedApplications: Function;\n  getMyRejectedDocuments: Function;\n  getMyClaims: Function;\n  PushPopupAlert: (alert: PopupAlertData) => void;\n};\n\ntype ClaimFormState = {\n  loading: boolean;\n  loadingForm: boolean;\n  formError: {\n    element: string;\n    msg: string;\n  } | null;\n  thisClaimType: PlansTypeKeys | null;\n  thisClaimTypeId: string;\n  claimComment: string;\n  claimFileId: string;\n  chooseClaimFile: boolean;\n  chooseClaimReason: boolean;\n  claimReason: claimReasonInterface | null;\n  myPlacement: candidatePlacementInterface | null;\n  viewThisFile: string;\n  formType: \"DEFAULT\" | \"PROPS\";\n  alertError: string | null;\n};\n\nclass ClaimForm extends Component<ClaimFormProps, ClaimFormState> {\n  constructor(props: ClaimFormProps) {\n    super(props);\n\n    this.state = {\n      loading: false,\n      loadingForm: false,\n      formError: null,\n      thisClaimType: null,\n      thisClaimTypeId: \"\",\n      claimComment: \"\",\n      claimFileId: \"\",\n      chooseClaimFile: false,\n      viewThisFile: \"\",\n      formType: \"DEFAULT\",\n      alertError: null,\n      myPlacement: this.props.claiming.myPlacement,\n      chooseClaimReason: false,\n      claimReason: null,\n    };\n  }\n\n  setLoading = (state: boolean) => {\n    this.setState({ loading: state });\n  };\n\n  setLoadingForm = (state: boolean) => {\n    this.setState({ loadingForm: state });\n  };\n\n  setFormError = (\n    data: {\n      element: string;\n      msg: string;\n    } | null\n  ) => {\n    this.setState({ formError: data });\n  };\n\n  setAlertError = (data: string | null) => {\n    this.setState({ alertError: data });\n  };\n\n  setClaimFileId = (data: string) => {\n    this.setState({ claimFileId: data });\n  };\n\n  setViewThisFile = (data: string) => {\n    this.setState({ viewThisFile: data });\n  };\n\n  setChooseClaimFile = (data: boolean) => {\n    this.setState({ chooseClaimFile: data });\n  };\n\n  setChooseClaimReason = (data: boolean) => {\n    this.setState({ chooseClaimReason: data });\n  };\n\n  setClaimReason = (value: claimReasonInterface | null) => {\n    this.setState({ claimReason: value });\n  };\n\n  setClaimComment = (data: string) => {\n    this.setState({ claimComment: data });\n  };\n\n  isClaimTypeOpen = (\n    thisSession: SessionPlanInterface,\n    thisType: PlansTypeKeys\n  ): boolean => {\n    let data: PlansInterface | undefined;\n    if (thisType === PlansTypeKeys.APPLICATION) {\n      data = thisSession.plans.find(\n        (item) => item.type_key === PlansTypeKeys.APPLICATION\n      );\n      if (data && isPlanActive(thisSession, data) === \"OPEN\") {\n        return true;\n      }\n    } else if (thisType === PlansTypeKeys.DOCUMENT_VALIDATION) {\n      data = thisSession.plans.find(\n        (item) => item.type_key === PlansTypeKeys.DOCUMENT_VALIDATION\n      );\n      if (data && isPlanActive(thisSession, data) === \"OPEN\") {\n        return true;\n      }\n    } else if (thisType === PlansTypeKeys.PLACEMENT_TRANSFER) {\n      data = thisSession.plans.find(\n        (item) => item.type_key === PlansTypeKeys.PLACEMENT_TRANSFER\n      );\n      if (data && isPlanActive(thisSession, data) === \"OPEN\") {\n        return true;\n      }\n    }\n    return false;\n  };\n\n  displayClaimType = (claimType: PlansTypeKeys): string => {\n    let result: string = \"\";\n    switch (claimType) {\n      case PlansTypeKeys.APPLICATION:\n        result = \"application\";\n        break;\n      case PlansTypeKeys.DOCUMENT_VALIDATION:\n        result = \"document\";\n        break;\n      case PlansTypeKeys.EXAMINATION:\n        result = \"exam\";\n        break;\n      case PlansTypeKeys.MARKS_PUBLICATION:\n        result = \"marks publication\";\n        break;\n      case PlansTypeKeys.PLACEMENT_TRANSFER:\n        result = \"placement\";\n        break;\n      default:\n        result = \"\";\n        break;\n    }\n\n    return result;\n  };\n\n  loadExamAnswers = (\n    activeSessionPlan: SessionPlanInterface,\n    user_id: string\n  ) => {\n    this.props.getMyAnswers(\n      activeSessionPlan.session_plan_id,\n      user_id,\n      (status: boolean, msg: string, data: ClaimExamResultsDetails[]) => {\n        this.setLoading(status);\n        if (!status && msg.length) {\n          this.props.PushPopupAlert({\n            title: msg,\n            theme: PopupAlertTheme.danger,\n          });\n        }\n        if (data) {\n          console.log(\"====================================\");\n          console.log({ loadExamAnswers: data });\n          console.log(\"====================================\");\n        }\n      }\n    );\n  };\n\n  componentDidMount = () => {\n    if (this.props.auth.application_session === null) {\n      this.props.PushPopupAlert({\n        title: \"No session active session\",\n        theme: PopupAlertTheme.danger,\n      });\n      this.props.setFormState(false);\n      this.setState({\n        claimFileId: \"\",\n        thisClaimType: null,\n        thisClaimTypeId: \"\",\n        claimComment: \"\",\n        chooseClaimFile: false,\n        formType: \"DEFAULT\",\n        viewThisFile: \"\",\n        formError: null,\n      });\n    } else {\n      if (this.props.documentReducer.documentCategory === null) {\n        this.props.getDocumentCategory();\n      }\n      if (this.props.documentReducer.documentSubCategory === null) {\n        this.props.getDocumentSubCategory();\n      }\n      if (this.props.documentReducer.documentFields === null) {\n        this.props.getDocumentFields();\n      }\n      if (this.props.claiming.claimReasons === null) {\n        this.props.getClaimReasons((status: boolean, msg: string) => {\n          this.setLoading(status);\n          if (!status) {\n            if (msg.length > 0) {\n              this.props.PushPopupAlert({\n                title: msg,\n                theme: PopupAlertTheme.danger,\n              });\n            }\n          }\n        });\n      }\n    }\n  };\n\n  getDocumentById = (\n    documents: DocumentClaimUser[],\n    doc_id: string\n  ): DocumentClaimUser => {\n    return documents.filter((item) => item.doc_id === doc_id)[0];\n  };\n\n  getApplicationById = (\n    applications: claimApplicationsInterface[],\n    application_id: string\n  ): claimApplicationsInterface => {\n    return applications.filter(\n      (item) => item.application_id === application_id\n    )[0];\n  };\n\n  getExamById = (\n    exams: ClaimExamResultsDetails[],\n    answer_sheet_id: string\n  ): ClaimExamResultsDetails | undefined => {\n    return exams.find((item) => item.answer_sheet_id === answer_sheet_id);\n  };\n\n  getValidation = (\n    thisId: string\n  ): {\n    old_reason: string;\n    old_status: string;\n    old_evaluated_by: string;\n  } => {\n    let result: {\n      old_reason: string;\n      old_status: string;\n      old_evaluated_by: string;\n    } = { old_reason: \"\", old_status: \"\", old_evaluated_by: \"\" };\n\n    if (\n      this.state.thisClaimType === PlansTypeKeys.DOCUMENT_VALIDATION &&\n      this.props.claiming.candidateDocuments\n    ) {\n      result = {\n        old_reason: this.getDocumentById(\n          this.props.claiming.candidateDocuments,\n          thisId\n        ).validated_by.comment,\n        old_status: this.getDocumentById(\n          this.props.claiming.candidateDocuments,\n          thisId\n        ).validated_by.validation_status,\n        old_evaluated_by: this.getDocumentById(\n          this.props.claiming.candidateDocuments,\n          thisId\n        ).validated_by.user_id,\n      };\n    } else if (\n      this.state.thisClaimType === PlansTypeKeys.APPLICATION &&\n      this.props.claiming.candidateApplications\n    ) {\n      result = {\n        old_reason: this.getApplicationById(\n          this.props.claiming.candidateApplications,\n          thisId\n        ).override_by.comment,\n        old_status: this.getApplicationById(\n          this.props.claiming.candidateApplications,\n          thisId\n        ).override_by.application_status,\n        old_evaluated_by: this.getApplicationById(\n          this.props.claiming.candidateApplications,\n          thisId\n        ).override_by.user_id,\n      };\n    }\n\n    return result;\n  };\n\n  cleanToClose = (response?: boolean) => {\n    this.props.setFormState(false);\n    this.setState({\n      claimFileId: \"\",\n      thisClaimType: null,\n      thisClaimTypeId: \"\",\n      claimComment: \"\",\n      chooseClaimFile: false,\n      formType: \"DEFAULT\",\n      viewThisFile: \"\",\n      formError: null,\n    });\n  };\n\n  loadUserById = async (user_id: string, callback: Function) => {\n    if (isEmptyOrSpaces(user_id)) {\n      return this.props.PushPopupAlert({\n        title: \"No user id provided\",\n        theme: PopupAlertTheme.danger,\n      });\n    }\n    try {\n      setAxiosToken();\n      const res = await axios.get<UserInterface>(\n        `${API.AUTH}/users/${user_id}`\n      );\n      console.log(\"====================================\");\n      console.log({ loadUserById: res });\n      console.log(\"====================================\");\n      if (res) {\n        callback(res.data);\n      }\n    } catch (error) {\n      console.error({ error });\n      this.props.PushPopupAlert({\n        title: errorToText(error),\n        theme: PopupAlertTheme.danger,\n      });\n    }\n  };\n\n  getClaimTitle = (claimType: PlansTypeKeys): string => {\n    let result: string = \"\";\n    if (\n      claimType === PlansTypeKeys.DOCUMENT_VALIDATION &&\n      this.props.claiming.candidateDocuments\n    ) {\n      result = ClaimGetDocTitle(\n        this.props.documentReducer,\n        this.getDocumentById(\n          this.props.claiming.candidateDocuments,\n          this.state.claimFileId\n        )\n      ).main;\n    }\n    if (\n      claimType === PlansTypeKeys.APPLICATION &&\n      this.props.claiming.candidateApplications\n    ) {\n      result = this.getApplicationById(\n        this.props.claiming.candidateApplications,\n        this.state.claimFileId\n      ).position.position_title;\n    }\n    if (\n      claimType === PlansTypeKeys.EXAMINATION &&\n      this.props.courses &&\n      this.props.claiming.myAnswer &&\n      getCourseIdBySheetId(\n        this.props.claiming.myAnswer,\n        this.state.claimFileId\n      ) &&\n      getCourseById(\n        this.props.courses,\n        getCourseIdBySheetId(\n          this.props.claiming.myAnswer,\n          this.state.claimFileId\n        )!.course\n      )\n    ) {\n      result = getCourseById(\n        this.props.courses,\n        getCourseIdBySheetId(\n          this.props.claiming.myAnswer,\n          this.state.claimFileId\n        )!.course\n      )!.course_name;\n    }\n    if (\n      claimType === PlansTypeKeys.PLACEMENT_TRANSFER &&\n      this.state.myPlacement\n    ) {\n      result = \"Placed on \" + this.state.myPlacement.placed.school.school_name;\n    }\n\n    return result;\n  };\n\n  getClaimInstitute = (claimType: PlansTypeKeys): string => {\n    let result: string = \"\";\n    if (\n      claimType === PlansTypeKeys.APPLICATION &&\n      this.props.claiming.candidateApplications\n    ) {\n      result = this.getApplicationById(\n        this.props.claiming.candidateApplications,\n        this.state.claimFileId\n      ).position.education_institute_id.education_institute_id;\n    }\n\n    return result;\n  };\n\n  handleSubmit = async (e: React.FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n    if (!this.state.thisClaimType) {\n      return this.setFormError({\n        element: \"claim_type\",\n        msg: \"Claim type is required!\",\n      });\n    }\n    if (isEmptyOrSpaces(this.state.claimFileId)) {\n      return this.setFormError({\n        element: \"claim_file\",\n        msg: `Please select ${this.state.thisClaimType.toLocaleLowerCase()} you are claiming on!`,\n      });\n    }\n\n    if (!this.state.claimReason) {\n      return this.setFormError({\n        element: \"claim_reason\",\n        msg: `Please select the reason of your claim!`,\n      });\n    }\n\n    if (isEmptyOrSpaces(this.state.claimComment)) {\n      return this.setFormError({\n        element: \"claim_comment\",\n        msg: `Claim comment is required!`,\n      });\n    }\n\n    if (!this.props.auth.application_session) {\n      return this.setAlertError(`No active claiming session is available!`);\n    }\n\n    this.setLoadingForm(true);\n    let old_evaluator_email: string = \"info@system.com\";\n    let old_evaluator_name: string = \"System\";\n    let evaluator_email: string = \"\";\n    let evaluator_name: string = \"\";\n    let title: string = this.getClaimTitle(this.state.thisClaimType);\n    let institute_id: string = this.getClaimInstitute(this.state.thisClaimType);\n\n    if (\n      this.state.thisClaimType !== PlansTypeKeys.EXAMINATION &&\n      this.getValidation(this.state.claimFileId).old_evaluated_by !== \"system\"\n    ) {\n      await this.loadUserById(\n        this.getValidation(this.state.claimFileId).old_evaluated_by,\n        (data: UserInterface) => {\n          old_evaluator_email = data.email;\n          old_evaluator_name =\n            data.user_info.fname + \" \" + data.user_info.lname;\n        }\n      );\n    }\n\n    if (this.state.thisClaimType === PlansTypeKeys.EXAMINATION) {\n    }\n\n    try {\n      // console.log(\"====================================\");\n      // console.log({\n      //   claiming_on_id: this.state.claimFileId,\n      //   type_key: this.state.thisClaimType,\n      //   user: this.props.auth.user.user_id,\n      //   period_id: this.props.auth.application_session.session_plan_id,\n      //   default_claim_resaons: this.state.claimReason.id,\n      //   reason: this.state.claimComment,\n      //   old_reason:\n      //     this.state.thisClaimType === PlansTypeKeys.EXAMINATION ||\n      //     this.state.thisClaimType === PlansTypeKeys.PLACEMENT_TRANSFER\n      //       ? \"System\"\n      //       : this.getValidation(this.state.claimFileId).old_reason,\n      //   old_status:\n      //     this.state.thisClaimType === PlansTypeKeys.EXAMINATION ||\n      //     this.state.thisClaimType === PlansTypeKeys.PLACEMENT_TRANSFER\n      //       ? \"Failed\"\n      //       : this.getValidation(this.state.claimFileId).old_status,\n      //   old_evaluated_by:\n      //     this.state.thisClaimType === PlansTypeKeys.EXAMINATION ||\n      //     this.state.thisClaimType === PlansTypeKeys.PLACEMENT_TRANSFER\n      //       ? \"\"\n      //       : this.getValidation(this.state.claimFileId).old_evaluated_by,\n      //   old_evaluator_email,\n      //   old_evaluator_name,\n      //   evaluator_email,\n      //   evaluator_name,\n      //   title,\n      // });\n      // console.log(\"====================================\");\n\n      setAxiosToken();\n      const res = await axios.post<CandidateClaimInterface>(\n        `${API.CLAIMING}/user/create`,\n        {\n          claiming_on_id: this.state.claimFileId,\n          type_key: this.state.thisClaimType,\n          user: this.props.auth.user.user_id,\n          period_id: this.props.auth.application_session.session_plan_id,\n          default_claim_resaons: this.state.claimReason.id,\n          reason: this.state.claimComment,\n          old_reason:\n            this.state.thisClaimType === PlansTypeKeys.EXAMINATION ||\n            this.state.thisClaimType === PlansTypeKeys.PLACEMENT_TRANSFER\n              ? \"System\"\n              : this.getValidation(this.state.claimFileId).old_reason,\n          old_status:\n            this.state.thisClaimType === PlansTypeKeys.EXAMINATION ||\n            this.state.thisClaimType === PlansTypeKeys.PLACEMENT_TRANSFER\n              ? \"Failed\"\n              : this.getValidation(this.state.claimFileId).old_status,\n          old_evaluated_by:\n            this.state.thisClaimType === PlansTypeKeys.EXAMINATION ||\n            this.state.thisClaimType === PlansTypeKeys.PLACEMENT_TRANSFER\n              ? \"\"\n              : this.getValidation(this.state.claimFileId).old_evaluated_by,\n          old_evaluator_email,\n          old_evaluator_name,\n          evaluator_email,\n          evaluator_name,\n          title,\n          institute_id,\n        }\n      );\n      console.log({ createClaim: res });\n      if (res.status === 201 || res.status === 200) {\n        this.props.createClaim(res.data);\n        this.props.PushPopupAlert({\n          title: \"Claim sent successful\",\n          theme: PopupAlertTheme.success,\n        });\n        this.cleanToClose(true);\n      }\n    } catch (error) {\n      console.error({ error });\n      this.props.PushPopupAlert({\n        title: errorToText(error),\n        theme: PopupAlertTheme.danger,\n      });\n    }\n    this.setLoadingForm(false);\n  };\n\n  selectClaimType = (thisClaim: string) => {\n    this.setState({\n      thisClaimType: isEmptyOrSpaces(thisClaim)\n        ? null\n        : (thisClaim as PlansTypeKeys),\n    });\n\n    if ((thisClaim as PlansTypeKeys) === PlansTypeKeys.APPLICATION) {\n      if (this.props.claiming.candidateApplications === null) {\n        this.props.getMyRejectedApplications(\n          this.props.auth.user.user_id,\n          (\n            status: boolean,\n            msg: string,\n            data?: claimApplicationsInterface[]\n          ) => {\n            this.setLoading(status);\n            if (!status) {\n              if (msg.length > 0) {\n                this.props.PushPopupAlert({\n                  title: msg,\n                  theme: PopupAlertTheme.danger,\n                });\n              }\n            }\n          }\n        );\n      }\n      if (\n        this.props.courses === null ||\n        (this.props.courses.length === 0 && this.state.loading)\n      ) {\n        this.props.loadCourses(this.setLoading);\n        this.setLoading(false);\n      } else {\n        this.setLoading(false);\n      }\n    } else if ((thisClaim as PlansTypeKeys) === PlansTypeKeys.EXAMINATION) {\n      if (\n        this.props.courses === null ||\n        (this.props.courses.length === 0 && this.state.loading)\n      ) {\n        this.props.loadCourses(this.setLoading);\n        this.setLoading(false);\n      } else {\n        this.setLoading(false);\n      }\n    } else if (\n      (thisClaim as PlansTypeKeys) === PlansTypeKeys.DOCUMENT_VALIDATION\n    ) {\n      if (this.props.claiming.candidateDocuments === null) {\n        this.props.getMyRejectedDocuments(\n          (status: boolean, msg: string, data?: DocumentClaimUser[]) => {\n            this.setLoading(status);\n            if (!status) {\n              if (msg.length > 0) {\n                this.props.PushPopupAlert({\n                  title: msg,\n                  theme: PopupAlertTheme.danger,\n                });\n              }\n            }\n          }\n        );\n      }\n    } else if (\n      (thisClaim as PlansTypeKeys) === PlansTypeKeys.PLACEMENT_TRANSFER\n    ) {\n      if (this.props.claiming.myPlacement === null) {\n        this.props.getMyPlacement(\n          this.props.auth.user.user_id,\n          (\n            status: boolean,\n            msg: string,\n            data?: candidatePlacementInterface | null\n          ) => {\n            this.setLoading(status);\n            if (!status) {\n              if (msg.length > 0) {\n                this.props.PushPopupAlert({\n                  title: msg,\n                  theme: PopupAlertTheme.danger,\n                });\n              }\n            }\n            if (data) {\n              this.setState({ myPlacement: data });\n            }\n          }\n        );\n      }\n    }\n  };\n\n  generateChooseFileTitle = (thisClaimType: PlansTypeKeys | null): string => {\n    let result: string = \"\";\n\n    switch (thisClaimType) {\n      case PlansTypeKeys.APPLICATION:\n        result = `Select application you are claiming on?`;\n        break;\n      case PlansTypeKeys.DOCUMENT_VALIDATION:\n        result = `Select document you are claiming on?`;\n        break;\n      case PlansTypeKeys.EXAMINATION:\n        result = `Select exam you are claiming on?`;\n        break;\n      case PlansTypeKeys.MARKS_PUBLICATION:\n        result = `Select marks publication you are claiming on?`;\n        break;\n      case PlansTypeKeys.PLACEMENT_TRANSFER:\n        result = `Select placement you are claiming on?`;\n        break;\n      default:\n        result = \"Select file you are claiming on?\";\n        break;\n    }\n\n    return result;\n  };\n\n  render() {\n    if (\n      this.props.auth.application_session === null ||\n      this.props.claiming.myClaims === null\n    ) {\n      return null;\n    }\n\n    return (\n      <div className=\"pb-3\">\n        {this.props.formState && (\n          <Modal\n            backDrop={true}\n            theme={Themes.default}\n            close={(): void => {\n              !this.state.loadingForm &&\n                this.state.viewThisFile.length <= 0 &&\n                this.cleanToClose();\n              !this.state.loadingForm &&\n                this.state.viewThisFile.length > 0 &&\n                this.setViewThisFile(\"\");\n            }}\n            displayClose={true}\n            backDropClose={false}\n            title={\n              <div className=\"text-gray-900 font-bold text-xl md:ml-1\">\n                {this.state.viewThisFile.length <= 0 && \"Claiming form\"}\n                {this.state.viewThisFile.length > 0 &&\n                  this.state.thisClaimType ===\n                    PlansTypeKeys.DOCUMENT_VALIDATION &&\n                  \"Viewing document\"}\n                {this.state.viewThisFile.length > 0 &&\n                  this.state.thisClaimType === PlansTypeKeys.APPLICATION &&\n                  \"Viewing application\"}\n              </div>\n            }\n            widthSizeClass={\n              this.state.viewThisFile.length > 0\n                ? ModalSize.extraLarge\n                : ModalSize.medium\n            }\n            padding={{ title: true, body: false, footer: false }}\n          >\n            {/* CLAIM FORM ============================================== */}\n            {this.state.viewThisFile.length <= 0 && (\n              <form onSubmit={(e) => this.handleSubmit(e)}>\n                <div className=\"px-6 pb-3\">\n                  {this.state.alertError && (\n                    <div\n                      className=\"alert-warning cursor-pointer\"\n                      onClick={() => this.setAlertError(null)}\n                    >\n                      {this.state.alertError}\n                    </div>\n                  )}\n                  <div className=\"text-base text-gray-700 sm:text-lg\">\n                    {/* SELECT CLAIM TYPE ============================================== */}\n                    <div className=\"flex flex-col mb-2\">\n                      <label>Claim type</label>\n                      <select\n                        className={`rounded px-2 py-2 w-full bg-white focus:outline-none ${\n                          this.state.formType === \"PROPS\" &&\n                          \"cursor-not-allowed\"\n                        } ${\n                          this.state.formError &&\n                          this.state.formError.element === \"claim_type\"\n                            ? \"border-red-500\"\n                            : \"border-gray-500\"\n                        } border-2`}\n                        onChange={(e: React.ChangeEvent<HTMLSelectElement>) => {\n                          this.selectClaimType(e.target.value);\n                          this.setClaimFileId(\"\");\n                          this.state.formError &&\n                            this.state.formError.element === \"claim_type\" &&\n                            this.setFormError(null);\n                        }}\n                        value={\n                          this.state.thisClaimType\n                            ? this.state.thisClaimType\n                            : \"\"\n                        }\n                        disabled={\n                          this.state.loadingForm ||\n                          this.state.formType === \"PROPS\"\n                        }\n                      >\n                        <option value=\"\">Choose claim type</option>\n                        {Object.values(PlansTypeKeys).map((item, index) => (\n                          <option\n                            value={item}\n                            key={index + item}\n                            className={`${\n                              item === PlansTypeKeys.MARKS_PUBLICATION ||\n                              item === PlansTypeKeys.PLACEMENT_TRANSFER\n                                ? \"hidden\"\n                                : \"block\"\n                            }`}\n                          >\n                            {capitalizeFirstLetter(\n                              item.toLocaleLowerCase().replace(/_/g, \" \")\n                            )}\n                          </option>\n                        ))}\n                      </select>\n                      {this.state.formError &&\n                        this.state.formError.element === \"claim_type\" && (\n                          <span className=\"text-red-500\">\n                            {this.state.formError.msg}\n                          </span>\n                        )}\n                    </div>\n                    {/* END SELECT CLAIM TYPE ============================================== */}\n\n                    {/* SELECT FILE TO CLAIM ON ============================================== */}\n                    <div className=\"flex flex-col mb-2\">\n                      <label>\n                        {this.generateChooseFileTitle(this.state.thisClaimType)}\n                      </label>\n                      <div\n                        className={`text-left bg-white border-2 ${\n                          this.state.formType !== \"PROPS\"\n                            ? \"border-gray-700\"\n                            : \"border-gray-400 text-gray-500\"\n                        } rounded w-full ${\n                          this.state.chooseClaimFile ? \"h-64\" : \"h-10\"\n                        } ${\n                          this.state.formError &&\n                          this.state.formError.element === \"claim_file\"\n                            ? \"border-red-500\"\n                            : \"\"\n                        } border-2 ${\n                          this.state.loading\n                            ? \"cursor-waiting\"\n                            : this.state.thisClaimType &&\n                              !this.state.chooseClaimFile &&\n                              this.state.formType !== \"PROPS\"\n                            ? \"cursor-pointer\"\n                            : !this.state.chooseClaimFile &&\n                              \"cursor-not-allowed\"\n                        }`}\n                        title={\n                          !this.state.thisClaimType\n                            ? \"Choose claim type first!\"\n                            : \"\"\n                        }\n                        onClick={() => {\n                          !this.state.loading &&\n                            this.state.formType === \"DEFAULT\" &&\n                            this.state.thisClaimType &&\n                            !this.state.chooseClaimFile &&\n                            this.setChooseClaimFile(true);\n                          !this.state.loading &&\n                            this.state.formError &&\n                            this.state.formError.element === \"claim_file\" &&\n                            this.setFormError(null);\n                        }}\n                      >\n                        {/* DISPLAYING FILTERED SELECTING FILE ============================ */}\n                        {this.state.claimFileId.length > 0 &&\n                        this.state.thisClaimType &&\n                        !this.state.chooseClaimFile ? (\n                          <p className=\"my-1 mx-2\">\n                            {this.getClaimTitle(this.state.thisClaimType)}\n                          </p>\n                        ) : (\n                          !this.state.chooseClaimFile && (\n                            <p className=\"my-1 mx-2\">\n                              Select Claim{\" \"}\n                              {this.state.thisClaimType &&\n                                this.state.thisClaimType\n                                  .toLocaleLowerCase()\n                                  .replace(/_/g, \" \")}\n                            </p>\n                          )\n                        )}\n                        {/* END DISPLAYING FILTERED SELECTING FILE ============================ */}\n\n                        {/* LISTING OF REJECTED DOCUMENTS ============================ */}\n                        {this.state.chooseClaimFile &&\n                          this.state.thisClaimType ===\n                            PlansTypeKeys.DOCUMENT_VALIDATION &&\n                          this.props.claiming.candidateDocuments &&\n                          this.props.claiming.myClaims &&\n                          this.props.auth.application_session && (\n                            <FormDocumentList\n                              setChooseClaimFile={this.setChooseClaimFile}\n                              setClaimFileId={this.setClaimFileId}\n                              setViewThisFile={this.setViewThisFile}\n                              claimFileId={this.state.claimFileId}\n                              viewThisFile={this.state.viewThisFile}\n                              candidateDocuments={\n                                this.props.claiming.candidateDocuments\n                              }\n                              documentCategories={this.props.documentReducer}\n                              myClaims={this.props.claiming.myClaims}\n                              activeSession={\n                                this.props.auth.application_session\n                              }\n                            />\n                          )}\n                        {/* END LISTING OF REJECTED DOCUMENTS ============================ */}\n                        {/* ---------------------------------------------------------- */}\n                        {/* LISTING OF REJECTED APPLICATION ============================ */}\n                        {this.state.chooseClaimFile &&\n                          this.state.thisClaimType ===\n                            PlansTypeKeys.APPLICATION &&\n                          this.props.claiming.candidateApplications &&\n                          this.props.claiming.myClaims &&\n                          this.props.auth.application_session && (\n                            <FormApplicationList\n                              setChooseClaimFile={this.setChooseClaimFile}\n                              setClaimFileId={this.setClaimFileId}\n                              setViewThisFile={this.setViewThisFile}\n                              claimFileId={this.state.claimFileId}\n                              viewThisFile={this.state.viewThisFile}\n                              candidateApplications={\n                                this.props.claiming.candidateApplications\n                              }\n                              myClaims={this.props.claiming.myClaims}\n                              activeSession={\n                                this.props.auth.application_session\n                              }\n                            />\n                          )}\n                        {/* END LISTING OF REJECTED APPLICATION ============================ */}\n                        {/* ---------------------------------------------------------- */}\n                        {/* LISTING OF FAILED EXAM ============================ */}\n                        {this.state.chooseClaimFile &&\n                          this.state.thisClaimType ===\n                            PlansTypeKeys.EXAMINATION &&\n                          this.props.claiming.myAnswer &&\n                          this.props.claiming.myClaims &&\n                          this.props.auth.application_session && (\n                            <FormExamList\n                              setChooseClaimFile={this.setChooseClaimFile}\n                              setClaimFileId={this.setClaimFileId}\n                              setViewThisFile={this.setViewThisFile}\n                              claimFileId={this.state.claimFileId}\n                              viewThisFile={this.state.viewThisFile}\n                              candidateAnswers={this.props.claiming.myAnswer}\n                              myClaims={this.props.claiming.myClaims}\n                              activeSession={\n                                this.props.auth.application_session\n                              }\n                            />\n                          )}\n                        {/* END LISTING OF FAILED EXAM ============================ */}\n                        {/* ---------------------------------------------------------- */}\n                        {/* PENDING PLACEMENT ============================ */}\n                        {this.state.chooseClaimFile &&\n                          this.state.thisClaimType ===\n                            PlansTypeKeys.PLACEMENT_TRANSFER &&\n                          this.props.claiming.myClaims &&\n                          this.props.auth.application_session && (\n                            <FormPlacementList\n                              setChooseClaimFile={this.setChooseClaimFile}\n                              setClaimFileId={this.setClaimFileId}\n                              setViewThisFile={this.setViewThisFile}\n                              claimFileId={this.state.claimFileId}\n                              viewThisFile={this.state.viewThisFile}\n                              myClaims={this.props.claiming.myClaims}\n                              activeSession={\n                                this.props.auth.application_session\n                              }\n                              myPlacement={this.state.myPlacement}\n                            />\n                          )}\n                        {/* END LISTING OF FAILED Placement ============================ */}\n                      </div>\n                      {this.state.formError &&\n                        this.state.formError.element === \"claim_file\" && (\n                          <span className=\"text-red-500\">\n                            {this.state.formError.msg}\n                          </span>\n                        )}\n                    </div>\n                    {/* END SELECT FILE TO CLAIM ON ============================================== */}\n\n                    {/* CLAIM REASONS ========================================== */}\n                    <div className=\"flex flex-col mb-2\">\n                      <label>Choose reason of your claim</label>\n                      <div\n                        className={`text-left bg-white border-2 border-gray-700 rounded w-full ${\n                          this.state.chooseClaimReason ? \"h-64\" : \"h-auto\"\n                        } ${\n                          this.state.formError &&\n                          this.state.formError.element === \"claim_reason\"\n                            ? \"border-red-500\"\n                            : \"\"\n                        } border-2 ${\n                          this.props.claiming.claimReasons === null\n                            ? \"cursor-wait\"\n                            : \"cursor-pointer\"\n                        }`}\n                        title=\"Choose the reason for your claim!\"\n                        onClick={() => {\n                          !this.state.chooseClaimReason &&\n                            this.setState({ chooseClaimReason: true });\n                          this.state.formError &&\n                            this.state.formError.element === \"claim_reason\" &&\n                            this.setFormError(null);\n                        }}\n                      >\n                        {/* DISPLAYING SELECTED REASON ============================ */}\n                        {this.state.claimReason &&\n                        !this.state.chooseClaimReason ? (\n                          <p className=\"my-1 mx-2\">\n                            {this.state.claimReason.reason}\n                          </p>\n                        ) : (\n                          !this.state.chooseClaimReason && (\n                            <p className=\"my-1 mx-2\">Select reason</p>\n                          )\n                        )}\n                        {/* END DISPLAYING SELECTED REASON ============================ */}\n\n                        {/* LISTING OF CLAIM REASONS ============================ */}\n                        {this.state.chooseClaimReason &&\n                          this.props.claiming.claimReasons && (\n                            <ChooseReason\n                              setChooseClaimReason={this.setChooseClaimReason}\n                              setClaimReason={this.setClaimReason}\n                              claimReason={this.state.claimReason}\n                              allClaimReasons={this.props.claiming.claimReasons}\n                            />\n                          )}\n                        {/* END LISTING OF CLAIM REASONS ============================ */}\n                      </div>\n                      {this.state.formError &&\n                        this.state.formError.element === \"claim_reason\" && (\n                          <span className=\"text-red-500\">\n                            {this.state.formError.msg}\n                          </span>\n                        )}\n                    </div>\n                    {/* END CLAIM REASONS ========================================== */}\n\n                    {/* CLAIM COMMENT ============================================== */}\n                    <div className=\"flex flex-col\">\n                      <label>Comment</label>\n                      <textarea\n                        className={`text-left input-white w-20 inline-block ${\n                          this.state.formError &&\n                          this.state.formError.element === \"claim_comment\"\n                            ? \"border-red-500\"\n                            : \"border-gray-500\"\n                        } border-2`}\n                        placeholder={`Claim comment`}\n                        style={{ resize: \"none\" }}\n                        value={this.state.claimComment}\n                        onChange={(e) => {\n                          this.setClaimComment(e.target.value);\n                          this.state.formError &&\n                            this.state.formError.element === \"claim_comment\" &&\n                            this.setFormError(null);\n                        }}\n                        rows={3}\n                        disabled={this.state.loadingForm}\n                      ></textarea>\n                      {this.state.formError &&\n                        this.state.formError.element === \"claim_comment\" && (\n                          <span className=\"text-red-500\">\n                            {this.state.formError.msg}\n                          </span>\n                        )}\n                    </div>\n                    {/* END CLAIM COMMENT ============================================== */}\n                  </div>\n\n                  <div className=\"pt-3 flex justify-between\">\n                    <button\n                      onClick={() => this.cleanToClose()}\n                      className={`btn bg-gray-400 text-white hover:bg-gray-600 focus:outline-none ${\n                        this.state.loadingForm && \"cursor-not-allowed\"\n                      }`}\n                      type=\"button\"\n                      disabled={this.state.loadingForm || this.state.loading}\n                    >\n                      Exit\n                    </button>\n                    <button\n                      className={`btn bg-primary text-white hover:bg-blue-600 focus:outline-none ${\n                        this.state.loadingForm && \"cursor-wait\"\n                      }`}\n                      type=\"submit\"\n                      disabled={this.state.loadingForm || this.state.loading}\n                    >\n                      {this.state.loadingForm ? \"Loading...\" : \"Claim\"}\n                    </button>\n                  </div>\n                </div>\n              </form>\n            )}\n            {/* END CLAIM FORM ============================================== */}\n\n            {/* CLAIM DOCUMENT VIEW ============================================== */}\n            {this.state.viewThisFile.length > 0 &&\n              this.props.claiming.candidateDocuments &&\n              this.state.thisClaimType ===\n                PlansTypeKeys.DOCUMENT_VALIDATION && (\n                <DocFormView\n                  thisDoc={this.getDocumentById(\n                    this.props.claiming.candidateDocuments,\n                    this.state.viewThisFile\n                  )}\n                  setViewThisFile={this.setViewThisFile}\n                  documentCategories={this.props.documentReducer}\n                  setChooseClaimFile={this.setChooseClaimFile}\n                  setClaimFileId={this.setClaimFileId}\n                />\n              )}\n            {/* END CLAIM DOCUMENT VIEW ============================================== */}\n            {/* ------------------------------------------------------------------------- */}\n            {/* CLAIM APPLICATION VIEW ============================================== */}\n            {this.state.viewThisFile.length > 0 &&\n              this.props.claiming.candidateApplications &&\n              this.state.thisClaimType === PlansTypeKeys.APPLICATION && (\n                <ApplicationFormView\n                  thisApplication={this.getApplicationById(\n                    this.props.claiming.candidateApplications,\n                    this.state.viewThisFile\n                  )}\n                  documentCategories={this.props.documentReducer}\n                  setChooseClaimFile={this.setChooseClaimFile}\n                  setClaimFileId={this.setClaimFileId}\n                  setViewThisFile={this.setViewThisFile}\n                />\n              )}\n            {/* END CLAIM APPLICATION VIEW ============================================== */}\n            {/* ------------------------------------------------------------------------- */}\n            {/* CLAIM EXAMINATION VIEW ============================================== */}\n            {this.state.viewThisFile.length > 0 &&\n              this.props.claiming.myAnswer &&\n              this.state.thisClaimType === PlansTypeKeys.EXAMINATION &&\n              this.getExamById(\n                this.props.claiming.myAnswer,\n                this.state.viewThisFile\n              ) && (\n                <ExaminationFormView\n                  thisAnswerSheet={\n                    this.getExamById(\n                      this.props.claiming.myAnswer,\n                      this.state.viewThisFile\n                    )!\n                  }\n                  setChooseClaimFile={this.setChooseClaimFile}\n                  setClaimFileId={this.setClaimFileId}\n                  setViewThisFile={this.setViewThisFile}\n                  // thisAnswerSheet={undefined}\n                  // setViewThisFile={undefined}\n                  // setChooseClaimFile={undefined}\n                  // setClaimFileId={undefined}\n                />\n              )}\n            {/* END CLAIM EXAMINATION VIEW ============================================== */}\n          </Modal>\n        )}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = ({\n  auth,\n  document,\n  claiming,\n  course,\n}: StoreState): {\n  auth: Auth;\n  documentReducer: DocumentReducerInterface;\n  claiming: ClaimingReducerType;\n  courses: course[] | null;\n} => {\n  return {\n    auth: auth,\n    documentReducer: document,\n    claiming,\n    courses: course.courses,\n  };\n};\n\nexport default React.memo(\n  connect(mapStateToProps, {\n    loadCourses,\n    getMyClaims,\n    getClaimReasons,\n    getMyAnswers,\n    getMyPlacement,\n    createClaim,\n    GetClaimingTypes,\n    getMyRejectedApplications,\n    getMyRejectedDocuments,\n    getDocumentCategory,\n    getDocumentSubCategory,\n    getDocumentFields,\n    PushPopupAlert,\n  })(ClaimForm)\n);\n","import React, { useState } from \"react\";\nimport {\n  MdCheckCircle,\n  MdRadioButtonUnchecked,\n  MdSearch,\n} from \"react-icons/md\";\nimport Loading from \"../../components/Loading/Loading\";\nimport {\n  PlansInterface,\n  SessionPlanInterface,\n  SessionPlanTypeStatus,\n} from \"../../interfaces\";\nimport { DATE } from \"../../utils/functions\";\nimport searchData from \"../../utils/search\";\n\nexport const isPlansActive = (plans: PlansInterface[]): PlansInterface[] => {\n  let today = new Date();\n  let activePlans: PlansInterface[] = [];\n  for (let plan of plans) {\n    let startDate = new Date(plan.start_date);\n    let endDate = new Date(plan.end_date);\n    if (\n      startDate.getTime() <= today.getTime() &&\n      endDate.getTime() >= today.getTime() &&\n      plan.type_status === SessionPlanTypeStatus.OPEN\n    ) {\n      activePlans = [...activePlans, plan];\n    }\n  }\n  return activePlans;\n};\n\ninterface ChooseSessionProps {\n  allSession: SessionPlanInterface[] | null;\n  setSelectSession: (period: SessionPlanInterface | \"all\") => void;\n  currentSelected: SessionPlanInterface | \"all\";\n  chooseAll: boolean;\n}\n\nconst ChooseSession = (props: ChooseSessionProps) => {\n  const [selectedPlan, setSelectedPlan] = useState<SessionPlanInterface | null>(\n    null\n  );\n  const [search, setSearch] = useState<string>(\"\");\n  const getSearch = (\n    period: SessionPlanInterface[],\n    searched: string\n  ): SessionPlanInterface[] => {\n    return searchData(period, searched) as SessionPlanInterface[];\n  };\n\n  return (\n    <div className=\"\">\n      <div className=\"px-3\">\n        <input\n          onChange={(e: React.ChangeEvent<HTMLInputElement>) =>\n            setSearch(e.target.value)\n          }\n          type=\"text\"\n          className=\"py-3 px-4 w-full rounded border border-gray-400 mb-3\"\n          placeholder=\"Search by year, name\"\n          disabled={props.allSession === null || props.allSession.length === 0}\n        />\n      </div>\n\n      <div className=\"bg-gray-100 px-3 pt-3 pb-2 rounded-b\">\n        {props.allSession === null ? (\n          <Loading />\n        ) : props.allSession.length === 0 ? (\n          <div className=\"flex flex-col text-gray-400 items-center justify-center mb-2 bg-white py-4\">\n            <MdSearch className=\"text-6xl\" />\n            <div className=\"flex flex-col items-center justify-center\">\n              <span>No session found!</span>\n            </div>\n          </div>\n        ) : (\n          <section>\n            {props.chooseAll && (\n              <div\n                className={`rounded border ${\n                  props.currentSelected === \"all\"\n                    ? \"bg-blue-50 border-blue-300\"\n                    : \"bg-white border-white \"\n                } group hover:border-blue-500 px-2 py-2 mb-2 flex flex-col md:flex-row items-start md:items-center md:justify-between`}\n              >\n                <div className=\"flex flex-row items-center gap-3\">\n                  {props.currentSelected === \"all\" ? (\n                    <MdCheckCircle className={`text-blue-500 text-4xl`} />\n                  ) : (\n                    <MdRadioButtonUnchecked\n                      className={`text-gray-300 text-4xl`}\n                    />\n                  )}\n                  <div className=\"flex flex-col\">\n                    <div className={`text-gray-600 font-bold`}>All session</div>\n                  </div>\n                </div>\n                <div\n                  onClick={() => {\n                    props.setSelectSession(\"all\");\n                  }}\n                  className=\"bg-gray-50 group-hover:bg-blue-600 font-semibold text-gray-400 group-hover:text-white rounded px-3 py-2 cursor-pointer\"\n                >\n                  Select\n                </div>\n              </div>\n            )}\n            {getSearch(props.allSession, search).map((item, i) => (\n              <div\n                key={i + 1}\n                className={`rounded border ${\n                  props.currentSelected !== \"all\" &&\n                  props.currentSelected.session_plan_id === item.session_plan_id\n                    ? \"bg-blue-50 border-blue-300\"\n                    : \"bg-white border-white \"\n                } group hover:border-blue-500 px-2 py-2 mb-2`}\n              >\n                <div className=\"flex flex-col md:flex-row items-start md:items-center md:justify-between \">\n                  <div className=\"flex flex-row items-center gap-3\">\n                    {props.currentSelected !== \"all\" &&\n                    props.currentSelected.session_plan_id ===\n                      item.session_plan_id ? (\n                      <MdCheckCircle className={`text-blue-500 text-4xl`} />\n                    ) : (\n                      <MdRadioButtonUnchecked\n                        className={`text-gray-300 text-4xl`}\n                      />\n                    )}\n                    <div className=\"flex flex-col\">\n                      <div\n                        className={`${\n                          props.currentSelected !== \"all\" &&\n                          props.currentSelected.session_plan_id ===\n                            item.session_plan_id\n                            ? \"text-blue-600\"\n                            : \"text-gray-600\"\n                        } font-bold`}\n                      >\n                        {item.session_plan_name}\n                      </div>\n                      <div className=\"text-sm text-gray-500\">\n                        <span>Status: </span>\n                        <span\n                          className={`${\n                            item.is_active === true\n                              ? \"text-gray-900 font-bold underline\"\n                              : \"text-gray-500 italic\"\n                          }`}\n                        >\n                          {item.is_active === true ? \"Active\" : \"Expired\"}\n                        </span>\n                      </div>\n                    </div>\n                  </div>\n                  <div className=\"flex flex-row items-center gap-2\">\n                    {(selectedPlan === null ||\n                      selectedPlan.session_plan_id !==\n                        item.session_plan_id) && (\n                      <div\n                        onClick={() => setSelectedPlan(item)}\n                        className=\"bg-gray-50 group-hover:bg-blue-100 font-semibold text-gray-400 group-hover:text-blue-600 rounded px-3 py-2 cursor-pointer\"\n                      >\n                        Details\n                      </div>\n                    )}\n                    <div\n                      onClick={() => {\n                        props.setSelectSession(item);\n                      }}\n                      className=\"bg-gray-50 group-hover:bg-blue-600 font-semibold text-gray-400 group-hover:text-white rounded px-3 py-2 cursor-pointer\"\n                    >\n                      Select\n                    </div>\n                    {selectedPlan !== null &&\n                      selectedPlan.session_plan_id === item.session_plan_id && (\n                        <div\n                          onClick={() => setSelectedPlan(null)}\n                          className=\"bg-red-100 group-hover:bg-red-200 font-semibold text-red-600 group-hover:text-red-800 rounded px-3 py-2 cursor-pointer\"\n                        >\n                          Close\n                        </div>\n                      )}\n                  </div>\n                </div>\n                {selectedPlan !== null &&\n                  selectedPlan.session_plan_id === item.session_plan_id && (\n                    <div className=\"bg-white rounded border border-blue-50 mt-2 animate__animated animate__fadeIn\">\n                      <table className=\"w-full\">\n                        <thead className=\"bg-blue-50\">\n                          <tr className=\"text-left\">\n                            <th className=\"px-3 py-3\">#</th>\n                            <th>Plan</th>\n                            <th>Start date</th>\n                            <th>Ending date</th>\n                            <th>Status</th>\n                          </tr>\n                        </thead>\n                        <tbody className=\"text-sm\">\n                          {selectedPlan !== null &&\n                            selectedPlan.session_plan_id ===\n                              item.session_plan_id &&\n                            selectedPlan.plans.length > 0 &&\n                            item.plans.map((plan, i) => (\n                              <tr\n                                key={i + 1}\n                                className={`${\n                                  isPlansActive(item.plans).find(\n                                    (itm) => itm.type_key === plan.type_key\n                                  ) !== undefined\n                                    ? \"bg-blue-100 text-blue-600 font-bold\"\n                                    : \"\"\n                                } text-left border-b border-blue-50`}\n                              >\n                                <td className=\"px-3 py-1\">{i + 1}</td>\n                                <td>{plan.type_title}</td>\n                                <td>{DATE(plan.start_date, \"DD/MM/YYYY\")}</td>\n                                <td>{DATE(plan.end_date, \"DD/MM/YYYY\")}</td>\n                                <td>{plan.type_status}</td>\n                              </tr>\n                            ))}\n                        </tbody>\n                      </table>\n                    </div>\n                  )}\n              </div>\n            ))}\n          </section>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default React.memo(ChooseSession);\n","import moment from \"moment\";\nimport React, { useState } from \"react\";\nimport { IoHandLeftSharp } from \"react-icons/io5\";\nimport {\n  compareWithToday,\n  ExamDoneDetailsAnswers,\n} from \"../../containers/CandidateExams/CandidateExams\";\nimport { PlansTypeKeys } from \"../../interfaces\";\nimport { TimeZone } from \"../../utils/app.config\";\nimport { DATE } from \"../../utils/functions\";\nimport ClaimFormComponent from \"../ClaimForm/ClaimFormComponent\";\nimport { AnswersDetails } from \"./AnswersDetails\";\n\ninterface CandidateAnswersDetailsProps {\n  exam_id: ExamDoneDetailsAnswers;\n  showAnswers: boolean;\n}\n\nconst CandidateAnswersDetails = (props: CandidateAnswersDetailsProps) => {\n  const today = moment().tz(TimeZone);\n  let tomorrow = new Date();\n  tomorrow.setDate(today.date() + 1);\n  const [claim, setClaim] = useState<boolean>(false);\n  return (\n    <div>\n      {/* Check if period is open for claims */}\n      {compareWithToday(today, props.exam_id.exam_date) === false ? (\n        <div className=\"bg-yellow-100 text-yellow-800 font-extrabold text-center flex flex-col items-center justify-center text-lg px-2 py-6\">\n          <div className=\"mb-5 text-3xl\">\n            Please wait, the exam details will be visible soon!\n          </div>\n          <div className=\"text-gray-600\">Exam details will be visible from</div>\n          <div className=\"bg-white rounded-full px-3 py-1 text-gray-700\">\n            {DATE(tomorrow.toString())}\n          </div>\n        </div>\n      ) : claim === false ? (\n        <div className=\"mb-20\">\n          <AnswersDetails\n            exam_id={props.exam_id}\n            showAnswers={props.showAnswers}\n          />\n          {/* <div\n            onClick={() => setClaim(true)}\n            className=\"bg-blue-100 flex flex-row items-center px-3 py-2 -mt-10\"\n          >\n            <div className=\"btn bg-green-600 text-white text-center w-max px-6 text-2xl flex flex-row item-center justify-center gap-3 cursor-pointer\">\n              <IoHandLeftSharp className=\"text-3xl \" />{\" \"}\n              <span>Exam marks Claim</span>\n            </div>\n          </div> */}\n        </div>\n      ) : (\n        <div className=\"bg-gray-100 mt-4 pt-2 rounded\">\n          <ClaimFormComponent\n            setFormState={setClaim}\n            claim_type={PlansTypeKeys.EXAMINATION}\n            file_id={props.exam_id.exam_id}\n          />\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default CandidateAnswersDetails;\n","import React from \"react\";\nimport Chart from \"react-apexcharts\";\n\ntype chartType = {\n  options: {\n    labels: string[];\n    legend?: ApexLegend;\n    plotOptions?: ApexPlotOptions;\n    colors?: any[];\n  };\n  series: number[];\n  width?: number;\n};\n\nconst PieChart: React.FC<chartType> = (props) => {\n  return (\n    <div className=\"donut\">\n      <Chart\n        options={props.options}\n        series={props.series}\n        type=\"donut\"\n        width={`${props.width ? props.width : \"380\"}`}\n      />\n    </div>\n  );\n};\n\nexport default React.memo(PieChart);\n","import React, { FC } from \"react\";\nimport { IconType } from \"react-icons\";\nimport { FaUsers } from \"react-icons/fa\";\nimport { toAnyDigit } from \"../../shared/dataTest\";\n\nexport type DashboardLabelItemInterface = {\n  // TITLE: Application or Exam or Shortlisted ....\n  title: string;\n  // ICON: FaExpand ....\n  icon: IconType;\n  // ICON COLOR: blue, indigo, gray ....\n  iconColor: string;\n  // COUNT: 0,1,2,3,5,23,563 ....\n  count: number;\n  // COUNT: 0,1,2,3,5,23,563 ....\n  countOver?: number;\n};\n\nconst DashboardLabelItem: FC<DashboardLabelItemInterface> = (\n  props = {\n    title: \"\",\n    icon: FaUsers,\n    iconColor: \"indigo\",\n    count: 0,\n    countOver: undefined,\n  }\n) => {\n  const IconDefined = props.icon;\n  return (\n    <div className=\"flex items-center px-6 py-4 bg-white w-full rounded-md space-x-2 mb-2 lg:mb-0 shadow-md\">\n      <div\n        className={`p-3 rounded-full bg-${props.iconColor}-200 bg-opacity-75`}\n      >\n        <IconDefined className={`h-8 w-8 text-${props.iconColor}-600`} />\n      </div>\n      <div>\n        <h1 className=\"text-3xl font-semibold text-gray-700\">\n          {toAnyDigit(props.count)}{\" \"}\n          {props.countOver && \"/ \" + toAnyDigit(props.countOver)}\n        </h1>\n        <span className=\"text-gray-500 text-lg\">{props.title}</span>\n      </div>\n    </div>\n  );\n};\n\nexport default React.memo(DashboardLabelItem);\n","import React from \"react\";\nimport DashboardLabelItem, {\n  DashboardLabelItemInterface,\n} from \"../DashboardLabelItem\";\n\ntype DashboardLabelProps = {\n  dataLabels: DashboardLabelItemInterface[];\n  labelsOnRow?: number;\n  childrenPosition?: \"START\" | \"END\";\n  children?: JSX.Element;\n};\n\nconst ExamDashboardLabels: React.FC<DashboardLabelProps> = (props) => {\n  const numCols: number = props.labelsOnRow\n    ? props.labelsOnRow > 4\n      ? props.labelsOnRow\n      : 4\n    : 4;\n  return (\n    <div\n      className={`grid 2xl:grid-cols-${numCols} xl:grid-cols-${\n        numCols - 1\n      } lg:grid-cols-${numCols - 2} md:grid-cols-${\n        numCols - 3\n      } sm:grid-cols-2 grid-cols-1 gap-4 items-center mx-auto`}\n    >\n      {props.children &&\n        ((props.childrenPosition && props.childrenPosition === \"START\") ||\n          !props.childrenPosition) &&\n        props.children}\n      {props.dataLabels.map((item, index) => (\n        <section key={index + item.title}>\n          <DashboardLabelItem\n            title={item.title}\n            icon={item.icon}\n            iconColor={item.iconColor}\n            count={item.count}\n          />\n        </section>\n      ))}\n      {props.children &&\n        props.childrenPosition &&\n        props.childrenPosition === \"END\" &&\n        props.children}\n    </div>\n  );\n};\n\nexport default React.memo(ExamDashboardLabels);\n","import React from \"react\";\nimport { MdTurnedIn } from \"react-icons/md\";\nimport { connect } from \"react-redux\";\nimport { PushPopupAlert } from \"../../../actions\";\nimport NoResult, {\n  NoResultThemes,\n} from \"../../../components/NoResult/NoResult\";\nimport {\n  claimApplicationsInterface,\n  claimApplicationsPositionInterface,\n} from \"../../../interfaces\";\nimport { ApplicationStates } from \"../../../interfaces/application\";\nimport { DocumentReducerInterface } from \"../../../reducers/document\";\nimport { capitalizeFirstLetter } from \"../../../shared/dataTest\";\nimport { UserInterface } from \"../../../shared/interfaces\";\nimport { DATE } from \"../../../utils/functions\";\nimport { PositionRequirementTableInterface } from \"../../Positions/ViewPosition\";\nimport ViewRequirements from \"../../Positions/ViewRequirements\";\n\nexport const FC_ApplicationPositionDistinctCategory = (\n  thisPosition: claimApplicationsPositionInterface,\n  documentCategories: DocumentReducerInterface\n): {\n  PositionsTemp: PositionRequirementTableInterface[];\n  DistinctCategoriesTemp: PositionRequirementTableInterface[];\n  DistinctSubCategoriesTemp: PositionRequirementTableInterface[];\n} => {\n  let PositionsTemp: PositionRequirementTableInterface[] = [];\n  let DistinctCategoriesTemp: PositionRequirementTableInterface[] = [],\n    DistinctCategoriesIds: string[] = [];\n  let DistinctSubCategoriesTemp: PositionRequirementTableInterface[] = [],\n    DistinctSubCategoriesIds: string[] = [];\n  // GET REQUIREMENTS OF THE CURRENT POSITION ====================\n  let requirements = thisPosition.requirements;\n  // LOOP THROUGH CURRENT POSITION REQUIREMENTS ==========================\n  for (let req in requirements) {\n    let thisRequirements = requirements[req];\n    // GET DOC CATEGORY OF THE CURRENT POSITION REQUIREMENTS ====================\n    let thisCategory = documentCategories.documentCategory\n      ? documentCategories.documentCategory.find(\n          (item) =>\n            item.user_detail_category_id ===\n            thisRequirements.category.user_detail_category_id\n        ) && {\n          title: documentCategories.documentCategory.find(\n            (item) =>\n              item.user_detail_category_id ===\n              thisRequirements.category.user_detail_category_id\n          )!.title,\n          user_detail_category_id: documentCategories.documentCategory.find(\n            (item) =>\n              item.user_detail_category_id ===\n              thisRequirements.category.user_detail_category_id\n          )!.user_detail_category_id,\n        }\n      : {\n          title: \"\",\n          user_detail_category_id:\n            thisRequirements.category.user_detail_category_id,\n        };\n    // GET DOC SUB CATEGORY OF THE CURRENT POSITION REQUIREMENTS ====================\n    let thisSubCategory = documentCategories.documentSubCategory\n      ? documentCategories.documentSubCategory.find(\n          (item) =>\n            item.user_detail_subcategory_id ===\n            thisRequirements.subcategory.user_detail_subcategory_id\n        )\n        ? {\n            title: documentCategories.documentSubCategory.find(\n              (item) =>\n                item.user_detail_subcategory_id ===\n                thisRequirements.subcategory.user_detail_subcategory_id\n            )!.title,\n            user_detail_subcategory_id:\n              documentCategories.documentSubCategory.find(\n                (item) =>\n                  item.user_detail_subcategory_id ===\n                  thisRequirements.subcategory.user_detail_subcategory_id\n              )!.user_detail_subcategory_id,\n            category_id: documentCategories.documentSubCategory.find(\n              (item) =>\n                item.user_detail_subcategory_id ===\n                thisRequirements.subcategory.user_detail_subcategory_id\n            )!.category_id,\n          }\n        : {\n            title: \"\",\n            user_detail_subcategory_id:\n              thisRequirements.subcategory.user_detail_subcategory_id,\n            category_id: \"\",\n          }\n      : {\n          title: \"\",\n          user_detail_subcategory_id:\n            thisRequirements.subcategory.user_detail_subcategory_id,\n          category_id: \"\",\n        };\n    // LOOP THROUGH FIELDS OF THE CURRENT POSITION REQUIREMENTS ==========================\n    if (thisCategory) {\n      for (let field in thisRequirements.position_requirement) {\n        // GET FIELDS OF THE CURRENT POSITION REQUIREMENTS ====================\n        let thisField = documentCategories.documentFields\n          ? documentCategories.documentFields.find(\n              (item) =>\n                item._id === thisRequirements.position_requirement[field]._id\n            )\n            ? {\n                title: documentCategories.documentFields.find(\n                  (item) =>\n                    item._id ===\n                    thisRequirements.position_requirement[field]._id\n                )!.title,\n                _id: documentCategories.documentFields.find(\n                  (item) =>\n                    item._id ===\n                    thisRequirements.position_requirement[field]._id\n                )!._id,\n                required: thisRequirements.position_requirement[field].required,\n              }\n            : {\n                title: \"\",\n                _id: thisRequirements.subcategory.user_detail_subcategory_id,\n                required: thisRequirements.position_requirement[field].required,\n              }\n          : {\n              title: \"\",\n              _id: thisRequirements.subcategory.user_detail_subcategory_id,\n              required: thisRequirements.position_requirement[field].required,\n            };\n        // ADD CURRENT CATEGORY, SUB CATEGORY & FIELDS OF THE CURRENT POSITION REQUIREMENTS IN POSITIONS TEMP ====================\n        PositionsTemp.push({\n          category_id: thisCategory.user_detail_category_id,\n          category_title: thisCategory.title,\n          subcategory_id: thisSubCategory.user_detail_subcategory_id,\n          subcategory_title: thisSubCategory.title,\n          subcategory_required: thisRequirements.required,\n          field_title: thisField.title,\n          field_id: thisField._id,\n          required: thisField.required,\n        });\n      }\n\n      // ADD CATEOGRY OF THE CURRENT POSITION REQUIREMENTS TO ARRAY ====================\n      if (\n        !DistinctCategoriesIds.includes(thisCategory.user_detail_category_id)\n      ) {\n        DistinctCategoriesIds.push(thisCategory.user_detail_category_id);\n        DistinctCategoriesTemp.push({\n          category_id: thisCategory.user_detail_category_id,\n          category_title: thisCategory.title,\n          subcategory_id: \"\",\n          subcategory_title: \"\",\n          subcategory_required: thisRequirements.required,\n          field_title: \"\",\n          field_id: \"\",\n          required: false,\n        });\n      }\n\n      // ADD SUB CATEOGRY OF THE CURRENT POSITION REQUIREMENTS TO ARRAY ====================\n      if (\n        !DistinctSubCategoriesIds.includes(\n          thisSubCategory.user_detail_subcategory_id\n        )\n      ) {\n        DistinctSubCategoriesIds.push(\n          thisSubCategory.user_detail_subcategory_id\n        );\n        DistinctSubCategoriesTemp.push({\n          category_id: thisSubCategory.category_id,\n          category_title: \"\",\n          subcategory_id: thisSubCategory.user_detail_subcategory_id,\n          subcategory_title: thisSubCategory.title,\n          subcategory_required: thisRequirements.required,\n          field_title: \"\",\n          field_id: \"\",\n          required: false,\n        });\n      }\n    }\n  }\n  // DistinctCategoriesIds.;\n\n  return { PositionsTemp, DistinctCategoriesTemp, DistinctSubCategoriesTemp };\n};\n\nexport const showEvaluator = (\n  userList: UserInterface[],\n  user_id: string\n): string => {\n  let result: string = \"\";\n  if (user_id === \"system\") {\n    result = \"System\";\n  } else {\n    // let user = getUserDocuments(userList, user_id);\n    // let user = undefined;\n    // if (user) {\n    //   result = user.user.user_info.fname + \" \" + user.user.user_info.lname;\n    // }\n  }\n  return result;\n};\n\ntype ApplicationFormViewProps = {\n  thisApplication: claimApplicationsInterface;\n  setViewThisFile: (value: string) => void;\n  setChooseClaimFile: (value: boolean) => void;\n  setClaimFileId: (value: string) => void;\n  documentCategories: DocumentReducerInterface;\n  PushPopupAlert: Function;\n};\n\nconst ApplicationFormView: React.FC<ApplicationFormViewProps> = (props) => {\n  return (\n    <section className=\"\">\n      <div className=\"w-full bg-gray-100 px-4 py-1 animate__animated animate__fadeIn\">\n        <div className=\"flex flex-col mb-2\">\n          {/* APPLICATION TITLE ========== */}\n          <section className=\"flex items-center justify-between\">\n            <span className=\"text-blue-600 font-bold text-2xl\">\n              {props.thisApplication.position.position_title}\n            </span>\n            <button\n              type=\"button\"\n              className=\"btn btn-blue\"\n              onClick={() => {\n                props.setChooseClaimFile(false);\n                props.setClaimFileId(props.thisApplication.application_id);\n                props.setViewThisFile(\"\");\n              }}\n            >\n              Choose\n            </button>\n          </section>\n          <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n            <span className={`italic`}>Date:</span>\n            <span className=\"font-bold text-gray-900 py-1\">\n              {DATE(props.thisApplication.createdAt)}\n            </span>\n          </div>\n          {false && (\n            <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n              <span className={`italic`}>Session:</span>\n              <span className=\"font-bold text-gray-900 py-1\">\n                {\n                  props.thisApplication.application_session\n                    .application_session_name\n                }\n              </span>\n            </div>\n          )}\n          <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n            <span className={`italic`}>Status:</span>\n            <span\n              className={`font-bold ${\n                props.thisApplication.application_status ===\n                ApplicationStates.Rejected\n                  ? \"text-yellow-900\"\n                  : \"text-blue-600\"\n              } py-1`}\n            >\n              {capitalizeFirstLetter(props.thisApplication.application_status)}\n            </span>\n          </div>\n          {/* <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n            <span className={`italic`}>Evaluated by:</span>\n            <span className=\"font-bold text-gray-900 py-1\">\n              {props.thisApplication.}\n            </span>\n          </div> */}\n          <div className=\"flex items-start gap-2 text-sm text-gray-600\">\n            <span className={`italic`}>Reason:</span>\n            <span\n              className=\"font-semibold text-gray-900\"\n              dangerouslySetInnerHTML={{\n                __html: props.thisApplication.override_by.comment,\n              }}\n            ></span>\n          </div>\n        </div>\n        <div className=\"bg-white w-full rounded p-2 mb-2\">\n          <div className=\"text-gray-800 text-2xl font-bold my-2\">\n            Position Details\n          </div>\n          <div className=\"flex items-center gap-2 text-base text-gray-600\">\n            <span className={`italic`}>Desc:</span>\n            <span className=\"font-semibold\">\n              {props.thisApplication.position.description}\n            </span>\n          </div>\n          <div className=\"flex items-center gap-2 text-base text-gray-600\">\n            <span className={`italic`}>School level:</span>\n            <span className=\"font-semibold\">\n              {props.thisApplication.position.school_level_id.school_level_name}\n            </span>\n          </div>\n          <div className=\"flex items-center gap-2 text-base text-gray-600\">\n            <span className={`italic`}>Institute:</span>\n            <span className=\"font-semibold\">\n              {\n                props.thisApplication.position.education_institute_id\n                  .education_category_title\n              }\n            </span>\n          </div>\n          <div className=\"flex items-center gap-2 text-base text-gray-600\">\n            <span className={`italic`}>Courses:</span>\n            <span className=\"flex items-center gap-2\">\n              {props.thisApplication.position.courses.map((item, index) => (\n                <div\n                  key={index + item.course_id}\n                  className=\"flex items-center gap-1\"\n                >\n                  <span className=\"font-semibold\">{item.course_name}</span>\n                  <span className=\"text-gray-600\">({item.course_code})</span>\n                  {index !==\n                    props.thisApplication.position.courses.length - 1 && \",\"}\n                </div>\n              ))}\n            </span>\n          </div>\n\n          <div className=\"text-gray-800 text-2xl font-bold my-2\">\n            Position Requirements\n          </div>\n          {props.thisApplication.position.requirements.length > 0 ? (\n            FC_ApplicationPositionDistinctCategory(\n              props.thisApplication.position,\n              props.documentCategories\n            ).DistinctCategoriesTemp.map((item, index) => (\n              <div\n                className=\"bg-gray-100props.thisApplication.position rounded p-2\"\n                key={index + item.category_id}\n              >\n                <div className=\"flex items-center gap-2 text-2xl text-gray-500 font-bold\">\n                  <MdTurnedIn />\n                  <span>{item.category_title}</span>\n                </div>\n                <div className=\"border bg-white mt-1\">\n                  <ViewRequirements\n                    requirements={FC_ApplicationPositionDistinctCategory(\n                      props.thisApplication.position,\n                      props.documentCategories\n                    ).PositionsTemp.filter(\n                      (req) => req.category_id === item.category_id\n                    )}\n                  />\n                </div>\n              </div>\n            ))\n          ) : (\n            <NoResult\n              theme={NoResultThemes.Dark}\n              value={\"No requirements\"}\n            ></NoResult>\n          )}\n        </div>\n      </div>\n    </section>\n  );\n};\n\nexport default React.memo(connect(null, { PushPopupAlert })(ApplicationFormView));\n","import React from \"react\";\nimport Table from \"../../components/Table/Table\";\nimport { isEmptyOrSpaces } from \"../../shared/dataTest\";\nimport { PositionRequirementTableInterface } from \"./ViewPosition\";\n\ninterface RequirementProps {\n  requirements: PositionRequirementTableInterface[];\n}\n\nconst ViewRequirements: React.FC<RequirementProps> = (props) => {\n  const tableData = (): JSX.Element[] => {\n    let data: PositionRequirementTableInterface[] = props.requirements;\n    // let data: PositionSubcategoryData[] =\n    //   props.position_requirement.position_requirement;\n    if (data.length === 0) {\n      return [\n        <tr key={153} className=\"border-b border-gray-200 hover:bg-gray-100\">\n          <td className=\"p-3 text-center\" colSpan={3}>\n            No Data Found\n          </td>\n        </tr>,\n      ];\n    }\n\n    return data.map((item, index) => (\n      <tr\n        key={index + item.field_id}\n        className=\"border-b border-gray-200 hover:bg-gray-100\"\n      >\n        <td className=\"p-3 text-left whitespace-nowrap\">{index + 1}</td>\n        <td className=\"p-3 text-left\">\n          <span>{item.subcategory_title}</span>\n        </td>\n        <td className=\"p-3 text-left\">\n          <span>\n            {isEmptyOrSpaces(item.field_id) ? \"Any document\" : item.field_title}\n          </span>\n        </td>\n        <td className=\"p-3 text-left text-lg italic\">\n          {isEmptyOrSpaces(item.field_id) ? (\n            item.subcategory_required ? (\n              <span className=\"text-yellow-800\">Required</span>\n            ) : (\n              \"Optional\"\n            )\n          ) : item.required ? (\n            <span className=\"text-yellow-800\">Required</span>\n          ) : (\n            \"Optional\"\n          )}\n        </td>\n      </tr>\n    ));\n  };\n\n  return (\n    <div>\n      <Table\n        columns={[\n          { columnTitle: \"#\", alignText: \"left\", padding: \"p-3\" },\n          { columnTitle: \"Qualification\", alignText: \"left\", padding: \"p-3\" },\n          // {\n          //   columnTitle: \"Qualification Status\",\n          //   alignText: \"left\",\n          //   padding: \"p-3\",\n          // },\n          { columnTitle: \"Document\", alignText: \"left\", padding: \"p-3\" },\n          { columnTitle: \"Status\", alignText: \"left\", padding: \"p-3\" },\n          // { columnTitle: \"\", alignText: \"left\", padding: \"p-3\" },\n        ]}\n        rows={tableData}\n        pagination={false}\n        search={false}\n        thColor=\"gray\"\n      />\n    </div>\n  );\n};\n\nexport default React.memo(ViewRequirements);\n","import React from \"react\";\nimport { AnswersDetails } from \"../../../components/AnswersDetails/AnswersDetails\";\nimport {\n  claimApplicationsPositionInterface,\n  ClaimExamResultsDetails,\n} from \"../../../interfaces\";\nimport { DocumentReducerInterface } from \"../../../reducers/document\";\nimport { UserInterface } from \"../../../shared/interfaces\";\nimport { DATE } from \"../../../utils/functions\";\nimport { ExamDoneDetailsAnswers } from \"../../CandidateExams/CandidateExams\";\nimport { PositionRequirementTableInterface } from \"../../Positions/ViewPosition\";\n\nexport const FC_ApplicationPositionDistinctCategory = (\n  thisPosition: claimApplicationsPositionInterface,\n  documentCategories: DocumentReducerInterface\n): {\n  PositionsTemp: PositionRequirementTableInterface[];\n  DistinctCategoriesTemp: PositionRequirementTableInterface[];\n  DistinctSubCategoriesTemp: PositionRequirementTableInterface[];\n} => {\n  let PositionsTemp: PositionRequirementTableInterface[] = [];\n  let DistinctCategoriesTemp: PositionRequirementTableInterface[] = [],\n    DistinctCategoriesIds: string[] = [];\n  let DistinctSubCategoriesTemp: PositionRequirementTableInterface[] = [],\n    DistinctSubCategoriesIds: string[] = [];\n  // GET REQUIREMENTS OF THE CURRENT POSITION ====================\n  let requirements = thisPosition.requirements;\n  // LOOP THROUGH CURRENT POSITION REQUIREMENTS ==========================\n  for (let req in requirements) {\n    let thisRequirements = requirements[req];\n    // GET DOC CATEGORY OF THE CURRENT POSITION REQUIREMENTS ====================\n    let thisCategory = documentCategories.documentCategory\n      ? documentCategories.documentCategory.find(\n          (item) =>\n            item.user_detail_category_id ===\n            thisRequirements.category.user_detail_category_id\n        ) && {\n          title: documentCategories.documentCategory.find(\n            (item) =>\n              item.user_detail_category_id ===\n              thisRequirements.category.user_detail_category_id\n          )!.title,\n          user_detail_category_id: documentCategories.documentCategory.find(\n            (item) =>\n              item.user_detail_category_id ===\n              thisRequirements.category.user_detail_category_id\n          )!.user_detail_category_id,\n        }\n      : {\n          title: \"\",\n          user_detail_category_id:\n            thisRequirements.category.user_detail_category_id,\n        };\n    // GET DOC SUB CATEGORY OF THE CURRENT POSITION REQUIREMENTS ====================\n    let thisSubCategory = documentCategories.documentSubCategory\n      ? documentCategories.documentSubCategory.find(\n          (item) =>\n            item.user_detail_subcategory_id ===\n            thisRequirements.subcategory.user_detail_subcategory_id\n        )\n        ? {\n            title: documentCategories.documentSubCategory.find(\n              (item) =>\n                item.user_detail_subcategory_id ===\n                thisRequirements.subcategory.user_detail_subcategory_id\n            )!.title,\n            user_detail_subcategory_id:\n              documentCategories.documentSubCategory.find(\n                (item) =>\n                  item.user_detail_subcategory_id ===\n                  thisRequirements.subcategory.user_detail_subcategory_id\n              )!.user_detail_subcategory_id,\n            category_id: documentCategories.documentSubCategory.find(\n              (item) =>\n                item.user_detail_subcategory_id ===\n                thisRequirements.subcategory.user_detail_subcategory_id\n            )!.category_id,\n          }\n        : {\n            title: \"\",\n            user_detail_subcategory_id:\n              thisRequirements.subcategory.user_detail_subcategory_id,\n            category_id: \"\",\n          }\n      : {\n          title: \"\",\n          user_detail_subcategory_id:\n            thisRequirements.subcategory.user_detail_subcategory_id,\n          category_id: \"\",\n        };\n    // LOOP THROUGH FIELDS OF THE CURRENT POSITION REQUIREMENTS ==========================\n    if (thisCategory) {\n      for (let field in thisRequirements.position_requirement) {\n        // GET FIELDS OF THE CURRENT POSITION REQUIREMENTS ====================\n        let thisField = documentCategories.documentFields\n          ? documentCategories.documentFields.find(\n              (item) =>\n                item._id === thisRequirements.position_requirement[field]._id\n            )\n            ? {\n                title: documentCategories.documentFields.find(\n                  (item) =>\n                    item._id ===\n                    thisRequirements.position_requirement[field]._id\n                )!.title,\n                _id: documentCategories.documentFields.find(\n                  (item) =>\n                    item._id ===\n                    thisRequirements.position_requirement[field]._id\n                )!._id,\n                required: thisRequirements.position_requirement[field].required,\n              }\n            : {\n                title: \"\",\n                _id: thisRequirements.subcategory.user_detail_subcategory_id,\n                required: thisRequirements.position_requirement[field].required,\n              }\n          : {\n              title: \"\",\n              _id: thisRequirements.subcategory.user_detail_subcategory_id,\n              required: thisRequirements.position_requirement[field].required,\n            };\n        // ADD CURRENT CATEGORY, SUB CATEGORY & FIELDS OF THE CURRENT POSITION REQUIREMENTS IN POSITIONS TEMP ====================\n        PositionsTemp.push({\n          category_id: thisCategory.user_detail_category_id,\n          category_title: thisCategory.title,\n          subcategory_id: thisSubCategory.user_detail_subcategory_id,\n          subcategory_title: thisSubCategory.title,\n          subcategory_required: thisRequirements.required,\n          field_title: thisField.title,\n          field_id: thisField._id,\n          required: thisField.required,\n        });\n      }\n\n      // ADD CATEOGRY OF THE CURRENT POSITION REQUIREMENTS TO ARRAY ====================\n      if (\n        !DistinctCategoriesIds.includes(thisCategory.user_detail_category_id)\n      ) {\n        DistinctCategoriesIds.push(thisCategory.user_detail_category_id);\n        DistinctCategoriesTemp.push({\n          category_id: thisCategory.user_detail_category_id,\n          category_title: thisCategory.title,\n          subcategory_id: \"\",\n          subcategory_title: \"\",\n          subcategory_required: thisRequirements.required,\n          field_title: \"\",\n          field_id: \"\",\n          required: false,\n        });\n      }\n\n      // ADD SUB CATEOGRY OF THE CURRENT POSITION REQUIREMENTS TO ARRAY ====================\n      if (\n        !DistinctSubCategoriesIds.includes(\n          thisSubCategory.user_detail_subcategory_id\n        )\n      ) {\n        DistinctSubCategoriesIds.push(\n          thisSubCategory.user_detail_subcategory_id\n        );\n        DistinctSubCategoriesTemp.push({\n          category_id: thisSubCategory.category_id,\n          category_title: \"\",\n          subcategory_id: thisSubCategory.user_detail_subcategory_id,\n          subcategory_title: thisSubCategory.title,\n          subcategory_required: thisRequirements.required,\n          field_title: \"\",\n          field_id: \"\",\n          required: false,\n        });\n      }\n    }\n  }\n  // DistinctCategoriesIds.;\n\n  return { PositionsTemp, DistinctCategoriesTemp, DistinctSubCategoriesTemp };\n};\n\nexport const showEvaluator = (\n  userList: UserInterface[],\n  user_id: string\n): string => {\n  let result: string = \"\";\n  if (user_id === \"system\") {\n    result = \"System\";\n  } else {\n    // let user = getUserDocuments(userList, user_id);\n    // let user = undefined;\n    // if (user) {\n    //   result = user.user.user_info.fname + \" \" + user.user.user_info.lname;\n    // }\n  }\n  return result;\n};\n\nexport const claimShowAnswer = (\n  answer: ClaimExamResultsDetails,\n  course_name: string\n): ExamDoneDetailsAnswers => {\n  const result: ExamDoneDetailsAnswers = {\n    course: answer.course,\n    course_name: course_name,\n    discription: answer.discription,\n    termes: answer.termes,\n    rules: {\n      right_click_enabled: false,\n      copy_enabled: false,\n      paste_enabled: false,\n      stop_candidate_when_comeback: false,\n      allow_to_leave_browser: false,\n    },\n    period: answer.period,\n    exam_date: answer.exam_date,\n    exam_id: answer.exam_id,\n  };\n  return result;\n};\n\ntype ExaminationFormViewProps = {\n  thisAnswerSheet: ClaimExamResultsDetails;\n  setViewThisFile: (value: string) => void;\n  setChooseClaimFile: (value: boolean) => void;\n  setClaimFileId: (value: string) => void;\n};\n\nconst ExaminationFormView: React.FC<ExaminationFormViewProps> = (props) => {\n  return (\n    <section className=\"\">\n      <div className=\"w-full bg-gray-100 px-4 py-1 animate__animated animate__fadeIn\">\n        <div className=\"flex flex-col mb-2\">\n          {/* APPLICATION TITLE ========== */}\n          <section className=\"flex items-center justify-between\">\n            <span className=\"text-blue-600 font-bold text-2xl\">\n              {props.thisAnswerSheet.course_name}\n            </span>\n            <button\n              type=\"button\"\n              className=\"btn btn-blue\"\n              onClick={() => {\n                props.setChooseClaimFile(false);\n                props.setClaimFileId(props.thisAnswerSheet.answer_sheet_id);\n                props.setViewThisFile(\"\");\n              }}\n            >\n              Choose\n            </button>\n          </section>\n\n          <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n            <span className={`italic`}>Date:</span>\n            <span className=\"font-bold text-gray-900 py-1\">\n              {DATE(props.thisAnswerSheet.createdAt)}\n            </span>\n          </div>\n        </div>\n        {/* QUESTIONS ----------------------------- */}\n        <AnswersDetails\n          showAnswers={false}\n          exam_id={claimShowAnswer(\n            props.thisAnswerSheet,\n            props.thisAnswerSheet.course_name\n          )}\n        />\n        {/* END QUESTIONS ----------------------------- */}\n      </div>\n    </section>\n  );\n};\n\nexport default React.memo(ExaminationFormView);\n","import React, { useState } from \"react\";\nimport { MdSearch } from \"react-icons/md\";\nimport { connect } from \"react-redux\";\nimport { ApplicationSession } from \"../../../actions\";\nimport {\n  course,\n  CandidateClaimInterface,\n  claimApplicationsInterface,\n  ClaimExamResultsDetails,\n} from \"../../../interfaces\";\nimport { StoreState } from \"../../../reducers\";\nimport { search } from \"../../../utils/functions\";\nimport { isClaimAllowed } from \"./ClaimForm\";\n\nconst getFailedExam = (\n  allData: ClaimExamResultsDetails[],\n  allCourses: course[]\n): ClaimExamResultsDetails[] => {\n  let result: ClaimExamResultsDetails[] = [];\n  allData.forEach((element) => {\n    if (element.total_marks < 100) {\n      let data = element;\n      data.course_name = getCourseById(allCourses, element.course)\n        ? getCourseById(allCourses, element.course)!.course_name\n        : \"Unknown exam\";\n      result.push(data);\n    }\n  });\n\n  return result;\n};\n\nexport const getCourseById = (courses: course[], course_id: string) => {\n  return courses.find((item) => item.course_id === course_id);\n};\n\nexport const getCourseIdBySheetId = (\n  allData: ClaimExamResultsDetails[],\n  sheet_id: string\n) => {\n  return allData.find((item) => item.answer_sheet_id === sheet_id);\n};\n\nexport const searchApplication = (\n  objList: claimApplicationsInterface[],\n  text: any\n): claimApplicationsInterface[] => {\n  if (undefined === text || text === \"\") return objList;\n  return objList.filter((product) => {\n    let flag;\n    // let dataKeys = product;\n\n    for (let prop in product) {\n      flag = false;\n      if (prop === \"position\") {\n        flag =\n          product.position.position_title\n            .toString()\n            .toLowerCase()\n            .indexOf(text.toLowerCase()) > -1;\n      }\n      if (flag) break;\n    }\n    return flag;\n  });\n  // return objList.filter((product) =>\n  //   product.position.position_title.includes(text)\n  // );\n};\n\ntype FormExamListProps = {\n  setChooseClaimFile: (value: boolean) => void;\n  setClaimFileId: (value: string) => void;\n  setViewThisFile: (value: string) => void;\n  claimFileId: string;\n  viewThisFile: string;\n  candidateAnswers: ClaimExamResultsDetails[];\n  myClaims: CandidateClaimInterface[];\n  activeSession: ApplicationSession;\n\n  // REDUX //////////////////////\n  courses: course[] | null;\n};\n\nconst FormExamList: React.FC<FormExamListProps> = (props) => {\n  const [searchInput, setSearchInput] = useState<string>(\"\");\n\n  return (\n    <section>\n      {/* SEARCH PART */}\n      <div className=\"flex items-center w-full my-1\">\n        <MdSearch className=\"w-6 h-6 absolute ml-2\" />\n        <input\n          type=\"text\"\n          placeholder=\"Search\"\n          className=\"focus:border-2 h-7 ml-1 pl-9 mr-2 bg-gray-100 focus:border-gray-700 w-full rounded\"\n          onChange={(e) => setSearchInput(e.target.value)}\n          value={searchInput}\n          disabled={\n            !props.courses ||\n            getFailedExam(props.candidateAnswers, props.courses).filter(\n              (item) =>\n                isClaimAllowed(\n                  props.myClaims,\n                  props.activeSession.session_plan_id,\n                  item.answer_sheet_id\n                )\n            ).length > 0\n              ? false\n              : true\n          }\n        />\n        <button\n          className=\"bg-red-200 text-red-700 py-1 px-2 mr-1 rounded text-sm focus:outline-none\"\n          type=\"button\"\n          onClick={() => {\n            props.setChooseClaimFile(false);\n            props.setViewThisFile(\"\");\n          }}\n        >\n          Close\n        </button>\n      </div>\n      {/* END SEARCH PART ///////////////// */}{\" \"}\n      {/* searchData(props.candidateAnswers, searchInput) */}\n      <div className=\"w-full h-52 mt-2 overflow-y-auto divide-y divide-gray-300\">\n        {props.courses &&\n        getFailedExam(props.candidateAnswers, props.courses).filter((item) =>\n          isClaimAllowed(\n            props.myClaims,\n            props.activeSession.session_plan_id,\n            item.answer_sheet_id\n          )\n        ).length > 0 ? (\n          search(\n            getFailedExam(props.candidateAnswers, props.courses).filter(\n              (item) =>\n                isClaimAllowed(\n                  props.myClaims,\n                  props.activeSession.session_plan_id,\n                  item.answer_sheet_id\n                )\n            ),\n            searchInput\n          ).map((item: ClaimExamResultsDetails, index: number) => (\n            <div\n              className={`group flex items-center justify-between my-1 hover:bg-gray-100 ${\n                props.claimFileId === item.answer_sheet_id &&\n                \"bg-blue-50 border-l-4 border-blue-500\"\n              }`}\n              key={index + item.answer_sheet_id}\n            >\n              <div\n                className=\"p-1 w-full mr-2 cursor-pointer\"\n                onClick={() => {\n                  props.setChooseClaimFile(false);\n                  props.setClaimFileId(item.answer_sheet_id);\n                }}\n              >\n                <p className=\"text-base font-medium text-black\">\n                  {item.course_name}\n                </p>\n              </div>\n              <button\n                type=\"button\"\n                className=\"bg-blue-200 hover:bg-blue-300 text-blue-700 group-hover:text-blue-800 py-1 px-2 mr-1 rounded text-sm\"\n                onClick={() => {\n                  props.setViewThisFile(item.answer_sheet_id);\n                }}\n              >\n                View\n              </button>\n            </div>\n          ))\n        ) : (\n          <div className=\"text-center p-3\">\n            <p className=\"text-base font-medium text-black\">\n              No failed exam available\n            </p>\n          </div>\n        )}\n      </div>\n    </section>\n  );\n};\n\nconst mapStateToProps = ({\n  course,\n}: StoreState): {\n  courses: course[] | null;\n} => {\n  return {\n    courses: course.courses,\n  };\n};\nexport default React.memo(connect(mapStateToProps, {})(FormExamList));\n","import React, { useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Auth, PushPopupAlert } from \"../../../actions\";\nimport {\n  getAllClaims,\n  GetClaimingTypes,\n  setSelectedClaimType,\n} from \"../../../actions/claiming\";\nimport { PopupAlertData } from \"../../../components/Alert/Popup\";\nimport { MainItem } from \"../../../components/Navigation/SideNavigation\";\nimport {\n  CandidateClaimInterface,\n  ClaimStatus,\n  PlansTypeKeys,\n} from \"../../../interfaces\";\nimport { PopupAlertTheme } from \"../../../interfaces/popupAlert\";\nimport { StoreState } from \"../../../reducers\";\nimport { ClaimingReducerType } from \"../../../reducers/claiming\";\n\nexport const filterClaimsByClaimType = (\n  claimList: CandidateClaimInterface[],\n  claimType: PlansTypeKeys | \"all\"\n): CandidateClaimInterface[] => {\n  if (claimType === \"all\") {\n    return claimList;\n  }\n\n  return claimList.filter((item) => item.type_key === claimType);\n};\n\ntype AdminFilterByTypeProps = {\n  loadingClaims: boolean;\n  FC_CountByType?: Function;\n\n  // REDUX PROPS =======================================\n  auth: Auth;\n  claiming: ClaimingReducerType;\n  GetClaimingTypes: Function;\n  setSelectedClaimType: Function;\n  getAllClaims: Function;\n  PushPopupAlert: (alert: PopupAlertData) => void;\n};\n\nconst AdminFilterByType: React.FC<AdminFilterByTypeProps> = (props) => {\n  const [loading, setLoading] = useState<boolean>(true);\n  const [loadingClaimTypes, setLoadingClaimTypes] = useState<boolean>(true);\n\n  useEffect(() => {\n    if (props.claiming.claimTypes === null) {\n      props.GetClaimingTypes((status: boolean, msg: string) => {\n        if (status === false) {\n          if (msg.length > 0) {\n            props.PushPopupAlert({\n              title: msg,\n              theme: PopupAlertTheme.danger,\n            });\n          }\n          setLoadingClaimTypes(false);\n          setLoading(false);\n        }\n      });\n    } else if (loadingClaimTypes) {\n      setLoadingClaimTypes(false);\n      setLoading(false);\n    }\n  }, [loadingClaimTypes, props]);\n\n  const countClaims = (\n    claiming: ClaimingReducerType,\n    thisType: PlansTypeKeys | \"all\"\n  ): number => {\n    let result: number = 0;\n\n    if (claiming.allClaims && thisType === \"all\") {\n      result = claiming.allClaims.filter(\n        (item) => item.last_claim_status === ClaimStatus.PENDING\n      ).length;\n    }\n    if (claiming.allClaims && thisType !== \"all\") {\n      result = claiming.allClaims.filter(\n        (item) =>\n          item.type_key === thisType &&\n          item.last_claim_status === ClaimStatus.PENDING\n      ).length;\n    }\n\n    return result;\n  };\n\n  return (\n    <React.Fragment>\n      <span className=\"mt-2 text-sm\">Filter by claim type</span>\n      {/* WHILE LOADING DATA ================================== */}\n      {(loading || props.loadingClaims) && (\n        <section className=\"space-y-2\">\n          <div className=\"w-full h-7 rounded bg-gray-200 animate__animated animate__pulse animate__delay-5s animate__infinite\"></div>\n          <div className=\"w-full h-7 rounded bg-gray-200 animate__animated animate__pulse animate__delay-5s animate__infinite\"></div>\n          <div className=\"w-full h-7 rounded bg-gray-200 animate__animated animate__pulse animate__delay-5s animate__infinite\"></div>\n          <div className=\"w-full h-7 rounded bg-gray-200 animate__animated animate__pulse animate__delay-5s animate__infinite\"></div>\n        </section>\n      )}\n      {/* END WHILE LOADING DATA ================================== */}\n\n      {/* AFTER LOADING DATA ================================== */}\n      {!loading && !props.loadingClaims && props.claiming.claimTypes && (\n        <section>\n          {/* ALL ================================= */}\n          <div\n            className=\"mt-2\"\n            onClick={() => {\n              // props.setThisClaimType(\"ALL\");\n              props.setSelectedClaimType(\"all\");\n            }}\n          >\n            <MainItem\n              title=\"All\"\n              active={props.claiming.selectedClaimType === \"all\"}\n              count={countClaims(props.claiming, \"all\")}\n            />\n          </div>\n          {/* APPLICATION ================================= */}\n          <div\n            className=\"mt-2\"\n            onClick={() => {\n              // props.setThisClaimType(ClaimTypesInterface.DOCUMENT);\n              props.setSelectedClaimType(PlansTypeKeys.APPLICATION);\n            }}\n          >\n            <MainItem\n              title={\"Application\"}\n              active={\n                props.claiming.selectedClaimType !== \"all\" &&\n                props.claiming.selectedClaimType === PlansTypeKeys.APPLICATION\n              }\n              count={countClaims(props.claiming, PlansTypeKeys.APPLICATION)}\n            />\n          </div>\n          {/* DOCUMENT ================================= */}\n          <div\n            className=\"mt-2\"\n            onClick={() => {\n              props.setSelectedClaimType(PlansTypeKeys.DOCUMENT_VALIDATION);\n            }}\n          >\n            <MainItem\n              title={\"Document\"}\n              active={\n                props.claiming.selectedClaimType !== \"all\" &&\n                props.claiming.selectedClaimType ===\n                  PlansTypeKeys.DOCUMENT_VALIDATION\n              }\n              count={countClaims(\n                props.claiming,\n                PlansTypeKeys.DOCUMENT_VALIDATION\n              )}\n            />\n          </div>\n          {/* EXAMINATION ================================= */}\n          <div\n            className=\"mt-2\"\n            onClick={() => {\n              props.setSelectedClaimType(PlansTypeKeys.EXAMINATION);\n            }}\n          >\n            <MainItem\n              title={\"Exam\"}\n              active={\n                props.claiming.selectedClaimType !== \"all\" &&\n                props.claiming.selectedClaimType === PlansTypeKeys.EXAMINATION\n              }\n              count={countClaims(props.claiming, PlansTypeKeys.EXAMINATION)}\n            />\n          </div>\n          {false && (\n            <div\n              className=\"mt-2\"\n              onClick={() => {\n                props.setSelectedClaimType(PlansTypeKeys.PLACEMENT_TRANSFER);\n              }}\n            >\n              <MainItem\n                title={\"Placement\"}\n                active={\n                  props.claiming.selectedClaimType !== \"all\" &&\n                  props.claiming.selectedClaimType ===\n                    PlansTypeKeys.PLACEMENT_TRANSFER\n                }\n                count={countClaims(\n                  props.claiming,\n                  PlansTypeKeys.PLACEMENT_TRANSFER\n                )}\n              />\n            </div>\n          )}\n        </section>\n      )}\n      {/* END AFTER LOADING DATA ================================== */}\n    </React.Fragment>\n  );\n};\n\nconst mapStateToProps = ({\n  auth,\n  claiming,\n}: StoreState): { auth: Auth; claiming: ClaimingReducerType } => {\n  return { auth, claiming };\n};\n\nexport default React.memo(\n  connect(mapStateToProps, {\n    GetClaimingTypes,\n    setSelectedClaimType,\n    getAllClaims,\n    PushPopupAlert,\n  })(AdminFilterByType)\n);\n","import React from \"react\";\nimport { AiFillDashboard } from \"react-icons/ai\";\nimport { SessionPlanInterface } from \"../../interfaces\";\n\ntype ClaimHeaderTitleProps = {\n  headerTitle: string;\n  loading: boolean;\n  loadingSession: boolean;\n  periodChanged: boolean;\n  thisPeriod: SessionPlanInterface | null;\n  setThisPeriod: (state: SessionPlanInterface | null) => void;\n  setLoadingSession: (state: boolean) => void;\n  application_sessions: SessionPlanInterface[];\n  onPeriodChange: (period_id: string) => void;\n};\n\nconst selectPeriod = (\n  sessions: SessionPlanInterface[],\n  period_id: string,\n  setThisPeriod: (state: SessionPlanInterface | null) => void\n) => {\n  setThisPeriod(\n    sessions.filter((item) => item.session_plan_id === period_id)[0]\n  );\n};\n\nconst ClaimHeaderTitle: React.FC<ClaimHeaderTitleProps> = (props) => {\n  const isLoading = (): boolean => {\n    if (props.loading || props.loadingSession || props.periodChanged) {\n      return true;\n    }\n    return false;\n  };\n\n  return (\n    <div className=\"mt-3 rounded flex flex-col md:flex-row md:justify-between items-start\">\n      <div className=\"flex flex-row items-center gap-3 mb-2\">\n        <AiFillDashboard className=\"text-6xl text-blue-600 hidden md:block\" />\n        <div className=\"flex flex-col\">\n          <span className=\"text-blue-600 text-3xl font-bold\">\n            {props.headerTitle}\n          </span>\n        </div>\n      </div>\n\n      {/* FILTER SECTION PERIOD && EDUCATION */}\n      <section className=\"w-full md:w-auto my-2 md:my-0\">\n        <div>\n          <select\n            className={`bg-white text-gray-600 border border-gray-400 rounded p-2 focus:outline-none ${\n              isLoading() ? \"cursor-wait\" : \"cursor-default\"\n            }`}\n            value={props.thisPeriod ? props.thisPeriod.session_plan_id : \"\"}\n            disabled={isLoading()}\n            onChange={(e) => {\n              selectPeriod(\n                props.application_sessions,\n                e.target.value,\n                props.setThisPeriod\n              );\n              props.setLoadingSession(true);\n              props.onPeriodChange(e.target.value);\n            }}\n          >\n            {props.application_sessions.map((session, item) => (\n              <option\n                key={session.session_plan_id + item}\n                value={session.session_plan_id}\n              >\n                {session.session_plan_name}\n              </option>\n            ))}\n          </select>\n        </div>\n      </section>\n      {/* END FILTER SECTION PERIOD && EDUCATION */}\n    </div>\n  );\n};\n\nexport default React.memo(ClaimHeaderTitle);\n","import {\n  QuestionForEmbedded,\n  QuestionForHybrid,\n  questionShortElementsType,\n  questionTypeElementsType,\n} from \"@mastrecruit/common\";\nimport React from \"react\";\nimport { MdCheckCircle, MdClose } from \"react-icons/md\";\nimport { Auth } from \"../../../actions/auth\";\nimport {\n  candidateExamStoreInterface,\n  QuestionAnswersStore,\n} from \"../../../actions/candidate_exam\";\nimport { questionTypesStoreInterface } from \"../../../actions/questionTypes\";\nimport { System } from \"../../../actions/system\";\nimport Loading from \"../../../components/Loading/Loading\";\nimport { EmbeddedQuestion } from \"../../../components/QuestionPreview/QuestionPreview\";\nimport { course } from \"../../../interfaces/course\";\nimport {\n  QuestionAnswerInterface,\n  QuestionInterface,\n  QuestionLanguage,\n} from \"../../../interfaces/question\";\nimport {\n  ExamAnsweredQuestions,\n  ExamPendingQuestions,\n  findQuestionType,\n} from \"../utils/utils\";\nimport FindAnswer from \"./FindAnswer\";\n\ninterface QuestionsReviewProps {\n  auth: Auth;\n  candidateExam: candidateExamStoreInterface;\n  system: System;\n  setSelectedExamQuestion: (\n    exam_id: string,\n    question_id: string | null\n  ) => void;\n  submitQuestionAnswer: boolean;\n  questionTypes: questionTypesStoreInterface;\n  loadQuestionTypes: (callback: (loading: boolean) => void) => void;\n  submitExam: () => void;\n  selectedExam: course | null;\n  setSubmitModal: (status: boolean) => void;\n  selectedLanguage: QuestionLanguage;\n  wholeQuestion: QuestionInterface;\n  answersList: QuestionAnswersStore[];\n}\n\nexport const findQType = (\n  typeShort: questionShortElementsType | QuestionForEmbedded | QuestionForHybrid\n): questionTypeElementsType => {\n  let changed: questionTypeElementsType = questionTypeElementsType.Hybrid;\n  switch (typeShort) {\n    case QuestionForHybrid.Calculated:\n      changed = questionTypeElementsType.Calculated;\n      break;\n    case QuestionForHybrid.CalculatedMultipleChoice:\n      changed = questionTypeElementsType.CalculatedMultipleChoice;\n      break;\n    case QuestionForHybrid.Essay:\n      changed = questionTypeElementsType.Essay;\n      break;\n    case QuestionForHybrid.Matching:\n      changed = questionTypeElementsType.Matching;\n      break;\n    case QuestionForHybrid.MultipleChoice:\n      changed = questionTypeElementsType.MultipleChoice;\n      break;\n    case QuestionForHybrid.Numeric:\n      changed = questionTypeElementsType.Numeric;\n      break;\n    case QuestionForHybrid.ShortAnswer:\n      changed = questionTypeElementsType.ShortAnswer;\n      break;\n    case QuestionForHybrid.SimpleCalculate:\n      changed = questionTypeElementsType.SimpleCalculate;\n      break;\n    case QuestionForHybrid.SingleMultiple:\n      changed = questionTypeElementsType.SingleMultiple;\n      break;\n    case QuestionForHybrid.TrueFalse:\n      changed = questionTypeElementsType.TrueFalse;\n      break;\n  }\n  return changed;\n};\n\nconst FindAnswerHybrid = (props: QuestionsReviewProps) => {\n  let str = \"a\";\n  if (props.submitQuestionAnswer === true) {\n    return (\n      <div className=\"bg-white rounded mx-4 my-4\">\n        <div className=\"text-gray-600 mx-4\">Saving changes, Please wait...</div>\n        <Loading />\n      </div>\n    );\n  }\n  return (\n    <div className={`pt-4 border-t border-gray-300 bg-white`}>\n      <div className=\"px-4 pb-2\">\n        <div className=\"my-2\">\n          <div\n            className=\"flex flex-col gap-3 overflow-y-auto\"\n            style={{ maxHeight: \"100%\" }}\n          >\n            {console.log(\n              \"Whole: \",\n              props.wholeQuestion,\n              props.selectedLanguage\n            )}\n            <div>\n              {findQuestionType(\n                props.wholeQuestion.type,\n                props.questionTypes.questionTypes\n              ) === questionTypeElementsType.Hybrid &&\n                props.wholeQuestion.question.find(\n                  (test) => test.language === props.selectedLanguage\n                ) !== undefined &&\n                props.wholeQuestion.question\n                  .find((test) => test.language === props.selectedLanguage)!\n                  .sub_question.map((item, i) => {\n                    let stri = String.fromCharCode(\n                      str.charCodeAt(str.length - 1) + i\n                    );\n                    return (\n                      <div\n                        key={i + 1}\n                        className=\"bg-white hover:bg-white border border-white hover:border-blue-400 px-2 py-2 rounded  animate__animated animate__fadeIn animate__fast group\"\n                      >\n                        <div className=\"grid md:grid-cols-12 w-full\">\n                          <div className=\"col-span-12 flex flex-row items-center gap-3\">\n                            <div\n                              key={i + 1}\n                              className=\"w-6 h-6 p-2 rounded-full bg-blue-100 flex justify-center items-center font-bold text-lg text-blue-600 cursor-pointer\"\n                            >\n                              {stri}\n                            </div>\n                            <div className=\"text-sm w-full\">\n                              {props.wholeQuestion.question.find(\n                                (test) =>\n                                  test.language === props.selectedLanguage\n                              ) !== undefined ? (\n                                findQuestionType(\n                                  item.type,\n                                  props.questionTypes.questionTypes\n                                ) === questionTypeElementsType.Embedded ? (\n                                  EmbeddedQuestion(\n                                    props.wholeQuestion!,\n                                    props.questionTypes.questionTypes,\n                                    props.selectedLanguage,\n                                    props.candidateExam.question_answers,\n                                    (data: QuestionAnswerInterface) => {}\n                                  )\n                                ) : (\n                                  <div\n                                    className=\"font-bold text-gray-700 text-base\"\n                                    dangerouslySetInnerHTML={{\n                                      __html: item.description,\n                                    }}\n                                  ></div>\n                                )\n                              ) : (\n                                props.wholeQuestion.question.length > 0 && (\n                                  <div\n                                    className=\"font-bold text-gray-700 text-base max-h-20 truncate\"\n                                    dangerouslySetInnerHTML={{\n                                      __html: item.description,\n                                    }}\n                                  ></div>\n                                )\n                              )}\n                              <div className=\"text-blue-700 font-bold text-sm w-full\">\n                                Answer: &nbsp;\n                                {props.questionTypes.questionTypes !== null && (\n                                  <FindAnswer\n                                    selectedLanguage={props.selectedLanguage}\n                                    question={props.wholeQuestion}\n                                    answersList={props.answersList}\n                                    questionTypes={\n                                      props.questionTypes.questionTypes\n                                    }\n                                    onClick={() => {}}\n                                    showCorrectAnswer={false}\n                                    subQuestionType={findQType(item.typeShort)}\n                                    reference={item.reference}\n                                  />\n                                )}\n                              </div>\n                            </div>\n                          </div>\n                        </div>\n                      </div>\n                    );\n                  })}\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default FindAnswerHybrid;\n","import React from \"react\";\nimport {\n  BsCheckSquareFill,\n  BsCheckCircleFill,\n  BsArrowRightSquareFill,\n  BsArrowRightCircleFill,\n} from \"react-icons/bs\";\nimport { QuestionAnswersStore } from \"../../../actions\";\nimport {\n  CalculatedMultipleChoiceQuestionAnswerInterface,\n  MatchingQuestionAnswerInterface,\n  MultipleChoiceQuestionAnswerInterface,\n  QuestionInterface,\n  questionType,\n  TrueFalseQuestionAnswerInterface,\n  NumericalQuestionAnswerInterface,\n  ShortAnswerQuestionAnswerInterface,\n  SimpleCalculatedQuestionAnswerInterface,\n  QuestionLanguage,\n  LanguageInterface,\n  EssayQuestionAnswerInterface,\n  QuestionAnswerInterface,\n  QuestionAnswerFormat,\n} from \"../../../interfaces\";\nimport {\n  toCalculatedMultipleChoice,\n  toEssay,\n  toMatching,\n  toMultipleChoice,\n  toNumerical,\n  toShortAnswer,\n  toSimpleCalculated,\n  toTrueFalse,\n} from \"../QuestionDetails/ConvertingAnswers\";\nimport { findQuestionType } from \"../utils/utils\";\nimport {\n  QuestionForHybrid,\n  questionTypeElementsType,\n} from \"@mastrecruit/common\";\nimport { findQType } from \"./FindAnswerHybrid\";\n\ninterface FindAnswerProps {\n  question: QuestionInterface;\n  answersList: QuestionAnswersStore[];\n  selectedLanguage: QuestionLanguage | LanguageInterface;\n  questionTypes: questionType[];\n  showCorrectAnswer: boolean;\n  subQuestionType?: questionTypeElementsType;\n  reference?: number;\n  onClick: () => void;\n}\n\nconst resultDiv = (\n  user_answers: QuestionAnswerFormat[],\n  question_answers: QuestionAnswerFormat[],\n  props: FindAnswerProps\n): JSX.Element => {\n  switch (\n    props.subQuestionType === undefined\n      ? findQuestionType(props.question.type, props.questionTypes)\n      : props.subQuestionType\n  ) {\n    case questionTypeElementsType.MultipleChoice:\n      const userAnswer: MultipleChoiceQuestionAnswerInterface[] =\n        toMultipleChoice(user_answers);\n      return (\n        <div className=\"w-full\">\n          {userAnswer\n            .filter((itm) => itm.status === true)\n            .map((item, i) => (\n              <div\n                key={i + 1}\n                onClick={props.onClick}\n                className=\"bg-gray-100 rounded px-3 cursor-pointer flex flex-row items-center gap-3 text-gray-600 hover:text-blue-600 mb-1 py-3 font-bold\"\n              >\n                <div className=\"text-xl text-blue-600\">\n                  <BsCheckSquareFill />\n                </div>\n                <div dangerouslySetInnerHTML={{ __html: item.value }}></div>\n              </div>\n            ))}\n          {/* Correct answers */}\n          {props.showCorrectAnswer === true && (\n            <div className=\"border-l-4 rounded-xl border-blue-600 bg-white p-3\">\n              <div className=\"font-extrabold text-lg\">Correct answer</div>\n              <div>\n                {question_answers\n                  .filter((itm) => itm.status === true)\n                  .map((item, i) => (\n                    <div\n                      key={i + 1}\n                      onClick={props.onClick}\n                      className=\"bg-blue-50 rounded px-3 cursor-pointer flex flex-row items-center gap-3 text-gray-600 hover:text-blue-600 mb-1 py-3 font-bold\"\n                    >\n                      <div className=\"text-xl text-blue-600\">\n                        <BsCheckSquareFill />\n                      </div>\n                      <div\n                        dangerouslySetInnerHTML={{ __html: item.value }}\n                      ></div>\n                    </div>\n                  ))}\n              </div>\n            </div>\n          )}\n        </div>\n      );\n    case questionTypeElementsType.SingleMultiple:\n      const userAnswerSingle: MultipleChoiceQuestionAnswerInterface[] =\n        toMultipleChoice(user_answers);\n      return (\n        <div className=\"w-full\">\n          {userAnswerSingle\n            .filter((itm) => itm.status === true)\n            .map((item, i) => (\n              <div\n                key={i + 1}\n                onClick={props.onClick}\n                className=\"bg-gray-100 rounded px-3 cursor-pointer flex flex-row items-center gap-3 text-gray-600 hover:text-blue-600 mb-1 py-3 font-bold\"\n              >\n                <div className=\"text-xl text-blue-600\">\n                  <BsCheckCircleFill />\n                </div>\n                <div dangerouslySetInnerHTML={{ __html: item.value }}></div>\n              </div>\n            ))}\n          {/* Correct answers */}\n          {props.showCorrectAnswer === true && (\n            <div className=\"border-l-4 rounded-xl border-blue-600 bg-white p-3\">\n              <div className=\"font-extrabold text-lg\">Correct answer</div>\n              <div>\n                {question_answers\n                  .filter((itm) => itm.status === true)\n                  .map((item, i) => (\n                    <div\n                      key={i + 1}\n                      onClick={props.onClick}\n                      className=\"bg-blue-50 rounded px-3 cursor-pointer flex flex-row items-center gap-3 text-gray-600 hover:text-blue-600 mb-1 py-3 font-bold\"\n                    >\n                      <div className=\"text-xl text-blue-600\">\n                        <BsCheckCircleFill />\n                      </div>\n                      <div\n                        dangerouslySetInnerHTML={{ __html: item.value }}\n                      ></div>\n                    </div>\n                  ))}\n              </div>\n            </div>\n          )}\n        </div>\n      );\n\n    case questionTypeElementsType.CalculatedMultipleChoice:\n      const userAnswer1: CalculatedMultipleChoiceQuestionAnswerInterface[] =\n        toCalculatedMultipleChoice(user_answers);\n      return (\n        <div className=\"w-full\">\n          {userAnswer1\n            .filter((itm) => itm.status === true)\n            .map((item, i) => (\n              <div\n                key={i + 1}\n                onClick={props.onClick}\n                className=\"bg-gray-100 rounded px-3 cursor-pointer flex flex-row items-center gap-3 text-gray-600 hover:text-blue-600 mb-1 py-3 font-bold\"\n              >\n                <div className=\"text-xl text-blue-600\">\n                  <BsCheckSquareFill />\n                </div>\n                <div className=\"text-base font-normal text-gray-500\">\n                  {item.value.length > 1 ? (\n                    <>\n                      Between{\" \"}\n                      <span className=\"underline text-gray-600 font-extrabold\">\n                        {item.value[0]}\n                      </span>{\" \"}\n                      and{\" \"}\n                      <span className=\"underline text-gray-600 font-extrabold\">\n                        {item.value[1]}\n                      </span>\n                    </>\n                  ) : (\n                    <span className=\"text-gray-700\">\n                      {item.value[0].toString()}\n                    </span>\n                  )}\n                </div>\n              </div>\n            ))}\n          {/* Correct answers */}\n          {props.showCorrectAnswer === true && (\n            <div className=\"border-l-4 rounded-xl border-blue-600 bg-white p-3\">\n              <div className=\"font-extrabold text-lg\">Correct answer</div>\n              <div>\n                {question_answers\n                  .filter((itm) => itm.status === true)\n                  .map((item, i) => (\n                    <div\n                      key={i + 1}\n                      onClick={props.onClick}\n                      className=\"bg-blue-50 rounded px-3 cursor-pointer flex flex-row items-center gap-3 text-gray-600 mb-1 py-3 font-bold\"\n                    >\n                      <div className=\"text-xl text-blue-600\">\n                        <BsCheckSquareFill />\n                      </div>\n                      <div className=\"text-base font-normal text-gray-500\">\n                        {item.value.length > 1 ? (\n                          <>\n                            Between{\" \"}\n                            <span className=\"underline text-blue-600 font-extrabold\">\n                              {item.value[0]}\n                            </span>{\" \"}\n                            and{\" \"}\n                            <span className=\"underline text-blue-600 font-extrabold\">\n                              {item.value[1]}\n                            </span>\n                          </>\n                        ) : (\n                          <span className=\"text-blue-600\">\n                            {item.value[0].toString()}\n                          </span>\n                        )}\n                      </div>\n                    </div>\n                  ))}\n              </div>\n            </div>\n          )}\n        </div>\n      );\n\n    case questionTypeElementsType.Matching:\n      const userAnswerMatch: MatchingQuestionAnswerInterface[] =\n        toMatching(user_answers);\n      return (\n        <div className=\"w-full\">\n          {userAnswerMatch.map((item, i) => (\n            <div\n              key={i + 1}\n              onClick={props.onClick}\n              className=\"bg-gray-100 rounded cursor-pointer flex flex-row items-center gap-3 text-gray-600 hover:text-blue-600 mb-1 font-bold border border-blue-300\"\n            >\n              <div className=\"text-xl text-blue-600 font-bold p-3 pr-1 md:pr-3\">\n                <div className=\"h-8 w-8 p-3 bg-blue-100 rounded-full flex items-center justify-center\">\n                  {i + 1}\n                </div>\n              </div>\n              <div className=\"flex flex-col lg:flex-row items-center gap-3 w-full h-full truncate\">\n                <div\n                  className=\"w-full mt-3 lg:mb-0\"\n                  dangerouslySetInnerHTML={{ __html: item.value }}\n                ></div>\n                <div className=\"flex flex-row items-center gap-3 w-full mb-3 lg:mb-0\">\n                  <div className=\"text-3xl text-gray-500 group-hover:text-blue-600\">\n                    <BsArrowRightSquareFill />\n                  </div>\n                  <div\n                    className=\"w-full mr-2\"\n                    dangerouslySetInnerHTML={{ __html: item.status }}\n                  ></div>\n                </div>\n              </div>\n            </div>\n          ))}\n          {/* Correct answers */}\n          {props.showCorrectAnswer === true && (\n            <div className=\"border-l-4 rounded-xl border-blue-600 bg-white p-3\">\n              <div className=\"font-extrabold text-lg\">Correct answer</div>\n              <div>\n                {question_answers.map((item, i) => (\n                  <div\n                    key={i + 1}\n                    onClick={props.onClick}\n                    className=\"bg-blue-50 rounded cursor-pointer flex flex-row items-center gap-3 text-gray-600 hover:text-blue-600 mb-1 font-bold border border-blue-300\"\n                  >\n                    <div className=\"text-xl text-blue-600 font-bold p-3 pr-1 md:pr-3\">\n                      <div className=\"h-8 w-8 p-3 bg-blue-100 rounded-full flex items-center justify-center\">\n                        {i + 1}\n                      </div>\n                    </div>\n                    <div className=\"flex flex-col lg:flex-row items-center gap-3 w-full h-full truncate\">\n                      <div\n                        className=\"w-full mt-3 lg:mb-0\"\n                        dangerouslySetInnerHTML={{ __html: item.value }}\n                      ></div>\n                      <div className=\"flex flex-row items-center gap-3 w-full mb-3 lg:mb-0\">\n                        <div className=\"text-3xl text-gray-500 group-hover:text-blue-600\">\n                          <BsArrowRightSquareFill />\n                        </div>\n                        <div\n                          className=\"w-full mr-2\"\n                          dangerouslySetInnerHTML={{ __html: item.status }}\n                        ></div>\n                      </div>\n                    </div>\n                  </div>\n                ))}\n              </div>\n            </div>\n          )}\n        </div>\n      );\n    case questionTypeElementsType.TrueFalse:\n      const userAnswerTureFalse: TrueFalseQuestionAnswerInterface[] =\n        toTrueFalse(user_answers);\n      return (\n        <div className=\"w-full\">\n          {userAnswerTureFalse\n            .filter((itm) => itm.status === true)\n            .map((item, i) => (\n              <div\n                key={i + 1}\n                onClick={props.onClick}\n                className=\"bg-gray-100 rounded px-3 cursor-pointer flex flex-row items-center gap-3 text-gray-600 hover:text-blue-600 mb-1 py-3 font-bold\"\n              >\n                <div className=\"text-xl\">\n                  <BsArrowRightCircleFill />\n                </div>\n                <div dangerouslySetInnerHTML={{ __html: item.value }}></div>\n              </div>\n            ))}\n          {/* Correct answers */}\n          {props.showCorrectAnswer === true && (\n            <div className=\"border-l-4 rounded-xl border-blue-600 bg-white p-3\">\n              <div className=\"font-extrabold text-lg\">Correct answer</div>\n              <div>\n                {question_answers\n                  .filter((itm) => itm.status === true)\n                  .map((item, i) => (\n                    <div\n                      key={i + 1}\n                      onClick={props.onClick}\n                      className=\"bg-blue-50 rounded px-3 cursor-pointer flex flex-row items-center gap-3 text-blue-600 hover:text-blue-600 mb-1 py-3 font-bold\"\n                    >\n                      <div className=\"text-xl\">\n                        <BsArrowRightCircleFill />\n                      </div>\n                      <div\n                        dangerouslySetInnerHTML={{ __html: item.value }}\n                      ></div>\n                    </div>\n                  ))}\n              </div>\n            </div>\n          )}\n        </div>\n      );\n    case questionTypeElementsType.Numeric:\n      const userAnswerNumerical: NumericalQuestionAnswerInterface[] =\n        toNumerical(user_answers);\n      return (\n        <div className=\"w-full\">\n          {userAnswerNumerical.map((item, i) => (\n            <div\n              key={i + 1}\n              onClick={props.onClick}\n              className=\"bg-gray-100 rounded px-3 cursor-pointer flex flex-row items-center gap-3 text-gray-600 hover:text-blue-600 mb-1 py-3 font-bold\"\n            >\n              <div className=\"text-xl\">\n                <BsArrowRightCircleFill />\n              </div>\n              <div className=\"text-gray-600 text-base font-normal\">\n                {item.value.length > 1 ? (\n                  <>\n                    Between{\" \"}\n                    <span className=\"underline text-gray-600 font-extrabold\">\n                      {item.value[0]}\n                    </span>{\" \"}\n                    and{\" \"}\n                    <span className=\"underline text-gray-600 font-extrabold\">\n                      {item.value[1]}\n                    </span>\n                  </>\n                ) : (\n                  item.value.length > 0 && (\n                    <span className=\"text-gray-700\">\n                      {item.value[0].toString()}\n                    </span>\n                  )\n                )}\n              </div>\n            </div>\n          ))}\n          {/* Correct answers */}\n          {props.showCorrectAnswer === true && (\n            <div className=\"border-l-4 rounded-xl border-blue-600 bg-white p-3\">\n              <div className=\"font-extrabold text-lg\">Correct answer</div>\n              <div>\n                {question_answers.map((item, i) => (\n                  <div\n                    key={i + 1}\n                    onClick={props.onClick}\n                    className=\"bg-blue-50 rounded px-3 cursor-pointer flex flex-row items-center gap-3 text-blue-600 hover:text-blue-600 mb-1 py-3 font-bold\"\n                  >\n                    <div className=\"text-xl\">\n                      <BsArrowRightCircleFill />\n                    </div>\n                    <div className=\"text-gray-600 text-base font-normal\">\n                      {item.value.length > 1 ? (\n                        <>\n                          Between{\" \"}\n                          <span className=\"underline text-blue-600 font-extrabold\">\n                            {item.value[0] - item.value[1]}\n                          </span>{\" \"}\n                          and{\" \"}\n                          <span className=\"underline text-blue-600 font-extrabold\">\n                            {item.value[0] + item.value[1]}\n                          </span>\n                        </>\n                      ) : (\n                        item.value.length > 0 && (\n                          <span className=\"text-blue-700\">\n                            {item.value[0].toString()}\n                          </span>\n                        )\n                      )}\n                    </div>\n                  </div>\n                ))}\n              </div>\n            </div>\n          )}\n        </div>\n      );\n    case questionTypeElementsType.SimpleCalculate:\n      const userAnswerSimpleCalculate: SimpleCalculatedQuestionAnswerInterface[] =\n        toSimpleCalculated(user_answers);\n      return (\n        <div className=\"w-full\">\n          {userAnswerSimpleCalculate.map((item, i) => (\n            <div\n              key={i + 1}\n              onClick={props.onClick}\n              className=\"bg-gray-100 rounded px-3 cursor-pointer flex flex-row items-center gap-3 text-gray-600 hover:text-blue-600 mb-1 py-3 font-bold\"\n            >\n              <div className=\"text-xl\">\n                <BsArrowRightCircleFill />\n              </div>\n              <div className=\"text-gray-600 text-base font-normal\">\n                {item.value.length > 1 ? (\n                  <>\n                    Between{\" \"}\n                    <span className=\"underline text-gray-600 font-extrabold\">\n                      {item.value[0]}\n                    </span>{\" \"}\n                    and{\" \"}\n                    <span className=\"underline text-gray-600 font-extrabold\">\n                      {item.value[1]}\n                    </span>\n                  </>\n                ) : (\n                  item.value.length > 0 && (\n                    <span className=\"text-gray-700\">\n                      {item.value[0].toString()}\n                    </span>\n                  )\n                )}\n              </div>\n            </div>\n          ))}\n          {/* Correct answers */}\n          {props.showCorrectAnswer === true && (\n            <div className=\"border-l-4 rounded-xl border-blue-600 bg-white p-3\">\n              <div className=\"font-extrabold text-lg\">Correct answer</div>\n              <div>\n                {question_answers.map((item, i) => (\n                  <div\n                    key={i + 1}\n                    onClick={props.onClick}\n                    className=\"bg-blue-50 rounded px-3 cursor-pointer flex flex-row items-center gap-3 text-blue-600 hover:text-blue-600 mb-1 py-3 font-bold\"\n                  >\n                    <div className=\"text-xl\">\n                      <BsArrowRightCircleFill />\n                    </div>\n                    <div className=\"text-gray-600 text-base font-normal\">\n                      {item.value.length > 1 ? (\n                        <>\n                          Between{\" \"}\n                          <span className=\"underline text-blue-600 font-extrabold\">\n                            {item.value[0]}\n                          </span>{\" \"}\n                          and{\" \"}\n                          <span className=\"underline text-blue-600 font-extrabold\">\n                            {item.value[1]}\n                          </span>\n                        </>\n                      ) : (\n                        item.value.length > 0 && (\n                          <span className=\"text-blue-700\">\n                            {item.value[0].toString()}\n                          </span>\n                        )\n                      )}\n                    </div>\n                  </div>\n                ))}\n              </div>\n            </div>\n          )}\n        </div>\n      );\n    case questionTypeElementsType.ShortAnswer:\n      const userAnswerShortAnswer: ShortAnswerQuestionAnswerInterface[] =\n        toShortAnswer(user_answers);\n      return (\n        <div className=\"w-full\">\n          {userAnswerShortAnswer.map((item, i) => (\n            <div\n              key={i + 1}\n              onClick={props.onClick}\n              className=\"bg-gray-100 rounded px-3 cursor-pointer flex flex-row items-center gap-3 text-gray-600 hover:text-blue-600 mb-1 py-3 font-bold\"\n            >\n              <div className=\"text-xl\">\n                <BsArrowRightCircleFill />\n              </div>\n              <div\n                dangerouslySetInnerHTML={{\n                  __html: item.value,\n                }}\n              ></div>\n            </div>\n          ))}\n          {/* Correct answers */}\n          {props.showCorrectAnswer === true && (\n            <div className=\"border-l-4 rounded-xl border-blue-600 bg-white p-3\">\n              <div className=\"font-extrabold text-lg\">Correct answer</div>\n              <div>\n                {question_answers.map((item, i) => (\n                  <div\n                    key={i + 1}\n                    onClick={props.onClick}\n                    className=\"bg-blue-50 rounded px-3 cursor-pointer flex flex-row items-center gap-3 text-blue-600 hover:text-blue-600 mb-1 py-3 font-bold\"\n                  >\n                    <div className=\"text-xl\">\n                      <BsArrowRightCircleFill />\n                    </div>\n                    <div\n                      dangerouslySetInnerHTML={{\n                        __html: item.value,\n                      }}\n                    ></div>\n                  </div>\n                ))}\n              </div>\n            </div>\n          )}\n        </div>\n      );\n    // Essay\n    case questionTypeElementsType.Essay:\n      const userAnswerEssay: EssayQuestionAnswerInterface[] =\n        toEssay(user_answers);\n      return (\n        <div className=\"w-full\">\n          {userAnswerEssay.map((item, i) => (\n            <div\n              key={i + 1}\n              onClick={props.onClick}\n              className=\"bg-gray-100 rounded px-3 cursor-pointer flex flex-row items-center gap-3 text-gray-600 hover:text-blue-600 mb-1 py-3 font-bold\"\n            >\n              <div className=\"text-xl\">\n                <BsArrowRightCircleFill />\n              </div>\n              <div\n                dangerouslySetInnerHTML={{\n                  __html: item.value,\n                }}\n              ></div>\n            </div>\n          ))}\n          {/* Correct answers */}\n          {props.showCorrectAnswer === true && (\n            <div className=\"border-l-4 rounded-xl border-blue-600 bg-white p-3\">\n              <div className=\"font-extrabold text-lg\">Correct answer</div>\n              <div>\n                {question_answers.map((item, i) => (\n                  <div\n                    key={i + 1}\n                    onClick={props.onClick}\n                    className=\"bg-blue-50 rounded px-3 cursor-pointer flex flex-row items-center gap-3 text-blue-600 hover:text-blue-600 mb-1 py-3 font-bold\"\n                  >\n                    <div className=\"text-xl\">\n                      <BsArrowRightCircleFill />\n                    </div>\n                    <div\n                      dangerouslySetInnerHTML={{\n                        __html: item.value,\n                      }}\n                    ></div>\n                  </div>\n                ))}\n              </div>\n            </div>\n          )}\n        </div>\n      );\n    case questionTypeElementsType.Embedded:\n      return <div></div>;\n    case questionTypeElementsType.Hybrid:\n      return <div></div>;\n    default:\n      return <div className=\"text-blue-600 font-extrabold\">Answer added</div>;\n  }\n};\n\nconst FindAnswer = (props: FindAnswerProps) => {\n  const answer = props.answersList.find(\n    (item) => item.question_id === props.question.question_id\n  );\n  let UserAnswersSel = props.question.question.find(\n    (itm) => itm.language === props.selectedLanguage\n  );\n  if (UserAnswersSel === undefined && props.question.question.length > 0) {\n    UserAnswersSel =\n      props.question.question.find(\n        (itm) => itm.language === props.selectedLanguage\n      ) === undefined\n        ? props.question.question[0]\n        : props.question.question.find(\n            (itm) => itm.language === props.selectedLanguage\n          )!;\n  }\n  if (answer === undefined || UserAnswersSel === undefined) {\n    return (\n      <div className=\"text-yellow-600 font-extrabold text-2xl text-center\">\n        No answer found!\n      </div>\n    );\n  } else {\n    let SubQ = UserAnswersSel.sub_question.find(\n      (itm) => findQType(itm.typeShort) === props.subQuestionType\n    );\n    return (\n      <div>\n        {SubQ === undefined\n          ? resultDiv(\n              answer.answers[0].answer,\n              UserAnswersSel.answers[0].answer,\n              props\n            )\n          : answer.answers\n              .filter((itm) => SubQ && itm.reference === SubQ.reference)\n              .map((user_answer) => {\n                const testQ = UserAnswersSel!.answers.find(\n                  (itm) => itm.reference === user_answer.reference\n                );\n                if (testQ !== undefined) {\n                  return resultDiv(user_answer.answer, testQ.answer, props);\n                } else {\n                  return <div>Answered</div>;\n                }\n              })}\n      </div>\n    );\n  }\n};\n\nexport default FindAnswer;\n","import React, { Component } from \"react\";\nimport FindAnswer from \"../../containers/DoExam/DoExamTitle/FindAnswer\";\nimport { ExamAnswerSheetDone } from \"../../interfaces/exam\";\nimport { connect } from \"react-redux\";\nimport {\n  Auth,\n  CandidateApplicationsStoreInterface,\n  candidateExamStoreInterface,\n  FC_GetProfileDetails,\n  LoadCandidateApplications,\n  setSelectedCandidateExam,\n  setSelectedCourse,\n  setSelectedPosition,\n  InitializeExamDetails,\n  loadExamsDone,\n  AddUserApplication,\n  loadApplicationPeriods,\n  requestUserAnswers,\n  loadQuestionTypes,\n  questionTypesStoreInterface,\n  System,\n  courseStoreInterface,\n  loadCourses,\n} from \"../../actions\";\nimport { StoreState } from \"../../reducers\";\nimport { DATE } from \"../../utils/functions\";\nimport { AiOutlineFileText } from \"react-icons/ai\";\nimport { ExamDoneDetailsAnswers } from \"../../containers/CandidateExams/CandidateExams\";\nimport Loading from \"../Loading/Loading\";\nimport { QuestionLanguage } from \"../../interfaces\";\nimport { findQuestionType } from \"../../containers/DoExam/utils/utils\";\nimport { questionTypeElementsType } from \"@mastrecruit/common\";\nimport { EmbeddedQuestion } from \"../QuestionPreview/QuestionPreview\";\nimport FindAnswerHybrid from \"../../containers/DoExam/DoExamTitle/FindAnswerHybrid\";\n\ninterface AnswersDetailsProps {\n  exam_id: ExamDoneDetailsAnswers;\n  showAnswers: boolean;\n  allAnswers?: ExamAnswerSheetDone[];\n  user_id?: string;\n  questionTypes: questionTypesStoreInterface;\n  requestUserAnswers: (\n    exam_id: string,\n    user_id: string,\n    callback: (loading: boolean) => void\n  ) => void;\n  FC_GetProfileDetails: Function;\n  auth: Auth;\n  candidateExam: candidateExamStoreInterface;\n  loadQuestionTypes: (callback: (loading: boolean) => void) => void;\n  loadExamsDone: (\n    periodId: string,\n    userId: string,\n    callback: (loading: boolean) => void\n  ) => void;\n  system: System;\n  course: courseStoreInterface;\n  loadCourses: (callback: (loading: boolean) => void) => void;\n}\ninterface AnswersDetailsState {\n  loading: boolean;\n  loadingStatus: boolean;\n}\n\nexport class _AnswersDetails extends Component<\n  AnswersDetailsProps,\n  AnswersDetailsState\n> {\n  constructor(props: AnswersDetailsProps) {\n    super(props);\n\n    this.state = {\n      loading: false,\n      loadingStatus: false,\n    };\n  }\n  setLoading = (status: boolean) => {\n    this.setState({ loading: status });\n  };\n  setLoadingStatus = (status: boolean) => {\n    this.setState({ loadingStatus: status });\n  };\n  componentDidMount = () => {\n    if (\n      this.props.questionTypes.questionTypes === null ||\n      this.props.questionTypes.questionTypes.length === 0\n    ) {\n      this.props.loadQuestionTypes(this.setLoading);\n    }\n    if (this.props.exam_id) {\n      if (this.props.course.courses === null) {\n        this.props.loadCourses(this.setLoading);\n      }\n      let check = this.props.candidateExam.user_exams_done.find(\n        (itm) =>\n          itm.course === this.props.exam_id.course &&\n          itm.period === this.props.exam_id.period &&\n          DATE(itm.exam_date) === DATE(this.props.exam_id.exam_date)\n      );\n      // Check if user exams loaded\n      if (\n        (this.props.candidateExam.user_exams_done.length === 0 ||\n          check === undefined) &&\n        this.props.allAnswers === undefined\n      ) {\n        this.props.loadExamsDone(\n          this.props.exam_id.period,\n          this.props.auth.user.user_id,\n          this.setLoadingStatus\n        );\n      }\n      if (check !== undefined) {\n        if (\n          this.props.candidateExam.user_exams_done.find(\n            (item) => item.exam_paper === check?.exam_paper\n          ) === undefined\n        ) {\n          this.props.requestUserAnswers(\n            check.exam_paper,\n            this.props.user_id === undefined\n              ? this.props.auth.user.user_id\n              : this.props.user_id,\n            this.setLoading\n          );\n        }\n      }\n    }\n  };\n  userAnswersTotalMarks = (user_answers: ExamAnswerSheetDone) => {\n    let total: number = 0;\n    for (let item of user_answers.user_answers) {\n      total += item.user_marks;\n    }\n    return total;\n  };\n  render() {\n    let user_exam_details: ExamAnswerSheetDone | undefined =\n      this.props.allAnswers === undefined\n        ? this.props.candidateExam.user_exams_done.find(\n            (itm) =>\n              itm.course === this.props.exam_id.course &&\n              itm.period === this.props.exam_id.period &&\n              DATE(itm.exam_date) === DATE(this.props.exam_id.exam_date)\n          )\n        : this.props.allAnswers.find(\n            (itm) =>\n              itm.course === this.props.exam_id.course &&\n              itm.period === this.props.exam_id.period &&\n              DATE(itm.exam_date) === DATE(this.props.exam_id.exam_date)\n          );\n    if (\n      this.state.loading === true ||\n      this.state.loadingStatus === true ||\n      this.props.course.courses === null\n    ) {\n      return (\n        <div className=\"my-6 rounded bg-white p-3\">\n          <Loading />\n        </div>\n      );\n    }\n    if (user_exam_details === undefined) {\n      return (\n        <div className=\"my-6 rounded bg-white p-3\">\n          <span className=\"text-4xl font-bold\">Exam details not found!</span>\n        </div>\n      );\n    }\n    return (\n      <div className=\"p-2 bg-gray-100\">\n        <div className=\"mb-5 -mt-5\">\n          {user_exam_details !== undefined && (\n            <div className=\"mt-5\">\n              <div className=\"px-3 mb-2 flex flex-row items-center gap-3\">\n                <div>\n                  <AiOutlineFileText className=\"text-5xl text-gray-500\" />\n                </div>\n                <div\n                  className=\"text-2xl font-extrabold\"\n                  dangerouslySetInnerHTML={{\n                    __html: \"Exam for \" + this.props.exam_id.course_name,\n                  }}\n                ></div>\n              </div>\n              <div className=\" p-3 bg-white rounded-t mb-0 border-b\">\n                <div className=\"text-sm text-gray-500 font-bold\">\n                  Exam date:\n                </div>\n                <div\n                  className=\"text-base font-bold\"\n                  dangerouslySetInnerHTML={{\n                    __html: DATE(this.props.exam_id.exam_date),\n                  }}\n                ></div>\n              </div>\n              <div className=\" p-3 bg-white mb-0 border-b\">\n                <div className=\"text-sm text-gray-500 font-bold\">\n                  Exam description:\n                </div>\n                <div\n                  className=\"text-base font-bold\"\n                  dangerouslySetInnerHTML={{\n                    __html: this.props.exam_id.discription,\n                  }}\n                ></div>\n              </div>\n              <div className=\" p-3 bg-white rounded-b mb-0\">\n                <div className=\"text-sm text-gray-500 font-bold\">\n                  Exam terms and conditions:\n                </div>\n                <div\n                  className=\"text-base font-bold\"\n                  dangerouslySetInnerHTML={{\n                    __html: this.props.exam_id.termes,\n                  }}\n                ></div>\n              </div>\n            </div>\n          )}\n        </div>\n        <div className=\"text-2xl font-extrabold text-blue-600 px-2 mb-3\">\n          Exam answers & marks\n        </div>\n        {user_exam_details === undefined ? (\n          \"Not Found\"\n        ) : user_exam_details.user_answers.length === 0 ? (\n          <div>\n            <div className=\"p-5 rounded-lg bg-yellow-100 text-black text-xl mb-5 text-center border border-white shadow-lg animate__animated animate__shakeX\">\n              Exam answers not found, You did not submit the exam!\n            </div>\n          </div>\n        ) : (\n          user_exam_details.user_answers.map((item, i) => (\n            <div\n              key={i + 1}\n              className=\"bg-white hover:bg-white border border-white hover:border-blue-400 px-2 py-2 rounded  animate__animated animate__fadeIn animate__fast group mb-2\"\n            >\n              <div className=\"grid md:grid-cols-11 w-full\">\n                <div className=\"col-span-12 flex flex-row items-center gap-3\">\n                  <div\n                    key={i + 1}\n                    className=\"w-6 h-6 p-2 rounded-full bg-gray-600 flex justify-center items-center font-bold text-lg text-white cursor-pointer\"\n                  >\n                    {i + 1}\n                  </div>\n                  {user_exam_details &&\n                    user_exam_details.questions.find(\n                      (itm) => itm.question_id === item.question\n                    ) !== undefined && (\n                      <div className=\"text-sm w-full\">\n                        {user_exam_details.questions.find(\n                          (itm) => itm.question_id === item.question\n                        ) &&\n                        findQuestionType(\n                          user_exam_details.questions.find(\n                            (itm) => itm.question_id === item.question\n                          )!.type,\n                          this.props.questionTypes.questionTypes\n                        ) !== null &&\n                        findQuestionType(\n                          user_exam_details.questions.find(\n                            (itm) => itm.question_id === item.question\n                          )!.type,\n                          this.props.questionTypes.questionTypes\n                        ) === questionTypeElementsType.Embedded ? (\n                          EmbeddedQuestion(\n                            user_exam_details.questions.find(\n                              (itm) => itm.question_id === item.question\n                            )!,\n                            this.props.questionTypes.questionTypes,\n                            item.language as QuestionLanguage,\n                            [\n                              {\n                                question_id: item.question,\n                                status: true,\n                                answers: item.answers,\n                                language: item.language as QuestionLanguage,\n                              },\n                            ],\n                            () => {}\n                          )\n                        ) : (\n                          <div\n                            dangerouslySetInnerHTML={{\n                              __html: user_exam_details.questions\n                                .find(\n                                  (itm) => itm.question_id === item.question\n                                )!\n                                .question.find(\n                                  (test) => test.language === item.language\n                                )!.description,\n                            }}\n                            className=\"font-bold text-gray-700 text-base\"\n                          ></div>\n                        )}\n                        {console.log(\n                          \"Test selected exam: \",\n                          item.answers,\n                          item.language\n                        )}\n                        <div className=\"text-blue-700 font-bold text-sm w-full\">\n                          {findQuestionType(\n                            user_exam_details.questions.find(\n                              (itm) => itm.question_id === item.question\n                            )!.type,\n                            this.props.questionTypes.questionTypes\n                          ) !== null &&\n                          findQuestionType(\n                            user_exam_details.questions.find(\n                              (itm) => itm.question_id === item.question\n                            )!.type,\n                            this.props.questionTypes.questionTypes\n                          ) === questionTypeElementsType.Embedded\n                            ? \"\"\n                            : \"Answer: \"}\n                          {this.props.questionTypes.questionTypes !== null &&\n                            user_exam_details.user_answers.find(\n                              (itm) => itm.question === item.question\n                            ) && (\n                              <div className=\"mb-2\">\n                                {findQuestionType(\n                                  user_exam_details.questions.find(\n                                    (itm) => itm.question_id === item.question\n                                  )!.type,\n                                  this.props.questionTypes.questionTypes\n                                ) &&\n                                findQuestionType(\n                                  user_exam_details.questions.find(\n                                    (itm) => itm.question_id === item.question\n                                  )!.type,\n                                  this.props.questionTypes.questionTypes\n                                ) === questionTypeElementsType.Hybrid ? (\n                                  <FindAnswerHybrid\n                                    selectedLanguage={\n                                      item.language as QuestionLanguage\n                                    }\n                                    questionTypes={this.props.questionTypes}\n                                    auth={this.props.auth}\n                                    candidateExam={this.props.candidateExam}\n                                    answersList={[\n                                      {\n                                        question_id: item.question,\n                                        status: true,\n                                        answers: item.answers,\n                                        language:\n                                          item.language as QuestionLanguage,\n                                      },\n                                    ]}\n                                    system={this.props.system}\n                                    setSelectedExamQuestion={() => {}}\n                                    submitQuestionAnswer={false}\n                                    loadQuestionTypes={\n                                      this.props.loadQuestionTypes\n                                    }\n                                    submitExam={() => {}}\n                                    selectedExam={\n                                      user_exam_details === undefined ||\n                                      this.props.course.courses === null\n                                        ? null\n                                        : this.props.course.courses.find(\n                                            (itm) =>\n                                              user_exam_details !== undefined &&\n                                              itm.course_id ===\n                                                user_exam_details.questions.find(\n                                                  (itm) =>\n                                                    itm.question_id ===\n                                                    item.question\n                                                )!.course\n                                          )!\n                                    }\n                                    setSubmitModal={(status: boolean) => {}}\n                                    wholeQuestion={\n                                      user_exam_details.questions.find(\n                                        (itm) =>\n                                          itm.question_id === item.question\n                                      )!\n                                    }\n                                  />\n                                ) : (\n                                  <FindAnswer\n                                    selectedLanguage={item.language}\n                                    question={{\n                                      is_deleted:\n                                        user_exam_details.questions.find(\n                                          (itm) =>\n                                            itm.question_id === item.question\n                                        )!.is_deleted,\n                                      question_id: item.question,\n                                      course: user_exam_details.questions.find(\n                                        (itm) =>\n                                          itm.question_id === item.question\n                                      )!.course,\n                                      question:\n                                        user_exam_details.questions.find(\n                                          (itm) =>\n                                            itm.question_id === item.question\n                                        )!.question,\n                                      type: user_exam_details.questions.find(\n                                        (itm) =>\n                                          itm.question_id === item.question\n                                      )!.type,\n                                      chapters:\n                                        user_exam_details.questions.find(\n                                          (itm) =>\n                                            itm.question_id === item.question\n                                        )!.chapters,\n                                      customNumber:\n                                        user_exam_details.questions.find(\n                                          (itm) =>\n                                            itm.question_id === item.question\n                                        )!.customNumber,\n                                      marks: user_exam_details.questions.find(\n                                        (itm) =>\n                                          itm.question_id === item.question\n                                      )!.marks,\n                                      answers: user_exam_details.questions.find(\n                                        (itm) =>\n                                          itm.question_id === item.question\n                                      )!.answers,\n                                    }}\n                                    answersList={[\n                                      {\n                                        question_id: item.question,\n                                        status: true,\n                                        answers:\n                                          user_exam_details.user_answers.find(\n                                            (itm) =>\n                                              itm.question === item.question\n                                          )!.answers,\n                                        language:\n                                          item.language as QuestionLanguage,\n                                      },\n                                    ]}\n                                    questionTypes={\n                                      this.props.questionTypes.questionTypes\n                                    }\n                                    showCorrectAnswer={this.props.showAnswers}\n                                    onClick={() => {}}\n                                  />\n                                )}\n                              </div>\n                            )}\n                        </div>\n                      </div>\n                    )}\n                </div>\n              </div>\n              <div className=\"col-span-1 flex items-center justify-between\">\n                <div></div>\n\n                <div className=\"w-max flex flex-col items-end justify-center bg-blue-50 rounded-md px-3 py-1 group-hover:bg-blue-100\">\n                  <div className=\"text-sm font-semibold text-gray-700\">\n                    Marks\n                  </div>\n                  <div className=\"text-sm font-extrabold text-gray-900 -mt-1\">\n                    <span className=\"text-blue-500\">\n                      {item.user_marks.toFixed(\n                        user_exam_details &&\n                          item.user_marks ===\n                            user_exam_details.questions.find(\n                              (itm) => itm.question_id === item.question\n                            )?.marks\n                          ? 0\n                          : 2\n                      )}\n                    </span>{\" \"}\n                    /{\" \"}\n                    {user_exam_details &&\n                      user_exam_details.questions.find(\n                        (itm) => itm.question_id === item.question\n                      )?.marks}\n                  </div>\n                </div>\n              </div>\n            </div>\n          ))\n        )}\n        <div className=\"flex flex-row items-center justify-between gap-3 mb-10\">\n          <div className=\"bg-blue-100 p-3 pr-3 text-blue-700 flex flex-col items-start justify-center rounded-lg border-2 border-white\">\n            <span className=\"text-gray-700\">Total marks percentage</span>\n            <span className=\"text-3xl font-extrabold\">\n              {user_exam_details &&\n                user_exam_details.total_marks.toFixed(\n                  user_exam_details.total_marks === 100 ||\n                    user_exam_details.total_marks === 0\n                    ? 0\n                    : 2\n                )}\n              %\n            </span>\n          </div>\n          <div>\n            <div className=\"bg-white rounded-lg p-3\">\n              <div className=\"text-gray-500 font-bold text-base text-right\">\n                Exam total marks\n              </div>\n              {user_exam_details !== undefined && (\n                <div className=\"font-extrabold text-3xl text-gray-900 text-right\">\n                  {this.userAnswersTotalMarks(user_exam_details).toFixed(\n                    this.userAnswersTotalMarks(user_exam_details) ===\n                      user_exam_details.exam_total_marks ||\n                      this.userAnswersTotalMarks(user_exam_details) === 0\n                      ? 0\n                      : 2\n                  )}{\" \"}\n                  / {user_exam_details.exam_total_marks}\n                </div>\n              )}\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = ({\n  auth,\n  candidateExam,\n  candidateApplications,\n  questionTypes,\n  system,\n  course,\n}: StoreState): {\n  auth: Auth;\n  candidateExam: candidateExamStoreInterface;\n  candidateApplications: CandidateApplicationsStoreInterface;\n  questionTypes: questionTypesStoreInterface;\n  system: System;\n  course: courseStoreInterface;\n} => {\n  return {\n    auth: auth,\n    candidateExam: candidateExam,\n    candidateApplications: candidateApplications,\n    questionTypes: questionTypes,\n    system: system,\n    course: course,\n  };\n};\n\nexport const AnswersDetails = connect(mapStateToProps, {\n  FC_GetProfileDetails,\n  LoadCandidateApplications,\n  setSelectedCandidateExam,\n  setSelectedCourse,\n  setSelectedPosition,\n  InitializeExamDetails,\n  loadExamsDone,\n  AddUserApplication,\n  loadApplicationPeriods,\n  requestUserAnswers,\n  loadQuestionTypes,\n  loadCourses,\n})(_AnswersDetails);\n","import axios from \"axios\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport {\n  Auth,\n  getMyClaims,\n  createClaim,\n  GetClaimingTypes,\n  getMyRejectedApplications,\n  getMyRejectedDocuments,\n  PushPopupAlert,\n  DocumentClaimUser,\n  getMyAnswers,\n  getClaimReasons,\n  CandidateApplicationsStoreInterface,\n  candidateExamStoreInterface,\n} from \"../../actions\";\nimport {\n  getDocumentCategory,\n  getDocumentSubCategory,\n  getDocumentFields,\n} from \"../../actions/document\";\nimport ApplicationFormView from \"../../containers/Claimings/Candidate/ApplicationFormView\";\nimport ChooseReason from \"../../containers/Claimings/Candidate/ChooseReason\";\nimport { ClaimGetDocTitle } from \"../../containers/Claimings/Candidate/ClaimForm\";\nimport DocFormView from \"../../containers/Claimings/Candidate/DocFormView\";\nimport FormApplicationList from \"../../containers/Claimings/Candidate/FormApplicationList\";\nimport FormDocumentList from \"../../containers/Claimings/Candidate/FormDocumentList\";\nimport {\n  PlansTypeKeys,\n  CandidateClaimInterface,\n  claimApplicationsInterface,\n  claimReasonInterface,\n} from \"../../interfaces\";\nimport {\n  ApplicationStates,\n  GetApplicationsAPI,\n} from \"../../interfaces/application\";\nimport { ExamAnswerSheetDone } from \"../../interfaces/exam\";\nimport { PopupAlertTheme } from \"../../interfaces/popupAlert\";\nimport { StoreState } from \"../../reducers\";\nimport { ClaimingReducerType } from \"../../reducers/claiming\";\nimport { DocumentReducerInterface } from \"../../reducers/document\";\nimport { capitalizeFirstLetter, isEmptyOrSpaces } from \"../../shared/dataTest\";\nimport { UserInterface } from \"../../shared/interfaces\";\nimport { API } from \"../../utils/api\";\nimport { setAxiosToken } from \"../../utils/AxiosToken\";\nimport { errorToText } from \"../../utils/errors\";\nimport { DATE } from \"../../utils/functions\";\nimport { PopupAlertData } from \"../Alert/Popup\";\nimport Loading from \"../Loading/Loading\";\n\nconst getCourseIdBySheetId = (\n  allData: ExamAnswerSheetDone[],\n  sheet_id: string\n) => {\n  return allData.find((item) => item.answer_sheet_id === sheet_id);\n};\n\ntype ClaimFormProps = {\n  claim_type: PlansTypeKeys;\n  file_id: string;\n  setFormState: (value: boolean, response?: boolean) => void;\n  auth: Auth;\n  claiming: ClaimingReducerType;\n  documentReducer: DocumentReducerInterface;\n  candidateApplications: CandidateApplicationsStoreInterface;\n  candidateExam: candidateExamStoreInterface;\n  createClaim: Function;\n  GetClaimingTypes: Function;\n  getDocumentCategory: Function;\n  getDocumentSubCategory: Function;\n  getDocumentFields: Function;\n  getMyRejectedApplications: Function;\n  getMyRejectedDocuments: Function;\n  getMyClaims: Function;\n  getMyAnswers: Function;\n  getClaimReasons: Function;\n  PushPopupAlert: (alert: PopupAlertData) => void;\n\n  // DEFAULT DATA ==========\n  // candidateDocuments?: DocumentClaimUser[];\n  // candidateAnswers?: ClaimExamResultsDetails[];\n  // candidateApplications?: claimApplicationsInterface[];\n};\n\ntype ClaimFormState = {\n  loading: boolean;\n  loadingForm: boolean;\n  formError: {\n    element: string;\n    msg: string;\n  } | null;\n  thisClaimType: PlansTypeKeys | null;\n  thisClaimTypeId: string;\n  claimComment: string;\n  claimFileId: string;\n  chooseClaimFile: boolean;\n  chooseClaimReason: boolean;\n  claimReason: claimReasonInterface | null;\n  viewThisFile: string;\n  formType: \"DEFAULT\" | \"PROPS\";\n  alertError: string | null;\n};\n\nexport class ClaimFormComponent extends Component<\n  ClaimFormProps,\n  ClaimFormState\n> {\n  constructor(props: ClaimFormProps) {\n    super(props);\n\n    this.state = {\n      loading: true,\n      loadingForm: false,\n      formError: null,\n      thisClaimType: null,\n      thisClaimTypeId: \"\",\n      claimComment: \"\",\n      claimFileId: \"\",\n      chooseClaimFile: false,\n      viewThisFile: \"\",\n      formType: \"DEFAULT\",\n      alertError: null,\n      chooseClaimReason: false,\n      claimReason: null,\n    };\n  }\n\n  // GENERATE SET STATES FUNCTIONS\n  setLoading = (state: boolean) => {\n    this.setState({ loading: state });\n  };\n\n  setLoadingForm = (state: boolean) => {\n    this.setState({ loadingForm: state });\n  };\n\n  setFormError = (\n    data: {\n      element: string;\n      msg: string;\n    } | null\n  ) => {\n    this.setState({ formError: data });\n  };\n\n  setAlertError = (data: string | null) => {\n    this.setState({ alertError: data });\n  };\n\n  setClaimFileId = (data: string) => {\n    this.setState({ claimFileId: data });\n  };\n\n  setViewThisFile = (data: string) => {\n    this.setState({ viewThisFile: data });\n  };\n\n  setChooseClaimFile = (data: boolean) => {\n    this.setState({ chooseClaimFile: data });\n  };\n\n  setClaimComment = (data: string) => {\n    this.setState({ claimComment: data });\n  };\n\n  setChooseClaimReason = (value: boolean) => {\n    this.setState({ chooseClaimReason: value });\n  };\n\n  setClaimReason = (value: claimReasonInterface | null) => {\n    this.setState({ claimReason: value });\n  };\n\n  // CHECK IF PASSED ID IS VALID\n  isDocumentIdValid = (\n    documents: DocumentClaimUser[],\n    doc_id: string\n  ): {\n    status: boolean;\n    msg: string;\n    alert: PopupAlertTheme;\n  } => {\n    let doc = documents.find((item) => item.doc_id === doc_id);\n    if (doc) {\n      // CHECK IF DOCUMENT HAS REJECTED STATUS\n      if (doc.validated_by.validation_status !== \"rejected\") {\n        return {\n          status: false,\n          msg: \"Only rejected document are allowed for claim\",\n          alert: PopupAlertTheme.info,\n        };\n      }\n      return { status: true, msg: \"\", alert: PopupAlertTheme.success };\n    } else {\n      return {\n        status: false,\n        msg: \"Invalid document id\",\n        alert: PopupAlertTheme.warning,\n      };\n    }\n  };\n\n  isApplicationIdValid = (\n    applications: GetApplicationsAPI[],\n    app_id: string\n  ): {\n    status: boolean;\n    msg: string;\n    alert: PopupAlertTheme;\n  } => {\n    const app = applications.find((item) => item.application_id === app_id);\n    if (app) {\n      // CHECK IF DOCUMENT HAS REJECTED STATUS\n      if (app.application_status !== ApplicationStates.Rejected) {\n        return {\n          status: false,\n          msg: \"Only rejected application are allowed for claim\",\n          alert: PopupAlertTheme.info,\n        };\n      }\n      // CHECK IF DOCUMENT HAS ALREADY CLAIMED ON\n      return { status: true, msg: \"\", alert: PopupAlertTheme.info };\n    } else {\n      return {\n        status: false,\n        msg: \"Invalid application id\",\n        alert: PopupAlertTheme.warning,\n      };\n    }\n  };\n\n  isExamIdValid = (\n    exams: ExamAnswerSheetDone[],\n    exam_id: string\n  ): {\n    status: boolean;\n    msg: string;\n    alert: PopupAlertTheme;\n  } => {\n    const exam = exams.find((item) => item.answer_sheet_id === exam_id);\n    if (exam) {\n      // CHECK IF DOCUMENT HAS REJECTED STATUS\n      if (exam.total_marks === 100) {\n        return {\n          status: false,\n          msg: \"You can't claim on exam which you have 100%\",\n          alert: PopupAlertTheme.info,\n        };\n      }\n\n      return { status: true, msg: \"\", alert: PopupAlertTheme.info };\n    } else {\n      return {\n        status: false,\n        msg: \"Invalid answer sheet id\",\n        alert: PopupAlertTheme.warning,\n      };\n    }\n    // return {\n    //   status: false,\n    //   msg: \"No Application, please try again!\",\n    //   alert: PopupAlertTheme.info,\n    // };\n  };\n\n  componentDidMount = () => {\n    if (this.props.auth.application_session === null) {\n      this.props.PushPopupAlert({\n        title: \"No session active session\",\n        theme: PopupAlertTheme.danger,\n      });\n      this.props.setFormState(false);\n      this.setState({\n        claimFileId: \"\",\n        thisClaimType: null,\n        thisClaimTypeId: \"\",\n        claimComment: \"\",\n        chooseClaimFile: false,\n        formType: \"DEFAULT\",\n        viewThisFile: \"\",\n        formError: null,\n      });\n    } else {\n      if (\n        this.props.documentReducer.documentCategory === null &&\n        this.props.claim_type === PlansTypeKeys.DOCUMENT_VALIDATION\n      ) {\n        this.props.getDocumentCategory();\n      }\n      if (\n        this.props.documentReducer.documentSubCategory === null &&\n        this.props.claim_type === PlansTypeKeys.DOCUMENT_VALIDATION\n      ) {\n        this.props.getDocumentSubCategory();\n      }\n      if (\n        this.props.documentReducer.documentFields === null &&\n        this.props.claim_type === PlansTypeKeys.DOCUMENT_VALIDATION\n      ) {\n        this.props.getDocumentFields();\n      }\n      if (\n        this.props.candidateApplications.candidate_applications !== null &&\n        this.props.claim_type === PlansTypeKeys.APPLICATION\n      )\n        this.setLoading(false);\n\n      if (\n        (this.props.claiming.candidateDocuments === null ||\n          this.props.claiming.candidateDocuments.length !==\n            this.props.auth.documents.length) &&\n        this.props.claim_type === PlansTypeKeys.DOCUMENT_VALIDATION\n      ) {\n        this.props.getMyRejectedDocuments(\n          (status: boolean, msg: string, data?: DocumentClaimUser[]) => {\n            this.setLoading(status);\n            if (!status) {\n              if (msg.length > 0) {\n                this.props.PushPopupAlert({\n                  title: msg,\n                  theme: PopupAlertTheme.danger,\n                });\n              }\n              if (data) {\n                // PROPS VALIDATION PROCESS ###############\n                if (\n                  this.props.claim_type &&\n                  this.props.file_id &&\n                  this.state.formType === \"DEFAULT\"\n                ) {\n                  if (\n                    this.props.claim_type === PlansTypeKeys.DOCUMENT_VALIDATION\n                  ) {\n                    let _isDocumentIdValid = this.isDocumentIdValid(\n                      data,\n                      this.props.file_id\n                    );\n                    if (!_isDocumentIdValid.status) {\n                      this.props.PushPopupAlert({\n                        title: _isDocumentIdValid.msg,\n                        theme: _isDocumentIdValid.alert,\n                      });\n                      // setAlertError(_isDocumentIdValid.msg);\n                      this.props.setFormState(false);\n                    } else {\n                      this.setState({\n                        thisClaimType: this.props.claim_type,\n                        claimFileId: this.props.file_id,\n                        formType: \"PROPS\",\n                      });\n                    }\n                  }\n                }\n              }\n            }\n          }\n        );\n      } else this.setLoading(false);\n\n      if (this.props.claim_type === PlansTypeKeys.EXAMINATION)\n        this.setLoading(false);\n\n      if (this.props.claiming.claimReasons === null) {\n        this.props.getClaimReasons((status: boolean, msg: string) => {\n          this.setLoading(status);\n          if (!status) {\n            if (msg.length > 0) {\n              this.props.PushPopupAlert({\n                title: msg,\n                theme: PopupAlertTheme.danger,\n              });\n            }\n          }\n        });\n      }\n\n      if (this.props.claiming.myClaims === null) {\n        this.props.getMyClaims(\n          this.props.auth.user.user_id,\n          this.props.auth.application_session.session_plan_id,\n          (status: boolean, msg: string) => {\n            this.setLoading(status);\n            if (status === false && msg.length) {\n              this.props.PushPopupAlert({\n                title: msg,\n                theme: PopupAlertTheme.danger,\n              });\n            }\n          }\n        );\n      } else this.setLoading(false);\n\n      // PROPS VALIDATION PROCESS ###############\n      if (\n        !isEmptyOrSpaces(this.props.claim_type) &&\n        !isEmptyOrSpaces(this.props.file_id) &&\n        this.state.formType === \"DEFAULT\"\n      ) {\n        this.setState({ thisClaimType: this.props.claim_type });\n        if (\n          this.props.claim_type === PlansTypeKeys.DOCUMENT_VALIDATION &&\n          this.props.claiming.candidateDocuments\n        ) {\n          let _isDocumentIdValid = this.isDocumentIdValid(\n            this.props.claiming.candidateDocuments,\n            this.props.file_id\n          );\n          if (!_isDocumentIdValid.status) {\n            this.props.PushPopupAlert({\n              title: _isDocumentIdValid.msg,\n              theme: _isDocumentIdValid.alert,\n            });\n            // setAlertError(_isDocumentIdValid.msg);\n            this.props.setFormState(false);\n          } else {\n            this.setState({\n              thisClaimType: this.props.claim_type,\n              claimFileId: this.props.file_id,\n              formType: \"PROPS\",\n            });\n          }\n        }\n        if (\n          this.props.claim_type === PlansTypeKeys.APPLICATION &&\n          this.props.candidateApplications.candidate_applications\n        ) {\n          let _isApplicationIdValid = this.isApplicationIdValid(\n            this.props.candidateApplications.candidate_applications,\n            this.props.file_id\n          );\n          if (!_isApplicationIdValid.status) {\n            this.props.PushPopupAlert({\n              title: _isApplicationIdValid.msg,\n              theme: _isApplicationIdValid.alert,\n            });\n            this.props.setFormState(false);\n          } else {\n            this.setState({\n              thisClaimType: this.props.claim_type,\n              claimFileId: this.props.file_id,\n              formType: \"PROPS\",\n            });\n          }\n        }\n\n        if (\n          this.props.claim_type === PlansTypeKeys.EXAMINATION &&\n          this.props.candidateExam.user_exams_done\n        ) {\n          let _isExamIdValid = this.isExamIdValid(\n            this.props.candidateExam.user_exams_done,\n            this.props.file_id\n          );\n          if (!_isExamIdValid.status) {\n            this.props.PushPopupAlert({\n              title: _isExamIdValid.msg,\n              theme: _isExamIdValid.alert,\n            });\n            this.props.setFormState(false);\n          } else {\n            this.setState({\n              thisClaimType: this.props.claim_type,\n              claimFileId: this.props.file_id,\n              formType: \"PROPS\",\n            });\n          }\n        }\n      }\n    }\n  };\n\n  getDocumentById = (\n    documents: DocumentClaimUser[],\n    doc_id: string\n  ): DocumentClaimUser => {\n    return documents.filter((item) => item.doc_id === doc_id)[0];\n  };\n\n  getApplicationById = (\n    applications: GetApplicationsAPI[],\n    application_id: string\n  ): claimApplicationsInterface | undefined => {\n    let result: claimApplicationsInterface | undefined = undefined;\n    let thisApplication = applications.find(\n      (item) => item.application_id === application_id\n    );\n\n    if (thisApplication)\n      result = {\n        application_id: thisApplication.application_id,\n        application_period: thisApplication.application_session.session_plan_id,\n        createdAt: thisApplication.createdAt,\n        exams: thisApplication.exams,\n        position: thisApplication.position,\n        application_status:\n          thisApplication.application_status as ApplicationStates,\n        updatedAt: thisApplication.updatedAt,\n        user_id: thisApplication.user_id,\n        application_history: thisApplication.application_history,\n        application_session: thisApplication.application_session,\n        override_by: {\n          application_status: thisApplication.override_by.application_status,\n          comment: thisApplication.override_by.comment,\n          date: thisApplication.override_by.date,\n          user_id: thisApplication.override_by.user_id,\n        },\n      };\n\n    return result;\n  };\n\n  getValidation = (\n    thisId: string\n  ): {\n    old_reason: string;\n    old_status: string;\n    old_evaluated_by: string;\n  } => {\n    let result: {\n      old_reason: string;\n      old_status: string;\n      old_evaluated_by: string;\n    } = { old_reason: \"\", old_status: \"\", old_evaluated_by: \"\" };\n\n    if (\n      this.state.thisClaimType === PlansTypeKeys.DOCUMENT_VALIDATION &&\n      this.props.claiming.candidateDocuments\n    ) {\n      result = {\n        old_reason: this.getDocumentById(\n          this.props.claiming.candidateDocuments,\n          thisId\n        ).validated_by.comment,\n        old_status: this.getDocumentById(\n          this.props.claiming.candidateDocuments,\n          thisId\n        ).validated_by.validation_status,\n        old_evaluated_by: this.getDocumentById(\n          this.props.claiming.candidateDocuments,\n          thisId\n        ).validated_by.user_id,\n      };\n    } else if (\n      this.state.thisClaimType === PlansTypeKeys.APPLICATION &&\n      this.props.candidateApplications.candidate_applications &&\n      this.getApplicationById(\n        this.props.candidateApplications.candidate_applications,\n        thisId\n      )\n    ) {\n      result = {\n        old_reason: this.getApplicationById(\n          this.props.candidateApplications.candidate_applications,\n          thisId\n        )!.override_by.comment,\n        old_status: this.getApplicationById(\n          this.props.candidateApplications.candidate_applications,\n          thisId\n        )!.override_by.application_status,\n        old_evaluated_by: this.getApplicationById(\n          this.props.candidateApplications.candidate_applications,\n          thisId\n        )!.override_by.user_id,\n      };\n    }\n\n    return result;\n  };\n\n  loadUserById = async (user_id: string, callback: Function) => {\n    if (isEmptyOrSpaces(user_id)) {\n      return this.props.PushPopupAlert({\n        title: \"No user id provided\",\n        theme: PopupAlertTheme.danger,\n      });\n    }\n    try {\n      setAxiosToken();\n      const res = await axios.get<UserInterface>(\n        `${API.AUTH}/users/${user_id}`\n      );\n      console.log(\"====================================\");\n      console.log({ loadUserById: res });\n      console.log(\"====================================\");\n      if (res) {\n        callback(res.data);\n      }\n    } catch (error) {\n      console.error({ error });\n      this.props.PushPopupAlert({\n        title: errorToText(error),\n        theme: PopupAlertTheme.danger,\n      });\n    }\n  };\n\n  getClaimTitle = (claimType: PlansTypeKeys): string => {\n    let result: string = \"\";\n    // title from document\n    if (\n      claimType === PlansTypeKeys.DOCUMENT_VALIDATION &&\n      this.props.claiming.candidateDocuments\n    ) {\n      result = ClaimGetDocTitle(\n        this.props.documentReducer,\n        this.getDocumentById(\n          this.props.claiming.candidateDocuments,\n          this.state.claimFileId\n        )\n      ).main;\n    }\n    // title from application\n    if (\n      claimType === PlansTypeKeys.APPLICATION &&\n      this.props.candidateApplications.candidate_applications &&\n      this.getApplicationById(\n        this.props.candidateApplications.candidate_applications,\n        this.state.claimFileId\n      )\n    ) {\n      result = this.getApplicationById(\n        this.props.candidateApplications.candidate_applications,\n        this.state.claimFileId\n      )!.position.position_title;\n    }\n    // title from examination\n    if (\n      claimType === PlansTypeKeys.EXAMINATION &&\n      getCourseIdBySheetId(\n        this.props.candidateExam.user_exams_done,\n        this.state.claimFileId\n      )\n    ) {\n      result = getCourseIdBySheetId(\n        this.props.candidateExam.user_exams_done,\n        this.state.claimFileId\n      )!.course;\n    }\n    // if (\n    //   claimType === PlansTypeKeys.PLACEMENT_TRANSFER &&\n    //   this.state.myPlacement\n    // ) {\n    //   result = \"Placed on \" + this.state.myPlacement.placed.school.school_name;\n    // }\n\n    return result;\n  };\n\n  cleanToClose = () => {\n    this.props.setFormState(false);\n    this.setState({\n      claimFileId: \"\",\n      thisClaimType: null,\n      thisClaimTypeId: \"\",\n      claimComment: \"\",\n      chooseClaimFile: false,\n      formType: \"DEFAULT\",\n      viewThisFile: \"\",\n      formError: null,\n    });\n  };\n\n  handleSubmit = async (e: React.FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n    if (!this.state.thisClaimType) {\n      return this.setFormError({\n        element: \"claim_type\",\n        msg: \"Claim type is required!\",\n      });\n    }\n    if (isEmptyOrSpaces(this.state.claimFileId)) {\n      return this.setFormError({\n        element: \"claim_file\",\n        msg: `Please select ${this.state.thisClaimType.toLocaleLowerCase()} you are claiming on!`,\n      });\n    }\n\n    if (!this.state.claimReason) {\n      return this.setFormError({\n        element: \"claim_reason\",\n        msg: `Please select the reason of your claim!`,\n      });\n    }\n\n    if (isEmptyOrSpaces(this.state.claimComment)) {\n      return this.setFormError({\n        element: \"claim_comment\",\n        msg: `Claim comment is required!`,\n      });\n    }\n\n    if (!this.props.auth.application_session) {\n      return this.setAlertError(`No active claiming session is available!`);\n    }\n    let old_evaluator_email: string = \"info@system.com\";\n    let old_evaluator_name: string = \"System\";\n    let evaluator_email: string = \"\";\n    let evaluator_name: string = \"\";\n    let title: string = this.getClaimTitle(this.state.thisClaimType);\n\n    if (\n      this.state.thisClaimType !== PlansTypeKeys.EXAMINATION &&\n      this.getValidation(this.state.claimFileId).old_evaluated_by !== \"system\"\n    ) {\n      await this.loadUserById(\n        this.getValidation(this.state.claimFileId).old_evaluated_by,\n        (data: UserInterface) => {\n          old_evaluator_email = data.email;\n          old_evaluator_name =\n            data.user_info.fname + \" \" + data.user_info.lname;\n        }\n      );\n    }\n    this.setLoadingForm(true);\n    try {\n      setAxiosToken();\n      const res = await axios.post<CandidateClaimInterface>(\n        `${API.CLAIMING}/user/create`,\n        {\n          claiming_on_id: this.state.claimFileId,\n          type_key: this.state.thisClaimType,\n          user: this.props.auth.user.user_id,\n          period_id: this.props.auth.application_session.session_plan_id,\n          default_claim_resaons: this.state.claimReason.id,\n          reason: this.state.claimComment,\n          // old_reason: this.getValidation(this.state.claimFileId).old_reason,\n          // old_status: this.getValidation(this.state.claimFileId).old_status,\n          // old_evaluated_by: this.getValidation(this.state.claimFileId)\n          //   .old_evaluated_by,\n          old_reason:\n            this.state.thisClaimType === PlansTypeKeys.EXAMINATION ||\n            this.state.thisClaimType === PlansTypeKeys.PLACEMENT_TRANSFER\n              ? \"System\"\n              : this.getValidation(this.state.claimFileId).old_reason,\n          old_status:\n            this.state.thisClaimType === PlansTypeKeys.EXAMINATION ||\n            this.state.thisClaimType === PlansTypeKeys.PLACEMENT_TRANSFER\n              ? \"Failed\"\n              : this.getValidation(this.state.claimFileId).old_status,\n          old_evaluated_by:\n            this.state.thisClaimType === PlansTypeKeys.EXAMINATION ||\n            this.state.thisClaimType === PlansTypeKeys.PLACEMENT_TRANSFER\n              ? \"\"\n              : this.getValidation(this.state.claimFileId).old_evaluated_by,\n          old_evaluator_email,\n          old_evaluator_name,\n          evaluator_email,\n          evaluator_name,\n          title,\n        }\n      );\n      console.log(\"====================================\");\n      console.log({ createClaim: res.data });\n      console.log(\"====================================\");\n      if (res.status === 201 || res.status === 200) {\n        this.props.createClaim(res.data);\n        this.props.PushPopupAlert({\n          title: \"Claim sent successful\",\n          theme: PopupAlertTheme.success,\n        });\n        this.cleanToClose();\n        this.props.setFormState(false);\n      }\n    } catch (error) {\n      console.error({ error });\n      this.props.PushPopupAlert({\n        title: errorToText(error),\n        theme: PopupAlertTheme.danger,\n      });\n    }\n    this.props.setFormState(false);\n    this.setLoadingForm(false);\n  };\n\n  displayClaimType = (claimType: PlansTypeKeys): string => {\n    let result: string = \"\";\n    switch (claimType) {\n      case PlansTypeKeys.APPLICATION:\n        result = \"application\";\n        break;\n      case PlansTypeKeys.DOCUMENT_VALIDATION:\n        result = \"document\";\n        break;\n      case PlansTypeKeys.EXAMINATION:\n        result = \"exam\";\n        break;\n      case PlansTypeKeys.MARKS_PUBLICATION:\n        result = \"marks publication\";\n        break;\n      case PlansTypeKeys.PLACEMENT_TRANSFER:\n        result = \"placement\";\n        break;\n      default:\n        result = \"\";\n        break;\n    }\n\n    return result;\n  };\n\n  selectClaimType = (thisClaim: string) => {\n    this.setState({\n      thisClaimType: isEmptyOrSpaces(thisClaim)\n        ? null\n        : (thisClaim as PlansTypeKeys),\n    });\n  };\n\n  generateChooseFileTitle = (thisClaimType: PlansTypeKeys | null): string => {\n    let result: string = \"\";\n\n    switch (thisClaimType) {\n      case PlansTypeKeys.APPLICATION:\n        result = `Select application you are claiming on?`;\n        break;\n      case PlansTypeKeys.DOCUMENT_VALIDATION:\n        result = `Select document you are claiming on?`;\n        break;\n      case PlansTypeKeys.EXAMINATION:\n        result = `Select exam you are claiming on?`;\n        break;\n      case PlansTypeKeys.MARKS_PUBLICATION:\n        result = `Select marks publication you are claiming on?`;\n        break;\n      case PlansTypeKeys.PLACEMENT_TRANSFER:\n        result = `Select placement you are claiming on?`;\n        break;\n      default:\n        result = \"Select file you are claiming on?\";\n        break;\n    }\n\n    return result;\n  };\n\n  getClaimById = (\n    myClaims: CandidateClaimInterface[],\n    fileId: string,\n    sessionId: string\n  ): CandidateClaimInterface | undefined => {\n    return myClaims.find(\n      (item) => item.claiming_on_id === fileId && item.period_id === sessionId\n    );\n  };\n\n  render() {\n    // CHECK IF STILL LOADING DATA ===============\n    if (\n      this.props.auth.application_session !== null &&\n      (this.state.loading ||\n        (this.props.claiming.myClaims === null &&\n          !isEmptyOrSpaces(this.props.file_id) &&\n          !isEmptyOrSpaces(this.props.claim_type)))\n    ) {\n      return <Loading />;\n    }\n\n    if (\n      this.props.claiming.myClaims &&\n      this.props.auth.application_session &&\n      this.getClaimById(\n        this.props.claiming.myClaims,\n        this.props.file_id,\n        this.props.auth.application_session.session_plan_id\n      ) !== undefined\n    ) {\n      return (\n        <div>\n          <h2 className=\"text-center text-2xl font-bold p-3 text-gray-500\">\n            Claims on this {this.displayClaimType(this.props.claim_type!)}\n          </h2>\n          {this.getClaimById(\n            this.props.claiming.myClaims,\n            this.props.file_id,\n            this.props.auth.application_session.session_plan_id\n          )!.claims.length >= 1 ? (\n            <div>\n              {this.getClaimById(\n                this.props.claiming.myClaims,\n                this.props.file_id,\n                this.props.auth.application_session.session_plan_id\n              )!.claims.map((itm) => (\n                <div className=\"p-2 border rounded mb-2\">\n                  <div className=\"p-1 border-b\">\n                    <span className=\"text-gray-400\">Created date:</span>{\" \"}\n                    <b>{DATE(itm.createdAt)}</b>\n                  </div>\n                  <div className=\"p-1 border-b\">\n                    <span className=\"text-gray-400\">Reason:</span>{\" \"}\n                    <p>{itm.reason}</p>\n                  </div>\n                  <div className=\"p-1 border-b\">\n                    <span className=\"text-gray-400\">Evaluation comment:</span>{\" \"}\n                    <p>{itm.evaluation_comment}</p>\n                  </div>\n                  <div className=\"p-1\">\n                    <span className=\"text-gray-400 block\">decision:</span>{\" \"}\n                    <h3 className=\"text-xl font-bold\">\n                      {itm.decision_taken_status}\n                    </h3>\n                  </div>\n                </div>\n              ))}\n            </div>\n          ) : (\n            <div>No claims found!</div>\n          )}\n        </div>\n      );\n    }\n\n    return (\n      <div className=\"pb-3\">\n        {/* CLAIM FORM ============================================== */}\n        {this.state.viewThisFile.length <= 0 && (\n          <form onSubmit={(e) => this.handleSubmit(e)}>\n            <div className=\"px-6 pb-3\">\n              {this.state.alertError && (\n                <div\n                  className=\"alert-warning cursor-pointer\"\n                  onClick={() => this.setAlertError(null)}\n                >\n                  {this.state.alertError}\n                </div>\n              )}\n              <div className=\"text-base text-gray-700 sm:text-lg\">\n                {/* SELECT CLAIM TYPE ============================================== */}\n                <div className=\"flex flex-col mb-2\">\n                  <label>Claim type</label>\n                  <select\n                    className={`rounded px-2 py-2 w-full bg-white focus:outline-none ${\n                      this.state.formType === \"PROPS\" && \"cursor-not-allowed\"\n                    } ${\n                      this.state.formError &&\n                      this.state.formError.element === \"claim_type\"\n                        ? \"border-red-500\"\n                        : \"border-gray-500\"\n                    } border-2`}\n                    onChange={(e: React.ChangeEvent<HTMLSelectElement>) => {\n                      this.selectClaimType(e.target.value);\n                      this.setClaimFileId(\"\");\n                      this.state.formError &&\n                        this.state.formError.element === \"claim_type\" &&\n                        this.setFormError(null);\n                    }}\n                    value={\n                      this.state.thisClaimType ? this.state.thisClaimType : \"\"\n                    }\n                    disabled={\n                      this.state.loadingForm || this.state.formType === \"PROPS\"\n                    }\n                  >\n                    <option value=\"\">Choose claim type</option>\n                    {Object.values(PlansTypeKeys).map((item, index) => (\n                      <option value={item} key={index + item}>\n                        {capitalizeFirstLetter(\n                          item.toLocaleLowerCase().replace(/_/g, \" \")\n                        )}\n                      </option>\n                    ))}\n                  </select>\n                  {this.state.formError &&\n                    this.state.formError.element === \"claim_type\" && (\n                      <span className=\"text-red-500\">\n                        {this.state.formError.msg}\n                      </span>\n                    )}\n                </div>\n                {/* END SELECT CLAIM TYPE ============================================== */}\n\n                {/* SELECT FILE TO CLAIM ON ============================================== */}\n                <div className=\"flex flex-col mb-2\">\n                  <label>\n                    {this.generateChooseFileTitle(this.state.thisClaimType)}\n                  </label>\n                  <div\n                    className={`text-left bg-white border-2 ${\n                      this.state.formType !== \"PROPS\"\n                        ? \"border-gray-700\"\n                        : \"border-gray-400 text-gray-500\"\n                    } rounded w-full ${\n                      this.state.chooseClaimFile ? \"h-64\" : \"h-10\"\n                    } ${\n                      this.state.formError &&\n                      this.state.formError.element === \"claim_file\"\n                        ? \"border-red-500\"\n                        : \"\"\n                    } border-2 ${\n                      this.state.thisClaimType &&\n                      !this.state.chooseClaimFile &&\n                      this.state.formType !== \"PROPS\"\n                        ? \"cursor-pointer\"\n                        : !this.state.chooseClaimFile && \"cursor-not-allowed\"\n                    }`}\n                    title={\n                      !this.state.thisClaimType\n                        ? \"Choose claim type first!\"\n                        : \"\"\n                    }\n                    onClick={() => {\n                      this.state.formType === \"DEFAULT\" &&\n                        this.state.thisClaimType &&\n                        !this.state.chooseClaimFile &&\n                        this.setChooseClaimFile(true);\n                      this.state.formError &&\n                        this.state.formError.element === \"claim_file\" &&\n                        this.setFormError(null);\n                    }}\n                  >\n                    {/* DISPLAYING FILTERED SELECTING FILE ============================ */}\n                    {this.state.claimFileId.length > 0 &&\n                    !this.state.chooseClaimFile ? (\n                      <p className=\"my-1 mx-2\">\n                        {this.state.thisClaimType ===\n                          PlansTypeKeys.DOCUMENT_VALIDATION &&\n                          this.props.claiming.candidateDocuments &&\n                          ClaimGetDocTitle(\n                            this.props.documentReducer,\n                            this.getDocumentById(\n                              this.props.claiming.candidateDocuments,\n                              this.state.claimFileId\n                            )\n                          ).main}\n                        {this.state.thisClaimType ===\n                          PlansTypeKeys.APPLICATION &&\n                          this.props.candidateApplications\n                            .candidate_applications &&\n                          this.getApplicationById(\n                            this.props.candidateApplications\n                              .candidate_applications,\n                            this.state.claimFileId\n                          ) &&\n                          this.getApplicationById(\n                            this.props.candidateApplications\n                              .candidate_applications,\n                            this.state.claimFileId\n                          )!.position.position_title}\n                      </p>\n                    ) : (\n                      !this.state.chooseClaimFile && (\n                        <p className=\"my-1 mx-2\">\n                          Select Claim{\" \"}\n                          {this.state.thisClaimType &&\n                            this.state.thisClaimType\n                              .toLocaleLowerCase()\n                              .replace(/_/g, \" \")}\n                        </p>\n                      )\n                    )}\n                    {/* END DISPLAYING FILTERED SELECTING FILE ============================ */}\n\n                    {/* LISTING OF REJECTED DOCUMENTS ============================ */}\n                    {this.state.chooseClaimFile &&\n                      this.state.thisClaimType ===\n                        PlansTypeKeys.DOCUMENT_VALIDATION &&\n                      this.props.claiming.candidateDocuments &&\n                      this.props.claiming.myClaims &&\n                      this.props.auth.application_session && (\n                        <FormDocumentList\n                          setChooseClaimFile={this.setChooseClaimFile}\n                          setClaimFileId={this.setClaimFileId}\n                          setViewThisFile={this.setViewThisFile}\n                          claimFileId={this.state.claimFileId}\n                          viewThisFile={this.state.viewThisFile}\n                          candidateDocuments={\n                            this.props.claiming.candidateDocuments\n                          }\n                          documentCategories={this.props.documentReducer}\n                          myClaims={this.props.claiming.myClaims}\n                          activeSession={this.props.auth.application_session}\n                        />\n                      )}\n                    {/* END LISTING OF REJECTED DOCUMENTS ============================ */}\n                    {/* LISTING OF REJECTED APPLICATION ============================ */}\n                    {this.state.chooseClaimFile &&\n                      this.state.thisClaimType === PlansTypeKeys.APPLICATION &&\n                      this.props.claiming.candidateApplications &&\n                      this.props.claiming.myClaims &&\n                      this.props.auth.application_session && (\n                        <FormApplicationList\n                          setChooseClaimFile={this.setChooseClaimFile}\n                          setClaimFileId={this.setClaimFileId}\n                          setViewThisFile={this.setViewThisFile}\n                          claimFileId={this.state.claimFileId}\n                          viewThisFile={this.state.viewThisFile}\n                          candidateApplications={\n                            this.props.claiming.candidateApplications\n                          }\n                          myClaims={this.props.claiming.myClaims}\n                          activeSession={this.props.auth.application_session}\n                        />\n                      )}\n                    {/* END LISTING OF REJECTED APPLICATION ============================ */}\n                  </div>\n                  {this.state.formError &&\n                    this.state.formError.element === \"claim_file\" && (\n                      <span className=\"text-red-500\">\n                        {this.state.formError.msg}\n                      </span>\n                    )}\n                </div>\n                {/* END SELECT FILE TO CLAIM ON ============================================== */}\n\n                {/* CLAIM REASONS ========================================== */}\n                <div className=\"flex flex-col mb-2\">\n                  <label>Choose reason of your claim</label>\n                  <div\n                    className={`text-left bg-white border-2 border-gray-700 rounded w-full ${\n                      this.state.chooseClaimReason ? \"h-64\" : \"h-auto\"\n                    } ${\n                      this.state.formError &&\n                      this.state.formError.element === \"claim_reason\"\n                        ? \"border-red-500\"\n                        : \"\"\n                    } border-2 ${\n                      this.props.claiming.claimReasons === null\n                        ? \"cursor-wait\"\n                        : \"cursor-pointer\"\n                    }`}\n                    title=\"Choose the reason for your claim!\"\n                    onClick={() => {\n                      !this.state.chooseClaimReason &&\n                        this.setState({ chooseClaimReason: true });\n                      this.state.formError &&\n                        this.state.formError.element === \"claim_reason\" &&\n                        this.setFormError(null);\n                    }}\n                  >\n                    {/* DISPLAYING SELECTED REASON ============================ */}\n                    {this.state.claimReason && !this.state.chooseClaimReason ? (\n                      <p className=\"my-1 mx-2\">\n                        {this.state.claimReason.reason}\n                      </p>\n                    ) : (\n                      !this.state.chooseClaimReason && (\n                        <p className=\"my-1 mx-2\">Select reason</p>\n                      )\n                    )}\n                    {/* END DISPLAYING SELECTED REASON ============================ */}\n\n                    {/* LISTING OF CLAIM REASONS ============================ */}\n                    {this.state.chooseClaimReason &&\n                      this.props.claiming.claimReasons && (\n                        <ChooseReason\n                          setChooseClaimReason={this.setChooseClaimReason}\n                          setClaimReason={this.setClaimReason}\n                          claimReason={this.state.claimReason}\n                          allClaimReasons={this.props.claiming.claimReasons}\n                        />\n                      )}\n                    {/* END LISTING OF CLAIM REASONS ============================ */}\n                  </div>\n                  {this.state.formError &&\n                    this.state.formError.element === \"claim_reason\" && (\n                      <span className=\"text-red-500\">\n                        {this.state.formError.msg}\n                      </span>\n                    )}\n                </div>\n                {/* END CLAIM REASONS ========================================== */}\n\n                {/* CLAIM COMMENT ============================================== */}\n                <div className=\"flex flex-col\">\n                  <label>Comment</label>\n                  <textarea\n                    className={`text-left input-white w-20 inline-block ${\n                      this.state.formError &&\n                      this.state.formError.element === \"claim_comment\"\n                        ? \"border-red-500\"\n                        : \"border-gray-500\"\n                    } border-2`}\n                    placeholder={`Claim comment`}\n                    style={{ resize: \"none\" }}\n                    value={this.state.claimComment}\n                    onChange={(e) => {\n                      this.setClaimComment(e.target.value);\n                      this.state.formError &&\n                        this.state.formError.element === \"claim_comment\" &&\n                        this.setFormError(null);\n                    }}\n                    rows={3}\n                    disabled={this.state.loadingForm}\n                  ></textarea>\n                  {this.state.formError &&\n                    this.state.formError.element === \"claim_comment\" && (\n                      <span className=\"text-red-500\">\n                        {this.state.formError.msg}\n                      </span>\n                    )}\n                </div>\n                {/* END CLAIM COMMENT ============================================== */}\n              </div>\n              <div className=\"pt-3 flex justify-between\">\n                <button\n                  onClick={() => this.cleanToClose()}\n                  className={`btn bg-gray-400 text-white hover:bg-gray-600 focus:outline-none ${\n                    this.state.loadingForm && \"cursor-not-allowed\"\n                  }`}\n                  type=\"button\"\n                  disabled={this.state.loadingForm}\n                >\n                  Exit\n                </button>\n                <button\n                  className={`btn bg-primary text-white hover:bg-blue-600 focus:outline-none ${\n                    this.state.loadingForm && \"cursor-wait\"\n                  }`}\n                  type=\"submit\"\n                  disabled={this.state.loadingForm}\n                >\n                  {this.state.loadingForm ? \"Loading...\" : \"Claim\"}\n                </button>\n              </div>\n            </div>\n          </form>\n        )}\n        {/* END CLAIM FORM ============================================== */}\n\n        {/* CLAIM DOCUMENT VIEW ============================================== */}\n        {this.state.viewThisFile.length > 0 &&\n          this.props.claiming.candidateDocuments &&\n          this.state.thisClaimType === PlansTypeKeys.DOCUMENT_VALIDATION && (\n            <DocFormView\n              thisDoc={this.getDocumentById(\n                this.props.claiming.candidateDocuments,\n                this.state.viewThisFile\n              )}\n              setViewThisFile={this.setViewThisFile}\n              documentCategories={this.props.documentReducer}\n              setChooseClaimFile={this.setChooseClaimFile}\n              setClaimFileId={this.setClaimFileId}\n            />\n          )}\n        {/* END CLAIM DOCUMENT VIEW ============================================== */}\n        {/* CLAIM APPLICATION VIEW ============================================== */}\n        {this.state.viewThisFile.length > 0 &&\n          this.props.candidateApplications.candidate_applications &&\n          this.getApplicationById(\n            this.props.candidateApplications.candidate_applications,\n            this.state.viewThisFile\n          ) &&\n          this.state.thisClaimType === PlansTypeKeys.APPLICATION && (\n            <ApplicationFormView\n              thisApplication={\n                this.getApplicationById(\n                  this.props.candidateApplications.candidate_applications,\n                  this.state.viewThisFile\n                )!\n              }\n              documentCategories={this.props.documentReducer}\n              setChooseClaimFile={this.setChooseClaimFile}\n              setClaimFileId={this.setClaimFileId}\n              setViewThisFile={this.setViewThisFile}\n            />\n          )}\n        {/* END CLAIM APPLICATION VIEW ============================================== */}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = ({\n  auth,\n  document,\n  claiming,\n  candidateApplications,\n  candidateExam,\n}: StoreState): {\n  auth: Auth;\n  documentReducer: DocumentReducerInterface;\n  claiming: ClaimingReducerType;\n  candidateApplications: CandidateApplicationsStoreInterface;\n  candidateExam: candidateExamStoreInterface;\n} => {\n  return {\n    auth: auth,\n    documentReducer: document,\n    claiming,\n    candidateApplications: candidateApplications,\n    candidateExam: candidateExam,\n  };\n};\n\nexport default connect(mapStateToProps, {\n  getMyClaims,\n  getMyAnswers,\n  getClaimReasons,\n  createClaim,\n  GetClaimingTypes,\n  getMyRejectedApplications,\n  getMyRejectedDocuments,\n  getDocumentCategory,\n  getDocumentSubCategory,\n  getDocumentFields,\n  PushPopupAlert,\n})(ClaimFormComponent);\n","import React, { Component, Fragment, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { BiArrowBack } from \"react-icons/bi\";\nimport { BsFillFileEarmarkTextFill } from \"react-icons/bs\";\nimport axios from \"axios\";\nimport { API } from \"../../utils/api\";\nimport { errorToText } from \"../../utils/errors\";\nimport { setAxiosToken } from \"../../utils/AxiosToken\";\nimport { connect } from \"react-redux\";\nimport moment from \"moment-timezone\";\nimport { TimeZone } from \"../../utils/app.config\";\nimport { Redirect } from \"react-router-dom\";\nimport {\n  Auth,\n  CandidateApplicationsStoreInterface,\n  candidateExamStoreInterface,\n  FC_Access,\n  FC_GetProfileDetails,\n  LoadCandidateApplications,\n  setSelectedCandidateExam,\n  setSelectedCourse,\n  setSelectedPosition,\n  InitializeExamDetails,\n  loadExamsDone,\n  AddUserApplication,\n  loadApplicationPeriods,\n  applicationPeriodsStoreInterface,\n  InitialExamDetails,\n} from \"../../actions\";\nimport { StoreState } from \"../../reducers\";\nimport { UserExamStatus, UserExamsListInterface } from \"../../interfaces/exam\";\nimport Loading from \"../../components/Loading/Loading\";\nimport { DATE, getMinutesFromTwoDates } from \"../../utils/functions\";\nimport { CountDown } from \"../../components/CountDown/CountDown\";\nimport { ExamTimeStatus, validateExamDate } from \"../../utils/question_bank\";\nimport { course, PositionAPI, PositionAPICourse } from \"../../interfaces\";\nimport {\n  ApplicationPeriodGet,\n  ApplicationStates,\n  GetApplicationsAPI,\n} from \"../../interfaces/application\";\nimport { UserAccessList } from \"../../utils/auth_access\";\nimport { MdClose } from \"react-icons/md\";\nimport ChooseExamCenter, {\n  LocationTableInterface,\n} from \"../Application/ExamCenter/ChooseExamCenter\";\nimport { sentExamInterface } from \"../Application/ExamCenter/ExamCenter\";\nimport Modal, { ModalSize, Themes } from \"../../components/Modal/Modal\";\nimport CandidateAnswersDetails from \"../../components/AnswersDetails/CandidateAnswersDetails\";\nimport { RoomType } from \"../../interfaces/location\";\n\nexport const compareWithToday = (tooday: moment.Moment, date: string) => {\n  const myDate = DATE(date, \"MM/DD/YYYY\");\n  let todayConverted =\n    (tooday.get(\"month\") < 9 ? \"0\" : \"\") +\n    (tooday.get(\"month\") + 1).toString() +\n    \"/\" +\n    tooday.get(\"date\") +\n    \"/\" +\n    tooday.get(\"year\");\n  if (new Date(myDate).getTime() < new Date(todayConverted).getTime()) {\n    return true;\n  }\n  return false;\n};\n\nexport interface ExamDoneDetailsAnswers {\n  exam_id: string;\n  course: string;\n  course_name: string;\n  discription: string;\n  termes: string;\n  rules: {\n    right_click_enabled: boolean;\n    copy_enabled: boolean;\n    paste_enabled: boolean;\n    stop_candidate_when_comeback: boolean;\n    allow_to_leave_browser: boolean;\n  };\n  period: string;\n  exam_date: string;\n}\n\ninterface NotPreparedExam {\n  course: string;\n  course_name: string;\n  course_code: string;\n  position: string;\n}\ninterface changeLocProps {\n  changeLocation: () => void;\n}\ninterface CandidateExamsProps {\n  FC_GetProfileDetails: Function;\n  auth: Auth;\n  candidateExam: candidateExamStoreInterface;\n  candidateApplications: CandidateApplicationsStoreInterface;\n  LoadCandidateApplications: (\n    user_id: string,\n    callback: (loading: boolean) => void\n  ) => void;\n  setSelectedCandidateExam: (selected_exam: InitialExamDetails | null) => void; // Not used\n  setSelectedCourse: (course: course | null) => void;\n  setSelectedPosition: (position: PositionAPI) => void;\n  InitializeExamDetails: (\n    periodId: string,\n    courseId: string,\n    district_id: string,\n    center_id: string,\n    room_id: string,\n    position: PositionAPI,\n    start_exam: boolean,\n    callback: (loading: boolean) => void\n  ) => void;\n  loadExamsDone: (\n    periodId: string,\n    userId: string,\n    callback: (loading: boolean) => void\n  ) => void;\n  AddUserApplication: (application: GetApplicationsAPI) => void;\n  periods: applicationPeriodsStoreInterface;\n  loadApplicationPeriods: (callback: (loading: boolean) => void) => void;\n}\n\nconst ChangeLocationComponent = (props: changeLocProps): JSX.Element => {\n  const [display, setDisplay] = useState<boolean>(true);\n  if (display === false) {\n    return <div></div>;\n  }\n  return (\n    <div className=\"absolute right-2 left-2 md:right-1/4 md:left-1/4 lg:left-1/2 lg:right-auto bg-yellow-50 shadow-xl rounded py-1 px-1 flex flex-row justify-between items-center gap-2 text-yellow-800 -mt-5 lg:-mt-8\">\n      <div className=\"flex flex-row gap-2 items-center justify-between w-full pl-1\">\n        <span className=\"font-bold\">You are advised to change location</span>\n        <div\n          onClick={props.changeLocation}\n          className=\"px-2 py-1 rounded bg-blue-100 text-blue-600 w-max cursor-pointer\"\n        >\n          Change\n        </div>\n      </div>\n      <div\n        onClick={() => setDisplay(false)}\n        className=\"bg-yellow-100 text-yellow-600 rounded-full flex items-center justify-center p-1 h-8 w-8 cursor-pointer\"\n      >\n        <MdClose className=\"text-4xl\" />\n      </div>\n    </div>\n  );\n};\n\ninterface candidatePendingExamsList {\n  preparedExam: UserExamsListInterface[];\n  notPreparedExam: NotPreparedExam[];\n}\ninterface CandidateExamsState {\n  loading: boolean;\n  loadingExamsDone: boolean;\n  candidateExams: candidatePendingExamsList | null;\n  activeExams: string[];\n  candidateApplications: GetApplicationsAPI[] | null;\n  selectedCourse: course | null;\n  centersModal: boolean;\n  maxExamModal: boolean;\n  selectedPosition: string;\n  successMessage: string;\n  selectedExam: ExamDoneDetailsAnswers | null;\n  doing_exam: boolean;\n}\n\nexport class _CandidateExams extends Component<\n  CandidateExamsProps,\n  CandidateExamsState\n> {\n  constructor(props: CandidateExamsProps) {\n    super(props);\n\n    this.state = {\n      loading: false,\n      loadingExamsDone: false,\n      candidateExams: null,\n      activeExams: [],\n      candidateApplications: null,\n      selectedCourse: null,\n      centersModal: false,\n      maxExamModal: false,\n      selectedPosition: \"\",\n      successMessage: \"\",\n      selectedExam: null,\n      doing_exam: false,\n    };\n  }\n  setLoading = (status: boolean) => {\n    this.setState({ loading: status });\n  };\n  setloadingExamsDone = (status: boolean) => {\n    this.setState({ loadingExamsDone: status });\n  };\n  loadCandidateExams = async (user: string, period: string) => {\n    this.setLoading(true);\n    setAxiosToken();\n    try {\n      const res = await axios.get<candidatePendingExamsList>(\n        `${API.QBank}/exam/user/${user}/${period}`\n      );\n      this.setState({ candidateExams: res.data });\n      // console.log(\"My exams list: \", res.data);\n    } catch (error: any) {\n      console.log(\"My exams error: \", { ...error });\n      alert(errorToText(error));\n    }\n    this.setLoading(false);\n  };\n  loadUserProfileDetails = () => {\n    this.setLoading(true);\n    this.props.FC_GetProfileDetails(\n      this.props.auth.user.user_id,\n      (status: boolean, msg: string) => {\n        if (status === true) {\n          this.setLoading(false);\n        } else {\n          this.setLoading(true);\n        }\n      }\n    );\n  };\n\n  InitializationFn = (\n    application: GetApplicationsAPI,\n    item: UserExamsListInterface\n  ) => {\n    for (let course of application.position.courses) {\n      let testDone = this.props.candidateExam.user_exams_temp.find(\n        (itm) => itm.course === course.course_id\n      );\n      if (testDone === undefined) {\n        let center_id = application.exams.find(\n          (itm) => itm.course_id === course.course_id\n        );\n        if (center_id !== undefined) {\n          if (\n            application.application_status === ApplicationStates.Shortlisted\n          ) {\n            // Select exam\n            this.props.setSelectedPosition(application.position);\n            this.props.setSelectedCourse(\n              application.position.courses.find(\n                (itm) => itm.course_id === item.course\n              )!\n            );\n            this.setState({ doing_exam: true });\n            return (\n              this.props.periods.selected_period &&\n              this.props.InitializeExamDetails(\n                application.application_session.session_plan_id,\n                course.course_id,\n                center_id.district_id,\n                center_id.center_id,\n                center_id.room_id,\n                application.position,\n                true,\n                this.setLoading\n              )\n            );\n          } else {\n            alert(\"Corresponding application is not shortlisted!\");\n          }\n        }\n      }\n    }\n  };\n  loadUserApplications = async () => {\n    this.props.LoadCandidateApplications(\n      this.props.auth.user.user_id,\n      this.setLoading\n    );\n  };\n  findLocation = (position_id: string, course_id: string) => {\n    if (this.props.candidateApplications.candidate_applications !== null) {\n      const test = this.props.candidateApplications.candidate_applications.find(\n        (item) =>\n          item.position.position_id === position_id &&\n          item.exams.filter((itm) => itm.course_id === course_id) &&\n          item.application_session.session_plan_id ===\n            this.props.auth.application_session?.session_plan_id\n      );\n      if (test !== undefined) {\n        let course = test.exams.find((itm) => itm.course_id === course_id);\n        if (course !== undefined) {\n          return course;\n        }\n      }\n    }\n    return null;\n  };\n  updateLocation = async (\n    application_id: string,\n    exams: sentExamInterface[]\n  ) => {\n    this.setState({ loading: true });\n    for (let i in exams) {\n      try {\n        const res = await axios.post(\n          `${API.APPLICATION}/application/updatemissed`,\n          {\n            application_id: application_id,\n            exams: exams[i],\n          }\n        );\n        if (res.status === 200) {\n          this.setState({\n            selectedCourse: null,\n            centersModal: false,\n            maxExamModal: false,\n            selectedPosition: \"\",\n            successMessage: \"Location updated successfully!\",\n          });\n          this.loadUserApplications();\n        }\n      } catch (error: any) {\n        console.log(\"Update loc err: \", { ...error });\n      }\n    }\n  };\n  updateLocationFunction = (exams: sentExamInterface[]) => {\n    if (this.props.candidateApplications.candidate_applications !== null) {\n      let application =\n        this.props.candidateApplications.candidate_applications.find(\n          (item) =>\n            item.position.position_id === this.state.selectedPosition &&\n            item.application_session.session_plan_id ===\n              this.props.auth.application_session?.session_plan_id\n        );\n      if (application !== undefined) {\n        this.updateLocation(application.application_id, exams);\n      } else {\n        alert(\"Invalid application\");\n      }\n    } else {\n      alert(\"Missing application\");\n    }\n  };\n  addLocation = (\n    course_id: string,\n    course_name: string,\n    course_code: string,\n    location: LocationTableInterface,\n    exam_id: string\n  ) => {\n    return this.updateLocationFunction([\n      {\n        course_id: course_id,\n        proctoring_type:\n          location.rooms.find((itm) => itm.room_type === RoomType.Virtual) !==\n          undefined\n            ? RoomType.Virtual\n            : RoomType.Physical,\n        center_id: location.center_id,\n        district_id: location.district_id,\n      },\n    ]);\n  };\n  componentDidMount = () => {\n    const selPeriod =\n      this.props.periods.selected_period === null\n        ? this.props.auth.application_session?.session_plan_id\n        : this.props.periods.selected_period.session_plan_id;\n\n    if (\n      this.props.auth.application_session !== null &&\n      this.state.candidateExams === null\n    ) {\n      this.loadCandidateExams(\n        this.props.auth.user.user_id,\n        this.props.auth.application_session.session_plan_id\n      );\n    }\n    if (\n      this.props.auth.user.sex === \"\" ||\n      this.props.auth.user.sex.length === 0\n    ) {\n      this.loadUserProfileDetails();\n    }\n    if (this.props.periods.applicationPeriods === null) {\n      this.props.loadApplicationPeriods(this.setLoading);\n    }\n    if (this.props.candidateApplications.candidate_applications === null) {\n      this.loadUserApplications();\n    }\n  };\n\n  removeDuplicatesExams = (\n    exams: UserExamsListInterface[]\n  ): UserExamsListInterface[] => {\n    let temp: UserExamsListInterface[] = [];\n    if (this.props.candidateApplications.candidate_applications !== null) {\n      for (let item of exams) {\n        if (\n          this.props.candidateApplications.candidate_applications.find(\n            (test) => test.position.position_id === item.position\n          ) !== undefined\n        ) {\n          if (temp.find((itm) => itm._id === item._id) === undefined) {\n            temp = [...temp, item];\n          }\n        }\n      }\n    }\n    return temp;\n  };\n\n  removeDuplicatesNotPreparedExams = (\n    exams: NotPreparedExam[]\n  ): NotPreparedExam[] => {\n    let temp: NotPreparedExam[] = [];\n    if (this.props.candidateApplications.candidate_applications !== null) {\n      for (let item of exams) {\n        if (\n          this.props.candidateApplications.candidate_applications.find(\n            (test) => test.position.position_id === item.position\n          ) !== undefined\n        ) {\n          if (temp.find((itm) => itm.course === item.course) === undefined) {\n            temp = [...temp, item];\n          }\n        }\n      }\n    }\n    return temp;\n  };\n  setTimeOut = (exam_id: string) => {\n    let temps: string[] = this.state.activeExams;\n    this.setState({\n      activeExams: [...temps, exam_id],\n    });\n  };\n  selectApplication = (\n    applications: GetApplicationsAPI[] | null,\n    position_id: string,\n    course_id: string,\n    selected_period: ApplicationPeriodGet | null\n  ): GetApplicationsAPI | null => {\n    if (applications !== null && selected_period !== null) {\n      let temp = applications.find(\n        (item) =>\n          item.position.position_id === position_id &&\n          item.application_session.session_plan_id ===\n            selected_period.session_plan_id\n      );\n      if (temp !== undefined) {\n        if (\n          temp.position.courses.find((itm) => itm.course_id === course_id) !==\n          undefined\n        ) {\n          return temp;\n        }\n      }\n    }\n    return null;\n  };\n  setMaxExamModal = (status: boolean) => {\n    this.setState({ maxExamModal: status });\n  };\n\n  changeLocation = (item: PositionAPICourse) => {\n    this.setState({ selectedCourse: item, centersModal: true });\n    this.setMaxExamModal(true);\n  };\n\n  closeModal = () => {\n    this.setState({ centersModal: false });\n    this.setMaxExamModal(false);\n  };\n\n  render() {\n    const today = moment().tz(TimeZone);\n    // console.log(\"TODAY: \", today.get(\"days\"));\n    const selPeriod =\n      this.props.periods.selected_period === null\n        ? this.props.auth.application_session\n        : this.props.periods.selected_period;\n    if (!FC_Access(this.props.auth, UserAccessList.MY_APPLICATION).view) {\n      return <Redirect to=\"/\" />;\n    }\n    if (\n      this.props.candidateExam.selected_exam_id !== null &&\n      this.props.candidateExam.selected_exam_details !== null &&\n      (this.props.candidateExam.doing_exam === true ||\n        this.state.doing_exam === true)\n    ) {\n      return <Redirect to=\"/do-exam\" />;\n    }\n    return (\n      <Fragment>\n        {this.state.selectedCourse === null ? (\n          <div className=\"mt-2 -ml-2 mr-3 pb-5\">\n            <div className=\"rounded mt-2\">\n              <div className=\"flex flex-row items-center gap-3\">\n                <Link\n                  to=\"/apps-page\"\n                  title=\"Back to menus\"\n                  className=\"bg-white group hover:bg-blue-50 h-10 w-10 flex items-center justify-center rounded-full cursor-pointer\"\n                >\n                  <BiArrowBack className=\"text-3xl text-blue-600 group-hover:text-blue-800\" />\n                </Link>\n                <div className=\"flex flex-col\">\n                  <span className=\"font-extrabold text-3xl\">My exams</span>\n                  <span className=\"text-gray-600 text-sm\">\n                    List of exams for curent session:{\" \"}\n                    <span className=\"font-bold text-bold text-blue-600\">\n                      {this.props.auth.application_session?.session_plan_name}\n                    </span>\n                  </span>\n                </div>\n              </div>\n            </div>\n            {this.state.successMessage !== \"\" && (\n              <div\n                title=\"Click to close the message\"\n                onClick={() => this.setState({ successMessage: \"\" })}\n                className=\"animate__animated animate__zoomIn px-3 py-2 bg-green-500 text-white my-2 rounded cursor-pointer\"\n              >\n                {this.state.successMessage}\n              </div>\n            )}\n            {console.log(\"Not found: \", this.state.candidateExams)}\n            {this.state.loading === true ||\n            this.state.loadingExamsDone === true ||\n            this.state.candidateExams === null ||\n            this.props.candidateApplications.candidate_applications == null ? (\n              <div className=\"px-4 pt-5 pb-1 bg-white mt-2 rounded\">\n                <Loading />\n              </div>\n            ) : this.removeDuplicatesExams(\n                this.state.candidateExams.preparedExam\n              ).length === 0 ? (\n              <div className=\"bg-gray-50 rounded px-4 py-5 text-center font-bold mt-2 text-2xl text-gray-400\">\n                No exams found\n              </div>\n            ) : (\n              this.removeDuplicatesExams(\n                this.state.candidateExams.preparedExam\n              ).map((item, i) => (\n                <div key={i + 1} className=\"my-2 rounded bg-white p-2 group\">\n                  <div className=\"flex flex-col md:flex-row items-center justify-between\">\n                    <div className=\"flex flex-col md:flex-row items-center gap-2 w-full\">\n                      <div>\n                        <BsFillFileEarmarkTextFill className=\"hidden md:block text-4xl text-gray-300 group-hover:text-blue-600\" />\n                      </div>\n                      <div className=\"flex flex-col w-full\">\n                        <span className=\"text-base text-gray-800 font-extrabold group-hover:text-blue-600\">\n                          {item.course_name}\n                        </span>\n                        <div className=\"flex flex-row items-center justify-start w-full gap-3 -mt-1\">\n                          <div className=\"text-sm text-gray-500 group-hover:text-blue-600\">\n                            Date: {DATE(item.exam_date, \"DD/MM/YYYY\")}\n                          </div>\n                          <div className=\"hidden md:block text-sm bg-gray-100 underline text-gray-500  font-bold rounded-full px-2\">\n                            Start time: {item.start_time}\n                          </div>\n                          <div className=\"hidden md:block text-sm bg-blue-100 text-blue-900  font-bold rounded-full px-2\">\n                            Status: {item.user_status}\n                          </div>\n                        </div>\n                        {this.findLocation(item.position, item.course) !==\n                          null && (\n                          <div className=\"flex flex-row items-center gap-2 mt-2\">\n                            <div>\n                              Exam center:{\" \"}\n                              <span className=\"text-sm bg-gray-100 text-blue-900 group-hover:text-blue-600 font-bold rounded-full px-2 w-max\">\n                                {\n                                  this.findLocation(item.position, item.course)\n                                    ?.center_name\n                                }\n                              </span>\n                            </div>\n                            <div className=\"w-max flex flex-col md:flex-row\">\n                              Room number:{\" \"}\n                              {this.findLocation(item.position, item.course)\n                                ?.room_number === 0 ? (\n                                <span className=\"text-sm bg-yellow-100 text-yellow-900 group-hover:text-yellow-800 font-bold rounded-full px-2 w-max flex items-center justify-center\">\n                                  Waiting room\n                                </span>\n                              ) : (\n                                <span className=\"text-sm bg-gray-100 text-blue-900 group-hover:text-blue-600 font-bold rounded-full px-2 w-max\">\n                                  {\n                                    this.findLocation(\n                                      item.position,\n                                      item.course\n                                    )?.room_number\n                                  }\n                                </span>\n                              )}\n                              {/* Change loc */}\n                              {this.findLocation(item.position, item.course)\n                                ?.room_number === 0 &&\n                                validateExamDate(\n                                  item.exam_date,\n                                  item.start_time,\n                                  item.end_time\n                                ) !== ExamTimeStatus.Expired && (\n                                  <ChangeLocationComponent\n                                    changeLocation={() => {\n                                      this.setState({\n                                        selectedCourse: {\n                                          course_name: item.course_name,\n                                          course_code: item.course_code,\n                                          description: item.course_name,\n                                          school_levels: [],\n                                          course_id: item.course,\n                                        },\n                                        selectedPosition: item.position,\n                                        centersModal: true,\n                                      });\n                                      this.setMaxExamModal(true);\n                                    }}\n                                  />\n                                )}\n                            </div>\n                          </div>\n                        )}\n                      </div>\n                    </div>\n                    <div className=\"lg:w-full flex flex-row items-center justify-end\">\n                      {this.state.activeExams.find(\n                        (itm) => itm === item._id\n                      ) !== undefined ||\n                      item.user_status === UserExamStatus.Editing ||\n                      item.user_status === UserExamStatus.Paused ? (\n                        validateExamDate(\n                          item.exam_date,\n                          item.start_time,\n                          item.end_time\n                        ) !== ExamTimeStatus.Expired ? (\n                          this.selectApplication(\n                            this.props.candidateApplications\n                              .candidate_applications,\n                            item.position,\n                            item.course,\n                            selPeriod\n                          )?.application_status !==\n                          ApplicationStates.Shortlisted ? (\n                            <div className=\"text-yellow-800 font-extrabold text-base bg-yellow-100 rounded px-3 py-1 cursor-not-allowed\">\n                              Not shortlisted\n                            </div>\n                          ) : (\n                            <div\n                              onClick={() => {\n                                let application = this.selectApplication(\n                                  this.props.candidateApplications\n                                    .candidate_applications,\n                                  item.position,\n                                  item.course,\n                                  selPeriod\n                                );\n                                if (application !== null) {\n                                  this.InitializationFn(application, item);\n                                } else {\n                                  alert(\"Invalid exam!\");\n                                }\n                              }}\n                              className={`${\n                                item.user_status === UserExamStatus.Editing ||\n                                item.user_status === UserExamStatus.Paused\n                                  ? \"bg-green-600 group-hover:bg-green-800\"\n                                  : \"bg-blue-600 group-hover:bg-blue-800\"\n                              } btn  text-white cursor-pointer w-max`}\n                            >\n                              {item.user_status === UserExamStatus.Editing\n                                ? \"Back to Exam\"\n                                : item.user_status === UserExamStatus.Paused\n                                ? \"Paused, back to exam\"\n                                : \"Start Exam\"}\n                            </div>\n                          )\n                        ) : item.user_status === UserExamStatus.Editing ||\n                          item.user_status === UserExamStatus.Done ||\n                          item.user_status === UserExamStatus.Paused ||\n                          item.user_status === UserExamStatus.Removed ? (\n                          <div className=\"text-blue-700 flex flex-col items-end justify-center w-max\">\n                            <span>Marks</span>\n                            <span className=\"text-2xl font-extrabold -mt-2\">\n                              {item.user_marks.toFixed(\n                                item.user_marks === 100 || item.user_marks === 0\n                                  ? 0\n                                  : 2\n                              )}\n                              %\n                            </span>\n                            <div\n                              onClick={() =>\n                                this.setState({\n                                  selectedExam: {\n                                    course: item.course,\n                                    course_name: item.course_name,\n                                    discription: item.discription,\n                                    termes: item.termes,\n                                    rules: item.rules,\n                                    period: item.period,\n                                    exam_date: item.exam_date,\n                                    exam_id: item._id,\n                                  },\n                                })\n                              }\n                              className=\"btn bg-blue-100 text-blue-700 cursor-pointer\"\n                            >\n                              Check details\n                            </div>\n                          </div>\n                        ) : (\n                          <div className=\"bg-yellow-100 text-yellow-700 font-extrabold text-base px-3 py-1 rounded-md w-max\">\n                            Expired\n                          </div>\n                        )\n                      ) : item.found === false ? (\n                        <div\n                          title=\"Please wait for the exam time\"\n                          className=\"text-lg lg:text-xl font-extrabold bg-green-100 text-green-700 px-3 py-1 rounded cursor-not-allowed w-max\"\n                        >\n                          <CountDown\n                            start_time={new Date(today.toString()).toString()}\n                            duration_min={getMinutesFromTwoDates(\n                              new Date(today.toString()),\n                              new Date(\n                                DATE(item.exam_date, \"MM/DD/YYYY\") +\n                                  \" \" +\n                                  item.start_time\n                              )\n                            )}\n                            timeout={() => this.setTimeOut(item._id)}\n                            returnString={true}\n                            labels={true}\n                            days\n                          />\n                        </div>\n                      ) : (\n                        <div className=\"text-blue-700 flex flex-col items-end justify-center w-max\">\n                          <span>Marks</span>\n                          <span className=\"text-2xl font-extrabold -mt-2\">\n                            {item.user_marks.toFixed(\n                              item.user_marks === 100 || item.user_marks === 0\n                                ? 0\n                                : 2\n                            )}\n                            %\n                          </span>\n                          <div\n                            onClick={() =>\n                              this.setState({\n                                selectedExam: {\n                                  course: item.course,\n                                  course_name: item.course_name,\n                                  discription: item.discription,\n                                  termes: item.termes,\n                                  rules: item.rules,\n                                  period: item.period,\n                                  exam_date: item.exam_date,\n                                  exam_id: item._id,\n                                },\n                              })\n                            }\n                            className=\"btn bg-blue-100 text-blue-700 cursor-pointer\"\n                          >\n                            Check details\n                          </div>\n                        </div>\n                      )}\n                    </div>\n                  </div>\n                </div>\n              ))\n            )}\n            {/* Not prepared exams */}\n            {this.state.candidateExams !== null &&\n              this.state.loading !== true &&\n              this.removeDuplicatesNotPreparedExams(\n                this.state.candidateExams.notPreparedExam\n              ).length > 0 &&\n              this.removeDuplicatesNotPreparedExams(\n                this.state.candidateExams.notPreparedExam\n              ).map((item, i) => (\n                <div\n                  key={i + 1}\n                  className=\"my-2 rounded bg-white p-2 py-3 group\"\n                >\n                  <div className=\"flex flex-col md:flex-row items-center justify-between\">\n                    <div className=\"flex flex-col md:flex-row items-center gap-2 w-full\">\n                      <div className=\"\">\n                        <BsFillFileEarmarkTextFill className=\"hidden md:block text-4xl text-gray-300 group-hover:text-blue-600\" />\n                      </div>\n                      <div className=\"flex flex-col\">\n                        <span className=\"text-base text-gray-600 font-bold group-hover:text-blue-600\">\n                          {item.course_name}\n                        </span>\n                        <div className=\"flex flex-row items-center gap-3 -mt-1\">\n                          {this.findLocation(item.position, item.course) !==\n                            null && (\n                            <div className=\"flex flex-row items-center gap-2 mt-2\">\n                              <div className=\"flex flex-col md:flex-row md:items-center\">\n                                Exam center:{\" \"}\n                                <span className=\"text-sm bg-gray-100 text-blue-900 group-hover:text-blue-600 font-bold rounded-full px-2 w-max\">\n                                  {\n                                    this.findLocation(\n                                      item.position,\n                                      item.course\n                                    )?.center_name\n                                  }\n                                </span>\n                              </div>\n                              <div className=\"w-max flex flex-col md:flex-row md:items-center\">\n                                Room number:{\" \"}\n                                {this.findLocation(item.position, item.course)\n                                  ?.room_number === 0 ? (\n                                  <span className=\"text-sm bg-yellow-100 text-yellow-900 group-hover:text-yellow-800 font-bold rounded-full px-2 w-max flex items-center justify-center\">\n                                    Waiting room\n                                  </span>\n                                ) : (\n                                  <span className=\"text-sm bg-gray-100 text-blue-900 group-hover:text-blue-600 font-bold rounded-full px-2 w-max\">\n                                    {\n                                      this.findLocation(\n                                        item.position,\n                                        item.course\n                                      )?.room_number\n                                    }\n                                  </span>\n                                )}\n                                {/* Change loc */}\n                                {this.findLocation(item.position, item.course)\n                                  ?.room_number === 0 && (\n                                  <ChangeLocationComponent\n                                    changeLocation={() => {\n                                      this.setState({\n                                        selectedCourse: {\n                                          course_name: item.course_name,\n                                          course_code: item.course_code,\n                                          description: item.course_name,\n                                          school_levels: [],\n                                          course_id: item.course,\n                                        },\n                                        selectedPosition: item.position,\n                                        centersModal: true,\n                                      });\n                                      this.setMaxExamModal(true);\n                                    }}\n                                  />\n                                )}\n                              </div>\n                            </div>\n                          )}\n                        </div>\n                      </div>\n                    </div>\n                    <div className=\"bg-gray-100 text-gray-600 font-extrabold text-base px-3 py-1 rounded-md\">\n                      Not prepared\n                    </div>\n                  </div>\n                </div>\n              ))}\n          </div>\n        ) : this.state.loading === true ? (\n          <div className=\"px-4 pt-5 pb-1 bg-white mt-2 rounded\">\n            <Loading />\n          </div>\n        ) : (\n          <div className=\"animate__animated animate__fadeInUp animate__faster mt-2 mr-1 -ml-3 rounded-t-md bg-white shadow-md pb-5\">\n            <div className=\"flex flex-row gap-4 items-center justify-between bg-blue-100 py-2 px-2 mb-2\">\n              <div className=\"flex flex-col w-full\">\n                <div className=\"flex flex-row gap-2 items-center justify-between w-full pl-2\">\n                  <span className=\"font-bold text-xl text-gray-800\">\n                    Change exam location\n                  </span>\n                  <div className=\"bg-white hover:text-yellow-700 hover:bg-white rounded-full p-1 h-10 w-10 border-2 border-white hover:border-yellow-600 flex items-center justify-center\">\n                    <MdClose\n                      className=\"cursor-pointer font-extrabold text-3xl\"\n                      onClick={() => {\n                        this.setState({\n                          centersModal: false,\n                          selectedCourse: null,\n                        });\n                      }}\n                    />\n                  </div>\n                </div>\n              </div>\n            </div>\n            <ChooseExamCenter\n              positionCourses={this.state.selectedCourse}\n              addLocation={this.addLocation}\n              closeModal={this.closeModal}\n              changeProctoring={true}\n            />\n          </div>\n        )}\n        {this.state.selectedExam !== null && (\n          <Modal\n            title={\n              <div className=\"text-2xl font-extrabold text-blue-600 px-2\">\n                Exam result details\n              </div>\n            }\n            backDrop={true}\n            theme={Themes.default}\n            close={() => this.setState({ selectedExam: null })}\n            backDropClose={true}\n            widthSizeClass={ModalSize.extraLarge}\n            displayClose={true}\n            padding={{ title: true }}\n          >\n            <CandidateAnswersDetails\n              exam_id={this.state.selectedExam}\n              showAnswers={false}\n            />\n          </Modal>\n        )}\n      </Fragment>\n    );\n  }\n}\n\nconst mapStateToProps = ({\n  auth,\n  candidateExam,\n  candidateApplications,\n  periods,\n}: StoreState): {\n  auth: Auth;\n  candidateExam: candidateExamStoreInterface;\n  candidateApplications: CandidateApplicationsStoreInterface;\n  periods: applicationPeriodsStoreInterface;\n} => {\n  return {\n    auth: auth,\n    candidateExam: candidateExam,\n    candidateApplications: candidateApplications,\n    periods: periods,\n  };\n};\n\nexport const CandidateExams = connect(mapStateToProps, {\n  FC_GetProfileDetails,\n  LoadCandidateApplications,\n  setSelectedCandidateExam,\n  setSelectedCourse,\n  setSelectedPosition,\n  InitializeExamDetails,\n  loadExamsDone,\n  AddUserApplication,\n  loadApplicationPeriods,\n})(_CandidateExams);\n","import React, { Component } from \"react\";\nimport { MdAdd, MdArrowBack, MdDelete, MdInfoOutline } from \"react-icons/md\";\nimport { connect } from \"react-redux\";\nimport { Auth, loadCourses, PushPopupAlert } from \"../../../actions\";\nimport {\n  DocumentClaimUser,\n  getClaimReasons,\n  getMyAnswers,\n  getMyClaims,\n  getMyPlacement,\n} from \"../../../actions/claiming\";\nimport {\n  getDocumentCategory,\n  getDocumentSubCategory,\n  getDocumentFields,\n} from \"../../../actions/document\";\nimport { GetAllSessionPlans } from \"../../../actions/session\";\nimport { PopupAlertData } from \"../../../components/Alert/Popup\";\nimport { SideNavigation } from \"../../../components/Navigation/SideNavigation\";\nimport NoResult, {\n  NoResultThemes,\n} from \"../../../components/NoResult/NoResult\";\nimport {\n  CandidateClaimInterface,\n  claimApplicationsInterface,\n  ClaimStatus,\n  PlansTypeKeys,\n  SessionPlanInterface,\n  course,\n} from \"../../../interfaces\";\nimport { PopupAlertTheme } from \"../../../interfaces/popupAlert\";\nimport { StoreState } from \"../../../reducers\";\nimport { ClaimingReducerType } from \"../../../reducers/claiming\";\nimport { DocumentReducerInterface } from \"../../../reducers/document\";\nimport { capitalizeFirstLetter } from \"../../../shared/dataTest\";\nimport search from \"../../../utils/search\";\nimport { filterClaimsByClaimType } from \"../Admin/AdminFilterByType\";\nimport ClaimApplView from \"../ClaimApplView\";\nimport ClaimDocView, { isClaimEvaluated } from \"../ClaimDocView\";\nimport ClaimExamView from \"../ClaimExamView\";\nimport ClaimHeaderTitle from \"../ClaimHeaderTitle\";\nimport ClaimPlacementView from \"../ClaimPlacementView\";\nimport ClaimForm, { ClaimGetDocTitle } from \"./ClaimForm\";\nimport FilterByType from \"./FilterByType\";\nimport { getCourseById, getCourseIdBySheetId } from \"./FormExamList\";\n\nexport enum ClaimTypesEnum {\n  application = \"application\",\n  document = \"document\",\n  exam = \"exam\",\n  marks_publication = \"marks publication\",\n  placement = \"placement\",\n}\n\nexport const getDocumentById = (\n  candidateDocuments: DocumentClaimUser[],\n  document_id: string\n): DocumentClaimUser | null => {\n  let result: DocumentClaimUser | undefined = candidateDocuments.find(\n    (item) => item.doc_id === document_id\n  );\n  return result ? result : null;\n};\n\nexport const whichClaimType = (\n  thisClaim: CandidateClaimInterface\n): ClaimTypesEnum | undefined => {\n  if (thisClaim.type_key === PlansTypeKeys.APPLICATION) {\n    return ClaimTypesEnum.application;\n  }\n  if (thisClaim.type_key === PlansTypeKeys.DOCUMENT_VALIDATION) {\n    return ClaimTypesEnum.document;\n  }\n  if (thisClaim.type_key === PlansTypeKeys.EXAMINATION) {\n    return ClaimTypesEnum.exam;\n  }\n  if (thisClaim.type_key === PlansTypeKeys.MARKS_PUBLICATION) {\n    return ClaimTypesEnum.marks_publication;\n  }\n  if (thisClaim.type_key === PlansTypeKeys.PLACEMENT_TRANSFER) {\n    return ClaimTypesEnum.placement;\n  }\n};\n\nexport const whichClaimStatus = (\n  thisClaim: CandidateClaimInterface\n): {\n  classes: string;\n  status: string;\n} => {\n  let classes: string, status: string;\n  switch (thisClaim.last_claim_status) {\n    case ClaimStatus.COMPLETED:\n      classes = \"text-blue-700 italic font-semiblod\";\n      status = capitalizeFirstLetter(ClaimStatus.COMPLETED.toLocaleLowerCase());\n      break;\n    case ClaimStatus.EVALUATED:\n      classes = \"text-green-700 italic font-semiblod\";\n      status = capitalizeFirstLetter(ClaimStatus.EVALUATED.toLocaleLowerCase());\n      break;\n\n    case ClaimStatus.DELETED:\n      classes = \"text-red-700 italic font-semiblod\";\n      status = capitalizeFirstLetter(ClaimStatus.DELETED.toLocaleLowerCase());\n      break;\n\n    default:\n      classes = \"text-yellow-700 italic font-semiblod\";\n      status = capitalizeFirstLetter(ClaimStatus.PENDING.toLocaleLowerCase());\n      break;\n  }\n\n  return { classes, status };\n};\n\nexport const getClaimById = (\n  claimList: CandidateClaimInterface[],\n  claim_id: string\n): CandidateClaimInterface | null => {\n  // console.log(\"====================================\");\n  // console.log({ claimList, claim_id });\n  // console.log(\"====================================\");\n  let result: CandidateClaimInterface | undefined = claimList.find(\n    (item) => item._id === claim_id\n  );\n  return result ? result : null;\n};\n\nexport const getApplicationById = (\n  candidateApplications: claimApplicationsInterface[],\n  application_id: string\n): claimApplicationsInterface | null => {\n  let result: claimApplicationsInterface | undefined =\n    candidateApplications.find(\n      (item) => item.application_id === application_id\n    );\n  return result ? result : null;\n};\n\nexport const displayDocClaimTitle = (\n  documentCategories: DocumentReducerInterface,\n  candidateDocuments: DocumentClaimUser[],\n  thisClaim: CandidateClaimInterface\n): string => {\n  let result: string = \"\";\n\n  // CHECK IF CLAIM IS FOR DOCUMENTS ===============================================\n  if (thisClaim.type_key === PlansTypeKeys.DOCUMENT_VALIDATION) {\n    let thisDoc = getDocumentById(candidateDocuments, thisClaim.claiming_on_id);\n    result = thisDoc\n      ? ClaimGetDocTitle(documentCategories, thisDoc).main\n      : \"Document not found\";\n  }\n  // END CHECK IF CLAIM IS FOR DOCUMENTS ===============================================\n  return result;\n};\n\nexport const displayClaimTitle = (\n  claiming: ClaimingReducerType,\n  documentReducer: DocumentReducerInterface,\n  allCourse: course[] | null,\n  thisClaim: CandidateClaimInterface\n): string => {\n  let result: string = thisClaim.claiming_on_id;\n\n  if (\n    thisClaim.type_key === PlansTypeKeys.DOCUMENT_VALIDATION &&\n    claiming.candidateDocuments\n  ) {\n    result = displayDocClaimTitle(\n      documentReducer,\n      claiming.candidateDocuments,\n      thisClaim\n    );\n  }\n  if (\n    thisClaim.type_key === PlansTypeKeys.APPLICATION &&\n    claiming.candidateApplications\n  ) {\n    let thisApplication = getApplicationById(\n      claiming.candidateApplications,\n      thisClaim.claiming_on_id\n    );\n    if (thisApplication) {\n      result = thisApplication.position.position_title;\n    } else {\n      result = \"Application not found\";\n    }\n  }\n\n  if (\n    thisClaim.type_key === PlansTypeKeys.EXAMINATION &&\n    allCourse &&\n    claiming.myAnswer\n  ) {\n    let thisAnswer = getCourseIdBySheetId(\n      claiming.myAnswer,\n      thisClaim.claiming_on_id\n    );\n    if (thisAnswer && getCourseById(allCourse, thisAnswer.course)) {\n      result = getCourseById(allCourse, thisAnswer.course)!.course_name;\n    } else {\n      result = \"Exam not found\";\n    }\n  }\n\n  if (thisClaim.type_key === PlansTypeKeys.PLACEMENT_TRANSFER) {\n    result = claiming.myPlacement\n      ? \"Placed on \" + claiming.myPlacement.placed.school.school_name\n      : \"Placement not found\";\n  }\n\n  return result;\n};\n\n// -------------------------------------------------------------------------\n\ntype AppProps = {\n  auth: Auth;\n  claiming: ClaimingReducerType;\n  application_sessions: SessionPlanInterface[] | null;\n  courses: course[] | null;\n  documentReducer: DocumentReducerInterface;\n  getMyPlacement: Function;\n  getMyClaims: Function;\n  loadCourses: Function;\n  getMyAnswers: Function;\n  getClaimReasons: Function;\n  GetAllSessionPlans: Function;\n  getDocumentCategory: Function;\n  getDocumentSubCategory: Function;\n  getDocumentFields: Function;\n  PushPopupAlert: (alert: PopupAlertData) => void;\n};\n\ntype AppState = {\n  loading: boolean;\n  loadingSession: boolean;\n  thisPeriod: SessionPlanInterface | null;\n  periodChanged: boolean;\n  viewClaim: boolean;\n  claimId: string | null;\n  claimForm: boolean;\n\n  // FOR FORM ================\n  viewImage: boolean;\n  loadingRequest: boolean;\n  reClaiming: boolean;\n  reClaimingMsg: string;\n  searchClaim: string;\n  formError: {\n    element: string;\n    msg: string;\n  } | null;\n};\n\nclass Index extends Component<AppProps, AppState> {\n  constructor(props: AppProps) {\n    super(props);\n\n    this.state = {\n      loading: true,\n      loadingSession: true,\n      thisPeriod: null,\n      periodChanged: false,\n      viewClaim: false,\n      claimId: null,\n      claimForm: false,\n      searchClaim: \"\",\n\n      // FOR FORM ================\n      viewImage: false,\n      loadingRequest: false,\n      reClaiming: false,\n      reClaimingMsg: \"\",\n      formError: null,\n    };\n  }\n\n  setLoading = (value: boolean) => {\n    this.setState({ loading: value });\n  };\n\n  setLoadingSession = (value: boolean) => {\n    this.setState({ loadingSession: value });\n  };\n\n  setViewClaim = (value: boolean) => {\n    this.setState({ viewClaim: value });\n  };\n\n  setPeriodChanged = (value: boolean) => {\n    this.setState({ periodChanged: value });\n  };\n\n  setClaimForm = (value: boolean) => {\n    this.setState({ claimForm: value });\n  };\n\n  setViewImage = (value: boolean) => {\n    this.setState({ viewImage: value });\n  };\n\n  setLoadingRequest = (value: boolean) => {\n    this.setState({ loadingRequest: value });\n  };\n\n  setReClaiming = (value: boolean) => {\n    this.setState({ reClaiming: value });\n  };\n\n  setFormError = (\n    value: {\n      element: string;\n      msg: string;\n    } | null\n  ) => {\n    this.setState({ formError: value });\n  };\n\n  setReClaimingMsg = (value: string) => {\n    this.setState({ reClaimingMsg: value });\n  };\n\n  setClaimId = (value: string | null) => {\n    this.setState({ claimId: value });\n  };\n\n  setThisPeriod = (value: SessionPlanInterface | null) => {\n    this.setState({ thisPeriod: value });\n  };\n\n  setSearchClaim = (value: string) => {\n    this.setState({ searchClaim: value });\n  };\n\n  loadClaims = (thisPeriod: SessionPlanInterface) => {\n    // LOADING CLAIMING OF CURRENT CANDIDATES ================================\n    if (this.props.claiming.myClaims === null && thisPeriod !== null) {\n      this.props.getMyClaims(\n        this.props.auth.user.user_id,\n        thisPeriod.session_plan_id,\n        (status: boolean, msg: string) => {\n          !status && this.setLoading(status);\n          if (status === false && msg.length) {\n            this.props.PushPopupAlert({\n              title: msg,\n              theme: PopupAlertTheme.danger,\n            });\n          }\n        }\n      );\n    } else if (thisPeriod && this.state.loading) {\n      this.setLoading(false);\n    }\n  };\n\n  setSession = (sessions: SessionPlanInterface[]) => {\n    // SETTING ACTIVE SESSION ==========================\n    if (this.state.thisPeriod === null && sessions.length > 0) {\n      let thisSession = sessions.find((item) => item.is_active === true);\n      this.setThisPeriod(thisSession ? thisSession : sessions[0]);\n      this.loadClaims(thisSession ? thisSession : sessions[0]);\n      this.loadExamAnswers(\n        thisSession ? thisSession : sessions[0],\n        this.props.auth.user.user_id\n      );\n    }\n  };\n\n  loadExamAnswers = (\n    activeSessionPlan: SessionPlanInterface,\n    user_id: string\n  ) => {\n    this.props.getMyAnswers(\n      activeSessionPlan.session_plan_id,\n      user_id,\n      (status: boolean, msg: string, data: SessionPlanInterface | \"none\") => {\n        this.setLoading(status);\n        if (!status && msg.length) {\n          this.props.PushPopupAlert({\n            title: msg,\n            theme: PopupAlertTheme.danger,\n          });\n        }\n        if (data) {\n          console.log(\"====================================\");\n          console.log({ loadExamAnswers: data });\n          console.log(\"====================================\");\n        }\n      }\n    );\n    if (this.props.claiming.claimReasons === null) {\n      this.props.getClaimReasons((status: boolean, msg: string) => {\n        this.setLoading(status);\n        if (!status) {\n          if (msg.length > 0) {\n            this.props.PushPopupAlert({\n              title: msg,\n              theme: PopupAlertTheme.danger,\n            });\n          }\n        }\n      });\n    }\n  };\n\n  componentDidMount = () => {\n    if (\n      this.props.courses === null ||\n      (this.props.courses.length === 0 && this.state.loading)\n    ) {\n      this.props.loadCourses(this.setLoading);\n      this.setLoading(false);\n    } else {\n      this.setLoading(false);\n    }\n\n    // LOADING APPLICATION SESSION ====================================\n    if (this.props.application_sessions === null) {\n      this.props.GetAllSessionPlans(\n        (status: boolean, msg: string, data?: SessionPlanInterface[]) => {\n          if (!status) {\n            this.setLoadingSession(false);\n            if (msg.length) {\n              this.props.PushPopupAlert({\n                title: msg,\n                theme: PopupAlertTheme.danger,\n              });\n            }\n            if (data && data.length > 0) {\n              // SETTING ACTIVE SESSION ==========================\n              if (this.state.thisPeriod === null) {\n                this.setSession(data);\n              }\n            }\n          }\n        }\n      );\n    } else {\n      this.setSession(this.props.application_sessions);\n      this.setLoadingSession(false);\n    }\n\n    if (!this.props.documentReducer.documentCategory) {\n      this.props.getDocumentCategory();\n      this.setLoading(false);\n    } else if (this.state.loading) {\n      this.setLoading(false);\n    }\n    if (!this.props.documentReducer.documentSubCategory && this.state.loading) {\n      this.props.getDocumentSubCategory();\n      this.setLoading(false);\n    } else if (this.state.loading) {\n      this.setLoading(false);\n    }\n\n    if (!this.props.documentReducer.documentFields && this.state.loading) {\n      this.props.getDocumentFields();\n      this.setLoading(false);\n    } else if (this.state.loading) {\n      this.setLoading(false);\n    }\n\n    if (this.props.claiming.myPlacement === null) {\n      this.props.getMyPlacement(\n        this.props.auth.user.user_id,\n        (status: boolean, msg: string) => {\n          this.setLoading(status);\n          if (!status) {\n            if (msg.length) {\n              this.props.PushPopupAlert({\n                title: msg,\n                theme: PopupAlertTheme.danger,\n              });\n            }\n          }\n        }\n      );\n    }\n  };\n\n  isDeleteAllowed = (thisCLaim: CandidateClaimInterface): boolean => {\n    if (!isClaimEvaluated(thisCLaim, 1)) {\n      return true;\n    }\n    return false;\n  };\n\n  onPeriodChange = (period_id: string) => {\n    this.setPeriodChanged(true);\n    this.props.getMyClaims(\n      this.props.auth.user.user_id,\n      period_id,\n      (status: boolean, msg: string) => {\n        this.setLoadingRequest(status);\n        !status && this.setPeriodChanged(false);\n        if (status === false && msg.length) {\n          this.props.PushPopupAlert({\n            title: msg,\n            theme: PopupAlertTheme.danger,\n          });\n        }\n      }\n    );\n  };\n\n  render() {\n    if (this.props.application_sessions === null) {\n      return (\n        <div className=\"text-center mt-7 font-bold text-4xl text-gray-400 animate-pulse\">\n          Loading Data...\n        </div>\n      );\n    }\n\n    if (this.props.application_sessions.length === 0) {\n      return (\n        <div className=\"bg-yellow-100 rounded flex flex-col items-center justify-center p-6 my-8 text-yellow-900 border border-yellow-900\">\n          <MdInfoOutline className=\"text-6xl md:text-9xl\" />\n          <div className=\"text-center flex flex-col\">\n            <span className=\"text-2xl md:text-4xl font-extrabold\">\n              No active session\n            </span>\n            <span className=\"text-lg\">\n              Please Wait for the system to publish the sessions or contact the\n              administrator\n            </span>\n          </div>\n        </div>\n      );\n    }\n\n    if (this.props.claiming.myClaims === null) {\n      return (\n        <div className=\"text-center mt-7 font-bold text-4xl text-gray-400 animate-pulse\">\n          Loading Data...\n        </div>\n      );\n    }\n\n    return (\n      <div>\n        {/* SIDE NAVIGATION */}\n        {!this.state.viewClaim && (\n          <SideNavigation>\n            <button\n              className=\"btn mb-3 border-2 border-blue-500 hover:bg-blue-500 hover:text-white flex items-center flex-1 font-bold w-full focus:outline-none\"\n              onClick={() => {\n                this.setClaimForm(true);\n                // alert(\"clicked\");\n              }}\n              disabled={\n                this.state.viewClaim ||\n                this.state.loading ||\n                this.state.loadingRequest\n              }\n            >\n              <MdAdd className=\"inline-block mr-1 text-xl font-bold\" />\n              <span>Claiming</span>\n            </button>\n\n            {/* FILTER SECTION */}\n            <FilterByType loadingClaims={this.state.loadingRequest} />\n            {/* END FILTER SECTION */}\n          </SideNavigation>\n        )}\n        {/* END SIDE NAVIGATION */}\n\n        {/* ------------------------------------------------------------------- */}\n\n        {/* CLAIM TITLE ===================================== */}\n        {!this.state.viewClaim && (\n          <ClaimHeaderTitle\n            headerTitle={`${\n              this.props.claiming.selectedClaimType === \"all\"\n                ? \"All\"\n                : this.props.claiming.selectedClaimType ===\n                  PlansTypeKeys.DOCUMENT_VALIDATION\n                ? \"Documents\"\n                : this.props.claiming.selectedClaimType ===\n                  PlansTypeKeys.APPLICATION\n                ? \"Applications\"\n                : this.props.claiming.selectedClaimType ===\n                  PlansTypeKeys.EXAMINATION\n                ? \"Exam\"\n                : this.props.claiming.selectedClaimType ===\n                  PlansTypeKeys.MARKS_PUBLICATION\n                ? \"Marks publication\"\n                : this.props.claiming.selectedClaimType ===\n                  PlansTypeKeys.PLACEMENT_TRANSFER\n                ? \"Placements\"\n                : \"\"\n            } Claiming`}\n            loading={this.state.loading}\n            loadingSession={this.state.loadingSession}\n            thisPeriod={this.state.thisPeriod}\n            setThisPeriod={this.setThisPeriod}\n            setLoadingSession={this.setLoadingSession}\n            application_sessions={this.props.application_sessions}\n            onPeriodChange={this.onPeriodChange}\n            periodChanged={this.state.periodChanged}\n          />\n        )}\n        {/* END CLAIM TITLE ===================================== */}\n\n        {/* ----------------------------------------------------------------------- */}\n\n        {!this.state.viewClaim && (\n          <section className=\"bg-white w-full p-1\">\n            {/* FILTER FORM =================================== */}\n            <section className=\"flex flex-col-reverse sm:flex-row items-center gap-2 w-full my-2\">\n              <div className=\"w-full\">\n                <input\n                  onChange={(e: React.ChangeEvent<HTMLInputElement>) =>\n                    this.setSearchClaim(e.target.value)\n                  }\n                  type=\"text\"\n                  className=\"input-white h-10 text-sm border-2 border-gray-400 focus:border-gray-500 w-full\"\n                  placeholder={`Search claim by title or type`}\n                  value={this.state.searchClaim}\n                  disabled={\n                    filterClaimsByClaimType(\n                      this.props.claiming.myClaims,\n                      this.props.claiming.selectedClaimType\n                    ).length > 0\n                      ? false\n                      : true\n                  }\n                />\n              </div>\n            </section>\n            {/* END FILTER FORM =================================== */}\n            <table className=\"w-full shadow\" id=\"report_content\">\n              <thead className=\"bg-white border-b-2 border-gray-300 text-gray-600 font-bold text-sm\">\n                <tr>\n                  <td className=\"px-2 py-2\">#</td>\n                  <td className=\"px-2 py-2\">Claim title</td>\n                  {this.props.claiming.selectedClaimType === \"all\" && (\n                    <td className=\"px-2 py-2\">Claim type</td>\n                  )}\n                  <td className=\"px-2 py-2\">Claim level</td>\n                  <td className=\"px-2 py-2\">Claim status</td>\n                  <td className=\"px-2 py-2\"></td>\n                </tr>\n              </thead>\n              <tbody>\n                {filterClaimsByClaimType(\n                  this.props.claiming.myClaims,\n                  this.props.claiming.selectedClaimType\n                ).length <= 0 ? (\n                  <tr\n                    className=\"border-b border-gray-200 group hover:bg-gray-50 cursor-pointer\"\n                    key=\"key3201\"\n                  >\n                    <td className=\"px-3 py-1\" colSpan={4}>\n                      <NoResult\n                        theme={NoResultThemes.Light}\n                        value={\"No claim found!\"}\n                      />\n                    </td>\n                  </tr>\n                ) : search(\n                    filterClaimsByClaimType(\n                      this.props.claiming.myClaims,\n                      this.props.claiming.selectedClaimType\n                    ),\n                    this.state.searchClaim\n                  ).length <= 0 ? (\n                  <tr\n                    className=\"border-b border-gray-200 group hover:bg-gray-50 cursor-pointer\"\n                    key=\"key3201\"\n                  >\n                    <td className=\"px-3 py-1\" colSpan={4}>\n                      <NoResult\n                        theme={NoResultThemes.Light}\n                        value={\"Nothing found!\"}\n                      />\n                    </td>\n                  </tr>\n                ) : (\n                  search(\n                    filterClaimsByClaimType(\n                      this.props.claiming.myClaims,\n                      this.props.claiming.selectedClaimType\n                    ),\n                    this.state.searchClaim\n                  ).map((claim: CandidateClaimInterface, index) => (\n                    <tr\n                      className=\"border-b border-gray-200 group hover:bg-gray-50 cursor-pointer\"\n                      key={index + claim._id}\n                      onClick={() => {\n                        this.setViewClaim(true);\n                        this.setClaimId(claim._id);\n                      }}\n                    >\n                      <td className=\"px-3 py-1 whitespace-nowrap\">\n                        {index + 1}\n                      </td>\n                      <td className=\"px-3 py-1 whitespace-nowrap\">\n                        {claim.title}\n                      </td>\n                      {this.props.claiming.selectedClaimType === \"all\" && (\n                        <td className=\"px-3 py-1 whitespace-nowrap\">\n                          {whichClaimType(claim)\n                            ? capitalizeFirstLetter(whichClaimType(claim)!)\n                            : \"-\"}\n                        </td>\n                      )}\n                      <td className=\"px-3 py-1 whitespace-nowrap italic\">\n                        Level {claim.claim_level}\n                      </td>\n                      <td className=\"px-3 py-1 whitespace-nowrap\">\n                        <span\n                          className={`inline-block rounded-full duration-300 text-xs font-semibold px-3 py-1 ${\n                            whichClaimStatus(claim).classes\n                          }`}\n                        >\n                          {whichClaimStatus(claim).status}\n                        </span>\n                      </td>\n                      <td className=\"px-3 py-1 text-center whitespace-nowrap\">\n                        <button className=\"btn bg-blue-500 text-white group-hover:bg-blue-600\">\n                          View\n                        </button>\n                      </td>\n                    </tr>\n                  ))\n                )}\n              </tbody>\n            </table>\n          </section>\n        )}\n\n        {/* ----------------------------------------------------------------------- */}\n\n        {this.state.viewClaim &&\n          this.props.claiming.myClaims &&\n          this.state.claimId &&\n          getClaimById(this.props.claiming.myClaims, this.state.claimId) && (\n            <section className=\"bg-white w-full p-1 my-4\">\n              {/* VIEW CLAIM HEADER =============================== */}\n              <section className=\"flex items-center gap-2 py-2 border-b\">\n                <button\n                  className={`ml-3 bg-gray-50 hover:bg-blue-100 rounded-full px-1 py-1 focus:outline-none ${\n                    this.state.loadingRequest\n                      ? \"cursor-not-allowed\"\n                      : \"cursor-pointer\"\n                  } animate__animated animate__fadeIn`}\n                  disabled={this.state.loadingRequest}\n                  onClick={() => {\n                    this.setViewClaim(false);\n                    this.setViewImage(false);\n                    this.setLoadingRequest(false);\n                    this.setFormError(null);\n                    this.setReClaiming(false);\n                    this.setReClaimingMsg(\"\");\n                  }}\n                >\n                  <MdArrowBack className=\"w-7 h-7\" />\n                </button>\n                {this.isDeleteAllowed(\n                  getClaimById(\n                    this.props.claiming.myClaims,\n                    this.state.claimId\n                  )!\n                ) && (\n                  <button\n                    className={`bg-gray-50 hover:bg-blue-100 rounded-full px-1 py-1 focus:outline-none ${\n                      this.state.loadingRequest\n                        ? \"cursor-not-allowed\"\n                        : \"cursor-pointer\"\n                    } animate__animated animate__fadeIn hidden`}\n                    disabled={this.state.loadingRequest}\n                    // onClick={() => {\n                    //   this.handleDelete();\n                    // }}\n                  >\n                    <MdDelete className=\"w-7 h-7\" />\n                  </button>\n                )}\n              </section>\n              {/* END VIEW CLAIM HEADER =============================== */}\n              <section className=\"my-2\">\n                {/* VIEWING CLAIM OF A DOCUMENT ===================== */}\n                {getClaimById(this.props.claiming.myClaims, this.state.claimId)!\n                  .type_key === PlansTypeKeys.DOCUMENT_VALIDATION &&\n                this.props.claiming.candidateDocuments &&\n                getDocumentById(\n                  this.props.claiming.candidateDocuments,\n                  getClaimById(\n                    this.props.claiming.myClaims,\n                    this.state.claimId\n                  )!.claiming_on_id\n                ) ? (\n                  <ClaimDocView\n                    thisDoc={\n                      getDocumentById(\n                        this.props.claiming.candidateDocuments,\n                        getClaimById(\n                          this.props.claiming.myClaims,\n                          this.state.claimId\n                        )!.claiming_on_id\n                      )!\n                    }\n                    documentCategories={this.props.documentReducer}\n                    thisClaim={\n                      getClaimById(\n                        this.props.claiming.myClaims,\n                        this.state.claimId\n                      )!\n                    }\n                    viewImage={this.state.viewImage}\n                    setViewImage={this.setViewImage}\n                    loadingRequest={this.state.loadingRequest}\n                    setLoadingRequest={this.setLoadingRequest}\n                    reClaiming={this.state.reClaiming}\n                    setReClaiming={this.setReClaiming}\n                    reClaimingMsg={this.state.reClaimingMsg}\n                    setReClaimingMsg={this.setReClaimingMsg}\n                    formError={this.state.formError}\n                    setFormError={this.setFormError}\n                    claimReasons={this.props.claiming.claimReasons}\n                  />\n                ) : (\n                  getClaimById(\n                    this.props.claiming.myClaims,\n                    this.state.claimId\n                  )!.type_key === PlansTypeKeys.DOCUMENT_VALIDATION && (\n                    <NoResult\n                      theme={NoResultThemes.Dark}\n                      value={\"Document not found\"}\n                    />\n                  )\n                )}\n                {/* END VIEWING CLAIM OF A DOCUMENT ===================== */}\n\n                {/* ############################################################### */}\n\n                {/* VIEWING CLAIM OF AN APPLICATION ===================== */}\n                {getClaimById(this.props.claiming.myClaims, this.state.claimId)!\n                  .type_key === PlansTypeKeys.APPLICATION &&\n                this.props.claiming.candidateApplications &&\n                getApplicationById(\n                  this.props.claiming.candidateApplications,\n                  getClaimById(\n                    this.props.claiming.myClaims,\n                    this.state.claimId\n                  )!.claiming_on_id\n                ) ? (\n                  <ClaimApplView\n                    thisApplication={\n                      getApplicationById(\n                        this.props.claiming.candidateApplications,\n                        getClaimById(\n                          this.props.claiming.myClaims,\n                          this.state.claimId\n                        )!.claiming_on_id\n                      )!\n                    }\n                    documentCategories={this.props.documentReducer}\n                    thisClaim={\n                      getClaimById(\n                        this.props.claiming.myClaims,\n                        this.state.claimId\n                      )!\n                    }\n                    viewPosition={this.state.viewImage}\n                    setViewPosition={this.setViewImage}\n                    loadingRequest={this.state.loadingRequest}\n                    setLoadingRequest={this.setLoadingRequest}\n                    reClaiming={this.state.reClaiming}\n                    setReClaiming={this.setReClaiming}\n                    reClaimingMsg={this.state.reClaimingMsg}\n                    setReClaimingMsg={this.setReClaimingMsg}\n                    formError={this.state.formError}\n                    setFormError={this.setFormError}\n                    claimReasons={this.props.claiming.claimReasons}\n                  />\n                ) : (\n                  getClaimById(\n                    this.props.claiming.myClaims,\n                    this.state.claimId\n                  )!.type_key === PlansTypeKeys.APPLICATION && (\n                    <NoResult\n                      theme={NoResultThemes.Dark}\n                      value={\"Application not found\"}\n                    />\n                  )\n                )}\n                {/* END VIEWING CLAIM OF AN APPLICATION ===================== */}\n\n                {/* VIEWING CLAIM OF AN EXAM ===================== */}\n                {getClaimById(this.props.claiming.myClaims, this.state.claimId)!\n                  .type_key === PlansTypeKeys.EXAMINATION &&\n                this.props.claiming.myAnswer &&\n                this.props.courses &&\n                getCourseIdBySheetId(\n                  this.props.claiming.myAnswer,\n                  getClaimById(\n                    this.props.claiming.myClaims,\n                    this.state.claimId\n                  )!.claiming_on_id\n                ) &&\n                getCourseById(\n                  this.props.courses,\n                  getCourseIdBySheetId(\n                    this.props.claiming.myAnswer,\n                    getClaimById(\n                      this.props.claiming.myClaims,\n                      this.state.claimId\n                    )!.claiming_on_id\n                  )!.course\n                ) ? (\n                  <ClaimExamView\n                    thisExam={\n                      getCourseById(\n                        this.props.courses,\n                        getCourseIdBySheetId(\n                          this.props.claiming.myAnswer,\n                          getClaimById(\n                            this.props.claiming.myClaims,\n                            this.state.claimId\n                          )!.claiming_on_id\n                        )!.course\n                      )!\n                    }\n                    thisClaim={\n                      getClaimById(\n                        this.props.claiming.myClaims,\n                        this.state.claimId\n                      )!\n                    }\n                    viewPosition={this.state.viewImage}\n                    setViewPosition={this.setViewImage}\n                    loadingRequest={this.state.loadingRequest}\n                    setLoadingRequest={this.setLoadingRequest}\n                    reClaiming={this.state.reClaiming}\n                    setReClaiming={this.setReClaiming}\n                    reClaimingMsg={this.state.reClaimingMsg}\n                    setReClaimingMsg={this.setReClaimingMsg}\n                    formError={this.state.formError}\n                    setFormError={this.setFormError}\n                    thisExamSheet={\n                      getCourseIdBySheetId(\n                        this.props.claiming.myAnswer,\n                        getClaimById(\n                          this.props.claiming.myClaims,\n                          this.state.claimId\n                        )!.claiming_on_id\n                      )!\n                    }\n                    claimReasons={this.props.claiming.claimReasons}\n                  />\n                ) : (\n                  getClaimById(\n                    this.props.claiming.myClaims,\n                    this.state.claimId\n                  )!.type_key === PlansTypeKeys.EXAMINATION && (\n                    <NoResult\n                      theme={NoResultThemes.Dark}\n                      value={\"Exam not found\"}\n                    />\n                  )\n                )}\n                {/* END VIEWING CLAIM OF AN EXAM ===================== */}\n\n                {/* ----------------------------------------------------------- */}\n                {/* VIEWING CLAIM OF A DOCUMENT ===================== */}\n                {getClaimById(this.props.claiming.myClaims, this.state.claimId)!\n                  .type_key === PlansTypeKeys.PLACEMENT_TRANSFER &&\n                this.props.claiming.myPlacement ? (\n                  <ClaimPlacementView\n                    thisClaim={\n                      getClaimById(\n                        this.props.claiming.myClaims,\n                        this.state.claimId\n                      )!\n                    }\n                    loadingRequest={this.state.loadingRequest}\n                    setLoadingRequest={this.setLoadingRequest}\n                    reClaiming={this.state.reClaiming}\n                    setReClaiming={this.setReClaiming}\n                    reClaimingMsg={this.state.reClaimingMsg}\n                    setReClaimingMsg={this.setReClaimingMsg}\n                    formError={this.state.formError}\n                    setFormError={this.setFormError}\n                    myPlacement={this.props.claiming.myPlacement}\n                  />\n                ) : (\n                  getClaimById(\n                    this.props.claiming.myClaims,\n                    this.state.claimId\n                  )!.type_key === PlansTypeKeys.PLACEMENT_TRANSFER && (\n                    <NoResult\n                      theme={NoResultThemes.Dark}\n                      value={\"Placement not found\"}\n                    />\n                  )\n                )}\n                {/* END VIEWING CLAIM OF A DOCUMENT ===================== */}\n              </section>\n            </section>\n          )}\n        {/* end view claim */}\n\n        {/* ----------------------------------------------------------------------- */}\n        {/* CLAIM FORM  ################ */}\n        {this.state.claimForm && (\n          <ClaimForm\n            formState={this.state.claimForm}\n            setFormState={this.setClaimForm}\n          />\n        )}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = ({\n  auth,\n  sessionPlan,\n  claiming,\n  document,\n  course,\n}: StoreState): {\n  auth: Auth;\n  claiming: ClaimingReducerType;\n  application_sessions: SessionPlanInterface[] | null;\n  documentReducer: DocumentReducerInterface;\n  courses: course[] | null;\n} => {\n  return {\n    auth: auth,\n    claiming,\n    application_sessions: sessionPlan.allSessionPlans,\n    documentReducer: document,\n    courses: course.courses,\n  };\n};\n\nexport const CandidateClaim = connect(mapStateToProps, {\n  getMyClaims,\n  GetAllSessionPlans,\n  getClaimReasons,\n  loadCourses,\n  getMyPlacement,\n  getMyAnswers,\n  getDocumentCategory,\n  getDocumentSubCategory,\n  getDocumentFields,\n  PushPopupAlert,\n})(Index);\n","import axios from \"axios\";\nimport React from \"react\";\nimport { FaRegCheckCircle } from \"react-icons/fa\";\nimport { MdInfoOutline, MdTurnedIn } from \"react-icons/md\";\nimport { RiArrowGoBackFill } from \"react-icons/ri\";\nimport { connect } from \"react-redux\";\nimport { PushPopupAlert } from \"../../actions\";\nimport { createReClaim } from \"../../actions/claiming\";\nimport NoResult, { NoResultThemes } from \"../../components/NoResult/NoResult\";\nimport {\n  CandidateClaimInterface,\n  claimApplicationsInterface,\n  ClaimDecisionStatus,\n  claimReasonInterface,\n  ClaimStatus,\n} from \"../../interfaces\";\nimport { ApplicationStates } from \"../../interfaces/application\";\nimport { PopupAlertTheme } from \"../../interfaces/popupAlert\";\nimport { DocumentReducerInterface } from \"../../reducers/document\";\nimport { capitalizeFirstLetter, isEmptyOrSpaces } from \"../../shared/dataTest\";\nimport { API } from \"../../utils/api\";\nimport { setAxiosToken } from \"../../utils/AxiosToken\";\nimport { DATE, errorToText, showDate } from \"../../utils/functions\";\nimport ViewRequirements from \"../Positions/ViewRequirements\";\nimport { FC_ApplicationPositionDistinctCategory } from \"./Candidate/ApplicationFormView\";\nimport { isClaimEvaluated } from \"./ClaimDocView\";\n\nconst isReclaimAllowed = (thisClaim: CandidateClaimInterface): boolean => {\n  if (thisClaim.claim_level === 1) {\n    const _thisClaim = thisClaim.claims.find((item) => item.level === 1);\n    if (_thisClaim) {\n      if (_thisClaim.decision_taken_status === ClaimDecisionStatus.REJECTED) {\n        return true;\n      }\n    }\n  }\n  return false;\n};\n\ntype ClaimDocViewProps = {\n  thisApplication: claimApplicationsInterface;\n  documentCategories: DocumentReducerInterface;\n  claimReasons: claimReasonInterface[] | null;\n  thisClaim: CandidateClaimInterface;\n  viewPosition: boolean;\n  setViewPosition: (value: boolean) => void;\n  loadingRequest: boolean;\n  setLoadingRequest: (value: boolean) => void;\n  reClaiming: boolean;\n  setReClaiming: (value: boolean) => void;\n  reClaimingMsg: string;\n  setReClaimingMsg: (value: string) => void;\n  formError: {\n    element: string;\n    msg: string;\n  } | null;\n  setFormError: (\n    value: {\n      element: string;\n      msg: string;\n    } | null\n  ) => void;\n\n  // REDUX DATA =====================\n  createReClaim: Function;\n  PushPopupAlert: Function;\n};\n\nconst ClaimDocView: React.FC<ClaimDocViewProps> = (props) => {\n  const handleSubmit = async () => {\n    if (isEmptyOrSpaces(props.reClaimingMsg)) {\n      return props.setFormError({\n        element: \"comment\",\n        msg: \"Claim comment is required!\",\n      });\n    }\n    if (!props.thisClaim) {\n      return props.PushPopupAlert({\n        title: \"Claim is required\",\n        theme: PopupAlertTheme.warning,\n      });\n    }\n\n    props.setLoadingRequest(true);\n    try {\n      setAxiosToken();\n      const res = await axios.put<CandidateClaimInterface>(\n        `${API.CLAIMING}/user/reclaim/${props.thisClaim._id}`,\n        {\n          reason: props.reClaimingMsg,\n        }\n      );\n      console.log({ res: res.data });\n      if (res.status === 201 || res.status === 200) {\n        props.createReClaim(res.data);\n        props.PushPopupAlert({\n          title: \"Claim sent successful\",\n          theme: PopupAlertTheme.success,\n        });\n        props.setReClaimingMsg(\"\");\n        props.setReClaiming(false);\n      }\n    } catch (error) {\n      console.error({ error });\n      props.PushPopupAlert({\n        title: errorToText(error),\n        theme: PopupAlertTheme.danger,\n      });\n    }\n    props.setLoadingRequest(false);\n  };\n\n  const getReasonById = (\n    reason_id: string\n  ): claimReasonInterface | undefined => {\n    if (props.claimReasons) {\n      return props.claimReasons.find((item) => item.id === reason_id);\n    }\n    return undefined;\n  };\n\n  return (\n    <section className=\"\">\n      <div className=\"w-full bg-white px-4 py-1 divide-y-2 space-y-2\">\n        {/* DOCUMENT DETAILS ==================================================== */}\n        <section className=\"flex flex-col\">\n          <div className=\"flex items-center justify-between\">\n            <span className=\"text-blue-600 font-bold text-2xl\">\n              {props.thisApplication.position.position_title}\n            </span>\n            <button\n              type=\"button\"\n              className=\"bg-blue-200 hover:bg-blue-300 text-blue-700 group-hover:text-blue-800 py-1 px-2 mr-1 rounded text-sm\"\n              onClick={() => props.setViewPosition(!props.viewPosition)}\n            >\n              {props.viewPosition ? \"Hide\" : \"More\"}\n            </button>\n          </div>\n          <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n            <span className={`italic`}>Status:</span>\n            <span\n              className={`font-bold ${\n                props.thisClaim.previous.status === ApplicationStates.Rejected\n                  ? \"text-yellow-900\"\n                  : \"text-blue-600\"\n              } rounded px-3 py-1`}\n            >\n              {capitalizeFirstLetter(props.thisClaim.previous.status)}\n            </span>\n          </div>\n          <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n            <span className={`italic`}>Evaluated by:</span>\n            <span className=\"font-semibold\">\n              {props.thisClaim.previous.evaluater.name}\n            </span>\n          </div>\n          {false && (\n            <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n              <span className={`italic`}>Session:</span>\n              <span className=\"font-bold text-gray-900 py-1\">\n                {\n                  props.thisApplication.application_session\n                    .application_session_name\n                }\n              </span>\n            </div>\n          )}\n          <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n            <span className={`italic`}>Date:</span>\n            <span className=\"font-bold text-gray-900 py-1\">\n              {DATE(props.thisApplication.createdAt)}\n            </span>\n          </div>\n          <div className=\"flex items-start gap-2 text-sm text-gray-600\">\n            <span className={`italic`}>Reason:</span>\n            <span\n              className=\"font-normal\"\n              dangerouslySetInnerHTML={{\n                __html: props.thisClaim.previous.reason,\n              }}\n            ></span>\n          </div>\n\n          {/* DISPLAY POSITION ==================================================== */}\n          {props.viewPosition && (\n            <div className=\"w-full my-1 animate__animated animate__fadeIn rounded\">\n              <div className=\"bg-white w-full\">\n                <div className=\"text-gray-800 text-2xl font-bold my-2\">\n                  Position Details\n                </div>\n                <div className=\"flex items-center gap-2 text-base text-gray-600\">\n                  <span className={`italic`}>Desc:</span>\n                  <span className=\"font-semibold\">\n                    {props.thisApplication.position.description}\n                  </span>\n                </div>\n                <div className=\"flex items-center gap-2 text-base text-gray-600\">\n                  <span className={`italic`}>School level:</span>\n                  <span className=\"font-semibold\">\n                    {\n                      props.thisApplication.position.school_level_id\n                        .school_level_name\n                    }\n                  </span>\n                </div>\n                <div className=\"flex items-center gap-2 text-base text-gray-600\">\n                  <span className={`italic`}>Institute:</span>\n                  <span className=\"font-semibold\">\n                    {\n                      props.thisApplication.position.education_institute_id\n                        .education_category_title\n                    }\n                  </span>\n                </div>\n                <div className=\"flex items-center gap-2 text-base text-gray-600\">\n                  <span className={`italic`}>Courses:</span>\n                  <span className=\"flex items-center gap-2\">\n                    {props.thisApplication.position.courses.map(\n                      (item, index) => (\n                        <div\n                          key={index + item.course_id}\n                          className=\"flex items-center gap-1\"\n                        >\n                          <span className=\"font-semibold\">\n                            {item.course_name}\n                          </span>\n                          <span className=\"text-gray-600\">\n                            ({item.course_code})\n                          </span>\n                          {index !==\n                            props.thisApplication.position.courses.length - 1 &&\n                            \",\"}\n                        </div>\n                      )\n                    )}\n                  </span>\n                </div>\n\n                <div className=\"text-gray-800 text-2xl font-bold my-2\">\n                  Position Requirements\n                </div>\n                {props.thisApplication.position.requirements.length > 0 ? (\n                  FC_ApplicationPositionDistinctCategory(\n                    props.thisApplication.position,\n                    props.documentCategories\n                  ).DistinctCategoriesTemp.map((item, index) => (\n                    <div\n                      className=\"bg-gray-100props.thisApplication.position rounded p-2\"\n                      key={index + item.category_id}\n                    >\n                      <div className=\"flex items-center gap-2 text-2xl text-gray-500 font-bold\">\n                        <MdTurnedIn />\n                        <span>{item.category_title}</span>\n                      </div>\n                      <div className=\"border bg-white mt-1\">\n                        <ViewRequirements\n                          requirements={FC_ApplicationPositionDistinctCategory(\n                            props.thisApplication.position,\n                            props.documentCategories\n                          ).PositionsTemp.filter(\n                            (req) => req.category_id === item.category_id\n                          )}\n                        />\n                      </div>\n                    </div>\n                  ))\n                ) : (\n                  <NoResult\n                    theme={NoResultThemes.Dark}\n                    value={\"No requirements\"}\n                  ></NoResult>\n                )}\n              </div>\n            </div>\n          )}\n          {/* END DISPLAY POSITION ==================================================== */}\n        </section>\n        {/* END DOCUMENT DETAILS ==================================================== */}\n\n        {/* ################################################################################ */}\n\n        {/* CLAIM LEVELS DETAILS ==================================================== */}\n        {props.thisClaim.claims.length > 0 &&\n          props.thisClaim.claims.map((claim, index) => (\n            <section className=\"flex flex-col px-2 pt-3\" key={index + claim.id}>\n              {/* CLAIM COMMENT ==>> LEVEL 1 ==================================================== */}\n              <div className=\"flex flex-col items-start gap-2\">\n                <div className=\"flex items-center gap-2 bg-blue-100 rounded py-1 px-2\">\n                  <MdInfoOutline />\n                  {getReasonById(props.thisClaim.default_claim_resaons)\n                    ? getReasonById(props.thisClaim.default_claim_resaons)!\n                        .reason\n                    : \"\"}\n                </div>\n                <p>{claim.reason}</p>\n                <span className=\"text-gray-500 text-xs\">\n                  {showDate(claim.createdAt)}\n                </span>\n              </div>\n\n              {/* RESPONSE OF LEVELS ======================================= */}\n              {isClaimEvaluated(props.thisClaim, claim.level) && (\n                <section className=\"mt-4\">\n                  <span className=\"text-gray-500 italic font-semibold\">\n                    Response (level {index + 1})\n                  </span>\n                  <div className=\"border-t-2\">\n                    <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n                      <span className={`italic`}>Status:</span>\n                      <span\n                        className={`font-bold ${\n                          claim.decision_taken_status ===\n                          ClaimDecisionStatus.REJECTED\n                            ? \"text-yellow-900\"\n                            : \"text-blue-600\"\n                        } rounded px-3 py-1`}\n                      >\n                        {capitalizeFirstLetter(\n                          claim.decision_taken_status.toLocaleLowerCase()\n                        )}\n                      </span>\n                    </div>\n                    <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n                      <span className={`italic`}>Evaluated by:</span>\n                      <span className=\"font-semibold\">\n                        {claim.evaluater.name}\n                      </span>\n                    </div>\n                    <div className=\"flex items-start gap-2 text-sm text-gray-600\">\n                      <span className={`italic`}>Reason:</span>\n                      <span className=\"font-normal\">\n                        {claim.evaluation_comment}\n                      </span>\n                    </div>\n                  </div>\n                </section>\n              )}\n              {/* CLAIM COMMENT ==>> LEVELS ==================================================== */}\n            </section>\n          ))}\n        {/* END CLAIM LEVELS DETAILS ==================================================== */}\n      </div>\n      <section>\n        {!props.reClaiming && (\n          <div className=\"mx-4 mb-5 mt-3 flex items-center justify-between\">\n            <span\n              className={`${\n                props.thisClaim.last_claim_status === ClaimStatus.PENDING\n                  ? \"text-yellow-700\"\n                  : props.thisClaim.last_claim_status === ClaimStatus.DELETED\n                  ? \"text-red-700\"\n                  : \"text-green-700\"\n              } italic font-semibold`}\n            >\n              {capitalizeFirstLetter(\n                props.thisClaim.last_claim_status.toLocaleLowerCase()\n              )}\n            </span>\n\n            {isReclaimAllowed(props.thisClaim) && (\n              <button\n                className=\"btn btn-blue\"\n                onClick={() => props.setReClaiming(true)}\n                disabled={props.loadingRequest}\n              >\n                Reclaim\n              </button>\n            )}\n          </div>\n        )}\n        {/* right part */}\n        {props.reClaiming && (\n          <div className=\"flex flex-col md:flex-row items-end md:items-start gap-1 w-full\">\n            <div className=\"w-full px-2\">\n              <textarea\n                placeholder={`Reason of your reclaim...`}\n                cols={50}\n                rows={3}\n                className={`border border-${\n                  props.formError && props.formError.element === \"comment\"\n                    ? \"red\"\n                    : \"gray\"\n                }-400 rounded px-3 py-1 w-full focus:outline-none`}\n                style={{ resize: \"none\" }}\n                value={props.reClaimingMsg}\n                onChange={(e) => {\n                  props.setReClaimingMsg(e.target.value);\n                  props.setFormError(null);\n                }}\n                disabled={props.loadingRequest}\n              ></textarea>\n              {props.formError && props.formError.element === \"comment\" && (\n                <p className=\"text-red-800\">{props.formError.msg}</p>\n              )}\n            </div>\n            <div className=\"flex flex-row md:flex-col gap-1 max-w-full px-2\">\n              <button\n                className=\"bg-gray-700 hover:bg-gray-800 px-4 py-2 font-semibold rounded text-white inline-flex items-center space-x-2 focus:outline-none\"\n                onClick={() => {\n                  props.setReClaimingMsg(\"\");\n                  props.setReClaiming(false);\n                  props.setFormError(null);\n                }}\n                disabled={props.loadingRequest}\n              >\n                <RiArrowGoBackFill className=\"w-5 h-5\" />\n                <span>Back</span>\n              </button>\n              <button\n                className=\"bg-blue-700 hover:bg-blue-800 px-4 py-2 font-semibold rounded text-white inline-flex items-center space-x-2 focus:outline-none\"\n                disabled={props.loadingRequest}\n                onClick={() => handleSubmit()}\n              >\n                {props.loadingRequest ? (\n                  <div className=\"\">Loading...</div>\n                ) : (\n                  <div className=\"inline-flex items-center space-x-2 gap-1\">\n                    <FaRegCheckCircle className=\"w-5 h-5\" />\n                    <span>Confirm</span>\n                  </div>\n                )}\n              </button>\n            </div>\n          </div>\n        )}\n        {/* end right part */}\n      </section>\n    </section>\n  );\n};\n\nexport default React.memo(connect(null, {\n  createReClaim,\n  PushPopupAlert,\n})(ClaimDocView));\n","import axios from \"axios\";\nimport React, { useEffect, useState } from \"react\";\nimport { FaRegCheckCircle } from \"react-icons/fa\";\nimport { MdInfoOutline } from \"react-icons/md\";\nimport { RiArrowGoBackFill } from \"react-icons/ri\";\nimport { connect } from \"react-redux\";\nimport {\n  loadQuestionTypes,\n  PushPopupAlert,\n  questionTypesStoreInterface,\n} from \"../../actions\";\nimport { createReClaim } from \"../../actions/claiming\";\nimport CandidateAnswersDetails from \"../../components/AnswersDetails/CandidateAnswersDetails\";\nimport {\n  CandidateClaimInterface,\n  ClaimDecisionStatus,\n  ClaimExamResultsDetails,\n  claimReasonInterface,\n  ClaimStatus,\n  course,\n} from \"../../interfaces\";\nimport { PopupAlertTheme } from \"../../interfaces/popupAlert\";\nimport { StoreState } from \"../../reducers\";\nimport { capitalizeFirstLetter, isEmptyOrSpaces } from \"../../shared/dataTest\";\nimport { API } from \"../../utils/api\";\nimport { setAxiosToken } from \"../../utils/AxiosToken\";\nimport { errorToText, showDate } from \"../../utils/functions\";\nimport { claimShowAnswer } from \"./Candidate/ExaminationFormView\";\nimport { isClaimEvaluated } from \"./ClaimDocView\";\n\nconst isReclaimAllowed = (thisClaim: CandidateClaimInterface): boolean => {\n  if (thisClaim.claim_level === 1) {\n    const _thisClaim = thisClaim.claims.find((item) => item.level === 1);\n    if (_thisClaim) {\n      if (_thisClaim.decision_taken_status === ClaimDecisionStatus.REJECTED) {\n        return true;\n      }\n    }\n  }\n  return false;\n};\n\ntype ClaimDocViewProps = {\n  thisExam: course;\n  thisExamSheet: ClaimExamResultsDetails;\n  thisClaim: CandidateClaimInterface;\n  viewPosition: boolean;\n  claimReasons: claimReasonInterface[] | null;\n  setViewPosition: (value: boolean) => void;\n  loadingRequest: boolean;\n  setLoadingRequest: (value: boolean) => void;\n  reClaiming: boolean;\n  setReClaiming: (value: boolean) => void;\n  reClaimingMsg: string;\n  setReClaimingMsg: (value: string) => void;\n  formError: {\n    element: string;\n    msg: string;\n  } | null;\n  setFormError: (\n    value: {\n      element: string;\n      msg: string;\n    } | null\n  ) => void;\n\n  // REDUX DATA =====================\n  questionTypes: questionTypesStoreInterface;\n  loadQuestionTypes: (callback: (loading: boolean) => void) => void;\n  createReClaim: Function;\n  PushPopupAlert: Function;\n};\n\nconst ClaimDocView: React.FC<ClaimDocViewProps> = (props) => {\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    if (\n      props.questionTypes.questionTypes === null ||\n      (props.questionTypes.questionTypes.length === 0 && loading)\n    ) {\n      props.loadQuestionTypes(setLoading);\n    }\n  }, [loading, props]);\n\n  const handleSubmit = async () => {\n    if (isEmptyOrSpaces(props.reClaimingMsg)) {\n      return props.setFormError({\n        element: \"comment\",\n        msg: \"Claim comment is required!\",\n      });\n    }\n    if (!props.thisClaim) {\n      return props.PushPopupAlert({\n        title: \"Claim is required\",\n        theme: PopupAlertTheme.warning,\n      });\n    }\n\n    props.setLoadingRequest(true);\n    try {\n      setAxiosToken();\n      const res = await axios.put<CandidateClaimInterface>(\n        `${API.CLAIMING}/user/reclaim/${props.thisClaim._id}`,\n        {\n          reason: props.reClaimingMsg,\n        }\n      );\n      console.log({ res: res.data });\n      if (res.status === 201 || res.status === 200) {\n        props.createReClaim(res.data);\n        props.PushPopupAlert({\n          title: \"Claim sent successful\",\n          theme: PopupAlertTheme.success,\n        });\n        props.setReClaimingMsg(\"\");\n        props.setReClaiming(false);\n      }\n    } catch (error) {\n      console.error({ error });\n      props.PushPopupAlert({\n        title: errorToText(error),\n        theme: PopupAlertTheme.danger,\n      });\n    }\n    props.setLoadingRequest(false);\n  };\n\n  const getReasonById = (\n    reason_id: string\n  ): claimReasonInterface | undefined => {\n    if (props.claimReasons) {\n      return props.claimReasons.find((item) => item.id === reason_id);\n    }\n    return undefined;\n  };\n\n  return (\n    <section className=\"\">\n      <div className=\"w-full bg-white px-4 py-1 divide-y-2 space-y-2\">\n        {/* DOCUMENT DETAILS ==================================================== */}\n        <section className=\"flex flex-col\">\n          <div className=\"flex items-center justify-between\">\n            <span className=\"text-blue-600 font-bold text-2xl\">\n              Exam of {props.thisExam.course_name}{\" \"}\n            </span>\n            <button\n              type=\"button\"\n              className=\"bg-blue-200 hover:bg-blue-300 text-blue-700 group-hover:text-blue-800 py-1 px-2 mr-1 rounded text-sm\"\n              onClick={() => props.setViewPosition(!props.viewPosition)}\n            >\n              {props.viewPosition ? \"Hide\" : \"More\"}\n            </button>\n          </div>\n\n          {/* DISPLAY EXAM SHEET ==================================================== */}\n          {props.viewPosition && (\n            <div className=\"bg-white w-full rounded p-2 mb-2\">\n              <CandidateAnswersDetails\n                showAnswers={false}\n                exam_id={claimShowAnswer(\n                  props.thisExamSheet,\n                  props.thisExam.course_name\n                )}\n              />\n            </div>\n          )}\n          {/* END DISPLAY POSITION ==================================================== */}\n        </section>\n        {/* END DOCUMENT DETAILS ==================================================== */}\n\n        {/* ################################################################################ */}\n\n        {/* CLAIM LEVELS DETAILS ==================================================== */}\n        {props.thisClaim.claims.length > 0 &&\n          props.thisClaim.claims.map((claim, index) => (\n            <section className=\"flex flex-col px-2 pt-3\" key={index + claim.id}>\n              {/* CLAIM COMMENT ==>> LEVEL 1 ==================================================== */}\n              <div className=\"flex flex-col items-start gap-2\">\n                <div className=\"flex items-center gap-2 bg-blue-100 rounded py-1 px-2\">\n                  <MdInfoOutline />\n                  {getReasonById(props.thisClaim.default_claim_resaons)\n                    ? getReasonById(props.thisClaim.default_claim_resaons)!\n                        .reason\n                    : \"\"}\n                </div>\n                <p>{claim.reason}</p>\n                <span className=\"text-gray-500 text-xs\">\n                  {showDate(claim.createdAt)}\n                </span>\n              </div>\n\n              {/* RESPONSE OF LEVELS ======================================= */}\n              {isClaimEvaluated(props.thisClaim, claim.level) && (\n                <section className=\"mt-4\">\n                  <span className=\"text-gray-500 italic font-semibold\">\n                    Response (level {index + 1})\n                  </span>\n                  <div className=\"border-t-2\">\n                    <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n                      <span className={`italic`}>Status:</span>\n                      <span\n                        className={`font-bold ${\n                          claim.decision_taken_status ===\n                          ClaimDecisionStatus.REJECTED\n                            ? \"text-yellow-900\"\n                            : \"text-blue-600\"\n                        } rounded px-3 py-1`}\n                      >\n                        {capitalizeFirstLetter(\n                          claim.decision_taken_status.toLocaleLowerCase()\n                        )}\n                      </span>\n                    </div>\n                    <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n                      <span className={`italic`}>Evaluated by:</span>\n                      <span className=\"font-semibold\">\n                        {loading ? (\n                          <div className=\"w-24 h-3 rounded bg-gray-200 animate__animated animate__pulse animate__delay-5s animate__infinite\"></div>\n                        ) : (\n                          props.thisClaim.userDetails.user_info.fname +\n                          \" \" +\n                          props.thisClaim.userDetails.user_info.lname\n                        )}\n                      </span>\n                    </div>\n                    <div className=\"flex items-start gap-2 text-sm text-gray-600\">\n                      <span className={`italic`}>Reason:</span>\n                      <span className=\"font-normal\">\n                        {claim.evaluation_comment}\n                      </span>\n                    </div>\n                  </div>\n                </section>\n              )}\n              {/* CLAIM COMMENT ==>> LEVELS ==================================================== */}\n            </section>\n          ))}\n        {/* END CLAIM LEVELS DETAILS ==================================================== */}\n      </div>\n      <section>\n        {!props.reClaiming && (\n          <div className=\"mx-4 mb-5 mt-3 flex items-center justify-between\">\n            <span\n              className={`${\n                props.thisClaim.last_claim_status === ClaimStatus.PENDING\n                  ? \"text-yellow-700\"\n                  : props.thisClaim.last_claim_status === ClaimStatus.DELETED\n                  ? \"text-red-700\"\n                  : \"text-green-700\"\n              } italic font-semibold`}\n            >\n              {capitalizeFirstLetter(\n                props.thisClaim.last_claim_status.toLocaleLowerCase()\n              )}\n            </span>\n\n            {isReclaimAllowed(props.thisClaim) && (\n              <button\n                className=\"btn btn-blue\"\n                onClick={() => props.setReClaiming(true)}\n                disabled={props.loadingRequest}\n              >\n                Reclaim\n              </button>\n            )}\n          </div>\n        )}\n        {/* right part */}\n        {props.reClaiming && (\n          <div className=\"flex flex-col md:flex-row items-end md:items-start gap-1 w-full\">\n            <div className=\"w-full px-2\">\n              <textarea\n                placeholder={`Reason of your reclaim...`}\n                cols={50}\n                rows={3}\n                className={`border border-${\n                  props.formError && props.formError.element === \"comment\"\n                    ? \"red\"\n                    : \"gray\"\n                }-400 rounded px-3 py-1 w-full focus:outline-none`}\n                style={{ resize: \"none\" }}\n                value={props.reClaimingMsg}\n                onChange={(e) => {\n                  props.setReClaimingMsg(e.target.value);\n                  props.setFormError(null);\n                }}\n                disabled={props.loadingRequest}\n              ></textarea>\n              {props.formError && props.formError.element === \"comment\" && (\n                <p className=\"text-red-800\">{props.formError.msg}</p>\n              )}\n            </div>\n            <div className=\"flex flex-row md:flex-col gap-1 max-w-full px-2\">\n              <button\n                className=\"bg-gray-700 hover:bg-gray-800 px-4 py-2 font-semibold rounded text-white inline-flex items-center space-x-2 focus:outline-none\"\n                onClick={() => {\n                  props.setReClaimingMsg(\"\");\n                  props.setReClaiming(false);\n                  props.setFormError(null);\n                }}\n                disabled={props.loadingRequest}\n              >\n                <RiArrowGoBackFill className=\"w-5 h-5\" />\n                <span>Back</span>\n              </button>\n              <button\n                className=\"bg-blue-700 hover:bg-blue-800 px-4 py-2 font-semibold rounded text-white inline-flex items-center space-x-2 focus:outline-none\"\n                disabled={props.loadingRequest}\n                onClick={() => handleSubmit()}\n              >\n                {props.loadingRequest ? (\n                  <div className=\"\">Loading...</div>\n                ) : (\n                  <div className=\"inline-flex items-center space-x-2 gap-1\">\n                    <FaRegCheckCircle className=\"w-5 h-5\" />\n                    <span>Confirm</span>\n                  </div>\n                )}\n              </button>\n            </div>\n          </div>\n        )}\n        {/* end right part */}\n      </section>\n    </section>\n  );\n};\n\nconst mapStateToProps = ({\n  questionTypes,\n}: StoreState): {\n  questionTypes: questionTypesStoreInterface;\n} => {\n  return { questionTypes: questionTypes };\n};\n\nexport default React.memo(connect(mapStateToProps, {\n  loadQuestionTypes,\n  createReClaim,\n  PushPopupAlert,\n})(ClaimDocView));\n","import axios from \"axios\";\nimport React from \"react\";\nimport { FaRegCheckCircle } from \"react-icons/fa\";\nimport { RiArrowGoBackFill } from \"react-icons/ri\";\nimport { connect } from \"react-redux\";\nimport { PushPopupAlert } from \"../../actions\";\nimport { createReClaim } from \"../../actions/claiming\";\nimport {\n  CandidateClaimInterface,\n  ClaimDecisionStatus,\n  ClaimStatus,\n} from \"../../interfaces\";\nimport { candidatePlacementInterface } from \"../../interfaces/placement\";\nimport { PopupAlertTheme } from \"../../interfaces/popupAlert\";\nimport { capitalizeFirstLetter, isEmptyOrSpaces } from \"../../shared/dataTest\";\nimport { API } from \"../../utils/api\";\nimport { setAxiosToken } from \"../../utils/AxiosToken\";\nimport { errorToText, showDate } from \"../../utils/functions\";\n\nconst isReclaimAllowed = (thisClaim: CandidateClaimInterface): boolean => {\n  if (thisClaim.claim_level === 1) {\n    const _thisClaim = thisClaim.claims.find((item) => item.level === 1);\n    if (_thisClaim) {\n      if (_thisClaim.decision_taken_status === ClaimDecisionStatus.REJECTED) {\n        return true;\n      }\n    }\n  }\n  return false;\n};\n\nexport const isClaimEvaluated = (\n  thisClaim: CandidateClaimInterface,\n  level: number\n): boolean => {\n  const _thisClaim = thisClaim.claims.find(\n    (item) =>\n      item.level === level && item.claim_status === ClaimStatus.EVALUATED\n  );\n  if (_thisClaim) {\n    return true;\n  }\n  return false;\n};\n\ntype ClaimPlacementViewProps = {\n  myPlacement: candidatePlacementInterface;\n  thisClaim: CandidateClaimInterface;\n  loadingRequest: boolean;\n  setLoadingRequest: (value: boolean) => void;\n  reClaiming: boolean;\n  setReClaiming: (value: boolean) => void;\n  reClaimingMsg: string;\n  setReClaimingMsg: (value: string) => void;\n  formError: {\n    element: string;\n    msg: string;\n  } | null;\n  setFormError: (\n    value: {\n      element: string;\n      msg: string;\n    } | null\n  ) => void;\n\n  // REDUX DATA =====================\n  createReClaim: Function;\n  PushPopupAlert: Function;\n};\n\nconst ClaimPlacementView: React.FC<ClaimPlacementViewProps> = (props) => {\n  const handleSubmit = async () => {\n    if (isEmptyOrSpaces(props.reClaimingMsg)) {\n      return props.setFormError({\n        element: \"comment\",\n        msg: \"Claim comment is required!\",\n      });\n    }\n    if (!props.thisClaim) {\n      return props.PushPopupAlert({\n        title: \"Claim sent successful\",\n        theme: PopupAlertTheme.warning,\n      });\n    }\n\n    props.setLoadingRequest(true);\n    try {\n      setAxiosToken();\n      const res = await axios.put<CandidateClaimInterface>(\n        `${API.CLAIMING}/user/reclaim/${props.thisClaim._id}`,\n        {\n          reason: props.reClaimingMsg,\n        }\n      );\n      console.log({ res: res.data });\n      if (res.status === 201 || res.status === 200) {\n        props.createReClaim(res.data);\n        props.PushPopupAlert({\n          title: \"Claim sent successful\",\n          theme: PopupAlertTheme.success,\n        });\n        props.setReClaimingMsg(\"\");\n        props.setReClaiming(false);\n      }\n    } catch (error) {\n      console.error({ error });\n      props.PushPopupAlert({\n        title: errorToText(error),\n        theme: PopupAlertTheme.danger,\n      });\n    }\n    props.setLoadingRequest(false);\n  };\n\n  return (\n    <section className=\"\">\n      <div className=\"w-full bg-white px-4 py-1 divide-y-2 space-y-2\">\n        {/* DOCUMENT DETAILS ==================================================== */}\n        <section className=\"flex flex-col\">\n          <div className=\"flex items-center justify-between\">\n            <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n              <span className={`italic`}>School:</span>\n              <span className=\"text-gray-800 font-bold text-xl\">\n                {props.myPlacement.placed.school.school_name}\n              </span>\n            </div>\n          </div>\n          {/* <div className=\"flex items-center\">\n            <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n              <span className={`italic`}>Position:</span>\n              <span className=\"text-gray-800 font-bold text-xl\">\n                {props.myPlacement.placed.school.school_name}\n              </span>\n            </div>\n          </div> */}\n          <div className=\"flex items-center\">\n            <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n              <span className={`italic`}>District:</span>\n              <span className=\"text-gray-800 font-bold text-xl\">\n                {props.myPlacement.placed.school.district_id.district_name}\n              </span>\n            </div>\n          </div>\n        </section>\n        {/* END DOCUMENT DETAILS ==================================================== */}\n\n        {/* ################################################################################ */}\n\n        {/* CLAIM LEVELS DETAILS ==================================================== */}\n        {props.thisClaim.claims.length > 0 &&\n          props.thisClaim.claims.map((claim, index) => (\n            <section className=\"flex flex-col px-2 pt-3\" key={index + claim.id}>\n              {/* CLAIM COMMENT ==>> LEVEL 1 ==================================================== */}\n              <div className=\"flex flex-col items-start gap-2\">\n                <p>{claim.reason}</p>\n                <span className=\"text-gray-500 text-xs\">\n                  {showDate(claim.createdAt)}\n                </span>\n              </div>\n\n              {/* RESPONSE OF LEVELS ======================================= */}\n              {isClaimEvaluated(props.thisClaim, claim.level) && (\n                <section className=\"mt-4\">\n                  <span className=\"text-gray-500 italic font-semibold\">\n                    Response (level {index + 1})\n                  </span>\n                  <div className=\"border-t-2\">\n                    <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n                      <span className={`italic`}>Status:</span>\n                      <span\n                        className={`font-bold ${\n                          claim.decision_taken_status ===\n                          ClaimDecisionStatus.REJECTED\n                            ? \"text-yellow-900\"\n                            : \"text-blue-600\"\n                        } rounded px-3 py-1`}\n                      >\n                        {capitalizeFirstLetter(\n                          claim.decision_taken_status.toLocaleLowerCase()\n                        )}\n                      </span>\n                    </div>\n                    <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n                      <span className={`italic`}>Evaluated by:</span>\n                      <span className=\"font-semibold\">\n                        {claim.evaluater.name}\n                      </span>\n                    </div>\n                    <div className=\"flex items-start gap-2 text-sm text-gray-600\">\n                      <span className={`italic`}>Reason:</span>\n                      <span className=\"font-normal\">\n                        {claim.evaluation_comment}\n                      </span>\n                    </div>\n                  </div>\n                </section>\n              )}\n              {/* CLAIM COMMENT ==>> LEVELS ==================================================== */}\n            </section>\n          ))}\n        {/* END CLAIM LEVELS DETAILS ==================================================== */}\n      </div>\n      <section>\n        {!props.reClaiming && (\n          <div className=\"mx-4 mb-5 mt-3 flex items-center justify-between\">\n            <span\n              className={`${\n                props.thisClaim.last_claim_status === ClaimStatus.PENDING\n                  ? \"text-yellow-700\"\n                  : props.thisClaim.last_claim_status === ClaimStatus.DELETED\n                  ? \"text-red-700\"\n                  : \"text-green-700\"\n              } italic font-semibold`}\n            >\n              {capitalizeFirstLetter(\n                props.thisClaim.last_claim_status.toLocaleLowerCase()\n              )}\n            </span>\n\n            {isReclaimAllowed(props.thisClaim) && (\n              <button\n                className=\"btn btn-blue\"\n                onClick={() => props.setReClaiming(true)}\n                disabled={props.loadingRequest}\n              >\n                Reclaim\n              </button>\n            )}\n          </div>\n        )}\n        {/* right part */}\n        {props.reClaiming && (\n          <div className=\"flex flex-col md:flex-row items-end md:items-start gap-1 w-full\">\n            <div className=\"w-full px-2\">\n              <textarea\n                placeholder={`Reason of your reclaim...`}\n                cols={50}\n                rows={3}\n                className={`border border-${\n                  props.formError && props.formError.element === \"comment\"\n                    ? \"red\"\n                    : \"gray\"\n                }-400 rounded px-3 py-1 w-full focus:outline-none`}\n                style={{ resize: \"none\" }}\n                value={props.reClaimingMsg}\n                onChange={(e) => {\n                  props.setReClaimingMsg(e.target.value);\n                  props.setFormError(null);\n                }}\n                disabled={props.loadingRequest}\n              ></textarea>\n              {props.formError && props.formError.element === \"comment\" && (\n                <p className=\"text-red-800\">{props.formError.msg}</p>\n              )}\n            </div>\n            <div className=\"flex flex-row md:flex-col gap-1 max-w-full px-2\">\n              <button\n                className=\"bg-gray-700 hover:bg-gray-800 px-4 py-2 font-semibold rounded text-white inline-flex items-center space-x-2 focus:outline-none\"\n                onClick={() => {\n                  props.setReClaimingMsg(\"\");\n                  props.setReClaiming(false);\n                  props.setFormError(null);\n                }}\n                disabled={props.loadingRequest}\n              >\n                <RiArrowGoBackFill className=\"w-5 h-5\" />\n                <span>Back</span>\n              </button>\n              <button\n                className=\"bg-blue-700 hover:bg-blue-800 px-4 py-2 font-semibold rounded text-white inline-flex items-center space-x-2 focus:outline-none\"\n                disabled={props.loadingRequest}\n                onClick={() => handleSubmit()}\n              >\n                {props.loadingRequest ? (\n                  <div className=\"\">Loading...</div>\n                ) : (\n                  <div className=\"inline-flex items-center space-x-2 gap-1\">\n                    <FaRegCheckCircle className=\"w-5 h-5\" />\n                    <span>Confirm</span>\n                  </div>\n                )}\n              </button>\n            </div>\n          </div>\n        )}\n        {/* end right part */}\n      </section>\n    </section>\n  );\n};\n\nexport default React.memo(connect(null, {\n  createReClaim,\n  PushPopupAlert,\n})(ClaimPlacementView));\n","import React, { useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Auth, PushPopupAlert } from \"../../../actions\";\nimport {\n  GetClaimingTypes,\n  getMyRejectedApplications,\n  getMyRejectedDocuments,\n  setSelectedClaimType,\n} from \"../../../actions/claiming\";\nimport { PopupAlertData } from \"../../../components/Alert/Popup\";\nimport { MainItem } from \"../../../components/Navigation/SideNavigation\";\nimport { ClaimStatus, PlansTypeKeys } from \"../../../interfaces\";\nimport { PopupAlertTheme } from \"../../../interfaces/popupAlert\";\nimport { StoreState } from \"../../../reducers\";\nimport { ClaimingReducerType } from \"../../../reducers/claiming\";\n\ntype FilterByTypeProps = {\n  // thisClaimType: ClaimTypesInterface | \"ALL\";\n  // setThisClaimType: React.Dispatch<\n  //   React.SetStateAction<ClaimTypesInterface | \"ALL\">\n  // >;\n  loadingClaims: boolean;\n  FC_CountByType?: Function;\n\n  // REDUX PROPS =======================================\n  auth: Auth;\n  claiming: ClaimingReducerType;\n  GetClaimingTypes: Function;\n  setSelectedClaimType: Function;\n  getMyRejectedApplications: Function;\n  getMyRejectedDocuments: Function;\n  PushPopupAlert: (alert: PopupAlertData) => void;\n};\n\nconst FilterByType: React.FC<FilterByTypeProps> = (props) => {\n  const [loading, setLoading] = useState<boolean>(true);\n  const [loadingRejectedApplications, setLoadingRejectedApplications] =\n    useState<boolean>(true);\n  const [loadingRejectedDocuments, setLoadingRejectedDocuments] =\n    useState<boolean>(true);\n  const [loadingClaimTypes, setLoadingClaimTypes] = useState<boolean>(true);\n\n  useEffect(() => {\n    if (props.claiming.candidateApplications === null) {\n      props.getMyRejectedApplications(\n        props.auth.user.user_id,\n        (status: boolean, msg: string) => {\n          if (status === false) {\n            if (msg.length > 0) {\n              props.PushPopupAlert({\n                title: msg,\n                theme: PopupAlertTheme.danger,\n              });\n            }\n            setLoadingRejectedApplications(false);\n          }\n        }\n      );\n    } else if (loadingRejectedApplications) {\n      setLoadingRejectedApplications(false);\n    }\n\n    if (props.claiming.candidateDocuments === null) {\n      console.log(\"filterrrrrrrrrrrrrrrrrrrr loadingRejectedDocuments\");\n      props.getMyRejectedDocuments((status: boolean, msg: string) => {\n        if (status === false) {\n          if (msg.length > 0) {\n            props.PushPopupAlert({\n              title: msg,\n              theme: PopupAlertTheme.danger,\n            });\n          }\n          setLoadingRejectedDocuments(false);\n        }\n      });\n    } else if (loadingRejectedDocuments) {\n      setLoadingRejectedDocuments(false);\n    }\n\n    if (props.claiming.claimTypes === null) {\n      props.GetClaimingTypes((status: boolean, msg: string) => {\n        if (status === false) {\n          if (msg.length > 0) {\n            props.PushPopupAlert({\n              title: msg,\n              theme: PopupAlertTheme.danger,\n            });\n          }\n          setLoadingClaimTypes(false);\n        }\n      });\n    } else if (loadingClaimTypes) {\n      setLoadingClaimTypes(false);\n    }\n\n    if (\n      !loadingRejectedApplications &&\n      !loadingRejectedDocuments &&\n      !loadingClaimTypes &&\n      loading\n    ) {\n      setLoading(false);\n    }\n  }, [\n    loading,\n    loadingClaimTypes,\n    loadingRejectedApplications,\n    loadingRejectedDocuments,\n    props,\n  ]);\n\n  const countClaims = (\n    claiming: ClaimingReducerType,\n    thisType: PlansTypeKeys | \"all\"\n  ): number => {\n    let result: number = 0;\n\n    if (claiming.myClaims && thisType === \"all\") {\n      result = claiming.myClaims.filter(\n        (item) =>\n          item.last_claim_status !== ClaimStatus.DELETED &&\n          item.last_claim_status !== ClaimStatus.COMPLETED\n      ).length;\n    }\n    if (claiming.myClaims && thisType !== \"all\") {\n      result = claiming.myClaims.filter(\n        (item) =>\n          item.type_key === thisType &&\n          item.last_claim_status !== ClaimStatus.DELETED &&\n          item.last_claim_status !== ClaimStatus.COMPLETED\n      ).length;\n    }\n\n    return result;\n  };\n\n  return (\n    <React.Fragment>\n      <span className=\"mt-2 text-sm\">Filter by claim type</span>\n      {/* WHILE LOADING DATA ================================== */}\n      {(loading || props.loadingClaims) && (\n        <section className=\"space-y-2\">\n          <div className=\"w-full h-7 rounded bg-gray-200 animate__animated animate__pulse animate__delay-5s animate__infinite\"></div>\n          <div className=\"w-full h-7 rounded bg-gray-200 animate__animated animate__pulse animate__delay-5s animate__infinite\"></div>\n          <div className=\"w-full h-7 rounded bg-gray-200 animate__animated animate__pulse animate__delay-5s animate__infinite\"></div>\n          <div className=\"w-full h-7 rounded bg-gray-200 animate__animated animate__pulse animate__delay-5s animate__infinite\"></div>\n        </section>\n      )}\n      {/* END WHILE LOADING DATA ================================== */}\n\n      {/* AFTER LOADING DATA ================================== */}\n      {!loading && !props.loadingClaims && (\n        <section>\n          {/* ALL ================================= */}\n          <div\n            className=\"mt-2\"\n            onClick={() => {\n              // props.setThisClaimType(\"ALL\");\n              props.setSelectedClaimType(\"all\");\n            }}\n          >\n            <MainItem\n              title=\"All\"\n              active={props.claiming.selectedClaimType === \"all\"}\n              count={countClaims(props.claiming, \"all\")}\n            />\n          </div>\n          {/* APPLICATION ================================= */}\n          <div\n            className=\"mt-2\"\n            onClick={() => {\n              // props.setThisClaimType(ClaimTypesInterface.DOCUMENT);\n              props.setSelectedClaimType(PlansTypeKeys.APPLICATION);\n            }}\n          >\n            <MainItem\n              title={\"Application\"}\n              active={\n                props.claiming.selectedClaimType !== \"all\" &&\n                props.claiming.selectedClaimType === PlansTypeKeys.APPLICATION\n              }\n              count={countClaims(props.claiming, PlansTypeKeys.APPLICATION)}\n            />\n          </div>\n          {/* DOCUMENT ================================= */}\n          <div\n            className=\"mt-2\"\n            onClick={() => {\n              props.setSelectedClaimType(PlansTypeKeys.DOCUMENT_VALIDATION);\n            }}\n          >\n            <MainItem\n              title={\"Document\"}\n              active={\n                props.claiming.selectedClaimType !== \"all\" &&\n                props.claiming.selectedClaimType ===\n                  PlansTypeKeys.DOCUMENT_VALIDATION\n              }\n              count={countClaims(\n                props.claiming,\n                PlansTypeKeys.DOCUMENT_VALIDATION\n              )}\n            />\n          </div>\n          {/* EXAMINATION ================================= */}\n          <div\n            className=\"mt-2\"\n            onClick={() => {\n              props.setSelectedClaimType(PlansTypeKeys.EXAMINATION);\n            }}\n          >\n            <MainItem\n              title={\"Exam\"}\n              active={\n                props.claiming.selectedClaimType !== \"all\" &&\n                props.claiming.selectedClaimType === PlansTypeKeys.EXAMINATION\n              }\n              count={countClaims(props.claiming, PlansTypeKeys.EXAMINATION)}\n            />\n          </div>\n          {/* PLACEMENT TRANSFER ================================= */}\n          {false && (\n            <div\n              className=\"mt-2\"\n              onClick={() => {\n                props.setSelectedClaimType(PlansTypeKeys.PLACEMENT_TRANSFER);\n              }}\n            >\n              <MainItem\n                title={\"Placement\"}\n                active={\n                  props.claiming.selectedClaimType !== \"all\" &&\n                  props.claiming.selectedClaimType ===\n                    PlansTypeKeys.PLACEMENT_TRANSFER\n                }\n                count={countClaims(\n                  props.claiming,\n                  PlansTypeKeys.PLACEMENT_TRANSFER\n                )}\n              />\n            </div>\n          )}\n          {/* <div\n            className=\"mt-2\"\n            onClick={() => {\n              props.setThisClaimType(ClaimTypesInterface.APPLICATION);\n            }}\n          >\n            <MainItem\n              title={capitalizeFirstLetter(ClaimTypesInterface.APPLICATION)}\n              active={props.thisClaimType === ClaimTypesInterface.APPLICATION}\n              count={countClaims(props.claiming).applications}\n            />\n          </div>\n          <div\n            className=\"mt-2\"\n            onClick={() => {\n              props.setThisClaimType(ClaimTypesInterface.PLACEMENT);\n            }}\n          >\n            <MainItem\n              title={capitalizeFirstLetter(ClaimTypesInterface.PLACEMENT)}\n              active={props.thisClaimType === ClaimTypesInterface.PLACEMENT}\n              count={countClaims(props.claiming).placement}\n            />\n          </div> */}\n        </section>\n      )}\n      {/* END AFTER LOADING DATA ================================== */}\n    </React.Fragment>\n  );\n};\n\nconst mapStateToProps = ({\n  auth,\n  claiming,\n}: StoreState): { auth: Auth; claiming: ClaimingReducerType } => {\n  return { auth, claiming };\n};\n\nexport default React.memo(\n  connect(mapStateToProps, {\n    GetClaimingTypes,\n    setSelectedClaimType,\n    getMyRejectedApplications,\n    getMyRejectedDocuments,\n    PushPopupAlert,\n  })(FilterByType)\n);\n","import React, { useEffect, useState } from \"react\";\nimport { isEmptyOrSpaces } from \"../../shared/dataTest\";\n\ntype ViewPDFProps = {\n  file_url: string;\n  class_name: string;\n  frame_title: string;\n  setLoadingFile: (state: boolean) => void;\n};\n\nconst ViewPDF: React.FC<ViewPDFProps> = (props) => {\n  const [loading, setLoading] = useState<boolean>(true);\n  const [error, setError] = useState<{ element: string; msg: string } | null>(\n    null\n  );\n  useEffect(() => {\n    if (loading) {\n      if (isEmptyOrSpaces(props.file_url)) {\n        setError({ element: \"PDF_FILE\", msg: \"File url is required\" });\n      } else if (error !== null) {\n        setError(null);\n      }\n      setLoading(false);\n    }\n  }, [error, loading, props.file_url]);\n\n  return (\n    <div className=\"w-full\">\n      {error ? (\n        <div className=\"alert-warning mt-2 mx-14\">{error.msg}</div>\n      ) : (\n        <object\n          data={props.file_url}\n          type=\"application/pdf\"\n          className={props.class_name}\n          onLoad={() => props.setLoadingFile(false)}\n        >\n          <iframe\n            src={props.file_url}\n            className={props.class_name}\n            title={props.frame_title}\n            onLoad={() => props.setLoadingFile(false)}\n          >\n            <p>This browser does not support PDF!</p>\n          </iframe>\n        </object>\n      )}\n    </div>\n  );\n};\n\nexport default ViewPDF;\n","import React, { Component } from \"react\";\nimport { MdSearch } from \"react-icons/md\";\nimport { claimReasonInterface } from \"../../../interfaces\";\nimport search from \"../../../utils/search\";\n\nexport const claimReasonsData = [\n  { key: 1, reason: \"Not placed (Sinahawe umwanya)\" },\n  {\n    key: 2,\n    reason:\n      \"Not placed with higher marks (Sinahawe umwanya kandi hari abo ndusha twakoze bimwe bawuhawe)\",\n  },\n  {\n    key: 3,\n    reason:\n      \"Want to change district of placement (Nifuza guhindurirwa akarere nahawemo umwanya)\",\n  },\n  {\n    key: 4,\n    reason: \"Rejected offer by mistake (Nibeshye nanga umwanya nahawe)\",\n  },\n  {\n    key: 0,\n    reason: \"None of the above (nta na kimwe muri ibyo byavuzwe haruguru)\",\n  },\n];\n\ntype ChooseReasonProps = {\n  claimReason: claimReasonInterface | null;\n  setClaimReason: (value: claimReasonInterface | null) => void;\n  setChooseClaimReason: (value: boolean) => void;\n  allClaimReasons: claimReasonInterface[];\n};\n\ntype ChooseReasonState = {\n  searchInput: string;\n};\n\nclass ChooseReason extends Component<ChooseReasonProps, ChooseReasonState> {\n  constructor(props: ChooseReasonProps) {\n    super(props);\n\n    this.state = {\n      searchInput: \"\",\n    };\n  }\n\n  setSearchInput = (value: string) => {\n    this.setState({ searchInput: value });\n  };\n\n  render() {\n    return (\n      <div>\n        {/* SEARCH PART */}\n        <div className=\"flex items-center w-full my-1\">\n          <MdSearch className=\"w-6 h-6 absolute ml-2\" />\n          <input\n            type=\"text\"\n            placeholder=\"Search\"\n            className=\"focus:border-2 h-7 ml-1 pl-9 mr-2 bg-gray-100 focus:border-gray-700 w-full rounded\"\n            onChange={(e) => this.setSearchInput(e.target.value)}\n            value={this.state.searchInput}\n          />\n          <button\n            className=\"bg-red-200 text-red-700 py-1 px-2 mr-1 rounded text-sm focus:outline-none\"\n            type=\"button\"\n            onClick={() => this.props.setChooseClaimReason(false)}\n          >\n            Close\n          </button>\n        </div>\n        {/* END SEARCH PART ///////////////// */}\n\n        <div className=\"w-full h-52 mt-2 overflow-y-auto divide-y divide-gray-300\">\n          {search(this.props.allClaimReasons, this.state.searchInput).map(\n            (item: claimReasonInterface, index) => (\n              <section key={index.toString() + item.id}>\n                <div\n                  className={`py-1 w-full px-2 hover:bg-gray-100 cursor-pointer ${\n                    this.props.claimReason &&\n                    this.props.claimReason.id === item.id\n                      ? \"border-l-4 border-blue-500 bg-blue-50\"\n                      : \"my-1\"\n                  }`}\n                  onClick={() => {\n                    this.props.setChooseClaimReason(false);\n                    this.props.setClaimReason(item);\n                  }}\n                >\n                  <p className=\"text-base text-black\">{item.reason}</p>\n                </div>\n              </section>\n            )\n          )}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default React.memo(ChooseReason);\n","import axios from \"axios\";\nimport React, { Component } from \"react\";\nimport { VscLoading } from \"react-icons/vsc\";\nimport { connect } from \"react-redux\";\nimport { PushPopupAlert } from \"../../../actions\";\nimport { updateSessionPlan } from \"../../../actions/session\";\nimport { PopupAlertData } from \"../../../components/Alert/Popup\";\nimport {\n  allPlanTypes,\n  PlansInterface,\n  PlansTypeInterface,\n  PlansTypeKeys,\n  SessionPlanInterface,\n  SessionPlanTypeStatus,\n} from \"../../../interfaces\";\nimport { PopupAlertTheme } from \"../../../interfaces/popupAlert\";\nimport { capitalizeFirstLetter } from \"../../../shared/dataTest\";\nimport { API } from \"../../../utils/api\";\nimport { DATE, errorToText } from \"../../../utils/functions\";\n\nexport const isActivationAllowed = (thisPlans: PlansInterface): boolean => {\n  let today: Date = new Date(),\n    end_date = new Date(thisPlans.end_date);\n  if (end_date.getTime() >= today.getTime()) {\n    return true;\n  }\n  return false;\n};\n\nexport const getPlanTypeByKey = (\n  type_key: PlansTypeKeys\n): PlansTypeInterface | undefined => {\n  return allPlanTypes.find((item) => item.type_key === type_key);\n};\n\nexport const isPlanActive = (\n  viewThisSession: SessionPlanInterface,\n  thisPlan: PlansInterface\n): \"OPEN\" | \"CLOSED\" | \"WAITING\" => {\n  if (viewThisSession.is_active) {\n    let today = new Date(),\n      planEndDate = new Date(thisPlan.end_date),\n      planStartDate = new Date(thisPlan.start_date);\n    if (\n      planEndDate.getTime() >= today.getTime() &&\n      planStartDate.getTime() <= today.getTime() &&\n      thisPlan.type_status !== SessionPlanTypeStatus.CLOSED\n    ) {\n      return \"OPEN\";\n    } else if (\n      planStartDate.getTime() > today.getTime() &&\n      thisPlan.type_status !== SessionPlanTypeStatus.CLOSED\n    ) {\n      return \"WAITING\";\n    }\n  }\n  return \"CLOSED\";\n};\n\ntype SessionDetailsProps = {\n  viewThisSession: SessionPlanInterface;\n  setViewThisSession: (data: SessionPlanInterface) => void;\n\n  // REDUX ----------------\n  updateSessionPlan: Function;\n  PushPopupAlert: (alert: PopupAlertData) => void;\n};\n\ntype SessionDetailsState = {\n  loadingRequest: string;\n};\n\nexport class SessionDetails extends Component<\n  SessionDetailsProps,\n  SessionDetailsState\n> {\n  constructor(props: SessionDetailsProps) {\n    super(props);\n\n    this.state = {\n      loadingRequest: \"\",\n    };\n  }\n\n  handlePlanActivation = async (\n    session: SessionPlanInterface,\n    thisPlan: PlansInterface\n  ) => {\n    const newState: \"open\" | \"close\" = session.is_active ? \"close\" : \"open\";\n\n    if (!window.confirm(`Are you sure you want to ${newState} this plan?`)) {\n      return true;\n    }\n\n    if (!isActivationAllowed(thisPlan)) {\n      this.props.PushPopupAlert({\n        title: `Opening/Closing plan which has been expired is not allowed!`,\n        theme: PopupAlertTheme.warning,\n      });\n    }\n\n    let newData: SessionPlanInterface = {\n      session_plan_name: session.session_plan_name,\n      period: session.period,\n      is_active: session.is_active,\n      plans: [],\n      createdAt: session.createdAt,\n      updatedAt: session.updatedAt,\n      session_plan_id: session.session_plan_id,\n    };\n    for (const key in session.plans) {\n      if (Object.prototype.hasOwnProperty.call(session.plans, key)) {\n        const element = session.plans[key];\n        if (thisPlan.type_key === element.type_key) {\n          if (thisPlan.type_status === SessionPlanTypeStatus.OPEN) {\n            newData.plans.push({\n              type_id: thisPlan.type_id,\n              type_title: thisPlan.type_title,\n              type_key: thisPlan.type_key,\n              type_status: SessionPlanTypeStatus.CLOSED,\n              start_date: thisPlan.start_date,\n              end_date: thisPlan.end_date,\n              allowed_claim_level: thisPlan.allowed_claim_level,\n              _id: thisPlan._id,\n              history: thisPlan.history,\n            });\n          } else {\n            newData.plans.push({\n              type_id: thisPlan.type_id,\n              type_title: thisPlan.type_title,\n              type_key: thisPlan.type_key,\n              type_status: SessionPlanTypeStatus.OPEN,\n              start_date: thisPlan.start_date,\n              end_date: thisPlan.end_date,\n              allowed_claim_level: thisPlan.allowed_claim_level,\n              _id: thisPlan._id,\n              history: thisPlan.history,\n            });\n          }\n        } else {\n          newData.plans.push(element);\n        }\n      }\n    }\n\n    console.log(\"====================================\");\n    console.log({ newData });\n    console.log(\"====================================\");\n\n    this.setState({ loadingRequest: thisPlan.type_key });\n    try {\n      const res = await axios.put<SessionPlanInterface>(\n        `${API.CLAIMING}/session/${session.session_plan_id}`,\n        newData\n      );\n      this.props.updateSessionPlan(res.data);\n      this.props.setViewThisSession(res.data);\n      this.props.PushPopupAlert({\n        title: `Session ${newState}d successfully`,\n        theme: PopupAlertTheme.info,\n      });\n      this.setState({ loadingRequest: \"\" });\n      console.log(\"updateSessionPlan: \", res);\n    } catch (error) {\n      console.error({ error: errorToText(error) });\n      this.props.PushPopupAlert({\n        title: errorToText(error),\n        theme: PopupAlertTheme.warning,\n      });\n    }\n  };\n\n  render() {\n    return (\n      <table className=\"w-full bg-white shadow p-5\" id=\"session_content\">\n        <thead className=\"bg-white border-b-2 border-gray-300 text-gray-600 font-bold text-sm\">\n          <tr>\n            <td className=\"p-2\">#</td>\n            <td className=\"p-2\">Plan Type</td>\n            <td className=\"p-2\">Start Date</td>\n            <td className=\"p-2\">End date</td>\n            {this.props.viewThisSession.is_active && (\n              <td className=\"p-2\" colSpan={2}>\n                Status\n              </td>\n            )}\n          </tr>\n        </thead>\n        <tbody>\n          {/* WHILE DATA FOUND ====================== */}\n          {this.props.viewThisSession.plans.map((item, index) => (\n            <tr\n              key={index + item._id}\n              className={`border-b border-gray-200 hover:bg-gray-100`}\n            >\n              <td className=\"p-2 text-left whitespace-nowrap\">{index + 1}</td>\n              <td className=\"p-2 text-left\">\n                <span className=\"text-lg\">\n                  {getPlanTypeByKey(item.type_key) &&\n                    capitalizeFirstLetter(\n                      getPlanTypeByKey(item.type_key)!.type_title\n                    )}\n                </span>\n              </td>\n              <td className=\"p-2 text-left\">{DATE(item.start_date)}</td>\n              <td className=\"p-2 text-left\">{DATE(item.end_date)}</td>\n              {this.props.viewThisSession.is_active && (\n                <td>\n                  {isPlanActive(this.props.viewThisSession, item) === \"OPEN\" ? (\n                    <span className={`px-2 py-1 font-semibold text-green-700`}>\n                      Open\n                    </span>\n                  ) : isPlanActive(this.props.viewThisSession, item) ===\n                    \"WAITING\" ? (\n                    <span className={`px-2 py-1 font-semibold text-gray-700`}>\n                      Waiting\n                    </span>\n                  ) : (\n                    <span className={`px-2 py-1 font-semibold text-red-700`}>\n                      Closed\n                    </span>\n                  )}\n                </td>\n              )}\n              {this.props.viewThisSession.is_active && (\n                <td>\n                  {isActivationAllowed(item) && (\n                    <div className=\"flex items-center justify-center gap-1\">\n                      <div\n                        className={`relative ${\n                          this.state.loadingRequest.length > 0\n                            ? \"cursor-not-allowed\"\n                            : \"cursor-pointer\"\n                        }`}\n                        title={\n                          item.type_status === SessionPlanTypeStatus.OPEN\n                            ? \"Deactivating session\"\n                            : \"Activating session\"\n                        }\n                        onClick={() =>\n                          this.state.loadingRequest.length <= 0 &&\n                          this.handlePlanActivation(\n                            this.props.viewThisSession,\n                            item\n                          )\n                        }\n                      >\n                        <span className=\"block w-14 h-8 bg-gray-100 rounded-full shadow-inner\"></span>\n                        <span\n                          className={`absolute block w-6 h-6 mt-1 ml-1 rounded-full shadow inset-y-0 left-0 focus-within:shadow-outline transition-transform duration-500 ease-in-out ${\n                            item.type_status === SessionPlanTypeStatus.CLOSED\n                              ? \"bg-red-500\"\n                              : \"bg-green-500 transform translate-x-full\"\n                          }`}\n                        ></span>\n                      </div>\n                      {this.state.loadingRequest === item.type_key && (\n                        <VscLoading className=\"animate__animated animate__rotateIn animate__infinite\" />\n                      )}\n                    </div>\n                  )}\n                </td>\n              )}\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    );\n  }\n}\n\nexport default React.memo(connect(null, {\n  updateSessionPlan,\n  PushPopupAlert,\n})(SessionDetails));\n","import React from \"react\";\nimport { DocumentClaimUser } from \"../../../actions/claiming\";\nimport { DocumentReducerInterface } from \"../../../reducers/document\";\nimport { capitalizeFirstLetter } from \"../../../shared/dataTest\";\nimport { API } from \"../../../utils/api\";\nimport { ClaimGetDocTitle } from \"./ClaimForm\";\n\ntype DocFormViewProps = {\n  thisDoc: DocumentClaimUser;\n  setChooseClaimFile: (value: boolean) => void;\n  setClaimFileId: (value: string) => void;\n  setViewThisFile: (value: string) => void;\n  documentCategories: DocumentReducerInterface;\n};\n\nconst DocFormView: React.FC<DocFormViewProps> = (props) => {\n  return (\n    <section className=\"\">\n      <div className=\"w-full bg-gray-100 px-4 py-1 animate__animated animate__fadeIn\">\n        <div className=\"flex flex-col mb-2\">\n          <div className=\"flex items-center justify-between\">\n            <span className=\"text-blue-600 font-bold text-xl\">\n              {ClaimGetDocTitle(props.documentCategories, props.thisDoc).main}\n            </span>\n            <button\n              type=\"button\"\n              className=\"btn btn-blue\"\n              onClick={() => {\n                props.setChooseClaimFile(false);\n                props.setClaimFileId(props.thisDoc.doc_id);\n                props.setViewThisFile(\"\");\n              }}\n            >\n              Choose\n            </button>\n          </div>\n          <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n            <span className={`italic`}>Status:</span>\n            <span className=\"font-bold text-yellow-900 rounded px-3 py-1\">\n              {capitalizeFirstLetter(props.thisDoc.validation_status)}\n            </span>\n          </div>\n          <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n            <span className={`italic`}>Evaluated by:</span>\n            <span className=\"font-semibold\">\n              ################\n              {/* {loadingUsers ? (\n                <div className=\"w-24 h-3 rounded bg-gray-200 animate__animated animate__pulse animate__delay-5s animate__infinite\"></div>\n              ) : getUserDocuments(\n                  props.userList,\n                  props.thisDoc.validated_by.user_id\n                ) ? (\n                getUserDocuments(\n                  props.userList,\n                  props.thisDoc.validated_by.user_id\n                )!.user.user_info.fname +\n                \" \" +\n                getUserDocuments(\n                  props.userList,\n                  props.thisDoc.validated_by.user_id\n                )!.user.user_info.lname\n              ) : (\n                \"-\"\n              )} */}\n            </span>\n          </div>\n          <div className=\"flex items-start gap-2 text-sm text-gray-600\">\n            <span className={`italic`}>Reason:</span>\n            <span className=\"font-normal\">\n              {props.thisDoc.validated_by.comment}\n            </span>\n          </div>\n          <div className=\"w-full my-1\">\n            <img\n              src={`${API.AUTH_FILES}/${props.thisDoc.files}`}\n              alt=\"doc file\"\n              className={`w-full`}\n            />\n          </div>\n        </div>\n      </div>\n    </section>\n  );\n};\n\nexport default React.memo(DocFormView);\n","import React, { useState } from \"react\";\nimport { MdSearch } from \"react-icons/md\";\nimport { ApplicationSession } from \"../../../actions\";\nimport {\n  CandidateClaimInterface,\n  claimApplicationsInterface,\n} from \"../../../interfaces\";\nimport { ApplicationStates } from \"../../../interfaces/application\";\nimport { isClaimAllowed } from \"./ClaimForm\";\n\nconst getRejectedApplicants = (\n  applicationData: claimApplicationsInterface[]\n): claimApplicationsInterface[] => {\n  return applicationData.filter(\n    (item) => item.application_status === ApplicationStates.Rejected\n  );\n};\n\nexport const searchApplication = (\n  objList: claimApplicationsInterface[],\n  text: any\n): claimApplicationsInterface[] => {\n  if (undefined === text || text === \"\") return objList;\n  return objList.filter((product) => {\n    let flag;\n    // let dataKeys = product;\n\n    for (let prop in product) {\n      flag = false;\n      if (prop === \"position\") {\n        flag =\n          product.position.position_title\n            .toString()\n            .toLowerCase()\n            .indexOf(text.toLowerCase()) > -1;\n      }\n      if (flag) break;\n    }\n    return flag;\n  });\n  // return objList.filter((product) =>\n  //   product.position.position_title.includes(text)\n  // );\n};\n\ntype FormApplicationListProps = {\n  setChooseClaimFile: (value: boolean) => void;\n  setClaimFileId: (value: string) => void;\n  setViewThisFile: (value: string) => void;\n  claimFileId: string;\n  viewThisFile: string;\n  candidateApplications: claimApplicationsInterface[];\n  myClaims: CandidateClaimInterface[];\n  activeSession: ApplicationSession;\n};\n\nconst FormApplicationList: React.FC<FormApplicationListProps> = (props) => {\n  const [searchInput, setSearchInput] = useState<string>(\"\");\n  return (\n    <section>\n      {/* SEARCH PART */}\n      <div className=\"flex items-center w-full my-1\">\n        <MdSearch className=\"w-6 h-6 absolute ml-2\" />\n        <input\n          type=\"text\"\n          placeholder=\"Search\"\n          className=\"focus:border-2 h-7 ml-1 pl-9 mr-2 bg-gray-100 focus:border-gray-700 w-full rounded\"\n          onChange={(e) => setSearchInput(e.target.value)}\n          value={searchInput}\n          disabled={\n            getRejectedApplicants(props.candidateApplications).filter((item) =>\n              isClaimAllowed(\n                props.myClaims,\n                props.activeSession.session_plan_id,\n                item.application_id\n              )\n            ).length > 0\n              ? false\n              : true\n          }\n        />\n        <button\n          className=\"bg-red-200 text-red-700 py-1 px-2 mr-1 rounded text-sm focus:outline-none\"\n          type=\"button\"\n          onClick={() => {\n            props.setChooseClaimFile(false);\n            props.setViewThisFile(\"\");\n          }}\n        >\n          Close\n        </button>\n      </div>\n      {/* END SEARCH PART ///////////////// */}{\" \"}\n      {/* searchData(props.candidateApplications, searchInput) */}\n      <div className=\"w-full h-52 mt-2 overflow-y-auto divide-y divide-gray-300\">\n        {getRejectedApplicants(props.candidateApplications).filter((item) =>\n          isClaimAllowed(\n            props.myClaims,\n            props.activeSession.session_plan_id,\n            item.application_id\n          )\n        ).length > 0 ? (\n          searchApplication(\n            getRejectedApplicants(props.candidateApplications).filter((item) =>\n              isClaimAllowed(\n                props.myClaims,\n                props.activeSession.session_plan_id,\n                item.application_id\n              )\n            ),\n            searchInput\n          ).map((item, index) => (\n            <div\n              className={`group flex items-center justify-between my-1 hover:bg-gray-100 ${\n                props.claimFileId === item.application_id &&\n                \"bg-blue-50 border-l-4 border-blue-500\"\n              }`}\n              key={index + item.application_id}\n            >\n              <div\n                className=\"p-1 w-full mr-2 cursor-pointer\"\n                onClick={() => {\n                  props.setChooseClaimFile(false);\n                  props.setClaimFileId(item.application_id);\n                }}\n              >\n                <p className=\"text-base font-medium text-black\">\n                  {item.position.position_title}\n                </p>\n              </div>\n              <button\n                type=\"button\"\n                className=\"bg-blue-200 hover:bg-blue-300 text-blue-700 group-hover:text-blue-800 py-1 px-2 mr-1 rounded text-sm\"\n                onClick={() => {\n                  props.setViewThisFile(item.application_id);\n                }}\n              >\n                View\n              </button>\n            </div>\n          ))\n        ) : (\n          <div className=\"text-center p-3\">\n            <p className=\"text-base font-medium text-black\">\n              No Rejected document available\n            </p>\n          </div>\n        )}\n      </div>\n    </section>\n  );\n};\n\nexport default React.memo(FormApplicationList);\n","import React, { useState } from \"react\";\nimport { MdSearch } from \"react-icons/md\";\nimport { DocumentReducerInterface } from \"../../../reducers/document\";\nimport { ClaimGetDocTitle, isClaimAllowed } from \"./ClaimForm\";\nimport { DocumentClaimUser } from \"../../../actions/claiming\";\nimport { CategorySubcategoryData } from \"../../../interfaces/candidatesInterfaces\";\nimport { CandidateClaimInterface } from \"../../../interfaces\";\nimport { ApplicationSession } from \"../../../actions\";\n\nexport interface DocumentTitleInterface {\n  category_id: string;\n  company: string;\n  description: string;\n  email: string;\n  end_year: string;\n  files: string;\n  names: string;\n  phone_number: string;\n  school: {\n    school_name: string;\n    _id: string;\n    status: boolean;\n    education_category_id?: {\n      education_category_title: string;\n      _id: string;\n    };\n    district_id?: {\n      district_name: string;\n      _id: string;\n    };\n  } | null;\n  school_id: string;\n  start_year: string;\n  sub_category_id: string;\n  title: string;\n  year: string;\n  validation_status: string;\n  validated_by: {\n    user_id: string;\n    comment: string;\n    validation_status: string;\n    date: string;\n  };\n  doc_id: string;\n  doc_title: string;\n  category_subcategory_data: CategorySubcategoryData | null;\n}\n\nexport const DocumentTitleData = (\n  documentData: DocumentClaimUser[],\n  documentCategories: DocumentReducerInterface\n): DocumentTitleInterface[] | [] => {\n  let documentTemp: DocumentTitleInterface[] = [];\n  for (let i in documentData) {\n    documentTemp.push({\n      category_id: documentData[i].category_id,\n      company: documentData[i].company,\n      description: documentData[i].description,\n      email: documentData[i].email,\n      end_year: documentData[i].end_year,\n      files: documentData[i].files,\n      names: documentData[i].names,\n      phone_number: documentData[i].phone_number,\n      school: documentData[i].school,\n      school_id: documentData[i].school_id,\n      start_year: documentData[i].start_year,\n      sub_category_id: documentData[i].sub_category_id,\n      title: documentData[i].title,\n      year: documentData[i].year,\n      validation_status: documentData[i].validation_status,\n      validated_by: documentData[i].validated_by,\n      doc_id: documentData[i].doc_id,\n      doc_title: ClaimGetDocTitle(documentCategories, documentData[i]).main,\n      category_subcategory_data: documentData[i].category_subcategory_data,\n    });\n  }\n  return documentTemp;\n};\n\nconst getRejectedDocuments = (\n  documentData: DocumentClaimUser[]\n): DocumentClaimUser[] => {\n  console.log({\n    rejected: documentData.filter(\n      (item) => item.validation_status === \"rejected\"\n    ),\n  });\n  return documentData.filter((item) => item.validation_status === \"rejected\");\n};\n\nexport const searchDocuments = (\n  objList: DocumentTitleInterface[],\n  text: any\n): DocumentTitleInterface[] => {\n  if (undefined === text || text === \"\") return objList;\n  return objList.filter(\n    (product) =>\n      product.doc_title.toString().toLowerCase().indexOf(text.toLowerCase()) >\n      -1\n  );\n};\n\ntype FormDocumentListProps = {\n  setChooseClaimFile: (value: boolean) => void;\n  setClaimFileId: (value: string) => void;\n  setViewThisFile: (value: string) => void;\n  claimFileId: string;\n  viewThisFile: string;\n  candidateDocuments: DocumentClaimUser[];\n  documentCategories: DocumentReducerInterface;\n  myClaims: CandidateClaimInterface[];\n  activeSession: ApplicationSession;\n};\n\nconst FormDocumentList: React.FC<FormDocumentListProps> = (props) => {\n  const [searchInput, setSearchInput] = useState<string>(\"\");\n  return (\n    <section>\n      {/* SEARCH PART */}\n      <div className=\"flex items-center w-full my-1\">\n        <MdSearch className=\"w-6 h-6 absolute ml-2\" />\n        <input\n          type=\"text\"\n          placeholder=\"Search\"\n          className=\"focus:border-2 h-7 ml-1 pl-9 mr-2 bg-gray-100 focus:border-gray-700 w-full rounded\"\n          onChange={(e) => setSearchInput(e.target.value)}\n          value={searchInput}\n          disabled={\n            DocumentTitleData(\n              getRejectedDocuments(props.candidateDocuments),\n              props.documentCategories\n            ).filter((item) =>\n              isClaimAllowed(\n                props.myClaims,\n                props.activeSession.session_plan_id,\n                item.doc_id\n              )\n            ).length > 0\n              ? false\n              : true\n          }\n        />\n        <button\n          className=\"bg-red-200 text-red-700 py-1 px-2 mr-1 rounded text-sm focus:outline-none\"\n          type=\"button\"\n          onClick={() => {\n            props.setChooseClaimFile(false);\n            props.setViewThisFile(\"\");\n          }}\n        >\n          Close\n        </button>\n      </div>\n      {/* END SEARCH PART ///////////////// */}\n      <div className=\"w-full h-52 mt-2 overflow-y-auto divide-y divide-gray-300\">\n        {props.candidateDocuments.filter((item) =>\n          isClaimAllowed(\n            props.myClaims,\n            props.activeSession.session_plan_id,\n            item.doc_id\n          )\n        ).length > 0 ? (\n          searchDocuments(\n            DocumentTitleData(\n              getRejectedDocuments(props.candidateDocuments),\n              props.documentCategories\n            ).filter((item) =>\n              isClaimAllowed(\n                props.myClaims,\n                props.activeSession.session_plan_id,\n                item.doc_id\n              )\n            ),\n            searchInput\n          ).map((doc, index) => (\n            <section key={index + doc.doc_id}>\n              <div\n                className={`group flex items-center justify-between my-1 hover:bg-gray-100 ${\n                  props.claimFileId === doc.doc_id &&\n                  \"bg-blue-50 border-l-4 border-blue-500\"\n                }`}\n              >\n                <div\n                  className=\"p-1 w-full mr-2 cursor-pointer\"\n                  onClick={() => {\n                    props.setChooseClaimFile(false);\n                    props.setClaimFileId(doc.doc_id);\n                  }}\n                >\n                  <p className=\"text-base font-medium text-black\">\n                    {ClaimGetDocTitle(props.documentCategories, doc).main}\n                  </p>\n                </div>\n                <button\n                  type=\"button\"\n                  className=\"bg-blue-200 hover:bg-blue-300 text-blue-700 group-hover:text-blue-800 py-1 px-2 mr-1 rounded text-sm\"\n                  onClick={() => {\n                    props.viewThisFile === doc.doc_id\n                      ? props.setViewThisFile(\"\")\n                      : props.setViewThisFile(doc.doc_id);\n                  }}\n                >\n                  {props.viewThisFile === doc.doc_id ? \"Close\" : \"View\"}\n                </button>\n              </div>\n            </section>\n          ))\n        ) : (\n          <div className=\"text-center p-3\">\n            <p className=\"text-base font-medium text-black\">\n              No Rejected document available\n            </p>\n          </div>\n        )}\n      </div>\n    </section>\n  );\n};\n\nexport default React.memo(FormDocumentList);\n","import React, { Fragment, useEffect, useState } from \"react\";\nimport { BiExport, BiSort } from \"react-icons/bi\";\nimport { FiEdit } from \"react-icons/fi\";\nimport { ImFilesEmpty } from \"react-icons/im\";\nimport {\n  MdCheckBox,\n  MdCheckBoxOutlineBlank,\n  MdHistory,\n  MdRadioButtonChecked,\n  MdRadioButtonUnchecked,\n} from \"react-icons/md\";\nimport { connect } from \"react-redux\";\nimport {\n  Auth,\n  loadEducationCategories,\n  PushPopupAlert,\n  schoolLevelsStoreInterface,\n} from \"../../../actions\";\nimport {\n  getAllClaims,\n  getAllApplications,\n  setSelectedClaimType,\n  GetClaimingTypes,\n} from \"../../../actions/claiming\";\nimport { PopupAlertData } from \"../../../components/Alert/Popup\";\nimport {\n  generatePDF,\n  reportSettingsInterface,\n} from \"../../../components/DownloadPDF/rest\";\nimport Loading from \"../../../components/Loading/Loading\";\nimport Modal, { ModalSize, Themes } from \"../../../components/Modal/Modal\";\nimport {\n  SideNavigation,\n  MainItem,\n} from \"../../../components/Navigation/SideNavigation\";\nimport {\n  CandidateClaimInterface,\n  claimReportContentInterface,\n  claimReportContentKeyInterface,\n  ClaimToPrintInterface,\n} from \"../../../interfaces/claimings\";\nimport { PopupAlertTheme } from \"../../../interfaces/popupAlert\";\nimport { StoreState } from \"../../../reducers\";\nimport { ClaimingReducerType } from \"../../../reducers/claiming\";\nimport { DocumentReducerInterface } from \"../../../reducers/document\";\nimport ExportToExcel from \"../../../utils/ExportToExcel\";\nimport { DATE, sortThisArray } from \"../../../utils/functions\";\nimport { ClaimTypesEnum, whichClaimType } from \"../../Claimings/Candidate\";\nimport TableLoading from \"../../../components/Loading/TableLoading\";\nimport {\n  education_category,\n  PlansTypeKeys,\n  SessionPlanInterface,\n} from \"../../../interfaces\";\nimport { GetAllSessionPlans } from \"../../../actions/session\";\nimport {\n  capitalizeFirstLetter,\n  isEmptyOrSpaces,\n} from \"../../../shared/dataTest\";\nimport ChooseSession from \"../../SessionSettings/ChooseSession\";\nimport NoSession from \"../../SessionSettings/NoSession\";\n\nexport const reportClaimType = (\n  type: PlansTypeKeys | \"all\"\n): ClaimTypesEnum | \"all\" => {\n  let result: ClaimTypesEnum | \"all\" = \"all\";\n  switch (type) {\n    case PlansTypeKeys.APPLICATION:\n      result = ClaimTypesEnum.application;\n      break;\n    case PlansTypeKeys.DOCUMENT_VALIDATION:\n      result = ClaimTypesEnum.document;\n      break;\n    case PlansTypeKeys.EXAMINATION:\n      result = ClaimTypesEnum.exam;\n      break;\n    case PlansTypeKeys.MARKS_PUBLICATION:\n      result = ClaimTypesEnum.marks_publication;\n      break;\n    case PlansTypeKeys.PLACEMENT_TRANSFER:\n      result = ClaimTypesEnum.placement;\n      break;\n    default:\n      result = \"all\";\n      break;\n  }\n\n  return result;\n};\n\nconst searchData = (\n  objList: ClaimToPrintInterface[],\n  text: string\n): ClaimToPrintInterface[] => {\n  if (undefined === text || text === \"\") return objList;\n  return objList.filter((product) => {\n    let flag;\n    // let dataKeys = product;\n\n    for (let prop in product) {\n      flag = false;\n      if (\n        prop === \"names\" ||\n        prop === \"gender\" ||\n        prop === \"national_id\" ||\n        prop === \"phone\" ||\n        prop === \"email\" ||\n        prop === \"claim_title\" ||\n        prop === \"claim_type\" ||\n        prop === \"claim_level\" ||\n        prop === \"education_category\" ||\n        prop === \"claim_session\" ||\n        prop === \"date\" ||\n        prop === \"decision\"\n      ) {\n        if (product[prop]) {\n          flag =\n            product[prop]!.toString()\n              .toLowerCase()\n              .indexOf(text.toLowerCase()) > -1;\n        }\n      }\n      if (flag) break;\n    }\n    return flag;\n  });\n};\n\nconst defaultReportContent: claimReportContentInterface[] = [\n  {\n    key: claimReportContentKeyInterface.names,\n    title: \"Applicant Names\",\n    status: true,\n  },\n  {\n    key: claimReportContentKeyInterface.national_id,\n    title: \"National ID\",\n    status: true,\n  },\n  { key: claimReportContentKeyInterface.gender, title: \"Gender\", status: true },\n  { key: claimReportContentKeyInterface.phone, title: \"Phone\", status: true },\n  {\n    key: claimReportContentKeyInterface.claim_session,\n    title: \"Claim Session\",\n    status: true,\n  },\n  {\n    key: claimReportContentKeyInterface.education_category,\n    title: \"Education Institute\",\n    status: true,\n  },\n  {\n    key: claimReportContentKeyInterface.date,\n    title: \"Claim Date\",\n    status: true,\n  },\n  {\n    key: claimReportContentKeyInterface.decision,\n    title: \"Decision\",\n    status: true,\n  },\n  {\n    key: claimReportContentKeyInterface.claim_title,\n    title: \"Claim Title\",\n    status: true,\n  },\n  {\n    key: claimReportContentKeyInterface.claim_type,\n    title: \"Claim Type\",\n    status: true,\n  },\n  {\n    key: claimReportContentKeyInterface.claim_level,\n    title: \"Claim Level\",\n    status: true,\n  },\n];\n\ntype AppProps = {\n  auth: Auth;\n  application_sessions: SessionPlanInterface[] | null;\n  claiming: ClaimingReducerType;\n  documentReducer: DocumentReducerInterface;\n  // systemPositions: PositionAPI[] | null;\n  // courses: course[] | null;\n  schoolLevels: schoolLevelsStoreInterface;\n  loadEducationCategories: (callback: (loading: boolean) => void) => void;\n  // loadCourses: Function;\n  // getAllAnswers: Function;\n  setSelectedClaimType: Function;\n  // getPositions: Function;\n  getAllClaims: Function;\n  GetClaimingTypes: Function;\n  // getAllApplications: Function;\n  GetAllSessionPlans: Function;\n  // getDocumentCategory: Function;\n  // getDocumentSubCategory: Function;\n  // getDocumentFields: Function;\n  PushPopupAlert: (alert: PopupAlertData) => void;\n};\n\nconst _ClaimingReport: React.FC<AppProps> = (props) => {\n  const [thisPeriod, setThisPeriod] = useState<SessionPlanInterface | null>(\n    null\n  );\n  const [thisLevel, setThisLevel] = useState<number | \"all\">(\"all\");\n  const [loading, setLoading] = useState<boolean>(true);\n  const [loadingSession, setLoadingSession] = useState<boolean>(true);\n  const [periodChanged, setPeriodChanged] = useState<boolean>(false);\n  const [loadingClaims, setLoadingClaims] = useState<boolean>(true);\n  const [loadingInstitutes, setLoadingInstitutes] = useState<boolean>(true);\n  const [downloading, setDownloading] = useState<boolean>(false);\n  const [claimToPrint, setClaimToPrint] = useState<\n    ClaimToPrintInterface[] | null\n  >();\n\n  const [sortProperty, setSortProperty] = useState<string>(\"\");\n  const [isSorted, setIsSorted] = useState<boolean>(false);\n  const [sortOrder, setSortOrder] = useState<\"ASC\" | \"DESC\">(\"ASC\");\n  const [searchInput, setSearchInput] = useState<string>(\"\");\n  const [generateReportModal, setGenerateReportModal] = useState<{\n    reportType: \"EXCEL\" | \"PDF\";\n    status: boolean;\n  } | null>(null);\n  const [reportTitle, setReportTitle] = useState<string>(\"\");\n  const [reportContent, setReportContent] =\n    useState<claimReportContentInterface[]>(defaultReportContent);\n  const [selectAll, setSelectAll] = useState<boolean>(true);\n  const [formError, setFormError] = useState<{\n    element: string;\n    msg: string;\n  } | null>(null);\n  const [selectPeriod, setSelectPeriod] = useState<boolean>(false);\n  const [thisEducation, setThisEducation] = useState<\n    education_category | \"all\"\n  >(\"all\");\n\n  useEffect(() => {\n    // LOADING EDUCATION CATEGORY =================================\n    if (\n      props.schoolLevels.education_categories === null ||\n      props.schoolLevels.education_categories.length === 0\n    ) {\n      props.loadEducationCategories(setLoadingInstitutes);\n    } else {\n      setLoadingInstitutes(false);\n    }\n    // END LOADING EDUCATION CATEGORY =================================\n    // LOADING CLAIM TYPES ========================================\n    if (props.claiming.claimTypes === null) {\n      props.GetClaimingTypes((status: boolean, msg: string) => {\n        if (status === false) {\n          if (msg.length > 0) {\n            props.PushPopupAlert({\n              title: msg,\n              theme: PopupAlertTheme.danger,\n            });\n          }\n        }\n      });\n    }\n    // END LOADING CLAIM TYPES ========================================\n    // LOADING APPLICATION SESSION ====================================\n    if (props.application_sessions === null) {\n      props.GetAllSessionPlans((status: boolean, msg: string) => {\n        if (!status) {\n          setLoadingSession(false);\n          setLoading(false);\n          if (msg.length) {\n            props.PushPopupAlert({\n              title: msg,\n              theme: PopupAlertTheme.danger,\n            });\n          }\n        }\n      });\n    } else if (loadingSession) {\n      setLoading(false);\n      setLoadingSession(false);\n    }\n\n    // SETTING ACTIVE SESSION ==========================\n    if (\n      thisPeriod === null &&\n      !loadingSession &&\n      props.application_sessions &&\n      props.application_sessions.length > 0\n    ) {\n      let thisSession = props.application_sessions.find(\n        (item) => item.is_active === true\n      );\n      setThisPeriod(thisSession ? thisSession : props.application_sessions[0]);\n      // if (props.claiming.allAnswer === null) {\n      //   props.getAllAnswers(\n      //     thisSession\n      //       ? thisSession.session_plan_id\n      //       : props.application_sessions[0].session_plan_id,\n      //     (status: boolean, msg: string) => {\n      //       setLoading(status);\n      //       if (!status && msg.length) {\n      //         props.PushPopupAlert({\n      //           title: msg,\n      //           theme: PopupAlertTheme.danger,\n      //         });\n      //       }\n      //     }\n      //   );\n      // }\n    }\n\n    // LOADING DOCUMENT CATEGORIES ==========================\n    // if (!props.documentReducer.documentCategory && loadingDocuments) {\n    //   props.getDocumentCategory();\n    //   setLoadingDocuments(false);\n    // } else if (loadingDocuments) {\n    //   setLoadingDocuments(false);\n    // }\n    // LOADING DOCUMENT CLARIFICATIONS ==========================\n    // if (!props.documentReducer.documentSubCategory && loadingClarifications) {\n    //   props.getDocumentSubCategory();\n    //   setLoadingClarifications(false);\n    // } else if (loadingClarifications) {\n    //   setLoadingClarifications(false);\n    // }\n    // LOADING DOCUMENT FIELDS ==========================\n    // if (!props.documentReducer.documentFields && loadingFields) {\n    //   props.getDocumentFields();\n    //   setLoadingFields(false);\n    // } else if (loadingFields) {\n    //   setLoadingFields(false);\n    // }\n\n    // LOADING CLAIMING OF CURRENT CANDIDATES ================================\n    if (props.claiming.allClaims === null && thisPeriod !== null) {\n      props.getAllClaims(\n        2,\n        thisPeriod.session_plan_id,\n        (status: boolean, msg: string) => {\n          !status && setLoadingClaims(status);\n          if (status === false && msg.length) {\n            props.PushPopupAlert({\n              title: msg,\n              theme: PopupAlertTheme.danger,\n            });\n          }\n        }\n      );\n    } else if (thisPeriod && loadingClaims) {\n      setLoadingClaims(false);\n    }\n\n    // LOADING CLAIMING OF CURRENT CANDIDATES ================================\n    // if (props.claiming.allApplications === null && thisPeriod !== null) {\n    //   props.getAllApplications(\n    //     thisPeriod.session_plan_id,\n    //     (status: boolean, msg: string) => {\n    //       !status && setLoadingApplications(status);\n    //       if (status === false && msg.length) {\n    //         props.PushPopupAlert({\n    //           title: msg,\n    //           theme: PopupAlertTheme.danger,\n    //         });\n    //       }\n    //     }\n    //   );\n    // } else if (thisPeriod && loadingApplications) {\n    //   setLoadingApplications(false);\n    // }\n\n    // if (props.systemPositions === null) {\n    //   props.getPositions((status: boolean, msg: string) => {\n    //     setLoadingPosition(status);\n    //     console.log({ status: status, msg: msg });\n    //     if (msg.length) {\n    //       props.PushPopupAlert({\n    //         title: msg,\n    //         theme: PopupAlertTheme.danger,\n    //       });\n    //     }\n    //   });\n    // } else if (loadingPosition) {\n    //   setLoadingPosition(false);\n    // }\n\n    // LOADING COURSE ====================================\n    // if (\n    //   props.courses === null ||\n    //   (props.courses.length === 0 && loadingCourses)\n    // ) {\n    //   props.loadCourses(setLoadingCourses);\n    // } else if (loadingCourses) {\n    //   setLoadingCourses(false);\n    // }\n  }, [loadingClaims, loadingSession, props, thisPeriod]);\n\n  if (loading === true) {\n    return (\n      <div className=\"text-center mt-7 font-bold text-4xl text-gray-400 animate-pulse\">\n        Loading Data...\n      </div>\n    );\n  }\n\n  if (props.application_sessions && props.application_sessions.length === 0) {\n    return <NoSession />;\n  }\n\n  // const displayClaimTitle = (thisClaim: CandidateClaimInterface): string => {\n  //   let result: string = thisClaim.claiming_on_id;\n  //   if (thisClaim.type_key === PlansTypeKeys.DOCUMENT_VALIDATION) {\n  //     result =\n  //       thisClaim.userDetails.details.filter(\n  //         (item) => item.validation_status !== \"waiting\"\n  //       ).length > 0\n  //         ? adminDisplayClaimTitle(\n  //             props.documentReducer,\n  //             thisClaim.userDetails.details.filter(\n  //               (item) => item.validation_status !== \"waiting\"\n  //             ),\n  //             thisClaim\n  //           )\n  //         : \"Document not found\";\n  //   }\n  //   if (thisClaim.type_key === PlansTypeKeys.APPLICATION) {\n  //     if (props.claiming.allApplications) {\n  //       let thisApplication = props.claiming.allApplications.find(\n  //         (item) => item._id === thisClaim.claiming_on_id\n  //       );\n  //       if (\n  //         thisApplication &&\n  //         props.claiming.allApplications &&\n  //         props.systemPositions\n  //       ) {\n  //         let thisPosition = props.systemPositions.find(\n  //           (item) => item.position_id === thisApplication!.position\n  //         );\n  //         if (thisPosition) {\n  //           result = thisPosition.position_title;\n  //         } else {\n  //           result = \"Application not found\";\n  //         }\n  //       }\n  //     }\n  //   }\n\n  //   if (\n  //     thisClaim.type_key === PlansTypeKeys.EXAMINATION &&\n  //     props.courses &&\n  //     props.claiming.allAnswer\n  //   ) {\n  //     let thisAnswer = getCourseIdBySheetId(\n  //       props.claiming.allAnswer,\n  //       thisClaim.claiming_on_id\n  //     );\n  //     if (thisAnswer && getCourseById(props.courses, thisAnswer.course)) {\n  //       result =\n  //         \"Exam of \" +\n  //         getCourseById(props.courses, thisAnswer.course)!.course_name;\n  //     } else {\n  //       result = \"Unknown exam\";\n  //     }\n  //   }\n\n  //   return result;\n  // };\n\n  // const getClaimInstitute = (\n  //   thisClaim: CandidateClaimInterface\n  // ): string | null => {\n  //   if (thisClaim.type_key === PlansTypeKeys.DOCUMENT_VALIDATION) {\n  //     return null;\n  //   }\n  //   // if (thisClaim.type_key === PlansTypeKeys.APPLICATION) {\n  //   //   if (props.claiming.allApplications) {\n  //   //     let thisApplication = props.claiming.allApplications.find(\n  //   //       (item) => item._id === thisClaim.claiming_on_id\n  //   //     );\n  //   //     if (\n  //   //       thisApplication &&\n  //   //       props.claiming.allApplications &&\n  //   //       props.systemPositions\n  //   //     ) {\n  //   //       // return thisApplication.\n  //   //       let thisPosition = props.systemPositions.find(\n  //   //         (item) => item.position_id === thisApplication!.position\n  //   //       );\n  //   //       if (thisPosition) {\n  //   //         return thisPosition.education_institute_id.education_institute_id;\n  //   //       }\n  //   //     }\n  //   //   }\n  //   // }\n\n  //   return null;\n  // };\n\n  const onPeriodChange = (period_id: string) => {\n    setPeriodChanged(true);\n    props.getAllClaims(2, period_id, (status: boolean, msg: string) => {\n      !status && setPeriodChanged(false);\n      if (status === false && msg.length) {\n        props.PushPopupAlert({\n          title: msg,\n          theme: PopupAlertTheme.danger,\n        });\n      }\n    });\n  };\n\n  const isClaimTypeActive = (\n    selectedType: PlansTypeKeys | \"all\",\n    currentType: PlansTypeKeys | \"all\"\n  ): boolean => {\n    if (currentType === \"all\" && selectedType === \"all\") {\n      return true;\n    } else if (currentType !== \"all\" && selectedType !== \"all\") {\n      if (currentType === selectedType) {\n        return true;\n      }\n    }\n    return false;\n  };\n\n  const setSort = (thisProperty: string) => {\n    if (sortProperty === thisProperty && sortOrder === \"ASC\") {\n      setSortOrder(\"DESC\");\n    } else {\n      setSortOrder(\"ASC\");\n    }\n    setSortProperty(thisProperty);\n    setIsSorted(true);\n  };\n\n  const ClaimTypes = (\n    claims: ClaimToPrintInterface[]\n  ): {\n    title: string;\n    count: number;\n    type: PlansTypeKeys | \"all\";\n  }[] => {\n    let output: {\n      title: string;\n      count: number;\n      type: PlansTypeKeys | \"all\";\n    }[] = [{ title: \"All types\", count: claims.length, type: \"all\" }];\n\n    Object.values(PlansTypeKeys).forEach((PlansKey) => {\n      if (PlansKey !== PlansTypeKeys.MARKS_PUBLICATION) {\n        output.push({\n          title: capitalizeFirstLetter(reportClaimType(PlansKey)),\n          count:\n            claims.length > 0\n              ? claims.filter(\n                  (itm) => itm.claim_type === reportClaimType(PlansKey)\n                ).length\n              : 0,\n          type: PlansKey,\n        });\n      }\n    });\n\n    return output;\n  };\n\n  const ClaimLevels = (\n    claims: ClaimToPrintInterface[]\n  ): {\n    title: string;\n    count: number;\n    level: number | \"all\";\n  }[] => {\n    let output: {\n        title: string;\n        count: number;\n        level: number | \"all\";\n      }[] = [{ title: \"All levels\", count: claims.length, level: \"all\" }],\n      levels: number[] = [1, 2];\n    for (let i in levels) {\n      output.push({\n        title: \"Level \" + levels[i],\n        count: claims.filter((itm) => itm.claim_level === levels[i]).length,\n        level: levels[i],\n      });\n    }\n    return output;\n  };\n\n  const updateReportContent = (key: claimReportContentKeyInterface) => {\n    let index: number = reportContent.findIndex((item) => item.key === key);\n    let newArray: claimReportContentInterface[] = reportContent;\n    newArray[index].status = !newArray[index].status;\n    setReportContent(newArray);\n    let isSelectAllNeeded = newArray.find((item) => item.status === false);\n    if (isSelectAllNeeded) {\n      setSelectAll(false);\n    } else {\n      setSelectAll(true);\n    }\n\n    // UPDATE APPLICATION LIST FOR UPDATE ==============================\n    updateClaimToPrint();\n  };\n\n  const updateClaimToPrint = () => {\n    // UPDATE REPORT TITLE ========================\n    if (thisPeriod) {\n      let title = \"Claim Report \" + thisPeriod.session_plan_name;\n      // if (thisLevel!==\"all\") {\n      //   title = \"Claim Report - Level \"+thisLevel + thisPeriod.session_plan_name;\n      // }\n      setReportTitle(title);\n    }\n    // UPDATE CONTENT =============================\n    if (props.claiming.allClaims && props.claiming.claimTypes) {\n      let arrayNew: ClaimToPrintInterface[] = [];\n      let n: number = 1;\n      for (const key in props.claiming.allClaims) {\n        if (\n          Object.prototype.hasOwnProperty.call(props.claiming.allClaims, key)\n        ) {\n          for (const keyClaim in props.claiming.allClaims[key].claims) {\n            if (\n              Object.prototype.hasOwnProperty.call(\n                props.claiming.allClaims[key].claims,\n                keyClaim\n              )\n            ) {\n              const element = props.claiming.allClaims[key].claims[keyClaim];\n              const thisType = whichClaimType(props.claiming.allClaims[key]);\n              let dataArray: ClaimToPrintInterface = {\n                claim_id: n,\n                names:\n                  props.claiming.allClaims[key].userDetails.user_info.fname +\n                  \" \" +\n                  props.claiming.allClaims[key].userDetails.user_info.lname,\n                gender: props.claiming.allClaims[key].userDetails.user_info.sex\n                  ? \"Male\"\n                  : \"Female\",\n                national_id: props.claiming.allClaims[key].userDetails.n_id!,\n                phone: props.claiming.allClaims[key].userDetails.phone_number,\n                email: props.claiming.allClaims[key].userDetails.email,\n                claim_type: thisType ? thisType : \"\",\n                claim_level: element.level,\n                education_category: \"\",\n                claim_session: thisPeriod ? thisPeriod.session_plan_name : \"\",\n                date: DATE(element.createdAt),\n                decision: element.decision_taken_status\n                  ? element.decision_taken_status\n                  : \"PENDING\",\n                claim_title: props.claiming.allClaims[key].title,\n              };\n              for (const key in reportContent) {\n                if (Object.prototype.hasOwnProperty.call(reportContent, key)) {\n                  if (!reportContent[key].status) {\n                    delete dataArray[reportContent[key].key];\n                  }\n                }\n              }\n              arrayNew.push(dataArray);\n              n++;\n            }\n          }\n        }\n      }\n      setClaimToPrint(arrayNew);\n      arrayNew = [];\n      n = 1;\n    }\n  };\n\n  const FC_ClaimData = (\n    allClaims: CandidateClaimInterface[] | null\n  ): ClaimToPrintInterface[] | null => {\n    if (allClaims === null) return null;\n    let arrayNew: ClaimToPrintInterface[] = [];\n    let n: number = 1;\n    // LOOP IN ALL CLAIM ONE BY ONE ###########################\n    for (const key in allClaims) {\n      if (Object.prototype.hasOwnProperty.call(allClaims, key)) {\n        // LOOP IN ALL CLAIM OF ONE FILE ONE BY ONE ===========================\n        for (const keyClaim in allClaims[key].claims) {\n          if (\n            Object.prototype.hasOwnProperty.call(\n              allClaims[key].claims,\n              keyClaim\n            )\n          ) {\n            const element = allClaims[key].claims[keyClaim];\n            const thisType = whichClaimType(allClaims[key]);\n            let dataArray: ClaimToPrintInterface = {\n              claim_id: n,\n              names:\n                allClaims[key].userDetails.user_info.fname +\n                \" \" +\n                allClaims[key].userDetails.user_info.lname,\n              gender: allClaims[key].userDetails.user_info.sex\n                ? \"Male\"\n                : \"Female\",\n              national_id: allClaims[key].userDetails.n_id!,\n              phone: allClaims[key].userDetails.phone_number,\n              email: allClaims[key].userDetails.email,\n              claim_type: thisType ? thisType : \"\",\n              claim_level: element.level,\n              education_category:\n                allClaims[key].institute_id &&\n                !isEmptyOrSpaces(allClaims[key].institute_id)\n                  ? allClaims[key].institute_id\n                  : null,\n              claim_session: thisPeriod ? thisPeriod.session_plan_name : \"\",\n              date: DATE(element.createdAt),\n              decision: element.decision_taken_status\n                ? element.decision_taken_status\n                : \"PENDING\",\n              claim_title: allClaims[key].title\n                ? allClaims[key].title\n                : \"Undefined\",\n            };\n            // for (const key in reportContent) {\n            //   if (Object.prototype.hasOwnProperty.call(reportContent, key)) {\n            //     if (!reportContent[key].status) {\n            //       delete dataArray[reportContent[key].key];\n            //     }\n            //   }\n            // }\n            arrayNew.push(dataArray);\n            n++;\n          }\n        }\n      }\n    }\n    return arrayNew;\n  };\n\n  const resetReportContent = (currentState: boolean) => {\n    let newArray: claimReportContentInterface[] = reportContent;\n    for (const key in newArray) {\n      if (isChangeAllowed(newArray[key].key)) {\n        newArray[key].status = !currentState;\n      }\n    }\n\n    setReportContent(newArray);\n    setSelectAll(!currentState);\n    updateClaimToPrint();\n  };\n\n  const isChangeAllowed = (key: claimReportContentKeyInterface): boolean => {\n    if (\n      key === claimReportContentKeyInterface.names ||\n      key === claimReportContentKeyInterface.decision ||\n      key === claimReportContentKeyInterface.claim_session ||\n      key === claimReportContentKeyInterface.claim_type ||\n      key === claimReportContentKeyInterface.date\n    ) {\n      return false;\n    }\n    return true;\n  };\n\n  const FC_GeneratePDF = () => {\n    if (!document.querySelectorAll(\"#report_content tbody tr\").length) {\n      props.PushPopupAlert({\n        title: `Can't generate Report of empty Data`,\n        theme: PopupAlertTheme.warning,\n      });\n      return;\n    }\n\n    if (thisPeriod) {\n      const table: HTMLElement | null =\n        document.getElementById(\"report_content\");\n      const reportSettings: reportSettingsInterface = {\n        doneBy: props.auth.user.fname + \" \" + props.auth.user.lname,\n        title: \"Claim Report\",\n        subjectTitle: \"Claim type\",\n        subject:\n          props.claiming.selectedClaimType === \"all\"\n            ? \"All Types\"\n            : props.claiming.selectedClaimType,\n        period: thisPeriod.session_plan_name,\n        footer: \"Online Recruitment\",\n        institute:\n          thisEducation === \"all\"\n            ? \"All institute\"\n            : thisEducation.education_category_title,\n      };\n      table && generatePDF(reportSettings, table, setDownloading);\n    }\n  };\n\n  const FC_FilterClaims = (\n    allClaims: ClaimToPrintInterface[],\n    claimType: PlansTypeKeys | \"all\",\n    claimLevel: number | \"all\",\n    institute: education_category | \"all\"\n  ): ClaimToPrintInterface[] => {\n    let result: ClaimToPrintInterface[] = allClaims;\n    if (claimType !== \"all\") {\n      result = result.filter((item) => item.claim_type === claimType);\n    }\n    if (claimLevel !== \"all\") {\n      result = result.filter((item) => item.claim_level === claimLevel);\n    }\n\n    if (institute !== \"all\") {\n      result = result.filter(\n        (item) =>\n          item.education_category === null ||\n          item.education_category === institute.education_institute_id\n      );\n    }\n\n    return result;\n  };\n\n  return (\n    <Fragment>\n      <SideNavigation>\n        <div className=\"flex flex-col mb-4\">\n          <span className=\"text-sm text-gray-600 mb-2\">\n            Education categories:\n          </span>\n          {props.schoolLevels.education_categories === null ||\n          loadingInstitutes ? (\n            <Loading />\n          ) : props.schoolLevels.education_categories.length === 0 ? (\n            <span>No result found</span>\n          ) : (\n            <Fragment>\n              <div\n                onClick={() => setThisEducation(\"all\")}\n                className={`border rounded px-2 py-2 mb-2 cursor-pointer ${\n                  thisEducation === \"all\"\n                    ? \"bg-blue-600 text-white hover:bg-blue-100 hover:text-blue-600 hover:border-blue-500\"\n                    : \"hover:bg-blue-100 hover:text-blue-600 hover:border-blue-500\"\n                } font-bold flex flex-row items-center gap-2`}\n              >\n                {thisEducation === \"all\" ? (\n                  <MdRadioButtonChecked />\n                ) : (\n                  <MdRadioButtonUnchecked />\n                )}\n                <span>All</span>\n              </div>\n              {props.schoolLevels.education_categories.map((item, i) => (\n                <div\n                  onClick={() => setThisEducation(item)}\n                  key={i + 1}\n                  className={`border rounded px-2 py-2 mb-2 cursor-pointer ${\n                    thisEducation !== \"all\" &&\n                    thisEducation.education_institute_id ===\n                      item.education_institute_id\n                      ? \"bg-blue-600 text-white hover:bg-blue-100 hover:text-blue-600 hover:border-blue-500\"\n                      : \"hover:bg-blue-100 hover:text-blue-600 hover:border-blue-500\"\n                  } font-bold flex flex-row items-center gap-2`}\n                >\n                  {thisEducation !== \"all\" &&\n                  thisEducation.education_institute_id ===\n                    item.education_institute_id ? (\n                    <MdRadioButtonChecked />\n                  ) : (\n                    <MdRadioButtonUnchecked />\n                  )}\n                  <span>{item.education_category_title}</span>\n                </div>\n              ))}\n            </Fragment>\n          )}\n        </div>\n        <div className=\"\">\n          <div className=\"text-gray-600 text-sm mb-2\">Selected period:</div>\n          <div\n            onClick={() => setSelectPeriod(true)}\n            className=\"font-bold bg-blue-50 border border-blue-200 rounded py-2 cursor-pointer text-xs px-2 hover:underline  text-blue-600  mb-4 w-full flex flex-row items-center animate__animated animate__zoomIn\"\n          >\n            {thisPeriod !== null\n              ? `${thisPeriod.session_plan_name} - ${thisPeriod.period}`\n              : \"Filter by period\"}\n            <FiEdit className=\"text-3xl text-blue-600\" />\n          </div>\n        </div>\n        <div className=\"pt-1\">\n          <div className=\"text-sm text-gray-700 pb-2 pt-2\">Claim types:</div>\n          {props.claiming.claimTypes === null ||\n          FC_ClaimData(props.claiming.allClaims) === null ? (\n            <Loading />\n          ) : (\n            ClaimTypes(FC_ClaimData(props.claiming.allClaims)!).map(\n              (item, index: number) => (\n                <div\n                  onClick={() =>\n                    props.setSelectedClaimType(reportClaimType(item.type))\n                  }\n                  key={item.title + index}\n                >\n                  <MainItem\n                    title={item.title}\n                    count={item.count}\n                    active={isClaimTypeActive(\n                      props.claiming.selectedClaimType,\n                      item.type\n                    )}\n                  />\n                </div>\n              )\n            )\n          )}\n        </div>\n        <div className=\"pt-1\">\n          <div className=\"text-sm text-gray-700 pb-2 pt-2\">Claim level:</div>\n          {props.claiming.claimTypes === null ||\n          FC_ClaimData(props.claiming.allClaims) === null ? (\n            <Loading />\n          ) : (\n            ClaimLevels(FC_ClaimData(props.claiming.allClaims)!).map(\n              (item, index: number) => (\n                <div\n                  onClick={() => setThisLevel(item.level)}\n                  key={item.title + index}\n                >\n                  <MainItem\n                    title={item.title}\n                    count={item.count}\n                    active={item.level === thisLevel}\n                  />\n                </div>\n              )\n            )\n          )}\n        </div>\n      </SideNavigation>\n      <section>\n        {/* REPORT TITLE ============================================ */}\n        <div className=\"grid md:grid-cols-12\">\n          <div className=\"col-span-8\">\n            <div className=\"mt-4 mx-4 flex flex-col gap-1\">\n              <span className=\"text-3xl font-bold text-gray-700\">\n                Claim report\n              </span>\n            </div>\n          </div>\n          <div className=\"col-span-4\">\n            <div className=\"float-right mt-2\">\n              {props.claiming.allClaims && props.claiming.allClaims.length > 0 && (\n                <div className=\"flex flex-row items-center justify-end font-bold mb-2\">\n                  <BiExport className=\"text-2xl text-gray-500\" />\n                  <span className=\"text-gray-500\">Export as</span>\n                  <button\n                    className=\"px-4 py-1 ml-1 rounded bg-white border hover:text-blue-600 font-bold hover:bg-blue-50 border-gray-200\"\n                    disabled={loading}\n                    onClick={() => {\n                      updateClaimToPrint();\n                      setGenerateReportModal({\n                        reportType: \"EXCEL\",\n                        status: true,\n                      });\n                    }}\n                  >\n                    EXCEL\n                  </button>\n                  <button\n                    className={`px-4 py-1 ml-1 rounded bg-white border hover:text-blue-600 font-bold hover:bg-blue-50 border-gray-200 ${\n                      downloading && \"cursor-wait\"\n                    }`}\n                    onClick={() => FC_GeneratePDF()}\n                    disabled={loading || downloading}\n                  >\n                    PDF\n                  </button>\n                </div>\n              )}\n            </div>\n          </div>\n        </div>\n        {/* END REPORT TITLE ============================================ */}\n        <div className=\"bg-white my-4\">\n          <div className=\"w-full px-2 py-2\">\n            <input\n              onChange={(e) => setSearchInput(e.target.value)}\n              type=\"text\"\n              value={searchInput}\n              placeholder=\"Search...\"\n              className=\"w-full bg-gray-100 py-2 px-3 rounded focus:border-gray-800\"\n              disabled={\n                props.claiming.allClaims === null ||\n                props.claiming.claimTypes === null ||\n                FC_ClaimData(props.claiming.allClaims) === null ||\n                periodChanged\n              }\n            />\n          </div>\n          <table className=\"w-full shadow\" id=\"report_content\">\n            <thead className=\"bg-white border-b-2 border-gray-300 text-gray-600 font-bold text-sm\">\n              <tr>\n                <td className=\"px-2 py-2\">#</td>\n                <td\n                  className=\"px-2 py-2 cursor-pointer\"\n                  onClick={() => setSort(\"names\")}\n                >\n                  <div className=\"flex items-center gap-1\">\n                    Applicant names <BiSort />\n                  </div>\n                </td>\n                <td className=\"px-2 py-2\">National ID</td>\n                <td\n                  className=\"px-2 py-2 cursor-pointer\"\n                  onClick={() => setSort(\"gender\")}\n                >\n                  <div className=\"flex items-center gap-1\">\n                    Gender <BiSort />\n                  </div>\n                </td>\n                <td className=\"px-2 py-2\">Phone</td>\n                <td\n                  className=\"px-2 py-2 cursor-pointer\"\n                  onClick={() => setSort(\"claim_title\")}\n                >\n                  <div className=\"flex items-center gap-1\">\n                    Claim Title <BiSort />\n                  </div>\n                </td>\n                <td\n                  className=\"px-2 py-2 cursor-pointer\"\n                  onClick={() => setSort(\"claim_type\")}\n                >\n                  <div className=\"flex items-center gap-1\">\n                    Claim Type <BiSort />\n                  </div>\n                </td>\n                <td\n                  className=\"px-2 py-2 cursor-pointer\"\n                  onClick={() => setSort(\"claim_level\")}\n                >\n                  <div className=\"flex items-center gap-1\">\n                    Claim Level <BiSort />\n                  </div>\n                </td>\n                <td\n                  className=\"px-2 py-2 cursor-pointer\"\n                  onClick={() => setSort(\"decision\")}\n                >\n                  <div className=\"flex items-center gap-1\">\n                    Status <BiSort />\n                  </div>\n                </td>\n                <td\n                  className=\"px-2 py-2 cursor-pointer\"\n                  onClick={() => setSort(\"date\")}\n                >\n                  <div className=\"flex items-center gap-1\">\n                    Date <BiSort />\n                  </div>\n                </td>\n              </tr>\n            </thead>\n            <tbody>\n              {props.claiming.allClaims === null ||\n              props.claiming.claimTypes === null ||\n              periodChanged ? (\n                <TableLoading cols={10} />\n              ) : FC_ClaimData(props.claiming.allClaims) === null ? (\n                <TableLoading cols={10} />\n              ) : FC_FilterClaims(\n                  FC_ClaimData(props.claiming.allClaims)!,\n                  props.claiming.selectedClaimType,\n                  thisLevel,\n                  thisEducation\n                ).length === 0 ? (\n                <tr>\n                  <td colSpan={10} className=\"px-2 py-2\">\n                    <div className=\"flex flex-col text-gray-400 items-center justify-center bg-gray-100 rounded py-10\">\n                      <ImFilesEmpty className=\"text-8xl text-gray-400 mb-2 animate__animated animate__shakeX\" />\n                      <span className=\"text-sm font-bold\">\n                        No result found! Please try to search again\n                      </span>\n                      <div className=\"w-full mt-2 flex flex-row items-center justify-center\">\n                        <ul className=\"text-sm py-2 text-blue-600 font-bold flex flex-row gap-2\">\n                          <li\n                            onClick={() => setSelectPeriod(true)}\n                            className=\"underline text-gray-500 cursor-pointer\"\n                          >\n                            Filter by period\n                          </li>\n                          <li className=\"text-gray-400 italic\">or</li>\n                          <li className=\"text-gray-500\">\n                            Filter by Claim type\n                          </li>\n                          <li className=\"text-gray-400 italic\">or</li>\n                          <li className=\"text-gray-500\">\n                            Filter by Claim Level\n                          </li>\n                        </ul>\n                      </div>\n                    </div>\n                  </td>\n                </tr>\n              ) : (\n                sortThisArray(\n                  isSorted,\n                  searchData(\n                    FC_FilterClaims(\n                      FC_ClaimData(props.claiming.allClaims)!,\n                      props.claiming.selectedClaimType,\n                      thisLevel,\n                      thisEducation\n                    ),\n                    searchInput\n                  ),\n                  sortProperty,\n                  sortOrder\n                ).map((item: ClaimToPrintInterface, i) => (\n                  <tr\n                    key={i + 1}\n                    className={`${\n                      i % 2 !== 0 ? \"bg-gray-100\" : \"bg-white\"\n                    } text-gray-600 hover:bg-blue-100 hover:text-blue-700 border-b border-gray-300 hover:border-blue-500 text-sm`}\n                  >\n                    <td className=\"px-2 py-2\">{i + 1}</td>\n                    <td className=\"px-2 py-2\">{item.names}</td>\n                    <td className=\"px-2 py-2\">{item.national_id}</td>\n                    <td className=\"px-2 py-2\">{item.gender}</td>\n                    <td className=\"px-2 py-2\">{item.phone}</td>\n                    <td className=\"px-2 py-2\">{item.claim_title}</td>\n                    <td className=\"px-2 py-2\">{item.claim_type}</td>\n                    <td className=\"px-2 py-2\">{\"Level \" + item.claim_level}</td>\n                    <td className=\"px-2 py-2\">\n                      {item.decision}\n                      {/* {capitalizeFirstLetter(item.decision)} */}\n                    </td>\n                    <td className=\"px-2 py-2\">{item.date}</td>\n                  </tr>\n                ))\n              )}\n            </tbody>\n          </table>\n        </div>\n      </section>\n      {/* GENERATE DYNAMIC REPORT CONTENT MODAL */}\n      {generateReportModal !== null && generateReportModal.status === true && (\n        <Modal\n          title={\n            <div className=\"flex flex-row gap-4 items-center\">\n              {/* <IoBriefcase className=\"text-5xl text-gray-500\" /> */}\n              <div className=\"flex flex-col\">\n                <span className=\"font-bold text-2xl text-gray-500\">\n                  Generating Report contents\n                </span>\n                <span className=\"text-sm text-blue-600 font-normal\">\n                  Generating {generateReportModal.reportType} Report\n                </span>\n              </div>\n            </div>\n          }\n          backDrop={true}\n          theme={Themes.default}\n          close={() => setGenerateReportModal(null)}\n          backDropClose={false}\n          widthSizeClass={ModalSize.medium}\n          displayClose={true}\n          padding={{ title: true }}\n        >\n          <div className=\"px-6\">\n            <div className=\"my-2 text-base text-gray-700 sm:text-lg\">\n              <div className=\"flex flex-col\">\n                <label>Title</label>\n                <input\n                  type=\"text\"\n                  className={`text-left input-white w-20 inline-block ${\n                    formError && formError.element === \"report_title\"\n                      ? \"border-red-500\"\n                      : \"border-gray-500\"\n                  } border-2`}\n                  placeholder=\"Sub Category Title\"\n                  value={reportTitle}\n                  onChange={(e) => {\n                    setFormError(null);\n                    setReportTitle(e.target.value);\n                  }}\n                  disabled={loading}\n                />\n                {formError && formError.element === \"report_title\" && (\n                  <span className=\"text-red-500\">{formError.msg}</span>\n                )}\n              </div>\n              <div className=\"flex flex-col mt-2\">\n                <label>Report content</label>\n                <div className=\"grid grid-cols-2 md:grid-cols-3 items-center gap-2 mt-2\">\n                  {reportContent.map((item, index) => (\n                    <div\n                      key={index}\n                      className={`flex items-center gap-1 ${\n                        isChangeAllowed(item.key)\n                          ? \"cursor-pointer\"\n                          : \"cursor-not-allowed\"\n                      }`}\n                      onClick={() =>\n                        isChangeAllowed(item.key) &&\n                        updateReportContent(item.key)\n                      }\n                      title={\n                        !isChangeAllowed(item.key)\n                          ? \"Required for every report!\"\n                          : \"\"\n                      }\n                    >\n                      {item.status ? (\n                        <MdCheckBox className=\"w-6 h-6 text-blue-700\" />\n                      ) : (\n                        <MdCheckBoxOutlineBlank className=\"w-6 h-6\" />\n                      )}\n                      <span>{item.title}</span>\n                    </div>\n                  ))}\n                </div>\n                {formError && formError.element === \"report_content\" && (\n                  <span className=\"text-red-500\">{formError.msg}</span>\n                )}\n              </div>\n            </div>\n            <div className=\"flex justify-between mb-2 mt-4\">\n              <div\n                className={`flex items-center gap-1 cursor-pointer`}\n                onClick={() => resetReportContent(selectAll)}\n              >\n                {selectAll ? (\n                  <MdCheckBox className=\"w-6 h-6 text-blue-700\" />\n                ) : (\n                  <MdCheckBoxOutlineBlank className=\"w-6 h-6\" />\n                )}\n                <span>Select all</span>\n              </div>\n\n              {claimToPrint && !loading && (\n                <ExportToExcel\n                  fileData={claimToPrint}\n                  fileName={reportTitle}\n                  btnName=\"Generate\"\n                />\n              )}\n            </div>\n          </div>\n        </Modal>\n      )}\n      {/* END GENERATE DYNAMIC REPORT CONTENT MODAL */}\n      {selectPeriod && (\n        <Modal\n          title={\n            <div className=\"flex flex-row gap-4 items-center\">\n              <MdHistory className=\"text-5xl text-blue-600\" />\n              <span className=\"flex flex-col\">Choose a period</span>\n            </div>\n          }\n          backDrop={true}\n          theme={Themes.default}\n          close={() => thisPeriod !== null && setSelectPeriod(false)}\n          backDropClose={true}\n          widthSizeClass={ModalSize.extraLarge}\n          displayClose={true}\n          padding={{ title: true }}\n        >\n          <ChooseSession\n            allSession={props.application_sessions}\n            setSelectSession={(value: SessionPlanInterface | \"all\") => {\n              value !== \"all\" && setThisPeriod(value);\n              value !== \"all\" && onPeriodChange(value.session_plan_id);\n              value !== \"all\" && setSelectPeriod(false);\n            }}\n            chooseAll={false}\n            currentSelected={thisPeriod ? thisPeriod : \"all\"}\n          />\n        </Modal>\n      )}\n    </Fragment>\n  );\n};\n\nconst mapStateToProps = ({\n  auth,\n  sessionPlan,\n  claiming,\n  document,\n  schoolLevels,\n}: StoreState): {\n  auth: Auth;\n  application_sessions: SessionPlanInterface[] | null;\n  claiming: ClaimingReducerType;\n  documentReducer: DocumentReducerInterface;\n  schoolLevels: schoolLevelsStoreInterface;\n} => {\n  return {\n    auth: auth,\n    application_sessions: sessionPlan.allSessionPlans,\n    claiming,\n    documentReducer: document,\n    schoolLevels,\n  };\n};\n\nexport const ClaimingReport = connect(mapStateToProps, {\n  getAllClaims,\n  GetClaimingTypes,\n  getAllApplications,\n  GetAllSessionPlans,\n  loadEducationCategories,\n  setSelectedClaimType,\n  PushPopupAlert,\n})(_ClaimingReport);\n","import axios from \"axios\";\nimport React, { useEffect, useState } from \"react\";\nimport { FaRegCheckCircle } from \"react-icons/fa\";\nimport { MdCancel, MdInfoOutline } from \"react-icons/md\";\nimport { RiArrowGoBackFill } from \"react-icons/ri\";\nimport { connect } from \"react-redux\";\nimport {\n  Auth,\n  loadQuestionTypes,\n  PushPopupAlert,\n  questionTypesStoreInterface,\n} from \"../../../actions\";\nimport { evaluateClaim } from \"../../../actions/claiming\";\nimport { AnswersDetails } from \"../../../components/AnswersDetails/AnswersDetails\";\nimport Loading from \"../../../components/Loading/Loading\";\nimport {\n  CandidateClaimInterface,\n  ClaimDecisionStatus,\n  ClaimExamResultsDetails,\n  claimReasonInterface,\n  ClaimStatus,\n  ClaimTypesInterfaceAPI,\n  course,\n} from \"../../../interfaces\";\nimport { ExamAnswerSheetDone } from \"../../../interfaces/exam\";\nimport { PopupAlertTheme } from \"../../../interfaces/popupAlert\";\nimport { StoreState } from \"../../../reducers\";\nimport {\n  capitalizeFirstLetter,\n  isEmptyOrSpaces,\n} from \"../../../shared/dataTest\";\nimport { API } from \"../../../utils/api\";\nimport { errorToText } from \"../../../utils/errors\";\nimport { showDate } from \"../../../utils/functions\";\nimport { claimShowAnswer } from \"../Candidate/ExaminationFormView\";\nimport { isClaimEvaluated } from \"../ClaimDocView\";\nimport { claimResponseBody } from \"./AdminClaimDocView\";\n\nenum viewTabs {\n  profile = \"Applicant Profile\",\n  exam = \"Exam Details\",\n}\n\ntype AdminClaimExamViewProps = {\n  thisExamSheet: ClaimExamResultsDetails;\n  thisExam: course;\n  thisClaim: CandidateClaimInterface;\n  claimTypes: ClaimTypesInterfaceAPI[];\n  claimReasons: claimReasonInterface[] | null;\n\n  // REDUX ==================\n  auth: Auth;\n  questionTypes: questionTypesStoreInterface;\n  evaluateClaim: Function;\n  loadQuestionTypes: (callback: (loading: boolean) => void) => void;\n  PushPopupAlert: Function;\n};\n\nconst AdminClaimExamView: React.FC<AdminClaimExamViewProps> = (props) => {\n  const [loadingRequest, setLoadingRequest] = useState<boolean>(false);\n  const [loading, setLoading] = useState(true);\n  const [actionTaken, setActionTaken] = useState<ClaimDecisionStatus | null>(\n    null\n  );\n  const [formError, setFormError] = useState<{\n    element: string;\n    msg: string;\n  } | null>(null);\n  const [responseMsg, setResponseMsg] = useState<string>(\"\");\n  const [marks, setMarks] = useState<number>(0);\n  const [selectedTab, setSelectedTab] = useState<viewTabs>(viewTabs.profile);\n\n  useEffect(() => {\n    if (\n      props.questionTypes.questionTypes === null ||\n      (props.questionTypes.questionTypes.length === 0 && loading)\n    ) {\n      props.loadQuestionTypes(setLoading);\n    } else if (loading) {\n      setLoading(false);\n    }\n  }, [loading, props]);\n\n  if (loading || props.questionTypes.questionTypes === null) {\n    return <Loading />;\n  }\n\n  const handleVerify = async () => {\n    if (!actionTaken) {\n      setFormError({\n        element: \"action\",\n        msg: \"Action is required!\",\n      });\n      return setLoadingRequest(false);\n    }\n\n    if (\n      actionTaken === ClaimDecisionStatus.ACCEPTED &&\n      (marks <= 0 || marks > 100)\n    ) {\n      setFormError({\n        element: \"marks\",\n        msg: \"Invalid marks, marks must be between 1 and 10\",\n      });\n\n      return setLoadingRequest(false);\n    }\n\n    if (isEmptyOrSpaces(responseMsg)) {\n      setFormError({\n        element: \"comment\",\n        msg: \"Reason of rejection is required\",\n      });\n      return setLoadingRequest(false);\n    }\n\n    let subClaim = props.thisClaim.claims.find(\n      (item) => item.level === props.thisClaim.claim_level\n    );\n\n    if (subClaim) {\n      setLoadingRequest(true);\n      const api_body: claimResponseBody = {\n        sub_claim_id: subClaim.id,\n        evaluation_comment: responseMsg,\n        evaluated_by: props.auth.user.user_id,\n        decision_taken_status: actionTaken,\n        evaluator_name: props.auth.user.fname + \" \" + props.auth.user.lname,\n        evaluator_email: props.auth.user.email,\n      };\n\n      try {\n        const res = await axios.put<CandidateClaimInterface>(\n          `${API.CLAIMING}/user/evaluate/${props.thisClaim._id}`,\n          api_body\n        );\n        if (res) {\n          console.log({ evaluate_claim_res: res });\n          props.evaluateClaim(res.data);\n          // REVALIDATED DOCUMENT IF IT IS APPROVED =========================\n          if (actionTaken === ClaimDecisionStatus.ACCEPTED) {\n            await handleMarksAddition();\n          }\n          props.PushPopupAlert({\n            title: `Claim responded successfully!`,\n            theme: PopupAlertTheme.success,\n          });\n          // setDocumentId(\"null\");\n          setResponseMsg(\"\");\n          setActionTaken(null);\n        }\n      } catch (error) {\n        console.error(error);\n        props.PushPopupAlert({\n          title: errorToText(error),\n          theme: PopupAlertTheme.danger,\n        });\n      }\n      setLoadingRequest(false);\n    }\n  };\n\n  const handleMarksAddition = async () => {\n    try {\n      await axios.put(`${API.DO_EXAM}/answersheet/user/marks/update`, {\n        answer_sheet_id: props.thisClaim.claiming_on_id,\n        marks: marks,\n      });\n    } catch (error) {\n      console.error(error);\n      props.PushPopupAlert({\n        title: errorToText(error),\n        theme: PopupAlertTheme.danger,\n      });\n    }\n  };\n\n  const getReasonById = (\n    reason_id: string\n  ): claimReasonInterface | undefined => {\n    if (props.claimReasons) {\n      return props.claimReasons.find((item) => item.id === reason_id);\n    }\n    return undefined;\n  };\n\n  // const getAnswersByQuestion = (question_id: string): ClaimGetUserAnswers[] => {\n  //   return props.thisExamSheet.user_answers.filter(\n  //     (item) => item.question === question_id\n  //   );\n  // };\n\n  const claimCandidateAnswers = (): ExamAnswerSheetDone[] => {\n    let result: ExamAnswerSheetDone[] = [\n      {\n        exam_location: props.thisExamSheet.exam_location,\n        questions: props.thisExamSheet.questions,\n        user_answers: props.thisExamSheet.user_answers,\n        user: props.thisExamSheet.user,\n        period: props.thisExamSheet.period,\n        course: props.thisExamSheet.course,\n        exam_paper: props.thisExamSheet.exam_paper,\n        user_status: props.thisExamSheet.user_status,\n        used_duration: props.thisExamSheet.used_duration,\n        total_marks: props.thisExamSheet.total_marks,\n        number_of_question_answered:\n          props.thisExamSheet.number_of_question_answered,\n        // start_time: string,\n        // end_time: string,\n        exam_total_marks: props.thisExamSheet.exam_total_marks,\n        exam_start_time: props.thisExamSheet.exam_start_time,\n        exam_end_time: props.thisExamSheet.exam_end_time,\n        exam_date: props.thisExamSheet.exam_date,\n        status: props.thisExamSheet.status,\n        createdAt: props.thisExamSheet.createdAt,\n        updatedAt: props.thisExamSheet.updatedAt,\n        disability: false,\n        gender: \"\",\n        in_education: false,\n        position: \"\",\n        answer_sheet_id: props.thisExamSheet.answer_sheet_id,\n      },\n    ];\n    // props.thisExamSheet\n\n    return result;\n  };\n\n  return (\n    <section className=\"\">\n      {/* #################### VIEW TABS ################################## */}\n      <div className=\"flex flex-row items-center mx-4\">\n        {Object.values(viewTabs).map((item, i) => (\n          <div\n            key={i}\n            onClick={() => setSelectedTab(item)}\n            className={`animate__animated ${\n              selectedTab === item\n                ? \"bg-blue-100 border-blue-600 text-blue-600 animate__zoomIn\"\n                : \"bg-white border-white text-gray-600\"\n            } hover:bg-blue-100 px-4 py-2 cursor-pointer font-bold border-b-4 hover:border-blue-600 hover:text-blue-600 rounded-t mt-1 mr-1`}\n          >\n            {item}\n          </div>\n        ))}\n      </div>\n      {/* #################### END VIEW TABS ################################## */}\n      <div className=\"w-full bg-white px-4 py-1 divide-y-2 space-y-2\">\n        {/* DOCUMENT DETAILS ==================================================== */}\n        <section className=\"flex flex-col\">\n          {/* DISPLAY POSITION ==================================================== */}\n          {selectedTab === viewTabs.exam && (\n            <section className=\"w-full my-1 animate__animated animate__fadeIn rounded\">\n              <div className=\"bg-white w-full rounded p-2 mb-2\">\n                <AnswersDetails\n                  showAnswers={true}\n                  exam_id={claimShowAnswer(\n                    props.thisExamSheet,\n                    props.thisExam.course_name\n                  )}\n                  allAnswers={claimCandidateAnswers()}\n                  user_id={props.thisExamSheet.user}\n                />\n              </div>\n            </section>\n          )}\n          {/* END DISPLAY POSITION ==================================================== */}\n          {/* -------------------------------------------------------------------------------- */}\n          {/* DISPLAY PROFILE ==================================================== */}\n          {selectedTab === viewTabs.profile && (\n            <section className=\"w-full my-2 animate__animated animate__fadeIn rounded\">\n              <div className=\"flex items-center justify-between\">\n                <div className=\"flex items-center gap-2\">\n                  <span className={`italic text-gray-600`}>Names:</span>\n                  <span className=\"text-gray-800 font-bold text-xl\">\n                    {props.thisClaim.userDetails.user_info.fname +\n                      \" \" +\n                      props.thisClaim.userDetails.user_info.lname}\n                  </span>\n                </div>\n              </div>\n            </section>\n          )}\n          {/* END DISPLAY PROFILE ==================================================== */}\n          {selectedTab === viewTabs.profile && (\n            <div className=\"\">\n              <div className=\"flex items-center gap-2\">\n                <span className={`italic text-gray-600`}>Email:</span>\n                <span className=\"text-gray-800 font-bold text-lg\">\n                  {props.thisClaim.userDetails.email}\n                </span>\n              </div>\n              <div className=\"flex items-center gap-2\">\n                <span className={`italic text-gray-600`}>Phone:</span>\n                <span className=\"text-gray-800 font-bold text-lg\">\n                  {props.thisClaim.userDetails.phone_number}\n                </span>\n              </div>\n              <div className=\"flex items-center gap-2\">\n                <span className={`italic text-gray-600`}>Gender:</span>\n                <span className=\"text-gray-800 font-bold text-lg\">\n                  {props.thisClaim.userDetails.user_info.sex === \"M\"\n                    ? \"Male\"\n                    : \"Female\"}\n                </span>\n              </div>\n            </div>\n          )}\n        </section>\n        {/* END DOCUMENT DETAILS ==================================================== */}\n\n        {/* ################################################################################ */}\n\n        {/* CLAIM LEVEL 1 DETAILS ==================================================== */}\n        {props.thisClaim.claims.length > 0 &&\n          props.thisClaim.claims.map((claim, index) => (\n            <section className=\"flex flex-col px-2 pt-3\" key={index + claim.id}>\n              <div className=\"text-gray-700 italic font-bold\">\n                Claim Comment (level {index + 1})\n              </div>\n              {/* CLAIM COMMENT ==>> LEVEL 1 ==================================================== */}\n              <div className=\"flex flex-col items-start gap-2 mt-1 border rounded px-2 py-1 bg-gray-50\">\n                <div className=\"flex items-center gap-2 bg-blue-100 rounded py-1 px-2\">\n                  <MdInfoOutline />\n                  {getReasonById(props.thisClaim.default_claim_resaons)\n                    ? getReasonById(props.thisClaim.default_claim_resaons)!\n                        .reason\n                    : \"\"}\n                </div>\n                <p>{claim.reason}</p>\n                <span className=\"text-gray-600 text-xs\">\n                  {showDate(claim.createdAt)}\n                  {/* {showDate(claim.createdAt) +\n                    \" at \" +\n                    moment.unix(claim.date_created).format(\"MM/DD/YYYY\")} */}\n                </span>\n              </div>\n              {/* CLAIM COMMENT ==>> LEVEL 1 ==================================================== */}\n\n              {isClaimEvaluated(props.thisClaim, claim.level) && (\n                <section className=\"mt-4\">\n                  <span className=\"text-gray-700 italic font-semibold\">\n                    Response (level {index + 1})\n                  </span>\n                  <div className=\"border-t-2\">\n                    <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n                      <span className={`italic`}>Status:</span>\n                      <span\n                        className={`font-bold ${\n                          claim.decision_taken_status ===\n                          ClaimDecisionStatus.REJECTED\n                            ? \"text-yellow-900\"\n                            : \"text-blue-600\"\n                        } rounded px-3 py-1`}\n                      >\n                        {capitalizeFirstLetter(\n                          claim.decision_taken_status.toLocaleLowerCase()\n                        )}\n                      </span>\n                    </div>\n                    <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n                      <span className={`italic`}>Evaluated by:</span>\n                      <span className=\"font-semibold\">\n                        {claim.evaluater.name}\n                      </span>\n                    </div>\n                    <div className=\"flex items-start gap-2 text-sm text-gray-600\">\n                      <span className={`italic`}>Reason:</span>\n                      <span className=\"font-normal\">\n                        {claim.evaluation_comment}\n                      </span>\n                    </div>\n                  </div>\n                </section>\n              )}\n            </section>\n          ))}\n        {/* END CLAIM LEVEL 1 DETAILS ==================================================== */}\n      </div>\n\n      {/* FOOTER INITIAL ========================================== */}\n      {!actionTaken && (\n        <section className=\"flex items-center justify-between bg-gray-50 rounded mt-3\">\n          {/* SHOWING STATUS ===================================== */}\n          <div className=\"mx-4 my-4\">\n            <span\n              className={`${\n                props.thisClaim.last_claim_status === ClaimStatus.PENDING\n                  ? \"text-yellow-700\"\n                  : props.thisClaim.last_claim_status === ClaimStatus.DELETED\n                  ? \"text-red-700\"\n                  : \"text-green-700\"\n              } italic font-semibold`}\n            >\n              {capitalizeFirstLetter(\n                props.thisClaim.last_claim_status.toLocaleLowerCase()\n              )}\n            </span>\n          </div>\n\n          {props.thisClaim.last_claim_status === ClaimStatus.PENDING && (\n            <div className=\"flex items-center gap-2 px-2\">\n              <button\n                className={`px-4 py-2 font-semibold text-red-50 rounded inline-flex items-center space-x-2 focus:outline-none bg-red-700 hover:bg-red-800`}\n                onClick={() => {\n                  setActionTaken(ClaimDecisionStatus.REJECTED);\n                }}\n              >\n                <MdCancel className=\"w-5 h-5\" />\n                <span>Reject</span>\n              </button>\n              <button\n                className={`px-4 py-2 font-semibold text-blue-50 rounded inline-flex items-center space-x-2 focus:outline-none bg-blue-700 hover:bg-blue-800`}\n                onClick={() => {\n                  setActionTaken(ClaimDecisionStatus.ACCEPTED);\n                }}\n              >\n                <FaRegCheckCircle className=\"w-5 h-5\" />\n                <span>Accept</span>\n              </button>\n            </div>\n          )}\n        </section>\n      )}\n      {/* END FOOTER INITIAL ========================================== */}\n\n      {/* ======================================================== */}\n      {/* FOOTER RESPONSE ========================================== */}\n      {actionTaken && (\n        <section className=\"my-5 overflow-x-auto\">\n          <div className=\"italic text-gray-700 text-base my-1 mx-2\">\n            Selected decision:{\" \"}\n            <span\n              className={`font-semibold text-lg ${\n                actionTaken === ClaimDecisionStatus.ACCEPTED\n                  ? \"text-blue-700\"\n                  : \"text-yellow-800\"\n              }`}\n            >\n              {actionTaken === ClaimDecisionStatus.ACCEPTED\n                ? \"Approved\"\n                : \"Rejected\"}\n            </span>\n          </div>\n          {/* right part */}\n          <div className=\"flex flex-col md:flex-row items-end md:items-start gap-1 w-full\">\n            <div className=\"w-full space-y-1\">\n              {actionTaken === ClaimDecisionStatus.ACCEPTED && (\n                <div className=\"flex items-center justify-end w-full gap-2\">\n                  <span className=\"font-semibold\">Addition marks</span>\n                  <div className=\"px-2\">\n                    <input\n                      placeholder={`Addition marks`}\n                      className={`border border-${\n                        formError && formError.element === \"marks\"\n                          ? \"red\"\n                          : \"gray\"\n                      }-400 rounded px-3 py-1 w-auto focus:outline-none`}\n                      value={marks}\n                      onChange={(e) => {\n                        setMarks(Number(e.target.value));\n                        setFormError(null);\n                      }}\n                      disabled={loadingRequest}\n                    />\n                    {formError && formError.element === \"marks\" && (\n                      <p className=\"text-red-800\">{formError.msg}</p>\n                    )}\n                  </div>\n                </div>\n              )}\n              <div className=\"w-full px-2\">\n                <textarea\n                  placeholder={`Reason of your decision...`}\n                  cols={50}\n                  rows={actionTaken === ClaimDecisionStatus.ACCEPTED ? 2 : 3}\n                  className={`border border-${\n                    formError && formError.element === \"comment\"\n                      ? \"red\"\n                      : \"gray\"\n                  }-400 rounded px-3 py-1 w-full focus:outline-none`}\n                  style={{ resize: \"none\" }}\n                  value={responseMsg}\n                  onChange={(e) => {\n                    setResponseMsg(e.target.value);\n                    setFormError(null);\n                  }}\n                  disabled={loadingRequest}\n                ></textarea>\n                {formError && formError.element === \"comment\" && (\n                  <p className=\"text-red-800\">{formError.msg}</p>\n                )}\n              </div>\n            </div>\n            <div className=\"flex flex-row md:flex-col gap-1 max-w-full px-2\">\n              <button\n                className=\"bg-gray-700 hover:bg-gray-800 px-4 py-2 font-semibold rounded text-white inline-flex items-center space-x-2 focus:outline-none\"\n                onClick={() => {\n                  setResponseMsg(\"\");\n                  setActionTaken(null);\n                  setFormError(null);\n                }}\n                disabled={loadingRequest}\n              >\n                <RiArrowGoBackFill className=\"w-5 h-5\" />\n                <span>Back</span>\n              </button>\n              <button\n                className=\"bg-blue-700 hover:bg-blue-800 px-4 py-2 font-semibold rounded text-white inline-flex items-center space-x-2 focus:outline-none\"\n                disabled={loadingRequest}\n                onClick={() =>\n                  window.confirm(\n                    `Are you sure you want to ${\n                      actionTaken === ClaimDecisionStatus.ACCEPTED\n                        ? \"approve\"\n                        : \"rejected\"\n                    } this document?`\n                  ) && handleVerify()\n                }\n              >\n                {loadingRequest ? (\n                  <div className=\"\">Loading...</div>\n                ) : (\n                  <div className=\"inline-flex items-center space-x-2 gap-1\">\n                    <FaRegCheckCircle className=\"w-5 h-5\" />\n                    <span>Confirm</span>\n                  </div>\n                )}\n              </button>\n            </div>\n          </div>\n          {/* end right part */}\n        </section>\n      )}\n      {/* END FOOTER RESPONSE ========================================== */}\n    </section>\n  );\n};\n\nconst mapStateToProps = ({\n  auth,\n  questionTypes,\n}: StoreState): {\n  auth: Auth;\n  questionTypes: questionTypesStoreInterface;\n} => {\n  return {\n    auth,\n    questionTypes,\n  };\n};\n\nexport default React.memo(\n  connect(mapStateToProps, {\n    loadQuestionTypes,\n    evaluateClaim,\n    PushPopupAlert,\n  })(AdminClaimExamView)\n);\n","import React, { useState } from \"react\";\nimport { CgImage } from \"react-icons/cg\";\nimport Loading from \"../../components/Loading/Loading\";\nimport Modal, { ModalSize, Themes } from \"../../components/Modal/Modal\";\nimport Table from \"../../components/Table/Table\";\nimport ViewPDF from \"../../components/ViewPDF/ViewPDF\";\nimport { isEmptyOrSpaces } from \"../../shared/dataTest\";\nimport { UserDocumentsInterface } from \"../../shared/interfaces\";\nimport { API } from \"../../utils/api\";\nimport { fullScreen, getFileType, isFileImage } from \"../../utils/functions\";\nimport { PositionRequirementTableInterface } from \"./ViewPosition\";\n\ninterface RequirementProps {\n  requirements: PositionRequirementTableInterface[];\n  userDocs: UserDocumentsInterface[];\n}\n\nconst ViewDocRequirements: React.FC<RequirementProps> = (props) => {\n  const [viewDoc, setViewDoc] = useState<UserDocumentsInterface | null>(null);\n  const [loadingImage, setLoadingImage] = useState<boolean>(false);\n  const [isFullscreen, setSetFullscreen] = useState<boolean>(false);\n\n  const isDocumentExist = (\n    category_id: string,\n    sub_category_id: string,\n    field_id: string\n  ): UserDocumentsInterface | undefined => {\n    if (!isEmptyOrSpaces(category_id)) {\n      let userDocs: UserDocumentsInterface[] = props.userDocs.filter(\n        (item) => item.category_id === category_id\n      );\n\n      if (!isEmptyOrSpaces(sub_category_id)) {\n        userDocs = userDocs.filter(\n          (item) =>\n            item.validation_status === \"approved\" &&\n            item.category_id === category_id &&\n            item.sub_category_id === sub_category_id\n        );\n      }\n\n      if (!isEmptyOrSpaces(field_id)) {\n        return userDocs.find(\n          (item) =>\n            item.validation_status === \"approved\" &&\n            item.category_id === category_id &&\n            item.category_subcategory_data === field_id\n        );\n      }\n    }\n    return undefined;\n  };\n  const tableData = (): JSX.Element[] => {\n    let data: PositionRequirementTableInterface[] = props.requirements;\n    if (data.length === 0) {\n      return [\n        <tr key={153} className=\"border-b border-gray-200 hover:bg-gray-100\">\n          <td className=\"p-3 text-center\" colSpan={3}>\n            No Data Found\n          </td>\n        </tr>,\n      ];\n    }\n\n    return data.map((item, index) => (\n      <tr\n        key={index + item.field_id}\n        className={`border-b border-gray-200 hover:bg-gray-100 ${\n          !isDocumentExist(\n            item.category_id,\n            item.subcategory_id,\n            item.field_id\n          ) && \"text-yellow-800\"\n        }`}\n      >\n        <td className=\"p-3 text-left whitespace-nowrap\">{index + 1})</td>\n        <td className=\"p-3 text-left\">\n          <span>\n            {isEmptyOrSpaces(item.field_id)\n              ? \"Any \" + item.subcategory_title\n              : item.subcategory_title + \" in \" + item.field_title}\n          </span>\n        </td>\n        <td className={`p-3 text-left text-lg italic`}>\n          {isDocumentExist(item.category_id, item.subcategory_id, item.field_id)\n            ? \"Found\"\n            : \"Not found\"}\n        </td>\n        <td className={`p-3 text-right text-lg italic`}>\n          {isDocumentExist(\n            item.category_id,\n            item.subcategory_id,\n            item.field_id\n          ) && (\n            <button\n              className=\"bg-gray-200 hover:bg-gray-300 rounded font-medium px-2 py-1 focus:outline-none\"\n              onClick={() => {\n                setViewDoc(\n                  isDocumentExist(\n                    item.category_id,\n                    item.subcategory_id,\n                    item.field_id\n                  )!\n                );\n                setLoadingImage(true);\n              }}\n            >\n              View Doc\n            </button>\n          )}\n        </td>\n      </tr>\n    ));\n  };\n  const handleFullScreen = () => {\n    if (isFullscreen) {\n      fullScreen(\"doc-img\", \"CLOSE\");\n      setSetFullscreen(false);\n    } else {\n      setSetFullscreen(true);\n      fullScreen(\"doc-img\", \"OPEN\");\n    }\n  };\n\n  return (\n    <div>\n      <Table\n        columns={[\n          { columnTitle: \"#\", alignText: \"left\", padding: \"p-3\" },\n          { columnTitle: \"Qualification\", alignText: \"left\", padding: \"p-3\" },\n          { columnTitle: \"Status\", alignText: \"left\", padding: \"p-3\" },\n          { columnTitle: \"\", alignText: \"left\", padding: \"p-3\" },\n        ]}\n        rows={tableData}\n        pagination={false}\n        search={false}\n        thColor=\"gray\"\n      />\n\n      {viewDoc && (\n        <Modal\n          backDrop={true}\n          theme={Themes.default}\n          close={() => {\n            setViewDoc(null);\n            setLoadingImage(false);\n          }}\n          backDropClose={false}\n          widthSizeClass={ModalSize.extraLarge}\n          displayClose={true}\n          padding={{\n            title: true,\n            body: false,\n            footer: false,\n          }}\n          title=\"Doc view\"\n        >\n          {loadingImage && <Loading />}\n          {viewDoc.files && viewDoc.files.length > 0 ? (\n            isFileImage(getFileType(viewDoc.files)) ? (\n              <div className=\"relative\">\n                <img\n                  src={API.AUTH_FILES + viewDoc.files}\n                  alt=\"\"\n                  className={`w-full md:w-auto h-auto md:max-h-screen mx-auto ${\n                    loadingImage && \"hidden\"\n                  }`}\n                  id=\"doc-img\"\n                  onLoad={() => setLoadingImage(false)}\n                  onDoubleClick={() => handleFullScreen()}\n                />\n              </div>\n            ) : (\n              <ViewPDF\n                file_url={API.AUTH_FILES + viewDoc.files}\n                class_name={`w-full h-screen md:max-h-screen mx-auto ${\n                  loadingImage && \"hidden\"\n                }`}\n                frame_title={\"application PDF file view\"}\n                setLoadingFile={setLoadingImage}\n              />\n            )\n          ) : (\n            <div className=\"text-center text-red-400 py-8 animate__animated animate__fadeIn\">\n              <CgImage className=\"mx-auto w-40 h-40\" />\n              <span className=\"font-semibold text-4xl\">No Files Provided</span>\n            </div>\n          )}\n        </Modal>\n      )}\n    </div>\n  );\n};\n\nexport default React.memo(ViewDocRequirements);\n","import axios from \"axios\";\nimport React, { useState } from \"react\";\nimport { FaRegCheckCircle } from \"react-icons/fa\";\nimport { MdCancel, MdInfoOutline, MdTurnedIn } from \"react-icons/md\";\nimport { RiArrowGoBackFill } from \"react-icons/ri\";\nimport { connect } from \"react-redux\";\nimport { Auth, PushPopupAlert, reAssessApplication } from \"../../../actions\";\nimport { evaluateClaim } from \"../../../actions/claiming\";\nimport NoResult, {\n  NoResultThemes,\n} from \"../../../components/NoResult/NoResult\";\nimport {\n  allClaimApplicationInterface,\n  CandidateClaimInterface,\n  ClaimDecisionStatus,\n  claimReasonInterface,\n  ClaimStatus,\n  ClaimTypesInterfaceAPI,\n  PositionAPI,\n} from \"../../../interfaces\";\nimport { ApplicationStates } from \"../../../interfaces/application\";\nimport { PopupAlertTheme } from \"../../../interfaces/popupAlert\";\nimport { StoreState } from \"../../../reducers\";\nimport { DocumentReducerInterface } from \"../../../reducers/document\";\nimport {\n  capitalizeFirstLetter,\n  isEmptyOrSpaces,\n} from \"../../../shared/dataTest\";\nimport { API } from \"../../../utils/api\";\nimport { errorToText } from \"../../../utils/errors\";\nimport { DATE, showDate } from \"../../../utils/functions\";\nimport { PositionRequirementTableInterface } from \"../../Positions/ViewPosition\";\nimport ViewDocRequirements from \"../../Positions/ViewDocRequirements\";\nimport { isClaimEvaluated } from \"../ClaimDocView\";\nimport { claimResponseBody } from \"./AdminClaimDocView\";\n\nexport const FC_AdminApplicationPositionDistinctCategory = (\n  thisPosition: PositionAPI,\n  documentCategories: DocumentReducerInterface\n): {\n  PositionsTemp: PositionRequirementTableInterface[];\n  DistinctCategoriesTemp: PositionRequirementTableInterface[];\n  DistinctSubCategoriesTemp: PositionRequirementTableInterface[];\n} => {\n  let PositionsTemp: PositionRequirementTableInterface[] = [];\n  let DistinctCategoriesTemp: PositionRequirementTableInterface[] = [],\n    DistinctCategoriesIds: string[] = [];\n  let DistinctSubCategoriesTemp: PositionRequirementTableInterface[] = [],\n    DistinctSubCategoriesIds: string[] = [];\n  // GET REQUIREMENTS OF THE CURRENT POSITION ====================\n  let requirements = thisPosition.requirements;\n  // LOOP THROUGH CURRENT POSITION REQUIREMENTS ==========================\n  for (let req in requirements) {\n    let thisRequirements = requirements[req];\n    // GET DOC CATEGORY OF THE CURRENT POSITION REQUIREMENTS ====================\n    let thisCategory = documentCategories.documentCategory\n      ? documentCategories.documentCategory.find(\n          (item) =>\n            item.user_detail_category_id ===\n            thisRequirements.category.user_detail_category_id\n        ) && {\n          title: documentCategories.documentCategory.find(\n            (item) =>\n              item.user_detail_category_id ===\n              thisRequirements.category.user_detail_category_id\n          )!.title,\n          user_detail_category_id: documentCategories.documentCategory.find(\n            (item) =>\n              item.user_detail_category_id ===\n              thisRequirements.category.user_detail_category_id\n          )!.user_detail_category_id,\n        }\n      : {\n          title: \"\",\n          user_detail_category_id:\n            thisRequirements.category.user_detail_category_id,\n        };\n    // GET DOC SUB CATEGORY OF THE CURRENT POSITION REQUIREMENTS ====================\n    let thisSubCategory = documentCategories.documentSubCategory\n      ? documentCategories.documentSubCategory.find(\n          (item) =>\n            item.user_detail_subcategory_id ===\n            thisRequirements.subcategory.user_detail_subcategory_id\n        )\n        ? {\n            title: documentCategories.documentSubCategory.find(\n              (item) =>\n                item.user_detail_subcategory_id ===\n                thisRequirements.subcategory.user_detail_subcategory_id\n            )!.title,\n            user_detail_subcategory_id:\n              documentCategories.documentSubCategory.find(\n                (item) =>\n                  item.user_detail_subcategory_id ===\n                  thisRequirements.subcategory.user_detail_subcategory_id\n              )!.user_detail_subcategory_id,\n            category_id: documentCategories.documentSubCategory.find(\n              (item) =>\n                item.user_detail_subcategory_id ===\n                thisRequirements.subcategory.user_detail_subcategory_id\n            )!.category_id,\n          }\n        : {\n            title: \"\",\n            user_detail_subcategory_id:\n              thisRequirements.subcategory.user_detail_subcategory_id,\n            category_id: \"\",\n          }\n      : {\n          title: \"\",\n          user_detail_subcategory_id:\n            thisRequirements.subcategory.user_detail_subcategory_id,\n          category_id: \"\",\n        };\n    // LOOP THROUGH FIELDS OF THE CURRENT POSITION REQUIREMENTS ==========================\n    if (thisCategory) {\n      for (let field in thisRequirements.position_requirement) {\n        // GET FIELDS OF THE CURRENT POSITION REQUIREMENTS ====================\n        let thisField = documentCategories.documentFields\n          ? documentCategories.documentFields.find(\n              (item) =>\n                item._id === thisRequirements.position_requirement[field]._id\n            )\n            ? {\n                title: documentCategories.documentFields.find(\n                  (item) =>\n                    item._id ===\n                    thisRequirements.position_requirement[field]._id\n                )!.title,\n                _id: documentCategories.documentFields.find(\n                  (item) =>\n                    item._id ===\n                    thisRequirements.position_requirement[field]._id\n                )!._id,\n                required: thisRequirements.position_requirement[field].required,\n              }\n            : {\n                title: \"\",\n                _id: thisRequirements.position_requirement[field]._id,\n                required: thisRequirements.position_requirement[field].required,\n              }\n          : {\n              title: \"\",\n              _id: thisRequirements.position_requirement[field]._id,\n              required: thisRequirements.position_requirement[field].required,\n            };\n        // ADD CURRENT CATEGORY, SUB CATEGORY & FIELDS OF THE CURRENT POSITION REQUIREMENTS IN POSITIONS TEMP ====================\n        PositionsTemp.push({\n          category_id: thisCategory.user_detail_category_id,\n          category_title: thisCategory.title,\n          subcategory_id: thisSubCategory.user_detail_subcategory_id,\n          subcategory_title: thisSubCategory.title,\n          subcategory_required: thisRequirements.required,\n          field_title: thisField.title,\n          field_id: thisField._id,\n          required: thisField.required,\n        });\n      }\n\n      // ADD CATEOGRY OF THE CURRENT POSITION REQUIREMENTS TO ARRAY ====================\n      if (\n        !DistinctCategoriesIds.includes(thisCategory.user_detail_category_id)\n      ) {\n        DistinctCategoriesIds.push(thisCategory.user_detail_category_id);\n        DistinctCategoriesTemp.push({\n          category_id: thisCategory.user_detail_category_id,\n          category_title: thisCategory.title,\n          subcategory_id: \"\",\n          subcategory_title: \"\",\n          subcategory_required: thisRequirements.required,\n          field_title: \"\",\n          field_id: \"\",\n          required: false,\n        });\n      }\n\n      // ADD SUB CATEOGRY OF THE CURRENT POSITION REQUIREMENTS TO ARRAY ====================\n      if (\n        !DistinctSubCategoriesIds.includes(\n          thisSubCategory.user_detail_subcategory_id\n        )\n      ) {\n        DistinctSubCategoriesIds.push(\n          thisSubCategory.user_detail_subcategory_id\n        );\n        DistinctSubCategoriesTemp.push({\n          category_id: thisSubCategory.category_id,\n          category_title: \"\",\n          subcategory_id: thisSubCategory.user_detail_subcategory_id,\n          subcategory_title: thisSubCategory.title,\n          subcategory_required: thisRequirements.required,\n          field_title: \"\",\n          field_id: \"\",\n          required: false,\n        });\n      }\n    }\n  }\n  // DistinctCategoriesIds.;\n\n  return { PositionsTemp, DistinctCategoriesTemp, DistinctSubCategoriesTemp };\n};\n\ntype AdminClaimAppViewProps = {\n  thisApplication: allClaimApplicationInterface;\n  thisPosition: PositionAPI;\n  documentCategories: DocumentReducerInterface;\n  thisClaim: CandidateClaimInterface;\n  claimTypes: ClaimTypesInterfaceAPI[];\n  systemPositions: PositionAPI[];\n  claimReasons: claimReasonInterface[] | null;\n\n  // REDUX ==================\n  auth: Auth;\n  reAssessApplication: Function;\n  evaluateClaim: Function;\n  PushPopupAlert: Function;\n};\n\nconst AdminClaimAppView: React.FC<AdminClaimAppViewProps> = (props) => {\n  const [viewPosition, setViewPosition] = useState<boolean>(true);\n  const [loadingRequest, setLoadingRequest] = useState<boolean>(false);\n  const [actionTaken, setActionTaken] = useState<ClaimDecisionStatus | null>(\n    null\n  );\n  const [formError, setFormError] = useState<{\n    element: string;\n    msg: string;\n  } | null>(null);\n  const [responseMsg, setResponseMsg] = useState<string>(\"\");\n\n  const handleVerify = async () => {\n    if (!actionTaken) {\n      setFormError({\n        element: \"action\",\n        msg: \"Action is required!\",\n      });\n      return setLoadingRequest(false);\n    }\n\n    if (isEmptyOrSpaces(responseMsg)) {\n      setFormError({\n        element: \"comment\",\n        msg: \"Reason of rejection is required\",\n      });\n      return setLoadingRequest(false);\n    }\n\n    let subClaim = props.thisClaim.claims.find(\n      (item) => item.level === props.thisClaim.claim_level\n    );\n\n    if (subClaim) {\n      setLoadingRequest(true);\n      const api_body: claimResponseBody = {\n        sub_claim_id: subClaim.id,\n        evaluation_comment: responseMsg,\n        evaluated_by: props.auth.user.user_id,\n        decision_taken_status: actionTaken,\n        evaluator_name: props.auth.user.fname + \" \" + props.auth.user.lname,\n        evaluator_email: props.auth.user.email,\n      };\n\n      try {\n        const res = await axios.put<CandidateClaimInterface>(\n          `${API.CLAIMING}/user/evaluate/${props.thisClaim._id}`,\n          api_body\n        );\n        if (res) {\n          console.log(\"====================================\");\n          console.log({ evaluate_claim_res: res });\n          console.log(\"====================================\");\n          props.evaluateClaim(res.data);\n          // REVALIDATED DOCUMENT IF IT IS APPROVED =========================\n          if (actionTaken === ClaimDecisionStatus.ACCEPTED) {\n            await overrideDecision();\n          }\n          props.PushPopupAlert({\n            title: `Claim responded successfully!`,\n            theme: PopupAlertTheme.success,\n          });\n          // setDocumentId(\"null\");\n          setResponseMsg(\"\");\n          setActionTaken(null);\n        }\n      } catch (error) {\n        console.error(error);\n        props.PushPopupAlert({\n          title: errorToText(error),\n          theme: PopupAlertTheme.danger,\n        });\n      }\n      setLoadingRequest(false);\n    }\n  };\n\n  const getReasonById = (\n    reason_id: string\n  ): claimReasonInterface | undefined => {\n    if (props.claimReasons) {\n      return props.claimReasons.find((item) => item.id === reason_id);\n    }\n    return undefined;\n  };\n\n  const overrideDecision = async () => {\n    try {\n      const res = await axios.patch(\n        `${API.APPLICATION}/tolerateappl/${props.thisClaim.claiming_on_id}`,\n        {\n          user_id: props.auth.user.user_id,\n          email: props.thisClaim.userDetails.email,\n          phone_number: props.thisClaim.userDetails.phone_number,\n          comment: responseMsg,\n          application_status: ApplicationStates.Shortlisted,\n        }\n      );\n\n      res.data &&\n        props.reAssessApplication({\n          application_id: props.thisClaim.claiming_on_id,\n          application_status: ApplicationStates.Shortlisted,\n        });\n    } catch (error) {\n      console.error({ code_error: error });\n      PushPopupAlert({\n        title: errorToText(error),\n        theme: PopupAlertTheme.danger,\n      });\n      // errorToText(error);\n    }\n    setLoadingRequest(false);\n  };\n\n  const getPositionById = (position_id: string): PositionAPI | undefined => {\n    let result = props.systemPositions.find(\n      (item) => item.position_id === position_id\n    );\n\n    return result;\n  };\n\n  return (\n    <section>\n      <div className=\"w-full py-1 divide-y-2 space-y-4\">\n        {/* DOCUMENT DETAILS ==================================================== */}\n        <section className=\"flex flex-col\">\n          {/* DISPLAY PROFILE ==================================================== */}\n          <section className=\"w-full mb-4 -mt-2 pb-3 px-4 bg-white\">\n            <div className=\"flex items-center justify-between\">\n              <div className=\"flex items-center gap-2 px-12\">\n                <span className={`italic text-blue-600`}>Applicant:</span>\n                <span className=\"text-blue-800 font-bold text-xl\">\n                  {props.thisClaim.userDetails.user_info.fname +\n                    \" \" +\n                    props.thisClaim.userDetails.user_info.lname}\n                </span>\n              </div>\n              {false && (\n                <button\n                  type=\"button\"\n                  className=\"bg-blue-200 hover:bg-blue-300 text-blue-700 group-hover:text-blue-800 py-1 px-2 mr-1 rounded text-sm\"\n                  onClick={() => setViewPosition(!viewPosition)}\n                >\n                  {viewPosition ? \"Hide\" : \"More\"}\n                </button>\n              )}\n            </div>\n          </section>\n          {/* DISPLAY POSITION ==================================================== */}\n          <section className=\"w-full mb-4 bg-white px-4 py-2 rounded\">\n            <div className=\"bg-white w-full\">\n              <div className=\"text-gray-800 text-2xl font-bold\">\n                Position Details\n              </div>\n              <div className=\"flex items-center\">\n                <div className=\"flex items-center gap-2\">\n                  <span className={`italic text-gray-600`}>Name:</span>\n                  <span className=\"text-gray-800 font-bold text-2xl\">\n                    {getPositionById(props.thisApplication.position)\n                      ? getPositionById(props.thisApplication.position)!\n                          .position_title\n                      : \"Position not found\"}\n                  </span>\n                </div>\n              </div>\n              <div className=\"flex items-center gap-2 text-base text-gray-600\">\n                <span className={`italic`}>Desc:</span>\n                <span className=\"font-semibold\">\n                  {getPositionById(props.thisApplication.position)\n                    ? getPositionById(props.thisApplication.position)!\n                        .description\n                    : \"\"}\n                </span>\n              </div>\n              <div className=\"flex items-center gap-2 text-base text-gray-600\">\n                <span className={`italic`}>School level:</span>\n                <span className=\"font-semibold\">\n                  {getPositionById(props.thisApplication.position)\n                    ? getPositionById(props.thisApplication.position)!\n                        .school_level_id.school_level_name\n                    : \"\"}\n                </span>\n              </div>\n              <div className=\"flex items-center gap-2 text-base text-gray-600\">\n                <span className={`italic`}>Institute:</span>\n                <span className=\"font-semibold\">\n                  {getPositionById(props.thisApplication.position)\n                    ? getPositionById(props.thisApplication.position)!\n                        .education_institute_id.education_category_title\n                    : \"\"}\n                </span>\n              </div>\n              <div className=\"flex items-center gap-2 text-base text-gray-600\">\n                <span className={`italic`}>Exams:</span>\n                <span className=\"flex items-center gap-2\">\n                  {getPositionById(props.thisApplication.position) ? (\n                    getPositionById(\n                      props.thisApplication.position\n                    )!.courses.map((item, index) => (\n                      <div\n                        key={index + item.course_id}\n                        className=\"flex items-center gap-1\"\n                      >\n                        <span className=\"font-semibold\">\n                          {item.course_name}\n                        </span>\n                        <span className=\"text-gray-600\">\n                          ({item.course_code})\n                        </span>\n                        {index !==\n                          getPositionById(props.thisApplication.position)!\n                            .courses.length -\n                            1 && \",\"}\n                      </div>\n                    ))\n                  ) : (\n                    <NoResult\n                      theme={NoResultThemes.Dark}\n                      value={\"No courses found\"}\n                    />\n                  )}\n                </span>\n              </div>\n\n              <div className=\"text-gray-800 text-2xl font-bold my-2\">\n                Position Requirements\n              </div>\n              {getPositionById(props.thisApplication.position) ? (\n                getPositionById(props.thisApplication.position)!.requirements\n                  .length > 0 ? (\n                  FC_AdminApplicationPositionDistinctCategory(\n                    getPositionById(props.thisApplication.position)!,\n                    props.documentCategories\n                  ).DistinctCategoriesTemp.map((item, index) => (\n                    <div\n                      className=\"bg-gray-100props.thisApplication.position rounded p-2\"\n                      key={index + item.category_id}\n                    >\n                      <div className=\"flex items-center gap-2 text-2xl text-gray-500 font-bold\">\n                        <MdTurnedIn />\n                        <span>{item.category_title}</span>\n                      </div>\n                      <div className=\"border bg-white mt-1\">\n                        <ViewDocRequirements\n                          requirements={FC_AdminApplicationPositionDistinctCategory(\n                            getPositionById(props.thisApplication.position)!,\n                            props.documentCategories\n                          ).PositionsTemp.filter(\n                            (req) => req.category_id === item.category_id\n                          )}\n                          userDocs={props.thisClaim.userDetails.details}\n                        />\n                      </div>\n                    </div>\n                  ))\n                ) : (\n                  <NoResult\n                    theme={NoResultThemes.Dark}\n                    value={\"No requirements\"}\n                  ></NoResult>\n                )\n              ) : (\n                <NoResult\n                  theme={NoResultThemes.Dark}\n                  value={\"No requirements\"}\n                ></NoResult>\n              )}\n            </div>\n          </section>\n          {/* END DISPLAY POSITION ==================================================== */}\n          {/* -------------------------------------------------------------------------------- */}\n          {/* END DISPLAY PROFILE ==================================================== */}\n          {/* {selectedTab === viewTabs.profile && (\n            <div className=\"flex items-center\">\n              <div className=\"flex items-center gap-2\">\n                <span className={`italic text-gray-600`}>Position name:</span>\n                <span className=\"text-gray-800 font-bold text-2xl\">\n                  {getPositionById(props.thisApplication.position)\n                    ? getPositionById(props.thisApplication.position)!\n                        .position_title\n                    : \"Position not found\"}\n                </span>\n              </div>\n            </div>\n          )} */}\n          <section className=\"px-4 py-2 bg-white rounded\">\n            <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n              <span className={`italic`}>Status:</span>\n              <span\n                className={`font-bold ${\n                  props.thisClaim.previous\n                    ? props.thisClaim.previous.status ===\n                      ApplicationStates.Rejected\n                    : props.thisApplication.application_status ===\n                      ApplicationStates.Rejected\n                    ? \"text-yellow-900\"\n                    : \"text-blue-600\"\n                } rounded px-3 py-1`}\n              >\n                {props.thisClaim.previous\n                  ? capitalizeFirstLetter(props.thisClaim.previous.status)\n                  : capitalizeFirstLetter(\n                      props.thisApplication.application_status\n                    )}\n              </span>\n            </div>\n            <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n              <span className={`italic`}>Evaluated by:</span>\n              <span className=\"font-semibold\">\n                {props.thisClaim.previous.evaluater.name}\n              </span>\n            </div>\n            {false && (\n              <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n                <span className={`italic`}>Session:</span>\n                <span className=\"font-bold text-gray-900 py-1\">\n                  {props.thisApplication.application_session}\n                </span>\n              </div>\n            )}\n            <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n              <span className={`italic`}>Date:</span>\n              <span className=\"font-bold text-gray-900 py-1\">\n                {DATE(props.thisApplication.createdAt)}\n              </span>\n            </div>\n            <div className=\"flex items-start gap-2 text-sm text-gray-600\">\n              <span className={`italic`}>Reason:</span>\n              <span\n                className=\"font-normal\"\n                dangerouslySetInnerHTML={{\n                  __html: props.thisClaim.previous\n                    ? props.thisClaim.previous.reason\n                    : props.thisApplication.override_by.comment,\n                }}\n              ></span>\n            </div>\n          </section>\n        </section>\n        {/* END DOCUMENT DETAILS ==================================================== */}\n\n        {/* ################################################################################ */}\n\n        {/* CLAIM LEVEL 1 DETAILS ==================================================== */}\n        {props.thisClaim.claims.length > 0 &&\n          props.thisClaim.claims.map((claim, index) => (\n            <section\n              className=\"flex flex-col px-4 pt-2 pb-3 rounded bg-white\"\n              key={index + claim.id}\n            >\n              <div className=\"text-gray-700 italic font-bold\">\n                Claim Comment (level {index + 1})\n              </div>\n              {/* CLAIM COMMENT ==>> LEVEL 1 ==================================================== */}\n              <div className=\"flex flex-col items-start gap-2 mt-1 border rounded px-4 py-1 bg-gray-50\">\n                <div className=\"flex items-center gap-2 bg-blue-100 rounded py-1 px-2\">\n                  <MdInfoOutline />\n                  {getReasonById(props.thisClaim.default_claim_resaons)\n                    ? getReasonById(props.thisClaim.default_claim_resaons)!\n                        .reason\n                    : \"\"}\n                </div>\n                <p>{claim.reason}</p>\n                <span className=\"text-gray-600 text-xs\">\n                  {showDate(claim.createdAt)}\n                  {/* {showDate(claim.createdAt) +\n                    \" at \" +\n                    moment.unix(claim.date_created).format(\"MM/DD/YYYY\")} */}\n                </span>\n              </div>\n              {/* CLAIM COMMENT ==>> LEVEL 1 ==================================================== */}\n\n              {isClaimEvaluated(props.thisClaim, claim.level) && (\n                <section className=\"mt-4\">\n                  <span className=\"text-gray-700 italic font-semibold\">\n                    Response (level {index + 1})\n                  </span>\n                  <div className=\"border-t-2\">\n                    <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n                      <span className={`italic`}>Status:</span>\n                      <span\n                        className={`font-bold ${\n                          claim.decision_taken_status ===\n                          ClaimDecisionStatus.REJECTED\n                            ? \"text-yellow-900\"\n                            : \"text-blue-600\"\n                        } rounded px-3 py-1`}\n                      >\n                        {capitalizeFirstLetter(\n                          claim.decision_taken_status.toLocaleLowerCase()\n                        )}\n                      </span>\n                    </div>\n                    <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n                      <span className={`italic`}>Evaluated by:</span>\n                      <span className=\"font-semibold\">\n                        {claim.evaluater.name}\n                      </span>\n                    </div>\n                    <div className=\"flex items-start gap-2 text-sm text-gray-600\">\n                      <span className={`italic`}>Reason:</span>\n                      <span\n                        className=\"font-normal\"\n                        dangerouslySetInnerHTML={{\n                          __html: claim.evaluation_comment,\n                        }}\n                      ></span>\n                    </div>\n                  </div>\n                </section>\n              )}\n            </section>\n          ))}\n        {/* END CLAIM LEVEL 1 DETAILS ==================================================== */}\n      </div>\n\n      {/* FOOTER INITIAL ========================================== */}\n      {!actionTaken && (\n        <section className=\"flex items-center justify-between bg-gray-50 rounded mt-3\">\n          {/* SHOWING STATUS ===================================== */}\n          <div className=\"mx-4 my-4\">\n            <span\n              className={`${\n                props.thisClaim.last_claim_status === ClaimStatus.PENDING\n                  ? \"text-yellow-700\"\n                  : props.thisClaim.last_claim_status === ClaimStatus.DELETED\n                  ? \"text-red-700\"\n                  : \"text-green-700\"\n              } italic font-semibold`}\n            >\n              {capitalizeFirstLetter(\n                props.thisClaim.last_claim_status.toLocaleLowerCase()\n              )}\n            </span>\n          </div>\n\n          {props.thisClaim.last_claim_status === ClaimStatus.PENDING && (\n            <div className=\"flex items-center gap-2 px-2\">\n              <button\n                className={`px-4 py-2 font-semibold text-red-50 rounded inline-flex items-center space-x-2 focus:outline-none bg-red-700 hover:bg-red-800`}\n                onClick={() => {\n                  setActionTaken(ClaimDecisionStatus.REJECTED);\n                }}\n              >\n                <MdCancel className=\"w-5 h-5\" />\n                <span>Reject</span>\n              </button>\n              <button\n                className={`px-4 py-2 font-semibold text-blue-50 rounded inline-flex items-center space-x-2 focus:outline-none bg-blue-700 hover:bg-blue-800`}\n                onClick={() => {\n                  setActionTaken(ClaimDecisionStatus.ACCEPTED);\n                }}\n              >\n                <FaRegCheckCircle className=\"w-5 h-5\" />\n                <span>Accept</span>\n              </button>\n            </div>\n          )}\n        </section>\n      )}\n      {/* END FOOTER INITIAL ========================================== */}\n\n      {/* ======================================================== */}\n      {/* FOOTER RESPONSE ========================================== */}\n      {actionTaken && (\n        <section className=\"my-5 overflow-x-auto\">\n          <div className=\"italic text-gray-700 text-base my-1 mx-2\">\n            Selected decision:{\" \"}\n            <span\n              className={`font-semibold text-lg ${\n                actionTaken === ClaimDecisionStatus.ACCEPTED\n                  ? \"text-blue-700\"\n                  : \"text-yellow-800\"\n              }`}\n            >\n              {actionTaken === ClaimDecisionStatus.ACCEPTED\n                ? \"Approved\"\n                : \"Rejected\"}\n            </span>\n          </div>\n          {/* right part */}\n          <div className=\"flex flex-col md:flex-row items-end md:items-start gap-1 w-full\">\n            <div className=\"w-full px-2\">\n              <textarea\n                placeholder={`Reason of your decision...`}\n                cols={50}\n                rows={3}\n                className={`border border-${\n                  formError && formError.element === \"comment\" ? \"red\" : \"gray\"\n                }-400 rounded px-3 py-1 w-full focus:outline-none`}\n                style={{ resize: \"none\" }}\n                value={responseMsg}\n                onChange={(e) => {\n                  setResponseMsg(e.target.value);\n                  setFormError(null);\n                }}\n                disabled={loadingRequest}\n              ></textarea>\n              {formError && formError.element === \"comment\" && (\n                <p className=\"text-red-800\">{formError.msg}</p>\n              )}\n            </div>\n            <div className=\"flex flex-row md:flex-col gap-1 max-w-full px-2\">\n              <button\n                className=\"bg-gray-700 hover:bg-gray-800 px-4 py-2 font-semibold rounded text-white inline-flex items-center space-x-2 focus:outline-none\"\n                onClick={() => {\n                  setResponseMsg(\"\");\n                  setActionTaken(null);\n                  setFormError(null);\n                }}\n                disabled={loadingRequest}\n              >\n                <RiArrowGoBackFill className=\"w-5 h-5\" />\n                <span>Back</span>\n              </button>\n              <button\n                className=\"bg-blue-700 hover:bg-blue-800 px-4 py-2 font-semibold rounded text-white inline-flex items-center space-x-2 focus:outline-none\"\n                disabled={loadingRequest}\n                onClick={() =>\n                  window.confirm(\n                    `Are you sure you want to ${\n                      actionTaken === ClaimDecisionStatus.ACCEPTED\n                        ? \"approve\"\n                        : \"rejected\"\n                    } this document?`\n                  ) && handleVerify()\n                }\n              >\n                {loadingRequest ? (\n                  <div className=\"\">Loading...</div>\n                ) : (\n                  <div className=\"inline-flex items-center space-x-2 gap-1\">\n                    <FaRegCheckCircle className=\"w-5 h-5\" />\n                    <span>Confirm</span>\n                  </div>\n                )}\n              </button>\n            </div>\n          </div>\n          {/* end right part */}\n        </section>\n      )}\n      {/* END FOOTER RESPONSE ========================================== */}\n    </section>\n  );\n};\n\nconst mapStateToProps = ({\n  auth,\n}: StoreState): {\n  auth: Auth;\n} => {\n  return {\n    auth: auth,\n  };\n};\n\nexport default React.memo(\n  connect(mapStateToProps, {\n    evaluateClaim,\n    reAssessApplication,\n    PushPopupAlert,\n  })(AdminClaimAppView)\n);\n","import axios from \"axios\";\nimport React from \"react\";\nimport { FaRegCheckCircle } from \"react-icons/fa\";\nimport { MdCancel, MdInfoOutline } from \"react-icons/md\";\nimport { RiArrowGoBackFill } from \"react-icons/ri\";\nimport { connect } from \"react-redux\";\nimport { adminDisplayClaimTitle } from \".\";\nimport { Auth, PushPopupAlert } from \"../../../actions\";\nimport { evaluateClaim } from \"../../../actions/claiming\";\nimport { verifyDocument } from \"../../../actions/document\";\nimport { VerifyDocumentInterface } from \"../../../actions/users\";\nimport {\n  CandidateClaimInterface,\n  ClaimDecisionStatus,\n  claimReasonInterface,\n  ClaimStatus,\n  ClaimTypesInterfaceAPI,\n} from \"../../../interfaces\";\nimport { PopupAlertTheme } from \"../../../interfaces/popupAlert\";\nimport { StoreState } from \"../../../reducers\";\nimport { DocumentReducerInterface } from \"../../../reducers/document\";\nimport {\n  capitalizeFirstLetter,\n  isEmptyOrSpaces,\n} from \"../../../shared/dataTest\";\nimport {\n  DocValidationStatusInterface,\n  UserDocumentsInterface,\n} from \"../../../shared/interfaces\";\nimport { API } from \"../../../utils/api\";\nimport { errorToText } from \"../../../utils/errors\";\nimport { showDate } from \"../../../utils/functions\";\nimport { isClaimEvaluated } from \"../ClaimDocView\";\n\nexport type claimResponseBody = {\n  sub_claim_id: string;\n  evaluation_comment: string;\n  evaluated_by: string;\n  evaluator_name: string;\n  evaluator_email: string;\n  decision_taken_status: ClaimDecisionStatus;\n};\n\ntype AdminClaimDocViewProps = {\n  thisDoc: UserDocumentsInterface;\n  documentCategories: DocumentReducerInterface;\n  thisClaim: CandidateClaimInterface;\n  claimReasons: claimReasonInterface[] | null;\n  candidateId: string;\n  claimTypes: ClaimTypesInterfaceAPI[];\n  viewImage: boolean;\n  setViewImage: (value: boolean) => void;\n  loadingRequest: boolean;\n  setLoadingRequest: (value: boolean) => void;\n  actionTaken: ClaimDecisionStatus | null;\n  setActionTaken: (value: ClaimDecisionStatus | null) => void;\n  responseMsg: string;\n  setResponseMsg: (value: string) => void;\n  formError: {\n    element: string;\n    msg: string;\n  } | null;\n  setFormError: (\n    value: {\n      element: string;\n      msg: string;\n    } | null\n  ) => void;\n\n  // REDUX ==================\n  auth: Auth;\n  verifyDocument: Function;\n  evaluateClaim: Function;\n  PushPopupAlert: Function;\n};\n\nconst AdminClaimDocView: React.FC<AdminClaimDocViewProps> = (props) => {\n  const handleVerify = async () => {\n    if (!props.actionTaken) {\n      props.setFormError({\n        element: \"action\",\n        msg: \"Action is required!\",\n      });\n      return props.setLoadingRequest(false);\n    }\n\n    if (isEmptyOrSpaces(props.responseMsg)) {\n      props.setFormError({\n        element: \"comment\",\n        msg: \"Reason of rejection is required\",\n      });\n      return props.setLoadingRequest(false);\n    }\n\n    let subClaim = props.thisClaim.claims.find(\n      (item) => item.level === props.thisClaim.claim_level\n    );\n\n    if (subClaim) {\n      props.setLoadingRequest(true);\n      const api_body: claimResponseBody = {\n        sub_claim_id: subClaim.id,\n        evaluation_comment: props.responseMsg,\n        evaluated_by: props.auth.user.user_id,\n        decision_taken_status: props.actionTaken,\n        evaluator_name: props.auth.user.fname + \" \" + props.auth.user.lname,\n        evaluator_email: props.auth.user.email,\n      };\n\n      try {\n        const res = await axios.put<CandidateClaimInterface>(\n          `${API.CLAIMING}/user/evaluate/${props.thisClaim._id}`,\n          api_body\n        );\n        if (res) {\n          console.log({ evaluate_claim_res: res });\n          props.evaluateClaim(res.data);\n          // REVALIDATED DOCUMENT IF IT IS APPROVED =========================\n          if (props.actionTaken === ClaimDecisionStatus.ACCEPTED) {\n            await FC_DocValidation();\n          }\n          props.PushPopupAlert({\n            title: `Claim responded successfully!`,\n            theme: PopupAlertTheme.success,\n          });\n          // setDocumentId(\"null\");\n          props.setResponseMsg(\"\");\n          props.setActionTaken(null);\n        }\n      } catch (error) {\n        console.error(error);\n        props.PushPopupAlert({\n          title: errorToText(error),\n          theme: PopupAlertTheme.danger,\n        });\n      }\n      props.setLoadingRequest(false);\n    }\n  };\n\n  const FC_DocValidation = async () => {\n    const api_body: VerifyDocumentInterface = {\n      user_id: props.thisClaim.user,\n      doc_id: props.thisClaim.claiming_on_id,\n      validation_status:\n        props.actionTaken === ClaimDecisionStatus.ACCEPTED\n          ? DocValidationStatusInterface.APPROVED\n          : DocValidationStatusInterface.REJECTED,\n      validated_by: {\n        user_id: props.auth.user.user_id,\n        comment: props.responseMsg,\n        validation_status:\n          props.actionTaken === ClaimDecisionStatus.ACCEPTED\n            ? DocValidationStatusInterface.APPROVED\n            : DocValidationStatusInterface.REJECTED,\n      },\n      in_education: false,\n      disability: false,\n    };\n    const api_redux: VerifyDocumentInterface = {\n      user_id: props.thisClaim.user,\n      doc_id: props.thisClaim.claiming_on_id,\n      validation_status:\n        props.actionTaken === ClaimDecisionStatus.ACCEPTED\n          ? DocValidationStatusInterface.APPROVED\n          : DocValidationStatusInterface.REJECTED,\n      validated_by: {\n        user_id: props.auth.user.user_id,\n        comment: props.responseMsg,\n        validation_status:\n          props.actionTaken === ClaimDecisionStatus.ACCEPTED\n            ? DocValidationStatusInterface.APPROVED\n            : DocValidationStatusInterface.REJECTED,\n        date: \"\",\n      },\n      in_education: false,\n      disability: false,\n    };\n\n    try {\n      const res = await axios.post<VerifyDocumentInterface>(\n        `${API.AUTH}/validateuserdoc`,\n        api_body\n      );\n      if (res) {\n        props.verifyDocument(api_redux);\n        await FC_shortListing(props.thisClaim.user);\n        // setDocumentId(\"null\");\n      }\n    } catch (error) {\n      console.error(error);\n      props.PushPopupAlert({\n        title: errorToText(error),\n        theme: PopupAlertTheme.danger,\n      });\n    }\n  };\n\n  const FC_shortListing = async (candidate_id: string) => {\n    try {\n      const res = await axios.patch(\n        `${API.APPLICATION}/doccheckshortlist/${candidate_id}`\n      );\n      console.log({ res });\n    } catch (error) {\n      console.error({ error });\n      props.PushPopupAlert({\n        title: errorToText(error),\n        theme: PopupAlertTheme.danger,\n      });\n    }\n  };\n\n  const getReasonById = (\n    reason_id: string\n  ): claimReasonInterface | undefined => {\n    if (props.claimReasons) {\n      return props.claimReasons.find((item) => item.id === reason_id);\n    }\n    return undefined;\n  };\n\n  return (\n    <section className=\"\">\n      <div className=\"w-full bg-white px-4 py-1 divide-y-2 space-y-2\">\n        {/* DOCUMENT DETAILS ==================================================== */}\n        <section className=\"flex flex-col\">\n          <div className=\"flex items-center justify-between\">\n            <div className=\"flex items-center gap-2\">\n              <span className={`italic text-gray-600`}>Names:</span>\n              <span className=\"text-gray-800 font-bold text-xl\">\n                {props.thisClaim.userDetails.user_info.fname +\n                  \" \" +\n                  props.thisClaim.userDetails.user_info.lname}\n              </span>\n            </div>\n            <button\n              type=\"button\"\n              className=\"bg-blue-200 hover:bg-blue-300 text-blue-700 group-hover:text-blue-800 py-1 px-2 mr-1 rounded text-sm\"\n              onClick={() => props.setViewImage(!props.viewImage)}\n            >\n              {props.viewImage ? \"Hide\" : \"View\"}\n            </button>\n          </div>\n          <div className=\"flex items-center gap-2\">\n            <span className={`italic text-gray-600`}>Title:</span>\n            <span className=\"text-gray-800 font-bold text-2xl\">\n              {/* {ClaimGetDocTitle(props.documentCategories, props.thisDoc).main} */}\n              {props.thisClaim.userDetails.details.filter(\n                (item) => item.validation_status !== \"waiting\"\n              ).length > 0\n                ? adminDisplayClaimTitle(\n                    props.documentCategories,\n                    props.thisClaim.userDetails.details.filter(\n                      (item) => item.validation_status !== \"waiting\"\n                    ),\n                    props.thisClaim\n                  )\n                : \"-\"}\n            </span>\n          </div>\n          <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n            <span className={`italic`}>Status:</span>\n            <span className=\"font-bold text-yellow-900 rounded px-3 py-1\">\n              {props.thisClaim.previous\n                ? capitalizeFirstLetter(props.thisClaim.previous.status)\n                : capitalizeFirstLetter(props.thisDoc.validation_status)}\n            </span>\n          </div>\n          <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n            <span className={`italic`}>Evaluated by:</span>\n            <span className=\"font-semibold\">\n              {props.thisClaim.previous.evaluater.name}\n            </span>\n          </div>\n          <div className=\"flex items-start gap-2 text-sm text-gray-600\">\n            <span className={`italic`}>Reason:</span>\n            <span className=\"font-normal\">\n              {props.thisClaim.previous\n                ? props.thisClaim.previous.reason\n                : props.thisDoc.validated_by.commet}\n            </span>\n          </div>\n\n          {/* DISPLAY IMAGE ==================================================== */}\n          {props.viewImage && (\n            <div className=\"w-full my-1 animate__animated animate__fadeIn\">\n              <img\n                src={`${API.AUTH_FILES}/${props.thisDoc.files}`}\n                alt=\"doc file\"\n                className={`w-full animate__animated animate__fadeIn`}\n              />\n            </div>\n          )}\n          {/* END DISPLAY IMAGE ==================================================== */}\n        </section>\n        {/* END DOCUMENT DETAILS ==================================================== */}\n\n        {/* ################################################################################ */}\n\n        {/* CLAIM LEVEL 1 DETAILS ==================================================== */}\n        {props.thisClaim.claims.length > 0 &&\n          props.thisClaim.claims.map((claim, index) => (\n            <section className=\"flex flex-col px-2 pt-3\" key={index + claim.id}>\n              <div className=\"text-gray-700 italic font-bold\">\n                Claim Comment (level {index + 1})\n              </div>\n              {/* CLAIM COMMENT ==>> LEVEL 1 ==================================================== */}\n              <div className=\"flex flex-col items-start gap-2 mt-1 border rounded px-4 py-1 bg-gray-50\">\n                <div className=\"flex items-center gap-2 bg-blue-100 rounded py-1 px-2\">\n                  <MdInfoOutline />\n                  {getReasonById(props.thisClaim.default_claim_resaons)\n                    ? getReasonById(props.thisClaim.default_claim_resaons)!\n                        .reason\n                    : \"\"}\n                </div>\n                <p>{claim.reason}</p>\n                <span className=\"text-gray-500 text-xs\">\n                  {showDate(claim.createdAt)}\n                </span>\n              </div>\n              {/* CLAIM COMMENT ==>> LEVEL 1 ==================================================== */}\n\n              {isClaimEvaluated(props.thisClaim, claim.level) && (\n                <section className=\"mt-4\">\n                  <span className=\"text-gray-700 italic font-semibold\">\n                    Response (level {index + 1})\n                  </span>\n                  <div className=\"border-t-2\">\n                    <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n                      <span className={`italic`}>Status:</span>\n                      <span\n                        className={`font-bold ${\n                          claim.decision_taken_status ===\n                          ClaimDecisionStatus.REJECTED\n                            ? \"text-yellow-900\"\n                            : \"text-blue-600\"\n                        } rounded px-3 py-1`}\n                      >\n                        {capitalizeFirstLetter(\n                          claim.decision_taken_status.toLocaleLowerCase()\n                        )}\n                      </span>\n                    </div>\n                    <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n                      <span className={`italic`}>Evaluated by:</span>\n                      <span className=\"font-semibold\">\n                        {claim.evaluater.name}\n                      </span>\n                    </div>\n                    <div className=\"flex items-start gap-2 text-sm text-gray-600\">\n                      <span className={`italic`}>Reason:</span>\n                      <span className=\"font-normal\">\n                        {claim.evaluation_comment}\n                      </span>\n                    </div>\n                  </div>\n                </section>\n              )}\n            </section>\n          ))}\n        {/* END CLAIM LEVEL 1 DETAILS ==================================================== */}\n      </div>\n\n      {/* FOOTER INITIAL ========================================== */}\n      {!props.actionTaken && (\n        <section className=\"flex items-center justify-between bg-gray-50 rounded mt-3\">\n          {/* SHOWING STATUS ===================================== */}\n          <div className=\"mx-4\">\n            <span\n              className={`${\n                props.thisClaim.last_claim_status === ClaimStatus.PENDING\n                  ? \"text-yellow-700\"\n                  : props.thisClaim.last_claim_status === ClaimStatus.DELETED\n                  ? \"text-red-700\"\n                  : \"text-green-700\"\n              } italic font-semibold`}\n            >\n              {capitalizeFirstLetter(\n                props.thisClaim.last_claim_status.toLocaleLowerCase()\n              )}\n            </span>\n          </div>\n\n          {props.thisClaim.last_claim_status === ClaimStatus.PENDING && (\n            <div className=\"flex items-center gap-2 px-2\">\n              <button\n                className={`px-4 py-2 font-semibold text-red-50 rounded inline-flex items-center space-x-2 focus:outline-none bg-red-700 hover:bg-red-800`}\n                onClick={() => {\n                  props.setActionTaken(ClaimDecisionStatus.REJECTED);\n                }}\n              >\n                <MdCancel className=\"w-5 h-5\" />\n                <span>Reject</span>\n              </button>\n              <button\n                className={`px-4 py-2 font-semibold text-blue-50 rounded inline-flex items-center space-x-2 focus:outline-none bg-blue-700 hover:bg-blue-800`}\n                onClick={() => {\n                  props.setActionTaken(ClaimDecisionStatus.ACCEPTED);\n                }}\n              >\n                <FaRegCheckCircle className=\"w-5 h-5\" />\n                <span>Accept</span>\n              </button>\n            </div>\n          )}\n        </section>\n      )}\n      {/* END FOOTER INITIAL ========================================== */}\n\n      {/* ======================================================== */}\n      {/* FOOTER RESPONSE ========================================== */}\n      {props.actionTaken && (\n        <section className=\"my-5 overflow-x-auto\">\n          <div className=\"italic text-gray-700 text-base my-1 mx-2\">\n            Selected decision:{\" \"}\n            <span\n              className={`font-semibold text-lg ${\n                props.actionTaken === ClaimDecisionStatus.ACCEPTED\n                  ? \"text-blue-700\"\n                  : \"text-yellow-800\"\n              }`}\n            >\n              {props.actionTaken === ClaimDecisionStatus.ACCEPTED\n                ? \"Approved\"\n                : \"Rejected\"}\n            </span>\n          </div>\n          {/* right part */}\n          <div className=\"flex flex-col md:flex-row items-end md:items-start gap-1 w-full\">\n            <div className=\"w-full px-2\">\n              <textarea\n                placeholder={`Reason of your decision...`}\n                cols={50}\n                rows={3}\n                className={`border border-${\n                  props.formError && props.formError.element === \"comment\"\n                    ? \"red\"\n                    : \"gray\"\n                }-400 rounded px-3 py-1 w-full focus:outline-none`}\n                style={{ resize: \"none\" }}\n                value={props.responseMsg}\n                onChange={(e) => {\n                  props.setResponseMsg(e.target.value);\n                  props.setFormError(null);\n                }}\n                disabled={props.loadingRequest}\n              ></textarea>\n              {props.formError && props.formError.element === \"comment\" && (\n                <p className=\"text-red-800\">{props.formError.msg}</p>\n              )}\n            </div>\n            <div className=\"flex flex-row md:flex-col gap-1 max-w-full px-2\">\n              <button\n                className=\"bg-gray-700 hover:bg-gray-800 px-4 py-2 font-semibold rounded text-white inline-flex items-center space-x-2 focus:outline-none\"\n                onClick={() => {\n                  props.setResponseMsg(\"\");\n                  props.setActionTaken(null);\n                  props.setFormError(null);\n                }}\n                disabled={props.loadingRequest}\n              >\n                <RiArrowGoBackFill className=\"w-5 h-5\" />\n                <span>Back</span>\n              </button>\n              <button\n                className=\"bg-blue-700 hover:bg-blue-800 px-4 py-2 font-semibold rounded text-white inline-flex items-center space-x-2 focus:outline-none\"\n                disabled={props.loadingRequest}\n                onClick={() =>\n                  window.confirm(\n                    `Are you sure you want to ${\n                      props.actionTaken === ClaimDecisionStatus.ACCEPTED\n                        ? \"approve\"\n                        : \"rejected\"\n                    } this document?`\n                  ) && handleVerify()\n                }\n              >\n                {props.loadingRequest ? (\n                  <div className=\"\">Loading...</div>\n                ) : (\n                  <div className=\"inline-flex items-center space-x-2 gap-1\">\n                    <FaRegCheckCircle className=\"w-5 h-5\" />\n                    <span>Confirm</span>\n                  </div>\n                )}\n              </button>\n            </div>\n          </div>\n          {/* end right part */}\n        </section>\n      )}\n      {/* END FOOTER RESPONSE ========================================== */}\n    </section>\n  );\n};\n\nconst mapStateToProps = ({\n  auth,\n}: StoreState): {\n  auth: Auth;\n} => {\n  return {\n    auth: auth,\n  };\n};\n\nexport default React.memo(connect(mapStateToProps, {\n  evaluateClaim,\n  verifyDocument,\n  PushPopupAlert,\n})(AdminClaimDocView));\n","import React, { Component } from \"react\";\nimport { MdArrowBack, MdInfoOutline } from \"react-icons/md\";\nimport { connect } from \"react-redux\";\nimport { Auth, loadCourses, PushPopupAlert } from \"../../../actions\";\nimport {\n  getAllClaims,\n  getAllApplications,\n  getClaimReasons,\n  getAllAnswers,\n} from \"../../../actions/claiming\";\nimport {\n  getDocumentCategory,\n  getDocumentSubCategory,\n  getDocumentFields,\n} from \"../../../actions/document\";\nimport { GetAllSessionPlans } from \"../../../actions/session\";\nimport { getPositions } from \"../../../actions/settings\";\nimport { PopupAlertData } from \"../../../components/Alert/Popup\";\nimport Loading from \"../../../components/Loading/Loading\";\nimport TableLoading from \"../../../components/Loading/TableLoading\";\nimport { SideNavigation } from \"../../../components/Navigation/SideNavigation\";\nimport NoResult, {\n  NoResultThemes,\n} from \"../../../components/NoResult/NoResult\";\nimport {\n  SessionPlanInterface,\n  PositionAPI,\n  allClaimApplicationInterface,\n  CandidateClaimInterface,\n  PlansTypeKeys,\n  ClaimDecisionStatus,\n  ClaimTypesInterface,\n  course,\n} from \"../../../interfaces\";\nimport { PopupAlertTheme } from \"../../../interfaces/popupAlert\";\nimport { StoreState } from \"../../../reducers\";\nimport { ClaimingReducerType } from \"../../../reducers/claiming\";\nimport { DocumentReducerInterface } from \"../../../reducers/document\";\nimport { capitalizeFirstLetter } from \"../../../shared/dataTest\";\nimport { UserDocumentsInterface } from \"../../../shared/interfaces\";\nimport { DATE } from \"../../../utils/functions\";\nimport search from \"../../../utils/search\";\nimport { getClaimById, whichClaimStatus, whichClaimType } from \"../Candidate\";\nimport { getCourseById, getCourseIdBySheetId } from \"../Candidate/FormExamList\";\nimport ClaimHeaderTitle from \"../ClaimHeaderTitle\";\nimport AdminClaimAppView from \"./AdminClaimAppView\";\nimport AdminClaimDocView from \"./AdminClaimDocView\";\nimport AdminClaimExamView from \"./AdminClaimExamView\";\nimport AdminFilterByType, {\n  filterClaimsByClaimType,\n} from \"./AdminFilterByType\";\n\n// export const getUserDocuments = (\n//   userList: UserInterface[],\n//   user_id: String\n// ): { user: UserInterface; document: UserDocumentsInterface[] } | null => {\n//   const thisUser = userList.find((item) => item.user_id === user_id);\n//   if (thisUser) {\n//     const thisDoc = thisUser.details.filter(\n//       (item) => item.validation_status !== \"waiting\"\n//     );\n//     return { user: thisUser, document: thisDoc };\n//   }\n//   return null;\n// };\n\nexport const adminDisplayClaimTitle = (\n  documentCategories: DocumentReducerInterface,\n  candidateDocuments: UserDocumentsInterface[],\n  thisClaim: CandidateClaimInterface\n): string => {\n  let result: string = \"\";\n\n  // CHECK IF CLAIM IS FOR DOCUMENTS ===============================================\n  if (thisClaim.type_key === PlansTypeKeys.DOCUMENT_VALIDATION) {\n    let thisDoc = candidateDocuments.find(\n      (item) => item.doc_id === thisClaim.claiming_on_id\n    );\n    result = thisDoc\n      ? AdminClaimGetDocTitle(documentCategories, thisDoc).main\n      : \"Document not found\";\n  }\n  // END CHECK IF CLAIM IS FOR DOCUMENTS ===============================================\n\n  return result;\n};\n\nexport const AdminClaimGetDocTitle = (\n  documentCategories: DocumentReducerInterface,\n  doc: UserDocumentsInterface\n): { category: string; sub_category: string; field: string; main: string } => {\n  let DocCategory: string = \"\",\n    DocSubCategory: string = \"\",\n    DocField: string = \"\",\n    DocTitle: string = \"\";\n  if (\n    doc.sub_category_id &&\n    doc.sub_category_id.length > 0 &&\n    documentCategories.documentSubCategory\n  ) {\n    DocTitle = documentCategories.documentSubCategory.filter(\n      (c) => c.user_detail_subcategory_id === doc.sub_category_id\n    )[0].title;\n    DocSubCategory = DocTitle;\n  } else if (\n    doc.category_id.length > 0 &&\n    documentCategories.documentCategory\n  ) {\n    DocTitle = documentCategories.documentCategory.filter(\n      (c) => c.user_detail_category_id === doc.category_id\n    )[0].title;\n    DocCategory = DocTitle;\n  }\n  if (\n    doc.category_subcategory_data.length > 0 &&\n    documentCategories.documentFields\n  ) {\n    DocField = documentCategories.documentFields.filter(\n      (c) => c._id === doc.category_subcategory_data\n    )[0].title;\n    DocTitle += \" in \" + DocField;\n  }\n\n  return {\n    category: DocCategory,\n    sub_category: DocSubCategory,\n    field: DocField,\n    main: DocTitle,\n  };\n};\n\nexport const getApplicationById = (\n  allApplications: allClaimApplicationInterface[] | null,\n  systemPositions: PositionAPI[] | null,\n  application_id: String\n): {\n  application: allClaimApplicationInterface;\n  position: PositionAPI;\n} | null => {\n  if (allApplications) {\n    let thisApplication = allApplications.find(\n      (item) => item._id === application_id\n    );\n    if (thisApplication && systemPositions) {\n      let thisPosition = systemPositions.find(\n        (item) => item.position_id === thisApplication!.position\n      );\n      if (thisPosition) {\n        return { application: thisApplication, position: thisPosition };\n      }\n    }\n  }\n  return null;\n};\n\ntype AppProps = {\n  auth: Auth;\n  application_sessions: SessionPlanInterface[] | null;\n  claiming: ClaimingReducerType;\n  documentReducer: DocumentReducerInterface;\n  systemPositions: PositionAPI[] | null;\n  courses: course[] | null;\n  loadCourses: Function;\n  getPositions: Function;\n  getClaimReasons: Function;\n  getAllApplications: Function;\n  getAllClaims: Function;\n  getAllAnswers: Function;\n  GetAllSessionPlans: Function;\n  getDocumentCategory: Function;\n  getDocumentSubCategory: Function;\n  getDocumentFields: Function;\n  verifyAllDocument: Function;\n  PushPopupAlert: (alert: PopupAlertData) => void;\n};\n\ntype AppState = {\n  loading: boolean;\n  loadingData: boolean;\n  thisPeriod: SessionPlanInterface | null;\n  viewClaim: boolean;\n  periodChanged: boolean;\n  claimId: string | null;\n  claimType: string | null;\n  candidateId: string | null;\n  searchClaim: string;\n\n  // FOR FORM ================\n  viewImage: boolean;\n  loadingRequest: boolean;\n  actionTaken: ClaimDecisionStatus | null;\n  responseMsg: string;\n  formError: {\n    element: string;\n    msg: string;\n  } | null;\n};\n\nclass Index extends Component<AppProps, AppState> {\n  constructor(props: AppProps) {\n    super(props);\n\n    this.state = {\n      loading: true,\n      loadingData: false,\n      thisPeriod: null,\n      viewClaim: false,\n      periodChanged: false,\n      claimId: null,\n      claimType: null,\n      candidateId: null,\n      searchClaim: \"\",\n\n      // FOR FORM ================\n      viewImage: false,\n      loadingRequest: false,\n      actionTaken: null,\n      responseMsg: \"\",\n      formError: null,\n    };\n  }\n\n  setLoading = (value: boolean) => {\n    this.setState({ loading: value });\n  };\n\n  setLoadingData = (value: boolean) => {\n    this.setState({ loadingData: value });\n  };\n\n  setPeriodChanged = (value: boolean) => {\n    this.setState({ periodChanged: value });\n  };\n\n  setThisPeriod = (value: SessionPlanInterface | null) => {\n    this.setState({ thisPeriod: value });\n  };\n\n  setViewClaim = (value: boolean) => {\n    this.setState({ viewClaim: value });\n  };\n\n  // ------------------------------\n  setClaimId = (value: string | null) => {\n    this.setState({ claimId: value });\n  };\n  setClaimType = (value: string | null) => {\n    this.setState({ claimType: value });\n  };\n  setCandidateId = (value: string | null) => {\n    this.setState({ candidateId: value });\n  };\n  setViewImage = (value: boolean) => {\n    this.setState({ viewImage: value });\n  };\n  setLoadingRequest = (value: boolean) => {\n    this.setState({ loadingRequest: value });\n  };\n\n  setActionTaken = (value: ClaimDecisionStatus | null) => {\n    this.setState({ actionTaken: value });\n  };\n\n  setResponseMsg = (value: string) => {\n    this.setState({ responseMsg: value });\n  };\n\n  setFormError = (\n    value: {\n      element: string;\n      msg: string;\n    } | null\n  ) => {\n    this.setState({ formError: value });\n  };\n\n  setDefaultSession = (sessions: SessionPlanInterface[]) => {\n    // SETTING ACTIVE SESSION ==========================\n    if (this.state.thisPeriod === null) {\n      let thisSession = sessions.find((item) => item.is_active === true);\n      this.setThisPeriod(thisSession ? thisSession : sessions[0]);\n      this.loadsAllClaims(thisSession ? thisSession : sessions[0]);\n    }\n  };\n\n  setSearchClaim = (value: string) => {\n    this.setState({ searchClaim: value });\n  };\n\n  loadsAllClaims = (thisSession: SessionPlanInterface) => {\n    // LOADING CLAIMING OF CURRENT CANDIDATES ================================\n    if (this.props.claiming.allClaims === null) {\n      this.props.getAllClaims(\n        2,\n        thisSession.session_plan_id,\n        (status: boolean, msg: string) => {\n          this.setLoading(status);\n          if (!status && msg.length) {\n            this.props.PushPopupAlert({\n              title: msg,\n              theme: PopupAlertTheme.danger,\n            });\n          }\n        }\n      );\n    }\n  };\n\n  loadsApplications = (application_id: string) => {\n    // LOADING CLAIMING OF CURRENT CANDIDATES ================================\n    if (\n      !this.props.claiming.allApplications.find(\n        (item) => item._id === application_id\n      )\n    ) {\n      this.props.getAllApplications(\n        application_id,\n        (status: boolean, msg: string) => {\n          this.setLoading(status);\n          if (!status && msg.length) {\n            this.props.PushPopupAlert({\n              title: msg,\n              theme: PopupAlertTheme.danger,\n            });\n          }\n        }\n      );\n    }\n  };\n\n  loadsController = (file_id: string, claimType: PlansTypeKeys) => {\n    if (claimType === PlansTypeKeys.APPLICATION)\n      this.loadsApplications(file_id);\n    if (claimType === PlansTypeKeys.EXAMINATION) this.loadsAlAnswers(file_id);\n  };\n\n  loadsAlAnswers = (answersheet_id: string) => {\n    // LOADING CLAIMING OF CURRENT CANDIDATES ================================\n    if (\n      !this.props.claiming.allAnswer.find(\n        (item) => item.answer_sheet_id === answersheet_id\n      )\n    ) {\n      this.props.getAllAnswers(\n        answersheet_id,\n        (status: boolean, msg: string) => {\n          this.setLoading(status);\n          if (!status && msg.length) {\n            this.props.PushPopupAlert({\n              title: msg,\n              theme: PopupAlertTheme.danger,\n            });\n          }\n        }\n      );\n    }\n  };\n\n  componentDidMount = () => {\n    // LOADING APPLICATION SESSION ====================================\n    if (this.props.application_sessions === null) {\n      this.props.GetAllSessionPlans(\n        (status: boolean, msg: string, data?: SessionPlanInterface[]) => {\n          this.setLoading(status);\n          if (!status) {\n            if (msg.length) {\n              this.props.PushPopupAlert({\n                title: msg,\n                theme: PopupAlertTheme.danger,\n              });\n            }\n            if (data && data.length > 0) {\n              this.setDefaultSession(data);\n            }\n          }\n        }\n      );\n    } else if (this.props.application_sessions.length > 0) {\n      this.setDefaultSession(this.props.application_sessions);\n    }\n\n    // LOADING DOCUMENT CATEGORIES ==========================\n    if (!this.props.documentReducer.documentCategory) {\n      this.props.getDocumentCategory();\n      this.setLoading(false);\n    }\n\n    // LOADING DOCUMENT CLARIFICATIONS ==========================\n    if (!this.props.documentReducer.documentSubCategory) {\n      this.props.getDocumentSubCategory();\n      this.setLoading(false);\n    }\n\n    // LOADING DOCUMENT FIELDS ==========================\n    if (!this.props.documentReducer.documentFields) {\n      this.props.getDocumentFields();\n      this.setLoading(false);\n    }\n\n    if (this.props.systemPositions === null) {\n      this.props.getPositions((status: boolean, msg: string) => {\n        this.setLoading(status);\n        console.log({ status: status, msg: msg });\n        if (msg.length) {\n          this.props.PushPopupAlert({\n            title: msg,\n            theme: PopupAlertTheme.danger,\n          });\n        }\n      });\n    } else if (this.state.loading) {\n      this.setLoading(false);\n    }\n\n    if (this.props.claiming.claimReasons === null) {\n      this.props.getClaimReasons((status: boolean, msg: string) => {\n        this.setLoading(status);\n        if (!status) {\n          if (msg.length > 0) {\n            this.props.PushPopupAlert({\n              title: msg,\n              theme: PopupAlertTheme.danger,\n            });\n          }\n        }\n      });\n    }\n\n    if (\n      this.props.courses === null ||\n      (this.props.courses.length === 0 && this.state.loading)\n    ) {\n      this.props.loadCourses(this.setLoading);\n      this.setLoading(false);\n    } else {\n      this.setLoading(false);\n    }\n  };\n\n  displayClaimTitle = (\n    thisClaim: CandidateClaimInterface\n  ): string | JSX.Element => {\n    let result: string = thisClaim.claiming_on_id;\n    if (thisClaim.type_key === PlansTypeKeys.DOCUMENT_VALIDATION) {\n      let thisDocs = thisClaim.userDetails.details.filter(\n        (item) => item.validation_status !== \"waiting\"\n      );\n      result =\n        thisDocs.length > 0\n          ? adminDisplayClaimTitle(\n              this.props.documentReducer,\n              thisDocs,\n              thisClaim\n            )\n          : \"Document not found\";\n    }\n    if (thisClaim.type_key === PlansTypeKeys.APPLICATION) {\n      if (this.props.claiming.allApplications) {\n        let thisApplication = this.props.claiming.allApplications.find(\n          (item) => item._id === thisClaim.claiming_on_id\n        );\n        if (\n          thisApplication &&\n          this.props.claiming.allApplications &&\n          this.props.systemPositions\n        ) {\n          let thisPosition = this.props.systemPositions.find(\n            (item) => item.position_id === thisApplication!.position\n          );\n          if (thisPosition) {\n            result = thisPosition.position_title;\n          } else {\n            result = \"Application not found\";\n          }\n        }\n      }\n    }\n\n    if (\n      thisClaim.type_key === PlansTypeKeys.EXAMINATION &&\n      this.props.courses &&\n      this.props.claiming.allAnswer\n    ) {\n      let thisAnswer = getCourseIdBySheetId(\n        this.props.claiming.allAnswer,\n        thisClaim.claiming_on_id\n      );\n      if (thisAnswer && getCourseById(this.props.courses, thisAnswer.course)) {\n        result =\n          \"Exam of \" +\n          getCourseById(this.props.courses, thisAnswer.course)!.course_name;\n      } else {\n        result = \"Unknown exam\";\n      }\n    }\n\n    return result;\n  };\n\n  onPeriodChange = (period_id: string) => {\n    this.setPeriodChanged(true);\n    this.props.getAllClaims(2, period_id, (status: boolean, msg: string) => {\n      !status && this.setPeriodChanged(false);\n      this.setLoadingData(status);\n      if (status === false && msg.length) {\n        this.props.PushPopupAlert({\n          title: msg,\n          theme: PopupAlertTheme.danger,\n        });\n      }\n    });\n  };\n\n  getLastClaimDate = (claim: CandidateClaimInterface): string => {\n    let result: string = DATE(claim.createdAt);\n    const claimsLength: number = claim.claims.length;\n    result = DATE(claim.claims[claimsLength - 1].createdAt);\n    return result;\n  };\n\n  render() {\n    if (this.props.application_sessions === null) {\n      return (\n        <div className=\"text-center mt-7 font-bold text-4xl text-gray-400 animate-pulse\">\n          Loading Data...\n        </div>\n      );\n    }\n\n    if (this.props.application_sessions.length === 0) {\n      return (\n        <div className=\"bg-yellow-100 rounded flex flex-col items-center justify-center p-6 my-8 text-yellow-900 border border-yellow-900\">\n          <MdInfoOutline className=\"text-6xl md:text-9xl\" />\n          <div className=\"text-center flex flex-col\">\n            <span className=\"text-2xl md:text-4xl font-extrabold\">\n              No active session\n            </span>\n            <span className=\"text-lg\">\n              Please Wait for the system to publish the sessions or contact the\n              administrator\n            </span>\n          </div>\n        </div>\n      );\n    }\n\n    if (this.props.claiming.allClaims === null) {\n      return (\n        <div className=\"text-center mt-7 font-bold text-4xl text-gray-400 animate-pulse\">\n          Loading Data...\n        </div>\n      );\n    }\n\n    console.log(\"=================viewClaim===================\");\n    console.log({\n      allClaims: this.props.claiming.allClaims,\n      viewClaim: this.state.viewClaim,\n      candidateId: this.state.candidateId,\n      claimId: this.state.claimId,\n      // getClaimById: getClaimById(\n      //   this.props.claiming.allClaims,\n      //   this.state.claimId\n      // ),\n      claimTypes: this.props.claiming.claimTypes,\n    });\n    console.log(\"==================viewClaim==================\");\n\n    return (\n      <div>\n        {/* SIDE NAVIGATION */}\n        {!this.state.viewClaim && (\n          <SideNavigation>\n            {/* FILTER SECTION */}\n            <AdminFilterByType loadingClaims={this.state.loadingData} />\n            {/* END FILTER SECTION */}\n          </SideNavigation>\n        )}\n        {/* END SIDE NAVIGATION */}\n\n        {/* 00000000000000000000000000000000000 */}\n\n        {/* CLAIM TITLE ===================================== */}\n        {!this.state.viewClaim && (\n          <ClaimHeaderTitle\n            headerTitle={`${\n              this.props.claiming.selectedClaimType === \"all\"\n                ? \"All\"\n                : this.props.claiming.selectedClaimType ===\n                  PlansTypeKeys.DOCUMENT_VALIDATION\n                ? \"Documents\"\n                : this.props.claiming.selectedClaimType ===\n                  PlansTypeKeys.APPLICATION\n                ? \"Applications\"\n                : this.props.claiming.selectedClaimType ===\n                  PlansTypeKeys.EXAMINATION\n                ? \"Exam\"\n                : this.props.claiming.selectedClaimType ===\n                  PlansTypeKeys.MARKS_PUBLICATION\n                ? \"Marks publication\"\n                : this.props.claiming.selectedClaimType ===\n                  PlansTypeKeys.PLACEMENT_TRANSFER\n                ? \"Placements\"\n                : \"\"\n            } Claiming`}\n            loading={this.state.loadingData}\n            loadingSession={this.state.loading}\n            thisPeriod={this.state.thisPeriod}\n            setThisPeriod={this.setThisPeriod}\n            setLoadingSession={this.setLoadingData}\n            application_sessions={this.props.application_sessions}\n            onPeriodChange={this.onPeriodChange}\n            periodChanged={this.state.periodChanged}\n          />\n        )}\n        {/* END CLAIM TITLE ===================================== */}\n\n        {/* 00000000000000000000000000000000000 */}\n\n        {/* CLAIM CONTENT LIST ===================================== */}\n        {!this.state.viewClaim && (\n          <section className=\"bg-white w-full p-1\">\n            {/* FILTER FORM =================================== */}\n            <section className=\"flex flex-col-reverse sm:flex-row items-center gap-2 w-full my-2\">\n              <div className=\"w-full\">\n                <input\n                  onChange={(e: React.ChangeEvent<HTMLInputElement>) =>\n                    this.setSearchClaim(e.target.value)\n                  }\n                  type=\"text\"\n                  className=\"input-white h-10 text-sm border-2 border-gray-400 focus:border-gray-500 w-full\"\n                  placeholder={`Search claim by title or type`}\n                  value={this.state.searchClaim}\n                  disabled={\n                    filterClaimsByClaimType(\n                      this.props.claiming.allClaims,\n                      this.props.claiming.selectedClaimType\n                    ).length > 0\n                      ? false\n                      : true\n                  }\n                />\n              </div>\n            </section>\n            {/* END FILTER FORM =================================== */}\n            <div className=\"w-full overflow-x-auto\">\n              <table className=\"w-full shadow\" id=\"report_content\">\n                <thead className=\"bg-white border-b-2 border-gray-300 text-gray-600 font-bold text-sm\">\n                  <tr>\n                    <td className=\"px-2 py-2\">#</td>\n                    <td className=\"px-2 py-2\">Applicant names</td>\n                    <td className=\"px-2 py-2\">Claim title</td>\n                    <td className=\"px-2 py-2\">Claim date</td>\n                    {this.props.claiming.selectedClaimType === \"all\" && (\n                      <td className=\"px-2 py-2\">Claim type</td>\n                    )}\n                    <td className=\"px-2 py-2\">Claim level</td>\n                    <td className=\"px-2 py-2\">Claim status</td>\n                    <td className=\"px-2 py-2\"></td>\n                  </tr>\n                </thead>\n                <tbody>\n                  {!this.props.claiming.allClaims ||\n                  !this.props.claiming.claimTypes ||\n                  !this.props.systemPositions ||\n                  this.state.loadingData ? (\n                    <TableLoading\n                      cols={\n                        this.props.claiming.selectedClaimType === \"all\" ? 8 : 7\n                      }\n                    />\n                  ) : search(\n                      filterClaimsByClaimType(\n                        this.props.claiming.allClaims,\n                        this.props.claiming.selectedClaimType\n                      ),\n                      this.state.searchClaim\n                    ).length <= 0 ? (\n                    <tr\n                      className=\"border-b border-gray-200 group hover:bg-gray-50 cursor-pointer\"\n                      key={Math.random()}\n                    >\n                      <td className=\"px-3 py-1\" colSpan={8}>\n                        <NoResult\n                          theme={NoResultThemes.Light}\n                          value={\"No claim found!\"}\n                        />\n                      </td>\n                    </tr>\n                  ) : (\n                    search(\n                      filterClaimsByClaimType(\n                        this.props.claiming.allClaims,\n                        this.props.claiming.selectedClaimType\n                      ),\n                      this.state.searchClaim\n                    ).map((claim: CandidateClaimInterface, index) => (\n                      <tr\n                        className=\"border-b border-gray-200 group hover:bg-gray-50 cursor-pointer\"\n                        key={index + claim._id}\n                        onClick={() => {\n                          this.setViewClaim(true);\n                          this.setClaimId(claim._id);\n                          this.setCandidateId(claim.user);\n                          this.setClaimType(\n                            whichClaimType(claim)\n                              ? whichClaimType(claim)!\n                              : null\n                          );\n                          this.loadsController(\n                            claim.claiming_on_id,\n                            claim.type_key\n                          );\n                        }}\n                      >\n                        <td className=\"px-3 py-1\">{index + 1}</td>\n                        <td className=\"px-3 py-1 whitespace-nowrap\">\n                          {claim.userDetails.user_info.fname +\n                            \" \" +\n                            claim.userDetails.user_info.lname}\n                        </td>\n                        <td className=\"px-3 py-1 whitespace-nowrap\">\n                          {claim.title}\n                        </td>\n                        <td className=\"px-3 py-1 whitespace-nowrap\">\n                          {this.getLastClaimDate(claim)}\n                        </td>\n                        {this.props.claiming.selectedClaimType === \"all\" && (\n                          <td className=\"px-3 py-1 whitespace-nowrap\">\n                            {whichClaimType(claim)\n                              ? capitalizeFirstLetter(whichClaimType(claim)!)\n                              : \"-\"}\n                          </td>\n                        )}\n                        <td className=\"px-3 py-1 whitespace-nowrap italic\">\n                          Level {claim.claim_level}\n                        </td>\n                        <td className=\"px-3 py-1 whitespace-nowrap\">\n                          <span\n                            className={`inline-block rounded-full duration-300 text-xs font-semibold px-3 py-1 ${\n                              whichClaimStatus(claim).classes\n                            }`}\n                          >\n                            {whichClaimStatus(claim).status}\n                          </span>\n                        </td>\n                        <td className=\"px-3 py-1 text-center whitespace-nowrap\">\n                          <button className=\"btn bg-blue-500 text-white group-hover:bg-blue-600\">\n                            View\n                          </button>\n                        </td>\n                      </tr>\n                    ))\n                  )}\n                </tbody>\n              </table>\n            </div>\n          </section>\n        )}\n        {/* END CLAIM CONTENT LIST ===================================== */}\n\n        {/* 00000000000000000000000000000000000 */}\n\n        {/* view claim */}\n        {this.state.viewClaim &&\n          this.state.candidateId &&\n          this.props.claiming.allClaims &&\n          this.state.claimId &&\n          getClaimById(this.props.claiming.allClaims, this.state.claimId) &&\n          this.props.claiming.claimTypes && (\n            <section className=\"bg-white w-full my-4\">\n              {/* VIEW CLAIM HEADER =============================== */}\n              <section className=\"flex items-center gap-2 py-2 border-b\">\n                <button\n                  className={`ml-3 bg-gray-50 hover:bg-blue-100 rounded-full px-1 py-1 focus:outline-none ${\n                    this.state.loadingRequest\n                      ? \"cursor-not-allowed\"\n                      : \"cursor-pointer\"\n                  } animate__animated animate__fadeIn`}\n                  disabled={this.state.loadingRequest}\n                  onClick={() => {\n                    this.setViewClaim(false);\n                    this.setViewImage(true);\n                    this.setLoadingRequest(false);\n                    this.setActionTaken(null);\n                    this.setResponseMsg(\"\");\n                    this.setFormError(null);\n                  }}\n                >\n                  <MdArrowBack className=\"w-7 h-7\" />\n                </button>\n                <div className={`text-gray-600 font-extrabold text-2xl px-2`}>\n                  Viewing claim\n                </div>\n              </section>\n              {/* END VIEW CLAIM HEADER =============================== */}\n\n              {this.state.loading && (\n                <div className=\"my-4\">\n                  <Loading />\n                </div>\n              )}\n\n              {!this.state.loading && (\n                <section className=\"bg-gray-200\">\n                  {/* FOR DOCUMENT ========================== */}\n                  {this.state.claimType &&\n                    this.state.claimType.toLocaleLowerCase() ===\n                      ClaimTypesInterface.DOCUMENT.toLocaleLowerCase() && (\n                      <div>\n                        {getClaimById(\n                          this.props.claiming.allClaims!,\n                          this.state.claimId!\n                        )!.userDetails.details.find(\n                          (item) =>\n                            item.doc_id ===\n                            getClaimById(\n                              this.props.claiming.allClaims!,\n                              this.state.claimId!\n                            )!.claiming_on_id\n                        ) ? (\n                          <AdminClaimDocView\n                            thisDoc={\n                              getClaimById(\n                                this.props.claiming.allClaims!,\n                                this.state.claimId!\n                              )!.userDetails.details.find(\n                                (item) =>\n                                  item.doc_id ===\n                                  getClaimById(\n                                    this.props.claiming.allClaims!,\n                                    this.state.claimId!\n                                  )!.claiming_on_id\n                              )!\n                            }\n                            documentCategories={this.props.documentReducer}\n                            thisClaim={\n                              getClaimById(\n                                this.props.claiming.allClaims,\n                                this.state.claimId\n                              )!\n                            }\n                            claimTypes={this.props.claiming.claimTypes}\n                            viewImage={this.state.viewImage}\n                            setViewImage={this.setViewImage}\n                            loadingRequest={this.state.loadingRequest}\n                            setLoadingRequest={this.setLoadingRequest}\n                            actionTaken={this.state.actionTaken}\n                            setActionTaken={this.setActionTaken}\n                            responseMsg={this.state.responseMsg}\n                            setResponseMsg={this.setResponseMsg}\n                            formError={this.state.formError}\n                            setFormError={this.setFormError}\n                            candidateId={this.state.candidateId}\n                            claimReasons={this.props.claiming.claimReasons}\n                          />\n                        ) : (\n                          <NoResult\n                            theme={NoResultThemes.Dark}\n                            value={\"Document not found\"}\n                          />\n                        )}\n                      </div>\n                    )}\n\n                  {/* FOR APPLICATION ========================== */}\n                  {this.state.claimType &&\n                    this.state.claimType.toLocaleLowerCase() ===\n                      ClaimTypesInterface.APPLICATION.toLocaleLowerCase() && (\n                      <div>\n                        {getApplicationById(\n                          this.props.claiming.allApplications,\n                          this.props.systemPositions,\n                          getClaimById(\n                            this.props.claiming.allClaims,\n                            this.state.claimId\n                          )!.claiming_on_id\n                        ) ? (\n                          this.props.systemPositions && (\n                            <AdminClaimAppView\n                              thisApplication={\n                                getApplicationById(\n                                  this.props.claiming.allApplications,\n                                  this.props.systemPositions,\n                                  getClaimById(\n                                    this.props.claiming.allClaims,\n                                    this.state.claimId\n                                  )!.claiming_on_id\n                                )!.application\n                              }\n                              thisPosition={\n                                getApplicationById(\n                                  this.props.claiming.allApplications,\n                                  this.props.systemPositions,\n                                  getClaimById(\n                                    this.props.claiming.allClaims,\n                                    this.state.claimId\n                                  )!.claiming_on_id\n                                )!.position\n                              }\n                              documentCategories={this.props.documentReducer}\n                              thisClaim={\n                                getClaimById(\n                                  this.props.claiming.allClaims,\n                                  this.state.claimId\n                                )!\n                              }\n                              claimTypes={this.props.claiming.claimTypes}\n                              systemPositions={this.props.systemPositions}\n                              claimReasons={this.props.claiming.claimReasons}\n                            />\n                          )\n                        ) : (\n                          <NoResult\n                            theme={NoResultThemes.Dark}\n                            value={\"Application not found\"}\n                          />\n                        )}\n                      </div>\n                    )}\n\n                  {/* FOR EXAMINATION ========================== */}\n                  {this.state.claimType &&\n                    this.state.claimType.toLocaleLowerCase() ===\n                      ClaimTypesInterface.EXAMINATION.toLocaleLowerCase() && (\n                      <div>\n                        {this.props.claiming.allAnswer &&\n                        this.props.courses &&\n                        getCourseIdBySheetId(\n                          this.props.claiming.allAnswer,\n                          getClaimById(\n                            this.props.claiming.allClaims,\n                            this.state.claimId\n                          )!.claiming_on_id\n                        ) &&\n                        getCourseById(\n                          this.props.courses,\n                          getCourseIdBySheetId(\n                            this.props.claiming.allAnswer,\n                            getClaimById(\n                              this.props.claiming.allClaims,\n                              this.state.claimId\n                            )!.claiming_on_id\n                          )!.course\n                        ) ? (\n                          <AdminClaimExamView\n                            thisExamSheet={\n                              getCourseIdBySheetId(\n                                this.props.claiming.allAnswer,\n                                getClaimById(\n                                  this.props.claiming.allClaims,\n                                  this.state.claimId\n                                )!.claiming_on_id\n                              )!\n                            }\n                            thisExam={\n                              getCourseById(\n                                this.props.courses,\n                                getCourseIdBySheetId(\n                                  this.props.claiming.allAnswer,\n                                  getClaimById(\n                                    this.props.claiming.allClaims,\n                                    this.state.claimId\n                                  )!.claiming_on_id\n                                )!.course\n                              )!\n                            }\n                            thisClaim={\n                              getClaimById(\n                                this.props.claiming.allClaims,\n                                this.state.claimId\n                              )!\n                            }\n                            claimTypes={this.props.claiming.claimTypes}\n                            claimReasons={this.props.claiming.claimReasons}\n                          />\n                        ) : (\n                          <NoResult\n                            theme={NoResultThemes.Dark}\n                            value={\"Exam not found\"}\n                          />\n                        )}\n                      </div>\n                    )}\n                </section>\n              )}\n            </section>\n          )}\n        {/* end view claim */}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = ({\n  auth,\n  system_settings,\n  sessionPlan,\n  claiming,\n  document,\n  course,\n}: StoreState): {\n  auth: Auth;\n  application_sessions: SessionPlanInterface[] | null;\n  systemPositions: PositionAPI[] | null;\n  claiming: ClaimingReducerType;\n  documentReducer: DocumentReducerInterface;\n  courses: course[] | null;\n} => {\n  return {\n    auth: auth,\n    application_sessions: sessionPlan.allSessionPlans,\n    systemPositions: system_settings.systemPositions,\n    claiming,\n    documentReducer: document,\n    courses: course.courses,\n  };\n};\n\nexport const AdminClaim = connect(mapStateToProps, {\n  getAllClaims,\n  loadCourses,\n  getAllAnswers,\n  getClaimReasons,\n  getAllApplications,\n  GetAllSessionPlans,\n  getDocumentCategory,\n  getDocumentSubCategory,\n  getDocumentFields,\n  getPositions,\n  PushPopupAlert,\n})(Index);\n"],"sourceRoot":""}
{"version":3,"sources":["components/Navigation/SideNavigation.tsx","actions/session.ts","utils/ExportToExcel.tsx","utils/mineduc.png","components/DownloadPDF/rest.tsx","containers/SessionSettings/ChooseSession.tsx","assets/profile.png","containers/Admin/Applications/ApplicationDetails.tsx","containers/Admin/Applications/Applications.tsx"],"names":["_SideNavigation","props","componentDidMount","PageHasSubNav","componentWillUnmount","state","loading","this","auth","isAuthenticated","navActive","system","navigation","className","children","React","Component","SideNavigation","connect","NavToogle","MainItem","title","icon","MdBrightness1","active","count","IconDefined","GetPlansTypes","callback","dispatch","a","setAxiosToken","axios","get","API","CLAIMING","res","console","log","GET_PLANS_TYPES","data","plan_types","status","length","type","ActionTypes","payload","error","errorToText","setSelectedPlanType","thisType","SELECT_PLAN_TYPE","getActiveSessionPlan","GET_ACTIVE_SESSION_PLANS","session_plan","undefined","is_active","GetAllSessionPlans","GET_ALL_SESSION_PLANS","session_data","createSessionPlan","CREATE_SESSION_PLAN","updateSessionPlan","UPDATE_SESSION_PLAN","sessionActivation","SESSION_ACTIVATION","deleteSessionPlan","DELETE_SESSION_PLAN","ExportToExcel","fileData","fileName","btnName","showIcon","onClick","e","apiData","wb","Sheets","XLSX","json_to_sheet","SheetNames","excelBuffer","bookType","Blob","FileSaver","exportToCSV","require","addFooters","doc","pageCount","internal","getNumberOfPages","setFont","setFontSize","i","setPage","text","String","pageSize","width","align","generatePDF","reportSettings","table","callBack","orientation","lMargin","jsPDF","setTextColor","addImage","Logo","getWidth","institute","lines","splitTextToSize","subject","pdfInMM","y","subjectTitle","getTextWidth","addPage","period","autoTable","html","startY","margin","horizontal","cellPadding","rowHeight","bodyStyles","valign","columnStyles","email","cellWidth","theme","tableWidth","finalY","lastAutoTable","doneBy","DATE","Date","toString","save","returnPromise","then","isPlansActive","plans","today","activePlans","plan","startDate","start_date","endDate","end_date","getTime","type_status","SessionPlanTypeStatus","OPEN","ChooseSession","searched","useState","selectedPlan","setSelectedPlan","search","setSearch","onChange","target","value","placeholder","disabled","allSession","chooseAll","currentSelected","setSelectSession","searchData","map","item","session_plan_id","session_plan_name","find","itm","type_key","type_title","tabs","reportContentKeyInterface","ApplicationDetails","tabStatusClass","tab","profile","setState","position","src","noImage","alt","selectedApplication","fname","lname","n_id","sex","phone_number","district","application_session","application_session_name","createdAt","ApplicationStatesDescription","key","application_status","caption","application_history","date","comment","position_title","description","courses","course_name","course_code","ignoreThisApplicationStatus","ApplicationStates","Failed","Pass","Rejected","defaultReportContent","names","national_id","gender","phone","education_category","decision","_Applications","setLoadingState","loadAllApplications","APPLICATION","position_id","applicationListData","schoolLevels","education_categories","loadEducationCategories","sessionPlan","allSessionPlans","msg","PushPopupAlert","PopupAlertTheme","danger","selected_period","active_period","selectPeriod","defaultSelectedPeriod","positions","positions_list","loadAllPositions","selected_position","selectPosition","errorMessage","isEmptyOrSpaces","warning","reportTitle","AdminApplicationStatuses","application","output","includes","push","filter","filteredApplications","applications","Status","appl","education_institute_id","setDownloading","downloading","updateApplicationToPrint","arrayNew","n","Object","prototype","hasOwnProperty","call","element","dataArray","application_id","education_category_title","application_session_id","reportContent","applicationsToPrint","updateReportContent","index","findIndex","newArray","selectAll","generateThisPDF","document","querySelectorAll","selectedEducationCategory","getElementById","user","footer","isChangeAllowed","resetReportContent","currentState","setSort","thisProperty","sortProperty","sortOrder","isSorted","selectedApplicationStatus","applicationDetailsModal","generateReportModal","searchInput","searchPositionInput","formError","prevProps","prevState","Fragment","Loading","reportType","id","colSpan","sortThisArray","selected_application","capitalizeFirstLetter","Modal","backDrop","Themes","default","close","backDropClose","widthSizeClass","ModalSize","extraLarge","displayClose","padding","LoadingV2","LoadingType","dark","to","setSelectedPosition","style","fontStyle","school_level_id","school_level_name","medium","Applications"],"mappings":"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","file":"static/js/40.f93e8f1c.chunk.js","sourcesContent":["import React, { FC, ReactElement, ReactNode } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Auth, System } from \"../../actions\";\nimport { StoreState } from \"../../reducers\";\nimport { NavToogle, PageHasSubNav } from \"../../actions\";\nimport { MdBrightness1, MdSearch } from \"react-icons/md\";\n\n// props for the component\ninterface AppProps {\n  auth: Auth;\n  system: System;\n  PageHasSubNav: Function;\n  NavToogle: Function;\n  children: ReactNode;\n}\n//\ninterface AppState {\n  loading: boolean;\n}\n\nclass _SideNavigation extends React.Component<AppProps, AppState> {\n  constructor(props: AppProps) {\n    super(props);\n\n    this.state = {\n      loading: false,\n    };\n  }\n\n  componentDidMount = () => this.props.PageHasSubNav(true);\n  componentWillUnmount = () => this.props.PageHasSubNav(false);\n\n  render() {\n    const isAuthenticated = this.props.auth.isAuthenticated;\n\n    if (isAuthenticated === false) {\n      return null;\n    }\n\n    const navActive = this.props.system.navigation;\n    return (\n      <div\n        className={`fixed w-48 p-1 pr-2 pl-6 text-gray-700 bg-white ${\n          navActive === true ? \"lg:left-16  left-16\" : \" -left-72 lg:left-16\"\n        }  top-0 bottom-0 pt-20 z-30 shadow-lg  transition-all duration-500 ease-in-out overflow-y-auto`}\n      >\n        {this.props.children}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = ({\n  auth,\n  system,\n}: StoreState): { auth: Auth; system: System } => {\n  return { auth: auth, system: system };\n};\n\nexport const SideNavigation = connect(mapStateToProps, {\n  NavToogle,\n  PageHasSubNav,\n})(_SideNavigation);\n\n//************************************ FORM SEARCH **************************************** */\n\ntype SearchComponentInterface = {\n  data: any[];\n};\n\nexport const Search: FC<SearchComponentInterface> = ({\n  data,\n}): ReactElement => {\n  return (\n    <div className=\"m-1 rounded-md shadow-md border border-blue-400 bg-white p-1 flex \">\n      <label htmlFor=\"search-text\" className=\"inline-block text-2xl\">\n        <MdSearch className=\"inline-block text-blue-400\" />\n      </label>\n      <input\n        type=\"search\"\n        className=\"outline-none bg-transparent flex-1 pl-1\"\n        placeholder=\"Search\"\n        id=\"search-text\"\n      />\n    </div>\n  );\n};\n\n//************************************ FORM SEARCH **************************************** */\n\ntype MainItemComponentInterface = {\n  title: string;\n  icon?: any;\n  active?: boolean;\n  count?: number;\n};\n\n/**\n *\n * @param param0\n * @returns\n */\nexport const MainItem: FC<MainItemComponentInterface> = ({\n  title = \"\",\n  icon = MdBrightness1,\n  active = false,\n  count = 0,\n}): ReactElement => {\n  const IconDefined = icon;\n  return (\n    <section\n      className={`${\n        active === true\n          ? \"bg-blue-500 text-white font-bold\"\n          : \"bg-blue-100 text-blue-800\"\n      } mb-1 hover:font-bold py-1 hover:bg-blue-400 hover:text-white --font-bold  px-2 rounded-md flex cursor-pointer items-center`}\n    >\n      <section className=\"flex-1\">\n        <IconDefined className=\"inline-block mr-1 text-xs\" />\n        <span>{title}</span>\n      </section>\n\n      {count > 0 ? (\n        <span className=\"px-0.5 my-1 text-xs bg-blue-600 text-white rounded-full\">\n          {count}\n        </span>\n      ) : null}\n    </section>\n  );\n};\n\n//************************************ FORM SEARCH **************************************** */\n\ntype SubItemContainerComponentInterface = {\n  children: ReactNode;\n};\n\n/**\n *\n * @param param0\n * @returns\n */\nexport const SubItemContainer: FC<SubItemContainerComponentInterface> = ({\n  children,\n}): ReactElement => {\n  return (\n    <div className=\"ml-3 overflow-y-auto border-l-2 border-blue-200 -mt-1 pt-2 mb-2 pl-1 cursor-pointer\">\n      {children}\n    </div>\n  );\n};\n\n//************************************ FORM SEARCH **************************************** */\n\ntype SubItemComponentInterface = {\n  title: string;\n  icon?: any;\n  active?: boolean;\n  count?: number;\n};\n\n/**\n *\n * @param param0\n * @returns\n * @important Remenber to use these components inside the <SubItemContainer>...</SubItemContainer>\n */\nexport const SubItem: FC<SubItemComponentInterface> = ({\n  title = \"\",\n  icon = MdBrightness1,\n  active = false,\n  count = 0,\n}): ReactElement => {\n  const IconDefined = icon;\n\n  return (\n    <div\n      className={`animate__animated animate__zoomIn animate__faster ${\n        active === true ? \"bg-blue-500 text-white font-bold\" : \" text-blue-800\"\n      } text-blue-800 bg-blue-200 rounded-md px-1 mb-1 flex items-center py-1 font-bold`}\n    >\n      <IconDefined\n        className={`inline-block mr-0.1 text-xs ${\n          active === true ? \"text-white\" : \"\"\n        }`}\n      />\n      <span\n        className={`inline-block pl-1 ${active === true ? \"text-white\" : \"\"}`}\n      >\n        {title}\n      </span>\n      {count >= 1 ? (\n        <span\n          className={`text-sm fint-bold ${active === true ? \"text-white\" : \"\"}`}\n        >\n          {count}\n        </span>\n      ) : null}\n    </div>\n  );\n};\n","import axios from \"axios\";\nimport { Dispatch } from \"redux\";\nimport { ActionTypes } from \"./types\";\nimport { API } from \"../utils/api\";\nimport { setAxiosToken } from \"../utils/AxiosToken\";\nimport { errorToText } from \"../utils/errors\";\nimport { PlansTypeInterface, SessionPlanInterface } from \"../interfaces\";\n\n/**\n * * ****************************** INTERFACES *****************************\n */\n\n// GET ACTIVE PLAN TYPES\nexport interface GetPlansTypesAction {\n  type: ActionTypes.GET_PLANS_TYPES;\n  payload: PlansTypeInterface[];\n}\n\n// GET INACTIVE PLAN TYPES\nexport interface GetDeletedPlansTypesAction {\n  type: ActionTypes.GET_DELETED_PLANS_TYPES;\n  payload: PlansTypeInterface[];\n}\n\n// CREATE PLAN TYPE\nexport interface CreatePlansTypeAction {\n  type: ActionTypes.CREATE_PLAN_TYPE;\n  payload: PlansTypeInterface;\n}\n\n// UPDATE PLAN TYPE\nexport interface UpdatePlansTypeAction {\n  type: ActionTypes.UPDATE_PLAN_TYPE;\n  payload: PlansTypeInterface;\n}\n\n// DELETE PLAN TYPE\nexport interface DeletePlansTypeAction {\n  type: ActionTypes.DELETE_PLAN_TYPE;\n  payload: PlansTypeInterface;\n}\n\n// SET PLAN TYPE =====================================\nexport interface setSelectedPlanTypeActions {\n  type: ActionTypes.SELECT_PLAN_TYPE;\n  payload: PlansTypeInterface | \"all\";\n}\n\n// GET ALL SESSION PLAN\nexport interface GetAllSessionPlansAction {\n  type: ActionTypes.GET_ALL_SESSION_PLANS;\n  payload: SessionPlanInterface[];\n}\n\n// GET ACTIVE SESSION PLAN\nexport interface GetActiveSessionPlanAction {\n  type: ActionTypes.GET_ACTIVE_SESSION_PLANS;\n  payload: SessionPlanInterface | \"none\";\n}\n\n// CREATE SESSION PLAN\nexport interface CreateSessionPlansAction {\n  type: ActionTypes.CREATE_SESSION_PLAN;\n  payload: SessionPlanInterface;\n}\n\n// UPDATE SESSION PLAN\nexport interface UpdateSessionPlansAction {\n  type: ActionTypes.UPDATE_SESSION_PLAN;\n  payload: SessionPlanInterface;\n}\n\n// ACTIVATE SESSION PLAN\nexport interface ActivateSessionPlansAction {\n  type: ActionTypes.SESSION_ACTIVATION;\n  payload: SessionPlanInterface;\n}\n\n// DELETE SESSION PLAN\nexport interface DeleteSessionPlanAction {\n  type: ActionTypes.DELETE_SESSION_PLAN;\n  payload: string;\n}\n\nexport type SessionActionType =\n  | GetPlansTypesAction\n  | GetDeletedPlansTypesAction\n  | CreatePlansTypeAction\n  | UpdatePlansTypeAction\n  | DeletePlansTypeAction\n  | GetAllSessionPlansAction\n  | GetActiveSessionPlanAction\n  | CreateSessionPlansAction\n  | UpdateSessionPlansAction\n  | ActivateSessionPlansAction\n  | DeleteSessionPlanAction\n  | setSelectedPlanTypeActions;\n\n/**\n * * ****************************** ACTIONS *****************************\n */\n\n// GET ACTIVE PLAN TYPES ==========================\nexport const GetPlansTypes = (callback: Function) => {\n  callback(true, \"\");\n  return async (dispatch: Dispatch) => {\n    try {\n      setAxiosToken();\n      const res = await axios.get<PlansTypeInterface[]>(\n        `${API.CLAIMING}/session-type`\n      );\n      console.log({ GET_PLANS_TYPES: res.data });\n      let plan_types: PlansTypeInterface[] = [];\n      if (res.status === 200) {\n        // setApplications(res.data);\n        if (res.data !== null && res.data.length > 0) {\n          plan_types = res.data;\n        }\n      }\n      dispatch<GetPlansTypesAction>({\n        type: ActionTypes.GET_PLANS_TYPES,\n        payload: plan_types,\n      });\n      callback(false, \"\");\n    } catch (error) {\n      console.error({ error: errorToText(error) });\n      callback(false, errorToText(error));\n    }\n  };\n};\n\n// GET ACTIVE PLAN TYPES ==========================\nexport const GetDeletedPlansTypes = (callback: Function) => {\n  callback(true, \"\");\n  return async (dispatch: Dispatch) => {\n    try {\n      setAxiosToken();\n      const res = await axios.get<PlansTypeInterface[]>(\n        `${API.CLAIMING}/session-type/deleted`\n      );\n      console.log({ GET_DELETED_PLANS_TYPES: res.data });\n      let plan_types: PlansTypeInterface[] = [];\n      if (res.status === 200) {\n        // setApplications(res.data);\n        if (res.data !== null && res.data.length > 0) {\n          plan_types = res.data;\n        }\n      }\n      dispatch<GetDeletedPlansTypesAction>({\n        type: ActionTypes.GET_DELETED_PLANS_TYPES,\n        payload: plan_types,\n      });\n      callback(false, \"\");\n    } catch (error) {\n      console.error({ error: errorToText(error) });\n      callback(false, errorToText(error));\n    }\n  };\n};\n\n// CREATE PLAN TYPE\nexport const createPlanType = (\n  data: PlansTypeInterface\n): CreatePlansTypeAction => {\n  return {\n    type: ActionTypes.CREATE_PLAN_TYPE,\n    payload: data,\n  };\n};\n\n// UPDATE PLAN TYPE\nexport const updatePlanType = (\n  data: PlansTypeInterface\n): UpdatePlansTypeAction => {\n  return {\n    type: ActionTypes.UPDATE_PLAN_TYPE,\n    payload: data,\n  };\n};\n\n// DELETE PLAN TYPE\nexport const deletePlanType = (\n  data: PlansTypeInterface\n): DeletePlansTypeAction => {\n  return {\n    type: ActionTypes.DELETE_PLAN_TYPE,\n    payload: data,\n  };\n};\n\n// SELECT PLAN TYPES ==========================\nexport const setSelectedPlanType = (\n  thisType: PlansTypeInterface | \"all\"\n): setSelectedPlanTypeActions => {\n  console.log({ thisType });\n  return {\n    type: ActionTypes.SELECT_PLAN_TYPE,\n    payload: thisType,\n  };\n};\n\n// GET ACTIVE PLAN TYPES ==========================\nexport const getActiveSessionPlan = (callback: Function) => {\n  callback(true, \"\");\n  return async (dispatch: Dispatch) => {\n    try {\n      setAxiosToken();\n      const res = await axios.get<SessionPlanInterface>(\n        `${API.CLAIMING}/session/active/`\n      );\n      console.log({ GET_ACTIVE_SESSION_PLANS: res.data });\n      let session_plan: SessionPlanInterface | undefined = undefined;\n      // if (res.status === 200) {\n      //   // setApplications(res.data);\n      // }\n      if (res.data && res.data.is_active !== undefined) {\n        session_plan = res.data;\n      }\n      console.log({ session_plan: res.data });\n\n      dispatch<GetActiveSessionPlanAction>({\n        type: ActionTypes.GET_ACTIVE_SESSION_PLANS,\n        payload: session_plan ? session_plan : \"none\",\n      });\n      callback(false, \"\", session_plan ? session_plan : \"none\");\n    } catch (error) {\n      console.error({ error: errorToText(error) });\n      callback(false, errorToText(error));\n    }\n  };\n};\n\n// GET ALL PLAN TYPES ==========================\nexport const GetAllSessionPlans = (callback: Function) => {\n  callback(true, \"\");\n  return async (dispatch: Dispatch) => {\n    try {\n      setAxiosToken();\n      const res = await axios.get<SessionPlanInterface[]>(\n        `${API.CLAIMING}/session/`\n      );\n      console.log({ GET_ALL_SESSION_PLANS: res.data });\n      let session_data: SessionPlanInterface[] = [];\n      if (res.status === 200) {\n        // setApplications(res.data);\n        if (res.data !== null && res.data.length > 0) {\n          session_data = res.data;\n        }\n      }\n      dispatch<GetAllSessionPlansAction>({\n        type: ActionTypes.GET_ALL_SESSION_PLANS,\n        payload: session_data,\n      });\n      callback(false, \"\", session_data);\n    } catch (error) {\n      console.error({ error: errorToText(error) });\n      callback(false, errorToText(error));\n    }\n  };\n};\n\n// CREATE SESSION PLAN\nexport const createSessionPlan = (\n  data: SessionPlanInterface\n): CreateSessionPlansAction => {\n  return {\n    type: ActionTypes.CREATE_SESSION_PLAN,\n    payload: data,\n  };\n};\n\n// UPDATE SESSION PLAN\nexport const updateSessionPlan = (\n  data: SessionPlanInterface\n): UpdateSessionPlansAction => {\n  return {\n    type: ActionTypes.UPDATE_SESSION_PLAN,\n    payload: data,\n  };\n};\n\n// ACTIVATE SESSION PLAN\nexport const sessionActivation = (\n  data: SessionPlanInterface\n): ActivateSessionPlansAction => {\n  return {\n    type: ActionTypes.SESSION_ACTIVATION,\n    payload: data,\n  };\n};\n\n// DELETE SESSION PLAN\nexport const deleteSessionPlan = (data: string): DeleteSessionPlanAction => {\n  return {\n    type: ActionTypes.DELETE_SESSION_PLAN,\n    payload: data,\n  };\n};\n","import React from \"react\";\nimport * as FileSaver from \"file-saver\";\nimport * as XLSX from \"xlsx\";\nimport { RiFileExcel2Fill } from \"react-icons/ri\";\n\ninterface ExportToExcelProps {\n  fileData: any[];\n  fileName: string;\n  btnName?: string;\n  className?: string;\n  showIcon?: boolean;\n}\n\nconst ExportToExcel: React.FC<ExportToExcelProps> = ({\n  fileData,\n  fileName,\n  btnName = \"Excel\",\n  className = \"flex items-center gap-1 px-4 py-1 rounded text-green-700 bg-white border hover:text-white hover:bg-green-700 border-green-700 font-bold\",\n  showIcon = true,\n}) => {\n  const fileType =\n    \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;charset=UTF-8\";\n  const fileExtension = \".xlsx\";\n\n  const exportToCSV = (apiData: any[], fileName: string) => {\n    const ws = XLSX.utils.json_to_sheet(apiData);\n    const wb = { Sheets: { data: ws }, SheetNames: [\"data\"] };\n    const excelBuffer = XLSX.write(wb, { bookType: \"xlsx\", type: \"array\" });\n    const data = new Blob([excelBuffer], { type: fileType });\n    FileSaver.saveAs(data, fileName + fileExtension);\n  };\n\n  return (\n    <button\n      onClick={(e) => exportToCSV(fileData, fileName)}\n      className={className}\n    >\n      {showIcon && <RiFileExcel2Fill />}\n      {btnName}\n    </button>\n  );\n};\n\nexport default ExportToExcel;\n","export default __webpack_public_path__ + \"static/media/mineduc.11a9ae1c.png\";","import jsPDF from \"jspdf\";\nimport { DATE } from \"../../utils/functions\";\nimport Logo from \"../../utils/mineduc.png\";\nrequire(\"jspdf-autotable\");\n\nexport const addFooters = (doc: any) => {\n  const pageCount = doc.internal.getNumberOfPages();\n\n  doc.setFont(\"helvetica\", \"italic\");\n  doc.setFontSize(8);\n  for (var i = 1; i <= pageCount; i++) {\n    doc.setPage(i);\n    doc.text(\n      \"Page \" + String(i) + \" of \" + String(pageCount),\n      doc.internal.pageSize.width / 2,\n      297,\n      {\n        align: \"center\",\n      }\n    );\n  }\n};\n\nexport type reportSettingsInterface = {\n  doneBy: string;\n  title: string;\n  subjectTitle: string;\n  subject: string;\n  institute: string;\n  period: string;\n  footer: string;\n  orientation?: \"p\" | \"l\";\n};\n\nexport const generatePDF = async (\n  reportSettings: reportSettingsInterface,\n  table: HTMLElement,\n  callBack: (status: boolean) => void\n) => {\n  callBack(true);\n  const orientation: \"p\" | \"l\" = reportSettings.orientation\n    ? reportSettings.orientation\n    : \"p\";\n  var lMargin: number = 20; //left margin in mm\n  var rMargin: number = 20; //right margin in mm\n  var pdfInMM: number = 185; // width of A4 in mm\n\n  //   var doc = new jsPDF(\"p\", \"mm\", \"a4\");\n  var doc: any = new jsPDF(orientation, \"mm\", \"a4\");\n\n  doc.setTextColor(95, 95, 95);\n  doc.setFontSize(28);\n  // doc.text(\n  //   this.props.reportTitle,\n  //   doc.internal.pageSize.getWidth() / 2,\n  //   30,\n  //   undefined,\n  //   \"center\"\n  // );\n  doc.addImage(Logo, \"png\", 20, 20, 10, 10);\n  doc.text(\"MINEDUC\", 32, 28.5, undefined, \"left\");\n  //   doc.setTextColor(19, 90, 152);\n  doc.setFontSize(26);\n  doc.text(\n    reportSettings.title,\n    doc.internal.pageSize.getWidth() / 2,\n    42.7,\n    undefined,\n    \"center\"\n  );\n\n  doc.setFontSize(20);\n  doc.text(\n    reportSettings.institute,\n    doc.internal.pageSize.getWidth() / 2,\n    53.7,\n    undefined,\n    \"center\"\n  );\n\n  var lines;\n  lines = doc.splitTextToSize(\n    reportSettings.subject,\n    pdfInMM - lMargin - rMargin\n  );\n  // if (reportSettings.position) {\n  // } else if (reportSettings.subject) {\n  //   lines = doc.splitTextToSize(\n  //     reportSettings.subject,\n  //     pdfInMM - lMargin - rMargin\n  //   );\n  // }\n\n  //   doc.setTextColor(0, 123, 255);\n  doc.setFontSize(16);\n  //   doc.text(lines, doc.internal.pageSize.getWidth() / 2, 45, {\n  //     maxWidth: 85,\n  //     align: \"center\",\n  //   });\n\n  var y = 63,\n    width;\n  doc.setTextColor(95, 95, 95);\n  doc.text(`${reportSettings.subjectTitle}: `, lMargin, y);\n  width = doc.getTextWidth(`${reportSettings.subjectTitle}: `);\n  // if (reportSettings.position) {\n  // } else if (reportSettings.position) {\n  //   doc.text(`Subject: `, lMargin, y);\n  //   width = doc.getTextWidth(\"Subject: \");\n  // }\n  // doc.setFontType(\"bold\");\n  doc.setTextColor(38, 38, 38);\n  for (var i = 0; i < lines.length; i++) {\n    if (y > 280) {\n      y = 10;\n      doc.addPage();\n    }\n    // doc.text(15, y, lines[i]);\n    doc.text(lines[i], lMargin + width, y);\n    y = y + 7;\n  }\n  doc.setTextColor(95, 95, 95);\n  doc.text(\"Period: \", lMargin, y + 3);\n  width = doc.getTextWidth(\"Period: \");\n  doc.setTextColor(38, 38, 38);\n  doc.text(reportSettings.period, lMargin + width, y + 3);\n\n  doc.autoTable({\n    html: table,\n    startY: 85,\n    margin: { horizontal: 20 },\n    cellPadding: 3, // Horizontal cell padding\n    // fontSize: 12,\n    rowHeight: 20,\n    // styles: { overflow: \"linebreak\" },\n    bodyStyles: { valign: \"top\" },\n    columnStyles: { email: { cellWidth: \"wrap\" } },\n    theme: \"striped\",\n    tableWidth: true,\n  });\n\n  doc.setFontSize(12);\n  let finalY = doc.lastAutoTable.finalY; // The y position on the page\n  doc.text(`Reported by: ${reportSettings.doneBy}`, lMargin, finalY + 15);\n  doc.text(\n    \"Report downloaded on \" + DATE(new Date().toString()),\n    lMargin,\n    finalY + 23\n  );\n\n  addFooters(doc);\n  await doc\n    .save(\n      `${\n        reportSettings.title +\n        \": \" +\n        reportSettings.subject +\n        \": \" +\n        reportSettings.period\n      }.pdf`,\n      { returnPromise: true }\n    )\n    .then(callBack(false));\n};\n","import React, { useState } from \"react\";\nimport {\n  MdCheckCircle,\n  MdRadioButtonUnchecked,\n  MdSearch,\n} from \"react-icons/md\";\nimport Loading from \"../../components/Loading/Loading\";\nimport {\n  PlansInterface,\n  SessionPlanInterface,\n  SessionPlanTypeStatus,\n} from \"../../interfaces\";\nimport { DATE } from \"../../utils/functions\";\nimport searchData from \"../../utils/search\";\n\nexport const isPlansActive = (plans: PlansInterface[]): PlansInterface[] => {\n  let today = new Date();\n  let activePlans: PlansInterface[] = [];\n  for (let plan of plans) {\n    let startDate = new Date(plan.start_date);\n    let endDate = new Date(plan.end_date);\n    if (\n      startDate.getTime() <= today.getTime() &&\n      endDate.getTime() >= today.getTime() &&\n      plan.type_status === SessionPlanTypeStatus.OPEN\n    ) {\n      activePlans = [...activePlans, plan];\n    }\n  }\n  return activePlans;\n};\n\ninterface ChooseSessionProps {\n  allSession: SessionPlanInterface[] | null;\n  setSelectSession: (period: SessionPlanInterface | \"all\") => void;\n  currentSelected: SessionPlanInterface | \"all\";\n  chooseAll: boolean;\n}\n\nconst ChooseSession = (props: ChooseSessionProps) => {\n  const [selectedPlan, setSelectedPlan] = useState<SessionPlanInterface | null>(\n    null\n  );\n  const [search, setSearch] = useState<string>(\"\");\n  const getSearch = (\n    period: SessionPlanInterface[],\n    searched: string\n  ): SessionPlanInterface[] => {\n    return searchData(period, searched) as SessionPlanInterface[];\n  };\n\n  return (\n    <div className=\"\">\n      <div className=\"px-3\">\n        <input\n          onChange={(e: React.ChangeEvent<HTMLInputElement>) =>\n            setSearch(e.target.value)\n          }\n          type=\"text\"\n          className=\"py-3 px-4 w-full rounded border border-gray-400 mb-3\"\n          placeholder=\"Search by year, name\"\n          disabled={props.allSession === null || props.allSession.length === 0}\n        />\n      </div>\n\n      <div className=\"bg-gray-100 px-3 pt-3 pb-2 rounded-b\">\n        {props.allSession === null ? (\n          <Loading />\n        ) : props.allSession.length === 0 ? (\n          <div className=\"flex flex-col text-gray-400 items-center justify-center mb-2 bg-white py-4\">\n            <MdSearch className=\"text-6xl\" />\n            <div className=\"flex flex-col items-center justify-center\">\n              <span>No session found!</span>\n            </div>\n          </div>\n        ) : (\n          <section>\n            {props.chooseAll && (\n              <div\n                className={`rounded border ${\n                  props.currentSelected === \"all\"\n                    ? \"bg-blue-50 border-blue-300\"\n                    : \"bg-white border-white \"\n                } group hover:border-blue-500 px-2 py-2 mb-2 flex flex-col md:flex-row items-start md:items-center md:justify-between`}\n              >\n                <div className=\"flex flex-row items-center gap-3\">\n                  {props.currentSelected === \"all\" ? (\n                    <MdCheckCircle className={`text-blue-500 text-4xl`} />\n                  ) : (\n                    <MdRadioButtonUnchecked\n                      className={`text-gray-300 text-4xl`}\n                    />\n                  )}\n                  <div className=\"flex flex-col\">\n                    <div className={`text-gray-600 font-bold`}>All session</div>\n                  </div>\n                </div>\n                <div\n                  onClick={() => {\n                    props.setSelectSession(\"all\");\n                  }}\n                  className=\"bg-gray-50 group-hover:bg-blue-600 font-semibold text-gray-400 group-hover:text-white rounded px-3 py-2 cursor-pointer\"\n                >\n                  Select\n                </div>\n              </div>\n            )}\n            {getSearch(props.allSession, search).map((item, i) => (\n              <div\n                key={i + 1}\n                className={`rounded border ${\n                  props.currentSelected !== \"all\" &&\n                  props.currentSelected.session_plan_id === item.session_plan_id\n                    ? \"bg-blue-50 border-blue-300\"\n                    : \"bg-white border-white \"\n                } group hover:border-blue-500 px-2 py-2 mb-2`}\n              >\n                <div className=\"flex flex-col md:flex-row items-start md:items-center md:justify-between \">\n                  <div className=\"flex flex-row items-center gap-3\">\n                    {props.currentSelected !== \"all\" &&\n                    props.currentSelected.session_plan_id ===\n                      item.session_plan_id ? (\n                      <MdCheckCircle className={`text-blue-500 text-4xl`} />\n                    ) : (\n                      <MdRadioButtonUnchecked\n                        className={`text-gray-300 text-4xl`}\n                      />\n                    )}\n                    <div className=\"flex flex-col\">\n                      <div\n                        className={`${\n                          props.currentSelected !== \"all\" &&\n                          props.currentSelected.session_plan_id ===\n                            item.session_plan_id\n                            ? \"text-blue-600\"\n                            : \"text-gray-600\"\n                        } font-bold`}\n                      >\n                        {item.session_plan_name}\n                      </div>\n                      <div className=\"text-sm text-gray-500\">\n                        <span>Status: </span>\n                        <span\n                          className={`${\n                            item.is_active === true\n                              ? \"text-gray-900 font-bold underline\"\n                              : \"text-gray-500 italic\"\n                          }`}\n                        >\n                          {item.is_active === true ? \"Active\" : \"Expired\"}\n                        </span>\n                      </div>\n                    </div>\n                  </div>\n                  <div className=\"flex flex-row items-center gap-2\">\n                    {(selectedPlan === null ||\n                      selectedPlan.session_plan_id !==\n                        item.session_plan_id) && (\n                      <div\n                        onClick={() => setSelectedPlan(item)}\n                        className=\"bg-gray-50 group-hover:bg-blue-100 font-semibold text-gray-400 group-hover:text-blue-600 rounded px-3 py-2 cursor-pointer\"\n                      >\n                        Details\n                      </div>\n                    )}\n                    <div\n                      onClick={() => {\n                        props.setSelectSession(item);\n                      }}\n                      className=\"bg-gray-50 group-hover:bg-blue-600 font-semibold text-gray-400 group-hover:text-white rounded px-3 py-2 cursor-pointer\"\n                    >\n                      Select\n                    </div>\n                    {selectedPlan !== null &&\n                      selectedPlan.session_plan_id === item.session_plan_id && (\n                        <div\n                          onClick={() => setSelectedPlan(null)}\n                          className=\"bg-red-100 group-hover:bg-red-200 font-semibold text-red-600 group-hover:text-red-800 rounded px-3 py-2 cursor-pointer\"\n                        >\n                          Close\n                        </div>\n                      )}\n                  </div>\n                </div>\n                {selectedPlan !== null &&\n                  selectedPlan.session_plan_id === item.session_plan_id && (\n                    <div className=\"bg-white rounded border border-blue-50 mt-2 animate__animated animate__fadeIn\">\n                      <table className=\"w-full\">\n                        <thead className=\"bg-blue-50\">\n                          <tr className=\"text-left\">\n                            <th className=\"px-3 py-3\">#</th>\n                            <th>Plan</th>\n                            <th>Start date</th>\n                            <th>Ending date</th>\n                            <th>Status</th>\n                          </tr>\n                        </thead>\n                        <tbody className=\"text-sm\">\n                          {selectedPlan !== null &&\n                            selectedPlan.session_plan_id ===\n                              item.session_plan_id &&\n                            selectedPlan.plans.length > 0 &&\n                            item.plans.map((plan, i) => (\n                              <tr\n                                key={i + 1}\n                                className={`${\n                                  isPlansActive(item.plans).find(\n                                    (itm) => itm.type_key === plan.type_key\n                                  ) !== undefined\n                                    ? \"bg-blue-100 text-blue-600 font-bold\"\n                                    : \"\"\n                                } text-left border-b border-blue-50`}\n                              >\n                                <td className=\"px-3 py-1\">{i + 1}</td>\n                                <td>{plan.type_title}</td>\n                                <td>{DATE(plan.start_date, \"DD/MM/YYYY\")}</td>\n                                <td>{DATE(plan.end_date, \"DD/MM/YYYY\")}</td>\n                                <td>{plan.type_status}</td>\n                              </tr>\n                            ))}\n                        </tbody>\n                      </table>\n                    </div>\n                  )}\n              </div>\n            ))}\n          </section>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default ChooseSession;\n","export default __webpack_public_path__ + \"static/media/profile.a9136072.png\";","import React, { Component } from 'react'\nimport { FaRegUserCircle } from 'react-icons/fa'\nimport { GrStatusInfo } from 'react-icons/gr'\nimport { AdminApplicationsList, ApplicationStatesDescription } from '../../../interfaces/application';\nimport noImage from '../../../assets/profile.png';\n\nenum tabs {\n  profile = \"profile\",\n  position = \"position\",\n}\ninterface ApplicationDetailsProps {\n  selectedApplication: AdminApplicationsList\n}\n\ninterface ApplicationDetailsState {\n  loading: boolean;\n  tab: tabs,\n}\n\nclass ApplicationDetails extends Component<ApplicationDetailsProps, ApplicationDetailsState> {\n  constructor(props: ApplicationDetailsProps) {\n\t\tsuper(props);\n\n\t\tthis.state = {\n      loading: false,\n      tab: tabs.profile,\n\t\t};\n\t}\n  tabStatusClass = (status: boolean) => {\n    return status === true ?\n    \"col-span-6 bg-white hover:bg-blue-100 py-4 px-3 cursor-pointer text-lg border-b-4 border-blue-600 text-blue-600 font-bold flex flex-row items-center justify-start bg-blue-50 gap-3 animate__animated animate__pulse\" :\n    \"col-span-6 bg-white hover:bg-blue-50 py-4 px-3 cursor-pointer text-lg border-b-4 border-white hover:border-blue-200 text-gray-600 hover:text-blue-700 flex flex-row items-center justify-start gap-3\"\n  }\n  render() {\n    return (\n      <div className=\"px-2 py-2 border-t\">\n        {/* Tabs */}\n        <div className=\"rounded grid md:grid-cols-12\">\n          <div onClick={() => this.setState({ tab: tabs.profile })} className={`${this.state.tab === tabs.profile ? this.tabStatusClass(true) : this.tabStatusClass(false)}`}>\n            <FaRegUserCircle className=\"text-3xl\" />\n            Applicant profile\n          </div>\n          <div onClick={() => this.setState({ tab: tabs.position })} className={`${this.state.tab === tabs.position ? this.tabStatusClass(true) : this.tabStatusClass(false)}`}>\n            <GrStatusInfo className=\"text-3xl\" />\n            Position requirements\n          </div>\n        </div>\n        {/* Tab contents */}\n        <div className=\"border rounded px-4 py-4 mt-3\">\n          {this.state.tab === tabs.profile ? \n          <div className=\"grid md:grid-cols-12\">\n            <div className=\"col-span-6\">\n              <div className=\"text-3xl text-blue-600 font-bold mb-6\">General information</div>\n              <div className=\"\">\n                <div className=\"px-2 py-2\">\n                  <img src={noImage} alt=\"\" className=\"h-28 w-28 rounded-full mb-2\" />\n                </div>\n              </div>\n              <div className=\"flex flex-row item-center justify-left gap-3 mb-2\">\n                <span className=\"text-gray-500 italic\">First name: </span>\n                <span className=\"font-bold\">{this.props.selectedApplication.fname}</span>\n              </div>\n              <div className=\"flex flex-row item-center justify-left gap-3 mb-2\">\n                <span className=\"text-gray-500 italic\">Last name: </span>\n                <span className=\"font-bold\">{this.props.selectedApplication.lname}</span>\n              </div>\n              <div className=\"flex flex-row item-center justify-left gap-3 mb-2\">\n                <span className=\"text-gray-500 italic\">National ID: </span>\n                <span className=\"font-bold\">{this.props.selectedApplication.n_id}</span>\n              </div>\n              <div className=\"flex flex-row item-center justify-left gap-3 mb-2\">\n                <span className=\"text-gray-500 italic\">Gender: </span>\n                <span className=\"font-bold\">{this.props.selectedApplication.sex}</span>\n              </div>\n              <div className=\"flex flex-row item-center justify-left gap-3 mb-2\">\n                <span className=\"text-gray-500 italic\">Phone number: </span>\n                <span className=\"font-bold\">{this.props.selectedApplication.phone_number}</span>\n              </div>\n              <div className=\"flex flex-row item-center justify-left gap-3 mb-2\">\n                <span className=\"text-gray-500 italic\">Email: </span>\n                <span className=\"font-bold\">{this.props.selectedApplication.email}</span>\n              </div>\n              <div className=\"flex flex-row item-center justify-left gap-3 mb-2\">\n                <span className=\"text-gray-500 italic\">District: </span>\n                <span className=\"font-bold\">{this.props.selectedApplication.district}</span>\n              </div>\n            </div>\n          </div> : \n          <div>\n              <div className=\"text-2xl text-blue-600 font-bold mb-3\">Application details</div>\n              <div className=\"border px-3 py-3 rounded mb-6\">\n                <div className=\"flex flex-row item-center justify-left gap-3 mb-2\">\n                  <span className=\"text-gray-500 italic\">Application period: </span>\n                  <span className=\"font-bold\">{this.props.selectedApplication.application_session.application_session_name} - {this.props.selectedApplication.application_session.period}</span>\n                </div>\n                <div className=\"flex flex-row item-center justify-left gap-3 mb-2\">\n                  <span className=\"text-gray-500 italic\">Application date: </span>\n                  <span className=\"font-bold\">{this.props.selectedApplication.application_session.createdAt}</span>\n                </div>\n                <div className=\"flex flex-row item-center justify-left gap-3 mb-2\">\n                  <span className=\"text-gray-500 italic\">Application status: </span>\n                  <span className=\"font-bold\">{ApplicationStatesDescription.find(itm => itm.key === this.props.selectedApplication.application_status)?.caption}</span>\n                </div>\n                <div className=\"flex flex-row item-center justify-left gap-3 mb-2\">\n                  <span className=\"text-gray-500 italic\">Application history: </span>\n                  <span className=\"font-bold\">\n                    <ol className=\"text-gray-500 text-sm\">\n                      {this.props.selectedApplication.application_history.map((item, i) => (\n                        <li key={i + 1}className=\"\">{i + 1}) {item.date} ({item.comment})</li>\n                      ))}\n                    </ol>\n                  </span>\n                </div>\n              </div>\n              <div className=\"text-2xl text-blue-600 font-bold mb-3\">Position details</div>\n              <div className=\"border px-3 py-3 rounded\">\n                <div className=\"flex flex-row item-center justify-left gap-3 mb-2\">\n                  <span className=\"text-gray-500 italic\">Position name: </span>\n                  <span className=\"font-bold\">{this.props.selectedApplication.position.position_title}</span>\n                </div>\n                <div className=\"flex flex-row item-center justify-left gap-3 mb-2\">\n                  <span className=\"text-gray-500 italic\">Position description: </span>\n                  <span className=\"font-bold\">{this.props.selectedApplication.position.description}</span>\n                </div>\n                <div className=\"flex flex-row item-center justify-left gap-3 mb-2\">\n                  <span className=\"text-gray-500 italic\">Position exams: </span>\n                  <span className=\"font-bold\">\n                    <ol>\n                      {this.props.selectedApplication.position.courses.map((item, i) => (\n                        <li key={i + 1}>({i + 1}) Course name: {item.course_name} - {item.course_code}</li>\n                      ))}\n                    </ol>\n                  </span>\n                </div>\n              </div>\n          </div>}\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default ApplicationDetails\n","import axios from \"axios\";\nimport React, { Component, Fragment } from \"react\";\nimport { BiExport, BiFilterAlt, BiSort } from \"react-icons/bi\";\nimport { FiEdit } from \"react-icons/fi\";\nimport { ImFilesEmpty } from \"react-icons/im\";\nimport { IoIosBriefcase } from \"react-icons/io\";\nimport { IoFilter } from \"react-icons/io5\";\nimport {\n  MdCheckBox,\n  MdCheckBoxOutlineBlank,\n  MdHistory,\n  MdRadioButtonChecked,\n  MdRadioButtonUnchecked,\n  MdSearch,\n} from \"react-icons/md\";\nimport { connect } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport {\n  Auth,\n  schoolLevelsStoreInterface,\n  loadAllPositions,\n  setSelectedPosition,\n  loadEducationCategories,\n  PushPopupAlert,\n  positionsStoreInterface,\n} from \"../../../actions\";\nimport { GetAllSessionPlans } from \"../../../actions/session\";\nimport { PopupAlertData } from \"../../../components/Alert/Popup\";\nimport {\n  generatePDF,\n  reportSettingsInterface,\n} from \"../../../components/DownloadPDF/rest\";\nimport Loading from \"../../../components/Loading/Loading\";\nimport LoadingV2, { LoadingType } from \"../../../components/Loading/LoadingV2\";\nimport Modal, { ModalSize, Themes } from \"../../../components/Modal/Modal\";\nimport {\n  MainItem,\n  SideNavigation,\n} from \"../../../components/Navigation/SideNavigation\";\nimport {\n  ApplicationStates,\n  AdminApplicationsList,\n  ApplicationStatesDescription,\n} from \"../../../interfaces/application\";\nimport {\n  education_category,\n  PositionAPI,\n  SessionPlanInterface,\n} from \"../../../interfaces/index\";\nimport { PopupAlertTheme } from \"../../../interfaces/popupAlert\";\nimport { StoreState } from \"../../../reducers\";\nimport { SessionPlanReducerInterface } from \"../../../reducers/session\";\nimport {\n  capitalizeFirstLetter,\n  isEmptyOrSpaces,\n} from \"../../../shared/dataTest\";\nimport { AdminApplicationsToPrintInterface } from \"../../../shared/interfaces\";\nimport { API } from \"../../../utils/api\";\nimport { errorToText } from \"../../../utils/errors\";\nimport ExportToExcel from \"../../../utils/ExportToExcel\";\nimport { DATE, sortThisArray } from \"../../../utils/functions\";\nimport searchData from \"../../../utils/search\";\nimport ChooseSession from \"../../SessionSettings/ChooseSession\";\nimport ApplicationDetails from \"./ApplicationDetails\";\n\nexport const ignoreThisApplicationStatus: ApplicationStates[] = [\n  ApplicationStates.Failed,\n  ApplicationStates.Pass,\n  ApplicationStates.Rejected,\n];\n\nexport enum reportContentKeyInterface {\n  \"names\" = \"names\",\n  \"gender\" = \"gender\",\n  \"national_id\" = \"national_id\",\n  \"email\" = \"email\",\n  \"phone\" = \"phone\",\n  \"district\" = \"district\",\n  \"application_session\" = \"application_session\",\n  \"education_category\" = \"education_category\",\n  \"date\" = \"date\",\n  \"decision\" = \"decision\",\n  \"position\" = \"position\",\n}\nexport interface reportContentInterface {\n  key: reportContentKeyInterface;\n  title: string;\n  status: boolean;\n}\n\nconst defaultReportContent: reportContentInterface[] = [\n  {\n    key: reportContentKeyInterface.names,\n    title: \"Applicant Names\",\n    status: true,\n  },\n  {\n    key: reportContentKeyInterface.national_id,\n    title: \"National ID\",\n    status: true,\n  },\n  { key: reportContentKeyInterface.gender, title: \"Gender\", status: true },\n  { key: reportContentKeyInterface.phone, title: \"Phone\", status: true },\n  {\n    key: reportContentKeyInterface.application_session,\n    title: \"Application Period\",\n    status: true,\n  },\n  {\n    key: reportContentKeyInterface.education_category,\n    title: \"Education Institute\",\n    status: true,\n  },\n  {\n    key: reportContentKeyInterface.date,\n    title: \"Application Date\",\n    status: true,\n  },\n  { key: reportContentKeyInterface.decision, title: \"Decision\", status: true },\n  {\n    key: reportContentKeyInterface.position,\n    title: \"Position Title\",\n    status: true,\n  },\n];\n\ninterface loadAllApplicationsProps {\n  auth: Auth;\n  GetAllSessionPlans: Function;\n  loadAllPositions: (callback: (loading: boolean) => void) => void;\n  setSelectedPosition: (position: PositionAPI) => void;\n  positions: positionsStoreInterface;\n  sessionPlan: SessionPlanReducerInterface;\n  schoolLevels: schoolLevelsStoreInterface;\n  loadEducationCategories: (callback: (loading: boolean) => void) => void;\n  PushPopupAlert: (alert: PopupAlertData) => void;\n}\n\ninterface loadAllApplicationsState {\n  loading: boolean;\n  selectedEducationCategory: education_category | \"all\";\n  defaultSelectedPeriod: SessionPlanInterface | null;\n  applicationListData: AdminApplicationsList[] | null;\n  selectedApplicationStatus: ApplicationStates | \"ALL\" | null;\n  selected_period: SessionPlanInterface | null;\n  selectPosition: boolean;\n  selectPeriod: boolean;\n  applicationDetailsModal: {\n    selected_application: AdminApplicationsList;\n    status: boolean;\n  } | null;\n  generateReportModal: {\n    reportType: \"EXCEL\" | \"PDF\";\n    status: boolean;\n  } | null;\n  searchInput: string | \"\";\n  searchPositionInput: string | \"\";\n  applicationsToPrint: AdminApplicationsToPrintInterface[] | null;\n  reportTitle: string;\n  reportContent: reportContentInterface[];\n  selectAll: boolean;\n  formError: {\n    element: string;\n    msg: string;\n  } | null;\n  sortProperty: string;\n  isSorted: boolean;\n  sortOrder: \"ASC\" | \"DESC\";\n  downloading: boolean;\n}\nclass _Applications extends Component<\n  loadAllApplicationsProps,\n  loadAllApplicationsState\n> {\n  constructor(props: loadAllApplicationsProps) {\n    super(props);\n\n    this.state = {\n      loading: false,\n      defaultSelectedPeriod: null,\n      selectedEducationCategory: \"all\",\n      selectedApplicationStatus: \"ALL\",\n      applicationListData: null,\n      selectPosition: false,\n      selectPeriod: false,\n      applicationDetailsModal: null,\n      generateReportModal: null,\n      searchInput: \"\",\n      searchPositionInput: \"\",\n      reportTitle: \"Application Report\",\n      selectAll: true,\n      applicationsToPrint: null,\n      formError: null,\n      reportContent: defaultReportContent,\n      sortProperty: \"\",\n      isSorted: false,\n      sortOrder: \"ASC\",\n      selected_period: null,\n      downloading: false,\n    };\n  }\n\n  setLoadingState = (state: boolean) => {\n    this.setState({ loading: state });\n  };\n\n  loadAllApplications = async (\n    position: PositionAPI | null,\n    period: SessionPlanInterface | null,\n    callback: (loading: boolean, msg: string) => void\n  ) => {\n    if (position !== null && period !== null) {\n      callback(true, \"\");\n      try {\n        const res = await axios.get<AdminApplicationsList[]>(\n          `${API.APPLICATION}/application/${position.position_id}/${period.session_plan_id}`\n        );\n        this.setState({ applicationListData: res.data });\n        console.log(\"applicationListData: \", res.data);\n        callback(false, \"\");\n      } catch (error: any) {\n        console.error({ error: errorToText(error) });\n        callback(false, errorToText(error));\n      }\n    }\n  };\n\n  componentDidMount = () => {\n    if (\n      this.props.schoolLevels.education_categories === null ||\n      this.props.schoolLevels.education_categories.length === 0\n    ) {\n      this.props.loadEducationCategories(this.setLoadingState);\n    }\n\n    if (\n      this.props.sessionPlan.allSessionPlans === null ||\n      this.props.sessionPlan.allSessionPlans.length <= 0\n    ) {\n      this.props.GetAllSessionPlans(\n        (status: boolean, msg: string, data?: SessionPlanInterface[]) => {\n          this.setLoadingState(status);\n          if (!status && msg.length > 0) {\n            this.props.PushPopupAlert({\n              title: msg,\n              theme: PopupAlertTheme.danger,\n            });\n          }\n          if (data && data.length > 0) {\n            if (this.state.selected_period === null) {\n              let active_period = data.find((item) => item.is_active);\n              if (active_period) {\n                this.setState({ selected_period: active_period });\n                this.setState({\n                  selectPeriod: false,\n                  defaultSelectedPeriod: active_period,\n                });\n              } else if (data.length > 0) {\n                active_period = data[data.length - 1];\n                this.setState({ selected_period: active_period });\n                this.setState({\n                  selectPeriod: false,\n                  defaultSelectedPeriod: active_period,\n                });\n              } else {\n                this.setState({ selectPeriod: true });\n              }\n            }\n          }\n        }\n      );\n    }\n\n    if (\n      this.state.selected_period === null &&\n      this.props.sessionPlan.allSessionPlans &&\n      this.props.sessionPlan.allSessionPlans.length > 0\n    ) {\n      let active_period = this.props.sessionPlan.allSessionPlans.find(\n        (item) => item.is_active\n      );\n      if (active_period) {\n        this.setState({\n          selected_period: active_period,\n          selectPeriod: false,\n          defaultSelectedPeriod: active_period,\n        });\n      } else if (this.props.sessionPlan.allSessionPlans.length > 0) {\n        active_period =\n          this.props.sessionPlan.allSessionPlans[\n            this.props.sessionPlan.allSessionPlans.length - 1\n          ];\n        this.setState({\n          selected_period: active_period,\n          selectPeriod: false,\n          defaultSelectedPeriod: active_period,\n        });\n      } else {\n        this.setState({ selectPeriod: true });\n      }\n    }\n\n    if (this.props.positions.positions_list === null) {\n      this.props.loadAllPositions(this.setLoadingState);\n    }\n\n    if (this.props.positions.selected_position === null) {\n      this.setState({ selectPosition: true });\n    }\n\n    this.loadAllApplications(\n      this.props.positions.selected_position,\n      this.state.selected_period,\n      (status: boolean, errorMessage: string) => {\n        this.setLoadingState(status);\n        if (!isEmptyOrSpaces(errorMessage)) {\n          this.props.PushPopupAlert({\n            title: errorMessage,\n            theme: PopupAlertTheme.warning,\n          });\n        }\n      }\n    );\n\n    if (this.props.positions.selected_position && this.state.selected_period) {\n      this.setState({\n        reportTitle:\n          this.props.positions.selected_position.position_title +\n          \" - Application Report - \" +\n          this.state.selected_period.session_plan_name,\n      });\n    }\n  };\n\n  componentDidUpdate(\n    prevProps: loadAllApplicationsProps,\n    prevState: loadAllApplicationsState\n  ) {\n    if (prevState.loading !== this.state.loading) {\n      // UPDATE APPLICATION LIST FOR UPDATE ==============================\n      this.updateApplicationToPrint();\n    }\n  }\n\n  AdminApplicationStatuses = (\n    application: AdminApplicationsList[]\n  ): { title: string; count: number; status: ApplicationStates | \"ALL\" }[] => {\n    let output: {\n      title: string;\n      count: number;\n      status: ApplicationStates | \"ALL\";\n    }[] = [{ title: \"All\", count: application.length, status: \"ALL\" }];\n    for (let i in ApplicationStatesDescription) {\n      if (\n        !ignoreThisApplicationStatus.includes(\n          ApplicationStatesDescription[i].key\n        )\n      ) {\n        output.push({\n          title: ApplicationStatesDescription[i].caption,\n          count: application.filter(\n            (itm) =>\n              itm.application_status === ApplicationStatesDescription[i].key\n          ).length,\n          status: ApplicationStatesDescription[i].key,\n        });\n      }\n    }\n    return output;\n  };\n\n  filteredApplications = (\n    applications: AdminApplicationsList[] | null,\n    Status: ApplicationStates | \"ALL\" | null,\n    education_category: education_category | \"all\"\n  ) => {\n    let appl: AdminApplicationsList[] | null = applications;\n    if (education_category !== \"all\" && applications !== null) {\n      appl = applications.filter(\n        (itm) =>\n          itm.position.education_institute_id.education_institute_id ===\n          education_category.education_institute_id\n      );\n    }\n    if (Status === null || Status === \"ALL\") {\n      return appl;\n    } else {\n      if (appl === null) {\n        return appl;\n      } else {\n        return appl.filter((item) => item.application_status === Status);\n      }\n    }\n  };\n\n  setDownloading = (status: boolean) => {\n    this.setState({ downloading: status });\n  };\n\n  updateApplicationToPrint = () => {\n    if (this.state.applicationListData) {\n      let arrayNew: AdminApplicationsToPrintInterface[] = [];\n      let n: number = 1;\n      for (const key in this.state.applicationListData) {\n        if (\n          Object.prototype.hasOwnProperty.call(\n            this.state.applicationListData,\n            key\n          )\n        ) {\n          const element = this.state.applicationListData[key];\n          let dataArray: AdminApplicationsToPrintInterface = {\n            application_id: n,\n            names: element.fname + \" \" + element.lname,\n            national_id: element.n_id,\n            gender: element.sex === \"M\" ? \"Male\" : \"Female\",\n            position: element.position.position_title,\n            phone: element.phone_number,\n            email: element.email,\n            education_category:\n              element.position.education_institute_id.education_category_title,\n            application_session:\n              element.application_session.application_session_id,\n            district: element.district,\n            date: element.createdAt,\n            decision: element.application_status,\n          };\n\n          for (const key in this.state.reportContent) {\n            if (\n              Object.prototype.hasOwnProperty.call(\n                this.state.reportContent,\n                key\n              )\n            ) {\n              if (!this.state.reportContent[key].status) {\n                delete dataArray[this.state.reportContent[key].key];\n              }\n            }\n          }\n          arrayNew.push(dataArray);\n          n++;\n        }\n      }\n      this.setState({ applicationsToPrint: arrayNew });\n      arrayNew = [];\n      n = 1;\n      // this.props.applicationsToPrint=;\n    }\n  };\n\n  updateReportContent = (key: reportContentKeyInterface) => {\n    let index: number = this.state.reportContent.findIndex(\n      (item) => item.key === key\n    );\n    let newArray: reportContentInterface[] = this.state.reportContent;\n    newArray[index].status = !newArray[index].status;\n    this.setState({ reportContent: newArray });\n    let isSelectAllNeeded = newArray.find((item) => item.status === false);\n    if (isSelectAllNeeded) {\n      this.setState({ selectAll: false });\n    } else {\n      this.setState({ selectAll: true });\n    }\n\n    // UPDATE APPLICATION LIST FOR UPDATE ==============================\n    this.updateApplicationToPrint();\n  };\n\n  generateThisPDF = () => {\n    if (!document.querySelectorAll(\"#report_content tbody tr\").length) {\n      this.props.PushPopupAlert({\n        title: `Can't generate Report of empty Data`,\n        theme: PopupAlertTheme.warning,\n      });\n      return false;\n    }\n\n    if (\n      this.props.positions.selected_position &&\n      this.state.selected_period &&\n      this.state.selectedEducationCategory !== \"all\"\n    ) {\n      const table: HTMLElement | null =\n        document.getElementById(\"report_content\");\n      const reportSettings: reportSettingsInterface = {\n        doneBy: this.props.auth.user.fname + \" \" + this.props.auth.user.lname,\n        title: \"Applications Report\",\n        subjectTitle: \"Position\",\n        subject: this.props.positions.selected_position.position_title,\n        period: this.state.selected_period.session_plan_name,\n        footer: \"Online Recruitment\",\n        institute:\n          this.state.selectedEducationCategory.education_category_title,\n      };\n      table && generatePDF(reportSettings, table, this.setDownloading);\n    }\n  };\n\n  isChangeAllowed = (key: reportContentKeyInterface): boolean => {\n    if (\n      key === reportContentKeyInterface.names ||\n      key === reportContentKeyInterface.decision ||\n      key === reportContentKeyInterface.application_session\n    ) {\n      return false;\n    }\n    return true;\n  };\n\n  resetReportContent = (currentState: boolean) => {\n    let newArray: reportContentInterface[] = this.state.reportContent;\n    for (const key in newArray) {\n      if (this.isChangeAllowed(newArray[key].key)) {\n        newArray[key].status = !currentState;\n      }\n    }\n\n    this.setState({\n      reportContent: newArray,\n      selectAll: !currentState,\n    });\n\n    this.updateApplicationToPrint();\n  };\n\n  setSort = (thisProperty: string) => {\n    if (\n      this.state.sortProperty === thisProperty &&\n      this.state.sortOrder === \"ASC\"\n    ) {\n      this.setState({\n        sortProperty: thisProperty,\n        isSorted: true,\n        sortOrder: \"DESC\",\n      });\n    } else {\n      this.setState({\n        sortProperty: thisProperty,\n        isSorted: true,\n        sortOrder: \"ASC\",\n      });\n    }\n  };\n\n  render() {\n    return (\n      <React.Fragment>\n        <SideNavigation>\n          <div className=\"flex flex-col mb-4\">\n            <span className=\"text-sm text-gray-600 mb-2\">\n              Education categories:\n            </span>\n            {this.props.schoolLevels.education_categories === null ? (\n              <Loading />\n            ) : this.props.schoolLevels.education_categories.length === 0 ? (\n              <span>No result found</span>\n            ) : (\n              <section>\n                <div\n                  onClick={() => {\n                    this.setState({ selectedEducationCategory: \"all\" });\n                  }}\n                  className={`border rounded px-2 py-2 mb-2 cursor-pointer ${\n                    this.state.selectedEducationCategory === \"all\"\n                      ? \"bg-blue-600 text-white hover:bg-blue-100 hover:text-blue-600 hover:border-blue-500\"\n                      : \"hover:bg-blue-100 hover:text-blue-600 hover:border-blue-500\"\n                  } font-bold flex flex-row items-center gap-2`}\n                >\n                  {this.state.selectedEducationCategory === \"all\" ? (\n                    <MdRadioButtonChecked />\n                  ) : (\n                    <MdRadioButtonUnchecked />\n                  )}\n                  <span>ALL</span>\n                </div>\n                {this.props.schoolLevels.education_categories.map((item, i) => (\n                  <div\n                    onClick={() => {\n                      this.setState({ selectedEducationCategory: item });\n                    }}\n                    key={i + 1}\n                    className={`border rounded px-2 py-2 mb-2 cursor-pointer ${\n                      this.state.selectedEducationCategory !== \"all\" &&\n                      this.state.selectedEducationCategory\n                        .education_institute_id === item.education_institute_id\n                        ? \"bg-blue-600 text-white hover:bg-blue-100 hover:text-blue-600 hover:border-blue-500\"\n                        : \"hover:bg-blue-100 hover:text-blue-600 hover:border-blue-500\"\n                    } font-bold flex flex-row items-center gap-2`}\n                  >\n                    {this.state.selectedEducationCategory !== \"all\" &&\n                    this.state.selectedEducationCategory\n                      .education_institute_id ===\n                      item.education_institute_id ? (\n                      <MdRadioButtonChecked />\n                    ) : (\n                      <MdRadioButtonUnchecked />\n                    )}\n                    <span>{item.education_category_title}</span>\n                  </div>\n                ))}\n              </section>\n            )}\n          </div>\n          <div className=\"\">\n            <div className=\"text-gray-600 text-sm mb-2\">Selected period:</div>\n            <div\n              onClick={() => this.setState({ selectPeriod: true })}\n              className=\"font-bold bg-blue-50 border border-blue-200 rounded py-2 cursor-pointer text-xs px-2 hover:underline  text-blue-600  mb-4 w-full flex flex-row items-center animate__animated animate__zoomIn\"\n            >\n              {this.state.selected_period !== null\n                ? this.state.selected_period.session_plan_name\n                : \"Filter by period\"}\n              <FiEdit className=\"text-3xl text-blue-600\" />\n            </div>\n          </div>\n          {/* <Search data={[1, 2, 3]} /> */}\n          {this.props.positions.selected_position && (\n            <div className=\"pt-1\">\n              <div className=\"text-sm text-gray-700 pb-2 pt-2\">\n                Application statuses:\n              </div>\n              {this.state.applicationListData === null ? (\n                <Loading />\n              ) : (\n                this.AdminApplicationStatuses(\n                  this.state.applicationListData!\n                ).map(\n                  (\n                    itm: {\n                      title: string;\n                      count: number;\n                      status: ApplicationStates | \"ALL\";\n                    },\n                    i: number\n                  ) => (\n                    // itm.count > 0 &&\n                    <Fragment key={itm.title}>\n                      <div\n                        onClick={() =>\n                          this.setState({\n                            selectedApplicationStatus: itm.status,\n                          })\n                        }\n                      >\n                        <MainItem\n                          title={itm.title}\n                          count={itm.count}\n                          active={\n                            this.state.selectedApplicationStatus === itm.status\n                              ? true\n                              : false\n                          }\n                        />\n                      </div>\n                    </Fragment>\n                  )\n                )\n              )}\n            </div>\n          )}\n        </SideNavigation>\n\n        <section>\n          {/* REPORT TITLE ========================================= */}\n          <div className=\"grid md:grid-cols-12\">\n            <div className=\"col-span-8\">\n              <div className=\"mt-4 mx-4 flex flex-col gap-1\">\n                <span className=\"text-xl font-bold text-gray-700\">\n                  Applications Report\n                </span>\n                <div\n                  onClick={() => this.setState({ selectPosition: true })}\n                  className=\"flex flex-row gap-2 items-end\"\n                >\n                  <span className=\"text-gray-500 text-xl\">Position:</span>\n                  <span className=\"text-blue-600 font-bold underline cursor-pointer text-3xl\">\n                    {this.props.positions.selected_position !== null\n                      ? this.props.positions.selected_position.position_title\n                      : \"No position selected, Click to select\"}\n                  </span>\n                </div>\n              </div>\n            </div>\n            <div className=\"col-span-4\">\n              <div className=\"float-right mt-2\">\n                {this.state.applicationsToPrint &&\n                  this.state.applicationsToPrint.length > 0 && (\n                    <div className=\"flex flex-row items-center justify-end font-bold mb-2\">\n                      <BiExport className=\"text-2xl text-gray-500\" />\n                      <span className=\"text-gray-500\">Export as</span>\n                      <button\n                        className={`px-4 py-1 ml-1 rounded bg-white border hover:text-blue-600 font-bold hover:bg-blue-50 border-gray-200 ${\n                          this.state.downloading && \"cursor-wait\"\n                        }`}\n                        disabled={this.state.loading || this.state.downloading}\n                        onClick={() =>\n                          this.setState({\n                            generateReportModal: {\n                              reportType: \"EXCEL\",\n                              status: true,\n                            },\n                          })\n                        }\n                      >\n                        EXCEL\n                      </button>\n                      <button\n                        className=\"px-4 py-1 ml-1 rounded bg-white border hover:text-blue-600 font-bold hover:bg-blue-50 border-gray-200\"\n                        onClick={() => this.generateThisPDF()}\n                        disabled={this.state.loading}\n                      >\n                        PDF\n                      </button>\n                    </div>\n                  )}\n                <div\n                  onClick={() => this.setState({ selectPosition: true })}\n                  className=\"btn bg-blue-50 border border-blue-300 text-blue-600 cursor-pointer hover:bg-blue-100 flex flex-row items-center justify-center gap-2 text-sm \"\n                >\n                  <BiFilterAlt className=\"text-xl\" />\n                  Filter by position\n                </div>\n              </div>\n            </div>\n          </div>\n          {/* END REPORT TITLE ========================================= */}\n          <div className=\"bg-white my-4\">\n            <div className=\"w-full px-2 py-2\">\n              <input\n                onChange={(e) => this.setState({ searchInput: e.target.value })}\n                type=\"text\"\n                value={this.state.searchInput}\n                placeholder=\"Search...\"\n                className=\"w-full bg-gray-100 py-2 px-3 rounded\"\n              />\n            </div>\n            <table className=\"w-full shadow\" id=\"report_content\">\n              <thead className=\"bg-white border-b-2 border-gray-300 text-gray-600 font-bold text-sm\">\n                <tr>\n                  <td className=\"px-2 py-2\">#</td>\n                  <td\n                    className=\"px-2 py-2 cursor-pointer\"\n                    onClick={() => this.setSort(\"fname\")}\n                  >\n                    <div className=\"flex items-center gap-1\">\n                      Applicant names <BiSort />\n                    </div>\n                  </td>\n                  <td className=\"px-2 py-2\">National ID</td>\n                  <td className=\"px-2 py-2\">Gender</td>\n                  <td className=\"px-2 py-2\">Phone</td>\n                  <td className=\"px-2 py-2\">Position</td>\n                  <td className=\"px-2 py-2\">Res. District</td>\n                  <td\n                    className=\"px-2 py-2 cursor-pointer\"\n                    onClick={() => this.setSort(\"application_status\")}\n                  >\n                    <div className=\"flex items-center gap-1\">\n                      Status <BiSort />\n                    </div>\n                  </td>\n                  <td className=\"px-2 py-2\">Date</td>\n                </tr>\n              </thead>\n              <tbody>\n                {!this.props.positions.selected_position ? (\n                  <tr>\n                    <td colSpan={9} className=\"px-2 py-2\">\n                      <div className=\"flex flex-col text-gray-400 items-center justify-center bg-gray-100 rounded py-10\">\n                        <ImFilesEmpty className=\"text-8xl text-gray-400 mb-2 animate__animated animate__shakeX\" />\n                        <span className=\"text-sm font-bold\">\n                          No position selected! Please select position to get\n                          data\n                        </span>\n                        <div className=\"w-full mt-2 flex flex-row items-center justify-center\">\n                          <ul className=\"text-sm py-2 text-blue-600 font-bold flex flex-row gap-2\">\n                            <li\n                              onClick={() =>\n                                this.setState({ selectPosition: true })\n                              }\n                              className=\"underline text-blue-600 cursor-pointer\"\n                            >\n                              Choose position\n                            </li>\n                          </ul>\n                        </div>\n                      </div>\n                    </td>\n                  </tr>\n                ) : this.state.applicationListData === null ||\n                  this.filteredApplications(\n                    this.state.applicationListData,\n                    this.state.selectedApplicationStatus,\n                    this.state.selectedEducationCategory\n                  ) === null ? (\n                  <tr>\n                    <td colSpan={9} className=\"px-2 py-2\">\n                      <Loading />\n                    </td>\n                  </tr>\n                ) : this.filteredApplications(\n                    this.state.applicationListData,\n                    this.state.selectedApplicationStatus,\n                    this.state.selectedEducationCategory\n                  )!.length === 0 ? (\n                  <tr>\n                    <td colSpan={9} className=\"px-2 py-2\">\n                      <div className=\"flex flex-col text-gray-400 items-center justify-center bg-gray-100 rounded py-10\">\n                        <ImFilesEmpty className=\"text-8xl text-gray-400 mb-2 animate__animated animate__shakeX\" />\n                        <span className=\"text-sm font-bold\">\n                          No result found! Please try to search again\n                        </span>\n                        <div className=\"w-full mt-2 flex flex-row items-center justify-center\">\n                          <ul className=\"text-sm py-2 text-blue-600 font-bold flex flex-row gap-2\">\n                            <li\n                              onClick={() =>\n                                this.setState({ selectPeriod: true })\n                              }\n                              className=\"underline text-gray-500 cursor-pointer\"\n                            >\n                              Filter by period\n                            </li>\n                            <li className=\"text-gray-400 italic\">or</li>\n                            <li\n                              onClick={() =>\n                                this.setState({ selectPosition: true })\n                              }\n                              className=\"underline text-blue-600 cursor-pointer\"\n                            >\n                              Filter by position\n                            </li>\n                          </ul>\n                        </div>\n                      </div>\n                    </td>\n                  </tr>\n                ) : (\n                  sortThisArray(\n                    this.state.isSorted,\n                    searchData(\n                      this.filteredApplications(\n                        this.state.applicationListData,\n                        this.state.selectedApplicationStatus,\n                        this.state.selectedEducationCategory\n                      )!,\n                      this.state.searchInput\n                    ),\n                    this.state.sortProperty,\n                    this.state.sortOrder\n                  ).map((item, i) => (\n                    <tr\n                      onClick={() =>\n                        this.setState({\n                          applicationDetailsModal: {\n                            selected_application: item,\n                            status: true,\n                          },\n                        })\n                      }\n                      key={i + 1}\n                      className={`${\n                        i % 2 !== 0 ? \"bg-gray-100\" : \"bg-white\"\n                      } text-gray-600 hover:bg-blue-100 hover:text-blue-700 cursor-pointer border-b border-gray-300 hover:border-blue-500 text-sm`}\n                    >\n                      <td className=\"px-2 py-2\">{i + 1}</td>\n                      <td className=\"px-2 py-2\">\n                        {item.fname} {item.lname}\n                      </td>\n                      <td className=\"px-2 py-2\">{item.n_id}</td>\n                      <td className=\"px-2 py-2\">\n                        {item.sex === \"M\" ? \"Male\" : \"Female\"}\n                      </td>\n                      <td className=\"px-2 py-2\">{item.phone_number}</td>\n                      <td className=\"px-2 py-2\">\n                        {item.position.position_title}\n                      </td>\n                      <td className=\"px-2 py-2\">{item.district}</td>\n                      <td className=\"px-2 py-2\">\n                        {capitalizeFirstLetter(item.application_status)}\n                      </td>\n                      <td className=\"px-2 py-2\">{DATE(item.createdAt)}</td>\n                    </tr>\n                  ))\n                )}\n              </tbody>\n            </table>\n          </div>\n        </section>\n\n        {/* PERIOD && POSITION CONTENT MODAL */}\n        {(this.state.selectPosition === true ||\n          this.state.selectPeriod === true) && (\n          <Modal\n            title={\n              <div className=\"flex flex-row gap-4 items-center\">\n                {this.state.selectPeriod === true ? (\n                  <MdHistory className=\"text-5xl text-blue-600\" />\n                ) : (\n                  <IoFilter className=\"text-5xl text-blue-600\" />\n                )}\n                <div className=\"flex flex-col\">\n                  <span className=\"font-bold text-xl text-blue-600\">\n                    {this.state.selectPeriod === true\n                      ? \"Choose a period\"\n                      : \"Filter by a position\"}\n                  </span>\n                </div>\n              </div>\n            }\n            backDrop={true}\n            theme={Themes.default}\n            close={() =>\n              this.setState({\n                selectPosition: false,\n                selectPeriod: false,\n                searchPositionInput: \"\",\n              })\n            }\n            backDropClose={true}\n            widthSizeClass={ModalSize.extraLarge}\n            displayClose={true}\n            padding={{ title: true }}\n          >\n            <div className=\"px-2 pb-2\">\n              {this.state.selectPeriod === true ? (\n                <ChooseSession\n                  allSession={this.props.sessionPlan.allSessionPlans}\n                  setSelectSession={(value: SessionPlanInterface | \"all\") => {\n                    if (value !== \"all\") {\n                      this.setState({ selected_period: value });\n                      this.loadAllApplications(\n                        this.props.positions.selected_position,\n                        value,\n                        (status: boolean, errorMessage: string) => {\n                          this.setLoadingState(status);\n                          if (!isEmptyOrSpaces(errorMessage)) {\n                            this.props.PushPopupAlert({\n                              title: errorMessage,\n                              theme: PopupAlertTheme.warning,\n                            });\n                          }\n                        }\n                      );\n                      this.setState({\n                        selectPeriod: false,\n                        applicationListData: null,\n                      });\n                    }\n                  }}\n                  chooseAll={false}\n                  currentSelected={\n                    this.state.selected_period\n                      ? this.state.selected_period\n                      : \"all\"\n                  }\n                />\n              ) : this.state.selectPosition === true &&\n                this.props.positions.positions_list === null ? (\n                <LoadingV2 type={LoadingType.dark} />\n              ) : this.props.positions.positions_list!.length === 0 ? (\n                <div className=\"flex flex-col text-gray-400 items-center justify-center\">\n                  <MdSearch className=\"text-6xl\" />\n                  <div className=\"flex flex-col items-center justify-center\">\n                    <span>No positions found! Please go back!</span>\n                    <Link\n                      to=\"/\"\n                      className=\"btn bg-yellow-100 text-yellow-700 my-4 hover:bg-yellow-200\"\n                    >\n                      Go back\n                    </Link>\n                  </div>\n                </div>\n              ) : (\n                <>\n                  <div className=\"flex flex-col\">\n                    <span className=\"text-gray-600 text-xs font-bold\">\n                      Filter by position name\n                    </span>\n                    <input\n                      onChange={(e: React.ChangeEvent<HTMLInputElement>) =>\n                        this.setState({ searchPositionInput: e.target.value })\n                      }\n                      type=\"text\"\n                      className=\"mb-4 bg-gray-100 px-3 py-2 rounded\"\n                      placeholder=\"Keyword...\"\n                    />\n                  </div>\n                  {searchData(\n                    this.props.positions.positions_list!,\n                    this.state.searchPositionInput\n                  ).map((item, key) => (\n                    <div\n                      key={key + 1}\n                      onClick={() => {\n                        this.props.setSelectedPosition(item);\n                        this.loadAllApplications(\n                          item,\n                          this.state.selected_period\n                            ? this.state.selected_period\n                            : this.state.defaultSelectedPeriod,\n                          (status: boolean, errorMessage: string) => {\n                            this.setLoadingState(status);\n                            if (!isEmptyOrSpaces(errorMessage)) {\n                              this.props.PushPopupAlert({\n                                title: errorMessage,\n                                theme: PopupAlertTheme.warning,\n                              });\n                            }\n                          }\n                        );\n                        this.setState({\n                          selectPosition: false,\n                          searchPositionInput: \"\",\n                          applicationListData: null,\n                          reportTitle:\n                            this.props.positions.selected_position\n                              ?.position_title +\n                            \" - Application Report - \" +\n                            this.state.selected_period\n                              ? this.state.selected_period!.session_plan_name\n                              : this.state.defaultSelectedPeriod\n                              ? this.state.defaultSelectedPeriod!\n                                  .session_plan_name\n                              : \"\",\n                        });\n                      }}\n                      className=\"bg-white cursor-pointer rounded  px-3 py-2 border border-gray-200 hover:border-blue-500 hover:bg-blue-100 mb-2\"\n                    >\n                      <div className=\"grid lg:grid-cols-12\">\n                        <div className=\"col-span-12 lg:col-span-10\">\n                          <div className=\"flex flex-row items-center gap-3\">\n                            <div>\n                              <IoIosBriefcase className=\"text-4xl md:text-5xl text-blue-600\" />\n                            </div>\n                            <div className=\"flex flex-col\">\n                              <span className=\"text-xs lg:text-sm font-bold text-gray-700\">\n                                {item.position_title}\n                              </span>\n                              <span className=\"text-xs text-gray-500 italic\">\n                                School level:{\" \"}\n                                <span\n                                  className=\"text-gray-800 font-light\"\n                                  style={{ fontStyle: \"normal\" }}\n                                >\n                                  {item.school_level_id.school_level_name}\n                                </span>\n                              </span>\n                              <span className=\"text-xs font-bold text-blue-600 bg-blue-100 w-max px-3 py-1 rounded-full\">\n                                {\n                                  item.education_institute_id\n                                    .education_category_title\n                                }\n                              </span>\n                            </div>\n                          </div>\n                        </div>\n                        <div className=\"col-span-12 lg:col-span-2 hidden lg:block\">\n                          <div className=\"h-full flex items-center justify-end\">\n                            <div className=\"btn bg-blue-600 text-white float-right\">\n                              Choose\n                            </div>\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                  ))}\n                </>\n              )}\n            </div>\n          </Modal>\n        )}\n        {/* END PERIOD && POSITION CONTENT MODAL */}\n\n        {/* APPLICATION DETAIL CONTENT MODAL */}\n        {this.state.applicationDetailsModal !== null &&\n          this.state.applicationDetailsModal.status === true && (\n            <Modal\n              title={\n                <div className=\"flex flex-row gap-4 items-center\">\n                  {/* <IoBriefcase className=\"text-5xl text-gray-500\" /> */}\n                  <div className=\"flex flex-col\">\n                    <span className=\"font-bold text-2xl text-gray-500\">\n                      {\n                        this.state.applicationDetailsModal.selected_application\n                          .fname\n                      }{\" \"}\n                      {\n                        this.state.applicationDetailsModal.selected_application\n                          .lname\n                      }\n                    </span>\n                    <span className=\"text-sm text-blue-600 font-normal\">\n                      Position:{\" \"}\n                      {\n                        this.state.applicationDetailsModal.selected_application\n                          .position.position_title\n                      }\n                    </span>\n                  </div>\n                </div>\n              }\n              backDrop={true}\n              theme={Themes.default}\n              close={() => this.setState({ applicationDetailsModal: null })}\n              backDropClose={true}\n              widthSizeClass={ModalSize.extraLarge}\n              displayClose={true}\n              padding={{ title: true }}\n            >\n              <ApplicationDetails\n                selectedApplication={\n                  this.state.applicationDetailsModal.selected_application\n                }\n              />\n            </Modal>\n          )}\n        {/* END APPLICATION DETAIL CONTENT MODAL */}\n\n        {/* GENERATE DYNAMIC REPORT CONTENT MODAL */}\n        {this.state.generateReportModal !== null &&\n          this.state.generateReportModal.status === true && (\n            <Modal\n              title={\n                <div className=\"flex flex-row gap-4 items-center\">\n                  {/* <IoBriefcase className=\"text-5xl text-gray-500\" /> */}\n                  <div className=\"flex flex-col\">\n                    <span className=\"font-bold text-2xl text-gray-500\">\n                      Generating Report contents\n                    </span>\n                    <span className=\"text-sm text-blue-600 font-normal\">\n                      Generating {this.state.generateReportModal.reportType}{\" \"}\n                      Report\n                    </span>\n                  </div>\n                </div>\n              }\n              backDrop={true}\n              theme={Themes.default}\n              close={() => this.setState({ generateReportModal: null })}\n              backDropClose={false}\n              widthSizeClass={ModalSize.medium}\n              displayClose={true}\n              padding={{ title: true }}\n            >\n              <div className=\"px-6\">\n                <div className=\"my-2 text-base text-gray-700 sm:text-lg\">\n                  <div className=\"flex flex-col\">\n                    <label>Title</label>\n                    <input\n                      type=\"text\"\n                      className={`text-left input-white w-20 inline-block ${\n                        this.state.formError &&\n                        this.state.formError.element === \"report_title\"\n                          ? \"border-red-500\"\n                          : \"border-gray-500\"\n                      } border-2`}\n                      placeholder=\"Sub Category Title\"\n                      value={this.state.reportTitle}\n                      onChange={(e) => {\n                        this.setState({\n                          formError: null,\n                          reportTitle: e.target.value,\n                        });\n                      }}\n                      disabled={this.state.loading}\n                    />\n                    {this.state.formError &&\n                      this.state.formError.element === \"report_title\" && (\n                        <span className=\"text-red-500\">\n                          {this.state.formError.msg}\n                        </span>\n                      )}\n                  </div>\n                  <div className=\"flex flex-col mt-2\">\n                    <label>Report content</label>\n                    <div className=\"grid grid-cols-2 md:grid-cols-3 items-center gap-2 mt-2\">\n                      {this.state.reportContent.map((item, index) => (\n                        <div\n                          key={index}\n                          className={`flex items-center gap-1 ${\n                            this.isChangeAllowed(item.key)\n                              ? \"cursor-pointer\"\n                              : \"cursor-not-allowed\"\n                          }`}\n                          onClick={() =>\n                            this.isChangeAllowed(item.key) &&\n                            this.updateReportContent(item.key)\n                          }\n                          title={\n                            !this.isChangeAllowed(item.key)\n                              ? \"Required for every report!\"\n                              : \"\"\n                          }\n                        >\n                          {item.status ? (\n                            <MdCheckBox className=\"w-6 h-6 text-blue-700\" />\n                          ) : (\n                            <MdCheckBoxOutlineBlank className=\"w-6 h-6\" />\n                          )}\n                          <span>{item.title}</span>\n                        </div>\n                      ))}\n                    </div>\n                    {this.state.formError &&\n                      this.state.formError.element === \"report_content\" && (\n                        <span className=\"text-red-500\">\n                          {this.state.formError.msg}\n                        </span>\n                      )}\n                  </div>\n                </div>\n                <div className=\"flex justify-between mb-2 mt-4\">\n                  <div\n                    className={`flex items-center gap-1 cursor-pointer`}\n                    onClick={() =>\n                      this.resetReportContent(this.state.selectAll)\n                    }\n                  >\n                    {this.state.selectAll ? (\n                      <MdCheckBox className=\"w-6 h-6 text-blue-700\" />\n                    ) : (\n                      <MdCheckBoxOutlineBlank className=\"w-6 h-6\" />\n                    )}\n                    <span>Select all</span>\n                  </div>\n\n                  {this.state.applicationsToPrint && !this.state.loading && (\n                    <ExportToExcel\n                      fileData={this.state.applicationsToPrint}\n                      fileName={this.state.reportTitle}\n                      btnName=\"Generate\"\n                    />\n                  )}\n                </div>\n              </div>\n            </Modal>\n          )}\n        {/* END GENERATE DYNAMIC REPORT CONTENT MODAL */}\n      </React.Fragment>\n    );\n  }\n}\n\nconst mapStateToProps = ({\n  auth,\n  positions,\n  sessionPlan,\n  schoolLevels,\n}: StoreState): {\n  auth: Auth;\n  positions: positionsStoreInterface;\n  sessionPlan: SessionPlanReducerInterface;\n  schoolLevels: schoolLevelsStoreInterface;\n} => {\n  return {\n    auth: auth,\n    positions: positions,\n    sessionPlan,\n    schoolLevels: schoolLevels,\n  };\n};\n\nexport const Applications = connect(mapStateToProps, {\n  GetAllSessionPlans,\n  loadAllPositions,\n  setSelectedPosition,\n  loadEducationCategories,\n  PushPopupAlert,\n})(_Applications);\n"],"sourceRoot":""}
{"version":3,"sources":["interfaces/question.ts","interfaces/candidatesInterfaces.ts","interfaces/events.ts","interfaces/position.ts","utils/question_bank.ts","containers/QuestionBank/QuestionsList/QuestionsList.tsx"],"names":["questionTypeElementsType","QuestionLanguage","questionTypeElements","key","SingleMultiple","value","MultipleChoice","CalculatedMultipleChoice","TrueFalse","Matching","Numeric","SimpleCalculate","ShortAnswer","QuestionLanguages","Eng","Fr","Kiny","DocumentStatus","Events","ExamEvents","ExamEventTypes","validateDocCategory","requirement","userDocuments","undefined","find","item","category_id","category","user_detail_category_id","validateDocSubcategory","result","position_requirement","length","i","filterData","category_subcategory_data","category_subcategory_Data_id","_id","required","push","category_subcat_id","user_detail_subcategory_id","subcategory","console","log","returnValidatePosition","requirements","documents","status","getQuestionType","question_types","type_id","type","check","itm","id","check_type","element","_QuestionsList","props","setLoading","setState","loading","componentDidMount","questionTypes","loadQuestionTypes","questionBank","questions","loadQuestionBank","state","searchQuestionInput","className","to","placeholder","this","colSpan","map","question","title","description","marks","onClick","alert","Component","QuestionsList","connect","auth","course","schoolLevels","loadCourses","setSelectedCourse","loadSchoolLevels","loadEducationCategories","setSelectedEducationCategory","setSelectedSchoolLevel"],"mappings":"+KAcO,IAAKA,EAZZ,sG,SAYYA,K,iCAAAA,E,gCAAAA,E,kDAAAA,E,0BAAAA,E,oBAAAA,E,oBAAAA,E,mCAAAA,E,4BAAAA,M,KAWL,IAkDFC,EAlDQC,EAA4E,CACvF,CACEC,IAAKH,EAAyBI,eAC9BC,MAAO,mCAET,CACEF,IAAKH,EAAyBM,eAC9BD,MAAO,4BAET,CACEF,IAAKH,EAAyBO,yBAC9BF,MAAO,uCAET,CACEF,IAAKH,EAAyBQ,UAC9BH,MAAO,yBAET,CACEF,IAAKH,EAAyBS,SAC9BJ,MAAO,qBAET,CACEF,IAAKH,EAAyBU,QAC9BL,MAAO,oBAET,CACEF,IAAKH,EAAyBW,gBAC9BN,MAAO,+BAET,CACEF,IAAKH,EAAyBY,YAC9BP,MAAO,2B,SAmBNJ,K,UAAAA,E,QAAAA,E,aAAAA,M,KAQE,IAAMY,EAAgE,CAC3E,CAAEV,IAAKF,EAAiBa,IAAKT,MAAO,WACpC,CAAEF,IAAKF,EAAiBc,GAAIV,MAAO,UACnC,CAAEF,IAAKF,EAAiBe,KAAMX,MAAO,U,wPC6E3BY,ECnKAC,EAMAC,EAmCAC,EC8BCC,EAAsB,SACjCC,EACAC,GACI,IAAD,EACH,YAIqBC,KAHnB,UAAAD,EAAcE,MACZ,SAACC,GAAD,OACEA,EAAKC,cAAgBL,EAAYM,SAASC,kCAF9C,eAGGF,aAEIL,EAAYM,SAASC,wBAErB,MAyBEC,EAAyB,SACpCR,EACAC,GAEA,IAAIQ,EAIE,GACN,GAAIT,EAAYU,qBAAqBC,OAAS,EAAG,CAAC,IAAD,WACtCC,GADsC,MAEzCC,EAAU,UAAGZ,EAAcE,MAC7B,SAACC,GAAD,OACEA,EAAKU,2BACLV,EAAKU,0BAA0BC,+BAC7Bf,EAAYU,qBAAqBE,GAAGI,cAJ5B,aAAG,EAKdF,+BAEeZ,IAAfW,GAA2C,OAAfA,IACoB,IAAjDb,EAAYU,qBAAqBE,GAAGK,UAEpCR,EAAOS,KAAK,CACVC,mBAAoBnB,EAAYU,qBAAqBE,GAAGI,IACxDX,YAAaL,EAAYM,SAASC,wBAClCa,2BACEpB,EAAYqB,YAAYD,8BAfhC,IAAK,IAAIR,KAAKZ,EAAYU,qBAAuB,EAAxCE,GAqBX,OADAU,QAAQC,IAAI,aAAcd,GACnBA,GAGIe,EAAyB,SACpCC,EACAC,GAEA,IAAIC,GAAS,EACb,IAAK,IAAIf,KAAKa,EACwC,IAAhDA,EAAab,GAAGF,qBAAqBC,OAEjB,OAApBc,EAAab,IACC,OAAdc,GACoD,OAApD3B,EAAoB0B,EAAab,GAAIc,SACexB,IAApDH,EAAoB0B,EAAab,GAAIc,KAErCC,GAAS,GAGuD,IAA9DnB,EAAuBiB,EAAab,GAAIc,GAAWf,SACrDgB,GAAS,GAIf,OAAOA,G,iBFAGhC,K,kBAAAA,E,oBAAAA,E,qBAAAA,M,cCnKAC,K,gCAAAA,E,sCAAAA,E,uBAAAA,M,cAMAC,K,sCAAAA,E,sCAAAA,E,oCAAAA,E,oCAAAA,E,sCAAAA,E,sCAAAA,E,sDAAAA,E,sDAAAA,E,8CAAAA,E,8CAAAA,E,oDAAAA,E,oDAAAA,E,4DAAAA,E,4DAAAA,E,oDAAAA,E,oDAAAA,E,oDAAAA,E,oDAAAA,E,kDAAAA,E,kDAAAA,E,gDAAAA,E,iDAAAA,M,cAmCAC,K,4BAAAA,E,wCAAAA,M,uCEzCZ,+CAEa8B,EAAkB,SAACC,EAAuCC,GACrE,IAAIC,EAAwC,KAC5C,GAAuB,OAAnBF,EAAyB,CAC3B,IAAIG,EAAQH,EAAe1B,MAAK,SAAA8B,GAAG,OAAIA,EAAIC,KAAOJ,KAClD,QAAc5B,IAAV8B,EAAqB,CACvB,IAAIG,EAAavD,IAAqBuB,MAAK,SAAA8B,GAAG,OAAID,GAASC,EAAIpD,MAAQmD,EAAMI,gBAC1DlC,IAAfiC,IACFJ,EAAOI,EAAWtD,MAIxB,OAAOkD,I,yLCkCHM,E,kDACJ,WAAYC,GAA4B,IAAD,8BACvC,cAAMA,IAQNC,WAAa,SAACZ,GACZ,EAAKa,SAAS,CAAEC,QAASd,KAVY,EAavCe,kBAAoB,WAC6B,OAA3C,EAAKJ,MAAMK,cAAcA,eAA4E,IAAlD,EAAKL,MAAMK,cAAcA,cAAchC,QAC5F,EAAK2B,MAAMM,kBAAkB,EAAKL,YAEM,OAAtC,EAAKD,MAAMO,aAAaC,WAAmE,IAA7C,EAAKR,MAAMO,aAAaC,UAAUnC,QAClF,EAAK2B,MAAMS,iBAAiB,EAAKR,aAfrC,EAAKS,MAAQ,CACTP,SAAS,EACTQ,oBAAqB,IALc,E,0CAsBvC,WAAU,IAAD,OACP,OACE,sBAAKC,UAAU,GAAf,UACE,sBAAKA,UAAU,sDAAf,UACE,sBAAKA,UAAU,6CAAf,UACE,sBAAKA,UAAU,qBAAf,UACE,sBAAMA,UAAU,mCAAhB,2BACA,sBAAMA,UAAU,kCAAhB,0DAEF,sBAAKA,UAAU,mCAAf,UACE,cAAC,IAAD,CAAMC,GAAG,uBAAuBD,UAAU,kHAA1C,2BAGA,qBAAKA,UAAU,8FAAf,iCAGJ,uBAAOnB,KAAK,OAAOmB,UAAU,kDAAkDE,YAAY,+CAE7F,sBAAKF,UAAU,WAAf,UACE,sBAAKA,UAAU,kDAAf,UACE,sBAAMA,UAAU,kCAAhB,+BACA,sBAAKA,UAAU,oEAAf,UAAoFG,KAAKf,MAAMO,aAAaC,WAAaO,KAAKf,MAAMO,aAAaC,UAAUnC,OAA3J,mBAEF,qBAAKuC,UAAU,gBAAf,SACE,qBAAKA,UAAU,wBAAf,SACE,wBAAOA,UAAU,oBAAjB,UACE,gCACE,qBAAIA,UAAU,gEAAd,UACE,oBAAIA,UAAU,mBAAd,eACA,oBAAIA,UAAU,MAAd,sBACA,0CACA,uCACA,4BAGJ,gCACyC,OAAtCG,KAAKf,MAAMO,aAAaC,UACzB,6BACE,oBAAIQ,QAAS,EAAb,SAAgB,cAAC,IAAD,QAE2B,IAA7CD,KAAKf,MAAMO,aAAaC,UAAUnC,OAClC,6BACE,oBAAI2C,QAAS,EAAb,SAAgB,sBAAMJ,UAAU,qCAAhB,yCAEyB,OAA3CG,KAAKf,MAAMK,cAAcA,eAA0BU,KAAKf,MAAMK,cAAcA,cAAchC,OAAS,GACnG0C,KAAKf,MAAMO,aAAaC,UAAUS,KAAI,SAACnD,EAAMQ,GAAP,OACpC,qBAAgBsC,UAAU,uCAA1B,UACE,oBAAIA,UAAU,mCAAd,SACE,qBAAKA,UAAU,yBAAf,SACE,uBAAMA,UAAU,+BAAhB,UAAgDtC,EAAI,GAAK,EAAGA,EAAI,SAGpE,6BACE,sBAAKsC,UAAU,0BAAf,UACE,sBAAMA,UAAU,gDAAhB,SACG9C,EAAKoD,SAAS,GAAGC,QAEpB,sBAAMP,UAAU,sCAAhB,SACG9C,EAAKoD,SAAS,GAAGE,mBAIxB,6BACE,qBAAKR,UAAU,gDAAf,SAC0E,OAAvEtB,YAAgB,EAAKU,MAAMK,cAAcA,cAAevC,EAAK2B,MAC9D,sBAAMmB,UAAU,kBAAhB,0BACA,sBAAMA,UAAU,gBAAhB,SAAiCtB,YAAgB,EAAKU,MAAMK,cAAcA,cAAevC,EAAK2B,YAGlG,6BACE,sBAAMmB,UAAU,wBAAhB,SAAyC9C,EAAKuD,UAEhD,6BACE,sBAAKT,UAAU,wBAAf,UACE,qBAAKU,QAAS,kBAAMC,MAAM,SAASX,UAAU,mGAA7C,SACE,0CAEF,qBAAKA,UAAU,uGAAf,SACE,0CAEF,qBAAKA,UAAU,oGAAf,SACE,mDAnCCtC,EAAI,yB,GArEJkD,aAoIhBC,EAAgBC,aAVL,SAAC,GAOvB,MAAO,CAAEC,KADsL,EAL/LA,KAMqBC,OAD0K,EAJ/LA,OAKqCC,aAD0J,EAH/LA,aAIiEtB,aAD8H,EAF/LA,aAG6FF,cADkG,EAD/LA,iBAKoD,CACpDyB,gBACAC,uBACAC,qBACAC,4BACAC,kCACAC,4BACA1B,qBACAH,uBAR2BoB,CAS1B3B","file":"static/js/12.abfc4743.chunk.js","sourcesContent":["import { course } from \"./course\";\n\n// Multiple question interface\nexport interface question_answer {\n  answer: string;\n  status: boolean;\n}\nexport interface psychometric_question {\n  question_id: string;\n  question_title: string;\n  question_description: string;\n  question_answers: question_answer[]\n}\n\nexport enum questionTypeElementsType {\n  SingleMultiple = \"Single Multiple\",\n  MultipleChoice = \"MultipleChoice\",\n  CalculatedMultipleChoice = \"Calculated multichoice\",\n  TrueFalse = \"true or false\",\n  Matching = \"Matching\",\n  Numeric = \"Numerical\",\n  SimpleCalculate = \"Simple Calculate\",\n  ShortAnswer = \"Short Answer\",\n}\n\nexport const questionTypeElements: { key: questionTypeElementsType; value: string; }[] = [\n  {\n    key: questionTypeElementsType.SingleMultiple,\n    value: \"Single Multiple choice Question\",\n  },\n  {\n    key: questionTypeElementsType.MultipleChoice,\n    value: \"Multiple choice Question\",\n  },\n  {\n    key: questionTypeElementsType.CalculatedMultipleChoice,\n    value: \"Calculated Multiple choice Question\",\n  },\n  {\n    key: questionTypeElementsType.TrueFalse,\n    value: \"True & False Question\",\n  },\n  {\n    key: questionTypeElementsType.Matching,\n    value: \"Matching Question\",\n  },\n  {\n    key: questionTypeElementsType.Numeric,\n    value: \"Numeric Question\",\n  },\n  {\n    key: questionTypeElementsType.SimpleCalculate,\n    value: \"Simple calculation Question\",\n  },\n  {\n    key: questionTypeElementsType.ShortAnswer,\n    value: \"Short answer Question\",\n  },\n];\n\nexport interface questionType {\n  status: number;\n  title: string;\n  element: questionTypeElementsType;\n  description: string;\n  createdAt?: string;\n  updatedAt?: string;\n  id?: string;\n}\n\nexport interface uploadQuestions {\n  course: course;\n  questionsFile: File[];\n}\n\nenum QuestionLanguage {\n  Eng = \"Eng\",\n  Fr = \"Fr\",\n  Kiny = \"Kiny\",\n}\n\nexport interface LanguageInterface { key: QuestionLanguage; value: string }\n\nexport const QuestionLanguages: { key: QuestionLanguage; value: string }[] = [\n  { key: QuestionLanguage.Eng, value: \"English\" },\n  { key: QuestionLanguage.Fr, value: \"French\" },\n  { key: QuestionLanguage.Kiny, value: \"Kiny\" },\n]\n\nexport interface uploadQuestionsResponse {\n  insertedCount: number;\n  insertedData: QuestionInterface[]\n  insertedIds: string[];\n  result: {ok: number, n: number}\n}\n\nexport interface QuestionItemInterface {\n  description: string;\n  language: QuestionLanguage;\n  status: number;\n  title: string;\n  answer: QuestionAnswerInterface[]\n}\n\nexport interface QuestionInterface {\n  id: string;\n  course: string; // Course ID\n  question: QuestionItemInterface[];\n  type: questionTypeElementsType | \"Invalid\";\n  chapters: string[] // CourseChapter: ID\n  customNumber: number;\n  marks: number;\n  answer: QuestionAnswerInterface | QuestionAnswerInterface[];\n}\n\n// export interface QuestionAnswerInterface {\n//   value: string | string[] | number[];\n//   status: boolean | string | string[] | number[];\n// }\nexport interface QuestionAnswerInterface {\n  id: string;\n  value: string;\n  status: boolean;\n}","export interface CandidateInterface {\n  n_id: string;\n  fname: string;\n  lname: string;\n  date_of_birth: string;\n  district: string;\n  email: string;\n  phone_number: string;\n  stopped: boolean;\n  user_id: string;\n  // more details\n  application_number: string;\n  cell: string;\n  civil_status: string;\n  country_of_birth: string;\n  date_of_expiry: string;\n  date_of_issue: string;\n  document_type: string;\n  father_names: string;\n  issue_number: string;\n  mother_names: string;\n  photo: string;\n  place_of_birth: string;\n  place_of_issue: string;\n  province: string;\n  sector: string;\n  sex: string;\n  spouse?: any;\n  status: string;\n  village: string;\n  village_id: string;\n  // temporary details\n  active?: boolean;\n  ref?: any;\n  muted?: boolean;\n  room_id?: string;\n  video?: boolean;\n  stream?: any;\n  peer?: any;\n  peer_id?: any;\n  type?: any;\n  id?: string;\n}\n\nexport interface CandidateProctoringInterface {\n  fname: string;\n  lname: string;\n  email: string;\n  stopped: boolean;\n  user_id: string;\n  active: boolean;\n  // others\n  ref?: any;\n  muted?: boolean;\n  peer?: any;\n  peer_id?: any;\n}\n\nexport interface DocumentsCategories {\n  description: string;\n  fields: string[];\n  title: string;\n  user_detail_category_id: string;\n}\n\nexport interface DocumentsCategoriesWithCount {\n  description: string;\n  fields: string[];\n  title: string;\n  user_detail_category_id: string;\n  count: number;\n}\n\nexport interface DocumentSubCategories {\n  category_id: string;\n  description: string;\n  title: string;\n  user_detail_subcategory_id: string;\n}\n// export interface CategorySubcategoryData {\n//   category_id: string;\n//   category_subcategory_id: string;\n//   description: string;\n//   others: {\n//     key: string;\n//     value: string;\n//   }[];\n//   subcategory_id: string;\n//   title: string;\n// }\n\nexport interface CategorySubcategoryData {\n  category_id: string;\n  subcategory_id: string;\n  title: string;\n  description: string;\n  others: {\n    key: string;\n    value: string;\n  }[];\n  category_subcategory_Data_id: string;\n}\n\nexport interface DocumentUser_API {\n  category_id: string;\n  company: string;\n  description: string;\n  email: string;\n  end_year: string;\n  files: string;\n  names: string;\n  phone_number: string;\n  school: string;\n  school_id: string;\n  start_year: string;\n  sub_category_id: string;\n  title: string;\n  year: string;\n  validation_status: string;\n  doc_id: string;\n  category_subcategory_data: string;\n}\n\nexport interface DocumentUser {\n  category_id: string;\n  company: string;\n  description: string;\n  email: string;\n  end_year: string;\n  files: string;\n  names: string;\n  phone_number: string;\n  school: {\n    school_name: string;\n    _id: string;\n    status: boolean;\n    education_category_id?: {\n      education_category_title: string;\n      _id: string;\n    };\n    district_id?: {\n      district_name: string;\n      _id: string;\n    };\n  } | null;\n  school_id: string;\n  start_year: string;\n  sub_category_id: string;\n  title: string;\n  year: string;\n  validation_status: string;\n  doc_id: string;\n  category_subcategory_data: CategorySubcategoryData | null;\n}\n\nexport interface SchoolInterface {\n  district_id: string;\n  education_category_id: string;\n  school_name: string;\n  status: boolean;\n  _id: string;\n}\n\nexport enum DocumentStatus {\n  Waiting = \"waiting\",\n  Rejected = \"rejected\",\n  Approved = \"approved\",\n}\n","export enum Events {\n  USER_CONNECTED = \"user-connected\",\n  USER_DISCONNECTED = \"user-disconnected\",\n  JOIN_ROOM = \"join-room\",\n}\n\nexport enum ExamEvents {\n  START_EXAM_CLIENT = \"START_EXAM_CLIENT\",\n  START_EXAM_SERVER = \"START_EXAM_SERVER\",\n\n  STOP_EXAM_CLIENT = \"STOP_EXAM_CLIENT\",\n  STOP_EXAM_SERVER = \"STOP_EXAM_SERVER\",\n\n  CAND_EVENT_CLIENT = \"CAND_EVENT_CLIENT\",\n  CAND_EVENT_SERVER = \"CAND_EVENT_SERVER\",\n\n  CAND_CONTINUE_EXAM_SERVER = \"CAND_CONTINUE_EXAM_SERVER\",\n  CAND_CONTINUE_EXAM_CLIENT = \"CAND_CONTINUE_EXAM_CLIENT\",\n\n  CAND_STOP_EXAM_CLIENT = \"CAND_STOP_EXAM_CLIENT\",\n  CAND_STOP_EXAM_SERVER = \"CAND_STOP_EXAM_SERVER\",\n\n  CAND_RESTART_EXAM_CLIENT = \"CAND_RESTART_EXAM_CLIENT\",\n  CAND_RESTART_EXAM_SERVER = \"CAND_RESTART_EXAM_SERVER\",\n\n  ALL_CAND_RESTART_EXAM_CLIENT = \"ALL_CAND_RESTART_EXAM_CLIENT\",\n  ALL_CAND_RESTART_EXAM_SERVER = \"ALL_CAND_RESTART_EXAM_SERVER\",\n\n  CAND_WARNING_EXAM_CLIENT = \"CAND_WARNING_EXAM_CLIENT\",\n  CAND_WARNING_EXAM_SERVER = \"CAND_WARNING_EXAM_SERVER\",\n\n  CAND_BRODCAST_MSG_CLIENT = \"CAND_BRODCAST_MSG_CLIENT\",\n  CAND_BRODCAST_MSG_SERVER = \"CAND_BRODCAST_MSG_SERVER\",\n\n  CAND_PRIVATE_MSG_CLIENT = \"CAND_PRIVATE_MSG_CLIENT\",\n  CAND_PRIVATE_MSG_SERVER = \"CAND_PRIVATE_MSG_SERVER\",\n\n  CAND_EXAM_EVENT_CLIENT = \"CAND_EXAM_EVENT_CLIENT\",\n  CAND_EXAM_EVENT_SERVER = \"CAND_EXAM_EVENT_SERVER\",\n}\n\nexport enum ExamEventTypes {\n  PASTE_A_TEXT = \"PASTE A TEXT\",\n  MOVE_MOUSE_OUT = \"MOVE MOUSE OUT WINDOW\",\n}\n\nexport interface EventInterface {\n  event_id: string;\n  user_id: string;\n  event_type: string;\n  description: string;\n  room_id: string;\n  done_by?: string;\n  time: string;\n}\n","import { DocumentUser } from \".\";\n\nexport interface PositionAPI {\n  courses: {\n    course_name: string;\n    course_code: string;\n    description: string;\n    school_levels: string[];\n    course_id: string;\n  }[];\n  position_title: string;\n  description: string;\n  school_level_id: {\n    school_level_name: string;\n    description: string;\n    education_institute: string[];\n    courses: [];\n    school_level_id: string;\n  };\n  education_institute_id: {\n    education_category_title: string;\n    school_levels: [];\n    description: string;\n    education_institute_id: string;\n  };\n  requirements: PositionRequirements[];\n  isDeleted: boolean;\n  position_id: string;\n}\n\nexport interface PositionRequirementsOld {\n  user_detail_category_id: string;\n  title: string;\n  description: string;\n  fields: string[];\n  user_required_docs: {\n    category_id: string;\n    description: string;\n    title: string;\n    user_detail_subcategory_id: string;\n  }[];\n}\n\nexport interface PositionRequirements {\n  category: {\n    description: string;\n    fields: string[];\n    title: string;\n    user_detail_category_id: string;\n  };\n  subcategory: {\n    category_id: string;\n    description: string;\n    title: string;\n    user_detail_subcategory_id: string;\n  };\n  position_requirement: PositionSubcategoryData[];\n  required: boolean;\n}\n\nexport interface PositionSubcategoryData {\n  category_id: string;\n  subcategory_id: string;\n  description: string;\n  required: boolean;\n  title: string;\n  others: { key: string; value: string }[];\n  _id: string;\n  __v?: string;\n}\n\nexport const validateDocCategory = (\n  requirement: PositionRequirements,\n  userDocuments: DocumentUser[]\n) => {\n  if (\n    userDocuments.find(\n      (item) =>\n        item.category_id === requirement.category.user_detail_category_id\n    )?.category_id === undefined\n  ) {\n    return requirement.category.user_detail_category_id;\n  } else {\n    return null;\n  }\n};\n\n// If true, should return null\nexport const validateDocSubcategoryData = (\n  requirement: PositionSubcategoryData,\n  UserData: DocumentUser[]\n): string | null => {\n  let result: string | null = null;\n  // for (let requirement of requirements) {\n  if (\n    UserData.find(\n      (itm) =>\n        itm.category_subcategory_data &&\n        itm.category_subcategory_data.category_subcategory_Data_id ===\n          requirement._id\n    ) === undefined\n  ) {\n    result = requirement.subcategory_id;\n  }\n  // }\n  return result;\n};\n\nexport const validateDocSubcategory = (\n  requirement: PositionRequirements,\n  userDocuments: DocumentUser[]\n) => {\n  let result: {\n    category_subcat_id: string | null;\n    category_id: string | null;\n    user_detail_subcategory_id: string | null;\n  }[] = [];\n  if (requirement.position_requirement.length > 0) {\n    for (let i in requirement.position_requirement) {\n      let filterData = userDocuments.find(\n        (item) =>\n          item.category_subcategory_data &&\n          item.category_subcategory_data.category_subcategory_Data_id ===\n            requirement.position_requirement[i]._id\n      )?.category_subcategory_data;\n      if (\n        (filterData === undefined || filterData === null) &&\n        requirement.position_requirement[i].required === true\n      ) {\n        result.push({\n          category_subcat_id: requirement.position_requirement[i]._id,\n          category_id: requirement.category.user_detail_category_id,\n          user_detail_subcategory_id:\n            requirement.subcategory.user_detail_subcategory_id,\n        });\n      }\n    }\n  }\n  console.log(\"Returned: \", result);\n  return result;\n};\n\nexport const returnValidatePosition = (\n  requirements: PositionRequirements[],\n  documents: DocumentUser[]\n) => {\n  let status = true;\n  for (let i in requirements) {\n    if (requirements[i].position_requirement.length === 0) {\n      if (\n        requirements[i] !== null &&\n        documents !== null &&\n        validateDocCategory(requirements[i], documents) !== null &&\n        validateDocCategory(requirements[i], documents) !== undefined\n      ) {\n        status = false;\n      }\n    } else {\n      if (validateDocSubcategory(requirements[i], documents).length !== 0) {\n        status = false;\n      }\n    }\n  }\n  return status;\n};\n","import { questionType, questionTypeElements, questionTypeElementsType } from \"../interfaces/question\";\n\nexport const getQuestionType = (question_types: questionType[] | null, type_id: string) => {\n  let type: questionTypeElementsType | null = null;\n  if (question_types !== null) {\n    let check = question_types.find(itm => itm.id === type_id);\n    if (check !== undefined) {\n      let check_type = questionTypeElements.find(itm => check && itm.key === check.element);\n      if (check_type !== undefined) {\n        type = check_type.key\n      }\n    }\n  }\n  return type;\n}","import React, { Component } from 'react'\nimport { Link } from 'react-router-dom'\nimport { connect } from \"react-redux\";\nimport {\n  Auth, \n  courseStoreInterface,\n  loadCourses,\n  schoolLevelsStoreInterface,\n  loadSchoolLevels,\n  loadEducationCategories,\n  setSelectedEducationCategory,\n  setSelectedSchoolLevel,\n  QuestionBankStoreInterface,\n  questionTypesStoreInterface,\n  setSelectedCourse,\n  loadQuestionBank,\n  loadQuestionTypes,\n} from \"../../../actions\";\nimport { StoreState } from \"../../../reducers\";\nimport * as Interfaces from \"../../../interfaces/index\";\nimport searchData from \"../../../utils/search\";\nimport { course } from '../../../interfaces/index';\nimport Loading from '../../../components/Loading/Loading';\nimport { getQuestionType } from '../../../utils/question_bank';\n\ninterface QuestionsListProps {\n  auth: Auth;\n  course: courseStoreInterface;\n  schoolLevels: schoolLevelsStoreInterface;\n  questionBank: QuestionBankStoreInterface;\n  loadEducationCategories: (callback: (loading: boolean) => void) => void;\n  loadSchoolLevels: (callback: (loading: boolean) => void) => void;\n  setSelectedEducationCategory: (\n    education_category: Interfaces.education_category\n  ) => void;\n  setSelectedSchoolLevel: (education_category: Interfaces.school_level) => void;\n  loadCourses: (callback: (loading: boolean) => void) => void;\n  setSelectedCourse: (course: course | null) => void;\n  loadQuestionBank: (callback: (loading: boolean) => void) => void;\n  questionTypes: questionTypesStoreInterface;\n  loadQuestionTypes: (callback: (loading: boolean) => void) => void;\n}\ninterface QuestionsListState {\n  loading: boolean;\n  searchQuestionInput: string;\n}\n\nclass _QuestionsList extends Component<QuestionsListProps, QuestionsListState> {\n  constructor(props: QuestionsListProps) {\n\t\tsuper(props);\n\n\t\tthis.state = {\n      loading: false,\n      searchQuestionInput: \"\"\n\t\t};\n\t}\n\n  setLoading = (status: boolean) => {\n    this.setState({ loading: status });\n  }\n\n  componentDidMount = () => {\n    if (this.props.questionTypes.questionTypes === null || this.props.questionTypes.questionTypes.length === 0) {\n      this.props.loadQuestionTypes(this.setLoading);\n    }\n    if (this.props.questionBank.questions === null || this.props.questionBank.questions.length === 0) {\n      this.props.loadQuestionBank(this.setLoading);\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"\">\n        <div className=\"mt-3 rounded px-2 flex flex-col gap-3 bg-white py-2\">\n          <div className=\"flex flex-row items center justify-between\">\n            <div className=\"flex flex-col px-1\">\n              <span className=\"text-gray-600 text-3xl font-bold\">Question Bank</span>\n              <span className=\"text-blue-600 text-lg font-bold\">Course: 1212323-Mathematics for engineers</span>\n            </div>\n            <div className=\"flex flex-row items-center gap-2\">\n              <Link to=\"/method-add-question\" className=\"btn bg-white hover:bg-blue-100 border border-blue-600 text-blue-600 h-max flex items-center justify-center h-10\">\n                Add questions\n              </Link>\n              <div className=\"btn bg-blue-50 hover:bg-blue-100  text-blue-600 h-max flex items-center justify-center h-10\">Change course</div>\n            </div>\n          </div>\n          <input type=\"text\" className=\"input-white border h-10 text-sm border-gray-400\" placeholder=\"Search question by title or description\" />\n        </div>\n        <div className=\"flex-col\">\n          <div className=\"flex my-2 flex-row justify-between items-center\">\n            <span className=\"text-xl font-bold text-blue-600\">List of questions</span>\n            <div className=\"underline font-bold text-blue-700 bg-white rounded-full px-3 py-1\">{this.props.questionBank.questions && this.props.questionBank.questions.length} questions</div>\n          </div>\n          <div className=\"flex flex-col\">\n            <div className=\"bg-white flex rounded\">\n              <table className=\"table-auto w-full\">\n                <thead>\n                  <tr className=\"text-left bg-blue-50 border-b-2 border-blue-500 text-blue-600\">\n                    <th className=\"p-3 w-1/12 pl-10\">#</th>\n                    <th className=\"p-3\">Question</th>\n                    <th>Category</th>\n                    <th>Marks</th>\n                    <th></th>\n                  </tr>\n                </thead>\n                <tbody>\n                  {this.props.questionBank.questions === null ?\n                  <tr>\n                    <td colSpan={5}><Loading /></td>\n                  </tr> :\n                  this.props.questionBank.questions.length === 0 ? \n                  <tr>\n                    <td colSpan={5}><span className=\"font-bold text-yellow-900 text-2xl\">No questions available!</span></td>\n                  </tr>:\n                  this.props.questionTypes.questionTypes !== null && this.props.questionTypes.questionTypes.length > 0 &&\n                  this.props.questionBank.questions.map((item, i) => (\n                    <tr key={i + 1} className=\"shadow-sm cursor-pointer border-none\">\n                      <td className=\"flex items-center justify-center\">\n                        <div className=\"py-1 rounded-full my-3\">\n                          <span className=\"text-xl italic text-blue-600\">{i < 9 && 0}{i + 1}</span>\n                        </div>\n                      </td>\n                      <td>\n                        <div className=\"py-2 px-3 flex flex-col\">\n                          <span className=\"text-sm text-gray-600 font-bold w-96 truncate\">\n                            {item.question[0].title}\n                          </span>\n                          <span className=\"text-xs text-gray-500 w-96 truncate\">\n                            {item.question[0].description}\n                          </span>\n                        </div>\n                      </td>\n                      <td>\n                        <div className=\"text-xs font-bold text-gray-700 w-80 truncate\">\n                          {getQuestionType(this.props.questionTypes.questionTypes, item.type) === null ? \n                          <span className=\"text-yellow-700\">Invalid type</span> : \n                          <span className=\"text-blue-600\">{getQuestionType(this.props.questionTypes.questionTypes, item.type)}</span>}\n                        </div>\n                      </td>\n                      <td>\n                        <span className=\"text-xs text-gray-500\">{item.marks}</span>\n                      </td>\n                      <td>\n                        <div className=\"flex justify-end pr-1\">\n                          <div onClick={() => alert('View')} className=\"border border-gray-200 btn bg-gray-100 px-3 py-1 rounded text-gray-600 text-sm flex items-center\">\n                            <span>View</span>\n                          </div>\n                          <div className=\"border border-blue-200 btn bg-blue-50 px-3 py-1 rounded text-blue-600 text-sm flex items-center ml-1\">\n                            <span>Edit</span>\n                          </div>\n                          <div className=\"border border-red-200 btn px-3 py-1 rounded bg-red-50 text-red-600 text-sm flex items-center ml-1\">\n                            <span>Delete</span>\n                          </div>\n                        </div>\n                      </td>\n                    </tr>\n                  ))}\n                </tbody>\n              </table>\n            </div>\n              \n  \n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = ({\n  auth,\n  course,\n  schoolLevels,\n  questionBank,\n  questionTypes,\n}: StoreState): { auth: Auth; course: courseStoreInterface; schoolLevels: schoolLevelsStoreInterface; questionBank: QuestionBankStoreInterface; questionTypes: questionTypesStoreInterface; } => {\n  return { auth: auth, course: course, schoolLevels: schoolLevels, questionBank: questionBank, questionTypes: questionTypes };\n};\n\nexport const QuestionsList = connect(mapStateToProps, {\n  loadCourses,\n  setSelectedCourse,\n  loadSchoolLevels,\n  loadEducationCategories,\n  setSelectedEducationCategory,\n  setSelectedSchoolLevel,\n  loadQuestionBank,\n  loadQuestionTypes,\n})(_QuestionsList);\n"],"sourceRoot":""}
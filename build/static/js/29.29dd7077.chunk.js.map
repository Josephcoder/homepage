{"version":3,"sources":["containers/AdminDashboard/ChartComponents/HBarChart.tsx","containers/AdminDashboard/ChartGender.tsx","containers/AdminDashboard/ChartComponents/ApplicantsExam.tsx","containers/AdminDashboard/ChartComponents/ApplicationsGender.tsx","containers/AdminDashboard/ChartComponents/ApplicationsStatus.tsx","containers/AdminDashboard/ChartComponents/DistrictCites.tsx","containers/AdminDashboard/DashboardLabels.tsx","containers/AdminDashboard/DashBoardTitle.tsx","containers/AdminDashboard/index.tsx","shared/dataTest.tsx","actions/location.ts","components/Table/Table.tsx","actions/session.ts","actions/settings.ts","actions/users.ts","actions/schools.ts","containers/SessionSettings/NoSession.tsx","containers/AdminDashboard/ChartComponents/VBarChart.tsx","containers/UserManagement/UserList.tsx","containers/UserManagement/RoleList.tsx","containers/UserManagement/UserRole.tsx","shared/blank_profile.png","components/Courses/Courses.tsx","containers/UserManagement/UserAccess.tsx","containers/Locations/ViewDistricts.tsx","containers/Locations/ViewProvince.tsx","containers/Locations/ViewSectors.tsx","containers/Locations/Locations.tsx","containers/Application/ApplicationPositions/SchoolLevelsFilter/SchoolLevelsItem.tsx","containers/Application/ApplicationPositions/SchoolLevelsFilter/SchoolLevelsFilter.tsx","containers/AdminDashboard/ChartComponents/PieChart.tsx","containers/AdminDashboard/DashboardLabelItem.tsx"],"names":["defaultRangeGroup","min","max","defaultLabels","HBarChart","props","rangeGroup","labels","useEffect","ageFrom","ageTo","action","forEach","element","console","log","condition","nocondition","setAction","getApplicantsByAges","ageRangesMale","ageRangesFemale","male","getAllApplicantByInsitute","data","filter","item","userInfo","user_info","sex","female","index","length","calculate_age","date_of_birth","options","plotOptions","bar","borderRadius","horizontal","dataLabels","enabled","xaxis","categories","yaxis","title","text","tooltip","y","formatter","val","chart","stacked","colors","genderColor","Fragment","series","name","type","chartType","width","height","React","memo","ChartGender","rangeConfig","from","to","useState","toString","setAgeFrom","setAgeTo","rangeChanged","setRangeChanged","handleAgeRange","thisRange","TYPE","Number","ageRange","start","end","result","push","FC_FilterByAge","userData","ids","className","PieChart","legend","position","horizontalAlign","fontSize","itemMargin","vertical","pie","donut","show","fontFamily","color","offsetY","value","undefined","total","label","w","globals","seriesTotals","reduce","a","b","onChange","e","target","map","ApplicantsExam","exam","openModal","setOpenModal","thisExam","setThisExam","FC_ChartExam","generalResult","makeHorizontal","dashboard","applications","dataMale","dataFemale","dataExams","dataApplication","districtKey","FC_DistinctDistrict","distinctDistricts","Object","prototype","hasOwnProperty","call","appKey","j","exams","FC_CentersInDistrict","district_id","includes","center_id","course_id","_id","district","district_name","FC_Count","categoriesLabel","distinctDistrictNames","yaxisText","tooltipText","isHorizontalAllowed","onClick","loading","loadingApplications","loadingEducation","course_name","disabled","VBarChart","FC_LoadSelected","labelIndex","seriesIndex","selectedLabels","selectedLabelsIndex","gender","defaultBar","columnWidth","endingShape","chartHeight","Modal","backDrop","theme","Themes","default","close","displayClose","backDropClose","widthSizeClass","ModalSize","large","padding","body","footer","Courses","selected_course_id","setSelectedCourse","selectedCourse","ApplicationsGender","state","thisSeries","this","positionNames","Component","ApplicationsStatus","statusApplications","FC_ApplicationsByInsitutes","ApplicationStates","Initiated","Incomplete","Rejected","Pending","Shortlisted","districtCapacityColor","DistrictCites","center","centerCapacity","setCenterCapacity","districtName","setDistrictName","districtCapacity","capacity","FC_CenterByDistrictId","occupied","datCapacity","dataCapacity","dataOccupied","centersIdInDistrict","centersNamesInDistrict","districtData","LocationsInArray","locations","d","key","center_name","roomLevel","key_2","distinctDistrictIds","FC_OpenCenter","extraLarge","DashboardLabels","DashboardLabelItem","icon","FaUsers","iconColor","count","applicants","IoDocumentTextSharp","positions","countOver","allPositions","MdFolderSpecial","connect","GetApplicationPerPeriod","PushPopupAlert","reportTitle","education_categories","allEducation","thisEducation","setThisEducation","education","education_institute_id","education_category_title","application_sessions","thisPeriod","setThisPeriod","setLoadingApplications","status","msg","errorToText","PopupAlertTheme","danger","session","session_plan_id","session_plan_name","Index","setLoading","setState","setLoadingEducation","componentDidMount","loadEducationCategories","systemPositions","getPositions","GetAllSessionPlans","active_period","periodId","find","is_active","getAllRoom","error","course","courses","loadCourses","getPositionsByInstitute","position_id","getApplicationsByInsitutes","uids","application_status","user_id","i","flags","names","output","l","allcapacity","centerLevel","room_name","all","FC_SelectedPositions","selectedPosition","neededPosition","neededPositionIds","dataNames","defaultApplications","isPublished","isDeleted","position_title","thisApplicationFound","ApplicationPeriod","FC_GetUserByGender","maleArray","femaleArray","positionKey","apps","app","genders","NoSession","shortlisted","rejected","FC_GetPositionsByInstitute","AdminDashboard","auth","schoolLevels","system_settings","sessionPlan","roomLocation","allSessionPlans","isEmptyOrSpaces","str","match","getRoleById","roles","roleId","role","system_user_role_id","getInstituteById","institutes","instituteId","getPositionById","toTwoDigit","dec","Math","floor","slice","substr","toAnyDigit","zeroes","Array","join","capitalizeFirstLetter","charAt","toUpperCase","callback","dispatch","axios","get","API","APPLICATION","res","ActionTypes","GET_ALL_ROOM","payload","FC_CreateProvince","CREATE_PROVINCE","FC_UpdateProvince","UPDATE_PROVINCE","FC_DeleteProvince","DELETE_PROVINCE","FC_CreateDistrict","CREATE_DISTRICT","FC_UpdateDistrict","UPDATE_DISTRICT","FC_DeleteDistrict","DELETE_DISTRICT","FC_CreateSector","CREATE_SECTOR","FC_UpdateSector","UPDATE_SECTOR","FC_DeleteSector","DELETE_SECTOR","FC_CreateCenter","CREATE_CENTER","FC_UpdateCenter","UPDATE_CENTER","FC_DeleteCenter","DELETE_CENTER","FC_CreateRoom","CREATE_ROOM","FC_UpdateRoom","UPDATE_ROOM","FC_DeleteRoom","delete_room","DELETE_ROOM","FC_GetWaitingLocationList","GET_LOCATION_WAITING_LIST","Table","table","tr","tableId","characters","charactersLength","random","FC_makeID","totalItems","setTotalItems","totalPages","setTotalPages","currentPage","setCurrentPage","pages","setPages","pageSize","setPageSize","startIndex","setStartIndex","endIndex","setEndIndex","pagination","tablePagination","document","getElementById","getElementsByTagName","ceil","_pages","keys","style","display","tableSize","search","searchBG","placeholder","filterType","td","rows","cols","toLowerCase","columns","textContent","innerText","indexOf","filterTable","tableClass","rounded","id","hideColumns","thColor","column","alignText","isSortAllowed","switching","x","shouldSwitch","colIndex","dir","switchcount","innerHTML","parentNode","insertBefore","sortThisColumn","columnTitle","aria-label","page","pageIndex","GetPlansTypes","setAxiosToken","CLAIMING","GET_PLANS_TYPES","plan_types","setSelectedPlanType","thisType","SELECT_PLAN_TYPE","getActiveSessionPlan","GET_ACTIVE_SESSION_PLANS","session_plan","GET_ALL_SESSION_PLANS","session_data","createSessionPlan","CREATE_SESSION_PLAN","updateSessionPlan","UPDATE_SESSION_PLAN","sessionActivation","SESSION_ACTIVATION","deleteSessionPlan","DELETE_SESSION_PLAN","createAcademicSession","CREATE_ACADEMIC_SESSION","GetAllAcademicSession","PLACEMENT","GET_ALL_ACADEMIC_SESSION","updateAcademicSession","UPDATE_ACADEMIC_SESSION","academicSessionActivation","ACADEMIC_SESSION_ACTIVATION","deleteAcademicSession","DELETE_ACADEMIC_SESSION","getActiveAcademicSession","GET_ACTIVE_ACADEMIC_SESSION","getSystemSettings","AUTH","GET_SYSTEM_SETTINGS","code_error","disableSystemSetting","DISABLE_SYSTEM_SETTINGS","GetTaskAccess","response","task","permitted","GET_TASK_ACCESS","GET_POSTIONS","deletePosition","DELETE_POSITION","publishPosition","PUBLISH_POSITION","documentValidationStatus","userPageLimit","fetchUserAccess","FETCH_USERS_ACCESS","users","next","previous","total_users","user_error","blockUserToSystem","BLOCK_USER_TO_SYSTEM","unBlockUserToSystem","UNBLOCK_USER_TO_SYSTEM","assignRoleToUserAccess","ASSIGN_ROLE_TO_USER","customizeUserAccess","CUSTOMIZE_USER_ACCESS","resetUserAccess","RESET_USER_ACCESS","getSchools","GET_SCHOOLS","getSchoolById","schoolId","GET_SCHOOLS_BY_ID","createSchool","schools","CREATE_SCHOOL","updateSchool","UPDATE_SCHOOL","deleteSchool","DELETE_SCHOOL","fetchSchoolPosts","school_id","schoolPosts","FETCH_SCHOOL_POSTS","getSchoolPlacement","GET_SCHOOL_PLACEMENT","createSchoolPost","CREATE_SCHOOL_POST","updateSchoolPost","UPDATE_SCHOOL_POST","fetchDistrictPosts","FETCH_DISTRICT_POSTS","getDistrictPlacement","GET_DISTRICT_PLACEMENT","getInstitutePlacementLimit","institute_id","session_id","GET_INSTITUTE_PLACEMENT_LIMIT","getDistrictPlacementLimit","GET_DISTRICT_PLACEMENT_LIMIT","updateInstitutePlacementLimit","UPDATE_INSTITUTE_PLACEMENT_LIMIT","events","dataPointSelection","event","chartContext","config","labelClicked","dataPointIndex","rotate","tickPlacement","fill","opacity","grid","left","right","noData","align","verticalAlign","setOptions","chartClicked","zoom","autoScaleYaxis","ModalState","RoleList","searchInput","setSearchInput","roleList","setChooseRole","loadindRequest","handleSelectRole","UserRole","setRoleId","setSelectedRole","selectedRole","setProvinceId","provinceId","setDistrictId","districtId","setCenterId","centerId","setRoomId","roomId","setLoadingForm","loadingForm","setSchoolId","setChooseSchool","chooseSchool","setInstituteId","setFormError","formError","setLoadingRequest","loadingRequest","chooseRole","setDefaultState","default_access","LOAD_province","LOAD_district","district_required","roomList","distinctDistrict","province_id","room_required","room_id","school_required","schoolList","LOAD_school","vvvvv","role_id","tableData","access","create","view","update","delete","colSpan","assignRoleToUser","preventDefault","window","confirm","education_institution_required","formData","education_institution_id","post","setChangeRole","success","role_error","location","districts","keyDistrict","distinctCenter","rooms","distinctRoom","Loading","onSubmit","institute","province","province_name","school","school_name","room","getUserById","userId","LocationData","locationTemp","p","centers","c","r","room_number","UserList","setManageUserId","manageUserId","setLoadingSchool","loadingSchool","setLoadingRequestType","loadingRequestType","setRoomList","setRoomTables","roomTable","setCurrentAccess","currentAccess","setSchoolList","setUserAccess","userAccess","allRoom","loadingUser","user","setManageUser","fname","lname","email","blockUser","actionType","patch","info","blockUser_ERROR","restUserAccess","warning","resetedAccess","reseting_user_access","manageUser","src","photo","profile","alt","NoResult","NoResultThemes","Dark","n_id","phone_number","custome_access","changeRole","UserAccess","_UploadQuestion","setSearchLevel","educationCategory","schoolLevel","searchLevel","setSelectedEducationCategory","setSelectedSchoolLevel","showFilter","setSchoolLevelFilterFn","filterWithExams","preparedExams","itm","period","periods","selected_period","filteredCourses","searched","filtered","school_levels","itm1","school_level_id","item2","setUploadingStatus","uploadingStatus","searchCourseInput","school_level_name","loadSchoolLevels","minHeight","searchData","course_code","medium","educationCategories","UploadQuestion","questionBank","_UserAccess","setViewPermission","viewPermission","setLoadindRequest","setCreatePermission","createPermission","setUpdatePermission","updatePermission","setDeletePermission","deletePermission","setLoadind","overrideUserAccess","overideAccess","findCustom","custom","handleCustomization","findIndex","custome_user_access_id","customize_access","checked","districtCode","setDistrictCode","setError","handleSubmit","actionTypes","thisProvince","province_code","district_code","sectors","setActionTypes","thisDistrict","setThisDistrict","doc_category_error","component","provinceTitle","setProvinceTitle","provinceCode","setProvinceCode","updated","setThisProvince","province_error","sectorName","setSectorName","sectorCode","setSectorCode","sector_name","sector_code","sector_id","thisSector","setThisSector","sector_error","handleDelete","sectorId","district_error","sector","Locations","ViewDistricts","SchoolLevelsItem","levelsDropDown","setLevelsDropDown","educationCategoryDetails","initializeItem","description","activateItem","education_institute","educationCate","activateLevelItem","SchoolLevelsFilter","IconDefined"],"mappings":"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","file":"static/js/29.29dd7077.chunk.js","sourcesContent":["import React, { useEffect } from \"react\";\nimport Chart from \"react-apexcharts\";\nimport { ApplicationPeriodInterface } from \"../../../shared/interfaces\";\nimport { calculate_age } from \"../../../utils/functions\";\nimport { genderColor } from \"../ChartGender\";\n\ntype HBarChartProps = {\n  getAllApplicantByInsitute: (gender?: \"ALL\" | \"M\" | \"F\") => {\n    data: ApplicationPeriodInterface[];\n    ids: string[];\n  };\n  chartType?: \"bar\" | \"scatter\";\n  stacked?: boolean;\n  ageTo?: number;\n  ageFrom?: number;\n  action?: boolean;\n  setAction?: React.Dispatch<React.SetStateAction<boolean>>;\n};\n\nconst defaultRangeGroup: (\n  | {\n      min: number;\n      max: null;\n    }\n  | {\n      min: number;\n      max: number;\n    }\n)[] = [\n  { min: 65, max: null },\n  { min: 55, max: 64 },\n  { min: 45, max: 54 },\n  { min: 35, max: 44 },\n  { min: 25, max: 34 },\n  { min: 18, max: 24 },\n];\n\nconst defaultLabels: string[] = [\n  \"65+\",\n  \"55-64\",\n  \"45-54\",\n  \"35-44\",\n  \"25-34\",\n  \"18-24\",\n];\n\nconst HBarChart: React.FC<HBarChartProps> = (props) => {\n  // const [rangeGroup, setRangeGroup] = useState<\n  //   (\n  //     | {\n  //         min: number;\n  //         max: null;\n  //       }\n  //     | {\n  //         min: number;\n  //         max: number;\n  //       }\n  //   )[]\n  // >(defaultRangeGroup);\n  let rangeGroup: (\n    | {\n        min: number;\n        max: null;\n      }\n    | {\n        min: number;\n        max: number;\n      }\n  )[] = defaultRangeGroup;\n  // const [labels, setLabels] = useState<string[]>(defaultLabels);\n  let labels: string[] = defaultLabels;\n\n  useEffect(() => {\n    if (props.ageFrom && props.ageTo && props.action && props.action === true) {\n      defaultRangeGroup.forEach((element) => {\n        if (\n          props.ageFrom &&\n          element.min >= props.ageFrom &&\n          props.ageTo &&\n          element.max &&\n          element.max <= props.ageTo\n        ) {\n          console.log({ condition: element });\n        } else {\n          console.log({ nocondition: element });\n        }\n      });\n      // let mins: (\n      //   | {\n      //       min: number;\n      //       max: null;\n      //     }\n      //   | {\n      //       min: number;\n      //       max: number;\n      //     }\n      // )[] = defaultRangeGroup.filter(\n      //   (item) =>\n      //     props.ageFrom &&\n      //     item.min >= props.ageFrom &&\n      //     props.ageTo &&\n      //     item.max &&\n      //     item.max <= props.ageTo\n      // );\n      // mins = mins.filter(\n      //   (item) => props.ageTo && item.max && item.max <= props.ageTo\n      // );\n\n      // change labels\n      // let newLabel: string[] = [...defaultLabels],\n      //   indexToRemove: number[] = [],\n      //   minLabel: { data: number[]; indexes: number[] } = {\n      //     data: [24, 34, 44, 54, 64],\n      //     indexes: [5, 4, 3, 2, 1],\n      //     // indexes: [1, 2, 3, 4, 5],\n      //   },\n      //   maxLabel: { data: number[]; indexes: number[] } = {\n      //     data: [24, 34, 44, 54, 64, 66],\n      //     indexes: [5, 4, 3, 2, 1, 0],\n      //     // indexes: [1, 2, 3, 4, 5],\n      //   };\n      // for (let index = 0; index < minLabel.data.length; index++) {\n      //   if (props.ageFrom > minLabel.data[index]) {\n      //     indexToRemove.push(minLabel.indexes[index]);\n      //   }\n      // }\n\n      // for (let index = maxLabel.data.length - 1; index >= 0; index--) {\n      //   if (\n      //     props.ageTo <= maxLabel.data[index] &&\n      //     !indexToRemove.includes(maxLabel.indexes[index])\n      //   ) {\n      //     // console.log({\n      //     //   index,\n      //     //   labelIndex: maxLabel.indexes[index],\n      //     //   ageTo: props.ageTo,\n      //     //   maxLabel: maxLabel.data[index],\n      //     //   value: defaultLabels[maxLabel.indexes[index]],\n      //     //   condition:\n      //     //     props.ageTo <= maxLabel.data[index] &&\n      //     //     !indexToRemove.includes(maxLabel.indexes[index]),\n      //     // });\n      //     // console.log({\n      //     //   oo: \"ii\",\n      //     //   defaultLabels,\n      //     //   maxLabel,\n      //     //   index: maxLabel.indexes[index],\n      //     //   data: maxLabel.data[index],\n      //     // });\n      //     indexToRemove.push(maxLabel.indexes[index]);\n      //   }\n      // }\n\n      // newLabel = newLabel.filter(\n      //   (item, index) => !indexToRemove.includes(index)\n      // );\n      // setLabels(newLabel);\n      // setRangeGroup(mins);\n    }\n    props.setAction && props.setAction(false);\n  }, [props, props.action, props.ageFrom, props.ageTo, rangeGroup]);\n\n  const getApplicantsByAges = (): { male: number[]; female: number[] } => {\n    let ageRangesMale: number[] = [0, 0, 0, 0, 0, 0, 0],\n      ageRangesFemale: number[] = [0, 0, 0, 0, 0, 0, 0];\n    // let data = props.getAllApplicantByInsitute(\"ALL\").data;\n\n    let male = props\n        .getAllApplicantByInsitute(\"ALL\")\n        .data.filter((item) => item.userInfo.user_info.sex === \"M\"),\n      female = props\n        .getAllApplicantByInsitute(\"ALL\")\n        .data.filter((item) => item.userInfo.user_info.sex === \"F\");\n\n    male.forEach((element) => {\n      for (let index = 0; index < rangeGroup.length; index++) {\n        // const element = array[index];\n        if (\n          rangeGroup[index].max === null &&\n          calculate_age(element.userInfo.user_info.date_of_birth) >=\n            rangeGroup[index].min &&\n          props.ageFrom &&\n          calculate_age(element.userInfo.user_info.date_of_birth) >=\n            props.ageFrom\n        ) {\n          ageRangesMale[index] = ageRangesMale[index] + 1;\n        } else if (\n          rangeGroup[index].max !== null &&\n          calculate_age(element.userInfo.user_info.date_of_birth) <=\n            rangeGroup[index].max! &&\n          props.ageTo &&\n          calculate_age(element.userInfo.user_info.date_of_birth) <=\n            props.ageTo &&\n          calculate_age(element.userInfo.user_info.date_of_birth) >=\n            rangeGroup[index].min &&\n          props.ageFrom &&\n          calculate_age(element.userInfo.user_info.date_of_birth) >=\n            props.ageFrom\n        ) {\n          ageRangesMale[index] = ageRangesMale[index] + 1;\n        }\n      }\n\n      // if (calculate_age(element.userInfo.user_info.date_of_birth) >= 65) {\n      //   ageRangesMale[0] = ageRangesMale[0] + 1;\n      // } else if (\n      //   calculate_age(element.userInfo.user_info.date_of_birth) <= 64 &&\n      //   calculate_age(element.userInfo.user_info.date_of_birth) >= 55\n      // ) {\n      //   ageRangesMale[1] = ageRangesMale[1] + 1;\n      // } else if (\n      //   calculate_age(element.userInfo.user_info.date_of_birth) <= 54 &&\n      //   calculate_age(element.userInfo.user_info.date_of_birth) >= 45\n      // ) {\n      //   ageRangesMale[2] = ageRangesMale[2] + 1;\n      // } else if (\n      //   calculate_age(element.userInfo.user_info.date_of_birth) <= 44 &&\n      //   calculate_age(element.userInfo.user_info.date_of_birth) >= 35\n      // ) {\n      //   ageRangesMale[3] = ageRangesMale[3] + 1;\n      // } else if (\n      //   calculate_age(element.userInfo.user_info.date_of_birth) <= 34 &&\n      //   calculate_age(element.userInfo.user_info.date_of_birth) >= 25\n      // ) {\n      //   ageRangesMale[4] = ageRangesMale[4] + 1;\n      // } else if (\n      //   calculate_age(element.userInfo.user_info.date_of_birth) <= 24 &&\n      //   calculate_age(element.userInfo.user_info.date_of_birth) >= 18\n      // ) {\n      //   ageRangesMale[5] = ageRangesMale[5] + 1;\n      // }\n    });\n\n    female.forEach((element) => {\n      for (let index = 0; index < rangeGroup.length; index++) {\n        // const element = array[index];\n        if (\n          rangeGroup[index].max === null &&\n          calculate_age(element.userInfo.user_info.date_of_birth) >=\n            rangeGroup[index].min &&\n          props.ageFrom &&\n          calculate_age(element.userInfo.user_info.date_of_birth) >=\n            props.ageFrom\n        ) {\n          ageRangesFemale[index] = ageRangesFemale[index] + 1;\n        } else if (\n          rangeGroup[index].max !== null &&\n          calculate_age(element.userInfo.user_info.date_of_birth) <=\n            rangeGroup[index].max! &&\n          props.ageTo &&\n          calculate_age(element.userInfo.user_info.date_of_birth) <=\n            props.ageTo &&\n          calculate_age(element.userInfo.user_info.date_of_birth) >=\n            rangeGroup[index].min &&\n          props.ageFrom &&\n          calculate_age(element.userInfo.user_info.date_of_birth) >=\n            props.ageFrom\n        ) {\n          ageRangesFemale[index] = ageRangesFemale[index] + 1;\n        }\n      }\n\n      // if (calculate_age(element.userInfo.user_info.date_of_birth) >= 65) {\n      //   ageRangesFemale[0] = ageRangesFemale[0] + 1;\n      // } else if (\n      //   calculate_age(element.userInfo.user_info.date_of_birth) <= 64 &&\n      //   calculate_age(element.userInfo.user_info.date_of_birth) >= 55\n      // ) {\n      //   ageRangesFemale[1] = ageRangesFemale[1] + 1;\n      // } else if (\n      //   calculate_age(element.userInfo.user_info.date_of_birth) <= 54 &&\n      //   calculate_age(element.userInfo.user_info.date_of_birth) >= 45\n      // ) {\n      //   ageRangesFemale[2] = ageRangesFemale[2] + 1;\n      // } else if (\n      //   calculate_age(element.userInfo.user_info.date_of_birth) <= 44 &&\n      //   calculate_age(element.userInfo.user_info.date_of_birth) >= 35\n      // ) {\n      //   ageRangesFemale[3] = ageRangesFemale[3] + 1;\n      // } else if (\n      //   calculate_age(element.userInfo.user_info.date_of_birth) <= 34 &&\n      //   calculate_age(element.userInfo.user_info.date_of_birth) >= 25\n      // ) {\n      //   ageRangesFemale[4] = ageRangesFemale[4] + 1;\n      // } else if (\n      //   calculate_age(element.userInfo.user_info.date_of_birth) <= 24 &&\n      //   calculate_age(element.userInfo.user_info.date_of_birth) >= 18\n      // ) {\n      //   ageRangesFemale[5] = ageRangesFemale[5] + 1;\n      // }\n    });\n\n    return { male: ageRangesMale, female: ageRangesFemale };\n  };\n\n  let options = {\n    plotOptions: {\n      bar: {\n        borderRadius: 4,\n        horizontal: true,\n      },\n    },\n    labels: labels,\n    dataLabels: {\n      enabled: true,\n    },\n    xaxis: {\n      categories: labels,\n    },\n    yaxis: {\n      title: {\n        text: \"(Age range)\",\n      },\n    },\n    tooltip: {\n      y: {\n        formatter: function (val: number) {\n          return val + \" Applicants\";\n        },\n      },\n    },\n    chart: {\n      stacked: props.stacked,\n    },\n    colors: [genderColor.male, genderColor.female],\n  };\n\n  return (\n    <React.Fragment>\n      <Chart\n        options={options}\n        series={[\n          {\n            name: \"Male\",\n            data: getApplicantsByAges().male,\n          },\n          {\n            name: \"Female\",\n            data: getApplicantsByAges().female,\n          },\n        ]}\n        type={props.chartType ? props.chartType : \"bar\"}\n        width=\"100%\"\n        height=\"350\"\n      />\n    </React.Fragment>\n  );\n};\n\nexport default React.memo(HBarChart);\n","import React, { useState } from \"react\";\nimport { IoIosRemove } from \"react-icons/io\";\nimport { ApplicationPeriodInterface } from \"../../shared/interfaces\";\nimport { calculate_age } from \"../../utils/functions\";\nimport HBarChart from \"./ChartComponents/HBarChart\";\nimport PieChart from \"./ChartComponents/PieChart\";\n\nexport const genderColor = { male: \"#3998a2\", female: \"#002243\" };\n\ntype ChartGenderProps = {\n  getAllApplicantByInsitute: (gender?: \"ALL\" | \"M\" | \"F\") => {\n    data: ApplicationPeriodInterface[];\n    ids: string[];\n  };\n};\n\nconst ChartGender: React.FC<ChartGenderProps> = (props) => {\n  const rangeConfig: {\n    from: number;\n    to: number;\n  } = { from: 18, to: 75 };\n  const [ageFrom, setAgeFrom] = useState<string>(rangeConfig.from.toString());\n  const [ageTo, setAgeTo] = useState<string>(rangeConfig.to.toString());\n  const [rangeChanged, setRangeChanged] = useState<boolean>(false);\n  const handleAgeRange = (thisRange: string, TYPE: \"FROM\" | \"TO\" = \"FROM\") => {\n    // let thisAge:number= thisRange\n    if (TYPE === \"FROM\") {\n      setAgeFrom(thisRange);\n      if (Number(thisRange) > Number(ageTo)) {\n        setAgeTo(thisRange);\n      }\n    } else {\n      setAgeTo(thisRange);\n      if (Number(thisRange) < Number(ageFrom)) {\n        setAgeFrom(thisRange);\n      }\n    }\n    setRangeChanged(true);\n  };\n\n  const ageRange = (start: number, end: number): number[] => {\n    let result: number[] = [];\n    for (let index = start; index <= end; index++) {\n      result.push(index);\n    }\n    return result;\n  };\n\n  const FC_FilterByAge = (\n    userData: ApplicationPeriodInterface[],\n    from: string,\n    to: string\n  ): {\n    data: ApplicationPeriodInterface[];\n    ids: string[];\n  } => {\n    let ids: string[] = [],\n      data: ApplicationPeriodInterface[] = userData;\n    data = userData.filter(\n      (item) =>\n        calculate_age(item.userInfo.user_info.date_of_birth) >= Number(from) &&\n        calculate_age(item.userInfo.user_info.date_of_birth) <= Number(to)\n    );\n    return { data, ids };\n  };\n\n  return (\n    <section className=\"grid grid-cols-1 md:grid-cols-3 gap-2 my-3\">\n      {/* APPLICANTS BY GENDER ========================================= */}\n      <div className=\"bg-white rounded col-span-1 md:col-span-1\">\n        <div className=\"px-3 py-4\">\n          <span className=\"text-gray-600 font-semibold text-xl\">\n            Number of Applicants per Gender\n          </span>\n        </div>\n        <div className=\"flex justify-center\">\n          <PieChart\n            options={{\n              labels: [\"Male\", \"Female\"],\n              legend: {\n                position: \"bottom\",\n                horizontalAlign: \"center\",\n                fontSize: \"16px\",\n                itemMargin: {\n                  horizontal: 3,\n                  vertical: 0,\n                },\n              },\n              plotOptions: {\n                pie: {\n                  donut: {\n                    labels: {\n                      show: true,\n                      name: {\n                        show: true,\n                        fontSize: \"22px\",\n                        fontFamily: \"Rubik\",\n                        color: \"#dfsda\",\n                        offsetY: -10,\n                      },\n                      value: {\n                        show: true,\n                        fontSize: \"16px\",\n                        fontFamily: \"Helvetica, Arial, sans-serif\",\n                        color: undefined,\n                        offsetY: 16,\n                        formatter: function (val) {\n                          return val;\n                        },\n                      },\n                      total: {\n                        show: true,\n                        label: \"Total\",\n                        color: \"#373d3f\",\n                        formatter: function (w) {\n                          return w.globals.seriesTotals.reduce(\n                            (a: number, b: number) => {\n                              return a + b;\n                            },\n                            0\n                          );\n                        },\n                      },\n                    },\n                  },\n                },\n              },\n              colors: [genderColor.male, genderColor.female],\n            }}\n            series={[\n              FC_FilterByAge(\n                props.getAllApplicantByInsitute(\"M\").data,\n                ageFrom,\n                ageTo\n              ).data.length,\n              FC_FilterByAge(\n                props.getAllApplicantByInsitute(\"F\").data,\n                ageFrom,\n                ageTo\n              ).data.length,\n            ]}\n          />\n        </div>\n      </div>\n      <div className=\"bg-white rounded col-span-1 md:col-span-2\">\n        <div className=\"flex items-center justify-between px-3\">\n          <span className=\"text-gray-600 my-4 font-semibold text-xl\">\n            Number of Applicants per Age\n          </span>\n          <div className=\"bg-white\">\n            <nav className=\"flex flex-col sm:flex-row\">\n              <select\n                value={ageFrom}\n                onChange={(e) => handleAgeRange(e.target.value)}\n                className=\"mt-1 block w-full py-2 px-3 border-2 border-gray-300 bg-white rounded focus:outline-none focus:border-gray-500 sm:text-sm\"\n              >\n                {ageRange(rangeConfig.from, rangeConfig.to).map(\n                  (item, index) => (\n                    <option value={item} key={index + item}>\n                      {item}\n                    </option>\n                  )\n                )}\n              </select>\n              {/* <div className=\"flex-1\">\n              </div> */}\n              <div className=\"relative self-center\">\n                <IoIosRemove className=\"mt-2 h-6 w-6 text-gray-600\" />\n              </div>\n              <select\n                value={ageTo}\n                onChange={(e) => handleAgeRange(e.target.value, \"TO\")}\n                className=\"mt-1 block w-full py-2 px-3 border-2 border-gray-300 bg-white rounded focus:outline-none focus:border-gray-500 sm:text-sm\"\n              >\n                {ageRange(rangeConfig.from, rangeConfig.to).map(\n                  (item, index) => (\n                    <option value={item} key={index + item}>\n                      {item}\n                    </option>\n                  )\n                )}\n              </select>\n              {/* <div className=\"flex-1\">\n              </div> */}\n              {/* <button\n                className={`py-4 px-6 block focus:outline-none border-b-2 font-medium ${\n                  gender === \"ALL\"\n                    ? \"text-gray-600 border-blue-500 cursor-default animate__animated animate__flash\"\n                    : \"hover:text-blue-500 text-blue-500\"\n                }`}\n                onClick={() => gender !== \"ALL\" && setGender(\"ALL\")}\n              >\n                All\n              </button>\n              <button\n                className={`py-4 px-6 block focus:outline-none border-b-2 font-medium ${\n                  gender === \"F\"\n                    ? \"text-gray-600 border-blue-500 cursor-default animate__animated animate__flash\"\n                    : \"hover:text-blue-500 text-blue-500\"\n                }`}\n                onClick={() => gender !== \"F\" && setGender(\"F\")}\n              >\n                Female\n              </button>\n              <button\n                className={`py-4 px-6 block focus:outline-none border-b-2 font-medium ${\n                  gender === \"M\"\n                    ? \"text-gray-600 border-blue-500 cursor-default animate__animated animate__flash\"\n                    : \"hover:text-blue-500 text-blue-500\"\n                }`}\n                onClick={() => gender !== \"M\" && setGender(\"M\")}\n              >\n                Male\n              </button> */}\n            </nav>\n          </div>\n        </div>\n        <HBarChart\n          getAllApplicantByInsitute={props.getAllApplicantByInsitute}\n          stacked={true}\n          ageFrom={Number(ageFrom)}\n          ageTo={Number(ageTo)}\n          action={rangeChanged}\n          setAction={setRangeChanged}\n        />\n      </div>\n      {/* END APPLICANTS BY GENDER ===================================== */}\n    </section>\n  );\n};\n\nexport default React.memo(ChartGender);\n","import React, { useState } from \"react\";\nimport { FaRegChartBar } from \"react-icons/fa\";\nimport Courses from \"../../../components/Courses/Courses\";\nimport Modal, { ModalSize, Themes } from \"../../../components/Modal/Modal\";\nimport { course } from \"../../../interfaces/course\";\nimport { DashboardReducerType } from \"../../../reducers/dashboard\";\nimport {\n  ApplicationPeriodInterface,\n  LocationRoomTableInterface,\n} from \"../../../shared/interfaces\";\nimport { genderColor } from \"../ChartGender\";\nimport VBarChart from \"./VBarChart\";\n\ntype ApplicantsExamProps = {\n  FC_CentersInDistrict: (district_id: string) => {\n    names: string[];\n    ids: string[];\n    capacity: { all: number; occupied: number }[];\n  };\n  FC_DistinctDistrict: () => {\n    distinctDistricts: LocationRoomTableInterface[];\n    distinctDistrictNames: string[];\n    distinctDistrictIds: string[];\n    capacity: {\n      name: string;\n      data: number[];\n    }[];\n  };\n  FC_Count: (ApplicationPeriod: ApplicationPeriodInterface[]) => {\n    male: number;\n    female: number;\n  };\n  loading: boolean;\n  loadingApplications: boolean;\n  loadingEducation: boolean;\n  dashboard: DashboardReducerType;\n  chartHeight?: number;\n};\n\nconst ApplicantsExam: React.FC<ApplicantsExamProps> = (props) => {\n  const [openModal, setOpenModal] = useState<{ exam: boolean }>({\n    exam: false,\n  });\n  const [thisExam, setThisExam] = useState<course | null>(null);\n\n  const FC_ChartExam = (): {\n    categoriesLabel: string[];\n    dataLabels: boolean;\n    yaxisText: string;\n    tooltipText: string;\n    series: {\n      name: string;\n      data: number[];\n    }[];\n    isHorizontalAllowed: boolean;\n  } => {\n    let generalResult: {\n        name: string;\n        data: number[];\n      }[] = [],\n      makeHorizontal: boolean = false;\n    if (props.dashboard.applications && thisExam) {\n      let dataMale: number[] = [],\n        dataFemale: number[] = [];\n\n      let data: ApplicationPeriodInterface[] = [],\n        dataExams: string[] = [],\n        dataApplication: string[] = [];\n\n      // LOOP FOR EACH DISTRICT ==================================\n      for (const districtKey in props.FC_DistinctDistrict().distinctDistricts) {\n        if (\n          Object.prototype.hasOwnProperty.call(\n            props.FC_DistinctDistrict().distinctDistricts,\n            districtKey\n          )\n        ) {\n          // LOOP FOR EACH APPLICATION ==================================\n          for (const appKey in props.dashboard.applications) {\n            if (\n              Object.prototype.hasOwnProperty.call(\n                props.dashboard.applications,\n                appKey\n              )\n            ) {\n              // LOOP FOR EACH APPLICATION EXAM ==================================\n              for (\n                let j = 0;\n                j < props.dashboard.applications[appKey].exams.length;\n                j++\n              ) {\n                if (\n                  props\n                    .FC_CentersInDistrict(\n                      props.FC_DistinctDistrict().distinctDistricts[districtKey]\n                        .district_id\n                    )\n                    .ids.includes(\n                      props.dashboard.applications[appKey].exams[j].center_id\n                    ) &&\n                  props.dashboard.applications[appKey].exams[j].course_id ===\n                    thisExam.course_id\n                ) {\n                  if (\n                    dataApplication.includes(\n                      props.dashboard.applications[appKey]._id\n                    ) ||\n                    dataExams.includes(\n                      props.dashboard.applications[appKey].exams[j].course_id\n                    )\n                  )\n                    continue;\n                  dataExams.push(\n                    props.dashboard.applications[appKey].exams[j].course_id\n                  );\n                  dataApplication.push(\n                    props.dashboard.applications[appKey]._id\n                  );\n                  data.push(props.dashboard.applications[appKey]);\n                  continue;\n                }\n              }\n            }\n          }\n        }\n\n        console.log({\n          district:\n            props.FC_DistinctDistrict().distinctDistricts[districtKey]\n              .district_name,\n          data,\n          dataExams,\n          series: props.FC_Count(data),\n        });\n        dataMale.push(props.FC_Count(data).male);\n        dataFemale.push(props.FC_Count(data).female);\n        data = [];\n        dataExams = [];\n        dataApplication = [];\n      }\n\n      makeHorizontal =\n        dataMale.length > 10 || dataFemale.length > 10 ? true : false;\n      generalResult = [\n        {\n          name: \"Male\",\n          data: dataMale,\n        },\n        {\n          name: \"Female\",\n          data: dataFemale,\n        },\n      ];\n    }\n\n    return {\n      categoriesLabel: props.FC_DistinctDistrict().distinctDistrictNames,\n      dataLabels: false,\n      yaxisText: \"(Number of Applicants)\",\n      tooltipText: \"Applicants\",\n      series: generalResult,\n      isHorizontalAllowed: makeHorizontal,\n    };\n  };\n\n  const setSelectedCourse = (selectedCourse: course | null) => {\n    setThisExam(selectedCourse);\n    setOpenModal({ exam: false });\n    FC_ChartExam();\n  };\n\n  const FC_OpenCenter = (labelIndex: number, seriesIndex: number) => {\n    console.log(\"FC_OpenCenter loaded\");\n    console.log({\n      labels: FC_ChartExam().categoriesLabel,\n      selectedLabels: FC_ChartExam().categoriesLabel[labelIndex],\n      selectedLabelsIndex: labelIndex,\n      gender: seriesIndex === 0 ? \"M\" : \"F\",\n    });\n  };\n\n  return (\n    <React.Fragment>\n      <section className=\"my-3 bg-white\">\n        <div className=\"flex items-center px-3 gap-2 py-2\">\n          <span className=\"text-gray-600 font-semibold text-xl\">\n            Number of Applicants per Exam\n            {thisExam && \" of \"}\n            {thisExam && (\n              <span\n                className=\"cursor-pointer font-bold uppercase  hover:underline\"\n                onClick={() =>\n                  !props.loading &&\n                  !props.loadingApplications &&\n                  !props.loadingEducation &&\n                  setOpenModal({ exam: true })\n                }\n              >\n                {thisExam.course_name}\n              </span>\n            )}\n          </span>\n          <button\n            className=\"rounded-full border-2 border-blue-500 px-2 py-1 hover:bg-blue-50 hover:border-blue-700\"\n            disabled={\n              props.loading ||\n              props.loadingApplications ||\n              props.loadingEducation\n            }\n            onClick={() => setOpenModal({ exam: true })}\n          >\n            {thisExam ? \"Change Exam\" : \"Choose Exam\"}\n          </button>\n        </div>\n        {thisExam ? (\n          <VBarChart\n            labels={FC_ChartExam().categoriesLabel}\n            categoriesLabel={FC_ChartExam().categoriesLabel}\n            dataLabels={FC_ChartExam().dataLabels}\n            yaxisText={FC_ChartExam().yaxisText}\n            tooltipText={FC_ChartExam().tooltipText}\n            series={FC_ChartExam().series}\n            FC_LoadSelected={FC_OpenCenter}\n            colors={[genderColor.male, genderColor.female]}\n            defaultBar={{\n              borderRadius: 4,\n              horizontal: FC_ChartExam().isHorizontalAllowed,\n              columnWidth: \"95%\",\n              endingShape: \"rounded\",\n            }}\n            chartHeight={props.chartHeight}\n          />\n        ) : (\n          <div\n            className=\"flex flex-col items-center animate__animated animate__flash cursor-pointer text-gray-500 hover:text-gray-600\"\n            onClick={() =>\n              !props.loading &&\n              !props.loadingApplications &&\n              !props.loadingEducation &&\n              setOpenModal({ exam: true })\n            }\n          >\n            <FaRegChartBar className=\"w-72 h-72\" />\n            <span className=\"text-4xl font-semibold\">\n              Choose course to view\n            </span>\n          </div>\n        )}\n      </section>\n      {/* modal control */}\n      {openModal.exam && (\n        <Modal\n          backDrop={true}\n          theme={Themes.default}\n          close={(): void => {\n            setOpenModal({ exam: false });\n          }}\n          displayClose={true}\n          backDropClose={false}\n          title=\"Choosing Exam\"\n          widthSizeClass={ModalSize.large}\n          padding={{ title: true, body: false, footer: false }}\n        >\n          <Courses\n            selected_course_id={thisExam ? thisExam.course_id : null}\n            setSelectedCourse={setSelectedCourse}\n          />\n        </Modal>\n      )}\n      {/* end modal control */}\n    </React.Fragment>\n  );\n};\n\nexport default React.memo(ApplicantsExam);\n","import React, { Component } from \"react\";\nimport { genderColor } from \"../ChartGender\";\nimport VBarChart from \"./VBarChart\";\n\ntype ApplicationsGenderProps = {\n  // FC_SelectedPositions: (gender?: \"ALL\" | \"M\" | \"F\") => {\n  //   data: PositionAPI[];\n  //   dataNames: string[];\n  //   ids: string[];\n  //   applications: ApplicationPeriodInterface[];\n  // };\n  positionNames: string[];\n  thisSeries: {\n    name: string;\n    data: number[];\n  }[];\n};\n\ntype ApplicationsGenderStates = {\n  thisSeries: {\n    name: string;\n    data: number[];\n  }[];\n};\n\nclass ApplicationsGender extends Component<\n  ApplicationsGenderProps,\n  ApplicationsGenderStates\n> {\n  constructor(props: ApplicationsGenderProps) {\n    super(props);\n\n    this.state = { thisSeries: [] };\n  }\n\n  // setThisSeries = (\n  //   value: {\n  //     name: string;\n  //     data: number[];\n  //   }[]\n  // ) => {\n  //   this.setState({ thisSeries: value });\n  // };\n\n  // FC_GetUserByGender = (): {\n  //   male: number[];\n  //   female: number[];\n  // } => {\n  //   let male: number = 0,\n  //     female: number = 0,\n  //     maleArray: number[] = [],\n  //     femaleArray: number[] = [];\n\n  //   for (const positionKey in this.props.FC_SelectedPositions().data) {\n  //     if (\n  //       Object.prototype.hasOwnProperty.call(\n  //         this.props.FC_SelectedPositions().data,\n  //         positionKey\n  //       )\n  //     ) {\n  //       let apps = this.props\n  //         .FC_SelectedPositions()\n  //         .applications.filter(\n  //           (app) =>\n  //             app.position ===\n  //             this.props.FC_SelectedPositions().data[positionKey].position_id\n  //         );\n\n  //       // LOOP THROUGH APPLICATIONS\n  //       for (const key in apps) {\n  //         if (Object.prototype.hasOwnProperty.call(apps, key)) {\n  //           let result = this.props.userInfo.find(\n  //             (item) => item.user_id === apps[key].user_id\n  //           );\n  //           if (result) {\n  //             if (result.user_info.sex === \"M\") {\n  //               male += 1;\n  //             } else {\n  //               female += 1;\n  //             }\n  //           }\n  //         }\n  //       }\n  //       maleArray.push(male);\n  //       femaleArray.push(female);\n  //       male = 0;\n  //       female = 0;\n  //     }\n  //   }\n  //   return { male: maleArray, female: femaleArray };\n  // };\n\n  // componentDidMount = () => {\n  //   this.setThisSeries([\n  //     {\n  //       name: \"Male\",\n  //       data: this.FC_GetUserByGender().male,\n  //     },\n  //     {\n  //       name: \"Female\",\n  //       data: this.FC_GetUserByGender().female,\n  //     },\n  //   ]);\n  // };\n\n  render() {\n    return (\n      <section className=\"my-3 bg-white\">\n        <div className=\"flex items-center justify-between px-3\">\n          <span className=\"text-gray-600 font-semibold text-xl py-4 px-0\">\n            Number of Applications per Position\n          </span>\n        </div>\n        <div className=\"mb-4 mx-2\">\n          <VBarChart\n            labels={this.props.positionNames}\n            categoriesLabel={this.props.positionNames}\n            dataLabels={false}\n            yaxisText=\"(Number of Applications)\"\n            tooltipText=\"applications\"\n            series={this.props.thisSeries}\n            colors={[genderColor.male, genderColor.female]}\n            defaultBar={{\n              borderRadius: 4,\n              horizontal: true,\n              columnWidth: \"95%\",\n              endingShape: \"rounded\",\n            }}\n          />\n        </div>\n      </section>\n    );\n  }\n}\n\nexport default React.memo(ApplicationsGender);\n","import React from \"react\";\nimport { ApplicationStates } from \"../../../interfaces/application\";\nimport { ApplicationPeriodInterface } from \"../../../shared/interfaces\";\nimport VBarChart from \"./VBarChart\";\n\ntype ApplicationsStatusProps = {\n  FC_ApplicationsByInsitutes: (status?: \"ALL\" | ApplicationStates) => {\n    data: ApplicationPeriodInterface[];\n    ids: string[];\n    uids: string[];\n    positions: string[];\n  };\n  chartHeight?: number;\n};\n\nconst ApplicationsStatus: React.FC<ApplicationsStatusProps> = (props) => {\n  const thisSeries: {\n    name: string;\n    data: number[];\n  }[] = [\n    {\n      name: \"Initiated\",\n      data: [\n        props.FC_ApplicationsByInsitutes(ApplicationStates.Initiated).data\n          .length,\n      ],\n    },\n    {\n      name: \"Incomplete\",\n      data: [\n        props.FC_ApplicationsByInsitutes(ApplicationStates.Incomplete).data\n          .length,\n      ],\n    },\n    {\n      name: \"Rejected\",\n      data: [\n        props.FC_ApplicationsByInsitutes(ApplicationStates.Rejected).data\n          .length,\n      ],\n    },\n    {\n      name: \"Pending\",\n      data: [\n        props.FC_ApplicationsByInsitutes(ApplicationStates.Pending).data.length,\n      ],\n    },\n    {\n      name: \"Shortlisted\",\n      data: [\n        props.FC_ApplicationsByInsitutes(ApplicationStates.Shortlisted).data\n          .length,\n      ],\n    },\n  ];\n\n  const statusApplications = {\n    // labels: string[];\n    categoriesLabel: [\n      \"Initiated\",\n      \"Incomplete\",\n      \"Rejected\",\n      \"Pending\",\n      \"Shortlisted\",\n    ],\n    dataLabels: false,\n    yaxisText: \"(Number of Applications)\",\n    tooltipText: \"applications\",\n    series: thisSeries,\n  };\n\n  return (\n    <section className=\"my-3 bg-white\">\n      <div className=\"flex items-center px-3\">\n        <span className=\"text-gray-600 font-semibold text-xl py-4 px-6\">\n          Applications per Status\n        </span>\n      </div>\n      <div className=\"mb-4 mx-2\">\n        <VBarChart\n          labels={statusApplications.categoriesLabel}\n          categoriesLabel={statusApplications.categoriesLabel}\n          dataLabels={statusApplications.dataLabels}\n          yaxisText={statusApplications.yaxisText}\n          tooltipText={statusApplications.tooltipText}\n          series={statusApplications.series}\n          colors={[\"#A5978B\", \"#546E7A\", \"#D7263D\", \"#E2C044\", \"#008FFB\"]}\n          chartHeight={props.chartHeight}\n        />\n      </div>\n    </section>\n  );\n};\n\nexport default React.memo(ApplicationsStatus);\n","import React, { useState } from \"react\";\nimport Modal, { ModalSize, Themes } from \"../../../components/Modal/Modal\";\nimport { DashboardReducerType } from \"../../../reducers/dashboard\";\nimport {\n  ApplicationPeriodInterface,\n  LocationRoomTableInterface,\n  RoomLocationInterface,\n} from \"../../../shared/interfaces\";\nimport { LocationsInArray } from \"../../UserManagement/UserList\";\nimport VBarChart from \"./VBarChart\";\n\nexport const districtCapacityColor: {\n  capacity: string;\n  occupied: string;\n} = { capacity: \"#0171c1\", occupied: \"#50a147\" };\n\ntype DistrictCitesProps = {\n  FC_GetPositionsByInstitute: Function;\n\n  FC_CentersInDistrict: (district_id: string) => {\n    names: string[];\n    ids: string[];\n    capacity: { all: number; occupied: number }[];\n  };\n  FC_DistinctDistrict: () => {\n    distinctDistricts: LocationRoomTableInterface[];\n    distinctDistrictNames: string[];\n    distinctDistrictIds: string[];\n    capacity: {\n      name: string;\n      data: number[];\n    }[];\n  };\n  FC_Count: (ApplicationPeriod: ApplicationPeriodInterface[]) => {\n    male: number;\n    female: number;\n  };\n  locations: RoomLocationInterface[];\n  loading: boolean;\n  loadingApplications: boolean;\n  loadingEducation: boolean;\n  dashboard: DashboardReducerType;\n  chartHeight?: number;\n};\n\nconst DistrictCites: React.FC<DistrictCitesProps> = (props) => {\n  const [openModal, setOpenModal] = useState<{ center: boolean }>({\n    center: false,\n  });\n  const [centerCapacity, setCenterCapacity] = useState<{\n    categoriesLabel: string[];\n    dataLabels: boolean;\n    yaxisText: string;\n    tooltipText: string;\n    series: {\n      name: string;\n      data: number[];\n    }[];\n  } | null>(null);\n  const [districtName, setDistrictName] = useState<string>(\"\");\n  const districtCapacity: {\n    categoriesLabel: string[];\n    dataLabels: boolean;\n    yaxisText: string;\n    tooltipText: string;\n    series: {\n      name: string;\n      data: number[];\n    }[];\n  } = {\n    categoriesLabel: props.FC_DistinctDistrict().distinctDistrictNames,\n    dataLabels: true,\n    yaxisText: \"(District Capacity)\",\n    tooltipText: \"Seats\",\n    series: props.FC_DistinctDistrict().capacity,\n  };\n\n  const FC_CenterByDistrictId = (\n    district_id: string\n  ): {\n    distinctDistricts: LocationRoomTableInterface[];\n    distinctDistrictNames: string[];\n    distinctDistrictIds: string[];\n    capacity: {\n      name: string;\n      data: number[];\n    }[];\n  } => {\n    var flags: string[] = [],\n      output: LocationRoomTableInterface[] = [],\n      capacity: number = 0,\n      occupied: number = 0,\n      datCapacity: {\n        name: string;\n        data: number[];\n      }[] = [],\n      dataCapacity: number[] = [],\n      dataOccupied: number[] = [];\n\n    let centersIdInDistrict: string[] = [],\n      centersNamesInDistrict: string[] = [];\n    let districtData: LocationRoomTableInterface[] = LocationsInArray(\n      props.locations\n    ).filter((d) => d.district_id === district_id);\n    for (const key in districtData) {\n      if (Object.prototype.hasOwnProperty.call(districtData, key)) {\n        if (centersIdInDistrict.includes(districtData[key].center_id)) continue;\n        centersIdInDistrict.push(districtData[key].center_id);\n        centersNamesInDistrict.push(districtData[key].center_name);\n      }\n    }\n\n    // CENTER CAPACITY CONTROLLER\n    for (const key in centersIdInDistrict) {\n      if (Object.prototype.hasOwnProperty.call(centersIdInDistrict, key)) {\n        let roomLevel: LocationRoomTableInterface[] = LocationsInArray(\n          props.locations\n        ).filter((d) => d.center_id === centersIdInDistrict[key]);\n\n        for (const key_2 in roomLevel) {\n          if (Object.prototype.hasOwnProperty.call(roomLevel, key_2)) {\n            capacity += roomLevel[key_2].capacity;\n            if (occupied < roomLevel[key_2].occupied) {\n              occupied = roomLevel[key_2].occupied;\n              // console.log({\n              //   roomCapacity: roomLevel[key_2].occupied,\n              //   roomName: roomLevel[key_2].room_name,\n              // });\n            }\n          }\n        }\n        dataCapacity.push(capacity);\n        dataOccupied.push(occupied);\n        capacity = 0;\n        occupied = 0;\n      }\n    }\n    datCapacity.push(\n      {\n        name: \"Capacity\",\n        data: dataCapacity,\n      },\n      {\n        name: \"Occupied\",\n        data: dataOccupied,\n      }\n    );\n\n    return {\n      distinctDistricts: output,\n      distinctDistrictNames: centersNamesInDistrict,\n      distinctDistrictIds: flags,\n      capacity: datCapacity,\n    };\n  };\n\n  const FC_OpenCenter = (labelIndex: number, seriesIndex: number) => {\n    setDistrictName(\n      props.FC_DistinctDistrict().distinctDistrictNames[labelIndex]\n    );\n    setCenterCapacity({\n      categoriesLabel: FC_CenterByDistrictId(\n        props.FC_DistinctDistrict().distinctDistrictIds[labelIndex]\n      ).distinctDistrictNames,\n      dataLabels: false,\n      yaxisText: \"(Center Seats Capacity)\",\n      tooltipText: \"Seats\",\n      series: FC_CenterByDistrictId(\n        props.FC_DistinctDistrict().distinctDistrictIds[labelIndex]\n      ).capacity,\n    });\n\n    setOpenModal({ center: true });\n  };\n\n  return (\n    <React.Fragment>\n      <section className=\"my-3 bg-white\">\n        <div className=\"flex items-center px-3 gap-2 py-2\">\n          <span className=\"text-gray-600 font-semibold text-xl\">\n            District Capacity vs The Highest Occupation\n          </span>\n        </div>\n        <VBarChart\n          labels={districtCapacity.categoriesLabel}\n          categoriesLabel={districtCapacity.categoriesLabel}\n          dataLabels={districtCapacity.dataLabels}\n          yaxisText={districtCapacity.yaxisText}\n          tooltipText={districtCapacity.tooltipText}\n          series={districtCapacity.series}\n          colors={[\n            districtCapacityColor.capacity,\n            districtCapacityColor.occupied,\n          ]}\n          FC_LoadSelected={FC_OpenCenter}\n          defaultBar={{\n            borderRadius: 4,\n            horizontal: true,\n            columnWidth: \"95%\",\n            endingShape: \"rounded\",\n          }}\n          chartHeight={props.chartHeight}\n        />\n        {/* {thisExam ? (\n        ) : (\n          <div\n            className=\"flex flex-col items-center animate__animated animate__flash cursor-pointer text-gray-500 hover:text-gray-600\"\n            onClick={() =>\n              !props.loading &&\n              !props.loadingApplications &&\n              !props.loadingEducation &&\n              setOpenModal({ center: true })\n            }\n          >\n            <FaRegChartBar className=\"w-72 h-72\" />\n            <span className=\"text-4xl font-semibold\">\n              Choose course to view\n            </span>\n          </div>\n        )} */}\n      </section>\n      {/* modal control */}\n      {openModal.center && centerCapacity && (\n        <Modal\n          backDrop={true}\n          theme={Themes.default}\n          close={(): void => {\n            setOpenModal({ center: false });\n            setCenterCapacity(null);\n            setDistrictName(\"\");\n          }}\n          displayClose={true}\n          backDropClose={false}\n          title={`${districtName} district Capacity vs The Highest Occupation`}\n          widthSizeClass={ModalSize.extraLarge}\n          padding={{ title: true, body: false, footer: false }}\n        >\n          <div className=\"px-3\">\n            <VBarChart\n              labels={centerCapacity.categoriesLabel}\n              categoriesLabel={centerCapacity.categoriesLabel}\n              dataLabels={centerCapacity.dataLabels}\n              yaxisText={centerCapacity.yaxisText}\n              tooltipText={centerCapacity.tooltipText}\n              colors={[\n                districtCapacityColor.capacity,\n                districtCapacityColor.occupied,\n              ]}\n              series={centerCapacity.series}\n              FC_LoadSelected={FC_OpenCenter}\n              defaultBar={{\n                borderRadius: 4,\n                horizontal: true,\n                columnWidth: \"95%\",\n                endingShape: \"rounded\",\n              }}\n            />\n          </div>\n        </Modal>\n      )}\n      {/* end modal control */}\n    </React.Fragment>\n  );\n};\n\nexport default React.memo(DistrictCites);\n","import React, { FC } from \"react\";\nimport { FaUsers } from \"react-icons/fa\";\nimport { IoDocumentTextSharp } from \"react-icons/io5\";\nimport { MdFolderSpecial } from \"react-icons/md\";\nimport DashboardLabelItem from \"./DashboardLabelItem\";\n\ntype DashboardLabelProps = {\n  applicants: number;\n  applications: number;\n  positions: number;\n  allPositions?: number;\n  shortlisted: number;\n  rejected: number;\n};\n\nconst DashboardLabels: FC<DashboardLabelProps> = (props) => {\n  return (\n    <div className=\"grid lg:grid-cols-4 md:grid-cols-3 sm:grid-cols-2 grid-cols-1 gap-4 items-center mx-auto\">\n      <DashboardLabelItem\n        title=\"Applicants\"\n        icon={FaUsers}\n        iconColor=\"blue\"\n        count={props.applicants}\n      />\n\n      <DashboardLabelItem\n        title=\"Positions\"\n        icon={IoDocumentTextSharp}\n        iconColor=\"pink\"\n        count={props.positions}\n        countOver={props.allPositions}\n      />\n\n      <DashboardLabelItem\n        title=\"Applications\"\n        icon={MdFolderSpecial}\n        iconColor=\"indigo\"\n        count={props.applications}\n      />\n    </div>\n  );\n};\n\nexport default React.memo(DashboardLabels);\n","import React from \"react\";\nimport { AiFillDashboard } from \"react-icons/ai\";\nimport { MdBrightness1 } from \"react-icons/md\";\nimport { connect } from \"react-redux\";\nimport { PushPopupAlert } from \"../../actions\";\nimport { GetApplicationPerPeriod } from \"../../actions/dashboard\";\nimport { PopupAlertData } from \"../../components/Alert/Popup\";\nimport { SessionPlanInterface } from \"../../interfaces\";\nimport { education_category } from \"../../interfaces/education_category\";\nimport { PopupAlertTheme } from \"../../interfaces/popupAlert\";\nimport { errorToText } from \"../../utils/errors\";\n\ntype DashBoardTitleProps = {\n  reportTitle: string;\n  education_categories: education_category[] | null;\n  loading: boolean;\n  loadingApplications: boolean;\n  loadingEducation: boolean;\n  thisEducation: education_category | null;\n  allEducation: boolean;\n  periodChanged?: boolean;\n  setThisEducation: (value: education_category | null) => void;\n  thisPeriod: string;\n  setThisPeriod: (value: string) => void;\n  setPeriodChanged?: React.Dispatch<React.SetStateAction<boolean>>;\n  setLoadingApplications: (value: boolean) => void;\n  GetApplicationPerPeriod: Function;\n  PushPopupAlert: (alert: PopupAlertData) => void;\n  application_sessions: SessionPlanInterface[] | null;\n};\n\nconst DashBoardTitle: React.FC<DashBoardTitleProps> = (props) => {\n  return (\n    <div className=\"mt-3 rounded flex flex-col md:flex-row md:justify-between items-start\">\n      <div className=\"flex flex-row items-center gap-3 mb-2\">\n        <AiFillDashboard className=\"text-6xl text-blue-600 hidden md:block\" />\n        <div className=\"flex flex-col\">\n          <span className=\"text-blue-600 text-3xl font-bold\">\n            {props.reportTitle}\n          </span>\n        </div>\n      </div>\n\n      {/* FILTER SECTION PERIOD && EDUCATION */}\n      <section className=\"w-full md:w-auto my-2 md:my-0\">\n        {/* EDUCATION CATEGORY sections */}\n        <section>\n          {props.education_categories && props.education_categories.length > 0 && (\n            <div className=\"flex items-start md:items-center justify-start md:justify-end gap-2\">\n              {props.allEducation && (\n                <div\n                  className={`w-auto ${\n                    props.loading ||\n                    props.loadingApplications ||\n                    props.loadingEducation\n                      ? \"cursor-not-allowed\"\n                      : \"cursor-pointer\"\n                  } ${\n                    props.thisEducation === null\n                      ? \"bg-blue-500 text-white font-bold\"\n                      : \"bg-gray-100 text-blue-800\"\n                  } mb-1 hover:font-bold py-1 hover:bg-blue-400 hover:text-white --font-bold  px-2 rounded-md flex items-center animate__animated animate__zoomIn`}\n                  onClick={() =>\n                    !props.loading &&\n                    !props.loadingEducation &&\n                    props.setThisEducation(null)\n                  }\n                >\n                  <section className=\"flex-1\">\n                    <MdBrightness1 className=\"inline-block mr-1 text-xs\" />\n                    <span>All</span>\n                  </section>\n                </div>\n              )}\n              {props.education_categories.map((education, index) => (\n                <div\n                  key={education.education_institute_id + index}\n                  className={`w-auto ${\n                    props.loading ||\n                    props.loadingApplications ||\n                    props.loadingEducation\n                      ? \"cursor-not-allowed\"\n                      : \"cursor-pointer\"\n                  } ${\n                    props.thisEducation &&\n                    education.education_institute_id ===\n                      props.thisEducation.education_institute_id\n                      ? \"bg-blue-500 text-white font-bold\"\n                      : \"bg-gray-100 text-blue-800\"\n                  } mb-1 hover:font-bold py-1 hover:bg-blue-400 hover:text-white --font-bold  px-2 rounded-md flex items-center animate__animated animate__zoomIn`}\n                  onClick={() =>\n                    !props.loading &&\n                    !props.loadingApplications &&\n                    !props.loadingEducation &&\n                    props.setThisEducation(education)\n                  }\n                >\n                  <div className=\"flex-1\">\n                    <MdBrightness1 className=\"inline-block mr-1 text-xs\" />\n                    <span>{education.education_category_title}</span>\n                  </div>\n                </div>\n              ))}\n            </div>\n          )}\n        </section>\n        {/* end EDUCATION CATEGORY sections */}\n        <div className=\"mb-2\">\n          <select\n            className={`bg-white text-gray-600 border border-gray-400 rounded p-2 focus:outline-none ${\n              (props.loadingApplications ||\n                props.application_sessions === null) &&\n              \"cursor-wait\"\n            }`}\n            value={props.thisPeriod}\n            disabled={\n              props.loading ||\n              props.loadingApplications ||\n              props.loadingEducation ||\n              props.application_sessions === null\n            }\n            onChange={(e) => {\n              props.setThisPeriod(e.target.value);\n              props.setLoadingApplications(true);\n              props.GetApplicationPerPeriod(\n                e.target.value,\n                (status: boolean, msg: string) => {\n                  props.setLoadingApplications(status);\n                  if (!status && msg.length > 0) {\n                    props.PushPopupAlert({\n                      title: errorToText(msg),\n                      theme: PopupAlertTheme.danger,\n                    });\n                  }\n                }\n              );\n            }}\n          >\n            {props.application_sessions &&\n              props.application_sessions.map((session, item) => (\n                <option\n                  key={session.session_plan_id + item}\n                  value={session.session_plan_id}\n                >\n                  {session.session_plan_name}\n                </option>\n              ))}\n          </select>\n        </div>\n      </section>\n      {/* END FILTER SECTION PERIOD && EDUCATION */}\n    </div>\n  );\n};\n\nexport default React.memo(\n  connect(null, {\n    GetApplicationPerPeriod,\n    PushPopupAlert,\n  })(DashBoardTitle)\n);\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport {\n  Auth,\n  courseStoreInterface,\n  loadEducationCategories,\n  GetApplicationPerPeriod,\n  loadCourses,\n  PushPopupAlert,\n} from \"../../actions\";\nimport { getAllRoom } from \"../../actions/location\";\nimport { GetAllSessionPlans } from \"../../actions/session\";\nimport { getPositions } from \"../../actions/settings\";\nimport { PopupAlertData } from \"../../components/Alert/Popup\";\nimport {\n  education_category,\n  PositionAPI,\n  SessionPlanInterface,\n} from \"../../interfaces\";\nimport { ApplicationStates } from \"../../interfaces/application\";\nimport { PopupAlertTheme } from \"../../interfaces/popupAlert\";\nimport { StoreState } from \"../../reducers\";\nimport { DashboardReducerType } from \"../../reducers/dashboard\";\nimport {\n  ApplicationPeriodInterface,\n  LocationRoomTableInterface,\n  RoomLocationInterface,\n} from \"../../shared/interfaces\";\nimport { errorToText } from \"../../utils/errors\";\nimport NoSession from \"../SessionSettings/NoSession\";\nimport { LocationsInArray } from \"../UserManagement/UserList\";\nimport ApplicantsExam from \"./ChartComponents/ApplicantsExam\";\nimport ApplicationsGender from \"./ChartComponents/ApplicationsGender\";\nimport ApplicationsStatus from \"./ChartComponents/ApplicationsStatus\";\nimport DistrictCites from \"./ChartComponents/DistrictCites\";\nimport ChartGender from \"./ChartGender\";\nimport DashboardLabels from \"./DashboardLabels\";\nimport DashBoardTitle from \"./DashBoardTitle\";\n\ninterface AppProps {\n  auth: Auth;\n  locations: RoomLocationInterface[];\n  education_categories: education_category[] | null;\n  dashboard: DashboardReducerType;\n  systemPositions: PositionAPI[] | null;\n  application_sessions: SessionPlanInterface[] | null;\n  course: courseStoreInterface;\n  loadEducationCategories: (callback: (loading: boolean) => void) => void;\n  getAllRoom: Function;\n  GetAllSessionPlans: Function;\n  getPositions: Function;\n  GetApplicationPerPeriod: Function;\n  loadCourses: (callback: (loading: boolean) => void) => void;\n  PushPopupAlert: (alert: PopupAlertData) => void;\n}\n\ninterface AppState {\n  loading: boolean;\n  loadingEducation: boolean;\n  loadingApplications: boolean;\n  thisEducation: education_category | null;\n  thisPeriod: string;\n}\n\nclass Index extends Component<AppProps, AppState> {\n  constructor(props: AppProps) {\n    super(props);\n\n    this.state = {\n      loading: true,\n      loadingEducation: true,\n      loadingApplications: false,\n      thisEducation: null,\n      thisPeriod: \"\",\n    };\n  }\n\n  setLoading = (value: boolean) => {\n    this.setState({ loading: value });\n  };\n  setLoadingEducation = (value: boolean) => {\n    this.setState({ loadingEducation: value });\n  };\n  setLoadingApplications = (value: boolean) => {\n    this.setState({ loadingApplications: value });\n  };\n  setThisEducation = (value: education_category | null) => {\n    this.setState({ thisEducation: value });\n  };\n  setThisPeriod = (value: string) => {\n    this.setState({ thisPeriod: value });\n  };\n\n  componentDidMount = () => {\n    if (this.props.education_categories === null) {\n      this.props.loadEducationCategories(\n        (status: boolean, data?: education_category[]) => {\n          this.setLoadingEducation(status);\n          if (data && data.length > 0 && this.state.thisEducation === null) {\n            if (this.props.dashboard.applications === null) {\n              this.setLoadingEducation(status);\n              this.props.GetApplicationPerPeriod(\n                data[0].education_institute_id,\n                (status: boolean, msg: string) => {\n                  this.setLoadingEducation(status);\n                  if (!status && msg.length > 0) {\n                    this.props.PushPopupAlert({\n                      title: errorToText(msg),\n                      theme: PopupAlertTheme.danger,\n                    });\n                  }\n                }\n              );\n            }\n            this.setThisEducation(data[0]);\n          }\n        }\n      );\n    } else if (\n      this.props.education_categories &&\n      this.props.education_categories.length > 0 &&\n      this.state.thisEducation === null\n    ) {\n      if (this.props.dashboard.applications === null) {\n        this.setLoadingEducation(true);\n        this.props.GetApplicationPerPeriod(\n          this.props.education_categories[0].education_institute_id,\n          (status: boolean, msg: string) => {\n            this.setLoadingEducation(status);\n            if (!status && msg.length > 0) {\n              this.props.PushPopupAlert({\n                title: errorToText(msg),\n                theme: PopupAlertTheme.danger,\n              });\n            }\n          }\n        );\n      }\n      this.setThisEducation(this.props.education_categories[0]);\n    }\n\n    if (this.props.systemPositions === null) {\n      this.props.getPositions((status: boolean, msg: string) => {\n        this.setLoadingEducation(status);\n        if (msg.length) {\n          this.props.PushPopupAlert({\n            title: msg,\n            theme: PopupAlertTheme.danger,\n          });\n        }\n      });\n    }\n\n    if (this.props.application_sessions === null) {\n      this.props.GetAllSessionPlans(\n        (status: boolean, msg: string, data?: SessionPlanInterface[]) => {\n          this.setLoadingEducation(status);\n          if (!status && msg.length) {\n            this.props.PushPopupAlert({\n              title: msg,\n              theme: PopupAlertTheme.danger,\n            });\n          }\n\n          if (!status && data && data.length) {\n            let active_period: SessionPlanInterface | undefined,\n              periodId: string;\n            if (!this.state.thisPeriod.length) {\n              active_period = data.find((item) => item.is_active);\n              if (active_period) {\n                this.setThisPeriod(active_period.session_plan_id);\n                periodId = active_period.session_plan_id;\n              } else {\n                this.setThisPeriod(data[0].session_plan_id);\n                periodId = data[0].session_plan_id;\n              }\n            } else {\n              periodId = this.state.thisPeriod;\n            }\n            this.props.GetApplicationPerPeriod(\n              periodId,\n              (status: boolean, msg: string) => {\n                this.setLoadingEducation(status);\n                if (!status && msg.length > 0) {\n                  this.props.PushPopupAlert({\n                    title: errorToText(msg),\n                    theme: PopupAlertTheme.danger,\n                  });\n                }\n              }\n            );\n          }\n        }\n      );\n    } else if (\n      this.props.application_sessions &&\n      this.props.application_sessions.length > 0 &&\n      !this.state.thisPeriod.length\n    ) {\n      this.setLoadingEducation(true);\n      let active_period: SessionPlanInterface | undefined, periodId: string;\n      if (!this.state.thisPeriod.length) {\n        active_period = this.props.application_sessions.find(\n          (item) => item.is_active\n        );\n        if (active_period) {\n          this.setThisPeriod(active_period.session_plan_id);\n          periodId = active_period.session_plan_id;\n        } else {\n          this.setThisPeriod(\n            this.props.application_sessions[0].session_plan_id\n          );\n          periodId = this.props.application_sessions[0].session_plan_id;\n        }\n      } else {\n        periodId = this.state.thisPeriod;\n      }\n      this.props.GetApplicationPerPeriod(\n        periodId,\n        (status: boolean, msg: string) => {\n          this.setLoadingEducation(status);\n          if (!status && msg.length > 0) {\n            this.props.PushPopupAlert({\n              title: errorToText(msg),\n              theme: PopupAlertTheme.danger,\n            });\n          }\n        }\n      );\n    }\n\n    if (!this.props.locations.length && this.state.loading) {\n      this.props.getAllRoom((status: boolean, msg: string) => {\n        this.setLoading(status);\n        if (!status && msg.length > 0) console.error(msg);\n      });\n    } else {\n      this.setLoading(false);\n    }\n\n    if (this.props.course.courses === null) {\n      this.setLoadingEducation(true);\n      this.props.loadCourses(this.setLoadingEducation);\n    } else {\n      this.setLoadingEducation(false);\n    }\n  };\n\n  getPositionsByInstitute = (): {\n    data: PositionAPI[];\n    ids: string[];\n  } => {\n    let ids: string[] = [],\n      data: PositionAPI[] = [];\n    if (this.props.systemPositions && this.state.thisEducation) {\n      data = this.props.systemPositions.filter(\n        (item) =>\n          item.education_institute_id.education_institute_id ===\n          this.state.thisEducation!.education_institute_id\n      );\n\n      data.forEach((element) => {\n        ids.push(element.position_id);\n      });\n    }\n    // console.log(\"====================================\");\n    // console.log({ systemPositions: data });\n    // console.log(\"====================================\");\n    return { data, ids };\n  };\n\n  getApplicationsByInsitutes = (\n    status: \"ALL\" | ApplicationStates = \"ALL\"\n  ): {\n    data: ApplicationPeriodInterface[];\n    ids: string[];\n    uids: string[];\n    positions: string[];\n  } => {\n    let result: ApplicationPeriodInterface[] = [],\n      ids: string[] = [],\n      uids: string[] = [];\n    let position: string[] = [];\n\n    if (this.props.dashboard.applications && this.state.thisEducation) {\n      result = this.props.dashboard.applications.filter((item) =>\n        this.getPositionsByInstitute().ids.includes(item.position)\n      );\n\n      for (const key in result) {\n        if (Object.prototype.hasOwnProperty.call(result, key)) {\n          if (position.includes(result[key].position)) continue;\n          position.push(result[key].position);\n        }\n      }\n\n      let data: ApplicationPeriodInterface[] = [];\n      if (status !== \"ALL\") {\n        data = result.filter((item) => item.application_status === status);\n      } else if (status === \"ALL\") {\n        data = result;\n      }\n\n      data.forEach((element) => {\n        ids.push(element._id);\n        if (!uids.includes(element.user_id)) uids.push(element.user_id);\n      });\n      return { data, ids, uids, positions: position };\n    }\n    return { data: result, ids, uids, positions: position };\n  };\n\n  getAllApplicantByInsitute = (gender: \"ALL\" | \"M\" | \"F\" = \"ALL\") => {\n    let ids: string[] = [],\n      data: ApplicationPeriodInterface[] = [];\n    if (this.state.thisEducation) {\n      if (gender === \"M\") {\n        data = this.getApplicationsByInsitutes().data.filter(\n          (item) =>\n            this.getApplicationsByInsitutes().uids.includes(item.user_id) &&\n            item.userInfo.user_info.sex === \"M\"\n        );\n      } else if (gender === \"F\") {\n        data = this.getApplicationsByInsitutes().data.filter(\n          (item) =>\n            this.getApplicationsByInsitutes().uids.includes(item.user_id) &&\n            item.userInfo.user_info.sex === \"F\"\n        );\n      } else {\n        data = this.getApplicationsByInsitutes().data.filter((item) =>\n          this.getApplicationsByInsitutes().uids.includes(item.user_id)\n        );\n      }\n    }\n    return { data, ids };\n  };\n\n  FC_DistinctDistrict = (): {\n    distinctDistricts: LocationRoomTableInterface[];\n    distinctDistrictNames: string[];\n    distinctDistrictIds: string[];\n    capacity: {\n      name: string;\n      data: number[];\n    }[];\n  } => {\n    var flags: string[] = [],\n      names: string[] = [],\n      output: LocationRoomTableInterface[] = [],\n      capacity: number = 0,\n      occupied: number = 0,\n      l: number = LocationsInArray(this.props.locations).length,\n      i: number,\n      allcapacity: { all: number; occupied: number }[] = [],\n      datCapacity: {\n        name: string;\n        data: number[];\n      }[] = [],\n      dataCapacity: number[] = [],\n      dataOccupied: number[] = [];\n    for (i = 0; i < l; i++) {\n      if (flags.includes(LocationsInArray(this.props.locations)[i].district_id))\n        continue;\n      flags.push(LocationsInArray(this.props.locations)[i].district_id);\n      names.push(LocationsInArray(this.props.locations)[i].district_name);\n      output.push(LocationsInArray(this.props.locations)[i]);\n    }\n\n    // DISTRICT CAPACITY CONTROLLER\n    for (const key in flags) {\n      if (Object.prototype.hasOwnProperty.call(flags, key)) {\n        let centerLevel: LocationRoomTableInterface[] = LocationsInArray(\n          this.props.locations\n        ).filter((d) => d.district_id === flags[key]);\n\n        for (const key_2 in centerLevel) {\n          if (\n            Object.prototype.hasOwnProperty.call(centerLevel, key_2) &&\n            centerLevel[key_2].room_name !== \"0\"\n          ) {\n            capacity += centerLevel[key_2].capacity;\n            if (occupied < centerLevel[key_2].occupied)\n              occupied = centerLevel[key_2].occupied;\n          }\n        }\n        allcapacity.push({\n          all: capacity,\n          occupied: occupied,\n        });\n        dataCapacity.push(capacity);\n        dataOccupied.push(occupied);\n        capacity = 0;\n        occupied = 0;\n      }\n    }\n    datCapacity.push(\n      {\n        name: \"Capacity\",\n        data: dataCapacity,\n      },\n      {\n        name: \"Occupied\",\n        data: dataOccupied,\n      }\n    );\n\n    return {\n      distinctDistricts: output,\n      distinctDistrictNames: names,\n      distinctDistrictIds: flags,\n      capacity: datCapacity,\n    };\n  };\n\n  FC_CentersInDistrict = (\n    district_id: string\n  ): {\n    names: string[];\n    ids: string[];\n    capacity: { all: number; occupied: number }[];\n  } => {\n    let centersIdInDistrict: string[] = [],\n      centersNamesInDistrict: string[] = [],\n      capacity: number = 0,\n      occupied: number = 0;\n    let districtData: LocationRoomTableInterface[] = LocationsInArray(\n        this.props.locations\n      ).filter((d) => d.district_id === district_id),\n      l: number = districtData.length,\n      i: number;\n    for (i = 0; i < l; i++) {\n      if (centersIdInDistrict.includes(districtData[i].center_id)) continue;\n      centersIdInDistrict.push(districtData[i].center_id);\n      centersNamesInDistrict.push(districtData[i].center_name);\n      capacity += districtData[i].capacity;\n      if (occupied < districtData[i].occupied)\n        occupied = districtData[i].occupied;\n    }\n\n    return {\n      ids: centersIdInDistrict,\n      names: centersNamesInDistrict,\n      capacity: [{ all: capacity, occupied: occupied }],\n    };\n  };\n\n  FC_SelectedPositions = (): {\n    data: PositionAPI[];\n    dataNames: string[];\n    ids: string[];\n    applications: ApplicationPeriodInterface[];\n  } => {\n    let ids: string[] = [],\n      data: PositionAPI[] = [],\n      selectedPosition: PositionAPI[] = [],\n      neededPosition: PositionAPI[] = [],\n      neededPositionIds: string[] = [],\n      dataNames: string[] = [],\n      defaultApplications: ApplicationPeriodInterface[] =\n        this.getApplicationsByInsitutes().data,\n      applications: ApplicationPeriodInterface[] = [];\n    if (this.props.systemPositions && this.state.thisEducation) {\n      selectedPosition = this.props.systemPositions.filter(\n        (item) =>\n          item.education_institute_id.education_institute_id ===\n            this.state.thisEducation!.education_institute_id &&\n          item.isPublished &&\n          !item.isDeleted\n      );\n\n      selectedPosition.forEach((element) => {\n        if (!ids.includes(element.position_id)) {\n          data.push(element);\n          dataNames.push(element.position_title);\n          ids.push(element.position_id);\n        }\n      });\n    }\n\n    for (const key in selectedPosition) {\n      if (Object.prototype.hasOwnProperty.call(selectedPosition, key)) {\n        let thisApplicationFound: ApplicationPeriodInterface[] =\n          defaultApplications.filter(\n            (item) => item.position === selectedPosition[key].position_id\n          );\n        if (thisApplicationFound.length > 0) {\n          thisApplicationFound.forEach((element) => {\n            applications.push(element);\n          });\n        }\n        if (!neededPositionIds.includes(selectedPosition[key].position_id)) {\n          neededPositionIds.push(selectedPosition[key].position_id);\n          neededPosition.push(selectedPosition[key]);\n        }\n      }\n    }\n    return { data: neededPosition, dataNames, applications, ids };\n  };\n\n  FC_Count = (\n    ApplicationPeriod: ApplicationPeriodInterface[]\n  ): {\n    male: number;\n    female: number;\n  } => {\n    // props.dashboard.userInfo;\n    let male: number = 0,\n      female: number = 0;\n    for (const key in ApplicationPeriod) {\n      if (Object.prototype.hasOwnProperty.call(ApplicationPeriod, key)) {\n        if (this.props.dashboard.userInfo) {\n          let result = this.props.dashboard.userInfo.filter(\n            (item) => item.user_id === ApplicationPeriod[key].user_id\n          );\n          if (result[0].user_info.sex === \"M\") {\n            male += 1;\n          } else {\n            female += 1;\n          }\n        }\n      }\n    }\n\n    return { male, female };\n  };\n\n  FC_GetUserByGender = (): {\n    male: number[];\n    female: number[];\n  } => {\n    let male: number = 0,\n      female: number = 0,\n      maleArray: number[] = [],\n      femaleArray: number[] = [];\n\n    for (const positionKey in this.FC_SelectedPositions().data) {\n      if (\n        Object.prototype.hasOwnProperty.call(\n          this.FC_SelectedPositions().data,\n          positionKey\n        )\n      ) {\n        let apps = this.FC_SelectedPositions().applications.filter(\n          (app) =>\n            app.position ===\n            this.FC_SelectedPositions().data[positionKey].position_id\n        );\n\n        // LOOP THROUGH APPLICATIONS\n        for (const key in apps) {\n          if (Object.prototype.hasOwnProperty.call(apps, key)) {\n            if (apps[key].userInfo.user_info.sex === \"M\") {\n              male += 1;\n            } else {\n              female += 1;\n            }\n          }\n        }\n        maleArray.push(male);\n        femaleArray.push(female);\n        male = 0;\n        female = 0;\n      }\n    }\n    console.log(\"====================================\");\n    console.log({\n      positions: this.FC_SelectedPositions().data.length,\n      genders: maleArray.length,\n    });\n    console.log(\"====================================\");\n    return { male: maleArray, female: femaleArray };\n  };\n\n  render() {\n    if (\n      this.props.application_sessions === null ||\n      this.props.education_categories === null ||\n      this.props.dashboard.applications === null ||\n      this.props.systemPositions === null ||\n      this.state.loading ||\n      this.state.loadingEducation\n    ) {\n      return (\n        <div className=\"text-center mt-7 font-bold text-4xl text-gray-400 animate-pulse\">\n          Loading Data...\n        </div>\n      );\n    }\n\n    if (this.props.application_sessions.length === 0) {\n      return <NoSession />;\n    }\n\n    return (\n      <div>\n        {/* HEADER TITLE */}\n        <DashBoardTitle\n          education_categories={this.props.education_categories}\n          loading={this.state.loading}\n          loadingApplications={this.state.loadingApplications}\n          loadingEducation={this.state.loadingEducation}\n          thisEducation={this.state.thisEducation}\n          setThisEducation={this.setThisEducation}\n          thisPeriod={this.state.thisPeriod}\n          setThisPeriod={this.setThisPeriod}\n          application_sessions={this.props.application_sessions}\n          setLoadingApplications={this.setLoadingApplications}\n          reportTitle={\"Application Dashboard\"}\n          allEducation={false}\n        />\n        {/* END HEADER TITLE */}\n\n        <DashboardLabels\n          applicants={this.getAllApplicantByInsitute().ids.length}\n          applications={this.getApplicationsByInsitutes().data.length}\n          shortlisted={\n            this.getApplicationsByInsitutes(ApplicationStates.Shortlisted).data\n              .length\n          }\n          rejected={\n            this.getApplicationsByInsitutes(ApplicationStates.Rejected).data\n              .length\n          }\n          positions={this.getApplicationsByInsitutes().positions.length}\n          allPositions={\n            this.getPositionsByInstitute().data.filter(\n              (item) => item.isPublished\n            ).length\n          }\n        />\n\n        {/* CHARTS SECTIONS NUMBER OF APPLICATION - STATUS ==================================== */}\n        {this.props.dashboard.userInfo && (\n          <ApplicationsStatus\n            FC_ApplicationsByInsitutes={this.getApplicationsByInsitutes}\n            chartHeight={450}\n          />\n        )}\n        {/* END CHARTS SECTIONS NUMBER OF APPLICATION - STATUS ================================ */}\n\n        {/* CHARTS SECTIONS NUMBER OF APPLICANTS - EXAM ==================================== */}\n        <ApplicantsExam\n          FC_CentersInDistrict={this.FC_CentersInDistrict}\n          FC_DistinctDistrict={this.FC_DistinctDistrict}\n          FC_Count={this.FC_Count}\n          loading={this.state.loading}\n          loadingApplications={this.state.loadingApplications}\n          loadingEducation={this.state.loadingEducation}\n          dashboard={this.props.dashboard}\n          chartHeight={500}\n        />\n        {/* END CHARTS SECTIONS NUMBER OF APPLICANTS - EXAM ================================ */}\n\n        {/* CHARTS SECTIONS DISTRICT CITES CAPACITY VS OCCUPIED ==================================== */}\n        <DistrictCites\n          FC_CentersInDistrict={this.FC_CentersInDistrict}\n          FC_DistinctDistrict={this.FC_DistinctDistrict}\n          FC_Count={this.FC_Count}\n          loading={this.state.loading}\n          locations={this.props.locations}\n          loadingApplications={this.state.loadingApplications}\n          loadingEducation={this.state.loadingEducation}\n          dashboard={this.props.dashboard}\n          FC_GetPositionsByInstitute={this.getPositionsByInstitute}\n          chartHeight={500}\n        />\n        {/* END CHARTS SECTIONS DISTRICT CITES CAPACITY VS OCCUPIED ================================ */}\n\n        {/* CHARTS SECTIONS NUMBER OF APPLICATION - GENDER - Position ==================================== */}\n        <ApplicationsGender\n          // FC_SelectedPositions={this.FC_SelectedPositions}\n          positionNames={this.FC_SelectedPositions().dataNames}\n          thisSeries={[\n            {\n              name: \"Male\",\n              data: this.FC_GetUserByGender().male,\n            },\n            {\n              name: \"Female\",\n              data: this.FC_GetUserByGender().female,\n            },\n          ]}\n        />\n        {/* END CHARTS SECTIONS NUMBER OF APPLICATION - GENDER - Position ================================ */}\n\n        {/* CHARTS SECTIONS GENDER && AGE ======================================= */}\n        <ChartGender\n          getAllApplicantByInsitute={this.getAllApplicantByInsitute}\n        />\n        {/* END CHARTS SECTIONS GENDER && AGE ======================================= */}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = ({\n  auth,\n  locations,\n  schoolLevels,\n  dashboard,\n  course,\n  system_settings,\n  sessionPlan,\n}: StoreState): {\n  auth: Auth;\n  locations: RoomLocationInterface[];\n  education_categories: education_category[] | null;\n  dashboard: DashboardReducerType;\n  systemPositions: PositionAPI[] | null;\n  course: courseStoreInterface;\n  application_sessions: SessionPlanInterface[] | null;\n} => {\n  return {\n    auth: auth,\n    locations: locations.roomLocation,\n    education_categories: schoolLevels.education_categories,\n    dashboard,\n    course: course,\n    systemPositions: system_settings.systemPositions,\n    application_sessions: sessionPlan.allSessionPlans,\n  };\n};\n\nexport const AdminDashboard = connect(mapStateToProps, {\n  getAllRoom,\n  loadEducationCategories,\n  getPositions,\n  GetAllSessionPlans,\n  GetApplicationPerPeriod,\n  loadCourses,\n  PushPopupAlert,\n})(Index);\n","import { education_category } from \"../interfaces\";\nimport { PositionAPI } from \"../interfaces/position\";\nimport {\n  CustomeAccessInterface,\n  PostSchoolInterface,\n  RoleToUserInterface,\n  SchoolInfoInterface,\n  SystemUserRoleInterface,\n} from \"./interfaces\";\n\nexport const data_posts_school: PostSchoolInterface[] = [];\n\nexport const isEmptyOrSpaces = (str: string): boolean => {\n  return str === null || str.match(/^ *$/) !== null;\n};\n\nexport const getUserTitle = (\n  accessRoles: SystemUserRoleInterface[],\n  roleId: string\n): string => {\n  const result = accessRoles.find((e) => e.system_user_role_id === roleId);\n  return result ? result.role : \"\";\n};\n\nexport const getRoleById = (\n  roles: SystemUserRoleInterface[],\n  roleId: string\n): SystemUserRoleInterface => {\n  return roles.filter((role) => role.system_user_role_id === roleId)[0];\n};\n\nexport const getInstituteById = (\n  institutes: education_category[],\n  instituteId: string\n): education_category | undefined => {\n  return institutes.find((item) => item.education_institute_id === instituteId);\n};\n\nexport const getPositionById_old = (\n  positions: PositionAPI[],\n  position_id: string\n): PositionAPI => {\n  console.log({\n    positions,\n    position_id,\n    data: positions.filter(\n      (position) => position.position_id === position_id\n    )[0],\n  });\n  return positions.filter(\n    (position) => position.position_id === position_id\n  )[0];\n};\n\nexport const getPositionById = (\n  positions: PositionAPI[],\n  position_id: string\n): PositionAPI | undefined => {\n  return positions.find((position) => position.position_id === position_id);\n};\n\nexport const getSchoolById = (\n  schools: SchoolInfoInterface[],\n  school_id: string\n): SchoolInfoInterface => {\n  return schools.filter((school) => school.school_id === school_id)[0];\n};\n\nexport const getPostById = (\n  posts: PostSchoolInterface[],\n  post_id: string\n): PostSchoolInterface => {\n  return posts.filter((post) => post.school_id === post_id)[0];\n};\n\nexport const getPostsBySchoolId = (\n  posts: PostSchoolInterface[],\n  school_id: string\n): PostSchoolInterface[] => {\n  return posts.filter((post) => post.school_id === school_id);\n};\n\nexport const getPostsByIds = (\n  posts: PostSchoolInterface[],\n  school_id: string,\n  position_id: string\n): PostSchoolInterface[] => {\n  return posts.filter(\n    (post) => post.school_id === school_id && post.position_id === position_id\n  );\n};\n\nexport const displayDate = (dateToDisplay: Date): string => {\n  return new Intl.DateTimeFormat(\"en-GB\", {\n    year: \"numeric\",\n    month: \"long\",\n    day: \"2-digit\",\n  }).format(dateToDisplay);\n};\n\nexport const userAccess = (\n  defaultAccess: RoleToUserInterface,\n  customAccess: CustomeAccessInterface\n): RoleToUserInterface => {\n  // const data = defaultAccess.access.map((default,index,customAccess)=>{\n  //   let data_custom = customAccess\n  //   if\n  // })\n  // return customAccess.filter((custom) => custom.id === accecc_id)[0];\n  return defaultAccess;\n};\n\n// export const groupBy = (list: [], keyGetter: Function) => {\n//   const map = new Map();\n//   list.forEach((item) => {\n//     const key = keyGetter(item);\n//     const collection = map.get(key);\n//     if (!collection) {\n//       map.set(key, [item]);\n//     } else {\n//       collection.push(item);\n//     }\n//   });\n//   return map;\n// };\n\nexport const toTwoDigit = (value: number): string => {\n  var dec = value - Math.floor(value);\n  value = value - dec;\n  return (\"0\" + value).slice(-2) + dec.toString().substr(1);\n};\n\nexport const toAnyDigit = (\n  value: string | number,\n  padding: number = 3\n): string => {\n  var zeroes = new Array(padding + 1).join(\"0\");\n  return (zeroes + value).slice(-padding);\n};\n\nexport const capitalizeFirstLetter = (value: string): string => {\n  return value.charAt(0).toUpperCase() + value.slice(1);\n};\n\nexport const isDateExpiried = (paramDate: string) => {\n  const thisDate = new Date(paramDate);\n  const today = new Date();\n  if (thisDate.getTime() < today.getTime()) {\n    return true;\n  }\n\n  return false;\n};\n","import axios from \"axios\";\nimport { Dispatch } from \"redux\";\nimport { ActionTypes } from \"./types\";\nimport { API } from \"../utils/api\";\nimport {\n  CentersInterface,\n  DistrictInterface,\n  RoomLocationInterface,\n  RoomsInterface,\n  SectorInterface,\n} from \"../shared/interfaces\";\nimport { errorToText } from \"../utils/errors\";\nimport { LocationAPI } from \".\";\n\n/**\n * * ****************************** INTERFACES *****************************\n */\n\nexport interface getAllRoomActions {\n  type: ActionTypes.GET_ALL_ROOM;\n  payload: RoomLocationInterface[];\n}\n\nexport interface createProvinceActions {\n  type: ActionTypes.CREATE_PROVINCE;\n  payload: RoomLocationInterface;\n}\n\nexport interface updateProvinceActions {\n  type: ActionTypes.UPDATE_PROVINCE;\n  payload: {\n    province_id: string;\n    province_name: string;\n    provice_code: number;\n  };\n}\n\nexport interface deleteProvinceActions {\n  type: ActionTypes.DELETE_PROVINCE;\n  payload: string;\n}\n\n// ============ DISTRICT =================\nexport interface createDistrictActions {\n  type: ActionTypes.CREATE_DISTRICT;\n  payload: { province_id: string; data: DistrictInterface };\n}\n\nexport interface updateDistrictActions {\n  type: ActionTypes.UPDATE_DISTRICT;\n  payload: {\n    province_id: string;\n    district_id: string;\n    district_name: string;\n    district_code: number;\n  };\n}\n\nexport interface deleteDistrictActions {\n  type: ActionTypes.DELETE_DISTRICT;\n  payload: { province_id: string; district_id: string };\n}\n\n// ============ SECTOR =================\nexport interface createSectorActions {\n  type: ActionTypes.CREATE_SECTOR;\n  payload: {\n    province_id: string;\n    district_id: string;\n    data: SectorInterface;\n  };\n}\n\nexport interface updateSectorActions {\n  type: ActionTypes.UPDATE_SECTOR;\n  payload: {\n    province_id: string;\n    district_id: string;\n    sector_id: string;\n    sector_name: string;\n    sector_code: number;\n  };\n}\n\nexport interface deleteSectorActions {\n  type: ActionTypes.DELETE_SECTOR;\n  payload: { province_id: string; district_id: string; sector_id: string };\n}\n\n// ============ CENTERS =================\nexport interface createCenterActions {\n  type: ActionTypes.CREATE_CENTER;\n  payload: {\n    province_id: string;\n    district_id: string;\n    data: CentersInterface;\n  };\n}\n\nexport interface updateCenterActions {\n  type: ActionTypes.UPDATE_CENTER;\n  payload: {\n    province_id: string;\n    district_id: string;\n    examination_center_id: string;\n    center_name: string;\n  };\n}\n\nexport interface deleteCenterActions {\n  type: ActionTypes.DELETE_CENTER;\n  payload: { province_id: string; district_id: string; center_id: string };\n}\n\n// ============ ROOMS =================\nexport interface createRoomActions {\n  type: ActionTypes.CREATE_ROOM;\n  payload: {\n    province_id: string;\n    district_id: string;\n    center_id: string;\n    data: RoomsInterface;\n  };\n}\n\nexport interface updateRoomActions {\n  type: ActionTypes.UPDATE_ROOM;\n  payload: {\n    province_id: string;\n    district_id: string;\n    center_id: string;\n    room_id: string;\n    room_number: number;\n    capacity: number;\n  };\n}\n\nexport interface deleteRoomActions {\n  type: ActionTypes.DELETE_ROOM;\n  payload: {\n    province_id: string;\n    district_id: string;\n    center_id: string;\n    room_id: string;\n  };\n}\n\nexport interface GetWaitingLocationListAction {\n  type: ActionTypes.GET_LOCATION_WAITING_LIST;\n  payload: LocationAPI;\n}\n\nexport type RoomActionType =\n  | getAllRoomActions\n  | createProvinceActions\n  | updateProvinceActions\n  | deleteProvinceActions\n  | createDistrictActions\n  | updateDistrictActions\n  | deleteDistrictActions\n  | createSectorActions\n  | updateSectorActions\n  | deleteSectorActions\n  | createCenterActions\n  | updateCenterActions\n  | deleteCenterActions\n  | createRoomActions\n  | updateRoomActions\n  | deleteRoomActions\n  | GetWaitingLocationListAction;\n\n/**\n * * ****************************** ACTIONS *****************************\n */\n\nexport const getAllRoom = (callback: Function) => {\n  return async (dispatch: Dispatch) => {\n    callback(true, \"\");\n    try {\n      const res = await axios.get<RoomLocationInterface[]>(\n        `${API.APPLICATION}/roomlocation`\n      );\n      dispatch<getAllRoomActions>({\n        type: ActionTypes.GET_ALL_ROOM,\n        payload: res.data,\n      });\n      console.log(\"====================================\");\n      console.log({ res: res.data });\n      console.log(\"====================================\");\n      callback(false, \"\", res.data);\n    } catch (error) {\n      console.error(\"Err: \", error);\n      callback(false, errorToText(error));\n    }\n  };\n};\n\nexport const FC_CreateProvince = (data: RoomLocationInterface) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<createProvinceActions>({\n      type: ActionTypes.CREATE_PROVINCE,\n      payload: data,\n    });\n  };\n};\n\nexport const FC_UpdateProvince = (data: {\n  province_id: string;\n  province_name: string;\n  provice_code: number;\n}) => {\n  console.log({ data });\n  return async (dispatch: Dispatch) => {\n    dispatch<updateProvinceActions>({\n      type: ActionTypes.UPDATE_PROVINCE,\n      payload: data,\n    });\n  };\n};\n\nexport const FC_DeleteProvince = (data: string) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<deleteProvinceActions>({\n      type: ActionTypes.DELETE_PROVINCE,\n      payload: data,\n    });\n  };\n};\n\n// DISTRICT =================\nexport const FC_CreateDistrict = (data: {\n  province_id: string;\n  data: DistrictInterface;\n}) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<createDistrictActions>({\n      type: ActionTypes.CREATE_DISTRICT,\n      payload: data,\n    });\n  };\n};\n\nexport const FC_UpdateDistrict = (data: {\n  province_id: string;\n  district_id: string;\n  district_name: string;\n  district_code: number;\n}) => {\n  console.log({ data });\n  return async (dispatch: Dispatch) => {\n    dispatch<updateDistrictActions>({\n      type: ActionTypes.UPDATE_DISTRICT,\n      payload: data,\n    });\n  };\n};\n\nexport const FC_DeleteDistrict = (data: {\n  province_id: string;\n  district_id: string;\n}) => {\n  console.log({ data });\n  return async (dispatch: Dispatch) => {\n    dispatch<deleteDistrictActions>({\n      type: ActionTypes.DELETE_DISTRICT,\n      payload: data,\n    });\n  };\n};\n\n// SECTOR =================\nexport const FC_CreateSector = (data: {\n  province_id: string;\n  district_id: string;\n  data: SectorInterface;\n}) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<createSectorActions>({\n      type: ActionTypes.CREATE_SECTOR,\n      payload: data,\n    });\n  };\n};\n\nexport const FC_UpdateSector = (data: {\n  province_id: string;\n  district_id: string;\n  sector_id: string;\n  sector_name: string;\n  sector_code: number;\n}) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<updateSectorActions>({\n      type: ActionTypes.UPDATE_SECTOR,\n      payload: data,\n    });\n  };\n};\n\nexport const FC_DeleteSector = (data: {\n  province_id: string;\n  district_id: string;\n  sector_id: string;\n}) => {\n  console.log({ data });\n  return async (dispatch: Dispatch) => {\n    dispatch<deleteSectorActions>({\n      type: ActionTypes.DELETE_SECTOR,\n      payload: data,\n    });\n  };\n};\n\n// CENTERS =================\nexport const FC_CreateCenter = (data: {\n  province_id: string;\n  district_id: string;\n  data: CentersInterface;\n}) => {\n  console.log({ data });\n  return async (dispatch: Dispatch) => {\n    dispatch<createCenterActions>({\n      type: ActionTypes.CREATE_CENTER,\n      payload: data,\n    });\n  };\n};\n\nexport const FC_UpdateCenter = (data: {\n  province_id: string;\n  district_id: string;\n  examination_center_id: string;\n  center_name: string;\n}) => {\n  console.log({ data });\n  return async (dispatch: Dispatch) => {\n    dispatch<updateCenterActions>({\n      type: ActionTypes.UPDATE_CENTER,\n      payload: data,\n    });\n  };\n};\n\nexport const FC_DeleteCenter = (data: {\n  province_id: string;\n  district_id: string;\n  center_id: string;\n}) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<deleteCenterActions>({\n      type: ActionTypes.DELETE_CENTER,\n      payload: data,\n    });\n  };\n};\n\n// ROOM =================\nexport const FC_CreateRoom = (data: {\n  province_id: string;\n  district_id: string;\n  center_id: string;\n  data: RoomsInterface;\n}) => {\n  console.log({ data });\n  return async (dispatch: Dispatch) => {\n    dispatch<createRoomActions>({\n      type: ActionTypes.CREATE_ROOM,\n      payload: data,\n    });\n  };\n};\n\nexport const FC_UpdateRoom = (data: {\n  province_id: string;\n  district_id: string;\n  center_id: string;\n  room_id: string;\n  room_number: number;\n  capacity: number;\n}) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<updateRoomActions>({\n      type: ActionTypes.UPDATE_ROOM,\n      payload: data,\n    });\n  };\n};\n\nexport const FC_DeleteRoom = (data: {\n  province_id: string;\n  district_id: string;\n  center_id: string;\n  room_id: string;\n}) => {\n  console.log({ delete_room: data });\n  return async (dispatch: Dispatch) => {\n    dispatch<deleteRoomActions>({\n      type: ActionTypes.DELETE_ROOM,\n      payload: data,\n    });\n  };\n};\n\n// GET LOCATION FOR WAITING LIST\nexport type FT_GetWaitingLocationList = (locations: LocationAPI) => void;\nexport const FC_GetWaitingLocationList = (locations: LocationAPI) => {\n  return (dispatch: Dispatch) => {\n    dispatch<GetWaitingLocationListAction>({\n      type: ActionTypes.GET_LOCATION_WAITING_LIST,\n      payload: locations,\n    });\n  };\n};\n","import React, { useEffect, useState } from \"react\";\nimport { BiSort } from \"react-icons/bi\";\nimport { MdNavigateBefore, MdNavigateNext, MdSearch } from \"react-icons/md\";\n\nconst FC_makeID = (length: number = 5): string => {\n  let result: string = \"\";\n  let characters: string =\n    \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\n  let charactersLength = characters.length;\n  for (let i: number = 0; i < length; i++) {\n    result += characters.charAt(Math.floor(Math.random() * charactersLength));\n  }\n  return result;\n};\n\nexport const sortThisColumn = (\n  tableId: string,\n  colIndex: number = 0,\n  dir: \"asc\" | \"desc\" = \"asc\"\n) => {\n  var table,\n    rows,\n    switching,\n    i,\n    x,\n    y,\n    shouldSwitch,\n    switchcount = 0;\n  table = document.getElementById(tableId) as HTMLTableElement;\n  switching = true;\n  /* Make a loop that will continue until\n  no switching has been done: */\n  if (table) {\n    while (switching) {\n      //start by saying: no switching is done:\n      switching = false;\n      rows = table.rows;\n      /*Loop through all table rows (except the\n    first, which contains table headers):*/\n      for (i = 1; i < rows.length - 1; i++) {\n        //start by saying there should be no switching:\n        shouldSwitch = false;\n        /*Get the two elements you want to compare,\n      one from current row and one from the next:*/\n        x = rows[i].getElementsByTagName(\"TD\")[colIndex];\n        y = rows[i + 1].getElementsByTagName(\"TD\")[colIndex];\n        /*check if the two rows should switch place,\n      based on the direction, asc or desc:*/\n        if (dir === \"asc\" && x && y) {\n          if (x.innerHTML.toLowerCase() > y.innerHTML.toLowerCase()) {\n            //if so, mark as a switch and break the loop:\n            shouldSwitch = true;\n            break;\n          }\n        } else if (dir === \"desc\" && x && y) {\n          if (x.innerHTML.toLowerCase() < y.innerHTML.toLowerCase()) {\n            //if so, mark as a switch and break the loop:\n            shouldSwitch = true;\n            break;\n          }\n        }\n      }\n      if (shouldSwitch && rows[i].parentNode) {\n        /*If a switch has been marked, make the switch\n      and mark that a switch has been done:*/\n        rows[i].parentNode!.insertBefore(rows[i + 1], rows[i]);\n        switching = true;\n        //Each time a switch is done, increase this count by 1:\n        switchcount++;\n      } else {\n        /*If no switching has been done AND the direction is \"asc\",\n      set the direction to \"desc\" and run the while loop again.*/\n        if (switchcount === 0 && dir === \"asc\") {\n          dir = \"desc\";\n          switching = true;\n        }\n      }\n      // if (i === 0) continue;\n      // rows.cells[i].style.backgroundColor = \"blue\";\n    }\n  }\n};\n\nexport interface TableColumnsInterface {\n  columnTitle: JSX.Element | string;\n  alignText: string;\n  padding?: string;\n  isSortAllowed?: boolean;\n}\n\ninterface TableProps {\n  columns: TableColumnsInterface[];\n  rows: Function;\n  hideColumns?: boolean;\n  pagination?: boolean;\n  search?: boolean;\n  tableSize?: string;\n  tableClass?: string;\n  tableId?: string;\n  rounded?: boolean;\n  searchBG?: string;\n  thColor?: string;\n  loading?: boolean;\n}\n\nconst Table: React.FC<TableProps> = (props) => {\n  const startPage = 1;\n  const tableId =\n    !props.tableId || props.tableId === \"myTable\" ? FC_makeID() : props.tableId;\n  let table: HTMLElement, tr: HTMLCollectionOf<HTMLTableRowElement>;\n  const [totalItems, setTotalItems] = useState<number>(0);\n  const [totalPages, setTotalPages] = useState<number>(1);\n  const [currentPage, setCurrentPage] = useState<number>(1);\n  const [pages, setPages] = useState<number[]>();\n  const [pageSize, setPageSize] = useState<number>(10);\n  const [startIndex, setStartIndex] = useState<number>(0);\n  const [endIndex, setEndIndex] = useState<number>(0);\n\n  useEffect(() => {\n    props.pagination && tablePagination();\n  });\n\n  const filterTable = (\n    data: string,\n    filterType?: \"default\" | \"field\"\n  ): void => {\n    var filter, tr, td, rows: number, cols: number, txtValue;\n    if (filterType === \"field\" && data === \"all\") data = \"\";\n    filter = data.toLowerCase();\n    table = document.getElementById(tableId!)!;\n    tr = table.getElementsByTagName(\"tr\");\n    for (rows = 0; rows < tr.length; rows++) {\n      for (cols = 0; cols < props.columns.length; cols++) {\n        td = tr[rows].getElementsByTagName(\"td\")[cols];\n        if (td) {\n          txtValue = td.textContent || td.innerText;\n          if (txtValue.toLowerCase().indexOf(filter) > -1) {\n            tr[rows].style.display = \"\";\n            break;\n          } else {\n            tr[rows].style.display = \"none\";\n          }\n        }\n      }\n    }\n  };\n\n  const tablePagination = (): void => {\n    table = document.getElementById(tableId)!;\n    tr = table.getElementsByTagName(\"tr\");\n    setTotalItems(tr.length);\n    setTotalPages(Math.ceil(totalItems / pageSize));\n\n    // calculate start and end item indexes on the current page\n    setStartIndex((currentPage - 1) * pageSize);\n    setEndIndex(Math.min(startIndex + pageSize - 1, totalItems - 1));\n\n    /**\n     * TODO!\n     * There is a problem with this condition\n     */\n    let _pages = Array.from(Array(totalPages + 1 - startPage).keys()).map(\n      (i) => startPage + i\n    );\n    if (!pages || _pages.length !== pages.length) {\n      setPages(_pages);\n    }\n\n    for (let i: number = 0; i < tr.length; i++) {\n      if (i >= startIndex && i <= endIndex) {\n        tr[i].style.display = \"\";\n      } else {\n        tr[i].style.display = \"none\";\n      }\n    }\n  };\n\n  return (\n    <div className={`${props.tableSize} overflow-x-auto`}>\n      {/* search box  */}\n      {props.search && (\n        <div className={`${props.searchBG} w-full mb-2`}>\n          {props.search && (\n            <div className=\"bg-white rounded flex items-center w-full p-2 border-2 border-gray-500\">\n              <MdSearch className=\"h-5 w-5 fill-current text-gray-400\" />\n              <input\n                type=\"search\"\n                placeholder=\"search\"\n                onChange={(e) => filterTable(e.target.value)}\n                className=\"w-full h-6 pl-4 text-sm outline-none focus:outline-none bg-white\"\n                disabled={props.loading}\n              />\n\n              {props.pagination && (\n                <div className=\"select\">\n                  <select\n                    className=\"text-base outline-none focus:outline-none bg-white\"\n                    onChange={(e) => setPageSize(Number(e.target.value))}\n                    disabled={props.loading}\n                  >\n                    <option value=\"10\">10</option>\n                    <option value=\"25\">25</option>\n                    <option value=\"50\">50</option>\n                    <option value=\"100\">100</option>\n                  </select>\n                </div>\n              )}\n            </div>\n          )}\n        </div>\n      )}\n      <div className=\"overflow-x-auto w-full\">\n        <table\n          className={\n            props.tableClass\n              ? props.tableClass\n              : `w-full shadow ${\n                  props.rounded && \"sm:rounded-lg\"\n                } table-auto order-table`\n          }\n          id={tableId}\n        >\n          {!props.hideColumns && (\n            <thead className=\"bg-white border-b-2 border-gray-300 text-gray-600 font-bold text-base\">\n              <tr\n                className={`text-left tracking-wide bg-${props.thColor}-100 border-b-2 border-${props.thColor}-500 text-${props.thColor}-600`}\n              >\n                {props.columns.map((column, index) => (\n                  <th\n                    key={index}\n                    className={`${column.padding} text-${\n                      column.alignText\n                    } px-3 py-2 ${column.isSortAllowed && \"cursor-pointer\"}`}\n                    onClick={() =>\n                      column.isSortAllowed && sortThisColumn(tableId, index)\n                    }\n                  >\n                    <div className=\"flex items-center gap-1\">\n                      {column.columnTitle}\n                      {column.isSortAllowed && <BiSort />}\n                    </div>\n                  </th>\n                ))}\n              </tr>\n            </thead>\n          )}\n          <tbody id=\"table-data\" className=\"bg-white text-black text-base\">\n            {props.rows()}\n          </tbody>\n        </table>\n        {props.pagination && (\n          <div className=\"sm:flex-1 sm:flex sm:items-center sm:justify-between mt-4 work-sans\">\n            <div>\n              <span className=\"text-xs xs:text-sm text-gray-900\">\n                Showing 1 to {pageSize} of {totalItems - 1} Entries\n              </span>\n            </div>\n            <div>\n              <nav className=\"inline-flex shadow-sm\">\n                <div>\n                  <button\n                    type=\"button\"\n                    className={`inline-flex items-center px-2 py-2 rounded-l-md border border-gray-300 text-sm font-medium text-gray-500 ${\n                      currentPage !== 1 && \"bg-white\"\n                    }`}\n                    aria-label=\"Previous\"\n                    disabled={currentPage === 1 || props.loading}\n                    onClick={() => setCurrentPage(currentPage - 1)}\n                  >\n                    <MdNavigateBefore className=\"h-5 w-5\" />\n                  </button>\n                </div>\n                <div>\n                  {pages &&\n                    pages.map((page, pageIndex) => (\n                      <button\n                        key={pageIndex}\n                        className={`-ml-px inline-flex items-center px-4 py-2 border border-gray-300 text-sm font-medium text-gray-700 ${\n                          page !== currentPage\n                            ? \"bg-white\"\n                            : \"bg-gray-100 cursor-default\"\n                        }`}\n                        disabled={page === currentPage || props.loading}\n                        onClick={() => setCurrentPage(page)}\n                      >\n                        {page}\n                      </button>\n                    ))}\n                </div>\n                <div>\n                  <button\n                    type=\"button\"\n                    className={`inline-flex items-center px-2 py-2 rounded-r-md border border-gray-300 text-sm leading-5 font-medium text-gray-500 ${\n                      currentPage !== totalPages && \"bg-white\"\n                    }`}\n                    aria-label=\"Next\"\n                    disabled={currentPage === totalPages || props.loading}\n                    onClick={() => setCurrentPage(currentPage + 1)}\n                  >\n                    <MdNavigateNext className=\"h-5 w-5\" />\n                  </button>\n                </div>\n              </nav>\n            </div>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default Table;\n","import axios from \"axios\";\nimport { Dispatch } from \"redux\";\nimport { ActionTypes } from \"./types\";\nimport { API } from \"../utils/api\";\nimport { setAxiosToken } from \"../utils/AxiosToken\";\nimport { errorToText } from \"../utils/errors\";\nimport {\n  AcademicSessionInterface,\n  PlansTypeInterface,\n  SessionPlanInterface,\n} from \"../interfaces\";\n\n/**\n * * ****************************** INTERFACES *****************************\n */\n\n// GET ACTIVE PLAN TYPES\nexport interface GetPlansTypesAction {\n  type: ActionTypes.GET_PLANS_TYPES;\n  payload: PlansTypeInterface[];\n}\n\n// GET INACTIVE PLAN TYPES\nexport interface GetDeletedPlansTypesAction {\n  type: ActionTypes.GET_DELETED_PLANS_TYPES;\n  payload: PlansTypeInterface[];\n}\n\n// CREATE PLAN TYPE\nexport interface CreatePlansTypeAction {\n  type: ActionTypes.CREATE_PLAN_TYPE;\n  payload: PlansTypeInterface;\n}\n\n// UPDATE PLAN TYPE\nexport interface UpdatePlansTypeAction {\n  type: ActionTypes.UPDATE_PLAN_TYPE;\n  payload: PlansTypeInterface;\n}\n\n// DELETE PLAN TYPE\nexport interface DeletePlansTypeAction {\n  type: ActionTypes.DELETE_PLAN_TYPE;\n  payload: PlansTypeInterface;\n}\n\n// SET PLAN TYPE =====================================\nexport interface setSelectedPlanTypeActions {\n  type: ActionTypes.SELECT_PLAN_TYPE;\n  payload: PlansTypeInterface | \"all\";\n}\n\n// GET ALL SESSION PLAN\nexport interface GetAllSessionPlansAction {\n  type: ActionTypes.GET_ALL_SESSION_PLANS;\n  payload: SessionPlanInterface[];\n}\n\n// GET ACTIVE SESSION PLAN\nexport interface GetActiveSessionPlanAction {\n  type: ActionTypes.GET_ACTIVE_SESSION_PLANS;\n  payload: SessionPlanInterface | \"none\";\n}\n\n// CREATE SESSION PLAN\nexport interface CreateSessionPlansAction {\n  type: ActionTypes.CREATE_SESSION_PLAN;\n  payload: SessionPlanInterface;\n}\n\n// UPDATE SESSION PLAN\nexport interface UpdateSessionPlansAction {\n  type: ActionTypes.UPDATE_SESSION_PLAN;\n  payload: SessionPlanInterface;\n}\n\n// ACTIVATE SESSION PLAN\nexport interface ActivateSessionPlansAction {\n  type: ActionTypes.SESSION_ACTIVATION;\n  payload: SessionPlanInterface;\n}\n\n// DELETE SESSION PLAN\nexport interface DeleteSessionPlanAction {\n  type: ActionTypes.DELETE_SESSION_PLAN;\n  payload: string;\n}\n\n// GET ALL ACADEMIC SESSION\nexport interface GetAllAcademicSessionAction {\n  type: ActionTypes.GET_ALL_ACADEMIC_SESSION;\n  payload: AcademicSessionInterface[];\n}\n\n// CREATE ACADEMIC SESSION\nexport interface CreateAcademicSessionAction {\n  type: ActionTypes.CREATE_ACADEMIC_SESSION;\n  payload: AcademicSessionInterface;\n}\n\n// UPDATE ACADEMIC SESSION\nexport interface UpdateAcademicSessionAction {\n  type: ActionTypes.UPDATE_ACADEMIC_SESSION;\n  payload: AcademicSessionInterface;\n}\n\n// ACTIVATE ACADEMIC SESSION\nexport interface ActivateAcademicSessionAction {\n  type: ActionTypes.ACADEMIC_SESSION_ACTIVATION;\n  payload: AcademicSessionInterface;\n}\n\n// DELETE ACADEMIC SESSION\nexport interface DeleteAcademicSessionAction {\n  type: ActionTypes.DELETE_ACADEMIC_SESSION;\n  payload: string;\n}\n\n// GET ACTIVE ACADEMIC SESSION\nexport interface GetActiveAcademicSessionAction {\n  type: ActionTypes.GET_ACTIVE_ACADEMIC_SESSION;\n  payload: AcademicSessionInterface | \"none\";\n}\n\nexport type SessionActionType =\n  | GetPlansTypesAction\n  | GetDeletedPlansTypesAction\n  | CreatePlansTypeAction\n  | UpdatePlansTypeAction\n  | DeletePlansTypeAction\n  | GetAllSessionPlansAction\n  | GetActiveSessionPlanAction\n  | CreateSessionPlansAction\n  | UpdateSessionPlansAction\n  | ActivateSessionPlansAction\n  | DeleteSessionPlanAction\n  | setSelectedPlanTypeActions\n  | GetAllAcademicSessionAction\n  | CreateAcademicSessionAction\n  | UpdateAcademicSessionAction\n  | ActivateAcademicSessionAction\n  | DeleteAcademicSessionAction\n  | GetActiveAcademicSessionAction;\n\n/**\n * * ****************************** ACTIONS *****************************\n */\n\n// GET ACTIVE PLAN TYPES ==========================\nexport const GetPlansTypes = (callback: Function) => {\n  callback(true, \"\");\n  return async (dispatch: Dispatch) => {\n    try {\n      setAxiosToken();\n      const res = await axios.get<PlansTypeInterface[]>(\n        `${API.CLAIMING}/session-type`\n      );\n      console.log({ GET_PLANS_TYPES: res.data });\n      let plan_types: PlansTypeInterface[] = [];\n      if (res.status === 200) {\n        // setApplications(res.data);\n        if (res.data !== null && res.data.length > 0) {\n          plan_types = res.data;\n        }\n      }\n      dispatch<GetPlansTypesAction>({\n        type: ActionTypes.GET_PLANS_TYPES,\n        payload: plan_types,\n      });\n      callback(false, \"\");\n    } catch (error) {\n      console.error({ error: errorToText(error) });\n      callback(false, errorToText(error));\n    }\n  };\n};\n\n// GET ACTIVE PLAN TYPES ==========================\nexport const GetDeletedPlansTypes = (callback: Function) => {\n  callback(true, \"\");\n  return async (dispatch: Dispatch) => {\n    try {\n      setAxiosToken();\n      const res = await axios.get<PlansTypeInterface[]>(\n        `${API.CLAIMING}/session-type/deleted`\n      );\n      console.log({ GET_DELETED_PLANS_TYPES: res.data });\n      let plan_types: PlansTypeInterface[] = [];\n      if (res.status === 200) {\n        // setApplications(res.data);\n        if (res.data !== null && res.data.length > 0) {\n          plan_types = res.data;\n        }\n      }\n      dispatch<GetDeletedPlansTypesAction>({\n        type: ActionTypes.GET_DELETED_PLANS_TYPES,\n        payload: plan_types,\n      });\n      callback(false, \"\");\n    } catch (error) {\n      console.error({ error: errorToText(error) });\n      callback(false, errorToText(error));\n    }\n  };\n};\n\n// CREATE PLAN TYPE\nexport const createPlanType = (\n  data: PlansTypeInterface\n): CreatePlansTypeAction => {\n  return {\n    type: ActionTypes.CREATE_PLAN_TYPE,\n    payload: data,\n  };\n};\n\n// UPDATE PLAN TYPE\nexport const updatePlanType = (\n  data: PlansTypeInterface\n): UpdatePlansTypeAction => {\n  return {\n    type: ActionTypes.UPDATE_PLAN_TYPE,\n    payload: data,\n  };\n};\n\n// DELETE PLAN TYPE\nexport const deletePlanType = (\n  data: PlansTypeInterface\n): DeletePlansTypeAction => {\n  return {\n    type: ActionTypes.DELETE_PLAN_TYPE,\n    payload: data,\n  };\n};\n\n// SELECT PLAN TYPES ==========================\nexport const setSelectedPlanType = (\n  thisType: PlansTypeInterface | \"all\"\n): setSelectedPlanTypeActions => {\n  console.log({ thisType });\n  return {\n    type: ActionTypes.SELECT_PLAN_TYPE,\n    payload: thisType,\n  };\n};\n\n// GET ACTIVE PLAN TYPES ==========================\nexport const getActiveSessionPlan = (callback: Function) => {\n  callback(true, \"\");\n  return async (dispatch: Dispatch) => {\n    try {\n      setAxiosToken();\n      const res = await axios.get<SessionPlanInterface>(\n        `${API.CLAIMING}/session/active/`\n      );\n      console.log({ GET_ACTIVE_SESSION_PLANS: res.data });\n      let session_plan: SessionPlanInterface | undefined = undefined;\n      // if (res.status === 200) {\n      //   // setApplications(res.data);\n      // }\n      if (res.data && res.data.is_active !== undefined) {\n        session_plan = res.data;\n      }\n      console.log({ session_plan: res.data });\n\n      dispatch<GetActiveSessionPlanAction>({\n        type: ActionTypes.GET_ACTIVE_SESSION_PLANS,\n        payload: session_plan ? session_plan : \"none\",\n      });\n      callback(false, \"\", session_plan ? session_plan : \"none\");\n    } catch (error) {\n      console.error({ error: errorToText(error) });\n      callback(false, errorToText(error));\n    }\n  };\n};\n\n// GET ALL PLAN TYPES ==========================\nexport const GetAllSessionPlans = (callback: Function) => {\n  callback(true, \"\");\n  return async (dispatch: Dispatch) => {\n    try {\n      setAxiosToken();\n      const res = await axios.get<SessionPlanInterface[]>(\n        `${API.CLAIMING}/session/`\n      );\n      console.log({ GET_ALL_SESSION_PLANS: res.data });\n      let session_data: SessionPlanInterface[] = [];\n      if (res.status === 200) {\n        // setApplications(res.data);\n        if (res.data !== null && res.data.length > 0) {\n          session_data = res.data;\n        }\n      }\n      dispatch<GetAllSessionPlansAction>({\n        type: ActionTypes.GET_ALL_SESSION_PLANS,\n        payload: session_data,\n      });\n      callback(false, \"\", session_data);\n    } catch (error) {\n      console.error({ error: errorToText(error) });\n      callback(false, errorToText(error));\n    }\n  };\n};\n\n// CREATE SESSION PLAN\nexport const createSessionPlan = (\n  data: SessionPlanInterface\n): CreateSessionPlansAction => {\n  return {\n    type: ActionTypes.CREATE_SESSION_PLAN,\n    payload: data,\n  };\n};\n\n// UPDATE SESSION PLAN\nexport const updateSessionPlan = (\n  data: SessionPlanInterface\n): UpdateSessionPlansAction => {\n  return {\n    type: ActionTypes.UPDATE_SESSION_PLAN,\n    payload: data,\n  };\n};\n\n// ACTIVATE SESSION PLAN\nexport const sessionActivation = (\n  data: SessionPlanInterface\n): ActivateSessionPlansAction => {\n  return {\n    type: ActionTypes.SESSION_ACTIVATION,\n    payload: data,\n  };\n};\n\n// DELETE SESSION PLAN\nexport const deleteSessionPlan = (data: string): DeleteSessionPlanAction => {\n  return {\n    type: ActionTypes.DELETE_SESSION_PLAN,\n    payload: data,\n  };\n};\n\n// CREATE ACADEMIC SESSION\nexport const createAcademicSession = (\n  data: AcademicSessionInterface\n): CreateAcademicSessionAction => {\n  return {\n    type: ActionTypes.CREATE_ACADEMIC_SESSION,\n    payload: data,\n  };\n};\n\n// GET ALL ACADEMIC SESSION ==========================\nexport const GetAllAcademicSession = (callback: Function) => {\n  callback(true, \"\");\n  return async (dispatch: Dispatch) => {\n    try {\n      setAxiosToken();\n      const res = await axios.get<AcademicSessionInterface[]>(\n        `${API.PLACEMENT}/postrequestperiod/`\n      );\n      console.log({ GET_ALL_SESSION_PLANS: res.data });\n      let session_data: AcademicSessionInterface[] = [];\n      if (res.status === 200) {\n        // setApplications(res.data);\n        if (res.data !== null && res.data.length > 0) {\n          session_data = res.data;\n        }\n      }\n      console.log(\"====================================\");\n      console.log({ GetAllAcademicSession: res });\n      console.log(\"====================================\");\n      dispatch<GetAllAcademicSessionAction>({\n        type: ActionTypes.GET_ALL_ACADEMIC_SESSION,\n        payload: session_data,\n      });\n      callback(false, \"\", session_data);\n    } catch (error) {\n      console.error({ error: errorToText(error) });\n      callback(false, errorToText(error));\n    }\n  };\n};\n\n// UPDATE ACADEMIC SESSION\nexport const updateAcademicSession = (\n  data: AcademicSessionInterface\n): UpdateAcademicSessionAction => {\n  return {\n    type: ActionTypes.UPDATE_ACADEMIC_SESSION,\n    payload: data,\n  };\n};\n\n// ACTIVATE ACADEMIC SESSION\nexport const academicSessionActivation = (\n  data: AcademicSessionInterface\n): ActivateAcademicSessionAction => {\n  return {\n    type: ActionTypes.ACADEMIC_SESSION_ACTIVATION,\n    payload: data,\n  };\n};\n\n// DELETE ACADEMIC SESSION\nexport const deleteAcademicSession = (\n  data: string\n): DeleteAcademicSessionAction => {\n  return {\n    type: ActionTypes.DELETE_ACADEMIC_SESSION,\n    payload: data,\n  };\n};\n\n// GET ACTIVE PLAN TYPES ==========================\nexport const getActiveAcademicSession = (callback: Function) => {\n  callback(true, \"\");\n  return async (dispatch: Dispatch) => {\n    try {\n      setAxiosToken();\n      const res = await axios.get<AcademicSessionInterface>(\n        `${API.PLACEMENT}/postrequestperiod/one`\n      );\n      console.log({ GET_ACTIVE_ACADEMIC_SESSION: res.data });\n      let session_plan: AcademicSessionInterface | undefined = undefined;\n      // if (res.status === 200) {\n      //   // setApplications(res.data);\n      // }\n      if (res.data) {\n        session_plan = res.data;\n      }\n      console.log({ session_plan: res.data });\n\n      dispatch<GetActiveAcademicSessionAction>({\n        type: ActionTypes.GET_ACTIVE_ACADEMIC_SESSION,\n        payload: session_plan ? session_plan : \"none\",\n      });\n      callback(false, \"\", session_plan ? session_plan : \"none\");\n    } catch (error) {\n      console.error({ error: errorToText(error) });\n      callback(false, errorToText(error));\n    }\n  };\n};\n","import axios from \"axios\";\nimport { Dispatch } from \"redux\";\nimport { ActionTypes } from \"./types\";\nimport {\n  AccessTaskInterface,\n  PermissionInterface,\n  SystemSettingsInterface,\n} from \"../shared/interfaces\";\nimport { API } from \"../utils/api\";\nimport { setAxiosToken } from \"../utils/AxiosToken\";\nimport { errorToText } from \"../utils/errors\";\nimport { PositionAPI } from \"../interfaces/position\";\n\n/**\n * * ****************************** INTERFACES *****************************\n */\n\n// SYSTEM SETTINGS  ==============\nexport interface GetSystemSettingsAction {\n  type: ActionTypes.GET_SYSTEM_SETTINGS;\n  payload: SystemSettingsInterface[];\n}\n\nexport interface DisableSystemSettingsAction {\n  type: ActionTypes.DISABLE_SYSTEM_SETTINGS;\n  payload: {\n    system_setting_id: string;\n    status: \"enabled\" | \"disabled\";\n  };\n}\n\n// ROLE TASKS ACCESS SETTINGS ===================================\nexport interface GetTaskAccessAction {\n  type: ActionTypes.GET_TASK_ACCESS;\n  payload: AccessTaskInterface[];\n}\n\n// POSITIONS SETTINGS ===================================\nexport interface PositionCreateInterface {\n  position_id?: string;\n  position_title: string;\n  position_code: string;\n  description: string;\n  school_level_id: string;\n  subcategory_id: string;\n  education_institute_id: string;\n  courses: string[];\n  requirements: {\n    user_detail_category_id: string;\n    user_detail_subcategory_id: string;\n    position_requirement: {\n      category_subcategory_data_id: string;\n      required: boolean;\n    }[];\n    required: boolean;\n  }[];\n}\nexport interface GetPositionsAction {\n  type: ActionTypes.GET_POSTIONS;\n  payload: PositionAPI[];\n}\n\nexport interface CreatePositionsAction {\n  type: ActionTypes.CREATE_POSITION;\n  payload: PositionCreateInterface;\n}\n\nexport interface UpdatePositionsAction {\n  type: ActionTypes.UPDATE_POSITION;\n  payload: PositionCreateInterface;\n}\n\nexport interface DeletePositionSettingAction {\n  type: ActionTypes.DELETE_POSITION;\n  payload: string;\n}\n\nexport interface PublishPositionAction {\n  type: ActionTypes.PUBLISH_POSITION;\n  payload: {\n    position_id: string;\n    status: boolean;\n  };\n}\n\nexport type SystemActionType =\n  | GetSystemSettingsAction\n  | DisableSystemSettingsAction\n  | GetTaskAccessAction\n  | GetPositionsAction\n  | CreatePositionsAction\n  | UpdatePositionsAction\n  | DeletePositionSettingAction\n  | PublishPositionAction;\n\n/**\n * * ****************************** ACTIONS *****************************\n */\n\nexport const getSystemSettings = (callback: Function) => {\n  return async (dispatch: Dispatch) => {\n    callback(true, \"\");\n    try {\n      setAxiosToken();\n      const res = await axios.get<SystemSettingsInterface[]>(\n        `${API.AUTH}/settings`\n      );\n      dispatch<GetSystemSettingsAction>({\n        type: ActionTypes.GET_SYSTEM_SETTINGS,\n        payload: res.data,\n      });\n      callback(false, \"\");\n    } catch (error) {\n      console.log({ code_error: error });\n      callback(false, errorToText(error));\n    }\n  };\n};\n\nexport const disableSystemSetting = (data: {\n  system_setting_id: string;\n  status: \"enabled\" | \"disabled\";\n}) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<DisableSystemSettingsAction>({\n      type: ActionTypes.DISABLE_SYSTEM_SETTINGS,\n      payload: data,\n    });\n  };\n};\n\n// ============================ tasks access =======================\n\nexport const GetTaskAccess = (callback: Function) => {\n  return async (dispatch: Dispatch) => {\n    callback(true, \"\");\n    try {\n      setAxiosToken();\n      const res = await axios.get<\n        {\n          id: string;\n          title: string;\n          key: string;\n          permitted: PermissionInterface;\n        }[]\n      >(`${API.AUTH}/allroleaccess`);\n      let response: AccessTaskInterface[] = res.data.map((data) => ({\n        id: data.id,\n        task: data.title,\n        key: data.key,\n        permitted: data.permitted,\n      }));\n      dispatch<GetTaskAccessAction>({\n        type: ActionTypes.GET_TASK_ACCESS,\n        payload: response,\n      });\n      callback(false, \"\", response);\n    } catch (error) {\n      console.log({ code_error: error });\n      callback(false, errorToText(error));\n    }\n  };\n};\n\n// ============================ positions =======================\n\nexport const getPositions = (callback: Function) => {\n  return async (dispatch: Dispatch) => {\n    callback(true, \"\");\n    try {\n      setAxiosToken();\n      const res = await axios.get<PositionAPI[]>(`${API.APPLICATION}/position`);\n      dispatch<GetPositionsAction>({\n        type: ActionTypes.GET_POSTIONS,\n        payload: res.data,\n      });\n      callback(false, \"\");\n    } catch (error) {\n      console.log({ code_error: error });\n      callback(false, errorToText(error));\n    }\n  };\n};\n\nexport const createPosition = (data: PositionCreateInterface) => {\n  console.log({ createPosition: data });\n  return async (dispatch: Dispatch) => {\n    dispatch<CreatePositionsAction>({\n      type: ActionTypes.CREATE_POSITION,\n      payload: data,\n    });\n  };\n};\n\nexport const updatePosition = (data: PositionCreateInterface) => {\n  console.log({ updatePosition: data });\n  return async (dispatch: Dispatch) => {\n    dispatch<UpdatePositionsAction>({\n      type: ActionTypes.UPDATE_POSITION,\n      payload: data,\n    });\n  };\n};\n\nexport const deletePosition = (data: string) => {\n  console.log({ deletePosition: data });\n  return async (dispatch: Dispatch) => {\n    dispatch<DeletePositionSettingAction>({\n      type: ActionTypes.DELETE_POSITION,\n      payload: data,\n    });\n  };\n};\n\nexport const publishPosition = (data: {\n  position_id: string;\n  status: boolean;\n}) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<PublishPositionAction>({\n      type: ActionTypes.PUBLISH_POSITION,\n      payload: data,\n    });\n  };\n};\n","import axios from \"axios\";\nimport { Dispatch } from \"redux\";\nimport { ActionTypes } from \"./types\";\nimport {\n  AssignRoleToUserActionInterface,\n  CustomeAccessInterface,\n  UserInterface,\n} from \"../shared/interfaces\";\nimport { API } from \"../utils/api\";\nimport { setAxiosToken } from \"../utils/AxiosToken\";\nimport { errorToText } from \"../utils/errors\";\n\nexport const userPageLimit: number = 30;\n\n/**\n * * ****************************** INTERFACES *****************************\n */\n\nexport interface FetchUsersAction {\n  type: ActionTypes.FETCH_USERS_ACCESS;\n  payload: UserAccessInterface;\n}\n\nexport interface BlockUserToSystem {\n  type: ActionTypes.BLOCK_USER_TO_SYSTEM | ActionTypes.UNBLOCK_USER_TO_SYSTEM;\n  payload: { id: string; page: number };\n}\n\nexport interface AssignRoleToUserAction {\n  type: ActionTypes.ASSIGN_ROLE_TO_USER;\n  payload: { data: AssignRoleToUserActionInterface; page: number };\n}\n\nexport interface CustomizeUserAccessAction {\n  type: ActionTypes.CUSTOMIZE_USER_ACCESS;\n  payload: { data: CustomeAccessInterface; page: number };\n}\n\nexport interface ResetUserAccessAction {\n  type: ActionTypes.RESET_USER_ACCESS;\n  payload: { user_id: string; page: number };\n}\n\nexport type fetchUserAccessInterface = {\n  users: UserInterface[] | null;\n  next: {\n    page: number;\n    limit: number;\n  } | null;\n  previous: {\n    page: number;\n    limit: number;\n  } | null;\n  total_users: number;\n};\n\nexport type UserAccessInterface = {\n  users: { data: UserInterface[]; page: number }[] | null;\n  next: {\n    page: number;\n    limit: number;\n  } | null;\n  previous: {\n    page: number;\n    limit: number;\n  } | null;\n  total_users: number;\n};\n\nexport enum documentValidationStatus {\n  waiting = \"waiting\",\n  approved = \"approved\",\n  rejected = \"rejected\",\n}\n\nexport interface VerifyDocumentInterface {\n  user_id: string;\n  doc_id: string;\n  validation_status: \"waiting\" | \"approved\" | \"rejected\";\n  validated_by: {\n    user_id: string;\n    comment: string;\n    validation_status: \"waiting\" | \"approved\" | \"rejected\";\n    date?: string;\n  };\n  in_education: boolean;\n  disability: boolean;\n}\n\nexport type AccessUserActionType =\n  | FetchUsersAction\n  | BlockUserToSystem\n  | AssignRoleToUserAction\n  | CustomizeUserAccessAction\n  | ResetUserAccessAction;\n\n/**\n * * ****************************** ACTIONS *****************************\n */\n\nexport const fetchUserAccess = (page: number, callback?: Function) => {\n  callback && callback(true, \"\");\n  return async (dispatch: Dispatch) => {\n    try {\n      setAxiosToken();\n      const res = await axios.get<fetchUserAccessInterface>(\n        `${API.AUTH}/users?page=${page}&limit=${userPageLimit}`\n      );\n      console.log(\"====================================\");\n      console.log({ fetchUserAccess: res });\n      console.log(\"====================================\");\n      dispatch<FetchUsersAction>({\n        type: ActionTypes.FETCH_USERS_ACCESS,\n        payload: {\n          users: [{ data: res.data.users!, page: page }],\n          next: res.data.next,\n          previous: res.data.previous,\n          total_users: res.data.total_users,\n        },\n      });\n      callback && callback(false, \"\", res.data.users);\n    } catch (error) {\n      console.error({ user_error: error });\n      callback && callback(false, errorToText(error));\n    }\n  };\n};\n\nexport const blockUserToSystem = (user_id: string, page: number) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<BlockUserToSystem>({\n      type: ActionTypes.BLOCK_USER_TO_SYSTEM,\n      payload: { id: user_id, page },\n    });\n  };\n};\n\nexport const unBlockUserToSystem = (user_id: string, page: number) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<BlockUserToSystem>({\n      type: ActionTypes.UNBLOCK_USER_TO_SYSTEM,\n      payload: { id: user_id, page },\n    });\n  };\n};\n\nexport const assignRoleToUserAccess = (\n  data: AssignRoleToUserActionInterface,\n  page: number\n) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<AssignRoleToUserAction>({\n      type: ActionTypes.ASSIGN_ROLE_TO_USER,\n      payload: { data, page },\n    });\n  };\n};\n\nexport const customizeUserAccess = (\n  data: CustomeAccessInterface,\n  page: number\n) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<CustomizeUserAccessAction>({\n      type: ActionTypes.CUSTOMIZE_USER_ACCESS,\n      payload: { data, page },\n    });\n  };\n};\n\nexport const resetUserAccess = (data: string, page: number) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<ResetUserAccessAction>({\n      type: ActionTypes.RESET_USER_ACCESS,\n      payload: { user_id: data, page },\n    });\n  };\n};\n","import { Dispatch } from \"redux\";\nimport { ActionTypes } from \"./types\";\nimport {\n  MySchoolInterface,\n  PostSchoolInterface,\n  SchoolInfoInterface,\n  SchoolsInterface,\n} from \"../shared/interfaces\";\n// import { setAxiosToken } from \"../utils/AxiosToken\";\nimport axios from \"axios\";\nimport { API } from \"../utils/api\";\nimport { errorToText } from \"../utils/errors\";\nimport { placedCandidateInterface } from \"../interfaces/marks_publication\";\nimport { PlacementListInterface } from \"../containers/PlacementLimit/PlacementLimit\";\n\n/**\n * * ****************************** INTERFACES *****************************\n */\n\nexport interface GetSchoolsAction {\n  type: ActionTypes.GET_SCHOOLS;\n  payload: SchoolsInterface[];\n}\n\nexport interface GetSchoolByIdAction {\n  type: ActionTypes.GET_SCHOOLS_BY_ID;\n  payload: MySchoolInterface;\n}\n\nexport interface GetSchoolsInfoAction {\n  type: ActionTypes.GET_SCHOOLS_INFO;\n  payload: SchoolInfoInterface[];\n}\n\nexport interface CreateSchoolAction {\n  type: ActionTypes.CREATE_SCHOOL;\n  payload: SchoolsInterface;\n}\n\nexport interface UpdateSchoolAction {\n  type: ActionTypes.UPDATE_SCHOOL;\n  payload: SchoolsInterface;\n}\n\nexport interface DeleteSchoolAction {\n  type: ActionTypes.DELETE_SCHOOL;\n  payload: string;\n}\n\n// School Posts interfaces\nexport interface FetchSchoolPostsAction {\n  type: ActionTypes.FETCH_SCHOOL_POSTS;\n  payload: PostSchoolInterface[];\n}\n\n// School Placements interfaces\nexport interface GetSchoolPlacementAction {\n  type: ActionTypes.GET_SCHOOL_PLACEMENT;\n  payload: placedCandidateInterface[];\n}\n\n// District School Placements interfaces\nexport interface GetDistrictPlacementAction {\n  type: ActionTypes.GET_DISTRICT_PLACEMENT;\n  payload: placedCandidateInterface[];\n}\n\n// District School Placements interfaces\nexport interface GetSessionPlacementAction {\n  type: ActionTypes.GET_SESSION_PLACEMENT;\n  payload: placedCandidateInterface[];\n}\n\nexport interface FetchDistrictPostsAction {\n  type: ActionTypes.FETCH_DISTRICT_POSTS;\n  payload: PostSchoolInterface[];\n}\n\nexport interface CreateSchoolPostAction {\n  type: ActionTypes.CREATE_SCHOOL_POST;\n  payload: PostSchoolInterface;\n}\n\nexport interface UpdateSchoolPostAction {\n  type: ActionTypes.UPDATE_SCHOOL_POST;\n  payload: {\n    TYPE: \"DISTRICT\" | \"SCHOOL\" | \"RECEIVED\";\n    data: PostSchoolInterface;\n  };\n}\n\nexport interface DeleteSchoolPostAction {\n  type: ActionTypes.DELETE_SCHOOL_POST;\n  payload: PostSchoolInterface[];\n}\n\n// Get Institute Limit Posts Action interfaces\nexport interface GetInstitutePlacementLimitAction {\n  type: ActionTypes.GET_INSTITUTE_PLACEMENT_LIMIT;\n  payload: PlacementListInterface[];\n}\n\nexport interface GetDistrictPlacementLimitAction {\n  type: ActionTypes.GET_DISTRICT_PLACEMENT_LIMIT;\n  payload: PlacementListInterface[];\n}\n\nexport interface UpdateInstitutePlacementLimitAction {\n  type: ActionTypes.UPDATE_INSTITUTE_PLACEMENT_LIMIT;\n  payload: { limit_id: string; confirmed_post: number };\n}\n\nexport type SchoolActionType =\n  | GetSchoolsAction\n  | GetSchoolByIdAction\n  | GetSchoolsInfoAction\n  | CreateSchoolAction\n  | UpdateSchoolAction\n  | DeleteSchoolAction\n  | FetchSchoolPostsAction\n  | GetSchoolPlacementAction\n  | FetchDistrictPostsAction\n  | CreateSchoolPostAction\n  | UpdateSchoolPostAction\n  | DeleteSchoolPostAction\n  | GetDistrictPlacementAction\n  | GetSessionPlacementAction\n  | GetInstitutePlacementLimitAction\n  | GetDistrictPlacementLimitAction\n  | UpdateInstitutePlacementLimitAction;\n\n/**\n * * ****************************** ACTIONS *****************************\n */\n\nexport const getSchools = (callback: Function) => {\n  callback(true, \"\");\n  return async (dispatch: Dispatch) => {\n    try {\n      const res = await axios.get<SchoolsInterface[]>(\n        `${API.APPLICATION}/schools`\n      );\n      dispatch<GetSchoolsAction>({\n        type: ActionTypes.GET_SCHOOLS,\n        payload: res.data,\n      });\n      callback(false, \"\", res.data);\n    } catch (error) {\n      console.log(\"Err: \", error);\n      callback(false, errorToText(error));\n    }\n  };\n};\n\nexport const getSchoolById = (schoolId: string, callback: Function) => {\n  return async (dispatch: Dispatch) => {\n    callback(true, \"\");\n    try {\n      const res = await axios.get<MySchoolInterface>(\n        `${API.APPLICATION}/schools/${schoolId}`\n      );\n      dispatch<GetSchoolByIdAction>({\n        type: ActionTypes.GET_SCHOOLS_BY_ID,\n        payload: res.data,\n      });\n      callback(false, \"\", res.data);\n    } catch (error) {\n      console.log(\"Err: \", error);\n      callback(false, errorToText(error));\n    }\n  };\n};\n\n// export const getSchoolsInfo = () => {\n//   return async (dispatch: Dispatch) => {\n//     setAxiosToken();\n//     const response = await axios.get<SchoolInfoInterface[]>(url);\n\n//     dispatch<GetSchoolsInfoAction>({\n//       type: ActionTypes.GET_SCHOOLS_INFO,\n//       payload: response.data,\n//     });\n//   };\n// };\n\nexport const createSchool = (data: SchoolsInterface) => {\n  console.log({ schools: data });\n  return async (dispatch: Dispatch) => {\n    dispatch<CreateSchoolAction>({\n      type: ActionTypes.CREATE_SCHOOL,\n      payload: data,\n    });\n  };\n};\n\nexport const updateSchool = (data: SchoolsInterface) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<UpdateSchoolAction>({\n      type: ActionTypes.UPDATE_SCHOOL,\n      payload: data,\n    });\n  };\n};\n\nexport const deleteSchool = (data: string) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<DeleteSchoolAction>({\n      type: ActionTypes.DELETE_SCHOOL,\n      payload: data,\n    });\n  };\n};\n\nexport const fetchSchoolPosts = (school_id: string, callback: Function) => {\n  return async (dispatch: Dispatch) => {\n    callback(true, \"\");\n    try {\n      const res = await axios.get<PostSchoolInterface[]>(\n        `${API.PLACEMENT}/requestpost/school/${school_id}`\n      );\n\n      console.log(\"====================================\");\n      console.log({ schoolPosts: res });\n      console.log(\"====================================\");\n\n      dispatch<FetchSchoolPostsAction>({\n        type: ActionTypes.FETCH_SCHOOL_POSTS,\n        payload: res.data,\n      });\n      callback(false, \"\");\n    } catch (error) {\n      console.log(\"Err: \", error);\n      callback(false, errorToText(error));\n    }\n  };\n};\n\nexport const getSchoolPlacement = (school_id: string, callback: Function) => {\n  return async (dispatch: Dispatch) => {\n    callback(true, \"\");\n    try {\n      const res = await axios.get<placedCandidateInterface[]>(\n        `${API.PLACEMENT}/placedcandidate/school/${school_id}`\n      );\n\n      console.log({ getSchoolPlacement: res.data });\n\n      dispatch<GetSchoolPlacementAction>({\n        type: ActionTypes.GET_SCHOOL_PLACEMENT,\n        payload: res.data,\n      });\n      callback(false, \"\", res.data);\n    } catch (error) {\n      console.log(\"Err: \", error);\n      callback(false, errorToText(error));\n    }\n  };\n};\n\nexport const createSchoolPost = (data: PostSchoolInterface) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<CreateSchoolPostAction>({\n      type: ActionTypes.CREATE_SCHOOL_POST,\n      payload: data,\n    });\n  };\n};\n\nexport const updateSchoolPost = (\n  TYPE: \"DISTRICT\" | \"SCHOOL\" | \"RECEIVED\",\n  data: PostSchoolInterface\n) => {\n  console.log({ TYPE, data });\n  return async (dispatch: Dispatch) => {\n    dispatch<UpdateSchoolPostAction>({\n      type: ActionTypes.UPDATE_SCHOOL_POST,\n      payload: { TYPE, data },\n    });\n  };\n};\n\nexport const deleteSchoolPost = (data: PostSchoolInterface[]) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<DeleteSchoolPostAction>({\n      type: ActionTypes.DELETE_SCHOOL_POST,\n      payload: data,\n    });\n  };\n};\n\nexport const fetchDistrictPosts = (district_id: string, callback: Function) => {\n  return async (dispatch: Dispatch) => {\n    callback(true, \"\");\n    try {\n      const res = await axios.get<PostSchoolInterface[]>(\n        `${API.PLACEMENT}/requestpost/district/${district_id}`\n      );\n\n      console.log(\"====================================\");\n      console.log({ fetchDistrictPosts: res });\n      console.log(\"====================================\");\n\n      dispatch<FetchDistrictPostsAction>({\n        type: ActionTypes.FETCH_DISTRICT_POSTS,\n        payload: res.data,\n      });\n      callback(false, \"\");\n    } catch (error) {\n      console.log(\"Err: \", error);\n      callback(false, errorToText(error));\n    }\n  };\n};\n\nexport const getDistrictPlacement = (\n  district_id: string,\n  callback: Function\n) => {\n  return async (dispatch: Dispatch) => {\n    callback(true, \"\");\n    try {\n      const res = await axios.get<placedCandidateInterface[]>(\n        `${API.PLACEMENT}/placedcandidate/district/${district_id}`\n      );\n\n      console.log(\"====================================\");\n      console.log({ getDistrictPlacement: res.data });\n      console.log(\"====================================\");\n\n      dispatch<GetDistrictPlacementAction>({\n        type: ActionTypes.GET_DISTRICT_PLACEMENT,\n        payload: res.data,\n      });\n      callback(false, \"\", res.data);\n    } catch (error) {\n      console.log(\"Err: \", error);\n      callback(false, errorToText(error));\n    }\n  };\n};\n\nexport const getSessionPlacement = (session_id: string, callback: Function) => {\n  return async (dispatch: Dispatch) => {\n    callback(true, \"\");\n    try {\n      const res = await axios.get<placedCandidateInterface[]>(\n        `${API.PLACEMENT}/placedcandidate/session/${session_id}`\n      );\n\n      console.log(\"====================================\");\n      console.log({ getSessionPlacement: res.data });\n      console.log(\"====================================\");\n\n      dispatch<GetSessionPlacementAction>({\n        type: ActionTypes.GET_SESSION_PLACEMENT,\n        payload: res.data,\n      });\n      callback(false, \"\", res.data);\n    } catch (error) {\n      console.log(\"Err: \", error);\n      callback(false, errorToText(error));\n    }\n  };\n};\n\nexport const getInstitutePlacementLimit = (\n  institute_id: string,\n  session_id: string,\n  callback: Function\n) => {\n  return async (dispatch: Dispatch) => {\n    callback(true, \"\");\n    try {\n      const res = await axios.get<PlacementListInterface[]>(\n        `${API.PLACEMENT}/confirmedpostrequest/institute/${institute_id}/${session_id}`\n      );\n\n      console.log(\"====================================\");\n      console.log({ getInstitutePlacementLimit: res.data });\n      console.log(\"====================================\");\n\n      dispatch<GetInstitutePlacementLimitAction>({\n        type: ActionTypes.GET_INSTITUTE_PLACEMENT_LIMIT,\n        payload: res.data,\n      });\n      callback(false, \"\", res.data);\n    } catch (error) {\n      console.log(\"Err: \", error);\n      callback(false, errorToText(error));\n    }\n  };\n};\n\nexport const getDistrictPlacementLimit = (\n  district_id: string,\n  session_id: string,\n  callback: Function\n) => {\n  return async (dispatch: Dispatch) => {\n    callback(true, \"\");\n    try {\n      const res = await axios.get<PlacementListInterface[]>(\n        `${API.PLACEMENT}/confirmedpostrequest/district/${district_id}/${session_id}`\n      );\n\n      console.log(\"====================================\");\n      console.log({ getDistrictPlacementLimit: res.data });\n      console.log(\"====================================\");\n\n      dispatch<GetDistrictPlacementLimitAction>({\n        type: ActionTypes.GET_DISTRICT_PLACEMENT_LIMIT,\n        payload: res.data,\n      });\n      callback(false, \"\", res.data);\n    } catch (error) {\n      console.log(\"Err: \", error);\n      callback(false, errorToText(error));\n    }\n  };\n};\n\nexport const updateInstitutePlacementLimit = (data: {\n  limit_id: string;\n  confirmed_post: number;\n}) => {\n  console.log(\"====================================\");\n  console.log({ updateInstitutePlacementLimit: data });\n  console.log(\"====================================\");\n  return async (dispatch: Dispatch) => {\n    dispatch<UpdateInstitutePlacementLimitAction>({\n      type: ActionTypes.UPDATE_INSTITUTE_PLACEMENT_LIMIT,\n      payload: data,\n    });\n  };\n};\n","import React from \"react\";\nimport { MdInfoOutline } from \"react-icons/md\";\n\nconst NoSession = () => {\n  return (\n    <div className=\"my-5\">\n      <div className=\"bg-yellow-100 rounded flex flex-col items-center justify-center p-6 my-8 text-yellow-900 border border-yellow-900\">\n        <MdInfoOutline className=\"text-6xl md:text-9xl\" />\n        <div className=\"text-center flex flex-col\">\n          <span className=\"text-2xl md:text-4xl font-extrabold\">\n            No session available\n          </span>\n          <span className=\"text-lg\">\n            Please Wait for the system to publish the sessions or contact the\n            administrator\n          </span>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default NoSession;\n","import { ApexOptions } from \"apexcharts\";\nimport React, { useEffect, useState } from \"react\";\nimport Chart from \"react-apexcharts\";\n\ntype VBarCharPropstInterface = {\n  labels: string[];\n  categoriesLabel: any;\n  bar?: {\n    borderRadius: number;\n    horizontal: boolean;\n    columnWidth: string;\n    endingShape: string;\n  };\n  dataLabels: boolean;\n  yaxisText: string;\n  tooltipText: string;\n  series: {\n    name: string;\n    data: number[];\n  }[];\n  defaultBar?: {\n    borderRadius: number;\n    horizontal: boolean;\n    columnWidth: string;\n    endingShape: string;\n  };\n  colors?: any[];\n  title?: {\n    text: string;\n    align: string;\n    margin: number;\n    offestY: number;\n    style: {\n      fontSize: string;\n    };\n  };\n  stacked?: boolean;\n  FC_LoadSelected?: (labelIndex: number, seriesIndex: number) => void;\n  chartHeight?: number;\n};\n\nconst defaultBar = {\n  borderRadius: 4,\n  horizontal: false,\n  columnWidth: \"95%\",\n  endingShape: \"rounded\",\n};\n\nconst VBarChart: React.FC<VBarCharPropstInterface> = (props) => {\n  const [loading, setLoading] = useState<boolean>(true);\n  const [options, setOptions] = useState<ApexOptions>({\n    chart: {\n      events: {\n        dataPointSelection: (event, chartContext, config) => {\n          console.log({\n            labelClicked: config.w.config.labels[config.dataPointIndex],\n            // seriesClicked: config.w.config.series[config.dataPointIndex],\n          });\n          if (props.FC_LoadSelected) {\n            props.FC_LoadSelected(config.dataPointIndex, config.seriesIndex);\n          }\n          // console.log(config.seriesIndex);\n          // console.log(config.dataPointIndex);\n        },\n      },\n      stacked: props.stacked ? props.stacked : false,\n    },\n    plotOptions: {\n      bar: props.defaultBar ? props.defaultBar : defaultBar,\n    },\n    labels: props.labels,\n    dataLabels: {\n      enabled: true,\n    },\n    xaxis: {\n      labels: {\n        rotate: -45,\n      },\n      categories: props.categoriesLabel,\n      tickPlacement: \"on\",\n    },\n    yaxis: {\n      title: {\n        text: props.yaxisText,\n      },\n    },\n    fill: {\n      opacity: 1,\n    },\n    tooltip: {\n      y: {\n        formatter: function (val: number) {\n          return val + \" \" + props.tooltipText;\n        },\n      },\n    },\n    grid: {\n      padding: {\n        left: 30, // or whatever value that works\n        right: 30, // or whatever value that works\n      },\n    },\n    noData: {\n      text: \"No data found\",\n      align: \"center\",\n      verticalAlign: \"middle\",\n    },\n  });\n\n  useEffect(() => {\n    if (props.colors && props.colors.length > 0 && loading) {\n      setOptions({\n        chart: {\n          stacked: props.stacked ? props.stacked : false,\n          events: {\n            dataPointSelection: (event, chartContext, config) => {\n              console.log({\n                chartClicked: config.w.config.labels[config.dataPointIndex],\n              });\n              if (props.FC_LoadSelected) {\n                props.FC_LoadSelected(\n                  config.dataPointIndex,\n                  config.seriesIndex\n                );\n              }\n            },\n          },\n          zoom: {\n            enabled: true,\n            autoScaleYaxis: true,\n          },\n        },\n        plotOptions: {\n          bar: props.defaultBar ? props.defaultBar : defaultBar,\n        },\n        labels: props.labels,\n        dataLabels: {\n          enabled: true,\n        },\n        xaxis: {\n          labels: {\n            rotate: -45,\n          },\n          categories: props.categoriesLabel,\n          tickPlacement: \"on\",\n        },\n        yaxis: {\n          title: {\n            text: props.yaxisText,\n          },\n        },\n        fill: {\n          opacity: 1,\n        },\n        tooltip: {\n          y: {\n            formatter: function (val: number) {\n              return val + \" \" + props.tooltipText;\n            },\n          },\n        },\n        grid: {\n          padding: {\n            left: 30, // or whatever value that works\n            right: 30, // or whatever value that works\n          },\n        },\n        noData: {\n          text: \"No data found\",\n          align: \"center\",\n          verticalAlign: \"middle\",\n        },\n        colors: props.colors,\n      });\n    } else if (loading) {\n      setOptions({\n        chart: {\n          stacked: props.stacked ? props.stacked : false,\n          events: {\n            dataPointSelection: (event, chartContext, config) => {\n              console.log({\n                labelClicked: config.w.config.labels[config.dataPointIndex],\n                // seriesClicked: config.w.config.series[config.dataPointIndex],\n              });\n              if (props.FC_LoadSelected) {\n                props.FC_LoadSelected(\n                  config.dataPointIndex,\n                  config.seriesIndex\n                );\n              }\n              // console.log(config.seriesIndex);\n              // console.log(config.dataPointIndex);\n            },\n          },\n          zoom: {\n            enabled: true,\n            autoScaleYaxis: true,\n          },\n        },\n        plotOptions: {\n          bar: props.defaultBar ? props.defaultBar : defaultBar,\n        },\n        labels: props.labels,\n        dataLabels: {\n          enabled: true,\n        },\n        xaxis: {\n          labels: {\n            rotate: -45,\n          },\n          categories: props.categoriesLabel,\n          tickPlacement: \"on\",\n        },\n        yaxis: {\n          title: {\n            text: props.yaxisText,\n          },\n        },\n        fill: {\n          opacity: 1,\n        },\n        tooltip: {\n          y: {\n            formatter: function (val: number) {\n              return val + \" \" + props.tooltipText;\n            },\n          },\n        },\n        grid: {\n          padding: {\n            left: 30, // or whatever value that works\n            right: 30, // or whatever value that works\n          },\n        },\n        noData: {\n          text: \"No data found\",\n          align: \"center\",\n          verticalAlign: \"middle\",\n        },\n      });\n    }\n    setLoading(false);\n  }, [loading, options, props]);\n\n  if (loading) {\n    return (\n      <div className=\"text-center mt-7 font-bold text-4xl text-gray-400 animate-pulse\">\n        Loading Data...\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"w-full\">\n      <Chart\n        options={options}\n        series={props.series}\n        type=\"bar\"\n        width=\"100%\"\n        height={props.chartHeight ? props.chartHeight : undefined}\n      />\n    </div>\n  );\n};\n\nexport default React.memo(VBarChart);\n","import axios from \"axios\";\nimport React, { Component } from \"react\";\nimport { MdLock, MdLocationOn } from \"react-icons/md\";\nimport { connect } from \"react-redux\";\nimport { PushPopupAlert, schoolLevelsStoreInterface } from \"../../actions\";\nimport { getAllRoom } from \"../../actions/location\";\nimport { getSchools } from \"../../actions/schools\";\nimport {\n  blockUserToSystem,\n  unBlockUserToSystem,\n  resetUserAccess,\n} from \"../../actions/users\";\nimport { PopupAlertData } from \"../../components/Alert/Popup\";\nimport Loading from \"../../components/Loading/Loading\";\nimport NoResult, { NoResultThemes } from \"../../components/NoResult/NoResult\";\nimport Table from \"../../components/Table/Table\";\nimport { PopupAlertTheme } from \"../../interfaces/popupAlert\";\nimport { StoreState } from \"../../reducers\";\nimport {\n  getRoleById,\n  capitalizeFirstLetter,\n  getInstituteById,\n} from \"../../shared/dataTest\";\nimport {\n  RoomLocationInterface,\n  LocationRoomTableInterface,\n  DistrictInterface,\n  SystemUserRoleInterface,\n  UserInterface,\n  AccessTaskInterface,\n  SchoolsInterface,\n} from \"../../shared/interfaces\";\nimport { API } from \"../../utils/api\";\nimport { errorToText } from \"../../utils/errors\";\nimport { distinctDistrict } from \"../Locations/Locations\";\nimport { UserAccess } from \"./UserAccess\";\nimport UserRole from \"./UserRole\";\nimport profile from \"../../shared/blank_profile.png\"; // with im\n\nexport const getUserById = (users: UserInterface[], userId: string) => {\n  return users.find((item) => item.user_id === userId);\n};\n\nexport enum ModalState {\n  View_User = \"View User Info\",\n  Add_Access = \"Add Access To User\",\n  Update_Access = \"Update User Access\",\n  Close_Modal = \"Close Modal\",\n}\n\n// Tobe replaced with Emmy's function\nexport const LocationsInArray = (\n  LocationData: RoomLocationInterface[]\n): LocationRoomTableInterface[] | [] => {\n  let locationTemp: LocationRoomTableInterface[] = [];\n  for (let p in LocationData) {\n    let districts = LocationData[p].districts;\n    for (let d in districts) {\n      let centers = districts[d].centers;\n      for (let c in centers) {\n        let rooms = centers[c].rooms;\n        for (let r in rooms) {\n          locationTemp.push({\n            province_id: LocationData[p]._id,\n            province_name: LocationData[p].province_name,\n            district_id: districts[d]._id,\n            district_name: districts[d].district_name,\n            center_id: centers[c]._id,\n            center_name: centers[c].center_name,\n            room_id: rooms[r]._id,\n            room_name: rooms[r].room_number.toString(),\n            capacity: rooms[r].capacity,\n            occupied: rooms[r].occupied,\n          });\n        }\n      }\n    }\n  }\n  return locationTemp;\n};\n\ninterface AppProps {\n  users: UserInterface[];\n  roleList: SystemUserRoleInterface[];\n  userTypes: \"all\" | \"active\" | \"blocked\";\n  loadingUser: boolean;\n  schoolLevels: schoolLevelsStoreInterface;\n  setLoadingUser: (value: boolean) => void;\n  manageUser: UserInterface | null;\n  setManageUser: (value: UserInterface | null) => void;\n  changeRole: boolean;\n  setChangeRole: (value: boolean) => void;\n  currentPage: number;\n\n  // REDUX =================\n  allRoom: RoomLocationInterface[];\n  getAllRoom: Function;\n  schools: SchoolsInterface[];\n  getSchools: Function;\n  blockUserToSystem: Function;\n  unBlockUserToSystem: Function;\n  resetUserAccess: Function;\n  PushPopupAlert: (alert: PopupAlertData) => void;\n}\n\ninterface AppStates {\n  manageUserId: string;\n  loadingRequest: boolean;\n  loading: boolean;\n  loadingSchool: boolean;\n  loadingRequestType: \"RESET\" | \"STATUS\" | \"CHANGE_ROLE\" | null;\n  schoolList: SchoolsInterface[] | null;\n  roomList: RoomLocationInterface[] | null;\n  roomTable: LocationRoomTableInterface[] | null;\n  userAccess: AccessTaskInterface[] | null;\n  currentAccess: AccessTaskInterface | null;\n}\n\nclass UserList extends Component<AppProps, AppStates> {\n  constructor(props: AppProps) {\n    super(props);\n\n    this.state = {\n      manageUserId: \"\",\n      loadingRequest: false,\n      loading: true,\n      loadingSchool: true,\n      loadingRequestType: null,\n      schoolList: null,\n      roomList: null,\n      roomTable: null,\n      userAccess: null,\n      currentAccess: null,\n    };\n  }\n\n  setManageUserId = (value: string) => {\n    this.setState({ manageUserId: value });\n  };\n\n  setLoadingRequest = (value: boolean) => {\n    this.setState({ loadingRequest: value });\n  };\n\n  setLoadingSchool = (value: boolean) => {\n    this.setState({ loadingSchool: value });\n  };\n\n  setLoading = (value: boolean) => {\n    this.setState({ loading: value });\n  };\n\n  setLoadingRequestType = (\n    value: \"RESET\" | \"STATUS\" | \"CHANGE_ROLE\" | null\n  ) => {\n    this.setState({ loadingRequestType: value });\n  };\n\n  setRoomList = (value: RoomLocationInterface[] | null) => {\n    this.setState({ roomList: value });\n  };\n\n  setRoomTables = (value: LocationRoomTableInterface[] | null) => {\n    this.setState({ roomTable: value });\n  };\n\n  setCurrentAccess = (value: AccessTaskInterface | null) => {\n    this.setState({ currentAccess: value });\n  };\n\n  setSchoolList = (value: SchoolsInterface[] | null) => {\n    this.setState({ schoolList: value });\n  };\n\n  setUserAccess = (value: AccessTaskInterface[] | null) => {\n    this.setState({ userAccess: value });\n  };\n\n  componentDidMount = () => {\n    if (this.props.schools.length === 0) {\n      this.props.getSchools(\n        (status: boolean, msg: string, data?: SchoolsInterface[]) => {\n          this.setLoadingSchool(status);\n          if (!status) {\n            if (msg.length > 0) {\n              this.props.PushPopupAlert({\n                title: msg,\n                theme: PopupAlertTheme.danger,\n              });\n            }\n            if (data) {\n              this.setLoadingSchool(false);\n              this.setSchoolList(data);\n            }\n          }\n        }\n      );\n    } else {\n      this.setSchoolList(this.props.schools);\n      this.setLoadingSchool(false);\n    }\n\n    if (this.props.allRoom.length === 0) {\n      this.props.getAllRoom(\n        (status: boolean, msg: string, data?: RoomLocationInterface[]) => {\n          this.setLoading(status);\n          if (!status && msg.length > 0) {\n            this.props.PushPopupAlert({\n              title: msg,\n              theme: PopupAlertTheme.danger,\n            });\n          }\n          if (data && data.length > 0) {\n            this.setRoomList(data);\n            this.setRoomTables(LocationsInArray(data));\n          }\n        }\n      );\n    } else if (this.state.loading) {\n      this.setRoomList(this.props.allRoom);\n      this.setRoomTables(LocationsInArray(this.props.allRoom));\n      this.setLoading(false);\n    }\n  };\n\n  tableData = (): JSX.Element[] => {\n    if (\n      this.props.loadingUser ||\n      this.state.loading ||\n      this.state.loadingSchool\n    ) {\n      return [\n        <tr\n          key={Math.random()}\n          className=\"border-b border-gray-200 hover:bg-gray-100\"\n        >\n          <td className=\"p-3 text-center\" colSpan={8}>\n            <Loading />\n          </td>\n        </tr>,\n      ];\n    }\n\n    let data: UserInterface[] = this.props.users;\n    if (data.length <= 0) {\n      return [\n        <tr\n          key={Math.random()}\n          className=\"border-b border-gray-200 hover:bg-gray-100\"\n        >\n          <td className=\"p-3 text-center\" colSpan={8}>\n            No Data Found\n          </td>\n        </tr>,\n      ];\n    }\n\n    return data.map((user: UserInterface, index: number) => (\n      <tr\n        key={index + Math.random()}\n        className=\"border-b border-gray-200 hover:bg-gray-100 group cursor-pointer\"\n        onClick={() => {\n          this.props.setManageUser(user);\n          this.setManageUserId(user.user_id);\n        }}\n      >\n        <td className=\"p-3 text-left whitespace-nowrap\">{index + 1}</td>\n        <td className=\"p-3 text-left\">\n          <span>\n            {user.user_info &&\n              user.user_info.fname + \" \" + user.user_info.lname}\n          </span>\n        </td>\n        <td className=\"p-3 text-left\">{user.email}</td>\n        {/* <td className=\"p-3 text-left\">{user.phone_number}</td> */}\n        <td className=\"p-3 text-left\">\n          {user.user_info && user.user_info.sex === \"M\" ? \"Male\" : \"Female\"}\n        </td>\n        <td className=\"p-3 text-left text-blue-700 text-base font-medium\">\n          {user.default_access &&\n            user.default_access.system_user_role_id &&\n            user.default_access.system_user_role_id && (\n              <span\n                className={`px-2 py-1 font-semibold rounded text-blue-700 bg-blue-100 dark:bg-blue-700 dark:text-blue-100`}\n              >\n                {getRoleById(\n                  this.props.roleList,\n                  user.default_access.system_user_role_id\n                )?.role &&\n                  capitalizeFirstLetter(\n                    getRoleById(\n                      this.props.roleList,\n                      user.default_access.system_user_role_id\n                    )?.role\n                  )}\n              </span>\n            )}\n        </td>\n        {/* {userTypes === \"all\" && (\n          <td>\n            {user.is_active ? (\n              <span className={`px-2 py-1 font-semibold text-green-700`}>\n                Active\n              </span>\n            ) : (\n              <span className={`px-2 py-1 font-semibold text-red-700`}>\n                Blocked\n              </span>\n            )}\n          </td>\n        )} */}\n        <td className=\"px-3 text-center\">\n          <button\n            className=\"btn bg-gray-200 group-hover:bg-blue-700 group-hover:text-white focus:outline-none\"\n            title=\"Manage User Access\"\n            onClick={() => {\n              this.props.setManageUser(user);\n              this.setManageUserId(user.user_id);\n            }}\n          >\n            Manage\n          </button>\n        </td>\n      </tr>\n    ));\n  };\n\n  blockUser = async (user_id: string, actionType: boolean) => {\n    if (!user_id) {\n      this.props.PushPopupAlert({\n        title: \"User Access is required doesn't exist\",\n        theme: PopupAlertTheme.danger,\n      });\n    }\n\n    this.setLoadingRequest(true);\n\n    if (\n      !window.confirm(\n        `Are sure you want to ${actionType ? \"block\" : \"activate\"} this user?`\n      )\n    ) {\n      return this.setLoadingRequest(false);\n    }\n\n    try {\n      const res = await axios.patch(`${API.AUTH}/users/disactive/${user_id}`, {\n        is_active: !actionType,\n      });\n      if (res) {\n        console.log(\"====================================\");\n        console.log({ blockUserToSystem: res });\n        console.log(\"====================================\");\n        actionType\n          ? this.props.blockUserToSystem(user_id, this.props.currentPage)\n          : this.props.unBlockUserToSystem(user_id, this.props.currentPage);\n\n        this.props.PushPopupAlert({\n          title: `User has been ${actionType ? \"blocked\" : \"activated\"}!`,\n          theme: PopupAlertTheme.info,\n        });\n      }\n    } catch (error) {\n      console.error({ blockUser_ERROR: error });\n      this.props.PushPopupAlert({\n        title: errorToText(error),\n        theme: PopupAlertTheme.danger,\n      });\n    }\n\n    this.setLoadingRequest(false);\n    user_id = \"\";\n  };\n\n  restUserAccess = async (user_id: string) => {\n    if (!user_id) {\n      this.props.PushPopupAlert({\n        title: \"User Access is required doesn't exist\",\n        theme: PopupAlertTheme.warning,\n      });\n    }\n\n    if (!window.confirm(`Are sure you want to reset to default access?`)) {\n      return this.setLoadingRequest(false);\n    }\n\n    this.setLoadingRequest(true);\n    this.setLoadingRequestType(\"RESET\");\n\n    try {\n      const res = await axios.delete(`${API.AUTH}/custaccess/user/${user_id}`);\n      res && this.props.resetUserAccess(user_id, this.props.currentPage);\n      let resetedAccess: UserInterface | undefined = this.props.users.find(\n        (user) => user.user_id === user_id\n      );\n      if (resetedAccess) {\n        resetedAccess.default_access &&\n          this.setUserAccess(resetedAccess.default_access.access);\n        this.props.PushPopupAlert({\n          title: `Resetting User Access complete successfully`,\n          theme: PopupAlertTheme.info,\n        });\n        this.setCurrentAccess(null);\n      }\n    } catch (error) {\n      console.error({ reseting_user_access: error });\n      this.props.PushPopupAlert({\n        title: errorToText(error),\n        theme: PopupAlertTheme.danger,\n      });\n    }\n\n    this.setLoadingRequest(false);\n    this.setLoadingRequestType(null);\n    user_id = \"\";\n  };\n\n  distinctDistrict = (\n    location: RoomLocationInterface[],\n    province_id?: string\n  ): DistrictInterface[] => {\n    let ids: string[] = [],\n      result: DistrictInterface[] = [];\n\n    if (province_id) {\n      result = location.find((item) => item._id === province_id)\n        ? location.find((item) => item._id === province_id)!.districts\n          ? location.find((item) => item._id === province_id)!.districts\n          : []\n        : [];\n    } else {\n      for (const key in location) {\n        if (Object.prototype.hasOwnProperty.call(location, key)) {\n          for (const keyDistrict in location[key].districts) {\n            if (\n              Object.prototype.hasOwnProperty.call(\n                location[key].districts,\n                keyDistrict\n              )\n            ) {\n              if (!ids.includes(location[key].districts[keyDistrict]._id)) {\n                ids.push(location[key].districts[keyDistrict]._id);\n                result.push(location[key].districts[keyDistrict]);\n              }\n            }\n          }\n        }\n      }\n    }\n\n    return result;\n  };\n\n  render() {\n    return (\n      <div>\n        {!this.props.manageUser && (\n          <div className=\"grid md:grid-cols-5 gap-2 mb-5\">\n            <div className={`md:col-span-5 rounded`}>\n              <div className=\"my-2 flex sm:flex-row flex-col justify-between\">\n                <div className=\"flex flex-col md:flex-row gap-1 items-center mx-1.5\">\n                  {/* <span className=\"text-lg\">All User</span>\n                  <MdChevronRight className=\"w-7 h-7\" />\n                  <span className=\"text-lg underline\">All User</span> */}\n                </div>\n              </div>\n              {this.props.users && (\n                <Table\n                  columns={[\n                    { columnTitle: \"#\", alignText: \"left\", padding: \"p-3\" },\n                    { columnTitle: \"Names\", alignText: \"left\", padding: \"p-3\" },\n                    { columnTitle: \"Email\", alignText: \"left\", padding: \"p-3\" },\n                    {\n                      columnTitle: \"Gender\",\n                      alignText: \"left\",\n                      padding: \"p-3\",\n                    },\n                    { columnTitle: \"Role\", alignText: \"left\", padding: \"p-3\" },\n                    // { columnTitle: \"Status\", alignText: \"left\", padding: \"p-3\" },\n                    { columnTitle: \"\", alignText: \"left\", padding: \"p-3\" },\n                  ]}\n                  rows={this.tableData}\n                  pagination={false}\n                  search={true}\n                  thColor=\"gray\"\n                  loading={\n                    this.props.loadingUser ||\n                    this.state.loading ||\n                    this.state.loadingSchool\n                  }\n                />\n              )}\n            </div>\n          </div>\n        )}\n\n        {/* -------------------------------------------------------- */}\n\n        {this.props.manageUser && (\n          <div className=\"bg-gray-100 h-100\">\n            {/* header */}\n            <div className=\"bg-white border-b border-t px-4 py-2 flex flex-col md:flex-row items-center gap-x-14\">\n              {this.props.users.find(\n                (user) => user.user_id === this.state.manageUserId\n              ) ? (\n                <div\n                  key={\n                    this.props.users.find(\n                      (user) => user.user_id === this.state.manageUserId\n                    )!.user_id + Math.random()\n                  }\n                  className=\"flex flex-col md:flex-row md:items-start items-center w-full gap-3\"\n                >\n                  <img\n                    src={\n                      this.props.users.find(\n                        (user) => user.user_id === this.state.manageUserId\n                      )!.user_info.photo !== \"pic\"\n                        ? this.props.users.find(\n                            (user) => user.user_id === this.state.manageUserId\n                          )!.user_info.photo\n                        : profile\n                    }\n                    alt=\"\"\n                    className=\"rounded-full w-32 h-32\"\n                  />\n                  <div className=\"flex flex-col gap-1 items-start w-full\">\n                    <span className=\"text-2xl font-semibold\">\n                      {this.props.users.find(\n                        (user) => user.user_id === this.state.manageUserId\n                      )!.user_info.fname +\n                        \" \" +\n                        this.props.users.find(\n                          (user) => user.user_id === this.state.manageUserId\n                        )!.user_info.lname}\n                    </span>\n                    <div className=\"flex items-center\">\n                      <MdLock className=\"w-5 h-5\" />\n                      <span className=\"text-lg font-medium\">\n                        {this.props.users.find(\n                          (user) => user.user_id === this.state.manageUserId\n                        )!.default_access &&\n                          getRoleById(\n                            this.props.roleList,\n                            this.props.users.find(\n                              (user) => user.user_id === this.state.manageUserId\n                            )!.default_access!.system_user_role_id\n                          ).role}\n                      </span>\n                    </div>\n                    <div className=\"flex items-center gap-1\">\n                      <span className=\"text-gray-500\">Level:</span>\n                      <span className=\"text-base font-medium\">\n                        {this.props.users.find(\n                          (user) => user.user_id === this.state.manageUserId\n                        )!.default_access &&\n                        getRoleById(\n                          this.props.roleList,\n                          this.props.users.find(\n                            (user) => user.user_id === this.state.manageUserId\n                          )!.default_access!.system_user_role_id\n                        ).district_required\n                          ? \"District\"\n                          : this.props.users.find(\n                              (user) => user.user_id === this.state.manageUserId\n                            )!.default_access &&\n                            getRoleById(\n                              this.props.roleList,\n                              this.props.users.find(\n                                (user) =>\n                                  user.user_id === this.state.manageUserId\n                              )!.default_access!.system_user_role_id\n                            ).school_required\n                          ? \"School\"\n                          : this.props.users.find(\n                              (user) => user.user_id === this.state.manageUserId\n                            )!.default_access &&\n                            getRoleById(\n                              this.props.roleList,\n                              this.props.users.find(\n                                (user) =>\n                                  user.user_id === this.state.manageUserId\n                              )!.default_access!.system_user_role_id\n                            ).room_required\n                          ? \"Room\"\n                          : this.props.users.find(\n                              (user) => user.user_id === this.state.manageUserId\n                            )!.default_access &&\n                            getRoleById(\n                              this.props.roleList,\n                              this.props.users.find(\n                                (user) =>\n                                  user.user_id === this.state.manageUserId\n                              )!.default_access!.system_user_role_id\n                            ).education_institution_required\n                          ? \"Institute\"\n                          : \"-\"}\n                      </span>\n                    </div>\n                    {this.props.users.find(\n                      (user) => user.user_id === this.state.manageUserId\n                    )!.default_access &&\n                    getRoleById(\n                      this.props.roleList,\n                      this.props.users.find(\n                        (user) => user.user_id === this.state.manageUserId\n                      )!.default_access!.system_user_role_id\n                    ).education_institution_required ? (\n                      <div className=\"flex items-center gap-1\">\n                        <span className=\"text-gray-500\">Institute:</span>\n                        <span className=\"text-base font-medium\">\n                          {this.props.users.find(\n                            (user) => user.user_id === this.state.manageUserId\n                          )!.default_access &&\n                          this.props.schoolLevels.education_categories &&\n                          getInstituteById(\n                            this.props.schoolLevels.education_categories,\n                            this.props.users.find(\n                              (user) => user.user_id === this.state.manageUserId\n                            )!.default_access!.education_institution_id\n                          )\n                            ? getInstituteById(\n                                this.props.schoolLevels.education_categories,\n                                this.props.users.find(\n                                  (user) =>\n                                    user.user_id === this.state.manageUserId\n                                )!.default_access!.education_institution_id\n                              )!.education_category_title\n                            : \"Unknown Institute\"}\n                        </span>\n                      </div>\n                    ) : this.props.users.find(\n                        (user) => user.user_id === this.state.manageUserId\n                      )!.default_access &&\n                      getRoleById(\n                        this.props.roleList,\n                        this.props.users.find(\n                          (user) => user.user_id === this.state.manageUserId\n                        )!.default_access!.system_user_role_id\n                      ).district_required ? (\n                      <div className=\"flex items-center gap-1\">\n                        <span className=\"text-gray-500\">District:</span>\n                        <span className=\"text-base font-medium\">\n                          {this.props.users.find(\n                            (user) => user.user_id === this.state.manageUserId\n                          )!.default_access &&\n                            this.state.roomList &&\n                            distinctDistrict(this.state.roomList).find(\n                              (item) =>\n                                item.district_id ===\n                                this.props.users.find(\n                                  (user) =>\n                                    user.user_id === this.state.manageUserId\n                                )!.default_access!.district_id\n                            ) &&\n                            distinctDistrict(this.state.roomList).find(\n                              (item) =>\n                                item.district_id ===\n                                this.props.users.find(\n                                  (user) =>\n                                    user.user_id === this.state.manageUserId\n                                )!.default_access!.district_id\n                            )!.district_name}\n                        </span>\n                      </div>\n                    ) : this.props.users.find(\n                        (user) => user.user_id === this.state.manageUserId\n                      )!.default_access &&\n                      getRoleById(\n                        this.props.roleList,\n                        this.props.users.find(\n                          (user) => user.user_id === this.state.manageUserId\n                        )!.default_access!.system_user_role_id\n                      ).school_required ? (\n                      <div className=\"flex items-center gap-1\">\n                        <span className=\"text-gray-500\">School:</span>\n                        <span className=\"text-base font-medium\">\n                          {this.state.schoolList &&\n                          this.state.schoolList.find(\n                            (school) =>\n                              school._id ===\n                              this.props.users.find(\n                                (user) =>\n                                  user.user_id === this.state.manageUserId\n                              )!.default_access?.school_id\n                          )\n                            ? this.state.schoolList.find(\n                                (school) =>\n                                  school._id ===\n                                  this.props.users.find(\n                                    (user) =>\n                                      user.user_id === this.state.manageUserId\n                                  )!.default_access?.school_id\n                              )!.school_name\n                            : \"Unknown school\"}\n                        </span>\n                      </div>\n                    ) : (\n                      this.props.users.find(\n                        (user) => user.user_id === this.state.manageUserId\n                      )!.default_access &&\n                      getRoleById(\n                        this.props.roleList,\n                        this.props.users.find(\n                          (user) => user.user_id === this.state.manageUserId\n                        )!.default_access!.system_user_role_id\n                      ).room_required && (\n                        <div className=\"flex items-center gap-1\">\n                          {/* <span className=\"text-gray-500\">Room:</span> */}\n                          <MdLocationOn className=\"text-gray-500\" />\n                          {this.state.roomTable && (\n                            <span className=\"text-base font-medium\">\n                              {this.state.roomTable.find(\n                                (room) =>\n                                  room.room_id ===\n                                  this.props.users.find(\n                                    (user) =>\n                                      user.user_id === this.state.manageUserId\n                                  )!.default_access?.room_id\n                              )?.district_name +\n                                \" - \" +\n                                this.state.roomTable.find(\n                                  (room) =>\n                                    room.room_id ===\n                                    this.props.users.find(\n                                      (user) =>\n                                        user.user_id === this.state.manageUserId\n                                    )!.default_access?.room_id\n                                )?.center_name +\n                                \" - Room \" +\n                                this.state.roomTable.find(\n                                  (room) =>\n                                    room.room_id ===\n                                    this.props.users.find(\n                                      (user) =>\n                                        user.user_id === this.state.manageUserId\n                                    )!.default_access?.room_id\n                                )?.room_name}\n                            </span>\n                          )}\n                        </div>\n                      )\n                    )}\n                  </div>\n                </div>\n              ) : (\n                <NoResult\n                  theme={NoResultThemes.Dark}\n                  value={\"User info not found\"}\n                />\n              )}\n              {this.props.users.find(\n                (user) => user.user_id === this.state.manageUserId\n              ) && (\n                <div\n                  key={\n                    this.props.users.find(\n                      (user) => user.user_id === this.state.manageUserId\n                    )!.user_id + Math.random()\n                  }\n                  className=\"flex flex-col w-full\"\n                >\n                  <div className=\"flex items-center gap-1\">\n                    <span className=\"text-gray-500\">NID:</span>\n                    <span className=\"text-base font-medium\">\n                      {\n                        this.props.users.find(\n                          (user) => user.user_id === this.state.manageUserId\n                        )!.n_id\n                      }\n                    </span>\n                  </div>\n                  <div className=\"flex items-center gap-1\">\n                    <span className=\"text-gray-500\">Email:</span>\n                    <span className=\"text-base font-medium\">\n                      {\n                        this.props.users.find(\n                          (user) => user.user_id === this.state.manageUserId\n                        )!.email\n                      }\n                    </span>\n                  </div>\n                  <div className=\"flex items-center gap-1\">\n                    <span className=\"text-gray-500\">Phone:</span>\n                    <span className=\"text-base font-medium\">\n                      {\n                        this.props.users.find(\n                          (user) => user.user_id === this.state.manageUserId\n                        )!.phone_number\n                      }\n                    </span>\n                  </div>\n                  <div className=\"flex items-center gap-1\">\n                    <span className=\"text-gray-500\">Status:</span>\n                    <span className=\"text-base font-medium\">\n                      {this.props.users.find(\n                        (user) => user.user_id === this.state.manageUserId\n                      )!.is_active === false\n                        ? \"Blocked\"\n                        : \"Active\"}\n                    </span>\n                  </div>\n                  <div className=\"flex items-center gap-1\">\n                    {this.props.users.find(\n                      (user) => user.user_id === this.state.manageUserId\n                    )!.custome_access && (\n                      <button\n                        className={`px-2 py-1 font-semibold text-gray-50 inline-flex items-center rounded ${\n                          this.state.loadingRequestType &&\n                          this.state.loadingRequestType === \"RESET\"\n                            ? \"cursor-wait bg-gray-400\"\n                            : \"bg-gray-600\"\n                        }`}\n                        onClick={() =>\n                          this.restUserAccess(\n                            this.props.users.find(\n                              (user) => user.user_id === this.state.manageUserId\n                            )!.user_id\n                          )\n                        }\n                        disabled={this.state.loadingRequest}\n                      >\n                        <MdLock className=\"w-4 h-4 fill-current\" />\n                        <span>\n                          {this.state.loadingRequestType &&\n                          this.state.loadingRequestType === \"RESET\"\n                            ? \"Reseting...\"\n                            : \"Reset Access\"}\n                        </span>\n                      </button>\n                    )}\n                    {!this.props.changeRole && (\n                      <button\n                        className=\"bg-yellow-300 hover:bg-yellow-400 px-2 py-1 font-semibold text-black inline-flex items-center rounded\"\n                        onClick={() => this.props.setChangeRole(true)}\n                      >\n                        <MdLock className=\"w-4 h-4 fill-current\" />\n                        <span>Change Role</span>\n                      </button>\n                    )}\n                    {this.props.users.find(\n                      (user) => user.user_id === this.state.manageUserId\n                    )!.is_active ? (\n                      <button\n                        className={`px-2 py-1 font-semibold text-gray-100 inline-flex items-center rounded ${\n                          this.state.loadingRequestType &&\n                          this.state.loadingRequestType === \"STATUS\"\n                            ? \"cursor-wait bg-red-500\"\n                            : \"bg-red-700\"\n                        }`}\n                        onClick={() =>\n                          !this.state.loadingRequest &&\n                          this.props.manageUser &&\n                          this.blockUser(\n                            this.props.users.find(\n                              (user) => user.user_id === this.state.manageUserId\n                            )!.user_id,\n                            this.props.users.find(\n                              (user) => user.user_id === this.state.manageUserId\n                            )!.is_active\n                          )\n                        }\n                        disabled={this.state.loadingRequest}\n                      >\n                        <MdLock className=\"w-4 h-4 fill-current\" />\n                        <span>\n                          {this.state.loadingRequestType &&\n                          this.state.loadingRequestType === \"RESET\"\n                            ? \"Loading...\"\n                            : \"Block user\"}\n                        </span>\n                      </button>\n                    ) : (\n                      <button\n                        className={`px-2 py-1 font-semibold text-gray-100 inline-flex items-center rounded ${\n                          this.state.loadingRequestType &&\n                          this.state.loadingRequestType === \"STATUS\"\n                            ? \"cursor-wait bg-yellow-500\"\n                            : \"bg-yellow-700\"\n                        }`}\n                        onClick={() =>\n                          !this.state.loadingRequest &&\n                          this.props.manageUser &&\n                          this.blockUser(\n                            this.props.users.find(\n                              (user) => user.user_id === this.state.manageUserId\n                            )!.user_id,\n                            this.props.users.find(\n                              (user) => user.user_id === this.state.manageUserId\n                            )!.is_active\n                          )\n                        }\n                        disabled={this.state.loadingRequest}\n                      >\n                        <MdLock className=\"w-4 h-4 fill-current\" />\n                        <span>\n                          {this.state.loadingRequestType &&\n                          this.state.loadingRequestType === \"RESET\"\n                            ? \"Loading...\"\n                            : \"Re-Activate\"}\n                        </span>\n                      </button>\n                    )}\n                  </div>\n                </div>\n              )}\n            </div>\n            {/* end header */}\n\n            {/* content */}\n            {this.props.manageUser &&\n            this.state.roomList &&\n            this.props.changeRole ? (\n              <UserRole\n                userInfo={this.props.manageUser}\n                roleList={this.props.roleList}\n                district={this.distinctDistrict(this.state.roomList)}\n                schoolList={this.state.schoolList}\n                roomList={this.state.roomList}\n                setChangeRole={this.props.setChangeRole}\n                currentPage={this.props.currentPage}\n              />\n            ) : (\n              <UserAccess\n                userInfo={getUserById(\n                  this.props.users,\n                  this.state.manageUserId\n                )}\n                manageUserId={this.state.manageUserId}\n                setUserAccess={this.setUserAccess}\n                userAccess={this.state.userAccess}\n                setCurrentAccess={this.setCurrentAccess}\n                currentAccess={this.state.currentAccess}\n                currentPage={this.props.currentPage}\n              />\n            )}\n            {/* end content */}\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = ({\n  schoolLevels,\n  schools,\n  locations,\n}: StoreState): {\n  schoolLevels: schoolLevelsStoreInterface;\n  schools: SchoolsInterface[];\n  allRoom: RoomLocationInterface[];\n} => {\n  return {\n    schoolLevels,\n    schools: schools.schools,\n    allRoom: locations.roomLocation,\n  };\n};\n\nexport default React.memo(\n  connect(mapStateToProps, {\n    blockUserToSystem,\n    unBlockUserToSystem,\n    resetUserAccess,\n    getSchools,\n    getAllRoom,\n    PushPopupAlert,\n  })(UserList)\n);\n","import React, { useState } from \"react\";\nimport { MdSearch } from \"react-icons/md\";\nimport { capitalizeFirstLetter } from \"../../shared/dataTest\";\nimport { SystemUserRoleInterface } from \"../../shared/interfaces\";\nimport search from \"../../utils/search\";\n\n// const searchRole = (\n//   objList: SystemUserRoleInterface[],\n//   text: string\n// ): SystemUserRoleInterface[] => {\n//   return objList.filter(\n//     (product) => product.role.toLocaleLowerCase() === text.toLocaleLowerCase()\n//   );\n// };\n\ntype RoleListProps = {\n  setChooseRole: (value: boolean) => void;\n  roleList: SystemUserRoleInterface[];\n  handleSelectRole: (role_id: string, TYPE?: \"SELECT\" | \"DEFAULT\") => void;\n  loadindRequest: boolean;\n};\n\nconst RoleList: React.FC<RoleListProps> = (props) => {\n  const [searchInput, setSearchInput] = useState<string>(\"\");\n  return (\n    <section className=\"border-2 rounded border-gray-400\">\n      {/* SEARCH PART */}\n      <div className=\"flex items-center w-full my-1\">\n        <MdSearch className=\"w-6 h-6 absolute ml-2\" />\n        <input\n          type=\"text\"\n          placeholder=\"Search\"\n          className=\"focus:border-2 h-7 ml-1 pl-9 mr-2 bg-gray-100 focus:border-gray-700 w-full rounded\"\n          onChange={(e) => setSearchInput(e.target.value)}\n          value={searchInput}\n          disabled={props.roleList.length > 0 ? false : true}\n        />\n        <button\n          className=\"bg-red-200 text-red-700 py-1 px-2 mr-1 rounded text-sm focus:outline-none\"\n          type=\"button\"\n          onClick={() => {\n            props.setChooseRole(false);\n          }}\n        >\n          Close\n        </button>\n      </div>\n      {/* END SEARCH PART ///////////////// */}\n\n      <div className=\"w-full h-52 mt-2 overflow-y-auto divide-y divide-gray-300\">\n        {search(props.roleList, searchInput).length > 0 ? (\n          search(props.roleList, searchInput).map((role, index) => (\n            <section key={index + role.role}>\n              <div className=\"group flex items-center justify-between my-1 hover:bg-gray-100\">\n                <div\n                  className=\"p-1 w-full mr-2 cursor-pointer\"\n                  onClick={() => {\n                    props.setChooseRole(false);\n                    !props.loadindRequest &&\n                      props.handleSelectRole(role.system_user_role_id);\n                  }}\n                >\n                  <p className=\"text-sm font-medium text-black\">\n                    {capitalizeFirstLetter(role.role)}\n                  </p>\n                </div>\n                <button\n                  type=\"button\"\n                  className=\"bg-blue-200 group-hover:bg-blue-300 text-blue-700 group-hover:text-blue-800 py-1 px-2 mr-1 rounded text-sm\"\n                >\n                  Choose\n                </button>\n              </div>\n            </section>\n          ))\n        ) : (\n          <div className=\"text-center p-3\">\n            <p className=\"text-base font-medium text-black\">\n              No role available\n            </p>\n          </div>\n        )}\n      </div>\n    </section>\n  );\n};\n\nexport default React.memo(RoleList);\n","import axios from \"axios\";\nimport React, { Component } from \"react\";\nimport { MdHighlightOff } from \"react-icons/md\";\nimport { TiInputChecked } from \"react-icons/ti\";\nimport { connect } from \"react-redux\";\nimport { schoolLevelsStoreInterface, PushPopupAlert } from \"../../actions\";\nimport { assignRoleToUserAccess } from \"../../actions/users\";\nimport { PopupAlertData } from \"../../components/Alert/Popup\";\nimport Loading from \"../../components/Loading/Loading\";\nimport Table from \"../../components/Table/Table\";\nimport { PopupAlertTheme } from \"../../interfaces/popupAlert\";\nimport { StoreState } from \"../../reducers\";\nimport { isEmptyOrSpaces } from \"../../shared/dataTest\";\nimport {\n  UserInterface,\n  SystemUserRoleInterface,\n  DistrictInterface,\n  SchoolsInterface,\n  RoomLocationInterface,\n  AssignRoleToUserActionInterface,\n  LocationRoomTableInterface,\n  RoleToUserInterface,\n} from \"../../shared/interfaces\";\nimport { API } from \"../../utils/api\";\nimport { errorToText } from \"../../utils/errors\";\nimport RoleList from \"./RoleList\";\nimport { LocationsInArray } from \"./UserList\";\n\ninterface AppProps {\n  currentPage: number;\n  userInfo: UserInterface;\n  roleList: SystemUserRoleInterface[];\n  district: DistrictInterface[];\n  assignRoleToUserAccess: Function;\n  schoolList: SchoolsInterface[] | null;\n  roomList: RoomLocationInterface[] | null;\n  schoolLevels: schoolLevelsStoreInterface;\n  setChangeRole: (value: boolean) => void;\n  PushPopupAlert: (alert: PopupAlertData) => void;\n}\n\ninterface AppState {\n  loading: boolean;\n  loadingForm: boolean;\n  loadingRequest: boolean;\n  roleId: string;\n  provinceId: string;\n  districtId: string;\n  schoolId: string;\n  roomId: string;\n  instituteId: string;\n  centerId: string;\n  selectedRole: SystemUserRoleInterface | null;\n  formError: {\n    element: string;\n    msg: string;\n  } | null;\n  chooseRole: boolean;\n  chooseSchool: boolean;\n}\n\nclass UserRole extends Component<AppProps, AppState> {\n  constructor(props: AppProps) {\n    super(props);\n\n    this.state = {\n      loading: true,\n      loadingForm: true,\n      loadingRequest: false,\n      roleId: \"\",\n      provinceId: \"\",\n      districtId: \"\",\n      schoolId: \"\",\n      roomId: \"\",\n      instituteId: \"\",\n      centerId: \"\",\n      selectedRole: null,\n      formError: null,\n      chooseRole: false,\n      chooseSchool: false,\n    };\n  }\n\n  setRoleId = (value: string) => {\n    this.setState({ roleId: value });\n  };\n\n  setSelectedRole = (value: SystemUserRoleInterface | null) => {\n    this.setState({ selectedRole: value });\n  };\n\n  setProvinceId = (value: string) => {\n    this.setState({ provinceId: value });\n  };\n\n  setDistrictId = (value: string) => {\n    this.setState({ districtId: value });\n  };\n\n  setCenterId = (value: string) => {\n    this.setState({ centerId: value });\n  };\n\n  setRoomId = (value: string) => {\n    this.setState({ roomId: value });\n  };\n\n  setLoadingForm = (value: boolean) => {\n    this.setState({ loadingForm: value });\n  };\n\n  setSchoolId = (value: string) => {\n    this.setState({ schoolId: value });\n  };\n\n  setChooseSchool = (value: boolean) => {\n    this.setState({ chooseSchool: value });\n  };\n\n  setLoading = (value: boolean) => {\n    this.setState({ loading: value });\n  };\n\n  setInstituteId = (value: string) => {\n    this.setState({ instituteId: value });\n  };\n\n  setFormError = (\n    value: {\n      element: string;\n      msg: string;\n    } | null\n  ) => {\n    this.setState({ formError: value });\n  };\n  setLoadingRequest = (value: boolean) => {\n    this.setState({ loadingRequest: value });\n  };\n  setChooseRole = (value: boolean) => {\n    this.setState({ chooseRole: value });\n  };\n\n  setDefaultState = (\n    default_access: RoleToUserInterface,\n    role: SystemUserRoleInterface\n  ) => {\n    // SET DEFAULT PROVINCE && DISTRICT ID =======================\n    let LOAD_province: LocationRoomTableInterface | undefined;\n    let LOAD_district: DistrictInterface | undefined;\n    if (role.district_required && this.props.roomList) {\n      LOAD_district = this.distinctDistrict(this.props.roomList).find(\n        (item) => item._id === default_access!.district_id\n      );\n      LOAD_district && this.setProvinceId(LOAD_district.province_id);\n      LOAD_district && this.setDistrictId(default_access!.district_id);\n      this.setLoadingForm(false);\n    } else if (role.room_required && this.props.roomList) {\n      // SET DEFAULT PROVINCE && DISTRICT && ROOM ID =======================\n\n      LOAD_province = LocationsInArray(this.props.roomList).find(\n        (item) => item.room_id === default_access!.room_id\n      );\n      LOAD_province && this.setProvinceId(LOAD_province.province_id);\n      LOAD_province && this.setDistrictId(LOAD_province.district_id);\n      LOAD_province && this.setCenterId(LOAD_province.center_id);\n      this.setRoomId(default_access.room_id);\n      this.setLoadingForm(false);\n    } else if (\n      role.school_required &&\n      this.props.roomList &&\n      this.props.schoolList\n    ) {\n      // SET DEFAULT PROVINCE && DISTRICT && SCHOOL ID =======================\n      let LOAD_school: SchoolsInterface | undefined =\n        this.props.schoolList.find(\n          (item) => item._id === default_access!.school_id\n        );\n      if (LOAD_school) {\n        LOAD_province = LocationsInArray(this.props.roomList).find(\n          (item) => item.district_id === LOAD_school?.district_id\n        );\n        LOAD_province && this.setProvinceId(LOAD_province.province_id);\n        LOAD_province && this.setDistrictId(LOAD_province.district_id);\n        this.setSchoolId(default_access.school_id);\n        this.setLoadingForm(false);\n      } else {\n        this.setLoadingForm(false);\n      }\n    } else {\n      this.setLoadingForm(false);\n    }\n  };\n\n  componentDidMount = () => {\n    if (this.props.roleList.length) {\n      if (this.props.userInfo.default_access && this.state.loadingForm) {\n        // SET DEFAULT ROLE ID =======================\n        if (!this.state.roleId.length) {\n          let result = this.props.roleList.find(\n            (role) =>\n              role.system_user_role_id ===\n              this.props.userInfo.default_access!.system_user_role_id\n          );\n          if (result) {\n            this.setRoleId(\n              this.props.userInfo.default_access.system_user_role_id\n            );\n            this.setSelectedRole(result);\n            this.setDefaultState(this.props.userInfo.default_access, result);\n          }\n        }\n\n        console.log(\"====================================\");\n        console.log({ vvvvv: this.props.userInfo.default_access });\n        console.log(\"====================================\");\n      }\n\n      if (this.state.selectedRole && this.props.userInfo.default_access) {\n        this.setDefaultState(\n          this.props.userInfo.default_access,\n          this.state.selectedRole\n        );\n      }\n\n      this.setLoading(false);\n    }\n  };\n\n  handleSelectRole = (\n    role_id: string,\n    TYPE: \"SELECT\" | \"DEFAULT\" = \"SELECT\"\n  ) => {\n    if (this.props.roleList) {\n      let result = this.props.roleList.find(\n        (role) => role.system_user_role_id === role_id\n      );\n      if (result) {\n        this.setRoleId(role_id);\n        this.setSelectedRole(result);\n        this.state.formError &&\n          this.state.formError.element === \"role_id\" &&\n          this.setFormError(null);\n\n        if (TYPE === \"SELECT\") {\n          this.setProvinceId(\"\");\n          this.setDistrictId(\"\");\n          this.setSchoolId(\"\");\n          this.setCenterId(\"\");\n          this.setRoomId(\"\");\n          this.setInstituteId(\"\");\n        }\n      }\n    }\n  };\n\n  tableData = (): JSX.Element[] => {\n    if (\n      this.state.roleId.length > 0 &&\n      this.state.selectedRole === null &&\n      this.props.roleList\n    ) {\n      this.handleSelectRole(this.state.roleId, \"DEFAULT\");\n    }\n    if (this.state.selectedRole) {\n      return this.state.selectedRole.access.map((access, i) => (\n        <tr\n          key={i + access.id + Math.random()}\n          className={`text-left border-b border-gray-200 hover:bg-gray-100`}\n        >\n          <td className=\"px-2 py-1\">\n            <label className=\"inline-flex items-center\">\n              <span className=\"text-gray-900 capitalize text-xl font-normal cursor-pointer\">\n                {access.task}\n              </span>\n            </label>\n          </td>\n          <td>\n            <div\n              className={`inline-flex items-center text-xl ${\n                access.permitted.create ? \"text-green-700\" : \"text-red-700\"\n              }`}\n            >\n              {access.permitted.create ? (\n                <TiInputChecked />\n              ) : (\n                <MdHighlightOff />\n              )}\n              {access.permitted.create ? \" Yes\" : \"No\"}\n            </div>\n          </td>\n          <td>\n            <div\n              className={`inline-flex items-center text-xl ${\n                access.permitted.view ? \"text-green-700\" : \"text-red-700\"\n              }`}\n            >\n              {access.permitted.view ? <TiInputChecked /> : <MdHighlightOff />}\n              {access.permitted.view ? \" Yes\" : \"No\"}\n            </div>\n          </td>\n          <td>\n            <div\n              className={`inline-flex items-center text-xl ${\n                access.permitted.update ? \"text-green-700\" : \"text-red-700\"\n              }`}\n            >\n              {access.permitted.update ? (\n                <TiInputChecked />\n              ) : (\n                <MdHighlightOff />\n              )}\n              {access.permitted.update ? \" Yes\" : \"No\"}\n            </div>\n          </td>\n          <td>\n            <div\n              className={`inline-flex items-center text-xl ${\n                access.permitted.delete ? \"text-green-700\" : \"text-red-700\"\n              }`}\n            >\n              {access.permitted.delete ? (\n                <TiInputChecked />\n              ) : (\n                <MdHighlightOff />\n              )}\n              {access.permitted.delete ? \" Yes\" : \"No\"}\n            </div>\n          </td>\n        </tr>\n      ));\n    }\n    const optionB = [\n      <tr key=\"55re\">\n        <td colSpan={5} className=\"text-center px-2 py-2\">\n          No Default Access Available on this Role.\n        </td>\n      </tr>,\n    ];\n    return optionB;\n  };\n\n  assignRoleToUser = async (e: React.FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n    if (!window.confirm(`Are sure you want to change user role?`)) {\n      return false;\n    }\n\n    if (!this.state.selectedRole) {\n      return this.setFormError({\n        element: \"role_id\",\n        msg: \"User role is required!\",\n      });\n    }\n\n    if (\n      this.state.selectedRole.room_required === true &&\n      isEmptyOrSpaces(this.state.provinceId)\n    ) {\n      return this.setFormError({\n        element: \"province_id\",\n        msg: \"Province is required!\",\n      });\n    }\n\n    if (\n      this.state.selectedRole.education_institution_required === true &&\n      isEmptyOrSpaces(this.state.instituteId)\n    ) {\n      return this.setFormError({\n        element: \"institute_id\",\n        msg: \"Institute is required on this role!\",\n      });\n    }\n\n    if (\n      (this.state.selectedRole.room_required === true ||\n        this.state.selectedRole.district_required === true) &&\n      isEmptyOrSpaces(this.state.districtId)\n    ) {\n      return this.setFormError({\n        element: \"district_id\",\n        msg: \"District is required!\",\n      });\n    }\n\n    if (\n      this.state.selectedRole.school_required === true &&\n      isEmptyOrSpaces(this.state.schoolId)\n    ) {\n      return this.setFormError({\n        element: \"school_id\",\n        msg: \"School is required!\",\n      });\n    }\n\n    if (\n      this.state.selectedRole.room_required === true &&\n      isEmptyOrSpaces(this.state.centerId)\n    ) {\n      return this.setFormError({\n        element: \"center_id\",\n        msg: \"Center is required!\",\n      });\n    }\n\n    if (\n      this.state.selectedRole.room_required === true &&\n      isEmptyOrSpaces(this.state.roomId)\n    ) {\n      return this.setFormError({\n        element: \"room_id\",\n        msg: \"Room is required!\",\n      });\n    }\n    this.setLoadingRequest(true);\n    let formData: AssignRoleToUserActionInterface = {\n      user_id: this.props.userInfo.user_id,\n      data: {\n        system_user_role_id: this.state.roleId,\n        status: 1,\n        role: this.state.selectedRole.role,\n        access: this.state.selectedRole.access,\n        school_id: this.state.selectedRole.school_required\n          ? this.state.schoolId\n          : \"\",\n        district_id: this.state.selectedRole.district_required\n          ? this.state.districtId\n          : \"\",\n        room_id: this.state.selectedRole.room_required ? this.state.roomId : \"\",\n        education_institution_id: this.state.selectedRole\n          .education_institution_required\n          ? this.state.instituteId\n          : \"\",\n      },\n    };\n\n    try {\n      const res = await axios.post(`${API.AUTH}/addroletouser`, {\n        user_id: this.props.userInfo.user_id,\n        system_user_role_id: this.state.roleId,\n        status: 1,\n        role: this.state.selectedRole.role,\n        access: true,\n        school_id:\n          this.state.selectedRole.school_required === true\n            ? this.state.schoolId\n            : \"\",\n        district_id:\n          this.state.selectedRole.district_required === true\n            ? this.state.districtId\n            : \"\",\n        room_id:\n          this.state.selectedRole.room_required === true\n            ? this.state.roomId\n            : \"\",\n        education_institution_id: this.state.selectedRole\n          .education_institution_required\n          ? this.state.instituteId\n          : \"\",\n      });\n      if (res) {\n        console.log(\"====================================\");\n        console.log({ assignRoleToUser: res });\n        console.log(\"====================================\");\n        this.props.assignRoleToUserAccess(formData, this.props.currentPage);\n        this.setLoadingRequest(false);\n        this.props.setChangeRole(false);\n        this.props.PushPopupAlert({\n          title: \"Assigning Role to User completed successfully\",\n          theme: PopupAlertTheme.success,\n        });\n      }\n    } catch (error) {\n      console.log({ role_error: error });\n      this.props.PushPopupAlert({\n        title: errorToText(error),\n        theme: PopupAlertTheme.danger,\n      });\n    }\n  };\n\n  distinctDistrict = (\n    location: RoomLocationInterface[],\n    province_id?: string\n  ): DistrictInterface[] => {\n    let ids: string[] = [],\n      result: DistrictInterface[] = [];\n\n    if (province_id) {\n      result = location.find((item) => item._id === province_id)\n        ? location.find((item) => item._id === province_id)!.districts\n          ? location.find((item) => item._id === province_id)!.districts\n          : []\n        : [];\n    } else {\n      for (const key in location) {\n        if (Object.prototype.hasOwnProperty.call(location, key)) {\n          for (const keyDistrict in location[key].districts) {\n            if (\n              Object.prototype.hasOwnProperty.call(\n                location[key].districts,\n                keyDistrict\n              )\n            ) {\n              if (!ids.includes(location[key].districts[keyDistrict]._id)) {\n                ids.push(location[key].districts[keyDistrict]._id);\n                result.push(location[key].districts[keyDistrict]);\n              }\n            }\n          }\n        }\n      }\n    }\n\n    return result;\n  };\n\n  distinctCenter = (\n    rooms: RoomLocationInterface[],\n    district_id: string\n  ): LocationRoomTableInterface[] => {\n    let ids: string[] = [],\n      result: LocationRoomTableInterface[] = [];\n\n    LocationsInArray(rooms).forEach((element) => {\n      if (\n        !ids.includes(element.center_id) &&\n        element.district_id === district_id\n      ) {\n        ids.push(element.center_id);\n        result.push(element);\n      }\n    });\n    return result;\n  };\n\n  distinctRoom = (\n    rooms: RoomLocationInterface[],\n    center_id: string\n  ): LocationRoomTableInterface[] => {\n    let ids: string[] = [],\n      result: LocationRoomTableInterface[] = [];\n\n    LocationsInArray(rooms).forEach((element) => {\n      if (!ids.includes(element.room_id) && element.center_id === center_id) {\n        ids.push(element.room_id);\n        result.push(element);\n      }\n    });\n    return result;\n  };\n\n  render() {\n    if (\n      this.state.loading === true ||\n      this.state.loadingForm ||\n      this.props.userInfo.default_access === null ||\n      this.state.roleId.length === 0 ||\n      this.state.selectedRole === null\n    ) {\n      return (\n        <div className=\"text-center py-7 font-bold text-3xl text-gray-400 animate-pulse\">\n          Loading...\n        </div>\n      );\n    }\n\n    return (\n      <div className=\"grid grid-cols-1 md:grid-cols-3 gap-8 py-2 md:py-4 px-2 md:px-0\">\n        {/* left panel */}\n        <div className=\"col-span-1 bg-white w-full overflow-x-auto border rounded\">\n          <div className=\"px-6 md:px-12 py-5 bg-white mx-auto rounded-2xl w-100\">\n            <h3 className=\"font-semibold text-2xl text-gray-800 mb-4\">\n              Change User Role\n            </h3>\n            {this.state.loadingForm ? (\n              <Loading />\n            ) : (\n              <form onSubmit={(e) => this.assignRoleToUser(e)}>\n                <div className=\"space-y-5\">\n                  <div className=\"space-y-2\">\n                    <label className=\"text-sm font-medium text-gray-700 tracking-wide\">\n                      User Role\n                    </label>\n\n                    {!this.state.chooseRole && (\n                      <div\n                        className={`w-full text-base bg-white text-grey-darker cursor-pointer border-2 px-4 py-3 rounded focus:outline-none focus:bg-gray-100 ${\n                          this.state.formError &&\n                          this.state.formError.element === \"role_id\"\n                            ? \"border-red-500\"\n                            : \"border-gray-400\"\n                        }`}\n                        onClick={() => {\n                          !this.state.loadingRequest &&\n                            this.setChooseRole(true);\n                          !this.state.loadingRequest && this.setFormError(null);\n                        }}\n                      >\n                        {this.state.selectedRole\n                          ? this.state.selectedRole.role\n                          : \"Select role\"}\n                      </div>\n                    )}\n\n                    {this.state.chooseRole && (\n                      <RoleList\n                        setChooseRole={this.setChooseRole}\n                        handleSelectRole={this.handleSelectRole}\n                        roleList={this.props.roleList}\n                        loadindRequest={this.state.loadingRequest}\n                      />\n                    )}\n\n                    {this.state.formError &&\n                      this.state.formError.element === \"role_id\" && (\n                        <span className=\"text-red-500\">\n                          {this.state.formError.msg}\n                        </span>\n                      )}\n                  </div>\n\n                  {this.state.selectedRole &&\n                    this.state.selectedRole.education_institution_required && (\n                      <div className=\"space-y-2\">\n                        <label className=\"mb-5 text-sm font-medium text-gray-700 tracking-wide\">\n                          Institute\n                        </label>\n                        <select\n                          className={`block w-full text-base bg-white text-grey-darker border-2 rounded px-4 py-3 md:w-full focus:outline-none focus:bg-gray-100 ${\n                            this.state.formError &&\n                            this.state.formError.element === \"institute_id\"\n                              ? \"border-red-500\"\n                              : \"border-gray-400\"\n                          }`}\n                          onChange={(e) => {\n                            this.setInstituteId(e.target.value);\n                            this.setProvinceId(\"\");\n                            this.setDistrictId(\"\");\n                            this.setSchoolId(\"\");\n                            this.setCenterId(\"\");\n                            this.setRoomId(\"\");\n                            this.state.formError &&\n                              this.state.formError.element === \"institute_id\" &&\n                              this.setFormError(null);\n                          }}\n                          disabled={this.state.loadingRequest}\n                          value={this.state.instituteId}\n                        >\n                          <option value=\"\">Select institute</option>\n                          {this.props.schoolLevels.education_categories &&\n                          this.props.schoolLevels.education_categories.length >\n                            0 ? (\n                            this.props.schoolLevels.education_categories.map(\n                              (institute) => (\n                                <option\n                                  value={institute.education_institute_id}\n                                  key={\n                                    institute.education_institute_id +\n                                    Math.random()\n                                  }\n                                >\n                                  {institute.education_category_title}\n                                </option>\n                              )\n                            )\n                          ) : (\n                            <option value=\"\" disabled>\n                              No institute available\n                            </option>\n                          )}\n                        </select>\n                        {this.state.formError &&\n                          this.state.formError.element === \"institute_id\" && (\n                            <span className=\"text-red-500\">\n                              {this.state.formError.msg}\n                            </span>\n                          )}\n                      </div>\n                    )}\n\n                  {this.state.selectedRole &&\n                    this.state.selectedRole.room_required && (\n                      <div className=\"space-y-2\">\n                        <label className=\"mb-5 text-sm font-medium text-gray-700 tracking-wide\">\n                          Province\n                        </label>\n                        <select\n                          className={`block w-full text-base bg-white text-grey-darker border-2 rounded px-4 py-3 md:w-full focus:outline-none focus:bg-gray-100 ${\n                            this.state.formError &&\n                            this.state.formError.element === \"province_id\"\n                              ? \"border-red-500\"\n                              : \"border-gray-400\"\n                          }`}\n                          onChange={(e) => {\n                            this.setProvinceId(e.target.value);\n                            this.state.formError &&\n                              this.state.formError.element === \"province_id\" &&\n                              this.setFormError(null);\n                            this.setDistrictId(\"\");\n                            this.setSchoolId(\"\");\n                            this.setCenterId(\"\");\n                            this.setRoomId(\"\");\n                          }}\n                          value={this.state.provinceId}\n                          disabled={this.state.loadingRequest}\n                        >\n                          <option value=\"\">Select province</option>\n                          {this.props.roomList &&\n                            this.props.roomList.map((province) => (\n                              <option\n                                key={province._id + Math.random()}\n                                value={province._id}\n                              >\n                                {province.province_name}\n                              </option>\n                            ))}\n                        </select>\n                        {this.state.formError &&\n                          this.state.formError.element === \"province_id\" && (\n                            <span className=\"text-red-500\">\n                              {this.state.formError.msg}\n                            </span>\n                          )}\n                      </div>\n                    )}\n                  {this.state.selectedRole &&\n                    (this.state.selectedRole.district_required ||\n                      this.state.selectedRole.room_required) && (\n                      <div className=\"space-y-2\">\n                        <label className=\"mb-5 text-sm font-medium text-gray-700 tracking-wide\">\n                          District\n                        </label>\n                        <select\n                          className={`block w-full text-base bg-white text-grey-darker border-2 rounded px-4 py-3 md:w-full focus:outline-none focus:bg-gray-100 ${\n                            this.state.formError &&\n                            this.state.formError.element === \"district_id\"\n                              ? \"border-red-500\"\n                              : \"border-gray-400\"\n                          }`}\n                          onChange={(e) => {\n                            this.setDistrictId(e.target.value);\n                            this.state.formError &&\n                              this.state.formError.element === \"district_id\" &&\n                              this.setFormError(null);\n                            this.setSchoolId(\"\");\n                            this.setCenterId(\"\");\n                            this.setRoomId(\"\");\n                          }}\n                          value={this.state.districtId}\n                          disabled={this.state.loadingRequest}\n                        >\n                          <option value=\"\">Select district</option>\n                          {this.props.roomList &&\n                          this.distinctDistrict(\n                            this.props.roomList,\n                            !isEmptyOrSpaces(this.state.provinceId)\n                              ? this.state.provinceId\n                              : undefined\n                          ).length > 0 ? (\n                            this.distinctDistrict(\n                              this.props.roomList,\n                              !isEmptyOrSpaces(this.state.provinceId)\n                                ? this.state.provinceId\n                                : undefined\n                            ).map((district) => (\n                              <option\n                                key={district._id + Math.random()}\n                                value={district._id}\n                              >\n                                {district.district_name}\n                              </option>\n                            ))\n                          ) : (\n                            <option value=\"\" disabled>\n                              No district found\n                            </option>\n                          )}\n                        </select>\n                        {this.state.formError &&\n                          this.state.formError.element === \"district_id\" && (\n                            <span className=\"text-red-500\">\n                              {this.state.formError.msg}\n                            </span>\n                          )}\n                      </div>\n                    )}\n                  {this.state.selectedRole &&\n                    this.state.selectedRole.school_required && (\n                      <div className=\"space-y-2\">\n                        <label className=\"mb-5 text-sm font-medium text-gray-700 tracking-wide\">\n                          School\n                        </label>\n                        {/* {!this.state.chooseSchool && (\n                          <div\n                            className={`w-full text-base bg-white text-grey-darker cursor-pointer border-2 px-4 py-3 rounded focus:outline-none focus:bg-gray-100 ${\n                              this.state.formError &&\n                              this.state.formError.element === \"school_id\"\n                                ? \"border-red-500\"\n                                : \"border-gray-400\"\n                            }`}\n                            onClick={() => {\n                              !this.state.loadingRequest &&\n                                this.setChooseSchool(true);\n                              !this.state.loadingRequest &&\n                                this.setFormError(null);\n                            }}\n                          >\n                            {this.state.schoolId\n                              ? this.state.schoolId\n                              : \"Select school\"}\n                          </div>\n                        )}\n\n                        {this.state.chooseSchool && (\n                          <ChooseSchoolById\n                            allSchool={this.props.schoolList}\n                            setSelectSchool={(school_id: string) => {\n                              this.setSchoolId(school_id);\n                              this.state.formError &&\n                                this.state.formError.element === \"school_id\" &&\n                                this.setFormError(null);\n                              this.setCenterId(\"\");\n                              this.setRoomId(\"\");\n                            }}\n                            currentSelected={this.state.schoolId}\n                            setChooseSchool={this.setChooseSchool}\n                          />\n                        )} */}\n                        <select\n                          className={`block w-full text-base bg-white text-grey-darker border-2 rounded px-4 py-3 md:w-full focus:outline-none focus:bg-gray-100 ${\n                            this.state.formError &&\n                            this.state.formError.element === \"school_id\"\n                              ? \"border-red-500\"\n                              : \"border-gray-400\"\n                          }`}\n                          onChange={(e) => {\n                            this.setSchoolId(e.target.value);\n                            this.state.formError &&\n                              this.state.formError.element === \"school_id\" &&\n                              this.setFormError(null);\n                            this.setCenterId(\"\");\n                            this.setRoomId(\"\");\n                          }}\n                          disabled={this.state.loadingRequest}\n                          value={this.state.schoolId}\n                        >\n                          <option value=\"\">Selected school</option>\n                          {this.props.schoolList &&\n                            this.props.schoolList.map((school) => (\n                              <option\n                                value={school._id}\n                                key={school._id + Math.random()}\n                              >\n                                {school.school_name}\n                              </option>\n                            ))}\n                        </select>\n                        {this.state.formError &&\n                          this.state.formError.element === \"school_id\" && (\n                            <span className=\"text-red-500\">\n                              {this.state.formError.msg}\n                            </span>\n                          )}\n                      </div>\n                    )}\n\n                  {this.state.selectedRole &&\n                    this.state.selectedRole.room_required && (\n                      <div className=\"space-y-2\">\n                        <label className=\"mb-5 text-sm font-medium text-gray-700 tracking-wide\">\n                          Center\n                        </label>\n                        <select\n                          className={`block w-full text-base bg-white text-grey-darker border-2 rounded px-4 py-3 md:w-full focus:outline-none focus:bg-gray-100 ${\n                            this.state.formError &&\n                            this.state.formError.element === \"center_id\"\n                              ? \"border-red-500\"\n                              : \"border-gray-400\"\n                          }`}\n                          onChange={(e) => {\n                            this.setCenterId(e.target.value);\n                            this.state.formError &&\n                              this.state.formError.element === \"center_id\" &&\n                              this.setFormError(null);\n                            this.setRoomId(\"\");\n                          }}\n                          disabled={this.state.loadingRequest}\n                          value={this.state.centerId}\n                        >\n                          <option value=\"\">Select center</option>\n                          {this.state.districtId &&\n                          this.state.districtId.length > 0 &&\n                          this.props.roomList &&\n                          this.distinctCenter(\n                            this.props.roomList,\n                            this.state.districtId\n                          ).length > 0 ? (\n                            this.distinctCenter(\n                              this.props.roomList,\n                              this.state.districtId\n                            ).map((center, index) => (\n                              <option\n                                value={center.center_id}\n                                key={center.center_id + index + Math.random()}\n                              >\n                                {center.center_name}\n                              </option>\n                            ))\n                          ) : (\n                            <option value=\"\" disabled>\n                              No center found\n                            </option>\n                          )}\n                        </select>\n                        {this.state.formError &&\n                          this.state.formError.element === \"center_id\" && (\n                            <span className=\"text-red-500\">\n                              {this.state.formError.msg}\n                            </span>\n                          )}\n                      </div>\n                    )}\n\n                  {this.state.selectedRole &&\n                    this.state.selectedRole.room_required && (\n                      <div className=\"space-y-2\">\n                        <label className=\"mb-5 text-sm font-medium text-gray-700 tracking-wide\">\n                          Room\n                        </label>\n                        <select\n                          className={`block w-full text-base bg-white text-grey-darker border-2 rounded px-4 py-3 md:w-full focus:outline-none focus:bg-gray-100 ${\n                            this.state.formError &&\n                            this.state.formError.element === \"room_id\"\n                              ? \"border-red-500\"\n                              : \"border-gray-400\"\n                          }`}\n                          onChange={(e) => {\n                            this.setRoomId(e.target.value);\n                            this.state.formError &&\n                              this.state.formError.element === \"room_id\" &&\n                              this.setFormError(null);\n                          }}\n                          disabled={this.state.loadingRequest}\n                          value={this.state.roomId}\n                        >\n                          <option value=\"\">Select room</option>\n                          {!isEmptyOrSpaces(this.state.centerId) &&\n                          this.props.roomList &&\n                          this.distinctRoom(\n                            this.props.roomList,\n                            this.state.centerId\n                          ).length > 0 ? (\n                            this.distinctRoom(\n                              this.props.roomList,\n                              this.state.centerId\n                            ).map((room, index) => (\n                              <option\n                                value={room.room_id}\n                                key={room.room_id + index + Math.random()}\n                                className={`${\n                                  room.room_name === \"0\" ? \"hidden\" : \"block\"\n                                }`}\n                              >\n                                {room.room_name}\n                              </option>\n                            ))\n                          ) : (\n                            <option value=\"\" disabled>\n                              No room found\n                            </option>\n                          )}\n                        </select>\n                        {this.state.formError &&\n                          this.state.formError.element === \"room_id\" && (\n                            <span className=\"text-red-500\">\n                              {this.state.formError.msg}\n                            </span>\n                          )}\n                      </div>\n                    )}\n\n                  <div className=\"flex justify-between 2xl:justify-start gap-2\">\n                    <button\n                      className=\"btn bg-gray-500 text-gray-50 focus:outline-none\"\n                      onClick={() => {\n                        this.props.setChangeRole(false);\n                        this.setFormError(null);\n                        this.setProvinceId(\"\");\n                        this.setDistrictId(\"\");\n                        this.setSchoolId(\"\");\n                        this.setCenterId(\"\");\n                        this.setRoomId(\"\");\n                      }}\n                      disabled={this.state.loadingRequest}\n                    >\n                      Back\n                    </button>\n                    <button\n                      className=\"btn btn-blue focus:outline-none\"\n                      // onClick={() => assignRoleToUser()}\n                      disabled={this.state.loadingRequest}\n                    >\n                      {this.state.loadingRequest ? \"Loading...\" : \"Save Change\"}\n                    </button>\n                  </div>\n                </div>\n              </form>\n            )}\n          </div>\n        </div>\n        {/* end left panel */}\n\n        {/* ------------------------------------------------------------ */}\n\n        {/* right panel */}\n        <div className=\"cols-span-1 md:col-span-2 bg-white w-full border rounded text-center p-2 hidden md:block\">\n          <div className=\"my-4\">\n            <span className=\"text-gray-600 font-semibold text-2xl\">\n              {this.state.selectedRole?.role}'s Default Access\n            </span>\n          </div>\n          {!this.state.loading && (\n            <div className=\"overflow-x-auto w-full\">\n              <Table\n                columns={[\n                  {\n                    columnTitle: \"Access Name\",\n                    alignText: \"left\",\n                    padding: \"p-3\",\n                  },\n                  { columnTitle: \"Create\", alignText: \"left\" },\n                  { columnTitle: \"View\", alignText: \"left\" },\n                  { columnTitle: \"Update\", alignText: \"left\" },\n                  { columnTitle: \"Delete\", alignText: \"left\" },\n                ]}\n                rows={this.tableData}\n                pagination={false}\n                search={false}\n                searchBG=\"bg-gray-50\"\n                thColor=\"gray\"\n                tableId=\"defaultAccess\"\n              />\n            </div>\n          )}\n        </div>\n        {/* end right panel */}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = ({\n  schoolLevels,\n}: StoreState): {\n  schoolLevels: schoolLevelsStoreInterface;\n} => {\n  return { schoolLevels };\n};\n\nexport default React.memo(\n  connect(mapStateToProps, {\n    assignRoleToUserAccess,\n    PushPopupAlert,\n  })(UserRole)\n);\n","export default __webpack_public_path__ + \"static/media/blank_profile.c3f94521.png\";","import React, { Component, Fragment } from \"react\";\nimport { FiFilter } from \"react-icons/fi\";\nimport * as Interfaces from \"../../interfaces/index\";\nimport searchData from \"../../utils/search\";\n\nimport { connect } from \"react-redux\";\nimport {\n  Auth,\n  courseStoreInterface,\n  loadCourses,\n  schoolLevelsStoreInterface,\n  loadSchoolLevels,\n  loadEducationCategories,\n  setSelectedEducationCategory,\n  setSelectedSchoolLevel,\n  QuestionBankStoreInterface,\n  applicationPeriodsStoreInterface,\n} from \"../../actions\";\nimport { StoreState } from \"../../reducers\";\nimport { course } from \"../../interfaces/course\";\nimport Loading from \"../../components/Loading/Loading\";\nimport Modal, { ModalSize, Themes } from \"../../components/Modal/Modal\";\nimport { FaAngleRight } from \"react-icons/fa\";\nimport { searchItem } from \"../../containers/Application/ApplicationPositions/ApplicationPositions\";\nimport SchoolLevelsFilter from \"../../containers/Application/ApplicationPositions/SchoolLevelsFilter/SchoolLevelsFilter\";\nimport { ExamItemResponse } from \"../../interfaces/prepare_exam\";\n\ninterface UploadQuestionState {\n  loading: boolean;\n  searchLevel: searchItem | null;\n  showFilter: boolean;\n  uploadingStatus: boolean;\n  searchCourseInput: string;\n}\ninterface UploadQuestionProps {\n  auth: Auth;\n  course: courseStoreInterface;\n  schoolLevels: schoolLevelsStoreInterface;\n  questionBank: QuestionBankStoreInterface;\n  selected_course_id: string | null;\n  loadEducationCategories: (callback: (loading: boolean) => void) => void;\n  loadSchoolLevels: (callback: (loading: boolean) => void) => void;\n  setSelectedEducationCategory: (\n    education_category: Interfaces.education_category\n  ) => void;\n  setSelectedSchoolLevel: (education_category: Interfaces.school_level) => void;\n  loadCourses: (callback: (loading: boolean) => void) => void;\n  setSelectedCourse: (course: course | null) => void;\n  preparedExams?: ExamItemResponse[] | null;\n  periods: applicationPeriodsStoreInterface;\n}\n\nclass _UploadQuestion extends Component<\n  UploadQuestionProps,\n  UploadQuestionState\n> {\n  constructor(props: UploadQuestionProps) {\n    super(props);\n\n    this.state = {\n      loading: false,\n      searchLevel: null,\n      showFilter: false,\n      uploadingStatus: false,\n      searchCourseInput: \"\",\n    };\n  }\n\n  setLoading = (status: boolean) => {\n    this.setState({ loading: status });\n  };\n\n  setSearchLevel = (\n    educationCategory: Interfaces.education_category | null,\n    schoolLevel: Interfaces.school_level | null\n  ) => {\n    this.setState({\n      searchLevel: {\n        educationCategory: educationCategory,\n        schoolLevel: schoolLevel,\n      },\n    });\n    if (educationCategory) {\n      this.props.setSelectedEducationCategory(educationCategory);\n    }\n    if (schoolLevel) {\n      this.props.setSelectedSchoolLevel(schoolLevel);\n      this.setState({ showFilter: false });\n    }\n  };\n\n  setSchoolLevelFilterFn = (status: boolean) => {\n    this.setState({ showFilter: status });\n  };\n\n  filterWithExams = (courses: course[]) => {\n    let response: course[] = courses;\n    if (this.props.preparedExams !== undefined) {\n      if (this.props.preparedExams !== null) {\n        response = courses.filter(\n          (item) =>\n            this.props.preparedExams &&\n            this.props.preparedExams.find(\n              (itm) =>\n                itm.course === item.course_id &&\n                itm.period ===\n                  this.props.periods.selected_period?.session_plan_id\n            ) === undefined\n        );\n      }\n    }\n    return response;\n  };\n\n  filteredCourses = (\n    courses: course[],\n    searched: searchItem | null\n  ): course[] => {\n    let filtered: course[] = courses;\n    if (searched !== null) {\n      if (searched.schoolLevel !== null) {\n        filtered = courses.filter((itm) => {\n          if (\n            itm.school_levels.find(\n              (itm1) => itm1 === searched.schoolLevel?.school_level_id\n            )\n          ) {\n            let status = false;\n            for (let item2 of itm.school_levels) {\n              if (\n                searched.educationCategory?.school_levels.find(\n                  (i) => i === item2\n                )\n              ) {\n                status = true;\n              }\n            }\n            return status === true ? itm : null;\n          } else {\n            return null;\n          }\n        });\n      } else if (searched.educationCategory !== null) {\n        filtered = courses.filter((itm) => {\n          let status = false;\n          for (let item2 of itm.school_levels) {\n            if (\n              searched.educationCategory?.school_levels.find((i) => i === item2)\n            ) {\n              status = true;\n            }\n          }\n          return status === true ? itm : null;\n        });\n      }\n    }\n    return this.filterWithExams(filtered);\n  };\n\n  setUploadingStatus = (status: boolean) => {\n    this.setState({ uploadingStatus: status });\n  };\n\n  componentDidMount = () => {\n    if (\n      this.props.course.courses === null ||\n      this.props.course.courses.length === 0\n    ) {\n      this.props.loadCourses(this.setLoading);\n    }\n  };\n\n  render() {\n    return (\n      <Fragment>\n        <div className=\"flex-col\">\n          <div className=\"mb-4 grid md:grid-cols-5 gap-2\">\n            <div\n              className={`animate__animated md:col-span-5 md:flex md:flex-col min-h-full bg-white shadow rounded`}\n            >\n              <div className=\"py-2 px-2\">\n                <div className=\"flex flex-row gap-2 mb-2 items-center justify-between\">\n                  <div className=\"flex flex-col\">\n                    {/* <div><span className=\"text-lg text-gray-600 font-bold\">Choose a course</span></div> */}\n                    <div className=\"flex flex-row items-center\">\n                      {this.state.searchLevel?.educationCategory && (\n                        <span className=\"bg-blue-50 rounded-full px-2 text-xs text-blue-600 font-bold\">\n                          {\n                            this.state.searchLevel.educationCategory\n                              ?.education_category_title\n                          }\n                        </span>\n                      )}\n                      {this.state.searchLevel?.schoolLevel && (\n                        <div className=\"flex flex-row items-center\">\n                          <FaAngleRight className=\"\" />\n                          <span className=\"bg-blue-50 rounded-full px-2 text-xs text-blue-600 font-bold\">\n                            {\n                              this.state.searchLevel.schoolLevel\n                                ?.school_level_name\n                            }\n                          </span>\n                        </div>\n                      )}\n                    </div>\n                  </div>\n                </div>\n                <div className=\"grid grid-cols-12 gap-2\">\n                  <input\n                    onChange={(e: React.ChangeEvent<HTMLInputElement>) =>\n                      this.setState({ searchCourseInput: e.target.value })\n                    }\n                    type=\"text\"\n                    className=\"col-span-8 md:col-span-10 input-white h-10 text-sm border-2 border-blue-500\"\n                    placeholder=\"Search course by name or code\"\n                  />\n                  <div\n                    onClick={() => {\n                      this.props.schoolLevels.education_categories === null &&\n                        this.props.loadEducationCategories(this.setLoading);\n                      this.props.schoolLevels.school_levels === null &&\n                        this.props.loadSchoolLevels(this.setLoading);\n                      this.setState({ showFilter: true });\n                    }}\n                    className=\"col-span-4 md:col-span-2 btn cursor-pointer bg-blue-50 hover:bg-blue-100 text-blue-600 flex flex-row justify-center gap-1 items-center\"\n                  >\n                    <FiFilter className=\"text-xl\" />\n                    <span>Filter</span>\n                  </div>\n                </div>\n                <div className=\"mt-4\" style={{ minHeight: \"500px\" }}>\n                  {this.state.uploadingStatus === true ? (\n                    <div className=\"my-2 flex flex-col gap-2\">\n                      <div className=\"rounded-xl bg-gray-100 h-8\"></div>\n                      <div className=\"rounded-xl bg-gray-100 h-8 w-4/5\"></div>\n                      <div className=\"rounded-xl bg-gray-100 h-8 w-5/6\"></div>\n                      <div className=\"rounded-xl bg-gray-100 h-8\"></div>\n                      <div className=\"rounded-xl bg-gray-100 h-8 w-3/4\"></div>\n                      <div className=\"rounded-xl bg-gray-100 h-8\"></div>\n                    </div>\n                  ) : this.props.course.courses === null ? (\n                    <Loading />\n                  ) : this.props.course.courses &&\n                    this.filteredCourses(\n                      this.props.course.courses,\n                      this.state.searchLevel\n                    ).length === 0 ? (\n                    <span className=\"text-gray-400 font-extrabold ml-2 animate__animated animate__shakeX\">\n                      No courses available!\n                    </span>\n                  ) : (\n                    this.props.course.courses &&\n                    searchData(\n                      this.filteredCourses(\n                        this.props.course.courses,\n                        this.state.searchLevel\n                      ),\n                      this.state.searchCourseInput\n                    ).map((item, i) => (\n                      <div\n                        key={i + 1}\n                        onClick={() => this.props.setSelectedCourse(item)}\n                        className={`rounded border ${\n                          this.props.selected_course_id !== null &&\n                          this.props.selected_course_id === item.course_id\n                            ? \"bg-blue-100 border-blue-300 text-blue-600 animate__animated animate__bounceIn\"\n                            : \"border-gray-200 hover:bg-blue-100 hover:border-blue-600 text-gray-600\"\n                        }  px-2 py-3 flex flex-row gap-3 items-center my-2 cursor-pointer`}\n                      >\n                        <span className=\"text-sm\">\n                          <div\n                            className={`h-8 w-8 rounded-full flex justify-center items-center text-white ${\n                              this.props.selected_course_id !== null &&\n                              this.props.selected_course_id === item.course_id\n                                ? \"bg-blue-600 text-white\"\n                                : \"font-bold bg-gray-500\"\n                            }`}\n                          >\n                            {i + 1}\n                          </div>\n                        </span>\n                        <div className=\"flex flex-col\">\n                          <span className={`text-md font-bold`}>\n                            {item.course_name}\n                          </span>\n                          <span className={`text-xs`}>\n                            Code: {item.course_code}\n                          </span>\n                        </div>\n                      </div>\n                    ))\n                  )}\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n        {this.state.showFilter === true && (\n          <Modal\n            title=\"Filter courses by school levels\"\n            backDrop={true}\n            theme={Themes.default}\n            close={() => this.setState({ showFilter: false })}\n            backDropClose={true}\n            widthSizeClass={ModalSize.medium}\n            displayClose={true}\n            padding={{ title: true }}\n          >\n            <SchoolLevelsFilter\n              educationCategories={this.props.schoolLevels.education_categories}\n              schoolLevels={this.props.schoolLevels.school_levels}\n              searchLevel={this.state.searchLevel}\n              setSearchLevel={this.setSearchLevel}\n              setSchoolLevelFilterFn={this.setSchoolLevelFilterFn}\n            />\n          </Modal>\n        )}\n      </Fragment>\n    );\n  }\n}\n\nconst mapStateToProps = ({\n  auth,\n  course,\n  schoolLevels,\n  questionBank,\n  periods,\n}: StoreState): {\n  auth: Auth;\n  course: courseStoreInterface;\n  schoolLevels: schoolLevelsStoreInterface;\n  questionBank: QuestionBankStoreInterface;\n  periods: applicationPeriodsStoreInterface;\n} => {\n  return {\n    auth: auth,\n    course: course,\n    schoolLevels: schoolLevels,\n    questionBank: questionBank,\n    periods: periods,\n  };\n};\n\nconst UploadQuestion = connect(mapStateToProps, {\n  loadCourses,\n  loadSchoolLevels,\n  loadEducationCategories,\n  setSelectedEducationCategory,\n  setSelectedSchoolLevel,\n})(_UploadQuestion);\n\nexport default UploadQuestion;\n","import axios from \"axios\";\nimport React, { Component } from \"react\";\nimport { BiRightArrowAlt } from \"react-icons/bi\";\nimport {\n  MdDelete,\n  MdEdit,\n  MdHighlightOff,\n  MdRemoveRedEye,\n  MdSettings,\n} from \"react-icons/md\";\nimport { SiAddthis } from \"react-icons/si\";\nimport { TiInputChecked } from \"react-icons/ti\";\nimport { connect } from \"react-redux\";\nimport { Redirect } from \"react-router-dom\";\nimport { PushPopupAlert } from \"../../actions\";\nimport { customizeUserAccess } from \"../../actions/users\";\nimport { PopupAlertData } from \"../../components/Alert/Popup\";\nimport Table from \"../../components/Table/Table\";\nimport { PopupAlertTheme } from \"../../interfaces/popupAlert\";\nimport {\n  UserInterface,\n  AccessTaskInterface,\n  CustomeAccessInterface,\n} from \"../../shared/interfaces\";\nimport { API } from \"../../utils/api\";\nimport { errorToText } from \"../../utils/errors\";\n\ninterface AppProps {\n  userInfo: UserInterface | undefined;\n  manageUserId: string;\n  setUserAccess: (value: AccessTaskInterface[] | null) => void;\n  userAccess: AccessTaskInterface[] | null;\n  setCurrentAccess: (value: AccessTaskInterface | null) => void;\n  currentAccess: AccessTaskInterface | null;\n  currentPage: number;\n\n  // REDUX ==============\n  PushPopupAlert: (alert: PopupAlertData) => void;\n  customizeUserAccess: Function;\n}\n\ninterface AppStates {\n  loading: boolean;\n  loadindRequest: boolean;\n  // currentAccess:AccessTaskInterface | null;\n  // userAccess:AccessTaskInterface[] | null;\n  createPermission: boolean;\n  viewPermission: boolean;\n  updatePermission: boolean;\n  deletePermission: boolean;\n}\n\nclass _UserAccess extends Component<AppProps, AppStates> {\n  constructor(props: AppProps) {\n    super(props);\n\n    this.state = {\n      loading: true,\n      loadindRequest: false,\n      // currentAccess:null,\n      // userAccess:null,\n      createPermission: false,\n      viewPermission: false,\n      updatePermission: false,\n      deletePermission: false,\n    };\n  }\n\n  setViewPermission = (value: boolean) => {\n    this.setState({ viewPermission: value });\n  };\n\n  setLoadindRequest = (value: boolean) => {\n    this.setState({ loadindRequest: value });\n  };\n\n  setCreatePermission = (value: boolean) => {\n    this.setState({ createPermission: value });\n  };\n\n  setUpdatePermission = (value: boolean) => {\n    this.setState({ updatePermission: value });\n  };\n\n  setDeletePermission = (value: boolean) => {\n    this.setState({ deletePermission: value });\n  };\n\n  setLoadind = (value: boolean) => {\n    this.setState({ loading: value });\n  };\n\n  overrideUserAccess = (\n    default_access: AccessTaskInterface[],\n    custome_access: AccessTaskInterface[]\n  ) => {\n    if (default_access && custome_access && custome_access.length > 0) {\n      let overideAccess: AccessTaskInterface[] = [];\n      for (const key in default_access) {\n        if (Object.prototype.hasOwnProperty.call(default_access, key)) {\n          const findCustom = custome_access.find(\n            (custom) => custom.id === default_access[key].id\n          );\n          if (findCustom) {\n            overideAccess.push(findCustom);\n          } else {\n            overideAccess.push(default_access[key]);\n          }\n        }\n      }\n      this.props.setUserAccess(overideAccess);\n    }\n  };\n\n  componentDidMount = () => {\n    if (this.props.userInfo && this.props.userInfo.custome_access) {\n      this.props.userInfo.default_access &&\n        this.overrideUserAccess(\n          this.props.userInfo.default_access.access,\n          this.props.userInfo.custome_access.access\n        );\n      this.setLoadind(false);\n    } else {\n      this.props.userInfo &&\n        this.props.userInfo.default_access &&\n        this.props.setUserAccess(this.props.userInfo.default_access.access);\n      this.setLoadind(false);\n    }\n  };\n\n  tableData = (): JSX.Element[] => {\n    if (!this.props.userAccess)\n      return [\n        <tr key={Math.random()}>\n          <td>No data</td>\n        </tr>,\n      ];\n    return this.props.userAccess.map((access: AccessTaskInterface, i) => (\n      <tr\n        key={i + access.id + Math.random()}\n        className={`text-left border-b border-gray-200 cursor-pointer hover:bg-gray-100 ${\n          this.props.currentAccess &&\n          this.props.currentAccess.id === access.id &&\n          \"bg-gray-200 border my-3 hover:bg-gray-100\"\n        }`}\n        onClick={() =>\n          this.props.currentAccess && this.props.currentAccess.id === access.id\n            ? (this.props.setCurrentAccess(null),\n              this.setCreatePermission(false),\n              this.setViewPermission(false),\n              this.setUpdatePermission(false),\n              this.setDeletePermission(false))\n            : (this.props.setCurrentAccess(access),\n              this.setCreatePermission(access.permitted.create),\n              this.setViewPermission(access.permitted.view),\n              this.setUpdatePermission(access.permitted.update),\n              this.setDeletePermission(access.permitted.delete))\n        }\n      >\n        <td className=\"px-2 py-1\">\n          <label className=\"inline-flex items-center\">\n            {/* <input\n              type=\"radio\"\n              name=\"taskAccess\"\n              value={access.id}\n              className=\"form-radio h-4 w-4 text-gray-600\"\n              onChange={() => {\n                currentAccess\n                  ? this.setState({ currentAccess: null })\n                  : this.setState({ currentAccess: access });\n              }}\n              checked={currentAccess ? true : false}\n            /> */}\n            <span className=\"text-gray-900 capitalize text-xl font-normal cursor-pointer\">\n              {access.task}\n            </span>\n          </label>\n        </td>\n        <td>\n          <div\n            className={`inline-flex items-center text-xl ${\n              access.permitted.create ? \"text-green-700\" : \"text-red-700\"\n            }`}\n          >\n            {access.permitted.create ? <TiInputChecked /> : <MdHighlightOff />}\n            {access.permitted.create ? \" Yes\" : \"No\"}\n          </div>\n        </td>\n        <td>\n          <div\n            className={`inline-flex items-center text-xl ${\n              access.permitted.view ? \"text-green-700\" : \"text-red-700\"\n            }`}\n          >\n            {access.permitted.view ? <TiInputChecked /> : <MdHighlightOff />}\n            {access.permitted.view ? \" Yes\" : \"No\"}\n          </div>\n        </td>\n        <td>\n          <div\n            className={`inline-flex items-center text-xl ${\n              access.permitted.update ? \"text-green-700\" : \"text-red-700\"\n            }`}\n          >\n            {access.permitted.update ? <TiInputChecked /> : <MdHighlightOff />}\n            {access.permitted.update ? \" Yes\" : \"No\"}\n          </div>\n        </td>\n        <td>\n          <div\n            className={`inline-flex items-center text-xl ${\n              access.permitted.delete ? \"text-green-700\" : \"text-red-700\"\n            }`}\n          >\n            {access.permitted.delete ? <TiInputChecked /> : <MdHighlightOff />}\n            {access.permitted.delete ? \" Yes\" : \"No\"}\n          </div>\n        </td>\n      </tr>\n    ));\n  };\n\n  handleCustomization = async (e: React.FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n    if (this.props.userInfo) {\n      this.setLoadindRequest(true);\n      let task: [] | CustomeAccessInterface | null = null;\n      task = this.props.userInfo.custome_access;\n      let index = -1;\n\n      try {\n        if (task && this.props.currentAccess) {\n          index = task.access.findIndex(\n            (access) => access.id === this.props.currentAccess!.id\n          );\n          if (index >= 0) {\n            task.access[index].permitted.create = this.state.createPermission;\n            task.access[index].permitted.view = this.state.viewPermission;\n            task.access[index].permitted.update = this.state.updatePermission;\n            task.access[index].permitted.delete = this.state.deletePermission;\n          } else {\n            task.access.push({\n              id: this.props.currentAccess.id,\n              task: this.props.currentAccess.task,\n              key: this.props.currentAccess.key,\n              permitted: {\n                create: this.state.createPermission,\n                view: this.state.viewPermission,\n                update: this.state.updatePermission,\n                delete: this.state.deletePermission,\n              },\n            });\n          }\n        } else if (this.props.currentAccess) {\n          task = {\n            access: [\n              {\n                id: this.props.currentAccess.id,\n                task: this.props.currentAccess.task,\n                key: this.props.currentAccess.key,\n                permitted: {\n                  create: this.state.createPermission,\n                  view: this.state.viewPermission,\n                  update: this.state.updatePermission,\n                  delete: this.state.deletePermission,\n                },\n              },\n            ],\n            user_id: this.props.userInfo.user_id,\n            custome_user_access_id: \"\",\n          };\n        }\n\n        if (task) {\n          let res;\n          if (this.props.userInfo.custome_access !== null) {\n            res = await axios.patch<{ data: CustomeAccessInterface }>(\n              `${API.AUTH}/custaccess`,\n              {\n                access: task.access,\n                user_id: this.props.userInfo.user_id,\n              }\n            );\n          } else {\n            res = await axios.post<{ data: CustomeAccessInterface }>(\n              `${API.AUTH}/custaccess`,\n              {\n                access: task.access,\n                user_id: this.props.userInfo.user_id,\n              }\n            );\n          }\n\n          if (res) {\n            task.custome_user_access_id = res.data.data.custome_user_access_id;\n\n            this.props.customizeUserAccess(task, this.props.currentPage);\n            task &&\n              this.props.userInfo.default_access &&\n              this.overrideUserAccess(\n                this.props.userInfo.default_access.access,\n                task.access\n              );\n            this.props.PushPopupAlert({\n              title: `Resetting User Access complete successfully`,\n              theme: PopupAlertTheme.info,\n            });\n\n            task = null;\n            this.props.setCurrentAccess(null);\n            this.setCreatePermission(false);\n            this.setViewPermission(false);\n            this.setUpdatePermission(false);\n            this.setDeletePermission(false);\n          }\n        }\n      } catch (error) {\n        console.error({ customize_access: error });\n        this.props.PushPopupAlert({\n          title: errorToText(error),\n          theme: PopupAlertTheme.danger,\n        });\n      }\n      this.setLoadindRequest(false);\n    }\n  };\n\n  render() {\n    if (this.props.userInfo === undefined) {\n      return <Redirect to=\"/users\" />;\n    }\n\n    if (this.state.loading || this.props.userInfo === null) {\n      return (\n        <div className=\"text-center py-7 font-bold text-4xl text-gray-400 animate-pulse\">\n          Loading User Access...\n        </div>\n      );\n    }\n\n    return (\n      <div>\n        <div className=\"grid grid-cols-1 md:grid-cols-5 gap-4 mx-1 my-2\">\n          <div\n            className={`col-span-1 md:col-span-3 bg-white w-full overflow-x-auto border rounded text-center p-2 ${\n              this.props.currentAccess ? \"hidden md:block\" : \"\"\n            }`}\n          >\n            <span className=\"text-gray-600 mt-2 font-semibold text-2xl\">\n              Settings\n            </span>\n            {!this.state.loading && (\n              <div className=\"overflow-x-auto w-full\">\n                <Table\n                  columns={[\n                    {\n                      columnTitle: \"Access Name\",\n                      alignText: \"left\",\n                      padding: \"p-3\",\n                    },\n                    { columnTitle: \"Create\", alignText: \"left\" },\n                    { columnTitle: \"View\", alignText: \"left\" },\n                    { columnTitle: \"Update\", alignText: \"left\" },\n                    { columnTitle: \"Delete\", alignText: \"left\" },\n                  ]}\n                  rows={this.tableData}\n                  pagination={false}\n                  search={true}\n                  searchBG=\"bg-gray-50\"\n                  thColor=\"gray\"\n                />\n              </div>\n            )}\n          </div>\n          <div className={`col-span-1 md:col-span-2`}>\n            {!this.props.currentAccess ? (\n              <div className=\"w-full hidden md:flex flex-col items-center text-gray-600 gap-1 py-3\">\n                <MdSettings className=\"w-20 h-20\" />\n                <span className=\"text-8 md:text-12\">\n                  Choose Access to Customize\n                </span>\n              </div>\n            ) : (\n              <div className={``}>\n                <h1 className=\"text-2xl md:text-3xl font-semibold text-center my-2 text-gray-900\">\n                  Customize User Access\n                </h1>\n                <div className=\"flex justify-center mb-3\">\n                  <h2 className=\"text-2xl font-semibold text-center text-gray-600 flex flex-row items-center\">\n                    <BiRightArrowAlt className=\"w-7 h-7\" />\n                    {this.props.currentAccess.task}\n                  </h2>\n                </div>\n\n                <div className=\"flex flex-col px-2 md:px-1\">\n                  <form\n                    className=\"flex flex-col items-center\"\n                    onSubmit={(e) => this.handleCustomization(e)}\n                  >\n                    <div className=\"inline-flex gap-2 items-center\">\n                      <SiAddthis className=\"w-7 h-7 text-gray-600\" />\n                      <div className=\"flex flex-col\">\n                        <h3 className=\"font-semibold text-xl\">Create</h3>\n                        <span className=\"text-gray-600 text-sm md:pr-1\">\n                          This permission gives the user the ability to create\n                        </span>\n                      </div>\n                      <input\n                        type=\"checkbox\"\n                        className=\"form-checkbox h-7 w-7 text-teal-600\"\n                        onChange={() =>\n                          this.setCreatePermission(!this.state.createPermission)\n                        }\n                        checked={this.state.createPermission}\n                        disabled={this.state.loadindRequest}\n                      />\n                    </div>\n                    <div className=\"inline-flex gap-2 items-center\">\n                      <MdRemoveRedEye className=\"w-7 h-7 text-gray-600\" />\n                      <div className=\"flex flex-col\">\n                        <h3 className=\"font-semibold text-xl\">View</h3>\n                        <span className=\"text-gray-600 text-sm md:pr-4\">\n                          This permission gives the user the ability to view\n                        </span>\n                      </div>\n                      <input\n                        type=\"checkbox\"\n                        className=\"form-checkbox h-7 w-7 text-teal-600\"\n                        onChange={() =>\n                          this.setViewPermission(!this.state.viewPermission)\n                        }\n                        checked={this.state.viewPermission}\n                        disabled={this.state.loadindRequest}\n                      />\n                    </div>\n                    <div className=\"inline-flex gap-2 items-center\">\n                      <MdEdit className=\"w-7 h-7 text-gray-600\" />\n                      <div className=\"flex flex-col\">\n                        <h3 className=\"font-semibold text-xl\">Update</h3>\n                        <span className=\"text-gray-600 text-sm\">\n                          This permission gives the user the ability to update\n                        </span>\n                      </div>\n                      <input\n                        type=\"checkbox\"\n                        className=\"form-checkbox h-7 w-7 text-teal-600\"\n                        onChange={() =>\n                          this.setUpdatePermission(!this.state.updatePermission)\n                        }\n                        checked={this.state.updatePermission}\n                        disabled={this.state.loadindRequest}\n                      />\n                    </div>\n                    <div className=\"inline-flex gap-2 items-center\">\n                      <MdDelete className=\"w-7 h-7 text-gray-600\" />\n                      <div className=\"flex flex-col\">\n                        <h3 className=\"font-semibold text-xl\">Delete</h3>\n                        <span className=\"text-gray-600 text-sm md:pr-1\">\n                          This permission gives the user the ability to delete\n                        </span>\n                      </div>\n                      <input\n                        type=\"checkbox\"\n                        className=\"form-checkbox h-7 w-7 text-teal-600\"\n                        onChange={() =>\n                          this.setDeletePermission(!this.state.deletePermission)\n                        }\n                        checked={this.state.deletePermission}\n                        disabled={this.state.loadindRequest}\n                      />\n                    </div>\n\n                    <div className=\"flex items-center justify-center w-full py-3 gap-2\">\n                      {/* <button className=\"btn btn-secondary bg-red-600\">Back</button> */}\n                      <button\n                        className=\"btn bg-gray-500 hover:bg-gray-700 focus:outline-none text-white\"\n                        disabled={this.state.loadindRequest}\n                        onClick={() => {\n                          this.props.setCurrentAccess(null);\n                          this.setCreatePermission(false);\n                          this.setViewPermission(false);\n                          this.setUpdatePermission(false);\n                          this.setDeletePermission(false);\n                        }}\n                      >\n                        Cancel\n                      </button>\n                      <button\n                        className=\"btn btn-blue\"\n                        disabled={this.state.loadindRequest}\n                      >\n                        {!this.state.loadindRequest\n                          ? \"Save Change\"\n                          : \"Processing..\"}\n                      </button>\n                    </div>\n                  </form>\n                </div>\n              </div>\n            )}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport const UserAccess = React.memo(\n  connect(null, {\n    customizeUserAccess,\n    PushPopupAlert,\n  })(_UserAccess)\n);\n","import React, { useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport {\n  FC_CreateDistrict,\n  FC_DeleteDistrict,\n  FC_UpdateDistrict,\n} from \"../../actions/location\";\nimport axios from \"axios\";\nimport { API } from \"../../utils/api\";\nimport {\n  DistrictInterface,\n  RoomLocationInterface,\n} from \"../../shared/interfaces\";\nimport { PushPopupAlert } from \"../../actions/system\";\nimport { PopupAlertData } from \"../../components/Alert/Popup\";\nimport { PopupAlertTheme } from \"../../interfaces/popupAlert\";\nimport { errorToText } from \"../../utils/errors\";\nimport NoResult, { NoResultThemes } from \"../../components/NoResult/NoResult\";\nimport Modal, { ModalSize, Themes } from \"../../components/Modal/Modal\";\nimport { isEmptyOrSpaces } from \"../../shared/dataTest\";\n\ninterface AppProps {\n  thisProvince: RoomLocationInterface;\n  thisDistrict: DistrictInterface | null;\n  loadingRequest: boolean;\n  actionTypes:\n    | \"CREATE_PROVINCE\"\n    | \"UPDATE_PROVINCE\"\n    | \"CREATE_DISTRICT\"\n    | \"UPDATE_DISTRICT\"\n    | \"CREATE_SECTOR\"\n    | \"UPDATE_SECTOR\"\n    | null;\n  setLoadingRequest: React.Dispatch<React.SetStateAction<boolean>>;\n  setThisDistrict: React.Dispatch<\n    React.SetStateAction<DistrictInterface | null>\n  >;\n  setActionTypes: React.Dispatch<\n    React.SetStateAction<\n      | \"CREATE_PROVINCE\"\n      | \"UPDATE_PROVINCE\"\n      | \"CREATE_DISTRICT\"\n      | \"UPDATE_DISTRICT\"\n      | \"CREATE_SECTOR\"\n      | \"UPDATE_SECTOR\"\n      | null\n    >\n  >;\n  FC_CreateDistrict: Function;\n  FC_UpdateDistrict: Function;\n  FC_DeleteDistrict: Function;\n  PushPopupAlert: (alert: PopupAlertData) => void;\n}\n\nconst ViewDistrict: React.FC<AppProps> = (props) => {\n  const [districtName, setDistrictName] = useState<string>(\"\");\n  const [districtCode, setDistrictCode] = useState<number>(0);\n  const [error, setError] = useState<{ element: string; msg: string } | null>(\n    null\n  );\n\n  const handleSubmit = async () => {\n    if (isEmptyOrSpaces(districtName)) {\n      return setError({\n        element: \"district_name\",\n        msg: \"District name is required\",\n      });\n    }\n\n    if (districtCode <= 0) {\n      return setError({\n        element: \"district_code\",\n        msg: \"Invalid district code, code must be greater than 0\",\n      });\n    }\n\n    props.setLoadingRequest(true);\n    try {\n      let res;\n      if (props.actionTypes === \"CREATE_DISTRICT\") {\n        res = await axios.post<{ data: DistrictInterface }>(\n          `${API.APPLICATION}/district`,\n          {\n            province_id: props.thisProvince._id,\n            province_code: props.thisProvince.province_code,\n            district_name: districtName,\n            district_code: districtCode,\n            centers: [],\n          }\n        );\n        if (res.data) {\n          console.log({\n            province_id: props.thisProvince._id,\n            data: res.data.data,\n            res,\n          });\n          props.FC_CreateDistrict({\n            province_id: props.thisProvince._id,\n            data: {\n              centers: res.data.data.centers,\n              sectors: res.data.data.sectors,\n              province_code: res.data.data.province_code,\n              province_id: res.data.data.province_id,\n              district_code: res.data.data.district_code,\n              district_name: res.data.data.district_name,\n              district_id: res.data.data._id,\n            },\n          });\n          props.PushPopupAlert({\n            title: \"New district created successfully\",\n            theme: PopupAlertTheme.success,\n          });\n          props.setLoadingRequest(false);\n          props.setActionTypes(null);\n          setDistrictName(\"\");\n          setDistrictCode(0);\n        }\n      } else if (\n        props.thisDistrict &&\n        props.actionTypes === \"UPDATE_DISTRICT\"\n      ) {\n        const centers: string[] = props.thisDistrict.centers.map(\n          (center) => center._id\n        );\n        res = await axios.patch<{ data: DistrictInterface }>(\n          `${API.APPLICATION}/district`,\n          {\n            district_id: props.thisDistrict._id,\n            province_code: props.thisProvince.province_code,\n            district_name: districtName,\n            district_code: districtCode,\n            centers,\n          }\n        );\n        if (res.data) {\n          props.FC_UpdateDistrict({\n            province_id: props.thisProvince._id,\n            district_id: props.thisDistrict._id,\n            district_name: districtName,\n          });\n          props.PushPopupAlert({\n            title: \"District updated successfully\",\n            theme: PopupAlertTheme.success,\n          });\n          props.setLoadingRequest(false);\n          props.setActionTypes(null);\n          setDistrictName(\"\");\n          props.setThisDistrict(null);\n        }\n      }\n    } catch (error) {\n      console.log({ doc_category_error: error });\n      props.PushPopupAlert({\n        title: errorToText(error),\n        theme: PopupAlertTheme.danger,\n      });\n      props.setLoadingRequest(false);\n    }\n  };\n\n  // const handleDelete = async (districtId: string) => {\n  //   try {\n  //     const res = await axios.delete<DistrictInterface>(\n  //       `${API.APPLICATION}/district/${districtId}`\n  //     );\n\n  //     if (res.data) {\n  //       props.FC_DeleteDistrict({\n  //         province_id: props.thisProvince._id,\n  //         district_id: districtId,\n  //       });\n  //       props.PushPopupAlert({\n  //         title: \"District deleted successfully\",\n  //         theme: PopupAlertTheme.success,\n  //       });\n  //       props.setLoadingRequest(false);\n  //       props.setActionTypes(null);\n  //     }\n  //   } catch (error) {\n  //     console.log({ district_error: error });\n  //     props.PushPopupAlert({\n  //       title: errorToText(error),\n  //       theme: PopupAlertTheme.danger,\n  //     });\n  //     props.setLoadingRequest(false);\n  //   }\n  // };\n\n  return (\n    <div className={`w-full p-2`}>\n      {props.thisProvince.districts.length > 0 ? (\n        <div className=\"rounded border border-gray-100 shadow-sm animate__animated animate__fadeIn\">\n          <table className=\"w-full z-0\">\n            <thead className=\"bg-gray-50\">\n              <tr className=\"text-left\">\n                <th className=\"px-3 py-3\">#</th>\n                <th>District name</th>\n                <th>District code</th>\n                <th>Sectors</th>\n                {/* <th>Status</th> */}\n              </tr>\n            </thead>\n            <tbody className=\"text-base\">\n              {props.thisProvince.districts.map((district, index) => (\n                <tr\n                  key={index + district._id}\n                  className={`text-left border-b border-gray-50`}\n                >\n                  <td className=\"px-3 py-1\">{index + 1}</td>\n                  <td>{district.district_name}</td>\n                  <td>{district.district_code}</td>\n                  <td>\n                    {district.sectors && district.sectors.length > 0\n                      ? district.sectors.length + \" Sector(s)\"\n                      : \"\"}\n                  </td>\n                  {/* <td>\n                    <div className=\"flex items-center gap-2\">\n                      <button\n                        title={\n                          props.thisDistrict &&\n                          props.thisDistrict._id === district._id\n                            ? \"Close Centers\"\n                            : \"View Centers\"\n                        }\n                        className={`${\n                          props.thisDistrict &&\n                          props.thisDistrict._id === district._id\n                            ? \"bg-gray-500 hover:bg-gray-600\"\n                            : \"bg-gray-400 hover:bg-gray-500\"\n                        } p-2 rounded-full shadow-md flex justify-center items-center focus:outline-none`}\n                        onClick={() =>\n                          !props.thisDistrict ||\n                          props.thisDistrict._id !== district._id\n                            ? props.setThisDistrict(district)\n                            : props.setThisDistrict(null)\n                        }\n                      >\n                        {props.thisDistrict &&\n                        props.thisDistrict._id === district._id ? (\n                          <IoMdEyeOff className=\"text-white w-4 h-4\" />\n                        ) : (\n                          <IoMdEye className=\"text-white w-4 h-4\" />\n                        )}\n                      </button>\n                      <button\n                        title=\"Update district\"\n                        className=\"bg-blue-500 hover:bg-blue-600 p-2 rounded-full shadow-md flex justify-center items-center focus:outline-none\"\n                        onClick={() => {\n                          props.setThisDistrict(district);\n                          setDistrictName(district.district_name);\n                          setDistrictCode(district.district_code);\n                          props.setActionTypes(\"UPDATE_DISTRICT\");\n                        }}\n                        disabled={\n                          props.loadingRequest || props.actionTypes !== null\n                        }\n                      >\n                        <MdCreate className=\"text-white w-4 h-4\" />\n                      </button>\n                      <button\n                        title=\"Delete Sub-Category\"\n                        className=\"bg-red-500 hover:bg-red-600 p-2 rounded-full shadow-md flex justify-center items-center focus:outline-none\"\n                        onClick={() => handleDelete(district._id)}\n                        disabled={props.loadingRequest}\n                      >\n                        <MdClear className=\"text-white w-4 h-4\" />\n                      </button>\n                    </div>\n                  </td> */}\n                </tr>\n              ))}\n            </tbody>\n          </table>\n        </div>\n      ) : (\n        <NoResult\n          theme={NoResultThemes.Dark}\n          value={\"No district found!\"}\n          component={\n            <div className=\"w-full mt-2 flex flex-row items-center justify-center\">\n              <ul className=\"text-sm py-2 text-blue-600 font-bold flex flex-row gap-2\">\n                <li\n                  onClick={() => props.setActionTypes(\"CREATE_DISTRICT\")}\n                  className=\"underline text-gray-500 cursor-pointer\"\n                >\n                  Add district\n                </li>\n              </ul>\n            </div>\n          }\n        />\n      )}\n\n      {/* modal for creating new categories or sub category */}\n      {props.actionTypes &&\n        (props.actionTypes === \"CREATE_DISTRICT\" ||\n          props.actionTypes === \"UPDATE_DISTRICT\") && (\n          <Modal\n            backDrop={true}\n            theme={Themes.default}\n            close={(): void => {\n              props.setActionTypes(null);\n              setDistrictName(\"\");\n              setDistrictCode(10);\n              setError(null);\n            }}\n            displayClose={false}\n            backDropClose={false}\n            title={\n              <div className=\"flex items-center space-x-5\">\n                <div className=\"block pl-2 font-semibold text-xl self-start text-gray-700\">\n                  {/* <p className=\"text-base text-gray-500 font-medium\">\n                    You are{\" \"}\n                    {actionType === \"CREATE_SUB\" || \"CREATE_CAT\"\n                      ? \"creating\"\n                      : \"updating\"}\n                  </p> */}\n                  <h2 className=\"uppercase text-back\">\n                    {props.actionTypes === \"CREATE_DISTRICT\"\n                      ? \"CREATING NEW DISTRICT\"\n                      : props.actionTypes === \"UPDATE_DISTRICT\" &&\n                        \"UPDATING EXISTING DISTRICT\"}\n                  </h2>\n                </div>\n              </div>\n            }\n            widthSizeClass={ModalSize.medium}\n            padding={{ title: true, body: false, footer: false }}\n          >\n            <div className=\"mx-5 mb-4\">\n              <div className=\"py-2 text-base leading-6 space-y-4 text-gray-700 sm:text-lg sm:leading-7\">\n                <div className=\"flex flex-col\">\n                  <label>District name</label>\n                  <input\n                    type=\"text\"\n                    className={`bg-white py-1 px-2 border-2 ${\n                      error && error.element === \"district_name\"\n                        ? \"border-red-700\"\n                        : \"border-gray-700\"\n                    } rounded focus:outline-none focus:bg-gray-100`}\n                    onChange={(e) => {\n                      error &&\n                        error.element === \"district_name\" &&\n                        setError(null);\n                      setDistrictName(e.target.value);\n                    }}\n                    value={districtName}\n                    disabled={props.loadingRequest}\n                  />\n                  {error && error.element === \"district_name\" && (\n                    <span className=\"text-red-700\">{error.msg}</span>\n                  )}\n                </div>\n                <div className=\"flex flex-col\">\n                  <label>District code</label>\n                  <input\n                    type=\"number\"\n                    className={`bg-white py-1 px-2 border-2 ${\n                      error && error.element === \"district_code\"\n                        ? \"border-red-700\"\n                        : \"border-gray-700\"\n                    } rounded focus:outline-none focus:bg-gray-100`}\n                    onChange={(e) => {\n                      error &&\n                        error.element === \"district_code\" &&\n                        setError(null);\n                      setDistrictCode(Number(e.target.value));\n                    }}\n                    value={districtCode}\n                    disabled={props.loadingRequest}\n                  />\n                  {error && error.element === \"district_code\" && (\n                    <span className=\"text-red-700\">{error.msg}</span>\n                  )}\n                </div>\n              </div>\n              <div className=\"pt-4 flex justify-between\">\n                <button\n                  onClick={() => {\n                    props.setActionTypes(null);\n                    setDistrictName(\"\");\n                    setDistrictCode(10);\n                    setError(null);\n                  }}\n                  className={`btn bg-gray-400 text-white hover:bg-gray-600`}\n                  type=\"button\"\n                  disabled={props.loadingRequest}\n                >\n                  Exit\n                </button>\n                <button\n                  className=\"btn bg-primary text-white hover:bg-blue-600\"\n                  type=\"button\"\n                  onClick={() => handleSubmit()}\n                  disabled={props.loadingRequest}\n                >\n                  {props.loadingRequest ? \"Loading...\" : \"Save\"}\n                </button>\n              </div>\n            </div>\n          </Modal>\n        )}\n      {/* end modal for creating new categories or sub category */}\n    </div>\n  );\n};\n\nexport default React.memo(connect(null, {\n  FC_CreateDistrict,\n  FC_UpdateDistrict,\n  FC_DeleteDistrict,\n  PushPopupAlert,\n})(ViewDistrict));\n","import React, { useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { IoMdEye, IoMdEyeOff } from \"react-icons/io\";\nimport {\n  FC_CreateProvince,\n  FC_DeleteProvince,\n  FC_UpdateProvince,\n} from \"../../actions/location\";\nimport axios from \"axios\";\nimport { API } from \"../../utils/api\";\nimport {\n  DistrictInterface,\n  RoomLocationInterface,\n} from \"../../shared/interfaces\";\nimport { PushPopupAlert } from \"../../actions/system\";\nimport { PopupAlertData } from \"../../components/Alert/Popup\";\nimport { PopupAlertTheme } from \"../../interfaces/popupAlert\";\nimport { errorToText } from \"../../utils/errors\";\nimport Modal, { ModalSize, Themes } from \"../../components/Modal/Modal\";\nimport NoResult, { NoResultThemes } from \"../../components/NoResult/NoResult\";\nimport { isEmptyOrSpaces } from \"../../shared/dataTest\";\n\ninterface AppProps {\n  thisProvince: RoomLocationInterface | null;\n  thisDistrict: DistrictInterface | null;\n  loadingRequest: boolean;\n  locations: RoomLocationInterface[];\n  actionTypes:\n    | \"CREATE_PROVINCE\"\n    | \"UPDATE_PROVINCE\"\n    | \"CREATE_DISTRICT\"\n    | \"UPDATE_DISTRICT\"\n    | \"CREATE_SECTOR\"\n    | \"UPDATE_SECTOR\"\n    | null;\n  setLoadingRequest: React.Dispatch<React.SetStateAction<boolean>>;\n  setThisProvince: React.Dispatch<\n    React.SetStateAction<RoomLocationInterface | null>\n  >;\n  setActionTypes: React.Dispatch<\n    React.SetStateAction<\n      | \"CREATE_PROVINCE\"\n      | \"UPDATE_PROVINCE\"\n      | \"CREATE_DISTRICT\"\n      | \"UPDATE_DISTRICT\"\n      | \"CREATE_SECTOR\"\n      | \"UPDATE_SECTOR\"\n      | null\n    >\n  >;\n  FC_CreateProvince: Function;\n  FC_UpdateProvince: Function;\n  FC_DeleteProvince: Function;\n  PushPopupAlert: (alert: PopupAlertData) => void;\n}\n\nconst ViewProvince: React.FC<AppProps> = (props) => {\n  const [provinceTitle, setProvinceTitle] = useState<string>(\"\");\n  const [provinceCode, setProvinceCode] = useState<number>(0);\n  const [error, setError] = useState<{ element: string; msg: string } | null>(\n    null\n  );\n\n  const handleSubmit = async () => {\n    if (isEmptyOrSpaces(provinceTitle)) {\n      return setError({\n        element: \"province_title\",\n        msg: \"Title of Province is required\",\n      });\n    }\n\n    if (provinceCode <= 0) {\n      return setError({\n        element: \"province_code\",\n        msg: \"Code of Province is required\",\n      });\n    }\n\n    props.setLoadingRequest(true);\n    try {\n      let res;\n      if (props.actionTypes === \"CREATE_PROVINCE\") {\n        res = await axios.post<{ data: RoomLocationInterface }>(\n          `${API.APPLICATION}/province`,\n          {\n            province_name: provinceTitle,\n            province_code: provinceCode,\n            districts: [],\n          }\n        );\n\n        if (res.data) {\n          props.FC_CreateProvince(res.data.data);\n          props.PushPopupAlert({\n            title: \"New Province created successfully\",\n            theme: PopupAlertTheme.success,\n          });\n          props.setLoadingRequest(false);\n          props.setActionTypes(null);\n          setProvinceTitle(\"\");\n        }\n      } else if (\n        props.thisProvince &&\n        props.actionTypes === \"UPDATE_PROVINCE\"\n      ) {\n        const districts: string[] = props.thisProvince.districts.map(\n          (district) => district._id\n        );\n        res = await axios.patch<{ updated: RoomLocationInterface }>(\n          `${API.APPLICATION}/province`,\n          {\n            province_id: props.thisProvince._id,\n            province_name: provinceTitle,\n            province_code: provinceCode,\n            districts,\n          }\n        );\n        if (res.data) {\n          console.log({ res: res.data.updated });\n          props.FC_UpdateProvince(res.data.updated);\n          props.PushPopupAlert({\n            title: \"Province updated successfully\",\n            theme: PopupAlertTheme.success,\n          });\n          props.setLoadingRequest(false);\n          props.setActionTypes(null);\n          setProvinceTitle(\"\");\n          props.setThisProvince(null);\n        }\n      }\n    } catch (error) {\n      console.error({ province_error: error });\n      props.PushPopupAlert({\n        title: errorToText(error),\n        theme: PopupAlertTheme.danger,\n      });\n      props.setLoadingRequest(false);\n    }\n  };\n\n  // const handleDelete = async (provinceId: string) => {\n  //   try {\n  //     const res = await axios.delete<RoomLocationInterface>(\n  //       `${API.APPLICATION}/province/${provinceId}`\n  //     );\n\n  //     if (res.data) {\n  //       console.log({ res });\n  //       props.FC_DeleteProvince(provinceId);\n  //       props.PushPopupAlert({\n  //         title: \"Province deleted successfully\",\n  //         theme: PopupAlertTheme.success,\n  //       });\n  //       props.setLoadingRequest(false);\n  //       props.setActionTypes(null);\n  //     }\n  //   } catch (error) {\n  //     console.log({ province_error: error });\n  //     props.PushPopupAlert({\n  //       title: errorToText(error),\n  //       theme: PopupAlertTheme.danger,\n  //     });\n  //     props.setLoadingRequest(false);\n  //   }\n  // };\n\n  return (\n    <div className={`w-full p-2`}>\n      {props.locations.length > 0 ? (\n        props.locations.map((province, index) => (\n          <div\n            key={index + province._id}\n            className=\"flex justify-between items-center p-2 mb-3 rounded border border-gray-100 shadow\"\n          >\n            <div className=\"flex items-center\">\n              <div className=\"ml-2\">\n                <div className=\"text-xl font-semibold text-gray-600\">\n                  {province.province_name}\n                </div>\n                <div className=\"text-sm font-light text-gray-500\">\n                  {province.districts.length > 0\n                    ? province.districts.length + \"District(s)\"\n                    : null}\n                </div>\n              </div>\n            </div>\n            <div className=\"flex items-center gap-2\">\n              <button\n                title={\n                  props.thisProvince &&\n                  props.thisProvince._id === province._id &&\n                  props.actionTypes !== \"UPDATE_PROVINCE\"\n                    ? \"Close Districts\"\n                    : \"View Districts\"\n                }\n                className={`${\n                  props.thisProvince &&\n                  props.thisProvince._id === province._id &&\n                  props.actionTypes !== \"UPDATE_PROVINCE\"\n                    ? \"bg-gray-500 hover:bg-gray-600\"\n                    : \"bg-gray-400 hover:bg-gray-500\"\n                } p-2 rounded-full shadow-md flex justify-center items-center focus:outline-none`}\n                onClick={() => {\n                  !props.thisProvince || props.thisProvince._id !== province._id\n                    ? props.setThisProvince(province)\n                    : props.setThisProvince(null);\n                  setProvinceTitle(\"\");\n                  props.setActionTypes(null);\n                }}\n              >\n                {props.thisProvince &&\n                props.thisProvince._id === province._id &&\n                props.actionTypes !== \"UPDATE_PROVINCE\" ? (\n                  <IoMdEyeOff className=\"text-white w-4 h-4\" />\n                ) : (\n                  <IoMdEye className=\"text-white w-4 h-4\" />\n                )}\n              </button>\n              {/* <button\n                title=\"Update Province\"\n                className=\"bg-blue-500 hover:bg-blue-600 p-2 rounded-full shadow-md flex justify-center items-center focus:outline-none\"\n                onClick={() => {\n                  props.setThisProvince(province);\n                  setProvinceTitle(province.province_name);\n                  setProvinceCode(province.province_code);\n                  props.setActionTypes(\"UPDATE_PROVINCE\");\n                }}\n                disabled={props.loadingRequest || props.actionTypes !== null}\n              >\n                <MdCreate className=\"text-white w-4 h-4\" />\n              </button>\n              <button\n                title=\"Delete Sub-Category\"\n                className=\"bg-red-500 hover:bg-red-600 p-2 rounded-full shadow-md flex justify-center items-center focus:outline-none\"\n                onClick={() => handleDelete(province._id)}\n                disabled={props.loadingRequest || props.actionTypes !== null}\n              >\n                <MdClear className=\"text-white w-4 h-4\" />\n              </button> */}\n            </div>\n          </div>\n        ))\n      ) : (\n        <NoResult\n          theme={NoResultThemes.Dark}\n          value=\"No province found!\"\n          component={\n            <div className=\"w-full mt-2 flex flex-row items-center justify-center\">\n              <ul className=\"text-sm py-2 text-blue-600 font-bold flex flex-row gap-2\">\n                <li\n                  onClick={() => props.setActionTypes(\"CREATE_PROVINCE\")}\n                  className=\"underline text-gray-500 cursor-pointer\"\n                >\n                  Add province\n                </li>\n              </ul>\n            </div>\n          }\n        />\n      )}\n\n      {/* modal for creating new categories or sub category */}\n      {props.actionTypes &&\n        (props.actionTypes === \"CREATE_PROVINCE\" ||\n          props.actionTypes === \"UPDATE_PROVINCE\") && (\n          <Modal\n            backDrop={true}\n            theme={Themes.default}\n            close={(): void => {\n              props.setActionTypes(null);\n              setProvinceTitle(\"\");\n              setProvinceCode(0);\n              setError(null);\n            }}\n            displayClose={false}\n            backDropClose={false}\n            title={\n              <div className=\"flex items-center space-x-5\">\n                <div className=\"block pl-2 font-semibold text-xl self-start text-gray-700\">\n                  <h2 className=\"uppercase text-back\">\n                    {props.actionTypes === \"CREATE_PROVINCE\"\n                      ? \"CREATING NEW PROVINCE\"\n                      : props.actionTypes === \"UPDATE_PROVINCE\" &&\n                        \"UPDATING EXISTING PROVINCE\"}\n                  </h2>\n                </div>\n              </div>\n            }\n            widthSizeClass={ModalSize.medium}\n            padding={{ title: true, body: false, footer: false }}\n          >\n            <div className=\"mx-5 mb-4\">\n              <div className=\"py-2 text-base leading-6 space-y-4 text-gray-700 sm:text-lg sm:leading-7\">\n                <div className=\"flex flex-col\">\n                  <label>Province name</label>\n                  <input\n                    type=\"text\"\n                    className={`bg-white py-1 px-2 border-2 ${\n                      error && error.element === \"province_title\"\n                        ? \"border-red-700\"\n                        : \"border-gray-700\"\n                    } rounded focus:outline-none focus:bg-gray-100`}\n                    onChange={(e) => {\n                      error &&\n                        error.element === \"province_title\" &&\n                        setError(null);\n                      setProvinceTitle(e.target.value);\n                    }}\n                    value={provinceTitle}\n                    disabled={props.loadingRequest}\n                  />\n                  {error && error.element === \"province_title\" && (\n                    <span className=\"text-red-700\">{error.msg}</span>\n                  )}\n                </div>\n                <div className=\"flex flex-col\">\n                  <label>Province code {props.loadingRequest && \"TRUE\"}</label>\n                  <input\n                    type=\"number\"\n                    className={`bg-white py-1 px-2 border-2 ${\n                      error && error.element === \"province_code\"\n                        ? \"border-red-700\"\n                        : \"border-gray-700\"\n                    } rounded focus:outline-none focus:bg-gray-100`}\n                    onChange={(e) => {\n                      error &&\n                        error.element === \"province_code\" &&\n                        setError(null);\n                      setProvinceCode(Number(e.target.value));\n                    }}\n                    value={provinceCode}\n                    disabled={props.loadingRequest}\n                  />\n                  {error && error.element === \"province_code\" && (\n                    <span className=\"text-red-700\">{error.msg}</span>\n                  )}\n                </div>\n              </div>\n              <div className=\"pt-4 flex justify-between\">\n                <button\n                  onClick={() => {\n                    props.setActionTypes(null);\n                    setProvinceTitle(\"\");\n                    setProvinceCode(0);\n                    setError(null);\n                  }}\n                  className={`btn bg-gray-400 text-white hover:bg-gray-600`}\n                  type=\"button\"\n                  disabled={props.loadingRequest}\n                >\n                  Exit\n                </button>\n                <button\n                  className=\"btn bg-primary text-white hover:bg-blue-600\"\n                  type=\"button\"\n                  onClick={() => handleSubmit()}\n                  disabled={props.loadingRequest}\n                >\n                  {props.loadingRequest ? \"Loading...\" : \"Save\"}\n                </button>\n              </div>\n            </div>\n          </Modal>\n        )}\n      {/* end modal for creating new categories or sub category */}\n    </div>\n  );\n};\n\nexport default React.memo(connect(null, {\n  FC_CreateProvince,\n  FC_UpdateProvince,\n  FC_DeleteProvince,\n  PushPopupAlert,\n})(ViewProvince));\n","import React, { useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { MdClear, MdCreate } from \"react-icons/md\";\nimport {\n  FC_CreateSector,\n  FC_DeleteSector,\n  FC_UpdateSector,\n} from \"../../actions/location\";\nimport axios from \"axios\";\nimport { API } from \"../../utils/api\";\nimport { DistrictInterface, SectorInterface } from \"../../shared/interfaces\";\nimport { PushPopupAlert } from \"../../actions/system\";\nimport { PopupAlertData } from \"../../components/Alert/Popup\";\nimport { PopupAlertTheme } from \"../../interfaces/popupAlert\";\nimport { errorToText } from \"../../utils/errors\";\nimport NoResult, { NoResultThemes } from \"../../components/NoResult/NoResult\";\nimport Modal, { ModalSize, Themes } from \"../../components/Modal/Modal\";\nimport { isEmptyOrSpaces } from \"../../shared/dataTest\";\n\ninterface AppProps {\n  thisDistrict: DistrictInterface;\n  thisSector: SectorInterface | null;\n  loadingRequest: boolean;\n  actionTypes:\n    | \"CREATE_PROVINCE\"\n    | \"UPDATE_PROVINCE\"\n    | \"CREATE_DISTRICT\"\n    | \"UPDATE_DISTRICT\"\n    | \"CREATE_SECTOR\"\n    | \"UPDATE_SECTOR\"\n    | null;\n  setLoadingRequest: React.Dispatch<React.SetStateAction<boolean>>;\n  setThisSector: React.Dispatch<React.SetStateAction<SectorInterface | null>>;\n  setActionTypes: React.Dispatch<\n    React.SetStateAction<\n      | \"CREATE_PROVINCE\"\n      | \"UPDATE_PROVINCE\"\n      | \"CREATE_DISTRICT\"\n      | \"UPDATE_DISTRICT\"\n      | \"CREATE_SECTOR\"\n      | \"UPDATE_SECTOR\"\n      | null\n    >\n  >;\n  FC_CreateSector: Function;\n  FC_UpdateSector: Function;\n  FC_DeleteSector: Function;\n  PushPopupAlert: (alert: PopupAlertData) => void;\n}\n\nconst ViewSectors: React.FC<AppProps> = (props) => {\n  const [sectorName, setSectorName] = useState<string>(\"\");\n  const [sectorCode, setSectorCode] = useState<number>(0);\n  const [error, setError] = useState<{ element: string; msg: string } | null>(\n    null\n  );\n\n  const handleSubmit = async () => {\n    if (isEmptyOrSpaces(sectorName)) {\n      return setError({\n        element: \"sector_name\",\n        msg: \"Sector name is required\",\n      });\n    }\n\n    if (sectorCode <= 0) {\n      return setError({\n        element: \"sector_code\",\n        msg: \"Invalid sector code, must be \",\n      });\n    }\n\n    props.setLoadingRequest(true);\n    try {\n      let res;\n      if (props.actionTypes === \"CREATE_SECTOR\") {\n        res = await axios.post<{ data: SectorInterface }>(\n          `${API.APPLICATION}/sector`,\n          {\n            district_id: props.thisDistrict._id,\n            district_code: props.thisDistrict.district_code,\n            sector_name: sectorName,\n            sector_code: sectorCode,\n          }\n        );\n        if (res.data) {\n          console.log({\n            district_id: props.thisDistrict._id,\n            data: res.data.data,\n            res,\n          });\n          props.FC_CreateSector({\n            province_id: props.thisDistrict.province_id,\n            district_id: props.thisDistrict._id,\n            data: {\n              district_id: res.data.data.district_id,\n              district_code: res.data.data.district_code,\n              sector_name: res.data.data.sector_name,\n              sector_code: res.data.data.sector_code,\n              sector_id: res.data.data.sector_id,\n            },\n          });\n          props.PushPopupAlert({\n            title: \"New sector created successfully\",\n            theme: PopupAlertTheme.success,\n          });\n          props.setLoadingRequest(false);\n          props.setActionTypes(null);\n          setSectorName(\"\");\n        }\n      } else if (props.thisSector && props.actionTypes === \"UPDATE_SECTOR\") {\n        res = await axios.patch<{ data: DistrictInterface }>(\n          `${API.APPLICATION}/sector`,\n          {\n            district_id: props.thisSector.district_id,\n            district_code: props.thisDistrict.district_code,\n            sector_id: props.thisSector.sector_id,\n            sector_name: sectorName,\n            sector_code: sectorCode,\n          }\n        );\n        if (res.data) {\n          props.FC_UpdateSector({\n            province_id: props.thisDistrict.province_id,\n            district_id: props.thisSector.district_id,\n            sector_id: props.thisSector.sector_id,\n            sector_name: sectorName,\n            sector_code: sectorCode,\n          });\n          props.PushPopupAlert({\n            title: \"Sector updated successfully\",\n            theme: PopupAlertTheme.success,\n          });\n          props.setLoadingRequest(false);\n          props.setActionTypes(null);\n          setSectorName(\"\");\n          props.setThisSector(null);\n        }\n      }\n    } catch (error) {\n      console.log({ sector_error: error });\n      props.PushPopupAlert({\n        title: errorToText(error),\n        theme: PopupAlertTheme.danger,\n      });\n      props.setLoadingRequest(false);\n    }\n  };\n\n  const handleDelete = async (sectorId: string) => {\n    try {\n      const res = await axios.delete<SectorInterface>(\n        `${API.APPLICATION}/sector/${sectorId}`\n      );\n\n      if (res.data) {\n        props.FC_DeleteSector({\n          province_id: props.thisDistrict.province_id,\n          district_id: props.thisDistrict._id,\n          sector_id: sectorId,\n        });\n        props.PushPopupAlert({\n          title: \"Sector deleted successfully\",\n          theme: PopupAlertTheme.success,\n        });\n        props.setLoadingRequest(false);\n        props.setActionTypes(null);\n      }\n    } catch (error) {\n      console.log({ district_error: error });\n      props.PushPopupAlert({\n        title: errorToText(error),\n        theme: PopupAlertTheme.danger,\n      });\n      props.setLoadingRequest(false);\n    }\n  };\n\n  return (\n    <div className={`w-full p-2`}>\n      {props.thisDistrict.sectors && props.thisDistrict.sectors.length > 0 ? (\n        <div className=\"rounded border border-gray-100 shadow-sm animate__animated animate__fadeIn\">\n          <table className=\"w-full z-0\">\n            <thead className=\"bg-gray-50\">\n              <tr className=\"text-left\">\n                <th className=\"px-3 py-3\">#</th>\n                <th>Sector name</th>\n                <th>Sector code</th>\n                <th>Status</th>\n              </tr>\n            </thead>\n            <tbody className=\"text-sm\">\n              {props.thisDistrict.sectors.map((sector, index) => (\n                <tr\n                  key={index + sector.district_id}\n                  className={`text-left border-b border-gray-50`}\n                >\n                  <td className=\"px-3 py-1\">{index + 1}</td>\n                  <td>{sector.sector_name}</td>\n                  <td>{sector.sector_name}</td>\n                  <td>\n                    <div className=\"flex items-center gap-2\">\n                      <button\n                        title=\"Update sector\"\n                        className=\"bg-blue-500 hover:bg-blue-600 p-2 rounded-full shadow-md flex justify-center items-center focus:outline-none\"\n                        onClick={() => {\n                          props.setThisSector(sector);\n                          setSectorName(sector.sector_name);\n                          setSectorCode(sector.sector_code);\n                          props.setActionTypes(\"UPDATE_SECTOR\");\n                        }}\n                        disabled={\n                          props.loadingRequest || props.actionTypes !== null\n                        }\n                      >\n                        <MdCreate className=\"text-white w-4 h-4\" />\n                      </button>\n                      <button\n                        title=\"Delete sector\"\n                        className=\"bg-red-500 hover:bg-red-600 p-2 rounded-full shadow-md flex justify-center items-center focus:outline-none\"\n                        onClick={() => handleDelete(sector.sector_id)}\n                        disabled={props.loadingRequest}\n                      >\n                        <MdClear className=\"text-white w-4 h-4\" />\n                      </button>\n                    </div>\n                  </td>\n                </tr>\n              ))}\n            </tbody>\n          </table>\n        </div>\n      ) : (\n        <NoResult\n          theme={NoResultThemes.Dark}\n          value={\"No sector found!\"}\n          component={\n            <div className=\"w-full mt-2 flex flex-row items-center justify-center\">\n              <ul className=\"text-sm py-2 text-blue-600 font-bold flex flex-row gap-2\">\n                <li\n                  onClick={() => props.setActionTypes(\"CREATE_SECTOR\")}\n                  className=\"underline text-gray-500 cursor-pointer\"\n                >\n                  Add sector\n                </li>\n              </ul>\n            </div>\n          }\n        />\n      )}\n\n      {/* modal for creating new categories or sub category */}\n      {props.actionTypes &&\n        (props.actionTypes === \"CREATE_SECTOR\" ||\n          props.actionTypes === \"UPDATE_SECTOR\") && (\n          <Modal\n            backDrop={true}\n            theme={Themes.default}\n            close={(): void => {\n              props.setActionTypes(null);\n              setSectorName(\"\");\n              setSectorCode(0);\n              setError(null);\n            }}\n            displayClose={false}\n            backDropClose={false}\n            title={\n              <div className=\"flex items-center space-x-5\">\n                <div className=\"block pl-2 font-semibold text-xl self-start text-gray-700\">\n                  {/* <p className=\"text-base text-gray-500 font-medium\">\n                    You are{\" \"}\n                    {actionType === \"CREATE_SUB\" || \"CREATE_CAT\"\n                      ? \"creating\"\n                      : \"updating\"}\n                  </p> */}\n                  <h2 className=\"uppercase text-back\">\n                    {props.actionTypes === \"CREATE_SECTOR\"\n                      ? \"CREATING NEW SECTOR\"\n                      : props.actionTypes === \"UPDATE_SECTOR\" &&\n                        \"UPDATING EXISTING SECTOR\"}\n                  </h2>\n                </div>\n              </div>\n            }\n            widthSizeClass={ModalSize.medium}\n            padding={{ title: true, body: false, footer: false }}\n          >\n            <div className=\"w-full px-5 mb-5\">\n              <div className=\"py-3 text-base leading-6 space-y-4 text-gray-700 sm:text-lg sm:leading-7\">\n                <div className=\"flex flex-col\">\n                  <label>Sector name</label>\n                  <input\n                    type=\"text\"\n                    className={`bg-white py-1 px-2 border-2 ${\n                      error && error.element === \"sector_name\"\n                        ? \"border-red-700\"\n                        : \"border-gray-700\"\n                    } rounded focus:outline-none focus:bg-gray-100`}\n                    onChange={(e) => {\n                      error &&\n                        error.element === \"sector_name\" &&\n                        setError(null);\n                      setSectorName(e.target.value);\n                    }}\n                    value={sectorName}\n                    disabled={props.loadingRequest}\n                  />\n                  {error && error.element === \"sector_name\" && (\n                    <span className=\"text-red-700\">{error.msg}</span>\n                  )}\n                </div>\n                <div className=\"flex flex-col\">\n                  <label>Sector code</label>\n                  <input\n                    type=\"number\"\n                    className={`bg-white py-1 px-2 border-2 ${\n                      error && error.element === \"sector_code\"\n                        ? \"border-red-700\"\n                        : \"border-gray-700\"\n                    } rounded focus:outline-none focus:bg-gray-100`}\n                    onChange={(e) => {\n                      error &&\n                        error.element === \"sector_code\" &&\n                        setError(null);\n                      setSectorCode(Number(e.target.value));\n                    }}\n                    value={sectorCode}\n                    disabled={props.loadingRequest}\n                  />\n                  {error && error.element === \"sector_code\" && (\n                    <span className=\"text-red-700\">{error.msg}</span>\n                  )}\n                </div>\n              </div>\n              <div className=\"pt-4 flex justify-between\">\n                <button\n                  onClick={() => {\n                    props.setActionTypes(null);\n                    setSectorName(\"\");\n                    setSectorCode(0);\n                    setError(null);\n                  }}\n                  className={`btn bg-gray-400 text-white hover:bg-gray-600`}\n                  type=\"button\"\n                  disabled={props.loadingRequest}\n                >\n                  Exit\n                </button>\n                <button\n                  className=\"btn bg-primary text-white hover:bg-blue-600\"\n                  type=\"button\"\n                  onClick={() => handleSubmit()}\n                  disabled={props.loadingRequest}\n                >\n                  {props.loadingRequest ? \"Loading...\" : \"Save\"}\n                </button>\n              </div>\n            </div>\n          </Modal>\n        )}\n      {/* end modal for creating new categories or sub category */}\n    </div>\n  );\n};\n\nexport default React.memo(\n  connect(null, {\n    FC_CreateSector,\n    FC_UpdateSector,\n    FC_DeleteSector,\n    PushPopupAlert,\n  })(ViewSectors)\n);\n","import React, { Fragment, useEffect, useState } from \"react\";\nimport { AiOutlineFilter } from \"react-icons/ai\";\nimport { BsCaretRightFill } from \"react-icons/bs\";\nimport { connect } from \"react-redux\";\nimport { getAllRoom } from \"../../actions/location\";\nimport { StoreState } from \"../../reducers\";\nimport {\n  DistrictInterface,\n  LocationRoomTableInterface,\n  RoomLocationInterface,\n  SectorInterface,\n} from \"../../shared/interfaces\";\nimport { LocationsInArray } from \"../UserManagement/UserList\";\nimport ViewDistricts from \"./ViewDistricts\";\nimport ViewProvince from \"./ViewProvince\";\nimport ViewSectors from \"./ViewSectors\";\n\nexport const distinctDistrict = (\n  rooms: RoomLocationInterface[],\n  province_id?: string\n): LocationRoomTableInterface[] => {\n  let ids: string[] = [],\n    result: LocationRoomTableInterface[] = [];\n\n  LocationsInArray(rooms).forEach((element) => {\n    if (!ids.includes(element.district_id)) {\n      if (province_id && element.province_id === province_id) {\n        ids.push(element.district_id);\n        result.push(element);\n      } else if (province_id === undefined) {\n        ids.push(element.district_id);\n        result.push(element);\n      }\n    }\n  });\n\n  return result;\n};\n\nexport const distinctCenter = (\n  rooms: RoomLocationInterface[],\n  district_id: string\n): LocationRoomTableInterface[] => {\n  let ids: string[] = [],\n    result: LocationRoomTableInterface[] = [];\n\n  LocationsInArray(rooms).forEach((element) => {\n    if (\n      !ids.includes(element.center_id) &&\n      element.district_id === district_id\n    ) {\n      ids.push(element.center_id);\n      result.push(element);\n    }\n  });\n  return result;\n};\n\nexport const distinctRoom = (\n  rooms: RoomLocationInterface[],\n  center_id: string\n): LocationRoomTableInterface[] => {\n  let ids: string[] = [],\n    result: LocationRoomTableInterface[] = [];\n\n  LocationsInArray(rooms).forEach((element) => {\n    if (!ids.includes(element.room_id) && element.center_id === center_id) {\n      ids.push(element.room_id);\n      result.push(element);\n    }\n  });\n  return result;\n};\n\ninterface AppProps {\n  locations: RoomLocationInterface[];\n  getAllRoom: Function;\n}\n\nconst _Locations: React.FC<AppProps> = (props) => {\n  const [actionTypes, setActionTypes] = useState<\n    | \"CREATE_PROVINCE\"\n    | \"UPDATE_PROVINCE\"\n    | \"CREATE_DISTRICT\"\n    | \"UPDATE_DISTRICT\"\n    | \"CREATE_SECTOR\"\n    | \"UPDATE_SECTOR\"\n    | null\n  >(null);\n  const [thisProvince, setThisProvince] =\n    useState<RoomLocationInterface | null>(null);\n  const [thisDistrict, setThisDistrict] = useState<DistrictInterface | null>(\n    null\n  );\n  const [thisSector, setThisSector] = useState<SectorInterface | null>(null);\n  const [loading, setLoading] = useState<boolean>(true);\n  const [loadingRequest, setLoadingRequest] = useState<boolean>(false);\n\n  useEffect(() => {\n    if (!props.locations.length && loading) {\n      props.getAllRoom((status: boolean, msg: string) => {\n        setLoading(status);\n        if (!status && msg.length > 0) {\n          console.log(msg);\n        }\n      });\n    } else if (loading) {\n      setLoading(false);\n    }\n  }, [loading, props]);\n\n  if (loading === true) {\n    return (\n      <div className=\"text-center mt-7 font-bold text-4xl text-gray-400 animate-pulse\">\n        Loading locations...\n      </div>\n    );\n  }\n\n  const displayTitle = () => {\n    if (\n      (!thisSector ||\n        (thisSector &&\n          (actionTypes === \"CREATE_SECTOR\" ||\n            actionTypes === \"UPDATE_SECTOR\"))) &&\n      thisDistrict &&\n      actionTypes !== \"CREATE_DISTRICT\" &&\n      actionTypes !== \"UPDATE_DISTRICT\"\n    ) {\n      return (\n        <div className=\"flex items-center gap-1\">\n          <span\n            className=\"cursor-pointer uppercase text-xl font-semibold text-gray-800\"\n            onClick={() => {\n              setThisProvince(null);\n            }}\n          >\n            province\n          </span>\n          <span>/</span>\n          <span\n            className=\"cursor-pointer uppercase text-xl font-semibold text-gray-800\"\n            onClick={() => {\n              setThisDistrict(null);\n            }}\n          >\n            district\n          </span>\n          <span>/</span>\n          <span className=\"text-xl text-gray-800\">\n            {thisDistrict.district_name}\n          </span>\n        </div>\n      );\n    } else if (\n      (!thisDistrict ||\n        (thisDistrict &&\n          (actionTypes === \"CREATE_DISTRICT\" ||\n            actionTypes === \"UPDATE_DISTRICT\"))) &&\n      thisProvince\n    ) {\n      return (\n        <div className=\"flex items-center gap-2\">\n          <span\n            className=\"cursor-pointer uppercase text-xl font-semibold text-gray-800\"\n            onClick={() => {\n              setThisProvince(null);\n            }}\n          >\n            province\n          </span>\n          <span>/</span>\n          <span className=\"text-xl text-gray-800\">\n            {thisProvince.province_name}\n          </span>\n        </div>\n      );\n    }\n\n    return (\n      <div className=\"flex items-center gap-1\">\n        <span className=\"uppercase text-xl font-semibold text-gray-800\">\n          province\n        </span>\n        <span>/</span>\n      </div>\n    );\n  };\n\n  return (\n    <Fragment>\n      <div className=\"w-full my-5\">\n        {/* header title */}\n        <div className=\"flex justify-between p-2 gap-1\">\n          <div className=\"flex flex-col\">\n            <span className=\"text-blue-600 text-2xl md:text-2xl lg:text-3xl font-bold\">\n              Locations Management\n            </span>\n\n            <div className=\"flex flex-row items-center md:gap-3 gap-2 mt-1\">\n              <AiOutlineFilter className=\"text-xl\" />\n              <div className=\"flex flex-row items-center gap-1\">\n                {thisProvince && (\n                  <span className=\"text-gray-700 text-base font-bold\">\n                    {thisProvince.province_name}\n                  </span>\n                )}\n                {thisDistrict && (\n                  <div className=\"flex flex-row items-center gap-1\">\n                    <BsCaretRightFill />\n                    <span className=\"text-blue-600 text-base font-bold underline\">\n                      {thisDistrict.district_name} district\n                    </span>\n                  </div>\n                )}\n              </div>\n            </div>\n          </div>\n        </div>\n        {/* end header title */}\n\n        <div className=\"w-full bg-white\">\n          <div className=\"border-b px-2 py-3 flex justify-between\">\n            {displayTitle()}\n\n            {/* CREATE NEW PROVINCE =====================================*/}\n            {/* {(!thisProvince ||\n              (thisProvince &&\n                (actionTypes === \"CREATE_PROVINCE\" ||\n                  actionTypes === \"UPDATE_PROVINCE\"))) && (\n              <button\n                type=\"button\"\n                className={`btn hover:bg-blue-500 mb-1 border-2 border-blue-500 bg-white\n        hover:text-white rounded-md flex items-center font-bold text-gray-700 focus:outline-none gap-1 ${\n          loadingRequest && \"cursor-wait\"\n        } ${actionTypes !== null && \"cursor-not-allowed\"}`}\n                onClick={() => setActionTypes(\"CREATE_PROVINCE\")}\n                disabled={actionTypes !== null || loadingRequest}\n              >\n                <MdAdd className=\"inline-block mr-1 text-xl font-bold\" />\n                New Province\n              </button>\n            )} */}\n            {/* CREATE NEW DISTRICT =====================================*/}\n            {/* {(!thisDistrict ||\n              (thisDistrict &&\n                (actionTypes === \"CREATE_DISTRICT\" ||\n                  actionTypes === \"UPDATE_DISTRICT\"))) &&\n              thisProvince && (\n                <button\n                  type=\"button\"\n                  className={`btn hover:bg-blue-500 mb-1 border-2 border-blue-500 bg-white\n        hover:text-white rounded-md flex items-center font-bold text-gray-700 focus:outline-none gap-1 ${\n          loadingRequest && \"cursor-wait\"\n        } ${actionTypes !== null && \"cursor-not-allowed\"}`}\n                  onClick={() => setActionTypes(\"CREATE_DISTRICT\")}\n                  disabled={actionTypes !== null || loadingRequest}\n                >\n                  <MdAdd className=\"inline-block mr-1 text-xl font-bold\" />\n                  New District\n                </button>\n              )} */}\n\n            {/* CREATE NEW SECTOR =====================================*/}\n            {/* {(!thisSector ||\n              (thisSector &&\n                (actionTypes === \"CREATE_SECTOR\" ||\n                  actionTypes === \"UPDATE_SECTOR\"))) &&\n              thisDistrict &&\n              actionTypes !== \"CREATE_DISTRICT\" &&\n              actionTypes !== \"UPDATE_DISTRICT\" && (\n                <button\n                  type=\"button\"\n                  className={`btn hover:bg-blue-500 mb-1 border-2 border-blue-500 bg-white\n        hover:text-white rounded-md flex items-center font-bold text-gray-700 focus:outline-none gap-1 ${\n          loadingRequest && \"cursor-wait\"\n        } ${actionTypes !== null && \"cursor-not-allowed\"}`}\n                  onClick={() => setActionTypes(\"CREATE_SECTOR\")}\n                  disabled={actionTypes !== null || loadingRequest}\n                >\n                  <MdAdd className=\"inline-block mr-1 text-xl font-bold\" />\n                  New Sector\n                </button>\n              )} */}\n          </div>\n\n          {(!thisProvince ||\n            (thisProvince &&\n              (actionTypes === \"CREATE_PROVINCE\" ||\n                actionTypes === \"UPDATE_PROVINCE\"))) && (\n            <ViewProvince\n              thisProvince={thisProvince}\n              thisDistrict={thisDistrict}\n              loadingRequest={loadingRequest}\n              locations={props.locations}\n              actionTypes={actionTypes}\n              setLoadingRequest={setLoadingRequest}\n              setThisProvince={setThisProvince}\n              setActionTypes={setActionTypes}\n            />\n          )}\n\n          {(!thisDistrict ||\n            (thisDistrict &&\n              (actionTypes === \"CREATE_DISTRICT\" ||\n                actionTypes === \"UPDATE_DISTRICT\"))) &&\n            thisProvince && (\n              <ViewDistricts\n                thisDistrict={thisDistrict}\n                loadingRequest={loadingRequest}\n                actionTypes={actionTypes}\n                setLoadingRequest={setLoadingRequest}\n                setActionTypes={setActionTypes}\n                thisProvince={thisProvince}\n                setThisDistrict={setThisDistrict}\n              />\n            )}\n\n          {(!thisSector ||\n            (thisSector &&\n              (actionTypes === \"CREATE_SECTOR\" ||\n                actionTypes === \"UPDATE_SECTOR\"))) &&\n            thisDistrict &&\n            actionTypes !== \"CREATE_DISTRICT\" &&\n            actionTypes !== \"UPDATE_DISTRICT\" && (\n              <ViewSectors\n                thisDistrict={thisDistrict}\n                thisSector={thisSector}\n                loadingRequest={loadingRequest}\n                actionTypes={actionTypes}\n                setLoadingRequest={setLoadingRequest}\n                setThisSector={setThisSector}\n                setActionTypes={setActionTypes}\n              />\n            )}\n        </div>\n      </div>\n    </Fragment>\n  );\n};\n\nconst mapStateToProps = ({\n  locations,\n}: StoreState): {\n  locations: RoomLocationInterface[];\n} => {\n  return { locations: locations.roomLocation };\n};\n\nexport const Locations = React.memo(connect(mapStateToProps, {\n  getAllRoom,\n})(_Locations));\n","import { useState } from \"react\";\nimport * as Interfaces from \"../../../../interfaces/index\";\nimport { FiChevronDown, FiChevronRight } from \"react-icons/fi\";\nimport { searchItem } from \"../ApplicationPositions\";\n\ninterface SchoolLevelsItemPropsInterface {\n  educationCategoryDetails: Interfaces.education_category;\n  schoolLevels: Interfaces.school_level[] | null;\n  searchLevel: searchItem | null;\n  setSearchLevel: (\n    educationCategory: Interfaces.education_category | null,\n    schoolLevel: Interfaces.school_level | null\n  ) => void;\n}\n\nconst SchoolLevelsItem = (\n  props: SchoolLevelsItemPropsInterface\n): JSX.Element => {\n  const [levelsDropDown, setLevelsDropDown] = useState<boolean>(false);\n  const initializeItem = (levelsDropDown: boolean, props: any) => {\n    if (\n      (props.searchLevel !== null && props.searchLevel.schoolLevel === null) ||\n      (props.searchLevel !== null &&\n        props.educationCategoryDetails.education_institute_id !==\n          props.searchLevel.educationCategory.education_institute_id) ||\n      props.setSearchLevel === null\n    ) {\n      levelsDropDown === false && props.setSearchLevel(null, null);\n      levelsDropDown === false &&\n        props.setSearchLevel(props.educationCategoryDetails, null);\n    }\n  };\n  const activateItem = (levelsDropDown: boolean, props: any) => {\n    props.setSearchLevel(null, null);\n    props.setSearchLevel(props.educationCategoryDetails, null);\n  };\n  const activateLevelItem = (\n    educationCate: Interfaces.education_category,\n    item: Interfaces.school_level\n  ) => {\n    props.setSearchLevel(null, null);\n    props.setSearchLevel(educationCate, item);\n  };\n  return (\n    <div className=\"flex flex-col\">\n      <div\n        onClick={() => {\n          setLevelsDropDown(!levelsDropDown);\n          initializeItem(levelsDropDown, props);\n        }}\n        className=\"flex flex-row justify-between items-center py-2 px-2 bg-blue-100 rounded cursor-pointer hover:bg-blue-200 mb-2\"\n      >\n        <div className=\"flex flex-col pl-1\">\n          <span className=\"uppercase text-blue-600 text-lg font-bold\">\n            {props.educationCategoryDetails.education_category_title}\n          </span>\n          <span className=\"text-xs\">\n            {props.educationCategoryDetails.description}\n          </span>\n        </div>\n        <div className=\"px-1 py-1 rounded-full flex items-center justify-center cursor-pointer text-blue-600 bg-blue-100 hover:bg-white hover:text-blue-800\">\n          {levelsDropDown === false ? (\n            <FiChevronRight className=\"text-2xl\" />\n          ) : (\n            <FiChevronDown className=\"text-2xl\" />\n          )}\n        </div>\n      </div>\n      {levelsDropDown === true && (\n        <div className=\"flex flex-col\">\n          <div\n            onClick={() => activateItem(levelsDropDown, props)}\n            className={`flex flex-row justify-between items-center py-2 px-2 bg-blue-50 rounded cursor-pointer hover:bg-blue-50 mb-2 ml-5 border ${\n              props.searchLevel !== null &&\n              props.searchLevel.educationCategory !== null &&\n              props.searchLevel.educationCategory.education_institute_id ===\n                props.educationCategoryDetails.education_institute_id &&\n              props.searchLevel.schoolLevel === null\n                ? \"border-blue-500\"\n                : \"border-blue-100\"\n            } hover:border-blue-500`}\n          >\n            <div className=\"flex flex-col pl-1\">\n              <span className=\"text-blue-700 text-sm font-bold\">\n                All levels\n              </span>\n            </div>\n          </div>\n          {/* {console.log(\"Institute: \", props.educationCategoryDetails)} */}\n          {props.schoolLevels === null\n            ? \"Loading...\"\n            : props.schoolLevels.length === 0\n            ? \"No levels found\"\n            : props.schoolLevels.map(\n                (item, i) =>\n                  item.education_institute.find(\n                    (itm) =>\n                      itm ===\n                      props.educationCategoryDetails.education_institute_id\n                  ) && (\n                    <div\n                      onClick={() =>\n                        activateLevelItem(props.educationCategoryDetails, item)\n                      }\n                      key={i + 1}\n                      className={`flex flex-row justify-between items-center py-2 px-2 bg-blue-50 rounded cursor-pointer hover:bg-blue-50 mb-2 ml-5 border ${\n                        props.searchLevel !== null &&\n                        props.searchLevel.schoolLevel !== null &&\n                        props.searchLevel.schoolLevel === item &&\n                        props.searchLevel.educationCategory !== null &&\n                        props.searchLevel.educationCategory\n                          .education_institute_id ===\n                          props.educationCategoryDetails.education_institute_id\n                          ? \"border-blue-500\"\n                          : \"border-blue-100\"\n                      } hover:border-blue-500`}\n                    >\n                      <div className=\"flex flex-col pl-1\">\n                        <span className=\"text-blue-700 text-sm font-bold\">\n                          {item.school_level_name}\n                        </span>\n                      </div>\n                    </div>\n                  )\n              )}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default SchoolLevelsItem;\n","import SchoolLevelsItem from './SchoolLevelsItem'\nimport * as Interfaces from '../../../../interfaces/index';\nimport { searchItem } from '../ApplicationPositions';\nimport Loading from '../../../../components/Loading/Loading';\n\ninterface SchoolLevelsFilterPropsInterface {\n  educationCategories: Interfaces.education_category[] | null;\n  schoolLevels: Interfaces.school_level[] | null;\n  searchLevel: searchItem | null;\n  setSearchLevel: (educationCategory: Interfaces.education_category | null, schoolLevel: Interfaces.school_level | null) => void\n  setSchoolLevelFilterFn: (status: boolean) => void;\n}\n\nconst SchoolLevelsFilter = (props: SchoolLevelsFilterPropsInterface) => {\n  return (\n    <div className=\"col-span-12 md:col-span-4 md:static w-full top-2\">\n      <div className=\"bg-white shadow rounded-sm px-2 py-2\">\n        {console.log(props.educationCategories)}\n        {props.educationCategories === null ? <Loading /> :\n        props.educationCategories.length === 0 ? \"No Education categories available\" :\n        props.educationCategories.map((item, i) => (\n          <SchoolLevelsItem \n            key={i + 1} educationCategoryDetails={item} \n            schoolLevels={props.schoolLevels}\n            searchLevel={props.searchLevel}\n            setSearchLevel={props.setSearchLevel}\n            />\n        ))}\n      </div>\n    </div>\n  )\n}\n\nexport default SchoolLevelsFilter\n","import React from \"react\";\nimport Chart from \"react-apexcharts\";\n\ntype chartType = {\n  options: {\n    labels: string[];\n    legend?: ApexLegend;\n    plotOptions?: ApexPlotOptions;\n    colors?: any[];\n  };\n  series: number[];\n  width?: number;\n};\n\nconst PieChart: React.FC<chartType> = (props) => {\n  return (\n    <div className=\"donut\">\n      <Chart\n        options={props.options}\n        series={props.series}\n        type=\"donut\"\n        width={`${props.width ? props.width : \"380\"}`}\n      />\n    </div>\n  );\n};\n\nexport default React.memo(PieChart);\n","import React, { FC } from \"react\";\nimport { IconType } from \"react-icons\";\nimport { FaUsers } from \"react-icons/fa\";\nimport { toAnyDigit } from \"../../shared/dataTest\";\n\nexport type DashboardLabelItemInterface = {\n  // TITLE: Application or Exam or Shortlisted ....\n  title: string;\n  // ICON: FaExpand ....\n  icon: IconType;\n  // ICON COLOR: blue, indigo, gray ....\n  iconColor: string;\n  // COUNT: 0,1,2,3,5,23,563 ....\n  count: number;\n  // COUNT: 0,1,2,3,5,23,563 ....\n  countOver?: number;\n};\n\nconst DashboardLabelItem: FC<DashboardLabelItemInterface> = (\n  props = {\n    title: \"\",\n    icon: FaUsers,\n    iconColor: \"indigo\",\n    count: 0,\n    countOver: undefined,\n  }\n) => {\n  const IconDefined = props.icon;\n  return (\n    <div className=\"flex items-center px-6 py-4 bg-white w-full rounded-md space-x-2 mb-2 lg:mb-0 shadow-md\">\n      <div\n        className={`p-3 rounded-full bg-${props.iconColor}-200 bg-opacity-75`}\n      >\n        <IconDefined className={`h-8 w-8 text-${props.iconColor}-600`} />\n      </div>\n      <div>\n        <h1 className=\"text-3xl font-semibold text-gray-700\">\n          {toAnyDigit(props.count)}{\" \"}\n          {props.countOver && \"/ \" + toAnyDigit(props.countOver)}\n        </h1>\n        <span className=\"text-gray-500 text-lg\">{props.title}</span>\n      </div>\n    </div>\n  );\n};\n\nexport default React.memo(DashboardLabelItem);\n"],"sourceRoot":""}
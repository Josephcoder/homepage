{"version":3,"sources":["containers/Admin/CenterReport/CenterReport.tsx","components/Navigation/SideNavigation.tsx","actions/users.ts","containers/SessionSettings/NoSession.tsx","containers/Admin/ExamReport/DoneExamList.tsx","components/Loading/TableLoading.tsx","containers/AdminDashboard/ChartComponents/VBarChart.tsx","containers/Admin/ExamReport/ExamReport.tsx","containers/Admin/ExamReport/CandiadtePerformancePerDistrict.tsx","containers/Admin/ExamReport/ExamPerformancePerDistrict.tsx","containers/Admin/ExamReport/ExamReportFilters.tsx","containers/Admin/ExamReport/ExamReportTitle.tsx","utils/ExportToExcel.tsx","utils/mineduc.png","components/DownloadPDF/rest.tsx","actions/schools.ts","containers/UserManagement/UserList.tsx","containers/UserManagement/RoleList.tsx","containers/UserManagement/UserRole.tsx","shared/blank_profile.png","containers/SessionSettings/ChooseSession.tsx","containers/Admin/ExamReport/CandidatePerformance.tsx","containers/Admin/ExamReport/ExamList.tsx","containers/Admin/ExamReport/ExamReportModals.tsx","containers/AdminDashboard/ChartComponents/PieChart.tsx","containers/UserManagement/UserAccess.tsx","containers/AdminDashboard/DashboardLabelItem.tsx","containers/Admin/ExamReport/ExamPerformance.tsx","containers/AdminDashboard/ExamDashboard/ExamDashboardLabels.tsx","containers/Locations/ViewDistricts.tsx","containers/Locations/ViewProvince.tsx","containers/Locations/ViewSectors.tsx","containers/Locations/Locations.tsx","containers/AdminDashboard/ExamDashboard/ExamDashboardTitle.tsx","containers/AdminDashboard/ExamDashboard/ExamPreparationChart.tsx","containers/AdminDashboard/ExamDashboard/ExamProgressChart.tsx","containers/AdminDashboard/ExamDashboard/ExamPerformanceChart.tsx","containers/AdminDashboard/ExamDashboard/ExamDashboard.tsx","interfaces/center_report.ts","interfaces/user_by_type.ts","containers/Admin/CenterReport/DistrictList.tsx"],"names":["centerReportTitleType","defaultReportContent","key","centerReportContentKeyInterface","district_name","title","status","center_name","room_number","room_type","room_capacity","room_occupation","invigilator","index","props","setLoading","setState","loading","setSelectAll","selectAll","setSelectSession","selectSession","setSelectedReportTitle","thisTitle","selectedReportTitle","setReportTitle","reportTitle","setSelectedSession","thisSession","selectedSession","setDefaultReport","thisReport","ROOM_INVIGILATOR","ROOM_OCCUPATION","setFormError","data","formError","loadReportMainData","a","axios","get","API","APPLICATION","session_plan_id","res","reportMainData","console","error","reportMainData_error","PushPopupAlert","errorToText","theme","PopupAlertTheme","danger","loadInvigilator","callback","AUTH","UserByTypeKeys","INVIGILATOR","invigilatorData","invigilatorData_error","setSortOrder","thisOrder","sortOrder","setSortProperty","thisProperty","sortProperty","setIsSorted","isSorted","setGenerateReportModal","generateReportModal","loadExamData","courses","length","loadCourses","loadingExam","examsList","loadExamsList","componentDidMount","match","params","defaultReportType","state","sessionPlan","allSessionPlans","GetAllSessionPlans","errorMsg","sessionData","isEmptyOrSpaces","warning","activeSession","find","item","is_active","FC_FilterReportData","allData","district_id","center_id","course_id","result","filter","thisData","_result","check","course_in_room","course","occupied","push","updateContentToPrint","selectedDistrict","selectedExam","course_name","course_code","session_plan_name","arrayNew","n","reportDataResult","roomWithOccupation","Object","prototype","hasOwnProperty","call","dataArray","no","capitalizeFirstLetter","capacity","reportContentExport","centerToPrint","updateReportContent","findIndex","newArray","isChangeAllowed","resetReportContent","currentState","setDownloading","downloading","FC_GeneratePDF","document","querySelectorAll","table","getElementById","reportSettings","doneBy","auth","user","fname","lname","subjectTitle","subject","period","footer","institute","generatePDF","setSort","searchData","objList","text","undefined","product","flag","prop","toString","toLowerCase","indexOf","setChooseDistrict","chooseDistrict","setSelectedDistrict","searchInput","searchExamInput","chooseExam","this","className","onClick","disabled","reportType","onChange","e","target","value","type","placeholder","id","cols","colSpan","sortThisArray","map","i","backDrop","Themes","default","close","backDropClose","widthSizeClass","ModalSize","medium","displayClose","padding","element","msg","fileData","fileName","btnName","extraLarge","allSession","chooseAll","currentSelected","districtList","getDistrictInRoom","loadindRequest","isModal","FC_reportExamList","searchExamList","Component","CenterReport","connect","prepareExam","_SideNavigation","PageHasSubNav","componentWillUnmount","isAuthenticated","navActive","system","navigation","children","React","SideNavigation","NavToogle","MainItem","icon","MdBrightness1","active","count","IconDefined","documentValidationStatus","userPageLimit","fetchUserAccess","page","dispatch","setAxiosToken","log","ActionTypes","FETCH_USERS_ACCESS","payload","users","next","previous","total_users","user_error","blockUserToSystem","user_id","BLOCK_USER_TO_SYSTEM","unBlockUserToSystem","UNBLOCK_USER_TO_SYSTEM","assignRoleToUserAccess","ASSIGN_ROLE_TO_USER","customizeUserAccess","CUSTOMIZE_USER_ACCESS","resetUserAccess","RESET_USER_ACCESS","NoSession","ExaminationProgressReportContentKeyInterface","examinationProgressIsChangeAllowed","COURSER_NAME","COURSE_CODE","PERIOD","STATUS","defaultExaminationProgressContent","SCHOOL_LEVEL","DATE","TIME","DURATION","displayStatus","FC_reportDoneExamList","allCourses","allExams","doneExams","ids","includes","courser","doneExam","description","school_levels","exam","preparation_status","exam_status","FC_reportDoneExamListFilter","thisList","thisValue","searchExamData","DoneExamList","useState","setSearchInput","courseListData","examsListData","doneExamsData","filterExamProgress","exam_date","start_time","duration","getPeriodById","thisPeriod","memo","TableLoading","displayCols","colsArray","defaultBar","borderRadius","horizontal","columnWidth","endingShape","VBarChart","chart","events","dataPointSelection","event","chartContext","config","labelClicked","w","labels","dataPointIndex","FC_LoadSelected","seriesIndex","stacked","plotOptions","bar","dataLabels","enabled","xaxis","rotate","categories","categoriesLabel","tickPlacement","yaxis","yaxisText","fill","opacity","tooltip","y","formatter","val","tooltipText","grid","left","right","noData","align","verticalAlign","options","setOptions","useEffect","colors","chartClicked","zoom","autoScaleYaxis","series","width","height","chartHeight","reportTitleType","FC_CandiadtePerformancePerDistrictFilter","dataList","swap","exam_stastus","exam_location","j","user_total_marks","adminExamReport","candidatePerformanceData","FC_reportCandidatePerformanceData","reportCourseId","reportDistrictId","filterApplicantPerformance","Loading","searchCandidatePerformanceData","slice","controlRowsByStatus","user_name","national_id","user_email","user_phone","timestampToDate","timeAMPM","end_time","ReportUserExamStatus","Editing","Number","toFixed","FC_ExamPerformancePerDistrictPropsData","examsData","pass","failed","exam_ids","toLocaleLowerCase","_marks","candidatesByExam","_key","total_marks","user_status","pass_applicant","failed_applicant","applicants","NoResult","NoResultThemes","Dark","search","ExamReportFilters","EXAM_PERFORMANCE","EXAM_DISTRICT_PERFORMANCE","EXAM_PREPARATION","setFilterPreparation","filterPreparation","EXAMINATION_PROGRESS","setFilterExamProgress","APPLICANTS_PERFORMANCE","APPLICANTS_DISTRICT_PERFORMANCE","setFilterApplicantPerformance","values","schoolLevels","SetReportDistrictId","changeReport","setChangeReport","districtModal","setDistrictModal","excelModal","setExcelModal","courseModal","setCourseModal","dataToPrint","updateExamToPrint","downlaodPDF","ExamReportModals","modalFor","ModalForTypes","modalState","changeModalState","excelReportTitle","setExcelReportTitle","examsToPrint","examPreparationReportContent","setExamPreparationReportContent","examPerformanceToPrint","examPerformanceReportContent","setExamPerformanceReportContent","exam30PerformanceToPrint","exam30PerformanceReportContent","setExam30PerformanceReportContent","examinationProgressToPrint","examinationProgressReportContent","setExaminationProgressExamPerformanceReportContent","candidateExamPerformanceToPrint","candidateExamPerformanceReportContent","setCandidateExamPerformanceReportContent","candidate30ExamPerformanceToPrint","candidate30ExamPerformanceReportContent","setCandidate30ExamPerformanceReportContent","choose_district","districtId","loadExaminationProgress","DoneExam","selectedEducationCategory","choose_exam","AllExamData","finished","thisExam","getExamByCourseId","periods","period_id","loadAllExams","selected_period","_ExamReport","setLoadingCourses","loadingCourses","setLoadingExams","loadingExams","setLoadingDoneExam","loadingDoneExam","setLoadingCandidatesExamPerformance","loadingCandidatesExamPerformance","setLoadingExamPerformance","loadingExamPerformance","setLoadingSettings","loadingSettings","setSelectPeriod","selectPeriod","setSelectedPeriod","setExamsToPrint","setExamPerformanceToPrint","setExam30PerformanceToPrint","setExaminationProgressToPrint","setCandidateExamPerformanceToPrint","setCandidate30ExamPerformanceToPrint","selectDefaultSession","active_period","education_categories","loadEducationCategories","setSelectedEducationCategory","loadSchoolLevels","application_session","loadDoneExam","CandidatesExamPerformance","loadCandidatesExamPerformance","order","sortBy","ReportGetCandidatePerformanceSortTypes","ExamPerformance","loadPerfomranceExam","onPeriodChange","getLevelbyId","level_id","school_level_id","getCourses","search_all","forEach","level","levelDetail","education_institute","education_institute_id","school_level","findLevel","school_level_name","exam_period","exam_time","exam_duration","FC_reportExamPerformanceData","exam_performance","applicant_id","exam_start_time","exam_end_time","performance_status","applicant_name","email","phone","marks","addToTitle","education_category_title","orientation","defaultExamPreparationReportContent","defaultExamPerformanceContent","defaultCandidateExamPerformanceContent","ExamList","examsPerformanceData","thisDistrict","Light","component","CandidatePerformance","applicationPeriods","ExamReport","ExportToExcel","showIcon","apiData","wb","Sheets","XLSX","json_to_sheet","SheetNames","excelBuffer","bookType","Blob","FileSaver","exportToCSV","require","addFooters","doc","pageCount","internal","getNumberOfPages","setFont","setFontSize","setPage","String","pageSize","callBack","lMargin","jsPDF","setTextColor","addImage","Logo","getWidth","lines","splitTextToSize","pdfInMM","getTextWidth","addPage","autoTable","html","startY","margin","cellPadding","rowHeight","bodyStyles","valign","columnStyles","cellWidth","tableWidth","finalY","lastAutoTable","Date","save","returnPromise","then","getSchools","GET_SCHOOLS","getSchoolById","schoolId","GET_SCHOOLS_BY_ID","createSchool","schools","CREATE_SCHOOL","updateSchool","UPDATE_SCHOOL","deleteSchool","DELETE_SCHOOL","fetchSchoolPosts","school_id","PLACEMENT","schoolPosts","FETCH_SCHOOL_POSTS","getSchoolPlacement","GET_SCHOOL_PLACEMENT","createSchoolPost","CREATE_SCHOOL_POST","updateSchoolPost","TYPE","UPDATE_SCHOOL_POST","fetchDistrictPosts","FETCH_DISTRICT_POSTS","getDistrictPlacement","GET_DISTRICT_PLACEMENT","getInstitutePlacementLimit","institute_id","session_id","GET_INSTITUTE_PLACEMENT_LIMIT","getDistrictPlacementLimit","GET_DISTRICT_PLACEMENT_LIMIT","updateInstitutePlacementLimit","UPDATE_INSTITUTE_PLACEMENT_LIMIT","ModalState","RoleList","roleList","setChooseRole","role","handleSelectRole","system_user_role_id","UserRole","setRoleId","roleId","setSelectedRole","selectedRole","setProvinceId","provinceId","setDistrictId","setCenterId","centerId","setRoomId","roomId","setLoadingForm","loadingForm","setSchoolId","setChooseSchool","chooseSchool","setInstituteId","instituteId","setLoadingRequest","loadingRequest","chooseRole","setDefaultState","default_access","LOAD_province","LOAD_district","district_required","roomList","distinctDistrict","_id","province_id","room_required","LocationsInArray","room_id","school_required","schoolList","LOAD_school","userInfo","vvvvv","role_id","tableData","access","task","permitted","create","view","update","delete","Math","random","assignRoleToUser","preventDefault","window","confirm","education_institution_required","formData","education_institution_id","post","currentPage","setChangeRole","success","role_error","location","districts","keyDistrict","distinctCenter","rooms","distinctRoom","onSubmit","province","province_name","district","school","school_name","center","room","room_name","Table","columns","columnTitle","alignText","rows","pagination","searchBG","thColor","tableId","getUserById","userId","LocationData","locationTemp","p","d","centers","c","r","UserList","setManageUserId","manageUserId","setLoadingSchool","loadingSchool","setLoadingRequestType","loadingRequestType","setRoomList","setRoomTables","roomTable","setCurrentAccess","currentAccess","setSchoolList","setUserAccess","userAccess","allRoom","getAllRoom","loadingUser","setManageUser","user_info","sex","getRoleById","blockUser","actionType","patch","info","blockUser_ERROR","restUserAccess","resetedAccess","reseting_user_access","manageUser","src","photo","profile","alt","getInstituteById","n_id","phone_number","custome_access","changeRole","UserAccess","locations","roomLocation","isPlansActive","plans","today","activePlans","plan","startDate","start_date","endDate","end_date","getTime","type_status","SessionPlanTypeStatus","OPEN","ChooseSession","searched","selectedPlan","setSelectedPlan","setSearch","itm","type_key","type_title","CandidateExamPerformanceReportContentKeyInterface","candidateExamPerformanceIsChangeAllowed","APPLICANT","N_ID","EMAIL","PHONE","MARKS","START_TIME","END_TIME","FC_reportCandidatePerformanceDataFilter","examPreparationReportContentKeyInterface","examPreparationIsChangeAllowed","FC_reportExamListFilter","thisStatus","createdAt","FC_DistinctDistrict","flags","output","l","SetReportCourseId","loadingLocation","setLoadingLocation","setError","examPerformanceIsChangeAllowed","updateExamPerformanceReportContent","isSelectAllNeeded","updateCandidateExamPerformanceReportContent","showGenerateBtn","updateExamPreparationReportContent","updateExaminationProgressReportContent","isAllDistrictAllowed","selectDistrict","PieChart","_UserAccess","setViewPermission","viewPermission","setLoadindRequest","setCreatePermission","createPermission","setUpdatePermission","updatePermission","setDeletePermission","deletePermission","setLoadind","overrideUserAccess","overideAccess","findCustom","custom","handleCustomization","custome_user_access_id","customize_access","to","checked","DashboardLabelItem","FaUsers","iconColor","countOver","toAnyDigit","examPerformanceReportContentKeyInterface","PERFORMANCE","examPerformance","answer_sheet_id","Fragment","ExamDashboardLabels","numCols","labelsOnRow","childrenPosition","FC_CreateDistrict","FC_UpdateDistrict","FC_DeleteDistrict","districtName","setDistrictName","districtCode","setDistrictCode","handleSubmit","actionTypes","thisProvince","province_code","district_code","sectors","setActionTypes","setThisDistrict","doc_category_error","Modal","body","FC_CreateProvince","FC_UpdateProvince","FC_DeleteProvince","provinceTitle","setProvinceTitle","provinceCode","setProvinceCode","updated","setThisProvince","province_error","FC_CreateSector","FC_UpdateSector","FC_DeleteSector","sectorName","setSectorName","sectorCode","setSectorCode","sector_name","sector_code","sector_id","thisSector","setThisSector","sector_error","handleDelete","sectorId","district_error","sector","Locations","ViewDistricts","ExamDashboardTitle","education","loadingEducation","thisEducation","setThisEducation","setThisPeriod","application_sessions","session","ExamPreparationChart","name","examPreparationProgress","remaining","ExamProgressChart","progressData","ExamPerformanceChart","loadCoursesByInstitute","courseList","defaultValue","completeExams","remainingExams","dataFound","all","loadExamPreparationProgress","isDatePast","dateParam","date","moment","format","todayDate","pastDate","diff","loadExamAttendance","applicantList","_ExamDashboard","setChangingPeriod","changingPeriod","loadByPeriods","sessions","action","FaBookOpen","legend","show","position","horizontalAlign","fontSize","itemMargin","vertical","pie","donut","color","offsetY","fontFamily","total","label","globals","seriesTotals","reduce","b","ExamDashboard","invigilators","thisRoom","getRoomOccupation","roles_to_users","isUsed","invigilatorReportContentKeyInterface","DistrictList","bgWhite"],"mappings":"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","file":"static/js/23.e504653e.chunk.js","sourcesContent":["import axios from \"axios\";\nimport React, { Component, Fragment } from \"react\";\nimport { BiExport, BiSort } from \"react-icons/bi\";\nimport { CgFileDocument } from \"react-icons/cg\";\nimport { FiEdit } from \"react-icons/fi\";\nimport { ImFilesEmpty } from \"react-icons/im\";\nimport {\n  MdCheckBox,\n  MdCheckBoxOutlineBlank,\n  MdHistory,\n  MdLocationCity,\n} from \"react-icons/md\";\nimport { connect } from \"react-redux\";\nimport { RouteComponentProps } from \"react-router\";\nimport {\n  Auth,\n  loadCourses,\n  loadExamsList,\n  PushPopupAlert,\n} from \"../../../actions\";\nimport { GetAllSessionPlans } from \"../../../actions/session\";\nimport { PopupAlertData } from \"../../../components/Alert/Popup\";\nimport {\n  generatePDF,\n  reportSettingsInterface,\n} from \"../../../components/DownloadPDF/rest\";\nimport Loading from \"../../../components/Loading/Loading\";\nimport TableLoading from \"../../../components/Loading/TableLoading\";\nimport Modal, { ModalSize, Themes } from \"../../../components/Modal/Modal\";\nimport { SideNavigation } from \"../../../components/Navigation/SideNavigation\";\nimport { SessionPlanInterface, course } from \"../../../interfaces\";\nimport {\n  centerReportContentInterface,\n  centerReportContentKeyInterface,\n  centerReportInterface,\n  centerReportInterface_NEW,\n  CenterToPrintInterface,\n  getDistrictInRoom,\n  roomDistrictInterface,\n  roomWithOccupation,\n} from \"../../../interfaces/center_report\";\nimport { PopupAlertTheme } from \"../../../interfaces/popupAlert\";\nimport { ExamItemResponse } from \"../../../interfaces/prepare_exam\";\nimport {\n  UserByTypeInterfaceAPI,\n  UserByTypeKeys,\n} from \"../../../interfaces/user_by_type\";\nimport { StoreState } from \"../../../reducers\";\nimport { SessionPlanReducerInterface } from \"../../../reducers/session\";\nimport {\n  capitalizeFirstLetter,\n  isEmptyOrSpaces,\n} from \"../../../shared/dataTest\";\nimport { API } from \"../../../utils/api\";\nimport ExportToExcel from \"../../../utils/ExportToExcel\";\nimport { errorToText, sortThisArray } from \"../../../utils/functions\";\nimport ChooseSession from \"../../SessionSettings/ChooseSession\";\nimport NoSession from \"../../SessionSettings/NoSession\";\nimport {\n  examPreparationStateInterface,\n  FC_reportExamList,\n  searchExamList,\n} from \"../ExamReport/ExamList\";\nimport DistrictList from \"./DistrictList\";\n\n// TYPES OF REPORTS ======================================\nexport enum centerReportTitleType {\n  ROOM_OCCUPATION = \"Room occupation report\", // Add course if needed (on course)\n  ROOM_INVIGILATOR = \"Room with invigilator report\",\n}\n\nconst defaultReportContent: centerReportContentInterface[] = [\n  {\n    key: centerReportContentKeyInterface.district_name,\n    title: \"District name\",\n    status: true,\n  },\n  {\n    key: centerReportContentKeyInterface.center_name,\n    title: \"Center name\",\n    status: true,\n  },\n  {\n    key: centerReportContentKeyInterface.room_number,\n    title: \"Room number\",\n    status: true,\n  },\n  {\n    key: centerReportContentKeyInterface.room_type,\n    title: \"Room type\",\n    status: true,\n  },\n  {\n    key: centerReportContentKeyInterface.room_capacity,\n    title: \"Room capacity\",\n    status: true,\n  },\n  {\n    key: centerReportContentKeyInterface.room_occupation,\n    title: \"Room occupation\",\n    status: true,\n  },\n  {\n    key: centerReportContentKeyInterface.invigilator,\n    title: \"Invigilator\",\n    status: true,\n  },\n];\n\ninterface MatchParams {\n  defaultReportType?: string;\n}\n\ninterface CenterReportProps {\n  //   REDUX ############################\n  auth: Auth;\n  sessionPlan: SessionPlanReducerInterface;\n  courses: course[] | null;\n  examsList: ExamItemResponse[] | null;\n  GetAllSessionPlans: Function;\n  loadCourses: Function;\n  loadExamsList: Function;\n  PushPopupAlert: (alert: PopupAlertData) => void;\n}\n\ninterface CenterReportState {\n  loading: boolean;\n  loadingExam: boolean;\n  selectSession: boolean;\n  selectAll: boolean;\n  selectedReportTitle: centerReportTitleType;\n  selectedSession: SessionPlanInterface | null;\n  reportMainData: centerReportInterface[] | null;\n  reportContentExport: centerReportContentInterface[];\n  reportTitle: string;\n  centerToPrint: CenterToPrintInterface[] | null;\n  sortProperty: string;\n  isSorted: boolean;\n  sortOrder: \"ASC\" | \"DESC\";\n  searchInput: string;\n  searchExamInput: string;\n  generateReportModal: {\n    reportType: \"EXCEL\" | \"PDF\";\n    status: boolean;\n  } | null;\n  formError: {\n    element: string;\n    msg: string;\n  } | null;\n  selectedDistrict: roomDistrictInterface | \"all\";\n  chooseDistrict: boolean;\n  selectedExam: examPreparationStateInterface | \"all\";\n  chooseExam: boolean;\n  downloading: boolean;\n  invigilatorData: UserByTypeInterfaceAPI[] | null;\n}\n\nclass index extends Component<\n  CenterReportProps & RouteComponentProps<MatchParams>,\n  CenterReportState\n> {\n  constructor(props: any) {\n    super(props);\n    this.state = {\n      loading: true,\n      loadingExam: true,\n      selectSession: false,\n      selectedReportTitle: centerReportTitleType.ROOM_OCCUPATION,\n      selectedSession: null,\n      reportMainData: null,\n      reportContentExport: defaultReportContent,\n      selectAll: true,\n      reportTitle: \"\",\n      centerToPrint: null,\n      sortProperty: \"\",\n      isSorted: false,\n      sortOrder: \"ASC\",\n      searchInput: \"\",\n      searchExamInput: \"\",\n      generateReportModal: null,\n      formError: null,\n      selectedDistrict: \"all\",\n      chooseDistrict: false,\n      downloading: false,\n      chooseExam: false,\n      selectedExam: \"all\",\n      invigilatorData: null,\n    };\n  }\n\n  setLoading = (status: boolean) => {\n    this.setState({ loading: status });\n  };\n\n  setSelectAll = (status: boolean) => {\n    this.setState({ selectAll: status });\n  };\n\n  setSelectSession = (status: boolean) => {\n    this.setState({ selectSession: status });\n  };\n\n  setSelectedReportTitle = (thisTitle: centerReportTitleType) => {\n    this.setState({ selectedReportTitle: thisTitle });\n  };\n\n  setReportTitle = (thisTitle: string) => {\n    this.setState({ reportTitle: thisTitle });\n  };\n\n  setSelectedSession = (thisSession: SessionPlanInterface) => {\n    this.setState({ selectedSession: thisSession });\n  };\n\n  setDefaultReport = (thisReport?: string) => {\n    if (thisReport && thisReport === \"invigilator\") {\n      return this.setState({\n        selectedReportTitle: centerReportTitleType.ROOM_INVIGILATOR,\n      });\n    }\n    return this.setState({\n      selectedReportTitle: centerReportTitleType.ROOM_OCCUPATION,\n    });\n  };\n\n  setFormError = (\n    data: {\n      element: string;\n      msg: string;\n    } | null\n  ) => {\n    this.setState({ formError: data });\n  };\n\n  loadReportMainData = async (thisSession: SessionPlanInterface) => {\n    try {\n      const res = await axios.get<centerReportInterface[]>(\n        `${API.APPLICATION}/currentroomoccupation/${thisSession.session_plan_id}`\n      );\n      this.setState({ reportMainData: res.data });\n    } catch (error) {\n      console.error({ reportMainData_error: error });\n      // callback(false, errorToText(error));\n      this.props.PushPopupAlert({\n        title: errorToText(error),\n        theme: PopupAlertTheme.danger,\n      });\n    }\n  };\n\n  loadInvigilator = async (callback: Function) => {\n    callback(true);\n    try {\n      const res = await axios.get<UserByTypeInterfaceAPI[]>(\n        `${API.AUTH}/userbytype/${UserByTypeKeys.INVIGILATOR}`\n      );\n      this.setState({ invigilatorData: res.data });\n      callback(false);\n    } catch (error) {\n      console.error({ invigilatorData_error: error });\n      // callback(false, errorToText(error));\n      this.props.PushPopupAlert({\n        title: errorToText(error),\n        theme: PopupAlertTheme.danger,\n      });\n    }\n  };\n\n  setSortOrder = (thisOrder: \"ASC\" | \"DESC\") => {\n    this.setState({ sortOrder: thisOrder });\n  };\n\n  setSortProperty = (thisProperty: string) => {\n    this.setState({ sortProperty: thisProperty });\n  };\n\n  setIsSorted = (status: boolean) => {\n    this.setState({ isSorted: status });\n  };\n\n  setGenerateReportModal = (\n    data: {\n      reportType: \"EXCEL\" | \"PDF\";\n      status: boolean;\n    } | null\n  ) => {\n    this.setState({ generateReportModal: data });\n  };\n\n  loadExamData = () => {\n    if (this.props.courses === null || this.props.courses.length === 0) {\n      this.props.loadCourses((status: boolean) => {\n        this.setState({ loadingExam: status });\n      });\n    } else {\n      this.setState({ loadingExam: false });\n    }\n\n    if (this.props.examsList === null || this.props.examsList.length === 0) {\n      this.props.loadExamsList((status: boolean) => {\n        this.setState({ loadingExam: status });\n      });\n    } else {\n      this.setState({ loadingExam: false });\n    }\n  };\n\n  componentDidMount = () => {\n    this.setDefaultReport(this.props.match.params.defaultReportType);\n\n    if (this.state.invigilatorData === null) {\n      this.loadInvigilator(this.setLoading);\n    }\n\n    if (this.props.sessionPlan.allSessionPlans === null) {\n      this.props.GetAllSessionPlans(\n        (\n          status: boolean,\n          errorMsg: string,\n          sessionData: SessionPlanInterface[]\n        ) => {\n          this.setLoading(status);\n          if (!status) {\n            if (!isEmptyOrSpaces(errorMsg)) {\n              this.props.PushPopupAlert({\n                title: errorMsg,\n                theme: PopupAlertTheme.warning,\n              });\n            }\n\n            if (sessionData && sessionData.length > 0) {\n              let activeSession = sessionData.find((item) => item.is_active);\n              if (activeSession) {\n                this.setSelectedSession(activeSession);\n                if (this.state.reportMainData === null) {\n                  this.loadReportMainData(activeSession);\n                }\n              } else {\n                this.setSelectedSession(sessionData[sessionData.length - 1]);\n                if (this.state.reportMainData === null) {\n                  this.loadReportMainData(sessionData[sessionData.length - 1]);\n                }\n              }\n            }\n          }\n        }\n      );\n    } else {\n      if (this.props.sessionPlan.allSessionPlans.length > 0) {\n        let activeSession = this.props.sessionPlan.allSessionPlans.find(\n          (item) => item.is_active\n        );\n        if (activeSession) {\n          this.setSelectedSession(activeSession);\n          if (this.state.reportMainData === null) {\n            this.loadReportMainData(activeSession);\n          }\n        } else {\n          this.setSelectedSession(\n            this.props.sessionPlan.allSessionPlans[\n              this.props.sessionPlan.allSessionPlans.length - 1\n            ]\n          );\n          if (this.state.reportMainData === null) {\n            this.loadReportMainData(\n              this.props.sessionPlan.allSessionPlans[\n                this.props.sessionPlan.allSessionPlans.length - 1\n              ]\n            );\n          }\n        }\n        this.setLoading(false);\n      }\n    }\n\n    this.loadExamData();\n  };\n\n  FC_FilterReportData = (\n    allData: centerReportInterface_NEW[],\n    district_id: string | \"all\",\n    center_id: string | \"all\",\n    course_id: string | \"all\"\n  ): centerReportInterface_NEW[] => {\n    let result: centerReportInterface_NEW[] = allData;\n    if (district_id !== \"all\") {\n      result = result.filter((item) => item.district_id === district_id);\n    }\n    if (center_id !== \"all\") {\n      result = result.filter((item) => item.center_id === center_id);\n    }\n\n    if (course_id !== \"all\") {\n      let _result: centerReportInterface_NEW[] = [];\n      let thisData: centerReportInterface_NEW;\n      for (const key in result) {\n        let check = result[key].course_in_room.find(\n          (course) => course.course_id === course_id\n        );\n        if (check) {\n          thisData = result[key];\n          thisData.occupied = check.occupied;\n          _result.push(thisData);\n        } else {\n          thisData = result[key];\n          thisData.occupied = 0;\n          _result.push(thisData);\n        }\n      }\n      result = _result;\n    }\n\n    return result;\n  };\n\n  updateContentToPrint = () => {\n    // UPDATE REPORT TITLE ========================\n    if (this.state.selectedSession) {\n      let title = \"Room Report - \";\n      if (this.state.selectedDistrict !== \"all\") {\n        title =\n          title + this.state.selectedDistrict.district_name + \" district - \";\n      }\n\n      if (this.state.selectedExam !== \"all\") {\n        title =\n          title +\n          this.state.selectedExam.course_name +\n          \" (\" +\n          this.state.selectedExam.course_code +\n          \")\" +\n          \" - \";\n      }\n\n      title = title + this.state.selectedSession.session_plan_name;\n      this.setReportTitle(title);\n    }\n    // UPDATE CONTENT =============================\n    if (this.state.reportMainData && this.state.invigilatorData) {\n      let arrayNew: CenterToPrintInterface[] = [];\n      let n: number = 1;\n      const reportDataResult: centerReportInterface_NEW[] =\n        this.FC_FilterReportData(\n          roomWithOccupation(\n            this.state.reportMainData,\n            this.state.invigilatorData\n          ),\n          this.state.selectedDistrict === \"all\"\n            ? \"all\"\n            : this.state.selectedDistrict.district_id,\n          \"all\",\n          this.state.selectedExam === \"all\"\n            ? \"all\"\n            : this.state.selectedExam.course_id\n        );\n      for (const key in reportDataResult) {\n        if (Object.prototype.hasOwnProperty.call(reportDataResult, key)) {\n          let dataArray: CenterToPrintInterface | null = null;\n          dataArray = {\n            no: n,\n            district_name: reportDataResult[key].district_name,\n            center_name: reportDataResult[key].center_name,\n            room_number: reportDataResult[key].room_number,\n            room_type: capitalizeFirstLetter(reportDataResult[key].room_type),\n            room_capacity:\n              reportDataResult[key].room_type === \"Default\"\n                ? \"-\"\n                : reportDataResult[key].capacity,\n            room_occupation: reportDataResult[key].occupied,\n            invigilator: reportDataResult[key].invigilator,\n          };\n\n          for (const key in this.state.reportContentExport) {\n            if (\n              Object.prototype.hasOwnProperty.call(\n                this.state.reportContentExport,\n                key\n              )\n            ) {\n              if (!this.state.reportContentExport[key].status && dataArray) {\n                delete dataArray[this.state.reportContentExport[key].key];\n              }\n            }\n          }\n          dataArray && arrayNew.push(dataArray);\n          n++;\n        }\n      }\n      this.setState({ centerToPrint: arrayNew });\n      arrayNew = [];\n      n = 1;\n    }\n  };\n\n  updateReportContent = (key: centerReportContentKeyInterface) => {\n    let index: number = this.state.reportContentExport.findIndex(\n      (item) => item.key === key\n    );\n    let newArray: centerReportContentInterface[] =\n      this.state.reportContentExport;\n    newArray[index].status = !newArray[index].status;\n    this.setState({ reportContentExport: newArray });\n    let isSelectAllNeeded = newArray.find((item) => item.status === false);\n    if (isSelectAllNeeded) {\n      this.setSelectAll(false);\n    } else {\n      this.setSelectAll(true);\n    }\n\n    // UPDATE APPLICATION LIST FOR UPDATE ==============================\n    this.updateContentToPrint();\n  };\n\n  isChangeAllowed = (key: centerReportContentKeyInterface): boolean => {\n    if (\n      key === centerReportContentKeyInterface.center_name ||\n      key === centerReportContentKeyInterface.district_name ||\n      key === centerReportContentKeyInterface.room_number ||\n      key === centerReportContentKeyInterface.room_capacity ||\n      key === centerReportContentKeyInterface.room_occupation\n    ) {\n      return false;\n    }\n    return true;\n  };\n\n  resetReportContent = (currentState: boolean) => {\n    let newArray: centerReportContentInterface[] =\n      this.state.reportContentExport;\n    for (const key in newArray) {\n      if (this.isChangeAllowed(newArray[key].key)) {\n        newArray[key].status = !currentState;\n      }\n    }\n\n    this.setState({ reportContentExport: newArray });\n    this.setSelectAll(!currentState);\n    this.updateContentToPrint();\n  };\n\n  setDownloading = (status: boolean) => {\n    this.setState({ downloading: status });\n  };\n\n  FC_GeneratePDF = () => {\n    if (!document.querySelectorAll(\"#report_content tbody tr\").length) {\n      this.props.PushPopupAlert({\n        title: `Can't generate Report of empty Data`,\n        theme: PopupAlertTheme.warning,\n      });\n      return false;\n    }\n\n    if (this.state.selectedSession) {\n      const table: HTMLElement | null =\n        document.getElementById(\"report_content\");\n      const reportSettings: reportSettingsInterface = {\n        doneBy: this.props.auth.user.fname + \" \" + this.props.auth.user.lname,\n        title: \"Room Report\",\n        subjectTitle: \"Room occupation\",\n        subject: \"All room\",\n        period: this.state.selectedSession.session_plan_name,\n        footer: \"Online Recruitment\",\n        institute: \"All institute\",\n      };\n      table && generatePDF(reportSettings, table, this.setDownloading);\n    }\n  };\n\n  setSort = (thisProperty: string) => {\n    if (\n      this.state.sortProperty === thisProperty &&\n      this.state.sortOrder === \"ASC\"\n    ) {\n      this.setSortOrder(\"DESC\");\n    } else {\n      this.setSortOrder(\"ASC\");\n    }\n    this.setSortProperty(thisProperty);\n    this.setIsSorted(true);\n  };\n\n  searchData = (\n    objList: centerReportInterface_NEW[],\n    text: string\n  ): centerReportInterface_NEW[] => {\n    if (undefined === text || text === \"\") return objList;\n    return objList.filter((product) => {\n      let flag;\n      // let dataKeys = product;\n\n      for (let prop in product) {\n        flag = false;\n        if (\n          prop === \"center_name\" ||\n          prop === \"room_number\" ||\n          prop === \"district_name\" ||\n          prop === \"occupied\" ||\n          prop === \"capacity\" ||\n          prop === \"course_in_room\" ||\n          prop === \"invigilator\"\n        ) {\n          if (product[prop]) {\n            flag =\n              product[prop]!.toString()\n                .toLowerCase()\n                .indexOf(text.toLowerCase()) > -1;\n          }\n        }\n        if (flag) break;\n      }\n      return flag;\n    });\n  };\n\n  setChooseDistrict = (status: boolean) => {\n    this.setState({ chooseDistrict: status });\n  };\n\n  setSelectedDistrict = (data: roomDistrictInterface | \"all\") => {\n    this.setState({ selectedDistrict: data });\n  };\n\n  render() {\n    if (this.state.loading) {\n      return (\n        <div className=\"text-center mt-7 font-bold text-4xl text-gray-400 animate-pulse\">\n          Loading data...\n        </div>\n      );\n    }\n\n    if (\n      this.props.sessionPlan.allSessionPlans &&\n      this.props.sessionPlan.allSessionPlans.length === 0\n    ) {\n      return <NoSession />;\n    }\n\n    return (\n      <Fragment>\n        <SideNavigation>\n          <div className=\"\">\n            <div className=\"text-gray-600 text-sm mb-2\">Session:</div>\n            <div\n              onClick={() => this.setSelectSession(true)}\n              className=\"font-bold bg-blue-50 border border-blue-200 rounded py-2 cursor-pointer text-xs px-2 hover:underline justify-between text-blue-600  mb-4 w-full flex flex-row items-center animate__animated animate__zoomIn\"\n            >\n              {this.state.selectedSession !== null\n                ? `${this.state.selectedSession.session_plan_name}`\n                : \"Filter by session\"}\n              <FiEdit className=\"text-lg text-blue-600\" />\n            </div>\n          </div>\n\n          <div className=\"\">\n            <div className=\"text-gray-600 text-sm mb-2\">District:</div>\n            {this.state.reportMainData && (\n              <div\n                onClick={() => this.setChooseDistrict(true)}\n                className=\"font-bold bg-blue-50 border border-blue-200 rounded py-2 cursor-pointer text-xs px-2 hover:underline justify-between text-blue-600  mb-4 w-full flex flex-row items-center animate__animated animate__zoomIn\"\n              >\n                {this.state.selectedDistrict !== \"all\"\n                  ? `${this.state.selectedDistrict.district_name}`\n                  : \"All district\"}\n                <FiEdit className=\"text-lg text-blue-600\" />\n              </div>\n            )}\n          </div>\n\n          {this.state.loadingExam ? (\n            \"loaing\"\n          ) : (\n            <div className=\"\">\n              <div className=\"text-gray-600 text-sm mb-2\">Exam:</div>\n              {this.state.reportMainData && (\n                <div\n                  onClick={() => {\n                    this.setState({ chooseExam: true });\n                    // this.loadExamData();\n                  }}\n                  className=\"font-bold bg-blue-50 border border-blue-200 rounded py-2 cursor-pointer text-xs px-2 hover:underline justify-between text-blue-600  mb-4 w-full flex flex-row items-center animate__animated animate__zoomIn\"\n                >\n                  {this.state.selectedExam !== \"all\"\n                    ? `${this.state.selectedExam.course_name}`\n                    : \"All exam\"}\n                  <FiEdit className=\"text-lg text-blue-600\" />\n                </div>\n              )}\n            </div>\n          )}\n        </SideNavigation>\n\n        {/* BODY CONTENT--------------------------------- */}\n        <section>\n          {/* REPORT TITLE ============================================ */}\n          <div className=\"grid md:grid-cols-12\">\n            <div className=\"col-span-8\">\n              <div className=\"mt-4 mx-4 flex flex-col gap-1\">\n                <span className=\"text-3xl font-bold text-gray-700\">\n                  Room report\n                </span>\n              </div>\n            </div>\n            <div className=\"col-span-4\">\n              <div className=\"float-right mt-2\">\n                {this.state.reportMainData &&\n                  this.state.reportMainData.length > 0 && (\n                    <div className=\"flex flex-row items-center justify-end font-bold mb-2\">\n                      <BiExport className=\"text-2xl text-gray-500\" />\n                      <span className=\"text-gray-500\">Export as</span>\n                      <button\n                        className=\"px-4 py-1 ml-1 rounded bg-white border hover:text-blue-600 font-bold hover:bg-blue-50 border-gray-200\"\n                        disabled={\n                          this.state.reportMainData && !this.state.downloading\n                            ? false\n                            : true\n                        }\n                        onClick={() => {\n                          this.updateContentToPrint();\n                          this.setGenerateReportModal({\n                            reportType: \"EXCEL\",\n                            status: true,\n                          });\n                        }}\n                      >\n                        EXCEL\n                      </button>\n                      <button\n                        className={`px-4 py-1 ml-1 rounded bg-white border hover:text-blue-600 font-bold hover:bg-blue-50 border-gray-200 ${\n                          this.state.downloading && \"cursor-wait\"\n                        }`}\n                        onClick={() => this.FC_GeneratePDF()}\n                        disabled={this.state.reportMainData ? false : true}\n                      >\n                        PDF\n                      </button>\n                    </div>\n                  )}\n              </div>\n            </div>\n          </div>\n          {/* END REPORT TITLE ============================================ */}\n\n          {/* ######################################################## */}\n          <div className=\"bg-white my-4\">\n            <div className=\"w-full px-2 py-2\">\n              <input\n                onChange={(e) => this.setState({ searchInput: e.target.value })}\n                type=\"text\"\n                value={this.state.searchInput}\n                placeholder=\"Search...\"\n                className=\"w-full bg-gray-100 py-2 px-3 rounded focus:border-gray-800\"\n                disabled={\n                  this.state.reportMainData === null ||\n                  this.state.invigilatorData === null ||\n                  this.FC_FilterReportData(\n                    roomWithOccupation(\n                      this.state.reportMainData,\n                      this.state.invigilatorData\n                    ),\n                    this.state.selectedDistrict === \"all\"\n                      ? \"all\"\n                      : this.state.selectedDistrict.district_id,\n                    \"all\",\n                    this.state.selectedExam === \"all\"\n                      ? \"all\"\n                      : this.state.selectedExam.course_id\n                  ).length <= 0\n                }\n              />\n            </div>\n            <table className=\"w-full shadow\" id=\"report_content\">\n              <thead className=\"bg-white border-b-2 border-gray-300 text-gray-600 font-bold text-sm\">\n                <tr>\n                  <td className=\"px-2 py-2\">#</td>\n                  <td\n                    className=\"px-2 py-2 cursor-pointer\"\n                    onClick={() => this.setSort(\"district\")}\n                  >\n                    <div className=\"flex items-center gap-1\">\n                      District <BiSort />\n                    </div>\n                  </td>\n                  <td\n                    className=\"px-2 py-2 cursor-pointer\"\n                    onClick={() => this.setSort(\"center\")}\n                  >\n                    <div className=\"flex items-center gap-1\">\n                      Center <BiSort />\n                    </div>\n                  </td>\n                  <td\n                    className=\"px-2 py-2 cursor-pointer\"\n                    onClick={() => this.setSort(\"room_number\")}\n                  >\n                    <div className=\"flex items-center gap-1\">\n                      Room number <BiSort />\n                    </div>\n                  </td>\n                  <td\n                    className=\"px-2 py-2 cursor-pointer\"\n                    onClick={() => this.setSort(\"room_type\")}\n                  >\n                    <div className=\"flex items-center gap-1\">\n                      Room type <BiSort />\n                    </div>\n                  </td>\n                  <td\n                    className=\"px-2 py-2 cursor-pointer\"\n                    onClick={() => this.setSort(\"capacity\")}\n                  >\n                    <div className=\"flex items-center gap-1\">\n                      Room capacity <BiSort />\n                    </div>\n                  </td>\n                  <td\n                    className=\"px-2 py-2 cursor-pointer\"\n                    onClick={() => this.setSort(\"occupied\")}\n                  >\n                    <div className=\"flex items-center gap-1\">\n                      Room occupation <BiSort />\n                    </div>\n                  </td>\n                  <td\n                    className=\"px-2 py-2 cursor-pointer\"\n                    onClick={() => this.setSort(\"invigilator\")}\n                  >\n                    <div className=\"flex items-center gap-1\">\n                      Invigilator <BiSort />\n                    </div>\n                  </td>\n                </tr>\n              </thead>\n              <tbody>\n                {this.state.reportMainData === null ||\n                this.state.invigilatorData === null ? (\n                  <TableLoading cols={8} />\n                ) : this.FC_FilterReportData(\n                    roomWithOccupation(\n                      this.state.reportMainData,\n                      this.state.invigilatorData\n                    ),\n                    this.state.selectedDistrict === \"all\"\n                      ? \"all\"\n                      : this.state.selectedDistrict.district_id,\n                    \"all\",\n                    this.state.selectedExam === \"all\"\n                      ? \"all\"\n                      : this.state.selectedExam.course_id\n                  ).length === 0 ? (\n                  <tr>\n                    <td colSpan={8} className=\"px-2 py-2\">\n                      <div className=\"flex flex-col text-gray-400 items-center justify-center bg-gray-100 rounded py-10\">\n                        <ImFilesEmpty className=\"text-8xl text-gray-400 mb-2 animate__animated animate__shakeX\" />\n                        <span className=\"text-sm font-bold\">\n                          No result found! Please try to search again\n                        </span>\n                        <div className=\"w-full mt-2 flex flex-row items-center justify-center\">\n                          <ul className=\"text-sm py-2 text-blue-600 font-bold flex flex-row gap-2\">\n                            <li\n                              onClick={() => this.setSelectSession(true)}\n                              className=\"underline text-gray-500 cursor-pointer\"\n                            >\n                              Filter by session\n                            </li>\n                          </ul>\n                        </div>\n                      </div>\n                    </td>\n                  </tr>\n                ) : (\n                  sortThisArray(\n                    this.state.isSorted,\n                    this.searchData(\n                      this.FC_FilterReportData(\n                        roomWithOccupation(\n                          this.state.reportMainData,\n                          this.state.invigilatorData\n                        ),\n                        this.state.selectedDistrict === \"all\"\n                          ? \"all\"\n                          : this.state.selectedDistrict.district_id,\n                        \"all\",\n                        this.state.selectedExam === \"all\"\n                          ? \"all\"\n                          : this.state.selectedExam.course_id\n                      ),\n                      this.state.searchInput\n                    ),\n                    this.state.sortProperty,\n                    this.state.sortOrder\n                  ).map((item, i) => (\n                    <tr\n                      key={i + 1}\n                      className={`${\n                        i % 2 !== 0 ? \"bg-gray-100\" : \"bg-white\"\n                      } hover:bg-blue-100 hover:text-blue-700 border-b hover:border-blue-500 text-sm ${\n                        item.room_type === \"Default\"\n                          ? \"border-gray-500 text-gray-700 bg-gray-200\"\n                          : \"text-gray-600 border-gray-300\"\n                      }`}\n                    >\n                      <td className=\"px-2 py-2\">{i + 1}</td>\n                      <td className=\"px-2 py-2\">{item.district_name}</td>\n                      <td className=\"px-2 py-2\">{item.center_name}</td>\n                      <td className=\"px-2 py-2\">{item.room_number}</td>\n                      <td className=\"px-2 py-2\">\n                        {capitalizeFirstLetter(item.room_type)}\n                      </td>\n                      <td className=\"px-2 py-2\">\n                        {item.room_type === \"Default\" ? \"-\" : item.capacity}\n                      </td>\n                      <td className=\"px-2 py-2\">{item.occupied}</td>\n                      <td className=\"px-2 py-2\">{item.invigilator}</td>\n                    </tr>\n                  ))\n                )}\n              </tbody>\n            </table>\n          </div>\n        </section>\n        {/* END BODY CONTENT--------------------------------- */}\n\n        {this.state.generateReportModal !== null &&\n          this.state.generateReportModal.status === true && (\n            <Modal\n              title={\n                <div className=\"flex flex-row gap-4 items-center\">\n                  {/* <IoBriefcase className=\"text-5xl text-gray-500\" /> */}\n                  <div className=\"flex flex-col\">\n                    <span className=\"font-bold text-2xl text-gray-500\">\n                      Generating Report contents\n                    </span>\n                    <span className=\"text-sm text-blue-600 font-normal\">\n                      Generating {this.state.generateReportModal.reportType}{\" \"}\n                      Report\n                    </span>\n                  </div>\n                </div>\n              }\n              backDrop={true}\n              theme={Themes.default}\n              close={() => this.setGenerateReportModal(null)}\n              backDropClose={false}\n              widthSizeClass={ModalSize.medium}\n              displayClose={true}\n              padding={{ title: true }}\n            >\n              <div className=\"px-6\">\n                <div className=\"my-2 text-base text-gray-700 sm:text-lg\">\n                  <div className=\"flex flex-col\">\n                    <label>Title</label>\n                    <input\n                      type=\"text\"\n                      className={`text-left input-white w-20 inline-block ${\n                        this.state.formError &&\n                        this.state.formError.element === \"report_title\"\n                          ? \"border-red-500\"\n                          : \"border-gray-500\"\n                      } border-2`}\n                      placeholder=\"Sub Category Title\"\n                      value={this.state.reportTitle}\n                      onChange={(e) => {\n                        this.setFormError(null);\n                        this.setReportTitle(e.target.value);\n                      }}\n                      disabled={this.state.reportMainData ? false : true}\n                    />\n                    {this.state.formError &&\n                      this.state.formError.element === \"report_title\" && (\n                        <span className=\"text-red-500\">\n                          {this.state.formError.msg}\n                        </span>\n                      )}\n                  </div>\n                  <div className=\"flex flex-col mt-2\">\n                    <label>Report content</label>\n                    <div className=\"grid grid-cols-2 md:grid-cols-3 items-center gap-2 mt-2\">\n                      {this.state.reportContentExport.map((item, index) => (\n                        <div\n                          key={index}\n                          className={`flex items-center gap-1 ${\n                            this.isChangeAllowed(item.key)\n                              ? \"cursor-pointer\"\n                              : \"cursor-not-allowed\"\n                          }`}\n                          onClick={() =>\n                            this.isChangeAllowed(item.key) &&\n                            this.updateReportContent(item.key)\n                          }\n                          title={\n                            !this.isChangeAllowed(item.key)\n                              ? \"Required for every report!\"\n                              : \"\"\n                          }\n                        >\n                          {item.status ? (\n                            <MdCheckBox className=\"w-6 h-6 text-blue-700\" />\n                          ) : (\n                            <MdCheckBoxOutlineBlank className=\"w-6 h-6\" />\n                          )}\n                          <span>{item.title}</span>\n                        </div>\n                      ))}\n                    </div>\n                    {this.state.formError &&\n                      this.state.formError.element === \"report_content\" && (\n                        <span className=\"text-red-500\">\n                          {this.state.formError.msg}\n                        </span>\n                      )}\n                  </div>\n                </div>\n                <div className=\"flex justify-between mb-2 mt-4\">\n                  <div\n                    className={`flex items-center gap-1 cursor-pointer`}\n                    onClick={() =>\n                      this.resetReportContent(this.state.selectAll)\n                    }\n                  >\n                    {this.state.selectAll ? (\n                      <MdCheckBox className=\"w-6 h-6 text-blue-700\" />\n                    ) : (\n                      <MdCheckBoxOutlineBlank className=\"w-6 h-6\" />\n                    )}\n                    <span>Select all</span>\n                  </div>\n\n                  {this.state.centerToPrint && this.state.reportMainData && (\n                    <ExportToExcel\n                      fileData={this.state.centerToPrint}\n                      fileName={this.state.reportTitle}\n                      btnName=\"Generate\"\n                    />\n                  )}\n                </div>\n              </div>\n            </Modal>\n          )}\n        {/* SELECT SESSION MODAL =========================== */}\n        {this.state.selectSession && (\n          <Modal\n            title={\n              <div className=\"flex flex-row gap-4 items-center\">\n                <MdHistory className=\"text-5xl text-blue-600\" />\n                <span className=\"flex flex-col\">Choose session</span>\n              </div>\n            }\n            backDrop={true}\n            theme={Themes.default}\n            close={() =>\n              this.state.selectedSession !== null &&\n              this.setSelectSession(false)\n            }\n            backDropClose={true}\n            widthSizeClass={ModalSize.extraLarge}\n            displayClose={true}\n            padding={{ title: true }}\n          >\n            <ChooseSession\n              allSession={this.props.sessionPlan.allSessionPlans}\n              setSelectSession={(value: SessionPlanInterface | \"all\") => {\n                if (value !== \"all\") {\n                  this.setSelectedSession(value);\n                  this.loadReportMainData(value);\n                  this.setSelectSession(false);\n                }\n              }}\n              chooseAll={false}\n              currentSelected={\n                this.state.selectedSession ? this.state.selectedSession : \"all\"\n              }\n            />\n          </Modal>\n        )}\n\n        {this.state.chooseDistrict && this.state.reportMainData && (\n          <Modal\n            title={\n              <div className=\"flex flex-row gap-4 items-center\">\n                <MdLocationCity className=\"text-5xl text-blue-600\" />\n                <span className=\"flex flex-col\">Filter by district</span>\n              </div>\n            }\n            backDrop={true}\n            theme={Themes.default}\n            close={() => this.setChooseDistrict(false)}\n            backDropClose={true}\n            widthSizeClass={ModalSize.medium}\n            displayClose={true}\n            padding={{ title: true }}\n          >\n            <DistrictList\n              setChooseDistrict={this.setChooseDistrict}\n              districtList={getDistrictInRoom(this.state.reportMainData)}\n              setSelectedDistrict={this.setSelectedDistrict}\n              loadindRequest={this.state.loading}\n              selectedDistrict={this.state.selectedDistrict}\n              isModal={true}\n            />\n          </Modal>\n        )}\n\n        {this.state.chooseExam && this.state.reportMainData && (\n          <Modal\n            title={\n              <div className=\"flex flex-row gap-4 items-center\">\n                <CgFileDocument className=\"text-5xl text-blue-600\" />\n                <div className=\"flex flex-col\">\n                  <span className=\"font-bold text-xl text-blue-600\">\n                    Choose exam\n                  </span>\n                </div>\n              </div>\n            }\n            backDrop={true}\n            theme={Themes.default}\n            close={() =>\n              this.setState({ chooseExam: false, searchExamInput: \"\" })\n            }\n            backDropClose={true}\n            widthSizeClass={ModalSize.extraLarge}\n            displayClose={true}\n            padding={{ title: true }}\n          >\n            {this.state.loadingExam ||\n            this.props.courses === null ||\n            this.props.examsList === null ? (\n              <Loading />\n            ) : (\n              <div className=\"px-2 pb-2\">\n                <div className=\"w-full py-2\">\n                  <input\n                    onChange={(e) =>\n                      this.setState({ searchExamInput: e.target.value })\n                    }\n                    type=\"text\"\n                    value={this.state.searchExamInput}\n                    placeholder=\"Search...\"\n                    className=\"w-full bg-white py-2 px-3 rounded border border-gray-400\"\n                    disabled={\n                      FC_reportExamList(\n                        this.props.courses,\n                        this.props.examsList\n                      ).length <= 0\n                        ? true\n                        : false\n                    }\n                  />\n                </div>\n                <div\n                  onClick={() =>\n                    this.setState({\n                      selectedExam: \"all\",\n                      chooseExam: false,\n                      searchExamInput: \"\",\n                    })\n                  }\n                  className={`flex items-center border rounded px-2 py-2 cursor-pointer group hover:bg-blue-100 hover:border-blue-500 mb-3 justify-between ${\n                    this.state.selectedExam === \"all\"\n                      ? \"bg-blue-50 border-blue-400\"\n                      : \"bg-white border-gray-200\"\n                  }`}\n                >\n                  <div>\n                    <div className=\"text-sm font-medium italic\">\n                      code: <span className=\"text-blue-500\">-</span>\n                    </div>\n                    <div className=\"font-bold text-lg\">All exams</div>\n                  </div>\n                  <div className=\"btn bg-blue-400 group-hover:bg-blue-600 text-white mr-2\">\n                    Choose\n                  </div>\n                </div>\n                {searchExamList(\n                  FC_reportExamList(this.props.courses, this.props.examsList),\n                  this.state.searchInput\n                ).map((item, i) => (\n                  <div\n                    onClick={() =>\n                      this.setState({\n                        selectedExam: item,\n                        chooseExam: false,\n                        searchExamInput: \"\",\n                      })\n                    }\n                    key={i + 1}\n                    className={`flex items-center border rounded px-2 py-2 cursor-pointer group hover:bg-blue-100 hover:border-blue-500 mb-3 justify-between ${\n                      this.state.selectedExam !== \"all\" &&\n                      this.state.selectedExam.course_id === item.course_id\n                        ? \"bg-blue-50 border-blue-400\"\n                        : \"bg-white border-gray-200\"\n                    }`}\n                  >\n                    <div>\n                      <div className=\"text-sm font-medium italic\">\n                        code:{\" \"}\n                        <span className=\"text-blue-500\">\n                          {item.course_code}\n                        </span>\n                      </div>\n                      <div className=\"font-bold text-lg\">\n                        {item.course_name}\n                      </div>\n                    </div>\n                    <div className=\"btn bg-blue-400 group-hover:bg-blue-600 text-white mr-2\">\n                      Choose\n                    </div>\n                  </div>\n                ))}\n              </div>\n            )}\n          </Modal>\n        )}\n      </Fragment>\n    );\n  }\n}\n\nconst mapStateToProps = ({\n  auth,\n  course,\n  prepareExam,\n  sessionPlan,\n}: StoreState): {\n  auth: Auth;\n  sessionPlan: SessionPlanReducerInterface;\n  courses: course[] | null;\n  examsList: ExamItemResponse[] | null;\n} => {\n  return {\n    auth: auth,\n    sessionPlan,\n    courses: course.courses,\n    examsList: prepareExam.examsList,\n  };\n};\n\nexport const CenterReport = connect(mapStateToProps, {\n  GetAllSessionPlans,\n  loadCourses,\n  loadExamsList,\n  PushPopupAlert,\n})(index);\n","import React, { FC, ReactElement, ReactNode } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Auth, System } from \"../../actions\";\nimport { StoreState } from \"../../reducers\";\nimport { NavToogle, PageHasSubNav } from \"../../actions\";\nimport { MdBrightness1, MdSearch } from \"react-icons/md\";\n\n// props for the component\ninterface AppProps {\n  auth: Auth;\n  system: System;\n  PageHasSubNav: Function;\n  NavToogle: Function;\n  children: ReactNode;\n}\n//\ninterface AppState {\n  loading: boolean;\n}\n\nclass _SideNavigation extends React.Component<AppProps, AppState> {\n  constructor(props: AppProps) {\n    super(props);\n\n    this.state = {\n      loading: false,\n    };\n  }\n\n  componentDidMount = () => this.props.PageHasSubNav(true);\n  componentWillUnmount = () => this.props.PageHasSubNav(false);\n\n  render() {\n    const isAuthenticated = this.props.auth.isAuthenticated;\n\n    if (isAuthenticated === false) {\n      return null;\n    }\n\n    const navActive = this.props.system.navigation;\n    return (\n      <div\n        className={`fixed w-48 p-1 pr-2 pl-6 text-gray-700 bg-white ${\n          navActive === true ? \"lg:left-16  left-16\" : \" -left-72 lg:left-16\"\n        }  top-0 bottom-0 pt-20 z-30 shadow-lg  transition-all duration-500 ease-in-out overflow-y-auto`}\n      >\n        {this.props.children}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = ({\n  auth,\n  system,\n}: StoreState): { auth: Auth; system: System } => {\n  return { auth: auth, system: system };\n};\n\nexport const SideNavigation = connect(mapStateToProps, {\n  NavToogle,\n  PageHasSubNav,\n})(_SideNavigation);\n\n//************************************ FORM SEARCH **************************************** */\n\ntype SearchComponentInterface = {\n  data: any[];\n};\n\nexport const Search: FC<SearchComponentInterface> = ({\n  data,\n}): ReactElement => {\n  return (\n    <div className=\"m-1 rounded-md shadow-md border border-blue-400 bg-white p-1 flex \">\n      <label htmlFor=\"search-text\" className=\"inline-block text-2xl\">\n        <MdSearch className=\"inline-block text-blue-400\" />\n      </label>\n      <input\n        type=\"search\"\n        className=\"outline-none bg-transparent flex-1 pl-1\"\n        placeholder=\"Search\"\n        id=\"search-text\"\n      />\n    </div>\n  );\n};\n\n//************************************ FORM SEARCH **************************************** */\n\ntype MainItemComponentInterface = {\n  title: string;\n  icon?: any;\n  active?: boolean;\n  count?: number;\n};\n\n/**\n *\n * @param param0\n * @returns\n */\nexport const MainItem: FC<MainItemComponentInterface> = ({\n  title = \"\",\n  icon = MdBrightness1,\n  active = false,\n  count = 0,\n}): ReactElement => {\n  const IconDefined = icon;\n  return (\n    <section\n      className={`${\n        active === true\n          ? \"bg-blue-500 text-white font-bold\"\n          : \"bg-blue-100 text-blue-800\"\n      } mb-1 hover:font-bold py-1 hover:bg-blue-400 hover:text-white --font-bold  px-2 rounded-md flex cursor-pointer items-center`}\n    >\n      <section className=\"flex-1\">\n        <IconDefined className=\"inline-block mr-1 text-xs\" />\n        <span>{title}</span>\n      </section>\n\n      {count > 0 ? (\n        <span className=\"px-0.5 my-1 text-xs bg-blue-600 text-white rounded-full\">\n          {count}\n        </span>\n      ) : null}\n    </section>\n  );\n};\n\n//************************************ FORM SEARCH **************************************** */\n\ntype SubItemContainerComponentInterface = {\n  children: ReactNode;\n};\n\n/**\n *\n * @param param0\n * @returns\n */\nexport const SubItemContainer: FC<SubItemContainerComponentInterface> = ({\n  children,\n}): ReactElement => {\n  return (\n    <div className=\"ml-3 overflow-y-auto border-l-2 border-blue-200 -mt-1 pt-2 mb-2 pl-1 cursor-pointer\">\n      {children}\n    </div>\n  );\n};\n\n//************************************ FORM SEARCH **************************************** */\n\ntype SubItemComponentInterface = {\n  title: string;\n  icon?: any;\n  active?: boolean;\n  count?: number;\n};\n\n/**\n *\n * @param param0\n * @returns\n * @important Remenber to use these components inside the <SubItemContainer>...</SubItemContainer>\n */\nexport const SubItem: FC<SubItemComponentInterface> = ({\n  title = \"\",\n  icon = MdBrightness1,\n  active = false,\n  count = 0,\n}): ReactElement => {\n  const IconDefined = icon;\n\n  return (\n    <div\n      className={`animate__animated animate__zoomIn animate__faster ${\n        active === true ? \"bg-blue-500 text-white font-bold\" : \" text-blue-800\"\n      } text-blue-800 bg-blue-200 rounded-md px-1 mb-1 flex items-center py-1 font-bold`}\n    >\n      <IconDefined\n        className={`inline-block mr-0.1 text-xs ${\n          active === true ? \"text-white\" : \"\"\n        }`}\n      />\n      <span\n        className={`inline-block pl-1 ${active === true ? \"text-white\" : \"\"}`}\n      >\n        {title}\n      </span>\n      {count >= 1 ? (\n        <span\n          className={`text-sm fint-bold ${active === true ? \"text-white\" : \"\"}`}\n        >\n          {count}\n        </span>\n      ) : null}\n    </div>\n  );\n};\n","import axios from \"axios\";\nimport { Dispatch } from \"redux\";\nimport { ActionTypes } from \"./types\";\nimport {\n  AssignRoleToUserActionInterface,\n  CustomeAccessInterface,\n  UserInterface,\n} from \"../shared/interfaces\";\nimport { API } from \"../utils/api\";\nimport { setAxiosToken } from \"../utils/AxiosToken\";\nimport { errorToText } from \"../utils/errors\";\n\nexport const userPageLimit: number = 30;\n\n/**\n * * ****************************** INTERFACES *****************************\n */\n\nexport interface FetchUsersAction {\n  type: ActionTypes.FETCH_USERS_ACCESS;\n  payload: UserAccessInterface;\n}\n\nexport interface BlockUserToSystem {\n  type: ActionTypes.BLOCK_USER_TO_SYSTEM | ActionTypes.UNBLOCK_USER_TO_SYSTEM;\n  payload: { id: string; page: number };\n}\n\nexport interface AssignRoleToUserAction {\n  type: ActionTypes.ASSIGN_ROLE_TO_USER;\n  payload: { data: AssignRoleToUserActionInterface; page: number };\n}\n\nexport interface CustomizeUserAccessAction {\n  type: ActionTypes.CUSTOMIZE_USER_ACCESS;\n  payload: { data: CustomeAccessInterface; page: number };\n}\n\nexport interface ResetUserAccessAction {\n  type: ActionTypes.RESET_USER_ACCESS;\n  payload: { user_id: string; page: number };\n}\n\nexport type fetchUserAccessInterface = {\n  users: UserInterface[] | null;\n  next: {\n    page: number;\n    limit: number;\n  } | null;\n  previous: {\n    page: number;\n    limit: number;\n  } | null;\n  total_users: number;\n};\n\nexport type UserAccessInterface = {\n  users: { data: UserInterface[]; page: number }[] | null;\n  next: {\n    page: number;\n    limit: number;\n  } | null;\n  previous: {\n    page: number;\n    limit: number;\n  } | null;\n  total_users: number;\n};\n\nexport enum documentValidationStatus {\n  waiting = \"waiting\",\n  approved = \"approved\",\n  rejected = \"rejected\",\n}\n\nexport interface VerifyDocumentInterface {\n  user_id: string;\n  doc_id: string;\n  validation_status: \"waiting\" | \"approved\" | \"rejected\";\n  validated_by: {\n    user_id: string;\n    comment: string;\n    validation_status: \"waiting\" | \"approved\" | \"rejected\";\n    date?: string;\n  };\n  in_education: boolean;\n  disability: boolean;\n}\n\nexport type AccessUserActionType =\n  | FetchUsersAction\n  | BlockUserToSystem\n  | AssignRoleToUserAction\n  | CustomizeUserAccessAction\n  | ResetUserAccessAction;\n\n/**\n * * ****************************** ACTIONS *****************************\n */\n\nexport const fetchUserAccess = (page: number, callback?: Function) => {\n  callback && callback(true, \"\");\n  return async (dispatch: Dispatch) => {\n    try {\n      setAxiosToken();\n      const res = await axios.get<fetchUserAccessInterface>(\n        `${API.AUTH}/users?page=${page}&limit=${userPageLimit}`\n      );\n      console.log(\"====================================\");\n      console.log({ fetchUserAccess: res });\n      console.log(\"====================================\");\n      dispatch<FetchUsersAction>({\n        type: ActionTypes.FETCH_USERS_ACCESS,\n        payload: {\n          users: [{ data: res.data.users!, page: page }],\n          next: res.data.next,\n          previous: res.data.previous,\n          total_users: res.data.total_users,\n        },\n      });\n      callback && callback(false, \"\", res.data.users);\n    } catch (error) {\n      console.error({ user_error: error });\n      callback && callback(false, errorToText(error));\n    }\n  };\n};\n\nexport const blockUserToSystem = (user_id: string, page: number) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<BlockUserToSystem>({\n      type: ActionTypes.BLOCK_USER_TO_SYSTEM,\n      payload: { id: user_id, page },\n    });\n  };\n};\n\nexport const unBlockUserToSystem = (user_id: string, page: number) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<BlockUserToSystem>({\n      type: ActionTypes.UNBLOCK_USER_TO_SYSTEM,\n      payload: { id: user_id, page },\n    });\n  };\n};\n\nexport const assignRoleToUserAccess = (\n  data: AssignRoleToUserActionInterface,\n  page: number\n) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<AssignRoleToUserAction>({\n      type: ActionTypes.ASSIGN_ROLE_TO_USER,\n      payload: { data, page },\n    });\n  };\n};\n\nexport const customizeUserAccess = (\n  data: CustomeAccessInterface,\n  page: number\n) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<CustomizeUserAccessAction>({\n      type: ActionTypes.CUSTOMIZE_USER_ACCESS,\n      payload: { data, page },\n    });\n  };\n};\n\nexport const resetUserAccess = (data: string, page: number) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<ResetUserAccessAction>({\n      type: ActionTypes.RESET_USER_ACCESS,\n      payload: { user_id: data, page },\n    });\n  };\n};\n","import React from \"react\";\nimport { MdInfoOutline } from \"react-icons/md\";\n\nconst NoSession = () => {\n  return (\n    <div className=\"my-5\">\n      <div className=\"bg-yellow-100 rounded flex flex-col items-center justify-center p-6 my-8 text-yellow-900 border border-yellow-900\">\n        <MdInfoOutline className=\"text-6xl md:text-9xl\" />\n        <div className=\"text-center flex flex-col\">\n          <span className=\"text-2xl md:text-4xl font-extrabold\">\n            No session available\n          </span>\n          <span className=\"text-lg\">\n            Please Wait for the system to publish the sessions or contact the\n            administrator\n          </span>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default NoSession;\n","import React, { Fragment, useState } from \"react\";\nimport { BiSort } from \"react-icons/bi\";\nimport Loading from \"../../../components/Loading/Loading\";\nimport { SessionPlanInterface } from \"../../../interfaces\";\nimport { course } from \"../../../interfaces/course\";\nimport { ExamItemResponse } from \"../../../interfaces/prepare_exam\";\nimport { ExamDoneAndRemainingByPeriodInterface } from \"../../../interfaces/reports\";\nimport { capitalizeFirstLetter } from \"../../../shared/dataTest\";\nimport { DATE, sortThisArray } from \"../../../utils/functions\";\n// import searchExamData from \"../../../utils/search\";\nimport { getPeriodById } from \"./ExamReport\";\n\n// EXCEL FILE FUNCTIONS ================================\nexport interface ExaminationProgressToPrintInterface {\n  course_id: number;\n  course_name: string;\n  course_code: string;\n  description: string;\n  school_levels: string;\n  exam_period: string;\n  exam_date: string;\n  exam_time: string;\n  exam_duration: string;\n  exam_status: string;\n}\n\nexport enum ExaminationProgressReportContentKeyInterface {\n  COURSER_NAME = \"course_name\",\n  COURSE_CODE = \"course_code\",\n  SCHOOL_LEVEL = \"school_levels\",\n  PERIOD = \"exam_period\",\n  DATE = \"exam_date\",\n  TIME = \"exam_time\",\n  DURATION = \"exam_duration\",\n  STATUS = \"exam_status\",\n}\n\nexport interface ExaminationProgressReportContentInterface {\n  key: ExaminationProgressReportContentKeyInterface;\n  title: string;\n  status: boolean;\n}\n\nexport const examinationProgressIsChangeAllowed = (\n  key: ExaminationProgressReportContentKeyInterface\n): boolean => {\n  if (\n    key === ExaminationProgressReportContentKeyInterface.COURSER_NAME ||\n    key === ExaminationProgressReportContentKeyInterface.COURSE_CODE ||\n    key === ExaminationProgressReportContentKeyInterface.PERIOD ||\n    key === ExaminationProgressReportContentKeyInterface.STATUS\n  ) {\n    return false;\n  }\n  return true;\n};\n\nexport const defaultExaminationProgressContent: ExaminationProgressReportContentInterface[] =\n  [\n    {\n      key: ExaminationProgressReportContentKeyInterface.COURSER_NAME,\n      title: \"Course names\",\n      status: true,\n    },\n    {\n      key: ExaminationProgressReportContentKeyInterface.COURSE_CODE,\n      title: \"Course code\",\n      status: true,\n    },\n    {\n      key: ExaminationProgressReportContentKeyInterface.SCHOOL_LEVEL,\n      title: \"School levels\",\n      status: true,\n    },\n    {\n      key: ExaminationProgressReportContentKeyInterface.PERIOD,\n      title: \"Exam period\",\n      status: true,\n    },\n    {\n      key: ExaminationProgressReportContentKeyInterface.DATE,\n      title: \"Exam date\",\n      status: true,\n    },\n    {\n      key: ExaminationProgressReportContentKeyInterface.TIME,\n      title: \"Exam time\",\n      status: true,\n    },\n    {\n      key: ExaminationProgressReportContentKeyInterface.DURATION,\n      title: \"Exam duration\",\n      status: true,\n    },\n    {\n      key: ExaminationProgressReportContentKeyInterface.STATUS,\n      title: \"Exam Status\",\n      status: true,\n    },\n  ];\n\n// END EXCEL FILE FUNCTIONS ================================\n\nexport const displayStatus = (status: string): string => {\n  if (status === \"Done\") {\n    return \"Completed\";\n  }\n  if (status === \"Editing\") {\n    return \"In exam\";\n  }\n  return status;\n};\n\nexport interface examProgressStateInterface {\n  course_name: string;\n  course_code: string;\n  description: string;\n  school_levels: string[];\n  course_id: string;\n  exam: ExamItemResponse | null;\n  preparation_status: string;\n}\n\nexport const FC_reportDoneExamList = (\n  allCourses: course[],\n  allExams: ExamItemResponse[],\n  doneExams: ExamDoneAndRemainingByPeriodInterface[]\n): examProgressStateInterface[] => {\n  let result: examProgressStateInterface[] = [],\n    ids: string[] = [];\n  for (const key in allExams) {\n    if (Object.prototype.hasOwnProperty.call(allExams, key)) {\n      if (ids.includes(allExams[key].id)) continue;\n      ids.push(allExams[key].id);\n      let courser = allCourses.find(\n        (item) => item.course_id === allExams[key].course\n      );\n      if (courser) {\n        let doneExam = doneExams.find(\n          (item) =>\n            item.course === allExams[key].course &&\n            item.period === allExams[key].period\n        );\n        result.push({\n          course_name: courser.course_name,\n          course_code: courser.course_code,\n          description: courser.description,\n          school_levels: courser.school_levels,\n          course_id: courser.course_id,\n          exam: allExams[key],\n          preparation_status: doneExam ? doneExam.exam_status : \"remaining\",\n        });\n      }\n    }\n  }\n  return result;\n};\n\nexport const FC_reportDoneExamListFilter = (\n  thisList: examProgressStateInterface[],\n  thisValue: \"all\" | \"Done\" | \"Active\"\n): examProgressStateInterface[] => {\n  if (thisValue === \"all\") {\n    return thisList;\n  } else {\n    return thisList.filter((item) => item.preparation_status === thisValue);\n  }\n};\n\nexport const searchExamData = (\n  objList: examProgressStateInterface[],\n  text: string\n): examProgressStateInterface[] => {\n  if (undefined === text || text === \"\") return objList;\n  return objList.filter((product) => {\n    let flag;\n    // let dataKeys = product;\n\n    for (let prop in product) {\n      flag = false;\n      if (\n        prop === \"course_name\" ||\n        prop === \"course_code\" ||\n        prop === \"preparation_status\"\n      ) {\n        flag =\n          product[prop].toString().toLowerCase().indexOf(text.toLowerCase()) >\n          -1;\n      }\n      if (flag) break;\n    }\n    return flag;\n  });\n};\n\ntype DoneExamListProps = {\n  loading: boolean;\n  examsListData: ExamItemResponse[] | null;\n  courseListData: course[] | null;\n  thisPeriod: SessionPlanInterface[];\n  doneExamsData: ExamDoneAndRemainingByPeriodInterface[] | null;\n\n  // for filter purpose =============================\n  filterExamProgress: \"all\" | \"Done\" | \"Active\";\n};\n\nconst DoneExamList: React.FC<DoneExamListProps> = (props) => {\n  const [searchInput, setSearchInput] = useState<string>(\"\");\n  const [isSorted, setIsSorted] = useState<boolean>(false);\n  const [sortProperty, setSortProperty] = useState<string>(\"\");\n  const [sortOrder, setSortOrder] = useState<\"ASC\" | \"DESC\">(\"ASC\");\n\n  const setSort = (thisProperty: string) => {\n    if (sortProperty === thisProperty && sortOrder === \"ASC\") {\n      setSortOrder(\"DESC\");\n      setSortProperty(thisProperty);\n      setIsSorted(true);\n    } else {\n      setSortOrder(\"ASC\");\n      setSortProperty(thisProperty);\n      setIsSorted(true);\n    }\n  };\n\n  return (\n    <Fragment>\n      <div className=\"bg-white my-4\">\n        <div className=\"w-full px-2 py-2\">\n          <input\n            onChange={(e) => setSearchInput(e.target.value)}\n            type=\"text\"\n            value={searchInput}\n            placeholder=\"Search...\"\n            className=\"w-full bg-gray-100 py-2 px-3 rounded\"\n            disabled={\n              props.courseListData &&\n              props.examsListData &&\n              props.doneExamsData &&\n              FC_reportDoneExamListFilter(\n                FC_reportDoneExamList(\n                  props.courseListData,\n                  props.examsListData,\n                  props.doneExamsData\n                ),\n                props.filterExamProgress\n              ).length <= 0\n                ? true\n                : false\n            }\n          />\n        </div>\n        <table className=\"w-full shadow\" id=\"report_content\">\n          <thead className=\"bg-white border-b-2 border-gray-300 text-gray-600 font-bold text-sm\">\n            <tr>\n              <td className=\"px-2 py-2\">#</td>\n              <td\n                className=\"px-2 py-2 cursor-pointer\"\n                onClick={() => setSort(\"course_name\")}\n              >\n                <div className=\"flex items-center gap-1\">\n                  Course <BiSort />\n                </div>\n              </td>\n              <td className=\"px-2 py-2\">Exam date</td>\n              <td className=\"px-2 py-2\">Exam time</td>\n              <td className=\"px-2 py-2\">Exam duration</td>\n              <td className=\"px-2 py-2\">Exam Period</td>\n              <td\n                className=\"px-2 py-2 cursor-pointer\"\n                onClick={() => setSort(\"preparation_status\")}\n              >\n                <div className=\"flex items-center gap-1\">\n                  Exam Status <BiSort />\n                </div>\n              </td>\n            </tr>\n          </thead>\n          <tbody>\n            {props.courseListData === null || props.loading ? (\n              <tr>\n                <td colSpan={7} className=\"px-2 py-2\">\n                  <Loading />\n                </td>\n              </tr>\n            ) : props.examsListData &&\n              props.doneExamsData &&\n              FC_reportDoneExamListFilter(\n                FC_reportDoneExamList(\n                  props.courseListData,\n                  props.examsListData,\n                  props.doneExamsData\n                ),\n                props.filterExamProgress\n              ).length <= 0 ? (\n              <tr>\n                <td colSpan={7} className=\"px-2 py-2 text-center\">\n                  No Exam list available!\n                </td>\n              </tr>\n            ) : (\n              props.examsListData &&\n              props.doneExamsData &&\n              sortThisArray(\n                isSorted,\n                searchExamData(\n                  FC_reportDoneExamListFilter(\n                    FC_reportDoneExamList(\n                      props.courseListData,\n                      props.examsListData,\n                      props.doneExamsData\n                    ),\n                    props.filterExamProgress\n                  ),\n                  searchInput\n                ),\n                sortProperty,\n                sortOrder\n              ).map((item, i) => (\n                <tr\n                  key={i + 1}\n                  className={`${\n                    item.preparation_status === \"Done\"\n                      ? \"bg-blue-50\"\n                      : \"bg-white\"\n                  } text-gray-600 hover:bg-blue-100 hover:text-blue-700 border-b border-gray-300 hover:border-blue-500 text-sm`}\n                >\n                  <td className=\"px-2 py-2\">{i + 1}</td>\n                  <td className=\"px-2 py-2\">\n                    {capitalizeFirstLetter(item.course_name)} (\n                    <span className=\"font-semibold\">{item.course_code}</span>)\n                  </td>\n                  <td className=\"px-2 py-2\">\n                    {item.exam ? DATE(item.exam.exam_date) : \"-\"}\n                  </td>\n                  <td className=\"px-2 py-2\">\n                    {item.exam ? item.exam.start_time : \"-\"}\n                  </td>\n                  <td className=\"px-2 py-2\">\n                    {item.exam ? item.exam!.duration + \" min\" : \"-\"}\n                  </td>\n                  <td className=\"px-2 py-2\">\n                    {item.exam\n                      ? getPeriodById(props.thisPeriod, item.exam.period)\n                        ? getPeriodById(props.thisPeriod, item.exam.period)!\n                            .session_plan_name\n                        : \"-\"\n                      : \"-\"}\n                  </td>\n                  <td className=\"px-2 py-2\">\n                    {capitalizeFirstLetter(\n                      displayStatus(item.preparation_status)\n                    )}\n                  </td>\n                </tr>\n              ))\n            )}\n          </tbody>\n        </table>\n      </div>\n    </Fragment>\n  );\n};\n\nexport default React.memo(DoneExamList);\n","import React from \"react\";\n\ntype TableLoadingProps = {\n  cols: number;\n};\nconst TableLoading: React.FC<TableLoadingProps> = (props) => {\n  const displayCols = (): JSX.Element[] => {\n    let colsArray: number[] = [];\n    for (let index = 0; index < props.cols; index++) {\n      colsArray.push(index);\n    }\n    let result = colsArray.map((element) => {\n      return (\n        <td className=\"p-3 text-center whitespace-nowrap\" key={element}>\n          <div className=\"w-full h-4 rounded bg-gray-200 animate__animated animate__pulse animate__delay-5s animate__infinite\"></div>\n        </td>\n      );\n    });\n\n    return result;\n  };\n  return (\n    <>\n      <tr className=\"border-b border-gray-200\" key={228}>\n        {displayCols()}\n      </tr>\n      <tr className=\"border-b border-gray-200\" key={22648}>\n        {displayCols()}\n      </tr>\n      <tr className=\"border-b border-gray-200\" key={229768}>\n        {displayCols()}\n      </tr>\n    </>\n  );\n};\n\nexport default TableLoading;\n","import { ApexOptions } from \"apexcharts\";\nimport React, { useEffect, useState } from \"react\";\nimport Chart from \"react-apexcharts\";\n\ntype VBarCharPropstInterface = {\n  labels: string[];\n  categoriesLabel: any;\n  bar?: {\n    borderRadius: number;\n    horizontal: boolean;\n    columnWidth: string;\n    endingShape: string;\n  };\n  dataLabels: boolean;\n  yaxisText: string;\n  tooltipText: string;\n  series: {\n    name: string;\n    data: number[];\n  }[];\n  defaultBar?: {\n    borderRadius: number;\n    horizontal: boolean;\n    columnWidth: string;\n    endingShape: string;\n  };\n  colors?: any[];\n  title?: {\n    text: string;\n    align: string;\n    margin: number;\n    offestY: number;\n    style: {\n      fontSize: string;\n    };\n  };\n  stacked?: boolean;\n  FC_LoadSelected?: (labelIndex: number, seriesIndex: number) => void;\n  chartHeight?: number;\n};\n\nconst defaultBar = {\n  borderRadius: 4,\n  horizontal: false,\n  columnWidth: \"95%\",\n  endingShape: \"rounded\",\n};\n\nconst VBarChart: React.FC<VBarCharPropstInterface> = (props) => {\n  const [loading, setLoading] = useState<boolean>(true);\n  const [options, setOptions] = useState<ApexOptions>({\n    chart: {\n      events: {\n        dataPointSelection: (event, chartContext, config) => {\n          console.log({\n            labelClicked: config.w.config.labels[config.dataPointIndex],\n            // seriesClicked: config.w.config.series[config.dataPointIndex],\n          });\n          if (props.FC_LoadSelected) {\n            props.FC_LoadSelected(config.dataPointIndex, config.seriesIndex);\n          }\n          // console.log(config.seriesIndex);\n          // console.log(config.dataPointIndex);\n        },\n      },\n      stacked: props.stacked ? props.stacked : false,\n    },\n    plotOptions: {\n      bar: props.defaultBar ? props.defaultBar : defaultBar,\n    },\n    labels: props.labels,\n    dataLabels: {\n      enabled: true,\n    },\n    xaxis: {\n      labels: {\n        rotate: -45,\n      },\n      categories: props.categoriesLabel,\n      tickPlacement: \"on\",\n    },\n    yaxis: {\n      title: {\n        text: props.yaxisText,\n      },\n    },\n    fill: {\n      opacity: 1,\n    },\n    tooltip: {\n      y: {\n        formatter: function (val: number) {\n          return val + \" \" + props.tooltipText;\n        },\n      },\n    },\n    grid: {\n      padding: {\n        left: 30, // or whatever value that works\n        right: 30, // or whatever value that works\n      },\n    },\n    noData: {\n      text: \"No data found\",\n      align: \"center\",\n      verticalAlign: \"middle\",\n    },\n  });\n\n  useEffect(() => {\n    if (props.colors && props.colors.length > 0 && loading) {\n      setOptions({\n        chart: {\n          stacked: props.stacked ? props.stacked : false,\n          events: {\n            dataPointSelection: (event, chartContext, config) => {\n              console.log({\n                chartClicked: config.w.config.labels[config.dataPointIndex],\n              });\n              if (props.FC_LoadSelected) {\n                props.FC_LoadSelected(\n                  config.dataPointIndex,\n                  config.seriesIndex\n                );\n              }\n            },\n          },\n          zoom: {\n            enabled: true,\n            autoScaleYaxis: true,\n          },\n        },\n        plotOptions: {\n          bar: props.defaultBar ? props.defaultBar : defaultBar,\n        },\n        labels: props.labels,\n        dataLabels: {\n          enabled: true,\n        },\n        xaxis: {\n          labels: {\n            rotate: -45,\n          },\n          categories: props.categoriesLabel,\n          tickPlacement: \"on\",\n        },\n        yaxis: {\n          title: {\n            text: props.yaxisText,\n          },\n        },\n        fill: {\n          opacity: 1,\n        },\n        tooltip: {\n          y: {\n            formatter: function (val: number) {\n              return val + \" \" + props.tooltipText;\n            },\n          },\n        },\n        grid: {\n          padding: {\n            left: 30, // or whatever value that works\n            right: 30, // or whatever value that works\n          },\n        },\n        noData: {\n          text: \"No data found\",\n          align: \"center\",\n          verticalAlign: \"middle\",\n        },\n        colors: props.colors,\n      });\n    } else if (loading) {\n      setOptions({\n        chart: {\n          stacked: props.stacked ? props.stacked : false,\n          events: {\n            dataPointSelection: (event, chartContext, config) => {\n              console.log({\n                labelClicked: config.w.config.labels[config.dataPointIndex],\n                // seriesClicked: config.w.config.series[config.dataPointIndex],\n              });\n              if (props.FC_LoadSelected) {\n                props.FC_LoadSelected(\n                  config.dataPointIndex,\n                  config.seriesIndex\n                );\n              }\n              // console.log(config.seriesIndex);\n              // console.log(config.dataPointIndex);\n            },\n          },\n          zoom: {\n            enabled: true,\n            autoScaleYaxis: true,\n          },\n        },\n        plotOptions: {\n          bar: props.defaultBar ? props.defaultBar : defaultBar,\n        },\n        labels: props.labels,\n        dataLabels: {\n          enabled: true,\n        },\n        xaxis: {\n          labels: {\n            rotate: -45,\n          },\n          categories: props.categoriesLabel,\n          tickPlacement: \"on\",\n        },\n        yaxis: {\n          title: {\n            text: props.yaxisText,\n          },\n        },\n        fill: {\n          opacity: 1,\n        },\n        tooltip: {\n          y: {\n            formatter: function (val: number) {\n              return val + \" \" + props.tooltipText;\n            },\n          },\n        },\n        grid: {\n          padding: {\n            left: 30, // or whatever value that works\n            right: 30, // or whatever value that works\n          },\n        },\n        noData: {\n          text: \"No data found\",\n          align: \"center\",\n          verticalAlign: \"middle\",\n        },\n      });\n    }\n    setLoading(false);\n  }, [loading, options, props]);\n\n  if (loading) {\n    return (\n      <div className=\"text-center mt-7 font-bold text-4xl text-gray-400 animate-pulse\">\n        Loading Data...\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"w-full\">\n      <Chart\n        options={options}\n        series={props.series}\n        type=\"bar\"\n        width=\"100%\"\n        height={props.chartHeight ? props.chartHeight : undefined}\n      />\n    </div>\n  );\n};\n\nexport default React.memo(VBarChart);\n","import React, { Component } from \"react\";\nimport { BiFilterAlt } from \"react-icons/bi\";\nimport { FiEdit } from \"react-icons/fi\";\nimport { MdRadioButtonChecked, MdRadioButtonUnchecked } from \"react-icons/md\";\nimport { connect } from \"react-redux\";\nimport {\n  Auth,\n  schoolLevelsStoreInterface,\n  setSelectedPeriod,\n  loadCourses,\n  loadExamsList,\n  loadEducationCategories,\n  loadDoneExam,\n  loadSchoolLevels,\n  loadPerfomranceExam,\n  loadCandidatesExamPerformance,\n  setSelectedEducationCategory,\n  PushPopupAlert,\n  FilterParamType,\n  ReportGetCandidatePerformanceSortTypes,\n} from \"../../../actions\";\nimport { GetAllSessionPlans } from \"../../../actions/session\";\nimport { PopupAlertData } from \"../../../components/Alert/Popup\";\nimport {\n  generatePDF,\n  reportSettingsInterface,\n} from \"../../../components/DownloadPDF/rest\";\nimport Loading from \"../../../components/Loading/Loading\";\nimport { SideNavigation } from \"../../../components/Navigation/SideNavigation\";\nimport NoResult, {\n  NoResultThemes,\n} from \"../../../components/NoResult/NoResult\";\nimport {\n  course,\n  education_category,\n  ReportUserExamStatus,\n  school_level,\n  SessionPlanInterface,\n} from \"../../../interfaces\";\nimport { PopupAlertTheme } from \"../../../interfaces/popupAlert\";\nimport {\n  ExamItemResponse,\n  PrepareExamStatus,\n  QuestionNumberFormat,\n} from \"../../../interfaces/prepare_exam\";\nimport { StoreState } from \"../../../reducers\";\nimport { ExamReportReducerType } from \"../../../reducers/exam_report\";\nimport { SessionPlanReducerInterface } from \"../../../reducers/session\";\nimport {\n  capitalizeFirstLetter,\n  isEmptyOrSpaces,\n} from \"../../../shared/dataTest\";\nimport { DATE, timestampToDate } from \"../../../utils/functions\";\nimport NoSession from \"../../SessionSettings/NoSession\";\nimport CandiadtePerformancePerDistrict, {\n  FC_CandiadtePerformancePerDistrictFilter,\n} from \"./CandiadtePerformancePerDistrict\";\nimport CandidatePerformance, {\n  CandidateExamPerformanceToPrintInterface,\n  CandidateExamPerformanceReportContentInterface,\n  defaultCandidateExamPerformanceContent,\n  candidatePerfomranceStateInterface,\n  FC_reportCandidatePerformanceData,\n} from \"./CandidatePerformance\";\nimport DoneExamList, {\n  ExaminationProgressToPrintInterface,\n  ExaminationProgressReportContentInterface,\n  defaultExaminationProgressContent,\n  displayStatus,\n  examProgressStateInterface,\n  FC_reportDoneExamList,\n} from \"./DoneExamList\";\nimport ExamList, {\n  ExamPreparationToPrintInterface,\n  examPreparationReportContentInterface,\n  defaultExamPreparationReportContent,\n  examPreparationStateInterface,\n  FC_reportExamList,\n} from \"./ExamList\";\nimport ExamPerformance, {\n  ExamPerformanceToPrintInterface,\n  examPerformanceReportContentInterface,\n  defaultExamPerformanceContent,\n  examPerformanceStateInterface,\n  FC_reportExamPerformanceData,\n} from \"./ExamPerformance\";\nimport ExamPerformancePerDistrict, {\n  FC_ExamPerformancePerDistrictPropsData,\n} from \"./ExamPerformancePerDistrict\";\nimport ExamReportFilters from \"./ExamReportFilters\";\nimport ExamReportModals, { ModalForTypes } from \"./ExamReportModals\";\nimport ExamReportTitle from \"./ExamReportTitle\";\n\nexport interface reportCourseInterface {\n  course_name: string;\n  course_code: string;\n  description: string;\n  school_levels: string[];\n  course_id: string;\n  exam: {\n    questions: string[];\n    status: number;\n    period: string;\n    course: string;\n    exam_status: PrepareExamStatus;\n    termes: string;\n    questions_per_page: number;\n    exam_date: string;\n    start_time: string;\n    duration: number;\n    number_format: QuestionNumberFormat;\n    discription: string;\n    createdAt: string;\n    updatedAt: string;\n    id: string;\n  };\n}\n\nexport const getExamByCourseId = (\n  allExams: ExamItemResponse[],\n  course_id: string\n): ExamItemResponse | undefined => {\n  return allExams.find((item) => item.course === course_id);\n};\n\nexport const getPeriodById = (\n  periods: SessionPlanInterface[],\n  period_id: string\n): SessionPlanInterface | undefined => {\n  return periods.find((item) => item.session_plan_id === period_id);\n};\n\nexport const loadAllExams = (\n  examsList: ExamItemResponse[] | null,\n  selected_period: SessionPlanInterface | null\n): ExamItemResponse[] | null => {\n  let result: ExamItemResponse[] | null = examsList;\n  if (result && selected_period) {\n    result = result.filter(\n      (item) => item.period === selected_period?.session_plan_id\n    );\n  } else {\n    result = examsList;\n  }\n  return result;\n};\n\n// TYPES OF REPORTS ======================================\nexport enum reportTitleType {\n  APPLICANTS_PERFORMANCE = \"Exam report\",\n  EXAM_PREPARATION = \"List of prepared and not prepared exams\",\n  EXAM_PERFORMANCE = \"Exam performance\",\n  EXAMINATION_PROGRESS = \"List of complete & remaining exams\",\n  EXAM_DISTRICT_PERFORMANCE = \"Top 30 exams passed in\", // ADD DISTRICT NAME EX: Muhanga District\n  APPLICANTS_DISTRICT_PERFORMANCE = \"Top 30 applicants performance\", // ADD DISTRICT NAME EX: Muhanga District && EXAM NAME EX: Physics\n}\n\ninterface ExamReportProps {\n  auth: Auth;\n  periods: SessionPlanReducerInterface;\n  schoolLevels: schoolLevelsStoreInterface;\n  courses: course[] | null;\n  examsList: ExamItemResponse[] | null;\n  adminExamReport: ExamReportReducerType;\n  GetAllSessionPlans: Function;\n  loadEducationCategories: Function;\n  setSelectedEducationCategory: (\n    education_category: education_category\n  ) => void;\n  loadCourses: (callback: (loading: boolean) => void) => void;\n  loadExamsList: (callback: (loading: boolean) => void) => void;\n  loadDoneExam: (period_id: string, callback: Function) => void;\n  loadPerfomranceExam: (period_id: string, callback: Function) => void;\n  loadSchoolLevels: (callback: (loading: boolean) => void) => void;\n  loadCandidatesExamPerformance: (\n    dataBody: FilterParamType | null,\n    callback: Function\n  ) => void;\n  PushPopupAlert: (alert: PopupAlertData) => void;\n}\n\ninterface ExamReportState {\n  loading: boolean;\n  loadingCourses: boolean;\n  loadingExams: boolean;\n  downloading: boolean;\n  loadingDoneExam: boolean;\n  loadingCandidatesExamPerformance: boolean;\n  loadingExamPerformance: boolean;\n  loadingSettings: boolean;\n\n  // FILTER STATES =======================================\n  filterPreparation: \"prepared\" | \"not prepared\" | \"all\";\n  filterExamProgress: \"Done\" | \"Active\" | \"all\";\n  filterApplicantPerformance: ReportUserExamStatus | \"all\";\n  // END FILTER STATES =======================================\n\n  selectPeriod: boolean;\n  generateReportModal: {\n    reportType: \"EXCEL\" | \"PDF\";\n    status: boolean;\n  } | null;\n  districtModal: boolean;\n  selected_period: SessionPlanInterface | null;\n\n  // GENERATE EXCEL REPORT =======================================\n  // WHAT TO PRINT ########################################\n  reportTitle: reportTitleType;\n  // WHAT TITLE TO PRINT ########################################\n  excelReportTitle: string;\n  // SET DEFAULT CONTENT ########################################\n  // ############### EXAM PREPARATION ######################\n  examsToPrint: ExamPreparationToPrintInterface[] | null;\n  examPreparationReportContent: examPreparationReportContentInterface[];\n  // ############### EXAM PERFORMANCE ######################\n  examPerformanceToPrint: ExamPerformanceToPrintInterface[] | null;\n  examPerformanceReportContent: examPerformanceReportContentInterface[];\n  // ############### TOP 30 EXAM PERFORMANCE ######################\n  exam30PerformanceToPrint: ExamPerformanceToPrintInterface[] | null;\n  exam30PerformanceReportContent: examPerformanceReportContentInterface[];\n  // ############### EXAMINATION PROGRESS ######################\n  examinationProgressToPrint: ExaminationProgressToPrintInterface[] | null;\n  examinationProgressReportContent: ExaminationProgressReportContentInterface[];\n  // ############### CANDIDATE EXAM PERFORMANCE ######################\n  candidateExamPerformanceToPrint:\n    | CandidateExamPerformanceToPrintInterface[]\n    | null;\n\n  candidateExamPerformanceReportContent: CandidateExamPerformanceReportContentInterface[];\n  // ############### CANDIDATE EXAM PERFORMANCE ######################\n\n  candidate30ExamPerformanceToPrint:\n    | CandidateExamPerformanceToPrintInterface[]\n    | null;\n\n  candidate30ExamPerformanceReportContent: CandidateExamPerformanceReportContentInterface[];\n  // END GENERATE EXCEL REPORT =======================================\n}\n\nclass _ExamReport extends Component<ExamReportProps, ExamReportState> {\n  constructor(props: ExamReportProps) {\n    super(props);\n\n    this.state = {\n      loading: true,\n      loadingCourses: true,\n      loadingExams: true,\n      downloading: false,\n      loadingDoneExam: true,\n      loadingCandidatesExamPerformance: true,\n      loadingExamPerformance: true,\n      loadingSettings: true,\n      selectPeriod: false,\n      districtModal: false,\n\n      // FILTER STATES =======================================\n      filterPreparation: \"all\",\n      filterExamProgress: \"all\",\n      filterApplicantPerformance: \"all\",\n      // END FILTER STATES =======================================\n\n      generateReportModal: null,\n      selected_period: null,\n\n      // GENERATE EXCEL REPORT =======================================\n      // WHAT TO PRINT ########################################\n      reportTitle: reportTitleType.APPLICANTS_PERFORMANCE,\n      // WHAT TITLE TO PRINT ########################################\n      excelReportTitle: reportTitleType.APPLICANTS_PERFORMANCE,\n      // SET DEFAULT CONTENT ########################################\n      // ############### EXAM PREPARATION ######################\n      examsToPrint: null,\n      examPreparationReportContent: defaultExamPreparationReportContent,\n      // ############### EXAM PERFORMANCE ######################\n      examPerformanceToPrint: null,\n      examPerformanceReportContent: defaultExamPerformanceContent,\n      // ############### TOP 30 EXAM PERFORMANCE ######################\n      exam30PerformanceToPrint: null,\n      exam30PerformanceReportContent: defaultExamPerformanceContent,\n      // ############### EXAMINATION PROGRESS ######################\n      examinationProgressToPrint: null,\n      examinationProgressReportContent: defaultExaminationProgressContent,\n      // ############### CANDIDATE EXAM PERFORMANCE ######################\n      candidateExamPerformanceToPrint: null,\n\n      candidateExamPerformanceReportContent:\n        defaultCandidateExamPerformanceContent,\n      // ############### CANDIDATE EXAM PERFORMANCE ######################\n\n      candidate30ExamPerformanceToPrint: null,\n\n      candidate30ExamPerformanceReportContent:\n        defaultCandidateExamPerformanceContent,\n      // END GENERATE EXCEL REPORT =======================================\n    };\n  }\n\n  setLoading = (value: boolean) => {\n    this.setState({ loading: value });\n  };\n\n  setLoadingCourses = (value: boolean) => {\n    this.setState({ loadingCourses: value });\n  };\n\n  setLoadingExams = (value: boolean) => {\n    this.setState({ loadingExams: value });\n  };\n\n  setDownloading = (value: boolean) => {\n    this.setState({ downloading: value });\n  };\n\n  setLoadingDoneExam = (value: boolean) => {\n    this.setState({ loadingDoneExam: value });\n  };\n\n  setLoadingCandidatesExamPerformance = (value: boolean) => {\n    this.setState({ loadingCandidatesExamPerformance: value });\n  };\n\n  setLoadingExamPerformance = (value: boolean) => {\n    this.setState({ loadingExamPerformance: value });\n  };\n\n  setLoadingSettings = (value: boolean) => {\n    this.setState({ loadingSettings: value });\n  };\n\n  setSelectPeriod = (value: boolean) => {\n    this.setState({ selectPeriod: value });\n  };\n\n  setDistrictModal = (value: boolean) => {\n    this.setState({ districtModal: value });\n  };\n\n  setFilterPreparation = (value: \"prepared\" | \"not prepared\" | \"all\") => {\n    this.setState({ filterPreparation: value });\n  };\n\n  setFilterExamProgress = (value: \"Done\" | \"Active\" | \"all\") => {\n    this.setState({ filterExamProgress: value });\n  };\n\n  setFilterApplicantPerformance = (value: ReportUserExamStatus | \"all\") => {\n    this.setState({ filterApplicantPerformance: value });\n  };\n\n  setGenerateReportModal = (\n    value: {\n      reportType: \"EXCEL\" | \"PDF\";\n      status: boolean;\n    } | null\n  ) => {\n    this.setState({ generateReportModal: value });\n  };\n\n  setSelectedPeriod = (value: SessionPlanInterface | null) => {\n    this.setState({ selected_period: value });\n  };\n\n  setReportTitle = (value: reportTitleType) => {\n    this.setState({ reportTitle: value });\n  };\n\n  setExcelReportTitle = (value: string) => {\n    this.setState({ excelReportTitle: value });\n  };\n\n  setExamsToPrint = (value: ExamPreparationToPrintInterface[] | null) => {\n    this.setState({ examsToPrint: value });\n  };\n\n  setExamPreparationReportContent = (\n    value: examPreparationReportContentInterface[]\n  ) => {\n    this.setState({ examPreparationReportContent: value });\n  };\n  setExamPerformanceToPrint = (\n    value: ExamPerformanceToPrintInterface[] | null\n  ) => {\n    this.setState({ examPerformanceToPrint: value });\n  };\n  setExamPerformanceReportContent = (\n    value: examPerformanceReportContentInterface[]\n  ) => {\n    this.setState({ examPerformanceReportContent: value });\n  };\n\n  setExam30PerformanceToPrint = (\n    value: ExamPerformanceToPrintInterface[] | null\n  ) => {\n    this.setState({ exam30PerformanceToPrint: value });\n  };\n  setExam30PerformanceReportContent = (\n    value: examPerformanceReportContentInterface[]\n  ) => {\n    this.setState({ exam30PerformanceReportContent: value });\n  };\n  setExaminationProgressToPrint = (\n    value: ExaminationProgressToPrintInterface[] | null\n  ) => {\n    this.setState({ examinationProgressToPrint: value });\n  };\n  setExaminationProgressExamPerformanceReportContent = (\n    value: ExaminationProgressReportContentInterface[]\n  ) => {\n    this.setState({ examinationProgressReportContent: value });\n  };\n\n  setCandidateExamPerformanceToPrint = (\n    value: CandidateExamPerformanceToPrintInterface[] | null\n  ) => {\n    this.setState({ candidateExamPerformanceToPrint: value });\n  };\n\n  setCandidateExamPerformanceReportContent = (\n    value: CandidateExamPerformanceReportContentInterface[]\n  ) => {\n    this.setState({ candidateExamPerformanceReportContent: value });\n  };\n\n  setCandidate30ExamPerformanceToPrint = (\n    value: CandidateExamPerformanceToPrintInterface[] | null\n  ) => {\n    this.setState({ candidate30ExamPerformanceToPrint: value });\n  };\n\n  setCandidate30ExamPerformanceReportContent = (\n    value: CandidateExamPerformanceReportContentInterface[]\n  ) => {\n    this.setState({ candidate30ExamPerformanceReportContent: value });\n  };\n\n  selectDefaultSession = (allSession: SessionPlanInterface[]) => {\n    if (allSession.length > 0) {\n      let active_period = allSession.find((item) => item.is_active);\n      this.setSelectedPeriod(active_period ? active_period : allSession[0]);\n    }\n    this.setSelectPeriod(false);\n  };\n\n  componentDidMount = () => {\n    if (\n      this.props.periods.allSessionPlans === null ||\n      this.props.periods.allSessionPlans.length === 0\n    ) {\n      this.props.GetAllSessionPlans(\n        (status: boolean, msg: string, data?: SessionPlanInterface[]) => {\n          this.setLoadingSettings(status);\n          if (!status) {\n            if (!isEmptyOrSpaces(msg)) {\n              this.props.PushPopupAlert({\n                title: msg,\n                theme: PopupAlertTheme.danger,\n              });\n            }\n            if (\n              data &&\n              data.length > 0 &&\n              this.state.selected_period === null\n            ) {\n              this.selectDefaultSession(data);\n            }\n          }\n        }\n      );\n    } else if (this.state.selected_period === null) {\n      this.selectDefaultSession(this.props.periods.allSessionPlans);\n    }\n\n    if (\n      this.props.schoolLevels.education_categories === null ||\n      this.props.schoolLevels.education_categories.length\n    ) {\n      this.props.loadEducationCategories(\n        (status: boolean, msg: string, data?: education_category[]) => {\n          this.setLoadingSettings(status);\n          if (!status) {\n            if (!isEmptyOrSpaces(msg)) {\n              this.props.PushPopupAlert({\n                title: msg,\n                theme: PopupAlertTheme.danger,\n              });\n            }\n            if (\n              data &&\n              data.length > 0 &&\n              !this.props.schoolLevels.selectedEducationCategory\n            ) {\n              this.props.setSelectedEducationCategory(data[0]);\n            }\n          }\n        }\n      );\n    } else if (!this.props.schoolLevels.selectedEducationCategory) {\n      this.props.setSelectedEducationCategory(\n        this.props.schoolLevels.education_categories[0]\n      );\n    }\n\n    if (\n      this.props.schoolLevels.school_levels === null ||\n      this.props.schoolLevels.school_levels.length <= 0\n    ) {\n      this.props.loadSchoolLevels(this.setLoadingSettings);\n    }\n\n    if (\n      this.props.courses === null ||\n      (this.props.courses.length === 0 && this.state.loadingCourses)\n    ) {\n      this.props.loadCourses(this.setLoadingCourses);\n    } else if (this.state.loadingCourses) {\n      this.setLoadingCourses(false);\n    }\n\n    if (\n      this.props.examsList === null ||\n      (this.props.examsList.length === 0 && this.state.loadingExams)\n    ) {\n      this.props.loadExamsList(this.setLoadingExams);\n    } else if (this.state.loadingExams) {\n      this.setLoadingExams(false);\n    }\n\n    if (\n      this.props.auth.application_session &&\n      this.props.auth.application_session.session_plan_id &&\n      (this.props.adminExamReport.DoneExam === null ||\n        (this.props.adminExamReport.DoneExam.length === 0 &&\n          this.state.loadingDoneExam))\n    ) {\n      this.props.loadDoneExam(\n        this.props.auth.application_session.session_plan_id,\n        (status: boolean, msg: string) => {\n          if (!status) {\n            if (msg.length > 0) {\n              this.props.PushPopupAlert({\n                title: msg,\n                theme: PopupAlertTheme.danger,\n              });\n            }\n            this.setLoadingDoneExam(false);\n          }\n        }\n      );\n    } else if (this.state.loadingDoneExam) {\n      this.setLoadingDoneExam(false);\n    }\n\n    if (\n      this.props.auth.application_session &&\n      this.props.auth.application_session.session_plan_id &&\n      (this.props.adminExamReport.CandidatesExamPerformance === null ||\n        (this.props.adminExamReport.CandidatesExamPerformance.length === 0 &&\n          this.state.loadingCandidatesExamPerformance))\n    ) {\n      this.props.loadCandidatesExamPerformance(\n        {\n          order: \"desc\",\n          sortBy: ReportGetCandidatePerformanceSortTypes.DATE,\n          filter: {\n            period: this.props.auth.application_session.session_plan_id,\n          },\n        },\n        (status: boolean, msg: string) => {\n          if (!status) {\n            if (msg.length > 0) {\n              this.props.PushPopupAlert({\n                title: msg,\n                theme: PopupAlertTheme.danger,\n              });\n            }\n            this.setLoadingCandidatesExamPerformance(false);\n          }\n        }\n      );\n    } else if (this.state.loadingCandidatesExamPerformance) {\n      this.setLoadingCandidatesExamPerformance(false);\n    }\n\n    if (\n      this.props.auth.application_session &&\n      this.props.auth.application_session.session_plan_id &&\n      (this.props.adminExamReport.ExamPerformance === null ||\n        (this.props.adminExamReport.ExamPerformance.length === 0 &&\n          this.state.loadingExamPerformance))\n    ) {\n      this.props.loadPerfomranceExam(\n        this.props.auth.application_session.session_plan_id,\n        (status: boolean, msg: string) => {\n          if (!status) {\n            if (msg.length > 0) {\n              this.props.PushPopupAlert({\n                title: msg,\n                theme: PopupAlertTheme.danger,\n              });\n            }\n            this.setLoadingExamPerformance(false);\n          }\n        }\n      );\n    } else if (this.state.loadingExamPerformance) {\n      this.setLoadingExamPerformance(false);\n    }\n\n    if (this.state.excelReportTitle === this.state.reportTitle) {\n      let result: string = \"\";\n      if (\n        this.state.excelReportTitle ===\n          reportTitleType.EXAM_DISTRICT_PERFORMANCE &&\n        this.props.adminExamReport.reportDistrictId\n      ) {\n        result += ` ${this.props.adminExamReport.reportDistrictId.district_name} district`;\n      } else if (\n        this.state.excelReportTitle ===\n        reportTitleType.APPLICANTS_DISTRICT_PERFORMANCE\n      ) {\n        if (this.props.adminExamReport.reportDistrictId) {\n          result += ` in ${this.props.adminExamReport.reportDistrictId.district_name} district`;\n        }\n        if (this.props.adminExamReport.reportCourseId) {\n          result += ` in exam of ${this.props.adminExamReport.reportCourseId.course_name}(${this.props.adminExamReport.reportCourseId.course_code})`;\n        }\n      } else {\n        result = \"\";\n      }\n      this.setExcelReportTitle(this.state.excelReportTitle + result);\n      this.setLoading(false);\n    }\n  };\n\n  onPeriodChange = (period_id: string) => {\n    this.props.loadDoneExam(period_id, (status: boolean, msg: string) => {\n      this.setLoadingDoneExam(status);\n      if (!status) {\n        if (msg.length > 0) {\n          this.props.PushPopupAlert({\n            title: msg,\n            theme: PopupAlertTheme.danger,\n          });\n        }\n        this.setLoadingDoneExam(false);\n      }\n    });\n\n    this.props.loadPerfomranceExam(\n      period_id,\n      (status: boolean, msg: string) => {\n        this.setLoadingExamPerformance(status);\n        if (!status) {\n          if (msg.length > 0) {\n            this.props.PushPopupAlert({\n              title: msg,\n              theme: PopupAlertTheme.danger,\n            });\n          }\n          this.setLoadingExamPerformance(false);\n        }\n      }\n    );\n\n    this.props.loadCandidatesExamPerformance(\n      {\n        order: \"desc\",\n        sortBy: ReportGetCandidatePerformanceSortTypes.DATE,\n        filter: {\n          period: period_id,\n        },\n      },\n      (status: boolean, msg: string) => {\n        if (!status) {\n          if (msg.length > 0) {\n            this.props.PushPopupAlert({\n              title: msg,\n              theme: PopupAlertTheme.danger,\n            });\n          }\n          this.setLoadingCandidatesExamPerformance(false);\n        }\n      }\n    );\n  };\n\n  getLevelbyId = (level_id: string): school_level | undefined => {\n    if (this.props.schoolLevels.school_levels) {\n      return this.props.schoolLevels.school_levels.find(\n        (item) => item.school_level_id === level_id\n      );\n    }\n  };\n\n  getCourses = (): course[] | null => {\n    let result: course[] | null = [],\n      search_all: boolean = true;\n    if (this.props.courses) {\n      // FILTER BY EDICATION CATEGORY ====================\n      if (this.props.schoolLevels.selectedEducationCategory) {\n        for (const key in this.props.courses) {\n          if (Object.prototype.hasOwnProperty.call(this.props.courses, key)) {\n            if (this.props.courses[key].school_levels.length > 0) {\n              this.props.courses[key].school_levels.forEach((level) => {\n                let levelDetail = this.getLevelbyId(level);\n                if (\n                  levelDetail &&\n                  (levelDetail.education_institute.includes(\n                    this.props.schoolLevels.selectedEducationCategory!\n                      .education_institute_id\n                  ) ||\n                    levelDetail.education_institute.length <= 0)\n                ) {\n                  result && result.push(this.props.courses![key]);\n                }\n              });\n            } else {\n              result && result.push(this.props.courses![key]);\n            }\n          }\n        }\n      }\n      // RETURN DEFAULT VALUES ====================\n      else {\n        search_all = false;\n      }\n    }\n    return !search_all ? this.props.courses : result;\n  };\n\n  updateExamToPrint = () => {\n    // EXAM PREPARATION ######################\n    if (this.state.reportTitle === reportTitleType.EXAM_PREPARATION) {\n      if (\n        loadAllExams(this.props.examsList, this.state.selected_period) &&\n        this.getCourses() &&\n        this.props.periods.allSessionPlans\n      ) {\n        let data: examPreparationStateInterface[] = FC_reportExamList(\n          this.getCourses()!,\n          loadAllExams(this.props.examsList, this.state.selected_period)!\n        );\n        let arrayNew: ExamPreparationToPrintInterface[] = [];\n        let n: number = 1;\n        for (const key in data) {\n          if (Object.prototype.hasOwnProperty.call(data, key)) {\n            let school_level: string = \"\";\n            if (data[key].school_levels.length) {\n              data[key].school_levels.forEach((element, index) => {\n                let findLevel = this.getLevelbyId(element);\n                if (index === 0) {\n                  school_level = findLevel ? findLevel.school_level_name : \"\";\n                } else {\n                  school_level += findLevel\n                    ? \", \" + findLevel.school_level_name\n                    : \"\";\n                }\n              });\n            } else {\n              school_level = \"Any level\";\n            }\n            let dataArray: ExamPreparationToPrintInterface = {\n              course_id: n,\n              course_name: data[key].course_name,\n              course_code: data[key].course_code,\n              description: data[key].description,\n              school_levels: data[key].school_levels.length\n                ? school_level\n                : \"Any\",\n              exam_period: data[key].exam\n                ? getPeriodById(\n                    this.props.periods.allSessionPlans,\n                    data[key].exam!.period\n                  )\n                  ? getPeriodById(\n                      this.props.periods.allSessionPlans,\n                      data[key].exam!.period\n                    )!.session_plan_name\n                  : \"-\"\n                : \"-\",\n              exam_date: data[key].exam ? DATE(data[key].exam!.exam_date) : \"-\",\n              exam_time: data[key].exam ? data[key].exam!.start_time : \"-\",\n              exam_duration: data[key].exam\n                ? data[key].exam!.duration.toString()\n                : \"-\",\n              preparation_status: data[key].exam ? \"Prepared\" : \"Not prepared\",\n            };\n\n            for (const key in this.state.examPreparationReportContent) {\n              if (\n                Object.prototype.hasOwnProperty.call(\n                  this.state.examPreparationReportContent,\n                  key\n                )\n              ) {\n                if (!this.state.examPreparationReportContent[key].status) {\n                  delete dataArray[\n                    this.state.examPreparationReportContent[key].key\n                  ];\n                }\n              }\n            }\n            arrayNew.push(dataArray);\n            n++;\n          }\n        }\n        this.setExamsToPrint(arrayNew);\n        arrayNew = [];\n        n = 1;\n        // props.applicationsToPrint=;\n      }\n    }\n    // EXAM PERFORMANCE ######################\n    if (this.state.reportTitle === reportTitleType.EXAM_PERFORMANCE) {\n      if (\n        loadAllExams(this.props.examsList, this.state.selected_period) &&\n        this.getCourses() &&\n        this.props.adminExamReport.ExamPerformance &&\n        this.props.periods.allSessionPlans\n      ) {\n        let data: examPerformanceStateInterface[] =\n          FC_reportExamPerformanceData(\n            this.getCourses()!,\n            loadAllExams(this.props.examsList, this.state.selected_period)!,\n            this.props.adminExamReport.ExamPerformance\n          );\n        let arrayNew: ExamPerformanceToPrintInterface[] = [];\n        let n: number = 1;\n        for (const key in data) {\n          if (Object.prototype.hasOwnProperty.call(data, key)) {\n            let school_level: string = \"\";\n            if (data[key].school_levels.length) {\n              data[key].school_levels.forEach((element, index) => {\n                let findLevel = this.getLevelbyId(element);\n                if (index === 0) {\n                  school_level = findLevel ? findLevel.school_level_name : \"\";\n                } else {\n                  school_level += findLevel\n                    ? \", \" + findLevel.school_level_name\n                    : \"\";\n                }\n              });\n            } else {\n              school_level = \"Any level\";\n            }\n            let dataArray: ExamPerformanceToPrintInterface = {\n              course_id: n,\n              course_name: data[key].course_name,\n              course_code: data[key].course_code,\n              description: data[key].description,\n              school_levels: data[key].school_levels.length\n                ? school_level\n                : \"Any\",\n              exam_period: data[key].exam\n                ? getPeriodById(\n                    this.props.periods.allSessionPlans,\n                    data[key].exam!.period\n                  )\n                  ? getPeriodById(\n                      this.props.periods.allSessionPlans,\n                      data[key].exam!.period\n                    )!.session_plan_name\n                  : \"-\"\n                : \"-\",\n              exam_date: data[key].exam ? DATE(data[key].exam!.exam_date) : \"-\",\n              exam_time: data[key].exam ? data[key].exam!.start_time : \"-\",\n              exam_duration: data[key].exam\n                ? data[key].exam!.duration.toString()\n                : \"-\",\n              exam_performance: Number(data[key].exam_performance.toFixed(1)),\n            };\n\n            for (const key in this.state.examPerformanceReportContent) {\n              if (\n                Object.prototype.hasOwnProperty.call(\n                  this.state.examPerformanceReportContent,\n                  key\n                )\n              ) {\n                if (!this.state.examPerformanceReportContent[key].status) {\n                  delete dataArray[\n                    this.state.examPerformanceReportContent[key].key\n                  ];\n                }\n              }\n            }\n            arrayNew.push(dataArray);\n            n++;\n          }\n        }\n        this.setExamPerformanceToPrint(arrayNew);\n        arrayNew = [];\n        n = 1;\n        // props.applicationsToPrint=;\n      }\n    }\n    // TOP 30 EXAM PERFORMANCE ######################\n    if (this.state.reportTitle === reportTitleType.EXAM_DISTRICT_PERFORMANCE) {\n      if (\n        loadAllExams(this.props.examsList, this.state.selected_period) &&\n        this.getCourses() &&\n        this.props.adminExamReport.DoneExam &&\n        this.props.adminExamReport.CandidatesExamPerformance &&\n        this.props.adminExamReport.reportDistrictId &&\n        this.props.periods.allSessionPlans\n      ) {\n        let data = FC_ExamPerformancePerDistrictPropsData(\n          this.getCourses()!,\n          loadAllExams(this.props.examsList, this.state.selected_period)!,\n          this.props.adminExamReport.DoneExam,\n          this.props.adminExamReport.CandidatesExamPerformance,\n          this.props.adminExamReport.reportDistrictId.district_id\n        ).slice(0, 30);\n        let arrayNew: ExamPerformanceToPrintInterface[] = [];\n        let n: number = 1;\n        for (const key in data) {\n          if (Object.prototype.hasOwnProperty.call(data, key)) {\n            let school_level: string = \"\";\n            if (data[key].school_levels.length) {\n              data[key].school_levels.forEach((element, index) => {\n                let findLevel = this.getLevelbyId(element);\n                if (index === 0) {\n                  school_level = findLevel ? findLevel.school_level_name : \"\";\n                } else {\n                  school_level += findLevel\n                    ? \", \" + findLevel.school_level_name\n                    : \"\";\n                }\n              });\n            } else {\n              school_level = \"Any level\";\n            }\n            let dataArray: ExamPerformanceToPrintInterface = {\n              course_id: n,\n              course_name: data[key].course_name,\n              course_code: data[key].course_code,\n              description: data[key].description,\n              school_levels: data[key].school_levels.length\n                ? school_level\n                : \"Any\",\n              exam_period: data[key].exam\n                ? getPeriodById(\n                    this.props.periods.allSessionPlans,\n                    data[key].exam!.period\n                  )\n                  ? getPeriodById(\n                      this.props.periods.allSessionPlans,\n                      data[key].exam!.period\n                    )!.session_plan_name\n                  : \"-\"\n                : \"-\",\n              exam_date: data[key].exam ? DATE(data[key].exam!.exam_date) : \"-\",\n              exam_time: data[key].exam ? data[key].exam!.start_time : \"-\",\n              exam_duration: data[key].exam\n                ? data[key].exam!.duration.toString()\n                : \"-\",\n              exam_performance: 0,\n            };\n\n            for (const key in this.state.exam30PerformanceReportContent) {\n              if (\n                Object.prototype.hasOwnProperty.call(\n                  this.state.exam30PerformanceReportContent,\n                  key\n                )\n              ) {\n                if (!this.state.exam30PerformanceReportContent[key].status) {\n                  delete dataArray[\n                    this.state.exam30PerformanceReportContent[key].key\n                  ];\n                }\n              }\n            }\n            arrayNew.push(dataArray);\n            n++;\n          }\n        }\n        this.setExam30PerformanceToPrint(arrayNew);\n        arrayNew = [];\n        n = 1;\n      }\n    }\n    // EXAMINATION PROGRESS ######################\n    if (this.state.reportTitle === reportTitleType.EXAMINATION_PROGRESS) {\n      if (\n        loadAllExams(this.props.examsList, this.state.selected_period) &&\n        this.getCourses() &&\n        this.props.adminExamReport.DoneExam &&\n        this.props.periods.allSessionPlans\n      ) {\n        let data: examProgressStateInterface[] = FC_reportDoneExamList(\n          this.getCourses()!,\n          loadAllExams(this.props.examsList, this.state.selected_period)!,\n          this.props.adminExamReport.DoneExam\n        );\n        let arrayNew: ExaminationProgressToPrintInterface[] = [];\n        let n: number = 1;\n        for (const key in data) {\n          if (Object.prototype.hasOwnProperty.call(data, key)) {\n            let school_level: string = \"\";\n            if (data[key].school_levels.length) {\n              data[key].school_levels.forEach((element, index) => {\n                let findLevel = this.getLevelbyId(element);\n                if (index === 0) {\n                  school_level = findLevel ? findLevel.school_level_name : \"\";\n                } else {\n                  school_level += findLevel\n                    ? \", \" + findLevel.school_level_name\n                    : \"\";\n                }\n              });\n            } else {\n              school_level = \"Any level\";\n            }\n            let dataArray: ExaminationProgressToPrintInterface = {\n              course_id: n,\n              course_name: data[key].course_name,\n              course_code: data[key].course_code,\n              description: data[key].description,\n              school_levels: data[key].school_levels.length\n                ? school_level\n                : \"Any\",\n              exam_period: data[key].exam\n                ? getPeriodById(\n                    this.props.periods.allSessionPlans,\n                    data[key].exam!.period\n                  )\n                  ? getPeriodById(\n                      this.props.periods.allSessionPlans,\n                      data[key].exam!.period\n                    )!.session_plan_name\n                  : \"-\"\n                : \"-\",\n              exam_date: data[key].exam ? DATE(data[key].exam!.exam_date) : \"-\",\n              exam_time: data[key].exam ? data[key].exam!.start_time : \"-\",\n              exam_duration: data[key].exam\n                ? data[key].exam!.duration.toString()\n                : \"-\",\n              exam_status:\n                data[key].preparation_status === \"Done\"\n                  ? \"Completed\"\n                  : data[key].preparation_status,\n            };\n\n            for (const key in this.state.examinationProgressReportContent) {\n              if (\n                Object.prototype.hasOwnProperty.call(\n                  this.state.examinationProgressReportContent,\n                  key\n                )\n              ) {\n                if (!this.state.examinationProgressReportContent[key].status) {\n                  delete dataArray[\n                    this.state.examinationProgressReportContent[key].key\n                  ];\n                }\n              }\n            }\n            arrayNew.push(dataArray);\n            n++;\n          }\n        }\n        this.setExaminationProgressToPrint(arrayNew);\n        arrayNew = [];\n        n = 1;\n        // props.applicationsToPrint=;\n      }\n    }\n    // CANDIDATE EXAM PERFORMANCE ######################\n    if (this.state.reportTitle === reportTitleType.APPLICANTS_PERFORMANCE) {\n      if (\n        this.getCourses() &&\n        this.props.adminExamReport.CandidatesExamPerformance &&\n        this.props.periods.allSessionPlans\n      ) {\n        let data: candidatePerfomranceStateInterface[] =\n          FC_reportCandidatePerformanceData(\n            this.getCourses()!,\n            this.props.adminExamReport.CandidatesExamPerformance,\n            this.props.adminExamReport.reportCourseId\n              ? this.props.adminExamReport.reportCourseId.course_id\n              : \"all\"\n          );\n        let arrayNew: CandidateExamPerformanceToPrintInterface[] = [];\n        let n: number = 1;\n        for (const key in data) {\n          if (Object.prototype.hasOwnProperty.call(data, key)) {\n            let school_level: string = \"\";\n            if (data[key].school_levels.length) {\n              data[key].school_levels.forEach((element, index) => {\n                let findLevel = this.getLevelbyId(element);\n                if (index === 0) {\n                  school_level = findLevel ? findLevel.school_level_name : \"\";\n                } else {\n                  school_level += findLevel\n                    ? \", \" + findLevel.school_level_name\n                    : \"\";\n                }\n              });\n            } else {\n              school_level = \"Any level\";\n            }\n            let dataArray: CandidateExamPerformanceToPrintInterface = {\n              applicant_id: n,\n              course_name: data[key].course_name,\n              course_code: data[key].course_code,\n              description: data[key].description,\n              school_levels: data[key].school_levels.length\n                ? school_level\n                : \"Any\",\n              exam_period: getPeriodById(\n                this.props.periods.allSessionPlans,\n                data[key].exam.period\n              )\n                ? getPeriodById(\n                    this.props.periods.allSessionPlans,\n                    data[key].exam.period\n                  )!.session_plan_name\n                : \"-\",\n              exam_date: DATE(data[key].exam.exam_date),\n              exam_start_time: timestampToDate(\n                Number(data[key].exam.start_time)\n              ).timeAMPM,\n              exam_end_time: timestampToDate(Number(data[key].exam.end_time))\n                .timeAMPM,\n              performance_status: capitalizeFirstLetter(\n                displayStatus(data[key].exam_stastus)\n              ),\n              applicant_name: capitalizeFirstLetter(data[key].user_name),\n              national_id: data[key].national_id,\n              email: data[key].user_email,\n              phone: data[key].user_phone,\n              marks:\n                data[key].exam_stastus !== ReportUserExamStatus.Editing\n                  ? Number(data[key].user_total_marks.toFixed(1)) + \"%\"\n                  : \"-\",\n            };\n\n            for (const key in this.state\n              .candidateExamPerformanceReportContent) {\n              if (\n                Object.prototype.hasOwnProperty.call(\n                  this.state.candidateExamPerformanceReportContent,\n                  key\n                )\n              ) {\n                if (\n                  !this.state.candidateExamPerformanceReportContent[key].status\n                ) {\n                  delete dataArray[\n                    this.state.candidateExamPerformanceReportContent[key].key\n                  ];\n                }\n              }\n            }\n            arrayNew.push(dataArray);\n            n++;\n          }\n        }\n        this.setCandidateExamPerformanceToPrint(arrayNew);\n        arrayNew = [];\n        n = 1;\n        // props.applicationsToPrint=;\n      }\n    }\n    // 30 CANDIDATE EXAM PERFORMANCE ######################\n    if (\n      this.state.reportTitle === reportTitleType.APPLICANTS_DISTRICT_PERFORMANCE\n    ) {\n      if (\n        this.getCourses() &&\n        this.props.adminExamReport.CandidatesExamPerformance &&\n        this.props.periods.allSessionPlans\n      ) {\n        let data: candidatePerfomranceStateInterface[] =\n          FC_CandiadtePerformancePerDistrictFilter(\n            FC_reportCandidatePerformanceData(\n              this.getCourses()!,\n              this.props.adminExamReport.CandidatesExamPerformance,\n              this.props.adminExamReport.reportCourseId\n                ? this.props.adminExamReport.reportCourseId.course_id\n                : \"all\"\n            ),\n            this.props.adminExamReport.reportDistrictId\n              ? this.props.adminExamReport.reportDistrictId.district_id\n              : null,\n            this.props.adminExamReport.reportCourseId\n              ? this.props.adminExamReport.reportCourseId.course_id\n              : null,\n            this.state.filterApplicantPerformance\n          ).slice(0, 30);\n        let arrayNew: CandidateExamPerformanceToPrintInterface[] = [];\n        let n: number = 1;\n        for (const key in data) {\n          if (Object.prototype.hasOwnProperty.call(data, key)) {\n            let school_level: string = \"\";\n            if (data[key].school_levels.length) {\n              data[key].school_levels.forEach((element, index) => {\n                let findLevel = this.getLevelbyId(element);\n                if (index === 0) {\n                  school_level = findLevel ? findLevel.school_level_name : \"\";\n                } else {\n                  school_level += findLevel\n                    ? \", \" + findLevel.school_level_name\n                    : \"\";\n                }\n              });\n            } else {\n              school_level = \"Any level\";\n            }\n            let dataArray: CandidateExamPerformanceToPrintInterface = {\n              applicant_id: n,\n              course_name: data[key].course_name,\n              course_code: data[key].course_code,\n              description: data[key].description,\n              school_levels: data[key].school_levels.length\n                ? school_level\n                : \"Any\",\n              exam_period: getPeriodById(\n                this.props.periods.allSessionPlans,\n                data[key].exam.period\n              )\n                ? getPeriodById(\n                    this.props.periods.allSessionPlans,\n                    data[key].exam.period\n                  )!.session_plan_name\n                : \"-\",\n              exam_date: DATE(data[key].exam.exam_date),\n              exam_start_time: timestampToDate(\n                Number(data[key].exam.start_time)\n              ).timeAMPM,\n              exam_end_time: timestampToDate(Number(data[key].exam.end_time))\n                .timeAMPM,\n              performance_status: capitalizeFirstLetter(\n                displayStatus(data[key].exam_stastus)\n              ),\n              applicant_name: capitalizeFirstLetter(data[key].user_name),\n              national_id: data[key].national_id,\n              email: data[key].user_email,\n              phone: data[key].user_phone,\n              marks:\n                data[key].exam_stastus !== ReportUserExamStatus.Editing\n                  ? Number(data[key].user_total_marks.toFixed(1)) + \"%\"\n                  : \"-\",\n            };\n\n            for (const key in this.state\n              .candidate30ExamPerformanceReportContent) {\n              if (\n                Object.prototype.hasOwnProperty.call(\n                  this.state.candidate30ExamPerformanceReportContent,\n                  key\n                )\n              ) {\n                if (\n                  !this.state.candidate30ExamPerformanceReportContent[key]\n                    .status\n                ) {\n                  delete dataArray[\n                    this.state.candidate30ExamPerformanceReportContent[key].key\n                  ];\n                }\n              }\n            }\n            arrayNew.push(dataArray);\n            n++;\n          }\n        }\n        this.setCandidate30ExamPerformanceToPrint(arrayNew);\n        arrayNew = [];\n        n = 1;\n        // props.applicationsToPrint=;\n      }\n    }\n  };\n\n  addToTitle = (): string => {\n    let result: string = \"\";\n\n    if (\n      this.state.reportTitle === reportTitleType.EXAM_DISTRICT_PERFORMANCE &&\n      this.props.adminExamReport.reportDistrictId\n    ) {\n      result += ` ${this.props.adminExamReport.reportDistrictId.district_name} district`;\n    } else if (\n      this.state.reportTitle === reportTitleType.APPLICANTS_DISTRICT_PERFORMANCE\n    ) {\n      if (this.props.adminExamReport.reportDistrictId) {\n        result += ` in ${this.props.adminExamReport.reportDistrictId.district_name} district`;\n      }\n      if (this.props.adminExamReport.reportCourseId) {\n        result += ` in exam of ${this.props.adminExamReport.reportCourseId.course_name}(${this.props.adminExamReport.reportCourseId.course_code})`;\n      }\n    } else {\n      result = \"\";\n    }\n    return result;\n  };\n\n  downlaodPDF = async () => {\n    if (!document.querySelectorAll(\"#report_content tbody tr\").length) {\n      this.props.PushPopupAlert({\n        title: `Can't generate Report of empty Data`,\n        theme: PopupAlertTheme.warning,\n      });\n      return false;\n    }\n\n    if (this.state.selected_period) {\n      const table: HTMLElement | null =\n        document.getElementById(\"report_content\");\n      const reportSettings: reportSettingsInterface = {\n        doneBy: this.props.auth.user.fname + \" \" + this.props.auth.user.lname,\n        title: \"Exam Report\",\n        subjectTitle: \"Subject\",\n        subject: `${this.state.reportTitle} ${this.addToTitle()}`,\n        period: this.state.selected_period.session_plan_name,\n        footer: \"Online Teacher Recruitment\",\n        institute: this.props.schoolLevels.selectedEducationCategory\n          ? this.props.schoolLevels.selectedEducationCategory\n              .education_category_title\n          : \"All institute\",\n        orientation:\n          this.state.reportTitle === reportTitleType.APPLICANTS_PERFORMANCE ||\n          this.state.reportTitle ===\n            reportTitleType.APPLICANTS_DISTRICT_PERFORMANCE\n            ? \"l\"\n            : \"p\",\n      };\n      table && (await generatePDF(reportSettings, table, this.setDownloading));\n    }\n  };\n\n  render() {\n    if (this.state.loading || this.props.periods.allSessionPlans === null) {\n      return (\n        <div className=\"text-center mt-7 font-bold text-4xl text-gray-400 animate-pulse\">\n          Loading data...\n        </div>\n      );\n    }\n\n    if (this.props.periods.allSessionPlans.length === 0) {\n      return <NoSession />;\n    }\n\n    return (\n      <div>\n        <SideNavigation>\n          <div className=\"flex flex-col mb-4\">\n            <span className=\"text-sm text-gray-600 mb-2\">\n              Education categories:\n            </span>\n            {this.props.schoolLevels.education_categories === null ? (\n              <Loading />\n            ) : this.props.schoolLevels.education_categories.length === 0 ? (\n              <span>No result found</span>\n            ) : (\n              this.props.schoolLevels.education_categories.map((item, i) => (\n                <div\n                  onClick={() => {\n                    this.props.setSelectedEducationCategory(item);\n                    this.updateExamToPrint();\n                  }}\n                  key={i + 1}\n                  className={`border rounded px-2 py-2 mb-2 cursor-pointer ${\n                    this.props.schoolLevels.selectedEducationCategory !==\n                      null &&\n                    this.props.schoolLevels.selectedEducationCategory\n                      .education_institute_id === item.education_institute_id\n                      ? \"bg-blue-600 text-white hover:bg-blue-100 hover:text-blue-600 hover:border-blue-500\"\n                      : \"hover:bg-blue-100 hover:text-blue-600 hover:border-blue-500\"\n                  } font-bold flex flex-row items-center gap-2`}\n                >\n                  {this.props.schoolLevels.selectedEducationCategory !== null &&\n                  this.props.schoolLevels.selectedEducationCategory\n                    .education_institute_id === item.education_institute_id ? (\n                    <MdRadioButtonChecked />\n                  ) : (\n                    <MdRadioButtonUnchecked />\n                  )}\n                  <span>{item.education_category_title}</span>\n                </div>\n              ))\n            )}\n          </div>\n          <div className=\"\">\n            <div className=\"text-gray-600 text-sm mb-2\">Selected period:</div>\n            <div\n              onClick={() => this.setSelectPeriod(true)}\n              className=\"font-bold bg-blue-50 border border-blue-200 rounded py-2 cursor-pointer text-xs px-2 hover:underline justify-between text-blue-600  mb-4 w-full flex flex-row items-center animate__animated animate__zoomIn\"\n            >\n              {this.state.selected_period !== null\n                ? `${this.state.selected_period.session_plan_name}`\n                : \"Filter by period\"}\n              <FiEdit className=\"text-lg text-blue-600\" />\n            </div>\n          </div>\n          <ExamReportFilters\n            reportTitle={this.state.reportTitle}\n            filterPreparation={this.state.filterPreparation}\n            setFilterPreparation={this.setFilterPreparation}\n            filterExamProgress={this.state.filterExamProgress}\n            setFilterExamProgress={this.setFilterExamProgress}\n            filterApplicantPerformance={this.state.filterApplicantPerformance}\n            setFilterApplicantPerformance={this.setFilterApplicantPerformance}\n          />\n        </SideNavigation>\n\n        {/* --------------------------------------------------------------------- */}\n\n        {/* REPORT TITLE CONTROLLERS ============================================ */}\n        <ExamReportTitle\n          downloading={this.state.downloading}\n          dataToPrint={loadAllExams(\n            this.props.examsList,\n            this.state.selected_period\n          )}\n          downlaodPDF={this.downlaodPDF}\n          reportTitle={this.state.reportTitle}\n          setReportTitle={this.setReportTitle}\n          setGenerateReportModal={this.setGenerateReportModal}\n          generateReportModal={this.state.generateReportModal}\n          excelReportTitle={this.state.excelReportTitle}\n          setExcelReportTitle={this.setExcelReportTitle}\n          updateExamToPrint={this.updateExamToPrint}\n          // EXAM PREPARATION ######################\n          examsToPrint={this.state.examsToPrint}\n          examPreparationReportContent={this.state.examPreparationReportContent}\n          setExamPreparationReportContent={this.setExamPreparationReportContent}\n          // EXAM PERFORMANCE ######################\n          examPerformanceToPrint={this.state.examPerformanceToPrint}\n          examPerformanceReportContent={this.state.examPerformanceReportContent}\n          setExamPerformanceReportContent={this.setExamPerformanceReportContent}\n          // TOP 30 EXAM PERFORMANCE ######################\n          exam30PerformanceToPrint={this.state.exam30PerformanceToPrint}\n          exam30PerformanceReportContent={\n            this.state.exam30PerformanceReportContent\n          }\n          setExam30PerformanceReportContent={\n            this.setExam30PerformanceReportContent\n          }\n          // EXAMINATION PROGRESS ######################\n          examinationProgressToPrint={this.state.examinationProgressToPrint}\n          examinationProgressReportContent={\n            this.state.examinationProgressReportContent\n          }\n          setExaminationProgressExamPerformanceReportContent={\n            this.setExaminationProgressExamPerformanceReportContent\n          }\n          // CANDIDATE EXAM PERFORMANCE ######################\n          candidateExamPerformanceToPrint={\n            this.state.candidateExamPerformanceToPrint\n          }\n          candidateExamPerformanceReportContent={\n            this.state.candidateExamPerformanceReportContent\n          }\n          setCandidateExamPerformanceReportContent={\n            this.setCandidateExamPerformanceReportContent\n          }\n          // CANDIDATE EXAM PERFORMANCE ######################\n          candidate30ExamPerformanceToPrint={\n            this.state.candidate30ExamPerformanceToPrint\n          }\n          candidate30ExamPerformanceReportContent={\n            this.state.candidate30ExamPerformanceReportContent\n          }\n          setCandidate30ExamPerformanceReportContent={\n            this.setCandidate30ExamPerformanceReportContent\n          }\n          thisPeriod={\n            this.state.selected_period\n              ? this.state.selected_period.session_plan_id\n              : \"\"\n          }\n        />\n\n        {/* --------------------------------------------------------------------- */}\n\n        {/* EXAM LIST CONTROLLERS ============================================ */}\n        {this.state.reportTitle === reportTitleType.EXAM_PREPARATION &&\n          this.props.periods.allSessionPlans && (\n            <ExamList\n              loading={\n                this.state.loadingExams ||\n                this.state.loadingCourses ||\n                this.state.loadingDoneExam\n              }\n              examsListData={loadAllExams(\n                this.props.examsList,\n                this.state.selected_period\n              )}\n              courseListData={this.getCourses()}\n              thisPeriod={this.props.periods.allSessionPlans}\n              filterPreparation={this.state.filterPreparation}\n            />\n          )}\n        {/* EXAM LIST CONTROLLERS ============================================ */}\n\n        {/* --------------------------------------------------------------------- */}\n\n        {/* DONE & REMAING EXAM LIST CONTROLLERS ============================================ */}\n        {this.state.reportTitle === reportTitleType.EXAMINATION_PROGRESS &&\n          this.props.periods.allSessionPlans && (\n            <DoneExamList\n              loading={\n                this.state.loadingExams\n                  ? true\n                  : this.state.loadingCourses\n                  ? true\n                  : this.state.loadingDoneExam\n                  ? true\n                  : false\n              }\n              examsListData={loadAllExams(\n                this.props.examsList,\n                this.state.selected_period\n              )}\n              courseListData={this.getCourses()}\n              thisPeriod={this.props.periods.allSessionPlans}\n              doneExamsData={this.props.adminExamReport.DoneExam}\n              filterExamProgress={this.state.filterExamProgress}\n            />\n          )}\n        {/* DONE & REMAING EXAM LIST CONTROLLERS ============================================ */}\n\n        {/* --------------------------------------------------------------------- */}\n\n        {/* EXAM PERFORMANCE CONTROLLERS ============================================ */}\n        {this.state.reportTitle === reportTitleType.EXAM_PERFORMANCE &&\n          this.props.periods.allSessionPlans && (\n            <ExamPerformance\n              loading={\n                this.state.loadingExams\n                  ? true\n                  : this.state.loadingCourses\n                  ? true\n                  : this.state.loadingExamPerformance\n                  ? true\n                  : false\n              }\n              examsListData={loadAllExams(\n                this.props.examsList,\n                this.state.selected_period\n              )}\n              courseListData={this.getCourses()}\n              thisPeriod={this.props.periods.allSessionPlans}\n              examsPerformanceData={this.props.adminExamReport.ExamPerformance} // doneExamsData={props.adminExamReport.DoneExam}\n            />\n          )}\n        {/* END EXAM PERFORMANCE CONTROLLERS ============================================ */}\n\n        {/* --------------------------------------------------------------------- */}\n\n        {/* EXAM PERFORMANCE PER DISTRICT LIST CONTROLLERS ============================================ */}\n        {this.state.reportTitle === reportTitleType.EXAM_DISTRICT_PERFORMANCE &&\n        this.props.periods.allSessionPlans &&\n        this.props.adminExamReport.reportDistrictId ? (\n          <ExamPerformancePerDistrict\n            loading={\n              this.state.loadingExams\n                ? true\n                : this.state.loadingCourses\n                ? true\n                : this.state.loadingCandidatesExamPerformance\n                ? true\n                : false\n            }\n            examsListData={loadAllExams(\n              this.props.examsList,\n              this.state.selected_period\n            )}\n            doneExamsData={this.props.adminExamReport.DoneExam}\n            courseListData={this.getCourses()}\n            thisPeriod={this.props.periods.allSessionPlans}\n            candidatePerformanceData={\n              this.props.adminExamReport.CandidatesExamPerformance\n            }\n            thisDistrict={this.props.adminExamReport.reportDistrictId}\n          />\n        ) : (\n          this.state.reportTitle ===\n            reportTitleType.EXAM_DISTRICT_PERFORMANCE && (\n            <NoResult\n              theme={NoResultThemes.Light}\n              value={\"Select district to view data\"}\n              component={\n                <div\n                  onClick={() => this.setDistrictModal(true)}\n                  className=\"btn bg-blue-50 border border-blue-300 text-blue-600 cursor-pointer hover:bg-blue-100 flex flex-row items-center justify-center gap-2 text-sm \"\n                >\n                  <BiFilterAlt className=\"text-xl\" />\n                  Filter by district\n                </div>\n              }\n            />\n          )\n        )}\n        {/* EXAM PERFORMANCE PER DISTRICT LIST CONTROLLERS ============================================  */}\n\n        {/* --------------------------------------------------------------------- */}\n\n        {/* APPLICANTS PERFORMANCE EXAM LIST CONTROLLERS ============================================ */}\n        {this.state.reportTitle === reportTitleType.APPLICANTS_PERFORMANCE &&\n          this.props.periods.allSessionPlans && (\n            <CandidatePerformance\n              loading={\n                this.state.loadingExams\n                  ? true\n                  : this.state.loadingCourses\n                  ? true\n                  : this.state.loadingCandidatesExamPerformance\n                  ? true\n                  : false\n              }\n              examsListData={loadAllExams(\n                this.props.examsList,\n                this.state.selected_period\n              )}\n              courseListData={this.getCourses()}\n              thisPeriod={this.props.periods.allSessionPlans}\n              candidatePerformanceData={\n                this.props.adminExamReport.CandidatesExamPerformance\n              }\n              filterApplicantPerformance={this.state.filterApplicantPerformance}\n            />\n          )}\n        {/* APPLICANTS PERFORMANCE EXAM LIST CONTROLLERS ============================================  */}\n\n        {/* --------------------------------------------------------------------- */}\n\n        {/* APPLICANTS PERFORMANCE EXAM PER DISTRICT LIST CONTROLLERS ============================================ */}\n        {this.state.reportTitle ===\n          reportTitleType.APPLICANTS_DISTRICT_PERFORMANCE &&\n          this.props.periods.allSessionPlans && (\n            <CandiadtePerformancePerDistrict\n              loading={\n                this.state.loadingExams\n                  ? true\n                  : this.state.loadingCourses\n                  ? true\n                  : this.state.loadingCandidatesExamPerformance\n                  ? true\n                  : false\n              }\n              examsListData={loadAllExams(\n                this.props.examsList,\n                this.state.selected_period\n              )}\n              courseListData={this.getCourses()}\n              thisPeriod={this.props.periods.allSessionPlans}\n              candidatePerformanceData={\n                this.props.adminExamReport.CandidatesExamPerformance\n              }\n              filterApplicantPerformance={this.state.filterApplicantPerformance}\n            />\n          )}\n        {/* APPLICANTS PERFORMANCE EXAM PER DISTRICT LIST CONTROLLERS ============================================  */}\n\n        {/* --------------------------------------------------------------------- */}\n\n        {/* CHANGE DISTRICT FILTER MODAL CONTROLLERS ============================================ */}\n        {this.state.districtModal && (\n          <ExamReportModals\n            modalFor={ModalForTypes.choose_district}\n            modalState={this.state.districtModal}\n            changeModalState={this.setDistrictModal}\n            districtId={\n              this.props.adminExamReport.reportDistrictId\n                ? this.props.adminExamReport.reportDistrictId.district_id\n                : \"all\"\n            }\n            reportTitle={this.state.reportTitle}\n          />\n        )}\n        {/* END CHANGE DISTRICT FILTER MODAL CONTROLLERS ============================================ */}\n\n        {/* --------------------------------------------------------------------- */}\n\n        {/* MODAL CONTROLLERS ============================================ */}\n        <ExamReportModals\n          modalState={this.state.selectPeriod}\n          changeModalState={this.setSelectPeriod}\n          applicationPeriods={this.props.periods.allSessionPlans}\n          selected_period={this.state.selected_period}\n          setSelectedPeriod={this.setSelectedPeriod}\n          onPeriodChange={this.onPeriodChange}\n          modalFor={ModalForTypes.period}\n        />\n        {/* END MODAL CONTROLLERS ============================================ */}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = ({\n  auth,\n  sessionPlan,\n  schoolLevels,\n  course,\n  prepareExam,\n  adminExamReport,\n}: StoreState): {\n  auth: Auth;\n  periods: SessionPlanReducerInterface;\n  schoolLevels: schoolLevelsStoreInterface;\n  courses: course[] | null;\n  examsList: ExamItemResponse[] | null;\n  adminExamReport: ExamReportReducerType;\n} => {\n  return {\n    auth,\n    periods: sessionPlan,\n    schoolLevels,\n    courses: course.courses,\n    examsList: prepareExam.examsList,\n    adminExamReport,\n  };\n};\n\nexport const ExamReport = connect(mapStateToProps, {\n  setSelectedPeriod,\n  loadCourses,\n  loadExamsList,\n  GetAllSessionPlans,\n  loadEducationCategories,\n  loadDoneExam,\n  loadSchoolLevels,\n  loadPerfomranceExam,\n  loadCandidatesExamPerformance,\n  setSelectedEducationCategory,\n  PushPopupAlert,\n})(_ExamReport);\n","import React, { Fragment, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport Loading from \"../../../components/Loading/Loading\";\nimport {\n  course,\n  CandidatesFailedSucceeded,\n  ReportUserExamStatus,\n  SessionPlanInterface,\n} from \"../../../interfaces\";\nimport { ExamItemResponse } from \"../../../interfaces/prepare_exam\";\nimport { StoreState } from \"../../../reducers\";\nimport { ExamReportReducerType } from \"../../../reducers/exam_report\";\nimport { capitalizeFirstLetter } from \"../../../shared/dataTest\";\nimport { DATE, timestampToDate } from \"../../../utils/functions\";\nimport {\n  candidatePerfomranceStateInterface,\n  controlRowsByStatus,\n  FC_reportCandidatePerformanceData,\n  searchCandidatePerformanceData,\n} from \"./CandidatePerformance\";\nimport { displayStatus } from \"./DoneExamList\";\nimport { getPeriodById } from \"./ExamReport\";\n\nexport const FC_CandiadtePerformancePerDistrictFilter = (\n  dataList: candidatePerfomranceStateInterface[],\n  district_id: string | null = null,\n  course_id: string | null = null,\n  thisValue: ReportUserExamStatus | \"all\" = \"all\"\n): candidatePerfomranceStateInterface[] => {\n  let result: candidatePerfomranceStateInterface[] = [];\n  if (thisValue === \"all\") {\n    result = dataList;\n  } else {\n    result = dataList.filter((item) => item.exam_stastus === thisValue);\n  }\n\n  if (district_id) {\n    result = result.filter(\n      (item) =>\n        item.exam.exam_location &&\n        item.exam.exam_location.district_id === district_id\n    );\n  }\n  if (course_id) {\n    result = result.filter((item) => item.course_id === course_id);\n  }\n\n  // SORTING ARRAY FROM MAX TO MIN ==========================\n  let swap: candidatePerfomranceStateInterface;\n  for (let i = 0; i < result.length; i++) {\n    for (let j = i; j < result.length; j++) {\n      if (result[j].user_total_marks > result[i].user_total_marks) {\n        swap = result[j];\n        result[j] = result[i];\n        result[i] = swap;\n      }\n    }\n  }\n  return result;\n};\n\ntype CandiadtePerformancePerDistrictProps = {\n  loading: boolean;\n  examsListData: ExamItemResponse[] | null;\n  courseListData: course[] | null;\n  thisPeriod: SessionPlanInterface[];\n  candidatePerformanceData: CandidatesFailedSucceeded[] | null;\n\n  // redux props ============\n  adminExamReport: ExamReportReducerType;\n  // FOR APPLICANT PERFORMANCE PROPS\n  filterApplicantPerformance: ReportUserExamStatus | \"all\";\n};\n\nconst CandiadtePerformancePerDistrict: React.FC<\n  CandiadtePerformancePerDistrictProps\n> = (props) => {\n  const [searchInput, setSearchInput] = useState<string>(\"\");\n\n  return (\n    <Fragment>\n      <div className=\"bg-white my-4\">\n        <div className=\"w-full px-2 py-2\">\n          <input\n            onChange={(e) => setSearchInput(e.target.value)}\n            type=\"text\"\n            value={searchInput}\n            placeholder=\"Search...\"\n            className=\"w-full bg-gray-100 py-2 px-3 rounded\"\n            disabled={\n              props.courseListData &&\n              props.candidatePerformanceData &&\n              FC_CandiadtePerformancePerDistrictFilter(\n                FC_reportCandidatePerformanceData(\n                  props.courseListData,\n                  props.candidatePerformanceData,\n                  props.adminExamReport.reportCourseId\n                    ? props.adminExamReport.reportCourseId.course_id\n                    : \"all\"\n                ),\n                props.adminExamReport.reportDistrictId\n                  ? props.adminExamReport.reportDistrictId.district_id\n                  : null,\n                props.adminExamReport.reportCourseId\n                  ? props.adminExamReport.reportCourseId.course_id\n                  : null,\n                props.filterApplicantPerformance\n              ).length <= 0\n                ? true\n                : false\n            }\n          />\n        </div>\n        <div className=\"w-full overflow-x-auto\">\n          <table className=\"w-full shadow\" id=\"report_content\">\n            <thead className=\"bg-white border-b-2 border-gray-300 text-gray-600 font-bold text-sm\">\n              <tr>\n                <td className=\"px-2 py-2\">#</td>\n                <td className=\"px-2 py-2\">Applicants</td>\n                <td className=\"px-2 py-2\">National ID</td>\n                <td className=\"px-2 py-2\">Email</td>\n                <td className=\"px-2 py-2\">Phone</td>\n                <td className=\"px-2 py-2\">\n                  <div className=\"flex items-center gap-1\">Exam</div>\n                </td>\n                <td className=\"px-2 py-2\">Exam period</td>\n                <td className=\"px-2 py-2\">Exam date</td>\n                <td className=\"px-2 py-2\">Exam start time</td>\n                <td className=\"px-2 py-2\">Exam end time</td>\n                <td className=\"px-2 py-2\">\n                  <div className=\"flex items-center gap-1\">Marks</div>\n                </td>\n                <td className=\"px-2 py-2\">Status</td>\n              </tr>\n            </thead>\n            <tbody>\n              {props.courseListData === null || props.loading ? (\n                <tr>\n                  <td colSpan={12} className=\"px-2 py-2\">\n                    <Loading />\n                  </td>\n                </tr>\n              ) : props.candidatePerformanceData &&\n                FC_CandiadtePerformancePerDistrictFilter(\n                  FC_reportCandidatePerformanceData(\n                    props.courseListData,\n                    props.candidatePerformanceData,\n                    props.adminExamReport.reportCourseId\n                      ? props.adminExamReport.reportCourseId.course_id\n                      : \"all\"\n                  ),\n                  props.adminExamReport.reportDistrictId\n                    ? props.adminExamReport.reportDistrictId.district_id\n                    : null,\n                  props.adminExamReport.reportCourseId\n                    ? props.adminExamReport.reportCourseId.course_id\n                    : null,\n                  props.filterApplicantPerformance\n                ).length <= 0 ? (\n                <tr>\n                  <td colSpan={12} className=\"px-2 py-2 text-center\">\n                    No applicant list available!\n                  </td>\n                </tr>\n              ) : (\n                props.candidatePerformanceData &&\n                searchCandidatePerformanceData(\n                  FC_CandiadtePerformancePerDistrictFilter(\n                    FC_reportCandidatePerformanceData(\n                      props.courseListData,\n                      props.candidatePerformanceData,\n                      props.adminExamReport.reportCourseId\n                        ? props.adminExamReport.reportCourseId.course_id\n                        : \"all\"\n                    ),\n                    props.adminExamReport.reportDistrictId\n                      ? props.adminExamReport.reportDistrictId.district_id\n                      : null,\n                    props.adminExamReport.reportCourseId\n                      ? props.adminExamReport.reportCourseId.course_id\n                      : null,\n                    props.filterApplicantPerformance\n                  ).slice(0, 30),\n                  searchInput\n                ).map((item, i) => (\n                  <tr\n                    key={i + 1}\n                    className={`${controlRowsByStatus(\n                      item.exam_stastus\n                    )} text-gray-600 hover:bg-blue-100 hover:text-blue-700 text-sm`}\n                  >\n                    <td className=\"px-2 py-2\">{i + 1}</td>\n                    <td className=\"px-2 py-2\">\n                      {capitalizeFirstLetter(item.user_name)}\n                    </td>\n                    <td className=\"px-2 py-2\">{item.national_id}</td>\n                    <td className=\"px-2 py-2\">{item.user_email}</td>\n                    <td className=\"px-2 py-2\">{item.user_phone}</td>\n                    <td className=\"px-2 py-2\">\n                      {capitalizeFirstLetter(item.course_name)} (\n                      <span className=\"font-semibold\">{item.course_code}</span>)\n                    </td>\n                    <td className=\"px-2 py-2\">\n                      {item.exam\n                        ? getPeriodById(props.thisPeriod, item.exam.period)\n                          ? getPeriodById(props.thisPeriod, item.exam.period)!\n                              .session_plan_name\n                          : \"-\"\n                        : \"-\"}\n                    </td>\n                    <td className=\"px-2 py-2\">\n                      {item.exam.exam_date ? DATE(item.exam.exam_date) : \"-\"}\n                    </td>\n                    <td className=\"px-2 py-2\">\n                      {item.exam.start_time\n                        ? timestampToDate(item.exam.start_time).timeAMPM\n                        : \"-\"}\n                    </td>\n                    <td className=\"px-2 py-2\">\n                      {item.exam.end_time\n                        ? timestampToDate(item.exam.end_time).timeAMPM\n                        : \"-\"}\n                    </td>\n                    <td className=\"px-2 py-2\">\n                      {item.exam_stastus !== ReportUserExamStatus.Editing\n                        ? Number(item.user_total_marks.toFixed(1)) + \"%\"\n                        : \"-\"}\n                    </td>\n                    <td className=\"px-2 py-2\">\n                      {capitalizeFirstLetter(displayStatus(item.exam_stastus))}\n                    </td>\n                  </tr>\n                ))\n              )}\n            </tbody>\n          </table>\n        </div>\n      </div>\n    </Fragment>\n  );\n};\n\nconst mapStateToProps = ({\n  adminExamReport,\n}: StoreState): {\n  adminExamReport: ExamReportReducerType;\n} => {\n  return {\n    adminExamReport,\n  };\n};\n\nexport default React.memo(\n  connect(mapStateToProps, {})(CandiadtePerformancePerDistrict)\n);\n","import React, { Fragment, useState } from \"react\";\nimport { connect } from \"react-redux\";\n// import { BiSort } from \"react-icons/bi\";\nimport Loading from \"../../../components/Loading/Loading\";\nimport NoResult, {\n  NoResultThemes,\n} from \"../../../components/NoResult/NoResult\";\nimport {\n  course,\n  CandidatesFailedSucceeded,\n  ExamDoneAndRemainingByPeriodInterface,\n  ReportUserExamStatus,\n  SessionPlanInterface,\n} from \"../../../interfaces\";\nimport { ExamItemResponse } from \"../../../interfaces/prepare_exam\";\nimport { StoreState } from \"../../../reducers\";\nimport { ExamReportReducerType } from \"../../../reducers/exam_report\";\nimport { capitalizeFirstLetter } from \"../../../shared/dataTest\";\nimport { DATE } from \"../../../utils/functions\";\nimport search from \"../../../utils/search\";\nimport { getPeriodById } from \"./ExamReport\";\n\nexport interface examPerformanceStateInterface {\n  course_name: string;\n  course_code: string;\n  description: string;\n  school_levels: string[];\n  applicants: number;\n  course_id: string;\n  pass_applicant: number;\n  failed_applicant: number;\n  exam: ExamItemResponse;\n  user_total_marks: number;\n}\n\nexport const FC_ExamPerformancePerDistrictPropsData = (\n  allCourses: course[],\n  allExams: ExamItemResponse[],\n  examsData: ExamDoneAndRemainingByPeriodInterface[],\n  candidatePerformanceData: CandidatesFailedSucceeded[],\n  district_id: string\n): examPerformanceStateInterface[] => {\n  let pass: number = 0,\n    failed: number = 0,\n    result: examPerformanceStateInterface[] = [],\n    ids: string[] = [],\n    exam_ids: string[] = [],\n    doneExamsData: ExamDoneAndRemainingByPeriodInterface[] = examsData.filter(\n      (item) => item.exam_status.toLocaleLowerCase() === \"done\"\n    );\n\n  for (const key in doneExamsData) {\n    if (Object.prototype.hasOwnProperty.call(doneExamsData, key)) {\n      if (exam_ids.includes(doneExamsData[key].id)) continue;\n      exam_ids.push(doneExamsData[key].id);\n      let courser = allCourses.find(\n        (item) => item.course_id === doneExamsData[key].course\n      );\n      let _marks: number = 0;\n\n      if (courser) {\n        // CALCURATING SUM OF ALL CANDIDATES MARKS BY EXAM ID=================================\n        let candidatesByExam: CandidatesFailedSucceeded[] =\n          candidatePerformanceData.filter(\n            (item) =>\n              item.course === doneExamsData[key].course &&\n              item.exam_location &&\n              item.exam_location.district_id === district_id\n          );\n        for (const _key in candidatesByExam) {\n          if (Object.prototype.hasOwnProperty.call(candidatesByExam, _key)) {\n            if (ids.includes(candidatesByExam[_key].user.user_id)) continue;\n            ids.push(candidatesByExam[_key].user.user_id);\n            _marks += candidatesByExam[_key].total_marks;\n            if (\n              candidatesByExam[_key].user_status !==\n                ReportUserExamStatus.Editing &&\n              candidatesByExam[_key].total_marks >= 50\n            ) {\n              pass += 1;\n            } else if (\n              candidatesByExam[_key].user_status !==\n              ReportUserExamStatus.Editing\n            ) {\n              failed += 1;\n            }\n          }\n        }\n        let exam = allExams.find(\n          (item) =>\n            item.course === doneExamsData[key].course &&\n            item.period === doneExamsData[key].period\n        );\n        if (exam) {\n          result.push({\n            course_name: courser.course_name,\n            course_code: courser.course_code,\n            description: courser.description,\n            school_levels: courser.school_levels,\n            course_id: courser.course_id,\n            exam: exam,\n            pass_applicant: pass,\n            failed_applicant: failed,\n            applicants: ids.length,\n            user_total_marks: _marks ? _marks / ids.length : _marks, //candidatesByExam.length\n          });\n        }\n        _marks = 0;\n        ids = [];\n      }\n    }\n    exam_ids = [];\n  }\n\n  // SORTING ARRAY FROM MAX TO MIN ==========================\n  let swap: examPerformanceStateInterface;\n  for (let i = 0; i < result.length; i++) {\n    for (let j = i; j < result.length; j++) {\n      if (result[j].user_total_marks > result[i].user_total_marks) {\n        swap = result[j];\n        result[j] = result[i];\n        result[i] = swap;\n      }\n    }\n  }\n  return result;\n};\n\ntype ExamPerformancePerDistrictProps = {\n  loading: boolean;\n  examsListData: ExamItemResponse[] | null;\n  doneExamsData: ExamDoneAndRemainingByPeriodInterface[] | null;\n  courseListData: course[] | null;\n  thisPeriod: SessionPlanInterface[];\n  candidatePerformanceData: CandidatesFailedSucceeded[] | null;\n  thisDistrict: { district_id: string; district_name: string };\n  adminExamReport: ExamReportReducerType;\n};\n\nconst ExamPerformancePerDistrict: React.FC<ExamPerformancePerDistrictProps> = (\n  props\n) => {\n  const [searchInput, setSearchInput] = useState<string>(\"\");\n\n  return (\n    <Fragment>\n      <div className=\"bg-white my-4 max-w-full overflow-x-auto\">\n        <div className=\"w-full px-2 py-2\">\n          <input\n            onChange={(e) => setSearchInput(e.target.value)}\n            type=\"text\"\n            value={searchInput}\n            placeholder=\"Search...\"\n            className=\"w-full bg-gray-100 py-2 px-3 rounded\"\n            disabled={\n              props.courseListData &&\n              props.examsListData &&\n              props.doneExamsData &&\n              props.candidatePerformanceData &&\n              props.adminExamReport.reportDistrictId &&\n              FC_ExamPerformancePerDistrictPropsData(\n                props.courseListData,\n                props.examsListData,\n                props.doneExamsData,\n                props.candidatePerformanceData,\n                props.adminExamReport.reportDistrictId.district_id\n              ).slice(0, 30).length <= 0\n                ? true\n                : false\n            }\n          />\n        </div>\n        <table className=\"w-full shadow\" id=\"report_content\">\n          <thead className=\"bg-white border-b-2 border-gray-300 text-gray-600 font-bold text-sm\">\n            <tr>\n              <td className=\"px-2 py-2\">#</td>\n              <td\n                className=\"px-2 py-2 cursor-pointer\"\n                // onClick={() => setSort(\"course_name\")}\n              >\n                <div className=\"flex items-center gap-1\">\n                  Course\n                  {/* <BiSort /> */}\n                </div>\n              </td>\n              <td className=\"px-2 py-2\">Exam date</td>\n              <td className=\"px-2 py-2\">Exam time</td>\n              <td className=\"px-2 py-2\">Exam duration</td>\n              <td className=\"px-2 py-2\">Exam Period</td>\n              <td className=\"px-2 py-2\">Pass Applicants</td>\n              <td className=\"px-2 py-2\">Failed Applicants</td>\n              <td\n                className=\"px-2 py-2 cursor-pointer\"\n                // onClick={() => setSort(\"user_total_marks\")}\n              >\n                <div className=\"flex items-center gap-1\">\n                  Percentage\n                  {/* <BiSort /> */}\n                </div>\n              </td>\n            </tr>\n          </thead>\n          <tbody>\n            {props.courseListData === null || props.loading ? (\n              <tr>\n                <td colSpan={7} className=\"px-2 py-2\">\n                  <Loading />\n                </td>\n              </tr>\n            ) : props.examsListData &&\n              props.doneExamsData &&\n              props.candidatePerformanceData &&\n              props.adminExamReport.reportDistrictId &&\n              FC_ExamPerformancePerDistrictPropsData(\n                props.courseListData,\n                props.examsListData,\n                props.doneExamsData,\n                props.candidatePerformanceData,\n                props.adminExamReport.reportDistrictId.district_id\n              ).length <= 0 ? (\n              <tr>\n                <td colSpan={7} className=\"px-2 py-2 text-center\">\n                  <NoResult\n                    theme={NoResultThemes.Dark}\n                    value={\"No Exam list available!\"}\n                  />\n                </td>\n              </tr>\n            ) : (\n              props.examsListData &&\n              props.doneExamsData &&\n              props.candidatePerformanceData &&\n              props.adminExamReport.reportDistrictId &&\n              search(\n                FC_ExamPerformancePerDistrictPropsData(\n                  props.courseListData,\n                  props.examsListData,\n                  props.doneExamsData,\n                  props.candidatePerformanceData,\n                  props.adminExamReport.reportDistrictId.district_id\n                ).slice(0, 30),\n                searchInput\n              ).map((item: examPerformanceStateInterface, i) => (\n                <tr\n                  key={i + 1}\n                  className={`bg-white text-gray-600 hover:bg-blue-100 hover:text-blue-700 border-b border-gray-300 hover:border-blue-500 text-sm`}\n                >\n                  <td className=\"px-2 py-2\">{i + 1}</td>\n                  <td className=\"px-2 py-2\">\n                    {capitalizeFirstLetter(item.course_name)} (\n                    <span className=\"font-semibold\">{item.course_code}</span>)\n                  </td>\n                  <td className=\"px-2 py-2\">\n                    {item.exam ? DATE(item.exam.exam_date) : \"-\"}\n                  </td>\n                  <td className=\"px-2 py-2\">\n                    {item.exam ? item.exam.start_time : \"-\"}\n                  </td>\n                  <td className=\"px-2 py-2\">\n                    {item.exam ? item.exam!.duration + \" min\" : \"-\"}\n                  </td>\n                  <td className=\"px-2 py-2\">\n                    {item.exam\n                      ? getPeriodById(props.thisPeriod, item.exam.period)\n                        ? getPeriodById(props.thisPeriod, item.exam.period)!\n                            .session_plan_name\n                        : \"-\"\n                      : \"-\"}\n                  </td>\n                  <td className=\"px-2 py-2\">\n                    {item.pass_applicant !== undefined\n                      ? item.pass_applicant\n                      : \"-\"}\n                  </td>\n                  <td className=\"px-2 py-2\">\n                    {item.failed_applicant !== undefined\n                      ? item.failed_applicant\n                      : \"-\"}\n                  </td>\n                  <td className=\"px-2 py-2\">\n                    {Number(item.user_total_marks.toFixed(1)) + \"%\"}\n                  </td>\n                </tr>\n              ))\n            )}\n          </tbody>\n        </table>\n      </div>\n    </Fragment>\n  );\n};\n\nconst mapStateToProps = ({\n  adminExamReport,\n}: StoreState): {\n  adminExamReport: ExamReportReducerType;\n} => {\n  return {\n    adminExamReport,\n  };\n};\n\nexport default React.memo(\n  connect(mapStateToProps, {})(ExamPerformancePerDistrict)\n);\n","import React, { Fragment } from \"react\";\nimport { MainItem } from \"../../../components/Navigation/SideNavigation\";\nimport { ReportUserExamStatus } from \"../../../interfaces\";\nimport { displayStatus } from \"./DoneExamList\";\nimport { reportTitleType } from \"./ExamReport\";\n\ntype ExamReportFiltersProps = {\n  reportTitle: reportTitleType;\n\n  // FOR EXAM PREPARATION PROPS =========================================\n  filterPreparation: \"prepared\" | \"not prepared\" | \"all\";\n  setFilterPreparation: (value: \"prepared\" | \"not prepared\" | \"all\") => void;\n\n  // FOR EXAMINATION PROGRESS PROPS ========================================\n  filterExamProgress: \"all\" | \"Done\" | \"Active\";\n  setFilterExamProgress: (value: \"all\" | \"Done\" | \"Active\") => void;\n\n  // FOR APPLICANT PERFORMANCE PROPS\n  filterApplicantPerformance: ReportUserExamStatus | \"all\";\n  setFilterApplicantPerformance: (value: \"all\" | ReportUserExamStatus) => void;\n};\nconst ExamReportFilters: React.FC<ExamReportFiltersProps> = (props) => {\n  return (\n    <Fragment>\n      {props.reportTitle !== reportTitleType.EXAM_PERFORMANCE &&\n        props.reportTitle !== reportTitleType.EXAM_DISTRICT_PERFORMANCE && (\n          <div className=\"pt-1\">\n            <div className=\"text-sm text-gray-700 pb-2 pt-2\">\n              Filter by statuses:\n            </div>\n            {/* FILTER OF EXAM PREPARATION ================================ */}\n            {props.reportTitle === reportTitleType.EXAM_PREPARATION && (\n              <section>\n                <div onClick={() => props.setFilterPreparation(\"all\")}>\n                  <MainItem\n                    title=\"All\"\n                    count={0}\n                    active={props.filterPreparation === \"all\"}\n                  />\n                </div>\n                <div onClick={() => props.setFilterPreparation(\"prepared\")}>\n                  <MainItem\n                    title=\"Prepared\"\n                    count={0}\n                    active={props.filterPreparation === \"prepared\"}\n                  />\n                </div>\n                <div onClick={() => props.setFilterPreparation(\"not prepared\")}>\n                  <MainItem\n                    title=\"Not Prepared\"\n                    count={0}\n                    active={props.filterPreparation === \"not prepared\"}\n                  />\n                </div>\n              </section>\n            )}\n            {/* END FILTER OF EXAM PREPARATION ================================ */}\n\n            {/* FILTER OF EXAMINATION PROGRESS ================================ */}\n            {props.reportTitle === reportTitleType.EXAMINATION_PROGRESS && (\n              <section>\n                <div onClick={() => props.setFilterExamProgress(\"all\")}>\n                  <MainItem\n                    title=\"All\"\n                    count={0}\n                    active={props.filterExamProgress === \"all\"}\n                  />\n                </div>\n                <div onClick={() => props.setFilterExamProgress(\"Done\")}>\n                  <MainItem\n                    title=\"Completed exam\"\n                    count={0}\n                    active={props.filterExamProgress === \"Done\"}\n                  />\n                </div>\n                <div onClick={() => props.setFilterExamProgress(\"Active\")}>\n                  <MainItem\n                    title=\"Remaining Exam\"\n                    count={0}\n                    active={props.filterExamProgress === \"Active\"}\n                  />\n                </div>\n              </section>\n            )}\n            {/* END FILTER OF EXAMINATION PROGRESS ================================ */}\n\n            {/* FILTER OF APPLICANTS PERFORMANCE ================================ */}\n            {(props.reportTitle === reportTitleType.APPLICANTS_PERFORMANCE ||\n              props.reportTitle ===\n                reportTitleType.APPLICANTS_DISTRICT_PERFORMANCE) && (\n              <section>\n                <div onClick={() => props.setFilterApplicantPerformance(\"all\")}>\n                  <MainItem\n                    title=\"All\"\n                    count={0}\n                    active={props.filterApplicantPerformance === \"all\"}\n                  />\n                </div>\n\n                {Object.values(ReportUserExamStatus).map((item, index) => (\n                  <div\n                    onClick={() => props.setFilterApplicantPerformance(item)}\n                    key={index + item}\n                  >\n                    <MainItem\n                      title={displayStatus(item)}\n                      count={0}\n                      active={props.filterApplicantPerformance === item}\n                    />\n                  </div>\n                ))}\n              </section>\n            )}\n            {/* END FILTER OF APPLICANTS PERFORMANCE ================================ */}\n          </div>\n        )}\n    </Fragment>\n  );\n};\n\nexport default React.memo(ExamReportFilters);\n","import React, { Fragment, useEffect, useState } from \"react\";\nimport { BiExport, BiFilterAlt } from \"react-icons/bi\";\nimport { FaEdit } from \"react-icons/fa\";\nimport { connect } from \"react-redux\";\nimport {\n  schoolLevelsStoreInterface,\n  SetReportDistrictId,\n  SetReportDistrictIdAction,\n} from \"../../../actions\";\nimport { course } from \"../../../interfaces/index\";\nimport { ExamItemResponse } from \"../../../interfaces/prepare_exam\";\nimport { StoreState } from \"../../../reducers\";\nimport { ExamReportReducerType } from \"../../../reducers/exam_report\";\nimport { loadExaminationProgress } from \"../../AdminDashboard/ExamDashboard/ExamDashboard\";\nimport {\n  CandidateExamPerformanceReportContentInterface,\n  CandidateExamPerformanceToPrintInterface,\n} from \"./CandidatePerformance\";\nimport {\n  ExaminationProgressReportContentInterface,\n  ExaminationProgressToPrintInterface,\n} from \"./DoneExamList\";\nimport {\n  examPreparationReportContentInterface,\n  ExamPreparationToPrintInterface,\n} from \"./ExamList\";\nimport {\n  ExamPerformanceToPrintInterface,\n  examPerformanceReportContentInterface,\n} from \"./ExamPerformance\";\nimport { reportTitleType } from \"./ExamReport\";\nimport ExamReportModals, { ModalForTypes } from \"./ExamReportModals\";\n\ntype ExamReportTitleProps = {\n  thisPeriod: string;\n  // FOR PRINT PDF =========================\n  downloading: boolean;\n  dataToPrint: any[] | null;\n  downlaodPDF: () => Promise<false | undefined>;\n  // FOR REPORT TYPE =========================\n  reportTitle: reportTitleType;\n  setReportTitle: (title: reportTitleType) => void;\n  // FOR GENERATE EXCEL =========================\n  generateReportModal: {\n    reportType: \"EXCEL\" | \"PDF\";\n    status: boolean;\n  } | null;\n  setGenerateReportModal: (\n    reportData: {\n      reportType: \"EXCEL\" | \"PDF\";\n      status: boolean;\n    } | null\n  ) => void;\n  excelReportTitle: string;\n  setExcelReportTitle: (title: string) => void;\n  updateExamToPrint: () => void;\n  // FOR EXCEL EXAM PREPARATION REPORT CONTENT ===============================\n  examPreparationReportContent: examPreparationReportContentInterface[];\n  setExamPreparationReportContent: (\n    content: examPreparationReportContentInterface[]\n  ) => void;\n  examsToPrint:\n    | ExamPreparationToPrintInterface[]\n    | ExamPerformanceToPrintInterface[]\n    | null;\n  // FOR EXCEL EXAM PERFORMANCE REPORT CONTENT ===============================\n  examPerformanceToPrint: ExamPerformanceToPrintInterface[] | null;\n  examPerformanceReportContent: examPerformanceReportContentInterface[];\n  setExamPerformanceReportContent: (\n    value: examPerformanceReportContentInterface[]\n  ) => void;\n\n  // FOR EXCEL TOP 30 EXAM PERFORMANCE REPORT CONTENT ===============================\n  exam30PerformanceToPrint: ExamPerformanceToPrintInterface[] | null;\n  exam30PerformanceReportContent: examPerformanceReportContentInterface[];\n  setExam30PerformanceReportContent: (\n    value: examPerformanceReportContentInterface[]\n  ) => void;\n\n  // FOR EXCEL EXAMINATION PROGRESS REPORT CONTENT ===============================\n  examinationProgressToPrint: ExaminationProgressToPrintInterface[] | null;\n  examinationProgressReportContent: ExaminationProgressReportContentInterface[];\n  setExaminationProgressExamPerformanceReportContent: (\n    value: ExaminationProgressReportContentInterface[]\n  ) => void;\n\n  // FOR EXCEL CANDIDATE EXAM PERFORMANCE REPORT CONTENT ===============================\n  candidateExamPerformanceToPrint:\n    | CandidateExamPerformanceToPrintInterface[]\n    | null;\n  candidateExamPerformanceReportContent: CandidateExamPerformanceReportContentInterface[];\n  setCandidateExamPerformanceReportContent: (\n    value: CandidateExamPerformanceReportContentInterface[]\n  ) => void;\n\n  // FOR EXCEL TOP 30 CANDIDATE EXAM PERFORMANCE REPORT CONTENT ===============================\n  candidate30ExamPerformanceToPrint:\n    | CandidateExamPerformanceToPrintInterface[]\n    | null;\n  candidate30ExamPerformanceReportContent: CandidateExamPerformanceReportContentInterface[];\n  setCandidate30ExamPerformanceReportContent: (\n    value: CandidateExamPerformanceReportContentInterface[]\n  ) => void;\n\n  // FOR CHOOSING LOCATION ===========================\n  adminExamReport: ExamReportReducerType;\n  SetReportDistrictId: (\n    data: {\n      district_id: string;\n      district_name: string;\n    } | null\n  ) => SetReportDistrictIdAction;\n\n  // FROM REDUX =================\n  schoolLevels: schoolLevelsStoreInterface;\n  courses: course[] | null;\n  examsList: ExamItemResponse[] | null;\n};\n\nconst ExamReportTitle: React.FC<ExamReportTitleProps> = (props) => {\n  const [changeReport, setChangeReport] = useState<boolean>(false);\n  const [districtModal, setDistrictModal] = useState<boolean>(false);\n  const [excelModal, setExcelModal] = useState<boolean>(false);\n  const [courseModal, setCourseModal] = useState<boolean>(false);\n\n  useEffect(() => {\n    if (\n      props.reportTitle === reportTitleType.EXAM_DISTRICT_PERFORMANCE &&\n      props.adminExamReport.reportDistrictId === null\n    ) {\n      setDistrictModal(true);\n    }\n    if (\n      props.reportTitle === reportTitleType.EXAM_DISTRICT_PERFORMANCE &&\n      props.adminExamReport.reportDistrictId !== null\n    ) {\n      setDistrictModal(false);\n    }\n  }, [props.adminExamReport.reportDistrictId, props.reportTitle]);\n\n  return (\n    <Fragment>\n      <div className=\"grid md:grid-cols-12 items-center\">\n        <div className=\"col-span-1 md:col-span-8\">\n          <div className=\"mt-4 mx-4 flex flex-col gap-1\">\n            <span className=\"text-xl font-bold text-gray-700\">Exam Report</span>\n            <div\n              className=\"flex flex-row gap-2 items-end cursor-pointer\"\n              onClick={() => setChangeReport(true)}\n            >\n              <span className=\"text-gray-500 text-xl\">Report type: </span>\n              <span className=\"text-blue-600 text-3xl font-bold underline\">\n                {props.reportTitle}{\" \"}\n                {props.reportTitle ===\n                  reportTitleType.EXAM_DISTRICT_PERFORMANCE &&\n                props.adminExamReport.reportDistrictId\n                  ? props.adminExamReport.reportDistrictId.district_name\n                  : \"\"}\n              </span>\n            </div>\n            {(props.reportTitle === reportTitleType.EXAM_DISTRICT_PERFORMANCE ||\n              props.reportTitle ===\n                reportTitleType.APPLICANTS_DISTRICT_PERFORMANCE ||\n              props.reportTitle === reportTitleType.APPLICANTS_PERFORMANCE) && (\n              <div className=\"flex flex-wrap justify-starts items-center text-xs text-gray-800 font-medium gap-1 my-1\">\n                <span className=\"text-gray-500\">Filter result: </span>\n                {props.adminExamReport.reportDistrictId &&\n                (props.reportTitle ===\n                  reportTitleType.APPLICANTS_DISTRICT_PERFORMANCE ||\n                  props.reportTitle ===\n                    reportTitleType.EXAM_DISTRICT_PERFORMANCE) ? (\n                  <span className=\"px-2 py-1 rounded bg-gray-300\">\n                    # {props.adminExamReport.reportDistrictId.district_name}\n                  </span>\n                ) : (\n                  <span className=\"px-2 py-1 rounded bg-gray-300\">\n                    # All district\n                  </span>\n                )}\n                {props.adminExamReport.reportCourseId ? (\n                  props.reportTitle ===\n                    reportTitleType.APPLICANTS_DISTRICT_PERFORMANCE && (\n                    <span className=\"px-2 py-1 rounded bg-gray-300\">\n                      #\n                      {props.adminExamReport.reportCourseId.course_name +\n                        \" (\" +\n                        props.adminExamReport.reportCourseId.course_code +\n                        \")\"}\n                    </span>\n                  )\n                ) : (\n                  <span className=\"px-2 py-1 rounded bg-gray-300\">\n                    # All exams\n                  </span>\n                )}\n              </div>\n            )}\n          </div>\n        </div>\n        <div className=\"col-span-1 md:col-span-4\">\n          <div className=\"float-right mt-3\">\n            {props.dataToPrint && props.dataToPrint.length > 0 && (\n              <div className=\"flex flex-row items-center justify-end font-bold mb-2\">\n                <BiExport className=\"text-2xl text-gray-500\" />\n                <span className=\"text-gray-500\">Export as</span>\n                <button\n                  className={`px-4 py-1 ml-1 rounded bg-white border hover:text-blue-600 font-bold hover:bg-blue-50 border-gray-200 focus:outline-none`}\n                  // disabled={\n                  //   props.examsToPrint && props.examsToPrint.length <= 0\n                  //     ? true\n                  //     : false\n                  // }\n                  onClick={() => {\n                    props.updateExamToPrint();\n                    setExcelModal(true);\n                    props.setGenerateReportModal({\n                      reportType: \"EXCEL\",\n                      status: true,\n                    });\n                  }}\n                >\n                  EXCEL\n                </button>\n                <button\n                  className={`px-4 py-1 ml-1 rounded bg-white border hover:text-blue-600 font-bold hover:bg-blue-50 border-gray-200 focus:outline-none ${\n                    props.downloading && \"cursor-wait\"\n                  }`}\n                  onClick={() => props.downlaodPDF()}\n                  disabled={props.downloading}\n                >\n                  PDF\n                </button>\n              </div>\n            )}\n\n            <div>\n              <div\n                onClick={() => setChangeReport(true)}\n                className=\"bg-blue-50 py-2 px-2 border border-blue-300 text-blue-600 font-medium hover:bg-blue-100 flex flex-row items-center justify-center gap-2 text-sm float-right\"\n              >\n                <FaEdit className=\"text-xl\" />\n                Change Report\n              </div>\n            </div>\n\n            <section className=\"flex items-center gap-1 float-right mt-1\">\n              {(props.reportTitle ===\n                reportTitleType.EXAM_DISTRICT_PERFORMANCE ||\n                props.reportTitle ===\n                  reportTitleType.APPLICANTS_DISTRICT_PERFORMANCE) && (\n                <div\n                  onClick={() => setDistrictModal(true)}\n                  className=\"btn bg-blue-50 border border-blue-300 text-blue-600 cursor-pointer hover:bg-blue-100 flex flex-row items-center justify-center gap-2 text-sm \"\n                >\n                  <BiFilterAlt className=\"text-xl\" />\n                  Filter by district\n                </div>\n              )}\n              {(props.reportTitle === reportTitleType.APPLICANTS_PERFORMANCE ||\n                props.reportTitle ===\n                  reportTitleType.APPLICANTS_DISTRICT_PERFORMANCE) && (\n                <div\n                  onClick={() => setCourseModal(true)}\n                  className=\"btn bg-blue-50 border border-blue-300 text-blue-600 cursor-pointer hover:bg-blue-100 flex flex-row items-center justify-center gap-2 text-sm \"\n                >\n                  <BiFilterAlt className=\"text-xl\" />\n                  Filter by exam\n                </div>\n              )}\n            </section>\n          </div>\n        </div>\n      </div>\n\n      {/* GENERATE EXCEL MODAL CONTROLLERS ============================================ */}\n      {excelModal && (\n        <ExamReportModals\n          modalFor={ModalForTypes.generateReportModal}\n          modalState={excelModal}\n          changeModalState={setExcelModal}\n          reportTitle={props.reportTitle}\n          setGenerateReportModal={props.setGenerateReportModal}\n          excelReportTitle={props.excelReportTitle}\n          setExcelReportTitle={props.setExcelReportTitle}\n          updateExamToPrint={props.updateExamToPrint}\n          generateReportModal={props.generateReportModal}\n          // EXAM PREPARATION ######################\n          examsToPrint={props.examsToPrint}\n          examPreparationReportContent={props.examPreparationReportContent}\n          setExamPreparationReportContent={\n            props.setExamPreparationReportContent\n          }\n          // EXAM PERFORMANCE ######################\n          examPerformanceToPrint={props.examPerformanceToPrint}\n          examPerformanceReportContent={props.examPerformanceReportContent}\n          setExamPerformanceReportContent={\n            props.setExamPerformanceReportContent\n          }\n          // TOP 30 EXAM PERFORMANCE ######################\n          exam30PerformanceToPrint={props.exam30PerformanceToPrint}\n          exam30PerformanceReportContent={props.exam30PerformanceReportContent}\n          setExam30PerformanceReportContent={\n            props.setExam30PerformanceReportContent\n          }\n          // EXAMINATION PROGRESS ######################\n          examinationProgressToPrint={props.examinationProgressToPrint}\n          examinationProgressReportContent={\n            props.examinationProgressReportContent\n          }\n          setExaminationProgressExamPerformanceReportContent={\n            props.setExaminationProgressExamPerformanceReportContent\n          }\n          // CANDIDATE EXAM PERFORMANCE ######################\n          candidateExamPerformanceToPrint={\n            props.candidateExamPerformanceToPrint\n          }\n          candidateExamPerformanceReportContent={\n            props.candidateExamPerformanceReportContent\n          }\n          setCandidateExamPerformanceReportContent={\n            props.setCandidateExamPerformanceReportContent\n          }\n          candidate30ExamPerformanceToPrint={\n            props.candidate30ExamPerformanceToPrint\n          }\n          candidate30ExamPerformanceReportContent={\n            props.candidate30ExamPerformanceReportContent\n          }\n          setCandidate30ExamPerformanceReportContent={\n            props.setCandidate30ExamPerformanceReportContent\n          }\n        />\n      )}\n      {/* END GENERATE EXCEL MODAL CONTROLLERS ============================================ */}\n\n      {/* CHANGE REPORT TYPE MODAL CONTROLLERS ============================================ */}\n      {changeReport && (\n        <ExamReportModals\n          modalFor={ModalForTypes.title}\n          modalState={changeReport}\n          reportTitle={props.reportTitle}\n          changeModalState={setChangeReport}\n          setReportTitle={props.setReportTitle}\n          setExcelReportTitle={props.setExcelReportTitle}\n        />\n      )}\n      {/* END CHANGE REPORT TYPE MODAL CONTROLLERS ============================================ */}\n\n      {/* CHANGE DISTRICT FILTER MODAL CONTROLLERS ============================================ */}\n      {districtModal && (\n        <ExamReportModals\n          modalFor={ModalForTypes.choose_district}\n          modalState={districtModal}\n          changeModalState={setDistrictModal}\n          districtId={\n            props.adminExamReport.reportDistrictId\n              ? props.adminExamReport.reportDistrictId.district_id\n              : \"all\"\n          }\n          reportTitle={props.reportTitle}\n        />\n      )}\n      {/* END CHANGE DISTRICT FILTER MODAL CONTROLLERS ============================================ */}\n\n      {/* CHANGE COURSE FILTER MODAL CONTROLLERS ============================================ */}\n      {courseModal &&\n        loadExaminationProgress(\n          props.adminExamReport.DoneExam,\n          props.examsList,\n          props.schoolLevels.selectedEducationCategory,\n          props.courses,\n          props.schoolLevels.school_levels,\n          props.thisPeriod\n        ) && (\n          <ExamReportModals\n            modalFor={ModalForTypes.choose_exam}\n            modalState={courseModal}\n            AllExamData={\n              loadExaminationProgress(\n                props.adminExamReport.DoneExam,\n                props.examsList,\n                props.schoolLevels.selectedEducationCategory,\n                props.courses,\n                props.schoolLevels.school_levels,\n                props.thisPeriod\n              )!.finished\n            }\n            changeModalState={setCourseModal}\n            thisExam={props.adminExamReport.reportCourseId}\n          />\n        )}\n      {/* END CHANGE COURSE FILTER MODAL CONTROLLERS ============================================ */}\n    </Fragment>\n  );\n};\n\nconst mapStateToProps = ({\n  adminExamReport,\n  schoolLevels,\n  course,\n  prepareExam,\n}: StoreState): {\n  schoolLevels: schoolLevelsStoreInterface;\n  courses: course[] | null;\n  examsList: ExamItemResponse[] | null;\n  adminExamReport: ExamReportReducerType;\n} => {\n  return {\n    schoolLevels,\n    courses: course.courses,\n    examsList: prepareExam.examsList,\n    adminExamReport,\n  };\n};\n\nexport default React.memo(\n  connect(mapStateToProps, { SetReportDistrictId })(ExamReportTitle)\n);\n","import React from \"react\";\nimport * as FileSaver from \"file-saver\";\nimport * as XLSX from \"xlsx\";\nimport { RiFileExcel2Fill } from \"react-icons/ri\";\n\ninterface ExportToExcelProps {\n  fileData: any[];\n  fileName: string;\n  btnName?: string;\n  className?: string;\n  showIcon?: boolean;\n}\n\nconst ExportToExcel: React.FC<ExportToExcelProps> = ({\n  fileData,\n  fileName,\n  btnName = \"Excel\",\n  className = \"flex items-center gap-1 px-4 py-1 rounded text-green-700 bg-white border hover:text-white hover:bg-green-700 border-green-700 font-bold\",\n  showIcon = true,\n}) => {\n  const fileType =\n    \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;charset=UTF-8\";\n  const fileExtension = \".xlsx\";\n\n  const exportToCSV = (apiData: any[], fileName: string) => {\n    const ws = XLSX.utils.json_to_sheet(apiData);\n    const wb = { Sheets: { data: ws }, SheetNames: [\"data\"] };\n    const excelBuffer = XLSX.write(wb, { bookType: \"xlsx\", type: \"array\" });\n    const data = new Blob([excelBuffer], { type: fileType });\n    FileSaver.saveAs(data, fileName + fileExtension);\n  };\n\n  return (\n    <button\n      onClick={(e) => exportToCSV(fileData, fileName)}\n      className={className}\n    >\n      {showIcon && <RiFileExcel2Fill />}\n      {btnName}\n    </button>\n  );\n};\n\nexport default ExportToExcel;\n","export default __webpack_public_path__ + \"static/media/mineduc.11a9ae1c.png\";","import jsPDF from \"jspdf\";\nimport { DATE } from \"../../utils/functions\";\nimport Logo from \"../../utils/mineduc.png\";\nrequire(\"jspdf-autotable\");\n\nexport const addFooters = (doc: any) => {\n  const pageCount = doc.internal.getNumberOfPages();\n\n  doc.setFont(\"helvetica\", \"italic\");\n  doc.setFontSize(8);\n  for (var i = 1; i <= pageCount; i++) {\n    doc.setPage(i);\n    doc.text(\n      \"Page \" + String(i) + \" of \" + String(pageCount),\n      doc.internal.pageSize.width / 2,\n      297,\n      {\n        align: \"center\",\n      }\n    );\n  }\n};\n\nexport type reportSettingsInterface = {\n  doneBy: string;\n  title: string;\n  subjectTitle: string;\n  subject: string;\n  institute: string;\n  period: string;\n  footer: string;\n  orientation?: \"p\" | \"l\";\n};\n\nexport const generatePDF = async (\n  reportSettings: reportSettingsInterface,\n  table: HTMLElement,\n  callBack: (status: boolean) => void\n) => {\n  callBack(true);\n  const orientation: \"p\" | \"l\" = reportSettings.orientation\n    ? reportSettings.orientation\n    : \"p\";\n  var lMargin: number = 20; //left margin in mm\n  var rMargin: number = 20; //right margin in mm\n  var pdfInMM: number = 185; // width of A4 in mm\n\n  //   var doc = new jsPDF(\"p\", \"mm\", \"a4\");\n  var doc: any = new jsPDF(orientation, \"mm\", \"a4\");\n\n  doc.setTextColor(95, 95, 95);\n  doc.setFontSize(28);\n  // doc.text(\n  //   this.props.reportTitle,\n  //   doc.internal.pageSize.getWidth() / 2,\n  //   30,\n  //   undefined,\n  //   \"center\"\n  // );\n  doc.addImage(Logo, \"png\", 20, 20, 10, 10);\n  doc.text(\"MINEDUC\", 32, 28.5, undefined, \"left\");\n  //   doc.setTextColor(19, 90, 152);\n  doc.setFontSize(26);\n  doc.text(\n    reportSettings.title,\n    doc.internal.pageSize.getWidth() / 2,\n    42.7,\n    undefined,\n    \"center\"\n  );\n\n  doc.setFontSize(20);\n  doc.text(\n    reportSettings.institute,\n    doc.internal.pageSize.getWidth() / 2,\n    53.7,\n    undefined,\n    \"center\"\n  );\n\n  var lines;\n  lines = doc.splitTextToSize(\n    reportSettings.subject,\n    pdfInMM - lMargin - rMargin\n  );\n  // if (reportSettings.position) {\n  // } else if (reportSettings.subject) {\n  //   lines = doc.splitTextToSize(\n  //     reportSettings.subject,\n  //     pdfInMM - lMargin - rMargin\n  //   );\n  // }\n\n  //   doc.setTextColor(0, 123, 255);\n  doc.setFontSize(16);\n  //   doc.text(lines, doc.internal.pageSize.getWidth() / 2, 45, {\n  //     maxWidth: 85,\n  //     align: \"center\",\n  //   });\n\n  var y = 63,\n    width;\n  doc.setTextColor(95, 95, 95);\n  doc.text(`${reportSettings.subjectTitle}: `, lMargin, y);\n  width = doc.getTextWidth(`${reportSettings.subjectTitle}: `);\n  // if (reportSettings.position) {\n  // } else if (reportSettings.position) {\n  //   doc.text(`Subject: `, lMargin, y);\n  //   width = doc.getTextWidth(\"Subject: \");\n  // }\n  // doc.setFontType(\"bold\");\n  doc.setTextColor(38, 38, 38);\n  for (var i = 0; i < lines.length; i++) {\n    if (y > 280) {\n      y = 10;\n      doc.addPage();\n    }\n    // doc.text(15, y, lines[i]);\n    doc.text(lines[i], lMargin + width, y);\n    y = y + 7;\n  }\n  doc.setTextColor(95, 95, 95);\n  doc.text(\"Period: \", lMargin, y + 3);\n  width = doc.getTextWidth(\"Period: \");\n  doc.setTextColor(38, 38, 38);\n  doc.text(reportSettings.period, lMargin + width, y + 3);\n\n  doc.autoTable({\n    html: table,\n    startY: 85,\n    margin: { horizontal: 20 },\n    cellPadding: 3, // Horizontal cell padding\n    // fontSize: 12,\n    rowHeight: 20,\n    // styles: { overflow: \"linebreak\" },\n    bodyStyles: { valign: \"top\" },\n    columnStyles: { email: { cellWidth: \"wrap\" } },\n    theme: \"striped\",\n    tableWidth: true,\n  });\n\n  doc.setFontSize(12);\n  let finalY = doc.lastAutoTable.finalY; // The y position on the page\n  doc.text(`Reported by: ${reportSettings.doneBy}`, lMargin, finalY + 15);\n  doc.text(\n    \"Report downloaded on \" + DATE(new Date().toString()),\n    lMargin,\n    finalY + 23\n  );\n\n  addFooters(doc);\n  await doc\n    .save(\n      `${\n        reportSettings.title +\n        \": \" +\n        reportSettings.subject +\n        \": \" +\n        reportSettings.period\n      }.pdf`,\n      { returnPromise: true }\n    )\n    .then(callBack(false));\n};\n","import { Dispatch } from \"redux\";\nimport { ActionTypes } from \"./types\";\nimport {\n  MySchoolInterface,\n  PostSchoolInterface,\n  SchoolInfoInterface,\n  SchoolsInterface,\n} from \"../shared/interfaces\";\n// import { setAxiosToken } from \"../utils/AxiosToken\";\nimport axios from \"axios\";\nimport { API } from \"../utils/api\";\nimport { errorToText } from \"../utils/errors\";\nimport { placedCandidateInterface } from \"../interfaces/marks_publication\";\nimport { PlacementListInterface } from \"../containers/PlacementLimit/PlacementLimit\";\n\n/**\n * * ****************************** INTERFACES *****************************\n */\n\nexport interface GetSchoolsAction {\n  type: ActionTypes.GET_SCHOOLS;\n  payload: SchoolsInterface[];\n}\n\nexport interface GetSchoolByIdAction {\n  type: ActionTypes.GET_SCHOOLS_BY_ID;\n  payload: MySchoolInterface;\n}\n\nexport interface GetSchoolsInfoAction {\n  type: ActionTypes.GET_SCHOOLS_INFO;\n  payload: SchoolInfoInterface[];\n}\n\nexport interface CreateSchoolAction {\n  type: ActionTypes.CREATE_SCHOOL;\n  payload: SchoolsInterface;\n}\n\nexport interface UpdateSchoolAction {\n  type: ActionTypes.UPDATE_SCHOOL;\n  payload: SchoolsInterface;\n}\n\nexport interface DeleteSchoolAction {\n  type: ActionTypes.DELETE_SCHOOL;\n  payload: string;\n}\n\n// School Posts interfaces\nexport interface FetchSchoolPostsAction {\n  type: ActionTypes.FETCH_SCHOOL_POSTS;\n  payload: PostSchoolInterface[];\n}\n\n// School Placements interfaces\nexport interface GetSchoolPlacementAction {\n  type: ActionTypes.GET_SCHOOL_PLACEMENT;\n  payload: placedCandidateInterface[];\n}\n\n// District School Placements interfaces\nexport interface GetDistrictPlacementAction {\n  type: ActionTypes.GET_DISTRICT_PLACEMENT;\n  payload: placedCandidateInterface[];\n}\n\n// District School Placements interfaces\nexport interface GetSessionPlacementAction {\n  type: ActionTypes.GET_SESSION_PLACEMENT;\n  payload: placedCandidateInterface[];\n}\n\nexport interface FetchDistrictPostsAction {\n  type: ActionTypes.FETCH_DISTRICT_POSTS;\n  payload: PostSchoolInterface[];\n}\n\nexport interface CreateSchoolPostAction {\n  type: ActionTypes.CREATE_SCHOOL_POST;\n  payload: PostSchoolInterface;\n}\n\nexport interface UpdateSchoolPostAction {\n  type: ActionTypes.UPDATE_SCHOOL_POST;\n  payload: {\n    TYPE: \"DISTRICT\" | \"SCHOOL\" | \"RECEIVED\";\n    data: PostSchoolInterface;\n  };\n}\n\nexport interface DeleteSchoolPostAction {\n  type: ActionTypes.DELETE_SCHOOL_POST;\n  payload: PostSchoolInterface[];\n}\n\n// Get Institute Limit Posts Action interfaces\nexport interface GetInstitutePlacementLimitAction {\n  type: ActionTypes.GET_INSTITUTE_PLACEMENT_LIMIT;\n  payload: PlacementListInterface[];\n}\n\nexport interface GetDistrictPlacementLimitAction {\n  type: ActionTypes.GET_DISTRICT_PLACEMENT_LIMIT;\n  payload: PlacementListInterface[];\n}\n\nexport interface UpdateInstitutePlacementLimitAction {\n  type: ActionTypes.UPDATE_INSTITUTE_PLACEMENT_LIMIT;\n  payload: { limit_id: string; confirmed_post: number };\n}\n\nexport type SchoolActionType =\n  | GetSchoolsAction\n  | GetSchoolByIdAction\n  | GetSchoolsInfoAction\n  | CreateSchoolAction\n  | UpdateSchoolAction\n  | DeleteSchoolAction\n  | FetchSchoolPostsAction\n  | GetSchoolPlacementAction\n  | FetchDistrictPostsAction\n  | CreateSchoolPostAction\n  | UpdateSchoolPostAction\n  | DeleteSchoolPostAction\n  | GetDistrictPlacementAction\n  | GetSessionPlacementAction\n  | GetInstitutePlacementLimitAction\n  | GetDistrictPlacementLimitAction\n  | UpdateInstitutePlacementLimitAction;\n\n/**\n * * ****************************** ACTIONS *****************************\n */\n\nexport const getSchools = (callback: Function) => {\n  callback(true, \"\");\n  return async (dispatch: Dispatch) => {\n    try {\n      const res = await axios.get<SchoolsInterface[]>(\n        `${API.APPLICATION}/schools`\n      );\n      dispatch<GetSchoolsAction>({\n        type: ActionTypes.GET_SCHOOLS,\n        payload: res.data,\n      });\n      callback(false, \"\", res.data);\n    } catch (error) {\n      console.log(\"Err: \", error);\n      callback(false, errorToText(error));\n    }\n  };\n};\n\nexport const getSchoolById = (schoolId: string, callback: Function) => {\n  return async (dispatch: Dispatch) => {\n    callback(true, \"\");\n    try {\n      const res = await axios.get<MySchoolInterface>(\n        `${API.APPLICATION}/schools/${schoolId}`\n      );\n      dispatch<GetSchoolByIdAction>({\n        type: ActionTypes.GET_SCHOOLS_BY_ID,\n        payload: res.data,\n      });\n      callback(false, \"\", res.data);\n    } catch (error) {\n      console.log(\"Err: \", error);\n      callback(false, errorToText(error));\n    }\n  };\n};\n\n// export const getSchoolsInfo = () => {\n//   return async (dispatch: Dispatch) => {\n//     setAxiosToken();\n//     const response = await axios.get<SchoolInfoInterface[]>(url);\n\n//     dispatch<GetSchoolsInfoAction>({\n//       type: ActionTypes.GET_SCHOOLS_INFO,\n//       payload: response.data,\n//     });\n//   };\n// };\n\nexport const createSchool = (data: SchoolsInterface) => {\n  console.log({ schools: data });\n  return async (dispatch: Dispatch) => {\n    dispatch<CreateSchoolAction>({\n      type: ActionTypes.CREATE_SCHOOL,\n      payload: data,\n    });\n  };\n};\n\nexport const updateSchool = (data: SchoolsInterface) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<UpdateSchoolAction>({\n      type: ActionTypes.UPDATE_SCHOOL,\n      payload: data,\n    });\n  };\n};\n\nexport const deleteSchool = (data: string) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<DeleteSchoolAction>({\n      type: ActionTypes.DELETE_SCHOOL,\n      payload: data,\n    });\n  };\n};\n\nexport const fetchSchoolPosts = (school_id: string, callback: Function) => {\n  return async (dispatch: Dispatch) => {\n    callback(true, \"\");\n    try {\n      const res = await axios.get<PostSchoolInterface[]>(\n        `${API.PLACEMENT}/requestpost/school/${school_id}`\n      );\n\n      console.log(\"====================================\");\n      console.log({ schoolPosts: res });\n      console.log(\"====================================\");\n\n      dispatch<FetchSchoolPostsAction>({\n        type: ActionTypes.FETCH_SCHOOL_POSTS,\n        payload: res.data,\n      });\n      callback(false, \"\");\n    } catch (error) {\n      console.log(\"Err: \", error);\n      callback(false, errorToText(error));\n    }\n  };\n};\n\nexport const getSchoolPlacement = (school_id: string, callback: Function) => {\n  return async (dispatch: Dispatch) => {\n    callback(true, \"\");\n    try {\n      const res = await axios.get<placedCandidateInterface[]>(\n        `${API.PLACEMENT}/placedcandidate/school/${school_id}`\n      );\n\n      console.log({ getSchoolPlacement: res.data });\n\n      dispatch<GetSchoolPlacementAction>({\n        type: ActionTypes.GET_SCHOOL_PLACEMENT,\n        payload: res.data,\n      });\n      callback(false, \"\", res.data);\n    } catch (error) {\n      console.log(\"Err: \", error);\n      callback(false, errorToText(error));\n    }\n  };\n};\n\nexport const createSchoolPost = (data: PostSchoolInterface) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<CreateSchoolPostAction>({\n      type: ActionTypes.CREATE_SCHOOL_POST,\n      payload: data,\n    });\n  };\n};\n\nexport const updateSchoolPost = (\n  TYPE: \"DISTRICT\" | \"SCHOOL\" | \"RECEIVED\",\n  data: PostSchoolInterface\n) => {\n  console.log({ TYPE, data });\n  return async (dispatch: Dispatch) => {\n    dispatch<UpdateSchoolPostAction>({\n      type: ActionTypes.UPDATE_SCHOOL_POST,\n      payload: { TYPE, data },\n    });\n  };\n};\n\nexport const deleteSchoolPost = (data: PostSchoolInterface[]) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<DeleteSchoolPostAction>({\n      type: ActionTypes.DELETE_SCHOOL_POST,\n      payload: data,\n    });\n  };\n};\n\nexport const fetchDistrictPosts = (district_id: string, callback: Function) => {\n  return async (dispatch: Dispatch) => {\n    callback(true, \"\");\n    try {\n      const res = await axios.get<PostSchoolInterface[]>(\n        `${API.PLACEMENT}/requestpost/district/${district_id}`\n      );\n\n      console.log(\"====================================\");\n      console.log({ fetchDistrictPosts: res });\n      console.log(\"====================================\");\n\n      dispatch<FetchDistrictPostsAction>({\n        type: ActionTypes.FETCH_DISTRICT_POSTS,\n        payload: res.data,\n      });\n      callback(false, \"\");\n    } catch (error) {\n      console.log(\"Err: \", error);\n      callback(false, errorToText(error));\n    }\n  };\n};\n\nexport const getDistrictPlacement = (\n  district_id: string,\n  callback: Function\n) => {\n  return async (dispatch: Dispatch) => {\n    callback(true, \"\");\n    try {\n      const res = await axios.get<placedCandidateInterface[]>(\n        `${API.PLACEMENT}/placedcandidate/district/${district_id}`\n      );\n\n      console.log(\"====================================\");\n      console.log({ getDistrictPlacement: res.data });\n      console.log(\"====================================\");\n\n      dispatch<GetDistrictPlacementAction>({\n        type: ActionTypes.GET_DISTRICT_PLACEMENT,\n        payload: res.data,\n      });\n      callback(false, \"\", res.data);\n    } catch (error) {\n      console.log(\"Err: \", error);\n      callback(false, errorToText(error));\n    }\n  };\n};\n\nexport const getSessionPlacement = (session_id: string, callback: Function) => {\n  return async (dispatch: Dispatch) => {\n    callback(true, \"\");\n    try {\n      const res = await axios.get<placedCandidateInterface[]>(\n        `${API.PLACEMENT}/placedcandidate/session/${session_id}`\n      );\n\n      console.log(\"====================================\");\n      console.log({ getSessionPlacement: res.data });\n      console.log(\"====================================\");\n\n      dispatch<GetSessionPlacementAction>({\n        type: ActionTypes.GET_SESSION_PLACEMENT,\n        payload: res.data,\n      });\n      callback(false, \"\", res.data);\n    } catch (error) {\n      console.log(\"Err: \", error);\n      callback(false, errorToText(error));\n    }\n  };\n};\n\nexport const getInstitutePlacementLimit = (\n  institute_id: string,\n  session_id: string,\n  callback: Function\n) => {\n  return async (dispatch: Dispatch) => {\n    callback(true, \"\");\n    try {\n      const res = await axios.get<PlacementListInterface[]>(\n        `${API.PLACEMENT}/confirmedpostrequest/institute/${institute_id}/${session_id}`\n      );\n\n      console.log(\"====================================\");\n      console.log({ getInstitutePlacementLimit: res.data });\n      console.log(\"====================================\");\n\n      dispatch<GetInstitutePlacementLimitAction>({\n        type: ActionTypes.GET_INSTITUTE_PLACEMENT_LIMIT,\n        payload: res.data,\n      });\n      callback(false, \"\", res.data);\n    } catch (error) {\n      console.log(\"Err: \", error);\n      callback(false, errorToText(error));\n    }\n  };\n};\n\nexport const getDistrictPlacementLimit = (\n  district_id: string,\n  session_id: string,\n  callback: Function\n) => {\n  return async (dispatch: Dispatch) => {\n    callback(true, \"\");\n    try {\n      const res = await axios.get<PlacementListInterface[]>(\n        `${API.PLACEMENT}/confirmedpostrequest/district/${district_id}/${session_id}`\n      );\n\n      console.log(\"====================================\");\n      console.log({ getDistrictPlacementLimit: res.data });\n      console.log(\"====================================\");\n\n      dispatch<GetDistrictPlacementLimitAction>({\n        type: ActionTypes.GET_DISTRICT_PLACEMENT_LIMIT,\n        payload: res.data,\n      });\n      callback(false, \"\", res.data);\n    } catch (error) {\n      console.log(\"Err: \", error);\n      callback(false, errorToText(error));\n    }\n  };\n};\n\nexport const updateInstitutePlacementLimit = (data: {\n  limit_id: string;\n  confirmed_post: number;\n}) => {\n  console.log(\"====================================\");\n  console.log({ updateInstitutePlacementLimit: data });\n  console.log(\"====================================\");\n  return async (dispatch: Dispatch) => {\n    dispatch<UpdateInstitutePlacementLimitAction>({\n      type: ActionTypes.UPDATE_INSTITUTE_PLACEMENT_LIMIT,\n      payload: data,\n    });\n  };\n};\n","import axios from \"axios\";\nimport React, { Component } from \"react\";\nimport { MdLock, MdLocationOn } from \"react-icons/md\";\nimport { connect } from \"react-redux\";\nimport { PushPopupAlert, schoolLevelsStoreInterface } from \"../../actions\";\nimport { getAllRoom } from \"../../actions/location\";\nimport { getSchools } from \"../../actions/schools\";\nimport {\n  blockUserToSystem,\n  unBlockUserToSystem,\n  resetUserAccess,\n} from \"../../actions/users\";\nimport { PopupAlertData } from \"../../components/Alert/Popup\";\nimport Loading from \"../../components/Loading/Loading\";\nimport NoResult, { NoResultThemes } from \"../../components/NoResult/NoResult\";\nimport Table from \"../../components/Table/Table\";\nimport { PopupAlertTheme } from \"../../interfaces/popupAlert\";\nimport { StoreState } from \"../../reducers\";\nimport {\n  getRoleById,\n  capitalizeFirstLetter,\n  getInstituteById,\n} from \"../../shared/dataTest\";\nimport {\n  RoomLocationInterface,\n  LocationRoomTableInterface,\n  DistrictInterface,\n  SystemUserRoleInterface,\n  UserInterface,\n  AccessTaskInterface,\n  SchoolsInterface,\n} from \"../../shared/interfaces\";\nimport { API } from \"../../utils/api\";\nimport { errorToText } from \"../../utils/errors\";\nimport { distinctDistrict } from \"../Locations/Locations\";\nimport { UserAccess } from \"./UserAccess\";\nimport UserRole from \"./UserRole\";\nimport profile from \"../../shared/blank_profile.png\"; // with im\n\nexport const getUserById = (users: UserInterface[], userId: string) => {\n  return users.find((item) => item.user_id === userId);\n};\n\nexport enum ModalState {\n  View_User = \"View User Info\",\n  Add_Access = \"Add Access To User\",\n  Update_Access = \"Update User Access\",\n  Close_Modal = \"Close Modal\",\n}\n\n// Tobe replaced with Emmy's function\nexport const LocationsInArray = (\n  LocationData: RoomLocationInterface[]\n): LocationRoomTableInterface[] | [] => {\n  let locationTemp: LocationRoomTableInterface[] = [];\n  for (let p in LocationData) {\n    let districts = LocationData[p].districts;\n    for (let d in districts) {\n      let centers = districts[d].centers;\n      for (let c in centers) {\n        let rooms = centers[c].rooms;\n        for (let r in rooms) {\n          locationTemp.push({\n            province_id: LocationData[p]._id,\n            province_name: LocationData[p].province_name,\n            district_id: districts[d]._id,\n            district_name: districts[d].district_name,\n            center_id: centers[c]._id,\n            center_name: centers[c].center_name,\n            room_id: rooms[r]._id,\n            room_name: rooms[r].room_number.toString(),\n            capacity: rooms[r].capacity,\n            occupied: rooms[r].occupied,\n          });\n        }\n      }\n    }\n  }\n  return locationTemp;\n};\n\ninterface AppProps {\n  users: UserInterface[];\n  roleList: SystemUserRoleInterface[];\n  userTypes: \"all\" | \"active\" | \"blocked\";\n  loadingUser: boolean;\n  schoolLevels: schoolLevelsStoreInterface;\n  setLoadingUser: (value: boolean) => void;\n  manageUser: UserInterface | null;\n  setManageUser: (value: UserInterface | null) => void;\n  changeRole: boolean;\n  setChangeRole: (value: boolean) => void;\n  currentPage: number;\n\n  // REDUX =================\n  allRoom: RoomLocationInterface[];\n  getAllRoom: Function;\n  schools: SchoolsInterface[];\n  getSchools: Function;\n  blockUserToSystem: Function;\n  unBlockUserToSystem: Function;\n  resetUserAccess: Function;\n  PushPopupAlert: (alert: PopupAlertData) => void;\n}\n\ninterface AppStates {\n  manageUserId: string;\n  loadingRequest: boolean;\n  loading: boolean;\n  loadingSchool: boolean;\n  loadingRequestType: \"RESET\" | \"STATUS\" | \"CHANGE_ROLE\" | null;\n  schoolList: SchoolsInterface[] | null;\n  roomList: RoomLocationInterface[] | null;\n  roomTable: LocationRoomTableInterface[] | null;\n  userAccess: AccessTaskInterface[] | null;\n  currentAccess: AccessTaskInterface | null;\n}\n\nclass UserList extends Component<AppProps, AppStates> {\n  constructor(props: AppProps) {\n    super(props);\n\n    this.state = {\n      manageUserId: \"\",\n      loadingRequest: false,\n      loading: true,\n      loadingSchool: true,\n      loadingRequestType: null,\n      schoolList: null,\n      roomList: null,\n      roomTable: null,\n      userAccess: null,\n      currentAccess: null,\n    };\n  }\n\n  setManageUserId = (value: string) => {\n    this.setState({ manageUserId: value });\n  };\n\n  setLoadingRequest = (value: boolean) => {\n    this.setState({ loadingRequest: value });\n  };\n\n  setLoadingSchool = (value: boolean) => {\n    this.setState({ loadingSchool: value });\n  };\n\n  setLoading = (value: boolean) => {\n    this.setState({ loading: value });\n  };\n\n  setLoadingRequestType = (\n    value: \"RESET\" | \"STATUS\" | \"CHANGE_ROLE\" | null\n  ) => {\n    this.setState({ loadingRequestType: value });\n  };\n\n  setRoomList = (value: RoomLocationInterface[] | null) => {\n    this.setState({ roomList: value });\n  };\n\n  setRoomTables = (value: LocationRoomTableInterface[] | null) => {\n    this.setState({ roomTable: value });\n  };\n\n  setCurrentAccess = (value: AccessTaskInterface | null) => {\n    this.setState({ currentAccess: value });\n  };\n\n  setSchoolList = (value: SchoolsInterface[] | null) => {\n    this.setState({ schoolList: value });\n  };\n\n  setUserAccess = (value: AccessTaskInterface[] | null) => {\n    this.setState({ userAccess: value });\n  };\n\n  componentDidMount = () => {\n    if (this.props.schools.length === 0) {\n      this.props.getSchools(\n        (status: boolean, msg: string, data?: SchoolsInterface[]) => {\n          this.setLoadingSchool(status);\n          if (!status) {\n            if (msg.length > 0) {\n              this.props.PushPopupAlert({\n                title: msg,\n                theme: PopupAlertTheme.danger,\n              });\n            }\n            if (data) {\n              this.setLoadingSchool(false);\n              this.setSchoolList(data);\n            }\n          }\n        }\n      );\n    } else {\n      this.setSchoolList(this.props.schools);\n      this.setLoadingSchool(false);\n    }\n\n    if (this.props.allRoom.length === 0) {\n      this.props.getAllRoom(\n        (status: boolean, msg: string, data?: RoomLocationInterface[]) => {\n          this.setLoading(status);\n          if (!status && msg.length > 0) {\n            this.props.PushPopupAlert({\n              title: msg,\n              theme: PopupAlertTheme.danger,\n            });\n          }\n          if (data && data.length > 0) {\n            this.setRoomList(data);\n            this.setRoomTables(LocationsInArray(data));\n          }\n        }\n      );\n    } else if (this.state.loading) {\n      this.setRoomList(this.props.allRoom);\n      this.setRoomTables(LocationsInArray(this.props.allRoom));\n      this.setLoading(false);\n    }\n  };\n\n  tableData = (): JSX.Element[] => {\n    if (\n      this.props.loadingUser ||\n      this.state.loading ||\n      this.state.loadingSchool\n    ) {\n      return [\n        <tr\n          key={Math.random()}\n          className=\"border-b border-gray-200 hover:bg-gray-100\"\n        >\n          <td className=\"p-3 text-center\" colSpan={8}>\n            <Loading />\n          </td>\n        </tr>,\n      ];\n    }\n\n    let data: UserInterface[] = this.props.users;\n    if (data.length <= 0) {\n      return [\n        <tr\n          key={Math.random()}\n          className=\"border-b border-gray-200 hover:bg-gray-100\"\n        >\n          <td className=\"p-3 text-center\" colSpan={8}>\n            No Data Found\n          </td>\n        </tr>,\n      ];\n    }\n\n    return data.map((user: UserInterface, index: number) => (\n      <tr\n        key={index + Math.random()}\n        className=\"border-b border-gray-200 hover:bg-gray-100 group cursor-pointer\"\n        onClick={() => {\n          this.props.setManageUser(user);\n          this.setManageUserId(user.user_id);\n        }}\n      >\n        <td className=\"p-3 text-left whitespace-nowrap\">{index + 1}</td>\n        <td className=\"p-3 text-left\">\n          <span>\n            {user.user_info &&\n              user.user_info.fname + \" \" + user.user_info.lname}\n          </span>\n        </td>\n        <td className=\"p-3 text-left\">{user.email}</td>\n        {/* <td className=\"p-3 text-left\">{user.phone_number}</td> */}\n        <td className=\"p-3 text-left\">\n          {user.user_info && user.user_info.sex === \"M\" ? \"Male\" : \"Female\"}\n        </td>\n        <td className=\"p-3 text-left text-blue-700 text-base font-medium\">\n          {user.default_access &&\n            user.default_access.system_user_role_id &&\n            user.default_access.system_user_role_id && (\n              <span\n                className={`px-2 py-1 font-semibold rounded text-blue-700 bg-blue-100 dark:bg-blue-700 dark:text-blue-100`}\n              >\n                {getRoleById(\n                  this.props.roleList,\n                  user.default_access.system_user_role_id\n                )?.role &&\n                  capitalizeFirstLetter(\n                    getRoleById(\n                      this.props.roleList,\n                      user.default_access.system_user_role_id\n                    )?.role\n                  )}\n              </span>\n            )}\n        </td>\n        {/* {userTypes === \"all\" && (\n          <td>\n            {user.is_active ? (\n              <span className={`px-2 py-1 font-semibold text-green-700`}>\n                Active\n              </span>\n            ) : (\n              <span className={`px-2 py-1 font-semibold text-red-700`}>\n                Blocked\n              </span>\n            )}\n          </td>\n        )} */}\n        <td className=\"px-3 text-center\">\n          <button\n            className=\"btn bg-gray-200 group-hover:bg-blue-700 group-hover:text-white focus:outline-none\"\n            title=\"Manage User Access\"\n            onClick={() => {\n              this.props.setManageUser(user);\n              this.setManageUserId(user.user_id);\n            }}\n          >\n            Manage\n          </button>\n        </td>\n      </tr>\n    ));\n  };\n\n  blockUser = async (user_id: string, actionType: boolean) => {\n    if (!user_id) {\n      this.props.PushPopupAlert({\n        title: \"User Access is required doesn't exist\",\n        theme: PopupAlertTheme.danger,\n      });\n    }\n\n    this.setLoadingRequest(true);\n\n    if (\n      !window.confirm(\n        `Are sure you want to ${actionType ? \"block\" : \"activate\"} this user?`\n      )\n    ) {\n      return this.setLoadingRequest(false);\n    }\n\n    try {\n      const res = await axios.patch(`${API.AUTH}/users/disactive/${user_id}`, {\n        is_active: !actionType,\n      });\n      if (res) {\n        console.log(\"====================================\");\n        console.log({ blockUserToSystem: res });\n        console.log(\"====================================\");\n        actionType\n          ? this.props.blockUserToSystem(user_id, this.props.currentPage)\n          : this.props.unBlockUserToSystem(user_id, this.props.currentPage);\n\n        this.props.PushPopupAlert({\n          title: `User has been ${actionType ? \"blocked\" : \"activated\"}!`,\n          theme: PopupAlertTheme.info,\n        });\n      }\n    } catch (error) {\n      console.error({ blockUser_ERROR: error });\n      this.props.PushPopupAlert({\n        title: errorToText(error),\n        theme: PopupAlertTheme.danger,\n      });\n    }\n\n    this.setLoadingRequest(false);\n    user_id = \"\";\n  };\n\n  restUserAccess = async (user_id: string) => {\n    if (!user_id) {\n      this.props.PushPopupAlert({\n        title: \"User Access is required doesn't exist\",\n        theme: PopupAlertTheme.warning,\n      });\n    }\n\n    if (!window.confirm(`Are sure you want to reset to default access?`)) {\n      return this.setLoadingRequest(false);\n    }\n\n    this.setLoadingRequest(true);\n    this.setLoadingRequestType(\"RESET\");\n\n    try {\n      const res = await axios.delete(`${API.AUTH}/custaccess/user/${user_id}`);\n      res && this.props.resetUserAccess(user_id, this.props.currentPage);\n      let resetedAccess: UserInterface | undefined = this.props.users.find(\n        (user) => user.user_id === user_id\n      );\n      if (resetedAccess) {\n        resetedAccess.default_access &&\n          this.setUserAccess(resetedAccess.default_access.access);\n        this.props.PushPopupAlert({\n          title: `Resetting User Access complete successfully`,\n          theme: PopupAlertTheme.info,\n        });\n        this.setCurrentAccess(null);\n      }\n    } catch (error) {\n      console.error({ reseting_user_access: error });\n      this.props.PushPopupAlert({\n        title: errorToText(error),\n        theme: PopupAlertTheme.danger,\n      });\n    }\n\n    this.setLoadingRequest(false);\n    this.setLoadingRequestType(null);\n    user_id = \"\";\n  };\n\n  distinctDistrict = (\n    location: RoomLocationInterface[],\n    province_id?: string\n  ): DistrictInterface[] => {\n    let ids: string[] = [],\n      result: DistrictInterface[] = [];\n\n    if (province_id) {\n      result = location.find((item) => item._id === province_id)\n        ? location.find((item) => item._id === province_id)!.districts\n          ? location.find((item) => item._id === province_id)!.districts\n          : []\n        : [];\n    } else {\n      for (const key in location) {\n        if (Object.prototype.hasOwnProperty.call(location, key)) {\n          for (const keyDistrict in location[key].districts) {\n            if (\n              Object.prototype.hasOwnProperty.call(\n                location[key].districts,\n                keyDistrict\n              )\n            ) {\n              if (!ids.includes(location[key].districts[keyDistrict]._id)) {\n                ids.push(location[key].districts[keyDistrict]._id);\n                result.push(location[key].districts[keyDistrict]);\n              }\n            }\n          }\n        }\n      }\n    }\n\n    return result;\n  };\n\n  render() {\n    return (\n      <div>\n        {!this.props.manageUser && (\n          <div className=\"grid md:grid-cols-5 gap-2 mb-5\">\n            <div className={`md:col-span-5 rounded`}>\n              <div className=\"my-2 flex sm:flex-row flex-col justify-between\">\n                <div className=\"flex flex-col md:flex-row gap-1 items-center mx-1.5\">\n                  {/* <span className=\"text-lg\">All User</span>\n                  <MdChevronRight className=\"w-7 h-7\" />\n                  <span className=\"text-lg underline\">All User</span> */}\n                </div>\n              </div>\n              {this.props.users && (\n                <Table\n                  columns={[\n                    { columnTitle: \"#\", alignText: \"left\", padding: \"p-3\" },\n                    { columnTitle: \"Names\", alignText: \"left\", padding: \"p-3\" },\n                    { columnTitle: \"Email\", alignText: \"left\", padding: \"p-3\" },\n                    {\n                      columnTitle: \"Gender\",\n                      alignText: \"left\",\n                      padding: \"p-3\",\n                    },\n                    { columnTitle: \"Role\", alignText: \"left\", padding: \"p-3\" },\n                    // { columnTitle: \"Status\", alignText: \"left\", padding: \"p-3\" },\n                    { columnTitle: \"\", alignText: \"left\", padding: \"p-3\" },\n                  ]}\n                  rows={this.tableData}\n                  pagination={false}\n                  search={true}\n                  thColor=\"gray\"\n                  loading={\n                    this.props.loadingUser ||\n                    this.state.loading ||\n                    this.state.loadingSchool\n                  }\n                />\n              )}\n            </div>\n          </div>\n        )}\n\n        {/* -------------------------------------------------------- */}\n\n        {this.props.manageUser && (\n          <div className=\"bg-gray-100 h-100\">\n            {/* header */}\n            <div className=\"bg-white border-b border-t px-4 py-2 flex flex-col md:flex-row items-center gap-x-14\">\n              {this.props.users.find(\n                (user) => user.user_id === this.state.manageUserId\n              ) ? (\n                <div\n                  key={\n                    this.props.users.find(\n                      (user) => user.user_id === this.state.manageUserId\n                    )!.user_id + Math.random()\n                  }\n                  className=\"flex flex-col md:flex-row md:items-start items-center w-full gap-3\"\n                >\n                  <img\n                    src={\n                      this.props.users.find(\n                        (user) => user.user_id === this.state.manageUserId\n                      )!.user_info.photo !== \"pic\"\n                        ? this.props.users.find(\n                            (user) => user.user_id === this.state.manageUserId\n                          )!.user_info.photo\n                        : profile\n                    }\n                    alt=\"\"\n                    className=\"rounded-full w-32 h-32\"\n                  />\n                  <div className=\"flex flex-col gap-1 items-start w-full\">\n                    <span className=\"text-2xl font-semibold\">\n                      {this.props.users.find(\n                        (user) => user.user_id === this.state.manageUserId\n                      )!.user_info.fname +\n                        \" \" +\n                        this.props.users.find(\n                          (user) => user.user_id === this.state.manageUserId\n                        )!.user_info.lname}\n                    </span>\n                    <div className=\"flex items-center\">\n                      <MdLock className=\"w-5 h-5\" />\n                      <span className=\"text-lg font-medium\">\n                        {this.props.users.find(\n                          (user) => user.user_id === this.state.manageUserId\n                        )!.default_access &&\n                          getRoleById(\n                            this.props.roleList,\n                            this.props.users.find(\n                              (user) => user.user_id === this.state.manageUserId\n                            )!.default_access!.system_user_role_id\n                          ).role}\n                      </span>\n                    </div>\n                    <div className=\"flex items-center gap-1\">\n                      <span className=\"text-gray-500\">Level:</span>\n                      <span className=\"text-base font-medium\">\n                        {this.props.users.find(\n                          (user) => user.user_id === this.state.manageUserId\n                        )!.default_access &&\n                        getRoleById(\n                          this.props.roleList,\n                          this.props.users.find(\n                            (user) => user.user_id === this.state.manageUserId\n                          )!.default_access!.system_user_role_id\n                        ).district_required\n                          ? \"District\"\n                          : this.props.users.find(\n                              (user) => user.user_id === this.state.manageUserId\n                            )!.default_access &&\n                            getRoleById(\n                              this.props.roleList,\n                              this.props.users.find(\n                                (user) =>\n                                  user.user_id === this.state.manageUserId\n                              )!.default_access!.system_user_role_id\n                            ).school_required\n                          ? \"School\"\n                          : this.props.users.find(\n                              (user) => user.user_id === this.state.manageUserId\n                            )!.default_access &&\n                            getRoleById(\n                              this.props.roleList,\n                              this.props.users.find(\n                                (user) =>\n                                  user.user_id === this.state.manageUserId\n                              )!.default_access!.system_user_role_id\n                            ).room_required\n                          ? \"Room\"\n                          : this.props.users.find(\n                              (user) => user.user_id === this.state.manageUserId\n                            )!.default_access &&\n                            getRoleById(\n                              this.props.roleList,\n                              this.props.users.find(\n                                (user) =>\n                                  user.user_id === this.state.manageUserId\n                              )!.default_access!.system_user_role_id\n                            ).education_institution_required\n                          ? \"Institute\"\n                          : \"-\"}\n                      </span>\n                    </div>\n                    {this.props.users.find(\n                      (user) => user.user_id === this.state.manageUserId\n                    )!.default_access &&\n                    getRoleById(\n                      this.props.roleList,\n                      this.props.users.find(\n                        (user) => user.user_id === this.state.manageUserId\n                      )!.default_access!.system_user_role_id\n                    ).education_institution_required ? (\n                      <div className=\"flex items-center gap-1\">\n                        <span className=\"text-gray-500\">Institute:</span>\n                        <span className=\"text-base font-medium\">\n                          {this.props.users.find(\n                            (user) => user.user_id === this.state.manageUserId\n                          )!.default_access &&\n                          this.props.schoolLevels.education_categories &&\n                          getInstituteById(\n                            this.props.schoolLevels.education_categories,\n                            this.props.users.find(\n                              (user) => user.user_id === this.state.manageUserId\n                            )!.default_access!.education_institution_id\n                          )\n                            ? getInstituteById(\n                                this.props.schoolLevels.education_categories,\n                                this.props.users.find(\n                                  (user) =>\n                                    user.user_id === this.state.manageUserId\n                                )!.default_access!.education_institution_id\n                              )!.education_category_title\n                            : \"Unknown Institute\"}\n                        </span>\n                      </div>\n                    ) : this.props.users.find(\n                        (user) => user.user_id === this.state.manageUserId\n                      )!.default_access &&\n                      getRoleById(\n                        this.props.roleList,\n                        this.props.users.find(\n                          (user) => user.user_id === this.state.manageUserId\n                        )!.default_access!.system_user_role_id\n                      ).district_required ? (\n                      <div className=\"flex items-center gap-1\">\n                        <span className=\"text-gray-500\">District:</span>\n                        <span className=\"text-base font-medium\">\n                          {this.props.users.find(\n                            (user) => user.user_id === this.state.manageUserId\n                          )!.default_access &&\n                            this.state.roomList &&\n                            distinctDistrict(this.state.roomList).find(\n                              (item) =>\n                                item.district_id ===\n                                this.props.users.find(\n                                  (user) =>\n                                    user.user_id === this.state.manageUserId\n                                )!.default_access!.district_id\n                            ) &&\n                            distinctDistrict(this.state.roomList).find(\n                              (item) =>\n                                item.district_id ===\n                                this.props.users.find(\n                                  (user) =>\n                                    user.user_id === this.state.manageUserId\n                                )!.default_access!.district_id\n                            )!.district_name}\n                        </span>\n                      </div>\n                    ) : this.props.users.find(\n                        (user) => user.user_id === this.state.manageUserId\n                      )!.default_access &&\n                      getRoleById(\n                        this.props.roleList,\n                        this.props.users.find(\n                          (user) => user.user_id === this.state.manageUserId\n                        )!.default_access!.system_user_role_id\n                      ).school_required ? (\n                      <div className=\"flex items-center gap-1\">\n                        <span className=\"text-gray-500\">School:</span>\n                        <span className=\"text-base font-medium\">\n                          {this.state.schoolList &&\n                          this.state.schoolList.find(\n                            (school) =>\n                              school._id ===\n                              this.props.users.find(\n                                (user) =>\n                                  user.user_id === this.state.manageUserId\n                              )!.default_access?.school_id\n                          )\n                            ? this.state.schoolList.find(\n                                (school) =>\n                                  school._id ===\n                                  this.props.users.find(\n                                    (user) =>\n                                      user.user_id === this.state.manageUserId\n                                  )!.default_access?.school_id\n                              )!.school_name\n                            : \"Unknown school\"}\n                        </span>\n                      </div>\n                    ) : (\n                      this.props.users.find(\n                        (user) => user.user_id === this.state.manageUserId\n                      )!.default_access &&\n                      getRoleById(\n                        this.props.roleList,\n                        this.props.users.find(\n                          (user) => user.user_id === this.state.manageUserId\n                        )!.default_access!.system_user_role_id\n                      ).room_required && (\n                        <div className=\"flex items-center gap-1\">\n                          {/* <span className=\"text-gray-500\">Room:</span> */}\n                          <MdLocationOn className=\"text-gray-500\" />\n                          {this.state.roomTable && (\n                            <span className=\"text-base font-medium\">\n                              {this.state.roomTable.find(\n                                (room) =>\n                                  room.room_id ===\n                                  this.props.users.find(\n                                    (user) =>\n                                      user.user_id === this.state.manageUserId\n                                  )!.default_access?.room_id\n                              )?.district_name +\n                                \" - \" +\n                                this.state.roomTable.find(\n                                  (room) =>\n                                    room.room_id ===\n                                    this.props.users.find(\n                                      (user) =>\n                                        user.user_id === this.state.manageUserId\n                                    )!.default_access?.room_id\n                                )?.center_name +\n                                \" - Room \" +\n                                this.state.roomTable.find(\n                                  (room) =>\n                                    room.room_id ===\n                                    this.props.users.find(\n                                      (user) =>\n                                        user.user_id === this.state.manageUserId\n                                    )!.default_access?.room_id\n                                )?.room_name}\n                            </span>\n                          )}\n                        </div>\n                      )\n                    )}\n                  </div>\n                </div>\n              ) : (\n                <NoResult\n                  theme={NoResultThemes.Dark}\n                  value={\"User info not found\"}\n                />\n              )}\n              {this.props.users.find(\n                (user) => user.user_id === this.state.manageUserId\n              ) && (\n                <div\n                  key={\n                    this.props.users.find(\n                      (user) => user.user_id === this.state.manageUserId\n                    )!.user_id + Math.random()\n                  }\n                  className=\"flex flex-col w-full\"\n                >\n                  <div className=\"flex items-center gap-1\">\n                    <span className=\"text-gray-500\">NID:</span>\n                    <span className=\"text-base font-medium\">\n                      {\n                        this.props.users.find(\n                          (user) => user.user_id === this.state.manageUserId\n                        )!.n_id\n                      }\n                    </span>\n                  </div>\n                  <div className=\"flex items-center gap-1\">\n                    <span className=\"text-gray-500\">Email:</span>\n                    <span className=\"text-base font-medium\">\n                      {\n                        this.props.users.find(\n                          (user) => user.user_id === this.state.manageUserId\n                        )!.email\n                      }\n                    </span>\n                  </div>\n                  <div className=\"flex items-center gap-1\">\n                    <span className=\"text-gray-500\">Phone:</span>\n                    <span className=\"text-base font-medium\">\n                      {\n                        this.props.users.find(\n                          (user) => user.user_id === this.state.manageUserId\n                        )!.phone_number\n                      }\n                    </span>\n                  </div>\n                  <div className=\"flex items-center gap-1\">\n                    <span className=\"text-gray-500\">Status:</span>\n                    <span className=\"text-base font-medium\">\n                      {this.props.users.find(\n                        (user) => user.user_id === this.state.manageUserId\n                      )!.is_active === false\n                        ? \"Blocked\"\n                        : \"Active\"}\n                    </span>\n                  </div>\n                  <div className=\"flex items-center gap-1\">\n                    {this.props.users.find(\n                      (user) => user.user_id === this.state.manageUserId\n                    )!.custome_access && (\n                      <button\n                        className={`px-2 py-1 font-semibold text-gray-50 inline-flex items-center rounded ${\n                          this.state.loadingRequestType &&\n                          this.state.loadingRequestType === \"RESET\"\n                            ? \"cursor-wait bg-gray-400\"\n                            : \"bg-gray-600\"\n                        }`}\n                        onClick={() =>\n                          this.restUserAccess(\n                            this.props.users.find(\n                              (user) => user.user_id === this.state.manageUserId\n                            )!.user_id\n                          )\n                        }\n                        disabled={this.state.loadingRequest}\n                      >\n                        <MdLock className=\"w-4 h-4 fill-current\" />\n                        <span>\n                          {this.state.loadingRequestType &&\n                          this.state.loadingRequestType === \"RESET\"\n                            ? \"Reseting...\"\n                            : \"Reset Access\"}\n                        </span>\n                      </button>\n                    )}\n                    {!this.props.changeRole && (\n                      <button\n                        className=\"bg-yellow-300 hover:bg-yellow-400 px-2 py-1 font-semibold text-black inline-flex items-center rounded\"\n                        onClick={() => this.props.setChangeRole(true)}\n                      >\n                        <MdLock className=\"w-4 h-4 fill-current\" />\n                        <span>Change Role</span>\n                      </button>\n                    )}\n                    {this.props.users.find(\n                      (user) => user.user_id === this.state.manageUserId\n                    )!.is_active ? (\n                      <button\n                        className={`px-2 py-1 font-semibold text-gray-100 inline-flex items-center rounded ${\n                          this.state.loadingRequestType &&\n                          this.state.loadingRequestType === \"STATUS\"\n                            ? \"cursor-wait bg-red-500\"\n                            : \"bg-red-700\"\n                        }`}\n                        onClick={() =>\n                          !this.state.loadingRequest &&\n                          this.props.manageUser &&\n                          this.blockUser(\n                            this.props.users.find(\n                              (user) => user.user_id === this.state.manageUserId\n                            )!.user_id,\n                            this.props.users.find(\n                              (user) => user.user_id === this.state.manageUserId\n                            )!.is_active\n                          )\n                        }\n                        disabled={this.state.loadingRequest}\n                      >\n                        <MdLock className=\"w-4 h-4 fill-current\" />\n                        <span>\n                          {this.state.loadingRequestType &&\n                          this.state.loadingRequestType === \"RESET\"\n                            ? \"Loading...\"\n                            : \"Block user\"}\n                        </span>\n                      </button>\n                    ) : (\n                      <button\n                        className={`px-2 py-1 font-semibold text-gray-100 inline-flex items-center rounded ${\n                          this.state.loadingRequestType &&\n                          this.state.loadingRequestType === \"STATUS\"\n                            ? \"cursor-wait bg-yellow-500\"\n                            : \"bg-yellow-700\"\n                        }`}\n                        onClick={() =>\n                          !this.state.loadingRequest &&\n                          this.props.manageUser &&\n                          this.blockUser(\n                            this.props.users.find(\n                              (user) => user.user_id === this.state.manageUserId\n                            )!.user_id,\n                            this.props.users.find(\n                              (user) => user.user_id === this.state.manageUserId\n                            )!.is_active\n                          )\n                        }\n                        disabled={this.state.loadingRequest}\n                      >\n                        <MdLock className=\"w-4 h-4 fill-current\" />\n                        <span>\n                          {this.state.loadingRequestType &&\n                          this.state.loadingRequestType === \"RESET\"\n                            ? \"Loading...\"\n                            : \"Re-Activate\"}\n                        </span>\n                      </button>\n                    )}\n                  </div>\n                </div>\n              )}\n            </div>\n            {/* end header */}\n\n            {/* content */}\n            {this.props.manageUser &&\n            this.state.roomList &&\n            this.props.changeRole ? (\n              <UserRole\n                userInfo={this.props.manageUser}\n                roleList={this.props.roleList}\n                district={this.distinctDistrict(this.state.roomList)}\n                schoolList={this.state.schoolList}\n                roomList={this.state.roomList}\n                setChangeRole={this.props.setChangeRole}\n                currentPage={this.props.currentPage}\n              />\n            ) : (\n              <UserAccess\n                userInfo={getUserById(\n                  this.props.users,\n                  this.state.manageUserId\n                )}\n                manageUserId={this.state.manageUserId}\n                setUserAccess={this.setUserAccess}\n                userAccess={this.state.userAccess}\n                setCurrentAccess={this.setCurrentAccess}\n                currentAccess={this.state.currentAccess}\n                currentPage={this.props.currentPage}\n              />\n            )}\n            {/* end content */}\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = ({\n  schoolLevels,\n  schools,\n  locations,\n}: StoreState): {\n  schoolLevels: schoolLevelsStoreInterface;\n  schools: SchoolsInterface[];\n  allRoom: RoomLocationInterface[];\n} => {\n  return {\n    schoolLevels,\n    schools: schools.schools,\n    allRoom: locations.roomLocation,\n  };\n};\n\nexport default React.memo(\n  connect(mapStateToProps, {\n    blockUserToSystem,\n    unBlockUserToSystem,\n    resetUserAccess,\n    getSchools,\n    getAllRoom,\n    PushPopupAlert,\n  })(UserList)\n);\n","import React, { useState } from \"react\";\nimport { MdSearch } from \"react-icons/md\";\nimport { capitalizeFirstLetter } from \"../../shared/dataTest\";\nimport { SystemUserRoleInterface } from \"../../shared/interfaces\";\nimport search from \"../../utils/search\";\n\n// const searchRole = (\n//   objList: SystemUserRoleInterface[],\n//   text: string\n// ): SystemUserRoleInterface[] => {\n//   return objList.filter(\n//     (product) => product.role.toLocaleLowerCase() === text.toLocaleLowerCase()\n//   );\n// };\n\ntype RoleListProps = {\n  setChooseRole: (value: boolean) => void;\n  roleList: SystemUserRoleInterface[];\n  handleSelectRole: (role_id: string, TYPE?: \"SELECT\" | \"DEFAULT\") => void;\n  loadindRequest: boolean;\n};\n\nconst RoleList: React.FC<RoleListProps> = (props) => {\n  const [searchInput, setSearchInput] = useState<string>(\"\");\n  return (\n    <section className=\"border-2 rounded border-gray-400\">\n      {/* SEARCH PART */}\n      <div className=\"flex items-center w-full my-1\">\n        <MdSearch className=\"w-6 h-6 absolute ml-2\" />\n        <input\n          type=\"text\"\n          placeholder=\"Search\"\n          className=\"focus:border-2 h-7 ml-1 pl-9 mr-2 bg-gray-100 focus:border-gray-700 w-full rounded\"\n          onChange={(e) => setSearchInput(e.target.value)}\n          value={searchInput}\n          disabled={props.roleList.length > 0 ? false : true}\n        />\n        <button\n          className=\"bg-red-200 text-red-700 py-1 px-2 mr-1 rounded text-sm focus:outline-none\"\n          type=\"button\"\n          onClick={() => {\n            props.setChooseRole(false);\n          }}\n        >\n          Close\n        </button>\n      </div>\n      {/* END SEARCH PART ///////////////// */}\n\n      <div className=\"w-full h-52 mt-2 overflow-y-auto divide-y divide-gray-300\">\n        {search(props.roleList, searchInput).length > 0 ? (\n          search(props.roleList, searchInput).map((role, index) => (\n            <section key={index + role.role}>\n              <div className=\"group flex items-center justify-between my-1 hover:bg-gray-100\">\n                <div\n                  className=\"p-1 w-full mr-2 cursor-pointer\"\n                  onClick={() => {\n                    props.setChooseRole(false);\n                    !props.loadindRequest &&\n                      props.handleSelectRole(role.system_user_role_id);\n                  }}\n                >\n                  <p className=\"text-sm font-medium text-black\">\n                    {capitalizeFirstLetter(role.role)}\n                  </p>\n                </div>\n                <button\n                  type=\"button\"\n                  className=\"bg-blue-200 group-hover:bg-blue-300 text-blue-700 group-hover:text-blue-800 py-1 px-2 mr-1 rounded text-sm\"\n                >\n                  Choose\n                </button>\n              </div>\n            </section>\n          ))\n        ) : (\n          <div className=\"text-center p-3\">\n            <p className=\"text-base font-medium text-black\">\n              No role available\n            </p>\n          </div>\n        )}\n      </div>\n    </section>\n  );\n};\n\nexport default React.memo(RoleList);\n","import axios from \"axios\";\nimport React, { Component } from \"react\";\nimport { MdHighlightOff } from \"react-icons/md\";\nimport { TiInputChecked } from \"react-icons/ti\";\nimport { connect } from \"react-redux\";\nimport { schoolLevelsStoreInterface, PushPopupAlert } from \"../../actions\";\nimport { assignRoleToUserAccess } from \"../../actions/users\";\nimport { PopupAlertData } from \"../../components/Alert/Popup\";\nimport Loading from \"../../components/Loading/Loading\";\nimport Table from \"../../components/Table/Table\";\nimport { PopupAlertTheme } from \"../../interfaces/popupAlert\";\nimport { StoreState } from \"../../reducers\";\nimport { isEmptyOrSpaces } from \"../../shared/dataTest\";\nimport {\n  UserInterface,\n  SystemUserRoleInterface,\n  DistrictInterface,\n  SchoolsInterface,\n  RoomLocationInterface,\n  AssignRoleToUserActionInterface,\n  LocationRoomTableInterface,\n  RoleToUserInterface,\n} from \"../../shared/interfaces\";\nimport { API } from \"../../utils/api\";\nimport { errorToText } from \"../../utils/errors\";\nimport RoleList from \"./RoleList\";\nimport { LocationsInArray } from \"./UserList\";\n\ninterface AppProps {\n  currentPage: number;\n  userInfo: UserInterface;\n  roleList: SystemUserRoleInterface[];\n  district: DistrictInterface[];\n  assignRoleToUserAccess: Function;\n  schoolList: SchoolsInterface[] | null;\n  roomList: RoomLocationInterface[] | null;\n  schoolLevels: schoolLevelsStoreInterface;\n  setChangeRole: (value: boolean) => void;\n  PushPopupAlert: (alert: PopupAlertData) => void;\n}\n\ninterface AppState {\n  loading: boolean;\n  loadingForm: boolean;\n  loadingRequest: boolean;\n  roleId: string;\n  provinceId: string;\n  districtId: string;\n  schoolId: string;\n  roomId: string;\n  instituteId: string;\n  centerId: string;\n  selectedRole: SystemUserRoleInterface | null;\n  formError: {\n    element: string;\n    msg: string;\n  } | null;\n  chooseRole: boolean;\n  chooseSchool: boolean;\n}\n\nclass UserRole extends Component<AppProps, AppState> {\n  constructor(props: AppProps) {\n    super(props);\n\n    this.state = {\n      loading: true,\n      loadingForm: true,\n      loadingRequest: false,\n      roleId: \"\",\n      provinceId: \"\",\n      districtId: \"\",\n      schoolId: \"\",\n      roomId: \"\",\n      instituteId: \"\",\n      centerId: \"\",\n      selectedRole: null,\n      formError: null,\n      chooseRole: false,\n      chooseSchool: false,\n    };\n  }\n\n  setRoleId = (value: string) => {\n    this.setState({ roleId: value });\n  };\n\n  setSelectedRole = (value: SystemUserRoleInterface | null) => {\n    this.setState({ selectedRole: value });\n  };\n\n  setProvinceId = (value: string) => {\n    this.setState({ provinceId: value });\n  };\n\n  setDistrictId = (value: string) => {\n    this.setState({ districtId: value });\n  };\n\n  setCenterId = (value: string) => {\n    this.setState({ centerId: value });\n  };\n\n  setRoomId = (value: string) => {\n    this.setState({ roomId: value });\n  };\n\n  setLoadingForm = (value: boolean) => {\n    this.setState({ loadingForm: value });\n  };\n\n  setSchoolId = (value: string) => {\n    this.setState({ schoolId: value });\n  };\n\n  setChooseSchool = (value: boolean) => {\n    this.setState({ chooseSchool: value });\n  };\n\n  setLoading = (value: boolean) => {\n    this.setState({ loading: value });\n  };\n\n  setInstituteId = (value: string) => {\n    this.setState({ instituteId: value });\n  };\n\n  setFormError = (\n    value: {\n      element: string;\n      msg: string;\n    } | null\n  ) => {\n    this.setState({ formError: value });\n  };\n  setLoadingRequest = (value: boolean) => {\n    this.setState({ loadingRequest: value });\n  };\n  setChooseRole = (value: boolean) => {\n    this.setState({ chooseRole: value });\n  };\n\n  setDefaultState = (\n    default_access: RoleToUserInterface,\n    role: SystemUserRoleInterface\n  ) => {\n    // SET DEFAULT PROVINCE && DISTRICT ID =======================\n    let LOAD_province: LocationRoomTableInterface | undefined;\n    let LOAD_district: DistrictInterface | undefined;\n    if (role.district_required && this.props.roomList) {\n      LOAD_district = this.distinctDistrict(this.props.roomList).find(\n        (item) => item._id === default_access!.district_id\n      );\n      LOAD_district && this.setProvinceId(LOAD_district.province_id);\n      LOAD_district && this.setDistrictId(default_access!.district_id);\n      this.setLoadingForm(false);\n    } else if (role.room_required && this.props.roomList) {\n      // SET DEFAULT PROVINCE && DISTRICT && ROOM ID =======================\n\n      LOAD_province = LocationsInArray(this.props.roomList).find(\n        (item) => item.room_id === default_access!.room_id\n      );\n      LOAD_province && this.setProvinceId(LOAD_province.province_id);\n      LOAD_province && this.setDistrictId(LOAD_province.district_id);\n      LOAD_province && this.setCenterId(LOAD_province.center_id);\n      this.setRoomId(default_access.room_id);\n      this.setLoadingForm(false);\n    } else if (\n      role.school_required &&\n      this.props.roomList &&\n      this.props.schoolList\n    ) {\n      // SET DEFAULT PROVINCE && DISTRICT && SCHOOL ID =======================\n      let LOAD_school: SchoolsInterface | undefined =\n        this.props.schoolList.find(\n          (item) => item._id === default_access!.school_id\n        );\n      if (LOAD_school) {\n        LOAD_province = LocationsInArray(this.props.roomList).find(\n          (item) => item.district_id === LOAD_school?.district_id\n        );\n        LOAD_province && this.setProvinceId(LOAD_province.province_id);\n        LOAD_province && this.setDistrictId(LOAD_province.district_id);\n        this.setSchoolId(default_access.school_id);\n        this.setLoadingForm(false);\n      } else {\n        this.setLoadingForm(false);\n      }\n    } else {\n      this.setLoadingForm(false);\n    }\n  };\n\n  componentDidMount = () => {\n    if (this.props.roleList.length) {\n      if (this.props.userInfo.default_access && this.state.loadingForm) {\n        // SET DEFAULT ROLE ID =======================\n        if (!this.state.roleId.length) {\n          let result = this.props.roleList.find(\n            (role) =>\n              role.system_user_role_id ===\n              this.props.userInfo.default_access!.system_user_role_id\n          );\n          if (result) {\n            this.setRoleId(\n              this.props.userInfo.default_access.system_user_role_id\n            );\n            this.setSelectedRole(result);\n            this.setDefaultState(this.props.userInfo.default_access, result);\n          }\n        }\n\n        console.log(\"====================================\");\n        console.log({ vvvvv: this.props.userInfo.default_access });\n        console.log(\"====================================\");\n      }\n\n      if (this.state.selectedRole && this.props.userInfo.default_access) {\n        this.setDefaultState(\n          this.props.userInfo.default_access,\n          this.state.selectedRole\n        );\n      }\n\n      this.setLoading(false);\n    }\n  };\n\n  handleSelectRole = (\n    role_id: string,\n    TYPE: \"SELECT\" | \"DEFAULT\" = \"SELECT\"\n  ) => {\n    if (this.props.roleList) {\n      let result = this.props.roleList.find(\n        (role) => role.system_user_role_id === role_id\n      );\n      if (result) {\n        this.setRoleId(role_id);\n        this.setSelectedRole(result);\n        this.state.formError &&\n          this.state.formError.element === \"role_id\" &&\n          this.setFormError(null);\n\n        if (TYPE === \"SELECT\") {\n          this.setProvinceId(\"\");\n          this.setDistrictId(\"\");\n          this.setSchoolId(\"\");\n          this.setCenterId(\"\");\n          this.setRoomId(\"\");\n          this.setInstituteId(\"\");\n        }\n      }\n    }\n  };\n\n  tableData = (): JSX.Element[] => {\n    if (\n      this.state.roleId.length > 0 &&\n      this.state.selectedRole === null &&\n      this.props.roleList\n    ) {\n      this.handleSelectRole(this.state.roleId, \"DEFAULT\");\n    }\n    if (this.state.selectedRole) {\n      return this.state.selectedRole.access.map((access, i) => (\n        <tr\n          key={i + access.id + Math.random()}\n          className={`text-left border-b border-gray-200 hover:bg-gray-100`}\n        >\n          <td className=\"px-2 py-1\">\n            <label className=\"inline-flex items-center\">\n              <span className=\"text-gray-900 capitalize text-xl font-normal cursor-pointer\">\n                {access.task}\n              </span>\n            </label>\n          </td>\n          <td>\n            <div\n              className={`inline-flex items-center text-xl ${\n                access.permitted.create ? \"text-green-700\" : \"text-red-700\"\n              }`}\n            >\n              {access.permitted.create ? (\n                <TiInputChecked />\n              ) : (\n                <MdHighlightOff />\n              )}\n              {access.permitted.create ? \" Yes\" : \"No\"}\n            </div>\n          </td>\n          <td>\n            <div\n              className={`inline-flex items-center text-xl ${\n                access.permitted.view ? \"text-green-700\" : \"text-red-700\"\n              }`}\n            >\n              {access.permitted.view ? <TiInputChecked /> : <MdHighlightOff />}\n              {access.permitted.view ? \" Yes\" : \"No\"}\n            </div>\n          </td>\n          <td>\n            <div\n              className={`inline-flex items-center text-xl ${\n                access.permitted.update ? \"text-green-700\" : \"text-red-700\"\n              }`}\n            >\n              {access.permitted.update ? (\n                <TiInputChecked />\n              ) : (\n                <MdHighlightOff />\n              )}\n              {access.permitted.update ? \" Yes\" : \"No\"}\n            </div>\n          </td>\n          <td>\n            <div\n              className={`inline-flex items-center text-xl ${\n                access.permitted.delete ? \"text-green-700\" : \"text-red-700\"\n              }`}\n            >\n              {access.permitted.delete ? (\n                <TiInputChecked />\n              ) : (\n                <MdHighlightOff />\n              )}\n              {access.permitted.delete ? \" Yes\" : \"No\"}\n            </div>\n          </td>\n        </tr>\n      ));\n    }\n    const optionB = [\n      <tr key=\"55re\">\n        <td colSpan={5} className=\"text-center px-2 py-2\">\n          No Default Access Available on this Role.\n        </td>\n      </tr>,\n    ];\n    return optionB;\n  };\n\n  assignRoleToUser = async (e: React.FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n    if (!window.confirm(`Are sure you want to change user role?`)) {\n      return false;\n    }\n\n    if (!this.state.selectedRole) {\n      return this.setFormError({\n        element: \"role_id\",\n        msg: \"User role is required!\",\n      });\n    }\n\n    if (\n      this.state.selectedRole.room_required === true &&\n      isEmptyOrSpaces(this.state.provinceId)\n    ) {\n      return this.setFormError({\n        element: \"province_id\",\n        msg: \"Province is required!\",\n      });\n    }\n\n    if (\n      this.state.selectedRole.education_institution_required === true &&\n      isEmptyOrSpaces(this.state.instituteId)\n    ) {\n      return this.setFormError({\n        element: \"institute_id\",\n        msg: \"Institute is required on this role!\",\n      });\n    }\n\n    if (\n      (this.state.selectedRole.room_required === true ||\n        this.state.selectedRole.district_required === true) &&\n      isEmptyOrSpaces(this.state.districtId)\n    ) {\n      return this.setFormError({\n        element: \"district_id\",\n        msg: \"District is required!\",\n      });\n    }\n\n    if (\n      this.state.selectedRole.school_required === true &&\n      isEmptyOrSpaces(this.state.schoolId)\n    ) {\n      return this.setFormError({\n        element: \"school_id\",\n        msg: \"School is required!\",\n      });\n    }\n\n    if (\n      this.state.selectedRole.room_required === true &&\n      isEmptyOrSpaces(this.state.centerId)\n    ) {\n      return this.setFormError({\n        element: \"center_id\",\n        msg: \"Center is required!\",\n      });\n    }\n\n    if (\n      this.state.selectedRole.room_required === true &&\n      isEmptyOrSpaces(this.state.roomId)\n    ) {\n      return this.setFormError({\n        element: \"room_id\",\n        msg: \"Room is required!\",\n      });\n    }\n    this.setLoadingRequest(true);\n    let formData: AssignRoleToUserActionInterface = {\n      user_id: this.props.userInfo.user_id,\n      data: {\n        system_user_role_id: this.state.roleId,\n        status: 1,\n        role: this.state.selectedRole.role,\n        access: this.state.selectedRole.access,\n        school_id: this.state.selectedRole.school_required\n          ? this.state.schoolId\n          : \"\",\n        district_id: this.state.selectedRole.district_required\n          ? this.state.districtId\n          : \"\",\n        room_id: this.state.selectedRole.room_required ? this.state.roomId : \"\",\n        education_institution_id: this.state.selectedRole\n          .education_institution_required\n          ? this.state.instituteId\n          : \"\",\n      },\n    };\n\n    try {\n      const res = await axios.post(`${API.AUTH}/addroletouser`, {\n        user_id: this.props.userInfo.user_id,\n        system_user_role_id: this.state.roleId,\n        status: 1,\n        role: this.state.selectedRole.role,\n        access: true,\n        school_id:\n          this.state.selectedRole.school_required === true\n            ? this.state.schoolId\n            : \"\",\n        district_id:\n          this.state.selectedRole.district_required === true\n            ? this.state.districtId\n            : \"\",\n        room_id:\n          this.state.selectedRole.room_required === true\n            ? this.state.roomId\n            : \"\",\n        education_institution_id: this.state.selectedRole\n          .education_institution_required\n          ? this.state.instituteId\n          : \"\",\n      });\n      if (res) {\n        console.log(\"====================================\");\n        console.log({ assignRoleToUser: res });\n        console.log(\"====================================\");\n        this.props.assignRoleToUserAccess(formData, this.props.currentPage);\n        this.setLoadingRequest(false);\n        this.props.setChangeRole(false);\n        this.props.PushPopupAlert({\n          title: \"Assigning Role to User completed successfully\",\n          theme: PopupAlertTheme.success,\n        });\n      }\n    } catch (error) {\n      console.log({ role_error: error });\n      this.props.PushPopupAlert({\n        title: errorToText(error),\n        theme: PopupAlertTheme.danger,\n      });\n    }\n  };\n\n  distinctDistrict = (\n    location: RoomLocationInterface[],\n    province_id?: string\n  ): DistrictInterface[] => {\n    let ids: string[] = [],\n      result: DistrictInterface[] = [];\n\n    if (province_id) {\n      result = location.find((item) => item._id === province_id)\n        ? location.find((item) => item._id === province_id)!.districts\n          ? location.find((item) => item._id === province_id)!.districts\n          : []\n        : [];\n    } else {\n      for (const key in location) {\n        if (Object.prototype.hasOwnProperty.call(location, key)) {\n          for (const keyDistrict in location[key].districts) {\n            if (\n              Object.prototype.hasOwnProperty.call(\n                location[key].districts,\n                keyDistrict\n              )\n            ) {\n              if (!ids.includes(location[key].districts[keyDistrict]._id)) {\n                ids.push(location[key].districts[keyDistrict]._id);\n                result.push(location[key].districts[keyDistrict]);\n              }\n            }\n          }\n        }\n      }\n    }\n\n    return result;\n  };\n\n  distinctCenter = (\n    rooms: RoomLocationInterface[],\n    district_id: string\n  ): LocationRoomTableInterface[] => {\n    let ids: string[] = [],\n      result: LocationRoomTableInterface[] = [];\n\n    LocationsInArray(rooms).forEach((element) => {\n      if (\n        !ids.includes(element.center_id) &&\n        element.district_id === district_id\n      ) {\n        ids.push(element.center_id);\n        result.push(element);\n      }\n    });\n    return result;\n  };\n\n  distinctRoom = (\n    rooms: RoomLocationInterface[],\n    center_id: string\n  ): LocationRoomTableInterface[] => {\n    let ids: string[] = [],\n      result: LocationRoomTableInterface[] = [];\n\n    LocationsInArray(rooms).forEach((element) => {\n      if (!ids.includes(element.room_id) && element.center_id === center_id) {\n        ids.push(element.room_id);\n        result.push(element);\n      }\n    });\n    return result;\n  };\n\n  render() {\n    if (\n      this.state.loading === true ||\n      this.state.loadingForm ||\n      this.props.userInfo.default_access === null ||\n      this.state.roleId.length === 0 ||\n      this.state.selectedRole === null\n    ) {\n      return (\n        <div className=\"text-center py-7 font-bold text-3xl text-gray-400 animate-pulse\">\n          Loading...\n        </div>\n      );\n    }\n\n    return (\n      <div className=\"grid grid-cols-1 md:grid-cols-3 gap-8 py-2 md:py-4 px-2 md:px-0\">\n        {/* left panel */}\n        <div className=\"col-span-1 bg-white w-full overflow-x-auto border rounded\">\n          <div className=\"px-6 md:px-12 py-5 bg-white mx-auto rounded-2xl w-100\">\n            <h3 className=\"font-semibold text-2xl text-gray-800 mb-4\">\n              Change User Role\n            </h3>\n            {this.state.loadingForm ? (\n              <Loading />\n            ) : (\n              <form onSubmit={(e) => this.assignRoleToUser(e)}>\n                <div className=\"space-y-5\">\n                  <div className=\"space-y-2\">\n                    <label className=\"text-sm font-medium text-gray-700 tracking-wide\">\n                      User Role\n                    </label>\n\n                    {!this.state.chooseRole && (\n                      <div\n                        className={`w-full text-base bg-white text-grey-darker cursor-pointer border-2 px-4 py-3 rounded focus:outline-none focus:bg-gray-100 ${\n                          this.state.formError &&\n                          this.state.formError.element === \"role_id\"\n                            ? \"border-red-500\"\n                            : \"border-gray-400\"\n                        }`}\n                        onClick={() => {\n                          !this.state.loadingRequest &&\n                            this.setChooseRole(true);\n                          !this.state.loadingRequest && this.setFormError(null);\n                        }}\n                      >\n                        {this.state.selectedRole\n                          ? this.state.selectedRole.role\n                          : \"Select role\"}\n                      </div>\n                    )}\n\n                    {this.state.chooseRole && (\n                      <RoleList\n                        setChooseRole={this.setChooseRole}\n                        handleSelectRole={this.handleSelectRole}\n                        roleList={this.props.roleList}\n                        loadindRequest={this.state.loadingRequest}\n                      />\n                    )}\n\n                    {this.state.formError &&\n                      this.state.formError.element === \"role_id\" && (\n                        <span className=\"text-red-500\">\n                          {this.state.formError.msg}\n                        </span>\n                      )}\n                  </div>\n\n                  {this.state.selectedRole &&\n                    this.state.selectedRole.education_institution_required && (\n                      <div className=\"space-y-2\">\n                        <label className=\"mb-5 text-sm font-medium text-gray-700 tracking-wide\">\n                          Institute\n                        </label>\n                        <select\n                          className={`block w-full text-base bg-white text-grey-darker border-2 rounded px-4 py-3 md:w-full focus:outline-none focus:bg-gray-100 ${\n                            this.state.formError &&\n                            this.state.formError.element === \"institute_id\"\n                              ? \"border-red-500\"\n                              : \"border-gray-400\"\n                          }`}\n                          onChange={(e) => {\n                            this.setInstituteId(e.target.value);\n                            this.setProvinceId(\"\");\n                            this.setDistrictId(\"\");\n                            this.setSchoolId(\"\");\n                            this.setCenterId(\"\");\n                            this.setRoomId(\"\");\n                            this.state.formError &&\n                              this.state.formError.element === \"institute_id\" &&\n                              this.setFormError(null);\n                          }}\n                          disabled={this.state.loadingRequest}\n                          value={this.state.instituteId}\n                        >\n                          <option value=\"\">Select institute</option>\n                          {this.props.schoolLevels.education_categories &&\n                          this.props.schoolLevels.education_categories.length >\n                            0 ? (\n                            this.props.schoolLevels.education_categories.map(\n                              (institute) => (\n                                <option\n                                  value={institute.education_institute_id}\n                                  key={\n                                    institute.education_institute_id +\n                                    Math.random()\n                                  }\n                                >\n                                  {institute.education_category_title}\n                                </option>\n                              )\n                            )\n                          ) : (\n                            <option value=\"\" disabled>\n                              No institute available\n                            </option>\n                          )}\n                        </select>\n                        {this.state.formError &&\n                          this.state.formError.element === \"institute_id\" && (\n                            <span className=\"text-red-500\">\n                              {this.state.formError.msg}\n                            </span>\n                          )}\n                      </div>\n                    )}\n\n                  {this.state.selectedRole &&\n                    this.state.selectedRole.room_required && (\n                      <div className=\"space-y-2\">\n                        <label className=\"mb-5 text-sm font-medium text-gray-700 tracking-wide\">\n                          Province\n                        </label>\n                        <select\n                          className={`block w-full text-base bg-white text-grey-darker border-2 rounded px-4 py-3 md:w-full focus:outline-none focus:bg-gray-100 ${\n                            this.state.formError &&\n                            this.state.formError.element === \"province_id\"\n                              ? \"border-red-500\"\n                              : \"border-gray-400\"\n                          }`}\n                          onChange={(e) => {\n                            this.setProvinceId(e.target.value);\n                            this.state.formError &&\n                              this.state.formError.element === \"province_id\" &&\n                              this.setFormError(null);\n                            this.setDistrictId(\"\");\n                            this.setSchoolId(\"\");\n                            this.setCenterId(\"\");\n                            this.setRoomId(\"\");\n                          }}\n                          value={this.state.provinceId}\n                          disabled={this.state.loadingRequest}\n                        >\n                          <option value=\"\">Select province</option>\n                          {this.props.roomList &&\n                            this.props.roomList.map((province) => (\n                              <option\n                                key={province._id + Math.random()}\n                                value={province._id}\n                              >\n                                {province.province_name}\n                              </option>\n                            ))}\n                        </select>\n                        {this.state.formError &&\n                          this.state.formError.element === \"province_id\" && (\n                            <span className=\"text-red-500\">\n                              {this.state.formError.msg}\n                            </span>\n                          )}\n                      </div>\n                    )}\n                  {this.state.selectedRole &&\n                    (this.state.selectedRole.district_required ||\n                      this.state.selectedRole.room_required) && (\n                      <div className=\"space-y-2\">\n                        <label className=\"mb-5 text-sm font-medium text-gray-700 tracking-wide\">\n                          District\n                        </label>\n                        <select\n                          className={`block w-full text-base bg-white text-grey-darker border-2 rounded px-4 py-3 md:w-full focus:outline-none focus:bg-gray-100 ${\n                            this.state.formError &&\n                            this.state.formError.element === \"district_id\"\n                              ? \"border-red-500\"\n                              : \"border-gray-400\"\n                          }`}\n                          onChange={(e) => {\n                            this.setDistrictId(e.target.value);\n                            this.state.formError &&\n                              this.state.formError.element === \"district_id\" &&\n                              this.setFormError(null);\n                            this.setSchoolId(\"\");\n                            this.setCenterId(\"\");\n                            this.setRoomId(\"\");\n                          }}\n                          value={this.state.districtId}\n                          disabled={this.state.loadingRequest}\n                        >\n                          <option value=\"\">Select district</option>\n                          {this.props.roomList &&\n                          this.distinctDistrict(\n                            this.props.roomList,\n                            !isEmptyOrSpaces(this.state.provinceId)\n                              ? this.state.provinceId\n                              : undefined\n                          ).length > 0 ? (\n                            this.distinctDistrict(\n                              this.props.roomList,\n                              !isEmptyOrSpaces(this.state.provinceId)\n                                ? this.state.provinceId\n                                : undefined\n                            ).map((district) => (\n                              <option\n                                key={district._id + Math.random()}\n                                value={district._id}\n                              >\n                                {district.district_name}\n                              </option>\n                            ))\n                          ) : (\n                            <option value=\"\" disabled>\n                              No district found\n                            </option>\n                          )}\n                        </select>\n                        {this.state.formError &&\n                          this.state.formError.element === \"district_id\" && (\n                            <span className=\"text-red-500\">\n                              {this.state.formError.msg}\n                            </span>\n                          )}\n                      </div>\n                    )}\n                  {this.state.selectedRole &&\n                    this.state.selectedRole.school_required && (\n                      <div className=\"space-y-2\">\n                        <label className=\"mb-5 text-sm font-medium text-gray-700 tracking-wide\">\n                          School\n                        </label>\n                        {/* {!this.state.chooseSchool && (\n                          <div\n                            className={`w-full text-base bg-white text-grey-darker cursor-pointer border-2 px-4 py-3 rounded focus:outline-none focus:bg-gray-100 ${\n                              this.state.formError &&\n                              this.state.formError.element === \"school_id\"\n                                ? \"border-red-500\"\n                                : \"border-gray-400\"\n                            }`}\n                            onClick={() => {\n                              !this.state.loadingRequest &&\n                                this.setChooseSchool(true);\n                              !this.state.loadingRequest &&\n                                this.setFormError(null);\n                            }}\n                          >\n                            {this.state.schoolId\n                              ? this.state.schoolId\n                              : \"Select school\"}\n                          </div>\n                        )}\n\n                        {this.state.chooseSchool && (\n                          <ChooseSchoolById\n                            allSchool={this.props.schoolList}\n                            setSelectSchool={(school_id: string) => {\n                              this.setSchoolId(school_id);\n                              this.state.formError &&\n                                this.state.formError.element === \"school_id\" &&\n                                this.setFormError(null);\n                              this.setCenterId(\"\");\n                              this.setRoomId(\"\");\n                            }}\n                            currentSelected={this.state.schoolId}\n                            setChooseSchool={this.setChooseSchool}\n                          />\n                        )} */}\n                        <select\n                          className={`block w-full text-base bg-white text-grey-darker border-2 rounded px-4 py-3 md:w-full focus:outline-none focus:bg-gray-100 ${\n                            this.state.formError &&\n                            this.state.formError.element === \"school_id\"\n                              ? \"border-red-500\"\n                              : \"border-gray-400\"\n                          }`}\n                          onChange={(e) => {\n                            this.setSchoolId(e.target.value);\n                            this.state.formError &&\n                              this.state.formError.element === \"school_id\" &&\n                              this.setFormError(null);\n                            this.setCenterId(\"\");\n                            this.setRoomId(\"\");\n                          }}\n                          disabled={this.state.loadingRequest}\n                          value={this.state.schoolId}\n                        >\n                          <option value=\"\">Selected school</option>\n                          {this.props.schoolList &&\n                            this.props.schoolList.map((school) => (\n                              <option\n                                value={school._id}\n                                key={school._id + Math.random()}\n                              >\n                                {school.school_name}\n                              </option>\n                            ))}\n                        </select>\n                        {this.state.formError &&\n                          this.state.formError.element === \"school_id\" && (\n                            <span className=\"text-red-500\">\n                              {this.state.formError.msg}\n                            </span>\n                          )}\n                      </div>\n                    )}\n\n                  {this.state.selectedRole &&\n                    this.state.selectedRole.room_required && (\n                      <div className=\"space-y-2\">\n                        <label className=\"mb-5 text-sm font-medium text-gray-700 tracking-wide\">\n                          Center\n                        </label>\n                        <select\n                          className={`block w-full text-base bg-white text-grey-darker border-2 rounded px-4 py-3 md:w-full focus:outline-none focus:bg-gray-100 ${\n                            this.state.formError &&\n                            this.state.formError.element === \"center_id\"\n                              ? \"border-red-500\"\n                              : \"border-gray-400\"\n                          }`}\n                          onChange={(e) => {\n                            this.setCenterId(e.target.value);\n                            this.state.formError &&\n                              this.state.formError.element === \"center_id\" &&\n                              this.setFormError(null);\n                            this.setRoomId(\"\");\n                          }}\n                          disabled={this.state.loadingRequest}\n                          value={this.state.centerId}\n                        >\n                          <option value=\"\">Select center</option>\n                          {this.state.districtId &&\n                          this.state.districtId.length > 0 &&\n                          this.props.roomList &&\n                          this.distinctCenter(\n                            this.props.roomList,\n                            this.state.districtId\n                          ).length > 0 ? (\n                            this.distinctCenter(\n                              this.props.roomList,\n                              this.state.districtId\n                            ).map((center, index) => (\n                              <option\n                                value={center.center_id}\n                                key={center.center_id + index + Math.random()}\n                              >\n                                {center.center_name}\n                              </option>\n                            ))\n                          ) : (\n                            <option value=\"\" disabled>\n                              No center found\n                            </option>\n                          )}\n                        </select>\n                        {this.state.formError &&\n                          this.state.formError.element === \"center_id\" && (\n                            <span className=\"text-red-500\">\n                              {this.state.formError.msg}\n                            </span>\n                          )}\n                      </div>\n                    )}\n\n                  {this.state.selectedRole &&\n                    this.state.selectedRole.room_required && (\n                      <div className=\"space-y-2\">\n                        <label className=\"mb-5 text-sm font-medium text-gray-700 tracking-wide\">\n                          Room\n                        </label>\n                        <select\n                          className={`block w-full text-base bg-white text-grey-darker border-2 rounded px-4 py-3 md:w-full focus:outline-none focus:bg-gray-100 ${\n                            this.state.formError &&\n                            this.state.formError.element === \"room_id\"\n                              ? \"border-red-500\"\n                              : \"border-gray-400\"\n                          }`}\n                          onChange={(e) => {\n                            this.setRoomId(e.target.value);\n                            this.state.formError &&\n                              this.state.formError.element === \"room_id\" &&\n                              this.setFormError(null);\n                          }}\n                          disabled={this.state.loadingRequest}\n                          value={this.state.roomId}\n                        >\n                          <option value=\"\">Select room</option>\n                          {!isEmptyOrSpaces(this.state.centerId) &&\n                          this.props.roomList &&\n                          this.distinctRoom(\n                            this.props.roomList,\n                            this.state.centerId\n                          ).length > 0 ? (\n                            this.distinctRoom(\n                              this.props.roomList,\n                              this.state.centerId\n                            ).map((room, index) => (\n                              <option\n                                value={room.room_id}\n                                key={room.room_id + index + Math.random()}\n                                className={`${\n                                  room.room_name === \"0\" ? \"hidden\" : \"block\"\n                                }`}\n                              >\n                                {room.room_name}\n                              </option>\n                            ))\n                          ) : (\n                            <option value=\"\" disabled>\n                              No room found\n                            </option>\n                          )}\n                        </select>\n                        {this.state.formError &&\n                          this.state.formError.element === \"room_id\" && (\n                            <span className=\"text-red-500\">\n                              {this.state.formError.msg}\n                            </span>\n                          )}\n                      </div>\n                    )}\n\n                  <div className=\"flex justify-between 2xl:justify-start gap-2\">\n                    <button\n                      className=\"btn bg-gray-500 text-gray-50 focus:outline-none\"\n                      onClick={() => {\n                        this.props.setChangeRole(false);\n                        this.setFormError(null);\n                        this.setProvinceId(\"\");\n                        this.setDistrictId(\"\");\n                        this.setSchoolId(\"\");\n                        this.setCenterId(\"\");\n                        this.setRoomId(\"\");\n                      }}\n                      disabled={this.state.loadingRequest}\n                    >\n                      Back\n                    </button>\n                    <button\n                      className=\"btn btn-blue focus:outline-none\"\n                      // onClick={() => assignRoleToUser()}\n                      disabled={this.state.loadingRequest}\n                    >\n                      {this.state.loadingRequest ? \"Loading...\" : \"Save Change\"}\n                    </button>\n                  </div>\n                </div>\n              </form>\n            )}\n          </div>\n        </div>\n        {/* end left panel */}\n\n        {/* ------------------------------------------------------------ */}\n\n        {/* right panel */}\n        <div className=\"cols-span-1 md:col-span-2 bg-white w-full border rounded text-center p-2 hidden md:block\">\n          <div className=\"my-4\">\n            <span className=\"text-gray-600 font-semibold text-2xl\">\n              {this.state.selectedRole?.role}'s Default Access\n            </span>\n          </div>\n          {!this.state.loading && (\n            <div className=\"overflow-x-auto w-full\">\n              <Table\n                columns={[\n                  {\n                    columnTitle: \"Access Name\",\n                    alignText: \"left\",\n                    padding: \"p-3\",\n                  },\n                  { columnTitle: \"Create\", alignText: \"left\" },\n                  { columnTitle: \"View\", alignText: \"left\" },\n                  { columnTitle: \"Update\", alignText: \"left\" },\n                  { columnTitle: \"Delete\", alignText: \"left\" },\n                ]}\n                rows={this.tableData}\n                pagination={false}\n                search={false}\n                searchBG=\"bg-gray-50\"\n                thColor=\"gray\"\n                tableId=\"defaultAccess\"\n              />\n            </div>\n          )}\n        </div>\n        {/* end right panel */}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = ({\n  schoolLevels,\n}: StoreState): {\n  schoolLevels: schoolLevelsStoreInterface;\n} => {\n  return { schoolLevels };\n};\n\nexport default React.memo(\n  connect(mapStateToProps, {\n    assignRoleToUserAccess,\n    PushPopupAlert,\n  })(UserRole)\n);\n","export default __webpack_public_path__ + \"static/media/blank_profile.c3f94521.png\";","import React, { useState } from \"react\";\nimport {\n  MdCheckCircle,\n  MdRadioButtonUnchecked,\n  MdSearch,\n} from \"react-icons/md\";\nimport Loading from \"../../components/Loading/Loading\";\nimport {\n  PlansInterface,\n  SessionPlanInterface,\n  SessionPlanTypeStatus,\n} from \"../../interfaces\";\nimport { DATE } from \"../../utils/functions\";\nimport searchData from \"../../utils/search\";\n\nexport const isPlansActive = (plans: PlansInterface[]): PlansInterface[] => {\n  let today = new Date();\n  let activePlans: PlansInterface[] = [];\n  for (let plan of plans) {\n    let startDate = new Date(plan.start_date);\n    let endDate = new Date(plan.end_date);\n    if (\n      startDate.getTime() <= today.getTime() &&\n      endDate.getTime() >= today.getTime() &&\n      plan.type_status === SessionPlanTypeStatus.OPEN\n    ) {\n      activePlans = [...activePlans, plan];\n    }\n  }\n  return activePlans;\n};\n\ninterface ChooseSessionProps {\n  allSession: SessionPlanInterface[] | null;\n  setSelectSession: (period: SessionPlanInterface | \"all\") => void;\n  currentSelected: SessionPlanInterface | \"all\";\n  chooseAll: boolean;\n}\n\nconst ChooseSession = (props: ChooseSessionProps) => {\n  const [selectedPlan, setSelectedPlan] = useState<SessionPlanInterface | null>(\n    null\n  );\n  const [search, setSearch] = useState<string>(\"\");\n  const getSearch = (\n    period: SessionPlanInterface[],\n    searched: string\n  ): SessionPlanInterface[] => {\n    return searchData(period, searched) as SessionPlanInterface[];\n  };\n\n  return (\n    <div className=\"\">\n      <div className=\"px-3\">\n        <input\n          onChange={(e: React.ChangeEvent<HTMLInputElement>) =>\n            setSearch(e.target.value)\n          }\n          type=\"text\"\n          className=\"py-3 px-4 w-full rounded border border-gray-400 mb-3\"\n          placeholder=\"Search by year, name\"\n          disabled={props.allSession === null || props.allSession.length === 0}\n        />\n      </div>\n\n      <div className=\"bg-gray-100 px-3 pt-3 pb-2 rounded-b\">\n        {props.allSession === null ? (\n          <Loading />\n        ) : props.allSession.length === 0 ? (\n          <div className=\"flex flex-col text-gray-400 items-center justify-center mb-2 bg-white py-4\">\n            <MdSearch className=\"text-6xl\" />\n            <div className=\"flex flex-col items-center justify-center\">\n              <span>No session found!</span>\n            </div>\n          </div>\n        ) : (\n          <section>\n            {props.chooseAll && (\n              <div\n                className={`rounded border ${\n                  props.currentSelected === \"all\"\n                    ? \"bg-blue-50 border-blue-300\"\n                    : \"bg-white border-white \"\n                } group hover:border-blue-500 px-2 py-2 mb-2 flex flex-col md:flex-row items-start md:items-center md:justify-between`}\n              >\n                <div className=\"flex flex-row items-center gap-3\">\n                  {props.currentSelected === \"all\" ? (\n                    <MdCheckCircle className={`text-blue-500 text-4xl`} />\n                  ) : (\n                    <MdRadioButtonUnchecked\n                      className={`text-gray-300 text-4xl`}\n                    />\n                  )}\n                  <div className=\"flex flex-col\">\n                    <div className={`text-gray-600 font-bold`}>All session</div>\n                  </div>\n                </div>\n                <div\n                  onClick={() => {\n                    props.setSelectSession(\"all\");\n                  }}\n                  className=\"bg-gray-50 group-hover:bg-blue-600 font-semibold text-gray-400 group-hover:text-white rounded px-3 py-2 cursor-pointer\"\n                >\n                  Select\n                </div>\n              </div>\n            )}\n            {getSearch(props.allSession, search).map((item, i) => (\n              <div\n                key={i + 1}\n                className={`rounded border ${\n                  props.currentSelected !== \"all\" &&\n                  props.currentSelected.session_plan_id === item.session_plan_id\n                    ? \"bg-blue-50 border-blue-300\"\n                    : \"bg-white border-white \"\n                } group hover:border-blue-500 px-2 py-2 mb-2`}\n              >\n                <div className=\"flex flex-col md:flex-row items-start md:items-center md:justify-between \">\n                  <div className=\"flex flex-row items-center gap-3\">\n                    {props.currentSelected !== \"all\" &&\n                    props.currentSelected.session_plan_id ===\n                      item.session_plan_id ? (\n                      <MdCheckCircle className={`text-blue-500 text-4xl`} />\n                    ) : (\n                      <MdRadioButtonUnchecked\n                        className={`text-gray-300 text-4xl`}\n                      />\n                    )}\n                    <div className=\"flex flex-col\">\n                      <div\n                        className={`${\n                          props.currentSelected !== \"all\" &&\n                          props.currentSelected.session_plan_id ===\n                            item.session_plan_id\n                            ? \"text-blue-600\"\n                            : \"text-gray-600\"\n                        } font-bold`}\n                      >\n                        {item.session_plan_name}\n                      </div>\n                      <div className=\"text-sm text-gray-500\">\n                        <span>Status: </span>\n                        <span\n                          className={`${\n                            item.is_active === true\n                              ? \"text-gray-900 font-bold underline\"\n                              : \"text-gray-500 italic\"\n                          }`}\n                        >\n                          {item.is_active === true ? \"Active\" : \"Expired\"}\n                        </span>\n                      </div>\n                    </div>\n                  </div>\n                  <div className=\"flex flex-row items-center gap-2\">\n                    {(selectedPlan === null ||\n                      selectedPlan.session_plan_id !==\n                        item.session_plan_id) && (\n                      <div\n                        onClick={() => setSelectedPlan(item)}\n                        className=\"bg-gray-50 group-hover:bg-blue-100 font-semibold text-gray-400 group-hover:text-blue-600 rounded px-3 py-2 cursor-pointer\"\n                      >\n                        Details\n                      </div>\n                    )}\n                    <div\n                      onClick={() => {\n                        props.setSelectSession(item);\n                      }}\n                      className=\"bg-gray-50 group-hover:bg-blue-600 font-semibold text-gray-400 group-hover:text-white rounded px-3 py-2 cursor-pointer\"\n                    >\n                      Select\n                    </div>\n                    {selectedPlan !== null &&\n                      selectedPlan.session_plan_id === item.session_plan_id && (\n                        <div\n                          onClick={() => setSelectedPlan(null)}\n                          className=\"bg-red-100 group-hover:bg-red-200 font-semibold text-red-600 group-hover:text-red-800 rounded px-3 py-2 cursor-pointer\"\n                        >\n                          Close\n                        </div>\n                      )}\n                  </div>\n                </div>\n                {selectedPlan !== null &&\n                  selectedPlan.session_plan_id === item.session_plan_id && (\n                    <div className=\"bg-white rounded border border-blue-50 mt-2 animate__animated animate__fadeIn\">\n                      <table className=\"w-full\">\n                        <thead className=\"bg-blue-50\">\n                          <tr className=\"text-left\">\n                            <th className=\"px-3 py-3\">#</th>\n                            <th>Plan</th>\n                            <th>Start date</th>\n                            <th>Ending date</th>\n                            <th>Status</th>\n                          </tr>\n                        </thead>\n                        <tbody className=\"text-sm\">\n                          {selectedPlan !== null &&\n                            selectedPlan.session_plan_id ===\n                              item.session_plan_id &&\n                            selectedPlan.plans.length > 0 &&\n                            item.plans.map((plan, i) => (\n                              <tr\n                                key={i + 1}\n                                className={`${\n                                  isPlansActive(item.plans).find(\n                                    (itm) => itm.type_key === plan.type_key\n                                  ) !== undefined\n                                    ? \"bg-blue-100 text-blue-600 font-bold\"\n                                    : \"\"\n                                } text-left border-b border-blue-50`}\n                              >\n                                <td className=\"px-3 py-1\">{i + 1}</td>\n                                <td>{plan.type_title}</td>\n                                <td>{DATE(plan.start_date, \"DD/MM/YYYY\")}</td>\n                                <td>{DATE(plan.end_date, \"DD/MM/YYYY\")}</td>\n                                <td>{plan.type_status}</td>\n                              </tr>\n                            ))}\n                        </tbody>\n                      </table>\n                    </div>\n                  )}\n              </div>\n            ))}\n          </section>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default React.memo(ChooseSession);\n","import React, { Fragment, useState } from \"react\";\nimport { BiSort } from \"react-icons/bi\";\nimport { connect } from \"react-redux\";\nimport Loading from \"../../../components/Loading/Loading\";\nimport { SessionPlanInterface } from \"../../../interfaces\";\nimport { course } from \"../../../interfaces/course\";\nimport { ExamItemResponse } from \"../../../interfaces/prepare_exam\";\nimport {\n  CandidatesFailedSucceeded,\n  ReportUserExamStatus,\n} from \"../../../interfaces/reports\";\nimport { StoreState } from \"../../../reducers\";\nimport { ExamReportReducerType } from \"../../../reducers/exam_report\";\nimport { capitalizeFirstLetter } from \"../../../shared/dataTest\";\nimport { DATE, sortThisArray, timestampToDate } from \"../../../utils/functions\";\nimport { displayStatus } from \"./DoneExamList\";\nimport { getPeriodById } from \"./ExamReport\";\n\n// EXCEL FILE FUNCTIONS ================================\nexport interface CandidateExamPerformanceToPrintInterface {\n  applicant_id: number;\n  course_name: string;\n  course_code: string;\n  description: string;\n  school_levels: string;\n  exam_period: string;\n  exam_date: string;\n  exam_start_time: string;\n  exam_end_time: string;\n  applicant_name: string;\n  national_id: string;\n  email: string;\n  phone: string;\n  marks: string;\n  performance_status: string;\n}\n\nexport enum CandidateExamPerformanceReportContentKeyInterface {\n  APPLICANT = \"applicant_name\",\n  N_ID = \"national_id\",\n  EMAIL = \"email\",\n  PHONE = \"phone\",\n  MARKS = \"marks\",\n  STATUS = \"performance_status\",\n  COURSER_NAME = \"course_name\",\n  COURSE_CODE = \"course_code\",\n  SCHOOL_LEVEL = \"school_levels\",\n  PERIOD = \"exam_period\",\n  DATE = \"exam_date\",\n  START_TIME = \"exam_start_time\",\n  END_TIME = \"exam_end_time\",\n}\n\nexport interface CandidateExamPerformanceReportContentInterface {\n  key: CandidateExamPerformanceReportContentKeyInterface;\n  title: string;\n  status: boolean;\n}\n\nexport const candidateExamPerformanceIsChangeAllowed = (\n  key: CandidateExamPerformanceReportContentKeyInterface\n): boolean => {\n  if (\n    key === CandidateExamPerformanceReportContentKeyInterface.COURSER_NAME ||\n    key === CandidateExamPerformanceReportContentKeyInterface.COURSE_CODE ||\n    key === CandidateExamPerformanceReportContentKeyInterface.PERIOD ||\n    key === CandidateExamPerformanceReportContentKeyInterface.APPLICANT ||\n    key === CandidateExamPerformanceReportContentKeyInterface.N_ID\n  ) {\n    return false;\n  }\n  return true;\n};\n\nexport const defaultCandidateExamPerformanceContent: CandidateExamPerformanceReportContentInterface[] =\n  [\n    {\n      key: CandidateExamPerformanceReportContentKeyInterface.APPLICANT,\n      title: \"Applicant names\",\n      status: true,\n    },\n    {\n      key: CandidateExamPerformanceReportContentKeyInterface.N_ID,\n      title: \"National ID\",\n      status: true,\n    },\n    {\n      key: CandidateExamPerformanceReportContentKeyInterface.EMAIL,\n      title: \"Email\",\n      status: true,\n    },\n    {\n      key: CandidateExamPerformanceReportContentKeyInterface.PHONE,\n      title: \"Phone\",\n      status: true,\n    },\n    {\n      key: CandidateExamPerformanceReportContentKeyInterface.MARKS,\n      title: \"Marks\",\n      status: true,\n    },\n    {\n      key: CandidateExamPerformanceReportContentKeyInterface.COURSER_NAME,\n      title: \"Course names\",\n      status: true,\n    },\n    {\n      key: CandidateExamPerformanceReportContentKeyInterface.COURSE_CODE,\n      title: \"Course code\",\n      status: true,\n    },\n    {\n      key: CandidateExamPerformanceReportContentKeyInterface.SCHOOL_LEVEL,\n      title: \"School levels\",\n      status: true,\n    },\n    {\n      key: CandidateExamPerformanceReportContentKeyInterface.PERIOD,\n      title: \"Exam period\",\n      status: true,\n    },\n    {\n      key: CandidateExamPerformanceReportContentKeyInterface.DATE,\n      title: \"Exam date\",\n      status: true,\n    },\n    {\n      key: CandidateExamPerformanceReportContentKeyInterface.START_TIME,\n      title: \"Exam start time\",\n      status: true,\n    },\n    {\n      key: CandidateExamPerformanceReportContentKeyInterface.END_TIME,\n      title: \"Exam end time\",\n      status: true,\n    },\n    {\n      key: CandidateExamPerformanceReportContentKeyInterface.STATUS,\n      title: \"Status\",\n      status: true,\n    },\n  ];\n// END EXCEL FILE FUNCTIONS ================================\n\nexport interface candidatePerfomranceStateInterface {\n  user_id: string;\n  user_name: string;\n  national_id: string;\n  user_email: string;\n  user_phone: string;\n  course_name: string;\n  course_code: string;\n  description: string;\n  school_levels: string[];\n  course_id: string;\n  exam: CandidatesFailedSucceeded;\n  user_total_marks: number;\n  exam_stastus: ReportUserExamStatus;\n}\n\nexport const FC_reportCandidatePerformanceData = (\n  allCourses: course[],\n  data: CandidatesFailedSucceeded[],\n  course_id: string\n): candidatePerfomranceStateInterface[] => {\n  let result: candidatePerfomranceStateInterface[] = [],\n    ids: string[] = [];\n  for (const key in data) {\n    if (Object.prototype.hasOwnProperty.call(data, key)) {\n      if (!ids.includes(data[key]._id)) {\n        ids.push(data[key]._id);\n        let courser = allCourses.find(\n          (item) => item.course_id === data[key].course\n        );\n        if (courser) {\n          result.push({\n            user_id: data[key].user.user_id,\n            user_name:\n              capitalizeFirstLetter(data[key].user.user_info.lname) +\n              \" \" +\n              capitalizeFirstLetter(data[key].user.user_info.fname),\n            national_id: data[key].user.n_id ? data[key].user.n_id : \"\",\n            user_email: data[key].user.email,\n            user_phone: data[key].user.phone_number,\n            course_name: courser.course_name,\n            course_code: courser.course_code,\n            description: courser.description,\n            school_levels: courser.school_levels,\n            course_id: courser.course_id,\n            exam: data[key],\n            user_total_marks: data[key].total_marks,\n            exam_stastus: data[key].user_status,\n          });\n        }\n      }\n    }\n  }\n\n  if (course_id !== \"all\") {\n    result = result.filter((item) => item.course_id === course_id);\n  }\n  return result;\n};\n\nexport const FC_reportCandidatePerformanceDataFilter = (\n  thisList: candidatePerfomranceStateInterface[],\n  thisValue: ReportUserExamStatus | \"all\"\n): candidatePerfomranceStateInterface[] => {\n  if (thisValue === \"all\") {\n    return thisList;\n  } else {\n    return thisList.filter((item) => item.exam_stastus === thisValue);\n  }\n};\n\nexport const searchCandidatePerformanceData = (\n  objList: candidatePerfomranceStateInterface[],\n  text: string\n): candidatePerfomranceStateInterface[] => {\n  if (undefined === text || text === \"\") return objList;\n  return objList.filter((product) => {\n    let flag;\n    // let dataKeys = product;\n\n    for (let prop in product) {\n      flag = false;\n      if (\n        prop === \"course_name\" ||\n        prop === \"course_code\" ||\n        prop === \"user_total_marks\" ||\n        prop === \"exam_stastus\" ||\n        prop === \"description\" ||\n        prop === \"user_name\" ||\n        prop === \"user_phone\" ||\n        prop === \"user_email\" ||\n        prop === \"national_id\"\n      ) {\n        flag =\n          product[prop].toString().toLowerCase().indexOf(text.toLowerCase()) >\n          -1;\n      }\n      if (flag) break;\n    }\n    return flag;\n  });\n};\n\nexport const controlRowsByStatus = (status: string): string => {\n  if (status === \"Done\") {\n    return \"bg-blue-50 border-gray-300 hover:border-blue-500 border-t border-b\";\n  }\n  if (status === \"Removed\") {\n    return \"bg-white border-red-300 hover:border-red-500 border-t border-b\";\n  }\n  if (status === \"Paused\") {\n    return \"bg-white border-yellow-300 hover:border-yellow-500 border-t border-b\";\n  }\n  return \"bg-white border-gray-300 hover:border-blue-500 border-t border-b\";\n};\n\ntype CandidatePerformanceProps = {\n  loading: boolean;\n  examsListData: ExamItemResponse[] | null;\n  courseListData: course[] | null;\n  thisPeriod: SessionPlanInterface[];\n  candidatePerformanceData: CandidatesFailedSucceeded[] | null;\n\n  // redux props ============\n  adminExamReport: ExamReportReducerType;\n  // FOR APPLICANT PERFORMANCE PROPS\n  filterApplicantPerformance: ReportUserExamStatus | \"all\";\n};\n\nconst CandidatePerformance: React.FC<CandidatePerformanceProps> = (props) => {\n  const [searchInput, setSearchInput] = useState<string>(\"\");\n  const [isSorted, setIsSorted] = useState<boolean>(false);\n  const [sortProperty, setSortProperty] = useState<string>(\"\");\n  const [sortOrder, setSortOrder] = useState<\"ASC\" | \"DESC\">(\"ASC\");\n\n  const setSort = (thisProperty: string) => {\n    if (sortProperty === thisProperty && sortOrder === \"ASC\") {\n      setSortOrder(\"DESC\");\n      setSortProperty(thisProperty);\n      setIsSorted(true);\n    } else {\n      setSortOrder(\"ASC\");\n      setSortProperty(thisProperty);\n      setIsSorted(true);\n    }\n  };\n\n  return (\n    <Fragment>\n      <div className=\"bg-white my-4\">\n        <div className=\"w-full px-2 py-2\">\n          <input\n            onChange={(e) => setSearchInput(e.target.value)}\n            type=\"text\"\n            value={searchInput}\n            placeholder=\"Search...\"\n            className=\"w-full bg-gray-100 py-2 px-3 rounded\"\n            disabled={\n              props.courseListData &&\n              props.candidatePerformanceData &&\n              FC_reportCandidatePerformanceDataFilter(\n                FC_reportCandidatePerformanceData(\n                  props.courseListData,\n                  props.candidatePerformanceData,\n                  props.adminExamReport.reportCourseId\n                    ? props.adminExamReport.reportCourseId.course_id\n                    : \"all\"\n                ),\n                props.filterApplicantPerformance\n              ).length <= 0\n                ? true\n                : false\n            }\n          />\n        </div>\n        <div className=\"w-full overflow-x-auto\">\n          <table className=\"w-full shadow\" id=\"report_content\">\n            <thead className=\"bg-white border-b-2 border-gray-300 text-gray-600 font-bold text-sm\">\n              <tr>\n                <td className=\"px-2 py-2\">#</td>\n                <td className=\"px-2 py-2\" onClick={() => setSort(\"user_name\")}>\n                  Applicants\n                </td>\n                <td className=\"px-2 py-2\">National ID</td>\n                <td className=\"px-2 py-2\">Email</td>\n                <td className=\"px-2 py-2\">Phone</td>\n                <td\n                  className=\"px-2 py-2 cursor-pointer\"\n                  onClick={() => setSort(\"course_name\")}\n                >\n                  <div className=\"flex items-center gap-1\">\n                    Exam <BiSort />\n                  </div>\n                </td>\n                <td className=\"px-2 py-2\">Exam period</td>\n                <td className=\"px-2 py-2\">Exam date</td>\n                <td className=\"px-2 py-2\">Exam start time</td>\n                <td className=\"px-2 py-2\">Exam end time</td>\n                <td\n                  className=\"px-2 py-2 cursor-pointer\"\n                  onClick={() => setSort(\"user_total_marks\")}\n                >\n                  <div className=\"flex items-center gap-1\">\n                    Marks <BiSort />\n                  </div>\n                </td>\n                <td className=\"px-2 py-2\">Status</td>\n              </tr>\n            </thead>\n            <tbody>\n              {props.courseListData === null || props.loading ? (\n                <tr>\n                  <td colSpan={12} className=\"px-2 py-2\">\n                    <Loading />\n                  </td>\n                </tr>\n              ) : props.candidatePerformanceData &&\n                FC_reportCandidatePerformanceDataFilter(\n                  FC_reportCandidatePerformanceData(\n                    props.courseListData,\n                    props.candidatePerformanceData,\n                    props.adminExamReport.reportCourseId\n                      ? props.adminExamReport.reportCourseId.course_id\n                      : \"all\"\n                  ),\n                  props.filterApplicantPerformance\n                ).length <= 0 ? (\n                <tr>\n                  <td colSpan={12} className=\"px-2 py-2 text-center\">\n                    No applicant list available!\n                  </td>\n                </tr>\n              ) : (\n                props.candidatePerformanceData &&\n                sortThisArray(\n                  isSorted,\n                  searchCandidatePerformanceData(\n                    FC_reportCandidatePerformanceDataFilter(\n                      FC_reportCandidatePerformanceData(\n                        props.courseListData,\n                        props.candidatePerformanceData,\n                        props.adminExamReport.reportCourseId\n                          ? props.adminExamReport.reportCourseId.course_id\n                          : \"all\"\n                      ),\n                      props.filterApplicantPerformance\n                    ),\n                    searchInput\n                  ),\n                  sortProperty,\n                  sortOrder\n                ).map((item: candidatePerfomranceStateInterface, i) => (\n                  <tr\n                    key={i + 1}\n                    className={`${controlRowsByStatus(\n                      item.exam_stastus\n                    )} text-gray-600 hover:bg-blue-100 hover:text-blue-700 text-sm`}\n                  >\n                    <td className=\"px-2 py-2\">{i + 1}</td>\n                    <td className=\"px-2 py-2\">\n                      {capitalizeFirstLetter(item.user_name)}\n                    </td>\n                    <td className=\"px-2 py-2\">{item.national_id}</td>\n                    <td className=\"px-2 py-2\">{item.user_email}</td>\n                    <td className=\"px-2 py-2\">{item.user_phone}</td>\n                    <td className=\"px-2 py-2\">\n                      {capitalizeFirstLetter(item.course_name)} (\n                      <span className=\"font-semibold\">{item.course_code}</span>)\n                    </td>\n                    <td className=\"px-2 py-2\">\n                      {item.exam\n                        ? getPeriodById(props.thisPeriod, item.exam.period)\n                          ? getPeriodById(props.thisPeriod, item.exam.period)!\n                              .session_plan_name\n                          : \"-\"\n                        : \"-\"}\n                    </td>\n                    <td className=\"px-2 py-2\">\n                      {item.exam.exam_date ? DATE(item.exam.exam_date) : \"-\"}\n                    </td>\n                    <td className=\"px-2 py-2\">\n                      {item.exam.start_time\n                        ? timestampToDate(item.exam.start_time).timeAMPM\n                        : \"-\"}\n                    </td>\n                    <td className=\"px-2 py-2\">\n                      {item.exam.end_time\n                        ? timestampToDate(item.exam.end_time).timeAMPM\n                        : \"-\"}\n                    </td>\n                    <td className=\"px-2 py-2\">\n                      {item.exam_stastus !== ReportUserExamStatus.Editing\n                        ? Number(item.user_total_marks.toFixed(1)) + \"%\"\n                        : \"-\"}\n                    </td>\n                    <td className=\"px-2 py-2\">\n                      {capitalizeFirstLetter(displayStatus(item.exam_stastus))}\n                    </td>\n                  </tr>\n                ))\n              )}\n            </tbody>\n          </table>\n        </div>\n      </div>\n    </Fragment>\n  );\n};\n\nconst mapStateToProps = ({\n  adminExamReport,\n}: StoreState): {\n  adminExamReport: ExamReportReducerType;\n} => {\n  return {\n    adminExamReport,\n  };\n};\n\nexport default React.memo(connect(mapStateToProps, {})(CandidatePerformance));\n","import React, { Fragment, useState } from \"react\";\nimport { BiSort } from \"react-icons/bi\";\nimport Loading from \"../../../components/Loading/Loading\";\nimport { SessionPlanInterface } from \"../../../interfaces\";\nimport { course } from \"../../../interfaces/course\";\nimport { ExamItemResponse } from \"../../../interfaces/prepare_exam\";\nimport {\n  capitalizeFirstLetter,\n  isEmptyOrSpaces,\n} from \"../../../shared/dataTest\";\nimport { DATE, sortThisArray } from \"../../../utils/functions\";\n// import searchData from \"../../../utils/search\";\nimport { getPeriodById } from \"./ExamReport\";\n\n// EXCEL INTERFACES ======================================\nexport interface ExamPreparationToPrintInterface {\n  course_id: number;\n  course_name: string;\n  course_code: string;\n  description: string;\n  school_levels: string;\n  exam_period: string;\n  exam_date: string;\n  exam_time: string;\n  exam_duration: string;\n  // exam: ExamItemResponse | null;\n  preparation_status: string;\n}\n\nexport enum examPreparationReportContentKeyInterface {\n  \"course_name\" = \"course_name\",\n  \"course_code\" = \"course_code\",\n  SCHOOL_LEVEL = \"school_levels\",\n  PERIOD = \"exam_period\",\n  DATE = \"exam_date\",\n  TIME = \"exam_time\",\n  DURATION = \"exam_duration\",\n  STATUS = \"preparation_status\",\n}\n\nexport interface examPreparationReportContentInterface {\n  key: examPreparationReportContentKeyInterface;\n  title: string;\n  status: boolean;\n}\n\nexport const defaultExamPreparationReportContent: examPreparationReportContentInterface[] =\n  [\n    {\n      key: examPreparationReportContentKeyInterface.course_name,\n      title: \"Course names\",\n      status: true,\n    },\n    {\n      key: examPreparationReportContentKeyInterface.course_code,\n      title: \"Course code\",\n      status: true,\n    },\n    {\n      key: examPreparationReportContentKeyInterface.SCHOOL_LEVEL,\n      title: \"School levels\",\n      status: true,\n    },\n    {\n      key: examPreparationReportContentKeyInterface.PERIOD,\n      title: \"Exam period\",\n      status: true,\n    },\n    {\n      key: examPreparationReportContentKeyInterface.DATE,\n      title: \"Exam date\",\n      status: true,\n    },\n    {\n      key: examPreparationReportContentKeyInterface.TIME,\n      title: \"Exam time\",\n      status: true,\n    },\n    {\n      key: examPreparationReportContentKeyInterface.DURATION,\n      title: \"Exam duration\",\n      status: true,\n    },\n    {\n      key: examPreparationReportContentKeyInterface.STATUS,\n      title: \"Exam status\",\n      status: true,\n    },\n  ];\n\nexport const examPreparationIsChangeAllowed = (\n  key: examPreparationReportContentKeyInterface\n): boolean => {\n  if (\n    key === examPreparationReportContentKeyInterface.course_name ||\n    key === examPreparationReportContentKeyInterface.course_code\n  ) {\n    return false;\n  }\n  return true;\n};\n// END EXCEL INTERFACES ======================================\n\nexport interface examPreparationStateInterface {\n  course_name: string;\n  course_code: string;\n  description: string;\n  school_levels: string[];\n  course_id: string;\n  exam: ExamItemResponse | null;\n  preparation_status: \"prepared\" | \"not prepared\";\n}\n\nexport const FC_reportExamList = (\n  allCourses: course[],\n  allExams: ExamItemResponse[],\n  period: string = \"\"\n): examPreparationStateInterface[] => {\n  let result: examPreparationStateInterface[] = [],\n    ids: string[] = [];\n  for (const key in allCourses) {\n    if (Object.prototype.hasOwnProperty.call(allCourses, key)) {\n      if (ids.includes(allCourses[key].course_id)) continue;\n      ids.push(allCourses[key].course_id);\n      let exam = !isEmptyOrSpaces(period)\n        ? allExams.find(\n            (item) =>\n              item.course === allCourses[key].course_id &&\n              item.period === period\n          )\n        : allExams.find((item) => item.course === allCourses[key].course_id);\n      if (exam) {\n        result.push({\n          course_name: allCourses[key].course_name,\n          course_code: allCourses[key].course_code,\n          description: allCourses[key].description,\n          school_levels: allCourses[key].school_levels,\n          course_id: allCourses[key].course_id,\n          exam: exam,\n          preparation_status: \"prepared\",\n        });\n      } else {\n        result.push({\n          course_name: allCourses[key].course_name,\n          course_code: allCourses[key].course_code,\n          description: allCourses[key].description,\n          school_levels: allCourses[key].school_levels,\n          course_id: allCourses[key].course_id,\n          exam: null,\n          preparation_status: \"not prepared\",\n        });\n      }\n    }\n  }\n  return result;\n};\n\nexport const FC_reportExamListFilter = (\n  thisList: examPreparationStateInterface[],\n  thisStatus: \"all\" | \"prepared\" | \"not prepared\"\n): examPreparationStateInterface[] => {\n  if (thisStatus === \"all\") {\n    return thisList;\n  } else {\n    return thisList.filter((item) => item.preparation_status === thisStatus);\n  }\n};\n\nexport const searchExamList = (\n  objList: examPreparationStateInterface[],\n  text: string\n): examPreparationStateInterface[] => {\n  if (undefined === text || text === \"\") return objList;\n  return objList.filter((product) => {\n    let flag;\n    // let dataKeys = product;\n\n    for (let prop in product) {\n      flag = false;\n      if (\n        prop === \"course_name\" ||\n        prop === \"course_code\" ||\n        prop === \"preparation_status\"\n      ) {\n        flag =\n          product[prop].toString().toLowerCase().indexOf(text.toLowerCase()) >\n          -1;\n      }\n      if (flag) break;\n    }\n    return flag;\n  });\n};\n\ntype ExamListProps = {\n  loading: boolean;\n  examsListData: ExamItemResponse[] | null;\n  courseListData: course[] | null;\n  thisPeriod: SessionPlanInterface[];\n  // FOR EXAM PREPARATION PROPS =========================================\n  filterPreparation: \"prepared\" | \"not prepared\" | \"all\";\n};\n\nconst ExamList: React.FC<ExamListProps> = (props) => {\n  const [searchInput, setSearchInput] = useState<string>(\"\");\n  const [isSorted, setIsSorted] = useState<boolean>(false);\n  const [sortProperty, setSortProperty] = useState<string>(\"\");\n  const [sortOrder, setSortOrder] = useState<\"ASC\" | \"DESC\">(\"ASC\");\n\n  const setSort = (thisProperty: string) => {\n    if (sortProperty === thisProperty && sortOrder === \"ASC\") {\n      setSortOrder(\"DESC\");\n      setSortProperty(thisProperty);\n      setIsSorted(true);\n    } else {\n      setSortOrder(\"ASC\");\n      setSortProperty(thisProperty);\n      setIsSorted(true);\n    }\n  };\n\n  return (\n    <Fragment>\n      <div className=\"bg-white my-4\">\n        <div className=\"w-full px-2 py-2\">\n          {props.courseListData && props.examsListData && (\n            <input\n              onChange={(e) => setSearchInput(e.target.value)}\n              type=\"text\"\n              value={searchInput}\n              placeholder=\"Search...\"\n              className=\"w-full bg-gray-100 py-2 px-3 rounded\"\n              disabled={\n                FC_reportExamListFilter(\n                  FC_reportExamList(props.courseListData, props.examsListData),\n                  props.filterPreparation\n                ).length <= 0\n              }\n            />\n          )}\n        </div>\n        <div className=\"w-full overflow-x-auto\">\n          <table className=\"w-full shadow\" id=\"report_content\">\n            <thead className=\"bg-white border-b-2 border-gray-300 text-gray-600 font-bold text-sm\">\n              <tr>\n                <td className=\"px-2 py-2\">#</td>\n                <td\n                  className=\"px-2 py-2 cursor-pointer\"\n                  onClick={() => setSort(\"course_name\")}\n                >\n                  <div className=\"flex items-center gap-1\">\n                    Course <BiSort />\n                  </div>\n                </td>\n                <td className=\"px-2 py-2\">Exam date</td>\n                <td className=\"px-2 py-2\">Exam time</td>\n                <td className=\"px-2 py-2\">Exam duration</td>\n                <td className=\"px-2 py-2\">Exam Period</td>\n                <td className=\"px-2 py-2\">Created at</td>\n                <td\n                  className=\"px-2 py-2 cursor-pointer\"\n                  onClick={() => setSort(\"preparation_status\")}\n                >\n                  <div className=\"flex items-center gap-1\">\n                    Exam Status <BiSort />\n                  </div>\n                </td>\n              </tr>\n            </thead>\n            <tbody>\n              {props.courseListData === null || props.loading ? (\n                <tr>\n                  <td colSpan={8} className=\"px-2 py-2\">\n                    <Loading />\n                  </td>\n                </tr>\n              ) : props.courseListData &&\n                props.examsListData &&\n                FC_reportExamListFilter(\n                  FC_reportExamList(props.courseListData, props.examsListData),\n                  props.filterPreparation\n                ).length <= 0 ? (\n                <tr>\n                  <td colSpan={8} className=\"px-2 py-2 text-center\">\n                    No Course for exam found\n                  </td>\n                </tr>\n              ) : (\n                props.examsListData &&\n                sortThisArray(\n                  isSorted,\n                  searchExamList(\n                    FC_reportExamListFilter(\n                      FC_reportExamList(\n                        props.courseListData,\n                        props.examsListData\n                      ),\n                      props.filterPreparation\n                    ),\n                    searchInput\n                  ),\n                  sortProperty,\n                  sortOrder\n                ).map((item, i) => (\n                  <tr\n                    key={i + 1}\n                    className={`${\n                      item.exam ? \"bg-blue-50\" : \"bg-white\"\n                    } text-gray-600 hover:bg-blue-100 hover:text-blue-700 border-b border-gray-300 hover:border-blue-500 text-sm`}\n                  >\n                    <td className=\"px-2 py-2\">{i + 1}</td>\n                    <td className=\"px-2 py-2\">\n                      {capitalizeFirstLetter(item.course_name)} (\n                      <span className=\"font-semibold\">{item.course_code}</span>)\n                    </td>\n                    <td className=\"px-2 py-2\">\n                      {item.exam ? DATE(item.exam.exam_date) : \"-\"}\n                    </td>\n                    <td className=\"px-2 py-2\">\n                      {item.exam ? item.exam.start_time : \"-\"}\n                    </td>\n                    <td className=\"px-2 py-2\">\n                      {item.exam ? item.exam!.duration + \" min\" : \"-\"}\n                    </td>\n                    <td className=\"px-2 py-2\">\n                      {item.exam\n                        ? getPeriodById(props.thisPeriod, item.exam.period)\n                          ? getPeriodById(props.thisPeriod, item.exam.period)!\n                              .session_plan_name\n                          : \"-\"\n                        : \"-\"}\n                    </td>\n                    <td className=\"px-2 py-2\">\n                      {item.exam ? DATE(item.exam.createdAt) : \"-\"}\n                    </td>\n                    <td className=\"px-2 py-2\">\n                      {capitalizeFirstLetter(\n                        item.exam ? \"Prepared\" : \"Not prepared\"\n                      )}\n                    </td>\n                  </tr>\n                ))\n              )}\n            </tbody>\n          </table>\n        </div>\n      </div>\n    </Fragment>\n  );\n};\n\nexport default React.memo(ExamList);\n","import React, { useEffect, useState } from \"react\";\nimport { CgFileDocument } from \"react-icons/cg\";\nimport { MdCheckBox, MdCheckBoxOutlineBlank, MdHistory } from \"react-icons/md\";\nimport { connect } from \"react-redux\";\nimport {\n  SetReportCourseId,\n  SetReportCourseIdAction,\n  SetReportDistrictId,\n  SetReportDistrictIdAction,\n} from \"../../../actions\";\nimport { getAllRoom } from \"../../../actions/location\";\nimport Loading from \"../../../components/Loading/Loading\";\nimport Modal, { ModalSize, Themes } from \"../../../components/Modal/Modal\";\nimport { SessionPlanInterface } from \"../../../interfaces\";\nimport { StoreState } from \"../../../reducers\";\nimport { isEmptyOrSpaces } from \"../../../shared/dataTest\";\nimport {\n  LocationRoomTableInterface,\n  RoomLocationInterface,\n} from \"../../../shared/interfaces\";\nimport ExportToExcel from \"../../../utils/ExportToExcel\";\nimport ChooseSession from \"../../SessionSettings/ChooseSession\";\nimport { LocationsInArray } from \"../../UserManagement/UserList\";\nimport {\n  CandidateExamPerformanceToPrintInterface,\n  CandidateExamPerformanceReportContentInterface,\n  CandidateExamPerformanceReportContentKeyInterface,\n  candidateExamPerformanceIsChangeAllowed,\n} from \"./CandidatePerformance\";\nimport {\n  examinationProgressIsChangeAllowed,\n  ExaminationProgressReportContentInterface,\n  ExaminationProgressReportContentKeyInterface,\n  ExaminationProgressToPrintInterface,\n  examProgressStateInterface,\n  searchExamData,\n} from \"./DoneExamList\";\nimport {\n  examPreparationReportContentInterface,\n  ExamPreparationToPrintInterface,\n  examPreparationReportContentKeyInterface,\n  examPreparationIsChangeAllowed,\n} from \"./ExamList\";\nimport {\n  ExamPerformanceToPrintInterface,\n  examPerformanceReportContentInterface,\n  examPerformanceReportContentKeyInterface,\n  examPerformanceIsChangeAllowed,\n} from \"./ExamPerformance\";\nimport { reportTitleType } from \"./ExamReport\";\n\nexport const FC_DistinctDistrict = (\n  locations: LocationRoomTableInterface[]\n): LocationRoomTableInterface[] => {\n  var flags: string[] = [],\n    output: LocationRoomTableInterface[] = [],\n    l: number = locations.length,\n    i: number;\n  for (i = 0; i < l; i++) {\n    if (flags.includes(locations[i].district_id)) continue;\n    flags.push(locations[i].district_id);\n    output.push(locations[i]);\n  }\n\n  return output;\n};\n\nexport enum ModalForTypes {\n  title = \"TITLE\",\n  period = \"PERIOD\",\n  generateReportModal = \"GENERATE REPORT\",\n  choose_exam = \"Choosing Exam\",\n  choose_district = \"Choosing District\",\n}\n\ntype ExamReportModalsProps = {\n  modalFor: ModalForTypes;\n  modalState: boolean;\n  changeModalState: (state: boolean) => void;\n\n  // FOR CHANGING PERIOD =========================\n  applicationPeriods?: SessionPlanInterface[] | null;\n  selected_period?: SessionPlanInterface | null;\n  setSelectedPeriod?: (period: SessionPlanInterface) => void;\n  onPeriodChange?: (period_id: string) => void;\n\n  // FOR CHOOSING EXAM =========================\n  AllExamData?: examProgressStateInterface[];\n  // thisExam?: examProgressStateInterface | null;\n  // setSelectedExam?: (selectedExam: examProgressStateInterface | null) => void;\n  SetReportCourseId: (\n    data: examProgressStateInterface | null\n  ) => SetReportCourseIdAction;\n  thisExam?: examProgressStateInterface | null;\n\n  // FOR REPORT TYPE =========================\n  reportTitle?: reportTitleType;\n  setReportTitle?: (title: reportTitleType) => void;\n\n  // FOR EXCEL GENERATION =========================\n  generateReportModal?: {\n    reportType: \"EXCEL\" | \"PDF\";\n    status: boolean;\n  } | null;\n  setGenerateReportModal?: (\n    reportData: {\n      reportType: \"EXCEL\" | \"PDF\";\n      status: boolean;\n    } | null\n  ) => void;\n  excelReportTitle?: string;\n  setExcelReportTitle?: (title: string) => void;\n  examPreparationReportContent?: examPreparationReportContentInterface[];\n  setExamPreparationReportContent?: (\n    content: examPreparationReportContentInterface[]\n  ) => void;\n  updateExamToPrint?: () => void;\n  examsToPrint?:\n    | ExamPreparationToPrintInterface[]\n    | ExamPerformanceToPrintInterface[]\n    | null;\n  // FOR EXAM PERFORMANCE REPORT ================================\n  examPerformanceToPrint?: ExamPerformanceToPrintInterface[] | null;\n  examPerformanceReportContent?: examPerformanceReportContentInterface[];\n  setExamPerformanceReportContent?: (\n    value: examPerformanceReportContentInterface[]\n  ) => void;\n  // FOR EXCEL TOP 30 EXAM PERFORMANCE REPORT CONTENT ===============================\n  exam30PerformanceToPrint?: ExamPerformanceToPrintInterface[] | null;\n  exam30PerformanceReportContent?: examPerformanceReportContentInterface[];\n  setExam30PerformanceReportContent?: (\n    value: examPerformanceReportContentInterface[]\n  ) => void;\n  // FOR EXCEL EXAMINATION PROGRESS REPORT CONTENT ===============================\n  examinationProgressToPrint?: ExaminationProgressToPrintInterface[] | null;\n  examinationProgressReportContent?: ExaminationProgressReportContentInterface[];\n  setExaminationProgressExamPerformanceReportContent?: (\n    value: ExaminationProgressReportContentInterface[]\n  ) => void;\n  // FOR EXCEL CANDIDATE EXAM PERFORMANCE REPORT CONTENT ===============================\n  candidateExamPerformanceToPrint?:\n    | CandidateExamPerformanceToPrintInterface[]\n    | null;\n  candidateExamPerformanceReportContent?: CandidateExamPerformanceReportContentInterface[];\n  setCandidateExamPerformanceReportContent?: (\n    value: CandidateExamPerformanceReportContentInterface[]\n  ) => void;\n  // FOR EXCEL TOP 30 CANDIDATE EXAM PERFORMANCE REPORT CONTENT ===============================\n  candidate30ExamPerformanceToPrint?:\n    | CandidateExamPerformanceToPrintInterface[]\n    | null;\n  candidate30ExamPerformanceReportContent?: CandidateExamPerformanceReportContentInterface[];\n  setCandidate30ExamPerformanceReportContent?: (\n    value: CandidateExamPerformanceReportContentInterface[]\n  ) => void;\n  // FOR LOCATIONS PROVINCE, DISTRICT, CENTERS, ROOM ================================\n  locations: RoomLocationInterface[];\n  getAllRoom: Function;\n  SetReportDistrictId?: (\n    data: {\n      district_id: string;\n      district_name: string;\n    } | null\n  ) => SetReportDistrictIdAction;\n  districtId?: string;\n  isAllDistrictAllowed?: boolean;\n};\n\nconst ExamReportModals: React.FC<ExamReportModalsProps> = (props) => {\n  const [formError, setFormError] = useState<{\n    element: string;\n    msg: string;\n  } | null>(null);\n  const [selectAll, setSelectAll] = useState<boolean>(true);\n  const [searchInput, setSearchInput] = useState<string>(\"\");\n  const [loadingLocation, setLoadingLocation] = useState<boolean>(true);\n  const [error, setError] = useState<{ element: String; msg: string } | null>(\n    null\n  );\n  const [districtId, setDistrictId] = useState<string>(\n    props.districtId ? props.districtId : \"all\"\n  );\n\n  const isChangeAllowed = (key: any): boolean => {\n    // EXAM PREPARATION ######################\n    if (\n      props.reportTitle &&\n      props.reportTitle === reportTitleType.EXAM_PREPARATION\n    ) {\n      return examPreparationIsChangeAllowed(key);\n    }\n    // EXAM PERFORMANCE ######################\n    if (\n      props.reportTitle &&\n      (props.reportTitle === reportTitleType.EXAM_PERFORMANCE ||\n        props.reportTitle === reportTitleType.EXAM_DISTRICT_PERFORMANCE)\n    ) {\n      return examPerformanceIsChangeAllowed(key);\n    }\n    // EXAMINATION PROGRESS ######################\n    if (\n      props.reportTitle &&\n      props.reportTitle === reportTitleType.EXAMINATION_PROGRESS\n    ) {\n      return examinationProgressIsChangeAllowed(key);\n    }\n    // CANDIDATE EXAM PERFORMANCE && TOP 30 CANDIDATE EXAM PERFORMANCE ######################\n    if (\n      props.reportTitle &&\n      (props.reportTitle === reportTitleType.APPLICANTS_PERFORMANCE ||\n        props.reportTitle === reportTitleType.APPLICANTS_DISTRICT_PERFORMANCE)\n    ) {\n      return candidateExamPerformanceIsChangeAllowed(key);\n    }\n    return false;\n  };\n\n  const updateExamPreparationReportContent = (\n    key: examPreparationReportContentKeyInterface\n  ) => {\n    if (props.examPreparationReportContent) {\n      let index: number = props.examPreparationReportContent.findIndex(\n        (item) => item.key === key\n      );\n      let newArray: examPreparationReportContentInterface[] =\n        props.examPreparationReportContent;\n      newArray[index].status = !newArray[index].status;\n      props.setExamPreparationReportContent &&\n        props.setExamPreparationReportContent(newArray);\n      let isSelectAllNeeded = newArray.find((item) => item.status === false);\n      if (isSelectAllNeeded) {\n        setSelectAll(false);\n      } else {\n        setSelectAll(true);\n      }\n\n      // UPDATE APPLICATION LIST FOR UPDATE ==============================\n      props.updateExamToPrint && props.updateExamToPrint();\n    }\n  };\n\n  const resetReportContent = (currentState: boolean) => {\n    if (props.reportTitle) {\n      // EXAM PREPARATION =======================================\n      if (\n        props.reportTitle === reportTitleType.EXAM_PREPARATION &&\n        props.examPreparationReportContent\n      ) {\n        let newArray: examPreparationReportContentInterface[] =\n          props.examPreparationReportContent;\n        for (const key in newArray) {\n          if (isChangeAllowed(newArray[key].key)) {\n            newArray[key].status = !currentState;\n          }\n        }\n\n        props.setExamPreparationReportContent &&\n          props.setExamPreparationReportContent(newArray);\n        setSelectAll(!currentState);\n\n        props.updateExamToPrint && props.updateExamToPrint();\n      }\n    }\n\n    // EXAM PERFORMANCE =======================================\n    if (\n      props.reportTitle === reportTitleType.EXAM_PERFORMANCE &&\n      props.examPerformanceReportContent\n    ) {\n      let newArray: examPerformanceReportContentInterface[] =\n        props.examPerformanceReportContent;\n      for (const key in newArray) {\n        if (isChangeAllowed(newArray[key].key)) {\n          newArray[key].status = !currentState;\n        }\n      }\n\n      props.setExamPerformanceReportContent &&\n        props.setExamPerformanceReportContent(newArray);\n      setSelectAll(!currentState);\n\n      props.updateExamToPrint && props.updateExamToPrint();\n    }\n\n    // TOP 30 EXAM PERFORMANCE =======================================\n    if (\n      props.reportTitle === reportTitleType.EXAM_DISTRICT_PERFORMANCE &&\n      props.exam30PerformanceReportContent\n    ) {\n      let newArray: examPerformanceReportContentInterface[] =\n        props.exam30PerformanceReportContent;\n      for (const key in newArray) {\n        if (isChangeAllowed(newArray[key].key)) {\n          newArray[key].status = !currentState;\n        }\n      }\n\n      props.setExam30PerformanceReportContent &&\n        props.setExam30PerformanceReportContent(newArray);\n      setSelectAll(!currentState);\n\n      props.updateExamToPrint && props.updateExamToPrint();\n    }\n\n    // EXAMINATION PROGRESS =======================================\n    if (\n      props.reportTitle === reportTitleType.EXAMINATION_PROGRESS &&\n      props.examinationProgressReportContent\n    ) {\n      let newArray: ExaminationProgressReportContentInterface[] =\n        props.examinationProgressReportContent;\n      for (const key in newArray) {\n        if (isChangeAllowed(newArray[key].key)) {\n          newArray[key].status = !currentState;\n        }\n      }\n\n      props.setExaminationProgressExamPerformanceReportContent &&\n        props.setExaminationProgressExamPerformanceReportContent(newArray);\n      setSelectAll(!currentState);\n\n      props.updateExamToPrint && props.updateExamToPrint();\n    }\n\n    // CANDIDATE EXAM PERFORMANCE =======================================\n    if (\n      props.reportTitle === reportTitleType.APPLICANTS_PERFORMANCE &&\n      props.candidateExamPerformanceReportContent\n    ) {\n      let newArray: CandidateExamPerformanceReportContentInterface[] =\n        props.candidateExamPerformanceReportContent;\n      for (const key in newArray) {\n        if (isChangeAllowed(newArray[key].key)) {\n          newArray[key].status = !currentState;\n        }\n      }\n\n      props.setCandidateExamPerformanceReportContent &&\n        props.setCandidateExamPerformanceReportContent(newArray);\n      setSelectAll(!currentState);\n\n      props.updateExamToPrint && props.updateExamToPrint();\n    }\n\n    // TOP 30 CANDIDATE EXAM PERFORMANCE =======================================\n    if (\n      props.reportTitle === reportTitleType.APPLICANTS_DISTRICT_PERFORMANCE &&\n      props.candidate30ExamPerformanceReportContent\n    ) {\n      let newArray: CandidateExamPerformanceReportContentInterface[] =\n        props.candidate30ExamPerformanceReportContent;\n      for (const key in newArray) {\n        if (isChangeAllowed(newArray[key].key)) {\n          newArray[key].status = !currentState;\n        }\n      }\n\n      props.setCandidate30ExamPerformanceReportContent &&\n        props.setCandidate30ExamPerformanceReportContent(newArray);\n      setSelectAll(!currentState);\n\n      props.updateExamToPrint && props.updateExamToPrint();\n    }\n  };\n\n  const updateExamPerformanceReportContent = (\n    key: examPerformanceReportContentKeyInterface\n  ) => {\n    if (\n      props.reportTitle &&\n      props.reportTitle === reportTitleType.EXAM_PERFORMANCE &&\n      props.examPerformanceReportContent\n    ) {\n      let index: number = props.examPerformanceReportContent.findIndex(\n        (item) => item.key === key\n      );\n      let newArray: examPerformanceReportContentInterface[] =\n        props.examPerformanceReportContent;\n      newArray[index].status = !newArray[index].status;\n      props.setExamPerformanceReportContent &&\n        props.setExamPerformanceReportContent(newArray);\n      let isSelectAllNeeded = newArray.find((item) => item.status === false);\n      if (isSelectAllNeeded) {\n        setSelectAll(false);\n      } else {\n        setSelectAll(true);\n      }\n\n      // UPDATE APPLICATION LIST FOR UPDATE ==============================\n      props.updateExamToPrint && props.updateExamToPrint();\n    }\n    if (\n      props.reportTitle &&\n      props.reportTitle === reportTitleType.EXAM_DISTRICT_PERFORMANCE &&\n      props.exam30PerformanceReportContent\n    ) {\n      let index: number = props.exam30PerformanceReportContent.findIndex(\n        (item) => item.key === key\n      );\n      let newArray: examPerformanceReportContentInterface[] =\n        props.exam30PerformanceReportContent;\n      newArray[index].status = !newArray[index].status;\n      props.setExam30PerformanceReportContent &&\n        props.setExam30PerformanceReportContent(newArray);\n      let isSelectAllNeeded = newArray.find((item) => item.status === false);\n      if (isSelectAllNeeded) {\n        setSelectAll(false);\n      } else {\n        setSelectAll(true);\n      }\n\n      // UPDATE APPLICATION LIST FOR UPDATE ==============================\n      props.updateExamToPrint && props.updateExamToPrint();\n    }\n  };\n\n  const updateExaminationProgressReportContent = (\n    key: ExaminationProgressReportContentKeyInterface\n  ) => {\n    if (props.examinationProgressReportContent) {\n      let index: number = props.examinationProgressReportContent.findIndex(\n        (item) => item.key === key\n      );\n      let newArray: ExaminationProgressReportContentInterface[] =\n        props.examinationProgressReportContent;\n      newArray[index].status = !newArray[index].status;\n      props.setExaminationProgressExamPerformanceReportContent &&\n        props.setExaminationProgressExamPerformanceReportContent(newArray);\n      let isSelectAllNeeded = newArray.find((item) => item.status === false);\n      if (isSelectAllNeeded) {\n        setSelectAll(false);\n      } else {\n        setSelectAll(true);\n      }\n\n      // UPDATE APPLICATION LIST FOR UPDATE ==============================\n      props.updateExamToPrint && props.updateExamToPrint();\n    }\n  };\n\n  const updateCandidateExamPerformanceReportContent = (\n    key: CandidateExamPerformanceReportContentKeyInterface\n  ) => {\n    if (\n      props.reportTitle &&\n      props.reportTitle === reportTitleType.APPLICANTS_PERFORMANCE &&\n      props.candidateExamPerformanceReportContent\n    ) {\n      let index: number = props.candidateExamPerformanceReportContent.findIndex(\n        (item) => item.key === key\n      );\n      let newArray: CandidateExamPerformanceReportContentInterface[] =\n        props.candidateExamPerformanceReportContent;\n      newArray[index].status = !newArray[index].status;\n      props.setCandidateExamPerformanceReportContent &&\n        props.setCandidateExamPerformanceReportContent(newArray);\n      let isSelectAllNeeded = newArray.find((item) => item.status === false);\n      if (isSelectAllNeeded) {\n        setSelectAll(false);\n      } else {\n        setSelectAll(true);\n      }\n\n      // UPDATE APPLICATION LIST FOR UPDATE ==============================\n      props.updateExamToPrint && props.updateExamToPrint();\n    }\n\n    if (\n      props.reportTitle &&\n      props.reportTitle === reportTitleType.APPLICANTS_DISTRICT_PERFORMANCE &&\n      props.candidate30ExamPerformanceReportContent\n    ) {\n      let index: number =\n        props.candidate30ExamPerformanceReportContent.findIndex(\n          (item) => item.key === key\n        );\n      let newArray: CandidateExamPerformanceReportContentInterface[] =\n        props.candidate30ExamPerformanceReportContent;\n      newArray[index].status = !newArray[index].status;\n      props.setCandidate30ExamPerformanceReportContent &&\n        props.setCandidate30ExamPerformanceReportContent(newArray);\n      let isSelectAllNeeded = newArray.find((item) => item.status === false);\n      if (isSelectAllNeeded) {\n        setSelectAll(false);\n      } else {\n        setSelectAll(true);\n      }\n\n      // UPDATE APPLICATION LIST FOR UPDATE ==============================\n      props.updateExamToPrint && props.updateExamToPrint();\n    }\n  };\n\n  useEffect(() => {\n    if (\n      !props.locations.length &&\n      props.modalFor === ModalForTypes.choose_district\n    ) {\n      props.getAllRoom((status: boolean, msg: string) => {\n        if (!status && msg.length > 0) console.error(msg);\n        setLoadingLocation(status);\n      });\n    } else {\n      setLoadingLocation(false);\n    }\n  }, [props]);\n\n  const selectDistrict = (district_id: string) => {\n    setError(null);\n    if (district_id === \"all\") {\n      if (\n        ((props.reportTitle &&\n          props.reportTitle ===\n            reportTitleType.APPLICANTS_DISTRICT_PERFORMANCE) ||\n          (props.isAllDistrictAllowed &&\n            props.isAllDistrictAllowed === true)) &&\n        props.SetReportDistrictId\n      ) {\n        props.SetReportDistrictId(null);\n        props.changeModalState(false);\n      } else {\n        setError({ element: \"district\", msg: \"District is required\" });\n      }\n    } else {\n      if (props.SetReportDistrictId) {\n        let thisDistrict = LocationsInArray(props.locations).find(\n          (item) => item.district_id === district_id\n        );\n        if (!thisDistrict) {\n          return setError({ element: \"district\", msg: \"Invalid district id\" });\n        } else {\n          props.SetReportDistrictId({\n            district_id: thisDistrict.district_id,\n            district_name: thisDistrict.district_name,\n          });\n          props.changeModalState(false);\n        }\n      }\n    }\n  };\n\n  const showGenerateBtn = (): { status: boolean; data: any[] } => {\n    if (props.reportTitle) {\n      // EXAM PREPARATION ######################\n      if (\n        props.reportTitle === reportTitleType.EXAM_PREPARATION &&\n        props.excelReportTitle &&\n        props.examsToPrint\n      ) {\n        return { status: true, data: props.examsToPrint };\n      }\n      // EXAM PERFORMANCE ######################\n      if (\n        props.reportTitle === reportTitleType.EXAM_PERFORMANCE &&\n        props.excelReportTitle &&\n        props.examPerformanceToPrint\n      ) {\n        return { status: true, data: props.examPerformanceToPrint };\n      }\n      // TOP 30 EXAM PERFORMANCE ######################\n      if (\n        props.reportTitle === reportTitleType.EXAM_DISTRICT_PERFORMANCE &&\n        props.excelReportTitle &&\n        props.exam30PerformanceToPrint\n      ) {\n        return { status: true, data: props.exam30PerformanceToPrint };\n      }\n      // EXAMINATION PROGRESS ######################\n      if (\n        props.reportTitle === reportTitleType.EXAMINATION_PROGRESS &&\n        props.excelReportTitle &&\n        props.examinationProgressToPrint\n      ) {\n        return { status: true, data: props.examinationProgressToPrint };\n      }\n      // CANDIDATE EXAM PERFORMANCE ######################\n      if (\n        props.reportTitle === reportTitleType.APPLICANTS_PERFORMANCE &&\n        props.excelReportTitle &&\n        props.candidateExamPerformanceToPrint\n      ) {\n        return { status: true, data: props.candidateExamPerformanceToPrint };\n      }\n      // TOP 30 CANDIDATE EXAM PERFORMANCE ######################\n      if (\n        props.reportTitle === reportTitleType.APPLICANTS_DISTRICT_PERFORMANCE &&\n        props.excelReportTitle &&\n        props.candidate30ExamPerformanceToPrint\n      ) {\n        return { status: true, data: props.candidate30ExamPerformanceToPrint };\n      }\n    }\n    return { status: false, data: [] };\n  };\n\n  return (\n    <div>\n      {/* LOAD MODAL FOR PERIOD ================================== */}\n      {props.modalFor === ModalForTypes.period &&\n        props.applicationPeriods &&\n        props.modalState && (\n          <Modal\n            title={\n              <div className=\"flex flex-row gap-4 items-center\">\n                <MdHistory className=\"text-5xl text-blue-600\" />\n                <div className=\"flex flex-col\">\n                  <span className=\"font-bold text-xl text-blue-600\">\n                    Choose a period\n                  </span>\n                </div>\n              </div>\n            }\n            backDrop={true}\n            theme={Themes.default}\n            close={() => props.selected_period && props.changeModalState(false)}\n            backDropClose={true}\n            widthSizeClass={ModalSize.extraLarge}\n            displayClose={true}\n            padding={{ title: true }}\n          >\n            <ChooseSession\n              allSession={props.applicationPeriods}\n              setSelectSession={(value: SessionPlanInterface | \"all\") => {\n                if (value !== \"all\") {\n                  props.setSelectedPeriod && props.setSelectedPeriod(value);\n                  props.onPeriodChange &&\n                    props.onPeriodChange(value.session_plan_id);\n                  props.changeModalState(false);\n                }\n              }}\n              chooseAll={false}\n              currentSelected={\n                props.selected_period ? props.selected_period : \"all\"\n              }\n            />\n          </Modal>\n        )}\n      {/* END LOAD MODAL FOR PERIOD ================================== */}\n\n      {/* LOAD MODAL FOR REPORT TYPES ================================== */}\n      {props.modalFor === ModalForTypes.title && props.modalState && (\n        <Modal\n          title={\n            <div className=\"flex flex-row gap-4 items-center\">\n              <CgFileDocument className=\"text-5xl text-blue-600\" />\n              <div className=\"flex flex-col\">\n                <span className=\"font-bold text-xl text-blue-600\">\n                  Choose exam report type\n                </span>\n              </div>\n            </div>\n          }\n          backDrop={true}\n          theme={Themes.default}\n          close={() => props.changeModalState(false)}\n          backDropClose={true}\n          widthSizeClass={ModalSize.extraLarge}\n          displayClose={true}\n          padding={{ title: true }}\n        >\n          <div className=\"px-2 pb-2\">\n            {Object.values(reportTitleType).map((item, i) => (\n              <div\n                onClick={() => {\n                  props.setReportTitle && props.setReportTitle(item);\n                  props.setExcelReportTitle && props.setExcelReportTitle(item);\n                  props.changeModalState(false);\n                }}\n                key={i + 1}\n                className={`flex items-center border rounded px-2 py-2 cursor-pointer group hover:bg-blue-100 hover:border-blue-500 mb-3 justify-between ${\n                  props.reportTitle && props.reportTitle === item\n                    ? \"bg-blue-50 border-blue-400\"\n                    : \"bg-white border-gray-200\"\n                }`}\n              >\n                <div>\n                  <div className=\"text-blue-500 text-sm font-medium italic\">\n                    Report type\n                  </div>\n                  <div className=\"font-bold\">\n                    {item}\n                    {item === reportTitleType.EXAM_DISTRICT_PERFORMANCE &&\n                      \" district\"}\n                  </div>\n                </div>\n                <div className=\"btn bg-blue-400 group-hover:bg-blue-600 text-white mr-2\">\n                  Choose\n                </div>\n              </div>\n            ))}\n          </div>\n        </Modal>\n      )}\n      {/* END LOAD MODAL FOR REPORT TYPES ================================== */}\n\n      {/* GENERATE DYNAMIC REPORT CONTENT MODAL */}\n      {props.generateReportModal &&\n        props.modalFor === ModalForTypes.generateReportModal &&\n        props.modalState && (\n          <Modal\n            title={\n              <div className=\"flex flex-row gap-4 items-center\">\n                {/* <IoBriefcase className=\"text-5xl text-gray-500\" /> */}\n                <div className=\"flex flex-col\">\n                  <span className=\"font-bold text-2xl text-gray-500\">\n                    Generating Report contents\n                  </span>\n                  <span className=\"text-sm text-blue-600 font-normal\">\n                    Generating {props.generateReportModal.reportType} Report\n                  </span>\n                </div>\n              </div>\n            }\n            backDrop={true}\n            theme={Themes.default}\n            close={() =>\n              props.setGenerateReportModal && props.setGenerateReportModal(null)\n            }\n            backDropClose={false}\n            widthSizeClass={ModalSize.medium}\n            displayClose={true}\n            padding={{ title: true }}\n          >\n            <div className=\"px-6\">\n              <div className=\"my-2 text-base text-gray-700 sm:text-lg\">\n                <div className=\"flex flex-col\">\n                  <label>Title</label>\n                  <input\n                    type=\"text\"\n                    className={`text-left input-white w-20 inline-block ${\n                      formError && formError.element === \"report_title\"\n                        ? \"border-red-500\"\n                        : \"border-gray-500\"\n                    } border-2`}\n                    placeholder=\"Sub Category Title\"\n                    value={props.excelReportTitle ? props.excelReportTitle : \"\"}\n                    onChange={(e) => {\n                      props.setExcelReportTitle &&\n                        props.setExcelReportTitle(e.target.value);\n                      setFormError(null);\n                    }}\n                    // disabled={props.loading}\n                  />\n                  {formError && formError.element === \"report_title\" && (\n                    <span className=\"text-red-500\">{formError.msg}</span>\n                  )}\n                </div>\n                <div className=\"flex flex-col mt-2\">\n                  <label>Report content</label>\n                  {/* // EXAM PREPARATION ###################### */}\n                  {props.reportTitle &&\n                    props.reportTitle === reportTitleType.EXAM_PREPARATION && (\n                      <div className=\"grid grid-cols-2 md:grid-cols-3 items-center gap-2 mt-2\">\n                        {props.examPreparationReportContent &&\n                          props.examPreparationReportContent.map(\n                            (item, index) => (\n                              <div\n                                key={index}\n                                className={`flex items-center gap-1 ${\n                                  isChangeAllowed(item.key)\n                                    ? \"cursor-pointer\"\n                                    : \"cursor-not-allowed\"\n                                }`}\n                                onClick={() =>\n                                  isChangeAllowed(item.key) &&\n                                  updateExamPreparationReportContent(item.key)\n                                }\n                                title={\n                                  !isChangeAllowed(item.key)\n                                    ? \"Required for every report!\"\n                                    : \"\"\n                                }\n                              >\n                                {item.status ? (\n                                  <MdCheckBox className=\"w-6 h-6 text-blue-700\" />\n                                ) : (\n                                  <MdCheckBoxOutlineBlank className=\"w-6 h-6\" />\n                                )}\n                                <span>{item.title}</span>\n                              </div>\n                            )\n                          )}\n                      </div>\n                    )}\n                  {/* // EXAM PERFORMANCE ###################### */}\n                  {props.reportTitle &&\n                    props.reportTitle === reportTitleType.EXAM_PERFORMANCE && (\n                      <div className=\"grid grid-cols-2 md:grid-cols-3 items-center gap-2 mt-2\">\n                        {props.examPerformanceReportContent &&\n                          props.examPerformanceReportContent.map(\n                            (item, index) => (\n                              <div\n                                key={index}\n                                className={`flex items-center gap-1 ${\n                                  isChangeAllowed(item.key)\n                                    ? \"cursor-pointer\"\n                                    : \"cursor-not-allowed\"\n                                }`}\n                                onClick={() =>\n                                  isChangeAllowed(item.key) &&\n                                  updateExamPerformanceReportContent(item.key)\n                                }\n                                title={\n                                  !isChangeAllowed(item.key)\n                                    ? \"Required for every report!\"\n                                    : \"\"\n                                }\n                              >\n                                {item.status ? (\n                                  <MdCheckBox className=\"w-6 h-6 text-blue-700\" />\n                                ) : (\n                                  <MdCheckBoxOutlineBlank className=\"w-6 h-6\" />\n                                )}\n                                <span>{item.title}</span>\n                              </div>\n                            )\n                          )}\n                      </div>\n                    )}\n                  {/* // TOP 30 EXAM PERFORMANCE ###################### */}\n                  {props.reportTitle &&\n                    props.reportTitle ===\n                      reportTitleType.EXAM_DISTRICT_PERFORMANCE && (\n                      <div className=\"grid grid-cols-2 md:grid-cols-3 items-center gap-2 mt-2\">\n                        {props.exam30PerformanceReportContent &&\n                          props.exam30PerformanceReportContent.map(\n                            (item, index) => (\n                              <div\n                                key={index}\n                                className={`flex items-center gap-1 ${\n                                  isChangeAllowed(item.key)\n                                    ? \"cursor-pointer\"\n                                    : \"cursor-not-allowed\"\n                                }`}\n                                onClick={() =>\n                                  isChangeAllowed(item.key) &&\n                                  updateExamPerformanceReportContent(item.key)\n                                }\n                                title={\n                                  !isChangeAllowed(item.key)\n                                    ? \"Required for every report!\"\n                                    : \"\"\n                                }\n                              >\n                                {item.status ? (\n                                  <MdCheckBox className=\"w-6 h-6 text-blue-700\" />\n                                ) : (\n                                  <MdCheckBoxOutlineBlank className=\"w-6 h-6\" />\n                                )}\n                                <span>{item.title}</span>\n                              </div>\n                            )\n                          )}\n                      </div>\n                    )}\n                  {/* // EXAMINATION PROGRESS ###################### */}\n                  {props.reportTitle &&\n                    props.reportTitle ===\n                      reportTitleType.EXAMINATION_PROGRESS && (\n                      <div className=\"grid grid-cols-2 md:grid-cols-3 items-center gap-2 mt-2\">\n                        {props.examinationProgressReportContent &&\n                          props.examinationProgressReportContent.map(\n                            (item, index) => (\n                              <div\n                                key={index}\n                                className={`flex items-center gap-1 ${\n                                  isChangeAllowed(item.key)\n                                    ? \"cursor-pointer\"\n                                    : \"cursor-not-allowed\"\n                                }`}\n                                onClick={() =>\n                                  isChangeAllowed(item.key) &&\n                                  updateExaminationProgressReportContent(\n                                    item.key\n                                  )\n                                }\n                                title={\n                                  !isChangeAllowed(item.key)\n                                    ? \"Required for every report!\"\n                                    : \"\"\n                                }\n                              >\n                                {item.status ? (\n                                  <MdCheckBox className=\"w-6 h-6 text-blue-700\" />\n                                ) : (\n                                  <MdCheckBoxOutlineBlank className=\"w-6 h-6\" />\n                                )}\n                                <span>{item.title}</span>\n                              </div>\n                            )\n                          )}\n                      </div>\n                    )}\n                  {/* // EXAMINATION PROGRESS ###################### */}\n                  {/* // CANDIDATE EXAM PERFORMANCE ###################### */}\n                  {props.reportTitle &&\n                    props.reportTitle ===\n                      reportTitleType.APPLICANTS_PERFORMANCE && (\n                      <div className=\"grid grid-cols-2 md:grid-cols-3 items-center gap-2 mt-2\">\n                        {props.candidateExamPerformanceReportContent &&\n                          props.candidateExamPerformanceReportContent.map(\n                            (item, index) => (\n                              <div\n                                key={index}\n                                className={`flex items-center gap-1 ${\n                                  isChangeAllowed(item.key)\n                                    ? \"cursor-pointer\"\n                                    : \"cursor-not-allowed\"\n                                }`}\n                                onClick={() =>\n                                  isChangeAllowed(item.key) &&\n                                  updateCandidateExamPerformanceReportContent(\n                                    item.key\n                                  )\n                                }\n                                title={\n                                  !isChangeAllowed(item.key)\n                                    ? \"Required for every report!\"\n                                    : \"\"\n                                }\n                              >\n                                {item.status ? (\n                                  <MdCheckBox className=\"w-6 h-6 text-blue-700\" />\n                                ) : (\n                                  <MdCheckBoxOutlineBlank className=\"w-6 h-6\" />\n                                )}\n                                <span>{item.title}</span>\n                              </div>\n                            )\n                          )}\n                      </div>\n                    )}\n                  {/* // END EXAMINATION PROGRESS ###################### */}\n                  {/* // TOP 30 CANDIDATE EXAM PERFORMANCE ###################### */}\n                  {props.reportTitle &&\n                    props.reportTitle ===\n                      reportTitleType.APPLICANTS_DISTRICT_PERFORMANCE && (\n                      <div className=\"grid grid-cols-2 md:grid-cols-3 items-center gap-2 mt-2\">\n                        {props.candidate30ExamPerformanceReportContent &&\n                          props.candidate30ExamPerformanceReportContent.map(\n                            (item, index) => (\n                              <div\n                                key={index}\n                                className={`flex items-center gap-1 ${\n                                  isChangeAllowed(item.key)\n                                    ? \"cursor-pointer\"\n                                    : \"cursor-not-allowed\"\n                                }`}\n                                onClick={() =>\n                                  isChangeAllowed(item.key) &&\n                                  updateCandidateExamPerformanceReportContent(\n                                    item.key\n                                  )\n                                }\n                                title={\n                                  !isChangeAllowed(item.key)\n                                    ? \"Required for every report!\"\n                                    : \"\"\n                                }\n                              >\n                                {item.status ? (\n                                  <MdCheckBox className=\"w-6 h-6 text-blue-700\" />\n                                ) : (\n                                  <MdCheckBoxOutlineBlank className=\"w-6 h-6\" />\n                                )}\n                                <span>{item.title}</span>\n                              </div>\n                            )\n                          )}\n                      </div>\n                    )}\n                  {/* // END TOP 30 CANDIDATE EXAM PERFORMANCE ###################### */}\n                  {formError && formError.element === \"report_content\" && (\n                    <span className=\"text-red-500\">{formError.msg}</span>\n                  )}\n                </div>\n              </div>\n              <div className=\"flex justify-between mb-2 mt-4\">\n                <div\n                  className={`flex items-center gap-1 cursor-pointer`}\n                  onClick={() => resetReportContent(selectAll)}\n                >\n                  {selectAll ? (\n                    <MdCheckBox className=\"w-6 h-6 text-blue-700\" />\n                  ) : (\n                    <MdCheckBoxOutlineBlank className=\"w-6 h-6\" />\n                  )}\n                  <span>Select all</span>\n                </div>\n\n                {showGenerateBtn().status && (\n                  <ExportToExcel\n                    fileData={showGenerateBtn().data}\n                    fileName={props.excelReportTitle!}\n                    btnName=\"Generate\"\n                  />\n                )}\n              </div>\n            </div>\n          </Modal>\n        )}\n      {/* END GENERATE DYNAMIC REPORT CONTENT MODAL */}\n\n      {/* LOAD MODAL FOR CHOOSING EXAM ================================== */}\n      {props.modalFor === ModalForTypes.choose_exam &&\n        props.modalState &&\n        props.AllExamData && (\n          <Modal\n            title={\n              <div className=\"flex flex-row gap-4 items-center\">\n                <CgFileDocument className=\"text-5xl text-blue-600\" />\n                <div className=\"flex flex-col\">\n                  <span className=\"font-bold text-xl text-blue-600\">\n                    Choose exam\n                  </span>\n                </div>\n              </div>\n            }\n            backDrop={true}\n            theme={Themes.default}\n            close={() => props.changeModalState(false)}\n            backDropClose={true}\n            widthSizeClass={ModalSize.extraLarge}\n            displayClose={true}\n            padding={{ title: true }}\n          >\n            <div className=\"px-2 pb-2\">\n              <div className=\"w-full py-2\">\n                <input\n                  onChange={(e) => setSearchInput(e.target.value)}\n                  type=\"text\"\n                  value={searchInput}\n                  placeholder=\"Search...\"\n                  className=\"w-full bg-white py-2 px-3 rounded border border-gray-400\"\n                  disabled={props.AllExamData.length <= 0 ? true : false}\n                />\n              </div>\n              <div\n                onClick={() => {\n                  props.SetReportCourseId(null);\n                  props.changeModalState(false);\n                }}\n                className={`flex items-center border rounded px-2 py-2 cursor-pointer group hover:bg-blue-100 hover:border-blue-500 mb-3 justify-between ${\n                  props.thisExam === null\n                    ? \"bg-blue-50 border-blue-400\"\n                    : \"bg-white border-gray-200\"\n                }`}\n              >\n                <div>\n                  <div className=\"text-sm font-medium italic\">\n                    code: <span className=\"text-blue-500\">-</span>\n                  </div>\n                  <div className=\"font-bold text-lg\">All exams</div>\n                </div>\n                <div className=\"btn bg-blue-400 group-hover:bg-blue-600 text-white mr-2\">\n                  Choose\n                </div>\n              </div>\n              {searchExamData(props.AllExamData, searchInput).map((item, i) => (\n                <div\n                  onClick={() => {\n                    props.SetReportCourseId(item);\n                    props.changeModalState(false);\n                  }}\n                  key={i + 1}\n                  className={`flex items-center border rounded px-2 py-2 cursor-pointer group hover:bg-blue-100 hover:border-blue-500 mb-3 justify-between ${\n                    props.thisExam &&\n                    props.thisExam.course_id === item.course_id\n                      ? \"bg-blue-50 border-blue-400\"\n                      : \"bg-white border-gray-200\"\n                  }`}\n                >\n                  <div>\n                    <div className=\"text-sm font-medium italic\">\n                      code:{\" \"}\n                      <span className=\"text-blue-500\">{item.course_code}</span>\n                    </div>\n                    <div className=\"font-bold text-lg\">{item.course_name}</div>\n                  </div>\n                  <div className=\"btn bg-blue-400 group-hover:bg-blue-600 text-white mr-2\">\n                    Choose\n                  </div>\n                </div>\n              ))}\n            </div>\n          </Modal>\n        )}\n      {/* END LOAD MODAL FOR CHOOSING EXAM ================================== */}\n\n      {/* LOAD MODAL FOR CHOOSING DISTRICT ================================== */}\n      {props.modalFor === ModalForTypes.choose_district && props.modalState && (\n        <Modal\n          title={\n            <div className=\"flex flex-row gap-4 items-center\">\n              <CgFileDocument className=\"text-5xl text-blue-600\" />\n              <div className=\"flex flex-col\">\n                <span className=\"font-bold text-xl text-blue-600\">\n                  Choose district\n                </span>\n              </div>\n            </div>\n          }\n          backDrop={true}\n          theme={Themes.default}\n          close={() =>\n            !isEmptyOrSpaces(districtId) && props.changeModalState(false)\n          }\n          backDropClose={true}\n          widthSizeClass={ModalSize.medium}\n          displayClose={true}\n          padding={{ title: true }}\n        >\n          <div className=\"px-2 pb-2 \">\n            {loadingLocation ? (\n              <Loading />\n            ) : (\n              <section className=\"pb-8 px-7 \">\n                {/* <div className=\"grid grid-cols-1 \"> */}\n                <label className=\"uppercase md:text-sm text-xs text-gray-500 text-light font-semibold\">\n                  District\n                </label>\n                {props.locations.length > 0 ? (\n                  <div className=\"\">\n                    <select\n                      className={`py-3 px-3 w-full rounded border-2 bg-white mt-1 focus:outline-none ${\n                        error && error.element === \"district\"\n                          ? \"border-red-400 focus:border-red-800\"\n                          : \"border-gray-400 focus:border-gray-800\"\n                      }`}\n                      value={districtId}\n                      onChange={(e) => {\n                        setDistrictId(e.target.value);\n                        selectDistrict(e.target.value);\n                      }}\n                    >\n                      <option value=\"all\">Select district</option>\n                      {FC_DistinctDistrict(\n                        LocationsInArray(props.locations)\n                      ).map((item, index) => (\n                        <option\n                          key={index + item.district_id}\n                          value={item.district_id}\n                        >\n                          {item.district_name}\n                        </option>\n                      ))}\n                    </select>\n                    {error && error.element === \"district\" && (\n                      <p className=\"text-xs italic text-red-500 mt-3\">\n                        {error.msg}\n                      </p>\n                    )}\n                  </div>\n                ) : (\n                  <div className=\"alert-info\">No district found</div>\n                )}\n                {/* </div> */}\n              </section>\n            )}\n          </div>\n        </Modal>\n      )}\n      {/* END LOAD MODAL FOR CHOOSING DISTRICT ================================== */}\n    </div>\n  );\n};\n\nconst mapStateToProps = ({\n  locations,\n}: StoreState): {\n  locations: RoomLocationInterface[];\n} => {\n  return {\n    locations: locations.roomLocation,\n  };\n};\n\nexport default React.memo(connect(mapStateToProps, {\n  getAllRoom,\n  SetReportDistrictId,\n  SetReportCourseId,\n})(ExamReportModals));\n","import React from \"react\";\nimport Chart from \"react-apexcharts\";\n\ntype chartType = {\n  options: {\n    labels: string[];\n    legend?: ApexLegend;\n    plotOptions?: ApexPlotOptions;\n    colors?: any[];\n  };\n  series: number[];\n  width?: number;\n};\n\nconst PieChart: React.FC<chartType> = (props) => {\n  return (\n    <div className=\"donut\">\n      <Chart\n        options={props.options}\n        series={props.series}\n        type=\"donut\"\n        width={`${props.width ? props.width : \"380\"}`}\n      />\n    </div>\n  );\n};\n\nexport default React.memo(PieChart);\n","import axios from \"axios\";\nimport React, { Component } from \"react\";\nimport { BiRightArrowAlt } from \"react-icons/bi\";\nimport {\n  MdDelete,\n  MdEdit,\n  MdHighlightOff,\n  MdRemoveRedEye,\n  MdSettings,\n} from \"react-icons/md\";\nimport { SiAddthis } from \"react-icons/si\";\nimport { TiInputChecked } from \"react-icons/ti\";\nimport { connect } from \"react-redux\";\nimport { Redirect } from \"react-router-dom\";\nimport { PushPopupAlert } from \"../../actions\";\nimport { customizeUserAccess } from \"../../actions/users\";\nimport { PopupAlertData } from \"../../components/Alert/Popup\";\nimport Table from \"../../components/Table/Table\";\nimport { PopupAlertTheme } from \"../../interfaces/popupAlert\";\nimport {\n  UserInterface,\n  AccessTaskInterface,\n  CustomeAccessInterface,\n} from \"../../shared/interfaces\";\nimport { API } from \"../../utils/api\";\nimport { errorToText } from \"../../utils/errors\";\n\ninterface AppProps {\n  userInfo: UserInterface | undefined;\n  manageUserId: string;\n  setUserAccess: (value: AccessTaskInterface[] | null) => void;\n  userAccess: AccessTaskInterface[] | null;\n  setCurrentAccess: (value: AccessTaskInterface | null) => void;\n  currentAccess: AccessTaskInterface | null;\n  currentPage: number;\n\n  // REDUX ==============\n  PushPopupAlert: (alert: PopupAlertData) => void;\n  customizeUserAccess: Function;\n}\n\ninterface AppStates {\n  loading: boolean;\n  loadindRequest: boolean;\n  // currentAccess:AccessTaskInterface | null;\n  // userAccess:AccessTaskInterface[] | null;\n  createPermission: boolean;\n  viewPermission: boolean;\n  updatePermission: boolean;\n  deletePermission: boolean;\n}\n\nclass _UserAccess extends Component<AppProps, AppStates> {\n  constructor(props: AppProps) {\n    super(props);\n\n    this.state = {\n      loading: true,\n      loadindRequest: false,\n      // currentAccess:null,\n      // userAccess:null,\n      createPermission: false,\n      viewPermission: false,\n      updatePermission: false,\n      deletePermission: false,\n    };\n  }\n\n  setViewPermission = (value: boolean) => {\n    this.setState({ viewPermission: value });\n  };\n\n  setLoadindRequest = (value: boolean) => {\n    this.setState({ loadindRequest: value });\n  };\n\n  setCreatePermission = (value: boolean) => {\n    this.setState({ createPermission: value });\n  };\n\n  setUpdatePermission = (value: boolean) => {\n    this.setState({ updatePermission: value });\n  };\n\n  setDeletePermission = (value: boolean) => {\n    this.setState({ deletePermission: value });\n  };\n\n  setLoadind = (value: boolean) => {\n    this.setState({ loading: value });\n  };\n\n  overrideUserAccess = (\n    default_access: AccessTaskInterface[],\n    custome_access: AccessTaskInterface[]\n  ) => {\n    if (default_access && custome_access && custome_access.length > 0) {\n      let overideAccess: AccessTaskInterface[] = [];\n      for (const key in default_access) {\n        if (Object.prototype.hasOwnProperty.call(default_access, key)) {\n          const findCustom = custome_access.find(\n            (custom) => custom.id === default_access[key].id\n          );\n          if (findCustom) {\n            overideAccess.push(findCustom);\n          } else {\n            overideAccess.push(default_access[key]);\n          }\n        }\n      }\n      this.props.setUserAccess(overideAccess);\n    }\n  };\n\n  componentDidMount = () => {\n    if (this.props.userInfo && this.props.userInfo.custome_access) {\n      this.props.userInfo.default_access &&\n        this.overrideUserAccess(\n          this.props.userInfo.default_access.access,\n          this.props.userInfo.custome_access.access\n        );\n      this.setLoadind(false);\n    } else {\n      this.props.userInfo &&\n        this.props.userInfo.default_access &&\n        this.props.setUserAccess(this.props.userInfo.default_access.access);\n      this.setLoadind(false);\n    }\n  };\n\n  tableData = (): JSX.Element[] => {\n    if (!this.props.userAccess)\n      return [\n        <tr key={Math.random()}>\n          <td>No data</td>\n        </tr>,\n      ];\n    return this.props.userAccess.map((access: AccessTaskInterface, i) => (\n      <tr\n        key={i + access.id + Math.random()}\n        className={`text-left border-b border-gray-200 cursor-pointer hover:bg-gray-100 ${\n          this.props.currentAccess &&\n          this.props.currentAccess.id === access.id &&\n          \"bg-gray-200 border my-3 hover:bg-gray-100\"\n        }`}\n        onClick={() =>\n          this.props.currentAccess && this.props.currentAccess.id === access.id\n            ? (this.props.setCurrentAccess(null),\n              this.setCreatePermission(false),\n              this.setViewPermission(false),\n              this.setUpdatePermission(false),\n              this.setDeletePermission(false))\n            : (this.props.setCurrentAccess(access),\n              this.setCreatePermission(access.permitted.create),\n              this.setViewPermission(access.permitted.view),\n              this.setUpdatePermission(access.permitted.update),\n              this.setDeletePermission(access.permitted.delete))\n        }\n      >\n        <td className=\"px-2 py-1\">\n          <label className=\"inline-flex items-center\">\n            {/* <input\n              type=\"radio\"\n              name=\"taskAccess\"\n              value={access.id}\n              className=\"form-radio h-4 w-4 text-gray-600\"\n              onChange={() => {\n                currentAccess\n                  ? this.setState({ currentAccess: null })\n                  : this.setState({ currentAccess: access });\n              }}\n              checked={currentAccess ? true : false}\n            /> */}\n            <span className=\"text-gray-900 capitalize text-xl font-normal cursor-pointer\">\n              {access.task}\n            </span>\n          </label>\n        </td>\n        <td>\n          <div\n            className={`inline-flex items-center text-xl ${\n              access.permitted.create ? \"text-green-700\" : \"text-red-700\"\n            }`}\n          >\n            {access.permitted.create ? <TiInputChecked /> : <MdHighlightOff />}\n            {access.permitted.create ? \" Yes\" : \"No\"}\n          </div>\n        </td>\n        <td>\n          <div\n            className={`inline-flex items-center text-xl ${\n              access.permitted.view ? \"text-green-700\" : \"text-red-700\"\n            }`}\n          >\n            {access.permitted.view ? <TiInputChecked /> : <MdHighlightOff />}\n            {access.permitted.view ? \" Yes\" : \"No\"}\n          </div>\n        </td>\n        <td>\n          <div\n            className={`inline-flex items-center text-xl ${\n              access.permitted.update ? \"text-green-700\" : \"text-red-700\"\n            }`}\n          >\n            {access.permitted.update ? <TiInputChecked /> : <MdHighlightOff />}\n            {access.permitted.update ? \" Yes\" : \"No\"}\n          </div>\n        </td>\n        <td>\n          <div\n            className={`inline-flex items-center text-xl ${\n              access.permitted.delete ? \"text-green-700\" : \"text-red-700\"\n            }`}\n          >\n            {access.permitted.delete ? <TiInputChecked /> : <MdHighlightOff />}\n            {access.permitted.delete ? \" Yes\" : \"No\"}\n          </div>\n        </td>\n      </tr>\n    ));\n  };\n\n  handleCustomization = async (e: React.FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n    if (this.props.userInfo) {\n      this.setLoadindRequest(true);\n      let task: [] | CustomeAccessInterface | null = null;\n      task = this.props.userInfo.custome_access;\n      let index = -1;\n\n      try {\n        if (task && this.props.currentAccess) {\n          index = task.access.findIndex(\n            (access) => access.id === this.props.currentAccess!.id\n          );\n          if (index >= 0) {\n            task.access[index].permitted.create = this.state.createPermission;\n            task.access[index].permitted.view = this.state.viewPermission;\n            task.access[index].permitted.update = this.state.updatePermission;\n            task.access[index].permitted.delete = this.state.deletePermission;\n          } else {\n            task.access.push({\n              id: this.props.currentAccess.id,\n              task: this.props.currentAccess.task,\n              key: this.props.currentAccess.key,\n              permitted: {\n                create: this.state.createPermission,\n                view: this.state.viewPermission,\n                update: this.state.updatePermission,\n                delete: this.state.deletePermission,\n              },\n            });\n          }\n        } else if (this.props.currentAccess) {\n          task = {\n            access: [\n              {\n                id: this.props.currentAccess.id,\n                task: this.props.currentAccess.task,\n                key: this.props.currentAccess.key,\n                permitted: {\n                  create: this.state.createPermission,\n                  view: this.state.viewPermission,\n                  update: this.state.updatePermission,\n                  delete: this.state.deletePermission,\n                },\n              },\n            ],\n            user_id: this.props.userInfo.user_id,\n            custome_user_access_id: \"\",\n          };\n        }\n\n        if (task) {\n          let res;\n          if (this.props.userInfo.custome_access !== null) {\n            res = await axios.patch<{ data: CustomeAccessInterface }>(\n              `${API.AUTH}/custaccess`,\n              {\n                access: task.access,\n                user_id: this.props.userInfo.user_id,\n              }\n            );\n          } else {\n            res = await axios.post<{ data: CustomeAccessInterface }>(\n              `${API.AUTH}/custaccess`,\n              {\n                access: task.access,\n                user_id: this.props.userInfo.user_id,\n              }\n            );\n          }\n\n          if (res) {\n            task.custome_user_access_id = res.data.data.custome_user_access_id;\n\n            this.props.customizeUserAccess(task, this.props.currentPage);\n            task &&\n              this.props.userInfo.default_access &&\n              this.overrideUserAccess(\n                this.props.userInfo.default_access.access,\n                task.access\n              );\n            this.props.PushPopupAlert({\n              title: `Resetting User Access complete successfully`,\n              theme: PopupAlertTheme.info,\n            });\n\n            task = null;\n            this.props.setCurrentAccess(null);\n            this.setCreatePermission(false);\n            this.setViewPermission(false);\n            this.setUpdatePermission(false);\n            this.setDeletePermission(false);\n          }\n        }\n      } catch (error) {\n        console.error({ customize_access: error });\n        this.props.PushPopupAlert({\n          title: errorToText(error),\n          theme: PopupAlertTheme.danger,\n        });\n      }\n      this.setLoadindRequest(false);\n    }\n  };\n\n  render() {\n    if (this.props.userInfo === undefined) {\n      return <Redirect to=\"/users\" />;\n    }\n\n    if (this.state.loading || this.props.userInfo === null) {\n      return (\n        <div className=\"text-center py-7 font-bold text-4xl text-gray-400 animate-pulse\">\n          Loading User Access...\n        </div>\n      );\n    }\n\n    return (\n      <div>\n        <div className=\"grid grid-cols-1 md:grid-cols-5 gap-4 mx-1 my-2\">\n          <div\n            className={`col-span-1 md:col-span-3 bg-white w-full overflow-x-auto border rounded text-center p-2 ${\n              this.props.currentAccess ? \"hidden md:block\" : \"\"\n            }`}\n          >\n            <span className=\"text-gray-600 mt-2 font-semibold text-2xl\">\n              Settings\n            </span>\n            {!this.state.loading && (\n              <div className=\"overflow-x-auto w-full\">\n                <Table\n                  columns={[\n                    {\n                      columnTitle: \"Access Name\",\n                      alignText: \"left\",\n                      padding: \"p-3\",\n                    },\n                    { columnTitle: \"Create\", alignText: \"left\" },\n                    { columnTitle: \"View\", alignText: \"left\" },\n                    { columnTitle: \"Update\", alignText: \"left\" },\n                    { columnTitle: \"Delete\", alignText: \"left\" },\n                  ]}\n                  rows={this.tableData}\n                  pagination={false}\n                  search={true}\n                  searchBG=\"bg-gray-50\"\n                  thColor=\"gray\"\n                />\n              </div>\n            )}\n          </div>\n          <div className={`col-span-1 md:col-span-2`}>\n            {!this.props.currentAccess ? (\n              <div className=\"w-full hidden md:flex flex-col items-center text-gray-600 gap-1 py-3\">\n                <MdSettings className=\"w-20 h-20\" />\n                <span className=\"text-8 md:text-12\">\n                  Choose Access to Customize\n                </span>\n              </div>\n            ) : (\n              <div className={``}>\n                <h1 className=\"text-2xl md:text-3xl font-semibold text-center my-2 text-gray-900\">\n                  Customize User Access\n                </h1>\n                <div className=\"flex justify-center mb-3\">\n                  <h2 className=\"text-2xl font-semibold text-center text-gray-600 flex flex-row items-center\">\n                    <BiRightArrowAlt className=\"w-7 h-7\" />\n                    {this.props.currentAccess.task}\n                  </h2>\n                </div>\n\n                <div className=\"flex flex-col px-2 md:px-1\">\n                  <form\n                    className=\"flex flex-col items-center\"\n                    onSubmit={(e) => this.handleCustomization(e)}\n                  >\n                    <div className=\"inline-flex gap-2 items-center\">\n                      <SiAddthis className=\"w-7 h-7 text-gray-600\" />\n                      <div className=\"flex flex-col\">\n                        <h3 className=\"font-semibold text-xl\">Create</h3>\n                        <span className=\"text-gray-600 text-sm md:pr-1\">\n                          This permission gives the user the ability to create\n                        </span>\n                      </div>\n                      <input\n                        type=\"checkbox\"\n                        className=\"form-checkbox h-7 w-7 text-teal-600\"\n                        onChange={() =>\n                          this.setCreatePermission(!this.state.createPermission)\n                        }\n                        checked={this.state.createPermission}\n                        disabled={this.state.loadindRequest}\n                      />\n                    </div>\n                    <div className=\"inline-flex gap-2 items-center\">\n                      <MdRemoveRedEye className=\"w-7 h-7 text-gray-600\" />\n                      <div className=\"flex flex-col\">\n                        <h3 className=\"font-semibold text-xl\">View</h3>\n                        <span className=\"text-gray-600 text-sm md:pr-4\">\n                          This permission gives the user the ability to view\n                        </span>\n                      </div>\n                      <input\n                        type=\"checkbox\"\n                        className=\"form-checkbox h-7 w-7 text-teal-600\"\n                        onChange={() =>\n                          this.setViewPermission(!this.state.viewPermission)\n                        }\n                        checked={this.state.viewPermission}\n                        disabled={this.state.loadindRequest}\n                      />\n                    </div>\n                    <div className=\"inline-flex gap-2 items-center\">\n                      <MdEdit className=\"w-7 h-7 text-gray-600\" />\n                      <div className=\"flex flex-col\">\n                        <h3 className=\"font-semibold text-xl\">Update</h3>\n                        <span className=\"text-gray-600 text-sm\">\n                          This permission gives the user the ability to update\n                        </span>\n                      </div>\n                      <input\n                        type=\"checkbox\"\n                        className=\"form-checkbox h-7 w-7 text-teal-600\"\n                        onChange={() =>\n                          this.setUpdatePermission(!this.state.updatePermission)\n                        }\n                        checked={this.state.updatePermission}\n                        disabled={this.state.loadindRequest}\n                      />\n                    </div>\n                    <div className=\"inline-flex gap-2 items-center\">\n                      <MdDelete className=\"w-7 h-7 text-gray-600\" />\n                      <div className=\"flex flex-col\">\n                        <h3 className=\"font-semibold text-xl\">Delete</h3>\n                        <span className=\"text-gray-600 text-sm md:pr-1\">\n                          This permission gives the user the ability to delete\n                        </span>\n                      </div>\n                      <input\n                        type=\"checkbox\"\n                        className=\"form-checkbox h-7 w-7 text-teal-600\"\n                        onChange={() =>\n                          this.setDeletePermission(!this.state.deletePermission)\n                        }\n                        checked={this.state.deletePermission}\n                        disabled={this.state.loadindRequest}\n                      />\n                    </div>\n\n                    <div className=\"flex items-center justify-center w-full py-3 gap-2\">\n                      {/* <button className=\"btn btn-secondary bg-red-600\">Back</button> */}\n                      <button\n                        className=\"btn bg-gray-500 hover:bg-gray-700 focus:outline-none text-white\"\n                        disabled={this.state.loadindRequest}\n                        onClick={() => {\n                          this.props.setCurrentAccess(null);\n                          this.setCreatePermission(false);\n                          this.setViewPermission(false);\n                          this.setUpdatePermission(false);\n                          this.setDeletePermission(false);\n                        }}\n                      >\n                        Cancel\n                      </button>\n                      <button\n                        className=\"btn btn-blue\"\n                        disabled={this.state.loadindRequest}\n                      >\n                        {!this.state.loadindRequest\n                          ? \"Save Change\"\n                          : \"Processing..\"}\n                      </button>\n                    </div>\n                  </form>\n                </div>\n              </div>\n            )}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport const UserAccess = React.memo(\n  connect(null, {\n    customizeUserAccess,\n    PushPopupAlert,\n  })(_UserAccess)\n);\n","import React, { FC } from \"react\";\nimport { IconType } from \"react-icons\";\nimport { FaUsers } from \"react-icons/fa\";\nimport { toAnyDigit } from \"../../shared/dataTest\";\n\nexport type DashboardLabelItemInterface = {\n  // TITLE: Application or Exam or Shortlisted ....\n  title: string;\n  // ICON: FaExpand ....\n  icon: IconType;\n  // ICON COLOR: blue, indigo, gray ....\n  iconColor: string;\n  // COUNT: 0,1,2,3,5,23,563 ....\n  count: number;\n  // COUNT: 0,1,2,3,5,23,563 ....\n  countOver?: number;\n};\n\nconst DashboardLabelItem: FC<DashboardLabelItemInterface> = (\n  props = {\n    title: \"\",\n    icon: FaUsers,\n    iconColor: \"indigo\",\n    count: 0,\n    countOver: undefined,\n  }\n) => {\n  const IconDefined = props.icon;\n  return (\n    <div className=\"flex items-center px-6 py-4 bg-white w-full rounded-md space-x-2 mb-2 lg:mb-0 shadow-md\">\n      <div\n        className={`p-3 rounded-full bg-${props.iconColor}-200 bg-opacity-75`}\n      >\n        <IconDefined className={`h-8 w-8 text-${props.iconColor}-600`} />\n      </div>\n      <div>\n        <h1 className=\"text-3xl font-semibold text-gray-700\">\n          {toAnyDigit(props.count)}{\" \"}\n          {props.countOver && \"/ \" + toAnyDigit(props.countOver)}\n        </h1>\n        <span className=\"text-gray-500 text-lg\">{props.title}</span>\n      </div>\n    </div>\n  );\n};\n\nexport default React.memo(DashboardLabelItem);\n","import React, { useState } from \"react\";\nimport { BiSort } from \"react-icons/bi\";\nimport Loading from \"../../../components/Loading/Loading\";\nimport { SessionPlanInterface } from \"../../../interfaces\";\nimport { course } from \"../../../interfaces/course\";\nimport { ExamItemResponse } from \"../../../interfaces/prepare_exam\";\nimport { ExamsParcentageSuccessFailedRateByPeriodInterface } from \"../../../interfaces/reports\";\nimport { capitalizeFirstLetter } from \"../../../shared/dataTest\";\nimport { DATE, sortThisArray } from \"../../../utils/functions\";\n\nexport interface ExamPerformanceToPrintInterface {\n  course_id: number;\n  course_name: string;\n  course_code: string;\n  description: string;\n  school_levels: string;\n  exam_period: string;\n  exam_date: string;\n  exam_time: string;\n  exam_duration: string;\n  exam_performance: number;\n}\n\nexport enum examPerformanceReportContentKeyInterface {\n  COURSER_NAME = \"course_name\",\n  COURSE_CODE = \"course_code\",\n  SCHOOL_LEVEL = \"school_levels\",\n  PERIOD = \"exam_period\",\n  DATE = \"exam_date\",\n  TIME = \"exam_time\",\n  DURATION = \"exam_duration\",\n  PERFORMANCE = \"exam_performance\",\n}\n\nexport interface examPerformanceReportContentInterface {\n  key: examPerformanceReportContentKeyInterface;\n  title: string;\n  status: boolean;\n}\n\nexport const examPerformanceIsChangeAllowed = (\n  key: examPerformanceReportContentKeyInterface\n): boolean => {\n  if (\n    key === examPerformanceReportContentKeyInterface.COURSER_NAME ||\n    key === examPerformanceReportContentKeyInterface.COURSE_CODE ||\n    key === examPerformanceReportContentKeyInterface.PERIOD ||\n    key === examPerformanceReportContentKeyInterface.PERFORMANCE\n  ) {\n    return false;\n  }\n  return true;\n};\n\nexport const defaultExamPerformanceContent: examPerformanceReportContentInterface[] =\n  [\n    {\n      key: examPerformanceReportContentKeyInterface.COURSER_NAME,\n      title: \"Course names\",\n      status: true,\n    },\n    {\n      key: examPerformanceReportContentKeyInterface.COURSE_CODE,\n      title: \"Course code\",\n      status: true,\n    },\n    {\n      key: examPerformanceReportContentKeyInterface.SCHOOL_LEVEL,\n      title: \"School levels\",\n      status: true,\n    },\n    {\n      key: examPerformanceReportContentKeyInterface.PERIOD,\n      title: \"Exam period\",\n      status: true,\n    },\n    {\n      key: examPerformanceReportContentKeyInterface.DATE,\n      title: \"Exam date\",\n      status: true,\n    },\n    {\n      key: examPerformanceReportContentKeyInterface.TIME,\n      title: \"Exam time\",\n      status: true,\n    },\n    {\n      key: examPerformanceReportContentKeyInterface.DURATION,\n      title: \"Exam duration\",\n      status: true,\n    },\n    {\n      key: examPerformanceReportContentKeyInterface.PERFORMANCE,\n      title: \"Exam performance\",\n      status: true,\n    },\n  ];\n\nexport interface examPerformanceStateInterface {\n  course_name: string;\n  course_code: string;\n  description: string;\n  school_levels: string[];\n  course_id: string;\n  exam: ExamItemResponse | null;\n  exam_performance: number;\n}\n\nexport const FC_reportExamPerformanceData = (\n  allCourses: course[],\n  allExams: ExamItemResponse[],\n  examPerformance: ExamsParcentageSuccessFailedRateByPeriodInterface[]\n): examPerformanceStateInterface[] => {\n  let result: examPerformanceStateInterface[] = [],\n    ids: string[] = [];\n  for (const key in examPerformance) {\n    if (Object.prototype.hasOwnProperty.call(examPerformance, key)) {\n      if (ids.includes(examPerformance[key].answer_sheet_id)) continue;\n      ids.push(examPerformance[key].answer_sheet_id);\n      let courser = allCourses.find(\n        (item) => item.course_id === examPerformance[key].course\n      );\n      if (courser) {\n        let exam = allExams.find(\n          (item) =>\n            item.course === examPerformance[key].course &&\n            item.period === examPerformance[key].period\n        );\n        result.push({\n          course_name: courser.course_name,\n          course_code: courser.course_code,\n          description: courser.description,\n          school_levels: courser.school_levels,\n          course_id: courser.course_id,\n          exam: exam ? exam : null,\n          exam_performance: examPerformance[key].total_marks,\n        });\n      }\n    }\n  }\n  console.log(\"===============-----------------=====================\");\n  console.log({ result });\n  console.log(\"===============-----------------=====================\");\n  return result;\n};\n\nexport const searchExamPerformanceData = (\n  objList: examPerformanceStateInterface[],\n  text: string\n): examPerformanceStateInterface[] => {\n  if (undefined === text || text === \"\") return objList;\n  return objList.filter((product) => {\n    let flag;\n    // let dataKeys = product;\n\n    for (let prop in product) {\n      flag = false;\n      if (\n        prop === \"course_name\" ||\n        prop === \"course_code\" ||\n        prop === \"exam_performance\"\n      ) {\n        flag =\n          product[prop].toString().toLowerCase().indexOf(text.toLowerCase()) >\n          -1;\n      }\n      if (flag) break;\n    }\n    return flag;\n  });\n};\n\ntype ExamPerformanceProps = {\n  loading: boolean;\n  examsListData: ExamItemResponse[] | null;\n  courseListData: course[] | null;\n  thisPeriod: SessionPlanInterface[];\n  examsPerformanceData:\n    | ExamsParcentageSuccessFailedRateByPeriodInterface[]\n    | null;\n};\n\nconst ExamPerformance: React.FC<ExamPerformanceProps> = (props) => {\n  const [searchInput, setSearchInput] = useState<string>(\"\");\n  const [isSorted, setIsSorted] = useState<boolean>(false);\n  const [sortProperty, setSortProperty] = useState<string>(\"\");\n  const [sortOrder, setSortOrder] = useState<\"ASC\" | \"DESC\">(\"ASC\");\n\n  const setSort = (thisProperty: string) => {\n    if (sortProperty === thisProperty && sortOrder === \"ASC\") {\n      setSortOrder(\"DESC\");\n      setSortProperty(thisProperty);\n      setIsSorted(true);\n    } else {\n      setSortOrder(\"ASC\");\n      setSortProperty(thisProperty);\n      setIsSorted(true);\n    }\n  };\n\n  return (\n    <React.Fragment>\n      <div className=\"bg-white my-4\">\n        <div className=\"w-full px-2 py-2\">\n          <input\n            onChange={(e) => setSearchInput(e.target.value)}\n            type=\"text\"\n            value={searchInput}\n            placeholder=\"Search...\"\n            className=\"w-full bg-gray-100 py-2 px-3 rounded\"\n            disabled={\n              props.courseListData &&\n              props.examsListData &&\n              props.examsPerformanceData &&\n              FC_reportExamPerformanceData(\n                props.courseListData,\n                props.examsListData,\n                props.examsPerformanceData\n              ).length <= 0\n                ? true\n                : false\n            }\n          />\n        </div>\n        <div className=\"w-full overflow-x-auto\">\n          <table className=\"w-full shadow\" id=\"report_content\">\n            <thead className=\"bg-white border-b-2 border-gray-300 text-gray-600 font-bold text-sm\">\n              <tr>\n                <td className=\"px-2 py-2\">#</td>\n                <td\n                  className=\"px-2 py-2 cursor-pointer\"\n                  onClick={() => setSort(\"course_name\")}\n                >\n                  <div className=\"flex items-center gap-1\">\n                    Course <BiSort />\n                  </div>\n                </td>\n                <td className=\"px-2 py-2\">Exam date</td>\n                <td className=\"px-2 py-2\">Exam time</td>\n                <td className=\"px-2 py-2\">Exam duration</td>\n                <td\n                  className=\"px-2 py-2 cursor-pointer\"\n                  onClick={() => setSort(\"exam_performance\")}\n                >\n                  <div className=\"flex items-center gap-1\">\n                    Exam performance <BiSort />\n                  </div>\n                </td>\n              </tr>\n            </thead>\n            <tbody>\n              {props.courseListData === null || props.loading ? (\n                <tr>\n                  <td colSpan={6} className=\"px-2 py-2\">\n                    <Loading />\n                  </td>\n                </tr>\n              ) : props.examsListData &&\n                props.examsPerformanceData &&\n                FC_reportExamPerformanceData(\n                  props.courseListData,\n                  props.examsListData,\n                  props.examsPerformanceData\n                ).length <= 0 ? (\n                <tr>\n                  <td colSpan={6} className=\"px-2 py-2 text-center\">\n                    No Exam list available!\n                  </td>\n                </tr>\n              ) : (\n                props.examsListData &&\n                props.examsPerformanceData &&\n                sortThisArray(\n                  isSorted,\n                  searchExamPerformanceData(\n                    FC_reportExamPerformanceData(\n                      props.courseListData,\n                      props.examsListData,\n                      props.examsPerformanceData\n                    ),\n                    searchInput\n                  ),\n                  sortProperty,\n                  sortOrder\n                ).map((item: examPerformanceStateInterface, i) => (\n                  <tr\n                    key={i + 1}\n                    className={`bg-white text-gray-600 hover:bg-blue-100 hover:text-blue-700 border-b border-gray-300 hover:border-blue-500 text-sm`}\n                  >\n                    <td className=\"px-2 py-2\">{i + 1}</td>\n                    <td className=\"px-2 py-2\">\n                      {capitalizeFirstLetter(item.course_name)} (\n                      <span className=\"font-semibold\">{item.course_code}</span>)\n                    </td>\n                    <td className=\"px-2 py-2\">\n                      {item.exam ? DATE(item.exam.exam_date) : \"-\"}\n                    </td>\n                    <td className=\"px-2 py-2\">\n                      {item.exam ? item.exam.start_time : \"-\"}\n                    </td>\n                    <td className=\"px-2 py-2\">\n                      {item.exam ? item.exam!.duration + \" min\" : \"-\"}\n                    </td>\n                    <td className=\"px-2 py-2\">\n                      {Number(item.exam_performance.toFixed(1)) + \"%\"}\n                    </td>\n                  </tr>\n                ))\n              )}\n            </tbody>\n          </table>\n        </div>\n      </div>\n    </React.Fragment>\n  );\n};\n\nexport default React.memo(ExamPerformance);\n","import React from \"react\";\nimport DashboardLabelItem, {\n  DashboardLabelItemInterface,\n} from \"../DashboardLabelItem\";\n\ntype DashboardLabelProps = {\n  dataLabels: DashboardLabelItemInterface[];\n  labelsOnRow?: number;\n  childrenPosition?: \"START\" | \"END\";\n  children?: JSX.Element;\n};\n\nconst ExamDashboardLabels: React.FC<DashboardLabelProps> = (props) => {\n  const numCols: number = props.labelsOnRow\n    ? props.labelsOnRow > 4\n      ? props.labelsOnRow\n      : 4\n    : 4;\n  return (\n    <div\n      className={`grid 2xl:grid-cols-${numCols} xl:grid-cols-${\n        numCols - 1\n      } lg:grid-cols-${numCols - 2} md:grid-cols-${\n        numCols - 3\n      } sm:grid-cols-2 grid-cols-1 gap-4 items-center mx-auto`}\n    >\n      {props.children &&\n        ((props.childrenPosition && props.childrenPosition === \"START\") ||\n          !props.childrenPosition) &&\n        props.children}\n      {props.dataLabels.map((item, index) => (\n        <section key={index + item.title}>\n          <DashboardLabelItem\n            title={item.title}\n            icon={item.icon}\n            iconColor={item.iconColor}\n            count={item.count}\n          />\n        </section>\n      ))}\n      {props.children &&\n        props.childrenPosition &&\n        props.childrenPosition === \"END\" &&\n        props.children}\n    </div>\n  );\n};\n\nexport default React.memo(ExamDashboardLabels);\n","import React, { useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport {\n  FC_CreateDistrict,\n  FC_DeleteDistrict,\n  FC_UpdateDistrict,\n} from \"../../actions/location\";\nimport axios from \"axios\";\nimport { API } from \"../../utils/api\";\nimport {\n  DistrictInterface,\n  RoomLocationInterface,\n} from \"../../shared/interfaces\";\nimport { PushPopupAlert } from \"../../actions/system\";\nimport { PopupAlertData } from \"../../components/Alert/Popup\";\nimport { PopupAlertTheme } from \"../../interfaces/popupAlert\";\nimport { errorToText } from \"../../utils/errors\";\nimport NoResult, { NoResultThemes } from \"../../components/NoResult/NoResult\";\nimport Modal, { ModalSize, Themes } from \"../../components/Modal/Modal\";\nimport { isEmptyOrSpaces } from \"../../shared/dataTest\";\n\ninterface AppProps {\n  thisProvince: RoomLocationInterface;\n  thisDistrict: DistrictInterface | null;\n  loadingRequest: boolean;\n  actionTypes:\n    | \"CREATE_PROVINCE\"\n    | \"UPDATE_PROVINCE\"\n    | \"CREATE_DISTRICT\"\n    | \"UPDATE_DISTRICT\"\n    | \"CREATE_SECTOR\"\n    | \"UPDATE_SECTOR\"\n    | null;\n  setLoadingRequest: React.Dispatch<React.SetStateAction<boolean>>;\n  setThisDistrict: React.Dispatch<\n    React.SetStateAction<DistrictInterface | null>\n  >;\n  setActionTypes: React.Dispatch<\n    React.SetStateAction<\n      | \"CREATE_PROVINCE\"\n      | \"UPDATE_PROVINCE\"\n      | \"CREATE_DISTRICT\"\n      | \"UPDATE_DISTRICT\"\n      | \"CREATE_SECTOR\"\n      | \"UPDATE_SECTOR\"\n      | null\n    >\n  >;\n  FC_CreateDistrict: Function;\n  FC_UpdateDistrict: Function;\n  FC_DeleteDistrict: Function;\n  PushPopupAlert: (alert: PopupAlertData) => void;\n}\n\nconst ViewDistrict: React.FC<AppProps> = (props) => {\n  const [districtName, setDistrictName] = useState<string>(\"\");\n  const [districtCode, setDistrictCode] = useState<number>(0);\n  const [error, setError] = useState<{ element: string; msg: string } | null>(\n    null\n  );\n\n  const handleSubmit = async () => {\n    if (isEmptyOrSpaces(districtName)) {\n      return setError({\n        element: \"district_name\",\n        msg: \"District name is required\",\n      });\n    }\n\n    if (districtCode <= 0) {\n      return setError({\n        element: \"district_code\",\n        msg: \"Invalid district code, code must be greater than 0\",\n      });\n    }\n\n    props.setLoadingRequest(true);\n    try {\n      let res;\n      if (props.actionTypes === \"CREATE_DISTRICT\") {\n        res = await axios.post<{ data: DistrictInterface }>(\n          `${API.APPLICATION}/district`,\n          {\n            province_id: props.thisProvince._id,\n            province_code: props.thisProvince.province_code,\n            district_name: districtName,\n            district_code: districtCode,\n            centers: [],\n          }\n        );\n        if (res.data) {\n          console.log({\n            province_id: props.thisProvince._id,\n            data: res.data.data,\n            res,\n          });\n          props.FC_CreateDistrict({\n            province_id: props.thisProvince._id,\n            data: {\n              centers: res.data.data.centers,\n              sectors: res.data.data.sectors,\n              province_code: res.data.data.province_code,\n              province_id: res.data.data.province_id,\n              district_code: res.data.data.district_code,\n              district_name: res.data.data.district_name,\n              district_id: res.data.data._id,\n            },\n          });\n          props.PushPopupAlert({\n            title: \"New district created successfully\",\n            theme: PopupAlertTheme.success,\n          });\n          props.setLoadingRequest(false);\n          props.setActionTypes(null);\n          setDistrictName(\"\");\n          setDistrictCode(0);\n        }\n      } else if (\n        props.thisDistrict &&\n        props.actionTypes === \"UPDATE_DISTRICT\"\n      ) {\n        const centers: string[] = props.thisDistrict.centers.map(\n          (center) => center._id\n        );\n        res = await axios.patch<{ data: DistrictInterface }>(\n          `${API.APPLICATION}/district`,\n          {\n            district_id: props.thisDistrict._id,\n            province_code: props.thisProvince.province_code,\n            district_name: districtName,\n            district_code: districtCode,\n            centers,\n          }\n        );\n        if (res.data) {\n          props.FC_UpdateDistrict({\n            province_id: props.thisProvince._id,\n            district_id: props.thisDistrict._id,\n            district_name: districtName,\n          });\n          props.PushPopupAlert({\n            title: \"District updated successfully\",\n            theme: PopupAlertTheme.success,\n          });\n          props.setLoadingRequest(false);\n          props.setActionTypes(null);\n          setDistrictName(\"\");\n          props.setThisDistrict(null);\n        }\n      }\n    } catch (error) {\n      console.log({ doc_category_error: error });\n      props.PushPopupAlert({\n        title: errorToText(error),\n        theme: PopupAlertTheme.danger,\n      });\n      props.setLoadingRequest(false);\n    }\n  };\n\n  // const handleDelete = async (districtId: string) => {\n  //   try {\n  //     const res = await axios.delete<DistrictInterface>(\n  //       `${API.APPLICATION}/district/${districtId}`\n  //     );\n\n  //     if (res.data) {\n  //       props.FC_DeleteDistrict({\n  //         province_id: props.thisProvince._id,\n  //         district_id: districtId,\n  //       });\n  //       props.PushPopupAlert({\n  //         title: \"District deleted successfully\",\n  //         theme: PopupAlertTheme.success,\n  //       });\n  //       props.setLoadingRequest(false);\n  //       props.setActionTypes(null);\n  //     }\n  //   } catch (error) {\n  //     console.log({ district_error: error });\n  //     props.PushPopupAlert({\n  //       title: errorToText(error),\n  //       theme: PopupAlertTheme.danger,\n  //     });\n  //     props.setLoadingRequest(false);\n  //   }\n  // };\n\n  return (\n    <div className={`w-full p-2`}>\n      {props.thisProvince.districts.length > 0 ? (\n        <div className=\"rounded border border-gray-100 shadow-sm animate__animated animate__fadeIn\">\n          <table className=\"w-full z-0\">\n            <thead className=\"bg-gray-50\">\n              <tr className=\"text-left\">\n                <th className=\"px-3 py-3\">#</th>\n                <th>District name</th>\n                <th>District code</th>\n                <th>Sectors</th>\n                {/* <th>Status</th> */}\n              </tr>\n            </thead>\n            <tbody className=\"text-base\">\n              {props.thisProvince.districts.map((district, index) => (\n                <tr\n                  key={index + district._id}\n                  className={`text-left border-b border-gray-50`}\n                >\n                  <td className=\"px-3 py-1\">{index + 1}</td>\n                  <td>{district.district_name}</td>\n                  <td>{district.district_code}</td>\n                  <td>\n                    {district.sectors && district.sectors.length > 0\n                      ? district.sectors.length + \" Sector(s)\"\n                      : \"\"}\n                  </td>\n                  {/* <td>\n                    <div className=\"flex items-center gap-2\">\n                      <button\n                        title={\n                          props.thisDistrict &&\n                          props.thisDistrict._id === district._id\n                            ? \"Close Centers\"\n                            : \"View Centers\"\n                        }\n                        className={`${\n                          props.thisDistrict &&\n                          props.thisDistrict._id === district._id\n                            ? \"bg-gray-500 hover:bg-gray-600\"\n                            : \"bg-gray-400 hover:bg-gray-500\"\n                        } p-2 rounded-full shadow-md flex justify-center items-center focus:outline-none`}\n                        onClick={() =>\n                          !props.thisDistrict ||\n                          props.thisDistrict._id !== district._id\n                            ? props.setThisDistrict(district)\n                            : props.setThisDistrict(null)\n                        }\n                      >\n                        {props.thisDistrict &&\n                        props.thisDistrict._id === district._id ? (\n                          <IoMdEyeOff className=\"text-white w-4 h-4\" />\n                        ) : (\n                          <IoMdEye className=\"text-white w-4 h-4\" />\n                        )}\n                      </button>\n                      <button\n                        title=\"Update district\"\n                        className=\"bg-blue-500 hover:bg-blue-600 p-2 rounded-full shadow-md flex justify-center items-center focus:outline-none\"\n                        onClick={() => {\n                          props.setThisDistrict(district);\n                          setDistrictName(district.district_name);\n                          setDistrictCode(district.district_code);\n                          props.setActionTypes(\"UPDATE_DISTRICT\");\n                        }}\n                        disabled={\n                          props.loadingRequest || props.actionTypes !== null\n                        }\n                      >\n                        <MdCreate className=\"text-white w-4 h-4\" />\n                      </button>\n                      <button\n                        title=\"Delete Sub-Category\"\n                        className=\"bg-red-500 hover:bg-red-600 p-2 rounded-full shadow-md flex justify-center items-center focus:outline-none\"\n                        onClick={() => handleDelete(district._id)}\n                        disabled={props.loadingRequest}\n                      >\n                        <MdClear className=\"text-white w-4 h-4\" />\n                      </button>\n                    </div>\n                  </td> */}\n                </tr>\n              ))}\n            </tbody>\n          </table>\n        </div>\n      ) : (\n        <NoResult\n          theme={NoResultThemes.Dark}\n          value={\"No district found!\"}\n          component={\n            <div className=\"w-full mt-2 flex flex-row items-center justify-center\">\n              <ul className=\"text-sm py-2 text-blue-600 font-bold flex flex-row gap-2\">\n                <li\n                  onClick={() => props.setActionTypes(\"CREATE_DISTRICT\")}\n                  className=\"underline text-gray-500 cursor-pointer\"\n                >\n                  Add district\n                </li>\n              </ul>\n            </div>\n          }\n        />\n      )}\n\n      {/* modal for creating new categories or sub category */}\n      {props.actionTypes &&\n        (props.actionTypes === \"CREATE_DISTRICT\" ||\n          props.actionTypes === \"UPDATE_DISTRICT\") && (\n          <Modal\n            backDrop={true}\n            theme={Themes.default}\n            close={(): void => {\n              props.setActionTypes(null);\n              setDistrictName(\"\");\n              setDistrictCode(10);\n              setError(null);\n            }}\n            displayClose={false}\n            backDropClose={false}\n            title={\n              <div className=\"flex items-center space-x-5\">\n                <div className=\"block pl-2 font-semibold text-xl self-start text-gray-700\">\n                  {/* <p className=\"text-base text-gray-500 font-medium\">\n                    You are{\" \"}\n                    {actionType === \"CREATE_SUB\" || \"CREATE_CAT\"\n                      ? \"creating\"\n                      : \"updating\"}\n                  </p> */}\n                  <h2 className=\"uppercase text-back\">\n                    {props.actionTypes === \"CREATE_DISTRICT\"\n                      ? \"CREATING NEW DISTRICT\"\n                      : props.actionTypes === \"UPDATE_DISTRICT\" &&\n                        \"UPDATING EXISTING DISTRICT\"}\n                  </h2>\n                </div>\n              </div>\n            }\n            widthSizeClass={ModalSize.medium}\n            padding={{ title: true, body: false, footer: false }}\n          >\n            <div className=\"mx-5 mb-4\">\n              <div className=\"py-2 text-base leading-6 space-y-4 text-gray-700 sm:text-lg sm:leading-7\">\n                <div className=\"flex flex-col\">\n                  <label>District name</label>\n                  <input\n                    type=\"text\"\n                    className={`bg-white py-1 px-2 border-2 ${\n                      error && error.element === \"district_name\"\n                        ? \"border-red-700\"\n                        : \"border-gray-700\"\n                    } rounded focus:outline-none focus:bg-gray-100`}\n                    onChange={(e) => {\n                      error &&\n                        error.element === \"district_name\" &&\n                        setError(null);\n                      setDistrictName(e.target.value);\n                    }}\n                    value={districtName}\n                    disabled={props.loadingRequest}\n                  />\n                  {error && error.element === \"district_name\" && (\n                    <span className=\"text-red-700\">{error.msg}</span>\n                  )}\n                </div>\n                <div className=\"flex flex-col\">\n                  <label>District code</label>\n                  <input\n                    type=\"number\"\n                    className={`bg-white py-1 px-2 border-2 ${\n                      error && error.element === \"district_code\"\n                        ? \"border-red-700\"\n                        : \"border-gray-700\"\n                    } rounded focus:outline-none focus:bg-gray-100`}\n                    onChange={(e) => {\n                      error &&\n                        error.element === \"district_code\" &&\n                        setError(null);\n                      setDistrictCode(Number(e.target.value));\n                    }}\n                    value={districtCode}\n                    disabled={props.loadingRequest}\n                  />\n                  {error && error.element === \"district_code\" && (\n                    <span className=\"text-red-700\">{error.msg}</span>\n                  )}\n                </div>\n              </div>\n              <div className=\"pt-4 flex justify-between\">\n                <button\n                  onClick={() => {\n                    props.setActionTypes(null);\n                    setDistrictName(\"\");\n                    setDistrictCode(10);\n                    setError(null);\n                  }}\n                  className={`btn bg-gray-400 text-white hover:bg-gray-600`}\n                  type=\"button\"\n                  disabled={props.loadingRequest}\n                >\n                  Exit\n                </button>\n                <button\n                  className=\"btn bg-primary text-white hover:bg-blue-600\"\n                  type=\"button\"\n                  onClick={() => handleSubmit()}\n                  disabled={props.loadingRequest}\n                >\n                  {props.loadingRequest ? \"Loading...\" : \"Save\"}\n                </button>\n              </div>\n            </div>\n          </Modal>\n        )}\n      {/* end modal for creating new categories or sub category */}\n    </div>\n  );\n};\n\nexport default React.memo(connect(null, {\n  FC_CreateDistrict,\n  FC_UpdateDistrict,\n  FC_DeleteDistrict,\n  PushPopupAlert,\n})(ViewDistrict));\n","import React, { useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { IoMdEye, IoMdEyeOff } from \"react-icons/io\";\nimport {\n  FC_CreateProvince,\n  FC_DeleteProvince,\n  FC_UpdateProvince,\n} from \"../../actions/location\";\nimport axios from \"axios\";\nimport { API } from \"../../utils/api\";\nimport {\n  DistrictInterface,\n  RoomLocationInterface,\n} from \"../../shared/interfaces\";\nimport { PushPopupAlert } from \"../../actions/system\";\nimport { PopupAlertData } from \"../../components/Alert/Popup\";\nimport { PopupAlertTheme } from \"../../interfaces/popupAlert\";\nimport { errorToText } from \"../../utils/errors\";\nimport Modal, { ModalSize, Themes } from \"../../components/Modal/Modal\";\nimport NoResult, { NoResultThemes } from \"../../components/NoResult/NoResult\";\nimport { isEmptyOrSpaces } from \"../../shared/dataTest\";\n\ninterface AppProps {\n  thisProvince: RoomLocationInterface | null;\n  thisDistrict: DistrictInterface | null;\n  loadingRequest: boolean;\n  locations: RoomLocationInterface[];\n  actionTypes:\n    | \"CREATE_PROVINCE\"\n    | \"UPDATE_PROVINCE\"\n    | \"CREATE_DISTRICT\"\n    | \"UPDATE_DISTRICT\"\n    | \"CREATE_SECTOR\"\n    | \"UPDATE_SECTOR\"\n    | null;\n  setLoadingRequest: React.Dispatch<React.SetStateAction<boolean>>;\n  setThisProvince: React.Dispatch<\n    React.SetStateAction<RoomLocationInterface | null>\n  >;\n  setActionTypes: React.Dispatch<\n    React.SetStateAction<\n      | \"CREATE_PROVINCE\"\n      | \"UPDATE_PROVINCE\"\n      | \"CREATE_DISTRICT\"\n      | \"UPDATE_DISTRICT\"\n      | \"CREATE_SECTOR\"\n      | \"UPDATE_SECTOR\"\n      | null\n    >\n  >;\n  FC_CreateProvince: Function;\n  FC_UpdateProvince: Function;\n  FC_DeleteProvince: Function;\n  PushPopupAlert: (alert: PopupAlertData) => void;\n}\n\nconst ViewProvince: React.FC<AppProps> = (props) => {\n  const [provinceTitle, setProvinceTitle] = useState<string>(\"\");\n  const [provinceCode, setProvinceCode] = useState<number>(0);\n  const [error, setError] = useState<{ element: string; msg: string } | null>(\n    null\n  );\n\n  const handleSubmit = async () => {\n    if (isEmptyOrSpaces(provinceTitle)) {\n      return setError({\n        element: \"province_title\",\n        msg: \"Title of Province is required\",\n      });\n    }\n\n    if (provinceCode <= 0) {\n      return setError({\n        element: \"province_code\",\n        msg: \"Code of Province is required\",\n      });\n    }\n\n    props.setLoadingRequest(true);\n    try {\n      let res;\n      if (props.actionTypes === \"CREATE_PROVINCE\") {\n        res = await axios.post<{ data: RoomLocationInterface }>(\n          `${API.APPLICATION}/province`,\n          {\n            province_name: provinceTitle,\n            province_code: provinceCode,\n            districts: [],\n          }\n        );\n\n        if (res.data) {\n          props.FC_CreateProvince(res.data.data);\n          props.PushPopupAlert({\n            title: \"New Province created successfully\",\n            theme: PopupAlertTheme.success,\n          });\n          props.setLoadingRequest(false);\n          props.setActionTypes(null);\n          setProvinceTitle(\"\");\n        }\n      } else if (\n        props.thisProvince &&\n        props.actionTypes === \"UPDATE_PROVINCE\"\n      ) {\n        const districts: string[] = props.thisProvince.districts.map(\n          (district) => district._id\n        );\n        res = await axios.patch<{ updated: RoomLocationInterface }>(\n          `${API.APPLICATION}/province`,\n          {\n            province_id: props.thisProvince._id,\n            province_name: provinceTitle,\n            province_code: provinceCode,\n            districts,\n          }\n        );\n        if (res.data) {\n          console.log({ res: res.data.updated });\n          props.FC_UpdateProvince(res.data.updated);\n          props.PushPopupAlert({\n            title: \"Province updated successfully\",\n            theme: PopupAlertTheme.success,\n          });\n          props.setLoadingRequest(false);\n          props.setActionTypes(null);\n          setProvinceTitle(\"\");\n          props.setThisProvince(null);\n        }\n      }\n    } catch (error) {\n      console.error({ province_error: error });\n      props.PushPopupAlert({\n        title: errorToText(error),\n        theme: PopupAlertTheme.danger,\n      });\n      props.setLoadingRequest(false);\n    }\n  };\n\n  // const handleDelete = async (provinceId: string) => {\n  //   try {\n  //     const res = await axios.delete<RoomLocationInterface>(\n  //       `${API.APPLICATION}/province/${provinceId}`\n  //     );\n\n  //     if (res.data) {\n  //       console.log({ res });\n  //       props.FC_DeleteProvince(provinceId);\n  //       props.PushPopupAlert({\n  //         title: \"Province deleted successfully\",\n  //         theme: PopupAlertTheme.success,\n  //       });\n  //       props.setLoadingRequest(false);\n  //       props.setActionTypes(null);\n  //     }\n  //   } catch (error) {\n  //     console.log({ province_error: error });\n  //     props.PushPopupAlert({\n  //       title: errorToText(error),\n  //       theme: PopupAlertTheme.danger,\n  //     });\n  //     props.setLoadingRequest(false);\n  //   }\n  // };\n\n  return (\n    <div className={`w-full p-2`}>\n      {props.locations.length > 0 ? (\n        props.locations.map((province, index) => (\n          <div\n            key={index + province._id}\n            className=\"flex justify-between items-center p-2 mb-3 rounded border border-gray-100 shadow\"\n          >\n            <div className=\"flex items-center\">\n              <div className=\"ml-2\">\n                <div className=\"text-xl font-semibold text-gray-600\">\n                  {province.province_name}\n                </div>\n                <div className=\"text-sm font-light text-gray-500\">\n                  {province.districts.length > 0\n                    ? province.districts.length + \"District(s)\"\n                    : null}\n                </div>\n              </div>\n            </div>\n            <div className=\"flex items-center gap-2\">\n              <button\n                title={\n                  props.thisProvince &&\n                  props.thisProvince._id === province._id &&\n                  props.actionTypes !== \"UPDATE_PROVINCE\"\n                    ? \"Close Districts\"\n                    : \"View Districts\"\n                }\n                className={`${\n                  props.thisProvince &&\n                  props.thisProvince._id === province._id &&\n                  props.actionTypes !== \"UPDATE_PROVINCE\"\n                    ? \"bg-gray-500 hover:bg-gray-600\"\n                    : \"bg-gray-400 hover:bg-gray-500\"\n                } p-2 rounded-full shadow-md flex justify-center items-center focus:outline-none`}\n                onClick={() => {\n                  !props.thisProvince || props.thisProvince._id !== province._id\n                    ? props.setThisProvince(province)\n                    : props.setThisProvince(null);\n                  setProvinceTitle(\"\");\n                  props.setActionTypes(null);\n                }}\n              >\n                {props.thisProvince &&\n                props.thisProvince._id === province._id &&\n                props.actionTypes !== \"UPDATE_PROVINCE\" ? (\n                  <IoMdEyeOff className=\"text-white w-4 h-4\" />\n                ) : (\n                  <IoMdEye className=\"text-white w-4 h-4\" />\n                )}\n              </button>\n              {/* <button\n                title=\"Update Province\"\n                className=\"bg-blue-500 hover:bg-blue-600 p-2 rounded-full shadow-md flex justify-center items-center focus:outline-none\"\n                onClick={() => {\n                  props.setThisProvince(province);\n                  setProvinceTitle(province.province_name);\n                  setProvinceCode(province.province_code);\n                  props.setActionTypes(\"UPDATE_PROVINCE\");\n                }}\n                disabled={props.loadingRequest || props.actionTypes !== null}\n              >\n                <MdCreate className=\"text-white w-4 h-4\" />\n              </button>\n              <button\n                title=\"Delete Sub-Category\"\n                className=\"bg-red-500 hover:bg-red-600 p-2 rounded-full shadow-md flex justify-center items-center focus:outline-none\"\n                onClick={() => handleDelete(province._id)}\n                disabled={props.loadingRequest || props.actionTypes !== null}\n              >\n                <MdClear className=\"text-white w-4 h-4\" />\n              </button> */}\n            </div>\n          </div>\n        ))\n      ) : (\n        <NoResult\n          theme={NoResultThemes.Dark}\n          value=\"No province found!\"\n          component={\n            <div className=\"w-full mt-2 flex flex-row items-center justify-center\">\n              <ul className=\"text-sm py-2 text-blue-600 font-bold flex flex-row gap-2\">\n                <li\n                  onClick={() => props.setActionTypes(\"CREATE_PROVINCE\")}\n                  className=\"underline text-gray-500 cursor-pointer\"\n                >\n                  Add province\n                </li>\n              </ul>\n            </div>\n          }\n        />\n      )}\n\n      {/* modal for creating new categories or sub category */}\n      {props.actionTypes &&\n        (props.actionTypes === \"CREATE_PROVINCE\" ||\n          props.actionTypes === \"UPDATE_PROVINCE\") && (\n          <Modal\n            backDrop={true}\n            theme={Themes.default}\n            close={(): void => {\n              props.setActionTypes(null);\n              setProvinceTitle(\"\");\n              setProvinceCode(0);\n              setError(null);\n            }}\n            displayClose={false}\n            backDropClose={false}\n            title={\n              <div className=\"flex items-center space-x-5\">\n                <div className=\"block pl-2 font-semibold text-xl self-start text-gray-700\">\n                  <h2 className=\"uppercase text-back\">\n                    {props.actionTypes === \"CREATE_PROVINCE\"\n                      ? \"CREATING NEW PROVINCE\"\n                      : props.actionTypes === \"UPDATE_PROVINCE\" &&\n                        \"UPDATING EXISTING PROVINCE\"}\n                  </h2>\n                </div>\n              </div>\n            }\n            widthSizeClass={ModalSize.medium}\n            padding={{ title: true, body: false, footer: false }}\n          >\n            <div className=\"mx-5 mb-4\">\n              <div className=\"py-2 text-base leading-6 space-y-4 text-gray-700 sm:text-lg sm:leading-7\">\n                <div className=\"flex flex-col\">\n                  <label>Province name</label>\n                  <input\n                    type=\"text\"\n                    className={`bg-white py-1 px-2 border-2 ${\n                      error && error.element === \"province_title\"\n                        ? \"border-red-700\"\n                        : \"border-gray-700\"\n                    } rounded focus:outline-none focus:bg-gray-100`}\n                    onChange={(e) => {\n                      error &&\n                        error.element === \"province_title\" &&\n                        setError(null);\n                      setProvinceTitle(e.target.value);\n                    }}\n                    value={provinceTitle}\n                    disabled={props.loadingRequest}\n                  />\n                  {error && error.element === \"province_title\" && (\n                    <span className=\"text-red-700\">{error.msg}</span>\n                  )}\n                </div>\n                <div className=\"flex flex-col\">\n                  <label>Province code</label>\n                  <input\n                    type=\"number\"\n                    className={`bg-white py-1 px-2 border-2 ${\n                      error && error.element === \"province_code\"\n                        ? \"border-red-700\"\n                        : \"border-gray-700\"\n                    } rounded focus:outline-none focus:bg-gray-100`}\n                    onChange={(e) => {\n                      error &&\n                        error.element === \"province_code\" &&\n                        setError(null);\n                      setProvinceCode(Number(e.target.value));\n                    }}\n                    value={provinceCode}\n                    disabled={props.loadingRequest}\n                  />\n                  {error && error.element === \"province_code\" && (\n                    <span className=\"text-red-700\">{error.msg}</span>\n                  )}\n                </div>\n              </div>\n              <div className=\"pt-4 flex justify-between\">\n                <button\n                  onClick={() => {\n                    props.setActionTypes(null);\n                    setProvinceTitle(\"\");\n                    setProvinceCode(0);\n                    setError(null);\n                  }}\n                  className={`btn bg-gray-400 text-white hover:bg-gray-600`}\n                  type=\"button\"\n                  disabled={props.loadingRequest}\n                >\n                  Exit\n                </button>\n                <button\n                  className=\"btn bg-primary text-white hover:bg-blue-600\"\n                  type=\"button\"\n                  onClick={() => handleSubmit()}\n                  disabled={props.loadingRequest}\n                >\n                  {props.loadingRequest ? \"Loading...\" : \"Save\"}\n                </button>\n              </div>\n            </div>\n          </Modal>\n        )}\n      {/* end modal for creating new categories or sub category */}\n    </div>\n  );\n};\n\nexport default React.memo(\n  connect(null, {\n    FC_CreateProvince,\n    FC_UpdateProvince,\n    FC_DeleteProvince,\n    PushPopupAlert,\n  })(ViewProvince)\n);\n","import React, { useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { MdClear, MdCreate } from \"react-icons/md\";\nimport {\n  FC_CreateSector,\n  FC_DeleteSector,\n  FC_UpdateSector,\n} from \"../../actions/location\";\nimport axios from \"axios\";\nimport { API } from \"../../utils/api\";\nimport { DistrictInterface, SectorInterface } from \"../../shared/interfaces\";\nimport { PushPopupAlert } from \"../../actions/system\";\nimport { PopupAlertData } from \"../../components/Alert/Popup\";\nimport { PopupAlertTheme } from \"../../interfaces/popupAlert\";\nimport { errorToText } from \"../../utils/errors\";\nimport NoResult, { NoResultThemes } from \"../../components/NoResult/NoResult\";\nimport Modal, { ModalSize, Themes } from \"../../components/Modal/Modal\";\nimport { isEmptyOrSpaces } from \"../../shared/dataTest\";\n\ninterface AppProps {\n  thisDistrict: DistrictInterface;\n  thisSector: SectorInterface | null;\n  loadingRequest: boolean;\n  actionTypes:\n    | \"CREATE_PROVINCE\"\n    | \"UPDATE_PROVINCE\"\n    | \"CREATE_DISTRICT\"\n    | \"UPDATE_DISTRICT\"\n    | \"CREATE_SECTOR\"\n    | \"UPDATE_SECTOR\"\n    | null;\n  setLoadingRequest: React.Dispatch<React.SetStateAction<boolean>>;\n  setThisSector: React.Dispatch<React.SetStateAction<SectorInterface | null>>;\n  setActionTypes: React.Dispatch<\n    React.SetStateAction<\n      | \"CREATE_PROVINCE\"\n      | \"UPDATE_PROVINCE\"\n      | \"CREATE_DISTRICT\"\n      | \"UPDATE_DISTRICT\"\n      | \"CREATE_SECTOR\"\n      | \"UPDATE_SECTOR\"\n      | null\n    >\n  >;\n  FC_CreateSector: Function;\n  FC_UpdateSector: Function;\n  FC_DeleteSector: Function;\n  PushPopupAlert: (alert: PopupAlertData) => void;\n}\n\nconst ViewSectors: React.FC<AppProps> = (props) => {\n  const [sectorName, setSectorName] = useState<string>(\"\");\n  const [sectorCode, setSectorCode] = useState<number>(0);\n  const [error, setError] = useState<{ element: string; msg: string } | null>(\n    null\n  );\n\n  const handleSubmit = async () => {\n    if (isEmptyOrSpaces(sectorName)) {\n      return setError({\n        element: \"sector_name\",\n        msg: \"Sector name is required\",\n      });\n    }\n\n    if (sectorCode <= 0) {\n      return setError({\n        element: \"sector_code\",\n        msg: \"Invalid sector code, must be \",\n      });\n    }\n\n    props.setLoadingRequest(true);\n    try {\n      let res;\n      if (props.actionTypes === \"CREATE_SECTOR\") {\n        res = await axios.post<{ data: SectorInterface }>(\n          `${API.APPLICATION}/sector`,\n          {\n            district_id: props.thisDistrict._id,\n            district_code: props.thisDistrict.district_code,\n            sector_name: sectorName,\n            sector_code: sectorCode,\n          }\n        );\n        if (res.data) {\n          console.log({\n            district_id: props.thisDistrict._id,\n            data: res.data.data,\n            res,\n          });\n          props.FC_CreateSector({\n            province_id: props.thisDistrict.province_id,\n            district_id: props.thisDistrict._id,\n            data: {\n              district_id: res.data.data.district_id,\n              district_code: res.data.data.district_code,\n              sector_name: res.data.data.sector_name,\n              sector_code: res.data.data.sector_code,\n              sector_id: res.data.data.sector_id,\n            },\n          });\n          props.PushPopupAlert({\n            title: \"New sector created successfully\",\n            theme: PopupAlertTheme.success,\n          });\n          props.setLoadingRequest(false);\n          props.setActionTypes(null);\n          setSectorName(\"\");\n        }\n      } else if (props.thisSector && props.actionTypes === \"UPDATE_SECTOR\") {\n        res = await axios.patch<{ data: DistrictInterface }>(\n          `${API.APPLICATION}/sector`,\n          {\n            district_id: props.thisSector.district_id,\n            district_code: props.thisDistrict.district_code,\n            sector_id: props.thisSector.sector_id,\n            sector_name: sectorName,\n            sector_code: sectorCode,\n          }\n        );\n        if (res.data) {\n          props.FC_UpdateSector({\n            province_id: props.thisDistrict.province_id,\n            district_id: props.thisSector.district_id,\n            sector_id: props.thisSector.sector_id,\n            sector_name: sectorName,\n            sector_code: sectorCode,\n          });\n          props.PushPopupAlert({\n            title: \"Sector updated successfully\",\n            theme: PopupAlertTheme.success,\n          });\n          props.setLoadingRequest(false);\n          props.setActionTypes(null);\n          setSectorName(\"\");\n          props.setThisSector(null);\n        }\n      }\n    } catch (error) {\n      console.log({ sector_error: error });\n      props.PushPopupAlert({\n        title: errorToText(error),\n        theme: PopupAlertTheme.danger,\n      });\n      props.setLoadingRequest(false);\n    }\n  };\n\n  const handleDelete = async (sectorId: string) => {\n    try {\n      const res = await axios.delete<SectorInterface>(\n        `${API.APPLICATION}/sector/${sectorId}`\n      );\n\n      if (res.data) {\n        props.FC_DeleteSector({\n          province_id: props.thisDistrict.province_id,\n          district_id: props.thisDistrict._id,\n          sector_id: sectorId,\n        });\n        props.PushPopupAlert({\n          title: \"Sector deleted successfully\",\n          theme: PopupAlertTheme.success,\n        });\n        props.setLoadingRequest(false);\n        props.setActionTypes(null);\n      }\n    } catch (error) {\n      console.log({ district_error: error });\n      props.PushPopupAlert({\n        title: errorToText(error),\n        theme: PopupAlertTheme.danger,\n      });\n      props.setLoadingRequest(false);\n    }\n  };\n\n  return (\n    <div className={`w-full p-2`}>\n      {props.thisDistrict.sectors && props.thisDistrict.sectors.length > 0 ? (\n        <div className=\"rounded border border-gray-100 shadow-sm animate__animated animate__fadeIn\">\n          <table className=\"w-full z-0\">\n            <thead className=\"bg-gray-50\">\n              <tr className=\"text-left\">\n                <th className=\"px-3 py-3\">#</th>\n                <th>Sector name</th>\n                <th>Sector code</th>\n                <th>Status</th>\n              </tr>\n            </thead>\n            <tbody className=\"text-sm\">\n              {props.thisDistrict.sectors.map((sector, index) => (\n                <tr\n                  key={index + sector.district_id}\n                  className={`text-left border-b border-gray-50`}\n                >\n                  <td className=\"px-3 py-1\">{index + 1}</td>\n                  <td>{sector.sector_name}</td>\n                  <td>{sector.sector_name}</td>\n                  <td>\n                    <div className=\"flex items-center gap-2\">\n                      <button\n                        title=\"Update sector\"\n                        className=\"bg-blue-500 hover:bg-blue-600 p-2 rounded-full shadow-md flex justify-center items-center focus:outline-none\"\n                        onClick={() => {\n                          props.setThisSector(sector);\n                          setSectorName(sector.sector_name);\n                          setSectorCode(sector.sector_code);\n                          props.setActionTypes(\"UPDATE_SECTOR\");\n                        }}\n                        disabled={\n                          props.loadingRequest || props.actionTypes !== null\n                        }\n                      >\n                        <MdCreate className=\"text-white w-4 h-4\" />\n                      </button>\n                      <button\n                        title=\"Delete sector\"\n                        className=\"bg-red-500 hover:bg-red-600 p-2 rounded-full shadow-md flex justify-center items-center focus:outline-none\"\n                        onClick={() => handleDelete(sector.sector_id)}\n                        disabled={props.loadingRequest}\n                      >\n                        <MdClear className=\"text-white w-4 h-4\" />\n                      </button>\n                    </div>\n                  </td>\n                </tr>\n              ))}\n            </tbody>\n          </table>\n        </div>\n      ) : (\n        <NoResult\n          theme={NoResultThemes.Dark}\n          value={\"No sector found!\"}\n          component={\n            <div className=\"w-full mt-2 flex flex-row items-center justify-center\">\n              <ul className=\"text-sm py-2 text-blue-600 font-bold flex flex-row gap-2\">\n                <li\n                  onClick={() => props.setActionTypes(\"CREATE_SECTOR\")}\n                  className=\"underline text-gray-500 cursor-pointer\"\n                >\n                  Add sector\n                </li>\n              </ul>\n            </div>\n          }\n        />\n      )}\n\n      {/* modal for creating new categories or sub category */}\n      {props.actionTypes &&\n        (props.actionTypes === \"CREATE_SECTOR\" ||\n          props.actionTypes === \"UPDATE_SECTOR\") && (\n          <Modal\n            backDrop={true}\n            theme={Themes.default}\n            close={(): void => {\n              props.setActionTypes(null);\n              setSectorName(\"\");\n              setSectorCode(0);\n              setError(null);\n            }}\n            displayClose={false}\n            backDropClose={false}\n            title={\n              <div className=\"flex items-center space-x-5\">\n                <div className=\"block pl-2 font-semibold text-xl self-start text-gray-700\">\n                  {/* <p className=\"text-base text-gray-500 font-medium\">\n                    You are{\" \"}\n                    {actionType === \"CREATE_SUB\" || \"CREATE_CAT\"\n                      ? \"creating\"\n                      : \"updating\"}\n                  </p> */}\n                  <h2 className=\"uppercase text-back\">\n                    {props.actionTypes === \"CREATE_SECTOR\"\n                      ? \"CREATING NEW SECTOR\"\n                      : props.actionTypes === \"UPDATE_SECTOR\" &&\n                        \"UPDATING EXISTING SECTOR\"}\n                  </h2>\n                </div>\n              </div>\n            }\n            widthSizeClass={ModalSize.medium}\n            padding={{ title: true, body: false, footer: false }}\n          >\n            <div className=\"w-full px-5 mb-5\">\n              <div className=\"py-3 text-base leading-6 space-y-4 text-gray-700 sm:text-lg sm:leading-7\">\n                <div className=\"flex flex-col\">\n                  <label>Sector name</label>\n                  <input\n                    type=\"text\"\n                    className={`bg-white py-1 px-2 border-2 ${\n                      error && error.element === \"sector_name\"\n                        ? \"border-red-700\"\n                        : \"border-gray-700\"\n                    } rounded focus:outline-none focus:bg-gray-100`}\n                    onChange={(e) => {\n                      error &&\n                        error.element === \"sector_name\" &&\n                        setError(null);\n                      setSectorName(e.target.value);\n                    }}\n                    value={sectorName}\n                    disabled={props.loadingRequest}\n                  />\n                  {error && error.element === \"sector_name\" && (\n                    <span className=\"text-red-700\">{error.msg}</span>\n                  )}\n                </div>\n                <div className=\"flex flex-col\">\n                  <label>Sector code</label>\n                  <input\n                    type=\"number\"\n                    className={`bg-white py-1 px-2 border-2 ${\n                      error && error.element === \"sector_code\"\n                        ? \"border-red-700\"\n                        : \"border-gray-700\"\n                    } rounded focus:outline-none focus:bg-gray-100`}\n                    onChange={(e) => {\n                      error &&\n                        error.element === \"sector_code\" &&\n                        setError(null);\n                      setSectorCode(Number(e.target.value));\n                    }}\n                    value={sectorCode}\n                    disabled={props.loadingRequest}\n                  />\n                  {error && error.element === \"sector_code\" && (\n                    <span className=\"text-red-700\">{error.msg}</span>\n                  )}\n                </div>\n              </div>\n              <div className=\"pt-4 flex justify-between\">\n                <button\n                  onClick={() => {\n                    props.setActionTypes(null);\n                    setSectorName(\"\");\n                    setSectorCode(0);\n                    setError(null);\n                  }}\n                  className={`btn bg-gray-400 text-white hover:bg-gray-600`}\n                  type=\"button\"\n                  disabled={props.loadingRequest}\n                >\n                  Exit\n                </button>\n                <button\n                  className=\"btn bg-primary text-white hover:bg-blue-600\"\n                  type=\"button\"\n                  onClick={() => handleSubmit()}\n                  disabled={props.loadingRequest}\n                >\n                  {props.loadingRequest ? \"Loading...\" : \"Save\"}\n                </button>\n              </div>\n            </div>\n          </Modal>\n        )}\n      {/* end modal for creating new categories or sub category */}\n    </div>\n  );\n};\n\nexport default React.memo(\n  connect(null, {\n    FC_CreateSector,\n    FC_UpdateSector,\n    FC_DeleteSector,\n    PushPopupAlert,\n  })(ViewSectors)\n);\n","import React, { Fragment, useEffect, useState } from \"react\";\nimport { AiOutlineFilter } from \"react-icons/ai\";\nimport { BsCaretRightFill } from \"react-icons/bs\";\nimport { connect } from \"react-redux\";\nimport { getAllRoom } from \"../../actions/location\";\nimport { StoreState } from \"../../reducers\";\nimport {\n  DistrictInterface,\n  LocationRoomTableInterface,\n  RoomLocationInterface,\n  SectorInterface,\n} from \"../../shared/interfaces\";\nimport { LocationsInArray } from \"../UserManagement/UserList\";\nimport ViewDistricts from \"./ViewDistricts\";\nimport ViewProvince from \"./ViewProvince\";\nimport ViewSectors from \"./ViewSectors\";\n\nexport const distinctDistrict = (\n  rooms: RoomLocationInterface[],\n  province_id?: string\n): LocationRoomTableInterface[] => {\n  let ids: string[] = [],\n    result: LocationRoomTableInterface[] = [];\n\n  LocationsInArray(rooms).forEach((element) => {\n    if (!ids.includes(element.district_id)) {\n      if (province_id && element.province_id === province_id) {\n        ids.push(element.district_id);\n        result.push(element);\n      } else if (province_id === undefined) {\n        ids.push(element.district_id);\n        result.push(element);\n      }\n    }\n  });\n\n  return result;\n};\n\nexport const distinctCenter = (\n  rooms: RoomLocationInterface[],\n  district_id: string\n): LocationRoomTableInterface[] => {\n  let ids: string[] = [],\n    result: LocationRoomTableInterface[] = [];\n\n  LocationsInArray(rooms).forEach((element) => {\n    if (\n      !ids.includes(element.center_id) &&\n      element.district_id === district_id\n    ) {\n      ids.push(element.center_id);\n      result.push(element);\n    }\n  });\n  return result;\n};\n\nexport const distinctRoom = (\n  rooms: RoomLocationInterface[],\n  center_id: string\n): LocationRoomTableInterface[] => {\n  let ids: string[] = [],\n    result: LocationRoomTableInterface[] = [];\n\n  LocationsInArray(rooms).forEach((element) => {\n    if (!ids.includes(element.room_id) && element.center_id === center_id) {\n      ids.push(element.room_id);\n      result.push(element);\n    }\n  });\n  return result;\n};\n\ninterface AppProps {\n  locations: RoomLocationInterface[];\n  getAllRoom: Function;\n}\n\nconst _Locations: React.FC<AppProps> = (props) => {\n  const [actionTypes, setActionTypes] = useState<\n    | \"CREATE_PROVINCE\"\n    | \"UPDATE_PROVINCE\"\n    | \"CREATE_DISTRICT\"\n    | \"UPDATE_DISTRICT\"\n    | \"CREATE_SECTOR\"\n    | \"UPDATE_SECTOR\"\n    | null\n  >(null);\n  const [thisProvince, setThisProvince] =\n    useState<RoomLocationInterface | null>(null);\n  const [thisDistrict, setThisDistrict] = useState<DistrictInterface | null>(\n    null\n  );\n  const [thisSector, setThisSector] = useState<SectorInterface | null>(null);\n  const [loading, setLoading] = useState<boolean>(true);\n  const [loadingRequest, setLoadingRequest] = useState<boolean>(false);\n\n  useEffect(() => {\n    if (!props.locations.length && loading) {\n      props.getAllRoom((status: boolean, msg: string) => {\n        setLoading(status);\n        if (!status && msg.length > 0) {\n          console.log(msg);\n        }\n      });\n    } else if (loading) {\n      setLoading(false);\n    }\n  }, [loading, props]);\n\n  if (loading === true) {\n    return (\n      <div className=\"text-center mt-7 font-bold text-4xl text-gray-400 animate-pulse\">\n        Loading locations...\n      </div>\n    );\n  }\n\n  const displayTitle = () => {\n    if (\n      (!thisSector ||\n        (thisSector &&\n          (actionTypes === \"CREATE_SECTOR\" ||\n            actionTypes === \"UPDATE_SECTOR\"))) &&\n      thisDistrict &&\n      actionTypes !== \"CREATE_DISTRICT\" &&\n      actionTypes !== \"UPDATE_DISTRICT\"\n    ) {\n      return (\n        <div className=\"flex items-center gap-1\">\n          <span\n            className=\"cursor-pointer uppercase text-xl font-semibold text-gray-800\"\n            onClick={() => {\n              setThisProvince(null);\n            }}\n          >\n            province\n          </span>\n          <span>/</span>\n          <span\n            className=\"cursor-pointer uppercase text-xl font-semibold text-gray-800\"\n            onClick={() => {\n              setThisDistrict(null);\n            }}\n          >\n            district\n          </span>\n          <span>/</span>\n          <span className=\"text-xl text-gray-800\">\n            {thisDistrict.district_name}\n          </span>\n        </div>\n      );\n    } else if (\n      (!thisDistrict ||\n        (thisDistrict &&\n          (actionTypes === \"CREATE_DISTRICT\" ||\n            actionTypes === \"UPDATE_DISTRICT\"))) &&\n      thisProvince\n    ) {\n      return (\n        <div className=\"flex items-center gap-2\">\n          <span\n            className=\"cursor-pointer uppercase text-xl font-semibold text-gray-800\"\n            onClick={() => {\n              setThisProvince(null);\n            }}\n          >\n            province\n          </span>\n          <span>/</span>\n          <span className=\"text-xl text-gray-800\">\n            {thisProvince.province_name}\n          </span>\n        </div>\n      );\n    }\n\n    return (\n      <div className=\"flex items-center gap-1\">\n        <span className=\"uppercase text-xl font-semibold text-gray-800\">\n          province\n        </span>\n        <span>/</span>\n      </div>\n    );\n  };\n\n  return (\n    <Fragment>\n      <div className=\"w-full my-5\">\n        {/* header title */}\n        <div className=\"flex justify-between p-2 gap-1\">\n          <div className=\"flex flex-col\">\n            <span className=\"text-blue-600 text-2xl md:text-2xl lg:text-3xl font-bold\">\n              Locations Management\n            </span>\n\n            <div className=\"flex flex-row items-center md:gap-3 gap-2 mt-1\">\n              <AiOutlineFilter className=\"text-xl\" />\n              <div className=\"flex flex-row items-center gap-1\">\n                {thisProvince && (\n                  <span className=\"text-gray-700 text-base font-bold\">\n                    {thisProvince.province_name}\n                  </span>\n                )}\n                {thisDistrict && (\n                  <div className=\"flex flex-row items-center gap-1\">\n                    <BsCaretRightFill />\n                    <span className=\"text-blue-600 text-base font-bold underline\">\n                      {thisDistrict.district_name} district\n                    </span>\n                  </div>\n                )}\n              </div>\n            </div>\n          </div>\n        </div>\n        {/* end header title */}\n\n        <div className=\"w-full bg-white\">\n          <div className=\"border-b px-2 py-3 flex justify-between\">\n            {displayTitle()}\n\n            {/* CREATE NEW PROVINCE =====================================*/}\n            {/* {(!thisProvince ||\n              (thisProvince &&\n                (actionTypes === \"CREATE_PROVINCE\" ||\n                  actionTypes === \"UPDATE_PROVINCE\"))) && (\n              <button\n                type=\"button\"\n                className={`btn hover:bg-blue-500 mb-1 border-2 border-blue-500 bg-white\n        hover:text-white rounded-md flex items-center font-bold text-gray-700 focus:outline-none gap-1 ${\n          loadingRequest && \"cursor-wait\"\n        } ${actionTypes !== null && \"cursor-not-allowed\"}`}\n                onClick={() => setActionTypes(\"CREATE_PROVINCE\")}\n                disabled={actionTypes !== null || loadingRequest}\n              >\n                <MdAdd className=\"inline-block mr-1 text-xl font-bold\" />\n                New Province\n              </button>\n            )} */}\n            {/* CREATE NEW DISTRICT =====================================*/}\n            {/* {(!thisDistrict ||\n              (thisDistrict &&\n                (actionTypes === \"CREATE_DISTRICT\" ||\n                  actionTypes === \"UPDATE_DISTRICT\"))) &&\n              thisProvince && (\n                <button\n                  type=\"button\"\n                  className={`btn hover:bg-blue-500 mb-1 border-2 border-blue-500 bg-white\n        hover:text-white rounded-md flex items-center font-bold text-gray-700 focus:outline-none gap-1 ${\n          loadingRequest && \"cursor-wait\"\n        } ${actionTypes !== null && \"cursor-not-allowed\"}`}\n                  onClick={() => setActionTypes(\"CREATE_DISTRICT\")}\n                  disabled={actionTypes !== null || loadingRequest}\n                >\n                  <MdAdd className=\"inline-block mr-1 text-xl font-bold\" />\n                  New District\n                </button>\n              )} */}\n\n            {/* CREATE NEW SECTOR =====================================*/}\n            {/* {(!thisSector ||\n              (thisSector &&\n                (actionTypes === \"CREATE_SECTOR\" ||\n                  actionTypes === \"UPDATE_SECTOR\"))) &&\n              thisDistrict &&\n              actionTypes !== \"CREATE_DISTRICT\" &&\n              actionTypes !== \"UPDATE_DISTRICT\" && (\n                <button\n                  type=\"button\"\n                  className={`btn hover:bg-blue-500 mb-1 border-2 border-blue-500 bg-white\n        hover:text-white rounded-md flex items-center font-bold text-gray-700 focus:outline-none gap-1 ${\n          loadingRequest && \"cursor-wait\"\n        } ${actionTypes !== null && \"cursor-not-allowed\"}`}\n                  onClick={() => setActionTypes(\"CREATE_SECTOR\")}\n                  disabled={actionTypes !== null || loadingRequest}\n                >\n                  <MdAdd className=\"inline-block mr-1 text-xl font-bold\" />\n                  New Sector\n                </button>\n              )} */}\n          </div>\n\n          {(!thisProvince ||\n            (thisProvince &&\n              (actionTypes === \"CREATE_PROVINCE\" ||\n                actionTypes === \"UPDATE_PROVINCE\"))) && (\n            <ViewProvince\n              thisProvince={thisProvince}\n              thisDistrict={thisDistrict}\n              loadingRequest={loadingRequest}\n              locations={props.locations}\n              actionTypes={actionTypes}\n              setLoadingRequest={setLoadingRequest}\n              setThisProvince={setThisProvince}\n              setActionTypes={setActionTypes}\n            />\n          )}\n\n          {(!thisDistrict ||\n            (thisDistrict &&\n              (actionTypes === \"CREATE_DISTRICT\" ||\n                actionTypes === \"UPDATE_DISTRICT\"))) &&\n            thisProvince && (\n              <ViewDistricts\n                thisDistrict={thisDistrict}\n                loadingRequest={loadingRequest}\n                actionTypes={actionTypes}\n                setLoadingRequest={setLoadingRequest}\n                setActionTypes={setActionTypes}\n                thisProvince={thisProvince}\n                setThisDistrict={setThisDistrict}\n              />\n            )}\n\n          {(!thisSector ||\n            (thisSector &&\n              (actionTypes === \"CREATE_SECTOR\" ||\n                actionTypes === \"UPDATE_SECTOR\"))) &&\n            thisDistrict &&\n            actionTypes !== \"CREATE_DISTRICT\" &&\n            actionTypes !== \"UPDATE_DISTRICT\" && (\n              <ViewSectors\n                thisDistrict={thisDistrict}\n                thisSector={thisSector}\n                loadingRequest={loadingRequest}\n                actionTypes={actionTypes}\n                setLoadingRequest={setLoadingRequest}\n                setThisSector={setThisSector}\n                setActionTypes={setActionTypes}\n              />\n            )}\n        </div>\n      </div>\n    </Fragment>\n  );\n};\n\nconst mapStateToProps = ({\n  locations,\n}: StoreState): {\n  locations: RoomLocationInterface[];\n} => {\n  return { locations: locations.roomLocation };\n};\n\nexport const Locations = React.memo(\n  connect(mapStateToProps, {\n    getAllRoom,\n  })(_Locations)\n);\n","import React, { Fragment, useState } from \"react\";\nimport { AiFillDashboard } from \"react-icons/ai\";\nimport { MdBrightness1 } from \"react-icons/md\";\nimport { SessionPlanInterface } from \"../../../interfaces\";\nimport { education_category } from \"../../../interfaces/education_category\";\nimport { reportTitleType } from \"../../Admin/ExamReport/ExamReport\";\nimport ExamReportModals, {\n  ModalForTypes,\n} from \"../../Admin/ExamReport/ExamReportModals\";\n\ntype ExamReportTitleProps = {\n  // FOR SETTINGS ==============================\n  loading: boolean;\n\n  // FOR REPORT TYPE =========================\n  reportTitle: reportTitleType;\n  setReportTitle: (title: reportTitleType) => void;\n\n  //   FOR EDUCATION CATEGORY & PERIOD =====================\n  education_categories: education_category[] | null;\n  loadingEducation: boolean;\n  thisEducation: education_category | null;\n  setThisEducation: (value: education_category | null) => void;\n\n  //   FOR APPLICATION SESSION ============================\n  thisPeriod: string;\n  setThisPeriod: (value: string) => void;\n  application_sessions: SessionPlanInterface[];\n  onPeriodChange?: (period_id: string) => void;\n};\n\nconst ExamDashboardTitle: React.FC<ExamReportTitleProps> = (props) => {\n  const [changeReport, setChangeReport] = useState<boolean>(false);\n\n  return (\n    <Fragment>\n      <div className=\"mt-3 rounded flex flex-col md:flex-row md:justify-between items-start\">\n        <div className=\"flex flex-row items-center gap-3 mb-2\">\n          <AiFillDashboard className=\"text-7xl text-blue-600 hidden md:block\" />\n          <div className=\"flex flex-col\">\n            <span className=\"text-blue-600 text-3xl font-bold\">\n              Exam Dashboard\n            </span>\n            {false && (\n              <div\n                onClick={() => setChangeReport(true)}\n                className=\"flex flex-row gap-2\"\n              >\n                <span className=\"text-gray-500\">Report type: </span>\n                <span className=\"text-gray-600 font-bold underline cursor-pointer\">\n                  {props.reportTitle}\n                </span>\n              </div>\n            )}\n          </div>\n        </div>\n\n        {/* FILTER SECTION PERIOD && EDUCATION */}\n        <section className=\"w-full md:w-auto my-2 md:my-0\">\n          {/* EDUCATION CATEGORY sections */}\n          <section className=\"flex items-start md:items-center justify-start md:justify-end gap-2\">\n            {props.education_categories &&\n              props.education_categories.length > 0 &&\n              props.education_categories.map((education, index) => (\n                <section\n                  key={education.education_institute_id + index}\n                  className={`w-auto ${\n                    props.loading || props.loadingEducation\n                      ? \"cursor-not-allowed\"\n                      : \"cursor-pointer\"\n                  } ${\n                    props.thisEducation &&\n                    education.education_institute_id ===\n                      props.thisEducation.education_institute_id\n                      ? \"bg-blue-500 text-white font-bold\"\n                      : \"bg-gray-100 text-blue-800\"\n                  } mb-1 hover:font-bold py-1 hover:bg-blue-400 hover:text-white --font-bold  px-2 rounded-md flex items-center animate__animated animate__zoomIn`}\n                  onClick={() =>\n                    !props.loading &&\n                    !props.loadingEducation &&\n                    props.setThisEducation(education)\n                  }\n                >\n                  <section className=\"flex-1\">\n                    <MdBrightness1 className=\"inline-block mr-1 text-xs\" />\n                    <span>{education.education_category_title}</span>\n                  </section>\n\n                  {/* {count > 0 ? ( */}\n                  {/* <span className=\"px-0.5 my-1 text-xs bg-blue-600 text-white rounded-full\">\n              12\n            </span> */}\n                  {/* ) : null} */}\n                </section>\n              ))}\n          </section>\n          {/* end EDUCATION CATEGORY sections */}\n          <div>\n            <select\n              className={`bg-white text-gray-600 border border-gray-400 rounded p-2 focus:outline-none ${\n                props.loading && \"cursor-wait\"\n              }`}\n              value={props.thisPeriod}\n              disabled={props.loading || props.loadingEducation}\n              onChange={(e) => {\n                props.setThisPeriod(e.target.value);\n                props.onPeriodChange && props.onPeriodChange(e.target.value);\n                // props.setLoadingApplications(true);\n                // props.GetApplicationPerPeriod(\n                //   e.target.value,\n                //   (status: boolean, msg: string) => {\n                //     props.setLoadingApplications(status);\n                //     if (!status && msg.length > 0) {\n                //       props.PushPopupAlert({\n                //         title: errorToText(msg),\n                //         theme: PopupAlertTheme.danger,\n                //       });\n                //     }\n                //   }\n                // );\n              }}\n            >\n              {props.application_sessions.map((session, item) => (\n                <option\n                  key={session.session_plan_id + item}\n                  value={session.session_plan_id}\n                >\n                  {session.session_plan_name}\n                </option>\n              ))}\n            </select>\n          </div>\n        </section>\n        {/* END FILTER SECTION PERIOD && EDUCATION */}\n      </div>\n      {/* CHANGE REPORT TYPE MODAL CONTROLLERS ============================================ */}\n      {changeReport && (\n        <ExamReportModals\n          modalFor={ModalForTypes.title}\n          modalState={changeReport}\n          reportTitle={props.reportTitle}\n          changeModalState={setChangeReport}\n          setReportTitle={props.setReportTitle}\n        />\n      )}\n      {/* END CHANGE REPORT TYPE MODAL CONTROLLERS ============================================ */}\n    </Fragment>\n  );\n};\n\nexport default React.memo(ExamDashboardTitle);\n","import React, { Component } from \"react\";\nimport { examPreparationStateInterface } from \"../../Admin/ExamReport/ExamList\";\nimport VBarChart from \"../ChartComponents/VBarChart\";\n\ntype ExamPreparationChartProps = {\n  examPreparationProgress: {\n    all: examPreparationStateInterface[];\n    finished: examPreparationStateInterface[];\n    remaining: examPreparationStateInterface[];\n  };\n};\n\nclass ExamPreparationChart extends Component<ExamPreparationChartProps> {\n  render() {\n    return (\n      <div className=\"my-3 max-w-full bg-white\">\n        <div className=\"flex items-center justify-between px-3\">\n          <span className=\"text-gray-600 font-semibold text-xl py-4 px-0\">\n            Exams preparation chart\n          </span>\n        </div>\n\n        <div className=\"mb-4 pb-2 px-3\">\n          <VBarChart\n            labels={[\"Remaining exams\", \"Prepared exams\"]}\n            categoriesLabel={[\"Exam preparation progress\"]}\n            dataLabels={true}\n            yaxisText=\"Exam preparation progress\"\n            tooltipText=\"(Exams)\"\n            series={[\n              {\n                name: \"Remaining exams\",\n                data: [this.props.examPreparationProgress.remaining.length],\n              },\n              {\n                name: \"Prepared exams\",\n                data: [this.props.examPreparationProgress.finished.length],\n              },\n            ]}\n            colors={[\"#4b5563\", \"#469769\"]}\n            defaultBar={{\n              borderRadius: 4,\n              horizontal: false,\n              columnWidth: \"95%\",\n              endingShape: \"rounded\",\n            }}\n            chartHeight={550}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default React.memo(ExamPreparationChart);\n","import React, { Component } from \"react\";\nimport { examProgressStateInterface } from \"../../Admin/ExamReport/DoneExamList\";\nimport VBarChart from \"../ChartComponents/VBarChart\";\n\ntype ExamProgressChartProps = {\n  progressData: {\n    all: examProgressStateInterface[];\n    finished: examProgressStateInterface[];\n    remaining: examProgressStateInterface[];\n  };\n};\n\nclass ExamProgressChart extends Component<ExamProgressChartProps> {\n  render() {\n    return (\n      <div className=\"my-3 max-w-full bg-white\">\n        <div className=\"flex items-center justify-between px-3\">\n          <span className=\"text-gray-600 font-semibold text-xl py-4 px-0\">\n            Examination progress chart\n          </span>\n        </div>\n\n        <div className=\"mb-4 pb-2 px-3\">\n          <VBarChart\n            labels={[\"Remaining exams\", \"Prepared exams\"]}\n            categoriesLabel={[\"Examinations progress\"]}\n            dataLabels={true}\n            yaxisText=\"Examination progress\"\n            tooltipText=\"(Exams)\"\n            series={[\n              {\n                name: \"Remaining exams\",\n                data: [this.props.progressData.remaining.length],\n              },\n              {\n                name: \"Done exams\",\n                data: [this.props.progressData.finished.length],\n              },\n            ]}\n            colors={[\"#4b5563\", \"#469769\"]}\n            defaultBar={{\n              borderRadius: 4,\n              horizontal: false,\n              columnWidth: \"95%\",\n              endingShape: \"rounded\",\n            }}\n            chartHeight={550}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default React.memo(ExamProgressChart);\n","import React, { Component } from \"react\";\nimport { candidatePerfomranceStateInterface } from \"../../Admin/ExamReport/CandidatePerformance\";\nimport VBarChart from \"../ChartComponents/VBarChart\";\n\ntype ExamPerformanceChartProps = {\n  examPerformance: {\n    all: candidatePerfomranceStateInterface[];\n    pass: candidatePerfomranceStateInterface[];\n    failed: candidatePerfomranceStateInterface[];\n    active: candidatePerfomranceStateInterface[];\n  };\n};\n\nclass ExamPerformanceChart extends Component<ExamPerformanceChartProps> {\n  render() {\n    return (\n      <div className=\"my-3 max-w-full bg-white\">\n        <div className=\"flex items-center justify-between px-3\">\n          <span className=\"text-gray-600 font-semibold text-xl py-4 px-0\">\n            Examination performance chart\n          </span>\n        </div>\n\n        <div className=\"mb-4 pb-2 px-3\">\n          <VBarChart\n            labels={[\"Pass applicant(s)\", \"Failed applicant(s)\"]}\n            categoriesLabel={[\"Exam preparation progress\"]}\n            dataLabels={true}\n            yaxisText=\"Exam performance\"\n            tooltipText=\"(Applicants)\"\n            series={[\n              {\n                name: \"Pass applicant(s)\",\n                data: [this.props.examPerformance.pass.length],\n              },\n              {\n                name: \"Failed applicant(s)\",\n                data: [this.props.examPerformance.failed.length],\n              },\n            ]}\n            colors={[\"#469769\", \"#d97724\"]}\n            defaultBar={{\n              borderRadius: 4,\n              horizontal: false,\n              columnWidth: \"95%\",\n              endingShape: \"rounded\",\n            }}\n            chartHeight={550}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default React.memo(ExamPerformanceChart);\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport {\n  Auth,\n  schoolLevelsStoreInterface,\n  loadCourses,\n  loadExamsList,\n  loadEducationCategories,\n  loadDoneExam,\n  loadSchoolLevels,\n  loadPerfomranceExam,\n  loadCandidatesExamPerformance,\n  PushPopupAlert,\n  FilterParamType,\n} from \"../../../actions\";\nimport { StoreState } from \"../../../reducers\";\nimport { GetAllSessionPlans } from \"../../../actions/session\";\nimport {\n  SessionPlanInterface,\n  course,\n  education_category,\n  ExamDoneAndRemainingByPeriodInterface,\n  school_level,\n} from \"../../../interfaces\";\nimport { ExamItemResponse } from \"../../../interfaces/prepare_exam\";\nimport { ExamReportReducerType } from \"../../../reducers/exam_report\";\nimport moment from \"moment\";\nimport { PopupAlertData } from \"../../../components/Alert/Popup\";\nimport {\n  candidatePerfomranceStateInterface,\n  FC_reportCandidatePerformanceData,\n  FC_reportCandidatePerformanceDataFilter,\n} from \"../../Admin/ExamReport/CandidatePerformance\";\nimport {\n  examProgressStateInterface,\n  FC_reportDoneExamList,\n} from \"../../Admin/ExamReport/DoneExamList\";\nimport {\n  examPreparationStateInterface,\n  FC_reportExamList,\n} from \"../../Admin/ExamReport/ExamList\";\nimport { reportTitleType } from \"../../Admin/ExamReport/ExamReport\";\nimport { PopupAlertTheme } from \"../../../interfaces/popupAlert\";\nimport NoSession from \"../../SessionSettings/NoSession\";\nimport ExamDashboardTitle from \"./ExamDashboardTitle\";\nimport ExamDashboardLabels from \"./ExamDashboardLabels\";\nimport { FaBookOpen } from \"react-icons/fa\";\nimport PieChart from \"../ChartComponents/PieChart\";\nimport ExamPreparationChart from \"./ExamPreparationChart\";\nimport ExamProgressChart from \"./ExamProgressChart\";\nimport ExamPerformanceChart from \"./ExamPerformanceChart\";\n\nexport const getLevelbyId = (\n  school_levels: school_level[] | null,\n  level_id: string\n): school_level | undefined => {\n  if (school_levels) {\n    return school_levels.find((item) => item.school_level_id === level_id);\n  }\n};\n\nexport const loadCoursesByInstitute = (\n  thisEducation: education_category | null,\n  courseList: course[] | null,\n  school_levels: school_level[] | null\n): course[] | null => {\n  let result: course[] | null = [],\n    defaultValue: boolean = false;\n  if (courseList && thisEducation) {\n    for (const key in courseList) {\n      if (Object.prototype.hasOwnProperty.call(courseList, key)) {\n        if (courseList[key].school_levels.length > 0) {\n          courseList[key].school_levels.forEach((level) => {\n            let levelDetail = getLevelbyId(school_levels, level);\n            if (\n              levelDetail &&\n              (levelDetail.education_institute.includes(\n                thisEducation.education_institute_id\n              ) ||\n                levelDetail.education_institute.length <= 0)\n            ) {\n              result && result.push(courseList![key]);\n            }\n          });\n        } else {\n          result && result.push(courseList![key]);\n        }\n      }\n    }\n  }\n  // RETURN DEFAULT VALUES ====================\n  else {\n    defaultValue = true;\n  }\n  return defaultValue ? courseList : result;\n};\n\nexport const loadExaminationProgress = (\n  DoneExamList: ExamDoneAndRemainingByPeriodInterface[] | null,\n  examsList: ExamItemResponse[] | null,\n  thisEducation: education_category | null,\n  courseList: course[] | null,\n  school_levels: school_level[] | null,\n  period: string\n): {\n  all: examProgressStateInterface[];\n  finished: examProgressStateInterface[];\n  remaining: examProgressStateInterface[];\n} | null => {\n  let allData: examProgressStateInterface[] = [],\n    completeExams: examProgressStateInterface[] = [],\n    remainingExams: examProgressStateInterface[] = [],\n    dataFound: boolean = false;\n  if (\n    DoneExamList &&\n    loadCoursesByInstitute(thisEducation, courseList, school_levels) &&\n    examsList\n  ) {\n    dataFound = true;\n    allData = FC_reportDoneExamList(\n      loadCoursesByInstitute(thisEducation, courseList, school_levels)!,\n      examsList,\n      DoneExamList\n    ).filter((item) => item.exam && item.exam.period === period);\n    completeExams = allData.filter(\n      (item) => item.preparation_status.toLocaleLowerCase() === \"done\"\n    );\n    remainingExams = allData.filter(\n      (item) => item.preparation_status.toLocaleLowerCase() === \"active\"\n    );\n  }\n  console.log(\"====================================\");\n  console.log({ loadExaminationProgress: DoneExamList });\n  console.log(\"====================================\");\n  return dataFound\n    ? { all: allData, finished: completeExams, remaining: remainingExams }\n    : null;\n};\n\nexport const loadExamPreparationProgress = (\n  dataList: examPreparationStateInterface[]\n): {\n  all: examPreparationStateInterface[];\n  finished: examPreparationStateInterface[];\n  remaining: examPreparationStateInterface[];\n} => {\n  let allData: examPreparationStateInterface[] = dataList,\n    preparedExams: examPreparationStateInterface[] = dataList.filter(\n      (item) => item.preparation_status === \"prepared\"\n    ),\n    remainingExams: examPreparationStateInterface[] = dataList.filter(\n      (item) => item.preparation_status === \"not prepared\"\n    );\n  return { all: allData, finished: preparedExams, remaining: remainingExams };\n};\n\nexport const isDatePast = (dateParam: string): boolean => {\n  const date = moment().format(\"DD-MM-YYYY\");\n  const todayDate = moment(date, \"DD-MM-YYYY\");\n  const pastDate = moment(dateParam, \"DD-MM-YYYY\");\n\n  const dDiff = todayDate.diff(pastDate);\n\n  if (dDiff > 0) {\n    return false;\n  } else {\n    return true;\n  }\n};\n\nexport const loadExamAttendance = (\n  applicantList: candidatePerfomranceStateInterface[],\n  period: string\n): {\n  all: candidatePerfomranceStateInterface[];\n  pass: candidatePerfomranceStateInterface[];\n  failed: candidatePerfomranceStateInterface[];\n  active: candidatePerfomranceStateInterface[];\n} => {\n  return {\n    all: applicantList.filter((item) => item.exam.period === period),\n    pass: applicantList.filter(\n      (item) =>\n        item.exam.period === period &&\n        (item.exam_stastus !== \"Editing\" || isDatePast(item.exam.exam_date)) &&\n        item.user_total_marks >= 50\n    ),\n    failed: applicantList.filter(\n      (item) =>\n        item.exam.period === period &&\n        (item.exam_stastus !== \"Editing\" || isDatePast(item.exam.exam_date)) &&\n        item.user_total_marks < 50\n    ),\n    active: applicantList.filter(\n      (item) =>\n        item.exam.period === period &&\n        item.exam_stastus === \"Editing\" &&\n        !isDatePast(item.exam.exam_date)\n    ),\n  };\n};\n\ninterface ExamDashboardProps {\n  auth: Auth;\n  application_sessions: SessionPlanInterface[] | null;\n  schoolLevels: schoolLevelsStoreInterface;\n  courses: course[] | null;\n  examsList: ExamItemResponse[] | null;\n  adminExamReport: ExamReportReducerType;\n  GetAllSessionPlans: Function;\n  loadEducationCategories: (callback: (loading: boolean) => void) => void;\n  loadCourses: (callback: (loading: boolean) => void) => void;\n  loadExamsList: (callback: (loading: boolean) => void) => void;\n  loadDoneExam: (period_id: string, callback: Function) => void;\n  loadPerfomranceExam: (period_id: string, callback: Function) => void;\n  loadSchoolLevels: (callback: (loading: boolean) => void) => void;\n  loadCandidatesExamPerformance: (\n    dataBody: FilterParamType | null,\n    callback: Function\n  ) => void;\n  PushPopupAlert: (alert: PopupAlertData) => void;\n}\n\ninterface ExamDashboardStates {\n  loading: boolean;\n  loadingCourses: boolean;\n  loadingExams: boolean;\n  loadingDoneExam: boolean;\n  loadingCandidatesExamPerformance: boolean;\n  loadingExamPerformance: boolean;\n  loadingSettings: boolean;\n  changingPeriod: boolean;\n  reportTitle: reportTitleType;\n  thisEducation: education_category | null;\n  thisPeriod: string;\n}\n\nclass _ExamDashboard extends Component<\n  ExamDashboardProps,\n  ExamDashboardStates\n> {\n  constructor(props: ExamDashboardProps) {\n    super(props);\n\n    this.state = {\n      loading: true,\n      loadingCourses: true,\n      loadingExams: true,\n      loadingDoneExam: true,\n      loadingCandidatesExamPerformance: true,\n      loadingExamPerformance: true,\n      loadingSettings: true,\n      changingPeriod: false,\n      reportTitle: reportTitleType.EXAM_PREPARATION,\n      thisEducation: null,\n      thisPeriod: \"\",\n    };\n  }\n\n  setLoading = (value: boolean) => {\n    this.setState({ loading: value });\n  };\n\n  setLoadingCourses = (value: boolean) => {\n    this.setState({ loadingCourses: value });\n  };\n\n  setLoadingExams = (value: boolean) => {\n    this.setState({ loadingExams: value });\n  };\n\n  setLoadingDoneExam = (value: boolean) => {\n    this.setState({ loadingDoneExam: value });\n  };\n\n  setLoadingCandidatesExamPerformance = (value: boolean) => {\n    this.setState({ loadingCandidatesExamPerformance: value });\n  };\n\n  setLoadingExamPerformance = (value: boolean) => {\n    this.setState({ loadingExamPerformance: value });\n  };\n\n  setLoadingSettings = (value: boolean) => {\n    this.setState({ loadingSettings: value });\n  };\n\n  setChangingPeriod = (value: boolean) => {\n    this.setState({ changingPeriod: value });\n  };\n\n  setReportTitle = (value: reportTitleType) => {\n    this.setState({ reportTitle: value });\n  };\n\n  setThisEducation = (value: education_category | null) => {\n    this.setState({ thisEducation: value });\n  };\n\n  setThisPeriod = (value: string) => {\n    this.setState({ thisPeriod: value });\n  };\n\n  loadByPeriods = (session: SessionPlanInterface) => {\n    this.props.loadDoneExam(\n      session.session_plan_id,\n      (status: boolean, msg: string) => {\n        if (!status) {\n          if (msg.length > 0) {\n            this.props.PushPopupAlert({\n              title: msg,\n              theme: PopupAlertTheme.danger,\n            });\n          }\n          this.setLoadingDoneExam(false);\n        }\n      }\n    );\n\n    // --------------------------------------------\n    this.props.loadPerfomranceExam(\n      session.session_plan_id,\n      (status: boolean, msg: string) => {\n        if (!status) {\n          if (msg.length > 0) {\n            this.props.PushPopupAlert({\n              title: msg,\n              theme: PopupAlertTheme.danger,\n            });\n          }\n          this.setLoadingExamPerformance(false);\n        }\n      }\n    );\n  };\n\n  componentDidMount = () => {\n    if (\n      this.props.schoolLevels.education_categories === null ||\n      this.props.schoolLevels.education_categories.length === 0\n    ) {\n      this.props.loadEducationCategories(this.setLoadingSettings);\n    } else if (\n      this.props.schoolLevels.education_categories.length > 0 &&\n      !this.state.thisEducation\n    ) {\n      this.setThisEducation(this.props.schoolLevels.education_categories[0]);\n      this.setLoadingSettings(false);\n    }\n\n    if (this.props.application_sessions === null) {\n      this.props.GetAllSessionPlans(\n        (status: boolean, msg: string, sessions?: SessionPlanInterface[]) => {\n          this.setLoadingSettings(status);\n          this.setLoading(status);\n          if (!status && msg.length) {\n            this.props.PushPopupAlert({\n              title: msg,\n              theme: PopupAlertTheme.danger,\n            });\n          }\n          if (!status && sessions && sessions.length > 0) {\n            let active_period: SessionPlanInterface | undefined;\n            active_period = sessions.find((item) => item.is_active);\n            if (active_period) {\n              this.setThisPeriod(active_period.session_plan_id);\n            } else {\n              this.setThisPeriod(sessions[sessions.length - 1].session_plan_id);\n            }\n          }\n        }\n      );\n    } else if (\n      this.props.application_sessions.length > 0 &&\n      !this.state.thisPeriod.length\n    ) {\n      let active_period: SessionPlanInterface | undefined;\n      active_period = this.props.application_sessions.find(\n        (item) => item.is_active\n      );\n      if (active_period) {\n        this.setThisPeriod(active_period.session_plan_id);\n        this.loadByPeriods(active_period);\n      } else {\n        this.setThisPeriod(\n          this.props.application_sessions[\n            this.props.application_sessions.length - 1\n          ].session_plan_id\n        );\n        this.loadByPeriods(\n          this.props.application_sessions[\n            this.props.application_sessions.length - 1\n          ]\n        );\n      }\n      this.setLoadingSettings(false);\n      this.setLoading(false);\n    }\n\n    if (\n      this.props.schoolLevels.school_levels === null ||\n      this.props.schoolLevels.school_levels.length <= 0\n    ) {\n      this.props.loadSchoolLevels(this.setLoadingSettings);\n    } else {\n      this.setLoadingSettings(false);\n    }\n\n    // if (this.state.thisPeriod.length > 0 && this.state.loadingDoneExam) {\n    //   this.props.loadDoneExam(\n    //     this.state.thisPeriod,\n    //     (status: boolean, msg: string) => {\n    //       if (!status) {\n    //         if (msg.length > 0) {\n    //           this.props.PushPopupAlert({\n    //             title: msg,\n    //             theme: PopupAlertTheme.danger,\n    //           });\n    //         }\n    //         this.setLoadingDoneExam(false);\n    //       }\n    //     }\n    //   );\n    // }\n    // if (this.state.thisPeriod.length > 0 && this.state.loadingExamPerformance) {\n    //   this.props.loadPerfomranceExam(\n    //     this.state.thisPeriod,\n    //     (status: boolean, msg: string) => {\n    //       if (!status) {\n    //         if (msg.length > 0) {\n    //           this.props.PushPopupAlert({\n    //             title: msg,\n    //             theme: PopupAlertTheme.danger,\n    //           });\n    //         }\n    //         this.setLoadingExamPerformance(false);\n    //       }\n    //     }\n    //   );\n    // }\n\n    if (\n      this.props.adminExamReport.CandidatesExamPerformance === null ||\n      (this.props.adminExamReport.CandidatesExamPerformance.length === 0 &&\n        this.state.loadingCandidatesExamPerformance)\n    ) {\n      this.props.loadCandidatesExamPerformance(\n        null,\n        (status: boolean, msg: string) => {\n          if (!status) {\n            if (msg.length > 0) {\n              this.props.PushPopupAlert({\n                title: msg,\n                theme: PopupAlertTheme.danger,\n              });\n            }\n            this.setLoadingCandidatesExamPerformance(false);\n          }\n        }\n      );\n    }\n  };\n\n  onPeriodChange = (period_id: string) => {\n    this.setLoadingDoneExam(true);\n    this.setLoadingExamPerformance(true);\n    this.setChangingPeriod(true);\n    this.props.loadDoneExam(period_id, (status: boolean, msg: string) => {\n      if (!status) {\n        let action: boolean = true;\n        if (msg.length > 0 && action) {\n          this.props.PushPopupAlert({\n            title: msg,\n            theme: PopupAlertTheme.danger,\n          });\n          action = false;\n        }\n        this.setLoadingDoneExam(false);\n      }\n    });\n\n    this.props.loadPerfomranceExam(\n      period_id,\n      (status: boolean, msg: string) => {\n        if (!status) {\n          let action: boolean = true;\n          if (msg.length > 0 && action) {\n            this.props.PushPopupAlert({\n              title: msg,\n              theme: PopupAlertTheme.danger,\n            });\n            action = false;\n          }\n          this.setLoadingExamPerformance(false);\n        }\n      }\n    );\n\n    if (!this.state.loadingDoneExam && !this.state.loadingExamPerformance) {\n      this.setChangingPeriod(false);\n    }\n  };\n\n  render() {\n    if (this.state.loading || this.props.application_sessions === null) {\n      return (\n        <div className=\"text-center mt-7 font-bold text-4xl text-gray-400 animate-pulse\">\n          Loading Data...\n        </div>\n      );\n    }\n\n    if (this.props.application_sessions.length === 0) {\n      return <NoSession />;\n    }\n\n    return (\n      <div>\n        {/* HEADER TITLE */}\n        <ExamDashboardTitle\n          reportTitle={this.state.reportTitle}\n          setReportTitle={this.setReportTitle}\n          loading={this.state.changingPeriod}\n          education_categories={this.props.schoolLevels.education_categories}\n          loadingEducation={false}\n          thisEducation={this.state.thisEducation}\n          setThisEducation={this.setThisEducation}\n          thisPeriod={this.state.thisPeriod}\n          setThisPeriod={this.setThisPeriod}\n          application_sessions={this.props.application_sessions}\n          onPeriodChange={this.onPeriodChange}\n        />\n        {/* END HEADER TITLE */}\n\n        {/* ----------------------------------------------------------- */}\n\n        {/* EXAMS PREPARATION PROGRESS LABELS ======================================= */}\n        {this.props.examsList &&\n          loadCoursesByInstitute(\n            this.state.thisEducation,\n            this.props.courses,\n            this.props.schoolLevels.school_levels\n          ) && (\n            <section className=\"my-2\">\n              <div className=\"text-2xl font-semibold text-gray-600\">\n                Exams preparation status\n              </div>\n              <ExamDashboardLabels\n                dataLabels={[\n                  {\n                    title: \"Total exams\",\n                    icon: FaBookOpen,\n                    iconColor: \"blue\",\n                    count: loadExamPreparationProgress(\n                      FC_reportExamList(\n                        loadCoursesByInstitute(\n                          this.state.thisEducation,\n                          this.props.courses,\n                          this.props.schoolLevels.school_levels\n                        )!,\n                        this.props.examsList,\n                        this.state.thisPeriod\n                      )\n                    ).all.length,\n                  },\n                  {\n                    title: \"Prepared exams\",\n                    icon: FaBookOpen,\n                    iconColor: \"green\",\n                    count: loadExamPreparationProgress(\n                      FC_reportExamList(\n                        loadCoursesByInstitute(\n                          this.state.thisEducation,\n                          this.props.courses,\n                          this.props.schoolLevels.school_levels\n                        )!,\n                        this.props.examsList,\n                        this.state.thisPeriod\n                      )\n                    ).finished.length,\n                  },\n                  {\n                    title: \"Remaining exams\",\n                    icon: FaBookOpen,\n                    iconColor: \"gray\",\n                    count: loadExamPreparationProgress(\n                      FC_reportExamList(\n                        loadCoursesByInstitute(\n                          this.state.thisEducation,\n                          this.props.courses,\n                          this.props.schoolLevels.school_levels\n                        )!,\n                        this.props.examsList,\n                        this.state.thisPeriod\n                      )\n                    ).remaining.length,\n                  },\n                ]}\n                labelsOnRow={5}\n              >\n                <div className=\"flex justify-center\">\n                  <PieChart\n                    options={{\n                      labels: [\"Prepared\", \"Remaining\"],\n                      legend: {\n                        show: false,\n                        position: \"bottom\",\n                        horizontalAlign: \"center\",\n                        fontSize: \"16px\",\n                        itemMargin: {\n                          horizontal: 3,\n                          vertical: 0,\n                        },\n                      },\n                      plotOptions: {\n                        pie: {\n                          donut: {\n                            labels: {\n                              show: true,\n                              name: {\n                                show: true,\n                                fontSize: \"16px\",\n                                //   fontFamily: \"Rubik\",\n                                color: \"#2564eb\",\n                                offsetY: -10,\n                              },\n                              value: {\n                                show: true,\n                                fontSize: \"20px\",\n                                fontFamily: \"Helvetica, Arial, sans-serif\",\n                                color: \"#2564eb\",\n                                offsetY: 10,\n                                formatter: function (val) {\n                                  return val;\n                                },\n                              },\n                              total: {\n                                show: true,\n                                label: \"Total\",\n                                color: \"#2564eb\",\n                                formatter: function (w) {\n                                  return w.globals.seriesTotals.reduce(\n                                    (a: number, b: number) => {\n                                      return a + b;\n                                    },\n                                    0\n                                  );\n                                },\n                              },\n                            },\n                          },\n                        },\n                      },\n                      colors: [\"#469769\", \"#4b5563\"],\n                    }}\n                    series={[\n                      loadExamPreparationProgress(\n                        FC_reportExamList(\n                          loadCoursesByInstitute(\n                            this.state.thisEducation,\n                            this.props.courses,\n                            this.props.schoolLevels.school_levels\n                          )!,\n                          this.props.examsList,\n                          this.state.thisPeriod\n                        )\n                      ).finished.length,\n                      loadExamPreparationProgress(\n                        FC_reportExamList(\n                          loadCoursesByInstitute(\n                            this.state.thisEducation,\n                            this.props.courses,\n                            this.props.schoolLevels.school_levels\n                          )!,\n                          this.props.examsList,\n                          this.state.thisPeriod\n                        )\n                      ).remaining.length,\n                    ]}\n                    width={210}\n                  />\n                </div>\n              </ExamDashboardLabels>\n            </section>\n          )}\n        {/* EXAMS PREPARATION PROGRESS LABELS ======================================= */}\n\n        {/* ===================================================================================== */}\n\n        {/* EXAMS PROGRESS LABELS ======================================= */}\n        {loadExaminationProgress(\n          this.props.adminExamReport.DoneExam,\n          this.props.examsList,\n          this.state.thisEducation,\n          this.props.courses,\n          this.props.schoolLevels.school_levels,\n          this.state.thisPeriod\n        ) && (\n          <section className=\"my-2\">\n            <div className=\"text-2xl font-semibold text-gray-600\">\n              Examination progress status\n            </div>\n            <ExamDashboardLabels\n              dataLabels={[\n                {\n                  title: \"Total exams\",\n                  icon: FaBookOpen,\n                  iconColor: \"blue\",\n                  count: loadExaminationProgress(\n                    this.props.adminExamReport.DoneExam,\n                    this.props.examsList,\n                    this.state.thisEducation,\n                    this.props.courses,\n                    this.props.schoolLevels.school_levels,\n                    this.state.thisPeriod\n                  )!.all.length,\n                },\n                {\n                  title: \"Done exams\",\n                  icon: FaBookOpen,\n                  iconColor: \"green\",\n                  count: loadExaminationProgress(\n                    this.props.adminExamReport.DoneExam,\n                    this.props.examsList,\n                    this.state.thisEducation,\n                    this.props.courses,\n                    this.props.schoolLevels.school_levels,\n                    this.state.thisPeriod\n                  )!.finished.length,\n                },\n                {\n                  title: \"Remaining exams\",\n                  icon: FaBookOpen,\n                  iconColor: \"gray\",\n                  count: loadExaminationProgress(\n                    this.props.adminExamReport.DoneExam,\n                    this.props.examsList,\n                    this.state.thisEducation,\n                    this.props.courses,\n                    this.props.schoolLevels.school_levels,\n                    this.state.thisPeriod\n                  )!.remaining.length,\n                },\n              ]}\n              labelsOnRow={5}\n            >\n              <div className=\"flex justify-center\">\n                <PieChart\n                  options={{\n                    labels: [\"Done\", \"Remaining\"],\n                    legend: {\n                      show: false,\n                      position: \"bottom\",\n                      horizontalAlign: \"center\",\n                      fontSize: \"16px\",\n                      itemMargin: {\n                        horizontal: 3,\n                        vertical: 0,\n                      },\n                    },\n                    plotOptions: {\n                      pie: {\n                        donut: {\n                          labels: {\n                            show: true,\n                            name: {\n                              show: true,\n                              fontSize: \"16px\",\n                              //   fontFamily: \"Rubik\",\n                              color: \"#2564eb\",\n                              offsetY: -10,\n                            },\n                            value: {\n                              show: true,\n                              fontSize: \"20px\",\n                              fontFamily: \"Helvetica, Arial, sans-serif\",\n                              color: \"#2564eb\",\n                              offsetY: 10,\n                              formatter: function (val) {\n                                return val;\n                              },\n                            },\n                            total: {\n                              show: true,\n                              label: \"Total\",\n                              color: \"#2564eb\",\n                              formatter: function (w) {\n                                return w.globals.seriesTotals.reduce(\n                                  (a: number, b: number) => {\n                                    return a + b;\n                                  },\n                                  0\n                                );\n                              },\n                            },\n                          },\n                        },\n                      },\n                    },\n                    colors: [\"#469769\", \"#4b5563\"],\n                  }}\n                  series={[\n                    loadExaminationProgress(\n                      this.props.adminExamReport.DoneExam,\n                      this.props.examsList,\n                      this.state.thisEducation,\n                      this.props.courses,\n                      this.props.schoolLevels.school_levels,\n                      this.state.thisPeriod\n                    )!.finished.length,\n                    loadExaminationProgress(\n                      this.props.adminExamReport.DoneExam,\n                      this.props.examsList,\n                      this.state.thisEducation,\n                      this.props.courses,\n                      this.props.schoolLevels.school_levels,\n                      this.state.thisPeriod\n                    )!.remaining.length,\n                  ]}\n                  width={210}\n                />\n              </div>\n            </ExamDashboardLabels>\n          </section>\n        )}\n        {/* EXAMS PROGRESS LABELS ======================================= */}\n\n        {/* ===================================================================================== */}\n\n        {/* EXAMS PERFORMANCE LABELS ======================================= */}\n        {this.props.adminExamReport.CandidatesExamPerformance &&\n          loadCoursesByInstitute(\n            this.state.thisEducation,\n            this.props.courses,\n            this.props.schoolLevels.school_levels\n          ) && (\n            <section className=\"my-2\">\n              <div className=\"text-2xl font-semibold text-gray-600\">\n                Examination performance status\n              </div>\n              <ExamDashboardLabels\n                dataLabels={[\n                  {\n                    title: \"Total attendance\",\n                    icon: FaBookOpen,\n                    iconColor: \"blue\",\n                    count: loadExamAttendance(\n                      FC_reportCandidatePerformanceDataFilter(\n                        FC_reportCandidatePerformanceData(\n                          loadCoursesByInstitute(\n                            this.state.thisEducation,\n                            this.props.courses,\n                            this.props.schoolLevels.school_levels\n                          )!,\n                          this.props.adminExamReport.CandidatesExamPerformance,\n                          \"all\"\n                        ),\n                        \"all\"\n                      ),\n                      this.state.thisPeriod\n                    ).all.length,\n                  },\n                  {\n                    title: \"Pass applicant(s)\",\n                    icon: FaBookOpen,\n                    iconColor: \"green\",\n                    count: loadExamAttendance(\n                      FC_reportCandidatePerformanceDataFilter(\n                        FC_reportCandidatePerformanceData(\n                          loadCoursesByInstitute(\n                            this.state.thisEducation,\n                            this.props.courses,\n                            this.props.schoolLevels.school_levels\n                          )!,\n                          this.props.adminExamReport.CandidatesExamPerformance,\n                          \"all\"\n                        ),\n                        \"all\"\n                      ),\n                      this.state.thisPeriod\n                    ).pass.length,\n                  },\n                  {\n                    title: \"Failed applicant(s)\",\n                    icon: FaBookOpen,\n                    iconColor: \"yellow\",\n                    count: loadExamAttendance(\n                      FC_reportCandidatePerformanceDataFilter(\n                        FC_reportCandidatePerformanceData(\n                          loadCoursesByInstitute(\n                            this.state.thisEducation,\n                            this.props.courses,\n                            this.props.schoolLevels.school_levels\n                          )!,\n                          this.props.adminExamReport.CandidatesExamPerformance,\n                          \"all\"\n                        ),\n                        \"all\"\n                      ),\n                      this.state.thisPeriod\n                    ).failed.length,\n                  },\n                  // {\n                  //   title: \"Doing exam\",\n                  //   icon: FaBookOpen,\n                  //   iconColor: \"gray\",\n                  //   count: loadExamAttendance(\n                  //     FC_reportCandidatePerformanceDataFilter(\n                  //       FC_reportCandidatePerformanceData(\n                  //         loadCoursesByInstitute(\n                  //           thisEducation,\n                  //           props.courses,\n                  //           props.schoolLevels.school_levels\n                  //         )!,\n                  //         props.adminExamReport.CandidatesExamPerformance,\n                  //         \"all\"\n                  //       ),\n                  //       \"all\"\n                  //     ),\n                  //     thisPeriod\n                  //   ).active.length,\n                  // },\n                ]}\n                labelsOnRow={5}\n              >\n                <div className=\"flex justify-center\">\n                  <PieChart\n                    options={{\n                      labels: [\"Pass\", \"Failed\"],\n                      // labels: [\"Pass\", \"Failed\", \"Doing Exam\"],\n                      legend: {\n                        show: false,\n                        position: \"bottom\",\n                        horizontalAlign: \"center\",\n                        fontSize: \"16px\",\n                        itemMargin: {\n                          horizontal: 3,\n                          vertical: 0,\n                        },\n                      },\n                      plotOptions: {\n                        pie: {\n                          donut: {\n                            labels: {\n                              show: true,\n                              name: {\n                                show: true,\n                                fontSize: \"16px\",\n                                //   fontFamily: \"Rubik\",\n                                color: \"#2564eb\",\n                                offsetY: -10,\n                              },\n                              value: {\n                                show: true,\n                                fontSize: \"20px\",\n                                fontFamily: \"Helvetica, Arial, sans-serif\",\n                                color: \"#2564eb\",\n                                offsetY: 10,\n                                formatter: function (val) {\n                                  return val;\n                                },\n                              },\n                              total: {\n                                show: true,\n                                label: \"Total\",\n                                color: \"#2564eb\",\n                                formatter: function (w) {\n                                  return w.globals.seriesTotals.reduce(\n                                    (a: number, b: number) => {\n                                      return a + b;\n                                    },\n                                    0\n                                  );\n                                },\n                              },\n                            },\n                          },\n                        },\n                      },\n                      colors: [\"#469769\", \"#d97724\"],\n                      // colors: [\"#469769\", \"#d97724\", \"#4b5563\"],\n                    }}\n                    series={[\n                      loadExamAttendance(\n                        FC_reportCandidatePerformanceDataFilter(\n                          FC_reportCandidatePerformanceData(\n                            loadCoursesByInstitute(\n                              this.state.thisEducation,\n                              this.props.courses,\n                              this.props.schoolLevels.school_levels\n                            )!,\n                            this.props.adminExamReport\n                              .CandidatesExamPerformance,\n                            \"all\"\n                          ),\n                          \"all\"\n                        ),\n                        this.state.thisPeriod\n                      ).pass.length,\n                      loadExamAttendance(\n                        FC_reportCandidatePerformanceDataFilter(\n                          FC_reportCandidatePerformanceData(\n                            loadCoursesByInstitute(\n                              this.state.thisEducation,\n                              this.props.courses,\n                              this.props.schoolLevels.school_levels\n                            )!,\n                            this.props.adminExamReport\n                              .CandidatesExamPerformance,\n                            \"all\"\n                          ),\n                          \"all\"\n                        ),\n                        this.state.thisPeriod\n                      ).failed.length,\n                      // loadExamAttendance(\n                      //   FC_reportCandidatePerformanceDataFilter(\n                      //     FC_reportCandidatePerformanceData(\n                      //       loadCoursesByInstitute(\n                      //         thisEducation,\n                      //         props.courses,\n                      //         props.schoolLevels.school_levels\n                      //       )!,\n                      //       props.adminExamReport.CandidatesExamPerformance,\n                      //       \"all\"\n                      //     ),\n                      //     \"all\"\n                      //   ),\n                      //   thisPeriod\n                      // ).active.length,\n                    ]}\n                    width={210}\n                  />\n                </div>\n              </ExamDashboardLabels>\n            </section>\n          )}\n        {/* EXAMS PERFORMANCE LABELS ======================================= */}\n\n        {/* ------------------------------------------------------------------------------- */}\n\n        {/* ===================================================================================== */}\n\n        {/* EXAMS PREPARATION PROGRESS CHART ======================================= */}\n        {this.props.examsList &&\n          loadCoursesByInstitute(\n            this.state.thisEducation,\n            this.props.courses,\n            this.props.schoolLevels.school_levels\n          ) && (\n            <ExamPreparationChart\n              examPreparationProgress={loadExamPreparationProgress(\n                FC_reportExamList(\n                  loadCoursesByInstitute(\n                    this.state.thisEducation,\n                    this.props.courses,\n                    this.props.schoolLevels.school_levels\n                  )!,\n                  this.props.examsList,\n                  this.state.thisPeriod\n                )\n              )}\n            />\n          )}\n        {/* EXAMS PREPARATION PROGRESS CHART ======================================= */}\n\n        {/* ===================================================================================== */}\n\n        {/* EXAMINATION PROGRESS CHART ======================================= */}\n        {loadExaminationProgress(\n          this.props.adminExamReport.DoneExam,\n          this.props.examsList,\n          this.state.thisEducation,\n          this.props.courses,\n          this.props.schoolLevels.school_levels,\n          this.state.thisPeriod\n        ) && (\n          <ExamProgressChart\n            progressData={\n              loadExaminationProgress(\n                this.props.adminExamReport.DoneExam,\n                this.props.examsList,\n                this.state.thisEducation,\n                this.props.courses,\n                this.props.schoolLevels.school_levels,\n                this.state.thisPeriod\n              )!\n            }\n          />\n        )}\n        {/* EXAMINATION PROGRESS CHART ======================================= */}\n\n        {/* ===================================================================================== */}\n\n        {/* EXAM PERFORMANCE ON COUNTRY CHART ======================================= */}\n        {this.props.adminExamReport.CandidatesExamPerformance &&\n          loadCoursesByInstitute(\n            this.state.thisEducation,\n            this.props.courses,\n            this.props.schoolLevels.school_levels\n          ) && (\n            <ExamPerformanceChart\n              examPerformance={loadExamAttendance(\n                FC_reportCandidatePerformanceDataFilter(\n                  FC_reportCandidatePerformanceData(\n                    loadCoursesByInstitute(\n                      this.state.thisEducation,\n                      this.props.courses,\n                      this.props.schoolLevels.school_levels\n                    )!,\n                    this.props.adminExamReport.CandidatesExamPerformance,\n                    \"all\"\n                  ),\n                  \"all\"\n                ),\n                this.state.thisPeriod\n              )}\n            />\n          )}\n        {/* END EXAM PERFORMANCE ON COUNTRY CHART ======================================= */}\n\n        {/* ------------------------------------------------------------------------------- */}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = ({\n  auth,\n  sessionPlan,\n  schoolLevels,\n  course,\n  prepareExam,\n  adminExamReport,\n}: StoreState): {\n  auth: Auth;\n  application_sessions: SessionPlanInterface[] | null;\n  schoolLevels: schoolLevelsStoreInterface;\n  courses: course[] | null;\n  examsList: ExamItemResponse[] | null;\n  adminExamReport: ExamReportReducerType;\n} => {\n  return {\n    auth,\n    application_sessions: sessionPlan.allSessionPlans,\n    schoolLevels,\n    courses: course.courses,\n    examsList: prepareExam.examsList,\n    adminExamReport,\n  };\n};\n\nexport const ExamDashboard = connect(mapStateToProps, {\n  loadCourses,\n  loadExamsList,\n  loadEducationCategories,\n  loadDoneExam,\n  loadSchoolLevels,\n  loadPerfomranceExam,\n  loadCandidatesExamPerformance,\n  GetAllSessionPlans,\n  PushPopupAlert,\n})(_ExamDashboard);\n","import { UserByTypeInterfaceAPI } from \"./user_by_type\";\n\nexport interface centerReportInterface {\n  _id: string;\n  occupied: number;\n  isUsed: boolean;\n  center_id: string;\n  room_type: string;\n  room_number: number;\n  capacity: number;\n  center_name: string;\n  district_id: string;\n  district_name: string;\n  course_in_room: courseInRoomInterface[];\n}\n\nexport interface centerReportInterface_NEW {\n  _id: string;\n  occupied: number;\n  isUsed: boolean;\n  center_id: string;\n  room_type: string;\n  room_number: number;\n  capacity: number;\n  center_name: string;\n  district_id: string;\n  district_name: string;\n  invigilator: string;\n  course_in_room: courseInRoomInterface[];\n}\n\nexport interface courseInRoomInterface {\n  course_id: string;\n  course_name: string;\n  course_code: string;\n  occupied: number;\n}\n\nexport interface CenterToPrintInterface {\n  no: number;\n  district_name: string;\n  center_name: string;\n  room_number: number;\n  room_type: string;\n  room_capacity: number | \"-\";\n  room_occupation: number;\n  invigilator: string;\n}\n\nexport enum centerReportContentKeyInterface {\n  district_name = \"district_name\",\n  center_name = \"center_name\",\n  room_number = \"room_number\",\n  room_type = \"room_type\",\n  room_capacity = \"room_capacity\",\n  room_occupation = \"room_occupation\",\n  invigilator = \"invigilator\",\n}\n\nexport interface centerReportContentInterface {\n  key: centerReportContentKeyInterface;\n  title: string;\n  status: boolean;\n}\n\nexport interface roomDistrictInterface {\n  district_id: string;\n  district_name: string;\n}\n\nexport const getDistrictInRoom = (\n  allData: centerReportInterface[]\n): roomDistrictInterface[] => {\n  let result: roomDistrictInterface[] = [],\n    ids: string[] = [];\n  for (const key in allData) {\n    if (Object.prototype.hasOwnProperty.call(allData, key)) {\n      if (!ids.includes(allData[key].district_id)) {\n        ids.push(allData[key].district_id);\n        result.push({\n          district_id: allData[key].district_id,\n          district_name: allData[key].district_name,\n        });\n      }\n    }\n  }\n\n  return result;\n};\n\nexport const getRoomOccupation = (thisRoom: centerReportInterface): number => {\n  let result: number = 0;\n  for (const key in thisRoom.course_in_room) {\n    if (Object.prototype.hasOwnProperty.call(thisRoom.course_in_room, key)) {\n      const element = thisRoom.course_in_room[key];\n      if (result < element.occupied) {\n        result = element.occupied;\n      }\n    }\n  }\n  return result;\n};\n\nexport const roomWithOccupation = (\n  allRoom: centerReportInterface[],\n  invigilators: UserByTypeInterfaceAPI[]\n): centerReportInterface_NEW[] => {\n  let result: centerReportInterface_NEW[] = [];\n  for (const key in allRoom) {\n    if (Object.prototype.hasOwnProperty.call(allRoom, key)) {\n      let data: centerReportInterface = allRoom[key];\n      data.occupied = getRoomOccupation(allRoom[key]);\n      const invigilator = invigilators.find(\n        (item) => item.roles_to_users.room_id === allRoom[key]._id\n      );\n      result.push({\n        _id: data._id,\n        occupied: data.occupied,\n        isUsed: data.isUsed,\n        center_id: data.center_id,\n        room_type: data.room_type,\n        room_number: data.room_number,\n        capacity: data.capacity,\n        center_name: data.center_name,\n        district_id: data.district_id,\n        district_name: data.district_name,\n        invigilator: invigilator\n          ? invigilator.user_info.fname + \" \" + invigilator.user_info.lname\n          : \"\",\n        course_in_room: data.course_in_room,\n      });\n    }\n  }\n  return result;\n};\n\nexport const center_report_data: centerReportInterface[] = [\n  {\n    _id: \"61af5367558d345d93dea4397a3\",\n    occupied: 0,\n    isUsed: true,\n    center_id: \"61af534c558dd93dea43979f\",\n    room_type: \"Default\",\n    room_number: 0,\n    capacity: 1000000,\n    center_name: \"Gasabo district center\",\n    district_id: \"61af5338558dd93dea43979b\",\n    district_name: \"Kicukiro\",\n    course_in_room: [],\n  },\n  {\n    _id: \"61af5367558dd93defea4397a6\",\n    occupied: 0,\n    isUsed: true,\n    center_id: \"61af534c558dd93dea43979f\",\n    room_type: \" physical room\",\n    room_number: 112,\n    capacity: 100,\n    center_name: \"Center A\",\n    district_id: \"61af5338558dd93dea43979b\",\n    district_name: \"Kicukiro\",\n    course_in_room: [\n      {\n        course_id: \"61546609eeda150485905a32\",\n        course_name: \"Civisme\",\n        course_code: \"C001\",\n        occupied: 12,\n      },\n      {\n        course_id: \"61546684eeda150485905a3d\",\n        course_name: \"IPTC 1\",\n        course_code: \"ipop\",\n        occupied: 21,\n      },\n      {\n        course_id: \"615465faeeda150485905a2e\",\n        course_name: \"ICT2 for Me\",\n        course_code: \"ICT\",\n        occupied: 100,\n      },\n      {\n        course_id: \"61546401eeda1504859059cc\",\n        course_name: \"ICT in Life\",\n        course_code: \"ICT001\",\n        occupied: 1,\n      },\n    ],\n  },\n  {\n    _id: \"61af536755835dd93defea4397a6\",\n    occupied: 0,\n    isUsed: true,\n    center_id: \"61af534c558dd93dea43979f\",\n    room_type: \" physical room\",\n    room_number: 112,\n    capacity: 120,\n    center_name: \"Gasabo district center\",\n    district_id: \"61af5338558dd93dea43979b\",\n    district_name: \"Kicukiro\",\n    course_in_room: [\n      {\n        course_id: \"61546609eeda150485905a32\",\n        course_name: \"Civisme\",\n        course_code: \"C001\",\n        occupied: 100,\n      },\n      {\n        course_id: \"61546684eeda150485905a3d\",\n        course_name: \"IPTC 1\",\n        course_code: \"ipop\",\n        occupied: 1,\n      },\n      {\n        course_id: \"615465faeeda150485905a2e\",\n        course_name: \"ICT2 for Me\",\n        course_code: \"ICT\",\n        occupied: 10,\n      },\n      {\n        course_id: \"61546401eeda1504859059cc\",\n        course_name: \"ICT in Life\",\n        course_code: \"ICT001\",\n        occupied: 1,\n      },\n    ],\n  },\n];\n","export enum UserByTypeKeys {\n  INVIGILATOR = \"room_id\",\n  HEAD_TEACHER = \"school_id\",\n  DIRECTOR_OF_EDUCATION = \"district_id\",\n  INSTITUTE = \"education_institution_id\",\n}\n\nexport interface UserByTypeInterfaceAPI {\n  _id: string;\n  roles_to_users: {\n    key: string;\n    system_user_role_id: string;\n    district_id: string;\n    school_id: string;\n    room_id: string;\n    status: number;\n    access: boolean;\n    assigned_date: string;\n    education_institution_id?: string;\n  };\n  n_id: string;\n  phone_number: string;\n  email: string;\n  user_info: {\n    document_type: string;\n    issue_number: string;\n    date_of_issue: string;\n    date_of_expiry: string;\n    place_of_issue: string;\n    application_number: string;\n    fname: string;\n    lname: string;\n    father_names: string;\n    mother_names: string;\n    sex: string;\n    date_of_birth: string;\n    place_of_birth: string;\n    country_of_birth: string;\n    village_id: string;\n    village: string;\n    cell: string;\n    sector: string;\n    district: string;\n    province: string;\n    civil_status: string;\n    spouse: null;\n    status: string;\n    photo: string;\n  };\n}\n\nexport interface UserByTypeInterface {\n  _id: string; // CAN BE ROOM ID + SCHOOL ID, DISTRICT ID\n  role_id: string | null;\n  role_name: string | null;\n  role_key: UserByTypeKeys;\n  national_id: string | null;\n  phone_number: string | null;\n  email: string | null;\n  first_name: string | null;\n  last_name: string | null;\n  gender: string | null;\n  photo: string | null;\n  province_id: string;\n  province_name: string;\n  district_id: string;\n  district_name: string;\n  center_id: string;\n  center_name: string;\n  room_id: string;\n  room_name: string;\n  school_id: string;\n  school_name: string;\n}\n\n// EXPORT INTERFACES ====================\nexport interface invigilatorToPrintInterface {\n  no: number;\n  province_name: string;\n  district_name: string;\n  center_name: string;\n  room_name: string;\n  national_id: string;\n  email: string;\n  first_name: string;\n  last_name: string;\n  phone_number: string;\n  gender: string;\n}\n\nexport enum invigilatorReportContentKeyInterface {\n  // USER INFO =====================\n  first_name = \"first_name\",\n  last_name = \"last_name\",\n  email = \"email\",\n  phone_number = \"phone_number\",\n  gender = \"gender\",\n  national_id = \"national_id\",\n  // ROOM INFO =====================\n  province_name = \"province_name\",\n  district_name = \"district_name\",\n  center_name = \"center_name\",\n  room_name = \"room_name\",\n}\n\nexport interface invigilatorReportContentInterface {\n  key: invigilatorReportContentKeyInterface;\n  title: string;\n  status: boolean;\n}\n","import React, { useState } from \"react\";\nimport { MdSearch } from \"react-icons/md\";\nimport { roomDistrictInterface } from \"../../../interfaces/center_report\";\nimport { capitalizeFirstLetter } from \"../../../shared/dataTest\";\nimport search from \"../../../utils/search\";\n\ntype RoleListProps = {\n  setChooseDistrict: (value: boolean) => void;\n  districtList: roomDistrictInterface[];\n  setSelectedDistrict: (data: roomDistrictInterface | \"all\") => void;\n  selectedDistrict: roomDistrictInterface | \"all\";\n  loadindRequest: boolean;\n  bgWhite?: boolean;\n  isModal?: boolean;\n};\n\nconst DistrictList: React.FC<RoleListProps> = (props) => {\n  const [searchInput, setSearchInput] = useState<string>(\"\");\n  return (\n    <section\n      className={`${\n        props.isModal ? \"\" : \"border-2 rounded border-gray-400 shadow-md\"\n      }`}\n    >\n      {/* SEARCH PART */}\n      <div className=\"flex items-center w-full my-1\">\n        <MdSearch className=\"w-6 h-6 absolute ml-2\" />\n        <input\n          type=\"text\"\n          placeholder=\"Search\"\n          className={`focus:border-2 h-7 ml-1 pl-9 ${\n            props.isModal ? \"mr-1\" : \"mr-2\"\n          } bg-gray-100 focus:border-gray-700 w-full rounded`}\n          onChange={(e) => setSearchInput(e.target.value)}\n          value={searchInput}\n          disabled={props.districtList.length > 0 ? false : true}\n        />\n        {!props.isModal && (\n          <button\n            className=\"bg-red-200 text-red-700 py-1 px-2 mr-1 rounded text-sm focus:outline-none\"\n            type=\"button\"\n            onClick={() => {\n              props.setChooseDistrict(false);\n            }}\n          >\n            Close\n          </button>\n        )}\n      </div>\n      {/* END SEARCH PART ///////////////// */}\n\n      <div\n        className={`w-full h-52 mt-2 ${\n          props.isModal ? \"px-2\" : \"\"\n        } overflow-y-auto divide-y divide-gray-300 ${\n          props.bgWhite && \"bg-white\"\n        }`}\n      >\n        <section>\n          <div\n            className={`group flex items-center justify-between my-1 ${\n              props.selectedDistrict === \"all\"\n                ? \"cursor-default bg-blue-50 hover:bg-blue-100\"\n                : \"hover:bg-blue-100\"\n            }`}\n          >\n            <div\n              className={`p-1 w-full mr-2 ${\n                props.selectedDistrict === \"all\"\n                  ? \"cursor-default\"\n                  : \"cursor-pointer\"\n              }`}\n              onClick={() => {\n                props.setChooseDistrict(false);\n                !props.loadindRequest &&\n                  props.selectedDistrict !== \"all\" &&\n                  props.setSelectedDistrict(\"all\");\n              }}\n            >\n              <p className=\"text-sm font-medium text-black\">All district</p>\n            </div>\n            <button\n              type=\"button\"\n              className=\"bg-blue-200 group-hover:bg-blue-300 text-blue-700 group-hover:text-blue-800 p-1 mr-1 rounded text-sm\"\n            >\n              Choose\n            </button>\n          </div>\n        </section>\n        {search(props.districtList, searchInput).length > 0 ? (\n          search(props.districtList, searchInput).map((district, index) => (\n            <section key={index + district.district_id}>\n              <div className=\"group flex items-center justify-between my-1 hover:bg-gray-100\">\n                <div\n                  className=\"p-1 w-full mr-2 cursor-pointer\"\n                  onClick={() => {\n                    props.setChooseDistrict(false);\n                    !props.loadindRequest &&\n                      props.setSelectedDistrict(district);\n                  }}\n                >\n                  <p className=\"text-sm font-medium text-black\">\n                    {capitalizeFirstLetter(district.district_name)}\n                  </p>\n                </div>\n                <button\n                  type=\"button\"\n                  className=\"bg-blue-200 group-hover:bg-blue-300 text-blue-700 group-hover:text-blue-800 p-1 mr-1 rounded text-sm\"\n                >\n                  Choose\n                </button>\n              </div>\n            </section>\n          ))\n        ) : (\n          <div className=\"text-center p-3\">\n            <p className=\"text-base font-medium text-black\">\n              No district available\n            </p>\n          </div>\n        )}\n      </div>\n    </section>\n  );\n};\n\nexport default React.memo(DistrictList);\n"],"sourceRoot":""}
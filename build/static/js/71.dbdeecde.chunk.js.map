{"version":3,"sources":["containers/UserManagement/index.tsx"],"names":["TabTypes","_UserManagement","props","setUserData","value","setState","userData","setLoadingUsers","loadingUsers","setUserTabs","userTabs","setFilerByRoleLevel","filterByRoleLevel","setOpenFilterByRole","openFilterByRole","setLoading","loading","setCurrentPage","currentPage","setLastLoadedPage","lastLoadedPage","setManageUser","manageUser","setChangeRole","changeRole","setManageUserId","manageUserId","componentDidMount","FC_Access","auth","UserAccessList","USER_MANAGEMENT","view","accessRoles","length","FC_GetAccessRoles","status","msg","data","schoolLevels","education_categories","loadEducationCategories","userList","users","fetchUserAccess","isEmptyOrSpaces","PushPopupAlert","title","theme","PopupAlertTheme","danger","console","log","reloadUsers","page","state","includes","newUserList","concat","labelCounts","allUser","activeUser","filter","user","is_active","blockedUser","filterByRole","allData","default_access","system_user_role_id","getRoleById","roleList","roleId","find","item","generatePages","total_users","totalPages","Math","ceil","userPageLimit","_pages","Array","from","keys","map","i","slice","jumpToFirst","jumpToLast","moveBack","moveNext","className","onClick","index","disabled","random","dataResult","tabType","indexData","findIndex","Active_Users","Blocked_Users","FC_DoSearch","e","preventDefault","searchFind","searchError","FC_GetUserBySearch","searchLoading","warning","user_id","All_Users","this","to","onChange","target","role","Object","values","onSubmit","type","placeholder","user_info","fname","lname","email","userTypes","loadingUser","setLoadingUser","Component","UserManagement","connect","access"],"mappings":"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","file":"static/js/71.dbdeecde.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport { FaFilter } from \"react-icons/fa\";\nimport {\n  HiChevronDoubleLeft,\n  HiChevronDoubleRight,\n  HiChevronLeft,\n  HiChevronRight,\n} from \"react-icons/hi\";\nimport { IoMdArrowRoundBack } from \"react-icons/io\";\nimport { MdSupervisorAccount } from \"react-icons/md\";\nimport { connect } from \"react-redux\";\nimport { Redirect } from \"react-router\";\nimport {\n  schoolLevelsStoreInterface,\n  FC_GetAccessRoles,\n  loadEducationCategories,\n  PushPopupAlert,\n  FT_GetAccessRoles,\n  Auth,\n  FC_Access,\n} from \"../../actions\";\nimport {\n  FC_GetUserBySearch,\n  fetchUserAccess,\n  FT_FetchUserAccess,\n  UserAccessInterface,\n  userPageLimit,\n} from \"../../actions/users\";\nimport { PopupAlertData } from \"../../components/Alert/Popup\";\nimport { PopupAlertTheme } from \"../../interfaces/popupAlert\";\nimport { StoreState } from \"../../reducers\";\nimport { isEmptyOrSpaces } from \"../../shared/dataTest\";\nimport {\n  UserInterface,\n  SystemUserRoleInterface,\n} from \"../../shared/interfaces\";\nimport { UserAccessList } from \"../../utils/auth_access\";\nimport UserList from \"./UserList\";\n\nenum TabTypes {\n  All_Users = \"All Users\",\n  Active_Users = \"Active Users\",\n  Blocked_Users = \"Blocked Users\",\n}\n\ninterface AppProps {\n  auth: Auth;\n  userList: UserAccessInterface;\n  accessRoles: SystemUserRoleInterface[];\n  schoolLevels: schoolLevelsStoreInterface;\n  loadEducationCategories: (callback: (loading: boolean) => void) => void;\n  fetchUserAccess: FT_FetchUserAccess;\n  FC_GetAccessRoles: FT_GetAccessRoles;\n  PushPopupAlert: (alert: PopupAlertData) => void;\n}\n\ninterface AppStates {\n  userTabs: TabTypes;\n  userData: UserInterface[];\n  loadingUsers: boolean;\n  filterByRoleLevel: \"all\" | string;\n  openFilterByRole: boolean;\n  loading: boolean;\n  manageUser: UserInterface | null;\n  changeRole: boolean;\n  currentPage: number;\n  lastLoadedPage: number[];\n  searchFind: string;\n  searchLoading: boolean;\n  searchError: string;\n  manageUserId: string;\n}\n\nclass _UserManagement extends Component<AppProps, AppStates> {\n  constructor(props: AppProps) {\n    super(props);\n    // this.childRef = React.createRef();\n\n    this.state = {\n      userTabs: TabTypes.All_Users,\n      userData: [],\n      loadingUsers: true,\n      filterByRoleLevel: \"all\",\n      openFilterByRole: false,\n      loading: true,\n      manageUser: null,\n      changeRole: false,\n      currentPage: 1,\n      lastLoadedPage: [1],\n      searchFind: \"\",\n      searchLoading: false,\n      searchError: \"\",\n      manageUserId: \"\",\n    };\n  }\n\n  setUserData = (value: UserInterface[]) => {\n    this.setState({ userData: value });\n  };\n\n  setLoadingUsers = (value: boolean) => {\n    this.setState({ loadingUsers: value });\n  };\n\n  setUserTabs = (value: TabTypes) => {\n    this.setState({ userTabs: value });\n  };\n\n  setFilerByRoleLevel = (value: \"all\" | string) => {\n    this.setState({ filterByRoleLevel: value });\n  };\n\n  setOpenFilterByRole = (value: boolean) => {\n    this.setState({ openFilterByRole: value });\n  };\n\n  setLoading = (value: boolean) => {\n    this.setState({ loading: value });\n  };\n\n  setCurrentPage = (value: number) => {\n    this.setState({ currentPage: value });\n  };\n\n  setLastLoadedPage = (value: number[]) => {\n    this.setState({ lastLoadedPage: value });\n  };\n\n  setManageUser = (value: UserInterface | null) => {\n    this.setState({ manageUser: value });\n  };\n\n  setChangeRole = (value: boolean) => {\n    this.setState({ changeRole: value });\n  };\n\n  setManageUserId = (value: string) => {\n    this.setState({ manageUserId: value });\n  };\n\n  componentDidMount = () => {\n    if (\n      FC_Access(this.props.auth, UserAccessList.USER_MANAGEMENT).view === true\n    ) {\n      if (!this.props.accessRoles.length) {\n        this.props.FC_GetAccessRoles(\n          (status: boolean, msg: string, data: SystemUserRoleInterface[]) => {\n            this.setState({ loading: status });\n            // if (isEmptyOrSpaces(msg) && status === false)\n            //   this.setState({ feedBack: { type: \"main-error\", message: msg } });\n            // else if (status === false && data.length > 0)\n            //   this.setState({\n            //     labelCounts: {\n            //       allRole: data.length,\n            //       activeRole: data.filter((role) => role.status).length,\n            //       blockedRole: data.filter((role) => !role.status).length,\n            //     },\n            //   });\n          }\n        );\n      }\n\n      // LOADING EDUCATION CATEGORY =================================\n      if (\n        this.props.schoolLevels.education_categories === null ||\n        this.props.schoolLevels.education_categories.length === 0\n      ) {\n        this.props.loadEducationCategories((status: boolean) => {\n          this.setLoading(status);\n        });\n      } else {\n        this.setLoading(false);\n      }\n      // END LOADING EDUCATION CATEGORY =================================\n      if (!this.props.userList.users) {\n        this.props.fetchUserAccess(\n          1,\n          (status: boolean, msg: string, users?: UserInterface[] | null) => {\n            this.setLoadingUsers(status);\n            if (!status) {\n              if (!isEmptyOrSpaces(msg)) {\n                this.props.PushPopupAlert({\n                  title: msg,\n                  theme: PopupAlertTheme.danger,\n                });\n              }\n\n              if (users) {\n                this.setUserData(users);\n                this.setLoadingUsers(false);\n                console.log(\"====================================\");\n                console.log({ setLoadingUsers: status });\n                console.log(\"====================================\");\n              }\n            }\n          }\n        );\n      } else {\n        this.setUserData(this.props.userList.users[0].data);\n        this.setLoadingUsers(false);\n      }\n      // if (this.props.userList.length) {\n      //   console.log({ userList: this.props.userList });\n      //   // REAL CODES TO BE USED ======================\n      //   // setLabelCounts({\n      //   //   allUser: userList.length,\n      //   //   activeUser: userList.filter((user) => user.is_active).length,\n      //   //   blockedUser: userList.filter((user) => !user.is_active).length,\n      //   // });\n      // }\n    }\n  };\n\n  reloadUsers = (page: number) => {\n    if (!this.state.lastLoadedPage.includes(page)) {\n      this.props.fetchUserAccess(\n        page,\n        (status: boolean, msg: string, users?: UserInterface[] | null) => {\n          this.setLoadingUsers(status);\n          if (!status) {\n            if (!isEmptyOrSpaces(msg)) {\n              this.props.PushPopupAlert({\n                title: msg,\n                theme: PopupAlertTheme.danger,\n              });\n            }\n\n            if (users) {\n              let newUserList = [...this.state.userData];\n              newUserList = newUserList.concat(users);\n              this.setUserData(newUserList);\n              this.setLastLoadedPage([...this.state.lastLoadedPage, page]);\n              this.setLoadingUsers(false);\n              console.log(\"====================================\");\n              console.log({ setLoadingUsers: status });\n              console.log(\"====================================\");\n            }\n          }\n        }\n      );\n    }\n  };\n\n  labelCounts = (\n    data: UserInterface[]\n  ): {\n    allUser: number;\n    activeUser: number;\n    blockedUser: number;\n  } => {\n    return {\n      allUser: data.length,\n      activeUser: data.filter((user) => !user.is_active).length,\n      blockedUser: data.filter((user) => user.is_active).length,\n    };\n  };\n\n  filterByRole = (\n    allData: UserInterface[],\n    value: string = \"all\"\n  ): UserInterface[] => {\n    if (value !== \"all\") {\n      return allData.filter(\n        (user) =>\n          user.default_access &&\n          user.default_access.system_user_role_id === value\n      );\n    }\n    return allData;\n  };\n\n  getRoleById = (\n    roleList: SystemUserRoleInterface[],\n    roleId: string\n  ): SystemUserRoleInterface | undefined => {\n    return roleList.find((item) => item.system_user_role_id === roleId);\n  };\n  // countByRole = (value: string): number => {\n  //   if (this.props.userList.users) {\n  //     if (value === \"all\") {\n  //       return this.props.userList.users.length;\n  //     }\n  //     return this.props.userList.users.filter(\n  //       (user) =>\n  //         user.default_access &&\n  //         user.default_access.system_user_role_id === value\n  //     ).length;\n  //   }\n\n  //   return 0;\n  // };\n\n  generatePages = (total_users: number): JSX.Element => {\n    const totalPages = Math.ceil(total_users / userPageLimit);\n    const startPage: number = 1;\n    let _pages = Array.from(Array(totalPages + 1 - startPage).keys())\n      .map((i) => startPage + i)\n      .slice(0, 5);\n\n    if (totalPages > 4 && this.state.currentPage > 2) {\n      if (totalPages - this.state.currentPage > 1) {\n        _pages = [\n          this.state.currentPage - 2,\n          this.state.currentPage - 1,\n          this.state.currentPage,\n          this.state.currentPage + 1,\n          this.state.currentPage + 2,\n        ];\n      } else if (totalPages - this.state.currentPage === 1) {\n        _pages = [\n          this.state.currentPage - 3,\n          this.state.currentPage - 2,\n          this.state.currentPage - 1,\n          this.state.currentPage,\n          this.state.currentPage + 1,\n        ];\n      } else {\n        _pages = [\n          this.state.currentPage - 4,\n          this.state.currentPage - 3,\n          this.state.currentPage - 2,\n          this.state.currentPage - 1,\n          this.state.currentPage,\n        ];\n      }\n    }\n\n    let jumpToFirst: boolean = false,\n      jumpToLast: boolean = false,\n      moveBack: boolean = false,\n      moveNext: boolean = false;\n\n    if (totalPages > 1 && this.state.currentPage !== 1) {\n      moveBack = true;\n    }\n\n    if (totalPages > 1 && this.state.currentPage !== totalPages) {\n      moveNext = true;\n    }\n\n    if (totalPages > 3 && this.state.currentPage > 3) {\n      jumpToFirst = true;\n    }\n\n    if (\n      totalPages > 3 &&\n      this.state.currentPage !== totalPages &&\n      totalPages - this.state.currentPage > 2\n    ) {\n      jumpToLast = true;\n    }\n\n    return (\n      <div className=\"flex text-gray-700\">\n        {jumpToFirst && (\n          <button\n            className=\"h-12 w-12 ml-1 flex justify-center items-center rounded-full bg-gray-100 hover:bg-gray-200 cursor-pointer\"\n            onClick={() => this.setCurrentPage(1)}\n          >\n            <HiChevronDoubleLeft className=\"w-6 h-6\" />\n          </button>\n        )}\n        {moveBack && (\n          <button\n            className=\"h-12 w-12 ml-1 flex justify-center items-center rounded-full bg-gray-100 hover:bg-gray-200\"\n            onClick={() => this.setCurrentPage(this.state.currentPage - 1)}\n          >\n            <HiChevronLeft className=\"w-6 h-6\" />\n          </button>\n        )}\n        <div className=\"flex h-12 font-medium rounded-full mx-1 bg-gray-100\">\n          {_pages.map((item, index) => (\n            <button\n              className={`w-12 md:flex justify-center items-center gap-2 rounded-full ${\n                this.state.currentPage === item\n                  ? \"bg-gray-600 hover:bg-gray-500 text-white cursor-auto\"\n                  : \"hover:bg-gray-200\"\n              }`}\n              key={Math.random()}\n              disabled={this.state.currentPage === item}\n              onClick={() => {\n                this.setCurrentPage(item);\n                this.reloadUsers(item);\n              }}\n            >\n              {item}\n            </button>\n          ))}\n        </div>\n        {moveNext && (\n          <button\n            className=\"h-12 w-12 mr-1 flex justify-center items-center rounded-full bg-gray-100 hover:bg-gray-200 cursor-pointer\"\n            onClick={() => {\n              this.setCurrentPage(this.state.currentPage + 1);\n              this.reloadUsers(this.state.currentPage + 1);\n            }}\n          >\n            <HiChevronRight className=\"w-6 h-6\" />\n          </button>\n        )}\n        {jumpToLast && (\n          <button\n            className=\"h-12 w-12 mr-1 flex justify-center items-center rounded-full bg-gray-100 hover:bg-gray-200 cursor-pointer\"\n            onClick={() => {\n              this.setCurrentPage(totalPages);\n              this.reloadUsers(totalPages);\n            }}\n          >\n            <HiChevronDoubleRight className=\"w-6 h-6\" />\n          </button>\n        )}\n      </div>\n    );\n  };\n\n  dataResult = (tabType: TabTypes) => {\n    if (this.props.userList.users) {\n      const indexData = this.props.userList.users.findIndex(\n        (item) => item.page === this.state.currentPage\n      );\n      if (indexData >= 0) {\n        if (tabType === TabTypes.Active_Users) {\n          return this.props.userList.users[indexData].data.filter(\n            (user) => user.is_active\n          );\n        }\n\n        if (tabType === TabTypes.Blocked_Users) {\n          return this.props.userList.users[indexData].data.filter(\n            (user) => !user.is_active\n          );\n        }\n\n        return this.props.userList.users[indexData].data;\n      }\n    }\n    if (tabType === TabTypes.Active_Users) {\n      return this.state.userData.filter((user) => user.is_active);\n    }\n\n    if (tabType === TabTypes.Blocked_Users) {\n      return this.state.userData.filter((user) => !user.is_active);\n    }\n\n    return this.state.userData;\n  };\n\n  FC_DoSearch = (e: React.FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n    if (isEmptyOrSpaces(this.state.searchFind)) {\n      return this.setState({ searchError: \"Required!\" });\n    }\n\n    FC_GetUserBySearch(\n      this.state.searchFind,\n      (status: boolean, msg: string, data: UserInterface | null | \"\") => {\n        this.setState({ searchLoading: status });\n        if (status === false) {\n          if (!isEmptyOrSpaces(msg)) {\n            this.props.PushPopupAlert({\n              title: msg,\n              theme: PopupAlertTheme.danger,\n            });\n          } else if (data === null || data === \"\") {\n            this.props.PushPopupAlert({\n              title: \"User not found!\",\n              theme: PopupAlertTheme.warning,\n            });\n          } else {\n            console.log(\"===================--------=================\");\n            console.log(data);\n            console.log(\"===================--------=================\");\n            this.setManageUser(data);\n            this.setManageUserId(data.user_id);\n          }\n        }\n      }\n    );\n  };\n\n  render() {\n    if (\n      FC_Access(this.props.auth, UserAccessList.USER_MANAGEMENT).view === false\n    ) {\n      return <Redirect to=\"/apps-page\" />;\n    }\n    if (this.state.loading === true || this.props.userList.users === null) {\n      return (\n        <div className=\"text-center mt-7 font-bold text-4xl text-gray-400 animate-pulse\">\n          Loading users...\n        </div>\n      );\n    }\n\n    return (\n      <div className=\"mb-4\">\n        {/* Title */}\n        {!this.state.manageUser && (\n          <div className=\"mt-3 rounded flex flex-row justify-between items-center\">\n            <div className=\"flex flex-row items-center gap-3\">\n              <MdSupervisorAccount className=\"text-6xl text-blue-600\" />\n              <div className=\"flex flex-col\">\n                <span className=\"text-blue-600 text-2xl font-bold\">\n                  System Users Management\n                </span>\n              </div>\n            </div>\n          </div>\n        )}\n\n        {/* --------------------------------------------------------- */}\n        <div\n          className={`bg-white shadow rounded border border-gray-2 p-2 w-full overflow-x-auto ${\n            this.state.manageUser ? \"mt-3\" : \"\"\n          }`}\n        >\n          {/* FILTER SECTION ================================ */}\n          {!this.state.manageUser && (\n            <section className=\"flex flex-col sm:flex-row justify-between items-center gap-2\">\n              <section className=\"flex flex-col sm:flex-row items-start gap-3\">\n                {/* FILTER BY ROLE ========================= */}\n                <div>\n                  <div className=\"my-0 sm:my-2 font-medium text-xl flex items-center gap-2 w-full\">\n                    <FaFilter />\n                    Filter by roles\n                  </div>\n                  <div className=\"flex flex-col mb-0 sm:mb-3 w-full\">\n                    <select\n                      className={`w-full bg-white text-grey-darker border-2 border-gray-500 rounded h-10 px-2 focus:outline-none focus:bg-gray-100 animate__animated animate__fadeIn ${\n                        this.state.loadingUsers && \"cursor-wait\"\n                      }`}\n                      onChange={(e: React.ChangeEvent<HTMLSelectElement>) =>\n                        this.setFilerByRoleLevel(e.target.value)\n                      }\n                      disabled={this.state.loadingUsers}\n                      value={this.state.filterByRoleLevel}\n                    >\n                      <option value=\"all\">All roles</option>\n                      {this.props.accessRoles.length > 0 ? (\n                        this.props.accessRoles.map((item, i) => (\n                          <option\n                            key={Math.random()}\n                            value={item.system_user_role_id}\n                          >\n                            {item.role}\n                          </option>\n                        ))\n                      ) : (\n                        <option value=\"\" disabled>\n                          No Role\n                        </option>\n                      )}\n                    </select>\n                  </div>\n                </div>\n                {/* END FILTER BY ROLE ========================= */}\n                {/* ----------------------------------------------------- */}\n                {/* FILTER BY STATUS ========================= */}\n                <div>\n                  <div className=\"my-2 font-medium text-xl flex items-center gap-2\">\n                    <FaFilter />\n                    Filter by status\n                  </div>\n                  <div className=\"flex items-start md:items-center justify-start md:justify-end gap-2\">\n                    <select\n                      className={`w-full bg-white text-grey-darker border-2 border-gray-500 rounded h-10 px-2 focus:outline-none focus:bg-gray-100 animate__animated animate__fadeIn ${\n                        this.state.loadingUsers && \"cursor-wait\"\n                      }`}\n                      onChange={(e: React.ChangeEvent<HTMLSelectElement>) =>\n                        this.setUserTabs(e.target.value as TabTypes)\n                      }\n                      disabled={this.state.loadingUsers}\n                    >\n                      {Object.values(TabTypes).map((item, index) => (\n                        <option key={Math.random()} value={item}>\n                          {item}\n                        </option>\n                      ))}\n                    </select>\n                  </div>\n                </div>\n                {/* END FILTER BY STATUS ========================= */}\n              </section>\n\n              <section>\n                <form\n                  onSubmit={this.FC_DoSearch}\n                  className={`w-full mt-8 bg-transparent border-2 rounded-md lg:max-w-sm ${\n                    !isEmptyOrSpaces(this.state.searchError)\n                      ? \"border-red-500 dark:border-red-700 focus-within:border-red-400 dark:focus-within:border-red-400\"\n                      : \"border-gray-500 dark:border-gray-700 focus-within:border-gray-400 dark:focus-within:border-gray-400\"\n                  }`}\n                >\n                  <div className=\"flex flex-col lg:flex-row\">\n                    <input\n                      type=\"text\"\n                      placeholder=\"Search by NID or Phone or Email\"\n                      className=\"flex-1 h-10 px-4 py-2 m-1 text-gray-700 placeholder-gray-400 bg-transparent border-none appearance-none dark:text-gray-200 focus:outline-none focus:placeholder-transparent focus:ring-0\"\n                      disabled={\n                        this.state.searchLoading ||\n                        this.state.loadingUsers ||\n                        this.state.loading\n                      }\n                      onChange={(e) =>\n                        this.setState({\n                          searchFind: e.target.value,\n                          searchError: \"\",\n                        })\n                      }\n                    />\n\n                    <button\n                      type=\"submit\"\n                      className=\"h-10 px-4 py-2 m-1 text-sm text-white transition-colors duration-200 transform bg-gray-500 rounded-md hover:bg-gray-400 focus:outline-none focus:bg-gray-400\"\n                      disabled={\n                        this.state.searchLoading ||\n                        this.state.loadingUsers ||\n                        this.state.loading\n                      }\n                    >\n                      {this.state.searchLoading ? \"Loading\" : \"Search\"}\n                    </button>\n                  </div>\n                </form>\n                {!isEmptyOrSpaces(this.state.searchError) && (\n                  <span className=\"text-red-500\">{this.state.searchError}</span>\n                )}\n              </section>\n            </section>\n          )}\n          {this.state.manageUser && (\n            <div className=\"flex items-center gap-3 mb-2 text-gray-600\">\n              <button\n                className=\"inline-block p-3 transition rounded-full bg-gray-400 ripple hover:bg-gray-600 focus:outline-none\"\n                onClick={() => {\n                  this.setManageUser(null);\n                  this.setChangeRole(false);\n                  this.setState({ searchFind: \"\", searchError: \"\" });\n                }}\n              >\n                <IoMdArrowRoundBack className=\"w-6 h-6 text-gray-50\" />\n              </button>\n\n              <div className=\"flex flex-col hidden\">\n                <span className=\"text-gray-800 font-semibold text-2xl\">\n                  {this.state.manageUser.user_info.fname +\n                    \" \" +\n                    this.state.manageUser.user_info.lname}\n                </span>\n                <span className=\"text-gray-600 font-normal text-sm\">\n                  {this.state.manageUser.email}\n                </span>\n              </div>\n            </div>\n          )}\n          {/* END FILTER SECTION ================================ */}\n          {this.state.userData && (\n            <section>\n              <UserList\n                users={this.filterByRole(\n                  this.dataResult(this.state.userTabs),\n                  this.state.filterByRoleLevel\n                )}\n                roleList={this.props.accessRoles}\n                userTypes={\n                  this.state.userTabs === TabTypes.Active_Users\n                    ? \"blocked\"\n                    : this.state.userTabs === TabTypes.Blocked_Users\n                    ? \"active\"\n                    : \"all\"\n                }\n                loadingUser={this.state.loadingUsers}\n                setLoadingUser={this.setLoadingUsers}\n                manageUser={this.state.manageUser}\n                setManageUser={this.setManageUser}\n                changeRole={this.state.changeRole}\n                setChangeRole={this.setChangeRole}\n                currentPage={this.state.currentPage}\n                manageUserId={this.state.manageUserId}\n                setManageUserId={this.setManageUserId}\n                searchFind={this.state.searchFind}\n              />\n\n              {!this.state.loadingUsers &&\n                !this.state.searchLoading &&\n                !this.state.manageUser && (\n                  <div className=\"flex flex-col items-center mb-3\">\n                    {this.props.userList.total_users &&\n                      this.generatePages(this.props.userList.total_users)}\n                  </div>\n                )}\n            </section>\n          )}\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = ({\n  auth,\n  users,\n  access,\n  schoolLevels,\n}: StoreState): {\n  auth: Auth;\n  userList: UserAccessInterface;\n  accessRoles: SystemUserRoleInterface[];\n  schoolLevels: schoolLevelsStoreInterface;\n} => {\n  return {\n    auth,\n    userList: users,\n    accessRoles: access.accessRoles,\n    schoolLevels,\n  };\n};\n\nexport const UserManagement = connect(mapStateToProps, {\n  fetchUserAccess,\n  FC_GetAccessRoles,\n  loadEducationCategories,\n  PushPopupAlert,\n})(_UserManagement);\n"],"sourceRoot":""}
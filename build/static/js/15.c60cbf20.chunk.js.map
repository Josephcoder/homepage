{"version":3,"sources":["interfaces/question.ts","../node_modules/uuid/dist/esm-browser/rng.js","../node_modules/uuid/dist/esm-browser/regex.js","../node_modules/uuid/dist/esm-browser/stringify.js","../node_modules/uuid/dist/esm-browser/validate.js","../node_modules/uuid/dist/esm-browser/v4.js","containers/QuestionBank/QuestionSettings/Courses/Courses.tsx","containers/QuestionBank/QuestionSettings/SettingsComponents/SchoolLevelSelect.tsx","containers/QuestionBank/QuestionSettings/Courses/AddCourse.tsx","containers/QuestionBank/QuestionSettings/EducationCategories/EducationCategories.tsx","containers/QuestionBank/QuestionSettings/EducationCategories/AddEducationCategory.tsx","containers/QuestionBank/QuestionSettings/QuestionTypes/QuestionTypes.tsx","containers/QuestionBank/QuestionSettings/QuestionTypes/AddQuestionType.tsx","containers/QuestionBank/QuestionSettings/SchoolLevels/SchoolLevels.tsx","containers/QuestionBank/QuestionSettings/SettingsComponents/EducationCategorySelect.tsx","containers/QuestionBank/QuestionSettings/SchoolLevels/AddSchoolLevel.tsx","containers/QuestionBank/QuestionSettings/QuestionSettings.tsx"],"names":["questionTypeElementsType","QuestionLanguage","questionTypeElements","key","SingleMultiple","value","MultipleChoice","CalculatedMultipleChoice","TrueFalse","Matching","Numeric","SimpleCalculate","ShortAnswer","QuestionLanguages","Eng","Fr","Kiny","getRandomValues","rnds8","Uint8Array","rng","crypto","bind","msCrypto","Error","validate","uuid","REGEX","test","byteToHex","i","push","toString","substr","stringify","arr","offset","arguments","length","undefined","toLowerCase","TypeError","v4","options","buf","rnds","random","CoursesAction","SchoolLevelSelect","props","className","style","height","schoolLevels","school_levels","map","item","onClick","loading","setSchool_levels","find","itm","school_level_id","filter","x","school_level_name","description","AddCourse","useState","course_id","setCourse_id","course_name","setCourse_name","course_code","setCourse_code","setDescription","chapters","setChapters","formError","setFormError","setLoading","openAdd","chapter","addChapter","setAddChapter","submitCourse","e","a","preventDefault","selectedCourse","action","Update","element","msg","obj","axios","patch","API","APPLICATION","res","PushPopupAlert","title","theme","PopupAlertTheme","info","setSelectedCourse","closeModal","console","log","post","success","response","data","errors","message","danger","useEffect","onSubmit","disabled","onChange","target","type","minHeight","placeholder","name","status","id","uuidv4","addNewChapter","View","deleteSelected","Delete","EducationCategoryTypeAction","Courses","connect","auth","periods","system","course","loadApplicationPeriods","setSelectedPeriod","loadSchoolLevels","setSelectedEducationCategory","loadCourses","addNew","setAddNew","deleteCourseFn","delete","warning","courses","Loading","Modal","backDrop","Themes","default","close","widthSizeClass","ModalSize","extraLarge","displayClose","backDropClose","padding","body","state","medium","AddEducationCategory","education_institute_id","setEducation_institute_id","education_category_title","setEducation_category_title","submitEducationCategory","selectedEducationCategory","QT_QuestionTypeAction","EducationCategories","loadEducationCategories","deleteEducationCategoryFn","education_category","education_categories","AddQuestionType","setTitle","setElement","submitQuestionType","selectedQuestionType","put","QBank","questionTypes","selected","SchoolLevelsAction","QuestionTypes","loadQuestionTypes","setSelectedQuestionType","deleteQuestionTypeFn","questionType","EducationCategorySelect","setEducationCategories","AddSchoolLevel","setSchool_level_id","school_level_title","setSchool_level_title","setEducation_category","submitSchoolLevel","selectedSchoolLevel","education_institute","SettingsType","SchoolLevels","setSelectedSchoolLevel","school_level","QuestionSettings","settings","settingType","caption","educationCategory","selectedSetting","this","setState","Component"],"mappings":"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","file":"static/js/15.c60cbf20.chunk.js","sourcesContent":["import { course } from \"./course\";\n\n// Multiple question interface\nexport interface question_answer {\n  answer: string;\n  status: boolean;\n}\nexport interface psychometric_question {\n  question_id: string;\n  question_title: string;\n  question_description: string;\n  question_answers: question_answer[]\n}\n\nexport enum questionTypeElementsType {\n  SingleMultiple = \"Single Multiple\",\n  MultipleChoice = \"MultipleChoice\",\n  CalculatedMultipleChoice = \"Calculated multichoice\",\n  TrueFalse = \"true or false\",\n  Matching = \"Matching\",\n  Numeric = \"Numerical\",\n  SimpleCalculate = \"Simple Calculate\",\n  ShortAnswer = \"Short Answer\",\n}\n\nexport const questionTypeElements: { key: questionTypeElementsType; value: string; }[] = [\n  {\n    key: questionTypeElementsType.SingleMultiple,\n    value: \"Single Multiple choice Question\",\n  },\n  {\n    key: questionTypeElementsType.MultipleChoice,\n    value: \"Multiple choice Question\",\n  },\n  {\n    key: questionTypeElementsType.CalculatedMultipleChoice,\n    value: \"Calculated Multiple choice Question\",\n  },\n  {\n    key: questionTypeElementsType.TrueFalse,\n    value: \"True & False Question\",\n  },\n  {\n    key: questionTypeElementsType.Matching,\n    value: \"Matching Question\",\n  },\n  {\n    key: questionTypeElementsType.Numeric,\n    value: \"Numeric Question\",\n  },\n  {\n    key: questionTypeElementsType.SimpleCalculate,\n    value: \"Simple calculation Question\",\n  },\n  {\n    key: questionTypeElementsType.ShortAnswer,\n    value: \"Short answer Question\",\n  },\n];\n\nexport interface questionType {\n  status: number;\n  title: string;\n  element: questionTypeElementsType;\n  description: string;\n  createdAt?: string;\n  updatedAt?: string;\n  id?: string;\n}\n\nexport interface uploadQuestions {\n  course: course;\n  questionsFile: File[];\n}\n\nenum QuestionLanguage {\n  Eng = \"Eng\",\n  Fr = \"Fr\",\n  Kiny = \"Kiny\",\n}\n\nexport interface LanguageInterface { key: QuestionLanguage; value: string }\n\nexport const QuestionLanguages: { key: QuestionLanguage; value: string }[] = [\n  { key: QuestionLanguage.Eng, value: \"English\" },\n  { key: QuestionLanguage.Fr, value: \"French\" },\n  { key: QuestionLanguage.Kiny, value: \"Kiny\" },\n]\n\nexport interface uploadQuestionsResponse {\n  insertedCount: number;\n  insertedData: QuestionInterface[]\n  insertedIds: string[];\n  result: {ok: number, n: number}\n}\n\nexport interface QuestionItemInterface {\n  description: string;\n  language: QuestionLanguage;\n  status: number;\n  title: string;\n  answer: QuestionAnswerInterface[]\n}\n\nexport interface QuestionInterface {\n  id: string;\n  course: string; // Course ID\n  question: QuestionItemInterface[];\n  type: questionTypeElementsType | \"Invalid\";\n  chapters: string[] // CourseChapter: ID\n  customNumber: number;\n  marks: number;\n  answer: QuestionAnswerInterface | QuestionAnswerInterface[];\n}\n\n// export interface QuestionAnswerInterface {\n//   value: string | string[] | number[];\n//   status: boolean | string | string[] | number[];\n// }\nexport interface QuestionAnswerInterface {\n  id: string;\n  value: string;\n  status: boolean;\n}","// Unique ID creation requires a high quality random # generator. In the browser we therefore\n// require the crypto API and do not support built-in fallback to lower quality random number\n// generators (like Math.random()).\nvar getRandomValues;\nvar rnds8 = new Uint8Array(16);\nexport default function rng() {\n  // lazy load so that environments that need to polyfill have a chance to do so\n  if (!getRandomValues) {\n    // getRandomValues needs to be invoked in a context where \"this\" is a Crypto implementation. Also,\n    // find the complete implementation of crypto (msCrypto) on IE11.\n    getRandomValues = typeof crypto !== 'undefined' && crypto.getRandomValues && crypto.getRandomValues.bind(crypto) || typeof msCrypto !== 'undefined' && typeof msCrypto.getRandomValues === 'function' && msCrypto.getRandomValues.bind(msCrypto);\n\n    if (!getRandomValues) {\n      throw new Error('crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported');\n    }\n  }\n\n  return getRandomValues(rnds8);\n}","export default /^(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|00000000-0000-0000-0000-000000000000)$/i;","import validate from './validate.js';\n/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\n\nvar byteToHex = [];\n\nfor (var i = 0; i < 256; ++i) {\n  byteToHex.push((i + 0x100).toString(16).substr(1));\n}\n\nfunction stringify(arr) {\n  var offset = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  // Note: Be careful editing this code!  It's been tuned for performance\n  // and works in ways you may not expect. See https://github.com/uuidjs/uuid/pull/434\n  var uuid = (byteToHex[arr[offset + 0]] + byteToHex[arr[offset + 1]] + byteToHex[arr[offset + 2]] + byteToHex[arr[offset + 3]] + '-' + byteToHex[arr[offset + 4]] + byteToHex[arr[offset + 5]] + '-' + byteToHex[arr[offset + 6]] + byteToHex[arr[offset + 7]] + '-' + byteToHex[arr[offset + 8]] + byteToHex[arr[offset + 9]] + '-' + byteToHex[arr[offset + 10]] + byteToHex[arr[offset + 11]] + byteToHex[arr[offset + 12]] + byteToHex[arr[offset + 13]] + byteToHex[arr[offset + 14]] + byteToHex[arr[offset + 15]]).toLowerCase(); // Consistency check for valid UUID.  If this throws, it's likely due to one\n  // of the following:\n  // - One or more input array values don't map to a hex octet (leading to\n  // \"undefined\" in the uuid)\n  // - Invalid input values for the RFC `version` or `variant` fields\n\n  if (!validate(uuid)) {\n    throw TypeError('Stringified UUID is invalid');\n  }\n\n  return uuid;\n}\n\nexport default stringify;","import REGEX from './regex.js';\n\nfunction validate(uuid) {\n  return typeof uuid === 'string' && REGEX.test(uuid);\n}\n\nexport default validate;","import rng from './rng.js';\nimport stringify from './stringify.js';\n\nfunction v4(options, buf, offset) {\n  options = options || {};\n  var rnds = options.random || (options.rng || rng)(); // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n\n  rnds[6] = rnds[6] & 0x0f | 0x40;\n  rnds[8] = rnds[8] & 0x3f | 0x80; // Copy bytes to buffer, if provided\n\n  if (buf) {\n    offset = offset || 0;\n\n    for (var i = 0; i < 16; ++i) {\n      buf[offset + i] = rnds[i];\n    }\n\n    return buf;\n  }\n\n  return stringify(rnds);\n}\n\nexport default v4;","import React, { Fragment, useEffect, useState } from 'react'\nimport { MdEdit } from 'react-icons/md'\nimport { CgDetailsMore } from 'react-icons/cg'\nimport { HiOutlineDocumentSearch } from 'react-icons/hi'\nimport { connect } from \"react-redux\";\nimport {\n  Auth,\n  loadApplicationPeriods,\n  setSelectedPeriod,\n  applicationPeriodsStoreInterface,\n  schoolLevelsStoreInterface,\n  loadSchoolLevels,\n  setSelectedEducationCategory,\n  System,\n  PushPopupAlert,\n  courseStoreInterface,\n  loadCourses,\n} from \"../../../../actions\";\nimport Loading from '../../../../components/Loading/Loading';\nimport { StoreState } from \"../../../../reducers\";\nimport Modal, { ModalSize, Themes } from '../../../../components/Modal/Modal';\nimport { PopupAlertData } from '../../../../components/Alert/Popup';\nimport { IoMdTrash } from 'react-icons/io';\nimport axios from 'axios';\nimport { API } from '../../../../utils/api';\nimport { PopupAlertTheme } from '../../../../interfaces/popupAlert';\nimport { course } from '../../../../interfaces';\nimport AddCourse from './AddCourse';\n\ninterface CoursePropsInterface {\n  system: System;\n  course: courseStoreInterface;\n  schoolLevels: schoolLevelsStoreInterface;\n  PushPopupAlert: (alert: PopupAlertData) => void;\n  loadSchoolLevels: (callback: (loading: boolean) => void) => void;\n  loadCourses: (callback: (loading: boolean) => void) => void;\n}\n\nexport enum CoursesAction {\n  Create = \"Create\",\n  View = \"View\",\n  Delete = \"Delete\",\n  Update = \"Update\",\n}\n\nexport interface S_CourseDetails {\n  action: CoursesAction;\n  selectedCourse: course;\n}\n\nconst _Courses = (props: CoursePropsInterface) => {\n  const [loading, setLoading] = useState<boolean>(false);\n  const [addNew, setAddNew] = useState<boolean>(false);\n  const [selectedCourse, setSelectedCourse] = useState<S_CourseDetails | null>(null);\n\n  const closeAddNewModal = (state: boolean) => {\n    props.loadCourses(setLoading);\n    setAddNew(state);\n  }\n\n  const deleteCourseFn = async (course: course) => {\n    if (course.course_id !== undefined) {\n      setLoading(true);\n      try {\n        const res = await axios.delete(`${API.APPLICATION}/course/${course.course_id}`);\n        props.loadCourses(setLoading);\n        props.PushPopupAlert({\n          title: `Course removed successfully`,\n          theme: PopupAlertTheme.success,\n        });\n        setSelectedCourse(null);\n        console.log(\"Deleted: \", res);\n      } catch (error) {\n        props.PushPopupAlert({\n          title: `Acton failed, Try again later!`,\n          theme: PopupAlertTheme.warning,\n        });\n        setLoading(false);\n        setSelectedCourse(null);\n        console.log(\"err: \", error);\n      }\n      // setLoading(false);\n    }\n  }\n\n  useEffect(() => {\n    if (props.schoolLevels.school_levels === null || props.schoolLevels.school_levels.length === 0) {\n      props.loadSchoolLevels(setLoading);\n    }\n    if (props.course.courses === null || props.course.courses.length === 0) {\n      props.loadCourses(setLoading);\n    }\n  }, [props, setLoading]);\n  return (\n    <Fragment>\n      <div className=\"mt-1\">\n        <div className=\"flex flex-row justify-between items-center bg-gray-100 py-1\">\n          <div className=\"text-blue-600 font-extrabold text-xl px-2\">List of courses</div>\n          {loading === false &&<div onClick={() => setAddNew(true)} className=\"btn bg-blue-600 text-white cursor-pointer hover:bg-blue-800\">Add new</div>}\n        </div>\n        <div className=\"flex flex-col\">\n          {props.course.courses === null || loading === true ? <Loading /> :\n          props.course.courses.length === 0 ?\n          <div className=\"text-gray-400 px-6 py-4 rounded border mt-4 text-xl font-extrabold flex flex-col items-center justify-center bg-gray-100\">\n            <HiOutlineDocumentSearch className=\"text-7xl text-gray-400 animate__animated animate__shakeX\" />\n            <span>No courses available</span>\n          </div> : \n          props.course.courses.map((item, i) => (\n            <div className={`border flex flex-row px-3 py-2 rounded items-center my-1 justify-between`}>\n              <div className=\"flex flex-col\">\n                <span className=\"text-gray-600 font-extrabold\">{item.course_name}</span>\n                <span className={`text-xs pr-5 text-gray-500`}>{item.description}</span>\n              </div>\n              <div className=\"flex flex-row items-center gap-2\">\n                <div \n                onClick={() => setSelectedCourse({ \n                  action: CoursesAction.View,\n                  selectedCourse: item\n                })} \n                className=\"bg-gray-50 hover:bg-gray-200 rounded-full px-1 py-1 cursor-pointer\">\n                  <CgDetailsMore className=\"text-3xl text-gray-700\"/>\n                </div>\n                <div \n                onClick={() => setSelectedCourse({ \n                  action: CoursesAction.Update,\n                  selectedCourse: item\n                })} \n                className=\"bg-gray-50 hover:bg-blue-100 rounded-full px-1 py-1 cursor-pointer\">\n                  <MdEdit className=\"text-3xl text-blue-700\"/>\n                </div>\n                <div \n                onClick={() => setSelectedCourse({ \n                  action: CoursesAction.Delete,\n                  selectedCourse: item\n                })} \n                className=\"bg-gray-100 hover:bg-red-100 rounded-full px-1 py-1 cursor-pointer\">\n                  <IoMdTrash className=\"text-3xl text-yellow-700\"/>\n                </div>\n              </div>\n              \n            </div>\n          ))}\n        </div>\n      </div>\n      {(addNew === true ||\n      (selectedCourse !== null && \n      (selectedCourse.action === CoursesAction.Update || selectedCourse.action === CoursesAction.View)\n      )) &&\n      <Modal\n        title={<div className=\"flex flex-row gap-4 items-center\">\n          <div className=\"flex flex-col\">\n            <span className=\"font-extrabold text-2xl text-gray-500\">\n              {selectedCourse !== null && selectedCourse.action === CoursesAction.Update ? selectedCourse.selectedCourse.course_name : selectedCourse !== null && selectedCourse.action === CoursesAction.View ? selectedCourse.selectedCourse.course_name : \"Add new course\"}\n            </span>\n            <span className=\"text-sm text-gray-500 font-normal\">\n              {selectedCourse !== null && selectedCourse.action === CoursesAction.Update ? \"Update the selected course\" : selectedCourse !== null && selectedCourse.action === CoursesAction.View ? \"View more details for the selected course\" : \"Course will be used in different components in the system, make sure what you're creating\"}\n            </span>\n          </div>\n        </div>}\n        backDrop={true}\n        theme={Themes.default}\n        close={() => {\n          setAddNew(false);\n          setSelectedCourse(null);\n        }}\n        widthSizeClass={ModalSize.extraLarge}\n        displayClose={true}\n        backDropClose={true}\n        padding={{title: true, body: true }} >\n          <AddCourse \n            closeModal={closeAddNewModal}\n            courses={props.course}\n            PushPopupAlert={props.PushPopupAlert}\n            selectedCourse={selectedCourse}\n            deleteSelected={setSelectedCourse}\n            schoolLevels={props.schoolLevels}\n            setSelectedCourse={setSelectedCourse}\n          />\n      </Modal>}\n      {selectedCourse !== null && selectedCourse.action === CoursesAction.Delete &&\n      <Modal\n        title={<div className=\"flex flex-row gap-4 items-center\">\n          <div className=\"flex flex-col\">\n            <span className=\"font-extrabold text-2xl text-gray-500\">{selectedCourse.selectedCourse.course_name}</span>\n          </div>\n        </div>}\n        backDrop={true}\n        theme={Themes.default}\n        close={() => setSelectedCourse(null)}\n        widthSizeClass={ModalSize.medium}\n        displayClose={true}\n        backDropClose={true}\n        padding={{title: true, body: true }} >\n          <div className=\"-mt-6\">\n            <span className=\"text-red-600 font-bold\">\n              Are you sure do you want to delete this course?\n            </span>\n            <div className=\"flex flex-row items-center justify-between mt-2\">\n              <div onClick={() => setSelectedCourse(null)} className=\"btn bg-gray-100 text-gray-700 cursor-pointer hover:bg-gray-200\">Cancel</div>\n              <div onClick={() => deleteCourseFn(selectedCourse.selectedCourse)} className=\"btn bg-red-600 text-white cursor-pointer hover:bg-red-800\">Yes, Delete</div>\n            </div>\n          </div>\n      </Modal>\n      }\n    </Fragment>\n  )\n}\n\n\nconst mapStateToProps = ({\n  auth,\n  periods,\n  schoolLevels,\n  system,\n  course\n}: StoreState): { auth: Auth; periods: applicationPeriodsStoreInterface, schoolLevels: schoolLevelsStoreInterface; system: System; course: courseStoreInterface } => {\n  return { auth: auth, periods: periods, schoolLevels: schoolLevels, system: system, course: course };\n};\n\nconst Courses = connect(mapStateToProps, {\n  loadApplicationPeriods,\n  setSelectedPeriod,\n  loadSchoolLevels,\n  setSelectedEducationCategory,\n  PushPopupAlert,\n  loadCourses,\n})(_Courses);\n\nexport default Courses;","import React from 'react'\nimport { ImCheckboxChecked, ImCheckboxUnchecked } from 'react-icons/im'\nimport { schoolLevelsStoreInterface } from '../../../../actions/school_levels'\n\ninterface SchoolLevelSelectProps {\n  schoolLevels: schoolLevelsStoreInterface;\n  school_levels: string[];\n  setSchool_levels: (item: string[]) => void;\n  loading: boolean;\n}\n\nconst SchoolLevelSelect = (props: SchoolLevelSelectProps) => {\n  return (\n    <div className=\"rounded flex flex-col gap-2 overflow-y-auto border pb-3 px-3\" style={{height: '80vh'}}>\n      <div className=\"flex flex-row items-center gap-2\">\n        <span className=\"text-sm text-gray-600 font-bold mt-2 mb-1\">Choose school level</span><span className=\"text-xs text-gray-500 italic mt-2 mb-1\">(Optional)</span>\n      </div>\n      {props.schoolLevels.school_levels?.map((item, i) => (\n        <div onClick={() => props.loading === false && props.setSchool_levels(props.school_levels.find(itm => itm === item.school_level_id) ? props.school_levels.filter(x => x !== item.school_level_id) :[...props.school_levels, item.school_level_id])} key={i + 1}className={`flex flex-row items-center gap-3 p-3 rounded cursor-pointer ${props.school_levels.find(itm => itm === item.school_level_id) ? \"bg-blue-50 text-blue-600\" : props.loading === true ? \"bg-gray-100 text-gray-400\" : \"bg-gray-100 text-gray-600\"} ${props.loading === true ? \"hover:bg-gray-100 hover:text-gray-400\" : \"hover:bg-blue-100 hover:text-blue-600\"}`}>\n          {props.school_levels.find(itm => itm === item.school_level_id) ?\n          <ImCheckboxChecked className=\"text-3xl\" /> :\n          <ImCheckboxUnchecked className=\"text-3xl\" />}\n          <div className=\"flex flex-col gap-0\">\n            <span className=\"font-extrabold text-lg\">{item.school_level_name}</span>\n            <span className=\"text-xs -mt-1\">{item.description}</span>\n          </div>\n        </div>\n      ))}\n    </div>\n  )\n}\n\nexport default SchoolLevelSelect\n","import axios from 'axios';\nimport React, { useEffect, useState } from 'react'\nimport { IoMdAddCircle } from 'react-icons/io';\nimport { courseStoreInterface } from '../../../../actions/course';\nimport { schoolLevelsStoreInterface } from '../../../../actions/school_levels';\nimport { PopupAlertData } from '../../../../components/Alert/Popup';\nimport { course, CourseChapter } from '../../../../interfaces/course';\nimport { formErrorInterface } from '../../../../interfaces/form';\nimport { PopupAlertTheme } from '../../../../interfaces/popupAlert';\nimport { API } from '../../../../utils/api';\nimport SchoolLevelSelect from '../SettingsComponents/SchoolLevelSelect';\nimport { CoursesAction, S_CourseDetails } from './Courses';\nimport { v4 as uuidv4 } from 'uuid';\n\ninterface AddCourseProps {\n  closeModal: (state: boolean) => void;\n  courses: courseStoreInterface;\n  PushPopupAlert: (alert: PopupAlertData) => void;\n  selectedCourse: S_CourseDetails | null;\n  deleteSelected: (selectedDetail: S_CourseDetails) => void;\n  schoolLevels: schoolLevelsStoreInterface;\n  setSelectedCourse: (courseDetail: S_CourseDetails | null) => void;\n}\n\nconst AddCourse = (props: AddCourseProps) => {\n  // States\n  const [course_id, setCourse_id] = useState<string>(\"\");\n  const [course_name, setCourse_name] = useState<string>(\"\");\n  const [course_code, setCourse_code] = useState<string>(\"\");\n  const [description, setDescription] = useState<string>(\"\");\n  const [chapters, setChapters] = useState<CourseChapter[]>([]);\n  const [school_levels, setSchool_levels] = useState<string[]>([])\n  const [formError, setFormError] = useState<formErrorInterface | null>(null);\n  const [loading, setLoading] = useState<boolean>(false);\n  const [addChapter, setAddChapter] = useState<{ openAdd: boolean; chapter: string; }>({ openAdd: false, chapter: \"\" });\n  const submitCourse = async (e: React.FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n    // validation\n    if (props.selectedCourse?.action === CoursesAction.Update && course_id === \"\") {\n      return setFormError({\n        element: \"course_id\",\n        msg: \"Please choose Course\"\n      });\n    }\n    else if (course_name === \"\") {\n      return setFormError({\n        element: \"course_name\",\n        msg: \"Please fill the course name\"\n      });\n    }\n    else if (course_code === \"\") {\n      return setFormError({\n        element: \"course_code\",\n        msg: \"Please fill the course code\"\n      });\n    }\n    else if (description === \"\") {\n      return setFormError({\n        element: \"description\",\n        msg: \"Please fill the description\"\n      });\n    } else {\n      setLoading(true);\n      try {\n        // Update current\n        if (props.selectedCourse !== null && props.selectedCourse.selectedCourse.course_id !== undefined) {\n          let obj: course = {\n            course_id: course_id,\n            course_name: course_name,\n            course_code: course_code,\n            description: description,\n            school_levels: school_levels,\n            chapters: chapters,\n          }\n          const res = await axios.patch(`${API.APPLICATION}/course`, obj);\n          props.PushPopupAlert({\n            title: `Course updated successfully`,\n            description: `After updating the course, you have access to delete and update it!`,\n            theme: PopupAlertTheme.info,\n          });\n          props.setSelectedCourse({\n            action: props.selectedCourse.action,\n            selectedCourse: obj\n          })\n          props.closeModal(false);\n          console.log(\"Result: \", res);\n        } else {\n          // Add new\n          const res = await axios.post(`${API.APPLICATION}/course`, {\n            course_name: course_name,\n            course_code: course_code,\n            description: description,\n            school_levels: school_levels,\n            chapters: chapters,\n          });\n          props.PushPopupAlert({\n            title: `Course added successfully`,\n            description: `After adding the Course, you have access to delete and update it!`,\n            theme: PopupAlertTheme.success,\n          });\n          props.closeModal(false);\n          console.log(\"Result: \", res);\n        }\n      } catch (error: any) {\n        if (error.response) {\n          if (error.response.data) {\n            if (error.response.data.errors !== undefined) {\n              if (error.response.data.errors.length > 0) {\n                props.PushPopupAlert({\n                  title: error.response.data.errors[0].message,\n                  theme: PopupAlertTheme.danger,\n                });\n              } else {\n                props.PushPopupAlert({\n                  title: `Failed to add course! Try again`,\n                  theme: PopupAlertTheme.danger,\n                });\n              }\n            } else {\n              props.PushPopupAlert({\n                title: `Failed to add course! Try again`,\n                theme: PopupAlertTheme.danger,\n              });\n            }\n          } else {\n            props.PushPopupAlert({\n              title: `Failed to add course! Try again`,\n              theme: PopupAlertTheme.danger,\n            });\n          }\n        }\n        console.log(\"Err: \", {...error});\n      }\n      setLoading(false);\n    }\n  }\n\n  const addNewChapter = () => {\n    if (addChapter.chapter === \"\") {\n      return setAddChapter({ openAdd: false, chapter: \"\" });\n    }\n    if (addChapter.openAdd === true) {\n      setAddChapter({ openAdd: true, chapter: \"\" });\n      setChapters([{\n        name: addChapter.chapter,\n        status: 1,\n        id: uuidv4(), \n      }, ...chapters]);\n    }\n  }\n\n  const removeChapter = (chapter: CourseChapter) => {\n    setChapters(chapters.filter(itm => itm.id !== chapter.id))\n  }\n\n  useEffect(() => {\n    if (props.selectedCourse !== null) {\n      console.log(\"Sle: \", props.selectedCourse);\n      if (course_id === \"\") {\n        setCourse_id(props.selectedCourse.selectedCourse.course_id);\n      }\n      if (course_name === \"\") {\n        setCourse_name(props.selectedCourse.selectedCourse.course_name);\n      }\n      if (course_code === \"\") {\n        setCourse_code(props.selectedCourse.selectedCourse.course_code);\n      }\n      if (description === \"\") {\n        setDescription(props.selectedCourse.selectedCourse.description);\n      }\n      if (school_levels.length === 0) {\n        setSchool_levels(props.selectedCourse.selectedCourse.school_levels);\n      }\n      if (chapters.length === 0) {\n        if (props.selectedCourse.selectedCourse.chapters !== undefined) {\n          setChapters(props.selectedCourse.selectedCourse.chapters);\n        }\n      }\n    }\n  }, [props, course_id, course_name, course_code, description, school_levels, chapters])\n  return (\n    <form onSubmit={submitCourse} className=\"-mt-2\">\n      <div className=\"grid md:grid-cols-12 gap-5\">\n        <div className=\"col-span-6\">\n          <SchoolLevelSelect\n            schoolLevels={props.schoolLevels}\n            school_levels={school_levels}\n            setSchool_levels={setSchool_levels}\n            loading={loading}\n          />\n        </div>\n        <div className=\"col-span-6\">\n          <div className=\"flex flex-col mb-2\">\n            <span className=\"text-sm text-gray-600 font-bold mb-1\">Course name</span>\n            <input \n              disabled={loading}\n              onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                setCourse_name(e.target.value);\n                setFormError(null);\n              }}\n            type=\"text\" value={course_name} \n            className={`input-white border-2 ${formError !== null && formError.element === \"course_name\" ? \"border-red-500\" : \"border-gray-500\"}`} />\n            {formError !== null && formError.element === \"course_name\" &&\n            <span className=\"text-red-600 font-bold text-xs\">{formError.msg}</span>}\n          </div>\n          <div className=\"flex flex-col mb-2\">\n            <span className=\"text-sm text-gray-600 font-bold mb-1\">Course code</span>\n            <input \n              disabled={loading}\n              onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                setCourse_code(e.target.value);\n                setFormError(null);\n              }}\n            type=\"text\" value={course_code} \n            className={`input-white border-2 ${formError !== null && formError.element === \"course_code\" ? \"border-red-500\" : \"border-gray-500\"}`} />\n            {formError !== null && formError.element === \"course_code\" &&\n            <span className=\"text-red-600 font-bold text-xs\">{formError.msg}</span>}\n          </div>\n          <div className=\"flex flex-col mb-2\">\n            <span className=\"text-sm text-gray-600 font-bold mt-2 mb-1\">Description</span>\n            <textarea \n              disabled={loading}\n              onChange={(e: React.ChangeEvent<HTMLTextAreaElement>) => {\n                setDescription(e.target.value);\n                setFormError(null);\n              }}\n              value={description}\n              className={`input-white border-2 ${formError !== null && formError.element === \"description\" ? \"border-red-500\" : \"border-gray-500\"}`}\n              style={{minHeight: '100px'}}>\n              {description}\n            </textarea>\n            {formError !== null && formError.element === \"description\" &&\n            <span className=\"text-red-600 font-bold text-xs\">{formError.msg}</span>}\n          </div>\n          <div className=\"flex flex-col mb-2\">\n            <div className=\"flex items-center justify-between\">\n              <span className=\"text-gray-600 font-bold\">Course chapters</span>\n              {addChapter.openAdd === false &&\n              <div onClick={() => setAddChapter({ openAdd: true, chapter: \"\" })} className=\"cursor-pointer btn bg-blue-50 text-blue-600 text-sm flex flex-row gap-1 items-center\">\n                <IoMdAddCircle className=\"text-2xl\" />\n                <span>Add chapter</span>\n              </div>}\n            </div>\n            {/* Add chapter */}\n            <div>\n              {addChapter.openAdd === true &&\n                <div className=\"flex flex-row items-center justify-between gap-2 mt-2\">\n                  <input \n                  onChange={(e) => {\n                    setAddChapter({ openAdd: true, chapter: e.target.value})\n                  }}\n                  value={addChapter.chapter}\n                  type=\"text\" placeholder=\"Chapter name\" className=\"input-white border-2 rounded border-gray-500\" />\n                  <div onClick={() => loading === false && addNewChapter()} className={`${loading === false ? \"cursor-pointer\" : \"cursor-not-allowed\"} btn ${addChapter.chapter === \"\" ? loading === true ? \"bg-gray-200\" : \"bg-red-600\" : \"bg-blue-600\"} text-white text-sm flex flex-row gap-1 items-center`}>\n                    <span>{addChapter.chapter === \"\" ? \"Close\" : \"Add\"}</span>\n                  </div>\n                </div>\n              }\n            </div>\n            {chapters.length === 0 ?\n            <div className=\"rounded bg-gray-50 px-2 py-6 mt-2 flex flex-col text-sm text-gray-400 font-extrabold text-center\">\n              No chapters added\n            </div> : \n            <div>\n              {chapters.map((item, i) => (\n                <div key={i + 1} className={`flex flex-row items-center justify-between border ${props.selectedCourse !== null && props.selectedCourse.selectedCourse.chapters && props.selectedCourse.selectedCourse.chapters.filter(itm => itm.id === item.id).length === 0 ? \"bg-gray-50 border-gray-200 text-gray-500\" : \"bg-white border-blue-200 text-blue-600\"} my-1 pl-2 pr-1 py-1 rounded text-sm font-bold`}>\n                  <span>{item.name}</span>\n                  <div onClick={() => loading === false && removeChapter(item)} className={`btn ${loading === false ? \"cursor-pointer\" : \"cursor-not-allowed\"} bg-red-100 text-red-700 text-xs`}>Remove</div>\n                </div>\n              ))}\n            </div>}\n          </div>\n          {addChapter.chapter === \"\" &&\n          <div className=\"flex flex-row justify-between items-center\">\n            {props.selectedCourse?.action === CoursesAction.View ? \n            <button onClick={() => \n            props.selectedCourse && \n            props.deleteSelected({ \n              action: CoursesAction.Delete,\n              selectedCourse: props.selectedCourse.selectedCourse\n            })} type=\"button\" className=\"btn border border-red-600 text-red-700\">Delete</button> : <div></div>}\n            <button \n            disabled={loading}\n            type=\"submit\" className={`btn bg-blue-600 text-white ${loading === true ? \"animate__animated animate__flash animate__infinite\" : \"\"}`}>\n              {loading === true ? \"Please wait...\" : props.selectedCourse !== null ? \"Update course\" : \"Add course\"}\n            </button>\n          </div>}\n        </div>\n      </div>\n    </form>\n  )\n}\n\nexport default AddCourse\n","import React, { Fragment, useEffect, useState } from 'react'\nimport { MdEdit } from 'react-icons/md'\nimport { CgDetailsMore } from 'react-icons/cg'\nimport { HiOutlineDocumentSearch } from 'react-icons/hi'\nimport { connect } from \"react-redux\";\nimport {\n  Auth,\n  loadApplicationPeriods,\n  setSelectedPeriod,\n  applicationPeriodsStoreInterface,\n  schoolLevelsStoreInterface,\n  loadEducationCategories,\n  setSelectedEducationCategory,\n  loadSchoolLevels,\n  System,\n  PushPopupAlert,\n} from \"../../../../actions\";\nimport Loading from '../../../../components/Loading/Loading';\nimport { StoreState } from \"../../../../reducers\";\nimport Modal, { ModalSize, Themes } from '../../../../components/Modal/Modal';\nimport { PopupAlertData } from '../../../../components/Alert/Popup';\nimport { IoMdTrash } from 'react-icons/io';\nimport axios from 'axios';\nimport { API } from '../../../../utils/api';\nimport { PopupAlertTheme } from '../../../../interfaces/popupAlert';\nimport { education_category } from '../../../../interfaces/education_category';\nimport AddEducationCategory from './AddEducationCategory';\n\ninterface EducationCategoryPropsInterface {\n  system: System;\n  schoolLevels: schoolLevelsStoreInterface;\n  PushPopupAlert: (alert: PopupAlertData) => void;\n  loadEducationCategories: (callback: (loading: boolean) => void) => void;\n  loadSchoolLevels: (callback: (loading: boolean) => void) => void;\n}\n\nexport enum EducationCategoryTypeAction {\n  Create = \"Create\",\n  View = \"View\",\n  Delete = \"Delete\",\n  Update = \"Update\",\n}\n\nexport interface E_EducationCategoryDetails {\n  action: EducationCategoryTypeAction;\n  selectedEducationCategory: education_category;\n}\n\nconst _EducationCategories = (props: EducationCategoryPropsInterface) => {\n  const [loading, setLoading] = useState<boolean>(false);\n  const [addNew, setAddNew] = useState<boolean>(false);\n  const [selectedEducationCategory, setSelectedEducationCategory] = useState<E_EducationCategoryDetails | null>(null);\n\n  const closeAddNewModal = (state: boolean) => {\n    setAddNew(state);\n    props.loadEducationCategories(setLoading);\n  }\n\n  const deleteEducationCategoryFn = async (education_category: education_category) => {\n    if (education_category.education_institute_id !== undefined) {\n      setLoading(true);\n      try {\n        const res = await axios.delete(`${API.APPLICATION}/educationinstitute/${education_category.education_institute_id}`);\n        props.loadEducationCategories(setLoading);\n        props.PushPopupAlert({\n          title: `Education category removed successfully`,\n          theme: PopupAlertTheme.success,\n        });\n        setSelectedEducationCategory(null);\n        console.log(\"Deleted: \", res);\n      } catch (error) {\n        console.log(\"err: \", error);\n      }\n      // setLoading(false);\n    }\n  }\n\n  useEffect(() => {\n    if (props.schoolLevels.education_categories === null || props.schoolLevels.education_categories.length === 0) {\n      props.loadEducationCategories(setLoading);\n    }\n    if (props.schoolLevels.school_levels === null || props.schoolLevels.school_levels.length === 0) {\n      props.loadSchoolLevels(setLoading);\n    }\n  }, [props, setLoading]);\n  return (\n    <Fragment>\n      <div className=\"mt-1\">\n        <div className=\"flex flex-row justify-between items-center bg-gray-100 py-1\">\n          <div className=\"text-blue-600 font-extrabold text-xl px-2\">Lists of education categories</div>\n          {loading === false &&<div onClick={() => setAddNew(true)} className=\"btn bg-blue-600 text-white cursor-pointer hover:bg-blue-800\">Add new</div>}\n        </div>\n        <div className=\"flex flex-col\">\n          {props.schoolLevels.education_categories === null || loading === true ? <Loading /> :\n          props.schoolLevels.education_categories.length === 0 ?\n          <div className=\"text-gray-400 px-6 py-4 rounded border mt-4 text-xl font-extrabold flex flex-col items-center justify-center bg-gray-100\">\n            <HiOutlineDocumentSearch className=\"text-7xl text-gray-400 animate__animated animate__shakeX\" />\n            <span>No education categories available</span>\n          </div> : \n          props.schoolLevels.education_categories.map((item, i) => (\n            <div className={`border flex flex-row px-3 py-2 rounded items-center my-1 justify-between`}>\n              <div className=\"flex flex-col\">\n                <span className=\"text-gray-600 font-extrabold\">{item.education_category_title}</span>\n                <span className={`text-xs pr-5 text-gray-500`}>{item.description}</span>\n              </div>\n              <div className=\"flex flex-row items-center gap-2\">\n                <div \n                onClick={() => setSelectedEducationCategory({ \n                  action: EducationCategoryTypeAction.View,\n                  selectedEducationCategory: item\n                })} \n                className=\"bg-gray-50 hover:bg-gray-200 rounded-full px-1 py-1 cursor-pointer\">\n                  <CgDetailsMore className=\"text-3xl text-gray-700\"/>\n                </div>\n                <div \n                onClick={() => setSelectedEducationCategory({ \n                  action: EducationCategoryTypeAction.Update,\n                  selectedEducationCategory: item\n                })} \n                className=\"bg-gray-50 hover:bg-blue-100 rounded-full px-1 py-1 cursor-pointer\">\n                  <MdEdit className=\"text-3xl text-blue-700\"/>\n                </div>\n                <div \n                onClick={() => setSelectedEducationCategory({ \n                  action: EducationCategoryTypeAction.Delete,\n                  selectedEducationCategory: item\n                })} \n                className=\"bg-gray-100 hover:bg-red-100 rounded-full px-1 py-1 cursor-pointer\">\n                  <IoMdTrash className=\"text-3xl text-yellow-700\"/>\n                </div>\n              </div>\n              \n            </div>\n          ))}\n        </div>\n      </div>\n      {(addNew === true ||\n      (selectedEducationCategory !== null && \n      (selectedEducationCategory.action === EducationCategoryTypeAction.Update || selectedEducationCategory.action === EducationCategoryTypeAction.View)\n      )) &&\n      <Modal\n        title={<div className=\"flex flex-row gap-4 items-center\">\n          <div className=\"flex flex-col\">\n            <span className=\"font-extrabold text-2xl text-gray-500\">\n              {selectedEducationCategory !== null && selectedEducationCategory.action === EducationCategoryTypeAction.Update ? selectedEducationCategory.selectedEducationCategory.education_category_title : selectedEducationCategory !== null && selectedEducationCategory.action === EducationCategoryTypeAction.View ? selectedEducationCategory.selectedEducationCategory.education_category_title : \"Add new education category\"}\n            </span>\n            <span className=\"text-sm text-gray-500 font-normal\">\n              {selectedEducationCategory !== null && selectedEducationCategory.action === EducationCategoryTypeAction.Update ? \"Update the selected education category\" : selectedEducationCategory !== null && selectedEducationCategory.action === EducationCategoryTypeAction.View ? \"View more details for the selected education category\" : \"An education category will be used in different components in the system, make sure what you're creating\"}\n            </span>\n          </div>\n        </div>}\n        backDrop={true}\n        theme={Themes.default}\n        close={() => {\n          setAddNew(false);\n          setSelectedEducationCategory(null);\n        }}\n        widthSizeClass={ModalSize.extraLarge}\n        displayClose={true}\n        backDropClose={true}\n        padding={{title: true, body: true }} >\n          <AddEducationCategory \n            closeModal={closeAddNewModal}\n            education_categories={props.schoolLevels}\n            PushPopupAlert={props.PushPopupAlert}\n            selectedEducationCategory={selectedEducationCategory}\n            deleteSelected={setSelectedEducationCategory}\n            schoolLevels={props.schoolLevels}\n          />\n      </Modal>}\n      {selectedEducationCategory !== null && selectedEducationCategory.action === EducationCategoryTypeAction.Delete &&\n      <Modal\n        title={<div className=\"flex flex-row gap-4 items-center\">\n          <div className=\"flex flex-col\">\n            <span className=\"font-extrabold text-2xl text-gray-500\">{selectedEducationCategory.selectedEducationCategory.education_category_title}</span>\n          </div>\n        </div>}\n        backDrop={true}\n        theme={Themes.default}\n        close={() => setSelectedEducationCategory(null)}\n        widthSizeClass={ModalSize.medium}\n        displayClose={true}\n        backDropClose={true}\n        padding={{title: true, body: true }} >\n          <div className=\"-mt-6\">\n            <span className=\"text-red-600 font-bold\">\n              Are you sure do you want to delete this education category?\n            </span>\n            <div className=\"flex flex-row items-center justify-between mt-2\">\n              <div onClick={() => setSelectedEducationCategory(null)} className=\"btn bg-gray-100 text-gray-700 cursor-pointer hover:bg-gray-200\">Cancel</div>\n              <div onClick={() => deleteEducationCategoryFn(selectedEducationCategory.selectedEducationCategory)} className=\"btn bg-red-600 text-white cursor-pointer hover:bg-red-800\">Yes, Delete</div>\n            </div>\n          </div>\n      </Modal>\n      }\n    </Fragment>\n  )\n}\n\n\nconst mapStateToProps = ({\n  auth,\n  periods,\n  schoolLevels,\n  system,\n}: StoreState): { auth: Auth; periods: applicationPeriodsStoreInterface, schoolLevels: schoolLevelsStoreInterface; system: System; } => {\n  return { auth: auth, periods: periods, schoolLevels: schoolLevels, system: system };\n};\n\nconst EducationCategories = connect(mapStateToProps, {\n  loadApplicationPeriods,\n  setSelectedPeriod,\n  loadEducationCategories,\n  setSelectedEducationCategory,\n  PushPopupAlert,\n  loadSchoolLevels,\n})(_EducationCategories);\n\nexport default EducationCategories;","import axios from 'axios';\nimport React, { useEffect, useState } from 'react'\nimport { schoolLevelsStoreInterface } from '../../../../actions/school_levels';\nimport { PopupAlertData } from '../../../../components/Alert/Popup';\nimport { formErrorInterface } from '../../../../interfaces/form';\nimport { PopupAlertTheme } from '../../../../interfaces/popupAlert';\nimport { API } from '../../../../utils/api';\nimport SchoolLevelSelect from '../SettingsComponents/SchoolLevelSelect';\nimport { EducationCategoryTypeAction, E_EducationCategoryDetails } from './EducationCategories';\n\ninterface AddEducationCategoryProps {\n  closeModal: (state: boolean) => void;\n  education_categories: schoolLevelsStoreInterface;\n  PushPopupAlert: (alert: PopupAlertData) => void;\n  selectedEducationCategory: E_EducationCategoryDetails | null;\n  deleteSelected: (selectedDetail: E_EducationCategoryDetails) => void;\n  schoolLevels: schoolLevelsStoreInterface;\n}\n\nconst AddEducationCategory = (props: AddEducationCategoryProps) => {\n  // States\n  const [education_institute_id, setEducation_institute_id] = useState<string>(\"\");\n  const [education_category_title, setEducation_category_title] = useState<string>(\"\");\n  const [description, setDescription] = useState<string>(\"\");\n  const [school_levels, setSchool_levels] = useState<string[]>([]);\n  const [formError, setFormError] = useState<formErrorInterface | null>(null);\n  const [loading, setLoading] = useState<boolean>(false);\n  const submitEducationCategory = async (e: React.FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n    // validation\n    if (props.selectedEducationCategory?.action === EducationCategoryTypeAction.Update && education_institute_id === \"\") {\n      return setFormError({\n        element: \"education_institute_id\",\n        msg: \"Please choose education category\"\n      });\n    }\n    else if (education_category_title === \"\") {\n      return setFormError({\n        element: \"education_category_title\",\n        msg: \"Please fill the education category title\"\n      });\n    }\n    else if (description === \"\") {\n      return setFormError({\n        element: \"description\",\n        msg: \"Please fill the description\"\n      });\n    } else {\n      setLoading(true);\n      try {\n        // Update current\n        console.log(\"Sel schoo le: \", school_levels);\n        if (props.selectedEducationCategory !== null && props.selectedEducationCategory.selectedEducationCategory.education_institute_id !== undefined) {\n          const res = await axios.patch(`${API.APPLICATION}/educationinstitute`, {\n            education_institute_id: education_institute_id,\n            education_category_title: education_category_title,\n            description: description,\n            school_levels: school_levels,\n          });\n          props.PushPopupAlert({\n            title: `Education category updated successfully`,\n            description: `After updating the education category, you have access to delete and update it!`,\n            theme: PopupAlertTheme.info,\n          });\n          props.closeModal(false);\n          console.log(\"Result: \", res);\n        } else {\n          // Add new\n          const res = await axios.post(`${API.APPLICATION}/educationinstitute`, {\n            education_category_title: education_category_title,\n            description: description,\n            school_levels: school_levels,\n          });\n          props.PushPopupAlert({\n            title: `Education category added successfully`,\n            description: `After adding the Education category, you have access to delete and update it!`,\n            theme: PopupAlertTheme.success,\n          });\n          props.closeModal(false);\n          console.log(\"Result: \", res);\n        }\n      } catch (error) {\n        props.PushPopupAlert({\n          title: `Failed to add Education category! Try again`,\n          theme: PopupAlertTheme.danger,\n        });\n        console.log(\"Err: \", error);\n      }\n      setLoading(false);\n    }\n  }\n\n  useEffect(() => {\n    if (props.selectedEducationCategory !== null) {\n      if (education_institute_id === \"\") {\n        setEducation_institute_id(props.selectedEducationCategory.selectedEducationCategory.education_institute_id);\n      }\n      if (education_category_title === \"\") {\n        setEducation_category_title(props.selectedEducationCategory.selectedEducationCategory.education_category_title);\n      }\n      if (description === \"\") {\n        setDescription(props.selectedEducationCategory.selectedEducationCategory.description);\n      }\n      if (school_levels.length === 0) {\n        setSchool_levels(props.selectedEducationCategory.selectedEducationCategory.school_levels);\n      }\n    }\n  }, [props, education_institute_id, education_category_title, description, school_levels])\n  return (\n    <form onSubmit={submitEducationCategory} className=\"-mt-2\">\n      <div className=\"grid md:grid-cols-12 gap-5\">\n        <div className=\"col-span-6\">\n          <SchoolLevelSelect\n            schoolLevels={props.schoolLevels}\n            school_levels={school_levels}\n            setSchool_levels={setSchool_levels}\n            loading={loading}\n          />\n        </div>\n        <div className=\"col-span-6\">\n          <div className=\"flex flex-col mb-2\">\n            <span className=\"text-sm text-gray-600 font-bold mb-1\">Title</span>\n            <input \n              disabled={loading}\n              onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                setEducation_category_title(e.target.value);\n                setFormError(null);\n              }}\n            type=\"text\" value={education_category_title} \n            className={`input-white border-2 ${formError !== null && formError.element === \"title\" ? \"border-red-500\" : \"border-gray-500\"}`} />\n            {formError !== null && formError.element === \"title\" &&\n            <span className=\"text-red-600 font-bold text-xs\">{formError.msg}</span>}\n          </div>\n          <div className=\"flex flex-col mb-2\">\n            <span className=\"text-sm text-gray-600 font-bold mt-2 mb-1\">Description</span>\n            <textarea \n              disabled={loading}\n              onChange={(e: React.ChangeEvent<HTMLTextAreaElement>) => {\n                setDescription(e.target.value);\n                setFormError(null);\n              }}\n              value={description}\n              className={`input-white border-2 ${formError !== null && formError.element === \"description\" ? \"border-red-500\" : \"border-gray-500\"}`}\n              style={{minHeight: '100px'}}>\n              {description}\n            </textarea>\n            {formError !== null && formError.element === \"description\" &&\n            <span className=\"text-red-600 font-bold text-xs\">{formError.msg}</span>}\n          </div>\n          <div className=\"flex flex-row justify-between items-center\">\n            {props.selectedEducationCategory?.action === EducationCategoryTypeAction.View ? \n            <button onClick={() => \n            props.selectedEducationCategory && \n            props.deleteSelected({ \n              action: EducationCategoryTypeAction.Delete,\n              selectedEducationCategory: props.selectedEducationCategory.selectedEducationCategory\n            })} type=\"button\" className=\"btn border border-red-600 text-red-700\">Delete</button> : <div></div>}\n            <button \n            disabled={loading}\n            type=\"submit\" className={`btn bg-blue-600 text-white ${loading === true ? \"animate__animated animate__flash animate__infinite\" : \"\"}`}>\n              {loading === true ? \"Please wait...\" : props.selectedEducationCategory !== null ? \"Update\" : \"Add\"}\n            </button>\n          </div>\n        </div>\n      </div>\n    </form>\n  )\n}\n\nexport default AddEducationCategory\n","import React, { Fragment, useEffect, useState } from 'react'\nimport { MdEdit } from 'react-icons/md'\nimport { CgDetailsMore } from 'react-icons/cg'\nimport { HiOutlineDocumentSearch } from 'react-icons/hi'\nimport { connect } from \"react-redux\";\nimport {\n  Auth,\n  loadApplicationPeriods,\n  setSelectedPeriod,\n  applicationPeriodsStoreInterface,\n  schoolLevelsStoreInterface,\n  loadEducationCategories,\n  setSelectedEducationCategory,\n  questionTypesStoreInterface,\n  loadQuestionTypes,\n  System,\n  PushPopupAlert,\n} from \"../../../../actions\";\nimport Loading from '../../../../components/Loading/Loading';\nimport { StoreState } from \"../../../../reducers\";\nimport Modal, { ModalSize, Themes } from '../../../../components/Modal/Modal';\nimport AddQuestionType from './AddQuestionType';\nimport { PopupAlertData } from '../../../../components/Alert/Popup';\nimport { IoMdTrash } from 'react-icons/io';\nimport { questionType } from '../../../../interfaces/question';\nimport axios from 'axios';\nimport { API } from '../../../../utils/api';\nimport { PopupAlertTheme } from '../../../../interfaces/popupAlert';\n\ninterface QuestionTypesPropsInterface {\n  system: System;\n  questionTypes: questionTypesStoreInterface;\n  loadQuestionTypes: (callback: (loading: boolean) => void) => void;\n  PushPopupAlert: (alert: PopupAlertData) => void;\n}\n\nexport enum QT_QuestionTypeAction {\n  Create = \"Create\",\n  View = \"View\",\n  Delete = \"Delete\",\n  Update = \"Update\",\n}\n\nexport interface QT_QuestionTypeDetails {\n  action: QT_QuestionTypeAction;\n  selectedQuestionType: questionType;\n}\n\nconst _QuestionTypes = (props: QuestionTypesPropsInterface) => {\n  const [loading, setLoading] = useState<boolean>(false);\n  const [addNew, setAddNew] = useState<boolean>(false);\n  const [selectedQuestionType, setSelectedQuestionType] = useState<QT_QuestionTypeDetails | null>(null);\n\n  const closeAddNewModal = (state: boolean) => {\n    setAddNew(state);\n    props.loadQuestionTypes(setLoading);\n  }\n\n  const deleteQuestionTypeFn = async (questionType: questionType) => {\n    if (questionType.id !== undefined) {\n      setLoading(true);\n      try {\n        const res = await axios.delete(`${API.QBank}/question-type/${questionType.id}`);\n        props.loadQuestionTypes(setLoading);\n        props.PushPopupAlert({\n          title: `Question type removed successfully`,\n          theme: PopupAlertTheme.success,\n        });\n        setSelectedQuestionType(null);\n        console.log(\"Deleted: \", res);\n      } catch (error: any) {\n        console.log(\"err: \", {...error});\n      }\n      // setLoading(false);\n    }\n  }\n\n  useEffect(() => {\n    if (props.questionTypes.questionTypes === null || props.questionTypes.questionTypes.length === 0) {\n      props.loadQuestionTypes(setLoading);\n    }\n  }, [props, setLoading]);\n  return (\n    <Fragment>\n      <div className=\"mt-1\">\n        <div className=\"flex flex-row justify-between items-center bg-gray-100 py-1\">\n          <div className=\"text-blue-600 font-extrabold text-xl px-2\">Lists of question types</div>\n          {loading === false &&<div onClick={() => setAddNew(true)} className=\"btn bg-blue-600 text-white cursor-pointer hover:bg-blue-800\">Add new</div>}\n        </div>\n        <div className=\"flex flex-col\">\n          {props.questionTypes.questionTypes === null || loading === true ? <Loading /> :\n          props.questionTypes.questionTypes.length === 0 ?\n          <div className=\"text-gray-400 px-6 py-4 rounded border mt-4 text-xl font-extrabold flex flex-col items-center justify-center bg-gray-100\">\n            <HiOutlineDocumentSearch className=\"text-7xl text-gray-400 animate__animated animate__shakeX\" />\n            <span>No question types available</span>\n          </div> : \n          props.questionTypes.questionTypes.map((item, i) => (\n            <div className={`border flex flex-row px-3 py-2 rounded items-center my-1 justify-between`}>\n              <div className=\"flex flex-col\">\n                <span className=\"text-gray-600 font-extrabold\">{item.title}</span>\n                <span className={`text-xs pr-5 text-gray-500`}>{item.description}</span>\n              </div>\n              <div className=\"flex flex-row items-center gap-2\">\n                <div \n                onClick={() => setSelectedQuestionType({ \n                  action: QT_QuestionTypeAction.View,\n                  selectedQuestionType: item\n                })} \n                className=\"bg-gray-50 hover:bg-gray-200 rounded-full px-1 py-1 cursor-pointer\">\n                  <CgDetailsMore className=\"text-3xl text-gray-700\"/>\n                </div>\n                <div \n                onClick={() => setSelectedQuestionType({ \n                  action: QT_QuestionTypeAction.Update,\n                  selectedQuestionType: item\n                })} \n                className=\"bg-gray-50 hover:bg-blue-100 rounded-full px-1 py-1 cursor-pointer\">\n                  <MdEdit className=\"text-3xl text-blue-700\"/>\n                </div>\n                <div \n                onClick={() => setSelectedQuestionType({ \n                  action: QT_QuestionTypeAction.Delete,\n                  selectedQuestionType: item\n                })} \n                className=\"bg-gray-100 hover:bg-red-100 rounded-full px-1 py-1 cursor-pointer\">\n                  <IoMdTrash className=\"text-3xl text-yellow-700\"/>\n                </div>\n              </div>\n              \n            </div>\n          ))}\n        </div>\n      </div>\n      {(addNew === true ||\n      (selectedQuestionType !== null && \n      (selectedQuestionType.action === QT_QuestionTypeAction.Update || selectedQuestionType.action === QT_QuestionTypeAction.View)\n      )) &&\n      <Modal\n        title={<div className=\"flex flex-row gap-4 items-center\">\n          <div className=\"flex flex-col\">\n            <span className=\"font-extrabold text-2xl text-gray-500\">\n              {selectedQuestionType !== null && selectedQuestionType.action === QT_QuestionTypeAction.Update ? selectedQuestionType.selectedQuestionType.title : selectedQuestionType !== null && selectedQuestionType.action === QT_QuestionTypeAction.View ? selectedQuestionType.selectedQuestionType.title : \"Add new question type\"}\n            </span>\n            <span className=\"text-sm text-gray-500 font-normal\">\n              {selectedQuestionType !== null && selectedQuestionType.action === QT_QuestionTypeAction.Update ? \"Update the selected question type\" : selectedQuestionType !== null && selectedQuestionType.action === QT_QuestionTypeAction.View ? \"View more details for the selected question type\" : \"New question type will be visible at the time of question preparation\"}\n            </span>\n          </div>\n        </div>}\n        backDrop={true}\n        theme={Themes.default}\n        close={() => {\n          setAddNew(false);\n          setSelectedQuestionType(null);\n        }}\n        widthSizeClass={ModalSize.medium}\n        displayClose={true}\n        backDropClose={true}\n        padding={{title: true, body: true }} >\n          <AddQuestionType \n            closeModal={closeAddNewModal}\n            questionTypes={props.questionTypes}\n            PushPopupAlert={props.PushPopupAlert}\n            selectedQuestionType={selectedQuestionType}\n            deleteSelected={setSelectedQuestionType}\n          />\n      </Modal>}\n      {selectedQuestionType !== null && selectedQuestionType.action === QT_QuestionTypeAction.Delete &&\n      <Modal\n        title={<div className=\"flex flex-row gap-4 items-center\">\n          <div className=\"flex flex-col\">\n            <span className=\"font-extrabold text-2xl text-gray-500\">{selectedQuestionType.selectedQuestionType.title}</span>\n          </div>\n        </div>}\n        backDrop={true}\n        theme={Themes.default}\n        close={() => setSelectedQuestionType(null)}\n        widthSizeClass={ModalSize.medium}\n        displayClose={true}\n        backDropClose={true}\n        padding={{title: true, body: true }} >\n          <div className=\"-mt-6\">\n            <span className=\"text-red-600 font-bold\">\n              Are you sure do you want to delete this question type?\n            </span>\n            <div className=\"flex flex-row items-center justify-between mt-2\">\n              <div onClick={() => setSelectedQuestionType(null)} className=\"btn bg-gray-100 text-gray-700 cursor-pointer hover:bg-gray-200\">Cancel</div>\n              <div onClick={() => deleteQuestionTypeFn(selectedQuestionType.selectedQuestionType)} className=\"btn bg-red-600 text-white cursor-pointer hover:bg-red-800\">Yes, Delete</div>\n            </div>\n          </div>\n      </Modal>\n      }\n    </Fragment>\n  )\n}\n\n\nconst mapStateToProps = ({\n  auth,\n  periods,\n  schoolLevels,\n  questionTypes,\n  system,\n}: StoreState): { auth: Auth; periods: applicationPeriodsStoreInterface, schoolLevels: schoolLevelsStoreInterface; questionTypes: questionTypesStoreInterface; system: System; } => {\n  return { auth: auth, periods: periods, schoolLevels: schoolLevels, questionTypes: questionTypes, system: system };\n};\n\nconst QuestionTypes = connect(mapStateToProps, {\n  loadApplicationPeriods,\n  setSelectedPeriod,\n  loadEducationCategories,\n  setSelectedEducationCategory,\n  loadQuestionTypes,\n  PushPopupAlert,\n})(_QuestionTypes);\n\nexport default QuestionTypes;","import axios from 'axios';\nimport React, { useEffect, useState } from 'react'\nimport { questionTypesStoreInterface } from '../../../../actions/questionTypes';\nimport { PopupAlertData } from '../../../../components/Alert/Popup';\nimport { formErrorInterface } from '../../../../interfaces/form';\nimport { PopupAlertTheme } from '../../../../interfaces/popupAlert';\nimport { questionTypeElements } from '../../../../interfaces/question'\nimport { API } from '../../../../utils/api';\nimport { QT_QuestionTypeAction, QT_QuestionTypeDetails } from './QuestionTypes';\n\ninterface AddQuestionTypeProps {\n  closeModal: (state: boolean) => void;\n  questionTypes: questionTypesStoreInterface;\n  PushPopupAlert: (alert: PopupAlertData) => void;\n  selectedQuestionType: QT_QuestionTypeDetails | null;\n  deleteSelected: (selectedDetail: QT_QuestionTypeDetails) => void;\n}\n\nconst AddQuestionType = (props: AddQuestionTypeProps) => {\n  // States\n  const [title, setTitle] = useState<string>(\"\");\n  const [element, setElement] = useState<string>(\"\");\n  const [description, setDescription] = useState<string>(\"\");\n  const [formError, setFormError] = useState<formErrorInterface | null>(null);\n  const [loading, setLoading] = useState<boolean>(false);\n  const submitQuestionType = async (e: React.FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n    // validation\n    if (title === \"\") {\n      return setFormError({\n        element: \"title\",\n        msg: \"Please fill the title\"\n      });\n    }\n    else if (element === \"\" || element.length === 0) {\n      return setFormError({\n        element: \"element\",\n        msg: \"Please fill the element\"\n      });\n    }\n    else if (description === \"\") {\n      return setFormError({\n        element: \"description\",\n        msg: \"Please fill the description\"\n      });\n    } else {\n      setLoading(true);\n      try {\n        // Update current\n        if (props.selectedQuestionType !== null && props.selectedQuestionType.selectedQuestionType.id !== undefined) {\n          const res = await axios.put(`${API.QBank}/question-type/${props.selectedQuestionType.selectedQuestionType.id}`, {\n            status: 1,\n            title: title,\n            element: element,\n            description: description,\n          });\n          props.PushPopupAlert({\n            title: `Question type updated successfully`,\n            description: `After updating the question type, you have access to delete and update it!`,\n            theme: PopupAlertTheme.info,\n          });\n          props.closeModal(false);\n          console.log(\"Result: \", res);\n        } else {\n          // Add new\n          const res = await axios.post(`${API.QBank}/question-type`, {\n            status: 1,\n            title: title,\n            element: element,\n            description: description,\n          });\n          props.PushPopupAlert({\n            title: `Question type added successfully`,\n            description: `After adding the question type, you have access to delete and update it!`,\n            theme: PopupAlertTheme.success,\n          });\n          props.closeModal(false);\n          console.log(\"Result: \", res);\n        }\n      } catch (error: any) {\n        props.PushPopupAlert({\n          title: `Failed to add question type! Try again`,\n          theme: PopupAlertTheme.danger,\n        });\n        console.log(\"Err: \", {...error});\n      }\n      setLoading(false);\n    }\n  }\n\n  useEffect(() => {\n    if (props.selectedQuestionType !== null) {\n      if (title === \"\") {\n        setTitle(props.selectedQuestionType.selectedQuestionType.title);\n      }\n      if (element === \"\") {\n        setElement(props.selectedQuestionType.selectedQuestionType.element);\n      }\n      if (description === \"\") {\n        setDescription(props.selectedQuestionType.selectedQuestionType.description);\n      }\n    }\n  }, [props, title, element, description])\n  return (\n    <form onSubmit={submitQuestionType} className=\"-mt-2\">\n      <div className=\"flex flex-col mb-2\">\n        <span className=\"text-sm text-gray-600 font-bold mt-2 mb-1\">Element</span>\n        {props.selectedQuestionType !== null ? \n        <div className=\"bg-blue-100 text-blue-600 font-bold px-3 py-2 rounded\">\n          {questionTypeElements.find(itm => props.selectedQuestionType && itm.key === props.selectedQuestionType.selectedQuestionType.element)?.value}\n        </div>\n        :\n        <select \n          disabled={loading}\n          onChange={(e: React.ChangeEvent<HTMLSelectElement>) => {\n            setElement(e.target.value);\n            setFormError(null);\n          }}\n        className={`input-white border-2 ${formError !== null && formError.element === \"element\" ? \"border-red-500\" : \"border-gray-500\"}`}>\n          <option value=\"\">Choose element</option>\n          {questionTypeElements.map((item, i) => (\n            <>\n            {props.questionTypes.questionTypes && props.questionTypes.questionTypes.find(itm => itm.element === item.key) === undefined &&\n            <option selected={element === item.key ? true : false} key={i + 1} value={item.key}>{item.value}</option>}</>\n          ))}\n        </select>\n        }\n        {formError !== null && formError.element === \"element\" &&\n        <span className=\"text-red-600 font-bold text-xs\">{formError.msg}</span>}\n      </div>\n      <div className=\"flex flex-col mb-2\">\n        <span className=\"text-sm text-gray-600 font-bold mb-1\">Title</span>\n        <input \n          disabled={loading}\n          onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n            setTitle(e.target.value);\n            setFormError(null);\n          }}\n        type=\"text\" value={title} \n        className={`input-white border-2 ${formError !== null && formError.element === \"title\" ? \"border-red-500\" : \"border-gray-500\"}`} />\n        {formError !== null && formError.element === \"title\" &&\n        <span className=\"text-red-600 font-bold text-xs\">{formError.msg}</span>}\n      </div>\n      <div className=\"flex flex-col mb-2\">\n        <span className=\"text-sm text-gray-600 font-bold mt-2 mb-1\">Description</span>\n        <textarea \n          disabled={loading}\n          onChange={(e: React.ChangeEvent<HTMLTextAreaElement>) => {\n            setDescription(e.target.value);\n            setFormError(null);\n          }}\n          value={description}\n          className={`input-white border-2 ${formError !== null && formError.element === \"description\" ? \"border-red-500\" : \"border-gray-500\"}`}\n          style={{minHeight: '100px'}}>\n          {description}\n        </textarea>\n        {formError !== null && formError.element === \"description\" &&\n        <span className=\"text-red-600 font-bold text-xs\">{formError.msg}</span>}\n      </div>\n      <div className=\"flex flex-row justify-between items-center\">\n        {props.selectedQuestionType?.action === QT_QuestionTypeAction.View ? \n        <button onClick={() => \n        props.selectedQuestionType && \n        props.deleteSelected({ \n          action: QT_QuestionTypeAction.Delete,\n          selectedQuestionType: props.selectedQuestionType.selectedQuestionType\n        })} type=\"button\" className=\"btn border border-red-600 text-red-700\">Delete</button> : <div></div>}\n        <button \n        disabled={loading}\n        type=\"submit\" className={`btn bg-blue-600 text-white ${loading === true ? \"animate__animated animate__flash animate__infinite\" : \"\"}`}>\n          {loading === true ? \"Please wait...\" : props.selectedQuestionType !== null ? \"Update question type\" : \"Add question type\"}\n        </button>\n      </div>\n    </form>\n  )\n}\n\nexport default AddQuestionType\n","import React, { Fragment, useEffect, useState } from 'react'\nimport { MdEdit } from 'react-icons/md'\nimport { CgDetailsMore } from 'react-icons/cg'\nimport { HiOutlineDocumentSearch } from 'react-icons/hi'\nimport { connect } from \"react-redux\";\nimport {\n  Auth,\n  loadApplicationPeriods,\n  setSelectedPeriod,\n  applicationPeriodsStoreInterface,\n  schoolLevelsStoreInterface,\n  loadSchoolLevels,\n  setSelectedEducationCategory,\n  System,\n  PushPopupAlert,\n} from \"../../../../actions\";\nimport Loading from '../../../../components/Loading/Loading';\nimport { StoreState } from \"../../../../reducers\";\nimport Modal, { ModalSize, Themes } from '../../../../components/Modal/Modal';\nimport AddQuestionType from './AddSchoolLevel';\nimport { PopupAlertData } from '../../../../components/Alert/Popup';\nimport { IoMdTrash } from 'react-icons/io';\nimport axios from 'axios';\nimport { API } from '../../../../utils/api';\nimport { PopupAlertTheme } from '../../../../interfaces/popupAlert';\nimport { school_level } from '../../../../interfaces/school_level';\n\ninterface SchoolLevelsPropsInterface {\n  system: System;\n  schoolLevels: schoolLevelsStoreInterface;\n  PushPopupAlert: (alert: PopupAlertData) => void;\n  loadSchoolLevels: (callback: (loading: boolean) => void) => void;\n}\n\nexport enum SchoolLevelsAction {\n  Create = \"Create\",\n  View = \"View\",\n  Delete = \"Delete\",\n  Update = \"Update\",\n}\n\nexport interface S_SchoolLevelDetails {\n  action: SchoolLevelsAction;\n  selectedSchoolLevel: school_level;\n}\n\nconst _SchoolLevels = (props: SchoolLevelsPropsInterface) => {\n  const [loading, setLoading] = useState<boolean>(false);\n  const [addNew, setAddNew] = useState<boolean>(false);\n  const [selectedSchoolLevel, setSelectedSchoolLevel] = useState<S_SchoolLevelDetails | null>(null);\n\n  const closeAddNewModal = (state: boolean) => {\n    setAddNew(state);\n    props.loadSchoolLevels(setLoading);\n  }\n\n  const deleteEducationCategoryFn = async (school_level: school_level) => {\n    if (school_level.school_level_id !== undefined) {\n      setLoading(true);\n      try {\n        const res = await axios.delete(`${API.APPLICATION}/schoollevel/${school_level.school_level_id}`);\n        props.loadSchoolLevels(setLoading);\n        props.PushPopupAlert({\n          title: `School level removed successfully`,\n          theme: PopupAlertTheme.success,\n        });\n        setSelectedSchoolLevel(null);\n        console.log(\"Deleted: \", res);\n      } catch (error: any) {\n        props.PushPopupAlert({\n          title: `Acton failed, Try again later!`,\n          theme: PopupAlertTheme.warning,\n        });\n        setLoading(false);\n        setSelectedSchoolLevel(null);\n        console.log(\"err: \", {...error});\n      }\n      // setLoading(false);\n    }\n  }\n\n  useEffect(() => {\n    if (props.schoolLevels.school_levels === null || props.schoolLevels.school_levels.length === 0) {\n      props.loadSchoolLevels(setLoading);\n    }\n  }, [props, setLoading]);\n  return (\n    <Fragment>\n      <div className=\"mt-1\">\n        <div className=\"flex flex-row justify-between items-center bg-gray-100 py-1\">\n          <div className=\"text-blue-600 font-extrabold text-xl px-2\">Lists of school levels</div>\n          {loading === false &&<div onClick={() => setAddNew(true)} className=\"btn bg-blue-600 text-white cursor-pointer hover:bg-blue-800\">Add new</div>}\n        </div>\n        <div className=\"flex flex-col\">\n          {props.schoolLevels.school_levels === null || loading === true ? <Loading /> :\n          props.schoolLevels.school_levels.length === 0 ?\n          <div className=\"text-gray-400 px-6 py-4 rounded border mt-4 text-xl font-extrabold flex flex-col items-center justify-center bg-gray-100\">\n            <HiOutlineDocumentSearch className=\"text-7xl text-gray-400 animate__animated animate__shakeX\" />\n            <span>No question types available</span>\n          </div> : \n          props.schoolLevels.school_levels.map((item, i) => (\n            <div className={`border flex flex-row px-3 py-2 rounded items-center my-1 justify-between`}>\n              <div className=\"flex flex-col\">\n                <span className=\"text-gray-600 font-extrabold\">{item.school_level_name}</span>\n                <span className={`text-xs pr-5 text-gray-500`}>{item.description}</span>\n              </div>\n              <div className=\"flex flex-row items-center gap-2\">\n                <div \n                onClick={() => setSelectedSchoolLevel({ \n                  action: SchoolLevelsAction.View,\n                  selectedSchoolLevel: item\n                })} \n                className=\"bg-gray-50 hover:bg-gray-200 rounded-full px-1 py-1 cursor-pointer\">\n                  <CgDetailsMore className=\"text-3xl text-gray-700\"/>\n                </div>\n                <div \n                onClick={() => setSelectedSchoolLevel({ \n                  action: SchoolLevelsAction.Update,\n                  selectedSchoolLevel: item\n                })} \n                className=\"bg-gray-50 hover:bg-blue-100 rounded-full px-1 py-1 cursor-pointer\">\n                  <MdEdit className=\"text-3xl text-blue-700\"/>\n                </div>\n                <div \n                onClick={() => setSelectedSchoolLevel({ \n                  action: SchoolLevelsAction.Delete,\n                  selectedSchoolLevel: item\n                })} \n                className=\"bg-gray-100 hover:bg-red-100 rounded-full px-1 py-1 cursor-pointer\">\n                  <IoMdTrash className=\"text-3xl text-yellow-700\"/>\n                </div>\n              </div>\n              \n            </div>\n          ))}\n        </div>\n      </div>\n      {(addNew === true ||\n      (selectedSchoolLevel !== null && \n      (selectedSchoolLevel.action === SchoolLevelsAction.Update || selectedSchoolLevel.action === SchoolLevelsAction.View)\n      )) &&\n      <Modal\n        title={<div className=\"flex flex-row gap-4 items-center\">\n          <div className=\"flex flex-col\">\n            <span className=\"font-extrabold text-2xl text-gray-500\">\n              {selectedSchoolLevel !== null && selectedSchoolLevel.action === SchoolLevelsAction.Update ? selectedSchoolLevel.selectedSchoolLevel.school_level_name : selectedSchoolLevel !== null && selectedSchoolLevel.action === SchoolLevelsAction.View ? selectedSchoolLevel.selectedSchoolLevel.school_level_name : \"Add new school level\"}\n            </span>\n            <span className=\"text-sm text-gray-500 font-normal\">\n              {selectedSchoolLevel !== null && selectedSchoolLevel.action === SchoolLevelsAction.Update ? \"Update the selected school level\" : selectedSchoolLevel !== null && selectedSchoolLevel.action === SchoolLevelsAction.View ? \"View more details for the selected school level\" : \"School level will be used in different components in the system, make sure what you're creating\"}\n            </span>\n          </div>\n        </div>}\n        backDrop={true}\n        theme={Themes.default}\n        close={() => {\n          setAddNew(false);\n          setSelectedSchoolLevel(null);\n        }}\n        widthSizeClass={ModalSize.extraLarge}\n        displayClose={true}\n        backDropClose={true}\n        padding={{title: true, body: true }} >\n          <AddQuestionType \n            closeModal={closeAddNewModal}\n            school_levels={props.schoolLevels}\n            PushPopupAlert={props.PushPopupAlert}\n            selectedSchoolLevel={selectedSchoolLevel}\n            deleteSelected={setSelectedSchoolLevel}\n          />\n      </Modal>}\n      {selectedSchoolLevel !== null && selectedSchoolLevel.action === SchoolLevelsAction.Delete &&\n      <Modal\n        title={<div className=\"flex flex-row gap-4 items-center\">\n          <div className=\"flex flex-col\">\n            <span className=\"font-extrabold text-2xl text-gray-500\">{selectedSchoolLevel.selectedSchoolLevel.school_level_name}</span>\n          </div>\n        </div>}\n        backDrop={true}\n        theme={Themes.default}\n        close={() => setSelectedSchoolLevel(null)}\n        widthSizeClass={ModalSize.medium}\n        displayClose={true}\n        backDropClose={true}\n        padding={{title: true, body: true }} >\n          <div className=\"-mt-6\">\n            <span className=\"text-red-600 font-bold\">\n              Are you sure do you want to delete this school level?\n            </span>\n            <div className=\"flex flex-row items-center justify-between mt-2\">\n              <div onClick={() => setSelectedSchoolLevel(null)} className=\"btn bg-gray-100 text-gray-700 cursor-pointer hover:bg-gray-200\">Cancel</div>\n              <div onClick={() => deleteEducationCategoryFn(selectedSchoolLevel.selectedSchoolLevel)} className=\"btn bg-red-600 text-white cursor-pointer hover:bg-red-800\">Yes, Delete</div>\n            </div>\n          </div>\n      </Modal>\n      }\n    </Fragment>\n  )\n}\n\n\nconst mapStateToProps = ({\n  auth,\n  periods,\n  schoolLevels,\n  questionTypes,\n  system,\n}: StoreState): { auth: Auth; periods: applicationPeriodsStoreInterface, schoolLevels: schoolLevelsStoreInterface; system: System; } => {\n  return { auth: auth, periods: periods, schoolLevels: schoolLevels, system: system };\n};\n\nconst SchoolLevels = connect(mapStateToProps, {\n  loadApplicationPeriods,\n  setSelectedPeriod,\n  loadSchoolLevels,\n  setSelectedEducationCategory,\n  PushPopupAlert,\n})(_SchoolLevels);\n\nexport default SchoolLevels;","import React from 'react'\nimport { ImCheckboxChecked, ImCheckboxUnchecked } from 'react-icons/im'\nimport { schoolLevelsStoreInterface } from '../../../../actions/school_levels'\n\ninterface EducationCategorySelectProps {\n  schoolLevels: schoolLevelsStoreInterface;\n  education_categories: string[];\n  setEducationCategories: (item: string[]) => void;\n  loading: boolean;\n}\n\nconst EducationCategorySelect = (props: EducationCategorySelectProps) => {\n  return (\n    <div className=\"rounded flex flex-col gap-2 overflow-y-auto border pb-3 px-3\" style={{height: '80vh'}}>\n      <div className=\"flex flex-row items-center gap-2\">\n        <span className=\"text-sm text-gray-600 font-bold mt-2 mb-1\">Choose school level</span><span className=\"text-xs text-gray-500 italic mt-2 mb-1\">(Optional)</span>\n      </div>\n      {props.schoolLevels.education_categories?.map((item, i) => (\n        <div onClick={() => props.loading === false && props.setEducationCategories(props.education_categories.find(itm => itm === item.education_institute_id) ? props.education_categories.filter(x => x !== item.education_institute_id) :[...props.education_categories, item.education_institute_id])} key={i + 1}className={`flex flex-row items-center gap-3 p-3 rounded cursor-pointer ${props.education_categories.find(itm => itm === item.education_institute_id) ? \"bg-blue-50 text-blue-600\" : props.loading === true ? \"bg-gray-100 text-gray-400\" : \"bg-gray-100 text-gray-600\"} ${props.loading === true ? \"hover:bg-gray-100 hover:text-gray-400\" : \"hover:bg-blue-100 hover:text-blue-600\"}`}>\n          {props.education_categories.find(itm => itm === item.education_institute_id) ?\n          <ImCheckboxChecked className=\"text-3xl\" /> :\n          <ImCheckboxUnchecked className=\"text-3xl\" />}\n          <div className=\"flex flex-col gap-0\">\n            <span className=\"font-extrabold text-lg\">{item.education_category_title}</span>\n            <span className=\"text-xs -mt-1\">{item.description}</span>\n          </div>\n        </div>\n      ))}\n    </div>\n  )\n}\n\nexport default EducationCategorySelect\n","import axios from 'axios';\nimport React, { useEffect, useState } from 'react'\nimport { schoolLevelsStoreInterface } from '../../../../actions/school_levels';\nimport { PopupAlertData } from '../../../../components/Alert/Popup';\nimport { formErrorInterface } from '../../../../interfaces/form';\nimport { PopupAlertTheme } from '../../../../interfaces/popupAlert';\nimport { API } from '../../../../utils/api';\nimport EducationCategorySelect from '../SettingsComponents/EducationCategorySelect';\nimport { SchoolLevelsAction, S_SchoolLevelDetails } from './SchoolLevels';\n\ninterface AddSchoolLevelProps {\n  closeModal: (state: boolean) => void;\n  school_levels: schoolLevelsStoreInterface;\n  PushPopupAlert: (alert: PopupAlertData) => void;\n  selectedSchoolLevel: S_SchoolLevelDetails | null;\n  deleteSelected: (selectedDetail: S_SchoolLevelDetails) => void;\n}\n\nconst AddSchoolLevel = (props: AddSchoolLevelProps) => {\n  // States\n  const [school_level_id, setSchool_level_id] = useState<string>(\"\");\n  const [school_level_title, setSchool_level_title] = useState<string>(\"\");\n  const [description, setDescription] = useState<string>(\"\");\n  const [education_category, setEducation_category] = useState<string[]>([]);\n  const [courses, setCourse] = useState<string[]>([]);\n  const [formError, setFormError] = useState<formErrorInterface | null>(null);\n  const [loading, setLoading] = useState<boolean>(false);\n  const submitSchoolLevel = async (e: React.FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n    // validation\n    if (props.selectedSchoolLevel?.action === SchoolLevelsAction.Update && school_level_id === \"\") {\n      return setFormError({\n        element: \"school_level_id\",\n        msg: \"Please choose School level\"\n      });\n    }\n    else if (school_level_title === \"\") {\n      return setFormError({\n        element: \"school_level_title\",\n        msg: \"Please fill the school level name\"\n      });\n    }\n    else if (description === \"\") {\n      return setFormError({\n        element: \"description\",\n        msg: \"Please fill the description\"\n      });\n    } else {\n      setLoading(true);\n      try {\n        // Update current\n        if (props.selectedSchoolLevel !== null && props.selectedSchoolLevel.selectedSchoolLevel.school_level_id !== undefined) {\n          const res = await axios.patch(`${API.APPLICATION}/schoollevel`, {\n            school_level_id: school_level_id,\n            school_level_name: school_level_title,\n            description: description,\n            education_institute: education_category,\n            courses: courses,\n          });\n          props.PushPopupAlert({\n            title: `School level updated successfully`,\n            description: `After updating the School level, you have access to delete and update it!`,\n            theme: PopupAlertTheme.info,\n          });\n          props.closeModal(false);\n          console.log(\"Result: \", res);\n        } else {\n          // Add new\n          const res = await axios.post(`${API.APPLICATION}/schoollevel`, {\n            school_level_name: school_level_title,\n            description: description,\n            education_institute: education_category,\n            courses: courses,\n          });\n          props.PushPopupAlert({\n            title: `School level added successfully`,\n            description: `After adding the School level, you have access to delete and update it!`,\n            theme: PopupAlertTheme.success,\n          });\n          props.closeModal(false);\n          console.log(\"Result: \", res);\n        }\n      } catch (error: any) {\n        props.PushPopupAlert({\n          title: `Failed to add School level! Try again`,\n          theme: PopupAlertTheme.danger,\n        });\n        console.log(\"Err: \", {...error});\n      }\n      setLoading(false);\n    }\n  }\n\n  useEffect(() => {\n    if (props.selectedSchoolLevel !== null) {\n      if (school_level_id === \"\") {\n        setSchool_level_id(props.selectedSchoolLevel.selectedSchoolLevel.school_level_id);\n      }\n      if (school_level_title === \"\") {\n        setSchool_level_title(props.selectedSchoolLevel.selectedSchoolLevel.school_level_name);\n      }\n      if (description === \"\") {\n        setDescription(props.selectedSchoolLevel.selectedSchoolLevel.description);\n      }\n      if (education_category.length === 0) {\n        setEducation_category(props.selectedSchoolLevel.selectedSchoolLevel.education_institute);\n      }\n    }\n  }, [props, school_level_id, school_level_title, description, education_category])\n  return (\n    <form onSubmit={submitSchoolLevel} className=\"-mt-2\">\n      <div className=\"grid md:grid-cols-12 gap-5\">\n        <div className=\"col-span-6\">\n          <EducationCategorySelect\n            schoolLevels={props.school_levels}\n            education_categories={education_category}\n            setEducationCategories={setEducation_category}\n            loading={loading}\n          />\n        </div>\n        <div className=\"col-span-6\">\n          <div className=\"flex flex-col mb-2\">\n            <span className=\"text-sm text-gray-600 font-bold mb-1\">Title</span>\n            <input \n              disabled={loading}\n              onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                setSchool_level_title(e.target.value);\n                setFormError(null);\n              }}\n            type=\"text\" value={school_level_title} \n            className={`input-white border-2 ${formError !== null && formError.element === \"school_level_title\" ? \"border-red-500\" : \"border-gray-500\"}`} />\n            {formError !== null && formError.element === \"school_level_title\" &&\n            <span className=\"text-red-600 font-bold text-xs\">{formError.msg}</span>}\n          </div>\n          <div className=\"flex flex-col mb-2\">\n            <span className=\"text-sm text-gray-600 font-bold mt-2 mb-1\">Description</span>\n            <textarea \n              disabled={loading}\n              onChange={(e: React.ChangeEvent<HTMLTextAreaElement>) => {\n                setDescription(e.target.value);\n                setFormError(null);\n              }}\n              value={description}\n              className={`input-white border-2 ${formError !== null && formError.element === \"description\" ? \"border-red-500\" : \"border-gray-500\"}`}\n              style={{minHeight: '100px'}}>\n              {description}\n            </textarea>\n            {formError !== null && formError.element === \"description\" &&\n            <span className=\"text-red-600 font-bold text-xs\">{formError.msg}</span>}\n          </div>\n          <div className=\"flex flex-row justify-between items-center\">\n            {props.selectedSchoolLevel?.action === SchoolLevelsAction.View ? \n            <button onClick={() => \n            props.selectedSchoolLevel && \n            props.deleteSelected({ \n              action: SchoolLevelsAction.Delete,\n              selectedSchoolLevel: props.selectedSchoolLevel.selectedSchoolLevel\n            })} type=\"button\" className=\"btn border border-red-600 text-red-700\">Delete</button> : <div></div>}\n            <button \n            disabled={loading}\n            type=\"submit\" className={`btn bg-blue-600 text-white ${loading === true ? \"animate__animated animate__flash animate__infinite\" : \"\"}`}>\n              {loading === true ? \"Please wait...\" : props.selectedSchoolLevel !== null ? \"Update\" : \"Add\"}\n            </button>\n          </div>\n        </div>\n      </div>\n    </form>\n  )\n}\n\nexport default AddSchoolLevel\n","import React, { Component } from 'react'\nimport { RiFolderSettingsFill } from 'react-icons/ri';\nimport Courses from './Courses/Courses';\nimport EducationCategories from './EducationCategories/EducationCategories';\nimport QuestionTypes from './QuestionTypes/QuestionTypes';\nimport SchoolLevels from './SchoolLevels/SchoolLevels';\n\nenum SettingsType {\n  questionTypes = \"questionTypes\",\n  courses = \"courses\",\n  educationCategory = \"educationCategory\",\n  schoolLevels = \"schoolLevels\",\n  chapters = \"chapters\",\n}\n\ninterface QuestionSettingsState {\n  loading: boolean;\n  settings: {\n    settingType: SettingsType;\n    caption: string;\n  }[],\n  selectedSetting: SettingsType | null;\n}\ninterface QuestionSettingsProps {}\n\nexport class QuestionSettings extends Component<QuestionSettingsProps, QuestionSettingsState> {\n  constructor(props: QuestionSettingsProps) {\n    super(props);\n\n    this.state = {\n      loading: true,\n      settings: [\n        {\n          settingType: SettingsType.questionTypes,\n          caption: \"Question Types\"\n        },\n        {\n          settingType: SettingsType.courses,\n          caption: \"Courses\"\n        },\n        {\n          settingType: SettingsType.educationCategory,\n          caption: \"Education categories\"\n        },\n        {\n          settingType: SettingsType.schoolLevels,\n          caption: \"School levels\"\n        },\n      ],\n      selectedSetting: SettingsType.educationCategory,\n    };\n  }\n  render() {\n    return (\n      <div className=\"\">\n        <div className=\"mt-3 rounded flex flex-row justify-between items-center\">\n          <div className=\"flex flex-row items-center gap-3\">\n            <RiFolderSettingsFill className=\"text-6xl text-blue-600\" />\n            <div className=\"flex flex-col\">\n              <span className=\"text-blue-600 text-2xl font-bold\">Question Bank settings</span>\n              <span className=\"text-gray-600 text-sm\">Customization of question bank predefined settings including courses, chapters, question types, etc</span>\n            </div>\n          </div>\n          <div className=\"flex flex-row\">\n            {/* <Link to=\"/method-add-question\" className={`btn bg-blue-100 hover:bg-white text-blue-700 border-2 border-white`}>Add questions</Link> */}\n            {/* <div className=\"btn bg-black bg-opacity-30 text-white border-2 border-white\">Change course</div> */}\n          </div>\n        </div>\n        <div className=\"mt-3 flex-col\">\n          <div className=\"flex flex-col\">\n            <div className=\"bg-white flex rounded mb-20\">\n              <div className=\"bg-white w-full border border-white rounded\">\n                <div className=\"flex flex-row items-center\">\n                  {this.state.settings.map((item, i) => (\n                    <div onClick={() => this.setState({ selectedSetting: item.settingType })} className={`animate__animated ${this.state.selectedSetting === item.settingType ? \"bg-blue-100 border-blue-600 text-blue-600 animate__zoomIn\" : \"bg-white border-white text-gray-600\"} hover:bg-blue-100 px-4 py-2 cursor-pointer font-bold border-b-4 hover:border-blue-600 hover:text-blue-600 rounded-t mt-1 mx-1`}>\n                      {item.caption}\n                    </div>\n                  ))}\n                </div>\n                <div className=\"=rounded mx-1 mb-1\">\n                  {this.state.selectedSetting === SettingsType.questionTypes && <QuestionTypes />}\n                  {this.state.selectedSetting === SettingsType.educationCategory && <EducationCategories />}\n                  {this.state.selectedSetting === SettingsType.schoolLevels && <SchoolLevels />}\n                  {this.state.selectedSetting === SettingsType.courses && <Courses />}\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n"],"sourceRoot":""}
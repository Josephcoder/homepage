{"version":3,"sources":["actions/location.ts","components/Navigation/SideNavigation.tsx","actions/settings.ts","actions/schools.ts","utils/ExportToExcel.tsx","components/Loading/TableLoading.tsx","utils/mineduc.png","components/DownloadPDF/rest.tsx","interfaces/marks_publication.ts","containers/Admin/Placement/PlacementReport.tsx"],"names":["getAllRoom","callback","dispatch","a","axios","get","API","APPLICATION","res","type","ActionTypes","GET_ALL_ROOM","payload","data","console","log","error","errorToText","FC_CreateProvince","CREATE_PROVINCE","FC_UpdateProvince","UPDATE_PROVINCE","FC_DeleteProvince","DELETE_PROVINCE","FC_CreateDistrict","CREATE_DISTRICT","FC_UpdateDistrict","UPDATE_DISTRICT","FC_DeleteDistrict","DELETE_DISTRICT","FC_CreateSector","CREATE_SECTOR","FC_UpdateSector","UPDATE_SECTOR","FC_DeleteSector","DELETE_SECTOR","FC_CreateCenter","CREATE_CENTER","FC_UpdateCenter","UPDATE_CENTER","FC_DeleteCenter","DELETE_CENTER","FC_CreateRoom","CREATE_ROOM","FC_UpdateRoom","UPDATE_ROOM","FC_DeleteRoom","delete_room","DELETE_ROOM","_SideNavigation","props","componentDidMount","PageHasSubNav","componentWillUnmount","state","loading","this","auth","isAuthenticated","navActive","system","navigation","className","children","React","Component","SideNavigation","connect","NavToogle","MainItem","title","icon","MdBrightness1","active","count","IconDefined","getSystemSettings","setAxiosToken","AUTH","GET_SYSTEM_SETTINGS","code_error","disableSystemSetting","DISABLE_SYSTEM_SETTINGS","GetTaskAccess","response","map","id","task","key","permitted","GET_TASK_ACCESS","getPositions","GET_POSTIONS","deletePosition","DELETE_POSITION","publishPosition","PUBLISH_POSITION","getSchools","GET_SCHOOLS","getSchoolById","schoolId","GET_SCHOOLS_BY_ID","createSchool","schools","CREATE_SCHOOL","updateSchool","UPDATE_SCHOOL","deleteSchool","DELETE_SCHOOL","fetchSchoolPosts","school_id","PLACEMENT","schoolPosts","FETCH_SCHOOL_POSTS","getSchoolPlacement","GET_SCHOOL_PLACEMENT","createSchoolPost","CREATE_SCHOOL_POST","updateSchoolPost","TYPE","UPDATE_SCHOOL_POST","fetchDistrictPosts","district_id","FETCH_DISTRICT_POSTS","getDistrictPlacement","GET_DISTRICT_PLACEMENT","ExportToExcel","fileData","fileName","btnName","showIcon","onClick","e","apiData","wb","Sheets","XLSX","json_to_sheet","SheetNames","excelBuffer","bookType","Blob","FileSaver","exportToCSV","TableLoading","displayCols","colsArray","index","cols","push","element","require","addFooters","doc","pageCount","internal","getNumberOfPages","setFont","setFontSize","i","setPage","text","String","pageSize","width","align","generatePDF","reportSettings","table","callBack","orientation","lMargin","jsPDF","setTextColor","addImage","Logo","undefined","getWidth","institute","lines","splitTextToSize","subject","pdfInMM","y","subjectTitle","getTextWidth","length","addPage","period","autoTable","html","startY","margin","horizontal","cellPadding","rowHeight","bodyStyles","valign","columnStyles","email","cellWidth","theme","tableWidth","finalY","lastAutoTable","doneBy","DATE","Date","toString","save","returnPromise","then","MarksPublicationCandidateStatus","marksPublicationCandidateReportContentKeyInterface","PlacedCandidateStatus","placementReportContentKeyInterface","defaultReportContent","applicant_name","status","national_id","phone_number","position_name","school_name","_PlacementReport","setLoading","setState","setLoadingData","loadingData","setSelectAll","selectAll","setSelectedDistrict","value","selectedDistrict","setReportTitle","thisTitle","reportTitle","setFormError","formError","setSortOrder","thisOrder","sortOrder","setSortProperty","thisProperty","sortProperty","setIsSorted","isSorted","setGenerateReportModal","generateReportModal","setDownloading","downloading","distinctDistrict","location","province_id","ids","result","find","item","_id","districts","Object","prototype","hasOwnProperty","call","keyDistrict","includes","setSort","loadPlacementData","thisDistrict","errorMsg","isEmptyOrSpaces","PushPopupAlert","PopupAlertTheme","warning","systemPositions","msg","danger","locations","FC_GeneratePDF","document","querySelectorAll","getElementById","user","fname","lname","district_name","footer","updateContentToPrint","districtPlacements","arrayNew","n","thisPosition","position_id","dataArray","no","names","user_info","n_id","phone","school","position_title","reportContentExport","dataToPrint","updateReportContent","findIndex","newArray","isChangeAllowed","resetReportContent","currentState","dataToShow","placements","Math","random","FC_FilterReportData","allData","filter","PlacementStatuses","output","capitalizeFirstLetter","PENDING","toLocaleLowerCase","itm","PLACED","REJECTED","selectedStatus","searchInput","searchDistrict","chooseDistrict","disabled","reportType","onChange","target","placeholder","colSpan","sortThisArray","search","backDrop","Themes","default","close","backDropClose","widthSizeClass","ModalSize","medium","displayClose","padding","to","searchData","PlacementReport","system_settings","roomLocation"],"mappings":"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","file":"static/js/32.b75ef086.chunk.js","sourcesContent":["import axios from \"axios\";\nimport { Dispatch } from \"redux\";\nimport { ActionTypes } from \"./types\";\nimport { API } from \"../utils/api\";\nimport {\n  CentersInterface,\n  DistrictInterface,\n  RoomLocationInterface,\n  RoomsInterface,\n  SectorInterface,\n} from \"../shared/interfaces\";\nimport { errorToText } from \"../utils/errors\";\n\n/**\n * * ****************************** INTERFACES *****************************\n */\n\nexport interface getAllRoomActions {\n  type: ActionTypes.GET_ALL_ROOM;\n  payload: RoomLocationInterface[];\n}\n\nexport interface createProvinceActions {\n  type: ActionTypes.CREATE_PROVINCE;\n  payload: RoomLocationInterface;\n}\n\nexport interface updateProvinceActions {\n  type: ActionTypes.UPDATE_PROVINCE;\n  payload: {\n    province_id: string;\n    province_name: string;\n    provice_code: number;\n  };\n}\n\nexport interface deleteProvinceActions {\n  type: ActionTypes.DELETE_PROVINCE;\n  payload: string;\n}\n\n// ============ DISTRICT =================\nexport interface createDistrictActions {\n  type: ActionTypes.CREATE_DISTRICT;\n  payload: { province_id: string; data: DistrictInterface };\n}\n\nexport interface updateDistrictActions {\n  type: ActionTypes.UPDATE_DISTRICT;\n  payload: {\n    province_id: string;\n    district_id: string;\n    district_name: string;\n    district_code: number;\n  };\n}\n\nexport interface deleteDistrictActions {\n  type: ActionTypes.DELETE_DISTRICT;\n  payload: { province_id: string; district_id: string };\n}\n\n// ============ SECTOR =================\nexport interface createSectorActions {\n  type: ActionTypes.CREATE_SECTOR;\n  payload: {\n    province_id: string;\n    district_id: string;\n    data: SectorInterface;\n  };\n}\n\nexport interface updateSectorActions {\n  type: ActionTypes.UPDATE_SECTOR;\n  payload: {\n    province_id: string;\n    district_id: string;\n    sector_id: string;\n    sector_name: string;\n    sector_code: number;\n  };\n}\n\nexport interface deleteSectorActions {\n  type: ActionTypes.DELETE_SECTOR;\n  payload: { province_id: string; district_id: string; sector_id: string };\n}\n\n// ============ CENTERS =================\nexport interface createCenterActions {\n  type: ActionTypes.CREATE_CENTER;\n  payload: {\n    province_id: string;\n    district_id: string;\n    data: CentersInterface;\n  };\n}\n\nexport interface updateCenterActions {\n  type: ActionTypes.UPDATE_CENTER;\n  payload: {\n    province_id: string;\n    district_id: string;\n    examination_center_id: string;\n    center_name: string;\n  };\n}\n\nexport interface deleteCenterActions {\n  type: ActionTypes.DELETE_CENTER;\n  payload: { province_id: string; district_id: string; center_id: string };\n}\n\n// ============ ROOMS =================\nexport interface createRoomActions {\n  type: ActionTypes.CREATE_ROOM;\n  payload: {\n    province_id: string;\n    district_id: string;\n    center_id: string;\n    data: RoomsInterface;\n  };\n}\n\nexport interface updateRoomActions {\n  type: ActionTypes.UPDATE_ROOM;\n  payload: {\n    province_id: string;\n    district_id: string;\n    center_id: string;\n    room_id: string;\n    room_number: number;\n    capacity: number;\n  };\n}\n\nexport interface deleteRoomActions {\n  type: ActionTypes.DELETE_ROOM;\n  payload: {\n    province_id: string;\n    district_id: string;\n    center_id: string;\n    room_id: string;\n  };\n}\n\nexport type RoomActionType =\n  | getAllRoomActions\n  | createProvinceActions\n  | updateProvinceActions\n  | deleteProvinceActions\n  | createDistrictActions\n  | updateDistrictActions\n  | deleteDistrictActions\n  | createSectorActions\n  | updateSectorActions\n  | deleteSectorActions\n  | createCenterActions\n  | updateCenterActions\n  | deleteCenterActions\n  | createRoomActions\n  | updateRoomActions\n  | deleteRoomActions;\n\n/**\n * * ****************************** ACTIONS *****************************\n */\n\nexport const getAllRoom = (callback: Function) => {\n  return async (dispatch: Dispatch) => {\n    callback(true, \"\");\n    try {\n      const res = await axios.get<RoomLocationInterface[]>(\n        `${API.APPLICATION}/roomlocation`\n      );\n      dispatch<getAllRoomActions>({\n        type: ActionTypes.GET_ALL_ROOM,\n        payload: res.data,\n      });\n      console.log(\"====================================\");\n      console.log({ res: res.data });\n      console.log(\"====================================\");\n      callback(false, \"\", res.data);\n    } catch (error) {\n      console.error(\"Err: \", error);\n      callback(false, errorToText(error));\n    }\n  };\n};\n\nexport const FC_CreateProvince = (data: RoomLocationInterface) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<createProvinceActions>({\n      type: ActionTypes.CREATE_PROVINCE,\n      payload: data,\n    });\n  };\n};\n\nexport const FC_UpdateProvince = (data: {\n  province_id: string;\n  province_name: string;\n  provice_code: number;\n}) => {\n  console.log({ data });\n  return async (dispatch: Dispatch) => {\n    dispatch<updateProvinceActions>({\n      type: ActionTypes.UPDATE_PROVINCE,\n      payload: data,\n    });\n  };\n};\n\nexport const FC_DeleteProvince = (data: string) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<deleteProvinceActions>({\n      type: ActionTypes.DELETE_PROVINCE,\n      payload: data,\n    });\n  };\n};\n\n// DISTRICT =================\nexport const FC_CreateDistrict = (data: {\n  province_id: string;\n  data: DistrictInterface;\n}) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<createDistrictActions>({\n      type: ActionTypes.CREATE_DISTRICT,\n      payload: data,\n    });\n  };\n};\n\nexport const FC_UpdateDistrict = (data: {\n  province_id: string;\n  district_id: string;\n  district_name: string;\n  district_code: number;\n}) => {\n  console.log({ data });\n  return async (dispatch: Dispatch) => {\n    dispatch<updateDistrictActions>({\n      type: ActionTypes.UPDATE_DISTRICT,\n      payload: data,\n    });\n  };\n};\n\nexport const FC_DeleteDistrict = (data: {\n  province_id: string;\n  district_id: string;\n}) => {\n  console.log({ data });\n  return async (dispatch: Dispatch) => {\n    dispatch<deleteDistrictActions>({\n      type: ActionTypes.DELETE_DISTRICT,\n      payload: data,\n    });\n  };\n};\n\n// SECTOR =================\nexport const FC_CreateSector = (data: {\n  province_id: string;\n  district_id: string;\n  data: SectorInterface;\n}) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<createSectorActions>({\n      type: ActionTypes.CREATE_SECTOR,\n      payload: data,\n    });\n  };\n};\n\nexport const FC_UpdateSector = (data: {\n  province_id: string;\n  district_id: string;\n  sector_id: string;\n  sector_name: string;\n  sector_code: number;\n}) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<updateSectorActions>({\n      type: ActionTypes.UPDATE_SECTOR,\n      payload: data,\n    });\n  };\n};\n\nexport const FC_DeleteSector = (data: {\n  province_id: string;\n  district_id: string;\n  sector_id: string;\n}) => {\n  console.log({ data });\n  return async (dispatch: Dispatch) => {\n    dispatch<deleteSectorActions>({\n      type: ActionTypes.DELETE_SECTOR,\n      payload: data,\n    });\n  };\n};\n\n// CENTERS =================\nexport const FC_CreateCenter = (data: {\n  province_id: string;\n  district_id: string;\n  data: CentersInterface;\n}) => {\n  console.log({ data });\n  return async (dispatch: Dispatch) => {\n    dispatch<createCenterActions>({\n      type: ActionTypes.CREATE_CENTER,\n      payload: data,\n    });\n  };\n};\n\nexport const FC_UpdateCenter = (data: {\n  province_id: string;\n  district_id: string;\n  examination_center_id: string;\n  center_name: string;\n}) => {\n  console.log({ data });\n  return async (dispatch: Dispatch) => {\n    dispatch<updateCenterActions>({\n      type: ActionTypes.UPDATE_CENTER,\n      payload: data,\n    });\n  };\n};\n\nexport const FC_DeleteCenter = (data: {\n  province_id: string;\n  district_id: string;\n  center_id: string;\n}) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<deleteCenterActions>({\n      type: ActionTypes.DELETE_CENTER,\n      payload: data,\n    });\n  };\n};\n\n// ROOM =================\nexport const FC_CreateRoom = (data: {\n  province_id: string;\n  district_id: string;\n  center_id: string;\n  data: RoomsInterface;\n}) => {\n  console.log({ data });\n  return async (dispatch: Dispatch) => {\n    dispatch<createRoomActions>({\n      type: ActionTypes.CREATE_ROOM,\n      payload: data,\n    });\n  };\n};\n\nexport const FC_UpdateRoom = (data: {\n  province_id: string;\n  district_id: string;\n  center_id: string;\n  room_id: string;\n  room_number: number;\n  capacity: number;\n}) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<updateRoomActions>({\n      type: ActionTypes.UPDATE_ROOM,\n      payload: data,\n    });\n  };\n};\n\nexport const FC_DeleteRoom = (data: {\n  province_id: string;\n  district_id: string;\n  center_id: string;\n  room_id: string;\n}) => {\n  console.log({ delete_room: data });\n  return async (dispatch: Dispatch) => {\n    dispatch<deleteRoomActions>({\n      type: ActionTypes.DELETE_ROOM,\n      payload: data,\n    });\n  };\n};\n","import React, { FC, ReactElement, ReactNode } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Auth, System } from \"../../actions\";\nimport { StoreState } from \"../../reducers\";\nimport { NavToogle, PageHasSubNav } from \"../../actions\";\nimport { MdBrightness1, MdSearch } from \"react-icons/md\";\n\n// props for the component\ninterface AppProps {\n  auth: Auth;\n  system: System;\n  PageHasSubNav: Function;\n  NavToogle: Function;\n  children: ReactNode;\n}\n//\ninterface AppState {\n  loading: boolean;\n}\n\nclass _SideNavigation extends React.Component<AppProps, AppState> {\n  constructor(props: AppProps) {\n    super(props);\n\n    this.state = {\n      loading: false,\n    };\n  }\n\n  componentDidMount = () => this.props.PageHasSubNav(true);\n  componentWillUnmount = () => this.props.PageHasSubNav(false);\n\n  render() {\n    const isAuthenticated = this.props.auth.isAuthenticated;\n\n    if (isAuthenticated === false) {\n      return null;\n    }\n\n    const navActive = this.props.system.navigation;\n    return (\n      <div\n        className={`fixed w-48 p-1 pr-2 pl-6 text-gray-700 bg-white ${\n          navActive === true ? \"lg:left-16  left-16\" : \" -left-72 lg:left-16\"\n        }  top-0 bottom-0 pt-20 z-30 shadow-lg  transition-all duration-500 ease-in-out overflow-y-auto`}\n      >\n        {this.props.children}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = ({\n  auth,\n  system,\n}: StoreState): { auth: Auth; system: System } => {\n  return { auth: auth, system: system };\n};\n\nexport const SideNavigation = connect(mapStateToProps, {\n  NavToogle,\n  PageHasSubNav,\n})(_SideNavigation);\n\n//************************************ FORM SEARCH **************************************** */\n\ntype SearchComponentInterface = {\n  data: any[];\n};\n\nexport const Search: FC<SearchComponentInterface> = ({\n  data,\n}): ReactElement => {\n  return (\n    <div className=\"m-1 rounded-md shadow-md border border-blue-400 bg-white p-1 flex \">\n      <label htmlFor=\"search-text\" className=\"inline-block text-2xl\">\n        <MdSearch className=\"inline-block text-blue-400\" />\n      </label>\n      <input\n        type=\"search\"\n        className=\"outline-none bg-transparent flex-1 pl-1\"\n        placeholder=\"Search\"\n        id=\"search-text\"\n      />\n    </div>\n  );\n};\n\n//************************************ FORM SEARCH **************************************** */\n\ntype MainItemComponentInterface = {\n  title: string;\n  icon?: any;\n  active?: boolean;\n  count?: number;\n};\n\n/**\n *\n * @param param0\n * @returns\n */\nexport const MainItem: FC<MainItemComponentInterface> = ({\n  title = \"\",\n  icon = MdBrightness1,\n  active = false,\n  count = 0,\n}): ReactElement => {\n  const IconDefined = icon;\n  return (\n    <section\n      className={`${\n        active === true\n          ? \"bg-blue-500 text-white font-bold\"\n          : \"bg-blue-100 text-blue-800\"\n      } mb-1 hover:font-bold py-1 hover:bg-blue-400 hover:text-white --font-bold  px-2 rounded-md flex cursor-pointer items-center`}\n    >\n      <section className=\"flex-1\">\n        <IconDefined className=\"inline-block mr-1 text-xs\" />\n        <span>{title}</span>\n      </section>\n\n      {count > 0 ? (\n        <span className=\"px-0.5 my-1 text-xs bg-blue-600 text-white rounded-full\">\n          {count}\n        </span>\n      ) : null}\n    </section>\n  );\n};\n\n//************************************ FORM SEARCH **************************************** */\n\ntype SubItemContainerComponentInterface = {\n  children: ReactNode;\n};\n\n/**\n *\n * @param param0\n * @returns\n */\nexport const SubItemContainer: FC<SubItemContainerComponentInterface> = ({\n  children,\n}): ReactElement => {\n  return (\n    <div className=\"ml-3 overflow-y-auto border-l-2 border-blue-200 -mt-1 pt-2 mb-2 pl-1 cursor-pointer\">\n      {children}\n    </div>\n  );\n};\n\n//************************************ FORM SEARCH **************************************** */\n\ntype SubItemComponentInterface = {\n  title: string;\n  icon?: any;\n  active?: boolean;\n  count?: number;\n};\n\n/**\n *\n * @param param0\n * @returns\n * @important Remenber to use these components inside the <SubItemContainer>...</SubItemContainer>\n */\nexport const SubItem: FC<SubItemComponentInterface> = ({\n  title = \"\",\n  icon = MdBrightness1,\n  active = false,\n  count = 0,\n}): ReactElement => {\n  const IconDefined = icon;\n\n  return (\n    <div\n      className={`animate__animated animate__zoomIn animate__faster ${\n        active === true ? \"bg-blue-500 text-white font-bold\" : \" text-blue-800\"\n      } text-blue-800 bg-blue-200 rounded-md px-1 mb-1 flex items-center py-1 font-bold`}\n    >\n      <IconDefined\n        className={`inline-block mr-0.1 text-xs ${\n          active === true ? \"text-white\" : \"\"\n        }`}\n      />\n      <span\n        className={`inline-block pl-1 ${active === true ? \"text-white\" : \"\"}`}\n      >\n        {title}\n      </span>\n      {count >= 1 ? (\n        <span\n          className={`text-sm fint-bold ${active === true ? \"text-white\" : \"\"}`}\n        >\n          {count}\n        </span>\n      ) : null}\n    </div>\n  );\n};\n","import axios from \"axios\";\nimport { Dispatch } from \"redux\";\nimport { ActionTypes } from \"./types\";\nimport {\n  AccessTaskInterface,\n  PermissionInterface,\n  SystemSettingsInterface,\n} from \"../shared/interfaces\";\nimport { API } from \"../utils/api\";\nimport { setAxiosToken } from \"../utils/AxiosToken\";\nimport { errorToText } from \"../utils/errors\";\nimport { PositionAPI } from \"../interfaces/position\";\n\n/**\n * * ****************************** INTERFACES *****************************\n */\n\n// SYSTEM SETTINGS  ==============\nexport interface GetSystemSettingsAction {\n  type: ActionTypes.GET_SYSTEM_SETTINGS;\n  payload: SystemSettingsInterface[];\n}\n\nexport interface DisableSystemSettingsAction {\n  type: ActionTypes.DISABLE_SYSTEM_SETTINGS;\n  payload: {\n    system_setting_id: string;\n    status: \"enabled\" | \"disabled\";\n  };\n}\n\n// ROLE TASKS ACCESS SETTINGS ===================================\nexport interface GetTaskAccessAction {\n  type: ActionTypes.GET_TASK_ACCESS;\n  payload: AccessTaskInterface[];\n}\n\n// POSITIONS SETTINGS ===================================\nexport interface PositionCreateInterface {\n  position_id?: string;\n  position_title: string;\n  description: string;\n  school_level_id: string;\n  education_institute_id: string;\n  courses: string[];\n  requirements: {\n    user_detail_category_id: string;\n    user_detail_subcategory_id: string;\n    position_requirement: {\n      category_subcategory_data_id: string;\n      required: boolean;\n    }[];\n    required: boolean;\n  }[];\n}\nexport interface GetPositionsAction {\n  type: ActionTypes.GET_POSTIONS;\n  payload: PositionAPI[];\n}\n\nexport interface CreatePositionsAction {\n  type: ActionTypes.CREATE_POSITION;\n  payload: PositionCreateInterface;\n}\n\nexport interface UpdatePositionsAction {\n  type: ActionTypes.UPDATE_POSITION;\n  payload: PositionCreateInterface;\n}\n\nexport interface DeletePositionSettingAction {\n  type: ActionTypes.DELETE_POSITION;\n  payload: string;\n}\n\nexport interface PublishPositionAction {\n  type: ActionTypes.PUBLISH_POSITION;\n  payload: {\n    position_id: string;\n    status: boolean;\n  };\n}\n\nexport type SystemActionType =\n  | GetSystemSettingsAction\n  | DisableSystemSettingsAction\n  | GetTaskAccessAction\n  | GetPositionsAction\n  | CreatePositionsAction\n  | UpdatePositionsAction\n  | DeletePositionSettingAction\n  | PublishPositionAction;\n\n/**\n * * ****************************** ACTIONS *****************************\n */\n\nexport const getSystemSettings = (callback: Function) => {\n  return async (dispatch: Dispatch) => {\n    callback(true, \"\");\n    try {\n      setAxiosToken();\n      const res = await axios.get<SystemSettingsInterface[]>(\n        `${API.AUTH}/settings`\n      );\n      dispatch<GetSystemSettingsAction>({\n        type: ActionTypes.GET_SYSTEM_SETTINGS,\n        payload: res.data,\n      });\n      callback(false, \"\");\n    } catch (error) {\n      console.log({ code_error: error });\n      callback(false, errorToText(error));\n    }\n  };\n};\n\nexport const disableSystemSetting = (data: {\n  system_setting_id: string;\n  status: \"enabled\" | \"disabled\";\n}) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<DisableSystemSettingsAction>({\n      type: ActionTypes.DISABLE_SYSTEM_SETTINGS,\n      payload: data,\n    });\n  };\n};\n\n// ============================ tasks access =======================\n\nexport const GetTaskAccess = (callback: Function) => {\n  return async (dispatch: Dispatch) => {\n    callback(true, \"\");\n    try {\n      setAxiosToken();\n      const res = await axios.get<\n        {\n          id: string;\n          title: string;\n          key: string;\n          permitted: PermissionInterface;\n        }[]\n      >(`${API.AUTH}/allroleaccess`);\n      let response: AccessTaskInterface[] = res.data.map((data) => ({\n        id: data.id,\n        task: data.title,\n        key: data.key,\n        permitted: data.permitted,\n      }));\n      dispatch<GetTaskAccessAction>({\n        type: ActionTypes.GET_TASK_ACCESS,\n        payload: response,\n      });\n      callback(false, \"\", response);\n    } catch (error) {\n      console.log({ code_error: error });\n      callback(false, errorToText(error));\n    }\n  };\n};\n\n// ============================ positions =======================\n\nexport const getPositions = (callback: Function) => {\n  return async (dispatch: Dispatch) => {\n    callback(true, \"\");\n    try {\n      setAxiosToken();\n      const res = await axios.get<PositionAPI[]>(`${API.APPLICATION}/position`);\n      dispatch<GetPositionsAction>({\n        type: ActionTypes.GET_POSTIONS,\n        payload: res.data,\n      });\n      callback(false, \"\");\n    } catch (error) {\n      console.log({ code_error: error });\n      callback(false, errorToText(error));\n    }\n  };\n};\n\nexport const createPosition = (data: PositionCreateInterface) => {\n  console.log({ createPosition: data });\n  return async (dispatch: Dispatch) => {\n    dispatch<CreatePositionsAction>({\n      type: ActionTypes.CREATE_POSITION,\n      payload: data,\n    });\n  };\n};\n\nexport const updatePosition = (data: PositionCreateInterface) => {\n  console.log({ updatePosition: data });\n  return async (dispatch: Dispatch) => {\n    dispatch<UpdatePositionsAction>({\n      type: ActionTypes.UPDATE_POSITION,\n      payload: data,\n    });\n  };\n};\n\nexport const deletePosition = (data: string) => {\n  console.log({ deletePosition: data });\n  return async (dispatch: Dispatch) => {\n    dispatch<DeletePositionSettingAction>({\n      type: ActionTypes.DELETE_POSITION,\n      payload: data,\n    });\n  };\n};\n\nexport const publishPosition = (data: {\n  position_id: string;\n  status: boolean;\n}) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<PublishPositionAction>({\n      type: ActionTypes.PUBLISH_POSITION,\n      payload: data,\n    });\n  };\n};\n","import { Dispatch } from \"redux\";\nimport { ActionTypes } from \"./types\";\nimport { data_school } from \"../shared/dataTest\";\nimport {\n  MySchoolInterface,\n  PostSchoolInterface,\n  SchoolInfoInterface,\n  SchoolsInterface,\n} from \"../shared/interfaces\";\nimport { setAxiosToken } from \"../utils/AxiosToken\";\nimport axios from \"axios\";\nimport { API } from \"../utils/api\";\nimport { errorToText } from \"../utils/errors\";\nimport { placedCandidateInterface } from \"../interfaces/marks_publication\";\n\n/**\n * * ****************************** INTERFACES *****************************\n */\n\nexport interface GetSchoolsAction {\n  type: ActionTypes.GET_SCHOOLS;\n  payload: SchoolsInterface[];\n}\n\nexport interface GetSchoolByIdAction {\n  type: ActionTypes.GET_SCHOOLS_BY_ID;\n  payload: MySchoolInterface;\n}\n\nexport interface GetSchoolsInfoAction {\n  type: ActionTypes.GET_SCHOOLS_INFO;\n  payload: SchoolInfoInterface[];\n}\n\nexport interface CreateSchoolAction {\n  type: ActionTypes.CREATE_SCHOOL;\n  payload: SchoolsInterface;\n}\n\nexport interface UpdateSchoolAction {\n  type: ActionTypes.UPDATE_SCHOOL;\n  payload: SchoolsInterface;\n}\n\nexport interface DeleteSchoolAction {\n  type: ActionTypes.DELETE_SCHOOL;\n  payload: string;\n}\n\n// School Posts interfaces\nexport interface FetchSchoolPostsAction {\n  type: ActionTypes.FETCH_SCHOOL_POSTS;\n  payload: PostSchoolInterface[];\n}\n\n// School Placements interfaces\nexport interface GetSchoolPlacementAction {\n  type: ActionTypes.GET_SCHOOL_PLACEMENT;\n  payload: placedCandidateInterface[];\n}\n\n// District School Placements interfaces\nexport interface GetDistrictPlacementAction {\n  type: ActionTypes.GET_DISTRICT_PLACEMENT;\n  payload: placedCandidateInterface[];\n}\n\n// District School Placements interfaces\nexport interface GetSessionPlacementAction {\n  type: ActionTypes.GET_SESSION_PLACEMENT;\n  payload: placedCandidateInterface[];\n}\n\nexport interface FetchDistrictPostsAction {\n  type: ActionTypes.FETCH_DISTRICT_POSTS;\n  payload: PostSchoolInterface[];\n}\n\nexport interface CreateSchoolPostAction {\n  type: ActionTypes.CREATE_SCHOOL_POST;\n  payload: PostSchoolInterface;\n}\n\nexport interface UpdateSchoolPostAction {\n  type: ActionTypes.UPDATE_SCHOOL_POST;\n  payload: {\n    TYPE: \"DISTRICT\" | \"SCHOOL\" | \"RECEIVED\";\n    data: PostSchoolInterface;\n  };\n}\n\nexport interface DeleteSchoolPostAction {\n  type: ActionTypes.DELETE_SCHOOL_POST;\n  payload: PostSchoolInterface[];\n}\n\nexport type SchoolActionType =\n  | GetSchoolsAction\n  | GetSchoolByIdAction\n  | GetSchoolsInfoAction\n  | CreateSchoolAction\n  | UpdateSchoolAction\n  | DeleteSchoolAction\n  | FetchSchoolPostsAction\n  | GetSchoolPlacementAction\n  | FetchDistrictPostsAction\n  | CreateSchoolPostAction\n  | UpdateSchoolPostAction\n  | DeleteSchoolPostAction\n  | GetDistrictPlacementAction\n  | GetSessionPlacementAction;\n\n/**\n * * ****************************** ACTIONS *****************************\n */\n\nexport const getSchools = (callback: Function) => {\n  callback(true, \"\");\n  return async (dispatch: Dispatch) => {\n    try {\n      const res = await axios.get<SchoolsInterface[]>(\n        `${API.APPLICATION}/schools`\n      );\n      dispatch<GetSchoolsAction>({\n        type: ActionTypes.GET_SCHOOLS,\n        payload: res.data,\n      });\n      callback(false, \"\", res.data);\n    } catch (error) {\n      console.log(\"Err: \", error);\n      callback(false, errorToText(error));\n    }\n  };\n};\n\nexport const getSchoolById = (schoolId: string, callback: Function) => {\n  return async (dispatch: Dispatch) => {\n    callback(true, \"\");\n    try {\n      const res = await axios.get<MySchoolInterface>(\n        `${API.APPLICATION}/schools/${schoolId}`\n      );\n      dispatch<GetSchoolByIdAction>({\n        type: ActionTypes.GET_SCHOOLS_BY_ID,\n        payload: res.data,\n      });\n      callback(false, \"\", res.data);\n    } catch (error) {\n      console.log(\"Err: \", error);\n      callback(false, errorToText(error));\n    }\n  };\n};\n\nexport const getSchoolsInfo = () => {\n  return async (dispatch: Dispatch) => {\n    setAxiosToken();\n    // const response = await axios.get<AccessRoleType[]>(url);\n\n    dispatch<GetSchoolsInfoAction>({\n      type: ActionTypes.GET_SCHOOLS_INFO,\n      payload: data_school,\n      // payload: response.data,\n    });\n  };\n};\n\nexport const createSchool = (data: SchoolsInterface) => {\n  console.log({ schools: data });\n  return async (dispatch: Dispatch) => {\n    dispatch<CreateSchoolAction>({\n      type: ActionTypes.CREATE_SCHOOL,\n      payload: data,\n    });\n  };\n};\n\nexport const updateSchool = (data: SchoolsInterface) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<UpdateSchoolAction>({\n      type: ActionTypes.UPDATE_SCHOOL,\n      payload: data,\n    });\n  };\n};\n\nexport const deleteSchool = (data: string) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<DeleteSchoolAction>({\n      type: ActionTypes.DELETE_SCHOOL,\n      payload: data,\n    });\n  };\n};\n\nexport const fetchSchoolPosts = (school_id: string, callback: Function) => {\n  return async (dispatch: Dispatch) => {\n    callback(true, \"\");\n    try {\n      const res = await axios.get<PostSchoolInterface[]>(\n        `${API.PLACEMENT}/requestpost/school/${school_id}`\n      );\n\n      console.log({ schoolPosts: res.data });\n\n      dispatch<FetchSchoolPostsAction>({\n        type: ActionTypes.FETCH_SCHOOL_POSTS,\n        payload: res.data,\n      });\n      callback(false, \"\");\n    } catch (error) {\n      console.log(\"Err: \", error);\n      callback(false, errorToText(error));\n    }\n  };\n};\n\nexport const getSchoolPlacement = (school_id: string, callback: Function) => {\n  return async (dispatch: Dispatch) => {\n    callback(true, \"\");\n    try {\n      const res = await axios.get<placedCandidateInterface[]>(\n        `${API.PLACEMENT}/placedcandidate/school/${school_id}`\n      );\n\n      console.log({ getSchoolPlacement: res.data });\n\n      dispatch<GetSchoolPlacementAction>({\n        type: ActionTypes.GET_SCHOOL_PLACEMENT,\n        payload: res.data,\n      });\n      callback(false, \"\", res.data);\n    } catch (error) {\n      console.log(\"Err: \", error);\n      callback(false, errorToText(error));\n    }\n  };\n};\n\nexport const createSchoolPost = (data: PostSchoolInterface) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<CreateSchoolPostAction>({\n      type: ActionTypes.CREATE_SCHOOL_POST,\n      payload: data,\n    });\n  };\n};\n\nexport const updateSchoolPost = (\n  TYPE: \"DISTRICT\" | \"SCHOOL\" | \"RECEIVED\",\n  data: PostSchoolInterface\n) => {\n  console.log({ TYPE, data });\n  return async (dispatch: Dispatch) => {\n    dispatch<UpdateSchoolPostAction>({\n      type: ActionTypes.UPDATE_SCHOOL_POST,\n      payload: { TYPE, data },\n    });\n  };\n};\n\nexport const deleteSchoolPost = (data: PostSchoolInterface[]) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<DeleteSchoolPostAction>({\n      type: ActionTypes.DELETE_SCHOOL_POST,\n      payload: data,\n    });\n  };\n};\n\nexport const fetchDistrictPosts = (district_id: string, callback: Function) => {\n  return async (dispatch: Dispatch) => {\n    callback(true, \"\");\n    try {\n      const res = await axios.get<PostSchoolInterface[]>(\n        `${API.PLACEMENT}/requestpost/district/${district_id}`\n      );\n\n      console.log(\"====================================\");\n      console.log({ fetchDistrictPosts: res });\n      console.log(\"====================================\");\n\n      dispatch<FetchDistrictPostsAction>({\n        type: ActionTypes.FETCH_DISTRICT_POSTS,\n        payload: res.data,\n      });\n      callback(false, \"\");\n    } catch (error) {\n      console.log(\"Err: \", error);\n      callback(false, errorToText(error));\n    }\n  };\n};\n\nexport const getDistrictPlacement = (\n  district_id: string,\n  callback: Function\n) => {\n  return async (dispatch: Dispatch) => {\n    callback(true, \"\");\n    try {\n      const res = await axios.get<placedCandidateInterface[]>(\n        `${API.PLACEMENT}/placedcandidate/district/${district_id}`\n      );\n\n      console.log(\"====================================\");\n      console.log({ getDistrictPlacement: res.data });\n      console.log(\"====================================\");\n\n      dispatch<GetDistrictPlacementAction>({\n        type: ActionTypes.GET_DISTRICT_PLACEMENT,\n        payload: res.data,\n      });\n      callback(false, \"\", res.data);\n    } catch (error) {\n      console.log(\"Err: \", error);\n      callback(false, errorToText(error));\n    }\n  };\n};\n\nexport const getSessionPlacement = (session_id: string, callback: Function) => {\n  return async (dispatch: Dispatch) => {\n    callback(true, \"\");\n    try {\n      const res = await axios.get<placedCandidateInterface[]>(\n        `${API.PLACEMENT}/placedcandidate/session/${session_id}`\n      );\n\n      console.log(\"====================================\");\n      console.log({ getSessionPlacement: res.data });\n      console.log(\"====================================\");\n\n      dispatch<GetSessionPlacementAction>({\n        type: ActionTypes.GET_SESSION_PLACEMENT,\n        payload: res.data,\n      });\n      callback(false, \"\", res.data);\n    } catch (error) {\n      console.log(\"Err: \", error);\n      callback(false, errorToText(error));\n    }\n  };\n};\n","import React from \"react\";\nimport * as FileSaver from \"file-saver\";\nimport * as XLSX from \"xlsx\";\nimport { RiFileExcel2Fill } from \"react-icons/ri\";\n\ninterface ExportToExcelProps {\n  fileData: any[];\n  fileName: string;\n  btnName?: string;\n  className?: string;\n  showIcon?: boolean;\n}\n\nconst ExportToExcel: React.FC<ExportToExcelProps> = ({\n  fileData,\n  fileName,\n  btnName = \"Excel\",\n  className = \"flex items-center gap-1 px-4 py-1 rounded text-green-700 bg-white border hover:text-white hover:bg-green-700 border-green-700 font-bold\",\n  showIcon = true,\n}) => {\n  const fileType =\n    \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;charset=UTF-8\";\n  const fileExtension = \".xlsx\";\n\n  const exportToCSV = (apiData: any[], fileName: string) => {\n    const ws = XLSX.utils.json_to_sheet(apiData);\n    const wb = { Sheets: { data: ws }, SheetNames: [\"data\"] };\n    const excelBuffer = XLSX.write(wb, { bookType: \"xlsx\", type: \"array\" });\n    const data = new Blob([excelBuffer], { type: fileType });\n    FileSaver.saveAs(data, fileName + fileExtension);\n  };\n\n  return (\n    <button\n      onClick={(e) => exportToCSV(fileData, fileName)}\n      className={className}\n    >\n      {showIcon && <RiFileExcel2Fill />}\n      {btnName}\n    </button>\n  );\n};\n\nexport default ExportToExcel;\n","import React from \"react\";\n\ntype TableLoadingProps = {\n  cols: number;\n};\nconst TableLoading: React.FC<TableLoadingProps> = (props) => {\n  const displayCols = (): JSX.Element[] => {\n    let colsArray: number[] = [];\n    for (let index = 0; index < props.cols; index++) {\n      colsArray.push(index);\n    }\n    let result = colsArray.map((element) => {\n      return (\n        <td className=\"p-3 text-center whitespace-nowrap\" key={element}>\n          <div className=\"w-full h-4 rounded bg-gray-200 animate__animated animate__pulse animate__delay-5s animate__infinite\"></div>\n        </td>\n      );\n    });\n\n    return result;\n  };\n  return (\n    <>\n      <tr className=\"border-b border-gray-200\" key={228}>\n        {displayCols()}\n      </tr>\n      <tr className=\"border-b border-gray-200\" key={22648}>\n        {displayCols()}\n      </tr>\n      <tr className=\"border-b border-gray-200\" key={229768}>\n        {displayCols()}\n      </tr>\n    </>\n  );\n};\n\nexport default TableLoading;\n","export default __webpack_public_path__ + \"static/media/mineduc.11a9ae1c.png\";","import jsPDF from \"jspdf\";\nimport { DATE } from \"../../utils/functions\";\nimport Logo from \"../../utils/mineduc.png\";\nrequire(\"jspdf-autotable\");\n\nexport const addFooters = (doc: any) => {\n  const pageCount = doc.internal.getNumberOfPages();\n\n  doc.setFont(\"helvetica\", \"italic\");\n  doc.setFontSize(8);\n  for (var i = 1; i <= pageCount; i++) {\n    doc.setPage(i);\n    doc.text(\n      \"Page \" + String(i) + \" of \" + String(pageCount),\n      doc.internal.pageSize.width / 2,\n      297,\n      {\n        align: \"center\",\n      }\n    );\n  }\n};\n\nexport type reportSettingsInterface = {\n  doneBy: string;\n  title: string;\n  subjectTitle: string;\n  subject: string;\n  institute: string;\n  period: string;\n  footer: string;\n  orientation?: \"p\" | \"l\";\n};\n\nexport const generatePDF = async (\n  reportSettings: reportSettingsInterface,\n  table: HTMLElement,\n  callBack: (status: boolean) => void\n) => {\n  callBack(true);\n  const orientation: \"p\" | \"l\" = reportSettings.orientation\n    ? reportSettings.orientation\n    : \"p\";\n  var lMargin: number = 20; //left margin in mm\n  var rMargin: number = 20; //right margin in mm\n  var pdfInMM: number = 185; // width of A4 in mm\n\n  //   var doc = new jsPDF(\"p\", \"mm\", \"a4\");\n  var doc: any = new jsPDF(orientation, \"mm\", \"a4\");\n\n  doc.setTextColor(95, 95, 95);\n  doc.setFontSize(28);\n  // doc.text(\n  //   this.props.reportTitle,\n  //   doc.internal.pageSize.getWidth() / 2,\n  //   30,\n  //   undefined,\n  //   \"center\"\n  // );\n  doc.addImage(Logo, \"png\", 20, 20, 10, 10);\n  doc.text(\"MINEDUC\", 32, 28.5, undefined, \"left\");\n  //   doc.setTextColor(19, 90, 152);\n  doc.setFontSize(26);\n  doc.text(\n    reportSettings.title,\n    doc.internal.pageSize.getWidth() / 2,\n    42.7,\n    undefined,\n    \"center\"\n  );\n\n  doc.setFontSize(20);\n  doc.text(\n    reportSettings.institute,\n    doc.internal.pageSize.getWidth() / 2,\n    53.7,\n    undefined,\n    \"center\"\n  );\n\n  var lines;\n  lines = doc.splitTextToSize(\n    reportSettings.subject,\n    pdfInMM - lMargin - rMargin\n  );\n  // if (reportSettings.position) {\n  // } else if (reportSettings.subject) {\n  //   lines = doc.splitTextToSize(\n  //     reportSettings.subject,\n  //     pdfInMM - lMargin - rMargin\n  //   );\n  // }\n\n  //   doc.setTextColor(0, 123, 255);\n  doc.setFontSize(16);\n  //   doc.text(lines, doc.internal.pageSize.getWidth() / 2, 45, {\n  //     maxWidth: 85,\n  //     align: \"center\",\n  //   });\n\n  var y = 63,\n    width;\n  doc.setTextColor(95, 95, 95);\n  doc.text(`${reportSettings.subjectTitle}: `, lMargin, y);\n  width = doc.getTextWidth(`${reportSettings.subjectTitle}: `);\n  // if (reportSettings.position) {\n  // } else if (reportSettings.position) {\n  //   doc.text(`Subject: `, lMargin, y);\n  //   width = doc.getTextWidth(\"Subject: \");\n  // }\n  // doc.setFontType(\"bold\");\n  doc.setTextColor(38, 38, 38);\n  for (var i = 0; i < lines.length; i++) {\n    if (y > 280) {\n      y = 10;\n      doc.addPage();\n    }\n    // doc.text(15, y, lines[i]);\n    doc.text(lines[i], lMargin + width, y);\n    y = y + 7;\n  }\n  doc.setTextColor(95, 95, 95);\n  doc.text(\"Period: \", lMargin, y + 3);\n  width = doc.getTextWidth(\"Period: \");\n  doc.setTextColor(38, 38, 38);\n  doc.text(reportSettings.period, lMargin + width, y + 3);\n\n  doc.autoTable({\n    html: table,\n    startY: 85,\n    margin: { horizontal: 20 },\n    cellPadding: 3, // Horizontal cell padding\n    // fontSize: 12,\n    rowHeight: 20,\n    // styles: { overflow: \"linebreak\" },\n    bodyStyles: { valign: \"top\" },\n    columnStyles: { email: { cellWidth: \"wrap\" } },\n    theme: \"striped\",\n    tableWidth: true,\n  });\n\n  doc.setFontSize(12);\n  let finalY = doc.lastAutoTable.finalY; // The y position on the page\n  doc.text(`Reported by: ${reportSettings.doneBy}`, lMargin, finalY + 15);\n  doc.text(\n    \"Report downloaded on \" + DATE(new Date().toString()),\n    lMargin,\n    finalY + 23\n  );\n\n  addFooters(doc);\n  await doc\n    .save(\n      `${\n        reportSettings.title +\n        \": \" +\n        reportSettings.subject +\n        \": \" +\n        reportSettings.period\n      }.pdf`,\n      { returnPromise: true }\n    )\n    .then(callBack(false));\n};\n","export interface marksPublicationInterface {\n  publication_id: string;\n  session: string;\n  doneby: string;\n  created_date: string;\n  publication_status: \"PENDING\" | \"PUBLISHED\";\n  status: number;\n  publication_position_marks: publicationInterface[];\n  createdAt: string;\n  updatedAt: string;\n}\n\nexport interface publicationInterface {\n  _id: string;\n  position: string;\n  marks: number;\n  comment: string;\n}\n\nexport interface marksPublicationFormInterface {\n  session: string;\n  doneby: string;\n  created_date: string;\n  publication_position_marks: publicationFormInterface[];\n}\n\nexport interface publicationFormInterface {\n  position: string;\n  marks: number;\n  comment: string;\n}\n\nexport enum MarksPublicationCandidateStatus {\n  Failed = \"Failed\",\n  Passed = \"Passed\",\n}\n\nexport interface MarksPublicationCandidate {\n  user: {\n    in_eduction: boolean;\n    disability: boolean;\n    is_active: boolean;\n    n_id: string;\n    phone_number: string;\n    email: string;\n    createdAt: string;\n    updatedAt: string;\n    user_id: string;\n    user_info: placedCandidateUserInfo;\n  };\n  period: string;\n  position: string;\n  courses: {\n    id: string;\n    marks: number;\n    _id: string;\n  }[];\n  waiting_status: MarksPublicationCandidateStatus;\n  status: number;\n  user_position_marks: number;\n  createdAt: string;\n  updatedAt: string;\n  disability: boolean;\n  gender: string;\n  in_education: boolean;\n  id: string;\n}\n\nexport interface MarksPublicationCandidateToPrintInterface {\n  no: number;\n  names: string;\n  national_id: string;\n  phone: string;\n  email: string;\n  gender: string;\n  position_name: string;\n  marks: number;\n  status: MarksPublicationCandidateStatus;\n}\n\nexport enum marksPublicationCandidateReportContentKeyInterface {\n  applicant_name = \"names\",\n  national_id = \"national_id\",\n  phone_number = \"phone\",\n  email = \"email\",\n  gender = \"gender\",\n  position_name = \"position_name\",\n  marks = \"marks\",\n  status = \"status\",\n}\n\nexport interface marksPublicationReportContentInterface {\n  key: marksPublicationCandidateReportContentKeyInterface;\n  title: string;\n  status: boolean;\n}\n// ---------------------------------------------------------------------------------------------\n\nexport interface placedCandidateInterface {\n  _id: string;\n  status: PlacedCandidateStatus;\n  user_id: string;\n  school_id: string;\n  position_id: string;\n  waiting_list_id: string;\n  request_id: string;\n  createdAt: string;\n  comment: string;\n  updatedAt: string;\n  __v: number;\n  n_id: string;\n  phone_number: string;\n  email: string;\n  user_info: placedCandidateUserInfo;\n  school: {\n    _id: string;\n    school_name: string;\n    school_code: string;\n    province_id: string;\n    province_code: string;\n    district_id: {\n      _id: string;\n      district_name: string;\n    };\n    district_code: string;\n    sector_code: string;\n    sector_id: string;\n    school_status: string;\n    status: number;\n    createdAt: string;\n    updatedAt: string;\n  };\n}\n\nexport interface placedCandidateUserInfo {\n  document_type: string;\n  issue_number: string;\n  date_of_issue: string;\n  date_of_expiry: string;\n  place_of_issue: string;\n  application_number: string;\n  fname: string;\n  lname: string;\n  father_names: string;\n  mother_names: string;\n  sex: string;\n  date_of_birth: string;\n  place_of_birth: string;\n  country_of_birth: string;\n  village_id: string;\n  village: string;\n  cell: string;\n  sector: string;\n  district: string;\n  province: string;\n  civil_status: string;\n  spouse: null;\n  status: string;\n  photo: string;\n}\n\nexport enum PlacedCandidateStatus {\n  PENDING = \"pending\",\n  PLACED = \"placed\",\n  REJECTED = \"rejected\",\n}\n\nexport interface PlacementToPrintInterface {\n  no: number;\n  names: string;\n  national_id: string;\n  phone: string;\n  email: string;\n  school_name: string;\n  position_name: string;\n  status: PlacedCandidateStatus;\n}\n\nexport enum placementReportContentKeyInterface {\n  applicant_name = \"names\",\n  national_id = \"national_id\",\n  phone_number = \"phone\",\n  email = \"email\",\n  school_name = \"school_name\",\n  position_name = \"position_name\",\n  status = \"status\",\n}\n\nexport interface placementReportContentInterface {\n  key: placementReportContentKeyInterface;\n  title: string;\n  status: boolean;\n}\n","import React, { Component, Fragment } from \"react\";\nimport { IoFilter } from \"react-icons/io5\";\nimport {\n  MdCheckBox,\n  MdCheckBoxOutlineBlank,\n  MdLocationOn,\n  MdSearch,\n} from \"react-icons/md\";\nimport { connect } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport { Auth, PushPopupAlert } from \"../../../actions\";\nimport searchData from \"../../../utils/search\";\nimport { getAllRoom } from \"../../../actions/location\";\nimport { getDistrictPlacement, getSchools } from \"../../../actions/schools\";\nimport { getPositions } from \"../../../actions/settings\";\nimport { PopupAlertData } from \"../../../components/Alert/Popup\";\nimport Modal, { ModalSize, Themes } from \"../../../components/Modal/Modal\";\nimport { PositionAPI } from \"../../../interfaces\";\nimport {\n  placedCandidateInterface,\n  PlacedCandidateStatus,\n  placementReportContentInterface,\n  placementReportContentKeyInterface,\n  PlacementToPrintInterface,\n} from \"../../../interfaces/marks_publication\";\nimport { PopupAlertTheme } from \"../../../interfaces/popupAlert\";\nimport { StoreState } from \"../../../reducers\";\nimport {\n  capitalizeFirstLetter,\n  isEmptyOrSpaces,\n} from \"../../../shared/dataTest\";\nimport {\n  DistrictInterface,\n  RoomLocationInterface,\n} from \"../../../shared/interfaces\";\nimport {\n  generatePDF,\n  reportSettingsInterface,\n} from \"../../../components/DownloadPDF/rest\";\nimport { BiExport, BiSort } from \"react-icons/bi\";\nimport {\n  MainItem,\n  SideNavigation,\n} from \"../../../components/Navigation/SideNavigation\";\nimport { FiEdit } from \"react-icons/fi\";\nimport TableLoading from \"../../../components/Loading/TableLoading\";\nimport { ImFilesEmpty } from \"react-icons/im\";\nimport { search, sortThisArray } from \"../../../utils/functions\";\nimport Loading from \"../../../components/Loading/Loading\";\nimport ExportToExcel from \"../../../utils/ExportToExcel\";\n\nconst defaultReportContent: placementReportContentInterface[] = [\n  {\n    key: placementReportContentKeyInterface.applicant_name,\n    title: \"Applicant name\",\n    status: true,\n  },\n  {\n    key: placementReportContentKeyInterface.national_id,\n    title: \"National ID\",\n    status: true,\n  },\n  {\n    key: placementReportContentKeyInterface.email,\n    title: \"Email\",\n    status: true,\n  },\n  {\n    key: placementReportContentKeyInterface.phone_number,\n    title: \"Phone\",\n    status: true,\n  },\n  {\n    key: placementReportContentKeyInterface.position_name,\n    title: \"Position\",\n    status: true,\n  },\n  {\n    key: placementReportContentKeyInterface.school_name,\n    title: \"School name\",\n    status: true,\n  },\n  {\n    key: placementReportContentKeyInterface.status,\n    title: \"Status\",\n    status: true,\n  },\n];\n\ninterface PlacementReportProps {\n  //   REDUX ############################\n  auth: Auth;\n  districtPlacements: placedCandidateInterface[] | null;\n  systemPositions: PositionAPI[] | null;\n  locations: RoomLocationInterface[];\n  getDistrictPlacement: Function;\n  getSchools: Function;\n  getPositions: Function;\n  getAllRoom: Function;\n  PushPopupAlert: (alert: PopupAlertData) => void;\n}\n\ninterface PlacementReportState {\n  loading: boolean;\n  loadingData: boolean;\n  selectedStatus: PlacedCandidateStatus | \"all\";\n  selectAll: boolean;\n  // reportMainData: centerReportInterface[] | null;\n  selectedDistrict: DistrictInterface | null;\n  reportContentExport: placementReportContentInterface[];\n  reportTitle: string;\n  dataToPrint: PlacementToPrintInterface[] | null;\n  sortProperty: string;\n  isSorted: boolean;\n  sortOrder: \"ASC\" | \"DESC\";\n  searchInput: string;\n  searchDistrict: string;\n  generateReportModal: {\n    reportType: \"EXCEL\" | \"PDF\";\n    status: boolean;\n  } | null;\n  formError: {\n    element: string;\n    msg: string;\n  } | null;\n  // selectedDistrict: roomDistrictInterface | \"all\";\n  chooseDistrict: boolean;\n  downloading: boolean;\n}\n\nexport class _PlacementReport extends Component<\n  PlacementReportProps,\n  PlacementReportState\n> {\n  constructor(props: PlacementReportProps) {\n    super(props);\n\n    this.state = {\n      loading: true,\n      loadingData: true,\n      selectedStatus: \"all\",\n      selectAll: false,\n      selectedDistrict: null,\n      // selectedReportTitle: centerReportTitleType;\n      // reportMainData: centerReportInterface[] | null;\n      reportContentExport: defaultReportContent,\n      reportTitle: \"\",\n      dataToPrint: null,\n      sortProperty: \"\",\n      isSorted: false,\n      sortOrder: \"ASC\",\n      searchInput: \"\",\n      searchDistrict: \"\",\n      generateReportModal: null,\n      formError: null,\n      // selectedDistrict: roomDistrictInterface | \"all\";\n      chooseDistrict: true,\n      downloading: false,\n    };\n  }\n\n  setLoading = (status: boolean) => {\n    this.setState({ loading: status });\n  };\n\n  setLoadingData = (status: boolean) => {\n    this.setState({ loadingData: status });\n  };\n\n  setSelectAll = (status: boolean) => {\n    this.setState({ selectAll: status });\n  };\n\n  setSelectedDistrict = (value: DistrictInterface | null) => {\n    this.setState({ selectedDistrict: value });\n  };\n\n  setReportTitle = (thisTitle: string) => {\n    this.setState({ reportTitle: thisTitle });\n  };\n\n  setFormError = (\n    data: {\n      element: string;\n      msg: string;\n    } | null\n  ) => {\n    this.setState({ formError: data });\n  };\n\n  setSortOrder = (thisOrder: \"ASC\" | \"DESC\") => {\n    this.setState({ sortOrder: thisOrder });\n  };\n\n  setSortProperty = (thisProperty: string) => {\n    this.setState({ sortProperty: thisProperty });\n  };\n\n  setIsSorted = (status: boolean) => {\n    this.setState({ isSorted: status });\n  };\n\n  setGenerateReportModal = (\n    data: {\n      reportType: \"EXCEL\" | \"PDF\";\n      status: boolean;\n    } | null\n  ) => {\n    this.setState({ generateReportModal: data });\n  };\n\n  setDownloading = (value: boolean) => {\n    this.setState({ downloading: value });\n  };\n\n  distinctDistrict = (\n    location: RoomLocationInterface[],\n    province_id?: string\n  ): DistrictInterface[] => {\n    let ids: string[] = [],\n      result: DistrictInterface[] = [];\n\n    if (province_id) {\n      result = location.find((item) => item._id === province_id)\n        ? location.find((item) => item._id === province_id)!.districts\n          ? location.find((item) => item._id === province_id)!.districts\n          : []\n        : [];\n    } else {\n      for (const key in location) {\n        if (Object.prototype.hasOwnProperty.call(location, key)) {\n          for (const keyDistrict in location[key].districts) {\n            if (\n              Object.prototype.hasOwnProperty.call(\n                location[key].districts,\n                keyDistrict\n              )\n            ) {\n              if (!ids.includes(location[key].districts[keyDistrict]._id)) {\n                ids.push(location[key].districts[keyDistrict]._id);\n                result.push(location[key].districts[keyDistrict]);\n              }\n            }\n          }\n        }\n      }\n    }\n\n    return result;\n  };\n\n  setSort = (thisProperty: string) => {\n    if (\n      this.state.sortProperty === thisProperty &&\n      this.state.sortOrder === \"ASC\"\n    ) {\n      this.setSortOrder(\"DESC\");\n    } else {\n      this.setSortOrder(\"ASC\");\n    }\n    this.setSortProperty(thisProperty);\n    this.setIsSorted(true);\n  };\n\n  loadPlacementData = (thisDistrict: DistrictInterface) => {\n    this.props.getDistrictPlacement(\n      thisDistrict._id,\n      (status: boolean, errorMsg: string) => {\n        this.setLoadingData(status);\n        if (!status && !isEmptyOrSpaces(errorMsg)) {\n          this.props.PushPopupAlert({\n            title: errorMsg,\n            theme: PopupAlertTheme.warning,\n          });\n        }\n      }\n    );\n  };\n\n  componentDidMount = () => {\n    if (this.props.systemPositions === null) {\n      this.props.getPositions((status: boolean, msg: string) => {\n        this.setLoading(status);\n        console.log({ status: status, msg: msg });\n        if (msg.length) {\n          this.props.PushPopupAlert({\n            title: msg,\n            theme: PopupAlertTheme.danger,\n          });\n        }\n      });\n    } else if (this.state.loading) {\n      this.setLoading(false);\n    }\n\n    if (this.props.locations.length === 0) {\n      this.props.getAllRoom(\n        (status: boolean, msg: string, data?: RoomLocationInterface[]) => {\n          this.setLoading(status);\n          if (!status && msg.length > 0) {\n            console.log(msg);\n          }\n        }\n      );\n    } else {\n      this.setLoading(false);\n    }\n  };\n\n  FC_GeneratePDF = () => {\n    if (!document.querySelectorAll(\"#report_content tbody tr\").length) {\n      this.props.PushPopupAlert({\n        title: `Can't generate Report of empty Data`,\n        theme: PopupAlertTheme.warning,\n      });\n      return false;\n    }\n\n    if (this.state.selectedDistrict) {\n      const table: HTMLElement | null =\n        document.getElementById(\"report_content\");\n      const reportSettings: reportSettingsInterface = {\n        doneBy: this.props.auth.user.fname + \" \" + this.props.auth.user.lname,\n        title: \"Placement Report\",\n        subjectTitle: `${this.state.selectedDistrict.district_name} district`,\n        subject: \"All room\",\n        period: \"All session\",\n        footer: \"Online Recruitment\",\n        institute: \"All institute\",\n      };\n      table && generatePDF(reportSettings, table, this.setDownloading);\n    }\n  };\n\n  updateContentToPrint = () => {\n    // UPDATE REPORT TITLE ========================\n    if (this.state.selectedDistrict) {\n      let title =\n        \"Room Report - \" +\n        this.state.selectedDistrict.district_name +\n        \" district\";\n      // if (this.state.selectedSession) {\n      //   title =\n      //     \"Room Report \" +\n      //     this.state.selectedDistrict.district_name +\n      //     \" district - \" +\n      //     this.state.selectedSession.session_plan_name;\n      // }\n      this.setReportTitle(title);\n    }\n    // UPDATE CONTENT =============================\n    if (this.props.districtPlacements) {\n      let arrayNew: PlacementToPrintInterface[] = [];\n      let n: number = 1;\n      for (const key in this.props.districtPlacements) {\n        if (\n          Object.prototype.hasOwnProperty.call(\n            this.props.districtPlacements,\n            key\n          )\n        ) {\n          let thisPosition = this.props.systemPositions\n            ? this.props.systemPositions.find(\n                (item) =>\n                  item.position_id ===\n                  this.props.districtPlacements![key].position_id\n              )\n            : undefined;\n          let dataArray: PlacementToPrintInterface | null = null;\n          dataArray = {\n            no: n,\n            names:\n              this.props.districtPlacements![key].user_info.fname +\n              \" \" +\n              this.props.districtPlacements![key].user_info.lname,\n            national_id: this.props.districtPlacements![key].n_id,\n            phone: this.props.districtPlacements![key].phone_number,\n            email: this.props.districtPlacements![key].email,\n            school_name: this.props.districtPlacements![key].school\n              ? this.props.districtPlacements![key].school.school_name\n              : \"\",\n            position_name: thisPosition ? thisPosition.position_title : \"\",\n            status: this.props.districtPlacements![key].status,\n          };\n\n          for (const key in this.state.reportContentExport) {\n            if (\n              Object.prototype.hasOwnProperty.call(\n                this.state.reportContentExport,\n                key\n              )\n            ) {\n              if (!this.state.reportContentExport[key].status && dataArray) {\n                delete dataArray[this.state.reportContentExport[key].key];\n              }\n            }\n          }\n          dataArray && arrayNew.push(dataArray);\n          n++;\n        }\n      }\n      this.setState({ dataToPrint: arrayNew });\n      arrayNew = [];\n      n = 1;\n    }\n  };\n\n  updateReportContent = (key: placementReportContentKeyInterface) => {\n    let index: number = this.state.reportContentExport.findIndex(\n      (item) => item.key === key\n    );\n    let newArray: placementReportContentInterface[] =\n      this.state.reportContentExport;\n    newArray[index].status = !newArray[index].status;\n    this.setState({ reportContentExport: newArray });\n    let isSelectAllNeeded = newArray.find((item) => item.status === false);\n    if (isSelectAllNeeded) {\n      this.setSelectAll(false);\n    } else {\n      this.setSelectAll(true);\n    }\n\n    // UPDATE APPLICATION LIST FOR UPDATE ==============================\n    this.updateContentToPrint();\n  };\n\n  isChangeAllowed = (key: placementReportContentKeyInterface): boolean => {\n    if (\n      key === placementReportContentKeyInterface.applicant_name ||\n      key === placementReportContentKeyInterface.position_name ||\n      key === placementReportContentKeyInterface.national_id\n    ) {\n      return false;\n    }\n    return true;\n  };\n\n  resetReportContent = (currentState: boolean) => {\n    let newArray: placementReportContentInterface[] =\n      this.state.reportContentExport;\n    for (const key in newArray) {\n      if (this.isChangeAllowed(newArray[key].key)) {\n        newArray[key].status = !currentState;\n      }\n    }\n\n    this.setState({ reportContentExport: newArray });\n    this.setSelectAll(!currentState);\n    this.updateContentToPrint();\n  };\n\n  dataToShow = (\n    placements: placedCandidateInterface[]\n  ): PlacementToPrintInterface[] => {\n    let result: PlacementToPrintInterface[] = [];\n    for (const key in placements) {\n      if (Object.prototype.hasOwnProperty.call(placements, key)) {\n        let thisPosition = this.props.systemPositions\n          ? this.props.systemPositions.find(\n              (item) =>\n                item.position_id ===\n                this.props.districtPlacements![key].position_id\n            )\n          : undefined;\n        result.push({\n          no: Math.random(),\n          names:\n            this.props.districtPlacements![key].user_info.fname +\n            \" \" +\n            this.props.districtPlacements![key].user_info.lname,\n          national_id: this.props.districtPlacements![key].n_id,\n          phone: this.props.districtPlacements![key].phone_number,\n          email: this.props.districtPlacements![key].email,\n          school_name: this.props.districtPlacements![key].school\n            ? this.props.districtPlacements![key].school.school_name\n            : \"\",\n          position_name: thisPosition ? thisPosition.position_title : \"\",\n          status: this.props.districtPlacements![key].status,\n        });\n      }\n    }\n    return result;\n  };\n\n  FC_FilterReportData = (\n    allData: PlacementToPrintInterface[],\n    status: PlacedCandidateStatus | \"all\"\n  ): PlacementToPrintInterface[] => {\n    let result: PlacementToPrintInterface[] = allData;\n    if (status !== \"all\") {\n      result = result.filter((item) => item.status === status);\n    }\n\n    return result;\n  };\n\n  PlacementStatuses = (\n    allData: placedCandidateInterface[]\n  ): {\n    title: string;\n    count: number;\n    status: PlacedCandidateStatus | \"all\";\n  }[] => {\n    let output: {\n      title: string;\n      count: number;\n      status: PlacedCandidateStatus | \"all\";\n    }[] = [{ title: \"All\", count: allData.length, status: \"all\" }];\n    output.push(\n      {\n        title: capitalizeFirstLetter(\n          PlacedCandidateStatus.PENDING.toLocaleLowerCase()\n        ),\n        count: allData.filter(\n          (itm) => itm.status === PlacedCandidateStatus.PENDING\n        ).length,\n        status: PlacedCandidateStatus.PENDING,\n      },\n      {\n        title: capitalizeFirstLetter(\n          PlacedCandidateStatus.PLACED.toLocaleLowerCase()\n        ),\n        count: allData.filter(\n          (itm) => itm.status === PlacedCandidateStatus.PLACED\n        ).length,\n        status: PlacedCandidateStatus.PLACED,\n      },\n      {\n        title: capitalizeFirstLetter(\n          PlacedCandidateStatus.REJECTED.toLocaleLowerCase()\n        ),\n        count: allData.filter(\n          (itm) => itm.status === PlacedCandidateStatus.REJECTED\n        ).length,\n        status: PlacedCandidateStatus.REJECTED,\n      }\n    );\n    return output;\n  };\n\n  render() {\n    if (this.state.loading) {\n      return (\n        <div className=\"text-center mt-7 font-bold text-4xl text-gray-400 animate-pulse\">\n          Loading data...\n        </div>\n      );\n    }\n\n    return (\n      <div>\n        <SideNavigation>\n          <div className=\"\">\n            <div className=\"text-gray-600 text-sm mb-2\">District:</div>\n            <div\n              onClick={() => this.setState({ chooseDistrict: true })}\n              className=\"font-bold bg-blue-50 border border-blue-200 rounded py-2 cursor-pointer text-xs px-2 hover:underline justify-between text-blue-600  mb-4 w-full flex flex-row items-center animate__animated animate__zoomIn\"\n            >\n              {this.state.selectedDistrict !== null\n                ? `${this.state.selectedDistrict.district_name}`\n                : \"Choose district\"}\n              <FiEdit className=\"text-lg text-blue-600\" />\n            </div>\n          </div>\n\n          <div className=\"pt-1\">\n            <div className=\"text-sm text-gray-700 pb-2 pt-2\">\n              Placement statuses:\n            </div>\n            {this.props.districtPlacements === null ||\n            this.state.loadingData ? (\n              <Loading />\n            ) : (\n              this.PlacementStatuses(this.props.districtPlacements!).map(\n                (\n                  itm: {\n                    title: string;\n                    count: number;\n                    status: PlacedCandidateStatus | \"all\";\n                  },\n                  i: number\n                ) => (\n                  // itm.count > 0 &&\n                  <Fragment key={itm.title}>\n                    <div\n                      onClick={() =>\n                        this.setState({ selectedStatus: itm.status })\n                      }\n                    >\n                      <MainItem\n                        title={itm.title}\n                        count={itm.count}\n                        active={\n                          this.state.selectedStatus === itm.status\n                            ? true\n                            : false\n                        }\n                      />\n                    </div>\n                  </Fragment>\n                )\n              )\n            )}\n          </div>\n        </SideNavigation>\n\n        {/* BODY CONTENT--------------------------------- */}\n        <section>\n          {/* REPORT TITLE ============================================ */}\n          <div className=\"grid md:grid-cols-12\">\n            <div className=\"col-span-8\">\n              <div className=\"mt-4 mx-4 flex flex-col gap-1\">\n                <span className=\"text-3xl font-bold text-gray-700\">\n                  Placement report\n                </span>\n              </div>\n            </div>\n            <div className=\"col-span-4\">\n              <div className=\"float-right mt-2\">\n                {this.props.districtPlacements &&\n                  this.props.districtPlacements.length > 0 && (\n                    <div className=\"flex flex-row items-center justify-end font-bold mb-2\">\n                      <BiExport className=\"text-2xl text-gray-500\" />\n                      <span className=\"text-gray-500\">Export as</span>\n                      <button\n                        className=\"px-4 py-1 ml-1 rounded bg-white border hover:text-blue-600 font-bold hover:bg-blue-50 border-gray-200\"\n                        disabled={\n                          this.props.districtPlacements &&\n                          !this.state.downloading\n                            ? false\n                            : true\n                        }\n                        onClick={() => {\n                          // this.updateContentToPrint();\n                          this.setGenerateReportModal({\n                            reportType: \"EXCEL\",\n                            status: true,\n                          });\n                        }}\n                      >\n                        EXCEL\n                      </button>\n                      <button\n                        className={`px-4 py-1 ml-1 rounded bg-white border hover:text-blue-600 font-bold hover:bg-blue-50 border-gray-200 ${\n                          this.state.downloading && \"cursor-wait\"\n                        }`}\n                        onClick={() => this.FC_GeneratePDF()}\n                        disabled={this.props.districtPlacements ? false : true}\n                      >\n                        PDF\n                      </button>\n                    </div>\n                  )}\n              </div>\n            </div>\n          </div>\n          {/* END REPORT TITLE ============================================ */}\n\n          {/* ######################################################## */}\n          <div className=\"bg-white my-4\">\n            <div className=\"w-full px-2 py-2\">\n              <input\n                onChange={(e) => this.setState({ searchInput: e.target.value })}\n                type=\"text\"\n                value={this.state.searchInput}\n                placeholder=\"Search...\"\n                className=\"w-full bg-gray-100 py-2 px-3 rounded focus:border-gray-800\"\n                disabled={\n                  this.state.loadingData === null ||\n                  this.props.districtPlacements === null ||\n                  this.FC_FilterReportData(\n                    this.dataToShow(this.props.districtPlacements),\n                    this.state.selectedStatus\n                  ).length <= 0\n                }\n              />\n            </div>\n            <table className=\"w-full shadow\" id=\"report_content\">\n              <thead className=\"bg-white border-b-2 border-gray-300 text-gray-600 font-bold text-sm\">\n                <tr>\n                  <td className=\"px-2 py-2\">#</td>\n                  <td\n                    className=\"px-2 py-2 cursor-pointer\"\n                    onClick={() => this.setSort(\"names\")}\n                  >\n                    <div className=\"flex items-center gap-1\">\n                      Names <BiSort />\n                    </div>\n                  </td>\n                  <td\n                    className=\"px-2 py-2 cursor-pointer\"\n                    onClick={() => this.setSort(\"national_id\")}\n                  >\n                    <div className=\"flex items-center gap-1\">\n                      National Id <BiSort />\n                    </div>\n                  </td>\n                  <td\n                    className=\"px-2 py-2 cursor-pointer\"\n                    onClick={() => this.setSort(\"phone\")}\n                  >\n                    <div className=\"flex items-center gap-1\">\n                      Phone <BiSort />\n                    </div>\n                  </td>\n                  <td\n                    className=\"px-2 py-2 cursor-pointer\"\n                    onClick={() => this.setSort(\"email\")}\n                  >\n                    <div className=\"flex items-center gap-1\">\n                      Email <BiSort />\n                    </div>\n                  </td>\n                  <td\n                    className=\"px-2 py-2 cursor-pointer\"\n                    onClick={() => this.setSort(\"position_name\")}\n                  >\n                    <div className=\"flex items-center gap-1\">\n                      Position <BiSort />\n                    </div>\n                  </td>\n                  <td\n                    className=\"px-2 py-2 cursor-pointer\"\n                    onClick={() => this.setSort(\"school_name\")}\n                  >\n                    <div className=\"flex items-center gap-1\">\n                      School <BiSort />\n                    </div>\n                  </td>\n                  <td\n                    className=\"px-2 py-2 cursor-pointer\"\n                    onClick={() => this.setSort(\"status\")}\n                  >\n                    <div className=\"flex items-center gap-1\">\n                      Status <BiSort />\n                    </div>\n                  </td>\n                </tr>\n              </thead>\n              <tbody>\n                {!this.state.selectedDistrict ? (\n                  <tr>\n                    <td colSpan={8} className=\"px-2 py-2\">\n                      <div className=\"flex flex-col text-gray-400 items-center justify-center bg-gray-100 rounded py-10\">\n                        <ImFilesEmpty className=\"text-8xl text-gray-400 mb-2 animate__animated animate__shakeX\" />\n                        <span className=\"text-sm font-bold\">\n                          No district selected! Please choose district to get\n                          data\n                        </span>\n                        <div className=\"w-full mt-2 flex flex-row items-center justify-center\">\n                          <ul className=\"text-sm py-2 text-blue-600 font-bold flex flex-row gap-2\">\n                            <li\n                              onClick={() =>\n                                this.setState({ chooseDistrict: true })\n                              }\n                              className=\"underline text-gray-500 cursor-pointer\"\n                            >\n                              Choose another district\n                            </li>\n                          </ul>\n                        </div>\n                      </div>\n                    </td>\n                  </tr>\n                ) : this.props.districtPlacements === null ||\n                  this.state.loadingData === null ? (\n                  <TableLoading cols={8} />\n                ) : this.FC_FilterReportData(\n                    this.dataToShow(this.props.districtPlacements),\n                    this.state.selectedStatus\n                  ).length === 0 ? (\n                  <tr>\n                    <td colSpan={8} className=\"px-2 py-2\">\n                      <div className=\"flex flex-col text-gray-400 items-center justify-center bg-gray-100 rounded py-10\">\n                        <ImFilesEmpty className=\"text-8xl text-gray-400 mb-2 animate__animated animate__shakeX\" />\n                        <span className=\"text-sm font-bold\">\n                          No result found! Please try to search again\n                        </span>\n                        <div className=\"w-full mt-2 flex flex-row items-center justify-center\">\n                          <ul className=\"text-sm py-2 text-blue-600 font-bold flex flex-row gap-2\">\n                            <li\n                              onClick={() =>\n                                this.setState({ chooseDistrict: true })\n                              }\n                              className=\"underline text-gray-500 cursor-pointer\"\n                            >\n                              Choose another district\n                            </li>\n                          </ul>\n                        </div>\n                      </div>\n                    </td>\n                  </tr>\n                ) : (\n                  sortThisArray(\n                    this.state.isSorted,\n                    search(\n                      this.FC_FilterReportData(\n                        this.dataToShow(this.props.districtPlacements),\n                        this.state.selectedStatus\n                      ),\n                      this.state.searchInput\n                    ),\n                    this.state.sortProperty,\n                    this.state.sortOrder\n                  ).map((item: PlacementToPrintInterface, i) => (\n                    <tr\n                      key={i + item.no}\n                      className={`${\n                        i % 2 !== 0 ? \"bg-gray-100\" : \"bg-white\"\n                      } hover:bg-blue-100 hover:text-blue-700 border-b hover:border-blue-500 text-sm ${\n                        item.status === PlacedCandidateStatus.REJECTED\n                          ? \"border-yellow-500 text-gray-700 bg-yellow-200\"\n                          : item.status === PlacedCandidateStatus.PENDING\n                          ? \"border-gray-500 text-gray-700 bg-gray-200\"\n                          : \"text-gray-700 border-blue-300 bg-blue-200\"\n                      }`}\n                    >\n                      <td className=\"px-2 py-2\">{i + 1}</td>\n                      <td className=\"px-2 py-2\">{item.names}</td>\n                      <td className=\"px-2 py-2\">{item.national_id}</td>\n                      <td className=\"px-2 py-2\">{item.phone}</td>\n                      <td className=\"px-2 py-2\">{item.email}</td>\n                      <td className=\"px-2 py-2\">{item.position_name}</td>\n                      <td className=\"px-2 py-2\">{item.school_name}</td>\n                      <td className=\"px-2 py-2\">{item.status}</td>\n                    </tr>\n                  ))\n                )}\n              </tbody>\n            </table>\n          </div>\n        </section>\n        {/* END BODY CONTENT--------------------------------- */}\n\n        {/* ---------------------------------------------------------------------------- */}\n        {/* PERIOD && POSITION CONTENT MODAL */}\n        {this.state.chooseDistrict === true && (\n          <Modal\n            title={\n              <div className=\"flex flex-row gap-4 items-center\">\n                <IoFilter className=\"text-5xl text-blue-600\" />\n                <div className=\"flex flex-col\">\n                  <span className=\"font-bold text-xl text-blue-600\">\n                    Choose a district\n                  </span>\n                </div>\n              </div>\n            }\n            backDrop={true}\n            theme={Themes.default}\n            close={() => this.setState({ chooseDistrict: false })}\n            backDropClose={true}\n            widthSizeClass={ModalSize.medium}\n            displayClose={true}\n            padding={{ title: true }}\n          >\n            <div className=\"px-2 pb-2\">\n              {this.distinctDistrict(this.props.locations).length === 0 ? (\n                <div className=\"flex flex-col text-gray-400 items-center justify-center\">\n                  <MdSearch className=\"text-6xl\" />\n                  <div className=\"flex flex-col items-center justify-center\">\n                    <span>No district found! Please go back!</span>\n                    <Link\n                      to=\"/\"\n                      className=\"btn bg-yellow-100 text-yellow-700 my-4 hover:bg-yellow-200\"\n                    >\n                      Go back\n                    </Link>\n                  </div>\n                </div>\n              ) : (\n                <>\n                  <div className=\"flex flex-col\">\n                    <span className=\"text-gray-600 text-xs font-bold\">\n                      Filter by district name\n                    </span>\n                    <input\n                      onChange={(e: React.ChangeEvent<HTMLInputElement>) =>\n                        this.setState({ searchDistrict: e.target.value })\n                      }\n                      type=\"text\"\n                      className=\"mb-4 bg-gray-100 px-3 py-2 rounded\"\n                      placeholder=\"Keyword...\"\n                    />\n                  </div>\n                  <div className=\" max-h-96 overflow-y-auto\">\n                    {searchData(\n                      this.distinctDistrict(this.props.locations),\n                      this.state.searchDistrict\n                    ).map((item: DistrictInterface, key) => (\n                      <div\n                        key={key + 1}\n                        onClick={() => {\n                          this.setSelectedDistrict(item);\n                          this.loadPlacementData(item);\n                          this.setState({\n                            chooseDistrict: false,\n                            reportTitle:\n                              \"Placement report in \" +\n                              item.district_name +\n                              \" district\",\n                          });\n                        }}\n                        className=\"bg-white cursor-pointer rounded  px-3 py-2 border border-gray-200 hover:border-blue-500 hover:bg-blue-100 mb-2\"\n                      >\n                        <div className=\"grid lg:grid-cols-12\">\n                          <div className=\"col-span-12 lg:col-span-10\">\n                            <div className=\"flex flex-row items-center gap-3\">\n                              <div>\n                                <MdLocationOn className=\"text-2xl md:text-4xl text-blue-600\" />\n                              </div>\n                              <div className=\"flex flex-col\">\n                                <span className=\"text-xs lg:text-sm font-bold text-gray-700\">\n                                  {item.district_name}\n                                </span>\n                              </div>\n                            </div>\n                          </div>\n                          <div className=\"col-span-12 lg:col-span-2 hidden lg:block\">\n                            <div className=\"h-full flex items-center justify-end\">\n                              <div className=\"btn bg-blue-600 text-white float-right\">\n                                Choose\n                              </div>\n                            </div>\n                          </div>\n                        </div>\n                      </div>\n                    ))}\n                  </div>\n                </>\n              )}\n            </div>\n          </Modal>\n        )}\n        {/* END PERIOD && POSITION CONTENT MODAL */}\n\n        {/* --------------------------------------------------------------- */}\n        {/* GENERATE REPORT MODAL CONTENT MODAL */}\n        {this.state.generateReportModal !== null &&\n          this.state.generateReportModal.status === true && (\n            <Modal\n              title={\n                <div className=\"flex flex-row gap-4 items-center\">\n                  {/* <IoBriefcase className=\"text-5xl text-gray-500\" /> */}\n                  <div className=\"flex flex-col\">\n                    <span className=\"font-bold text-2xl text-gray-500\">\n                      Generating Report contents\n                    </span>\n                    <span className=\"text-sm text-blue-600 font-normal\">\n                      Generating {this.state.generateReportModal.reportType}{\" \"}\n                      Report\n                    </span>\n                  </div>\n                </div>\n              }\n              backDrop={true}\n              theme={Themes.default}\n              close={() => this.setGenerateReportModal(null)}\n              backDropClose={false}\n              widthSizeClass={ModalSize.medium}\n              displayClose={true}\n              padding={{ title: true }}\n            >\n              <div className=\"px-6\">\n                <div className=\"my-2 text-base text-gray-700 sm:text-lg\">\n                  <div className=\"flex flex-col\">\n                    <label>Title</label>\n                    <input\n                      type=\"text\"\n                      className={`text-left input-white w-20 inline-block ${\n                        this.state.formError &&\n                        this.state.formError.element === \"report_title\"\n                          ? \"border-red-500\"\n                          : \"border-gray-500\"\n                      } border-2`}\n                      placeholder=\"Sub Category Title\"\n                      value={this.state.reportTitle}\n                      onChange={(e) => {\n                        this.setFormError(null);\n                        this.setReportTitle(e.target.value);\n                      }}\n                      disabled={this.props.districtPlacements ? false : true}\n                    />\n                    {this.state.formError &&\n                      this.state.formError.element === \"report_title\" && (\n                        <span className=\"text-red-500\">\n                          {this.state.formError.msg}\n                        </span>\n                      )}\n                  </div>\n                  <div className=\"flex flex-col mt-2\">\n                    <label>Report content</label>\n                    <div className=\"grid grid-cols-2 md:grid-cols-3 items-center gap-2 mt-2\">\n                      {this.state.reportContentExport.map((item, index) => (\n                        <div\n                          key={index}\n                          className={`flex items-center gap-1 ${\n                            this.isChangeAllowed(item.key)\n                              ? \"cursor-pointer\"\n                              : \"cursor-not-allowed\"\n                          }`}\n                          onClick={() =>\n                            this.isChangeAllowed(item.key) &&\n                            this.updateReportContent(item.key)\n                          }\n                          title={\n                            !this.isChangeAllowed(item.key)\n                              ? \"Required for every report!\"\n                              : \"\"\n                          }\n                        >\n                          {item.status ? (\n                            <MdCheckBox className=\"w-6 h-6 text-blue-700\" />\n                          ) : (\n                            <MdCheckBoxOutlineBlank className=\"w-6 h-6\" />\n                          )}\n                          <span>{item.title}</span>\n                        </div>\n                      ))}\n                    </div>\n                    {this.state.formError &&\n                      this.state.formError.element === \"report_content\" && (\n                        <span className=\"text-red-500\">\n                          {this.state.formError.msg}\n                        </span>\n                      )}\n                  </div>\n                </div>\n                <div className=\"flex justify-between mb-2 mt-4\">\n                  <div\n                    className={`flex items-center gap-1 cursor-pointer`}\n                    onClick={() =>\n                      this.resetReportContent(this.state.selectAll)\n                    }\n                  >\n                    {this.state.selectAll ? (\n                      <MdCheckBox className=\"w-6 h-6 text-blue-700\" />\n                    ) : (\n                      <MdCheckBoxOutlineBlank className=\"w-6 h-6\" />\n                    )}\n                    <span>Select all</span>\n                  </div>\n\n                  {this.state.dataToPrint && this.props.districtPlacements && (\n                    <ExportToExcel\n                      fileData={this.state.dataToPrint}\n                      fileName={this.state.reportTitle}\n                      btnName=\"Generate\"\n                    />\n                  )}\n                </div>\n              </div>\n            </Modal>\n          )}\n        {/* END GENERATE REPORT MODAL CONTENT MODAL */}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = ({\n  auth,\n  system_settings,\n  locations,\n  schools,\n}: StoreState): {\n  auth: Auth;\n  districtPlacements: placedCandidateInterface[] | null;\n  locations: RoomLocationInterface[];\n  systemPositions: PositionAPI[] | null;\n} => {\n  return {\n    auth: auth,\n    systemPositions: system_settings.systemPositions,\n    districtPlacements: schools.districtPlacements,\n    locations: locations.roomLocation,\n  };\n};\n\nexport const PlacementReport = connect(mapStateToProps, {\n  getDistrictPlacement,\n  getAllRoom,\n  getSchools,\n  getPositions,\n  PushPopupAlert,\n})(_PlacementReport);\n"],"sourceRoot":""}
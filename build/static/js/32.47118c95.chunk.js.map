{"version":3,"sources":["components/Modal/Modal.tsx","components/Table/Table.tsx","actions/schools.ts","containers/HeadTeacher/RequestTeacher.tsx"],"names":["Themes","ModalMarginTop","ModalSize","Modal","props","themeColor","title","backDrop","theme","close","backDropClose","widthSizeClass","displayClose","padding","body","footer","primary","secondary","danger","success","warning","onClick","className","undefined","marginTop","none","style","width","maxHeight","height","maxWidth","overflowY","margin","zIndex","default","children","sortThisColumn","tableId","table","rows","switching","i","x","y","shouldSwitch","colIndex","dir","switchcount","document","getElementById","length","getElementsByTagName","innerHTML","toLowerCase","parentNode","insertBefore","Table","tr","columns","hideColumns","pagination","search","tableSize","tableClass","rounded","searchBG","thColor","loading","result","characters","charactersLength","charAt","Math","floor","random","FC_makeID","useState","totalItems","setTotalItems","totalPages","setTotalPages","currentPage","setCurrentPage","pages","setPages","pageSize","setPageSize","startIndex","setStartIndex","endIndex","setEndIndex","useEffect","tablePagination","ceil","min","_pages","Array","from","keys","map","display","type","placeholder","onChange","e","data","filterType","filter","td","cols","textContent","innerText","indexOf","filterTable","target","value","disabled","Number","id","column","index","alignText","isSortAllowed","columnTitle","aria-label","page","pageIndex","getSchools","callback","dispatch","a","axios","get","API","APPLICATION","res","ActionTypes","GET_SCHOOLS","payload","console","log","errorToText","getSchoolsInfo","setAxiosToken","GET_SCHOOLS_INFO","data_school","createSchool","schools","CREATE_SCHOOL","updateSchool","UPDATE_SCHOOL","deleteSchool","DELETE_SCHOOL","fetchSchoolPosts","FETCH_SCHOOL_POSTS","data_posts_school","createSchoolPost","CREATE_SCHOOL_POST","updateSchoolPost","UPDATE_SCHOOL_POST","HeadTeacher","connect","positionRequests","schoolPosts","positions","fetchPositions","requestTeacher","setRequestTeacher","filterByPosition","setFilterByPosition","positionId","setPositionId","qualification","setQualifacation","requestedPosts","setRequestedPosts","requestExplanation","setRequestExplanation","loadind","setLoadind","feedBack","setFeedBack","position","position_id","position_title","schoolPost","school_id","choosenSchool","colSpan","getPositionById","needed_posts","confirmed_posts","occupied_posts","to","medium","message","onSubmit","preventDefault","dataForm","post_at_school_id","toString","district_id","choosenDistrict","requested_by","request_date","Date","post_at_school_status","PostRequestStatusInterface","INITIATED","requirements","user_required_docs","required","name"],"mappings":"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","file":"static/js/32.47118c95.chunk.js","sourcesContent":["/**\n * @description Modal design\n * @done_by Niyongabo\n */\nimport { MdClose } from \"react-icons/md\";\n\nexport enum Themes {\n  default = \"default\",\n  primary = \"primary\",\n  secondary = \"secondary\",\n  danger = \"danger\",\n  success = \"success\",\n  warning = \"warning\",\n}\n\nexport enum ModalMarginTop {\n  none = \"top-0\",\n  small = \"top-28\",\n  medium = \"top-1/3\",\n  large = \"top-1/2\",\n  extra = \"top-2/3\",\n}\n\nexport enum ModalSize {\n  small = \"max-w-sm\",\n  medium = \"max-w-screen-sm\",\n  large = \"max-w-screen-md\",\n  extraLarge = \"max-w-screen-lg\",\n  maxWidth = \"max-w-screen h-full\",\n}\n\ninterface ModalInterface {\n  title?: any;\n  backDrop: boolean;\n  theme: Themes;\n  close: Function;\n  backDropClose: boolean;\n  footer?: any;\n  children: any;\n  widthSizeClass: ModalSize;\n  displayClose: boolean;\n  padding: { title?: boolean; body?: boolean; footer?: boolean };\n  marginTop?: ModalMarginTop;\n}\n\nconst Modal = (props: ModalInterface): JSX.Element => {\n  const {\n    title,\n    backDrop,\n    theme,\n    close,\n    backDropClose,\n    widthSizeClass,\n    displayClose,\n    padding = { title: true, body: true, footer: true },\n  }: ModalInterface = props;\n\n  let themeColor: string;\n\n  switch (theme) {\n    case Themes.primary:\n      themeColor = \"blue-500\";\n      break;\n    case Themes.secondary:\n      themeColor = \"gray-300\";\n      break;\n    case Themes.danger:\n      themeColor = \"red-500\";\n      break;\n    case Themes.success:\n      themeColor = \"green-500\";\n      break;\n    case Themes.warning:\n      themeColor = \"yellow-500\";\n      break;\n    default:\n      themeColor = \"white\";\n      break;\n  }\n  return (\n    <>\n      <div onClick={(): void => backDropClose && close()} className={`animate__animated animate__fadeIn animate__faster modal fixed bg-black bg-opacity-${backDrop === true ? '60' : '0'}`}></div>\n      <div className={`fixed items-center justify-items-center ${props.marginTop === undefined ? ModalMarginTop.none : props.marginTop} left-0 right-0 bottom-0 bg-white rounded shadow-xl self-center ${widthSizeClass} animate__animated ${props.marginTop !== undefined && props.marginTop !== ModalMarginTop.none ? \"animate__fadeInUp\" : \"animate__zoomIn\"} animate__faster`} style={{width: '100%', maxHeight: '99vh', height: `${widthSizeClass === ModalSize.maxWidth ? props.marginTop === undefined ? \"100%\" : \"unset\" : \"fit-content\"}`, overflowY: 'auto', margin: 'auto', zIndex: 99999999}}>\n        <div className={`flex justify-between bg-${themeColor} ${padding.title === true ? \"py-4 px-4\" : \"\" } rounded-t text-${theme === Themes.default || theme === Themes.secondary ? \"black\" : \"white\"}`}>\n          {!title || title === \"\" ? <div></div> : (<h4 className={`text-lg font-bold `}>{title}</h4>)}\n          {displayClose === false ? \"\" : <div className=\"hover:text-red-600 hover:bg-red-100 rounded-full p-1 h-8 w-8\"><MdClose className=\"cursor-pointer font-extrabold text-2xl\" onClick={():void => close()} /></div>}\n        </div>\n        <div\n          className={`space-x-3 ${padding.body === true ? \"py-4 px-4\" : \"\"}`}\n        >\n          <div>{props.children !== \"\" ? props.children : \"\"}</div>\n        </div>\n        {props.footer !== undefined && props.footer !== \"\" ? (\n          <div\n            className={`flex float-right ${\n              padding.footer === true ? \"py-4 px-4\" : \"\"\n            }`}\n          >\n            {props.footer}\n          </div>\n        ) : ( \n          \"\"\n        )}\n      </div>\n    </>\n  );\n};\n\nexport default Modal;\n","import React, { useEffect, useState } from \"react\";\nimport { BiSort } from \"react-icons/bi\";\nimport { MdNavigateBefore, MdNavigateNext, MdSearch } from \"react-icons/md\";\n\nconst FC_makeID = (length: number = 5): string => {\n  let result: string = \"\";\n  let characters: string =\n    \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\n  let charactersLength = characters.length;\n  for (let i: number = 0; i < length; i++) {\n    result += characters.charAt(Math.floor(Math.random() * charactersLength));\n  }\n  return result;\n};\n\nexport const sortThisColumn = (\n  tableId: string,\n  colIndex: number = 0,\n  dir: \"asc\" | \"desc\" = \"asc\"\n) => {\n  var table,\n    rows,\n    switching,\n    i,\n    x,\n    y,\n    shouldSwitch,\n    switchcount = 0;\n  table = document.getElementById(tableId) as HTMLTableElement;\n  switching = true;\n  /* Make a loop that will continue until\n  no switching has been done: */\n  if (table) {\n    while (switching) {\n      //start by saying: no switching is done:\n      switching = false;\n      rows = table.rows;\n      /*Loop through all table rows (except the\n    first, which contains table headers):*/\n      for (i = 1; i < rows.length - 1; i++) {\n        //start by saying there should be no switching:\n        shouldSwitch = false;\n        /*Get the two elements you want to compare,\n      one from current row and one from the next:*/\n        x = rows[i].getElementsByTagName(\"TD\")[colIndex];\n        y = rows[i + 1].getElementsByTagName(\"TD\")[colIndex];\n        /*check if the two rows should switch place,\n      based on the direction, asc or desc:*/\n        if (dir === \"asc\" && x && y) {\n          if (x.innerHTML.toLowerCase() > y.innerHTML.toLowerCase()) {\n            //if so, mark as a switch and break the loop:\n            shouldSwitch = true;\n            break;\n          }\n        } else if (dir === \"desc\" && x && y) {\n          if (x.innerHTML.toLowerCase() < y.innerHTML.toLowerCase()) {\n            //if so, mark as a switch and break the loop:\n            shouldSwitch = true;\n            break;\n          }\n        }\n      }\n      if (shouldSwitch && rows[i].parentNode) {\n        /*If a switch has been marked, make the switch\n      and mark that a switch has been done:*/\n        rows[i].parentNode!.insertBefore(rows[i + 1], rows[i]);\n        switching = true;\n        //Each time a switch is done, increase this count by 1:\n        switchcount++;\n      } else {\n        /*If no switching has been done AND the direction is \"asc\",\n      set the direction to \"desc\" and run the while loop again.*/\n        if (switchcount === 0 && dir === \"asc\") {\n          dir = \"desc\";\n          switching = true;\n        }\n      }\n      // if (i === 0) continue;\n      // rows.cells[i].style.backgroundColor = \"blue\";\n    }\n  }\n};\n\nexport interface TableColumnsInterface {\n  columnTitle: JSX.Element | string;\n  alignText: string;\n  padding?: string;\n  isSortAllowed?: boolean;\n}\n\ninterface TableProps {\n  columns: TableColumnsInterface[];\n  rows: Function;\n  hideColumns?: boolean;\n  pagination?: boolean;\n  search?: boolean;\n  tableSize?: string;\n  tableClass?: string;\n  tableId?: string;\n  rounded?: boolean;\n  searchBG?: string;\n  thColor?: string;\n  loading?: boolean;\n}\n\nconst Table: React.FC<TableProps> = ({\n  rows,\n  columns,\n  hideColumns = false,\n  pagination = false,\n  search = false,\n  tableSize = \"w-full\",\n  tableClass,\n  tableId = \"myTable\",\n  rounded = false,\n  searchBG = \"bg-gray-200\",\n  thColor = \"blue\",\n  loading = false,\n}) => {\n  const startPage = 1;\n  tableId = tableId === \"myTable\" ? FC_makeID() : tableId;\n  let table: HTMLElement, tr: HTMLCollectionOf<HTMLTableRowElement>;\n  const [totalItems, setTotalItems] = useState<number>(0);\n  const [totalPages, setTotalPages] = useState<number>(1);\n  const [currentPage, setCurrentPage] = useState<number>(1);\n  const [pages, setPages] = useState<number[]>();\n  const [pageSize, setPageSize] = useState<number>(10);\n  const [startIndex, setStartIndex] = useState<number>(0);\n  const [endIndex, setEndIndex] = useState<number>(0);\n\n  useEffect(() => {\n    pagination && tablePagination();\n  });\n\n  const filterTable = (\n    data: string,\n    filterType?: \"default\" | \"field\"\n  ): void => {\n    var filter, tr, td, rows: number, cols: number, txtValue;\n    if (filterType === \"field\" && data === \"all\") data = \"\";\n    filter = data.toLowerCase();\n    table = document.getElementById(tableId)!;\n    tr = table.getElementsByTagName(\"tr\");\n    for (rows = 0; rows < tr.length; rows++) {\n      for (cols = 0; cols < columns.length; cols++) {\n        td = tr[rows].getElementsByTagName(\"td\")[cols];\n        if (td) {\n          txtValue = td.textContent || td.innerText;\n          if (txtValue.toLowerCase().indexOf(filter) > -1) {\n            tr[rows].style.display = \"\";\n            break;\n          } else {\n            tr[rows].style.display = \"none\";\n          }\n        }\n      }\n    }\n  };\n\n  const tablePagination = (): void => {\n    table = document.getElementById(tableId)!;\n    tr = table.getElementsByTagName(\"tr\");\n    setTotalItems(tr.length);\n    setTotalPages(Math.ceil(totalItems / pageSize));\n\n    // calculate start and end item indexes on the current page\n    setStartIndex((currentPage - 1) * pageSize);\n    setEndIndex(Math.min(startIndex + pageSize - 1, totalItems - 1));\n\n    /**\n     * TODO!\n     * There is a problem with this condition\n     */\n    let _pages = Array.from(Array(totalPages + 1 - startPage).keys()).map(\n      (i) => startPage + i\n    );\n    if (!pages || _pages.length !== pages.length) {\n      setPages(_pages);\n    }\n\n    for (let i: number = 0; i < tr.length; i++) {\n      if (i >= startIndex && i <= endIndex) {\n        tr[i].style.display = \"\";\n      } else {\n        tr[i].style.display = \"none\";\n      }\n    }\n  };\n\n  return (\n    <div className={`${tableSize}`}>\n      {/* search box  */}\n      {search && (\n        <div className={`${searchBG} w-full mb-2`}>\n          {search && (\n            <div className=\"bg-white rounded flex items-center w-full p-2 border-2 border-gray-500\">\n              <MdSearch className=\"h-5 w-5 fill-current text-gray-400\" />\n              <input\n                type=\"search\"\n                placeholder=\"search\"\n                onChange={(e) => filterTable(e.target.value)}\n                className=\"w-full h-6 pl-4 text-sm outline-none focus:outline-none bg-transparent\"\n                disabled={loading}\n              />\n\n              {pagination && (\n                <div className=\"select\">\n                  <select\n                    className=\"text-base outline-none focus:outline-none bg-transparent\"\n                    onChange={(e) => setPageSize(Number(e.target.value))}\n                    disabled={loading}\n                  >\n                    <option value=\"10\">10</option>\n                    <option value=\"25\">25</option>\n                    <option value=\"50\">50</option>\n                    <option value=\"100\">100</option>\n                  </select>\n                </div>\n              )}\n            </div>\n          )}\n        </div>\n      )}\n      <table\n        className={\n          tableClass\n            ? tableClass\n            : `w-full shadow ${\n                rounded && \"sm:rounded-lg\"\n              } table-auto order-table max-w-full`\n        }\n        id={tableId}\n      >\n        {!hideColumns && (\n          <thead className=\"bg-white border-b-2 border-gray-300 text-gray-600 font-bold text-base\">\n            <tr\n              className={`text-left tracking-wide bg-${thColor}-100 border-b-2 border-${thColor}-500 text-${thColor}-600 overflow-hidden`}\n            >\n              {columns.map((column, index) => (\n                <th\n                  key={index}\n                  className={`${column.padding} text-${\n                    column.alignText\n                  } px-3 py-2 ${column.isSortAllowed && \"cursor-pointer\"}`}\n                  onClick={() =>\n                    column.isSortAllowed && sortThisColumn(tableId, index)\n                  }\n                >\n                  <div className=\"flex items-center gap-1\">\n                    {column.columnTitle}\n                    {column.isSortAllowed && <BiSort />}\n                  </div>\n                </th>\n              ))}\n            </tr>\n          </thead>\n        )}\n        <tbody id=\"table-data\" className=\"bg-white text-black text-base\">\n          {rows()}\n        </tbody>\n      </table>\n      {pagination && (\n        <div className=\"sm:flex-1 sm:flex sm:items-center sm:justify-between mt-4 work-sans\">\n          <div>\n            <span className=\"text-xs xs:text-sm text-gray-900\">\n              Showing 1 to {pageSize} of {totalItems - 1} Entries\n            </span>\n          </div>\n          <div>\n            <nav className=\"inline-flex shadow-sm\">\n              <div>\n                <button\n                  type=\"button\"\n                  className={`inline-flex items-center px-2 py-2 rounded-l-md border border-gray-300 text-sm font-medium text-gray-500 ${\n                    currentPage !== 1 && \"bg-white\"\n                  }`}\n                  aria-label=\"Previous\"\n                  disabled={currentPage === 1 || loading}\n                  onClick={() => setCurrentPage(currentPage - 1)}\n                >\n                  <MdNavigateBefore className=\"h-5 w-5\" />\n                </button>\n              </div>\n              <div>\n                {pages &&\n                  pages.map((page, pageIndex) => (\n                    <button\n                      key={pageIndex}\n                      className={`-ml-px inline-flex items-center px-4 py-2 border border-gray-300 text-sm font-medium text-gray-700 ${\n                        page !== currentPage\n                          ? \"bg-white\"\n                          : \"bg-gray-100 cursor-default\"\n                      }`}\n                      disabled={page === currentPage || loading}\n                      onClick={() => setCurrentPage(page)}\n                    >\n                      {page}\n                    </button>\n                  ))}\n              </div>\n              <div>\n                <button\n                  type=\"button\"\n                  className={`inline-flex items-center px-2 py-2 rounded-r-md border border-gray-300 text-sm leading-5 font-medium text-gray-500 ${\n                    currentPage !== totalPages && \"bg-white\"\n                  }`}\n                  aria-label=\"Next\"\n                  disabled={currentPage === totalPages || loading}\n                  onClick={() => setCurrentPage(currentPage + 1)}\n                >\n                  <MdNavigateNext className=\"h-5 w-5\" />\n                </button>\n              </div>\n            </nav>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default Table;\n","import { Dispatch } from \"redux\";\nimport { ActionTypes } from \"./types\";\nimport { data_posts_school, data_school } from \"../shared/dataTest\";\nimport {\n  PostSchoolInterface,\n  SchoolInfoInterface,\n  SchoolsInterface,\n} from \"../shared/interfaces\";\nimport { setAxiosToken } from \"../utils/AxiosToken\";\nimport axios from \"axios\";\nimport { API } from \"../utils/api\";\nimport { errorToText } from \"../utils/errors\";\n\n/**\n * * ****************************** INTERFACES *****************************\n */\n\nexport interface GetSchoolsAction {\n  type: ActionTypes.GET_SCHOOLS;\n  payload: SchoolsInterface[];\n}\n\nexport interface GetSchoolsInfoAction {\n  type: ActionTypes.GET_SCHOOLS_INFO;\n  payload: SchoolInfoInterface[];\n}\n\nexport interface CreateSchoolAction {\n  type: ActionTypes.CREATE_SCHOOL;\n  payload: SchoolsInterface;\n}\n\nexport interface UpdateSchoolAction {\n  type: ActionTypes.UPDATE_SCHOOL;\n  payload: SchoolsInterface;\n}\n\nexport interface DeleteSchoolAction {\n  type: ActionTypes.DELETE_SCHOOL;\n  payload: string;\n}\n\n// School Posts interfaces\nexport interface FetchSchoolPostsAction {\n  type: ActionTypes.FETCH_SCHOOL_POSTS;\n  payload: PostSchoolInterface[];\n}\n\nexport interface CreateSchoolPostAction {\n  type: ActionTypes.CREATE_SCHOOL_POST;\n  payload: PostSchoolInterface;\n}\n\nexport interface RespondRequestInterface {\n  post_at_school_id: string;\n  approved_posts: number;\n  approved_explanation: string;\n  approved_date: Date;\n  post_at_school_status: number;\n  confirmed_by: string;\n}\nexport interface UpdateSchoolPostAction {\n  type: ActionTypes.UPDATE_SCHOOL_POST;\n  payload: RespondRequestInterface;\n}\n\nexport interface DeleteSchoolPostAction {\n  type: ActionTypes.DELETE_SCHOOL_POST;\n  payload: PostSchoolInterface[];\n}\n\nexport type SchoolActionType =\n  | GetSchoolsAction\n  | GetSchoolsInfoAction\n  | CreateSchoolAction\n  | UpdateSchoolAction\n  | DeleteSchoolAction\n  | FetchSchoolPostsAction\n  | CreateSchoolPostAction\n  | UpdateSchoolPostAction\n  | DeleteSchoolPostAction;\n\n/**\n * * ****************************** ACTIONS *****************************\n */\n\nexport const getSchools = (callback: Function) => {\n  return async (dispatch: Dispatch) => {\n    callback(true, \"\");\n    try {\n      const res = await axios.get<SchoolsInterface[]>(\n        `${API.APPLICATION}/schools`\n      );\n      dispatch<GetSchoolsAction>({\n        type: ActionTypes.GET_SCHOOLS,\n        payload: res.data,\n      });\n      callback(false, \"\");\n    } catch (error) {\n      console.log(\"Err: \", error);\n      callback(false, errorToText(error));\n    }\n  };\n};\n\nexport const getSchoolsInfo = () => {\n  return async (dispatch: Dispatch) => {\n    setAxiosToken();\n    // const response = await axios.get<AccessRoleType[]>(url);\n\n    dispatch<GetSchoolsInfoAction>({\n      type: ActionTypes.GET_SCHOOLS_INFO,\n      payload: data_school,\n      // payload: response.data,\n    });\n  };\n};\n\nexport const createSchool = (data: SchoolsInterface) => {\n  console.log({ schools: data });\n  return async (dispatch: Dispatch) => {\n    dispatch<CreateSchoolAction>({\n      type: ActionTypes.CREATE_SCHOOL,\n      payload: data,\n    });\n  };\n};\n\nexport const updateSchool = (data: SchoolsInterface) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<UpdateSchoolAction>({\n      type: ActionTypes.UPDATE_SCHOOL,\n      payload: data,\n    });\n  };\n};\n\nexport const deleteSchool = (data: string) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<DeleteSchoolAction>({\n      type: ActionTypes.DELETE_SCHOOL,\n      payload: data,\n    });\n  };\n};\n\nexport const fetchSchoolPosts = () => {\n  return async (dispatch: Dispatch) => {\n    // const response = await axios.get<AccessRoleType[]>(url);\n\n    dispatch<FetchSchoolPostsAction>({\n      type: ActionTypes.FETCH_SCHOOL_POSTS,\n      payload: data_posts_school,\n      // payload: response.data,\n    });\n  };\n};\n\nexport const createSchoolPost = (data: PostSchoolInterface) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<CreateSchoolPostAction>({\n      type: ActionTypes.CREATE_SCHOOL_POST,\n      payload: data,\n    });\n  };\n};\n\nexport const updateSchoolPost = (data: RespondRequestInterface) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<UpdateSchoolPostAction>({\n      type: ActionTypes.UPDATE_SCHOOL_POST,\n      payload: data,\n    });\n  };\n};\n\nexport const deleteSchoolPost = (data: PostSchoolInterface[]) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<DeleteSchoolPostAction>({\n      type: ActionTypes.DELETE_SCHOOL_POST,\n      payload: data,\n    });\n  };\n};\n","import React, { useEffect, useState } from \"react\";\nimport { MdClose, MdErrorOutline } from \"react-icons/md\";\nimport { connect } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport Modal, { ModalSize, Themes } from \"../../components/Modal/Modal\";\nimport Table from \"../../components/Table/Table\";\nimport { StoreState } from \"../../reducers\";\nimport {\n  PositionInterface,\n  PostRequestStatusInterface,\n  PostSchoolInterface,\n} from \"../../shared/interfaces\";\nimport { fetchPositions } from \"../../actions/positionRequests\";\nimport { fetchSchoolPosts, createSchoolPost } from \"../../actions/schools\";\nimport {\n  choosenDistrict,\n  choosenSchool,\n  getPositionById,\n} from \"../../shared/dataTest\";\nimport { GiTeacher } from \"react-icons/gi\";\nconst uuid = (): string => Math.random().toString();\n\ninterface AppProps {\n  positions: PositionInterface[] | null;\n  schoolPosts: PostSchoolInterface[];\n  fetchPositions: Function;\n  fetchSchoolPosts: Function;\n  createSchoolPost: Function;\n}\n\nconst RequestTeacher: React.FC<AppProps> = ({\n  positions,\n  fetchPositions,\n  schoolPosts,\n  fetchSchoolPosts,\n  createSchoolPost,\n}) => {\n  const [requestTeacher, setRequestTeacher] = useState<boolean>(false);\n  const [filterByPosition, setFilterByPosition] = useState<string>(\"all\");\n  const [positionId, setPositionId] = useState<string>(\"\");\n  const [qualification, setQualifacation] = useState<string>(\"\");\n  const [requestedPosts, setRequestedPosts] = useState<number>(0);\n  const [requestExplanation, setRequestExplanation] = useState<string>(\"\");\n  const [loadind, setLoadind] = useState<boolean>(false);\n  const [feedBack, setFeedBack] = useState<{\n    type: \"success\" | \"danger\" | \"warning\" | \"\";\n    message: string;\n  }>();\n\n  useEffect(() => {\n    if (!positions) {\n      fetchPositions();\n    }\n  }, [positions, fetchPositions]);\n\n  useEffect(() => {\n    if (!schoolPosts.length) {\n      fetchSchoolPosts();\n    }\n  }, [schoolPosts.length, fetchSchoolPosts]);\n\n  const tableData = (): JSX.Element[] => {\n    let data = schoolPosts.filter(\n      (schoolPost) => schoolPost.school_id === choosenSchool\n    );\n\n    data =\n      filterByPosition !== \"\" && filterByPosition !== \"all\"\n        ? data.filter(\n            (schoolPost) => schoolPost.position_id === filterByPosition\n          )\n        : data;\n\n    if (data.length === 0) {\n      return [\n        <tr key={1} className=\"border-b border-gray-200 hover:bg-gray-100\">\n          <td className=\"p-3 text-center\" colSpan={7}>\n            No Data Found\n          </td>\n        </tr>,\n      ];\n    }\n\n    return data.map((schoolPost, index) => (\n      <tr\n        key={index + 1}\n        className=\"border-b border-gray-200 hover:bg-gray-100\"\n      >\n        <td className=\"p-3 text-left font-medium\">\n          {positions &&\n            getPositionById(positions, schoolPost.position_id).position_title}\n        </td>\n        <td className=\"p-3 text-center text-base font-medium\">\n          {/* {positions &&\n            getPositionById(positions, schoolPost.position_id).requirements[0]\n              .user_required_docs[0].title} */}\n        </td>\n        <td className=\"p-3 text-center text-base font-medium\">\n          {schoolPost.needed_posts}\n        </td>\n        <td className=\"p-3 text-center text-base font-medium\">\n          {schoolPost.confirmed_posts ? schoolPost.confirmed_posts : \"-\"}\n        </td>\n        <td className=\"p-3 text-center text-base font-medium\">\n          {schoolPost.occupied_posts ? schoolPost.occupied_posts : \"-\"}\n        </td>\n        <td className=\"p-3 text-center text-base font-medium\">\n          {schoolPost.confirmed_posts && schoolPost.occupied_posts\n            ? Number(schoolPost.confirmed_posts - schoolPost.occupied_posts)\n            : \"-\"}\n        </td>\n        <td className=\"py- text-left\">\n          <div className=\"flex item-center justify-center\">\n            <Link\n              className=\"\n                btn\n                text-blue-700\n                ml-2\n                border-blue-700\n                md:border-2\n                hover:bg-blue-700\n                hover:text-white\n                transition\n                ease-out\n                duration-500\n                flex items-center\n              \"\n              title=\"View User Profile\"\n              to={`school-post/${schoolPost.position_id}`}\n            >\n              Details\n            </Link>\n          </div>\n        </td>\n      </tr>\n    ));\n  };\n\n  const submitRequest = (e: React.FormEvent<HTMLFormElement>): void => {\n    e.preventDefault();\n    setFeedBack({ type: \"\", message: \"\" });\n\n    setLoadind(true);\n    const dataForm: PostSchoolInterface = {\n      post_at_school_id: uuid(),\n      school_id: choosenSchool,\n      position_id: positionId,\n      district_id: choosenDistrict,\n      needed_posts: requestedPosts,\n      requested_by: \"rtyr\",\n      request_date: new Date(),\n      post_at_school_status: PostRequestStatusInterface.INITIATED,\n    };\n    createSchoolPost(dataForm);\n    setPositionId(\"\");\n    setQualifacation(\"\");\n    setRequestedPosts(0);\n    setRequestExplanation(\"\");\n    setFeedBack({ type: \"success\", message: `Posts has been requested!` });\n    setLoadind(false);\n  };\n\n  return (\n    <div className=\"mx-32\">\n      {/* <div className=\"bg-hero my-5 rounded p-4 flex justify-between items-center relative\">\n        <div className=\"flex flex-col\">\n          <span className=\"text-white text-4xl\">User Management</span>\n        </div>\n      </div> */}\n      {/* header title */}\n      <div className=\"flex flex-row items-start gap-4 my-2\">\n        <GiTeacher className=\"text-blue-700 w-12 h-12 md:block hidden\" />\n        <div className=\"w-full\">\n          <div className=\"flex justify-between w-full\">\n            <div className=\"flex flex-col gap-1 justify-between\">\n              <h1 className=\"md:text-4xl text-3xl font-semibold\">\n                Teacher Request\n              </h1>\n\n              <div className=\"flex-row items-center md:gap-3 gap-2 hidden\">\n                <div className=\"flex flex-row items-center mt-1 gap-1\">\n                  <span className=\"text-gray-600 text-xl\">level:</span>\n                  {/* <span\n                    className={`${\n                      thisEducation ? \"text-blue-600\" : \"text-gray-600\"\n                    } text-xl font-bold`}\n                  >\n                    {thisEducation\n                      ? thisEducation.education_category_title\n                      : \"-\"}\n                  </span> */}\n                  {/* {thisRoom && (\n                      <div className=\"flex flex-row items-center gap-1\">\n                        <MdKeyboardArrowRight />\n                        <span className={`text-blue-600 text-lg font-bold`}>\n                          {thisRoom.room_name}\n                        </span>\n                      </div>\n                    )} */}\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      {/* end header title */}\n      <div className=\"grid md:grid-cols-5 gap-2 bg-white shadow-md p-2\">\n        <div className={`md:col-span-5 rounded`}>\n          <div className=\"my-2 flex sm:flex-row flex-col justify-between\">\n            <div className=\"flex flex-col md:flex-row\">\n              <select\n                className=\"border-2 border-gray-700 bg-white p-2 rounded focus:outline-none\"\n                onChange={(e) => setFilterByPosition(e.target.value)}\n              >\n                <option value=\"all\">All Position</option>\n                {positions && positions.length > 0 ? (\n                  positions.map((position, index) => (\n                    <option key={index + 1} value={position.position_id}>\n                      {position.position_title}\n                    </option>\n                  ))\n                ) : (\n                  <option value=\"\">No Position found</option>\n                )}\n              </select>\n            </div>\n            <div className=\"block relative\">\n              <div className=\"pt-6 md:pt-0 md:pl-6\">\n                <button\n                  className=\"btn bg-primary text-white hover:bg-blue-600\"\n                  onClick={() => setRequestTeacher(true)}\n                  disabled={requestTeacher}\n                >\n                  Request Teacher\n                </button>\n              </div>\n            </div>\n          </div>\n          <Table\n            columns={[\n              { columnTitle: \"POSITION\", alignText: \"left\", padding: \"p-3\" },\n              {\n                columnTitle: \"QUALIFICATION\",\n                alignText: \"center\",\n                padding: \"p-3\",\n              },\n              { columnTitle: \"REQUEST\", alignText: \"center\", padding: \"p-3\" },\n              { columnTitle: \"APPROVED\", alignText: \"center\", padding: \"p-3\" },\n              { columnTitle: \"OCCUPIED\", alignText: \"center\", padding: \"p-3\" },\n              { columnTitle: \"VACCANTS\", alignText: \"center\", padding: \"p-3\" },\n              { columnTitle: \"\", alignText: \"left\", padding: \"p-3\" },\n            ]}\n            rows={tableData}\n            pagination={true}\n            search={true}\n            thColor=\"gray\"\n          />\n        </div>\n      </div>\n\n      {/* Upload Modal */}\n      {requestTeacher && (\n        <Modal\n          backDrop={true}\n          theme={Themes.default}\n          close={(): void => {}}\n          displayClose={false}\n          backDropClose={false}\n          title={\n            <div className=\"flex items-center space-x-5\">\n              <div className=\"h-14 w-14 bg-blue-200 rounded-full flex flex-shrink-0 justify-center items-center text-blue-500 text-2xl font-mono\">\n                T\n              </div>\n              <div className=\"block pl-2 font-semibold text-xl self-start text-gray-700\">\n                <p className=\"text-base text-gray-500 font-medium\">\n                  You are applying for\n                </p>\n                <h2 className=\"uppercase text-blue-600\">Requesting Teachers</h2>\n              </div>\n            </div>\n          }\n          widthSizeClass={ModalSize.medium}\n          padding={{ title: true, body: false, footer: false }}\n        >\n          <div className=\"px-4 mx-auto mb-8\">\n            {feedBack && feedBack.type !== \"\" && (\n              <div\n                className={`alert-${feedBack.type} flex flex-row items-center relative`}\n              >\n                <span className=\"absolute top-0 bottom-0 right-0 px-4 py-3\">\n                  <MdClose\n                    className=\"h-5 w-5 text-gray-700 hover:font-bold\"\n                    title=\"Close\"\n                    onClick={() => setFeedBack({ type: \"\", message: \"\" })}\n                  />\n                </span>\n                <MdErrorOutline className=\"h-10 w-10\" />\n                <div className=\"alert-content ml-4\">\n                  <div className=\"alert-title font-semibold text-lg\">\n                    {feedBack.type === \"success\" ? \"Success\" : \"Error\"}\n                  </div>\n                  <div className=\"alert-description text-sm\">\n                    {feedBack.message}\n                  </div>\n                </div>\n              </div>\n            )}\n            <form onSubmit={submitRequest}>\n              <div className=\"bg-white\">\n                <div className=\"text-base leading-6 space-y-4 text-gray-700 sm:text-lg sm:leading-7\">\n                  <div className=\"flex flex-col\">\n                    <label>Select Position</label>\n                    <select\n                      className=\"border-2 border-gray-700 bg-white p-2 rounded focus:outline-none focus:bg-gray-100\"\n                      // defaultValue={}\n                      onChange={(e) => {\n                        setPositionId(e.target.value);\n                        setQualifacation(\n                          positions\n                            ? getPositionById(positions, e.target.value)\n                                .requirements[0].user_required_docs[0].title\n                            : \"\"\n                        );\n                      }}\n                      required\n                    >\n                      <option value=\"\">Choose Position</option>\n                      {positions && positions.length > 0 ? (\n                        positions.map((position, index) => (\n                          <option key={index + 11} value={position.position_id}>\n                            {position.position_title}\n                          </option>\n                        ))\n                      ) : (\n                        <option value=\"\">No position found</option>\n                      )}\n                    </select>\n                  </div>\n                  <div className=\"flex flex-col\">\n                    <label>Qualification</label>\n                    <input\n                      type=\"text\"\n                      className=\"appearance-none rounded w-full py-1 px-4 border-2 border-gray-700 bg-white focus:outline-none focus:bg-gray-100\"\n                      placeholder=\"Qualification\"\n                      value={qualification}\n                      disabled\n                    />\n                  </div>\n                  <div className=\"flex flex-col\">\n                    <label>Posts (number)</label>\n                    <input\n                      type=\"number\"\n                      className=\"appearance-none rounded w-full py-1 px-4 border-2 border-gray-700 bg-white focus:outline-none focus:bg-gray-100\"\n                      value={requestedPosts}\n                      onChange={(e) =>\n                        setRequestedPosts(Number(e.target.value))\n                      }\n                      min={1}\n                      placeholder=\"1\"\n                      required\n                    />\n                  </div>\n                  <div className=\"flex flex-col\">\n                    <label>Explanation</label>\n                    <textarea\n                      name=\"description\"\n                      className=\"appearance-none rounded w-full py-1 px-4 border-2 border-gray-700 bg-white focus:outline-none focus:bg-gray-100\"\n                      id=\"description\"\n                      placeholder=\"Explanation\"\n                      value={requestExplanation}\n                      onChange={(e) => setRequestExplanation(e.target.value)}\n                      rows={2}\n                      required\n                    ></textarea>\n                  </div>\n                </div>\n                <div className=\"pt-4 flex justify-between\">\n                  <button\n                    className=\"btn bg-gray-400 text-white hover:bg-gray-600\"\n                    onClick={() => {\n                      setPositionId(\"\");\n                      setQualifacation(\"\");\n                      setRequestedPosts(0);\n                      setRequestExplanation(\"\");\n                      setFeedBack({ type: \"\", message: \"\" });\n                      setRequestTeacher(false);\n                    }}\n                  >\n                    Exit\n                  </button>\n                  <button\n                    className=\"btn bg-primary text-white hover:bg-blue-600\"\n                    disabled={loadind}\n                  >\n                    {loadind ? \"Loading...\" : \"Request\"}\n                  </button>\n                </div>\n              </div>\n            </form>\n          </div>\n        </Modal>\n      )}\n      {/* End of Upload Modal */}\n    </div>\n  );\n};\n\nconst mapStateToProps = ({\n  schools,\n  positionRequests,\n}: StoreState): {\n  schoolPosts: PostSchoolInterface[];\n  positions: PositionInterface[] | null;\n} => {\n  return { schoolPosts: schools.schoolPosts, positions: positionRequests };\n};\n\nexport const HeadTeacher = connect(mapStateToProps, {\n  fetchPositions,\n  fetchSchoolPosts,\n  createSchoolPost,\n})(RequestTeacher);\n"],"sourceRoot":""}
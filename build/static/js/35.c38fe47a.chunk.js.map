{"version":3,"sources":["components/Navigation/SideNavigation.tsx","actions/location.ts","containers/Locations/RoomForm.tsx","containers/Locations/CenterForm.tsx","containers/Locations/ViewCenters.tsx","containers/Locations/index.tsx"],"names":["_SideNavigation","props","componentDidMount","PageHasSubNav","componentWillUnmount","state","loading","this","auth","isAuthenticated","navActive","system","navigation","className","children","React","Component","SideNavigation","connect","NavToogle","MainItem","title","icon","MdBrightness1","active","count","IconDefined","SubItemContainer","SubItem","getAllRoom","callback","dispatch","a","axios","get","API","APPLICATION","res","type","ActionTypes","GET_ALL_ROOM","payload","data","console","error","errorToText","FC_CreateCenter","log","CREATE_CENTER","FC_UpdateCenter","UPDATE_CENTER","FC_DeleteCenter","DELETE_CENTER","FC_CreateRoom","CREATE_ROOM","FC_UpdateRoom","UPDATE_ROOM","FC_DeleteRoom","delete_room","DELETE_ROOM","RoomForm","placeholder","value","roomNumber","onChange","e","setRoomNumber","parseInt","target","disabled","loadingRequest","roomCapacity","setRoomCapacity","onClick","setActionTypes","setThisRoom","handleSubmitRoom","CenterForm","element","setError","setCenterName","centerName","msg","handleSubmit","PushPopupAlert","thisProvinceId","thisDistrict","thisCenter","thisRoom","actionTypes","setThisDistrict","setLoadingRequest","setThisCenter","useState","loadingDeletion","setLoadingDeletion","searchCenter","setSearchCenter","length","post","district_id","center_name","rooms","province_id","theme","PopupAlertTheme","success","map","room","examination_center_room_id","patch","examination_center_id","isUsed","doc_category_error","danger","handleDelete","centerId","window","confirm","delete","center_id","newArr","center","centers","filter","province_error","room_type","room_number","capacity","occupied","room_id","handleDeleteRoom","roomId","warning","district_name","searchData","index","id","Modal","backDrop","Themes","default","close","displayClose","backDropClose","widthSizeClass","ModalSize","medium","padding","body","footer","Locations","locations","roomLocation","thisProvince","setThisProvince","setLoading","useEffect","districts","status","province","province_name","loc","district"],"mappings":"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","file":"static/js/35.c38fe47a.chunk.js","sourcesContent":["import React, { FC, ReactElement, ReactNode } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Auth, System } from \"../../actions\";\nimport { StoreState } from \"../../reducers\";\nimport { NavToogle, PageHasSubNav } from \"../../actions\";\nimport { MdBrightness1, MdSearch } from \"react-icons/md\";\n\n// props for the component\ninterface AppProps {\n  auth: Auth;\n  system: System;\n  PageHasSubNav: Function;\n  NavToogle: Function;\n  children: ReactNode;\n}\n//\ninterface AppState {\n  loading: boolean;\n}\n\nclass _SideNavigation extends React.Component<AppProps, AppState> {\n  constructor(props: AppProps) {\n    super(props);\n\n    this.state = {\n      loading: false,\n    };\n  }\n\n  componentDidMount = () => this.props.PageHasSubNav(true);\n  componentWillUnmount = () => this.props.PageHasSubNav(false);\n\n  render() {\n    const isAuthenticated = this.props.auth.isAuthenticated;\n\n    if (isAuthenticated === false) {\n      return null;\n    }\n\n    const navActive = this.props.system.navigation;\n    return (\n      <div\n        className={`fixed w-48 p-1 pr-2 pl-6 text-gray-700 bg-white ${\n          navActive === true ? \"lg:left-16  left-16\" : \" -left-72 lg:left-16\"\n        }  top-0 bottom-0 pt-20 z-30 shadow-lg  transition-all duration-500 ease-in-out overflow-y-auto`}\n      >\n        {this.props.children}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = ({\n  auth,\n  system,\n}: StoreState): { auth: Auth; system: System } => {\n  return { auth: auth, system: system };\n};\n\nexport const SideNavigation = connect(mapStateToProps, {\n  NavToogle,\n  PageHasSubNav,\n})(_SideNavigation);\n\n//************************************ FORM SEARCH **************************************** */\n\ntype SearchComponentInterface = {\n  data: any[];\n};\n\nexport const Search: FC<SearchComponentInterface> = ({\n  data,\n}): ReactElement => {\n  return (\n    <div className=\"m-1 rounded-md shadow-md border border-blue-400 bg-white p-1 flex \">\n      <label htmlFor=\"search-text\" className=\"inline-block text-2xl\">\n        <MdSearch className=\"inline-block text-blue-400\" />\n      </label>\n      <input\n        type=\"search\"\n        className=\"outline-none bg-transparent flex-1 pl-1\"\n        placeholder=\"Search\"\n        id=\"search-text\"\n      />\n    </div>\n  );\n};\n\n//************************************ FORM SEARCH **************************************** */\n\ntype MainItemComponentInterface = {\n  title: string;\n  icon?: any;\n  active?: boolean;\n  count?: number;\n};\n\n/**\n *\n * @param param0\n * @returns\n */\nexport const MainItem: FC<MainItemComponentInterface> = ({\n  title = \"\",\n  icon = MdBrightness1,\n  active = false,\n  count = 0,\n}): ReactElement => {\n  const IconDefined = icon;\n  return (\n    <section\n      className={`${\n        active === true\n          ? \"bg-blue-500 text-white font-bold\"\n          : \"bg-blue-100 text-blue-800\"\n      } mb-1 hover:font-bold py-1 hover:bg-blue-400 hover:text-white --font-bold  px-2 rounded-md flex cursor-pointer items-center`}\n    >\n      <section className=\"flex-1\">\n        <IconDefined className=\"inline-block mr-1 text-xs\" />\n        <span>{title}</span>\n      </section>\n\n      {count > 0 ? (\n        <span className=\"px-0.5 my-1 text-xs bg-blue-600 text-white rounded-full\">\n          {count}\n        </span>\n      ) : null}\n    </section>\n  );\n};\n\n//************************************ FORM SEARCH **************************************** */\n\ntype SubItemContainerComponentInterface = {\n  children: ReactNode;\n};\n\n/**\n *\n * @param param0\n * @returns\n */\nexport const SubItemContainer: FC<SubItemContainerComponentInterface> = ({\n  children,\n}): ReactElement => {\n  return (\n    <div className=\"ml-3 overflow-y-auto border-l-2 border-blue-200 -mt-1 pt-2 mb-2 pl-1 cursor-pointer\">\n      {children}\n    </div>\n  );\n};\n\n//************************************ FORM SEARCH **************************************** */\n\ntype SubItemComponentInterface = {\n  title: string;\n  icon?: any;\n  active?: boolean;\n  count?: number;\n};\n\n/**\n *\n * @param param0\n * @returns\n * @important Remenber to use these components inside the <SubItemContainer>...</SubItemContainer>\n */\nexport const SubItem: FC<SubItemComponentInterface> = ({\n  title = \"\",\n  icon = MdBrightness1,\n  active = false,\n  count = 0,\n}): ReactElement => {\n  const IconDefined = icon;\n\n  return (\n    <div\n      className={`animate__animated animate__zoomIn animate__faster ${\n        active === true ? \"bg-blue-500 text-white font-bold\" : \" text-blue-800\"\n      } text-blue-800 bg-blue-200 rounded-md px-1 mb-1 flex items-center py-1 font-bold`}\n    >\n      <IconDefined\n        className={`inline-block mr-0.1 text-xs ${\n          active === true ? \"text-white\" : \"\"\n        }`}\n      />\n      <span\n        className={`inline-block pl-1 ${active === true ? \"text-white\" : \"\"}`}\n      >\n        {title}\n      </span>\n      {count >= 1 ? (\n        <span\n          className={`text-sm fint-bold ${active === true ? \"text-white\" : \"\"}`}\n        >\n          {count}\n        </span>\n      ) : null}\n    </div>\n  );\n};\n","import axios from \"axios\";\nimport { Dispatch } from \"redux\";\nimport { ActionTypes } from \"./types\";\nimport { API } from \"../utils/api\";\nimport {\n  CentersInterface,\n  DistrictInterface,\n  RoomLocationInterface,\n  RoomsInterface,\n} from \"../shared/interfaces\";\nimport { errorToText } from \"../utils/errors\";\n\n/**\n * * ****************************** INTERFACES *****************************\n */\n\nexport interface getAllRoomActions {\n  type: ActionTypes.GET_ALL_ROOM;\n  payload: RoomLocationInterface[];\n}\n\nexport interface createProvinceActions {\n  type: ActionTypes.CREATE_PROVINCE;\n  payload: RoomLocationInterface;\n}\n\nexport interface updateProvinceActions {\n  type: ActionTypes.UPDATE_PROVINCE;\n  payload: {\n    province_id: string;\n    province_name: string;\n  };\n}\n\nexport interface deleteProvinceActions {\n  type: ActionTypes.DELETE_PROVINCE;\n  payload: string;\n}\n\n// ============ DISTRICT =================\nexport interface createDistrictActions {\n  type: ActionTypes.CREATE_DISTRICT;\n  payload: { province_id: string; data: DistrictInterface };\n}\n\nexport interface updateDistrictActions {\n  type: ActionTypes.UPDATE_DISTRICT;\n  payload: {\n    province_id: string;\n    district_id: string;\n    district_name: string;\n  };\n}\n\nexport interface deleteDistrictActions {\n  type: ActionTypes.DELETE_DISTRICT;\n  payload: { province_id: string; district_id: string };\n}\n\n// ============ CENTERS =================\nexport interface createCenterActions {\n  type: ActionTypes.CREATE_CENTER;\n  payload: {\n    province_id: string;\n    district_id: string;\n    data: CentersInterface;\n  };\n}\n\nexport interface updateCenterActions {\n  type: ActionTypes.UPDATE_CENTER;\n  payload: {\n    province_id: string;\n    district_id: string;\n    examination_center_id: string;\n    center_name: string;\n  };\n}\n\nexport interface deleteCenterActions {\n  type: ActionTypes.DELETE_CENTER;\n  payload: { province_id: string; district_id: string; center_id: string };\n}\n\n// ============ ROOMS =================\nexport interface createRoomActions {\n  type: ActionTypes.CREATE_ROOM;\n  payload: {\n    province_id: string;\n    district_id: string;\n    center_id: string;\n    data: RoomsInterface;\n  };\n}\n\nexport interface updateRoomActions {\n  type: ActionTypes.UPDATE_ROOM;\n  payload: {\n    province_id: string;\n    district_id: string;\n    center_id: string;\n    room_id: string;\n    room_number: number;\n    capacity: number;\n  };\n}\n\nexport interface deleteRoomActions {\n  type: ActionTypes.DELETE_ROOM;\n  payload: {\n    province_id: string;\n    district_id: string;\n    center_id: string;\n    room_id: string;\n  };\n}\n\nexport type RoomActionType =\n  | getAllRoomActions\n  | createProvinceActions\n  | updateProvinceActions\n  | deleteProvinceActions\n  | createDistrictActions\n  | updateDistrictActions\n  | deleteDistrictActions\n  | createCenterActions\n  | updateCenterActions\n  | deleteCenterActions\n  | createRoomActions\n  | updateRoomActions\n  | deleteRoomActions;\n\n/**\n * * ****************************** ACTIONS *****************************\n */\n\nexport const getAllRoom = (callback: Function) => {\n  return async (dispatch: Dispatch) => {\n    callback(true, \"\");\n    try {\n      const res = await axios.get<RoomLocationInterface[]>(\n        `${API.APPLICATION}/roomlocation`\n      );\n      dispatch<getAllRoomActions>({\n        type: ActionTypes.GET_ALL_ROOM,\n        payload: res.data,\n      });\n      callback(false, \"\");\n    } catch (error) {\n      console.error(\"Err: \", error);\n      callback(false, errorToText(error));\n    }\n  };\n};\n\nexport const FC_CreateProvince = (data: RoomLocationInterface) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<createProvinceActions>({\n      type: ActionTypes.CREATE_PROVINCE,\n      payload: data,\n    });\n  };\n};\n\nexport const FC_UpdateProvince = (data: {\n  province_id: string;\n  province_name: string;\n}) => {\n  console.log({ data });\n  return async (dispatch: Dispatch) => {\n    dispatch<updateProvinceActions>({\n      type: ActionTypes.UPDATE_PROVINCE,\n      payload: data,\n    });\n  };\n};\n\nexport const FC_DeleteProvince = (data: string) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<deleteProvinceActions>({\n      type: ActionTypes.DELETE_PROVINCE,\n      payload: data,\n    });\n  };\n};\n\n// DISTRICT =================\nexport const FC_CreateDistrict = (data: {\n  province_id: string;\n  data: DistrictInterface;\n}) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<createDistrictActions>({\n      type: ActionTypes.CREATE_DISTRICT,\n      payload: data,\n    });\n  };\n};\n\nexport const FC_UpdateDistrict = (data: {\n  province_id: string;\n  district_id: string;\n  district_name: string;\n}) => {\n  console.log({ data });\n  return async (dispatch: Dispatch) => {\n    dispatch<updateDistrictActions>({\n      type: ActionTypes.UPDATE_DISTRICT,\n      payload: data,\n    });\n  };\n};\n\nexport const FC_DeleteDistrict = (data: {\n  province_id: string;\n  district_id: string;\n}) => {\n  console.log({ data });\n  return async (dispatch: Dispatch) => {\n    dispatch<deleteDistrictActions>({\n      type: ActionTypes.DELETE_DISTRICT,\n      payload: data,\n    });\n  };\n};\n\n// CENTERS =================\nexport const FC_CreateCenter = (data: {\n  province_id: string;\n  district_id: string;\n  data: CentersInterface;\n}) => {\n  console.log({ data });\n  return async (dispatch: Dispatch) => {\n    dispatch<createCenterActions>({\n      type: ActionTypes.CREATE_CENTER,\n      payload: data,\n    });\n  };\n};\n\nexport const FC_UpdateCenter = (data: {\n  province_id: string;\n  district_id: string;\n  examination_center_id: string;\n  center_name: string;\n}) => {\n  console.log({ data });\n  return async (dispatch: Dispatch) => {\n    dispatch<updateCenterActions>({\n      type: ActionTypes.UPDATE_CENTER,\n      payload: data,\n    });\n  };\n};\n\nexport const FC_DeleteCenter = (data: {\n  province_id: string;\n  district_id: string;\n  center_id: string;\n}) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<deleteCenterActions>({\n      type: ActionTypes.DELETE_CENTER,\n      payload: data,\n    });\n  };\n};\n\n// ROOM =================\nexport const FC_CreateRoom = (data: {\n  province_id: string;\n  district_id: string;\n  center_id: string;\n  data: RoomsInterface;\n}) => {\n  console.log({ data });\n  return async (dispatch: Dispatch) => {\n    dispatch<createRoomActions>({\n      type: ActionTypes.CREATE_ROOM,\n      payload: data,\n    });\n  };\n};\n\nexport const FC_UpdateRoom = (data: {\n  province_id: string;\n  district_id: string;\n  center_id: string;\n  room_id: string;\n  room_number: number;\n  capacity: number;\n}) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<updateRoomActions>({\n      type: ActionTypes.UPDATE_ROOM,\n      payload: data,\n    });\n  };\n};\n\nexport const FC_DeleteRoom = (data: {\n  province_id: string;\n  district_id: string;\n  center_id: string;\n  room_id: string;\n}) => {\n  console.log({ delete_room: data });\n  return async (dispatch: Dispatch) => {\n    dispatch<deleteRoomActions>({\n      type: ActionTypes.DELETE_ROOM,\n      payload: data,\n    });\n  };\n};\n","import React, { Fragment } from \"react\";\nimport { RoomsInterface } from \"../../shared/interfaces\";\n\ninterface RoomFormProps {\n  roomNumber: number;\n  roomCapacity: number;\n  thisRoom: RoomsInterface | null;\n  loadingRequest: boolean;\n  setRoomNumber: React.Dispatch<React.SetStateAction<number>>;\n  setRoomCapacity: React.Dispatch<React.SetStateAction<number>>;\n  setThisRoom: React.Dispatch<React.SetStateAction<RoomsInterface | null>>;\n  setActionTypes: React.Dispatch<\n    React.SetStateAction<\n      | \"\"\n      | \"CREATE_PROVINCE\"\n      | \"UPDATE_PROVINCE\"\n      | \"CREATE_DISTRICT\"\n      | \"UPDATE_DISTRICT\"\n      | \"CREATE_CENTER\"\n      | \"UPDATE_CENTER\"\n      | \"CREATE_ROOM\"\n      | \"UPDATE_ROOM\"\n    >\n  >;\n  handleSubmitRoom: () => Promise<void>;\n}\n\nconst RoomForm = (props: RoomFormProps) => {\n  return (\n    <Fragment>\n      <div className=\"py-4 text-base leading-6 space-y-4 text-gray-700 sm:text-lg sm:leading-7\">\n        <div className=\"flex flex-col\">\n          <label>Room</label>\n          <input\n            type=\"number\"\n            className=\"text-left input-white w-20 inline-block border-gray-500 border-2\"\n            placeholder=\"Room number\"\n            value={props.roomNumber}\n            onChange={(e) => props.setRoomNumber(parseInt(e.target.value))}\n            disabled={props.loadingRequest}\n          />\n        </div>\n        <div className=\"flex flex-col\">\n          <label>Seats Capacity</label>\n          <input\n            type=\"number\"\n            className=\"text-left input-white w-20 inline-block border-gray-500 border-2\"\n            placeholder=\"Room capacity\"\n            value={props.roomCapacity}\n            onChange={(e) => props.setRoomCapacity(parseInt(e.target.value))}\n            disabled={props.loadingRequest}\n          />\n        </div>\n      </div>\n      <div className=\"pt-4 flex justify-between\">\n        <button\n          onClick={() => {\n            props.setActionTypes(\"\");\n            props.setThisRoom(null);\n            props.setRoomCapacity(0);\n            props.setRoomNumber(0);\n          }}\n          className={`btn bg-gray-400 text-white hover:bg-gray-600`}\n          type=\"button\"\n          disabled={props.loadingRequest}\n        >\n          Exit\n        </button>\n        <button\n          className=\"btn bg-primary text-white hover:bg-blue-600\"\n          type=\"button\"\n          onClick={() => props.handleSubmitRoom()}\n          disabled={props.loadingRequest}\n        >\n          {props.loadingRequest ? \"Loading...\" : \"Save\"}\n        </button>\n      </div>\n    </Fragment>\n  );\n};\n\nexport default RoomForm;\n","import React, { Fragment } from \"react\";\nimport { MdCancel, MdSave } from \"react-icons/md\";\n\ninterface CenterFormProps {\n  loadingRequest: boolean;\n  centerName: string;\n  error: {\n    element: string;\n    msg: string;\n  } | null;\n  setCenterName: (value: React.SetStateAction<string>) => void;\n  setError: (\n    value: React.SetStateAction<{\n      element: string;\n      msg: string;\n    } | null>\n  ) => void;\n  setActionTypes: React.Dispatch<\n    React.SetStateAction<\n      | \"\"\n      | \"CREATE_PROVINCE\"\n      | \"UPDATE_PROVINCE\"\n      | \"CREATE_DISTRICT\"\n      | \"UPDATE_DISTRICT\"\n      | \"CREATE_CENTER\"\n      | \"UPDATE_CENTER\"\n      | \"CREATE_ROOM\"\n      | \"UPDATE_ROOM\"\n    >\n  >;\n  handleSubmit: () => Promise<void>;\n}\n\nconst CenterForm: React.FC<CenterFormProps> = (props) => {\n  return (\n    <Fragment>\n      <div className=\"py-4 text-base leading-6 space-y-4 text-gray-700 sm:text-lg sm:leading-7\">\n        <div className=\"flex flex-col\">\n          <label>Center name</label>\n          <input\n            type=\"text\"\n            className={`bg-white py-1 px-2 border-2 ${\n              props.error && props.error.element === \"center_name\"\n                ? \"border-red-700\"\n                : \"border-gray-700\"\n            } rounded focus:outline-none focus:bg-gray-100`}\n            onChange={(e) => {\n              props.setError(null);\n              props.setCenterName(e.target.value);\n            }}\n            value={props.centerName}\n            disabled={props.loadingRequest}\n          />\n          {props.error && (\n            <span className=\"text-red-700\">{props.error.msg}</span>\n          )}\n        </div>\n      </div>\n      <div className=\"pt-4 flex justify-between\">\n        <button\n          type=\"button\"\n          className=\"btn bg-gray-500 focus:outline-none hover:bg-gray-700 text-white flex items-center gap-1\"\n          onClick={() => {\n            props.setActionTypes(\"\");\n            props.setCenterName(\"\");\n          }}\n          disabled={props.loadingRequest}\n        >\n          <MdCancel\n            className={`inline-block mr-1 text-xl font-bold ${\n              props.loadingRequest ? \"animate-pulse\" : \"\"\n            }`}\n          />\n          Cancel\n        </button>\n        <button\n          type=\"button\"\n          className=\"btn btn-blue focus:outline-none flex items-center gap-1\"\n          onClick={() => props.handleSubmit()}\n          disabled={props.loadingRequest}\n        >\n          <MdSave className=\"inline-blocktext-xl font-bold\" />\n          <span>{props.loadingRequest ? \"loading...\" : \"Save\"}</span>\n        </button>\n      </div>\n    </Fragment>\n  );\n};\n\nexport default CenterForm;\n","import React, { useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport {\n  MdAdd,\n  MdClear,\n  MdCreate,\n  MdDelete,\n  MdExpandLess,\n  MdExpandMore,\n} from \"react-icons/md\";\nimport {\n  FC_CreateCenter,\n  FC_CreateRoom,\n  FC_DeleteCenter,\n  FC_DeleteRoom,\n  FC_UpdateCenter,\n  FC_UpdateRoom,\n} from \"../../actions/location\";\nimport axios from \"axios\";\nimport { API } from \"../../utils/api\";\nimport {\n  CentersInterface,\n  DistrictInterface,\n  RoomsInterface,\n} from \"../../shared/interfaces\";\nimport { PushPopupAlert } from \"../../actions/system\";\nimport { PopupAlertData } from \"../../components/Alert/Popup\";\nimport { PopupAlertTheme } from \"../../interfaces/popupAlert\";\nimport { errorToText } from \"../../utils/errors\";\nimport Modal, { ModalSize, Themes } from \"../../components/Modal/Modal\";\nimport { AiOutlineFileSearch } from \"react-icons/ai\";\nimport RoomForm from \"./RoomForm\";\nimport CenterForm from \"./CenterForm\";\nimport searchData from \"../../utils/search\";\n\ninterface AppProps {\n  thisProvinceId: string;\n  thisDistrict: DistrictInterface;\n  thisCenter: CentersInterface | null;\n  thisRoom: RoomsInterface | null;\n  loadingRequest: boolean;\n  actionTypes:\n    | \"\"\n    | \"CREATE_PROVINCE\"\n    | \"UPDATE_PROVINCE\"\n    | \"CREATE_DISTRICT\"\n    | \"UPDATE_DISTRICT\"\n    | \"CREATE_CENTER\"\n    | \"UPDATE_CENTER\"\n    | \"CREATE_ROOM\"\n    | \"UPDATE_ROOM\";\n  setLoadingRequest: React.Dispatch<React.SetStateAction<boolean>>;\n  setThisCenter: React.Dispatch<React.SetStateAction<CentersInterface | null>>;\n  setThisRoom: React.Dispatch<React.SetStateAction<RoomsInterface | null>>;\n  setThisDistrict: React.Dispatch<\n    React.SetStateAction<DistrictInterface | null>\n  >;\n  setActionTypes: React.Dispatch<\n    React.SetStateAction<\n      | \"\"\n      | \"CREATE_PROVINCE\"\n      | \"UPDATE_PROVINCE\"\n      | \"CREATE_DISTRICT\"\n      | \"UPDATE_DISTRICT\"\n      | \"CREATE_CENTER\"\n      | \"UPDATE_CENTER\"\n      | \"CREATE_ROOM\"\n      | \"UPDATE_ROOM\"\n    >\n  >;\n  FC_CreateCenter: Function;\n  FC_UpdateCenter: Function;\n  FC_DeleteCenter: Function;\n  FC_CreateRoom: Function;\n  FC_UpdateRoom: Function;\n  FC_DeleteRoom: Function;\n  PushPopupAlert: (alert: PopupAlertData) => void;\n}\n\nconst ViewCenters: React.FC<AppProps> = ({\n  thisProvinceId,\n  thisDistrict,\n  thisCenter,\n  thisRoom,\n  loadingRequest,\n  actionTypes,\n  setThisDistrict,\n  setLoadingRequest,\n  setThisCenter,\n  setThisRoom,\n  setActionTypes,\n  FC_CreateCenter,\n  FC_UpdateCenter,\n  FC_DeleteCenter,\n  FC_CreateRoom,\n  FC_UpdateRoom,\n  FC_DeleteRoom,\n  PushPopupAlert,\n}) => {\n  const [centerName, setCenterName] = useState<string>(\"\");\n  const [roomNumber, setRoomNumber] = useState<number>(0);\n  const [roomCapacity, setRoomCapacity] = useState<number>(0);\n  const [error, setError] = useState<{ element: string; msg: string } | null>(\n    null\n  );\n  const [loadingDeletion, setLoadingDeletion] = useState<string>(\"\");\n  const [searchCenter, setSearchCenter] = useState<string>(\"\");\n\n  const handleSubmit = async () => {\n    if (!centerName.length) {\n      return setError({\n        element: \"center_name\",\n        msg: \"Center name is required\",\n      });\n    }\n    setLoadingRequest(true);\n    try {\n      let res;\n      if (actionTypes === \"CREATE_CENTER\") {\n        res = await axios.post<{ data: CentersInterface }>(\n          `${API.APPLICATION}/center`,\n          {\n            district_id: thisDistrict.district_id,\n            center_name: centerName,\n            rooms: [],\n          }\n        );\n        if (res.data) {\n          console.log({ res: res.data.data });\n          FC_CreateCenter({\n            province_id: thisProvinceId,\n            district_id: thisDistrict.district_id,\n            data: res.data.data,\n          });\n          PushPopupAlert({\n            title: \"New Center created successfully\",\n            theme: PopupAlertTheme.success,\n          });\n          setLoadingRequest(false);\n          setActionTypes(\"\");\n          setCenterName(\"\");\n        }\n      } else if (thisCenter && actionTypes === \"UPDATE_CENTER\") {\n        const rooms: string[] = thisCenter.rooms.map(\n          (room) => room.examination_center_room_id\n        );\n        res = await axios.patch<{ update: CentersInterface }>(\n          `${API.APPLICATION}/center`,\n          {\n            examination_center_id: thisCenter.examination_center_id,\n            center_name: centerName,\n            rooms,\n            isUsed: true,\n          }\n        );\n        if (res.data) {\n          FC_UpdateCenter({\n            province_id: thisProvinceId,\n            district_id: thisDistrict.district_id,\n            examination_center_id: thisCenter.examination_center_id,\n            center_name: centerName,\n          });\n          PushPopupAlert({\n            title: \"Center updated successfully\",\n            theme: PopupAlertTheme.success,\n          });\n          setLoadingRequest(false);\n          setActionTypes(\"\");\n          setCenterName(\"\");\n        }\n      }\n    } catch (error) {\n      console.log({ doc_category_error: error });\n      PushPopupAlert({\n        title: errorToText(error),\n        theme: PopupAlertTheme.danger,\n      });\n      setLoadingRequest(false);\n    }\n  };\n\n  const handleDelete = async (centerId: string) => {\n    if (window.confirm(\"Are you sure do you want to delete this center?\")) {\n      setLoadingDeletion(centerId);\n      try {\n        const res = await axios.delete<CentersInterface>(\n          `${API.APPLICATION}/center/${centerId}`\n        );\n\n        if (res.data) {\n          console.log({ res });\n          FC_DeleteCenter({\n            province_id: thisProvinceId,\n            district_id: thisDistrict.district_id,\n            center_id: centerId,\n          });\n          let newArr: DistrictInterface = { ...thisDistrict }; // copying the old datas array\n          let center: CentersInterface[] = [];\n\n          center = thisDistrict.centers.filter(\n            (element) => element.examination_center_id !== centerId\n          );\n          newArr.centers = center;\n          setThisDistrict(newArr);\n\n          PushPopupAlert({\n            title: \"Center deleted successfully\",\n            theme: PopupAlertTheme.success,\n          });\n          setLoadingRequest(false);\n          setActionTypes(\"\");\n        }\n      } catch (error) {\n        console.log({ province_error: error });\n        PushPopupAlert({\n          title: errorToText(error),\n          theme: PopupAlertTheme.danger,\n        });\n        setLoadingRequest(false);\n      }\n      setLoadingDeletion(\"\");\n    }\n  };\n\n  const handleSubmitRoom = async () => {\n    if (roomNumber <= 0) {\n      return setError({\n        element: \"room_number\",\n        msg: \"Room Name is required\",\n      });\n    }\n\n    if (roomCapacity <= 0) {\n      return setError({\n        element: \"room_capacity\",\n        msg: \"Enter valid room capacity\",\n      });\n    }\n\n    if (!thisCenter) {\n      return PushPopupAlert({\n        title: \"Center is Required\",\n        theme: PopupAlertTheme.success,\n      });\n    }\n\n    setLoadingRequest(true);\n    try {\n      let res;\n      if (actionTypes === \"CREATE_ROOM\") {\n        res = await axios.post<{ data: RoomsInterface }>(\n          `${API.APPLICATION}/centerroom`,\n          {\n            center_id: thisCenter.examination_center_id,\n            room_type: \"Physical room\",\n            room_number: roomNumber,\n            capacity: roomCapacity,\n            occupied: 0,\n          }\n        );\n        if (res.data) {\n          console.log({ res });\n          FC_CreateRoom({\n            province_id: thisProvinceId,\n            district_id: thisDistrict.district_id,\n            center_id: thisCenter.examination_center_id,\n            data: res.data.data,\n          });\n          PushPopupAlert({\n            title: \"New Room created successfully\",\n            theme: PopupAlertTheme.success,\n          });\n          setLoadingRequest(false);\n          setActionTypes(\"\");\n          setRoomNumber(0);\n          setRoomCapacity(0);\n        }\n      } else if (thisRoom && actionTypes === \"UPDATE_ROOM\") {\n        res = await axios.patch<{ data: RoomsInterface }>(\n          `${API.APPLICATION}/centerroom`,\n          {\n            examination_center_room_id: thisRoom.examination_center_room_id,\n            center_id: thisCenter.examination_center_id,\n            room_type: thisRoom.room_type,\n            room_number: roomNumber,\n            capacity: roomCapacity,\n            occupied: thisRoom.occupied,\n            isUsed: true,\n          }\n        );\n        if (res.data) {\n          console.log({ res });\n          FC_UpdateRoom({\n            province_id: thisProvinceId,\n            district_id: thisDistrict.district_id,\n            center_id: thisCenter.examination_center_id,\n            room_id: thisRoom.examination_center_room_id,\n            room_number: roomNumber,\n            capacity: roomCapacity,\n          });\n          PushPopupAlert({\n            title: \"Room updated successfully\",\n            theme: PopupAlertTheme.success,\n          });\n          setLoadingRequest(false);\n          setActionTypes(\"\");\n          setRoomNumber(0);\n          setRoomCapacity(0);\n          setThisRoom(null);\n        }\n      }\n    } catch (error) {\n      console.log({ doc_category_error: error });\n      PushPopupAlert({\n        title: errorToText(error),\n        theme: PopupAlertTheme.danger,\n      });\n      setLoadingRequest(false);\n    }\n  };\n\n  const handleDeleteRoom = async (roomId: string) => {\n    if (window.confirm(\"Are you sure do you want to delete this room?\")) {\n      if (thisCenter === null) {\n        return PushPopupAlert({\n          title: \"Center is required!\",\n          theme: PopupAlertTheme.warning,\n        });\n      }\n      setLoadingDeletion(roomId);\n      try {\n        const res = await axios.delete<CentersInterface>(\n          `${API.APPLICATION}/centerroom/${roomId}`\n        );\n        if (res.data) {\n          console.log({ res });\n          let newArr: CentersInterface = { ...thisCenter }; // copying the old datas array\n          let room: RoomsInterface[] = [];\n\n          room = thisCenter.rooms.filter(\n            (element) => element.examination_center_room_id !== roomId\n          );\n          newArr.rooms = room;\n          FC_DeleteRoom({\n            province_id: thisProvinceId,\n            district_id: thisDistrict.district_id,\n            center_id: thisCenter.examination_center_id,\n            room_id: roomId,\n          });\n          setThisCenter(newArr);\n          PushPopupAlert({\n            title: \"Room deleted successfully\",\n            theme: PopupAlertTheme.success,\n          });\n          setLoadingRequest(false);\n          setActionTypes(\"\");\n        }\n      } catch (error) {\n        console.log({ province_error: error });\n        PushPopupAlert({\n          title: errorToText(error),\n          theme: PopupAlertTheme.danger,\n        });\n        setLoadingRequest(false);\n      }\n      setLoadingDeletion(\"\");\n    }\n  };\n\n  return (\n    <div\n      className={`bg-white w-full hidden md:block p-2 border border-gray-300 rounded shadow`}\n    >\n      <div className=\"border-b px-2 py-3 flex justify-between\">\n        <h2 className=\"text-3xl font-semibold text-gray-800\">\n          List of Centers\n        </h2>\n        <button\n          type=\"button\"\n          className={`btn mb-1 border-2 border-blue-500 bg-blue-500 hover:bg-white\n        text-white rounded-md flex items-center font-bold hover:text-gray-700 focus:outline-none ${\n          loadingRequest && \"cursor-wait\"\n        } ${actionTypes !== \"\" && \"cursor-not-allowed\"}`}\n          onClick={() => setActionTypes(\"CREATE_CENTER\")}\n          disabled={actionTypes !== \"\" || loadingRequest}\n        >\n          <MdAdd className=\"inline-block mr-1 text-xl font-bold\" /> New Center\n        </button>\n      </div>\n\n      {thisDistrict.centers.length > 0 ? (\n        <div>\n          <div className=\"mt-2\">\n            <input\n              onChange={(e: React.ChangeEvent<HTMLInputElement>) =>\n                setSearchCenter(e.target.value)\n              }\n              type=\"text\"\n              className=\"input-white h-10 text-sm border-2 border-gray-400 focus:border-gray-500\"\n              placeholder={`Search ${thisDistrict.district_name}'s centers by title`}\n              value={searchCenter}\n            />\n          </div>\n          {searchData(thisDistrict.centers, searchCenter).map(\n            (center, index) => (\n              <div\n                key={index + center.examination_center_id}\n                className=\"p-2 my-3 rounded border border-gray-200 shadow-md\"\n              >\n                <div className=\"flex justify-between items-center\">\n                  <div className=\"ml-2\">\n                    <div className=\"text-2xl font-semibold text-gray-600\">\n                      {center.center_name}\n                    </div>\n                    <div className=\"text-base top-1 text-gray-600\">\n                      {center.rooms.length > 0\n                        ? center.rooms.length + \" Room(s)\"\n                        : null}\n                    </div>\n                  </div>\n                  <div className=\"flex items-center gap-2\">\n                    {thisCenter &&\n                      thisCenter.examination_center_id ===\n                        center.examination_center_id && (\n                        <button\n                          title=\"Update Sub-Category\"\n                          className={`btn btn-blue text-white flex justify-center items-center gap-1 focus:outline-none ${\n                            loadingRequest && \"cursor-wait\"\n                          } ${actionTypes !== \"\" && \"cursor-not-allowed\"}`}\n                          onClick={() => {\n                            setThisCenter(center);\n                            setCenterName(center.center_name);\n                            setActionTypes(\"UPDATE_CENTER\");\n                          }}\n                          disabled={loadingRequest || actionTypes !== \"\"}\n                        >\n                          <MdCreate className=\"w-6 h-6\" /> Edit\n                        </button>\n                      )}\n                    {thisCenter &&\n                      thisCenter.examination_center_id ===\n                        center.examination_center_id && (\n                        <button\n                          title=\"Delete Sub-Category\"\n                          className={`btn bg-red-500 hover:bg-red-600 text-white focus:outline-none ${\n                            loadingRequest && \"cursor-wait\"\n                          } ${actionTypes !== \"\" && \"cursor-not-allowed\"}`}\n                          onClick={() =>\n                            handleDelete(center.examination_center_id)\n                          }\n                          disabled={\n                            loadingRequest ||\n                            loadingDeletion.length > 0 ||\n                            actionTypes !== \"\"\n                          }\n                        >\n                          {loadingDeletion === center.examination_center_id ? (\n                            \"Loading...\"\n                          ) : (\n                            <div className=\"flex justify-center items-center gap-1\">\n                              <MdClear className=\"w-6 h-6\" /> Delete\n                            </div>\n                          )}\n                        </button>\n                      )}\n\n                    <button\n                      title={\n                        thisCenter &&\n                        thisCenter.examination_center_id ===\n                          center.examination_center_id\n                          ? \"Close Rooms\"\n                          : \"View Rooms\"\n                      }\n                      className={`${\n                        thisCenter &&\n                        thisCenter.examination_center_id ===\n                          center.examination_center_id\n                          ? \"hover:bg-gray-600\"\n                          : \"hover:bg-gray-500\"\n                      } p-2 rounded-full bg-gray-300 hover:shadow-md flex justify-center items-center focus:outline-none text-gray-800 hover:text-white`}\n                      onClick={() =>\n                        !thisCenter ||\n                        thisCenter.examination_center_id !==\n                          center.examination_center_id\n                          ? setThisCenter(center)\n                          : setThisCenter(null)\n                      }\n                    >\n                      {thisCenter &&\n                      thisCenter.examination_center_id ===\n                        center.examination_center_id ? (\n                        <MdExpandLess className=\"w-6 h-6\" />\n                      ) : (\n                        <MdExpandMore className=\"w-6 h-6\" />\n                      )}\n                    </button>\n                  </div>\n                </div>\n\n                {thisCenter &&\n                  thisCenter.examination_center_id ===\n                    center.examination_center_id && (\n                    <div\n                      className={`bg-white h-full w-full hidden md:block mt-2 p-2 pb-5 border border-gray-300 rounded shadow animate__animated animate__fadeIn`}\n                    >\n                      <div className=\"border-b px-2 py-3 flex justify-between\">\n                        <h2 className=\"text-3xl font-semibold text-gray-800\">\n                          List of Rooms\n                        </h2>\n\n                        <button\n                          type=\"button\"\n                          className={`btn hover:bg-blue-500 mb-1 border-2 border-blue-500 bg-white\n        hover:text-white rounded-md flex items-center font-bold text-gray-700 focus:outline-none gap-1 ${\n          loadingRequest && \"cursor-wait\"\n        } ${actionTypes !== \"\" && \"cursor-not-allowed\"}`}\n                          onClick={() => setActionTypes(\"CREATE_ROOM\")}\n                          disabled={actionTypes !== \"\" || loadingRequest}\n                        >\n                          <MdAdd className=\"inline-block mr-1 text-xl font-bold\" />\n                          New Room\n                        </button>\n                      </div>\n\n                      {center.rooms.length > 0 ? (\n                        <table\n                          className={`w-full shadow sm:rounded-lg table-auto order-table max-w-full`}\n                        >\n                          <thead className=\"bg-white border-b-2 border-gray-300 text-gray-600 font-bold text-sm\">\n                            <tr\n                              className={`text-left tracking-wide bg-gray-100 border-b-2 border-gray-500 text-gray-600 overflow-hidden`}\n                            >\n                              <th className={`p-3 text-left`}>Room</th>\n                              <th className={`p-3 text-left`}>Type</th>\n                              <th className={`p-3 text-left`}>Capacity</th>\n                              <th className={`p-3 text-left`}>Occupied</th>\n                              <th className={`p-3 text-left`}></th>\n                            </tr>\n                          </thead>\n                          <tbody\n                            id={`table-data_${thisDistrict.district_id}`}\n                            className=\"bg-white text-black text-base\"\n                          >\n                            {center.rooms.map(\n                              (room: RoomsInterface, index: number) => (\n                                <tr\n                                  key={index + room.examination_center_room_id}\n                                >\n                                  {/* <td className=\"p-3 text-left whitespace-nowrap\">{index + 1}</td> */}\n                                  <td className=\"p-3 text-left\">\n                                    {room.room_number}\n                                  </td>\n                                  <td className=\"p-3 text-left\">\n                                    {room.room_type}\n                                  </td>\n                                  <td className=\"p-3 text-left\">\n                                    {room.capacity}\n                                  </td>\n                                  <td className=\"p-3 text-left\">\n                                    {room.occupied}\n                                  </td>\n                                  <td>\n                                    <div className=\"flex items-center justify-center gap-2\">\n                                      <button\n                                        title=\"Update Sub-Category\"\n                                        className=\"bg-gray-50 hover:bg-blue-100 rounded-full px-1 py-1 focus:outline-none\"\n                                        onClick={() => {\n                                          setThisRoom(room);\n                                          setRoomCapacity(room.capacity);\n                                          setRoomNumber(room.room_number);\n                                          setActionTypes(\"UPDATE_ROOM\");\n                                        }}\n                                        disabled={\n                                          loadingRequest || actionTypes !== \"\"\n                                        }\n                                      >\n                                        <MdCreate className=\"text-blue-700 w-7 h-7\" />\n                                      </button>\n                                      <button\n                                        title=\"Delete Sub-Category\"\n                                        className=\"bg-gray-50 hover:bg-blue-100 rounded-full px-1 py-1 focus:outline-none\"\n                                        onClick={() =>\n                                          handleDeleteRoom(\n                                            room.examination_center_room_id\n                                          )\n                                        }\n                                        disabled={\n                                          loadingRequest || actionTypes !== \"\"\n                                        }\n                                      >\n                                        {loadingDeletion ===\n                                        room.examination_center_room_id ? (\n                                          \"Loading...\"\n                                        ) : (\n                                          <div className=\"flex justify-center items-center gap-1\">\n                                            <MdDelete className=\"text-red-700 w-7 h-7\" />\n                                          </div>\n                                        )}\n                                      </button>\n                                    </div>\n                                  </td>\n                                </tr>\n                              )\n                            )}\n                          </tbody>\n                        </table>\n                      ) : (\n                        <div className=\"text-center py-8\">\n                          <AiOutlineFileSearch className=\"w-24 h-24 mx-auto text-gray-600\" />\n                          <span className=\"text-gray-600 text-2xl\">\n                            No Data Found\n                          </span>\n                        </div>\n                      )}\n                    </div>\n                  )}\n              </div>\n            )\n          )}\n        </div>\n      ) : (\n        <div className=\"text-center py-8\">\n          <AiOutlineFileSearch className=\"w-24 h-24 mx-auto text-gray-600\" />\n          <span className=\"text-gray-600 text-2xl\">No Data Found</span>\n        </div>\n      )}\n\n      {/* modal for creating new categories or sub category */}\n      {actionTypes !== \"\" && (\n        <Modal\n          backDrop={true}\n          theme={Themes.default}\n          close={(): void => {}}\n          displayClose={false}\n          backDropClose={false}\n          title={\n            <div className=\"flex items-center space-x-5\">\n              <div className=\"block pl-2 font-semibold text-xl self-start text-gray-700\">\n                {/* <p className=\"text-base text-gray-500 font-medium\">\n                    You are{\" \"}\n                    {actionType === \"CREATE_SUB\" || \"CREATE_CAT\"\n                      ? \"creating\"\n                      : \"updating\"}\n                  </p> */}\n                <h2 className=\"uppercase text-back\">\n                  {actionTypes === \"CREATE_ROOM\"\n                    ? \"CREATING NEW ROOM\"\n                    : actionTypes === \"UPDATE_ROOM\" && \"UPDATING EXISTING ROOM\"}\n                  {actionTypes === \"CREATE_CENTER\"\n                    ? \"CREATING NEW CENTER\"\n                    : actionTypes === \"UPDATE_CENTER\" &&\n                      \"UPDATING EXISTING CENTER\"}\n                </h2>\n              </div>\n            </div>\n          }\n          widthSizeClass={ModalSize.medium}\n          padding={{ title: true, body: false, footer: false }}\n        >\n          <div className=\"mx-5 mb-8\">\n            <div className=\"divide-y divide-gray-200\">\n              {(actionTypes === \"CREATE_ROOM\" ||\n                actionTypes === \"UPDATE_ROOM\") && (\n                <RoomForm\n                  roomNumber={roomNumber}\n                  roomCapacity={roomCapacity}\n                  thisRoom={thisRoom}\n                  loadingRequest={loadingRequest}\n                  setRoomNumber={setRoomNumber}\n                  setRoomCapacity={setRoomCapacity}\n                  setThisRoom={setThisRoom}\n                  setActionTypes={setActionTypes}\n                  handleSubmitRoom={handleSubmitRoom}\n                />\n              )}\n              {(actionTypes === \"CREATE_CENTER\" ||\n                actionTypes === \"UPDATE_CENTER\") && (\n                <CenterForm\n                  centerName={centerName}\n                  error={error}\n                  loadingRequest={loadingRequest}\n                  setCenterName={setCenterName}\n                  setError={setError}\n                  setActionTypes={setActionTypes}\n                  handleSubmit={handleSubmit}\n                />\n              )}\n            </div>\n          </div>\n        </Modal>\n      )}\n      {/* end modal for creating new categories or sub category */}\n    </div>\n  );\n};\n\nexport default connect(null, {\n  FC_CreateCenter,\n  FC_UpdateCenter,\n  FC_DeleteCenter,\n  FC_CreateRoom,\n  FC_UpdateRoom,\n  FC_DeleteRoom,\n  PushPopupAlert,\n})(ViewCenters);\n","import React, { Fragment, useEffect, useState } from \"react\";\nimport { MdKeyboardArrowRight, MdLocationCity } from \"react-icons/md\";\nimport { connect } from \"react-redux\";\nimport { getAllRoom } from \"../../actions/location\";\nimport {\n  MainItem,\n  SideNavigation,\n} from \"../../components/Navigation/SideNavigation\";\nimport { StoreState } from \"../../reducers\";\nimport {\n  CentersInterface,\n  DistrictInterface,\n  RoomLocationInterface,\n  RoomsInterface,\n} from \"../../shared/interfaces\";\nimport ViewCenters from \"./ViewCenters\";\n\ninterface AppProps {\n  locations: RoomLocationInterface[];\n  getAllRoom: Function;\n}\nconst Index: React.FC<AppProps> = ({ locations, getAllRoom }) => {\n  const [actionTypes, setActionTypes] = useState<\n    | \"CREATE_PROVINCE\"\n    | \"UPDATE_PROVINCE\"\n    | \"CREATE_DISTRICT\"\n    | \"UPDATE_DISTRICT\"\n    | \"CREATE_CENTER\"\n    | \"UPDATE_CENTER\"\n    | \"CREATE_ROOM\"\n    | \"UPDATE_ROOM\"\n    | \"\"\n  >(\"\");\n  const [thisProvince, setThisProvince] =\n    useState<RoomLocationInterface | null>(null);\n  const [thisDistrict, setThisDistrict] = useState<DistrictInterface | null>(\n    null\n  );\n  const [thisCenter, setThisCenter] = useState<CentersInterface | null>(null);\n  const [thisRoom, setThisRoom] = useState<RoomsInterface | null>(null);\n  const [loading, setLoading] = useState<boolean>(true);\n  const [loadingRequest, setLoadingRequest] = useState<boolean>(false);\n\n  useEffect(() => {\n    setLoading(true);\n    if (!locations.length) {\n      getAllRoom((status: boolean, msg: string) => {\n        if (!status && msg.length > 0) console.log(msg);\n      });\n    } else if (locations.length && thisProvince === null) {\n      setThisProvince(locations[0]);\n    } else if (thisProvince && thisDistrict === null) {\n      setThisDistrict(locations[0].districts[0]);\n    } else {\n      setLoading(false);\n    }\n  }, [getAllRoom, locations.length, locations, thisProvince, thisDistrict]);\n\n  if (loading === true) {\n    return (\n      <div className=\"text-center mt-7 font-bold text-4xl text-gray-400 animate-pulse\">\n        Loading locations...\n      </div>\n    );\n  }\n\n  return (\n    <Fragment>\n      <SideNavigation>\n        <span className=\"text-base mt-2\">Provinces</span>\n        {locations.map((province, index) => (\n          <section\n            key={index + province.province_id}\n            className=\"mt-1\"\n            onClick={() => {\n              setThisProvince(province);\n              setThisDistrict(province.districts[0]);\n            }}\n          >\n            <MainItem\n              title={province.province_name}\n              active={\n                thisProvince &&\n                thisProvince.province_id === province.province_id\n                  ? true\n                  : false\n              }\n            />\n          </section>\n        ))}\n      </SideNavigation>\n\n      <div className=\"w-full my-5\">\n        {/* header title */}\n        <div className=\"flex flex-row items-start gap-2\">\n          <MdLocationCity className=\"text-blue-500 w-24 h-24\" />\n          <div className=\"flex justify-between w-full mt-2\">\n            <div className=\"flex flex-col\">\n              <h1 className=\"text-4xl font-semibold\">Locations Management</h1>\n\n              <div className=\"flex flex-row items-center md:gap-3 gap-2\">\n                <div className=\"flex flex-row items-center mt-2 gap-1\">\n                  {/* <span className=\"text-gray-600 text-lg\">Desc:</span> */}\n                  {thisProvince && (\n                    <span className=\"text-gray-600 text-lg font-bold\">\n                      {thisProvince.province_name}\n                    </span>\n                  )}\n                  {thisDistrict && (\n                    <div className=\"flex flex-row items-center gap-1\">\n                      <MdKeyboardArrowRight className=\"w-5 h-5\" />\n                      <span className=\"text-blue-600 text-lg font-bold\">\n                        {thisDistrict.district_name}\n                      </span>\n                    </div>\n                  )}\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n        {/* end header title */}\n\n        <div className=\"w-full flex h-full flex-col md:flex-row md:items-start gap-2\">\n          {/* ============================  DISTRICT ============================= */}\n          <div className=\"min-h-full w-1/4 bg-white shadow rounded border px-4 py-2\">\n            <span className=\"text-base mt-2\">Districts</span>\n            {thisProvince &&\n            locations.filter(\n              (loc) => loc.province_id === thisProvince.province_id\n            ).length > 0 ? (\n              locations\n                .filter(\n                  (loc) => loc.province_id === thisProvince.province_id\n                )[0]\n                .districts.map((district, index) => (\n                  <section\n                    key={index + district.district_id}\n                    className=\"mt-2\"\n                    onClick={() => setThisDistrict(district)}\n                  >\n                    <MainItem\n                      title={district.district_name}\n                      active={\n                        thisDistrict &&\n                        thisDistrict.district_id === district.district_id\n                          ? true\n                          : false\n                      }\n                    />\n                  </section>\n                ))\n            ) : (\n              <div>No</div>\n            )}\n          </div>\n          {/* =========================== END DISTRICT =========================== */}\n\n          {/* ============================= CENTERS ============================= */}\n          {thisDistrict && thisProvince && (\n            <ViewCenters\n              thisProvinceId={thisProvince.province_id}\n              thisDistrict={thisDistrict}\n              thisCenter={thisCenter}\n              thisRoom={thisRoom}\n              loadingRequest={loadingRequest}\n              actionTypes={actionTypes}\n              setThisDistrict={setThisDistrict}\n              setLoadingRequest={setLoadingRequest}\n              setThisCenter={setThisCenter}\n              setThisRoom={setThisRoom}\n              setActionTypes={setActionTypes}\n            />\n          )}\n          {/* =========================== END CENTERS =========================== */}\n        </div>\n      </div>\n    </Fragment>\n  );\n};\n\nconst mapStateToProps = ({\n  locations,\n}: StoreState): {\n  locations: RoomLocationInterface[];\n} => {\n  return { locations: locations.roomLocation };\n};\n\nexport const Locations = connect(mapStateToProps, {\n  getAllRoom,\n})(Index);\n"],"sourceRoot":""}
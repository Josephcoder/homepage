{"version":3,"sources":["actions/location.ts","actions/schools.ts","containers/district/Schools/index.tsx"],"names":["getAllRoom","callback","dispatch","a","axios","get","API","APPLICATION","res","type","ActionTypes","GET_ALL_ROOM","payload","data","console","log","error","errorToText","FC_CreateProvince","CREATE_PROVINCE","FC_UpdateProvince","UPDATE_PROVINCE","FC_DeleteProvince","DELETE_PROVINCE","FC_CreateDistrict","CREATE_DISTRICT","FC_UpdateDistrict","UPDATE_DISTRICT","FC_DeleteDistrict","DELETE_DISTRICT","FC_CreateSector","CREATE_SECTOR","FC_UpdateSector","UPDATE_SECTOR","FC_DeleteSector","DELETE_SECTOR","FC_CreateCenter","CREATE_CENTER","FC_UpdateCenter","UPDATE_CENTER","FC_DeleteCenter","DELETE_CENTER","FC_CreateRoom","CREATE_ROOM","FC_UpdateRoom","UPDATE_ROOM","FC_DeleteRoom","delete_room","DELETE_ROOM","getSchools","GET_SCHOOLS","createSchool","schools","CREATE_SCHOOL","updateSchool","UPDATE_SCHOOL","deleteSchool","DELETE_SCHOOL","fetchSchoolPosts","school_id","PLACEMENT","schoolPosts","FETCH_SCHOOL_POSTS","getSchoolPlacement","GET_SCHOOL_PLACEMENT","createSchoolPost","CREATE_SCHOOL_POST","updateSchoolPost","TYPE","UPDATE_SCHOOL_POST","fetchDistrictPosts","district_id","districtPosts","FETCH_DISTRICT_POSTS","getDistrictPlacement","GET_DISTRICT_PLACEMENT","LocationsSectorInArray","LocationData","locationTemp","p","districts","d","sectors","s","push","province_id","_id","province_name","province_code","district_name","district_code","sector_id","sector_name","sector_code","getSchoolById","find","school","index","props","setLoading","state","setState","loading","setLoadingSchool","loadingSchool","setLoadingRequest","loadingRequest","setError","componentDidMount","allRoom","length","status","msg","education_categories","loadEducationCategories","loadingCandidatesError","schoolList","handleSubmit","e","preventDefault","isEmptyOrSpaces","schoolName","element","schoolCode","instituteId","districtId","sectorId","thisSector","getSectors","item","modalState","post","school_name","school_code","education_category_id","shool_id","PushPopupAlert","title","theme","PopupAlertTheme","success","provinceId","thisSchool","patch","doc_category_error","danger","handleDelete","schoolId","window","confirm","delete","province_error","countSchool","FILTER_TYPE","FILTER_VALUE","counts","filter","toTwoDigit","getProvinceByCode","getDistrictByCode","province","undefined","getSectorByCode","district","getDistrictData","result","toString","forEach","key","Object","prototype","hasOwnProperty","call","filterSchools","institute","searchInput","districtFilterStatus","edicationCategoryFilterStatus","provinceFilterStatus","thisEdication","thisProvince","thisDistrict","this","className","Fragment","onChange","target","value","placeholder","disabled","Number","map","education_institute_id","education_category_title","search","colSpan","education","backDrop","Themes","default","close","displayClose","backDropClose","widthSizeClass","ModalSize","medium","padding","body","footer","onSubmit","sector","onClick","Component","Schools","connect","auth","schoolLevels","locations","roomLocation"],"mappings":"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","file":"static/js/48.20dcc5db.chunk.js","sourcesContent":["import axios from \"axios\";\nimport { Dispatch } from \"redux\";\nimport { ActionTypes } from \"./types\";\nimport { API } from \"../utils/api\";\nimport {\n  CentersInterface,\n  DistrictInterface,\n  RoomLocationInterface,\n  RoomsInterface,\n  SectorInterface,\n} from \"../shared/interfaces\";\nimport { errorToText } from \"../utils/errors\";\n\n/**\n * * ****************************** INTERFACES *****************************\n */\n\nexport interface getAllRoomActions {\n  type: ActionTypes.GET_ALL_ROOM;\n  payload: RoomLocationInterface[];\n}\n\nexport interface createProvinceActions {\n  type: ActionTypes.CREATE_PROVINCE;\n  payload: RoomLocationInterface;\n}\n\nexport interface updateProvinceActions {\n  type: ActionTypes.UPDATE_PROVINCE;\n  payload: {\n    province_id: string;\n    province_name: string;\n    provice_code: number;\n  };\n}\n\nexport interface deleteProvinceActions {\n  type: ActionTypes.DELETE_PROVINCE;\n  payload: string;\n}\n\n// ============ DISTRICT =================\nexport interface createDistrictActions {\n  type: ActionTypes.CREATE_DISTRICT;\n  payload: { province_id: string; data: DistrictInterface };\n}\n\nexport interface updateDistrictActions {\n  type: ActionTypes.UPDATE_DISTRICT;\n  payload: {\n    province_id: string;\n    district_id: string;\n    district_name: string;\n    district_code: number;\n  };\n}\n\nexport interface deleteDistrictActions {\n  type: ActionTypes.DELETE_DISTRICT;\n  payload: { province_id: string; district_id: string };\n}\n\n// ============ SECTOR =================\nexport interface createSectorActions {\n  type: ActionTypes.CREATE_SECTOR;\n  payload: {\n    province_id: string;\n    district_id: string;\n    data: SectorInterface;\n  };\n}\n\nexport interface updateSectorActions {\n  type: ActionTypes.UPDATE_SECTOR;\n  payload: {\n    province_id: string;\n    district_id: string;\n    sector_id: string;\n    sector_name: string;\n    sector_code: number;\n  };\n}\n\nexport interface deleteSectorActions {\n  type: ActionTypes.DELETE_SECTOR;\n  payload: { province_id: string; district_id: string; sector_id: string };\n}\n\n// ============ CENTERS =================\nexport interface createCenterActions {\n  type: ActionTypes.CREATE_CENTER;\n  payload: {\n    province_id: string;\n    district_id: string;\n    data: CentersInterface;\n  };\n}\n\nexport interface updateCenterActions {\n  type: ActionTypes.UPDATE_CENTER;\n  payload: {\n    province_id: string;\n    district_id: string;\n    examination_center_id: string;\n    center_name: string;\n  };\n}\n\nexport interface deleteCenterActions {\n  type: ActionTypes.DELETE_CENTER;\n  payload: { province_id: string; district_id: string; center_id: string };\n}\n\n// ============ ROOMS =================\nexport interface createRoomActions {\n  type: ActionTypes.CREATE_ROOM;\n  payload: {\n    province_id: string;\n    district_id: string;\n    center_id: string;\n    data: RoomsInterface;\n  };\n}\n\nexport interface updateRoomActions {\n  type: ActionTypes.UPDATE_ROOM;\n  payload: {\n    province_id: string;\n    district_id: string;\n    center_id: string;\n    room_id: string;\n    room_number: number;\n    capacity: number;\n  };\n}\n\nexport interface deleteRoomActions {\n  type: ActionTypes.DELETE_ROOM;\n  payload: {\n    province_id: string;\n    district_id: string;\n    center_id: string;\n    room_id: string;\n  };\n}\n\nexport type RoomActionType =\n  | getAllRoomActions\n  | createProvinceActions\n  | updateProvinceActions\n  | deleteProvinceActions\n  | createDistrictActions\n  | updateDistrictActions\n  | deleteDistrictActions\n  | createSectorActions\n  | updateSectorActions\n  | deleteSectorActions\n  | createCenterActions\n  | updateCenterActions\n  | deleteCenterActions\n  | createRoomActions\n  | updateRoomActions\n  | deleteRoomActions;\n\n/**\n * * ****************************** ACTIONS *****************************\n */\n\nexport const getAllRoom = (callback: Function) => {\n  return async (dispatch: Dispatch) => {\n    callback(true, \"\");\n    try {\n      const res = await axios.get<RoomLocationInterface[]>(\n        `${API.APPLICATION}/roomlocation`\n      );\n      dispatch<getAllRoomActions>({\n        type: ActionTypes.GET_ALL_ROOM,\n        payload: res.data,\n      });\n      console.log(\"====================================\");\n      console.log({ res: res.data });\n      console.log(\"====================================\");\n      callback(false, \"\", res.data);\n    } catch (error) {\n      console.error(\"Err: \", error);\n      callback(false, errorToText(error));\n    }\n  };\n};\n\nexport const FC_CreateProvince = (data: RoomLocationInterface) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<createProvinceActions>({\n      type: ActionTypes.CREATE_PROVINCE,\n      payload: data,\n    });\n  };\n};\n\nexport const FC_UpdateProvince = (data: {\n  province_id: string;\n  province_name: string;\n  provice_code: number;\n}) => {\n  console.log({ data });\n  return async (dispatch: Dispatch) => {\n    dispatch<updateProvinceActions>({\n      type: ActionTypes.UPDATE_PROVINCE,\n      payload: data,\n    });\n  };\n};\n\nexport const FC_DeleteProvince = (data: string) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<deleteProvinceActions>({\n      type: ActionTypes.DELETE_PROVINCE,\n      payload: data,\n    });\n  };\n};\n\n// DISTRICT =================\nexport const FC_CreateDistrict = (data: {\n  province_id: string;\n  data: DistrictInterface;\n}) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<createDistrictActions>({\n      type: ActionTypes.CREATE_DISTRICT,\n      payload: data,\n    });\n  };\n};\n\nexport const FC_UpdateDistrict = (data: {\n  province_id: string;\n  district_id: string;\n  district_name: string;\n  district_code: number;\n}) => {\n  console.log({ data });\n  return async (dispatch: Dispatch) => {\n    dispatch<updateDistrictActions>({\n      type: ActionTypes.UPDATE_DISTRICT,\n      payload: data,\n    });\n  };\n};\n\nexport const FC_DeleteDistrict = (data: {\n  province_id: string;\n  district_id: string;\n}) => {\n  console.log({ data });\n  return async (dispatch: Dispatch) => {\n    dispatch<deleteDistrictActions>({\n      type: ActionTypes.DELETE_DISTRICT,\n      payload: data,\n    });\n  };\n};\n\n// SECTOR =================\nexport const FC_CreateSector = (data: {\n  province_id: string;\n  district_id: string;\n  data: SectorInterface;\n}) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<createSectorActions>({\n      type: ActionTypes.CREATE_SECTOR,\n      payload: data,\n    });\n  };\n};\n\nexport const FC_UpdateSector = (data: {\n  province_id: string;\n  district_id: string;\n  sector_id: string;\n  sector_name: string;\n  sector_code: number;\n}) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<updateSectorActions>({\n      type: ActionTypes.UPDATE_SECTOR,\n      payload: data,\n    });\n  };\n};\n\nexport const FC_DeleteSector = (data: {\n  province_id: string;\n  district_id: string;\n  sector_id: string;\n}) => {\n  console.log({ data });\n  return async (dispatch: Dispatch) => {\n    dispatch<deleteSectorActions>({\n      type: ActionTypes.DELETE_SECTOR,\n      payload: data,\n    });\n  };\n};\n\n// CENTERS =================\nexport const FC_CreateCenter = (data: {\n  province_id: string;\n  district_id: string;\n  data: CentersInterface;\n}) => {\n  console.log({ data });\n  return async (dispatch: Dispatch) => {\n    dispatch<createCenterActions>({\n      type: ActionTypes.CREATE_CENTER,\n      payload: data,\n    });\n  };\n};\n\nexport const FC_UpdateCenter = (data: {\n  province_id: string;\n  district_id: string;\n  examination_center_id: string;\n  center_name: string;\n}) => {\n  console.log({ data });\n  return async (dispatch: Dispatch) => {\n    dispatch<updateCenterActions>({\n      type: ActionTypes.UPDATE_CENTER,\n      payload: data,\n    });\n  };\n};\n\nexport const FC_DeleteCenter = (data: {\n  province_id: string;\n  district_id: string;\n  center_id: string;\n}) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<deleteCenterActions>({\n      type: ActionTypes.DELETE_CENTER,\n      payload: data,\n    });\n  };\n};\n\n// ROOM =================\nexport const FC_CreateRoom = (data: {\n  province_id: string;\n  district_id: string;\n  center_id: string;\n  data: RoomsInterface;\n}) => {\n  console.log({ data });\n  return async (dispatch: Dispatch) => {\n    dispatch<createRoomActions>({\n      type: ActionTypes.CREATE_ROOM,\n      payload: data,\n    });\n  };\n};\n\nexport const FC_UpdateRoom = (data: {\n  province_id: string;\n  district_id: string;\n  center_id: string;\n  room_id: string;\n  room_number: number;\n  capacity: number;\n}) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<updateRoomActions>({\n      type: ActionTypes.UPDATE_ROOM,\n      payload: data,\n    });\n  };\n};\n\nexport const FC_DeleteRoom = (data: {\n  province_id: string;\n  district_id: string;\n  center_id: string;\n  room_id: string;\n}) => {\n  console.log({ delete_room: data });\n  return async (dispatch: Dispatch) => {\n    dispatch<deleteRoomActions>({\n      type: ActionTypes.DELETE_ROOM,\n      payload: data,\n    });\n  };\n};\n","import { Dispatch } from \"redux\";\nimport { ActionTypes } from \"./types\";\nimport { data_school } from \"../shared/dataTest\";\nimport {\n  PostSchoolInterface,\n  SchoolInfoInterface,\n  SchoolsInterface,\n} from \"../shared/interfaces\";\nimport { setAxiosToken } from \"../utils/AxiosToken\";\nimport axios from \"axios\";\nimport { API } from \"../utils/api\";\nimport { errorToText } from \"../utils/errors\";\nimport { placedCandidateInterface } from \"../interfaces/marks_publication\";\n\n/**\n * * ****************************** INTERFACES *****************************\n */\n\nexport interface GetSchoolsAction {\n  type: ActionTypes.GET_SCHOOLS;\n  payload: SchoolsInterface[];\n}\n\nexport interface GetSchoolsInfoAction {\n  type: ActionTypes.GET_SCHOOLS_INFO;\n  payload: SchoolInfoInterface[];\n}\n\nexport interface CreateSchoolAction {\n  type: ActionTypes.CREATE_SCHOOL;\n  payload: SchoolsInterface;\n}\n\nexport interface UpdateSchoolAction {\n  type: ActionTypes.UPDATE_SCHOOL;\n  payload: SchoolsInterface;\n}\n\nexport interface DeleteSchoolAction {\n  type: ActionTypes.DELETE_SCHOOL;\n  payload: string;\n}\n\n// School Posts interfaces\nexport interface FetchSchoolPostsAction {\n  type: ActionTypes.FETCH_SCHOOL_POSTS;\n  payload: PostSchoolInterface[];\n}\n\n// School Placements interfaces\nexport interface GetSchoolPlacementAction {\n  type: ActionTypes.GET_SCHOOL_PLACEMENT;\n  payload: placedCandidateInterface[];\n}\n\n// District School Placements interfaces\nexport interface GetDistrictPlacementAction {\n  type: ActionTypes.GET_DISTRICT_PLACEMENT;\n  payload: placedCandidateInterface[];\n}\n\n// District School Placements interfaces\nexport interface GetSessionPlacementAction {\n  type: ActionTypes.GET_SESSION_PLACEMENT;\n  payload: placedCandidateInterface[];\n}\n\nexport interface FetchDistrictPostsAction {\n  type: ActionTypes.FETCH_DISTRICT_POSTS;\n  payload: PostSchoolInterface[];\n}\n\nexport interface CreateSchoolPostAction {\n  type: ActionTypes.CREATE_SCHOOL_POST;\n  payload: PostSchoolInterface;\n}\n\nexport interface UpdateSchoolPostAction {\n  type: ActionTypes.UPDATE_SCHOOL_POST;\n  payload: {\n    TYPE: \"DISTRICT\" | \"SCHOOL\" | \"RECEIVED\";\n    data: PostSchoolInterface;\n  };\n}\n\nexport interface DeleteSchoolPostAction {\n  type: ActionTypes.DELETE_SCHOOL_POST;\n  payload: PostSchoolInterface[];\n}\n\nexport type SchoolActionType =\n  | GetSchoolsAction\n  | GetSchoolsInfoAction\n  | CreateSchoolAction\n  | UpdateSchoolAction\n  | DeleteSchoolAction\n  | FetchSchoolPostsAction\n  | GetSchoolPlacementAction\n  | FetchDistrictPostsAction\n  | CreateSchoolPostAction\n  | UpdateSchoolPostAction\n  | DeleteSchoolPostAction\n  | GetDistrictPlacementAction\n  | GetSessionPlacementAction;\n\n/**\n * * ****************************** ACTIONS *****************************\n */\n\nexport const getSchools = (callback: Function) => {\n  return async (dispatch: Dispatch) => {\n    callback(true, \"\");\n    try {\n      const res = await axios.get<SchoolsInterface[]>(\n        `${API.APPLICATION}/schools`\n      );\n      dispatch<GetSchoolsAction>({\n        type: ActionTypes.GET_SCHOOLS,\n        payload: res.data,\n      });\n      callback(false, \"\", res.data);\n    } catch (error) {\n      console.log(\"Err: \", error);\n      callback(false, errorToText(error));\n    }\n  };\n};\n\nexport const getSchoolsInfo = () => {\n  return async (dispatch: Dispatch) => {\n    setAxiosToken();\n    // const response = await axios.get<AccessRoleType[]>(url);\n\n    dispatch<GetSchoolsInfoAction>({\n      type: ActionTypes.GET_SCHOOLS_INFO,\n      payload: data_school,\n      // payload: response.data,\n    });\n  };\n};\n\nexport const createSchool = (data: SchoolsInterface) => {\n  console.log({ schools: data });\n  return async (dispatch: Dispatch) => {\n    dispatch<CreateSchoolAction>({\n      type: ActionTypes.CREATE_SCHOOL,\n      payload: data,\n    });\n  };\n};\n\nexport const updateSchool = (data: SchoolsInterface) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<UpdateSchoolAction>({\n      type: ActionTypes.UPDATE_SCHOOL,\n      payload: data,\n    });\n  };\n};\n\nexport const deleteSchool = (data: string) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<DeleteSchoolAction>({\n      type: ActionTypes.DELETE_SCHOOL,\n      payload: data,\n    });\n  };\n};\n\nexport const fetchSchoolPosts = (school_id: string, callback: Function) => {\n  return async (dispatch: Dispatch) => {\n    callback(true, \"\");\n    try {\n      const res = await axios.get<PostSchoolInterface[]>(\n        `${API.PLACEMENT}/requestpost/school/${school_id}`\n      );\n\n      console.log({ schoolPosts: res.data });\n\n      dispatch<FetchSchoolPostsAction>({\n        type: ActionTypes.FETCH_SCHOOL_POSTS,\n        payload: res.data,\n      });\n      callback(false, \"\");\n    } catch (error) {\n      console.log(\"Err: \", error);\n      callback(false, errorToText(error));\n    }\n  };\n};\n\nexport const getSchoolPlacement = (school_id: string, callback: Function) => {\n  return async (dispatch: Dispatch) => {\n    callback(true, \"\");\n    try {\n      const res = await axios.get<placedCandidateInterface[]>(\n        `${API.PLACEMENT}/placedcandidate/school/${school_id}`\n      );\n\n      console.log({ getSchoolPlacement: res.data });\n\n      dispatch<GetSchoolPlacementAction>({\n        type: ActionTypes.GET_SCHOOL_PLACEMENT,\n        payload: res.data,\n      });\n      callback(false, \"\", res.data);\n    } catch (error) {\n      console.log(\"Err: \", error);\n      callback(false, errorToText(error));\n    }\n  };\n};\n\nexport const createSchoolPost = (data: PostSchoolInterface) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<CreateSchoolPostAction>({\n      type: ActionTypes.CREATE_SCHOOL_POST,\n      payload: data,\n    });\n  };\n};\n\nexport const updateSchoolPost = (\n  TYPE: \"DISTRICT\" | \"SCHOOL\" | \"RECEIVED\",\n  data: PostSchoolInterface\n) => {\n  console.log({ TYPE, data });\n  return async (dispatch: Dispatch) => {\n    dispatch<UpdateSchoolPostAction>({\n      type: ActionTypes.UPDATE_SCHOOL_POST,\n      payload: { TYPE, data },\n    });\n  };\n};\n\nexport const deleteSchoolPost = (data: PostSchoolInterface[]) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<DeleteSchoolPostAction>({\n      type: ActionTypes.DELETE_SCHOOL_POST,\n      payload: data,\n    });\n  };\n};\n\nexport const fetchDistrictPosts = (district_id: string, callback: Function) => {\n  return async (dispatch: Dispatch) => {\n    callback(true, \"\");\n    try {\n      const res = await axios.get<PostSchoolInterface[]>(\n        `${API.PLACEMENT}/requestpost/district/${district_id}`\n      );\n\n      console.log({ districtPosts: res });\n\n      dispatch<FetchDistrictPostsAction>({\n        type: ActionTypes.FETCH_DISTRICT_POSTS,\n        payload: res.data,\n      });\n      callback(false, \"\");\n    } catch (error) {\n      console.log(\"Err: \", error);\n      callback(false, errorToText(error));\n    }\n  };\n};\n\nexport const getDistrictPlacement = (\n  district_id: string,\n  callback: Function\n) => {\n  return async (dispatch: Dispatch) => {\n    callback(true, \"\");\n    try {\n      const res = await axios.get<placedCandidateInterface[]>(\n        `${API.PLACEMENT}/placedcandidate/district/${district_id}`\n      );\n\n      console.log(\"====================================\");\n      console.log({ getDistrictPlacement: res.data });\n      console.log(\"====================================\");\n\n      dispatch<GetDistrictPlacementAction>({\n        type: ActionTypes.GET_DISTRICT_PLACEMENT,\n        payload: res.data,\n      });\n      callback(false, \"\", res.data);\n    } catch (error) {\n      console.log(\"Err: \", error);\n      callback(false, errorToText(error));\n    }\n  };\n};\nexport const getSessionPlacement = (session_id: string, callback: Function) => {\n  return async (dispatch: Dispatch) => {\n    callback(true, \"\");\n    try {\n      const res = await axios.get<placedCandidateInterface[]>(\n        `${API.PLACEMENT}/placedcandidate/session/${session_id}`\n      );\n\n      console.log(\"====================================\");\n      console.log({ getSessionPlacement: res.data });\n      console.log(\"====================================\");\n\n      dispatch<GetSessionPlacementAction>({\n        type: ActionTypes.GET_SESSION_PLACEMENT,\n        payload: res.data,\n      });\n      callback(false, \"\", res.data);\n    } catch (error) {\n      console.log(\"Err: \", error);\n      callback(false, errorToText(error));\n    }\n  };\n};\n","import axios from \"axios\";\nimport React, { Component } from \"react\";\nimport { BiBuildingHouse } from \"react-icons/bi\";\nimport { connect } from \"react-redux\";\nimport {\n  Auth,\n  loadEducationCategories,\n  PushPopupAlert,\n} from \"../../../actions\";\nimport { getAllRoom } from \"../../../actions/location\";\nimport {\n  createSchool,\n  getSchools,\n  updateSchool,\n  deleteSchool,\n} from \"../../../actions/schools\";\nimport { PopupAlertData } from \"../../../components/Alert/Popup\";\nimport Modal, { ModalSize, Themes } from \"../../../components/Modal/Modal\";\nimport { education_category } from \"../../../interfaces\";\nimport { PopupAlertTheme } from \"../../../interfaces/popupAlert\";\nimport { StoreState } from \"../../../reducers\";\nimport { isEmptyOrSpaces, toTwoDigit } from \"../../../shared/dataTest\";\nimport {\n  SchoolsInterface,\n  RoomLocationInterface,\n  DistrictInterface,\n  LocationSectorTableInterface,\n  SectorInterface,\n} from \"../../../shared/interfaces\";\nimport { API } from \"../../../utils/api\";\nimport { errorToText } from \"../../../utils/errors\";\nimport { search } from \"../../../utils/functions\";\n\nexport const LocationsSectorInArray = (\n  LocationData: RoomLocationInterface[]\n): LocationSectorTableInterface[] | [] => {\n  let locationTemp: LocationSectorTableInterface[] = [];\n  for (let p in LocationData) {\n    let districts = LocationData[p].districts;\n    for (let d in districts) {\n      let sectors = districts[d].sectors;\n      for (let s in sectors) {\n        locationTemp.push({\n          province_id: LocationData[p]._id,\n          province_name: LocationData[p].province_name,\n          province_code: LocationData[p].province_code,\n          district_id: districts[d]._id,\n          district_name: districts[d].district_name,\n          district_code: districts[d].district_code,\n          sector_id: sectors[s].sector_id,\n          sector_name: sectors[s].sector_name,\n          sector_code: sectors[s].sector_code,\n        });\n      }\n    }\n  }\n  return locationTemp;\n};\n\nexport const getSchoolById = (\n  schools: SchoolsInterface[],\n  school_id: string\n): SchoolsInterface | undefined => {\n  return schools.find((school) => school._id === school_id);\n};\ninterface AppProps {\n  auth: Auth;\n  education_categories: education_category[] | null;\n  allRoom: RoomLocationInterface[];\n  schools: SchoolsInterface[];\n  getSchools: Function;\n  loadEducationCategories: (callback: (loading: boolean) => void) => void;\n  createSchool: Function;\n  getAllRoom: Function;\n  updateSchool: Function;\n  deleteSchool: Function;\n  PushPopupAlert: (alert: PopupAlertData) => void;\n}\n\ninterface AppState {\n  loading: boolean;\n  loadingSchool: boolean;\n  loadingRequest: boolean;\n  districtFilterStatus: boolean;\n  edicationCategoryFilterStatus: boolean;\n  provinceFilterStatus: boolean;\n  searchInput: string;\n  thisEdication: string | \"ALL\";\n  thisProvince: number | \"ALL\";\n  thisDistrict: number | \"ALL\";\n  district: DistrictInterface[];\n  schoolList: SchoolsInterface[];\n  modalState: \"\" | \"CREATE\" | \"UPDATE\";\n  error: { element: string; msg: string } | null;\n  schoolName: string;\n  schoolCode: number;\n  thisSchool: SchoolsInterface | null;\n  instituteId: string;\n  provinceId: string;\n  districtId: string;\n  sectorId: string;\n}\n\nclass index extends Component<AppProps, AppState> {\n  constructor(props: AppProps) {\n    super(props);\n\n    this.state = {\n      loading: true,\n      loadingSchool: true,\n      loadingRequest: false,\n      searchInput: \"\",\n      districtFilterStatus: false,\n      edicationCategoryFilterStatus: false,\n      provinceFilterStatus: false,\n      thisEdication: \"ALL\",\n      thisProvince: \"ALL\",\n      thisDistrict: \"ALL\",\n      district: [],\n      schoolList: this.props.schools,\n      modalState: \"\",\n      error: null,\n      schoolName: \"\",\n      schoolCode: 0,\n      thisSchool: null,\n      instituteId: \"\",\n      provinceId: \"\",\n      districtId: \"\",\n      sectorId: \"\",\n    };\n  }\n\n  setLoading = (state: boolean) => {\n    this.setState({ loading: state });\n  };\n\n  setLoadingSchool = (state: boolean) => {\n    this.setState({ loadingSchool: state });\n  };\n\n  setLoadingRequest = (state: boolean) => {\n    this.setState({ loadingRequest: state });\n  };\n\n  setError = (\n    data: {\n      element: string;\n      msg: string;\n    } | null\n  ) => {\n    this.setState({ error: data });\n  };\n\n  componentDidMount = () => {\n    if (!this.props.allRoom.length && this.state.loading) {\n      this.props.getAllRoom((status: boolean, msg: string) => {\n        this.setLoading(status);\n        if (!status && msg.length > 0) console.error(msg);\n      });\n    } else if (this.state.loading) {\n      this.setLoading(false);\n    }\n\n    if (\n      this.props.education_categories === null ||\n      this.props.education_categories.length === 0\n    ) {\n      this.props.loadEducationCategories(this.setLoading);\n    }\n\n    if (!this.props.schools.length && this.state.loadingSchool) {\n      this.props.getSchools(\n        (status: boolean, msg: string, data?: SchoolsInterface[]) => {\n          console.log(status, msg);\n          this.setLoadingSchool(status);\n          if (!status) {\n            if (msg.length > 0) {\n              console.error({ loadingCandidatesError: msg });\n            }\n            if (data) {\n              this.setState({ schoolList: data });\n            }\n          }\n        }\n      );\n    } else {\n      this.setLoadingSchool(false);\n    }\n  };\n\n  handleSubmit = async (e: React.FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n    if (isEmptyOrSpaces(this.state.schoolName)) {\n      return this.setError({\n        element: \"school_name\",\n        msg: \"School name is required\",\n      });\n    }\n    if (this.state.schoolCode <= 0) {\n      return this.setError({\n        element: \"school_code\",\n        msg: \"Invalid school code, School code less than 0\",\n      });\n    }\n    if (isEmptyOrSpaces(this.state.instituteId)) {\n      return this.setError({\n        element: \"edication_id\",\n        msg: \"Education Institute is required\",\n      });\n    }\n\n    if (isEmptyOrSpaces(this.state.districtId)) {\n      return this.setError({\n        element: \"districtId_id\",\n        msg: \"District is required\",\n      });\n    }\n    if (isEmptyOrSpaces(this.state.sectorId)) {\n      return this.setError({\n        element: \"sector_id\",\n        msg: \"Sector is required\",\n      });\n    }\n\n    const thisSector = this.getSectors()!.find(\n      (item) => item.sector_id === this.state.sectorId\n    );\n    if (!thisSector) {\n      return this.setError({\n        element: \"sector_id\",\n        msg: \"Unknown selected sector\",\n      });\n    }\n\n    this.setLoadingRequest(true);\n    try {\n      let res;\n      if (this.state.modalState === \"CREATE\") {\n        res = await axios.post<{\n          data: {\n            status: boolean;\n            school_name: string;\n            school_code: number;\n            district_id: string;\n            sector_id: string;\n            sector_code: number;\n            education_category_id: string;\n            shool_id: string;\n          };\n        }>(`${API.APPLICATION}/schools`, {\n          school_name: this.state.schoolName,\n          school_code: this.state.schoolCode,\n          district_id: this.state.districtId,\n          sector_id: this.state.sectorId,\n          sector_code: thisSector.sector_code,\n          education_category_id: this.state.instituteId,\n        });\n        if (res.data) {\n          console.log({ res });\n          // this.setState({\n          //   schoolList: [\n          //     ...this.props.schools,\n          //     {\n          //       _id: res.data.data.shool_id,\n          //       status: res.data.data.status,\n          //       school_name: res.data.data.school_name,\n          //       school_code: res.data.data.school_code,\n          //       sector_id: res.data.data.sector_id,\n          //       sector_code: res.data.data.sector_code,\n          //       district_id: res.data.data.district_id,\n          //       district_code: res.data.data.district_code,\n          //       province_id: res.data.data.province_id,\n          //       province_code: res.data.data.province_code,\n          //       education_category_id: res.data.data.education_category_id,\n          //     },\n          //   ],\n          // });\n          this.props.createSchool({\n            _id: res.data.data.shool_id,\n            status: res.data.data.status,\n            school_name: res.data.data.school_name,\n            school_code: res.data.data.school_code,\n            sector_code: res.data.data.sector_code,\n            district_id: res.data.data.district_id,\n            sector_id: res.data.data.sector_id,\n            education_category_id: res.data.data.education_category_id,\n          });\n          this.props.PushPopupAlert({\n            title: \"New School created successfully\",\n            theme: PopupAlertTheme.success,\n          });\n          this.setLoadingRequest(false);\n          this.setState({\n            schoolName: \"\",\n            schoolCode: 0,\n            districtId: \"\",\n            sectorId: \"\",\n            instituteId: \"\",\n            provinceId: \"\",\n            thisSchool: null,\n            modalState: \"\",\n          });\n        }\n      } else if (this.state.thisSchool && this.state.modalState === \"UPDATE\") {\n        res = await axios.patch<{ update: SchoolsInterface }>(\n          `${API.APPLICATION}/schools`,\n          {\n            school_id: this.state.thisSchool._id,\n            school_name: this.state.schoolName,\n            school_code: this.state.schoolCode,\n            district_id: this.state.districtId,\n            sector_id: this.state.sectorId,\n            sector_code: thisSector.sector_code,\n            education_category_id: this.state.instituteId,\n          }\n        );\n        if (res.data) {\n          console.log({ res });\n          this.props.updateSchool({\n            _id: this.state.thisSchool._id,\n            status: true,\n            sector_code: thisSector.sector_code,\n            school_name: this.state.schoolName,\n            school_code: this.state.schoolCode,\n            district_id: this.state.districtId,\n            sector_id: this.state.sectorId,\n            education_category_id: this.state.instituteId,\n          });\n          this.props.PushPopupAlert({\n            title: \"School updated successfully\",\n            theme: PopupAlertTheme.success,\n          });\n          this.setLoadingRequest(false);\n          this.setState({\n            schoolName: \"\",\n            schoolCode: 0,\n            districtId: \"\",\n            sectorId: \"\",\n            instituteId: \"\",\n            provinceId: \"\",\n            thisSchool: null,\n            modalState: \"\",\n          });\n        }\n      }\n    } catch (error) {\n      console.log({ doc_category_error: error });\n      this.props.PushPopupAlert({\n        title: errorToText(error),\n        theme: PopupAlertTheme.danger,\n      });\n      this.setLoadingRequest(false);\n    }\n  };\n\n  handleDelete = async (schoolId: string) => {\n    if (window.confirm(\"Are you sure do you want to delete this room?\")) {\n      this.setLoadingRequest(true);\n      try {\n        const res = await axios.delete<SchoolsInterface>(\n          `${API.APPLICATION}/schools/${schoolId}`\n        );\n\n        if (res.data) {\n          console.log({ res });\n          this.props.deleteSchool(schoolId);\n          this.props.PushPopupAlert({\n            title: \"School deleted successfully\",\n            theme: PopupAlertTheme.success,\n          });\n        }\n      } catch (error) {\n        console.log({ province_error: error });\n        this.props.PushPopupAlert({\n          title: errorToText(error),\n          theme: PopupAlertTheme.danger,\n        });\n      }\n      this.setLoadingRequest(false);\n    }\n  };\n\n  countSchool = (\n    FILTER_TYPE: \"DEFAULT\" | \"EDUCATION\" | \"DISTRICT\" = \"DEFAULT\",\n    FILTER_VALUE: string = \"ALL\"\n  ): string => {\n    let counts: number = 0;\n    if (FILTER_TYPE === \"DEFAULT\") {\n      counts = this.props.schools.length;\n    } else if (FILTER_TYPE === \"EDUCATION\") {\n      counts = this.props.schools.filter(\n        (item) => item.education_category_id === FILTER_VALUE\n      ).length;\n    } else if (FILTER_TYPE === \"DISTRICT\") {\n      counts = this.props.schools.filter(\n        (item) => item.district_id === FILTER_VALUE\n      ).length;\n    }\n    return toTwoDigit(counts);\n  };\n\n  getProvinceByCode = (\n    province_code: number\n  ): RoomLocationInterface | undefined => {\n    return this.props.allRoom.find(\n      (item) => item.province_code === province_code\n    );\n  };\n\n  getDistrictByCode = (\n    province_code: number,\n    district_code: number\n  ): DistrictInterface | undefined => {\n    let province = this.props.allRoom.find(\n      (item) => item.province_code === province_code\n    );\n    return province\n      ? province.districts.find((item) => item.district_code === district_code)\n      : undefined;\n  };\n\n  getSectorByCode = (\n    province_code: number,\n    district_code: number,\n    sector_code: number\n  ): SectorInterface | undefined => {\n    const province = this.props.allRoom.find(\n      (item) => item.province_code === province_code\n    );\n\n    if (province && province.districts) {\n      const district = province.districts.find(\n        (item) => item.district_code === district_code\n      );\n      return district && district.sectors\n        ? district.sectors.find((item) => item.sector_code === sector_code)\n        : undefined;\n    }\n  };\n  getSectors = () => {\n    let province = this.props.allRoom.find(\n      (province) => province._id === this.state.provinceId\n    );\n    if (province && province.districts.length > 0) {\n      let district = province.districts.find(\n        (item) => item._id === this.state.districtId\n      );\n      if (district) {\n        return district.sectors;\n      }\n    }\n    return null;\n  };\n\n  getDistrictData = (province_code: number | null): DistrictInterface[] => {\n    let result: DistrictInterface[] = [];\n    if (province_code) {\n      let province = this.props.allRoom.find(\n        (item) => item.province_code.toString() === province_code.toString()\n      );\n      result = province ? province.districts : [];\n    } else {\n      this.props.allRoom.forEach((element) => {\n        for (const key in element.districts) {\n          if (Object.prototype.hasOwnProperty.call(element.districts, key)) {\n            result.push(element.districts[key]);\n          }\n        }\n      });\n    }\n\n    return result;\n  };\n\n  filterSchools = (\n    institute: string | \"ALL\",\n    province: number | \"ALL\",\n    district: number | \"ALL\"\n  ): SchoolsInterface[] => {\n    let result: SchoolsInterface[] = this.props.schools;\n\n    if (institute !== \"ALL\") {\n      result = result.filter(\n        (item) => item.education_category_id === institute\n      );\n    }\n\n    if (province !== \"ALL\") {\n      result = result.filter(\n        (item) => item.province_code.toString() === province.toString()\n      );\n    }\n\n    if (district !== \"ALL\") {\n      result = result.filter(\n        (item) => item.district_code.toString() === district.toString()\n      );\n    }\n\n    return result;\n  };\n\n  render() {\n    if (this.state.loadingSchool || this.state.loading) {\n      return (\n        <div className=\"text-center mt-7 font-bold text-4xl text-gray-400 animate-pulse\">\n          Loading schools...\n        </div>\n      );\n    }\n\n    return (\n      <React.Fragment>\n        {/* BODY =================================== */}\n        <div className=\"w-full my-5 px-1\">\n          {/* header title */}\n          <div className=\"flex items-start justify-between my-4\">\n            <div className=\"flex flex-row items-center\">\n              <BiBuildingHouse className=\"text-blue-500 text-5xl\" />\n              <div className=\"flex flex-col\">\n                <h1 className=\"text-4xl font-semibold\">Schools Management</h1>\n                {/* <div className=\"flex flex-row items-center mx-2 md:gap-3 gap-2\">\n                  <div className=\"flex flex-col mt-1\">\n                    <span className=\"text-gray-600 text-base\">\n                      All School(s)\n                    </span>\n                    <span className=\"text-gray-600 text-2xl font-bold\">\n                      {this.countSchool()}\n                    </span>\n                  </div>\n                  {this.props.education_categories &&\n                    this.props.education_categories.length > 0 &&\n                    this.props.education_categories.map((education, index) => (\n                      <div\n                        className=\"flex flex-col mt-1\"\n                        key={index + education.education_institute_id}\n                      >\n                        <span className=\"text-gray-600 text-base\">\n                          {education.education_category_title}\n                        </span>\n                        <span className=\"text-gray-600 text-2xl font-bold\">\n                          {this.countSchool(\n                            \"EDUCATION\",\n                            education.education_institute_id\n                          )}\n                        </span>\n                      </div>\n                    ))}\n                </div> */}\n              </div>\n            </div>\n          </div>\n          {/* end header title */}\n\n          <div className=\"md:w-98 bg-white mx-auto md:p-2\">\n            {/* FILTER FORM =================================== */}\n            <section className=\"flex flex-col-reverse sm:flex-row items-center gap-2 w-full my-2\">\n              <div className=\"w-full sm:w-3/4\">\n                <input\n                  onChange={(e: React.ChangeEvent<HTMLInputElement>) =>\n                    this.setState({ searchInput: e.target.value })\n                  }\n                  type=\"text\"\n                  className=\"input-white h-10 text-sm border-2 border-gray-400 focus:border-gray-500 w-full\"\n                  placeholder={`Search school with name or code`}\n                  value={this.state.searchInput}\n                  disabled={this.props.allRoom.length > 0 ? false : true}\n                />\n              </div>\n              <div className=\"w-full sm:w-1/4\">\n                <select\n                  className=\"input-white h-10 text-sm border-2 border-gray-400 focus:border-gray-500 w-full\"\n                  placeholder={`Filter by status`}\n                  onChange={(e: React.ChangeEvent<HTMLSelectElement>) =>\n                    this.setState({\n                      thisProvince:\n                        e.target.value === \"ALL\"\n                          ? \"ALL\"\n                          : Number(e.target.value),\n                    })\n                  }\n                  value={this.state.thisProvince}\n                  disabled={this.props.allRoom.length > 0 ? false : true}\n                >\n                  <option value=\"ALL\">All province</option>\n                  {this.props.allRoom.length > 0 ? (\n                    this.props.allRoom.map((item, index) => (\n                      <option value={item.province_code} key={index + item._id}>\n                        {item.province_name}\n                      </option>\n                    ))\n                  ) : (\n                    <option value=\"\" disabled>\n                      No province found!\n                    </option>\n                  )}\n                </select>\n              </div>\n              <div className=\"w-full sm:w-1/4\">\n                <select\n                  className=\"input-white h-10 text-sm border-2 border-gray-400 focus:border-gray-500 w-full\"\n                  placeholder={`Filter by status`}\n                  onChange={(e: React.ChangeEvent<HTMLSelectElement>) =>\n                    this.setState({\n                      thisDistrict:\n                        e.target.value !== \"ALL\"\n                          ? Number(e.target.value)\n                          : \"ALL\",\n                    })\n                  }\n                  value={this.state.thisDistrict}\n                  disabled={this.props.allRoom.length > 0 ? false : true}\n                >\n                  <option value=\"ALL\">All district</option>\n                  {this.getDistrictData(\n                    this.state.thisProvince !== \"ALL\"\n                      ? this.state.thisProvince\n                      : null\n                  ).length > 0 ? (\n                    this.getDistrictData(\n                      this.state.thisProvince !== \"ALL\"\n                        ? this.state.thisProvince\n                        : null\n                    ).map((item, index) => (\n                      <option value={item.district_code} key={index + item._id}>\n                        {item.district_name}\n                      </option>\n                    ))\n                  ) : (\n                    <option value=\"\" disabled>\n                      No district found!\n                    </option>\n                  )}\n                </select>\n              </div>\n              <div className=\"w-full sm:w-1/4\">\n                <select\n                  className=\"input-white h-10 text-sm border-2 border-gray-400 focus:border-gray-500 w-full\"\n                  placeholder={`Filter by institute`}\n                  onChange={(e: React.ChangeEvent<HTMLSelectElement>) =>\n                    this.setState({ thisEdication: e.target.value })\n                  }\n                  value={this.state.thisEdication}\n                  disabled={this.props.allRoom.length > 0 ? false : true}\n                >\n                  <option value=\"ALL\">All institute</option>\n                  {this.props.education_categories &&\n                  this.props.education_categories.length > 0 ? (\n                    this.props.education_categories.map((item, index) => (\n                      <option\n                        value={item.education_institute_id}\n                        key={index + item.education_institute_id}\n                      >\n                        {item.education_category_title}\n                      </option>\n                    ))\n                  ) : (\n                    <option value=\"\" disabled>\n                      No institute found!\n                    </option>\n                  )}\n                </select>\n              </div>\n            </section>\n            {/* END FILTER FORM =================================== */}\n\n            <div className=\"rounded border border-gray-100 my-1 shadow-sm animate__animated animate__fadeIn\">\n              <table className=\"w-full z-0\">\n                <thead className=\"bg-gray-50\">\n                  <tr className=\"text-left\">\n                    <th className=\"px-3 py-3\">#</th>\n                    <th>School code</th>\n                    <th>School name</th>\n                    <th>Institute</th>\n                    <th>Province</th>\n                    <th>District</th>\n                    {/* <th>Sector</th> */}\n                    {/* <th>Status</th> */}\n                  </tr>\n                </thead>\n                <tbody className=\"text-sm\">\n                  {!search(\n                    this.filterSchools(\n                      this.state.thisEdication,\n                      this.state.thisProvince,\n                      this.state.thisDistrict\n                    ),\n                    this.state.searchInput\n                  ).length && (\n                    <tr\n                      key={1}\n                      className=\"border-b border-gray-200 hover:bg-gray-100\"\n                    >\n                      <td className=\"p-3 text-center\" colSpan={8}>\n                        No School Found\n                      </td>\n                    </tr>\n                  )}\n                  {this.props.schools.length > 0 &&\n                    !this.state.loading &&\n                    search(\n                      this.filterSchools(\n                        this.state.thisEdication,\n                        this.state.thisProvince,\n                        this.state.thisDistrict\n                      ),\n                      this.state.searchInput\n                    ).map((school: SchoolsInterface, index: number) => (\n                      <tr\n                        key={index + school._id}\n                        className=\"border-b border-gray-200 hover:bg-gray-100\"\n                      >\n                        <td className=\"p-3 text-left whitespace-nowrap\">\n                          {index + 1}\n                        </td>\n                        <td className=\"py-3 text-left\">{school.school_code}</td>\n                        <td className=\"py-3 text-left\">{school.school_name}</td>\n                        <td className=\"py-3 text-left\">\n                          {this.props.education_categories &&\n                          this.props.education_categories.filter(\n                            (education) =>\n                              education.education_institute_id ===\n                              school.education_category_id\n                          ).length > 0\n                            ? this.props.education_categories.filter(\n                                (education) =>\n                                  education.education_institute_id ===\n                                  school.education_category_id\n                              )[0].education_category_title\n                            : \"No Institute\"}\n                        </td>\n                        <td className=\"py-3 text-left\">\n                          {this.getProvinceByCode(school.province_code)\n                            ? this.getProvinceByCode(school.province_code)!\n                                .province_name\n                            : \"No province \"}\n                        </td>\n                        <td className=\"py-3 text-left\">\n                          {this.getDistrictByCode(\n                            school.province_code,\n                            school.district_code\n                          )\n                            ? this.getDistrictByCode(\n                                school.province_code,\n                                school.district_code\n                              )!.district_name\n                            : \"No district\"}\n                        </td>\n                        {/* <td className=\"py-3 text-left\">\n                          {this.getSectorByCode(\n                            school.province_code,\n                            school.district_code,\n                            school.sector_code\n                          )\n                            ? this.getSectorByCode(\n                                school.province_code,\n                                school.district_code,\n                                school.sector_code\n                              )!.sector_name\n                            : \"No sector \"+school.sector_code}\n                        </td> */}\n                        {/* <td className=\"py-3\">\n                          <div className=\"flex items-center gap-2 float-right\">\n                            <button\n                              className={`bg-blue-600 text-white font-bold py-1 px-2 flex items-center rounded focus:outline-none ${\n                                this.state.loadingRequest\n                                  ? \"cursor-not-allowed\"\n                                  : null\n                              }`}\n                              title=\"Edit School\"\n                              disabled={this.state.loadingRequest}\n                              onClick={() => {\n                                this.setState({\n                                  modalState: \"UPDATE\",\n                                  thisSchool: school,\n                                  schoolName: school.school_name,\n                                  schoolCode: school.school_code,\n                                  instituteId: school.education_category_id,\n                                  districtId: school.district_id,\n                                  sectorId: school.sector_id,\n                                  provinceId: this.props.allRoom.find((item) =>\n                                    item.districts.find(\n                                      (d) => d._id === school.district_id\n                                    )\n                                  )\n                                    ? this.props.allRoom.find((item) =>\n                                        item.districts.find(\n                                          (d) => d._id === school.district_id\n                                        )\n                                      )!._id\n                                    : \"\",\n                                });\n                              }}\n                            >\n                              <MdModeEdit className=\"w-4 h-4\" />\n                              Edit\n                            </button>\n                            <button\n                              className={`bg-red-700 text-white font-bold py-1 px-2 flex items-center rounded focus:outline-none ${\n                                this.state.loadingRequest\n                                  ? \"cursor-not-allowed\"\n                                  : null\n                              }`}\n                              title=\"Delete\"\n                              disabled={this.state.loadingRequest}\n                              onClick={() => this.handleDelete(school._id)}\n                            >\n                              <MdModeEdit className=\"w-4 h-4\" />\n                              Delete\n                            </button>\n                          </div>\n                        </td> */}\n                      </tr>\n                    ))}\n                </tbody>\n              </table>\n            </div>\n          </div>\n        </div>\n\n        {/* modal control */}\n        {this.state.modalState && (\n          <Modal\n            backDrop={true}\n            theme={Themes.default}\n            close={(): void =>\n              this.setState({\n                modalState: \"\",\n                thisSchool: null,\n                schoolName: \"\",\n                instituteId: \"\",\n                districtId: \"\",\n                provinceId: \"\",\n              })\n            }\n            displayClose={true}\n            backDropClose={false}\n            title={\n              <div className=\"text-gray-600 font-bold text-3xl md:ml-4 inline-flex items-center gap-2\">\n                <BiBuildingHouse className=\"w-11 h-11 text-gray-500 hover:bg-gray-500 hover:text-gray-50 rounded-full p-0 foucs:outline-none\" />\n                {this.state.modalState === \"CREATE\" ? \"CREATE \" : \"UPDATE \"}{\" \"}\n                SCHOOL\n              </div>\n            }\n            widthSizeClass={ModalSize.medium}\n            padding={{ title: true, body: false, footer: false }}\n          >\n            <div className=\"mx-8 mb-8\">\n              <form onSubmit={(e) => this.handleSubmit(e)}>\n                <div className=\"py-4 text-base leading-6 space-y-4 text-gray-700 sm:text-lg sm:leading-7\">\n                  <div className=\"flex flex-col\">\n                    <label>School name</label>\n                    <input\n                      type=\"text\"\n                      className={`text-left input-white w-20 inline-block border-2 ${\n                        this.state.error &&\n                        this.state.error.element === \"school_name\"\n                          ? \"border-red-700\"\n                          : \"border-gray-500\"\n                      }`}\n                      placeholder=\"School name\"\n                      value={this.state.schoolName}\n                      onChange={(e) => {\n                        this.setError(null);\n                        this.setState({ schoolName: e.target.value });\n                      }}\n                      disabled={this.state.loadingRequest}\n                    />\n                    {this.state.error &&\n                      this.state.error.element === \"school_name\" && (\n                        <span className=\"text-red-700\">\n                          {this.state.error.msg}\n                        </span>\n                      )}\n                  </div>\n\n                  <div className=\"flex flex-col\">\n                    <label>School code</label>\n                    <input\n                      type=\"number\"\n                      className={`text-left input-white w-20 inline-block border-2 ${\n                        this.state.error &&\n                        this.state.error.element === \"school_code\"\n                          ? \"border-red-700\"\n                          : \"border-gray-500\"\n                      }`}\n                      placeholder=\"School code\"\n                      value={this.state.schoolCode}\n                      onChange={(e) => {\n                        this.setError(null);\n                        this.setState({ schoolCode: Number(e.target.value) });\n                      }}\n                      disabled={this.state.loadingRequest}\n                    />\n                    {this.state.error &&\n                      this.state.error.element === \"school_code\" && (\n                        <span className=\"text-red-700\">\n                          {this.state.error.msg}\n                        </span>\n                      )}\n                  </div>\n\n                  {/* INSTITUTES ================= */}\n                  <div className=\"flex flex-col\">\n                    <label>Institutes</label>\n                    {/* block appearance-none w-full bg-grey-lighter border\n                  border-grey-lighter text-grey-darker py-3 px-4 pr-8 rounded */}\n                    <select\n                      className={`text-left input-white w-full block border-2 py-3 px-4 pr-8 ${\n                        this.state.error &&\n                        this.state.error.element === \"edication_id\"\n                          ? \"border-red-700\"\n                          : \"border-gray-500\"\n                      }`}\n                      value={this.state.instituteId}\n                      onChange={(e) =>\n                        this.setState({\n                          instituteId: e.target.value,\n                        })\n                      }\n                      disabled={this.state.loadingRequest}\n                    >\n                      <option value=\"\" disabled>\n                        Choose Institute\n                      </option>\n                      {this.props.education_categories &&\n                        this.props.education_categories.map(\n                          (institute, index) => (\n                            <option\n                              value={institute.education_institute_id}\n                              key={index + institute.education_institute_id}\n                            >\n                              {institute.education_category_title}\n                            </option>\n                          )\n                        )}\n                    </select>\n                    {this.state.error &&\n                      this.state.error.element === \"edication_id\" && (\n                        <span className=\"text-red-700\">\n                          {this.state.error.msg}\n                        </span>\n                      )}\n                  </div>\n\n                  {/* PROVINCE ================= */}\n                  <div className=\"flex flex-col\">\n                    <label>Province</label>\n                    <select\n                      className={`text-left input-white w-20 inline-block border-2 border-gray-500`}\n                      value={this.state.provinceId}\n                      onChange={(e) =>\n                        this.setState({ provinceId: e.target.value })\n                      }\n                      disabled={this.state.loadingRequest}\n                    >\n                      <option value=\"\" disabled>\n                        Choose province\n                      </option>\n                      {this.props.allRoom &&\n                        this.props.allRoom.map((province, index) => (\n                          <option\n                            value={province._id}\n                            key={index + province._id}\n                          >\n                            {province.province_name}\n                          </option>\n                        ))}\n                    </select>\n                  </div>\n\n                  {/* DISTRICT ================= */}\n                  {this.state.provinceId.length > 0 && (\n                    <div className=\"flex flex-col\">\n                      <label>Sector</label>\n                      <select\n                        className={`text-left input-white w-20 inline-block border-2 ${\n                          this.state.error &&\n                          this.state.error.element === \"districtId_id\"\n                            ? \"border-red-700\"\n                            : \"border-gray-500\"\n                        }`}\n                        value={this.state.districtId}\n                        onChange={(e) =>\n                          this.setState({ districtId: e.target.value })\n                        }\n                        disabled={this.state.loadingRequest}\n                      >\n                        <option value=\"\" disabled>\n                          Choose district\n                        </option>\n                        {this.props.allRoom &&\n                        this.props.allRoom.filter(\n                          (province) => province._id === this.state.provinceId\n                        )[0].districts.length > 0 ? (\n                          this.props.allRoom\n                            .filter(\n                              (province) =>\n                                province._id === this.state.provinceId\n                            )[0]\n                            .districts.map((district, index) => (\n                              <option\n                                value={district._id}\n                                key={index + district._id}\n                              >\n                                {district.district_name}\n                              </option>\n                            ))\n                        ) : (\n                          <option key={702} disabled={true}>\n                            No District Found\n                          </option>\n                        )}\n                      </select>\n                      {this.state.error &&\n                        this.state.error.element === \"districtId_id\" && (\n                          <span className=\"text-red-700\">\n                            {this.state.error.msg}\n                          </span>\n                        )}\n                    </div>\n                  )}\n\n                  {/* DISTRICT ================= */}\n                  {this.state.provinceId.length > 0 && (\n                    <div className=\"flex flex-col\">\n                      <label>Sector</label>\n                      <select\n                        className={`text-left input-white w-20 inline-block border-2 ${\n                          this.state.error &&\n                          this.state.error.element === \"sector_id\"\n                            ? \"border-red-700\"\n                            : \"border-gray-500\"\n                        }`}\n                        value={this.state.sectorId}\n                        onChange={(e) =>\n                          this.setState({ sectorId: e.target.value })\n                        }\n                        disabled={this.state.loadingRequest}\n                      >\n                        <option value=\"\" disabled>\n                          Choose sector\n                        </option>\n                        {this.props.allRoom && this.getSectors() ? (\n                          this.getSectors()!.map((sector, index) => (\n                            <option\n                              value={sector.sector_id}\n                              key={index + sector.sector_id}\n                            >\n                              {sector.sector_name}\n                            </option>\n                          ))\n                        ) : (\n                          <option key={702} disabled={true}>\n                            No Sector Found\n                          </option>\n                        )}\n                      </select>\n                      {this.state.error &&\n                        this.state.error.element === \"sector_id\" && (\n                          <span className=\"text-red-700\">\n                            {this.state.error.msg}\n                          </span>\n                        )}\n                    </div>\n                  )}\n                </div>\n                <div className=\"pt-4 flex justify-between\">\n                  <button\n                    onClick={() =>\n                      this.setState({\n                        modalState: \"\",\n                        thisSchool: null,\n                        schoolName: \"\",\n                        instituteId: \"\",\n                        districtId: \"\",\n                        provinceId: \"\",\n                      })\n                    }\n                    className={`btn bg-gray-400 text-white hover:bg-gray-600 focus:outline-none`}\n                    type=\"button\"\n                    disabled={this.state.loadingRequest}\n                  >\n                    Exit\n                  </button>\n                  <button\n                    className={`btn bg-primary text-white hover:bg-blue-600 focus:outline-none ${\n                      this.state.loadingRequest ? \"animate-pulse\" : null\n                    }`}\n                    type=\"submit\"\n                    disabled={this.state.loadingRequest}\n                  >\n                    {this.state.loadingRequest ? \"Loading...\" : \"Save\"}\n                  </button>\n                </div>\n              </form>\n            </div>\n          </Modal>\n        )}\n      </React.Fragment>\n    );\n  }\n}\n\nconst mapStateToProps = ({\n  auth,\n  schools,\n  schoolLevels,\n  locations,\n}: StoreState): {\n  auth: Auth;\n  schools: SchoolsInterface[];\n  education_categories: education_category[] | null;\n  allRoom: RoomLocationInterface[];\n} => {\n  return {\n    auth: auth,\n    schools: schools.schools,\n    education_categories: schoolLevels.education_categories,\n    allRoom: locations.roomLocation,\n  };\n};\n\nexport const Schools = connect(mapStateToProps, {\n  createSchool,\n  getSchools,\n  updateSchool,\n  getAllRoom,\n  deleteSchool,\n  loadEducationCategories,\n  PushPopupAlert,\n})(index);\n"],"sourceRoot":""}
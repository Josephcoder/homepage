{"version":3,"sources":["containers/SessionSettings/NoSession.tsx","actions/settings.ts","components/Loading/TableLoading.tsx","shared/interfaces.tsx","containers/Claimings/Admin/AdminClaimExamView.tsx","containers/Positions/ViewDocRequirements.tsx","containers/Claimings/Admin/AdminClaimAppView.tsx","containers/Claimings/Admin/AdminClaimDocView.tsx","containers/Claimings/Admin/index.tsx"],"names":["NoSession","title","description","content","undefined","className","React","memo","url","API","AUTH","getSystemSettings","callback","dispatch","a","setAxiosToken","axios","get","res","console","log","type","ActionTypes","GET_SYSTEM_SETTINGS","payload","data","code_error","errorToText","disableSystemSetting","DISABLE_SYSTEM_SETTINGS","GetTaskAccess","response","map","id","task","key","permitted","GET_TASK_ACCESS","getPositions","APPLICATION","GET_POSTIONS","deletePosition","DELETE_POSITION","publishPosition","PUBLISH_POSITION","FC_GetPositionsByInstitution","institution_id","TableLoading","props","displayCols","colsArray","index","cols","push","element","Math","random","RoomType","PostRequestStatusInterface","DocumentAttributesInterface","DocValidationStatusInterface","SESSION_PLAN_KEYS","DOCUMENT_VALIDATION","EXAMINATION","MARKS_PUBLICATION","PLACEMENT_TRANSFER","viewTabs","ViewDocRequirements","useState","viewDoc","setViewDoc","loadingImage","setLoadingImage","isFullscreen","setSetFullscreen","failedToLoadFile","setFailedToLoadFile","isDocumentExist","category_id","sub_category_id","field_id","isEmptyOrSpaces","userDocs","filter","item","validation_status","find","category_subcategory_data","Table","columns","columnTitle","alignText","padding","rows","requirements","length","colSpan","subcategory_id","subcategory_title","field_title","onClick","pagination","search","thColor","Modal","backDrop","theme","Themes","default","close","backDropClose","widthSizeClass","ModalSize","extraLarge","displayClose","body","footer","isFileImage","getFileType","files","Loading","src","AUTH_FILES","alt","onLoad","onDoubleClick","fullScreen","ViewPDF","file_url","class_name","frame_title","setLoadingFile","setLoadingError","FC_AdminApplicationPositionDistinctCategory","thisPosition","documentCategories","PositionsTemp","DistinctCategoriesTemp","DistinctCategoriesIds","DistinctSubCategoriesTemp","DistinctSubCategoriesIds","req","thisRequirements","thisCategory","documentCategory","user_detail_category_id","category","thisSubCategory","documentSubCategory","user_detail_subcategory_id","subcategory","field","thisField","documentFields","_id","position_requirement","required","category_title","subcategory_required","includes","connect","auth","evaluateClaim","reAssessApplication","PushPopupAlert","loadingRequest","setLoadingRequest","actionTaken","setActionTaken","formError","setFormError","responseMsg","setResponseMsg","handleVerify","msg","subClaim","thisClaim","claims","level","claim_level","api_body","sub_claim_id","evaluation_comment","evaluated_by","user","user_id","decision_taken_status","evaluator_name","fname","lname","evaluator_email","email","put","CLAIMING","evaluate_claim_res","ClaimDecisionStatus","ACCEPTED","overrideDecision","PopupAlertTheme","success","error","danger","getReasonById","reason_id","claimReasons","patch","claiming_on_id","phone_number","comment","application_status","ApplicationStates","Shortlisted","application_id","getPositionById","position_id","systemPositions","FC_GetBase64Img","user_info","photo","n_id","sex","thisApplication","position","position_title","school_level_id","school_level_name","education_institute_id","education_category_title","courses","course_name","course_code","course_id","NoResult","NoResultThemes","Dark","value","DisplayCompetence","competence","details","previous","status","Rejected","capitalizeFirstLetter","evaluater","name","DATE","createdAt","dangerouslySetInnerHTML","__html","reason","override_by","claim","default_claim_resaons","showDate","isClaimEvaluated","REJECTED","toLocaleLowerCase","last_claim_status","ClaimStatus","PENDING","DELETED","placeholder","style","resize","onChange","e","target","disabled","window","confirm","verifyDocument","FC_DocValidation","doc_id","APPROVED","validated_by","in_education","disability","expiration_date","api_redux","date","post","USER","FC_shortListing","candidate_id","setViewImage","viewImage","adminDisplayClaimTitle","thisDoc","commet","questionTypes","loadQuestionTypes","loading","setLoading","marks","setMarks","profile","selectedTab","setSelectedTab","useEffect","handleMarksAddition","DO_EXAM","answer_sheet_id","Object","values","i","exam","AnswersDetails","showAnswers","exam_id","claimShowAnswer","thisExamSheet","thisExam","allAnswers","exam_location","questions","user_answers","period","course","exam_paper","user_status","used_duration","total_marks","number_of_question_answered","exam_total_marks","exam_start_time","exam_end_time","exam_date","updatedAt","gender","Number","candidateDocuments","result","type_key","PlansTypeKeys","AdminClaimGetDocTitle","main","doc","DocCategory","DocSubCategory","DocField","DocTitle","c","sub_category","getApplicationById","allApplications","application","Index","setState","setLoadingData","loadingData","setPeriodChanged","periodChanged","setThisPeriod","thisPeriod","setViewClaim","viewClaim","setClaimId","claimId","setClaimType","claimType","setCandidateId","candidateId","setDefaultSession","sessions","state","thisSession","is_active","loadsAllClaims","setSearchClaim","searchClaim","claiming","allClaims","getAllClaims","loadsApplications","getAllApplications","loadsController","file_id","loadsAlAnswers","answersheet_id","allAnswer","getAllAnswers","componentDidMount","application_sessions","GetAllSessionPlans","documentReducer","getDocumentCategory","getDocumentSubCategory","getDocumentFields","getClaimReasons","loadCourses","displayClaimTitle","thisDocs","thisAnswer","getCourseIdBySheetId","getCourseById","onPeriodChange","period_id","getLastClaimDate","claimsLength","this","claimTypes","SideNavigation","AdminFilterByType","loadingClaims","ClaimHeaderTitle","headerTitle","selectedClaimType","loadingSession","setLoadingSession","filterClaimsByClaimType","Light","whichClaimType","whichClaimStatus","classes","getClaimById","ClaimTypesInterface","DOCUMENT","Component","AdminClaim","system_settings","sessionPlan","document","allSessionPlans"],"mappings":"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","file":"static/js/35.1a1a0004.chunk.js","sourcesContent":["import React from \"react\";\nimport { IoWarning } from \"react-icons/io5\";\n// import { MdInfoOutline } from \"react-icons/md\";\nimport { NavLink } from \"react-router-dom\";\n\ntype NoSessionProps = {\n  title?: string;\n  description?: string;\n  content?: any;\n};\n\nconst NoSession: React.FC<NoSessionProps> = ({\n  title = \"No session available\",\n  description = \"Please Wait for the system to publish the sessions or contact the administrator\",\n  content = undefined,\n}) => {\n  return (\n    <div className=\"w-full my-5\">\n      <section className=\"py-10 flex flex-col items-center rounded border border-gray-300 bg-white text-2xl font-medium text-yellow-800 animate__animated animate__pulse\">\n        <div className=\"flex flex-col items-center\">\n          <IoWarning className=\"w-32 h-32\" />\n          {description}\n        </div>\n        {content && content}\n        {false && (\n          <div className=\"text-center group text-sm -mb-3 mt-5\">\n            <NavLink\n              to=\"/apps-page\"\n              className=\"border border-rounded-md bg-gray-100 text-gray-900 rounded border-gray-100 group-hover:bg-gray-50 group-hover:border-gray-400 px-2 py-1\"\n            >\n              Back to App\n            </NavLink>\n          </div>\n        )}\n      </section>\n    </div>\n  );\n};\n\nexport default React.memo(NoSession);\n","import axios from \"axios\";\nimport { Dispatch } from \"redux\";\nimport { ActionTypes } from \"./types\";\nimport {\n  AccessTaskInterface,\n  PermissionInterface,\n  SystemSettingsInterface,\n} from \"../shared/interfaces\";\nimport { API } from \"../utils/api\";\nimport { setAxiosToken } from \"../utils/AxiosToken\";\nimport { errorToText } from \"../utils/errors\";\nimport { PositionAPI } from \"../interfaces/position\";\n\nconst url = `${API.AUTH}/auth/user/access`;\n\n/**\n * * ****************************** INTERFACES *****************************\n */\n\n// SYSTEM SETTINGS  ==============\nexport interface GetSystemSettingsAction {\n  type: ActionTypes.GET_SYSTEM_SETTINGS;\n  payload: SystemSettingsInterface[];\n}\n\nexport interface DisableSystemSettingsAction {\n  type: ActionTypes.DISABLE_SYSTEM_SETTINGS;\n  payload: {\n    system_setting_id: string;\n    status: \"enabled\" | \"disabled\";\n  };\n}\n\n// ROLE TASKS ACCESS SETTINGS ===================================\nexport interface GetTaskAccessAction {\n  type: ActionTypes.GET_TASK_ACCESS;\n  payload: AccessTaskInterface[];\n}\n\n// POSITIONS SETTINGS ===================================\nexport interface PositionCreateInterface {\n  position_id?: string;\n  position_title: string;\n  position_code: string;\n  description: string;\n  school_level_id: string;\n  subcategory_id: string;\n  education_institute_id: string;\n  courses: string[];\n  requirements: {\n    user_detail_category_id: string;\n    user_detail_subcategory_id: string;\n    position_requirement: {\n      category_subcategory_data_id: string;\n      required: boolean;\n    }[];\n    required: boolean;\n  }[];\n}\nexport interface GetPositionsAction {\n  type: ActionTypes.GET_POSTIONS;\n  payload: PositionAPI[];\n}\n\nexport interface CreatePositionsAction {\n  type: ActionTypes.CREATE_POSITION;\n  payload: PositionCreateInterface;\n}\n\nexport interface UpdatePositionsAction {\n  type: ActionTypes.UPDATE_POSITION;\n  payload: PositionCreateInterface;\n}\n\nexport interface DeletePositionSettingAction {\n  type: ActionTypes.DELETE_POSITION;\n  payload: string;\n}\n\nexport interface PublishPositionAction {\n  type: ActionTypes.PUBLISH_POSITION;\n  payload: {\n    position_id: string;\n    status: boolean;\n  };\n}\n\nexport type SystemActionType =\n  | GetSystemSettingsAction\n  | DisableSystemSettingsAction\n  | GetTaskAccessAction\n  | GetPositionsAction\n  | CreatePositionsAction\n  | UpdatePositionsAction\n  | DeletePositionSettingAction\n  | PublishPositionAction;\n\n/**\n * * ****************************** ACTIONS *****************************\n */\n\nexport const getSystemSettings = (callback: Function) => {\n  return async (dispatch: Dispatch) => {\n    callback(true, \"\");\n    try {\n      setAxiosToken();\n      const res = await axios.get<SystemSettingsInterface[]>(\n        `${API.AUTH}/system/setting`\n      );\n      console.log(\"=================getSystemSettings===================\");\n      console.log(res);\n      console.log(\"=================getSystemSettings===================\");\n      dispatch<GetSystemSettingsAction>({\n        type: ActionTypes.GET_SYSTEM_SETTINGS,\n        payload: res.data,\n      });\n      callback(false, \"\");\n    } catch (error) {\n      console.log({ code_error: error });\n      callback(false, errorToText(error));\n    }\n  };\n};\n\nexport const disableSystemSetting = (data: {\n  system_setting_id: string;\n  status: \"enabled\" | \"disabled\";\n}) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<DisableSystemSettingsAction>({\n      type: ActionTypes.DISABLE_SYSTEM_SETTINGS,\n      payload: data,\n    });\n  };\n};\n\n// ============================ tasks access =======================\n\nexport const GetTaskAccess = (callback: Function) => {\n  return async (dispatch: Dispatch) => {\n    callback(true, \"\");\n    try {\n      setAxiosToken();\n      const res = await axios.get<\n        {\n          id: string;\n          title: string;\n          key: string;\n          permitted: PermissionInterface;\n        }[]\n      >(`${url}/roleaccess`);\n      let response: AccessTaskInterface[] = res.data.map((data) => ({\n        id: data.id,\n        task: data.title,\n        key: data.key,\n        permitted: data.permitted,\n      }));\n      dispatch<GetTaskAccessAction>({\n        type: ActionTypes.GET_TASK_ACCESS,\n        payload: response,\n      });\n      callback(false, \"\", response);\n    } catch (error) {\n      console.log({ code_error: error });\n      callback(false, errorToText(error));\n    }\n  };\n};\n\n// ============================ positions =======================\n\nexport const getPositions = (callback: Function) => {\n  return async (dispatch: Dispatch) => {\n    callback(true, \"\");\n    try {\n      setAxiosToken();\n      const res = await axios.get<PositionAPI[]>(`${API.APPLICATION}/position`);\n      dispatch<GetPositionsAction>({\n        type: ActionTypes.GET_POSTIONS,\n        payload: res.data,\n      });\n      callback(false, \"\");\n    } catch (error) {\n      console.log({ code_error: error });\n      callback(false, errorToText(error));\n    }\n  };\n};\n\nexport const createPosition = (data: PositionCreateInterface) => {\n  console.log({ createPosition: data });\n  return async (dispatch: Dispatch) => {\n    dispatch<CreatePositionsAction>({\n      type: ActionTypes.CREATE_POSITION,\n      payload: data,\n    });\n  };\n};\n\nexport const updatePosition = (data: PositionCreateInterface) => {\n  console.log({ updatePosition: data });\n  return async (dispatch: Dispatch) => {\n    dispatch<UpdatePositionsAction>({\n      type: ActionTypes.UPDATE_POSITION,\n      payload: data,\n    });\n  };\n};\n\nexport const deletePosition = (data: string) => {\n  console.log({ deletePosition: data });\n  return async (dispatch: Dispatch) => {\n    dispatch<DeletePositionSettingAction>({\n      type: ActionTypes.DELETE_POSITION,\n      payload: data,\n    });\n  };\n};\n\nexport const publishPosition = (data: {\n  position_id: string;\n  status: boolean;\n}) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<PublishPositionAction>({\n      type: ActionTypes.PUBLISH_POSITION,\n      payload: data,\n    });\n  };\n};\n\nexport const FC_GetPositionsByInstitution = (\n  institution_id: string,\n  callback: (status: boolean, msg: string, data?: PositionAPI[]) => void\n) => {\n  return async (dispatch: Dispatch) => {\n    callback(true, \"\");\n    try {\n      setAxiosToken();\n      const res = await axios.get<PositionAPI[]>(\n        `${API.APPLICATION}/position/instituteposition/${institution_id}`\n      );\n      dispatch<GetPositionsAction>({\n        type: ActionTypes.GET_POSTIONS,\n        payload: res.data,\n      });\n      callback(false, \"\", res.data);\n    } catch (error) {\n      console.log({ code_error: error });\n      callback(false, errorToText(error));\n    }\n  };\n};\n","import React from \"react\";\n\ntype TableLoadingProps = {\n  cols: number;\n};\nconst TableLoading: React.FC<TableLoadingProps> = (props) => {\n  const displayCols = (): JSX.Element[] => {\n    let colsArray: number[] = [];\n    for (let index = 0; index < props.cols; index++) {\n      colsArray.push(index);\n    }\n    let result = colsArray.map((element) => {\n      return (\n        <td className=\"p-3 text-center whitespace-nowrap\" key={element}>\n          <div className=\"w-full h-4 rounded bg-gray-200 animate__animated animate__pulse animate__delay-5s animate__infinite\"></div>\n        </td>\n      );\n    });\n\n    return result;\n  };\n  return (\n    <>\n      <tr className=\"border-b border-gray-200\" key={Math.random()}>\n        {displayCols()}\n      </tr>\n      <tr className=\"border-b border-gray-200\" key={Math.random()}>\n        {displayCols()}\n      </tr>\n      <tr className=\"border-b border-gray-200\" key={Math.random()}>\n        {displayCols()}\n      </tr>\n    </>\n  );\n};\n\nexport default TableLoading;\n","import { SessionPlanInterface } from \"../interfaces\";\nimport {\n  ApplicationStates,\n  SESSION_PLAN_KEYS,\n} from \"../interfaces/application\";\n\nexport interface SystemSettingsInterface {\n  system_setting_id: string;\n  name: string;\n  key: string;\n  status: \"enabled\" | \"disabled\";\n}\n\nexport interface ApplicationSessionInterface {\n  is_active: boolean;\n  application_session_name: string;\n  period: string;\n  application_start_date: string;\n  application_end_date: string;\n  createdAt: string;\n  updatedAt: string;\n  application_session_id: string;\n}\n\nexport interface UserInfoInterface {\n  document_type?: string;\n  issue_number?: string;\n  date_of_issue?: string;\n  date_of_expiry?: string;\n  place_of_issue?: string;\n  application_number?: string;\n  fname: string;\n  lname: string;\n  sex: \"M\" | \"F\";\n  father_names: string;\n  mother_names: string;\n  date_of_birth: string;\n  place_of_birth?: string;\n  country_of_birth: string;\n  village_id: string;\n  village: string;\n  cell: string;\n  sector: string;\n  district: string;\n  province: string;\n  photo?: string;\n  civil_status?: string;\n  spouse?: any;\n  status?: string;\n}\n\nexport interface MySchoolInterface {\n  _id: string;\n  school_name: string;\n  school_code: string;\n  province_id: string;\n  province_code: string;\n  district_id: {\n    _id: string;\n    district_name: string;\n  };\n  district_code: string;\n  sector_code: string;\n  sector_id: string;\n  school_status: string;\n  status: number;\n  createdAt: string;\n  updatedAt: string;\n}\n\nexport interface UserInterface {\n  user_id: string;\n  _id?: string;\n  n_id?: string;\n  phone_number: string;\n  email: string;\n  password?: string;\n  user_info: UserInfoInterface;\n  details: UserDocumentsInterface[];\n  user_photo?: string;\n  default_access: RoleToUserInterface | null;\n  custome_access: CustomeAccessInterface | null;\n  is_active: boolean;\n  disability: boolean;\n  in_education: boolean;\n  residence?: {\n    province_id: string;\n    province_name: string;\n    district_id: string;\n    district_name: string;\n    sector_id: string;\n    sector_name: string;\n  };\n  education_institution_id?: string;\n  education_institution_name?: string;\n}\n\nexport interface CandidateDetailsInterface_old {\n  category_id: string;\n  sub_category_id: string;\n  category_subcategory_data: string;\n  title: string;\n  description: string;\n  files: string;\n  start_year: string;\n  end_year: string;\n  school: string;\n  email: string;\n  names: string;\n  phone_number: string;\n  company: string;\n  year: string;\n  doc_id: string;\n  validation_status: \"waiting\" | \"approved\" | \"rejected\";\n  validated_by: {\n    user_id: string;\n    comment: string;\n    validation_status: \"waiting\" | \"approved\" | \"rejected\";\n    date: string;\n  } | null;\n  doc_history_status: string;\n  get_in_date: string;\n  approved?: string;\n}\n\nexport interface CandidateDetailsInterface {\n  category_id: string;\n  sub_category_id: string;\n  category_subcategory_data: string;\n  title: string;\n  description: string;\n  files: string;\n  start_year: string;\n  end_year: string;\n  school: string;\n  email: string;\n  names: string;\n  phone_number: string;\n  company: string;\n  year: string;\n  doc_id: string;\n  validation_status: \"waiting\" | \"approved\" | \"rejected\";\n  validated_by: {\n    user_id: string;\n    comment: string;\n    validation_status: \"waiting\" | \"approved\" | \"rejected\";\n    date: string;\n  } | null;\n  doc_history_status: string;\n  get_in_date: string;\n  approved?: string;\n}\n\nexport interface DocInterface {\n  category_subcategory_data: string;\n  school: string;\n  category_id: string;\n  company: string;\n  description: string;\n  email: string;\n  end_year: string;\n  files: string;\n  names: string;\n  phone_number: string;\n  start_year: string;\n  sub_category_id: string;\n  title: string;\n  year: string;\n  approved: string;\n  doc_id: string;\n  validated_by: null;\n  validation_status: string;\n  doc_history_status: string;\n  get_in_date: string;\n  date_modefied: string;\n}\n\nexport interface CandidateRoleToUserInterface {\n  key: string;\n  status: number;\n  access: boolean;\n  assigned_date: string;\n}\n\nexport interface CandidatesInterface_old {\n  user_id: string;\n  n_id: string;\n  fname: string;\n  lname: string;\n  phone_number: string;\n  district: string;\n  email: string;\n  details: CandidateDetailsInterface[];\n}\n\nexport interface ApplicationExamsInterface {\n  course_id: string;\n  proctoring_type: string;\n  center_id: string;\n  room_id: string;\n}\n\nexport interface CandidatesInterface {\n  _id: string;\n  n_id: string;\n  email: string;\n  phone_number: string;\n  in_education: boolean;\n  disability: boolean;\n  residence: {\n    province_id: string;\n    province_name: string;\n    district_id: string;\n    district_name: string;\n    sector_id: string;\n    sector_name: string;\n  };\n  details: CandidateDetailsInterface[];\n  exams: ApplicationExamsInterface[];\n  user_info: {\n    document_type: string;\n    issue_number: string;\n    date_of_issue: string;\n    date_of_expiry: string;\n    place_of_issue: string;\n    application_number: string;\n    fname: string;\n    lname: string;\n    father_names: string;\n    mother_names: string;\n    sex: string;\n    date_of_birth: string;\n    place_of_birth: string;\n    country_of_birth: string;\n    village_id: string;\n    village: string;\n    cell: string;\n    sector: string;\n    district: string;\n    province: string;\n    civil_status: string;\n    spouse: null;\n    status: string;\n    photo: string;\n  };\n}\n\nexport interface CustomeAccessInterface {\n  access: AccessTaskInterface[];\n  user_id: string;\n  custome_user_access_id: string;\n}\n\nexport interface UserDocumentsInterface {\n  category_id: string;\n  sub_category_id: string;\n  category_subcategory_data: string;\n  title: string;\n  description: string;\n  files: string;\n  start_year: string;\n  end_year: string;\n  school: { title: string; school_id: string | null };\n  email: string;\n  names: string;\n  phone_number: string;\n  company: string;\n  year: string;\n  approved: \"waiting\" | \"approved\" | \"rejected\";\n  doc_id: string;\n  validation_status: \"waiting\" | \"approved\" | \"rejected\";\n  validated_by: {\n    user_id: string;\n    commet: string;\n    comment?: string;\n    validation_status: \"waiting\" | \"approved\" | \"rejected\";\n    date: string;\n  };\n}\n\nexport interface SystemUserRoleInterface {\n  system_user_role_id: string;\n  role: string;\n  status: boolean;\n  access: AccessTaskInterface[];\n  district_required?: boolean;\n  school_required?: boolean;\n  room_required?: boolean;\n  education_institution_required?: boolean;\n  school_id: string;\n  district_id: string;\n}\n\nexport interface CustomeUserAccessInterface {\n  user_id: string;\n  access?: [\n    {\n      id: string;\n      task: string;\n      key: string;\n      permitted: {\n        create: boolean;\n        delete: boolean;\n        update: boolean;\n        view: boolean;\n      };\n    }\n  ];\n}\n\nexport interface PermissionInterface {\n  create: boolean;\n  view: boolean;\n  update: boolean;\n  delete: boolean;\n}\n\nexport interface AccessTaskInterface {\n  id: string;\n  task: string;\n  key: string;\n  permitted: PermissionInterface;\n}\n\nexport interface RoleToUserInterface {\n  system_user_role_id: string;\n  role: string;\n  access: AccessTaskInterface[];\n  status?: number;\n  active?: boolean;\n  school_id: string;\n  district_id: string;\n  room_id: string;\n  education_institution_id: string;\n  assigned_date?: string;\n}\n\nexport enum RoomType {\n  Physical = \"Physical\",\n  Virtual = \"Virtual\",\n  Default = \"Default\",\n}\n\nexport interface RoomsInterface {\n  occupied: number;\n  isUsed: boolean;\n  room_type: RoomType;\n  room_number: number;\n  capacity: number;\n  _id: string;\n}\n\nexport interface CentersInterface {\n  rooms: RoomsInterface[];\n  isUsed: boolean;\n  _id: string;\n  center_name: string;\n  center_code: number;\n  district_id: string;\n  education_institute_id: string;\n}\n\nexport interface SectorInterface {\n  district_code: number;\n  district_id: string;\n  sector_name: string;\n  sector_code: number;\n  sector_id: string;\n}\n\nexport interface AllDistrictInterface {\n  sectors: string[];\n  centers: string[];\n  district_name: string;\n  district_code: string;\n  province_code: string;\n  province_id: string;\n  status: number;\n  createdAt: string;\n  updatedAt: string;\n  district_id: string;\n}\nexport interface DistrictInterface {\n  centers: CentersInterface[];\n  sectors: SectorInterface[];\n  province_code: number;\n  province_id: string;\n  district_name: string;\n  district_code: number;\n  _id: string;\n}\n\nexport interface RoomLocationInterface {\n  districts: DistrictInterface[];\n  province_name: string;\n  province_code: number;\n  _id: string;\n}\n\nexport interface AssignRoleToUserActionInterface {\n  user_id: string;\n  data: RoleToUserInterface;\n}\n\nexport interface AssignRoleToUserActionInterface {\n  user_id: string;\n  data: RoleToUserInterface;\n}\n\nexport enum PostRequestStatusInterface {\n  INITIATED = \"initiated\",\n  CONFIRMED = \"confirmed\",\n  RECEIVED = \"received\",\n}\n\nexport interface PostSchoolInterface_old {\n  post_at_school_id: string;\n  school_id: string;\n  position_id: string;\n  district_id: string;\n  needed_posts: number;\n  confirmed_posts?: number;\n  occupied_posts?: number;\n  requested_by: string;\n  confirmed_by?: string;\n  received_posts?: number;\n  request_date: Date;\n  approval_date?: Date;\n  post_at_school_status: PostRequestStatusInterface;\n}\n\nexport interface PostSchoolInterface {\n  _id: string;\n  school_id: string;\n  position_id: string;\n  district_id: string;\n  needed_posts: number;\n  male_number: number;\n  female_number: number;\n  description: string;\n  confirmed_posts?: number;\n  occupied_posts?: number;\n  requested_by: string;\n  confirmed_by?: string;\n  received_posts?: number;\n  request_date: Date;\n  approval_date?: Date;\n  requested_post_status: PostRequestStatusInterface;\n  school: {\n    _id: string;\n    school_name: string;\n    school_code: string;\n    province_id: string;\n    province_code: string;\n    district_id: {\n      _id: string;\n      district_name: string;\n    };\n    district_code: string;\n    sector_code: string;\n    sector_id: string;\n    school_status: string;\n    status: number;\n    createdAt: string;\n    updatedAt: string;\n  };\n  post_request_session_id: string;\n}\n\nexport interface SchoolInfoInterface {\n  school_id: string;\n  school_title: string;\n  district_id: string;\n  number_of_females?: number;\n  number_of_males?: number;\n}\n\nexport interface SchoolsInterface {\n  _id: string;\n  status: boolean;\n  school_name: string;\n  school_code: number;\n  province_id: string;\n  province_code: number;\n  district_id: string;\n  district_code: number;\n  sector_id: string;\n  sector_code: number;\n  education_category_id: string;\n}\n\nexport interface MySchoolInterface {\n  _id: string;\n  school_name: string;\n  school_code: string;\n  province_id: string;\n  province_code: string;\n  district_id: {\n    _id: string;\n    district_name: string;\n  };\n  district_code: string;\n  sector_code: string;\n  sector_id: string;\n  school_status: string;\n  status: number;\n  createdAt: string;\n  updatedAt: string;\n}\n\nexport interface SchoolLevelInterface {\n  school_level_id: string;\n  school_level_name: string;\n  description: string;\n  education_institute: string[];\n  courses: [];\n}\n\nexport interface CourseInterface {\n  course_name: string;\n  course_code: string;\n  description: string;\n  school_levels: string[];\n  course_id: string;\n}\n\nexport interface EducationInstituteInterface {\n  education_category_title: string;\n  school_levels: [];\n  description: string;\n  education_institute_id: string;\n}\n\nexport interface PositionRequirementInterface {\n  user_detail_category_id: string;\n  title: string;\n  user_required_docs: {\n    user_detail_subcategory_id: string;\n    title: string;\n  }[];\n}\n\nexport interface PositionInterface {\n  courses: CourseInterface[];\n  position_title: string;\n  description: string;\n  school_level_id: SchoolLevelInterface;\n  education_institute_id: EducationInstituteInterface;\n  requirements: PositionRequirementInterface[];\n  position_id: string;\n}\n\nexport enum DocumentAttributesInterface {\n  \"Title\" = \"title\",\n  \"Description\" = \"description\",\n  \"Files\" = \"files\",\n  \"email\" = \"email\",\n  \"names\" = \"names\",\n  \"phone_number\" = \"phone_number\",\n  \"position\" = \"position\",\n  \"relation\" = \"relation\",\n  \"src\" = \"src\",\n  \"year\" = \"year\",\n  \"company\" = \"company\",\n  \"category_subcategory_data\" = \"category_subcategory_data\",\n  \"others\" = \"others\",\n  \"start_year\" = \"start_year\",\n  \"end_year\" = \"end_year\",\n  \"School\" = \"School\",\n  \"expiration_date\" = \"expiration_date\",\n}\n\nexport enum DocValidationStatusInterface {\n  APPROVED = \"approved\",\n  REJECTED = \"rejected\",\n}\n\nexport interface DocumentCategoryInterface {\n  user_detail_category_id: string;\n  title: string;\n  description: string;\n  fields: DocumentAttributesInterface[];\n}\n\nexport interface DocumentSubCategoryInterface {\n  category_id: string;\n  title: string;\n  description: string;\n  user_detail_subcategory_id: string;\n}\n\nexport interface DocumentFieldsInterface {\n  _id: string;\n  category_id: string;\n  subcategory_id: string | null;\n  title: string;\n  description: string;\n  others: [];\n}\n\nexport interface ApplicationAssessmentInterface {\n  application_id: string;\n  user_id: string;\n  application_session: SessionPlanInterface;\n  application_status: string;\n  n_id: string;\n  email: string;\n  user_info: {\n    fname: string;\n    lname: string;\n    sex: string;\n  };\n  phone_number: string;\n  position: PositionApplicationInterface;\n  details: CandidateDetailsInterface[];\n  createdAt: string;\n  updatedAt: string;\n}\n\nexport interface AdminApplicationsToPrintInterface {\n  application_id: number;\n  names: string;\n  gender?: string;\n  national_id?: string;\n  phone?: string;\n  email?: string;\n  position: string;\n  education_category?: string;\n  application_session?: string;\n  district?: string;\n  date?: string;\n  decision?: ApplicationStates;\n}\n\nexport interface PositionApplicationInterface {\n  courses: string[];\n  position_title: string;\n  description: string;\n  school_level_id: string;\n  education_institute_id: string;\n  requirements: PositionRequirementInterface[];\n  position_id: string;\n}\n\nexport interface PositionRequirementInterface {\n  user_detail_category_id: string;\n  title: string;\n  user_required_docs: {\n    user_detail_subcategory_id: string;\n    title: string;\n  }[];\n}\n\nexport interface ApplicationRequirementInterface {\n  user_detail_category_id: string;\n  title: string;\n  user_required_docs: {\n    user_detail_subcategory_id: string;\n    title: string;\n  }[];\n}\n\nexport interface PeriodInterface {\n  is_active: string;\n  application_session_name: string;\n  period: string;\n  application_start_date: string;\n  application_end_date: string;\n  createdAt: string;\n  updatedAt: string;\n  application_session_id: string;\n}\n\nexport interface LocationRoomTableInterface {\n  province_id: string;\n  province_name: string;\n  district_id: string;\n  district_name: string;\n  center_id: string;\n  center_name: string;\n  room_id: string;\n  room_name: string;\n  capacity: number;\n  occupied: number;\n}\n\nexport interface LocationSectorTableInterface {\n  province_id: string;\n  province_name: string;\n  province_code: number;\n  district_id: string;\n  district_name: string;\n  district_code: number;\n  sector_id: string;\n  sector_name: string;\n  sector_code: number;\n}\n\nexport interface PositionRequirementsFieldInterface {\n  category_id: string;\n  category_name: string;\n  sub_category_id: string;\n  sub_category_name: string;\n  field_id: string;\n  field_name: string;\n  sub_category_required: boolean;\n  required: boolean;\n  isAnyField: boolean;\n}\n\nexport interface PositionRequirementsQualificationInterface {\n  category_id: string;\n  category_name: string;\n  sub_category_id: string;\n  sub_category_name: string;\n  fields: DocumentFieldsInterface[];\n  required: boolean;\n}\n\nexport interface ApplicationPeriodInterface {\n  _id: string;\n  application_status: ApplicationStates;\n  userInfo: {\n    n_id: string;\n    phone_number: string;\n    email: string;\n    user_info: {\n      document_type: string;\n      issue_number: string;\n      date_of_issue: string;\n      date_of_expiry: string;\n      place_of_issue: string;\n      application_number: string;\n      fname: string;\n      lname: string;\n      father_names: string;\n      mother_names: string;\n      sex: string;\n      date_of_birth: string;\n      place_of_birth: string;\n      country_of_birth: string;\n      village_id: string;\n      village: string;\n      cell: string;\n      sector: string;\n      district: string;\n      province: string;\n      civil_status: string;\n      spouse: null;\n      status: string;\n      photo: string;\n    };\n  };\n  user_id: string;\n  position: string;\n  application_session: string;\n  exams: ApplicationExamsInterface[];\n}\n\nexport const getDocCategoryById = (\n  subDocs: DocumentCategoryInterface[],\n  docId: string\n): DocumentCategoryInterface => {\n  return subDocs.filter((doc) => doc.user_detail_category_id === docId)[0];\n};\n\nexport const getSubDocCategoryById = (\n  subDocs: DocumentSubCategoryInterface[],\n  docId: string\n): DocumentSubCategoryInterface => {\n  return subDocs.filter((doc) => doc.user_detail_subcategory_id === docId)[0];\n};\n\nexport const SESSION_PLAN_TYPES: {\n  type_id: number;\n  type_title: string;\n  type_key: SESSION_PLAN_KEYS;\n}[] = [\n  {\n    type_id: 1,\n    type_title: \"Application\",\n    type_key: SESSION_PLAN_KEYS.APPLICATION,\n  },\n  {\n    type_id: 2,\n    type_title: \"Document Validation\",\n    type_key: SESSION_PLAN_KEYS.DOCUMENT_VALIDATION,\n  },\n  {\n    type_id: 3,\n    type_title: \"Examination\",\n    type_key: SESSION_PLAN_KEYS.EXAMINATION,\n  },\n  {\n    type_id: 4,\n    type_title: \"Marks Publication\",\n    type_key: SESSION_PLAN_KEYS.MARKS_PUBLICATION,\n  },\n  {\n    type_id: 5,\n    type_title: \"Placement and Transfer\",\n    type_key: SESSION_PLAN_KEYS.PLACEMENT_TRANSFER,\n  },\n];\n","import axios from \"axios\";\nimport React, { useEffect, useState } from \"react\";\nimport { FaRegCheckCircle } from \"react-icons/fa\";\nimport { MdCancel, MdInfoOutline } from \"react-icons/md\";\nimport { RiArrowGoBackFill } from \"react-icons/ri\";\nimport { connect } from \"react-redux\";\nimport {\n  Auth,\n  loadQuestionTypes,\n  PushPopupAlert,\n  questionTypesStoreInterface,\n} from \"../../../actions\";\nimport { evaluateClaim } from \"../../../actions/claiming\";\nimport { AnswersDetails } from \"../../../components/AnswersDetails/AnswersDetails\";\nimport Loading from \"../../../components/Loading/Loading\";\nimport {\n  CandidateClaimInterface,\n  ClaimDecisionStatus,\n  ClaimExamResultsDetails,\n  claimReasonInterface,\n  ClaimStatus,\n  ClaimTypesInterfaceAPI,\n  course,\n} from \"../../../interfaces\";\nimport { ExamAnswerSheetDone } from \"../../../interfaces/exam\";\nimport { PopupAlertTheme } from \"../../../interfaces/popupAlert\";\nimport { StoreState } from \"../../../reducers\";\nimport {\n  capitalizeFirstLetter,\n  isEmptyOrSpaces,\n} from \"../../../shared/dataTest\";\nimport { API } from \"../../../utils/api\";\nimport { errorToText } from \"../../../utils/errors\";\nimport { showDate } from \"../../../utils/functions\";\nimport { claimShowAnswer } from \"../Candidate/ExaminationFormView\";\nimport { isClaimEvaluated } from \"../ClaimDocView\";\nimport { claimResponseBody } from \"./AdminClaimDocView\";\n\nenum viewTabs {\n  profile = \"Applicant Profile\",\n  exam = \"Exam Details\",\n}\n\ntype AdminClaimExamViewProps = {\n  thisExamSheet: ClaimExamResultsDetails;\n  thisExam: course;\n  thisClaim: CandidateClaimInterface;\n  claimTypes: ClaimTypesInterfaceAPI[];\n  claimReasons: claimReasonInterface[] | null;\n\n  // REDUX ==================\n  auth: Auth;\n  questionTypes: questionTypesStoreInterface;\n  evaluateClaim: Function;\n  loadQuestionTypes: (callback: (loading: boolean) => void) => void;\n  PushPopupAlert: Function;\n};\n\nconst AdminClaimExamView: React.FC<AdminClaimExamViewProps> = (props) => {\n  const [loadingRequest, setLoadingRequest] = useState<boolean>(false);\n  const [loading, setLoading] = useState(true);\n  const [actionTaken, setActionTaken] = useState<ClaimDecisionStatus | null>(\n    null\n  );\n  const [formError, setFormError] = useState<{\n    element: string;\n    msg: string;\n  } | null>(null);\n  const [responseMsg, setResponseMsg] = useState<string>(\"\");\n  const [marks, setMarks] = useState<number>(0);\n  const [selectedTab, setSelectedTab] = useState<viewTabs>(viewTabs.profile);\n\n  useEffect(() => {\n    if (\n      props.questionTypes.questionTypes === null ||\n      (props.questionTypes.questionTypes.length === 0 && loading)\n    ) {\n      props.loadQuestionTypes(setLoading);\n    } else if (loading) {\n      setLoading(false);\n    }\n  }, [loading, props]);\n\n  if (loading || props.questionTypes.questionTypes === null) {\n    return <Loading />;\n  }\n\n  const handleVerify = async () => {\n    if (!actionTaken) {\n      setFormError({\n        element: \"action\",\n        msg: \"Action is required!\",\n      });\n      return setLoadingRequest(false);\n    }\n\n    if (\n      actionTaken === ClaimDecisionStatus.ACCEPTED &&\n      (marks <= 0 || marks > 100)\n    ) {\n      setFormError({\n        element: \"marks\",\n        msg: \"Invalid marks, marks must be between 1 and 10\",\n      });\n\n      return setLoadingRequest(false);\n    }\n\n    if (isEmptyOrSpaces(responseMsg)) {\n      setFormError({\n        element: \"comment\",\n        msg: \"Reason of rejection is required\",\n      });\n      return setLoadingRequest(false);\n    }\n\n    let subClaim = props.thisClaim.claims.find(\n      (item) => item.level === props.thisClaim.claim_level\n    );\n\n    if (subClaim) {\n      setLoadingRequest(true);\n      const api_body: claimResponseBody = {\n        sub_claim_id: subClaim._id,\n        evaluation_comment: responseMsg,\n        evaluated_by: props.auth.user.user_id,\n        decision_taken_status: actionTaken,\n        evaluator_name: props.auth.user.fname + \" \" + props.auth.user.lname,\n        evaluator_email: props.auth.user.email,\n      };\n\n      try {\n        const res = await axios.put<CandidateClaimInterface>(\n          `${API.CLAIMING}/user/evaluate/${props.thisClaim._id}`,\n          api_body\n        );\n        if (res) {\n          console.log({ evaluate_claim_res: res });\n          props.evaluateClaim(res.data);\n          // REVALIDATED DOCUMENT IF IT IS APPROVED =========================\n          if (actionTaken === ClaimDecisionStatus.ACCEPTED) {\n            await handleMarksAddition();\n          }\n          props.PushPopupAlert({\n            title: `Claim responded successfully!`,\n            theme: PopupAlertTheme.success,\n          });\n          // setDocumentId(\"null\");\n          setResponseMsg(\"\");\n          setActionTaken(null);\n        }\n      } catch (error) {\n        console.error(error);\n        props.PushPopupAlert({\n          title: errorToText(error),\n          theme: PopupAlertTheme.danger,\n        });\n      }\n      setLoadingRequest(false);\n    }\n  };\n\n  const handleMarksAddition = async () => {\n    try {\n      await axios.put(`${API.DO_EXAM}/answersheet/user/marks/update`, {\n        answer_sheet_id: props.thisClaim.claiming_on_id,\n        marks: marks,\n      });\n    } catch (error) {\n      console.error(error);\n      props.PushPopupAlert({\n        title: errorToText(error),\n        theme: PopupAlertTheme.danger,\n      });\n    }\n  };\n\n  const getReasonById = (\n    reason_id: string\n  ): claimReasonInterface | undefined => {\n    if (props.claimReasons) {\n      return props.claimReasons.find((item) => item.id === reason_id);\n    }\n    return undefined;\n  };\n\n  // const getAnswersByQuestion = (question_id: string): ClaimGetUserAnswers[] => {\n  //   return props.thisExamSheet.user_answers.filter(\n  //     (item) => item.question === question_id\n  //   );\n  // };\n\n  const claimCandidateAnswers = (): ExamAnswerSheetDone[] => {\n    let result: ExamAnswerSheetDone[] = [\n      {\n        exam_location: props.thisExamSheet.exam_location,\n        questions: props.thisExamSheet.questions,\n        user_answers: props.thisExamSheet.user_answers,\n        user: props.thisExamSheet.user,\n        period: props.thisExamSheet.period,\n        course: props.thisExamSheet.course,\n        exam_paper: props.thisExamSheet.exam_paper,\n        user_status: props.thisExamSheet.user_status,\n        used_duration: props.thisExamSheet.used_duration,\n        total_marks: props.thisExamSheet.total_marks,\n        number_of_question_answered:\n          props.thisExamSheet.number_of_question_answered,\n        // start_time: string,\n        // end_time: string,\n        exam_total_marks: props.thisExamSheet.exam_total_marks,\n        exam_start_time: props.thisExamSheet.exam_start_time,\n        exam_end_time: props.thisExamSheet.exam_end_time,\n        exam_date: props.thisExamSheet.exam_date,\n        status: props.thisExamSheet.status,\n        createdAt: props.thisExamSheet.createdAt,\n        updatedAt: props.thisExamSheet.updatedAt,\n        disability: false,\n        gender: \"\",\n        in_education: false,\n        position: \"\",\n        answer_sheet_id: props.thisExamSheet.answer_sheet_id,\n      },\n    ];\n    // props.thisExamSheet\n\n    return result;\n  };\n\n  return (\n    <section className=\"\">\n      {/* #################### VIEW TABS ################################## */}\n      <div className=\"flex flex-row items-center mx-4\">\n        {Object.values(viewTabs).map((item, i) => (\n          <div\n            key={i}\n            onClick={() => setSelectedTab(item)}\n            className={`animate__animated ${\n              selectedTab === item\n                ? \"bg-blue-100 border-blue-600 text-blue-600 animate__zoomIn\"\n                : \"bg-white border-white text-gray-600\"\n            } hover:bg-blue-100 px-4 py-2 cursor-pointer font-bold border-b-4 hover:border-blue-600 hover:text-blue-600 rounded-t mt-1 mr-1`}\n          >\n            {item}\n          </div>\n        ))}\n      </div>\n      {/* #################### END VIEW TABS ################################## */}\n      <div className=\"w-full bg-white px-4 py-1 divide-y-2 space-y-2\">\n        {/* DOCUMENT DETAILS ==================================================== */}\n        <section className=\"flex flex-col\">\n          {/* DISPLAY POSITION ==================================================== */}\n          {selectedTab === viewTabs.exam && (\n            <section className=\"w-full my-1 animate__animated animate__fadeIn rounded\">\n              <div className=\"bg-white w-full rounded p-2 mb-2\">\n                <AnswersDetails\n                  showAnswers={true}\n                  exam_id={claimShowAnswer(\n                    props.thisExamSheet,\n                    props.thisExam.course_name\n                  )}\n                  allAnswers={claimCandidateAnswers()}\n                  user_id={props.thisExamSheet.user}\n                />\n              </div>\n            </section>\n          )}\n          {/* END DISPLAY POSITION ==================================================== */}\n          {/* -------------------------------------------------------------------------------- */}\n          {/* DISPLAY PROFILE ==================================================== */}\n          {selectedTab === viewTabs.profile && (\n            <section className=\"w-full my-2 animate__animated animate__fadeIn rounded\">\n              <div className=\"flex items-center justify-between\">\n                <div className=\"flex items-center gap-2\">\n                  <span className={`italic text-gray-600`}>Names:</span>\n                  <span className=\"text-gray-800 font-bold text-xl\">\n                    {props.thisClaim.user.user_info.fname +\n                      \" \" +\n                      props.thisClaim.user.user_info.lname}\n                  </span>\n                </div>\n              </div>\n            </section>\n          )}\n          {/* END DISPLAY PROFILE ==================================================== */}\n          {selectedTab === viewTabs.profile && (\n            <div className=\"\">\n              <div className=\"flex items-center gap-2\">\n                <span className={`italic text-gray-600`}>Email:</span>\n                <span className=\"text-gray-800 font-bold text-lg\">\n                  {props.thisClaim.user.email}\n                </span>\n              </div>\n              <div className=\"flex items-center gap-2\">\n                <span className={`italic text-gray-600`}>Phone:</span>\n                <span className=\"text-gray-800 font-bold text-lg\">\n                  {props.thisClaim.user.phone_number}\n                </span>\n              </div>\n              <div className=\"flex items-center gap-2\">\n                <span className={`italic text-gray-600`}>Gender:</span>\n                <span className=\"text-gray-800 font-bold text-lg\">\n                  {props.thisClaim.user.user_info.sex === \"M\"\n                    ? \"Male\"\n                    : \"Female\"}\n                </span>\n              </div>\n            </div>\n          )}\n        </section>\n        {/* END DOCUMENT DETAILS ==================================================== */}\n\n        {/* ################################################################################ */}\n\n        {/* CLAIM LEVEL 1 DETAILS ==================================================== */}\n        {props.thisClaim.claims.length > 0 &&\n          props.thisClaim.claims.map((claim, index) => (\n            <section\n              className=\"flex flex-col px-2 pt-3\"\n              key={index + claim._id}\n            >\n              <div className=\"text-gray-700 italic font-bold\">\n                Claim Comment (level {index + 1})\n              </div>\n              {/* CLAIM COMMENT ==>> LEVEL 1 ==================================================== */}\n              <div className=\"flex flex-col items-start gap-2 mt-1 border rounded px-2 py-1 bg-gray-50\">\n                <div className=\"flex items-center gap-2 bg-blue-100 rounded py-1 px-2\">\n                  <MdInfoOutline />\n                  {getReasonById(props.thisClaim.default_claim_resaons)\n                    ? getReasonById(props.thisClaim.default_claim_resaons)!\n                        .reason\n                    : \"\"}\n                </div>\n                <p>{claim.reason}</p>\n                <span className=\"text-gray-600 text-xs\">\n                  {showDate(claim.createdAt)}\n                  {/* {showDate(claim.createdAt) +\n                    \" at \" +\n                    moment.unix(claim.date_created).format(\"MM/DD/YYYY\")} */}\n                </span>\n              </div>\n              {/* CLAIM COMMENT ==>> LEVEL 1 ==================================================== */}\n\n              {isClaimEvaluated(props.thisClaim, claim.level) && (\n                <section className=\"mt-4\">\n                  <span className=\"text-gray-700 italic font-semibold\">\n                    Response (level {index + 1})\n                  </span>\n                  <div className=\"border-t-2\">\n                    <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n                      <span className={`italic`}>Status:</span>\n                      <span\n                        className={`font-bold ${\n                          claim.decision_taken_status ===\n                          ClaimDecisionStatus.REJECTED\n                            ? \"text-yellow-900\"\n                            : \"text-blue-600\"\n                        } rounded px-3 py-1`}\n                      >\n                        {capitalizeFirstLetter(\n                          claim.decision_taken_status.toLocaleLowerCase()\n                        )}\n                      </span>\n                    </div>\n                    <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n                      <span className={`italic`}>Evaluated by:</span>\n                      <span className=\"font-semibold\">\n                        {claim.evaluater.name}\n                      </span>\n                    </div>\n                    <div className=\"flex items-start gap-2 text-sm text-gray-600\">\n                      <span className={`italic`}>Reason:</span>\n                      <span className=\"font-normal\">\n                        {claim.evaluation_comment}\n                      </span>\n                    </div>\n                  </div>\n                </section>\n              )}\n            </section>\n          ))}\n        {/* END CLAIM LEVEL 1 DETAILS ==================================================== */}\n      </div>\n\n      {/* FOOTER INITIAL ========================================== */}\n      {!actionTaken && (\n        <section className=\"flex items-center justify-between bg-gray-50 rounded mt-3\">\n          {/* SHOWING STATUS ===================================== */}\n          <div className=\"mx-4 my-4\">\n            <span\n              className={`${\n                props.thisClaim.last_claim_status === ClaimStatus.PENDING\n                  ? \"text-yellow-700\"\n                  : props.thisClaim.last_claim_status === ClaimStatus.DELETED\n                  ? \"text-red-700\"\n                  : \"text-green-700\"\n              } italic font-semibold`}\n            >\n              {capitalizeFirstLetter(\n                props.thisClaim.last_claim_status.toLocaleLowerCase()\n              )}\n            </span>\n          </div>\n\n          {props.thisClaim.last_claim_status === ClaimStatus.PENDING && (\n            <div className=\"flex items-center gap-2 px-2\">\n              <button\n                className={`px-4 py-2 font-semibold text-red-50 rounded inline-flex items-center space-x-2 focus:outline-none bg-red-700 hover:bg-red-800`}\n                onClick={() => {\n                  setActionTaken(ClaimDecisionStatus.REJECTED);\n                }}\n              >\n                <MdCancel className=\"w-5 h-5\" />\n                <span>Reject</span>\n              </button>\n              <button\n                className={`px-4 py-2 font-semibold text-blue-50 rounded inline-flex items-center space-x-2 focus:outline-none bg-blue-700 hover:bg-blue-800`}\n                onClick={() => {\n                  setActionTaken(ClaimDecisionStatus.ACCEPTED);\n                }}\n              >\n                <FaRegCheckCircle className=\"w-5 h-5\" />\n                <span>Accept</span>\n              </button>\n            </div>\n          )}\n        </section>\n      )}\n      {/* END FOOTER INITIAL ========================================== */}\n\n      {/* ======================================================== */}\n      {/* FOOTER RESPONSE ========================================== */}\n      {actionTaken && (\n        <section className=\"my-5 overflow-x-auto\">\n          <div className=\"italic text-gray-700 text-base my-1 mx-2\">\n            Selected decision:{\" \"}\n            <span\n              className={`font-semibold text-lg ${\n                actionTaken === ClaimDecisionStatus.ACCEPTED\n                  ? \"text-blue-700\"\n                  : \"text-yellow-800\"\n              }`}\n            >\n              {actionTaken === ClaimDecisionStatus.ACCEPTED\n                ? \"Approved\"\n                : \"Rejected\"}\n            </span>\n          </div>\n          {/* right part */}\n          <div className=\"flex flex-col md:flex-row items-end md:items-start gap-1 w-full\">\n            <div className=\"w-full space-y-1\">\n              {actionTaken === ClaimDecisionStatus.ACCEPTED && (\n                <div className=\"flex items-center justify-end w-full gap-2\">\n                  <span className=\"font-semibold\">Addition marks</span>\n                  <div className=\"px-2\">\n                    <input\n                      placeholder={`Addition marks`}\n                      className={`border border-${\n                        formError && formError.element === \"marks\"\n                          ? \"red\"\n                          : \"gray\"\n                      }-400 rounded px-3 py-1 w-auto focus:outline-none`}\n                      value={marks}\n                      onChange={(e) => {\n                        setMarks(Number(e.target.value));\n                        setFormError(null);\n                      }}\n                      disabled={loadingRequest}\n                    />\n                    {formError && formError.element === \"marks\" && (\n                      <p className=\"text-red-800\">{formError.msg}</p>\n                    )}\n                  </div>\n                </div>\n              )}\n              <div className=\"w-full px-2\">\n                <textarea\n                  placeholder={`Reason of your decision...`}\n                  cols={50}\n                  rows={actionTaken === ClaimDecisionStatus.ACCEPTED ? 2 : 3}\n                  className={`border border-${\n                    formError && formError.element === \"comment\"\n                      ? \"red\"\n                      : \"gray\"\n                  }-400 rounded px-3 py-1 w-full focus:outline-none`}\n                  style={{ resize: \"none\" }}\n                  value={responseMsg}\n                  onChange={(e) => {\n                    setResponseMsg(e.target.value);\n                    setFormError(null);\n                  }}\n                  disabled={loadingRequest}\n                ></textarea>\n                {formError && formError.element === \"comment\" && (\n                  <p className=\"text-red-800\">{formError.msg}</p>\n                )}\n              </div>\n            </div>\n            <div className=\"flex flex-row md:flex-col gap-1 max-w-full px-2\">\n              <button\n                className=\"bg-gray-700 hover:bg-gray-800 px-4 py-2 font-semibold rounded text-white inline-flex items-center space-x-2 focus:outline-none\"\n                onClick={() => {\n                  setResponseMsg(\"\");\n                  setActionTaken(null);\n                  setFormError(null);\n                }}\n                disabled={loadingRequest}\n              >\n                <RiArrowGoBackFill className=\"w-5 h-5\" />\n                <span>Back</span>\n              </button>\n              <button\n                className=\"bg-blue-700 hover:bg-blue-800 px-4 py-2 font-semibold rounded text-white inline-flex items-center space-x-2 focus:outline-none\"\n                disabled={loadingRequest}\n                onClick={() =>\n                  window.confirm(\n                    `Are you sure you want to ${\n                      actionTaken === ClaimDecisionStatus.ACCEPTED\n                        ? \"approve\"\n                        : \"rejected\"\n                    } this document?`\n                  ) && handleVerify()\n                }\n              >\n                {loadingRequest ? (\n                  <div className=\"\">Loading...</div>\n                ) : (\n                  <div className=\"inline-flex items-center space-x-2 gap-1\">\n                    <FaRegCheckCircle className=\"w-5 h-5\" />\n                    <span>Confirm</span>\n                  </div>\n                )}\n              </button>\n            </div>\n          </div>\n          {/* end right part */}\n        </section>\n      )}\n      {/* END FOOTER RESPONSE ========================================== */}\n    </section>\n  );\n};\n\nconst mapStateToProps = ({\n  auth,\n  questionTypes,\n}: StoreState): {\n  auth: Auth;\n  questionTypes: questionTypesStoreInterface;\n} => {\n  return {\n    auth,\n    questionTypes,\n  };\n};\n\nexport default React.memo(\n  connect(mapStateToProps, {\n    loadQuestionTypes,\n    evaluateClaim,\n    PushPopupAlert,\n  })(AdminClaimExamView)\n);\n","import React, { useState } from \"react\";\nimport { CgImage } from \"react-icons/cg\";\nimport Loading from \"../../components/Loading/Loading\";\nimport Modal, { ModalSize, Themes } from \"../../components/Modal/Modal\";\nimport Table from \"../../components/Table/Table\";\nimport ViewPDF from \"../../components/ViewPDF/ViewPDF\";\nimport { isEmptyOrSpaces } from \"../../shared/dataTest\";\nimport { UserDocumentsInterface } from \"../../shared/interfaces\";\nimport { API } from \"../../utils/api\";\nimport { fullScreen, getFileType, isFileImage } from \"../../utils/functions\";\nimport NoSession from \"../SessionSettings/NoSession\";\nimport { PositionRequirementTableInterface } from \"./ViewPosition\";\n\ninterface RequirementProps {\n  requirements: PositionRequirementTableInterface[];\n  userDocs: UserDocumentsInterface[];\n}\n\nconst ViewDocRequirements: React.FC<RequirementProps> = (props) => {\n  const [viewDoc, setViewDoc] = useState<UserDocumentsInterface | null>(null);\n  const [loadingImage, setLoadingImage] = useState<boolean>(false);\n  const [isFullscreen, setSetFullscreen] = useState<boolean>(false);\n  const [failedToLoadFile, setFailedToLoadFile] = useState<boolean>(false);\n\n  const isDocumentExist = (\n    category_id: string,\n    sub_category_id: string,\n    field_id: string\n  ): UserDocumentsInterface | undefined => {\n    if (!isEmptyOrSpaces(category_id)) {\n      let userDocs: UserDocumentsInterface[] = props.userDocs.filter(\n        (item) => item.category_id === category_id\n      );\n\n      if (!isEmptyOrSpaces(sub_category_id)) {\n        userDocs = userDocs.filter(\n          (item) =>\n            item.validation_status === \"approved\" &&\n            item.category_id === category_id &&\n            item.sub_category_id === sub_category_id\n        );\n      }\n\n      if (!isEmptyOrSpaces(field_id)) {\n        return userDocs.find(\n          (item) =>\n            item.validation_status === \"approved\" &&\n            item.category_id === category_id &&\n            item.category_subcategory_data === field_id\n        );\n      }\n    }\n    return undefined;\n  };\n  const tableData = (): JSX.Element[] => {\n    let data: PositionRequirementTableInterface[] = props.requirements;\n    if (data.length === 0) {\n      return [\n        <tr key={153} className=\"border-b border-gray-200 hover:bg-gray-100\">\n          <td className=\"p-3 text-center\" colSpan={3}>\n            No Data Found\n          </td>\n        </tr>,\n      ];\n    }\n\n    return data.map((item, index) => (\n      <tr\n        key={index + item.field_id}\n        className={`border-b border-gray-200 hover:bg-gray-100 ${\n          !isDocumentExist(\n            item.category_id,\n            item.subcategory_id,\n            item.field_id\n          ) && \"text-yellow-800\"\n        }`}\n      >\n        <td className=\"p-3 text-left whitespace-nowrap\">{index + 1})</td>\n        <td className=\"p-3 text-left\">\n          <span>\n            {isEmptyOrSpaces(item.field_id)\n              ? \"Any \" + item.subcategory_title\n              : item.subcategory_title + \" in \" + item.field_title}\n          </span>\n        </td>\n        <td className={`p-3 text-left text-lg italic`}>\n          {isDocumentExist(item.category_id, item.subcategory_id, item.field_id)\n            ? \"Found\"\n            : \"Not found\"}\n        </td>\n        <td className={`p-3 text-right text-lg italic`}>\n          {isDocumentExist(\n            item.category_id,\n            item.subcategory_id,\n            item.field_id\n          ) && (\n            <button\n              className=\"bg-gray-200 hover:bg-gray-300 rounded font-medium px-2 py-1 focus:outline-none\"\n              onClick={() => {\n                setViewDoc(\n                  isDocumentExist(\n                    item.category_id,\n                    item.subcategory_id,\n                    item.field_id\n                  )!\n                );\n                setLoadingImage(true);\n              }}\n            >\n              View Doc\n            </button>\n          )}\n        </td>\n      </tr>\n    ));\n  };\n  const handleFullScreen = () => {\n    if (isFullscreen) {\n      fullScreen(\"doc-img\", \"CLOSE\");\n      setSetFullscreen(false);\n    } else {\n      setSetFullscreen(true);\n      fullScreen(\"doc-img\", \"OPEN\");\n    }\n  };\n\n  return (\n    <div>\n      <Table\n        columns={[\n          { columnTitle: \"#\", alignText: \"left\", padding: \"p-3\" },\n          { columnTitle: \"Qualification\", alignText: \"left\", padding: \"p-3\" },\n          { columnTitle: \"Status\", alignText: \"left\", padding: \"p-3\" },\n          { columnTitle: \"\", alignText: \"left\", padding: \"p-3\" },\n        ]}\n        rows={tableData}\n        pagination={false}\n        search={false}\n        thColor=\"gray\"\n      />\n\n      {viewDoc && (\n        <Modal\n          backDrop={true}\n          theme={Themes.default}\n          close={() => {\n            setViewDoc(null);\n            setLoadingImage(false);\n          }}\n          backDropClose={false}\n          widthSizeClass={ModalSize.extraLarge}\n          displayClose={true}\n          padding={{\n            title: true,\n            body: false,\n            footer: false,\n          }}\n          title=\"Doc view\"\n        >\n          {failedToLoadFile && (\n            <NoSession\n              title=\"Error\"\n              description={\n                isFileImage(getFileType(viewDoc.files))\n                  ? \"Failed to load image\"\n                  : \"Failed to load pdf\"\n              }\n            />\n          )}\n          {loadingImage && !failedToLoadFile && <Loading />}\n          {viewDoc.files && viewDoc.files.length > 0 ? (\n            isFileImage(getFileType(viewDoc.files)) ? (\n              <div className=\"relative\">\n                <img\n                  src={API.AUTH_FILES + viewDoc.files}\n                  alt=\"\"\n                  className={`w-full md:w-auto h-auto md:max-h-screen mx-auto ${\n                    loadingImage && \"hidden\"\n                  }`}\n                  id=\"doc-img\"\n                  onLoad={() => setLoadingImage(false)}\n                  onDoubleClick={() => handleFullScreen()}\n                />\n              </div>\n            ) : (\n              <ViewPDF\n                file_url={API.AUTH_FILES + viewDoc.files}\n                class_name={`w-full h-screen md:max-h-screen mx-auto ${\n                  loadingImage && \"hidden\"\n                }`}\n                frame_title={\"application PDF file view\"}\n                setLoadingFile={setLoadingImage}\n                setLoadingError={setFailedToLoadFile}\n              />\n            )\n          ) : (\n            <div className=\"text-center text-red-400 py-8 animate__animated animate__fadeIn\">\n              <CgImage className=\"mx-auto w-40 h-40\" />\n              <span className=\"font-semibold text-4xl\">No Files Provided</span>\n            </div>\n          )}\n        </Modal>\n      )}\n    </div>\n  );\n};\n\nexport default React.memo(ViewDocRequirements);\n","import axios from \"axios\";\nimport React, { useState } from \"react\";\nimport { FaRegCheckCircle } from \"react-icons/fa\";\nimport { MdCancel, MdInfoOutline, MdTurnedIn } from \"react-icons/md\";\nimport { RiArrowGoBackFill } from \"react-icons/ri\";\nimport { connect } from \"react-redux\";\nimport { Auth, PushPopupAlert, reAssessApplication } from \"../../../actions\";\nimport { evaluateClaim } from \"../../../actions/claiming\";\nimport NoResult, {\n  NoResultThemes,\n} from \"../../../components/NoResult/NoResult\";\nimport {\n  allClaimApplicationInterface,\n  CandidateClaimInterface,\n  ClaimDecisionStatus,\n  claimReasonInterface,\n  ClaimStatus,\n  ClaimTypesInterfaceAPI,\n  PositionAPI,\n} from \"../../../interfaces\";\nimport { ApplicationStates } from \"../../../interfaces/application\";\nimport { PopupAlertTheme } from \"../../../interfaces/popupAlert\";\nimport { StoreState } from \"../../../reducers\";\nimport { DocumentReducerInterface } from \"../../../reducers/document\";\nimport {\n  capitalizeFirstLetter,\n  isEmptyOrSpaces,\n} from \"../../../shared/dataTest\";\nimport { API } from \"../../../utils/api\";\nimport { errorToText } from \"../../../utils/errors\";\nimport { DATE, FC_GetBase64Img, showDate } from \"../../../utils/functions\";\nimport { PositionRequirementTableInterface } from \"../../Positions/ViewPosition\";\nimport ViewDocRequirements from \"../../Positions/ViewDocRequirements\";\nimport { isClaimEvaluated } from \"../ClaimDocView\";\nimport { claimResponseBody } from \"./AdminClaimDocView\";\nimport DisplayCompetence from \"../../Positions/DisplayCompetence\";\n\nexport const FC_AdminApplicationPositionDistinctCategory = (\n  thisPosition: PositionAPI,\n  documentCategories: DocumentReducerInterface\n): {\n  PositionsTemp: PositionRequirementTableInterface[];\n  DistinctCategoriesTemp: PositionRequirementTableInterface[];\n  DistinctSubCategoriesTemp: PositionRequirementTableInterface[];\n} => {\n  let PositionsTemp: PositionRequirementTableInterface[] = [];\n  let DistinctCategoriesTemp: PositionRequirementTableInterface[] = [],\n    DistinctCategoriesIds: string[] = [];\n  let DistinctSubCategoriesTemp: PositionRequirementTableInterface[] = [],\n    DistinctSubCategoriesIds: string[] = [];\n  // GET REQUIREMENTS OF THE CURRENT POSITION ====================\n  let requirements = thisPosition.requirements;\n  // LOOP THROUGH CURRENT POSITION REQUIREMENTS ==========================\n  for (let req in requirements) {\n    let thisRequirements = requirements[req];\n    // GET DOC CATEGORY OF THE CURRENT POSITION REQUIREMENTS ====================\n    let thisCategory = documentCategories.documentCategory\n      ? documentCategories.documentCategory.find(\n          (item) =>\n            item.user_detail_category_id ===\n            thisRequirements.category.user_detail_category_id\n        ) && {\n          title: documentCategories.documentCategory.find(\n            (item) =>\n              item.user_detail_category_id ===\n              thisRequirements.category.user_detail_category_id\n          )!.title,\n          user_detail_category_id: documentCategories.documentCategory.find(\n            (item) =>\n              item.user_detail_category_id ===\n              thisRequirements.category.user_detail_category_id\n          )!.user_detail_category_id,\n        }\n      : {\n          title: \"\",\n          user_detail_category_id:\n            thisRequirements.category.user_detail_category_id,\n        };\n    // GET DOC SUB CATEGORY OF THE CURRENT POSITION REQUIREMENTS ====================\n    let thisSubCategory = documentCategories.documentSubCategory\n      ? documentCategories.documentSubCategory.find(\n          (item) =>\n            item.user_detail_subcategory_id ===\n            thisRequirements.subcategory.user_detail_subcategory_id\n        )\n        ? {\n            title: documentCategories.documentSubCategory.find(\n              (item) =>\n                item.user_detail_subcategory_id ===\n                thisRequirements.subcategory.user_detail_subcategory_id\n            )!.title,\n            user_detail_subcategory_id:\n              documentCategories.documentSubCategory.find(\n                (item) =>\n                  item.user_detail_subcategory_id ===\n                  thisRequirements.subcategory.user_detail_subcategory_id\n              )!.user_detail_subcategory_id,\n            category_id: documentCategories.documentSubCategory.find(\n              (item) =>\n                item.user_detail_subcategory_id ===\n                thisRequirements.subcategory.user_detail_subcategory_id\n            )!.category_id,\n          }\n        : {\n            title: \"\",\n            user_detail_subcategory_id:\n              thisRequirements.subcategory.user_detail_subcategory_id,\n            category_id: \"\",\n          }\n      : {\n          title: \"\",\n          user_detail_subcategory_id:\n            thisRequirements.subcategory.user_detail_subcategory_id,\n          category_id: \"\",\n        };\n    // LOOP THROUGH FIELDS OF THE CURRENT POSITION REQUIREMENTS ==========================\n    if (thisCategory) {\n      for (let field in thisRequirements.position_requirement) {\n        // GET FIELDS OF THE CURRENT POSITION REQUIREMENTS ====================\n        let thisField = documentCategories.documentFields\n          ? documentCategories.documentFields.find(\n              (item) =>\n                item._id === thisRequirements.position_requirement[field]._id\n            )\n            ? {\n                title: documentCategories.documentFields.find(\n                  (item) =>\n                    item._id ===\n                    thisRequirements.position_requirement[field]._id\n                )!.title,\n                _id: documentCategories.documentFields.find(\n                  (item) =>\n                    item._id ===\n                    thisRequirements.position_requirement[field]._id\n                )!._id,\n                required: thisRequirements.position_requirement[field].required,\n              }\n            : {\n                title: \"\",\n                _id: thisRequirements.position_requirement[field]._id,\n                required: thisRequirements.position_requirement[field].required,\n              }\n          : {\n              title: \"\",\n              _id: thisRequirements.position_requirement[field]._id,\n              required: thisRequirements.position_requirement[field].required,\n            };\n        // ADD CURRENT CATEGORY, SUB CATEGORY & FIELDS OF THE CURRENT POSITION REQUIREMENTS IN POSITIONS TEMP ====================\n        PositionsTemp.push({\n          category_id: thisCategory.user_detail_category_id,\n          category_title: thisCategory.title,\n          subcategory_id: thisSubCategory.user_detail_subcategory_id,\n          subcategory_title: thisSubCategory.title,\n          subcategory_required: thisRequirements.required,\n          field_title: thisField.title,\n          field_id: thisField._id,\n          required: thisField.required,\n        });\n      }\n\n      // ADD CATEOGRY OF THE CURRENT POSITION REQUIREMENTS TO ARRAY ====================\n      if (\n        !DistinctCategoriesIds.includes(thisCategory.user_detail_category_id)\n      ) {\n        DistinctCategoriesIds.push(thisCategory.user_detail_category_id);\n        DistinctCategoriesTemp.push({\n          category_id: thisCategory.user_detail_category_id,\n          category_title: thisCategory.title,\n          subcategory_id: \"\",\n          subcategory_title: \"\",\n          subcategory_required: thisRequirements.required,\n          field_title: \"\",\n          field_id: \"\",\n          required: false,\n        });\n      }\n\n      // ADD SUB CATEOGRY OF THE CURRENT POSITION REQUIREMENTS TO ARRAY ====================\n      if (\n        !DistinctSubCategoriesIds.includes(\n          thisSubCategory.user_detail_subcategory_id\n        )\n      ) {\n        DistinctSubCategoriesIds.push(\n          thisSubCategory.user_detail_subcategory_id\n        );\n        DistinctSubCategoriesTemp.push({\n          category_id: thisSubCategory.category_id,\n          category_title: \"\",\n          subcategory_id: thisSubCategory.user_detail_subcategory_id,\n          subcategory_title: thisSubCategory.title,\n          subcategory_required: thisRequirements.required,\n          field_title: \"\",\n          field_id: \"\",\n          required: false,\n        });\n      }\n    }\n  }\n  // DistinctCategoriesIds.;\n\n  return { PositionsTemp, DistinctCategoriesTemp, DistinctSubCategoriesTemp };\n};\n\ntype AdminClaimAppViewProps = {\n  thisApplication: allClaimApplicationInterface;\n  thisPosition: PositionAPI;\n  documentCategories: DocumentReducerInterface;\n  thisClaim: CandidateClaimInterface;\n  claimTypes: ClaimTypesInterfaceAPI[];\n  systemPositions: PositionAPI[];\n  claimReasons: claimReasonInterface[] | null;\n\n  // REDUX ==================\n  auth: Auth;\n  reAssessApplication: Function;\n  evaluateClaim: Function;\n  PushPopupAlert: Function;\n};\n\nconst AdminClaimAppView: React.FC<AdminClaimAppViewProps> = (props) => {\n  const [viewPosition, setViewPosition] = useState<boolean>(true);\n  const [loadingRequest, setLoadingRequest] = useState<boolean>(false);\n  const [actionTaken, setActionTaken] = useState<ClaimDecisionStatus | null>(\n    null\n  );\n  const [formError, setFormError] = useState<{\n    element: string;\n    msg: string;\n  } | null>(null);\n  const [responseMsg, setResponseMsg] = useState<string>(\"\");\n\n  const handleVerify = async () => {\n    if (!actionTaken) {\n      setFormError({\n        element: \"action\",\n        msg: \"Action is required!\",\n      });\n      return setLoadingRequest(false);\n    }\n\n    if (isEmptyOrSpaces(responseMsg)) {\n      setFormError({\n        element: \"comment\",\n        msg: \"Reason of rejection is required\",\n      });\n      return setLoadingRequest(false);\n    }\n\n    let subClaim = props.thisClaim.claims.find(\n      (item) => item.level === props.thisClaim.claim_level\n    );\n\n    if (subClaim) {\n      setLoadingRequest(true);\n      const api_body: claimResponseBody = {\n        sub_claim_id: subClaim._id,\n        evaluation_comment: responseMsg,\n        evaluated_by: props.auth.user.user_id,\n        decision_taken_status: actionTaken,\n        evaluator_name: props.auth.user.fname + \" \" + props.auth.user.lname,\n        evaluator_email: props.auth.user.email,\n      };\n\n      console.log(\"=================claimResponseBody===================\");\n      console.log({ subClaim, api_body });\n      console.log(\"=================claimResponseBody===================\");\n\n      try {\n        const res = await axios.put<CandidateClaimInterface>(\n          `${API.CLAIMING}/user/evaluate/${props.thisClaim._id}`,\n          api_body\n        );\n        if (res) {\n          console.log(\"====================================\");\n          console.log({ evaluate_claim_res: res });\n          console.log(\"====================================\");\n          props.evaluateClaim(res.data);\n          // REVALIDATED DOCUMENT IF IT IS APPROVED =========================\n          if (actionTaken === ClaimDecisionStatus.ACCEPTED) {\n            await overrideDecision();\n          }\n          props.PushPopupAlert({\n            title: `Claim responded successfully!`,\n            theme: PopupAlertTheme.success,\n          });\n          // setDocumentId(\"null\");\n          setResponseMsg(\"\");\n          setActionTaken(null);\n        }\n      } catch (error) {\n        console.error(error);\n        props.PushPopupAlert({\n          title: errorToText(error),\n          theme: PopupAlertTheme.danger,\n        });\n      }\n      setLoadingRequest(false);\n    }\n  };\n\n  const getReasonById = (\n    reason_id: string\n  ): claimReasonInterface | undefined => {\n    if (props.claimReasons) {\n      return props.claimReasons.find((item) => item.id === reason_id);\n    }\n    return undefined;\n  };\n\n  const overrideDecision = async () => {\n    try {\n      const res = await axios.patch(\n        `${API.APPLICATION}/apply/tolerateappl/${props.thisClaim.claiming_on_id}`,\n        {\n          user_id: props.auth.user.user_id,\n          email: props.thisClaim.user.email,\n          phone_number: props.thisClaim.user.phone_number,\n          comment: responseMsg,\n          application_status: ApplicationStates.Shortlisted,\n        }\n      );\n\n      res.data &&\n        props.reAssessApplication({\n          application_id: props.thisClaim.claiming_on_id,\n          application_status: ApplicationStates.Shortlisted,\n        });\n    } catch (error) {\n      console.error({ code_error: error });\n      PushPopupAlert({\n        title: errorToText(error),\n        theme: PopupAlertTheme.danger,\n      });\n      // errorToText(error);\n    }\n    setLoadingRequest(false);\n  };\n\n  const getPositionById = (position_id: string): PositionAPI | undefined => {\n    let result = props.systemPositions.find(\n      (item) => item.position_id === position_id\n    );\n\n    return result;\n  };\n\n  return (\n    <section>\n      <div className=\"w-full py-1 divide-y-2 space-y-4\">\n        {/* DOCUMENT DETAILS ==================================================== */}\n        <section className=\"flex flex-col\">\n          {/* DISPLAY PROFILE ==================================================== */}\n          <div className=\"flex items-start mb-4 -mt-2 pb-3 px-4 bg-white\">\n            <div className=\"w-auto\">\n              <img\n                src={FC_GetBase64Img(props.thisClaim.user.user_info.photo)}\n                className=\"w-auto object-center object-cover h-32 rounded-lg\"\n                alt=\"\"\n              />\n            </div>\n            <section className=\"w-full\">\n              <div className=\"flex items-center\">\n                <div className=\"flex items-center gap-2 px-3\">\n                  <span className={`italic text-gray-600`}>Applicant:</span>\n                  <span className=\"text-gray-800 font-bold text-xl\">\n                    {props.thisClaim.user.user_info.fname +\n                      \" \" +\n                      props.thisClaim.user.user_info.lname}\n                  </span>\n                </div>\n                {false && (\n                  <button\n                    type=\"button\"\n                    className=\"bg-gray-200 hover:bg-gray-300 text-gray-700 group-hover:text-gray-800 py-1 px-2 mr-1 rounded text-sm\"\n                    onClick={() => setViewPosition(!viewPosition)}\n                  >\n                    {viewPosition ? \"Hide\" : \"More\"}\n                  </button>\n                )}\n              </div>\n              <div className=\"flex items-center gap-2 px-3\">\n                <span className={`italic text-gray-600`}>NID:</span>\n                <span className=\"text-gray-800 font-bold text-xl\">\n                  {props.thisClaim.user.n_id}\n                </span>\n              </div>\n              <div className=\"flex items-center gap-2 px-3\">\n                <span className={`italic text-gray-600`}>Sex:</span>\n                <span className=\"text-gray-800 font-bold text-xl\">\n                  {props.thisClaim.user.user_info.sex}\n                </span>\n              </div>\n              <div className=\"flex items-center gap-2 px-3\">\n                <span className={`italic text-gray-600`}>Phone:</span>\n                <span className=\"text-gray-800 font-bold text-xl\">\n                  {props.thisClaim.user.phone_number}\n                </span>\n              </div>\n              <div className=\"flex items-center gap-2 px-3\">\n                <span className={`italic text-gray-600`}>Email:</span>\n                <span className=\"text-gray-800 font-bold text-xl\">\n                  {props.thisClaim.user.email}\n                </span>\n              </div>\n            </section>\n          </div>\n          {/* DISPLAY POSITION ==================================================== */}\n          <section className=\"w-full mb-4 bg-white px-4 py-2 rounded\">\n            <div className=\"bg-white w-full\">\n              <div className=\"text-gray-800 text-2xl font-bold\">\n                Position Details\n              </div>\n              <div className=\"flex items-center\">\n                <div className=\"flex items-center gap-2\">\n                  <span className={`italic text-gray-600`}>Name:</span>\n                  <span className=\"text-gray-800 font-bold text-2xl\">\n                    {getPositionById(props.thisApplication.position)\n                      ? getPositionById(props.thisApplication.position)!\n                          .position_title\n                      : \"Position not found\"}\n                  </span>\n                </div>\n              </div>\n              {/* <div className=\"flex items-center gap-2 text-base text-gray-600\">\n                <span className={`italic`}>Desc:</span>\n                <span className=\"font-semibold\">\n                  {getPositionById(props.thisApplication.position)\n                    ? getPositionById(props.thisApplication.position)!\n                        .description\n                    : \"\"}\n                </span>\n              </div> */}\n              <div className=\"flex items-center gap-2 text-base text-gray-600\">\n                <span className={`italic`}>School level:</span>\n                <span className=\"font-semibold\">\n                  {getPositionById(props.thisApplication.position)\n                    ? getPositionById(props.thisApplication.position)!\n                        .school_level_id.school_level_name\n                    : \"\"}\n                </span>\n              </div>\n              <div className=\"flex items-center gap-2 text-base text-gray-600\">\n                <span className={`italic`}>Institute:</span>\n                <span className=\"font-semibold\">\n                  {getPositionById(props.thisApplication.position)\n                    ? getPositionById(props.thisApplication.position)!\n                        .education_institute_id.education_category_title\n                    : \"\"}\n                </span>\n              </div>\n              <div className=\"flex items-center gap-2 text-base text-gray-600\">\n                <span className={`italic`}>Exams:</span>\n                <span className=\"flex items-center gap-2\">\n                  {getPositionById(props.thisApplication.position) ? (\n                    getPositionById(\n                      props.thisApplication.position\n                    )!.courses.map((item, index) => (\n                      <div\n                        key={index + item.course_id}\n                        className=\"flex items-center gap-1\"\n                      >\n                        <span className=\"font-semibold\">\n                          {item.course_name}\n                        </span>\n                        <span className=\"text-gray-600\">\n                          ({item.course_code})\n                        </span>\n                        {index !==\n                          getPositionById(props.thisApplication.position)!\n                            .courses.length -\n                            1 && \",\"}\n                      </div>\n                    ))\n                  ) : (\n                    <NoResult\n                      theme={NoResultThemes.Dark}\n                      value={\"No courses found\"}\n                    />\n                  )}\n                </span>\n              </div>\n\n              <div className=\"text-gray-800 text-2xl font-bold my-2\">\n                Position competences\n              </div>\n\n              <div className=\"my-3\">\n                <DisplayCompetence\n                  competence={\n                    getPositionById(props.thisApplication.position)\n                      ? getPositionById(props.thisApplication.position)!\n                          .description\n                      : \"\"\n                  }\n                  // displayType=\"text-one\"\n                />\n              </div>\n\n              <div className=\"text-gray-800 text-2xl font-bold my-2\">\n                Position Requirements\n              </div>\n              {getPositionById(props.thisApplication.position) ? (\n                getPositionById(props.thisApplication.position)!.requirements\n                  .length > 0 ? (\n                  FC_AdminApplicationPositionDistinctCategory(\n                    getPositionById(props.thisApplication.position)!,\n                    props.documentCategories\n                  ).DistinctCategoriesTemp.map((item, index) => (\n                    <div\n                      className=\"bg-gray-100props.thisApplication.position rounded p-2\"\n                      key={index + item.category_id}\n                    >\n                      <div className=\"flex items-center gap-2 text-2xl text-gray-500 font-bold\">\n                        <MdTurnedIn />\n                        <span>{item.category_title}</span>\n                      </div>\n                      <div className=\"border bg-white mt-1\">\n                        <ViewDocRequirements\n                          requirements={FC_AdminApplicationPositionDistinctCategory(\n                            getPositionById(props.thisApplication.position)!,\n                            props.documentCategories\n                          ).PositionsTemp.filter(\n                            (req) => req.category_id === item.category_id\n                          )}\n                          userDocs={props.thisClaim.user.details}\n                        />\n                      </div>\n                    </div>\n                  ))\n                ) : (\n                  <NoResult\n                    theme={NoResultThemes.Dark}\n                    value={\"No requirements\"}\n                  ></NoResult>\n                )\n              ) : (\n                <NoResult\n                  theme={NoResultThemes.Dark}\n                  value={\"No requirements\"}\n                ></NoResult>\n              )}\n            </div>\n          </section>\n          {/* END DISPLAY POSITION ==================================================== */}\n          {/* -------------------------------------------------------------------------------- */}\n          {/* END DISPLAY PROFILE ==================================================== */}\n          {/* {selectedTab === viewTabs.profile && (\n            <div className=\"flex items-center\">\n              <div className=\"flex items-center gap-2\">\n                <span className={`italic text-gray-600`}>Position name:</span>\n                <span className=\"text-gray-800 font-bold text-2xl\">\n                  {getPositionById(props.thisApplication.position)\n                    ? getPositionById(props.thisApplication.position)!\n                        .position_title\n                    : \"Position not found\"}\n                </span>\n              </div>\n            </div>\n          )} */}\n          <section className=\"px-4 py-2 bg-white rounded\">\n            <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n              <span className={`italic`}>Status:</span>\n              <span\n                className={`font-bold ${\n                  props.thisClaim.previous\n                    ? props.thisClaim.previous.status ===\n                      ApplicationStates.Rejected\n                    : props.thisApplication.application_status ===\n                      ApplicationStates.Rejected\n                    ? \"text-yellow-900\"\n                    : \"text-blue-600\"\n                } rounded px-3 py-1`}\n              >\n                {props.thisClaim.previous\n                  ? capitalizeFirstLetter(props.thisClaim.previous.status)\n                  : capitalizeFirstLetter(\n                      props.thisApplication.application_status\n                    )}\n              </span>\n            </div>\n            <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n              <span className={`italic`}>Evaluated by:</span>\n              <span className=\"font-semibold\">\n                {props.thisClaim.previous.evaluater.name}\n              </span>\n            </div>\n            {false && (\n              <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n                <span className={`italic`}>Session:</span>\n                <span className=\"font-bold text-gray-900 py-1\">\n                  {props.thisApplication.application_session}\n                </span>\n              </div>\n            )}\n            <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n              <span className={`italic`}>Date:</span>\n              <span className=\"font-bold text-gray-900 py-1\">\n                {DATE(props.thisApplication.createdAt)}\n              </span>\n            </div>\n            <div className=\"flex items-start gap-2 text-sm text-gray-600\">\n              <span className={`italic`}>Reason:</span>\n              <span\n                className=\"font-normal\"\n                dangerouslySetInnerHTML={{\n                  __html: props.thisClaim.previous\n                    ? props.thisClaim.previous.reason\n                    : props.thisApplication.override_by.comment,\n                }}\n              ></span>\n            </div>\n          </section>\n        </section>\n        {/* END DOCUMENT DETAILS ==================================================== */}\n\n        {/* ################################################################################ */}\n\n        {/* CLAIM LEVEL 1 DETAILS ==================================================== */}\n        {props.thisClaim.claims.length > 0 &&\n          props.thisClaim.claims.map((claim, index) => (\n            <section\n              className=\"flex flex-col px-4 pt-2 pb-3 rounded bg-white\"\n              key={index + claim._id}\n            >\n              <div className=\"text-gray-700 italic font-bold\">\n                Claim Comment (level {index + 1})\n              </div>\n              {/* CLAIM COMMENT ==>> LEVEL 1 ==================================================== */}\n              <div className=\"flex flex-col items-start gap-2 mt-1 border rounded px-4 py-1 bg-gray-50\">\n                <div className=\"flex items-center gap-2 bg-blue-100 rounded py-1 px-2\">\n                  <MdInfoOutline />\n                  {getReasonById(props.thisClaim.default_claim_resaons)\n                    ? getReasonById(props.thisClaim.default_claim_resaons)!\n                        .reason\n                    : \"\"}\n                </div>\n                <p>{claim.reason}</p>\n                <span className=\"text-gray-600 text-xs\">\n                  {showDate(claim.createdAt)}\n                  {/* {showDate(claim.createdAt) +\n                    \" at \" +\n                    moment.unix(claim.date_created).format(\"MM/DD/YYYY\")} */}\n                </span>\n              </div>\n              {/* CLAIM COMMENT ==>> LEVEL 1 ==================================================== */}\n\n              {isClaimEvaluated(props.thisClaim, claim.level) && (\n                <section className=\"mt-4\">\n                  <span className=\"text-gray-700 italic font-semibold\">\n                    Response (level {index + 1})\n                  </span>\n                  <div className=\"border-t-2\">\n                    <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n                      <span className={`italic`}>Status:</span>\n                      <span\n                        className={`font-bold ${\n                          claim.decision_taken_status ===\n                          ClaimDecisionStatus.REJECTED\n                            ? \"text-yellow-900\"\n                            : \"text-blue-600\"\n                        } rounded px-3 py-1`}\n                      >\n                        {capitalizeFirstLetter(\n                          claim.decision_taken_status.toLocaleLowerCase()\n                        )}\n                      </span>\n                    </div>\n                    <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n                      <span className={`italic`}>Evaluated by:</span>\n                      <span className=\"font-semibold\">\n                        {claim.evaluater.name}\n                      </span>\n                    </div>\n                    <div className=\"flex items-start gap-2 text-sm text-gray-600\">\n                      <span className={`italic`}>Reason:</span>\n                      <span\n                        className=\"font-normal\"\n                        dangerouslySetInnerHTML={{\n                          __html: claim.evaluation_comment,\n                        }}\n                      ></span>\n                    </div>\n                  </div>\n                </section>\n              )}\n            </section>\n          ))}\n        {/* END CLAIM LEVEL 1 DETAILS ==================================================== */}\n      </div>\n\n      {/* FOOTER INITIAL ========================================== */}\n      {!actionTaken && (\n        <section className=\"flex items-center justify-between bg-gray-50 rounded mt-3\">\n          {/* SHOWING STATUS ===================================== */}\n          <div className=\"mx-4 my-4\">\n            <span\n              className={`${\n                props.thisClaim.last_claim_status === ClaimStatus.PENDING\n                  ? \"text-yellow-700\"\n                  : props.thisClaim.last_claim_status === ClaimStatus.DELETED\n                  ? \"text-red-700\"\n                  : \"text-green-700\"\n              } italic font-semibold`}\n            >\n              {capitalizeFirstLetter(\n                props.thisClaim.last_claim_status.toLocaleLowerCase()\n              )}\n            </span>\n          </div>\n\n          {props.thisClaim.last_claim_status === ClaimStatus.PENDING && (\n            <div className=\"flex items-center gap-2 px-2\">\n              <button\n                className={`px-4 py-2 font-semibold text-red-50 rounded inline-flex items-center space-x-2 focus:outline-none bg-red-700 hover:bg-red-800`}\n                onClick={() => {\n                  setActionTaken(ClaimDecisionStatus.REJECTED);\n                }}\n              >\n                <MdCancel className=\"w-5 h-5\" />\n                <span>Reject</span>\n              </button>\n              <button\n                className={`px-4 py-2 font-semibold text-blue-50 rounded inline-flex items-center space-x-2 focus:outline-none bg-blue-700 hover:bg-blue-800`}\n                onClick={() => {\n                  setActionTaken(ClaimDecisionStatus.ACCEPTED);\n                }}\n              >\n                <FaRegCheckCircle className=\"w-5 h-5\" />\n                <span>Accept</span>\n              </button>\n            </div>\n          )}\n        </section>\n      )}\n      {/* END FOOTER INITIAL ========================================== */}\n\n      {/* ======================================================== */}\n      {/* FOOTER RESPONSE ========================================== */}\n      {actionTaken && (\n        <section className=\"my-5 overflow-x-auto\">\n          <div className=\"italic text-gray-700 text-base my-1 mx-2\">\n            Selected decision:{\" \"}\n            <span\n              className={`font-semibold text-lg ${\n                actionTaken === ClaimDecisionStatus.ACCEPTED\n                  ? \"text-blue-700\"\n                  : \"text-yellow-800\"\n              }`}\n            >\n              {actionTaken === ClaimDecisionStatus.ACCEPTED\n                ? \"Approved\"\n                : \"Rejected\"}\n            </span>\n          </div>\n          {/* right part */}\n          <div className=\"flex flex-col md:flex-row items-end md:items-start gap-1 w-full\">\n            <div className=\"w-full px-2\">\n              <textarea\n                placeholder={`Reason of your decision...`}\n                cols={50}\n                rows={3}\n                className={`border border-${\n                  formError && formError.element === \"comment\" ? \"red\" : \"gray\"\n                }-400 rounded px-3 py-1 w-full focus:outline-none`}\n                style={{ resize: \"none\" }}\n                value={responseMsg}\n                onChange={(e) => {\n                  setResponseMsg(e.target.value);\n                  setFormError(null);\n                }}\n                disabled={loadingRequest}\n              ></textarea>\n              {formError && formError.element === \"comment\" && (\n                <p className=\"text-red-800\">{formError.msg}</p>\n              )}\n            </div>\n            <div className=\"flex flex-row md:flex-col gap-1 max-w-full px-2\">\n              <button\n                className=\"bg-gray-700 hover:bg-gray-800 px-4 py-2 font-semibold rounded text-white inline-flex items-center space-x-2 focus:outline-none\"\n                onClick={() => {\n                  setResponseMsg(\"\");\n                  setActionTaken(null);\n                  setFormError(null);\n                }}\n                disabled={loadingRequest}\n              >\n                <RiArrowGoBackFill className=\"w-5 h-5\" />\n                <span>Back</span>\n              </button>\n              <button\n                className=\"bg-blue-700 hover:bg-blue-800 px-4 py-2 font-semibold rounded text-white inline-flex items-center space-x-2 focus:outline-none\"\n                disabled={loadingRequest}\n                onClick={() =>\n                  window.confirm(\n                    `Are you sure you want to ${\n                      actionTaken === ClaimDecisionStatus.ACCEPTED\n                        ? \"approve\"\n                        : \"rejected\"\n                    } this document?`\n                  ) && handleVerify()\n                }\n              >\n                {loadingRequest ? (\n                  <div className=\"\">Loading...</div>\n                ) : (\n                  <div className=\"inline-flex items-center space-x-2 gap-1\">\n                    <FaRegCheckCircle className=\"w-5 h-5\" />\n                    <span>Confirm</span>\n                  </div>\n                )}\n              </button>\n            </div>\n          </div>\n          {/* end right part */}\n        </section>\n      )}\n      {/* END FOOTER RESPONSE ========================================== */}\n    </section>\n  );\n};\n\nconst mapStateToProps = ({\n  auth,\n}: StoreState): {\n  auth: Auth;\n} => {\n  return {\n    auth: auth,\n  };\n};\n\nexport default React.memo(\n  connect(mapStateToProps, {\n    evaluateClaim,\n    reAssessApplication,\n    PushPopupAlert,\n  })(AdminClaimAppView)\n);\n","import React from \"react\";\nimport axios from \"axios\";\nimport { FaRegCheckCircle } from \"react-icons/fa\";\nimport { MdCancel, MdInfoOutline } from \"react-icons/md\";\nimport { RiArrowGoBackFill } from \"react-icons/ri\";\nimport { connect } from \"react-redux\";\nimport { adminDisplayClaimTitle } from \".\";\nimport { Auth, PushPopupAlert } from \"../../../actions\";\nimport { evaluateClaim } from \"../../../actions/claiming\";\nimport { verifyDocument } from \"../../../actions/document\";\nimport { VerifyDocumentInterface } from \"../../../actions/users\";\nimport {\n  CandidateClaimInterface,\n  ClaimDecisionStatus,\n  claimReasonInterface,\n  ClaimStatus,\n  ClaimTypesInterfaceAPI,\n} from \"../../../interfaces\";\nimport { PopupAlertTheme } from \"../../../interfaces/popupAlert\";\nimport { StoreState } from \"../../../reducers\";\nimport { DocumentReducerInterface } from \"../../../reducers/document\";\nimport {\n  capitalizeFirstLetter,\n  isEmptyOrSpaces,\n} from \"../../../shared/dataTest\";\nimport {\n  DocValidationStatusInterface,\n  UserDocumentsInterface,\n} from \"../../../shared/interfaces\";\nimport { API } from \"../../../utils/api\";\nimport { errorToText } from \"../../../utils/errors\";\nimport { showDate } from \"../../../utils/functions\";\nimport { isClaimEvaluated } from \"../ClaimDocView\";\n\nexport type claimResponseBody = {\n  sub_claim_id: string;\n  evaluation_comment: string;\n  evaluated_by: string;\n  evaluator_name: string;\n  evaluator_email: string;\n  decision_taken_status: ClaimDecisionStatus;\n};\n\ntype AdminClaimDocViewProps = {\n  thisDoc: UserDocumentsInterface;\n  documentCategories: DocumentReducerInterface;\n  thisClaim: CandidateClaimInterface;\n  claimReasons: claimReasonInterface[] | null;\n  candidateId: string;\n  claimTypes: ClaimTypesInterfaceAPI[];\n  viewImage: boolean;\n  setViewImage: (value: boolean) => void;\n  loadingRequest: boolean;\n  setLoadingRequest: (value: boolean) => void;\n  actionTaken: ClaimDecisionStatus | null;\n  setActionTaken: (value: ClaimDecisionStatus | null) => void;\n  responseMsg: string;\n  setResponseMsg: (value: string) => void;\n  formError: {\n    element: string;\n    msg: string;\n  } | null;\n  setFormError: (\n    value: {\n      element: string;\n      msg: string;\n    } | null\n  ) => void;\n\n  // REDUX ==================\n  auth: Auth;\n  verifyDocument: Function;\n  evaluateClaim: Function;\n  PushPopupAlert: Function;\n};\n\nconst AdminClaimDocView: React.FC<AdminClaimDocViewProps> = (props) => {\n  const handleVerify = async () => {\n    if (!props.actionTaken) {\n      props.setFormError({\n        element: \"action\",\n        msg: \"Action is required!\",\n      });\n      return props.setLoadingRequest(false);\n    }\n\n    if (isEmptyOrSpaces(props.responseMsg)) {\n      props.setFormError({\n        element: \"comment\",\n        msg: \"Reason of rejection is required\",\n      });\n      return props.setLoadingRequest(false);\n    }\n\n    let subClaim = props.thisClaim.claims.find(\n      (item) => item.level === props.thisClaim.claim_level\n    );\n\n    if (subClaim) {\n      props.setLoadingRequest(true);\n      const api_body: claimResponseBody = {\n        sub_claim_id: subClaim._id,\n        evaluation_comment: props.responseMsg,\n        evaluated_by: props.auth.user.user_id,\n        decision_taken_status: props.actionTaken,\n        evaluator_name: props.auth.user.fname + \" \" + props.auth.user.lname,\n        evaluator_email: props.auth.user.email,\n      };\n\n      try {\n        const res = await axios.put<CandidateClaimInterface>(\n          `${API.CLAIMING}/user/evaluate/${props.thisClaim._id}`,\n          api_body\n        );\n        if (res) {\n          console.log({ evaluate_claim_res: res });\n          props.evaluateClaim(res.data);\n          // REVALIDATED DOCUMENT IF IT IS APPROVED =========================\n          if (props.actionTaken === ClaimDecisionStatus.ACCEPTED) {\n            await FC_DocValidation();\n          }\n          props.PushPopupAlert({\n            title: `Claim responded successfully!`,\n            theme: PopupAlertTheme.success,\n          });\n          // setDocumentId(\"null\");\n          props.setResponseMsg(\"\");\n          props.setActionTaken(null);\n        }\n      } catch (error) {\n        console.error(error);\n        props.PushPopupAlert({\n          title: errorToText(error),\n          theme: PopupAlertTheme.danger,\n        });\n      }\n      props.setLoadingRequest(false);\n    }\n  };\n\n  const FC_DocValidation = async () => {\n    const api_body: VerifyDocumentInterface = {\n      user_id: props.thisClaim.user.user_id,\n      doc_id: props.thisClaim.claiming_on_id,\n      validation_status:\n        props.actionTaken === ClaimDecisionStatus.ACCEPTED\n          ? DocValidationStatusInterface.APPROVED\n          : DocValidationStatusInterface.REJECTED,\n      validated_by: {\n        user_id: props.auth.user.user_id,\n        comment: props.responseMsg,\n        validation_status:\n          props.actionTaken === ClaimDecisionStatus.ACCEPTED\n            ? DocValidationStatusInterface.APPROVED\n            : DocValidationStatusInterface.REJECTED,\n      },\n      in_education: false,\n      disability: false,\n      expiration_date: \"this.state.expiration_date\",\n    };\n    const api_redux: VerifyDocumentInterface = {\n      user_id: props.thisClaim.user.user_id,\n      doc_id: props.thisClaim.claiming_on_id,\n      validation_status:\n        props.actionTaken === ClaimDecisionStatus.ACCEPTED\n          ? DocValidationStatusInterface.APPROVED\n          : DocValidationStatusInterface.REJECTED,\n      validated_by: {\n        user_id: props.auth.user.user_id,\n        comment: props.responseMsg,\n        validation_status:\n          props.actionTaken === ClaimDecisionStatus.ACCEPTED\n            ? DocValidationStatusInterface.APPROVED\n            : DocValidationStatusInterface.REJECTED,\n        date: \"\",\n      },\n      in_education: false,\n      disability: false,\n      expiration_date: \"this.state.expiration_date\",\n    };\n\n    try {\n      const res = await axios.post<VerifyDocumentInterface>(\n        `${API.USER}/docs/validateuserdoc`,\n        api_body\n      );\n      if (res) {\n        props.verifyDocument(api_redux);\n        await FC_shortListing(props.thisClaim.user.user_id);\n        // setDocumentId(\"null\");\n      }\n    } catch (error) {\n      console.error(error);\n      props.PushPopupAlert({\n        title: errorToText(error),\n        theme: PopupAlertTheme.danger,\n      });\n    }\n  };\n\n  const FC_shortListing = async (candidate_id: string) => {\n    try {\n      const res = await axios.patch(\n        `${API.APPLICATION}/apply/doccheckshortlist/${candidate_id}`\n      );\n      console.log({ res });\n    } catch (error) {\n      console.error({ error });\n      props.PushPopupAlert({\n        title: errorToText(error),\n        theme: PopupAlertTheme.danger,\n      });\n    }\n  };\n\n  const getReasonById = (\n    reason_id: string\n  ): claimReasonInterface | undefined => {\n    if (props.claimReasons) {\n      return props.claimReasons.find((item) => item.id === reason_id);\n    }\n    return undefined;\n  };\n\n  return (\n    <section className=\"\">\n      <div className=\"w-full bg-white px-4 py-1 divide-y-2 space-y-2\">\n        {/* DOCUMENT DETAILS ==================================================== */}\n        <section className=\"flex flex-col\">\n          <div className=\"flex items-center justify-between\">\n            <div className=\"flex items-center gap-2\">\n              <span className={`italic text-gray-600`}>Names:</span>\n              <span className=\"text-gray-800 font-bold text-xl\">\n                {props.thisClaim.user.user_info.fname +\n                  \" \" +\n                  props.thisClaim.user.user_info.lname}\n              </span>\n            </div>\n            <button\n              type=\"button\"\n              className=\"bg-blue-200 hover:bg-blue-300 text-blue-700 group-hover:text-blue-800 py-1 px-2 mr-1 rounded text-sm\"\n              onClick={() => props.setViewImage(!props.viewImage)}\n            >\n              {props.viewImage ? \"Hide\" : \"View\"}\n            </button>\n          </div>\n          <div className=\"flex items-center gap-2\">\n            <span className={`italic text-gray-600`}>Title:</span>\n            <span className=\"text-gray-800 font-bold text-2xl\">\n              {/* {ClaimGetDocTitle(props.documentCategories, props.thisDoc).main} */}\n              {props.thisClaim.user.details.filter(\n                (item) => item.validation_status !== \"waiting\"\n              ).length > 0\n                ? adminDisplayClaimTitle(\n                    props.documentCategories,\n                    props.thisClaim.user.details.filter(\n                      (item) => item.validation_status !== \"waiting\"\n                    ),\n                    props.thisClaim\n                  )\n                : \"-\"}\n            </span>\n          </div>\n          <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n            <span className={`italic`}>Status:</span>\n            <span className=\"font-bold text-yellow-900 rounded px-3 py-1\">\n              {props.thisClaim.previous\n                ? capitalizeFirstLetter(props.thisClaim.previous.status)\n                : capitalizeFirstLetter(props.thisDoc.validation_status)}\n            </span>\n          </div>\n          <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n            <span className={`italic`}>Evaluated by:</span>\n            <span className=\"font-semibold\">\n              {props.thisClaim.previous.evaluater.name}\n            </span>\n          </div>\n          <div className=\"flex items-start gap-2 text-sm text-gray-600\">\n            <span className={`italic`}>Reason:</span>\n            <span className=\"font-normal\">\n              {props.thisClaim.previous\n                ? props.thisClaim.previous.reason\n                : props.thisDoc.validated_by.commet}\n            </span>\n          </div>\n\n          {/* DISPLAY IMAGE ==================================================== */}\n          {props.viewImage && (\n            <div className=\"w-full my-1 animate__animated animate__fadeIn\">\n              <img\n                src={`${API.AUTH_FILES}/${props.thisDoc.files}`}\n                alt=\"doc file\"\n                className={`w-full animate__animated animate__fadeIn`}\n              />\n            </div>\n          )}\n          {/* END DISPLAY IMAGE ==================================================== */}\n        </section>\n        {/* END DOCUMENT DETAILS ==================================================== */}\n\n        {/* ################################################################################ */}\n\n        {/* CLAIM LEVEL 1 DETAILS ==================================================== */}\n        {props.thisClaim.claims.length > 0 &&\n          props.thisClaim.claims.map((claim, index) => (\n            <section\n              className=\"flex flex-col px-2 pt-3\"\n              key={index + claim._id}\n            >\n              <div className=\"text-gray-700 italic font-bold\">\n                Claim Comment (level {index + 1})\n              </div>\n              {/* CLAIM COMMENT ==>> LEVEL 1 ==================================================== */}\n              <div className=\"flex flex-col items-start gap-2 mt-1 border rounded px-4 py-1 bg-gray-50\">\n                <div className=\"flex items-center gap-2 bg-blue-100 rounded py-1 px-2\">\n                  <MdInfoOutline />\n                  {getReasonById(props.thisClaim.default_claim_resaons)\n                    ? getReasonById(props.thisClaim.default_claim_resaons)!\n                        .reason\n                    : \"\"}\n                </div>\n                <p>{claim.reason}</p>\n                <span className=\"text-gray-500 text-xs\">\n                  {showDate(claim.createdAt)}\n                </span>\n              </div>\n              {/* CLAIM COMMENT ==>> LEVEL 1 ==================================================== */}\n\n              {isClaimEvaluated(props.thisClaim, claim.level) && (\n                <section className=\"mt-4\">\n                  <span className=\"text-gray-700 italic font-semibold\">\n                    Response (level {index + 1})\n                  </span>\n                  <div className=\"border-t-2\">\n                    <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n                      <span className={`italic`}>Status:</span>\n                      <span\n                        className={`font-bold ${\n                          claim.decision_taken_status ===\n                          ClaimDecisionStatus.REJECTED\n                            ? \"text-yellow-900\"\n                            : \"text-blue-600\"\n                        } rounded px-3 py-1`}\n                      >\n                        {capitalizeFirstLetter(\n                          claim.decision_taken_status.toLocaleLowerCase()\n                        )}\n                      </span>\n                    </div>\n                    <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n                      <span className={`italic`}>Evaluated by:</span>\n                      <span className=\"font-semibold\">\n                        {claim.evaluater.name}\n                      </span>\n                    </div>\n                    <div className=\"flex items-start gap-2 text-sm text-gray-600\">\n                      <span className={`italic`}>Reason:</span>\n                      <span className=\"font-normal\">\n                        {claim.evaluation_comment}\n                      </span>\n                    </div>\n                  </div>\n                </section>\n              )}\n            </section>\n          ))}\n        {/* END CLAIM LEVEL 1 DETAILS ==================================================== */}\n      </div>\n\n      {/* FOOTER INITIAL ========================================== */}\n      {!props.actionTaken && (\n        <section className=\"flex items-center justify-between bg-gray-50 rounded mt-3\">\n          {/* SHOWING STATUS ===================================== */}\n          <div className=\"mx-4\">\n            <span\n              className={`${\n                props.thisClaim.last_claim_status === ClaimStatus.PENDING\n                  ? \"text-yellow-700\"\n                  : props.thisClaim.last_claim_status === ClaimStatus.DELETED\n                  ? \"text-red-700\"\n                  : \"text-green-700\"\n              } italic font-semibold`}\n            >\n              {capitalizeFirstLetter(\n                props.thisClaim.last_claim_status.toLocaleLowerCase()\n              )}\n            </span>\n          </div>\n\n          {props.thisClaim.last_claim_status === ClaimStatus.PENDING && (\n            <div className=\"flex items-center gap-2 px-2\">\n              <button\n                className={`px-4 py-2 font-semibold text-red-50 rounded inline-flex items-center space-x-2 focus:outline-none bg-red-700 hover:bg-red-800`}\n                onClick={() => {\n                  props.setActionTaken(ClaimDecisionStatus.REJECTED);\n                }}\n              >\n                <MdCancel className=\"w-5 h-5\" />\n                <span>Reject</span>\n              </button>\n              <button\n                className={`px-4 py-2 font-semibold text-blue-50 rounded inline-flex items-center space-x-2 focus:outline-none bg-blue-700 hover:bg-blue-800`}\n                onClick={() => {\n                  props.setActionTaken(ClaimDecisionStatus.ACCEPTED);\n                }}\n              >\n                <FaRegCheckCircle className=\"w-5 h-5\" />\n                <span>Accept</span>\n              </button>\n            </div>\n          )}\n        </section>\n      )}\n      {/* END FOOTER INITIAL ========================================== */}\n\n      {/* ======================================================== */}\n      {/* FOOTER RESPONSE ========================================== */}\n      {props.actionTaken && (\n        <section className=\"my-5 overflow-x-auto\">\n          <div className=\"italic text-gray-700 text-base my-1 mx-2\">\n            Selected decision:{\" \"}\n            <span\n              className={`font-semibold text-lg ${\n                props.actionTaken === ClaimDecisionStatus.ACCEPTED\n                  ? \"text-blue-700\"\n                  : \"text-yellow-800\"\n              }`}\n            >\n              {props.actionTaken === ClaimDecisionStatus.ACCEPTED\n                ? \"Approved\"\n                : \"Rejected\"}\n            </span>\n          </div>\n          {/* right part */}\n          <div className=\"flex flex-col md:flex-row items-end md:items-start gap-1 w-full\">\n            <div className=\"w-full px-2\">\n              <textarea\n                placeholder={`Reason of your decision...`}\n                cols={50}\n                rows={3}\n                className={`border border-${\n                  props.formError && props.formError.element === \"comment\"\n                    ? \"red\"\n                    : \"gray\"\n                }-400 rounded px-3 py-1 w-full focus:outline-none`}\n                style={{ resize: \"none\" }}\n                value={props.responseMsg}\n                onChange={(e) => {\n                  props.setResponseMsg(e.target.value);\n                  props.setFormError(null);\n                }}\n                disabled={props.loadingRequest}\n              ></textarea>\n              {props.formError && props.formError.element === \"comment\" && (\n                <p className=\"text-red-800\">{props.formError.msg}</p>\n              )}\n            </div>\n            <div className=\"flex flex-row md:flex-col gap-1 max-w-full px-2\">\n              <button\n                className=\"bg-gray-700 hover:bg-gray-800 px-4 py-2 font-semibold rounded text-white inline-flex items-center space-x-2 focus:outline-none\"\n                onClick={() => {\n                  props.setResponseMsg(\"\");\n                  props.setActionTaken(null);\n                  props.setFormError(null);\n                }}\n                disabled={props.loadingRequest}\n              >\n                <RiArrowGoBackFill className=\"w-5 h-5\" />\n                <span>Back</span>\n              </button>\n              <button\n                className=\"bg-blue-700 hover:bg-blue-800 px-4 py-2 font-semibold rounded text-white inline-flex items-center space-x-2 focus:outline-none\"\n                disabled={props.loadingRequest}\n                onClick={() =>\n                  window.confirm(\n                    `Are you sure you want to ${\n                      props.actionTaken === ClaimDecisionStatus.ACCEPTED\n                        ? \"approve\"\n                        : \"rejected\"\n                    } this document?`\n                  ) && handleVerify()\n                }\n              >\n                {props.loadingRequest ? (\n                  <div className=\"\">Loading...</div>\n                ) : (\n                  <div className=\"inline-flex items-center space-x-2 gap-1\">\n                    <FaRegCheckCircle className=\"w-5 h-5\" />\n                    <span>Confirm</span>\n                  </div>\n                )}\n              </button>\n            </div>\n          </div>\n          {/* end right part */}\n        </section>\n      )}\n      {/* END FOOTER RESPONSE ========================================== */}\n    </section>\n  );\n};\n\nconst mapStateToProps = ({\n  auth,\n}: StoreState): {\n  auth: Auth;\n} => {\n  return {\n    auth: auth,\n  };\n};\n\nexport default React.memo(\n  connect(mapStateToProps, {\n    evaluateClaim,\n    verifyDocument,\n    PushPopupAlert,\n  })(AdminClaimDocView)\n);\n","import React, { Component } from \"react\";\nimport { MdArrowBack, MdInfoOutline } from \"react-icons/md\";\nimport { connect } from \"react-redux\";\nimport { Auth, loadCourses, PushPopupAlert } from \"../../../actions\";\nimport {\n  getAllClaims,\n  getAllApplications,\n  getClaimReasons,\n  getAllAnswers,\n} from \"../../../actions/claiming\";\nimport {\n  getDocumentCategory,\n  getDocumentSubCategory,\n  getDocumentFields,\n} from \"../../../actions/document\";\nimport { GetAllSessionPlans } from \"../../../actions/session\";\nimport { getPositions } from \"../../../actions/settings\";\nimport { PopupAlertData } from \"../../../components/Alert/Popup\";\nimport Loading from \"../../../components/Loading/Loading\";\nimport TableLoading from \"../../../components/Loading/TableLoading\";\nimport { SideNavigation } from \"../../../components/Navigation/SideNavigation\";\nimport NoResult, {\n  NoResultThemes,\n} from \"../../../components/NoResult/NoResult\";\nimport {\n  SessionPlanInterface,\n  PositionAPI,\n  allClaimApplicationInterface,\n  CandidateClaimInterface,\n  PlansTypeKeys,\n  ClaimDecisionStatus,\n  ClaimTypesInterface,\n  course,\n} from \"../../../interfaces\";\nimport { PopupAlertTheme } from \"../../../interfaces/popupAlert\";\nimport { StoreState } from \"../../../reducers\";\nimport { ClaimingReducerType } from \"../../../reducers/claiming\";\nimport { DocumentReducerInterface } from \"../../../reducers/document\";\nimport { capitalizeFirstLetter } from \"../../../shared/dataTest\";\nimport { UserDocumentsInterface } from \"../../../shared/interfaces\";\nimport { DATE } from \"../../../utils/functions\";\nimport search from \"../../../utils/search\";\nimport { getClaimById, whichClaimStatus, whichClaimType } from \"../Candidate\";\nimport { getCourseById, getCourseIdBySheetId } from \"../Candidate/FormExamList\";\nimport ClaimHeaderTitle from \"../ClaimHeaderTitle\";\nimport AdminClaimAppView from \"./AdminClaimAppView\";\nimport AdminClaimDocView from \"./AdminClaimDocView\";\nimport AdminClaimExamView from \"./AdminClaimExamView\";\nimport AdminFilterByType, {\n  filterClaimsByClaimType,\n} from \"./AdminFilterByType\";\n\n// export const getUserDocuments = (\n//   userList: UserInterface[],\n//   user_id: String\n// ): { user: UserInterface; document: UserDocumentsInterface[] } | null => {\n//   const thisUser = userList.find((item) => item.user_id === user_id);\n//   if (thisUser) {\n//     const thisDoc = thisUser.details.filter(\n//       (item) => item.validation_status !== \"waiting\"\n//     );\n//     return { user: thisUser, document: thisDoc };\n//   }\n//   return null;\n// };\n\nexport const adminDisplayClaimTitle = (\n  documentCategories: DocumentReducerInterface,\n  candidateDocuments: UserDocumentsInterface[],\n  thisClaim: CandidateClaimInterface\n): string => {\n  let result: string = \"\";\n\n  // CHECK IF CLAIM IS FOR DOCUMENTS ===============================================\n  if (thisClaim.type_key === PlansTypeKeys.DOCUMENT_VALIDATION) {\n    let thisDoc = candidateDocuments.find(\n      (item) => item.doc_id === thisClaim.claiming_on_id\n    );\n    result = thisDoc\n      ? AdminClaimGetDocTitle(documentCategories, thisDoc).main\n      : \"Document not found\";\n  }\n  // END CHECK IF CLAIM IS FOR DOCUMENTS ===============================================\n\n  return result;\n};\n\nexport const AdminClaimGetDocTitle = (\n  documentCategories: DocumentReducerInterface,\n  doc: UserDocumentsInterface\n): { category: string; sub_category: string; field: string; main: string } => {\n  let DocCategory: string = \"\",\n    DocSubCategory: string = \"\",\n    DocField: string = \"\",\n    DocTitle: string = \"\";\n  if (\n    doc.sub_category_id &&\n    doc.sub_category_id.length > 0 &&\n    documentCategories.documentSubCategory\n  ) {\n    DocTitle = documentCategories.documentSubCategory.filter(\n      (c) => c.user_detail_subcategory_id === doc.sub_category_id\n    )[0].title;\n    DocSubCategory = DocTitle;\n  } else if (\n    doc.category_id.length > 0 &&\n    documentCategories.documentCategory\n  ) {\n    DocTitle = documentCategories.documentCategory.filter(\n      (c) => c.user_detail_category_id === doc.category_id\n    )[0].title;\n    DocCategory = DocTitle;\n  }\n  if (\n    doc.category_subcategory_data.length > 0 &&\n    documentCategories.documentFields\n  ) {\n    DocField = documentCategories.documentFields.filter(\n      (c) => c._id === doc.category_subcategory_data\n    )[0].title;\n    DocTitle += \" in \" + DocField;\n  }\n\n  return {\n    category: DocCategory,\n    sub_category: DocSubCategory,\n    field: DocField,\n    main: DocTitle,\n  };\n};\n\nexport const getApplicationById = (\n  allApplications: allClaimApplicationInterface[] | null,\n  systemPositions: PositionAPI[] | null,\n  application_id: String\n): {\n  application: allClaimApplicationInterface;\n  position: PositionAPI;\n} | null => {\n  if (allApplications) {\n    let thisApplication = allApplications.find(\n      (item) => item._id === application_id\n    );\n    if (thisApplication && systemPositions) {\n      let thisPosition = systemPositions.find(\n        (item) => item.position_id === thisApplication!.position\n      );\n      if (thisPosition) {\n        return { application: thisApplication, position: thisPosition };\n      }\n    }\n  }\n  return null;\n};\n\ntype AppProps = {\n  auth: Auth;\n  application_sessions: SessionPlanInterface[] | null;\n  claiming: ClaimingReducerType;\n  documentReducer: DocumentReducerInterface;\n  systemPositions: PositionAPI[] | null;\n  courses: course[] | null;\n  loadCourses: Function;\n  getPositions: Function;\n  getClaimReasons: Function;\n  getAllApplications: Function;\n  getAllClaims: Function;\n  getAllAnswers: Function;\n  GetAllSessionPlans: Function;\n  getDocumentCategory: Function;\n  getDocumentSubCategory: Function;\n  getDocumentFields: Function;\n  verifyAllDocument: Function;\n  PushPopupAlert: (alert: PopupAlertData) => void;\n};\n\ntype AppState = {\n  loading: boolean;\n  loadingData: boolean;\n  thisPeriod: SessionPlanInterface | null;\n  viewClaim: boolean;\n  periodChanged: boolean;\n  claimId: string | null;\n  claimType: string | null;\n  candidateId: string | null;\n  searchClaim: string;\n\n  // FOR FORM ================\n  viewImage: boolean;\n  loadingRequest: boolean;\n  actionTaken: ClaimDecisionStatus | null;\n  responseMsg: string;\n  formError: {\n    element: string;\n    msg: string;\n  } | null;\n};\n\nclass Index extends Component<AppProps, AppState> {\n  constructor(props: AppProps) {\n    super(props);\n\n    this.state = {\n      loading: true,\n      loadingData: false,\n      thisPeriod: null,\n      viewClaim: false,\n      periodChanged: false,\n      claimId: null,\n      claimType: null,\n      candidateId: null,\n      searchClaim: \"\",\n\n      // FOR FORM ================\n      viewImage: false,\n      loadingRequest: false,\n      actionTaken: null,\n      responseMsg: \"\",\n      formError: null,\n    };\n  }\n\n  setLoading = (value: boolean) => {\n    this.setState({ loading: value });\n  };\n\n  setLoadingData = (value: boolean) => {\n    this.setState({ loadingData: value });\n  };\n\n  setPeriodChanged = (value: boolean) => {\n    this.setState({ periodChanged: value });\n  };\n\n  setThisPeriod = (value: SessionPlanInterface | null) => {\n    this.setState({ thisPeriod: value });\n  };\n\n  setViewClaim = (value: boolean) => {\n    this.setState({ viewClaim: value });\n  };\n\n  // ------------------------------\n  setClaimId = (value: string | null) => {\n    this.setState({ claimId: value });\n  };\n  setClaimType = (value: string | null) => {\n    this.setState({ claimType: value });\n  };\n  setCandidateId = (value: string | null) => {\n    this.setState({ candidateId: value });\n  };\n  setViewImage = (value: boolean) => {\n    this.setState({ viewImage: value });\n  };\n  setLoadingRequest = (value: boolean) => {\n    this.setState({ loadingRequest: value });\n  };\n\n  setActionTaken = (value: ClaimDecisionStatus | null) => {\n    this.setState({ actionTaken: value });\n  };\n\n  setResponseMsg = (value: string) => {\n    this.setState({ responseMsg: value });\n  };\n\n  setFormError = (\n    value: {\n      element: string;\n      msg: string;\n    } | null\n  ) => {\n    this.setState({ formError: value });\n  };\n\n  setDefaultSession = (sessions: SessionPlanInterface[]) => {\n    // SETTING ACTIVE SESSION ==========================\n    if (this.state.thisPeriod === null) {\n      let thisSession = sessions.find((item) => item.is_active === true);\n      this.setThisPeriod(thisSession ? thisSession : sessions[0]);\n      this.loadsAllClaims(thisSession ? thisSession : sessions[0]);\n    }\n  };\n\n  setSearchClaim = (value: string) => {\n    this.setState({ searchClaim: value });\n  };\n\n  loadsAllClaims = (thisSession: SessionPlanInterface) => {\n    // LOADING CLAIMING OF CURRENT CANDIDATES ================================\n    if (this.props.claiming.allClaims === null) {\n      this.props.getAllClaims(\n        2,\n        thisSession._id,\n        (status: boolean, msg: string) => {\n          this.setLoading(status);\n          if (!status && msg.length) {\n            this.props.PushPopupAlert({\n              title: msg,\n              theme: PopupAlertTheme.danger,\n            });\n          }\n        }\n      );\n    }\n  };\n\n  loadsApplications = (application_id: string) => {\n    // LOADING CLAIMING OF CURRENT CANDIDATES ================================\n    if (\n      !this.props.claiming.allApplications.find(\n        (item) => item._id === application_id\n      )\n    ) {\n      this.props.getAllApplications(\n        application_id,\n        (status: boolean, msg: string) => {\n          this.setLoading(status);\n          if (!status && msg.length) {\n            this.props.PushPopupAlert({\n              title: msg,\n              theme: PopupAlertTheme.danger,\n            });\n          }\n        }\n      );\n    }\n  };\n\n  loadsController = (file_id: string, claimType: PlansTypeKeys) => {\n    if (claimType === PlansTypeKeys.APPLICATION)\n      this.loadsApplications(file_id);\n    if (claimType === PlansTypeKeys.EXAMINATION) this.loadsAlAnswers(file_id);\n  };\n\n  loadsAlAnswers = (answersheet_id: string) => {\n    // LOADING CLAIMING OF CURRENT CANDIDATES ================================\n    if (\n      !this.props.claiming.allAnswer.find(\n        (item) => item.answer_sheet_id === answersheet_id\n      )\n    ) {\n      this.props.getAllAnswers(\n        answersheet_id,\n        (status: boolean, msg: string) => {\n          this.setLoading(status);\n          if (!status && msg.length) {\n            this.props.PushPopupAlert({\n              title: msg,\n              theme: PopupAlertTheme.danger,\n            });\n          }\n        }\n      );\n    }\n  };\n\n  componentDidMount = () => {\n    // LOADING APPLICATION SESSION ====================================\n    if (this.props.application_sessions === null) {\n      this.props.GetAllSessionPlans(\n        (status: boolean, msg: string, data?: SessionPlanInterface[]) => {\n          this.setLoading(status);\n          if (!status) {\n            if (msg.length) {\n              this.props.PushPopupAlert({\n                title: msg,\n                theme: PopupAlertTheme.danger,\n              });\n            }\n            if (data && data.length > 0) {\n              this.setDefaultSession(data);\n            }\n          }\n        }\n      );\n    } else if (this.props.application_sessions.length > 0) {\n      this.setDefaultSession(this.props.application_sessions);\n    }\n\n    // LOADING DOCUMENT CATEGORIES ==========================\n    if (!this.props.documentReducer.documentCategory) {\n      this.props.getDocumentCategory();\n      this.setLoading(false);\n    }\n\n    // LOADING DOCUMENT CLARIFICATIONS ==========================\n    if (!this.props.documentReducer.documentSubCategory) {\n      this.props.getDocumentSubCategory();\n      this.setLoading(false);\n    }\n\n    // LOADING DOCUMENT FIELDS ==========================\n    if (!this.props.documentReducer.documentFields) {\n      this.props.getDocumentFields();\n      this.setLoading(false);\n    }\n\n    if (this.props.systemPositions === null) {\n      this.props.getPositions((status: boolean, msg: string) => {\n        this.setLoading(status);\n        console.log({ status: status, msg: msg });\n        if (msg.length) {\n          this.props.PushPopupAlert({\n            title: msg,\n            theme: PopupAlertTheme.danger,\n          });\n        }\n      });\n    } else if (this.state.loading) {\n      this.setLoading(false);\n    }\n\n    if (this.props.claiming.claimReasons === null) {\n      this.props.getClaimReasons((status: boolean, msg: string) => {\n        this.setLoading(status);\n        if (!status) {\n          if (msg.length > 0) {\n            this.props.PushPopupAlert({\n              title: msg,\n              theme: PopupAlertTheme.danger,\n            });\n          }\n        }\n      });\n    }\n\n    if (\n      this.props.courses === null ||\n      (this.props.courses.length === 0 && this.state.loading)\n    ) {\n      this.props.loadCourses(this.setLoading);\n      this.setLoading(false);\n    } else {\n      this.setLoading(false);\n    }\n  };\n\n  displayClaimTitle = (\n    thisClaim: CandidateClaimInterface\n  ): string | JSX.Element => {\n    let result: string = thisClaim.claiming_on_id;\n    if (thisClaim.type_key === PlansTypeKeys.DOCUMENT_VALIDATION) {\n      let thisDocs = thisClaim.user.details.filter(\n        (item) => item.validation_status !== \"waiting\"\n      );\n      result =\n        thisDocs.length > 0\n          ? adminDisplayClaimTitle(\n              this.props.documentReducer,\n              thisDocs,\n              thisClaim\n            )\n          : \"Document not found\";\n    }\n    if (thisClaim.type_key === PlansTypeKeys.APPLICATION) {\n      if (this.props.claiming.allApplications) {\n        let thisApplication = this.props.claiming.allApplications.find(\n          (item) => item._id === thisClaim.claiming_on_id\n        );\n        if (\n          thisApplication &&\n          this.props.claiming.allApplications &&\n          this.props.systemPositions\n        ) {\n          let thisPosition = this.props.systemPositions.find(\n            (item) => item.position_id === thisApplication!.position\n          );\n          if (thisPosition) {\n            result = thisPosition.position_title;\n          } else {\n            result = \"Application not found\";\n          }\n        }\n      }\n    }\n\n    if (\n      thisClaim.type_key === PlansTypeKeys.EXAMINATION &&\n      this.props.courses &&\n      this.props.claiming.allAnswer\n    ) {\n      let thisAnswer = getCourseIdBySheetId(\n        this.props.claiming.allAnswer,\n        thisClaim.claiming_on_id\n      );\n      if (thisAnswer && getCourseById(this.props.courses, thisAnswer.course)) {\n        result =\n          \"Exam of \" +\n          getCourseById(this.props.courses, thisAnswer.course)!.course_name;\n      } else {\n        result = \"Unknown exam\";\n      }\n    }\n\n    return result;\n  };\n\n  onPeriodChange = (period_id: string) => {\n    this.setPeriodChanged(true);\n    this.props.getAllClaims(2, period_id, (status: boolean, msg: string) => {\n      !status && this.setPeriodChanged(false);\n      this.setLoadingData(status);\n      if (status === false && msg.length) {\n        this.props.PushPopupAlert({\n          title: msg,\n          theme: PopupAlertTheme.danger,\n        });\n      }\n    });\n  };\n\n  getLastClaimDate = (claim: CandidateClaimInterface): string => {\n    let result: string = DATE(claim.createdAt);\n    const claimsLength: number = claim.claims.length;\n    result = DATE(claim.claims[claimsLength - 1].createdAt);\n    return result;\n  };\n\n  render() {\n    if (this.props.application_sessions === null) {\n      return (\n        <div className=\"text-center mt-7 font-bold text-4xl text-gray-400 animate-pulse\">\n          Loading Data...\n        </div>\n      );\n    }\n\n    if (this.props.application_sessions.length === 0) {\n      return (\n        <div className=\"bg-yellow-100 rounded flex flex-col items-center justify-center p-6 my-8 text-yellow-900 border border-yellow-900\">\n          <MdInfoOutline className=\"text-6xl md:text-9xl\" />\n          <div className=\"text-center flex flex-col\">\n            <span className=\"text-2xl md:text-4xl font-extrabold\">\n              No active session\n            </span>\n            <span className=\"text-lg\">\n              Please Wait for the system to publish the sessions or contact the\n              administrator\n            </span>\n          </div>\n        </div>\n      );\n    }\n\n    if (this.props.claiming.allClaims === null) {\n      return (\n        <div className=\"text-center mt-7 font-bold text-4xl text-gray-400 animate-pulse\">\n          Loading Data...\n        </div>\n      );\n    }\n\n    console.log(\"=================viewClaim===================\");\n    console.log({\n      allClaims: this.props.claiming.allClaims,\n      viewClaim: this.state.viewClaim,\n      candidateId: this.state.candidateId,\n      claimId: this.state.claimId,\n      // getClaimById: getClaimById(\n      //   this.props.claiming.allClaims,\n      //   this.state.claimId\n      // ),\n      claimTypes: this.props.claiming.claimTypes,\n    });\n    console.log(\"==================viewClaim==================\");\n\n    return (\n      <div>\n        {/* SIDE NAVIGATION */}\n        {!this.state.viewClaim && (\n          <SideNavigation>\n            {/* FILTER SECTION */}\n            <AdminFilterByType loadingClaims={this.state.loadingData} />\n            {/* END FILTER SECTION */}\n          </SideNavigation>\n        )}\n        {/* END SIDE NAVIGATION */}\n\n        {/* 00000000000000000000000000000000000 */}\n\n        {/* CLAIM TITLE ===================================== */}\n        {!this.state.viewClaim && (\n          <ClaimHeaderTitle\n            headerTitle={`${\n              this.props.claiming.selectedClaimType === \"all\"\n                ? \"All\"\n                : this.props.claiming.selectedClaimType ===\n                  PlansTypeKeys.DOCUMENT_VALIDATION\n                ? \"Documents\"\n                : this.props.claiming.selectedClaimType ===\n                  PlansTypeKeys.APPLICATION\n                ? \"Applications\"\n                : this.props.claiming.selectedClaimType ===\n                  PlansTypeKeys.EXAMINATION\n                ? \"Exam\"\n                : this.props.claiming.selectedClaimType ===\n                  PlansTypeKeys.MARKS_PUBLICATION\n                ? \"Marks publication\"\n                : this.props.claiming.selectedClaimType ===\n                  PlansTypeKeys.PLACEMENT_TRANSFER\n                ? \"Placements\"\n                : \"\"\n            } Claiming`}\n            loading={this.state.loadingData}\n            loadingSession={this.state.loading}\n            thisPeriod={this.state.thisPeriod}\n            setThisPeriod={this.setThisPeriod}\n            setLoadingSession={this.setLoadingData}\n            application_sessions={this.props.application_sessions}\n            onPeriodChange={this.onPeriodChange}\n            periodChanged={this.state.periodChanged}\n          />\n        )}\n        {/* END CLAIM TITLE ===================================== */}\n\n        {/* 00000000000000000000000000000000000 */}\n\n        {/* CLAIM CONTENT LIST ===================================== */}\n        {!this.state.viewClaim && (\n          <section className=\"bg-white w-full p-1\">\n            {/* FILTER FORM =================================== */}\n            <section className=\"flex flex-col-reverse sm:flex-row items-center gap-2 w-full my-2\">\n              <div className=\"w-full\">\n                <input\n                  onChange={(e: React.ChangeEvent<HTMLInputElement>) =>\n                    this.setSearchClaim(e.target.value)\n                  }\n                  type=\"text\"\n                  className=\"input-white h-10 text-sm border-2 border-gray-400 focus:border-gray-500 w-full\"\n                  placeholder={`Search claim by title or type`}\n                  value={this.state.searchClaim}\n                  disabled={\n                    filterClaimsByClaimType(\n                      this.props.claiming.allClaims,\n                      this.props.claiming.selectedClaimType\n                    ).length > 0\n                      ? false\n                      : true\n                  }\n                />\n              </div>\n            </section>\n            {/* END FILTER FORM =================================== */}\n            <div className=\"w-full overflow-x-auto\">\n              <table className=\"w-full shadow\" id=\"report_content\">\n                <thead className=\"bg-white border-b-2 border-gray-300 text-gray-600 font-bold text-sm\">\n                  <tr>\n                    <td className=\"px-2 py-2\">#</td>\n                    <td className=\"px-2 py-2\">Applicant names</td>\n                    <td className=\"px-2 py-2\">Claim title</td>\n                    <td className=\"px-2 py-2\">Claim date</td>\n                    {this.props.claiming.selectedClaimType === \"all\" && (\n                      <td className=\"px-2 py-2\">Claim type</td>\n                    )}\n                    <td className=\"px-2 py-2\">Claim level</td>\n                    <td className=\"px-2 py-2\">Claim status</td>\n                    <td className=\"px-2 py-2\"></td>\n                  </tr>\n                </thead>\n                <tbody>\n                  {!this.props.claiming.allClaims ||\n                  !this.props.claiming.claimTypes ||\n                  !this.props.systemPositions ||\n                  this.state.loadingData ? (\n                    <TableLoading\n                      cols={\n                        this.props.claiming.selectedClaimType === \"all\" ? 8 : 7\n                      }\n                    />\n                  ) : search(\n                      filterClaimsByClaimType(\n                        this.props.claiming.allClaims,\n                        this.props.claiming.selectedClaimType\n                      ),\n                      this.state.searchClaim\n                    ).length <= 0 ? (\n                    <tr\n                      className=\"border-b border-gray-200 group hover:bg-gray-50 cursor-pointer\"\n                      key={Math.random()}\n                    >\n                      <td className=\"px-3 py-1\" colSpan={8}>\n                        <NoResult\n                          theme={NoResultThemes.Light}\n                          value={\"No claim found!\"}\n                        />\n                      </td>\n                    </tr>\n                  ) : (\n                    search(\n                      filterClaimsByClaimType(\n                        this.props.claiming.allClaims,\n                        this.props.claiming.selectedClaimType\n                      ),\n                      this.state.searchClaim\n                    ).map((claim: CandidateClaimInterface, index) => (\n                      <tr\n                        className=\"border-b border-gray-200 group hover:bg-gray-50 cursor-pointer\"\n                        key={index + claim._id}\n                        onClick={() => {\n                          this.setViewClaim(true);\n                          this.setClaimId(claim._id);\n                          this.setCandidateId(claim.user.user_id);\n                          this.setClaimType(\n                            whichClaimType(claim)\n                              ? whichClaimType(claim)!\n                              : null\n                          );\n                          this.loadsController(\n                            claim.claiming_on_id,\n                            claim.type_key\n                          );\n                        }}\n                      >\n                        <td className=\"px-3 py-1\">{index + 1}</td>\n                        <td className=\"px-3 py-1 whitespace-nowrap\">\n                          {claim.user.user_info.fname +\n                            \" \" +\n                            claim.user.user_info.lname}\n                        </td>\n                        <td className=\"px-3 py-1 whitespace-nowrap\">\n                          {claim.title}\n                        </td>\n                        <td className=\"px-3 py-1 whitespace-nowrap\">\n                          {this.getLastClaimDate(claim)}\n                        </td>\n                        {this.props.claiming.selectedClaimType === \"all\" && (\n                          <td className=\"px-3 py-1 whitespace-nowrap\">\n                            {whichClaimType(claim)\n                              ? capitalizeFirstLetter(whichClaimType(claim)!)\n                              : \"-\"}\n                          </td>\n                        )}\n                        <td className=\"px-3 py-1 whitespace-nowrap italic\">\n                          Level {claim.claim_level}\n                        </td>\n                        <td className=\"px-3 py-1 whitespace-nowrap\">\n                          <span\n                            className={`inline-block rounded-full duration-300 text-xs font-semibold px-3 py-1 ${\n                              whichClaimStatus(claim).classes\n                            }`}\n                          >\n                            {whichClaimStatus(claim).status}\n                          </span>\n                        </td>\n                        <td className=\"px-3 py-1 text-center whitespace-nowrap\">\n                          <button className=\"btn bg-blue-500 text-white group-hover:bg-blue-600\">\n                            View\n                          </button>\n                        </td>\n                      </tr>\n                    ))\n                  )}\n                </tbody>\n              </table>\n            </div>\n          </section>\n        )}\n        {/* END CLAIM CONTENT LIST ===================================== */}\n\n        {/* 00000000000000000000000000000000000 */}\n\n        {/* view claim */}\n        {this.state.viewClaim &&\n          this.state.candidateId &&\n          this.props.claiming.allClaims &&\n          this.state.claimId &&\n          getClaimById(this.props.claiming.allClaims, this.state.claimId) &&\n          this.props.claiming.claimTypes && (\n            <section className=\"bg-white w-full my-4\">\n              {/* VIEW CLAIM HEADER =============================== */}\n              <section className=\"flex items-center gap-2 py-2 border-b\">\n                <button\n                  className={`ml-3 bg-gray-50 hover:bg-blue-100 rounded-full px-1 py-1 focus:outline-none ${\n                    this.state.loadingRequest\n                      ? \"cursor-not-allowed\"\n                      : \"cursor-pointer\"\n                  } animate__animated animate__fadeIn`}\n                  disabled={this.state.loadingRequest}\n                  onClick={() => {\n                    this.setViewClaim(false);\n                    this.setViewImage(true);\n                    this.setLoadingRequest(false);\n                    this.setActionTaken(null);\n                    this.setResponseMsg(\"\");\n                    this.setFormError(null);\n                  }}\n                >\n                  <MdArrowBack className=\"w-7 h-7\" />\n                </button>\n                <div className={`text-gray-600 font-extrabold text-2xl px-2`}>\n                  Viewing claim\n                </div>\n              </section>\n              {/* END VIEW CLAIM HEADER =============================== */}\n\n              {this.state.loading && (\n                <div className=\"my-4\">\n                  <Loading />\n                </div>\n              )}\n\n              {!this.state.loading && (\n                <section className=\"bg-gray-200\">\n                  {/* FOR DOCUMENT ========================== */}\n                  {this.state.claimType &&\n                    this.state.claimType.toLocaleLowerCase() ===\n                      ClaimTypesInterface.DOCUMENT.toLocaleLowerCase() && (\n                      <div>\n                        {getClaimById(\n                          this.props.claiming.allClaims!,\n                          this.state.claimId!\n                        )!.user.details.find(\n                          (item) =>\n                            item.doc_id ===\n                            getClaimById(\n                              this.props.claiming.allClaims!,\n                              this.state.claimId!\n                            )!.claiming_on_id\n                        ) ? (\n                          <AdminClaimDocView\n                            thisDoc={\n                              getClaimById(\n                                this.props.claiming.allClaims!,\n                                this.state.claimId!\n                              )!.user.details.find(\n                                (item) =>\n                                  item.doc_id ===\n                                  getClaimById(\n                                    this.props.claiming.allClaims!,\n                                    this.state.claimId!\n                                  )!.claiming_on_id\n                              )!\n                            }\n                            documentCategories={this.props.documentReducer}\n                            thisClaim={\n                              getClaimById(\n                                this.props.claiming.allClaims,\n                                this.state.claimId\n                              )!\n                            }\n                            claimTypes={this.props.claiming.claimTypes}\n                            viewImage={this.state.viewImage}\n                            setViewImage={this.setViewImage}\n                            loadingRequest={this.state.loadingRequest}\n                            setLoadingRequest={this.setLoadingRequest}\n                            actionTaken={this.state.actionTaken}\n                            setActionTaken={this.setActionTaken}\n                            responseMsg={this.state.responseMsg}\n                            setResponseMsg={this.setResponseMsg}\n                            formError={this.state.formError}\n                            setFormError={this.setFormError}\n                            candidateId={this.state.candidateId}\n                            claimReasons={this.props.claiming.claimReasons}\n                          />\n                        ) : (\n                          <NoResult\n                            theme={NoResultThemes.Dark}\n                            value={\"Document not found\"}\n                          />\n                        )}\n                      </div>\n                    )}\n\n                  {/* FOR APPLICATION ========================== */}\n                  {this.state.claimType &&\n                    this.state.claimType.toLocaleLowerCase() ===\n                      ClaimTypesInterface.APPLICATION.toLocaleLowerCase() && (\n                      <div>\n                        {getApplicationById(\n                          this.props.claiming.allApplications,\n                          this.props.systemPositions,\n                          getClaimById(\n                            this.props.claiming.allClaims,\n                            this.state.claimId\n                          )!.claiming_on_id\n                        ) ? (\n                          this.props.systemPositions && (\n                            <AdminClaimAppView\n                              thisApplication={\n                                getApplicationById(\n                                  this.props.claiming.allApplications,\n                                  this.props.systemPositions,\n                                  getClaimById(\n                                    this.props.claiming.allClaims,\n                                    this.state.claimId\n                                  )!.claiming_on_id\n                                )!.application\n                              }\n                              thisPosition={\n                                getApplicationById(\n                                  this.props.claiming.allApplications,\n                                  this.props.systemPositions,\n                                  getClaimById(\n                                    this.props.claiming.allClaims,\n                                    this.state.claimId\n                                  )!.claiming_on_id\n                                )!.position\n                              }\n                              documentCategories={this.props.documentReducer}\n                              thisClaim={\n                                getClaimById(\n                                  this.props.claiming.allClaims,\n                                  this.state.claimId\n                                )!\n                              }\n                              claimTypes={this.props.claiming.claimTypes}\n                              systemPositions={this.props.systemPositions}\n                              claimReasons={this.props.claiming.claimReasons}\n                            />\n                          )\n                        ) : (\n                          <NoResult\n                            theme={NoResultThemes.Dark}\n                            value={\"Application not found\"}\n                          />\n                        )}\n                      </div>\n                    )}\n\n                  {/* FOR EXAMINATION ========================== */}\n                  {this.state.claimType &&\n                    this.state.claimType.toLocaleLowerCase() ===\n                      ClaimTypesInterface.EXAMINATION.toLocaleLowerCase() && (\n                      <div>\n                        {this.props.claiming.allAnswer &&\n                        this.props.courses &&\n                        getCourseIdBySheetId(\n                          this.props.claiming.allAnswer,\n                          getClaimById(\n                            this.props.claiming.allClaims,\n                            this.state.claimId\n                          )!.claiming_on_id\n                        ) &&\n                        getCourseById(\n                          this.props.courses,\n                          getCourseIdBySheetId(\n                            this.props.claiming.allAnswer,\n                            getClaimById(\n                              this.props.claiming.allClaims,\n                              this.state.claimId\n                            )!.claiming_on_id\n                          )!.course\n                        ) ? (\n                          <AdminClaimExamView\n                            thisExamSheet={\n                              getCourseIdBySheetId(\n                                this.props.claiming.allAnswer,\n                                getClaimById(\n                                  this.props.claiming.allClaims,\n                                  this.state.claimId\n                                )!.claiming_on_id\n                              )!\n                            }\n                            thisExam={\n                              getCourseById(\n                                this.props.courses,\n                                getCourseIdBySheetId(\n                                  this.props.claiming.allAnswer,\n                                  getClaimById(\n                                    this.props.claiming.allClaims,\n                                    this.state.claimId\n                                  )!.claiming_on_id\n                                )!.course\n                              )!\n                            }\n                            thisClaim={\n                              getClaimById(\n                                this.props.claiming.allClaims,\n                                this.state.claimId\n                              )!\n                            }\n                            claimTypes={this.props.claiming.claimTypes}\n                            claimReasons={this.props.claiming.claimReasons}\n                          />\n                        ) : (\n                          <NoResult\n                            theme={NoResultThemes.Dark}\n                            value={\"Exam not found\"}\n                          />\n                        )}\n                      </div>\n                    )}\n                </section>\n              )}\n            </section>\n          )}\n        {/* end view claim */}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = ({\n  auth,\n  system_settings,\n  sessionPlan,\n  claiming,\n  document,\n  course,\n}: StoreState): {\n  auth: Auth;\n  application_sessions: SessionPlanInterface[] | null;\n  systemPositions: PositionAPI[] | null;\n  claiming: ClaimingReducerType;\n  documentReducer: DocumentReducerInterface;\n  courses: course[] | null;\n} => {\n  return {\n    auth: auth,\n    application_sessions: sessionPlan.allSessionPlans,\n    systemPositions: system_settings.systemPositions,\n    claiming,\n    documentReducer: document,\n    courses: course.courses,\n  };\n};\n\nexport const AdminClaim = connect(mapStateToProps, {\n  getAllClaims,\n  loadCourses,\n  getAllAnswers,\n  getClaimReasons,\n  getAllApplications,\n  GetAllSessionPlans,\n  getDocumentCategory,\n  getDocumentSubCategory,\n  getDocumentFields,\n  getPositions,\n  PushPopupAlert,\n})(Index);\n"],"sourceRoot":""}
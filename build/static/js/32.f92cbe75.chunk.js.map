{"version":3,"sources":["containers/Admin/Applications/ApplicationDetails.tsx","containers/Admin/Applications/Applications.tsx","components/Navigation/SideNavigation.tsx","utils/ExportToExcel.tsx","utils/mineduc.png","components/DownloadPDF/rest.tsx","containers/SessionSettings/ChooseSession.tsx","assets/profile.png"],"names":["tabs","reportContentKeyInterface","ApplicationDetails","props","tabStatusClass","status","state","loading","tab","profile","className","onClick","setState","this","position","src","noImage","alt","selectedApplication","fname","lname","n_id","sex","phone_number","email","district","application_session","application_session_name","period","createdAt","ApplicationStatesDescription","find","itm","key","application_status","caption","application_history","map","item","i","date","comment","position_title","description","courses","course_name","course_code","Component","React","memo","ignoreThisApplicationStatus","ApplicationStates","Failed","Pass","Rejected","defaultReportContent","names","title","national_id","gender","phone","education_category","decision","_Applications","setLoadingState","loadAllApplications","callback","a","axios","get","API","APPLICATION","position_id","_id","res","applicationListData","data","console","log","error","errorToText","FD_GetSessions","institution_id","FC_GetAllSessionByInstitution","msg","length","selected_period","active_period","is_active","selectPeriod","defaultSelectedPeriod","componentDidMount","FC_HasInstitute","auth","education_institution_id","schoolLevels","education_categories","loadEducationCategories","selectedEducationCategory","education_institute_id","sessionPlan","allSessionPlans","positions","positions_list","loadAllPositions","selected_position","selectPosition","errorMessage","isEmptyOrSpaces","PushPopupAlert","theme","PopupAlertTheme","warning","reportTitle","session_plan_name","AdminApplicationStatuses","application","output","count","includes","push","filter","filteredApplications","applications","Status","appl","setDownloading","downloading","updateApplicationToPrint","arrayNew","n","Object","prototype","hasOwnProperty","call","element","dataArray","application_id","education_category_title","application_session_id","reportContent","applicationsToPrint","updateReportContent","index","findIndex","newArray","selectAll","generateThisPDF","document","querySelectorAll","table","getElementById","reportSettings","doneBy","user","subjectTitle","subject","footer","institute","orientation","generatePDF","isChangeAllowed","resetReportContent","currentState","setSort","thisProperty","sortProperty","sortOrder","isSorted","selectedApplicationStatus","applicationDetailsModal","generateReportModal","searchInput","searchPositionInput","formError","prevProps","prevState","Fragment","SideNavigation","Loading","active","disabled","reportType","onChange","e","target","value","type","placeholder","id","colSpan","sortThisArray","searchData","selected_application","capitalizeFirstLetter","DATE","Modal","backDrop","Themes","default","close","backDropClose","widthSizeClass","ModalSize","extraLarge","displayClose","padding","ChooseSession","allSession","setSelectSession","chooseAll","currentSelected","LoadingV2","LoadingType","dark","to","setSelectedPosition","style","fontStyle","school_level_id","school_level_name","medium","ExportToExcel","fileData","fileName","btnName","Applications","connect","_SideNavigation","PageHasSubNav","componentWillUnmount","isAuthenticated","navActive","system","navigation","children","NavToogle","MainItem","icon","MdBrightness1","IconDefined","showIcon","apiData","wb","Sheets","XLSX","json_to_sheet","SheetNames","excelBuffer","bookType","Blob","FileSaver","exportToCSV","require","addFooters","doc","pageCount","internal","getNumberOfPages","setFont","setFontSize","setPage","text","String","pageSize","width","align","callBack","lMargin","jsPDF","setTextColor","addImage","Logo","undefined","getWidth","lines","splitTextToSize","pdfInMM","y","getTextWidth","addPage","autoTable","html","startY","margin","horizontal","cellPadding","rowHeight","bodyStyles","valign","columnStyles","cellWidth","tableWidth","finalY","lastAutoTable","Date","toString","save","returnPromise","then","isPlansActive","plans","today","activePlans","plan","startDate","start_date","endDate","end_date","getTime","type_status","SessionPlanTypeStatus","OPEN","searched","useState","selectedPlan","setSelectedPlan","search","setSearch","type_key","type_title"],"mappings":"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","file":"static/js/32.f92cbe75.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport { FaRegUserCircle } from \"react-icons/fa\";\nimport { GrStatusInfo } from \"react-icons/gr\";\nimport {\n  AdminApplicationsList,\n  ApplicationStatesDescription,\n} from \"../../../interfaces/application\";\nimport noImage from \"../../../assets/profile.png\";\n\nenum tabs {\n  profile = \"profile\",\n  position = \"position\",\n}\ninterface ApplicationDetailsProps {\n  selectedApplication: AdminApplicationsList;\n}\n\ninterface ApplicationDetailsState {\n  loading: boolean;\n  tab: tabs;\n}\n\nclass ApplicationDetails extends Component<\n  ApplicationDetailsProps,\n  ApplicationDetailsState\n> {\n  constructor(props: ApplicationDetailsProps) {\n    super(props);\n\n    this.state = {\n      loading: false,\n      tab: tabs.profile,\n    };\n  }\n  tabStatusClass = (status: boolean) => {\n    return status === true\n      ? \"col-span-6 bg-white hover:bg-blue-100 py-4 px-3 cursor-pointer text-lg border-b-4 border-blue-600 text-blue-600 font-bold flex flex-row items-center justify-start bg-blue-50 gap-3 animate__animated animate__pulse\"\n      : \"col-span-6 bg-white hover:bg-blue-50 py-4 px-3 cursor-pointer text-lg border-b-4 border-white hover:border-blue-200 text-gray-600 hover:text-blue-700 flex flex-row items-center justify-start gap-3\";\n  };\n  render() {\n    return (\n      <div className=\"px-2 py-2 border-t\">\n        {/* Tabs */}\n        <div className=\"rounded grid md:grid-cols-12\">\n          <div\n            onClick={() => this.setState({ tab: tabs.profile })}\n            className={`${\n              this.state.tab === tabs.profile\n                ? this.tabStatusClass(true)\n                : this.tabStatusClass(false)\n            }`}\n          >\n            <FaRegUserCircle className=\"text-3xl\" />\n            Applicant profile\n          </div>\n          <div\n            onClick={() => this.setState({ tab: tabs.position })}\n            className={`${\n              this.state.tab === tabs.position\n                ? this.tabStatusClass(true)\n                : this.tabStatusClass(false)\n            }`}\n          >\n            <GrStatusInfo className=\"text-3xl\" />\n            Position requirements\n          </div>\n        </div>\n        {/* Tab contents */}\n        <div className=\"border rounded px-4 py-4 mt-3\">\n          {this.state.tab === tabs.profile ? (\n            <div className=\"grid md:grid-cols-12\">\n              <div className=\"col-span-6\">\n                <div className=\"text-3xl text-blue-600 font-bold mb-6\">\n                  General information\n                </div>\n                <div className=\"\">\n                  <div className=\"px-2 py-2\">\n                    <img\n                      src={noImage}\n                      alt=\"\"\n                      className=\"h-28 w-28 rounded-full mb-2\"\n                    />\n                  </div>\n                </div>\n                <div className=\"flex flex-row item-center justify-left gap-3 mb-2\">\n                  <span className=\"text-gray-500 italic\">First name: </span>\n                  <span className=\"font-bold\">\n                    {this.props.selectedApplication.fname}\n                  </span>\n                </div>\n                <div className=\"flex flex-row item-center justify-left gap-3 mb-2\">\n                  <span className=\"text-gray-500 italic\">Last name: </span>\n                  <span className=\"font-bold\">\n                    {this.props.selectedApplication.lname}\n                  </span>\n                </div>\n                <div className=\"flex flex-row item-center justify-left gap-3 mb-2\">\n                  <span className=\"text-gray-500 italic\">National ID: </span>\n                  <span className=\"font-bold\">\n                    {this.props.selectedApplication.n_id}\n                  </span>\n                </div>\n                <div className=\"flex flex-row item-center justify-left gap-3 mb-2\">\n                  <span className=\"text-gray-500 italic\">Gender: </span>\n                  <span className=\"font-bold\">\n                    {this.props.selectedApplication.sex}\n                  </span>\n                </div>\n                <div className=\"flex flex-row item-center justify-left gap-3 mb-2\">\n                  <span className=\"text-gray-500 italic\">Phone number: </span>\n                  <span className=\"font-bold\">\n                    {this.props.selectedApplication.phone_number}\n                  </span>\n                </div>\n                <div className=\"flex flex-row item-center justify-left gap-3 mb-2\">\n                  <span className=\"text-gray-500 italic\">Email: </span>\n                  <span className=\"font-bold\">\n                    {this.props.selectedApplication.email}\n                  </span>\n                </div>\n                <div className=\"flex flex-row item-center justify-left gap-3 mb-2\">\n                  <span className=\"text-gray-500 italic\">District: </span>\n                  <span className=\"font-bold\">\n                    {this.props.selectedApplication.district}\n                  </span>\n                </div>\n              </div>\n            </div>\n          ) : (\n            <div>\n              <div className=\"text-2xl text-blue-600 font-bold mb-3\">\n                Application details\n              </div>\n              <div className=\"border px-3 py-3 rounded mb-6\">\n                <div className=\"flex flex-row item-center justify-left gap-3 mb-2\">\n                  <span className=\"text-gray-500 italic\">\n                    Application period:{\" \"}\n                  </span>\n                  <span className=\"font-bold\">\n                    {\n                      this.props.selectedApplication.application_session\n                        .application_session_name\n                    }{\" \"}\n                    -{\" \"}\n                    {this.props.selectedApplication.application_session.period}\n                  </span>\n                </div>\n                <div className=\"flex flex-row item-center justify-left gap-3 mb-2\">\n                  <span className=\"text-gray-500 italic\">\n                    Application date:{\" \"}\n                  </span>\n                  <span className=\"font-bold\">\n                    {\n                      this.props.selectedApplication.application_session\n                        .createdAt\n                    }\n                  </span>\n                </div>\n                <div className=\"flex flex-row item-center justify-left gap-3 mb-2\">\n                  <span className=\"text-gray-500 italic\">\n                    Application status:{\" \"}\n                  </span>\n                  <span className=\"font-bold\">\n                    {\n                      ApplicationStatesDescription.find(\n                        (itm) =>\n                          itm.key ===\n                          this.props.selectedApplication.application_status\n                      )?.caption\n                    }\n                  </span>\n                </div>\n                <div className=\"flex flex-row item-center justify-left gap-3 mb-2\">\n                  <span className=\"text-gray-500 italic\">\n                    Application history:{\" \"}\n                  </span>\n                  <span className=\"font-bold\">\n                    <ol className=\"text-gray-500 text-sm\">\n                      {this.props.selectedApplication.application_history.map(\n                        (item, i) => (\n                          <li key={i + 1} className=\"\">\n                            {i + 1}) {item.date} ({item.comment})\n                          </li>\n                        )\n                      )}\n                    </ol>\n                  </span>\n                </div>\n              </div>\n              <div className=\"text-2xl text-blue-600 font-bold mb-3\">\n                Position details\n              </div>\n              <div className=\"border px-3 py-3 rounded\">\n                <div className=\"flex flex-row item-center justify-left gap-3 mb-2\">\n                  <span className=\"text-gray-500 italic\">Position name: </span>\n                  <span className=\"font-bold\">\n                    {this.props.selectedApplication.position.position_title}\n                  </span>\n                </div>\n                <div className=\"flex flex-row item-center justify-left gap-3 mb-2\">\n                  <span className=\"text-gray-500 italic\">\n                    Position description:{\" \"}\n                  </span>\n                  <span className=\"font-bold\">\n                    {this.props.selectedApplication.position.description}\n                  </span>\n                </div>\n                <div className=\"flex flex-row item-center justify-left gap-3 mb-2\">\n                  <span className=\"text-gray-500 italic\">Position exams: </span>\n                  <span className=\"font-bold\">\n                    <ol>\n                      {this.props.selectedApplication.position.courses.map(\n                        (item, i) => (\n                          <li key={i + 1}>\n                            ({i + 1}) Course name: {item.course_name} -{\" \"}\n                            {item.course_code}\n                          </li>\n                        )\n                      )}\n                    </ol>\n                  </span>\n                </div>\n              </div>\n            </div>\n          )}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default React.memo(ApplicationDetails);\n","import axios from \"axios\";\nimport React, { Component, Fragment } from \"react\";\nimport { BiExport, BiFilterAlt, BiSort } from \"react-icons/bi\";\nimport { FiEdit } from \"react-icons/fi\";\nimport { ImFilesEmpty } from \"react-icons/im\";\nimport { IoIosBriefcase } from \"react-icons/io\";\nimport { IoFilter } from \"react-icons/io5\";\nimport {\n  MdCheckBox,\n  MdCheckBoxOutlineBlank,\n  MdHistory,\n  MdRadioButtonChecked,\n  MdRadioButtonUnchecked,\n  MdSearch,\n} from \"react-icons/md\";\nimport { connect } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport {\n  Auth,\n  schoolLevelsStoreInterface,\n  loadAllPositions,\n  setSelectedPosition,\n  loadEducationCategories,\n  PushPopupAlert,\n  positionsStoreInterface,\n} from \"../../../actions\";\nimport { FC_GetAllSessionByInstitution } from \"../../../actions/session\";\nimport { PopupAlertData } from \"../../../components/Alert/Popup\";\nimport {\n  generatePDF,\n  reportSettingsInterface,\n} from \"../../../components/DownloadPDF/rest\";\nimport Loading from \"../../../components/Loading/Loading\";\nimport LoadingV2, { LoadingType } from \"../../../components/Loading/LoadingV2\";\nimport Modal, { ModalSize, Themes } from \"../../../components/Modal/Modal\";\nimport {\n  MainItem,\n  SideNavigation,\n} from \"../../../components/Navigation/SideNavigation\";\nimport {\n  ApplicationStates,\n  AdminApplicationsList,\n  ApplicationStatesDescription,\n} from \"../../../interfaces/application\";\nimport {\n  education_category,\n  PositionAPI,\n  SessionPlanInterface,\n} from \"../../../interfaces/index\";\nimport { PopupAlertTheme } from \"../../../interfaces/popupAlert\";\nimport { StoreState } from \"../../../reducers\";\nimport { SessionPlanReducerInterface } from \"../../../reducers/session\";\nimport {\n  capitalizeFirstLetter,\n  isEmptyOrSpaces,\n} from \"../../../shared/dataTest\";\nimport { AdminApplicationsToPrintInterface } from \"../../../shared/interfaces\";\nimport { API } from \"../../../utils/api\";\nimport { errorToText } from \"../../../utils/errors\";\nimport ExportToExcel from \"../../../utils/ExportToExcel\";\nimport { DATE, FC_HasInstitute, sortThisArray } from \"../../../utils/functions\";\nimport searchData from \"../../../utils/search\";\nimport ChooseSession from \"../../SessionSettings/ChooseSession\";\nimport ApplicationDetails from \"./ApplicationDetails\";\n\nexport const ignoreThisApplicationStatus: ApplicationStates[] = [\n  ApplicationStates.Failed,\n  ApplicationStates.Pass,\n  ApplicationStates.Rejected,\n];\n\nexport enum reportContentKeyInterface {\n  \"names\" = \"names\",\n  \"gender\" = \"gender\",\n  \"national_id\" = \"national_id\",\n  \"email\" = \"email\",\n  \"phone\" = \"phone\",\n  \"district\" = \"district\",\n  \"application_session\" = \"application_session\",\n  \"education_category\" = \"education_category\",\n  \"date\" = \"date\",\n  \"decision\" = \"decision\",\n  \"position\" = \"position\",\n}\nexport interface reportContentInterface {\n  key: reportContentKeyInterface;\n  title: string;\n  status: boolean;\n}\n\nconst defaultReportContent: reportContentInterface[] = [\n  {\n    key: reportContentKeyInterface.names,\n    title: \"Applicant Names\",\n    status: true,\n  },\n  {\n    key: reportContentKeyInterface.national_id,\n    title: \"National ID\",\n    status: true,\n  },\n  { key: reportContentKeyInterface.gender, title: \"Gender\", status: true },\n  { key: reportContentKeyInterface.phone, title: \"Phone\", status: true },\n  {\n    key: reportContentKeyInterface.application_session,\n    title: \"Application Period\",\n    status: true,\n  },\n  {\n    key: reportContentKeyInterface.education_category,\n    title: \"Education Institute\",\n    status: true,\n  },\n  {\n    key: reportContentKeyInterface.date,\n    title: \"Application Date\",\n    status: true,\n  },\n  { key: reportContentKeyInterface.decision, title: \"Decision\", status: true },\n  {\n    key: reportContentKeyInterface.position,\n    title: \"Position Title\",\n    status: true,\n  },\n];\n\ninterface loadAllApplicationsProps {\n  auth: Auth;\n  FC_GetAllSessionByInstitution: Function;\n  loadAllPositions: (callback: (loading: boolean) => void) => void;\n  setSelectedPosition: (position: PositionAPI) => void;\n  positions: positionsStoreInterface;\n  sessionPlan: SessionPlanReducerInterface;\n  schoolLevels: schoolLevelsStoreInterface;\n  loadEducationCategories: (callback: (loading: boolean) => void) => void;\n  PushPopupAlert: (alert: PopupAlertData) => void;\n}\n\ninterface loadAllApplicationsState {\n  loading: boolean;\n  selectedEducationCategory: education_category | \"all\";\n  defaultSelectedPeriod: SessionPlanInterface | null;\n  applicationListData: AdminApplicationsList[] | null;\n  selectedApplicationStatus: ApplicationStates | \"ALL\" | null;\n  selected_period: SessionPlanInterface | null;\n  selectPosition: boolean;\n  selectPeriod: boolean;\n  applicationDetailsModal: {\n    selected_application: AdminApplicationsList;\n    status: boolean;\n  } | null;\n  generateReportModal: {\n    reportType: \"EXCEL\" | \"PDF\";\n    status: boolean;\n  } | null;\n  searchInput: string | \"\";\n  searchPositionInput: string | \"\";\n  applicationsToPrint: AdminApplicationsToPrintInterface[] | null;\n  reportTitle: string;\n  reportContent: reportContentInterface[];\n  selectAll: boolean;\n  formError: {\n    element: string;\n    msg: string;\n  } | null;\n  sortProperty: string;\n  isSorted: boolean;\n  sortOrder: \"ASC\" | \"DESC\";\n  downloading: boolean;\n}\nclass _Applications extends Component<\n  loadAllApplicationsProps,\n  loadAllApplicationsState\n> {\n  constructor(props: loadAllApplicationsProps) {\n    super(props);\n\n    this.state = {\n      loading: false,\n      defaultSelectedPeriod: null,\n      selectedEducationCategory: \"all\",\n      selectedApplicationStatus: \"ALL\",\n      applicationListData: null,\n      selectPosition: false,\n      selectPeriod: false,\n      applicationDetailsModal: null,\n      generateReportModal: null,\n      searchInput: \"\",\n      searchPositionInput: \"\",\n      reportTitle: \"Application Report\",\n      selectAll: true,\n      applicationsToPrint: null,\n      formError: null,\n      reportContent: defaultReportContent,\n      sortProperty: \"\",\n      isSorted: false,\n      sortOrder: \"ASC\",\n      selected_period: null,\n      downloading: false,\n    };\n  }\n\n  setLoadingState = (state: boolean) => {\n    this.setState({ loading: state });\n  };\n\n  loadAllApplications = async (\n    position: PositionAPI | null,\n    period: SessionPlanInterface | null,\n    callback: (loading: boolean, msg: string) => void\n  ) => {\n    if (position !== null && period !== null) {\n      callback(true, \"\");\n      try {\n        const res = await axios.get<AdminApplicationsList[]>(\n          `${API.APPLICATION}/apply/${position.position_id}/${period._id}`\n        );\n        this.setState({ applicationListData: res.data });\n        console.log(\"applicationListData: \", res.data);\n        callback(false, \"\");\n      } catch (error: any) {\n        console.error({ error: errorToText(error) });\n        callback(false, errorToText(error));\n      }\n    }\n  };\n\n  FD_GetSessions = (institution_id: string) => {\n    // this.setSelectedPeriod(null);\n    this.props.FC_GetAllSessionByInstitution(\n      institution_id,\n      (status: boolean, msg: string, data?: SessionPlanInterface[]) => {\n        this.setLoadingState(status);\n        if (!status) {\n          if (data && data.length > 0) {\n            if (this.state.selected_period === null) {\n              let active_period = data.find((item) => item.is_active);\n              if (active_period) {\n                this.setState({ selected_period: active_period });\n                this.setState({\n                  selectPeriod: false,\n                  defaultSelectedPeriod: active_period,\n                });\n              } else if (data.length > 0) {\n                active_period = data[data.length - 1];\n                this.setState({ selected_period: active_period });\n                this.setState({\n                  selectPeriod: false,\n                  defaultSelectedPeriod: active_period,\n                });\n              } else {\n                this.setState({ selectPeriod: true });\n              }\n            }\n          }\n        }\n      }\n    );\n  };\n\n  componentDidMount = () => {\n    if (FC_HasInstitute(this.props.auth.education_institution_id)) {\n      this.FD_GetSessions(this.props.auth.education_institution_id!);\n    }\n\n    if (\n      this.props.schoolLevels.education_categories === null ||\n      this.props.schoolLevels.education_categories.length === 0\n    ) {\n      this.props.loadEducationCategories(\n        (status: boolean, data?: education_category[]) => {\n          this.setLoadingState(status);\n          if (!status && data && data.length > 0) {\n            this.setState({ selectedEducationCategory: data[0] });\n            if (\n              FC_HasInstitute(this.props.auth.education_institution_id) ===\n              false\n            ) {\n              this.FD_GetSessions(data[0].education_institute_id);\n            }\n          }\n        }\n      );\n    }\n\n    // if (\n    //   this.props.sessionPlan.allSessionPlans === null ||\n    //   this.props.sessionPlan.allSessionPlans.length <= 0\n    // ) {\n    //   this.props.FC_GetAllSessionByInstitution(\n    //     (status: boolean, msg: string, data?: SessionPlanInterface[]) => {\n    //       this.setLoadingState(status);\n    //       if (!status && msg.length > 0) {\n    //         this.props.PushPopupAlert({\n    //           title: msg,\n    //           theme: PopupAlertTheme.danger,\n    //         });\n    //       }\n    //       if (data && data.length > 0) {\n    //         if (this.state.selected_period === null) {\n    //           let active_period = data.find((item) => item.is_active);\n    //           if (active_period) {\n    //             this.setState({ selected_period: active_period });\n    //             this.setState({\n    //               selectPeriod: false,\n    //               defaultSelectedPeriod: active_period,\n    //             });\n    //           } else if (data.length > 0) {\n    //             active_period = data[data.length - 1];\n    //             this.setState({ selected_period: active_period });\n    //             this.setState({\n    //               selectPeriod: false,\n    //               defaultSelectedPeriod: active_period,\n    //             });\n    //           } else {\n    //             this.setState({ selectPeriod: true });\n    //           }\n    //         }\n    //       }\n    //     }\n    //   );\n    // }\n\n    if (\n      this.state.selected_period === null &&\n      this.props.sessionPlan.allSessionPlans &&\n      this.props.sessionPlan.allSessionPlans.length > 0\n    ) {\n      let active_period = this.props.sessionPlan.allSessionPlans.find(\n        (item) => item.is_active\n      );\n      if (active_period) {\n        this.setState({\n          selected_period: active_period,\n          selectPeriod: false,\n          defaultSelectedPeriod: active_period,\n        });\n      } else if (this.props.sessionPlan.allSessionPlans.length > 0) {\n        active_period =\n          this.props.sessionPlan.allSessionPlans[\n            this.props.sessionPlan.allSessionPlans.length - 1\n          ];\n        this.setState({\n          selected_period: active_period,\n          selectPeriod: false,\n          defaultSelectedPeriod: active_period,\n        });\n      } else {\n        this.setState({ selectPeriod: true });\n      }\n    }\n\n    if (this.props.positions.positions_list === null) {\n      this.props.loadAllPositions(this.setLoadingState);\n    }\n\n    if (this.props.positions.selected_position === null) {\n      this.setState({ selectPosition: true });\n    }\n\n    this.loadAllApplications(\n      this.props.positions.selected_position,\n      this.state.selected_period,\n      (status: boolean, errorMessage: string) => {\n        this.setLoadingState(status);\n        if (!isEmptyOrSpaces(errorMessage)) {\n          this.props.PushPopupAlert({\n            title: errorMessage,\n            theme: PopupAlertTheme.warning,\n          });\n        }\n      }\n    );\n\n    if (this.props.positions.selected_position && this.state.selected_period) {\n      this.setState({\n        reportTitle:\n          this.props.positions.selected_position.position_title +\n          \" - Application Report - \" +\n          this.state.selected_period.session_plan_name,\n      });\n    }\n  };\n\n  componentDidUpdate(\n    prevProps: loadAllApplicationsProps,\n    prevState: loadAllApplicationsState\n  ) {\n    if (prevState.loading !== this.state.loading) {\n      // UPDATE APPLICATION LIST FOR UPDATE ==============================\n      this.updateApplicationToPrint();\n    }\n  }\n\n  AdminApplicationStatuses = (\n    application: AdminApplicationsList[]\n  ): { title: string; count: number; status: ApplicationStates | \"ALL\" }[] => {\n    let output: {\n      title: string;\n      count: number;\n      status: ApplicationStates | \"ALL\";\n    }[] = [{ title: \"All\", count: application.length, status: \"ALL\" }];\n    for (let i in ApplicationStatesDescription) {\n      if (\n        !ignoreThisApplicationStatus.includes(\n          ApplicationStatesDescription[i].key\n        )\n      ) {\n        output.push({\n          title: ApplicationStatesDescription[i].caption,\n          count: application.filter(\n            (itm) =>\n              itm.application_status === ApplicationStatesDescription[i].key\n          ).length,\n          status: ApplicationStatesDescription[i].key,\n        });\n      }\n    }\n    return output;\n  };\n\n  filteredApplications = (\n    applications: AdminApplicationsList[] | null,\n    Status: ApplicationStates | \"ALL\" | null,\n    education_category: education_category | \"all\"\n  ) => {\n    let appl: AdminApplicationsList[] | null = applications;\n    if (education_category !== \"all\" && applications !== null) {\n      appl = applications.filter(\n        (itm) =>\n          itm.position.education_institute_id.education_institute_id ===\n          education_category.education_institute_id\n      );\n    }\n    if (Status === null || Status === \"ALL\") {\n      return appl;\n    } else {\n      if (appl === null) {\n        return appl;\n      } else {\n        return appl.filter((item) => item.application_status === Status);\n      }\n    }\n  };\n\n  setDownloading = (status: boolean) => {\n    this.setState({ downloading: status });\n  };\n\n  updateApplicationToPrint = () => {\n    if (this.state.applicationListData) {\n      let arrayNew: AdminApplicationsToPrintInterface[] = [];\n      let n: number = 1;\n      for (const key in this.state.applicationListData) {\n        if (\n          Object.prototype.hasOwnProperty.call(\n            this.state.applicationListData,\n            key\n          )\n        ) {\n          const element = this.state.applicationListData[key];\n          let dataArray: AdminApplicationsToPrintInterface = {\n            application_id: n,\n            names: element.fname + \" \" + element.lname,\n            national_id: element.n_id,\n            gender: element.sex === \"M\" ? \"Male\" : \"Female\",\n            position: element.position.position_title,\n            phone: element.phone_number,\n            email: element.email,\n            education_category:\n              element.position.education_institute_id.education_category_title,\n            application_session:\n              element.application_session.application_session_id,\n            district: element.district,\n            date: element.createdAt,\n            decision: element.application_status,\n          };\n\n          for (const key in this.state.reportContent) {\n            if (\n              Object.prototype.hasOwnProperty.call(\n                this.state.reportContent,\n                key\n              )\n            ) {\n              if (!this.state.reportContent[key].status) {\n                delete dataArray[this.state.reportContent[key].key];\n              }\n            }\n          }\n          arrayNew.push(dataArray);\n          n++;\n        }\n      }\n      this.setState({ applicationsToPrint: arrayNew });\n      arrayNew = [];\n      n = 1;\n      // this.props.applicationsToPrint=;\n    }\n  };\n\n  updateReportContent = (key: reportContentKeyInterface) => {\n    let index: number = this.state.reportContent.findIndex(\n      (item) => item.key === key\n    );\n    let newArray: reportContentInterface[] = this.state.reportContent;\n    newArray[index].status = !newArray[index].status;\n    this.setState({ reportContent: newArray });\n    let isSelectAllNeeded = newArray.find((item) => item.status === false);\n    if (isSelectAllNeeded) {\n      this.setState({ selectAll: false });\n    } else {\n      this.setState({ selectAll: true });\n    }\n\n    // UPDATE APPLICATION LIST FOR UPDATE ==============================\n    this.updateApplicationToPrint();\n  };\n\n  generateThisPDF = () => {\n    if (!document.querySelectorAll(\"#report_content tbody tr\").length) {\n      this.props.PushPopupAlert({\n        title: `Can't generate Report of empty Data`,\n        theme: PopupAlertTheme.warning,\n      });\n      return false;\n    }\n\n    if (this.props.positions.selected_position && this.state.selected_period) {\n      const table: HTMLElement | null =\n        document.getElementById(\"report_content\");\n      const reportSettings: reportSettingsInterface = {\n        doneBy: this.props.auth.user.fname + \" \" + this.props.auth.user.lname,\n        title: \"Applications Report\",\n        subjectTitle: \"Position\",\n        subject: this.props.positions.selected_position.position_title,\n        period: this.state.selected_period.session_plan_name,\n        footer: \"Online Recruitment\",\n        institute:\n          this.state.selectedEducationCategory === \"all\"\n            ? \"All institute\"\n            : this.state.selectedEducationCategory.education_category_title,\n        orientation: \"l\",\n      };\n      console.log(\"====================================\");\n      console.log({ table });\n      console.log(\"====================================\");\n      table && generatePDF(reportSettings, table, this.setDownloading);\n    }\n  };\n\n  isChangeAllowed = (key: reportContentKeyInterface): boolean => {\n    if (\n      key === reportContentKeyInterface.names ||\n      key === reportContentKeyInterface.decision ||\n      key === reportContentKeyInterface.application_session\n    ) {\n      return false;\n    }\n    return true;\n  };\n\n  resetReportContent = (currentState: boolean) => {\n    let newArray: reportContentInterface[] = this.state.reportContent;\n    for (const key in newArray) {\n      if (this.isChangeAllowed(newArray[key].key)) {\n        newArray[key].status = !currentState;\n      }\n    }\n\n    this.setState({\n      reportContent: newArray,\n      selectAll: !currentState,\n    });\n\n    this.updateApplicationToPrint();\n  };\n\n  setSort = (thisProperty: string) => {\n    if (\n      this.state.sortProperty === thisProperty &&\n      this.state.sortOrder === \"ASC\"\n    ) {\n      this.setState({\n        sortProperty: thisProperty,\n        isSorted: true,\n        sortOrder: \"DESC\",\n      });\n    } else {\n      this.setState({\n        sortProperty: thisProperty,\n        isSorted: true,\n        sortOrder: \"ASC\",\n      });\n    }\n  };\n\n  render() {\n    return (\n      <React.Fragment>\n        <SideNavigation>\n          {FC_HasInstitute(this.props.auth.education_institution_id) ===\n            false && (\n            <div className=\"flex flex-col mb-4\">\n              <span className=\"text-sm text-gray-600 mb-2\">\n                Education categories:\n              </span>\n              {this.props.schoolLevels.education_categories === null ? (\n                <Loading />\n              ) : this.props.schoolLevels.education_categories.length === 0 ? (\n                <span>No result found</span>\n              ) : (\n                <section>\n                  <div\n                    onClick={() => {\n                      this.setState({ selectedEducationCategory: \"all\" });\n                    }}\n                    className={`border rounded px-2 py-2 mb-2 cursor-pointer ${\n                      this.state.selectedEducationCategory === \"all\"\n                        ? \"bg-blue-600 text-white hover:bg-blue-100 hover:text-blue-600 hover:border-blue-500\"\n                        : \"hover:bg-blue-100 hover:text-blue-600 hover:border-blue-500\"\n                    } font-bold flex flex-row items-center gap-2`}\n                  >\n                    {this.state.selectedEducationCategory === \"all\" ? (\n                      <MdRadioButtonChecked />\n                    ) : (\n                      <MdRadioButtonUnchecked />\n                    )}\n                    <span>ALL</span>\n                  </div>\n                  {this.props.schoolLevels.education_categories.map(\n                    (item, i) => (\n                      <div\n                        onClick={() => {\n                          this.setState({ selectedEducationCategory: item });\n                        }}\n                        key={i + 1}\n                        className={`border rounded px-2 py-2 mb-2 cursor-pointer ${\n                          this.state.selectedEducationCategory !== \"all\" &&\n                          this.state.selectedEducationCategory\n                            .education_institute_id ===\n                            item.education_institute_id\n                            ? \"bg-blue-600 text-white hover:bg-blue-100 hover:text-blue-600 hover:border-blue-500\"\n                            : \"hover:bg-blue-100 hover:text-blue-600 hover:border-blue-500\"\n                        } font-bold flex flex-row items-center gap-2`}\n                      >\n                        {this.state.selectedEducationCategory !== \"all\" &&\n                        this.state.selectedEducationCategory\n                          .education_institute_id ===\n                          item.education_institute_id ? (\n                          <MdRadioButtonChecked />\n                        ) : (\n                          <MdRadioButtonUnchecked />\n                        )}\n                        <span>{item.education_category_title}</span>\n                      </div>\n                    )\n                  )}\n                </section>\n              )}\n            </div>\n          )}\n          <div className=\"\">\n            <div className=\"text-gray-600 text-sm mb-2\">Selected period:</div>\n            <div\n              onClick={() => this.setState({ selectPeriod: true })}\n              className=\"font-bold bg-blue-50 border border-blue-200 rounded py-2 cursor-pointer text-xs px-2 hover:underline  text-blue-600  mb-4 w-full flex flex-row items-center animate__animated animate__zoomIn\"\n            >\n              {this.state.selected_period !== null\n                ? this.state.selected_period.session_plan_name\n                : \"Filter by period\"}\n              <FiEdit className=\"text-3xl text-blue-600\" />\n            </div>\n          </div>\n          {/* <Search data={[1, 2, 3]} /> */}\n          {this.props.positions.selected_position && (\n            <div className=\"pt-1\">\n              <div className=\"text-sm text-gray-700 pb-2 pt-2\">\n                Application statuses:\n              </div>\n              {this.state.applicationListData === null ? (\n                <Loading />\n              ) : (\n                this.AdminApplicationStatuses(\n                  this.state.applicationListData!\n                ).map(\n                  (\n                    itm: {\n                      title: string;\n                      count: number;\n                      status: ApplicationStates | \"ALL\";\n                    },\n                    i: number\n                  ) => (\n                    // itm.count > 0 &&\n                    <Fragment key={itm.title}>\n                      <div\n                        onClick={() =>\n                          this.setState({\n                            selectedApplicationStatus: itm.status,\n                          })\n                        }\n                      >\n                        <MainItem\n                          title={itm.title}\n                          count={itm.count}\n                          active={\n                            this.state.selectedApplicationStatus === itm.status\n                              ? true\n                              : false\n                          }\n                        />\n                      </div>\n                    </Fragment>\n                  )\n                )\n              )}\n            </div>\n          )}\n        </SideNavigation>\n\n        <section>\n          {/* REPORT TITLE ========================================= */}\n          <div className=\"grid md:grid-cols-12\">\n            <div className=\"col-span-8\">\n              <div className=\"mt-4 mx-4 flex flex-col gap-1\">\n                <span className=\"text-xl font-bold text-gray-700\">\n                  Applications Report\n                </span>\n                <div\n                  onClick={() => this.setState({ selectPosition: true })}\n                  className=\"flex flex-row gap-2 items-end\"\n                >\n                  <span className=\"text-gray-500 text-xl\">Position:</span>\n                  <span className=\"text-blue-600 font-bold underline cursor-pointer text-3xl\">\n                    {this.props.positions.selected_position !== null\n                      ? this.props.positions.selected_position.position_title\n                      : \"No position selected, Click to select\"}\n                  </span>\n                </div>\n              </div>\n            </div>\n            <div className=\"col-span-4\">\n              <div className=\"float-right mt-2\">\n                {this.state.applicationsToPrint &&\n                  this.state.applicationsToPrint.length > 0 && (\n                    <div className=\"flex flex-row items-center justify-end font-bold mb-2\">\n                      <BiExport className=\"text-2xl text-gray-500\" />\n                      <span className=\"text-gray-500\">Export as</span>\n                      {/* EXCEL BUTTON ================= */}\n                      <button\n                        className={`px-4 py-1 ml-1 rounded bg-white border hover:text-blue-600 font-bold hover:bg-blue-50 border-gray-200 ${\n                          this.state.downloading && \"cursor-wait\"\n                        }`}\n                        disabled={this.state.loading || this.state.downloading}\n                        onClick={() =>\n                          this.setState({\n                            generateReportModal: {\n                              reportType: \"EXCEL\",\n                              status: true,\n                            },\n                          })\n                        }\n                      >\n                        EXCEL\n                      </button>\n                      {/* PDF BUTTON ================= */}\n                      <button\n                        className=\"px-4 py-1 ml-1 rounded bg-white border hover:text-blue-600 font-bold hover:bg-blue-50 border-gray-200\"\n                        onClick={() => this.generateThisPDF()}\n                        disabled={this.state.loading}\n                      >\n                        PDF\n                      </button>\n                    </div>\n                  )}\n                <div\n                  onClick={() => this.setState({ selectPosition: true })}\n                  className=\"btn bg-blue-50 border border-blue-300 text-blue-600 cursor-pointer hover:bg-blue-100 flex flex-row items-center justify-center gap-2 text-sm \"\n                >\n                  <BiFilterAlt className=\"text-xl\" />\n                  Filter by position\n                </div>\n              </div>\n            </div>\n          </div>\n          {/* END REPORT TITLE ========================================= */}\n          <div className=\"bg-white my-4\">\n            <div className=\"w-full px-2 py-2\">\n              <input\n                onChange={(e) => this.setState({ searchInput: e.target.value })}\n                type=\"text\"\n                value={this.state.searchInput}\n                placeholder=\"Search...\"\n                className=\"w-full bg-gray-100 py-2 px-3 rounded\"\n              />\n            </div>\n            <table className=\"w-full shadow\" id=\"report_content\">\n              <thead className=\"bg-white border-b-2 border-gray-300 text-gray-600 font-bold text-sm\">\n                <tr>\n                  <td className=\"px-2 py-2\">#</td>\n                  <td\n                    className=\"px-2 py-2 cursor-pointer\"\n                    onClick={() => this.setSort(\"fname\")}\n                  >\n                    <div className=\"flex items-center gap-1\">\n                      Applicant names <BiSort />\n                    </div>\n                  </td>\n                  <td className=\"px-2 py-2\">National ID</td>\n                  <td className=\"px-2 py-2\">Gender</td>\n                  <td className=\"px-2 py-2\">Phone</td>\n                  <td className=\"px-2 py-2\">Position</td>\n                  <td className=\"px-2 py-2\">Res. District</td>\n                  <td\n                    className=\"px-2 py-2 cursor-pointer\"\n                    onClick={() => this.setSort(\"application_status\")}\n                  >\n                    <div className=\"flex items-center gap-1\">\n                      Status <BiSort />\n                    </div>\n                  </td>\n                  <td className=\"px-2 py-2\">Date</td>\n                </tr>\n              </thead>\n              <tbody>\n                {!this.props.positions.selected_position ? (\n                  <tr>\n                    <td colSpan={9} className=\"px-2 py-2\">\n                      <div className=\"flex flex-col text-gray-400 items-center justify-center bg-gray-100 rounded py-10\">\n                        <ImFilesEmpty className=\"text-8xl text-gray-400 mb-2 animate__animated animate__shakeX\" />\n                        <span className=\"text-sm font-bold\">\n                          No position selected! Please select position to get\n                          data\n                        </span>\n                        <div className=\"w-full mt-2 flex flex-row items-center justify-center\">\n                          <ul className=\"text-sm py-2 text-blue-600 font-bold flex flex-row gap-2\">\n                            <li\n                              onClick={() =>\n                                this.setState({ selectPosition: true })\n                              }\n                              className=\"underline text-blue-600 cursor-pointer\"\n                            >\n                              Choose position\n                            </li>\n                          </ul>\n                        </div>\n                      </div>\n                    </td>\n                  </tr>\n                ) : this.state.applicationListData === null ||\n                  this.filteredApplications(\n                    this.state.applicationListData,\n                    this.state.selectedApplicationStatus,\n                    this.state.selectedEducationCategory\n                  ) === null ? (\n                  <tr>\n                    <td colSpan={9} className=\"px-2 py-2\">\n                      <Loading />\n                    </td>\n                  </tr>\n                ) : this.filteredApplications(\n                    this.state.applicationListData,\n                    this.state.selectedApplicationStatus,\n                    this.state.selectedEducationCategory\n                  )!.length === 0 ? (\n                  <tr>\n                    <td colSpan={9} className=\"px-2 py-2\">\n                      <div className=\"flex flex-col text-gray-400 items-center justify-center bg-gray-100 rounded py-10\">\n                        <ImFilesEmpty className=\"text-8xl text-gray-400 mb-2 animate__animated animate__shakeX\" />\n                        <span className=\"text-sm font-bold\">\n                          No result found! Please try to search again\n                        </span>\n                        <div className=\"w-full mt-2 flex flex-row items-center justify-center\">\n                          <ul className=\"text-sm py-2 text-blue-600 font-bold flex flex-row gap-2\">\n                            <li\n                              onClick={() =>\n                                this.setState({ selectPeriod: true })\n                              }\n                              className=\"underline text-gray-500 cursor-pointer\"\n                            >\n                              Filter by period\n                            </li>\n                            <li className=\"text-gray-400 italic\">or</li>\n                            <li\n                              onClick={() =>\n                                this.setState({ selectPosition: true })\n                              }\n                              className=\"underline text-blue-600 cursor-pointer\"\n                            >\n                              Filter by position\n                            </li>\n                          </ul>\n                        </div>\n                      </div>\n                    </td>\n                  </tr>\n                ) : (\n                  sortThisArray(\n                    this.state.isSorted,\n                    searchData(\n                      this.filteredApplications(\n                        this.state.applicationListData,\n                        this.state.selectedApplicationStatus,\n                        this.state.selectedEducationCategory\n                      )!,\n                      this.state.searchInput\n                    ),\n                    this.state.sortProperty,\n                    this.state.sortOrder\n                  ).map((item, i) => (\n                    <tr\n                      onClick={() =>\n                        this.setState({\n                          applicationDetailsModal: {\n                            selected_application: item,\n                            status: true,\n                          },\n                        })\n                      }\n                      key={i + 1}\n                      className={`${\n                        i % 2 !== 0 ? \"bg-gray-100\" : \"bg-white\"\n                      } text-gray-600 hover:bg-blue-100 hover:text-blue-700 cursor-pointer border-b border-gray-300 hover:border-blue-500 text-sm`}\n                    >\n                      <td className=\"px-2 py-2\">{i + 1}</td>\n                      <td className=\"px-2 py-2\">\n                        {item.fname} {item.lname}\n                      </td>\n                      <td className=\"px-2 py-2\">{item.n_id}</td>\n                      <td className=\"px-2 py-2\">\n                        {item.sex === \"M\" ? \"Male\" : \"Female\"}\n                      </td>\n                      <td className=\"px-2 py-2\">{item.phone_number}</td>\n                      <td className=\"px-2 py-2\">\n                        {item.position.position_title}\n                      </td>\n                      <td className=\"px-2 py-2\">{item.district}</td>\n                      <td className=\"px-2 py-2\">\n                        {capitalizeFirstLetter(item.application_status)}\n                      </td>\n                      <td className=\"px-2 py-2\">{DATE(item.createdAt)}</td>\n                    </tr>\n                  ))\n                )}\n              </tbody>\n            </table>\n          </div>\n        </section>\n\n        {/* PERIOD && POSITION CONTENT MODAL */}\n        {(this.state.selectPosition === true ||\n          this.state.selectPeriod === true) && (\n          <Modal\n            title={\n              <div className=\"flex flex-row gap-4 items-center\">\n                {this.state.selectPeriod === true ? (\n                  <MdHistory className=\"text-5xl text-blue-600\" />\n                ) : (\n                  <IoFilter className=\"text-5xl text-blue-600\" />\n                )}\n                <div className=\"flex flex-col\">\n                  <span className=\"font-bold text-xl text-blue-600\">\n                    {this.state.selectPeriod === true\n                      ? \"Choose a period\"\n                      : \"Filter by a position\"}\n                  </span>\n                </div>\n              </div>\n            }\n            backDrop={true}\n            theme={Themes.default}\n            close={() =>\n              this.setState({\n                selectPosition: false,\n                selectPeriod: false,\n                searchPositionInput: \"\",\n              })\n            }\n            backDropClose={true}\n            widthSizeClass={ModalSize.extraLarge}\n            displayClose={true}\n            padding={{ title: true }}\n          >\n            <div className=\"px-2 pb-2\">\n              {this.state.selectPeriod === true ? (\n                <ChooseSession\n                  allSession={this.props.sessionPlan.allSessionPlans}\n                  setSelectSession={(value: SessionPlanInterface | \"all\") => {\n                    if (value !== \"all\") {\n                      this.setState({ selected_period: value });\n                      this.loadAllApplications(\n                        this.props.positions.selected_position,\n                        value,\n                        (status: boolean, errorMessage: string) => {\n                          this.setLoadingState(status);\n                          if (!isEmptyOrSpaces(errorMessage)) {\n                            this.props.PushPopupAlert({\n                              title: errorMessage,\n                              theme: PopupAlertTheme.warning,\n                            });\n                          }\n                        }\n                      );\n                      this.setState({\n                        selectPeriod: false,\n                        applicationListData: null,\n                      });\n                    }\n                  }}\n                  chooseAll={false}\n                  currentSelected={\n                    this.state.selected_period\n                      ? this.state.selected_period\n                      : \"all\"\n                  }\n                />\n              ) : this.state.selectPosition === true &&\n                this.props.positions.positions_list === null ? (\n                <LoadingV2 type={LoadingType.dark} />\n              ) : this.props.positions.positions_list!.length === 0 ? (\n                <div className=\"flex flex-col text-gray-400 items-center justify-center\">\n                  <MdSearch className=\"text-6xl\" />\n                  <div className=\"flex flex-col items-center justify-center\">\n                    <span>No positions found! Please go back!</span>\n                    <Link\n                      to=\"/\"\n                      className=\"btn bg-yellow-100 text-yellow-700 my-4 hover:bg-yellow-200\"\n                    >\n                      Go back\n                    </Link>\n                  </div>\n                </div>\n              ) : (\n                <>\n                  <div className=\"flex flex-col\">\n                    <span className=\"text-gray-600 text-xs font-bold\">\n                      Filter by position name\n                    </span>\n                    <input\n                      onChange={(e: React.ChangeEvent<HTMLInputElement>) =>\n                        this.setState({ searchPositionInput: e.target.value })\n                      }\n                      type=\"text\"\n                      className=\"mb-4 bg-gray-100 px-3 py-2 rounded\"\n                      placeholder=\"Keyword...\"\n                    />\n                  </div>\n                  {searchData(\n                    this.props.positions.positions_list!,\n                    this.state.searchPositionInput\n                  ).map((item, key) => (\n                    <div\n                      key={key + 1}\n                      onClick={() => {\n                        this.props.setSelectedPosition(item);\n                        this.loadAllApplications(\n                          item,\n                          this.state.selected_period\n                            ? this.state.selected_period\n                            : this.state.defaultSelectedPeriod,\n                          (status: boolean, errorMessage: string) => {\n                            this.setLoadingState(status);\n                            if (!isEmptyOrSpaces(errorMessage)) {\n                              this.props.PushPopupAlert({\n                                title: errorMessage,\n                                theme: PopupAlertTheme.warning,\n                              });\n                            }\n                          }\n                        );\n                        this.setState({\n                          selectPosition: false,\n                          searchPositionInput: \"\",\n                          applicationListData: null,\n                          reportTitle:\n                            this.props.positions.selected_position\n                              ?.position_title +\n                            \" - Application Report - \" +\n                            this.state.selected_period\n                              ? this.state.selected_period!.session_plan_name\n                              : this.state.defaultSelectedPeriod\n                              ? this.state.defaultSelectedPeriod!\n                                  .session_plan_name\n                              : \"\",\n                        });\n                      }}\n                      className=\"bg-white cursor-pointer rounded  px-3 py-2 border border-gray-200 hover:border-blue-500 hover:bg-blue-100 mb-2\"\n                    >\n                      <div className=\"grid lg:grid-cols-12\">\n                        <div className=\"col-span-12 lg:col-span-10\">\n                          <div className=\"flex flex-row items-center gap-3\">\n                            <div>\n                              <IoIosBriefcase className=\"text-4xl md:text-5xl text-blue-600\" />\n                            </div>\n                            <div className=\"flex flex-col\">\n                              <span className=\"text-xs lg:text-sm font-bold text-gray-700\">\n                                {item.position_title}\n                              </span>\n                              <span className=\"text-xs text-gray-500 italic\">\n                                School level:{\" \"}\n                                <span\n                                  className=\"text-gray-800 font-light\"\n                                  style={{ fontStyle: \"normal\" }}\n                                >\n                                  {item.school_level_id.school_level_name}\n                                </span>\n                              </span>\n                              <span className=\"text-xs font-bold text-blue-600 bg-blue-100 w-max px-3 py-1 rounded-full\">\n                                {\n                                  item.education_institute_id\n                                    .education_category_title\n                                }\n                              </span>\n                            </div>\n                          </div>\n                        </div>\n                        <div className=\"col-span-12 lg:col-span-2 hidden lg:block\">\n                          <div className=\"h-full flex items-center justify-end\">\n                            <div className=\"btn bg-blue-600 text-white float-right\">\n                              Choose\n                            </div>\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                  ))}\n                </>\n              )}\n            </div>\n          </Modal>\n        )}\n        {/* END PERIOD && POSITION CONTENT MODAL */}\n\n        {/* APPLICATION DETAIL CONTENT MODAL */}\n        {this.state.applicationDetailsModal !== null &&\n          this.state.applicationDetailsModal.status === true && (\n            <Modal\n              title={\n                <div className=\"flex flex-row gap-4 items-center\">\n                  {/* <IoBriefcase className=\"text-5xl text-gray-500\" /> */}\n                  <div className=\"flex flex-col\">\n                    <span className=\"font-bold text-2xl text-gray-500\">\n                      {\n                        this.state.applicationDetailsModal.selected_application\n                          .fname\n                      }{\" \"}\n                      {\n                        this.state.applicationDetailsModal.selected_application\n                          .lname\n                      }\n                    </span>\n                    <span className=\"text-sm text-blue-600 font-normal\">\n                      Position:{\" \"}\n                      {\n                        this.state.applicationDetailsModal.selected_application\n                          .position.position_title\n                      }\n                    </span>\n                  </div>\n                </div>\n              }\n              backDrop={true}\n              theme={Themes.default}\n              close={() => this.setState({ applicationDetailsModal: null })}\n              backDropClose={true}\n              widthSizeClass={ModalSize.extraLarge}\n              displayClose={true}\n              padding={{ title: true }}\n            >\n              <ApplicationDetails\n                selectedApplication={\n                  this.state.applicationDetailsModal.selected_application\n                }\n              />\n            </Modal>\n          )}\n        {/* END APPLICATION DETAIL CONTENT MODAL */}\n\n        {/* GENERATE DYNAMIC REPORT CONTENT MODAL */}\n        {this.state.generateReportModal !== null &&\n          this.state.generateReportModal.status === true && (\n            <Modal\n              title={\n                <div className=\"flex flex-row gap-4 items-center\">\n                  {/* <IoBriefcase className=\"text-5xl text-gray-500\" /> */}\n                  <div className=\"flex flex-col\">\n                    <span className=\"font-bold text-2xl text-gray-500\">\n                      Generating Report contents\n                    </span>\n                    <span className=\"text-sm text-blue-600 font-normal\">\n                      Generating {this.state.generateReportModal.reportType}{\" \"}\n                      Report\n                    </span>\n                  </div>\n                </div>\n              }\n              backDrop={true}\n              theme={Themes.default}\n              close={() => this.setState({ generateReportModal: null })}\n              backDropClose={false}\n              widthSizeClass={ModalSize.medium}\n              displayClose={true}\n              padding={{ title: true }}\n            >\n              <div className=\"px-6\">\n                <div className=\"my-2 text-base text-gray-700 sm:text-lg\">\n                  <div className=\"flex flex-col\">\n                    <label>Title</label>\n                    <input\n                      type=\"text\"\n                      className={`text-left input-white w-20 inline-block ${\n                        this.state.formError &&\n                        this.state.formError.element === \"report_title\"\n                          ? \"border-red-500\"\n                          : \"border-gray-500\"\n                      } border-2`}\n                      placeholder=\"Sub Category Title\"\n                      value={this.state.reportTitle}\n                      onChange={(e) => {\n                        this.setState({\n                          formError: null,\n                          reportTitle: e.target.value,\n                        });\n                      }}\n                      disabled={this.state.loading}\n                    />\n                    {this.state.formError &&\n                      this.state.formError.element === \"report_title\" && (\n                        <span className=\"text-red-500\">\n                          {this.state.formError.msg}\n                        </span>\n                      )}\n                  </div>\n                  <div className=\"flex flex-col mt-2\">\n                    <label>Report content</label>\n                    <div className=\"grid grid-cols-2 md:grid-cols-3 items-center gap-2 mt-2\">\n                      {this.state.reportContent.map((item, index) => (\n                        <div\n                          key={index}\n                          className={`flex items-center gap-1 ${\n                            this.isChangeAllowed(item.key)\n                              ? \"cursor-pointer\"\n                              : \"cursor-not-allowed\"\n                          }`}\n                          onClick={() =>\n                            this.isChangeAllowed(item.key) &&\n                            this.updateReportContent(item.key)\n                          }\n                          title={\n                            !this.isChangeAllowed(item.key)\n                              ? \"Required for every report!\"\n                              : \"\"\n                          }\n                        >\n                          {item.status ? (\n                            <MdCheckBox className=\"w-6 h-6 text-blue-700\" />\n                          ) : (\n                            <MdCheckBoxOutlineBlank className=\"w-6 h-6\" />\n                          )}\n                          <span>{item.title}</span>\n                        </div>\n                      ))}\n                    </div>\n                    {this.state.formError &&\n                      this.state.formError.element === \"report_content\" && (\n                        <span className=\"text-red-500\">\n                          {this.state.formError.msg}\n                        </span>\n                      )}\n                  </div>\n                </div>\n                <div className=\"flex justify-between mb-2 mt-4\">\n                  <div\n                    className={`flex items-center gap-1 cursor-pointer`}\n                    onClick={() =>\n                      this.resetReportContent(this.state.selectAll)\n                    }\n                  >\n                    {this.state.selectAll ? (\n                      <MdCheckBox className=\"w-6 h-6 text-blue-700\" />\n                    ) : (\n                      <MdCheckBoxOutlineBlank className=\"w-6 h-6\" />\n                    )}\n                    <span>Select all</span>\n                  </div>\n\n                  {this.state.applicationsToPrint && !this.state.loading && (\n                    <ExportToExcel\n                      fileData={this.state.applicationsToPrint}\n                      fileName={this.state.reportTitle}\n                      btnName=\"Generate\"\n                    />\n                  )}\n                </div>\n              </div>\n            </Modal>\n          )}\n        {/* END GENERATE DYNAMIC REPORT CONTENT MODAL */}\n      </React.Fragment>\n    );\n  }\n}\n\nconst mapStateToProps = ({\n  auth,\n  positions,\n  sessionPlan,\n  schoolLevels,\n}: StoreState): {\n  auth: Auth;\n  positions: positionsStoreInterface;\n  sessionPlan: SessionPlanReducerInterface;\n  schoolLevels: schoolLevelsStoreInterface;\n} => {\n  return {\n    auth: auth,\n    positions: positions,\n    sessionPlan,\n    schoolLevels: schoolLevels,\n  };\n};\n\nexport const Applications = connect(mapStateToProps, {\n  FC_GetAllSessionByInstitution,\n  loadAllPositions,\n  setSelectedPosition,\n  loadEducationCategories,\n  PushPopupAlert,\n})(_Applications);\n","import React, { FC, ReactElement, ReactNode } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Auth, System } from \"../../actions\";\nimport { StoreState } from \"../../reducers\";\nimport { NavToogle, PageHasSubNav } from \"../../actions\";\nimport { MdBrightness1, MdSearch } from \"react-icons/md\";\n\n// props for the component\ninterface AppProps {\n  auth: Auth;\n  system: System;\n  PageHasSubNav: Function;\n  NavToogle: Function;\n  children: ReactNode;\n}\n//\ninterface AppState {\n  loading: boolean;\n}\n\nclass _SideNavigation extends React.Component<AppProps, AppState> {\n  constructor(props: AppProps) {\n    super(props);\n\n    this.state = {\n      loading: false,\n    };\n  }\n\n  componentDidMount = () => this.props.PageHasSubNav(true);\n  componentWillUnmount = () => this.props.PageHasSubNav(false);\n\n  render() {\n    const isAuthenticated = this.props.auth.isAuthenticated;\n\n    if (isAuthenticated === false) {\n      return null;\n    }\n\n    const navActive = this.props.system.navigation;\n    return (\n      <div\n        className={`fixed w-48 p-1 pr-2 pl-6 text-gray-700 bg-white ${\n          navActive === true ? \"lg:left-16  left-16\" : \" -left-72 lg:left-16\"\n        }  top-0 bottom-0 pt-20 z-30 shadow-lg  transition-all duration-500 ease-in-out overflow-y-auto`}\n      >\n        {this.props.children}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = ({\n  auth,\n  system,\n}: StoreState): { auth: Auth; system: System } => {\n  return { auth: auth, system: system };\n};\n\nexport const SideNavigation = connect(mapStateToProps, {\n  NavToogle,\n  PageHasSubNav,\n})(_SideNavigation);\n\n//************************************ FORM SEARCH **************************************** */\n\ntype SearchComponentInterface = {\n  data: any[];\n};\n\nexport const Search: FC<SearchComponentInterface> = ({\n  data,\n}): ReactElement => {\n  return (\n    <div className=\"m-1 rounded-md shadow-md border border-blue-400 bg-white p-1 flex \">\n      <label htmlFor=\"search-text\" className=\"inline-block text-2xl\">\n        <MdSearch className=\"inline-block text-blue-400\" />\n      </label>\n      <input\n        type=\"search\"\n        className=\"outline-none bg-transparent flex-1 pl-1\"\n        placeholder=\"Search\"\n        id=\"search-text\"\n      />\n    </div>\n  );\n};\n\n//************************************ FORM SEARCH **************************************** */\n\ntype MainItemComponentInterface = {\n  title: string;\n  icon?: any;\n  active?: boolean;\n  count?: number;\n};\n\n/**\n *\n * @param param0\n * @returns\n */\nexport const MainItem: FC<MainItemComponentInterface> = ({\n  title = \"\",\n  icon = MdBrightness1,\n  active = false,\n  count = 0,\n}): ReactElement => {\n  const IconDefined = icon;\n  return (\n    <section\n      className={`${\n        active === true\n          ? \"bg-blue-500 text-white font-bold\"\n          : \"bg-blue-100 text-blue-800\"\n      } mb-1 hover:font-bold py-1 hover:bg-blue-400 hover:text-white --font-bold  px-2 rounded-md flex cursor-pointer items-center`}\n    >\n      <section className=\"flex-1\">\n        <IconDefined className=\"inline-block mr-1 text-xs\" />\n        <span>{title}</span>\n      </section>\n\n      {count > 0 ? (\n        <span className=\"px-0.5 my-1 text-xs bg-blue-600 text-white rounded-full\">\n          {count}\n        </span>\n      ) : null}\n    </section>\n  );\n};\n\n//************************************ FORM SEARCH **************************************** */\n\ntype SubItemContainerComponentInterface = {\n  children: ReactNode;\n};\n\n/**\n *\n * @param param0\n * @returns\n */\nexport const SubItemContainer: FC<SubItemContainerComponentInterface> = ({\n  children,\n}): ReactElement => {\n  return (\n    <div className=\"ml-3 overflow-y-auto border-l-2 border-blue-200 -mt-1 pt-2 mb-2 pl-1 cursor-pointer\">\n      {children}\n    </div>\n  );\n};\n\n//************************************ FORM SEARCH **************************************** */\n\ntype SubItemComponentInterface = {\n  title: string;\n  icon?: any;\n  active?: boolean;\n  count?: number;\n};\n\n/**\n *\n * @param param0\n * @returns\n * @important Remenber to use these components inside the <SubItemContainer>...</SubItemContainer>\n */\nexport const SubItem: FC<SubItemComponentInterface> = ({\n  title = \"\",\n  icon = MdBrightness1,\n  active = false,\n  count = 0,\n}): ReactElement => {\n  const IconDefined = icon;\n\n  return (\n    <div\n      className={`animate__animated animate__zoomIn animate__faster ${\n        active === true ? \"bg-blue-500 text-white font-bold\" : \" text-blue-800\"\n      } text-blue-800 bg-blue-200 rounded-md px-1 mb-1 flex items-center py-1 font-bold`}\n    >\n      <IconDefined\n        className={`inline-block mr-0.1 text-xs ${\n          active === true ? \"text-white\" : \"\"\n        }`}\n      />\n      <span\n        className={`inline-block pl-1 ${active === true ? \"text-white\" : \"\"}`}\n      >\n        {title}\n      </span>\n      {count >= 1 ? (\n        <span\n          className={`text-sm fint-bold ${active === true ? \"text-white\" : \"\"}`}\n        >\n          {count}\n        </span>\n      ) : null}\n    </div>\n  );\n};\n","import React from \"react\";\nimport * as FileSaver from \"file-saver\";\nimport * as XLSX from \"xlsx\";\nimport { RiFileExcel2Fill } from \"react-icons/ri\";\n\ninterface ExportToExcelProps {\n  fileData: any[];\n  fileName: string;\n  btnName?: string;\n  className?: string;\n  showIcon?: boolean;\n}\n\nconst ExportToExcel: React.FC<ExportToExcelProps> = ({\n  fileData,\n  fileName,\n  btnName = \"Excel\",\n  className = \"flex items-center gap-1 px-4 py-1 rounded text-green-700 bg-white border hover:text-white hover:bg-green-700 border-green-700 font-bold\",\n  showIcon = true,\n}) => {\n  const fileType =\n    \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;charset=UTF-8\";\n  const fileExtension = \".xlsx\";\n\n  const exportToCSV = (apiData: any[], fileName: string) => {\n    const ws = XLSX.utils.json_to_sheet(apiData);\n    const wb = { Sheets: { data: ws }, SheetNames: [\"data\"] };\n    const excelBuffer = XLSX.write(wb, { bookType: \"xlsx\", type: \"array\" });\n    const data = new Blob([excelBuffer], { type: fileType });\n    FileSaver.saveAs(data, fileName + fileExtension);\n  };\n\n  return (\n    <button\n      onClick={(e) => exportToCSV(fileData, fileName)}\n      className={className}\n    >\n      {showIcon && <RiFileExcel2Fill />}\n      {btnName}\n    </button>\n  );\n};\n\nexport default ExportToExcel;\n","export default __webpack_public_path__ + \"static/media/mineduc.11a9ae1c.png\";","import jsPDF from \"jspdf\";\nimport { DATE } from \"../../utils/functions\";\nimport Logo from \"../../utils/mineduc.png\";\nrequire(\"jspdf-autotable\");\n\nexport const addFooters = (doc: any) => {\n  const pageCount = doc.internal.getNumberOfPages();\n\n  doc.setFont(\"helvetica\", \"italic\");\n  doc.setFontSize(8);\n  for (var i = 1; i <= pageCount; i++) {\n    doc.setPage(i);\n    doc.text(\n      \"Page \" + String(i) + \" of \" + String(pageCount),\n      doc.internal.pageSize.width / 2,\n      297,\n      {\n        align: \"center\",\n      }\n    );\n  }\n};\n\nexport type reportSettingsInterface = {\n  doneBy: string;\n  title: string;\n  subjectTitle: string;\n  subject: string;\n  institute: string;\n  period: string;\n  footer: string;\n  orientation?: \"p\" | \"l\";\n};\n\nexport const generatePDF = async (\n  reportSettings: reportSettingsInterface,\n  table: HTMLElement,\n  callBack: (status: boolean) => void\n) => {\n  callBack(true);\n  const orientation: \"p\" | \"l\" = reportSettings.orientation\n    ? reportSettings.orientation\n    : \"p\";\n  var lMargin: number = 20; //left margin in mm\n  var rMargin: number = 20; //right margin in mm\n  var pdfInMM: number = 185; // width of A4 in mm\n\n  //   var doc = new jsPDF(\"p\", \"mm\", \"a4\");\n  var doc: any = new jsPDF(orientation, \"mm\", \"a4\");\n\n  doc.setTextColor(95, 95, 95);\n  doc.setFontSize(28);\n  // doc.text(\n  //   this.props.reportTitle,\n  //   doc.internal.pageSize.getWidth() / 2,\n  //   30,\n  //   undefined,\n  //   \"center\"\n  // );\n  doc.addImage(Logo, \"png\", 20, 20, 10, 10);\n  doc.text(\"MINEDUC\", 32, 28.5, undefined, \"left\");\n  //   doc.setTextColor(19, 90, 152);\n  doc.setFontSize(26);\n  doc.text(\n    reportSettings.title,\n    doc.internal.pageSize.getWidth() / 2,\n    42.7,\n    undefined,\n    \"center\"\n  );\n\n  doc.setFontSize(20);\n  doc.text(\n    reportSettings.institute,\n    doc.internal.pageSize.getWidth() / 2,\n    53.7,\n    undefined,\n    \"center\"\n  );\n\n  var lines;\n  lines = doc.splitTextToSize(\n    reportSettings.subject,\n    pdfInMM - lMargin - rMargin\n  );\n  // if (reportSettings.position) {\n  // } else if (reportSettings.subject) {\n  //   lines = doc.splitTextToSize(\n  //     reportSettings.subject,\n  //     pdfInMM - lMargin - rMargin\n  //   );\n  // }\n\n  //   doc.setTextColor(0, 123, 255);\n  doc.setFontSize(16);\n  //   doc.text(lines, doc.internal.pageSize.getWidth() / 2, 45, {\n  //     maxWidth: 85,\n  //     align: \"center\",\n  //   });\n\n  var y = 63,\n    width;\n  doc.setTextColor(95, 95, 95);\n  doc.text(`${reportSettings.subjectTitle}: `, lMargin, y);\n  width = doc.getTextWidth(`${reportSettings.subjectTitle}: `);\n  // if (reportSettings.position) {\n  // } else if (reportSettings.position) {\n  //   doc.text(`Subject: `, lMargin, y);\n  //   width = doc.getTextWidth(\"Subject: \");\n  // }\n  // doc.setFontType(\"bold\");\n  doc.setTextColor(38, 38, 38);\n  for (var i = 0; i < lines.length; i++) {\n    if (y > 280) {\n      y = 10;\n      doc.addPage();\n    }\n    // doc.text(15, y, lines[i]);\n    doc.text(lines[i], lMargin + width, y);\n    y = y + 7;\n  }\n  doc.setTextColor(95, 95, 95);\n  doc.text(\"Period: \", lMargin, y + 3);\n  width = doc.getTextWidth(\"Period: \");\n  doc.setTextColor(38, 38, 38);\n  doc.text(reportSettings.period, lMargin + width, y + 3);\n\n  doc.autoTable({\n    html: table,\n    startY: 85,\n    margin: { horizontal: 20 },\n    cellPadding: 3, // Horizontal cell padding\n    // fontSize: 12,\n    rowHeight: 20,\n    // styles: { overflow: \"linebreak\" },\n    bodyStyles: { valign: \"top\" },\n    columnStyles: { email: { cellWidth: \"wrap\" } },\n    theme: \"striped\",\n    tableWidth: true,\n  });\n\n  doc.setFontSize(12);\n  let finalY = doc.lastAutoTable.finalY; // The y position on the page\n  doc.text(`Reported by: ${reportSettings.doneBy}`, lMargin, finalY + 15);\n  doc.text(\n    \"Report downloaded on \" + DATE(new Date().toString()),\n    lMargin,\n    finalY + 23\n  );\n\n  addFooters(doc);\n  await doc\n    .save(\n      `${\n        reportSettings.title +\n        \": \" +\n        reportSettings.subject +\n        \": \" +\n        reportSettings.period\n      }.pdf`,\n      { returnPromise: true }\n    )\n    .then(callBack(false));\n};\n","import React, { useState } from \"react\";\nimport {\n  MdCheckCircle,\n  MdRadioButtonUnchecked,\n  MdSearch,\n} from \"react-icons/md\";\nimport Loading from \"../../components/Loading/Loading\";\nimport {\n  PlansInterface,\n  SessionPlanInterface,\n  SessionPlanTypeStatus,\n} from \"../../interfaces\";\nimport { DATE } from \"../../utils/functions\";\nimport searchData from \"../../utils/search\";\n\nexport const isPlansActive = (plans: PlansInterface[]): PlansInterface[] => {\n  let today = new Date();\n  let activePlans: PlansInterface[] = [];\n  for (let plan of plans) {\n    let startDate = new Date(plan.start_date);\n    let endDate = new Date(plan.end_date);\n    if (\n      startDate.getTime() <= today.getTime() &&\n      endDate.getTime() >= today.getTime() &&\n      plan.type_status === SessionPlanTypeStatus.OPEN\n    ) {\n      activePlans = [...activePlans, plan];\n    }\n  }\n  return activePlans;\n};\n\ninterface ChooseSessionProps {\n  allSession: SessionPlanInterface[] | null;\n  setSelectSession: (period: SessionPlanInterface | \"all\") => void;\n  currentSelected: SessionPlanInterface | \"all\";\n  chooseAll: boolean;\n}\n\nconst ChooseSession = (props: ChooseSessionProps) => {\n  const [selectedPlan, setSelectedPlan] = useState<SessionPlanInterface | null>(\n    null\n  );\n  const [search, setSearch] = useState<string>(\"\");\n  const getSearch = (\n    period: SessionPlanInterface[],\n    searched: string\n  ): SessionPlanInterface[] => {\n    return searchData(period, searched) as SessionPlanInterface[];\n  };\n\n  return (\n    <div className=\"\">\n      <div className=\"px-3\">\n        <input\n          onChange={(e: React.ChangeEvent<HTMLInputElement>) =>\n            setSearch(e.target.value)\n          }\n          type=\"text\"\n          className=\"py-3 px-4 w-full rounded border border-gray-400 mb-3\"\n          placeholder=\"Search by year, name\"\n          disabled={props.allSession === null || props.allSession.length === 0}\n        />\n      </div>\n\n      <div className=\"bg-gray-100 px-3 pt-3 pb-2 rounded-b\">\n        {props.allSession === null ? (\n          <Loading />\n        ) : props.allSession.length === 0 ? (\n          <div className=\"flex flex-col text-gray-400 items-center justify-center mb-2 bg-white py-4\">\n            <MdSearch className=\"text-6xl\" />\n            <div className=\"flex flex-col items-center justify-center\">\n              <span>No session found!</span>\n            </div>\n          </div>\n        ) : (\n          <section>\n            {props.chooseAll && (\n              <div\n                className={`rounded border ${\n                  props.currentSelected === \"all\"\n                    ? \"bg-blue-50 border-blue-300\"\n                    : \"bg-white border-white \"\n                } group hover:border-blue-500 px-2 py-2 mb-2 flex flex-col md:flex-row items-start md:items-center md:justify-between`}\n              >\n                <div className=\"flex flex-row items-center gap-3\">\n                  {props.currentSelected === \"all\" ? (\n                    <MdCheckCircle className={`text-blue-500 text-4xl`} />\n                  ) : (\n                    <MdRadioButtonUnchecked\n                      className={`text-gray-300 text-4xl`}\n                    />\n                  )}\n                  <div className=\"flex flex-col\">\n                    <div className={`text-gray-600 font-bold`}>All session</div>\n                  </div>\n                </div>\n                <div\n                  onClick={() => {\n                    props.setSelectSession(\"all\");\n                  }}\n                  className=\"bg-gray-50 group-hover:bg-blue-600 font-semibold text-gray-400 group-hover:text-white rounded px-3 py-2 cursor-pointer\"\n                >\n                  Select\n                </div>\n              </div>\n            )}\n            {getSearch(props.allSession, search).map((item, i) => (\n              <div\n                key={i + 1}\n                className={`rounded border ${\n                  props.currentSelected !== \"all\" &&\n                  props.currentSelected._id === item._id\n                    ? \"bg-blue-50 border-blue-300\"\n                    : \"bg-white border-white \"\n                } group hover:border-blue-500 px-2 py-2 mb-2`}\n              >\n                <div className=\"flex flex-col md:flex-row items-start md:items-center md:justify-between \">\n                  <div className=\"flex flex-row items-center gap-3\">\n                    {props.currentSelected !== \"all\" &&\n                    props.currentSelected._id === item._id ? (\n                      <MdCheckCircle className={`text-blue-500 text-4xl`} />\n                    ) : (\n                      <MdRadioButtonUnchecked\n                        className={`text-gray-300 text-4xl`}\n                      />\n                    )}\n                    <div className=\"flex flex-col\">\n                      <div\n                        className={`${\n                          props.currentSelected !== \"all\" &&\n                          props.currentSelected._id === item._id\n                            ? \"text-blue-600\"\n                            : \"text-gray-600\"\n                        } font-bold`}\n                      >\n                        {item.session_plan_name}\n                      </div>\n                      <div className=\"text-sm text-gray-500\">\n                        <span>Status: </span>\n                        <span\n                          className={`${\n                            item.is_active === true\n                              ? \"text-gray-900 font-bold underline\"\n                              : \"text-gray-500 italic\"\n                          }`}\n                        >\n                          {item.is_active === true ? \"Active\" : \"Expired\"}\n                        </span>\n                      </div>\n                    </div>\n                  </div>\n                  <div className=\"flex flex-row items-center gap-2\">\n                    {(selectedPlan === null ||\n                      selectedPlan._id !== item._id) && (\n                      <div\n                        onClick={() => setSelectedPlan(item)}\n                        className=\"bg-gray-50 group-hover:bg-blue-100 font-semibold text-gray-400 group-hover:text-blue-600 rounded px-3 py-2 cursor-pointer\"\n                      >\n                        Details\n                      </div>\n                    )}\n                    <div\n                      onClick={() => {\n                        props.setSelectSession(item);\n                      }}\n                      className=\"bg-gray-50 group-hover:bg-blue-600 font-semibold text-gray-400 group-hover:text-white rounded px-3 py-2 cursor-pointer\"\n                    >\n                      Select\n                    </div>\n                    {selectedPlan !== null && selectedPlan._id === item._id && (\n                      <div\n                        onClick={() => setSelectedPlan(null)}\n                        className=\"bg-red-100 group-hover:bg-red-200 font-semibold text-red-600 group-hover:text-red-800 rounded px-3 py-2 cursor-pointer\"\n                      >\n                        Close\n                      </div>\n                    )}\n                  </div>\n                </div>\n                {selectedPlan !== null && selectedPlan._id === item._id && (\n                  <div className=\"bg-white rounded border border-blue-50 mt-2 animate__animated animate__fadeIn\">\n                    <table className=\"w-full\">\n                      <thead className=\"bg-blue-50\">\n                        <tr className=\"text-left\">\n                          <th className=\"px-3 py-3\">#</th>\n                          <th>Plan</th>\n                          <th>Start date</th>\n                          <th>Ending date</th>\n                          <th>Status</th>\n                        </tr>\n                      </thead>\n                      <tbody className=\"text-sm\">\n                        {selectedPlan !== null &&\n                          selectedPlan._id === item._id &&\n                          selectedPlan.plans.length > 0 &&\n                          item.plans.map((plan, i) => (\n                            <tr\n                              key={i + 1}\n                              className={`${\n                                isPlansActive(item.plans).find(\n                                  (itm) => itm.type_key === plan.type_key\n                                ) !== undefined\n                                  ? \"bg-blue-100 text-blue-600 font-bold\"\n                                  : \"\"\n                              } text-left border-b border-blue-50`}\n                            >\n                              <td className=\"px-3 py-1\">{i + 1}</td>\n                              <td>{plan.type_title}</td>\n                              <td>{DATE(plan.start_date, \"DD/MM/YYYY\")}</td>\n                              <td>{DATE(plan.end_date, \"DD/MM/YYYY\")}</td>\n                              <td>{plan.type_status}</td>\n                            </tr>\n                          ))}\n                      </tbody>\n                    </table>\n                  </div>\n                )}\n              </div>\n            ))}\n          </section>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default React.memo(ChooseSession);\n","export default __webpack_public_path__ + \"static/media/profile.a9136072.png\";"],"sourceRoot":""}
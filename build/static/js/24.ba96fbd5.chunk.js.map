{"version":3,"sources":["interfaces/user_by_type.ts","containers/AdminDashboard/CenteDashboard/CenterDashboardTitle.tsx","containers/AdminDashboard/CenteDashboard/RoomChart.tsx","containers/AdminDashboard/CenteDashboard/CenterDashboard.tsx","containers/SessionSettings/NoSession.tsx","components/Navigation/SideNavigation.tsx","containers/Admin/ExamReport/DoneExamList.tsx","actions/users.ts","containers/Admin/ExamReport/ExamReport.tsx","containers/Admin/ExamReport/CandiadtePerformancePerDistrict.tsx","containers/Admin/ExamReport/ExamPerformancePerDistrict.tsx","containers/Admin/ExamReport/ExamReportFilters.tsx","containers/Admin/ExamReport/ExamReportTitle.tsx","utils/ExportToExcel.tsx","utils/mineduc.png","components/DownloadPDF/rest.tsx","containers/SessionSettings/ChooseSession.tsx","containers/Admin/ExamReport/CandidatePerformance.tsx","containers/AdminDashboard/ChartComponents/VBarChart.tsx","containers/Admin/ExamReport/ExamList.tsx","containers/Admin/ExamReport/ExamReportModals.tsx","containers/UserManagement/UserList.tsx","containers/UserManagement/RoleList.tsx","containers/UserManagement/UserRole.tsx","shared/blank_profile.png","containers/AdminDashboard/DashboardLabelItem.tsx","containers/Admin/ExamReport/ExamPerformance.tsx","containers/AdminDashboard/ExamDashboard/ExamDashboardLabels.tsx","containers/AdminDashboard/ChartComponents/PieChart.tsx","containers/UserManagement/UserAccess.tsx","containers/AdminDashboard/ExamDashboard/ExamDashboardTitle.tsx","containers/AdminDashboard/ExamDashboard/ExamPreparationChart.tsx","containers/AdminDashboard/ExamDashboard/ExamProgressChart.tsx","containers/AdminDashboard/ExamDashboard/ExamPerformanceChart.tsx","containers/AdminDashboard/ExamDashboard/ExamDashboard.tsx","interfaces/center_report.ts","containers/Admin/CenterReport/DistrictList.tsx"],"names":["UserByTypeKeys","invigilatorReportContentKeyInterface","CenterDashboardTitle","props","useState","searchInput","setSearchInput","className","loading","value","thisPeriod","disabled","onChange","e","setThisPeriod","application_sessions","target","map","session","item","_id","session_plan_name","onClick","setChooseDistrict","selectedDistrict","district_name","setChooseExam","selectedExam","course_name","chooseDistrict","Modal","title","backDrop","theme","Themes","default","close","backDropClose","widthSizeClass","ModalSize","small","displayClose","padding","DistrictList","districtList","getDistrictInRoom","reportMainData","setSelectedDistrict","loadindRequest","isModal","chooseExam","extraLarge","courses","examsList","Loading","type","placeholder","FC_reportExamList","length","setSelectedExam","searchExamList","i","course_id","course_code","React","memo","RoomChart","distinctDistricts","district_ids","key","allData","includes","district_id","push","generateChartData","categories","labels","occupied","remaining","thisOccupation","thisRemaining","thisDefaultOccupation","thisDefaultRemaining","districtName","forEach","district","thisDistrict","filter","room_number","course_in_room","find","itemCourse","capacity","series","name","data","VBarChart","this","categoriesLabel","dataLabels","yaxisText","tooltipText","colors","defaultBar","borderRadius","horizontal","columnWidth","endingShape","stacked","Component","filterRoom","dataList","result","defaultValue","all","room_type","full","remain","invigilator","isEmptyOrSpaces","_CenterDashboard","setLoading","status","setState","setSelectSession","selectSession","setSelectedSession","thisSession","selectedSession","allSession","sessionId","auth","education_institution_id","loadReportMainData","institution_id","a","axios","get","API","APPLICATION","res","console","log","error","reportMainData_error","PushPopupAlert","errorToText","PopupAlertTheme","danger","loadInvigilator","callback","AUTH","INVIGILATOR","invigilatorData","invigilatorData_error","loadExamData","loadCourses","loadingExam","loadExamsList","componentDidMount","state","sessionPlan","allSessionPlans","GetAllSessionPlans","errorMsg","sessionData","warning","activeSession","is_active","roomDataFilter","element","formError","NoSession","ExamDashboardLabels","icon","FaLaptopHouse","iconColor","count","roomWithOccupation","labelsOnRow","PieChart","options","legend","show","position","horizontalAlign","fontSize","itemMargin","vertical","plotOptions","pie","donut","color","offsetY","fontFamily","formatter","val","total","label","w","globals","seriesTotals","reduce","b","width","CenterDashboard","connect","course","prepareExam","description","_SideNavigation","PageHasSubNav","componentWillUnmount","isAuthenticated","navActive","system","navigation","children","SideNavigation","NavToogle","MainItem","MdBrightness1","active","IconDefined","ExaminationProgressReportContentKeyInterface","examinationProgressIsChangeAllowed","COURSER_NAME","COURSE_CODE","PERIOD","STATUS","defaultExaminationProgressContent","SCHOOL_LEVEL","DATE","TIME","DURATION","displayStatus","FC_reportDoneExamList","allCourses","allExams","doneExams","ids","Object","prototype","hasOwnProperty","call","id","courser","doneExam","period","school_levels","exam","preparation_status","exam_status","FC_reportDoneExamListFilter","thisList","thisValue","searchExamData","objList","text","undefined","product","flag","prop","toString","toLowerCase","indexOf","DoneExamList","isSorted","setIsSorted","sortProperty","setSortProperty","sortOrder","setSortOrder","setSort","thisProperty","courseListData","examsListData","doneExamsData","filterExamProgress","colSpan","sortThisArray","capitalizeFirstLetter","exam_date","start_time","duration","getPeriodById","documentValidationStatus","url","userPageLimit","fetchUserAccess","page","dispatch","setAxiosToken","ActionTypes","FETCH_USERS_ACCESS","payload","users","next","previous","total_users","user_error","blockUserToSystem","user_id","BLOCK_USER_TO_SYSTEM","unBlockUserToSystem","UNBLOCK_USER_TO_SYSTEM","assignRoleToUserAccess","ASSIGN_ROLE_TO_USER","customizeUserAccess","CUSTOMIZE_USER_ACCESS","resetUserAccess","RESET_USER_ACCESS","reportTitleType","FC_CandiadtePerformancePerDistrictFilter","swap","exam_stastus","exam_location","j","user_total_marks","adminExamReport","candidatePerformanceData","FC_reportCandidatePerformanceData","reportCourseId","reportDistrictId","filterApplicantPerformance","searchCandidatePerformanceData","slice","controlRowsByStatus","user_name","national_id","user_email","user_phone","timestampToDate","timeAMPM","end_time","ReportUserExamStatus","Editing","Number","toFixed","FC_ExamPerformancePerDistrictPropsData","examsData","pass","failed","exam_ids","toLocaleLowerCase","_marks","candidatesByExam","_key","user","total_marks","user_status","pass_applicant","failed_applicant","applicants","NoResult","NoResultThemes","Dark","search","ExamReportFilters","reportTitle","EXAM_PERFORMANCE","EXAM_DISTRICT_PERFORMANCE","EXAM_PREPARATION","setFilterPreparation","filterPreparation","EXAMINATION_PROGRESS","setFilterExamProgress","APPLICANTS_PERFORMANCE","APPLICANTS_DISTRICT_PERFORMANCE","setFilterApplicantPerformance","values","index","schoolLevels","SetReportDistrictId","changeReport","setChangeReport","districtModal","setDistrictModal","excelModal","setExcelModal","courseModal","setCourseModal","useEffect","dataToPrint","updateExamToPrint","setGenerateReportModal","reportType","downloading","downlaodPDF","ExamReportModals","modalFor","ModalForTypes","generateReportModal","modalState","changeModalState","excelReportTitle","setExcelReportTitle","examsToPrint","examPreparationReportContent","setExamPreparationReportContent","examPerformanceToPrint","examPerformanceReportContent","setExamPerformanceReportContent","exam30PerformanceToPrint","exam30PerformanceReportContent","setExam30PerformanceReportContent","examinationProgressToPrint","examinationProgressReportContent","setExaminationProgressExamPerformanceReportContent","candidateExamPerformanceToPrint","candidateExamPerformanceReportContent","setCandidateExamPerformanceReportContent","candidate30ExamPerformanceToPrint","candidate30ExamPerformanceReportContent","setCandidate30ExamPerformanceReportContent","setReportTitle","choose_district","districtId","loadExaminationProgress","DoneExam","selectedEducationCategory","choose_exam","AllExamData","finished","thisExam","getExamByCourseId","periods","period_id","loadAllExams","selected_period","_ExamReport","setLoadingCourses","loadingCourses","setLoadingExams","loadingExams","setDownloading","setLoadingDoneExam","loadingDoneExam","setLoadingCandidatesExamPerformance","loadingCandidatesExamPerformance","setLoadingExamPerformance","loadingExamPerformance","setLoadingSettings","loadingSettings","setSelectPeriod","selectPeriod","setSelectedPeriod","setExamsToPrint","setExamPerformanceToPrint","setExam30PerformanceToPrint","setExaminationProgressToPrint","setCandidateExamPerformanceToPrint","setCandidate30ExamPerformanceToPrint","selectDefaultSession","active_period","onPeriodChange","FD_GetSessions","FC_GetAllSessionByInstitution","msg","FC_HasInstitute","education_categories","loadEducationCategories","setSelectedEducationCategory","education_institute_id","thisEducation","loadSchoolLevels","loadDoneExam","loadPerfomranceExam","loadCandidatesExamPerformance","order","sortBy","ReportGetCandidatePerformanceSortTypes","getLevelbyId","level_id","school_level_id","getCourses","search_all","level","levelDetail","education_institute","arrayNew","n","school_level","findLevel","school_level_name","dataArray","exam_period","exam_time","exam_duration","ExamPerformance","FC_reportExamPerformanceData","exam_performance","CandidatesExamPerformance","applicant_id","exam_start_time","exam_end_time","performance_status","applicant_name","email","phone","marks","addToTitle","document","querySelectorAll","table","getElementById","reportSettings","doneBy","fname","lname","subjectTitle","subject","footer","institute","education_category_title","orientation","generatePDF","defaultExamPreparationReportContent","defaultExamPerformanceContent","defaultCandidateExamPerformanceContent","capitalizeFirstWord","ExamList","examsPerformanceData","Light","component","CandidatePerformance","applicationPeriods","ExamReport","ExportToExcel","fileData","fileName","btnName","showIcon","apiData","wb","Sheets","XLSX","json_to_sheet","SheetNames","excelBuffer","bookType","Blob","FileSaver","exportToCSV","require","addFooters","doc","pageCount","internal","getNumberOfPages","setFont","setFontSize","setPage","String","pageSize","align","callBack","lMargin","jsPDF","setTextColor","addImage","Logo","getWidth","lines","splitTextToSize","pdfInMM","y","getTextWidth","addPage","autoTable","html","startY","margin","cellPadding","rowHeight","bodyStyles","valign","columnStyles","cellWidth","tableWidth","finalY","lastAutoTable","Date","save","returnPromise","then","isPlansActive","plans","today","activePlans","plan","startDate","start_date","endDate","end_date","getTime","type_status","SessionPlanTypeStatus","OPEN","ChooseSession","searched","selectedPlan","setSelectedPlan","setSearch","chooseAll","currentSelected","searchData","itm","type_key","type_title","CandidateExamPerformanceReportContentKeyInterface","candidateExamPerformanceIsChangeAllowed","APPLICANT","N_ID","EMAIL","PHONE","MARKS","START_TIME","END_TIME","user_info","n_id","phone_number","FC_reportCandidatePerformanceDataFilter","chart","events","dataPointSelection","event","chartContext","config","labelClicked","dataPointIndex","FC_LoadSelected","seriesIndex","bar","enabled","xaxis","rotate","tickPlacement","yaxis","fill","opacity","tooltip","grid","left","right","noData","verticalAlign","setOptions","chartClicked","zoom","autoScaleYaxis","height","chartHeight","examPreparationReportContentKeyInterface","examPreparationIsChangeAllowed","FC_reportExamListFilter","thisStatus","createdAt","FC_DistinctDistrict","locations","flags","output","l","roomLocation","getAllRoom","SetReportCourseId","setFormError","selectAll","setSelectAll","loadingLocation","setLoadingLocation","setError","setDistrictId","isChangeAllowed","examPerformanceIsChangeAllowed","updateExamPerformanceReportContent","findIndex","newArray","isSelectAllNeeded","updateCandidateExamPerformanceReportContent","showGenerateBtn","medium","updateExamPreparationReportContent","updateExaminationProgressReportContent","currentState","resetReportContent","isAllDistrictAllowed","LocationsInArray","selectDistrict","ModalState","RoleList","roleList","setChooseRole","role","handleSelectRole","system_user_role_id","UserRole","setRoleId","roleId","setSelectedRole","selectedRole","setProvinceId","provinceId","setCenterId","centerId","setRoomId","roomId","setLoadingForm","loadingForm","setInstituteId","instituteId","setLoadingRequest","loadingRequest","chooseRole","setDefaultState","default_access","LOAD_province","LOAD_district","district_required","roomList","distinctDistrict","province_id","room_required","room_id","center_id","userInfo","vvvvv","role_id","TYPE","tableData","access","task","permitted","create","view","update","delete","Math","random","assignRoleToUser","preventDefault","window","confirm","education_institution_required","formData","school_id","post","currentPage","setChangeRole","success","role_error","location","districts","keyDistrict","distinctCenter","rooms","distinctRoom","onSubmit","province","province_name","center","center_name","room","room_name","Table","columns","columnTitle","alignText","rows","pagination","searchBG","thColor","tableId","getUserById","userId","LocationData","locationTemp","p","d","centers","c","r","UserList","setManageUserId","manageUserId","setLoadingRequestType","loadingRequestType","setRoomList","setRoomTables","roomTable","setCurrentAccess","currentAccess","setUserAccess","userAccess","allRoom","setLoadingUser","loadingUser","pageNumber","setManageUser","sex","getRoleById","blockUser","actionType","patch","info","blockUser_ERROR","restUserAccess","USER","resetedAccess","reseting_user_access","DATA_GetUser","DATA_GetRoleById","DATA_ThisRoom","manageUser","src","photo","profile","alt","getInstituteById","custome_access","changeRole","UserAccess","DashboardLabelItem","FaUsers","countOver","toAnyDigit","displayNumbers","examPerformanceReportContentKeyInterface","PERFORMANCE","examPerformance","answer_sheet_id","Fragment","numCols","childrenPosition","_UserAccess","setViewPermission","viewPermission","setLoadindRequest","setCreatePermission","createPermission","setUpdatePermission","updatePermission","setDeletePermission","deletePermission","setLoadind","overrideUserAccess","overideAccess","findCustom","custom","handleCustomization","custome_user_access_id","customize_access","to","checked","ExamDashboardTitle","education","loadingEducation","setThisEducation","ExamPreparationChart","examPreparationProgress","ExamProgressChart","progressData","ExamPerformanceChart","loadCoursesByInstitute","courseList","completeExams","remainingExams","dataFound","loadExamPreparationProgress","isDatePast","dateParam","date","moment","format","todayDate","pastDate","diff","loadExamAttendance","applicantList","_ExamDashboard","setChangingPeriod","changingPeriod","loadByPeriods","sessions","action","FaBookOpen","ExamDashboard","centerReportContentKeyInterface","invigilators","thisRoom","getRoomOccupation","roles_to_users","isUsed","bgWhite"],"mappings":"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","file":"static/js/24.ba96fbd5.chunk.js","sourcesContent":["export enum UserByTypeKeys {\n  INVIGILATOR = \"room_id\",\n  HEAD_TEACHER = \"school_id\",\n  DIRECTOR_OF_EDUCATION = \"district_id\",\n  INSTITUTE = \"education_institution_id\",\n}\n\nexport interface UserByTypeInterfaceAPI {\n  _id: string;\n  roles_to_users: {\n    key: string;\n    system_user_role_id: string;\n    district_id: string;\n    school_id: string;\n    room_id: string;\n    status: number;\n    access: boolean;\n    assigned_date: string;\n    education_institution_id?: string;\n  };\n  n_id: string;\n  phone_number: string;\n  email: string;\n  user_info: {\n    document_type: string;\n    issue_number: string;\n    date_of_issue: string;\n    date_of_expiry: string;\n    place_of_issue: string;\n    application_number: string;\n    fname: string;\n    lname: string;\n    father_names: string;\n    mother_names: string;\n    sex: string;\n    date_of_birth: string;\n    place_of_birth: string;\n    country_of_birth: string;\n    village_id: string;\n    village: string;\n    cell: string;\n    sector: string;\n    district: string;\n    province: string;\n    civil_status: string;\n    spouse: null;\n    status: string;\n    photo: string;\n  };\n}\n\nexport interface UserByTypeInterface {\n  _id: string; // CAN BE ROOM ID + SCHOOL ID, DISTRICT ID\n  role_id: string | null;\n  role_name: string | null;\n  role_key: UserByTypeKeys;\n  national_id: string | null;\n  phone_number: string | null;\n  email: string | null;\n  first_name: string | null;\n  last_name: string | null;\n  gender: string | null;\n  photo: string | null;\n  province_id: string;\n  province_name: string;\n  district_id: string;\n  district_name: string;\n  center_id: string;\n  center_name: string;\n  room_id: string;\n  room_name: string;\n  school_id: string;\n  school_name: string;\n}\n\n// EXPORT INTERFACES ====================\nexport interface invigilatorToPrintInterface {\n  no: number;\n  province_name: string;\n  district_name: string;\n  center_name: string;\n  room_name: string;\n  national_id: string;\n  email: string;\n  first_name: string;\n  last_name: string;\n  phone_number: string;\n  gender: string;\n}\n\nexport enum invigilatorReportContentKeyInterface {\n  // USER INFO =====================\n  first_name = \"first_name\",\n  last_name = \"last_name\",\n  email = \"email\",\n  phone_number = \"phone_number\",\n  gender = \"gender\",\n  national_id = \"national_id\",\n  // ROOM INFO =====================\n  province_name = \"province_name\",\n  district_name = \"district_name\",\n  center_name = \"center_name\",\n  room_name = \"room_name\",\n}\n\nexport interface invigilatorReportContentInterface {\n  key: invigilatorReportContentKeyInterface;\n  title: string;\n  status: boolean;\n}\n","import React, { Fragment, useState } from \"react\";\nimport { AiFillDashboard } from \"react-icons/ai\";\nimport { CgFileDocument } from \"react-icons/cg\";\nimport { FiEdit } from \"react-icons/fi\";\nimport Loading from \"../../../components/Loading/Loading\";\nimport Modal, { ModalSize, Themes } from \"../../../components/Modal/Modal\";\nimport { course, SessionPlanInterface } from \"../../../interfaces\";\nimport {\n  centerReportInterface,\n  getDistrictInRoom,\n  roomDistrictInterface,\n} from \"../../../interfaces/center_report\";\nimport { ExamItemResponse } from \"../../../interfaces/prepare_exam\";\nimport DistrictList from \"../../Admin/CenterReport/DistrictList\";\nimport {\n  examPreparationStateInterface,\n  FC_reportExamList,\n  searchExamList,\n} from \"../../Admin/ExamReport/ExamList\";\n\ntype CenterReportTitleProps = {\n  // FOR SETTINGS ==============================\n  loading: boolean;\n\n  //   FOR APPLICATION SESSION ============================\n  thisPeriod: string;\n  setThisPeriod: (\n    allSession: SessionPlanInterface[],\n    sessionId: string\n  ) => void;\n  application_sessions: SessionPlanInterface[];\n  chooseDistrict: boolean;\n  setChooseDistrict: (status: boolean) => void;\n  selectedDistrict: roomDistrictInterface | \"all\";\n  setSelectedDistrict: (data: roomDistrictInterface | \"all\") => void;\n  chooseExam: boolean;\n  setChooseExam: (status: boolean) => void;\n  selectedExam: examPreparationStateInterface | \"all\";\n  setSelectedExam: (data: examPreparationStateInterface | \"all\") => void;\n  reportMainData: centerReportInterface[];\n  examsList: ExamItemResponse[] | null;\n  courses: course[] | null;\n};\n\nconst CenterDashboardTitle: React.FC<CenterReportTitleProps> = (props) => {\n  const [searchInput, setSearchInput] = useState<string>(\"\");\n\n  return (\n    <Fragment>\n      <div className=\"mt-3 rounded flex flex-col md:flex-row md:justify-between items-start\">\n        <div className=\"flex flex-row items-center gap-3 mb-2\">\n          <AiFillDashboard className=\"text-7xl text-blue-600 hidden md:block\" />\n          <div className=\"flex flex-col\">\n            <span className=\"text-blue-600 text-3xl font-bold\">\n              Center Dashboard\n            </span>\n          </div>\n        </div>\n\n        {/* FILTER SECTION PERIOD && EDUCATION */}\n        <section className=\"w-full flex flex-col items-end md:w-auto my-2 md:my-0\">\n          <div>\n            <select\n              className={`bg-white text-gray-600 border border-gray-400 rounded p-2 focus:outline-none ${\n                props.loading && \"cursor-wait\"\n              }`}\n              value={props.thisPeriod}\n              disabled={props.loading}\n              onChange={(e) => {\n                props.setThisPeriod(props.application_sessions, e.target.value);\n              }}\n            >\n              {props.application_sessions.map((session, item) => (\n                <option key={session._id + item} value={session._id}>\n                  {session.session_plan_name}\n                </option>\n              ))}\n            </select>\n          </div>\n          {/* DISTRICT sections */}\n          <div className=\"mt-1 w-full\">\n            <div\n              onClick={() => props.setChooseDistrict(true)}\n              className=\"font-bold bg-gray-50 border border-gray-400 rounded py-2 cursor-pointer text-xs px-2 hover:underline justify-between text-gray-600 w-full flex flex-row items-center animate__animated animate__zoomIn\"\n            >\n              {props.selectedDistrict !== \"all\"\n                ? `${props.selectedDistrict.district_name}`\n                : \"All district\"}\n              <FiEdit className=\"text-lg text-gray-600\" />\n            </div>\n          </div>\n          {/* end DISTRICT sections */}\n\n          {/* DISTRICT sections */}\n          <div className=\"mt-1 w-full\">\n            <div\n              onClick={() => props.setChooseExam(true)}\n              className=\"font-bold bg-gray-50 border border-gray-400 rounded py-2 cursor-pointer text-xs px-2 hover:underline justify-between text-gray-600 w-full flex flex-row items-center animate__animated animate__zoomIn\"\n            >\n              {props.selectedExam !== \"all\"\n                ? `${props.selectedExam.course_name}`\n                : \"All exam\"}\n              <FiEdit className=\"text-lg text-gray-600\" />\n            </div>\n          </div>\n          {/* end DISTRICT sections */}\n        </section>\n        {/* END FILTER SECTION PERIOD && EDUCATION */}\n      </div>\n\n      {props.chooseDistrict && (\n        <Modal\n          title={\n            <div className=\"flex flex-row gap-4 items-center\">\n              <CgFileDocument className=\"text-3xl text-blue-600\" />\n              <div className=\"flex flex-col\">\n                <span className=\"font-bold text-xl text-blue-600\">\n                  Choose district\n                </span>\n              </div>\n            </div>\n          }\n          backDrop={true}\n          theme={Themes.default}\n          close={() => props.setChooseDistrict(false)}\n          backDropClose={true}\n          widthSizeClass={ModalSize.small}\n          displayClose={true}\n          padding={{ title: true }}\n        >\n          <DistrictList\n            setChooseDistrict={props.setChooseDistrict}\n            districtList={getDistrictInRoom(props.reportMainData)}\n            setSelectedDistrict={props.setSelectedDistrict}\n            loadindRequest={props.loading}\n            isModal={true}\n            selectedDistrict={props.selectedDistrict}\n          />\n        </Modal>\n      )}\n\n      {props.chooseExam && (\n        <Modal\n          title={\n            <div className=\"flex flex-row gap-4 items-center\">\n              <CgFileDocument className=\"text-5xl text-blue-600\" />\n              <div className=\"flex flex-col\">\n                <span className=\"font-bold text-xl text-blue-600\">\n                  Choose exam\n                </span>\n              </div>\n            </div>\n          }\n          backDrop={true}\n          theme={Themes.default}\n          close={() => props.setChooseExam(false)}\n          backDropClose={true}\n          widthSizeClass={ModalSize.extraLarge}\n          displayClose={true}\n          padding={{ title: true }}\n        >\n          {props.courses === null || props.examsList === null ? (\n            <Loading />\n          ) : (\n            <div className=\"px-2 pb-2\">\n              <div className=\"w-full py-2\">\n                <input\n                  onChange={(e) => setSearchInput(e.target.value)}\n                  type=\"text\"\n                  value={searchInput}\n                  placeholder=\"Search...\"\n                  className=\"w-full bg-white py-2 px-3 rounded border border-gray-400\"\n                  disabled={\n                    FC_reportExamList(props.courses, props.examsList).length <=\n                    0\n                      ? true\n                      : false\n                  }\n                />\n              </div>\n              <div\n                onClick={() => {\n                  props.setSelectedExam(\"all\");\n                  props.setChooseExam(false);\n                }}\n                className={`flex items-center border rounded px-2 py-2 cursor-pointer group hover:bg-blue-100 hover:border-blue-500 mb-3 justify-between ${\n                  props.selectedExam === \"all\"\n                    ? \"bg-blue-50 border-blue-400\"\n                    : \"bg-white border-gray-200\"\n                }`}\n              >\n                <div>\n                  <div className=\"text-sm font-medium italic\">\n                    code: <span className=\"text-blue-500\">-</span>\n                  </div>\n                  <div className=\"font-bold text-lg\">All exams</div>\n                </div>\n                <div className=\"btn bg-blue-400 group-hover:bg-blue-600 text-white mr-2\">\n                  Choose\n                </div>\n              </div>\n              {searchExamList(\n                FC_reportExamList(props.courses, props.examsList),\n                searchInput\n              ).map((item, i) => (\n                <div\n                  onClick={() => {\n                    props.setSelectedExam(item);\n                    props.setChooseExam(false);\n                  }}\n                  key={i + 1}\n                  className={`flex items-center border rounded px-2 py-2 cursor-pointer group hover:bg-blue-100 hover:border-blue-500 mb-3 justify-between ${\n                    props.selectedExam !== \"all\" &&\n                    props.selectedExam.course_id === item.course_id\n                      ? \"bg-blue-50 border-blue-400\"\n                      : \"bg-white border-gray-200\"\n                  }`}\n                >\n                  <div>\n                    <div className=\"text-sm font-medium italic\">\n                      code:{\" \"}\n                      <span className=\"text-blue-500\">{item.course_code}</span>\n                    </div>\n                    <div className=\"font-bold text-lg\">{item.course_name}</div>\n                  </div>\n                  <div className=\"btn bg-blue-400 group-hover:bg-blue-600 text-white mr-2\">\n                    Choose\n                  </div>\n                </div>\n              ))}\n            </div>\n          )}\n        </Modal>\n      )}\n    </Fragment>\n  );\n};\n\nexport default React.memo(CenterDashboardTitle);\n","import React, { Component, Fragment } from \"react\";\nimport { centerReportInterface } from \"../../../interfaces/center_report\";\nimport { examPreparationStateInterface } from \"../../Admin/ExamReport/ExamList\";\nimport VBarChart from \"../ChartComponents/VBarChart\";\n\ntype RoomChartProps = {\n  allData: centerReportInterface[];\n  // selectedDistrict: roomDistrictInterface | \"all\";\n  // selectedSession: SessionPlanInterface | null;\n  selectedExam: examPreparationStateInterface | \"all\";\n};\n\nexport class RoomChart extends Component<RoomChartProps> {\n  // generateChartData = (): {\n  //   series: {\n  //     name: string;\n  //     data: number[];\n  //   }[];\n  //   categories: (string | string[])[];\n  //   labels: string[];\n  // } => {\n  //   let categories: (string | string[])[] = [],\n  //     labels: string[] = [],\n  //     occupied: number[] = [],\n  //     remaining: number[] = [],\n  //     district_ids: string[] = [];\n  //   for (const key in this.props.allData) {\n  //     if (\n  //       !district_ids.includes(this.props.allData[key]._id) &&\n  //       this.props.allData[key].room_number !== 0\n  //     ) {\n  //       district_ids.push(this.props.allData[key]._id);\n  //       occupied.push(this.props.allData[key].occupied);\n  //       remaining.push(\n  //         this.props.allData[key].capacity - this.props.allData[key].occupied\n  //       );\n  //       categories.push([\n  //         this.props.allData[key].district_name,\n  //         this.props.allData[key].center_name,\n  //         this.props.allData[key].room_number.toString(),\n  //       ]);\n  //       labels.push(\n  //         this.props.allData[key].district_name +\n  //           \" \" +\n  //           this.props.allData[key].center_name +\n  //           \" \" +\n  //           this.props.allData[key].room_number.toString()\n  //       );\n  //     }\n  //   }\n  //   return {\n  //     series: [\n  //       {\n  //         name: \"Occupied room\",\n  //         data: occupied,\n  //       },\n  //       {\n  //         name: \"Remaining room\",\n  //         data: remaining,\n  //       },\n  //     ],\n  //     categories,\n  //     labels,\n  //   };\n  // };\n\n  distinctDistricts = (): string[] => {\n    let district_ids: string[] = [];\n    for (const key in this.props.allData) {\n      if (!district_ids.includes(this.props.allData[key].district_id)) {\n        district_ids.push(this.props.allData[key].district_id);\n      }\n    }\n    return district_ids;\n  };\n\n  generateChartData = (): {\n    series: {\n      name: string;\n      data: number[];\n    }[];\n    categories: (string | string[])[];\n    labels: string[];\n  } => {\n    let categories: (string | string[])[] = [],\n      labels: string[] = [],\n      occupied: number[] = [],\n      remaining: number[] = [],\n      district_ids: string[] = [];\n    let thisOccupation: number = 0,\n      thisRemaining: number = 0,\n      thisDefaultOccupation: number = 0,\n      thisDefaultRemaining: number = 0,\n      districtName: string = \"\";\n    this.distinctDistricts().forEach((district) => {\n      const thisDistrict = this.props.allData.filter(\n        (item) => item.district_id === district\n      );\n\n      for (const key in thisDistrict) {\n        if (thisDistrict[key].room_number !== 0) {\n          districtName = thisDistrict[key].district_name;\n          const selectedExam = this.props.selectedExam;\n          if (selectedExam !== \"all\") {\n            thisDefaultOccupation = thisDistrict[key].course_in_room.find(\n              (itemCourse) => itemCourse.course_id === selectedExam.course_id\n            )\n              ? thisDistrict[key].course_in_room.find(\n                  (itemCourse) =>\n                    itemCourse.course_id === selectedExam.course_id\n                )!.occupied\n              : 0;\n            thisDefaultRemaining =\n              thisDistrict[key].capacity -\n              (thisDistrict[key].course_in_room.find(\n                (itemCourse) => itemCourse.course_id === selectedExam.course_id\n              )\n                ? thisDistrict[key].course_in_room.find(\n                    (itemCourse) =>\n                      itemCourse.course_id === selectedExam.course_id\n                  )!.occupied\n                : 0);\n          } else {\n            thisDefaultOccupation = thisDistrict[key].occupied;\n            thisDefaultRemaining =\n              thisDistrict[key].capacity - thisDistrict[key].occupied;\n          }\n          thisOccupation += thisDefaultOccupation;\n          thisRemaining += thisDefaultRemaining;\n        }\n      }\n      if (!district_ids.includes(district)) {\n        district_ids.push(district);\n        occupied.push(thisOccupation);\n        remaining.push(thisRemaining);\n        categories.push([districtName]);\n        labels.push(districtName);\n      }\n      districtName = \"\";\n      thisRemaining = 0;\n      thisOccupation = 0;\n    });\n\n    return {\n      series: [\n        {\n          name: \"Occupied room\",\n          data: occupied,\n        },\n        {\n          name: \"Remaining room\",\n          data: remaining,\n        },\n      ],\n      categories,\n      labels,\n    };\n  };\n\n  render() {\n    return (\n      <Fragment>\n        <div className=\"w-full\">\n          <VBarChart\n            labels={this.generateChartData().labels}\n            categoriesLabel={this.generateChartData().categories}\n            dataLabels={true}\n            yaxisText=\" sit(s)\"\n            tooltipText=\" sit(s)\"\n            series={this.generateChartData().series}\n            colors={[\"#059669\", \"#374151\"]}\n            defaultBar={{\n              borderRadius: 4,\n              horizontal: true,\n              columnWidth: \"95%\",\n              endingShape: \"rounded\",\n            }}\n            // chartHeight={\n            //   this.generateChartData().series.length <= 10 ? 550 : 1000\n            // }\n            stacked={true}\n          />\n        </div>\n      </Fragment>\n    );\n  }\n}\n\nexport default React.memo(RoomChart);\n","import axios from \"axios\";\nimport React, { Component } from \"react\";\nimport { FaLaptopHouse } from \"react-icons/fa\";\nimport { connect } from \"react-redux\";\nimport {\n  Auth,\n  loadCourses,\n  loadExamsList,\n  PushPopupAlert,\n} from \"../../../actions\";\nimport { GetAllSessionPlans } from \"../../../actions/session\";\nimport { PopupAlertData } from \"../../../components/Alert/Popup\";\nimport { SessionPlanInterface, course } from \"../../../interfaces\";\nimport {\n  centerReportInterface,\n  centerReportInterface_NEW,\n  roomDistrictInterface,\n  roomWithOccupation,\n} from \"../../../interfaces/center_report\";\nimport { PopupAlertTheme } from \"../../../interfaces/popupAlert\";\nimport { ExamItemResponse } from \"../../../interfaces/prepare_exam\";\nimport {\n  UserByTypeInterfaceAPI,\n  UserByTypeKeys,\n} from \"../../../interfaces/user_by_type\";\nimport { StoreState } from \"../../../reducers\";\nimport { SessionPlanReducerInterface } from \"../../../reducers/session\";\nimport { isEmptyOrSpaces } from \"../../../shared/dataTest\";\nimport { API } from \"../../../utils/api\";\nimport { errorToText } from \"../../../utils/errors\";\nimport { examPreparationStateInterface } from \"../../Admin/ExamReport/ExamList\";\nimport NoSession from \"../../SessionSettings/NoSession\";\nimport PieChart from \"../ChartComponents/PieChart\";\nimport ExamDashboardLabels from \"../ExamDashboard/ExamDashboardLabels\";\nimport CenterDashboardTitle from \"./CenterDashboardTitle\";\nimport RoomChart from \"./RoomChart\";\n\nexport const filterRoom = (\n  dataList: centerReportInterface_NEW[],\n  thisDistrict: roomDistrictInterface | \"all\"\n): {\n  all: centerReportInterface_NEW[];\n  full: centerReportInterface_NEW[];\n  remain: centerReportInterface_NEW[];\n  invigilator: centerReportInterface_NEW[];\n} => {\n  let result: centerReportInterface_NEW[] = dataList,\n    defaultValue: boolean = false;\n  if (thisDistrict !== \"all\") {\n    // roomWithOccupation;\n    result = result.filter(\n      (item) => item.district_id === thisDistrict.district_id\n    );\n  }\n  // RETURN DEFAULT VALUES ====================\n  else {\n    defaultValue = true;\n  }\n  return defaultValue\n    ? {\n        all: dataList.filter((item) => item.room_type !== \"Default\"),\n        full: dataList.filter(\n          (item) =>\n            item.room_type !== \"Default\" && item.occupied >= item.capacity\n        ),\n        remain: dataList.filter(\n          (item) =>\n            item.room_type !== \"Default\" && item.occupied < item.capacity\n        ),\n        invigilator: dataList.filter(\n          (item) =>\n            item.room_type !== \"Default\" && !isEmptyOrSpaces(item.invigilator)\n        ),\n      }\n    : {\n        all: result,\n        full: result.filter((item) => item.occupied >= item.capacity),\n        remain: result.filter((item) => item.occupied < item.capacity),\n        invigilator: dataList.filter(\n          (item) => !isEmptyOrSpaces(item.invigilator)\n        ),\n      };\n};\n\ninterface CenterDashboardProps {\n  //   REDUX ############################\n  auth: Auth;\n  sessionPlan: SessionPlanReducerInterface;\n  courses: course[] | null;\n  examsList: ExamItemResponse[] | null;\n  GetAllSessionPlans: Function;\n  loadCourses: Function;\n  loadExamsList: Function;\n  PushPopupAlert: (alert: PopupAlertData) => void;\n}\n\ninterface CenterDashboardState {\n  loading: boolean;\n  loadingExam: boolean;\n  selectSession: boolean;\n  selectedSession: SessionPlanInterface | null;\n  reportMainData: centerReportInterface[] | null;\n  formError: {\n    element: string;\n    msg: string;\n  } | null;\n  selectedDistrict: roomDistrictInterface | \"all\";\n  chooseDistrict: boolean;\n  invigilatorData: UserByTypeInterfaceAPI[] | null;\n  selectedExam: examPreparationStateInterface | \"all\";\n  chooseExam: boolean;\n}\n\nclass _CenterDashboard extends Component<\n  CenterDashboardProps,\n  CenterDashboardState\n> {\n  constructor(props: CenterDashboardProps) {\n    super(props);\n    this.state = {\n      loading: true,\n      loadingExam: true,\n      selectSession: false,\n      selectedSession: null,\n      reportMainData: null,\n      formError: null,\n      selectedDistrict: \"all\",\n      chooseDistrict: false,\n      invigilatorData: null,\n      chooseExam: false,\n      selectedExam: \"all\",\n    };\n  }\n\n  setLoading = (status: boolean) => {\n    this.setState({ loading: status });\n  };\n\n  setSelectSession = (status: boolean) => {\n    this.setState({ selectSession: status });\n  };\n\n  setSelectedSession = (thisSession: SessionPlanInterface) => {\n    this.setState({ selectedSession: thisSession });\n  };\n\n  setThisPeriod = (allSession: SessionPlanInterface[], sessionId: string) => {\n    let thisSession: SessionPlanInterface | undefined = allSession.find(\n      (item) => item._id === sessionId\n    );\n    if (thisSession && this.props.auth.education_institution_id) {\n      this.setState({ selectedSession: thisSession });\n      this.loadReportMainData(\n        this.props.auth.education_institution_id,\n        thisSession\n      );\n    }\n  };\n\n  loadReportMainData = async (\n    institution_id: string,\n    thisSession: SessionPlanInterface\n  ) => {\n    try {\n      const res = await axios.get<centerReportInterface[]>(\n        `${API.APPLICATION}/room/currentroomoccupation/${institution_id}/${thisSession._id}`\n      );\n      console.log(\"====================================\");\n      console.log({ reportMainData: res.data });\n      console.log(\"====================================\");\n      this.setState({ reportMainData: res.data });\n    } catch (error) {\n      console.error({ reportMainData_error: error });\n      // callback(false, errorToText(error));\n      this.props.PushPopupAlert({\n        title: errorToText(error),\n        theme: PopupAlertTheme.danger,\n      });\n    }\n  };\n\n  loadInvigilator = async (callback: Function) => {\n    callback(true);\n    try {\n      const res = await axios.get<UserByTypeInterfaceAPI[]>(\n        `${API.AUTH}/userbytype/${UserByTypeKeys.INVIGILATOR}`\n      );\n      console.log(\"====================================\");\n      console.log({ invigilatorData: res.data });\n      console.log(\"====================================\");\n      this.setState({ invigilatorData: res.data });\n      callback(false);\n    } catch (error) {\n      console.error({ invigilatorData_error: error });\n      // callback(false, errorToText(error));\n      this.props.PushPopupAlert({\n        title: errorToText(error),\n        theme: PopupAlertTheme.danger,\n      });\n    }\n  };\n\n  loadExamData = () => {\n    if (this.props.courses === null || this.props.courses.length === 0) {\n      this.props.loadCourses((status: boolean) => {\n        this.setState({ loadingExam: status });\n      });\n    } else {\n      this.setState({ loadingExam: false });\n    }\n\n    if (this.props.examsList === null || this.props.examsList.length === 0) {\n      this.props.loadExamsList((status: boolean) => {\n        this.setState({ loadingExam: status });\n      });\n    } else {\n      this.setState({ loadingExam: false });\n    }\n  };\n\n  componentDidMount = () => {\n    if (this.props.auth.education_institution_id) {\n      if (this.state.invigilatorData === null) {\n        this.loadInvigilator(this.setLoading);\n      }\n\n      if (\n        this.props.sessionPlan.allSessionPlans === null ||\n        this.props.sessionPlan.allSessionPlans.length === 0\n      ) {\n        this.props.GetAllSessionPlans(\n          (\n            status: boolean,\n            errorMsg: string,\n            sessionData: SessionPlanInterface[]\n          ) => {\n            this.setLoading(status);\n            if (!status) {\n              if (!isEmptyOrSpaces(errorMsg)) {\n                this.props.PushPopupAlert({\n                  title: errorMsg,\n                  theme: PopupAlertTheme.warning,\n                });\n              }\n\n              if (sessionData && sessionData.length > 0) {\n                let activeSession = sessionData.find((item) => item.is_active);\n                if (activeSession) {\n                  this.setSelectedSession(activeSession);\n                  if (\n                    this.state.reportMainData === null &&\n                    this.props.auth.education_institution_id\n                  ) {\n                    this.loadReportMainData(\n                      this.props.auth.education_institution_id,\n                      activeSession\n                    );\n                  }\n                } else {\n                  this.setSelectedSession(sessionData[sessionData.length - 1]);\n                  if (\n                    this.state.reportMainData === null &&\n                    this.props.auth.education_institution_id\n                  ) {\n                    this.loadReportMainData(\n                      this.props.auth.education_institution_id,\n                      sessionData[sessionData.length - 1]\n                    );\n                  }\n                }\n              }\n            }\n          }\n        );\n      } else {\n        if (this.props.sessionPlan.allSessionPlans.length > 0) {\n          let activeSession = this.props.sessionPlan.allSessionPlans.find(\n            (item) => item.is_active\n          );\n          if (activeSession) {\n            this.setSelectedSession(activeSession);\n            if (\n              this.state.reportMainData === null &&\n              this.props.auth.education_institution_id\n            ) {\n              this.loadReportMainData(\n                this.props.auth.education_institution_id,\n                activeSession\n              );\n            }\n          } else {\n            this.setSelectedSession(\n              this.props.sessionPlan.allSessionPlans[\n                this.props.sessionPlan.allSessionPlans.length - 1\n              ]\n            );\n            if (\n              this.state.reportMainData === null &&\n              this.props.auth.education_institution_id\n            ) {\n              this.loadReportMainData(\n                this.props.auth.education_institution_id,\n                this.props.sessionPlan.allSessionPlans[\n                  this.props.sessionPlan.allSessionPlans.length - 1\n                ]\n              );\n            }\n          }\n          this.setLoading(false);\n        }\n      }\n\n      if (this.props.courses === null || this.props.courses.length === 0) {\n        this.props.loadCourses((status: boolean) => {\n          this.setState({ loadingExam: status });\n        });\n      } else {\n        this.setState({ loadingExam: false });\n      }\n\n      if (this.props.examsList === null || this.props.examsList.length === 0) {\n        this.props.loadExamsList((status: boolean) => {\n          this.setState({ loadingExam: status });\n        });\n      } else {\n        this.setState({ loadingExam: false });\n      }\n    }\n  };\n\n  setChooseDistrict = (status: boolean) => {\n    this.setState({ chooseDistrict: status });\n  };\n\n  setSelectedDistrict = (data: roomDistrictInterface | \"all\") => {\n    this.setState({ selectedDistrict: data });\n  };\n\n  setChooseExam = (status: boolean) => {\n    this.setState({ chooseExam: status });\n  };\n\n  setSelectedExam = (data: examPreparationStateInterface | \"all\") => {\n    this.setState({ selectedExam: data });\n  };\n\n  roomDataFilter = (\n    allData: centerReportInterface[],\n    selectedExam: examPreparationStateInterface | \"all\"\n  ): centerReportInterface[] => {\n    if (selectedExam !== \"all\") {\n      return allData.filter((item) =>\n        item.course_in_room.filter(\n          (element) => element.course_id === selectedExam.course_id\n        )\n      );\n    }\n    return allData;\n  };\n\n  render() {\n    if (\n      this.props.sessionPlan.allSessionPlans &&\n      this.props.sessionPlan.allSessionPlans.length === 0\n    ) {\n      return <NoSession />;\n    }\n\n    if (\n      this.state.selectedSession === null ||\n      this.props.sessionPlan.allSessionPlans === null ||\n      this.state.reportMainData === null ||\n      this.state.invigilatorData === null\n    ) {\n      return (\n        <div className=\"text-center mt-7 font-bold text-4xl text-gray-400 animate-pulse\">\n          Loading Data...\n        </div>\n      );\n    }\n\n    return (\n      <section>\n        <CenterDashboardTitle\n          loading={this.state.loading}\n          thisPeriod={this.state.selectedSession._id}\n          setThisPeriod={this.setThisPeriod}\n          application_sessions={this.props.sessionPlan.allSessionPlans}\n          chooseDistrict={this.state.chooseDistrict}\n          setChooseDistrict={this.setChooseDistrict}\n          selectedDistrict={this.state.selectedDistrict}\n          setSelectedDistrict={this.setSelectedDistrict}\n          reportMainData={this.state.reportMainData}\n          chooseExam={this.state.chooseExam}\n          setChooseExam={this.setChooseExam}\n          selectedExam={this.state.selectedExam}\n          setSelectedExam={this.setSelectedExam}\n          examsList={this.props.examsList}\n          courses={this.props.courses}\n        />\n\n        {this.state.reportMainData && (\n          <section className=\"my-2\">\n            <div className=\"text-2xl font-semibold text-gray-600\">\n              Room occupation status\n            </div>\n            <ExamDashboardLabels\n              dataLabels={[\n                {\n                  title: \"Total room\",\n                  icon: FaLaptopHouse,\n                  iconColor: \"blue\",\n                  count: filterRoom(\n                    roomWithOccupation(\n                      this.state.reportMainData,\n                      this.state.invigilatorData\n                    ),\n                    this.state.selectedDistrict\n                  ).all.length,\n                },\n                {\n                  title: \"Full room\",\n                  icon: FaLaptopHouse,\n                  iconColor: \"green\",\n                  count: filterRoom(\n                    roomWithOccupation(\n                      this.state.reportMainData,\n                      this.state.invigilatorData\n                    ),\n                    this.state.selectedDistrict\n                  ).full.length,\n                },\n                {\n                  title: \"Available room\",\n                  icon: FaLaptopHouse,\n                  iconColor: \"gray\",\n                  count: filterRoom(\n                    roomWithOccupation(\n                      this.state.reportMainData,\n                      this.state.invigilatorData\n                    ),\n                    this.state.selectedDistrict\n                  ).remain.length,\n                },\n                {\n                  title: \"Room with invigilator\",\n                  icon: FaLaptopHouse,\n                  iconColor: \"gray\",\n                  count: filterRoom(\n                    roomWithOccupation(\n                      this.state.reportMainData,\n                      this.state.invigilatorData\n                    ),\n                    this.state.selectedDistrict\n                  ).invigilator.length,\n                },\n              ]}\n              labelsOnRow={5}\n            >\n              <div className=\"flex justify-center\">\n                <PieChart\n                  options={{\n                    labels: [\"Prepared\", \"Remaining\"],\n                    legend: {\n                      show: false,\n                      position: \"bottom\",\n                      horizontalAlign: \"center\",\n                      fontSize: \"16px\",\n                      itemMargin: {\n                        horizontal: 3,\n                        vertical: 0,\n                      },\n                    },\n                    plotOptions: {\n                      pie: {\n                        donut: {\n                          labels: {\n                            show: true,\n                            name: {\n                              show: true,\n                              fontSize: \"16px\",\n                              //   fontFamily: \"Rubik\",\n                              color: \"#2564eb\",\n                              offsetY: -10,\n                            },\n                            value: {\n                              show: true,\n                              fontSize: \"20px\",\n                              fontFamily: \"Helvetica, Arial, sans-serif\",\n                              color: \"#2564eb\",\n                              offsetY: 10,\n                              formatter: function (val) {\n                                return val;\n                              },\n                            },\n                            total: {\n                              show: true,\n                              label: \"Total\",\n                              color: \"#2564eb\",\n                              formatter: function (w) {\n                                return w.globals.seriesTotals.reduce(\n                                  (a: number, b: number) => {\n                                    return a + b;\n                                  },\n                                  0\n                                );\n                              },\n                            },\n                          },\n                        },\n                      },\n                    },\n                    colors: [\"#469769\", \"#4b5563\"],\n                  }}\n                  series={[\n                    filterRoom(\n                      roomWithOccupation(\n                        this.state.reportMainData,\n                        this.state.invigilatorData\n                      ),\n                      this.state.selectedDistrict\n                    ).full.length,\n                    filterRoom(\n                      roomWithOccupation(\n                        this.state.reportMainData,\n                        this.state.invigilatorData\n                      ),\n                      this.state.selectedDistrict\n                    ).remain.length,\n                  ]}\n                  width={210}\n                />\n              </div>\n            </ExamDashboardLabels>\n          </section>\n        )}\n\n        <section className=\"my-3 max-w-full bg-white\">\n          <div className=\"flex items-center justify-between px-3\">\n            <span className=\"text-gray-600 font-semibold text-xl py-4 px-0\">\n              Room availability{\" \"}\n              {this.state.selectedDistrict === \"all\"\n                ? \"on country level\"\n                : \"in \" +\n                  this.state.selectedDistrict.district_name +\n                  \" district\"}\n            </span>\n          </div>\n          <div className=\"mb-4 pb-2 px-3\">\n            <RoomChart\n              allData={this.roomDataFilter(\n                roomWithOccupation(\n                  this.state.reportMainData,\n                  this.state.invigilatorData\n                ),\n                this.state.selectedExam\n              )}\n              selectedExam={this.state.selectedExam}\n            />\n          </div>\n        </section>\n      </section>\n    );\n  }\n}\n\nconst mapStateToProps = ({\n  auth,\n  sessionPlan,\n  course,\n  prepareExam,\n}: StoreState): {\n  auth: Auth;\n  sessionPlan: SessionPlanReducerInterface;\n  courses: course[] | null;\n  examsList: ExamItemResponse[] | null;\n} => {\n  return {\n    auth: auth,\n    sessionPlan,\n    courses: course.courses,\n    examsList: prepareExam.examsList,\n  };\n};\n\nexport const CenterDashboard = connect(mapStateToProps, {\n  GetAllSessionPlans,\n  loadCourses,\n  loadExamsList,\n  PushPopupAlert,\n})(_CenterDashboard);\n","import React from \"react\";\nimport { IoWarning } from \"react-icons/io5\";\n// import { MdInfoOutline } from \"react-icons/md\";\nimport { NavLink } from \"react-router-dom\";\n\ntype NoSessionProps = {\n  title?: string;\n  description?: string;\n};\n\nconst NoSession: React.FC<NoSessionProps> = ({\n  title = \"No session available\",\n  description = \"Please Wait for the system to publish the sessions or contact the administrator\",\n}) => {\n  return (\n    <div className=\"w-full my-5\">\n      <section className=\"py-10 flex flex-col items-center rounded border border-gray-300 bg-white text-2xl font-medium text-yellow-800 animate__animated animate__pulse\">\n        <div className=\"flex flex-col items-center\">\n          <IoWarning className=\"w-32 h-32\" />\n          {description}\n        </div>\n        {false && (\n          <div className=\"text-center group text-sm -mb-3 mt-5\">\n            <NavLink\n              to=\"/apps-page\"\n              className=\"border border-rounded-md bg-gray-100 text-gray-900 rounded border-gray-100 group-hover:bg-gray-50 group-hover:border-gray-400 px-2 py-1\"\n            >\n              Back to App\n            </NavLink>\n          </div>\n        )}\n      </section>\n    </div>\n  );\n};\n\nexport default React.memo(NoSession);\n","import React, { FC, ReactElement, ReactNode } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Auth, System } from \"../../actions\";\nimport { StoreState } from \"../../reducers\";\nimport { NavToogle, PageHasSubNav } from \"../../actions\";\nimport { MdBrightness1, MdSearch } from \"react-icons/md\";\n\n// props for the component\ninterface AppProps {\n  auth: Auth;\n  system: System;\n  PageHasSubNav: Function;\n  NavToogle: Function;\n  children: ReactNode;\n}\n//\ninterface AppState {\n  loading: boolean;\n}\n\nclass _SideNavigation extends React.Component<AppProps, AppState> {\n  constructor(props: AppProps) {\n    super(props);\n\n    this.state = {\n      loading: false,\n    };\n  }\n\n  componentDidMount = () => this.props.PageHasSubNav(true);\n  componentWillUnmount = () => this.props.PageHasSubNav(false);\n\n  render() {\n    const isAuthenticated = this.props.auth.isAuthenticated;\n\n    if (isAuthenticated === false) {\n      return null;\n    }\n\n    const navActive = this.props.system.navigation;\n    return (\n      <div\n        className={`fixed w-48 p-1 pr-2 pl-6 text-gray-700 bg-white ${\n          navActive === true ? \"lg:left-16  left-16\" : \" -left-72 lg:left-16\"\n        }  top-0 bottom-0 pt-20 z-30 shadow-lg  transition-all duration-500 ease-in-out overflow-y-auto`}\n      >\n        {this.props.children}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = ({\n  auth,\n  system,\n}: StoreState): { auth: Auth; system: System } => {\n  return { auth: auth, system: system };\n};\n\nexport const SideNavigation = connect(mapStateToProps, {\n  NavToogle,\n  PageHasSubNav,\n})(_SideNavigation);\n\n//************************************ FORM SEARCH **************************************** */\n\ntype SearchComponentInterface = {\n  data: any[];\n};\n\nexport const Search: FC<SearchComponentInterface> = ({\n  data,\n}): ReactElement => {\n  return (\n    <div className=\"m-1 rounded-md shadow-md border border-blue-400 bg-white p-1 flex \">\n      <label htmlFor=\"search-text\" className=\"inline-block text-2xl\">\n        <MdSearch className=\"inline-block text-blue-400\" />\n      </label>\n      <input\n        type=\"search\"\n        className=\"outline-none bg-transparent flex-1 pl-1\"\n        placeholder=\"Search\"\n        id=\"search-text\"\n      />\n    </div>\n  );\n};\n\n//************************************ FORM SEARCH **************************************** */\n\ntype MainItemComponentInterface = {\n  title: string;\n  icon?: any;\n  active?: boolean;\n  count?: number;\n};\n\n/**\n *\n * @param param0\n * @returns\n */\nexport const MainItem: FC<MainItemComponentInterface> = ({\n  title = \"\",\n  icon = MdBrightness1,\n  active = false,\n  count = 0,\n}): ReactElement => {\n  const IconDefined = icon;\n  return (\n    <section\n      className={`${\n        active === true\n          ? \"bg-blue-500 text-white font-bold\"\n          : \"bg-blue-100 text-blue-800\"\n      } mb-1 hover:font-bold py-1 hover:bg-blue-400 hover:text-white --font-bold  px-2 rounded-md flex cursor-pointer items-center`}\n    >\n      <section className=\"flex-1\">\n        <IconDefined className=\"inline-block mr-1 text-xs\" />\n        <span>{title}</span>\n      </section>\n\n      {count > 0 ? (\n        <span className=\"px-0.5 my-1 text-xs bg-blue-600 text-white rounded-full\">\n          {count}\n        </span>\n      ) : null}\n    </section>\n  );\n};\n\n//************************************ FORM SEARCH **************************************** */\n\ntype SubItemContainerComponentInterface = {\n  children: ReactNode;\n};\n\n/**\n *\n * @param param0\n * @returns\n */\nexport const SubItemContainer: FC<SubItemContainerComponentInterface> = ({\n  children,\n}): ReactElement => {\n  return (\n    <div className=\"ml-3 overflow-y-auto border-l-2 border-blue-200 -mt-1 pt-2 mb-2 pl-1 cursor-pointer\">\n      {children}\n    </div>\n  );\n};\n\n//************************************ FORM SEARCH **************************************** */\n\ntype SubItemComponentInterface = {\n  title: string;\n  icon?: any;\n  active?: boolean;\n  count?: number;\n};\n\n/**\n *\n * @param param0\n * @returns\n * @important Remenber to use these components inside the <SubItemContainer>...</SubItemContainer>\n */\nexport const SubItem: FC<SubItemComponentInterface> = ({\n  title = \"\",\n  icon = MdBrightness1,\n  active = false,\n  count = 0,\n}): ReactElement => {\n  const IconDefined = icon;\n\n  return (\n    <div\n      className={`animate__animated animate__zoomIn animate__faster ${\n        active === true ? \"bg-blue-500 text-white font-bold\" : \" text-blue-800\"\n      } text-blue-800 bg-blue-200 rounded-md px-1 mb-1 flex items-center py-1 font-bold`}\n    >\n      <IconDefined\n        className={`inline-block mr-0.1 text-xs ${\n          active === true ? \"text-white\" : \"\"\n        }`}\n      />\n      <span\n        className={`inline-block pl-1 ${active === true ? \"text-white\" : \"\"}`}\n      >\n        {title}\n      </span>\n      {count >= 1 ? (\n        <span\n          className={`text-sm fint-bold ${active === true ? \"text-white\" : \"\"}`}\n        >\n          {count}\n        </span>\n      ) : null}\n    </div>\n  );\n};\n","import React, { Fragment, useState } from \"react\";\nimport { BiSort } from \"react-icons/bi\";\nimport Loading from \"../../../components/Loading/Loading\";\nimport { SessionPlanInterface } from \"../../../interfaces\";\nimport { course } from \"../../../interfaces/course\";\nimport { ExamItemResponse } from \"../../../interfaces/prepare_exam\";\nimport { ExamDoneAndRemainingByPeriodInterface } from \"../../../interfaces/reports\";\nimport { capitalizeFirstLetter } from \"../../../shared/dataTest\";\nimport { DATE, sortThisArray } from \"../../../utils/functions\";\n// import searchExamData from \"../../../utils/search\";\nimport { getPeriodById } from \"./ExamReport\";\n\n// EXCEL FILE FUNCTIONS ================================\nexport interface ExaminationProgressToPrintInterface {\n  course_id: number;\n  course_name: string;\n  course_code: string;\n  description: string;\n  school_levels: string;\n  exam_period: string;\n  exam_date: string;\n  exam_time: string;\n  exam_duration: string;\n  exam_status: string;\n}\n\nexport enum ExaminationProgressReportContentKeyInterface {\n  COURSER_NAME = \"course_name\",\n  COURSE_CODE = \"course_code\",\n  SCHOOL_LEVEL = \"school_levels\",\n  PERIOD = \"exam_period\",\n  DATE = \"exam_date\",\n  TIME = \"exam_time\",\n  DURATION = \"exam_duration\",\n  STATUS = \"exam_status\",\n}\n\nexport interface ExaminationProgressReportContentInterface {\n  key: ExaminationProgressReportContentKeyInterface;\n  title: string;\n  status: boolean;\n}\n\nexport const examinationProgressIsChangeAllowed = (\n  key: ExaminationProgressReportContentKeyInterface\n): boolean => {\n  if (\n    key === ExaminationProgressReportContentKeyInterface.COURSER_NAME ||\n    key === ExaminationProgressReportContentKeyInterface.COURSE_CODE ||\n    key === ExaminationProgressReportContentKeyInterface.PERIOD ||\n    key === ExaminationProgressReportContentKeyInterface.STATUS\n  ) {\n    return false;\n  }\n  return true;\n};\n\nexport const defaultExaminationProgressContent: ExaminationProgressReportContentInterface[] =\n  [\n    {\n      key: ExaminationProgressReportContentKeyInterface.COURSER_NAME,\n      title: \"Course names\",\n      status: true,\n    },\n    {\n      key: ExaminationProgressReportContentKeyInterface.COURSE_CODE,\n      title: \"Course code\",\n      status: true,\n    },\n    {\n      key: ExaminationProgressReportContentKeyInterface.SCHOOL_LEVEL,\n      title: \"School levels\",\n      status: true,\n    },\n    {\n      key: ExaminationProgressReportContentKeyInterface.PERIOD,\n      title: \"Exam period\",\n      status: true,\n    },\n    {\n      key: ExaminationProgressReportContentKeyInterface.DATE,\n      title: \"Exam date\",\n      status: true,\n    },\n    {\n      key: ExaminationProgressReportContentKeyInterface.TIME,\n      title: \"Exam time\",\n      status: true,\n    },\n    {\n      key: ExaminationProgressReportContentKeyInterface.DURATION,\n      title: \"Exam duration\",\n      status: true,\n    },\n    {\n      key: ExaminationProgressReportContentKeyInterface.STATUS,\n      title: \"Exam Status\",\n      status: true,\n    },\n  ];\n\n// END EXCEL FILE FUNCTIONS ================================\n\nexport const displayStatus = (status: string): string => {\n  if (status === \"Done\") {\n    return \"Completed\";\n  }\n  if (status === \"Editing\") {\n    return \"In exam\";\n  }\n  return status;\n};\n\nexport interface examProgressStateInterface {\n  course_name: string;\n  course_code: string;\n  description: string;\n  school_levels: string[];\n  course_id: string;\n  exam: ExamItemResponse | null;\n  preparation_status: string;\n}\n\nexport const FC_reportDoneExamList = (\n  allCourses: course[],\n  allExams: ExamItemResponse[],\n  doneExams: ExamDoneAndRemainingByPeriodInterface[]\n): examProgressStateInterface[] => {\n  let result: examProgressStateInterface[] = [],\n    ids: string[] = [];\n  for (const key in allExams) {\n    if (Object.prototype.hasOwnProperty.call(allExams, key)) {\n      if (ids.includes(allExams[key].id)) continue;\n      ids.push(allExams[key].id);\n      let courser = allCourses.find(\n        (item) => item.course_id === allExams[key].course\n      );\n      if (courser) {\n        let doneExam = doneExams.find(\n          (item) =>\n            item.course === allExams[key].course &&\n            item.period === allExams[key].period\n        );\n        result.push({\n          course_name: courser.course_name,\n          course_code: courser.course_code,\n          description: courser.description,\n          school_levels: courser.school_levels,\n          course_id: courser.course_id,\n          exam: allExams[key],\n          preparation_status: doneExam ? doneExam.exam_status : \"remaining\",\n        });\n      }\n    }\n  }\n  return result;\n};\n\nexport const FC_reportDoneExamListFilter = (\n  thisList: examProgressStateInterface[],\n  thisValue: \"all\" | \"Done\" | \"Active\"\n): examProgressStateInterface[] => {\n  if (thisValue === \"all\") {\n    return thisList;\n  } else {\n    return thisList.filter((item) => item.preparation_status === thisValue);\n  }\n};\n\nexport const searchExamData = (\n  objList: examProgressStateInterface[],\n  text: string\n): examProgressStateInterface[] => {\n  if (undefined === text || text === \"\") return objList;\n  return objList.filter((product) => {\n    let flag;\n    // let dataKeys = product;\n\n    for (let prop in product) {\n      flag = false;\n      if (\n        prop === \"course_name\" ||\n        prop === \"course_code\" ||\n        prop === \"preparation_status\"\n      ) {\n        flag =\n          product[prop].toString().toLowerCase().indexOf(text.toLowerCase()) >\n          -1;\n      }\n      if (flag) break;\n    }\n    return flag;\n  });\n};\n\ntype DoneExamListProps = {\n  loading: boolean;\n  examsListData: ExamItemResponse[] | null;\n  courseListData: course[] | null;\n  thisPeriod: SessionPlanInterface[];\n  doneExamsData: ExamDoneAndRemainingByPeriodInterface[] | null;\n\n  // for filter purpose =============================\n  filterExamProgress: \"all\" | \"Done\" | \"Active\";\n};\n\nconst DoneExamList: React.FC<DoneExamListProps> = (props) => {\n  const [searchInput, setSearchInput] = useState<string>(\"\");\n  const [isSorted, setIsSorted] = useState<boolean>(false);\n  const [sortProperty, setSortProperty] = useState<string>(\"\");\n  const [sortOrder, setSortOrder] = useState<\"ASC\" | \"DESC\">(\"ASC\");\n\n  const setSort = (thisProperty: string) => {\n    if (sortProperty === thisProperty && sortOrder === \"ASC\") {\n      setSortOrder(\"DESC\");\n      setSortProperty(thisProperty);\n      setIsSorted(true);\n    } else {\n      setSortOrder(\"ASC\");\n      setSortProperty(thisProperty);\n      setIsSorted(true);\n    }\n  };\n\n  return (\n    <Fragment>\n      <div className=\"bg-white my-4\">\n        <div className=\"w-full px-2 py-2\">\n          <input\n            onChange={(e) => setSearchInput(e.target.value)}\n            type=\"text\"\n            value={searchInput}\n            placeholder=\"Search...\"\n            className=\"w-full bg-gray-100 py-2 px-3 rounded\"\n            disabled={\n              props.courseListData &&\n              props.examsListData &&\n              props.doneExamsData &&\n              FC_reportDoneExamListFilter(\n                FC_reportDoneExamList(\n                  props.courseListData,\n                  props.examsListData,\n                  props.doneExamsData\n                ),\n                props.filterExamProgress\n              ).length <= 0\n                ? true\n                : false\n            }\n          />\n        </div>\n        <table className=\"w-full shadow\" id=\"report_content\">\n          <thead className=\"bg-white border-b-2 border-gray-300 text-gray-600 font-bold text-sm\">\n            <tr>\n              <td className=\"px-2 py-2\">#</td>\n              <td\n                className=\"px-2 py-2 cursor-pointer\"\n                onClick={() => setSort(\"course_name\")}\n              >\n                <div className=\"flex items-center gap-1\">\n                  Course <BiSort />\n                </div>\n              </td>\n              <td className=\"px-2 py-2\">Exam date</td>\n              <td className=\"px-2 py-2\">Exam time</td>\n              <td className=\"px-2 py-2\">Exam duration</td>\n              <td className=\"px-2 py-2\">Exam Period</td>\n              <td\n                className=\"px-2 py-2 cursor-pointer\"\n                onClick={() => setSort(\"preparation_status\")}\n              >\n                <div className=\"flex items-center gap-1\">\n                  Exam Status <BiSort />\n                </div>\n              </td>\n            </tr>\n          </thead>\n          <tbody>\n            {props.courseListData === null || props.loading ? (\n              <tr>\n                <td colSpan={7} className=\"px-2 py-2\">\n                  <Loading />\n                </td>\n              </tr>\n            ) : props.examsListData &&\n              props.doneExamsData &&\n              FC_reportDoneExamListFilter(\n                FC_reportDoneExamList(\n                  props.courseListData,\n                  props.examsListData,\n                  props.doneExamsData\n                ),\n                props.filterExamProgress\n              ).length <= 0 ? (\n              <tr>\n                <td colSpan={7} className=\"px-2 py-2 text-center\">\n                  No Exam list available!\n                </td>\n              </tr>\n            ) : (\n              props.examsListData &&\n              props.doneExamsData &&\n              sortThisArray(\n                isSorted,\n                searchExamData(\n                  FC_reportDoneExamListFilter(\n                    FC_reportDoneExamList(\n                      props.courseListData,\n                      props.examsListData,\n                      props.doneExamsData\n                    ),\n                    props.filterExamProgress\n                  ),\n                  searchInput\n                ),\n                sortProperty,\n                sortOrder\n              ).map((item, i) => (\n                <tr\n                  key={i + 1}\n                  className={`${\n                    item.preparation_status === \"Done\"\n                      ? \"bg-blue-50\"\n                      : \"bg-white\"\n                  } text-gray-600 hover:bg-blue-100 hover:text-blue-700 border-b border-gray-300 hover:border-blue-500 text-sm`}\n                >\n                  <td className=\"px-2 py-2\">{i + 1}</td>\n                  <td className=\"px-2 py-2\">\n                    {capitalizeFirstLetter(item.course_name)} (\n                    <span className=\"font-semibold\">{item.course_code}</span>)\n                  </td>\n                  <td className=\"px-2 py-2\">\n                    {item.exam ? DATE(item.exam.exam_date) : \"-\"}\n                  </td>\n                  <td className=\"px-2 py-2\">\n                    {item.exam ? item.exam.start_time : \"-\"}\n                  </td>\n                  <td className=\"px-2 py-2\">\n                    {item.exam ? item.exam!.duration + \" min\" : \"-\"}\n                  </td>\n                  <td className=\"px-2 py-2\">\n                    {item.exam\n                      ? getPeriodById(props.thisPeriod, item.exam.period)\n                        ? getPeriodById(props.thisPeriod, item.exam.period)!\n                            .session_plan_name\n                        : \"-\"\n                      : \"-\"}\n                  </td>\n                  <td className=\"px-2 py-2\">\n                    {capitalizeFirstLetter(\n                      displayStatus(item.preparation_status)\n                    )}\n                  </td>\n                </tr>\n              ))\n            )}\n          </tbody>\n        </table>\n      </div>\n    </Fragment>\n  );\n};\n\nexport default React.memo(DoneExamList);\n","import axios from \"axios\";\nimport { Dispatch } from \"redux\";\nimport { ActionTypes } from \"./types\";\nimport {\n  AssignRoleToUserActionInterface,\n  CustomeAccessInterface,\n  UserInterface,\n} from \"../shared/interfaces\";\nimport { API } from \"../utils/api\";\nimport { setAxiosToken } from \"../utils/AxiosToken\";\nimport { errorToText } from \"../utils/errors\";\n\nconst url = `${API.AUTH}/auth`;\nexport const userPageLimit: number = 30;\n\n/**\n * * ****************************** INTERFACES *****************************\n */\n\nexport interface FetchUsersAction {\n  type: ActionTypes.FETCH_USERS_ACCESS;\n  payload: UserAccessInterface;\n}\n\nexport interface BlockUserToSystem {\n  type: ActionTypes.BLOCK_USER_TO_SYSTEM | ActionTypes.UNBLOCK_USER_TO_SYSTEM;\n  payload: { id: string; page: number };\n}\n\nexport interface AssignRoleToUserAction {\n  type: ActionTypes.ASSIGN_ROLE_TO_USER;\n  payload: { data: AssignRoleToUserActionInterface; page: number };\n}\n\nexport interface CustomizeUserAccessAction {\n  type: ActionTypes.CUSTOMIZE_USER_ACCESS;\n  payload: { data: CustomeAccessInterface; page: number };\n}\n\nexport interface ResetUserAccessAction {\n  type: ActionTypes.RESET_USER_ACCESS;\n  payload: { user_id: string; page: number };\n}\n\nexport type fetchUserAccessInterface = {\n  users: UserInterface[] | null;\n  next: {\n    page: number;\n    limit: number;\n  } | null;\n  previous: {\n    page: number;\n    limit: number;\n  } | null;\n  total_users: number;\n};\n\nexport type UserAccessInterface = {\n  users: { data: UserInterface[]; page: number }[] | null;\n  next: {\n    page: number;\n    limit: number;\n  } | null;\n  previous: {\n    page: number;\n    limit: number;\n  } | null;\n  total_users: number;\n};\n\nexport enum documentValidationStatus {\n  waiting = \"waiting\",\n  approved = \"approved\",\n  rejected = \"rejected\",\n}\n\nexport interface VerifyDocumentInterface {\n  user_id: string;\n  doc_id: string;\n  validation_status: \"waiting\" | \"approved\" | \"rejected\";\n  validated_by: {\n    user_id: string;\n    comment: string;\n    validation_status: \"waiting\" | \"approved\" | \"rejected\";\n    date?: string;\n  };\n  in_education: boolean;\n  disability: boolean;\n  expiration_date: string;\n}\n\nexport type AccessUserActionType =\n  | FetchUsersAction\n  | BlockUserToSystem\n  | AssignRoleToUserAction\n  | CustomizeUserAccessAction\n  | ResetUserAccessAction;\n\n/**\n * * ****************************** ACTIONS *****************************\n */\n\nexport type FT_FetchUserAccess = (\n  page: number,\n  callBack?: (\n    status: boolean,\n    msg: string,\n    data: UserInterface[] | null\n  ) => void\n) => void;\nexport const fetchUserAccess = (\n  page: number,\n  callback?: (\n    status: boolean,\n    msg: string,\n    data: UserInterface[] | null\n  ) => void\n) => {\n  callback && callback(true, \"\", null);\n  return async (dispatch: Dispatch) => {\n    try {\n      setAxiosToken();\n      const res = await axios.get<fetchUserAccessInterface>(\n        `${url}/user?page=${page}&limit=${userPageLimit}`\n      );\n      console.log(\"====================================\");\n      console.log({ fetchUserAccess: res });\n      console.log(\"====================================\");\n      dispatch<FetchUsersAction>({\n        type: ActionTypes.FETCH_USERS_ACCESS,\n        payload: {\n          users: [{ data: res.data.users!, page: page }],\n          next: res.data.next,\n          previous: res.data.previous,\n          total_users: res.data.total_users,\n        },\n      });\n      callback && callback(false, \"\", res.data.users);\n    } catch (error) {\n      console.error({ user_error: error });\n      callback && callback(false, errorToText(error), null);\n    }\n  };\n};\n\nexport const blockUserToSystem = (user_id: string, page: number) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<BlockUserToSystem>({\n      type: ActionTypes.BLOCK_USER_TO_SYSTEM,\n      payload: { id: user_id, page },\n    });\n  };\n};\n\nexport const unBlockUserToSystem = (user_id: string, page: number) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<BlockUserToSystem>({\n      type: ActionTypes.UNBLOCK_USER_TO_SYSTEM,\n      payload: { id: user_id, page },\n    });\n  };\n};\n\nexport const assignRoleToUserAccess = (\n  data: AssignRoleToUserActionInterface,\n  page: number\n) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<AssignRoleToUserAction>({\n      type: ActionTypes.ASSIGN_ROLE_TO_USER,\n      payload: { data, page },\n    });\n  };\n};\n\nexport const customizeUserAccess = (\n  data: CustomeAccessInterface,\n  page: number\n) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<CustomizeUserAccessAction>({\n      type: ActionTypes.CUSTOMIZE_USER_ACCESS,\n      payload: { data, page },\n    });\n  };\n};\n\nexport const resetUserAccess = (data: string, page: number) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<ResetUserAccessAction>({\n      type: ActionTypes.RESET_USER_ACCESS,\n      payload: { user_id: data, page },\n    });\n  };\n};\n","import React, { Component } from \"react\";\nimport { BiFilterAlt } from \"react-icons/bi\";\nimport { FiEdit } from \"react-icons/fi\";\nimport { MdRadioButtonChecked, MdRadioButtonUnchecked } from \"react-icons/md\";\nimport { connect } from \"react-redux\";\nimport {\n  Auth,\n  schoolLevelsStoreInterface,\n  setSelectedPeriod,\n  loadCourses,\n  loadExamsList,\n  loadEducationCategories,\n  loadDoneExam,\n  loadSchoolLevels,\n  loadPerfomranceExam,\n  loadCandidatesExamPerformance,\n  setSelectedEducationCategory,\n  PushPopupAlert,\n  FilterParamType,\n  ReportGetCandidatePerformanceSortTypes,\n} from \"../../../actions\";\nimport { FC_GetAllSessionByInstitution } from \"../../../actions/session\";\nimport { PopupAlertData } from \"../../../components/Alert/Popup\";\nimport {\n  generatePDF,\n  reportSettingsInterface,\n} from \"../../../components/DownloadPDF/rest\";\nimport Loading from \"../../../components/Loading/Loading\";\nimport { SideNavigation } from \"../../../components/Navigation/SideNavigation\";\nimport NoResult, {\n  NoResultThemes,\n} from \"../../../components/NoResult/NoResult\";\nimport {\n  course,\n  education_category,\n  ReportUserExamStatus,\n  school_level,\n  SessionPlanInterface,\n} from \"../../../interfaces\";\nimport { PopupAlertTheme } from \"../../../interfaces/popupAlert\";\nimport {\n  ExamItemResponse,\n  PrepareExamStatus,\n  QuestionNumberFormat,\n} from \"../../../interfaces/prepare_exam\";\nimport { StoreState } from \"../../../reducers\";\nimport { ExamReportReducerType } from \"../../../reducers/exam_report\";\nimport { SessionPlanReducerInterface } from \"../../../reducers/session\";\nimport {\n  capitalizeFirstLetter,\n  capitalizeFirstWord,\n  isEmptyOrSpaces,\n} from \"../../../shared/dataTest\";\nimport {\n  DATE,\n  FC_HasInstitute,\n  timestampToDate,\n} from \"../../../utils/functions\";\nimport NoSession from \"../../SessionSettings/NoSession\";\nimport CandiadtePerformancePerDistrict, {\n  FC_CandiadtePerformancePerDistrictFilter,\n} from \"./CandiadtePerformancePerDistrict\";\nimport CandidatePerformance, {\n  CandidateExamPerformanceToPrintInterface,\n  CandidateExamPerformanceReportContentInterface,\n  defaultCandidateExamPerformanceContent,\n  candidatePerfomranceStateInterface,\n  FC_reportCandidatePerformanceData,\n} from \"./CandidatePerformance\";\nimport DoneExamList, {\n  ExaminationProgressToPrintInterface,\n  ExaminationProgressReportContentInterface,\n  defaultExaminationProgressContent,\n  displayStatus,\n  examProgressStateInterface,\n  FC_reportDoneExamList,\n} from \"./DoneExamList\";\nimport ExamList, {\n  ExamPreparationToPrintInterface,\n  examPreparationReportContentInterface,\n  defaultExamPreparationReportContent,\n  examPreparationStateInterface,\n  FC_reportExamList,\n} from \"./ExamList\";\nimport ExamPerformance, {\n  ExamPerformanceToPrintInterface,\n  examPerformanceReportContentInterface,\n  defaultExamPerformanceContent,\n  examPerformanceStateInterface,\n  FC_reportExamPerformanceData,\n} from \"./ExamPerformance\";\nimport ExamPerformancePerDistrict, {\n  FC_ExamPerformancePerDistrictPropsData,\n} from \"./ExamPerformancePerDistrict\";\nimport ExamReportFilters from \"./ExamReportFilters\";\nimport ExamReportModals, { ModalForTypes } from \"./ExamReportModals\";\nimport ExamReportTitle from \"./ExamReportTitle\";\n\nexport interface reportCourseInterface {\n  course_name: string;\n  course_code: string;\n  description: string;\n  school_levels: string[];\n  course_id: string;\n  exam: {\n    questions: string[];\n    status: number;\n    period: string;\n    course: string;\n    exam_status: PrepareExamStatus;\n    termes: string;\n    questions_per_page: number;\n    exam_date: string;\n    start_time: string;\n    duration: number;\n    number_format: QuestionNumberFormat;\n    discription: string;\n    createdAt: string;\n    updatedAt: string;\n    id: string;\n  };\n}\n\nexport const getExamByCourseId = (\n  allExams: ExamItemResponse[],\n  course_id: string\n): ExamItemResponse | undefined => {\n  return allExams.find((item) => item.course === course_id);\n};\n\nexport const getPeriodById = (\n  periods: SessionPlanInterface[],\n  period_id: string\n): SessionPlanInterface | undefined => {\n  return periods.find((item) => item._id === period_id);\n};\n\nexport const loadAllExams = (\n  examsList: ExamItemResponse[] | null,\n  selected_period: SessionPlanInterface | null\n): ExamItemResponse[] | null => {\n  let result: ExamItemResponse[] | null = examsList;\n  if (result && selected_period) {\n    result = result.filter((item) => item.period === selected_period?._id);\n  } else {\n    result = examsList;\n  }\n  return result;\n};\n\n// TYPES OF REPORTS ======================================\nexport enum reportTitleType {\n  APPLICANTS_PERFORMANCE = \"Exam report\",\n  EXAM_PREPARATION = \"List of prepared and not prepared exams\",\n  EXAM_PERFORMANCE = \"Exam performance\",\n  EXAMINATION_PROGRESS = \"List of complete & remaining exams\",\n  EXAM_DISTRICT_PERFORMANCE = \"Top 30 exams passed in\", // ADD DISTRICT NAME EX: Muhanga District\n  APPLICANTS_DISTRICT_PERFORMANCE = \"Top 30 applicants performance\", // ADD DISTRICT NAME EX: Muhanga District && EXAM NAME EX: Physics\n}\n\ninterface ExamReportProps {\n  auth: Auth;\n  periods: SessionPlanReducerInterface;\n  schoolLevels: schoolLevelsStoreInterface;\n  courses: course[] | null;\n  examsList: ExamItemResponse[] | null;\n  adminExamReport: ExamReportReducerType;\n  FC_GetAllSessionByInstitution: Function;\n  loadEducationCategories: Function;\n  setSelectedEducationCategory: (\n    education_category: education_category\n  ) => void;\n  loadCourses: (callback: (loading: boolean) => void) => void;\n  loadExamsList: (callback: (loading: boolean) => void) => void;\n  loadDoneExam: (period_id: string, callback: Function) => void;\n  loadPerfomranceExam: (period_id: string, callback: Function) => void;\n  loadSchoolLevels: (callback: (loading: boolean) => void) => void;\n  loadCandidatesExamPerformance: (\n    dataBody: FilterParamType | null,\n    callback: Function\n  ) => void;\n  PushPopupAlert: (alert: PopupAlertData) => void;\n}\n\ninterface ExamReportState {\n  loading: boolean;\n  loadingCourses: boolean;\n  loadingExams: boolean;\n  downloading: boolean;\n  loadingDoneExam: boolean;\n  loadingCandidatesExamPerformance: boolean;\n  loadingExamPerformance: boolean;\n  loadingSettings: boolean;\n\n  // FILTER STATES =======================================\n  filterPreparation: \"prepared\" | \"not prepared\" | \"all\";\n  filterExamProgress: \"Done\" | \"Active\" | \"all\";\n  filterApplicantPerformance: ReportUserExamStatus | \"all\";\n  // END FILTER STATES =======================================\n\n  selectPeriod: boolean;\n  generateReportModal: {\n    reportType: \"EXCEL\" | \"PDF\";\n    status: boolean;\n  } | null;\n  districtModal: boolean;\n  selected_period: SessionPlanInterface | null;\n\n  // GENERATE EXCEL REPORT =======================================\n  // WHAT TO PRINT ########################################\n  reportTitle: reportTitleType;\n  // WHAT TITLE TO PRINT ########################################\n  excelReportTitle: string;\n  // SET DEFAULT CONTENT ########################################\n  // ############### EXAM PREPARATION ######################\n  examsToPrint: ExamPreparationToPrintInterface[] | null;\n  examPreparationReportContent: examPreparationReportContentInterface[];\n  // ############### EXAM PERFORMANCE ######################\n  examPerformanceToPrint: ExamPerformanceToPrintInterface[] | null;\n  examPerformanceReportContent: examPerformanceReportContentInterface[];\n  // ############### TOP 30 EXAM PERFORMANCE ######################\n  exam30PerformanceToPrint: ExamPerformanceToPrintInterface[] | null;\n  exam30PerformanceReportContent: examPerformanceReportContentInterface[];\n  // ############### EXAMINATION PROGRESS ######################\n  examinationProgressToPrint: ExaminationProgressToPrintInterface[] | null;\n  examinationProgressReportContent: ExaminationProgressReportContentInterface[];\n  // ############### CANDIDATE EXAM PERFORMANCE ######################\n  candidateExamPerformanceToPrint:\n    | CandidateExamPerformanceToPrintInterface[]\n    | null;\n\n  candidateExamPerformanceReportContent: CandidateExamPerformanceReportContentInterface[];\n  // ############### CANDIDATE EXAM PERFORMANCE ######################\n\n  candidate30ExamPerformanceToPrint:\n    | CandidateExamPerformanceToPrintInterface[]\n    | null;\n\n  candidate30ExamPerformanceReportContent: CandidateExamPerformanceReportContentInterface[];\n  // END GENERATE EXCEL REPORT =======================================\n}\n\nclass _ExamReport extends Component<ExamReportProps, ExamReportState> {\n  constructor(props: ExamReportProps) {\n    super(props);\n\n    this.state = {\n      loading: true,\n      loadingCourses: true,\n      loadingExams: true,\n      downloading: false,\n      loadingDoneExam: true,\n      loadingCandidatesExamPerformance: true,\n      loadingExamPerformance: true,\n      loadingSettings: true,\n      selectPeriod: false,\n      districtModal: false,\n\n      // FILTER STATES =======================================\n      filterPreparation: \"all\",\n      filterExamProgress: \"all\",\n      filterApplicantPerformance: \"all\",\n      // END FILTER STATES =======================================\n\n      generateReportModal: null,\n      selected_period: null,\n\n      // GENERATE EXCEL REPORT =======================================\n      // WHAT TO PRINT ########################################\n      reportTitle: reportTitleType.APPLICANTS_PERFORMANCE,\n      // WHAT TITLE TO PRINT ########################################\n      excelReportTitle: reportTitleType.APPLICANTS_PERFORMANCE,\n      // SET DEFAULT CONTENT ########################################\n      // ############### EXAM PREPARATION ######################\n      examsToPrint: null,\n      examPreparationReportContent: defaultExamPreparationReportContent,\n      // ############### EXAM PERFORMANCE ######################\n      examPerformanceToPrint: null,\n      examPerformanceReportContent: defaultExamPerformanceContent,\n      // ############### TOP 30 EXAM PERFORMANCE ######################\n      exam30PerformanceToPrint: null,\n      exam30PerformanceReportContent: defaultExamPerformanceContent,\n      // ############### EXAMINATION PROGRESS ######################\n      examinationProgressToPrint: null,\n      examinationProgressReportContent: defaultExaminationProgressContent,\n      // ############### CANDIDATE EXAM PERFORMANCE ######################\n      candidateExamPerformanceToPrint: null,\n\n      candidateExamPerformanceReportContent:\n        defaultCandidateExamPerformanceContent,\n      // ############### CANDIDATE EXAM PERFORMANCE ######################\n\n      candidate30ExamPerformanceToPrint: null,\n\n      candidate30ExamPerformanceReportContent:\n        defaultCandidateExamPerformanceContent,\n      // END GENERATE EXCEL REPORT =======================================\n    };\n  }\n\n  setLoading = (value: boolean) => {\n    this.setState({ loading: value });\n  };\n\n  setLoadingCourses = (value: boolean) => {\n    this.setState({ loadingCourses: value });\n  };\n\n  setLoadingExams = (value: boolean) => {\n    this.setState({ loadingExams: value });\n  };\n\n  setDownloading = (value: boolean) => {\n    this.setState({ downloading: value });\n  };\n\n  setLoadingDoneExam = (value: boolean) => {\n    this.setState({ loadingDoneExam: value });\n  };\n\n  setLoadingCandidatesExamPerformance = (value: boolean) => {\n    this.setState({ loadingCandidatesExamPerformance: value });\n  };\n\n  setLoadingExamPerformance = (value: boolean) => {\n    this.setState({ loadingExamPerformance: value });\n  };\n\n  setLoadingSettings = (value: boolean) => {\n    this.setState({ loadingSettings: value });\n  };\n\n  setSelectPeriod = (value: boolean) => {\n    this.setState({ selectPeriod: value });\n  };\n\n  setDistrictModal = (value: boolean) => {\n    this.setState({ districtModal: value });\n  };\n\n  setFilterPreparation = (value: \"prepared\" | \"not prepared\" | \"all\") => {\n    this.setState({ filterPreparation: value });\n  };\n\n  setFilterExamProgress = (value: \"Done\" | \"Active\" | \"all\") => {\n    this.setState({ filterExamProgress: value });\n  };\n\n  setFilterApplicantPerformance = (value: ReportUserExamStatus | \"all\") => {\n    this.setState({ filterApplicantPerformance: value });\n  };\n\n  setGenerateReportModal = (\n    value: {\n      reportType: \"EXCEL\" | \"PDF\";\n      status: boolean;\n    } | null\n  ) => {\n    this.setState({ generateReportModal: value });\n  };\n\n  setSelectedPeriod = (value: SessionPlanInterface | null) => {\n    this.setState({ selected_period: value });\n  };\n\n  setReportTitle = (value: reportTitleType) => {\n    this.setState({ reportTitle: value });\n  };\n\n  setExcelReportTitle = (value: string) => {\n    this.setState({ excelReportTitle: value });\n  };\n\n  setExamsToPrint = (value: ExamPreparationToPrintInterface[] | null) => {\n    this.setState({ examsToPrint: value });\n  };\n\n  setExamPreparationReportContent = (\n    value: examPreparationReportContentInterface[]\n  ) => {\n    this.setState({ examPreparationReportContent: value });\n  };\n  setExamPerformanceToPrint = (\n    value: ExamPerformanceToPrintInterface[] | null\n  ) => {\n    this.setState({ examPerformanceToPrint: value });\n  };\n  setExamPerformanceReportContent = (\n    value: examPerformanceReportContentInterface[]\n  ) => {\n    this.setState({ examPerformanceReportContent: value });\n  };\n\n  setExam30PerformanceToPrint = (\n    value: ExamPerformanceToPrintInterface[] | null\n  ) => {\n    this.setState({ exam30PerformanceToPrint: value });\n  };\n  setExam30PerformanceReportContent = (\n    value: examPerformanceReportContentInterface[]\n  ) => {\n    this.setState({ exam30PerformanceReportContent: value });\n  };\n  setExaminationProgressToPrint = (\n    value: ExaminationProgressToPrintInterface[] | null\n  ) => {\n    this.setState({ examinationProgressToPrint: value });\n  };\n  setExaminationProgressExamPerformanceReportContent = (\n    value: ExaminationProgressReportContentInterface[]\n  ) => {\n    this.setState({ examinationProgressReportContent: value });\n  };\n\n  setCandidateExamPerformanceToPrint = (\n    value: CandidateExamPerformanceToPrintInterface[] | null\n  ) => {\n    this.setState({ candidateExamPerformanceToPrint: value });\n  };\n\n  setCandidateExamPerformanceReportContent = (\n    value: CandidateExamPerformanceReportContentInterface[]\n  ) => {\n    this.setState({ candidateExamPerformanceReportContent: value });\n  };\n\n  setCandidate30ExamPerformanceToPrint = (\n    value: CandidateExamPerformanceToPrintInterface[] | null\n  ) => {\n    this.setState({ candidate30ExamPerformanceToPrint: value });\n  };\n\n  setCandidate30ExamPerformanceReportContent = (\n    value: CandidateExamPerformanceReportContentInterface[]\n  ) => {\n    this.setState({ candidate30ExamPerformanceReportContent: value });\n  };\n\n  selectDefaultSession = (allSession: SessionPlanInterface[]) => {\n    if (allSession.length > 0) {\n      let active_period = allSession.find((item) => item.is_active);\n      this.setSelectedPeriod(active_period ? active_period : allSession[0]);\n      this.onPeriodChange(\n        active_period ? active_period._id : allSession[0]._id\n      );\n    }\n    this.setSelectPeriod(false);\n  };\n\n  // onInstitutionChanged = (institution_id: string) => {\n  //   if (\n  //     this.props.schoolLevels.education_categories &&\n  //     this.props.schoolLevels.education_categories.length > 0\n  //   ) {\n\n  //   }\n  // };\n\n  FD_GetSessions = (institution_id: string) => {\n    this.setSelectedPeriod(null);\n    this.props.FC_GetAllSessionByInstitution(\n      institution_id,\n      (status: boolean, msg: string, data?: SessionPlanInterface[]) => {\n        this.setLoadingSettings(status);\n        if (!status) {\n          if (!isEmptyOrSpaces(msg)) {\n            this.props.PushPopupAlert({\n              title: msg,\n              theme: PopupAlertTheme.danger,\n            });\n          }\n          if (data && data.length > 0) {\n            this.selectDefaultSession(data);\n          }\n        }\n      }\n    );\n  };\n\n  componentDidMount = () => {\n    if (FC_HasInstitute(this.props.auth.education_institution_id)) {\n      this.FD_GetSessions(this.props.auth.education_institution_id!);\n    }\n\n    if (\n      this.props.schoolLevels.education_categories === null ||\n      this.props.schoolLevels.education_categories.length\n    ) {\n      this.props.loadEducationCategories(\n        (status: boolean, data?: education_category[]) => {\n          this.setLoadingSettings(status);\n          if (!status && data && data.length > 0) {\n            // if (!isEmptyOrSpaces(msg)) {\n            //   this.props.PushPopupAlert({\n            //     title: msg,\n            //     theme: PopupAlertTheme.danger,\n            //   });\n            // }\n\n            if (\n              FC_HasInstitute(this.props.auth.education_institution_id) ===\n              false\n            ) {\n              this.props.setSelectedEducationCategory(data[0]);\n              this.FD_GetSessions(data[0].education_institute_id);\n            } else {\n              const thisEducation = data.find(\n                (item) =>\n                  item.education_institute_id ===\n                  this.props.auth.education_institution_id\n              );\n              this.props.setSelectedEducationCategory(\n                thisEducation ? thisEducation : data[0]\n              );\n            }\n            // if (data && data.length > 0) {\n            // }\n          }\n        }\n      );\n    } else if (!this.props.schoolLevels.selectedEducationCategory) {\n      if (FC_HasInstitute(this.props.auth.education_institution_id) === false) {\n        this.props.setSelectedEducationCategory(\n          this.props.schoolLevels.education_categories[0]\n        );\n        this.FD_GetSessions(\n          this.props.schoolLevels.education_categories[0].education_institute_id\n        );\n      } else {\n        const thisEducation = this.props.schoolLevels.education_categories.find(\n          (item) =>\n            item.education_institute_id ===\n            this.props.auth.education_institution_id\n        );\n        this.props.setSelectedEducationCategory(\n          thisEducation\n            ? thisEducation\n            : this.props.schoolLevels.education_categories[0]\n        );\n      }\n    }\n\n    if (\n      this.props.schoolLevels.school_levels === null ||\n      this.props.schoolLevels.school_levels.length <= 0\n    ) {\n      this.props.loadSchoolLevels(this.setLoadingSettings);\n    }\n\n    if (\n      this.props.courses === null ||\n      (this.props.courses.length === 0 && this.state.loadingCourses)\n    ) {\n      this.props.loadCourses(this.setLoadingCourses);\n    } else if (this.state.loadingCourses) {\n      this.setLoadingCourses(false);\n    }\n\n    if (\n      this.props.examsList === null ||\n      (this.props.examsList.length === 0 && this.state.loadingExams)\n    ) {\n      this.props.loadExamsList(this.setLoadingExams);\n    } else if (this.state.loadingExams) {\n      this.setLoadingExams(false);\n    }\n\n    // if (\n    //   this.props.auth.application_session &&\n    //   this.props.auth.application_session._id &&\n    //   (this.props.adminExamReport.DoneExam === null ||\n    //     (this.props.adminExamReport.DoneExam.length === 0 &&\n    //       this.state.loadingDoneExam))\n    // ) {\n    //   this.props.loadDoneExam(\n    //     this.props.auth.application_session._id,\n    //     (status: boolean, msg: string) => {\n    //       if (!status) {\n    //         if (msg.length > 0) {\n    //           this.props.PushPopupAlert({\n    //             title: msg,\n    //             theme: PopupAlertTheme.danger,\n    //           });\n    //         }\n    //         this.setLoadingDoneExam(false);\n    //       }\n    //     }\n    //   );\n    // } else if (this.state.loadingDoneExam) {\n    //   this.setLoadingDoneExam(false);\n    // }\n\n    // if (\n    //   this.props.auth.application_session &&\n    //   this.props.auth.application_session._id &&\n    //   (this.props.adminExamReport.CandidatesExamPerformance === null ||\n    //     (this.props.adminExamReport.CandidatesExamPerformance.length === 0 &&\n    //       this.state.loadingCandidatesExamPerformance))\n    // ) {\n    //   this.props.loadCandidatesExamPerformance(\n    //     {\n    //       order: \"desc\",\n    //       sortBy: ReportGetCandidatePerformanceSortTypes.DATE,\n    //       filter: {\n    //         period: this.props.auth.application_session._id,\n    //       },\n    //     },\n    //     (status: boolean, msg: string) => {\n    //       if (!status) {\n    //         if (msg.length > 0) {\n    //           this.props.PushPopupAlert({\n    //             title: msg,\n    //             theme: PopupAlertTheme.danger,\n    //           });\n    //         }\n    //         this.setLoadingCandidatesExamPerformance(false);\n    //       }\n    //     }\n    //   );\n    // } else if (this.state.loadingCandidatesExamPerformance) {\n    //   this.setLoadingCandidatesExamPerformance(false);\n    // }\n\n    // if (\n    //   this.props.auth.application_session &&\n    //   this.props.auth.application_session._id &&\n    //   (this.props.adminExamReport.ExamPerformance === null ||\n    //     (this.props.adminExamReport.ExamPerformance.length === 0 &&\n    //       this.state.loadingExamPerformance))\n    // ) {\n    //   this.props.loadPerfomranceExam(\n    //     this.props.auth.application_session._id,\n    //     (status: boolean, msg: string) => {\n    //       if (!status) {\n    //         if (msg.length > 0) {\n    //           this.props.PushPopupAlert({\n    //             title: msg,\n    //             theme: PopupAlertTheme.danger,\n    //           });\n    //         }\n    //         this.setLoadingExamPerformance(false);\n    //       }\n    //     }\n    //   );\n    // } else if (this.state.loadingExamPerformance) {\n    //   this.setLoadingExamPerformance(false);\n    // }\n\n    if (this.state.excelReportTitle === this.state.reportTitle) {\n      let result: string = \"\";\n      if (\n        this.state.excelReportTitle ===\n          reportTitleType.EXAM_DISTRICT_PERFORMANCE &&\n        this.props.adminExamReport.reportDistrictId\n      ) {\n        result += ` ${this.props.adminExamReport.reportDistrictId.district_name} district`;\n      } else if (\n        this.state.excelReportTitle ===\n        reportTitleType.APPLICANTS_DISTRICT_PERFORMANCE\n      ) {\n        if (this.props.adminExamReport.reportDistrictId) {\n          result += ` in ${this.props.adminExamReport.reportDistrictId.district_name} district`;\n        }\n        if (this.props.adminExamReport.reportCourseId) {\n          result += ` in exam of ${this.props.adminExamReport.reportCourseId.course_name}(${this.props.adminExamReport.reportCourseId.course_code})`;\n        }\n      } else {\n        result = \"\";\n      }\n      this.setExcelReportTitle(this.state.excelReportTitle + result);\n      this.setLoading(false);\n    }\n  };\n\n  onPeriodChange = (period_id: string) => {\n    this.props.loadDoneExam(period_id, (status: boolean, msg: string) => {\n      this.setLoadingDoneExam(status);\n      if (!status) {\n        if (msg.length > 0) {\n          this.props.PushPopupAlert({\n            title: msg,\n            theme: PopupAlertTheme.danger,\n          });\n        }\n        this.setLoadingDoneExam(false);\n      }\n    });\n\n    this.props.loadPerfomranceExam(\n      period_id,\n      (status: boolean, msg: string) => {\n        this.setLoadingExamPerformance(status);\n        if (!status) {\n          if (msg.length > 0) {\n            this.props.PushPopupAlert({\n              title: msg,\n              theme: PopupAlertTheme.danger,\n            });\n          }\n          this.setLoadingExamPerformance(false);\n        }\n      }\n    );\n\n    this.props.loadCandidatesExamPerformance(\n      {\n        order: \"desc\",\n        sortBy: ReportGetCandidatePerformanceSortTypes.DATE,\n        filter: {\n          period: period_id,\n        },\n      },\n      (status: boolean, msg: string) => {\n        if (!status) {\n          if (msg.length > 0) {\n            this.props.PushPopupAlert({\n              title: msg,\n              theme: PopupAlertTheme.danger,\n            });\n          }\n          this.setLoadingCandidatesExamPerformance(false);\n        }\n      }\n    );\n  };\n\n  getLevelbyId = (level_id: string): school_level | undefined => {\n    if (this.props.schoolLevels.school_levels) {\n      return this.props.schoolLevels.school_levels.find(\n        (item) => item.school_level_id === level_id\n      );\n    }\n  };\n\n  getCourses = (): course[] | null => {\n    let result: course[] | null = [],\n      search_all: boolean = true;\n    if (this.props.courses) {\n      // FILTER BY EDICATION CATEGORY ====================\n      if (this.props.schoolLevels.selectedEducationCategory) {\n        for (const key in this.props.courses) {\n          if (Object.prototype.hasOwnProperty.call(this.props.courses, key)) {\n            if (this.props.courses[key].school_levels.length > 0) {\n              this.props.courses[key].school_levels.forEach((level) => {\n                let levelDetail = this.getLevelbyId(level);\n                if (\n                  levelDetail &&\n                  (levelDetail.education_institute.includes(\n                    this.props.schoolLevels.selectedEducationCategory!\n                      .education_institute_id\n                  ) ||\n                    levelDetail.education_institute.length <= 0)\n                ) {\n                  result && result.push(this.props.courses![key]);\n                }\n              });\n            } else {\n              result && result.push(this.props.courses![key]);\n            }\n          }\n        }\n      }\n      // RETURN DEFAULT VALUES ====================\n      else {\n        search_all = false;\n      }\n    }\n    return !search_all ? this.props.courses : result;\n  };\n\n  updateExamToPrint = () => {\n    // EXAM PREPARATION ######################\n    if (this.state.reportTitle === reportTitleType.EXAM_PREPARATION) {\n      if (\n        loadAllExams(this.props.examsList, this.state.selected_period) &&\n        this.getCourses() &&\n        this.props.periods.allSessionPlans\n      ) {\n        let data: examPreparationStateInterface[] = FC_reportExamList(\n          this.getCourses()!,\n          loadAllExams(this.props.examsList, this.state.selected_period)!\n        );\n        let arrayNew: ExamPreparationToPrintInterface[] = [];\n        let n: number = 1;\n        for (const key in data) {\n          if (Object.prototype.hasOwnProperty.call(data, key)) {\n            let school_level: string = \"\";\n            if (data[key].school_levels.length) {\n              data[key].school_levels.forEach((element, index) => {\n                let findLevel = this.getLevelbyId(element);\n                if (index === 0) {\n                  school_level = findLevel ? findLevel.school_level_name : \"\";\n                } else {\n                  school_level += findLevel\n                    ? \", \" + findLevel.school_level_name\n                    : \"\";\n                }\n              });\n            } else {\n              school_level = \"Any level\";\n            }\n            let dataArray: ExamPreparationToPrintInterface = {\n              course_id: n,\n              course_name: data[key].course_name,\n              course_code: data[key].course_code,\n              description: data[key].description,\n              school_levels: data[key].school_levels.length\n                ? school_level\n                : \"Any\",\n              exam_period: data[key].exam\n                ? getPeriodById(\n                    this.props.periods.allSessionPlans,\n                    data[key].exam!.period\n                  )\n                  ? getPeriodById(\n                      this.props.periods.allSessionPlans,\n                      data[key].exam!.period\n                    )!.session_plan_name\n                  : \"-\"\n                : \"-\",\n              exam_date: data[key].exam ? DATE(data[key].exam!.exam_date) : \"-\",\n              exam_time: data[key].exam ? data[key].exam!.start_time : \"-\",\n              exam_duration: data[key].exam\n                ? data[key].exam!.duration.toString()\n                : \"-\",\n              preparation_status: data[key].exam ? \"Prepared\" : \"Not prepared\",\n            };\n\n            for (const key in this.state.examPreparationReportContent) {\n              if (\n                Object.prototype.hasOwnProperty.call(\n                  this.state.examPreparationReportContent,\n                  key\n                )\n              ) {\n                if (!this.state.examPreparationReportContent[key].status) {\n                  delete dataArray[\n                    this.state.examPreparationReportContent[key].key\n                  ];\n                }\n              }\n            }\n            arrayNew.push(dataArray);\n            n++;\n          }\n        }\n        this.setExamsToPrint(arrayNew);\n        arrayNew = [];\n        n = 1;\n        // props.applicationsToPrint=;\n      }\n    }\n    // EXAM PERFORMANCE ######################\n    if (this.state.reportTitle === reportTitleType.EXAM_PERFORMANCE) {\n      if (\n        loadAllExams(this.props.examsList, this.state.selected_period) &&\n        this.getCourses() &&\n        this.props.adminExamReport.ExamPerformance &&\n        this.props.periods.allSessionPlans\n      ) {\n        let data: examPerformanceStateInterface[] =\n          FC_reportExamPerformanceData(\n            this.getCourses()!,\n            loadAllExams(this.props.examsList, this.state.selected_period)!,\n            this.props.adminExamReport.ExamPerformance\n          );\n        let arrayNew: ExamPerformanceToPrintInterface[] = [];\n        let n: number = 1;\n        for (const key in data) {\n          if (Object.prototype.hasOwnProperty.call(data, key)) {\n            let school_level: string = \"\";\n            if (data[key].school_levels.length) {\n              data[key].school_levels.forEach((element, index) => {\n                let findLevel = this.getLevelbyId(element);\n                if (index === 0) {\n                  school_level = findLevel ? findLevel.school_level_name : \"\";\n                } else {\n                  school_level += findLevel\n                    ? \", \" + findLevel.school_level_name\n                    : \"\";\n                }\n              });\n            } else {\n              school_level = \"Any level\";\n            }\n            let dataArray: ExamPerformanceToPrintInterface = {\n              course_id: n,\n              course_name: data[key].course_name,\n              course_code: data[key].course_code,\n              description: data[key].description,\n              school_levels: data[key].school_levels.length\n                ? school_level\n                : \"Any\",\n              exam_period: data[key].exam\n                ? getPeriodById(\n                    this.props.periods.allSessionPlans,\n                    data[key].exam!.period\n                  )\n                  ? getPeriodById(\n                      this.props.periods.allSessionPlans,\n                      data[key].exam!.period\n                    )!.session_plan_name\n                  : \"-\"\n                : \"-\",\n              exam_date: data[key].exam ? DATE(data[key].exam!.exam_date) : \"-\",\n              exam_time: data[key].exam ? data[key].exam!.start_time : \"-\",\n              exam_duration: data[key].exam\n                ? data[key].exam!.duration.toString()\n                : \"-\",\n              exam_performance: Number(data[key].exam_performance.toFixed(1)),\n            };\n\n            for (const key in this.state.examPerformanceReportContent) {\n              if (\n                Object.prototype.hasOwnProperty.call(\n                  this.state.examPerformanceReportContent,\n                  key\n                )\n              ) {\n                if (!this.state.examPerformanceReportContent[key].status) {\n                  delete dataArray[\n                    this.state.examPerformanceReportContent[key].key\n                  ];\n                }\n              }\n            }\n            arrayNew.push(dataArray);\n            n++;\n          }\n        }\n        this.setExamPerformanceToPrint(arrayNew);\n        arrayNew = [];\n        n = 1;\n        // props.applicationsToPrint=;\n      }\n    }\n    // TOP 30 EXAM PERFORMANCE ######################\n    if (this.state.reportTitle === reportTitleType.EXAM_DISTRICT_PERFORMANCE) {\n      if (\n        loadAllExams(this.props.examsList, this.state.selected_period) &&\n        this.getCourses() &&\n        this.props.adminExamReport.DoneExam &&\n        this.props.adminExamReport.CandidatesExamPerformance &&\n        this.props.adminExamReport.reportDistrictId &&\n        this.props.periods.allSessionPlans\n      ) {\n        let data = FC_ExamPerformancePerDistrictPropsData(\n          this.getCourses()!,\n          loadAllExams(this.props.examsList, this.state.selected_period)!,\n          this.props.adminExamReport.DoneExam,\n          this.props.adminExamReport.CandidatesExamPerformance,\n          this.props.adminExamReport.reportDistrictId.district_id\n        ).slice(0, 30);\n        let arrayNew: ExamPerformanceToPrintInterface[] = [];\n        let n: number = 1;\n        for (const key in data) {\n          if (Object.prototype.hasOwnProperty.call(data, key)) {\n            let school_level: string = \"\";\n            if (data[key].school_levels.length) {\n              data[key].school_levels.forEach((element, index) => {\n                let findLevel = this.getLevelbyId(element);\n                if (index === 0) {\n                  school_level = findLevel ? findLevel.school_level_name : \"\";\n                } else {\n                  school_level += findLevel\n                    ? \", \" + findLevel.school_level_name\n                    : \"\";\n                }\n              });\n            } else {\n              school_level = \"Any level\";\n            }\n            let dataArray: ExamPerformanceToPrintInterface = {\n              course_id: n,\n              course_name: data[key].course_name,\n              course_code: data[key].course_code,\n              description: data[key].description,\n              school_levels: data[key].school_levels.length\n                ? school_level\n                : \"Any\",\n              exam_period: data[key].exam\n                ? getPeriodById(\n                    this.props.periods.allSessionPlans,\n                    data[key].exam!.period\n                  )\n                  ? getPeriodById(\n                      this.props.periods.allSessionPlans,\n                      data[key].exam!.period\n                    )!.session_plan_name\n                  : \"-\"\n                : \"-\",\n              exam_date: data[key].exam ? DATE(data[key].exam!.exam_date) : \"-\",\n              exam_time: data[key].exam ? data[key].exam!.start_time : \"-\",\n              exam_duration: data[key].exam\n                ? data[key].exam!.duration.toString()\n                : \"-\",\n              exam_performance: 0,\n            };\n\n            for (const key in this.state.exam30PerformanceReportContent) {\n              if (\n                Object.prototype.hasOwnProperty.call(\n                  this.state.exam30PerformanceReportContent,\n                  key\n                )\n              ) {\n                if (!this.state.exam30PerformanceReportContent[key].status) {\n                  delete dataArray[\n                    this.state.exam30PerformanceReportContent[key].key\n                  ];\n                }\n              }\n            }\n            arrayNew.push(dataArray);\n            n++;\n          }\n        }\n        this.setExam30PerformanceToPrint(arrayNew);\n        arrayNew = [];\n        n = 1;\n      }\n    }\n    // EXAMINATION PROGRESS ######################\n    if (this.state.reportTitle === reportTitleType.EXAMINATION_PROGRESS) {\n      if (\n        loadAllExams(this.props.examsList, this.state.selected_period) &&\n        this.getCourses() &&\n        this.props.adminExamReport.DoneExam &&\n        this.props.periods.allSessionPlans\n      ) {\n        let data: examProgressStateInterface[] = FC_reportDoneExamList(\n          this.getCourses()!,\n          loadAllExams(this.props.examsList, this.state.selected_period)!,\n          this.props.adminExamReport.DoneExam\n        );\n        let arrayNew: ExaminationProgressToPrintInterface[] = [];\n        let n: number = 1;\n        for (const key in data) {\n          if (Object.prototype.hasOwnProperty.call(data, key)) {\n            let school_level: string = \"\";\n            if (data[key].school_levels.length) {\n              data[key].school_levels.forEach((element, index) => {\n                let findLevel = this.getLevelbyId(element);\n                if (index === 0) {\n                  school_level = findLevel ? findLevel.school_level_name : \"\";\n                } else {\n                  school_level += findLevel\n                    ? \", \" + findLevel.school_level_name\n                    : \"\";\n                }\n              });\n            } else {\n              school_level = \"Any level\";\n            }\n            let dataArray: ExaminationProgressToPrintInterface = {\n              course_id: n,\n              course_name: data[key].course_name,\n              course_code: data[key].course_code,\n              description: data[key].description,\n              school_levels: data[key].school_levels.length\n                ? school_level\n                : \"Any\",\n              exam_period: data[key].exam\n                ? getPeriodById(\n                    this.props.periods.allSessionPlans,\n                    data[key].exam!.period\n                  )\n                  ? getPeriodById(\n                      this.props.periods.allSessionPlans,\n                      data[key].exam!.period\n                    )!.session_plan_name\n                  : \"-\"\n                : \"-\",\n              exam_date: data[key].exam ? DATE(data[key].exam!.exam_date) : \"-\",\n              exam_time: data[key].exam ? data[key].exam!.start_time : \"-\",\n              exam_duration: data[key].exam\n                ? data[key].exam!.duration.toString()\n                : \"-\",\n              exam_status:\n                data[key].preparation_status === \"Done\"\n                  ? \"Completed\"\n                  : data[key].preparation_status,\n            };\n\n            for (const key in this.state.examinationProgressReportContent) {\n              if (\n                Object.prototype.hasOwnProperty.call(\n                  this.state.examinationProgressReportContent,\n                  key\n                )\n              ) {\n                if (!this.state.examinationProgressReportContent[key].status) {\n                  delete dataArray[\n                    this.state.examinationProgressReportContent[key].key\n                  ];\n                }\n              }\n            }\n            arrayNew.push(dataArray);\n            n++;\n          }\n        }\n        this.setExaminationProgressToPrint(arrayNew);\n        arrayNew = [];\n        n = 1;\n        // props.applicationsToPrint=;\n      }\n    }\n    // CANDIDATE EXAM PERFORMANCE ######################\n    if (this.state.reportTitle === reportTitleType.APPLICANTS_PERFORMANCE) {\n      if (\n        this.getCourses() &&\n        this.props.adminExamReport.CandidatesExamPerformance &&\n        this.props.periods.allSessionPlans\n      ) {\n        let data: candidatePerfomranceStateInterface[] =\n          FC_reportCandidatePerformanceData(\n            this.getCourses()!,\n            this.props.adminExamReport.CandidatesExamPerformance,\n            this.props.adminExamReport.reportCourseId\n              ? this.props.adminExamReport.reportCourseId.course_id\n              : \"all\"\n          );\n        let arrayNew: CandidateExamPerformanceToPrintInterface[] = [];\n        let n: number = 1;\n        for (const key in data) {\n          if (Object.prototype.hasOwnProperty.call(data, key)) {\n            let school_level: string = \"\";\n            if (data[key].school_levels.length) {\n              data[key].school_levels.forEach((element, index) => {\n                let findLevel = this.getLevelbyId(element);\n                if (index === 0) {\n                  school_level = findLevel ? findLevel.school_level_name : \"\";\n                } else {\n                  school_level += findLevel\n                    ? \", \" + findLevel.school_level_name\n                    : \"\";\n                }\n              });\n            } else {\n              school_level = \"Any level\";\n            }\n            let dataArray: CandidateExamPerformanceToPrintInterface = {\n              applicant_id: n,\n              course_name: data[key].course_name,\n              course_code: data[key].course_code,\n              description: data[key].description,\n              school_levels: data[key].school_levels.length\n                ? school_level\n                : \"Any\",\n              exam_period: getPeriodById(\n                this.props.periods.allSessionPlans,\n                data[key].exam.period\n              )\n                ? getPeriodById(\n                    this.props.periods.allSessionPlans,\n                    data[key].exam.period\n                  )!.session_plan_name\n                : \"-\",\n              exam_date: DATE(data[key].exam.exam_date),\n              exam_start_time: timestampToDate(\n                Number(data[key].exam.start_time)\n              ).timeAMPM,\n              exam_end_time: timestampToDate(Number(data[key].exam.end_time))\n                .timeAMPM,\n              performance_status: capitalizeFirstLetter(\n                displayStatus(data[key].exam_stastus)\n              ),\n              applicant_name: capitalizeFirstLetter(data[key].user_name),\n              national_id: data[key].national_id,\n              email: data[key].user_email,\n              phone: data[key].user_phone,\n              marks:\n                data[key].exam_stastus !== ReportUserExamStatus.Editing\n                  ? Number(data[key].user_total_marks.toFixed(1)) + \"%\"\n                  : \"-\",\n            };\n\n            for (const key in this.state\n              .candidateExamPerformanceReportContent) {\n              if (\n                Object.prototype.hasOwnProperty.call(\n                  this.state.candidateExamPerformanceReportContent,\n                  key\n                )\n              ) {\n                if (\n                  !this.state.candidateExamPerformanceReportContent[key].status\n                ) {\n                  delete dataArray[\n                    this.state.candidateExamPerformanceReportContent[key].key\n                  ];\n                }\n              }\n            }\n            arrayNew.push(dataArray);\n            n++;\n          }\n        }\n        this.setCandidateExamPerformanceToPrint(arrayNew);\n        arrayNew = [];\n        n = 1;\n        // props.applicationsToPrint=;\n      }\n    }\n    // 30 CANDIDATE EXAM PERFORMANCE ######################\n    if (\n      this.state.reportTitle === reportTitleType.APPLICANTS_DISTRICT_PERFORMANCE\n    ) {\n      if (\n        this.getCourses() &&\n        this.props.adminExamReport.CandidatesExamPerformance &&\n        this.props.periods.allSessionPlans\n      ) {\n        let data: candidatePerfomranceStateInterface[] =\n          FC_CandiadtePerformancePerDistrictFilter(\n            FC_reportCandidatePerformanceData(\n              this.getCourses()!,\n              this.props.adminExamReport.CandidatesExamPerformance,\n              this.props.adminExamReport.reportCourseId\n                ? this.props.adminExamReport.reportCourseId.course_id\n                : \"all\"\n            ),\n            this.props.adminExamReport.reportDistrictId\n              ? this.props.adminExamReport.reportDistrictId.district_id\n              : null,\n            this.props.adminExamReport.reportCourseId\n              ? this.props.adminExamReport.reportCourseId.course_id\n              : null,\n            this.state.filterApplicantPerformance\n          ).slice(0, 30);\n        let arrayNew: CandidateExamPerformanceToPrintInterface[] = [];\n        let n: number = 1;\n        for (const key in data) {\n          if (Object.prototype.hasOwnProperty.call(data, key)) {\n            let school_level: string = \"\";\n            if (data[key].school_levels.length) {\n              data[key].school_levels.forEach((element, index) => {\n                let findLevel = this.getLevelbyId(element);\n                if (index === 0) {\n                  school_level = findLevel ? findLevel.school_level_name : \"\";\n                } else {\n                  school_level += findLevel\n                    ? \", \" + findLevel.school_level_name\n                    : \"\";\n                }\n              });\n            } else {\n              school_level = \"Any level\";\n            }\n            let dataArray: CandidateExamPerformanceToPrintInterface = {\n              applicant_id: n,\n              course_name: data[key].course_name,\n              course_code: data[key].course_code,\n              description: data[key].description,\n              school_levels: data[key].school_levels.length\n                ? school_level\n                : \"Any\",\n              exam_period: getPeriodById(\n                this.props.periods.allSessionPlans,\n                data[key].exam.period\n              )\n                ? getPeriodById(\n                    this.props.periods.allSessionPlans,\n                    data[key].exam.period\n                  )!.session_plan_name\n                : \"-\",\n              exam_date: DATE(data[key].exam.exam_date),\n              exam_start_time: timestampToDate(\n                Number(data[key].exam.start_time)\n              ).timeAMPM,\n              exam_end_time: timestampToDate(Number(data[key].exam.end_time))\n                .timeAMPM,\n              performance_status: capitalizeFirstLetter(\n                displayStatus(data[key].exam_stastus)\n              ),\n              applicant_name: capitalizeFirstLetter(data[key].user_name),\n              national_id: data[key].national_id,\n              email: data[key].user_email,\n              phone: data[key].user_phone,\n              marks:\n                data[key].exam_stastus !== ReportUserExamStatus.Editing\n                  ? Number(data[key].user_total_marks.toFixed(1)) + \"%\"\n                  : \"-\",\n            };\n\n            for (const key in this.state\n              .candidate30ExamPerformanceReportContent) {\n              if (\n                Object.prototype.hasOwnProperty.call(\n                  this.state.candidate30ExamPerformanceReportContent,\n                  key\n                )\n              ) {\n                if (\n                  !this.state.candidate30ExamPerformanceReportContent[key]\n                    .status\n                ) {\n                  delete dataArray[\n                    this.state.candidate30ExamPerformanceReportContent[key].key\n                  ];\n                }\n              }\n            }\n            arrayNew.push(dataArray);\n            n++;\n          }\n        }\n        this.setCandidate30ExamPerformanceToPrint(arrayNew);\n        arrayNew = [];\n        n = 1;\n        // props.applicationsToPrint=;\n      }\n    }\n  };\n\n  addToTitle = (): string => {\n    let result: string = \"\";\n\n    if (\n      this.state.reportTitle === reportTitleType.EXAM_DISTRICT_PERFORMANCE &&\n      this.props.adminExamReport.reportDistrictId\n    ) {\n      result += ` ${this.props.adminExamReport.reportDistrictId.district_name} district`;\n    } else if (\n      this.state.reportTitle === reportTitleType.APPLICANTS_DISTRICT_PERFORMANCE\n    ) {\n      if (this.props.adminExamReport.reportDistrictId) {\n        result += ` in ${this.props.adminExamReport.reportDistrictId.district_name} district`;\n      }\n      if (this.props.adminExamReport.reportCourseId) {\n        result += ` in exam of ${this.props.adminExamReport.reportCourseId.course_name}(${this.props.adminExamReport.reportCourseId.course_code})`;\n      }\n    } else {\n      result = \"\";\n    }\n    return result;\n  };\n\n  downlaodPDF = async () => {\n    if (!document.querySelectorAll(\"#report_content tbody tr\").length) {\n      this.props.PushPopupAlert({\n        title: `Can't generate Report of empty Data`,\n        theme: PopupAlertTheme.warning,\n      });\n      return false;\n    }\n\n    if (this.state.selected_period) {\n      const table: HTMLElement | null =\n        document.getElementById(\"report_content\");\n      const reportSettings: reportSettingsInterface = {\n        doneBy: this.props.auth.user.fname + \" \" + this.props.auth.user.lname,\n        title: \"Exam Report\",\n        subjectTitle: \"Subject\",\n        subject: `${this.state.reportTitle} ${this.addToTitle()}`,\n        period: this.state.selected_period.session_plan_name,\n        footer: \"Online Teacher Recruitment\",\n        institute: this.props.schoolLevels.selectedEducationCategory\n          ? this.props.schoolLevels.selectedEducationCategory\n              .education_category_title\n          : \"All institute\",\n        orientation:\n          this.state.reportTitle === reportTitleType.APPLICANTS_PERFORMANCE ||\n          this.state.reportTitle ===\n            reportTitleType.APPLICANTS_DISTRICT_PERFORMANCE\n            ? \"l\"\n            : \"p\",\n      };\n      table && (await generatePDF(reportSettings, table, this.setDownloading));\n    }\n  };\n\n  render() {\n    if (this.state.loading || this.props.periods.allSessionPlans === null) {\n      return (\n        <div className=\"text-center mt-7 font-bold text-4xl text-gray-400 animate-pulse\">\n          Loading data...\n        </div>\n      );\n    }\n\n    if (this.props.periods.allSessionPlans.length === 0) {\n      return <NoSession />;\n    }\n\n    return (\n      <div>\n        <SideNavigation>\n          {FC_HasInstitute(this.props.auth.education_institution_id) ===\n            false && (\n            <div className=\"flex flex-col mb-4\">\n              <span className=\"text-sm text-gray-600 mb-2\">\n                Education categories:\n              </span>\n              {this.props.schoolLevels.education_categories === null ? (\n                <Loading />\n              ) : this.props.schoolLevels.education_categories.length === 0 ? (\n                <span>No result found</span>\n              ) : (\n                this.props.schoolLevels.education_categories.map((item, i) => (\n                  <div\n                    onClick={() => {\n                      this.props.setSelectedEducationCategory(item);\n                      this.FD_GetSessions(item.education_institute_id);\n                      this.updateExamToPrint();\n                    }}\n                    key={i + 1}\n                    className={`border rounded px-2 py-2 mb-2 cursor-pointer ${\n                      this.props.schoolLevels.selectedEducationCategory !==\n                        null &&\n                      this.props.schoolLevels.selectedEducationCategory\n                        .education_institute_id === item.education_institute_id\n                        ? \"bg-blue-600 text-white hover:bg-blue-100 hover:text-blue-600 hover:border-blue-500\"\n                        : \"hover:bg-blue-100 hover:text-blue-600 hover:border-blue-500\"\n                    } font-bold flex flex-row items-center gap-2`}\n                  >\n                    {this.props.schoolLevels.selectedEducationCategory !==\n                      null &&\n                    this.props.schoolLevels.selectedEducationCategory\n                      .education_institute_id ===\n                      item.education_institute_id ? (\n                      <MdRadioButtonChecked />\n                    ) : (\n                      <MdRadioButtonUnchecked />\n                    )}\n                    <span>{item.education_category_title}</span>\n                  </div>\n                ))\n              )}\n            </div>\n          )}\n          <div className=\"\">\n            <div className=\"text-gray-600 text-sm mb-2\">Selected period:</div>\n            <div\n              onClick={() => this.setSelectPeriod(true)}\n              className=\"font-bold bg-blue-50 border border-blue-200 rounded py-2 cursor-pointer text-xs px-2 hover:underline justify-between text-blue-600  mb-4 w-full flex flex-row items-center animate__animated animate__zoomIn\"\n            >\n              {this.state.selected_period !== null\n                ? `${capitalizeFirstWord(\n                    this.state.selected_period.session_plan_name\n                  )}`\n                : \"Filter by period\"}\n              <FiEdit className=\"text-lg text-blue-600\" />\n            </div>\n          </div>\n          <ExamReportFilters\n            reportTitle={this.state.reportTitle}\n            filterPreparation={this.state.filterPreparation}\n            setFilterPreparation={this.setFilterPreparation}\n            filterExamProgress={this.state.filterExamProgress}\n            setFilterExamProgress={this.setFilterExamProgress}\n            filterApplicantPerformance={this.state.filterApplicantPerformance}\n            setFilterApplicantPerformance={this.setFilterApplicantPerformance}\n          />\n        </SideNavigation>\n\n        {/* --------------------------------------------------------------------- */}\n\n        {/* REPORT TITLE CONTROLLERS ============================================ */}\n        <ExamReportTitle\n          downloading={this.state.downloading}\n          dataToPrint={loadAllExams(\n            this.props.examsList,\n            this.state.selected_period\n          )}\n          downlaodPDF={this.downlaodPDF}\n          reportTitle={this.state.reportTitle}\n          setReportTitle={this.setReportTitle}\n          setGenerateReportModal={this.setGenerateReportModal}\n          generateReportModal={this.state.generateReportModal}\n          excelReportTitle={this.state.excelReportTitle}\n          setExcelReportTitle={this.setExcelReportTitle}\n          updateExamToPrint={this.updateExamToPrint}\n          // EXAM PREPARATION ######################\n          examsToPrint={this.state.examsToPrint}\n          examPreparationReportContent={this.state.examPreparationReportContent}\n          setExamPreparationReportContent={this.setExamPreparationReportContent}\n          // EXAM PERFORMANCE ######################\n          examPerformanceToPrint={this.state.examPerformanceToPrint}\n          examPerformanceReportContent={this.state.examPerformanceReportContent}\n          setExamPerformanceReportContent={this.setExamPerformanceReportContent}\n          // TOP 30 EXAM PERFORMANCE ######################\n          exam30PerformanceToPrint={this.state.exam30PerformanceToPrint}\n          exam30PerformanceReportContent={\n            this.state.exam30PerformanceReportContent\n          }\n          setExam30PerformanceReportContent={\n            this.setExam30PerformanceReportContent\n          }\n          // EXAMINATION PROGRESS ######################\n          examinationProgressToPrint={this.state.examinationProgressToPrint}\n          examinationProgressReportContent={\n            this.state.examinationProgressReportContent\n          }\n          setExaminationProgressExamPerformanceReportContent={\n            this.setExaminationProgressExamPerformanceReportContent\n          }\n          // CANDIDATE EXAM PERFORMANCE ######################\n          candidateExamPerformanceToPrint={\n            this.state.candidateExamPerformanceToPrint\n          }\n          candidateExamPerformanceReportContent={\n            this.state.candidateExamPerformanceReportContent\n          }\n          setCandidateExamPerformanceReportContent={\n            this.setCandidateExamPerformanceReportContent\n          }\n          // CANDIDATE EXAM PERFORMANCE ######################\n          candidate30ExamPerformanceToPrint={\n            this.state.candidate30ExamPerformanceToPrint\n          }\n          candidate30ExamPerformanceReportContent={\n            this.state.candidate30ExamPerformanceReportContent\n          }\n          setCandidate30ExamPerformanceReportContent={\n            this.setCandidate30ExamPerformanceReportContent\n          }\n          thisPeriod={\n            this.state.selected_period ? this.state.selected_period._id : \"\"\n          }\n        />\n\n        {/* --------------------------------------------------------------------- */}\n\n        {/* EXAM LIST CONTROLLERS ============================================ */}\n        {this.state.reportTitle === reportTitleType.EXAM_PREPARATION &&\n          this.props.periods.allSessionPlans && (\n            <ExamList\n              loading={\n                this.state.loadingExams ||\n                this.state.loadingCourses ||\n                this.state.loadingDoneExam\n              }\n              examsListData={loadAllExams(\n                this.props.examsList,\n                this.state.selected_period\n              )}\n              courseListData={this.getCourses()}\n              thisPeriod={this.props.periods.allSessionPlans}\n              filterPreparation={this.state.filterPreparation}\n            />\n          )}\n        {/* EXAM LIST CONTROLLERS ============================================ */}\n\n        {/* --------------------------------------------------------------------- */}\n\n        {/* DONE & REMAING EXAM LIST CONTROLLERS ============================================ */}\n        {this.state.reportTitle === reportTitleType.EXAMINATION_PROGRESS &&\n          this.props.periods.allSessionPlans && (\n            <DoneExamList\n              loading={\n                this.state.loadingExams\n                  ? true\n                  : this.state.loadingCourses\n                  ? true\n                  : this.state.loadingDoneExam\n                  ? true\n                  : false\n              }\n              examsListData={loadAllExams(\n                this.props.examsList,\n                this.state.selected_period\n              )}\n              courseListData={this.getCourses()}\n              thisPeriod={this.props.periods.allSessionPlans}\n              doneExamsData={this.props.adminExamReport.DoneExam}\n              filterExamProgress={this.state.filterExamProgress}\n            />\n          )}\n        {/* DONE & REMAING EXAM LIST CONTROLLERS ============================================ */}\n\n        {/* --------------------------------------------------------------------- */}\n\n        {/* EXAM PERFORMANCE CONTROLLERS ============================================ */}\n        {this.state.reportTitle === reportTitleType.EXAM_PERFORMANCE &&\n          this.props.periods.allSessionPlans && (\n            <ExamPerformance\n              loading={\n                this.state.loadingExams\n                  ? true\n                  : this.state.loadingCourses\n                  ? true\n                  : this.state.loadingExamPerformance\n                  ? true\n                  : false\n              }\n              examsListData={loadAllExams(\n                this.props.examsList,\n                this.state.selected_period\n              )}\n              courseListData={this.getCourses()}\n              thisPeriod={this.props.periods.allSessionPlans}\n              examsPerformanceData={this.props.adminExamReport.ExamPerformance} // doneExamsData={props.adminExamReport.DoneExam}\n            />\n          )}\n        {/* END EXAM PERFORMANCE CONTROLLERS ============================================ */}\n\n        {/* --------------------------------------------------------------------- */}\n\n        {/* EXAM PERFORMANCE PER DISTRICT LIST CONTROLLERS ============================================ */}\n        {this.state.reportTitle === reportTitleType.EXAM_DISTRICT_PERFORMANCE &&\n        this.props.periods.allSessionPlans &&\n        this.props.adminExamReport.reportDistrictId ? (\n          <ExamPerformancePerDistrict\n            loading={\n              this.state.loadingExams\n                ? true\n                : this.state.loadingCourses\n                ? true\n                : this.state.loadingCandidatesExamPerformance\n                ? true\n                : false\n            }\n            examsListData={loadAllExams(\n              this.props.examsList,\n              this.state.selected_period\n            )}\n            doneExamsData={this.props.adminExamReport.DoneExam}\n            courseListData={this.getCourses()}\n            thisPeriod={this.props.periods.allSessionPlans}\n            candidatePerformanceData={\n              this.props.adminExamReport.CandidatesExamPerformance\n            }\n            thisDistrict={this.props.adminExamReport.reportDistrictId}\n          />\n        ) : (\n          this.state.reportTitle ===\n            reportTitleType.EXAM_DISTRICT_PERFORMANCE && (\n            <NoResult\n              theme={NoResultThemes.Light}\n              value={\"Select district to view data\"}\n              component={\n                <div\n                  onClick={() => this.setDistrictModal(true)}\n                  className=\"btn bg-blue-50 border border-blue-300 text-blue-600 cursor-pointer hover:bg-blue-100 flex flex-row items-center justify-center gap-2 text-sm \"\n                >\n                  <BiFilterAlt className=\"text-xl\" />\n                  Filter by district\n                </div>\n              }\n            />\n          )\n        )}\n        {/* EXAM PERFORMANCE PER DISTRICT LIST CONTROLLERS ============================================  */}\n\n        {/* --------------------------------------------------------------------- */}\n\n        {/* APPLICANTS PERFORMANCE EXAM LIST CONTROLLERS ============================================ */}\n        {this.state.reportTitle === reportTitleType.APPLICANTS_PERFORMANCE &&\n          this.props.periods.allSessionPlans && (\n            <CandidatePerformance\n              loading={\n                this.state.loadingExams\n                  ? true\n                  : this.state.loadingCourses\n                  ? true\n                  : this.state.loadingCandidatesExamPerformance\n                  ? true\n                  : false\n              }\n              examsListData={loadAllExams(\n                this.props.examsList,\n                this.state.selected_period\n              )}\n              courseListData={this.getCourses()}\n              thisPeriod={this.props.periods.allSessionPlans}\n              candidatePerformanceData={\n                this.props.adminExamReport.CandidatesExamPerformance\n              }\n              filterApplicantPerformance={this.state.filterApplicantPerformance}\n            />\n          )}\n        {/* APPLICANTS PERFORMANCE EXAM LIST CONTROLLERS ============================================  */}\n\n        {/* --------------------------------------------------------------------- */}\n\n        {/* APPLICANTS PERFORMANCE EXAM PER DISTRICT LIST CONTROLLERS ============================================ */}\n        {this.state.reportTitle ===\n          reportTitleType.APPLICANTS_DISTRICT_PERFORMANCE &&\n          this.props.periods.allSessionPlans && (\n            <CandiadtePerformancePerDistrict\n              loading={\n                this.state.loadingExams\n                  ? true\n                  : this.state.loadingCourses\n                  ? true\n                  : this.state.loadingCandidatesExamPerformance\n                  ? true\n                  : false\n              }\n              examsListData={loadAllExams(\n                this.props.examsList,\n                this.state.selected_period\n              )}\n              courseListData={this.getCourses()}\n              thisPeriod={this.props.periods.allSessionPlans}\n              candidatePerformanceData={\n                this.props.adminExamReport.CandidatesExamPerformance\n              }\n              filterApplicantPerformance={this.state.filterApplicantPerformance}\n            />\n          )}\n        {/* APPLICANTS PERFORMANCE EXAM PER DISTRICT LIST CONTROLLERS ============================================  */}\n\n        {/* --------------------------------------------------------------------- */}\n\n        {/* CHANGE DISTRICT FILTER MODAL CONTROLLERS ============================================ */}\n        {this.state.districtModal && (\n          <ExamReportModals\n            modalFor={ModalForTypes.choose_district}\n            modalState={this.state.districtModal}\n            changeModalState={this.setDistrictModal}\n            districtId={\n              this.props.adminExamReport.reportDistrictId\n                ? this.props.adminExamReport.reportDistrictId.district_id\n                : \"all\"\n            }\n            reportTitle={this.state.reportTitle}\n          />\n        )}\n        {/* END CHANGE DISTRICT FILTER MODAL CONTROLLERS ============================================ */}\n\n        {/* --------------------------------------------------------------------- */}\n\n        {/* MODAL CONTROLLERS ============================================ */}\n        <ExamReportModals\n          modalState={this.state.selectPeriod}\n          changeModalState={this.setSelectPeriod}\n          applicationPeriods={this.props.periods.allSessionPlans}\n          selected_period={this.state.selected_period}\n          setSelectedPeriod={this.setSelectedPeriod}\n          onPeriodChange={this.onPeriodChange}\n          modalFor={ModalForTypes.period}\n        />\n        {/* END MODAL CONTROLLERS ============================================ */}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = ({\n  auth,\n  sessionPlan,\n  schoolLevels,\n  course,\n  prepareExam,\n  adminExamReport,\n}: StoreState): {\n  auth: Auth;\n  periods: SessionPlanReducerInterface;\n  schoolLevels: schoolLevelsStoreInterface;\n  courses: course[] | null;\n  examsList: ExamItemResponse[] | null;\n  adminExamReport: ExamReportReducerType;\n} => {\n  return {\n    auth,\n    periods: sessionPlan,\n    schoolLevels,\n    courses: course.courses,\n    examsList: prepareExam.examsList,\n    adminExamReport,\n  };\n};\n\nexport const ExamReport = connect(mapStateToProps, {\n  setSelectedPeriod,\n  loadCourses,\n  loadExamsList,\n  FC_GetAllSessionByInstitution,\n  loadEducationCategories,\n  loadDoneExam,\n  loadSchoolLevels,\n  loadPerfomranceExam,\n  loadCandidatesExamPerformance,\n  setSelectedEducationCategory,\n  PushPopupAlert,\n})(_ExamReport);\n","import React, { Fragment, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport Loading from \"../../../components/Loading/Loading\";\nimport {\n  course,\n  CandidatesFailedSucceeded,\n  ReportUserExamStatus,\n  SessionPlanInterface,\n} from \"../../../interfaces\";\nimport { ExamItemResponse } from \"../../../interfaces/prepare_exam\";\nimport { StoreState } from \"../../../reducers\";\nimport { ExamReportReducerType } from \"../../../reducers/exam_report\";\nimport { capitalizeFirstLetter } from \"../../../shared/dataTest\";\nimport { DATE, timestampToDate } from \"../../../utils/functions\";\nimport {\n  candidatePerfomranceStateInterface,\n  controlRowsByStatus,\n  FC_reportCandidatePerformanceData,\n  searchCandidatePerformanceData,\n} from \"./CandidatePerformance\";\nimport { displayStatus } from \"./DoneExamList\";\nimport { getPeriodById } from \"./ExamReport\";\n\nexport const FC_CandiadtePerformancePerDistrictFilter = (\n  dataList: candidatePerfomranceStateInterface[],\n  district_id: string | null = null,\n  course_id: string | null = null,\n  thisValue: ReportUserExamStatus | \"all\" = \"all\"\n): candidatePerfomranceStateInterface[] => {\n  let result: candidatePerfomranceStateInterface[] = [];\n  if (thisValue === \"all\") {\n    result = dataList;\n  } else {\n    result = dataList.filter((item) => item.exam_stastus === thisValue);\n  }\n\n  if (district_id) {\n    result = result.filter(\n      (item) =>\n        item.exam.exam_location &&\n        item.exam.exam_location.district_id === district_id\n    );\n  }\n  if (course_id) {\n    result = result.filter((item) => item.course_id === course_id);\n  }\n\n  // SORTING ARRAY FROM MAX TO MIN ==========================\n  let swap: candidatePerfomranceStateInterface;\n  for (let i = 0; i < result.length; i++) {\n    for (let j = i; j < result.length; j++) {\n      if (result[j].user_total_marks > result[i].user_total_marks) {\n        swap = result[j];\n        result[j] = result[i];\n        result[i] = swap;\n      }\n    }\n  }\n  return result;\n};\n\ntype CandiadtePerformancePerDistrictProps = {\n  loading: boolean;\n  examsListData: ExamItemResponse[] | null;\n  courseListData: course[] | null;\n  thisPeriod: SessionPlanInterface[];\n  candidatePerformanceData: CandidatesFailedSucceeded[] | null;\n\n  // redux props ============\n  adminExamReport: ExamReportReducerType;\n  // FOR APPLICANT PERFORMANCE PROPS\n  filterApplicantPerformance: ReportUserExamStatus | \"all\";\n};\n\nconst CandiadtePerformancePerDistrict: React.FC<\n  CandiadtePerformancePerDistrictProps\n> = (props) => {\n  const [searchInput, setSearchInput] = useState<string>(\"\");\n\n  return (\n    <Fragment>\n      <div className=\"bg-white my-4\">\n        <div className=\"w-full px-2 py-2\">\n          <input\n            onChange={(e) => setSearchInput(e.target.value)}\n            type=\"text\"\n            value={searchInput}\n            placeholder=\"Search...\"\n            className=\"w-full bg-gray-100 py-2 px-3 rounded\"\n            disabled={\n              props.courseListData &&\n              props.candidatePerformanceData &&\n              FC_CandiadtePerformancePerDistrictFilter(\n                FC_reportCandidatePerformanceData(\n                  props.courseListData,\n                  props.candidatePerformanceData,\n                  props.adminExamReport.reportCourseId\n                    ? props.adminExamReport.reportCourseId.course_id\n                    : \"all\"\n                ),\n                props.adminExamReport.reportDistrictId\n                  ? props.adminExamReport.reportDistrictId.district_id\n                  : null,\n                props.adminExamReport.reportCourseId\n                  ? props.adminExamReport.reportCourseId.course_id\n                  : null,\n                props.filterApplicantPerformance\n              ).length <= 0\n                ? true\n                : false\n            }\n          />\n        </div>\n        <div className=\"w-full overflow-x-auto\">\n          <table className=\"w-full shadow\" id=\"report_content\">\n            <thead className=\"bg-white border-b-2 border-gray-300 text-gray-600 font-bold text-sm\">\n              <tr>\n                <td className=\"px-2 py-2\">#</td>\n                <td className=\"px-2 py-2\">Applicants</td>\n                <td className=\"px-2 py-2\">National ID</td>\n                <td className=\"px-2 py-2\">Email</td>\n                <td className=\"px-2 py-2\">Phone</td>\n                <td className=\"px-2 py-2\">\n                  <div className=\"flex items-center gap-1\">Exam</div>\n                </td>\n                <td className=\"px-2 py-2\">Exam period</td>\n                <td className=\"px-2 py-2\">Exam date</td>\n                <td className=\"px-2 py-2\">Exam start time</td>\n                <td className=\"px-2 py-2\">Exam end time</td>\n                <td className=\"px-2 py-2\">\n                  <div className=\"flex items-center gap-1\">Marks</div>\n                </td>\n                <td className=\"px-2 py-2\">Status</td>\n              </tr>\n            </thead>\n            <tbody>\n              {props.courseListData === null || props.loading ? (\n                <tr>\n                  <td colSpan={12} className=\"px-2 py-2\">\n                    <Loading />\n                  </td>\n                </tr>\n              ) : props.candidatePerformanceData &&\n                FC_CandiadtePerformancePerDistrictFilter(\n                  FC_reportCandidatePerformanceData(\n                    props.courseListData,\n                    props.candidatePerformanceData,\n                    props.adminExamReport.reportCourseId\n                      ? props.adminExamReport.reportCourseId.course_id\n                      : \"all\"\n                  ),\n                  props.adminExamReport.reportDistrictId\n                    ? props.adminExamReport.reportDistrictId.district_id\n                    : null,\n                  props.adminExamReport.reportCourseId\n                    ? props.adminExamReport.reportCourseId.course_id\n                    : null,\n                  props.filterApplicantPerformance\n                ).length <= 0 ? (\n                <tr>\n                  <td colSpan={12} className=\"px-2 py-2 text-center\">\n                    No applicant list available!\n                  </td>\n                </tr>\n              ) : (\n                props.candidatePerformanceData &&\n                searchCandidatePerformanceData(\n                  FC_CandiadtePerformancePerDistrictFilter(\n                    FC_reportCandidatePerformanceData(\n                      props.courseListData,\n                      props.candidatePerformanceData,\n                      props.adminExamReport.reportCourseId\n                        ? props.adminExamReport.reportCourseId.course_id\n                        : \"all\"\n                    ),\n                    props.adminExamReport.reportDistrictId\n                      ? props.adminExamReport.reportDistrictId.district_id\n                      : null,\n                    props.adminExamReport.reportCourseId\n                      ? props.adminExamReport.reportCourseId.course_id\n                      : null,\n                    props.filterApplicantPerformance\n                  ).slice(0, 30),\n                  searchInput\n                ).map((item, i) => (\n                  <tr\n                    key={i + 1}\n                    className={`${controlRowsByStatus(\n                      item.exam_stastus\n                    )} text-gray-600 hover:bg-blue-100 hover:text-blue-700 text-sm`}\n                  >\n                    <td className=\"px-2 py-2\">{i + 1}</td>\n                    <td className=\"px-2 py-2\">\n                      {capitalizeFirstLetter(item.user_name)}\n                    </td>\n                    <td className=\"px-2 py-2\">{item.national_id}</td>\n                    <td className=\"px-2 py-2\">{item.user_email}</td>\n                    <td className=\"px-2 py-2\">{item.user_phone}</td>\n                    <td className=\"px-2 py-2\">\n                      {capitalizeFirstLetter(item.course_name)} (\n                      <span className=\"font-semibold\">{item.course_code}</span>)\n                    </td>\n                    <td className=\"px-2 py-2\">\n                      {item.exam\n                        ? getPeriodById(props.thisPeriod, item.exam.period)\n                          ? getPeriodById(props.thisPeriod, item.exam.period)!\n                              .session_plan_name\n                          : \"-\"\n                        : \"-\"}\n                    </td>\n                    <td className=\"px-2 py-2\">\n                      {item.exam.exam_date ? DATE(item.exam.exam_date) : \"-\"}\n                    </td>\n                    <td className=\"px-2 py-2\">\n                      {item.exam.start_time\n                        ? timestampToDate(item.exam.start_time).timeAMPM\n                        : \"-\"}\n                    </td>\n                    <td className=\"px-2 py-2\">\n                      {item.exam.end_time\n                        ? timestampToDate(item.exam.end_time).timeAMPM\n                        : \"-\"}\n                    </td>\n                    <td className=\"px-2 py-2\">\n                      {item.exam_stastus !== ReportUserExamStatus.Editing\n                        ? Number(item.user_total_marks.toFixed(1)) + \"%\"\n                        : \"-\"}\n                    </td>\n                    <td className=\"px-2 py-2\">\n                      {capitalizeFirstLetter(displayStatus(item.exam_stastus))}\n                    </td>\n                  </tr>\n                ))\n              )}\n            </tbody>\n          </table>\n        </div>\n      </div>\n    </Fragment>\n  );\n};\n\nconst mapStateToProps = ({\n  adminExamReport,\n}: StoreState): {\n  adminExamReport: ExamReportReducerType;\n} => {\n  return {\n    adminExamReport,\n  };\n};\n\nexport default React.memo(\n  connect(mapStateToProps, {})(CandiadtePerformancePerDistrict)\n);\n","import React, { Fragment, useState } from \"react\";\nimport { connect } from \"react-redux\";\n// import { BiSort } from \"react-icons/bi\";\nimport Loading from \"../../../components/Loading/Loading\";\nimport NoResult, {\n  NoResultThemes,\n} from \"../../../components/NoResult/NoResult\";\nimport {\n  course,\n  CandidatesFailedSucceeded,\n  ExamDoneAndRemainingByPeriodInterface,\n  ReportUserExamStatus,\n  SessionPlanInterface,\n} from \"../../../interfaces\";\nimport { ExamItemResponse } from \"../../../interfaces/prepare_exam\";\nimport { StoreState } from \"../../../reducers\";\nimport { ExamReportReducerType } from \"../../../reducers/exam_report\";\nimport { capitalizeFirstLetter } from \"../../../shared/dataTest\";\nimport { DATE } from \"../../../utils/functions\";\nimport search from \"../../../utils/search\";\nimport { getPeriodById } from \"./ExamReport\";\n\nexport interface examPerformanceStateInterface {\n  course_name: string;\n  course_code: string;\n  description: string;\n  school_levels: string[];\n  applicants: number;\n  course_id: string;\n  pass_applicant: number;\n  failed_applicant: number;\n  exam: ExamItemResponse;\n  user_total_marks: number;\n}\n\nexport const FC_ExamPerformancePerDistrictPropsData = (\n  allCourses: course[],\n  allExams: ExamItemResponse[],\n  examsData: ExamDoneAndRemainingByPeriodInterface[],\n  candidatePerformanceData: CandidatesFailedSucceeded[],\n  district_id: string\n): examPerformanceStateInterface[] => {\n  let pass: number = 0,\n    failed: number = 0,\n    result: examPerformanceStateInterface[] = [],\n    ids: string[] = [],\n    exam_ids: string[] = [],\n    doneExamsData: ExamDoneAndRemainingByPeriodInterface[] = examsData.filter(\n      (item) => item.exam_status.toLocaleLowerCase() === \"done\"\n    );\n\n  for (const key in doneExamsData) {\n    if (Object.prototype.hasOwnProperty.call(doneExamsData, key)) {\n      if (exam_ids.includes(doneExamsData[key].id)) continue;\n      exam_ids.push(doneExamsData[key].id);\n      let courser = allCourses.find(\n        (item) => item.course_id === doneExamsData[key].course\n      );\n      let _marks: number = 0;\n\n      if (courser) {\n        // CALCURATING SUM OF ALL CANDIDATES MARKS BY EXAM ID=================================\n        let candidatesByExam: CandidatesFailedSucceeded[] =\n          candidatePerformanceData.filter(\n            (item) =>\n              item.course === doneExamsData[key].course &&\n              item.exam_location &&\n              item.exam_location.district_id === district_id\n          );\n        for (const _key in candidatesByExam) {\n          if (Object.prototype.hasOwnProperty.call(candidatesByExam, _key)) {\n            if (ids.includes(candidatesByExam[_key].user.user_id)) continue;\n            ids.push(candidatesByExam[_key].user.user_id);\n            _marks += candidatesByExam[_key].total_marks;\n            if (\n              candidatesByExam[_key].user_status !==\n                ReportUserExamStatus.Editing &&\n              candidatesByExam[_key].total_marks >= 50\n            ) {\n              pass += 1;\n            } else if (\n              candidatesByExam[_key].user_status !==\n              ReportUserExamStatus.Editing\n            ) {\n              failed += 1;\n            }\n          }\n        }\n        let exam = allExams.find(\n          (item) =>\n            item.course === doneExamsData[key].course &&\n            item.period === doneExamsData[key].period\n        );\n        if (exam) {\n          result.push({\n            course_name: courser.course_name,\n            course_code: courser.course_code,\n            description: courser.description,\n            school_levels: courser.school_levels,\n            course_id: courser.course_id,\n            exam: exam,\n            pass_applicant: pass,\n            failed_applicant: failed,\n            applicants: ids.length,\n            user_total_marks: _marks ? _marks / ids.length : _marks, //candidatesByExam.length\n          });\n        }\n        _marks = 0;\n        ids = [];\n      }\n    }\n    exam_ids = [];\n  }\n\n  // SORTING ARRAY FROM MAX TO MIN ==========================\n  let swap: examPerformanceStateInterface;\n  for (let i = 0; i < result.length; i++) {\n    for (let j = i; j < result.length; j++) {\n      if (result[j].user_total_marks > result[i].user_total_marks) {\n        swap = result[j];\n        result[j] = result[i];\n        result[i] = swap;\n      }\n    }\n  }\n  return result;\n};\n\ntype ExamPerformancePerDistrictProps = {\n  loading: boolean;\n  examsListData: ExamItemResponse[] | null;\n  doneExamsData: ExamDoneAndRemainingByPeriodInterface[] | null;\n  courseListData: course[] | null;\n  thisPeriod: SessionPlanInterface[];\n  candidatePerformanceData: CandidatesFailedSucceeded[] | null;\n  thisDistrict: { district_id: string; district_name: string };\n  adminExamReport: ExamReportReducerType;\n};\n\nconst ExamPerformancePerDistrict: React.FC<ExamPerformancePerDistrictProps> = (\n  props\n) => {\n  const [searchInput, setSearchInput] = useState<string>(\"\");\n\n  return (\n    <Fragment>\n      <div className=\"bg-white my-4 max-w-full overflow-x-auto\">\n        <div className=\"w-full px-2 py-2\">\n          <input\n            onChange={(e) => setSearchInput(e.target.value)}\n            type=\"text\"\n            value={searchInput}\n            placeholder=\"Search...\"\n            className=\"w-full bg-gray-100 py-2 px-3 rounded\"\n            disabled={\n              props.courseListData &&\n              props.examsListData &&\n              props.doneExamsData &&\n              props.candidatePerformanceData &&\n              props.adminExamReport.reportDistrictId &&\n              FC_ExamPerformancePerDistrictPropsData(\n                props.courseListData,\n                props.examsListData,\n                props.doneExamsData,\n                props.candidatePerformanceData,\n                props.adminExamReport.reportDistrictId.district_id\n              ).slice(0, 30).length <= 0\n                ? true\n                : false\n            }\n          />\n        </div>\n        <table className=\"w-full shadow\" id=\"report_content\">\n          <thead className=\"bg-white border-b-2 border-gray-300 text-gray-600 font-bold text-sm\">\n            <tr>\n              <td className=\"px-2 py-2\">#</td>\n              <td\n                className=\"px-2 py-2 cursor-pointer\"\n                // onClick={() => setSort(\"course_name\")}\n              >\n                <div className=\"flex items-center gap-1\">\n                  Course\n                  {/* <BiSort /> */}\n                </div>\n              </td>\n              <td className=\"px-2 py-2\">Exam date</td>\n              <td className=\"px-2 py-2\">Exam time</td>\n              <td className=\"px-2 py-2\">Exam duration</td>\n              <td className=\"px-2 py-2\">Exam Period</td>\n              <td className=\"px-2 py-2\">Pass Applicants</td>\n              <td className=\"px-2 py-2\">Failed Applicants</td>\n              <td\n                className=\"px-2 py-2 cursor-pointer\"\n                // onClick={() => setSort(\"user_total_marks\")}\n              >\n                <div className=\"flex items-center gap-1\">\n                  Percentage\n                  {/* <BiSort /> */}\n                </div>\n              </td>\n            </tr>\n          </thead>\n          <tbody>\n            {props.courseListData === null || props.loading ? (\n              <tr>\n                <td colSpan={9} className=\"px-2 py-2\">\n                  <Loading />\n                </td>\n              </tr>\n            ) : props.examsListData &&\n              props.doneExamsData &&\n              props.candidatePerformanceData &&\n              props.adminExamReport.reportDistrictId &&\n              FC_ExamPerformancePerDistrictPropsData(\n                props.courseListData,\n                props.examsListData,\n                props.doneExamsData,\n                props.candidatePerformanceData,\n                props.adminExamReport.reportDistrictId.district_id\n              ).length <= 0 ? (\n              <tr>\n                <td colSpan={9} className=\"px-2 py-2 text-center\">\n                  <NoResult\n                    theme={NoResultThemes.Dark}\n                    value={\"No Exam list available!ss\"}\n                  />\n                </td>\n              </tr>\n            ) : (\n              props.examsListData &&\n              props.doneExamsData &&\n              props.candidatePerformanceData &&\n              props.adminExamReport.reportDistrictId &&\n              search(\n                FC_ExamPerformancePerDistrictPropsData(\n                  props.courseListData,\n                  props.examsListData,\n                  props.doneExamsData,\n                  props.candidatePerformanceData,\n                  props.adminExamReport.reportDistrictId.district_id\n                ).slice(0, 30),\n                searchInput\n              ).map((item: examPerformanceStateInterface, i) => (\n                <tr\n                  key={i + 1}\n                  className={`bg-white text-gray-600 hover:bg-blue-100 hover:text-blue-700 border-b border-gray-300 hover:border-blue-500 text-sm`}\n                >\n                  <td className=\"px-2 py-2\">{i + 1}</td>\n                  <td className=\"px-2 py-2\">\n                    {capitalizeFirstLetter(item.course_name)} (\n                    <span className=\"font-semibold\">{item.course_code}</span>)\n                  </td>\n                  <td className=\"px-2 py-2\">\n                    {item.exam ? DATE(item.exam.exam_date) : \"-\"}\n                  </td>\n                  <td className=\"px-2 py-2\">\n                    {item.exam ? item.exam.start_time : \"-\"}\n                  </td>\n                  <td className=\"px-2 py-2\">\n                    {item.exam ? item.exam!.duration + \" min\" : \"-\"}\n                  </td>\n                  <td className=\"px-2 py-2\">\n                    {item.exam\n                      ? getPeriodById(props.thisPeriod, item.exam.period)\n                        ? getPeriodById(props.thisPeriod, item.exam.period)!\n                            .session_plan_name\n                        : \"-\"\n                      : \"-\"}\n                  </td>\n                  <td className=\"px-2 py-2\">\n                    {item.pass_applicant !== undefined\n                      ? item.pass_applicant\n                      : \"-\"}\n                  </td>\n                  <td className=\"px-2 py-2\">\n                    {item.failed_applicant !== undefined\n                      ? item.failed_applicant\n                      : \"-\"}\n                  </td>\n                  <td className=\"px-2 py-2\">\n                    {Number(item.user_total_marks.toFixed(1)) + \"%\"}\n                  </td>\n                </tr>\n              ))\n            )}\n          </tbody>\n        </table>\n      </div>\n    </Fragment>\n  );\n};\n\nconst mapStateToProps = ({\n  adminExamReport,\n}: StoreState): {\n  adminExamReport: ExamReportReducerType;\n} => {\n  return {\n    adminExamReport,\n  };\n};\n\nexport default React.memo(\n  connect(mapStateToProps, {})(ExamPerformancePerDistrict)\n);\n","import React, { Fragment } from \"react\";\nimport { MainItem } from \"../../../components/Navigation/SideNavigation\";\nimport { ReportUserExamStatus } from \"../../../interfaces\";\nimport { displayStatus } from \"./DoneExamList\";\nimport { reportTitleType } from \"./ExamReport\";\n\ntype ExamReportFiltersProps = {\n  reportTitle: reportTitleType;\n\n  // FOR EXAM PREPARATION PROPS =========================================\n  filterPreparation: \"prepared\" | \"not prepared\" | \"all\";\n  setFilterPreparation: (value: \"prepared\" | \"not prepared\" | \"all\") => void;\n\n  // FOR EXAMINATION PROGRESS PROPS ========================================\n  filterExamProgress: \"all\" | \"Done\" | \"Active\";\n  setFilterExamProgress: (value: \"all\" | \"Done\" | \"Active\") => void;\n\n  // FOR APPLICANT PERFORMANCE PROPS\n  filterApplicantPerformance: ReportUserExamStatus | \"all\";\n  setFilterApplicantPerformance: (value: \"all\" | ReportUserExamStatus) => void;\n};\nconst ExamReportFilters: React.FC<ExamReportFiltersProps> = (props) => {\n  return (\n    <Fragment>\n      {props.reportTitle !== reportTitleType.EXAM_PERFORMANCE &&\n        props.reportTitle !== reportTitleType.EXAM_DISTRICT_PERFORMANCE && (\n          <div className=\"pt-1\">\n            <div className=\"text-sm text-gray-700 pb-2 pt-2\">\n              Filter by statuses:\n            </div>\n            {/* FILTER OF EXAM PREPARATION ================================ */}\n            {props.reportTitle === reportTitleType.EXAM_PREPARATION && (\n              <section>\n                <div onClick={() => props.setFilterPreparation(\"all\")}>\n                  <MainItem\n                    title=\"All\"\n                    count={0}\n                    active={props.filterPreparation === \"all\"}\n                  />\n                </div>\n                <div onClick={() => props.setFilterPreparation(\"prepared\")}>\n                  <MainItem\n                    title=\"Prepared\"\n                    count={0}\n                    active={props.filterPreparation === \"prepared\"}\n                  />\n                </div>\n                <div onClick={() => props.setFilterPreparation(\"not prepared\")}>\n                  <MainItem\n                    title=\"Not Prepared\"\n                    count={0}\n                    active={props.filterPreparation === \"not prepared\"}\n                  />\n                </div>\n              </section>\n            )}\n            {/* END FILTER OF EXAM PREPARATION ================================ */}\n\n            {/* FILTER OF EXAMINATION PROGRESS ================================ */}\n            {props.reportTitle === reportTitleType.EXAMINATION_PROGRESS && (\n              <section>\n                <div onClick={() => props.setFilterExamProgress(\"all\")}>\n                  <MainItem\n                    title=\"All\"\n                    count={0}\n                    active={props.filterExamProgress === \"all\"}\n                  />\n                </div>\n                <div onClick={() => props.setFilterExamProgress(\"Done\")}>\n                  <MainItem\n                    title=\"Completed exam\"\n                    count={0}\n                    active={props.filterExamProgress === \"Done\"}\n                  />\n                </div>\n                <div onClick={() => props.setFilterExamProgress(\"Active\")}>\n                  <MainItem\n                    title=\"Remaining Exam\"\n                    count={0}\n                    active={props.filterExamProgress === \"Active\"}\n                  />\n                </div>\n              </section>\n            )}\n            {/* END FILTER OF EXAMINATION PROGRESS ================================ */}\n\n            {/* FILTER OF APPLICANTS PERFORMANCE ================================ */}\n            {(props.reportTitle === reportTitleType.APPLICANTS_PERFORMANCE ||\n              props.reportTitle ===\n                reportTitleType.APPLICANTS_DISTRICT_PERFORMANCE) && (\n              <section>\n                <div onClick={() => props.setFilterApplicantPerformance(\"all\")}>\n                  <MainItem\n                    title=\"All\"\n                    count={0}\n                    active={props.filterApplicantPerformance === \"all\"}\n                  />\n                </div>\n\n                {Object.values(ReportUserExamStatus).map((item, index) => (\n                  <div\n                    onClick={() => props.setFilterApplicantPerformance(item)}\n                    key={index + item}\n                  >\n                    <MainItem\n                      title={displayStatus(item)}\n                      count={0}\n                      active={props.filterApplicantPerformance === item}\n                    />\n                  </div>\n                ))}\n              </section>\n            )}\n            {/* END FILTER OF APPLICANTS PERFORMANCE ================================ */}\n          </div>\n        )}\n    </Fragment>\n  );\n};\n\nexport default React.memo(ExamReportFilters);\n","import React, { Fragment, useEffect, useState } from \"react\";\nimport { BiExport, BiFilterAlt } from \"react-icons/bi\";\nimport { FaEdit } from \"react-icons/fa\";\nimport { connect } from \"react-redux\";\nimport {\n  schoolLevelsStoreInterface,\n  SetReportDistrictId,\n  SetReportDistrictIdAction,\n} from \"../../../actions\";\nimport { course } from \"../../../interfaces/index\";\nimport { ExamItemResponse } from \"../../../interfaces/prepare_exam\";\nimport { StoreState } from \"../../../reducers\";\nimport { ExamReportReducerType } from \"../../../reducers/exam_report\";\nimport { loadExaminationProgress } from \"../../AdminDashboard/ExamDashboard/ExamDashboard\";\nimport {\n  CandidateExamPerformanceReportContentInterface,\n  CandidateExamPerformanceToPrintInterface,\n} from \"./CandidatePerformance\";\nimport {\n  ExaminationProgressReportContentInterface,\n  ExaminationProgressToPrintInterface,\n} from \"./DoneExamList\";\nimport {\n  examPreparationReportContentInterface,\n  ExamPreparationToPrintInterface,\n} from \"./ExamList\";\nimport {\n  ExamPerformanceToPrintInterface,\n  examPerformanceReportContentInterface,\n} from \"./ExamPerformance\";\nimport { reportTitleType } from \"./ExamReport\";\nimport ExamReportModals, { ModalForTypes } from \"./ExamReportModals\";\n\ntype ExamReportTitleProps = {\n  thisPeriod: string;\n  // FOR PRINT PDF =========================\n  downloading: boolean;\n  dataToPrint: any[] | null;\n  downlaodPDF: () => Promise<false | undefined>;\n  // FOR REPORT TYPE =========================\n  reportTitle: reportTitleType;\n  setReportTitle: (title: reportTitleType) => void;\n  // FOR GENERATE EXCEL =========================\n  generateReportModal: {\n    reportType: \"EXCEL\" | \"PDF\";\n    status: boolean;\n  } | null;\n  setGenerateReportModal: (\n    reportData: {\n      reportType: \"EXCEL\" | \"PDF\";\n      status: boolean;\n    } | null\n  ) => void;\n  excelReportTitle: string;\n  setExcelReportTitle: (title: string) => void;\n  updateExamToPrint: () => void;\n  // FOR EXCEL EXAM PREPARATION REPORT CONTENT ===============================\n  examPreparationReportContent: examPreparationReportContentInterface[];\n  setExamPreparationReportContent: (\n    content: examPreparationReportContentInterface[]\n  ) => void;\n  examsToPrint:\n    | ExamPreparationToPrintInterface[]\n    | ExamPerformanceToPrintInterface[]\n    | null;\n  // FOR EXCEL EXAM PERFORMANCE REPORT CONTENT ===============================\n  examPerformanceToPrint: ExamPerformanceToPrintInterface[] | null;\n  examPerformanceReportContent: examPerformanceReportContentInterface[];\n  setExamPerformanceReportContent: (\n    value: examPerformanceReportContentInterface[]\n  ) => void;\n\n  // FOR EXCEL TOP 30 EXAM PERFORMANCE REPORT CONTENT ===============================\n  exam30PerformanceToPrint: ExamPerformanceToPrintInterface[] | null;\n  exam30PerformanceReportContent: examPerformanceReportContentInterface[];\n  setExam30PerformanceReportContent: (\n    value: examPerformanceReportContentInterface[]\n  ) => void;\n\n  // FOR EXCEL EXAMINATION PROGRESS REPORT CONTENT ===============================\n  examinationProgressToPrint: ExaminationProgressToPrintInterface[] | null;\n  examinationProgressReportContent: ExaminationProgressReportContentInterface[];\n  setExaminationProgressExamPerformanceReportContent: (\n    value: ExaminationProgressReportContentInterface[]\n  ) => void;\n\n  // FOR EXCEL CANDIDATE EXAM PERFORMANCE REPORT CONTENT ===============================\n  candidateExamPerformanceToPrint:\n    | CandidateExamPerformanceToPrintInterface[]\n    | null;\n  candidateExamPerformanceReportContent: CandidateExamPerformanceReportContentInterface[];\n  setCandidateExamPerformanceReportContent: (\n    value: CandidateExamPerformanceReportContentInterface[]\n  ) => void;\n\n  // FOR EXCEL TOP 30 CANDIDATE EXAM PERFORMANCE REPORT CONTENT ===============================\n  candidate30ExamPerformanceToPrint:\n    | CandidateExamPerformanceToPrintInterface[]\n    | null;\n  candidate30ExamPerformanceReportContent: CandidateExamPerformanceReportContentInterface[];\n  setCandidate30ExamPerformanceReportContent: (\n    value: CandidateExamPerformanceReportContentInterface[]\n  ) => void;\n\n  // FOR CHOOSING LOCATION ===========================\n  adminExamReport: ExamReportReducerType;\n  SetReportDistrictId: (\n    data: {\n      district_id: string;\n      district_name: string;\n    } | null\n  ) => SetReportDistrictIdAction;\n\n  // FROM REDUX =================\n  schoolLevels: schoolLevelsStoreInterface;\n  courses: course[] | null;\n  examsList: ExamItemResponse[] | null;\n};\n\nconst ExamReportTitle: React.FC<ExamReportTitleProps> = (props) => {\n  const [changeReport, setChangeReport] = useState<boolean>(false);\n  const [districtModal, setDistrictModal] = useState<boolean>(false);\n  const [excelModal, setExcelModal] = useState<boolean>(false);\n  const [courseModal, setCourseModal] = useState<boolean>(false);\n\n  useEffect(() => {\n    if (\n      props.reportTitle === reportTitleType.EXAM_DISTRICT_PERFORMANCE &&\n      props.adminExamReport.reportDistrictId === null\n    ) {\n      setDistrictModal(true);\n    }\n    if (\n      props.reportTitle === reportTitleType.EXAM_DISTRICT_PERFORMANCE &&\n      props.adminExamReport.reportDistrictId !== null\n    ) {\n      setDistrictModal(false);\n    }\n  }, [props.adminExamReport.reportDistrictId, props.reportTitle]);\n\n  return (\n    <Fragment>\n      <div className=\"grid md:grid-cols-12 items-center\">\n        <div className=\"col-span-1 md:col-span-8\">\n          <div className=\"mt-4 mx-4 flex flex-col gap-1\">\n            <span className=\"text-xl font-bold text-gray-700\">Exam Report</span>\n            <div\n              className=\"flex flex-row gap-2 items-end cursor-pointer\"\n              onClick={() => setChangeReport(true)}\n            >\n              <span className=\"text-gray-500 text-xl\">Report type: </span>\n              <span className=\"text-blue-600 text-3xl font-bold underline\">\n                {props.reportTitle}{\" \"}\n                {props.reportTitle ===\n                  reportTitleType.EXAM_DISTRICT_PERFORMANCE &&\n                props.adminExamReport.reportDistrictId\n                  ? props.adminExamReport.reportDistrictId.district_name\n                  : \"\"}\n              </span>\n            </div>\n            {(props.reportTitle === reportTitleType.EXAM_DISTRICT_PERFORMANCE ||\n              props.reportTitle ===\n                reportTitleType.APPLICANTS_DISTRICT_PERFORMANCE ||\n              props.reportTitle === reportTitleType.APPLICANTS_PERFORMANCE) && (\n              <div className=\"flex flex-wrap justify-starts items-center text-xs text-gray-800 font-medium gap-1 my-1\">\n                <span className=\"text-gray-500\">Filter result: </span>\n                {props.adminExamReport.reportDistrictId &&\n                (props.reportTitle ===\n                  reportTitleType.APPLICANTS_DISTRICT_PERFORMANCE ||\n                  props.reportTitle ===\n                    reportTitleType.EXAM_DISTRICT_PERFORMANCE) ? (\n                  <span className=\"px-2 py-1 rounded bg-gray-300\">\n                    # {props.adminExamReport.reportDistrictId.district_name}\n                  </span>\n                ) : (\n                  <span className=\"px-2 py-1 rounded bg-gray-300\">\n                    # All district\n                  </span>\n                )}\n                {props.adminExamReport.reportCourseId ? (\n                  props.reportTitle ===\n                    reportTitleType.APPLICANTS_DISTRICT_PERFORMANCE && (\n                    <span className=\"px-2 py-1 rounded bg-gray-300\">\n                      #\n                      {props.adminExamReport.reportCourseId.course_name +\n                        \" (\" +\n                        props.adminExamReport.reportCourseId.course_code +\n                        \")\"}\n                    </span>\n                  )\n                ) : (\n                  <span className=\"px-2 py-1 rounded bg-gray-300\">\n                    # All exams\n                  </span>\n                )}\n              </div>\n            )}\n          </div>\n        </div>\n        <div className=\"col-span-1 md:col-span-4\">\n          <div className=\"float-right mt-3\">\n            {props.dataToPrint && props.dataToPrint.length > 0 && (\n              <div className=\"flex flex-row items-center justify-end font-bold mb-2\">\n                <BiExport className=\"text-2xl text-gray-500\" />\n                <span className=\"text-gray-500\">Export as</span>\n                <button\n                  className={`px-4 py-1 ml-1 rounded bg-white border hover:text-blue-600 font-bold hover:bg-blue-50 border-gray-200 focus:outline-none`}\n                  // disabled={\n                  //   props.examsToPrint && props.examsToPrint.length <= 0\n                  //     ? true\n                  //     : false\n                  // }\n                  onClick={() => {\n                    props.updateExamToPrint();\n                    setExcelModal(true);\n                    props.setGenerateReportModal({\n                      reportType: \"EXCEL\",\n                      status: true,\n                    });\n                  }}\n                >\n                  EXCEL\n                </button>\n                <button\n                  className={`px-4 py-1 ml-1 rounded bg-white border hover:text-blue-600 font-bold hover:bg-blue-50 border-gray-200 focus:outline-none ${\n                    props.downloading && \"cursor-wait\"\n                  }`}\n                  onClick={() => props.downlaodPDF()}\n                  disabled={props.downloading}\n                >\n                  PDF\n                </button>\n              </div>\n            )}\n\n            <div>\n              <div\n                onClick={() => setChangeReport(true)}\n                className=\"bg-blue-50 py-2 px-2 border border-blue-300 text-blue-600 font-medium hover:bg-blue-100 flex flex-row items-center justify-center gap-2 text-sm float-right\"\n              >\n                <FaEdit className=\"text-xl\" />\n                Change Report\n              </div>\n            </div>\n\n            <section className=\"flex items-center gap-1 float-right mt-1\">\n              {(props.reportTitle ===\n                reportTitleType.EXAM_DISTRICT_PERFORMANCE ||\n                props.reportTitle ===\n                  reportTitleType.APPLICANTS_DISTRICT_PERFORMANCE) && (\n                <div\n                  onClick={() => setDistrictModal(true)}\n                  className=\"btn bg-blue-50 border border-blue-300 text-blue-600 cursor-pointer hover:bg-blue-100 flex flex-row items-center justify-center gap-2 text-sm \"\n                >\n                  <BiFilterAlt className=\"text-xl\" />\n                  Filter by district\n                </div>\n              )}\n              {(props.reportTitle === reportTitleType.APPLICANTS_PERFORMANCE ||\n                props.reportTitle ===\n                  reportTitleType.APPLICANTS_DISTRICT_PERFORMANCE) && (\n                <div\n                  onClick={() => setCourseModal(true)}\n                  className=\"btn bg-blue-50 border border-blue-300 text-blue-600 cursor-pointer hover:bg-blue-100 flex flex-row items-center justify-center gap-2 text-sm \"\n                >\n                  <BiFilterAlt className=\"text-xl\" />\n                  Filter by exam\n                </div>\n              )}\n            </section>\n          </div>\n        </div>\n      </div>\n\n      {/* GENERATE EXCEL MODAL CONTROLLERS ============================================ */}\n      {excelModal && (\n        <ExamReportModals\n          modalFor={ModalForTypes.generateReportModal}\n          modalState={excelModal}\n          changeModalState={setExcelModal}\n          reportTitle={props.reportTitle}\n          setGenerateReportModal={props.setGenerateReportModal}\n          excelReportTitle={props.excelReportTitle}\n          setExcelReportTitle={props.setExcelReportTitle}\n          updateExamToPrint={props.updateExamToPrint}\n          generateReportModal={props.generateReportModal}\n          // EXAM PREPARATION ######################\n          examsToPrint={props.examsToPrint}\n          examPreparationReportContent={props.examPreparationReportContent}\n          setExamPreparationReportContent={\n            props.setExamPreparationReportContent\n          }\n          // EXAM PERFORMANCE ######################\n          examPerformanceToPrint={props.examPerformanceToPrint}\n          examPerformanceReportContent={props.examPerformanceReportContent}\n          setExamPerformanceReportContent={\n            props.setExamPerformanceReportContent\n          }\n          // TOP 30 EXAM PERFORMANCE ######################\n          exam30PerformanceToPrint={props.exam30PerformanceToPrint}\n          exam30PerformanceReportContent={props.exam30PerformanceReportContent}\n          setExam30PerformanceReportContent={\n            props.setExam30PerformanceReportContent\n          }\n          // EXAMINATION PROGRESS ######################\n          examinationProgressToPrint={props.examinationProgressToPrint}\n          examinationProgressReportContent={\n            props.examinationProgressReportContent\n          }\n          setExaminationProgressExamPerformanceReportContent={\n            props.setExaminationProgressExamPerformanceReportContent\n          }\n          // CANDIDATE EXAM PERFORMANCE ######################\n          candidateExamPerformanceToPrint={\n            props.candidateExamPerformanceToPrint\n          }\n          candidateExamPerformanceReportContent={\n            props.candidateExamPerformanceReportContent\n          }\n          setCandidateExamPerformanceReportContent={\n            props.setCandidateExamPerformanceReportContent\n          }\n          candidate30ExamPerformanceToPrint={\n            props.candidate30ExamPerformanceToPrint\n          }\n          candidate30ExamPerformanceReportContent={\n            props.candidate30ExamPerformanceReportContent\n          }\n          setCandidate30ExamPerformanceReportContent={\n            props.setCandidate30ExamPerformanceReportContent\n          }\n        />\n      )}\n      {/* END GENERATE EXCEL MODAL CONTROLLERS ============================================ */}\n\n      {/* CHANGE REPORT TYPE MODAL CONTROLLERS ============================================ */}\n      {changeReport && (\n        <ExamReportModals\n          modalFor={ModalForTypes.title}\n          modalState={changeReport}\n          reportTitle={props.reportTitle}\n          changeModalState={setChangeReport}\n          setReportTitle={props.setReportTitle}\n          setExcelReportTitle={props.setExcelReportTitle}\n        />\n      )}\n      {/* END CHANGE REPORT TYPE MODAL CONTROLLERS ============================================ */}\n\n      {/* CHANGE DISTRICT FILTER MODAL CONTROLLERS ============================================ */}\n      {districtModal && (\n        <ExamReportModals\n          modalFor={ModalForTypes.choose_district}\n          modalState={districtModal}\n          changeModalState={setDistrictModal}\n          districtId={\n            props.adminExamReport.reportDistrictId\n              ? props.adminExamReport.reportDistrictId.district_id\n              : \"all\"\n          }\n          reportTitle={props.reportTitle}\n        />\n      )}\n      {/* END CHANGE DISTRICT FILTER MODAL CONTROLLERS ============================================ */}\n\n      {/* CHANGE COURSE FILTER MODAL CONTROLLERS ============================================ */}\n      {courseModal &&\n        loadExaminationProgress(\n          props.adminExamReport.DoneExam,\n          props.examsList,\n          props.schoolLevels.selectedEducationCategory,\n          props.courses,\n          props.schoolLevels.school_levels,\n          props.thisPeriod\n        ) && (\n          <ExamReportModals\n            modalFor={ModalForTypes.choose_exam}\n            modalState={courseModal}\n            AllExamData={\n              loadExaminationProgress(\n                props.adminExamReport.DoneExam,\n                props.examsList,\n                props.schoolLevels.selectedEducationCategory,\n                props.courses,\n                props.schoolLevels.school_levels,\n                props.thisPeriod\n              )!.finished\n            }\n            changeModalState={setCourseModal}\n            thisExam={props.adminExamReport.reportCourseId}\n          />\n        )}\n      {/* END CHANGE COURSE FILTER MODAL CONTROLLERS ============================================ */}\n    </Fragment>\n  );\n};\n\nconst mapStateToProps = ({\n  adminExamReport,\n  schoolLevels,\n  course,\n  prepareExam,\n}: StoreState): {\n  schoolLevels: schoolLevelsStoreInterface;\n  courses: course[] | null;\n  examsList: ExamItemResponse[] | null;\n  adminExamReport: ExamReportReducerType;\n} => {\n  return {\n    schoolLevels,\n    courses: course.courses,\n    examsList: prepareExam.examsList,\n    adminExamReport,\n  };\n};\n\nexport default React.memo(\n  connect(mapStateToProps, { SetReportDistrictId })(ExamReportTitle)\n);\n","import React from \"react\";\nimport * as FileSaver from \"file-saver\";\nimport * as XLSX from \"xlsx\";\nimport { RiFileExcel2Fill } from \"react-icons/ri\";\n\ninterface ExportToExcelProps {\n  fileData: any[];\n  fileName: string;\n  btnName?: string;\n  className?: string;\n  showIcon?: boolean;\n}\n\nconst ExportToExcel: React.FC<ExportToExcelProps> = ({\n  fileData,\n  fileName,\n  btnName = \"Excel\",\n  className = \"flex items-center gap-1 px-4 py-1 rounded text-green-700 bg-white border hover:text-white hover:bg-green-700 border-green-700 font-bold\",\n  showIcon = true,\n}) => {\n  const fileType =\n    \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;charset=UTF-8\";\n  const fileExtension = \".xlsx\";\n\n  const exportToCSV = (apiData: any[], fileName: string) => {\n    const ws = XLSX.utils.json_to_sheet(apiData);\n    const wb = { Sheets: { data: ws }, SheetNames: [\"data\"] };\n    const excelBuffer = XLSX.write(wb, { bookType: \"xlsx\", type: \"array\" });\n    const data = new Blob([excelBuffer], { type: fileType });\n    FileSaver.saveAs(data, fileName + fileExtension);\n  };\n\n  return (\n    <button\n      onClick={(e) => exportToCSV(fileData, fileName)}\n      className={className}\n    >\n      {showIcon && <RiFileExcel2Fill />}\n      {btnName}\n    </button>\n  );\n};\n\nexport default ExportToExcel;\n","export default __webpack_public_path__ + \"static/media/mineduc.11a9ae1c.png\";","import jsPDF from \"jspdf\";\nimport { DATE } from \"../../utils/functions\";\nimport Logo from \"../../utils/mineduc.png\";\nrequire(\"jspdf-autotable\");\n\nexport const addFooters = (doc: any) => {\n  const pageCount = doc.internal.getNumberOfPages();\n\n  doc.setFont(\"helvetica\", \"italic\");\n  doc.setFontSize(8);\n  for (var i = 1; i <= pageCount; i++) {\n    doc.setPage(i);\n    doc.text(\n      \"Page \" + String(i) + \" of \" + String(pageCount),\n      doc.internal.pageSize.width / 2,\n      297,\n      {\n        align: \"center\",\n      }\n    );\n  }\n};\n\nexport type reportSettingsInterface = {\n  doneBy: string;\n  title: string;\n  subjectTitle: string;\n  subject: string;\n  institute: string;\n  period: string;\n  footer: string;\n  orientation?: \"p\" | \"l\";\n};\n\nexport const generatePDF = async (\n  reportSettings: reportSettingsInterface,\n  table: HTMLElement,\n  callBack: (status: boolean) => void\n) => {\n  callBack(true);\n  const orientation: \"p\" | \"l\" = reportSettings.orientation\n    ? reportSettings.orientation\n    : \"p\";\n  var lMargin: number = 20; //left margin in mm\n  var rMargin: number = 20; //right margin in mm\n  var pdfInMM: number = 185; // width of A4 in mm\n\n  //   var doc = new jsPDF(\"p\", \"mm\", \"a4\");\n  var doc: any = new jsPDF(orientation, \"mm\", \"a4\");\n\n  doc.setTextColor(95, 95, 95);\n  doc.setFontSize(28);\n  // doc.text(\n  //   this.props.reportTitle,\n  //   doc.internal.pageSize.getWidth() / 2,\n  //   30,\n  //   undefined,\n  //   \"center\"\n  // );\n  doc.addImage(Logo, \"png\", 20, 20, 10, 10);\n  doc.text(\"MINEDUC\", 32, 28.5, undefined, \"left\");\n  //   doc.setTextColor(19, 90, 152);\n  doc.setFontSize(26);\n  doc.text(\n    reportSettings.title,\n    doc.internal.pageSize.getWidth() / 2,\n    42.7,\n    undefined,\n    \"center\"\n  );\n\n  doc.setFontSize(20);\n  doc.text(\n    reportSettings.institute,\n    doc.internal.pageSize.getWidth() / 2,\n    53.7,\n    undefined,\n    \"center\"\n  );\n\n  var lines;\n  lines = doc.splitTextToSize(\n    reportSettings.subject,\n    pdfInMM - lMargin - rMargin\n  );\n  // if (reportSettings.position) {\n  // } else if (reportSettings.subject) {\n  //   lines = doc.splitTextToSize(\n  //     reportSettings.subject,\n  //     pdfInMM - lMargin - rMargin\n  //   );\n  // }\n\n  //   doc.setTextColor(0, 123, 255);\n  doc.setFontSize(16);\n  //   doc.text(lines, doc.internal.pageSize.getWidth() / 2, 45, {\n  //     maxWidth: 85,\n  //     align: \"center\",\n  //   });\n\n  var y = 63,\n    width;\n  doc.setTextColor(95, 95, 95);\n  doc.text(`${reportSettings.subjectTitle}: `, lMargin, y);\n  width = doc.getTextWidth(`${reportSettings.subjectTitle}: `);\n  // if (reportSettings.position) {\n  // } else if (reportSettings.position) {\n  //   doc.text(`Subject: `, lMargin, y);\n  //   width = doc.getTextWidth(\"Subject: \");\n  // }\n  // doc.setFontType(\"bold\");\n  doc.setTextColor(38, 38, 38);\n  for (var i = 0; i < lines.length; i++) {\n    if (y > 280) {\n      y = 10;\n      doc.addPage();\n    }\n    // doc.text(15, y, lines[i]);\n    doc.text(lines[i], lMargin + width, y);\n    y = y + 7;\n  }\n  doc.setTextColor(95, 95, 95);\n  doc.text(\"Period: \", lMargin, y + 3);\n  width = doc.getTextWidth(\"Period: \");\n  doc.setTextColor(38, 38, 38);\n  doc.text(reportSettings.period, lMargin + width, y + 3);\n\n  doc.autoTable({\n    html: table,\n    startY: 85,\n    margin: { horizontal: 20 },\n    cellPadding: 3, // Horizontal cell padding\n    // fontSize: 12,\n    rowHeight: 20,\n    // styles: { overflow: \"linebreak\" },\n    bodyStyles: { valign: \"top\" },\n    columnStyles: { email: { cellWidth: \"wrap\" } },\n    theme: \"striped\",\n    tableWidth: true,\n  });\n\n  doc.setFontSize(12);\n  let finalY = doc.lastAutoTable.finalY; // The y position on the page\n  doc.text(`Reported by: ${reportSettings.doneBy}`, lMargin, finalY + 15);\n  doc.text(\n    \"Report downloaded on \" + DATE(new Date().toString()),\n    lMargin,\n    finalY + 23\n  );\n\n  addFooters(doc);\n  await doc\n    .save(\n      `${\n        reportSettings.title +\n        \": \" +\n        reportSettings.subject +\n        \": \" +\n        reportSettings.period\n      }.pdf`,\n      { returnPromise: true }\n    )\n    .then(callBack(false));\n};\n","import React, { useState } from \"react\";\nimport {\n  MdCheckCircle,\n  MdRadioButtonUnchecked,\n  MdSearch,\n} from \"react-icons/md\";\nimport Loading from \"../../components/Loading/Loading\";\nimport {\n  PlansInterface,\n  SessionPlanInterface,\n  SessionPlanTypeStatus,\n} from \"../../interfaces\";\nimport { DATE } from \"../../utils/functions\";\nimport searchData from \"../../utils/search\";\n\nexport const isPlansActive = (plans: PlansInterface[]): PlansInterface[] => {\n  let today = new Date();\n  let activePlans: PlansInterface[] = [];\n  for (let plan of plans) {\n    let startDate = new Date(plan.start_date);\n    let endDate = new Date(plan.end_date);\n    if (\n      startDate.getTime() <= today.getTime() &&\n      endDate.getTime() >= today.getTime() &&\n      plan.type_status === SessionPlanTypeStatus.OPEN\n    ) {\n      activePlans = [...activePlans, plan];\n    }\n  }\n  return activePlans;\n};\n\ninterface ChooseSessionProps {\n  allSession: SessionPlanInterface[] | null;\n  setSelectSession: (period: SessionPlanInterface | \"all\") => void;\n  currentSelected: SessionPlanInterface | \"all\";\n  chooseAll: boolean;\n}\n\nconst ChooseSession = (props: ChooseSessionProps) => {\n  const [selectedPlan, setSelectedPlan] = useState<SessionPlanInterface | null>(\n    null\n  );\n  const [search, setSearch] = useState<string>(\"\");\n  const getSearch = (\n    period: SessionPlanInterface[],\n    searched: string\n  ): SessionPlanInterface[] => {\n    return searchData(period, searched) as SessionPlanInterface[];\n  };\n\n  return (\n    <div className=\"\">\n      <div className=\"px-3\">\n        <input\n          onChange={(e: React.ChangeEvent<HTMLInputElement>) =>\n            setSearch(e.target.value)\n          }\n          type=\"text\"\n          className=\"py-3 px-4 w-full rounded border border-gray-400 mb-3\"\n          placeholder=\"Search by year, name\"\n          disabled={props.allSession === null || props.allSession.length === 0}\n        />\n      </div>\n\n      <div className=\"bg-gray-100 px-3 pt-3 pb-2 rounded-b\">\n        {props.allSession === null ? (\n          <Loading />\n        ) : props.allSession.length === 0 ? (\n          <div className=\"flex flex-col text-gray-400 items-center justify-center mb-2 bg-white py-4\">\n            <MdSearch className=\"text-6xl\" />\n            <div className=\"flex flex-col items-center justify-center\">\n              <span>No session found!</span>\n            </div>\n          </div>\n        ) : (\n          <section>\n            {props.chooseAll && (\n              <div\n                className={`rounded border ${\n                  props.currentSelected === \"all\"\n                    ? \"bg-blue-50 border-blue-300\"\n                    : \"bg-white border-white \"\n                } group hover:border-blue-500 px-2 py-2 mb-2 flex flex-col md:flex-row items-start md:items-center md:justify-between`}\n              >\n                <div className=\"flex flex-row items-center gap-3\">\n                  {props.currentSelected === \"all\" ? (\n                    <MdCheckCircle className={`text-blue-500 text-4xl`} />\n                  ) : (\n                    <MdRadioButtonUnchecked\n                      className={`text-gray-300 text-4xl`}\n                    />\n                  )}\n                  <div className=\"flex flex-col\">\n                    <div className={`text-gray-600 font-bold`}>All session</div>\n                  </div>\n                </div>\n                <div\n                  onClick={() => {\n                    props.setSelectSession(\"all\");\n                  }}\n                  className=\"bg-gray-50 group-hover:bg-blue-600 font-semibold text-gray-400 group-hover:text-white rounded px-3 py-2 cursor-pointer\"\n                >\n                  Select\n                </div>\n              </div>\n            )}\n            {getSearch(props.allSession, search).map((item, i) => (\n              <div\n                key={i + 1}\n                className={`rounded border ${\n                  props.currentSelected !== \"all\" &&\n                  props.currentSelected._id === item._id\n                    ? \"bg-blue-50 border-blue-300\"\n                    : \"bg-white border-white \"\n                } group hover:border-blue-500 px-2 py-2 mb-2`}\n              >\n                <div className=\"flex flex-col md:flex-row items-start md:items-center md:justify-between \">\n                  <div className=\"flex flex-row items-center gap-3\">\n                    {props.currentSelected !== \"all\" &&\n                    props.currentSelected._id === item._id ? (\n                      <MdCheckCircle className={`text-blue-500 text-4xl`} />\n                    ) : (\n                      <MdRadioButtonUnchecked\n                        className={`text-gray-300 text-4xl`}\n                      />\n                    )}\n                    <div className=\"flex flex-col\">\n                      <div\n                        className={`${\n                          props.currentSelected !== \"all\" &&\n                          props.currentSelected._id === item._id\n                            ? \"text-blue-600\"\n                            : \"text-gray-600\"\n                        } font-bold`}\n                      >\n                        {item.session_plan_name}\n                      </div>\n                      <div className=\"text-sm text-gray-500\">\n                        <span>Status: </span>\n                        <span\n                          className={`${\n                            item.is_active === true\n                              ? \"text-gray-900 font-bold underline\"\n                              : \"text-gray-500 italic\"\n                          }`}\n                        >\n                          {item.is_active === true ? \"Active\" : \"Expired\"}\n                        </span>\n                      </div>\n                    </div>\n                  </div>\n                  <div className=\"flex flex-row items-center gap-2\">\n                    {(selectedPlan === null ||\n                      selectedPlan._id !== item._id) && (\n                      <div\n                        onClick={() => setSelectedPlan(item)}\n                        className=\"bg-gray-50 group-hover:bg-blue-100 font-semibold text-gray-400 group-hover:text-blue-600 rounded px-3 py-2 cursor-pointer\"\n                      >\n                        Details\n                      </div>\n                    )}\n                    <div\n                      onClick={() => {\n                        props.setSelectSession(item);\n                      }}\n                      className=\"bg-gray-50 group-hover:bg-blue-600 font-semibold text-gray-400 group-hover:text-white rounded px-3 py-2 cursor-pointer\"\n                    >\n                      Select\n                    </div>\n                    {selectedPlan !== null && selectedPlan._id === item._id && (\n                      <div\n                        onClick={() => setSelectedPlan(null)}\n                        className=\"bg-red-100 group-hover:bg-red-200 font-semibold text-red-600 group-hover:text-red-800 rounded px-3 py-2 cursor-pointer\"\n                      >\n                        Close\n                      </div>\n                    )}\n                  </div>\n                </div>\n                {selectedPlan !== null && selectedPlan._id === item._id && (\n                  <div className=\"bg-white rounded border border-blue-50 mt-2 animate__animated animate__fadeIn\">\n                    <table className=\"w-full\">\n                      <thead className=\"bg-blue-50\">\n                        <tr className=\"text-left\">\n                          <th className=\"px-3 py-3\">#</th>\n                          <th>Plan</th>\n                          <th>Start date</th>\n                          <th>Ending date</th>\n                          <th>Status</th>\n                        </tr>\n                      </thead>\n                      <tbody className=\"text-sm\">\n                        {selectedPlan !== null &&\n                          selectedPlan._id === item._id &&\n                          selectedPlan.plans.length > 0 &&\n                          item.plans.map((plan, i) => (\n                            <tr\n                              key={i + 1}\n                              className={`${\n                                isPlansActive(item.plans).find(\n                                  (itm) => itm.type_key === plan.type_key\n                                ) !== undefined\n                                  ? \"bg-blue-100 text-blue-600 font-bold\"\n                                  : \"\"\n                              } text-left border-b border-blue-50`}\n                            >\n                              <td className=\"px-3 py-1\">{i + 1}</td>\n                              <td>{plan.type_title}</td>\n                              <td>{DATE(plan.start_date, \"DD/MM/YYYY\")}</td>\n                              <td>{DATE(plan.end_date, \"DD/MM/YYYY\")}</td>\n                              <td>{plan.type_status}</td>\n                            </tr>\n                          ))}\n                      </tbody>\n                    </table>\n                  </div>\n                )}\n              </div>\n            ))}\n          </section>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default React.memo(ChooseSession);\n","import React, { Fragment, useState } from \"react\";\nimport { BiSort } from \"react-icons/bi\";\nimport { connect } from \"react-redux\";\nimport Loading from \"../../../components/Loading/Loading\";\nimport { SessionPlanInterface } from \"../../../interfaces\";\nimport { course } from \"../../../interfaces/course\";\nimport { ExamItemResponse } from \"../../../interfaces/prepare_exam\";\nimport {\n  CandidatesFailedSucceeded,\n  ReportUserExamStatus,\n} from \"../../../interfaces/reports\";\nimport { StoreState } from \"../../../reducers\";\nimport { ExamReportReducerType } from \"../../../reducers/exam_report\";\nimport { capitalizeFirstLetter } from \"../../../shared/dataTest\";\nimport { DATE, sortThisArray, timestampToDate } from \"../../../utils/functions\";\nimport { displayStatus } from \"./DoneExamList\";\nimport { getPeriodById } from \"./ExamReport\";\n\n// EXCEL FILE FUNCTIONS ================================\nexport interface CandidateExamPerformanceToPrintInterface {\n  applicant_id: number;\n  course_name: string;\n  course_code: string;\n  description: string;\n  school_levels: string;\n  exam_period: string;\n  exam_date: string;\n  exam_start_time: string;\n  exam_end_time: string;\n  applicant_name: string;\n  national_id: string;\n  email: string;\n  phone: string;\n  marks: string;\n  performance_status: string;\n}\n\nexport enum CandidateExamPerformanceReportContentKeyInterface {\n  APPLICANT = \"applicant_name\",\n  N_ID = \"national_id\",\n  EMAIL = \"email\",\n  PHONE = \"phone\",\n  MARKS = \"marks\",\n  STATUS = \"performance_status\",\n  COURSER_NAME = \"course_name\",\n  COURSE_CODE = \"course_code\",\n  SCHOOL_LEVEL = \"school_levels\",\n  PERIOD = \"exam_period\",\n  DATE = \"exam_date\",\n  START_TIME = \"exam_start_time\",\n  END_TIME = \"exam_end_time\",\n}\n\nexport interface CandidateExamPerformanceReportContentInterface {\n  key: CandidateExamPerformanceReportContentKeyInterface;\n  title: string;\n  status: boolean;\n}\n\nexport const candidateExamPerformanceIsChangeAllowed = (\n  key: CandidateExamPerformanceReportContentKeyInterface\n): boolean => {\n  if (\n    key === CandidateExamPerformanceReportContentKeyInterface.COURSER_NAME ||\n    key === CandidateExamPerformanceReportContentKeyInterface.COURSE_CODE ||\n    key === CandidateExamPerformanceReportContentKeyInterface.PERIOD ||\n    key === CandidateExamPerformanceReportContentKeyInterface.APPLICANT ||\n    key === CandidateExamPerformanceReportContentKeyInterface.N_ID\n  ) {\n    return false;\n  }\n  return true;\n};\n\nexport const defaultCandidateExamPerformanceContent: CandidateExamPerformanceReportContentInterface[] =\n  [\n    {\n      key: CandidateExamPerformanceReportContentKeyInterface.APPLICANT,\n      title: \"Applicant names\",\n      status: true,\n    },\n    {\n      key: CandidateExamPerformanceReportContentKeyInterface.N_ID,\n      title: \"National ID\",\n      status: true,\n    },\n    {\n      key: CandidateExamPerformanceReportContentKeyInterface.EMAIL,\n      title: \"Email\",\n      status: true,\n    },\n    {\n      key: CandidateExamPerformanceReportContentKeyInterface.PHONE,\n      title: \"Phone\",\n      status: true,\n    },\n    {\n      key: CandidateExamPerformanceReportContentKeyInterface.MARKS,\n      title: \"Marks\",\n      status: true,\n    },\n    {\n      key: CandidateExamPerformanceReportContentKeyInterface.COURSER_NAME,\n      title: \"Course names\",\n      status: true,\n    },\n    {\n      key: CandidateExamPerformanceReportContentKeyInterface.COURSE_CODE,\n      title: \"Course code\",\n      status: true,\n    },\n    {\n      key: CandidateExamPerformanceReportContentKeyInterface.SCHOOL_LEVEL,\n      title: \"School levels\",\n      status: true,\n    },\n    {\n      key: CandidateExamPerformanceReportContentKeyInterface.PERIOD,\n      title: \"Exam period\",\n      status: true,\n    },\n    {\n      key: CandidateExamPerformanceReportContentKeyInterface.DATE,\n      title: \"Exam date\",\n      status: true,\n    },\n    {\n      key: CandidateExamPerformanceReportContentKeyInterface.START_TIME,\n      title: \"Exam start time\",\n      status: true,\n    },\n    {\n      key: CandidateExamPerformanceReportContentKeyInterface.END_TIME,\n      title: \"Exam end time\",\n      status: true,\n    },\n    {\n      key: CandidateExamPerformanceReportContentKeyInterface.STATUS,\n      title: \"Status\",\n      status: true,\n    },\n  ];\n// END EXCEL FILE FUNCTIONS ================================\n\nexport interface candidatePerfomranceStateInterface {\n  user_id: string;\n  user_name: string;\n  national_id: string;\n  user_email: string;\n  user_phone: string;\n  course_name: string;\n  course_code: string;\n  description: string;\n  school_levels: string[];\n  course_id: string;\n  exam: CandidatesFailedSucceeded;\n  user_total_marks: number;\n  exam_stastus: ReportUserExamStatus;\n}\n\nexport const FC_reportCandidatePerformanceData = (\n  allCourses: course[],\n  data: CandidatesFailedSucceeded[],\n  course_id: string\n): candidatePerfomranceStateInterface[] => {\n  let result: candidatePerfomranceStateInterface[] = [],\n    ids: string[] = [];\n  for (const key in data) {\n    if (Object.prototype.hasOwnProperty.call(data, key)) {\n      if (!ids.includes(data[key]._id)) {\n        ids.push(data[key]._id);\n        let courser = allCourses.find(\n          (item) => item.course_id === data[key].course\n        );\n        if (courser) {\n          result.push({\n            user_id: data[key].user.user_id,\n            user_name:\n              capitalizeFirstLetter(data[key].user.user_info.lname) +\n              \" \" +\n              capitalizeFirstLetter(data[key].user.user_info.fname),\n            national_id: data[key].user.n_id ? data[key].user.n_id : \"\",\n            user_email: data[key].user.email,\n            user_phone: data[key].user.phone_number,\n            course_name: courser.course_name,\n            course_code: courser.course_code,\n            description: courser.description,\n            school_levels: courser.school_levels,\n            course_id: courser.course_id,\n            exam: data[key],\n            user_total_marks: data[key].total_marks,\n            exam_stastus: data[key].user_status,\n          });\n        }\n      }\n    }\n  }\n\n  if (course_id !== \"all\") {\n    result = result.filter((item) => item.course_id === course_id);\n  }\n  return result;\n};\n\nexport const FC_reportCandidatePerformanceDataFilter = (\n  thisList: candidatePerfomranceStateInterface[],\n  thisValue: ReportUserExamStatus | \"all\"\n): candidatePerfomranceStateInterface[] => {\n  if (thisValue === \"all\") {\n    return thisList;\n  } else {\n    return thisList.filter((item) => item.exam_stastus === thisValue);\n  }\n};\n\nexport const searchCandidatePerformanceData = (\n  objList: candidatePerfomranceStateInterface[],\n  text: string\n): candidatePerfomranceStateInterface[] => {\n  if (undefined === text || text === \"\") return objList;\n  return objList.filter((product) => {\n    let flag;\n    // let dataKeys = product;\n\n    for (let prop in product) {\n      flag = false;\n      if (\n        prop === \"course_name\" ||\n        prop === \"course_code\" ||\n        prop === \"user_total_marks\" ||\n        prop === \"exam_stastus\" ||\n        prop === \"description\" ||\n        prop === \"user_name\" ||\n        prop === \"user_phone\" ||\n        prop === \"user_email\" ||\n        prop === \"national_id\"\n      ) {\n        flag =\n          product[prop].toString().toLowerCase().indexOf(text.toLowerCase()) >\n          -1;\n      }\n      if (flag) break;\n    }\n    return flag;\n  });\n};\n\nexport const controlRowsByStatus = (status: string): string => {\n  if (status === \"Done\") {\n    return \"bg-blue-50 border-gray-300 hover:border-blue-500 border-t border-b\";\n  }\n  if (status === \"Removed\") {\n    return \"bg-white border-red-300 hover:border-red-500 border-t border-b\";\n  }\n  if (status === \"Paused\") {\n    return \"bg-white border-yellow-300 hover:border-yellow-500 border-t border-b\";\n  }\n  return \"bg-white border-gray-300 hover:border-blue-500 border-t border-b\";\n};\n\ntype CandidatePerformanceProps = {\n  loading: boolean;\n  examsListData: ExamItemResponse[] | null;\n  courseListData: course[] | null;\n  thisPeriod: SessionPlanInterface[];\n  candidatePerformanceData: CandidatesFailedSucceeded[] | null;\n\n  // redux props ============\n  adminExamReport: ExamReportReducerType;\n  // FOR APPLICANT PERFORMANCE PROPS\n  filterApplicantPerformance: ReportUserExamStatus | \"all\";\n};\n\nconst CandidatePerformance: React.FC<CandidatePerformanceProps> = (props) => {\n  const [searchInput, setSearchInput] = useState<string>(\"\");\n  const [isSorted, setIsSorted] = useState<boolean>(false);\n  const [sortProperty, setSortProperty] = useState<string>(\"\");\n  const [sortOrder, setSortOrder] = useState<\"ASC\" | \"DESC\">(\"ASC\");\n\n  const setSort = (thisProperty: string) => {\n    if (sortProperty === thisProperty && sortOrder === \"ASC\") {\n      setSortOrder(\"DESC\");\n      setSortProperty(thisProperty);\n      setIsSorted(true);\n    } else {\n      setSortOrder(\"ASC\");\n      setSortProperty(thisProperty);\n      setIsSorted(true);\n    }\n  };\n\n  return (\n    <Fragment>\n      <div className=\"bg-white my-4\">\n        <div className=\"w-full px-2 py-2\">\n          <input\n            onChange={(e) => setSearchInput(e.target.value)}\n            type=\"text\"\n            value={searchInput}\n            placeholder=\"Search...\"\n            className=\"w-full bg-gray-100 py-2 px-3 rounded\"\n            disabled={\n              props.courseListData &&\n              props.candidatePerformanceData &&\n              FC_reportCandidatePerformanceDataFilter(\n                FC_reportCandidatePerformanceData(\n                  props.courseListData,\n                  props.candidatePerformanceData,\n                  props.adminExamReport.reportCourseId\n                    ? props.adminExamReport.reportCourseId.course_id\n                    : \"all\"\n                ),\n                props.filterApplicantPerformance\n              ).length <= 0\n                ? true\n                : false\n            }\n          />\n        </div>\n        <div className=\"w-full overflow-x-auto\">\n          <table className=\"w-full shadow\" id=\"report_content\">\n            <thead className=\"bg-white border-b-2 border-gray-300 text-gray-600 font-bold text-sm\">\n              <tr>\n                <td className=\"px-2 py-2\">#</td>\n                <td className=\"px-2 py-2\" onClick={() => setSort(\"user_name\")}>\n                  Applicants\n                </td>\n                <td className=\"px-2 py-2\">National ID</td>\n                <td className=\"px-2 py-2\">Email</td>\n                <td className=\"px-2 py-2\">Phone</td>\n                <td\n                  className=\"px-2 py-2 cursor-pointer\"\n                  onClick={() => setSort(\"course_name\")}\n                >\n                  <div className=\"flex items-center gap-1\">\n                    Exam <BiSort />\n                  </div>\n                </td>\n                <td className=\"px-2 py-2\">Exam period</td>\n                <td className=\"px-2 py-2\">Exam date</td>\n                <td className=\"px-2 py-2\">Exam start time</td>\n                <td className=\"px-2 py-2\">Exam end time</td>\n                <td\n                  className=\"px-2 py-2 cursor-pointer\"\n                  onClick={() => setSort(\"user_total_marks\")}\n                >\n                  <div className=\"flex items-center gap-1\">\n                    Marks <BiSort />\n                  </div>\n                </td>\n                <td className=\"px-2 py-2\">Status</td>\n              </tr>\n            </thead>\n            <tbody>\n              {props.courseListData === null || props.loading ? (\n                <tr>\n                  <td colSpan={12} className=\"px-2 py-2\">\n                    <Loading />\n                  </td>\n                </tr>\n              ) : props.candidatePerformanceData &&\n                FC_reportCandidatePerformanceDataFilter(\n                  FC_reportCandidatePerformanceData(\n                    props.courseListData,\n                    props.candidatePerformanceData,\n                    props.adminExamReport.reportCourseId\n                      ? props.adminExamReport.reportCourseId.course_id\n                      : \"all\"\n                  ),\n                  props.filterApplicantPerformance\n                ).length <= 0 ? (\n                <tr>\n                  <td colSpan={12} className=\"px-2 py-2 text-center\">\n                    No applicant list available!\n                  </td>\n                </tr>\n              ) : (\n                props.candidatePerformanceData &&\n                sortThisArray(\n                  isSorted,\n                  searchCandidatePerformanceData(\n                    FC_reportCandidatePerformanceDataFilter(\n                      FC_reportCandidatePerformanceData(\n                        props.courseListData,\n                        props.candidatePerformanceData,\n                        props.adminExamReport.reportCourseId\n                          ? props.adminExamReport.reportCourseId.course_id\n                          : \"all\"\n                      ),\n                      props.filterApplicantPerformance\n                    ),\n                    searchInput\n                  ),\n                  sortProperty,\n                  sortOrder\n                ).map((item: candidatePerfomranceStateInterface, i) => (\n                  <tr\n                    key={i + 1}\n                    className={`${controlRowsByStatus(\n                      item.exam_stastus\n                    )} text-gray-600 hover:bg-blue-100 hover:text-blue-700 text-sm`}\n                  >\n                    <td className=\"px-2 py-2\">{i + 1}</td>\n                    <td className=\"px-2 py-2\">\n                      {capitalizeFirstLetter(item.user_name)}\n                    </td>\n                    <td className=\"px-2 py-2\">{item.national_id}</td>\n                    <td className=\"px-2 py-2\">{item.user_email}</td>\n                    <td className=\"px-2 py-2\">{item.user_phone}</td>\n                    <td className=\"px-2 py-2\">\n                      {capitalizeFirstLetter(item.course_name)} (\n                      <span className=\"font-semibold\">{item.course_code}</span>)\n                    </td>\n                    <td className=\"px-2 py-2\">\n                      {item.exam\n                        ? getPeriodById(props.thisPeriod, item.exam.period)\n                          ? getPeriodById(props.thisPeriod, item.exam.period)!\n                              .session_plan_name\n                          : \"-\"\n                        : \"-\"}\n                    </td>\n                    <td className=\"px-2 py-2\">\n                      {item.exam.exam_date ? DATE(item.exam.exam_date) : \"-\"}\n                    </td>\n                    <td className=\"px-2 py-2\">\n                      {item.exam.start_time\n                        ? timestampToDate(item.exam.start_time).timeAMPM\n                        : \"-\"}\n                    </td>\n                    <td className=\"px-2 py-2\">\n                      {item.exam.end_time\n                        ? timestampToDate(item.exam.end_time).timeAMPM\n                        : \"-\"}\n                    </td>\n                    <td className=\"px-2 py-2\">\n                      {item.exam_stastus !== ReportUserExamStatus.Editing\n                        ? Number(item.user_total_marks.toFixed(1)) + \"%\"\n                        : \"-\"}\n                    </td>\n                    <td className=\"px-2 py-2\">\n                      {capitalizeFirstLetter(displayStatus(item.exam_stastus))}\n                    </td>\n                  </tr>\n                ))\n              )}\n            </tbody>\n          </table>\n        </div>\n      </div>\n    </Fragment>\n  );\n};\n\nconst mapStateToProps = ({\n  adminExamReport,\n}: StoreState): {\n  adminExamReport: ExamReportReducerType;\n} => {\n  return {\n    adminExamReport,\n  };\n};\n\nexport default React.memo(connect(mapStateToProps, {})(CandidatePerformance));\n","import { ApexOptions } from \"apexcharts\";\nimport React, { useEffect, useState } from \"react\";\nimport Chart from \"react-apexcharts\";\n\ntype VBarCharPropstInterface = {\n  labels: string[];\n  categoriesLabel: any;\n  bar?: {\n    borderRadius: number;\n    horizontal: boolean;\n    columnWidth: string;\n    endingShape: string;\n  };\n  dataLabels: boolean;\n  yaxisText: string;\n  tooltipText: string;\n  series: {\n    name: string;\n    data: number[];\n  }[];\n  defaultBar?: {\n    borderRadius: number;\n    horizontal: boolean;\n    columnWidth: string;\n    endingShape: string;\n  };\n  colors?: any[];\n  title?: {\n    text: string;\n    align: string;\n    margin: number;\n    offestY: number;\n    style: {\n      fontSize: string;\n    };\n  };\n  stacked?: boolean;\n  FC_LoadSelected?: (labelIndex: number, seriesIndex: number) => void;\n  chartHeight?: number;\n};\n\nconst defaultBar = {\n  borderRadius: 4,\n  horizontal: false,\n  columnWidth: \"95%\",\n  endingShape: \"rounded\",\n};\n\nconst VBarChart: React.FC<VBarCharPropstInterface> = (props) => {\n  const [loading, setLoading] = useState<boolean>(true);\n  const [options, setOptions] = useState<ApexOptions>({\n    chart: {\n      events: {\n        dataPointSelection: (event, chartContext, config) => {\n          console.log({\n            labelClicked: config.w.config.labels[config.dataPointIndex],\n            // seriesClicked: config.w.config.series[config.dataPointIndex],\n          });\n          if (props.FC_LoadSelected) {\n            props.FC_LoadSelected(config.dataPointIndex, config.seriesIndex);\n          }\n          // console.log(config.seriesIndex);\n          // console.log(config.dataPointIndex);\n        },\n      },\n      stacked: props.stacked ? props.stacked : false,\n    },\n    plotOptions: {\n      bar: props.defaultBar ? props.defaultBar : defaultBar,\n    },\n    labels: props.labels,\n    dataLabels: {\n      enabled: true,\n    },\n    xaxis: {\n      labels: {\n        rotate: -45,\n      },\n      categories: props.categoriesLabel,\n      tickPlacement: \"on\",\n    },\n    yaxis: {\n      title: {\n        text: props.yaxisText,\n      },\n    },\n    fill: {\n      opacity: 1,\n    },\n    tooltip: {\n      y: {\n        formatter: function (val: number) {\n          return val + \" \" + props.tooltipText;\n        },\n      },\n    },\n    grid: {\n      padding: {\n        left: 30, // or whatever value that works\n        right: 30, // or whatever value that works\n      },\n    },\n    noData: {\n      text: \"No data found\",\n      align: \"center\",\n      verticalAlign: \"middle\",\n    },\n  });\n\n  useEffect(() => {\n    if (props.colors && props.colors.length > 0 && loading) {\n      setOptions({\n        chart: {\n          stacked: props.stacked ? props.stacked : false,\n          events: {\n            dataPointSelection: (event, chartContext, config) => {\n              console.log({\n                chartClicked: config.w.config.labels[config.dataPointIndex],\n              });\n              if (props.FC_LoadSelected) {\n                props.FC_LoadSelected(\n                  config.dataPointIndex,\n                  config.seriesIndex\n                );\n              }\n            },\n          },\n          zoom: {\n            enabled: true,\n            autoScaleYaxis: true,\n          },\n        },\n        plotOptions: {\n          bar: props.defaultBar ? props.defaultBar : defaultBar,\n        },\n        labels: props.labels,\n        dataLabels: {\n          enabled: true,\n        },\n        xaxis: {\n          labels: {\n            rotate: -45,\n          },\n          categories: props.categoriesLabel,\n          tickPlacement: \"on\",\n        },\n        yaxis: {\n          title: {\n            text: props.yaxisText,\n          },\n        },\n        fill: {\n          opacity: 1,\n        },\n        tooltip: {\n          y: {\n            formatter: function (val: number) {\n              return val + \" \" + props.tooltipText;\n            },\n          },\n        },\n        grid: {\n          padding: {\n            left: 30, // or whatever value that works\n            right: 30, // or whatever value that works\n          },\n        },\n        noData: {\n          text: \"No data found\",\n          align: \"center\",\n          verticalAlign: \"middle\",\n        },\n        colors: props.colors,\n      });\n    } else if (loading) {\n      setOptions({\n        chart: {\n          stacked: props.stacked ? props.stacked : false,\n          events: {\n            dataPointSelection: (event, chartContext, config) => {\n              console.log({\n                labelClicked: config.w.config.labels[config.dataPointIndex],\n                // seriesClicked: config.w.config.series[config.dataPointIndex],\n              });\n              if (props.FC_LoadSelected) {\n                props.FC_LoadSelected(\n                  config.dataPointIndex,\n                  config.seriesIndex\n                );\n              }\n              // console.log(config.seriesIndex);\n              // console.log(config.dataPointIndex);\n            },\n          },\n          zoom: {\n            enabled: true,\n            autoScaleYaxis: true,\n          },\n        },\n        plotOptions: {\n          bar: props.defaultBar ? props.defaultBar : defaultBar,\n        },\n        labels: props.labels,\n        dataLabels: {\n          enabled: true,\n        },\n        xaxis: {\n          labels: {\n            rotate: -45,\n          },\n          categories: props.categoriesLabel,\n          tickPlacement: \"on\",\n        },\n        yaxis: {\n          title: {\n            text: props.yaxisText,\n          },\n        },\n        fill: {\n          opacity: 1,\n        },\n        tooltip: {\n          y: {\n            formatter: function (val: number) {\n              return val + \" \" + props.tooltipText;\n            },\n          },\n        },\n        grid: {\n          padding: {\n            left: 30, // or whatever value that works\n            right: 30, // or whatever value that works\n          },\n        },\n        noData: {\n          text: \"No data found\",\n          align: \"center\",\n          verticalAlign: \"middle\",\n        },\n      });\n    }\n    setLoading(false);\n  }, [loading, options, props]);\n\n  if (loading) {\n    return (\n      <div className=\"text-center mt-7 font-bold text-4xl text-gray-400 animate-pulse\">\n        Loading Data...\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"w-full\">\n      <Chart\n        options={options}\n        series={props.series}\n        type=\"bar\"\n        width=\"100%\"\n        height={props.chartHeight ? props.chartHeight : undefined}\n      />\n    </div>\n  );\n};\n\nexport default React.memo(VBarChart);\n","import React, { Fragment, useState } from \"react\";\nimport { BiSort } from \"react-icons/bi\";\nimport Loading from \"../../../components/Loading/Loading\";\nimport { SessionPlanInterface } from \"../../../interfaces\";\nimport { course } from \"../../../interfaces/course\";\nimport { ExamItemResponse } from \"../../../interfaces/prepare_exam\";\nimport {\n  capitalizeFirstLetter,\n  isEmptyOrSpaces,\n} from \"../../../shared/dataTest\";\nimport { DATE, sortThisArray } from \"../../../utils/functions\";\n// import searchData from \"../../../utils/search\";\nimport { getPeriodById } from \"./ExamReport\";\n\n// EXCEL INTERFACES ======================================\nexport interface ExamPreparationToPrintInterface {\n  course_id: number;\n  course_name: string;\n  course_code: string;\n  description: string;\n  school_levels: string;\n  exam_period: string;\n  exam_date: string;\n  exam_time: string;\n  exam_duration: string;\n  // exam: ExamItemResponse | null;\n  preparation_status: string;\n}\n\nexport enum examPreparationReportContentKeyInterface {\n  \"course_name\" = \"course_name\",\n  \"course_code\" = \"course_code\",\n  SCHOOL_LEVEL = \"school_levels\",\n  PERIOD = \"exam_period\",\n  DATE = \"exam_date\",\n  TIME = \"exam_time\",\n  DURATION = \"exam_duration\",\n  STATUS = \"preparation_status\",\n}\n\nexport interface examPreparationReportContentInterface {\n  key: examPreparationReportContentKeyInterface;\n  title: string;\n  status: boolean;\n}\n\nexport const defaultExamPreparationReportContent: examPreparationReportContentInterface[] =\n  [\n    {\n      key: examPreparationReportContentKeyInterface.course_name,\n      title: \"Course names\",\n      status: true,\n    },\n    {\n      key: examPreparationReportContentKeyInterface.course_code,\n      title: \"Course code\",\n      status: true,\n    },\n    {\n      key: examPreparationReportContentKeyInterface.SCHOOL_LEVEL,\n      title: \"School levels\",\n      status: true,\n    },\n    {\n      key: examPreparationReportContentKeyInterface.PERIOD,\n      title: \"Exam period\",\n      status: true,\n    },\n    {\n      key: examPreparationReportContentKeyInterface.DATE,\n      title: \"Exam date\",\n      status: true,\n    },\n    {\n      key: examPreparationReportContentKeyInterface.TIME,\n      title: \"Exam time\",\n      status: true,\n    },\n    {\n      key: examPreparationReportContentKeyInterface.DURATION,\n      title: \"Exam duration\",\n      status: true,\n    },\n    {\n      key: examPreparationReportContentKeyInterface.STATUS,\n      title: \"Exam status\",\n      status: true,\n    },\n  ];\n\nexport const examPreparationIsChangeAllowed = (\n  key: examPreparationReportContentKeyInterface\n): boolean => {\n  if (\n    key === examPreparationReportContentKeyInterface.course_name ||\n    key === examPreparationReportContentKeyInterface.course_code\n  ) {\n    return false;\n  }\n  return true;\n};\n// END EXCEL INTERFACES ======================================\n\nexport interface examPreparationStateInterface {\n  course_name: string;\n  course_code: string;\n  description: string;\n  school_levels: string[];\n  course_id: string;\n  exam: ExamItemResponse | null;\n  preparation_status: \"prepared\" | \"not prepared\";\n}\n\nexport const FC_reportExamList = (\n  allCourses: course[],\n  allExams: ExamItemResponse[],\n  period: string = \"\"\n): examPreparationStateInterface[] => {\n  let result: examPreparationStateInterface[] = [],\n    ids: string[] = [];\n  for (const key in allCourses) {\n    if (Object.prototype.hasOwnProperty.call(allCourses, key)) {\n      if (ids.includes(allCourses[key].course_id)) continue;\n      ids.push(allCourses[key].course_id);\n      let exam = !isEmptyOrSpaces(period)\n        ? allExams.find(\n            (item) =>\n              item.course === allCourses[key].course_id &&\n              item.period === period\n          )\n        : allExams.find((item) => item.course === allCourses[key].course_id);\n      if (exam) {\n        result.push({\n          course_name: allCourses[key].course_name,\n          course_code: allCourses[key].course_code,\n          description: allCourses[key].description,\n          school_levels: allCourses[key].school_levels,\n          course_id: allCourses[key].course_id,\n          exam: exam,\n          preparation_status: \"prepared\",\n        });\n      } else {\n        result.push({\n          course_name: allCourses[key].course_name,\n          course_code: allCourses[key].course_code,\n          description: allCourses[key].description,\n          school_levels: allCourses[key].school_levels,\n          course_id: allCourses[key].course_id,\n          exam: null,\n          preparation_status: \"not prepared\",\n        });\n      }\n    }\n  }\n  return result;\n};\n\nexport const FC_reportExamListFilter = (\n  thisList: examPreparationStateInterface[],\n  thisStatus: \"all\" | \"prepared\" | \"not prepared\"\n): examPreparationStateInterface[] => {\n  if (thisStatus === \"all\") {\n    return thisList;\n  } else {\n    return thisList.filter((item) => item.preparation_status === thisStatus);\n  }\n};\n\nexport const searchExamList = (\n  objList: examPreparationStateInterface[],\n  text: string\n): examPreparationStateInterface[] => {\n  if (undefined === text || text === \"\") return objList;\n  return objList.filter((product) => {\n    let flag;\n    // let dataKeys = product;\n\n    for (let prop in product) {\n      flag = false;\n      if (\n        prop === \"course_name\" ||\n        prop === \"course_code\" ||\n        prop === \"preparation_status\"\n      ) {\n        flag =\n          product[prop].toString().toLowerCase().indexOf(text.toLowerCase()) >\n          -1;\n      }\n      if (flag) break;\n    }\n    return flag;\n  });\n};\n\ntype ExamListProps = {\n  loading: boolean;\n  examsListData: ExamItemResponse[] | null;\n  courseListData: course[] | null;\n  thisPeriod: SessionPlanInterface[];\n  // FOR EXAM PREPARATION PROPS =========================================\n  filterPreparation: \"prepared\" | \"not prepared\" | \"all\";\n};\n\nconst ExamList: React.FC<ExamListProps> = (props) => {\n  const [searchInput, setSearchInput] = useState<string>(\"\");\n  const [isSorted, setIsSorted] = useState<boolean>(false);\n  const [sortProperty, setSortProperty] = useState<string>(\"\");\n  const [sortOrder, setSortOrder] = useState<\"ASC\" | \"DESC\">(\"ASC\");\n\n  const setSort = (thisProperty: string) => {\n    if (sortProperty === thisProperty && sortOrder === \"ASC\") {\n      setSortOrder(\"DESC\");\n      setSortProperty(thisProperty);\n      setIsSorted(true);\n    } else {\n      setSortOrder(\"ASC\");\n      setSortProperty(thisProperty);\n      setIsSorted(true);\n    }\n  };\n\n  return (\n    <Fragment>\n      <div className=\"bg-white my-4\">\n        <div className=\"w-full px-2 py-2\">\n          {props.courseListData && props.examsListData && (\n            <input\n              onChange={(e) => setSearchInput(e.target.value)}\n              type=\"text\"\n              value={searchInput}\n              placeholder=\"Search...\"\n              className=\"w-full bg-gray-100 py-2 px-3 rounded\"\n              disabled={\n                FC_reportExamListFilter(\n                  FC_reportExamList(props.courseListData, props.examsListData),\n                  props.filterPreparation\n                ).length <= 0\n              }\n            />\n          )}\n        </div>\n        <div className=\"w-full overflow-x-auto\">\n          <table className=\"w-full shadow\" id=\"report_content\">\n            <thead className=\"bg-white border-b-2 border-gray-300 text-gray-600 font-bold text-sm\">\n              <tr>\n                <td className=\"px-2 py-2\">#</td>\n                <td\n                  className=\"px-2 py-2 cursor-pointer\"\n                  onClick={() => setSort(\"course_name\")}\n                >\n                  <div className=\"flex items-center gap-1\">\n                    Course <BiSort />\n                  </div>\n                </td>\n                <td className=\"px-2 py-2\">Exam date</td>\n                <td className=\"px-2 py-2\">Exam time</td>\n                <td className=\"px-2 py-2\">Exam duration</td>\n                <td className=\"px-2 py-2\">Exam Period</td>\n                <td className=\"px-2 py-2\">Created at</td>\n                <td\n                  className=\"px-2 py-2 cursor-pointer\"\n                  onClick={() => setSort(\"preparation_status\")}\n                >\n                  <div className=\"flex items-center gap-1\">\n                    Exam Status <BiSort />\n                  </div>\n                </td>\n              </tr>\n            </thead>\n            <tbody>\n              {props.courseListData === null || props.loading ? (\n                <tr>\n                  <td colSpan={8} className=\"px-2 py-2\">\n                    <Loading />\n                  </td>\n                </tr>\n              ) : props.courseListData &&\n                props.examsListData &&\n                FC_reportExamListFilter(\n                  FC_reportExamList(props.courseListData, props.examsListData),\n                  props.filterPreparation\n                ).length <= 0 ? (\n                <tr>\n                  <td colSpan={8} className=\"px-2 py-2 text-center\">\n                    No course for exam found\n                  </td>\n                </tr>\n              ) : (\n                props.examsListData &&\n                sortThisArray(\n                  isSorted,\n                  searchExamList(\n                    FC_reportExamListFilter(\n                      FC_reportExamList(\n                        props.courseListData,\n                        props.examsListData\n                      ),\n                      props.filterPreparation\n                    ),\n                    searchInput\n                  ),\n                  sortProperty,\n                  sortOrder\n                ).map((item, i) => (\n                  <tr\n                    key={i + 1}\n                    className={`${\n                      item.exam ? \"bg-blue-50\" : \"bg-white\"\n                    } text-gray-600 hover:bg-blue-100 hover:text-blue-700 border-b border-gray-300 hover:border-blue-500 text-sm`}\n                  >\n                    <td className=\"px-2 py-2\">{i + 1}</td>\n                    <td className=\"px-2 py-2\">\n                      {capitalizeFirstLetter(item.course_name)} (\n                      <span className=\"font-semibold\">{item.course_code}</span>)\n                    </td>\n                    <td className=\"px-2 py-2\">\n                      {item.exam ? DATE(item.exam.exam_date) : \"-\"}\n                    </td>\n                    <td className=\"px-2 py-2\">\n                      {item.exam ? item.exam.start_time : \"-\"}\n                    </td>\n                    <td className=\"px-2 py-2\">\n                      {item.exam ? item.exam!.duration + \" min\" : \"-\"}\n                    </td>\n                    <td className=\"px-2 py-2\">\n                      {item.exam\n                        ? getPeriodById(props.thisPeriod, item.exam.period)\n                          ? getPeriodById(props.thisPeriod, item.exam.period)!\n                              .session_plan_name\n                          : \"-\"\n                        : \"-\"}\n                    </td>\n                    <td className=\"px-2 py-2\">\n                      {item.exam ? DATE(item.exam.createdAt) : \"-\"}\n                    </td>\n                    <td className=\"px-2 py-2\">\n                      {capitalizeFirstLetter(\n                        item.exam ? \"Prepared\" : \"Not prepared\"\n                      )}\n                    </td>\n                  </tr>\n                ))\n              )}\n            </tbody>\n          </table>\n        </div>\n      </div>\n    </Fragment>\n  );\n};\n\nexport default React.memo(ExamList);\n","import React, { useEffect, useState } from \"react\";\nimport { CgFileDocument } from \"react-icons/cg\";\nimport { MdCheckBox, MdCheckBoxOutlineBlank, MdHistory } from \"react-icons/md\";\nimport { connect } from \"react-redux\";\nimport {\n  SetReportCourseId,\n  SetReportCourseIdAction,\n  SetReportDistrictId,\n  SetReportDistrictIdAction,\n} from \"../../../actions\";\nimport { getAllRoom } from \"../../../actions/location\";\nimport Loading from \"../../../components/Loading/Loading\";\nimport Modal, { ModalSize, Themes } from \"../../../components/Modal/Modal\";\nimport { SessionPlanInterface } from \"../../../interfaces\";\nimport { StoreState } from \"../../../reducers\";\nimport { isEmptyOrSpaces } from \"../../../shared/dataTest\";\nimport {\n  LocationRoomTableInterface,\n  RoomLocationInterface,\n} from \"../../../shared/interfaces\";\nimport ExportToExcel from \"../../../utils/ExportToExcel\";\nimport ChooseSession from \"../../SessionSettings/ChooseSession\";\nimport { LocationsInArray } from \"../../UserManagement/UserList\";\nimport {\n  CandidateExamPerformanceToPrintInterface,\n  CandidateExamPerformanceReportContentInterface,\n  CandidateExamPerformanceReportContentKeyInterface,\n  candidateExamPerformanceIsChangeAllowed,\n} from \"./CandidatePerformance\";\nimport {\n  examinationProgressIsChangeAllowed,\n  ExaminationProgressReportContentInterface,\n  ExaminationProgressReportContentKeyInterface,\n  ExaminationProgressToPrintInterface,\n  examProgressStateInterface,\n  searchExamData,\n} from \"./DoneExamList\";\nimport {\n  examPreparationReportContentInterface,\n  ExamPreparationToPrintInterface,\n  examPreparationReportContentKeyInterface,\n  examPreparationIsChangeAllowed,\n} from \"./ExamList\";\nimport {\n  ExamPerformanceToPrintInterface,\n  examPerformanceReportContentInterface,\n  examPerformanceReportContentKeyInterface,\n  examPerformanceIsChangeAllowed,\n} from \"./ExamPerformance\";\nimport { reportTitleType } from \"./ExamReport\";\n\nexport const FC_DistinctDistrict = (\n  locations: LocationRoomTableInterface[]\n): LocationRoomTableInterface[] => {\n  var flags: string[] = [],\n    output: LocationRoomTableInterface[] = [],\n    l: number = locations.length,\n    i: number;\n  for (i = 0; i < l; i++) {\n    if (flags.includes(locations[i].district_id)) continue;\n    flags.push(locations[i].district_id);\n    output.push(locations[i]);\n  }\n\n  return output;\n};\n\nexport enum ModalForTypes {\n  title = \"TITLE\",\n  period = \"PERIOD\",\n  generateReportModal = \"GENERATE REPORT\",\n  choose_exam = \"Choosing Exam\",\n  choose_district = \"Choosing District\",\n}\n\ntype ExamReportModalsProps = {\n  modalFor: ModalForTypes;\n  modalState: boolean;\n  changeModalState: (state: boolean) => void;\n\n  // FOR CHANGING PERIOD =========================\n  applicationPeriods?: SessionPlanInterface[] | null;\n  selected_period?: SessionPlanInterface | null;\n  setSelectedPeriod?: (period: SessionPlanInterface) => void;\n  onPeriodChange?: (period_id: string) => void;\n\n  // FOR CHOOSING EXAM =========================\n  AllExamData?: examProgressStateInterface[];\n  // thisExam?: examProgressStateInterface | null;\n  // setSelectedExam?: (selectedExam: examProgressStateInterface | null) => void;\n  SetReportCourseId: (\n    data: examProgressStateInterface | null\n  ) => SetReportCourseIdAction;\n  thisExam?: examProgressStateInterface | null;\n\n  // FOR REPORT TYPE =========================\n  reportTitle?: reportTitleType;\n  setReportTitle?: (title: reportTitleType) => void;\n\n  // FOR EXCEL GENERATION =========================\n  generateReportModal?: {\n    reportType: \"EXCEL\" | \"PDF\";\n    status: boolean;\n  } | null;\n  setGenerateReportModal?: (\n    reportData: {\n      reportType: \"EXCEL\" | \"PDF\";\n      status: boolean;\n    } | null\n  ) => void;\n  excelReportTitle?: string;\n  setExcelReportTitle?: (title: string) => void;\n  examPreparationReportContent?: examPreparationReportContentInterface[];\n  setExamPreparationReportContent?: (\n    content: examPreparationReportContentInterface[]\n  ) => void;\n  updateExamToPrint?: () => void;\n  examsToPrint?:\n    | ExamPreparationToPrintInterface[]\n    | ExamPerformanceToPrintInterface[]\n    | null;\n  // FOR EXAM PERFORMANCE REPORT ================================\n  examPerformanceToPrint?: ExamPerformanceToPrintInterface[] | null;\n  examPerformanceReportContent?: examPerformanceReportContentInterface[];\n  setExamPerformanceReportContent?: (\n    value: examPerformanceReportContentInterface[]\n  ) => void;\n  // FOR EXCEL TOP 30 EXAM PERFORMANCE REPORT CONTENT ===============================\n  exam30PerformanceToPrint?: ExamPerformanceToPrintInterface[] | null;\n  exam30PerformanceReportContent?: examPerformanceReportContentInterface[];\n  setExam30PerformanceReportContent?: (\n    value: examPerformanceReportContentInterface[]\n  ) => void;\n  // FOR EXCEL EXAMINATION PROGRESS REPORT CONTENT ===============================\n  examinationProgressToPrint?: ExaminationProgressToPrintInterface[] | null;\n  examinationProgressReportContent?: ExaminationProgressReportContentInterface[];\n  setExaminationProgressExamPerformanceReportContent?: (\n    value: ExaminationProgressReportContentInterface[]\n  ) => void;\n  // FOR EXCEL CANDIDATE EXAM PERFORMANCE REPORT CONTENT ===============================\n  candidateExamPerformanceToPrint?:\n    | CandidateExamPerformanceToPrintInterface[]\n    | null;\n  candidateExamPerformanceReportContent?: CandidateExamPerformanceReportContentInterface[];\n  setCandidateExamPerformanceReportContent?: (\n    value: CandidateExamPerformanceReportContentInterface[]\n  ) => void;\n  // FOR EXCEL TOP 30 CANDIDATE EXAM PERFORMANCE REPORT CONTENT ===============================\n  candidate30ExamPerformanceToPrint?:\n    | CandidateExamPerformanceToPrintInterface[]\n    | null;\n  candidate30ExamPerformanceReportContent?: CandidateExamPerformanceReportContentInterface[];\n  setCandidate30ExamPerformanceReportContent?: (\n    value: CandidateExamPerformanceReportContentInterface[]\n  ) => void;\n  // FOR LOCATIONS PROVINCE, DISTRICT, CENTERS, ROOM ================================\n  locations: RoomLocationInterface[];\n  getAllRoom: Function;\n  SetReportDistrictId?: (\n    data: {\n      district_id: string;\n      district_name: string;\n    } | null\n  ) => SetReportDistrictIdAction;\n  districtId?: string;\n  isAllDistrictAllowed?: boolean;\n};\n\nconst ExamReportModals: React.FC<ExamReportModalsProps> = (props) => {\n  const [formError, setFormError] = useState<{\n    element: string;\n    msg: string;\n  } | null>(null);\n  const [selectAll, setSelectAll] = useState<boolean>(true);\n  const [searchInput, setSearchInput] = useState<string>(\"\");\n  const [loadingLocation, setLoadingLocation] = useState<boolean>(true);\n  const [error, setError] = useState<{ element: String; msg: string } | null>(\n    null\n  );\n  const [districtId, setDistrictId] = useState<string>(\n    props.districtId ? props.districtId : \"all\"\n  );\n\n  const isChangeAllowed = (key: any): boolean => {\n    // EXAM PREPARATION ######################\n    if (\n      props.reportTitle &&\n      props.reportTitle === reportTitleType.EXAM_PREPARATION\n    ) {\n      return examPreparationIsChangeAllowed(key);\n    }\n    // EXAM PERFORMANCE ######################\n    if (\n      props.reportTitle &&\n      (props.reportTitle === reportTitleType.EXAM_PERFORMANCE ||\n        props.reportTitle === reportTitleType.EXAM_DISTRICT_PERFORMANCE)\n    ) {\n      return examPerformanceIsChangeAllowed(key);\n    }\n    // EXAMINATION PROGRESS ######################\n    if (\n      props.reportTitle &&\n      props.reportTitle === reportTitleType.EXAMINATION_PROGRESS\n    ) {\n      return examinationProgressIsChangeAllowed(key);\n    }\n    // CANDIDATE EXAM PERFORMANCE && TOP 30 CANDIDATE EXAM PERFORMANCE ######################\n    if (\n      props.reportTitle &&\n      (props.reportTitle === reportTitleType.APPLICANTS_PERFORMANCE ||\n        props.reportTitle === reportTitleType.APPLICANTS_DISTRICT_PERFORMANCE)\n    ) {\n      return candidateExamPerformanceIsChangeAllowed(key);\n    }\n    return false;\n  };\n\n  const updateExamPreparationReportContent = (\n    key: examPreparationReportContentKeyInterface\n  ) => {\n    if (props.examPreparationReportContent) {\n      let index: number = props.examPreparationReportContent.findIndex(\n        (item) => item.key === key\n      );\n      let newArray: examPreparationReportContentInterface[] =\n        props.examPreparationReportContent;\n      newArray[index].status = !newArray[index].status;\n      props.setExamPreparationReportContent &&\n        props.setExamPreparationReportContent(newArray);\n      let isSelectAllNeeded = newArray.find((item) => item.status === false);\n      if (isSelectAllNeeded) {\n        setSelectAll(false);\n      } else {\n        setSelectAll(true);\n      }\n\n      // UPDATE APPLICATION LIST FOR UPDATE ==============================\n      props.updateExamToPrint && props.updateExamToPrint();\n    }\n  };\n\n  const resetReportContent = (currentState: boolean) => {\n    if (props.reportTitle) {\n      // EXAM PREPARATION =======================================\n      if (\n        props.reportTitle === reportTitleType.EXAM_PREPARATION &&\n        props.examPreparationReportContent\n      ) {\n        let newArray: examPreparationReportContentInterface[] =\n          props.examPreparationReportContent;\n        for (const key in newArray) {\n          if (isChangeAllowed(newArray[key].key)) {\n            newArray[key].status = !currentState;\n          }\n        }\n\n        props.setExamPreparationReportContent &&\n          props.setExamPreparationReportContent(newArray);\n        setSelectAll(!currentState);\n\n        props.updateExamToPrint && props.updateExamToPrint();\n      }\n    }\n\n    // EXAM PERFORMANCE =======================================\n    if (\n      props.reportTitle === reportTitleType.EXAM_PERFORMANCE &&\n      props.examPerformanceReportContent\n    ) {\n      let newArray: examPerformanceReportContentInterface[] =\n        props.examPerformanceReportContent;\n      for (const key in newArray) {\n        if (isChangeAllowed(newArray[key].key)) {\n          newArray[key].status = !currentState;\n        }\n      }\n\n      props.setExamPerformanceReportContent &&\n        props.setExamPerformanceReportContent(newArray);\n      setSelectAll(!currentState);\n\n      props.updateExamToPrint && props.updateExamToPrint();\n    }\n\n    // TOP 30 EXAM PERFORMANCE =======================================\n    if (\n      props.reportTitle === reportTitleType.EXAM_DISTRICT_PERFORMANCE &&\n      props.exam30PerformanceReportContent\n    ) {\n      let newArray: examPerformanceReportContentInterface[] =\n        props.exam30PerformanceReportContent;\n      for (const key in newArray) {\n        if (isChangeAllowed(newArray[key].key)) {\n          newArray[key].status = !currentState;\n        }\n      }\n\n      props.setExam30PerformanceReportContent &&\n        props.setExam30PerformanceReportContent(newArray);\n      setSelectAll(!currentState);\n\n      props.updateExamToPrint && props.updateExamToPrint();\n    }\n\n    // EXAMINATION PROGRESS =======================================\n    if (\n      props.reportTitle === reportTitleType.EXAMINATION_PROGRESS &&\n      props.examinationProgressReportContent\n    ) {\n      let newArray: ExaminationProgressReportContentInterface[] =\n        props.examinationProgressReportContent;\n      for (const key in newArray) {\n        if (isChangeAllowed(newArray[key].key)) {\n          newArray[key].status = !currentState;\n        }\n      }\n\n      props.setExaminationProgressExamPerformanceReportContent &&\n        props.setExaminationProgressExamPerformanceReportContent(newArray);\n      setSelectAll(!currentState);\n\n      props.updateExamToPrint && props.updateExamToPrint();\n    }\n\n    // CANDIDATE EXAM PERFORMANCE =======================================\n    if (\n      props.reportTitle === reportTitleType.APPLICANTS_PERFORMANCE &&\n      props.candidateExamPerformanceReportContent\n    ) {\n      let newArray: CandidateExamPerformanceReportContentInterface[] =\n        props.candidateExamPerformanceReportContent;\n      for (const key in newArray) {\n        if (isChangeAllowed(newArray[key].key)) {\n          newArray[key].status = !currentState;\n        }\n      }\n\n      props.setCandidateExamPerformanceReportContent &&\n        props.setCandidateExamPerformanceReportContent(newArray);\n      setSelectAll(!currentState);\n\n      props.updateExamToPrint && props.updateExamToPrint();\n    }\n\n    // TOP 30 CANDIDATE EXAM PERFORMANCE =======================================\n    if (\n      props.reportTitle === reportTitleType.APPLICANTS_DISTRICT_PERFORMANCE &&\n      props.candidate30ExamPerformanceReportContent\n    ) {\n      let newArray: CandidateExamPerformanceReportContentInterface[] =\n        props.candidate30ExamPerformanceReportContent;\n      for (const key in newArray) {\n        if (isChangeAllowed(newArray[key].key)) {\n          newArray[key].status = !currentState;\n        }\n      }\n\n      props.setCandidate30ExamPerformanceReportContent &&\n        props.setCandidate30ExamPerformanceReportContent(newArray);\n      setSelectAll(!currentState);\n\n      props.updateExamToPrint && props.updateExamToPrint();\n    }\n  };\n\n  const updateExamPerformanceReportContent = (\n    key: examPerformanceReportContentKeyInterface\n  ) => {\n    if (\n      props.reportTitle &&\n      props.reportTitle === reportTitleType.EXAM_PERFORMANCE &&\n      props.examPerformanceReportContent\n    ) {\n      let index: number = props.examPerformanceReportContent.findIndex(\n        (item) => item.key === key\n      );\n      let newArray: examPerformanceReportContentInterface[] =\n        props.examPerformanceReportContent;\n      newArray[index].status = !newArray[index].status;\n      props.setExamPerformanceReportContent &&\n        props.setExamPerformanceReportContent(newArray);\n      let isSelectAllNeeded = newArray.find((item) => item.status === false);\n      if (isSelectAllNeeded) {\n        setSelectAll(false);\n      } else {\n        setSelectAll(true);\n      }\n\n      // UPDATE APPLICATION LIST FOR UPDATE ==============================\n      props.updateExamToPrint && props.updateExamToPrint();\n    }\n    if (\n      props.reportTitle &&\n      props.reportTitle === reportTitleType.EXAM_DISTRICT_PERFORMANCE &&\n      props.exam30PerformanceReportContent\n    ) {\n      let index: number = props.exam30PerformanceReportContent.findIndex(\n        (item) => item.key === key\n      );\n      let newArray: examPerformanceReportContentInterface[] =\n        props.exam30PerformanceReportContent;\n      newArray[index].status = !newArray[index].status;\n      props.setExam30PerformanceReportContent &&\n        props.setExam30PerformanceReportContent(newArray);\n      let isSelectAllNeeded = newArray.find((item) => item.status === false);\n      if (isSelectAllNeeded) {\n        setSelectAll(false);\n      } else {\n        setSelectAll(true);\n      }\n\n      // UPDATE APPLICATION LIST FOR UPDATE ==============================\n      props.updateExamToPrint && props.updateExamToPrint();\n    }\n  };\n\n  const updateExaminationProgressReportContent = (\n    key: ExaminationProgressReportContentKeyInterface\n  ) => {\n    if (props.examinationProgressReportContent) {\n      let index: number = props.examinationProgressReportContent.findIndex(\n        (item) => item.key === key\n      );\n      let newArray: ExaminationProgressReportContentInterface[] =\n        props.examinationProgressReportContent;\n      newArray[index].status = !newArray[index].status;\n      props.setExaminationProgressExamPerformanceReportContent &&\n        props.setExaminationProgressExamPerformanceReportContent(newArray);\n      let isSelectAllNeeded = newArray.find((item) => item.status === false);\n      if (isSelectAllNeeded) {\n        setSelectAll(false);\n      } else {\n        setSelectAll(true);\n      }\n\n      // UPDATE APPLICATION LIST FOR UPDATE ==============================\n      props.updateExamToPrint && props.updateExamToPrint();\n    }\n  };\n\n  const updateCandidateExamPerformanceReportContent = (\n    key: CandidateExamPerformanceReportContentKeyInterface\n  ) => {\n    if (\n      props.reportTitle &&\n      props.reportTitle === reportTitleType.APPLICANTS_PERFORMANCE &&\n      props.candidateExamPerformanceReportContent\n    ) {\n      let index: number = props.candidateExamPerformanceReportContent.findIndex(\n        (item) => item.key === key\n      );\n      let newArray: CandidateExamPerformanceReportContentInterface[] =\n        props.candidateExamPerformanceReportContent;\n      newArray[index].status = !newArray[index].status;\n      props.setCandidateExamPerformanceReportContent &&\n        props.setCandidateExamPerformanceReportContent(newArray);\n      let isSelectAllNeeded = newArray.find((item) => item.status === false);\n      if (isSelectAllNeeded) {\n        setSelectAll(false);\n      } else {\n        setSelectAll(true);\n      }\n\n      // UPDATE APPLICATION LIST FOR UPDATE ==============================\n      props.updateExamToPrint && props.updateExamToPrint();\n    }\n\n    if (\n      props.reportTitle &&\n      props.reportTitle === reportTitleType.APPLICANTS_DISTRICT_PERFORMANCE &&\n      props.candidate30ExamPerformanceReportContent\n    ) {\n      let index: number =\n        props.candidate30ExamPerformanceReportContent.findIndex(\n          (item) => item.key === key\n        );\n      let newArray: CandidateExamPerformanceReportContentInterface[] =\n        props.candidate30ExamPerformanceReportContent;\n      newArray[index].status = !newArray[index].status;\n      props.setCandidate30ExamPerformanceReportContent &&\n        props.setCandidate30ExamPerformanceReportContent(newArray);\n      let isSelectAllNeeded = newArray.find((item) => item.status === false);\n      if (isSelectAllNeeded) {\n        setSelectAll(false);\n      } else {\n        setSelectAll(true);\n      }\n\n      // UPDATE APPLICATION LIST FOR UPDATE ==============================\n      props.updateExamToPrint && props.updateExamToPrint();\n    }\n  };\n\n  useEffect(() => {\n    if (\n      !props.locations.length &&\n      props.modalFor === ModalForTypes.choose_district\n    ) {\n      props.getAllRoom((status: boolean, msg: string) => {\n        if (!status && msg.length > 0) console.error(msg);\n        setLoadingLocation(status);\n      });\n    } else {\n      setLoadingLocation(false);\n    }\n  }, [props]);\n\n  const selectDistrict = (district_id: string) => {\n    setError(null);\n    if (district_id === \"all\") {\n      if (\n        ((props.reportTitle &&\n          props.reportTitle ===\n            reportTitleType.APPLICANTS_DISTRICT_PERFORMANCE) ||\n          (props.isAllDistrictAllowed &&\n            props.isAllDistrictAllowed === true)) &&\n        props.SetReportDistrictId\n      ) {\n        props.SetReportDistrictId(null);\n        props.changeModalState(false);\n      } else {\n        setError({ element: \"district\", msg: \"District is required\" });\n      }\n    } else {\n      if (props.SetReportDistrictId) {\n        let thisDistrict = LocationsInArray(props.locations).find(\n          (item) => item.district_id === district_id\n        );\n        if (!thisDistrict) {\n          return setError({ element: \"district\", msg: \"Invalid district id\" });\n        } else {\n          props.SetReportDistrictId({\n            district_id: thisDistrict.district_id,\n            district_name: thisDistrict.district_name,\n          });\n          props.changeModalState(false);\n        }\n      }\n    }\n  };\n\n  const showGenerateBtn = (): { status: boolean; data: any[] } => {\n    if (props.reportTitle) {\n      // EXAM PREPARATION ######################\n      if (\n        props.reportTitle === reportTitleType.EXAM_PREPARATION &&\n        props.excelReportTitle &&\n        props.examsToPrint\n      ) {\n        return { status: true, data: props.examsToPrint };\n      }\n      // EXAM PERFORMANCE ######################\n      if (\n        props.reportTitle === reportTitleType.EXAM_PERFORMANCE &&\n        props.excelReportTitle &&\n        props.examPerformanceToPrint\n      ) {\n        return { status: true, data: props.examPerformanceToPrint };\n      }\n      // TOP 30 EXAM PERFORMANCE ######################\n      if (\n        props.reportTitle === reportTitleType.EXAM_DISTRICT_PERFORMANCE &&\n        props.excelReportTitle &&\n        props.exam30PerformanceToPrint\n      ) {\n        return { status: true, data: props.exam30PerformanceToPrint };\n      }\n      // EXAMINATION PROGRESS ######################\n      if (\n        props.reportTitle === reportTitleType.EXAMINATION_PROGRESS &&\n        props.excelReportTitle &&\n        props.examinationProgressToPrint\n      ) {\n        return { status: true, data: props.examinationProgressToPrint };\n      }\n      // CANDIDATE EXAM PERFORMANCE ######################\n      if (\n        props.reportTitle === reportTitleType.APPLICANTS_PERFORMANCE &&\n        props.excelReportTitle &&\n        props.candidateExamPerformanceToPrint\n      ) {\n        return { status: true, data: props.candidateExamPerformanceToPrint };\n      }\n      // TOP 30 CANDIDATE EXAM PERFORMANCE ######################\n      if (\n        props.reportTitle === reportTitleType.APPLICANTS_DISTRICT_PERFORMANCE &&\n        props.excelReportTitle &&\n        props.candidate30ExamPerformanceToPrint\n      ) {\n        return { status: true, data: props.candidate30ExamPerformanceToPrint };\n      }\n    }\n    return { status: false, data: [] };\n  };\n\n  return (\n    <div>\n      {/* LOAD MODAL FOR PERIOD ================================== */}\n      {props.modalFor === ModalForTypes.period &&\n        props.applicationPeriods &&\n        props.modalState && (\n          <Modal\n            title={\n              <div className=\"flex flex-row gap-4 items-center\">\n                <MdHistory className=\"text-5xl text-blue-600\" />\n                <div className=\"flex flex-col\">\n                  <span className=\"font-bold text-xl text-blue-600\">\n                    Choose a period\n                  </span>\n                </div>\n              </div>\n            }\n            backDrop={true}\n            theme={Themes.default}\n            close={() => props.selected_period && props.changeModalState(false)}\n            backDropClose={true}\n            widthSizeClass={ModalSize.extraLarge}\n            displayClose={true}\n            padding={{ title: true }}\n          >\n            <ChooseSession\n              allSession={props.applicationPeriods}\n              setSelectSession={(value: SessionPlanInterface | \"all\") => {\n                if (value !== \"all\") {\n                  props.setSelectedPeriod && props.setSelectedPeriod(value);\n                  props.onPeriodChange && props.onPeriodChange(value._id);\n                  props.changeModalState(false);\n                }\n              }}\n              chooseAll={false}\n              currentSelected={\n                props.selected_period ? props.selected_period : \"all\"\n              }\n            />\n          </Modal>\n        )}\n      {/* END LOAD MODAL FOR PERIOD ================================== */}\n\n      {/* LOAD MODAL FOR REPORT TYPES ================================== */}\n      {props.modalFor === ModalForTypes.title && props.modalState && (\n        <Modal\n          title={\n            <div className=\"flex flex-row gap-4 items-center\">\n              <CgFileDocument className=\"text-5xl text-blue-600\" />\n              <div className=\"flex flex-col\">\n                <span className=\"font-bold text-xl text-blue-600\">\n                  Choose exam report type\n                </span>\n              </div>\n            </div>\n          }\n          backDrop={true}\n          theme={Themes.default}\n          close={() => props.changeModalState(false)}\n          backDropClose={true}\n          widthSizeClass={ModalSize.extraLarge}\n          displayClose={true}\n          padding={{ title: true }}\n        >\n          <div className=\"px-2 pb-2\">\n            {Object.values(reportTitleType).map((item, i) => (\n              <div\n                onClick={() => {\n                  props.setReportTitle && props.setReportTitle(item);\n                  props.setExcelReportTitle && props.setExcelReportTitle(item);\n                  props.changeModalState(false);\n                }}\n                key={i + 1}\n                className={`flex items-center border rounded px-2 py-2 cursor-pointer group hover:bg-blue-100 hover:border-blue-500 mb-3 justify-between ${\n                  props.reportTitle && props.reportTitle === item\n                    ? \"bg-blue-50 border-blue-400\"\n                    : \"bg-white border-gray-200\"\n                }`}\n              >\n                <div>\n                  <div className=\"text-blue-500 text-sm font-medium italic\">\n                    Report type\n                  </div>\n                  <div className=\"font-bold\">\n                    {item}\n                    {item === reportTitleType.EXAM_DISTRICT_PERFORMANCE &&\n                      \" district\"}\n                  </div>\n                </div>\n                <div className=\"btn bg-blue-400 group-hover:bg-blue-600 text-white mr-2\">\n                  Choose\n                </div>\n              </div>\n            ))}\n          </div>\n        </Modal>\n      )}\n      {/* END LOAD MODAL FOR REPORT TYPES ================================== */}\n\n      {/* GENERATE DYNAMIC REPORT CONTENT MODAL */}\n      {props.generateReportModal &&\n        props.modalFor === ModalForTypes.generateReportModal &&\n        props.modalState && (\n          <Modal\n            title={\n              <div className=\"flex flex-row gap-4 items-center\">\n                {/* <IoBriefcase className=\"text-5xl text-gray-500\" /> */}\n                <div className=\"flex flex-col\">\n                  <span className=\"font-bold text-2xl text-gray-500\">\n                    Generating Report contents\n                  </span>\n                  <span className=\"text-sm text-blue-600 font-normal\">\n                    Generating {props.generateReportModal.reportType} Report\n                  </span>\n                </div>\n              </div>\n            }\n            backDrop={true}\n            theme={Themes.default}\n            close={() =>\n              props.setGenerateReportModal && props.setGenerateReportModal(null)\n            }\n            backDropClose={false}\n            widthSizeClass={ModalSize.medium}\n            displayClose={true}\n            padding={{ title: true }}\n          >\n            <div className=\"px-6\">\n              <div className=\"my-2 text-base text-gray-700 sm:text-lg\">\n                <div className=\"flex flex-col\">\n                  <label>Title</label>\n                  <input\n                    type=\"text\"\n                    className={`text-left input-white w-20 inline-block ${\n                      formError && formError.element === \"report_title\"\n                        ? \"border-red-500\"\n                        : \"border-gray-500\"\n                    } border-2`}\n                    placeholder=\"Sub Category Title\"\n                    value={props.excelReportTitle ? props.excelReportTitle : \"\"}\n                    onChange={(e) => {\n                      props.setExcelReportTitle &&\n                        props.setExcelReportTitle(e.target.value);\n                      setFormError(null);\n                    }}\n                    // disabled={props.loading}\n                  />\n                  {formError && formError.element === \"report_title\" && (\n                    <span className=\"text-red-500\">{formError.msg}</span>\n                  )}\n                </div>\n                <div className=\"flex flex-col mt-2\">\n                  <label>Report content</label>\n                  {/* // EXAM PREPARATION ###################### */}\n                  {props.reportTitle &&\n                    props.reportTitle === reportTitleType.EXAM_PREPARATION && (\n                      <div className=\"grid grid-cols-2 md:grid-cols-3 items-center gap-2 mt-2\">\n                        {props.examPreparationReportContent &&\n                          props.examPreparationReportContent.map(\n                            (item, index) => (\n                              <div\n                                key={index}\n                                className={`flex items-center gap-1 ${\n                                  isChangeAllowed(item.key)\n                                    ? \"cursor-pointer\"\n                                    : \"cursor-not-allowed\"\n                                }`}\n                                onClick={() =>\n                                  isChangeAllowed(item.key) &&\n                                  updateExamPreparationReportContent(item.key)\n                                }\n                                title={\n                                  !isChangeAllowed(item.key)\n                                    ? \"Required for every report!\"\n                                    : \"\"\n                                }\n                              >\n                                {item.status ? (\n                                  <MdCheckBox className=\"w-6 h-6 text-blue-700\" />\n                                ) : (\n                                  <MdCheckBoxOutlineBlank className=\"w-6 h-6\" />\n                                )}\n                                <span>{item.title}</span>\n                              </div>\n                            )\n                          )}\n                      </div>\n                    )}\n                  {/* // EXAM PERFORMANCE ###################### */}\n                  {props.reportTitle &&\n                    props.reportTitle === reportTitleType.EXAM_PERFORMANCE && (\n                      <div className=\"grid grid-cols-2 md:grid-cols-3 items-center gap-2 mt-2\">\n                        {props.examPerformanceReportContent &&\n                          props.examPerformanceReportContent.map(\n                            (item, index) => (\n                              <div\n                                key={index}\n                                className={`flex items-center gap-1 ${\n                                  isChangeAllowed(item.key)\n                                    ? \"cursor-pointer\"\n                                    : \"cursor-not-allowed\"\n                                }`}\n                                onClick={() =>\n                                  isChangeAllowed(item.key) &&\n                                  updateExamPerformanceReportContent(item.key)\n                                }\n                                title={\n                                  !isChangeAllowed(item.key)\n                                    ? \"Required for every report!\"\n                                    : \"\"\n                                }\n                              >\n                                {item.status ? (\n                                  <MdCheckBox className=\"w-6 h-6 text-blue-700\" />\n                                ) : (\n                                  <MdCheckBoxOutlineBlank className=\"w-6 h-6\" />\n                                )}\n                                <span>{item.title}</span>\n                              </div>\n                            )\n                          )}\n                      </div>\n                    )}\n                  {/* // TOP 30 EXAM PERFORMANCE ###################### */}\n                  {props.reportTitle &&\n                    props.reportTitle ===\n                      reportTitleType.EXAM_DISTRICT_PERFORMANCE && (\n                      <div className=\"grid grid-cols-2 md:grid-cols-3 items-center gap-2 mt-2\">\n                        {props.exam30PerformanceReportContent &&\n                          props.exam30PerformanceReportContent.map(\n                            (item, index) => (\n                              <div\n                                key={index}\n                                className={`flex items-center gap-1 ${\n                                  isChangeAllowed(item.key)\n                                    ? \"cursor-pointer\"\n                                    : \"cursor-not-allowed\"\n                                }`}\n                                onClick={() =>\n                                  isChangeAllowed(item.key) &&\n                                  updateExamPerformanceReportContent(item.key)\n                                }\n                                title={\n                                  !isChangeAllowed(item.key)\n                                    ? \"Required for every report!\"\n                                    : \"\"\n                                }\n                              >\n                                {item.status ? (\n                                  <MdCheckBox className=\"w-6 h-6 text-blue-700\" />\n                                ) : (\n                                  <MdCheckBoxOutlineBlank className=\"w-6 h-6\" />\n                                )}\n                                <span>{item.title}</span>\n                              </div>\n                            )\n                          )}\n                      </div>\n                    )}\n                  {/* // EXAMINATION PROGRESS ###################### */}\n                  {props.reportTitle &&\n                    props.reportTitle ===\n                      reportTitleType.EXAMINATION_PROGRESS && (\n                      <div className=\"grid grid-cols-2 md:grid-cols-3 items-center gap-2 mt-2\">\n                        {props.examinationProgressReportContent &&\n                          props.examinationProgressReportContent.map(\n                            (item, index) => (\n                              <div\n                                key={index}\n                                className={`flex items-center gap-1 ${\n                                  isChangeAllowed(item.key)\n                                    ? \"cursor-pointer\"\n                                    : \"cursor-not-allowed\"\n                                }`}\n                                onClick={() =>\n                                  isChangeAllowed(item.key) &&\n                                  updateExaminationProgressReportContent(\n                                    item.key\n                                  )\n                                }\n                                title={\n                                  !isChangeAllowed(item.key)\n                                    ? \"Required for every report!\"\n                                    : \"\"\n                                }\n                              >\n                                {item.status ? (\n                                  <MdCheckBox className=\"w-6 h-6 text-blue-700\" />\n                                ) : (\n                                  <MdCheckBoxOutlineBlank className=\"w-6 h-6\" />\n                                )}\n                                <span>{item.title}</span>\n                              </div>\n                            )\n                          )}\n                      </div>\n                    )}\n                  {/* // EXAMINATION PROGRESS ###################### */}\n                  {/* // CANDIDATE EXAM PERFORMANCE ###################### */}\n                  {props.reportTitle &&\n                    props.reportTitle ===\n                      reportTitleType.APPLICANTS_PERFORMANCE && (\n                      <div className=\"grid grid-cols-2 md:grid-cols-3 items-center gap-2 mt-2\">\n                        {props.candidateExamPerformanceReportContent &&\n                          props.candidateExamPerformanceReportContent.map(\n                            (item, index) => (\n                              <div\n                                key={index}\n                                className={`flex items-center gap-1 ${\n                                  isChangeAllowed(item.key)\n                                    ? \"cursor-pointer\"\n                                    : \"cursor-not-allowed\"\n                                }`}\n                                onClick={() =>\n                                  isChangeAllowed(item.key) &&\n                                  updateCandidateExamPerformanceReportContent(\n                                    item.key\n                                  )\n                                }\n                                title={\n                                  !isChangeAllowed(item.key)\n                                    ? \"Required for every report!\"\n                                    : \"\"\n                                }\n                              >\n                                {item.status ? (\n                                  <MdCheckBox className=\"w-6 h-6 text-blue-700\" />\n                                ) : (\n                                  <MdCheckBoxOutlineBlank className=\"w-6 h-6\" />\n                                )}\n                                <span>{item.title}</span>\n                              </div>\n                            )\n                          )}\n                      </div>\n                    )}\n                  {/* // END EXAMINATION PROGRESS ###################### */}\n                  {/* // TOP 30 CANDIDATE EXAM PERFORMANCE ###################### */}\n                  {props.reportTitle &&\n                    props.reportTitle ===\n                      reportTitleType.APPLICANTS_DISTRICT_PERFORMANCE && (\n                      <div className=\"grid grid-cols-2 md:grid-cols-3 items-center gap-2 mt-2\">\n                        {props.candidate30ExamPerformanceReportContent &&\n                          props.candidate30ExamPerformanceReportContent.map(\n                            (item, index) => (\n                              <div\n                                key={index}\n                                className={`flex items-center gap-1 ${\n                                  isChangeAllowed(item.key)\n                                    ? \"cursor-pointer\"\n                                    : \"cursor-not-allowed\"\n                                }`}\n                                onClick={() =>\n                                  isChangeAllowed(item.key) &&\n                                  updateCandidateExamPerformanceReportContent(\n                                    item.key\n                                  )\n                                }\n                                title={\n                                  !isChangeAllowed(item.key)\n                                    ? \"Required for every report!\"\n                                    : \"\"\n                                }\n                              >\n                                {item.status ? (\n                                  <MdCheckBox className=\"w-6 h-6 text-blue-700\" />\n                                ) : (\n                                  <MdCheckBoxOutlineBlank className=\"w-6 h-6\" />\n                                )}\n                                <span>{item.title}</span>\n                              </div>\n                            )\n                          )}\n                      </div>\n                    )}\n                  {/* // END TOP 30 CANDIDATE EXAM PERFORMANCE ###################### */}\n                  {formError && formError.element === \"report_content\" && (\n                    <span className=\"text-red-500\">{formError.msg}</span>\n                  )}\n                </div>\n              </div>\n              <div className=\"flex justify-between mb-2 mt-4\">\n                <div\n                  className={`flex items-center gap-1 cursor-pointer`}\n                  onClick={() => resetReportContent(selectAll)}\n                >\n                  {selectAll ? (\n                    <MdCheckBox className=\"w-6 h-6 text-blue-700\" />\n                  ) : (\n                    <MdCheckBoxOutlineBlank className=\"w-6 h-6\" />\n                  )}\n                  <span>Select all</span>\n                </div>\n\n                {showGenerateBtn().status && (\n                  <ExportToExcel\n                    fileData={showGenerateBtn().data}\n                    fileName={props.excelReportTitle!}\n                    btnName=\"Generate\"\n                  />\n                )}\n              </div>\n            </div>\n          </Modal>\n        )}\n      {/* END GENERATE DYNAMIC REPORT CONTENT MODAL */}\n\n      {/* LOAD MODAL FOR CHOOSING EXAM ================================== */}\n      {props.modalFor === ModalForTypes.choose_exam &&\n        props.modalState &&\n        props.AllExamData && (\n          <Modal\n            title={\n              <div className=\"flex flex-row gap-4 items-center\">\n                <CgFileDocument className=\"text-5xl text-blue-600\" />\n                <div className=\"flex flex-col\">\n                  <span className=\"font-bold text-xl text-blue-600\">\n                    Choose exam\n                  </span>\n                </div>\n              </div>\n            }\n            backDrop={true}\n            theme={Themes.default}\n            close={() => props.changeModalState(false)}\n            backDropClose={true}\n            widthSizeClass={ModalSize.extraLarge}\n            displayClose={true}\n            padding={{ title: true }}\n          >\n            <div className=\"px-2 pb-2\">\n              <div className=\"w-full py-2\">\n                <input\n                  onChange={(e) => setSearchInput(e.target.value)}\n                  type=\"text\"\n                  value={searchInput}\n                  placeholder=\"Search...\"\n                  className=\"w-full bg-white py-2 px-3 rounded border border-gray-400\"\n                  disabled={props.AllExamData.length <= 0 ? true : false}\n                />\n              </div>\n              <div\n                onClick={() => {\n                  props.SetReportCourseId(null);\n                  props.changeModalState(false);\n                }}\n                className={`flex items-center border rounded px-2 py-2 cursor-pointer group hover:bg-blue-100 hover:border-blue-500 mb-3 justify-between ${\n                  props.thisExam === null\n                    ? \"bg-blue-50 border-blue-400\"\n                    : \"bg-white border-gray-200\"\n                }`}\n              >\n                <div>\n                  <div className=\"text-sm font-medium italic\">\n                    code: <span className=\"text-blue-500\">-</span>\n                  </div>\n                  <div className=\"font-bold text-lg\">All exams</div>\n                </div>\n                <div className=\"btn bg-blue-400 group-hover:bg-blue-600 text-white mr-2\">\n                  Choose\n                </div>\n              </div>\n              {searchExamData(props.AllExamData, searchInput).map((item, i) => (\n                <div\n                  onClick={() => {\n                    props.SetReportCourseId(item);\n                    props.changeModalState(false);\n                  }}\n                  key={i + 1}\n                  className={`flex items-center border rounded px-2 py-2 cursor-pointer group hover:bg-blue-100 hover:border-blue-500 mb-3 justify-between ${\n                    props.thisExam &&\n                    props.thisExam.course_id === item.course_id\n                      ? \"bg-blue-50 border-blue-400\"\n                      : \"bg-white border-gray-200\"\n                  }`}\n                >\n                  <div>\n                    <div className=\"text-sm font-medium italic\">\n                      code:{\" \"}\n                      <span className=\"text-blue-500\">{item.course_code}</span>\n                    </div>\n                    <div className=\"font-bold text-lg\">{item.course_name}</div>\n                  </div>\n                  <div className=\"btn bg-blue-400 group-hover:bg-blue-600 text-white mr-2\">\n                    Choose\n                  </div>\n                </div>\n              ))}\n            </div>\n          </Modal>\n        )}\n      {/* END LOAD MODAL FOR CHOOSING EXAM ================================== */}\n\n      {/* LOAD MODAL FOR CHOOSING DISTRICT ================================== */}\n      {props.modalFor === ModalForTypes.choose_district && props.modalState && (\n        <Modal\n          title={\n            <div className=\"flex flex-row gap-4 items-center\">\n              <CgFileDocument className=\"text-5xl text-blue-600\" />\n              <div className=\"flex flex-col\">\n                <span className=\"font-bold text-xl text-blue-600\">\n                  Choose district\n                </span>\n              </div>\n            </div>\n          }\n          backDrop={true}\n          theme={Themes.default}\n          close={() =>\n            !isEmptyOrSpaces(districtId) && props.changeModalState(false)\n          }\n          backDropClose={true}\n          widthSizeClass={ModalSize.medium}\n          displayClose={true}\n          padding={{ title: true }}\n        >\n          <div className=\"px-2 pb-2 \">\n            {loadingLocation ? (\n              <Loading />\n            ) : (\n              <section className=\"pb-8 px-7 \">\n                {/* <div className=\"grid grid-cols-1 \"> */}\n                <label className=\"uppercase md:text-sm text-xs text-gray-500 text-light font-semibold\">\n                  District\n                </label>\n                {props.locations.length > 0 ? (\n                  <div className=\"\">\n                    <select\n                      className={`py-3 px-3 w-full rounded border-2 bg-white mt-1 focus:outline-none ${\n                        error && error.element === \"district\"\n                          ? \"border-red-400 focus:border-red-800\"\n                          : \"border-gray-400 focus:border-gray-800\"\n                      }`}\n                      value={districtId}\n                      onChange={(e) => {\n                        setDistrictId(e.target.value);\n                        selectDistrict(e.target.value);\n                      }}\n                    >\n                      <option value=\"all\">Select district</option>\n                      {FC_DistinctDistrict(\n                        LocationsInArray(props.locations)\n                      ).map((item, index) => (\n                        <option\n                          key={index + item.district_id}\n                          value={item.district_id}\n                        >\n                          {item.district_name}\n                        </option>\n                      ))}\n                    </select>\n                    {error && error.element === \"district\" && (\n                      <p className=\"text-xs italic text-red-500 mt-3\">\n                        {error.msg}\n                      </p>\n                    )}\n                  </div>\n                ) : (\n                  <div className=\"alert-info\">No district found</div>\n                )}\n                {/* </div> */}\n              </section>\n            )}\n          </div>\n        </Modal>\n      )}\n      {/* END LOAD MODAL FOR CHOOSING DISTRICT ================================== */}\n    </div>\n  );\n};\n\nconst mapStateToProps = ({\n  locations,\n}: StoreState): {\n  locations: RoomLocationInterface[];\n} => {\n  return {\n    locations: locations.roomLocation,\n  };\n};\n\nexport default React.memo(\n  connect(mapStateToProps, {\n    getAllRoom,\n    SetReportDistrictId,\n    SetReportCourseId,\n  })(ExamReportModals)\n);\n","import axios from \"axios\";\nimport React, { Component } from \"react\";\nimport { MdLock, MdLocationOn } from \"react-icons/md\";\nimport { connect } from \"react-redux\";\nimport { PushPopupAlert, schoolLevelsStoreInterface } from \"../../actions\";\nimport { getAllRoom } from \"../../actions/location\";\nimport {\n  blockUserToSystem,\n  unBlockUserToSystem,\n  resetUserAccess,\n} from \"../../actions/users\";\nimport { PopupAlertData } from \"../../components/Alert/Popup\";\nimport Loading from \"../../components/Loading/Loading\";\nimport NoResult, { NoResultThemes } from \"../../components/NoResult/NoResult\";\nimport Table from \"../../components/Table/Table\";\nimport { PopupAlertTheme } from \"../../interfaces/popupAlert\";\nimport { StoreState } from \"../../reducers\";\nimport {\n  getRoleById,\n  capitalizeFirstLetter,\n  getInstituteById,\n} from \"../../shared/dataTest\";\nimport {\n  RoomLocationInterface,\n  LocationRoomTableInterface,\n  DistrictInterface,\n  SystemUserRoleInterface,\n  UserInterface,\n  AccessTaskInterface,\n  SchoolsInterface,\n} from \"../../shared/interfaces\";\nimport { API } from \"../../utils/api\";\nimport { errorToText } from \"../../utils/errors\";\nimport { UserAccess } from \"./UserAccess\";\nimport UserRole from \"./UserRole\";\nimport profile from \"../../shared/blank_profile.png\"; // with im\n\nexport const getUserById = (users: UserInterface[], userId: string) => {\n  return users.find((item) => item.user_id === userId);\n};\n\nexport enum ModalState {\n  View_User = \"View User Info\",\n  Add_Access = \"Add Access To User\",\n  Update_Access = \"Update User Access\",\n  Close_Modal = \"Close Modal\",\n}\n\n// Table replaced with Emmy's function\nexport const LocationsInArray = (\n  LocationData: RoomLocationInterface[]\n): LocationRoomTableInterface[] | [] => {\n  let locationTemp: LocationRoomTableInterface[] = [];\n  for (let p in LocationData) {\n    let districts = LocationData[p].districts;\n    for (let d in districts) {\n      let centers = districts[d].centers;\n      for (let c in centers) {\n        let rooms = centers[c].rooms;\n        for (let r in rooms) {\n          locationTemp.push({\n            province_id: LocationData[p]._id,\n            province_name: LocationData[p].province_name,\n            district_id: districts[d]._id,\n            district_name: districts[d].district_name,\n            center_id: centers[c]._id,\n            center_name: centers[c].center_name,\n            room_id: rooms[r]._id,\n            room_name: rooms[r].room_number.toString(),\n            capacity: rooms[r].capacity,\n            occupied: rooms[r].occupied,\n          });\n        }\n      }\n    }\n  }\n  return locationTemp;\n};\n\ninterface AppProps {\n  users: UserInterface[];\n  roleList: SystemUserRoleInterface[];\n  userTypes: \"all\" | \"active\" | \"blocked\";\n  loadingUser: boolean;\n  schoolLevels: schoolLevelsStoreInterface;\n  setLoadingUser: (value: boolean) => void;\n  manageUser: UserInterface | null;\n  setManageUser: (value: UserInterface | null) => void;\n  changeRole: boolean;\n  setChangeRole: (value: boolean) => void;\n  currentPage: number;\n\n  // REDUX =================\n  allRoom: RoomLocationInterface[];\n  getAllRoom: Function;\n  blockUserToSystem: Function;\n  unBlockUserToSystem: Function;\n  resetUserAccess: Function;\n  PushPopupAlert: (alert: PopupAlertData) => void;\n}\n\ninterface AppStates {\n  manageUserId: string;\n  loadingRequest: boolean;\n  loading: boolean;\n  loadingRequestType: \"RESET\" | \"STATUS\" | \"CHANGE_ROLE\" | null;\n  roomList: RoomLocationInterface[] | null;\n  roomTable: LocationRoomTableInterface[] | null;\n  userAccess: AccessTaskInterface[] | null;\n  currentAccess: AccessTaskInterface | null;\n}\n\nclass UserList extends Component<AppProps, AppStates> {\n  constructor(props: AppProps) {\n    super(props);\n\n    this.state = {\n      manageUserId: \"\",\n      loadingRequest: false,\n      loading: true,\n      loadingRequestType: null,\n      roomList: null,\n      roomTable: null,\n      userAccess: null,\n      currentAccess: null,\n    };\n  }\n\n  setManageUserId = (value: string) => {\n    this.setState({ manageUserId: value });\n  };\n\n  setLoadingRequest = (value: boolean) => {\n    this.setState({ loadingRequest: value });\n  };\n\n  setLoading = (value: boolean) => {\n    this.setState({ loading: value });\n  };\n\n  setLoadingRequestType = (\n    value: \"RESET\" | \"STATUS\" | \"CHANGE_ROLE\" | null\n  ) => {\n    this.setState({ loadingRequestType: value });\n  };\n\n  setRoomList = (value: RoomLocationInterface[] | null) => {\n    this.setState({ roomList: value });\n  };\n\n  setRoomTables = (value: LocationRoomTableInterface[] | null) => {\n    this.setState({ roomTable: value });\n  };\n\n  setCurrentAccess = (value: AccessTaskInterface | null) => {\n    this.setState({ currentAccess: value });\n  };\n\n  setUserAccess = (value: AccessTaskInterface[] | null) => {\n    this.setState({ userAccess: value });\n  };\n\n  componentDidMount = () => {\n    if (this.props.allRoom.length === 0) {\n      this.props.getAllRoom(\n        (status: boolean, msg: string, data?: RoomLocationInterface[]) => {\n          this.setLoading(status);\n          this.props.setLoadingUser(status);\n          if (!status && msg.length > 0) {\n            this.props.PushPopupAlert({\n              title: msg,\n              theme: PopupAlertTheme.danger,\n            });\n          }\n          if (data && data.length > 0) {\n            this.setRoomList(data);\n            this.setRoomTables(LocationsInArray(data));\n          }\n        }\n      );\n    } else if (this.state.loading) {\n      this.setRoomList(this.props.allRoom);\n      this.setRoomTables(LocationsInArray(this.props.allRoom));\n      this.props.setLoadingUser(false);\n      this.setLoading(false);\n    }\n  };\n\n  tableData = (): JSX.Element[] => {\n    if (this.props.loadingUser || this.state.loading) {\n      return [\n        <tr\n          key={Math.random()}\n          className=\"border-b border-gray-200 hover:bg-gray-100\"\n        >\n          <td className=\"p-3 text-center\" colSpan={8}>\n            <Loading />\n          </td>\n        </tr>,\n      ];\n    }\n\n    let data: UserInterface[] = this.props.users;\n    if (data.length <= 0) {\n      return [\n        <tr\n          key={Math.random()}\n          className=\"border-b border-gray-200 hover:bg-gray-100\"\n        >\n          <td className=\"p-3 text-center\" colSpan={8}>\n            No Data Found\n          </td>\n        </tr>,\n      ];\n    }\n\n    const pageNumber: number =\n      this.props.currentPage > 1 ? (this.props.currentPage - 1) * 30 : 0;\n\n    return data.map((user: UserInterface, index: number) => (\n      <tr\n        key={index + Math.random()}\n        className=\"border-b border-gray-200 hover:bg-gray-100 group cursor-pointer\"\n        onClick={() => {\n          this.props.setManageUser(user);\n          this.setManageUserId(user.user_id);\n        }}\n      >\n        <td className=\"p-3 text-left whitespace-nowrap\">\n          {pageNumber + index + 1}\n        </td>\n        <td className=\"p-3 text-left\">\n          <span>\n            {user.user_info &&\n              user.user_info.fname + \" \" + user.user_info.lname}\n          </span>\n        </td>\n        <td className=\"p-3 text-left\">{user.email}</td>\n        {/* <td className=\"p-3 text-left\">{user.phone_number}</td> */}\n        <td className=\"p-3 text-left\">\n          {user.user_info && user.user_info.sex === \"M\" ? \"Male\" : \"Female\"}\n        </td>\n        <td className=\"p-3 text-left text-blue-700 text-base font-medium\">\n          {user.default_access &&\n            user.default_access.system_user_role_id &&\n            user.default_access.system_user_role_id && (\n              <span\n                className={`px-2 py-1 font-semibold rounded text-blue-700 bg-blue-100 dark:bg-blue-700 dark:text-blue-100`}\n              >\n                {getRoleById(\n                  this.props.roleList,\n                  user.default_access.system_user_role_id\n                )?.role &&\n                  capitalizeFirstLetter(\n                    getRoleById(\n                      this.props.roleList,\n                      user.default_access.system_user_role_id\n                    )?.role\n                  )}\n              </span>\n            )}\n        </td>\n        {/* {userTypes === \"all\" && (\n          <td>\n            {user.is_active ? (\n              <span className={`px-2 py-1 font-semibold text-green-700`}>\n                Active\n              </span>\n            ) : (\n              <span className={`px-2 py-1 font-semibold text-red-700`}>\n                Blocked\n              </span>\n            )}\n          </td>\n        )} */}\n        <td className=\"px-3 text-center\">\n          <button\n            className=\"btn bg-gray-200 group-hover:bg-blue-700 group-hover:text-white focus:outline-none\"\n            title=\"Manage User Access\"\n            onClick={() => {\n              this.props.setManageUser(user);\n              this.setManageUserId(user.user_id);\n            }}\n          >\n            Manage\n          </button>\n        </td>\n      </tr>\n    ));\n  };\n\n  blockUser = async (user_id: string, actionType: boolean) => {\n    if (!user_id) {\n      this.props.PushPopupAlert({\n        title: \"User Access is required doesn't exist\",\n        theme: PopupAlertTheme.danger,\n      });\n    }\n\n    this.setLoadingRequest(true);\n\n    if (\n      !window.confirm(\n        `Are sure you want to ${actionType ? \"block\" : \"activate\"} this user?`\n      )\n    ) {\n      return this.setLoadingRequest(false);\n    }\n\n    try {\n      const res = await axios.patch(\n        `${API.AUTH}/auth/user/disactive/${user_id}`,\n        {\n          is_active: !actionType,\n        }\n      );\n      if (res) {\n        console.log(\"====================================\");\n        console.log({ blockUserToSystem: res });\n        console.log(\"====================================\");\n        actionType\n          ? this.props.blockUserToSystem(user_id, this.props.currentPage)\n          : this.props.unBlockUserToSystem(user_id, this.props.currentPage);\n\n        this.props.PushPopupAlert({\n          title: `User has been ${actionType ? \"blocked\" : \"activated\"}!`,\n          theme: PopupAlertTheme.info,\n        });\n      }\n    } catch (error) {\n      console.error({ blockUser_ERROR: error });\n      this.props.PushPopupAlert({\n        title: errorToText(error),\n        theme: PopupAlertTheme.danger,\n      });\n    }\n\n    this.setLoadingRequest(false);\n    user_id = \"\";\n  };\n\n  restUserAccess = async (user_id: string) => {\n    if (!user_id) {\n      this.props.PushPopupAlert({\n        title: \"User Access is required doesn't exist\",\n        theme: PopupAlertTheme.warning,\n      });\n    }\n\n    if (!window.confirm(`Are sure you want to reset to default access?`)) {\n      return this.setLoadingRequest(false);\n    }\n\n    this.setLoadingRequest(true);\n    this.setLoadingRequestType(\"RESET\");\n\n    try {\n      const res = await axios.delete(\n        `${API.USER}/access/custom/user/${user_id}`\n      );\n      res && this.props.resetUserAccess(user_id, this.props.currentPage);\n      let resetedAccess: UserInterface | undefined = this.props.users.find(\n        (user) => user.user_id === user_id\n      );\n      if (resetedAccess) {\n        resetedAccess.default_access &&\n          this.setUserAccess(resetedAccess.default_access.access);\n        this.props.PushPopupAlert({\n          title: `Resetting User Access complete successfully`,\n          theme: PopupAlertTheme.info,\n        });\n        this.setCurrentAccess(null);\n      }\n    } catch (error) {\n      console.error({ reseting_user_access: error });\n      this.props.PushPopupAlert({\n        title: errorToText(error),\n        theme: PopupAlertTheme.danger,\n      });\n    }\n\n    this.setLoadingRequest(false);\n    this.setLoadingRequestType(null);\n    user_id = \"\";\n  };\n\n  distinctDistrict = (\n    location: RoomLocationInterface[],\n    province_id?: string\n  ): DistrictInterface[] => {\n    let ids: string[] = [],\n      result: DistrictInterface[] = [];\n\n    if (province_id) {\n      result = location.find((item) => item._id === province_id)\n        ? location.find((item) => item._id === province_id)!.districts\n          ? location.find((item) => item._id === province_id)!.districts\n          : []\n        : [];\n    } else {\n      for (const key in location) {\n        if (Object.prototype.hasOwnProperty.call(location, key)) {\n          for (const keyDistrict in location[key].districts) {\n            if (\n              Object.prototype.hasOwnProperty.call(\n                location[key].districts,\n                keyDistrict\n              )\n            ) {\n              if (!ids.includes(location[key].districts[keyDistrict]._id)) {\n                ids.push(location[key].districts[keyDistrict]._id);\n                result.push(location[key].districts[keyDistrict]);\n              }\n            }\n          }\n        }\n      }\n    }\n\n    return result;\n  };\n\n  render() {\n    const DATA_GetUser = this.props.users.find(\n      (user) => user.user_id === this.state.manageUserId\n    );\n    const DATA_GetRoleById =\n      DATA_GetUser && DATA_GetUser!.default_access\n        ? getRoleById(\n            this.props.roleList,\n            DATA_GetUser!.default_access!.system_user_role_id\n          )\n        : undefined;\n\n    const DATA_ThisRoom =\n      this.state.roomTable && DATA_GetUser\n        ? this.state.roomTable.find(\n            (room) => room.room_id === DATA_GetUser!.default_access?.room_id\n          )\n        : undefined;\n    return (\n      <div>\n        {!this.props.manageUser && (\n          <div className=\"grid md:grid-cols-5 gap-2 mb-5\">\n            <div className={`md:col-span-5 rounded`}>\n              <div className=\"my-2 flex sm:flex-row flex-col justify-between\">\n                <div className=\"flex flex-col md:flex-row gap-1 items-center mx-1.5\">\n                  {/* <span className=\"text-lg\">All User</span>\n                  <MdChevronRight className=\"w-7 h-7\" />\n                  <span className=\"text-lg underline\">All User</span> */}\n                </div>\n              </div>\n              {this.props.users && (\n                <Table\n                  columns={[\n                    { columnTitle: \"#\", alignText: \"left\", padding: \"p-3\" },\n                    { columnTitle: \"Names\", alignText: \"left\", padding: \"p-3\" },\n                    { columnTitle: \"Email\", alignText: \"left\", padding: \"p-3\" },\n                    {\n                      columnTitle: \"Gender\",\n                      alignText: \"left\",\n                      padding: \"p-3\",\n                    },\n                    { columnTitle: \"Role\", alignText: \"left\", padding: \"p-3\" },\n                    // { columnTitle: \"Status\", alignText: \"left\", padding: \"p-3\" },\n                    { columnTitle: \"\", alignText: \"left\", padding: \"p-3\" },\n                  ]}\n                  rows={this.tableData}\n                  pagination={false}\n                  search={true}\n                  thColor=\"gray\"\n                  loading={this.props.loadingUser || this.state.loading}\n                />\n              )}\n            </div>\n          </div>\n        )}\n\n        {/* -------------------------------------------------------- */}\n\n        {this.props.manageUser && (\n          <div className=\"bg-gray-100 h-100\">\n            {/* header */}\n            <div className=\"bg-white border-b border-t px-4 py-2 flex flex-col md:flex-row items-center gap-x-14\">\n              {DATA_GetUser ? (\n                <div\n                  key={DATA_GetUser!.user_id + Math.random()}\n                  className=\"flex flex-col md:flex-row md:items-start items-center w-full gap-3\"\n                >\n                  <img\n                    src={\n                      DATA_GetUser!.user_info.photo !== \"pic\"\n                        ? DATA_GetUser!.user_info.photo\n                        : profile\n                    }\n                    alt=\"\"\n                    className=\"rounded-full w-32 h-32\"\n                  />\n                  <div className=\"flex flex-col gap-1 items-start w-full\">\n                    <span className=\"text-2xl font-semibold\">\n                      {DATA_GetUser!.user_info.fname +\n                        \" \" +\n                        DATA_GetUser!.user_info.lname}\n                    </span>\n                    <div className=\"flex items-center\">\n                      <MdLock className=\"w-5 h-5\" />\n                      <span className=\"text-lg font-medium\">\n                        {DATA_GetRoleById && DATA_GetRoleById.role}\n                      </span>\n                    </div>\n                    <div className=\"flex items-center gap-1\">\n                      <span className=\"text-gray-500\">Level:</span>\n                      <span className=\"text-base font-medium\">\n                        {DATA_GetRoleById && DATA_GetRoleById.room_required\n                          ? \"Room\"\n                          : DATA_GetRoleById &&\n                            DATA_GetRoleById.education_institution_required\n                          ? \"Institute\"\n                          : \"-\"}\n                      </span>\n                    </div>\n                    {DATA_GetRoleById &&\n                    DATA_GetRoleById.education_institution_required ? (\n                      <div className=\"flex items-center gap-1\">\n                        <span className=\"text-gray-500\">Institute:</span>\n                        <span className=\"text-base font-medium\">\n                          {DATA_GetUser!.default_access &&\n                          this.props.schoolLevels.education_categories &&\n                          getInstituteById(\n                            this.props.schoolLevels.education_categories,\n                            DATA_GetUser!.default_access!\n                              .education_institution_id\n                          )\n                            ? getInstituteById(\n                                this.props.schoolLevels.education_categories,\n                                DATA_GetUser!.default_access!\n                                  .education_institution_id\n                              )!.education_category_title\n                            : \"Unknown Institute\"}\n                        </span>\n                      </div>\n                    ) : (\n                      DATA_GetRoleById &&\n                      DATA_GetRoleById.room_required && (\n                        <div className=\"flex items-center gap-1\">\n                          {/* <span className=\"text-gray-500\">Room:</span> */}\n                          <MdLocationOn className=\"text-gray-500\" />\n                          {DATA_ThisRoom && (\n                            <span className=\"text-base font-medium\">\n                              {DATA_ThisRoom?.district_name +\n                                \" - \" +\n                                DATA_ThisRoom?.center_name +\n                                \" - Room \" +\n                                DATA_ThisRoom?.room_name}\n                            </span>\n                          )}\n                        </div>\n                      )\n                    )}\n                  </div>\n                </div>\n              ) : (\n                <NoResult\n                  theme={NoResultThemes.Dark}\n                  value={\"User info not found\"}\n                />\n              )}\n              {DATA_GetUser && (\n                <div\n                  key={DATA_GetUser!.user_id + Math.random()}\n                  className=\"flex flex-col w-full\"\n                >\n                  <div className=\"flex items-center gap-1\">\n                    <span className=\"text-gray-500\">NID:</span>\n                    <span className=\"text-base font-medium\">\n                      {DATA_GetUser!.n_id}\n                    </span>\n                  </div>\n                  <div className=\"flex items-center gap-1\">\n                    <span className=\"text-gray-500\">Email:</span>\n                    <span className=\"text-base font-medium\">\n                      {DATA_GetUser!.email}\n                    </span>\n                  </div>\n                  <div className=\"flex items-center gap-1\">\n                    <span className=\"text-gray-500\">Phone:</span>\n                    <span className=\"text-base font-medium\">\n                      {DATA_GetUser!.phone_number}\n                    </span>\n                  </div>\n                  <div className=\"flex items-center gap-1\">\n                    <span className=\"text-gray-500\">Status:</span>\n                    <span className=\"text-base font-medium\">\n                      {DATA_GetUser!.is_active === false ? \"Blocked\" : \"Active\"}\n                    </span>\n                  </div>\n                  <div className=\"flex items-center gap-1\">\n                    {DATA_GetUser!.custome_access && (\n                      <button\n                        className={`px-2 py-1 font-semibold text-gray-50 inline-flex items-center rounded ${\n                          this.state.loadingRequestType &&\n                          this.state.loadingRequestType === \"RESET\"\n                            ? \"cursor-wait bg-gray-400\"\n                            : \"bg-gray-600\"\n                        }`}\n                        onClick={() =>\n                          this.restUserAccess(DATA_GetUser!.user_id)\n                        }\n                        disabled={this.state.loadingRequest}\n                      >\n                        <MdLock className=\"w-4 h-4 fill-current\" />\n                        <span>\n                          {this.state.loadingRequestType &&\n                          this.state.loadingRequestType === \"RESET\"\n                            ? \"Resetting...\"\n                            : \"Reset Access\"}\n                        </span>\n                      </button>\n                    )}\n                    {!this.props.changeRole && (\n                      <button\n                        className=\"bg-yellow-300 hover:bg-yellow-400 px-2 py-1 font-semibold text-black inline-flex items-center rounded\"\n                        onClick={() => this.props.setChangeRole(true)}\n                      >\n                        <MdLock className=\"w-4 h-4 fill-current\" />\n                        <span>Change Role</span>\n                      </button>\n                    )}\n                    {DATA_GetUser!.is_active ? (\n                      <button\n                        className={`px-2 py-1 font-semibold text-gray-100 inline-flex items-center rounded ${\n                          this.state.loadingRequestType &&\n                          this.state.loadingRequestType === \"STATUS\"\n                            ? \"cursor-wait bg-red-500\"\n                            : \"bg-red-700\"\n                        }`}\n                        onClick={() =>\n                          !this.state.loadingRequest &&\n                          this.props.manageUser &&\n                          this.blockUser(\n                            DATA_GetUser!.user_id,\n                            DATA_GetUser!.is_active\n                          )\n                        }\n                        disabled={this.state.loadingRequest}\n                      >\n                        <MdLock className=\"w-4 h-4 fill-current\" />\n                        <span>\n                          {this.state.loadingRequestType &&\n                          this.state.loadingRequestType === \"RESET\"\n                            ? \"Loading...\"\n                            : \"Block user\"}\n                        </span>\n                      </button>\n                    ) : (\n                      <button\n                        className={`px-2 py-1 font-semibold text-gray-100 inline-flex items-center rounded ${\n                          this.state.loadingRequestType &&\n                          this.state.loadingRequestType === \"STATUS\"\n                            ? \"cursor-wait bg-yellow-500\"\n                            : \"bg-yellow-700\"\n                        }`}\n                        onClick={() =>\n                          !this.state.loadingRequest &&\n                          this.props.manageUser &&\n                          this.blockUser(\n                            DATA_GetUser!.user_id,\n                            DATA_GetUser!.is_active\n                          )\n                        }\n                        disabled={this.state.loadingRequest}\n                      >\n                        <MdLock className=\"w-4 h-4 fill-current\" />\n                        <span>\n                          {this.state.loadingRequestType &&\n                          this.state.loadingRequestType === \"RESET\"\n                            ? \"Loading...\"\n                            : \"Re-Activate\"}\n                        </span>\n                      </button>\n                    )}\n                  </div>\n                </div>\n              )}\n            </div>\n            {/* end header */}\n\n            {/* content */}\n            {this.props.manageUser &&\n            this.state.roomList &&\n            this.props.changeRole ? (\n              <UserRole\n                userInfo={this.props.manageUser}\n                roleList={this.props.roleList}\n                district={this.distinctDistrict(this.state.roomList)}\n                roomList={this.state.roomList}\n                setChangeRole={this.props.setChangeRole}\n                currentPage={this.props.currentPage}\n              />\n            ) : (\n              <UserAccess\n                userInfo={getUserById(\n                  this.props.users,\n                  this.state.manageUserId\n                )}\n                manageUserId={this.state.manageUserId}\n                setUserAccess={this.setUserAccess}\n                userAccess={this.state.userAccess}\n                setCurrentAccess={this.setCurrentAccess}\n                currentAccess={this.state.currentAccess}\n                currentPage={this.props.currentPage}\n              />\n            )}\n            {/* end content */}\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = ({\n  schoolLevels,\n  locations,\n}: StoreState): {\n  schoolLevels: schoolLevelsStoreInterface;\n  allRoom: RoomLocationInterface[];\n} => {\n  return {\n    schoolLevels,\n    allRoom: locations.roomLocation,\n  };\n};\n\nexport default React.memo(\n  connect(mapStateToProps, {\n    blockUserToSystem,\n    unBlockUserToSystem,\n    resetUserAccess,\n    getAllRoom,\n    PushPopupAlert,\n  })(UserList)\n);\n","import React, { useState } from \"react\";\nimport { MdSearch } from \"react-icons/md\";\nimport { capitalizeFirstLetter } from \"../../shared/dataTest\";\nimport { SystemUserRoleInterface } from \"../../shared/interfaces\";\nimport search from \"../../utils/search\";\n\n// const searchRole = (\n//   objList: SystemUserRoleInterface[],\n//   text: string\n// ): SystemUserRoleInterface[] => {\n//   return objList.filter(\n//     (product) => product.role.toLocaleLowerCase() === text.toLocaleLowerCase()\n//   );\n// };\n\ntype RoleListProps = {\n  setChooseRole: (value: boolean) => void;\n  roleList: SystemUserRoleInterface[];\n  handleSelectRole: (role_id: string, TYPE?: \"SELECT\" | \"DEFAULT\") => void;\n  loadindRequest: boolean;\n};\n\nconst RoleList: React.FC<RoleListProps> = (props) => {\n  const [searchInput, setSearchInput] = useState<string>(\"\");\n  return (\n    <section className=\"border-2 rounded border-gray-400\">\n      {/* SEARCH PART */}\n      <div className=\"flex items-center w-full my-1\">\n        <MdSearch className=\"w-6 h-6 absolute ml-2\" />\n        <input\n          type=\"text\"\n          placeholder=\"Search\"\n          className=\"focus:border-2 h-7 ml-1 pl-9 mr-2 bg-gray-100 focus:border-gray-700 w-full rounded\"\n          onChange={(e) => setSearchInput(e.target.value)}\n          value={searchInput}\n          disabled={props.roleList.length > 0 ? false : true}\n        />\n        <button\n          className=\"bg-red-200 text-red-700 py-1 px-2 mr-1 rounded text-sm focus:outline-none\"\n          type=\"button\"\n          onClick={() => {\n            props.setChooseRole(false);\n          }}\n        >\n          Close\n        </button>\n      </div>\n      {/* END SEARCH PART ///////////////// */}\n\n      <div className=\"w-full h-52 mt-2 overflow-y-auto divide-y divide-gray-300\">\n        {search(props.roleList, searchInput).length > 0 ? (\n          search(props.roleList, searchInput).map((role, index) => (\n            <section key={index + role.role}>\n              <div className=\"group flex items-center justify-between my-1 hover:bg-gray-100\">\n                <div\n                  className=\"p-1 w-full mr-2 cursor-pointer\"\n                  onClick={() => {\n                    props.setChooseRole(false);\n                    !props.loadindRequest &&\n                      props.handleSelectRole(role.system_user_role_id);\n                  }}\n                >\n                  <p className=\"text-sm font-medium text-black\">\n                    {capitalizeFirstLetter(role.role)}\n                  </p>\n                </div>\n                <button\n                  type=\"button\"\n                  className=\"bg-blue-200 group-hover:bg-blue-300 text-blue-700 group-hover:text-blue-800 py-1 px-2 mr-1 rounded text-sm\"\n                >\n                  Choose\n                </button>\n              </div>\n            </section>\n          ))\n        ) : (\n          <div className=\"text-center p-3\">\n            <p className=\"text-base font-medium text-black\">\n              No role available\n            </p>\n          </div>\n        )}\n      </div>\n    </section>\n  );\n};\n\nexport default React.memo(RoleList);\n","import axios from \"axios\";\nimport React, { Component } from \"react\";\nimport { MdHighlightOff } from \"react-icons/md\";\nimport { TiInputChecked } from \"react-icons/ti\";\nimport { connect } from \"react-redux\";\nimport { schoolLevelsStoreInterface, PushPopupAlert } from \"../../actions\";\nimport { assignRoleToUserAccess } from \"../../actions/users\";\nimport { PopupAlertData } from \"../../components/Alert/Popup\";\nimport Loading from \"../../components/Loading/Loading\";\nimport Table from \"../../components/Table/Table\";\nimport { PopupAlertTheme } from \"../../interfaces/popupAlert\";\nimport { StoreState } from \"../../reducers\";\nimport { isEmptyOrSpaces } from \"../../shared/dataTest\";\nimport {\n  UserInterface,\n  SystemUserRoleInterface,\n  DistrictInterface,\n  RoomLocationInterface,\n  AssignRoleToUserActionInterface,\n  LocationRoomTableInterface,\n  RoleToUserInterface,\n} from \"../../shared/interfaces\";\nimport { API } from \"../../utils/api\";\nimport { errorToText } from \"../../utils/errors\";\nimport RoleList from \"./RoleList\";\nimport { LocationsInArray } from \"./UserList\";\nconst url = `${API.AUTH}/auth/user/access`;\n\ninterface AppProps {\n  currentPage: number;\n  userInfo: UserInterface;\n  roleList: SystemUserRoleInterface[];\n  district: DistrictInterface[];\n  assignRoleToUserAccess: Function;\n  roomList: RoomLocationInterface[] | null;\n  schoolLevels: schoolLevelsStoreInterface;\n  setChangeRole: (value: boolean) => void;\n  PushPopupAlert: (alert: PopupAlertData) => void;\n}\n\ninterface AppState {\n  loading: boolean;\n  loadingForm: boolean;\n  loadingRequest: boolean;\n  roleId: string;\n  provinceId: string;\n  districtId: string;\n  roomId: string;\n  instituteId: string;\n  centerId: string;\n  selectedRole: SystemUserRoleInterface | null;\n  formError: {\n    element: string;\n    msg: string;\n  } | null;\n  chooseRole: boolean;\n}\n\nclass UserRole extends Component<AppProps, AppState> {\n  constructor(props: AppProps) {\n    super(props);\n\n    this.state = {\n      loading: true,\n      loadingForm: true,\n      loadingRequest: false,\n      roleId: \"\",\n      provinceId: \"\",\n      districtId: \"\",\n      roomId: \"\",\n      instituteId: \"\",\n      centerId: \"\",\n      selectedRole: null,\n      formError: null,\n      chooseRole: false,\n    };\n  }\n\n  setRoleId = (value: string) => {\n    this.setState({ roleId: value });\n  };\n\n  setSelectedRole = (value: SystemUserRoleInterface | null) => {\n    this.setState({ selectedRole: value });\n  };\n\n  setProvinceId = (value: string) => {\n    this.setState({ provinceId: value });\n  };\n\n  setDistrictId = (value: string) => {\n    this.setState({ districtId: value });\n  };\n\n  setCenterId = (value: string) => {\n    this.setState({ centerId: value });\n  };\n\n  setRoomId = (value: string) => {\n    this.setState({ roomId: value });\n  };\n\n  setLoadingForm = (value: boolean) => {\n    this.setState({ loadingForm: value });\n  };\n\n  setLoading = (value: boolean) => {\n    this.setState({ loading: value });\n  };\n\n  setInstituteId = (value: string) => {\n    this.setState({ instituteId: value });\n  };\n\n  setFormError = (\n    value: {\n      element: string;\n      msg: string;\n    } | null\n  ) => {\n    this.setState({ formError: value });\n  };\n  setLoadingRequest = (value: boolean) => {\n    this.setState({ loadingRequest: value });\n  };\n  setChooseRole = (value: boolean) => {\n    this.setState({ chooseRole: value });\n  };\n\n  setDefaultState = (\n    default_access: RoleToUserInterface,\n    role: SystemUserRoleInterface\n  ) => {\n    // SET DEFAULT PROVINCE && DISTRICT ID =======================\n    let LOAD_province: LocationRoomTableInterface | undefined;\n    let LOAD_district: DistrictInterface | undefined;\n    if (role.district_required && this.props.roomList) {\n      LOAD_district = this.distinctDistrict(this.props.roomList).find(\n        (item) => item._id === default_access!.district_id\n      );\n      LOAD_district && this.setProvinceId(LOAD_district.province_id);\n      LOAD_district && this.setDistrictId(default_access!.district_id);\n      this.setLoadingForm(false);\n    } else if (role.room_required && this.props.roomList) {\n      // SET DEFAULT PROVINCE && DISTRICT && ROOM ID =======================\n\n      LOAD_province = LocationsInArray(this.props.roomList).find(\n        (item) => item.room_id === default_access!.room_id\n      );\n      LOAD_province && this.setProvinceId(LOAD_province.province_id);\n      LOAD_province && this.setDistrictId(LOAD_province.district_id);\n      LOAD_province && this.setCenterId(LOAD_province.center_id);\n      this.setRoomId(default_access.room_id);\n      this.setLoadingForm(false);\n    } else {\n      this.setLoadingForm(false);\n    }\n  };\n\n  componentDidMount = () => {\n    if (this.props.roleList.length) {\n      if (this.props.userInfo.default_access && this.state.loadingForm) {\n        // SET DEFAULT ROLE ID =======================\n        if (!this.state.roleId.length) {\n          let result = this.props.roleList.find(\n            (role) =>\n              role.system_user_role_id ===\n              this.props.userInfo.default_access!.system_user_role_id\n          );\n          if (result) {\n            this.setRoleId(\n              this.props.userInfo.default_access.system_user_role_id\n            );\n            this.setSelectedRole(result);\n            this.setDefaultState(this.props.userInfo.default_access, result);\n          }\n        }\n\n        console.log(\"====================================\");\n        console.log({ vvvvv: this.props.userInfo.default_access });\n        console.log(\"====================================\");\n      }\n\n      if (this.state.selectedRole && this.props.userInfo.default_access) {\n        this.setDefaultState(\n          this.props.userInfo.default_access,\n          this.state.selectedRole\n        );\n      }\n\n      this.setLoading(false);\n    }\n  };\n\n  handleSelectRole = (\n    role_id: string,\n    TYPE: \"SELECT\" | \"DEFAULT\" = \"SELECT\"\n  ) => {\n    if (this.props.roleList) {\n      let result = this.props.roleList.find(\n        (role) => role.system_user_role_id === role_id\n      );\n      if (result) {\n        this.setRoleId(role_id);\n        this.setSelectedRole(result);\n        this.state.formError &&\n          this.state.formError.element === \"role_id\" &&\n          this.setFormError(null);\n\n        if (TYPE === \"SELECT\") {\n          this.setProvinceId(\"\");\n          this.setDistrictId(\"\");\n          this.setCenterId(\"\");\n          this.setRoomId(\"\");\n          this.setInstituteId(\"\");\n        }\n      }\n    }\n  };\n\n  tableData = (): JSX.Element[] => {\n    if (\n      this.state.roleId.length > 0 &&\n      this.state.selectedRole === null &&\n      this.props.roleList\n    ) {\n      this.handleSelectRole(this.state.roleId, \"DEFAULT\");\n    }\n    if (this.state.selectedRole) {\n      return this.state.selectedRole.access.map((access, i) => (\n        <tr\n          key={i + access.id + Math.random()}\n          className={`text-left border-b border-gray-200 hover:bg-gray-100`}\n        >\n          <td className=\"px-2 py-1\">\n            <label className=\"inline-flex items-center\">\n              <span className=\"text-gray-900 capitalize text-xl font-normal cursor-pointer\">\n                {access.task}\n              </span>\n            </label>\n          </td>\n          <td>\n            <div\n              className={`inline-flex items-center text-xl ${\n                access.permitted.create ? \"text-green-700\" : \"text-red-700\"\n              }`}\n            >\n              {access.permitted.create ? (\n                <TiInputChecked />\n              ) : (\n                <MdHighlightOff />\n              )}\n              {access.permitted.create ? \" Yes\" : \"No\"}\n            </div>\n          </td>\n          <td>\n            <div\n              className={`inline-flex items-center text-xl ${\n                access.permitted.view ? \"text-green-700\" : \"text-red-700\"\n              }`}\n            >\n              {access.permitted.view ? <TiInputChecked /> : <MdHighlightOff />}\n              {access.permitted.view ? \" Yes\" : \"No\"}\n            </div>\n          </td>\n          <td>\n            <div\n              className={`inline-flex items-center text-xl ${\n                access.permitted.update ? \"text-green-700\" : \"text-red-700\"\n              }`}\n            >\n              {access.permitted.update ? (\n                <TiInputChecked />\n              ) : (\n                <MdHighlightOff />\n              )}\n              {access.permitted.update ? \" Yes\" : \"No\"}\n            </div>\n          </td>\n          <td>\n            <div\n              className={`inline-flex items-center text-xl ${\n                access.permitted.delete ? \"text-green-700\" : \"text-red-700\"\n              }`}\n            >\n              {access.permitted.delete ? (\n                <TiInputChecked />\n              ) : (\n                <MdHighlightOff />\n              )}\n              {access.permitted.delete ? \" Yes\" : \"No\"}\n            </div>\n          </td>\n        </tr>\n      ));\n    }\n    const optionB = [\n      <tr key=\"55re\">\n        <td colSpan={5} className=\"text-center px-2 py-2\">\n          No Default Access Available on this Role.\n        </td>\n      </tr>,\n    ];\n    return optionB;\n  };\n\n  assignRoleToUser = async (e: React.FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n    if (!window.confirm(`Are sure you want to change user role?`)) {\n      return false;\n    }\n\n    if (!this.state.selectedRole) {\n      return this.setFormError({\n        element: \"role_id\",\n        msg: \"User role is required!\",\n      });\n    }\n\n    if (\n      this.state.selectedRole.room_required === true &&\n      isEmptyOrSpaces(this.state.provinceId)\n    ) {\n      return this.setFormError({\n        element: \"province_id\",\n        msg: \"Province is required!\",\n      });\n    }\n\n    if (\n      this.state.selectedRole.education_institution_required === true &&\n      isEmptyOrSpaces(this.state.instituteId)\n    ) {\n      return this.setFormError({\n        element: \"institute_id\",\n        msg: \"Institute is required on this role!\",\n      });\n    }\n\n    if (\n      (this.state.selectedRole.room_required === true ||\n        this.state.selectedRole.district_required === true) &&\n      isEmptyOrSpaces(this.state.districtId)\n    ) {\n      return this.setFormError({\n        element: \"district_id\",\n        msg: \"District is required!\",\n      });\n    }\n\n    if (\n      this.state.selectedRole.room_required === true &&\n      isEmptyOrSpaces(this.state.centerId)\n    ) {\n      return this.setFormError({\n        element: \"center_id\",\n        msg: \"Center is required!\",\n      });\n    }\n\n    if (\n      this.state.selectedRole.room_required === true &&\n      isEmptyOrSpaces(this.state.roomId)\n    ) {\n      return this.setFormError({\n        element: \"room_id\",\n        msg: \"Room is required!\",\n      });\n    }\n    this.setLoadingRequest(true);\n    let formData: AssignRoleToUserActionInterface = {\n      user_id: this.props.userInfo.user_id,\n      data: {\n        system_user_role_id: this.state.roleId,\n        status: 1,\n        role: this.state.selectedRole.role,\n        access: this.state.selectedRole.access,\n        school_id: \"\",\n        district_id: \"\",\n        room_id: this.state.selectedRole.room_required ? this.state.roomId : \"\",\n        education_institution_id: this.state.selectedRole\n          .education_institution_required\n          ? this.state.instituteId\n          : \"\",\n      },\n    };\n\n    try {\n      const res = await axios.post(`${url}/addroletouser`, {\n        user_id: this.props.userInfo.user_id,\n        system_user_role_id: this.state.roleId,\n        status: 1,\n        role: this.state.selectedRole.role,\n        access: true,\n        school_id: \"\",\n        district_id:\n          this.state.selectedRole.district_required === true\n            ? this.state.districtId\n            : \"\",\n        room_id:\n          this.state.selectedRole.room_required === true\n            ? this.state.roomId\n            : \"\",\n        education_institution_id: this.state.selectedRole\n          .education_institution_required\n          ? this.state.instituteId\n          : \"\",\n      });\n      if (res) {\n        console.log(\"====================================\");\n        console.log({ assignRoleToUser: res });\n        console.log(\"====================================\");\n        this.props.assignRoleToUserAccess(formData, this.props.currentPage);\n        this.setLoadingRequest(false);\n        this.props.setChangeRole(false);\n        this.props.PushPopupAlert({\n          title: \"Assigning Role to User completed successfully\",\n          theme: PopupAlertTheme.success,\n        });\n      }\n    } catch (error) {\n      console.log({ role_error: error });\n      this.props.PushPopupAlert({\n        title: errorToText(error),\n        theme: PopupAlertTheme.danger,\n      });\n    }\n  };\n\n  distinctDistrict = (\n    location: RoomLocationInterface[],\n    province_id?: string\n  ): DistrictInterface[] => {\n    let ids: string[] = [],\n      result: DistrictInterface[] = [];\n\n    if (province_id) {\n      result = location.find((item) => item._id === province_id)\n        ? location.find((item) => item._id === province_id)!.districts\n          ? location.find((item) => item._id === province_id)!.districts\n          : []\n        : [];\n    } else {\n      for (const key in location) {\n        if (Object.prototype.hasOwnProperty.call(location, key)) {\n          for (const keyDistrict in location[key].districts) {\n            if (\n              Object.prototype.hasOwnProperty.call(\n                location[key].districts,\n                keyDistrict\n              )\n            ) {\n              if (!ids.includes(location[key].districts[keyDistrict]._id)) {\n                ids.push(location[key].districts[keyDistrict]._id);\n                result.push(location[key].districts[keyDistrict]);\n              }\n            }\n          }\n        }\n      }\n    }\n\n    return result;\n  };\n\n  distinctCenter = (\n    rooms: RoomLocationInterface[],\n    district_id: string\n  ): LocationRoomTableInterface[] => {\n    let ids: string[] = [],\n      result: LocationRoomTableInterface[] = [];\n\n    LocationsInArray(rooms).forEach((element) => {\n      if (\n        !ids.includes(element.center_id) &&\n        element.district_id === district_id\n      ) {\n        ids.push(element.center_id);\n        result.push(element);\n      }\n    });\n    return result;\n  };\n\n  distinctRoom = (\n    rooms: RoomLocationInterface[],\n    center_id: string\n  ): LocationRoomTableInterface[] => {\n    let ids: string[] = [],\n      result: LocationRoomTableInterface[] = [];\n\n    LocationsInArray(rooms).forEach((element) => {\n      if (!ids.includes(element.room_id) && element.center_id === center_id) {\n        ids.push(element.room_id);\n        result.push(element);\n      }\n    });\n    return result;\n  };\n\n  render() {\n    if (\n      this.state.loading === true ||\n      this.state.loadingForm ||\n      this.props.userInfo.default_access === null ||\n      this.state.roleId.length === 0 ||\n      this.state.selectedRole === null\n    ) {\n      return (\n        <div className=\"text-center py-7 font-bold text-3xl text-gray-400 animate-pulse\">\n          Loading...\n        </div>\n      );\n    }\n\n    return (\n      <div className=\"grid grid-cols-1 md:grid-cols-3 gap-8 py-2 md:py-4 px-2 md:px-0\">\n        {/* left panel */}\n        <div className=\"col-span-1 bg-white w-full overflow-x-auto border rounded\">\n          <div className=\"px-6 md:px-12 py-5 bg-white mx-auto rounded-2xl w-100\">\n            <h3 className=\"font-semibold text-2xl text-gray-800 mb-4\">\n              Change User Role\n            </h3>\n            {this.state.loadingForm ? (\n              <Loading />\n            ) : (\n              <form onSubmit={(e) => this.assignRoleToUser(e)}>\n                <div className=\"space-y-5\">\n                  <div className=\"space-y-2\">\n                    <label className=\"text-sm font-medium text-gray-700 tracking-wide\">\n                      User Role\n                    </label>\n\n                    {!this.state.chooseRole && (\n                      <div\n                        className={`w-full text-base bg-white text-grey-darker cursor-pointer border-2 px-4 py-3 rounded focus:outline-none focus:bg-gray-100 ${\n                          this.state.formError &&\n                          this.state.formError.element === \"role_id\"\n                            ? \"border-red-500\"\n                            : \"border-gray-400\"\n                        }`}\n                        onClick={() => {\n                          !this.state.loadingRequest &&\n                            this.setChooseRole(true);\n                          !this.state.loadingRequest && this.setFormError(null);\n                        }}\n                      >\n                        {this.state.selectedRole\n                          ? this.state.selectedRole.role\n                          : \"Select role\"}\n                      </div>\n                    )}\n\n                    {this.state.chooseRole && (\n                      <RoleList\n                        setChooseRole={this.setChooseRole}\n                        handleSelectRole={this.handleSelectRole}\n                        roleList={this.props.roleList}\n                        loadindRequest={this.state.loadingRequest}\n                      />\n                    )}\n\n                    {this.state.formError &&\n                      this.state.formError.element === \"role_id\" && (\n                        <span className=\"text-red-500\">\n                          {this.state.formError.msg}\n                        </span>\n                      )}\n                  </div>\n\n                  {this.state.selectedRole &&\n                    this.state.selectedRole.education_institution_required && (\n                      <div className=\"space-y-2\">\n                        <label className=\"mb-5 text-sm font-medium text-gray-700 tracking-wide\">\n                          Institute\n                        </label>\n                        <select\n                          className={`block w-full text-base bg-white text-grey-darker border-2 rounded px-4 py-3 md:w-full focus:outline-none focus:bg-gray-100 ${\n                            this.state.formError &&\n                            this.state.formError.element === \"institute_id\"\n                              ? \"border-red-500\"\n                              : \"border-gray-400\"\n                          }`}\n                          onChange={(e) => {\n                            this.setInstituteId(e.target.value);\n                            this.setProvinceId(\"\");\n                            this.setDistrictId(\"\");\n                            this.setCenterId(\"\");\n                            this.setRoomId(\"\");\n                            this.state.formError &&\n                              this.state.formError.element === \"institute_id\" &&\n                              this.setFormError(null);\n                          }}\n                          disabled={this.state.loadingRequest}\n                          value={this.state.instituteId}\n                        >\n                          <option value=\"\">Select institute</option>\n                          {this.props.schoolLevels.education_categories &&\n                          this.props.schoolLevels.education_categories.length >\n                            0 ? (\n                            this.props.schoolLevels.education_categories.map(\n                              (institute) => (\n                                <option\n                                  value={institute.education_institute_id}\n                                  key={\n                                    institute.education_institute_id +\n                                    Math.random()\n                                  }\n                                >\n                                  {institute.education_category_title}\n                                </option>\n                              )\n                            )\n                          ) : (\n                            <option value=\"\" disabled>\n                              No institute available\n                            </option>\n                          )}\n                        </select>\n                        {this.state.formError &&\n                          this.state.formError.element === \"institute_id\" && (\n                            <span className=\"text-red-500\">\n                              {this.state.formError.msg}\n                            </span>\n                          )}\n                      </div>\n                    )}\n\n                  {this.state.selectedRole &&\n                    this.state.selectedRole.room_required && (\n                      <div className=\"space-y-2\">\n                        <label className=\"mb-5 text-sm font-medium text-gray-700 tracking-wide\">\n                          Province\n                        </label>\n                        <select\n                          className={`block w-full text-base bg-white text-grey-darker border-2 rounded px-4 py-3 md:w-full focus:outline-none focus:bg-gray-100 ${\n                            this.state.formError &&\n                            this.state.formError.element === \"province_id\"\n                              ? \"border-red-500\"\n                              : \"border-gray-400\"\n                          }`}\n                          onChange={(e) => {\n                            this.setProvinceId(e.target.value);\n                            this.state.formError &&\n                              this.state.formError.element === \"province_id\" &&\n                              this.setFormError(null);\n                            this.setDistrictId(\"\");\n                            this.setCenterId(\"\");\n                            this.setRoomId(\"\");\n                          }}\n                          value={this.state.provinceId}\n                          disabled={this.state.loadingRequest}\n                        >\n                          <option value=\"\">Select province</option>\n                          {this.props.roomList &&\n                            this.props.roomList.map((province) => (\n                              <option\n                                key={province._id + Math.random()}\n                                value={province._id}\n                              >\n                                {province.province_name}\n                              </option>\n                            ))}\n                        </select>\n                        {this.state.formError &&\n                          this.state.formError.element === \"province_id\" && (\n                            <span className=\"text-red-500\">\n                              {this.state.formError.msg}\n                            </span>\n                          )}\n                      </div>\n                    )}\n                  {this.state.selectedRole &&\n                    (this.state.selectedRole.district_required ||\n                      this.state.selectedRole.room_required) && (\n                      <div className=\"space-y-2\">\n                        <label className=\"mb-5 text-sm font-medium text-gray-700 tracking-wide\">\n                          District\n                        </label>\n                        <select\n                          className={`block w-full text-base bg-white text-grey-darker border-2 rounded px-4 py-3 md:w-full focus:outline-none focus:bg-gray-100 ${\n                            this.state.formError &&\n                            this.state.formError.element === \"district_id\"\n                              ? \"border-red-500\"\n                              : \"border-gray-400\"\n                          }`}\n                          onChange={(e) => {\n                            this.setDistrictId(e.target.value);\n                            this.state.formError &&\n                              this.state.formError.element === \"district_id\" &&\n                              this.setFormError(null);\n                            this.setCenterId(\"\");\n                            this.setRoomId(\"\");\n                          }}\n                          value={this.state.districtId}\n                          disabled={this.state.loadingRequest}\n                        >\n                          <option value=\"\">Select district</option>\n                          {this.props.roomList &&\n                          this.distinctDistrict(\n                            this.props.roomList,\n                            !isEmptyOrSpaces(this.state.provinceId)\n                              ? this.state.provinceId\n                              : undefined\n                          ).length > 0 ? (\n                            this.distinctDistrict(\n                              this.props.roomList,\n                              !isEmptyOrSpaces(this.state.provinceId)\n                                ? this.state.provinceId\n                                : undefined\n                            ).map((district) => (\n                              <option\n                                key={district._id + Math.random()}\n                                value={district._id}\n                              >\n                                {district.district_name}\n                              </option>\n                            ))\n                          ) : (\n                            <option value=\"\" disabled>\n                              No district found\n                            </option>\n                          )}\n                        </select>\n                        {this.state.formError &&\n                          this.state.formError.element === \"district_id\" && (\n                            <span className=\"text-red-500\">\n                              {this.state.formError.msg}\n                            </span>\n                          )}\n                      </div>\n                    )}\n\n                  {this.state.selectedRole &&\n                    this.state.selectedRole.room_required && (\n                      <div className=\"space-y-2\">\n                        <label className=\"mb-5 text-sm font-medium text-gray-700 tracking-wide\">\n                          Center\n                        </label>\n                        <select\n                          className={`block w-full text-base bg-white text-grey-darker border-2 rounded px-4 py-3 md:w-full focus:outline-none focus:bg-gray-100 ${\n                            this.state.formError &&\n                            this.state.formError.element === \"center_id\"\n                              ? \"border-red-500\"\n                              : \"border-gray-400\"\n                          }`}\n                          onChange={(e) => {\n                            this.setCenterId(e.target.value);\n                            this.state.formError &&\n                              this.state.formError.element === \"center_id\" &&\n                              this.setFormError(null);\n                            this.setRoomId(\"\");\n                          }}\n                          disabled={this.state.loadingRequest}\n                          value={this.state.centerId}\n                        >\n                          <option value=\"\">Select center</option>\n                          {this.state.districtId &&\n                          this.state.districtId.length > 0 &&\n                          this.props.roomList &&\n                          this.distinctCenter(\n                            this.props.roomList,\n                            this.state.districtId\n                          ).length > 0 ? (\n                            this.distinctCenter(\n                              this.props.roomList,\n                              this.state.districtId\n                            ).map((center, index) => (\n                              <option\n                                value={center.center_id}\n                                key={center.center_id + index + Math.random()}\n                              >\n                                {center.center_name}\n                              </option>\n                            ))\n                          ) : (\n                            <option value=\"\" disabled>\n                              No center found\n                            </option>\n                          )}\n                        </select>\n                        {this.state.formError &&\n                          this.state.formError.element === \"center_id\" && (\n                            <span className=\"text-red-500\">\n                              {this.state.formError.msg}\n                            </span>\n                          )}\n                      </div>\n                    )}\n\n                  {this.state.selectedRole &&\n                    this.state.selectedRole.room_required && (\n                      <div className=\"space-y-2\">\n                        <label className=\"mb-5 text-sm font-medium text-gray-700 tracking-wide\">\n                          Room\n                        </label>\n                        <select\n                          className={`block w-full text-base bg-white text-grey-darker border-2 rounded px-4 py-3 md:w-full focus:outline-none focus:bg-gray-100 ${\n                            this.state.formError &&\n                            this.state.formError.element === \"room_id\"\n                              ? \"border-red-500\"\n                              : \"border-gray-400\"\n                          }`}\n                          onChange={(e) => {\n                            this.setRoomId(e.target.value);\n                            this.state.formError &&\n                              this.state.formError.element === \"room_id\" &&\n                              this.setFormError(null);\n                          }}\n                          disabled={this.state.loadingRequest}\n                          value={this.state.roomId}\n                        >\n                          <option value=\"\">Select room</option>\n                          {!isEmptyOrSpaces(this.state.centerId) &&\n                          this.props.roomList &&\n                          this.distinctRoom(\n                            this.props.roomList,\n                            this.state.centerId\n                          ).length > 0 ? (\n                            this.distinctRoom(\n                              this.props.roomList,\n                              this.state.centerId\n                            ).map((room, index) => (\n                              <option\n                                value={room.room_id}\n                                key={room.room_id + index + Math.random()}\n                                className={`${\n                                  room.room_name === \"0\" ? \"hidden\" : \"block\"\n                                }`}\n                              >\n                                {room.room_name}\n                              </option>\n                            ))\n                          ) : (\n                            <option value=\"\" disabled>\n                              No room found\n                            </option>\n                          )}\n                        </select>\n                        {this.state.formError &&\n                          this.state.formError.element === \"room_id\" && (\n                            <span className=\"text-red-500\">\n                              {this.state.formError.msg}\n                            </span>\n                          )}\n                      </div>\n                    )}\n\n                  <div className=\"flex justify-between 2xl:justify-start gap-2\">\n                    <button\n                      className=\"btn bg-gray-500 text-gray-50 focus:outline-none\"\n                      onClick={() => {\n                        this.props.setChangeRole(false);\n                        this.setFormError(null);\n                        this.setProvinceId(\"\");\n                        this.setDistrictId(\"\");\n                        this.setCenterId(\"\");\n                        this.setRoomId(\"\");\n                      }}\n                      disabled={this.state.loadingRequest}\n                    >\n                      Back\n                    </button>\n                    <button\n                      className=\"btn btn-blue focus:outline-none\"\n                      // onClick={() => assignRoleToUser()}\n                      disabled={this.state.loadingRequest}\n                    >\n                      {this.state.loadingRequest ? \"Loading...\" : \"Save Change\"}\n                    </button>\n                  </div>\n                </div>\n              </form>\n            )}\n          </div>\n        </div>\n        {/* end left panel */}\n\n        {/* ------------------------------------------------------------ */}\n\n        {/* right panel */}\n        <div className=\"cols-span-1 md:col-span-2 bg-white w-full border rounded text-center p-2 hidden md:block\">\n          <div className=\"my-4\">\n            <span className=\"text-gray-600 font-semibold text-2xl\">\n              {this.state.selectedRole?.role}'s Default Access\n            </span>\n          </div>\n          {!this.state.loading && (\n            <div className=\"overflow-x-auto w-full\">\n              <Table\n                columns={[\n                  {\n                    columnTitle: \"Access Name\",\n                    alignText: \"left\",\n                    padding: \"p-3\",\n                  },\n                  { columnTitle: \"Create\", alignText: \"left\" },\n                  { columnTitle: \"View\", alignText: \"left\" },\n                  { columnTitle: \"Update\", alignText: \"left\" },\n                  { columnTitle: \"Delete\", alignText: \"left\" },\n                ]}\n                rows={this.tableData}\n                pagination={false}\n                search={false}\n                searchBG=\"bg-gray-50\"\n                thColor=\"gray\"\n                tableId=\"defaultAccess\"\n              />\n            </div>\n          )}\n        </div>\n        {/* end right panel */}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = ({\n  schoolLevels,\n}: StoreState): {\n  schoolLevels: schoolLevelsStoreInterface;\n} => {\n  return { schoolLevels };\n};\n\nexport default React.memo(\n  connect(mapStateToProps, {\n    assignRoleToUserAccess,\n    PushPopupAlert,\n  })(UserRole)\n);\n","export default __webpack_public_path__ + \"static/media/blank_profile.c3f94521.png\";","import React, { FC } from \"react\";\nimport { IconType } from \"react-icons\";\nimport { FaUsers } from \"react-icons/fa\";\nimport { toAnyDigit } from \"../../shared/dataTest\";\nimport { displayNumbers } from \"../../utils/functions\";\n\nexport type DashboardLabelItemInterface = {\n  // TITLE: Application or Exam or Shortlisted ....\n  title: string;\n  // ICON: FaExpand ....\n  icon: IconType;\n  // ICON COLOR: blue, indigo, gray ....\n  iconColor: string;\n  // COUNT: 0,1,2,3,5,23,563 ....\n  count: number;\n  // COUNT: 0,1,2,3,5,23,563 ....\n  countOver?: number;\n};\n\nconst DashboardLabelItem: FC<DashboardLabelItemInterface> = (\n  props = {\n    title: \"\",\n    icon: FaUsers,\n    iconColor: \"indigo\",\n    count: 0,\n    countOver: undefined,\n  }\n) => {\n  const IconDefined = props.icon;\n  return (\n    <div className=\"flex items-center px-6 py-4 bg-white w-full rounded-md space-x-2 mb-2 lg:mb-0 shadow-md\">\n      <div\n        className={`p-3 rounded-full bg-${props.iconColor}-200 bg-opacity-75`}\n      >\n        <IconDefined className={`h-8 w-8 text-${props.iconColor}-600`} />\n      </div>\n      <div>\n        <h1 className=\"text-3xl font-semibold text-gray-700\">\n          {props.count < 1000\n            ? toAnyDigit(props.count)\n            : displayNumbers(props.count)}{\" \"}\n          {props.countOver && \"/ \" + toAnyDigit(props.countOver)}\n        </h1>\n        <span className=\"text-gray-500 text-lg\">{props.title}</span>\n      </div>\n    </div>\n  );\n};\n\nexport default React.memo(DashboardLabelItem);\n","import React, { useState } from \"react\";\nimport { BiSort } from \"react-icons/bi\";\nimport Loading from \"../../../components/Loading/Loading\";\nimport { SessionPlanInterface } from \"../../../interfaces\";\nimport { course } from \"../../../interfaces/course\";\nimport { ExamItemResponse } from \"../../../interfaces/prepare_exam\";\nimport { ExamsParcentageSuccessFailedRateByPeriodInterface } from \"../../../interfaces/reports\";\nimport { capitalizeFirstLetter } from \"../../../shared/dataTest\";\nimport { DATE, sortThisArray } from \"../../../utils/functions\";\n\nexport interface ExamPerformanceToPrintInterface {\n  course_id: number;\n  course_name: string;\n  course_code: string;\n  description: string;\n  school_levels: string;\n  exam_period: string;\n  exam_date: string;\n  exam_time: string;\n  exam_duration: string;\n  exam_performance: number;\n}\n\nexport enum examPerformanceReportContentKeyInterface {\n  COURSER_NAME = \"course_name\",\n  COURSE_CODE = \"course_code\",\n  SCHOOL_LEVEL = \"school_levels\",\n  PERIOD = \"exam_period\",\n  DATE = \"exam_date\",\n  TIME = \"exam_time\",\n  DURATION = \"exam_duration\",\n  PERFORMANCE = \"exam_performance\",\n}\n\nexport interface examPerformanceReportContentInterface {\n  key: examPerformanceReportContentKeyInterface;\n  title: string;\n  status: boolean;\n}\n\nexport const examPerformanceIsChangeAllowed = (\n  key: examPerformanceReportContentKeyInterface\n): boolean => {\n  if (\n    key === examPerformanceReportContentKeyInterface.COURSER_NAME ||\n    key === examPerformanceReportContentKeyInterface.COURSE_CODE ||\n    key === examPerformanceReportContentKeyInterface.PERIOD ||\n    key === examPerformanceReportContentKeyInterface.PERFORMANCE\n  ) {\n    return false;\n  }\n  return true;\n};\n\nexport const defaultExamPerformanceContent: examPerformanceReportContentInterface[] =\n  [\n    {\n      key: examPerformanceReportContentKeyInterface.COURSER_NAME,\n      title: \"Course names\",\n      status: true,\n    },\n    {\n      key: examPerformanceReportContentKeyInterface.COURSE_CODE,\n      title: \"Course code\",\n      status: true,\n    },\n    {\n      key: examPerformanceReportContentKeyInterface.SCHOOL_LEVEL,\n      title: \"School levels\",\n      status: true,\n    },\n    {\n      key: examPerformanceReportContentKeyInterface.PERIOD,\n      title: \"Exam period\",\n      status: true,\n    },\n    {\n      key: examPerformanceReportContentKeyInterface.DATE,\n      title: \"Exam date\",\n      status: true,\n    },\n    {\n      key: examPerformanceReportContentKeyInterface.TIME,\n      title: \"Exam time\",\n      status: true,\n    },\n    {\n      key: examPerformanceReportContentKeyInterface.DURATION,\n      title: \"Exam duration\",\n      status: true,\n    },\n    {\n      key: examPerformanceReportContentKeyInterface.PERFORMANCE,\n      title: \"Exam performance\",\n      status: true,\n    },\n  ];\n\nexport interface examPerformanceStateInterface {\n  course_name: string;\n  course_code: string;\n  description: string;\n  school_levels: string[];\n  course_id: string;\n  exam: ExamItemResponse | null;\n  exam_performance: number;\n}\n\nexport const FC_reportExamPerformanceData = (\n  allCourses: course[],\n  allExams: ExamItemResponse[],\n  examPerformance: ExamsParcentageSuccessFailedRateByPeriodInterface[]\n): examPerformanceStateInterface[] => {\n  let result: examPerformanceStateInterface[] = [],\n    ids: string[] = [];\n  for (const key in examPerformance) {\n    if (Object.prototype.hasOwnProperty.call(examPerformance, key)) {\n      if (ids.includes(examPerformance[key].answer_sheet_id)) continue;\n      ids.push(examPerformance[key].answer_sheet_id);\n      let courser = allCourses.find(\n        (item) => item.course_id === examPerformance[key].course\n      );\n      if (courser) {\n        let exam = allExams.find(\n          (item) =>\n            item.course === examPerformance[key].course &&\n            item.period === examPerformance[key].period\n        );\n        result.push({\n          course_name: courser.course_name,\n          course_code: courser.course_code,\n          description: courser.description,\n          school_levels: courser.school_levels,\n          course_id: courser.course_id,\n          exam: exam ? exam : null,\n          exam_performance: examPerformance[key].total_marks,\n        });\n      }\n    }\n  }\n  console.log(\"===============-----------------=====================\");\n  console.log({ result });\n  console.log(\"===============-----------------=====================\");\n  return result;\n};\n\nexport const searchExamPerformanceData = (\n  objList: examPerformanceStateInterface[],\n  text: string\n): examPerformanceStateInterface[] => {\n  if (undefined === text || text === \"\") return objList;\n  return objList.filter((product) => {\n    let flag;\n    // let dataKeys = product;\n\n    for (let prop in product) {\n      flag = false;\n      if (\n        prop === \"course_name\" ||\n        prop === \"course_code\" ||\n        prop === \"exam_performance\"\n      ) {\n        flag =\n          product[prop].toString().toLowerCase().indexOf(text.toLowerCase()) >\n          -1;\n      }\n      if (flag) break;\n    }\n    return flag;\n  });\n};\n\ntype ExamPerformanceProps = {\n  loading: boolean;\n  examsListData: ExamItemResponse[] | null;\n  courseListData: course[] | null;\n  thisPeriod: SessionPlanInterface[];\n  examsPerformanceData:\n    | ExamsParcentageSuccessFailedRateByPeriodInterface[]\n    | null;\n};\n\nconst ExamPerformance: React.FC<ExamPerformanceProps> = (props) => {\n  const [searchInput, setSearchInput] = useState<string>(\"\");\n  const [isSorted, setIsSorted] = useState<boolean>(false);\n  const [sortProperty, setSortProperty] = useState<string>(\"\");\n  const [sortOrder, setSortOrder] = useState<\"ASC\" | \"DESC\">(\"ASC\");\n\n  const setSort = (thisProperty: string) => {\n    if (sortProperty === thisProperty && sortOrder === \"ASC\") {\n      setSortOrder(\"DESC\");\n      setSortProperty(thisProperty);\n      setIsSorted(true);\n    } else {\n      setSortOrder(\"ASC\");\n      setSortProperty(thisProperty);\n      setIsSorted(true);\n    }\n  };\n\n  return (\n    <React.Fragment>\n      <div className=\"bg-white my-4\">\n        <div className=\"w-full px-2 py-2\">\n          <input\n            onChange={(e) => setSearchInput(e.target.value)}\n            type=\"text\"\n            value={searchInput}\n            placeholder=\"Search...\"\n            className=\"w-full bg-gray-100 py-2 px-3 rounded\"\n            disabled={\n              props.courseListData &&\n              props.examsListData &&\n              props.examsPerformanceData &&\n              FC_reportExamPerformanceData(\n                props.courseListData,\n                props.examsListData,\n                props.examsPerformanceData\n              ).length <= 0\n                ? true\n                : false\n            }\n          />\n        </div>\n        <div className=\"w-full overflow-x-auto\">\n          <table className=\"w-full shadow\" id=\"report_content\">\n            <thead className=\"bg-white border-b-2 border-gray-300 text-gray-600 font-bold text-sm\">\n              <tr>\n                <td className=\"px-2 py-2\">#</td>\n                <td\n                  className=\"px-2 py-2 cursor-pointer\"\n                  onClick={() => setSort(\"course_name\")}\n                >\n                  <div className=\"flex items-center gap-1\">\n                    Course <BiSort />\n                  </div>\n                </td>\n                <td className=\"px-2 py-2\">Exam date</td>\n                <td className=\"px-2 py-2\">Exam time</td>\n                <td className=\"px-2 py-2\">Exam duration</td>\n                <td\n                  className=\"px-2 py-2 cursor-pointer\"\n                  onClick={() => setSort(\"exam_performance\")}\n                >\n                  <div className=\"flex items-center gap-1\">\n                    Exam performance <BiSort />\n                  </div>\n                </td>\n              </tr>\n            </thead>\n            <tbody>\n              {props.courseListData === null || props.loading ? (\n                <tr>\n                  <td colSpan={6} className=\"px-2 py-2\">\n                    <Loading />\n                  </td>\n                </tr>\n              ) : props.examsListData &&\n                props.examsPerformanceData &&\n                FC_reportExamPerformanceData(\n                  props.courseListData,\n                  props.examsListData,\n                  props.examsPerformanceData\n                ).length <= 0 ? (\n                <tr>\n                  <td colSpan={6} className=\"px-2 py-2 text-center\">\n                    No Exam list available!\n                  </td>\n                </tr>\n              ) : (\n                props.examsListData &&\n                props.examsPerformanceData &&\n                sortThisArray(\n                  isSorted,\n                  searchExamPerformanceData(\n                    FC_reportExamPerformanceData(\n                      props.courseListData,\n                      props.examsListData,\n                      props.examsPerformanceData\n                    ),\n                    searchInput\n                  ),\n                  sortProperty,\n                  sortOrder\n                ).map((item: examPerformanceStateInterface, i) => (\n                  <tr\n                    key={i + 1}\n                    className={`bg-white text-gray-600 hover:bg-blue-100 hover:text-blue-700 border-b border-gray-300 hover:border-blue-500 text-sm`}\n                  >\n                    <td className=\"px-2 py-2\">{i + 1}</td>\n                    <td className=\"px-2 py-2\">\n                      {capitalizeFirstLetter(item.course_name)} (\n                      <span className=\"font-semibold\">{item.course_code}</span>)\n                    </td>\n                    <td className=\"px-2 py-2\">\n                      {item.exam ? DATE(item.exam.exam_date) : \"-\"}\n                    </td>\n                    <td className=\"px-2 py-2\">\n                      {item.exam ? item.exam.start_time : \"-\"}\n                    </td>\n                    <td className=\"px-2 py-2\">\n                      {item.exam ? item.exam!.duration + \" min\" : \"-\"}\n                    </td>\n                    <td className=\"px-2 py-2\">\n                      {Number(item.exam_performance.toFixed(1)) + \"%\"}\n                    </td>\n                  </tr>\n                ))\n              )}\n            </tbody>\n          </table>\n        </div>\n      </div>\n    </React.Fragment>\n  );\n};\n\nexport default React.memo(ExamPerformance);\n","import React from \"react\";\nimport DashboardLabelItem, {\n  DashboardLabelItemInterface,\n} from \"../DashboardLabelItem\";\n\ntype DashboardLabelProps = {\n  dataLabels: DashboardLabelItemInterface[];\n  labelsOnRow?: number;\n  childrenPosition?: \"START\" | \"END\";\n  children?: JSX.Element;\n};\n\nconst ExamDashboardLabels: React.FC<DashboardLabelProps> = (props) => {\n  const numCols: number = props.labelsOnRow\n    ? props.labelsOnRow > 4\n      ? props.labelsOnRow\n      : 4\n    : 4;\n  return (\n    <div\n      className={`grid 2xl:grid-cols-${numCols} xl:grid-cols-${\n        numCols - 1\n      } lg:grid-cols-${numCols - 2} md:grid-cols-${\n        numCols - 3\n      } sm:grid-cols-2 grid-cols-1 gap-4 items-center mx-auto`}\n    >\n      {props.children &&\n        ((props.childrenPosition && props.childrenPosition === \"START\") ||\n          !props.childrenPosition) &&\n        props.children}\n      {props.dataLabels.map((item, index) => (\n        <section key={index + item.title}>\n          <DashboardLabelItem\n            title={item.title}\n            icon={item.icon}\n            iconColor={item.iconColor}\n            count={item.count}\n          />\n        </section>\n      ))}\n      {props.children &&\n        props.childrenPosition &&\n        props.childrenPosition === \"END\" &&\n        props.children}\n    </div>\n  );\n};\n\nexport default React.memo(ExamDashboardLabels);\n","import React from \"react\";\nimport Chart from \"react-apexcharts\";\n\ntype chartType = {\n  options: {\n    labels: string[];\n    legend?: ApexLegend;\n    plotOptions?: ApexPlotOptions;\n    colors?: any[];\n  };\n  series: number[];\n  width?: number;\n};\n\nconst PieChart: React.FC<chartType> = (props) => {\n  return (\n    <div className=\"donut\">\n      <Chart\n        options={props.options}\n        series={props.series}\n        type=\"donut\"\n        width={`${props.width ? props.width : \"380\"}`}\n      />\n    </div>\n  );\n};\n\nexport default React.memo(PieChart);\n","import axios from \"axios\";\nimport React, { Component } from \"react\";\nimport { BiRightArrowAlt } from \"react-icons/bi\";\nimport {\n  MdDelete,\n  MdEdit,\n  MdHighlightOff,\n  MdRemoveRedEye,\n  MdSettings,\n} from \"react-icons/md\";\nimport { SiAddthis } from \"react-icons/si\";\nimport { TiInputChecked } from \"react-icons/ti\";\nimport { connect } from \"react-redux\";\nimport { Redirect } from \"react-router-dom\";\nimport { PushPopupAlert } from \"../../actions\";\nimport { customizeUserAccess } from \"../../actions/users\";\nimport { PopupAlertData } from \"../../components/Alert/Popup\";\nimport Table from \"../../components/Table/Table\";\nimport { PopupAlertTheme } from \"../../interfaces/popupAlert\";\nimport {\n  UserInterface,\n  AccessTaskInterface,\n  CustomeAccessInterface,\n} from \"../../shared/interfaces\";\nimport { API } from \"../../utils/api\";\nimport { errorToText } from \"../../utils/errors\";\n\ninterface AppProps {\n  userInfo: UserInterface | undefined;\n  manageUserId: string;\n  setUserAccess: (value: AccessTaskInterface[] | null) => void;\n  userAccess: AccessTaskInterface[] | null;\n  setCurrentAccess: (value: AccessTaskInterface | null) => void;\n  currentAccess: AccessTaskInterface | null;\n  currentPage: number;\n\n  // REDUX ==============\n  PushPopupAlert: (alert: PopupAlertData) => void;\n  customizeUserAccess: Function;\n}\n\ninterface AppStates {\n  loading: boolean;\n  loadindRequest: boolean;\n  // currentAccess:AccessTaskInterface | null;\n  // userAccess:AccessTaskInterface[] | null;\n  createPermission: boolean;\n  viewPermission: boolean;\n  updatePermission: boolean;\n  deletePermission: boolean;\n}\n\nclass _UserAccess extends Component<AppProps, AppStates> {\n  constructor(props: AppProps) {\n    super(props);\n\n    this.state = {\n      loading: true,\n      loadindRequest: false,\n      // currentAccess:null,\n      // userAccess:null,\n      createPermission: false,\n      viewPermission: false,\n      updatePermission: false,\n      deletePermission: false,\n    };\n  }\n\n  setViewPermission = (value: boolean) => {\n    this.setState({ viewPermission: value });\n  };\n\n  setLoadindRequest = (value: boolean) => {\n    this.setState({ loadindRequest: value });\n  };\n\n  setCreatePermission = (value: boolean) => {\n    this.setState({ createPermission: value });\n  };\n\n  setUpdatePermission = (value: boolean) => {\n    this.setState({ updatePermission: value });\n  };\n\n  setDeletePermission = (value: boolean) => {\n    this.setState({ deletePermission: value });\n  };\n\n  setLoadind = (value: boolean) => {\n    this.setState({ loading: value });\n  };\n\n  overrideUserAccess = (\n    default_access: AccessTaskInterface[],\n    custome_access: AccessTaskInterface[]\n  ) => {\n    if (default_access && custome_access && custome_access.length > 0) {\n      let overideAccess: AccessTaskInterface[] = [];\n      for (const key in default_access) {\n        if (Object.prototype.hasOwnProperty.call(default_access, key)) {\n          const findCustom = custome_access.find(\n            (custom) => custom.id === default_access[key].id\n          );\n          if (findCustom) {\n            overideAccess.push(findCustom);\n          } else {\n            overideAccess.push(default_access[key]);\n          }\n        }\n      }\n      this.props.setUserAccess(overideAccess);\n    }\n  };\n\n  componentDidMount = () => {\n    if (this.props.userInfo && this.props.userInfo.custome_access) {\n      this.props.userInfo.default_access &&\n        this.overrideUserAccess(\n          this.props.userInfo.default_access.access,\n          this.props.userInfo.custome_access.access\n        );\n      this.setLoadind(false);\n    } else {\n      this.props.userInfo &&\n        this.props.userInfo.default_access &&\n        this.props.setUserAccess(this.props.userInfo.default_access.access);\n      this.setLoadind(false);\n    }\n  };\n\n  tableData = (): JSX.Element[] => {\n    if (!this.props.userAccess)\n      return [\n        <tr key={Math.random()}>\n          <td>No data</td>\n        </tr>,\n      ];\n    return this.props.userAccess.map((access: AccessTaskInterface, i) => (\n      <tr\n        key={i + access.id + Math.random()}\n        className={`text-left border-b border-gray-200 cursor-pointer hover:bg-gray-100 ${\n          this.props.currentAccess &&\n          this.props.currentAccess.id === access.id &&\n          \"bg-gray-200 border my-3 hover:bg-gray-100\"\n        }`}\n        onClick={() =>\n          this.props.currentAccess && this.props.currentAccess.id === access.id\n            ? (this.props.setCurrentAccess(null),\n              this.setCreatePermission(false),\n              this.setViewPermission(false),\n              this.setUpdatePermission(false),\n              this.setDeletePermission(false))\n            : (this.props.setCurrentAccess(access),\n              this.setCreatePermission(access.permitted.create),\n              this.setViewPermission(access.permitted.view),\n              this.setUpdatePermission(access.permitted.update),\n              this.setDeletePermission(access.permitted.delete))\n        }\n      >\n        <td className=\"px-2 py-1\">\n          <label className=\"inline-flex items-center\">\n            {/* <input\n              type=\"radio\"\n              name=\"taskAccess\"\n              value={access.id}\n              className=\"form-radio h-4 w-4 text-gray-600\"\n              onChange={() => {\n                currentAccess\n                  ? this.setState({ currentAccess: null })\n                  : this.setState({ currentAccess: access });\n              }}\n              checked={currentAccess ? true : false}\n            /> */}\n            <span className=\"text-gray-900 capitalize text-xl font-normal cursor-pointer\">\n              {access.task}\n            </span>\n          </label>\n        </td>\n        <td>\n          <div\n            className={`inline-flex items-center text-xl ${\n              access.permitted.create ? \"text-green-700\" : \"text-red-700\"\n            }`}\n          >\n            {access.permitted.create ? <TiInputChecked /> : <MdHighlightOff />}\n            {access.permitted.create ? \" Yes\" : \"No\"}\n          </div>\n        </td>\n        <td>\n          <div\n            className={`inline-flex items-center text-xl ${\n              access.permitted.view ? \"text-green-700\" : \"text-red-700\"\n            }`}\n          >\n            {access.permitted.view ? <TiInputChecked /> : <MdHighlightOff />}\n            {access.permitted.view ? \" Yes\" : \"No\"}\n          </div>\n        </td>\n        <td>\n          <div\n            className={`inline-flex items-center text-xl ${\n              access.permitted.update ? \"text-green-700\" : \"text-red-700\"\n            }`}\n          >\n            {access.permitted.update ? <TiInputChecked /> : <MdHighlightOff />}\n            {access.permitted.update ? \" Yes\" : \"No\"}\n          </div>\n        </td>\n        <td>\n          <div\n            className={`inline-flex items-center text-xl ${\n              access.permitted.delete ? \"text-green-700\" : \"text-red-700\"\n            }`}\n          >\n            {access.permitted.delete ? <TiInputChecked /> : <MdHighlightOff />}\n            {access.permitted.delete ? \" Yes\" : \"No\"}\n          </div>\n        </td>\n      </tr>\n    ));\n  };\n\n  handleCustomization = async (e: React.FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n    if (this.props.userInfo) {\n      this.setLoadindRequest(true);\n      let task: [] | CustomeAccessInterface | null = null;\n      task = this.props.userInfo.custome_access;\n      let index = -1;\n\n      try {\n        if (task && this.props.currentAccess) {\n          index = task.access.findIndex(\n            (access) => access.id === this.props.currentAccess!.id\n          );\n          if (index >= 0) {\n            task.access[index].permitted.create = this.state.createPermission;\n            task.access[index].permitted.view = this.state.viewPermission;\n            task.access[index].permitted.update = this.state.updatePermission;\n            task.access[index].permitted.delete = this.state.deletePermission;\n          } else {\n            task.access.push({\n              id: this.props.currentAccess.id,\n              task: this.props.currentAccess.task,\n              key: this.props.currentAccess.key,\n              permitted: {\n                create: this.state.createPermission,\n                view: this.state.viewPermission,\n                update: this.state.updatePermission,\n                delete: this.state.deletePermission,\n              },\n            });\n          }\n        } else if (this.props.currentAccess) {\n          task = {\n            access: [\n              {\n                id: this.props.currentAccess.id,\n                task: this.props.currentAccess.task,\n                key: this.props.currentAccess.key,\n                permitted: {\n                  create: this.state.createPermission,\n                  view: this.state.viewPermission,\n                  update: this.state.updatePermission,\n                  delete: this.state.deletePermission,\n                },\n              },\n            ],\n            user_id: this.props.userInfo.user_id,\n            custome_user_access_id: \"\",\n          };\n        }\n\n        if (task) {\n          let res;\n          if (this.props.userInfo.custome_access !== null) {\n            res = await axios.patch<{ data: CustomeAccessInterface }>(\n              `${API.USER}/access/custom`,\n              {\n                access: task.access,\n                user_id: this.props.userInfo.user_id,\n              }\n            );\n          } else {\n            res = await axios.post<{ data: CustomeAccessInterface }>(\n              `${API.USER}/access/custom`,\n              {\n                access: task.access,\n                user_id: this.props.userInfo.user_id,\n              }\n            );\n          }\n\n          if (res) {\n            task.custome_user_access_id = res.data.data.custome_user_access_id;\n\n            this.props.customizeUserAccess(task, this.props.currentPage);\n            task &&\n              this.props.userInfo.default_access &&\n              this.overrideUserAccess(\n                this.props.userInfo.default_access.access,\n                task.access\n              );\n            this.props.PushPopupAlert({\n              title: `Resetting User Access complete successfully`,\n              theme: PopupAlertTheme.info,\n            });\n\n            task = null;\n            this.props.setCurrentAccess(null);\n            this.setCreatePermission(false);\n            this.setViewPermission(false);\n            this.setUpdatePermission(false);\n            this.setDeletePermission(false);\n          }\n        }\n      } catch (error) {\n        console.error({ customize_access: error });\n        this.props.PushPopupAlert({\n          title: errorToText(error),\n          theme: PopupAlertTheme.danger,\n        });\n      }\n      this.setLoadindRequest(false);\n    }\n  };\n\n  render() {\n    if (this.props.userInfo === undefined) {\n      return <Redirect to=\"/users\" />;\n    }\n\n    if (this.state.loading || this.props.userInfo === null) {\n      return (\n        <div className=\"text-center py-7 font-bold text-4xl text-gray-400 animate-pulse\">\n          Loading User Access...\n        </div>\n      );\n    }\n\n    return (\n      <div>\n        <div className=\"grid grid-cols-1 md:grid-cols-5 gap-4 mx-1 my-2\">\n          <div\n            className={`col-span-1 md:col-span-3 bg-white w-full overflow-x-auto border rounded text-center p-2 ${\n              this.props.currentAccess ? \"hidden md:block\" : \"\"\n            }`}\n          >\n            <span className=\"text-gray-600 mt-2 font-semibold text-2xl\">\n              Settings\n            </span>\n            {!this.state.loading && (\n              <div className=\"overflow-x-auto w-full\">\n                <Table\n                  columns={[\n                    {\n                      columnTitle: \"Access Name\",\n                      alignText: \"left\",\n                      padding: \"p-3\",\n                    },\n                    { columnTitle: \"Create\", alignText: \"left\" },\n                    { columnTitle: \"View\", alignText: \"left\" },\n                    { columnTitle: \"Update\", alignText: \"left\" },\n                    { columnTitle: \"Delete\", alignText: \"left\" },\n                  ]}\n                  rows={this.tableData}\n                  pagination={false}\n                  search={true}\n                  searchBG=\"bg-gray-50\"\n                  thColor=\"gray\"\n                />\n              </div>\n            )}\n          </div>\n          <div className={`col-span-1 md:col-span-2`}>\n            {!this.props.currentAccess ? (\n              <div className=\"w-full hidden md:flex flex-col items-center text-gray-600 gap-1 py-3\">\n                <MdSettings className=\"w-20 h-20\" />\n                <span className=\"text-8 md:text-12\">\n                  Choose Access to Customize\n                </span>\n              </div>\n            ) : (\n              <div className={``}>\n                <h1 className=\"text-2xl md:text-3xl font-semibold text-center my-2 text-gray-900\">\n                  Customize User Access\n                </h1>\n                <div className=\"flex justify-center mb-3\">\n                  <h2 className=\"text-2xl font-semibold text-center text-gray-600 flex flex-row items-center\">\n                    <BiRightArrowAlt className=\"w-7 h-7\" />\n                    {this.props.currentAccess.task}\n                  </h2>\n                </div>\n\n                <div className=\"flex flex-col px-2 md:px-1\">\n                  <form\n                    className=\"flex flex-col items-center\"\n                    onSubmit={(e) => this.handleCustomization(e)}\n                  >\n                    <div className=\"inline-flex gap-2 items-center\">\n                      <SiAddthis className=\"w-7 h-7 text-gray-600\" />\n                      <div className=\"flex flex-col\">\n                        <h3 className=\"font-semibold text-xl\">Create</h3>\n                        <span className=\"text-gray-600 text-sm md:pr-1\">\n                          This permission gives the user the ability to create\n                        </span>\n                      </div>\n                      <input\n                        type=\"checkbox\"\n                        className=\"form-checkbox h-7 w-7 text-teal-600\"\n                        onChange={() =>\n                          this.setCreatePermission(!this.state.createPermission)\n                        }\n                        checked={this.state.createPermission}\n                        disabled={this.state.loadindRequest}\n                      />\n                    </div>\n                    <div className=\"inline-flex gap-2 items-center\">\n                      <MdRemoveRedEye className=\"w-7 h-7 text-gray-600\" />\n                      <div className=\"flex flex-col\">\n                        <h3 className=\"font-semibold text-xl\">View</h3>\n                        <span className=\"text-gray-600 text-sm md:pr-4\">\n                          This permission gives the user the ability to view\n                        </span>\n                      </div>\n                      <input\n                        type=\"checkbox\"\n                        className=\"form-checkbox h-7 w-7 text-teal-600\"\n                        onChange={() =>\n                          this.setViewPermission(!this.state.viewPermission)\n                        }\n                        checked={this.state.viewPermission}\n                        disabled={this.state.loadindRequest}\n                      />\n                    </div>\n                    <div className=\"inline-flex gap-2 items-center\">\n                      <MdEdit className=\"w-7 h-7 text-gray-600\" />\n                      <div className=\"flex flex-col\">\n                        <h3 className=\"font-semibold text-xl\">Update</h3>\n                        <span className=\"text-gray-600 text-sm\">\n                          This permission gives the user the ability to update\n                        </span>\n                      </div>\n                      <input\n                        type=\"checkbox\"\n                        className=\"form-checkbox h-7 w-7 text-teal-600\"\n                        onChange={() =>\n                          this.setUpdatePermission(!this.state.updatePermission)\n                        }\n                        checked={this.state.updatePermission}\n                        disabled={this.state.loadindRequest}\n                      />\n                    </div>\n                    <div className=\"inline-flex gap-2 items-center\">\n                      <MdDelete className=\"w-7 h-7 text-gray-600\" />\n                      <div className=\"flex flex-col\">\n                        <h3 className=\"font-semibold text-xl\">Delete</h3>\n                        <span className=\"text-gray-600 text-sm md:pr-1\">\n                          This permission gives the user the ability to delete\n                        </span>\n                      </div>\n                      <input\n                        type=\"checkbox\"\n                        className=\"form-checkbox h-7 w-7 text-teal-600\"\n                        onChange={() =>\n                          this.setDeletePermission(!this.state.deletePermission)\n                        }\n                        checked={this.state.deletePermission}\n                        disabled={this.state.loadindRequest}\n                      />\n                    </div>\n\n                    <div className=\"flex items-center justify-center w-full py-3 gap-2\">\n                      {/* <button className=\"btn btn-secondary bg-red-600\">Back</button> */}\n                      <button\n                        className=\"btn bg-gray-500 hover:bg-gray-700 focus:outline-none text-white\"\n                        disabled={this.state.loadindRequest}\n                        onClick={() => {\n                          this.props.setCurrentAccess(null);\n                          this.setCreatePermission(false);\n                          this.setViewPermission(false);\n                          this.setUpdatePermission(false);\n                          this.setDeletePermission(false);\n                        }}\n                      >\n                        Cancel\n                      </button>\n                      <button\n                        className=\"btn btn-blue\"\n                        disabled={this.state.loadindRequest}\n                      >\n                        {!this.state.loadindRequest\n                          ? \"Save Change\"\n                          : \"Processing..\"}\n                      </button>\n                    </div>\n                  </form>\n                </div>\n              </div>\n            )}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport const UserAccess = React.memo(\n  connect(null, {\n    customizeUserAccess,\n    PushPopupAlert,\n  })(_UserAccess)\n);\n","import React, { Fragment, useState } from \"react\";\nimport { AiFillDashboard } from \"react-icons/ai\";\nimport { MdBrightness1 } from \"react-icons/md\";\nimport { SessionPlanInterface } from \"../../../interfaces\";\nimport { education_category } from \"../../../interfaces/education_category\";\nimport { reportTitleType } from \"../../Admin/ExamReport/ExamReport\";\nimport ExamReportModals, {\n  ModalForTypes,\n} from \"../../Admin/ExamReport/ExamReportModals\";\n\ntype ExamReportTitleProps = {\n  // FOR SETTINGS ==============================\n  loading: boolean;\n\n  // FOR REPORT TYPE =========================\n  reportTitle: reportTitleType;\n  setReportTitle: (title: reportTitleType) => void;\n\n  //   FOR EDUCATION CATEGORY & PERIOD =====================\n  education_categories: education_category[] | null;\n  loadingEducation: boolean;\n  thisEducation: education_category | null;\n  setThisEducation: (value: education_category | null) => void;\n\n  //   FOR APPLICATION SESSION ============================\n  thisPeriod: string;\n  setThisPeriod: (value: string) => void;\n  application_sessions: SessionPlanInterface[];\n  onPeriodChange?: (period_id: string) => void;\n};\n\nconst ExamDashboardTitle: React.FC<ExamReportTitleProps> = (props) => {\n  const [changeReport, setChangeReport] = useState<boolean>(false);\n\n  return (\n    <Fragment>\n      <div className=\"mt-3 rounded flex flex-col md:flex-row md:justify-between items-start\">\n        <div className=\"flex flex-row items-center gap-3 mb-2\">\n          <AiFillDashboard className=\"text-7xl text-blue-600 hidden md:block\" />\n          <div className=\"flex flex-col\">\n            <span className=\"text-blue-600 text-3xl font-bold\">\n              Exam Dashboard\n            </span>\n            {false && (\n              <div\n                onClick={() => setChangeReport(true)}\n                className=\"flex flex-row gap-2\"\n              >\n                <span className=\"text-gray-500\">Report type: </span>\n                <span className=\"text-gray-600 font-bold underline cursor-pointer\">\n                  {props.reportTitle}\n                </span>\n              </div>\n            )}\n          </div>\n        </div>\n\n        {/* FILTER SECTION PERIOD && EDUCATION */}\n        <section className=\"w-full md:w-auto my-2 md:my-0\">\n          {/* EDUCATION CATEGORY sections */}\n          <section className=\"flex items-start md:items-center justify-start md:justify-end gap-2\">\n            {props.education_categories &&\n              props.education_categories.length > 0 &&\n              props.education_categories.map((education, index) => (\n                <section\n                  key={education.education_institute_id + index}\n                  className={`w-auto ${\n                    props.loading || props.loadingEducation\n                      ? \"cursor-not-allowed\"\n                      : \"cursor-pointer\"\n                  } ${\n                    props.thisEducation &&\n                    education.education_institute_id ===\n                      props.thisEducation.education_institute_id\n                      ? \"bg-blue-500 text-white font-bold\"\n                      : \"bg-gray-100 text-blue-800\"\n                  } mb-1 hover:font-bold py-1 hover:bg-blue-400 hover:text-white --font-bold  px-2 rounded-md flex items-center animate__animated animate__zoomIn`}\n                  onClick={() =>\n                    !props.loading &&\n                    !props.loadingEducation &&\n                    props.setThisEducation(education)\n                  }\n                >\n                  <section className=\"flex-1\">\n                    <MdBrightness1 className=\"inline-block mr-1 text-xs\" />\n                    <span>{education.education_category_title}</span>\n                  </section>\n\n                  {/* {count > 0 ? ( */}\n                  {/* <span className=\"px-0.5 my-1 text-xs bg-blue-600 text-white rounded-full\">\n              12\n            </span> */}\n                  {/* ) : null} */}\n                </section>\n              ))}\n          </section>\n          {/* end EDUCATION CATEGORY sections */}\n          <div>\n            <select\n              className={`bg-white text-gray-600 border border-gray-400 rounded p-2 focus:outline-none ${\n                props.loading && \"cursor-wait\"\n              }`}\n              value={props.thisPeriod}\n              disabled={props.loading || props.loadingEducation}\n              onChange={(e) => {\n                props.setThisPeriod(e.target.value);\n                props.onPeriodChange && props.onPeriodChange(e.target.value);\n                // props.setLoadingApplications(true);\n                // props.GetApplicationPerPeriod(\n                //   e.target.value,\n                //   (status: boolean, msg: string) => {\n                //     props.setLoadingApplications(status);\n                //     if (!status && msg.length > 0) {\n                //       props.PushPopupAlert({\n                //         title: errorToText(msg),\n                //         theme: PopupAlertTheme.danger,\n                //       });\n                //     }\n                //   }\n                // );\n              }}\n            >\n              {props.application_sessions.map((session, item) => (\n                <option key={session._id + item} value={session._id}>\n                  {session.session_plan_name}\n                </option>\n              ))}\n            </select>\n          </div>\n        </section>\n        {/* END FILTER SECTION PERIOD && EDUCATION */}\n      </div>\n      {/* CHANGE REPORT TYPE MODAL CONTROLLERS ============================================ */}\n      {changeReport && (\n        <ExamReportModals\n          modalFor={ModalForTypes.title}\n          modalState={changeReport}\n          reportTitle={props.reportTitle}\n          changeModalState={setChangeReport}\n          setReportTitle={props.setReportTitle}\n        />\n      )}\n      {/* END CHANGE REPORT TYPE MODAL CONTROLLERS ============================================ */}\n    </Fragment>\n  );\n};\n\nexport default React.memo(ExamDashboardTitle);\n","import React, { Component } from \"react\";\nimport { examPreparationStateInterface } from \"../../Admin/ExamReport/ExamList\";\nimport VBarChart from \"../ChartComponents/VBarChart\";\n\ntype ExamPreparationChartProps = {\n  examPreparationProgress: {\n    all: examPreparationStateInterface[];\n    finished: examPreparationStateInterface[];\n    remaining: examPreparationStateInterface[];\n  };\n};\n\nclass ExamPreparationChart extends Component<ExamPreparationChartProps> {\n  render() {\n    return (\n      <div className=\"my-3 max-w-full bg-white\">\n        <div className=\"flex items-center justify-between px-3\">\n          <span className=\"text-gray-600 font-semibold text-xl py-4 px-0\">\n            Exams preparation chart\n          </span>\n        </div>\n\n        <div className=\"mb-4 pb-2 px-3\">\n          <VBarChart\n            labels={[\"Remaining exams\", \"Prepared exams\"]}\n            categoriesLabel={[\"Exam preparation progress\"]}\n            dataLabels={true}\n            yaxisText=\"Exam preparation progress\"\n            tooltipText=\"(Exams)\"\n            series={[\n              {\n                name: \"Remaining exams\",\n                data: [this.props.examPreparationProgress.remaining.length],\n              },\n              {\n                name: \"Prepared exams\",\n                data: [this.props.examPreparationProgress.finished.length],\n              },\n            ]}\n            colors={[\"#4b5563\", \"#469769\"]}\n            defaultBar={{\n              borderRadius: 4,\n              horizontal: false,\n              columnWidth: \"95%\",\n              endingShape: \"rounded\",\n            }}\n            chartHeight={550}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default React.memo(ExamPreparationChart);\n","import React, { Component } from \"react\";\nimport { examProgressStateInterface } from \"../../Admin/ExamReport/DoneExamList\";\nimport VBarChart from \"../ChartComponents/VBarChart\";\n\ntype ExamProgressChartProps = {\n  progressData: {\n    all: examProgressStateInterface[];\n    finished: examProgressStateInterface[];\n    remaining: examProgressStateInterface[];\n  };\n};\n\nclass ExamProgressChart extends Component<ExamProgressChartProps> {\n  render() {\n    return (\n      <div className=\"my-3 max-w-full bg-white\">\n        <div className=\"flex items-center justify-between px-3\">\n          <span className=\"text-gray-600 font-semibold text-xl py-4 px-0\">\n            Examination progress chart\n          </span>\n        </div>\n\n        <div className=\"mb-4 pb-2 px-3\">\n          <VBarChart\n            labels={[\"Remaining exams\", \"Prepared exams\"]}\n            categoriesLabel={[\"Examinations progress\"]}\n            dataLabels={true}\n            yaxisText=\"Examination progress\"\n            tooltipText=\"(Exams)\"\n            series={[\n              {\n                name: \"Remaining exams\",\n                data: [this.props.progressData.remaining.length],\n              },\n              {\n                name: \"Done exams\",\n                data: [this.props.progressData.finished.length],\n              },\n            ]}\n            colors={[\"#4b5563\", \"#469769\"]}\n            defaultBar={{\n              borderRadius: 4,\n              horizontal: false,\n              columnWidth: \"95%\",\n              endingShape: \"rounded\",\n            }}\n            chartHeight={550}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default React.memo(ExamProgressChart);\n","import React, { Component } from \"react\";\nimport { candidatePerfomranceStateInterface } from \"../../Admin/ExamReport/CandidatePerformance\";\nimport VBarChart from \"../ChartComponents/VBarChart\";\n\ntype ExamPerformanceChartProps = {\n  examPerformance: {\n    all: candidatePerfomranceStateInterface[];\n    pass: candidatePerfomranceStateInterface[];\n    failed: candidatePerfomranceStateInterface[];\n    active: candidatePerfomranceStateInterface[];\n  };\n};\n\nclass ExamPerformanceChart extends Component<ExamPerformanceChartProps> {\n  render() {\n    return (\n      <div className=\"my-3 max-w-full bg-white\">\n        <div className=\"flex items-center justify-between px-3\">\n          <span className=\"text-gray-600 font-semibold text-xl py-4 px-0\">\n            Examination performance chart\n          </span>\n        </div>\n\n        <div className=\"mb-4 pb-2 px-3\">\n          <VBarChart\n            labels={[\"Pass applicant(s)\", \"Failed applicant(s)\"]}\n            categoriesLabel={[\"Exam preparation progress\"]}\n            dataLabels={true}\n            yaxisText=\"Exam performance\"\n            tooltipText=\"(Applicants)\"\n            series={[\n              {\n                name: \"Pass applicant(s)\",\n                data: [this.props.examPerformance.pass.length],\n              },\n              {\n                name: \"Failed applicant(s)\",\n                data: [this.props.examPerformance.failed.length],\n              },\n            ]}\n            colors={[\"#469769\", \"#d97724\"]}\n            defaultBar={{\n              borderRadius: 4,\n              horizontal: false,\n              columnWidth: \"95%\",\n              endingShape: \"rounded\",\n            }}\n            chartHeight={550}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default React.memo(ExamPerformanceChart);\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport {\n  Auth,\n  schoolLevelsStoreInterface,\n  loadCourses,\n  loadExamsList,\n  loadEducationCategories,\n  loadDoneExam,\n  loadSchoolLevels,\n  loadPerfomranceExam,\n  loadCandidatesExamPerformance,\n  PushPopupAlert,\n  FilterParamType,\n} from \"../../../actions\";\nimport { StoreState } from \"../../../reducers\";\nimport { GetAllSessionPlans } from \"../../../actions/session\";\nimport {\n  SessionPlanInterface,\n  course,\n  education_category,\n  ExamDoneAndRemainingByPeriodInterface,\n  school_level,\n} from \"../../../interfaces\";\nimport { ExamItemResponse } from \"../../../interfaces/prepare_exam\";\nimport { ExamReportReducerType } from \"../../../reducers/exam_report\";\nimport moment from \"moment\";\nimport { PopupAlertData } from \"../../../components/Alert/Popup\";\nimport {\n  candidatePerfomranceStateInterface,\n  FC_reportCandidatePerformanceData,\n  FC_reportCandidatePerformanceDataFilter,\n} from \"../../Admin/ExamReport/CandidatePerformance\";\nimport {\n  examProgressStateInterface,\n  FC_reportDoneExamList,\n} from \"../../Admin/ExamReport/DoneExamList\";\nimport {\n  examPreparationStateInterface,\n  FC_reportExamList,\n} from \"../../Admin/ExamReport/ExamList\";\nimport { reportTitleType } from \"../../Admin/ExamReport/ExamReport\";\nimport { PopupAlertTheme } from \"../../../interfaces/popupAlert\";\nimport NoSession from \"../../SessionSettings/NoSession\";\nimport ExamDashboardTitle from \"./ExamDashboardTitle\";\nimport ExamDashboardLabels from \"./ExamDashboardLabels\";\nimport { FaBookOpen } from \"react-icons/fa\";\nimport PieChart from \"../ChartComponents/PieChart\";\nimport ExamPreparationChart from \"./ExamPreparationChart\";\nimport ExamProgressChart from \"./ExamProgressChart\";\nimport ExamPerformanceChart from \"./ExamPerformanceChart\";\n\nexport const getLevelbyId = (\n  school_levels: school_level[] | null,\n  level_id: string\n): school_level | undefined => {\n  if (school_levels) {\n    return school_levels.find((item) => item.school_level_id === level_id);\n  }\n};\n\nexport const loadCoursesByInstitute = (\n  thisEducation: education_category | null,\n  courseList: course[] | null,\n  school_levels: school_level[] | null\n): course[] | null => {\n  let result: course[] | null = [],\n    defaultValue: boolean = false;\n  if (courseList && thisEducation) {\n    for (const key in courseList) {\n      if (Object.prototype.hasOwnProperty.call(courseList, key)) {\n        if (courseList[key].school_levels.length > 0) {\n          courseList[key].school_levels.forEach((level) => {\n            let levelDetail = getLevelbyId(school_levels, level);\n            if (\n              levelDetail &&\n              (levelDetail.education_institute.includes(\n                thisEducation.education_institute_id\n              ) ||\n                levelDetail.education_institute.length <= 0)\n            ) {\n              result && result.push(courseList![key]);\n            }\n          });\n        } else {\n          result && result.push(courseList![key]);\n        }\n      }\n    }\n  }\n  // RETURN DEFAULT VALUES ====================\n  else {\n    defaultValue = true;\n  }\n  return defaultValue ? courseList : result;\n};\n\nexport const loadExaminationProgress = (\n  DoneExamList: ExamDoneAndRemainingByPeriodInterface[] | null,\n  examsList: ExamItemResponse[] | null,\n  thisEducation: education_category | null,\n  courseList: course[] | null,\n  school_levels: school_level[] | null,\n  period: string\n): {\n  all: examProgressStateInterface[];\n  finished: examProgressStateInterface[];\n  remaining: examProgressStateInterface[];\n} | null => {\n  let allData: examProgressStateInterface[] = [],\n    completeExams: examProgressStateInterface[] = [],\n    remainingExams: examProgressStateInterface[] = [],\n    dataFound: boolean = false;\n  if (\n    DoneExamList &&\n    loadCoursesByInstitute(thisEducation, courseList, school_levels) &&\n    examsList\n  ) {\n    dataFound = true;\n    allData = FC_reportDoneExamList(\n      loadCoursesByInstitute(thisEducation, courseList, school_levels)!,\n      examsList,\n      DoneExamList\n    ).filter((item) => item.exam && item.exam.period === period);\n    completeExams = allData.filter(\n      (item) => item.preparation_status.toLocaleLowerCase() === \"done\"\n    );\n    remainingExams = allData.filter(\n      (item) => item.preparation_status.toLocaleLowerCase() === \"active\"\n    );\n  }\n  console.log(\"====================================\");\n  console.log({ loadExaminationProgress: DoneExamList });\n  console.log(\"====================================\");\n  return dataFound\n    ? { all: allData, finished: completeExams, remaining: remainingExams }\n    : null;\n};\n\nexport const loadExamPreparationProgress = (\n  dataList: examPreparationStateInterface[]\n): {\n  all: examPreparationStateInterface[];\n  finished: examPreparationStateInterface[];\n  remaining: examPreparationStateInterface[];\n} => {\n  let allData: examPreparationStateInterface[] = dataList,\n    preparedExams: examPreparationStateInterface[] = dataList.filter(\n      (item) => item.preparation_status === \"prepared\"\n    ),\n    remainingExams: examPreparationStateInterface[] = dataList.filter(\n      (item) => item.preparation_status === \"not prepared\"\n    );\n  return { all: allData, finished: preparedExams, remaining: remainingExams };\n};\n\nexport const isDatePast = (dateParam: string): boolean => {\n  const date = moment().format(\"DD-MM-YYYY\");\n  const todayDate = moment(date, \"DD-MM-YYYY\");\n  const pastDate = moment(dateParam, \"DD-MM-YYYY\");\n\n  const dDiff = todayDate.diff(pastDate);\n\n  if (dDiff > 0) {\n    return false;\n  } else {\n    return true;\n  }\n};\n\nexport const loadExamAttendance = (\n  applicantList: candidatePerfomranceStateInterface[],\n  period: string\n): {\n  all: candidatePerfomranceStateInterface[];\n  pass: candidatePerfomranceStateInterface[];\n  failed: candidatePerfomranceStateInterface[];\n  active: candidatePerfomranceStateInterface[];\n} => {\n  return {\n    all: applicantList.filter((item) => item.exam.period === period),\n    pass: applicantList.filter(\n      (item) =>\n        item.exam.period === period &&\n        (item.exam_stastus !== \"Editing\" || isDatePast(item.exam.exam_date)) &&\n        item.user_total_marks >= 50\n    ),\n    failed: applicantList.filter(\n      (item) =>\n        item.exam.period === period &&\n        (item.exam_stastus !== \"Editing\" || isDatePast(item.exam.exam_date)) &&\n        item.user_total_marks < 50\n    ),\n    active: applicantList.filter(\n      (item) =>\n        item.exam.period === period &&\n        item.exam_stastus === \"Editing\" &&\n        !isDatePast(item.exam.exam_date)\n    ),\n  };\n};\n\ninterface ExamDashboardProps {\n  auth: Auth;\n  application_sessions: SessionPlanInterface[] | null;\n  schoolLevels: schoolLevelsStoreInterface;\n  courses: course[] | null;\n  examsList: ExamItemResponse[] | null;\n  adminExamReport: ExamReportReducerType;\n  GetAllSessionPlans: Function;\n  loadEducationCategories: (callback: (loading: boolean) => void) => void;\n  loadCourses: (callback: (loading: boolean) => void) => void;\n  loadExamsList: (callback: (loading: boolean) => void) => void;\n  loadDoneExam: (period_id: string, callback: Function) => void;\n  loadPerfomranceExam: (period_id: string, callback: Function) => void;\n  loadSchoolLevels: (callback: (loading: boolean) => void) => void;\n  loadCandidatesExamPerformance: (\n    dataBody: FilterParamType | null,\n    callback: Function\n  ) => void;\n  PushPopupAlert: (alert: PopupAlertData) => void;\n}\n\ninterface ExamDashboardStates {\n  loading: boolean;\n  loadingCourses: boolean;\n  loadingExams: boolean;\n  loadingDoneExam: boolean;\n  loadingCandidatesExamPerformance: boolean;\n  loadingExamPerformance: boolean;\n  loadingSettings: boolean;\n  changingPeriod: boolean;\n  reportTitle: reportTitleType;\n  thisEducation: education_category | null;\n  thisPeriod: string;\n}\n\nclass _ExamDashboard extends Component<\n  ExamDashboardProps,\n  ExamDashboardStates\n> {\n  constructor(props: ExamDashboardProps) {\n    super(props);\n\n    this.state = {\n      loading: true,\n      loadingCourses: true,\n      loadingExams: true,\n      loadingDoneExam: true,\n      loadingCandidatesExamPerformance: true,\n      loadingExamPerformance: true,\n      loadingSettings: true,\n      changingPeriod: false,\n      reportTitle: reportTitleType.EXAM_PREPARATION,\n      thisEducation: null,\n      thisPeriod: \"\",\n    };\n  }\n\n  setLoading = (value: boolean) => {\n    this.setState({ loading: value });\n  };\n\n  setLoadingCourses = (value: boolean) => {\n    this.setState({ loadingCourses: value });\n  };\n\n  setLoadingExams = (value: boolean) => {\n    this.setState({ loadingExams: value });\n  };\n\n  setLoadingDoneExam = (value: boolean) => {\n    this.setState({ loadingDoneExam: value });\n  };\n\n  setLoadingCandidatesExamPerformance = (value: boolean) => {\n    this.setState({ loadingCandidatesExamPerformance: value });\n  };\n\n  setLoadingExamPerformance = (value: boolean) => {\n    this.setState({ loadingExamPerformance: value });\n  };\n\n  setLoadingSettings = (value: boolean) => {\n    this.setState({ loadingSettings: value });\n  };\n\n  setChangingPeriod = (value: boolean) => {\n    this.setState({ changingPeriod: value });\n  };\n\n  setReportTitle = (value: reportTitleType) => {\n    this.setState({ reportTitle: value });\n  };\n\n  setThisEducation = (value: education_category | null) => {\n    this.setState({ thisEducation: value });\n  };\n\n  setThisPeriod = (value: string) => {\n    this.setState({ thisPeriod: value });\n  };\n\n  loadByPeriods = (session: SessionPlanInterface) => {\n    this.props.loadDoneExam(session._id, (status: boolean, msg: string) => {\n      if (!status) {\n        if (msg.length > 0) {\n          this.props.PushPopupAlert({\n            title: msg,\n            theme: PopupAlertTheme.danger,\n          });\n        }\n        this.setLoadingDoneExam(false);\n      }\n    });\n\n    // --------------------------------------------\n    this.props.loadPerfomranceExam(\n      session._id,\n      (status: boolean, msg: string) => {\n        if (!status) {\n          if (msg.length > 0) {\n            this.props.PushPopupAlert({\n              title: msg,\n              theme: PopupAlertTheme.danger,\n            });\n          }\n          this.setLoadingExamPerformance(false);\n        }\n      }\n    );\n  };\n\n  componentDidMount = () => {\n    if (\n      this.props.schoolLevels.education_categories === null ||\n      this.props.schoolLevels.education_categories.length === 0\n    ) {\n      this.props.loadEducationCategories(this.setLoadingSettings);\n    } else if (\n      this.props.schoolLevels.education_categories.length > 0 &&\n      !this.state.thisEducation\n    ) {\n      this.setThisEducation(this.props.schoolLevels.education_categories[0]);\n      this.setLoadingSettings(false);\n    }\n\n    if (this.props.application_sessions === null) {\n      this.props.GetAllSessionPlans(\n        (status: boolean, msg: string, sessions?: SessionPlanInterface[]) => {\n          this.setLoadingSettings(status);\n          this.setLoading(status);\n          if (!status && msg.length) {\n            this.props.PushPopupAlert({\n              title: msg,\n              theme: PopupAlertTheme.danger,\n            });\n          }\n          if (!status && sessions && sessions.length > 0) {\n            let active_period: SessionPlanInterface | undefined;\n            active_period = sessions.find((item) => item.is_active);\n            if (active_period) {\n              this.setThisPeriod(active_period._id);\n            } else {\n              this.setThisPeriod(sessions[sessions.length - 1]._id);\n            }\n          }\n        }\n      );\n    } else if (\n      this.props.application_sessions.length > 0 &&\n      !this.state.thisPeriod.length\n    ) {\n      let active_period: SessionPlanInterface | undefined;\n      active_period = this.props.application_sessions.find(\n        (item) => item.is_active\n      );\n      if (active_period) {\n        this.setThisPeriod(active_period._id);\n        this.loadByPeriods(active_period);\n      } else {\n        this.setThisPeriod(\n          this.props.application_sessions[\n            this.props.application_sessions.length - 1\n          ]._id\n        );\n        this.loadByPeriods(\n          this.props.application_sessions[\n            this.props.application_sessions.length - 1\n          ]\n        );\n      }\n      this.setLoadingSettings(false);\n      this.setLoading(false);\n    }\n\n    if (\n      this.props.schoolLevels.school_levels === null ||\n      this.props.schoolLevels.school_levels.length <= 0\n    ) {\n      this.props.loadSchoolLevels(this.setLoadingSettings);\n    } else {\n      this.setLoadingSettings(false);\n    }\n\n    // if (this.state.thisPeriod.length > 0 && this.state.loadingDoneExam) {\n    //   this.props.loadDoneExam(\n    //     this.state.thisPeriod,\n    //     (status: boolean, msg: string) => {\n    //       if (!status) {\n    //         if (msg.length > 0) {\n    //           this.props.PushPopupAlert({\n    //             title: msg,\n    //             theme: PopupAlertTheme.danger,\n    //           });\n    //         }\n    //         this.setLoadingDoneExam(false);\n    //       }\n    //     }\n    //   );\n    // }\n    // if (this.state.thisPeriod.length > 0 && this.state.loadingExamPerformance) {\n    //   this.props.loadPerfomranceExam(\n    //     this.state.thisPeriod,\n    //     (status: boolean, msg: string) => {\n    //       if (!status) {\n    //         if (msg.length > 0) {\n    //           this.props.PushPopupAlert({\n    //             title: msg,\n    //             theme: PopupAlertTheme.danger,\n    //           });\n    //         }\n    //         this.setLoadingExamPerformance(false);\n    //       }\n    //     }\n    //   );\n    // }\n\n    if (\n      this.props.adminExamReport.CandidatesExamPerformance === null ||\n      (this.props.adminExamReport.CandidatesExamPerformance.length === 0 &&\n        this.state.loadingCandidatesExamPerformance)\n    ) {\n      this.props.loadCandidatesExamPerformance(\n        null,\n        (status: boolean, msg: string) => {\n          if (!status) {\n            if (msg.length > 0) {\n              this.props.PushPopupAlert({\n                title: msg,\n                theme: PopupAlertTheme.danger,\n              });\n            }\n            this.setLoadingCandidatesExamPerformance(false);\n          }\n        }\n      );\n    }\n  };\n\n  onPeriodChange = (period_id: string) => {\n    this.setLoadingDoneExam(true);\n    this.setLoadingExamPerformance(true);\n    this.setChangingPeriod(true);\n    this.props.loadDoneExam(period_id, (status: boolean, msg: string) => {\n      if (!status) {\n        let action: boolean = true;\n        if (msg.length > 0 && action) {\n          this.props.PushPopupAlert({\n            title: msg,\n            theme: PopupAlertTheme.danger,\n          });\n          action = false;\n        }\n        this.setLoadingDoneExam(false);\n      }\n    });\n\n    this.props.loadPerfomranceExam(\n      period_id,\n      (status: boolean, msg: string) => {\n        if (!status) {\n          let action: boolean = true;\n          if (msg.length > 0 && action) {\n            this.props.PushPopupAlert({\n              title: msg,\n              theme: PopupAlertTheme.danger,\n            });\n            action = false;\n          }\n          this.setLoadingExamPerformance(false);\n        }\n      }\n    );\n\n    if (!this.state.loadingDoneExam && !this.state.loadingExamPerformance) {\n      this.setChangingPeriod(false);\n    }\n  };\n\n  render() {\n    if (this.state.loading || this.props.application_sessions === null) {\n      return (\n        <div className=\"text-center mt-7 font-bold text-4xl text-gray-400 animate-pulse\">\n          Loading Data...\n        </div>\n      );\n    }\n\n    if (this.props.application_sessions.length === 0) {\n      return <NoSession />;\n    }\n\n    return (\n      <div>\n        {/* HEADER TITLE */}\n        <ExamDashboardTitle\n          reportTitle={this.state.reportTitle}\n          setReportTitle={this.setReportTitle}\n          loading={this.state.changingPeriod}\n          education_categories={this.props.schoolLevels.education_categories}\n          loadingEducation={false}\n          thisEducation={this.state.thisEducation}\n          setThisEducation={this.setThisEducation}\n          thisPeriod={this.state.thisPeriod}\n          setThisPeriod={this.setThisPeriod}\n          application_sessions={this.props.application_sessions}\n          onPeriodChange={this.onPeriodChange}\n        />\n        {/* END HEADER TITLE */}\n\n        {/* ----------------------------------------------------------- */}\n\n        {/* EXAMS PREPARATION PROGRESS LABELS ======================================= */}\n        {this.props.examsList &&\n          loadCoursesByInstitute(\n            this.state.thisEducation,\n            this.props.courses,\n            this.props.schoolLevels.school_levels\n          ) && (\n            <section className=\"my-2\">\n              <div className=\"text-2xl font-semibold text-gray-600\">\n                Exams preparation status\n              </div>\n              <ExamDashboardLabels\n                dataLabels={[\n                  {\n                    title: \"Total exams\",\n                    icon: FaBookOpen,\n                    iconColor: \"blue\",\n                    count: loadExamPreparationProgress(\n                      FC_reportExamList(\n                        loadCoursesByInstitute(\n                          this.state.thisEducation,\n                          this.props.courses,\n                          this.props.schoolLevels.school_levels\n                        )!,\n                        this.props.examsList,\n                        this.state.thisPeriod\n                      )\n                    ).all.length,\n                  },\n                  {\n                    title: \"Prepared exams\",\n                    icon: FaBookOpen,\n                    iconColor: \"green\",\n                    count: loadExamPreparationProgress(\n                      FC_reportExamList(\n                        loadCoursesByInstitute(\n                          this.state.thisEducation,\n                          this.props.courses,\n                          this.props.schoolLevels.school_levels\n                        )!,\n                        this.props.examsList,\n                        this.state.thisPeriod\n                      )\n                    ).finished.length,\n                  },\n                  {\n                    title: \"Remaining exams\",\n                    icon: FaBookOpen,\n                    iconColor: \"gray\",\n                    count: loadExamPreparationProgress(\n                      FC_reportExamList(\n                        loadCoursesByInstitute(\n                          this.state.thisEducation,\n                          this.props.courses,\n                          this.props.schoolLevels.school_levels\n                        )!,\n                        this.props.examsList,\n                        this.state.thisPeriod\n                      )\n                    ).remaining.length,\n                  },\n                ]}\n                labelsOnRow={5}\n              >\n                <div className=\"flex justify-center\">\n                  <PieChart\n                    options={{\n                      labels: [\"Prepared\", \"Remaining\"],\n                      legend: {\n                        show: false,\n                        position: \"bottom\",\n                        horizontalAlign: \"center\",\n                        fontSize: \"16px\",\n                        itemMargin: {\n                          horizontal: 3,\n                          vertical: 0,\n                        },\n                      },\n                      plotOptions: {\n                        pie: {\n                          donut: {\n                            labels: {\n                              show: true,\n                              name: {\n                                show: true,\n                                fontSize: \"16px\",\n                                //   fontFamily: \"Rubik\",\n                                color: \"#2564eb\",\n                                offsetY: -10,\n                              },\n                              value: {\n                                show: true,\n                                fontSize: \"20px\",\n                                fontFamily: \"Helvetica, Arial, sans-serif\",\n                                color: \"#2564eb\",\n                                offsetY: 10,\n                                formatter: function (val) {\n                                  return val;\n                                },\n                              },\n                              total: {\n                                show: true,\n                                label: \"Total\",\n                                color: \"#2564eb\",\n                                formatter: function (w) {\n                                  return w.globals.seriesTotals.reduce(\n                                    (a: number, b: number) => {\n                                      return a + b;\n                                    },\n                                    0\n                                  );\n                                },\n                              },\n                            },\n                          },\n                        },\n                      },\n                      colors: [\"#469769\", \"#4b5563\"],\n                    }}\n                    series={[\n                      loadExamPreparationProgress(\n                        FC_reportExamList(\n                          loadCoursesByInstitute(\n                            this.state.thisEducation,\n                            this.props.courses,\n                            this.props.schoolLevels.school_levels\n                          )!,\n                          this.props.examsList,\n                          this.state.thisPeriod\n                        )\n                      ).finished.length,\n                      loadExamPreparationProgress(\n                        FC_reportExamList(\n                          loadCoursesByInstitute(\n                            this.state.thisEducation,\n                            this.props.courses,\n                            this.props.schoolLevels.school_levels\n                          )!,\n                          this.props.examsList,\n                          this.state.thisPeriod\n                        )\n                      ).remaining.length,\n                    ]}\n                    width={210}\n                  />\n                </div>\n              </ExamDashboardLabels>\n            </section>\n          )}\n        {/* EXAMS PREPARATION PROGRESS LABELS ======================================= */}\n\n        {/* ===================================================================================== */}\n\n        {/* EXAMS PROGRESS LABELS ======================================= */}\n        {loadExaminationProgress(\n          this.props.adminExamReport.DoneExam,\n          this.props.examsList,\n          this.state.thisEducation,\n          this.props.courses,\n          this.props.schoolLevels.school_levels,\n          this.state.thisPeriod\n        ) && (\n          <section className=\"my-2\">\n            <div className=\"text-2xl font-semibold text-gray-600\">\n              Examination progress status\n            </div>\n            <ExamDashboardLabels\n              dataLabels={[\n                {\n                  title: \"Total exams\",\n                  icon: FaBookOpen,\n                  iconColor: \"blue\",\n                  count: loadExaminationProgress(\n                    this.props.adminExamReport.DoneExam,\n                    this.props.examsList,\n                    this.state.thisEducation,\n                    this.props.courses,\n                    this.props.schoolLevels.school_levels,\n                    this.state.thisPeriod\n                  )!.all.length,\n                },\n                {\n                  title: \"Done exams\",\n                  icon: FaBookOpen,\n                  iconColor: \"green\",\n                  count: loadExaminationProgress(\n                    this.props.adminExamReport.DoneExam,\n                    this.props.examsList,\n                    this.state.thisEducation,\n                    this.props.courses,\n                    this.props.schoolLevels.school_levels,\n                    this.state.thisPeriod\n                  )!.finished.length,\n                },\n                {\n                  title: \"Remaining exams\",\n                  icon: FaBookOpen,\n                  iconColor: \"gray\",\n                  count: loadExaminationProgress(\n                    this.props.adminExamReport.DoneExam,\n                    this.props.examsList,\n                    this.state.thisEducation,\n                    this.props.courses,\n                    this.props.schoolLevels.school_levels,\n                    this.state.thisPeriod\n                  )!.remaining.length,\n                },\n              ]}\n              labelsOnRow={5}\n            >\n              <div className=\"flex justify-center\">\n                <PieChart\n                  options={{\n                    labels: [\"Done\", \"Remaining\"],\n                    legend: {\n                      show: false,\n                      position: \"bottom\",\n                      horizontalAlign: \"center\",\n                      fontSize: \"16px\",\n                      itemMargin: {\n                        horizontal: 3,\n                        vertical: 0,\n                      },\n                    },\n                    plotOptions: {\n                      pie: {\n                        donut: {\n                          labels: {\n                            show: true,\n                            name: {\n                              show: true,\n                              fontSize: \"16px\",\n                              //   fontFamily: \"Rubik\",\n                              color: \"#2564eb\",\n                              offsetY: -10,\n                            },\n                            value: {\n                              show: true,\n                              fontSize: \"20px\",\n                              fontFamily: \"Helvetica, Arial, sans-serif\",\n                              color: \"#2564eb\",\n                              offsetY: 10,\n                              formatter: function (val) {\n                                return val;\n                              },\n                            },\n                            total: {\n                              show: true,\n                              label: \"Total\",\n                              color: \"#2564eb\",\n                              formatter: function (w) {\n                                return w.globals.seriesTotals.reduce(\n                                  (a: number, b: number) => {\n                                    return a + b;\n                                  },\n                                  0\n                                );\n                              },\n                            },\n                          },\n                        },\n                      },\n                    },\n                    colors: [\"#469769\", \"#4b5563\"],\n                  }}\n                  series={[\n                    loadExaminationProgress(\n                      this.props.adminExamReport.DoneExam,\n                      this.props.examsList,\n                      this.state.thisEducation,\n                      this.props.courses,\n                      this.props.schoolLevels.school_levels,\n                      this.state.thisPeriod\n                    )!.finished.length,\n                    loadExaminationProgress(\n                      this.props.adminExamReport.DoneExam,\n                      this.props.examsList,\n                      this.state.thisEducation,\n                      this.props.courses,\n                      this.props.schoolLevels.school_levels,\n                      this.state.thisPeriod\n                    )!.remaining.length,\n                  ]}\n                  width={210}\n                />\n              </div>\n            </ExamDashboardLabels>\n          </section>\n        )}\n        {/* EXAMS PROGRESS LABELS ======================================= */}\n\n        {/* ===================================================================================== */}\n\n        {/* EXAMS PERFORMANCE LABELS ======================================= */}\n        {this.props.adminExamReport.CandidatesExamPerformance &&\n          loadCoursesByInstitute(\n            this.state.thisEducation,\n            this.props.courses,\n            this.props.schoolLevels.school_levels\n          ) && (\n            <section className=\"my-2\">\n              <div className=\"text-2xl font-semibold text-gray-600\">\n                Examination performance status\n              </div>\n              <ExamDashboardLabels\n                dataLabels={[\n                  {\n                    title: \"Total attendance\",\n                    icon: FaBookOpen,\n                    iconColor: \"blue\",\n                    count: loadExamAttendance(\n                      FC_reportCandidatePerformanceDataFilter(\n                        FC_reportCandidatePerformanceData(\n                          loadCoursesByInstitute(\n                            this.state.thisEducation,\n                            this.props.courses,\n                            this.props.schoolLevels.school_levels\n                          )!,\n                          this.props.adminExamReport.CandidatesExamPerformance,\n                          \"all\"\n                        ),\n                        \"all\"\n                      ),\n                      this.state.thisPeriod\n                    ).all.length,\n                  },\n                  {\n                    title: \"Pass applicant(s)\",\n                    icon: FaBookOpen,\n                    iconColor: \"green\",\n                    count: loadExamAttendance(\n                      FC_reportCandidatePerformanceDataFilter(\n                        FC_reportCandidatePerformanceData(\n                          loadCoursesByInstitute(\n                            this.state.thisEducation,\n                            this.props.courses,\n                            this.props.schoolLevels.school_levels\n                          )!,\n                          this.props.adminExamReport.CandidatesExamPerformance,\n                          \"all\"\n                        ),\n                        \"all\"\n                      ),\n                      this.state.thisPeriod\n                    ).pass.length,\n                  },\n                  {\n                    title: \"Failed applicant(s)\",\n                    icon: FaBookOpen,\n                    iconColor: \"yellow\",\n                    count: loadExamAttendance(\n                      FC_reportCandidatePerformanceDataFilter(\n                        FC_reportCandidatePerformanceData(\n                          loadCoursesByInstitute(\n                            this.state.thisEducation,\n                            this.props.courses,\n                            this.props.schoolLevels.school_levels\n                          )!,\n                          this.props.adminExamReport.CandidatesExamPerformance,\n                          \"all\"\n                        ),\n                        \"all\"\n                      ),\n                      this.state.thisPeriod\n                    ).failed.length,\n                  },\n                  // {\n                  //   title: \"Doing exam\",\n                  //   icon: FaBookOpen,\n                  //   iconColor: \"gray\",\n                  //   count: loadExamAttendance(\n                  //     FC_reportCandidatePerformanceDataFilter(\n                  //       FC_reportCandidatePerformanceData(\n                  //         loadCoursesByInstitute(\n                  //           thisEducation,\n                  //           props.courses,\n                  //           props.schoolLevels.school_levels\n                  //         )!,\n                  //         props.adminExamReport.CandidatesExamPerformance,\n                  //         \"all\"\n                  //       ),\n                  //       \"all\"\n                  //     ),\n                  //     thisPeriod\n                  //   ).active.length,\n                  // },\n                ]}\n                labelsOnRow={5}\n              >\n                <div className=\"flex justify-center\">\n                  <PieChart\n                    options={{\n                      labels: [\"Pass\", \"Failed\"],\n                      // labels: [\"Pass\", \"Failed\", \"Doing Exam\"],\n                      legend: {\n                        show: false,\n                        position: \"bottom\",\n                        horizontalAlign: \"center\",\n                        fontSize: \"16px\",\n                        itemMargin: {\n                          horizontal: 3,\n                          vertical: 0,\n                        },\n                      },\n                      plotOptions: {\n                        pie: {\n                          donut: {\n                            labels: {\n                              show: true,\n                              name: {\n                                show: true,\n                                fontSize: \"16px\",\n                                //   fontFamily: \"Rubik\",\n                                color: \"#2564eb\",\n                                offsetY: -10,\n                              },\n                              value: {\n                                show: true,\n                                fontSize: \"20px\",\n                                fontFamily: \"Helvetica, Arial, sans-serif\",\n                                color: \"#2564eb\",\n                                offsetY: 10,\n                                formatter: function (val) {\n                                  return val;\n                                },\n                              },\n                              total: {\n                                show: true,\n                                label: \"Total\",\n                                color: \"#2564eb\",\n                                formatter: function (w) {\n                                  return w.globals.seriesTotals.reduce(\n                                    (a: number, b: number) => {\n                                      return a + b;\n                                    },\n                                    0\n                                  );\n                                },\n                              },\n                            },\n                          },\n                        },\n                      },\n                      colors: [\"#469769\", \"#d97724\"],\n                      // colors: [\"#469769\", \"#d97724\", \"#4b5563\"],\n                    }}\n                    series={[\n                      loadExamAttendance(\n                        FC_reportCandidatePerformanceDataFilter(\n                          FC_reportCandidatePerformanceData(\n                            loadCoursesByInstitute(\n                              this.state.thisEducation,\n                              this.props.courses,\n                              this.props.schoolLevels.school_levels\n                            )!,\n                            this.props.adminExamReport\n                              .CandidatesExamPerformance,\n                            \"all\"\n                          ),\n                          \"all\"\n                        ),\n                        this.state.thisPeriod\n                      ).pass.length,\n                      loadExamAttendance(\n                        FC_reportCandidatePerformanceDataFilter(\n                          FC_reportCandidatePerformanceData(\n                            loadCoursesByInstitute(\n                              this.state.thisEducation,\n                              this.props.courses,\n                              this.props.schoolLevels.school_levels\n                            )!,\n                            this.props.adminExamReport\n                              .CandidatesExamPerformance,\n                            \"all\"\n                          ),\n                          \"all\"\n                        ),\n                        this.state.thisPeriod\n                      ).failed.length,\n                      // loadExamAttendance(\n                      //   FC_reportCandidatePerformanceDataFilter(\n                      //     FC_reportCandidatePerformanceData(\n                      //       loadCoursesByInstitute(\n                      //         thisEducation,\n                      //         props.courses,\n                      //         props.schoolLevels.school_levels\n                      //       )!,\n                      //       props.adminExamReport.CandidatesExamPerformance,\n                      //       \"all\"\n                      //     ),\n                      //     \"all\"\n                      //   ),\n                      //   thisPeriod\n                      // ).active.length,\n                    ]}\n                    width={210}\n                  />\n                </div>\n              </ExamDashboardLabels>\n            </section>\n          )}\n        {/* EXAMS PERFORMANCE LABELS ======================================= */}\n\n        {/* ------------------------------------------------------------------------------- */}\n\n        {/* ===================================================================================== */}\n\n        {/* EXAMS PREPARATION PROGRESS CHART ======================================= */}\n        {this.props.examsList &&\n          loadCoursesByInstitute(\n            this.state.thisEducation,\n            this.props.courses,\n            this.props.schoolLevels.school_levels\n          ) && (\n            <ExamPreparationChart\n              examPreparationProgress={loadExamPreparationProgress(\n                FC_reportExamList(\n                  loadCoursesByInstitute(\n                    this.state.thisEducation,\n                    this.props.courses,\n                    this.props.schoolLevels.school_levels\n                  )!,\n                  this.props.examsList,\n                  this.state.thisPeriod\n                )\n              )}\n            />\n          )}\n        {/* EXAMS PREPARATION PROGRESS CHART ======================================= */}\n\n        {/* ===================================================================================== */}\n\n        {/* EXAMINATION PROGRESS CHART ======================================= */}\n        {loadExaminationProgress(\n          this.props.adminExamReport.DoneExam,\n          this.props.examsList,\n          this.state.thisEducation,\n          this.props.courses,\n          this.props.schoolLevels.school_levels,\n          this.state.thisPeriod\n        ) && (\n          <ExamProgressChart\n            progressData={\n              loadExaminationProgress(\n                this.props.adminExamReport.DoneExam,\n                this.props.examsList,\n                this.state.thisEducation,\n                this.props.courses,\n                this.props.schoolLevels.school_levels,\n                this.state.thisPeriod\n              )!\n            }\n          />\n        )}\n        {/* EXAMINATION PROGRESS CHART ======================================= */}\n\n        {/* ===================================================================================== */}\n\n        {/* EXAM PERFORMANCE ON COUNTRY CHART ======================================= */}\n        {this.props.adminExamReport.CandidatesExamPerformance &&\n          loadCoursesByInstitute(\n            this.state.thisEducation,\n            this.props.courses,\n            this.props.schoolLevels.school_levels\n          ) && (\n            <ExamPerformanceChart\n              examPerformance={loadExamAttendance(\n                FC_reportCandidatePerformanceDataFilter(\n                  FC_reportCandidatePerformanceData(\n                    loadCoursesByInstitute(\n                      this.state.thisEducation,\n                      this.props.courses,\n                      this.props.schoolLevels.school_levels\n                    )!,\n                    this.props.adminExamReport.CandidatesExamPerformance,\n                    \"all\"\n                  ),\n                  \"all\"\n                ),\n                this.state.thisPeriod\n              )}\n            />\n          )}\n        {/* END EXAM PERFORMANCE ON COUNTRY CHART ======================================= */}\n\n        {/* ------------------------------------------------------------------------------- */}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = ({\n  auth,\n  sessionPlan,\n  schoolLevels,\n  course,\n  prepareExam,\n  adminExamReport,\n}: StoreState): {\n  auth: Auth;\n  application_sessions: SessionPlanInterface[] | null;\n  schoolLevels: schoolLevelsStoreInterface;\n  courses: course[] | null;\n  examsList: ExamItemResponse[] | null;\n  adminExamReport: ExamReportReducerType;\n} => {\n  return {\n    auth,\n    application_sessions: sessionPlan.allSessionPlans,\n    schoolLevels,\n    courses: course.courses,\n    examsList: prepareExam.examsList,\n    adminExamReport,\n  };\n};\n\nexport const ExamDashboard = connect(mapStateToProps, {\n  loadCourses,\n  loadExamsList,\n  loadEducationCategories,\n  loadDoneExam,\n  loadSchoolLevels,\n  loadPerfomranceExam,\n  loadCandidatesExamPerformance,\n  GetAllSessionPlans,\n  PushPopupAlert,\n})(_ExamDashboard);\n","import { UserByTypeInterfaceAPI } from \"./user_by_type\";\n\nexport interface centerReportInterface {\n  _id: string;\n  occupied: number;\n  isUsed: boolean;\n  center_id: string;\n  room_type: string;\n  room_number: number;\n  capacity: number;\n  center_name: string;\n  district_id: string;\n  district_name: string;\n  course_in_room: courseInRoomInterface[];\n}\n\nexport interface centerReportInterface_NEW {\n  _id: string;\n  occupied: number;\n  isUsed: boolean;\n  center_id: string;\n  room_type: string;\n  room_number: number;\n  capacity: number;\n  center_name: string;\n  district_id: string;\n  district_name: string;\n  invigilator: string;\n  course_in_room: courseInRoomInterface[];\n}\n\nexport interface courseInRoomInterface {\n  course_id: string;\n  course_name: string;\n  course_code: string;\n  occupied: number;\n}\n\nexport interface CenterToPrintInterface {\n  no: number;\n  district_name: string;\n  center_name: string;\n  room_number: number;\n  room_type: string;\n  room_capacity: number | \"-\";\n  room_occupation: number;\n  invigilator: string;\n}\n\nexport enum centerReportContentKeyInterface {\n  district_name = \"district_name\",\n  center_name = \"center_name\",\n  room_number = \"room_number\",\n  room_type = \"room_type\",\n  room_capacity = \"room_capacity\",\n  room_occupation = \"room_occupation\",\n  invigilator = \"invigilator\",\n}\n\nexport interface centerReportContentInterface {\n  key: centerReportContentKeyInterface;\n  title: string;\n  status: boolean;\n}\n\nexport interface roomDistrictInterface {\n  district_id: string;\n  district_name: string;\n}\n\nexport const getDistrictInRoom = (\n  allData: centerReportInterface[]\n): roomDistrictInterface[] => {\n  let result: roomDistrictInterface[] = [],\n    ids: string[] = [];\n  for (const key in allData) {\n    if (Object.prototype.hasOwnProperty.call(allData, key)) {\n      if (!ids.includes(allData[key].district_id)) {\n        ids.push(allData[key].district_id);\n        result.push({\n          district_id: allData[key].district_id,\n          district_name: allData[key].district_name,\n        });\n      }\n    }\n  }\n\n  return result;\n};\n\nexport const getRoomOccupation = (thisRoom: centerReportInterface): number => {\n  let result: number = 0;\n  for (const key in thisRoom.course_in_room) {\n    if (Object.prototype.hasOwnProperty.call(thisRoom.course_in_room, key)) {\n      const element = thisRoom.course_in_room[key];\n      if (result < element.occupied) {\n        result = element.occupied;\n      }\n    }\n  }\n  return result;\n};\n\nexport const roomWithOccupation = (\n  allRoom: centerReportInterface[],\n  invigilators: UserByTypeInterfaceAPI[]\n): centerReportInterface_NEW[] => {\n  let result: centerReportInterface_NEW[] = [];\n  for (const key in allRoom) {\n    if (Object.prototype.hasOwnProperty.call(allRoom, key)) {\n      let data: centerReportInterface = allRoom[key];\n      data.occupied = getRoomOccupation(allRoom[key]);\n      const invigilator = invigilators.find(\n        (item) => item.roles_to_users.room_id === allRoom[key]._id\n      );\n      result.push({\n        _id: data._id,\n        occupied: data.occupied,\n        isUsed: data.isUsed,\n        center_id: data.center_id,\n        room_type: data.room_type,\n        room_number: data.room_number,\n        capacity: data.capacity,\n        center_name: data.center_name,\n        district_id: data.district_id,\n        district_name: data.district_name,\n        invigilator: invigilator\n          ? invigilator.user_info.fname + \" \" + invigilator.user_info.lname\n          : \"\",\n        course_in_room: data.course_in_room,\n      });\n    }\n  }\n  return result;\n};\n\nexport const center_report_data: centerReportInterface[] = [\n  {\n    _id: \"61af5367558d345d93dea4397a3\",\n    occupied: 0,\n    isUsed: true,\n    center_id: \"61af534c558dd93dea43979f\",\n    room_type: \"Default\",\n    room_number: 0,\n    capacity: 1000000,\n    center_name: \"Gasabo district center\",\n    district_id: \"61af5338558dd93dea43979b\",\n    district_name: \"Kicukiro\",\n    course_in_room: [],\n  },\n  {\n    _id: \"61af5367558dd93defea4397a6\",\n    occupied: 0,\n    isUsed: true,\n    center_id: \"61af534c558dd93dea43979f\",\n    room_type: \" physical room\",\n    room_number: 112,\n    capacity: 100,\n    center_name: \"Center A\",\n    district_id: \"61af5338558dd93dea43979b\",\n    district_name: \"Kicukiro\",\n    course_in_room: [\n      {\n        course_id: \"61546609eeda150485905a32\",\n        course_name: \"Civisme\",\n        course_code: \"C001\",\n        occupied: 12,\n      },\n      {\n        course_id: \"61546684eeda150485905a3d\",\n        course_name: \"IPTC 1\",\n        course_code: \"ipop\",\n        occupied: 21,\n      },\n      {\n        course_id: \"615465faeeda150485905a2e\",\n        course_name: \"ICT2 for Me\",\n        course_code: \"ICT\",\n        occupied: 100,\n      },\n      {\n        course_id: \"61546401eeda1504859059cc\",\n        course_name: \"ICT in Life\",\n        course_code: \"ICT001\",\n        occupied: 1,\n      },\n    ],\n  },\n  {\n    _id: \"61af536755835dd93defea4397a6\",\n    occupied: 0,\n    isUsed: true,\n    center_id: \"61af534c558dd93dea43979f\",\n    room_type: \" physical room\",\n    room_number: 112,\n    capacity: 120,\n    center_name: \"Gasabo district center\",\n    district_id: \"61af5338558dd93dea43979b\",\n    district_name: \"Kicukiro\",\n    course_in_room: [\n      {\n        course_id: \"61546609eeda150485905a32\",\n        course_name: \"Civisme\",\n        course_code: \"C001\",\n        occupied: 100,\n      },\n      {\n        course_id: \"61546684eeda150485905a3d\",\n        course_name: \"IPTC 1\",\n        course_code: \"ipop\",\n        occupied: 1,\n      },\n      {\n        course_id: \"615465faeeda150485905a2e\",\n        course_name: \"ICT2 for Me\",\n        course_code: \"ICT\",\n        occupied: 10,\n      },\n      {\n        course_id: \"61546401eeda1504859059cc\",\n        course_name: \"ICT in Life\",\n        course_code: \"ICT001\",\n        occupied: 1,\n      },\n    ],\n  },\n];\n","import React, { useState } from \"react\";\nimport { MdSearch } from \"react-icons/md\";\nimport { roomDistrictInterface } from \"../../../interfaces/center_report\";\nimport { capitalizeFirstLetter } from \"../../../shared/dataTest\";\nimport search from \"../../../utils/search\";\n\ntype RoleListProps = {\n  setChooseDistrict: (value: boolean) => void;\n  districtList: roomDistrictInterface[];\n  setSelectedDistrict: (data: roomDistrictInterface | \"all\") => void;\n  selectedDistrict: roomDistrictInterface | \"all\";\n  loadindRequest: boolean;\n  bgWhite?: boolean;\n  isModal?: boolean;\n};\n\nconst DistrictList: React.FC<RoleListProps> = (props) => {\n  const [searchInput, setSearchInput] = useState<string>(\"\");\n  return (\n    <section\n      className={`${\n        props.isModal ? \"\" : \"border-2 rounded border-gray-400 shadow-md\"\n      }`}\n    >\n      {/* SEARCH PART */}\n      <div className=\"flex items-center w-full my-1\">\n        <MdSearch className=\"w-6 h-6 absolute ml-2\" />\n        <input\n          type=\"text\"\n          placeholder=\"Search\"\n          className={`focus:border-2 h-7 ml-1 pl-9 ${\n            props.isModal ? \"mr-1\" : \"mr-2\"\n          } bg-gray-100 focus:border-gray-700 w-full rounded`}\n          onChange={(e) => setSearchInput(e.target.value)}\n          value={searchInput}\n          disabled={props.districtList.length > 0 ? false : true}\n        />\n        {!props.isModal && (\n          <button\n            className=\"bg-red-200 text-red-700 py-1 px-2 mr-1 rounded text-sm focus:outline-none\"\n            type=\"button\"\n            onClick={() => {\n              props.setChooseDistrict(false);\n            }}\n          >\n            Close\n          </button>\n        )}\n      </div>\n      {/* END SEARCH PART ///////////////// */}\n\n      <div\n        className={`w-full h-52 mt-2 ${\n          props.isModal ? \"px-2\" : \"\"\n        } overflow-y-auto divide-y divide-gray-300 ${\n          props.bgWhite && \"bg-white\"\n        }`}\n      >\n        <section>\n          <div\n            className={`group flex items-center justify-between my-1 ${\n              props.selectedDistrict === \"all\"\n                ? \"cursor-default bg-blue-50 hover:bg-blue-100\"\n                : \"hover:bg-blue-100\"\n            }`}\n          >\n            <div\n              className={`p-1 w-full mr-2 ${\n                props.selectedDistrict === \"all\"\n                  ? \"cursor-default\"\n                  : \"cursor-pointer\"\n              }`}\n              onClick={() => {\n                props.setChooseDistrict(false);\n                !props.loadindRequest &&\n                  props.selectedDistrict !== \"all\" &&\n                  props.setSelectedDistrict(\"all\");\n              }}\n            >\n              <p className=\"text-sm font-medium text-black\">All district</p>\n            </div>\n            <button\n              type=\"button\"\n              className=\"bg-blue-200 group-hover:bg-blue-300 text-blue-700 group-hover:text-blue-800 p-1 mr-1 rounded text-sm\"\n            >\n              Choose\n            </button>\n          </div>\n        </section>\n        {search(props.districtList, searchInput).length > 0 ? (\n          search(props.districtList, searchInput).map((district, index) => (\n            <section key={index + district.district_id}>\n              <div className=\"group flex items-center justify-between my-1 hover:bg-gray-100\">\n                <div\n                  className=\"p-1 w-full mr-2 cursor-pointer\"\n                  onClick={() => {\n                    props.setChooseDistrict(false);\n                    !props.loadindRequest &&\n                      props.setSelectedDistrict(district);\n                  }}\n                >\n                  <p className=\"text-sm font-medium text-black\">\n                    {capitalizeFirstLetter(district.district_name)}\n                  </p>\n                </div>\n                <button\n                  type=\"button\"\n                  className=\"bg-blue-200 group-hover:bg-blue-300 text-blue-700 group-hover:text-blue-800 p-1 mr-1 rounded text-sm\"\n                >\n                  Choose\n                </button>\n              </div>\n            </section>\n          ))\n        ) : (\n          <div className=\"text-center p-3\">\n            <p className=\"text-base font-medium text-black\">\n              No district available\n            </p>\n          </div>\n        )}\n      </div>\n    </section>\n  );\n};\n\nexport default React.memo(DistrictList);\n"],"sourceRoot":""}
{"version":3,"sources":["containers/ApplicationsDashboard/ApplicationHistory/ApplicationHistory.tsx","containers/ApplicationsDashboard/ExamDetails/ExamDetails.tsx","containers/ApplicationsDashboard/ExamStatus/PreparedExams.tsx","containers/ApplicationsDashboard/ExamStatus/ActiveExams.tsx","containers/ApplicationsDashboard/ExamStatus/ExamsDone.tsx","containers/ApplicationsDashboard/Exams.tsx","components/CandidatePlacementCheck/CandidatePlacementCheck.tsx","containers/ApplicationsDashboard/ApplicationsDashboard.tsx","shared/dataTest.tsx","utils/question_bank.ts","components/Table/Table.tsx","actions/session.ts","actions/document.ts","components/Navigation/SideNavigation.tsx","containers/Claimings/Candidate/FormPlacementList.tsx","containers/Claimings/Candidate/ClaimForm.tsx","containers/Positions/ViewRequirements.tsx","components/AnswersDetails/CandidateAnswersDetails.tsx","containers/Claimings/Candidate/ApplicationFormView.tsx","components/AnswersDetails/AnswersDetails.tsx","containers/Claimings/Candidate/ExaminationFormView.tsx","containers/Claimings/Candidate/FormExamList.tsx","components/ClaimForm/ClaimFormComponent.tsx","containers/Claimings/Candidate/ChooseReason.tsx","containers/Claimings/Candidate/DocFormView.tsx","containers/Claimings/Candidate/FormApplicationList.tsx","containers/Claimings/Candidate/FormDocumentList.tsx","containers/CandidateExams/CandidateExams.tsx","containers/SessionSettings/ApplicationSession/SessionDetails.tsx"],"names":["ApplicationHistory","props","className","undefined","applicationHistory","length","map","item","i","DATE","date","comment","ApplicationStatesDescription","find","itm","key","application_status","caption","ExamDetails","setLoading","status","setState","loading","componentDidMount","locationsData","Locations_list","loadAllLocationsData","loadApplicationPeriods","state","this","candidateExam","selected_exam_id","selected_exam_details","doing_exam","to","examDetails","locationDetails","Loading","type","LoadingType","dark","onClick","setSelectedCandidateExam","exam_date","start_time","duration","discription","dangerouslySetInnerHTML","__html","termes","center_id","province_name","district_name","center_name","room_number","proctoring_type","Component","PreparedExams","NotPreparedExamsFilter","selectedPosition","courses","filter","user_exams_done","ex","course","course_id","findExam","PreparedExamsFilter","AllPendingExams","totalPending","selectedExams","loadingExams","course_name","validateExamDate","end_time","ExamTimeStatus","Online","Expired","loadingExamsDone","Waiting","changeLocation","user_status","UserExamStatus","Editing","selectedApplicationDetails","ApplicationStates","Shortlisted","setSelectedCourse","appointmentDetailsModal","periods","selected_period","is_active","id","positions","selected_position","position_id","setSelectedPosition","setDoingExam","InitializeExamDetails","application_session","session_plan_id","district_id","room_id","setLoadingExams","Initiated","total_marks","toFixed","ActiveExams","ActiveExamsFilter","exam_start_time","exam_end_time","check","Paused","Done","Removed","x","selectedCourse","centersModal","setMaxExamModal","ExamsDone","viewMarksDetailsFn","Exam","examTest","user_exams_temp","period","courseSelected","viewMarksDetails","rules","exam_id","exam_paper","ExamsDoneFilter","_PostExams","renderExam","user_id","exam","examStatus","loadExam","redirect","setClaim","claim","closeModal","updateLocationFunction","exams","selected_application","updateLocation","setLoadingExamsDone","showTotalMarks","position","test","numberOfIncomplete","count","findLocation","course_code","location","courseId","current_temp","testDone","findCourse","pendingCourses","InitializationFn","loadExamsDone","auth","user","loadCourses","doExam","exam_answers","claiming","myClaims","getMyClaims","msg","data","alert","displayResults","selectedLocation","applicationHistoryState","selectedExamDetails","CandidateAnswersDetails","showAnswers","applicationPeriods","setSelectedLocationData","ChooseExamCenter","positionCourses","addLocation","parseFloat","findTotalMarks","title","Rejected","CheckIfExamDone","isClaimAllowed","deleteApplication","ClaimFormComponent","setFormState","claim_type","PlansTypeKeys","APPLICATION","file_id","PostExams","connect","prepareExam","loadExamsList","setSelectedPeriod","CandidatePlacementCheck","_ApplicationsDashboard","filteredApplications","applications","Status","searchPeriod","appl","closeApplicationDetails","displayDetailsModal","setDisplayDetailsModal","applicationStatuses","application","output","push","maxExamModal","LoadApplications","a","loadingErr","number_of_incomplete","response","candidateApplications","candidate_applications","axios","get","API","res","AddUserApplication","console","log","Incomplete","application_id","incrementIncomplete","LoadCandidateApplications","applicationError","post","noRoomsApplication","PushPopupAlert","description","theme","PopupAlertTheme","success","errors","field","newArr","removeLocation","message","danger","changeLoadingState","window","confirm","delete","RemoveUserApplication","warning","setShowFilterStatus","showPeriodFilter","loadAllPositions","apply","currentStep","ApplicationStepsTypes","Step3","initiateApplication","Step1","doTestStatus","applicationDetails","selectedApplicationStatus","viewSchools","FC_Access","UserAccessList","MY_APPLICATION","view","position_title","session_plan_name","Pass","checkApplication","SelectUserApplication","Exams","changeLocationError","application_history","SideNavigation","positions_list","active","LoadingV2","NoResult","NoResultThemes","Dark","value","component","createdAt","Modal","backDrop","Themes","default","close","backDropClose","widthSizeClass","ModalSize","extraLarge","displayClose","padding","body","ApplicationPeriods","ApplicationsDashboard","system","isEmptyOrSpaces","str","match","getRoleById","roles","roleId","role","system_user_role_id","getInstituteById","institutes","instituteId","education_institute_id","getPositionById","toTwoDigit","dec","Math","floor","slice","toString","substr","toAnyDigit","zeroes","Array","join","capitalizeFirstLetter","charAt","toUpperCase","today","moment","tz","TimeZone","getQuestionType","question_types","type_id","check_type","questionTypeElements","element","results","sum","validateCalculatedFormula","formula","characters","el","nextCharacter","convertFromStringToDate","responseDate","dateComponents","split","datePieces","timePieces","Date","parseInt","toDay","examDate","startTime","getDate","getMonth","getFullYear","endTime","getTime","proctoringDefaultRules","rule","Table","table","tr","tableId","result","charactersLength","random","FC_makeID","useState","totalItems","setTotalItems","totalPages","setTotalPages","currentPage","setCurrentPage","pages","setPages","pageSize","setPageSize","startIndex","setStartIndex","endIndex","setEndIndex","useEffect","pagination","tablePagination","document","getElementById","getElementsByTagName","ceil","min","_pages","from","keys","style","display","tableSize","search","searchBG","placeholder","onChange","e","filterType","td","rows","cols","toLowerCase","columns","textContent","innerText","indexOf","filterTable","target","disabled","Number","tableClass","rounded","hideColumns","thColor","column","index","alignText","isSortAllowed","switching","y","shouldSwitch","colIndex","dir","switchcount","innerHTML","parentNode","insertBefore","sortThisColumn","columnTitle","aria-label","page","pageIndex","GetPlansTypes","callback","dispatch","setAxiosToken","CLAIMING","GET_PLANS_TYPES","plan_types","ActionTypes","payload","error","errorToText","setSelectedPlanType","thisType","SELECT_PLAN_TYPE","getActiveSessionPlan","GET_ACTIVE_SESSION_PLANS","session_plan","GetAllSessionPlans","GET_ALL_SESSION_PLANS","session_data","createSessionPlan","CREATE_SESSION_PLAN","updateSessionPlan","UPDATE_SESSION_PLAN","sessionActivation","SESSION_ACTIVATION","deleteSessionPlan","DELETE_SESSION_PLAN","createAcademicSession","CREATE_ACADEMIC_SESSION","GetAllAcademicSession","PLACEMENT","GET_ALL_ACADEMIC_SESSION","updateAcademicSession","UPDATE_ACADEMIC_SESSION","academicSessionActivation","ACADEMIC_SESSION_ACTIVATION","deleteAcademicSession","DELETE_ACADEMIC_SESSION","getActiveAcademicSession","GET_ACTIVE_ACADEMIC_SESSION","getDocumentCategory","AUTH","docCategory","GET_DOCUMENT_CATEGORY","createDocumentCategory","CREATE_DOCUMENT_CATEGORY","updateDocumentCategory","UPDATE_DOCUMENT_CATEGORY","deleteDocumentCategory","DELETE_DOCUMENT_CATEGORY","getDocumentSubCategory","docSubCategory","GET_DOCUMENT_SUB_CATEGORY","doc_SUB_category_error","createDocumentSubCategory","CREATE_DOCUMENT_SUB_CATEGORY","updateDocumentSubCategory","UPDATE_DOCUMENT_SUB_CATEGORY","deleteDocumentSubCategory","DELETE_DOCUMENT_SUB_CATEGORY","getDocumentFields","docFields","GET_DOCUMENT_FIELDS","createDocumentFields","CREATE_DOCUMENT_FIELDS","updateDocumentFields","reducer","UPDATE_DOCUMENT_FIELDS","deleteDocumentFields","DELETE_DOCUMENT_FIELDS","distinctCandidates","candidatesData","user_ids","candidate","forEach","includes","getCandidatesInInstitute","educatin_type_id","session_id","GET_CANDIDATE_IN_INSTITUTE","verifyDocument","VERIFY_DOCUMENT","_SideNavigation","PageHasSubNav","componentWillUnmount","isAuthenticated","navActive","navigation","children","React","NavToogle","MainItem","icon","MdBrightness1","IconDefined","memo","searchInput","setSearchInput","myPlacement","activeSession","placed","_id","setChooseClaimFile","setViewThisFile","setClaimFileId","school","school_name","ClaimGetDocTitle","documentCategories","doc","DocCategory","DocSubCategory","DocField","DocTitle","sub_category_id","documentSubCategory","c","user_detail_subcategory_id","category_id","documentCategory","user_detail_category_id","category_subcategory_data","category_subcategory_Data_id","documentFields","category","sub_category","main","allClaim","period_id","claimOnId","claiming_on_id","ClaimForm","setLoadingForm","loadingForm","setFormError","formError","setAlertError","alertError","claimFileId","viewThisFile","chooseClaimFile","setChooseClaimReason","chooseClaimReason","setClaimReason","claimReason","setClaimComment","claimComment","isClaimTypeOpen","thisSession","plans","type_key","isPlanActive","DOCUMENT_VALIDATION","PLACEMENT_TRANSFER","displayClaimType","claimType","EXAMINATION","MARKS_PUBLICATION","loadExamAnswers","activeSessionPlan","getMyAnswers","thisClaimType","thisClaimTypeId","formType","documentReducer","claimReasons","getClaimReasons","getDocumentById","documents","doc_id","getApplicationById","getExamById","answer_sheet_id","getValidation","thisId","old_reason","old_status","old_evaluated_by","candidateDocuments","validated_by","validation_status","override_by","cleanToClose","loadUserById","getClaimTitle","myAnswer","getCourseIdBySheetId","getCourseById","getClaimInstitute","handleSubmit","preventDefault","toLocaleLowerCase","old_evaluator_email","old_evaluator_name","evaluator_email","evaluator_name","institute_id","email","user_info","fname","lname","default_claim_resaons","reason","createClaim","selectClaimType","thisClaim","getMyRejectedApplications","getMyRejectedDocuments","getMyPlacement","generateChooseFileTitle","formState","medium","footer","onSubmit","Object","values","replace","FormDocumentList","FormApplicationList","FormExamList","candidateAnswers","ChooseReason","allClaimReasons","resize","DocFormView","thisDoc","ApplicationFormView","thisApplication","ExaminationFormView","thisAnswerSheet","GetClaimingTypes","ViewRequirements","requirements","colSpan","subcategory_title","field_id","field_title","subcategory_required","required","tomorrow","setDate","compareWithToday","FC_ApplicationPositionDistinctCategory","thisPosition","PositionsTemp","DistinctCategoriesTemp","DistinctCategoriesIds","DistinctSubCategoriesTemp","DistinctSubCategoriesIds","req","thisRequirements","thisCategory","thisSubCategory","subcategory","thisField","position_requirement","category_title","subcategory_id","school_level_id","school_level_name","education_category_title","_AnswersDetails","setLoadingStatus","loadingStatus","questionTypes","loadQuestionTypes","allAnswers","requestUserAnswers","userAnswersTotalMarks","user_answers","total","user_marks","user_exam_details","questions","question_id","question","findQuestionType","questionTypeElementsType","Embedded","EmbeddedQuestion","language","answers","Hybrid","selectedLanguage","answersList","setSelectedExamQuestion","submitQuestionAnswer","submitExam","selectedExam","setSubmitModal","wholeQuestion","is_deleted","chapters","customNumber","marks","showCorrectAnswer","exam_total_marks","AnswersDetails","FC_GetProfileDetails","claimShowAnswer","answer","right_click_enabled","copy_enabled","paste_enabled","stop_candidate_when_comeback","allow_to_leave_browser","getFailedExam","allData","allCourses","sheet_id","isDocumentIdValid","info","isApplicationIdValid","app_id","app","isExamIdValid","_isDocumentIdValid","_isApplicationIdValid","_isExamIdValid","application_period","updatedAt","getClaimById","fileId","sessionId","claims","evaluation_comment","decision_taken_status","src","AUTH_FILES","files","alt","getRejectedApplicants","applicationData","objList","text","product","flag","prop","DocumentTitleData","documentData","documentTemp","company","end_year","names","phone_number","school_id","start_year","year","doc_title","getRejectedDocuments","rejected","tooday","myDate","todayConverted","ChangeLocationComponent","setDisplay","_CandidateExams","setloadingExamsDone","loadCandidateExams","QBank","candidateExams","loadUserProfileDetails","loadUserApplications","successMessage","selPeriod","sex","removeDuplicatesExams","temp","removeDuplicatesNotPreparedExams","setTimeOut","temps","activeExams","selectApplication","preparedExam","school_levels","found","duration_min","getMinutesFromTwoDates","timeout","returnString","labels","days","notPreparedExam","CandidateExams","isActivationAllowed","thisPlans","end_date","getPlanTypeByKey","allPlanTypes","viewThisSession","thisPlan","planEndDate","planStartDate","start_date","type_status","SessionPlanTypeStatus","CLOSED","SessionDetails","handlePlanActivation","session","newState","newData","prototype","hasOwnProperty","call","OPEN","type_title","allowed_claim_level","history","loadingRequest","put","setViewThisSession"],"mappings":"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","file":"static/js/29.596b006d.chunk.js","sourcesContent":["import React from 'react'\nimport { applicationHistory, ApplicationStatesDescription } from '../../../interfaces/application'\nimport { DATE } from '../../../utils/functions'\n\ninterface ApplicationHistoryProps {\n  applicationHistory: applicationHistory[];\n}\n\nconst ApplicationHistory = (props: ApplicationHistoryProps) => {\n  return (\n    <div className=\"flex flex-col justify-between items-start gap-1 bg-white px-3 py-2\">\n      {/* <span className=\"text-sm text-blue-800 font-bold\">Application status history</span> */}\n      <hr className=\"bg-blue-600\" />\n      <div className=\"grid md:grid-cols-2 lg:grid-cols-3 gap-3\">\n      {props.applicationHistory !== undefined &&\n        props.applicationHistory.length > 0 && \n        props.applicationHistory.map((item, i) => (\n          <div key={i + 1} className=\"col-span-1 flex flex-col border border-blue-500 rounded px-3 py-2\">\n            <div className=\"flex flex-row gap-2 justify-start items-center text-xs\">\n              <span className=\"text-gray-500\">Date:</span>\n              <span className=\"font-bold\">{DATE(item.date, \"DD/MM/YYYY\")}</span>\n            </div>\n            <div className=\"flex flex-row gap-2 justify-start items-center text-xs\">\n              <span className=\"text-gray-500\">Action:</span>\n              <span className=\"font-bold\">{item.comment}</span>\n            </div>\n            <div className=\"flex flex-row gap-2 justify-start items-center text-xs\">\n              <span className=\"text-gray-500\">Application status:</span>\n              <span className=\"font-bold\">{ApplicationStatesDescription.find(itm => itm.key === item.application_status)?.caption}</span>\n            </div>\n          </div>\n        ))}\n      </div> \n    </div>\n  )\n}\n\nexport default ApplicationHistory\n","import React, { Component } from \"react\";\nimport { MdInfo, MdLocationOn } from \"react-icons/md\";\nimport { Redirect } from \"react-router-dom\";\nimport { applicationPeriodsStoreInterface } from \"../../../actions/application_periods\";\nimport {\n  candidateExamStoreInterface,\n  InitialExamDetails,\n} from \"../../../actions/candidate_exam\";\nimport { LocationsDataStoreInterface } from \"../../../actions/locations_data\";\nimport Loading from \"../../../components/Loading/Loading\";\nimport { LoadingType } from \"../../../components/Loading/LoadingV2\";\nimport { applicationExamAPI } from \"../../../interfaces/application\";\nimport { DATE } from \"../../../utils/functions\";\nimport { LocationTableInterface } from \"../../Application/ExamCenter/ChooseExamCenter\";\n\ninterface ExamDetailsProps {\n  locationDetails: applicationExamAPI | undefined;\n  examDetails: InitialExamDetails | null;\n  locationsData: LocationsDataStoreInterface;\n  loadAllLocationsData: (callback: (loading: boolean) => void) => void;\n  setSelectedLocationData: (locationData: LocationTableInterface) => void;\n  periods: applicationPeriodsStoreInterface;\n  loadApplicationPeriods: (callback: (loading: boolean) => void) => void;\n  candidateExam: candidateExamStoreInterface;\n  setSelectedCandidateExam: (selected_exam: InitialExamDetails | null) => void;\n  // selectedCourse: course;\n}\ninterface ExamDetailsState {\n  loading: boolean;\n}\n\nclass ExamDetails extends Component<ExamDetailsProps, ExamDetailsState> {\n  constructor(props: ExamDetailsProps) {\n    super(props);\n\n    this.state = {\n      loading: false,\n    };\n  }\n  setLoading = (status: boolean) => {\n    this.setState({ loading: status });\n  };\n  componentDidMount = () => {\n    if (\n      this.props.locationsData.Locations_list === null ||\n      this.props.locationsData.Locations_list.length === 0\n    ) {\n      this.props.loadAllLocationsData(this.setLoading);\n    }\n    // if (this.props.periods.applicationPeriods === null || this.props.periods.applicationPeriods.length === 0 || this.props.periods.selected_period === null) {\n    this.props.loadApplicationPeriods(this.setLoading);\n    // }\n  };\n  render() {\n    if (\n      this.props.candidateExam.selected_exam_id !== null &&\n      this.props.candidateExam.selected_exam_details !== null &&\n      this.props.candidateExam.doing_exam === true\n    ) {\n      return <Redirect to=\"/do-exam\" />;\n    }\n    if (this.props.examDetails === null) {\n      return (\n        <div className=\"bg-yellow-50 text-yellow-800 font-bold rounded px-2 py-4 text-center text-3xl border border-yellow-600 mx-4 my-4\">\n          No Exam details found!\n        </div>\n      );\n    }\n    if (this.props.locationDetails === undefined) {\n      return (\n        <div className=\"bg-yellow-50 text-yellow-800 font-bold rounded px-2 py-4 text-center text-3xl border border-yellow-600 mx-4 my-4\">\n          No exam location details found!\n        </div>\n      );\n    }\n    return (\n      <div>\n        {this.state.loading === true ? (\n          <div className=\"px-4 py-4 rounded bg-gray-100\">\n            <Loading type={LoadingType.dark} />\n          </div>\n        ) : (\n          <div>\n            <div className=\"bg-gray-100 rounded mx-2 mb-2 px-2 py-2\">\n              <div className=\"font-bold text-xl text-blue-600 mb-4 flex flex-row items-center justify-between gap-2 bg-white py-2 px-2 rounded\">\n                <div className=\"flex flex-row items-center gap-2\">\n                  <MdInfo className=\"text-4xl text-blue-600\" />\n                  Exam information\n                </div>\n                <button\n                  onClick={() => {\n                    // this.props.setSelectedCourse(this.props.selectedCourse);\n                    this.props.examDetails &&\n                      this.props.setSelectedCandidateExam(\n                        this.props.examDetails\n                      );\n                  }}\n                  type=\"button\"\n                  className={`btn ${\n                    this.props.candidateExam.selected_exam_id !== null\n                      ? \"bg-yellow-700 hover:bg-yellow-900\"\n                      : \"bg-blue-600 hover:bg-blue-700\"\n                  } text-white cursor-pointer text-base`}\n                >\n                  {this.props.candidateExam.selected_exam_id !== null\n                    ? \"Return to Exam\"\n                    : \"Start Exam\"}\n                </button>\n              </div>\n              <div className=\"grid md:grid-cols-3 gap-4\">\n                <div className=\"col-span-1\">\n                  <div className=\"flex flex-col pl-2 border-gray-300 pb-2\">\n                    <span className=\"text-gray-500 text-sm italic\">\n                      Exam date:\n                    </span>\n                    <span className=\"text-gray-700 font-bold\">\n                      {DATE(this.props.examDetails.exam_date, \"DD/MM/YYYY\")}\n                    </span>\n                  </div>\n                </div>\n                <div className=\"col-span-1\">\n                  <div className=\"flex flex-col pl-2 border-gray-300 pb-2\">\n                    <span className=\"text-gray-500 text-sm italic\">\n                      Exam start time:\n                    </span>\n                    <span className=\"text-gray-700 font-bold\">\n                      {this.props.examDetails.start_time}\n                    </span>\n                  </div>\n                </div>\n                <div className=\"col-span-1\">\n                  <div className=\"flex flex-col pl-2 border-gray-300 pb-2\">\n                    <span className=\"text-gray-500 text-sm italic\">\n                      Exam duration:\n                    </span>\n                    <span className=\"text-gray-700 font-bold\">\n                      {this.props.examDetails.duration / 60} hours{\" \"}\n                      {this.props.examDetails.duration % 60 > 0 && (\n                        <div>{this.props.examDetails.duration % 60} mins</div>\n                      )}\n                    </span>\n                  </div>\n                </div>\n                <div className=\"col-span-3\">\n                  <div className=\"flex flex-col px-2 pb-2\">\n                    <span className=\"text-gray-500 text-sm italic\">\n                      Exam description:\n                    </span>\n                    <span className=\"text-gray-700 font-bold px-2 py-2 rounded bg-white mt-2\">\n                      {this.props.examDetails.discription}\n                    </span>\n                  </div>\n                </div>\n                <div className=\"col-span-3\">\n                  <div className=\"flex flex-col px-2 pb-2\">\n                    <span className=\"text-gray-500 text-sm italic\">\n                      Terms and conditions / Rules:\n                    </span>\n                    <div\n                      className=\"px-2 py-2 rounded bg-white mt-2\"\n                      dangerouslySetInnerHTML={{\n                        __html: this.props.examDetails.termes,\n                      }}\n                    ></div>\n                  </div>\n                </div>\n              </div>\n            </div>\n            <div className=\"bg-gray-100 rounded mx-2 mb-2 px-2 py-2\">\n              <div className=\"font-bold text-xl text-blue-600 mb-4 flex flex-row items-center justify-between gap-2 bg-white py-2 px-2 rounded\">\n                <div className=\"flex flex-row items-center gap-2\">\n                  <MdLocationOn className=\"text-4xl text-blue-600\" />\n                  Examination location\n                </div>\n              </div>\n              <div className=\"grid md:grid-cols-3 gap-4 px-2\">\n                <div className=\"col-span-1\">\n                  <div className=\"flex flex-col border-b border-gray-300 pb-2\">\n                    <span className=\"text-gray-500 text-sm italic\">\n                      Province:\n                    </span>\n                    <span className=\"text-gray-700 font-bold\">\n                      {this.props.locationsData.Locations_list &&\n                        this.props.locationsData.Locations_list.find(\n                          (itm) =>\n                            this.props.locationDetails !== undefined &&\n                            itm.center_id ===\n                              this.props.locationDetails.center_id\n                        )?.province_name}\n                    </span>\n                  </div>\n                </div>\n                <div className=\"col-span-1\">\n                  <div className=\"flex flex-col border-b border-gray-300 pb-2\">\n                    <span className=\"text-gray-500 text-sm italic\">\n                      District:\n                    </span>\n                    <span className=\"text-gray-700 font-bold\">\n                      {this.props.locationsData.Locations_list &&\n                        this.props.locationsData.Locations_list.find(\n                          (itm) =>\n                            this.props.locationDetails !== undefined &&\n                            itm.center_id ===\n                              this.props.locationDetails.center_id\n                        )?.district_name}\n                    </span>\n                  </div>\n                </div>\n                <div className=\"col-span-1\">\n                  <div className=\"flex flex-col border-b border-gray-300 pb-2\">\n                    <span className=\"text-gray-500 text-sm italic\">\n                      Center:{\" \"}\n                    </span>\n                    <span className=\"text-gray-700 font-bold\">\n                      {this.props.locationDetails.center_name}\n                    </span>\n                  </div>\n                </div>\n                <div className=\"col-span-1\">\n                  <div className=\"flex flex-col border-b border-gray-300 pb-2\">\n                    <span className=\"text-gray-500 text-sm italic\">\n                      Room number:{\" \"}\n                    </span>\n                    <span className=\"text-gray-700 font-bold\">\n                      {this.props.locationDetails.room_number}\n                    </span>\n                  </div>\n                </div>\n                <div className=\"col-span-1\">\n                  <div className=\"flex flex-col border-b border-gray-300 pb-2\">\n                    <span className=\"text-gray-500 text-sm italic\">\n                      Proctoring type\n                    </span>\n                    <span className=\"text-gray-700 font-bold\">\n                      {this.props.locationDetails.proctoring_type}\n                    </span>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default ExamDetails;\n","import React, { Component } from \"react\";\nimport { CgCheckO } from \"react-icons/cg\";\nimport { IoMdInformationCircleOutline } from \"react-icons/io\";\nimport { RiCheckboxBlankCircleFill, RiErrorWarningLine } from \"react-icons/ri\";\nimport { applicationPeriodsStoreInterface } from \"../../../actions/application_periods\";\nimport {\n  candidateExamStoreInterface,\n  InitialExamDetails,\n} from \"../../../actions/candidate_exam\";\nimport { courseStoreInterface } from \"../../../actions/course\";\nimport { positionsStoreInterface } from \"../../../actions/positions\";\nimport Loading from \"../../../components/Loading/Loading\";\nimport {\n  applicationExamAPI,\n  ApplicationStates,\n  GetApplicationsAPI,\n} from \"../../../interfaces/application\";\nimport { course } from \"../../../interfaces/course\";\nimport { UserExamStatus } from \"../../../interfaces/exam\";\nimport { PositionAPI, PositionAPICourse } from \"../../../interfaces/position\";\nimport { DATE } from \"../../../utils/functions\";\nimport { ExamTimeStatus, validateExamDate } from \"../../../utils/question_bank\";\n\ninterface PreparedExamsProps {\n  selectedPosition: PositionAPI;\n  selectedExams: applicationExamAPI[] | null;\n  findExam: (courseId: string) => InitialExamDetails | null;\n  loadingExams: boolean;\n  loadingExamsDone: boolean;\n  setMaxExamModal: (status: boolean) => void;\n  course: courseStoreInterface;\n  setSelectedCourse: (course: course | null) => void;\n  candidateExam: candidateExamStoreInterface;\n  positions: positionsStoreInterface;\n  periods: applicationPeriodsStoreInterface;\n  setSelectedPosition: (position: PositionAPI) => void;\n  setSelectedCandidateExam: (selected_exam: InitialExamDetails | null) => void;\n  changeLocation: (item: PositionAPICourse) => void;\n  selectedApplicationDetails: GetApplicationsAPI;\n  setDoingExam: (status: boolean) => void;\n  InitializeExamDetails: (\n    periodId: string,\n    courseId: string,\n    district_id: string,\n    center_id: string,\n    room_id: string,\n    position: PositionAPI,\n    start_exam: boolean,\n    callback: (loading: boolean) => void\n  ) => void;\n  setLoadingExams: (status: boolean) => void;\n}\ninterface PreparedExamsState {}\n\nexport class PreparedExams extends Component<\n  PreparedExamsProps,\n  PreparedExamsState\n> {\n  render() {\n    let NotPreparedExamsFilter = this.props.selectedPosition.courses.filter(\n      (itm) =>\n        this.props.candidateExam.user_exams_done.filter(\n          (ex) => ex.course === itm.course_id\n        ).length === 0 && this.props.findExam(itm.course_id) === null\n    );\n    let PreparedExamsFilter = this.props.selectedPosition.courses.filter(\n      (itm) =>\n        this.props.candidateExam.user_exams_done.filter(\n          (ex) => ex.course === itm.course_id\n        ).length === 0 && this.props.findExam(itm.course_id) !== null\n    );\n    let AllPendingExams = [...PreparedExamsFilter, ...NotPreparedExamsFilter];\n    let totalPending =\n      NotPreparedExamsFilter.length + PreparedExamsFilter.length;\n    return (\n      <div className=\"bg-white px-2 py-2\">\n        <div className=\"bg-gray-100 rounded px-2 py-2\">\n          <div className=\"flex flex-row items-center justify-between text-xl mb-3 mx-2\">\n            <span className=\"font-bold \">Waiting exams</span>\n            <span className=\"font-bold bg-white text-blue-600 rounded-full px-2 text-base border border-blue-200\">\n              {this.props.selectedPosition !== null &&\n                this.props.selectedExams !== null &&\n                this.props.loadingExams === false &&\n                totalPending}\n            </span>\n          </div>\n          <div className=\"flex flex-col gap-2\">\n            {this.props.selectedPosition === null ||\n            this.props.selectedExams === null ||\n            this.props.loadingExams === true ? (\n              <Loading />\n            ) : AllPendingExams.length === 0 ? (\n              <div className=\"border border-gray-200 text-gray-400 font-bold rounded-md px-3 py-3 text-center\">\n                <div className=\"flex justify-center items-center w-full text-4xl\">\n                  <IoMdInformationCircleOutline />\n                </div>\n                <div className=\"text-gray-500\">No exams found!</div>\n              </div>\n            ) : (\n              AllPendingExams.map((item, i) => (\n                <div\n                  key={i + 1}\n                  className={`px-3 py-2 rounded group bg-white border`}\n                >\n                  <div className=\"grid md:grid-cols-12 gap-2\">\n                    {/* First col */}\n                    <div className=\"col-span-12 md:col-span-6 lg:col-span-4 flex fex-row items-center gap-3\">\n                      <div className=\"flex flex-row gap-2 items-center\">\n                        <div\n                          className={`text-gray-300 group-hover:text-white flex flex-row items-center gap-2 text-right ml-2`}\n                        >\n                          {this.props.findExam(item.course_id) !== null ? (\n                            <CgCheckO className=\"text-4xl text-blue-600\" />\n                          ) : (\n                            <RiCheckboxBlankCircleFill className=\"text-4xl text-blue-100\" />\n                          )}\n                        </div>\n                      </div>\n                      <div className=\"flex flex-col\">\n                        <div className={`font-bold text-gray-600 truncate`}>\n                          {item.course_name}\n                        </div>\n                        <div className=\"flex flex-row justify-start items-center gap-2\">\n                          <span className=\"text-gray-500 text-xs\">\n                            Exam date:{\" \"}\n                          </span>\n                          {this.props.findExam(item.course_id) !== null ? (\n                            <div className=\"flex flex-row items-center gap-2\">\n                              {validateExamDate(\n                                this.props.findExam(item.course_id)!.exam_date,\n                                this.props.findExam(item.course_id)!.start_time,\n                                this.props.findExam(item.course_id)!.end_time\n                              ) === ExamTimeStatus.Online ? (\n                                <span className=\"bg-blue-100 text-blue-600 font-bold px-2 rounded-full\">\n                                  {validateExamDate(\n                                    this.props.findExam(item.course_id)!\n                                      .exam_date,\n                                    this.props.findExam(item.course_id)!\n                                      .start_time,\n                                    this.props.findExam(item.course_id)!\n                                      .end_time\n                                  )}\n                                </span>\n                              ) : validateExamDate(\n                                  this.props.findExam(item.course_id)!\n                                    .exam_date,\n                                  this.props.findExam(item.course_id)!\n                                    .start_time,\n                                  this.props.findExam(item.course_id)!.end_time\n                                ) === ExamTimeStatus.Expired ? (\n                                <span className=\"italic text-yellow-700 underline\">\n                                  {validateExamDate(\n                                    this.props.findExam(item.course_id)!\n                                      .exam_date,\n                                    this.props.findExam(item.course_id)!\n                                      .start_time,\n                                    this.props.findExam(item.course_id)!\n                                      .end_time\n                                  )}\n                                </span>\n                              ) : (\n                                <span className=\"italic\">\n                                  {validateExamDate(\n                                    this.props.findExam(item.course_id)!\n                                      .exam_date,\n                                    this.props.findExam(item.course_id)!\n                                      .start_time,\n                                    this.props.findExam(item.course_id)!\n                                      .end_time\n                                  )}\n                                </span>\n                              )}\n                              <span className=\"font-bold text-blue-600 text-sm\">\n                                {DATE(\n                                  this.props.findExam(item.course_id)!\n                                    .exam_date,\n                                  \"DD/MM/YYYY\"\n                                )}\n                              </span>\n                              <span\n                                className={`bg-blue-100 text-blue-600 font-bold px-2 py-1 rounded-full text-sm`}\n                              >\n                                {\n                                  this.props.findExam(item.course_id)!\n                                    .start_time\n                                }\n                              </span>\n                            </div>\n                          ) : (\n                            <span className=\"text-gray-500 text-sm\">\n                              Waiting for preparation\n                            </span>\n                          )}\n                        </div>\n                      </div>\n                    </div>\n                    {/* Second col */}\n                    <div className=\"col-span-12 md:col-span-6 lg:col-span-4 flex flex-col items-start justify-center\">\n                      {this.props.selectedExams === null ? (\n                        \"\"\n                      ) : this.props.selectedExams.find(\n                          (itm) => itm.course_id === item.course_id\n                        ) !== undefined ? (\n                        <>\n                          <div className=\"flex flex-row justify-start items-center gap-2\">\n                            <span className=\"text-gray-500 text-xs\">\n                              Proctoring type:{\" \"}\n                            </span>\n                            <span className=\"text-gray-700 font-bold text-sm\">\n                              {this.props.selectedExams === null\n                                ? \"\"\n                                : this.props.selectedExams.find(\n                                    (itm) => itm.course_id === item.course_id\n                                  ) !== undefined &&\n                                  this.props.selectedExams.find(\n                                    (itm) => itm.course_id === item.course_id\n                                  )?.proctoring_type}\n                            </span>\n                          </div>\n                          <div className=\"flex flex-col justify-center items-start gap-2\">\n                            {/* <span className=\"text-gray-500 text-xs\">\n                              Exam location:{\" \"}\n                            </span> */}\n                            <span className={`text-gray-700 font-bold text-sm`}>\n                              Center:{\" \"}\n                              {this.props.selectedExams === null ? (\n                                \"\"\n                              ) : this.props.selectedExams.find(\n                                  (itm) => itm.course_id === item.course_id\n                                ) !== undefined ? (\n                                this.props.selectedExams.find(\n                                  (itm) => itm.course_id === item.course_id\n                                )?.center_name\n                              ) : (\n                                <span className=\"italic text-xs\">\n                                  No location selected\n                                </span>\n                              )}\n                            </span>\n                            <span className={`text-gray-700 font-bold text-sm`}>\n                              Room:{\" \"}\n                              {this.props.selectedExams === null ? (\n                                \"\"\n                              ) : this.props.selectedExams.find(\n                                  (itm) => itm.course_id === item.course_id\n                                ) !== undefined ? (\n                                this.props.selectedExams.find(\n                                  (itm) => itm.course_id === item.course_id\n                                )?.room_number === 0 ? (\n                                  <span className=\"bg-yellow-100 text-yellow-700 font-bold px-2 py-1 rounded\">\n                                    Waiting room, you are advised to choose\n                                    another center\n                                  </span>\n                                ) : (\n                                  <span className=\"text-blue-600 bg-blue-100 px-2 py-1 rounded\">\n                                    No:{\" \"}\n                                    {\n                                      this.props.selectedExams.find(\n                                        (itm) =>\n                                          itm.course_id === item.course_id\n                                      )?.room_number\n                                    }\n                                  </span>\n                                )\n                              ) : (\n                                <span className=\"italic text-xs\">\n                                  No location selected\n                                </span>\n                              )}\n                            </span>\n                          </div>\n                        </>\n                      ) : (\n                        <div className=\"flex flex-row gap-2 items-center justify-start\">\n                          <RiErrorWarningLine className=\"text-xl text-yellow-700\" />\n                          <span className=\"text-yellow-700 italic text-sm\">\n                            No location selected\n                          </span>\n                        </div>\n                      )}\n                    </div>\n                    {/* Third col */}\n                    <div className=\"col-span-12 md:col-span-12 lg:col-span-4 flex items-center justify-start lg:justify-end\">\n                      {this.props.selectedExams === null ? (\n                        \"\"\n                      ) : this.props.selectedExams.find(\n                          (itm) => itm.course_id === item.course_id\n                        ) !== undefined ? (\n                        <div className=\"flex flex-row justify-start md:justify-end items-center gap-2\">\n                          {this.props.loadingExams === true ||\n                          this.props.loadingExamsDone === true ? (\n                            <div className=\"text-gray-500 font-bold bg-gray-100 text-sm rounded px-3 py-2\">\n                              Checking...\n                            </div>\n                          ) : (\n                            ((this.props.candidateExam.user_exams_done.find(\n                              (itm) => itm.course === item.course_id\n                            ) === undefined &&\n                              this.props.findExam(item.course_id) !== null &&\n                              validateExamDate(\n                                this.props.findExam(item.course_id)!.exam_date,\n                                this.props.findExam(item.course_id)!.start_time,\n                                this.props.findExam(item.course_id)!.end_time\n                              ) === ExamTimeStatus.Waiting) ||\n                              this.props.findExam(item.course_id) === null) && (\n                              <div\n                                onClick={() => this.props.changeLocation(item)}\n                                className=\"btn text-blue-600 border border-white cursor-pointer group-hover:bg-blue-600 hover:bg-blue-800 group-hover:text-white bg-blue-100 text-sm w-40 text-center\"\n                              >\n                                Change location\n                              </div>\n                            )\n                          )}\n                          {this.props.loadingExams === true ||\n                          this.props.loadingExamsDone === true ? (\n                            <div className=\"text-gray-500 font-bold bg-gray-100 text-sm rounded px-3 py-2\">\n                              Checking...\n                            </div>\n                          ) : (\n                            this.props.findExam(item.course_id) !== null &&\n                            this.props.findExam(item.course_id)?.course !==\n                              undefined &&\n                            this.props.candidateExam.user_exams_done.find(\n                              (itm) => itm.course === item.course_id\n                            )?.user_status !== UserExamStatus.Editing &&\n                            validateExamDate(\n                              this.props.findExam(item.course_id)!.exam_date,\n                              this.props.findExam(item.course_id)!.start_time,\n                              this.props.findExam(item.course_id)!.end_time\n                            ) === ExamTimeStatus.Online &&\n                            this.props.selectedApplicationDetails\n                              .application_status ===\n                              ApplicationStates.Shortlisted && (\n                              <div\n                                onClick={() => {\n                                  this.props.course.courses &&\n                                    this.props.setSelectedCourse(\n                                      this.props.course.courses.find(\n                                        (itm) =>\n                                          itm.course_id === item.course_id\n                                      )!\n                                    );\n                                  this.props.findExam(item.course_id) !==\n                                    null &&\n                                    this.setState({\n                                      appointmentDetailsModal: {\n                                        status: true,\n                                        item: this.props.findExam(\n                                          item.course_id\n                                        ),\n                                      },\n                                    });\n                                }}\n                                className=\"hidden btn border border-blue-500 text-blue-600 cursor-pointer hover:bg-blue-600 hover:text-white text-sm text-center\"\n                              >\n                                Details\n                              </div>\n                            )\n                          )}\n                          {this.props.loadingExams === true ||\n                          this.props.loadingExamsDone === true ? (\n                            <div className=\"text-gray-500 font-bold bg-gray-100 text-sm rounded px-3 py-2\">\n                              Checking...\n                            </div>\n                          ) : (\n                            this.props.periods.selected_period !== null &&\n                            this.props.periods.selected_period.is_active ===\n                              true &&\n                            this.props.findExam(item.course_id) !== null &&\n                            this.props.findExam(item.course_id)?.id !==\n                              undefined &&\n                            validateExamDate(\n                              this.props.findExam(item.course_id)!.exam_date,\n                              this.props.findExam(item.course_id)!.start_time,\n                              this.props.findExam(item.course_id)!.end_time\n                            ) === ExamTimeStatus.Online &&\n                            this.props.selectedApplicationDetails\n                              .application_status ===\n                              ApplicationStates.Shortlisted && (\n                              <div\n                                onClick={() => {\n                                  if (this.props.selectedPosition !== null) {\n                                    if (\n                                      this.props.positions.selected_position ===\n                                        null ||\n                                      this.props.positions.selected_position\n                                        .position_id !==\n                                        this.props.selectedPosition.position_id\n                                    ) {\n                                      this.props.setSelectedPosition(\n                                        this.props.selectedPosition\n                                      );\n                                    }\n                                    this.props.selectedExams !== null &&\n                                      this.props.course.courses &&\n                                      this.props.setSelectedCourse(\n                                        this.props.course.courses.find(\n                                          (itm) =>\n                                            itm.course_id === item.course_id\n                                        )!\n                                      );\n                                    this.props.selectedExams !== null &&\n                                      this.props.findExam(item.course_id) !==\n                                        null &&\n                                      this.props.setSelectedCandidateExam(\n                                        this.props.findExam(item.course_id)\n                                      );\n                                    this.props.setDoingExam(true);\n                                    this.props.selectedExams &&\n                                      this.props.InitializeExamDetails(\n                                        this.props.selectedApplicationDetails\n                                          .application_session.session_plan_id,\n                                        item.course_id,\n                                        this.props.selectedExams.find(\n                                          (itm) =>\n                                            itm.course_id === item.course_id\n                                        )!.district_id,\n                                        this.props.selectedExams.find(\n                                          (itm) =>\n                                            itm.course_id === item.course_id\n                                        )!.center_id,\n                                        this.props.selectedExams.find(\n                                          (itm) =>\n                                            itm.course_id === item.course_id\n                                        )!.room_id,\n                                        this.props.selectedPosition,\n                                        true,\n                                        this.props.setLoadingExams\n                                      );\n                                  }\n                                }}\n                                className={`btn border ${\n                                  this.props.candidateExam.user_exams_done.find(\n                                    (itm) => itm.course === item.course_id\n                                  )?.user_status !== UserExamStatus.Editing\n                                    ? \"border-blue-500 bg-blue-600 hover:text-blue-600\"\n                                    : \"border-green-500 bg-green-600 hover:text-green-600\"\n                                } text-white cursor-pointer hover:bg-white text-sm w-max text-center`}\n                              >\n                                {this.props.candidateExam.user_exams_done.find(\n                                  (itm) => itm.course === item.course_id\n                                )?.user_status !== UserExamStatus.Editing\n                                  ? \"Start exam\"\n                                  : \"Back to Exam\"}\n                              </div>\n                            )\n                          )}\n                          {this.props.selectedApplicationDetails\n                            .application_status ===\n                            ApplicationStates.Initiated && (\n                            <div className=\"font-semibold text-yellow-800 bg-yellow-50 py-2 px-4 text-base\">\n                              Waiting for shortlisting\n                            </div>\n                          )}\n                        </div>\n                      ) : (\n                        <div className=\"flex flex-row justify-start md:justify-end items-center gap-2\">\n                          {this.props.candidateExam.user_exams_done.find(\n                            (itm) => itm.course === item.course_id\n                          ) === undefined && (\n                            <div\n                              onClick={() => this.props.changeLocation(item)}\n                              className=\"btn cursor-pointer bg-yellow-700 hover:bg-yellow-50 border border-yellow-700 hover:text-yellow-700 text-white text-sm w-36 text-center\"\n                            >\n                              Choose location\n                            </div>\n                          )}\n                        </div>\n                      )}\n                      {this.props.candidateExam.user_exams_done.find(\n                        (itm) => itm.course === item.course_id\n                      ) !== undefined &&\n                        this.props.candidateExam.user_exams_done.find(\n                          (itm) => itm.course === item.course_id\n                        )?.user_status !== UserExamStatus.Editing && (\n                          <div className=\"flex flex-row gap-2 items-center\">\n                            <div\n                              className={`text-blue-600 flex flex-row items-center gap-2 text-right ml-2`}\n                            >\n                              <div className=\"flex flex-col gap-0\">\n                                <span className=\"text-sm\">Marks</span>\n                                <span className=\"text-lg font-bold -mt-1\">\n                                  {this.props.candidateExam.user_exams_done\n                                    .find(\n                                      (itm) => itm.course === item.course_id\n                                    )\n                                    ?.total_marks.toFixed(2)}\n                                  %\n                                </span>\n                              </div>\n                            </div>\n                          </div>\n                        )}\n                    </div>\n                  </div>\n                </div>\n              ))\n            )}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default PreparedExams;\n","import React, { Component } from \"react\";\nimport { HiInformationCircle } from \"react-icons/hi\";\nimport { IoMdInformationCircleOutline } from \"react-icons/io\";\nimport { MdCheckCircle, MdPauseCircleFilled } from \"react-icons/md\";\nimport { RiCheckboxBlankCircleFill, RiErrorWarningLine } from \"react-icons/ri\";\nimport { applicationPeriodsStoreInterface } from \"../../../actions/application_periods\";\nimport {\n  candidateExamStoreInterface,\n  InitialExamDetails,\n} from \"../../../actions/candidate_exam\";\nimport { courseStoreInterface } from \"../../../actions/course\";\nimport { positionsStoreInterface } from \"../../../actions/positions\";\nimport Loading from \"../../../components/Loading/Loading\";\nimport {\n  applicationExamAPI,\n  ApplicationStates,\n  GetApplicationsAPI,\n} from \"../../../interfaces/application\";\nimport { course } from \"../../../interfaces/course\";\nimport { UserExamStatus } from \"../../../interfaces/exam\";\nimport { PositionAPI } from \"../../../interfaces/position\";\nimport { DATE } from \"../../../utils/functions\";\nimport { ExamTimeStatus, validateExamDate } from \"../../../utils/question_bank\";\n\ninterface ActiveExamsProps {\n  selectedPosition: PositionAPI;\n  selectedExams: applicationExamAPI[] | null;\n  findExam: (courseId: string) => InitialExamDetails | null;\n  loadingExams: boolean;\n  loadingExamsDone: boolean;\n  setMaxExamModal: (status: boolean) => void;\n  course: courseStoreInterface;\n  setSelectedCourse: (course: course | null) => void;\n  candidateExam: candidateExamStoreInterface;\n  positions: positionsStoreInterface;\n  periods: applicationPeriodsStoreInterface;\n  setSelectedPosition: (position: PositionAPI) => void;\n  setSelectedCandidateExam: (selected_exam: InitialExamDetails | null) => void;\n  selectedApplicationDetails: GetApplicationsAPI;\n  setDoingExam: (status: boolean) => void;\n  InitializeExamDetails: (\n    periodId: string,\n    courseId: string,\n    district_id: string,\n    center_id: string,\n    room_id: string,\n    position: PositionAPI,\n    start_exam: boolean,\n    callback: (loading: boolean) => void\n  ) => void;\n  setLoadingExams: (status: boolean) => void;\n}\ninterface ActiveExamsState {}\n\nexport class ActiveExams extends Component<ActiveExamsProps, ActiveExamsState> {\n  render() {\n    let ExamsDoneFilterTemp = this.props.selectedPosition.courses.filter(\n      (itm) =>\n        this.props.findExam(itm.course_id) !== null &&\n        this.props.candidateExam.user_exams_done.filter(\n          (ex) =>\n            ex.course === itm.course_id &&\n            validateExamDate(\n              ex.exam_date,\n              ex.exam_start_time,\n              ex.exam_end_time\n            ) === ExamTimeStatus.Online\n        ).length > 0\n    );\n    let ActiveExamsFilter = ExamsDoneFilterTemp.filter(\n      (check) =>\n        this.props.candidateExam.user_exams_done.filter(\n          (itm) => itm.course === check.course_id\n        ) !== undefined &&\n        (this.props.candidateExam.user_exams_done.find(\n          (itm) => itm.course === check.course_id\n        )?.user_status === UserExamStatus.Editing ||\n          this.props.candidateExam.user_exams_done.find(\n            (itm) => itm.course === check.course_id\n          )?.user_status === UserExamStatus.Paused)\n    );\n    return (\n      <>\n        {ActiveExamsFilter.length > 0 ? (\n          <div className=\"bg-white px-2 py-2\">\n            <div className=\"bg-gray-100 rounded px-2 py-2\">\n              <div className=\"flex flex-row items-center justify-between text-xl mb-3 mx-2\">\n                <span className=\"font-bold \">Active exam</span>\n                <span className=\"font-bold bg-white text-green-600 rounded-full px-2 text-base border border-gray-200\">\n                  {this.props.selectedPosition !== null &&\n                    this.props.selectedExams !== null &&\n                    this.props.loadingExams === false &&\n                    ActiveExamsFilter.length}\n                </span>\n              </div>\n              <div className=\"flex flex-col gap-2\">\n                {this.props.selectedPosition === null ||\n                this.props.selectedExams === null ||\n                this.props.loadingExams === true ? (\n                  <Loading />\n                ) : ActiveExamsFilter.length === 0 ? (\n                  <div className=\"border border-gray-200 text-gray-400 font-bold rounded-md px-3 py-3 text-center\">\n                    <div className=\"flex justify-center items-center w-full text-4xl\">\n                      <IoMdInformationCircleOutline />\n                    </div>\n                    <div className=\"text-gray-500\">No exams found!</div>\n                  </div>\n                ) : (\n                  ActiveExamsFilter.map((item, i) => (\n                    <div\n                      key={i + 1}\n                      className={`px-3 py-2 rounded group bg-white border-2 border-green-600 hover:bg-green-50`}\n                    >\n                      <div className=\"grid md:grid-cols-12 gap-2\">\n                        {/* First col */}\n                        <div className=\"col-span-12 md:col-span-6 lg:col-span-4 flex fex-row items-center gap-3\">\n                          {this.props.candidateExam.user_exams_done.find(\n                            (itm) => itm.course === item.course_id\n                          ) !== undefined &&\n                            this.props.candidateExam.user_exams_done.find(\n                              (itm) => itm.course === item.course_id\n                            )?.user_status === UserExamStatus.Editing && (\n                              <div className=\"flex flex-row gap-2 items-center\">\n                                <div\n                                  className={`text-green-600 flex flex-row items-center gap-2 text-right ml-2`}\n                                >\n                                  <HiInformationCircle className=\"text-4xl\" />\n                                </div>\n                              </div>\n                            )}\n                          {this.props.candidateExam.user_exams_done.find(\n                            (itm) => itm.course === item.course_id\n                          ) !== undefined &&\n                            this.props.candidateExam.user_exams_done.find(\n                              (itm) => itm.course === item.course_id\n                            )?.user_status === UserExamStatus.Done && (\n                              <div className=\"flex flex-row gap-2 items-center\">\n                                <div\n                                  className={`text-blue-600 flex flex-row items-center gap-2 text-right ml-2`}\n                                >\n                                  <MdCheckCircle className=\"text-4xl\" />\n                                </div>\n                              </div>\n                            )}\n                          {this.props.candidateExam.user_exams_done.find(\n                            (itm) => itm.course === item.course_id\n                          ) !== undefined &&\n                            this.props.candidateExam.user_exams_done.find(\n                              (itm) => itm.course === item.course_id\n                            )?.user_status === UserExamStatus.Removed && (\n                              <div className=\"flex flex-row gap-2 items-center\">\n                                <div\n                                  className={`text-yellow-800 flex flex-row items-center gap-2 text-right ml-2`}\n                                >\n                                  <MdCheckCircle className=\"text-4xl\" />\n                                </div>\n                              </div>\n                            )}\n                          {this.props.candidateExam.user_exams_done.find(\n                            (itm) => itm.course === item.course_id\n                          ) !== undefined &&\n                            this.props.candidateExam.user_exams_done.find(\n                              (itm) => itm.course === item.course_id\n                            )?.user_status === UserExamStatus.Paused && (\n                              <div className=\"flex flex-row gap-2 items-center\">\n                                <div\n                                  className={`text-green-500 flex flex-row items-center gap-2 text-right ml-2`}\n                                >\n                                  <MdPauseCircleFilled className=\"text-4xl\" />\n                                </div>\n                              </div>\n                            )}\n                          {this.props.candidateExam.user_exams_done.find(\n                            (itm) => itm.course === item.course_id\n                          ) === undefined &&\n                            this.props.findExam(item.course_id) !== null &&\n                            this.props.findExam(item.course_id)?.id !==\n                              undefined && (\n                              <div className=\"flex flex-row gap-2 items-center\">\n                                <div\n                                  className={`text-blue-600 flex flex-row items-center gap-2 text-right ml-2 animate-ping`}\n                                >\n                                  <HiInformationCircle className=\"text-4xl\" />\n                                </div>\n                              </div>\n                            )}\n                          {this.props.candidateExam.user_exams_done.find(\n                            (itm) => itm.course === item.course_id\n                          ) === undefined &&\n                            (this.props.findExam(item.course_id) === null ||\n                              this.props.findExam(item.course_id)?.id ===\n                                undefined) && (\n                              <div className=\"flex flex-row gap-2 items-center\">\n                                <div\n                                  className={`text-gray-300 group-hover:text-white flex flex-row items-center gap-2 text-right ml-2`}\n                                >\n                                  <RiCheckboxBlankCircleFill className=\"text-4xl\" />\n                                </div>\n                              </div>\n                            )}\n                          <div className=\"flex flex-col\">\n                            <div className={`font-bold text-gray-600 truncate`}>\n                              {item.course_name}\n                            </div>\n                            <div className=\"flex flex-row justify-start items-center gap-2\">\n                              <span className=\"text-gray-500 text-xs\">\n                                Exam date:{\" \"}\n                              </span>\n                              <div className=\"flex flex-row items-center gap-2\">\n                                <span className=\"font-bold text-green-600 text-sm\">\n                                  {DATE(\n                                    this.props.findExam(item.course_id)!\n                                      .exam_date,\n                                    \"DD/MM/YYYY\"\n                                  )}\n                                </span>\n                                <span\n                                  className={`bg-gray-100 text-green-600 font-bold px-2 py-1 rounded-full text-sm`}\n                                >\n                                  {\n                                    this.props.findExam(item.course_id)!\n                                      .start_time\n                                  }\n                                </span>\n                                <span\n                                  className={`bg-gray-100 text-gray-800 font-bold px-2 py-1 rounded-full text-sm underline`}\n                                >\n                                  {\n                                    this.props.candidateExam.user_exams_done.find(\n                                      (x) => x.course === item.course_id\n                                    )?.user_status\n                                  }\n                                </span>\n                              </div>\n                            </div>\n                          </div>\n                        </div>\n                        {/* Second col */}\n                        <div className=\"col-span-12 md:col-span-6 lg:col-span-4 flex flex-col items-start justify-center\">\n                          {this.props.selectedExams === null ? (\n                            \"\"\n                          ) : this.props.selectedExams.find(\n                              (itm) => itm.course_id === item.course_id\n                            ) !== undefined ? (\n                            <>\n                              <div className=\"flex flex-row justify-start items-center gap-2\">\n                                <span className=\"text-gray-500 text-xs\">\n                                  Proctoring type:{\" \"}\n                                </span>\n                                <span className=\"text-gray-700 font-bold text-sm\">\n                                  {this.props.selectedExams === null\n                                    ? \"\"\n                                    : this.props.selectedExams.find(\n                                        (itm) =>\n                                          itm.course_id === item.course_id\n                                      ) !== undefined &&\n                                      this.props.selectedExams.find(\n                                        (itm) =>\n                                          itm.course_id === item.course_id\n                                      )?.proctoring_type}\n                                </span>\n                              </div>\n                              <div className=\"flex flex-col justify-center items-start gap-2\">\n                                {/* <span className=\"text-gray-500 text-xs\">\n                                  Exam location:{\" \"}\n                                </span> */}\n                                <span\n                                  className={`text-gray-700 font-bold text-sm`}\n                                >\n                                  Center:{\" \"}\n                                  {this.props.selectedExams === null ? (\n                                    \"\"\n                                  ) : this.props.selectedExams.find(\n                                      (itm) => itm.course_id === item.course_id\n                                    ) !== undefined ? (\n                                    this.props.selectedExams.find(\n                                      (itm) => itm.course_id === item.course_id\n                                    )?.center_name\n                                  ) : (\n                                    <span className=\"italic text-xs\">\n                                      No location selected\n                                    </span>\n                                  )}\n                                </span>\n                                <span\n                                  className={`text-gray-700 font-bold text-sm`}\n                                >\n                                  Room:{\" \"}\n                                  {this.props.selectedExams === null ? (\n                                    \"\"\n                                  ) : this.props.selectedExams.find(\n                                      (itm) => itm.course_id === item.course_id\n                                    ) !== undefined ? (\n                                    this.props.selectedExams.find(\n                                      (itm) => itm.course_id === item.course_id\n                                    )?.room_number === 0 ? (\n                                      <span className=\"bg-yellow-100 text-yellow-700 font-bold px-2 py-1 rounded\">\n                                        Waiting room, you are advised to choose\n                                        another center\n                                      </span>\n                                    ) : (\n                                      <span className=\"text-blue-600 bg-blue-100 px-2 py-1 rounded\">\n                                        No:{\" \"}\n                                        {\n                                          this.props.selectedExams.find(\n                                            (itm) =>\n                                              itm.course_id === item.course_id\n                                          )?.room_number\n                                        }\n                                      </span>\n                                    )\n                                  ) : (\n                                    <span className=\"italic text-xs\">\n                                      No location selected\n                                    </span>\n                                  )}\n                                </span>\n                              </div>\n                            </>\n                          ) : (\n                            <div className=\"flex flex-row gap-2 items-center justify-start\">\n                              <RiErrorWarningLine className=\"text-xl text-yellow-700\" />\n                              <span className=\"text-yellow-700 italic text-sm\">\n                                No location selected\n                              </span>\n                            </div>\n                          )}\n                        </div>\n                        {/* Third col */}\n                        <div className=\"col-span-12 md:col-span-12 lg:col-span-4 flex items-center justify-start lg:justify-end\">\n                          {this.props.selectedExams === null ? (\n                            \"\"\n                          ) : this.props.selectedExams.find(\n                              (itm) => itm.course_id === item.course_id\n                            ) !== undefined ? (\n                            <div className=\"flex flex-row justify-start md:justify-end items-center gap-2\">\n                              {this.props.loadingExams === true ||\n                              this.props.loadingExamsDone === true ? (\n                                <div className=\"text-gray-500 font-bold bg-gray-100 text-sm rounded px-3 py-2\">\n                                  Checking...\n                                </div>\n                              ) : (\n                                this.props.candidateExam.user_exams_done.find(\n                                  (itm) => itm.course === item.course_id\n                                ) === undefined && (\n                                  <div\n                                    onClick={() => {\n                                      this.setState({\n                                        selectedCourse: item,\n                                        centersModal: true,\n                                      });\n                                      this.props.setMaxExamModal(true);\n                                    }}\n                                    className=\"btn text-blue-600 border border-white cursor-pointer group-hover:bg-blue-600 hover:bg-blue-800 group-hover:text-white bg-blue-100 text-sm w-40 text-center\"\n                                  >\n                                    Change location\n                                  </div>\n                                )\n                              )}\n                              {this.props.loadingExams === true ||\n                              this.props.loadingExamsDone === true ? (\n                                <div className=\"text-gray-500 font-bold bg-gray-100 text-sm rounded px-3 py-2\">\n                                  Checking...\n                                </div>\n                              ) : (\n                                this.props.periods.selected_period !== null &&\n                                this.props.periods.selected_period.is_active ===\n                                  true &&\n                                this.props.findExam(item.course_id) !== null &&\n                                this.props.findExam(item.course_id)?.id !==\n                                  undefined &&\n                                this.props.selectedApplicationDetails\n                                  .application_status ===\n                                  ApplicationStates.Shortlisted && (\n                                  <div\n                                    onClick={() => {\n                                      if (\n                                        this.props.selectedPosition !== null\n                                      ) {\n                                        if (\n                                          this.props.positions\n                                            .selected_position === null ||\n                                          this.props.positions.selected_position\n                                            .position_id !==\n                                            this.props.selectedPosition\n                                              .position_id\n                                        ) {\n                                          this.props.setSelectedPosition(\n                                            this.props.selectedPosition\n                                          );\n                                        }\n                                        this.props.selectedExams !== null &&\n                                          this.props.course.courses &&\n                                          this.props.setSelectedCourse(\n                                            this.props.course.courses.find(\n                                              (itm) =>\n                                                itm.course_id === item.course_id\n                                            )!\n                                          );\n                                        this.props.selectedExams !== null &&\n                                          this.props.findExam(\n                                            item.course_id\n                                          ) !== null &&\n                                          this.props.setSelectedCandidateExam(\n                                            this.props.findExam(item.course_id)\n                                          );\n                                        this.props.setDoingExam(true);\n                                        this.props.selectedExams &&\n                                          this.props.InitializeExamDetails(\n                                            this.props\n                                              .selectedApplicationDetails\n                                              .application_session\n                                              .session_plan_id,\n                                            item.course_id,\n                                            this.props.selectedExams.find(\n                                              (itm) =>\n                                                itm.course_id === item.course_id\n                                            )!.district_id,\n                                            this.props.selectedExams.find(\n                                              (itm) =>\n                                                itm.course_id === item.course_id\n                                            )!.center_id,\n                                            this.props.selectedExams.find(\n                                              (itm) =>\n                                                itm.course_id === item.course_id\n                                            )!.room_id,\n                                            this.props.selectedPosition,\n                                            true,\n                                            this.props.setLoadingExams\n                                          );\n                                      }\n                                    }}\n                                    className={`btn border border-green-500 bg-green-600 hover:text-green-600 text-white cursor-pointer hover:bg-white text-sm w-max text-center`}\n                                  >\n                                    Back to exam\n                                  </div>\n                                )\n                              )}\n                            </div>\n                          ) : (\n                            <div className=\"flex flex-row justify-start md:justify-end items-center gap-2\">\n                              {this.props.candidateExam.user_exams_done.find(\n                                (itm) => itm.course === item.course_id\n                              ) === undefined && (\n                                <div\n                                  onClick={() =>\n                                    this.setState({\n                                      selectedCourse: item,\n                                      centersModal: true,\n                                    })\n                                  }\n                                  className=\"btn cursor-pointer bg-yellow-700 hover:bg-yellow-50 border border-yellow-700 hover:text-yellow-700 text-white text-sm w-36 text-center\"\n                                >\n                                  Choose location\n                                </div>\n                              )}\n                            </div>\n                          )}\n                        </div>\n                      </div>\n                    </div>\n                  ))\n                )}\n              </div>\n            </div>\n          </div>\n        ) : (\n          <div></div>\n        )}\n      </>\n    );\n  }\n}\n\nexport default ActiveExams;\n","import React, { Component } from \"react\";\nimport { HiInformationCircle } from \"react-icons/hi\";\nimport { IoMdInformationCircleOutline } from \"react-icons/io\";\nimport { MdCheckCircle, MdPauseCircleFilled } from \"react-icons/md\";\nimport { RiCheckboxBlankCircleFill, RiErrorWarningLine } from \"react-icons/ri\";\nimport { applicationPeriodsStoreInterface } from \"../../../actions/application_periods\";\nimport {\n  candidateExamStoreInterface,\n  InitialExamDetails,\n} from \"../../../actions/candidate_exam\";\nimport { courseStoreInterface } from \"../../../actions/course\";\nimport { positionsStoreInterface } from \"../../../actions/positions\";\nimport Loading from \"../../../components/Loading/Loading\";\nimport { applicationExamAPI } from \"../../../interfaces/application\";\nimport { course } from \"../../../interfaces/course\";\nimport { ExamAnswerSheetDone, UserExamStatus } from \"../../../interfaces/exam\";\nimport { PositionAPI, PositionAPICourse } from \"../../../interfaces/position\";\nimport { DATE } from \"../../../utils/functions\";\nimport { ExamTimeStatus, validateExamDate } from \"../../../utils/question_bank\";\nimport { ExamDoneDetailsAnswers } from \"../../CandidateExams/CandidateExams\";\n\ninterface ExamsDoneProps {\n  selectedPosition: PositionAPI;\n  selectedExams: applicationExamAPI[] | null;\n  findExam: (courseId: string) => InitialExamDetails | null;\n  loadingExams: boolean;\n  loadingExamsDone: boolean;\n  setMaxExamModal: (status: boolean) => void;\n  course: courseStoreInterface;\n  setSelectedCourse: (course: course | null) => void;\n  candidateExam: candidateExamStoreInterface;\n  positions: positionsStoreInterface;\n  periods: applicationPeriodsStoreInterface;\n  setSelectedPosition: (position: PositionAPI) => void;\n  setSelectedCandidateExam: (selected_exam: InitialExamDetails | null) => void;\n  viewMarksDetails: (selectedExamDetails: ExamDoneDetailsAnswers) => void;\n}\ninterface ExamsDoneState {\n  loading: boolean;\n  selectedCourse: PositionAPICourse | null;\n  centersModal: boolean;\n}\n\nexport class ExamsDone extends Component<ExamsDoneProps, ExamsDoneState> {\n  constructor(props: ExamsDoneProps) {\n    super(props);\n\n    this.state = {\n      loading: false,\n      centersModal: false,\n      selectedCourse: null,\n    };\n  }\n  viewMarksDetailsFn = (Exam: ExamAnswerSheetDone) => {\n    const examTest = this.props.candidateExam.user_exams_temp.find(\n      (itm) => itm.course === Exam.course && itm.period === Exam.period\n    );\n    if (examTest !== undefined) {\n      let courseSelected = this.props.selectedPosition.courses.find(\n        (itm) => itm.course_id === examTest.course\n      );\n      if (courseSelected !== undefined) {\n        this.props.viewMarksDetails({\n          course: examTest.course,\n          course_name: courseSelected.course_name,\n          discription: examTest.discription,\n          termes: examTest.termes,\n          rules: examTest.rules,\n          period: Exam.period,\n          exam_date: Exam.exam_date,\n          exam_id: Exam.exam_paper,\n        });\n      }\n    }\n  };\n  render() {\n    let ExamsDoneFilter = this.props.selectedPosition.courses.filter(\n      (itm) =>\n        this.props.findExam(itm.course_id) !== null &&\n        this.props.candidateExam.user_exams_done.filter(\n          (ex) =>\n            ex.course === itm.course_id &&\n            (ex.user_status === UserExamStatus.Done ||\n              ex.user_status === UserExamStatus.Removed ||\n              validateExamDate(\n                ex.exam_date,\n                ex.exam_start_time,\n                ex.exam_end_time\n              ) === ExamTimeStatus.Expired)\n        ).length > 0\n    );\n    // console.log(\"Done ex: \", ExamsDoneFilter);\n    return (\n      <div className=\"bg-white px-2 py-2\">\n        <div className=\"bg-gray-100 rounded px-2 py-2\">\n          <div className=\"flex flex-row items-center justify-between text-xl mb-3 mx-2\">\n            <span className=\"font-bold \">Completed exams</span>\n            <span className=\"font-bold bg-white text-gray-600 rounded-full px-2 text-base border border-gray-200\">\n              {this.props.selectedPosition !== null &&\n                this.props.selectedExams !== null &&\n                this.props.loadingExams === false &&\n                ExamsDoneFilter.length}\n            </span>\n          </div>\n          <div className=\"flex flex-col gap-2\">\n            {this.props.selectedPosition === null ||\n            this.props.selectedExams === null ||\n            this.props.loadingExams === true ? (\n              <Loading />\n            ) : ExamsDoneFilter.length === 0 ? (\n              <div className=\"border border-gray-200 text-gray-400 font-bold rounded-md px-3 py-3 text-center\">\n                <div className=\"flex justify-center items-center w-full text-4xl\">\n                  <IoMdInformationCircleOutline />\n                </div>\n                <div className=\"text-gray-500\">No exams found!</div>\n              </div>\n            ) : (\n              ExamsDoneFilter.map((item, i) => (\n                <div key={i + 1} className={`px-3 py-2 rounded group bg-white`}>\n                  <div className=\"grid md:grid-cols-12 gap-2\">\n                    {/* First col */}\n                    <div className=\"col-span-12 md:col-span-6 lg:col-span-4 flex fex-row items-center gap-3\">\n                      {this.props.candidateExam.user_exams_done.find(\n                        (itm) => itm.course === item.course_id\n                      ) !== undefined &&\n                        this.props.candidateExam.user_exams_done.find(\n                          (itm) => itm.course === item.course_id\n                        )?.user_status === UserExamStatus.Editing && (\n                          <div className=\"flex flex-row gap-2 items-center\">\n                            <div\n                              className={`text-gray-300 flex flex-row items-center gap-2 text-right ml-2`}\n                            >\n                              <HiInformationCircle className=\"text-4xl\" />\n                            </div>\n                          </div>\n                        )}\n                      {this.props.candidateExam.user_exams_done.find(\n                        (itm) => itm.course === item.course_id\n                      ) !== undefined &&\n                        this.props.candidateExam.user_exams_done.find(\n                          (itm) => itm.course === item.course_id\n                        )?.user_status === UserExamStatus.Done && (\n                          <div className=\"flex flex-row gap-2 items-center\">\n                            <div\n                              className={`text-blue-600 flex flex-row items-center gap-2 text-right ml-2`}\n                            >\n                              <MdCheckCircle className=\"text-4xl\" />\n                            </div>\n                          </div>\n                        )}\n                      {this.props.candidateExam.user_exams_done.find(\n                        (itm) => itm.course === item.course_id\n                      ) !== undefined &&\n                        this.props.candidateExam.user_exams_done.find(\n                          (itm) => itm.course === item.course_id\n                        )?.user_status === UserExamStatus.Removed && (\n                          <div className=\"flex flex-row gap-2 items-center\">\n                            <div\n                              className={`text-gray-300 flex flex-row items-center gap-2 text-right ml-2`}\n                            >\n                              <MdCheckCircle className=\"text-4xl\" />\n                            </div>\n                          </div>\n                        )}\n                      {this.props.candidateExam.user_exams_done.find(\n                        (itm) => itm.course === item.course_id\n                      ) !== undefined &&\n                        this.props.candidateExam.user_exams_done.find(\n                          (itm) => itm.course === item.course_id\n                        )?.user_status === UserExamStatus.Paused && (\n                          <div className=\"flex flex-row gap-2 items-center\">\n                            <div\n                              className={`text-gray-300 flex flex-row items-center gap-2 text-right ml-2`}\n                            >\n                              <MdPauseCircleFilled className=\"text-4xl\" />\n                            </div>\n                          </div>\n                        )}\n                      {this.props.candidateExam.user_exams_done.find(\n                        (itm) => itm.course === item.course_id\n                      ) === undefined &&\n                        this.props.findExam(item.course_id) !== null &&\n                        this.props.findExam(item.course_id)?.id !==\n                          undefined && (\n                          <div className=\"flex flex-row gap-2 items-center\">\n                            <div\n                              className={`text-blue-600 flex flex-row items-center gap-2 text-right ml-2 animate-ping`}\n                            >\n                              <HiInformationCircle className=\"text-4xl\" />\n                            </div>\n                          </div>\n                        )}\n                      {this.props.candidateExam.user_exams_done.find(\n                        (itm) => itm.course === item.course_id\n                      ) === undefined &&\n                        (this.props.findExam(item.course_id) === null ||\n                          this.props.findExam(item.course_id)?.id ===\n                            undefined) && (\n                          <div className=\"flex flex-row gap-2 items-center\">\n                            <div\n                              className={`text-gray-300 group-hover:text-white flex flex-row items-center gap-2 text-right ml-2`}\n                            >\n                              <RiCheckboxBlankCircleFill className=\"text-4xl\" />\n                            </div>\n                          </div>\n                        )}\n                      <div className=\"flex flex-col\">\n                        <div className={`font-bold text-gray-600 truncate`}>\n                          {item.course_name}\n                        </div>\n                        <div className=\"flex flex-row justify-start items-center gap-2\">\n                          <span className=\"text-gray-500 text-xs\">\n                            Exam date:{\" \"}\n                          </span>\n                          <div className=\"flex flex-row items-center gap-2\">\n                            <span className=\"font-bold text-gray-800 text-sm\">\n                              {DATE(\n                                this.props.findExam(item.course_id)!.exam_date,\n                                \"DD/MM/YYYY\"\n                              )}\n                            </span>\n                            <span\n                              className={`bg-gray-100 text-gray-800 font-bold px-2 py-1 rounded-full text-sm`}\n                            >\n                              {this.props.findExam(item.course_id)!.start_time}\n                            </span>\n                            <span\n                              className={`bg-gray-100 text-gray-800 font-bold px-2 py-1 rounded-full text-sm underline`}\n                            >\n                              {this.props.candidateExam.user_exams_done.find(\n                                (x) => x.course === item.course_id\n                              ) !== undefined\n                                ? validateExamDate(\n                                    this.props.candidateExam.user_exams_done.find(\n                                      (x) => x.course === item.course_id\n                                    )!.exam_date,\n                                    this.props.candidateExam.user_exams_done.find(\n                                      (x) => x.course === item.course_id\n                                    )!.exam_start_time,\n                                    this.props.candidateExam.user_exams_done.find(\n                                      (x) => x.course === item.course_id\n                                    )!.exam_end_time\n                                  ) === ExamTimeStatus.Expired &&\n                                  (this.props.candidateExam.user_exams_done.find(\n                                    (x) => x.course === item.course_id\n                                  )?.user_status === UserExamStatus.Editing\n                                    ? \"Not submitted\"\n                                    : this.props.candidateExam.user_exams_done.find(\n                                        (x) => x.course === item.course_id\n                                      )?.user_status === UserExamStatus.Paused)\n                                  ? \"Paused\"\n                                  : this.props.candidateExam.user_exams_done.find(\n                                      (x) => x.course === item.course_id\n                                    )?.user_status\n                                : \"\"}\n                            </span>\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                    {/* Second col */}\n                    <div className=\"col-span-12 md:col-span-6 lg:col-span-4 flex flex-col items-start justify-center\">\n                      {this.props.selectedExams === null ? (\n                        \"\"\n                      ) : this.props.selectedExams.find(\n                          (itm) => itm.course_id === item.course_id\n                        ) !== undefined ? (\n                        <>\n                          <div className=\"flex flex-row justify-start items-center gap-2\">\n                            <span className=\"text-gray-500 text-xs\">\n                              Proctoring type:{\" \"}\n                            </span>\n                            <span className=\"text-gray-700 font-bold text-sm\">\n                              {this.props.selectedExams === null\n                                ? \"\"\n                                : this.props.selectedExams.find(\n                                    (itm) => itm.course_id === item.course_id\n                                  ) !== undefined &&\n                                  this.props.selectedExams.find(\n                                    (itm) => itm.course_id === item.course_id\n                                  )?.proctoring_type}\n                            </span>\n                          </div>\n                          <div className=\"flex flex-col justify-center items-start gap-2\">\n                            {/* <span className=\"text-gray-500 text-xs\">\n                              Exam location:{\" \"}\n                            </span> */}\n                            <span className={`text-gray-700 font-bold text-sm`}>\n                              Center:{\" \"}\n                              {this.props.selectedExams === null ? (\n                                \"\"\n                              ) : this.props.selectedExams.find(\n                                  (itm) => itm.course_id === item.course_id\n                                ) !== undefined ? (\n                                this.props.selectedExams.find(\n                                  (itm) => itm.course_id === item.course_id\n                                )?.center_name\n                              ) : (\n                                <span className=\"italic text-xs\">\n                                  No location selected\n                                </span>\n                              )}\n                            </span>\n                            <span className={`text-gray-700 font-bold text-sm`}>\n                              Room:{\" \"}\n                              {this.props.selectedExams === null ? (\n                                \"\"\n                              ) : this.props.selectedExams.find(\n                                  (itm) => itm.course_id === item.course_id\n                                ) !== undefined ? (\n                                this.props.selectedExams.find(\n                                  (itm) => itm.course_id === item.course_id\n                                )?.room_number === 0 ? (\n                                  <span className=\"bg-yellow-100 text-yellow-700 font-bold px-2 py-1 rounded\">\n                                    Waiting room, you are advised to choose\n                                    another center\n                                  </span>\n                                ) : (\n                                  <span className=\"text-blue-600 bg-blue-100 px-2 py-1 rounded\">\n                                    No:{\" \"}\n                                    {\n                                      this.props.selectedExams.find(\n                                        (itm) =>\n                                          itm.course_id === item.course_id\n                                      )?.room_number\n                                    }\n                                  </span>\n                                )\n                              ) : (\n                                <span className=\"italic text-xs\">\n                                  No location selected\n                                </span>\n                              )}\n                            </span>\n                          </div>\n                        </>\n                      ) : (\n                        <div className=\"flex flex-row gap-2 items-center justify-start\">\n                          <RiErrorWarningLine className=\"text-xl text-yellow-700\" />\n                          <span className=\"text-yellow-700 italic text-sm\">\n                            No location selected\n                          </span>\n                        </div>\n                      )}\n                    </div>\n                    {/* Third col */}\n                    <div className=\"col-span-12 md:col-span-12 lg:col-span-4 items-center justify-start lg:justify-end\">\n                      {this.props.selectedExams === null ? (\n                        \"\"\n                      ) : this.props.selectedExams.find(\n                          (itm) => itm.course_id === item.course_id\n                        ) !== undefined ? (\n                        <div className=\"flex flex-row justify-start md:justify-end items-center gap-2\">\n                          {this.props.loadingExams === true ||\n                          this.props.loadingExamsDone === true ? (\n                            <div className=\"text-gray-500 font-bold bg-gray-100 text-sm rounded px-3 py-2\">\n                              Checking...\n                            </div>\n                          ) : (\n                            this.props.candidateExam.user_exams_done.find(\n                              (itm) => itm.course === item.course_id\n                            ) === undefined && (\n                              <div\n                                onClick={() => {\n                                  this.setState({\n                                    selectedCourse: item,\n                                    centersModal: true,\n                                  });\n                                  this.props.setMaxExamModal(true);\n                                }}\n                                className=\"btn text-blue-600 border border-white cursor-pointer group-hover:bg-blue-600 hover:bg-blue-800 group-hover:text-white bg-blue-100 text-sm w-40 text-center\"\n                              >\n                                Change location\n                              </div>\n                            )\n                          )}\n                        </div>\n                      ) : (\n                        <div className=\"flex flex-row justify-start md:justify-end items-center gap-2\">\n                          {this.props.candidateExam.user_exams_done.find(\n                            (itm) => itm.course === item.course_id\n                          ) === undefined && (\n                            <div\n                              onClick={() =>\n                                this.setState({\n                                  selectedCourse: item,\n                                  centersModal: true,\n                                })\n                              }\n                              className=\"btn cursor-pointer bg-yellow-700 hover:bg-yellow-50 border border-yellow-700 hover:text-yellow-700 text-white text-sm w-36 text-center\"\n                            >\n                              Choose location\n                            </div>\n                          )}\n                        </div>\n                      )}\n                      {this.props.candidateExam.user_exams_done.find(\n                        (itm) => itm.course === item.course_id\n                      ) !== undefined && (\n                        // this.props.candidateExam.user_exams_done.find(\n                        //   (itm) => itm.course === item.course_id\n                        // )?.user_status !== UserExamStatus.Editing &&\n                        <div className=\"flex flex-row gap-2 items-center justify-end h-full\">\n                          <div\n                            className={`text-blue-600 flex flex-row items-center gap-2 text-right ml-2`}\n                          >\n                            <div className=\"flex flex-col gap-0\">\n                              <span className=\"text-sm\">Marks</span>\n                              <span className=\"text-lg font-bold -mt-1\">\n                                {this.props.candidateExam.user_exams_done\n                                  .find((itm) => itm.course === item.course_id)\n                                  ?.total_marks.toFixed(2)}\n                                %\n                              </span>\n                            </div>\n                            <div\n                              onClick={() =>\n                                this.viewMarksDetailsFn(\n                                  this.props.candidateExam.user_exams_done.find(\n                                    (itm) => itm.course === item.course_id\n                                  )!\n                                )\n                              }\n                              className=\"btn bg-blue-100 hover:bg-blue-200 cursor-pointer text-blue-700 hover:text-blue-900\"\n                            >\n                              Details\n                            </div>\n                          </div>\n                        </div>\n                      )}\n                    </div>\n                  </div>\n                </div>\n              ))\n            )}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default ExamsDone;\n","import React, { Component } from \"react\";\n\nimport { Fragment } from \"react\";\nimport { MdClose, MdHistory } from \"react-icons/md\";\nimport { Link, Redirect } from \"react-router-dom\";\nimport ChooseExamCenter, {\n  LocationTableInterface,\n} from \"../Application/ExamCenter/ChooseExamCenter\";\nimport { connect } from \"react-redux\";\nimport {\n  Auth,\n  loadExam,\n  examDataInterface,\n  PrepareExamsStoreInterface,\n  loadExamsList,\n  LocationsDataStoreInterface,\n  loadAllLocationsData,\n  setSelectedLocationData,\n  applicationPeriodsStoreInterface,\n  loadApplicationPeriods,\n  candidateExamStoreInterface,\n  setSelectedCandidateExam,\n  courseStoreInterface,\n  loadCourses,\n  setSelectedCourse,\n  InitializeExamDetails,\n  InitialExamDetails,\n  setSelectedPeriod,\n  setSelectedPosition,\n  positionsStoreInterface,\n  loadExamsDone,\n} from \"../../actions\";\nimport { StoreState } from \"../../reducers\";\nimport Loading from \"../../components/Loading/Loading\";\nimport {\n  ExamInterface,\n  examStatus,\n  UserExamStatus,\n} from \"../../interfaces/exam\";\nimport {\n  CandidateClaimInterface,\n  course,\n  PlansTypeKeys,\n  PositionAPI,\n  PositionAPICourse,\n} from \"../../interfaces/index\";\nimport {\n  applicationExamAPI,\n  applicationHistory,\n  ApplicationPeriodGet,\n  ApplicationStates,\n  GetApplicationsAPI,\n} from \"../../interfaces/application\";\nimport { sentExamInterface } from \"../Application/ExamCenter/ExamCenter\";\nimport { BsFileEarmarkText } from \"react-icons/bs\";\nimport { IoMdTrash } from \"react-icons/io\";\nimport ApplicationHistory from \"./ApplicationHistory/ApplicationHistory\";\nimport ExamDetails from \"./ExamDetails/ExamDetails\";\nimport { CheckIfExamDone, findTotalMarks } from \"../../utils/question_bank\";\nimport PreparedExams from \"./ExamStatus/PreparedExams\";\nimport ActiveExams from \"./ExamStatus/ActiveExams\";\nimport ExamsDone from \"./ExamStatus/ExamsDone\";\nimport { IoHandLeftSharp } from \"react-icons/io5\";\nimport { isClaimAllowed } from \"../Claimings/Candidate/ClaimForm\";\nimport ClaimFormComponent from \"../../components/ClaimForm/ClaimFormComponent\";\nimport { ClaimingReducerType } from \"../../reducers/claiming\";\nimport { getMyClaims } from \"../../actions/claiming\";\nimport { ExamDoneDetailsAnswers } from \"../CandidateExams/CandidateExams\";\nimport CandidateAnswersDetails from \"../../components/AnswersDetails/CandidateAnswersDetails\";\n\ninterface PostExamsProps {\n  doExam: examDataInterface;\n  auth: Auth;\n  loadExam: (user_id: string, exam: ExamInterface) => void;\n  selectedPosition: PositionAPI;\n  selectedExams: applicationExamAPI[] | null;\n  selected_application: string | null;\n  updateLocation: (application_id: string, exams: sentExamInterface[]) => void;\n  changeLocationError: string | null;\n  loading: boolean;\n  incrementIncomplete: () => void;\n  applicationHistory: applicationHistory[] | undefined;\n  deleteApplication: (id: string) => void;\n  selectedApplicationDetails: GetApplicationsAPI | null;\n  locationsData: LocationsDataStoreInterface;\n  loadAllLocationsData: (callback: (loading: boolean) => void) => void;\n  setSelectedLocationData: (locationData: LocationTableInterface) => void;\n  periods: applicationPeriodsStoreInterface;\n  loadApplicationPeriods: (callback: (loading: boolean) => void) => void;\n  candidateExam: candidateExamStoreInterface;\n  setSelectedCandidateExam: (selected_exam: InitialExamDetails | null) => void;\n  course: courseStoreInterface;\n  loadCourses: (callback: (loading: boolean) => void) => void;\n  setSelectedCourse: (course: course | null) => void;\n  InitializeExamDetails: (\n    periodId: string,\n    courseId: string,\n    district_id: string,\n    center_id: string,\n    room_id: string,\n    position: PositionAPI,\n    start_exam: boolean,\n    callback: (loading: boolean) => void\n  ) => void;\n  setSelectedPeriod: (period: ApplicationPeriodGet) => void;\n  positions: positionsStoreInterface;\n  setSelectedPosition: (position: PositionAPI) => void;\n  loadExamsDone: (\n    periodId: string,\n    userId: string,\n    callback: (loading: boolean) => void\n  ) => void;\n  setMaxExamModal: (status: boolean) => void;\n  setDisplayDetailsModal: (status: boolean) => void;\n  claiming: ClaimingReducerType;\n  getMyClaims: Function;\n  setDoingExam: (status: boolean) => void;\n  doing_exam: boolean;\n}\ninterface PostExamsState {\n  appointmentDetailsModal: {\n    status: boolean;\n    item: InitialExamDetails | null;\n  };\n  redirect: boolean;\n  displayResults: boolean;\n  changeLocation: {\n    status: boolean;\n    location: ExamInterface | null;\n  };\n  centersModal: boolean;\n  selectedCourse: course | null;\n  selectedLocation: applicationExamAPI | null;\n  applicationHistoryState: boolean;\n  loading: boolean;\n  loadingExams: boolean;\n  loadingExamsDone: boolean;\n  claim: boolean;\n  selectedExamDetails: ExamDoneDetailsAnswers | null;\n}\n\nclass _PostExams extends Component<PostExamsProps, PostExamsState> {\n  constructor(props: PostExamsProps) {\n    super(props);\n\n    this.state = {\n      appointmentDetailsModal: {\n        status: false,\n        item: null,\n      },\n      redirect: false,\n      displayResults: false,\n      changeLocation: {\n        status: false,\n        location: null,\n      },\n      centersModal: false,\n      selectedCourse: null,\n      selectedLocation: null,\n      applicationHistoryState: false,\n      loading: false,\n      loadingExams: false,\n      loadingExamsDone: true,\n      claim: false,\n      selectedExamDetails: null,\n    };\n  }\n\n  renderExam = (user_id: string, exam: ExamInterface) => {\n    exam.status = examStatus.Editing;\n    this.props.loadExam(user_id, exam);\n    this.setState({ redirect: true });\n  };\n\n  setClaim = (status: boolean) => {\n    this.setState({ claim: status });\n  };\n\n  closeModal = () => {\n    this.setState({ centersModal: false });\n    this.props.setMaxExamModal(false);\n  };\n\n  updateLocationFunction = (exams: sentExamInterface[]) => {\n    if (this.props.selected_application !== null) {\n      this.props.updateLocation(this.props.selected_application, exams);\n    }\n  };\n\n  setLoading = (status: boolean) => {\n    this.setState({ loading: status });\n  };\n  setLoadingExams = (status: boolean) => {\n    this.setState({ loadingExams: status });\n  };\n  setLoadingExamsDone = (status: boolean) => {\n    this.setState({ loadingExamsDone: status });\n  };\n\n  showTotalMarks = (position: PositionAPI): boolean => {\n    for (let item of position.courses) {\n      let test = this.props.candidateExam.user_exams_done.find(\n        (itm) => itm.course === item.course_id\n      );\n      if (test !== undefined) {\n        if (\n          test.user_status === UserExamStatus.Paused ||\n          test.user_status === UserExamStatus.Editing\n        ) {\n          return false;\n        }\n      }\n    }\n    return true;\n  };\n\n  numberOfIncomplete = (\n    exams: sentExamInterface[],\n    courses: {\n      course_name: string;\n      course_code: string;\n      description: string;\n      school_levels: string[];\n      course_id: string;\n    }[]\n  ) => {\n    let count: number = 0;\n    for (let i in courses) {\n      if (\n        exams.filter((item) => item.course_id === courses[i].course_id)\n          .length === 0\n      ) {\n        count = count + 1;\n      }\n    }\n    return count;\n  };\n\n  findLocation = (\n    course_id: string,\n    course_name: string,\n    course_code: string,\n    location: LocationTableInterface,\n    exam_id: string\n  ) => {\n    return this.updateLocationFunction([\n      {\n        course_id: course_id,\n        proctoring_type: \"Center\",\n        center_id: location.center_id,\n        district_id: location.district_id,\n      },\n    ]);\n  };\n\n  findExam = (courseId: string) => {\n    if (this.props.candidateExam.user_exams_temp !== null) {\n      let current_temp = this.props.candidateExam.user_exams_temp.find(\n        (itm) => itm.course === courseId\n      );\n      let testDone = this.props.candidateExam.user_exams_done.find(\n        (itm) => itm.course === courseId\n      );\n      if (\n        current_temp !== undefined &&\n        (testDone === undefined ||\n          testDone.user_status === UserExamStatus.Editing ||\n          testDone.user_status === UserExamStatus.Paused ||\n          testDone.user_status === UserExamStatus.Done ||\n          testDone.user_status === UserExamStatus.Removed)\n      ) {\n        return current_temp;\n      }\n    }\n    return null;\n  };\n\n  findCourse = (course_id: string): applicationExamAPI | null => {\n    if (this.props.selectedExams !== null) {\n      let x: applicationExamAPI | null | undefined =\n        this.props.selectedExams.find(\n          (itm) =>\n            this.state.appointmentDetailsModal && itm.course_id === course_id\n        );\n      if (x !== undefined && x !== null) {\n        return x;\n      }\n    }\n    return null;\n  };\n\n  pendingCourses = () => {\n    let count = 0;\n    for (let course of this.props.selectedPosition.courses) {\n      if (this.props.candidateExam.user_exams_temp !== null) {\n        // let current_temp = this.props.candidateExam.user_exams_temp.find(itm => itm.course === course.course_id);\n        let testDone = this.props.candidateExam.user_exams_done.find(\n          (itm) => itm.course === course.course_id\n        );\n        if (testDone === undefined) {\n          count = count + 1;\n        }\n      }\n    }\n    return count;\n  };\n\n  changeLocation = (item: PositionAPICourse) => {\n    this.setState({ selectedCourse: item, centersModal: true });\n    this.props.setMaxExamModal(true);\n  };\n\n  InitializationFn = () => {\n    if (\n      this.props.periods.selected_period !== null &&\n      this.props.selectedPosition !== null\n    ) {\n      this.props.loadExamsDone(\n        this.props.periods.selected_period.session_plan_id,\n        this.props.auth.user.user_id,\n        this.setLoadingExamsDone\n      );\n      // if (this.state.loadingExamsDone === false) {\n      for (let course of this.props.selectedPosition.courses) {\n        let testDone = this.props.candidateExam.user_exams_temp.find(\n          (itm) => itm.course === course.course_id\n        );\n        if (testDone === undefined) {\n          let center_id = this.props.selectedExams?.find(\n            (itm) => itm.course_id === course.course_id\n          );\n          if (center_id !== undefined) {\n            this.props.setSelectedCourse(course);\n            return this.props.InitializeExamDetails(\n              this.props.periods.selected_period.session_plan_id,\n              course.course_id,\n              center_id.district_id,\n              center_id.center_id,\n              center_id.room_id,\n              this.props.selectedPosition,\n              false,\n              this.setLoadingExams\n            );\n          }\n        }\n      }\n      // }\n    }\n  };\n\n  componentDidMount = () => {\n    this.props.loadApplicationPeriods(this.setLoading);\n    if (\n      this.props.course.courses === null ||\n      this.props.course.courses.length === 0\n    ) {\n      this.props.loadCourses(this.setLoading);\n    }\n    this.InitializationFn();\n    if (this.props.doExam.exam_answers) {\n      if (this.props.doExam.exam_answers.status === examStatus.Editing) {\n        this.setState({ redirect: true });\n      }\n    }\n    if (\n      this.props.claiming.myClaims === null &&\n      this.props.periods.selected_period !== null\n    ) {\n      this.props.getMyClaims(\n        this.props.auth.user.user_id,\n        this.props.periods.selected_period.session_plan_id,\n        (status: boolean, msg: string, data?: CandidateClaimInterface[]) => {\n          this.setState({ loading: status });\n          if (msg !== \"\") {\n            alert(msg);\n          }\n        }\n      );\n    }\n  };\n\n  render() {\n    if (\n      this.props.candidateExam.selected_exam_id !== null &&\n      this.props.candidateExam.selected_exam_details !== null &&\n      (this.props.candidateExam.doing_exam === true ||\n        this.props.doing_exam === true)\n    ) {\n      return <Redirect to=\"/do-exam\" />;\n    }\n    if (\n      this.state.redirect === true &&\n      (this.props.candidateExam.doing_exam === true ||\n        this.props.doing_exam === true)\n    ) {\n      return <Redirect to=\"/do-exam\" />;\n    }\n    if (\n      this.props.loading === true ||\n      this.state.loadingExams === true ||\n      this.state.loadingExamsDone === true\n    ) {\n      return (\n        <div className=\"bg-white border my-4 mx-4 rounded px-4 py-4 flex flex-col\">\n          <span className=\"mx-4 animate-pulse\">Loading, Please wait...</span>\n          <Loading />\n        </div>\n      );\n    }\n    return this.props.selectedExams === null ? (\n      \"No result found!\"\n    ) : (\n      <Fragment>\n        {this.state.selectedExamDetails !== null ? (\n          <>\n            <div className=\"animate__animated animate__fadeInUp animate__faster mt-2 mx-2 rounded-t-md border border-blue-300\">\n              <div className=\"flex flex-row gap-4 items-center justify-between bg-blue-100 py-2 px-2 mb-2\">\n                <div className=\"flex flex-col w-full\">\n                  <div className=\"flex flex-row gap-2 items-center justify-between w-full pl-2\">\n                    <span className=\"font-bold text-xl text-gray-800\">\n                      Exam answers details\n                    </span>\n                    <div className=\"bg-white hover:text-yellow-700 hover:bg-white rounded-full p-1 h-10 w-10 border-2 border-white hover:border-yellow-600 flex items-center justify-center\">\n                      <MdClose\n                        className=\"cursor-pointer font-extrabold text-3xl\"\n                        onClick={() => {\n                          this.setState({\n                            selectedExamDetails: null,\n                          });\n                        }}\n                      />\n                    </div>\n                  </div>\n                </div>\n              </div>\n              <CandidateAnswersDetails\n                exam_id={this.state.selectedExamDetails}\n                showAnswers={false}\n              />\n            </div>\n          </>\n        ) : this.state.appointmentDetailsModal.status === true &&\n          this.state.appointmentDetailsModal.item !== null ? (\n          <>\n            <div className=\"animate__animated animate__fadeInUp animate__faster mt-2 mx-2 rounded-t-md border border-blue-300\">\n              <div className=\"flex flex-row gap-4 items-center justify-between bg-blue-100 py-2 px-2 mb-2\">\n                <div className=\"flex flex-row gap-2 items-center justify-between w-full pl-2\">\n                  <span className=\"font-bold text-xl text-gray-800\">\n                    Exam:{\" \"}\n                    {this.state.appointmentDetailsModal.item !== null && (\n                      <>\n                        {\n                          this.findCourse(\n                            this.state.appointmentDetailsModal.item!.course\n                          )?.course_name\n                        }\n                      </>\n                    )}\n                  </span>\n                  <div className=\"bg-white hover:text-yellow-700 hover:bg-white rounded-full p-1 h-10 w-10 border-2 border-white hover:border-yellow-600 flex items-center justify-center\">\n                    <MdClose\n                      className=\"cursor-pointer font-extrabold text-3xl\"\n                      onClick={() =>\n                        this.setState({\n                          appointmentDetailsModal: {\n                            status: false,\n                            item: null,\n                          },\n                          displayResults: false,\n                        })\n                      }\n                    />\n                  </div>\n                </div>\n              </div>\n              {this.findExam(this.state.appointmentDetailsModal.item.course) ===\n              null ? (\n                <div className=\"text-yellow-700 font-bold text-center text-3xl bg-yellow-50 border border-yellow-200 rounded px-4 py-4 mx-4 my-4\">\n                  No exam found for selected course\n                </div>\n              ) : this.props.periods.applicationPeriods &&\n                (this.props.periods.applicationPeriods.find(\n                  (itm) =>\n                    this.state.appointmentDetailsModal.item &&\n                    itm.session_plan_id ===\n                      this.state.appointmentDetailsModal.item.period\n                )?.is_active === false ||\n                  this.props.periods.applicationPeriods.find(\n                    (itm) =>\n                      this.state.appointmentDetailsModal.item &&\n                      itm.session_plan_id ===\n                        this.state.appointmentDetailsModal.item.period\n                  )?.is_active === undefined) ? (\n                <div className=\"text-yellow-700 font-bold text-center text-3xl bg-yellow-50 border border-yellow-200 rounded px-4 py-4 mx-4 my-4 flex flex-col items-center\">\n                  <div>No exam for the selected period</div>\n                  <div\n                    onClick={() =>\n                      this.props.loadApplicationPeriods(this.setLoading)\n                    }\n                    className=\"btn bg-white text-gray-700 w-max text-base border border-gray-700 mt-4 cursor-pointer\"\n                  >\n                    Reload\n                  </div>\n                </div>\n              ) : (\n                <ExamDetails\n                  locationDetails={this.props.selectedExams.find(\n                    (itm) =>\n                      this.state.appointmentDetailsModal.item &&\n                      itm.course_id ===\n                        this.state.appointmentDetailsModal.item.course\n                  )}\n                  examDetails={this.findExam(\n                    this.state.appointmentDetailsModal.item.course\n                  )}\n                  locationsData={this.props.locationsData}\n                  loadAllLocationsData={this.props.loadAllLocationsData}\n                  setSelectedLocationData={this.props.setSelectedLocationData}\n                  periods={this.props.periods}\n                  loadApplicationPeriods={this.props.loadApplicationPeriods}\n                  candidateExam={this.props.candidateExam}\n                  setSelectedCandidateExam={this.props.setSelectedCandidateExam}\n                />\n              )}\n            </div>\n          </>\n        ) : this.state.centersModal === true &&\n          this.state.selectedCourse !== null ? (\n          <div className=\"animate__animated animate__fadeInUp animate__faster mt-2 mx-2 rounded-t-md border border-blue-300\">\n            <div className=\"flex flex-row gap-4 items-center justify-between bg-blue-100 py-2 px-2 mb-2\">\n              <div className=\"flex flex-col w-full\">\n                <div className=\"flex flex-row gap-2 items-center justify-between w-full pl-2\">\n                  <span className=\"font-bold text-xl text-gray-800\">\n                    Change exam location\n                  </span>\n                  <div className=\"bg-white hover:text-yellow-700 hover:bg-white rounded-full p-1 h-10 w-10 border-2 border-white hover:border-yellow-600 flex items-center justify-center\">\n                    <MdClose\n                      className=\"cursor-pointer font-extrabold text-3xl\"\n                      onClick={() => {\n                        this.setState({\n                          centersModal: false,\n                          selectedCourse: null,\n                        });\n                      }}\n                    />\n                  </div>\n                </div>\n              </div>\n            </div>\n            <ChooseExamCenter\n              positionCourses={this.state.selectedCourse}\n              addLocation={this.findLocation}\n              closeModal={this.closeModal}\n            />\n          </div>\n        ) : this.state.applicationHistoryState === true ? (\n          this.props.applicationHistory === undefined ? (\n            <div className=\"text-yellow-700 font-bold text-2xl text-center\">\n              No application history found!\n            </div>\n          ) : (\n            <div className=\"animate__animated animate__fadeInUp animate__faster bg-white mt-2 mx-2 rounded-t-md border border-blue-300\">\n              <div className=\"flex flex-row gap-4 items-center justify-between bg-blue-100 py-2 px-2\">\n                <div className=\"flex flex-row gap-2 items-center justify-between w-full pl-2\">\n                  <span className=\"font-bold text-xl text-gray-800\">\n                    Application history\n                  </span>\n                  <div className=\"bg-white hover:text-yellow-700 hover:bg-white rounded-full p-1 h-10 w-10 border-2 border-white hover:border-yellow-600 flex items-center justify-center\">\n                    <MdClose\n                      className=\"cursor-pointer font-extrabold text-3xl\"\n                      onClick={() =>\n                        this.setState({ applicationHistoryState: false })\n                      }\n                    />\n                  </div>\n                </div>\n              </div>\n              <ApplicationHistory\n                applicationHistory={this.props.applicationHistory}\n              />\n            </div>\n          )\n        ) : (\n          <div className=\"\">\n            <div className=\"px-2 md:py-2\">\n              <div className=\"flex flex-col md:flex-row justify-between items-center md:items-center\">\n                <div className=\"flex flex-row items-center gap-3 mb-3 pt-4 lg:pt-0\">\n                  <span className=\"bg-blue-50  text-gray-600 font-base rounded-md px-3 py-1 mt-0\">\n                    Status:{\" \"}\n                    <span className=\"font-extrabold text-blue-700 underline\">\n                      {\n                        this.props.selectedApplicationDetails\n                          ?.application_status\n                      }\n                    </span>\n                  </span>\n                  <div\n                    onClick={() =>\n                      this.setState({ applicationHistoryState: true })\n                    }\n                    className=\"btn bg-gray-100 text-gray-600 border border-gray-300 text-sm flex flex-row items-center gap-2 cursor-pointer hover:border-blue-500 hover:bg-blue-50 hover:text-blue-600 md:mt-0\"\n                  >\n                    <MdHistory className=\"text-xl\" />\n                    <span>View application history</span>\n                  </div>\n                </div>\n                <div\n                  className={`grid ${\n                    this.pendingCourses() > 0 ? \"grid-cols-3\" : \"grid-cols-2\"\n                  } gap-4 w-full md:w-max bg-gray-100 md:bg-white p-2 md:p-0 rounded mb-2 md:mb-0`}\n                >\n                  <div className=\"col-span-1 flex justify-start md:justify-end\">\n                    <div className=\"flex flex-row items-center\">\n                      <div className=\"flex flex-col\">\n                        <span className=\"text-xs md:text-md text-gray-500 font-bold text-left md:text-right\">\n                          Total\n                        </span>\n                        <span className=\"text-xl md:text-xl font-bold text-gray-700 text-left md:text-right\">\n                          {this.props.selectedExams.length}\n                        </span>\n                      </div>\n                    </div>\n                  </div>\n                  {this.pendingCourses() > 0 && (\n                    <div className=\"col-span-1 flex justify-start md:justify-end\">\n                      <div className=\"flex flex-row items-center\">\n                        <div className=\"flex flex-col\">\n                          <span className=\"text-xs md:text-md text-gray-500 font-bold text-left md:text-right\">\n                            Pending\n                          </span>\n                          <span className=\"text-xl md:text-xl font-bold text-gray-700 text-left md:text-right\">\n                            {this.props.selectedPosition !== null &&\n                              this.pendingCourses()}\n                          </span>\n                        </div>\n                      </div>\n                    </div>\n                  )}\n                  <div className=\"col-span-1 flex justify-start md:justify-end\">\n                    <div className=\"flex flex-row items-center\">\n                      <div className=\"flex flex-col\">\n                        <span className=\"text-xs md:text-md text-gray-500 font-bold text-left md:text-right\">\n                          Total marks\n                        </span>\n                        {this.showTotalMarks(this.props.selectedPosition) ===\n                        true ? (\n                          // this.state.loadingExams === true || this.state.loadingExamsDone === true ? <span>Wait...</span> :\n                          <span className=\"text-xl md:text-xl font-bold text-gray-700 text-left md:text-right\">\n                            {parseFloat(\n                              findTotalMarks(\n                                this.props.selectedPosition.courses,\n                                this.props.candidateExam.user_exams_done\n                              )\n                            ) > 0\n                              ? (\n                                  parseFloat(\n                                    findTotalMarks(\n                                      this.props.selectedPosition.courses,\n                                      this.props.candidateExam.user_exams_done\n                                    )\n                                  ) / this.props.selectedPosition.courses.length\n                                ).toFixed(2)\n                              : 0}\n                            %\n                          </span>\n                        ) : (\n                          <div\n                            title=\"You can not view marks because one of your exams is not completed\"\n                            className=\"py-1 text-center bg-yellow-100 rounded w-max px-4 my-1\"\n                          >\n                            Hidden\n                          </div>\n                        )}\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n              <div className=\"font-bold flex flex-col md:flex-row items-start md:items-center justify-start md:justify-between gap-2\">\n                {this.props.selectedApplicationDetails &&\n                this.props.selectedApplicationDetails.application_status !==\n                  ApplicationStates.Rejected ? (\n                  <div className=\"text-xl flex flex-row items-center gap-2\">\n                    <BsFileEarmarkText className=\"text-2xl\" />\n                    <span>Exams list: </span>\n                  </div>\n                ) : (\n                  <div>\n                    {this.state.loadingExams === false &&\n                    this.state.loadingExamsDone === false &&\n                    CheckIfExamDone(\n                      this.props.selectedPosition.courses,\n                      this.props.candidateExam.user_exams_done\n                    ) === false &&\n                    this.props.periods.selected_period &&\n                    this.props.selected_application &&\n                    this.props.claiming.myClaims &&\n                    isClaimAllowed(\n                      this.props.claiming.myClaims,\n                      this.props.periods.selected_period.session_plan_id,\n                      this.props.selected_application\n                    ) === true ? (\n                      <div\n                        onClick={() => this.setClaim(!this.state.claim)}\n                        className=\"btn flex flex-row gap-2 items-center text-green-700 bg-green-50 cursor-pointer hover:bg-green-100 hover:text-green-900 border border-green-600 hover:border-green-800\"\n                      >\n                        <IoHandLeftSharp className=\"text-xl \" />\n                        <span className=\"text-sm\">Claim now</span>\n                      </div>\n                    ) : this.props.claiming.myClaims === null ? (\n                      <div>Loading...</div>\n                    ) : (\n                      this.props.claiming.myClaims.length > 0 && (\n                        <div\n                          onClick={() => this.setClaim(!this.state.claim)}\n                          className=\"btn flex flex-row gap-2 items-center text-white bg-blue-600 cursor-pointer hover:bg-blue-800\"\n                        >\n                          <IoHandLeftSharp className=\"text-xl \" />\n                          <span className=\"text-sm\">\n                            {this.state.claim === true\n                              ? \"Hide details\"\n                              : \"View claim details\"}\n                          </span>\n                        </div>\n                      )\n                    )}\n                  </div>\n                )}\n                {this.state.loadingExams === false &&\n                  this.state.loadingExamsDone === false &&\n                  CheckIfExamDone(\n                    this.props.selectedPosition.courses,\n                    this.props.candidateExam.user_exams_done\n                  ) === false && (\n                    <div\n                      onClick={() =>\n                        this.props.selected_application &&\n                        this.props.deleteApplication(\n                          this.props.selected_application\n                        )\n                      }\n                      className=\"btn flex flex-row gap-2 items-center text-red-700 bg-red-50 cursor-pointer hover:bg-red-100 hover:text-red-900\"\n                    >\n                      <IoMdTrash className=\"text-xl \" />\n                      <span className=\"text-sm\">Remove application</span>\n                    </div>\n                  )}\n              </div>\n              {this.state.claim === true &&\n                this.props.selected_application !== null && (\n                  <div className=\"bg-gray-100 mt-4 pt-2 rounded\">\n                    <ClaimFormComponent\n                      setFormState={this.setClaim}\n                      claim_type={PlansTypeKeys.APPLICATION}\n                      file_id={this.props.selected_application}\n                    />\n                  </div>\n                )}\n            </div>\n            {this.props.selectedApplicationDetails &&\n              this.props.selectedApplicationDetails.application_status !==\n                ApplicationStates.Rejected && (\n                <>\n                  <ActiveExams\n                    selectedPosition={this.props.selectedPosition}\n                    selectedExams={this.props.selectedExams}\n                    findExam={this.findExam}\n                    loadingExams={this.state.loadingExams}\n                    loadingExamsDone={this.state.loadingExamsDone}\n                    setMaxExamModal={this.props.setMaxExamModal}\n                    course={this.props.course}\n                    setSelectedCourse={this.props.setSelectedCourse}\n                    candidateExam={this.props.candidateExam}\n                    positions={this.props.positions}\n                    periods={this.props.periods}\n                    setSelectedPosition={this.props.setSelectedPosition}\n                    setSelectedCandidateExam={\n                      this.props.setSelectedCandidateExam\n                    }\n                    selectedApplicationDetails={\n                      this.props.selectedApplicationDetails\n                    }\n                    setDoingExam={this.props.setDoingExam}\n                    InitializeExamDetails={this.props.InitializeExamDetails}\n                    setLoadingExams={this.setLoadingExams}\n                  />\n                  <PreparedExams\n                    selectedPosition={this.props.selectedPosition}\n                    selectedExams={this.props.selectedExams}\n                    findExam={this.findExam}\n                    loadingExams={this.state.loadingExams}\n                    loadingExamsDone={this.state.loadingExamsDone}\n                    setMaxExamModal={this.props.setMaxExamModal}\n                    course={this.props.course}\n                    setSelectedCourse={this.props.setSelectedCourse}\n                    candidateExam={this.props.candidateExam}\n                    positions={this.props.positions}\n                    periods={this.props.periods}\n                    setSelectedPosition={this.props.setSelectedPosition}\n                    setSelectedCandidateExam={\n                      this.props.setSelectedCandidateExam\n                    }\n                    changeLocation={this.changeLocation}\n                    selectedApplicationDetails={\n                      this.props.selectedApplicationDetails\n                    }\n                    setDoingExam={this.props.setDoingExam}\n                    InitializeExamDetails={this.props.InitializeExamDetails}\n                    setLoadingExams={this.setLoadingExams}\n                  />\n                  <ExamsDone\n                    selectedPosition={this.props.selectedPosition}\n                    selectedExams={this.props.selectedExams}\n                    findExam={this.findExam}\n                    loadingExams={this.state.loadingExams}\n                    loadingExamsDone={this.state.loadingExamsDone}\n                    setMaxExamModal={this.props.setMaxExamModal}\n                    course={this.props.course}\n                    setSelectedCourse={this.props.setSelectedCourse}\n                    candidateExam={this.props.candidateExam}\n                    positions={this.props.positions}\n                    periods={this.props.periods}\n                    setSelectedPosition={this.props.setSelectedPosition}\n                    setSelectedCandidateExam={\n                      this.props.setSelectedCandidateExam\n                    }\n                    viewMarksDetails={(\n                      selectedExamDetails: ExamDoneDetailsAnswers\n                    ) => {\n                      this.setState({\n                        selectedExamDetails: selectedExamDetails,\n                      });\n                    }}\n                  />\n                </>\n              )}\n          </div>\n        )}\n      </Fragment>\n    );\n  }\n}\n\nconst mapStateToProps = ({\n  auth,\n  doExam,\n  prepareExam,\n  locationsData,\n  periods,\n  candidateExam,\n  course,\n  positions,\n  claiming,\n}: StoreState): {\n  auth: Auth;\n  doExam: examDataInterface;\n  prepareExam: PrepareExamsStoreInterface;\n  locationsData: LocationsDataStoreInterface;\n  periods: applicationPeriodsStoreInterface;\n  candidateExam: candidateExamStoreInterface;\n  course: courseStoreInterface;\n  positions: positionsStoreInterface;\n  claiming: ClaimingReducerType;\n} => {\n  return {\n    auth: auth,\n    doExam: doExam,\n    prepareExam: prepareExam,\n    locationsData: locationsData,\n    periods: periods,\n    candidateExam: candidateExam,\n    course: course,\n    positions: positions,\n    claiming: claiming,\n  };\n};\n\nconst PostExams = connect(mapStateToProps, {\n  loadExam,\n  loadExamsList,\n  loadAllLocationsData,\n  setSelectedLocationData,\n  loadApplicationPeriods,\n  setSelectedCandidateExam,\n  loadCourses,\n  setSelectedCourse,\n  InitializeExamDetails,\n  setSelectedPeriod,\n  setSelectedPosition,\n  loadExamsDone,\n  getMyClaims,\n})(_PostExams);\n\nexport default PostExams;\n","import React, { Component } from \"react\";\nimport { GetApplicationsAPI } from \"../../interfaces/application\";\nimport { CandidateInterface } from \"../../interfaces/candidatesInterfaces\";\nimport { PlacedCandidateStatus } from \"../../interfaces/marks_publication\";\nimport { UserInfoInterface } from \"../../shared/interfaces\";\n\ninterface CandidatePlacementCheckProps {\n  position: GetApplicationsAPI;\n  user: CandidateInterface;\n}\ninterface CandidatePlacementCheckState {\n  loading: boolean;\n}\ninterface SchoolItemPlacement {\n  _id: string;\n  school_name: string;\n  school_code: string;\n  province_id: string;\n  province_code: string;\n  district_id: {\n    _id: string;\n    district_name: string;\n  };\n  district_code: string;\n  sector_code: string;\n  sector_id: string;\n  school_status: string;\n  status: number;\n  createdAt: string;\n  updatedAt: string;\n}\nexport interface SchoolPlacementInterface {\n  n_id: string;\n  phone_number: string;\n  email: string;\n  user_info: UserInfoInterface;\n  placed: {\n    _id: string;\n    comment: string;\n    status: PlacedCandidateStatus;\n    waiting_list_id: string;\n    user_id: string;\n    school_id: string;\n    district_id: string;\n    position_id: string;\n    request_id: string;\n    createdAt: string;\n    updatedAt: string;\n    school: SchoolItemPlacement;\n    __v: number;\n  };\n}\n\n// interface CandidatePlacementSchool {}\n\nexport class CandidatePlacementCheck extends Component<\n  CandidatePlacementCheckProps,\n  CandidatePlacementCheckState\n> {\n  constructor(props: CandidatePlacementCheckProps) {\n    super(props);\n\n    this.state = {\n      loading: false,\n    };\n  }\n  setLoading = (state: boolean) => {\n    this.setState({ loading: state });\n  };\n\n  render() {\n    return <div>Candidate Placement check</div>;\n  }\n}\n\nexport default CandidatePlacementCheck;\n","import React, { Component, Fragment } from \"react\";\nimport { MdAdd } from \"react-icons/md\";\nimport { Link, Redirect } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport {\n  Auth,\n  initiateApplication,\n  removeLocation,\n  loadApplicationPeriods,\n  applicationPeriodsStoreInterface,\n  setSelectedPeriod,\n  System,\n  PushPopupAlert,\n  positionsStoreInterface,\n  loadAllPositions,\n  FC_Access,\n  CandidateApplicationsStoreInterface,\n  LoadCandidateApplications,\n  candidateExamStoreInterface,\n  InitializeExamDetails,\n  loadExamsDone,\n  setSelectedPosition,\n  setSelectedCourse,\n  courseStoreInterface,\n  setSelectedCandidateExam,\n  examDataInterface,\n  AddUserApplication,\n  RemoveUserApplication,\n  SelectUserApplication,\n  InitialExamDetails,\n} from \"../../actions\";\nimport { StoreState } from \"../../reducers\";\nimport {\n  applicationStoreInterface,\n  initialApplicationInterface,\n} from \"../../actions/application\";\nimport { ApplicationStepsTypes } from \"../Application/ApplicationSteps/ApplicationSteps\";\nimport {\n  applicationExamAPI,\n  ApplicationPeriodGet,\n  ApplicationStates,\n  ApplicationStatesDescription,\n  GetApplicationsAPI,\n  NoRoomsInterface,\n} from \"../../interfaces/application\";\nimport Exams from \"./Exams\";\nimport { course, PositionAPI } from \"../../interfaces/index\";\nimport axios from \"axios\";\nimport { API } from \"../../utils/api\";\nimport { sentExamInterface } from \"../Application/ExamCenter/ExamCenter\";\nimport Loading from \"../../components/Loading/Loading\";\nimport { AiOutlineFilter } from \"react-icons/ai\";\nimport { IoBriefcase, IoBriefcaseOutline } from \"react-icons/io5\";\nimport Modal, { ModalSize, Themes } from \"../../components/Modal/Modal\";\nimport {\n  SideNavigation,\n  MainItem,\n} from \"../../components/Navigation/SideNavigation\";\nimport { BsCaretRightFill } from \"react-icons/bs\";\nimport LoadingV2, { LoadingType } from \"../../components/Loading/LoadingV2\";\nimport { PopupAlertData } from \"../../components/Alert/Popup\";\nimport { PopupAlertTheme } from \"../../interfaces/popupAlert\";\nimport { RiFileForbidLine } from \"react-icons/ri\";\nimport { IoMdList } from \"react-icons/io\";\nimport NoResult, { NoResultThemes } from \"../../components/NoResult/NoResult\";\nimport ApplicationPeriods from \"../../components/ApplicationPeriods/ApplicationPeriods\";\nimport { DATE } from \"../../utils/functions\";\nimport { UserAccessList } from \"../../utils/auth_access\";\nimport { BiArrowBack } from \"react-icons/bi\";\nimport { InitializeExamsDone } from \"../../utils/question_bank\";\nimport { examStatus } from \"../../interfaces/exam\";\nimport CandidatePlacementCheck from \"../../components/CandidatePlacementCheck/CandidatePlacementCheck\";\n\ninterface ApplicationsDashboardState {\n  selectedPosition: PositionAPI | null;\n  selectedExams: applicationExamAPI[] | null;\n  applications: GetApplicationsAPI[] | [] | null;\n  selected_application: string | null;\n  noRoomsApplication: NoRoomsInterface[] | null | [];\n  loading: boolean;\n  applicationError: string | null;\n  number_of_incomplete: number;\n  applicationDetails: boolean;\n  selectedApplicationStatus: ApplicationStates | null;\n  showPeriodFilter: boolean;\n  maxExamModal: boolean;\n  loadingErr: string;\n  displayDetailsModal: boolean;\n  viewSchools: GetApplicationsAPI | null;\n  doing_exam: boolean;\n}\ninterface ApplicationsDashboardProps {\n  auth: Auth;\n  application: applicationStoreInterface;\n  periods: applicationPeriodsStoreInterface;\n  initiateApplication: (initial: initialApplicationInterface) => void;\n  removeLocation: (course_id: string) => void;\n  loadApplicationPeriods: (callback: (loading: boolean) => void) => void;\n  setSelectedPeriod: (period: ApplicationPeriodGet) => void;\n  system: System;\n  PushPopupAlert: (alert: PopupAlertData) => void;\n  positions: positionsStoreInterface;\n  loadAllPositions: (callback: (loading: boolean) => void) => void;\n  FC_Access: Function;\n  candidateApplications: CandidateApplicationsStoreInterface;\n  LoadCandidateApplications: (\n    user_id: string,\n    callback: (loading: boolean) => void\n  ) => void;\n  InitializeExamDetails: (\n    periodId: string,\n    courseId: string,\n    district_id: string,\n    center_id: string,\n    room_id: string,\n    position: PositionAPI,\n    start_exam: boolean,\n    callback: (loading: boolean) => void\n  ) => void;\n  loadExamsDone: (\n    periodId: string,\n    userId: string,\n    callback: (loading: boolean) => void\n  ) => void;\n  candidateExam: candidateExamStoreInterface;\n  setSelectedPosition: (position: PositionAPI) => void;\n  course: courseStoreInterface;\n  setSelectedCourse: (course: course | null) => void;\n  setSelectedCandidateExam: (selected_exam: InitialExamDetails | null) => void;\n  doExam: examDataInterface;\n  AddUserApplication: (application: GetApplicationsAPI) => void;\n  RemoveUserApplication: (application_id: string) => void;\n  SelectUserApplication: (application: GetApplicationsAPI | null) => void;\n}\n\nclass _ApplicationsDashboard extends Component<\n  ApplicationsDashboardProps,\n  ApplicationsDashboardState\n> {\n  constructor(props: ApplicationsDashboardProps) {\n    super(props);\n\n    this.state = {\n      selectedPosition: null,\n      selectedExams: null,\n      applications: null,\n      selected_application: null,\n      noRoomsApplication: null,\n      loading: false,\n      applicationError: null,\n      number_of_incomplete: 0,\n      applicationDetails: false,\n      selectedApplicationStatus: null,\n      showPeriodFilter: false,\n      maxExamModal: false,\n      loadingErr: \"\",\n      displayDetailsModal: false,\n      viewSchools: null,\n      doing_exam: false,\n    };\n  }\n\n  setLoading = (state: boolean) => {\n    this.setState({ loading: state });\n  };\n\n  filteredApplications = (\n    applications: GetApplicationsAPI[],\n    Status: ApplicationStates | null,\n    searchPeriod?: ApplicationPeriodGet | null\n  ) => {\n    let appl: GetApplicationsAPI[];\n    if (searchPeriod !== undefined && searchPeriod !== null) {\n      appl = applications.filter(\n        (itm) =>\n          itm.application_session.session_plan_id ===\n          searchPeriod.session_plan_id\n      );\n    } else {\n      appl = applications;\n    }\n    if (Status === null) {\n      return appl;\n    } else {\n      return appl.filter((item) => item.application_status === Status);\n    }\n  };\n\n  closeApplicationDetails = () => {\n    this.setState({ selected_application: null });\n    this.setState({ selectedPosition: null, selected_application: null });\n    this.setState({ selectedExams: null });\n    this.setState({ displayDetailsModal: false });\n  };\n\n  setDisplayDetailsModal = (status: boolean) => {\n    this.setState({ displayDetailsModal: status });\n  };\n\n  applicationStatuses = (\n    application: GetApplicationsAPI[]\n  ): { title: string; count: number; status: ApplicationStates }[] => {\n    let output: { title: string; count: number; status: ApplicationStates }[] =\n      [];\n    for (let i in ApplicationStatesDescription) {\n      output.push({\n        title: ApplicationStatesDescription[i].caption,\n        count: application.filter(\n          (itm) =>\n            itm.application_status === ApplicationStatesDescription[i].key\n        ).length,\n        status: ApplicationStatesDescription[i].key,\n      });\n    }\n    return output;\n  };\n\n  setMaxExamModal = (status: boolean) => {\n    this.setState({ maxExamModal: status });\n  };\n\n  LoadApplications = async () => {\n    this.setState({ loadingErr: \"\" });\n    this.setState({ number_of_incomplete: 0 });\n    if (this.props.auth.user.user_id) {\n      const selected_position = this.state.selectedPosition;\n      this.setState({ applications: null });\n      this.setState({ selectedPosition: null });\n      this.setState({ selectedExams: null });\n      let response: GetApplicationsAPI[] | null = null;\n      if (\n        this.props.candidateApplications.candidate_applications === null &&\n        this.props.auth.user\n      ) {\n        try {\n          const res = await axios.get<GetApplicationsAPI[]>(\n            `${API.APPLICATION}/application/${this.props.auth.user.user_id}`\n          );\n          // console.log(\"Applications list: \", res.data);\n          if (res.status === 200) {\n            response = res.data;\n            if (res.data.length === 0) {\n              response = [];\n            } else {\n              for (let application of response) {\n                this.props.AddUserApplication(application);\n              }\n            }\n          } else {\n            response = [];\n          }\n        } catch (error: any) {\n          response = [];\n          console.log(\"Appl Err: \", { ...error });\n        }\n      } else {\n        response = this.props.candidateApplications.candidate_applications;\n      }\n      this.setState({ applications: response });\n      if (response !== null) {\n        if (response.length > 0) {\n          // let done = false;\n          for (let i in response) {\n            let courses = response[i].position.courses;\n            let exams = response[i].exams;\n            if (\n              response[i].position.position_id ===\n              selected_position?.position_id\n            ) {\n              this.setState({ selectedPosition: response[i].position });\n              this.setState({ selectedExams: exams });\n            }\n            // Load Exams done:: need to be improved\n            // InitializeExamsDone(\n            //   this.props.periods.selected_period,\n            //   response[i].position,\n            //   this.props.candidateExam,\n            //   this.props.loadExamsDone,\n            //   this.props.auth.user.user_id,\n            //   this.setLoading,\n            //   response[i].exams,\n            //   this.props.InitializeExamDetails,\n            //   this.setLoading\n            // );\n            for (let x in courses) {\n              if (\n                exams.filter((itm) => itm.course_id === courses[x].course_id)\n                  .length === 0 &&\n                response[i].application_status === ApplicationStates.Incomplete\n              ) {\n                this.setState({\n                  selected_application: response[i].application_id,\n                });\n                this.setState({\n                  selectedPosition: response[i].position,\n                  selected_application: response[i].application_id,\n                });\n                this.setState({ selectedExams: response[i].exams });\n                this.setState({ displayDetailsModal: true });\n                this.incrementIncomplete();\n              }\n            }\n          }\n        } else {\n          this.props.LoadCandidateApplications(\n            this.props.auth.user.user_id,\n            this.setLoading\n          );\n        }\n      }\n    }\n  };\n\n  updateLocation = async (\n    application_id: string,\n    exams: sentExamInterface[]\n  ) => {\n    this.setState({ loading: true });\n    this.setState({ applicationError: null });\n    console.log(application_id);\n    for (let i in exams) {\n      try {\n        const res = await axios.post(\n          `${API.APPLICATION}/application/updatemissed`,\n          {\n            application_id: application_id,\n            exams: exams[i],\n          }\n        );\n        if (res.status === 200 && this.state.noRoomsApplication !== null) {\n          this.setState({\n            noRoomsApplication: this.state.noRoomsApplication?.filter(\n              (itm) => itm.course_id !== exams[i].course_id\n            ),\n          });\n        }\n        if (res.status === 200) {\n          this.props.LoadCandidateApplications(\n            this.props.auth.user.user_id,\n            this.setLoading\n          );\n          this.LoadApplications();\n          this.setState({ displayDetailsModal: false });\n          this.setState({ selectedPosition: null, selected_application: null });\n          this.setState({ selectedExams: null });\n          this.props.PushPopupAlert({\n            title: `Location updated successfully`,\n            description:\n              \"Location has updated successfully! You can continue to update before starting of the examination!\",\n            theme: PopupAlertTheme.success,\n          });\n        }\n      } catch (error: any) {\n        if (error.response) {\n          if (error.response.data) {\n            if (error.response.data.errors !== undefined) {\n              if (error.response.data.errors.length > 0) {\n                if (this.state.noRoomsApplication) {\n                  let newArr: sentExamInterface[];\n                  if (error.response.data.errors[0].field !== undefined) {\n                    newArr = this.state.noRoomsApplication?.filter(\n                      (itm) =>\n                        itm.course_id ===\n                        error.response.data.errors[0].field.course_id\n                    );\n                    if (newArr !== undefined) {\n                      for (let i in newArr) {\n                        this.props.removeLocation(newArr[i].course_id);\n                      }\n                    }\n                  }\n                }\n                this.setState({\n                  applicationError: error.response.data.errors[0].message,\n                });\n                this.props.PushPopupAlert({\n                  title: error.response.data.errors[0].message,\n                  theme: PopupAlertTheme.danger,\n                });\n              }\n            } else {\n              this.props.PushPopupAlert({\n                title: \"Something went wrong! Please try again\",\n                theme: PopupAlertTheme.danger,\n              });\n              this.setState({\n                applicationError: \"Something went wrong! Please try again\",\n              });\n            }\n          }\n        }\n        console.log(\"Change error: \", { ...error });\n      }\n    }\n    if (this.state.selectedPosition) {\n      this.setState({ selectedPosition: this.state.selectedPosition });\n    }\n    this.setState({ selected_application: application_id });\n    this.setState({ loading: false });\n  };\n\n  incrementIncomplete = () => {\n    this.setState({\n      number_of_incomplete: this.state.number_of_incomplete + 1,\n    });\n  };\n\n  changeLoadingState = (state: boolean) => {\n    this.setState({ loading: state });\n  };\n\n  deleteApplication = async (id: string) => {\n    if (\n      window.confirm(\"Are you sure do you want to delete this application?\") &&\n      id\n    ) {\n      this.changeLoadingState(true);\n      try {\n        await axios.delete(`${API.APPLICATION}/application/${id}`);\n        this.props.RemoveUserApplication(id);\n        this.LoadApplications();\n        this.props.PushPopupAlert({\n          title: `Application deleted successfully!`,\n          theme: PopupAlertTheme.success,\n        });\n        this.setState({ selectedExams: null });\n      } catch (error: any) {\n        this.props.PushPopupAlert({\n          title: `Failed to delete application!`,\n          theme: PopupAlertTheme.warning,\n        });\n      }\n      this.changeLoadingState(false);\n    }\n  };\n\n  setShowFilterStatus = (status: boolean) => {\n    this.setState({ showPeriodFilter: status });\n  };\n\n  setDoingExam = (status: boolean) => {\n    this.setState({ doing_exam: status });\n  };\n\n  componentDidMount = () => {\n    this.props.loadApplicationPeriods(this.changeLoadingState);\n    this.LoadApplications();\n    this.props.loadAllPositions(this.changeLoadingState);\n    if (\n      this.props.application.apply === undefined ||\n      this.props.application.apply.currentStep === ApplicationStepsTypes.Step3\n    ) {\n      this.props.initiateApplication({\n        user_id: this.props.auth.user.user_id,\n        selectedPosition: null,\n        currentStep: ApplicationStepsTypes.Step1,\n        positions: null,\n        doTestStatus: {\n          status: false,\n        },\n        selectedLocation: [],\n      });\n    }\n    // if (this.props.candidateApplications.candidate_applications !== null) {\n    //   if (this.props.candidateApplications.candidate_applications.length > 0) {\n    //     if (this.state.selectedPosition === null) {\n    //       this.setState({ selectedPosition: this.props.candidateApplications.candidate_applications[0].position, selected_application: this.props.candidateApplications.candidate_applications[0].application_id })\n    //     }\n    //     if (this.state.selectedExams === null) {\n    //       this.setState({ selectedExams: this.props.candidateApplications.candidate_applications[0].exams })\n    //     }\n    //   }\n    // }\n  };\n  render() {\n    if (!FC_Access(this.props.auth, UserAccessList.MY_APPLICATION).view) {\n      return <Redirect to=\"/\" />;\n    }\n    if (\n      this.props.candidateExam.selected_exam_id !== null &&\n      this.props.candidateExam.selected_exam_details !== null &&\n      (this.props.candidateExam.doing_exam === true ||\n        this.state.doing_exam === true)\n    ) {\n      return <Redirect to=\"/do-exam\" />;\n    }\n    if (\n      this.props.doExam.exam_answers &&\n      (this.props.candidateExam.doing_exam === true ||\n        this.state.doing_exam === true)\n    ) {\n      if (\n        this.props.doExam.exam_answers.status === examStatus.Editing ||\n        this.props.doExam.exam_answers.status === examStatus.Paused\n      ) {\n        return <Redirect to=\"/do-exam\" />;\n      }\n    }\n    return (\n      <Fragment>\n        {this.state.selectedPosition !== null &&\n        this.state.selectedExams !== null &&\n        this.state.displayDetailsModal === true ? (\n          <div className=\"border-t border-gray-200 my-2 pb-2 bg-white rounded animate__animated animate__fadeInUp animate__faster -ml-2 mr-1\">\n            <div className=\"flex flex-col md:flex-row gap-4 items-center md:justify-between bg-blue-600 rounded-t py-2 px-2\">\n              <div className=\"flex flex-row gap-4 w-full\">\n                <div>\n                  <div className=\"h-12 w-12 rounded-full bg-blue-500 hover:bg-blue-700 cursor-pointer flex items-center justify-center\">\n                    <BiArrowBack\n                      className=\"text-3xl text-white\"\n                      onClick={() => this.closeApplicationDetails()}\n                    />\n                  </div>\n                </div>\n                <div className=\"flex flex-col w-full\">\n                  <span className=\"font-bold text-xl text-white\">\n                    {this.state.selectedPosition.position_title}\n                  </span>\n                  <span className=\"text-sm text-gray-100 font-normal pl-1\">\n                    {this.props.candidateApplications.candidate_applications &&\n                      this.state.selectedPosition !== null &&\n                      this.props.candidateApplications.candidate_applications.find(\n                        (itm) =>\n                          itm.application_id === this.state.selected_application\n                      )?.application_session.session_plan_name}{\" \"}\n                    -{\" \"}\n                    {this.props.candidateApplications.candidate_applications !==\n                      null &&\n                      this.state.selectedPosition !== null &&\n                      this.props.candidateApplications.candidate_applications.find(\n                        (itm) =>\n                          itm.application_id === this.state.selected_application\n                      )?.application_session.period}\n                  </span>\n                </div>\n              </div>\n              {this.props.candidateApplications.candidate_applications !==\n                null &&\n              this.props.candidateApplications.candidate_applications.find(\n                (itm) =>\n                  itm.application_id === this.state.selected_application &&\n                  (itm.application_status === ApplicationStates.Shortlisted ||\n                    itm.application_status === ApplicationStates.Pass)\n              ) !== undefined ? (\n                <div\n                  title=\"Choose the Province, Choose the District, etc.\"\n                  className=\"mb-3 md:mb-0\"\n                  onClick={() => {\n                    if (\n                      this.props.candidateApplications\n                        .candidate_applications !== null\n                    ) {\n                      let checkApplication =\n                        this.props.candidateApplications.candidate_applications.find(\n                          (itm) =>\n                            itm.application_id ===\n                            this.state.selected_application\n                        );\n                      if (checkApplication !== undefined) {\n                        this.props.SelectUserApplication(checkApplication);\n                      }\n                    }\n                  }}\n                >\n                  <Link\n                    to=\"/placement-contract\"\n                    className=\"bg-blue-500 px-4 py-3 font-bold rounded-md border-2 border-white text-white hover:bg-blue-800\"\n                  >\n                    Placement\n                  </Link>\n                </div>\n              ) : (\n                <div\n                  title=\"Wait for being shortlisted to fill placement agreement\"\n                  className=\"bg-blue-500 text-blue-300 rounded px-3 py-2 cursor-not-allowed hidden md:block\"\n                >\n                  Placement\n                </div>\n              )}\n            </div>\n            {/* Check application */}\n            <div className=\"bg-gray-100\"></div>\n            <Exams\n              selectedExams={this.state.selectedExams}\n              selectedPosition={this.state.selectedPosition}\n              selected_application={this.state.selected_application}\n              updateLocation={this.updateLocation}\n              changeLocationError={this.state.applicationError}\n              loading={this.state.loading}\n              incrementIncomplete={this.incrementIncomplete}\n              applicationHistory={\n                this.props.candidateApplications.candidate_applications !==\n                  null && this.state.selectedPosition !== null\n                  ? this.props.candidateApplications.candidate_applications.find(\n                      (itm) =>\n                        itm.position.position_id ===\n                        this.state.selectedPosition?.position_id\n                    )?.application_history\n                  : undefined\n              }\n              deleteApplication={this.deleteApplication}\n              selectedApplicationDetails={\n                this.props.candidateApplications.candidate_applications &&\n                this.props.candidateApplications.candidate_applications.find(\n                  (itm) =>\n                    itm.application_id === this.state.selected_application\n                )!\n              }\n              setMaxExamModal={this.setMaxExamModal}\n              setDisplayDetailsModal={this.setDisplayDetailsModal}\n              doing_exam={this.state.doing_exam}\n              setDoingExam={this.setDoingExam}\n            />\n          </div>\n        ) : (\n          <>\n            <SideNavigation>\n              {this.props.positions.positions_list === null ? (\n                <div className=\"btn bg-gray-500 text-white mb-4 w-full flex flex-row items-center gap-3 cursor-not-allowed animate__animated animate__zoomIn\">\n                  <RiFileForbidLine className=\"text-2xl text-white\" /> Please\n                  wait...\n                </div>\n              ) : this.props.positions.positions_list.length > 0 &&\n                this.props.periods.applicationPeriods &&\n                this.props.periods.applicationPeriods.filter(\n                  (itm) => itm.is_active === true\n                ).length !== 0 ? (\n                <Link to=\"/apply\">\n                  <div className=\"btn btn-blue text-white mb-4 w-full flex flex-row items-center gap-3 animate__animated animate__zoomIn\">\n                    <MdAdd className=\"text-2xl text-white\" /> Apply\n                  </div>\n                </Link>\n              ) : (\n                <div className=\"btn bg-gray-200 cursor-not-allowed text-gray-500 mb-4 w-full flex flex-row items-center animate__animated animate__zoomIn\">\n                  No vacancies!\n                </div>\n              )}\n              {/* <div className=\"mb-6\"></div> */}\n              {/* <Search data={[1, 2, 3]} /> */}\n              <div\n                onClick={() =>\n                  this.setState({ selectedApplicationStatus: null })\n                }\n                className={`cursor-pointer ${\n                  this.state.selectedApplicationStatus !== null\n                    ? \"text-gray-600 hover:text-blue-600 border border-gray-200 hover:border-blue-600 hover:bg-blue-100 bg-white\"\n                    : \"text-blue-600 border border-blue-600 hover:bg-blue-100 bg-blue-100\"\n                } flex flex-row items-center gap-2 px-2 py-1 rounded font-bold`}\n              >\n                <IoMdList className=\"text-xl\" />\n                <span>\n                  View all (\n                  {this.props.candidateApplications.candidate_applications ===\n                  null\n                    ? 0\n                    : this.props.candidateApplications.candidate_applications.filter(\n                        (itm) =>\n                          itm.application_session.session_plan_id ===\n                          this.props.periods.selected_period?.session_plan_id\n                      ).length}\n                  )\n                </span>\n              </div>\n              <div className=\"pt-1\">\n                {this.props.candidateApplications.candidate_applications &&\n                this.filteredApplications(\n                  this.props.candidateApplications.candidate_applications,\n                  null,\n                  this.props.periods.selected_period\n                ) === null ? (\n                  <Loading />\n                ) : (\n                  this.props.candidateApplications.candidate_applications &&\n                  this.applicationStatuses(\n                    this.filteredApplications(\n                      this.props.candidateApplications.candidate_applications,\n                      null,\n                      this.props.periods.selected_period\n                    )\n                  ).map(\n                    (\n                      itm: {\n                        title: string;\n                        count: number;\n                        status: ApplicationStates;\n                      },\n                      i: number\n                    ) =>\n                      itm.count > 0 && (\n                        <Fragment key={itm.title}>\n                          <div\n                            onClick={() =>\n                              this.setState({\n                                selectedApplicationStatus: itm.status,\n                              })\n                            }\n                          >\n                            <MainItem\n                              title={itm.title}\n                              count={itm.count}\n                              active={\n                                this.state.selectedApplicationStatus ===\n                                itm.status\n                                  ? true\n                                  : false\n                              }\n                            />\n                          </div>\n                        </Fragment>\n                      )\n                  )\n                )}\n              </div>\n            </SideNavigation>\n            <div className=\"px-2 -ml-2 lg:ml-0\">\n              <div className=\"mt-2 rounded px-2 md:px-0 py-3 md:py-3\">\n                <div className=\"flex flex-col\">\n                  <div className=\"flex flex-col md:flex-row justify-between md:items-center\">\n                    <div className=\"flex flex-col\">\n                      <span className=\"text-blue-600 text-2xl md:text-2xl lg:text-3xl font-bold\">\n                        My Applications{\" \"}\n                        <span className=\"md:hidden\">\n                          (\n                          {this.props.candidateApplications\n                            .candidate_applications &&\n                          this.filteredApplications(\n                            this.props.candidateApplications\n                              .candidate_applications,\n                            this.state.selectedApplicationStatus,\n                            this.props.periods.selected_period\n                          )\n                            ? this.filteredApplications(\n                                this.props.candidateApplications\n                                  .candidate_applications,\n                                this.state.selectedApplicationStatus,\n                                this.props.periods.selected_period\n                              ).length\n                            : 0}\n                          )\n                        </span>\n                      </span>\n                      <div className=\"text-gray-700 font-bold text-xs md:text-sm lg:text-md flex flex-row gap-1 items-center\">\n                        <AiOutlineFilter className=\"text-2xl\" /> Selected period{\" \"}\n                        <span\n                          onClick={() =>\n                            this.setState({ showPeriodFilter: true })\n                          }\n                          className={`px-2 ${\n                            this.props.periods.selected_period !== null\n                              ? \"text-blue-600 hover:bg-blue-100 border-2 border-gray-200 hover:border-blue-600 underline\"\n                              : \"bg-white text-gray-600 hover:bg-gray-100 border border-gray-300\"\n                          }  rounded-full py-1 flex flex-row justify-center items-center font-bold cursor-pointer`}\n                        >\n                          {this.props.periods.selected_period !== null ? (\n                            <>\n                              <BsCaretRightFill className=\"mr-3\" />\n                              {\n                                this.props.periods.selected_period\n                                  .session_plan_name\n                              }\n                            </>\n                          ) : (\n                            \"Choose period\"\n                          )}\n                        </span>\n                      </div>\n                    </div>\n                    <div>\n                      <div\n                        onClick={() =>\n                          this.setState({ showPeriodFilter: true })\n                        }\n                        className=\"bg-white border border-white hover:border-blue-600 text-blue-600 font-bold items-center btn w-max cursor-pointer hover:bg-blue-100 my-2 md:my-0\"\n                      >\n                        {this.props.periods.selected_period === null\n                          ? \"Choose period\"\n                          : \"Change period\"}\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n              {this.state.loadingErr !== \"\" && (\n                <div className=\"bg-yellow-100 text-yellow-700 font-extrabold text-2xl mx-4 px-3 py-3 rounded\">\n                  {this.state.loadingErr}\n                </div>\n              )}\n              <div className=\"mb-2\">\n                <div className=\"grid grid-cols-12 gap-3\">\n                  <div className=\"col-span-12\">\n                    <div className={`grid md:grid-cols-1 lg:grid-cols-1 gap-2`}>\n                      <div className=\"-my-2 md:hidden lg:hidden xl:hidden\">\n                        {this.props.positions.positions_list === null ? (\n                          <div className=\"btn bg-gray-500 text-white mb-4 w-full flex flex-row items-center gap-3 animate__animated animate__zoomIn justify-center\">\n                            <RiFileForbidLine className=\"text-2xl text-white\" />{\" \"}\n                            Please wait...\n                          </div>\n                        ) : this.props.positions.positions_list.length > 0 ? (\n                          <Link to=\"/apply\">\n                            <div className=\"btn btn-blue text-white mb-4 w-full flex flex-row items-center gap-3 animate__animated animate__zoomIn justify-center\">\n                              <MdAdd className=\"text-2xl text-white\" /> Create\n                              application\n                            </div>\n                          </Link>\n                        ) : (\n                          <div className=\"btn bg-gray-400 text-white mb-4 w-full flex flex-row items-center gap-3 animate__animated animate__zoomIn justify-center\">\n                            <RiFileForbidLine className=\"text-2xl text-white\" />{\" \"}\n                            No vacancies!\n                          </div>\n                        )}\n                      </div>\n                      {this.props.candidateApplications\n                        .candidate_applications === null ? (\n                        <LoadingV2 type={LoadingType.dark} />\n                      ) : this.filteredApplications(\n                          this.props.candidateApplications\n                            .candidate_applications,\n                          this.state.selectedApplicationStatus,\n                          this.props.periods.selected_period\n                        ).length === 0 ? (\n                        <div className=\"\">\n                          <NoResult\n                            theme={NoResultThemes.Dark}\n                            value=\"No Applications found!\"\n                            component={\n                              <div className=\"-my-2 hidden md:block\">\n                                {this.props.positions.positions_list !== null &&\n                                  this.props.positions.positions_list.length >\n                                    0 &&\n                                  this.props.periods.applicationPeriods &&\n                                  this.props.periods.applicationPeriods.filter(\n                                    (itm) => itm.is_active === true\n                                  ).length !== 0 && (\n                                    <Link to=\"/apply\">\n                                      <div className=\"text-blue-600 font-bold underline mb-2 hover:text-blue-800 animate__animated animate__zoomIn\">\n                                        Click here to create new application\n                                      </div>\n                                    </Link>\n                                  )}\n                              </div>\n                            }\n                          />\n                        </div>\n                      ) : (\n                        this.filteredApplications(\n                          this.props.candidateApplications\n                            .candidate_applications,\n                          this.state.selectedApplicationStatus,\n                          this.props.periods.selected_period\n                        ).map((item, i) => (\n                          <div\n                            key={i + 1}\n                            onClick={() => {\n                              this.setState({\n                                selectedPosition: item.position,\n                                selected_application: item.application_id,\n                              });\n                              this.setState({ selectedExams: item.exams });\n                              this.setState({ displayDetailsModal: true });\n                            }}\n                            className={`bg-white rounded-md animate__animated animate__fadeIn animate__faster\n                      ${\n                        this.state.selectedPosition?.position_id ===\n                        item.position.position_id\n                          ? \"border-2 border-blue-600 shadow\"\n                          : item.application_status ===\n                            ApplicationStates.Initiated\n                          ? \"border-gray-200 bg-gray-50 hover:border-gray-600\"\n                          : item.application_status ===\n                            ApplicationStates.Rejected\n                          ? \"bg-white border-white\"\n                          : item.application_status ===\n                            ApplicationStates.Shortlisted\n                          ? \"border-gray-200 bg-white hover:border-blue-600\"\n                          : \"bg-white border-yellow-600 hover:border-yellow-500\"\n                      } flex flex-col cursor-pointer font-normal hover:font-bold border-2`}\n                          >\n                            <div\n                              className={`grid md:grid-cols-12 group px-3 py-3 rounded-md gap-2 ${\n                                this.state.selectedPosition?.position_id ===\n                                item.position.position_id\n                                  ? \"bg-gray-100 rounded-t\"\n                                  : \"bg-white\"\n                              }`}\n                            >\n                              <div className=\"col-span-1 flex items-center justify-center\">\n                                {item.application_status ===\n                                ApplicationStates.Initiated ? (\n                                  <IoBriefcaseOutline className=\"text-5xl text-gray-400 group-hover:text-blue-600\" />\n                                ) : item.application_status ===\n                                  ApplicationStates.Rejected ? (\n                                  <IoBriefcase className=\"text-5xl text-gray-400 group-hover:text-gray-700\" />\n                                ) : item.application_status ===\n                                  ApplicationStates.Shortlisted ? (\n                                  <IoBriefcaseOutline className=\"text-5xl text-gray-400 group-hover:text-blue-600\" />\n                                ) : item.application_status ===\n                                  ApplicationStates.Incomplete ? (\n                                  <IoBriefcaseOutline className=\"text-5xl text-gray-400 group-hover:text-yellow-800\" />\n                                ) : (\n                                  <IoBriefcase className=\"text-5xl text-gray-400 group-hover:text-blue-600\" />\n                                )}\n                              </div>\n                              <div className=\"col-span-7\">\n                                <span\n                                  className={`font-extrabold \n                          ${\n                            item.application_status !==\n                            ApplicationStates.Initiated\n                              ? item.application_status ===\n                                ApplicationStates.Rejected\n                                ? \"text-gray-900 group-hover:text-gray-900\"\n                                : item.application_status ===\n                                  ApplicationStates.Shortlisted\n                                ? \"text-gray-900 group-hover:text-blue-600\"\n                                : item.application_status ===\n                                  ApplicationStates.Incomplete\n                                ? \"text-gray-900 group-hover:text-yellow-800\"\n                                : \"text-gray-900 group-hover:text-blue-600\"\n                              : \"text-gray-900 group-hover:text-blue-600\"\n                          }`}\n                                >\n                                  {item.position.position_title}\n                                </span>\n                                <div className=\"flex flex-col text-xs text-gray-600\">\n                                  <div className=\"flex flex-row gap-2\">\n                                    <div>\n                                      <div className=\"flex flex-col float-left text-sm md:justify-end pt-2\">\n                                        <span\n                                          className={`${\n                                            item.application_status ===\n                                            ApplicationStates.Rejected\n                                              ? \"text-yellow-700\"\n                                              : \"text-gray-500\"\n                                          } md:text-right`}\n                                        >\n                                          {/* Status */}\n                                        </span>\n                                        {item.application_status ===\n                                        ApplicationStates.Initiated ? (\n                                          <span\n                                            className={`font-bold ${\n                                              this.state.selectedPosition\n                                                ?.position_id ===\n                                              item.position.position_id\n                                                ? \"bg-gray-600 text-gray-100 border border-gray-500 rounded-full\"\n                                                : \"bg-gray-50 text-gray-800 rounded\"\n                                            } px-3 py-1`}\n                                          >\n                                            {\n                                              ApplicationStatesDescription.find(\n                                                (itm) =>\n                                                  itm.key ===\n                                                  item.application_status\n                                              )?.caption\n                                            }\n                                          </span>\n                                        ) : item.application_status ===\n                                          ApplicationStates.Rejected ? (\n                                          <span\n                                            className={`font-bold ${\n                                              this.state.selectedPosition\n                                                ?.position_id ===\n                                              item.position.position_id\n                                                ? \"bg-yellow-900 text-yellow-100 border border-yellow-700 rounded-full\"\n                                                : \"bg-yellow-100 text-yellow-900 rounded\"\n                                            } px-3 py-1`}\n                                          >\n                                            {\n                                              ApplicationStatesDescription.find(\n                                                (itm) =>\n                                                  itm.key ===\n                                                  item.application_status\n                                              )?.caption\n                                            }\n                                          </span>\n                                        ) : item.application_status ===\n                                          ApplicationStates.Shortlisted ? (\n                                          <span\n                                            className={`font-bold ${\n                                              this.state.selectedPosition\n                                                ?.position_id ===\n                                              item.position.position_id\n                                                ? \"bg-blue-900 text-blue-100 border border-blue-700 rounded-full\"\n                                                : \"bg-blue-100 text-blue-900 rounded\"\n                                            } px-3 py-1`}\n                                          >\n                                            {\n                                              ApplicationStatesDescription.find(\n                                                (itm) =>\n                                                  itm.key ===\n                                                  item.application_status\n                                              )?.caption\n                                            }\n                                          </span>\n                                        ) : (\n                                          <span\n                                            className={`font-bold ${\n                                              this.state.selectedPosition\n                                                ?.position_id ===\n                                              item.position.position_id\n                                                ? \"bg-yellow-600 text-yellow-100 border border-yellow-500 rounded-full\"\n                                                : \"bg-yellow-100 text-yellow-700 rounded\"\n                                            } px-3 py-1`}\n                                          >\n                                            {\n                                              ApplicationStatesDescription.find(\n                                                (itm) =>\n                                                  itm.key ===\n                                                  item.application_status\n                                              )?.caption\n                                            }\n                                          </span>\n                                        )}\n                                      </div>\n                                    </div>\n                                    <div className=\"flex flex-col\">\n                                      <span\n                                        className={`${\n                                          item.application_status !==\n                                          ApplicationStates.Initiated\n                                            ? item.application_status ===\n                                              ApplicationStates.Rejected\n                                              ? \"text-gray-500\"\n                                              : item.application_status ===\n                                                ApplicationStates.Shortlisted\n                                              ? \"text-gray-500\"\n                                              : \"text-gray-500\"\n                                            : \"text-gray-500\"\n                                        }`}\n                                      >\n                                        {/* Application period: */}\n                                      </span>\n                                      <span\n                                        className={`${\n                                          item.application_status !==\n                                          ApplicationStates.Initiated\n                                            ? item.application_status ===\n                                              ApplicationStates.Rejected\n                                              ? \"text-gray-800\"\n                                              : item.application_status ===\n                                                ApplicationStates.Shortlisted\n                                              ? \"text-gray-800\"\n                                              : \"text-gray-800\"\n                                            : \"text-black\"\n                                        } font-bold`}\n                                      >\n                                        {item.application_session &&\n                                          item.application_session\n                                            .session_plan_name}{\" \"}\n                                        -{\" \"}\n                                        {item.application_session &&\n                                          item.application_session.period}\n                                      </span>\n                                      <div className=\"flex flex-row gap-2\">\n                                        <span\n                                          className={`${\n                                            item.application_status !==\n                                            ApplicationStates.Initiated\n                                              ? item.application_status ===\n                                                ApplicationStates.Rejected\n                                                ? \"text-gray-500\"\n                                                : item.application_status ===\n                                                  ApplicationStates.Shortlisted\n                                                ? \"text-gray-500\"\n                                                : \"text-gray-500\"\n                                              : \"text-gray-500\"\n                                          }`}\n                                        >\n                                          Date:\n                                        </span>\n                                        <span\n                                          className={`${\n                                            item.application_status !==\n                                            ApplicationStates.Initiated\n                                              ? item.application_status ===\n                                                ApplicationStates.Rejected\n                                                ? \"text-gray-800\"\n                                                : item.application_status ===\n                                                  ApplicationStates.Shortlisted\n                                                ? \"text-gray-800\"\n                                                : \"text-gray-800\"\n                                              : \"text-black\"\n                                          } font-bold`}\n                                        >\n                                          {DATE(item.createdAt, \"DD/MM/YYYY\")}\n                                        </span>\n                                      </div>\n                                    </div>\n                                  </div>\n                                </div>\n                              </div>\n                              <div className=\"col-span-12 md:col-span-4 flex md:justify-end items-center\">\n                                {/* Action */}\n                                <div className=\"flex flex-row items-center justify-end gap-2 w-full\">\n                                  {/* <div className=\"btn bg-gray-100 text-gray-600\">\n                                    Details\n                                  </div> */}\n                                  {item.application_status ===\n                                    ApplicationStates.Shortlisted && (\n                                    <div\n                                      className=\"mt-2 md:mt-0\"\n                                      title=\"Choose the Province, Choose the District, etc.\"\n                                      onClick={() => {\n                                        this.props.SelectUserApplication(item);\n                                      }}\n                                    >\n                                      <Link to=\"/placement-contract\">\n                                        <div className=\"rounded px-2 py-1 font-bold bg-blue-50 text-blue-600 group-hover:bg-blue-600 group-hover:text-white\">\n                                          <span>Placement agreement</span>\n                                        </div>\n                                      </Link>\n                                    </div>\n                                  )}\n                                  {item.application_status ===\n                                  ApplicationStates.Rejected ? (\n                                    <div className=\"rounded border border-blue-500 px-2 py-1 bg-blue-100 group-hover:bg-blue-600 text-blue-600 group-hover:text-white cursor-pointer mt-2 md:mt-0 font-bold\">\n                                      Rejection Claiming\n                                    </div>\n                                  ) : (\n                                    <div className=\"rounded px-2 py-2 bg-gray-100 hover:bg-gray-200 text-gray-600 cursor-pointer mt-2 md:mt-0 font-bold\">\n                                      Details\n                                    </div>\n                                  )}\n                                </div>\n                              </div>\n                            </div>\n                          </div>\n                        ))\n                      )}\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </>\n        )}\n\n        {this.state.showPeriodFilter === true && (\n          <Modal\n            title={<div className=\"text-2xl\">Choose a period</div>}\n            backDrop={true}\n            theme={Themes.default}\n            close={() => this.setState({ showPeriodFilter: false })}\n            backDropClose={true}\n            widthSizeClass={ModalSize.extraLarge}\n            displayClose={true}\n            padding={{ title: true, body: false }}\n          >\n            <ApplicationPeriods\n              applicationPeriods={this.props.periods.applicationPeriods}\n              setSelectedPeriod={this.props.setSelectedPeriod}\n              showPeriodFilter={this.setShowFilterStatus}\n            />\n          </Modal>\n        )}\n        {this.state.viewSchools !== null && (\n          <Modal\n            title={\n              <div className=\"flex flex-col\">\n                <span className=\"text-4xl font-extrabold text-blue-600\">\n                  {this.state.viewSchools.position.position_title}\n                </span>\n                <span className=\"text-base\">View placement schools</span>\n              </div>\n            }\n            backDrop={true}\n            theme={Themes.default}\n            close={() => this.setState({ viewSchools: null })}\n            backDropClose={true}\n            widthSizeClass={ModalSize.extraLarge}\n            displayClose={true}\n            padding={{ title: true, body: false }}\n          >\n            <CandidatePlacementCheck\n              position={this.state.viewSchools}\n              user={this.props.auth.user}\n            />\n          </Modal>\n        )}\n      </Fragment>\n    );\n  }\n}\n\nconst mapStateToProps = ({\n  auth,\n  application,\n  periods,\n  system,\n  positions,\n  candidateApplications,\n  candidateExam,\n  course,\n  doExam,\n}: StoreState): {\n  auth: Auth;\n  application: applicationStoreInterface;\n  periods: applicationPeriodsStoreInterface;\n  system: System;\n  positions: positionsStoreInterface;\n  candidateApplications: CandidateApplicationsStoreInterface;\n  candidateExam: candidateExamStoreInterface;\n  course: courseStoreInterface;\n  doExam: examDataInterface;\n} => {\n  return {\n    auth: auth,\n    application: application,\n    periods,\n    system: system,\n    positions: positions,\n    candidateApplications: candidateApplications,\n    candidateExam: candidateExam,\n    course: course,\n    doExam: doExam,\n  };\n};\n\nexport const ApplicationsDashboard = connect(mapStateToProps, {\n  initiateApplication,\n  removeLocation,\n  loadApplicationPeriods,\n  setSelectedPeriod,\n  PushPopupAlert,\n  loadAllPositions,\n  FC_Access,\n  LoadCandidateApplications,\n  InitializeExamDetails,\n  loadExamsDone,\n  setSelectedPosition,\n  setSelectedCourse,\n  setSelectedCandidateExam,\n  AddUserApplication,\n  RemoveUserApplication,\n  SelectUserApplication,\n})(_ApplicationsDashboard);\n","import { education_category } from \"../interfaces\";\nimport { PositionAPI } from \"../interfaces/position\";\nimport {\n  CustomeAccessInterface,\n  PostSchoolInterface,\n  RoleToUserInterface,\n  SchoolInfoInterface,\n  SystemUserRoleInterface,\n} from \"./interfaces\";\n\nexport const data_posts_school: PostSchoolInterface[] = [];\n\nexport const isEmptyOrSpaces = (str: string): boolean => {\n  return str === null || str.match(/^ *$/) !== null;\n};\n\nexport const getUserTitle = (\n  accessRoles: SystemUserRoleInterface[],\n  roleId: string\n): string => {\n  const result = accessRoles.find((e) => e.system_user_role_id === roleId);\n  return result ? result.role : \"\";\n};\n\nexport const getRoleById = (\n  roles: SystemUserRoleInterface[],\n  roleId: string\n): SystemUserRoleInterface => {\n  return roles.filter((role) => role.system_user_role_id === roleId)[0];\n};\n\nexport const getInstituteById = (\n  institutes: education_category[],\n  instituteId: string\n): education_category | undefined => {\n  return institutes.find((item) => item.education_institute_id === instituteId);\n};\n\nexport const getPositionById_old = (\n  positions: PositionAPI[],\n  position_id: string\n): PositionAPI => {\n  console.log({\n    positions,\n    position_id,\n    data: positions.filter(\n      (position) => position.position_id === position_id\n    )[0],\n  });\n  return positions.filter(\n    (position) => position.position_id === position_id\n  )[0];\n};\n\nexport const getPositionById = (\n  positions: PositionAPI[],\n  position_id: string\n): PositionAPI | undefined => {\n  return positions.find((position) => position.position_id === position_id);\n};\n\nexport const getSchoolById = (\n  schools: SchoolInfoInterface[],\n  school_id: string\n): SchoolInfoInterface => {\n  return schools.filter((school) => school.school_id === school_id)[0];\n};\n\nexport const getPostById = (\n  posts: PostSchoolInterface[],\n  post_id: string\n): PostSchoolInterface => {\n  return posts.filter((post) => post.school_id === post_id)[0];\n};\n\nexport const getPostsBySchoolId = (\n  posts: PostSchoolInterface[],\n  school_id: string\n): PostSchoolInterface[] => {\n  return posts.filter((post) => post.school_id === school_id);\n};\n\nexport const getPostsByIds = (\n  posts: PostSchoolInterface[],\n  school_id: string,\n  position_id: string\n): PostSchoolInterface[] => {\n  return posts.filter(\n    (post) => post.school_id === school_id && post.position_id === position_id\n  );\n};\n\nexport const displayDate = (dateToDisplay: Date): string => {\n  return new Intl.DateTimeFormat(\"en-GB\", {\n    year: \"numeric\",\n    month: \"long\",\n    day: \"2-digit\",\n  }).format(dateToDisplay);\n};\n\nexport const userAccess = (\n  defaultAccess: RoleToUserInterface,\n  customAccess: CustomeAccessInterface\n): RoleToUserInterface => {\n  // const data = defaultAccess.access.map((default,index,customAccess)=>{\n  //   let data_custom = customAccess\n  //   if\n  // })\n  // return customAccess.filter((custom) => custom.id === accecc_id)[0];\n  return defaultAccess;\n};\n\n// export const groupBy = (list: [], keyGetter: Function) => {\n//   const map = new Map();\n//   list.forEach((item) => {\n//     const key = keyGetter(item);\n//     const collection = map.get(key);\n//     if (!collection) {\n//       map.set(key, [item]);\n//     } else {\n//       collection.push(item);\n//     }\n//   });\n//   return map;\n// };\n\nexport const toTwoDigit = (value: number): string => {\n  var dec = value - Math.floor(value);\n  value = value - dec;\n  return (\"0\" + value).slice(-2) + dec.toString().substr(1);\n};\n\nexport const toAnyDigit = (\n  value: string | number,\n  padding: number = 3\n): string => {\n  var zeroes = new Array(padding + 1).join(\"0\");\n  return (zeroes + value).slice(-padding);\n};\n\nexport const capitalizeFirstLetter = (value: string): string => {\n  return value.charAt(0).toUpperCase() + value.slice(1);\n};\n\nexport const isDateExpiried = (paramDate: string) => {\n  const thisDate = new Date(paramDate);\n  const today = new Date();\n  if (thisDate.getTime() < today.getTime()) {\n    return true;\n  }\n\n  return false;\n};\n","import { candidateExamStoreInterface } from \"../actions/candidate_exam\";\nimport {\n  applicationExamAPI,\n  ApplicationPeriodGet,\n} from \"../interfaces/application\";\nimport { ExamAnswerSheetDone } from \"../interfaces/exam\";\nimport { PositionAPI, PositionAPICourse } from \"../interfaces/position\";\nimport { questionType, questionTypeElements } from \"../interfaces/question\";\nimport moment from \"moment-timezone\";\nimport { TimeZone } from \"./app.config\";\nimport { questionTypeElementsType } from \"@mastrecruit/common\";\n\nconst today = moment().tz(TimeZone);\n\nexport const getQuestionType = (\n  question_types: questionType[] | null,\n  type_id: string\n) => {\n  let type: questionTypeElementsType | null = null;\n  if (question_types !== null) {\n    let check = question_types.find((itm) => itm.id === type_id);\n    if (check !== undefined) {\n      let check_type = questionTypeElements.find(\n        (itm) => check && itm.key === check.element\n      );\n      if (check_type !== undefined) {\n        type = check_type.key;\n      }\n    }\n  }\n  return type;\n};\n\nexport const findTotalMarks = (\n  courses: PositionAPICourse[],\n  results: ExamAnswerSheetDone[] | null\n) => {\n  if (results !== null) {\n    let sum: number = 0;\n    for (let course of courses) {\n      let test = results.find((itm) => itm.course === course.course_id);\n      if (test !== undefined) {\n        sum = sum + test.total_marks;\n      }\n    }\n    return sum.toFixed(2);\n  } else {\n    return \"Wait...\";\n  }\n};\n\nexport const CheckIfExamDone = (\n  courses: PositionAPICourse[],\n  results: ExamAnswerSheetDone[] | null\n) => {\n  let res: boolean = false;\n  if (results !== null) {\n    for (let course of courses) {\n      let test = results.find((itm) => itm.course === course.course_id);\n      if (test !== undefined) {\n        res = true;\n      }\n    }\n  }\n  return res;\n};\n\nexport const CheckIfNoPendingExam = (\n  //NOT COMPLETE --> TO BE DONE\n  courses: PositionAPICourse[],\n  results: ExamAnswerSheetDone[] | null\n) => {\n  let res: boolean = false;\n  if (results !== null) {\n    for (let course of courses) {\n      let test = results.find((itm) => itm.course === course.course_id);\n      if (test !== undefined) {\n        res = true;\n      }\n    }\n  }\n  return res;\n};\n\nexport const validateCalculatedFormula = (\n  formula: string\n): { status: boolean; msg: string } => {\n  let characters: string[] = [];\n  if (\n    formula === undefined ||\n    formula === \"\" ||\n    formula.length === undefined ||\n    formula.length === 0\n  ) {\n    return {\n      status: false,\n      msg: `Please type a formula`,\n    };\n  }\n  if (formula.length < 3) {\n    return {\n      status: false,\n      msg: `The formula in not valid, it is not complete!`,\n    };\n  }\n  for (let el of formula) {\n    characters = [...characters, el];\n  }\n  if (characters[0] !== `\"`) {\n    return {\n      status: false,\n      msg: `Formula should start with (\") character`,\n    };\n  }\n  if (characters.filter((itm) => itm === `\"`).length < 2) {\n    return {\n      status: false,\n      msg: `Formula is missing closing (\") character`,\n    };\n  }\n  if (characters.filter((itm) => itm === `\"`).length > 2) {\n    return {\n      status: false,\n      msg: `Formula is invalid, because it has many (\") characters (${\n        characters.filter((itm) => itm === `\"`).length\n      })`,\n    };\n  }\n  if (\n    characters[characters.length - 1] !== `\"` &&\n    characters.filter((itm) => itm === `\"`).length === 2\n  ) {\n    let nextCharacter: string = \"\";\n    for (let i = 0; i < characters.length; i++) {\n      if (characters[i] === `\"` && i !== 0) {\n        nextCharacter = characters[i + 1];\n      }\n    }\n    if (nextCharacter !== `;`) {\n      return {\n        status: false,\n        msg: `Formula is missing separation character (;) between formula and error`,\n      };\n    }\n    if (characters[characters.length - 1] === `;`) {\n      return {\n        status: false,\n        msg: `Formula is missing error after (;) character`,\n      };\n    }\n  }\n  return {\n    status: true,\n    msg: `Formula is valid`,\n  };\n};\n\nexport function convertFromStringToDate(responseDate: string) {\n  let dateComponents = responseDate.split(\"T\");\n  let datePieces = dateComponents[0].split(\"-\");\n  let timePieces = dateComponents[1].split(\":\");\n  return new Date(\n    parseInt(datePieces[2]),\n    parseInt(datePieces[1]) - 1,\n    parseInt(datePieces[0]),\n    parseInt(timePieces[0]),\n    parseInt(timePieces[1]),\n    parseInt(timePieces[2])\n  );\n}\n\nexport enum ExamTimeStatus {\n  Waiting = \"Waiting\",\n  Online = \"Online\",\n  Expired = \"Expired\",\n}\n\nexport const validateExamDate = (\n  exam_date: string,\n  start_time: string,\n  end_time: string\n) => {\n  let status: ExamTimeStatus = ExamTimeStatus.Expired;\n  // Dates\n  const toDay: Date = new Date(today.toString());\n  const examDate = new Date(exam_date);\n\n  // Time\n  const startTime = convertFromStringToDate(\n    examDate.getDate() +\n      \"-\" +\n      (examDate.getMonth() + 1) +\n      \"-\" +\n      examDate.getFullYear() +\n      \"T\" +\n      start_time +\n      \":0\"\n  );\n  const endTime = convertFromStringToDate(\n    examDate.getDate() +\n      \"-\" +\n      (examDate.getMonth() + 1) +\n      \"-\" +\n      examDate.getFullYear() +\n      \"T\" +\n      end_time +\n      \":0\"\n  );\n\n  // check exam date\n  if (\n    examDate.getDate() > toDay.getDate() ||\n    examDate.getMonth() > toDay.getMonth() ||\n    examDate.getFullYear() > toDay.getFullYear()\n  ) {\n    status = ExamTimeStatus.Waiting;\n  }\n\n  if (\n    examDate.getDate() < toDay.getDate() ||\n    examDate.getMonth() < toDay.getMonth() ||\n    examDate.getFullYear() < toDay.getFullYear()\n  ) {\n    status = ExamTimeStatus.Expired;\n  }\n\n  if (\n    examDate.getDate() === toDay.getDate() &&\n    examDate.getMonth() === toDay.getMonth() &&\n    examDate.getFullYear() === toDay.getFullYear()\n  ) {\n    if (startTime.getTime() > toDay.getTime()) {\n      status = ExamTimeStatus.Waiting;\n    } else if (\n      startTime.getTime() <= toDay.getTime() &&\n      endTime.getTime() >= toDay.getTime()\n    ) {\n      status = ExamTimeStatus.Online;\n    } else {\n      status = ExamTimeStatus.Expired;\n    }\n  }\n  // console.log(\n  //   \"Dates comparison: \" + examDate.getDate() + \"=>\" + toDay.getDate()\n  // );\n  // console.log(\"Exam Status: \", status);\n  return status;\n};\n\nexport const InitializeExamsDone = (\n  selected_period: ApplicationPeriodGet | null,\n  selectedPosition: PositionAPI | null,\n  candidateExam: candidateExamStoreInterface,\n  loadExamsDone: (\n    periodId: string,\n    userId: string,\n    callback: (loading: boolean) => void\n  ) => void,\n  user_id: string,\n  setLoadingExamsDone: (status: boolean) => void,\n  selectedExams: applicationExamAPI[] | null,\n  InitializeExamDetails: (\n    periodId: string,\n    courseId: string,\n    district_id: string,\n    center_id: string,\n    room_id: string,\n    position: PositionAPI,\n    start_exam: boolean,\n    callback: (loading: boolean) => void\n  ) => void,\n  setLoadingExams: (status: boolean) => void\n) => {\n  if (selected_period !== null && selectedPosition !== null) {\n    loadExamsDone(\n      selected_period.session_plan_id,\n      user_id,\n      setLoadingExamsDone\n    );\n    for (let course of selectedPosition.courses) {\n      let testDone = candidateExam.user_exams_temp.find(\n        (itm) => itm.course === course.course_id\n      );\n      if (testDone === undefined) {\n        let center_id = selectedExams?.find(\n          (itm) => itm.course_id === course.course_id\n        );\n        if (center_id !== undefined) {\n          InitializeExamDetails(\n            selected_period.session_plan_id,\n            course.course_id,\n            center_id.district_id,\n            center_id.center_id,\n            center_id.room_id,\n            selectedPosition,\n            false,\n            setLoadingExams\n          );\n        }\n      }\n    }\n  }\n};\n\nexport const getActiveExam = (\n  candidateExam: candidateExamStoreInterface\n): ExamAnswerSheetDone | null => {\n  if (candidateExam.user_exams_done.length > 0) {\n    for (let exam of candidateExam.user_exams_done) {\n      if (\n        validateExamDate(\n          exam.exam_date,\n          exam.exam_start_time,\n          exam.exam_end_time\n        ) === ExamTimeStatus.Online\n      ) {\n        return exam;\n      }\n    }\n  }\n  return null;\n};\n\nexport const proctoringDefaultRules: {\n  rule: string;\n  status: boolean;\n  caption: string;\n}[] = [\n  {\n    rule: \"right_click_enabled\",\n    status: false,\n    caption: \"Enable right click\",\n  },\n  {\n    rule: \"copy_enabled\",\n    status: false,\n    caption: \"Enable copy\",\n  },\n  {\n    rule: \"paste_enabled\",\n    status: false,\n    caption: \"Enable paste\",\n  },\n  {\n    rule: \"stop_candidate_when_comeback\",\n    status: false,\n    caption: \"Enable Candidate when coming back\",\n  },\n  {\n    rule: \"allow_to_leave_browser\",\n    status: false,\n    caption: \"Enable to leave browser\",\n  },\n];\n","import React, { useEffect, useState } from \"react\";\nimport { BiSort } from \"react-icons/bi\";\nimport { MdNavigateBefore, MdNavigateNext, MdSearch } from \"react-icons/md\";\n\nconst FC_makeID = (length: number = 5): string => {\n  let result: string = \"\";\n  let characters: string =\n    \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\n  let charactersLength = characters.length;\n  for (let i: number = 0; i < length; i++) {\n    result += characters.charAt(Math.floor(Math.random() * charactersLength));\n  }\n  return result;\n};\n\nexport const sortThisColumn = (\n  tableId: string,\n  colIndex: number = 0,\n  dir: \"asc\" | \"desc\" = \"asc\"\n) => {\n  var table,\n    rows,\n    switching,\n    i,\n    x,\n    y,\n    shouldSwitch,\n    switchcount = 0;\n  table = document.getElementById(tableId) as HTMLTableElement;\n  switching = true;\n  /* Make a loop that will continue until\n  no switching has been done: */\n  if (table) {\n    while (switching) {\n      //start by saying: no switching is done:\n      switching = false;\n      rows = table.rows;\n      /*Loop through all table rows (except the\n    first, which contains table headers):*/\n      for (i = 1; i < rows.length - 1; i++) {\n        //start by saying there should be no switching:\n        shouldSwitch = false;\n        /*Get the two elements you want to compare,\n      one from current row and one from the next:*/\n        x = rows[i].getElementsByTagName(\"TD\")[colIndex];\n        y = rows[i + 1].getElementsByTagName(\"TD\")[colIndex];\n        /*check if the two rows should switch place,\n      based on the direction, asc or desc:*/\n        if (dir === \"asc\" && x && y) {\n          if (x.innerHTML.toLowerCase() > y.innerHTML.toLowerCase()) {\n            //if so, mark as a switch and break the loop:\n            shouldSwitch = true;\n            break;\n          }\n        } else if (dir === \"desc\" && x && y) {\n          if (x.innerHTML.toLowerCase() < y.innerHTML.toLowerCase()) {\n            //if so, mark as a switch and break the loop:\n            shouldSwitch = true;\n            break;\n          }\n        }\n      }\n      if (shouldSwitch && rows[i].parentNode) {\n        /*If a switch has been marked, make the switch\n      and mark that a switch has been done:*/\n        rows[i].parentNode!.insertBefore(rows[i + 1], rows[i]);\n        switching = true;\n        //Each time a switch is done, increase this count by 1:\n        switchcount++;\n      } else {\n        /*If no switching has been done AND the direction is \"asc\",\n      set the direction to \"desc\" and run the while loop again.*/\n        if (switchcount === 0 && dir === \"asc\") {\n          dir = \"desc\";\n          switching = true;\n        }\n      }\n      // if (i === 0) continue;\n      // rows.cells[i].style.backgroundColor = \"blue\";\n    }\n  }\n};\n\nexport interface TableColumnsInterface {\n  columnTitle: JSX.Element | string;\n  alignText: string;\n  padding?: string;\n  isSortAllowed?: boolean;\n}\n\ninterface TableProps {\n  columns: TableColumnsInterface[];\n  rows: Function;\n  hideColumns?: boolean;\n  pagination?: boolean;\n  search?: boolean;\n  tableSize?: string;\n  tableClass?: string;\n  tableId?: string;\n  rounded?: boolean;\n  searchBG?: string;\n  thColor?: string;\n  loading?: boolean;\n}\n\nconst Table: React.FC<TableProps> = (props) => {\n  const startPage = 1;\n  const tableId =\n    !props.tableId || props.tableId === \"myTable\" ? FC_makeID() : props.tableId;\n  let table: HTMLElement, tr: HTMLCollectionOf<HTMLTableRowElement>;\n  const [totalItems, setTotalItems] = useState<number>(0);\n  const [totalPages, setTotalPages] = useState<number>(1);\n  const [currentPage, setCurrentPage] = useState<number>(1);\n  const [pages, setPages] = useState<number[]>();\n  const [pageSize, setPageSize] = useState<number>(10);\n  const [startIndex, setStartIndex] = useState<number>(0);\n  const [endIndex, setEndIndex] = useState<number>(0);\n\n  useEffect(() => {\n    props.pagination && tablePagination();\n  });\n\n  const filterTable = (\n    data: string,\n    filterType?: \"default\" | \"field\"\n  ): void => {\n    var filter, tr, td, rows: number, cols: number, txtValue;\n    if (filterType === \"field\" && data === \"all\") data = \"\";\n    filter = data.toLowerCase();\n    table = document.getElementById(tableId!)!;\n    tr = table.getElementsByTagName(\"tr\");\n    for (rows = 0; rows < tr.length; rows++) {\n      for (cols = 0; cols < props.columns.length; cols++) {\n        td = tr[rows].getElementsByTagName(\"td\")[cols];\n        if (td) {\n          txtValue = td.textContent || td.innerText;\n          if (txtValue.toLowerCase().indexOf(filter) > -1) {\n            tr[rows].style.display = \"\";\n            break;\n          } else {\n            tr[rows].style.display = \"none\";\n          }\n        }\n      }\n    }\n  };\n\n  const tablePagination = (): void => {\n    table = document.getElementById(tableId)!;\n    tr = table.getElementsByTagName(\"tr\");\n    setTotalItems(tr.length);\n    setTotalPages(Math.ceil(totalItems / pageSize));\n\n    // calculate start and end item indexes on the current page\n    setStartIndex((currentPage - 1) * pageSize);\n    setEndIndex(Math.min(startIndex + pageSize - 1, totalItems - 1));\n\n    /**\n     * TODO!\n     * There is a problem with this condition\n     */\n    let _pages = Array.from(Array(totalPages + 1 - startPage).keys()).map(\n      (i) => startPage + i\n    );\n    if (!pages || _pages.length !== pages.length) {\n      setPages(_pages);\n    }\n\n    for (let i: number = 0; i < tr.length; i++) {\n      if (i >= startIndex && i <= endIndex) {\n        tr[i].style.display = \"\";\n      } else {\n        tr[i].style.display = \"none\";\n      }\n    }\n  };\n\n  return (\n    <div className={`${props.tableSize} overflow-x-auto`}>\n      {/* search box  */}\n      {props.search && (\n        <div className={`${props.searchBG} w-full mb-2`}>\n          {props.search && (\n            <div className=\"bg-white rounded flex items-center w-full p-2 border-2 border-gray-500\">\n              <MdSearch className=\"h-5 w-5 fill-current text-gray-400\" />\n              <input\n                type=\"search\"\n                placeholder=\"search\"\n                onChange={(e) => filterTable(e.target.value)}\n                className=\"w-full h-6 pl-4 text-sm outline-none focus:outline-none bg-white\"\n                disabled={props.loading}\n              />\n\n              {props.pagination && (\n                <div className=\"select\">\n                  <select\n                    className=\"text-base outline-none focus:outline-none bg-white\"\n                    onChange={(e) => setPageSize(Number(e.target.value))}\n                    disabled={props.loading}\n                  >\n                    <option value=\"10\">10</option>\n                    <option value=\"25\">25</option>\n                    <option value=\"50\">50</option>\n                    <option value=\"100\">100</option>\n                  </select>\n                </div>\n              )}\n            </div>\n          )}\n        </div>\n      )}\n      <div className=\"overflow-x-auto w-full\">\n        <table\n          className={\n            props.tableClass\n              ? props.tableClass\n              : `w-full shadow ${\n                  props.rounded && \"sm:rounded-lg\"\n                } table-auto order-table`\n          }\n          id={tableId}\n        >\n          {!props.hideColumns && (\n            <thead className=\"bg-white border-b-2 border-gray-300 text-gray-600 font-bold text-base\">\n              <tr\n                className={`text-left tracking-wide bg-${props.thColor}-100 border-b-2 border-${props.thColor}-500 text-${props.thColor}-600`}\n              >\n                {props.columns.map((column, index) => (\n                  <th\n                    key={index}\n                    className={`${column.padding} text-${\n                      column.alignText\n                    } px-3 py-2 ${column.isSortAllowed && \"cursor-pointer\"}`}\n                    onClick={() =>\n                      column.isSortAllowed && sortThisColumn(tableId, index)\n                    }\n                  >\n                    <div className=\"flex items-center gap-1\">\n                      {column.columnTitle}\n                      {column.isSortAllowed && <BiSort />}\n                    </div>\n                  </th>\n                ))}\n              </tr>\n            </thead>\n          )}\n          <tbody id=\"table-data\" className=\"bg-white text-black text-base\">\n            {props.rows()}\n          </tbody>\n        </table>\n        {props.pagination && (\n          <div className=\"sm:flex-1 sm:flex sm:items-center sm:justify-between mt-4 work-sans\">\n            <div>\n              <span className=\"text-xs xs:text-sm text-gray-900\">\n                Showing 1 to {pageSize} of {totalItems - 1} Entries\n              </span>\n            </div>\n            <div>\n              <nav className=\"inline-flex shadow-sm\">\n                <div>\n                  <button\n                    type=\"button\"\n                    className={`inline-flex items-center px-2 py-2 rounded-l-md border border-gray-300 text-sm font-medium text-gray-500 ${\n                      currentPage !== 1 && \"bg-white\"\n                    }`}\n                    aria-label=\"Previous\"\n                    disabled={currentPage === 1 || props.loading}\n                    onClick={() => setCurrentPage(currentPage - 1)}\n                  >\n                    <MdNavigateBefore className=\"h-5 w-5\" />\n                  </button>\n                </div>\n                <div>\n                  {pages &&\n                    pages.map((page, pageIndex) => (\n                      <button\n                        key={pageIndex}\n                        className={`-ml-px inline-flex items-center px-4 py-2 border border-gray-300 text-sm font-medium text-gray-700 ${\n                          page !== currentPage\n                            ? \"bg-white\"\n                            : \"bg-gray-100 cursor-default\"\n                        }`}\n                        disabled={page === currentPage || props.loading}\n                        onClick={() => setCurrentPage(page)}\n                      >\n                        {page}\n                      </button>\n                    ))}\n                </div>\n                <div>\n                  <button\n                    type=\"button\"\n                    className={`inline-flex items-center px-2 py-2 rounded-r-md border border-gray-300 text-sm leading-5 font-medium text-gray-500 ${\n                      currentPage !== totalPages && \"bg-white\"\n                    }`}\n                    aria-label=\"Next\"\n                    disabled={currentPage === totalPages || props.loading}\n                    onClick={() => setCurrentPage(currentPage + 1)}\n                  >\n                    <MdNavigateNext className=\"h-5 w-5\" />\n                  </button>\n                </div>\n              </nav>\n            </div>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default Table;\n","import axios from \"axios\";\nimport { Dispatch } from \"redux\";\nimport { ActionTypes } from \"./types\";\nimport { API } from \"../utils/api\";\nimport { setAxiosToken } from \"../utils/AxiosToken\";\nimport { errorToText } from \"../utils/errors\";\nimport {\n  AcademicSessionInterface,\n  PlansTypeInterface,\n  SessionPlanInterface,\n} from \"../interfaces\";\n\n/**\n * * ****************************** INTERFACES *****************************\n */\n\n// GET ACTIVE PLAN TYPES\nexport interface GetPlansTypesAction {\n  type: ActionTypes.GET_PLANS_TYPES;\n  payload: PlansTypeInterface[];\n}\n\n// GET INACTIVE PLAN TYPES\nexport interface GetDeletedPlansTypesAction {\n  type: ActionTypes.GET_DELETED_PLANS_TYPES;\n  payload: PlansTypeInterface[];\n}\n\n// CREATE PLAN TYPE\nexport interface CreatePlansTypeAction {\n  type: ActionTypes.CREATE_PLAN_TYPE;\n  payload: PlansTypeInterface;\n}\n\n// UPDATE PLAN TYPE\nexport interface UpdatePlansTypeAction {\n  type: ActionTypes.UPDATE_PLAN_TYPE;\n  payload: PlansTypeInterface;\n}\n\n// DELETE PLAN TYPE\nexport interface DeletePlansTypeAction {\n  type: ActionTypes.DELETE_PLAN_TYPE;\n  payload: PlansTypeInterface;\n}\n\n// SET PLAN TYPE =====================================\nexport interface setSelectedPlanTypeActions {\n  type: ActionTypes.SELECT_PLAN_TYPE;\n  payload: PlansTypeInterface | \"all\";\n}\n\n// GET ALL SESSION PLAN\nexport interface GetAllSessionPlansAction {\n  type: ActionTypes.GET_ALL_SESSION_PLANS;\n  payload: SessionPlanInterface[];\n}\n\n// GET ACTIVE SESSION PLAN\nexport interface GetActiveSessionPlanAction {\n  type: ActionTypes.GET_ACTIVE_SESSION_PLANS;\n  payload: SessionPlanInterface | \"none\";\n}\n\n// CREATE SESSION PLAN\nexport interface CreateSessionPlansAction {\n  type: ActionTypes.CREATE_SESSION_PLAN;\n  payload: SessionPlanInterface;\n}\n\n// UPDATE SESSION PLAN\nexport interface UpdateSessionPlansAction {\n  type: ActionTypes.UPDATE_SESSION_PLAN;\n  payload: SessionPlanInterface;\n}\n\n// ACTIVATE SESSION PLAN\nexport interface ActivateSessionPlansAction {\n  type: ActionTypes.SESSION_ACTIVATION;\n  payload: SessionPlanInterface;\n}\n\n// DELETE SESSION PLAN\nexport interface DeleteSessionPlanAction {\n  type: ActionTypes.DELETE_SESSION_PLAN;\n  payload: string;\n}\n\n// GET ALL ACADEMIC SESSION\nexport interface GetAllAcademicSessionAction {\n  type: ActionTypes.GET_ALL_ACADEMIC_SESSION;\n  payload: AcademicSessionInterface[];\n}\n\n// CREATE ACADEMIC SESSION\nexport interface CreateAcademicSessionAction {\n  type: ActionTypes.CREATE_ACADEMIC_SESSION;\n  payload: AcademicSessionInterface;\n}\n\n// UPDATE ACADEMIC SESSION\nexport interface UpdateAcademicSessionAction {\n  type: ActionTypes.UPDATE_ACADEMIC_SESSION;\n  payload: AcademicSessionInterface;\n}\n\n// ACTIVATE ACADEMIC SESSION\nexport interface ActivateAcademicSessionAction {\n  type: ActionTypes.ACADEMIC_SESSION_ACTIVATION;\n  payload: AcademicSessionInterface;\n}\n\n// DELETE ACADEMIC SESSION\nexport interface DeleteAcademicSessionAction {\n  type: ActionTypes.DELETE_ACADEMIC_SESSION;\n  payload: string;\n}\n\n// GET ACTIVE ACADEMIC SESSION\nexport interface GetActiveAcademicSessionAction {\n  type: ActionTypes.GET_ACTIVE_ACADEMIC_SESSION;\n  payload: AcademicSessionInterface | \"none\";\n}\n\nexport type SessionActionType =\n  | GetPlansTypesAction\n  | GetDeletedPlansTypesAction\n  | CreatePlansTypeAction\n  | UpdatePlansTypeAction\n  | DeletePlansTypeAction\n  | GetAllSessionPlansAction\n  | GetActiveSessionPlanAction\n  | CreateSessionPlansAction\n  | UpdateSessionPlansAction\n  | ActivateSessionPlansAction\n  | DeleteSessionPlanAction\n  | setSelectedPlanTypeActions\n  | GetAllAcademicSessionAction\n  | CreateAcademicSessionAction\n  | UpdateAcademicSessionAction\n  | ActivateAcademicSessionAction\n  | DeleteAcademicSessionAction\n  | GetActiveAcademicSessionAction;\n\n/**\n * * ****************************** ACTIONS *****************************\n */\n\n// GET ACTIVE PLAN TYPES ==========================\nexport const GetPlansTypes = (callback: Function) => {\n  callback(true, \"\");\n  return async (dispatch: Dispatch) => {\n    try {\n      setAxiosToken();\n      const res = await axios.get<PlansTypeInterface[]>(\n        `${API.CLAIMING}/session-type`\n      );\n      console.log({ GET_PLANS_TYPES: res.data });\n      let plan_types: PlansTypeInterface[] = [];\n      if (res.status === 200) {\n        // setApplications(res.data);\n        if (res.data !== null && res.data.length > 0) {\n          plan_types = res.data;\n        }\n      }\n      dispatch<GetPlansTypesAction>({\n        type: ActionTypes.GET_PLANS_TYPES,\n        payload: plan_types,\n      });\n      callback(false, \"\");\n    } catch (error) {\n      console.error({ error: errorToText(error) });\n      callback(false, errorToText(error));\n    }\n  };\n};\n\n// GET ACTIVE PLAN TYPES ==========================\nexport const GetDeletedPlansTypes = (callback: Function) => {\n  callback(true, \"\");\n  return async (dispatch: Dispatch) => {\n    try {\n      setAxiosToken();\n      const res = await axios.get<PlansTypeInterface[]>(\n        `${API.CLAIMING}/session-type/deleted`\n      );\n      console.log({ GET_DELETED_PLANS_TYPES: res.data });\n      let plan_types: PlansTypeInterface[] = [];\n      if (res.status === 200) {\n        // setApplications(res.data);\n        if (res.data !== null && res.data.length > 0) {\n          plan_types = res.data;\n        }\n      }\n      dispatch<GetDeletedPlansTypesAction>({\n        type: ActionTypes.GET_DELETED_PLANS_TYPES,\n        payload: plan_types,\n      });\n      callback(false, \"\");\n    } catch (error) {\n      console.error({ error: errorToText(error) });\n      callback(false, errorToText(error));\n    }\n  };\n};\n\n// CREATE PLAN TYPE\nexport const createPlanType = (\n  data: PlansTypeInterface\n): CreatePlansTypeAction => {\n  return {\n    type: ActionTypes.CREATE_PLAN_TYPE,\n    payload: data,\n  };\n};\n\n// UPDATE PLAN TYPE\nexport const updatePlanType = (\n  data: PlansTypeInterface\n): UpdatePlansTypeAction => {\n  return {\n    type: ActionTypes.UPDATE_PLAN_TYPE,\n    payload: data,\n  };\n};\n\n// DELETE PLAN TYPE\nexport const deletePlanType = (\n  data: PlansTypeInterface\n): DeletePlansTypeAction => {\n  return {\n    type: ActionTypes.DELETE_PLAN_TYPE,\n    payload: data,\n  };\n};\n\n// SELECT PLAN TYPES ==========================\nexport const setSelectedPlanType = (\n  thisType: PlansTypeInterface | \"all\"\n): setSelectedPlanTypeActions => {\n  console.log({ thisType });\n  return {\n    type: ActionTypes.SELECT_PLAN_TYPE,\n    payload: thisType,\n  };\n};\n\n// GET ACTIVE PLAN TYPES ==========================\nexport const getActiveSessionPlan = (callback: Function) => {\n  callback(true, \"\");\n  return async (dispatch: Dispatch) => {\n    try {\n      setAxiosToken();\n      const res = await axios.get<SessionPlanInterface>(\n        `${API.CLAIMING}/session/active/`\n      );\n      console.log({ GET_ACTIVE_SESSION_PLANS: res.data });\n      let session_plan: SessionPlanInterface | undefined = undefined;\n      // if (res.status === 200) {\n      //   // setApplications(res.data);\n      // }\n      if (res.data && res.data.is_active !== undefined) {\n        session_plan = res.data;\n      }\n      console.log({ session_plan: res.data });\n\n      dispatch<GetActiveSessionPlanAction>({\n        type: ActionTypes.GET_ACTIVE_SESSION_PLANS,\n        payload: session_plan ? session_plan : \"none\",\n      });\n      callback(false, \"\", session_plan ? session_plan : \"none\");\n    } catch (error) {\n      console.error({ error: errorToText(error) });\n      callback(false, errorToText(error));\n    }\n  };\n};\n\n// GET ALL PLAN TYPES ==========================\nexport const GetAllSessionPlans = (callback: Function) => {\n  callback(true, \"\");\n  return async (dispatch: Dispatch) => {\n    try {\n      setAxiosToken();\n      const res = await axios.get<SessionPlanInterface[]>(\n        `${API.CLAIMING}/session/`\n      );\n      console.log({ GET_ALL_SESSION_PLANS: res.data });\n      let session_data: SessionPlanInterface[] = [];\n      if (res.status === 200) {\n        // setApplications(res.data);\n        if (res.data !== null && res.data.length > 0) {\n          session_data = res.data;\n        }\n      }\n      dispatch<GetAllSessionPlansAction>({\n        type: ActionTypes.GET_ALL_SESSION_PLANS,\n        payload: session_data,\n      });\n      callback(false, \"\", session_data);\n    } catch (error) {\n      console.error({ error: errorToText(error) });\n      callback(false, errorToText(error));\n    }\n  };\n};\n\n// CREATE SESSION PLAN\nexport const createSessionPlan = (\n  data: SessionPlanInterface\n): CreateSessionPlansAction => {\n  return {\n    type: ActionTypes.CREATE_SESSION_PLAN,\n    payload: data,\n  };\n};\n\n// UPDATE SESSION PLAN\nexport const updateSessionPlan = (\n  data: SessionPlanInterface\n): UpdateSessionPlansAction => {\n  return {\n    type: ActionTypes.UPDATE_SESSION_PLAN,\n    payload: data,\n  };\n};\n\n// ACTIVATE SESSION PLAN\nexport const sessionActivation = (\n  data: SessionPlanInterface\n): ActivateSessionPlansAction => {\n  return {\n    type: ActionTypes.SESSION_ACTIVATION,\n    payload: data,\n  };\n};\n\n// DELETE SESSION PLAN\nexport const deleteSessionPlan = (data: string): DeleteSessionPlanAction => {\n  return {\n    type: ActionTypes.DELETE_SESSION_PLAN,\n    payload: data,\n  };\n};\n\n// CREATE ACADEMIC SESSION\nexport const createAcademicSession = (\n  data: AcademicSessionInterface\n): CreateAcademicSessionAction => {\n  return {\n    type: ActionTypes.CREATE_ACADEMIC_SESSION,\n    payload: data,\n  };\n};\n\n// GET ALL ACADEMIC SESSION ==========================\nexport const GetAllAcademicSession = (callback: Function) => {\n  callback(true, \"\");\n  return async (dispatch: Dispatch) => {\n    try {\n      setAxiosToken();\n      const res = await axios.get<AcademicSessionInterface[]>(\n        `${API.PLACEMENT}/postrequestperiod/`\n      );\n      console.log({ GET_ALL_SESSION_PLANS: res.data });\n      let session_data: AcademicSessionInterface[] = [];\n      if (res.status === 200) {\n        // setApplications(res.data);\n        if (res.data !== null && res.data.length > 0) {\n          session_data = res.data;\n        }\n      }\n      console.log(\"====================================\");\n      console.log({ GetAllAcademicSession: res });\n      console.log(\"====================================\");\n      dispatch<GetAllAcademicSessionAction>({\n        type: ActionTypes.GET_ALL_ACADEMIC_SESSION,\n        payload: session_data,\n      });\n      callback(false, \"\", session_data);\n    } catch (error) {\n      console.error({ error: errorToText(error) });\n      callback(false, errorToText(error));\n    }\n  };\n};\n\n// UPDATE ACADEMIC SESSION\nexport const updateAcademicSession = (\n  data: AcademicSessionInterface\n): UpdateAcademicSessionAction => {\n  return {\n    type: ActionTypes.UPDATE_ACADEMIC_SESSION,\n    payload: data,\n  };\n};\n\n// ACTIVATE ACADEMIC SESSION\nexport const academicSessionActivation = (\n  data: AcademicSessionInterface\n): ActivateAcademicSessionAction => {\n  return {\n    type: ActionTypes.ACADEMIC_SESSION_ACTIVATION,\n    payload: data,\n  };\n};\n\n// DELETE ACADEMIC SESSION\nexport const deleteAcademicSession = (\n  data: string\n): DeleteAcademicSessionAction => {\n  return {\n    type: ActionTypes.DELETE_ACADEMIC_SESSION,\n    payload: data,\n  };\n};\n\n// GET ACTIVE PLAN TYPES ==========================\nexport const getActiveAcademicSession = (callback: Function) => {\n  callback(true, \"\");\n  return async (dispatch: Dispatch) => {\n    try {\n      setAxiosToken();\n      const res = await axios.get<AcademicSessionInterface>(\n        `${API.PLACEMENT}/postrequestperiod/one`\n      );\n      console.log({ GET_ACTIVE_ACADEMIC_SESSION: res.data });\n      let session_plan: AcademicSessionInterface | undefined = undefined;\n      // if (res.status === 200) {\n      //   // setApplications(res.data);\n      // }\n      if (res.data) {\n        session_plan = res.data;\n      }\n      console.log({ session_plan: res.data });\n\n      dispatch<GetActiveAcademicSessionAction>({\n        type: ActionTypes.GET_ACTIVE_ACADEMIC_SESSION,\n        payload: session_plan ? session_plan : \"none\",\n      });\n      callback(false, \"\", session_plan ? session_plan : \"none\");\n    } catch (error) {\n      console.error({ error: errorToText(error) });\n      callback(false, errorToText(error));\n    }\n  };\n};\n","import axios from \"axios\";\nimport { Dispatch } from \"redux\";\nimport { ActionTypes } from \"./types\";\nimport {\n  CandidatesInterface,\n  DocumentCategoryInterface,\n  DocumentFieldsInterface,\n  DocumentSubCategoryInterface,\n} from \"../shared/interfaces\";\nimport { API } from \"../utils/api\";\nimport { setAxiosToken } from \"../utils/AxiosToken\";\nimport { errorToText } from \"../utils/errors\";\nimport { VerifyDocumentInterface } from \"./users\";\n\n/**\n * * ****************************** INTERFACES *****************************\n */\n\n// CATEGORY\nexport interface GetDocumentCategoryAction {\n  type: ActionTypes.GET_DOCUMENT_CATEGORY;\n  payload: DocumentCategoryInterface[];\n}\n\nexport interface CreateDocumentCategoryAction {\n  type: ActionTypes.CREATE_DOCUMENT_CATEGORY;\n  payload: DocumentCategoryInterface;\n}\n\nexport interface UpdateDocumentCategoryAction {\n  type: ActionTypes.UPDATE_DOCUMENT_CATEGORY;\n  payload: DocumentCategoryInterface;\n}\n\nexport interface DeleteDocumentCategoryAction {\n  type: ActionTypes.DELETE_DOCUMENT_CATEGORY;\n  payload: string;\n}\n\n// SUB CATEGORY\nexport interface GetDocumentSubCategoryAction {\n  type: ActionTypes.GET_DOCUMENT_SUB_CATEGORY;\n  payload: DocumentSubCategoryInterface[];\n}\n\nexport interface CreateDocumentSubCategoryAction {\n  type: ActionTypes.CREATE_DOCUMENT_SUB_CATEGORY;\n  payload: DocumentSubCategoryInterface;\n}\n\nexport interface UpdateDocumentSubCategoryAction {\n  type: ActionTypes.UPDATE_DOCUMENT_SUB_CATEGORY;\n  payload: DocumentSubCategoryInterface;\n}\n\nexport interface DeleteDocumentSubCategoryAction {\n  type: ActionTypes.DELETE_DOCUMENT_SUB_CATEGORY;\n  payload: string;\n}\n\n// FIELDS\nexport interface GetDocumentFieldsAction {\n  type: ActionTypes.GET_DOCUMENT_FIELDS;\n  payload: DocumentFieldsInterface[];\n}\n\nexport interface CreateDocumentFieldsAction {\n  type: ActionTypes.CREATE_DOCUMENT_FIELDS;\n  payload: DocumentFieldsInterface;\n}\n\nexport interface UpdateDocumentFieldsAction {\n  type: ActionTypes.UPDATE_DOCUMENT_FIELDS;\n  payload: DocumentFieldsInterface;\n}\n\nexport interface DeleteDocumentFieldsAction {\n  type: ActionTypes.DELETE_DOCUMENT_FIELDS;\n  payload: string;\n}\n\n// DOCUMENT CHECKING\nexport interface GetCandidatesInInstituteAtion {\n  type: ActionTypes.GET_CANDIDATE_IN_INSTITUTE;\n  payload: CandidatesInterface[];\n}\n\nexport interface VerifyDocumentAction {\n  type: ActionTypes.VERIFY_DOCUMENT;\n  payload: VerifyDocumentInterface;\n}\n\nexport type DocumentCategoryActionType =\n  | GetDocumentCategoryAction\n  | CreateDocumentCategoryAction\n  | UpdateDocumentCategoryAction\n  | DeleteDocumentCategoryAction\n  | GetDocumentSubCategoryAction\n  | CreateDocumentSubCategoryAction\n  | UpdateDocumentSubCategoryAction\n  | DeleteDocumentSubCategoryAction\n  | GetDocumentFieldsAction\n  | CreateDocumentFieldsAction\n  | UpdateDocumentFieldsAction\n  | DeleteDocumentFieldsAction\n  | GetCandidatesInInstituteAtion\n  | VerifyDocumentAction;\n\n/**\n * * ****************************** ACTIONS *****************************\n */\n\n// CATEGORY\n\nexport const getDocumentCategory = () => {\n  return async (dispatch: Dispatch) => {\n    try {\n      setAxiosToken();\n      const res = await axios.get(`${API.AUTH}/detailcategory`);\n      console.log({ docCategory: res });\n      dispatch<GetDocumentCategoryAction>({\n        type: ActionTypes.GET_DOCUMENT_CATEGORY,\n        payload: res.data,\n      });\n    } catch (error) {\n      console.error({ error: errorToText(error) });\n    }\n  };\n};\n\nexport const createDocumentCategory = (data: DocumentCategoryInterface) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<CreateDocumentCategoryAction>({\n      type: ActionTypes.CREATE_DOCUMENT_CATEGORY,\n      payload: data,\n    });\n  };\n};\n\nexport const updateDocumentCategory = (data: DocumentCategoryInterface) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<UpdateDocumentCategoryAction>({\n      type: ActionTypes.UPDATE_DOCUMENT_CATEGORY,\n      payload: data,\n    });\n  };\n};\n\nexport const deleteDocumentCategory = (data: string) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<DeleteDocumentCategoryAction>({\n      type: ActionTypes.DELETE_DOCUMENT_CATEGORY,\n      payload: data,\n    });\n  };\n};\n\n// SUB CATEGORY\nexport const getDocumentSubCategory = () => {\n  return async (dispatch: Dispatch) => {\n    try {\n      setAxiosToken();\n      const res = await axios.get<DocumentSubCategoryInterface[]>(\n        `${API.AUTH}/detailsubcategory`\n      );\n      console.log({ docSubCategory: res });\n      dispatch<GetDocumentSubCategoryAction>({\n        type: ActionTypes.GET_DOCUMENT_SUB_CATEGORY,\n        payload: res.data,\n        // payload: response.data,\n      });\n    } catch (error) {\n      console.log({ doc_SUB_category_error: error });\n    }\n  };\n};\n\nexport const createDocumentSubCategory = (\n  data: DocumentSubCategoryInterface\n) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<CreateDocumentSubCategoryAction>({\n      type: ActionTypes.CREATE_DOCUMENT_SUB_CATEGORY,\n      payload: data,\n    });\n  };\n};\n\nexport const updateDocumentSubCategory = (\n  data: DocumentSubCategoryInterface\n) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<UpdateDocumentSubCategoryAction>({\n      type: ActionTypes.UPDATE_DOCUMENT_SUB_CATEGORY,\n      payload: data,\n    });\n  };\n};\n\nexport const deleteDocumentSubCategory = (data: string) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<DeleteDocumentSubCategoryAction>({\n      type: ActionTypes.DELETE_DOCUMENT_SUB_CATEGORY,\n      payload: data,\n    });\n  };\n};\n\n// FIELDS\nexport const getDocumentFields = () => {\n  return async (dispatch: Dispatch) => {\n    try {\n      setAxiosToken();\n      const res = await axios.get<DocumentFieldsInterface[]>(\n        `${API.AUTH}/categorysubcatedata`\n      );\n      console.log({ docFields: res });\n      dispatch<GetDocumentFieldsAction>({\n        type: ActionTypes.GET_DOCUMENT_FIELDS,\n        payload: res.data,\n        // payload: response.data,\n      });\n    } catch (error) {\n      console.log({ doc_SUB_category_error: error });\n    }\n  };\n};\n\nexport const createDocumentFields = (data: DocumentFieldsInterface) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<CreateDocumentFieldsAction>({\n      type: ActionTypes.CREATE_DOCUMENT_FIELDS,\n      payload: data,\n    });\n  };\n};\n\nexport const updateDocumentFields = (data: DocumentFieldsInterface) => {\n  console.log({ reducer: data });\n  return async (dispatch: Dispatch) => {\n    dispatch<UpdateDocumentFieldsAction>({\n      type: ActionTypes.UPDATE_DOCUMENT_FIELDS,\n      payload: data,\n    });\n  };\n};\n\nexport const deleteDocumentFields = (data: string) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<DeleteDocumentFieldsAction>({\n      type: ActionTypes.DELETE_DOCUMENT_FIELDS,\n      payload: data,\n    });\n  };\n};\n\n// REMOVE DUPLICATION IN CANDIDATES IN EDUCATION CATEGORY PER SESSION\nconst distinctCandidates = (\n  candidatesData: CandidatesInterface[]\n): CandidatesInterface[] => {\n  let result: CandidatesInterface[] = [];\n  let user_ids: string[] = [];\n  const newArray: CandidatesInterface[] = candidatesData.filter((candidate) => {\n    return candidate !== null && candidate !== undefined;\n  });\n  newArray.forEach((candidate) => {\n    if (!user_ids.includes(candidate.user_id)) {\n      result.push(candidate);\n      user_ids.push(candidate.user_id);\n    }\n  });\n  return result;\n};\n// CANDIDATE IN EDUCATION CATEGORY PER SESSION\nexport const getCandidatesInInstitute = (\n  educatin_type_id: string,\n  session_id: string,\n  callback: Function\n) => {\n  return async (dispatch: Dispatch) => {\n    callback(true, \"\", null);\n    try {\n      setAxiosToken();\n      const res = await axios.get<CandidatesInterface[]>(\n        `${API.APPLICATION}/educationtypeuserdocs/${educatin_type_id}/${session_id}`\n      );\n\n      console.log(\"====================================\");\n      console.log({\n        getCandidatesInInstitute: res,\n        distinctCandidates: distinctCandidates(res.data),\n      });\n      console.log(\"====================================\");\n      dispatch<GetCandidatesInInstituteAtion>({\n        type: ActionTypes.GET_CANDIDATE_IN_INSTITUTE,\n        payload: distinctCandidates(res.data),\n        // payload: response.data,\n      });\n      callback(false, \"\", distinctCandidates(res.data));\n    } catch (error) {\n      console.log({ getCandidatesInInstitute: error });\n      callback(false, errorToText(error), null);\n    }\n  };\n};\n\nexport const verifyDocument = (data: VerifyDocumentInterface) => {\n  console.log(\"================verifyDocument====================\");\n  console.log({ verifyDocument: data });\n  console.log(\"================verifyDocument====================\");\n  return async (dispatch: Dispatch) => {\n    dispatch<VerifyDocumentAction>({\n      type: ActionTypes.VERIFY_DOCUMENT,\n      payload: data,\n    });\n  };\n};\n","import React, { FC, ReactElement, ReactNode } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Auth, System } from \"../../actions\";\nimport { StoreState } from \"../../reducers\";\nimport { NavToogle, PageHasSubNav } from \"../../actions\";\nimport { MdBrightness1, MdSearch } from \"react-icons/md\";\n\n// props for the component\ninterface AppProps {\n  auth: Auth;\n  system: System;\n  PageHasSubNav: Function;\n  NavToogle: Function;\n  children: ReactNode;\n}\n//\ninterface AppState {\n  loading: boolean;\n}\n\nclass _SideNavigation extends React.Component<AppProps, AppState> {\n  constructor(props: AppProps) {\n    super(props);\n\n    this.state = {\n      loading: false,\n    };\n  }\n\n  componentDidMount = () => this.props.PageHasSubNav(true);\n  componentWillUnmount = () => this.props.PageHasSubNav(false);\n\n  render() {\n    const isAuthenticated = this.props.auth.isAuthenticated;\n\n    if (isAuthenticated === false) {\n      return null;\n    }\n\n    const navActive = this.props.system.navigation;\n    return (\n      <div\n        className={`fixed w-48 p-1 pr-2 pl-6 text-gray-700 bg-white ${\n          navActive === true ? \"lg:left-16  left-16\" : \" -left-72 lg:left-16\"\n        }  top-0 bottom-0 pt-20 z-30 shadow-lg  transition-all duration-500 ease-in-out overflow-y-auto`}\n      >\n        {this.props.children}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = ({\n  auth,\n  system,\n}: StoreState): { auth: Auth; system: System } => {\n  return { auth: auth, system: system };\n};\n\nexport const SideNavigation = connect(mapStateToProps, {\n  NavToogle,\n  PageHasSubNav,\n})(_SideNavigation);\n\n//************************************ FORM SEARCH **************************************** */\n\ntype SearchComponentInterface = {\n  data: any[];\n};\n\nexport const Search: FC<SearchComponentInterface> = ({\n  data,\n}): ReactElement => {\n  return (\n    <div className=\"m-1 rounded-md shadow-md border border-blue-400 bg-white p-1 flex \">\n      <label htmlFor=\"search-text\" className=\"inline-block text-2xl\">\n        <MdSearch className=\"inline-block text-blue-400\" />\n      </label>\n      <input\n        type=\"search\"\n        className=\"outline-none bg-transparent flex-1 pl-1\"\n        placeholder=\"Search\"\n        id=\"search-text\"\n      />\n    </div>\n  );\n};\n\n//************************************ FORM SEARCH **************************************** */\n\ntype MainItemComponentInterface = {\n  title: string;\n  icon?: any;\n  active?: boolean;\n  count?: number;\n};\n\n/**\n *\n * @param param0\n * @returns\n */\nexport const MainItem: FC<MainItemComponentInterface> = ({\n  title = \"\",\n  icon = MdBrightness1,\n  active = false,\n  count = 0,\n}): ReactElement => {\n  const IconDefined = icon;\n  return (\n    <section\n      className={`${\n        active === true\n          ? \"bg-blue-500 text-white font-bold\"\n          : \"bg-blue-100 text-blue-800\"\n      } mb-1 hover:font-bold py-1 hover:bg-blue-400 hover:text-white --font-bold  px-2 rounded-md flex cursor-pointer items-center`}\n    >\n      <section className=\"flex-1\">\n        <IconDefined className=\"inline-block mr-1 text-xs\" />\n        <span>{title}</span>\n      </section>\n\n      {count > 0 ? (\n        <span className=\"px-0.5 my-1 text-xs bg-blue-600 text-white rounded-full\">\n          {count}\n        </span>\n      ) : null}\n    </section>\n  );\n};\n\n//************************************ FORM SEARCH **************************************** */\n\ntype SubItemContainerComponentInterface = {\n  children: ReactNode;\n};\n\n/**\n *\n * @param param0\n * @returns\n */\nexport const SubItemContainer: FC<SubItemContainerComponentInterface> = ({\n  children,\n}): ReactElement => {\n  return (\n    <div className=\"ml-3 overflow-y-auto border-l-2 border-blue-200 -mt-1 pt-2 mb-2 pl-1 cursor-pointer\">\n      {children}\n    </div>\n  );\n};\n\n//************************************ FORM SEARCH **************************************** */\n\ntype SubItemComponentInterface = {\n  title: string;\n  icon?: any;\n  active?: boolean;\n  count?: number;\n};\n\n/**\n *\n * @param param0\n * @returns\n * @important Remenber to use these components inside the <SubItemContainer>...</SubItemContainer>\n */\nexport const SubItem: FC<SubItemComponentInterface> = ({\n  title = \"\",\n  icon = MdBrightness1,\n  active = false,\n  count = 0,\n}): ReactElement => {\n  const IconDefined = icon;\n\n  return (\n    <div\n      className={`animate__animated animate__zoomIn animate__faster ${\n        active === true ? \"bg-blue-500 text-white font-bold\" : \" text-blue-800\"\n      } text-blue-800 bg-blue-200 rounded-md px-1 mb-1 flex items-center py-1 font-bold`}\n    >\n      <IconDefined\n        className={`inline-block mr-0.1 text-xs ${\n          active === true ? \"text-white\" : \"\"\n        }`}\n      />\n      <span\n        className={`inline-block pl-1 ${active === true ? \"text-white\" : \"\"}`}\n      >\n        {title}\n      </span>\n      {count >= 1 ? (\n        <span\n          className={`text-sm fint-bold ${active === true ? \"text-white\" : \"\"}`}\n        >\n          {count}\n        </span>\n      ) : null}\n    </div>\n  );\n};\n","import React, { useState } from \"react\";\nimport { MdSearch } from \"react-icons/md\";\nimport { connect } from \"react-redux\";\nimport { ApplicationSession } from \"../../../actions\";\nimport {\n  course,\n  CandidateClaimInterface,\n  claimApplicationsInterface,\n  ClaimExamResultsDetails,\n} from \"../../../interfaces\";\nimport { candidatePlacementInterface } from \"../../../interfaces/placement\";\nimport { isClaimAllowed } from \"./ClaimForm\";\n\nexport const getCourseById = (courses: course[], course_id: string) => {\n  return courses.find((item) => item.course_id === course_id);\n};\n\nexport const getCourseIdBySheetId = (\n  allData: ClaimExamResultsDetails[],\n  sheet_id: string\n) => {\n  return allData.find((item) => item.answer_sheet_id === sheet_id);\n};\n\nexport const searchApplication = (\n  objList: claimApplicationsInterface[],\n  text: any\n): claimApplicationsInterface[] => {\n  if (undefined === text || text === \"\") return objList;\n  return objList.filter((product) => {\n    let flag;\n    // let dataKeys = product;\n\n    for (let prop in product) {\n      flag = false;\n      if (prop === \"position\") {\n        flag =\n          product.position.position_title\n            .toString()\n            .toLowerCase()\n            .indexOf(text.toLowerCase()) > -1;\n      }\n      if (flag) break;\n    }\n    return flag;\n  });\n  // return objList.filter((product) =>\n  //   product.position.position_title.includes(text)\n  // );\n};\n\ntype FormPlacementListProps = {\n  setChooseClaimFile: (value: boolean) => void;\n  setClaimFileId: (value: string) => void;\n  setViewThisFile: (value: string) => void;\n  claimFileId: string;\n  viewThisFile: string;\n  myPlacement: candidatePlacementInterface | null;\n  myClaims: CandidateClaimInterface[];\n  activeSession: ApplicationSession;\n\n  // REDUX //////////////////////\n};\n\nconst FormPlacementList: React.FC<FormPlacementListProps> = (props) => {\n  const [searchInput, setSearchInput] = useState<string>(\"\");\n\n  return (\n    <section>\n      {/* SEARCH PART */}\n      <div className=\"flex items-center w-full my-1\">\n        <MdSearch className=\"w-6 h-6 absolute ml-2\" />\n        <input\n          type=\"text\"\n          placeholder=\"Search\"\n          className=\"focus:border-2 h-7 ml-1 pl-9 mr-2 bg-gray-100 focus:border-gray-700 w-full rounded\"\n          onChange={(e) => setSearchInput(e.target.value)}\n          value={searchInput}\n          disabled={\n            props.myPlacement === null ||\n            isClaimAllowed(\n              props.myClaims,\n              props.activeSession.session_plan_id,\n              props.myPlacement.placed._id\n            )\n              ? false\n              : true\n          }\n        />\n        <button\n          className=\"bg-red-200 text-red-700 py-1 px-2 mr-1 rounded text-sm focus:outline-none\"\n          type=\"button\"\n          onClick={() => {\n            props.setChooseClaimFile(false);\n            props.setViewThisFile(\"\");\n          }}\n        >\n          Close\n        </button>\n      </div>\n      {/* END SEARCH PART ///////////////// */}{\" \"}\n      {/* searchData(props.candidateAnswers, searchInput) */}\n      <div className=\"w-full h-52 mt-2 overflow-y-auto divide-y divide-gray-300\">\n        {props.myPlacement ? (\n          isClaimAllowed(\n            props.myClaims,\n            props.activeSession.session_plan_id,\n            props.myPlacement.placed._id\n          ) && (\n            <div className=\"group flex items-center justify-between my-1 hover:bg-gray-100\">\n              <div\n                className=\"p-1 w-full mr-2 cursor-pointer\"\n                onClick={() => {\n                  props.setChooseClaimFile(false);\n                  props.setClaimFileId(props.myPlacement!.placed._id);\n                }}\n              >\n                <p className=\"text-base font-medium text-black\">\n                  Placed on {props.myPlacement.placed.school.school_name}\n                </p>\n              </div>\n              <button\n                type=\"button\"\n                className=\"bg-blue-200 hover:bg-blue-300 text-blue-700 group-hover:text-blue-800 py-1 px-2 mr-1 rounded text-sm\"\n                onClick={() => {\n                  props.setViewThisFile(props.myPlacement!.placed._id);\n                }}\n              >\n                View\n              </button>\n            </div>\n          )\n        ) : (\n          <div className=\"text-center p-3\">\n            <p className=\"text-base font-medium text-black\">\n              No placement to claim on!\n            </p>\n          </div>\n        )}\n      </div>\n    </section>\n  );\n};\n\n// const mapStateToProps = ({\n//   course,\n// }: StoreState): {\n//   courses: course[] | null;\n// } => {\n//   return {\n//     courses: course.courses,\n//   };\n// };\nexport default React.memo(connect(null, {})(FormPlacementList));\n","import axios from \"axios\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Auth, loadCourses, PushPopupAlert } from \"../../../actions\";\nimport {\n  createClaim,\n  DocumentClaimUser,\n  GetClaimingTypes,\n  getClaimReasons,\n  getMyAnswers,\n  getMyClaims,\n  getMyPlacement,\n  getMyRejectedApplications,\n  getMyRejectedDocuments,\n} from \"../../../actions/claiming\";\nimport {\n  getDocumentCategory,\n  getDocumentSubCategory,\n  getDocumentFields,\n} from \"../../../actions/document\";\nimport { PopupAlertData } from \"../../../components/Alert/Popup\";\nimport Modal, { ModalSize, Themes } from \"../../../components/Modal/Modal\";\nimport {\n  CandidateClaimInterface,\n  claimApplicationsInterface,\n  ClaimExamResultsDetails,\n  claimReasonInterface,\n  course,\n  PlansInterface,\n  PlansTypeKeys,\n  SessionPlanInterface,\n} from \"../../../interfaces\";\nimport { candidatePlacementInterface } from \"../../../interfaces/placement\";\nimport { PopupAlertTheme } from \"../../../interfaces/popupAlert\";\nimport { StoreState } from \"../../../reducers\";\nimport { ClaimingReducerType } from \"../../../reducers/claiming\";\nimport { DocumentReducerInterface } from \"../../../reducers/document\";\nimport {\n  capitalizeFirstLetter,\n  isEmptyOrSpaces,\n} from \"../../../shared/dataTest\";\nimport { UserInterface } from \"../../../shared/interfaces\";\nimport { API } from \"../../../utils/api\";\nimport { setAxiosToken } from \"../../../utils/AxiosToken\";\nimport { errorToText } from \"../../../utils/errors\";\nimport { isPlanActive } from \"../../SessionSettings/ApplicationSession/SessionDetails\";\nimport ApplicationFormView from \"./ApplicationFormView\";\nimport ChooseReason from \"./ChooseReason\";\nimport DocFormView from \"./DocFormView\";\nimport ExaminationFormView from \"./ExaminationFormView\";\nimport FormApplicationList from \"./FormApplicationList\";\nimport FormDocumentList from \"./FormDocumentList\";\nimport FormExamList, {\n  getCourseById,\n  getCourseIdBySheetId,\n} from \"./FormExamList\";\nimport FormPlacementList from \"./FormPlacementList\";\n\nexport const ClaimGetDocTitle = (\n  documentCategories: DocumentReducerInterface,\n  doc: DocumentClaimUser\n): { category: string; sub_category: string; field: string; main: string } => {\n  let DocCategory: string = \"\",\n    DocSubCategory: string = \"\",\n    DocField: string = \"\",\n    DocTitle: string = \"\";\n  if (\n    doc.sub_category_id.length > 0 &&\n    documentCategories.documentSubCategory\n  ) {\n    DocTitle = documentCategories.documentSubCategory.filter(\n      (c) => c.user_detail_subcategory_id === doc.sub_category_id\n    )[0].title;\n    DocSubCategory = DocTitle;\n  } else if (\n    doc.category_id.length > 0 &&\n    documentCategories.documentCategory\n  ) {\n    DocTitle = documentCategories.documentCategory.filter(\n      (c) => c.user_detail_category_id === doc.category_id\n    )[0].title;\n    DocCategory = DocTitle;\n  }\n  if (\n    doc.category_subcategory_data &&\n    doc.category_subcategory_data.category_subcategory_Data_id.length > 0 &&\n    documentCategories.documentFields\n  ) {\n    console.log({ doc });\n    DocField = documentCategories.documentFields.filter(\n      (c) =>\n        c._id === doc.category_subcategory_data?.category_subcategory_Data_id\n    )[0].title;\n    DocTitle += \" in \" + DocField;\n  }\n\n  return {\n    category: DocCategory,\n    sub_category: DocSubCategory,\n    field: DocField,\n    main: DocTitle,\n  };\n};\n\nexport const isClaimAllowed = (\n  allClaim: CandidateClaimInterface[],\n  period_id: string,\n  claimOnId: string\n): boolean => {\n  if (\n    allClaim.find(\n      (item) =>\n        item.period_id === period_id && item.claiming_on_id === claimOnId\n    )\n  ) {\n    return false;\n  }\n  return true;\n};\n\ntype ClaimFormProps = {\n  // REQUIRED PROPS\n  formState: boolean;\n  setFormState: (value: boolean, response?: boolean) => void;\n  auth: Auth;\n  claiming: ClaimingReducerType;\n  documentReducer: DocumentReducerInterface;\n  courses: course[] | null;\n  loadCourses: Function;\n  getMyAnswers: Function;\n  getMyPlacement: Function;\n  getClaimReasons: Function;\n  createClaim: Function;\n  GetClaimingTypes: Function;\n  getDocumentCategory: Function;\n  getDocumentSubCategory: Function;\n  getDocumentFields: Function;\n  getMyRejectedApplications: Function;\n  getMyRejectedDocuments: Function;\n  getMyClaims: Function;\n  PushPopupAlert: (alert: PopupAlertData) => void;\n};\n\ntype ClaimFormState = {\n  loading: boolean;\n  loadingForm: boolean;\n  formError: {\n    element: string;\n    msg: string;\n  } | null;\n  thisClaimType: PlansTypeKeys | null;\n  thisClaimTypeId: string;\n  claimComment: string;\n  claimFileId: string;\n  chooseClaimFile: boolean;\n  chooseClaimReason: boolean;\n  claimReason: claimReasonInterface | null;\n  myPlacement: candidatePlacementInterface | null;\n  viewThisFile: string;\n  formType: \"DEFAULT\" | \"PROPS\";\n  alertError: string | null;\n};\n\nclass ClaimForm extends Component<ClaimFormProps, ClaimFormState> {\n  constructor(props: ClaimFormProps) {\n    super(props);\n\n    this.state = {\n      loading: false,\n      loadingForm: false,\n      formError: null,\n      thisClaimType: null,\n      thisClaimTypeId: \"\",\n      claimComment: \"\",\n      claimFileId: \"\",\n      chooseClaimFile: false,\n      viewThisFile: \"\",\n      formType: \"DEFAULT\",\n      alertError: null,\n      myPlacement: this.props.claiming.myPlacement,\n      chooseClaimReason: false,\n      claimReason: null,\n    };\n  }\n\n  setLoading = (state: boolean) => {\n    this.setState({ loading: state });\n  };\n\n  setLoadingForm = (state: boolean) => {\n    this.setState({ loadingForm: state });\n  };\n\n  setFormError = (\n    data: {\n      element: string;\n      msg: string;\n    } | null\n  ) => {\n    this.setState({ formError: data });\n  };\n\n  setAlertError = (data: string | null) => {\n    this.setState({ alertError: data });\n  };\n\n  setClaimFileId = (data: string) => {\n    this.setState({ claimFileId: data });\n  };\n\n  setViewThisFile = (data: string) => {\n    this.setState({ viewThisFile: data });\n  };\n\n  setChooseClaimFile = (data: boolean) => {\n    this.setState({ chooseClaimFile: data });\n  };\n\n  setChooseClaimReason = (data: boolean) => {\n    this.setState({ chooseClaimReason: data });\n  };\n\n  setClaimReason = (value: claimReasonInterface | null) => {\n    this.setState({ claimReason: value });\n  };\n\n  setClaimComment = (data: string) => {\n    this.setState({ claimComment: data });\n  };\n\n  isClaimTypeOpen = (\n    thisSession: SessionPlanInterface,\n    thisType: PlansTypeKeys\n  ): boolean => {\n    let data: PlansInterface | undefined;\n    if (thisType === PlansTypeKeys.APPLICATION) {\n      data = thisSession.plans.find(\n        (item) => item.type_key === PlansTypeKeys.APPLICATION\n      );\n      if (data && isPlanActive(thisSession, data) === \"OPEN\") {\n        return true;\n      }\n    } else if (thisType === PlansTypeKeys.DOCUMENT_VALIDATION) {\n      data = thisSession.plans.find(\n        (item) => item.type_key === PlansTypeKeys.DOCUMENT_VALIDATION\n      );\n      if (data && isPlanActive(thisSession, data) === \"OPEN\") {\n        return true;\n      }\n    } else if (thisType === PlansTypeKeys.PLACEMENT_TRANSFER) {\n      data = thisSession.plans.find(\n        (item) => item.type_key === PlansTypeKeys.PLACEMENT_TRANSFER\n      );\n      if (data && isPlanActive(thisSession, data) === \"OPEN\") {\n        return true;\n      }\n    }\n    return false;\n  };\n\n  displayClaimType = (claimType: PlansTypeKeys): string => {\n    let result: string = \"\";\n    switch (claimType) {\n      case PlansTypeKeys.APPLICATION:\n        result = \"application\";\n        break;\n      case PlansTypeKeys.DOCUMENT_VALIDATION:\n        result = \"document\";\n        break;\n      case PlansTypeKeys.EXAMINATION:\n        result = \"exam\";\n        break;\n      case PlansTypeKeys.MARKS_PUBLICATION:\n        result = \"marks publication\";\n        break;\n      case PlansTypeKeys.PLACEMENT_TRANSFER:\n        result = \"placement\";\n        break;\n      default:\n        result = \"\";\n        break;\n    }\n\n    return result;\n  };\n\n  loadExamAnswers = (\n    activeSessionPlan: SessionPlanInterface,\n    user_id: string\n  ) => {\n    this.props.getMyAnswers(\n      activeSessionPlan.session_plan_id,\n      user_id,\n      (status: boolean, msg: string, data: ClaimExamResultsDetails[]) => {\n        this.setLoading(status);\n        if (!status && msg.length) {\n          this.props.PushPopupAlert({\n            title: msg,\n            theme: PopupAlertTheme.danger,\n          });\n        }\n        if (data) {\n          console.log(\"====================================\");\n          console.log({ loadExamAnswers: data });\n          console.log(\"====================================\");\n        }\n      }\n    );\n  };\n\n  componentDidMount = () => {\n    if (this.props.auth.application_session === null) {\n      this.props.PushPopupAlert({\n        title: \"No session active session\",\n        theme: PopupAlertTheme.danger,\n      });\n      this.props.setFormState(false);\n      this.setState({\n        claimFileId: \"\",\n        thisClaimType: null,\n        thisClaimTypeId: \"\",\n        claimComment: \"\",\n        chooseClaimFile: false,\n        formType: \"DEFAULT\",\n        viewThisFile: \"\",\n        formError: null,\n      });\n    } else {\n      if (this.props.documentReducer.documentCategory === null) {\n        this.props.getDocumentCategory();\n      }\n      if (this.props.documentReducer.documentSubCategory === null) {\n        this.props.getDocumentSubCategory();\n      }\n      if (this.props.documentReducer.documentFields === null) {\n        this.props.getDocumentFields();\n      }\n      if (this.props.claiming.claimReasons === null) {\n        this.props.getClaimReasons((status: boolean, msg: string) => {\n          this.setLoading(status);\n          if (!status) {\n            if (msg.length > 0) {\n              this.props.PushPopupAlert({\n                title: msg,\n                theme: PopupAlertTheme.danger,\n              });\n            }\n          }\n        });\n      }\n    }\n  };\n\n  getDocumentById = (\n    documents: DocumentClaimUser[],\n    doc_id: string\n  ): DocumentClaimUser => {\n    return documents.filter((item) => item.doc_id === doc_id)[0];\n  };\n\n  getApplicationById = (\n    applications: claimApplicationsInterface[],\n    application_id: string\n  ): claimApplicationsInterface => {\n    return applications.filter(\n      (item) => item.application_id === application_id\n    )[0];\n  };\n\n  getExamById = (\n    exams: ClaimExamResultsDetails[],\n    answer_sheet_id: string\n  ): ClaimExamResultsDetails | undefined => {\n    return exams.find((item) => item.answer_sheet_id === answer_sheet_id);\n  };\n\n  getValidation = (\n    thisId: string\n  ): {\n    old_reason: string;\n    old_status: string;\n    old_evaluated_by: string;\n  } => {\n    let result: {\n      old_reason: string;\n      old_status: string;\n      old_evaluated_by: string;\n    } = { old_reason: \"\", old_status: \"\", old_evaluated_by: \"\" };\n\n    if (\n      this.state.thisClaimType === PlansTypeKeys.DOCUMENT_VALIDATION &&\n      this.props.claiming.candidateDocuments\n    ) {\n      result = {\n        old_reason: this.getDocumentById(\n          this.props.claiming.candidateDocuments,\n          thisId\n        ).validated_by.comment,\n        old_status: this.getDocumentById(\n          this.props.claiming.candidateDocuments,\n          thisId\n        ).validated_by.validation_status,\n        old_evaluated_by: this.getDocumentById(\n          this.props.claiming.candidateDocuments,\n          thisId\n        ).validated_by.user_id,\n      };\n    } else if (\n      this.state.thisClaimType === PlansTypeKeys.APPLICATION &&\n      this.props.claiming.candidateApplications\n    ) {\n      result = {\n        old_reason: this.getApplicationById(\n          this.props.claiming.candidateApplications,\n          thisId\n        ).override_by.comment,\n        old_status: this.getApplicationById(\n          this.props.claiming.candidateApplications,\n          thisId\n        ).override_by.application_status,\n        old_evaluated_by: this.getApplicationById(\n          this.props.claiming.candidateApplications,\n          thisId\n        ).override_by.user_id,\n      };\n    }\n\n    return result;\n  };\n\n  cleanToClose = (response?: boolean) => {\n    this.props.setFormState(false);\n    this.setState({\n      claimFileId: \"\",\n      thisClaimType: null,\n      thisClaimTypeId: \"\",\n      claimComment: \"\",\n      chooseClaimFile: false,\n      formType: \"DEFAULT\",\n      viewThisFile: \"\",\n      formError: null,\n    });\n  };\n\n  loadUserById = async (user_id: string, callback: Function) => {\n    if (isEmptyOrSpaces(user_id)) {\n      return this.props.PushPopupAlert({\n        title: \"No user id provided\",\n        theme: PopupAlertTheme.danger,\n      });\n    }\n    try {\n      setAxiosToken();\n      const res = await axios.get<UserInterface>(\n        `${API.AUTH}/users/${user_id}`\n      );\n      console.log(\"====================================\");\n      console.log({ loadUserById: res });\n      console.log(\"====================================\");\n      if (res) {\n        callback(res.data);\n      }\n    } catch (error) {\n      console.error({ error });\n      this.props.PushPopupAlert({\n        title: errorToText(error),\n        theme: PopupAlertTheme.danger,\n      });\n    }\n  };\n\n  getClaimTitle = (claimType: PlansTypeKeys): string => {\n    let result: string = \"\";\n    if (\n      claimType === PlansTypeKeys.DOCUMENT_VALIDATION &&\n      this.props.claiming.candidateDocuments\n    ) {\n      result = ClaimGetDocTitle(\n        this.props.documentReducer,\n        this.getDocumentById(\n          this.props.claiming.candidateDocuments,\n          this.state.claimFileId\n        )\n      ).main;\n    }\n    if (\n      claimType === PlansTypeKeys.APPLICATION &&\n      this.props.claiming.candidateApplications\n    ) {\n      result = this.getApplicationById(\n        this.props.claiming.candidateApplications,\n        this.state.claimFileId\n      ).position.position_title;\n    }\n    if (\n      claimType === PlansTypeKeys.EXAMINATION &&\n      this.props.courses &&\n      this.props.claiming.myAnswer &&\n      getCourseIdBySheetId(\n        this.props.claiming.myAnswer,\n        this.state.claimFileId\n      ) &&\n      getCourseById(\n        this.props.courses,\n        getCourseIdBySheetId(\n          this.props.claiming.myAnswer,\n          this.state.claimFileId\n        )!.course\n      )\n    ) {\n      result = getCourseById(\n        this.props.courses,\n        getCourseIdBySheetId(\n          this.props.claiming.myAnswer,\n          this.state.claimFileId\n        )!.course\n      )!.course_name;\n    }\n    if (\n      claimType === PlansTypeKeys.PLACEMENT_TRANSFER &&\n      this.state.myPlacement\n    ) {\n      result = \"Placed on \" + this.state.myPlacement.placed.school.school_name;\n    }\n\n    return result;\n  };\n\n  getClaimInstitute = (claimType: PlansTypeKeys): string => {\n    let result: string = \"\";\n    if (\n      claimType === PlansTypeKeys.APPLICATION &&\n      this.props.claiming.candidateApplications\n    ) {\n      result = this.getApplicationById(\n        this.props.claiming.candidateApplications,\n        this.state.claimFileId\n      ).position.education_institute_id.education_institute_id;\n    }\n\n    return result;\n  };\n\n  handleSubmit = async (e: React.FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n    if (!this.state.thisClaimType) {\n      return this.setFormError({\n        element: \"claim_type\",\n        msg: \"Claim type is required!\",\n      });\n    }\n    if (isEmptyOrSpaces(this.state.claimFileId)) {\n      return this.setFormError({\n        element: \"claim_file\",\n        msg: `Please select ${this.state.thisClaimType.toLocaleLowerCase()} you are claiming on!`,\n      });\n    }\n\n    if (!this.state.claimReason) {\n      return this.setFormError({\n        element: \"claim_reason\",\n        msg: `Please select the reason of your claim!`,\n      });\n    }\n\n    if (isEmptyOrSpaces(this.state.claimComment)) {\n      return this.setFormError({\n        element: \"claim_comment\",\n        msg: `Claim comment is required!`,\n      });\n    }\n\n    if (!this.props.auth.application_session) {\n      return this.setAlertError(`No active claiming session is available!`);\n    }\n\n    this.setLoadingForm(true);\n    let old_evaluator_email: string = \"info@system.com\";\n    let old_evaluator_name: string = \"System\";\n    let evaluator_email: string = \"\";\n    let evaluator_name: string = \"\";\n    let title: string = this.getClaimTitle(this.state.thisClaimType);\n    let institute_id: string = this.getClaimInstitute(this.state.thisClaimType);\n\n    if (\n      this.state.thisClaimType !== PlansTypeKeys.EXAMINATION &&\n      this.getValidation(this.state.claimFileId).old_evaluated_by !== \"system\"\n    ) {\n      await this.loadUserById(\n        this.getValidation(this.state.claimFileId).old_evaluated_by,\n        (data: UserInterface) => {\n          old_evaluator_email = data.email;\n          old_evaluator_name =\n            data.user_info.fname + \" \" + data.user_info.lname;\n        }\n      );\n    }\n\n    if (this.state.thisClaimType === PlansTypeKeys.EXAMINATION) {\n    }\n\n    try {\n      // console.log(\"====================================\");\n      // console.log({\n      //   claiming_on_id: this.state.claimFileId,\n      //   type_key: this.state.thisClaimType,\n      //   user: this.props.auth.user.user_id,\n      //   period_id: this.props.auth.application_session.session_plan_id,\n      //   default_claim_resaons: this.state.claimReason.id,\n      //   reason: this.state.claimComment,\n      //   old_reason:\n      //     this.state.thisClaimType === PlansTypeKeys.EXAMINATION ||\n      //     this.state.thisClaimType === PlansTypeKeys.PLACEMENT_TRANSFER\n      //       ? \"System\"\n      //       : this.getValidation(this.state.claimFileId).old_reason,\n      //   old_status:\n      //     this.state.thisClaimType === PlansTypeKeys.EXAMINATION ||\n      //     this.state.thisClaimType === PlansTypeKeys.PLACEMENT_TRANSFER\n      //       ? \"Failed\"\n      //       : this.getValidation(this.state.claimFileId).old_status,\n      //   old_evaluated_by:\n      //     this.state.thisClaimType === PlansTypeKeys.EXAMINATION ||\n      //     this.state.thisClaimType === PlansTypeKeys.PLACEMENT_TRANSFER\n      //       ? \"\"\n      //       : this.getValidation(this.state.claimFileId).old_evaluated_by,\n      //   old_evaluator_email,\n      //   old_evaluator_name,\n      //   evaluator_email,\n      //   evaluator_name,\n      //   title,\n      // });\n      // console.log(\"====================================\");\n\n      setAxiosToken();\n      const res = await axios.post<CandidateClaimInterface>(\n        `${API.CLAIMING}/user/create`,\n        {\n          claiming_on_id: this.state.claimFileId,\n          type_key: this.state.thisClaimType,\n          user: this.props.auth.user.user_id,\n          period_id: this.props.auth.application_session.session_plan_id,\n          default_claim_resaons: this.state.claimReason.id,\n          reason: this.state.claimComment,\n          old_reason:\n            this.state.thisClaimType === PlansTypeKeys.EXAMINATION ||\n            this.state.thisClaimType === PlansTypeKeys.PLACEMENT_TRANSFER\n              ? \"System\"\n              : this.getValidation(this.state.claimFileId).old_reason,\n          old_status:\n            this.state.thisClaimType === PlansTypeKeys.EXAMINATION ||\n            this.state.thisClaimType === PlansTypeKeys.PLACEMENT_TRANSFER\n              ? \"Failed\"\n              : this.getValidation(this.state.claimFileId).old_status,\n          old_evaluated_by:\n            this.state.thisClaimType === PlansTypeKeys.EXAMINATION ||\n            this.state.thisClaimType === PlansTypeKeys.PLACEMENT_TRANSFER\n              ? \"\"\n              : this.getValidation(this.state.claimFileId).old_evaluated_by,\n          old_evaluator_email,\n          old_evaluator_name,\n          evaluator_email,\n          evaluator_name,\n          title,\n          institute_id,\n        }\n      );\n      console.log({ createClaim: res });\n      if (res.status === 201 || res.status === 200) {\n        this.props.createClaim(res.data);\n        this.props.PushPopupAlert({\n          title: \"Claim sent successful\",\n          theme: PopupAlertTheme.success,\n        });\n        this.cleanToClose(true);\n      }\n    } catch (error) {\n      console.error({ error });\n      this.props.PushPopupAlert({\n        title: errorToText(error),\n        theme: PopupAlertTheme.danger,\n      });\n    }\n    this.setLoadingForm(false);\n  };\n\n  selectClaimType = (thisClaim: string) => {\n    this.setState({\n      thisClaimType: isEmptyOrSpaces(thisClaim)\n        ? null\n        : (thisClaim as PlansTypeKeys),\n    });\n\n    if ((thisClaim as PlansTypeKeys) === PlansTypeKeys.APPLICATION) {\n      if (this.props.claiming.candidateApplications === null) {\n        this.props.getMyRejectedApplications(\n          this.props.auth.user.user_id,\n          (\n            status: boolean,\n            msg: string,\n            data?: claimApplicationsInterface[]\n          ) => {\n            this.setLoading(status);\n            if (!status) {\n              if (msg.length > 0) {\n                this.props.PushPopupAlert({\n                  title: msg,\n                  theme: PopupAlertTheme.danger,\n                });\n              }\n            }\n          }\n        );\n      }\n      if (\n        this.props.courses === null ||\n        (this.props.courses.length === 0 && this.state.loading)\n      ) {\n        this.props.loadCourses(this.setLoading);\n        this.setLoading(false);\n      } else {\n        this.setLoading(false);\n      }\n    } else if ((thisClaim as PlansTypeKeys) === PlansTypeKeys.EXAMINATION) {\n      if (\n        this.props.courses === null ||\n        (this.props.courses.length === 0 && this.state.loading)\n      ) {\n        this.props.loadCourses(this.setLoading);\n        this.setLoading(false);\n      } else {\n        this.setLoading(false);\n      }\n    } else if (\n      (thisClaim as PlansTypeKeys) === PlansTypeKeys.DOCUMENT_VALIDATION\n    ) {\n      if (this.props.claiming.candidateDocuments === null) {\n        this.props.getMyRejectedDocuments(\n          (status: boolean, msg: string, data?: DocumentClaimUser[]) => {\n            this.setLoading(status);\n            if (!status) {\n              if (msg.length > 0) {\n                this.props.PushPopupAlert({\n                  title: msg,\n                  theme: PopupAlertTheme.danger,\n                });\n              }\n            }\n          }\n        );\n      }\n    } else if (\n      (thisClaim as PlansTypeKeys) === PlansTypeKeys.PLACEMENT_TRANSFER\n    ) {\n      if (this.props.claiming.myPlacement === null) {\n        this.props.getMyPlacement(\n          this.props.auth.user.user_id,\n          (\n            status: boolean,\n            msg: string,\n            data?: candidatePlacementInterface | null\n          ) => {\n            this.setLoading(status);\n            if (!status) {\n              if (msg.length > 0) {\n                this.props.PushPopupAlert({\n                  title: msg,\n                  theme: PopupAlertTheme.danger,\n                });\n              }\n            }\n            if (data) {\n              this.setState({ myPlacement: data });\n            }\n          }\n        );\n      }\n    }\n  };\n\n  generateChooseFileTitle = (thisClaimType: PlansTypeKeys | null): string => {\n    let result: string = \"\";\n\n    switch (thisClaimType) {\n      case PlansTypeKeys.APPLICATION:\n        result = `Select application you are claiming on?`;\n        break;\n      case PlansTypeKeys.DOCUMENT_VALIDATION:\n        result = `Select document you are claiming on?`;\n        break;\n      case PlansTypeKeys.EXAMINATION:\n        result = `Select exam you are claiming on?`;\n        break;\n      case PlansTypeKeys.MARKS_PUBLICATION:\n        result = `Select marks publication you are claiming on?`;\n        break;\n      case PlansTypeKeys.PLACEMENT_TRANSFER:\n        result = `Select placement you are claiming on?`;\n        break;\n      default:\n        result = \"Select file you are claiming on?\";\n        break;\n    }\n\n    return result;\n  };\n\n  render() {\n    if (\n      this.props.auth.application_session === null ||\n      this.props.claiming.myClaims === null\n    ) {\n      return null;\n    }\n\n    return (\n      <div className=\"pb-3\">\n        {this.props.formState && (\n          <Modal\n            backDrop={true}\n            theme={Themes.default}\n            close={(): void => {\n              !this.state.loadingForm &&\n                this.state.viewThisFile.length <= 0 &&\n                this.cleanToClose();\n              !this.state.loadingForm &&\n                this.state.viewThisFile.length > 0 &&\n                this.setViewThisFile(\"\");\n            }}\n            displayClose={true}\n            backDropClose={false}\n            title={\n              <div className=\"text-gray-900 font-bold text-xl md:ml-1\">\n                {this.state.viewThisFile.length <= 0 && \"Claiming form\"}\n                {this.state.viewThisFile.length > 0 &&\n                  this.state.thisClaimType ===\n                    PlansTypeKeys.DOCUMENT_VALIDATION &&\n                  \"Viewing document\"}\n                {this.state.viewThisFile.length > 0 &&\n                  this.state.thisClaimType === PlansTypeKeys.APPLICATION &&\n                  \"Viewing application\"}\n              </div>\n            }\n            widthSizeClass={\n              this.state.viewThisFile.length > 0\n                ? ModalSize.extraLarge\n                : ModalSize.medium\n            }\n            padding={{ title: true, body: false, footer: false }}\n          >\n            {/* CLAIM FORM ============================================== */}\n            {this.state.viewThisFile.length <= 0 && (\n              <form onSubmit={(e) => this.handleSubmit(e)}>\n                <div className=\"px-6 pb-3\">\n                  {this.state.alertError && (\n                    <div\n                      className=\"alert-warning cursor-pointer\"\n                      onClick={() => this.setAlertError(null)}\n                    >\n                      {this.state.alertError}\n                    </div>\n                  )}\n                  <div className=\"text-base text-gray-700 sm:text-lg\">\n                    {/* SELECT CLAIM TYPE ============================================== */}\n                    <div className=\"flex flex-col mb-2\">\n                      <label>Claim type</label>\n                      <select\n                        className={`rounded px-2 py-2 w-full bg-white focus:outline-none ${\n                          this.state.formType === \"PROPS\" &&\n                          \"cursor-not-allowed\"\n                        } ${\n                          this.state.formError &&\n                          this.state.formError.element === \"claim_type\"\n                            ? \"border-red-500\"\n                            : \"border-gray-500\"\n                        } border-2`}\n                        onChange={(e: React.ChangeEvent<HTMLSelectElement>) => {\n                          this.selectClaimType(e.target.value);\n                          this.setClaimFileId(\"\");\n                          this.state.formError &&\n                            this.state.formError.element === \"claim_type\" &&\n                            this.setFormError(null);\n                        }}\n                        value={\n                          this.state.thisClaimType\n                            ? this.state.thisClaimType\n                            : \"\"\n                        }\n                        disabled={\n                          this.state.loadingForm ||\n                          this.state.formType === \"PROPS\"\n                        }\n                      >\n                        <option value=\"\">Choose claim type</option>\n                        {Object.values(PlansTypeKeys).map((item, index) => (\n                          <option\n                            value={item}\n                            key={index + item}\n                            className={`${\n                              item === PlansTypeKeys.MARKS_PUBLICATION ||\n                              item === PlansTypeKeys.PLACEMENT_TRANSFER\n                                ? \"hidden\"\n                                : \"block\"\n                            }`}\n                          >\n                            {capitalizeFirstLetter(\n                              item.toLocaleLowerCase().replace(/_/g, \" \")\n                            )}\n                          </option>\n                        ))}\n                      </select>\n                      {this.state.formError &&\n                        this.state.formError.element === \"claim_type\" && (\n                          <span className=\"text-red-500\">\n                            {this.state.formError.msg}\n                          </span>\n                        )}\n                    </div>\n                    {/* END SELECT CLAIM TYPE ============================================== */}\n\n                    {/* SELECT FILE TO CLAIM ON ============================================== */}\n                    <div className=\"flex flex-col mb-2\">\n                      <label>\n                        {this.generateChooseFileTitle(this.state.thisClaimType)}\n                      </label>\n                      <div\n                        className={`text-left bg-white border-2 ${\n                          this.state.formType !== \"PROPS\"\n                            ? \"border-gray-700\"\n                            : \"border-gray-400 text-gray-500\"\n                        } rounded w-full ${\n                          this.state.chooseClaimFile ? \"h-64\" : \"h-10\"\n                        } ${\n                          this.state.formError &&\n                          this.state.formError.element === \"claim_file\"\n                            ? \"border-red-500\"\n                            : \"\"\n                        } border-2 ${\n                          this.state.loading\n                            ? \"cursor-waiting\"\n                            : this.state.thisClaimType &&\n                              !this.state.chooseClaimFile &&\n                              this.state.formType !== \"PROPS\"\n                            ? \"cursor-pointer\"\n                            : !this.state.chooseClaimFile &&\n                              \"cursor-not-allowed\"\n                        }`}\n                        title={\n                          !this.state.thisClaimType\n                            ? \"Choose claim type first!\"\n                            : \"\"\n                        }\n                        onClick={() => {\n                          !this.state.loading &&\n                            this.state.formType === \"DEFAULT\" &&\n                            this.state.thisClaimType &&\n                            !this.state.chooseClaimFile &&\n                            this.setChooseClaimFile(true);\n                          !this.state.loading &&\n                            this.state.formError &&\n                            this.state.formError.element === \"claim_file\" &&\n                            this.setFormError(null);\n                        }}\n                      >\n                        {/* DISPLAYING FILTERED SELECTING FILE ============================ */}\n                        {this.state.claimFileId.length > 0 &&\n                        this.state.thisClaimType &&\n                        !this.state.chooseClaimFile ? (\n                          <p className=\"my-1 mx-2\">\n                            {this.getClaimTitle(this.state.thisClaimType)}\n                          </p>\n                        ) : (\n                          !this.state.chooseClaimFile && (\n                            <p className=\"my-1 mx-2\">\n                              Select Claim{\" \"}\n                              {this.state.thisClaimType &&\n                                this.state.thisClaimType\n                                  .toLocaleLowerCase()\n                                  .replace(/_/g, \" \")}\n                            </p>\n                          )\n                        )}\n                        {/* END DISPLAYING FILTERED SELECTING FILE ============================ */}\n\n                        {/* LISTING OF REJECTED DOCUMENTS ============================ */}\n                        {this.state.chooseClaimFile &&\n                          this.state.thisClaimType ===\n                            PlansTypeKeys.DOCUMENT_VALIDATION &&\n                          this.props.claiming.candidateDocuments &&\n                          this.props.claiming.myClaims &&\n                          this.props.auth.application_session && (\n                            <FormDocumentList\n                              setChooseClaimFile={this.setChooseClaimFile}\n                              setClaimFileId={this.setClaimFileId}\n                              setViewThisFile={this.setViewThisFile}\n                              claimFileId={this.state.claimFileId}\n                              viewThisFile={this.state.viewThisFile}\n                              candidateDocuments={\n                                this.props.claiming.candidateDocuments\n                              }\n                              documentCategories={this.props.documentReducer}\n                              myClaims={this.props.claiming.myClaims}\n                              activeSession={\n                                this.props.auth.application_session\n                              }\n                            />\n                          )}\n                        {/* END LISTING OF REJECTED DOCUMENTS ============================ */}\n                        {/* ---------------------------------------------------------- */}\n                        {/* LISTING OF REJECTED APPLICATION ============================ */}\n                        {this.state.chooseClaimFile &&\n                          this.state.thisClaimType ===\n                            PlansTypeKeys.APPLICATION &&\n                          this.props.claiming.candidateApplications &&\n                          this.props.claiming.myClaims &&\n                          this.props.auth.application_session && (\n                            <FormApplicationList\n                              setChooseClaimFile={this.setChooseClaimFile}\n                              setClaimFileId={this.setClaimFileId}\n                              setViewThisFile={this.setViewThisFile}\n                              claimFileId={this.state.claimFileId}\n                              viewThisFile={this.state.viewThisFile}\n                              candidateApplications={\n                                this.props.claiming.candidateApplications\n                              }\n                              myClaims={this.props.claiming.myClaims}\n                              activeSession={\n                                this.props.auth.application_session\n                              }\n                            />\n                          )}\n                        {/* END LISTING OF REJECTED APPLICATION ============================ */}\n                        {/* ---------------------------------------------------------- */}\n                        {/* LISTING OF FAILED EXAM ============================ */}\n                        {this.state.chooseClaimFile &&\n                          this.state.thisClaimType ===\n                            PlansTypeKeys.EXAMINATION &&\n                          this.props.claiming.myAnswer &&\n                          this.props.claiming.myClaims &&\n                          this.props.auth.application_session && (\n                            <FormExamList\n                              setChooseClaimFile={this.setChooseClaimFile}\n                              setClaimFileId={this.setClaimFileId}\n                              setViewThisFile={this.setViewThisFile}\n                              claimFileId={this.state.claimFileId}\n                              viewThisFile={this.state.viewThisFile}\n                              candidateAnswers={this.props.claiming.myAnswer}\n                              myClaims={this.props.claiming.myClaims}\n                              activeSession={\n                                this.props.auth.application_session\n                              }\n                            />\n                          )}\n                        {/* END LISTING OF FAILED EXAM ============================ */}\n                        {/* ---------------------------------------------------------- */}\n                        {/* PENDING PLACEMENT ============================ */}\n                        {this.state.chooseClaimFile &&\n                          this.state.thisClaimType ===\n                            PlansTypeKeys.PLACEMENT_TRANSFER &&\n                          this.props.claiming.myClaims &&\n                          this.props.auth.application_session && (\n                            <FormPlacementList\n                              setChooseClaimFile={this.setChooseClaimFile}\n                              setClaimFileId={this.setClaimFileId}\n                              setViewThisFile={this.setViewThisFile}\n                              claimFileId={this.state.claimFileId}\n                              viewThisFile={this.state.viewThisFile}\n                              myClaims={this.props.claiming.myClaims}\n                              activeSession={\n                                this.props.auth.application_session\n                              }\n                              myPlacement={this.state.myPlacement}\n                            />\n                          )}\n                        {/* END LISTING OF FAILED Placement ============================ */}\n                      </div>\n                      {this.state.formError &&\n                        this.state.formError.element === \"claim_file\" && (\n                          <span className=\"text-red-500\">\n                            {this.state.formError.msg}\n                          </span>\n                        )}\n                    </div>\n                    {/* END SELECT FILE TO CLAIM ON ============================================== */}\n\n                    {/* CLAIM REASONS ========================================== */}\n                    <div className=\"flex flex-col mb-2\">\n                      <label>Choose reason of your claim</label>\n                      <div\n                        className={`text-left bg-white border-2 border-gray-700 rounded w-full ${\n                          this.state.chooseClaimReason ? \"h-64\" : \"h-auto\"\n                        } ${\n                          this.state.formError &&\n                          this.state.formError.element === \"claim_reason\"\n                            ? \"border-red-500\"\n                            : \"\"\n                        } border-2 ${\n                          this.props.claiming.claimReasons === null\n                            ? \"cursor-wait\"\n                            : \"cursor-pointer\"\n                        }`}\n                        title=\"Choose the reason for your claim!\"\n                        onClick={() => {\n                          !this.state.chooseClaimReason &&\n                            this.setState({ chooseClaimReason: true });\n                          this.state.formError &&\n                            this.state.formError.element === \"claim_reason\" &&\n                            this.setFormError(null);\n                        }}\n                      >\n                        {/* DISPLAYING SELECTED REASON ============================ */}\n                        {this.state.claimReason &&\n                        !this.state.chooseClaimReason ? (\n                          <p className=\"my-1 mx-2\">\n                            {this.state.claimReason.reason}\n                          </p>\n                        ) : (\n                          !this.state.chooseClaimReason && (\n                            <p className=\"my-1 mx-2\">Select reason</p>\n                          )\n                        )}\n                        {/* END DISPLAYING SELECTED REASON ============================ */}\n\n                        {/* LISTING OF CLAIM REASONS ============================ */}\n                        {this.state.chooseClaimReason &&\n                          this.props.claiming.claimReasons && (\n                            <ChooseReason\n                              setChooseClaimReason={this.setChooseClaimReason}\n                              setClaimReason={this.setClaimReason}\n                              claimReason={this.state.claimReason}\n                              allClaimReasons={this.props.claiming.claimReasons}\n                            />\n                          )}\n                        {/* END LISTING OF CLAIM REASONS ============================ */}\n                      </div>\n                      {this.state.formError &&\n                        this.state.formError.element === \"claim_reason\" && (\n                          <span className=\"text-red-500\">\n                            {this.state.formError.msg}\n                          </span>\n                        )}\n                    </div>\n                    {/* END CLAIM REASONS ========================================== */}\n\n                    {/* CLAIM COMMENT ============================================== */}\n                    <div className=\"flex flex-col\">\n                      <label>Comment</label>\n                      <textarea\n                        className={`text-left input-white w-20 inline-block ${\n                          this.state.formError &&\n                          this.state.formError.element === \"claim_comment\"\n                            ? \"border-red-500\"\n                            : \"border-gray-500\"\n                        } border-2`}\n                        placeholder={`Claim comment`}\n                        style={{ resize: \"none\" }}\n                        value={this.state.claimComment}\n                        onChange={(e) => {\n                          this.setClaimComment(e.target.value);\n                          this.state.formError &&\n                            this.state.formError.element === \"claim_comment\" &&\n                            this.setFormError(null);\n                        }}\n                        rows={3}\n                        disabled={this.state.loadingForm}\n                      ></textarea>\n                      {this.state.formError &&\n                        this.state.formError.element === \"claim_comment\" && (\n                          <span className=\"text-red-500\">\n                            {this.state.formError.msg}\n                          </span>\n                        )}\n                    </div>\n                    {/* END CLAIM COMMENT ============================================== */}\n                  </div>\n\n                  <div className=\"pt-3 flex justify-between\">\n                    <button\n                      onClick={() => this.cleanToClose()}\n                      className={`btn bg-gray-400 text-white hover:bg-gray-600 focus:outline-none ${\n                        this.state.loadingForm && \"cursor-not-allowed\"\n                      }`}\n                      type=\"button\"\n                      disabled={this.state.loadingForm || this.state.loading}\n                    >\n                      Exit\n                    </button>\n                    <button\n                      className={`btn bg-primary text-white hover:bg-blue-600 focus:outline-none ${\n                        this.state.loadingForm && \"cursor-wait\"\n                      }`}\n                      type=\"submit\"\n                      disabled={this.state.loadingForm || this.state.loading}\n                    >\n                      {this.state.loadingForm ? \"Loading...\" : \"Claim\"}\n                    </button>\n                  </div>\n                </div>\n              </form>\n            )}\n            {/* END CLAIM FORM ============================================== */}\n\n            {/* CLAIM DOCUMENT VIEW ============================================== */}\n            {this.state.viewThisFile.length > 0 &&\n              this.props.claiming.candidateDocuments &&\n              this.state.thisClaimType ===\n                PlansTypeKeys.DOCUMENT_VALIDATION && (\n                <DocFormView\n                  thisDoc={this.getDocumentById(\n                    this.props.claiming.candidateDocuments,\n                    this.state.viewThisFile\n                  )}\n                  setViewThisFile={this.setViewThisFile}\n                  documentCategories={this.props.documentReducer}\n                  setChooseClaimFile={this.setChooseClaimFile}\n                  setClaimFileId={this.setClaimFileId}\n                />\n              )}\n            {/* END CLAIM DOCUMENT VIEW ============================================== */}\n            {/* ------------------------------------------------------------------------- */}\n            {/* CLAIM APPLICATION VIEW ============================================== */}\n            {this.state.viewThisFile.length > 0 &&\n              this.props.claiming.candidateApplications &&\n              this.state.thisClaimType === PlansTypeKeys.APPLICATION && (\n                <ApplicationFormView\n                  thisApplication={this.getApplicationById(\n                    this.props.claiming.candidateApplications,\n                    this.state.viewThisFile\n                  )}\n                  documentCategories={this.props.documentReducer}\n                  setChooseClaimFile={this.setChooseClaimFile}\n                  setClaimFileId={this.setClaimFileId}\n                  setViewThisFile={this.setViewThisFile}\n                />\n              )}\n            {/* END CLAIM APPLICATION VIEW ============================================== */}\n            {/* ------------------------------------------------------------------------- */}\n            {/* CLAIM EXAMINATION VIEW ============================================== */}\n            {this.state.viewThisFile.length > 0 &&\n              this.props.claiming.myAnswer &&\n              this.state.thisClaimType === PlansTypeKeys.EXAMINATION &&\n              this.getExamById(\n                this.props.claiming.myAnswer,\n                this.state.viewThisFile\n              ) && (\n                <ExaminationFormView\n                  thisAnswerSheet={\n                    this.getExamById(\n                      this.props.claiming.myAnswer,\n                      this.state.viewThisFile\n                    )!\n                  }\n                  setChooseClaimFile={this.setChooseClaimFile}\n                  setClaimFileId={this.setClaimFileId}\n                  setViewThisFile={this.setViewThisFile}\n                  // thisAnswerSheet={undefined}\n                  // setViewThisFile={undefined}\n                  // setChooseClaimFile={undefined}\n                  // setClaimFileId={undefined}\n                />\n              )}\n            {/* END CLAIM EXAMINATION VIEW ============================================== */}\n          </Modal>\n        )}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = ({\n  auth,\n  document,\n  claiming,\n  course,\n}: StoreState): {\n  auth: Auth;\n  documentReducer: DocumentReducerInterface;\n  claiming: ClaimingReducerType;\n  courses: course[] | null;\n} => {\n  return {\n    auth: auth,\n    documentReducer: document,\n    claiming,\n    courses: course.courses,\n  };\n};\n\nexport default React.memo(\n  connect(mapStateToProps, {\n    loadCourses,\n    getMyClaims,\n    getClaimReasons,\n    getMyAnswers,\n    getMyPlacement,\n    createClaim,\n    GetClaimingTypes,\n    getMyRejectedApplications,\n    getMyRejectedDocuments,\n    getDocumentCategory,\n    getDocumentSubCategory,\n    getDocumentFields,\n    PushPopupAlert,\n  })(ClaimForm)\n);\n","import React from \"react\";\nimport Table from \"../../components/Table/Table\";\nimport { isEmptyOrSpaces } from \"../../shared/dataTest\";\nimport { PositionRequirementTableInterface } from \"./ViewPosition\";\n\ninterface RequirementProps {\n  requirements: PositionRequirementTableInterface[];\n}\n\nconst ViewRequirements: React.FC<RequirementProps> = (props) => {\n  const tableData = (): JSX.Element[] => {\n    let data: PositionRequirementTableInterface[] = props.requirements;\n    // let data: PositionSubcategoryData[] =\n    //   props.position_requirement.position_requirement;\n    if (data.length === 0) {\n      return [\n        <tr key={153} className=\"border-b border-gray-200 hover:bg-gray-100\">\n          <td className=\"p-3 text-center\" colSpan={3}>\n            No Data Found\n          </td>\n        </tr>,\n      ];\n    }\n\n    return data.map((item, index) => (\n      <tr\n        key={index + item.field_id}\n        className=\"border-b border-gray-200 hover:bg-gray-100\"\n      >\n        <td className=\"p-3 text-left whitespace-nowrap\">{index + 1}</td>\n        <td className=\"p-3 text-left\">\n          <span>{item.subcategory_title}</span>\n        </td>\n        <td className=\"p-3 text-left\">\n          <span>\n            {isEmptyOrSpaces(item.field_id) ? \"Any document\" : item.field_title}\n          </span>\n        </td>\n        <td className=\"p-3 text-left text-lg italic\">\n          {isEmptyOrSpaces(item.field_id) ? (\n            item.subcategory_required ? (\n              <span className=\"text-yellow-800\">Required</span>\n            ) : (\n              \"Optional\"\n            )\n          ) : item.required ? (\n            <span className=\"text-yellow-800\">Required</span>\n          ) : (\n            \"Optional\"\n          )}\n        </td>\n      </tr>\n    ));\n  };\n\n  return (\n    <div>\n      <Table\n        columns={[\n          { columnTitle: \"#\", alignText: \"left\", padding: \"p-3\" },\n          { columnTitle: \"Qualification\", alignText: \"left\", padding: \"p-3\" },\n          // {\n          //   columnTitle: \"Qualification Status\",\n          //   alignText: \"left\",\n          //   padding: \"p-3\",\n          // },\n          { columnTitle: \"Document\", alignText: \"left\", padding: \"p-3\" },\n          { columnTitle: \"Status\", alignText: \"left\", padding: \"p-3\" },\n          // { columnTitle: \"\", alignText: \"left\", padding: \"p-3\" },\n        ]}\n        rows={tableData}\n        pagination={false}\n        search={false}\n        thColor=\"gray\"\n      />\n    </div>\n  );\n};\n\nexport default React.memo(ViewRequirements);\n","import moment from \"moment\";\nimport React, { useState } from \"react\";\nimport { IoHandLeftSharp } from \"react-icons/io5\";\nimport {\n  compareWithToday,\n  ExamDoneDetailsAnswers,\n} from \"../../containers/CandidateExams/CandidateExams\";\nimport { PlansTypeKeys } from \"../../interfaces\";\nimport { TimeZone } from \"../../utils/app.config\";\nimport { DATE } from \"../../utils/functions\";\nimport ClaimFormComponent from \"../ClaimForm/ClaimFormComponent\";\nimport { AnswersDetails } from \"./AnswersDetails\";\n\ninterface CandidateAnswersDetailsProps {\n  exam_id: ExamDoneDetailsAnswers;\n  showAnswers: boolean;\n}\n\nconst CandidateAnswersDetails = (props: CandidateAnswersDetailsProps) => {\n  const today = moment().tz(TimeZone);\n  let tomorrow = new Date();\n  tomorrow.setDate(today.date() + 1);\n  const [claim, setClaim] = useState<boolean>(false);\n  return (\n    <div>\n      {/* Check if period is open for claims */}\n      {compareWithToday(today, props.exam_id.exam_date) === false ? (\n        <div className=\"bg-yellow-100 text-yellow-800 font-extrabold text-center flex flex-col items-center justify-center text-lg px-2 py-6\">\n          <div className=\"mb-5 text-3xl\">\n            Please wait, the exam details will be visible soon!\n          </div>\n          <div className=\"text-gray-600\">Exam details will be visible from</div>\n          <div className=\"bg-white rounded-full px-3 py-1 text-gray-700\">\n            {DATE(tomorrow.toString())}\n          </div>\n        </div>\n      ) : claim === false ? (\n        <div className=\"mb-20\">\n          <AnswersDetails\n            exam_id={props.exam_id}\n            showAnswers={props.showAnswers}\n          />\n          <div\n            onClick={() => setClaim(true)}\n            className=\"bg-blue-100 flex flex-row items-center px-3 py-2 -mt-10\"\n          >\n            <div className=\"btn bg-green-600 text-white text-center w-max px-6 text-2xl flex flex-row item-center justify-center gap-3 cursor-pointer\">\n              <IoHandLeftSharp className=\"text-3xl \" />{\" \"}\n              <span>Exam marks Claim</span>\n            </div>\n          </div>\n        </div>\n      ) : (\n        <div className=\"bg-gray-100 mt-4 pt-2 rounded\">\n          <ClaimFormComponent\n            setFormState={setClaim}\n            claim_type={PlansTypeKeys.EXAMINATION}\n            file_id={props.exam_id.exam_id}\n          />\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default CandidateAnswersDetails;\n","import React from \"react\";\nimport { MdTurnedIn } from \"react-icons/md\";\nimport { connect } from \"react-redux\";\nimport { PushPopupAlert } from \"../../../actions\";\nimport NoResult, {\n  NoResultThemes,\n} from \"../../../components/NoResult/NoResult\";\nimport {\n  claimApplicationsInterface,\n  claimApplicationsPositionInterface,\n} from \"../../../interfaces\";\nimport { ApplicationStates } from \"../../../interfaces/application\";\nimport { DocumentReducerInterface } from \"../../../reducers/document\";\nimport { capitalizeFirstLetter } from \"../../../shared/dataTest\";\nimport { UserInterface } from \"../../../shared/interfaces\";\nimport { DATE } from \"../../../utils/functions\";\nimport { PositionRequirementTableInterface } from \"../../Positions/ViewPosition\";\nimport ViewRequirements from \"../../Positions/ViewRequirements\";\n\nexport const FC_ApplicationPositionDistinctCategory = (\n  thisPosition: claimApplicationsPositionInterface,\n  documentCategories: DocumentReducerInterface\n): {\n  PositionsTemp: PositionRequirementTableInterface[];\n  DistinctCategoriesTemp: PositionRequirementTableInterface[];\n  DistinctSubCategoriesTemp: PositionRequirementTableInterface[];\n} => {\n  let PositionsTemp: PositionRequirementTableInterface[] = [];\n  let DistinctCategoriesTemp: PositionRequirementTableInterface[] = [],\n    DistinctCategoriesIds: string[] = [];\n  let DistinctSubCategoriesTemp: PositionRequirementTableInterface[] = [],\n    DistinctSubCategoriesIds: string[] = [];\n  // GET REQUIREMENTS OF THE CURRENT POSITION ====================\n  let requirements = thisPosition.requirements;\n  // LOOP THROUGH CURRENT POSITION REQUIREMENTS ==========================\n  for (let req in requirements) {\n    let thisRequirements = requirements[req];\n    // GET DOC CATEGORY OF THE CURRENT POSITION REQUIREMENTS ====================\n    let thisCategory = documentCategories.documentCategory\n      ? documentCategories.documentCategory.find(\n          (item) =>\n            item.user_detail_category_id ===\n            thisRequirements.category.user_detail_category_id\n        ) && {\n          title: documentCategories.documentCategory.find(\n            (item) =>\n              item.user_detail_category_id ===\n              thisRequirements.category.user_detail_category_id\n          )!.title,\n          user_detail_category_id: documentCategories.documentCategory.find(\n            (item) =>\n              item.user_detail_category_id ===\n              thisRequirements.category.user_detail_category_id\n          )!.user_detail_category_id,\n        }\n      : {\n          title: \"\",\n          user_detail_category_id:\n            thisRequirements.category.user_detail_category_id,\n        };\n    // GET DOC SUB CATEGORY OF THE CURRENT POSITION REQUIREMENTS ====================\n    let thisSubCategory = documentCategories.documentSubCategory\n      ? documentCategories.documentSubCategory.find(\n          (item) =>\n            item.user_detail_subcategory_id ===\n            thisRequirements.subcategory.user_detail_subcategory_id\n        )\n        ? {\n            title: documentCategories.documentSubCategory.find(\n              (item) =>\n                item.user_detail_subcategory_id ===\n                thisRequirements.subcategory.user_detail_subcategory_id\n            )!.title,\n            user_detail_subcategory_id:\n              documentCategories.documentSubCategory.find(\n                (item) =>\n                  item.user_detail_subcategory_id ===\n                  thisRequirements.subcategory.user_detail_subcategory_id\n              )!.user_detail_subcategory_id,\n            category_id: documentCategories.documentSubCategory.find(\n              (item) =>\n                item.user_detail_subcategory_id ===\n                thisRequirements.subcategory.user_detail_subcategory_id\n            )!.category_id,\n          }\n        : {\n            title: \"\",\n            user_detail_subcategory_id:\n              thisRequirements.subcategory.user_detail_subcategory_id,\n            category_id: \"\",\n          }\n      : {\n          title: \"\",\n          user_detail_subcategory_id:\n            thisRequirements.subcategory.user_detail_subcategory_id,\n          category_id: \"\",\n        };\n    // LOOP THROUGH FIELDS OF THE CURRENT POSITION REQUIREMENTS ==========================\n    if (thisCategory) {\n      for (let field in thisRequirements.position_requirement) {\n        // GET FIELDS OF THE CURRENT POSITION REQUIREMENTS ====================\n        let thisField = documentCategories.documentFields\n          ? documentCategories.documentFields.find(\n              (item) =>\n                item._id === thisRequirements.position_requirement[field]._id\n            )\n            ? {\n                title: documentCategories.documentFields.find(\n                  (item) =>\n                    item._id ===\n                    thisRequirements.position_requirement[field]._id\n                )!.title,\n                _id: documentCategories.documentFields.find(\n                  (item) =>\n                    item._id ===\n                    thisRequirements.position_requirement[field]._id\n                )!._id,\n                required: thisRequirements.position_requirement[field].required,\n              }\n            : {\n                title: \"\",\n                _id: thisRequirements.subcategory.user_detail_subcategory_id,\n                required: thisRequirements.position_requirement[field].required,\n              }\n          : {\n              title: \"\",\n              _id: thisRequirements.subcategory.user_detail_subcategory_id,\n              required: thisRequirements.position_requirement[field].required,\n            };\n        // ADD CURRENT CATEGORY, SUB CATEGORY & FIELDS OF THE CURRENT POSITION REQUIREMENTS IN POSITIONS TEMP ====================\n        PositionsTemp.push({\n          category_id: thisCategory.user_detail_category_id,\n          category_title: thisCategory.title,\n          subcategory_id: thisSubCategory.user_detail_subcategory_id,\n          subcategory_title: thisSubCategory.title,\n          subcategory_required: thisRequirements.required,\n          field_title: thisField.title,\n          field_id: thisField._id,\n          required: thisField.required,\n        });\n      }\n\n      // ADD CATEOGRY OF THE CURRENT POSITION REQUIREMENTS TO ARRAY ====================\n      if (\n        !DistinctCategoriesIds.includes(thisCategory.user_detail_category_id)\n      ) {\n        DistinctCategoriesIds.push(thisCategory.user_detail_category_id);\n        DistinctCategoriesTemp.push({\n          category_id: thisCategory.user_detail_category_id,\n          category_title: thisCategory.title,\n          subcategory_id: \"\",\n          subcategory_title: \"\",\n          subcategory_required: thisRequirements.required,\n          field_title: \"\",\n          field_id: \"\",\n          required: false,\n        });\n      }\n\n      // ADD SUB CATEOGRY OF THE CURRENT POSITION REQUIREMENTS TO ARRAY ====================\n      if (\n        !DistinctSubCategoriesIds.includes(\n          thisSubCategory.user_detail_subcategory_id\n        )\n      ) {\n        DistinctSubCategoriesIds.push(\n          thisSubCategory.user_detail_subcategory_id\n        );\n        DistinctSubCategoriesTemp.push({\n          category_id: thisSubCategory.category_id,\n          category_title: \"\",\n          subcategory_id: thisSubCategory.user_detail_subcategory_id,\n          subcategory_title: thisSubCategory.title,\n          subcategory_required: thisRequirements.required,\n          field_title: \"\",\n          field_id: \"\",\n          required: false,\n        });\n      }\n    }\n  }\n  // DistinctCategoriesIds.;\n\n  return { PositionsTemp, DistinctCategoriesTemp, DistinctSubCategoriesTemp };\n};\n\nexport const showEvaluator = (\n  userList: UserInterface[],\n  user_id: string\n): string => {\n  let result: string = \"\";\n  if (user_id === \"system\") {\n    result = \"System\";\n  } else {\n    // let user = getUserDocuments(userList, user_id);\n    // let user = undefined;\n    // if (user) {\n    //   result = user.user.user_info.fname + \" \" + user.user.user_info.lname;\n    // }\n  }\n  return result;\n};\n\ntype ApplicationFormViewProps = {\n  thisApplication: claimApplicationsInterface;\n  setViewThisFile: (value: string) => void;\n  setChooseClaimFile: (value: boolean) => void;\n  setClaimFileId: (value: string) => void;\n  documentCategories: DocumentReducerInterface;\n  PushPopupAlert: Function;\n};\n\nconst ApplicationFormView: React.FC<ApplicationFormViewProps> = (props) => {\n  return (\n    <section className=\"\">\n      <div className=\"w-full bg-gray-100 px-4 py-1 animate__animated animate__fadeIn\">\n        <div className=\"flex flex-col mb-2\">\n          {/* APPLICATION TITLE ========== */}\n          <section className=\"flex items-center justify-between\">\n            <span className=\"text-blue-600 font-bold text-2xl\">\n              {props.thisApplication.position.position_title}\n            </span>\n            <button\n              type=\"button\"\n              className=\"btn btn-blue\"\n              onClick={() => {\n                props.setChooseClaimFile(false);\n                props.setClaimFileId(props.thisApplication.application_id);\n                props.setViewThisFile(\"\");\n              }}\n            >\n              Choose\n            </button>\n          </section>\n          <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n            <span className={`italic`}>Date:</span>\n            <span className=\"font-bold text-gray-900 py-1\">\n              {DATE(props.thisApplication.createdAt)}\n            </span>\n          </div>\n          {false && (\n            <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n              <span className={`italic`}>Session:</span>\n              <span className=\"font-bold text-gray-900 py-1\">\n                {\n                  props.thisApplication.application_session\n                    .application_session_name\n                }\n              </span>\n            </div>\n          )}\n          <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n            <span className={`italic`}>Status:</span>\n            <span\n              className={`font-bold ${\n                props.thisApplication.application_status ===\n                ApplicationStates.Rejected\n                  ? \"text-yellow-900\"\n                  : \"text-blue-600\"\n              } py-1`}\n            >\n              {capitalizeFirstLetter(props.thisApplication.application_status)}\n            </span>\n          </div>\n          {/* <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n            <span className={`italic`}>Evaluated by:</span>\n            <span className=\"font-bold text-gray-900 py-1\">\n              {props.thisApplication.}\n            </span>\n          </div> */}\n          <div className=\"flex items-start gap-2 text-sm text-gray-600\">\n            <span className={`italic`}>Reason:</span>\n            <span\n              className=\"font-semibold text-gray-900\"\n              dangerouslySetInnerHTML={{\n                __html: props.thisApplication.override_by.comment,\n              }}\n            ></span>\n          </div>\n        </div>\n        <div className=\"bg-white w-full rounded p-2 mb-2\">\n          <div className=\"text-gray-800 text-2xl font-bold my-2\">\n            Position Details\n          </div>\n          <div className=\"flex items-center gap-2 text-base text-gray-600\">\n            <span className={`italic`}>Desc:</span>\n            <span className=\"font-semibold\">\n              {props.thisApplication.position.description}\n            </span>\n          </div>\n          <div className=\"flex items-center gap-2 text-base text-gray-600\">\n            <span className={`italic`}>School level:</span>\n            <span className=\"font-semibold\">\n              {props.thisApplication.position.school_level_id.school_level_name}\n            </span>\n          </div>\n          <div className=\"flex items-center gap-2 text-base text-gray-600\">\n            <span className={`italic`}>Institute:</span>\n            <span className=\"font-semibold\">\n              {\n                props.thisApplication.position.education_institute_id\n                  .education_category_title\n              }\n            </span>\n          </div>\n          <div className=\"flex items-center gap-2 text-base text-gray-600\">\n            <span className={`italic`}>Courses:</span>\n            <span className=\"flex items-center gap-2\">\n              {props.thisApplication.position.courses.map((item, index) => (\n                <div\n                  key={index + item.course_id}\n                  className=\"flex items-center gap-1\"\n                >\n                  <span className=\"font-semibold\">{item.course_name}</span>\n                  <span className=\"text-gray-600\">({item.course_code})</span>\n                  {index !==\n                    props.thisApplication.position.courses.length - 1 && \",\"}\n                </div>\n              ))}\n            </span>\n          </div>\n\n          <div className=\"text-gray-800 text-2xl font-bold my-2\">\n            Position Requirements\n          </div>\n          {props.thisApplication.position.requirements.length > 0 ? (\n            FC_ApplicationPositionDistinctCategory(\n              props.thisApplication.position,\n              props.documentCategories\n            ).DistinctCategoriesTemp.map((item, index) => (\n              <div\n                className=\"bg-gray-100props.thisApplication.position rounded p-2\"\n                key={index + item.category_id}\n              >\n                <div className=\"flex items-center gap-2 text-2xl text-gray-500 font-bold\">\n                  <MdTurnedIn />\n                  <span>{item.category_title}</span>\n                </div>\n                <div className=\"border bg-white mt-1\">\n                  <ViewRequirements\n                    requirements={FC_ApplicationPositionDistinctCategory(\n                      props.thisApplication.position,\n                      props.documentCategories\n                    ).PositionsTemp.filter(\n                      (req) => req.category_id === item.category_id\n                    )}\n                  />\n                </div>\n              </div>\n            ))\n          ) : (\n            <NoResult\n              theme={NoResultThemes.Dark}\n              value={\"No requirements\"}\n            ></NoResult>\n          )}\n        </div>\n      </div>\n    </section>\n  );\n};\n\nexport default React.memo(connect(null, { PushPopupAlert })(ApplicationFormView));\n","import React, { Component } from \"react\";\nimport FindAnswer from \"../../containers/DoExam/DoExamTitle/FindAnswer\";\nimport { ExamAnswerSheetDone } from \"../../interfaces/exam\";\nimport { connect } from \"react-redux\";\nimport {\n  Auth,\n  CandidateApplicationsStoreInterface,\n  candidateExamStoreInterface,\n  FC_GetProfileDetails,\n  LoadCandidateApplications,\n  setSelectedCandidateExam,\n  setSelectedCourse,\n  setSelectedPosition,\n  InitializeExamDetails,\n  loadExamsDone,\n  AddUserApplication,\n  loadApplicationPeriods,\n  requestUserAnswers,\n  loadQuestionTypes,\n  questionTypesStoreInterface,\n  System,\n  courseStoreInterface,\n  loadCourses,\n} from \"../../actions\";\nimport { StoreState } from \"../../reducers\";\nimport { DATE } from \"../../utils/functions\";\nimport { AiOutlineFileText } from \"react-icons/ai\";\nimport { ExamDoneDetailsAnswers } from \"../../containers/CandidateExams/CandidateExams\";\nimport Loading from \"../Loading/Loading\";\nimport { QuestionLanguage } from \"../../interfaces\";\nimport { findQuestionType } from \"../../containers/DoExam/utils/utils\";\nimport { questionTypeElementsType } from \"@mastrecruit/common\";\nimport { EmbeddedQuestion } from \"../QuestionPreview/QuestionPreview\";\nimport FindAnswerHybrid from \"../../containers/DoExam/DoExamTitle/FindAnswerHybrid\";\n\ninterface AnswersDetailsProps {\n  exam_id: ExamDoneDetailsAnswers;\n  showAnswers: boolean;\n  allAnswers?: ExamAnswerSheetDone[];\n  user_id?: string;\n  questionTypes: questionTypesStoreInterface;\n  requestUserAnswers: (\n    exam_id: string,\n    user_id: string,\n    callback: (loading: boolean) => void\n  ) => void;\n  FC_GetProfileDetails: Function;\n  auth: Auth;\n  candidateExam: candidateExamStoreInterface;\n  loadQuestionTypes: (callback: (loading: boolean) => void) => void;\n  loadExamsDone: (\n    periodId: string,\n    userId: string,\n    callback: (loading: boolean) => void\n  ) => void;\n  system: System;\n  course: courseStoreInterface;\n  loadCourses: (callback: (loading: boolean) => void) => void;\n}\ninterface AnswersDetailsState {\n  loading: boolean;\n  loadingStatus: boolean;\n}\n\nexport class _AnswersDetails extends Component<\n  AnswersDetailsProps,\n  AnswersDetailsState\n> {\n  constructor(props: AnswersDetailsProps) {\n    super(props);\n\n    this.state = {\n      loading: false,\n      loadingStatus: false,\n    };\n  }\n  setLoading = (status: boolean) => {\n    this.setState({ loading: status });\n  };\n  setLoadingStatus = (status: boolean) => {\n    this.setState({ loadingStatus: status });\n  };\n  componentDidMount = () => {\n    if (\n      this.props.questionTypes.questionTypes === null ||\n      this.props.questionTypes.questionTypes.length === 0\n    ) {\n      this.props.loadQuestionTypes(this.setLoading);\n    }\n    if (this.props.exam_id) {\n      if (this.props.course.courses === null) {\n        this.props.loadCourses(this.setLoading);\n      }\n      let check = this.props.candidateExam.user_exams_done.find(\n        (itm) =>\n          itm.course === this.props.exam_id.course &&\n          itm.period === this.props.exam_id.period &&\n          DATE(itm.exam_date) === DATE(this.props.exam_id.exam_date)\n      );\n      // Check if user exams loaded\n      if (\n        (this.props.candidateExam.user_exams_done.length === 0 ||\n          check === undefined) &&\n        this.props.allAnswers === undefined\n      ) {\n        this.props.loadExamsDone(\n          this.props.exam_id.period,\n          this.props.auth.user.user_id,\n          this.setLoadingStatus\n        );\n      }\n      if (check !== undefined) {\n        if (\n          this.props.candidateExam.user_exams_done.find(\n            (item) => item.exam_paper === check?.exam_paper\n          ) === undefined\n        ) {\n          this.props.requestUserAnswers(\n            check.exam_paper,\n            this.props.user_id === undefined\n              ? this.props.auth.user.user_id\n              : this.props.user_id,\n            this.setLoading\n          );\n        }\n      }\n    }\n  };\n  userAnswersTotalMarks = (user_answers: ExamAnswerSheetDone) => {\n    let total: number = 0;\n    for (let item of user_answers.user_answers) {\n      total += item.user_marks;\n    }\n    return total;\n  };\n  render() {\n    let user_exam_details: ExamAnswerSheetDone | undefined =\n      this.props.allAnswers === undefined\n        ? this.props.candidateExam.user_exams_done.find(\n            (itm) =>\n              itm.course === this.props.exam_id.course &&\n              itm.period === this.props.exam_id.period &&\n              DATE(itm.exam_date) === DATE(this.props.exam_id.exam_date)\n          )\n        : this.props.allAnswers.find(\n            (itm) =>\n              itm.course === this.props.exam_id.course &&\n              itm.period === this.props.exam_id.period &&\n              DATE(itm.exam_date) === DATE(this.props.exam_id.exam_date)\n          );\n    if (\n      this.state.loading === true ||\n      this.state.loadingStatus === true ||\n      this.props.course.courses === null\n    ) {\n      return (\n        <div className=\"my-6 rounded bg-white p-3\">\n          <Loading />\n        </div>\n      );\n    }\n    if (user_exam_details === undefined) {\n      return (\n        <div className=\"my-6 rounded bg-white p-3\">\n          <span className=\"text-4xl font-bold\">Exam details not found!</span>\n        </div>\n      );\n    }\n    return (\n      <div className=\"p-2 bg-gray-100\">\n        <div className=\"mb-5 -mt-5\">\n          {user_exam_details !== undefined && (\n            <div className=\"mt-5\">\n              <div className=\"px-3 mb-2 flex flex-row items-center gap-3\">\n                <div>\n                  <AiOutlineFileText className=\"text-5xl text-gray-500\" />\n                </div>\n                <div\n                  className=\"text-2xl font-extrabold\"\n                  dangerouslySetInnerHTML={{\n                    __html: \"Exam for \" + this.props.exam_id.course_name,\n                  }}\n                ></div>\n              </div>\n              <div className=\" p-3 bg-white rounded-t mb-0 border-b\">\n                <div className=\"text-sm text-gray-500 font-bold\">\n                  Exam date:\n                </div>\n                <div\n                  className=\"text-base font-bold\"\n                  dangerouslySetInnerHTML={{\n                    __html: DATE(this.props.exam_id.exam_date),\n                  }}\n                ></div>\n              </div>\n              <div className=\" p-3 bg-white mb-0 border-b\">\n                <div className=\"text-sm text-gray-500 font-bold\">\n                  Exam description:\n                </div>\n                <div\n                  className=\"text-base font-bold\"\n                  dangerouslySetInnerHTML={{\n                    __html: this.props.exam_id.discription,\n                  }}\n                ></div>\n              </div>\n              <div className=\" p-3 bg-white rounded-b mb-0\">\n                <div className=\"text-sm text-gray-500 font-bold\">\n                  Exam terms and conditions:\n                </div>\n                <div\n                  className=\"text-base font-bold\"\n                  dangerouslySetInnerHTML={{\n                    __html: this.props.exam_id.termes,\n                  }}\n                ></div>\n              </div>\n            </div>\n          )}\n        </div>\n        <div className=\"text-2xl font-extrabold text-blue-600 px-2 mb-3\">\n          Exam answers & marks\n        </div>\n        {user_exam_details === undefined ? (\n          \"Not Found\"\n        ) : user_exam_details.user_answers.length === 0 ? (\n          <div>\n            <div className=\"p-5 rounded-lg bg-yellow-100 text-black text-xl mb-5 text-center border border-white shadow-lg animate__animated animate__shakeX\">\n              Exam answers not found, You did not submit the exam!\n            </div>\n          </div>\n        ) : (\n          user_exam_details.user_answers.map((item, i) => (\n            <div\n              key={i + 1}\n              className=\"bg-white hover:bg-white border border-white hover:border-blue-400 px-2 py-2 rounded  animate__animated animate__fadeIn animate__fast group mb-2\"\n            >\n              <div className=\"grid md:grid-cols-11 w-full\">\n                <div className=\"col-span-12 flex flex-row items-center gap-3\">\n                  <div\n                    key={i + 1}\n                    className=\"w-6 h-6 p-2 rounded-full bg-gray-600 flex justify-center items-center font-bold text-lg text-white cursor-pointer\"\n                  >\n                    {i + 1}\n                  </div>\n                  {user_exam_details &&\n                    user_exam_details.questions.find(\n                      (itm) => itm.question_id === item.question\n                    ) !== undefined && (\n                      <div className=\"text-sm w-full\">\n                        {user_exam_details.questions.find(\n                          (itm) => itm.question_id === item.question\n                        ) &&\n                        findQuestionType(\n                          user_exam_details.questions.find(\n                            (itm) => itm.question_id === item.question\n                          )!.type,\n                          this.props.questionTypes.questionTypes\n                        ) !== null &&\n                        findQuestionType(\n                          user_exam_details.questions.find(\n                            (itm) => itm.question_id === item.question\n                          )!.type,\n                          this.props.questionTypes.questionTypes\n                        ) === questionTypeElementsType.Embedded ? (\n                          EmbeddedQuestion(\n                            user_exam_details.questions.find(\n                              (itm) => itm.question_id === item.question\n                            )!,\n                            this.props.questionTypes.questionTypes,\n                            item.language as QuestionLanguage,\n                            [\n                              {\n                                question_id: item.question,\n                                status: true,\n                                answers: item.answers,\n                                language: item.language as QuestionLanguage,\n                              },\n                            ],\n                            () => {}\n                          )\n                        ) : (\n                          <div\n                            dangerouslySetInnerHTML={{\n                              __html: user_exam_details.questions\n                                .find(\n                                  (itm) => itm.question_id === item.question\n                                )!\n                                .question.find(\n                                  (test) => test.language === item.language\n                                )!.description,\n                            }}\n                            className=\"font-bold text-gray-700 text-base\"\n                          ></div>\n                        )}\n                        {console.log(\n                          \"Test selected exam: \",\n                          item.answers,\n                          item.language\n                        )}\n                        <div className=\"text-blue-700 font-bold text-sm w-full\">\n                          {findQuestionType(\n                            user_exam_details.questions.find(\n                              (itm) => itm.question_id === item.question\n                            )!.type,\n                            this.props.questionTypes.questionTypes\n                          ) !== null &&\n                          findQuestionType(\n                            user_exam_details.questions.find(\n                              (itm) => itm.question_id === item.question\n                            )!.type,\n                            this.props.questionTypes.questionTypes\n                          ) === questionTypeElementsType.Embedded\n                            ? \"\"\n                            : \"Answer: \"}\n                          {this.props.questionTypes.questionTypes !== null &&\n                            user_exam_details.user_answers.find(\n                              (itm) => itm.question === item.question\n                            ) && (\n                              <div className=\"mb-2\">\n                                {findQuestionType(\n                                  user_exam_details.questions.find(\n                                    (itm) => itm.question_id === item.question\n                                  )!.type,\n                                  this.props.questionTypes.questionTypes\n                                ) &&\n                                findQuestionType(\n                                  user_exam_details.questions.find(\n                                    (itm) => itm.question_id === item.question\n                                  )!.type,\n                                  this.props.questionTypes.questionTypes\n                                ) === questionTypeElementsType.Hybrid ? (\n                                  <FindAnswerHybrid\n                                    selectedLanguage={\n                                      item.language as QuestionLanguage\n                                    }\n                                    questionTypes={this.props.questionTypes}\n                                    auth={this.props.auth}\n                                    candidateExam={this.props.candidateExam}\n                                    answersList={[\n                                      {\n                                        question_id: item.question,\n                                        status: true,\n                                        answers: item.answers,\n                                        language:\n                                          item.language as QuestionLanguage,\n                                      },\n                                    ]}\n                                    system={this.props.system}\n                                    setSelectedExamQuestion={() => {}}\n                                    submitQuestionAnswer={false}\n                                    loadQuestionTypes={\n                                      this.props.loadQuestionTypes\n                                    }\n                                    submitExam={() => {}}\n                                    selectedExam={\n                                      user_exam_details === undefined ||\n                                      this.props.course.courses === null\n                                        ? null\n                                        : this.props.course.courses.find(\n                                            (itm) =>\n                                              user_exam_details !== undefined &&\n                                              itm.course_id ===\n                                                user_exam_details.questions.find(\n                                                  (itm) =>\n                                                    itm.question_id ===\n                                                    item.question\n                                                )!.course\n                                          )!\n                                    }\n                                    setSubmitModal={(status: boolean) => {}}\n                                    wholeQuestion={\n                                      user_exam_details.questions.find(\n                                        (itm) =>\n                                          itm.question_id === item.question\n                                      )!\n                                    }\n                                  />\n                                ) : (\n                                  <FindAnswer\n                                    selectedLanguage={item.language}\n                                    question={{\n                                      is_deleted:\n                                        user_exam_details.questions.find(\n                                          (itm) =>\n                                            itm.question_id === item.question\n                                        )!.is_deleted,\n                                      question_id: item.question,\n                                      course: user_exam_details.questions.find(\n                                        (itm) =>\n                                          itm.question_id === item.question\n                                      )!.course,\n                                      question:\n                                        user_exam_details.questions.find(\n                                          (itm) =>\n                                            itm.question_id === item.question\n                                        )!.question,\n                                      type: user_exam_details.questions.find(\n                                        (itm) =>\n                                          itm.question_id === item.question\n                                      )!.type,\n                                      chapters:\n                                        user_exam_details.questions.find(\n                                          (itm) =>\n                                            itm.question_id === item.question\n                                        )!.chapters,\n                                      customNumber:\n                                        user_exam_details.questions.find(\n                                          (itm) =>\n                                            itm.question_id === item.question\n                                        )!.customNumber,\n                                      marks: user_exam_details.questions.find(\n                                        (itm) =>\n                                          itm.question_id === item.question\n                                      )!.marks,\n                                      answers: user_exam_details.questions.find(\n                                        (itm) =>\n                                          itm.question_id === item.question\n                                      )!.answers,\n                                    }}\n                                    answersList={[\n                                      {\n                                        question_id: item.question,\n                                        status: true,\n                                        answers:\n                                          user_exam_details.user_answers.find(\n                                            (itm) =>\n                                              itm.question === item.question\n                                          )!.answers,\n                                        language:\n                                          item.language as QuestionLanguage,\n                                      },\n                                    ]}\n                                    questionTypes={\n                                      this.props.questionTypes.questionTypes\n                                    }\n                                    showCorrectAnswer={this.props.showAnswers}\n                                    onClick={() => {}}\n                                  />\n                                )}\n                              </div>\n                            )}\n                        </div>\n                      </div>\n                    )}\n                </div>\n              </div>\n              <div className=\"col-span-1 flex items-center justify-between\">\n                <div></div>\n\n                <div className=\"w-max flex flex-col items-end justify-center bg-blue-50 rounded-md px-3 py-1 group-hover:bg-blue-100\">\n                  <div className=\"text-sm font-semibold text-gray-700\">\n                    Marks\n                  </div>\n                  <div className=\"text-sm font-extrabold text-gray-900 -mt-1\">\n                    <span className=\"text-blue-500\">\n                      {item.user_marks.toFixed(\n                        user_exam_details &&\n                          item.user_marks ===\n                            user_exam_details.questions.find(\n                              (itm) => itm.question_id === item.question\n                            )?.marks\n                          ? 0\n                          : 2\n                      )}\n                    </span>{\" \"}\n                    /{\" \"}\n                    {user_exam_details &&\n                      user_exam_details.questions.find(\n                        (itm) => itm.question_id === item.question\n                      )?.marks}\n                  </div>\n                </div>\n              </div>\n            </div>\n          ))\n        )}\n        <div className=\"flex flex-row items-center justify-between gap-3 mb-10\">\n          <div className=\"bg-blue-100 p-3 pr-3 text-blue-700 flex flex-col items-start justify-center rounded-lg border-2 border-white\">\n            <span className=\"text-gray-700\">Total marks percentage</span>\n            <span className=\"text-3xl font-extrabold\">\n              {user_exam_details &&\n                user_exam_details.total_marks.toFixed(\n                  user_exam_details.total_marks === 100 ||\n                    user_exam_details.total_marks === 0\n                    ? 0\n                    : 2\n                )}\n              %\n            </span>\n          </div>\n          <div>\n            <div className=\"bg-white rounded-lg p-3\">\n              <div className=\"text-gray-500 font-bold text-base text-right\">\n                Exam total marks\n              </div>\n              {user_exam_details !== undefined && (\n                <div className=\"font-extrabold text-3xl text-gray-900 text-right\">\n                  {this.userAnswersTotalMarks(user_exam_details).toFixed(\n                    this.userAnswersTotalMarks(user_exam_details) ===\n                      user_exam_details.exam_total_marks ||\n                      this.userAnswersTotalMarks(user_exam_details) === 0\n                      ? 0\n                      : 2\n                  )}{\" \"}\n                  / {user_exam_details.exam_total_marks}\n                </div>\n              )}\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = ({\n  auth,\n  candidateExam,\n  candidateApplications,\n  questionTypes,\n  system,\n  course,\n}: StoreState): {\n  auth: Auth;\n  candidateExam: candidateExamStoreInterface;\n  candidateApplications: CandidateApplicationsStoreInterface;\n  questionTypes: questionTypesStoreInterface;\n  system: System;\n  course: courseStoreInterface;\n} => {\n  return {\n    auth: auth,\n    candidateExam: candidateExam,\n    candidateApplications: candidateApplications,\n    questionTypes: questionTypes,\n    system: system,\n    course: course,\n  };\n};\n\nexport const AnswersDetails = connect(mapStateToProps, {\n  FC_GetProfileDetails,\n  LoadCandidateApplications,\n  setSelectedCandidateExam,\n  setSelectedCourse,\n  setSelectedPosition,\n  InitializeExamDetails,\n  loadExamsDone,\n  AddUserApplication,\n  loadApplicationPeriods,\n  requestUserAnswers,\n  loadQuestionTypes,\n  loadCourses,\n})(_AnswersDetails);\n","import React from \"react\";\nimport { AnswersDetails } from \"../../../components/AnswersDetails/AnswersDetails\";\nimport {\n  claimApplicationsPositionInterface,\n  ClaimExamResultsDetails,\n} from \"../../../interfaces\";\nimport { DocumentReducerInterface } from \"../../../reducers/document\";\nimport { UserInterface } from \"../../../shared/interfaces\";\nimport { DATE } from \"../../../utils/functions\";\nimport { ExamDoneDetailsAnswers } from \"../../CandidateExams/CandidateExams\";\nimport { PositionRequirementTableInterface } from \"../../Positions/ViewPosition\";\n\nexport const FC_ApplicationPositionDistinctCategory = (\n  thisPosition: claimApplicationsPositionInterface,\n  documentCategories: DocumentReducerInterface\n): {\n  PositionsTemp: PositionRequirementTableInterface[];\n  DistinctCategoriesTemp: PositionRequirementTableInterface[];\n  DistinctSubCategoriesTemp: PositionRequirementTableInterface[];\n} => {\n  let PositionsTemp: PositionRequirementTableInterface[] = [];\n  let DistinctCategoriesTemp: PositionRequirementTableInterface[] = [],\n    DistinctCategoriesIds: string[] = [];\n  let DistinctSubCategoriesTemp: PositionRequirementTableInterface[] = [],\n    DistinctSubCategoriesIds: string[] = [];\n  // GET REQUIREMENTS OF THE CURRENT POSITION ====================\n  let requirements = thisPosition.requirements;\n  // LOOP THROUGH CURRENT POSITION REQUIREMENTS ==========================\n  for (let req in requirements) {\n    let thisRequirements = requirements[req];\n    // GET DOC CATEGORY OF THE CURRENT POSITION REQUIREMENTS ====================\n    let thisCategory = documentCategories.documentCategory\n      ? documentCategories.documentCategory.find(\n          (item) =>\n            item.user_detail_category_id ===\n            thisRequirements.category.user_detail_category_id\n        ) && {\n          title: documentCategories.documentCategory.find(\n            (item) =>\n              item.user_detail_category_id ===\n              thisRequirements.category.user_detail_category_id\n          )!.title,\n          user_detail_category_id: documentCategories.documentCategory.find(\n            (item) =>\n              item.user_detail_category_id ===\n              thisRequirements.category.user_detail_category_id\n          )!.user_detail_category_id,\n        }\n      : {\n          title: \"\",\n          user_detail_category_id:\n            thisRequirements.category.user_detail_category_id,\n        };\n    // GET DOC SUB CATEGORY OF THE CURRENT POSITION REQUIREMENTS ====================\n    let thisSubCategory = documentCategories.documentSubCategory\n      ? documentCategories.documentSubCategory.find(\n          (item) =>\n            item.user_detail_subcategory_id ===\n            thisRequirements.subcategory.user_detail_subcategory_id\n        )\n        ? {\n            title: documentCategories.documentSubCategory.find(\n              (item) =>\n                item.user_detail_subcategory_id ===\n                thisRequirements.subcategory.user_detail_subcategory_id\n            )!.title,\n            user_detail_subcategory_id:\n              documentCategories.documentSubCategory.find(\n                (item) =>\n                  item.user_detail_subcategory_id ===\n                  thisRequirements.subcategory.user_detail_subcategory_id\n              )!.user_detail_subcategory_id,\n            category_id: documentCategories.documentSubCategory.find(\n              (item) =>\n                item.user_detail_subcategory_id ===\n                thisRequirements.subcategory.user_detail_subcategory_id\n            )!.category_id,\n          }\n        : {\n            title: \"\",\n            user_detail_subcategory_id:\n              thisRequirements.subcategory.user_detail_subcategory_id,\n            category_id: \"\",\n          }\n      : {\n          title: \"\",\n          user_detail_subcategory_id:\n            thisRequirements.subcategory.user_detail_subcategory_id,\n          category_id: \"\",\n        };\n    // LOOP THROUGH FIELDS OF THE CURRENT POSITION REQUIREMENTS ==========================\n    if (thisCategory) {\n      for (let field in thisRequirements.position_requirement) {\n        // GET FIELDS OF THE CURRENT POSITION REQUIREMENTS ====================\n        let thisField = documentCategories.documentFields\n          ? documentCategories.documentFields.find(\n              (item) =>\n                item._id === thisRequirements.position_requirement[field]._id\n            )\n            ? {\n                title: documentCategories.documentFields.find(\n                  (item) =>\n                    item._id ===\n                    thisRequirements.position_requirement[field]._id\n                )!.title,\n                _id: documentCategories.documentFields.find(\n                  (item) =>\n                    item._id ===\n                    thisRequirements.position_requirement[field]._id\n                )!._id,\n                required: thisRequirements.position_requirement[field].required,\n              }\n            : {\n                title: \"\",\n                _id: thisRequirements.subcategory.user_detail_subcategory_id,\n                required: thisRequirements.position_requirement[field].required,\n              }\n          : {\n              title: \"\",\n              _id: thisRequirements.subcategory.user_detail_subcategory_id,\n              required: thisRequirements.position_requirement[field].required,\n            };\n        // ADD CURRENT CATEGORY, SUB CATEGORY & FIELDS OF THE CURRENT POSITION REQUIREMENTS IN POSITIONS TEMP ====================\n        PositionsTemp.push({\n          category_id: thisCategory.user_detail_category_id,\n          category_title: thisCategory.title,\n          subcategory_id: thisSubCategory.user_detail_subcategory_id,\n          subcategory_title: thisSubCategory.title,\n          subcategory_required: thisRequirements.required,\n          field_title: thisField.title,\n          field_id: thisField._id,\n          required: thisField.required,\n        });\n      }\n\n      // ADD CATEOGRY OF THE CURRENT POSITION REQUIREMENTS TO ARRAY ====================\n      if (\n        !DistinctCategoriesIds.includes(thisCategory.user_detail_category_id)\n      ) {\n        DistinctCategoriesIds.push(thisCategory.user_detail_category_id);\n        DistinctCategoriesTemp.push({\n          category_id: thisCategory.user_detail_category_id,\n          category_title: thisCategory.title,\n          subcategory_id: \"\",\n          subcategory_title: \"\",\n          subcategory_required: thisRequirements.required,\n          field_title: \"\",\n          field_id: \"\",\n          required: false,\n        });\n      }\n\n      // ADD SUB CATEOGRY OF THE CURRENT POSITION REQUIREMENTS TO ARRAY ====================\n      if (\n        !DistinctSubCategoriesIds.includes(\n          thisSubCategory.user_detail_subcategory_id\n        )\n      ) {\n        DistinctSubCategoriesIds.push(\n          thisSubCategory.user_detail_subcategory_id\n        );\n        DistinctSubCategoriesTemp.push({\n          category_id: thisSubCategory.category_id,\n          category_title: \"\",\n          subcategory_id: thisSubCategory.user_detail_subcategory_id,\n          subcategory_title: thisSubCategory.title,\n          subcategory_required: thisRequirements.required,\n          field_title: \"\",\n          field_id: \"\",\n          required: false,\n        });\n      }\n    }\n  }\n  // DistinctCategoriesIds.;\n\n  return { PositionsTemp, DistinctCategoriesTemp, DistinctSubCategoriesTemp };\n};\n\nexport const showEvaluator = (\n  userList: UserInterface[],\n  user_id: string\n): string => {\n  let result: string = \"\";\n  if (user_id === \"system\") {\n    result = \"System\";\n  } else {\n    // let user = getUserDocuments(userList, user_id);\n    // let user = undefined;\n    // if (user) {\n    //   result = user.user.user_info.fname + \" \" + user.user.user_info.lname;\n    // }\n  }\n  return result;\n};\n\nexport const claimShowAnswer = (\n  answer: ClaimExamResultsDetails,\n  course_name: string\n): ExamDoneDetailsAnswers => {\n  const result: ExamDoneDetailsAnswers = {\n    course: answer.course,\n    course_name: course_name,\n    discription: answer.discription,\n    termes: answer.termes,\n    rules: {\n      right_click_enabled: false,\n      copy_enabled: false,\n      paste_enabled: false,\n      stop_candidate_when_comeback: false,\n      allow_to_leave_browser: false,\n    },\n    period: answer.period,\n    exam_date: answer.exam_date,\n    exam_id: answer.exam_id,\n  };\n  return result;\n};\n\ntype ExaminationFormViewProps = {\n  thisAnswerSheet: ClaimExamResultsDetails;\n  setViewThisFile: (value: string) => void;\n  setChooseClaimFile: (value: boolean) => void;\n  setClaimFileId: (value: string) => void;\n};\n\nconst ExaminationFormView: React.FC<ExaminationFormViewProps> = (props) => {\n  return (\n    <section className=\"\">\n      <div className=\"w-full bg-gray-100 px-4 py-1 animate__animated animate__fadeIn\">\n        <div className=\"flex flex-col mb-2\">\n          {/* APPLICATION TITLE ========== */}\n          <section className=\"flex items-center justify-between\">\n            <span className=\"text-blue-600 font-bold text-2xl\">\n              {props.thisAnswerSheet.course_name}\n            </span>\n            <button\n              type=\"button\"\n              className=\"btn btn-blue\"\n              onClick={() => {\n                props.setChooseClaimFile(false);\n                props.setClaimFileId(props.thisAnswerSheet.answer_sheet_id);\n                props.setViewThisFile(\"\");\n              }}\n            >\n              Choose\n            </button>\n          </section>\n\n          <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n            <span className={`italic`}>Date:</span>\n            <span className=\"font-bold text-gray-900 py-1\">\n              {DATE(props.thisAnswerSheet.createdAt)}\n            </span>\n          </div>\n        </div>\n        {/* QUESTIONS ----------------------------- */}\n        <AnswersDetails\n          showAnswers={false}\n          exam_id={claimShowAnswer(\n            props.thisAnswerSheet,\n            props.thisAnswerSheet.course_name\n          )}\n        />\n        {/* END QUESTIONS ----------------------------- */}\n      </div>\n    </section>\n  );\n};\n\nexport default React.memo(ExaminationFormView);\n","import React, { useState } from \"react\";\nimport { MdSearch } from \"react-icons/md\";\nimport { connect } from \"react-redux\";\nimport { ApplicationSession } from \"../../../actions\";\nimport {\n  course,\n  CandidateClaimInterface,\n  claimApplicationsInterface,\n  ClaimExamResultsDetails,\n} from \"../../../interfaces\";\nimport { StoreState } from \"../../../reducers\";\nimport { search } from \"../../../utils/functions\";\nimport { isClaimAllowed } from \"./ClaimForm\";\n\nconst getFailedExam = (\n  allData: ClaimExamResultsDetails[],\n  allCourses: course[]\n): ClaimExamResultsDetails[] => {\n  let result: ClaimExamResultsDetails[] = [];\n  allData.forEach((element) => {\n    if (element.total_marks < 100) {\n      let data = element;\n      data.course_name = getCourseById(allCourses, element.course)\n        ? getCourseById(allCourses, element.course)!.course_name\n        : \"Unknown exam\";\n      result.push(data);\n    }\n  });\n\n  return result;\n};\n\nexport const getCourseById = (courses: course[], course_id: string) => {\n  return courses.find((item) => item.course_id === course_id);\n};\n\nexport const getCourseIdBySheetId = (\n  allData: ClaimExamResultsDetails[],\n  sheet_id: string\n) => {\n  return allData.find((item) => item.answer_sheet_id === sheet_id);\n};\n\nexport const searchApplication = (\n  objList: claimApplicationsInterface[],\n  text: any\n): claimApplicationsInterface[] => {\n  if (undefined === text || text === \"\") return objList;\n  return objList.filter((product) => {\n    let flag;\n    // let dataKeys = product;\n\n    for (let prop in product) {\n      flag = false;\n      if (prop === \"position\") {\n        flag =\n          product.position.position_title\n            .toString()\n            .toLowerCase()\n            .indexOf(text.toLowerCase()) > -1;\n      }\n      if (flag) break;\n    }\n    return flag;\n  });\n  // return objList.filter((product) =>\n  //   product.position.position_title.includes(text)\n  // );\n};\n\ntype FormExamListProps = {\n  setChooseClaimFile: (value: boolean) => void;\n  setClaimFileId: (value: string) => void;\n  setViewThisFile: (value: string) => void;\n  claimFileId: string;\n  viewThisFile: string;\n  candidateAnswers: ClaimExamResultsDetails[];\n  myClaims: CandidateClaimInterface[];\n  activeSession: ApplicationSession;\n\n  // REDUX //////////////////////\n  courses: course[] | null;\n};\n\nconst FormExamList: React.FC<FormExamListProps> = (props) => {\n  const [searchInput, setSearchInput] = useState<string>(\"\");\n\n  return (\n    <section>\n      {/* SEARCH PART */}\n      <div className=\"flex items-center w-full my-1\">\n        <MdSearch className=\"w-6 h-6 absolute ml-2\" />\n        <input\n          type=\"text\"\n          placeholder=\"Search\"\n          className=\"focus:border-2 h-7 ml-1 pl-9 mr-2 bg-gray-100 focus:border-gray-700 w-full rounded\"\n          onChange={(e) => setSearchInput(e.target.value)}\n          value={searchInput}\n          disabled={\n            !props.courses ||\n            getFailedExam(props.candidateAnswers, props.courses).filter(\n              (item) =>\n                isClaimAllowed(\n                  props.myClaims,\n                  props.activeSession.session_plan_id,\n                  item.answer_sheet_id\n                )\n            ).length > 0\n              ? false\n              : true\n          }\n        />\n        <button\n          className=\"bg-red-200 text-red-700 py-1 px-2 mr-1 rounded text-sm focus:outline-none\"\n          type=\"button\"\n          onClick={() => {\n            props.setChooseClaimFile(false);\n            props.setViewThisFile(\"\");\n          }}\n        >\n          Close\n        </button>\n      </div>\n      {/* END SEARCH PART ///////////////// */}{\" \"}\n      {/* searchData(props.candidateAnswers, searchInput) */}\n      <div className=\"w-full h-52 mt-2 overflow-y-auto divide-y divide-gray-300\">\n        {props.courses &&\n        getFailedExam(props.candidateAnswers, props.courses).filter((item) =>\n          isClaimAllowed(\n            props.myClaims,\n            props.activeSession.session_plan_id,\n            item.answer_sheet_id\n          )\n        ).length > 0 ? (\n          search(\n            getFailedExam(props.candidateAnswers, props.courses).filter(\n              (item) =>\n                isClaimAllowed(\n                  props.myClaims,\n                  props.activeSession.session_plan_id,\n                  item.answer_sheet_id\n                )\n            ),\n            searchInput\n          ).map((item: ClaimExamResultsDetails, index: number) => (\n            <div\n              className={`group flex items-center justify-between my-1 hover:bg-gray-100 ${\n                props.claimFileId === item.answer_sheet_id &&\n                \"bg-blue-50 border-l-4 border-blue-500\"\n              }`}\n              key={index + item.answer_sheet_id}\n            >\n              <div\n                className=\"p-1 w-full mr-2 cursor-pointer\"\n                onClick={() => {\n                  props.setChooseClaimFile(false);\n                  props.setClaimFileId(item.answer_sheet_id);\n                }}\n              >\n                <p className=\"text-base font-medium text-black\">\n                  {item.course_name}\n                </p>\n              </div>\n              <button\n                type=\"button\"\n                className=\"bg-blue-200 hover:bg-blue-300 text-blue-700 group-hover:text-blue-800 py-1 px-2 mr-1 rounded text-sm\"\n                onClick={() => {\n                  props.setViewThisFile(item.answer_sheet_id);\n                }}\n              >\n                View\n              </button>\n            </div>\n          ))\n        ) : (\n          <div className=\"text-center p-3\">\n            <p className=\"text-base font-medium text-black\">\n              No failed exam available\n            </p>\n          </div>\n        )}\n      </div>\n    </section>\n  );\n};\n\nconst mapStateToProps = ({\n  course,\n}: StoreState): {\n  courses: course[] | null;\n} => {\n  return {\n    courses: course.courses,\n  };\n};\nexport default React.memo(connect(mapStateToProps, {})(FormExamList));\n","import axios from \"axios\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport {\n  Auth,\n  getMyClaims,\n  createClaim,\n  GetClaimingTypes,\n  getMyRejectedApplications,\n  getMyRejectedDocuments,\n  PushPopupAlert,\n  DocumentClaimUser,\n  getMyAnswers,\n  getClaimReasons,\n  CandidateApplicationsStoreInterface,\n  candidateExamStoreInterface,\n} from \"../../actions\";\nimport {\n  getDocumentCategory,\n  getDocumentSubCategory,\n  getDocumentFields,\n} from \"../../actions/document\";\nimport ApplicationFormView from \"../../containers/Claimings/Candidate/ApplicationFormView\";\nimport ChooseReason from \"../../containers/Claimings/Candidate/ChooseReason\";\nimport { ClaimGetDocTitle } from \"../../containers/Claimings/Candidate/ClaimForm\";\nimport DocFormView from \"../../containers/Claimings/Candidate/DocFormView\";\nimport FormApplicationList from \"../../containers/Claimings/Candidate/FormApplicationList\";\nimport FormDocumentList from \"../../containers/Claimings/Candidate/FormDocumentList\";\nimport {\n  PlansTypeKeys,\n  CandidateClaimInterface,\n  claimApplicationsInterface,\n  claimReasonInterface,\n} from \"../../interfaces\";\nimport {\n  ApplicationStates,\n  GetApplicationsAPI,\n} from \"../../interfaces/application\";\nimport { ExamAnswerSheetDone } from \"../../interfaces/exam\";\nimport { PopupAlertTheme } from \"../../interfaces/popupAlert\";\nimport { StoreState } from \"../../reducers\";\nimport { ClaimingReducerType } from \"../../reducers/claiming\";\nimport { DocumentReducerInterface } from \"../../reducers/document\";\nimport { capitalizeFirstLetter, isEmptyOrSpaces } from \"../../shared/dataTest\";\nimport { UserInterface } from \"../../shared/interfaces\";\nimport { API } from \"../../utils/api\";\nimport { setAxiosToken } from \"../../utils/AxiosToken\";\nimport { errorToText } from \"../../utils/errors\";\nimport { DATE } from \"../../utils/functions\";\nimport { PopupAlertData } from \"../Alert/Popup\";\nimport Loading from \"../Loading/Loading\";\n\nconst getCourseIdBySheetId = (\n  allData: ExamAnswerSheetDone[],\n  sheet_id: string\n) => {\n  return allData.find((item) => item.answer_sheet_id === sheet_id);\n};\n\ntype ClaimFormProps = {\n  claim_type: PlansTypeKeys;\n  file_id: string;\n  setFormState: (value: boolean, response?: boolean) => void;\n  auth: Auth;\n  claiming: ClaimingReducerType;\n  documentReducer: DocumentReducerInterface;\n  candidateApplications: CandidateApplicationsStoreInterface;\n  candidateExam: candidateExamStoreInterface;\n  createClaim: Function;\n  GetClaimingTypes: Function;\n  getDocumentCategory: Function;\n  getDocumentSubCategory: Function;\n  getDocumentFields: Function;\n  getMyRejectedApplications: Function;\n  getMyRejectedDocuments: Function;\n  getMyClaims: Function;\n  getMyAnswers: Function;\n  getClaimReasons: Function;\n  PushPopupAlert: (alert: PopupAlertData) => void;\n\n  // DEFAULT DATA ==========\n  // candidateDocuments?: DocumentClaimUser[];\n  // candidateAnswers?: ClaimExamResultsDetails[];\n  // candidateApplications?: claimApplicationsInterface[];\n};\n\ntype ClaimFormState = {\n  loading: boolean;\n  loadingForm: boolean;\n  formError: {\n    element: string;\n    msg: string;\n  } | null;\n  thisClaimType: PlansTypeKeys | null;\n  thisClaimTypeId: string;\n  claimComment: string;\n  claimFileId: string;\n  chooseClaimFile: boolean;\n  chooseClaimReason: boolean;\n  claimReason: claimReasonInterface | null;\n  viewThisFile: string;\n  formType: \"DEFAULT\" | \"PROPS\";\n  alertError: string | null;\n};\n\nexport class ClaimFormComponent extends Component<\n  ClaimFormProps,\n  ClaimFormState\n> {\n  constructor(props: ClaimFormProps) {\n    super(props);\n\n    this.state = {\n      loading: true,\n      loadingForm: false,\n      formError: null,\n      thisClaimType: null,\n      thisClaimTypeId: \"\",\n      claimComment: \"\",\n      claimFileId: \"\",\n      chooseClaimFile: false,\n      viewThisFile: \"\",\n      formType: \"DEFAULT\",\n      alertError: null,\n      chooseClaimReason: false,\n      claimReason: null,\n    };\n  }\n\n  // GENERATE SET STATES FUNCTIONS\n  setLoading = (state: boolean) => {\n    this.setState({ loading: state });\n  };\n\n  setLoadingForm = (state: boolean) => {\n    this.setState({ loadingForm: state });\n  };\n\n  setFormError = (\n    data: {\n      element: string;\n      msg: string;\n    } | null\n  ) => {\n    this.setState({ formError: data });\n  };\n\n  setAlertError = (data: string | null) => {\n    this.setState({ alertError: data });\n  };\n\n  setClaimFileId = (data: string) => {\n    this.setState({ claimFileId: data });\n  };\n\n  setViewThisFile = (data: string) => {\n    this.setState({ viewThisFile: data });\n  };\n\n  setChooseClaimFile = (data: boolean) => {\n    this.setState({ chooseClaimFile: data });\n  };\n\n  setClaimComment = (data: string) => {\n    this.setState({ claimComment: data });\n  };\n\n  setChooseClaimReason = (value: boolean) => {\n    this.setState({ chooseClaimReason: value });\n  };\n\n  setClaimReason = (value: claimReasonInterface | null) => {\n    this.setState({ claimReason: value });\n  };\n\n  // CHECK IF PASSED ID IS VALID\n  isDocumentIdValid = (\n    documents: DocumentClaimUser[],\n    doc_id: string\n  ): {\n    status: boolean;\n    msg: string;\n    alert: PopupAlertTheme;\n  } => {\n    let doc = documents.find((item) => item.doc_id === doc_id);\n    if (doc) {\n      // CHECK IF DOCUMENT HAS REJECTED STATUS\n      if (doc.validated_by.validation_status !== \"rejected\") {\n        return {\n          status: false,\n          msg: \"Only rejected document are allowed for claim\",\n          alert: PopupAlertTheme.info,\n        };\n      }\n      return { status: true, msg: \"\", alert: PopupAlertTheme.success };\n    } else {\n      return {\n        status: false,\n        msg: \"Invalid document id\",\n        alert: PopupAlertTheme.warning,\n      };\n    }\n  };\n\n  isApplicationIdValid = (\n    applications: GetApplicationsAPI[],\n    app_id: string\n  ): {\n    status: boolean;\n    msg: string;\n    alert: PopupAlertTheme;\n  } => {\n    const app = applications.find((item) => item.application_id === app_id);\n    if (app) {\n      // CHECK IF DOCUMENT HAS REJECTED STATUS\n      if (app.application_status !== ApplicationStates.Rejected) {\n        return {\n          status: false,\n          msg: \"Only rejected application are allowed for claim\",\n          alert: PopupAlertTheme.info,\n        };\n      }\n      // CHECK IF DOCUMENT HAS ALREADY CLAIMED ON\n      return { status: true, msg: \"\", alert: PopupAlertTheme.info };\n    } else {\n      return {\n        status: false,\n        msg: \"Invalid application id\",\n        alert: PopupAlertTheme.warning,\n      };\n    }\n  };\n\n  isExamIdValid = (\n    exams: ExamAnswerSheetDone[],\n    exam_id: string\n  ): {\n    status: boolean;\n    msg: string;\n    alert: PopupAlertTheme;\n  } => {\n    const exam = exams.find((item) => item.answer_sheet_id === exam_id);\n    if (exam) {\n      // CHECK IF DOCUMENT HAS REJECTED STATUS\n      if (exam.total_marks === 100) {\n        return {\n          status: false,\n          msg: \"You can't claim on exam which you have 100%\",\n          alert: PopupAlertTheme.info,\n        };\n      }\n\n      return { status: true, msg: \"\", alert: PopupAlertTheme.info };\n    } else {\n      return {\n        status: false,\n        msg: \"Invalid answer sheet id\",\n        alert: PopupAlertTheme.warning,\n      };\n    }\n    // return {\n    //   status: false,\n    //   msg: \"No Application, please try again!\",\n    //   alert: PopupAlertTheme.info,\n    // };\n  };\n\n  componentDidMount = () => {\n    if (this.props.auth.application_session === null) {\n      this.props.PushPopupAlert({\n        title: \"No session active session\",\n        theme: PopupAlertTheme.danger,\n      });\n      this.props.setFormState(false);\n      this.setState({\n        claimFileId: \"\",\n        thisClaimType: null,\n        thisClaimTypeId: \"\",\n        claimComment: \"\",\n        chooseClaimFile: false,\n        formType: \"DEFAULT\",\n        viewThisFile: \"\",\n        formError: null,\n      });\n    } else {\n      if (\n        this.props.documentReducer.documentCategory === null &&\n        this.props.claim_type === PlansTypeKeys.DOCUMENT_VALIDATION\n      ) {\n        this.props.getDocumentCategory();\n      }\n      if (\n        this.props.documentReducer.documentSubCategory === null &&\n        this.props.claim_type === PlansTypeKeys.DOCUMENT_VALIDATION\n      ) {\n        this.props.getDocumentSubCategory();\n      }\n      if (\n        this.props.documentReducer.documentFields === null &&\n        this.props.claim_type === PlansTypeKeys.DOCUMENT_VALIDATION\n      ) {\n        this.props.getDocumentFields();\n      }\n      if (\n        this.props.candidateApplications.candidate_applications !== null &&\n        this.props.claim_type === PlansTypeKeys.APPLICATION\n      )\n        this.setLoading(false);\n\n      if (\n        (this.props.claiming.candidateDocuments === null ||\n          this.props.claiming.candidateDocuments.length !==\n            this.props.auth.documents.length) &&\n        this.props.claim_type === PlansTypeKeys.DOCUMENT_VALIDATION\n      ) {\n        this.props.getMyRejectedDocuments(\n          (status: boolean, msg: string, data?: DocumentClaimUser[]) => {\n            this.setLoading(status);\n            if (!status) {\n              if (msg.length > 0) {\n                this.props.PushPopupAlert({\n                  title: msg,\n                  theme: PopupAlertTheme.danger,\n                });\n              }\n              if (data) {\n                // PROPS VALIDATION PROCESS ###############\n                if (\n                  this.props.claim_type &&\n                  this.props.file_id &&\n                  this.state.formType === \"DEFAULT\"\n                ) {\n                  if (\n                    this.props.claim_type === PlansTypeKeys.DOCUMENT_VALIDATION\n                  ) {\n                    let _isDocumentIdValid = this.isDocumentIdValid(\n                      data,\n                      this.props.file_id\n                    );\n                    if (!_isDocumentIdValid.status) {\n                      this.props.PushPopupAlert({\n                        title: _isDocumentIdValid.msg,\n                        theme: _isDocumentIdValid.alert,\n                      });\n                      // setAlertError(_isDocumentIdValid.msg);\n                      this.props.setFormState(false);\n                    } else {\n                      this.setState({\n                        thisClaimType: this.props.claim_type,\n                        claimFileId: this.props.file_id,\n                        formType: \"PROPS\",\n                      });\n                    }\n                  }\n                }\n              }\n            }\n          }\n        );\n      } else this.setLoading(false);\n\n      if (this.props.claim_type === PlansTypeKeys.EXAMINATION)\n        this.setLoading(false);\n\n      if (this.props.claiming.claimReasons === null) {\n        this.props.getClaimReasons((status: boolean, msg: string) => {\n          this.setLoading(status);\n          if (!status) {\n            if (msg.length > 0) {\n              this.props.PushPopupAlert({\n                title: msg,\n                theme: PopupAlertTheme.danger,\n              });\n            }\n          }\n        });\n      }\n\n      if (this.props.claiming.myClaims === null) {\n        this.props.getMyClaims(\n          this.props.auth.user.user_id,\n          this.props.auth.application_session.session_plan_id,\n          (status: boolean, msg: string) => {\n            this.setLoading(status);\n            if (status === false && msg.length) {\n              this.props.PushPopupAlert({\n                title: msg,\n                theme: PopupAlertTheme.danger,\n              });\n            }\n          }\n        );\n      } else this.setLoading(false);\n\n      // PROPS VALIDATION PROCESS ###############\n      if (\n        !isEmptyOrSpaces(this.props.claim_type) &&\n        !isEmptyOrSpaces(this.props.file_id) &&\n        this.state.formType === \"DEFAULT\"\n      ) {\n        this.setState({ thisClaimType: this.props.claim_type });\n        if (\n          this.props.claim_type === PlansTypeKeys.DOCUMENT_VALIDATION &&\n          this.props.claiming.candidateDocuments\n        ) {\n          let _isDocumentIdValid = this.isDocumentIdValid(\n            this.props.claiming.candidateDocuments,\n            this.props.file_id\n          );\n          if (!_isDocumentIdValid.status) {\n            this.props.PushPopupAlert({\n              title: _isDocumentIdValid.msg,\n              theme: _isDocumentIdValid.alert,\n            });\n            // setAlertError(_isDocumentIdValid.msg);\n            this.props.setFormState(false);\n          } else {\n            this.setState({\n              thisClaimType: this.props.claim_type,\n              claimFileId: this.props.file_id,\n              formType: \"PROPS\",\n            });\n          }\n        }\n        if (\n          this.props.claim_type === PlansTypeKeys.APPLICATION &&\n          this.props.candidateApplications.candidate_applications\n        ) {\n          let _isApplicationIdValid = this.isApplicationIdValid(\n            this.props.candidateApplications.candidate_applications,\n            this.props.file_id\n          );\n          if (!_isApplicationIdValid.status) {\n            this.props.PushPopupAlert({\n              title: _isApplicationIdValid.msg,\n              theme: _isApplicationIdValid.alert,\n            });\n            this.props.setFormState(false);\n          } else {\n            this.setState({\n              thisClaimType: this.props.claim_type,\n              claimFileId: this.props.file_id,\n              formType: \"PROPS\",\n            });\n          }\n        }\n\n        if (\n          this.props.claim_type === PlansTypeKeys.EXAMINATION &&\n          this.props.candidateExam.user_exams_done\n        ) {\n          let _isExamIdValid = this.isExamIdValid(\n            this.props.candidateExam.user_exams_done,\n            this.props.file_id\n          );\n          if (!_isExamIdValid.status) {\n            this.props.PushPopupAlert({\n              title: _isExamIdValid.msg,\n              theme: _isExamIdValid.alert,\n            });\n            this.props.setFormState(false);\n          } else {\n            this.setState({\n              thisClaimType: this.props.claim_type,\n              claimFileId: this.props.file_id,\n              formType: \"PROPS\",\n            });\n          }\n        }\n      }\n    }\n  };\n\n  getDocumentById = (\n    documents: DocumentClaimUser[],\n    doc_id: string\n  ): DocumentClaimUser => {\n    return documents.filter((item) => item.doc_id === doc_id)[0];\n  };\n\n  getApplicationById = (\n    applications: GetApplicationsAPI[],\n    application_id: string\n  ): claimApplicationsInterface | undefined => {\n    let result: claimApplicationsInterface | undefined = undefined;\n    let thisApplication = applications.find(\n      (item) => item.application_id === application_id\n    );\n\n    if (thisApplication)\n      result = {\n        application_id: thisApplication.application_id,\n        application_period: thisApplication.application_session.session_plan_id,\n        createdAt: thisApplication.createdAt,\n        exams: thisApplication.exams,\n        position: thisApplication.position,\n        application_status:\n          thisApplication.application_status as ApplicationStates,\n        updatedAt: thisApplication.updatedAt,\n        user_id: thisApplication.user_id,\n        application_history: thisApplication.application_history,\n        application_session: thisApplication.application_session,\n        override_by: {\n          application_status: thisApplication.override_by.application_status,\n          comment: thisApplication.override_by.comment,\n          date: thisApplication.override_by.date,\n          user_id: thisApplication.override_by.user_id,\n        },\n      };\n\n    return result;\n  };\n\n  getValidation = (\n    thisId: string\n  ): {\n    old_reason: string;\n    old_status: string;\n    old_evaluated_by: string;\n  } => {\n    let result: {\n      old_reason: string;\n      old_status: string;\n      old_evaluated_by: string;\n    } = { old_reason: \"\", old_status: \"\", old_evaluated_by: \"\" };\n\n    if (\n      this.state.thisClaimType === PlansTypeKeys.DOCUMENT_VALIDATION &&\n      this.props.claiming.candidateDocuments\n    ) {\n      result = {\n        old_reason: this.getDocumentById(\n          this.props.claiming.candidateDocuments,\n          thisId\n        ).validated_by.comment,\n        old_status: this.getDocumentById(\n          this.props.claiming.candidateDocuments,\n          thisId\n        ).validated_by.validation_status,\n        old_evaluated_by: this.getDocumentById(\n          this.props.claiming.candidateDocuments,\n          thisId\n        ).validated_by.user_id,\n      };\n    } else if (\n      this.state.thisClaimType === PlansTypeKeys.APPLICATION &&\n      this.props.candidateApplications.candidate_applications &&\n      this.getApplicationById(\n        this.props.candidateApplications.candidate_applications,\n        thisId\n      )\n    ) {\n      result = {\n        old_reason: this.getApplicationById(\n          this.props.candidateApplications.candidate_applications,\n          thisId\n        )!.override_by.comment,\n        old_status: this.getApplicationById(\n          this.props.candidateApplications.candidate_applications,\n          thisId\n        )!.override_by.application_status,\n        old_evaluated_by: this.getApplicationById(\n          this.props.candidateApplications.candidate_applications,\n          thisId\n        )!.override_by.user_id,\n      };\n    }\n\n    return result;\n  };\n\n  loadUserById = async (user_id: string, callback: Function) => {\n    if (isEmptyOrSpaces(user_id)) {\n      return this.props.PushPopupAlert({\n        title: \"No user id provided\",\n        theme: PopupAlertTheme.danger,\n      });\n    }\n    try {\n      setAxiosToken();\n      const res = await axios.get<UserInterface>(\n        `${API.AUTH}/users/${user_id}`\n      );\n      console.log(\"====================================\");\n      console.log({ loadUserById: res });\n      console.log(\"====================================\");\n      if (res) {\n        callback(res.data);\n      }\n    } catch (error) {\n      console.error({ error });\n      this.props.PushPopupAlert({\n        title: errorToText(error),\n        theme: PopupAlertTheme.danger,\n      });\n    }\n  };\n\n  getClaimTitle = (claimType: PlansTypeKeys): string => {\n    let result: string = \"\";\n    // title from document\n    if (\n      claimType === PlansTypeKeys.DOCUMENT_VALIDATION &&\n      this.props.claiming.candidateDocuments\n    ) {\n      result = ClaimGetDocTitle(\n        this.props.documentReducer,\n        this.getDocumentById(\n          this.props.claiming.candidateDocuments,\n          this.state.claimFileId\n        )\n      ).main;\n    }\n    // title from application\n    if (\n      claimType === PlansTypeKeys.APPLICATION &&\n      this.props.candidateApplications.candidate_applications &&\n      this.getApplicationById(\n        this.props.candidateApplications.candidate_applications,\n        this.state.claimFileId\n      )\n    ) {\n      result = this.getApplicationById(\n        this.props.candidateApplications.candidate_applications,\n        this.state.claimFileId\n      )!.position.position_title;\n    }\n    // title from examination\n    if (\n      claimType === PlansTypeKeys.EXAMINATION &&\n      getCourseIdBySheetId(\n        this.props.candidateExam.user_exams_done,\n        this.state.claimFileId\n      )\n    ) {\n      result = getCourseIdBySheetId(\n        this.props.candidateExam.user_exams_done,\n        this.state.claimFileId\n      )!.course;\n    }\n    // if (\n    //   claimType === PlansTypeKeys.PLACEMENT_TRANSFER &&\n    //   this.state.myPlacement\n    // ) {\n    //   result = \"Placed on \" + this.state.myPlacement.placed.school.school_name;\n    // }\n\n    return result;\n  };\n\n  cleanToClose = () => {\n    this.props.setFormState(false);\n    this.setState({\n      claimFileId: \"\",\n      thisClaimType: null,\n      thisClaimTypeId: \"\",\n      claimComment: \"\",\n      chooseClaimFile: false,\n      formType: \"DEFAULT\",\n      viewThisFile: \"\",\n      formError: null,\n    });\n  };\n\n  handleSubmit = async (e: React.FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n    if (!this.state.thisClaimType) {\n      return this.setFormError({\n        element: \"claim_type\",\n        msg: \"Claim type is required!\",\n      });\n    }\n    if (isEmptyOrSpaces(this.state.claimFileId)) {\n      return this.setFormError({\n        element: \"claim_file\",\n        msg: `Please select ${this.state.thisClaimType.toLocaleLowerCase()} you are claiming on!`,\n      });\n    }\n\n    if (!this.state.claimReason) {\n      return this.setFormError({\n        element: \"claim_reason\",\n        msg: `Please select the reason of your claim!`,\n      });\n    }\n\n    if (isEmptyOrSpaces(this.state.claimComment)) {\n      return this.setFormError({\n        element: \"claim_comment\",\n        msg: `Claim comment is required!`,\n      });\n    }\n\n    if (!this.props.auth.application_session) {\n      return this.setAlertError(`No active claiming session is available!`);\n    }\n    let old_evaluator_email: string = \"info@system.com\";\n    let old_evaluator_name: string = \"System\";\n    let evaluator_email: string = \"\";\n    let evaluator_name: string = \"\";\n    let title: string = this.getClaimTitle(this.state.thisClaimType);\n\n    if (\n      this.state.thisClaimType !== PlansTypeKeys.EXAMINATION &&\n      this.getValidation(this.state.claimFileId).old_evaluated_by !== \"system\"\n    ) {\n      await this.loadUserById(\n        this.getValidation(this.state.claimFileId).old_evaluated_by,\n        (data: UserInterface) => {\n          old_evaluator_email = data.email;\n          old_evaluator_name =\n            data.user_info.fname + \" \" + data.user_info.lname;\n        }\n      );\n    }\n    this.setLoadingForm(true);\n    try {\n      setAxiosToken();\n      const res = await axios.post<CandidateClaimInterface>(\n        `${API.CLAIMING}/user/create`,\n        {\n          claiming_on_id: this.state.claimFileId,\n          type_key: this.state.thisClaimType,\n          user: this.props.auth.user.user_id,\n          period_id: this.props.auth.application_session.session_plan_id,\n          default_claim_resaons: this.state.claimReason.id,\n          reason: this.state.claimComment,\n          // old_reason: this.getValidation(this.state.claimFileId).old_reason,\n          // old_status: this.getValidation(this.state.claimFileId).old_status,\n          // old_evaluated_by: this.getValidation(this.state.claimFileId)\n          //   .old_evaluated_by,\n          old_reason:\n            this.state.thisClaimType === PlansTypeKeys.EXAMINATION ||\n            this.state.thisClaimType === PlansTypeKeys.PLACEMENT_TRANSFER\n              ? \"System\"\n              : this.getValidation(this.state.claimFileId).old_reason,\n          old_status:\n            this.state.thisClaimType === PlansTypeKeys.EXAMINATION ||\n            this.state.thisClaimType === PlansTypeKeys.PLACEMENT_TRANSFER\n              ? \"Failed\"\n              : this.getValidation(this.state.claimFileId).old_status,\n          old_evaluated_by:\n            this.state.thisClaimType === PlansTypeKeys.EXAMINATION ||\n            this.state.thisClaimType === PlansTypeKeys.PLACEMENT_TRANSFER\n              ? \"\"\n              : this.getValidation(this.state.claimFileId).old_evaluated_by,\n          old_evaluator_email,\n          old_evaluator_name,\n          evaluator_email,\n          evaluator_name,\n          title,\n        }\n      );\n      console.log(\"====================================\");\n      console.log({ createClaim: res.data });\n      console.log(\"====================================\");\n      if (res.status === 201 || res.status === 200) {\n        this.props.createClaim(res.data);\n        this.props.PushPopupAlert({\n          title: \"Claim sent successful\",\n          theme: PopupAlertTheme.success,\n        });\n        this.cleanToClose();\n        this.props.setFormState(false);\n      }\n    } catch (error) {\n      console.error({ error });\n      this.props.PushPopupAlert({\n        title: errorToText(error),\n        theme: PopupAlertTheme.danger,\n      });\n    }\n    this.props.setFormState(false);\n    this.setLoadingForm(false);\n  };\n\n  displayClaimType = (claimType: PlansTypeKeys): string => {\n    let result: string = \"\";\n    switch (claimType) {\n      case PlansTypeKeys.APPLICATION:\n        result = \"application\";\n        break;\n      case PlansTypeKeys.DOCUMENT_VALIDATION:\n        result = \"document\";\n        break;\n      case PlansTypeKeys.EXAMINATION:\n        result = \"exam\";\n        break;\n      case PlansTypeKeys.MARKS_PUBLICATION:\n        result = \"marks publication\";\n        break;\n      case PlansTypeKeys.PLACEMENT_TRANSFER:\n        result = \"placement\";\n        break;\n      default:\n        result = \"\";\n        break;\n    }\n\n    return result;\n  };\n\n  selectClaimType = (thisClaim: string) => {\n    this.setState({\n      thisClaimType: isEmptyOrSpaces(thisClaim)\n        ? null\n        : (thisClaim as PlansTypeKeys),\n    });\n  };\n\n  generateChooseFileTitle = (thisClaimType: PlansTypeKeys | null): string => {\n    let result: string = \"\";\n\n    switch (thisClaimType) {\n      case PlansTypeKeys.APPLICATION:\n        result = `Select application you are claiming on?`;\n        break;\n      case PlansTypeKeys.DOCUMENT_VALIDATION:\n        result = `Select document you are claiming on?`;\n        break;\n      case PlansTypeKeys.EXAMINATION:\n        result = `Select exam you are claiming on?`;\n        break;\n      case PlansTypeKeys.MARKS_PUBLICATION:\n        result = `Select marks publication you are claiming on?`;\n        break;\n      case PlansTypeKeys.PLACEMENT_TRANSFER:\n        result = `Select placement you are claiming on?`;\n        break;\n      default:\n        result = \"Select file you are claiming on?\";\n        break;\n    }\n\n    return result;\n  };\n\n  getClaimById = (\n    myClaims: CandidateClaimInterface[],\n    fileId: string,\n    sessionId: string\n  ): CandidateClaimInterface | undefined => {\n    return myClaims.find(\n      (item) => item.claiming_on_id === fileId && item.period_id === sessionId\n    );\n  };\n\n  render() {\n    // CHECK IF STILL LOADING DATA ===============\n    if (\n      this.props.auth.application_session !== null &&\n      (this.state.loading ||\n        (this.props.claiming.myClaims === null &&\n          !isEmptyOrSpaces(this.props.file_id) &&\n          !isEmptyOrSpaces(this.props.claim_type)))\n    ) {\n      return <Loading />;\n    }\n\n    if (\n      this.props.claiming.myClaims &&\n      this.props.auth.application_session &&\n      this.getClaimById(\n        this.props.claiming.myClaims,\n        this.props.file_id,\n        this.props.auth.application_session.session_plan_id\n      ) !== undefined\n    ) {\n      return (\n        <div>\n          <h2 className=\"text-center text-2xl font-bold p-3 text-gray-500\">\n            Claims on this {this.displayClaimType(this.props.claim_type!)}\n          </h2>\n          {this.getClaimById(\n            this.props.claiming.myClaims,\n            this.props.file_id,\n            this.props.auth.application_session.session_plan_id\n          )!.claims.length >= 1 ? (\n            <div>\n              {this.getClaimById(\n                this.props.claiming.myClaims,\n                this.props.file_id,\n                this.props.auth.application_session.session_plan_id\n              )!.claims.map((itm) => (\n                <div className=\"p-2 border rounded mb-2\">\n                  <div className=\"p-1 border-b\">\n                    <span className=\"text-gray-400\">Created date:</span>{\" \"}\n                    <b>{DATE(itm.createdAt)}</b>\n                  </div>\n                  <div className=\"p-1 border-b\">\n                    <span className=\"text-gray-400\">Reason:</span>{\" \"}\n                    <p>{itm.reason}</p>\n                  </div>\n                  <div className=\"p-1 border-b\">\n                    <span className=\"text-gray-400\">Evaluation comment:</span>{\" \"}\n                    <p>{itm.evaluation_comment}</p>\n                  </div>\n                  <div className=\"p-1\">\n                    <span className=\"text-gray-400 block\">decision:</span>{\" \"}\n                    <h3 className=\"text-xl font-bold\">\n                      {itm.decision_taken_status}\n                    </h3>\n                  </div>\n                </div>\n              ))}\n            </div>\n          ) : (\n            <div>No claims found!</div>\n          )}\n        </div>\n      );\n    }\n\n    return (\n      <div className=\"pb-3\">\n        {/* CLAIM FORM ============================================== */}\n        {this.state.viewThisFile.length <= 0 && (\n          <form onSubmit={(e) => this.handleSubmit(e)}>\n            <div className=\"px-6 pb-3\">\n              {this.state.alertError && (\n                <div\n                  className=\"alert-warning cursor-pointer\"\n                  onClick={() => this.setAlertError(null)}\n                >\n                  {this.state.alertError}\n                </div>\n              )}\n              <div className=\"text-base text-gray-700 sm:text-lg\">\n                {/* SELECT CLAIM TYPE ============================================== */}\n                <div className=\"flex flex-col mb-2\">\n                  <label>Claim type</label>\n                  <select\n                    className={`rounded px-2 py-2 w-full bg-white focus:outline-none ${\n                      this.state.formType === \"PROPS\" && \"cursor-not-allowed\"\n                    } ${\n                      this.state.formError &&\n                      this.state.formError.element === \"claim_type\"\n                        ? \"border-red-500\"\n                        : \"border-gray-500\"\n                    } border-2`}\n                    onChange={(e: React.ChangeEvent<HTMLSelectElement>) => {\n                      this.selectClaimType(e.target.value);\n                      this.setClaimFileId(\"\");\n                      this.state.formError &&\n                        this.state.formError.element === \"claim_type\" &&\n                        this.setFormError(null);\n                    }}\n                    value={\n                      this.state.thisClaimType ? this.state.thisClaimType : \"\"\n                    }\n                    disabled={\n                      this.state.loadingForm || this.state.formType === \"PROPS\"\n                    }\n                  >\n                    <option value=\"\">Choose claim type</option>\n                    {Object.values(PlansTypeKeys).map((item, index) => (\n                      <option value={item} key={index + item}>\n                        {capitalizeFirstLetter(\n                          item.toLocaleLowerCase().replace(/_/g, \" \")\n                        )}\n                      </option>\n                    ))}\n                  </select>\n                  {this.state.formError &&\n                    this.state.formError.element === \"claim_type\" && (\n                      <span className=\"text-red-500\">\n                        {this.state.formError.msg}\n                      </span>\n                    )}\n                </div>\n                {/* END SELECT CLAIM TYPE ============================================== */}\n\n                {/* SELECT FILE TO CLAIM ON ============================================== */}\n                <div className=\"flex flex-col mb-2\">\n                  <label>\n                    {this.generateChooseFileTitle(this.state.thisClaimType)}\n                  </label>\n                  <div\n                    className={`text-left bg-white border-2 ${\n                      this.state.formType !== \"PROPS\"\n                        ? \"border-gray-700\"\n                        : \"border-gray-400 text-gray-500\"\n                    } rounded w-full ${\n                      this.state.chooseClaimFile ? \"h-64\" : \"h-10\"\n                    } ${\n                      this.state.formError &&\n                      this.state.formError.element === \"claim_file\"\n                        ? \"border-red-500\"\n                        : \"\"\n                    } border-2 ${\n                      this.state.thisClaimType &&\n                      !this.state.chooseClaimFile &&\n                      this.state.formType !== \"PROPS\"\n                        ? \"cursor-pointer\"\n                        : !this.state.chooseClaimFile && \"cursor-not-allowed\"\n                    }`}\n                    title={\n                      !this.state.thisClaimType\n                        ? \"Choose claim type first!\"\n                        : \"\"\n                    }\n                    onClick={() => {\n                      this.state.formType === \"DEFAULT\" &&\n                        this.state.thisClaimType &&\n                        !this.state.chooseClaimFile &&\n                        this.setChooseClaimFile(true);\n                      this.state.formError &&\n                        this.state.formError.element === \"claim_file\" &&\n                        this.setFormError(null);\n                    }}\n                  >\n                    {/* DISPLAYING FILTERED SELECTING FILE ============================ */}\n                    {this.state.claimFileId.length > 0 &&\n                    !this.state.chooseClaimFile ? (\n                      <p className=\"my-1 mx-2\">\n                        {this.state.thisClaimType ===\n                          PlansTypeKeys.DOCUMENT_VALIDATION &&\n                          this.props.claiming.candidateDocuments &&\n                          ClaimGetDocTitle(\n                            this.props.documentReducer,\n                            this.getDocumentById(\n                              this.props.claiming.candidateDocuments,\n                              this.state.claimFileId\n                            )\n                          ).main}\n                        {this.state.thisClaimType ===\n                          PlansTypeKeys.APPLICATION &&\n                          this.props.candidateApplications\n                            .candidate_applications &&\n                          this.getApplicationById(\n                            this.props.candidateApplications\n                              .candidate_applications,\n                            this.state.claimFileId\n                          ) &&\n                          this.getApplicationById(\n                            this.props.candidateApplications\n                              .candidate_applications,\n                            this.state.claimFileId\n                          )!.position.position_title}\n                      </p>\n                    ) : (\n                      !this.state.chooseClaimFile && (\n                        <p className=\"my-1 mx-2\">\n                          Select Claim{\" \"}\n                          {this.state.thisClaimType &&\n                            this.state.thisClaimType\n                              .toLocaleLowerCase()\n                              .replace(/_/g, \" \")}\n                        </p>\n                      )\n                    )}\n                    {/* END DISPLAYING FILTERED SELECTING FILE ============================ */}\n\n                    {/* LISTING OF REJECTED DOCUMENTS ============================ */}\n                    {this.state.chooseClaimFile &&\n                      this.state.thisClaimType ===\n                        PlansTypeKeys.DOCUMENT_VALIDATION &&\n                      this.props.claiming.candidateDocuments &&\n                      this.props.claiming.myClaims &&\n                      this.props.auth.application_session && (\n                        <FormDocumentList\n                          setChooseClaimFile={this.setChooseClaimFile}\n                          setClaimFileId={this.setClaimFileId}\n                          setViewThisFile={this.setViewThisFile}\n                          claimFileId={this.state.claimFileId}\n                          viewThisFile={this.state.viewThisFile}\n                          candidateDocuments={\n                            this.props.claiming.candidateDocuments\n                          }\n                          documentCategories={this.props.documentReducer}\n                          myClaims={this.props.claiming.myClaims}\n                          activeSession={this.props.auth.application_session}\n                        />\n                      )}\n                    {/* END LISTING OF REJECTED DOCUMENTS ============================ */}\n                    {/* LISTING OF REJECTED APPLICATION ============================ */}\n                    {this.state.chooseClaimFile &&\n                      this.state.thisClaimType === PlansTypeKeys.APPLICATION &&\n                      this.props.claiming.candidateApplications &&\n                      this.props.claiming.myClaims &&\n                      this.props.auth.application_session && (\n                        <FormApplicationList\n                          setChooseClaimFile={this.setChooseClaimFile}\n                          setClaimFileId={this.setClaimFileId}\n                          setViewThisFile={this.setViewThisFile}\n                          claimFileId={this.state.claimFileId}\n                          viewThisFile={this.state.viewThisFile}\n                          candidateApplications={\n                            this.props.claiming.candidateApplications\n                          }\n                          myClaims={this.props.claiming.myClaims}\n                          activeSession={this.props.auth.application_session}\n                        />\n                      )}\n                    {/* END LISTING OF REJECTED APPLICATION ============================ */}\n                  </div>\n                  {this.state.formError &&\n                    this.state.formError.element === \"claim_file\" && (\n                      <span className=\"text-red-500\">\n                        {this.state.formError.msg}\n                      </span>\n                    )}\n                </div>\n                {/* END SELECT FILE TO CLAIM ON ============================================== */}\n\n                {/* CLAIM REASONS ========================================== */}\n                <div className=\"flex flex-col mb-2\">\n                  <label>Choose reason of your claim</label>\n                  <div\n                    className={`text-left bg-white border-2 border-gray-700 rounded w-full ${\n                      this.state.chooseClaimReason ? \"h-64\" : \"h-auto\"\n                    } ${\n                      this.state.formError &&\n                      this.state.formError.element === \"claim_reason\"\n                        ? \"border-red-500\"\n                        : \"\"\n                    } border-2 ${\n                      this.props.claiming.claimReasons === null\n                        ? \"cursor-wait\"\n                        : \"cursor-pointer\"\n                    }`}\n                    title=\"Choose the reason for your claim!\"\n                    onClick={() => {\n                      !this.state.chooseClaimReason &&\n                        this.setState({ chooseClaimReason: true });\n                      this.state.formError &&\n                        this.state.formError.element === \"claim_reason\" &&\n                        this.setFormError(null);\n                    }}\n                  >\n                    {/* DISPLAYING SELECTED REASON ============================ */}\n                    {this.state.claimReason && !this.state.chooseClaimReason ? (\n                      <p className=\"my-1 mx-2\">\n                        {this.state.claimReason.reason}\n                      </p>\n                    ) : (\n                      !this.state.chooseClaimReason && (\n                        <p className=\"my-1 mx-2\">Select reason</p>\n                      )\n                    )}\n                    {/* END DISPLAYING SELECTED REASON ============================ */}\n\n                    {/* LISTING OF CLAIM REASONS ============================ */}\n                    {this.state.chooseClaimReason &&\n                      this.props.claiming.claimReasons && (\n                        <ChooseReason\n                          setChooseClaimReason={this.setChooseClaimReason}\n                          setClaimReason={this.setClaimReason}\n                          claimReason={this.state.claimReason}\n                          allClaimReasons={this.props.claiming.claimReasons}\n                        />\n                      )}\n                    {/* END LISTING OF CLAIM REASONS ============================ */}\n                  </div>\n                  {this.state.formError &&\n                    this.state.formError.element === \"claim_reason\" && (\n                      <span className=\"text-red-500\">\n                        {this.state.formError.msg}\n                      </span>\n                    )}\n                </div>\n                {/* END CLAIM REASONS ========================================== */}\n\n                {/* CLAIM COMMENT ============================================== */}\n                <div className=\"flex flex-col\">\n                  <label>Comment</label>\n                  <textarea\n                    className={`text-left input-white w-20 inline-block ${\n                      this.state.formError &&\n                      this.state.formError.element === \"claim_comment\"\n                        ? \"border-red-500\"\n                        : \"border-gray-500\"\n                    } border-2`}\n                    placeholder={`Claim comment`}\n                    style={{ resize: \"none\" }}\n                    value={this.state.claimComment}\n                    onChange={(e) => {\n                      this.setClaimComment(e.target.value);\n                      this.state.formError &&\n                        this.state.formError.element === \"claim_comment\" &&\n                        this.setFormError(null);\n                    }}\n                    rows={3}\n                    disabled={this.state.loadingForm}\n                  ></textarea>\n                  {this.state.formError &&\n                    this.state.formError.element === \"claim_comment\" && (\n                      <span className=\"text-red-500\">\n                        {this.state.formError.msg}\n                      </span>\n                    )}\n                </div>\n                {/* END CLAIM COMMENT ============================================== */}\n              </div>\n              <div className=\"pt-3 flex justify-between\">\n                <button\n                  onClick={() => this.cleanToClose()}\n                  className={`btn bg-gray-400 text-white hover:bg-gray-600 focus:outline-none ${\n                    this.state.loadingForm && \"cursor-not-allowed\"\n                  }`}\n                  type=\"button\"\n                  disabled={this.state.loadingForm}\n                >\n                  Exit\n                </button>\n                <button\n                  className={`btn bg-primary text-white hover:bg-blue-600 focus:outline-none ${\n                    this.state.loadingForm && \"cursor-wait\"\n                  }`}\n                  type=\"submit\"\n                  disabled={this.state.loadingForm}\n                >\n                  {this.state.loadingForm ? \"Loading...\" : \"Claim\"}\n                </button>\n              </div>\n            </div>\n          </form>\n        )}\n        {/* END CLAIM FORM ============================================== */}\n\n        {/* CLAIM DOCUMENT VIEW ============================================== */}\n        {this.state.viewThisFile.length > 0 &&\n          this.props.claiming.candidateDocuments &&\n          this.state.thisClaimType === PlansTypeKeys.DOCUMENT_VALIDATION && (\n            <DocFormView\n              thisDoc={this.getDocumentById(\n                this.props.claiming.candidateDocuments,\n                this.state.viewThisFile\n              )}\n              setViewThisFile={this.setViewThisFile}\n              documentCategories={this.props.documentReducer}\n              setChooseClaimFile={this.setChooseClaimFile}\n              setClaimFileId={this.setClaimFileId}\n            />\n          )}\n        {/* END CLAIM DOCUMENT VIEW ============================================== */}\n        {/* CLAIM APPLICATION VIEW ============================================== */}\n        {this.state.viewThisFile.length > 0 &&\n          this.props.candidateApplications.candidate_applications &&\n          this.getApplicationById(\n            this.props.candidateApplications.candidate_applications,\n            this.state.viewThisFile\n          ) &&\n          this.state.thisClaimType === PlansTypeKeys.APPLICATION && (\n            <ApplicationFormView\n              thisApplication={\n                this.getApplicationById(\n                  this.props.candidateApplications.candidate_applications,\n                  this.state.viewThisFile\n                )!\n              }\n              documentCategories={this.props.documentReducer}\n              setChooseClaimFile={this.setChooseClaimFile}\n              setClaimFileId={this.setClaimFileId}\n              setViewThisFile={this.setViewThisFile}\n            />\n          )}\n        {/* END CLAIM APPLICATION VIEW ============================================== */}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = ({\n  auth,\n  document,\n  claiming,\n  candidateApplications,\n  candidateExam,\n}: StoreState): {\n  auth: Auth;\n  documentReducer: DocumentReducerInterface;\n  claiming: ClaimingReducerType;\n  candidateApplications: CandidateApplicationsStoreInterface;\n  candidateExam: candidateExamStoreInterface;\n} => {\n  return {\n    auth: auth,\n    documentReducer: document,\n    claiming,\n    candidateApplications: candidateApplications,\n    candidateExam: candidateExam,\n  };\n};\n\nexport default connect(mapStateToProps, {\n  getMyClaims,\n  getMyAnswers,\n  getClaimReasons,\n  createClaim,\n  GetClaimingTypes,\n  getMyRejectedApplications,\n  getMyRejectedDocuments,\n  getDocumentCategory,\n  getDocumentSubCategory,\n  getDocumentFields,\n  PushPopupAlert,\n})(ClaimFormComponent);\n","import React, { Component } from \"react\";\nimport { MdSearch } from \"react-icons/md\";\nimport { claimReasonInterface } from \"../../../interfaces\";\nimport search from \"../../../utils/search\";\n\nexport const claimReasonsData = [\n  { key: 1, reason: \"Not placed (Sinahawe umwanya)\" },\n  {\n    key: 2,\n    reason:\n      \"Not placed with higher marks (Sinahawe umwanya kandi hari abo ndusha twakoze bimwe bawuhawe)\",\n  },\n  {\n    key: 3,\n    reason:\n      \"Want to change district of placement (Nifuza guhindurirwa akarere nahawemo umwanya)\",\n  },\n  {\n    key: 4,\n    reason: \"Rejected offer by mistake (Nibeshye nanga umwanya nahawe)\",\n  },\n  {\n    key: 0,\n    reason: \"None of the above (nta na kimwe muri ibyo byavuzwe haruguru)\",\n  },\n];\n\ntype ChooseReasonProps = {\n  claimReason: claimReasonInterface | null;\n  setClaimReason: (value: claimReasonInterface | null) => void;\n  setChooseClaimReason: (value: boolean) => void;\n  allClaimReasons: claimReasonInterface[];\n};\n\ntype ChooseReasonState = {\n  searchInput: string;\n};\n\nclass ChooseReason extends Component<ChooseReasonProps, ChooseReasonState> {\n  constructor(props: ChooseReasonProps) {\n    super(props);\n\n    this.state = {\n      searchInput: \"\",\n    };\n  }\n\n  setSearchInput = (value: string) => {\n    this.setState({ searchInput: value });\n  };\n\n  render() {\n    return (\n      <div>\n        {/* SEARCH PART */}\n        <div className=\"flex items-center w-full my-1\">\n          <MdSearch className=\"w-6 h-6 absolute ml-2\" />\n          <input\n            type=\"text\"\n            placeholder=\"Search\"\n            className=\"focus:border-2 h-7 ml-1 pl-9 mr-2 bg-gray-100 focus:border-gray-700 w-full rounded\"\n            onChange={(e) => this.setSearchInput(e.target.value)}\n            value={this.state.searchInput}\n          />\n          <button\n            className=\"bg-red-200 text-red-700 py-1 px-2 mr-1 rounded text-sm focus:outline-none\"\n            type=\"button\"\n            onClick={() => this.props.setChooseClaimReason(false)}\n          >\n            Close\n          </button>\n        </div>\n        {/* END SEARCH PART ///////////////// */}\n\n        <div className=\"w-full h-52 mt-2 overflow-y-auto divide-y divide-gray-300\">\n          {search(this.props.allClaimReasons, this.state.searchInput).map(\n            (item: claimReasonInterface, index) => (\n              <section key={index.toString() + item.id}>\n                <div\n                  className={`py-1 w-full px-2 hover:bg-gray-100 cursor-pointer ${\n                    this.props.claimReason &&\n                    this.props.claimReason.id === item.id\n                      ? \"border-l-4 border-blue-500 bg-blue-50\"\n                      : \"my-1\"\n                  }`}\n                  onClick={() => {\n                    this.props.setChooseClaimReason(false);\n                    this.props.setClaimReason(item);\n                  }}\n                >\n                  <p className=\"text-base text-black\">{item.reason}</p>\n                </div>\n              </section>\n            )\n          )}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default React.memo(ChooseReason);\n","import React from \"react\";\nimport { DocumentClaimUser } from \"../../../actions/claiming\";\nimport { DocumentReducerInterface } from \"../../../reducers/document\";\nimport { capitalizeFirstLetter } from \"../../../shared/dataTest\";\nimport { API } from \"../../../utils/api\";\nimport { ClaimGetDocTitle } from \"./ClaimForm\";\n\ntype DocFormViewProps = {\n  thisDoc: DocumentClaimUser;\n  setChooseClaimFile: (value: boolean) => void;\n  setClaimFileId: (value: string) => void;\n  setViewThisFile: (value: string) => void;\n  documentCategories: DocumentReducerInterface;\n};\n\nconst DocFormView: React.FC<DocFormViewProps> = (props) => {\n  return (\n    <section className=\"\">\n      <div className=\"w-full bg-gray-100 px-4 py-1 animate__animated animate__fadeIn\">\n        <div className=\"flex flex-col mb-2\">\n          <div className=\"flex items-center justify-between\">\n            <span className=\"text-blue-600 font-bold text-xl\">\n              {ClaimGetDocTitle(props.documentCategories, props.thisDoc).main}\n            </span>\n            <button\n              type=\"button\"\n              className=\"btn btn-blue\"\n              onClick={() => {\n                props.setChooseClaimFile(false);\n                props.setClaimFileId(props.thisDoc.doc_id);\n                props.setViewThisFile(\"\");\n              }}\n            >\n              Choose\n            </button>\n          </div>\n          <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n            <span className={`italic`}>Status:</span>\n            <span className=\"font-bold text-yellow-900 rounded px-3 py-1\">\n              {capitalizeFirstLetter(props.thisDoc.validation_status)}\n            </span>\n          </div>\n          <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n            <span className={`italic`}>Evaluated by:</span>\n            <span className=\"font-semibold\">\n              ################\n              {/* {loadingUsers ? (\n                <div className=\"w-24 h-3 rounded bg-gray-200 animate__animated animate__pulse animate__delay-5s animate__infinite\"></div>\n              ) : getUserDocuments(\n                  props.userList,\n                  props.thisDoc.validated_by.user_id\n                ) ? (\n                getUserDocuments(\n                  props.userList,\n                  props.thisDoc.validated_by.user_id\n                )!.user.user_info.fname +\n                \" \" +\n                getUserDocuments(\n                  props.userList,\n                  props.thisDoc.validated_by.user_id\n                )!.user.user_info.lname\n              ) : (\n                \"-\"\n              )} */}\n            </span>\n          </div>\n          <div className=\"flex items-start gap-2 text-sm text-gray-600\">\n            <span className={`italic`}>Reason:</span>\n            <span className=\"font-normal\">\n              {props.thisDoc.validated_by.comment}\n            </span>\n          </div>\n          <div className=\"w-full my-1\">\n            <img\n              src={`${API.AUTH_FILES}/${props.thisDoc.files}`}\n              alt=\"doc file\"\n              className={`w-full`}\n            />\n          </div>\n        </div>\n      </div>\n    </section>\n  );\n};\n\nexport default React.memo(DocFormView);\n","import React, { useState } from \"react\";\nimport { MdSearch } from \"react-icons/md\";\nimport { ApplicationSession } from \"../../../actions\";\nimport {\n  CandidateClaimInterface,\n  claimApplicationsInterface,\n} from \"../../../interfaces\";\nimport { ApplicationStates } from \"../../../interfaces/application\";\nimport { isClaimAllowed } from \"./ClaimForm\";\n\nconst getRejectedApplicants = (\n  applicationData: claimApplicationsInterface[]\n): claimApplicationsInterface[] => {\n  return applicationData.filter(\n    (item) => item.application_status === ApplicationStates.Rejected\n  );\n};\n\nexport const searchApplication = (\n  objList: claimApplicationsInterface[],\n  text: any\n): claimApplicationsInterface[] => {\n  if (undefined === text || text === \"\") return objList;\n  return objList.filter((product) => {\n    let flag;\n    // let dataKeys = product;\n\n    for (let prop in product) {\n      flag = false;\n      if (prop === \"position\") {\n        flag =\n          product.position.position_title\n            .toString()\n            .toLowerCase()\n            .indexOf(text.toLowerCase()) > -1;\n      }\n      if (flag) break;\n    }\n    return flag;\n  });\n  // return objList.filter((product) =>\n  //   product.position.position_title.includes(text)\n  // );\n};\n\ntype FormApplicationListProps = {\n  setChooseClaimFile: (value: boolean) => void;\n  setClaimFileId: (value: string) => void;\n  setViewThisFile: (value: string) => void;\n  claimFileId: string;\n  viewThisFile: string;\n  candidateApplications: claimApplicationsInterface[];\n  myClaims: CandidateClaimInterface[];\n  activeSession: ApplicationSession;\n};\n\nconst FormApplicationList: React.FC<FormApplicationListProps> = (props) => {\n  const [searchInput, setSearchInput] = useState<string>(\"\");\n  return (\n    <section>\n      {/* SEARCH PART */}\n      <div className=\"flex items-center w-full my-1\">\n        <MdSearch className=\"w-6 h-6 absolute ml-2\" />\n        <input\n          type=\"text\"\n          placeholder=\"Search\"\n          className=\"focus:border-2 h-7 ml-1 pl-9 mr-2 bg-gray-100 focus:border-gray-700 w-full rounded\"\n          onChange={(e) => setSearchInput(e.target.value)}\n          value={searchInput}\n          disabled={\n            getRejectedApplicants(props.candidateApplications).filter((item) =>\n              isClaimAllowed(\n                props.myClaims,\n                props.activeSession.session_plan_id,\n                item.application_id\n              )\n            ).length > 0\n              ? false\n              : true\n          }\n        />\n        <button\n          className=\"bg-red-200 text-red-700 py-1 px-2 mr-1 rounded text-sm focus:outline-none\"\n          type=\"button\"\n          onClick={() => {\n            props.setChooseClaimFile(false);\n            props.setViewThisFile(\"\");\n          }}\n        >\n          Close\n        </button>\n      </div>\n      {/* END SEARCH PART ///////////////// */}{\" \"}\n      {/* searchData(props.candidateApplications, searchInput) */}\n      <div className=\"w-full h-52 mt-2 overflow-y-auto divide-y divide-gray-300\">\n        {getRejectedApplicants(props.candidateApplications).filter((item) =>\n          isClaimAllowed(\n            props.myClaims,\n            props.activeSession.session_plan_id,\n            item.application_id\n          )\n        ).length > 0 ? (\n          searchApplication(\n            getRejectedApplicants(props.candidateApplications).filter((item) =>\n              isClaimAllowed(\n                props.myClaims,\n                props.activeSession.session_plan_id,\n                item.application_id\n              )\n            ),\n            searchInput\n          ).map((item, index) => (\n            <div\n              className={`group flex items-center justify-between my-1 hover:bg-gray-100 ${\n                props.claimFileId === item.application_id &&\n                \"bg-blue-50 border-l-4 border-blue-500\"\n              }`}\n              key={index + item.application_id}\n            >\n              <div\n                className=\"p-1 w-full mr-2 cursor-pointer\"\n                onClick={() => {\n                  props.setChooseClaimFile(false);\n                  props.setClaimFileId(item.application_id);\n                }}\n              >\n                <p className=\"text-base font-medium text-black\">\n                  {item.position.position_title}\n                </p>\n              </div>\n              <button\n                type=\"button\"\n                className=\"bg-blue-200 hover:bg-blue-300 text-blue-700 group-hover:text-blue-800 py-1 px-2 mr-1 rounded text-sm\"\n                onClick={() => {\n                  props.setViewThisFile(item.application_id);\n                }}\n              >\n                View\n              </button>\n            </div>\n          ))\n        ) : (\n          <div className=\"text-center p-3\">\n            <p className=\"text-base font-medium text-black\">\n              No Rejected document available\n            </p>\n          </div>\n        )}\n      </div>\n    </section>\n  );\n};\n\nexport default React.memo(FormApplicationList);\n","import React, { useState } from \"react\";\nimport { MdSearch } from \"react-icons/md\";\nimport { DocumentReducerInterface } from \"../../../reducers/document\";\nimport { ClaimGetDocTitle, isClaimAllowed } from \"./ClaimForm\";\nimport { DocumentClaimUser } from \"../../../actions/claiming\";\nimport { CategorySubcategoryData } from \"../../../interfaces/candidatesInterfaces\";\nimport { CandidateClaimInterface } from \"../../../interfaces\";\nimport { ApplicationSession } from \"../../../actions\";\n\nexport interface DocumentTitleInterface {\n  category_id: string;\n  company: string;\n  description: string;\n  email: string;\n  end_year: string;\n  files: string;\n  names: string;\n  phone_number: string;\n  school: {\n    school_name: string;\n    _id: string;\n    status: boolean;\n    education_category_id?: {\n      education_category_title: string;\n      _id: string;\n    };\n    district_id?: {\n      district_name: string;\n      _id: string;\n    };\n  } | null;\n  school_id: string;\n  start_year: string;\n  sub_category_id: string;\n  title: string;\n  year: string;\n  validation_status: string;\n  validated_by: {\n    user_id: string;\n    comment: string;\n    validation_status: string;\n    date: string;\n  };\n  doc_id: string;\n  doc_title: string;\n  category_subcategory_data: CategorySubcategoryData | null;\n}\n\nexport const DocumentTitleData = (\n  documentData: DocumentClaimUser[],\n  documentCategories: DocumentReducerInterface\n): DocumentTitleInterface[] | [] => {\n  let documentTemp: DocumentTitleInterface[] = [];\n  for (let i in documentData) {\n    documentTemp.push({\n      category_id: documentData[i].category_id,\n      company: documentData[i].company,\n      description: documentData[i].description,\n      email: documentData[i].email,\n      end_year: documentData[i].end_year,\n      files: documentData[i].files,\n      names: documentData[i].names,\n      phone_number: documentData[i].phone_number,\n      school: documentData[i].school,\n      school_id: documentData[i].school_id,\n      start_year: documentData[i].start_year,\n      sub_category_id: documentData[i].sub_category_id,\n      title: documentData[i].title,\n      year: documentData[i].year,\n      validation_status: documentData[i].validation_status,\n      validated_by: documentData[i].validated_by,\n      doc_id: documentData[i].doc_id,\n      doc_title: ClaimGetDocTitle(documentCategories, documentData[i]).main,\n      category_subcategory_data: documentData[i].category_subcategory_data,\n    });\n  }\n  return documentTemp;\n};\n\nconst getRejectedDocuments = (\n  documentData: DocumentClaimUser[]\n): DocumentClaimUser[] => {\n  console.log({\n    rejected: documentData.filter(\n      (item) => item.validation_status === \"rejected\"\n    ),\n  });\n  return documentData.filter((item) => item.validation_status === \"rejected\");\n};\n\nexport const searchDocuments = (\n  objList: DocumentTitleInterface[],\n  text: any\n): DocumentTitleInterface[] => {\n  if (undefined === text || text === \"\") return objList;\n  return objList.filter(\n    (product) =>\n      product.doc_title.toString().toLowerCase().indexOf(text.toLowerCase()) >\n      -1\n  );\n};\n\ntype FormDocumentListProps = {\n  setChooseClaimFile: (value: boolean) => void;\n  setClaimFileId: (value: string) => void;\n  setViewThisFile: (value: string) => void;\n  claimFileId: string;\n  viewThisFile: string;\n  candidateDocuments: DocumentClaimUser[];\n  documentCategories: DocumentReducerInterface;\n  myClaims: CandidateClaimInterface[];\n  activeSession: ApplicationSession;\n};\n\nconst FormDocumentList: React.FC<FormDocumentListProps> = (props) => {\n  const [searchInput, setSearchInput] = useState<string>(\"\");\n  return (\n    <section>\n      {/* SEARCH PART */}\n      <div className=\"flex items-center w-full my-1\">\n        <MdSearch className=\"w-6 h-6 absolute ml-2\" />\n        <input\n          type=\"text\"\n          placeholder=\"Search\"\n          className=\"focus:border-2 h-7 ml-1 pl-9 mr-2 bg-gray-100 focus:border-gray-700 w-full rounded\"\n          onChange={(e) => setSearchInput(e.target.value)}\n          value={searchInput}\n          disabled={\n            DocumentTitleData(\n              getRejectedDocuments(props.candidateDocuments),\n              props.documentCategories\n            ).filter((item) =>\n              isClaimAllowed(\n                props.myClaims,\n                props.activeSession.session_plan_id,\n                item.doc_id\n              )\n            ).length > 0\n              ? false\n              : true\n          }\n        />\n        <button\n          className=\"bg-red-200 text-red-700 py-1 px-2 mr-1 rounded text-sm focus:outline-none\"\n          type=\"button\"\n          onClick={() => {\n            props.setChooseClaimFile(false);\n            props.setViewThisFile(\"\");\n          }}\n        >\n          Close\n        </button>\n      </div>\n      {/* END SEARCH PART ///////////////// */}\n      <div className=\"w-full h-52 mt-2 overflow-y-auto divide-y divide-gray-300\">\n        {props.candidateDocuments.filter((item) =>\n          isClaimAllowed(\n            props.myClaims,\n            props.activeSession.session_plan_id,\n            item.doc_id\n          )\n        ).length > 0 ? (\n          searchDocuments(\n            DocumentTitleData(\n              getRejectedDocuments(props.candidateDocuments),\n              props.documentCategories\n            ).filter((item) =>\n              isClaimAllowed(\n                props.myClaims,\n                props.activeSession.session_plan_id,\n                item.doc_id\n              )\n            ),\n            searchInput\n          ).map((doc, index) => (\n            <section key={index + doc.doc_id}>\n              <div\n                className={`group flex items-center justify-between my-1 hover:bg-gray-100 ${\n                  props.claimFileId === doc.doc_id &&\n                  \"bg-blue-50 border-l-4 border-blue-500\"\n                }`}\n              >\n                <div\n                  className=\"p-1 w-full mr-2 cursor-pointer\"\n                  onClick={() => {\n                    props.setChooseClaimFile(false);\n                    props.setClaimFileId(doc.doc_id);\n                  }}\n                >\n                  <p className=\"text-base font-medium text-black\">\n                    {ClaimGetDocTitle(props.documentCategories, doc).main}\n                  </p>\n                </div>\n                <button\n                  type=\"button\"\n                  className=\"bg-blue-200 hover:bg-blue-300 text-blue-700 group-hover:text-blue-800 py-1 px-2 mr-1 rounded text-sm\"\n                  onClick={() => {\n                    props.viewThisFile === doc.doc_id\n                      ? props.setViewThisFile(\"\")\n                      : props.setViewThisFile(doc.doc_id);\n                  }}\n                >\n                  {props.viewThisFile === doc.doc_id ? \"Close\" : \"View\"}\n                </button>\n              </div>\n            </section>\n          ))\n        ) : (\n          <div className=\"text-center p-3\">\n            <p className=\"text-base font-medium text-black\">\n              No Rejected document available\n            </p>\n          </div>\n        )}\n      </div>\n    </section>\n  );\n};\n\nexport default React.memo(FormDocumentList);\n","import React, { Component, Fragment, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { BiArrowBack } from \"react-icons/bi\";\nimport { BsFillFileEarmarkTextFill } from \"react-icons/bs\";\nimport axios from \"axios\";\nimport { API } from \"../../utils/api\";\nimport { errorToText } from \"../../utils/errors\";\nimport { setAxiosToken } from \"../../utils/AxiosToken\";\nimport { connect } from \"react-redux\";\nimport moment from \"moment-timezone\";\nimport { TimeZone } from \"../../utils/app.config\";\nimport { Redirect } from \"react-router-dom\";\nimport {\n  Auth,\n  CandidateApplicationsStoreInterface,\n  candidateExamStoreInterface,\n  FC_Access,\n  FC_GetProfileDetails,\n  LoadCandidateApplications,\n  setSelectedCandidateExam,\n  setSelectedCourse,\n  setSelectedPosition,\n  InitializeExamDetails,\n  loadExamsDone,\n  AddUserApplication,\n  loadApplicationPeriods,\n  applicationPeriodsStoreInterface,\n  InitialExamDetails,\n} from \"../../actions\";\nimport { StoreState } from \"../../reducers\";\nimport { UserExamStatus, UserExamsListInterface } from \"../../interfaces/exam\";\nimport Loading from \"../../components/Loading/Loading\";\nimport { DATE, getMinutesFromTwoDates } from \"../../utils/functions\";\nimport { CountDown } from \"../../components/CountDown/CountDown\";\nimport { ExamTimeStatus, validateExamDate } from \"../../utils/question_bank\";\nimport { course, PositionAPI, PositionAPICourse } from \"../../interfaces\";\nimport {\n  ApplicationPeriodGet,\n  ApplicationStates,\n  GetApplicationsAPI,\n} from \"../../interfaces/application\";\nimport { UserAccessList } from \"../../utils/auth_access\";\nimport { MdClose } from \"react-icons/md\";\nimport ChooseExamCenter, {\n  LocationTableInterface,\n} from \"../Application/ExamCenter/ChooseExamCenter\";\nimport { sentExamInterface } from \"../Application/ExamCenter/ExamCenter\";\nimport Modal, { ModalSize, Themes } from \"../../components/Modal/Modal\";\nimport CandidateAnswersDetails from \"../../components/AnswersDetails/CandidateAnswersDetails\";\n\nexport const compareWithToday = (tooday: moment.Moment, date: string) => {\n  const myDate = DATE(date, \"MM/DD/YYYY\");\n  let todayConverted =\n    (tooday.get(\"month\") < 9 ? \"0\" : \"\") +\n    (tooday.get(\"month\") + 1).toString() +\n    \"/\" +\n    tooday.get(\"date\") +\n    \"/\" +\n    tooday.get(\"year\");\n  if (new Date(myDate).getTime() < new Date(todayConverted).getTime()) {\n    return true;\n  }\n  return false;\n};\n\nexport interface ExamDoneDetailsAnswers {\n  exam_id: string;\n  course: string;\n  course_name: string;\n  discription: string;\n  termes: string;\n  rules: {\n    right_click_enabled: boolean;\n    copy_enabled: boolean;\n    paste_enabled: boolean;\n    stop_candidate_when_comeback: boolean;\n    allow_to_leave_browser: boolean;\n  };\n  period: string;\n  exam_date: string;\n}\n\ninterface NotPreparedExam {\n  course: string;\n  course_name: string;\n  course_code: string;\n  position: string;\n}\ninterface changeLocProps {\n  changeLocation: () => void;\n}\ninterface CandidateExamsProps {\n  FC_GetProfileDetails: Function;\n  auth: Auth;\n  candidateExam: candidateExamStoreInterface;\n  candidateApplications: CandidateApplicationsStoreInterface;\n  LoadCandidateApplications: (\n    user_id: string,\n    callback: (loading: boolean) => void\n  ) => void;\n  setSelectedCandidateExam: (selected_exam: InitialExamDetails | null) => void; // Not used\n  setSelectedCourse: (course: course | null) => void;\n  setSelectedPosition: (position: PositionAPI) => void;\n  InitializeExamDetails: (\n    periodId: string,\n    courseId: string,\n    district_id: string,\n    center_id: string,\n    room_id: string,\n    position: PositionAPI,\n    start_exam: boolean,\n    callback: (loading: boolean) => void\n  ) => void;\n  loadExamsDone: (\n    periodId: string,\n    userId: string,\n    callback: (loading: boolean) => void\n  ) => void;\n  AddUserApplication: (application: GetApplicationsAPI) => void;\n  periods: applicationPeriodsStoreInterface;\n  loadApplicationPeriods: (callback: (loading: boolean) => void) => void;\n}\n\nconst ChangeLocationComponent = (props: changeLocProps): JSX.Element => {\n  const [display, setDisplay] = useState<boolean>(true);\n  if (display === false) {\n    return <div></div>;\n  }\n  return (\n    <div className=\"absolute right-2 left-2 md:right-1/4 md:left-1/4 lg:left-1/2 lg:right-auto bg-yellow-50 shadow-xl rounded py-1 px-1 flex flex-row justify-between items-center gap-2 text-yellow-800 -mt-5 lg:-mt-8\">\n      <div className=\"flex flex-row gap-2 items-center justify-between w-full pl-1\">\n        <span className=\"font-bold\">You are advised to change location</span>\n        <div\n          onClick={props.changeLocation}\n          className=\"px-2 py-1 rounded bg-blue-100 text-blue-600 w-max cursor-pointer\"\n        >\n          Change\n        </div>\n      </div>\n      <div\n        onClick={() => setDisplay(false)}\n        className=\"bg-yellow-100 text-yellow-600 rounded-full flex items-center justify-center p-1 h-8 w-8 cursor-pointer\"\n      >\n        <MdClose className=\"text-4xl\" />\n      </div>\n    </div>\n  );\n};\n\ninterface candidatePendingExamsList {\n  preparedExam: UserExamsListInterface[];\n  notPreparedExam: NotPreparedExam[];\n}\ninterface CandidateExamsState {\n  loading: boolean;\n  loadingExamsDone: boolean;\n  candidateExams: candidatePendingExamsList | null;\n  activeExams: string[];\n  candidateApplications: GetApplicationsAPI[] | null;\n  selectedCourse: course | null;\n  centersModal: boolean;\n  maxExamModal: boolean;\n  selectedPosition: string;\n  successMessage: string;\n  selectedExam: ExamDoneDetailsAnswers | null;\n  doing_exam: boolean;\n}\n\nexport class _CandidateExams extends Component<\n  CandidateExamsProps,\n  CandidateExamsState\n> {\n  constructor(props: CandidateExamsProps) {\n    super(props);\n\n    this.state = {\n      loading: false,\n      loadingExamsDone: false,\n      candidateExams: null,\n      activeExams: [],\n      candidateApplications: null,\n      selectedCourse: null,\n      centersModal: false,\n      maxExamModal: false,\n      selectedPosition: \"\",\n      successMessage: \"\",\n      selectedExam: null,\n      doing_exam: false,\n    };\n  }\n  setLoading = (status: boolean) => {\n    this.setState({ loading: status });\n  };\n  setloadingExamsDone = (status: boolean) => {\n    this.setState({ loadingExamsDone: status });\n  };\n  loadCandidateExams = async (user: string, period: string) => {\n    this.setLoading(true);\n    setAxiosToken();\n    try {\n      const res = await axios.get<candidatePendingExamsList>(\n        `${API.QBank}/exam/user/${user}/${period}`\n      );\n      this.setState({ candidateExams: res.data });\n      // console.log(\"My exams list: \", res.data);\n    } catch (error: any) {\n      console.log(\"My exams error: \", { ...error });\n      alert(errorToText(error));\n    }\n    this.setLoading(false);\n  };\n  loadUserProfileDetails = () => {\n    this.setLoading(true);\n    this.props.FC_GetProfileDetails(\n      this.props.auth.user.user_id,\n      (status: boolean, msg: string) => {\n        if (status === true) {\n          this.setLoading(true);\n        } else {\n          this.setLoading(true);\n        }\n      }\n    );\n  };\n\n  InitializationFn = (\n    application: GetApplicationsAPI,\n    item: UserExamsListInterface\n  ) => {\n    for (let course of application.position.courses) {\n      let testDone = this.props.candidateExam.user_exams_temp.find(\n        (itm) => itm.course === course.course_id\n      );\n      if (testDone === undefined) {\n        let center_id = application.exams.find(\n          (itm) => itm.course_id === course.course_id\n        );\n        if (center_id !== undefined) {\n          if (\n            application.application_status === ApplicationStates.Shortlisted\n          ) {\n            // Select exam\n            this.props.setSelectedPosition(application.position);\n            this.props.setSelectedCourse(\n              application.position.courses.find(\n                (itm) => itm.course_id === item.course\n              )!\n            );\n            this.setState({ doing_exam: true });\n            return (\n              this.props.periods.selected_period &&\n              this.props.InitializeExamDetails(\n                application.application_session.session_plan_id,\n                course.course_id,\n                center_id.district_id,\n                center_id.center_id,\n                center_id.room_id,\n                application.position,\n                true,\n                this.setLoading\n              )\n            );\n          } else {\n            alert(\"Corresponding application is not shortlisted!\");\n          }\n        }\n      }\n    }\n  };\n  loadUserApplications = async () => {\n    this.props.LoadCandidateApplications(\n      this.props.auth.user.user_id,\n      this.setLoading\n    );\n  };\n  findLocation = (position_id: string, course_id: string) => {\n    if (this.props.candidateApplications.candidate_applications !== null) {\n      const test = this.props.candidateApplications.candidate_applications.find(\n        (item) =>\n          item.position.position_id === position_id &&\n          item.exams.filter((itm) => itm.course_id === course_id)\n      );\n      if (test !== undefined) {\n        let course = test.exams.find((itm) => itm.course_id === course_id);\n        if (course !== undefined) {\n          return course;\n        }\n      }\n    }\n    return null;\n  };\n  updateLocation = async (\n    application_id: string,\n    exams: sentExamInterface[]\n  ) => {\n    this.setState({ loading: true });\n    for (let i in exams) {\n      try {\n        const res = await axios.post(\n          `${API.APPLICATION}/application/updatemissed`,\n          {\n            application_id: application_id,\n            exams: exams[i],\n          }\n        );\n        if (res.status === 200) {\n          this.setState({\n            selectedCourse: null,\n            centersModal: false,\n            maxExamModal: false,\n            selectedPosition: \"\",\n            successMessage: \"Location updated successfully!\",\n          });\n          this.loadUserApplications();\n        }\n      } catch (error: any) {\n        console.log(\"Update loc err: \", { ...error });\n      }\n    }\n  };\n  updateLocationFunction = (exams: sentExamInterface[]) => {\n    if (this.props.candidateApplications.candidate_applications !== null) {\n      let application =\n        this.props.candidateApplications.candidate_applications.find(\n          (item) => item.position.position_id === this.state.selectedPosition\n        );\n      if (application !== undefined) {\n        this.updateLocation(application.application_id, exams);\n      } else {\n        alert(\"Invalid application\");\n      }\n    } else {\n      alert(\"Missing application\");\n    }\n  };\n  addLocation = (\n    course_id: string,\n    course_name: string,\n    course_code: string,\n    location: LocationTableInterface,\n    exam_id: string\n  ) => {\n    return this.updateLocationFunction([\n      {\n        course_id: course_id,\n        proctoring_type: \"Center\",\n        center_id: location.center_id,\n        district_id: location.district_id,\n      },\n    ]);\n  };\n  componentDidMount = () => {\n    const selPeriod =\n      this.props.periods.selected_period === null\n        ? this.props.auth.application_session?.session_plan_id\n        : this.props.periods.selected_period.session_plan_id;\n\n    if (selPeriod !== undefined && this.state.candidateExams === null) {\n      this.loadCandidateExams(this.props.auth.user.user_id, selPeriod);\n    }\n    if (\n      this.props.auth.user.sex === \"\" ||\n      this.props.auth.user.sex.length === 0\n    ) {\n      this.loadUserProfileDetails();\n    }\n    if (this.props.periods.applicationPeriods === null) {\n      this.props.loadApplicationPeriods(this.setLoading);\n    }\n    if (this.props.candidateApplications.candidate_applications === null) {\n      this.loadUserApplications();\n    }\n  };\n\n  removeDuplicatesExams = (\n    exams: UserExamsListInterface[]\n  ): UserExamsListInterface[] => {\n    let temp: UserExamsListInterface[] = [];\n    if (this.props.candidateApplications.candidate_applications !== null) {\n      for (let item of exams) {\n        if (\n          this.props.candidateApplications.candidate_applications.find(\n            (test) => test.position.position_id === item.position\n          ) !== undefined\n        ) {\n          if (temp.find((itm) => itm._id === item._id) === undefined) {\n            temp = [...temp, item];\n          }\n        }\n      }\n    }\n    return temp;\n  };\n\n  removeDuplicatesNotPreparedExams = (\n    exams: NotPreparedExam[]\n  ): NotPreparedExam[] => {\n    let temp: NotPreparedExam[] = [];\n    if (this.props.candidateApplications.candidate_applications !== null) {\n      for (let item of exams) {\n        if (\n          this.props.candidateApplications.candidate_applications.find(\n            (test) => test.position.position_id === item.position\n          ) !== undefined\n        ) {\n          if (temp.find((itm) => itm.course === item.course) === undefined) {\n            temp = [...temp, item];\n          }\n        }\n      }\n    }\n    return temp;\n  };\n  setTimeOut = (exam_id: string) => {\n    let temps: string[] = this.state.activeExams;\n    this.setState({\n      activeExams: [...temps, exam_id],\n    });\n  };\n  selectApplication = (\n    applications: GetApplicationsAPI[] | null,\n    position_id: string,\n    course_id: string,\n    selected_period: ApplicationPeriodGet | null\n  ): GetApplicationsAPI | null => {\n    if (applications !== null && selected_period !== null) {\n      let temp = applications.find(\n        (item) =>\n          item.position.position_id === position_id &&\n          item.application_session.session_plan_id ===\n            selected_period.session_plan_id\n      );\n      if (temp !== undefined) {\n        if (\n          temp.position.courses.find((itm) => itm.course_id === course_id) !==\n          undefined\n        ) {\n          return temp;\n        }\n      }\n    }\n    return null;\n  };\n  setMaxExamModal = (status: boolean) => {\n    this.setState({ maxExamModal: status });\n  };\n\n  changeLocation = (item: PositionAPICourse) => {\n    this.setState({ selectedCourse: item, centersModal: true });\n    this.setMaxExamModal(true);\n  };\n\n  closeModal = () => {\n    this.setState({ centersModal: false });\n    this.setMaxExamModal(false);\n  };\n\n  render() {\n    const today = moment().tz(TimeZone);\n    // console.log(\"TODAY: \", today.get(\"days\"));\n    const selPeriod =\n      this.props.periods.selected_period === null\n        ? this.props.auth.application_session\n        : this.props.periods.selected_period;\n    if (!FC_Access(this.props.auth, UserAccessList.MY_APPLICATION).view) {\n      return <Redirect to=\"/\" />;\n    }\n    if (\n      this.props.candidateExam.selected_exam_id !== null &&\n      this.props.candidateExam.selected_exam_details !== null &&\n      (this.props.candidateExam.doing_exam === true ||\n        this.state.doing_exam === true)\n    ) {\n      return <Redirect to=\"/do-exam\" />;\n    }\n    return (\n      <Fragment>\n        {this.state.selectedCourse === null ? (\n          <div className=\"mt-2 -ml-2 mr-3 pb-5\">\n            <div className=\"rounded mt-2\">\n              <div className=\"flex flex-row items-center gap-3\">\n                <Link\n                  to=\"/apps-page\"\n                  title=\"Back to menus\"\n                  className=\"bg-white group hover:bg-blue-50 h-10 w-10 flex items-center justify-center rounded-full cursor-pointer\"\n                >\n                  <BiArrowBack className=\"text-3xl text-blue-600 group-hover:text-blue-800\" />\n                </Link>\n                <div className=\"flex flex-col\">\n                  <span className=\"font-extrabold text-3xl\">My exams</span>\n                  <span className=\"text-gray-600 text-sm\">\n                    List of exams that are assigned to you\n                  </span>\n                </div>\n              </div>\n            </div>\n            {this.state.successMessage !== \"\" && (\n              <div\n                title=\"Click to close the message\"\n                onClick={() => this.setState({ successMessage: \"\" })}\n                className=\"animate__animated animate__zoomIn px-3 py-2 bg-green-500 text-white my-2 rounded cursor-pointer\"\n              >\n                {this.state.successMessage}\n              </div>\n            )}\n            {console.log(\"Not found: \", this.state.candidateExams)}\n            {this.state.loading === true ||\n            this.state.loadingExamsDone === true ||\n            this.state.candidateExams === null ||\n            this.props.candidateApplications.candidate_applications == null ? (\n              <div className=\"px-4 pt-5 pb-1 bg-white mt-2 rounded\">\n                <Loading />\n              </div>\n            ) : this.removeDuplicatesExams(\n                this.state.candidateExams.preparedExam\n              ).length === 0 ? (\n              <div className=\"bg-gray-50 rounded px-4 py-5 text-center font-bold mt-2 text-2xl text-gray-400\">\n                No exams found\n              </div>\n            ) : (\n              this.removeDuplicatesExams(\n                this.state.candidateExams.preparedExam\n              ).map((item, i) => (\n                <div key={i + 1} className=\"my-2 rounded bg-white p-2 group\">\n                  <div className=\"flex flex-col md:flex-row items-center justify-between\">\n                    <div className=\"flex flex-col md:flex-row items-center gap-2 w-full\">\n                      <div>\n                        <BsFillFileEarmarkTextFill className=\"hidden md:block text-4xl text-gray-300 group-hover:text-blue-600\" />\n                      </div>\n                      <div className=\"flex flex-col w-full\">\n                        <span className=\"text-base text-gray-800 font-extrabold group-hover:text-blue-600\">\n                          {item.course_name}\n                        </span>\n                        <div className=\"flex flex-row items-center justify-start w-full gap-3 -mt-1\">\n                          <div className=\"text-sm text-gray-500 group-hover:text-blue-600\">\n                            Date: {DATE(item.exam_date, \"DD/MM/YYYY\")}\n                          </div>\n                          <div className=\"hidden md:block text-sm bg-gray-100 underline text-gray-500  font-bold rounded-full px-2\">\n                            Start time: {item.start_time}\n                          </div>\n                          <div className=\"hidden md:block text-sm bg-blue-100 text-blue-900  font-bold rounded-full px-2\">\n                            Status: {item.user_status}\n                          </div>\n                        </div>\n                        {this.findLocation(item.position, item.course) !==\n                          null && (\n                          <div className=\"flex flex-row items-center gap-2 mt-2\">\n                            <div>\n                              Exam center:{\" \"}\n                              <span className=\"text-sm bg-gray-100 text-blue-900 group-hover:text-blue-600 font-bold rounded-full px-2 w-max\">\n                                {\n                                  this.findLocation(item.position, item.course)\n                                    ?.center_name\n                                }\n                              </span>\n                            </div>\n                            <div className=\"w-max flex flex-col md:flex-row\">\n                              Room number:{\" \"}\n                              {this.findLocation(item.position, item.course)\n                                ?.room_number === 0 ? (\n                                <span className=\"text-sm bg-yellow-100 text-yellow-900 group-hover:text-yellow-800 font-bold rounded-full px-2 w-max flex items-center justify-center\">\n                                  Waiting room\n                                </span>\n                              ) : (\n                                <span className=\"text-sm bg-gray-100 text-blue-900 group-hover:text-blue-600 font-bold rounded-full px-2 w-max\">\n                                  {\n                                    this.findLocation(\n                                      item.position,\n                                      item.course\n                                    )?.room_number\n                                  }\n                                </span>\n                              )}\n                              {/* Change loc */}\n                              {this.findLocation(item.position, item.course)\n                                ?.room_number === 0 &&\n                                validateExamDate(\n                                  item.exam_date,\n                                  item.start_time,\n                                  item.end_time\n                                ) !== ExamTimeStatus.Expired && (\n                                  <ChangeLocationComponent\n                                    changeLocation={() => {\n                                      this.setState({\n                                        selectedCourse: {\n                                          course_name: item.course_name,\n                                          course_code: item.course_code,\n                                          description: item.course_name,\n                                          school_levels: [],\n                                          course_id: item.course,\n                                        },\n                                        selectedPosition: item.position,\n                                        centersModal: true,\n                                      });\n                                      this.setMaxExamModal(true);\n                                    }}\n                                  />\n                                )}\n                            </div>\n                          </div>\n                        )}\n                      </div>\n                    </div>\n                    <div className=\"lg:w-full flex flex-row items-center justify-end\">\n                      {this.state.activeExams.find(\n                        (itm) => itm === item._id\n                      ) !== undefined ||\n                      item.user_status === UserExamStatus.Editing ||\n                      item.user_status === UserExamStatus.Paused ? (\n                        validateExamDate(\n                          item.exam_date,\n                          item.start_time,\n                          item.end_time\n                        ) !== ExamTimeStatus.Expired ? (\n                          this.selectApplication(\n                            this.props.candidateApplications\n                              .candidate_applications,\n                            item.position,\n                            item.course,\n                            selPeriod\n                          )?.application_status !==\n                          ApplicationStates.Shortlisted ? (\n                            <div className=\"text-yellow-800 font-extrabold text-base bg-yellow-100 rounded px-3 py-1 cursor-not-allowed\">\n                              Not shortlisted\n                            </div>\n                          ) : (\n                            <div\n                              onClick={() => {\n                                let application = this.selectApplication(\n                                  this.props.candidateApplications\n                                    .candidate_applications,\n                                  item.position,\n                                  item.course,\n                                  selPeriod\n                                );\n                                if (application !== null) {\n                                  this.InitializationFn(application, item);\n                                } else {\n                                  alert(\"Invalid exam!\");\n                                }\n                              }}\n                              className={`${\n                                item.user_status === UserExamStatus.Editing ||\n                                item.user_status === UserExamStatus.Paused\n                                  ? \"bg-green-600 group-hover:bg-green-800\"\n                                  : \"bg-blue-600 group-hover:bg-blue-800\"\n                              } btn  text-white cursor-pointer w-max`}\n                            >\n                              {item.user_status === UserExamStatus.Editing\n                                ? \"Back to Exam\"\n                                : item.user_status === UserExamStatus.Paused\n                                ? \"Paused, back to exam\"\n                                : \"Start Exam\"}\n                            </div>\n                          )\n                        ) : item.user_status === UserExamStatus.Editing ||\n                          item.user_status === UserExamStatus.Done ||\n                          item.user_status === UserExamStatus.Paused ||\n                          item.user_status === UserExamStatus.Removed ? (\n                          <div className=\"text-blue-700 flex flex-col items-end justify-center w-max\">\n                            <span>Marks</span>\n                            <span className=\"text-2xl font-extrabold -mt-2\">\n                              {item.user_marks.toFixed(\n                                item.user_marks === 100 || item.user_marks === 0\n                                  ? 0\n                                  : 2\n                              )}\n                              %\n                            </span>\n                            <div\n                              onClick={() =>\n                                this.setState({\n                                  selectedExam: {\n                                    course: item.course,\n                                    course_name: item.course_name,\n                                    discription: item.discription,\n                                    termes: item.termes,\n                                    rules: item.rules,\n                                    period: item.period,\n                                    exam_date: item.exam_date,\n                                    exam_id: item._id,\n                                  },\n                                })\n                              }\n                              className=\"btn bg-blue-100 text-blue-700 cursor-pointer\"\n                            >\n                              Check details\n                            </div>\n                          </div>\n                        ) : (\n                          <div className=\"bg-yellow-100 text-yellow-700 font-extrabold text-base px-3 py-1 rounded-md w-max\">\n                            Expired\n                          </div>\n                        )\n                      ) : item.found === false ? (\n                        <div\n                          title=\"Please wait for the exam time\"\n                          className=\"text-lg lg:text-xl font-extrabold bg-green-100 text-green-700 px-3 py-1 rounded cursor-not-allowed w-max\"\n                        >\n                          <CountDown\n                            start_time={new Date(today.toString()).toString()}\n                            duration_min={getMinutesFromTwoDates(\n                              new Date(today.toString()),\n                              new Date(\n                                DATE(item.exam_date, \"MM/DD/YYYY\") +\n                                  \" \" +\n                                  item.start_time\n                              )\n                            )}\n                            timeout={() => this.setTimeOut(item._id)}\n                            returnString={true}\n                            labels={true}\n                            days\n                          />\n                        </div>\n                      ) : (\n                        <div className=\"text-blue-700 flex flex-col items-end justify-center w-max\">\n                          <span>Marks</span>\n                          <span className=\"text-2xl font-extrabold -mt-2\">\n                            {item.user_marks.toFixed(\n                              item.user_marks === 100 || item.user_marks === 0\n                                ? 0\n                                : 2\n                            )}\n                            %\n                          </span>\n                          <div\n                            onClick={() =>\n                              this.setState({\n                                selectedExam: {\n                                  course: item.course,\n                                  course_name: item.course_name,\n                                  discription: item.discription,\n                                  termes: item.termes,\n                                  rules: item.rules,\n                                  period: item.period,\n                                  exam_date: item.exam_date,\n                                  exam_id: item._id,\n                                },\n                              })\n                            }\n                            className=\"btn bg-blue-100 text-blue-700 cursor-pointer\"\n                          >\n                            Check details\n                          </div>\n                        </div>\n                      )}\n                    </div>\n                  </div>\n                </div>\n              ))\n            )}\n            {/* Not prepared exams */}\n            {this.state.candidateExams !== null &&\n              this.state.loading !== true &&\n              this.removeDuplicatesNotPreparedExams(\n                this.state.candidateExams.notPreparedExam\n              ).length > 0 &&\n              this.removeDuplicatesNotPreparedExams(\n                this.state.candidateExams.notPreparedExam\n              ).map((item, i) => (\n                <div\n                  key={i + 1}\n                  className=\"my-2 rounded bg-white p-2 py-3 group\"\n                >\n                  <div className=\"flex flex-col md:flex-row items-center justify-between\">\n                    <div className=\"flex flex-col md:flex-row items-center gap-2 w-full\">\n                      <div className=\"\">\n                        <BsFillFileEarmarkTextFill className=\"hidden md:block text-4xl text-gray-300 group-hover:text-blue-600\" />\n                      </div>\n                      <div className=\"flex flex-col\">\n                        <span className=\"text-base text-gray-600 font-bold group-hover:text-blue-600\">\n                          {item.course_name}\n                        </span>\n                        <div className=\"flex flex-row items-center gap-3 -mt-1\">\n                          {this.findLocation(item.position, item.course) !==\n                            null && (\n                            <div className=\"flex flex-row items-center gap-2 mt-2\">\n                              <div className=\"flex flex-col md:flex-row md:items-center\">\n                                Exam center:{\" \"}\n                                <span className=\"text-sm bg-gray-100 text-blue-900 group-hover:text-blue-600 font-bold rounded-full px-2 w-max\">\n                                  {\n                                    this.findLocation(\n                                      item.position,\n                                      item.course\n                                    )?.center_name\n                                  }\n                                </span>\n                              </div>\n                              <div className=\"w-max flex flex-col md:flex-row md:items-center\">\n                                Room number:{\" \"}\n                                {this.findLocation(item.position, item.course)\n                                  ?.room_number === 0 ? (\n                                  <span className=\"text-sm bg-yellow-100 text-yellow-900 group-hover:text-yellow-800 font-bold rounded-full px-2 w-max flex items-center justify-center\">\n                                    Waiting room\n                                  </span>\n                                ) : (\n                                  <span className=\"text-sm bg-gray-100 text-blue-900 group-hover:text-blue-600 font-bold rounded-full px-2 w-max\">\n                                    {\n                                      this.findLocation(\n                                        item.position,\n                                        item.course\n                                      )?.room_number\n                                    }\n                                  </span>\n                                )}\n                                {/* Change loc */}\n                                {this.findLocation(item.position, item.course)\n                                  ?.room_number === 0 && (\n                                  <ChangeLocationComponent\n                                    changeLocation={() => {\n                                      this.setState({\n                                        selectedCourse: {\n                                          course_name: item.course_name,\n                                          course_code: item.course_code,\n                                          description: item.course_name,\n                                          school_levels: [],\n                                          course_id: item.course,\n                                        },\n                                        selectedPosition: item.position,\n                                        centersModal: true,\n                                      });\n                                      this.setMaxExamModal(true);\n                                    }}\n                                  />\n                                )}\n                              </div>\n                            </div>\n                          )}\n                        </div>\n                      </div>\n                    </div>\n                    <div className=\"bg-gray-100 text-gray-600 font-extrabold text-base px-3 py-1 rounded-md\">\n                      Not prepared\n                    </div>\n                  </div>\n                </div>\n              ))}\n          </div>\n        ) : this.state.loading === true ? (\n          <div className=\"px-4 pt-5 pb-1 bg-white mt-2 rounded\">\n            <Loading />\n          </div>\n        ) : (\n          <div className=\"animate__animated animate__fadeInUp animate__faster mt-2 mr-1 -ml-3 rounded-t-md bg-white shadow-md pb-5\">\n            <div className=\"flex flex-row gap-4 items-center justify-between bg-blue-100 py-2 px-2 mb-2\">\n              <div className=\"flex flex-col w-full\">\n                <div className=\"flex flex-row gap-2 items-center justify-between w-full pl-2\">\n                  <span className=\"font-bold text-xl text-gray-800\">\n                    Change exam location\n                  </span>\n                  <div className=\"bg-white hover:text-yellow-700 hover:bg-white rounded-full p-1 h-10 w-10 border-2 border-white hover:border-yellow-600 flex items-center justify-center\">\n                    <MdClose\n                      className=\"cursor-pointer font-extrabold text-3xl\"\n                      onClick={() => {\n                        this.setState({\n                          centersModal: false,\n                          selectedCourse: null,\n                        });\n                      }}\n                    />\n                  </div>\n                </div>\n              </div>\n            </div>\n            <ChooseExamCenter\n              positionCourses={this.state.selectedCourse}\n              addLocation={this.addLocation}\n              closeModal={this.closeModal}\n            />\n          </div>\n        )}\n        {this.state.selectedExam !== null && (\n          <Modal\n            title={\n              <div className=\"text-2xl font-extrabold text-blue-600 px-2\">\n                Exam result details\n              </div>\n            }\n            backDrop={true}\n            theme={Themes.default}\n            close={() => this.setState({ selectedExam: null })}\n            backDropClose={true}\n            widthSizeClass={ModalSize.extraLarge}\n            displayClose={true}\n            padding={{ title: true }}\n          >\n            <CandidateAnswersDetails\n              exam_id={this.state.selectedExam}\n              showAnswers={false}\n            />\n          </Modal>\n        )}\n      </Fragment>\n    );\n  }\n}\n\nconst mapStateToProps = ({\n  auth,\n  candidateExam,\n  candidateApplications,\n  periods,\n}: StoreState): {\n  auth: Auth;\n  candidateExam: candidateExamStoreInterface;\n  candidateApplications: CandidateApplicationsStoreInterface;\n  periods: applicationPeriodsStoreInterface;\n} => {\n  return {\n    auth: auth,\n    candidateExam: candidateExam,\n    candidateApplications: candidateApplications,\n    periods: periods,\n  };\n};\n\nexport const CandidateExams = connect(mapStateToProps, {\n  FC_GetProfileDetails,\n  LoadCandidateApplications,\n  setSelectedCandidateExam,\n  setSelectedCourse,\n  setSelectedPosition,\n  InitializeExamDetails,\n  loadExamsDone,\n  AddUserApplication,\n  loadApplicationPeriods,\n})(_CandidateExams);\n","import axios from \"axios\";\nimport React, { Component } from \"react\";\nimport { VscLoading } from \"react-icons/vsc\";\nimport { connect } from \"react-redux\";\nimport { PushPopupAlert } from \"../../../actions\";\nimport { updateSessionPlan } from \"../../../actions/session\";\nimport { PopupAlertData } from \"../../../components/Alert/Popup\";\nimport {\n  allPlanTypes,\n  PlansInterface,\n  PlansTypeInterface,\n  PlansTypeKeys,\n  SessionPlanInterface,\n  SessionPlanTypeStatus,\n} from \"../../../interfaces\";\nimport { PopupAlertTheme } from \"../../../interfaces/popupAlert\";\nimport { capitalizeFirstLetter } from \"../../../shared/dataTest\";\nimport { API } from \"../../../utils/api\";\nimport { DATE, errorToText } from \"../../../utils/functions\";\n\nexport const isActivationAllowed = (thisPlans: PlansInterface): boolean => {\n  let today: Date = new Date(),\n    end_date = new Date(thisPlans.end_date);\n  if (end_date.getTime() >= today.getTime()) {\n    return true;\n  }\n  return false;\n};\n\nexport const getPlanTypeByKey = (\n  type_key: PlansTypeKeys\n): PlansTypeInterface | undefined => {\n  return allPlanTypes.find((item) => item.type_key === type_key);\n};\n\nexport const isPlanActive = (\n  viewThisSession: SessionPlanInterface,\n  thisPlan: PlansInterface\n): \"OPEN\" | \"CLOSED\" | \"WAITING\" => {\n  if (viewThisSession.is_active) {\n    let today = new Date(),\n      planEndDate = new Date(thisPlan.end_date),\n      planStartDate = new Date(thisPlan.start_date);\n    if (\n      planEndDate.getTime() >= today.getTime() &&\n      planStartDate.getTime() <= today.getTime() &&\n      thisPlan.type_status !== SessionPlanTypeStatus.CLOSED\n    ) {\n      return \"OPEN\";\n    } else if (\n      planStartDate.getTime() > today.getTime() &&\n      thisPlan.type_status !== SessionPlanTypeStatus.CLOSED\n    ) {\n      return \"WAITING\";\n    }\n  }\n  return \"CLOSED\";\n};\n\ntype SessionDetailsProps = {\n  viewThisSession: SessionPlanInterface;\n  setViewThisSession: (data: SessionPlanInterface) => void;\n\n  // REDUX ----------------\n  updateSessionPlan: Function;\n  PushPopupAlert: (alert: PopupAlertData) => void;\n};\n\ntype SessionDetailsState = {\n  loadingRequest: string;\n};\n\nexport class SessionDetails extends Component<\n  SessionDetailsProps,\n  SessionDetailsState\n> {\n  constructor(props: SessionDetailsProps) {\n    super(props);\n\n    this.state = {\n      loadingRequest: \"\",\n    };\n  }\n\n  handlePlanActivation = async (\n    session: SessionPlanInterface,\n    thisPlan: PlansInterface\n  ) => {\n    const newState: \"open\" | \"close\" = session.is_active ? \"close\" : \"open\";\n\n    if (!window.confirm(`Are you sure you want to ${newState} this plan?`)) {\n      return true;\n    }\n\n    if (!isActivationAllowed(thisPlan)) {\n      this.props.PushPopupAlert({\n        title: `Opening/Closing plan which has been expired is not allowed!`,\n        theme: PopupAlertTheme.warning,\n      });\n    }\n\n    let newData: SessionPlanInterface = {\n      session_plan_name: session.session_plan_name,\n      period: session.period,\n      is_active: session.is_active,\n      plans: [],\n      createdAt: session.createdAt,\n      updatedAt: session.updatedAt,\n      session_plan_id: session.session_plan_id,\n    };\n    for (const key in session.plans) {\n      if (Object.prototype.hasOwnProperty.call(session.plans, key)) {\n        const element = session.plans[key];\n        if (thisPlan.type_key === element.type_key) {\n          if (thisPlan.type_status === SessionPlanTypeStatus.OPEN) {\n            newData.plans.push({\n              type_id: thisPlan.type_id,\n              type_title: thisPlan.type_title,\n              type_key: thisPlan.type_key,\n              type_status: SessionPlanTypeStatus.CLOSED,\n              start_date: thisPlan.start_date,\n              end_date: thisPlan.end_date,\n              allowed_claim_level: thisPlan.allowed_claim_level,\n              _id: thisPlan._id,\n              history: thisPlan.history,\n            });\n          } else {\n            newData.plans.push({\n              type_id: thisPlan.type_id,\n              type_title: thisPlan.type_title,\n              type_key: thisPlan.type_key,\n              type_status: SessionPlanTypeStatus.OPEN,\n              start_date: thisPlan.start_date,\n              end_date: thisPlan.end_date,\n              allowed_claim_level: thisPlan.allowed_claim_level,\n              _id: thisPlan._id,\n              history: thisPlan.history,\n            });\n          }\n        } else {\n          newData.plans.push(element);\n        }\n      }\n    }\n\n    console.log(\"====================================\");\n    console.log({ newData });\n    console.log(\"====================================\");\n\n    this.setState({ loadingRequest: thisPlan.type_key });\n    try {\n      const res = await axios.put<SessionPlanInterface>(\n        `${API.CLAIMING}/session/${session.session_plan_id}`,\n        newData\n      );\n      this.props.updateSessionPlan(res.data);\n      this.props.setViewThisSession(res.data);\n      this.props.PushPopupAlert({\n        title: `Session ${newState}d successfully`,\n        theme: PopupAlertTheme.info,\n      });\n      this.setState({ loadingRequest: \"\" });\n      console.log(\"updateSessionPlan: \", res);\n    } catch (error) {\n      console.error({ error: errorToText(error) });\n      this.props.PushPopupAlert({\n        title: errorToText(error),\n        theme: PopupAlertTheme.warning,\n      });\n    }\n  };\n\n  render() {\n    return (\n      <table className=\"w-full bg-white shadow p-5\" id=\"session_content\">\n        <thead className=\"bg-white border-b-2 border-gray-300 text-gray-600 font-bold text-sm\">\n          <tr>\n            <td className=\"p-2\">#</td>\n            <td className=\"p-2\">Plan Type</td>\n            <td className=\"p-2\">Start Date</td>\n            <td className=\"p-2\">End date</td>\n            {this.props.viewThisSession.is_active && (\n              <td className=\"p-2\" colSpan={2}>\n                Status\n              </td>\n            )}\n          </tr>\n        </thead>\n        <tbody>\n          {/* WHILE DATA FOUND ====================== */}\n          {this.props.viewThisSession.plans.map((item, index) => (\n            <tr\n              key={index + item._id}\n              className={`border-b border-gray-200 hover:bg-gray-100`}\n            >\n              <td className=\"p-2 text-left whitespace-nowrap\">{index + 1}</td>\n              <td className=\"p-2 text-left\">\n                <span className=\"text-lg\">\n                  {getPlanTypeByKey(item.type_key) &&\n                    capitalizeFirstLetter(\n                      getPlanTypeByKey(item.type_key)!.type_title\n                    )}\n                </span>\n              </td>\n              <td className=\"p-2 text-left\">{DATE(item.start_date)}</td>\n              <td className=\"p-2 text-left\">{DATE(item.end_date)}</td>\n              {this.props.viewThisSession.is_active && (\n                <td>\n                  {isPlanActive(this.props.viewThisSession, item) === \"OPEN\" ? (\n                    <span className={`px-2 py-1 font-semibold text-green-700`}>\n                      Open\n                    </span>\n                  ) : isPlanActive(this.props.viewThisSession, item) ===\n                    \"WAITING\" ? (\n                    <span className={`px-2 py-1 font-semibold text-gray-700`}>\n                      Waiting\n                    </span>\n                  ) : (\n                    <span className={`px-2 py-1 font-semibold text-red-700`}>\n                      Closed\n                    </span>\n                  )}\n                </td>\n              )}\n              {this.props.viewThisSession.is_active && (\n                <td>\n                  {isActivationAllowed(item) && (\n                    <div className=\"flex items-center justify-center gap-1\">\n                      <div\n                        className={`relative ${\n                          this.state.loadingRequest.length > 0\n                            ? \"cursor-not-allowed\"\n                            : \"cursor-pointer\"\n                        }`}\n                        title={\n                          item.type_status === SessionPlanTypeStatus.OPEN\n                            ? \"Deactivating session\"\n                            : \"Activating session\"\n                        }\n                        onClick={() =>\n                          this.state.loadingRequest.length <= 0 &&\n                          this.handlePlanActivation(\n                            this.props.viewThisSession,\n                            item\n                          )\n                        }\n                      >\n                        <span className=\"block w-14 h-8 bg-gray-100 rounded-full shadow-inner\"></span>\n                        <span\n                          className={`absolute block w-6 h-6 mt-1 ml-1 rounded-full shadow inset-y-0 left-0 focus-within:shadow-outline transition-transform duration-500 ease-in-out ${\n                            item.type_status === SessionPlanTypeStatus.CLOSED\n                              ? \"bg-red-500\"\n                              : \"bg-green-500 transform translate-x-full\"\n                          }`}\n                        ></span>\n                      </div>\n                      {this.state.loadingRequest === item.type_key && (\n                        <VscLoading className=\"animate__animated animate__rotateIn animate__infinite\" />\n                      )}\n                    </div>\n                  )}\n                </td>\n              )}\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    );\n  }\n}\n\nexport default React.memo(connect(null, {\n  updateSessionPlan,\n  PushPopupAlert,\n})(SessionDetails));\n"],"sourceRoot":""}
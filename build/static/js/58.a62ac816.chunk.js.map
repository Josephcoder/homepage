{"version":3,"sources":["containers/Locations/RoomForm.tsx","containers/Locations/CenterForm.tsx","containers/Locations/ViewCenters.tsx","containers/Locations/index.tsx","actions/location.ts","components/ActionConfirm/ActionConfirm.tsx"],"names":["RoomForm","props","className","error","element","onChange","e","setError","selectProvince","target","value","thisProvince","_id","disabled","loadingRequest","locations","map","item","index","province_name","msg","selectDistrict","thisDistrict","filter","loc","length","districts","district","district_name","selectCenter","thisCenter","centers","center","center_name","type","placeholder","roomNumber","setRoomNumber","parseInt","roomCapacity","setRoomCapacity","onClick","setActionTypes","setThisRoom","handleSubmitRoom","CenterForm","setCenterName","centerName","handleSubmit","connect","FC_CreateCenter","FC_UpdateCenter","FC_DeleteCenter","FC_CreateRoom","FC_UpdateRoom","FC_DeleteRoom","PushPopupAlert","useState","deleteCenter","setDeleteCenter","deleteRoom","setDeleteRoom","loadingDeletion","setLoadingDeletion","searchCenter","setSearchCenter","a","setLoadingRequest","actionTypes","axios","post","API","APPLICATION","district_id","rooms","res","data","province_id","thisProvinceId","title","theme","PopupAlertTheme","success","room","patch","examination_center_id","isUsed","console","log","doc_category_error","errorToText","danger","handleDelete","centerId","isEmptyOrSpaces","warning","delete","center_id","newArr","setThisDistrict","province_error","room_type","room_number","capacity","occupied","thisRoom","examination_center_room_id","room_id","handleDeleteRoom","roomId","setThisCenter","province","find","items","setThisProvince","d","getDistinctCenter","undefined","result","province_code","toString","key","Object","prototype","hasOwnProperty","call","elementDistrict","push","district_code","provKey","elementProv","distKey","selectLocation","_thisDistrict","searchData","id","Modal","backDrop","Themes","default","close","displayClose","backDropClose","widthSizeClass","ModalSize","medium","padding","body","footer","ActionConfirm","modalType","ActionConfirmEnum","DELETE","confirmFun","setModalAction","status","description","Centers","roomLocation","getAllRoom","loading","setLoading","useEffect","NoResult","NoResultThemes","Dark","callback","dispatch","get","ActionTypes","GET_ALL_ROOM","payload","FC_CreateProvince","CREATE_PROVINCE","FC_UpdateProvince","UPDATE_PROVINCE","FC_DeleteProvince","DELETE_PROVINCE","FC_CreateDistrict","CREATE_DISTRICT","FC_UpdateDistrict","UPDATE_DISTRICT","FC_DeleteDistrict","DELETE_DISTRICT","FC_CreateSector","CREATE_SECTOR","FC_UpdateSector","UPDATE_SECTOR","FC_DeleteSector","DELETE_SECTOR","CREATE_CENTER","UPDATE_CENTER","DELETE_CENTER","CREATE_ROOM","UPDATE_ROOM","delete_room","DELETE_ROOM","INFO"],"mappings":"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","file":"static/js/58.a62ac816.chunk.js","sourcesContent":["import React, { Fragment } from \"react\";\nimport {\n  CentersInterface,\n  DistrictInterface,\n  RoomLocationInterface,\n  RoomsInterface,\n} from \"../../shared/interfaces\";\n\ninterface RoomFormProps {\n  thisCenter: CentersInterface | null;\n  thisDistrict: DistrictInterface | null;\n  thisProvince: RoomLocationInterface | null;\n  locations: RoomLocationInterface[];\n  roomNumber: number;\n  roomCapacity: number;\n  thisRoom: RoomsInterface | null;\n  error: {\n    element: string;\n    msg: string;\n  } | null;\n  loadingRequest: boolean;\n  setError: (\n    value: React.SetStateAction<{\n      element: string;\n      msg: string;\n    } | null>\n  ) => void;\n  setRoomNumber: React.Dispatch<React.SetStateAction<number>>;\n  setRoomCapacity: React.Dispatch<React.SetStateAction<number>>;\n  setThisRoom: React.Dispatch<React.SetStateAction<RoomsInterface | null>>;\n  setActionTypes: React.Dispatch<\n    React.SetStateAction<\n      | \"\"\n      | \"CREATE_PROVINCE\"\n      | \"UPDATE_PROVINCE\"\n      | \"CREATE_DISTRICT\"\n      | \"UPDATE_DISTRICT\"\n      | \"CREATE_CENTER\"\n      | \"UPDATE_CENTER\"\n      | \"CREATE_ROOM\"\n      | \"UPDATE_ROOM\"\n    >\n  >;\n  handleSubmitRoom: () => Promise<void>;\n  selectProvince: (province_id: string) => void;\n  selectDistrict: (province_id: string, district_id: string) => void;\n  selectCenter: (\n    province_id: string,\n    district_id: string,\n    center_id: string\n  ) => void;\n}\n\nconst RoomForm = (props: RoomFormProps) => {\n  return (\n    <Fragment>\n      <div className=\"py-4 text-base leading-6 space-y-4 text-gray-700 sm:text-lg sm:leading-7\">\n        {/* PROVINCE SELECT ========================================== */}\n        <div className=\"flex flex-col\">\n          <label>Province</label>\n          <select\n            className={`bg-white py-1 px-2 border-2 w-full focus:outline-none focus:bg-gray-100 text-gray-600 focus:text-gray-800 rounded h-10 md:w-full ${\n              props.error && props.error.element === \"province_id\"\n                ? \"border-red-700\"\n                : \"border-gray-400 focus:border-gray-500\"\n            }`}\n            onChange={(e) => {\n              props.error &&\n                props.error.element === \"province_id\" &&\n                props.setError(null);\n              props.selectProvince(e.target.value);\n            }}\n            value={props.thisProvince ? props.thisProvince._id : \"\"}\n            disabled={props.loadingRequest}\n          >\n            <option value=\"\" disabled>\n              Select province\n            </option>\n            {props.locations.map((item, index) => (\n              <option value={item._id} key={item._id + index}>\n                {item.province_name}\n              </option>\n            ))}\n          </select>\n          {props.error && props.error.element === \"province_id\" && (\n            <span className=\"text-red-700\">{props.error.msg}</span>\n          )}\n        </div>\n        {/* END PROVINCE SELECT ========================================== */}\n\n        {/* DISTRICT SELECT ========================================== */}\n        <div className=\"flex flex-col\">\n          <label>District</label>\n          <select\n            className={`bg-white py-1 px-2 border-2 w-full focus:outline-none focus:bg-gray-100 text-gray-600 focus:text-gray-800 rounded h-10 md:w-full ${\n              props.error && props.error.element === \"district_id\"\n                ? \"border-red-700\"\n                : \"border-gray-400 focus:border-gray-500\"\n            } ${!props.thisProvince && \"cursor-not-allowed\"}`}\n            onChange={(e) => {\n              props.error &&\n                props.error.element === \"district_id\" &&\n                props.setError(null);\n              props.selectDistrict(\n                props.thisProvince ? props.thisProvince._id : \"\",\n                e.target.value\n              );\n            }}\n            value={props.thisDistrict ? props.thisDistrict._id : \"\"}\n            disabled={props.loadingRequest || props.thisProvince === null}\n          >\n            <option value=\"\" disabled>\n              Select district\n            </option>\n            {props.thisProvince !== null &&\n            props.locations.filter((loc) => loc._id === props.thisProvince!._id)\n              .length > 0 ? (\n              props.locations\n                .filter((loc) => loc._id === props.thisProvince!._id)[0]\n                .districts.map((district, index) => (\n                  <option value={district._id} key={index + district._id}>\n                    {district.district_name}\n                  </option>\n                ))\n            ) : (\n              <option value=\"\" disabled>\n                No district found\n              </option>\n            )}\n          </select>\n          {props.error && props.error.element === \"district_id\" && (\n            <span className=\"text-red-700\">{props.error.msg}</span>\n          )}\n        </div>\n        {/* END DISTRICT SELECT ========================================== */}\n\n        {/* CENTER SELECT ========================================== */}\n        <div className=\"flex flex-col\">\n          <label>Center</label>\n          <select\n            className={`bg-white py-1 px-2 border-2 w-full focus:outline-none focus:bg-gray-100 text-gray-600 focus:text-gray-800 rounded h-10 md:w-full ${\n              props.error && props.error.element === \"center_id\"\n                ? \"border-red-700\"\n                : \"border-gray-400 focus:border-gray-500\"\n            } ${!props.thisDistrict && \"cursor-not-allowed\"}`}\n            onChange={(e) => {\n              props.error &&\n                props.error.element === \"center_id\" &&\n                props.setError(null);\n              props.selectCenter(\n                props.thisProvince ? props.thisProvince._id : \"\",\n                props.thisDistrict ? props.thisDistrict._id : \"\",\n                e.target.value\n              );\n            }}\n            value={props.thisCenter ? props.thisCenter._id : \"\"}\n            disabled={\n              props.loadingRequest ||\n              props.thisProvince === null ||\n              props.thisDistrict === null\n            }\n          >\n            <option value=\"\" disabled>\n              Select center\n            </option>\n            {props.thisDistrict !== null &&\n            props.thisDistrict.centers &&\n            props.thisDistrict.centers.length > 0 ? (\n              props.thisDistrict.centers.map((center, index) => (\n                <option value={center._id} key={index + center._id}>\n                  {center.center_name}\n                </option>\n              ))\n            ) : (\n              <option value=\"\" disabled>\n                No center found\n              </option>\n            )}\n          </select>\n          {props.error && props.error.element === \"center_id\" && (\n            <span className=\"text-red-700\">{props.error.msg}</span>\n          )}\n        </div>\n        {/* END CENTER SELECT ========================================== */}\n\n        <div className=\"flex flex-col\">\n          <label>Room</label>\n          <input\n            type=\"number\"\n            className={`text-left input-white w-full inline-block border-2 ${\n              props.error && props.error.element === \"room_number\"\n                ? \"border-red-700\"\n                : \"border-gray-400 focus:border-gray-500\"\n            }`}\n            placeholder=\"Room number\"\n            value={props.roomNumber}\n            onChange={(e) => props.setRoomNumber(parseInt(e.target.value))}\n            disabled={props.loadingRequest}\n          />\n          {props.error && props.error.element === \"room_number\" && (\n            <span className=\"text-red-700\">{props.error.msg}</span>\n          )}\n        </div>\n        <div className=\"flex flex-col\">\n          <label>Seats Capacity</label>\n          <input\n            type=\"number\"\n            className={`text-left input-white w-full inline-block border-2 ${\n              props.error && props.error.element === \"room_capacity\"\n                ? \"border-red-700\"\n                : \"border-gray-400 focus:border-gray-500\"\n            }`}\n            placeholder=\"Room capacity\"\n            value={props.roomCapacity}\n            onChange={(e) => props.setRoomCapacity(parseInt(e.target.value))}\n            disabled={props.loadingRequest}\n          />\n          {props.error && props.error.element === \"room_capacity\" && (\n            <span className=\"text-red-700\">{props.error.msg}</span>\n          )}\n        </div>\n      </div>\n      <div className=\"pt-4 flex justify-between\">\n        <button\n          onClick={() => {\n            props.setActionTypes(\"\");\n            props.setThisRoom(null);\n            props.setRoomCapacity(0);\n            props.setRoomNumber(0);\n          }}\n          className={`btn bg-gray-400 text-white hover:bg-gray-600`}\n          type=\"button\"\n          disabled={props.loadingRequest}\n        >\n          Exit\n        </button>\n        <button\n          className=\"btn bg-primary text-white hover:bg-blue-600\"\n          type=\"button\"\n          onClick={() => props.handleSubmitRoom()}\n          disabled={props.loadingRequest}\n        >\n          {props.loadingRequest ? \"Loading...\" : \"Save\"}\n        </button>\n      </div>\n    </Fragment>\n  );\n};\n\nexport default RoomForm;\n","import React, { Fragment } from \"react\";\nimport { MdCancel, MdSave } from \"react-icons/md\";\nimport {\n  DistrictInterface,\n  RoomLocationInterface,\n} from \"../../shared/interfaces\";\n\ninterface CenterFormProps {\n  thisDistrict: DistrictInterface | null;\n  thisProvince: RoomLocationInterface | null;\n  locations: RoomLocationInterface[];\n  loadingRequest: boolean;\n  centerName: string;\n  error: {\n    element: string;\n    msg: string;\n  } | null;\n  setCenterName: (value: React.SetStateAction<string>) => void;\n  setError: (\n    value: React.SetStateAction<{\n      element: string;\n      msg: string;\n    } | null>\n  ) => void;\n  setActionTypes: React.Dispatch<\n    React.SetStateAction<\n      | \"\"\n      | \"CREATE_PROVINCE\"\n      | \"UPDATE_PROVINCE\"\n      | \"CREATE_DISTRICT\"\n      | \"UPDATE_DISTRICT\"\n      | \"CREATE_CENTER\"\n      | \"UPDATE_CENTER\"\n      | \"CREATE_ROOM\"\n      | \"UPDATE_ROOM\"\n    >\n  >;\n  handleSubmit: () => Promise<void>;\n  selectProvince: (province_id: string) => void;\n  selectDistrict: (province_id: string, district_id: string) => void;\n}\n\nconst CenterForm: React.FC<CenterFormProps> = (props) => {\n  return (\n    <Fragment>\n      <div className=\"py-4 text-base leading-6 space-y-4 text-gray-700 sm:text-lg sm:leading-7\">\n        {/* PROVINCE SELECT ========================================== */}\n        <div className=\"flex flex-col\">\n          <label>Province</label>\n          <select\n            className={`bg-white py-1 px-2 border-2 w-full focus:outline-none focus:bg-gray-100 text-gray-600 focus:text-gray-800 rounded h-10 md:w-full ${\n              props.error && props.error.element === \"province_id\"\n                ? \"border-red-700\"\n                : \"border-gray-400 focus:border-gray-500\"\n            }`}\n            onChange={(e) => {\n              props.error &&\n                props.error.element === \"province_id\" &&\n                props.setError(null);\n              props.selectProvince(e.target.value);\n            }}\n            value={props.thisProvince ? props.thisProvince._id : \"\"}\n            disabled={props.loadingRequest}\n          >\n            <option value=\"\" disabled>\n              Select province\n            </option>\n            {props.locations.map((item, index) => (\n              <option value={item._id} key={item._id + index}>\n                {item.province_name}\n              </option>\n            ))}\n          </select>\n          {props.error && (\n            <span className=\"text-red-700\">{props.error.msg}</span>\n          )}\n        </div>\n        {/* END PROVINCE SELECT ========================================== */}\n\n        {/* DISTRICT SELECT ========================================== */}\n        <div className=\"flex flex-col\">\n          <label>District</label>\n          <select\n            className={`bg-white py-1 px-2 border-2 w-full focus:outline-none focus:bg-gray-100 text-gray-600 focus:text-gray-800 rounded h-10 md:w-full ${\n              props.error && props.error.element === \"district_id\"\n                ? \"border-red-700\"\n                : \"border-gray-400 focus:border-gray-500\"\n            } ${!props.thisProvince && \"cursor-not-allowed\"}`}\n            onChange={(e) => {\n              props.error &&\n                props.error.element === \"district_id\" &&\n                props.setError(null);\n              props.selectDistrict(\n                props.thisProvince ? props.thisProvince._id : \"\",\n                e.target.value\n              );\n            }}\n            value={props.thisDistrict ? props.thisDistrict._id : \"\"}\n            disabled={props.loadingRequest || props.thisProvince === null}\n          >\n            <option value=\"\" disabled>\n              Select district\n            </option>\n            {props.thisProvince !== null &&\n            props.locations.filter((loc) => loc._id === props.thisProvince!._id)\n              .length > 0 ? (\n              props.locations\n                .filter((loc) => loc._id === props.thisProvince!._id)[0]\n                .districts.map((district, index) => (\n                  <option value={district._id} key={index + district._id}>\n                    {district.district_name}\n                  </option>\n                ))\n            ) : (\n              <option value=\"\" disabled>\n                No district found\n              </option>\n            )}\n          </select>\n          {props.error && (\n            <span className=\"text-red-700\">{props.error.msg}</span>\n          )}\n        </div>\n        {/* END DISTRICT SELECT ========================================== */}\n\n        <div className=\"flex flex-col\">\n          <label>Center name</label>\n          <input\n            type=\"text\"\n            className={`bg-white py-1 px-2 border-2 ${\n              props.error && props.error.element === \"center_name\"\n                ? \"border-red-700\"\n                : \"border-gray-400 focus:border-gray-500\"\n            } rounded focus:outline-none focus:bg-gray-100`}\n            onChange={(e) => {\n              props.error &&\n                props.error.element === \"center_name\" &&\n                props.setError(null);\n              props.setCenterName(e.target.value);\n            }}\n            value={props.centerName}\n            disabled={props.loadingRequest}\n          />\n          {props.error && (\n            <span className=\"text-red-700\">{props.error.msg}</span>\n          )}\n        </div>\n      </div>\n      <div className=\"pt-4 flex justify-between\">\n        <button\n          type=\"button\"\n          className=\"btn bg-gray-500 focus:outline-none hover:bg-gray-700 text-white flex items-center gap-1\"\n          onClick={() => {\n            props.setActionTypes(\"\");\n            props.setCenterName(\"\");\n          }}\n          disabled={props.loadingRequest}\n        >\n          <MdCancel\n            className={`inline-block mr-1 text-xl font-bold ${\n              props.loadingRequest ? \"animate-pulse\" : \"\"\n            }`}\n          />\n          Cancel\n        </button>\n        <button\n          type=\"button\"\n          className=\"btn btn-blue focus:outline-none flex items-center gap-1\"\n          onClick={() => props.handleSubmit()}\n          disabled={props.loadingRequest}\n        >\n          <MdSave className=\"inline-blocktext-xl font-bold\" />\n          <span>{props.loadingRequest ? \"loading...\" : \"Save\"}</span>\n        </button>\n      </div>\n    </Fragment>\n  );\n};\n\nexport default CenterForm;\n","import React, { useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport {\n  MdAdd,\n  MdClear,\n  MdCreate,\n  MdDelete,\n  MdExpandLess,\n  MdExpandMore,\n} from \"react-icons/md\";\nimport {\n  FC_CreateCenter,\n  FC_CreateRoom,\n  FC_DeleteCenter,\n  FC_DeleteRoom,\n  FC_UpdateCenter,\n  FC_UpdateRoom,\n} from \"../../actions/location\";\nimport axios from \"axios\";\nimport { API } from \"../../utils/api\";\nimport {\n  CentersInterface,\n  DistrictInterface,\n  RoomLocationInterface,\n  RoomsInterface,\n} from \"../../shared/interfaces\";\nimport { PushPopupAlert } from \"../../actions/system\";\nimport { PopupAlertData } from \"../../components/Alert/Popup\";\nimport { PopupAlertTheme } from \"../../interfaces/popupAlert\";\nimport { errorToText } from \"../../utils/errors\";\nimport Modal, { ModalSize, Themes } from \"../../components/Modal/Modal\";\nimport { AiOutlineFileSearch } from \"react-icons/ai\";\nimport RoomForm from \"./RoomForm\";\nimport CenterForm from \"./CenterForm\";\nimport searchData from \"../../utils/search\";\nimport { isEmptyOrSpaces } from \"../../shared/dataTest\";\nimport ActionConfirm, {\n  ActionConfirmEnum,\n} from \"../../components/ActionConfirm/ActionConfirm\";\n\ninterface AppProps {\n  thisProvinceId: string;\n  thisDistrict: DistrictInterface | null;\n  thisCenter: CentersInterface | null;\n  thisRoom: RoomsInterface | null;\n  thisProvince: RoomLocationInterface | null;\n  locations: RoomLocationInterface[];\n  loadingRequest: boolean;\n  actionTypes:\n    | \"\"\n    | \"CREATE_PROVINCE\"\n    | \"UPDATE_PROVINCE\"\n    | \"CREATE_DISTRICT\"\n    | \"UPDATE_DISTRICT\"\n    | \"CREATE_CENTER\"\n    | \"UPDATE_CENTER\"\n    | \"CREATE_ROOM\"\n    | \"UPDATE_ROOM\";\n  setLoadingRequest: React.Dispatch<React.SetStateAction<boolean>>;\n  setThisCenter: React.Dispatch<React.SetStateAction<CentersInterface | null>>;\n  setThisRoom: React.Dispatch<React.SetStateAction<RoomsInterface | null>>;\n  setThisDistrict: React.Dispatch<\n    React.SetStateAction<DistrictInterface | null>\n  >;\n  setThisProvince: React.Dispatch<\n    React.SetStateAction<RoomLocationInterface | null>\n  >;\n  setActionTypes: React.Dispatch<\n    React.SetStateAction<\n      | \"\"\n      | \"CREATE_PROVINCE\"\n      | \"UPDATE_PROVINCE\"\n      | \"CREATE_DISTRICT\"\n      | \"UPDATE_DISTRICT\"\n      | \"CREATE_CENTER\"\n      | \"UPDATE_CENTER\"\n      | \"CREATE_ROOM\"\n      | \"UPDATE_ROOM\"\n    >\n  >;\n  FC_CreateCenter: Function;\n  FC_UpdateCenter: Function;\n  FC_DeleteCenter: Function;\n  FC_CreateRoom: Function;\n  FC_UpdateRoom: Function;\n  FC_DeleteRoom: Function;\n  PushPopupAlert: (alert: PopupAlertData) => void;\n}\n\nconst ViewCenters: React.FC<AppProps> = (props) => {\n  const [centerName, setCenterName] = useState<string>(\"\");\n  const [deleteCenter, setDeleteCenter] = useState<string>(\"\");\n  const [deleteRoom, setDeleteRoom] = useState<string>(\"\");\n  const [roomNumber, setRoomNumber] = useState<number>(0);\n  const [roomCapacity, setRoomCapacity] = useState<number>(0);\n  const [error, setError] = useState<{ element: string; msg: string } | null>(\n    null\n  );\n  const [loadingDeletion, setLoadingDeletion] = useState<string>(\"\");\n  const [searchCenter, setSearchCenter] = useState<string>(\"\");\n\n  const handleSubmit = async () => {\n    if (!props.thisProvince) {\n      return setError({\n        element: \"province_id\",\n        msg: \"Province is required\",\n      });\n    }\n    if (!props.thisDistrict) {\n      return setError({\n        element: \"district_id\",\n        msg: \"District is required\",\n      });\n    }\n    if (!centerName.length) {\n      return setError({\n        element: \"center_name\",\n        msg: \"Center name is required\",\n      });\n    }\n    props.setLoadingRequest(true);\n    try {\n      let res;\n      if (props.actionTypes === \"CREATE_CENTER\") {\n        res = await axios.post<{ data: CentersInterface }>(\n          `${API.APPLICATION}/center`,\n          {\n            district_id: props.thisDistrict._id,\n            center_name: centerName,\n            rooms: [],\n          }\n        );\n        if (res.data) {\n          props.FC_CreateCenter({\n            province_id: props.thisProvinceId,\n            district_id: props.thisDistrict._id,\n            data: res.data.data,\n          });\n          props.PushPopupAlert({\n            title: \"New Center created successfully\",\n            theme: PopupAlertTheme.success,\n          });\n          props.setLoadingRequest(false);\n          props.setActionTypes(\"\");\n          setCenterName(\"\");\n        }\n      } else if (props.thisCenter && props.actionTypes === \"UPDATE_CENTER\") {\n        const rooms: string[] = props.thisCenter.rooms.map((room) => room._id);\n        res = await axios.patch<{ update: CentersInterface }>(\n          `${API.APPLICATION}/center`,\n          {\n            examination_center_id: props.thisCenter._id,\n            center_name: centerName,\n            rooms,\n            isUsed: true,\n          }\n        );\n        if (res.data) {\n          props.FC_UpdateCenter({\n            province_id: props.thisProvinceId,\n            district_id: props.thisDistrict._id,\n            examination_center_id: props.thisCenter._id,\n            center_name: centerName,\n          });\n          props.PushPopupAlert({\n            title: \"Center updated successfully\",\n            theme: PopupAlertTheme.success,\n          });\n          props.setLoadingRequest(false);\n          props.setActionTypes(\"\");\n          setCenterName(\"\");\n        }\n      }\n    } catch (error) {\n      console.log({ doc_category_error: error });\n      props.PushPopupAlert({\n        title: errorToText(error),\n        theme: PopupAlertTheme.danger,\n      });\n      props.setLoadingRequest(false);\n    }\n  };\n\n  const handleDelete = async (centerId: string) => {\n    if (isEmptyOrSpaces(props.thisProvinceId)) {\n      return PushPopupAlert({\n        title: \"Province is required!\",\n        theme: PopupAlertTheme.warning,\n      });\n    }\n    if (!props.thisDistrict) {\n      return PushPopupAlert({\n        title: \"District is required!\",\n        theme: PopupAlertTheme.warning,\n      });\n    }\n    setLoadingDeletion(centerId);\n    try {\n      const res = await axios.delete<CentersInterface>(\n        `${API.APPLICATION}/center/${centerId}`\n      );\n\n      if (res.data) {\n        props.FC_DeleteCenter({\n          province_id: props.thisProvinceId,\n          district_id: props.thisDistrict._id,\n          center_id: centerId,\n        });\n        let newArr: DistrictInterface = { ...props.thisDistrict }; // copying the old datas array\n        let center: CentersInterface[] = [];\n\n        center = props.thisDistrict.centers.filter(\n          (element) => element._id !== centerId\n        );\n        newArr.centers = center;\n        props.setThisDistrict(newArr);\n\n        props.PushPopupAlert({\n          title: \"Center deleted successfully\",\n          theme: PopupAlertTheme.success,\n        });\n        props.setLoadingRequest(false);\n        props.setActionTypes(\"\");\n      }\n    } catch (error) {\n      console.log({ province_error: error });\n      props.PushPopupAlert({\n        title: errorToText(error),\n        theme: PopupAlertTheme.danger,\n      });\n      props.setLoadingRequest(false);\n    }\n    setLoadingDeletion(\"\");\n  };\n\n  const handleSubmitRoom = async () => {\n    if (!props.thisProvince) {\n      return setError({\n        element: \"province_id\",\n        msg: \"Province is required\",\n      });\n    }\n\n    if (!props.thisDistrict) {\n      return setError({\n        element: \"district_id\",\n        msg: \"District is required\",\n      });\n    }\n\n    if (!props.thisCenter) {\n      return setError({\n        element: \"center_id\",\n        msg: \"Center is required\",\n      });\n    }\n\n    if (roomNumber <= 0) {\n      return setError({\n        element: \"room_number\",\n        msg: \"Room number is required\",\n      });\n    }\n\n    if (roomCapacity <= 0) {\n      return setError({\n        element: \"room_capacity\",\n        msg: \"Enter valid room capacity\",\n      });\n    }\n    props.setLoadingRequest(true);\n    try {\n      let res;\n      if (props.actionTypes === \"CREATE_ROOM\") {\n        res = await axios.post<{\n          data: RoomsInterface;\n        }>(`${API.APPLICATION}/centerroom`, {\n          center_id: props.thisCenter._id,\n          room_type: \"Physical room\",\n          room_number: roomNumber,\n          capacity: roomCapacity,\n          occupied: 0,\n        });\n        if (res.data) {\n          props.FC_CreateRoom({\n            province_id: props.thisProvinceId,\n            district_id: props.thisDistrict._id,\n            center_id: props.thisCenter._id,\n            data: res.data.data,\n          });\n          props.PushPopupAlert({\n            title: \"New Room created successfully\",\n            theme: PopupAlertTheme.success,\n          });\n          props.setLoadingRequest(false);\n          props.setActionTypes(\"\");\n          setRoomNumber(0);\n          setRoomCapacity(0);\n        }\n      } else if (props.thisRoom && props.actionTypes === \"UPDATE_ROOM\") {\n        res = await axios.patch<{ data: RoomsInterface }>(\n          `${API.APPLICATION}/centerroom`,\n          {\n            examination_center_room_id: props.thisRoom._id,\n            center_id: props.thisCenter._id,\n            room_type: props.thisRoom.room_type,\n            room_number: roomNumber,\n            capacity: roomCapacity,\n            occupied: props.thisRoom.occupied,\n            isUsed: true,\n          }\n        );\n        if (res.data) {\n          props.FC_UpdateRoom({\n            province_id: props.thisProvinceId,\n            district_id: props.thisDistrict._id,\n            center_id: props.thisCenter._id,\n            room_id: props.thisRoom._id,\n            room_number: roomNumber,\n            capacity: roomCapacity,\n          });\n          props.PushPopupAlert({\n            title: \"Room updated successfully\",\n            theme: PopupAlertTheme.success,\n          });\n          props.setLoadingRequest(false);\n          props.setActionTypes(\"\");\n          setRoomNumber(0);\n          setRoomCapacity(0);\n          props.setThisRoom(null);\n        }\n      }\n    } catch (error) {\n      console.log({ doc_category_error: error });\n      props.PushPopupAlert({\n        title: errorToText(error),\n        theme: PopupAlertTheme.danger,\n      });\n      props.setLoadingRequest(false);\n    }\n  };\n\n  const handleDeleteRoom = async (roomId: string) => {\n    if (isEmptyOrSpaces(props.thisProvinceId)) {\n      return PushPopupAlert({\n        title: \"Province is required!\",\n        theme: PopupAlertTheme.warning,\n      });\n    }\n    if (!props.thisDistrict) {\n      return PushPopupAlert({\n        title: \"District is required!\",\n        theme: PopupAlertTheme.warning,\n      });\n    }\n    if (props.thisCenter === null) {\n      return PushPopupAlert({\n        title: \"Center is required!\",\n        theme: PopupAlertTheme.warning,\n      });\n    }\n    setLoadingDeletion(roomId);\n    try {\n      const res = await axios.delete<CentersInterface>(\n        `${API.APPLICATION}/centerroom/${roomId}`\n      );\n      if (res.data) {\n        console.log({ res });\n        let newArr: CentersInterface = { ...props.thisCenter }; // copying the old datas array\n        let room: RoomsInterface[] = [];\n\n        room = props.thisCenter.rooms.filter(\n          (element) => element._id !== roomId\n        );\n        newArr.rooms = room;\n        props.FC_DeleteRoom({\n          province_id: props.thisProvinceId,\n          district_id: props.thisDistrict._id,\n          center_id: props.thisCenter._id,\n          room_id: roomId,\n        });\n        props.setThisCenter(newArr);\n        props.PushPopupAlert({\n          title: \"Room deleted successfully\",\n          theme: PopupAlertTheme.success,\n        });\n        props.setLoadingRequest(false);\n        props.setActionTypes(\"\");\n      }\n    } catch (error) {\n      console.log({ province_error: error });\n      props.PushPopupAlert({\n        title: errorToText(error),\n        theme: PopupAlertTheme.danger,\n      });\n      props.setLoadingRequest(false);\n    }\n    setLoadingDeletion(\"\");\n  };\n\n  const selectProvince = (province_id: string | \"ALL\") => {\n    if (province_id !== \"ALL\") {\n      let province = props.locations.find((items) => items._id === province_id);\n      if (province) {\n        props.setThisProvince(province);\n        if (province.districts.length > 0) {\n          props.setThisDistrict(null);\n        }\n      }\n    } else {\n      props.setThisProvince(null);\n      props.setThisDistrict(null);\n    }\n  };\n\n  const selectDistrict = (province_id: string, district_id: string) => {\n    if (province_id !== \"ALL\" || !isEmptyOrSpaces(province_id)) {\n      const province = props.locations.find(\n        (items) => items._id === province_id\n      );\n      if (province) {\n        const district = province.districts.find((d) => d._id === district_id);\n        props.setThisDistrict(district ? district : null);\n      }\n      props.setThisCenter(null);\n    }\n  };\n\n  const selectCenter = (\n    province_id: string,\n    district_id: string,\n    center_id: string\n  ) => {\n    if (\n      province_id !== \"ALL\" ||\n      !isEmptyOrSpaces(province_id) ||\n      district_id !== \"ALL\" ||\n      !isEmptyOrSpaces(district_id)\n    ) {\n      const province = props.locations.find(\n        (items) => items._id === province_id\n      );\n      if (province) {\n        const district = province.districts.find((d) => d._id === district_id);\n        props.setThisDistrict(district ? district : null);\n      }\n      props.setThisCenter(null);\n    }\n    props.setThisCenter(\n      props.locations\n        .filter((items) => items._id === province_id)[0]\n        .districts.filter((d) => d._id === district_id)[0]\n        .centers.filter((item) => item._id === center_id)[0]\n    );\n  };\n\n  const isRoomExist = (thisCenter: CentersInterface): boolean => {\n    if (thisCenter.rooms.length > 0) {\n      return true;\n    }\n    return false;\n  };\n\n  const cleanModal = () => {\n    if (\n      props.actionTypes === \"CREATE_ROOM\" ||\n      props.actionTypes === \"UPDATE_ROOM\"\n    ) {\n      props.setThisRoom(null);\n      setRoomCapacity(0);\n      setRoomNumber(0);\n    }\n    if (\n      (props.actionTypes === \"CREATE_CENTER\" ||\n        props.actionTypes === \"UPDATE_CENTER\") &&\n      props.thisProvince\n    ) {\n      setCenterName(\"\");\n    }\n    props.setActionTypes(\"\");\n    setError(null);\n  };\n\n  const getDistinctCenter = (\n    province: RoomLocationInterface | null,\n    district: DistrictInterface | null\n  ): CentersInterface[] => {\n    let thisProvince: RoomLocationInterface | undefined = undefined;\n    let thisDistrict: DistrictInterface | undefined = undefined;\n    let result: CentersInterface[] = [];\n    if (province && !district) {\n      thisProvince = props.locations.find(\n        (item) =>\n          item.province_code.toString() === province.province_code.toString()\n      );\n      if (thisProvince) {\n        for (const key in thisProvince.districts) {\n          if (\n            Object.prototype.hasOwnProperty.call(thisProvince.districts, key)\n          ) {\n            const elementDistrict = thisProvince.districts[key];\n            for (const key in elementDistrict.centers) {\n              if (\n                Object.prototype.hasOwnProperty.call(\n                  elementDistrict.centers,\n                  key\n                )\n              ) {\n                result.push(elementDistrict.centers[key]);\n              }\n            }\n          }\n        }\n      }\n    }\n\n    if (province && district) {\n      thisProvince = props.locations.find(\n        (item) =>\n          item.province_code.toString() === province.province_code.toString()\n      );\n      if (thisProvince) {\n        thisDistrict = thisProvince.districts.find(\n          (item) =>\n            item.district_code.toString() === district.district_code.toString()\n        );\n        if (thisDistrict) {\n          for (const key in thisDistrict.centers) {\n            if (\n              Object.prototype.hasOwnProperty.call(thisDistrict.centers, key)\n            ) {\n              result.push(thisDistrict.centers[key]);\n            }\n          }\n        }\n      }\n    }\n\n    if (!province && !district) {\n      for (const provKey in props.locations) {\n        if (Object.prototype.hasOwnProperty.call(props.locations, provKey)) {\n          const elementProv = props.locations[provKey];\n          for (const distKey in elementProv.districts) {\n            if (\n              Object.prototype.hasOwnProperty.call(\n                elementProv.districts,\n                distKey\n              )\n            ) {\n              const elementDistrict = elementProv.districts[distKey];\n              for (const key in elementDistrict.centers) {\n                if (\n                  Object.prototype.hasOwnProperty.call(\n                    elementDistrict.centers,\n                    key\n                  )\n                ) {\n                  result.push(elementDistrict.centers[key]);\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n    return result;\n  };\n\n  const selectLocation = (district: string) => {\n    let thisProvince: RoomLocationInterface | undefined = undefined;\n    let thisDistrict: DistrictInterface | undefined = undefined;\n    let result: CentersInterface[] = [];\n\n    for (const provKey in props.locations) {\n      if (Object.prototype.hasOwnProperty.call(props.locations, provKey)) {\n        thisDistrict = props.locations[provKey].districts.find(\n          (item) => item._id === district\n        );\n        if (thisDistrict) {\n          const _thisDistrict = thisDistrict;\n          thisProvince = props.locations.find(\n            (item) =>\n              item.province_code.toString() ===\n              _thisDistrict.province_code.toString()\n          );\n\n          if (thisProvince) {\n            props.setThisProvince(thisProvince);\n            props.setThisDistrict(thisDistrict);\n          }\n        }\n      }\n    }\n    return result;\n  };\n\n  return (\n    <div\n      className={`bg-white w-full p-2 border border-gray-300 rounded shadow`}\n    >\n      <div className=\"border-b px-2 py-3 flex justify-between\">\n        <h2 className=\"text-3xl font-semibold text-gray-800\">\n          List of Centers\n        </h2>\n        <div className=\"flex items-center gap-2\">\n          <button\n            type=\"button\"\n            className={`btn mb-1 border-2 border-blue-400 bg-blue-400 hover:bg-blue-500 hover:border-blue-500\n        text-white rounded-md flex items-center font-bold focus:outline-none ${\n          props.loadingRequest && \"cursor-wait\"\n        } ${props.actionTypes !== \"\" && \"cursor-not-allowed\"}`}\n            onClick={() => props.setActionTypes(\"CREATE_CENTER\")}\n            disabled={props.actionTypes !== \"\" || props.loadingRequest}\n          >\n            <MdAdd className=\"inline-block mr-1 text-xl font-bold\" /> New Center\n          </button>\n          <button\n            type=\"button\"\n            className={`btn hover:bg-blue-500 mb-1 border-2 border-blue-500 bg-white\n        hover:text-white rounded-md flex items-center font-bold text-gray-700 focus:outline-none gap-1 ${\n          props.loadingRequest && \"cursor-wait\"\n        } ${props.actionTypes !== \"\" && \"cursor-not-allowed\"}`}\n            onClick={() => props.setActionTypes(\"CREATE_ROOM\")}\n            disabled={props.actionTypes !== \"\" || props.loadingRequest}\n          >\n            <MdAdd className=\"inline-block mr-1 text-xl font-bold\" />\n            New Room\n          </button>\n        </div>\n      </div>\n\n      {/* FILTER FORM ======================================== */}\n      <div className=\"flex flex-col sm:flex-row items-center gap-2 w-full my-2\">\n        <div className=\"w-full sm:w-1/5\">\n          <select\n            className=\"input-white h-10 text-sm border-2 border-gray-400 focus:border-gray-500 w-full\"\n            placeholder={`Filter by province`}\n            onChange={(e: React.ChangeEvent<HTMLSelectElement>) =>\n              selectProvince(e.target.value)\n            }\n            value={props.thisProvince ? props.thisProvince._id : \"\"}\n          >\n            <option value=\"ALL\">All province</option>\n            {props.locations.map((province, index) => (\n              <option value={province._id} key={index + province._id}>\n                {province.province_name}\n              </option>\n            ))}\n          </select>\n        </div>\n        <div className=\"w-full sm:w-1/5\">\n          <select\n            className=\"input-white h-10 text-sm border-2 border-gray-400 focus:border-gray-500 w-full\"\n            placeholder={`Filter by district`}\n            onChange={(e: React.ChangeEvent<HTMLSelectElement>) =>\n              selectDistrict(props.thisProvince!._id, e.target.value)\n            }\n            value={props.thisDistrict ? props.thisDistrict._id : \"ALL\"}\n          >\n            <option value=\"ALL\">All district</option>\n            {props.thisProvince !== null ? (\n              props.locations.filter(\n                (loc) => loc._id === props.thisProvince!._id\n              ).length > 0 ? (\n                props.locations\n                  .filter((loc) => loc._id === props.thisProvince!._id)[0]\n                  .districts.map((district, index) => (\n                    <option value={district._id} key={index + district._id}>\n                      {district.district_name}\n                    </option>\n                  ))\n              ) : (\n                <option value=\"\" disabled>\n                  No district found\n                </option>\n              )\n            ) : (\n              <option value=\"\" disabled>\n                Select province first!\n              </option>\n            )}\n          </select>\n        </div>\n        <div className=\"w-full sm:w-3/5\">\n          <input\n            onChange={(e: React.ChangeEvent<HTMLInputElement>) =>\n              setSearchCenter(e.target.value)\n            }\n            type=\"text\"\n            className=\"input-white h-10 text-sm border-2 border-gray-400 focus:border-gray-500\"\n            placeholder={`Search centers by title`}\n            value={searchCenter}\n            disabled={\n              getDistinctCenter(props.thisProvince, props.thisDistrict).length >\n              0\n                ? false\n                : true\n            }\n          />\n        </div>\n      </div>\n      {/* END FILTER FORM ======================================== */}\n\n      {getDistinctCenter(props.thisProvince, props.thisDistrict).length > 0 ? (\n        <div className=\"bg-white\">\n          {searchData(\n            getDistinctCenter(props.thisProvince, props.thisDistrict),\n            searchCenter\n          ).map((center: CentersInterface, index) => (\n            <div\n              key={index + center._id}\n              className=\"p-2 my-3 rounded border hover:bg-gray-50\"\n            >\n              <div\n                className=\"flex justify-between items-center group cursor-pointer\"\n                onClick={() =>\n                  !props.thisCenter || props.thisCenter._id !== center._id\n                    ? props.setThisCenter(center)\n                    : props.setThisCenter(null)\n                }\n              >\n                <div className=\"ml-2\">\n                  <div className=\"text-2xl font-semibold text-gray-600\">\n                    {center.center_name}\n                  </div>\n                  <div className=\"text-base top-1 text-gray-600\">\n                    {center.rooms.length > 0\n                      ? center.rooms.length + \" Room(s)\"\n                      : null}\n                  </div>\n                </div>\n                <div className=\"flex items-center gap-2\">\n                  {props.thisCenter && props.thisCenter._id === center._id && (\n                    <button\n                      className={`text-white bg-blue-400 group-hover:bg-blue-600 focus:outline-none p-2 rounded-full group-hover:shadow-md group-hover:text-white  ${\n                        props.loadingRequest && \"cursor-wait\"\n                      } ${props.actionTypes !== \"\" && \"cursor-not-allowed\"}`}\n                      onClick={() => {\n                        props.setThisCenter(center);\n                        setCenterName(center.center_name);\n                        selectLocation(center.district_id);\n                        props.setActionTypes(\"UPDATE_CENTER\");\n                      }}\n                      disabled={\n                        props.loadingRequest || props.actionTypes !== \"\"\n                      }\n                      title=\"Edit center\"\n                    >\n                      <MdCreate className=\"w-6 h-6\" />\n                    </button>\n                  )}\n                  {props.thisCenter &&\n                    props.thisCenter._id === center._id &&\n                    !isRoomExist(props.thisCenter) && (\n                      <button\n                        title=\"Delete center\"\n                        className={`bg-red-400 group-hover:bg-red-600 text-white focus:outline-none p-2 rounded-full group-hover:shadow-md group-hover:text-white ${\n                          props.loadingRequest && \"cursor-wait\"\n                        } ${props.actionTypes !== \"\" && \"cursor-not-allowed\"}`}\n                        onClick={() => setDeleteCenter(center._id)}\n                        disabled={\n                          props.loadingRequest ||\n                          loadingDeletion.length > 0 ||\n                          props.actionTypes !== \"\"\n                        }\n                      >\n                        <MdClear className=\"w-6 h-6\" />\n                      </button>\n                    )}\n\n                  <button\n                    title={\n                      props.thisCenter && props.thisCenter._id === center._id\n                        ? \"Close Center\"\n                        : \"View Rooms\"\n                    }\n                    className={`${\n                      props.thisCenter && props.thisCenter._id === center._id\n                        ? \"group-hover:bg-gray-600\"\n                        : \"group-hover:bg-gray-500\"\n                    } p-2 rounded-full bg-gray-300 group-hover:shadow-md flex justify-center items-center focus:outline-none text-gray-800 group-hover:text-white`}\n                    onClick={() =>\n                      !props.thisCenter || props.thisCenter._id !== center._id\n                        ? props.setThisCenter(center)\n                        : props.setThisCenter(null)\n                    }\n                  >\n                    {props.thisCenter && props.thisCenter._id === center._id ? (\n                      <MdExpandLess className=\"w-6 h-6\" />\n                    ) : (\n                      <MdExpandMore className=\"w-6 h-6\" />\n                    )}\n                  </button>\n                </div>\n              </div>\n\n              {props.thisCenter && props.thisCenter._id === center._id && (\n                <div\n                  className={`bg-white h-full w-full mt-2 p-2 pb-5 border border-gray-300 rounded shadow animate__animated animate__fadeIn`}\n                >\n                  <div className=\"border-b px-2 py-3 flex justify-between\">\n                    <h2 className=\"text-3xl font-semibold text-gray-800\">\n                      List of Rooms\n                    </h2>\n\n                    <button\n                      type=\"button\"\n                      className={`btn hover:bg-blue-500 mb-1 border-2 border-blue-500 bg-white hover:text-white rounded-md flex items-center font-bold text-gray-700 focus:outline-none gap-1 ${\n                        props.loadingRequest && \"cursor-wait\"\n                      } ${props.actionTypes !== \"\" && \"cursor-not-allowed\"}`}\n                      onClick={() => {\n                        props.setActionTypes(\"CREATE_ROOM\");\n                        selectLocation(center.district_id);\n                      }}\n                      disabled={\n                        props.actionTypes !== \"\" || props.loadingRequest\n                      }\n                    >\n                      <MdAdd className=\"inline-block mr-1 text-xl font-bold\" />\n                      New Room\n                    </button>\n                  </div>\n\n                  {center.rooms.length > 0 ? (\n                    <table\n                      className={`w-full shadow sm:rounded-lg table-auto order-table max-w-full`}\n                    >\n                      <thead className=\"bg-white border-b-2 border-gray-300 text-gray-600 font-bold text-sm\">\n                        <tr\n                          className={`text-left tracking-wide bg-gray-100 border-b-2 border-gray-500 text-gray-600 overflow-hidden`}\n                        >\n                          <th className={`p-3 text-left`}>Room</th>\n                          <th className={`p-3 text-left`}>Type</th>\n                          <th className={`p-3 text-left`}>Capacity</th>\n                          {/* <th className={`p-3 text-left`}>Occupied</th> */}\n                          <th className={`p-3 text-left`}></th>\n                        </tr>\n                      </thead>\n                      <tbody\n                        id={`table-data_${center._id}`}\n                        className=\"bg-white text-black text-base\"\n                      >\n                        {center.rooms.map(\n                          (room: RoomsInterface, index: number) => (\n                            <tr key={index + room._id}>\n                              {/* <td className=\"p-3 text-left whitespace-nowrap\">{index + 1}</td> */}\n                              <td className=\"p-3 text-left\">\n                                {room.room_number}\n                              </td>\n                              <td className=\"p-3 text-left\">\n                                {room.room_type}\n                              </td>\n                              <td className=\"p-3 text-left\">{room.capacity}</td>\n                              {/* <td className=\"p-3 text-left\">{room.occupied}</td> */}\n                              <td>\n                                <div className=\"flex items-center justify-center gap-2\">\n                                  <button\n                                    title=\"Update this field\"\n                                    className=\"bg-gray-50 hover:bg-blue-100 rounded-full px-1 py-1 focus:outline-none\"\n                                    onClick={() => {\n                                      props.setThisRoom(room);\n                                      setRoomCapacity(room.capacity);\n                                      setRoomNumber(room.room_number);\n                                      selectLocation(center.district_id);\n                                      props.setActionTypes(\"UPDATE_ROOM\");\n                                    }}\n                                    disabled={\n                                      props.loadingRequest ||\n                                      props.actionTypes !== \"\"\n                                    }\n                                  >\n                                    <MdCreate className=\"text-blue-700 w-7 h-7\" />\n                                  </button>\n                                  <button\n                                    title=\"Delete this field\"\n                                    className=\"bg-gray-50 hover:bg-blue-100 rounded-full px-1 py-1 focus:outline-none\"\n                                    onClick={() => setDeleteRoom(room._id)}\n                                    disabled={\n                                      props.loadingRequest ||\n                                      props.actionTypes !== \"\"\n                                    }\n                                  >\n                                    {loadingDeletion === room._id ? (\n                                      \"Loading...\"\n                                    ) : (\n                                      <div className=\"flex justify-center items-center gap-1\">\n                                        <MdDelete className=\"text-red-700 w-7 h-7\" />\n                                      </div>\n                                    )}\n                                  </button>\n                                </div>\n                              </td>\n                            </tr>\n                          )\n                        )}\n                      </tbody>\n                    </table>\n                  ) : (\n                    <div className=\"text-center py-8\">\n                      <AiOutlineFileSearch className=\"w-24 h-24 mx-auto text-gray-600\" />\n                      <span className=\"text-gray-600 text-2xl\">\n                        No Data Found\n                      </span>\n                    </div>\n                  )}\n                </div>\n              )}\n            </div>\n          ))}\n        </div>\n      ) : (\n        <div className=\"text-center py-8\">\n          <AiOutlineFileSearch className=\"w-24 h-24 mx-auto text-gray-600\" />\n          <span className=\"text-gray-600 text-2xl\">No Data Found</span>\n        </div>\n      )}\n\n      {/* modal for creating new categories or sub category */}\n      {props.actionTypes !== \"\" && (\n        <Modal\n          backDrop={true}\n          theme={Themes.default}\n          close={(): void => cleanModal()}\n          displayClose={true}\n          backDropClose={false}\n          title={\n            <div className=\"flex items-center space-x-5\">\n              <div className=\"block pl-2 font-semibold text-xl self-start text-gray-700\">\n                <h2 className=\"uppercase text-back\">\n                  {props.actionTypes === \"CREATE_ROOM\"\n                    ? \"CREATING NEW ROOM\"\n                    : props.actionTypes === \"UPDATE_ROOM\" &&\n                      \"UPDATING EXISTING ROOM\"}\n                  {props.actionTypes === \"CREATE_CENTER\"\n                    ? \"CREATING NEW CENTER\"\n                    : props.actionTypes === \"UPDATE_CENTER\" &&\n                      \"UPDATING EXISTING CENTER\"}\n                </h2>\n              </div>\n            </div>\n          }\n          widthSizeClass={ModalSize.medium}\n          padding={{ title: true, body: false, footer: false }}\n        >\n          <div className=\"mx-5 mb-8\">\n            <div className=\"divide-y divide-gray-200\">\n              {(props.actionTypes === \"CREATE_ROOM\" ||\n                props.actionTypes === \"UPDATE_ROOM\") && (\n                <RoomForm\n                  roomNumber={roomNumber}\n                  roomCapacity={roomCapacity}\n                  thisRoom={props.thisRoom}\n                  setError={setError}\n                  loadingRequest={props.loadingRequest}\n                  setRoomNumber={setRoomNumber}\n                  setRoomCapacity={setRoomCapacity}\n                  setThisRoom={props.setThisRoom}\n                  setActionTypes={props.setActionTypes}\n                  handleSubmitRoom={handleSubmitRoom}\n                  thisDistrict={props.thisDistrict}\n                  thisProvince={props.thisProvince}\n                  locations={props.locations}\n                  error={error}\n                  selectProvince={selectProvince}\n                  selectDistrict={selectDistrict}\n                  selectCenter={selectCenter}\n                  thisCenter={props.thisCenter}\n                />\n              )}\n              {(props.actionTypes === \"CREATE_CENTER\" ||\n                props.actionTypes === \"UPDATE_CENTER\") && (\n                <CenterForm\n                  centerName={centerName}\n                  error={error}\n                  loadingRequest={props.loadingRequest}\n                  setCenterName={setCenterName}\n                  setError={setError}\n                  setActionTypes={props.setActionTypes}\n                  handleSubmit={handleSubmit}\n                  thisDistrict={props.thisDistrict}\n                  thisProvince={props.thisProvince}\n                  locations={props.locations}\n                  selectProvince={selectProvince}\n                  selectDistrict={selectDistrict}\n                />\n              )}\n            </div>\n          </div>\n        </Modal>\n      )}\n      {/* end modal for creating new categories or sub category */}\n\n      {/* ----------------------------------------------------------- */}\n      {!isEmptyOrSpaces(deleteCenter) && (\n        <ActionConfirm\n          modalType={ActionConfirmEnum.DELETE}\n          confirmFun={() => handleDelete(deleteCenter)}\n          setModalAction={(status: boolean) => !status && setDeleteCenter(\"\")}\n          description={\n            \"Do you really want to delete this center? This process can affect application shortlisting\"\n          }\n        />\n      )}\n      {!isEmptyOrSpaces(deleteRoom) && (\n        <ActionConfirm\n          modalType={ActionConfirmEnum.DELETE}\n          confirmFun={() => handleDeleteRoom(deleteRoom)}\n          setModalAction={(status: boolean) => !status && setDeleteRoom(\"\")}\n          description={\n            \"Do you really want to delete this room? This process can affect application shortlisting\"\n          }\n        />\n      )}\n    </div>\n  );\n};\n\nexport default connect(null, {\n  FC_CreateCenter,\n  FC_UpdateCenter,\n  FC_DeleteCenter,\n  FC_CreateRoom,\n  FC_UpdateRoom,\n  FC_DeleteRoom,\n  PushPopupAlert,\n})(ViewCenters);\n","import React, { Fragment, useEffect, useState } from \"react\";\nimport { AiOutlineFilter } from \"react-icons/ai\";\nimport { BsCaretRightFill } from \"react-icons/bs\";\nimport { connect } from \"react-redux\";\nimport { getAllRoom } from \"../../actions/location\";\nimport NoResult, { NoResultThemes } from \"../../components/NoResult/NoResult\";\nimport { StoreState } from \"../../reducers\";\nimport {\n  CentersInterface,\n  DistrictInterface,\n  RoomLocationInterface,\n  RoomsInterface,\n} from \"../../shared/interfaces\";\nimport ViewCenters from \"./ViewCenters\";\n\ninterface AppProps {\n  locations: RoomLocationInterface[];\n  getAllRoom: Function;\n}\nconst Index: React.FC<AppProps> = (props) => {\n  const [actionTypes, setActionTypes] = useState<\n    | \"CREATE_PROVINCE\"\n    | \"UPDATE_PROVINCE\"\n    | \"CREATE_DISTRICT\"\n    | \"UPDATE_DISTRICT\"\n    | \"CREATE_CENTER\"\n    | \"UPDATE_CENTER\"\n    | \"CREATE_ROOM\"\n    | \"UPDATE_ROOM\"\n    | \"\"\n  >(\"\");\n  const [thisProvince, setThisProvince] =\n    useState<RoomLocationInterface | null>(null);\n  const [thisDistrict, setThisDistrict] = useState<DistrictInterface | null>(\n    null\n  );\n  const [thisCenter, setThisCenter] = useState<CentersInterface | null>(null);\n  const [thisRoom, setThisRoom] = useState<RoomsInterface | null>(null);\n  const [loading, setLoading] = useState<boolean>(true);\n  // const [districtNotFound, setDistrictNotFound] = useState<boolean>(false);\n  const [loadingRequest, setLoadingRequest] = useState<boolean>(false);\n\n  useEffect(() => {\n    if (!props.locations.length && loading) {\n      props.getAllRoom((status: boolean, msg: string) => {\n        setLoading(status);\n        if (!status && msg.length > 0) {\n          console.error(msg);\n        }\n        // setLoadingLocations(false);\n      });\n    } else if (loading) {\n      setLoading(false);\n    }\n  }, [loading, props]);\n\n  if (loading === true) {\n    return (\n      <div className=\"text-center mt-7 font-bold text-4xl text-gray-400 animate-pulse\">\n        Loading locations...\n      </div>\n    );\n  }\n\n  return (\n    <Fragment>\n      <div className=\"w-full my-5\">\n        {/* header title */}\n        <div className=\"flex justify-between w-full p-2 gap-1\">\n          <div className=\"flex flex-col\">\n            <span className=\"text-blue-600 text-2xl md:text-2xl lg:text-3xl font-bold\">\n              Locations Management\n            </span>\n\n            <div className=\"flex flex-row items-center md:gap-3 gap-2 mt-1\">\n              <AiOutlineFilter className=\"text-xl\" />\n              <div className=\"flex flex-row items-center gap-1\">\n                {thisProvince && (\n                  <span className=\"text-gray-700 text-base font-bold\">\n                    {thisProvince.province_name}\n                  </span>\n                )}\n                {thisDistrict && (\n                  <div className=\"flex flex-row items-center gap-1\">\n                    <BsCaretRightFill />\n                    <span className=\"text-blue-600 text-base font-bold underline\">\n                      {thisDistrict.district_name} district\n                    </span>\n                  </div>\n                )}\n              </div>\n            </div>\n          </div>\n        </div>\n        {/* end header title */}\n\n        {props.locations.length > 0 ? (\n          <div className=\"w-full\">\n            {/* ============================= CENTERS ============================= */}\n            <ViewCenters\n              locations={props.locations}\n              thisProvince={thisProvince}\n              thisProvinceId={thisProvince ? thisProvince._id : \"\"}\n              thisDistrict={thisDistrict}\n              thisCenter={thisCenter}\n              thisRoom={thisRoom}\n              loadingRequest={loadingRequest}\n              actionTypes={actionTypes}\n              setThisProvince={setThisProvince}\n              setThisDistrict={setThisDistrict}\n              setLoadingRequest={setLoadingRequest}\n              setThisCenter={setThisCenter}\n              setThisRoom={setThisRoom}\n              setActionTypes={setActionTypes}\n            />\n            {/* =========================== END CENTERS =========================== */}\n          </div>\n        ) : (\n          <NoResult theme={NoResultThemes.Dark} value=\"No Locations found!\" />\n        )}\n      </div>\n    </Fragment>\n  );\n};\n\nconst mapStateToProps = ({\n  locations,\n}: StoreState): {\n  locations: RoomLocationInterface[];\n} => {\n  return { locations: locations.roomLocation };\n};\n\nexport const Centers = connect(mapStateToProps, {\n  getAllRoom,\n})(Index);\n","import axios from \"axios\";\nimport { Dispatch } from \"redux\";\nimport { ActionTypes } from \"./types\";\nimport { API } from \"../utils/api\";\nimport {\n  CentersInterface,\n  DistrictInterface,\n  RoomLocationInterface,\n  RoomsInterface,\n  SectorInterface,\n} from \"../shared/interfaces\";\nimport { errorToText } from \"../utils/errors\";\n\n/**\n * * ****************************** INTERFACES *****************************\n */\n\nexport interface getAllRoomActions {\n  type: ActionTypes.GET_ALL_ROOM;\n  payload: RoomLocationInterface[];\n}\n\nexport interface createProvinceActions {\n  type: ActionTypes.CREATE_PROVINCE;\n  payload: RoomLocationInterface;\n}\n\nexport interface updateProvinceActions {\n  type: ActionTypes.UPDATE_PROVINCE;\n  payload: {\n    province_id: string;\n    province_name: string;\n    provice_code: number;\n  };\n}\n\nexport interface deleteProvinceActions {\n  type: ActionTypes.DELETE_PROVINCE;\n  payload: string;\n}\n\n// ============ DISTRICT =================\nexport interface createDistrictActions {\n  type: ActionTypes.CREATE_DISTRICT;\n  payload: { province_id: string; data: DistrictInterface };\n}\n\nexport interface updateDistrictActions {\n  type: ActionTypes.UPDATE_DISTRICT;\n  payload: {\n    province_id: string;\n    district_id: string;\n    district_name: string;\n    district_code: number;\n  };\n}\n\nexport interface deleteDistrictActions {\n  type: ActionTypes.DELETE_DISTRICT;\n  payload: { province_id: string; district_id: string };\n}\n\n// ============ SECTOR =================\nexport interface createSectorActions {\n  type: ActionTypes.CREATE_SECTOR;\n  payload: {\n    province_id: string;\n    district_id: string;\n    data: SectorInterface;\n  };\n}\n\nexport interface updateSectorActions {\n  type: ActionTypes.UPDATE_SECTOR;\n  payload: {\n    province_id: string;\n    district_id: string;\n    sector_id: string;\n    sector_name: string;\n    sector_code: number;\n  };\n}\n\nexport interface deleteSectorActions {\n  type: ActionTypes.DELETE_SECTOR;\n  payload: { province_id: string; district_id: string; sector_id: string };\n}\n\n// ============ CENTERS =================\nexport interface createCenterActions {\n  type: ActionTypes.CREATE_CENTER;\n  payload: {\n    province_id: string;\n    district_id: string;\n    data: CentersInterface;\n  };\n}\n\nexport interface updateCenterActions {\n  type: ActionTypes.UPDATE_CENTER;\n  payload: {\n    province_id: string;\n    district_id: string;\n    examination_center_id: string;\n    center_name: string;\n  };\n}\n\nexport interface deleteCenterActions {\n  type: ActionTypes.DELETE_CENTER;\n  payload: { province_id: string; district_id: string; center_id: string };\n}\n\n// ============ ROOMS =================\nexport interface createRoomActions {\n  type: ActionTypes.CREATE_ROOM;\n  payload: {\n    province_id: string;\n    district_id: string;\n    center_id: string;\n    data: RoomsInterface;\n  };\n}\n\nexport interface updateRoomActions {\n  type: ActionTypes.UPDATE_ROOM;\n  payload: {\n    province_id: string;\n    district_id: string;\n    center_id: string;\n    room_id: string;\n    room_number: number;\n    capacity: number;\n  };\n}\n\nexport interface deleteRoomActions {\n  type: ActionTypes.DELETE_ROOM;\n  payload: {\n    province_id: string;\n    district_id: string;\n    center_id: string;\n    room_id: string;\n  };\n}\n\nexport type RoomActionType =\n  | getAllRoomActions\n  | createProvinceActions\n  | updateProvinceActions\n  | deleteProvinceActions\n  | createDistrictActions\n  | updateDistrictActions\n  | deleteDistrictActions\n  | createSectorActions\n  | updateSectorActions\n  | deleteSectorActions\n  | createCenterActions\n  | updateCenterActions\n  | deleteCenterActions\n  | createRoomActions\n  | updateRoomActions\n  | deleteRoomActions;\n\n/**\n * * ****************************** ACTIONS *****************************\n */\n\nexport const getAllRoom = (callback: Function) => {\n  return async (dispatch: Dispatch) => {\n    callback(true, \"\");\n    try {\n      const res = await axios.get<RoomLocationInterface[]>(\n        `${API.APPLICATION}/roomlocation`\n      );\n      dispatch<getAllRoomActions>({\n        type: ActionTypes.GET_ALL_ROOM,\n        payload: res.data,\n      });\n      console.log(\"====================================\");\n      console.log({ res: res.data });\n      console.log(\"====================================\");\n      callback(false, \"\", res.data);\n    } catch (error) {\n      console.error(\"Err: \", error);\n      callback(false, errorToText(error));\n    }\n  };\n};\n\nexport const FC_CreateProvince = (data: RoomLocationInterface) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<createProvinceActions>({\n      type: ActionTypes.CREATE_PROVINCE,\n      payload: data,\n    });\n  };\n};\n\nexport const FC_UpdateProvince = (data: {\n  province_id: string;\n  province_name: string;\n  provice_code: number;\n}) => {\n  console.log({ data });\n  return async (dispatch: Dispatch) => {\n    dispatch<updateProvinceActions>({\n      type: ActionTypes.UPDATE_PROVINCE,\n      payload: data,\n    });\n  };\n};\n\nexport const FC_DeleteProvince = (data: string) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<deleteProvinceActions>({\n      type: ActionTypes.DELETE_PROVINCE,\n      payload: data,\n    });\n  };\n};\n\n// DISTRICT =================\nexport const FC_CreateDistrict = (data: {\n  province_id: string;\n  data: DistrictInterface;\n}) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<createDistrictActions>({\n      type: ActionTypes.CREATE_DISTRICT,\n      payload: data,\n    });\n  };\n};\n\nexport const FC_UpdateDistrict = (data: {\n  province_id: string;\n  district_id: string;\n  district_name: string;\n  district_code: number;\n}) => {\n  console.log({ data });\n  return async (dispatch: Dispatch) => {\n    dispatch<updateDistrictActions>({\n      type: ActionTypes.UPDATE_DISTRICT,\n      payload: data,\n    });\n  };\n};\n\nexport const FC_DeleteDistrict = (data: {\n  province_id: string;\n  district_id: string;\n}) => {\n  console.log({ data });\n  return async (dispatch: Dispatch) => {\n    dispatch<deleteDistrictActions>({\n      type: ActionTypes.DELETE_DISTRICT,\n      payload: data,\n    });\n  };\n};\n\n// SECTOR =================\nexport const FC_CreateSector = (data: {\n  province_id: string;\n  district_id: string;\n  data: SectorInterface;\n}) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<createSectorActions>({\n      type: ActionTypes.CREATE_SECTOR,\n      payload: data,\n    });\n  };\n};\n\nexport const FC_UpdateSector = (data: {\n  province_id: string;\n  district_id: string;\n  sector_id: string;\n  sector_name: string;\n  sector_code: number;\n}) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<updateSectorActions>({\n      type: ActionTypes.UPDATE_SECTOR,\n      payload: data,\n    });\n  };\n};\n\nexport const FC_DeleteSector = (data: {\n  province_id: string;\n  district_id: string;\n  sector_id: string;\n}) => {\n  console.log({ data });\n  return async (dispatch: Dispatch) => {\n    dispatch<deleteSectorActions>({\n      type: ActionTypes.DELETE_SECTOR,\n      payload: data,\n    });\n  };\n};\n\n// CENTERS =================\nexport const FC_CreateCenter = (data: {\n  province_id: string;\n  district_id: string;\n  data: CentersInterface;\n}) => {\n  console.log({ data });\n  return async (dispatch: Dispatch) => {\n    dispatch<createCenterActions>({\n      type: ActionTypes.CREATE_CENTER,\n      payload: data,\n    });\n  };\n};\n\nexport const FC_UpdateCenter = (data: {\n  province_id: string;\n  district_id: string;\n  examination_center_id: string;\n  center_name: string;\n}) => {\n  console.log({ data });\n  return async (dispatch: Dispatch) => {\n    dispatch<updateCenterActions>({\n      type: ActionTypes.UPDATE_CENTER,\n      payload: data,\n    });\n  };\n};\n\nexport const FC_DeleteCenter = (data: {\n  province_id: string;\n  district_id: string;\n  center_id: string;\n}) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<deleteCenterActions>({\n      type: ActionTypes.DELETE_CENTER,\n      payload: data,\n    });\n  };\n};\n\n// ROOM =================\nexport const FC_CreateRoom = (data: {\n  province_id: string;\n  district_id: string;\n  center_id: string;\n  data: RoomsInterface;\n}) => {\n  console.log({ data });\n  return async (dispatch: Dispatch) => {\n    dispatch<createRoomActions>({\n      type: ActionTypes.CREATE_ROOM,\n      payload: data,\n    });\n  };\n};\n\nexport const FC_UpdateRoom = (data: {\n  province_id: string;\n  district_id: string;\n  center_id: string;\n  room_id: string;\n  room_number: number;\n  capacity: number;\n}) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<updateRoomActions>({\n      type: ActionTypes.UPDATE_ROOM,\n      payload: data,\n    });\n  };\n};\n\nexport const FC_DeleteRoom = (data: {\n  province_id: string;\n  district_id: string;\n  center_id: string;\n  room_id: string;\n}) => {\n  console.log({ delete_room: data });\n  return async (dispatch: Dispatch) => {\n    dispatch<deleteRoomActions>({\n      type: ActionTypes.DELETE_ROOM,\n      payload: data,\n    });\n  };\n};\n","import { FiAlertCircle } from \"react-icons/fi\";\nimport { GoAlert } from \"react-icons/go\";\nimport { MdDeleteForever } from \"react-icons/md\";\n\nexport enum ActionConfirmEnum {\n  DELETE = \"delete\",\n  INFO = \"info\",\n  OTHER = \"other\",\n}\n\ninterface ActionConfirmProps {\n  confirmFun: Function;\n  setModalAction: (value: boolean) => void;\n  description: string;\n  modalType: ActionConfirmEnum;\n}\n\nconst ActionConfirm: React.FC<ActionConfirmProps> = (props) => {\n  return (\n    <div\n      className=\"min-w-screen h-screen animated fadeIn faster  fixed  left-0 top-0 flex justify-center items-center inset-0 z-50 outline-none focus:outline-none bg-no-repeat bg-center bg-cover\"\n      id=\"modal-id\"\n    >\n      <div className=\"absolute bg-black opacity-80 inset-0 z-0\"></div>\n      <div className=\"w-full  max-w-lg p-5 relative mx-auto my-auto rounded-xl shadow-lg bg-white animate__animated animate__zoomIn animate__faster\">\n        {/* <!--content--> */}\n        <div className=\"\">\n          {/* <!--body--> */}\n          <div className=\"text-center p-5 flex-auto justify-center\">\n            {props.modalType === ActionConfirmEnum.DELETE && (\n              <FiAlertCircle className=\"w-4 h-4 -m-1 flex items-center text-red-500 mx-auto\" />\n            )}\n            {props.modalType === ActionConfirmEnum.DELETE ? (\n              <MdDeleteForever className=\"w-16 h-16 flex items-center text-red-500 mx-auto\" />\n            ) : props.modalType === ActionConfirmEnum.INFO ? (\n              <GoAlert className=\"w-16 h-16 flex items-center text-blue-500 mx-auto\" />\n            ) : (\n              <GoAlert className=\"w-16 h-16 flex items-center text-yellow-500 mx-auto\" />\n            )}\n            <h2 className=\"text-xl font-bold py-4 \">Are you sure?</h2>\n            <p className=\"text-sm text-gray-500 px-8\">{props.description}</p>\n          </div>\n          {/* <!--footer--> */}\n          <div className=\"p-3  mt-2 text-center space-x-4 md:block\">\n            <button\n              className=\"mb-2 md:mb-0 bg-white px-5 py-2 text-sm shadow-sm font-medium tracking-wider border text-gray-600 rounded-full hover:shadow-lg hover:bg-gray-100\"\n              onClick={() => props.setModalAction(false)}\n            >\n              Cancel\n            </button>\n            <button\n              className={`mb-2 md:mb-0 border px-5 py-2 text-sm shadow-sm font-medium tracking-wider text-white rounded-full hover:shadow-lg ${\n                props.modalType === ActionConfirmEnum.DELETE\n                  ? \"border-red-500 hover:bg-red-600 bg-red-500\"\n                  : props.modalType === ActionConfirmEnum.INFO\n                  ? \"border-blue-500 hover:bg-blue-600 bg-blue-500\"\n                  : \"border-yellow-500 hover:bg-yellow-600 bg-yellow-500\"\n              }`}\n              onClick={() => {\n                props.confirmFun();\n                props.setModalAction(false);\n              }}\n            >\n              Confirm\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default ActionConfirm;\n"],"sourceRoot":""}
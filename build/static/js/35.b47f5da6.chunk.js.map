{"version":3,"sources":["containers/Claimings/Admin/AdminClaimExamView.tsx","containers/Positions/ViewDocRequirements.tsx","containers/Claimings/Admin/AdminClaimAppView.tsx","containers/Claimings/Admin/AdminClaimDocView.tsx","containers/Claimings/Admin/index.tsx","utils/question_bank.ts","components/Navigation/SideNavigation.tsx","actions/settings.ts","components/Loading/TableLoading.tsx","shared/interfaces.tsx","containers/Claimings/ClaimDocView.tsx","components/AnswersDetails/CandidateAnswersDetails.tsx","containers/CandidateExams/CandidateExams.tsx","containers/Claimings/Admin/AdminFilterByType.tsx","containers/Claimings/ClaimHeaderTitle.tsx","containers/Claimings/Candidate/index.tsx","containers/Claimings/ClaimApplView.tsx","containers/Claimings/ClaimExamView.tsx","containers/Claimings/ClaimPlacementView.tsx","containers/Claimings/Candidate/FilterByType.tsx","components/ViewPDF/ViewPDF.tsx"],"names":["viewTabs","ViewDocRequirements","props","useState","viewDoc","setViewDoc","loadingImage","setLoadingImage","isFullscreen","setSetFullscreen","isDocumentExist","category_id","sub_category_id","field_id","isEmptyOrSpaces","userDocs","filter","item","validation_status","find","category_subcategory_data","Table","columns","columnTitle","alignText","padding","rows","data","requirements","length","className","colSpan","map","index","subcategory_id","subcategory_title","field_title","onClick","pagination","search","thColor","Modal","backDrop","theme","Themes","default","close","backDropClose","widthSizeClass","ModalSize","extraLarge","displayClose","title","body","footer","Loading","files","isFileImage","getFileType","src","API","AUTH_FILES","alt","id","onLoad","onDoubleClick","fullScreen","ViewPDF","file_url","class_name","frame_title","setLoadingFile","React","memo","FC_AdminApplicationPositionDistinctCategory","thisPosition","documentCategories","PositionsTemp","DistinctCategoriesTemp","DistinctCategoriesIds","DistinctSubCategoriesTemp","DistinctSubCategoriesIds","req","thisRequirements","thisCategory","documentCategory","user_detail_category_id","category","thisSubCategory","documentSubCategory","user_detail_subcategory_id","subcategory","field","thisField","documentFields","_id","position_requirement","required","push","category_title","subcategory_required","includes","connect","auth","evaluateClaim","reAssessApplication","PushPopupAlert","loadingRequest","setLoadingRequest","actionTaken","setActionTaken","formError","setFormError","responseMsg","setResponseMsg","handleVerify","a","element","msg","subClaim","thisClaim","claims","level","claim_level","api_body","sub_claim_id","evaluation_comment","evaluated_by","user","user_id","decision_taken_status","evaluator_name","fname","lname","evaluator_email","email","axios","put","CLAIMING","res","console","log","evaluate_claim_res","ClaimDecisionStatus","ACCEPTED","overrideDecision","PopupAlertTheme","success","error","errorToText","danger","getReasonById","reason_id","claimReasons","patch","APPLICATION","claiming_on_id","userDetails","phone_number","comment","application_status","ApplicationStates","Shortlisted","application_id","code_error","getPositionById","position_id","systemPositions","user_info","thisApplication","position","position_title","description","school_level_id","school_level_name","education_institute_id","education_category_title","courses","course_name","course_code","course_id","NoResult","NoResultThemes","Dark","value","details","previous","status","Rejected","capitalizeFirstLetter","evaluater","name","DATE","createdAt","dangerouslySetInnerHTML","__html","reason","override_by","claim","default_claim_resaons","showDate","isClaimEvaluated","REJECTED","toLocaleLowerCase","last_claim_status","ClaimStatus","PENDING","DELETED","placeholder","cols","style","resize","onChange","e","target","disabled","window","confirm","verifyDocument","FC_DocValidation","doc_id","DocValidationStatusInterface","APPROVED","validated_by","in_education","disability","api_redux","date","post","AUTH","FC_shortListing","candidate_id","type","setViewImage","viewImage","adminDisplayClaimTitle","thisDoc","commet","questionTypes","loadQuestionTypes","loading","setLoading","marks","setMarks","profile","selectedTab","setSelectedTab","useEffect","handleMarksAddition","DO_EXAM","answer_sheet_id","Object","values","i","exam","AnswersDetails","showAnswers","exam_id","claimShowAnswer","thisExamSheet","thisExam","allAnswers","exam_location","questions","user_answers","period","course","exam_paper","user_status","used_duration","total_marks","number_of_question_answered","exam_total_marks","exam_start_time","exam_end_time","exam_date","updatedAt","gender","sex","Number","candidateDocuments","result","type_key","PlansTypeKeys","DOCUMENT_VALIDATION","AdminClaimGetDocTitle","main","doc","DocCategory","DocSubCategory","DocField","DocTitle","c","sub_category","getApplicationById","allApplications","application","Index","setState","setLoadingData","loadingData","setPeriodChanged","periodChanged","setThisPeriod","thisPeriod","setViewClaim","viewClaim","setClaimId","claimId","setClaimType","claimType","setCandidateId","candidateId","setDefaultSession","sessions","state","thisSession","is_active","loadsAllClaims","setSearchClaim","searchClaim","claiming","allClaims","getAllClaims","session_plan_id","loadsApplications","getAllApplications","loadsController","file_id","EXAMINATION","loadsAlAnswers","answersheet_id","allAnswer","getAllAnswers","componentDidMount","application_sessions","GetAllSessionPlans","documentReducer","getDocumentCategory","getDocumentSubCategory","getDocumentFields","getPositions","getClaimReasons","loadCourses","displayClaimTitle","thisDocs","thisAnswer","getCourseIdBySheetId","getCourseById","onPeriodChange","period_id","getLastClaimDate","claimsLength","this","claimTypes","SideNavigation","AdminFilterByType","loadingClaims","ClaimHeaderTitle","headerTitle","selectedClaimType","MARKS_PUBLICATION","PLACEMENT_TRANSFER","loadingSession","setLoadingSession","filterClaimsByClaimType","Light","Math","random","whichClaimType","whichClaimStatus","classes","TableLoading","getClaimById","ClaimTypesInterface","DOCUMENT","Component","AdminClaim","system_settings","sessionPlan","document","allSessionPlans","ExamTimeStatus","today","moment","tz","TimeZone","getQuestionType","question_types","type_id","check","itm","undefined","check_type","questionTypeElements","key","findTotalMarks","results","sum","test","toFixed","CheckIfExamDone","validateCalculatedFormula","formula","characters","el","nextCharacter","convertFromStringToDate","responseDate","dateComponents","split","datePieces","timePieces","Date","parseInt","validateExamDate","start_time","end_time","Expired","toDay","toString","examDate","startTime","getDate","getMonth","getFullYear","endTime","Waiting","getTime","Online","proctoringDefaultRules","rule","caption","_SideNavigation","PageHasSubNav","componentWillUnmount","isAuthenticated","navActive","system","navigation","children","NavToogle","MainItem","icon","MdBrightness1","active","count","IconDefined","getSystemSettings","callback","dispatch","setAxiosToken","get","ActionTypes","GET_SYSTEM_SETTINGS","payload","disableSystemSetting","DISABLE_SYSTEM_SETTINGS","GetTaskAccess","response","task","permitted","GET_TASK_ACCESS","GET_POSTIONS","deletePosition","DELETE_POSITION","publishPosition","PUBLISH_POSITION","displayCols","colsArray","PostRequestStatusInterface","DocumentAttributesInterface","SESSION_PLAN_KEYS","isReclaimAllowed","_thisClaim","claim_status","EVALUATED","createReClaim","handleSubmit","reClaimingMsg","warning","setReClaimingMsg","setReClaiming","ClaimGetDocTitle","reClaiming","CandidateAnswersDetails","tomorrow","setDate","setClaim","compareWithToday","setFormState","claim_type","tooday","myDate","todayConverted","ChangeLocationComponent","display","setDisplay","changeLocation","_CandidateExams","setloadingExamsDone","loadingExamsDone","loadCandidateExams","QBank","candidateExams","alert","loadUserProfileDetails","FC_GetProfileDetails","InitializationFn","candidateExam","user_exams_temp","center_id","exams","setSelectedPosition","setSelectedCourse","doing_exam","periods","selected_period","InitializeExamDetails","application_session","district_id","room_id","loadUserApplications","LoadCandidateApplications","findLocation","candidateApplications","candidate_applications","updateLocation","selectedCourse","centersModal","maxExamModal","selectedPosition","successMessage","updateLocationFunction","addLocation","location","proctoring_type","selPeriod","applicationPeriods","loadApplicationPeriods","removeDuplicatesExams","temp","removeDuplicatesNotPreparedExams","setTimeOut","temps","activeExams","selectApplication","applications","setMaxExamModal","closeModal","selectedExam","FC_Access","UserAccessList","MY_APPLICATION","view","selected_exam_id","selected_exam_details","to","preparedExam","center_name","room_number","school_levels","UserExamStatus","Editing","Paused","Done","Removed","user_marks","discription","termes","rules","found","duration_min","getMinutesFromTwoDates","timeout","returnString","labels","days","notPreparedExam","positionCourses","CandidateExams","setSelectedCandidateExam","loadExamsDone","AddUserApplication","claimList","GetClaimingTypes","setSelectedClaimType","loadingClaimTypes","setLoadingClaimTypes","countClaims","thisType","Fragment","isLoading","selectPeriod","session","session_plan_name","ClaimTypesEnum","setViewPosition","viewPosition","FC_ApplicationPositionDistinctCategory","ViewRequirements","myPlacement","placed","school","school_name","district_name","getMyRejectedApplications","getMyRejectedDocuments","loadingRejectedApplications","setLoadingRejectedApplications","loadingRejectedDocuments","setLoadingRejectedDocuments","myClaims","COMPLETED","getDocumentById","document_id","marks_publication","placement","claim_id","displayDocClaimTitle","allCourse","myAnswer","setClaimForm","claimForm","loadClaims","getMyClaims","setSession","loadExamAnswers","activeSessionPlan","getMyAnswers","getMyPlacement","isDeleteAllowed","thisCLaim","ClaimApplView","ClaimExamView","ClaimForm","formState","CandidateClaim","setError"],"mappings":"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","file":"static/js/35.b47f5da6.chunk.js","sourcesContent":["import axios from \"axios\";\nimport React, { useEffect, useState } from \"react\";\nimport { FaRegCheckCircle } from \"react-icons/fa\";\nimport { MdCancel, MdInfoOutline } from \"react-icons/md\";\nimport { RiArrowGoBackFill } from \"react-icons/ri\";\nimport { connect } from \"react-redux\";\nimport {\n  Auth,\n  loadQuestionTypes,\n  PushPopupAlert,\n  questionTypesStoreInterface,\n} from \"../../../actions\";\nimport { evaluateClaim } from \"../../../actions/claiming\";\nimport { AnswersDetails } from \"../../../components/AnswersDetails/AnswersDetails\";\nimport Loading from \"../../../components/Loading/Loading\";\nimport {\n  CandidateClaimInterface,\n  ClaimDecisionStatus,\n  ClaimExamResultsDetails,\n  claimReasonInterface,\n  ClaimStatus,\n  ClaimTypesInterfaceAPI,\n  course,\n} from \"../../../interfaces\";\nimport { ExamAnswerSheetDone } from \"../../../interfaces/exam\";\nimport { PopupAlertTheme } from \"../../../interfaces/popupAlert\";\nimport { StoreState } from \"../../../reducers\";\nimport {\n  capitalizeFirstLetter,\n  isEmptyOrSpaces,\n} from \"../../../shared/dataTest\";\nimport { API } from \"../../../utils/api\";\nimport { errorToText } from \"../../../utils/errors\";\nimport { showDate } from \"../../../utils/functions\";\nimport { claimShowAnswer } from \"../Candidate/ExaminationFormView\";\nimport { isClaimEvaluated } from \"../ClaimDocView\";\nimport { claimResponseBody } from \"./AdminClaimDocView\";\n\nenum viewTabs {\n  profile = \"Applicant Profile\",\n  exam = \"Exam Details\",\n}\n\ntype AdminClaimExamViewProps = {\n  thisExamSheet: ClaimExamResultsDetails;\n  thisExam: course;\n  thisClaim: CandidateClaimInterface;\n  claimTypes: ClaimTypesInterfaceAPI[];\n  claimReasons: claimReasonInterface[] | null;\n\n  // REDUX ==================\n  auth: Auth;\n  questionTypes: questionTypesStoreInterface;\n  evaluateClaim: Function;\n  loadQuestionTypes: (callback: (loading: boolean) => void) => void;\n  PushPopupAlert: Function;\n};\n\nconst AdminClaimExamView: React.FC<AdminClaimExamViewProps> = (props) => {\n  const [loadingRequest, setLoadingRequest] = useState<boolean>(false);\n  const [loading, setLoading] = useState(true);\n  const [actionTaken, setActionTaken] = useState<ClaimDecisionStatus | null>(\n    null\n  );\n  const [formError, setFormError] = useState<{\n    element: string;\n    msg: string;\n  } | null>(null);\n  const [responseMsg, setResponseMsg] = useState<string>(\"\");\n  const [marks, setMarks] = useState<number>(0);\n  const [selectedTab, setSelectedTab] = useState<viewTabs>(viewTabs.profile);\n\n  useEffect(() => {\n    if (\n      props.questionTypes.questionTypes === null ||\n      (props.questionTypes.questionTypes.length === 0 && loading)\n    ) {\n      props.loadQuestionTypes(setLoading);\n    } else if (loading) {\n      setLoading(false);\n    }\n  }, [loading, props]);\n\n  if (loading || props.questionTypes.questionTypes === null) {\n    return <Loading />;\n  }\n\n  const handleVerify = async () => {\n    if (!actionTaken) {\n      setFormError({\n        element: \"action\",\n        msg: \"Action is required!\",\n      });\n      return setLoadingRequest(false);\n    }\n\n    if (\n      actionTaken === ClaimDecisionStatus.ACCEPTED &&\n      (marks <= 0 || marks > 100)\n    ) {\n      setFormError({\n        element: \"marks\",\n        msg: \"Invalid marks, marks must be between 1 and 10\",\n      });\n\n      return setLoadingRequest(false);\n    }\n\n    if (isEmptyOrSpaces(responseMsg)) {\n      setFormError({\n        element: \"comment\",\n        msg: \"Reason of rejection is required\",\n      });\n      return setLoadingRequest(false);\n    }\n\n    let subClaim = props.thisClaim.claims.find(\n      (item) => item.level === props.thisClaim.claim_level\n    );\n\n    if (subClaim) {\n      setLoadingRequest(true);\n      const api_body: claimResponseBody = {\n        sub_claim_id: subClaim.id,\n        evaluation_comment: responseMsg,\n        evaluated_by: props.auth.user.user_id,\n        decision_taken_status: actionTaken,\n        evaluator_name: props.auth.user.fname + \" \" + props.auth.user.lname,\n        evaluator_email: props.auth.user.email,\n      };\n\n      try {\n        const res = await axios.put<CandidateClaimInterface>(\n          `${API.CLAIMING}/user/evaluate/${props.thisClaim._id}`,\n          api_body\n        );\n        if (res) {\n          console.log({ evaluate_claim_res: res });\n          props.evaluateClaim(res.data);\n          // REVALIDATED DOCUMENT IF IT IS APPROVED =========================\n          if (actionTaken === ClaimDecisionStatus.ACCEPTED) {\n            await handleMarksAddition();\n          }\n          props.PushPopupAlert({\n            title: `Claim responded successfully!`,\n            theme: PopupAlertTheme.success,\n          });\n          // setDocumentId(\"null\");\n          setResponseMsg(\"\");\n          setActionTaken(null);\n        }\n      } catch (error) {\n        console.error(error);\n        props.PushPopupAlert({\n          title: errorToText(error),\n          theme: PopupAlertTheme.danger,\n        });\n      }\n      setLoadingRequest(false);\n    }\n  };\n\n  const handleMarksAddition = async () => {\n    try {\n      await axios.put(`${API.DO_EXAM}/answersheet/user/marks/update`, {\n        answer_sheet_id: props.thisClaim.claiming_on_id,\n        marks: marks,\n      });\n    } catch (error) {\n      console.error(error);\n      props.PushPopupAlert({\n        title: errorToText(error),\n        theme: PopupAlertTheme.danger,\n      });\n    }\n  };\n\n  const getReasonById = (\n    reason_id: string\n  ): claimReasonInterface | undefined => {\n    if (props.claimReasons) {\n      return props.claimReasons.find((item) => item.id === reason_id);\n    }\n    return undefined;\n  };\n\n  // const getAnswersByQuestion = (question_id: string): ClaimGetUserAnswers[] => {\n  //   return props.thisExamSheet.user_answers.filter(\n  //     (item) => item.question === question_id\n  //   );\n  // };\n\n  const claimCandidateAnswers = (): ExamAnswerSheetDone[] => {\n    let result: ExamAnswerSheetDone[] = [\n      {\n        exam_location: props.thisExamSheet.exam_location,\n        questions: props.thisExamSheet.questions,\n        user_answers: props.thisExamSheet.user_answers,\n        user: props.thisExamSheet.user,\n        period: props.thisExamSheet.period,\n        course: props.thisExamSheet.course,\n        exam_paper: props.thisExamSheet.exam_paper,\n        user_status: props.thisExamSheet.user_status,\n        used_duration: props.thisExamSheet.used_duration,\n        total_marks: props.thisExamSheet.total_marks,\n        number_of_question_answered:\n          props.thisExamSheet.number_of_question_answered,\n        // start_time: string,\n        // end_time: string,\n        exam_total_marks: props.thisExamSheet.exam_total_marks,\n        exam_start_time: props.thisExamSheet.exam_start_time,\n        exam_end_time: props.thisExamSheet.exam_end_time,\n        exam_date: props.thisExamSheet.exam_date,\n        status: props.thisExamSheet.status,\n        createdAt: props.thisExamSheet.createdAt,\n        updatedAt: props.thisExamSheet.updatedAt,\n        disability: false,\n        gender: \"\",\n        in_education: false,\n        position: \"\",\n        answer_sheet_id: props.thisExamSheet.answer_sheet_id,\n      },\n    ];\n    // props.thisExamSheet\n\n    return result;\n  };\n\n  return (\n    <section className=\"\">\n      {/* #################### VIEW TABS ################################## */}\n      <div className=\"flex flex-row items-center mx-4\">\n        {Object.values(viewTabs).map((item, i) => (\n          <div\n            key={i}\n            onClick={() => setSelectedTab(item)}\n            className={`animate__animated ${\n              selectedTab === item\n                ? \"bg-blue-100 border-blue-600 text-blue-600 animate__zoomIn\"\n                : \"bg-white border-white text-gray-600\"\n            } hover:bg-blue-100 px-4 py-2 cursor-pointer font-bold border-b-4 hover:border-blue-600 hover:text-blue-600 rounded-t mt-1 mr-1`}\n          >\n            {item}\n          </div>\n        ))}\n      </div>\n      {/* #################### END VIEW TABS ################################## */}\n      <div className=\"w-full bg-white px-4 py-1 divide-y-2 space-y-2\">\n        {/* DOCUMENT DETAILS ==================================================== */}\n        <section className=\"flex flex-col\">\n          {/* DISPLAY POSITION ==================================================== */}\n          {selectedTab === viewTabs.exam && (\n            <section className=\"w-full my-1 animate__animated animate__fadeIn rounded\">\n              <div className=\"bg-white w-full rounded p-2 mb-2\">\n                <AnswersDetails\n                  showAnswers={true}\n                  exam_id={claimShowAnswer(\n                    props.thisExamSheet,\n                    props.thisExam.course_name\n                  )}\n                  allAnswers={claimCandidateAnswers()}\n                  user_id={props.thisExamSheet.user}\n                />\n              </div>\n            </section>\n          )}\n          {/* END DISPLAY POSITION ==================================================== */}\n          {/* -------------------------------------------------------------------------------- */}\n          {/* DISPLAY PROFILE ==================================================== */}\n          {selectedTab === viewTabs.profile && (\n            <section className=\"w-full my-2 animate__animated animate__fadeIn rounded\">\n              <div className=\"flex items-center justify-between\">\n                <div className=\"flex items-center gap-2\">\n                  <span className={`italic text-gray-600`}>Names:</span>\n                  <span className=\"text-gray-800 font-bold text-xl\">\n                    {props.thisClaim.userDetails.user_info.fname +\n                      \" \" +\n                      props.thisClaim.userDetails.user_info.lname}\n                  </span>\n                </div>\n              </div>\n            </section>\n          )}\n          {/* END DISPLAY PROFILE ==================================================== */}\n          {selectedTab === viewTabs.profile && (\n            <div className=\"\">\n              <div className=\"flex items-center gap-2\">\n                <span className={`italic text-gray-600`}>Email:</span>\n                <span className=\"text-gray-800 font-bold text-lg\">\n                  {props.thisClaim.userDetails.email}\n                </span>\n              </div>\n              <div className=\"flex items-center gap-2\">\n                <span className={`italic text-gray-600`}>Phone:</span>\n                <span className=\"text-gray-800 font-bold text-lg\">\n                  {props.thisClaim.userDetails.phone_number}\n                </span>\n              </div>\n              <div className=\"flex items-center gap-2\">\n                <span className={`italic text-gray-600`}>Gender:</span>\n                <span className=\"text-gray-800 font-bold text-lg\">\n                  {props.thisClaim.userDetails.user_info.sex === \"M\"\n                    ? \"Male\"\n                    : \"Female\"}\n                </span>\n              </div>\n            </div>\n          )}\n        </section>\n        {/* END DOCUMENT DETAILS ==================================================== */}\n\n        {/* ################################################################################ */}\n\n        {/* CLAIM LEVEL 1 DETAILS ==================================================== */}\n        {props.thisClaim.claims.length > 0 &&\n          props.thisClaim.claims.map((claim, index) => (\n            <section className=\"flex flex-col px-2 pt-3\" key={index + claim.id}>\n              <div className=\"text-gray-700 italic font-bold\">\n                Claim Comment (level {index + 1})\n              </div>\n              {/* CLAIM COMMENT ==>> LEVEL 1 ==================================================== */}\n              <div className=\"flex flex-col items-start gap-2 mt-1 border rounded px-2 py-1 bg-gray-50\">\n                <div className=\"flex items-center gap-2 bg-blue-100 rounded py-1 px-2\">\n                  <MdInfoOutline />\n                  {getReasonById(props.thisClaim.default_claim_resaons)\n                    ? getReasonById(props.thisClaim.default_claim_resaons)!\n                        .reason\n                    : \"\"}\n                </div>\n                <p>{claim.reason}</p>\n                <span className=\"text-gray-600 text-xs\">\n                  {showDate(claim.createdAt)}\n                  {/* {showDate(claim.createdAt) +\n                    \" at \" +\n                    moment.unix(claim.date_created).format(\"MM/DD/YYYY\")} */}\n                </span>\n              </div>\n              {/* CLAIM COMMENT ==>> LEVEL 1 ==================================================== */}\n\n              {isClaimEvaluated(props.thisClaim, claim.level) && (\n                <section className=\"mt-4\">\n                  <span className=\"text-gray-700 italic font-semibold\">\n                    Response (level {index + 1})\n                  </span>\n                  <div className=\"border-t-2\">\n                    <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n                      <span className={`italic`}>Status:</span>\n                      <span\n                        className={`font-bold ${\n                          claim.decision_taken_status ===\n                          ClaimDecisionStatus.REJECTED\n                            ? \"text-yellow-900\"\n                            : \"text-blue-600\"\n                        } rounded px-3 py-1`}\n                      >\n                        {capitalizeFirstLetter(\n                          claim.decision_taken_status.toLocaleLowerCase()\n                        )}\n                      </span>\n                    </div>\n                    <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n                      <span className={`italic`}>Evaluated by:</span>\n                      <span className=\"font-semibold\">\n                        {claim.evaluater.name}\n                      </span>\n                    </div>\n                    <div className=\"flex items-start gap-2 text-sm text-gray-600\">\n                      <span className={`italic`}>Reason:</span>\n                      <span className=\"font-normal\">\n                        {claim.evaluation_comment}\n                      </span>\n                    </div>\n                  </div>\n                </section>\n              )}\n            </section>\n          ))}\n        {/* END CLAIM LEVEL 1 DETAILS ==================================================== */}\n      </div>\n\n      {/* FOOTER INITIAL ========================================== */}\n      {!actionTaken && (\n        <section className=\"flex items-center justify-between bg-gray-50 rounded mt-3\">\n          {/* SHOWING STATUS ===================================== */}\n          <div className=\"mx-4 my-4\">\n            <span\n              className={`${\n                props.thisClaim.last_claim_status === ClaimStatus.PENDING\n                  ? \"text-yellow-700\"\n                  : props.thisClaim.last_claim_status === ClaimStatus.DELETED\n                  ? \"text-red-700\"\n                  : \"text-green-700\"\n              } italic font-semibold`}\n            >\n              {capitalizeFirstLetter(\n                props.thisClaim.last_claim_status.toLocaleLowerCase()\n              )}\n            </span>\n          </div>\n\n          {props.thisClaim.last_claim_status === ClaimStatus.PENDING && (\n            <div className=\"flex items-center gap-2 px-2\">\n              <button\n                className={`px-4 py-2 font-semibold text-red-50 rounded inline-flex items-center space-x-2 focus:outline-none bg-red-700 hover:bg-red-800`}\n                onClick={() => {\n                  setActionTaken(ClaimDecisionStatus.REJECTED);\n                }}\n              >\n                <MdCancel className=\"w-5 h-5\" />\n                <span>Reject</span>\n              </button>\n              <button\n                className={`px-4 py-2 font-semibold text-blue-50 rounded inline-flex items-center space-x-2 focus:outline-none bg-blue-700 hover:bg-blue-800`}\n                onClick={() => {\n                  setActionTaken(ClaimDecisionStatus.ACCEPTED);\n                }}\n              >\n                <FaRegCheckCircle className=\"w-5 h-5\" />\n                <span>Accept</span>\n              </button>\n            </div>\n          )}\n        </section>\n      )}\n      {/* END FOOTER INITIAL ========================================== */}\n\n      {/* ======================================================== */}\n      {/* FOOTER RESPONSE ========================================== */}\n      {actionTaken && (\n        <section className=\"my-5 overflow-x-auto\">\n          <div className=\"italic text-gray-700 text-base my-1 mx-2\">\n            Selected decision:{\" \"}\n            <span\n              className={`font-semibold text-lg ${\n                actionTaken === ClaimDecisionStatus.ACCEPTED\n                  ? \"text-blue-700\"\n                  : \"text-yellow-800\"\n              }`}\n            >\n              {actionTaken === ClaimDecisionStatus.ACCEPTED\n                ? \"Approved\"\n                : \"Rejected\"}\n            </span>\n          </div>\n          {/* right part */}\n          <div className=\"flex flex-col md:flex-row items-end md:items-start gap-1 w-full\">\n            <div className=\"w-full space-y-1\">\n              {actionTaken === ClaimDecisionStatus.ACCEPTED && (\n                <div className=\"flex items-center justify-end w-full gap-2\">\n                  <span className=\"font-semibold\">Addition marks</span>\n                  <div className=\"px-2\">\n                    <input\n                      placeholder={`Addition marks`}\n                      className={`border border-${\n                        formError && formError.element === \"marks\"\n                          ? \"red\"\n                          : \"gray\"\n                      }-400 rounded px-3 py-1 w-auto focus:outline-none`}\n                      value={marks}\n                      onChange={(e) => {\n                        setMarks(Number(e.target.value));\n                        setFormError(null);\n                      }}\n                      disabled={loadingRequest}\n                    />\n                    {formError && formError.element === \"marks\" && (\n                      <p className=\"text-red-800\">{formError.msg}</p>\n                    )}\n                  </div>\n                </div>\n              )}\n              <div className=\"w-full px-2\">\n                <textarea\n                  placeholder={`Reason of your decision...`}\n                  cols={50}\n                  rows={actionTaken === ClaimDecisionStatus.ACCEPTED ? 2 : 3}\n                  className={`border border-${\n                    formError && formError.element === \"comment\"\n                      ? \"red\"\n                      : \"gray\"\n                  }-400 rounded px-3 py-1 w-full focus:outline-none`}\n                  style={{ resize: \"none\" }}\n                  value={responseMsg}\n                  onChange={(e) => {\n                    setResponseMsg(e.target.value);\n                    setFormError(null);\n                  }}\n                  disabled={loadingRequest}\n                ></textarea>\n                {formError && formError.element === \"comment\" && (\n                  <p className=\"text-red-800\">{formError.msg}</p>\n                )}\n              </div>\n            </div>\n            <div className=\"flex flex-row md:flex-col gap-1 max-w-full px-2\">\n              <button\n                className=\"bg-gray-700 hover:bg-gray-800 px-4 py-2 font-semibold rounded text-white inline-flex items-center space-x-2 focus:outline-none\"\n                onClick={() => {\n                  setResponseMsg(\"\");\n                  setActionTaken(null);\n                  setFormError(null);\n                }}\n                disabled={loadingRequest}\n              >\n                <RiArrowGoBackFill className=\"w-5 h-5\" />\n                <span>Back</span>\n              </button>\n              <button\n                className=\"bg-blue-700 hover:bg-blue-800 px-4 py-2 font-semibold rounded text-white inline-flex items-center space-x-2 focus:outline-none\"\n                disabled={loadingRequest}\n                onClick={() =>\n                  window.confirm(\n                    `Are you sure you want to ${\n                      actionTaken === ClaimDecisionStatus.ACCEPTED\n                        ? \"approve\"\n                        : \"rejected\"\n                    } this document?`\n                  ) && handleVerify()\n                }\n              >\n                {loadingRequest ? (\n                  <div className=\"\">Loading...</div>\n                ) : (\n                  <div className=\"inline-flex items-center space-x-2 gap-1\">\n                    <FaRegCheckCircle className=\"w-5 h-5\" />\n                    <span>Confirm</span>\n                  </div>\n                )}\n              </button>\n            </div>\n          </div>\n          {/* end right part */}\n        </section>\n      )}\n      {/* END FOOTER RESPONSE ========================================== */}\n    </section>\n  );\n};\n\nconst mapStateToProps = ({\n  auth,\n  questionTypes,\n}: StoreState): {\n  auth: Auth;\n  questionTypes: questionTypesStoreInterface;\n} => {\n  return {\n    auth,\n    questionTypes,\n  };\n};\n\nexport default React.memo(\n  connect(mapStateToProps, {\n    loadQuestionTypes,\n    evaluateClaim,\n    PushPopupAlert,\n  })(AdminClaimExamView)\n);\n","import React, { useState } from \"react\";\nimport { CgImage } from \"react-icons/cg\";\nimport Loading from \"../../components/Loading/Loading\";\nimport Modal, { ModalSize, Themes } from \"../../components/Modal/Modal\";\nimport Table from \"../../components/Table/Table\";\nimport ViewPDF from \"../../components/ViewPDF/ViewPDF\";\nimport { isEmptyOrSpaces } from \"../../shared/dataTest\";\nimport { UserDocumentsInterface } from \"../../shared/interfaces\";\nimport { API } from \"../../utils/api\";\nimport { fullScreen, getFileType, isFileImage } from \"../../utils/functions\";\nimport { PositionRequirementTableInterface } from \"./ViewPosition\";\n\ninterface RequirementProps {\n  requirements: PositionRequirementTableInterface[];\n  userDocs: UserDocumentsInterface[];\n}\n\nconst ViewDocRequirements: React.FC<RequirementProps> = (props) => {\n  const [viewDoc, setViewDoc] = useState<UserDocumentsInterface | null>(null);\n  const [loadingImage, setLoadingImage] = useState<boolean>(false);\n  const [isFullscreen, setSetFullscreen] = useState<boolean>(false);\n\n  const isDocumentExist = (\n    category_id: string,\n    sub_category_id: string,\n    field_id: string\n  ): UserDocumentsInterface | undefined => {\n    if (!isEmptyOrSpaces(category_id)) {\n      let userDocs: UserDocumentsInterface[] = props.userDocs.filter(\n        (item) => item.category_id === category_id\n      );\n\n      if (!isEmptyOrSpaces(sub_category_id)) {\n        userDocs = userDocs.filter(\n          (item) =>\n            item.validation_status === \"approved\" &&\n            item.category_id === category_id &&\n            item.sub_category_id === sub_category_id\n        );\n      }\n\n      if (!isEmptyOrSpaces(field_id)) {\n        return userDocs.find(\n          (item) =>\n            item.validation_status === \"approved\" &&\n            item.category_id === category_id &&\n            item.category_subcategory_data === field_id\n        );\n      }\n    }\n    return undefined;\n  };\n  const tableData = (): JSX.Element[] => {\n    let data: PositionRequirementTableInterface[] = props.requirements;\n    if (data.length === 0) {\n      return [\n        <tr key={153} className=\"border-b border-gray-200 hover:bg-gray-100\">\n          <td className=\"p-3 text-center\" colSpan={3}>\n            No Data Found\n          </td>\n        </tr>,\n      ];\n    }\n\n    return data.map((item, index) => (\n      <tr\n        key={index + item.field_id}\n        className={`border-b border-gray-200 hover:bg-gray-100 ${\n          !isDocumentExist(\n            item.category_id,\n            item.subcategory_id,\n            item.field_id\n          ) && \"text-yellow-800\"\n        }`}\n      >\n        <td className=\"p-3 text-left whitespace-nowrap\">{index + 1})</td>\n        <td className=\"p-3 text-left\">\n          <span>\n            {isEmptyOrSpaces(item.field_id)\n              ? \"Any \" + item.subcategory_title\n              : item.subcategory_title + \" in \" + item.field_title}\n          </span>\n        </td>\n        <td className={`p-3 text-left text-lg italic`}>\n          {isDocumentExist(item.category_id, item.subcategory_id, item.field_id)\n            ? \"Found\"\n            : \"Not found\"}\n        </td>\n        <td className={`p-3 text-right text-lg italic`}>\n          {isDocumentExist(\n            item.category_id,\n            item.subcategory_id,\n            item.field_id\n          ) && (\n            <button\n              className=\"bg-gray-200 hover:bg-gray-300 rounded font-medium px-2 py-1 focus:outline-none\"\n              onClick={() => {\n                setViewDoc(\n                  isDocumentExist(\n                    item.category_id,\n                    item.subcategory_id,\n                    item.field_id\n                  )!\n                );\n                setLoadingImage(true);\n              }}\n            >\n              View Doc\n            </button>\n          )}\n        </td>\n      </tr>\n    ));\n  };\n  const handleFullScreen = () => {\n    if (isFullscreen) {\n      fullScreen(\"doc-img\", \"CLOSE\");\n      setSetFullscreen(false);\n    } else {\n      setSetFullscreen(true);\n      fullScreen(\"doc-img\", \"OPEN\");\n    }\n  };\n\n  return (\n    <div>\n      <Table\n        columns={[\n          { columnTitle: \"#\", alignText: \"left\", padding: \"p-3\" },\n          { columnTitle: \"Qualification\", alignText: \"left\", padding: \"p-3\" },\n          { columnTitle: \"Status\", alignText: \"left\", padding: \"p-3\" },\n          { columnTitle: \"\", alignText: \"left\", padding: \"p-3\" },\n        ]}\n        rows={tableData}\n        pagination={false}\n        search={false}\n        thColor=\"gray\"\n      />\n\n      {viewDoc && (\n        <Modal\n          backDrop={true}\n          theme={Themes.default}\n          close={() => {\n            setViewDoc(null);\n            setLoadingImage(false);\n          }}\n          backDropClose={false}\n          widthSizeClass={ModalSize.extraLarge}\n          displayClose={true}\n          padding={{\n            title: true,\n            body: false,\n            footer: false,\n          }}\n          title=\"Doc view\"\n        >\n          {loadingImage && <Loading />}\n          {viewDoc.files && viewDoc.files.length > 0 ? (\n            isFileImage(getFileType(viewDoc.files)) ? (\n              <div className=\"relative\">\n                <img\n                  src={API.AUTH_FILES + viewDoc.files}\n                  alt=\"\"\n                  className={`w-full md:w-auto h-auto md:max-h-screen mx-auto ${\n                    loadingImage && \"hidden\"\n                  }`}\n                  id=\"doc-img\"\n                  onLoad={() => setLoadingImage(false)}\n                  onDoubleClick={() => handleFullScreen()}\n                />\n              </div>\n            ) : (\n              <ViewPDF\n                file_url={API.AUTH_FILES + viewDoc.files}\n                class_name={`w-full h-screen md:max-h-screen mx-auto ${\n                  loadingImage && \"hidden\"\n                }`}\n                frame_title={\"application PDF file view\"}\n                setLoadingFile={setLoadingImage}\n              />\n            )\n          ) : (\n            <div className=\"text-center text-red-400 py-8 animate__animated animate__fadeIn\">\n              <CgImage className=\"mx-auto w-40 h-40\" />\n              <span className=\"font-semibold text-4xl\">No Files Provided</span>\n            </div>\n          )}\n        </Modal>\n      )}\n    </div>\n  );\n};\n\nexport default React.memo(ViewDocRequirements);\n","import axios from \"axios\";\nimport React, { useState } from \"react\";\nimport { FaRegCheckCircle } from \"react-icons/fa\";\nimport { MdCancel, MdInfoOutline, MdTurnedIn } from \"react-icons/md\";\nimport { RiArrowGoBackFill } from \"react-icons/ri\";\nimport { connect } from \"react-redux\";\nimport { Auth, PushPopupAlert, reAssessApplication } from \"../../../actions\";\nimport { evaluateClaim } from \"../../../actions/claiming\";\nimport NoResult, {\n  NoResultThemes,\n} from \"../../../components/NoResult/NoResult\";\nimport {\n  allClaimApplicationInterface,\n  CandidateClaimInterface,\n  ClaimDecisionStatus,\n  claimReasonInterface,\n  ClaimStatus,\n  ClaimTypesInterfaceAPI,\n  PositionAPI,\n} from \"../../../interfaces\";\nimport { ApplicationStates } from \"../../../interfaces/application\";\nimport { PopupAlertTheme } from \"../../../interfaces/popupAlert\";\nimport { StoreState } from \"../../../reducers\";\nimport { DocumentReducerInterface } from \"../../../reducers/document\";\nimport {\n  capitalizeFirstLetter,\n  isEmptyOrSpaces,\n} from \"../../../shared/dataTest\";\nimport { API } from \"../../../utils/api\";\nimport { errorToText } from \"../../../utils/errors\";\nimport { DATE, showDate } from \"../../../utils/functions\";\nimport { PositionRequirementTableInterface } from \"../../Positions/ViewPosition\";\nimport ViewDocRequirements from \"../../Positions/ViewDocRequirements\";\nimport { isClaimEvaluated } from \"../ClaimDocView\";\nimport { claimResponseBody } from \"./AdminClaimDocView\";\n\nexport const FC_AdminApplicationPositionDistinctCategory = (\n  thisPosition: PositionAPI,\n  documentCategories: DocumentReducerInterface\n): {\n  PositionsTemp: PositionRequirementTableInterface[];\n  DistinctCategoriesTemp: PositionRequirementTableInterface[];\n  DistinctSubCategoriesTemp: PositionRequirementTableInterface[];\n} => {\n  let PositionsTemp: PositionRequirementTableInterface[] = [];\n  let DistinctCategoriesTemp: PositionRequirementTableInterface[] = [],\n    DistinctCategoriesIds: string[] = [];\n  let DistinctSubCategoriesTemp: PositionRequirementTableInterface[] = [],\n    DistinctSubCategoriesIds: string[] = [];\n  // GET REQUIREMENTS OF THE CURRENT POSITION ====================\n  let requirements = thisPosition.requirements;\n  // LOOP THROUGH CURRENT POSITION REQUIREMENTS ==========================\n  for (let req in requirements) {\n    let thisRequirements = requirements[req];\n    // GET DOC CATEGORY OF THE CURRENT POSITION REQUIREMENTS ====================\n    let thisCategory = documentCategories.documentCategory\n      ? documentCategories.documentCategory.find(\n          (item) =>\n            item.user_detail_category_id ===\n            thisRequirements.category.user_detail_category_id\n        ) && {\n          title: documentCategories.documentCategory.find(\n            (item) =>\n              item.user_detail_category_id ===\n              thisRequirements.category.user_detail_category_id\n          )!.title,\n          user_detail_category_id: documentCategories.documentCategory.find(\n            (item) =>\n              item.user_detail_category_id ===\n              thisRequirements.category.user_detail_category_id\n          )!.user_detail_category_id,\n        }\n      : {\n          title: \"\",\n          user_detail_category_id:\n            thisRequirements.category.user_detail_category_id,\n        };\n    // GET DOC SUB CATEGORY OF THE CURRENT POSITION REQUIREMENTS ====================\n    let thisSubCategory = documentCategories.documentSubCategory\n      ? documentCategories.documentSubCategory.find(\n          (item) =>\n            item.user_detail_subcategory_id ===\n            thisRequirements.subcategory.user_detail_subcategory_id\n        )\n        ? {\n            title: documentCategories.documentSubCategory.find(\n              (item) =>\n                item.user_detail_subcategory_id ===\n                thisRequirements.subcategory.user_detail_subcategory_id\n            )!.title,\n            user_detail_subcategory_id:\n              documentCategories.documentSubCategory.find(\n                (item) =>\n                  item.user_detail_subcategory_id ===\n                  thisRequirements.subcategory.user_detail_subcategory_id\n              )!.user_detail_subcategory_id,\n            category_id: documentCategories.documentSubCategory.find(\n              (item) =>\n                item.user_detail_subcategory_id ===\n                thisRequirements.subcategory.user_detail_subcategory_id\n            )!.category_id,\n          }\n        : {\n            title: \"\",\n            user_detail_subcategory_id:\n              thisRequirements.subcategory.user_detail_subcategory_id,\n            category_id: \"\",\n          }\n      : {\n          title: \"\",\n          user_detail_subcategory_id:\n            thisRequirements.subcategory.user_detail_subcategory_id,\n          category_id: \"\",\n        };\n    // LOOP THROUGH FIELDS OF THE CURRENT POSITION REQUIREMENTS ==========================\n    if (thisCategory) {\n      for (let field in thisRequirements.position_requirement) {\n        // GET FIELDS OF THE CURRENT POSITION REQUIREMENTS ====================\n        let thisField = documentCategories.documentFields\n          ? documentCategories.documentFields.find(\n              (item) =>\n                item._id === thisRequirements.position_requirement[field]._id\n            )\n            ? {\n                title: documentCategories.documentFields.find(\n                  (item) =>\n                    item._id ===\n                    thisRequirements.position_requirement[field]._id\n                )!.title,\n                _id: documentCategories.documentFields.find(\n                  (item) =>\n                    item._id ===\n                    thisRequirements.position_requirement[field]._id\n                )!._id,\n                required: thisRequirements.position_requirement[field].required,\n              }\n            : {\n                title: \"\",\n                _id: thisRequirements.position_requirement[field]._id,\n                required: thisRequirements.position_requirement[field].required,\n              }\n          : {\n              title: \"\",\n              _id: thisRequirements.position_requirement[field]._id,\n              required: thisRequirements.position_requirement[field].required,\n            };\n        // ADD CURRENT CATEGORY, SUB CATEGORY & FIELDS OF THE CURRENT POSITION REQUIREMENTS IN POSITIONS TEMP ====================\n        PositionsTemp.push({\n          category_id: thisCategory.user_detail_category_id,\n          category_title: thisCategory.title,\n          subcategory_id: thisSubCategory.user_detail_subcategory_id,\n          subcategory_title: thisSubCategory.title,\n          subcategory_required: thisRequirements.required,\n          field_title: thisField.title,\n          field_id: thisField._id,\n          required: thisField.required,\n        });\n      }\n\n      // ADD CATEOGRY OF THE CURRENT POSITION REQUIREMENTS TO ARRAY ====================\n      if (\n        !DistinctCategoriesIds.includes(thisCategory.user_detail_category_id)\n      ) {\n        DistinctCategoriesIds.push(thisCategory.user_detail_category_id);\n        DistinctCategoriesTemp.push({\n          category_id: thisCategory.user_detail_category_id,\n          category_title: thisCategory.title,\n          subcategory_id: \"\",\n          subcategory_title: \"\",\n          subcategory_required: thisRequirements.required,\n          field_title: \"\",\n          field_id: \"\",\n          required: false,\n        });\n      }\n\n      // ADD SUB CATEOGRY OF THE CURRENT POSITION REQUIREMENTS TO ARRAY ====================\n      if (\n        !DistinctSubCategoriesIds.includes(\n          thisSubCategory.user_detail_subcategory_id\n        )\n      ) {\n        DistinctSubCategoriesIds.push(\n          thisSubCategory.user_detail_subcategory_id\n        );\n        DistinctSubCategoriesTemp.push({\n          category_id: thisSubCategory.category_id,\n          category_title: \"\",\n          subcategory_id: thisSubCategory.user_detail_subcategory_id,\n          subcategory_title: thisSubCategory.title,\n          subcategory_required: thisRequirements.required,\n          field_title: \"\",\n          field_id: \"\",\n          required: false,\n        });\n      }\n    }\n  }\n  // DistinctCategoriesIds.;\n\n  return { PositionsTemp, DistinctCategoriesTemp, DistinctSubCategoriesTemp };\n};\n\ntype AdminClaimAppViewProps = {\n  thisApplication: allClaimApplicationInterface;\n  thisPosition: PositionAPI;\n  documentCategories: DocumentReducerInterface;\n  thisClaim: CandidateClaimInterface;\n  claimTypes: ClaimTypesInterfaceAPI[];\n  systemPositions: PositionAPI[];\n  claimReasons: claimReasonInterface[] | null;\n\n  // REDUX ==================\n  auth: Auth;\n  reAssessApplication: Function;\n  evaluateClaim: Function;\n  PushPopupAlert: Function;\n};\n\nconst AdminClaimAppView: React.FC<AdminClaimAppViewProps> = (props) => {\n  const [viewPosition, setViewPosition] = useState<boolean>(true);\n  const [loadingRequest, setLoadingRequest] = useState<boolean>(false);\n  const [actionTaken, setActionTaken] = useState<ClaimDecisionStatus | null>(\n    null\n  );\n  const [formError, setFormError] = useState<{\n    element: string;\n    msg: string;\n  } | null>(null);\n  const [responseMsg, setResponseMsg] = useState<string>(\"\");\n\n  const handleVerify = async () => {\n    if (!actionTaken) {\n      setFormError({\n        element: \"action\",\n        msg: \"Action is required!\",\n      });\n      return setLoadingRequest(false);\n    }\n\n    if (isEmptyOrSpaces(responseMsg)) {\n      setFormError({\n        element: \"comment\",\n        msg: \"Reason of rejection is required\",\n      });\n      return setLoadingRequest(false);\n    }\n\n    let subClaim = props.thisClaim.claims.find(\n      (item) => item.level === props.thisClaim.claim_level\n    );\n\n    if (subClaim) {\n      setLoadingRequest(true);\n      const api_body: claimResponseBody = {\n        sub_claim_id: subClaim.id,\n        evaluation_comment: responseMsg,\n        evaluated_by: props.auth.user.user_id,\n        decision_taken_status: actionTaken,\n        evaluator_name: props.auth.user.fname + \" \" + props.auth.user.lname,\n        evaluator_email: props.auth.user.email,\n      };\n\n      try {\n        const res = await axios.put<CandidateClaimInterface>(\n          `${API.CLAIMING}/user/evaluate/${props.thisClaim._id}`,\n          api_body\n        );\n        if (res) {\n          console.log(\"====================================\");\n          console.log({ evaluate_claim_res: res });\n          console.log(\"====================================\");\n          props.evaluateClaim(res.data);\n          // REVALIDATED DOCUMENT IF IT IS APPROVED =========================\n          if (actionTaken === ClaimDecisionStatus.ACCEPTED) {\n            await overrideDecision();\n          }\n          props.PushPopupAlert({\n            title: `Claim responded successfully!`,\n            theme: PopupAlertTheme.success,\n          });\n          // setDocumentId(\"null\");\n          setResponseMsg(\"\");\n          setActionTaken(null);\n        }\n      } catch (error) {\n        console.error(error);\n        props.PushPopupAlert({\n          title: errorToText(error),\n          theme: PopupAlertTheme.danger,\n        });\n      }\n      setLoadingRequest(false);\n    }\n  };\n\n  const getReasonById = (\n    reason_id: string\n  ): claimReasonInterface | undefined => {\n    if (props.claimReasons) {\n      return props.claimReasons.find((item) => item.id === reason_id);\n    }\n    return undefined;\n  };\n\n  const overrideDecision = async () => {\n    try {\n      const res = await axios.patch(\n        `${API.APPLICATION}/tolerateappl/${props.thisClaim.claiming_on_id}`,\n        {\n          user_id: props.auth.user.user_id,\n          email: props.thisClaim.userDetails.email,\n          phone_number: props.thisClaim.userDetails.phone_number,\n          comment: responseMsg,\n          application_status: ApplicationStates.Shortlisted,\n        }\n      );\n\n      res.data &&\n        props.reAssessApplication({\n          application_id: props.thisClaim.claiming_on_id,\n          application_status: ApplicationStates.Shortlisted,\n        });\n    } catch (error) {\n      console.error({ code_error: error });\n      PushPopupAlert({\n        title: errorToText(error),\n        theme: PopupAlertTheme.danger,\n      });\n      // errorToText(error);\n    }\n    setLoadingRequest(false);\n  };\n\n  const getPositionById = (position_id: string): PositionAPI | undefined => {\n    let result = props.systemPositions.find(\n      (item) => item.position_id === position_id\n    );\n\n    return result;\n  };\n\n  return (\n    <section>\n      <div className=\"w-full py-1 divide-y-2 space-y-4\">\n        {/* DOCUMENT DETAILS ==================================================== */}\n        <section className=\"flex flex-col\">\n          {/* DISPLAY PROFILE ==================================================== */}\n          <section className=\"w-full mb-4 -mt-2 pb-3 px-4 bg-white\">\n            <div className=\"flex items-center justify-between\">\n              <div className=\"flex items-center gap-2 px-12\">\n                <span className={`italic text-blue-600`}>Applicant:</span>\n                <span className=\"text-blue-800 font-bold text-xl\">\n                  {props.thisClaim.userDetails.user_info.fname +\n                    \" \" +\n                    props.thisClaim.userDetails.user_info.lname}\n                </span>\n              </div>\n              {false && (\n                <button\n                  type=\"button\"\n                  className=\"bg-blue-200 hover:bg-blue-300 text-blue-700 group-hover:text-blue-800 py-1 px-2 mr-1 rounded text-sm\"\n                  onClick={() => setViewPosition(!viewPosition)}\n                >\n                  {viewPosition ? \"Hide\" : \"More\"}\n                </button>\n              )}\n            </div>\n          </section>\n          {/* DISPLAY POSITION ==================================================== */}\n          <section className=\"w-full mb-4 bg-white px-4 py-2 rounded\">\n            <div className=\"bg-white w-full\">\n              <div className=\"text-gray-800 text-2xl font-bold\">\n                Position Details\n              </div>\n              <div className=\"flex items-center\">\n                <div className=\"flex items-center gap-2\">\n                  <span className={`italic text-gray-600`}>Name:</span>\n                  <span className=\"text-gray-800 font-bold text-2xl\">\n                    {getPositionById(props.thisApplication.position)\n                      ? getPositionById(props.thisApplication.position)!\n                          .position_title\n                      : \"Position not found\"}\n                  </span>\n                </div>\n              </div>\n              <div className=\"flex items-center gap-2 text-base text-gray-600\">\n                <span className={`italic`}>Desc:</span>\n                <span className=\"font-semibold\">\n                  {getPositionById(props.thisApplication.position)\n                    ? getPositionById(props.thisApplication.position)!\n                        .description\n                    : \"\"}\n                </span>\n              </div>\n              <div className=\"flex items-center gap-2 text-base text-gray-600\">\n                <span className={`italic`}>School level:</span>\n                <span className=\"font-semibold\">\n                  {getPositionById(props.thisApplication.position)\n                    ? getPositionById(props.thisApplication.position)!\n                        .school_level_id.school_level_name\n                    : \"\"}\n                </span>\n              </div>\n              <div className=\"flex items-center gap-2 text-base text-gray-600\">\n                <span className={`italic`}>Institute:</span>\n                <span className=\"font-semibold\">\n                  {getPositionById(props.thisApplication.position)\n                    ? getPositionById(props.thisApplication.position)!\n                        .education_institute_id.education_category_title\n                    : \"\"}\n                </span>\n              </div>\n              <div className=\"flex items-center gap-2 text-base text-gray-600\">\n                <span className={`italic`}>Exams:</span>\n                <span className=\"flex items-center gap-2\">\n                  {getPositionById(props.thisApplication.position) ? (\n                    getPositionById(\n                      props.thisApplication.position\n                    )!.courses.map((item, index) => (\n                      <div\n                        key={index + item.course_id}\n                        className=\"flex items-center gap-1\"\n                      >\n                        <span className=\"font-semibold\">\n                          {item.course_name}\n                        </span>\n                        <span className=\"text-gray-600\">\n                          ({item.course_code})\n                        </span>\n                        {index !==\n                          getPositionById(props.thisApplication.position)!\n                            .courses.length -\n                            1 && \",\"}\n                      </div>\n                    ))\n                  ) : (\n                    <NoResult\n                      theme={NoResultThemes.Dark}\n                      value={\"No courses found\"}\n                    />\n                  )}\n                </span>\n              </div>\n\n              <div className=\"text-gray-800 text-2xl font-bold my-2\">\n                Position Requirements\n              </div>\n              {getPositionById(props.thisApplication.position) ? (\n                getPositionById(props.thisApplication.position)!.requirements\n                  .length > 0 ? (\n                  FC_AdminApplicationPositionDistinctCategory(\n                    getPositionById(props.thisApplication.position)!,\n                    props.documentCategories\n                  ).DistinctCategoriesTemp.map((item, index) => (\n                    <div\n                      className=\"bg-gray-100props.thisApplication.position rounded p-2\"\n                      key={index + item.category_id}\n                    >\n                      <div className=\"flex items-center gap-2 text-2xl text-gray-500 font-bold\">\n                        <MdTurnedIn />\n                        <span>{item.category_title}</span>\n                      </div>\n                      <div className=\"border bg-white mt-1\">\n                        <ViewDocRequirements\n                          requirements={FC_AdminApplicationPositionDistinctCategory(\n                            getPositionById(props.thisApplication.position)!,\n                            props.documentCategories\n                          ).PositionsTemp.filter(\n                            (req) => req.category_id === item.category_id\n                          )}\n                          userDocs={props.thisClaim.userDetails.details}\n                        />\n                      </div>\n                    </div>\n                  ))\n                ) : (\n                  <NoResult\n                    theme={NoResultThemes.Dark}\n                    value={\"No requirements\"}\n                  ></NoResult>\n                )\n              ) : (\n                <NoResult\n                  theme={NoResultThemes.Dark}\n                  value={\"No requirements\"}\n                ></NoResult>\n              )}\n            </div>\n          </section>\n          {/* END DISPLAY POSITION ==================================================== */}\n          {/* -------------------------------------------------------------------------------- */}\n          {/* END DISPLAY PROFILE ==================================================== */}\n          {/* {selectedTab === viewTabs.profile && (\n            <div className=\"flex items-center\">\n              <div className=\"flex items-center gap-2\">\n                <span className={`italic text-gray-600`}>Position name:</span>\n                <span className=\"text-gray-800 font-bold text-2xl\">\n                  {getPositionById(props.thisApplication.position)\n                    ? getPositionById(props.thisApplication.position)!\n                        .position_title\n                    : \"Position not found\"}\n                </span>\n              </div>\n            </div>\n          )} */}\n          <section className=\"px-4 py-2 bg-white rounded\">\n            <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n              <span className={`italic`}>Status:</span>\n              <span\n                className={`font-bold ${\n                  props.thisClaim.previous\n                    ? props.thisClaim.previous.status ===\n                      ApplicationStates.Rejected\n                    : props.thisApplication.application_status ===\n                      ApplicationStates.Rejected\n                    ? \"text-yellow-900\"\n                    : \"text-blue-600\"\n                } rounded px-3 py-1`}\n              >\n                {props.thisClaim.previous\n                  ? capitalizeFirstLetter(props.thisClaim.previous.status)\n                  : capitalizeFirstLetter(\n                      props.thisApplication.application_status\n                    )}\n              </span>\n            </div>\n            <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n              <span className={`italic`}>Evaluated by:</span>\n              <span className=\"font-semibold\">\n                {props.thisClaim.previous.evaluater.name}\n              </span>\n            </div>\n            {false && (\n              <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n                <span className={`italic`}>Session:</span>\n                <span className=\"font-bold text-gray-900 py-1\">\n                  {props.thisApplication.application_session}\n                </span>\n              </div>\n            )}\n            <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n              <span className={`italic`}>Date:</span>\n              <span className=\"font-bold text-gray-900 py-1\">\n                {DATE(props.thisApplication.createdAt)}\n              </span>\n            </div>\n            <div className=\"flex items-start gap-2 text-sm text-gray-600\">\n              <span className={`italic`}>Reason:</span>\n              <span\n                className=\"font-normal\"\n                dangerouslySetInnerHTML={{\n                  __html: props.thisClaim.previous\n                    ? props.thisClaim.previous.reason\n                    : props.thisApplication.override_by.comment,\n                }}\n              ></span>\n            </div>\n          </section>\n        </section>\n        {/* END DOCUMENT DETAILS ==================================================== */}\n\n        {/* ################################################################################ */}\n\n        {/* CLAIM LEVEL 1 DETAILS ==================================================== */}\n        {props.thisClaim.claims.length > 0 &&\n          props.thisClaim.claims.map((claim, index) => (\n            <section\n              className=\"flex flex-col px-4 pt-2 pb-3 rounded bg-white\"\n              key={index + claim.id}\n            >\n              <div className=\"text-gray-700 italic font-bold\">\n                Claim Comment (level {index + 1})\n              </div>\n              {/* CLAIM COMMENT ==>> LEVEL 1 ==================================================== */}\n              <div className=\"flex flex-col items-start gap-2 mt-1 border rounded px-4 py-1 bg-gray-50\">\n                <div className=\"flex items-center gap-2 bg-blue-100 rounded py-1 px-2\">\n                  <MdInfoOutline />\n                  {getReasonById(props.thisClaim.default_claim_resaons)\n                    ? getReasonById(props.thisClaim.default_claim_resaons)!\n                        .reason\n                    : \"\"}\n                </div>\n                <p>{claim.reason}</p>\n                <span className=\"text-gray-600 text-xs\">\n                  {showDate(claim.createdAt)}\n                  {/* {showDate(claim.createdAt) +\n                    \" at \" +\n                    moment.unix(claim.date_created).format(\"MM/DD/YYYY\")} */}\n                </span>\n              </div>\n              {/* CLAIM COMMENT ==>> LEVEL 1 ==================================================== */}\n\n              {isClaimEvaluated(props.thisClaim, claim.level) && (\n                <section className=\"mt-4\">\n                  <span className=\"text-gray-700 italic font-semibold\">\n                    Response (level {index + 1})\n                  </span>\n                  <div className=\"border-t-2\">\n                    <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n                      <span className={`italic`}>Status:</span>\n                      <span\n                        className={`font-bold ${\n                          claim.decision_taken_status ===\n                          ClaimDecisionStatus.REJECTED\n                            ? \"text-yellow-900\"\n                            : \"text-blue-600\"\n                        } rounded px-3 py-1`}\n                      >\n                        {capitalizeFirstLetter(\n                          claim.decision_taken_status.toLocaleLowerCase()\n                        )}\n                      </span>\n                    </div>\n                    <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n                      <span className={`italic`}>Evaluated by:</span>\n                      <span className=\"font-semibold\">\n                        {claim.evaluater.name}\n                      </span>\n                    </div>\n                    <div className=\"flex items-start gap-2 text-sm text-gray-600\">\n                      <span className={`italic`}>Reason:</span>\n                      <span\n                        className=\"font-normal\"\n                        dangerouslySetInnerHTML={{\n                          __html: claim.evaluation_comment,\n                        }}\n                      ></span>\n                    </div>\n                  </div>\n                </section>\n              )}\n            </section>\n          ))}\n        {/* END CLAIM LEVEL 1 DETAILS ==================================================== */}\n      </div>\n\n      {/* FOOTER INITIAL ========================================== */}\n      {!actionTaken && (\n        <section className=\"flex items-center justify-between bg-gray-50 rounded mt-3\">\n          {/* SHOWING STATUS ===================================== */}\n          <div className=\"mx-4 my-4\">\n            <span\n              className={`${\n                props.thisClaim.last_claim_status === ClaimStatus.PENDING\n                  ? \"text-yellow-700\"\n                  : props.thisClaim.last_claim_status === ClaimStatus.DELETED\n                  ? \"text-red-700\"\n                  : \"text-green-700\"\n              } italic font-semibold`}\n            >\n              {capitalizeFirstLetter(\n                props.thisClaim.last_claim_status.toLocaleLowerCase()\n              )}\n            </span>\n          </div>\n\n          {props.thisClaim.last_claim_status === ClaimStatus.PENDING && (\n            <div className=\"flex items-center gap-2 px-2\">\n              <button\n                className={`px-4 py-2 font-semibold text-red-50 rounded inline-flex items-center space-x-2 focus:outline-none bg-red-700 hover:bg-red-800`}\n                onClick={() => {\n                  setActionTaken(ClaimDecisionStatus.REJECTED);\n                }}\n              >\n                <MdCancel className=\"w-5 h-5\" />\n                <span>Reject</span>\n              </button>\n              <button\n                className={`px-4 py-2 font-semibold text-blue-50 rounded inline-flex items-center space-x-2 focus:outline-none bg-blue-700 hover:bg-blue-800`}\n                onClick={() => {\n                  setActionTaken(ClaimDecisionStatus.ACCEPTED);\n                }}\n              >\n                <FaRegCheckCircle className=\"w-5 h-5\" />\n                <span>Accept</span>\n              </button>\n            </div>\n          )}\n        </section>\n      )}\n      {/* END FOOTER INITIAL ========================================== */}\n\n      {/* ======================================================== */}\n      {/* FOOTER RESPONSE ========================================== */}\n      {actionTaken && (\n        <section className=\"my-5 overflow-x-auto\">\n          <div className=\"italic text-gray-700 text-base my-1 mx-2\">\n            Selected decision:{\" \"}\n            <span\n              className={`font-semibold text-lg ${\n                actionTaken === ClaimDecisionStatus.ACCEPTED\n                  ? \"text-blue-700\"\n                  : \"text-yellow-800\"\n              }`}\n            >\n              {actionTaken === ClaimDecisionStatus.ACCEPTED\n                ? \"Approved\"\n                : \"Rejected\"}\n            </span>\n          </div>\n          {/* right part */}\n          <div className=\"flex flex-col md:flex-row items-end md:items-start gap-1 w-full\">\n            <div className=\"w-full px-2\">\n              <textarea\n                placeholder={`Reason of your decision...`}\n                cols={50}\n                rows={3}\n                className={`border border-${\n                  formError && formError.element === \"comment\" ? \"red\" : \"gray\"\n                }-400 rounded px-3 py-1 w-full focus:outline-none`}\n                style={{ resize: \"none\" }}\n                value={responseMsg}\n                onChange={(e) => {\n                  setResponseMsg(e.target.value);\n                  setFormError(null);\n                }}\n                disabled={loadingRequest}\n              ></textarea>\n              {formError && formError.element === \"comment\" && (\n                <p className=\"text-red-800\">{formError.msg}</p>\n              )}\n            </div>\n            <div className=\"flex flex-row md:flex-col gap-1 max-w-full px-2\">\n              <button\n                className=\"bg-gray-700 hover:bg-gray-800 px-4 py-2 font-semibold rounded text-white inline-flex items-center space-x-2 focus:outline-none\"\n                onClick={() => {\n                  setResponseMsg(\"\");\n                  setActionTaken(null);\n                  setFormError(null);\n                }}\n                disabled={loadingRequest}\n              >\n                <RiArrowGoBackFill className=\"w-5 h-5\" />\n                <span>Back</span>\n              </button>\n              <button\n                className=\"bg-blue-700 hover:bg-blue-800 px-4 py-2 font-semibold rounded text-white inline-flex items-center space-x-2 focus:outline-none\"\n                disabled={loadingRequest}\n                onClick={() =>\n                  window.confirm(\n                    `Are you sure you want to ${\n                      actionTaken === ClaimDecisionStatus.ACCEPTED\n                        ? \"approve\"\n                        : \"rejected\"\n                    } this document?`\n                  ) && handleVerify()\n                }\n              >\n                {loadingRequest ? (\n                  <div className=\"\">Loading...</div>\n                ) : (\n                  <div className=\"inline-flex items-center space-x-2 gap-1\">\n                    <FaRegCheckCircle className=\"w-5 h-5\" />\n                    <span>Confirm</span>\n                  </div>\n                )}\n              </button>\n            </div>\n          </div>\n          {/* end right part */}\n        </section>\n      )}\n      {/* END FOOTER RESPONSE ========================================== */}\n    </section>\n  );\n};\n\nconst mapStateToProps = ({\n  auth,\n}: StoreState): {\n  auth: Auth;\n} => {\n  return {\n    auth: auth,\n  };\n};\n\nexport default React.memo(\n  connect(mapStateToProps, {\n    evaluateClaim,\n    reAssessApplication,\n    PushPopupAlert,\n  })(AdminClaimAppView)\n);\n","import axios from \"axios\";\nimport React from \"react\";\nimport { FaRegCheckCircle } from \"react-icons/fa\";\nimport { MdCancel, MdInfoOutline } from \"react-icons/md\";\nimport { RiArrowGoBackFill } from \"react-icons/ri\";\nimport { connect } from \"react-redux\";\nimport { adminDisplayClaimTitle } from \".\";\nimport { Auth, PushPopupAlert } from \"../../../actions\";\nimport { evaluateClaim } from \"../../../actions/claiming\";\nimport { verifyDocument } from \"../../../actions/document\";\nimport { VerifyDocumentInterface } from \"../../../actions/users\";\nimport {\n  CandidateClaimInterface,\n  ClaimDecisionStatus,\n  claimReasonInterface,\n  ClaimStatus,\n  ClaimTypesInterfaceAPI,\n} from \"../../../interfaces\";\nimport { PopupAlertTheme } from \"../../../interfaces/popupAlert\";\nimport { StoreState } from \"../../../reducers\";\nimport { DocumentReducerInterface } from \"../../../reducers/document\";\nimport {\n  capitalizeFirstLetter,\n  isEmptyOrSpaces,\n} from \"../../../shared/dataTest\";\nimport {\n  DocValidationStatusInterface,\n  UserDocumentsInterface,\n} from \"../../../shared/interfaces\";\nimport { API } from \"../../../utils/api\";\nimport { errorToText } from \"../../../utils/errors\";\nimport { showDate } from \"../../../utils/functions\";\nimport { isClaimEvaluated } from \"../ClaimDocView\";\n\nexport type claimResponseBody = {\n  sub_claim_id: string;\n  evaluation_comment: string;\n  evaluated_by: string;\n  evaluator_name: string;\n  evaluator_email: string;\n  decision_taken_status: ClaimDecisionStatus;\n};\n\ntype AdminClaimDocViewProps = {\n  thisDoc: UserDocumentsInterface;\n  documentCategories: DocumentReducerInterface;\n  thisClaim: CandidateClaimInterface;\n  claimReasons: claimReasonInterface[] | null;\n  candidateId: string;\n  claimTypes: ClaimTypesInterfaceAPI[];\n  viewImage: boolean;\n  setViewImage: (value: boolean) => void;\n  loadingRequest: boolean;\n  setLoadingRequest: (value: boolean) => void;\n  actionTaken: ClaimDecisionStatus | null;\n  setActionTaken: (value: ClaimDecisionStatus | null) => void;\n  responseMsg: string;\n  setResponseMsg: (value: string) => void;\n  formError: {\n    element: string;\n    msg: string;\n  } | null;\n  setFormError: (\n    value: {\n      element: string;\n      msg: string;\n    } | null\n  ) => void;\n\n  // REDUX ==================\n  auth: Auth;\n  verifyDocument: Function;\n  evaluateClaim: Function;\n  PushPopupAlert: Function;\n};\n\nconst AdminClaimDocView: React.FC<AdminClaimDocViewProps> = (props) => {\n  const handleVerify = async () => {\n    if (!props.actionTaken) {\n      props.setFormError({\n        element: \"action\",\n        msg: \"Action is required!\",\n      });\n      return props.setLoadingRequest(false);\n    }\n\n    if (isEmptyOrSpaces(props.responseMsg)) {\n      props.setFormError({\n        element: \"comment\",\n        msg: \"Reason of rejection is required\",\n      });\n      return props.setLoadingRequest(false);\n    }\n\n    let subClaim = props.thisClaim.claims.find(\n      (item) => item.level === props.thisClaim.claim_level\n    );\n\n    if (subClaim) {\n      props.setLoadingRequest(true);\n      const api_body: claimResponseBody = {\n        sub_claim_id: subClaim.id,\n        evaluation_comment: props.responseMsg,\n        evaluated_by: props.auth.user.user_id,\n        decision_taken_status: props.actionTaken,\n        evaluator_name: props.auth.user.fname + \" \" + props.auth.user.lname,\n        evaluator_email: props.auth.user.email,\n      };\n\n      try {\n        const res = await axios.put<CandidateClaimInterface>(\n          `${API.CLAIMING}/user/evaluate/${props.thisClaim._id}`,\n          api_body\n        );\n        if (res) {\n          console.log({ evaluate_claim_res: res });\n          props.evaluateClaim(res.data);\n          // REVALIDATED DOCUMENT IF IT IS APPROVED =========================\n          if (props.actionTaken === ClaimDecisionStatus.ACCEPTED) {\n            await FC_DocValidation();\n          }\n          props.PushPopupAlert({\n            title: `Claim responded successfully!`,\n            theme: PopupAlertTheme.success,\n          });\n          // setDocumentId(\"null\");\n          props.setResponseMsg(\"\");\n          props.setActionTaken(null);\n        }\n      } catch (error) {\n        console.error(error);\n        props.PushPopupAlert({\n          title: errorToText(error),\n          theme: PopupAlertTheme.danger,\n        });\n      }\n      props.setLoadingRequest(false);\n    }\n  };\n\n  const FC_DocValidation = async () => {\n    const api_body: VerifyDocumentInterface = {\n      user_id: props.thisClaim.user,\n      doc_id: props.thisClaim.claiming_on_id,\n      validation_status:\n        props.actionTaken === ClaimDecisionStatus.ACCEPTED\n          ? DocValidationStatusInterface.APPROVED\n          : DocValidationStatusInterface.REJECTED,\n      validated_by: {\n        user_id: props.auth.user.user_id,\n        comment: props.responseMsg,\n        validation_status:\n          props.actionTaken === ClaimDecisionStatus.ACCEPTED\n            ? DocValidationStatusInterface.APPROVED\n            : DocValidationStatusInterface.REJECTED,\n      },\n      in_education: false,\n      disability: false,\n    };\n    const api_redux: VerifyDocumentInterface = {\n      user_id: props.thisClaim.user,\n      doc_id: props.thisClaim.claiming_on_id,\n      validation_status:\n        props.actionTaken === ClaimDecisionStatus.ACCEPTED\n          ? DocValidationStatusInterface.APPROVED\n          : DocValidationStatusInterface.REJECTED,\n      validated_by: {\n        user_id: props.auth.user.user_id,\n        comment: props.responseMsg,\n        validation_status:\n          props.actionTaken === ClaimDecisionStatus.ACCEPTED\n            ? DocValidationStatusInterface.APPROVED\n            : DocValidationStatusInterface.REJECTED,\n        date: \"\",\n      },\n      in_education: false,\n      disability: false,\n    };\n\n    try {\n      const res = await axios.post<VerifyDocumentInterface>(\n        `${API.AUTH}/validateuserdoc`,\n        api_body\n      );\n      if (res) {\n        props.verifyDocument(api_redux);\n        await FC_shortListing(props.thisClaim.user);\n        // setDocumentId(\"null\");\n      }\n    } catch (error) {\n      console.error(error);\n      props.PushPopupAlert({\n        title: errorToText(error),\n        theme: PopupAlertTheme.danger,\n      });\n    }\n  };\n\n  const FC_shortListing = async (candidate_id: string) => {\n    try {\n      const res = await axios.patch(\n        `${API.APPLICATION}/doccheckshortlist/${candidate_id}`\n      );\n      console.log({ res });\n    } catch (error) {\n      console.error({ error });\n      props.PushPopupAlert({\n        title: errorToText(error),\n        theme: PopupAlertTheme.danger,\n      });\n    }\n  };\n\n  const getReasonById = (\n    reason_id: string\n  ): claimReasonInterface | undefined => {\n    if (props.claimReasons) {\n      return props.claimReasons.find((item) => item.id === reason_id);\n    }\n    return undefined;\n  };\n\n  return (\n    <section className=\"\">\n      <div className=\"w-full bg-white px-4 py-1 divide-y-2 space-y-2\">\n        {/* DOCUMENT DETAILS ==================================================== */}\n        <section className=\"flex flex-col\">\n          <div className=\"flex items-center justify-between\">\n            <div className=\"flex items-center gap-2\">\n              <span className={`italic text-gray-600`}>Names:</span>\n              <span className=\"text-gray-800 font-bold text-xl\">\n                {props.thisClaim.userDetails.user_info.fname +\n                  \" \" +\n                  props.thisClaim.userDetails.user_info.lname}\n              </span>\n            </div>\n            <button\n              type=\"button\"\n              className=\"bg-blue-200 hover:bg-blue-300 text-blue-700 group-hover:text-blue-800 py-1 px-2 mr-1 rounded text-sm\"\n              onClick={() => props.setViewImage(!props.viewImage)}\n            >\n              {props.viewImage ? \"Hide\" : \"View\"}\n            </button>\n          </div>\n          <div className=\"flex items-center gap-2\">\n            <span className={`italic text-gray-600`}>Title:</span>\n            <span className=\"text-gray-800 font-bold text-2xl\">\n              {/* {ClaimGetDocTitle(props.documentCategories, props.thisDoc).main} */}\n              {props.thisClaim.userDetails.details.filter(\n                (item) => item.validation_status !== \"waiting\"\n              ).length > 0\n                ? adminDisplayClaimTitle(\n                    props.documentCategories,\n                    props.thisClaim.userDetails.details.filter(\n                      (item) => item.validation_status !== \"waiting\"\n                    ),\n                    props.thisClaim\n                  )\n                : \"-\"}\n            </span>\n          </div>\n          <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n            <span className={`italic`}>Status:</span>\n            <span className=\"font-bold text-yellow-900 rounded px-3 py-1\">\n              {props.thisClaim.previous\n                ? capitalizeFirstLetter(props.thisClaim.previous.status)\n                : capitalizeFirstLetter(props.thisDoc.validation_status)}\n            </span>\n          </div>\n          <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n            <span className={`italic`}>Evaluated by:</span>\n            <span className=\"font-semibold\">\n              {props.thisClaim.previous.evaluater.name}\n            </span>\n          </div>\n          <div className=\"flex items-start gap-2 text-sm text-gray-600\">\n            <span className={`italic`}>Reason:</span>\n            <span className=\"font-normal\">\n              {props.thisClaim.previous\n                ? props.thisClaim.previous.reason\n                : props.thisDoc.validated_by.commet}\n            </span>\n          </div>\n\n          {/* DISPLAY IMAGE ==================================================== */}\n          {props.viewImage && (\n            <div className=\"w-full my-1 animate__animated animate__fadeIn\">\n              <img\n                src={`${API.AUTH_FILES}/${props.thisDoc.files}`}\n                alt=\"doc file\"\n                className={`w-full animate__animated animate__fadeIn`}\n              />\n            </div>\n          )}\n          {/* END DISPLAY IMAGE ==================================================== */}\n        </section>\n        {/* END DOCUMENT DETAILS ==================================================== */}\n\n        {/* ################################################################################ */}\n\n        {/* CLAIM LEVEL 1 DETAILS ==================================================== */}\n        {props.thisClaim.claims.length > 0 &&\n          props.thisClaim.claims.map((claim, index) => (\n            <section className=\"flex flex-col px-2 pt-3\" key={index + claim.id}>\n              <div className=\"text-gray-700 italic font-bold\">\n                Claim Comment (level {index + 1})\n              </div>\n              {/* CLAIM COMMENT ==>> LEVEL 1 ==================================================== */}\n              <div className=\"flex flex-col items-start gap-2 mt-1 border rounded px-4 py-1 bg-gray-50\">\n                <div className=\"flex items-center gap-2 bg-blue-100 rounded py-1 px-2\">\n                  <MdInfoOutline />\n                  {getReasonById(props.thisClaim.default_claim_resaons)\n                    ? getReasonById(props.thisClaim.default_claim_resaons)!\n                        .reason\n                    : \"\"}\n                </div>\n                <p>{claim.reason}</p>\n                <span className=\"text-gray-500 text-xs\">\n                  {showDate(claim.createdAt)}\n                </span>\n              </div>\n              {/* CLAIM COMMENT ==>> LEVEL 1 ==================================================== */}\n\n              {isClaimEvaluated(props.thisClaim, claim.level) && (\n                <section className=\"mt-4\">\n                  <span className=\"text-gray-700 italic font-semibold\">\n                    Response (level {index + 1})\n                  </span>\n                  <div className=\"border-t-2\">\n                    <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n                      <span className={`italic`}>Status:</span>\n                      <span\n                        className={`font-bold ${\n                          claim.decision_taken_status ===\n                          ClaimDecisionStatus.REJECTED\n                            ? \"text-yellow-900\"\n                            : \"text-blue-600\"\n                        } rounded px-3 py-1`}\n                      >\n                        {capitalizeFirstLetter(\n                          claim.decision_taken_status.toLocaleLowerCase()\n                        )}\n                      </span>\n                    </div>\n                    <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n                      <span className={`italic`}>Evaluated by:</span>\n                      <span className=\"font-semibold\">\n                        {claim.evaluater.name}\n                      </span>\n                    </div>\n                    <div className=\"flex items-start gap-2 text-sm text-gray-600\">\n                      <span className={`italic`}>Reason:</span>\n                      <span className=\"font-normal\">\n                        {claim.evaluation_comment}\n                      </span>\n                    </div>\n                  </div>\n                </section>\n              )}\n            </section>\n          ))}\n        {/* END CLAIM LEVEL 1 DETAILS ==================================================== */}\n      </div>\n\n      {/* FOOTER INITIAL ========================================== */}\n      {!props.actionTaken && (\n        <section className=\"flex items-center justify-between bg-gray-50 rounded mt-3\">\n          {/* SHOWING STATUS ===================================== */}\n          <div className=\"mx-4\">\n            <span\n              className={`${\n                props.thisClaim.last_claim_status === ClaimStatus.PENDING\n                  ? \"text-yellow-700\"\n                  : props.thisClaim.last_claim_status === ClaimStatus.DELETED\n                  ? \"text-red-700\"\n                  : \"text-green-700\"\n              } italic font-semibold`}\n            >\n              {capitalizeFirstLetter(\n                props.thisClaim.last_claim_status.toLocaleLowerCase()\n              )}\n            </span>\n          </div>\n\n          {props.thisClaim.last_claim_status === ClaimStatus.PENDING && (\n            <div className=\"flex items-center gap-2 px-2\">\n              <button\n                className={`px-4 py-2 font-semibold text-red-50 rounded inline-flex items-center space-x-2 focus:outline-none bg-red-700 hover:bg-red-800`}\n                onClick={() => {\n                  props.setActionTaken(ClaimDecisionStatus.REJECTED);\n                }}\n              >\n                <MdCancel className=\"w-5 h-5\" />\n                <span>Reject</span>\n              </button>\n              <button\n                className={`px-4 py-2 font-semibold text-blue-50 rounded inline-flex items-center space-x-2 focus:outline-none bg-blue-700 hover:bg-blue-800`}\n                onClick={() => {\n                  props.setActionTaken(ClaimDecisionStatus.ACCEPTED);\n                }}\n              >\n                <FaRegCheckCircle className=\"w-5 h-5\" />\n                <span>Accept</span>\n              </button>\n            </div>\n          )}\n        </section>\n      )}\n      {/* END FOOTER INITIAL ========================================== */}\n\n      {/* ======================================================== */}\n      {/* FOOTER RESPONSE ========================================== */}\n      {props.actionTaken && (\n        <section className=\"my-5 overflow-x-auto\">\n          <div className=\"italic text-gray-700 text-base my-1 mx-2\">\n            Selected decision:{\" \"}\n            <span\n              className={`font-semibold text-lg ${\n                props.actionTaken === ClaimDecisionStatus.ACCEPTED\n                  ? \"text-blue-700\"\n                  : \"text-yellow-800\"\n              }`}\n            >\n              {props.actionTaken === ClaimDecisionStatus.ACCEPTED\n                ? \"Approved\"\n                : \"Rejected\"}\n            </span>\n          </div>\n          {/* right part */}\n          <div className=\"flex flex-col md:flex-row items-end md:items-start gap-1 w-full\">\n            <div className=\"w-full px-2\">\n              <textarea\n                placeholder={`Reason of your decision...`}\n                cols={50}\n                rows={3}\n                className={`border border-${\n                  props.formError && props.formError.element === \"comment\"\n                    ? \"red\"\n                    : \"gray\"\n                }-400 rounded px-3 py-1 w-full focus:outline-none`}\n                style={{ resize: \"none\" }}\n                value={props.responseMsg}\n                onChange={(e) => {\n                  props.setResponseMsg(e.target.value);\n                  props.setFormError(null);\n                }}\n                disabled={props.loadingRequest}\n              ></textarea>\n              {props.formError && props.formError.element === \"comment\" && (\n                <p className=\"text-red-800\">{props.formError.msg}</p>\n              )}\n            </div>\n            <div className=\"flex flex-row md:flex-col gap-1 max-w-full px-2\">\n              <button\n                className=\"bg-gray-700 hover:bg-gray-800 px-4 py-2 font-semibold rounded text-white inline-flex items-center space-x-2 focus:outline-none\"\n                onClick={() => {\n                  props.setResponseMsg(\"\");\n                  props.setActionTaken(null);\n                  props.setFormError(null);\n                }}\n                disabled={props.loadingRequest}\n              >\n                <RiArrowGoBackFill className=\"w-5 h-5\" />\n                <span>Back</span>\n              </button>\n              <button\n                className=\"bg-blue-700 hover:bg-blue-800 px-4 py-2 font-semibold rounded text-white inline-flex items-center space-x-2 focus:outline-none\"\n                disabled={props.loadingRequest}\n                onClick={() =>\n                  window.confirm(\n                    `Are you sure you want to ${\n                      props.actionTaken === ClaimDecisionStatus.ACCEPTED\n                        ? \"approve\"\n                        : \"rejected\"\n                    } this document?`\n                  ) && handleVerify()\n                }\n              >\n                {props.loadingRequest ? (\n                  <div className=\"\">Loading...</div>\n                ) : (\n                  <div className=\"inline-flex items-center space-x-2 gap-1\">\n                    <FaRegCheckCircle className=\"w-5 h-5\" />\n                    <span>Confirm</span>\n                  </div>\n                )}\n              </button>\n            </div>\n          </div>\n          {/* end right part */}\n        </section>\n      )}\n      {/* END FOOTER RESPONSE ========================================== */}\n    </section>\n  );\n};\n\nconst mapStateToProps = ({\n  auth,\n}: StoreState): {\n  auth: Auth;\n} => {\n  return {\n    auth: auth,\n  };\n};\n\nexport default React.memo(connect(mapStateToProps, {\n  evaluateClaim,\n  verifyDocument,\n  PushPopupAlert,\n})(AdminClaimDocView));\n","import React, { Component } from \"react\";\nimport { MdArrowBack, MdInfoOutline } from \"react-icons/md\";\nimport { connect } from \"react-redux\";\nimport { Auth, loadCourses, PushPopupAlert } from \"../../../actions\";\nimport {\n  getAllClaims,\n  getAllApplications,\n  getClaimReasons,\n  getAllAnswers,\n} from \"../../../actions/claiming\";\nimport {\n  getDocumentCategory,\n  getDocumentSubCategory,\n  getDocumentFields,\n} from \"../../../actions/document\";\nimport { GetAllSessionPlans } from \"../../../actions/session\";\nimport { getPositions } from \"../../../actions/settings\";\nimport { PopupAlertData } from \"../../../components/Alert/Popup\";\nimport Loading from \"../../../components/Loading/Loading\";\nimport TableLoading from \"../../../components/Loading/TableLoading\";\nimport { SideNavigation } from \"../../../components/Navigation/SideNavigation\";\nimport NoResult, {\n  NoResultThemes,\n} from \"../../../components/NoResult/NoResult\";\nimport {\n  SessionPlanInterface,\n  PositionAPI,\n  allClaimApplicationInterface,\n  CandidateClaimInterface,\n  PlansTypeKeys,\n  ClaimDecisionStatus,\n  ClaimTypesInterface,\n  course,\n} from \"../../../interfaces\";\nimport { PopupAlertTheme } from \"../../../interfaces/popupAlert\";\nimport { StoreState } from \"../../../reducers\";\nimport { ClaimingReducerType } from \"../../../reducers/claiming\";\nimport { DocumentReducerInterface } from \"../../../reducers/document\";\nimport { capitalizeFirstLetter } from \"../../../shared/dataTest\";\nimport { UserDocumentsInterface } from \"../../../shared/interfaces\";\nimport { DATE } from \"../../../utils/functions\";\nimport search from \"../../../utils/search\";\nimport { getClaimById, whichClaimStatus, whichClaimType } from \"../Candidate\";\nimport { getCourseById, getCourseIdBySheetId } from \"../Candidate/FormExamList\";\nimport ClaimHeaderTitle from \"../ClaimHeaderTitle\";\nimport AdminClaimAppView from \"./AdminClaimAppView\";\nimport AdminClaimDocView from \"./AdminClaimDocView\";\nimport AdminClaimExamView from \"./AdminClaimExamView\";\nimport AdminFilterByType, {\n  filterClaimsByClaimType,\n} from \"./AdminFilterByType\";\n\n// export const getUserDocuments = (\n//   userList: UserInterface[],\n//   user_id: String\n// ): { user: UserInterface; document: UserDocumentsInterface[] } | null => {\n//   const thisUser = userList.find((item) => item.user_id === user_id);\n//   if (thisUser) {\n//     const thisDoc = thisUser.details.filter(\n//       (item) => item.validation_status !== \"waiting\"\n//     );\n//     return { user: thisUser, document: thisDoc };\n//   }\n//   return null;\n// };\n\nexport const adminDisplayClaimTitle = (\n  documentCategories: DocumentReducerInterface,\n  candidateDocuments: UserDocumentsInterface[],\n  thisClaim: CandidateClaimInterface\n): string => {\n  let result: string = \"\";\n\n  // CHECK IF CLAIM IS FOR DOCUMENTS ===============================================\n  if (thisClaim.type_key === PlansTypeKeys.DOCUMENT_VALIDATION) {\n    let thisDoc = candidateDocuments.find(\n      (item) => item.doc_id === thisClaim.claiming_on_id\n    );\n    result = thisDoc\n      ? AdminClaimGetDocTitle(documentCategories, thisDoc).main\n      : \"Document not found\";\n  }\n  // END CHECK IF CLAIM IS FOR DOCUMENTS ===============================================\n\n  return result;\n};\n\nexport const AdminClaimGetDocTitle = (\n  documentCategories: DocumentReducerInterface,\n  doc: UserDocumentsInterface\n): { category: string; sub_category: string; field: string; main: string } => {\n  let DocCategory: string = \"\",\n    DocSubCategory: string = \"\",\n    DocField: string = \"\",\n    DocTitle: string = \"\";\n  if (\n    doc.sub_category_id &&\n    doc.sub_category_id.length > 0 &&\n    documentCategories.documentSubCategory\n  ) {\n    DocTitle = documentCategories.documentSubCategory.filter(\n      (c) => c.user_detail_subcategory_id === doc.sub_category_id\n    )[0].title;\n    DocSubCategory = DocTitle;\n  } else if (\n    doc.category_id.length > 0 &&\n    documentCategories.documentCategory\n  ) {\n    DocTitle = documentCategories.documentCategory.filter(\n      (c) => c.user_detail_category_id === doc.category_id\n    )[0].title;\n    DocCategory = DocTitle;\n  }\n  if (\n    doc.category_subcategory_data.length > 0 &&\n    documentCategories.documentFields\n  ) {\n    DocField = documentCategories.documentFields.filter(\n      (c) => c._id === doc.category_subcategory_data\n    )[0].title;\n    DocTitle += \" in \" + DocField;\n  }\n\n  return {\n    category: DocCategory,\n    sub_category: DocSubCategory,\n    field: DocField,\n    main: DocTitle,\n  };\n};\n\nexport const getApplicationById = (\n  allApplications: allClaimApplicationInterface[] | null,\n  systemPositions: PositionAPI[] | null,\n  application_id: String\n): {\n  application: allClaimApplicationInterface;\n  position: PositionAPI;\n} | null => {\n  if (allApplications) {\n    let thisApplication = allApplications.find(\n      (item) => item._id === application_id\n    );\n    if (thisApplication && systemPositions) {\n      let thisPosition = systemPositions.find(\n        (item) => item.position_id === thisApplication!.position\n      );\n      if (thisPosition) {\n        return { application: thisApplication, position: thisPosition };\n      }\n    }\n  }\n  return null;\n};\n\ntype AppProps = {\n  auth: Auth;\n  application_sessions: SessionPlanInterface[] | null;\n  claiming: ClaimingReducerType;\n  documentReducer: DocumentReducerInterface;\n  systemPositions: PositionAPI[] | null;\n  courses: course[] | null;\n  loadCourses: Function;\n  getPositions: Function;\n  getClaimReasons: Function;\n  getAllApplications: Function;\n  getAllClaims: Function;\n  getAllAnswers: Function;\n  GetAllSessionPlans: Function;\n  getDocumentCategory: Function;\n  getDocumentSubCategory: Function;\n  getDocumentFields: Function;\n  verifyAllDocument: Function;\n  PushPopupAlert: (alert: PopupAlertData) => void;\n};\n\ntype AppState = {\n  loading: boolean;\n  loadingData: boolean;\n  thisPeriod: SessionPlanInterface | null;\n  viewClaim: boolean;\n  periodChanged: boolean;\n  claimId: string | null;\n  claimType: string | null;\n  candidateId: string | null;\n  searchClaim: string;\n\n  // FOR FORM ================\n  viewImage: boolean;\n  loadingRequest: boolean;\n  actionTaken: ClaimDecisionStatus | null;\n  responseMsg: string;\n  formError: {\n    element: string;\n    msg: string;\n  } | null;\n};\n\nclass Index extends Component<AppProps, AppState> {\n  constructor(props: AppProps) {\n    super(props);\n\n    this.state = {\n      loading: true,\n      loadingData: false,\n      thisPeriod: null,\n      viewClaim: false,\n      periodChanged: false,\n      claimId: null,\n      claimType: null,\n      candidateId: null,\n      searchClaim: \"\",\n\n      // FOR FORM ================\n      viewImage: false,\n      loadingRequest: false,\n      actionTaken: null,\n      responseMsg: \"\",\n      formError: null,\n    };\n  }\n\n  setLoading = (value: boolean) => {\n    this.setState({ loading: value });\n  };\n\n  setLoadingData = (value: boolean) => {\n    this.setState({ loadingData: value });\n  };\n\n  setPeriodChanged = (value: boolean) => {\n    this.setState({ periodChanged: value });\n  };\n\n  setThisPeriod = (value: SessionPlanInterface | null) => {\n    this.setState({ thisPeriod: value });\n  };\n\n  setViewClaim = (value: boolean) => {\n    this.setState({ viewClaim: value });\n  };\n\n  // ------------------------------\n  setClaimId = (value: string | null) => {\n    this.setState({ claimId: value });\n  };\n  setClaimType = (value: string | null) => {\n    this.setState({ claimType: value });\n  };\n  setCandidateId = (value: string | null) => {\n    this.setState({ candidateId: value });\n  };\n  setViewImage = (value: boolean) => {\n    this.setState({ viewImage: value });\n  };\n  setLoadingRequest = (value: boolean) => {\n    this.setState({ loadingRequest: value });\n  };\n\n  setActionTaken = (value: ClaimDecisionStatus | null) => {\n    this.setState({ actionTaken: value });\n  };\n\n  setResponseMsg = (value: string) => {\n    this.setState({ responseMsg: value });\n  };\n\n  setFormError = (\n    value: {\n      element: string;\n      msg: string;\n    } | null\n  ) => {\n    this.setState({ formError: value });\n  };\n\n  setDefaultSession = (sessions: SessionPlanInterface[]) => {\n    // SETTING ACTIVE SESSION ==========================\n    if (this.state.thisPeriod === null) {\n      let thisSession = sessions.find((item) => item.is_active === true);\n      this.setThisPeriod(thisSession ? thisSession : sessions[0]);\n      this.loadsAllClaims(thisSession ? thisSession : sessions[0]);\n    }\n  };\n\n  setSearchClaim = (value: string) => {\n    this.setState({ searchClaim: value });\n  };\n\n  loadsAllClaims = (thisSession: SessionPlanInterface) => {\n    // LOADING CLAIMING OF CURRENT CANDIDATES ================================\n    if (this.props.claiming.allClaims === null) {\n      this.props.getAllClaims(\n        2,\n        thisSession.session_plan_id,\n        (status: boolean, msg: string) => {\n          this.setLoading(status);\n          if (!status && msg.length) {\n            this.props.PushPopupAlert({\n              title: msg,\n              theme: PopupAlertTheme.danger,\n            });\n          }\n        }\n      );\n    }\n  };\n\n  loadsApplications = (application_id: string) => {\n    // LOADING CLAIMING OF CURRENT CANDIDATES ================================\n    if (\n      !this.props.claiming.allApplications.find(\n        (item) => item._id === application_id\n      )\n    ) {\n      this.props.getAllApplications(\n        application_id,\n        (status: boolean, msg: string) => {\n          this.setLoading(status);\n          if (!status && msg.length) {\n            this.props.PushPopupAlert({\n              title: msg,\n              theme: PopupAlertTheme.danger,\n            });\n          }\n        }\n      );\n    }\n  };\n\n  loadsController = (file_id: string, claimType: PlansTypeKeys) => {\n    if (claimType === PlansTypeKeys.APPLICATION)\n      this.loadsApplications(file_id);\n    if (claimType === PlansTypeKeys.EXAMINATION) this.loadsAlAnswers(file_id);\n  };\n\n  loadsAlAnswers = (answersheet_id: string) => {\n    // LOADING CLAIMING OF CURRENT CANDIDATES ================================\n    if (\n      !this.props.claiming.allAnswer.find(\n        (item) => item.answer_sheet_id === answersheet_id\n      )\n    ) {\n      this.props.getAllAnswers(\n        answersheet_id,\n        (status: boolean, msg: string) => {\n          this.setLoading(status);\n          if (!status && msg.length) {\n            this.props.PushPopupAlert({\n              title: msg,\n              theme: PopupAlertTheme.danger,\n            });\n          }\n        }\n      );\n    }\n  };\n\n  componentDidMount = () => {\n    // LOADING APPLICATION SESSION ====================================\n    if (this.props.application_sessions === null) {\n      this.props.GetAllSessionPlans(\n        (status: boolean, msg: string, data?: SessionPlanInterface[]) => {\n          this.setLoading(status);\n          if (!status) {\n            if (msg.length) {\n              this.props.PushPopupAlert({\n                title: msg,\n                theme: PopupAlertTheme.danger,\n              });\n            }\n            if (data && data.length > 0) {\n              this.setDefaultSession(data);\n            }\n          }\n        }\n      );\n    } else if (this.props.application_sessions.length > 0) {\n      this.setDefaultSession(this.props.application_sessions);\n    }\n\n    // LOADING DOCUMENT CATEGORIES ==========================\n    if (!this.props.documentReducer.documentCategory) {\n      this.props.getDocumentCategory();\n      this.setLoading(false);\n    }\n\n    // LOADING DOCUMENT CLARIFICATIONS ==========================\n    if (!this.props.documentReducer.documentSubCategory) {\n      this.props.getDocumentSubCategory();\n      this.setLoading(false);\n    }\n\n    // LOADING DOCUMENT FIELDS ==========================\n    if (!this.props.documentReducer.documentFields) {\n      this.props.getDocumentFields();\n      this.setLoading(false);\n    }\n\n    if (this.props.systemPositions === null) {\n      this.props.getPositions((status: boolean, msg: string) => {\n        this.setLoading(status);\n        console.log({ status: status, msg: msg });\n        if (msg.length) {\n          this.props.PushPopupAlert({\n            title: msg,\n            theme: PopupAlertTheme.danger,\n          });\n        }\n      });\n    } else if (this.state.loading) {\n      this.setLoading(false);\n    }\n\n    if (this.props.claiming.claimReasons === null) {\n      this.props.getClaimReasons((status: boolean, msg: string) => {\n        this.setLoading(status);\n        if (!status) {\n          if (msg.length > 0) {\n            this.props.PushPopupAlert({\n              title: msg,\n              theme: PopupAlertTheme.danger,\n            });\n          }\n        }\n      });\n    }\n\n    if (\n      this.props.courses === null ||\n      (this.props.courses.length === 0 && this.state.loading)\n    ) {\n      this.props.loadCourses(this.setLoading);\n      this.setLoading(false);\n    } else {\n      this.setLoading(false);\n    }\n  };\n\n  displayClaimTitle = (\n    thisClaim: CandidateClaimInterface\n  ): string | JSX.Element => {\n    let result: string = thisClaim.claiming_on_id;\n    if (thisClaim.type_key === PlansTypeKeys.DOCUMENT_VALIDATION) {\n      let thisDocs = thisClaim.userDetails.details.filter(\n        (item) => item.validation_status !== \"waiting\"\n      );\n      result =\n        thisDocs.length > 0\n          ? adminDisplayClaimTitle(\n              this.props.documentReducer,\n              thisDocs,\n              thisClaim\n            )\n          : \"Document not found\";\n    }\n    if (thisClaim.type_key === PlansTypeKeys.APPLICATION) {\n      if (this.props.claiming.allApplications) {\n        let thisApplication = this.props.claiming.allApplications.find(\n          (item) => item._id === thisClaim.claiming_on_id\n        );\n        if (\n          thisApplication &&\n          this.props.claiming.allApplications &&\n          this.props.systemPositions\n        ) {\n          let thisPosition = this.props.systemPositions.find(\n            (item) => item.position_id === thisApplication!.position\n          );\n          if (thisPosition) {\n            result = thisPosition.position_title;\n          } else {\n            result = \"Application not found\";\n          }\n        }\n      }\n    }\n\n    if (\n      thisClaim.type_key === PlansTypeKeys.EXAMINATION &&\n      this.props.courses &&\n      this.props.claiming.allAnswer\n    ) {\n      let thisAnswer = getCourseIdBySheetId(\n        this.props.claiming.allAnswer,\n        thisClaim.claiming_on_id\n      );\n      if (thisAnswer && getCourseById(this.props.courses, thisAnswer.course)) {\n        result =\n          \"Exam of \" +\n          getCourseById(this.props.courses, thisAnswer.course)!.course_name;\n      } else {\n        result = \"Unknown exam\";\n      }\n    }\n\n    return result;\n  };\n\n  onPeriodChange = (period_id: string) => {\n    this.setPeriodChanged(true);\n    this.props.getAllClaims(2, period_id, (status: boolean, msg: string) => {\n      !status && this.setPeriodChanged(false);\n      this.setLoadingData(status);\n      if (status === false && msg.length) {\n        this.props.PushPopupAlert({\n          title: msg,\n          theme: PopupAlertTheme.danger,\n        });\n      }\n    });\n  };\n\n  getLastClaimDate = (claim: CandidateClaimInterface): string => {\n    let result: string = DATE(claim.createdAt);\n    const claimsLength: number = claim.claims.length;\n    result = DATE(claim.claims[claimsLength - 1].createdAt);\n    return result;\n  };\n\n  render() {\n    if (this.props.application_sessions === null) {\n      return (\n        <div className=\"text-center mt-7 font-bold text-4xl text-gray-400 animate-pulse\">\n          Loading Data...\n        </div>\n      );\n    }\n\n    if (this.props.application_sessions.length === 0) {\n      return (\n        <div className=\"bg-yellow-100 rounded flex flex-col items-center justify-center p-6 my-8 text-yellow-900 border border-yellow-900\">\n          <MdInfoOutline className=\"text-6xl md:text-9xl\" />\n          <div className=\"text-center flex flex-col\">\n            <span className=\"text-2xl md:text-4xl font-extrabold\">\n              No active session\n            </span>\n            <span className=\"text-lg\">\n              Please Wait for the system to publish the sessions or contact the\n              administrator\n            </span>\n          </div>\n        </div>\n      );\n    }\n\n    if (this.props.claiming.allClaims === null) {\n      return (\n        <div className=\"text-center mt-7 font-bold text-4xl text-gray-400 animate-pulse\">\n          Loading Data...\n        </div>\n      );\n    }\n\n    console.log(\"=================viewClaim===================\");\n    console.log({\n      allClaims: this.props.claiming.allClaims,\n      viewClaim: this.state.viewClaim,\n      candidateId: this.state.candidateId,\n      claimId: this.state.claimId,\n      // getClaimById: getClaimById(\n      //   this.props.claiming.allClaims,\n      //   this.state.claimId\n      // ),\n      claimTypes: this.props.claiming.claimTypes,\n    });\n    console.log(\"==================viewClaim==================\");\n\n    return (\n      <div>\n        {/* SIDE NAVIGATION */}\n        {!this.state.viewClaim && (\n          <SideNavigation>\n            {/* FILTER SECTION */}\n            <AdminFilterByType loadingClaims={this.state.loadingData} />\n            {/* END FILTER SECTION */}\n          </SideNavigation>\n        )}\n        {/* END SIDE NAVIGATION */}\n\n        {/* 00000000000000000000000000000000000 */}\n\n        {/* CLAIM TITLE ===================================== */}\n        {!this.state.viewClaim && (\n          <ClaimHeaderTitle\n            headerTitle={`${\n              this.props.claiming.selectedClaimType === \"all\"\n                ? \"All\"\n                : this.props.claiming.selectedClaimType ===\n                  PlansTypeKeys.DOCUMENT_VALIDATION\n                ? \"Documents\"\n                : this.props.claiming.selectedClaimType ===\n                  PlansTypeKeys.APPLICATION\n                ? \"Applications\"\n                : this.props.claiming.selectedClaimType ===\n                  PlansTypeKeys.EXAMINATION\n                ? \"Exam\"\n                : this.props.claiming.selectedClaimType ===\n                  PlansTypeKeys.MARKS_PUBLICATION\n                ? \"Marks publication\"\n                : this.props.claiming.selectedClaimType ===\n                  PlansTypeKeys.PLACEMENT_TRANSFER\n                ? \"Placements\"\n                : \"\"\n            } Claiming`}\n            loading={this.state.loadingData}\n            loadingSession={this.state.loading}\n            thisPeriod={this.state.thisPeriod}\n            setThisPeriod={this.setThisPeriod}\n            setLoadingSession={this.setLoadingData}\n            application_sessions={this.props.application_sessions}\n            onPeriodChange={this.onPeriodChange}\n            periodChanged={this.state.periodChanged}\n          />\n        )}\n        {/* END CLAIM TITLE ===================================== */}\n\n        {/* 00000000000000000000000000000000000 */}\n\n        {/* CLAIM CONTENT LIST ===================================== */}\n        {!this.state.viewClaim && (\n          <section className=\"bg-white w-full p-1\">\n            {/* FILTER FORM =================================== */}\n            <section className=\"flex flex-col-reverse sm:flex-row items-center gap-2 w-full my-2\">\n              <div className=\"w-full\">\n                <input\n                  onChange={(e: React.ChangeEvent<HTMLInputElement>) =>\n                    this.setSearchClaim(e.target.value)\n                  }\n                  type=\"text\"\n                  className=\"input-white h-10 text-sm border-2 border-gray-400 focus:border-gray-500 w-full\"\n                  placeholder={`Search claim by title or type`}\n                  value={this.state.searchClaim}\n                  disabled={\n                    filterClaimsByClaimType(\n                      this.props.claiming.allClaims,\n                      this.props.claiming.selectedClaimType\n                    ).length > 0\n                      ? false\n                      : true\n                  }\n                />\n              </div>\n            </section>\n            {/* END FILTER FORM =================================== */}\n            <div className=\"w-full overflow-x-auto\">\n              <table className=\"w-full shadow\" id=\"report_content\">\n                <thead className=\"bg-white border-b-2 border-gray-300 text-gray-600 font-bold text-sm\">\n                  <tr>\n                    <td className=\"px-2 py-2\">#</td>\n                    <td className=\"px-2 py-2\">Applicant names</td>\n                    <td className=\"px-2 py-2\">Claim title</td>\n                    <td className=\"px-2 py-2\">Claim date</td>\n                    {this.props.claiming.selectedClaimType === \"all\" && (\n                      <td className=\"px-2 py-2\">Claim type</td>\n                    )}\n                    <td className=\"px-2 py-2\">Claim level</td>\n                    <td className=\"px-2 py-2\">Claim status</td>\n                    <td className=\"px-2 py-2\"></td>\n                  </tr>\n                </thead>\n                <tbody>\n                  {!this.props.claiming.allClaims ||\n                  !this.props.claiming.claimTypes ||\n                  !this.props.systemPositions ||\n                  this.state.loadingData ? (\n                    <TableLoading\n                      cols={\n                        this.props.claiming.selectedClaimType === \"all\" ? 8 : 7\n                      }\n                    />\n                  ) : search(\n                      filterClaimsByClaimType(\n                        this.props.claiming.allClaims,\n                        this.props.claiming.selectedClaimType\n                      ),\n                      this.state.searchClaim\n                    ).length <= 0 ? (\n                    <tr\n                      className=\"border-b border-gray-200 group hover:bg-gray-50 cursor-pointer\"\n                      key={Math.random()}\n                    >\n                      <td className=\"px-3 py-1\" colSpan={8}>\n                        <NoResult\n                          theme={NoResultThemes.Light}\n                          value={\"No claim found!\"}\n                        />\n                      </td>\n                    </tr>\n                  ) : (\n                    search(\n                      filterClaimsByClaimType(\n                        this.props.claiming.allClaims,\n                        this.props.claiming.selectedClaimType\n                      ),\n                      this.state.searchClaim\n                    ).map((claim: CandidateClaimInterface, index) => (\n                      <tr\n                        className=\"border-b border-gray-200 group hover:bg-gray-50 cursor-pointer\"\n                        key={index + claim._id}\n                        onClick={() => {\n                          this.setViewClaim(true);\n                          this.setClaimId(claim._id);\n                          this.setCandidateId(claim.user);\n                          this.setClaimType(\n                            whichClaimType(claim)\n                              ? whichClaimType(claim)!\n                              : null\n                          );\n                          this.loadsController(\n                            claim.claiming_on_id,\n                            claim.type_key\n                          );\n                        }}\n                      >\n                        <td className=\"px-3 py-1\">{index + 1}</td>\n                        <td className=\"px-3 py-1 whitespace-nowrap\">\n                          {claim.userDetails.user_info.fname +\n                            \" \" +\n                            claim.userDetails.user_info.lname}\n                        </td>\n                        <td className=\"px-3 py-1 whitespace-nowrap\">\n                          {claim.title}\n                        </td>\n                        <td className=\"px-3 py-1 whitespace-nowrap\">\n                          {this.getLastClaimDate(claim)}\n                        </td>\n                        {this.props.claiming.selectedClaimType === \"all\" && (\n                          <td className=\"px-3 py-1 whitespace-nowrap\">\n                            {whichClaimType(claim)\n                              ? capitalizeFirstLetter(whichClaimType(claim)!)\n                              : \"-\"}\n                          </td>\n                        )}\n                        <td className=\"px-3 py-1 whitespace-nowrap italic\">\n                          Level {claim.claim_level}\n                        </td>\n                        <td className=\"px-3 py-1 whitespace-nowrap\">\n                          <span\n                            className={`inline-block rounded-full duration-300 text-xs font-semibold px-3 py-1 ${\n                              whichClaimStatus(claim).classes\n                            }`}\n                          >\n                            {whichClaimStatus(claim).status}\n                          </span>\n                        </td>\n                        <td className=\"px-3 py-1 text-center whitespace-nowrap\">\n                          <button className=\"btn bg-blue-500 text-white group-hover:bg-blue-600\">\n                            View\n                          </button>\n                        </td>\n                      </tr>\n                    ))\n                  )}\n                </tbody>\n              </table>\n            </div>\n          </section>\n        )}\n        {/* END CLAIM CONTENT LIST ===================================== */}\n\n        {/* 00000000000000000000000000000000000 */}\n\n        {/* view claim */}\n        {this.state.viewClaim &&\n          this.state.candidateId &&\n          this.props.claiming.allClaims &&\n          this.state.claimId &&\n          getClaimById(this.props.claiming.allClaims, this.state.claimId) &&\n          this.props.claiming.claimTypes && (\n            <section className=\"bg-white w-full my-4\">\n              {/* VIEW CLAIM HEADER =============================== */}\n              <section className=\"flex items-center gap-2 py-2 border-b\">\n                <button\n                  className={`ml-3 bg-gray-50 hover:bg-blue-100 rounded-full px-1 py-1 focus:outline-none ${\n                    this.state.loadingRequest\n                      ? \"cursor-not-allowed\"\n                      : \"cursor-pointer\"\n                  } animate__animated animate__fadeIn`}\n                  disabled={this.state.loadingRequest}\n                  onClick={() => {\n                    this.setViewClaim(false);\n                    this.setViewImage(true);\n                    this.setLoadingRequest(false);\n                    this.setActionTaken(null);\n                    this.setResponseMsg(\"\");\n                    this.setFormError(null);\n                  }}\n                >\n                  <MdArrowBack className=\"w-7 h-7\" />\n                </button>\n                <div className={`text-gray-600 font-extrabold text-2xl px-2`}>\n                  Viewing claim\n                </div>\n              </section>\n              {/* END VIEW CLAIM HEADER =============================== */}\n\n              {this.state.loading && (\n                <div className=\"my-4\">\n                  <Loading />\n                </div>\n              )}\n\n              {!this.state.loading && (\n                <section className=\"bg-gray-200\">\n                  {/* FOR DOCUMENT ========================== */}\n                  {this.state.claimType &&\n                    this.state.claimType.toLocaleLowerCase() ===\n                      ClaimTypesInterface.DOCUMENT.toLocaleLowerCase() && (\n                      <div>\n                        {getClaimById(\n                          this.props.claiming.allClaims!,\n                          this.state.claimId!\n                        )!.userDetails.details.find(\n                          (item) =>\n                            item.doc_id ===\n                            getClaimById(\n                              this.props.claiming.allClaims!,\n                              this.state.claimId!\n                            )!.claiming_on_id\n                        ) ? (\n                          <AdminClaimDocView\n                            thisDoc={\n                              getClaimById(\n                                this.props.claiming.allClaims!,\n                                this.state.claimId!\n                              )!.userDetails.details.find(\n                                (item) =>\n                                  item.doc_id ===\n                                  getClaimById(\n                                    this.props.claiming.allClaims!,\n                                    this.state.claimId!\n                                  )!.claiming_on_id\n                              )!\n                            }\n                            documentCategories={this.props.documentReducer}\n                            thisClaim={\n                              getClaimById(\n                                this.props.claiming.allClaims,\n                                this.state.claimId\n                              )!\n                            }\n                            claimTypes={this.props.claiming.claimTypes}\n                            viewImage={this.state.viewImage}\n                            setViewImage={this.setViewImage}\n                            loadingRequest={this.state.loadingRequest}\n                            setLoadingRequest={this.setLoadingRequest}\n                            actionTaken={this.state.actionTaken}\n                            setActionTaken={this.setActionTaken}\n                            responseMsg={this.state.responseMsg}\n                            setResponseMsg={this.setResponseMsg}\n                            formError={this.state.formError}\n                            setFormError={this.setFormError}\n                            candidateId={this.state.candidateId}\n                            claimReasons={this.props.claiming.claimReasons}\n                          />\n                        ) : (\n                          <NoResult\n                            theme={NoResultThemes.Dark}\n                            value={\"Document not found\"}\n                          />\n                        )}\n                      </div>\n                    )}\n\n                  {/* FOR APPLICATION ========================== */}\n                  {this.state.claimType &&\n                    this.state.claimType.toLocaleLowerCase() ===\n                      ClaimTypesInterface.APPLICATION.toLocaleLowerCase() && (\n                      <div>\n                        {getApplicationById(\n                          this.props.claiming.allApplications,\n                          this.props.systemPositions,\n                          getClaimById(\n                            this.props.claiming.allClaims,\n                            this.state.claimId\n                          )!.claiming_on_id\n                        ) ? (\n                          this.props.systemPositions && (\n                            <AdminClaimAppView\n                              thisApplication={\n                                getApplicationById(\n                                  this.props.claiming.allApplications,\n                                  this.props.systemPositions,\n                                  getClaimById(\n                                    this.props.claiming.allClaims,\n                                    this.state.claimId\n                                  )!.claiming_on_id\n                                )!.application\n                              }\n                              thisPosition={\n                                getApplicationById(\n                                  this.props.claiming.allApplications,\n                                  this.props.systemPositions,\n                                  getClaimById(\n                                    this.props.claiming.allClaims,\n                                    this.state.claimId\n                                  )!.claiming_on_id\n                                )!.position\n                              }\n                              documentCategories={this.props.documentReducer}\n                              thisClaim={\n                                getClaimById(\n                                  this.props.claiming.allClaims,\n                                  this.state.claimId\n                                )!\n                              }\n                              claimTypes={this.props.claiming.claimTypes}\n                              systemPositions={this.props.systemPositions}\n                              claimReasons={this.props.claiming.claimReasons}\n                            />\n                          )\n                        ) : (\n                          <NoResult\n                            theme={NoResultThemes.Dark}\n                            value={\"Application not found\"}\n                          />\n                        )}\n                      </div>\n                    )}\n\n                  {/* FOR EXAMINATION ========================== */}\n                  {this.state.claimType &&\n                    this.state.claimType.toLocaleLowerCase() ===\n                      ClaimTypesInterface.EXAMINATION.toLocaleLowerCase() && (\n                      <div>\n                        {this.props.claiming.allAnswer &&\n                        this.props.courses &&\n                        getCourseIdBySheetId(\n                          this.props.claiming.allAnswer,\n                          getClaimById(\n                            this.props.claiming.allClaims,\n                            this.state.claimId\n                          )!.claiming_on_id\n                        ) &&\n                        getCourseById(\n                          this.props.courses,\n                          getCourseIdBySheetId(\n                            this.props.claiming.allAnswer,\n                            getClaimById(\n                              this.props.claiming.allClaims,\n                              this.state.claimId\n                            )!.claiming_on_id\n                          )!.course\n                        ) ? (\n                          <AdminClaimExamView\n                            thisExamSheet={\n                              getCourseIdBySheetId(\n                                this.props.claiming.allAnswer,\n                                getClaimById(\n                                  this.props.claiming.allClaims,\n                                  this.state.claimId\n                                )!.claiming_on_id\n                              )!\n                            }\n                            thisExam={\n                              getCourseById(\n                                this.props.courses,\n                                getCourseIdBySheetId(\n                                  this.props.claiming.allAnswer,\n                                  getClaimById(\n                                    this.props.claiming.allClaims,\n                                    this.state.claimId\n                                  )!.claiming_on_id\n                                )!.course\n                              )!\n                            }\n                            thisClaim={\n                              getClaimById(\n                                this.props.claiming.allClaims,\n                                this.state.claimId\n                              )!\n                            }\n                            claimTypes={this.props.claiming.claimTypes}\n                            claimReasons={this.props.claiming.claimReasons}\n                          />\n                        ) : (\n                          <NoResult\n                            theme={NoResultThemes.Dark}\n                            value={\"Exam not found\"}\n                          />\n                        )}\n                      </div>\n                    )}\n                </section>\n              )}\n            </section>\n          )}\n        {/* end view claim */}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = ({\n  auth,\n  system_settings,\n  sessionPlan,\n  claiming,\n  document,\n  course,\n}: StoreState): {\n  auth: Auth;\n  application_sessions: SessionPlanInterface[] | null;\n  systemPositions: PositionAPI[] | null;\n  claiming: ClaimingReducerType;\n  documentReducer: DocumentReducerInterface;\n  courses: course[] | null;\n} => {\n  return {\n    auth: auth,\n    application_sessions: sessionPlan.allSessionPlans,\n    systemPositions: system_settings.systemPositions,\n    claiming,\n    documentReducer: document,\n    courses: course.courses,\n  };\n};\n\nexport const AdminClaim = connect(mapStateToProps, {\n  getAllClaims,\n  loadCourses,\n  getAllAnswers,\n  getClaimReasons,\n  getAllApplications,\n  GetAllSessionPlans,\n  getDocumentCategory,\n  getDocumentSubCategory,\n  getDocumentFields,\n  getPositions,\n  PushPopupAlert,\n})(Index);\n","import { candidateExamStoreInterface } from \"../actions/candidate_exam\";\nimport {\n  applicationExamAPI,\n  ApplicationPeriodGet,\n} from \"../interfaces/application\";\nimport { ExamAnswerSheetDone } from \"../interfaces/exam\";\nimport { PositionAPI, PositionAPICourse } from \"../interfaces/position\";\nimport { questionType, questionTypeElements } from \"../interfaces/question\";\nimport moment from \"moment-timezone\";\nimport { TimeZone } from \"./app.config\";\nimport { questionTypeElementsType } from \"@mastrecruit/common\";\n\nconst today = moment().tz(TimeZone);\n\nexport const getQuestionType = (\n  question_types: questionType[] | null,\n  type_id: string\n) => {\n  let type: questionTypeElementsType | null = null;\n  if (question_types !== null) {\n    let check = question_types.find((itm) => itm.id === type_id);\n    if (check !== undefined) {\n      let check_type = questionTypeElements.find(\n        (itm) => check && itm.key === check.element\n      );\n      if (check_type !== undefined) {\n        type = check_type.key;\n      }\n    }\n  }\n  return type;\n};\n\nexport const findTotalMarks = (\n  courses: PositionAPICourse[],\n  results: ExamAnswerSheetDone[] | null\n) => {\n  if (results !== null) {\n    let sum: number = 0;\n    for (let course of courses) {\n      let test = results.find((itm) => itm.course === course.course_id);\n      if (test !== undefined) {\n        sum = sum + test.total_marks;\n      }\n    }\n    return sum.toFixed(2);\n  } else {\n    return \"Wait...\";\n  }\n};\n\nexport const CheckIfExamDone = (\n  courses: PositionAPICourse[],\n  results: ExamAnswerSheetDone[] | null\n) => {\n  let res: boolean = false;\n  if (results !== null) {\n    for (let course of courses) {\n      let test = results.find((itm) => itm.course === course.course_id);\n      if (test !== undefined) {\n        res = true;\n      }\n    }\n  }\n  return res;\n};\n\nexport const CheckIfNoPendingExam = (\n  //NOT COMPLETE --> TO BE DONE\n  courses: PositionAPICourse[],\n  results: ExamAnswerSheetDone[] | null\n) => {\n  let res: boolean = false;\n  if (results !== null) {\n    for (let course of courses) {\n      let test = results.find((itm) => itm.course === course.course_id);\n      if (test !== undefined) {\n        res = true;\n      }\n    }\n  }\n  return res;\n};\n\nexport const validateCalculatedFormula = (\n  formula: string\n): { status: boolean; msg: string } => {\n  let characters: string[] = [];\n  if (\n    formula === undefined ||\n    formula === \"\" ||\n    formula.length === undefined ||\n    formula.length === 0\n  ) {\n    return {\n      status: false,\n      msg: `Please type a formula`,\n    };\n  }\n  if (formula.length < 3) {\n    return {\n      status: false,\n      msg: `The formula in not valid, it is not complete!`,\n    };\n  }\n  for (let el of formula) {\n    characters = [...characters, el];\n  }\n  if (characters[0] !== `\"`) {\n    return {\n      status: false,\n      msg: `Formula should start with (\") character`,\n    };\n  }\n  if (characters.filter((itm) => itm === `\"`).length < 2) {\n    return {\n      status: false,\n      msg: `Formula is missing closing (\") character`,\n    };\n  }\n  if (characters.filter((itm) => itm === `\"`).length > 2) {\n    return {\n      status: false,\n      msg: `Formula is invalid, because it has many (\") characters (${\n        characters.filter((itm) => itm === `\"`).length\n      })`,\n    };\n  }\n  if (\n    characters[characters.length - 1] !== `\"` &&\n    characters.filter((itm) => itm === `\"`).length === 2\n  ) {\n    let nextCharacter: string = \"\";\n    for (let i = 0; i < characters.length; i++) {\n      if (characters[i] === `\"` && i !== 0) {\n        nextCharacter = characters[i + 1];\n      }\n    }\n    if (nextCharacter !== `;`) {\n      return {\n        status: false,\n        msg: `Formula is missing separation character (;) between formula and error`,\n      };\n    }\n    if (characters[characters.length - 1] === `;`) {\n      return {\n        status: false,\n        msg: `Formula is missing error after (;) character`,\n      };\n    }\n  }\n  return {\n    status: true,\n    msg: `Formula is valid`,\n  };\n};\n\nexport function convertFromStringToDate(responseDate: string) {\n  let dateComponents = responseDate.split(\"T\");\n  let datePieces = dateComponents[0].split(\"-\");\n  let timePieces = dateComponents[1].split(\":\");\n  return new Date(\n    parseInt(datePieces[2]),\n    parseInt(datePieces[1]) - 1,\n    parseInt(datePieces[0]),\n    parseInt(timePieces[0]),\n    parseInt(timePieces[1]),\n    parseInt(timePieces[2])\n  );\n}\n\nexport enum ExamTimeStatus {\n  Waiting = \"Waiting\",\n  Online = \"Online\",\n  Expired = \"Expired\",\n}\n\nexport const validateExamDate = (\n  exam_date: string,\n  start_time: string,\n  end_time: string\n) => {\n  let status: ExamTimeStatus = ExamTimeStatus.Expired;\n  // Dates\n  const toDay: Date = new Date(today.toString());\n  const examDate = new Date(exam_date);\n\n  // Time\n  const startTime = convertFromStringToDate(\n    examDate.getDate() +\n      \"-\" +\n      (examDate.getMonth() + 1) +\n      \"-\" +\n      examDate.getFullYear() +\n      \"T\" +\n      start_time +\n      \":0\"\n  );\n  const endTime = convertFromStringToDate(\n    examDate.getDate() +\n      \"-\" +\n      (examDate.getMonth() + 1) +\n      \"-\" +\n      examDate.getFullYear() +\n      \"T\" +\n      end_time +\n      \":0\"\n  );\n\n  // check exam date\n  if (\n    examDate.getDate() > toDay.getDate() ||\n    examDate.getMonth() > toDay.getMonth() ||\n    examDate.getFullYear() > toDay.getFullYear()\n  ) {\n    status = ExamTimeStatus.Waiting;\n  }\n\n  if (\n    examDate.getDate() < toDay.getDate() ||\n    examDate.getMonth() < toDay.getMonth() ||\n    examDate.getFullYear() < toDay.getFullYear()\n  ) {\n    status = ExamTimeStatus.Expired;\n  }\n\n  if (\n    examDate.getDate() === toDay.getDate() &&\n    examDate.getMonth() === toDay.getMonth() &&\n    examDate.getFullYear() === toDay.getFullYear()\n  ) {\n    if (startTime.getTime() > toDay.getTime()) {\n      status = ExamTimeStatus.Waiting;\n    } else if (\n      startTime.getTime() <= toDay.getTime() &&\n      endTime.getTime() >= toDay.getTime()\n    ) {\n      status = ExamTimeStatus.Online;\n    } else {\n      status = ExamTimeStatus.Expired;\n    }\n  }\n  // console.log(\n  //   \"Dates comparison: \" + examDate.getDate() + \"=>\" + toDay.getDate()\n  // );\n  // console.log(\"Exam Status: \", status);\n  return status;\n};\n\nexport const InitializeExamsDone = (\n  selected_period: ApplicationPeriodGet | null,\n  selectedPosition: PositionAPI | null,\n  candidateExam: candidateExamStoreInterface,\n  loadExamsDone: (\n    periodId: string,\n    userId: string,\n    callback: (loading: boolean) => void\n  ) => void,\n  user_id: string,\n  setLoadingExamsDone: (status: boolean) => void,\n  selectedExams: applicationExamAPI[] | null,\n  InitializeExamDetails: (\n    periodId: string,\n    courseId: string,\n    district_id: string,\n    center_id: string,\n    room_id: string,\n    position: PositionAPI,\n    start_exam: boolean,\n    callback: (loading: boolean) => void\n  ) => void,\n  setLoadingExams: (status: boolean) => void\n) => {\n  if (selected_period !== null && selectedPosition !== null) {\n    loadExamsDone(\n      selected_period.session_plan_id,\n      user_id,\n      setLoadingExamsDone\n    );\n    for (let course of selectedPosition.courses) {\n      let testDone = candidateExam.user_exams_temp.find(\n        (itm) => itm.course === course.course_id\n      );\n      if (testDone === undefined) {\n        let center_id = selectedExams?.find(\n          (itm) => itm.course_id === course.course_id\n        );\n        if (center_id !== undefined) {\n          InitializeExamDetails(\n            selected_period.session_plan_id,\n            course.course_id,\n            center_id.district_id,\n            center_id.center_id,\n            center_id.room_id,\n            selectedPosition,\n            false,\n            setLoadingExams\n          );\n        }\n      }\n    }\n  }\n};\n\nexport const getActiveExam = (\n  candidateExam: candidateExamStoreInterface\n): ExamAnswerSheetDone | null => {\n  if (candidateExam.user_exams_done.length > 0) {\n    for (let exam of candidateExam.user_exams_done) {\n      if (\n        validateExamDate(\n          exam.exam_date,\n          exam.exam_start_time,\n          exam.exam_end_time\n        ) === ExamTimeStatus.Online\n      ) {\n        return exam;\n      }\n    }\n  }\n  return null;\n};\n\nexport const proctoringDefaultRules: {\n  rule: string;\n  status: boolean;\n  caption: string;\n}[] = [\n  {\n    rule: \"right_click_enabled\",\n    status: false,\n    caption: \"Enable right click\",\n  },\n  {\n    rule: \"copy_enabled\",\n    status: false,\n    caption: \"Enable copy\",\n  },\n  {\n    rule: \"paste_enabled\",\n    status: false,\n    caption: \"Enable paste\",\n  },\n  {\n    rule: \"stop_candidate_when_comeback\",\n    status: false,\n    caption: \"Enable Candidate when coming back\",\n  },\n  {\n    rule: \"allow_to_leave_browser\",\n    status: false,\n    caption: \"Enable to leave browser\",\n  },\n];\n","import React, { FC, ReactElement, ReactNode } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Auth, System } from \"../../actions\";\nimport { StoreState } from \"../../reducers\";\nimport { NavToogle, PageHasSubNav } from \"../../actions\";\nimport { MdBrightness1, MdSearch } from \"react-icons/md\";\n\n// props for the component\ninterface AppProps {\n  auth: Auth;\n  system: System;\n  PageHasSubNav: Function;\n  NavToogle: Function;\n  children: ReactNode;\n}\n//\ninterface AppState {\n  loading: boolean;\n}\n\nclass _SideNavigation extends React.Component<AppProps, AppState> {\n  constructor(props: AppProps) {\n    super(props);\n\n    this.state = {\n      loading: false,\n    };\n  }\n\n  componentDidMount = () => this.props.PageHasSubNav(true);\n  componentWillUnmount = () => this.props.PageHasSubNav(false);\n\n  render() {\n    const isAuthenticated = this.props.auth.isAuthenticated;\n\n    if (isAuthenticated === false) {\n      return null;\n    }\n\n    const navActive = this.props.system.navigation;\n    return (\n      <div\n        className={`fixed w-48 p-1 pr-2 pl-6 text-gray-700 bg-white ${\n          navActive === true ? \"lg:left-16  left-16\" : \" -left-72 lg:left-16\"\n        }  top-0 bottom-0 pt-20 z-30 shadow-lg  transition-all duration-500 ease-in-out overflow-y-auto`}\n      >\n        {this.props.children}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = ({\n  auth,\n  system,\n}: StoreState): { auth: Auth; system: System } => {\n  return { auth: auth, system: system };\n};\n\nexport const SideNavigation = connect(mapStateToProps, {\n  NavToogle,\n  PageHasSubNav,\n})(_SideNavigation);\n\n//************************************ FORM SEARCH **************************************** */\n\ntype SearchComponentInterface = {\n  data: any[];\n};\n\nexport const Search: FC<SearchComponentInterface> = ({\n  data,\n}): ReactElement => {\n  return (\n    <div className=\"m-1 rounded-md shadow-md border border-blue-400 bg-white p-1 flex \">\n      <label htmlFor=\"search-text\" className=\"inline-block text-2xl\">\n        <MdSearch className=\"inline-block text-blue-400\" />\n      </label>\n      <input\n        type=\"search\"\n        className=\"outline-none bg-transparent flex-1 pl-1\"\n        placeholder=\"Search\"\n        id=\"search-text\"\n      />\n    </div>\n  );\n};\n\n//************************************ FORM SEARCH **************************************** */\n\ntype MainItemComponentInterface = {\n  title: string;\n  icon?: any;\n  active?: boolean;\n  count?: number;\n};\n\n/**\n *\n * @param param0\n * @returns\n */\nexport const MainItem: FC<MainItemComponentInterface> = ({\n  title = \"\",\n  icon = MdBrightness1,\n  active = false,\n  count = 0,\n}): ReactElement => {\n  const IconDefined = icon;\n  return (\n    <section\n      className={`${\n        active === true\n          ? \"bg-blue-500 text-white font-bold\"\n          : \"bg-blue-100 text-blue-800\"\n      } mb-1 hover:font-bold py-1 hover:bg-blue-400 hover:text-white --font-bold  px-2 rounded-md flex cursor-pointer items-center`}\n    >\n      <section className=\"flex-1\">\n        <IconDefined className=\"inline-block mr-1 text-xs\" />\n        <span>{title}</span>\n      </section>\n\n      {count > 0 ? (\n        <span className=\"px-0.5 my-1 text-xs bg-blue-600 text-white rounded-full\">\n          {count}\n        </span>\n      ) : null}\n    </section>\n  );\n};\n\n//************************************ FORM SEARCH **************************************** */\n\ntype SubItemContainerComponentInterface = {\n  children: ReactNode;\n};\n\n/**\n *\n * @param param0\n * @returns\n */\nexport const SubItemContainer: FC<SubItemContainerComponentInterface> = ({\n  children,\n}): ReactElement => {\n  return (\n    <div className=\"ml-3 overflow-y-auto border-l-2 border-blue-200 -mt-1 pt-2 mb-2 pl-1 cursor-pointer\">\n      {children}\n    </div>\n  );\n};\n\n//************************************ FORM SEARCH **************************************** */\n\ntype SubItemComponentInterface = {\n  title: string;\n  icon?: any;\n  active?: boolean;\n  count?: number;\n};\n\n/**\n *\n * @param param0\n * @returns\n * @important Remenber to use these components inside the <SubItemContainer>...</SubItemContainer>\n */\nexport const SubItem: FC<SubItemComponentInterface> = ({\n  title = \"\",\n  icon = MdBrightness1,\n  active = false,\n  count = 0,\n}): ReactElement => {\n  const IconDefined = icon;\n\n  return (\n    <div\n      className={`animate__animated animate__zoomIn animate__faster ${\n        active === true ? \"bg-blue-500 text-white font-bold\" : \" text-blue-800\"\n      } text-blue-800 bg-blue-200 rounded-md px-1 mb-1 flex items-center py-1 font-bold`}\n    >\n      <IconDefined\n        className={`inline-block mr-0.1 text-xs ${\n          active === true ? \"text-white\" : \"\"\n        }`}\n      />\n      <span\n        className={`inline-block pl-1 ${active === true ? \"text-white\" : \"\"}`}\n      >\n        {title}\n      </span>\n      {count >= 1 ? (\n        <span\n          className={`text-sm fint-bold ${active === true ? \"text-white\" : \"\"}`}\n        >\n          {count}\n        </span>\n      ) : null}\n    </div>\n  );\n};\n","import axios from \"axios\";\nimport { Dispatch } from \"redux\";\nimport { ActionTypes } from \"./types\";\nimport {\n  AccessTaskInterface,\n  PermissionInterface,\n  SystemSettingsInterface,\n} from \"../shared/interfaces\";\nimport { API } from \"../utils/api\";\nimport { setAxiosToken } from \"../utils/AxiosToken\";\nimport { errorToText } from \"../utils/errors\";\nimport { PositionAPI } from \"../interfaces/position\";\n\n/**\n * * ****************************** INTERFACES *****************************\n */\n\n// SYSTEM SETTINGS  ==============\nexport interface GetSystemSettingsAction {\n  type: ActionTypes.GET_SYSTEM_SETTINGS;\n  payload: SystemSettingsInterface[];\n}\n\nexport interface DisableSystemSettingsAction {\n  type: ActionTypes.DISABLE_SYSTEM_SETTINGS;\n  payload: {\n    system_setting_id: string;\n    status: \"enabled\" | \"disabled\";\n  };\n}\n\n// ROLE TASKS ACCESS SETTINGS ===================================\nexport interface GetTaskAccessAction {\n  type: ActionTypes.GET_TASK_ACCESS;\n  payload: AccessTaskInterface[];\n}\n\n// POSITIONS SETTINGS ===================================\nexport interface PositionCreateInterface {\n  position_id?: string;\n  position_title: string;\n  position_code: string;\n  description: string;\n  school_level_id: string;\n  subcategory_id: string;\n  education_institute_id: string;\n  courses: string[];\n  requirements: {\n    user_detail_category_id: string;\n    user_detail_subcategory_id: string;\n    position_requirement: {\n      category_subcategory_data_id: string;\n      required: boolean;\n    }[];\n    required: boolean;\n  }[];\n}\nexport interface GetPositionsAction {\n  type: ActionTypes.GET_POSTIONS;\n  payload: PositionAPI[];\n}\n\nexport interface CreatePositionsAction {\n  type: ActionTypes.CREATE_POSITION;\n  payload: PositionCreateInterface;\n}\n\nexport interface UpdatePositionsAction {\n  type: ActionTypes.UPDATE_POSITION;\n  payload: PositionCreateInterface;\n}\n\nexport interface DeletePositionSettingAction {\n  type: ActionTypes.DELETE_POSITION;\n  payload: string;\n}\n\nexport interface PublishPositionAction {\n  type: ActionTypes.PUBLISH_POSITION;\n  payload: {\n    position_id: string;\n    status: boolean;\n  };\n}\n\nexport type SystemActionType =\n  | GetSystemSettingsAction\n  | DisableSystemSettingsAction\n  | GetTaskAccessAction\n  | GetPositionsAction\n  | CreatePositionsAction\n  | UpdatePositionsAction\n  | DeletePositionSettingAction\n  | PublishPositionAction;\n\n/**\n * * ****************************** ACTIONS *****************************\n */\n\nexport const getSystemSettings = (callback: Function) => {\n  return async (dispatch: Dispatch) => {\n    callback(true, \"\");\n    try {\n      setAxiosToken();\n      const res = await axios.get<SystemSettingsInterface[]>(\n        `${API.AUTH}/settings`\n      );\n      dispatch<GetSystemSettingsAction>({\n        type: ActionTypes.GET_SYSTEM_SETTINGS,\n        payload: res.data,\n      });\n      callback(false, \"\");\n    } catch (error) {\n      console.log({ code_error: error });\n      callback(false, errorToText(error));\n    }\n  };\n};\n\nexport const disableSystemSetting = (data: {\n  system_setting_id: string;\n  status: \"enabled\" | \"disabled\";\n}) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<DisableSystemSettingsAction>({\n      type: ActionTypes.DISABLE_SYSTEM_SETTINGS,\n      payload: data,\n    });\n  };\n};\n\n// ============================ tasks access =======================\n\nexport const GetTaskAccess = (callback: Function) => {\n  return async (dispatch: Dispatch) => {\n    callback(true, \"\");\n    try {\n      setAxiosToken();\n      const res = await axios.get<\n        {\n          id: string;\n          title: string;\n          key: string;\n          permitted: PermissionInterface;\n        }[]\n      >(`${API.AUTH}/allroleaccess`);\n      let response: AccessTaskInterface[] = res.data.map((data) => ({\n        id: data.id,\n        task: data.title,\n        key: data.key,\n        permitted: data.permitted,\n      }));\n      dispatch<GetTaskAccessAction>({\n        type: ActionTypes.GET_TASK_ACCESS,\n        payload: response,\n      });\n      callback(false, \"\", response);\n    } catch (error) {\n      console.log({ code_error: error });\n      callback(false, errorToText(error));\n    }\n  };\n};\n\n// ============================ positions =======================\n\nexport const getPositions = (callback: Function) => {\n  return async (dispatch: Dispatch) => {\n    callback(true, \"\");\n    try {\n      setAxiosToken();\n      const res = await axios.get<PositionAPI[]>(`${API.APPLICATION}/position`);\n      dispatch<GetPositionsAction>({\n        type: ActionTypes.GET_POSTIONS,\n        payload: res.data,\n      });\n      callback(false, \"\");\n    } catch (error) {\n      console.log({ code_error: error });\n      callback(false, errorToText(error));\n    }\n  };\n};\n\nexport const createPosition = (data: PositionCreateInterface) => {\n  console.log({ createPosition: data });\n  return async (dispatch: Dispatch) => {\n    dispatch<CreatePositionsAction>({\n      type: ActionTypes.CREATE_POSITION,\n      payload: data,\n    });\n  };\n};\n\nexport const updatePosition = (data: PositionCreateInterface) => {\n  console.log({ updatePosition: data });\n  return async (dispatch: Dispatch) => {\n    dispatch<UpdatePositionsAction>({\n      type: ActionTypes.UPDATE_POSITION,\n      payload: data,\n    });\n  };\n};\n\nexport const deletePosition = (data: string) => {\n  console.log({ deletePosition: data });\n  return async (dispatch: Dispatch) => {\n    dispatch<DeletePositionSettingAction>({\n      type: ActionTypes.DELETE_POSITION,\n      payload: data,\n    });\n  };\n};\n\nexport const publishPosition = (data: {\n  position_id: string;\n  status: boolean;\n}) => {\n  return async (dispatch: Dispatch) => {\n    dispatch<PublishPositionAction>({\n      type: ActionTypes.PUBLISH_POSITION,\n      payload: data,\n    });\n  };\n};\n","import React from \"react\";\n\ntype TableLoadingProps = {\n  cols: number;\n};\nconst TableLoading: React.FC<TableLoadingProps> = (props) => {\n  const displayCols = (): JSX.Element[] => {\n    let colsArray: number[] = [];\n    for (let index = 0; index < props.cols; index++) {\n      colsArray.push(index);\n    }\n    let result = colsArray.map((element) => {\n      return (\n        <td className=\"p-3 text-center whitespace-nowrap\" key={element}>\n          <div className=\"w-full h-4 rounded bg-gray-200 animate__animated animate__pulse animate__delay-5s animate__infinite\"></div>\n        </td>\n      );\n    });\n\n    return result;\n  };\n  return (\n    <>\n      <tr className=\"border-b border-gray-200\" key={228}>\n        {displayCols()}\n      </tr>\n      <tr className=\"border-b border-gray-200\" key={22648}>\n        {displayCols()}\n      </tr>\n      <tr className=\"border-b border-gray-200\" key={229768}>\n        {displayCols()}\n      </tr>\n    </>\n  );\n};\n\nexport default TableLoading;\n","import {\n  ApplicationStates,\n  SESSION_PLAN_KEYS,\n} from \"../interfaces/application\";\n\nexport interface SystemSettingsInterface {\n  system_setting_id: string;\n  name: string;\n  key: string;\n  status: \"enabled\" | \"disabled\";\n}\n\nexport interface ApplicationSessionInterface {\n  is_active: boolean;\n  application_session_name: string;\n  period: string;\n  application_start_date: string;\n  application_end_date: string;\n  createdAt: string;\n  updatedAt: string;\n  application_session_id: string;\n}\n\nexport interface UserInfoInterface {\n  document_type?: string;\n  issue_number?: string;\n  date_of_issue?: string;\n  date_of_expiry?: string;\n  place_of_issue?: string;\n  application_number?: string;\n  fname: string;\n  lname: string;\n  sex: \"M\" | \"F\";\n  father_names: string;\n  mother_names: string;\n  date_of_birth: string;\n  place_of_birth?: string;\n  country_of_birth: string;\n  village_id: string;\n  village: string;\n  cell: string;\n  sector: string;\n  district: string;\n  province: string;\n  photo?: string;\n  civil_status?: string;\n  spouse?: any;\n  status?: string;\n}\n\nexport interface MySchoolInterface {\n  _id: string;\n  school_name: string;\n  school_code: string;\n  province_id: string;\n  province_code: string;\n  district_id: {\n    _id: string;\n    district_name: string;\n  };\n  district_code: string;\n  sector_code: string;\n  sector_id: string;\n  school_status: string;\n  status: number;\n  createdAt: string;\n  updatedAt: string;\n}\n\nexport interface UserInterface {\n  user_id: string;\n  _id?: string;\n  n_id?: string;\n  phone_number: string;\n  email: string;\n  password?: string;\n  user_info: UserInfoInterface;\n  details: UserDocumentsInterface[];\n  user_photo?: string;\n  default_access: RoleToUserInterface | null;\n  custome_access: CustomeAccessInterface | null;\n  is_active: boolean;\n  disability: boolean;\n  in_education: boolean;\n}\n\nexport interface CandidateDetailsInterface_old {\n  category_id: string;\n  sub_category_id: string;\n  category_subcategory_data: string;\n  title: string;\n  description: string;\n  files: string;\n  start_year: string;\n  end_year: string;\n  school: string;\n  email: string;\n  names: string;\n  phone_number: string;\n  company: string;\n  year: string;\n  doc_id: string;\n  validation_status: \"waiting\" | \"approved\" | \"rejected\";\n  validated_by: {\n    user_id: string;\n    comment: string;\n    validation_status: \"waiting\" | \"approved\" | \"rejected\";\n    date: string;\n  } | null;\n  doc_history_status: string;\n  get_in_date: string;\n  approved?: string;\n}\n\nexport interface CandidateDetailsInterface {\n  category_id: string;\n  sub_category_id: string;\n  category_subcategory_data: string;\n  title: string;\n  description: string;\n  files: string;\n  start_year: string;\n  end_year: string;\n  school: string;\n  email: string;\n  names: string;\n  phone_number: string;\n  company: string;\n  year: string;\n  doc_id: string;\n  validation_status: \"waiting\" | \"approved\" | \"rejected\";\n  validated_by: {\n    user_id: string;\n    comment: string;\n    validation_status: \"waiting\" | \"approved\" | \"rejected\";\n    date: string;\n  } | null;\n  doc_history_status: string;\n  get_in_date: string;\n  approved?: string;\n}\n\nexport interface DocInterface {\n  category_subcategory_data: string;\n  school: string;\n  category_id: string;\n  company: string;\n  description: string;\n  email: string;\n  end_year: string;\n  files: string;\n  names: string;\n  phone_number: string;\n  start_year: string;\n  sub_category_id: string;\n  title: string;\n  year: string;\n  approved: string;\n  doc_id: string;\n  validated_by: null;\n  validation_status: string;\n  doc_history_status: string;\n  get_in_date: string;\n  date_modefied: string;\n}\n\nexport interface CandidateRoleToUserInterface {\n  key: string;\n  status: number;\n  access: boolean;\n  assigned_date: string;\n}\n\nexport interface CandidatesInterface_old {\n  user_id: string;\n  n_id: string;\n  fname: string;\n  lname: string;\n  phone_number: string;\n  district: string;\n  email: string;\n  details: CandidateDetailsInterface[];\n}\n\nexport interface ApplicationExamsInterface {\n  course_id: string;\n  proctoring_type: string;\n  center_id: string;\n  room_id: string;\n}\n\nexport interface CandidatesInterface {\n  user_id: string;\n  n_id: string;\n  fname: string;\n  lname: string;\n  phone_number: string;\n  district: string;\n  email: string;\n  in_education: boolean;\n  disability: boolean;\n  residence: {\n    province_id: string;\n    province_name: string;\n    district_id: string;\n    district_name: string;\n    sector_id: string;\n    sector_name: string;\n  };\n  details: CandidateDetailsInterface[];\n  exams: ApplicationExamsInterface[];\n}\n\nexport interface CustomeAccessInterface {\n  access: AccessTaskInterface[];\n  user_id: string;\n  custome_user_access_id: string;\n}\n\nexport interface UserDocumentsInterface {\n  category_id: string;\n  sub_category_id: string;\n  category_subcategory_data: string;\n  title: string;\n  description: string;\n  files: string;\n  start_year: string;\n  end_year: string;\n  school: { title: string; school_id: string | null };\n  email: string;\n  names: string;\n  phone_number: string;\n  company: string;\n  year: string;\n  approved: \"waiting\" | \"approved\" | \"rejected\";\n  doc_id: string;\n  validation_status: \"waiting\" | \"approved\" | \"rejected\";\n  validated_by: {\n    user_id: string;\n    commet: string;\n    validation_status: \"waiting\" | \"approved\" | \"rejected\";\n    date: string;\n  };\n}\n\nexport interface SystemUserRoleInterface {\n  system_user_role_id: string;\n  role: string;\n  status: boolean;\n  access: AccessTaskInterface[];\n  district_required?: boolean;\n  school_required?: boolean;\n  room_required?: boolean;\n  education_institution_required?: boolean;\n  school_id: string;\n  district_id: string;\n}\n\nexport interface CustomeUserAccessInterface {\n  user_id: string;\n  access?: [\n    {\n      id: string;\n      task: string;\n      key: string;\n      permitted: {\n        create: boolean;\n        delete: boolean;\n        update: boolean;\n        view: boolean;\n      };\n    }\n  ];\n}\n\nexport interface PermissionInterface {\n  create: boolean;\n  view: boolean;\n  update: boolean;\n  delete: boolean;\n}\n\nexport interface AccessTaskInterface {\n  id: string;\n  task: string;\n  key: string;\n  permitted: PermissionInterface;\n}\n\nexport interface RoleToUserInterface {\n  system_user_role_id: string;\n  role: string;\n  access: AccessTaskInterface[];\n  status?: number;\n  school_id: string;\n  district_id: string;\n  room_id: string;\n  education_institution_id: string;\n}\n\nexport interface RoomsInterface {\n  occupied: number;\n  isUsed: boolean;\n  room_type: string;\n  room_number: number;\n  capacity: number;\n  _id: string;\n}\n\nexport interface CentersInterface {\n  rooms: RoomsInterface[];\n  isUsed: boolean;\n  _id: string;\n  center_name: string;\n  center_code: number;\n  district_id: string;\n}\n\nexport interface SectorInterface {\n  district_code: number;\n  district_id: string;\n  sector_name: string;\n  sector_code: number;\n  sector_id: string;\n}\n\nexport interface AllDistrictInterface {\n  sectors: string[];\n  centers: string[];\n  district_name: string;\n  district_code: string;\n  province_code: string;\n  province_id: string;\n  status: number;\n  createdAt: string;\n  updatedAt: string;\n  district_id: string;\n}\nexport interface DistrictInterface {\n  centers: CentersInterface[];\n  sectors: SectorInterface[];\n  province_code: number;\n  province_id: string;\n  district_name: string;\n  district_code: number;\n  _id: string;\n}\n\nexport interface RoomLocationInterface {\n  districts: DistrictInterface[];\n  province_name: string;\n  province_code: number;\n  _id: string;\n}\n\nexport interface AssignRoleToUserActionInterface {\n  user_id: string;\n  data: RoleToUserInterface;\n}\n\nexport interface AssignRoleToUserActionInterface {\n  user_id: string;\n  data: RoleToUserInterface;\n}\n\nexport enum PostRequestStatusInterface {\n  INITIATED = \"initiated\",\n  CONFIRMED = \"confirmed\",\n  RECEIVED = \"received\",\n}\n\nexport interface PostSchoolInterface_old {\n  post_at_school_id: string;\n  school_id: string;\n  position_id: string;\n  district_id: string;\n  needed_posts: number;\n  confirmed_posts?: number;\n  occupied_posts?: number;\n  requested_by: string;\n  confirmed_by?: string;\n  received_posts?: number;\n  request_date: Date;\n  approval_date?: Date;\n  post_at_school_status: PostRequestStatusInterface;\n}\n\nexport interface PostSchoolInterface {\n  _id: string;\n  school_id: string;\n  position_id: string;\n  district_id: string;\n  needed_posts: number;\n  male_number: number;\n  female_number: number;\n  description: string;\n  confirmed_posts?: number;\n  occupied_posts?: number;\n  requested_by: string;\n  confirmed_by?: string;\n  received_posts?: number;\n  request_date: Date;\n  approval_date?: Date;\n  requested_post_status: PostRequestStatusInterface;\n  school: {\n    _id: string;\n    school_name: string;\n    school_code: string;\n    province_id: string;\n    province_code: string;\n    district_id: {\n      _id: string;\n      district_name: string;\n    };\n    district_code: string;\n    sector_code: string;\n    sector_id: string;\n    school_status: string;\n    status: number;\n    createdAt: string;\n    updatedAt: string;\n  };\n  post_request_session_id: string;\n}\n\nexport interface SchoolInfoInterface {\n  school_id: string;\n  school_title: string;\n  district_id: string;\n  number_of_females?: number;\n  number_of_males?: number;\n}\n\nexport interface SchoolsInterface {\n  _id: string;\n  status: boolean;\n  school_name: string;\n  school_code: number;\n  province_id: string;\n  province_code: number;\n  district_id: string;\n  district_code: number;\n  sector_id: string;\n  sector_code: number;\n  education_category_id: string;\n}\n\nexport interface MySchoolInterface {\n  _id: string;\n  school_name: string;\n  school_code: string;\n  province_id: string;\n  province_code: string;\n  district_id: {\n    _id: string;\n    district_name: string;\n  };\n  district_code: string;\n  sector_code: string;\n  sector_id: string;\n  school_status: string;\n  status: number;\n  createdAt: string;\n  updatedAt: string;\n}\n\nexport interface SchoolLevelInterface {\n  school_level_id: string;\n  school_level_name: string;\n  description: string;\n  education_institute: string[];\n  courses: [];\n}\n\nexport interface CourseInterface {\n  course_name: string;\n  course_code: string;\n  description: string;\n  school_levels: string[];\n  course_id: string;\n}\n\nexport interface EducationInstituteInterface {\n  education_category_title: string;\n  school_levels: [];\n  description: string;\n  education_institute_id: string;\n}\n\nexport interface PositionRequirementInterface {\n  user_detail_category_id: string;\n  title: string;\n  user_required_docs: {\n    user_detail_subcategory_id: string;\n    title: string;\n  }[];\n}\n\nexport interface PositionInterface {\n  courses: CourseInterface[];\n  position_title: string;\n  description: string;\n  school_level_id: SchoolLevelInterface;\n  education_institute_id: EducationInstituteInterface;\n  requirements: PositionRequirementInterface[];\n  position_id: string;\n}\n\nexport enum DocumentAttributesInterface {\n  \"Title\" = \"title\",\n  \"Description\" = \"description\",\n  \"Files\" = \"files\",\n  \"email\" = \"email\",\n  \"names\" = \"names\",\n  \"phone_number\" = \"phone_number\",\n  \"position\" = \"position\",\n  \"relation\" = \"relation\",\n  \"src\" = \"src\",\n  \"year\" = \"year\",\n  \"company\" = \"company\",\n  \"category_subcategory_data\" = \"category_subcategory_data\",\n  \"others\" = \"others\",\n  \"start_year\" = \"start_year\",\n  \"end_year\" = \"end_year\",\n  \"School\" = \"School\",\n}\n\nexport enum DocValidationStatusInterface {\n  APPROVED = \"approved\",\n  REJECTED = \"rejected\",\n}\n\nexport interface DocumentCategoryInterface {\n  user_detail_category_id: string;\n  title: string;\n  description: string;\n  fields: DocumentAttributesInterface[];\n}\n\nexport interface DocumentSubCategoryInterface {\n  category_id: string;\n  title: string;\n  description: string;\n  user_detail_subcategory_id: string;\n}\n\nexport interface DocumentFieldsInterface {\n  _id: string;\n  category_id: string;\n  subcategory_id: string | null;\n  title: string;\n  description: string;\n  others: [];\n}\n\nexport interface ApplicationAssessmentInterface {\n  application_id: string;\n  user_id: string;\n  application_session: string;\n  application_status: string;\n  n_id: string;\n  phone_number: string;\n  email: string;\n  fname: string;\n  lname: string;\n  sex: \"M\" | \"F\";\n  district: string;\n  position: PositionApplicationInterface;\n  details: CandidateDetailsInterface[];\n  createdAt: string;\n  updatedAt: string;\n}\n\nexport interface AdminApplicationsToPrintInterface {\n  application_id: number;\n  names: string;\n  gender?: string;\n  national_id?: string;\n  phone?: string;\n  email?: string;\n  position: string;\n  education_category?: string;\n  application_session?: string;\n  district?: string;\n  date?: string;\n  decision?: ApplicationStates;\n}\n\nexport interface PositionApplicationInterface {\n  courses: string[];\n  position_title: string;\n  description: string;\n  school_level_id: string;\n  education_institute_id: string;\n  requirements: PositionRequirementInterface[];\n  position_id: string;\n}\n\nexport interface PositionRequirementInterface {\n  user_detail_category_id: string;\n  title: string;\n  user_required_docs: {\n    user_detail_subcategory_id: string;\n    title: string;\n  }[];\n}\n\nexport interface ApplicationRequirementInterface {\n  user_detail_category_id: string;\n  title: string;\n  user_required_docs: {\n    user_detail_subcategory_id: string;\n    title: string;\n  }[];\n}\n\nexport interface PeriodInterface {\n  is_active: string;\n  application_session_name: string;\n  period: string;\n  application_start_date: string;\n  application_end_date: string;\n  createdAt: string;\n  updatedAt: string;\n  application_session_id: string;\n}\n\nexport interface LocationRoomTableInterface {\n  province_id: string;\n  province_name: string;\n  district_id: string;\n  district_name: string;\n  center_id: string;\n  center_name: string;\n  room_id: string;\n  room_name: string;\n  capacity: number;\n  occupied: number;\n}\n\nexport interface LocationSectorTableInterface {\n  province_id: string;\n  province_name: string;\n  province_code: number;\n  district_id: string;\n  district_name: string;\n  district_code: number;\n  sector_id: string;\n  sector_name: string;\n  sector_code: number;\n}\n\nexport interface PositionRequirementsFieldInterface {\n  category_id: string;\n  category_name: string;\n  sub_category_id: string;\n  sub_category_name: string;\n  field_id: string;\n  field_name: string;\n  sub_category_required: boolean;\n  required: boolean;\n  isAnyField: boolean;\n}\n\nexport interface PositionRequirementsQualificationInterface {\n  category_id: string;\n  category_name: string;\n  sub_category_id: string;\n  sub_category_name: string;\n  fields: DocumentFieldsInterface[];\n  required: boolean;\n}\n\nexport interface ApplicationPeriodInterface {\n  _id: string;\n  application_status: ApplicationStates;\n  userInfo: {\n    n_id: string;\n    phone_number: string;\n    email: string;\n    user_info: {\n      document_type: string;\n      issue_number: string;\n      date_of_issue: string;\n      date_of_expiry: string;\n      place_of_issue: string;\n      application_number: string;\n      fname: string;\n      lname: string;\n      father_names: string;\n      mother_names: string;\n      sex: string;\n      date_of_birth: string;\n      place_of_birth: string;\n      country_of_birth: string;\n      village_id: string;\n      village: string;\n      cell: string;\n      sector: string;\n      district: string;\n      province: string;\n      civil_status: string;\n      spouse: null;\n      status: string;\n      photo: string;\n    };\n  };\n  user_id: string;\n  position: string;\n  application_session: string;\n  exams: ApplicationExamsInterface[];\n}\n\nexport const getDocCategoryById = (\n  subDocs: DocumentCategoryInterface[],\n  docId: string\n): DocumentCategoryInterface => {\n  return subDocs.filter((doc) => doc.user_detail_category_id === docId)[0];\n};\n\nexport const getSubDocCategoryById = (\n  subDocs: DocumentSubCategoryInterface[],\n  docId: string\n): DocumentSubCategoryInterface => {\n  return subDocs.filter((doc) => doc.user_detail_subcategory_id === docId)[0];\n};\n\nexport const SESSION_PLAN_TYPES: {\n  type_id: number;\n  type_title: string;\n  type_key: SESSION_PLAN_KEYS;\n}[] = [\n  {\n    type_id: 1,\n    type_title: \"Application\",\n    type_key: SESSION_PLAN_KEYS.APPLICATION,\n  },\n  {\n    type_id: 2,\n    type_title: \"Document Validation\",\n    type_key: SESSION_PLAN_KEYS.DOCUMENT_VALIDATION,\n  },\n  {\n    type_id: 3,\n    type_title: \"Examination\",\n    type_key: SESSION_PLAN_KEYS.EXAMINATION,\n  },\n  {\n    type_id: 4,\n    type_title: \"Marks Publication\",\n    type_key: SESSION_PLAN_KEYS.MARKS_PUBLICATION,\n  },\n  {\n    type_id: 5,\n    type_title: \"Placement and Transfer\",\n    type_key: SESSION_PLAN_KEYS.PLACEMENT_TRANSFER,\n  },\n];\n","import axios from \"axios\";\nimport React from \"react\";\nimport { FaRegCheckCircle } from \"react-icons/fa\";\nimport { MdInfoOutline } from \"react-icons/md\";\nimport { RiArrowGoBackFill } from \"react-icons/ri\";\nimport { connect } from \"react-redux\";\nimport { PushPopupAlert } from \"../../actions\";\nimport { createReClaim, DocumentClaimUser } from \"../../actions/claiming\";\nimport {\n  CandidateClaimInterface,\n  ClaimDecisionStatus,\n  claimReasonInterface,\n  ClaimStatus,\n} from \"../../interfaces\";\nimport { PopupAlertTheme } from \"../../interfaces/popupAlert\";\nimport { DocumentReducerInterface } from \"../../reducers/document\";\nimport { capitalizeFirstLetter, isEmptyOrSpaces } from \"../../shared/dataTest\";\nimport { API } from \"../../utils/api\";\nimport { setAxiosToken } from \"../../utils/AxiosToken\";\nimport { errorToText, showDate } from \"../../utils/functions\";\nimport { ClaimGetDocTitle } from \"./Candidate/ClaimForm\";\n\nconst isReclaimAllowed = (thisClaim: CandidateClaimInterface): boolean => {\n  if (thisClaim.claim_level === 1) {\n    const _thisClaim = thisClaim.claims.find((item) => item.level === 1);\n    if (_thisClaim) {\n      if (_thisClaim.decision_taken_status === ClaimDecisionStatus.REJECTED) {\n        return true;\n      }\n    }\n  }\n  return false;\n};\n\nexport const isClaimEvaluated = (\n  thisClaim: CandidateClaimInterface,\n  level: number\n): boolean => {\n  const _thisClaim = thisClaim.claims.find(\n    (item) =>\n      item.level === level && item.claim_status === ClaimStatus.EVALUATED\n  );\n  if (_thisClaim) {\n    return true;\n  }\n  return false;\n};\n\ntype ClaimDocViewProps = {\n  thisDoc: DocumentClaimUser;\n  // setViewThisFile: (value: string) => void;\n  documentCategories: DocumentReducerInterface;\n  claimReasons: claimReasonInterface[] | null;\n  thisClaim: CandidateClaimInterface;\n  viewImage: boolean;\n  setViewImage: (value: boolean) => void;\n  loadingRequest: boolean;\n  setLoadingRequest: (value: boolean) => void;\n  reClaiming: boolean;\n  setReClaiming: (value: boolean) => void;\n  reClaimingMsg: string;\n  setReClaimingMsg: (value: string) => void;\n  formError: {\n    element: string;\n    msg: string;\n  } | null;\n  setFormError: (\n    value: {\n      element: string;\n      msg: string;\n    } | null\n  ) => void;\n\n  // REDUX DATA =====================\n  createReClaim: Function;\n  PushPopupAlert: Function;\n};\n\nconst ClaimDocView: React.FC<ClaimDocViewProps> = (props) => {\n  const handleSubmit = async () => {\n    if (isEmptyOrSpaces(props.reClaimingMsg)) {\n      return props.setFormError({\n        element: \"comment\",\n        msg: \"Claim comment is required!\",\n      });\n    }\n    if (!props.thisClaim) {\n      return props.PushPopupAlert({\n        title: \"Claim sent successful\",\n        theme: PopupAlertTheme.warning,\n      });\n    }\n\n    props.setLoadingRequest(true);\n    try {\n      setAxiosToken();\n      const res = await axios.put<CandidateClaimInterface>(\n        `${API.CLAIMING}/user/reclaim/${props.thisClaim._id}`,\n        {\n          reason: props.reClaimingMsg,\n        }\n      );\n      console.log({ res: res.data });\n      if (res.status === 201 || res.status === 200) {\n        props.createReClaim(res.data);\n        props.PushPopupAlert({\n          title: \"Claim sent successful\",\n          theme: PopupAlertTheme.success,\n        });\n        props.setReClaimingMsg(\"\");\n        props.setReClaiming(false);\n      }\n    } catch (error) {\n      console.error({ error });\n      props.PushPopupAlert({\n        title: errorToText(error),\n        theme: PopupAlertTheme.danger,\n      });\n    }\n    props.setLoadingRequest(false);\n  };\n\n  const getReasonById = (\n    reason_id: string\n  ): claimReasonInterface | undefined => {\n    if (props.claimReasons) {\n      return props.claimReasons.find((item) => item.id === reason_id);\n    }\n    return undefined;\n  };\n\n  return (\n    <section className=\"\">\n      <div className=\"w-full bg-white px-4 py-1 divide-y-2 space-y-2\">\n        {/* DOCUMENT DETAILS ==================================================== */}\n        <section className=\"flex flex-col\">\n          <div className=\"flex items-center justify-between\">\n            <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n              <span className={`italic`}>Title:</span>\n              <span className=\"text-gray-800 font-bold text-xl\">\n                {ClaimGetDocTitle(props.documentCategories, props.thisDoc).main}\n              </span>\n            </div>\n            <button\n              type=\"button\"\n              className=\"bg-blue-200 hover:bg-blue-300 text-blue-700 group-hover:text-blue-800 py-1 px-2 mr-1 rounded text-sm\"\n              onClick={() => props.setViewImage(!props.viewImage)}\n            >\n              {props.viewImage ? \"Hide\" : \"View\"}\n            </button>\n          </div>\n          <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n            <span className={`italic`}>Status:</span>\n            <span\n              className={`font-bold ${\n                props.thisDoc.validation_status === \"rejected\"\n                  ? \"text-yellow-900\"\n                  : \"text-blue-600\"\n              } rounded px-3 py-1`}\n            >\n              {capitalizeFirstLetter(props.thisDoc.validation_status)}\n            </span>\n          </div>\n          <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n            <span className={`italic`}>Evaluated by:</span>\n            <span className=\"font-semibold\">\n              {props.thisClaim.previous.evaluater.name}\n            </span>\n          </div>\n          <div className=\"flex items-start gap-2 text-sm text-gray-600\">\n            <span className={`italic`}>Reason:</span>\n            <span className=\"font-normal\">\n              {props.thisDoc.validated_by.comment}\n            </span>\n          </div>\n\n          {/* DISPLAY IMAGE ==================================================== */}\n          {props.viewImage && (\n            <div className=\"w-full my-1 animate__animated animate__fadeIn\">\n              <img\n                src={`${API.AUTH_FILES}/${props.thisDoc.files}`}\n                alt=\"doc file\"\n                className={`w-full animate__animated animate__fadeIn`}\n              />\n            </div>\n          )}\n          {/* END DISPLAY IMAGE ==================================================== */}\n        </section>\n        {/* END DOCUMENT DETAILS ==================================================== */}\n\n        {/* ################################################################################ */}\n\n        {/* CLAIM LEVELS DETAILS ==================================================== */}\n        {props.thisClaim.claims.length > 0 &&\n          props.thisClaim.claims.map((claim, index) => (\n            <section className=\"flex flex-col px-2 pt-3\" key={index + claim.id}>\n              {/* CLAIM COMMENT ==>> LEVEL 1 ==================================================== */}\n              <div className=\"flex flex-col items-start gap-2\">\n                <div className=\"flex items-center gap-2 bg-blue-100 rounded py-1 px-2\">\n                  <MdInfoOutline />\n                  {getReasonById(props.thisClaim.default_claim_resaons)\n                    ? getReasonById(props.thisClaim.default_claim_resaons)!\n                        .reason\n                    : \"\"}\n                </div>\n                <p>{claim.reason}</p>\n                <span className=\"text-gray-500 text-xs\">\n                  {showDate(claim.createdAt)}\n                </span>\n              </div>\n\n              {/* RESPONSE OF LEVELS ======================================= */}\n              {isClaimEvaluated(props.thisClaim, claim.level) && (\n                <section className=\"mt-4\">\n                  <span className=\"text-gray-500 italic font-semibold\">\n                    Response (level {index + 1})\n                  </span>\n                  <div className=\"border-t-2\">\n                    <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n                      <span className={`italic`}>Status:</span>\n                      <span\n                        className={`font-bold ${\n                          claim.decision_taken_status ===\n                          ClaimDecisionStatus.REJECTED\n                            ? \"text-yellow-900\"\n                            : \"text-blue-600\"\n                        } rounded px-3 py-1`}\n                      >\n                        {capitalizeFirstLetter(\n                          claim.decision_taken_status.toLocaleLowerCase()\n                        )}\n                      </span>\n                    </div>\n                    <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n                      <span className={`italic`}>Evaluated by:</span>\n                      <span className=\"font-semibold\">\n                        {claim.evaluater.name}\n                      </span>\n                    </div>\n                    <div className=\"flex items-start gap-2 text-sm text-gray-600\">\n                      <span className={`italic`}>Reason:</span>\n                      <span className=\"font-normal\">\n                        {claim.evaluation_comment}\n                      </span>\n                    </div>\n                  </div>\n                </section>\n              )}\n              {/* CLAIM COMMENT ==>> LEVELS ==================================================== */}\n            </section>\n          ))}\n        {/* END CLAIM LEVELS DETAILS ==================================================== */}\n      </div>\n      <section>\n        {!props.reClaiming && (\n          <div className=\"mx-4 mb-5 mt-3 flex items-center justify-between\">\n            <span\n              className={`${\n                props.thisClaim.last_claim_status === ClaimStatus.PENDING\n                  ? \"text-yellow-700\"\n                  : props.thisClaim.last_claim_status === ClaimStatus.DELETED\n                  ? \"text-red-700\"\n                  : \"text-green-700\"\n              } italic font-semibold`}\n            >\n              {capitalizeFirstLetter(\n                props.thisClaim.last_claim_status.toLocaleLowerCase()\n              )}\n            </span>\n\n            {isReclaimAllowed(props.thisClaim) && (\n              <button\n                className=\"btn btn-blue\"\n                onClick={() => props.setReClaiming(true)}\n                disabled={props.loadingRequest}\n              >\n                Reclaim\n              </button>\n            )}\n          </div>\n        )}\n        {/* right part */}\n        {props.reClaiming && (\n          <div className=\"flex flex-col md:flex-row items-end md:items-start gap-1 w-full\">\n            <div className=\"w-full px-2\">\n              <textarea\n                placeholder={`Reason of your reclaim...`}\n                cols={50}\n                rows={3}\n                className={`border border-${\n                  props.formError && props.formError.element === \"comment\"\n                    ? \"red\"\n                    : \"gray\"\n                }-400 rounded px-3 py-1 w-full focus:outline-none`}\n                style={{ resize: \"none\" }}\n                value={props.reClaimingMsg}\n                onChange={(e) => {\n                  props.setReClaimingMsg(e.target.value);\n                  props.setFormError(null);\n                }}\n                disabled={props.loadingRequest}\n              ></textarea>\n              {props.formError && props.formError.element === \"comment\" && (\n                <p className=\"text-red-800\">{props.formError.msg}</p>\n              )}\n            </div>\n            <div className=\"flex flex-row md:flex-col gap-1 max-w-full px-2\">\n              <button\n                className=\"bg-gray-700 hover:bg-gray-800 px-4 py-2 font-semibold rounded text-white inline-flex items-center space-x-2 focus:outline-none\"\n                onClick={() => {\n                  props.setReClaimingMsg(\"\");\n                  props.setReClaiming(false);\n                  props.setFormError(null);\n                }}\n                disabled={props.loadingRequest}\n              >\n                <RiArrowGoBackFill className=\"w-5 h-5\" />\n                <span>Back</span>\n              </button>\n              <button\n                className=\"bg-blue-700 hover:bg-blue-800 px-4 py-2 font-semibold rounded text-white inline-flex items-center space-x-2 focus:outline-none\"\n                disabled={props.loadingRequest}\n                onClick={() => handleSubmit()}\n              >\n                {props.loadingRequest ? (\n                  <div className=\"\">Loading...</div>\n                ) : (\n                  <div className=\"inline-flex items-center space-x-2 gap-1\">\n                    <FaRegCheckCircle className=\"w-5 h-5\" />\n                    <span>Confirm</span>\n                  </div>\n                )}\n              </button>\n            </div>\n          </div>\n        )}\n        {/* end right part */}\n      </section>\n    </section>\n  );\n};\n\nexport default React.memo(connect(null, {\n  createReClaim,\n  PushPopupAlert,\n})(ClaimDocView));\n","import moment from \"moment\";\nimport React, { useState } from \"react\";\nimport { IoHandLeftSharp } from \"react-icons/io5\";\nimport {\n  compareWithToday,\n  ExamDoneDetailsAnswers,\n} from \"../../containers/CandidateExams/CandidateExams\";\nimport { PlansTypeKeys } from \"../../interfaces\";\nimport { TimeZone } from \"../../utils/app.config\";\nimport { DATE } from \"../../utils/functions\";\nimport ClaimFormComponent from \"../ClaimForm/ClaimFormComponent\";\nimport { AnswersDetails } from \"./AnswersDetails\";\n\ninterface CandidateAnswersDetailsProps {\n  exam_id: ExamDoneDetailsAnswers;\n  showAnswers: boolean;\n}\n\nconst CandidateAnswersDetails = (props: CandidateAnswersDetailsProps) => {\n  const today = moment().tz(TimeZone);\n  let tomorrow = new Date();\n  tomorrow.setDate(today.date() + 1);\n  const [claim, setClaim] = useState<boolean>(false);\n  return (\n    <div>\n      {/* Check if period is open for claims */}\n      {compareWithToday(today, props.exam_id.exam_date) === false ? (\n        <div className=\"bg-yellow-100 text-yellow-800 font-extrabold text-center flex flex-col items-center justify-center text-lg px-2 py-6\">\n          <div className=\"mb-5 text-3xl\">\n            Please wait, the exam details will be visible soon!\n          </div>\n          <div className=\"text-gray-600\">Exam details will be visible from</div>\n          <div className=\"bg-white rounded-full px-3 py-1 text-gray-700\">\n            {DATE(tomorrow.toString())}\n          </div>\n        </div>\n      ) : claim === false ? (\n        <div className=\"mb-20\">\n          <AnswersDetails\n            exam_id={props.exam_id}\n            showAnswers={props.showAnswers}\n          />\n          <div\n            onClick={() => setClaim(true)}\n            className=\"bg-blue-100 flex flex-row items-center px-3 py-2 -mt-10\"\n          >\n            <div className=\"btn bg-green-600 text-white text-center w-max px-6 text-2xl flex flex-row item-center justify-center gap-3 cursor-pointer\">\n              <IoHandLeftSharp className=\"text-3xl \" />{\" \"}\n              <span>Exam marks Claim</span>\n            </div>\n          </div>\n        </div>\n      ) : (\n        <div className=\"bg-gray-100 mt-4 pt-2 rounded\">\n          <ClaimFormComponent\n            setFormState={setClaim}\n            claim_type={PlansTypeKeys.EXAMINATION}\n            file_id={props.exam_id.exam_id}\n          />\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default CandidateAnswersDetails;\n","import React, { Component, Fragment, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { BiArrowBack } from \"react-icons/bi\";\nimport { BsFillFileEarmarkTextFill } from \"react-icons/bs\";\nimport axios from \"axios\";\nimport { API } from \"../../utils/api\";\nimport { errorToText } from \"../../utils/errors\";\nimport { setAxiosToken } from \"../../utils/AxiosToken\";\nimport { connect } from \"react-redux\";\nimport moment from \"moment-timezone\";\nimport { TimeZone } from \"../../utils/app.config\";\nimport { Redirect } from \"react-router-dom\";\nimport {\n  Auth,\n  CandidateApplicationsStoreInterface,\n  candidateExamStoreInterface,\n  FC_Access,\n  FC_GetProfileDetails,\n  LoadCandidateApplications,\n  setSelectedCandidateExam,\n  setSelectedCourse,\n  setSelectedPosition,\n  InitializeExamDetails,\n  loadExamsDone,\n  AddUserApplication,\n  loadApplicationPeriods,\n  applicationPeriodsStoreInterface,\n  InitialExamDetails,\n} from \"../../actions\";\nimport { StoreState } from \"../../reducers\";\nimport { UserExamStatus, UserExamsListInterface } from \"../../interfaces/exam\";\nimport Loading from \"../../components/Loading/Loading\";\nimport { DATE, getMinutesFromTwoDates } from \"../../utils/functions\";\nimport { CountDown } from \"../../components/CountDown/CountDown\";\nimport { ExamTimeStatus, validateExamDate } from \"../../utils/question_bank\";\nimport { course, PositionAPI, PositionAPICourse } from \"../../interfaces\";\nimport {\n  ApplicationPeriodGet,\n  ApplicationStates,\n  GetApplicationsAPI,\n} from \"../../interfaces/application\";\nimport { UserAccessList } from \"../../utils/auth_access\";\nimport { MdClose } from \"react-icons/md\";\nimport ChooseExamCenter, {\n  LocationTableInterface,\n} from \"../Application/ExamCenter/ChooseExamCenter\";\nimport { sentExamInterface } from \"../Application/ExamCenter/ExamCenter\";\nimport Modal, { ModalSize, Themes } from \"../../components/Modal/Modal\";\nimport CandidateAnswersDetails from \"../../components/AnswersDetails/CandidateAnswersDetails\";\n\nexport const compareWithToday = (tooday: moment.Moment, date: string) => {\n  const myDate = DATE(date, \"MM/DD/YYYY\");\n  let todayConverted =\n    (tooday.get(\"month\") < 9 ? \"0\" : \"\") +\n    (tooday.get(\"month\") + 1).toString() +\n    \"/\" +\n    tooday.get(\"date\") +\n    \"/\" +\n    tooday.get(\"year\");\n  if (new Date(myDate).getTime() < new Date(todayConverted).getTime()) {\n    return true;\n  }\n  return false;\n};\n\nexport interface ExamDoneDetailsAnswers {\n  exam_id: string;\n  course: string;\n  course_name: string;\n  discription: string;\n  termes: string;\n  rules: {\n    right_click_enabled: boolean;\n    copy_enabled: boolean;\n    paste_enabled: boolean;\n    stop_candidate_when_comeback: boolean;\n    allow_to_leave_browser: boolean;\n  };\n  period: string;\n  exam_date: string;\n}\n\ninterface NotPreparedExam {\n  course: string;\n  course_name: string;\n  course_code: string;\n  position: string;\n}\ninterface changeLocProps {\n  changeLocation: () => void;\n}\ninterface CandidateExamsProps {\n  FC_GetProfileDetails: Function;\n  auth: Auth;\n  candidateExam: candidateExamStoreInterface;\n  candidateApplications: CandidateApplicationsStoreInterface;\n  LoadCandidateApplications: (\n    user_id: string,\n    callback: (loading: boolean) => void\n  ) => void;\n  setSelectedCandidateExam: (selected_exam: InitialExamDetails | null) => void; // Not used\n  setSelectedCourse: (course: course | null) => void;\n  setSelectedPosition: (position: PositionAPI) => void;\n  InitializeExamDetails: (\n    periodId: string,\n    courseId: string,\n    district_id: string,\n    center_id: string,\n    room_id: string,\n    position: PositionAPI,\n    start_exam: boolean,\n    callback: (loading: boolean) => void\n  ) => void;\n  loadExamsDone: (\n    periodId: string,\n    userId: string,\n    callback: (loading: boolean) => void\n  ) => void;\n  AddUserApplication: (application: GetApplicationsAPI) => void;\n  periods: applicationPeriodsStoreInterface;\n  loadApplicationPeriods: (callback: (loading: boolean) => void) => void;\n}\n\nconst ChangeLocationComponent = (props: changeLocProps): JSX.Element => {\n  const [display, setDisplay] = useState<boolean>(true);\n  if (display === false) {\n    return <div></div>;\n  }\n  return (\n    <div className=\"absolute right-2 left-2 md:right-1/4 md:left-1/4 lg:left-1/2 lg:right-auto bg-yellow-50 shadow-xl rounded py-1 px-1 flex flex-row justify-between items-center gap-2 text-yellow-800 -mt-5 lg:-mt-8\">\n      <div className=\"flex flex-row gap-2 items-center justify-between w-full pl-1\">\n        <span className=\"font-bold\">You are advised to change location</span>\n        <div\n          onClick={props.changeLocation}\n          className=\"px-2 py-1 rounded bg-blue-100 text-blue-600 w-max cursor-pointer\"\n        >\n          Change\n        </div>\n      </div>\n      <div\n        onClick={() => setDisplay(false)}\n        className=\"bg-yellow-100 text-yellow-600 rounded-full flex items-center justify-center p-1 h-8 w-8 cursor-pointer\"\n      >\n        <MdClose className=\"text-4xl\" />\n      </div>\n    </div>\n  );\n};\n\ninterface candidatePendingExamsList {\n  preparedExam: UserExamsListInterface[];\n  notPreparedExam: NotPreparedExam[];\n}\ninterface CandidateExamsState {\n  loading: boolean;\n  loadingExamsDone: boolean;\n  candidateExams: candidatePendingExamsList | null;\n  activeExams: string[];\n  candidateApplications: GetApplicationsAPI[] | null;\n  selectedCourse: course | null;\n  centersModal: boolean;\n  maxExamModal: boolean;\n  selectedPosition: string;\n  successMessage: string;\n  selectedExam: ExamDoneDetailsAnswers | null;\n  doing_exam: boolean;\n}\n\nexport class _CandidateExams extends Component<\n  CandidateExamsProps,\n  CandidateExamsState\n> {\n  constructor(props: CandidateExamsProps) {\n    super(props);\n\n    this.state = {\n      loading: false,\n      loadingExamsDone: false,\n      candidateExams: null,\n      activeExams: [],\n      candidateApplications: null,\n      selectedCourse: null,\n      centersModal: false,\n      maxExamModal: false,\n      selectedPosition: \"\",\n      successMessage: \"\",\n      selectedExam: null,\n      doing_exam: false,\n    };\n  }\n  setLoading = (status: boolean) => {\n    this.setState({ loading: status });\n  };\n  setloadingExamsDone = (status: boolean) => {\n    this.setState({ loadingExamsDone: status });\n  };\n  loadCandidateExams = async (user: string, period: string) => {\n    this.setLoading(true);\n    setAxiosToken();\n    try {\n      const res = await axios.get<candidatePendingExamsList>(\n        `${API.QBank}/exam/user/${user}/${period}`\n      );\n      this.setState({ candidateExams: res.data });\n      // console.log(\"My exams list: \", res.data);\n    } catch (error: any) {\n      console.log(\"My exams error: \", { ...error });\n      alert(errorToText(error));\n    }\n    this.setLoading(false);\n  };\n  loadUserProfileDetails = () => {\n    this.setLoading(true);\n    this.props.FC_GetProfileDetails(\n      this.props.auth.user.user_id,\n      (status: boolean, msg: string) => {\n        if (status === true) {\n          this.setLoading(true);\n        } else {\n          this.setLoading(true);\n        }\n      }\n    );\n  };\n\n  InitializationFn = (\n    application: GetApplicationsAPI,\n    item: UserExamsListInterface\n  ) => {\n    for (let course of application.position.courses) {\n      let testDone = this.props.candidateExam.user_exams_temp.find(\n        (itm) => itm.course === course.course_id\n      );\n      if (testDone === undefined) {\n        let center_id = application.exams.find(\n          (itm) => itm.course_id === course.course_id\n        );\n        if (center_id !== undefined) {\n          if (\n            application.application_status === ApplicationStates.Shortlisted\n          ) {\n            // Select exam\n            this.props.setSelectedPosition(application.position);\n            this.props.setSelectedCourse(\n              application.position.courses.find(\n                (itm) => itm.course_id === item.course\n              )!\n            );\n            this.setState({ doing_exam: true });\n            return (\n              this.props.periods.selected_period &&\n              this.props.InitializeExamDetails(\n                application.application_session.session_plan_id,\n                course.course_id,\n                center_id.district_id,\n                center_id.center_id,\n                center_id.room_id,\n                application.position,\n                true,\n                this.setLoading\n              )\n            );\n          } else {\n            alert(\"Corresponding application is not shortlisted!\");\n          }\n        }\n      }\n    }\n  };\n  loadUserApplications = async () => {\n    this.props.LoadCandidateApplications(\n      this.props.auth.user.user_id,\n      this.setLoading\n    );\n  };\n  findLocation = (position_id: string, course_id: string) => {\n    if (this.props.candidateApplications.candidate_applications !== null) {\n      const test = this.props.candidateApplications.candidate_applications.find(\n        (item) =>\n          item.position.position_id === position_id &&\n          item.exams.filter((itm) => itm.course_id === course_id)\n      );\n      if (test !== undefined) {\n        let course = test.exams.find((itm) => itm.course_id === course_id);\n        if (course !== undefined) {\n          return course;\n        }\n      }\n    }\n    return null;\n  };\n  updateLocation = async (\n    application_id: string,\n    exams: sentExamInterface[]\n  ) => {\n    this.setState({ loading: true });\n    for (let i in exams) {\n      try {\n        const res = await axios.post(\n          `${API.APPLICATION}/application/updatemissed`,\n          {\n            application_id: application_id,\n            exams: exams[i],\n          }\n        );\n        if (res.status === 200) {\n          this.setState({\n            selectedCourse: null,\n            centersModal: false,\n            maxExamModal: false,\n            selectedPosition: \"\",\n            successMessage: \"Location updated successfully!\",\n          });\n          this.loadUserApplications();\n        }\n      } catch (error: any) {\n        console.log(\"Update loc err: \", { ...error });\n      }\n    }\n  };\n  updateLocationFunction = (exams: sentExamInterface[]) => {\n    if (this.props.candidateApplications.candidate_applications !== null) {\n      let application =\n        this.props.candidateApplications.candidate_applications.find(\n          (item) => item.position.position_id === this.state.selectedPosition\n        );\n      if (application !== undefined) {\n        this.updateLocation(application.application_id, exams);\n      } else {\n        alert(\"Invalid application\");\n      }\n    } else {\n      alert(\"Missing application\");\n    }\n  };\n  addLocation = (\n    course_id: string,\n    course_name: string,\n    course_code: string,\n    location: LocationTableInterface,\n    exam_id: string\n  ) => {\n    return this.updateLocationFunction([\n      {\n        course_id: course_id,\n        proctoring_type: \"Center\",\n        center_id: location.center_id,\n        district_id: location.district_id,\n      },\n    ]);\n  };\n  componentDidMount = () => {\n    const selPeriod =\n      this.props.periods.selected_period === null\n        ? this.props.auth.application_session?.session_plan_id\n        : this.props.periods.selected_period.session_plan_id;\n\n    if (selPeriod !== undefined && this.state.candidateExams === null) {\n      this.loadCandidateExams(this.props.auth.user.user_id, selPeriod);\n    }\n    if (\n      this.props.auth.user.sex === \"\" ||\n      this.props.auth.user.sex.length === 0\n    ) {\n      this.loadUserProfileDetails();\n    }\n    if (this.props.periods.applicationPeriods === null) {\n      this.props.loadApplicationPeriods(this.setLoading);\n    }\n    if (this.props.candidateApplications.candidate_applications === null) {\n      this.loadUserApplications();\n    }\n  };\n\n  removeDuplicatesExams = (\n    exams: UserExamsListInterface[]\n  ): UserExamsListInterface[] => {\n    let temp: UserExamsListInterface[] = [];\n    if (this.props.candidateApplications.candidate_applications !== null) {\n      for (let item of exams) {\n        if (\n          this.props.candidateApplications.candidate_applications.find(\n            (test) => test.position.position_id === item.position\n          ) !== undefined\n        ) {\n          if (temp.find((itm) => itm._id === item._id) === undefined) {\n            temp = [...temp, item];\n          }\n        }\n      }\n    }\n    return temp;\n  };\n\n  removeDuplicatesNotPreparedExams = (\n    exams: NotPreparedExam[]\n  ): NotPreparedExam[] => {\n    let temp: NotPreparedExam[] = [];\n    if (this.props.candidateApplications.candidate_applications !== null) {\n      for (let item of exams) {\n        if (\n          this.props.candidateApplications.candidate_applications.find(\n            (test) => test.position.position_id === item.position\n          ) !== undefined\n        ) {\n          if (temp.find((itm) => itm.course === item.course) === undefined) {\n            temp = [...temp, item];\n          }\n        }\n      }\n    }\n    return temp;\n  };\n  setTimeOut = (exam_id: string) => {\n    let temps: string[] = this.state.activeExams;\n    this.setState({\n      activeExams: [...temps, exam_id],\n    });\n  };\n  selectApplication = (\n    applications: GetApplicationsAPI[] | null,\n    position_id: string,\n    course_id: string,\n    selected_period: ApplicationPeriodGet | null\n  ): GetApplicationsAPI | null => {\n    if (applications !== null && selected_period !== null) {\n      let temp = applications.find(\n        (item) =>\n          item.position.position_id === position_id &&\n          item.application_session.session_plan_id ===\n            selected_period.session_plan_id\n      );\n      if (temp !== undefined) {\n        if (\n          temp.position.courses.find((itm) => itm.course_id === course_id) !==\n          undefined\n        ) {\n          return temp;\n        }\n      }\n    }\n    return null;\n  };\n  setMaxExamModal = (status: boolean) => {\n    this.setState({ maxExamModal: status });\n  };\n\n  changeLocation = (item: PositionAPICourse) => {\n    this.setState({ selectedCourse: item, centersModal: true });\n    this.setMaxExamModal(true);\n  };\n\n  closeModal = () => {\n    this.setState({ centersModal: false });\n    this.setMaxExamModal(false);\n  };\n\n  render() {\n    const today = moment().tz(TimeZone);\n    // console.log(\"TODAY: \", today.get(\"days\"));\n    const selPeriod =\n      this.props.periods.selected_period === null\n        ? this.props.auth.application_session\n        : this.props.periods.selected_period;\n    if (!FC_Access(this.props.auth, UserAccessList.MY_APPLICATION).view) {\n      return <Redirect to=\"/\" />;\n    }\n    if (\n      this.props.candidateExam.selected_exam_id !== null &&\n      this.props.candidateExam.selected_exam_details !== null &&\n      (this.props.candidateExam.doing_exam === true ||\n        this.state.doing_exam === true)\n    ) {\n      return <Redirect to=\"/do-exam\" />;\n    }\n    return (\n      <Fragment>\n        {this.state.selectedCourse === null ? (\n          <div className=\"mt-2 -ml-2 mr-3 pb-5\">\n            <div className=\"rounded mt-2\">\n              <div className=\"flex flex-row items-center gap-3\">\n                <Link\n                  to=\"/apps-page\"\n                  title=\"Back to menus\"\n                  className=\"bg-white group hover:bg-blue-50 h-10 w-10 flex items-center justify-center rounded-full cursor-pointer\"\n                >\n                  <BiArrowBack className=\"text-3xl text-blue-600 group-hover:text-blue-800\" />\n                </Link>\n                <div className=\"flex flex-col\">\n                  <span className=\"font-extrabold text-3xl\">My exams</span>\n                  <span className=\"text-gray-600 text-sm\">\n                    List of exams that are assigned to you\n                  </span>\n                </div>\n              </div>\n            </div>\n            {this.state.successMessage !== \"\" && (\n              <div\n                title=\"Click to close the message\"\n                onClick={() => this.setState({ successMessage: \"\" })}\n                className=\"animate__animated animate__zoomIn px-3 py-2 bg-green-500 text-white my-2 rounded cursor-pointer\"\n              >\n                {this.state.successMessage}\n              </div>\n            )}\n            {console.log(\"Not found: \", this.state.candidateExams)}\n            {this.state.loading === true ||\n            this.state.loadingExamsDone === true ||\n            this.state.candidateExams === null ||\n            this.props.candidateApplications.candidate_applications == null ? (\n              <div className=\"px-4 pt-5 pb-1 bg-white mt-2 rounded\">\n                <Loading />\n              </div>\n            ) : this.removeDuplicatesExams(\n                this.state.candidateExams.preparedExam\n              ).length === 0 ? (\n              <div className=\"bg-gray-50 rounded px-4 py-5 text-center font-bold mt-2 text-2xl text-gray-400\">\n                No exams found\n              </div>\n            ) : (\n              this.removeDuplicatesExams(\n                this.state.candidateExams.preparedExam\n              ).map((item, i) => (\n                <div key={i + 1} className=\"my-2 rounded bg-white p-2 group\">\n                  <div className=\"flex flex-col md:flex-row items-center justify-between\">\n                    <div className=\"flex flex-col md:flex-row items-center gap-2 w-full\">\n                      <div>\n                        <BsFillFileEarmarkTextFill className=\"hidden md:block text-4xl text-gray-300 group-hover:text-blue-600\" />\n                      </div>\n                      <div className=\"flex flex-col w-full\">\n                        <span className=\"text-base text-gray-800 font-extrabold group-hover:text-blue-600\">\n                          {item.course_name}\n                        </span>\n                        <div className=\"flex flex-row items-center justify-start w-full gap-3 -mt-1\">\n                          <div className=\"text-sm text-gray-500 group-hover:text-blue-600\">\n                            Date: {DATE(item.exam_date, \"DD/MM/YYYY\")}\n                          </div>\n                          <div className=\"hidden md:block text-sm bg-gray-100 underline text-gray-500  font-bold rounded-full px-2\">\n                            Start time: {item.start_time}\n                          </div>\n                          <div className=\"hidden md:block text-sm bg-blue-100 text-blue-900  font-bold rounded-full px-2\">\n                            Status: {item.user_status}\n                          </div>\n                        </div>\n                        {this.findLocation(item.position, item.course) !==\n                          null && (\n                          <div className=\"flex flex-row items-center gap-2 mt-2\">\n                            <div>\n                              Exam center:{\" \"}\n                              <span className=\"text-sm bg-gray-100 text-blue-900 group-hover:text-blue-600 font-bold rounded-full px-2 w-max\">\n                                {\n                                  this.findLocation(item.position, item.course)\n                                    ?.center_name\n                                }\n                              </span>\n                            </div>\n                            <div className=\"w-max flex flex-col md:flex-row\">\n                              Room number:{\" \"}\n                              {this.findLocation(item.position, item.course)\n                                ?.room_number === 0 ? (\n                                <span className=\"text-sm bg-yellow-100 text-yellow-900 group-hover:text-yellow-800 font-bold rounded-full px-2 w-max flex items-center justify-center\">\n                                  Waiting room\n                                </span>\n                              ) : (\n                                <span className=\"text-sm bg-gray-100 text-blue-900 group-hover:text-blue-600 font-bold rounded-full px-2 w-max\">\n                                  {\n                                    this.findLocation(\n                                      item.position,\n                                      item.course\n                                    )?.room_number\n                                  }\n                                </span>\n                              )}\n                              {/* Change loc */}\n                              {this.findLocation(item.position, item.course)\n                                ?.room_number === 0 &&\n                                validateExamDate(\n                                  item.exam_date,\n                                  item.start_time,\n                                  item.end_time\n                                ) !== ExamTimeStatus.Expired && (\n                                  <ChangeLocationComponent\n                                    changeLocation={() => {\n                                      this.setState({\n                                        selectedCourse: {\n                                          course_name: item.course_name,\n                                          course_code: item.course_code,\n                                          description: item.course_name,\n                                          school_levels: [],\n                                          course_id: item.course,\n                                        },\n                                        selectedPosition: item.position,\n                                        centersModal: true,\n                                      });\n                                      this.setMaxExamModal(true);\n                                    }}\n                                  />\n                                )}\n                            </div>\n                          </div>\n                        )}\n                      </div>\n                    </div>\n                    <div className=\"lg:w-full flex flex-row items-center justify-end\">\n                      {this.state.activeExams.find(\n                        (itm) => itm === item._id\n                      ) !== undefined ||\n                      item.user_status === UserExamStatus.Editing ||\n                      item.user_status === UserExamStatus.Paused ? (\n                        validateExamDate(\n                          item.exam_date,\n                          item.start_time,\n                          item.end_time\n                        ) !== ExamTimeStatus.Expired ? (\n                          this.selectApplication(\n                            this.props.candidateApplications\n                              .candidate_applications,\n                            item.position,\n                            item.course,\n                            selPeriod\n                          )?.application_status !==\n                          ApplicationStates.Shortlisted ? (\n                            <div className=\"text-yellow-800 font-extrabold text-base bg-yellow-100 rounded px-3 py-1 cursor-not-allowed\">\n                              Not shortlisted\n                            </div>\n                          ) : (\n                            <div\n                              onClick={() => {\n                                let application = this.selectApplication(\n                                  this.props.candidateApplications\n                                    .candidate_applications,\n                                  item.position,\n                                  item.course,\n                                  selPeriod\n                                );\n                                if (application !== null) {\n                                  this.InitializationFn(application, item);\n                                } else {\n                                  alert(\"Invalid exam!\");\n                                }\n                              }}\n                              className={`${\n                                item.user_status === UserExamStatus.Editing ||\n                                item.user_status === UserExamStatus.Paused\n                                  ? \"bg-green-600 group-hover:bg-green-800\"\n                                  : \"bg-blue-600 group-hover:bg-blue-800\"\n                              } btn  text-white cursor-pointer w-max`}\n                            >\n                              {item.user_status === UserExamStatus.Editing\n                                ? \"Back to Exam\"\n                                : item.user_status === UserExamStatus.Paused\n                                ? \"Paused, back to exam\"\n                                : \"Start Exam\"}\n                            </div>\n                          )\n                        ) : item.user_status === UserExamStatus.Editing ||\n                          item.user_status === UserExamStatus.Done ||\n                          item.user_status === UserExamStatus.Paused ||\n                          item.user_status === UserExamStatus.Removed ? (\n                          <div className=\"text-blue-700 flex flex-col items-end justify-center w-max\">\n                            <span>Marks</span>\n                            <span className=\"text-2xl font-extrabold -mt-2\">\n                              {item.user_marks.toFixed(\n                                item.user_marks === 100 || item.user_marks === 0\n                                  ? 0\n                                  : 2\n                              )}\n                              %\n                            </span>\n                            <div\n                              onClick={() =>\n                                this.setState({\n                                  selectedExam: {\n                                    course: item.course,\n                                    course_name: item.course_name,\n                                    discription: item.discription,\n                                    termes: item.termes,\n                                    rules: item.rules,\n                                    period: item.period,\n                                    exam_date: item.exam_date,\n                                    exam_id: item._id,\n                                  },\n                                })\n                              }\n                              className=\"btn bg-blue-100 text-blue-700 cursor-pointer\"\n                            >\n                              Check details\n                            </div>\n                          </div>\n                        ) : (\n                          <div className=\"bg-yellow-100 text-yellow-700 font-extrabold text-base px-3 py-1 rounded-md w-max\">\n                            Expired\n                          </div>\n                        )\n                      ) : item.found === false ? (\n                        <div\n                          title=\"Please wait for the exam time\"\n                          className=\"text-lg lg:text-xl font-extrabold bg-green-100 text-green-700 px-3 py-1 rounded cursor-not-allowed w-max\"\n                        >\n                          <CountDown\n                            start_time={new Date(today.toString()).toString()}\n                            duration_min={getMinutesFromTwoDates(\n                              new Date(today.toString()),\n                              new Date(\n                                DATE(item.exam_date, \"MM/DD/YYYY\") +\n                                  \" \" +\n                                  item.start_time\n                              )\n                            )}\n                            timeout={() => this.setTimeOut(item._id)}\n                            returnString={true}\n                            labels={true}\n                            days\n                          />\n                        </div>\n                      ) : (\n                        <div className=\"text-blue-700 flex flex-col items-end justify-center w-max\">\n                          <span>Marks</span>\n                          <span className=\"text-2xl font-extrabold -mt-2\">\n                            {item.user_marks.toFixed(\n                              item.user_marks === 100 || item.user_marks === 0\n                                ? 0\n                                : 2\n                            )}\n                            %\n                          </span>\n                          <div\n                            onClick={() =>\n                              this.setState({\n                                selectedExam: {\n                                  course: item.course,\n                                  course_name: item.course_name,\n                                  discription: item.discription,\n                                  termes: item.termes,\n                                  rules: item.rules,\n                                  period: item.period,\n                                  exam_date: item.exam_date,\n                                  exam_id: item._id,\n                                },\n                              })\n                            }\n                            className=\"btn bg-blue-100 text-blue-700 cursor-pointer\"\n                          >\n                            Check details\n                          </div>\n                        </div>\n                      )}\n                    </div>\n                  </div>\n                </div>\n              ))\n            )}\n            {/* Not prepared exams */}\n            {this.state.candidateExams !== null &&\n              this.state.loading !== true &&\n              this.removeDuplicatesNotPreparedExams(\n                this.state.candidateExams.notPreparedExam\n              ).length > 0 &&\n              this.removeDuplicatesNotPreparedExams(\n                this.state.candidateExams.notPreparedExam\n              ).map((item, i) => (\n                <div\n                  key={i + 1}\n                  className=\"my-2 rounded bg-white p-2 py-3 group\"\n                >\n                  <div className=\"flex flex-col md:flex-row items-center justify-between\">\n                    <div className=\"flex flex-col md:flex-row items-center gap-2 w-full\">\n                      <div className=\"\">\n                        <BsFillFileEarmarkTextFill className=\"hidden md:block text-4xl text-gray-300 group-hover:text-blue-600\" />\n                      </div>\n                      <div className=\"flex flex-col\">\n                        <span className=\"text-base text-gray-600 font-bold group-hover:text-blue-600\">\n                          {item.course_name}\n                        </span>\n                        <div className=\"flex flex-row items-center gap-3 -mt-1\">\n                          {this.findLocation(item.position, item.course) !==\n                            null && (\n                            <div className=\"flex flex-row items-center gap-2 mt-2\">\n                              <div className=\"flex flex-col md:flex-row md:items-center\">\n                                Exam center:{\" \"}\n                                <span className=\"text-sm bg-gray-100 text-blue-900 group-hover:text-blue-600 font-bold rounded-full px-2 w-max\">\n                                  {\n                                    this.findLocation(\n                                      item.position,\n                                      item.course\n                                    )?.center_name\n                                  }\n                                </span>\n                              </div>\n                              <div className=\"w-max flex flex-col md:flex-row md:items-center\">\n                                Room number:{\" \"}\n                                {this.findLocation(item.position, item.course)\n                                  ?.room_number === 0 ? (\n                                  <span className=\"text-sm bg-yellow-100 text-yellow-900 group-hover:text-yellow-800 font-bold rounded-full px-2 w-max flex items-center justify-center\">\n                                    Waiting room\n                                  </span>\n                                ) : (\n                                  <span className=\"text-sm bg-gray-100 text-blue-900 group-hover:text-blue-600 font-bold rounded-full px-2 w-max\">\n                                    {\n                                      this.findLocation(\n                                        item.position,\n                                        item.course\n                                      )?.room_number\n                                    }\n                                  </span>\n                                )}\n                                {/* Change loc */}\n                                {this.findLocation(item.position, item.course)\n                                  ?.room_number === 0 && (\n                                  <ChangeLocationComponent\n                                    changeLocation={() => {\n                                      this.setState({\n                                        selectedCourse: {\n                                          course_name: item.course_name,\n                                          course_code: item.course_code,\n                                          description: item.course_name,\n                                          school_levels: [],\n                                          course_id: item.course,\n                                        },\n                                        selectedPosition: item.position,\n                                        centersModal: true,\n                                      });\n                                      this.setMaxExamModal(true);\n                                    }}\n                                  />\n                                )}\n                              </div>\n                            </div>\n                          )}\n                        </div>\n                      </div>\n                    </div>\n                    <div className=\"bg-gray-100 text-gray-600 font-extrabold text-base px-3 py-1 rounded-md\">\n                      Not prepared\n                    </div>\n                  </div>\n                </div>\n              ))}\n          </div>\n        ) : this.state.loading === true ? (\n          <div className=\"px-4 pt-5 pb-1 bg-white mt-2 rounded\">\n            <Loading />\n          </div>\n        ) : (\n          <div className=\"animate__animated animate__fadeInUp animate__faster mt-2 mr-1 -ml-3 rounded-t-md bg-white shadow-md pb-5\">\n            <div className=\"flex flex-row gap-4 items-center justify-between bg-blue-100 py-2 px-2 mb-2\">\n              <div className=\"flex flex-col w-full\">\n                <div className=\"flex flex-row gap-2 items-center justify-between w-full pl-2\">\n                  <span className=\"font-bold text-xl text-gray-800\">\n                    Change exam location\n                  </span>\n                  <div className=\"bg-white hover:text-yellow-700 hover:bg-white rounded-full p-1 h-10 w-10 border-2 border-white hover:border-yellow-600 flex items-center justify-center\">\n                    <MdClose\n                      className=\"cursor-pointer font-extrabold text-3xl\"\n                      onClick={() => {\n                        this.setState({\n                          centersModal: false,\n                          selectedCourse: null,\n                        });\n                      }}\n                    />\n                  </div>\n                </div>\n              </div>\n            </div>\n            <ChooseExamCenter\n              positionCourses={this.state.selectedCourse}\n              addLocation={this.addLocation}\n              closeModal={this.closeModal}\n            />\n          </div>\n        )}\n        {this.state.selectedExam !== null && (\n          <Modal\n            title={\n              <div className=\"text-2xl font-extrabold text-blue-600 px-2\">\n                Exam result details\n              </div>\n            }\n            backDrop={true}\n            theme={Themes.default}\n            close={() => this.setState({ selectedExam: null })}\n            backDropClose={true}\n            widthSizeClass={ModalSize.extraLarge}\n            displayClose={true}\n            padding={{ title: true }}\n          >\n            <CandidateAnswersDetails\n              exam_id={this.state.selectedExam}\n              showAnswers={false}\n            />\n          </Modal>\n        )}\n      </Fragment>\n    );\n  }\n}\n\nconst mapStateToProps = ({\n  auth,\n  candidateExam,\n  candidateApplications,\n  periods,\n}: StoreState): {\n  auth: Auth;\n  candidateExam: candidateExamStoreInterface;\n  candidateApplications: CandidateApplicationsStoreInterface;\n  periods: applicationPeriodsStoreInterface;\n} => {\n  return {\n    auth: auth,\n    candidateExam: candidateExam,\n    candidateApplications: candidateApplications,\n    periods: periods,\n  };\n};\n\nexport const CandidateExams = connect(mapStateToProps, {\n  FC_GetProfileDetails,\n  LoadCandidateApplications,\n  setSelectedCandidateExam,\n  setSelectedCourse,\n  setSelectedPosition,\n  InitializeExamDetails,\n  loadExamsDone,\n  AddUserApplication,\n  loadApplicationPeriods,\n})(_CandidateExams);\n","import React, { useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Auth, PushPopupAlert } from \"../../../actions\";\nimport {\n  getAllClaims,\n  GetClaimingTypes,\n  setSelectedClaimType,\n} from \"../../../actions/claiming\";\nimport { PopupAlertData } from \"../../../components/Alert/Popup\";\nimport { MainItem } from \"../../../components/Navigation/SideNavigation\";\nimport {\n  CandidateClaimInterface,\n  ClaimStatus,\n  PlansTypeKeys,\n} from \"../../../interfaces\";\nimport { PopupAlertTheme } from \"../../../interfaces/popupAlert\";\nimport { StoreState } from \"../../../reducers\";\nimport { ClaimingReducerType } from \"../../../reducers/claiming\";\n\nexport const filterClaimsByClaimType = (\n  claimList: CandidateClaimInterface[],\n  claimType: PlansTypeKeys | \"all\"\n): CandidateClaimInterface[] => {\n  if (claimType === \"all\") {\n    return claimList;\n  }\n\n  return claimList.filter((item) => item.type_key === claimType);\n};\n\ntype AdminFilterByTypeProps = {\n  loadingClaims: boolean;\n  FC_CountByType?: Function;\n\n  // REDUX PROPS =======================================\n  auth: Auth;\n  claiming: ClaimingReducerType;\n  GetClaimingTypes: Function;\n  setSelectedClaimType: Function;\n  getAllClaims: Function;\n  PushPopupAlert: (alert: PopupAlertData) => void;\n};\n\nconst AdminFilterByType: React.FC<AdminFilterByTypeProps> = (props) => {\n  const [loading, setLoading] = useState<boolean>(true);\n  const [loadingClaimTypes, setLoadingClaimTypes] = useState<boolean>(true);\n\n  useEffect(() => {\n    if (props.claiming.claimTypes === null) {\n      props.GetClaimingTypes((status: boolean, msg: string) => {\n        if (status === false) {\n          if (msg.length > 0) {\n            props.PushPopupAlert({\n              title: msg,\n              theme: PopupAlertTheme.danger,\n            });\n          }\n          setLoadingClaimTypes(false);\n          setLoading(false);\n        }\n      });\n    } else if (loadingClaimTypes) {\n      setLoadingClaimTypes(false);\n      setLoading(false);\n    }\n  }, [loadingClaimTypes, props]);\n\n  const countClaims = (\n    claiming: ClaimingReducerType,\n    thisType: PlansTypeKeys | \"all\"\n  ): number => {\n    let result: number = 0;\n\n    if (claiming.allClaims && thisType === \"all\") {\n      result = claiming.allClaims.filter(\n        (item) => item.last_claim_status === ClaimStatus.PENDING\n      ).length;\n    }\n    if (claiming.allClaims && thisType !== \"all\") {\n      result = claiming.allClaims.filter(\n        (item) =>\n          item.type_key === thisType &&\n          item.last_claim_status === ClaimStatus.PENDING\n      ).length;\n    }\n\n    return result;\n  };\n\n  return (\n    <React.Fragment>\n      <span className=\"mt-2 text-sm\">Filter by claim type</span>\n      {/* WHILE LOADING DATA ================================== */}\n      {(loading || props.loadingClaims) && (\n        <section className=\"space-y-2\">\n          <div className=\"w-full h-7 rounded bg-gray-200 animate__animated animate__pulse animate__delay-5s animate__infinite\"></div>\n          <div className=\"w-full h-7 rounded bg-gray-200 animate__animated animate__pulse animate__delay-5s animate__infinite\"></div>\n          <div className=\"w-full h-7 rounded bg-gray-200 animate__animated animate__pulse animate__delay-5s animate__infinite\"></div>\n          <div className=\"w-full h-7 rounded bg-gray-200 animate__animated animate__pulse animate__delay-5s animate__infinite\"></div>\n        </section>\n      )}\n      {/* END WHILE LOADING DATA ================================== */}\n\n      {/* AFTER LOADING DATA ================================== */}\n      {!loading && !props.loadingClaims && props.claiming.claimTypes && (\n        <section>\n          {/* ALL ================================= */}\n          <div\n            className=\"mt-2\"\n            onClick={() => {\n              // props.setThisClaimType(\"ALL\");\n              props.setSelectedClaimType(\"all\");\n            }}\n          >\n            <MainItem\n              title=\"All\"\n              active={props.claiming.selectedClaimType === \"all\"}\n              count={countClaims(props.claiming, \"all\")}\n            />\n          </div>\n          {/* APPLICATION ================================= */}\n          <div\n            className=\"mt-2\"\n            onClick={() => {\n              // props.setThisClaimType(ClaimTypesInterface.DOCUMENT);\n              props.setSelectedClaimType(PlansTypeKeys.APPLICATION);\n            }}\n          >\n            <MainItem\n              title={\"Application\"}\n              active={\n                props.claiming.selectedClaimType !== \"all\" &&\n                props.claiming.selectedClaimType === PlansTypeKeys.APPLICATION\n              }\n              count={countClaims(props.claiming, PlansTypeKeys.APPLICATION)}\n            />\n          </div>\n          {/* DOCUMENT ================================= */}\n          <div\n            className=\"mt-2\"\n            onClick={() => {\n              props.setSelectedClaimType(PlansTypeKeys.DOCUMENT_VALIDATION);\n            }}\n          >\n            <MainItem\n              title={\"Document\"}\n              active={\n                props.claiming.selectedClaimType !== \"all\" &&\n                props.claiming.selectedClaimType ===\n                  PlansTypeKeys.DOCUMENT_VALIDATION\n              }\n              count={countClaims(\n                props.claiming,\n                PlansTypeKeys.DOCUMENT_VALIDATION\n              )}\n            />\n          </div>\n          {/* EXAMINATION ================================= */}\n          <div\n            className=\"mt-2\"\n            onClick={() => {\n              props.setSelectedClaimType(PlansTypeKeys.EXAMINATION);\n            }}\n          >\n            <MainItem\n              title={\"Exam\"}\n              active={\n                props.claiming.selectedClaimType !== \"all\" &&\n                props.claiming.selectedClaimType === PlansTypeKeys.EXAMINATION\n              }\n              count={countClaims(props.claiming, PlansTypeKeys.EXAMINATION)}\n            />\n          </div>\n          {false && (\n            <div\n              className=\"mt-2\"\n              onClick={() => {\n                props.setSelectedClaimType(PlansTypeKeys.PLACEMENT_TRANSFER);\n              }}\n            >\n              <MainItem\n                title={\"Placement\"}\n                active={\n                  props.claiming.selectedClaimType !== \"all\" &&\n                  props.claiming.selectedClaimType ===\n                    PlansTypeKeys.PLACEMENT_TRANSFER\n                }\n                count={countClaims(\n                  props.claiming,\n                  PlansTypeKeys.PLACEMENT_TRANSFER\n                )}\n              />\n            </div>\n          )}\n        </section>\n      )}\n      {/* END AFTER LOADING DATA ================================== */}\n    </React.Fragment>\n  );\n};\n\nconst mapStateToProps = ({\n  auth,\n  claiming,\n}: StoreState): { auth: Auth; claiming: ClaimingReducerType } => {\n  return { auth, claiming };\n};\n\nexport default React.memo(\n  connect(mapStateToProps, {\n    GetClaimingTypes,\n    setSelectedClaimType,\n    getAllClaims,\n    PushPopupAlert,\n  })(AdminFilterByType)\n);\n","import React from \"react\";\nimport { AiFillDashboard } from \"react-icons/ai\";\nimport { SessionPlanInterface } from \"../../interfaces\";\n\ntype ClaimHeaderTitleProps = {\n  headerTitle: string;\n  loading: boolean;\n  loadingSession: boolean;\n  periodChanged: boolean;\n  thisPeriod: SessionPlanInterface | null;\n  setThisPeriod: (state: SessionPlanInterface | null) => void;\n  setLoadingSession: (state: boolean) => void;\n  application_sessions: SessionPlanInterface[];\n  onPeriodChange: (period_id: string) => void;\n};\n\nconst selectPeriod = (\n  sessions: SessionPlanInterface[],\n  period_id: string,\n  setThisPeriod: (state: SessionPlanInterface | null) => void\n) => {\n  setThisPeriod(\n    sessions.filter((item) => item.session_plan_id === period_id)[0]\n  );\n};\n\nconst ClaimHeaderTitle: React.FC<ClaimHeaderTitleProps> = (props) => {\n  const isLoading = (): boolean => {\n    if (props.loading || props.loadingSession || props.periodChanged) {\n      return true;\n    }\n    return false;\n  };\n\n  return (\n    <div className=\"mt-3 rounded flex flex-col md:flex-row md:justify-between items-start\">\n      <div className=\"flex flex-row items-center gap-3 mb-2\">\n        <AiFillDashboard className=\"text-6xl text-blue-600 hidden md:block\" />\n        <div className=\"flex flex-col\">\n          <span className=\"text-blue-600 text-3xl font-bold\">\n            {props.headerTitle}\n          </span>\n        </div>\n      </div>\n\n      {/* FILTER SECTION PERIOD && EDUCATION */}\n      <section className=\"w-full md:w-auto my-2 md:my-0\">\n        <div>\n          <select\n            className={`bg-white text-gray-600 border border-gray-400 rounded p-2 focus:outline-none ${\n              isLoading() ? \"cursor-wait\" : \"cursor-default\"\n            }`}\n            value={props.thisPeriod ? props.thisPeriod.session_plan_id : \"\"}\n            disabled={isLoading()}\n            onChange={(e) => {\n              selectPeriod(\n                props.application_sessions,\n                e.target.value,\n                props.setThisPeriod\n              );\n              props.setLoadingSession(true);\n              props.onPeriodChange(e.target.value);\n            }}\n          >\n            {props.application_sessions.map((session, item) => (\n              <option\n                key={session.session_plan_id + item}\n                value={session.session_plan_id}\n              >\n                {session.session_plan_name}\n              </option>\n            ))}\n          </select>\n        </div>\n      </section>\n      {/* END FILTER SECTION PERIOD && EDUCATION */}\n    </div>\n  );\n};\n\nexport default React.memo(ClaimHeaderTitle);\n","import React, { Component } from \"react\";\nimport { MdAdd, MdArrowBack, MdDelete, MdInfoOutline } from \"react-icons/md\";\nimport { connect } from \"react-redux\";\nimport { Auth, loadCourses, PushPopupAlert } from \"../../../actions\";\nimport {\n  DocumentClaimUser,\n  getClaimReasons,\n  getMyAnswers,\n  getMyClaims,\n  getMyPlacement,\n} from \"../../../actions/claiming\";\nimport {\n  getDocumentCategory,\n  getDocumentSubCategory,\n  getDocumentFields,\n} from \"../../../actions/document\";\nimport { GetAllSessionPlans } from \"../../../actions/session\";\nimport { PopupAlertData } from \"../../../components/Alert/Popup\";\nimport { SideNavigation } from \"../../../components/Navigation/SideNavigation\";\nimport NoResult, {\n  NoResultThemes,\n} from \"../../../components/NoResult/NoResult\";\nimport {\n  CandidateClaimInterface,\n  claimApplicationsInterface,\n  ClaimStatus,\n  PlansTypeKeys,\n  SessionPlanInterface,\n  course,\n} from \"../../../interfaces\";\nimport { PopupAlertTheme } from \"../../../interfaces/popupAlert\";\nimport { StoreState } from \"../../../reducers\";\nimport { ClaimingReducerType } from \"../../../reducers/claiming\";\nimport { DocumentReducerInterface } from \"../../../reducers/document\";\nimport { capitalizeFirstLetter } from \"../../../shared/dataTest\";\nimport search from \"../../../utils/search\";\nimport { filterClaimsByClaimType } from \"../Admin/AdminFilterByType\";\nimport ClaimApplView from \"../ClaimApplView\";\nimport ClaimDocView, { isClaimEvaluated } from \"../ClaimDocView\";\nimport ClaimExamView from \"../ClaimExamView\";\nimport ClaimHeaderTitle from \"../ClaimHeaderTitle\";\nimport ClaimPlacementView from \"../ClaimPlacementView\";\nimport ClaimForm, { ClaimGetDocTitle } from \"./ClaimForm\";\nimport FilterByType from \"./FilterByType\";\nimport { getCourseById, getCourseIdBySheetId } from \"./FormExamList\";\n\nexport enum ClaimTypesEnum {\n  application = \"application\",\n  document = \"document\",\n  exam = \"exam\",\n  marks_publication = \"marks publication\",\n  placement = \"placement\",\n}\n\nexport const getDocumentById = (\n  candidateDocuments: DocumentClaimUser[],\n  document_id: string\n): DocumentClaimUser | null => {\n  let result: DocumentClaimUser | undefined = candidateDocuments.find(\n    (item) => item.doc_id === document_id\n  );\n  return result ? result : null;\n};\n\nexport const whichClaimType = (\n  thisClaim: CandidateClaimInterface\n): ClaimTypesEnum | undefined => {\n  if (thisClaim.type_key === PlansTypeKeys.APPLICATION) {\n    return ClaimTypesEnum.application;\n  }\n  if (thisClaim.type_key === PlansTypeKeys.DOCUMENT_VALIDATION) {\n    return ClaimTypesEnum.document;\n  }\n  if (thisClaim.type_key === PlansTypeKeys.EXAMINATION) {\n    return ClaimTypesEnum.exam;\n  }\n  if (thisClaim.type_key === PlansTypeKeys.MARKS_PUBLICATION) {\n    return ClaimTypesEnum.marks_publication;\n  }\n  if (thisClaim.type_key === PlansTypeKeys.PLACEMENT_TRANSFER) {\n    return ClaimTypesEnum.placement;\n  }\n};\n\nexport const whichClaimStatus = (\n  thisClaim: CandidateClaimInterface\n): {\n  classes: string;\n  status: string;\n} => {\n  let classes: string, status: string;\n  switch (thisClaim.last_claim_status) {\n    case ClaimStatus.COMPLETED:\n      classes = \"text-blue-700 italic font-semiblod\";\n      status = capitalizeFirstLetter(ClaimStatus.COMPLETED.toLocaleLowerCase());\n      break;\n    case ClaimStatus.EVALUATED:\n      classes = \"text-green-700 italic font-semiblod\";\n      status = capitalizeFirstLetter(ClaimStatus.EVALUATED.toLocaleLowerCase());\n      break;\n\n    case ClaimStatus.DELETED:\n      classes = \"text-red-700 italic font-semiblod\";\n      status = capitalizeFirstLetter(ClaimStatus.DELETED.toLocaleLowerCase());\n      break;\n\n    default:\n      classes = \"text-yellow-700 italic font-semiblod\";\n      status = capitalizeFirstLetter(ClaimStatus.PENDING.toLocaleLowerCase());\n      break;\n  }\n\n  return { classes, status };\n};\n\nexport const getClaimById = (\n  claimList: CandidateClaimInterface[],\n  claim_id: string\n): CandidateClaimInterface | null => {\n  // console.log(\"====================================\");\n  // console.log({ claimList, claim_id });\n  // console.log(\"====================================\");\n  let result: CandidateClaimInterface | undefined = claimList.find(\n    (item) => item._id === claim_id\n  );\n  return result ? result : null;\n};\n\nexport const getApplicationById = (\n  candidateApplications: claimApplicationsInterface[],\n  application_id: string\n): claimApplicationsInterface | null => {\n  let result: claimApplicationsInterface | undefined =\n    candidateApplications.find(\n      (item) => item.application_id === application_id\n    );\n  return result ? result : null;\n};\n\nexport const displayDocClaimTitle = (\n  documentCategories: DocumentReducerInterface,\n  candidateDocuments: DocumentClaimUser[],\n  thisClaim: CandidateClaimInterface\n): string => {\n  let result: string = \"\";\n\n  // CHECK IF CLAIM IS FOR DOCUMENTS ===============================================\n  if (thisClaim.type_key === PlansTypeKeys.DOCUMENT_VALIDATION) {\n    let thisDoc = getDocumentById(candidateDocuments, thisClaim.claiming_on_id);\n    result = thisDoc\n      ? ClaimGetDocTitle(documentCategories, thisDoc).main\n      : \"Document not found\";\n  }\n  // END CHECK IF CLAIM IS FOR DOCUMENTS ===============================================\n  return result;\n};\n\nexport const displayClaimTitle = (\n  claiming: ClaimingReducerType,\n  documentReducer: DocumentReducerInterface,\n  allCourse: course[] | null,\n  thisClaim: CandidateClaimInterface\n): string => {\n  let result: string = thisClaim.claiming_on_id;\n\n  if (\n    thisClaim.type_key === PlansTypeKeys.DOCUMENT_VALIDATION &&\n    claiming.candidateDocuments\n  ) {\n    result = displayDocClaimTitle(\n      documentReducer,\n      claiming.candidateDocuments,\n      thisClaim\n    );\n  }\n  if (\n    thisClaim.type_key === PlansTypeKeys.APPLICATION &&\n    claiming.candidateApplications\n  ) {\n    let thisApplication = getApplicationById(\n      claiming.candidateApplications,\n      thisClaim.claiming_on_id\n    );\n    if (thisApplication) {\n      result = thisApplication.position.position_title;\n    } else {\n      result = \"Application not found\";\n    }\n  }\n\n  if (\n    thisClaim.type_key === PlansTypeKeys.EXAMINATION &&\n    allCourse &&\n    claiming.myAnswer\n  ) {\n    let thisAnswer = getCourseIdBySheetId(\n      claiming.myAnswer,\n      thisClaim.claiming_on_id\n    );\n    if (thisAnswer && getCourseById(allCourse, thisAnswer.course)) {\n      result = getCourseById(allCourse, thisAnswer.course)!.course_name;\n    } else {\n      result = \"Exam not found\";\n    }\n  }\n\n  if (thisClaim.type_key === PlansTypeKeys.PLACEMENT_TRANSFER) {\n    result = claiming.myPlacement\n      ? \"Placed on \" + claiming.myPlacement.placed.school.school_name\n      : \"Placement not found\";\n  }\n\n  return result;\n};\n\n// -------------------------------------------------------------------------\n\ntype AppProps = {\n  auth: Auth;\n  claiming: ClaimingReducerType;\n  application_sessions: SessionPlanInterface[] | null;\n  courses: course[] | null;\n  documentReducer: DocumentReducerInterface;\n  getMyPlacement: Function;\n  getMyClaims: Function;\n  loadCourses: Function;\n  getMyAnswers: Function;\n  getClaimReasons: Function;\n  GetAllSessionPlans: Function;\n  getDocumentCategory: Function;\n  getDocumentSubCategory: Function;\n  getDocumentFields: Function;\n  PushPopupAlert: (alert: PopupAlertData) => void;\n};\n\ntype AppState = {\n  loading: boolean;\n  loadingSession: boolean;\n  thisPeriod: SessionPlanInterface | null;\n  periodChanged: boolean;\n  viewClaim: boolean;\n  claimId: string | null;\n  claimForm: boolean;\n\n  // FOR FORM ================\n  viewImage: boolean;\n  loadingRequest: boolean;\n  reClaiming: boolean;\n  reClaimingMsg: string;\n  searchClaim: string;\n  formError: {\n    element: string;\n    msg: string;\n  } | null;\n};\n\nclass Index extends Component<AppProps, AppState> {\n  constructor(props: AppProps) {\n    super(props);\n\n    this.state = {\n      loading: true,\n      loadingSession: true,\n      thisPeriod: null,\n      periodChanged: false,\n      viewClaim: false,\n      claimId: null,\n      claimForm: false,\n      searchClaim: \"\",\n\n      // FOR FORM ================\n      viewImage: false,\n      loadingRequest: false,\n      reClaiming: false,\n      reClaimingMsg: \"\",\n      formError: null,\n    };\n  }\n\n  setLoading = (value: boolean) => {\n    this.setState({ loading: value });\n  };\n\n  setLoadingSession = (value: boolean) => {\n    this.setState({ loadingSession: value });\n  };\n\n  setViewClaim = (value: boolean) => {\n    this.setState({ viewClaim: value });\n  };\n\n  setPeriodChanged = (value: boolean) => {\n    this.setState({ periodChanged: value });\n  };\n\n  setClaimForm = (value: boolean) => {\n    this.setState({ claimForm: value });\n  };\n\n  setViewImage = (value: boolean) => {\n    this.setState({ viewImage: value });\n  };\n\n  setLoadingRequest = (value: boolean) => {\n    this.setState({ loadingRequest: value });\n  };\n\n  setReClaiming = (value: boolean) => {\n    this.setState({ reClaiming: value });\n  };\n\n  setFormError = (\n    value: {\n      element: string;\n      msg: string;\n    } | null\n  ) => {\n    this.setState({ formError: value });\n  };\n\n  setReClaimingMsg = (value: string) => {\n    this.setState({ reClaimingMsg: value });\n  };\n\n  setClaimId = (value: string | null) => {\n    this.setState({ claimId: value });\n  };\n\n  setThisPeriod = (value: SessionPlanInterface | null) => {\n    this.setState({ thisPeriod: value });\n  };\n\n  setSearchClaim = (value: string) => {\n    this.setState({ searchClaim: value });\n  };\n\n  loadClaims = (thisPeriod: SessionPlanInterface) => {\n    // LOADING CLAIMING OF CURRENT CANDIDATES ================================\n    if (this.props.claiming.myClaims === null && thisPeriod !== null) {\n      this.props.getMyClaims(\n        this.props.auth.user.user_id,\n        thisPeriod.session_plan_id,\n        (status: boolean, msg: string) => {\n          !status && this.setLoading(status);\n          if (status === false && msg.length) {\n            this.props.PushPopupAlert({\n              title: msg,\n              theme: PopupAlertTheme.danger,\n            });\n          }\n        }\n      );\n    } else if (thisPeriod && this.state.loading) {\n      this.setLoading(false);\n    }\n  };\n\n  setSession = (sessions: SessionPlanInterface[]) => {\n    // SETTING ACTIVE SESSION ==========================\n    if (this.state.thisPeriod === null && sessions.length > 0) {\n      let thisSession = sessions.find((item) => item.is_active === true);\n      this.setThisPeriod(thisSession ? thisSession : sessions[0]);\n      this.loadClaims(thisSession ? thisSession : sessions[0]);\n      this.loadExamAnswers(\n        thisSession ? thisSession : sessions[0],\n        this.props.auth.user.user_id\n      );\n    }\n  };\n\n  loadExamAnswers = (\n    activeSessionPlan: SessionPlanInterface,\n    user_id: string\n  ) => {\n    this.props.getMyAnswers(\n      activeSessionPlan.session_plan_id,\n      user_id,\n      (status: boolean, msg: string, data: SessionPlanInterface | \"none\") => {\n        this.setLoading(status);\n        if (!status && msg.length) {\n          this.props.PushPopupAlert({\n            title: msg,\n            theme: PopupAlertTheme.danger,\n          });\n        }\n        if (data) {\n          console.log(\"====================================\");\n          console.log({ loadExamAnswers: data });\n          console.log(\"====================================\");\n        }\n      }\n    );\n    if (this.props.claiming.claimReasons === null) {\n      this.props.getClaimReasons((status: boolean, msg: string) => {\n        this.setLoading(status);\n        if (!status) {\n          if (msg.length > 0) {\n            this.props.PushPopupAlert({\n              title: msg,\n              theme: PopupAlertTheme.danger,\n            });\n          }\n        }\n      });\n    }\n  };\n\n  componentDidMount = () => {\n    if (\n      this.props.courses === null ||\n      (this.props.courses.length === 0 && this.state.loading)\n    ) {\n      this.props.loadCourses(this.setLoading);\n      this.setLoading(false);\n    } else {\n      this.setLoading(false);\n    }\n\n    // LOADING APPLICATION SESSION ====================================\n    if (this.props.application_sessions === null) {\n      this.props.GetAllSessionPlans(\n        (status: boolean, msg: string, data?: SessionPlanInterface[]) => {\n          if (!status) {\n            this.setLoadingSession(false);\n            if (msg.length) {\n              this.props.PushPopupAlert({\n                title: msg,\n                theme: PopupAlertTheme.danger,\n              });\n            }\n            if (data && data.length > 0) {\n              // SETTING ACTIVE SESSION ==========================\n              if (this.state.thisPeriod === null) {\n                this.setSession(data);\n              }\n            }\n          }\n        }\n      );\n    } else {\n      this.setSession(this.props.application_sessions);\n      this.setLoadingSession(false);\n    }\n\n    if (!this.props.documentReducer.documentCategory) {\n      this.props.getDocumentCategory();\n      this.setLoading(false);\n    } else if (this.state.loading) {\n      this.setLoading(false);\n    }\n    if (!this.props.documentReducer.documentSubCategory && this.state.loading) {\n      this.props.getDocumentSubCategory();\n      this.setLoading(false);\n    } else if (this.state.loading) {\n      this.setLoading(false);\n    }\n\n    if (!this.props.documentReducer.documentFields && this.state.loading) {\n      this.props.getDocumentFields();\n      this.setLoading(false);\n    } else if (this.state.loading) {\n      this.setLoading(false);\n    }\n\n    if (this.props.claiming.myPlacement === null) {\n      this.props.getMyPlacement(\n        this.props.auth.user.user_id,\n        (status: boolean, msg: string) => {\n          this.setLoading(status);\n          if (!status) {\n            if (msg.length) {\n              this.props.PushPopupAlert({\n                title: msg,\n                theme: PopupAlertTheme.danger,\n              });\n            }\n          }\n        }\n      );\n    }\n  };\n\n  isDeleteAllowed = (thisCLaim: CandidateClaimInterface): boolean => {\n    if (!isClaimEvaluated(thisCLaim, 1)) {\n      return true;\n    }\n    return false;\n  };\n\n  onPeriodChange = (period_id: string) => {\n    this.setPeriodChanged(true);\n    this.props.getMyClaims(\n      this.props.auth.user.user_id,\n      period_id,\n      (status: boolean, msg: string) => {\n        this.setLoadingRequest(status);\n        !status && this.setPeriodChanged(false);\n        if (status === false && msg.length) {\n          this.props.PushPopupAlert({\n            title: msg,\n            theme: PopupAlertTheme.danger,\n          });\n        }\n      }\n    );\n  };\n\n  render() {\n    if (this.props.application_sessions === null) {\n      return (\n        <div className=\"text-center mt-7 font-bold text-4xl text-gray-400 animate-pulse\">\n          Loading Data...\n        </div>\n      );\n    }\n\n    if (this.props.application_sessions.length === 0) {\n      return (\n        <div className=\"bg-yellow-100 rounded flex flex-col items-center justify-center p-6 my-8 text-yellow-900 border border-yellow-900\">\n          <MdInfoOutline className=\"text-6xl md:text-9xl\" />\n          <div className=\"text-center flex flex-col\">\n            <span className=\"text-2xl md:text-4xl font-extrabold\">\n              No active session\n            </span>\n            <span className=\"text-lg\">\n              Please Wait for the system to publish the sessions or contact the\n              administrator\n            </span>\n          </div>\n        </div>\n      );\n    }\n\n    if (this.props.claiming.myClaims === null) {\n      return (\n        <div className=\"text-center mt-7 font-bold text-4xl text-gray-400 animate-pulse\">\n          Loading Data...\n        </div>\n      );\n    }\n\n    return (\n      <div>\n        {/* SIDE NAVIGATION */}\n        {!this.state.viewClaim && (\n          <SideNavigation>\n            <button\n              className=\"btn mb-3 border-2 border-blue-500 hover:bg-blue-500 hover:text-white flex items-center flex-1 font-bold w-full focus:outline-none\"\n              onClick={() => {\n                this.setClaimForm(true);\n                // alert(\"clicked\");\n              }}\n              disabled={\n                this.state.viewClaim ||\n                this.state.loading ||\n                this.state.loadingRequest\n              }\n            >\n              <MdAdd className=\"inline-block mr-1 text-xl font-bold\" />\n              <span>Claiming</span>\n            </button>\n\n            {/* FILTER SECTION */}\n            <FilterByType loadingClaims={this.state.loadingRequest} />\n            {/* END FILTER SECTION */}\n          </SideNavigation>\n        )}\n        {/* END SIDE NAVIGATION */}\n\n        {/* ------------------------------------------------------------------- */}\n\n        {/* CLAIM TITLE ===================================== */}\n        {!this.state.viewClaim && (\n          <ClaimHeaderTitle\n            headerTitle={`${\n              this.props.claiming.selectedClaimType === \"all\"\n                ? \"All\"\n                : this.props.claiming.selectedClaimType ===\n                  PlansTypeKeys.DOCUMENT_VALIDATION\n                ? \"Documents\"\n                : this.props.claiming.selectedClaimType ===\n                  PlansTypeKeys.APPLICATION\n                ? \"Applications\"\n                : this.props.claiming.selectedClaimType ===\n                  PlansTypeKeys.EXAMINATION\n                ? \"Exam\"\n                : this.props.claiming.selectedClaimType ===\n                  PlansTypeKeys.MARKS_PUBLICATION\n                ? \"Marks publication\"\n                : this.props.claiming.selectedClaimType ===\n                  PlansTypeKeys.PLACEMENT_TRANSFER\n                ? \"Placements\"\n                : \"\"\n            } Claiming`}\n            loading={this.state.loading}\n            loadingSession={this.state.loadingSession}\n            thisPeriod={this.state.thisPeriod}\n            setThisPeriod={this.setThisPeriod}\n            setLoadingSession={this.setLoadingSession}\n            application_sessions={this.props.application_sessions}\n            onPeriodChange={this.onPeriodChange}\n            periodChanged={this.state.periodChanged}\n          />\n        )}\n        {/* END CLAIM TITLE ===================================== */}\n\n        {/* ----------------------------------------------------------------------- */}\n\n        {!this.state.viewClaim && (\n          <section className=\"bg-white w-full p-1\">\n            {/* FILTER FORM =================================== */}\n            <section className=\"flex flex-col-reverse sm:flex-row items-center gap-2 w-full my-2\">\n              <div className=\"w-full\">\n                <input\n                  onChange={(e: React.ChangeEvent<HTMLInputElement>) =>\n                    this.setSearchClaim(e.target.value)\n                  }\n                  type=\"text\"\n                  className=\"input-white h-10 text-sm border-2 border-gray-400 focus:border-gray-500 w-full\"\n                  placeholder={`Search claim by title or type`}\n                  value={this.state.searchClaim}\n                  disabled={\n                    filterClaimsByClaimType(\n                      this.props.claiming.myClaims,\n                      this.props.claiming.selectedClaimType\n                    ).length > 0\n                      ? false\n                      : true\n                  }\n                />\n              </div>\n            </section>\n            {/* END FILTER FORM =================================== */}\n            <table className=\"w-full shadow\" id=\"report_content\">\n              <thead className=\"bg-white border-b-2 border-gray-300 text-gray-600 font-bold text-sm\">\n                <tr>\n                  <td className=\"px-2 py-2\">#</td>\n                  <td className=\"px-2 py-2\">Claim title</td>\n                  {this.props.claiming.selectedClaimType === \"all\" && (\n                    <td className=\"px-2 py-2\">Claim type</td>\n                  )}\n                  <td className=\"px-2 py-2\">Claim level</td>\n                  <td className=\"px-2 py-2\">Claim status</td>\n                  <td className=\"px-2 py-2\"></td>\n                </tr>\n              </thead>\n              <tbody>\n                {filterClaimsByClaimType(\n                  this.props.claiming.myClaims,\n                  this.props.claiming.selectedClaimType\n                ).length <= 0 ? (\n                  <tr\n                    className=\"border-b border-gray-200 group hover:bg-gray-50 cursor-pointer\"\n                    key=\"key3201\"\n                  >\n                    <td className=\"px-3 py-1\" colSpan={4}>\n                      <NoResult\n                        theme={NoResultThemes.Light}\n                        value={\"No claim found!\"}\n                      />\n                    </td>\n                  </tr>\n                ) : search(\n                    filterClaimsByClaimType(\n                      this.props.claiming.myClaims,\n                      this.props.claiming.selectedClaimType\n                    ),\n                    this.state.searchClaim\n                  ).length <= 0 ? (\n                  <tr\n                    className=\"border-b border-gray-200 group hover:bg-gray-50 cursor-pointer\"\n                    key=\"key3201\"\n                  >\n                    <td className=\"px-3 py-1\" colSpan={4}>\n                      <NoResult\n                        theme={NoResultThemes.Light}\n                        value={\"Nothing found!\"}\n                      />\n                    </td>\n                  </tr>\n                ) : (\n                  search(\n                    filterClaimsByClaimType(\n                      this.props.claiming.myClaims,\n                      this.props.claiming.selectedClaimType\n                    ),\n                    this.state.searchClaim\n                  ).map((claim: CandidateClaimInterface, index) => (\n                    <tr\n                      className=\"border-b border-gray-200 group hover:bg-gray-50 cursor-pointer\"\n                      key={index + claim._id}\n                      onClick={() => {\n                        this.setViewClaim(true);\n                        this.setClaimId(claim._id);\n                      }}\n                    >\n                      <td className=\"px-3 py-1 whitespace-nowrap\">\n                        {index + 1}\n                      </td>\n                      <td className=\"px-3 py-1 whitespace-nowrap\">\n                        {claim.title}\n                      </td>\n                      {this.props.claiming.selectedClaimType === \"all\" && (\n                        <td className=\"px-3 py-1 whitespace-nowrap\">\n                          {whichClaimType(claim)\n                            ? capitalizeFirstLetter(whichClaimType(claim)!)\n                            : \"-\"}\n                        </td>\n                      )}\n                      <td className=\"px-3 py-1 whitespace-nowrap italic\">\n                        Level {claim.claim_level}\n                      </td>\n                      <td className=\"px-3 py-1 whitespace-nowrap\">\n                        <span\n                          className={`inline-block rounded-full duration-300 text-xs font-semibold px-3 py-1 ${\n                            whichClaimStatus(claim).classes\n                          }`}\n                        >\n                          {whichClaimStatus(claim).status}\n                        </span>\n                      </td>\n                      <td className=\"px-3 py-1 text-center whitespace-nowrap\">\n                        <button className=\"btn bg-blue-500 text-white group-hover:bg-blue-600\">\n                          View\n                        </button>\n                      </td>\n                    </tr>\n                  ))\n                )}\n              </tbody>\n            </table>\n          </section>\n        )}\n\n        {/* ----------------------------------------------------------------------- */}\n\n        {this.state.viewClaim &&\n          this.props.claiming.myClaims &&\n          this.state.claimId &&\n          getClaimById(this.props.claiming.myClaims, this.state.claimId) && (\n            <section className=\"bg-white w-full p-1 my-4\">\n              {/* VIEW CLAIM HEADER =============================== */}\n              <section className=\"flex items-center gap-2 py-2 border-b\">\n                <button\n                  className={`ml-3 bg-gray-50 hover:bg-blue-100 rounded-full px-1 py-1 focus:outline-none ${\n                    this.state.loadingRequest\n                      ? \"cursor-not-allowed\"\n                      : \"cursor-pointer\"\n                  } animate__animated animate__fadeIn`}\n                  disabled={this.state.loadingRequest}\n                  onClick={() => {\n                    this.setViewClaim(false);\n                    this.setViewImage(false);\n                    this.setLoadingRequest(false);\n                    this.setFormError(null);\n                    this.setReClaiming(false);\n                    this.setReClaimingMsg(\"\");\n                  }}\n                >\n                  <MdArrowBack className=\"w-7 h-7\" />\n                </button>\n                {this.isDeleteAllowed(\n                  getClaimById(\n                    this.props.claiming.myClaims,\n                    this.state.claimId\n                  )!\n                ) && (\n                  <button\n                    className={`bg-gray-50 hover:bg-blue-100 rounded-full px-1 py-1 focus:outline-none ${\n                      this.state.loadingRequest\n                        ? \"cursor-not-allowed\"\n                        : \"cursor-pointer\"\n                    } animate__animated animate__fadeIn hidden`}\n                    disabled={this.state.loadingRequest}\n                    // onClick={() => {\n                    //   this.handleDelete();\n                    // }}\n                  >\n                    <MdDelete className=\"w-7 h-7\" />\n                  </button>\n                )}\n              </section>\n              {/* END VIEW CLAIM HEADER =============================== */}\n              <section className=\"my-2\">\n                {/* VIEWING CLAIM OF A DOCUMENT ===================== */}\n                {getClaimById(this.props.claiming.myClaims, this.state.claimId)!\n                  .type_key === PlansTypeKeys.DOCUMENT_VALIDATION &&\n                this.props.claiming.candidateDocuments &&\n                getDocumentById(\n                  this.props.claiming.candidateDocuments,\n                  getClaimById(\n                    this.props.claiming.myClaims,\n                    this.state.claimId\n                  )!.claiming_on_id\n                ) ? (\n                  <ClaimDocView\n                    thisDoc={\n                      getDocumentById(\n                        this.props.claiming.candidateDocuments,\n                        getClaimById(\n                          this.props.claiming.myClaims,\n                          this.state.claimId\n                        )!.claiming_on_id\n                      )!\n                    }\n                    documentCategories={this.props.documentReducer}\n                    thisClaim={\n                      getClaimById(\n                        this.props.claiming.myClaims,\n                        this.state.claimId\n                      )!\n                    }\n                    viewImage={this.state.viewImage}\n                    setViewImage={this.setViewImage}\n                    loadingRequest={this.state.loadingRequest}\n                    setLoadingRequest={this.setLoadingRequest}\n                    reClaiming={this.state.reClaiming}\n                    setReClaiming={this.setReClaiming}\n                    reClaimingMsg={this.state.reClaimingMsg}\n                    setReClaimingMsg={this.setReClaimingMsg}\n                    formError={this.state.formError}\n                    setFormError={this.setFormError}\n                    claimReasons={this.props.claiming.claimReasons}\n                  />\n                ) : (\n                  getClaimById(\n                    this.props.claiming.myClaims,\n                    this.state.claimId\n                  )!.type_key === PlansTypeKeys.DOCUMENT_VALIDATION && (\n                    <NoResult\n                      theme={NoResultThemes.Dark}\n                      value={\"Document not found\"}\n                    />\n                  )\n                )}\n                {/* END VIEWING CLAIM OF A DOCUMENT ===================== */}\n\n                {/* ############################################################### */}\n\n                {/* VIEWING CLAIM OF AN APPLICATION ===================== */}\n                {getClaimById(this.props.claiming.myClaims, this.state.claimId)!\n                  .type_key === PlansTypeKeys.APPLICATION &&\n                this.props.claiming.candidateApplications &&\n                getApplicationById(\n                  this.props.claiming.candidateApplications,\n                  getClaimById(\n                    this.props.claiming.myClaims,\n                    this.state.claimId\n                  )!.claiming_on_id\n                ) ? (\n                  <ClaimApplView\n                    thisApplication={\n                      getApplicationById(\n                        this.props.claiming.candidateApplications,\n                        getClaimById(\n                          this.props.claiming.myClaims,\n                          this.state.claimId\n                        )!.claiming_on_id\n                      )!\n                    }\n                    documentCategories={this.props.documentReducer}\n                    thisClaim={\n                      getClaimById(\n                        this.props.claiming.myClaims,\n                        this.state.claimId\n                      )!\n                    }\n                    viewPosition={this.state.viewImage}\n                    setViewPosition={this.setViewImage}\n                    loadingRequest={this.state.loadingRequest}\n                    setLoadingRequest={this.setLoadingRequest}\n                    reClaiming={this.state.reClaiming}\n                    setReClaiming={this.setReClaiming}\n                    reClaimingMsg={this.state.reClaimingMsg}\n                    setReClaimingMsg={this.setReClaimingMsg}\n                    formError={this.state.formError}\n                    setFormError={this.setFormError}\n                    claimReasons={this.props.claiming.claimReasons}\n                  />\n                ) : (\n                  getClaimById(\n                    this.props.claiming.myClaims,\n                    this.state.claimId\n                  )!.type_key === PlansTypeKeys.APPLICATION && (\n                    <NoResult\n                      theme={NoResultThemes.Dark}\n                      value={\"Application not found\"}\n                    />\n                  )\n                )}\n                {/* END VIEWING CLAIM OF AN APPLICATION ===================== */}\n\n                {/* VIEWING CLAIM OF AN EXAM ===================== */}\n                {getClaimById(this.props.claiming.myClaims, this.state.claimId)!\n                  .type_key === PlansTypeKeys.EXAMINATION &&\n                this.props.claiming.myAnswer &&\n                this.props.courses &&\n                getCourseIdBySheetId(\n                  this.props.claiming.myAnswer,\n                  getClaimById(\n                    this.props.claiming.myClaims,\n                    this.state.claimId\n                  )!.claiming_on_id\n                ) &&\n                getCourseById(\n                  this.props.courses,\n                  getCourseIdBySheetId(\n                    this.props.claiming.myAnswer,\n                    getClaimById(\n                      this.props.claiming.myClaims,\n                      this.state.claimId\n                    )!.claiming_on_id\n                  )!.course\n                ) ? (\n                  <ClaimExamView\n                    thisExam={\n                      getCourseById(\n                        this.props.courses,\n                        getCourseIdBySheetId(\n                          this.props.claiming.myAnswer,\n                          getClaimById(\n                            this.props.claiming.myClaims,\n                            this.state.claimId\n                          )!.claiming_on_id\n                        )!.course\n                      )!\n                    }\n                    thisClaim={\n                      getClaimById(\n                        this.props.claiming.myClaims,\n                        this.state.claimId\n                      )!\n                    }\n                    viewPosition={this.state.viewImage}\n                    setViewPosition={this.setViewImage}\n                    loadingRequest={this.state.loadingRequest}\n                    setLoadingRequest={this.setLoadingRequest}\n                    reClaiming={this.state.reClaiming}\n                    setReClaiming={this.setReClaiming}\n                    reClaimingMsg={this.state.reClaimingMsg}\n                    setReClaimingMsg={this.setReClaimingMsg}\n                    formError={this.state.formError}\n                    setFormError={this.setFormError}\n                    thisExamSheet={\n                      getCourseIdBySheetId(\n                        this.props.claiming.myAnswer,\n                        getClaimById(\n                          this.props.claiming.myClaims,\n                          this.state.claimId\n                        )!.claiming_on_id\n                      )!\n                    }\n                    claimReasons={this.props.claiming.claimReasons}\n                  />\n                ) : (\n                  getClaimById(\n                    this.props.claiming.myClaims,\n                    this.state.claimId\n                  )!.type_key === PlansTypeKeys.EXAMINATION && (\n                    <NoResult\n                      theme={NoResultThemes.Dark}\n                      value={\"Exam not found\"}\n                    />\n                  )\n                )}\n                {/* END VIEWING CLAIM OF AN EXAM ===================== */}\n\n                {/* ----------------------------------------------------------- */}\n                {/* VIEWING CLAIM OF A DOCUMENT ===================== */}\n                {getClaimById(this.props.claiming.myClaims, this.state.claimId)!\n                  .type_key === PlansTypeKeys.PLACEMENT_TRANSFER &&\n                this.props.claiming.myPlacement ? (\n                  <ClaimPlacementView\n                    thisClaim={\n                      getClaimById(\n                        this.props.claiming.myClaims,\n                        this.state.claimId\n                      )!\n                    }\n                    loadingRequest={this.state.loadingRequest}\n                    setLoadingRequest={this.setLoadingRequest}\n                    reClaiming={this.state.reClaiming}\n                    setReClaiming={this.setReClaiming}\n                    reClaimingMsg={this.state.reClaimingMsg}\n                    setReClaimingMsg={this.setReClaimingMsg}\n                    formError={this.state.formError}\n                    setFormError={this.setFormError}\n                    myPlacement={this.props.claiming.myPlacement}\n                  />\n                ) : (\n                  getClaimById(\n                    this.props.claiming.myClaims,\n                    this.state.claimId\n                  )!.type_key === PlansTypeKeys.PLACEMENT_TRANSFER && (\n                    <NoResult\n                      theme={NoResultThemes.Dark}\n                      value={\"Placement not found\"}\n                    />\n                  )\n                )}\n                {/* END VIEWING CLAIM OF A DOCUMENT ===================== */}\n              </section>\n            </section>\n          )}\n        {/* end view claim */}\n\n        {/* ----------------------------------------------------------------------- */}\n        {/* CLAIM FORM  ################ */}\n        {this.state.claimForm && (\n          <ClaimForm\n            formState={this.state.claimForm}\n            setFormState={this.setClaimForm}\n          />\n        )}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = ({\n  auth,\n  sessionPlan,\n  claiming,\n  document,\n  course,\n}: StoreState): {\n  auth: Auth;\n  claiming: ClaimingReducerType;\n  application_sessions: SessionPlanInterface[] | null;\n  documentReducer: DocumentReducerInterface;\n  courses: course[] | null;\n} => {\n  return {\n    auth: auth,\n    claiming,\n    application_sessions: sessionPlan.allSessionPlans,\n    documentReducer: document,\n    courses: course.courses,\n  };\n};\n\nexport const CandidateClaim = connect(mapStateToProps, {\n  getMyClaims,\n  GetAllSessionPlans,\n  getClaimReasons,\n  loadCourses,\n  getMyPlacement,\n  getMyAnswers,\n  getDocumentCategory,\n  getDocumentSubCategory,\n  getDocumentFields,\n  PushPopupAlert,\n})(Index);\n","import axios from \"axios\";\nimport React from \"react\";\nimport { FaRegCheckCircle } from \"react-icons/fa\";\nimport { MdInfoOutline, MdTurnedIn } from \"react-icons/md\";\nimport { RiArrowGoBackFill } from \"react-icons/ri\";\nimport { connect } from \"react-redux\";\nimport { PushPopupAlert } from \"../../actions\";\nimport { createReClaim } from \"../../actions/claiming\";\nimport NoResult, { NoResultThemes } from \"../../components/NoResult/NoResult\";\nimport {\n  CandidateClaimInterface,\n  claimApplicationsInterface,\n  ClaimDecisionStatus,\n  claimReasonInterface,\n  ClaimStatus,\n} from \"../../interfaces\";\nimport { ApplicationStates } from \"../../interfaces/application\";\nimport { PopupAlertTheme } from \"../../interfaces/popupAlert\";\nimport { DocumentReducerInterface } from \"../../reducers/document\";\nimport { capitalizeFirstLetter, isEmptyOrSpaces } from \"../../shared/dataTest\";\nimport { API } from \"../../utils/api\";\nimport { setAxiosToken } from \"../../utils/AxiosToken\";\nimport { DATE, errorToText, showDate } from \"../../utils/functions\";\nimport ViewRequirements from \"../Positions/ViewRequirements\";\nimport { FC_ApplicationPositionDistinctCategory } from \"./Candidate/ApplicationFormView\";\nimport { isClaimEvaluated } from \"./ClaimDocView\";\n\nconst isReclaimAllowed = (thisClaim: CandidateClaimInterface): boolean => {\n  if (thisClaim.claim_level === 1) {\n    const _thisClaim = thisClaim.claims.find((item) => item.level === 1);\n    if (_thisClaim) {\n      if (_thisClaim.decision_taken_status === ClaimDecisionStatus.REJECTED) {\n        return true;\n      }\n    }\n  }\n  return false;\n};\n\ntype ClaimDocViewProps = {\n  thisApplication: claimApplicationsInterface;\n  documentCategories: DocumentReducerInterface;\n  claimReasons: claimReasonInterface[] | null;\n  thisClaim: CandidateClaimInterface;\n  viewPosition: boolean;\n  setViewPosition: (value: boolean) => void;\n  loadingRequest: boolean;\n  setLoadingRequest: (value: boolean) => void;\n  reClaiming: boolean;\n  setReClaiming: (value: boolean) => void;\n  reClaimingMsg: string;\n  setReClaimingMsg: (value: string) => void;\n  formError: {\n    element: string;\n    msg: string;\n  } | null;\n  setFormError: (\n    value: {\n      element: string;\n      msg: string;\n    } | null\n  ) => void;\n\n  // REDUX DATA =====================\n  createReClaim: Function;\n  PushPopupAlert: Function;\n};\n\nconst ClaimDocView: React.FC<ClaimDocViewProps> = (props) => {\n  const handleSubmit = async () => {\n    if (isEmptyOrSpaces(props.reClaimingMsg)) {\n      return props.setFormError({\n        element: \"comment\",\n        msg: \"Claim comment is required!\",\n      });\n    }\n    if (!props.thisClaim) {\n      return props.PushPopupAlert({\n        title: \"Claim is required\",\n        theme: PopupAlertTheme.warning,\n      });\n    }\n\n    props.setLoadingRequest(true);\n    try {\n      setAxiosToken();\n      const res = await axios.put<CandidateClaimInterface>(\n        `${API.CLAIMING}/user/reclaim/${props.thisClaim._id}`,\n        {\n          reason: props.reClaimingMsg,\n        }\n      );\n      console.log({ res: res.data });\n      if (res.status === 201 || res.status === 200) {\n        props.createReClaim(res.data);\n        props.PushPopupAlert({\n          title: \"Claim sent successful\",\n          theme: PopupAlertTheme.success,\n        });\n        props.setReClaimingMsg(\"\");\n        props.setReClaiming(false);\n      }\n    } catch (error) {\n      console.error({ error });\n      props.PushPopupAlert({\n        title: errorToText(error),\n        theme: PopupAlertTheme.danger,\n      });\n    }\n    props.setLoadingRequest(false);\n  };\n\n  const getReasonById = (\n    reason_id: string\n  ): claimReasonInterface | undefined => {\n    if (props.claimReasons) {\n      return props.claimReasons.find((item) => item.id === reason_id);\n    }\n    return undefined;\n  };\n\n  return (\n    <section className=\"\">\n      <div className=\"w-full bg-white px-4 py-1 divide-y-2 space-y-2\">\n        {/* DOCUMENT DETAILS ==================================================== */}\n        <section className=\"flex flex-col\">\n          <div className=\"flex items-center justify-between\">\n            <span className=\"text-blue-600 font-bold text-2xl\">\n              {props.thisApplication.position.position_title}\n            </span>\n            <button\n              type=\"button\"\n              className=\"bg-blue-200 hover:bg-blue-300 text-blue-700 group-hover:text-blue-800 py-1 px-2 mr-1 rounded text-sm\"\n              onClick={() => props.setViewPosition(!props.viewPosition)}\n            >\n              {props.viewPosition ? \"Hide\" : \"More\"}\n            </button>\n          </div>\n          <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n            <span className={`italic`}>Status:</span>\n            <span\n              className={`font-bold ${\n                props.thisClaim.previous.status === ApplicationStates.Rejected\n                  ? \"text-yellow-900\"\n                  : \"text-blue-600\"\n              } rounded px-3 py-1`}\n            >\n              {capitalizeFirstLetter(props.thisClaim.previous.status)}\n            </span>\n          </div>\n          <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n            <span className={`italic`}>Evaluated by:</span>\n            <span className=\"font-semibold\">\n              {props.thisClaim.previous.evaluater.name}\n            </span>\n          </div>\n          {false && (\n            <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n              <span className={`italic`}>Session:</span>\n              <span className=\"font-bold text-gray-900 py-1\">\n                {\n                  props.thisApplication.application_session\n                    .application_session_name\n                }\n              </span>\n            </div>\n          )}\n          <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n            <span className={`italic`}>Date:</span>\n            <span className=\"font-bold text-gray-900 py-1\">\n              {DATE(props.thisApplication.createdAt)}\n            </span>\n          </div>\n          <div className=\"flex items-start gap-2 text-sm text-gray-600\">\n            <span className={`italic`}>Reason:</span>\n            <span\n              className=\"font-normal\"\n              dangerouslySetInnerHTML={{\n                __html: props.thisClaim.previous.reason,\n              }}\n            ></span>\n          </div>\n\n          {/* DISPLAY POSITION ==================================================== */}\n          {props.viewPosition && (\n            <div className=\"w-full my-1 animate__animated animate__fadeIn rounded\">\n              <div className=\"bg-white w-full\">\n                <div className=\"text-gray-800 text-2xl font-bold my-2\">\n                  Position Details\n                </div>\n                <div className=\"flex items-center gap-2 text-base text-gray-600\">\n                  <span className={`italic`}>Desc:</span>\n                  <span className=\"font-semibold\">\n                    {props.thisApplication.position.description}\n                  </span>\n                </div>\n                <div className=\"flex items-center gap-2 text-base text-gray-600\">\n                  <span className={`italic`}>School level:</span>\n                  <span className=\"font-semibold\">\n                    {\n                      props.thisApplication.position.school_level_id\n                        .school_level_name\n                    }\n                  </span>\n                </div>\n                <div className=\"flex items-center gap-2 text-base text-gray-600\">\n                  <span className={`italic`}>Institute:</span>\n                  <span className=\"font-semibold\">\n                    {\n                      props.thisApplication.position.education_institute_id\n                        .education_category_title\n                    }\n                  </span>\n                </div>\n                <div className=\"flex items-center gap-2 text-base text-gray-600\">\n                  <span className={`italic`}>Courses:</span>\n                  <span className=\"flex items-center gap-2\">\n                    {props.thisApplication.position.courses.map(\n                      (item, index) => (\n                        <div\n                          key={index + item.course_id}\n                          className=\"flex items-center gap-1\"\n                        >\n                          <span className=\"font-semibold\">\n                            {item.course_name}\n                          </span>\n                          <span className=\"text-gray-600\">\n                            ({item.course_code})\n                          </span>\n                          {index !==\n                            props.thisApplication.position.courses.length - 1 &&\n                            \",\"}\n                        </div>\n                      )\n                    )}\n                  </span>\n                </div>\n\n                <div className=\"text-gray-800 text-2xl font-bold my-2\">\n                  Position Requirements\n                </div>\n                {props.thisApplication.position.requirements.length > 0 ? (\n                  FC_ApplicationPositionDistinctCategory(\n                    props.thisApplication.position,\n                    props.documentCategories\n                  ).DistinctCategoriesTemp.map((item, index) => (\n                    <div\n                      className=\"bg-gray-100props.thisApplication.position rounded p-2\"\n                      key={index + item.category_id}\n                    >\n                      <div className=\"flex items-center gap-2 text-2xl text-gray-500 font-bold\">\n                        <MdTurnedIn />\n                        <span>{item.category_title}</span>\n                      </div>\n                      <div className=\"border bg-white mt-1\">\n                        <ViewRequirements\n                          requirements={FC_ApplicationPositionDistinctCategory(\n                            props.thisApplication.position,\n                            props.documentCategories\n                          ).PositionsTemp.filter(\n                            (req) => req.category_id === item.category_id\n                          )}\n                        />\n                      </div>\n                    </div>\n                  ))\n                ) : (\n                  <NoResult\n                    theme={NoResultThemes.Dark}\n                    value={\"No requirements\"}\n                  ></NoResult>\n                )}\n              </div>\n            </div>\n          )}\n          {/* END DISPLAY POSITION ==================================================== */}\n        </section>\n        {/* END DOCUMENT DETAILS ==================================================== */}\n\n        {/* ################################################################################ */}\n\n        {/* CLAIM LEVELS DETAILS ==================================================== */}\n        {props.thisClaim.claims.length > 0 &&\n          props.thisClaim.claims.map((claim, index) => (\n            <section className=\"flex flex-col px-2 pt-3\" key={index + claim.id}>\n              {/* CLAIM COMMENT ==>> LEVEL 1 ==================================================== */}\n              <div className=\"flex flex-col items-start gap-2\">\n                <div className=\"flex items-center gap-2 bg-blue-100 rounded py-1 px-2\">\n                  <MdInfoOutline />\n                  {getReasonById(props.thisClaim.default_claim_resaons)\n                    ? getReasonById(props.thisClaim.default_claim_resaons)!\n                        .reason\n                    : \"\"}\n                </div>\n                <p>{claim.reason}</p>\n                <span className=\"text-gray-500 text-xs\">\n                  {showDate(claim.createdAt)}\n                </span>\n              </div>\n\n              {/* RESPONSE OF LEVELS ======================================= */}\n              {isClaimEvaluated(props.thisClaim, claim.level) && (\n                <section className=\"mt-4\">\n                  <span className=\"text-gray-500 italic font-semibold\">\n                    Response (level {index + 1})\n                  </span>\n                  <div className=\"border-t-2\">\n                    <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n                      <span className={`italic`}>Status:</span>\n                      <span\n                        className={`font-bold ${\n                          claim.decision_taken_status ===\n                          ClaimDecisionStatus.REJECTED\n                            ? \"text-yellow-900\"\n                            : \"text-blue-600\"\n                        } rounded px-3 py-1`}\n                      >\n                        {capitalizeFirstLetter(\n                          claim.decision_taken_status.toLocaleLowerCase()\n                        )}\n                      </span>\n                    </div>\n                    <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n                      <span className={`italic`}>Evaluated by:</span>\n                      <span className=\"font-semibold\">\n                        {claim.evaluater.name}\n                      </span>\n                    </div>\n                    <div className=\"flex items-start gap-2 text-sm text-gray-600\">\n                      <span className={`italic`}>Reason:</span>\n                      <span className=\"font-normal\">\n                        {claim.evaluation_comment}\n                      </span>\n                    </div>\n                  </div>\n                </section>\n              )}\n              {/* CLAIM COMMENT ==>> LEVELS ==================================================== */}\n            </section>\n          ))}\n        {/* END CLAIM LEVELS DETAILS ==================================================== */}\n      </div>\n      <section>\n        {!props.reClaiming && (\n          <div className=\"mx-4 mb-5 mt-3 flex items-center justify-between\">\n            <span\n              className={`${\n                props.thisClaim.last_claim_status === ClaimStatus.PENDING\n                  ? \"text-yellow-700\"\n                  : props.thisClaim.last_claim_status === ClaimStatus.DELETED\n                  ? \"text-red-700\"\n                  : \"text-green-700\"\n              } italic font-semibold`}\n            >\n              {capitalizeFirstLetter(\n                props.thisClaim.last_claim_status.toLocaleLowerCase()\n              )}\n            </span>\n\n            {isReclaimAllowed(props.thisClaim) && (\n              <button\n                className=\"btn btn-blue\"\n                onClick={() => props.setReClaiming(true)}\n                disabled={props.loadingRequest}\n              >\n                Reclaim\n              </button>\n            )}\n          </div>\n        )}\n        {/* right part */}\n        {props.reClaiming && (\n          <div className=\"flex flex-col md:flex-row items-end md:items-start gap-1 w-full\">\n            <div className=\"w-full px-2\">\n              <textarea\n                placeholder={`Reason of your reclaim...`}\n                cols={50}\n                rows={3}\n                className={`border border-${\n                  props.formError && props.formError.element === \"comment\"\n                    ? \"red\"\n                    : \"gray\"\n                }-400 rounded px-3 py-1 w-full focus:outline-none`}\n                style={{ resize: \"none\" }}\n                value={props.reClaimingMsg}\n                onChange={(e) => {\n                  props.setReClaimingMsg(e.target.value);\n                  props.setFormError(null);\n                }}\n                disabled={props.loadingRequest}\n              ></textarea>\n              {props.formError && props.formError.element === \"comment\" && (\n                <p className=\"text-red-800\">{props.formError.msg}</p>\n              )}\n            </div>\n            <div className=\"flex flex-row md:flex-col gap-1 max-w-full px-2\">\n              <button\n                className=\"bg-gray-700 hover:bg-gray-800 px-4 py-2 font-semibold rounded text-white inline-flex items-center space-x-2 focus:outline-none\"\n                onClick={() => {\n                  props.setReClaimingMsg(\"\");\n                  props.setReClaiming(false);\n                  props.setFormError(null);\n                }}\n                disabled={props.loadingRequest}\n              >\n                <RiArrowGoBackFill className=\"w-5 h-5\" />\n                <span>Back</span>\n              </button>\n              <button\n                className=\"bg-blue-700 hover:bg-blue-800 px-4 py-2 font-semibold rounded text-white inline-flex items-center space-x-2 focus:outline-none\"\n                disabled={props.loadingRequest}\n                onClick={() => handleSubmit()}\n              >\n                {props.loadingRequest ? (\n                  <div className=\"\">Loading...</div>\n                ) : (\n                  <div className=\"inline-flex items-center space-x-2 gap-1\">\n                    <FaRegCheckCircle className=\"w-5 h-5\" />\n                    <span>Confirm</span>\n                  </div>\n                )}\n              </button>\n            </div>\n          </div>\n        )}\n        {/* end right part */}\n      </section>\n    </section>\n  );\n};\n\nexport default React.memo(connect(null, {\n  createReClaim,\n  PushPopupAlert,\n})(ClaimDocView));\n","import axios from \"axios\";\nimport React, { useEffect, useState } from \"react\";\nimport { FaRegCheckCircle } from \"react-icons/fa\";\nimport { MdInfoOutline } from \"react-icons/md\";\nimport { RiArrowGoBackFill } from \"react-icons/ri\";\nimport { connect } from \"react-redux\";\nimport {\n  loadQuestionTypes,\n  PushPopupAlert,\n  questionTypesStoreInterface,\n} from \"../../actions\";\nimport { createReClaim } from \"../../actions/claiming\";\nimport CandidateAnswersDetails from \"../../components/AnswersDetails/CandidateAnswersDetails\";\nimport {\n  CandidateClaimInterface,\n  ClaimDecisionStatus,\n  ClaimExamResultsDetails,\n  claimReasonInterface,\n  ClaimStatus,\n  course,\n} from \"../../interfaces\";\nimport { PopupAlertTheme } from \"../../interfaces/popupAlert\";\nimport { StoreState } from \"../../reducers\";\nimport { capitalizeFirstLetter, isEmptyOrSpaces } from \"../../shared/dataTest\";\nimport { API } from \"../../utils/api\";\nimport { setAxiosToken } from \"../../utils/AxiosToken\";\nimport { errorToText, showDate } from \"../../utils/functions\";\nimport { claimShowAnswer } from \"./Candidate/ExaminationFormView\";\nimport { isClaimEvaluated } from \"./ClaimDocView\";\n\nconst isReclaimAllowed = (thisClaim: CandidateClaimInterface): boolean => {\n  if (thisClaim.claim_level === 1) {\n    const _thisClaim = thisClaim.claims.find((item) => item.level === 1);\n    if (_thisClaim) {\n      if (_thisClaim.decision_taken_status === ClaimDecisionStatus.REJECTED) {\n        return true;\n      }\n    }\n  }\n  return false;\n};\n\ntype ClaimDocViewProps = {\n  thisExam: course;\n  thisExamSheet: ClaimExamResultsDetails;\n  thisClaim: CandidateClaimInterface;\n  viewPosition: boolean;\n  claimReasons: claimReasonInterface[] | null;\n  setViewPosition: (value: boolean) => void;\n  loadingRequest: boolean;\n  setLoadingRequest: (value: boolean) => void;\n  reClaiming: boolean;\n  setReClaiming: (value: boolean) => void;\n  reClaimingMsg: string;\n  setReClaimingMsg: (value: string) => void;\n  formError: {\n    element: string;\n    msg: string;\n  } | null;\n  setFormError: (\n    value: {\n      element: string;\n      msg: string;\n    } | null\n  ) => void;\n\n  // REDUX DATA =====================\n  questionTypes: questionTypesStoreInterface;\n  loadQuestionTypes: (callback: (loading: boolean) => void) => void;\n  createReClaim: Function;\n  PushPopupAlert: Function;\n};\n\nconst ClaimDocView: React.FC<ClaimDocViewProps> = (props) => {\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    if (\n      props.questionTypes.questionTypes === null ||\n      (props.questionTypes.questionTypes.length === 0 && loading)\n    ) {\n      props.loadQuestionTypes(setLoading);\n    }\n  }, [loading, props]);\n\n  const handleSubmit = async () => {\n    if (isEmptyOrSpaces(props.reClaimingMsg)) {\n      return props.setFormError({\n        element: \"comment\",\n        msg: \"Claim comment is required!\",\n      });\n    }\n    if (!props.thisClaim) {\n      return props.PushPopupAlert({\n        title: \"Claim is required\",\n        theme: PopupAlertTheme.warning,\n      });\n    }\n\n    props.setLoadingRequest(true);\n    try {\n      setAxiosToken();\n      const res = await axios.put<CandidateClaimInterface>(\n        `${API.CLAIMING}/user/reclaim/${props.thisClaim._id}`,\n        {\n          reason: props.reClaimingMsg,\n        }\n      );\n      console.log({ res: res.data });\n      if (res.status === 201 || res.status === 200) {\n        props.createReClaim(res.data);\n        props.PushPopupAlert({\n          title: \"Claim sent successful\",\n          theme: PopupAlertTheme.success,\n        });\n        props.setReClaimingMsg(\"\");\n        props.setReClaiming(false);\n      }\n    } catch (error) {\n      console.error({ error });\n      props.PushPopupAlert({\n        title: errorToText(error),\n        theme: PopupAlertTheme.danger,\n      });\n    }\n    props.setLoadingRequest(false);\n  };\n\n  const getReasonById = (\n    reason_id: string\n  ): claimReasonInterface | undefined => {\n    if (props.claimReasons) {\n      return props.claimReasons.find((item) => item.id === reason_id);\n    }\n    return undefined;\n  };\n\n  return (\n    <section className=\"\">\n      <div className=\"w-full bg-white px-4 py-1 divide-y-2 space-y-2\">\n        {/* DOCUMENT DETAILS ==================================================== */}\n        <section className=\"flex flex-col\">\n          <div className=\"flex items-center justify-between\">\n            <span className=\"text-blue-600 font-bold text-2xl\">\n              Exam of {props.thisExam.course_name}{\" \"}\n            </span>\n            <button\n              type=\"button\"\n              className=\"bg-blue-200 hover:bg-blue-300 text-blue-700 group-hover:text-blue-800 py-1 px-2 mr-1 rounded text-sm\"\n              onClick={() => props.setViewPosition(!props.viewPosition)}\n            >\n              {props.viewPosition ? \"Hide\" : \"More\"}\n            </button>\n          </div>\n\n          {/* DISPLAY EXAM SHEET ==================================================== */}\n          {props.viewPosition && (\n            <div className=\"bg-white w-full rounded p-2 mb-2\">\n              <CandidateAnswersDetails\n                showAnswers={false}\n                exam_id={claimShowAnswer(\n                  props.thisExamSheet,\n                  props.thisExam.course_name\n                )}\n              />\n            </div>\n          )}\n          {/* END DISPLAY POSITION ==================================================== */}\n        </section>\n        {/* END DOCUMENT DETAILS ==================================================== */}\n\n        {/* ################################################################################ */}\n\n        {/* CLAIM LEVELS DETAILS ==================================================== */}\n        {props.thisClaim.claims.length > 0 &&\n          props.thisClaim.claims.map((claim, index) => (\n            <section className=\"flex flex-col px-2 pt-3\" key={index + claim.id}>\n              {/* CLAIM COMMENT ==>> LEVEL 1 ==================================================== */}\n              <div className=\"flex flex-col items-start gap-2\">\n                <div className=\"flex items-center gap-2 bg-blue-100 rounded py-1 px-2\">\n                  <MdInfoOutline />\n                  {getReasonById(props.thisClaim.default_claim_resaons)\n                    ? getReasonById(props.thisClaim.default_claim_resaons)!\n                        .reason\n                    : \"\"}\n                </div>\n                <p>{claim.reason}</p>\n                <span className=\"text-gray-500 text-xs\">\n                  {showDate(claim.createdAt)}\n                </span>\n              </div>\n\n              {/* RESPONSE OF LEVELS ======================================= */}\n              {isClaimEvaluated(props.thisClaim, claim.level) && (\n                <section className=\"mt-4\">\n                  <span className=\"text-gray-500 italic font-semibold\">\n                    Response (level {index + 1})\n                  </span>\n                  <div className=\"border-t-2\">\n                    <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n                      <span className={`italic`}>Status:</span>\n                      <span\n                        className={`font-bold ${\n                          claim.decision_taken_status ===\n                          ClaimDecisionStatus.REJECTED\n                            ? \"text-yellow-900\"\n                            : \"text-blue-600\"\n                        } rounded px-3 py-1`}\n                      >\n                        {capitalizeFirstLetter(\n                          claim.decision_taken_status.toLocaleLowerCase()\n                        )}\n                      </span>\n                    </div>\n                    <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n                      <span className={`italic`}>Evaluated by:</span>\n                      <span className=\"font-semibold\">\n                        {loading ? (\n                          <div className=\"w-24 h-3 rounded bg-gray-200 animate__animated animate__pulse animate__delay-5s animate__infinite\"></div>\n                        ) : (\n                          props.thisClaim.userDetails.user_info.fname +\n                          \" \" +\n                          props.thisClaim.userDetails.user_info.lname\n                        )}\n                      </span>\n                    </div>\n                    <div className=\"flex items-start gap-2 text-sm text-gray-600\">\n                      <span className={`italic`}>Reason:</span>\n                      <span className=\"font-normal\">\n                        {claim.evaluation_comment}\n                      </span>\n                    </div>\n                  </div>\n                </section>\n              )}\n              {/* CLAIM COMMENT ==>> LEVELS ==================================================== */}\n            </section>\n          ))}\n        {/* END CLAIM LEVELS DETAILS ==================================================== */}\n      </div>\n      <section>\n        {!props.reClaiming && (\n          <div className=\"mx-4 mb-5 mt-3 flex items-center justify-between\">\n            <span\n              className={`${\n                props.thisClaim.last_claim_status === ClaimStatus.PENDING\n                  ? \"text-yellow-700\"\n                  : props.thisClaim.last_claim_status === ClaimStatus.DELETED\n                  ? \"text-red-700\"\n                  : \"text-green-700\"\n              } italic font-semibold`}\n            >\n              {capitalizeFirstLetter(\n                props.thisClaim.last_claim_status.toLocaleLowerCase()\n              )}\n            </span>\n\n            {isReclaimAllowed(props.thisClaim) && (\n              <button\n                className=\"btn btn-blue\"\n                onClick={() => props.setReClaiming(true)}\n                disabled={props.loadingRequest}\n              >\n                Reclaim\n              </button>\n            )}\n          </div>\n        )}\n        {/* right part */}\n        {props.reClaiming && (\n          <div className=\"flex flex-col md:flex-row items-end md:items-start gap-1 w-full\">\n            <div className=\"w-full px-2\">\n              <textarea\n                placeholder={`Reason of your reclaim...`}\n                cols={50}\n                rows={3}\n                className={`border border-${\n                  props.formError && props.formError.element === \"comment\"\n                    ? \"red\"\n                    : \"gray\"\n                }-400 rounded px-3 py-1 w-full focus:outline-none`}\n                style={{ resize: \"none\" }}\n                value={props.reClaimingMsg}\n                onChange={(e) => {\n                  props.setReClaimingMsg(e.target.value);\n                  props.setFormError(null);\n                }}\n                disabled={props.loadingRequest}\n              ></textarea>\n              {props.formError && props.formError.element === \"comment\" && (\n                <p className=\"text-red-800\">{props.formError.msg}</p>\n              )}\n            </div>\n            <div className=\"flex flex-row md:flex-col gap-1 max-w-full px-2\">\n              <button\n                className=\"bg-gray-700 hover:bg-gray-800 px-4 py-2 font-semibold rounded text-white inline-flex items-center space-x-2 focus:outline-none\"\n                onClick={() => {\n                  props.setReClaimingMsg(\"\");\n                  props.setReClaiming(false);\n                  props.setFormError(null);\n                }}\n                disabled={props.loadingRequest}\n              >\n                <RiArrowGoBackFill className=\"w-5 h-5\" />\n                <span>Back</span>\n              </button>\n              <button\n                className=\"bg-blue-700 hover:bg-blue-800 px-4 py-2 font-semibold rounded text-white inline-flex items-center space-x-2 focus:outline-none\"\n                disabled={props.loadingRequest}\n                onClick={() => handleSubmit()}\n              >\n                {props.loadingRequest ? (\n                  <div className=\"\">Loading...</div>\n                ) : (\n                  <div className=\"inline-flex items-center space-x-2 gap-1\">\n                    <FaRegCheckCircle className=\"w-5 h-5\" />\n                    <span>Confirm</span>\n                  </div>\n                )}\n              </button>\n            </div>\n          </div>\n        )}\n        {/* end right part */}\n      </section>\n    </section>\n  );\n};\n\nconst mapStateToProps = ({\n  questionTypes,\n}: StoreState): {\n  questionTypes: questionTypesStoreInterface;\n} => {\n  return { questionTypes: questionTypes };\n};\n\nexport default React.memo(connect(mapStateToProps, {\n  loadQuestionTypes,\n  createReClaim,\n  PushPopupAlert,\n})(ClaimDocView));\n","import axios from \"axios\";\nimport React from \"react\";\nimport { FaRegCheckCircle } from \"react-icons/fa\";\nimport { RiArrowGoBackFill } from \"react-icons/ri\";\nimport { connect } from \"react-redux\";\nimport { PushPopupAlert } from \"../../actions\";\nimport { createReClaim } from \"../../actions/claiming\";\nimport {\n  CandidateClaimInterface,\n  ClaimDecisionStatus,\n  ClaimStatus,\n} from \"../../interfaces\";\nimport { candidatePlacementInterface } from \"../../interfaces/placement\";\nimport { PopupAlertTheme } from \"../../interfaces/popupAlert\";\nimport { capitalizeFirstLetter, isEmptyOrSpaces } from \"../../shared/dataTest\";\nimport { API } from \"../../utils/api\";\nimport { setAxiosToken } from \"../../utils/AxiosToken\";\nimport { errorToText, showDate } from \"../../utils/functions\";\n\nconst isReclaimAllowed = (thisClaim: CandidateClaimInterface): boolean => {\n  if (thisClaim.claim_level === 1) {\n    const _thisClaim = thisClaim.claims.find((item) => item.level === 1);\n    if (_thisClaim) {\n      if (_thisClaim.decision_taken_status === ClaimDecisionStatus.REJECTED) {\n        return true;\n      }\n    }\n  }\n  return false;\n};\n\nexport const isClaimEvaluated = (\n  thisClaim: CandidateClaimInterface,\n  level: number\n): boolean => {\n  const _thisClaim = thisClaim.claims.find(\n    (item) =>\n      item.level === level && item.claim_status === ClaimStatus.EVALUATED\n  );\n  if (_thisClaim) {\n    return true;\n  }\n  return false;\n};\n\ntype ClaimPlacementViewProps = {\n  myPlacement: candidatePlacementInterface;\n  thisClaim: CandidateClaimInterface;\n  loadingRequest: boolean;\n  setLoadingRequest: (value: boolean) => void;\n  reClaiming: boolean;\n  setReClaiming: (value: boolean) => void;\n  reClaimingMsg: string;\n  setReClaimingMsg: (value: string) => void;\n  formError: {\n    element: string;\n    msg: string;\n  } | null;\n  setFormError: (\n    value: {\n      element: string;\n      msg: string;\n    } | null\n  ) => void;\n\n  // REDUX DATA =====================\n  createReClaim: Function;\n  PushPopupAlert: Function;\n};\n\nconst ClaimPlacementView: React.FC<ClaimPlacementViewProps> = (props) => {\n  const handleSubmit = async () => {\n    if (isEmptyOrSpaces(props.reClaimingMsg)) {\n      return props.setFormError({\n        element: \"comment\",\n        msg: \"Claim comment is required!\",\n      });\n    }\n    if (!props.thisClaim) {\n      return props.PushPopupAlert({\n        title: \"Claim sent successful\",\n        theme: PopupAlertTheme.warning,\n      });\n    }\n\n    props.setLoadingRequest(true);\n    try {\n      setAxiosToken();\n      const res = await axios.put<CandidateClaimInterface>(\n        `${API.CLAIMING}/user/reclaim/${props.thisClaim._id}`,\n        {\n          reason: props.reClaimingMsg,\n        }\n      );\n      console.log({ res: res.data });\n      if (res.status === 201 || res.status === 200) {\n        props.createReClaim(res.data);\n        props.PushPopupAlert({\n          title: \"Claim sent successful\",\n          theme: PopupAlertTheme.success,\n        });\n        props.setReClaimingMsg(\"\");\n        props.setReClaiming(false);\n      }\n    } catch (error) {\n      console.error({ error });\n      props.PushPopupAlert({\n        title: errorToText(error),\n        theme: PopupAlertTheme.danger,\n      });\n    }\n    props.setLoadingRequest(false);\n  };\n\n  return (\n    <section className=\"\">\n      <div className=\"w-full bg-white px-4 py-1 divide-y-2 space-y-2\">\n        {/* DOCUMENT DETAILS ==================================================== */}\n        <section className=\"flex flex-col\">\n          <div className=\"flex items-center justify-between\">\n            <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n              <span className={`italic`}>School:</span>\n              <span className=\"text-gray-800 font-bold text-xl\">\n                {props.myPlacement.placed.school.school_name}\n              </span>\n            </div>\n          </div>\n          {/* <div className=\"flex items-center\">\n            <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n              <span className={`italic`}>Position:</span>\n              <span className=\"text-gray-800 font-bold text-xl\">\n                {props.myPlacement.placed.school.school_name}\n              </span>\n            </div>\n          </div> */}\n          <div className=\"flex items-center\">\n            <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n              <span className={`italic`}>District:</span>\n              <span className=\"text-gray-800 font-bold text-xl\">\n                {props.myPlacement.placed.school.district_id.district_name}\n              </span>\n            </div>\n          </div>\n        </section>\n        {/* END DOCUMENT DETAILS ==================================================== */}\n\n        {/* ################################################################################ */}\n\n        {/* CLAIM LEVELS DETAILS ==================================================== */}\n        {props.thisClaim.claims.length > 0 &&\n          props.thisClaim.claims.map((claim, index) => (\n            <section className=\"flex flex-col px-2 pt-3\" key={index + claim.id}>\n              {/* CLAIM COMMENT ==>> LEVEL 1 ==================================================== */}\n              <div className=\"flex flex-col items-start gap-2\">\n                <p>{claim.reason}</p>\n                <span className=\"text-gray-500 text-xs\">\n                  {showDate(claim.createdAt)}\n                </span>\n              </div>\n\n              {/* RESPONSE OF LEVELS ======================================= */}\n              {isClaimEvaluated(props.thisClaim, claim.level) && (\n                <section className=\"mt-4\">\n                  <span className=\"text-gray-500 italic font-semibold\">\n                    Response (level {index + 1})\n                  </span>\n                  <div className=\"border-t-2\">\n                    <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n                      <span className={`italic`}>Status:</span>\n                      <span\n                        className={`font-bold ${\n                          claim.decision_taken_status ===\n                          ClaimDecisionStatus.REJECTED\n                            ? \"text-yellow-900\"\n                            : \"text-blue-600\"\n                        } rounded px-3 py-1`}\n                      >\n                        {capitalizeFirstLetter(\n                          claim.decision_taken_status.toLocaleLowerCase()\n                        )}\n                      </span>\n                    </div>\n                    <div className=\"flex items-center gap-2 text-sm text-gray-600\">\n                      <span className={`italic`}>Evaluated by:</span>\n                      <span className=\"font-semibold\">\n                        {claim.evaluater.name}\n                      </span>\n                    </div>\n                    <div className=\"flex items-start gap-2 text-sm text-gray-600\">\n                      <span className={`italic`}>Reason:</span>\n                      <span className=\"font-normal\">\n                        {claim.evaluation_comment}\n                      </span>\n                    </div>\n                  </div>\n                </section>\n              )}\n              {/* CLAIM COMMENT ==>> LEVELS ==================================================== */}\n            </section>\n          ))}\n        {/* END CLAIM LEVELS DETAILS ==================================================== */}\n      </div>\n      <section>\n        {!props.reClaiming && (\n          <div className=\"mx-4 mb-5 mt-3 flex items-center justify-between\">\n            <span\n              className={`${\n                props.thisClaim.last_claim_status === ClaimStatus.PENDING\n                  ? \"text-yellow-700\"\n                  : props.thisClaim.last_claim_status === ClaimStatus.DELETED\n                  ? \"text-red-700\"\n                  : \"text-green-700\"\n              } italic font-semibold`}\n            >\n              {capitalizeFirstLetter(\n                props.thisClaim.last_claim_status.toLocaleLowerCase()\n              )}\n            </span>\n\n            {isReclaimAllowed(props.thisClaim) && (\n              <button\n                className=\"btn btn-blue\"\n                onClick={() => props.setReClaiming(true)}\n                disabled={props.loadingRequest}\n              >\n                Reclaim\n              </button>\n            )}\n          </div>\n        )}\n        {/* right part */}\n        {props.reClaiming && (\n          <div className=\"flex flex-col md:flex-row items-end md:items-start gap-1 w-full\">\n            <div className=\"w-full px-2\">\n              <textarea\n                placeholder={`Reason of your reclaim...`}\n                cols={50}\n                rows={3}\n                className={`border border-${\n                  props.formError && props.formError.element === \"comment\"\n                    ? \"red\"\n                    : \"gray\"\n                }-400 rounded px-3 py-1 w-full focus:outline-none`}\n                style={{ resize: \"none\" }}\n                value={props.reClaimingMsg}\n                onChange={(e) => {\n                  props.setReClaimingMsg(e.target.value);\n                  props.setFormError(null);\n                }}\n                disabled={props.loadingRequest}\n              ></textarea>\n              {props.formError && props.formError.element === \"comment\" && (\n                <p className=\"text-red-800\">{props.formError.msg}</p>\n              )}\n            </div>\n            <div className=\"flex flex-row md:flex-col gap-1 max-w-full px-2\">\n              <button\n                className=\"bg-gray-700 hover:bg-gray-800 px-4 py-2 font-semibold rounded text-white inline-flex items-center space-x-2 focus:outline-none\"\n                onClick={() => {\n                  props.setReClaimingMsg(\"\");\n                  props.setReClaiming(false);\n                  props.setFormError(null);\n                }}\n                disabled={props.loadingRequest}\n              >\n                <RiArrowGoBackFill className=\"w-5 h-5\" />\n                <span>Back</span>\n              </button>\n              <button\n                className=\"bg-blue-700 hover:bg-blue-800 px-4 py-2 font-semibold rounded text-white inline-flex items-center space-x-2 focus:outline-none\"\n                disabled={props.loadingRequest}\n                onClick={() => handleSubmit()}\n              >\n                {props.loadingRequest ? (\n                  <div className=\"\">Loading...</div>\n                ) : (\n                  <div className=\"inline-flex items-center space-x-2 gap-1\">\n                    <FaRegCheckCircle className=\"w-5 h-5\" />\n                    <span>Confirm</span>\n                  </div>\n                )}\n              </button>\n            </div>\n          </div>\n        )}\n        {/* end right part */}\n      </section>\n    </section>\n  );\n};\n\nexport default React.memo(connect(null, {\n  createReClaim,\n  PushPopupAlert,\n})(ClaimPlacementView));\n","import React, { useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Auth, PushPopupAlert } from \"../../../actions\";\nimport {\n  GetClaimingTypes,\n  getMyRejectedApplications,\n  getMyRejectedDocuments,\n  setSelectedClaimType,\n} from \"../../../actions/claiming\";\nimport { PopupAlertData } from \"../../../components/Alert/Popup\";\nimport { MainItem } from \"../../../components/Navigation/SideNavigation\";\nimport { ClaimStatus, PlansTypeKeys } from \"../../../interfaces\";\nimport { PopupAlertTheme } from \"../../../interfaces/popupAlert\";\nimport { StoreState } from \"../../../reducers\";\nimport { ClaimingReducerType } from \"../../../reducers/claiming\";\n\ntype FilterByTypeProps = {\n  // thisClaimType: ClaimTypesInterface | \"ALL\";\n  // setThisClaimType: React.Dispatch<\n  //   React.SetStateAction<ClaimTypesInterface | \"ALL\">\n  // >;\n  loadingClaims: boolean;\n  FC_CountByType?: Function;\n\n  // REDUX PROPS =======================================\n  auth: Auth;\n  claiming: ClaimingReducerType;\n  GetClaimingTypes: Function;\n  setSelectedClaimType: Function;\n  getMyRejectedApplications: Function;\n  getMyRejectedDocuments: Function;\n  PushPopupAlert: (alert: PopupAlertData) => void;\n};\n\nconst FilterByType: React.FC<FilterByTypeProps> = (props) => {\n  const [loading, setLoading] = useState<boolean>(true);\n  const [loadingRejectedApplications, setLoadingRejectedApplications] =\n    useState<boolean>(true);\n  const [loadingRejectedDocuments, setLoadingRejectedDocuments] =\n    useState<boolean>(true);\n  const [loadingClaimTypes, setLoadingClaimTypes] = useState<boolean>(true);\n\n  useEffect(() => {\n    if (props.claiming.candidateApplications === null) {\n      props.getMyRejectedApplications(\n        props.auth.user.user_id,\n        (status: boolean, msg: string) => {\n          if (status === false) {\n            if (msg.length > 0) {\n              props.PushPopupAlert({\n                title: msg,\n                theme: PopupAlertTheme.danger,\n              });\n            }\n            setLoadingRejectedApplications(false);\n          }\n        }\n      );\n    } else if (loadingRejectedApplications) {\n      setLoadingRejectedApplications(false);\n    }\n\n    if (props.claiming.candidateDocuments === null) {\n      console.log(\"filterrrrrrrrrrrrrrrrrrrr loadingRejectedDocuments\");\n      props.getMyRejectedDocuments((status: boolean, msg: string) => {\n        if (status === false) {\n          if (msg.length > 0) {\n            props.PushPopupAlert({\n              title: msg,\n              theme: PopupAlertTheme.danger,\n            });\n          }\n          setLoadingRejectedDocuments(false);\n        }\n      });\n    } else if (loadingRejectedDocuments) {\n      setLoadingRejectedDocuments(false);\n    }\n\n    if (props.claiming.claimTypes === null) {\n      props.GetClaimingTypes((status: boolean, msg: string) => {\n        if (status === false) {\n          if (msg.length > 0) {\n            props.PushPopupAlert({\n              title: msg,\n              theme: PopupAlertTheme.danger,\n            });\n          }\n          setLoadingClaimTypes(false);\n        }\n      });\n    } else if (loadingClaimTypes) {\n      setLoadingClaimTypes(false);\n    }\n\n    if (\n      !loadingRejectedApplications &&\n      !loadingRejectedDocuments &&\n      !loadingClaimTypes &&\n      loading\n    ) {\n      setLoading(false);\n    }\n  }, [\n    loading,\n    loadingClaimTypes,\n    loadingRejectedApplications,\n    loadingRejectedDocuments,\n    props,\n  ]);\n\n  const countClaims = (\n    claiming: ClaimingReducerType,\n    thisType: PlansTypeKeys | \"all\"\n  ): number => {\n    let result: number = 0;\n\n    if (claiming.myClaims && thisType === \"all\") {\n      result = claiming.myClaims.filter(\n        (item) =>\n          item.last_claim_status !== ClaimStatus.DELETED &&\n          item.last_claim_status !== ClaimStatus.COMPLETED\n      ).length;\n    }\n    if (claiming.myClaims && thisType !== \"all\") {\n      result = claiming.myClaims.filter(\n        (item) =>\n          item.type_key === thisType &&\n          item.last_claim_status !== ClaimStatus.DELETED &&\n          item.last_claim_status !== ClaimStatus.COMPLETED\n      ).length;\n    }\n\n    return result;\n  };\n\n  return (\n    <React.Fragment>\n      <span className=\"mt-2 text-sm\">Filter by claim type</span>\n      {/* WHILE LOADING DATA ================================== */}\n      {(loading || props.loadingClaims) && (\n        <section className=\"space-y-2\">\n          <div className=\"w-full h-7 rounded bg-gray-200 animate__animated animate__pulse animate__delay-5s animate__infinite\"></div>\n          <div className=\"w-full h-7 rounded bg-gray-200 animate__animated animate__pulse animate__delay-5s animate__infinite\"></div>\n          <div className=\"w-full h-7 rounded bg-gray-200 animate__animated animate__pulse animate__delay-5s animate__infinite\"></div>\n          <div className=\"w-full h-7 rounded bg-gray-200 animate__animated animate__pulse animate__delay-5s animate__infinite\"></div>\n        </section>\n      )}\n      {/* END WHILE LOADING DATA ================================== */}\n\n      {/* AFTER LOADING DATA ================================== */}\n      {!loading && !props.loadingClaims && (\n        <section>\n          {/* ALL ================================= */}\n          <div\n            className=\"mt-2\"\n            onClick={() => {\n              // props.setThisClaimType(\"ALL\");\n              props.setSelectedClaimType(\"all\");\n            }}\n          >\n            <MainItem\n              title=\"All\"\n              active={props.claiming.selectedClaimType === \"all\"}\n              count={countClaims(props.claiming, \"all\")}\n            />\n          </div>\n          {/* APPLICATION ================================= */}\n          <div\n            className=\"mt-2\"\n            onClick={() => {\n              // props.setThisClaimType(ClaimTypesInterface.DOCUMENT);\n              props.setSelectedClaimType(PlansTypeKeys.APPLICATION);\n            }}\n          >\n            <MainItem\n              title={\"Application\"}\n              active={\n                props.claiming.selectedClaimType !== \"all\" &&\n                props.claiming.selectedClaimType === PlansTypeKeys.APPLICATION\n              }\n              count={countClaims(props.claiming, PlansTypeKeys.APPLICATION)}\n            />\n          </div>\n          {/* DOCUMENT ================================= */}\n          <div\n            className=\"mt-2\"\n            onClick={() => {\n              props.setSelectedClaimType(PlansTypeKeys.DOCUMENT_VALIDATION);\n            }}\n          >\n            <MainItem\n              title={\"Document\"}\n              active={\n                props.claiming.selectedClaimType !== \"all\" &&\n                props.claiming.selectedClaimType ===\n                  PlansTypeKeys.DOCUMENT_VALIDATION\n              }\n              count={countClaims(\n                props.claiming,\n                PlansTypeKeys.DOCUMENT_VALIDATION\n              )}\n            />\n          </div>\n          {/* EXAMINATION ================================= */}\n          <div\n            className=\"mt-2\"\n            onClick={() => {\n              props.setSelectedClaimType(PlansTypeKeys.EXAMINATION);\n            }}\n          >\n            <MainItem\n              title={\"Exam\"}\n              active={\n                props.claiming.selectedClaimType !== \"all\" &&\n                props.claiming.selectedClaimType === PlansTypeKeys.EXAMINATION\n              }\n              count={countClaims(props.claiming, PlansTypeKeys.EXAMINATION)}\n            />\n          </div>\n          {/* PLACEMENT TRANSFER ================================= */}\n          {false && (\n            <div\n              className=\"mt-2\"\n              onClick={() => {\n                props.setSelectedClaimType(PlansTypeKeys.PLACEMENT_TRANSFER);\n              }}\n            >\n              <MainItem\n                title={\"Placement\"}\n                active={\n                  props.claiming.selectedClaimType !== \"all\" &&\n                  props.claiming.selectedClaimType ===\n                    PlansTypeKeys.PLACEMENT_TRANSFER\n                }\n                count={countClaims(\n                  props.claiming,\n                  PlansTypeKeys.PLACEMENT_TRANSFER\n                )}\n              />\n            </div>\n          )}\n          {/* <div\n            className=\"mt-2\"\n            onClick={() => {\n              props.setThisClaimType(ClaimTypesInterface.APPLICATION);\n            }}\n          >\n            <MainItem\n              title={capitalizeFirstLetter(ClaimTypesInterface.APPLICATION)}\n              active={props.thisClaimType === ClaimTypesInterface.APPLICATION}\n              count={countClaims(props.claiming).applications}\n            />\n          </div>\n          <div\n            className=\"mt-2\"\n            onClick={() => {\n              props.setThisClaimType(ClaimTypesInterface.PLACEMENT);\n            }}\n          >\n            <MainItem\n              title={capitalizeFirstLetter(ClaimTypesInterface.PLACEMENT)}\n              active={props.thisClaimType === ClaimTypesInterface.PLACEMENT}\n              count={countClaims(props.claiming).placement}\n            />\n          </div> */}\n        </section>\n      )}\n      {/* END AFTER LOADING DATA ================================== */}\n    </React.Fragment>\n  );\n};\n\nconst mapStateToProps = ({\n  auth,\n  claiming,\n}: StoreState): { auth: Auth; claiming: ClaimingReducerType } => {\n  return { auth, claiming };\n};\n\nexport default React.memo(\n  connect(mapStateToProps, {\n    GetClaimingTypes,\n    setSelectedClaimType,\n    getMyRejectedApplications,\n    getMyRejectedDocuments,\n    PushPopupAlert,\n  })(FilterByType)\n);\n","import React, { useEffect, useState } from \"react\";\nimport { isEmptyOrSpaces } from \"../../shared/dataTest\";\n\ntype ViewPDFProps = {\n  file_url: string;\n  class_name: string;\n  frame_title: string;\n  setLoadingFile: (state: boolean) => void;\n};\n\nconst ViewPDF: React.FC<ViewPDFProps> = (props) => {\n  const [loading, setLoading] = useState<boolean>(true);\n  const [error, setError] = useState<{ element: string; msg: string } | null>(\n    null\n  );\n  useEffect(() => {\n    if (loading) {\n      if (isEmptyOrSpaces(props.file_url)) {\n        setError({ element: \"PDF_FILE\", msg: \"File url is required\" });\n      } else if (error !== null) {\n        setError(null);\n      }\n      setLoading(false);\n    }\n  }, [error, loading, props.file_url]);\n\n  return (\n    <div className=\"w-full\">\n      {error ? (\n        <div className=\"alert-warning mt-2 mx-14\">{error.msg}</div>\n      ) : (\n        <object\n          data={props.file_url}\n          type=\"application/pdf\"\n          className={props.class_name}\n          onLoad={() => props.setLoadingFile(false)}\n        >\n          <iframe\n            src={props.file_url}\n            className={props.class_name}\n            title={props.frame_title}\n            onLoad={() => props.setLoadingFile(false)}\n          >\n            <p>This browser does not support PDF!</p>\n          </iframe>\n        </object>\n      )}\n    </div>\n  );\n};\n\nexport default ViewPDF;\n"],"sourceRoot":""}